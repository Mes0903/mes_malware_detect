
2a9229111fa91637ecf721697476d43e1a9163fb7a6f84ae54ed1a284ce9cca1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [edi],esp
  402e93:	ins    BYTE PTR es:[edi],dx
  402e94:	dec    ebx
  402e95:	std    
  402e96:	jl     0x402f14
  402e98:	jl     0x402f16
  402e9a:	loopne 0x402efb
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax+0x69],0x6d6c6c63
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	push   ss
  402f42:	mov    edx,0x21721ce5
  402f47:	mov    esp,0xb5dc42a9
  402f4c:	cli    
  402f4d:	stos   DWORD PTR es:[edi],eax
  402f4e:	int3   
  402f4f:	shl    BYTE PTR [eax+ecx*1-0xd],0x1a
  402f54:	ds loop 0x402fb4
  402f57:	mov    dl,0x75
  402f59:	sub    ah,al
  402f5b:	push   ds
  402f5c:	pop    ebx
  402f5d:	sub    edx,0xf9060c6d
  402f63:	cmc    
  402f64:	xor    BYTE PTR [esp+eax*8],dh
  402f67:	loop   0x402fab
  402f69:	std    
  402f6a:	or     bh,BYTE PTR [ebx]
  402f6c:	dec    edx
  402f6d:	loop   0x402f5c
  402f6f:	fstp   QWORD PTR [esi+0x3b]
  402f72:	(bad)  [ebx]
  402f74:	shl    DWORD PTR [edi],cl
  402f76:	arpl   WORD PTR [ebp-0x57f32c39],cx
  402f7c:	out    0x76,eax
  402f7e:	inc    esp
  402f7f:	inc    eax
  402f80:	ficomp WORD PTR [esi+0x695ba97f]
  402f86:	call   DWORD PTR [esi+0x3c]
  402f89:	mov    dh,0x94
  402f8b:	inc    ecx
  402f8c:	retf   
  402f8d:	aaa    
  402f8e:	outs   dx,DWORD PTR ds:[esi]
  402f8f:	push   esp
  402f90:	inc    BYTE PTR [esi]
  402f92:	sar    BYTE PTR [edi+0x43],cl
  402f95:	mov    dh,0x9b
  402f97:	int    0xa8
  402f99:	test   DWORD PTR [ebp-0x5b],ecx
  402f9c:	int    0x7a
  402f9e:	jp     0x402ff9
  402fa0:	dec    ecx
  402fa1:	(bad)  
  402fa2:	into   
  402fa3:	lar    eax,WORD PTR [eax+0x4a9d9f86]
  402faa:	pop    ecx
  402fab:	pop    edx
  402fac:	dec    eax
  402fad:	(bad)  
  402fae:	dec    ecx
  402faf:	(bad)  
  402fb0:	jle    0x402f7a
  402fb2:	(bad)  
  402fb3:	test   BYTE PTR [ecx-0x6049b716],0xb9
  402fba:	ret    0x9f70
  402fbd:	das    
  402fbe:	popa   
  402fbf:	cli    
  402fc0:	xor    esi,DWORD PTR ds:0xb0e36a62
  402fc6:	add    ah,BYTE PTR [ecx+0x41e43862]
  402fcc:	sub    al,0x76
  402fce:	push   ss
  402fcf:	loope  0x402f56
  402fd1:	jno    0x402ff5
  402fd3:	push   ds
  402fd4:	adc    ebp,DWORD PTR [edi-0x60]
  402fd7:	jp     0x403026
  402fd9:	add    ebx,DWORD PTR ds:0x2921eebe
  402fdf:	(bad)  
  402fe0:	aam    0xb5
  402fe2:	rcl    esi,0x59
  402fe5:	add    eax,0x6d2770fe
  402fea:	mov    ecx,0xf94b9126
  402fef:	out    dx,al
  402ff0:	rcl    DWORD PTR [esi-0x7e894880],0xb4
  402ff7:	sub    esi,DWORD PTR [esi+0x9]
  402ffa:	xchg   DWORD PTR [edx],esi
  402ffc:	sti    
  402ffd:	jle    0x403042
  402fff:	jle    0x403054
  403001:	mov    edx,0x2764be91
  403006:	cmp    cl,cl
  403008:	pop    ds
  403009:	je     0x402fc9
  40300b:	js     0x402fb4
  40300d:	cld    
  40300e:	shl    BYTE PTR [ecx],0x9b
  403011:	dec    esi
  403012:	ins    BYTE PTR es:[edi],dx
  403013:	xor    al,0xd2
  403015:	mov    al,ds:0xe2310f16
  40301a:	sbb    al,0x85
  40301c:	adc    ch,cl
  40301e:	mov    esp,0x77ba10b9
  403023:	pop    ebp
  403024:	xor    eax,0x413e725
  403029:	daa    
  40302a:	and    eax,DWORD PTR [eax-0x17]
  40302d:	dec    esi
  40302e:	sub    ecx,DWORD PTR [esi]
  403030:	in     al,0xc
  403032:	xor    edi,ebx
  403034:	sbb    eax,0x33982626
  403039:	and    eax,0x68413bbd
  40303e:	sub    DWORD PTR [esi-0x56c8b71c],0x17c57194
  403048:	stc    
  403049:	jno    0x40305b
  40304b:	jmp    0xdd9:0xec24979b
  403052:	cmp    ch,BYTE PTR [ebp+0x58a8d63]
  403058:	leave  
  403059:	adc    ebp,DWORD PTR [eax+0x3f]
  40305c:	xchg   edi,eax
  40305d:	es mov ebp,0x87f00776
  403063:	mov    ah,0x4f
  403065:	test   BYTE PTR [edi],ch
  403067:	fcomp  DWORD PTR [eax+edi*4-0x4c67cabc]
  40306e:	inc    eax
  40306f:	fcmovb st,st(5)
  403071:	ins    BYTE PTR es:[edi],dx
  403072:	pop    ss
  403073:	push   eax
  403074:	adc    BYTE PTR [esi+0x12ec56cd],0xf8
  40307b:	pop    esp
  40307c:	xchg   ecx,eax
  40307d:	xchg   edx,eax
  40307e:	fdiv   DWORD PTR [edx+eax*4]
  403081:	push   ds
  403082:	mov    esp,esp
  403084:	sub    eax,0xdb56a9ab
  403089:	dec    esi
  40308a:	jg     0x4030cd
  40308c:	out    dx,eax
  40308d:	push   ds
  40308e:	pop    es
  40308f:	xchg   esi,ecx
  403091:	dec    edi
  403092:	xor    eax,0xa6b80e1b
  403097:	in     eax,0x55
  403099:	dec    eax
  40309a:	mov    ebx,0x423c82f0
  40309f:	(bad)  
  4030a0:	or     eax,0x8277dac8
  4030a5:	enter  0x10fa,0x55
  4030a9:	jnp    0x4030bb
  4030ab:	or     al,0x76
  4030ad:	jne    0x4030f4
  4030af:	(bad)  
  4030b0:	lahf   
  4030b1:	ret    
  4030b2:	push   edx
  4030b3:	cmp    esi,0xffffffaf
  4030b6:	pop    ss
  4030b7:	mov    esi,0x9d3a2d01
  4030bc:	or     eax,esi
  4030be:	pushf  
  4030bf:	out    dx,al
  4030c0:	popa   
  4030c1:	ret    0xa7a7
  4030c4:	fsubr  DWORD PTR [ebx-0x13]
  4030c7:	lods   eax,DWORD PTR ds:[esi]
  4030c8:	outs   dx,DWORD PTR ds:[esi]
  4030c9:	popf   
  4030ca:	cmc    
  4030cb:	mov    eax,0xf8457716
  4030d0:	hlt    
  4030d1:	data16 arpl WORD PTR [edi],bp
  4030d4:	es sbb eax,0x7c31ff57
  4030da:	pop    ds
  4030db:	shr    DWORD PTR [edx-0x11],cl
  4030de:	sub    edi,DWORD PTR [edx]
  4030e0:	dec    esp
  4030e1:	push   0x55
  4030e3:	popa   
  4030e4:	int3   
  4030e5:	loope  0x403095
  4030e7:	ror    DWORD PTR [edx-0x34e3e5d4],0x36
  4030ee:	out    0x14,al
  4030f0:	dec    edi
  4030f1:	mov    eax,es:0x14adb597
  4030f7:	sti    
  4030f8:	cmp    bh,dh
  4030fa:	pop    esp
  4030fb:	dec    edx
  4030fc:	push   0x7784bff5
  403101:	inc    esi
  403102:	(bad)  
  403103:	in     eax,0xf1
  403105:	test   BYTE PTR [esi],dl
  403107:	popf   
  403108:	inc    esp
  403109:	sahf   
  40310a:	jg     0x4030f7
  40310c:	inc    esp
  40310d:	je     0x40311e
  40310f:	pop    esi
  403110:	std    
  403111:	jle    0x4030e3
  403113:	and    ebx,DWORD PTR [ebp+0x387d27b8]
  403119:	mov    eax,ds:0x92685766
  40311e:	pop    edx
  40311f:	stos   BYTE PTR es:[edi],al
  403120:	add    bh,BYTE PTR [esi+edx*8-0x3731eff6]
  403127:	and    ch,BYTE PTR [edx-0x2c]
  40312a:	imul   esi,DWORD PTR [eax+edx*8],0x973ddbf0
  403131:	cmp    BYTE PTR [edx+0x20],dh
  403134:	sti    
  403135:	jo     0x403134
  403137:	and    DWORD PTR [ebx-0x1f036cfc],0x10
  40313e:	setbe  BYTE PTR [esi]
  403141:	xchg   ebx,eax
  403142:	mov    fs,edi
  403144:	jbe    0x40318b
  403146:	xchg   ecx,eax
  403147:	mov    eax,0x164a25e
  40314c:	je     0x4030fe
  40314e:	out    dx,al
  40314f:	mov    ebp,0xd5279fca
  403154:	jns    0x40311f
  403156:	ja     0x4030fc
  403158:	and    ch,BYTE PTR [edx]
  40315a:	jnp    0x403124
  40315c:	dec    edi
  40315d:	sbb    eax,0xc21bcd33
  403162:	mov    al,0x83
  403164:	jb     0x4031a5
  403166:	sti    
  403167:	pop    esi
  403168:	mov    dh,0x56
  40316a:	ret    
  40316b:	cmp    eax,0x2f3fc1f4
  403170:	fisttp QWORD PTR [edx]
  403172:	sbb    ecx,DWORD PTR [edi+0x3f1e0222]
  403178:	push   edx
  403179:	xchg   ecx,eax
  40317a:	in     al,0x87
  40317c:	fwait
  40317d:	fs adc al,0x62
  403180:	push   0xd
  403182:	mov    al,ds:0x7a181813
  403187:	call   0x8b7:0x364eb91
  40318e:	jns    0x4031ee
  403190:	enter  0x4bbb,0x43
  403194:	(bad)  
  403195:	sbb    eax,0x536d5a1b
  40319a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40319b:	mov    DWORD PTR ds:0xcf0a1878,edx
  4031a1:	pop    edi
  4031a2:	inc    ebx
  4031a3:	mov    edx,0x62bd713d
  4031a8:	add    ebp,DWORD PTR [edx]
  4031aa:	sub    bl,bl
  4031ac:	mov    ch,0x98
  4031ae:	fucomi st,st(5)
  4031b0:	test   BYTE PTR [eax+0x48c9521b],0xc3
  4031b7:	(bad)  
  4031b8:	aaa    
  4031b9:	call   FWORD PTR [esi]
  4031bb:	repz es mov esi,0xc5f4b3fd
  4031c2:	dec    edi
  4031c3:	sbb    ebx,DWORD PTR [edi-0x48bea07e]
  4031c9:	xor    al,0x50
  4031cb:	std    
  4031cc:	push   edx
  4031cd:	or     al,0x94
  4031cf:	js     0x40317a
  4031d1:	mov    esi,0x8723f383
  4031d6:	mov    ah,0x81
  4031d8:	mov    al,0x81
  4031da:	in     al,0x14
  4031dc:	imul   eax,DWORD PTR [ebx-0x6],0xffb6a393
  4031e3:	mov    dh,0x19
  4031e5:	iret   
  4031e6:	cdq    
  4031e7:	sbb    eax,0xfa4a8785
  4031ec:	sub    edi,ebx
  4031ee:	push   cs
  4031ef:	cmp    al,BYTE PTR [eax+eiz*4+0x27708985]
  4031f6:	cmp    eax,0x8075b6a7
  4031fb:	inc    edi
  4031fc:	sub    al,0x6e
  4031fe:	adc    DWORD PTR [eax-0x5f0dcc6c],0x27494aee
  403208:	(bad)  
  403209:	popa   
  40320a:	iret   
  40320b:	cmp    bl,bl
  40320d:	and    DWORD PTR [edx-0x5c44c222],esp
  403213:	data16 xor ch,cl
  403216:	icebp  
  403217:	ds lock loop 0x4031c0
  40321b:	div    BYTE PTR fs:[eax-0x6c824f1e]
  403222:	xchg   esp,eax
  403223:	mov    dh,0x79
  403225:	ret    0x2f7
  403228:	push   ebp
  403229:	arpl   ax,si
  40322b:	shr    DWORD PTR ds:[ecx+0x54],1
  40322f:	cdq    
  403230:	cmp    ecx,DWORD PTR [ecx+edi*8-0x1bbcb043]
  403237:	push   edi
  403238:	adc    ebx,DWORD PTR [edi+0x5e]
  40323b:	sbb    edi,ebp
  40323d:	sbb    DWORD PTR ds:0xce29c461,esp
  403243:	lods   al,BYTE PTR ds:[esi]
  403244:	push   es
  403245:	out    0x72,al
  403247:	fwait
  403248:	js     0x40322a
  40324a:	je     0x4032b8
  40324c:	add    ebx,ebp
  40324e:	hlt    
  40324f:	sbb    eax,0xdcc20d2d
  403254:	mov    ds:0x698d6b19,eax
  403259:	dec    ebp
  40325a:	push   ebx
  40325b:	into   
  40325c:	arpl   WORD PTR [ebp+0x2c],bx
  40325f:	push   ecx
  403260:	mov    eax,ds:0x75e2fa42
  403265:	sub    DWORD PTR [edx*4+0x2b2c4dc2],edx
  40326c:	or     bh,BYTE PTR [edi-0x13]
  40326f:	xchg   BYTE PTR [edx],bh
  403271:	int    0xd1
  403273:	ds push edi
  403275:	cwde   
  403276:	mov    dh,0xbd
  403278:	push   ebp
  403279:	cmp    esi,DWORD PTR [ecx]
  40327b:	les    ebx,FWORD PTR [ebp+eiz*8-0x57]
  40327f:	stc    
  403280:	xchg   edx,eax
  403281:	xchg   edi,eax
  403282:	(bad)  [ecx+0x2]
  403285:	adc    eax,DWORD PTR [ecx+0x5e]
  403288:	dec    esp
  403289:	mov    fs,esi
  40328b:	cwde   
  40328c:	adc    edx,0x51efe7d2
  403292:	push   eax
  403293:	push   esp
  403294:	push   0xe68735a
  403299:	ficomp WORD PTR [edi+ecx*4+0x5722683c]
  4032a0:	test   DWORD PTR [ebx+0x1fc36ce],esp
  4032a6:	lods   eax,DWORD PTR ds:[esi]
  4032a7:	fisttp WORD PTR [edx+0x6e191838]
  4032ad:	or     dl,BYTE PTR [esi]
  4032af:	test   dh,bl
  4032b1:	ret    
  4032b2:	inc    eax
  4032b3:	and    BYTE PTR [edi-0xc],cl
  4032b6:	popa   
  4032b7:	mov    eax,ds:0x60c881ae
  4032bc:	or     edi,DWORD PTR [ecx-0x26]
  4032bf:	push   0xffffffce
  4032c1:	das    
  4032c2:	pop    esp
  4032c3:	ret    0xda41
  4032c6:	xor    dh,0x66
  4032c9:	push   eax
  4032ca:	rcl    esi,1
  4032cc:	sub    DWORD PTR [esi],ebx
  4032ce:	mov    ebp,0x85f0bc5a
  4032d3:	in     al,0x32
  4032d5:	cwde   
  4032d6:	cmp    al,0xbe
  4032d8:	out    0x27,eax
  4032da:	mov    cl,0x66
  4032dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032dd:	push   0xffffff89
  4032df:	loopne 0x4032a8
  4032e1:	(bad)  
  4032e2:	stc    
  4032e3:	stos   BYTE PTR es:[edi],al
  4032e4:	lea    ebx,[ebp+0x57a786e2]
  4032ea:	neg    DWORD PTR [edx-0x1c8ee3e4]
  4032f0:	scas   eax,DWORD PTR es:[edi]
  4032f1:	call   FWORD PTR ss:[eax-0x4dca376c]
  4032f8:	sahf   
  4032f9:	jns    0x4032ec
  4032fb:	aaa    
  4032fc:	inc    esi
  4032fd:	lahf   
  4032fe:	xchg   BYTE PTR [ebx+ebp*8-0x5d67ca02],al
  403305:	xor    eax,0x633b0
  40330a:	aaa    
  40330b:	xor    esp,DWORD PTR [edx-0x51]
  40330e:	dec    ebp
  40330f:	fnsave [ecx+0x72]
  403312:	push   ecx
  403313:	mov    ebp,0x8a8db14d
  403318:	mov    al,0x98
  40331a:	pop    es
  40331b:	sub    al,0x3b
  40331d:	hlt    
  40331e:	dec    ebp
  40331f:	mov    ds:0x1cdfede7,eax
  403324:	nop    DWORD PTR [ebx+ecx*4-0x1574e9]
  40332c:	xchg   edi,eax
  40332d:	mov    ebx,0xefd57830
  403332:	dec    ecx
  403333:	call   0xf964:0xb9e55c2a
  40333a:	sub    eax,0x96d01aeb
  40333f:	xchg   ebx,eax
  403340:	es inc edx
  403342:	in     al,dx
  403343:	jnp    0x40330c
  403345:	sar    ecx,0x52
  403348:	push   ss
  403349:	imul   edi,DWORD PTR [ebp+0x697f4f3c],0x65
  403350:	dec    edi
  403351:	fcom   QWORD PTR [esi]
  403353:	xor    eax,0xfe5126ea
  403358:	popf   
  403359:	outs   dx,DWORD PTR ds:[esi]
  40335a:	call   0x5f550a44
  40335f:	enter  0x350d,0xe1
  403363:	lock push esp
  403365:	cs pop ebp
  403367:	in     eax,0x5d
  403369:	adc    BYTE PTR [esi+0x562dd01a],dl
  40336f:	arpl   WORD PTR [edi+0x5c],si
  403372:	and    DWORD PTR [edi-0xf],eax
  403375:	jl     0x4033a5
  403377:	enter  0x4641,0xfb
  40337b:	cmc    
  40337c:	popa   
  40337d:	or     edx,DWORD PTR [eax+eiz*2+0x52dade1c]
  403384:	or     DWORD PTR [ebp-0x5411aaaf],edi
  40338a:	inc    edi
  40338b:	into   
  40338c:	retf   0x944a
  40338f:	(bad)  
  403390:	in     eax,dx
  403391:	jo     0x403343
  403393:	inc    ecx
  403394:	mov    edx,0x21b8fce7
  403399:	rcl    DWORD PTR [edx-0x7ec112f9],cl
  40339f:	xor    edi,DWORD PTR [esi-0x2c]
  4033a2:	(bad)  [edi]
  4033a4:	sar    bl,cl
  4033a6:	enter  0xc1b0,0x90
  4033aa:	fisub  DWORD PTR [ebx-0x40820b93]
  4033b0:	ror    ecx,0x43
  4033b3:	jle    0x4033aa
  4033b5:	lahf   
  4033b6:	int3   
  4033b7:	adc    esp,ebp
  4033b9:	add    BYTE PTR [edx+eax*8+0x71],dh
  4033bd:	mov    BYTE PTR [ecx],0x7e
  4033c0:	lock test eax,0x18dee5ec
  4033c6:	imul   edi,DWORD PTR ds:0x7b75ec0,0x14ca0aa2
  4033d0:	in     al,dx
  4033d1:	mov    cl,0xab
  4033d3:	jmp    0x2a70:0x22b29549
  4033da:	arpl   WORD PTR [ecx],cx
  4033dc:	dec    ebx
  4033dd:	jns    0x403407
  4033df:	pusha  
  4033e0:	adc    DWORD PTR [edi-0x7d],eax
  4033e3:	push   ss
  4033e4:	fwait
  4033e5:	sahf   
  4033e6:	pop    edx
  4033e7:	pop    ebx
  4033e8:	std    
  4033e9:	sub    al,0x2d
  4033eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033ec:	xchg   edx,eax
  4033ed:	into   
  4033ee:	aas    
  4033ef:	cwde   
  4033f0:	mov    ah,0xf1
  4033f2:	xchg   esp,eax
  4033f3:	mov    ah,0xe8
  4033f5:	or     ebp,DWORD PTR [ebp-0x3ed42f3d]
  4033fb:	mov    edi,0xe16f8693
  403400:	xchg   ebp,eax
  403401:	cmp    edx,ecx
  403403:	add    esp,DWORD PTR [ecx+0x57c84bdc]
  403409:	stos   DWORD PTR es:[edi],eax
  40340a:	pop    ss
  40340b:	mov    DWORD PTR [ebx-0x1610441b],eax
  403411:	lahf   
  403412:	retf   
  403413:	loop   0x403422
  403415:	xor    ah,BYTE PTR [ecx+0x1b]
  403418:	(bad)  [eax+0x0]
  40341b:	popa   
  40341c:	jmp    0x4033af
  40341e:	cs jae 0x403436
  403421:	xlat   BYTE PTR ds:[ebx]
  403422:	and    DWORD PTR [ebx],edx
  403424:	or     eax,0xc237530f
  403429:	sub    ah,dl
  40342b:	(bad)  
  40342c:	pop    edi
  40342d:	aad    0xc2
  40342f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403430:	arpl   WORD PTR [edi],sp
  403432:	ins    DWORD PTR es:[edi],dx
  403433:	jns    0x4034a8
  403435:	push   ebx
  403436:	mov    bl,0x5d
  403438:	and    eax,0x1a05a8d7
  40343d:	push   0xa830264b
  403442:	pop    DWORD PTR [eax+0x78]
  403445:	icebp  
  403446:	add    BYTE PTR [edx-0x65f139d4],bh
  40344c:	es stos BYTE PTR es:[edi],al
  40344e:	xchg   DWORD PTR [ebx+0x7ad483ee],ebp
  403454:	mov    al,ds:0xfa76d7ad
  403459:	fs inc edi
  40345b:	add    eax,0xb487e054
  403460:	and    DWORD PTR ds:0xb4865fd6,ebp
  403466:	arpl   WORD PTR [edi-0x42],cx
  403469:	and    eax,0x450d35b2
  40346e:	jp     0x4034a8
  403470:	arpl   cx,sp
  403472:	rcl    ebx,0x5b
  403475:	dec    ebp
  403476:	pop    ecx
  403477:	adc    eax,0xa923eecf
  40347c:	pop    edi
  40347d:	mov    WORD PTR [esi],?
  40347f:	ror    bl,1
  403481:	(bad)  
  403482:	xor    DWORD PTR [edi+0x45d2445],eax
  403488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403489:	cmp    eax,0xe51e9e5d
  40348e:	addr16 dec ecx
  403490:	mov    cl,0xe9
  403492:	das    
  403493:	xchg   DWORD PTR [ebx+0x30511c56],eax
  403499:	jg     0x4034ea
  40349b:	xor    eax,0x5341f0a1
  4034a0:	push   ecx
  4034a1:	cmp    ebx,ecx
  4034a3:	mov    cl,0xbf
  4034a5:	lds    ecx,FWORD PTR [ebp-0x55b2d7b8]
  4034ab:	or     eax,0x2ff8d284
  4034b0:	cmp    al,0x81
  4034b2:	jae    0x40347a
  4034b4:	rol    BYTE PTR [edx+0x4dcaf8d7],0x8c
  4034bb:	cmc    
  4034bc:	jbe    0x403463
  4034be:	enter  0xdc4c,0xeb
  4034c2:	scas   eax,DWORD PTR es:[edi]
  4034c3:	push   ss
  4034c4:	(bad)  
  4034c6:	stos   DWORD PTR es:[edi],eax
  4034c7:	push   cs
  4034c8:	int    0x27
  4034ca:	add    BYTE PTR ds:0x9fc09100,ah
  4034d0:	mov    BYTE PTR [edx-0x65],al
  4034d3:	int    0x94
  4034d5:	ins    BYTE PTR es:[edi],dx
  4034d6:	in     eax,0xd6
  4034d8:	xchg   edx,eax
  4034d9:	push   esp
  4034da:	xchg   esp,eax
  4034db:	adc    eax,0x2effdd48
  4034e0:	dec    edx
  4034e1:	cdq    
  4034e2:	pop    es
  4034e3:	xchg   ebx,eax
  4034e4:	xor    al,0x2d
  4034e6:	iret   
  4034e7:	adc    esi,DWORD PTR [ecx-0x7e2b030b]
  4034ed:	jecxz  0x403531
  4034ef:	fcomp  QWORD PTR [eax+0x72]
  4034f2:	ins    BYTE PTR es:[edi],dx
  4034f3:	in     al,0x4
  4034f5:	popf   
  4034f6:	push   0xbd312106
  4034fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034fc:	sub    ebp,DWORD PTR [ebx+0x25]
  4034ff:	pop    esi
  403500:	or     DWORD PTR [ebp-0x69b1eaf],ecx
  403506:	cli    
  403507:	js     0x4034c9
  403509:	cmp    BYTE PTR [eax],al
  40350b:	retf   
  40350c:	jnp    0x403525
  40350e:	xchg   ebp,eax
  40350f:	call   0x15a04ea5
  403514:	test   al,0x57
  403516:	and    esp,DWORD PTR [ebx+edi*2]
  403519:	cmc    
  40351a:	mov    ds:0xf0210901,al
  40351f:	cld    
  403520:	xchg   ebx,eax
  403521:	mov    ch,cl
  403523:	add    DWORD PTR ss:[ebx-0x57],ecx
  403527:	(bad)  
  403528:	mov    dl,0xc8
  40352a:	xor    al,0xb0
  40352c:	shl    DWORD PTR [ecx+ebp*8-0x63],0x48
  403531:	adc    ebp,DWORD PTR [eiz*4+0x6cf1b7d3]
  403538:	loop   0x40356d
  40353a:	xchg   esp,eax
  40353b:	or     eax,0x59079153
  403540:	ds push eax
  403542:	jbe    0x4035bd
  403544:	(bad)  
  403546:	mov    esi,0xb7dfe7d6
  40354b:	push   edx
  40354c:	nop
  40354d:	dec    esp
  40354e:	sub    edx,esp
  403550:	fs out dx,al
  403552:	fcmovbe st,st(5)
  403554:	ror    DWORD PTR [edx],0x1b
  403557:	mov    ebp,0x1858295c
  40355c:	div    DWORD PTR [ebp+0x7b]
  40355f:	std    
  403560:	in     al,0x24
  403562:	and    BYTE PTR [edi+esi*4-0x73],dl
  403566:	(bad)  
  403567:	shl    ebp,cl
  403569:	sub    esp,eax
  40356b:	pop    ebp
  40356c:	sub    cl,dh
  40356e:	fcomp  QWORD PTR [ecx]
  403570:	dec    edx
  403571:	xchg   ecx,eax
  403572:	cdq    
  403573:	out    dx,eax
  403574:	or     al,0x9d
  403576:	pop    ds
  403577:	out    0xe1,eax
  403579:	in     al,0xf8
  40357b:	shr    cl,0x25
  40357e:	sahf   
  40357f:	mov    cl,0x1b
  403581:	retf   0x1f8
  403584:	inc    edx
  403585:	outs   dx,DWORD PTR ds:[esi]
  403586:	add    dl,BYTE PTR [esi+0x38]
  403589:	mov    ah,0x10
  40358b:	gs xchg ecx,eax
  40358d:	pop    eax
  40358e:	mov    ebx,0x358d881b
  403593:	inc    esi
  403594:	mov    dh,BYTE PTR [ebx+0x8365e6a]
  40359a:	call   0x50180095
  40359f:	ins    DWORD PTR es:[edi],dx
  4035a0:	mov    ch,0x83
  4035a2:	xchg   ebx,eax
  4035a3:	fsub   DWORD PTR [eax+edi*1]
  4035a6:	ret    
  4035a7:	mov    bh,BYTE PTR [ecx-0x6b]
  4035aa:	jl     0x403575
  4035ac:	pop    edi
  4035ad:	and    al,0x42
  4035af:	inc    ebp
  4035b0:	cmp    DWORD PTR [esi+0x5f9b5cc4],esp
  4035b6:	aas    
  4035b7:	dec    ebx
  4035b8:	sub    eax,0x6ff85ede
  4035bd:	shl    DWORD PTR [esi],0x4a
  4035c0:	lods   al,BYTE PTR ds:[esi]
  4035c1:	or     eax,0x79885529
  4035c6:	xor    al,0x33
  4035c8:	jbe    0x403618
  4035ca:	cmp    al,0x2e
  4035cc:	sar    bh,cl
  4035ce:	in     eax,0x39
  4035d0:	mov    ebx,0x7a56bc56
  4035d5:	dec    edx
  4035d6:	mov    ah,BYTE PTR [eax]
  4035d8:	sbb    al,0x54
  4035da:	sub    BYTE PTR [ebp-0x35],cl
  4035dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035de:	ja     0x403637
  4035e0:	inc    esp
  4035e1:	or     eax,0x86878e7a
  4035e6:	inc    eax
  4035e7:	mov    edx,0xb37836ba
  4035ec:	adc    eax,0xbe6e957
  4035f1:	mov    ebp,0x95e0b3ac
  4035f6:	add    DWORD PTR [ecx-0x4f],ecx
  4035f9:	and    al,0xec
  4035fb:	xchg   edi,eax
  4035fc:	and    al,BYTE PTR [esi+0x10]
  4035ff:	iret   
  403600:	ret    0xbd16
  403603:	pushw  ds
  403605:	test   ch,dh
  403607:	dec    edi
  403608:	mov    DWORD PTR [eax-0x41],ebp
  40360b:	clc    
  40360c:	imul   ecx,DWORD PTR [esi-0x56],0xffffffe3
  403610:	je     0x40366a
  403612:	test   BYTE PTR [ebx-0x15],cl
  403615:	push   0x513766a8
  40361a:	pusha  
  40361b:	push   cs
  40361c:	dec    ecx
  40361d:	sbb    eax,0x6c9e06d2
  403622:	retf   0x23b5
  403625:	sub    edi,DWORD PTR [ecx]
  403627:	and    ebp,DWORD PTR [edi+0x722906e3]
  40362d:	pushf  
  40362e:	sahf   
  40362f:	in     al,dx
  403630:	sub    al,0xea
  403632:	call   0xb502:0xde879799
  403639:	push   eax
  40363a:	into   
  40363b:	pop    ebx
  40363c:	push   0xbfc079c9
  403641:	in     eax,0xeb
  403643:	jl     0x403615
  403645:	(bad)  
  403646:	scas   eax,DWORD PTR es:[edi]
  403647:	and    al,0xf1
  403649:	sub    eax,0xb2741de3
  40364e:	pop    es
  40364f:	test   BYTE PTR [edi+0x617fc571],0xca
  403656:	stos   BYTE PTR es:[edi],al
  403657:	and    eax,0x79a12859
  40365c:	pop    es
  40365d:	clc    
  40365e:	es inc esp
  403660:	test   DWORD PTR [ebp*2-0x4dec87],esp
  403667:	jns    0x40362d
  403669:	mov    bh,0x95
  40366b:	out    dx,eax
  40366c:	jne    0x4036cc
  40366e:	lds    ecx,FWORD PTR [edx+0x70]
  403671:	mov    edi,0x1ad8bc6a
  403676:	push   ebp
  403677:	xor    BYTE PTR [ebp+0x3f350d0b],bh
  40367d:	jo     0x403659
  40367f:	sub    eax,DWORD PTR [esi-0x6b]
  403682:	sbb    al,0xf6
  403684:	dec    eax
  403685:	cs adc bh,0xd4
  403689:	sahf   
  40368a:	mov    BYTE PTR [eax-0x17518801],bh
  403690:	cmp    al,0x24
  403692:	ror    BYTE PTR [ecx],1
  403694:	loopne 0x40366d
  403696:	jnp    0x4036b3
  403698:	(bad)  
  40369a:	call   0xc5718827
  40369f:	ds in  eax,dx
  4036a1:	aad    0x78
  4036a3:	cmp    DWORD PTR ds:0xf3608ab7,0x308cde8b
  4036ad:	ja     0x40367e
  4036af:	or     BYTE PTR [edi-0x6f8c127f],0xe
  4036b6:	pop    ds
  4036b7:	aas    
  4036b8:	in     eax,0xd6
  4036ba:	neg    ah
  4036bc:	fisttp QWORD PTR [esi]
  4036be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036bf:	in     eax,dx
  4036c0:	in     eax,dx
  4036c1:	adc    ebp,DWORD PTR [ebp-0x344a2e3f]
  4036c7:	pop    es
  4036c8:	out    0x44,eax
  4036ca:	sub    DWORD PTR [ebx-0x34],0xffffffbf
  4036ce:	pop    ebp
  4036cf:	cld    
  4036d0:	in     eax,0x3d
  4036d2:	fwait
  4036d3:	test   BYTE PTR [edx+0x28405b7a],al
  4036d9:	sub    bl,bh
  4036db:	pop    ecx
  4036dc:	cs jmp 0xe5da3f7e
  4036e2:	das    
  4036e3:	and    al,0xf2
  4036e5:	retf   0xfb56
  4036e8:	gs icebp 
  4036ea:	xor    bl,BYTE PTR [ecx+0x56]
  4036ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ee:	or     BYTE PTR [ecx+0x39],ch
  4036f1:	data16 gs int3 
  4036f4:	xchg   ebx,eax
  4036f5:	mov    edx,0x63b66897
  4036fa:	pshufw mm3,QWORD PTR [eax-0x35],0x6
  4036ff:	add    eax,0x766a4806
  403704:	xor    eax,0x981a39e6
  403709:	xchg   eax,ebp
  40370b:	xchg   edx,eax
  40370c:	fdiv   QWORD PTR [edx]
  40370e:	fld    TBYTE PTR [edi-0x32918ff3]
  403714:	fnstenv [ecx-0x53cefdaf]
  40371a:	cmp    ebp,eax
  40371c:	fdivrp st(7),st
  40371e:	xlat   BYTE PTR ds:[ebx]
  40371f:	xor    bl,BYTE PTR [esi+0x5a]
  403722:	jp     0x403717
  403724:	jmp    0x403764
  403726:	stos   DWORD PTR es:[edi],eax
  403727:	sbb    ebx,esi
  403729:	retf   0x752c
  40372c:	lgs    eax,FWORD PTR gs:[ebx]
  403730:	or     DWORD PTR ds:0x5e87d52,0xa137fb80
  40373a:	sub    BYTE PTR [ebp+0xddff72d],dl
  403740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403741:	mov    ah,0xc
  403743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403744:	cld    
  403745:	retf   0x299f
  403748:	pusha  
  403749:	pop    ebp
  40374a:	je     0x403752
  40374c:	(bad)
  403750:	shr    DWORD PTR [esi+ebp*2+0x20],0x4a
  403755:	xor    BYTE PTR [edi],bh
  403757:	mov    ebp,0x7519f75b
  40375c:	cld    
  40375d:	int    0x32
  40375f:	push   esi
  403760:	fwait
  403761:	mov    esp,0xfc03acff
  403766:	adc    al,dl
  403768:	add    BYTE PTR [edx+eax*2],ch
  40376b:	shl    DWORD PTR [eax+0x6dd780d2],0x2
  403772:	sar    BYTE PTR ds:0x19a84f59,cl
  403778:	aaa    
  403779:	dec    esp
  40377a:	fyl2xp1 
  40377c:	stc    
  40377d:	mov    ah,0x85
  40377f:	cmp    eax,0x9047bfc3
  403784:	sub    BYTE PTR ds:0x7f310a13,0x26
  40378b:	lds    ecx,FWORD PTR [ebx]
  40378d:	fmul   QWORD PTR [edx+0x25]
  403790:	or     DWORD PTR [ebp-0x5],edi
  403793:	dec    esi
  403794:	test   eax,0xc718659b
  403799:	test   BYTE PTR [esp+ecx*8+0x13],ch
  40379d:	int3   
  40379e:	mov    ?,ebx
  4037a0:	sbb    eax,0x3beaaed3
  4037a5:	gs mov ah,0xbf
  4037a8:	pushf  
  4037a9:	std    
  4037aa:	jo     0x403788
  4037ac:	fwait
  4037ad:	xchg   ecx,eax
  4037ae:	shr    DWORD PTR [esi-0x2a],1
  4037b1:	inc    esp
  4037b2:	arpl   WORD PTR [edi*4-0x1a58cff0],bp
  4037b9:	rol    DWORD PTR [eax],1
  4037bb:	scas   eax,DWORD PTR es:[edi]
  4037bc:	and    BYTE PTR [edi],ah
  4037be:	int3   
  4037bf:	pusha  
  4037c0:	cmp    edx,DWORD PTR [edx+0x36]
  4037c3:	add    eax,0xa6617d8
  4037c8:	imul   ebp,DWORD PTR [edi],0xf8306de8
  4037ce:	add    DWORD PTR [ebp+0x67405a04],eax
  4037d4:	xchg   ecx,eax
  4037d5:	add    bl,BYTE PTR [ecx+0xea7d51d]
  4037db:	push   ebx
  4037dc:	repnz push ebp
  4037de:	and    DWORD PTR [edi+ebx*2-0x6c],esp
  4037e2:	outs   dx,DWORD PTR ds:[esi]
  4037e3:	jno    0x4037bf
  4037e5:	mov    dh,0xc3
  4037e7:	scas   eax,DWORD PTR es:[edi]
  4037e8:	sbb    DWORD PTR [ebp+0x2ddffdd3],edx
  4037ee:	sbb    DWORD PTR [ebp+0x25],0xe33e962a
  4037f5:	dec    ecx
  4037f6:	or     eax,DWORD PTR [ecx+ebx*2-0x69]
  4037fa:	lds    ebp,FWORD PTR [edx]
  4037fc:	or     ch,bh
  4037fe:	xchg   edi,eax
  4037ff:	in     al,dx
  403800:	cs mov eax,ds:0x62f21ebd
  403807:	jns    0x403843
  403809:	daa    
  40380a:	push   esp
  40380b:	shr    DWORD PTR [edi],cl
  40380d:	or     al,0x16
  40380f:	sti    
  403810:	pop    esp
  403811:	push   esp
  403812:	retf   0x58a6
  403815:	or     ch,BYTE PTR [ebx+0x397b9d7]
  40381b:	adc    bl,0x77
  40381e:	sub    al,0xac
  403820:	push   eax
  403821:	sub    DWORD PTR [ecx+0x6c],esp
  403824:	push   ebx
  403825:	cdq    
  403826:	outs   dx,BYTE PTR ds:[esi]
  403827:	out    0xb8,al
  403829:	je     0x403894
  40382b:	fsub   QWORD PTR [ebp-0x24]
  40382e:	cs test al,0x54
  403831:	(bad)  
  403832:	fldenv [edi-0x8]
  403835:	sub    al,0x34
  403837:	es mov ah,0x2
  40383a:	int    0xad
  40383c:	xchg   bl,bh
  40383e:	les    ebx,FWORD PTR [edx-0x53]
  403841:	fmul   DWORD PTR [esi+0x32]
  403844:	sub    al,0x54
  403846:	or     BYTE PTR [eax+esi*2+0x42],0x84
  40384b:	jl     0x4038bc
  40384d:	call   0xadd5:0x789ff40f
  403854:	add    eax,0x33adc493
  403859:	mov    ebp,esp
  40385b:	push   es
  40385c:	cld    
  40385d:	jmp    0x1150836f
  403862:	rcl    DWORD PTR [ecx],cl
  403864:	cli    
  403865:	sbb    esi,DWORD PTR [eax-0x2c]
  403868:	dec    ecx
  403869:	test   BYTE PTR [eax-0x10],bl
  40386c:	lahf   
  40386d:	(bad)  
  40386e:	jecxz  0x40380a
  403870:	xchg   edx,eax
  403871:	mov    ?,WORD PTR [edx]
  403873:	mov    dh,0x40
  403875:	or     eax,0x4812e9c7
  40387a:	or     DWORD PTR [ebp-0x453b42f9],esi
  403880:	inc    ebp
  403881:	cmc    
  403882:	or     dh,cl
  403884:	sub    bh,BYTE PTR [eax-0x58b29eef]
  40388a:	adc    DWORD PTR [edi+0x607f6eba],edx
  403890:	jp     0x403817
  403892:	dec    ecx
  403893:	fnstsw WORD PTR [eax+0x5a16a655]
  403899:	cmp    ah,BYTE PTR [eax+ebx*8+0x3dd576f0]
  4038a0:	lock sti 
  4038a2:	je     0x403910
  4038a4:	pop    eax
  4038a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038a6:	(bad)  
  4038a7:	call   0x2d8c2734
  4038ac:	mov    cl,0xed
  4038ae:	retf   0x9d75
  4038b1:	sbb    esi,DWORD PTR [ebx]
  4038b3:	ficom  WORD PTR ds:0xdb697278
  4038b9:	mov    cl,0xec
  4038bb:	aaa    
  4038bc:	mov    WORD PTR [edi+0x4c],cs
  4038bf:	or     dh,ah
  4038c1:	int    0xb2
  4038c3:	xchg   esi,edx
  4038c5:	(bad)  
  4038c7:	mov    edi,0xf9a6ebcc
  4038cc:	js     0x403926
  4038ce:	ins    DWORD PTR es:[edi],dx
  4038cf:	dec    esp
  4038d0:	pop    esi
  4038d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038d2:	ss enter 0x1f20,0xc
  4038d7:	fwait
  4038d8:	mov    al,ds:0xc0d56ac4
  4038dd:	or     edi,DWORD PTR [ecx]
  4038df:	retf   0x2ef2
  4038e2:	(bad)  
  4038e3:	mov    bl,0x48
  4038e5:	js     0x40386f
  4038e7:	xor    dl,bl
  4038e9:	fdiv   st,st(3)
  4038eb:	retf   0xdcaf
  4038ee:	out    dx,eax
  4038ef:	push   edi
  4038f0:	push   ebx
  4038f1:	xor    dl,BYTE PTR [eax+0x7c]
  4038f4:	xor    bh,BYTE PTR [ecx+esi*1+0x4d25b0a5]
  4038fb:	pop    ebp
  4038fc:	cld    
  4038fd:	xchg   BYTE PTR [ebx+esi*8+0x70c9911a],al
  403904:	inc    edi
  403905:	dec    esi
  403906:	fsubr  st(1),st
  403908:	aam    0xd5
  40390a:	nop
  40390b:	daa    
  40390c:	lock retf 
  40390e:	loope  0x403940
  403910:	in     eax,0xf3
  403912:	iret   
  403913:	test   al,0x3b
  403915:	push   ebx
  403916:	into   
  403917:	mov    bh,0x4d
  403919:	daa    
  40391a:	mov    ebp,0x98d46c8d
  40391f:	cs repnz cmp bh,0x89
  403924:	out    dx,eax
  403925:	rcr    BYTE PTR [esi+0x3f1d7634],1
  40392b:	test   eax,0xc7205df7
  403930:	outs   dx,BYTE PTR ds:[esi]
  403931:	call   0x8aa27cea
  403936:	dec    edx
  403937:	jp     0x403962
  403939:	bound  ebx,QWORD PTR [ebx-0x114c0e18]
  40393f:	push   edx
  403940:	je     0x40394e
  403942:	(bad)  
  403944:	sub    DWORD PTR [ecx+0x2a],0x5dae3126
  40394b:	jb     0x403956
  40394d:	and    al,0xf0
  40394f:	bound  edx,QWORD PTR [bx+di+0x74]
  403953:	xchg   esp,eax
  403954:	jmp    0x4038f0
  403956:	adc    eax,0x377d91c0
  40395b:	xchg   esi,eax
  40395c:	inc    esi
  40395d:	pop    esp
  40395e:	jno    0x403909
  403960:	mov    bh,0x51
  403962:	mov    al,bh
  403964:	jmp    0x7992:0x1de38cfe
  40396b:	in     al,0x4c
  40396d:	shl    bh,0xc4
  403970:	lods   eax,DWORD PTR ds:[esi]
  403971:	dec    ebp
  403972:	pop    ecx
  403973:	arpl   WORD PTR [eax+0x272e9cb7],cx
  403979:	dec    esi
  40397a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40397b:	stos   DWORD PTR es:[edi],eax
  40397c:	nop
  40397d:	stos   BYTE PTR es:[edi],al
  40397e:	aaa    
  40397f:	mov    WORD PTR [ebx],ss
  403981:	adc    BYTE PTR [ebx],ah
  403983:	push   es
  403984:	sub    eax,0xbb7d953a
  403989:	fcomp  QWORD PTR [ecx]
  40398b:	test   eax,0x166a9f78
  403991:	div    DWORD PTR [ecx+0x3f0df4ee]
  403997:	push   ss
  403998:	sub    BYTE PTR [edi],cl
  40399a:	or     dh,BYTE PTR [esi]
  40399c:	or     eax,0x968e0411
  4039a1:	cli    
  4039a2:	sbb    DWORD PTR [edi],0x67
  4039a5:	adc    eax,DWORD PTR [edi+ebx*1+0x1bc57bb2]
  4039ac:	sbb    DWORD PTR [esi],0x2c
  4039af:	cmc    
  4039b0:	pusha  
  4039b1:	jo     0x40397b
  4039b3:	fiadd  DWORD PTR [esi]
  4039b5:	rol    dl,cl
  4039b7:	pop    ecx
  4039b8:	lds    ebx,FWORD PTR [edi-0x6e5c065a]
  4039be:	cmp    eax,0xf9ed32d3
  4039c3:	(bad)  
  4039c4:	cmp    BYTE PTR [ebp+0x2f],al
  4039c7:	pusha  
  4039c8:	int3   
  4039c9:	cwde   
  4039ca:	dec    eax
  4039cb:	dec    ebp
  4039cc:	or     al,0xed
  4039ce:	dec    eax
  4039cf:	(bad)  
  4039d0:	stc    
  4039d1:	mov    eax,0x53d47ef5
  4039d6:	xchg   ebp,eax
  4039d7:	push   esp
  4039d8:	out    0x76,al
  4039da:	jle    0x403985
  4039dc:	aas    
  4039dd:	or     eax,0xb1a9df87
  4039e2:	rol    DWORD PTR [eax+0x1383133a],0x74
  4039e9:	xor    ebp,0x39b4bf30
  4039ef:	cmp    ch,ah
  4039f1:	call   0xf64f:0x2e71c9cd
  4039f8:	fadd   DWORD PTR [edx-0x6ba29a3a]
  4039fe:	pop    ds
  4039ff:	inc    ebx
  403a00:	push   cs
  403a01:	loop   0x4039cc
  403a03:	jns    0x40398c
  403a05:	iret   
  403a06:	jecxz  0x40399e
  403a08:	jge    0x403a67
  403a0a:	imul   edx,DWORD PTR [edi+eiz*1],0x5
  403a0e:	les    edx,FWORD PTR [edx+ebx*2+0x398f230a]
  403a15:	out    dx,al
  403a16:	push   ds
  403a17:	pop    ebx
  403a18:	test   DWORD PTR [eax],ebp
  403a1a:	sub    DWORD PTR [ecx+0x16],edx
  403a1d:	pop    ebx
  403a1e:	cs mov ebp,0xda27c5c9
  403a24:	imul   edi,DWORD PTR [eax+eax*8+0x1c52f5c9],0x98a64a87
  403a2f:	mov    edx,DWORD PTR [ebp+0x1aa5e709]
  403a35:	xchg   edx,eax
  403a36:	test   BYTE PTR [eax-0x48],0xd5
  403a3a:	repnz push 0xd7b6d994
  403a40:	repnz and BYTE PTR [esi],bh
  403a43:	sbb    eax,0xae656f3d
  403a48:	adc    BYTE PTR cs:[edi],al
  403a4b:	aaa    
  403a4c:	test   BYTE PTR [edx],ch
  403a4e:	push   esp
  403a4f:	or     eax,0xb92d9753
  403a54:	pop    esi
  403a55:	dec    esi
  403a56:	dec    ebp
  403a57:	inc    ebp
  403a58:	xchg   edi,eax
  403a59:	pop    es
  403a5a:	dec    ebp
  403a5b:	or     DWORD PTR [ebx+0x31],0xffffffb8
  403a5f:	add    ebp,0xdab88fc8
  403a65:	dec    edi
  403a66:	(bad)  
  403a68:	push   edi
  403a69:	cli    
  403a6a:	add    ch,BYTE PTR [eax-0x6d]
  403a6d:	cwde   
  403a6e:	mov    edi,0x4284cd69
  403a73:	sbb    DWORD PTR [ecx-0xe],edx
  403a76:	(bad)  
  403a77:	clc    
  403a78:	das    
  403a79:	push   esi
  403a7a:	mov    ds:0xf83c9bbe,al
  403a7f:	mul    BYTE PTR [esi-0x2f6528de]
  403a85:	mov    ecx,eax
  403a87:	xchg   DWORD PTR [esi],ebp
  403a89:	inc    eax
  403a8a:	lods   al,BYTE PTR ds:[esi]
  403a8b:	in     eax,dx
  403a8c:	jmp    0x7c7181a1
  403a91:	and    BYTE PTR [eax],bh
  403a93:	das    
  403a94:	stos   BYTE PTR es:[edi],al
  403a95:	rcl    BYTE PTR [ebp+0x53cb10ba],0x6b
  403a9c:	test   DWORD PTR [eax],edx
  403a9e:	add    eax,0x74a9289e
  403aa3:	shl    BYTE PTR [ecx],cl
  403aa5:	sahf   
  403aa6:	in     al,0x25
  403aa8:	rol    ebp,1
  403aaa:	pop    eax
  403aab:	pop    eax
  403aac:	es mov dl,0x9c
  403aaf:	pop    ebp
  403ab0:	and    al,0x56
  403ab2:	cmp    DWORD PTR [eax+0x6a4125ca],ebx
  403ab8:	push   edi
  403ab9:	fisttp WORD PTR [ebx-0x12]
  403abc:	mov    edx,0xbbe0ab70
  403ac1:	xor    al,0xac
  403ac3:	je     0x403b03
  403ac5:	mov    bl,0xc2
  403ac7:	arpl   ax,ax
  403ac9:	sub    edx,edx
  403acb:	or     ecx,DWORD PTR [esi+0x34]
  403ace:	mov    ebp,0xf12e3806
  403ad3:	jge    0x403ae7
  403ad5:	in     al,0x34
  403ad7:	sub    BYTE PTR fs:[esi],bh
  403ada:	fistp  DWORD PTR [ebp-0x75]
  403add:	jbe    0x403b0d
  403adf:	dec    edi
  403ae0:	out    0x58,eax
  403ae2:	jne    0x403aa2
  403ae4:	in     eax,dx
  403ae5:	adc    al,0x58
  403ae7:	adc    bh,dl
  403ae9:	push   0xfffffff4
  403aeb:	mov    edi,0x877eee8a
  403af0:	fistp  QWORD PTR [esi-0x5]
  403af3:	js     0x403a77
  403af5:	and    BYTE PTR [ebp+0x59],cl
  403af8:	mov    edi,DWORD PTR [ebx]
  403afa:	neg    BYTE PTR [ebp+0x5f8104e6]
  403b00:	(bad)  
  403b01:	jns    0x403a9e
  403b03:	dec    edi
  403b04:	and    eax,0xf024b955
  403b09:	dec    edi
  403b0a:	popf   
  403b0b:	lods   al,BYTE PTR ds:[esi]
  403b0c:	pop    ss
  403b0d:	(bad)  
  403b0e:	pusha  
  403b0f:	xor    bl,dl
  403b11:	fcmovnu st,st(4)
  403b13:	pop    esi
  403b14:	retf   
  403b15:	in     eax,0x58
  403b17:	iret   
  403b18:	sub    ecx,DWORD PTR [ebx+0x34]
  403b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b1c:	adc    BYTE PTR [edx-0x32],al
  403b1f:	push   ebp
  403b20:	test   DWORD PTR [edi],esp
  403b22:	xchg   edx,eax
  403b23:	mov    ds:0x1ef3a2f,eax
  403b28:	(bad)  
  403b2a:	mov    bh,0x7d
  403b2c:	adc    ecx,DWORD PTR [edi+0x7d]
  403b2f:	ret    
  403b30:	loopne 0x403ba8
  403b32:	popf   
  403b33:	lock arpl WORD PTR [eax+0x5c6fb2ce],dx
  403b3a:	aad    0xc7
  403b3c:	out    0x21,eax
  403b3e:	and    cl,BYTE PTR fs:[eax-0x53]
  403b42:	mov    eax,ds:0x2d0d825e
  403b47:	inc    esi
  403b48:	xchg   ecx,eax
  403b49:	inc    edx
  403b4a:	je     0x403ba1
  403b4c:	and    al,dh
  403b4e:	and    eax,0x7be59477
  403b53:	cmp    eax,0x42cb91a9
  403b58:	adc    BYTE PTR [edx-0x43],bh
  403b5b:	jae    0x403b09
  403b5d:	jecxz  0x403b7c
  403b5f:	push   esi
  403b60:	jmp    ecx
  403b62:	rol    BYTE PTR [ecx+0xb],0x28
  403b66:	jno    0x403aed
  403b68:	pop    ebx
  403b69:	out    dx,eax
  403b6a:	sub    bl,dl
  403b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b6d:	mov    ah,0xd0
  403b6f:	psubw  mm7,QWORD PTR ds:0x980dd94d
  403b76:	fistp  DWORD PTR [bx+0x76]
  403b7a:	xchg   esi,eax
  403b7b:	jbe    0x403b2c
  403b7d:	cmpunordps xmm4,XMMWORD PTR [eax+0x3bc9e45a]
  403b85:	retf   
  403b86:	fs cli 
  403b88:	mov    ss,esp
  403b8a:	nop
  403b8b:	push   es
  403b8c:	pop    edi
  403b8d:	add    DWORD PTR [eax],esi
  403b8f:	vshufps xmm6,xmm6,XMMWORD PTR [ecx],0x48
  403b94:	push   ecx
  403b95:	fabs   
  403b97:	pop    ecx
  403b98:	test   DWORD PTR [edi-0x49146858],edx
  403b9e:	retf   
  403b9f:	jmp    0xfa0b7f2c
  403ba4:	mov    eax,ds:0x2d09f94e
  403ba9:	mov    edx,0xeb3a7a65
  403bae:	shl    edx,1
  403bb0:	mov    esp,0x4da0666c
  403bb5:	xchg   esp,eax
  403bb6:	cmc    
  403bb7:	push   0x8a114441
  403bbc:	pop    es
  403bbd:	fidiv  WORD PTR ds:0x28a67b82
  403bc3:	stos   DWORD PTR es:[edi],eax
  403bc4:	in     al,0x36
  403bc6:	mov    ch,ch
  403bc8:	push   ecx
  403bc9:	inc    ebx
  403bca:	or     eax,0xf9bd6489
  403bcf:	iret   
  403bd0:	rol    DWORD PTR [esi-0x564268d8],cl
  403bd6:	call   0x53f0:0xa41d943a
  403bdd:	ret    0x4974
  403be0:	popf   
  403be1:	sub    al,0xb2
  403be3:	lods   al,BYTE PTR ds:[esi]
  403be4:	mov    BYTE PTR [edx+0x10],ah
  403be7:	cmp    eax,ecx
  403be9:	es aaa 
  403beb:	js     0x403c3b
  403bed:	in     eax,dx
  403bee:	add    ch,BYTE PTR [ebx]
  403bf0:	push   edx
  403bf1:	cmp    eax,0x79c61b77
  403bf6:	jnp    0x403c22
  403bf8:	enter  0x13b7,0x18
  403bfc:	push   esi
  403bfd:	sbb    al,0xc
  403bff:	fwait
  403c00:	xchg   al,ch
  403c02:	inc    ebp
  403c03:	loop   0x403bbf
  403c05:	xor    al,0x8e
  403c07:	ins    DWORD PTR es:[edi],dx
  403c08:	push   ds
  403c09:	pop    eax
  403c0a:	bound  ebx,QWORD PTR [esi-0x1e]
  403c0d:	test   edx,ebp
  403c0f:	cdq    
  403c10:	or     DWORD PTR [esi],esi
  403c12:	xchg   ecx,eax
  403c13:	fdiv   QWORD PTR [esi+ebp*4-0x5e15e851]
  403c1a:	sub    bl,BYTE PTR [edx-0x5bc618eb]
  403c20:	xor    DWORD PTR [eax-0x3a291707],esi
  403c26:	outs   dx,DWORD PTR ds:[esi]
  403c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c28:	cmp    al,0xed
  403c2a:	in     eax,0x4b
  403c2c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  403c2e:	add    cl,dh
  403c30:	cmp    eax,DWORD PTR [ebx-0x3a5919f6]
  403c36:	sub    ebx,esi
  403c38:	mov    ebp,0xa46cfbe1
  403c3d:	or     eax,0xb3bc089f
  403c42:	inc    ecx
  403c43:	push   edi
  403c44:	add    DWORD PTR [eax+0x2c],ebx
  403c47:	mov    BYTE PTR [ebp+0x7f9ef507],dl
  403c4d:	push   es
  403c4e:	sbb    eax,0x4d52cae6
  403c53:	push   0xfc281062
  403c58:	xchg   ebp,eax
  403c59:	push   ebp
  403c5a:	(bad)  
  403c5b:	call   0x7b4e6ce6
  403c60:	in     eax,0x8c
  403c62:	int3   
  403c63:	and    al,0x93
  403c65:	int3   
  403c66:	sbb    eax,0x697f8d43
  403c6b:	adc    al,0x45
  403c6d:	xchg   ebp,eax
  403c6e:	lock arpl WORD PTR [ebx],cx
  403c71:	scas   eax,DWORD PTR es:[edi]
  403c72:	adc    edi,ebp
  403c74:	jge    0x403c22
  403c76:	jg     0x403cf2
  403c78:	leave  
  403c79:	bswap  ebx
  403c7b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  403c7d:	std    
  403c7e:	inc    esp
  403c7f:	sub    dl,0xfe
  403c82:	loope  0x403c93
  403c84:	fadd   DWORD PTR [ebx-0x71]
  403c87:	fcom   st(0)
  403c89:	pusha  
  403c8a:	(bad)  
  403c8b:	hlt    
  403c8c:	sbb    DWORD PTR [esi+0x65],0x17
  403c90:	mov    ah,0xbc
  403c92:	pop    esp
  403c93:	sub    cl,BYTE PTR [ebx-0x5b]
  403c96:	inc    ebx
  403c97:	push   esp
  403c98:	ja     0x403c86
  403c9a:	push   esp
  403c9b:	adc    bh,BYTE PTR [eax+0x69f19718]
  403ca1:	cmp    al,0x9a
  403ca3:	iret   
  403ca4:	or     BYTE PTR [eax],ah
  403ca6:	ja     0x403c90
  403ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403caa:	ins    DWORD PTR es:[edi],dx
  403cab:	xchg   edx,eax
  403cac:	mov    dh,0x9f
  403cae:	ret    0xedd4
  403cb1:	popa   
  403cb2:	jb     0x403cab
  403cb4:	dec    eax
  403cb5:	dec    eax
  403cb6:	jl     0x403cc5
  403cb8:	aaa    
  403cb9:	out    0xb2,al
  403cbb:	hlt    
  403cbc:	retf   
  403cbd:	mov    ds:0x41a799a,al
  403cc2:	sahf   
  403cc3:	add    BYTE PTR [ebx-0x3c],al
  403cc6:	fdivr  DWORD PTR [edi+0x7ccbf732]
  403ccc:	jbe    0x403cdd
  403cce:	shr    DWORD PTR [ebx],0xd9
  403cd1:	lock pop ecx
  403cd3:	inc    esp
  403cd4:	sbb    dh,BYTE PTR [ebp+0x54]
  403cd7:	ret    0x15e3
  403cda:	mov    eax,ds:0x7c753bf6
  403cdf:	push   esp
  403ce0:	(bad)  
  403ce2:	or     al,0xd5
  403ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce5:	jmp    0xff4febc4
  403cea:	in     al,dx
  403ceb:	clc    
  403cec:	leave  
  403ced:	push   es
  403cee:	push   ebx
  403cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf0:	cmp    DWORD PTR [edx],edx
  403cf2:	mov    esi,0x26a831e9
  403cf7:	in     al,dx
  403cf8:	adc    ch,bl
  403cfa:	xor    al,0xd2
  403cfc:	ins    DWORD PTR es:[edi],dx
  403cfd:	sbb    BYTE PTR [edi],ah
  403cff:	fst    DWORD PTR [eax-0x3cd74bbf]
  403d05:	xchg   edi,eax
  403d06:	inc    esi
  403d07:	pop    ds
  403d08:	fwait
  403d09:	adc    BYTE PTR [esi],dl
  403d0b:	add    BYTE PTR [esi+ebp*8],bh
  403d0e:	out    dx,al
  403d0f:	mov    edx,DWORD PTR [edi+edx*8-0x2b]
  403d13:	cmp    BYTE PTR [esi-0x2468c1bd],bl
  403d19:	push   edx
  403d1a:	stc    
  403d1b:	gs test al,0x29
  403d1e:	stos   BYTE PTR es:[edi],al
  403d1f:	sahf   
  403d20:	jb     0x403ce6
  403d22:	sub    DWORD PTR [esi+0x75c942bc],ebx
  403d28:	fidivr WORD PTR [esi-0x5f]
  403d2b:	sbb    DWORD PTR [esi+0x56],esi
  403d2e:	xchg   ecx,eax
  403d2f:	lods   al,BYTE PTR ds:[esi]
  403d30:	inc    ebp
  403d31:	mov    esp,0x12361e12
  403d36:	div    BYTE PTR [edi-0x16cf12c]
  403d3c:	xchg   ebx,eax
  403d3d:	dec    esi
  403d3e:	mov    dh,0x88
  403d40:	icebp  
  403d41:	adc    al,0x78
  403d43:	cmp    ebx,DWORD PTR [ecx-0x7b8fd972]
  403d49:	dec    ebp
  403d4a:	mov    DWORD PTR [ecx],edx
  403d4c:	mov    al,ds:0xeb25dee
  403d51:	jp     0x403d84
  403d53:	sbb    edi,edi
  403d55:	neg    BYTE PTR [edi-0x21]
  403d58:	loopne 0x403dd4
  403d5a:	sbb    DWORD PTR [edx+0x11bc18e9],edx
  403d60:	and    bh,dh
  403d62:	cmp    bl,0x46
  403d65:	and    dl,BYTE PTR [edi+0x463687dc]
  403d6b:	jne    0xca037622
  403d71:	pop    ds
  403d72:	adc    ch,BYTE PTR [eax]
  403d74:	and    cl,ah
  403d76:	push   ebp
  403d77:	icebp  
  403d78:	xchg   ebp,eax
  403d79:	push   edx
  403d7a:	dec    esp
  403d7b:	mov    al,0x72
  403d7d:	cs xchg edi,eax
  403d7f:	sub    al,0x4e
  403d81:	xor    al,0x7e
  403d83:	icebp  
  403d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d85:	add    BYTE PTR [edi-0x143beb94],0x24
  403d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d8d:	es stc 
  403d8f:	imul   edi,DWORD PTR ds:0x2cc80f30,0xfffffff1
  403d96:	xchg   esp,eax
  403d97:	dec    edx
  403d98:	retf   
  403d99:	and    dh,BYTE PTR [eax]
  403d9b:	or     al,0x52
  403d9d:	aam    0x8d
  403d9f:	mov    bh,0x76
  403da1:	lahf   
  403da2:	xor    al,0x42
  403da4:	fldl2t 
  403da6:	add    ebp,DWORD PTR ds:0xb45cf1bd
  403dac:	mov    bh,0x5e
  403dae:	jecxz  0x403dd6
  403db0:	pop    si
  403db2:	mov    esi,0x1ddbfa72
  403db7:	cmp    cl,BYTE PTR [esp+ecx*8-0x41]
  403dbb:	addr16 int3 
  403dbd:	fbld   TBYTE PTR gs:[esi]
  403dc0:	out    dx,al
  403dc1:	mov    BYTE PTR [ecx-0x2f],bl
  403dc4:	pop    edx
  403dc5:	push   es
  403dc6:	mov    esi,0x8cd3ef0c
  403dcb:	scas   eax,DWORD PTR es:[edi]
  403dcc:	pushf  
  403dcd:	push   eax
  403dce:	shl    DWORD PTR ds:0xf0f4da61,0xd8
  403dd5:	mov    ds:0x9bc6616a,al
  403dda:	inc    ebx
  403ddb:	xchg   ebx,eax
  403ddc:	les    edx,FWORD PTR [ebp+0x659dde32]
  403de2:	rcl    DWORD PTR [edi+0x16e15afe],0x51
  403de9:	adc    al,0x3
  403deb:	rcl    DWORD PTR [eax-0x4e183cce],cl
  403df1:	xor    al,0xf
  403df3:	and    eax,0xb713d87
  403df8:	push   ss
  403df9:	xchg   edi,eax
  403dfa:	mov    al,0x5f
  403dfc:	pop    ss
  403dfd:	jp     0x403e63
  403dff:	loopne 0x403dfa
  403e01:	mov    dh,0x1b
  403e03:	mov    edx,0x73bb8dca
  403e08:	mov    al,ds:0x22ffb85d
  403e0d:	bound  ebx,QWORD PTR [ecx+0x69f4a61]
  403e13:	add    ebp,DWORD PTR [ebx-0x6c]
  403e16:	gs stos BYTE PTR es:[edi],al
  403e18:	xchg   edx,eax
  403e19:	inc    BYTE PTR [edx-0x65]
  403e1c:	(bad)  
  403e1d:	jle    0x403dc0
  403e1f:	js     0x403e2d
  403e21:	adc    bh,BYTE PTR [ebp+0x7c]
  403e24:	out    dx,al
  403e25:	pop    ebx
  403e26:	loopne 0x403e60
  403e28:	call   0xe3607ce6
  403e2d:	jg     0x403e37
  403e2f:	push   ebx
  403e30:	fucomi st,st(6)
  403e32:	xor    ah,al
  403e34:	mov    ebp,0x7cc29f60
  403e39:	inc    ebp
  403e3a:	mov    dl,0x94
  403e3c:	xchg   BYTE PTR [ecx],al
  403e3e:	fwait
  403e3f:	lea    esp,ds:0x9496be1c
  403e45:	or     BYTE PTR [esi+0x38],dl
  403e48:	mov    ch,0xab
  403e4a:	mov    bl,0x62
  403e4c:	xor    al,0x29
  403e4e:	mov    eax,ds:0x4580b70c
  403e53:	shl    BYTE PTR [edx],1
  403e55:	(bad)  
  403e56:	sbb    eax,0x6b228635
  403e5b:	(bad)  
  403e5c:	in     eax,0x8e
  403e5e:	push   ebx
  403e5f:	loopne 0x403e6e
  403e61:	shr    bh,1
  403e63:	jg     0x403e9d
  403e65:	enter  0xcd33,0x3e
  403e69:	pop    esp
  403e6a:	add    edx,DWORD PTR [ebp-0x7eab05ca]
  403e70:	dec    eax
  403e71:	leave  
  403e72:	pop    esp
  403e73:	mov    bl,0xaa
  403e75:	call   ebp
  403e77:	inc    ecx
  403e78:	cmp    DWORD PTR [edi],esi
  403e7a:	push   ecx
  403e7b:	out    dx,al
  403e7c:	jmp    0x403e00
  403e7e:	jp     0x403efe
  403e80:	fist   DWORD PTR [ebx]
  403e82:	popf   
  403e83:	dec    edx
  403e84:	test   eax,0xf8751146
  403e89:	jg     0x403eda
  403e8b:	aad    0xe6
  403e8d:	imul   ebx,eax,0xc6a8219d
  403e93:	or     ebp,DWORD PTR [ecx-0x186bf34e]
  403e99:	mov    cl,0x46
  403e9b:	adc    BYTE PTR [ebp+0x320bf226],bl
  403ea1:	inc    ecx
  403ea2:	or     DWORD PTR [eax],ecx
  403ea4:	mov    ds:0xcf92a3c1,eax
  403ea9:	bound  ebp,QWORD PTR [ecx-0x64ce9202]
  403eaf:	sbb    esp,esp
  403eb1:	sbb    eax,0x96362081
  403eb6:	test   DWORD PTR [eax],ebx
  403eb8:	or     ch,BYTE PTR [ebx+0x101d4ed1]
  403ebe:	mov    ah,0x63
  403ec0:	mov    ebp,0xc9e7f2be
  403ec5:	or     DWORD PTR [eax+0x18],ecx
  403ec8:	stos   DWORD PTR es:[edi],eax
  403ec9:	int    0x51
  403ecb:	popa   
  403ecc:	add    BYTE PTR [eax+0x7f],bl
  403ecf:	bound  esp,QWORD PTR [edi+0x5a]
  403ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed3:	mov    cl,0x9
  403ed5:	push   edi
  403ed6:	mov    ecx,ebp
  403ed8:	scas   al,BYTE PTR es:[edi]
  403ed9:	jae    0x403f13
  403edb:	inc    esp
  403edc:	sbb    BYTE PTR [edx+0x3da95e3a],ch
  403ee2:	imul   ebp,DWORD PTR [ecx],0x79
  403ee5:	xor    DWORD PTR [ecx-0x6],ebx
  403ee8:	push   ebx
  403ee9:	(bad)  
  403eea:	ficomp DWORD PTR [edi]
  403eec:	(bad)  
  403eed:	mov    al,ds:0x1efde1d6
  403ef2:	ds popf 
  403ef4:	fbld   TBYTE PTR [ecx-0xbd0860c]
  403efa:	xchg   edx,eax
  403efb:	fdivr  QWORD PTR [ecx]
  403efd:	in     eax,dx
  403efe:	cmp    DWORD PTR [edi],0x62
  403f01:	adc    ecx,0x4c
  403f04:	jae    0x403ea3
  403f06:	imul   edx,DWORD PTR [edi+0x2aa57e9],0x9ca32247
  403f10:	sar    ch,1
  403f12:	mov    esp,0x6083754c
  403f17:	sbb    ch,0x70
  403f1a:	(bad)  
  403f1b:	es icebp 
  403f1d:	push   ds
  403f1e:	int3   
  403f1f:	push   edx
  403f20:	fucomip st,st(4)
  403f22:	pushf  
  403f23:	outs   dx,DWORD PTR ds:[esi]
  403f24:	rcl    DWORD PTR [ecx-0x5a],0x37
  403f28:	jmp    0x403ef8
  403f2a:	int3   
  403f2b:	popf   
  403f2c:	xor    eax,0xd8da63bc
  403f31:	mov    ds:0x5c57a7eb,al
  403f36:	jp     0x403f19
  403f38:	les    ebp,FWORD PTR [esp+edx*1-0x3b]
  403f3c:	pop    edx
  403f3d:	ret    0xa9aa
  403f40:	repz hlt 
  403f42:	iret   
  403f43:	push   cs
  403f44:	gs fs lahf 
  403f47:	dec    esp
  403f48:	and    al,0xec
  403f4a:	sub    eax,0xcec8189f
  403f4f:	xchg   esi,eax
  403f50:	fwait
  403f51:	enter  0xc65,0x5c
  403f55:	mov    esp,0x95ed911e
  403f5a:	mov    ebx,0x57c4e1f8
  403f5f:	in     al,dx
  403f60:	fisubr WORD PTR [esp+ebx*4-0x64]
  403f64:	push   ss
  403f65:	iret   
  403f66:	dec    edx
  403f67:	mov    gs,WORD PTR [ebp-0x5b]
  403f6a:	mov    esp,DWORD PTR [ebp+0x33a9cf06]
  403f70:	push   ss
  403f71:	sbb    DWORD PTR [edi],ebx
  403f73:	push   eax
  403f74:	loope  0x403f57
  403f76:	fabs   
  403f78:	jmp    0xe4ff5e18
  403f7d:	(bad)  
  403f7e:	icebp  
  403f7f:	dec    eax
  403f80:	pop    edx
  403f81:	enter  0xbc6f,0xe1
  403f85:	imul   edx,DWORD PTR [ebp+0x35],0x5d
  403f89:	test   DWORD PTR ds:0x4cea0e2b,ebp
  403f8f:	mov    esi,DWORD PTR [edi+eiz*4]
  403f92:	sar    BYTE PTR cs:[ebx],cl
  403f95:	mov    edx,fs
  403f97:	mov    ah,0xe9
  403f99:	ret    
  403f9a:	mov    al,0xe5
  403f9c:	out    dx,al
  403f9d:	cwde   
  403f9e:	push   es
  403f9f:	arpl   WORD PTR [edx+0x70],cx
  403fa2:	mov    ah,0xda
  403fa4:	jle    0x403f6a
  403fa6:	xor    DWORD PTR [edx-0x16],ebx
  403fa9:	add    eax,DWORD PTR [ebp-0x3cb52184]
  403faf:	sahf   
  403fb0:	mov    al,ds:0xa5728386
  403fb5:	cmp    BYTE PTR [edx+0x1999256d],cl
  403fbb:	xchg   BYTE PTR [ecx-0xd1346ef],bl
  403fc1:	jbe    0x404027
  403fc3:	scas   eax,DWORD PTR es:[edi]
  403fc4:	pushf  
  403fc5:	mov    ds:0x2d468f09,eax
  403fca:	popa   
  403fcb:	dec    esp
  403fcc:	(bad)  [ebx+eiz*1]
  403fcf:	cdq    
  403fd0:	shl    DWORD PTR [ecx+ecx*1-0x57],0x99
  403fd5:	stos   BYTE PTR es:[edi],al
  403fd6:	pop    ecx
  403fd7:	lods   eax,DWORD PTR ds:[esi]
  403fd8:	scas   eax,DWORD PTR es:[edi]
  403fd9:	dec    ebx
  403fda:	add    eax,0xc3c3d65b
  403fdf:	cdq    
  403fe0:	jo     0x403fe2
  403fe2:	scas   al,BYTE PTR es:[edi]
  403fe3:	lahf   
  403fe4:	lea    ecx,[edi+0xa]
  403fe7:	loope  0x403fb4
  403fe9:	dec    esp
  403fea:	mov    ch,0x44
  403fec:	jae    0x404015
  403fee:	pop    esi
  403fef:	push   ss
  403ff0:	mov    dl,0xb8
  403ff2:	cdq    
  403ff3:	sar    DWORD PTR [edx-0x58],cl
  403ff6:	ret    0x3e05
  403ff9:	mov    ecx,0xa9f0de97
  403ffe:	mov    esi,0xa08472b8
  404003:	jl     0x403fcf
  404005:	stc    
  404006:	popa   
  404007:	xchg   edi,eax
  404008:	push   ecx
  404009:	xor    ah,dl
  40400b:	pop    eax
  40400c:	cmc    
  40400d:	mov    ah,0x36
  40400f:	mov    al,ds:0xfe4d2ad0
  404014:	pop    esi
  404015:	pop    ds
  404016:	daa    
  404017:	(bad)  
  404018:	out    dx,al
  404019:	aas    
  40401a:	call   0xe1251d2
  40401f:	or     eax,0x44580e95
  404024:	sub    bh,0x88
  404027:	std    
  404028:	add    DWORD PTR [esi+0x5fc64336],edx
  40402e:	dec    edx
  40402f:	ja     0x404038
  404031:	mov    dl,0x4b
  404033:	xchg   edx,eax
  404034:	lock arpl WORD PTR [ebx],di
  404037:	mov    esi,0xcb2ebac8
  40403c:	repz std 
  40403e:	das    
  40403f:	add    DWORD PTR [esi+0xeac3970],esi
  404045:	pop    ds
  404046:	sar    bh,cl
  404048:	iret   
  404049:	les    ecx,FWORD PTR [edi]
  40404b:	ins    DWORD PTR es:[edi],dx
  40404c:	fist   WORD PTR ds:[ecx+eax*8+0xe]
  404051:	mov    WORD PTR [edx-0xa],gs
  404054:	in     eax,0xc5
  404056:	lahf   
  404057:	jle    0x404088
  404059:	xchg   ebp,eax
  40405a:	cmp    bl,al
  40405c:	scas   eax,DWORD PTR es:[edi]
  40405d:	and    al,0x38
  40405f:	cmp    ah,BYTE PTR [ebp-0x2b479bd4]
  404065:	adc    bh,BYTE PTR [ebp-0x40]
  404068:	sar    DWORD PTR [ecx+0x2a],1
  40406b:	and    BYTE PTR [eax],ah
  40406d:	in     al,0x18
  40406f:	neg    DWORD PTR [esi-0xb]
  404072:	loope  0x404065
  404074:	jg     0x4040d9
  404076:	sbb    eax,0xa6e61750
  40407b:	xchg   ebp,eax
  40407c:	jmp    0xe464ca40
  404081:	retf   
  404082:	mov    bh,0xb6
  404084:	in     al,dx
  404085:	shl    BYTE PTR [ebp+0xa093c72],0x14
  40408c:	mov    ah,0x5
  40408e:	retf   0xde80
  404091:	adc    esi,DWORD PTR [ebx+ecx*8+0x2dd967ac]
  404098:	fsin   
  40409a:	rcr    DWORD PTR [eax+0x2e],cl
  40409d:	cmp    esi,DWORD PTR [ecx]
  40409f:	icebp  
  4040a0:	ins    BYTE PTR es:[edi],dx
  4040a1:	sti    
  4040a2:	ss je  0x4040eb
  4040a5:	daa    
  4040a6:	into   
  4040a7:	in     eax,dx
  4040a8:	out    0xbc,eax
  4040aa:	jnp    0x40408f
  4040ac:	scas   al,BYTE PTR es:[edi]
  4040ad:	xchg   esi,eax
  4040ae:	mov    al,ds:0xa0bcfbf
  4040b3:	(bad)  
  4040b4:	out    dx,eax
  4040b5:	cs (bad) 
  4040b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b8:	dec    ebp
  4040b9:	xchg   ebp,eax
  4040ba:	xor    ebp,esp
  4040bc:	fwait
  4040bd:	adc    eax,ecx
  4040bf:	add    ah,BYTE PTR [edi-0x73eb96d1]
  4040c5:	mov    eax,0x51b4ad63
  4040ca:	popa   
  4040cb:	fidivr DWORD PTR [eax-0x69a27978]
  4040d1:	pop    eax
  4040d2:	push   cs
  4040d3:	(bad)  
  4040d4:	pusha  
  4040d5:	xor    ebp,ebp
  4040d7:	pop    ds
  4040d8:	sub    ecx,DWORD PTR [ebx+0x6c62d79c]
  4040de:	sub    al,0x61
  4040e0:	jle    0x404075
  4040e2:	cmp    edx,DWORD PTR [ebx+0x7c]
  4040e5:	mov    edi,0x7acab858
  4040ea:	push   es
  4040eb:	cmp    al,0x31
  4040ed:	jmp    0x460b37e3
  4040f2:	adc    eax,0xb08de7b
  4040f7:	xchg   edi,eax
  4040f8:	test   ebx,ebx
  4040fa:	dec    ebp
  4040fb:	lods   al,BYTE PTR ds:[esi]
  4040fc:	adc    DWORD PTR [edx-0x6710b607],0x35
  404103:	xor    ecx,DWORD PTR [eax+0x53885c55]
  404109:	pop    ds
  40410a:	call   0x1729e6a4
  40410f:	xchg   esi,eax
  404110:	int    0xed
  404112:	jecxz  0x4040f1
  404114:	push   eax
  404115:	fcom   QWORD PTR [eax-0x53]
  404118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404119:	adc    al,0x14
  40411b:	mov    al,ds:0x4076973c
  404120:	stc    
  404121:	(bad)  
  404122:	push   esi
  404123:	xor    ebp,DWORD PTR [edx]
  404125:	fdivr  DWORD PTR [ecx]
  404127:	div    ecx
  404129:	dec    edi
  40412a:	xchg   esp,eax
  40412b:	ror    al,cl
  40412d:	jge    0x4040be
  40412f:	sub    al,0xba
  404131:	jmp    0xfc92:0x5e7f9cb0
  404138:	stos   DWORD PTR es:[edi],eax
  404139:	js     0x404174
  40413b:	es mov esp,0xe02311c
  404141:	les    esp,FWORD PTR [eax]
  404143:	xlat   BYTE PTR ds:[ebx]
  404144:	ins    DWORD PTR es:[edi],dx
  404145:	and    DWORD PTR [eax+0x1e],0xffffff87
  404149:	call   0x7a14140f
  40414e:	xor    ecx,esp
  404150:	into   
  404151:	dec    esi
  404152:	test   BYTE PTR ds:0xcab8d1eb,cl
  404158:	idiv   ebp
  40415a:	ja     0x4041b7
  40415c:	pop    esp
  40415d:	add    BYTE PTR ds:0x77478f9c,cl
  404163:	outs   dx,BYTE PTR ds:[esi]
  404164:	mov    esp,0x5671dc89
  404169:	frstor [ebx+0x7af3d55b]
  40416f:	cli    
  404170:	lods   al,BYTE PTR ds:[esi]
  404171:	lds    edx,FWORD PTR [esi+eiz*1]
  404174:	sbb    edi,ecx
  404176:	test   BYTE PTR [edx],ch
  404178:	nop
  404179:	jmp    0x4041c6
  40417b:	jnp    0x404161
  40417d:	(bad)  
  40417e:	and    al,0x6f
  404180:	lock mov eax,ds:0x9d5d1a07
  404186:	xlat   BYTE PTR ds:[ebx]
  404187:	jns    0x40410e
  404189:	mov    ecx,0xb009425d
  40418e:	sbb    eax,DWORD PTR [ebx+0x22]
  404191:	gs cld 
  404193:	add    dl,BYTE PTR [esi+0x4d3b427f]
  404199:	jge    0x40412c
  40419b:	or     eax,0xef07e9ae
  4041a0:	push   0xffffffbc
  4041a2:	pop    ds
  4041a3:	push   0x11
  4041a5:	dec    edi
  4041a6:	out    0xea,al
  4041a8:	scas   al,BYTE PTR es:[edi]
  4041a9:	push   0x62a8f54a
  4041ae:	int3   
  4041af:	mov    ds:0x6fbb1473,al
  4041b4:	and    cl,BYTE PTR [edi-0x4b]
  4041b7:	add    BYTE PTR [eax+0x5fb9b5fa],ch
  4041bd:	shl    edx,cl
  4041bf:	mov    ebp,DWORD PTR [eax-0x54]
  4041c2:	loopne 0x4041f9
  4041c4:	test   al,0xd4
  4041c6:	hlt    
  4041c7:	repz sbb al,0x87
  4041ca:	dec    esp
  4041cb:	sub    edi,DWORD PTR [edx+0x6e]
  4041ce:	loope  0x40420e
  4041d0:	jnp    0x404202
  4041d2:	lds    eax,FWORD PTR [edi]
  4041d4:	pop    edx
  4041d5:	cli    
  4041d6:	icebp  
  4041d7:	nop
  4041d8:	adc    al,0xd1
  4041da:	push   ds
  4041db:	shr    DWORD PTR [edx-0x67],cl
  4041de:	rcr    DWORD PTR [esi+ebx*2+0x67],0x93
  4041e3:	data16 adc BYTE PTR [esi-0x2],bl
  4041e7:	je     0x404256
  4041e9:	ret    0xc7a6
  4041ec:	arpl   WORD PTR [edx+esi*4],ax
  4041ef:	mov    al,BYTE PTR [edi+0x1c]
  4041f2:	rcl    BYTE PTR [esp+eiz*8+0x1d6b1e8],cl
  4041f9:	push   esi
  4041fa:	xor    eax,0xfd962511
  4041ff:	dec    esi
  404200:	xchg   edi,eax
  404201:	add    BYTE PTR [ebx-0x1cf47d62],ch
  404207:	or     esp,DWORD PTR [ebx+0x6d]
  40420a:	push   edx
  40420b:	jo     0x4041b5
  40420d:	pop    edx
  40420e:	inc    edi
  40420f:	ins    DWORD PTR es:[edi],dx
  404210:	sti    
  404211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404212:	jle    0x4041d5
  404214:	jne    0x4041a4
  404216:	xchg   edx,eax
  404217:	push   eax
  404218:	in     al,dx
  404219:	mov    dh,bh
  40421b:	sbb    eax,0x9b755dc
  404220:	retf   
  404221:	fcom   st(2)
  404223:	sub    eax,0x3a1a6597
  404228:	push   ds
  404229:	jmp    0xc2d0:0xcab926e3
  404230:	cmp    edi,ecx
  404232:	fucomi st,st(4)
  404234:	popa   
  404235:	sbb    DWORD PTR [ebp-0x378bf965],ebp
  40423b:	(bad)
  404240:	mov    edi,0xa7d50ae8
  404245:	or     DWORD PTR [eax],ebx
  404247:	xchg   ebp,eax
  404248:	pop    ss
  404249:	(bad)  
  40424b:	packuswb mm7,QWORD PTR [esi]
  40424e:	inc    esi
  40424f:	xchg   esi,eax
  404250:	fstp   QWORD PTR [ecx-0x2e52c8fc]
  404256:	imul   esi,DWORD PTR [ebx],0x42
  404259:	mov    ch,0x1c
  40425b:	jno    0x4042be
  40425d:	sar    BYTE PTR fs:[ebp-0x59424d2d],cl
  404264:	xchg   ebp,eax
  404265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404266:	mov    ds:0x61bbdcd0,al
  40426b:	cs stos DWORD PTR es:[edi],eax
  40426d:	mov    ah,0xc8
  40426f:	fmul   st(1),st
  404271:	jp     0x404208
  404273:	addr16 fwait
  404275:	sbb    BYTE PTR [ecx-0x46],bl
  404278:	mov    edx,0x8c38c12e
  40427d:	jnp    0x404254
  40427f:	jmp    0x4042ab
  404281:	jb     0x40423f
  404283:	lods   al,BYTE PTR ds:[esi]
  404284:	cmp    eax,0x31116897
  404289:	cld    
  40428a:	fimul  DWORD PTR [ebx+0x26e9a21c]
  404290:	mov    DWORD PTR ds:0x8ec32e83,esp
  404296:	jmp    0x3137e6d4
  40429b:	dec    ecx
  40429c:	fcom   QWORD PTR [eax-0x4f2f88f3]
  4042a2:	out    0xaf,eax
  4042a4:	push   0xfdafd65f
  4042a9:	xor    bl,BYTE PTR [esi+0x3be3031b]
  4042af:	adc    DWORD PTR [esp+edi*4],ebx
  4042b2:	leave  
  4042b3:	sub    DWORD PTR [esi],ecx
  4042b5:	xchg   BYTE PTR [edi+0x6e],dh
  4042b8:	or     ebp,DWORD PTR [ecx]
  4042ba:	test   al,0x9
  4042bc:	push   cs
  4042bd:	call   0xb1109136
  4042c2:	inc    ecx
  4042c3:	mov    bh,bh
  4042c5:	add    dh,BYTE PTR [eax+0x1e]
  4042c8:	ja     0x404326
  4042ca:	push   es
  4042cb:	es loopne 0x4042e7
  4042ce:	(bad)  
  4042cf:	adc    DWORD PTR [edi],edi
  4042d1:	adc    DWORD PTR [edi+0x2a],esi
  4042d4:	vpmacssww xmm5,xmm6,xmm7,xmm7
  4042da:	mov    ch,0x57
  4042dc:	add    al,0x2e
  4042de:	xchg   ebp,eax
  4042df:	pop    es
  4042e0:	dec    ebp
  4042e1:	cmp    bl,bh
  4042e3:	cmp    al,0x60
  4042e5:	push   ebx
  4042e6:	push   0xffffffc3
  4042e8:	addr16 adc dh,bh
  4042eb:	dec    esp
  4042ec:	lock cmp al,BYTE PTR [ecx+0x21]
  4042f0:	jmp    0x4042ee
  4042f2:	es mov ebp,0xe8e06979
  4042f9:	xchg   ebp,eax
  4042fa:	bound  ecx,QWORD PTR [ecx-0x52]
  4042fd:	push   ds
  4042fe:	or     al,0xbc
  404300:	mov    ah,0x8a
  404302:	lahf   
  404303:	inc    ebx
  404304:	sbb    eax,0x9a633fde
  404309:	inc    edx
  40430a:	not    ecx
  40430c:	jl     0x404291
  40430e:	add    BYTE PTR [eax+0x6e608d89],dh
  404314:	jle    0x4042fe
  404316:	cmp    BYTE PTR [esi-0x1f589771],cl
  40431c:	mov    bh,BYTE PTR [ecx]
  40431e:	xor    al,0xa
  404320:	ret    
  404321:	jge    0x4042da
  404323:	or     eax,0x35ea21c9
  404328:	inc    ebx
  404329:	sti    
  40432a:	push   ebp
  40432b:	call   0x9074:0x47e91471
  404332:	cmp    ah,BYTE PTR [eax+edi*8]
  404335:	add    al,0x71
  404337:	or     ebp,DWORD PTR [esi+0x59]
  40433a:	pop    edx
  40433b:	repnz adc eax,0xa8ba66c2
  404341:	dec    ebx
  404342:	push   eax
  404343:	inc    esi
  404344:	inc    esp
  404345:	arpl   WORD PTR [edi],sp
  404347:	dec    eax
  404348:	pop    ecx
  404349:	clc    
  40434a:	mov    ebp,0x8214b24d
  40434f:	inc    ecx
  404350:	enter  0x3fa0,0x78
  404354:	cwde   
  404355:	jmp    0x2380:0x2482d163
  40435c:	and    eax,0x2ebc9bb0
  404361:	popf   
  404362:	pop    ds
  404363:	fld    QWORD PTR [edx]
  404365:	push   ds
  404366:	mov    ds:0xc4e88add,al
  40436b:	arpl   WORD PTR [edx+0x6da23cf9],bx
  404371:	push   ebp
  404372:	inc    DWORD PTR [ebx]
  404374:	xor    eax,0x8edd6e59
  404379:	xor    eax,DWORD PTR [edx]
  40437b:	pop    edi
  40437c:	mov    al,ch
  40437e:	and    al,0x69
  404380:	(bad)  
  404381:	mov    edx,0x3a56d59
  404386:	pop    ebx
  404387:	jmp    0x62c04936
  40438c:	adc    edx,DWORD PTR [ebx+0x6acda3ce]
  404392:	xchg   edi,eax
  404393:	push   esp
  404394:	dec    esi
  404395:	arpl   WORD PTR [esi-0x1],bp
  404398:	xchg   edi,eax
  404399:	call   0xcc90f845
  40439e:	mov    cl,0x9e
  4043a0:	fisub  WORD PTR [esi-0x1d524c96]
  4043a6:	jp     0x4043a2
  4043a8:	pop    ebp
  4043a9:	sar    ah,1
  4043ab:	scas   eax,DWORD PTR es:[edi]
  4043ac:	and    ebx,ecx
  4043ae:	arpl   si,ax
  4043b0:	(bad)  
  4043b2:	dec    esp
  4043b3:	push   ebx
  4043b4:	or     BYTE PTR [edi-0x3db8a209],0x40
  4043bb:	pushf  
  4043bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043bd:	sub    al,0x5b
  4043bf:	lahf   
  4043c0:	mov    ds:0x6349e754,al
  4043c5:	sbb    al,0xeb
  4043c7:	aad    0x8c
  4043c9:	jnp    0x40437c
  4043cb:	inc    esp
  4043cc:	ss sti 
  4043ce:	shl    edi,0x86
  4043d1:	xchg   ecx,eax
  4043d2:	std    
  4043d3:	aam    0xfa
  4043d5:	aam    0xa7
  4043d7:	nop/reserved BYTE PTR [ebp+eiz*8-0x41]
  4043dc:	stc    
  4043dd:	test   ch,dl
  4043df:	mov    DWORD PTR [eax+eax*4],esp
  4043e2:	fldcw  WORD PTR [ebx-0x5]
  4043e5:	cmc    
  4043e6:	mov    dl,0xbd
  4043e8:	dec    ebx
  4043e9:	test   al,0x84
  4043eb:	scas   al,BYTE PTR es:[edi]
  4043ec:	dec    eax
  4043ed:	aad    0x97
  4043ef:	dec    eax
  4043f0:	push   ebp
  4043f1:	cld    
  4043f2:	xchg   esi,eax
  4043f3:	push   ebp
  4043f4:	dec    esi
  4043f5:	pop    edx
  4043f6:	ins    BYTE PTR es:[edi],dx
  4043f7:	xlat   BYTE PTR ds:[ebx]
  4043f8:	pop    edx
  4043f9:	pop    ebx
  4043fa:	sbb    BYTE PTR ds:0x62ade7,bl
  404400:	lods   al,BYTE PTR ds:[esi]
  404401:	sbb    BYTE PTR [eax+eax*4+0x5b],ah
  404405:	sub    esi,0xffffffbe
  404408:	adc    ebx,ebp
  40440a:	mov    BYTE PTR [ebx+0x57],cl
  40440d:	rcr    DWORD PTR [eax],1
  40440f:	rcl    BYTE PTR [esi],cl
  404411:	mov    WORD PTR [edi],?
  404413:	push   cs
  404414:	cld    
  404415:	retf   0xe0b0
  404418:	js     0x404446
  40441a:	adc    esp,0x7a406fd
  404420:	xor    eax,0xd734a710
  404425:	xchg   edx,eax
  404426:	adc    al,0x5
  404428:	(bad)  
  404429:	mov    BYTE PTR [ebx+esi*8-0x37],dh
  40442d:	fcmovne st,st(2)
  40442f:	adc    BYTE PTR [esi],dl
  404431:	jnp    0x404458
  404433:	pop    ecx
  404434:	fistp  DWORD PTR [ecx+0x72b0ec0c]
  40443a:	mov    edx,0xafa802cf
  40443f:	push   0xb3f45c7e
  404444:	stos   BYTE PTR es:[edi],al
  404445:	ds lock mov bh,0x18
  404449:	rcl    BYTE PTR [eax+0x3a],cl
  40444c:	mov    eax,0xdbe99de6
  404451:	scas   eax,DWORD PTR es:[edi]
  404452:	je     0x4043fb
  404454:	popa   
  404455:	pop    edi
  404456:	jecxz  0x4043fa
  404458:	lods   al,BYTE PTR ds:[esi]
  404459:	mov    ds,WORD PTR [esi+0x6d]
  40445c:	pusha  
  40445d:	mov    ecx,0x4d6475f7
  404462:	neg    dl
  404464:	dec    esi
  404465:	sbb    bh,dl
  404467:	loopne 0x404427
  404469:	push   es
  40446a:	shl    DWORD PTR [ebx],0xbc
  40446d:	repz mov eax,ds:0x2f28881a
  404473:	mov    esi,0x8d287d1e
  404478:	inc    ecx
  404479:	xchg   ebp,eax
  40447a:	(bad)  
  40447b:	cmp    al,0x61
  40447d:	cmp    bl,cl
  40447f:	(bad)  
  404480:	es jecxz 0x40441c
  404483:	adc    al,0x70
  404485:	xchg   DWORD PTR [edx-0x11],eax
  404488:	(bad)  
  404489:	ins    DWORD PTR es:[edi],dx
  40448a:	push   ecx
  40448b:	shl    ah,cl
  40448d:	mov    ah,0xeb
  40448f:	cs mov cl,0x3a
  404492:	(bad)
  404495:	stc    
  404496:	sahf   
  404497:	retf   0xc559
  40449a:	call   0xc7ba5f6f
  40449f:	je     0x4044ff
  4044a1:	int3   
  4044a2:	(bad)  
  4044a4:	out    dx,eax
  4044a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044a6:	repz les ebx,FWORD PTR [ecx+0x7ce03836]
  4044ad:	adc    DWORD PTR [ebx+0x6],edx
  4044b0:	sbb    al,0x68
  4044b2:	inc    ebp
  4044b3:	je     0x4044ab
  4044b5:	or     BYTE PTR [edi+0x62],dh
  4044b8:	dec    esi
  4044b9:	stos   BYTE PTR es:[edi],al
  4044ba:	lea    esp,[ebx-0x44]
  4044bd:	mov    ecx,ebx
  4044bf:	sbb    esi,DWORD PTR [eax+0x2ecd0190]
  4044c5:	jne    0x40453d
  4044c7:	mov    BYTE PTR fs:[eax],al
  4044ca:	outs   dx,DWORD PTR ds:[esi]
  4044cb:	ror    BYTE PTR [ebp+0x75b9c85b],1
  4044d1:	cmp    eax,0xf4de28c2
  4044d6:	inc    edi
  4044d7:	cmp    DWORD PTR [esi],ebp
  4044d9:	pushf  
  4044da:	sub    esi,0xffffffe7
  4044dd:	pop    es
  4044de:	rcr    BYTE PTR [esi+0x32],1
  4044e1:	sbb    bl,BYTE PTR [ecx+0x8]
  4044e4:	adc    esi,DWORD PTR [esi]
  4044e6:	into   
  4044e7:	inc    edi
  4044e8:	mov    al,0xeb
  4044ea:	add    eax,0x62e15f09
  4044ef:	xor    eax,0xf2072398
  4044f4:	stos   BYTE PTR es:[edi],al
  4044f5:	bound  ebp,QWORD PTR [ecx-0x3c]
  4044f8:	ret    
  4044f9:	fstp   DWORD PTR [ebp+0x6c25b05e]
  4044ff:	or     dh,ah
  404501:	or     BYTE PTR ss:[edx+0x21],bh
  404505:	mov    BYTE PTR [edx],al
  404507:	sbb    al,BYTE PTR [ebx]
  404509:	push   ecx
  40450a:	xchg   esi,eax
  40450b:	jae    0x4044f3
  40450d:	ja     0x4044cd
  40450f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404510:	xchg   esi,eax
  404511:	imul   esi,DWORD PTR [eax*1+0x36d38abd],0x0
  404519:	mov    WORD PTR [ecx],?
  40451b:	cmp    ch,BYTE PTR [ebx]
  40451d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451e:	enter  0xa88b,0xb8
  404522:	mov    ds:0xb6589180,al
  404527:	inc    esi
  404528:	or     ebx,DWORD PTR [ebp+0x33711e6a]
  40452e:	xchg   edi,eax
  40452f:	(bad)  
  404530:	shl    BYTE PTR [ecx+0x617afd70],cl
  404536:	fisubr DWORD PTR [esi]
  404538:	dec    edi
  404539:	mov    dh,0x8
  40453b:	mov    ds:0xcf5af6d8,eax
  404540:	test   eax,0x2a3c376d
  404545:	out    0xc8,al
  404547:	sbb    esi,DWORD PTR [eax-0x635ad22b]
  40454d:	loop   0x404540
  40454f:	adc    eax,0xce7f60bf
  404554:	mov    esp,0xc47aa9e6
  404559:	cmp    bl,bl
  40455b:	dec    esi
  40455c:	mov    eax,0xe48a6fa
  404561:	or     al,0xae
  404563:	fcomp  st(5)
  404565:	ror    DWORD PTR [edx],cl
  404567:	add    eax,0xed47daa1
  40456c:	bound  ecx,QWORD PTR [edi]
  40456e:	cmp    eax,DWORD PTR ds:0x6ca5f99c
  404574:	stos   BYTE PTR es:[edi],al
  404575:	and    ecx,0x5
  404578:	ret    0xb297
  40457b:	dec    ebx
  40457c:	dec    ebx
  40457d:	std    
  40457e:	clc    
  40457f:	imul   edx,DWORD PTR [eax],0x11e54036
  404585:	lea    ebx,[ecx]
  404587:	mov    BYTE PTR [ecx-0x9],dl
  40458a:	or     dl,bl
  40458c:	fidiv  WORD PTR [eax+0x166559fe]
  404592:	inc    ebp
  404593:	pushf  
  404594:	mov    bh,0x61
  404597:	sar    BYTE PTR [esi],cl
  404599:	out    0x64,al
  40459b:	ret    0x6b2e
  40459e:	push   edi
  40459f:	fild   WORD PTR [ebx-0x327a8ba5]
  4045a5:	mov    al,0xce
  4045a7:	ins    DWORD PTR es:[edi],dx
  4045a8:	rcr    ah,0x32
  4045ab:	adc    eax,0x98a824b1
  4045b0:	adc    eax,0x82bae70f
  4045b5:	shl    ah,cl
  4045b7:	out    dx,eax
  4045b8:	stos   DWORD PTR es:[edi],eax
  4045b9:	mov    ah,BYTE PTR [edx+eiz*1-0x7f4d28e0]
  4045c0:	imul   DWORD PTR [ebx-0x717946c2]
  4045c6:	daa    
  4045c7:	mov    edi,0x3c2e4e44
  4045cc:	into   
  4045cd:	mov    dh,0x5
  4045cf:	lea    ebp,[edi]
  4045d1:	sbb    DWORD PTR [edi+0x49],ebx
  4045d4:	pushf  
  4045d5:	pop    es
  4045d6:	or     BYTE PTR [eax+0x254ed7f6],dl
  4045dc:	mov    ds:0x978fb6d5,eax
  4045e1:	popf   
  4045e2:	mov    eax,ds:0x41fbada8
  4045e7:	jge    0x404645
  4045e9:	inc    ch
  4045eb:	and    ch,al
  4045ed:	push   0x1ad72e1a
  4045f2:	lods   eax,DWORD PTR ds:[esi]
  4045f3:	in     al,0x28
  4045f5:	inc    esp
  4045f6:	cdq    
  4045f7:	mov    dh,0xb8
  4045f9:	in     eax,0xae
  4045fb:	ret    
  4045fc:	bound  ebx,QWORD PTR [edi-0xf4d1e18]
  404602:	jecxz  0x404587
  404604:	fcomp  QWORD PTR [esi]
  404606:	adc    al,0x81
  404608:	or     DWORD PTR [ebp-0x28132362],0x6
  40460f:	ret    0x7de7
  404612:	call   0x9bdaf1df
  404617:	mov    edx,0xe1909eae
  40461c:	and    BYTE PTR [edi],bl
  40461e:	mov    ah,BYTE PTR [ecx-0x5b]
  404621:	lea    eax,[ebx-0x2d]
  404624:	or     DWORD PTR [edx+0x108bdc1b],eax
  40462a:	retf   0x8c99
  40462d:	lds    esi,FWORD PTR [edi+0x52685506]
  404633:	dec    edx
  404634:	icebp  
  404635:	dec    ecx
  404636:	in     eax,0x90
  404638:	das    
  404639:	mov    cl,0x6c
  40463b:	ds sub eax,0xb9189c89
  404641:	cmp    eax,0x4bcfad7d
  404646:	repnz add cl,bh
  404649:	scas   eax,DWORD PTR es:[edi]
  40464a:	or     cl,dh
  40464c:	xchg   ebx,eax
  40464d:	fcom   QWORD PTR [ebx-0x51]
  404650:	sub    eax,0x79c8e624
  404655:	int    0xd2
  404657:	lock (bad) 
  404659:	aad    0x54
  40465b:	mov    cl,0xee
  40465d:	int3   
  40465e:	mov    dh,0xac
  404660:	in     eax,dx
  404661:	cli    
  404662:	pushf  
  404663:	cmp    BYTE PTR [ecx+0x354e1548],0xce
  40466a:	ret    0x5057
  40466d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40466e:	retf   
  40466f:	test   BYTE PTR [edi-0x24],ah
  404672:	ja     0x404646
  404674:	xchg   BYTE PTR [edx-0x71860742],ah
  40467a:	cmp    ebx,eax
  40467c:	fsubr  DWORD PTR ds:0x8f02c267
  404682:	jg     0x404632
  404684:	jg     0x4046d7
  404686:	cld    
  404687:	xor    BYTE PTR [eax+0x570d2bcb],cl
  40468d:	sar    BYTE PTR [edi+0x3b],1
  404690:	jp     0x404632
  404692:	dec    eax
  404693:	nop
  404694:	ja     0x4046ed
  404696:	pop    ebp
  404697:	mov    ah,0x2
  404699:	mov    dh,0x7e
  40469b:	xchg   edi,eax
  40469c:	inc    esi
  40469d:	jo     0x404627
  40469f:	ins    BYTE PTR es:[edi],dx
  4046a0:	pop    ecx
  4046a1:	das    
  4046a2:	lahf   
  4046a3:	pushf  
  4046a4:	push   edi
  4046a5:	fimul  DWORD PTR [ecx+0x4f]
  4046a8:	les    edi,FWORD PTR [ecx]
  4046aa:	push   0x50
  4046ac:	ret    0x1ee7
  4046af:	es jg  0x40467b
  4046b2:	and    eax,0xc3c696cf
  4046b7:	dec    ebx
  4046b8:	test   bl,bh
  4046ba:	jno    0x4046f3
  4046bc:	iret   
  4046bd:	push   ecx
  4046be:	xchg   esp,eax
  4046bf:	pop    ebp
  4046c0:	mov    ebp,0xd0b461ce
  4046c5:	or     al,0x34
  4046c7:	xchg   ebx,edx
  4046c9:	push   ss
  4046ca:	inc    ecx
  4046cb:	call   DWORD PTR ds:0x84a23314
  4046d1:	adc    DWORD PTR [ecx+0x3e8786da],edi
  4046d7:	push   ebp
  4046d8:	test   eax,0x2e4ce6a
  4046dd:	sahf   
  4046de:	or     BYTE PTR [ecx-0x68],dh
  4046e1:	mov    bh,0x3c
  4046e3:	or     BYTE PTR es:[edi+0x77415774],dl
  4046ea:	cmp    bh,al
  4046ec:	dec    edx
  4046ed:	sub    eax,0x4c82aa2d
  4046f2:	jp     0x4046ce
  4046f4:	fs or  al,0x3e
  4046f7:	cmp    dl,BYTE PTR [ebx+0x643c1322]
  4046fd:	push   es
  4046fe:	sti    
  4046ff:	ds je  0x40476d
  404702:	mov    dh,0x91
  404704:	adc    eax,0xb3d644d0
  404709:	ja     0x404754
  40470b:	dec    edi
  40470c:	fwait
  40470d:	pop    ss
  40470e:	cmp    BYTE PTR [bp+di+0x6559],0xc
  404714:	nop
  404715:	pop    esp
  404716:	pop    eax
  404717:	ins    BYTE PTR es:[edi],dx
  404718:	mov    ebx,0xa441ca1b
  40471d:	xchg   ebx,eax
  40471e:	push   eax
  40471f:	imul   esi,DWORD PTR [ebp+ebp*8-0x24a85fc3],0x34e0884e
  40472a:	not    ecx
  40472c:	in     eax,dx
  40472d:	pop    ss
  40472e:	push   eax
  40472f:	jns    0x4046f3
  404731:	mov    ds:0xb3d0ee61,eax
  404736:	lds    ebp,FWORD PTR [ebx+ebp*2]
  404739:	dec    edi
  40473a:	test   DWORD PTR [esp+ecx*8-0x18bf1cd6],esi
  404741:	cmp    DWORD PTR [esi-0x6d9ab9c8],eax
  404747:	outs   dx,BYTE PTR ds:[esi]
  404748:	fst    QWORD PTR [edi+0x66b17ef]
  40474e:	pop    ebp
  40474f:	rcl    DWORD PTR [edx+0x3a],1
  404752:	sbb    cl,dh
  404754:	adc    eax,ebp
  404756:	jl     0x4046f9
  404758:	out    0x73,eax
  40475a:	xlat   BYTE PTR ds:[ebx]
  40475b:	loop   0x404726
  40475d:	xchg   ecx,eax
  40475e:	inc    ebx
  40475f:	cld    
  404760:	out    0x6c,eax
  404762:	adc    BYTE PTR [edi+0x488017da],al
  404768:	pop    ss
  404769:	daa    
  40476a:	imul   ebp,ebp,0x25758643
  404770:	adc    bh,cl
  404772:	inc    edx
  404773:	fsubr  QWORD PTR [edx+edi*4-0x22fbc4d5]
  40477a:	addr16 jmp 0x4047b4
  40477d:	add    BYTE PTR [ebx+0x279805d0],bh
  404783:	in     al,dx
  404784:	push   esp
  404785:	dec    ebx
  404786:	xor    BYTE PTR [esi-0x7e],cl
  404789:	test   BYTE PTR [ebp+0x5c],ah
  40478c:	add    ebp,DWORD PTR [esi-0x1c5a002e]
  404792:	outs   dx,BYTE PTR ds:[esi]
  404793:	jae    0x4047b2
  404795:	nop
  404796:	div    DWORD PTR [esi+0x49ebeeff]
  40479c:	pushf  
  40479d:	pop    esi
  40479e:	neg    BYTE PTR [ecx+0x497f093c]
  4047a4:	pop    esi
  4047a5:	push   edx
  4047a6:	rcl    esi,1
  4047a8:	and    ebp,0x1e
  4047ab:	lea    edx,[ecx-0x7e4fa1a6]
  4047b1:	test   al,0x65
  4047b3:	addr16 shl dh,cl
  4047b6:	xchg   dl,dh
  4047b8:	sbb    DWORD PTR [edi-0x2c451cf1],ebp
  4047be:	hlt    
  4047bf:	out    0x4e,eax
  4047c1:	mov    esp,0x9e8fcfbf
  4047c6:	(bad)  
  4047c7:	or     al,0x4f
  4047c9:	in     al,dx
  4047ca:	xor    DWORD PTR [ecx+0x5c],eax
  4047cd:	jmp    0xf5a58836
  4047d2:	dec    esi
  4047d3:	sbb    DWORD PTR [edi+edi*8+0x59],edx
  4047d7:	mov    edx,0x1d527da3
  4047dc:	jb     0x404837
  4047de:	cmp    DWORD PTR [ecx+0x68],edx
  4047e1:	jnp    0x4047ba
  4047e3:	mov    ebp,0x11260388
  4047e8:	retf   0xa73c
  4047eb:	loop   0x404775
  4047ed:	ins    DWORD PTR es:[edi],dx
  4047ee:	jl     0x404834
  4047f0:	jl     0x40483f
  4047f2:	push   0xffffff97
  4047f4:	lea    ebx,[edi]
  4047f6:	jae    0x404778
  4047f8:	aas    
  4047f9:	add    eax,0xe149dd7
  4047fe:	mov    WORD PTR [ebx+0xf],?
  404801:	cmp    al,0xdc
  404803:	sar    BYTE PTR [edx+0x5862a161],cl
  404809:	add    edi,DWORD PTR [esi-0x1b]
  40480c:	xor    eax,0x2c98fe37
  404811:	pop    esi
  404812:	xor    bl,BYTE PTR [ebx-0x37]
  404815:	push   cs
  404816:	jmp    0x23aa:0x17d33a97
  40481d:	cmp    cl,BYTE PTR [eax+eiz*8]
  404820:	push   edi
  404821:	lods   al,BYTE PTR ds:[esi]
  404822:	push   ecx
  404823:	jae    0x40481e
  404825:	aam    0x7
  404827:	cmp    WORD PTR [ecx-0x29513761],bp
  40482e:	sahf   
  40482f:	out    0xdc,al
  404831:	dec    ecx
  404832:	aam    0x5
  404834:	aaa    
  404835:	add    DWORD PTR [eiz*2+0x49093967],0x5f
  40483d:	iret   
  40483e:	or     BYTE PTR [ebx],bl
  404840:	mov    bl,0x46
  404842:	scas   eax,DWORD PTR es:[edi]
  404843:	shr    BYTE PTR [edx+esi*4+0x26],cl
  404847:	cmp    BYTE PTR [eax+edx*4-0x3a],ch
  40484b:	int    0x62
  40484d:	xor    esi,ebp
  40484f:	mov    ecx,0xb60bbc5
  404854:	xor    DWORD PTR [ebp+0xe99118e],ebx
  40485a:	data16 fsub DWORD PTR [esi]
  40485d:	xacquire xchg DWORD PTR [eax],edi
  404860:	sub    eax,0xc1642030
  404865:	mov    ebp,0x34afde1
  40486a:	mov    ah,dl
  40486c:	out    0x29,eax
  40486e:	add    eax,0xdf82a17c
  404873:	outs   dx,BYTE PTR ds:[esi]
  404874:	and    dh,BYTE PTR [esi]
  404876:	push   esp
  404877:	mov    cl,0x6c
  404879:	and    al,0xbf
  40487b:	mov    ecx,0x6546492a
  404880:	sbb    dh,BYTE PTR [eax+0x15]
  404883:	(bad)  
  404884:	fnstcw WORD PTR [ebp+0x4953c3c4]
  40488a:	jb     0x4048fa
  40488c:	retf   0x3391
  40488f:	and    edx,DWORD PTR [ebx]
  404891:	test   BYTE PTR [edx+0x2e26fdd6],dh
  404897:	adc    ah,BYTE PTR [edi-0x3f20c3e]
  40489d:	std    
  40489e:	pop    edx
  40489f:	dec    ecx
  4048a0:	in     al,dx
  4048a1:	cmp    ah,BYTE PTR [ebx]
  4048a3:	fs fdivrp st(2),st
  4048a6:	mov    dh,0xe1
  4048a8:	mov    dh,0x50
  4048aa:	xchg   ebp,eax
  4048ab:	adc    eax,DWORD PTR [ecx+edi*4]
  4048ae:	shl    BYTE PTR [eax+0x1adc46fb],cl
  4048b4:	xchg   al,bl
  4048b6:	xchg   esp,eax
  4048b7:	in     eax,0xa2
  4048b9:	mov    cl,0x10
  4048bb:	inc    ebp
  4048bc:	cs pop ebp
  4048be:	stos   DWORD PTR es:[edi],eax
  4048bf:	cmp    BYTE PTR [esp+edi*8-0x18],dl
  4048c3:	mov    fs,WORD PTR [edx]
  4048c5:	xchg   esi,eax
  4048c6:	leave  
  4048c7:	mov    dl,BYTE PTR [edi-0x34422b92]
  4048cd:	inc    edi
  4048ce:	aad    0x11
  4048d0:	(bad)  
  4048d2:	repnz cmp BYTE PTR [ecx+0x462d863a],al
  4048d9:	jecxz  0x4048f5
  4048db:	ror    BYTE PTR [edx-0x4548dc13],cl
  4048e1:	gs or  al,0x7f
  4048e4:	push   ds
  4048e5:	push   0x1acfc448
  4048ea:	popf   
  4048eb:	cmp    edx,edi
  4048ed:	fidivr WORD PTR [ecx]
  4048ef:	pop    esp
  4048f0:	cmc    
  4048f1:	add    al,0x97
  4048f3:	jmp    0x7eb0:0x1efb7469
  4048fa:	mov    edi,0xeecce899
  4048ff:	inc    DWORD PTR [esi+eax*8+0x7797037b]
  404906:	adc    al,0x2a
  404908:	out    dx,al
  404909:	jl     0x404940
  40490b:	pop    ecx
  40490c:	pop    ebx
  40490d:	loope  0x404945
  40490f:	jb     0x404903
  404911:	cmp    eax,0xa13246aa
  404916:	repz pop ecx
  404918:	int    0x5a
  40491a:	and    dh,ch
  40491c:	jl     0x40494b
  40491e:	mov    dh,0x6d
  404920:	(bad)  
  404921:	stc    
  404922:	push   edx
  404923:	pop    ecx
  404924:	loopne 0x4048b9
  404926:	(bad)  
  404927:	jns    0x4048e7
  404929:	jle    0x40495c
  40492b:	push   ebp
  40492c:	xor    esi,DWORD PTR [ecx]
  40492e:	pop    ds
  40492f:	stos   DWORD PTR es:[edi],eax
  404930:	xchg   ecx,eax
  404931:	retf   
  404932:	mov    al,0xbd
  404934:	aad    0xba
  404936:	mov    edi,0x8fca0b56
  40493b:	adc    DWORD PTR [ecx],0x61469ef2
  404941:	jmp    0xb9c6:0x3926c7ff
  404948:	dec    esi
  404949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40494a:	fs js  0x40495f
  40494d:	xchg   esi,eax
  40494e:	aam    0xdb
  404950:	xchg   esi,eax
  404951:	sar    DWORD PTR [ebx+0x43],1
  404954:	push   ebx
  404955:	pop    es
  404956:	xchg   esp,eax
  404957:	jl     0x404916
  404959:	jecxz  0x40493e
  40495b:	shl    BYTE PTR [edx],1
  40495d:	or     eax,0xc20319e0
  404962:	sbb    al,BYTE PTR [ebx]
  404964:	sbb    eax,0xc41a6f69
  404969:	pushf  
  40496a:	sar    BYTE PTR [esi],cl
  40496c:	test   BYTE PTR [ebp-0x4219bfbb],bl
  404972:	or     BYTE PTR ds:0xc7edd479,bh
  404978:	adc    ch,BYTE PTR [eax+0x55b16f43]
  40497e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40497f:	fisttp DWORD PTR [ebx+0x688aa4f5]
  404985:	push   edi
  404986:	pop    ecx
  404987:	cwde   
  404988:	push   ds
  404989:	or     esi,DWORD PTR [ecx+0x27]
  40498c:	test   eax,eax
  40498e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40498f:	icebp  
  404990:	adc    al,0xad
  404992:	push   ss
  404993:	ret    
  404994:	scas   eax,DWORD PTR es:[edi]
  404995:	xchg   ebx,eax
  404996:	mov    dl,0xca
  404998:	fxtract 
  40499a:	out    0x9d,al
  40499c:	sub    eax,0x9293c46f
  4049a1:	and    edi,DWORD PTR fs:[ecx+0x5122c4e8]
  4049a8:	mov    eax,ds:0x9ea6e9c4
  4049ad:	add    eax,0xf9d54d01
  4049b2:	pop    ss
  4049b3:	adc    al,0x53
  4049b5:	imul   eax,DWORD PTR [ebx],0x20
  4049b8:	add    esi,DWORD PTR [eax]
  4049ba:	sbb    cl,bh
  4049bc:	mov    bh,BYTE PTR ds:0xc8522d60
  4049c2:	test   al,0xd8
  4049c4:	mov    al,ds:0x52b68310
  4049c9:	inc    ebx
  4049ca:	(bad)  
  4049cb:	mov    edi,0xc71ad5f
  4049d0:	mov    esp,0xe331368c
  4049d5:	imul   edx,DWORD PTR [ecx],0xffffffc2
  4049d8:	mov    ch,BYTE PTR [ebx+0x3]
  4049db:	sub    cl,BYTE PTR [esi]
  4049dd:	mov    eax,0x70b74f0d
  4049e2:	stos   BYTE PTR es:[edi],al
  4049e3:	mov    bh,0xf4
  4049e5:	retf   
  4049e6:	inc    eax
  4049e7:	test   al,0x1e
  4049e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ea:	xor    BYTE PTR [ecx],dh
  4049ec:	add    bl,ah
  4049ee:	xchg   esp,eax
  4049ef:	add    eax,0x2167ff5b
  4049f4:	add    al,0x7a
  4049f6:	mov    ds:0xcf2841a9,al
  4049fb:	aad    0x59
  4049fd:	or     dh,bh
  4049ff:	cld    
  404a00:	iret   
  404a01:	pop    edx
  404a02:	out    dx,eax
  404a03:	xchg   edi,eax
  404a04:	test   al,0xc0
  404a06:	rcl    bh,cl
  404a08:	jmp    0x404a11
  404a0a:	jb     0x404a63
  404a0c:	out    0xef,al
  404a0e:	(bad)  
  404a0f:	adc    al,0xe7
  404a11:	das    
  404a12:	shl    BYTE PTR [ecx-0x40b0156a],cl
  404a18:	lods   eax,DWORD PTR ds:[esi]
  404a19:	push   edi
  404a1a:	outs   dx,BYTE PTR ds:[esi]
  404a1b:	test   bl,al
  404a1d:	lods   al,BYTE PTR ds:[esi]
  404a1e:	loope  0x404a41
  404a20:	inc    ebx
  404a21:	sbb    esi,DWORD PTR [eax+0x1c03432a]
  404a27:	and    esp,DWORD PTR [ebx+0x1077ac3e]
  404a2d:	xchg   esp,eax
  404a2e:	push   esp
  404a2f:	sub    ch,BYTE PTR [esi+0x1f]
  404a32:	rcl    bl,cl
  404a34:	dec    ebp
  404a35:	int3   
  404a36:	retf   0xf341
  404a39:	bound  edi,QWORD PTR [esi]
  404a3b:	add    edi,DWORD PTR [ebx]
  404a3d:	push   0x6da1962f
  404a42:	mov    edi,0x196e236e
  404a47:	retf   0x805c
  404a4a:	jnp    0x404a3d
  404a4c:	fisttp QWORD PTR [eax+0x59ef9be3]
  404a52:	cmp    esp,0x5a
  404a55:	jle    0x404a10
  404a57:	jo     0x404a77
  404a59:	add    BYTE PTR [edi+0x35a9986],bh
  404a5f:	dec    edi
  404a60:	xor    dl,BYTE PTR [ecx+0x789ded38]
  404a66:	push   0xca3f8189
  404a6b:	mov    edi,0x7d9023d4
  404a70:	pop    ebx
  404a71:	pusha  
  404a72:	adc    bh,ch
  404a74:	and    eax,0x2567ea75
  404a79:	popa   
  404a7a:	dec    ebx
  404a7b:	ret    0xf19f
  404a7e:	dec    esp
  404a7f:	xchg   DWORD PTR [esi-0x1d],ebp
  404a82:	sub    eax,0xd8a881c
  404a87:	push   eax
  404a88:	call   0x783d81bd
  404a8d:	jl     0x404a1d
  404a8f:	popa   
  404a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a91:	sbb    bh,cl
  404a93:	in     al,0x53
  404a95:	es cs and bl,0x18
  404a9a:	imul   edi,DWORD PTR [edx+edi*2+0x79],0x6f0a0e67
  404aa2:	leave  
  404aa3:	or     DWORD PTR [ebp-0x3591e3c7],edi
  404aa9:	xchg   DWORD PTR [edi+0x4],ebp
  404aac:	and    ch,BYTE PTR [esi-0x76]
  404aaf:	enter  0xad9e,0x8f
  404ab3:	rol    DWORD PTR [ebp+0x1c],1
  404ab6:	mov    eax,0xc80f59f4
  404abb:	das    
  404abc:	adc    DWORD PTR ds:0xa0e827e9,eax
  404ac2:	and    dl,BYTE PTR [edi]
  404ac4:	and    BYTE PTR [ebx],bl
  404ac6:	and    DWORD PTR [eax-0x298db7d5],0xffffffad
  404acd:	xchg   ecx,eax
  404ace:	mov    ecx,0x4b93d233
  404ad3:	jb     0x404a66
  404ad5:	bound  edi,QWORD PTR [ebp+0x6]
  404ad8:	cmp    DWORD PTR [edi+0x27],ebp
  404adb:	outs   dx,BYTE PTR ds:[esi]
  404adc:	pop    ds
  404add:	(bad)  [ecx+ebx*8-0x83501f2]
  404ae4:	and    BYTE PTR [eax+0x19],0xf7
  404ae8:	sbb    dl,dl
  404aea:	cmp    BYTE PTR [esi+eax*4+0x6d04a182],dh
  404af1:	mov    ebp,0x2b12cad8
  404af6:	jo     0x404b76
  404af8:	lea    eax,[ebp-0x78394e12]
  404afe:	clc    
  404aff:	iret   
  404b00:	cdq    
  404b01:	das    
  404b02:	lods   al,BYTE PTR ds:[esi]
  404b03:	push   ds
  404b04:	xchg   DWORD PTR [esi],eax
  404b06:	push   eax
  404b07:	pop    esp
  404b08:	add    eax,0x2ce12a08
  404b0d:	push   0xffffffc7
  404b0f:	inc    edx
  404b10:	xchg   edi,edi
  404b12:	push   0xa8c8cd5b
  404b17:	pushf  
  404b18:	sbb    al,ah
  404b1a:	shr    edi,0x5f
  404b1d:	fldcw  WORD PTR [ebp+0x57]
  404b20:	dec    edi
  404b21:	push   ds
  404b22:	fistp  DWORD PTR [ebp+0x3b]
  404b25:	adc    ecx,DWORD PTR [edx+0x50]
  404b28:	push   ecx
  404b29:	dec    ebp
  404b2a:	sub    DWORD PTR [edi+0x34ebeb6],ecx
  404b30:	mov    ds:0x67dd1fe3,eax
  404b35:	test   al,0x30
  404b37:	push   eax
  404b38:	cmp    al,0x64
  404b3a:	in     eax,dx
  404b3b:	mov    ds:0xf7b81278,eax
  404b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b41:	ret    
  404b42:	(bad)  
  404b43:	test   eax,0x61a86c24
  404b48:	xchg   esi,eax
  404b49:	inc    esp
  404b4a:	sub    al,0xd0
  404b4c:	pop    edi
  404b4d:	inc    ecx
  404b4e:	imul   ebx,DWORD PTR ds:0x382028e8,0x59454bfc
  404b58:	cmp    esp,DWORD PTR [ebx+0x40a349b5]
  404b5e:	mov    DWORD PTR [ebx+0x59],0x4ec10fab
  404b65:	retf   0x5e6b
  404b68:	mov    edx,0xd5e90f01
  404b6d:	sub    BYTE PTR [ecx-0x7fda5c02],al
  404b73:	sub    esp,esp
  404b75:	xchg   DWORD PTR [edx+ecx*8-0xa],ebx
  404b79:	ja     0x404b75
  404b7b:	push   ebx
  404b7c:	xor    ch,BYTE PTR [eax+0x7fbc7828]
  404b82:	sub    DWORD PTR [edx-0x70b1e125],ecx
  404b88:	scas   eax,DWORD PTR es:[edi]
  404b89:	add    ebx,DWORD PTR [edx-0x23]
  404b8c:	hlt    
  404b8d:	cmp    eax,0x4411b03e
  404b92:	cs jne 0x404bf8
  404b95:	cmc    
  404b96:	mov    al,ds:0x2672886f
  404b9b:	(bad)  
  404b9c:	cmp    bh,cl
  404b9e:	xchg   esi,eax
  404b9f:	leave  
  404ba0:	aas    
  404ba1:	ins    DWORD PTR es:[edi],dx
  404ba2:	push   esi
  404ba3:	or     al,0x9f
  404ba5:	pop    edx
  404ba6:	jp     0x404b3c
  404ba8:	arpl   ax,ax
  404baa:	mov    ah,0xed
  404bac:	add    esi,ebx
  404bae:	call   0x990ec6d2
  404bb3:	push   0x29bd97ab
  404bb8:	mov    al,0x8d
  404bba:	fcmovnu st,st(4)
  404bbc:	js     0x404bf0
  404bbe:	jmp    0x404c20
  404bc0:	fdivr  DWORD PTR [ebx]
  404bc2:	fld    QWORD PTR ds:0x31b7b7b1
  404bc8:	je     0x404b70
  404bca:	adc    eax,0xfc607e45
  404bcf:	fimul  DWORD PTR [edx+edi*1+0x5e]
  404bd3:	pusha  
  404bd4:	mov    cl,0xe6
  404bd6:	cs inc eax
  404bd8:	mov    edi,DWORD PTR [edx-0x28]
  404bdb:	adc    al,al
  404bdd:	mov    cl,0x52
  404bdf:	mov    dh,0x83
  404be1:	push   esp
  404be2:	sbb    ah,dl
  404be4:	push   ds
  404be5:	fs leave 
  404be7:	pop    ebx
  404be8:	pop    ss
  404be9:	inc    esp
  404bea:	jnp    0xbaa8d555
  404bf0:	and    al,0x9b
  404bf2:	shr    BYTE PTR [edx+esi*8+0x62],cl
  404bf6:	jmp    0x404bf6
  404bf8:	das    
  404bf9:	arpl   WORD PTR [eax+edi*2],bx
  404bfc:	and    al,0xb9
  404bfe:	leave  
  404bff:	pop    ebp
  404c00:	push   edx
  404c01:	sub    DWORD PTR [ebx-0x7d],ebp
  404c04:	dec    esp
  404c05:	xor    eax,DWORD PTR [edx-0x1cf0c756]
  404c0b:	in     eax,0x5c
  404c0d:	iret   
  404c0e:	gs push edi
  404c10:	aad    0x5b
  404c12:	shl    DWORD PTR [edx+0x5b4e7602],cl
  404c18:	mov    edi,0x724f1ec4
  404c1d:	cli    
  404c1e:	mov    ebp,0xe378d4d8
  404c23:	outs   dx,DWORD PTR ds:[esi]
  404c24:	repnz add edx,DWORD PTR [ebx+0x70a087f3]
  404c2b:	xchg   ebp,eax
  404c2c:	push   eax
  404c2d:	out    dx,eax
  404c2e:	push   edi
  404c2f:	loope  0x404c47
  404c31:	popf   
  404c32:	push   edx
  404c33:	dec    eax
  404c34:	or     eax,0x7458dadd
  404c39:	scas   eax,DWORD PTR es:[edi]
  404c3a:	out    dx,al
  404c3b:	es int 0x7d
  404c3e:	jbe    0x404c33
  404c40:	sahf   
  404c41:	ins    BYTE PTR es:[edi],dx
  404c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c43:	int3   
  404c44:	adc    bh,bl
  404c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c47:	jo     0x404c6f
  404c49:	mov    BYTE PTR [ebx+ecx*4+0x31ce3dd5],cl
  404c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c51:	inc    eax
  404c52:	xor    bh,BYTE PTR [eax+edx*1+0x38d7352b]
  404c59:	loope  0x404c30
  404c5b:	add    DWORD PTR [esp+eiz*4+0x78],esi
  404c5f:	mov    eax,0x2b296ad0
  404c64:	gs xchg edx,eax
  404c66:	push   ebx
  404c67:	jno    0x404c89
  404c69:	xchg   ebx,eax
  404c6a:	sub    DWORD PTR [esp+esi*1+0xb],0x1e
  404c6f:	scas   al,BYTE PTR es:[edi]
  404c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c71:	fisttp DWORD PTR [eax-0x1989c3d6]
  404c77:	pop    edx
  404c78:	xchg   DWORD PTR [edx+0x2a29ba4a],esp
  404c7e:	js     0x404c68
  404c80:	dec    ebx
  404c81:	sti    
  404c82:	pop    ds
  404c83:	and    eax,DWORD PTR [eax+0x55]
  404c86:	test   DWORD PTR [ecx+edi*2+0x17],esi
  404c8a:	inc    eax
  404c8b:	fistp  WORD PTR [edx+esi*1]
  404c8e:	shl    BYTE PTR [edi],cl
  404c90:	shl    esp,0xb0
  404c93:	inc    edi
  404c94:	sbb    ebp,DWORD PTR [ebp-0x4c]
  404c97:	mov    ebx,0xec9d84e7
  404c9c:	dec    eax
  404c9d:	dec    esp
  404c9e:	cs push 0x9b6a1dd0
  404ca4:	out    0x6a,eax
  404ca6:	and    BYTE PTR [ecx+0x67],bl
  404ca9:	xchg   DWORD PTR [edi-0x468720af],esp
  404caf:	in     eax,dx
  404cb0:	arpl   WORD PTR [ecx+edi*1-0x3c],cx
  404cb4:	test   al,0x85
  404cb6:	les    edi,FWORD PTR [edx-0x78]
  404cb9:	loop   0x404d2e
  404cbb:	pmaxsw mm1,QWORD PTR [ecx]
  404cbe:	push   es
  404cbf:	mov    ?,WORD PTR [ebp+ecx*1+0x726088f]
  404cc6:	inc    esp
  404cc7:	and    al,0x18
  404cc9:	or     ecx,esi
  404ccb:	pushf  
  404ccc:	clc    
  404ccd:	push   cs
  404cce:	ficomp DWORD PTR [edx-0x3eb40e4]
  404cd4:	lods   eax,DWORD PTR ds:[esi]
  404cd5:	xor    al,BYTE PTR [esi+ecx*8]
  404cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cd9:	pop    ds
  404cda:	pop    eax
  404cdb:	enter  0x4710,0xb4
  404cdf:	aas    
  404ce0:	int3   
  404ce1:	xchg   ebp,eax
  404ce2:	sub    eax,0x2ce2858a
  404ce7:	(bad)  
  404ce8:	rol    BYTE PTR [ecx-0x55],0x1
  404cec:	ss cdq 
  404cee:	pop    esi
  404cef:	push   esp
  404cf0:	pushf  
  404cf1:	jmp    0x404c7d
  404cf3:	dec    edx
  404cf4:	sub    ecx,DWORD PTR [ebp-0xc]
  404cf7:	mov    ah,BYTE PTR [ebx]
  404cf9:	push   ebp
  404cfa:	daa    
  404cfb:	scas   al,BYTE PTR es:[edi]
  404cfc:	or     dh,BYTE PTR [esi-0x5da6d351]
  404d02:	ror    DWORD PTR [edx+0x20c835ac],0xc3
  404d09:	mov    cl,0xf6
  404d0b:	and    al,0x14
  404d0d:	or     edi,DWORD PTR [ecx+0x74]
  404d10:	mov    dh,0xfa
  404d12:	pop    eax
  404d13:	xchg   edx,eax
  404d14:	repz inc eax
  404d16:	jmp    0x7c94:0xed3ef848
  404d1d:	xchg   DWORD PTR [ebx+0x4b],esp
  404d20:	or     al,0x48
  404d22:	mov    edx,0xcae17d8a
  404d27:	imul   ecx,DWORD PTR [edx-0x1af09aad],0x49
  404d2e:	mov    al,ds:0x8dbf1ac3
  404d33:	dec    edx
  404d34:	in     al,dx
  404d35:	cmp    ebp,DWORD PTR [esi]
  404d37:	(bad)  
  404d38:	sbb    dl,BYTE PTR [edi-0x36f26e3]
  404d3e:	dec    edi
  404d3f:	into   
  404d40:	aad    0xdf
  404d42:	jo     0x404d2d
  404d44:	mov    esi,0xb16dd09b
  404d49:	mov    WORD PTR [eax-0x325fe77a],?
  404d4f:	hlt    
  404d50:	xor    BYTE PTR [edi],cl
  404d52:	cmp    bh,0x2d
  404d55:	test   BYTE PTR [ebp-0x3275882c],ah
  404d5b:	(bad)  
  404d5c:	jmp    0x404d5c
  404d5e:	into   
  404d5f:	lea    ebx,[esp+edi*1-0x55]
  404d63:	pop    ebp
  404d64:	push   edi
  404d65:	pop    esi
  404d66:	jl     0x404d4e
  404d68:	leave  
  404d69:	addr16 out dx,eax
  404d6b:	repz ficom WORD PTR [edx+0x54]
  404d6f:	(bad)  
  404d70:	cs mov esp,0x3563988b
  404d76:	icebp  
  404d77:	inc    edx
  404d78:	stos   DWORD PTR es:[edi],eax
  404d79:	sbb    edx,esi
  404d7b:	xchg   edx,eax
  404d7c:	ds das 
  404d7e:	sub    dh,BYTE PTR [ecx+0x6d]
  404d81:	xor    bl,ah
  404d83:	or     esi,eax
  404d85:	inc    esp
  404d86:	xchg   esi,eax
  404d87:	or     DWORD PTR [ecx-0x397849d5],edi
  404d8d:	push   es
  404d8e:	cmp    DWORD PTR [edx],ebp
  404d90:	or     al,0xc2
  404d92:	or     DWORD PTR [ebp-0x6b],ebx
  404d95:	es repz push ss
  404d98:	add    ecx,eax
  404d9a:	xor    ebp,DWORD PTR [eax+eiz*8-0x30]
  404d9e:	mov    eax,0x2429838b
  404da3:	sbb    ebx,DWORD PTR [esi+ebx*4-0x4059f34b]
  404daa:	call   0x3af3:0xe46bec5d
  404db1:	add    BYTE PTR fs:0x2aca127d,ch
  404db8:	fisttp DWORD PTR [ebx-0x3f]
  404dbb:	push   cs
  404dbc:	inc    esp
  404dbd:	je     0x404dd8
  404dbf:	adc    al,0xb9
  404dc1:	ret    0xe7a3
  404dc4:	mov    eax,ds:0x6dddcd13
  404dc9:	fdivr  DWORD PTR [ebx-0x6e]
  404dcc:	cmp    eax,0x9a6e60b0
  404dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd2:	cwde   
  404dd3:	mov    eax,0x66050cac
  404dd8:	push   esp
  404dd9:	test   DWORD PTR [eax+0x20],0xb96283aa
  404de0:	lds    eax,FWORD PTR ds:0x553463a9
  404de6:	xchg   edx,eax
  404de7:	sar    DWORD PTR [ebx+eiz*2-0x74],0x32
  404dec:	pop    es
  404ded:	sbb    DWORD PTR [ecx+0x38],ebx
  404df0:	scas   al,BYTE PTR es:[edi]
  404df1:	pusha  
  404df2:	push   ebp
  404df3:	inc    ebx
  404df4:	neg    BYTE PTR [esi+0x14]
  404df7:	pop    ebp
  404df8:	fist   WORD PTR [esi-0x61]
  404dfb:	pop    eax
  404dfc:	push   eax
  404dfd:	or     eax,0x94e857de
  404e02:	retf   0x4c4a
  404e05:	jno    0x404e79
  404e07:	sbb    ch,BYTE PTR [edx-0x43]
  404e0a:	push   edx
  404e0b:	popa   
  404e0c:	pop    esi
  404e0d:	dec    esp
  404e0e:	mov    dh,0xbf
  404e10:	dec    edi
  404e11:	mov    ecx,0xae1ae511
  404e16:	pop    ebx
  404e17:	sbb    edi,DWORD PTR [eax]
  404e19:	jne    0x404e80
  404e1b:	ret    0xe7f9
  404e1e:	stos   DWORD PTR es:[edi],eax
  404e1f:	test   al,0xbd
  404e21:	inc    ebx
  404e22:	and    eax,0x51afa230
  404e27:	jg     0x404ea1
  404e29:	clc    
  404e2a:	xchg   esi,eax
  404e2b:	and    edx,DWORD PTR [ebp+0x5f]
  404e2e:	ror    BYTE PTR [edx+0x50ef8ba1],0xbc
  404e35:	add    al,BYTE PTR [ecx-0x71b6781b]
  404e3b:	jbe    0x404df4
  404e3d:	lock xor DWORD PTR ds:0x4845c2b5,eax
  404e44:	jl     0x404e61
  404e46:	and    al,0xe6
  404e48:	(bad)  
  404e49:	(bad)  
  404e4a:	stos   DWORD PTR es:[edi],eax
  404e4b:	cmp    al,0x15
  404e4d:	mov    esi,0x61092ef3
  404e52:	add    BYTE PTR [edx],ah
  404e54:	pop    es
  404e55:	sbb    eax,0xecc2823
  404e5a:	push   edx
  404e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e5c:	out    dx,al
  404e5d:	mov    DWORD PTR [edi],esi
  404e5f:	test   eax,ebx
  404e61:	das    
  404e62:	xor    esi,DWORD PTR [edi]
  404e64:	add    BYTE PTR [ebp-0x58],0xcf
  404e68:	cmp    ebx,DWORD PTR [ecx+ebp*2]
  404e6b:	cmp    DWORD PTR [eax],eax
  404e6d:	aad    0x89
  404e6f:	sbb    ecx,DWORD PTR [edi]
  404e71:	scas   al,BYTE PTR es:[edi]
  404e72:	adc    dh,cl
  404e74:	pop    esi
  404e75:	jle    0x404ec8
  404e77:	sbb    ah,BYTE PTR [esi-0x1]
  404e7a:	fwait
  404e7b:	(bad)  
  404e7c:	out    dx,al
  404e7d:	sub    ebp,DWORD PTR [esi+0x5d]
  404e80:	out    0xb6,al
  404e82:	and    eax,0x3cf027c7
  404e87:	sbb    eax,0xe388e00
  404e8c:	lahf   
  404e8d:	xchg   ecx,eax
  404e8e:	loop   0x404e25
  404e90:	push   edi
  404e91:	xor    eax,0x54de83b6
  404e96:	dec    edi
  404e97:	rol    BYTE PTR [edx+0x23],0x8d
  404e9b:	(bad)  [esi-0x7f]
  404e9e:	xchg   bh,bl
  404ea0:	jge    0x404f0a
  404ea2:	adc    BYTE PTR [eax+ecx*8-0x47],cl
  404ea6:	lock mov ecx,0xc807f868
  404eac:	(bad)  
  404eae:	aad    0xb2
  404eb0:	fsub   st(7),st
  404eb2:	leave  
  404eb3:	xor    eax,DWORD PTR [edx]
  404eb5:	xlat   BYTE PTR ds:[ebx]
  404eb6:	sub    eax,0xbba924d9
  404ebb:	sbb    eax,edi
  404ebd:	ret    
  404ebe:	aad    0x1b
  404ec0:	mov    BYTE PTR [ebp+ebp*8-0x77286ca8],ch
  404ec7:	ret    0x84dc
  404eca:	cmp    bl,BYTE PTR es:[ecx]
  404ecd:	adc    dh,dh
  404ecf:	retf   0x8fc3
  404ed2:	xchg   ebp,eax
  404ed3:	inc    esi
  404ed4:	pop    ss
  404ed5:	rcl    DWORD PTR ds:0x8d5d5544,cl
  404edb:	sbb    eax,0xd08c598b
  404ee0:	dec    esp
  404ee1:	inc    ebp
  404ee2:	js     0x404ed9
  404ee4:	adc    al,BYTE PTR [edx+eax*2-0x4d94d535]
  404eeb:	dec    ecx
  404eec:	cmp    eax,0x54ab50a0
  404ef1:	std    
  404ef2:	ins    BYTE PTR es:[edi],dx
  404ef3:	ret    
  404ef4:	or     DWORD PTR [ebx+0x67],ebx
  404ef7:	push   eax
  404ef8:	int    0xd6
  404efa:	aam    0x2b
  404efc:	test   al,0x9a
  404eff:	call   0xf18a6477
  404f04:	mov    eax,ds:0x5bc2e88
  404f09:	sub    ch,ah
  404f0b:	push   edx
  404f0c:	xor    eax,0xdf8a7628
  404f11:	call   0xb0:0x37a898f1
  404f18:	rcr    DWORD PTR [edx+ebx*2+0x56],0x41
  404f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f1e:	call   0x1cfe:0x8126d829
  404f25:	pop    esp
  404f26:	add    BYTE PTR [ebp-0xfd8aabb],al
  404f2c:	clc    
  404f2d:	or     BYTE PTR [edx+ebx*2+0x7a],al
  404f31:	and    al,0x1c
  404f33:	pop    ebp
  404f34:	(bad)  
  404f35:	push   DWORD PTR [edi-0x3d]
  404f38:	xor    al,0x2f
  404f3a:	jle    0x404edf
  404f3c:	mov    eax,0x53fb9bca
  404f41:	call   0xf3f3767c
  404f46:	lahf   
  404f47:	and    ebx,DWORD PTR [eax-0x15250ae0]
  404f4d:	add    bh,BYTE PTR ss:[esi-0x39]
  404f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f52:	inc    eax
  404f53:	xchg   ebx,eax
  404f54:	xlat   BYTE PTR ds:[ebx]
  404f55:	outs   dx,BYTE PTR ds:[esi]
  404f56:	or     al,0x51
  404f58:	jmp    0x4e6b:0xf2032c74
  404f5f:	pop    ebp
  404f60:	xchg   edx,eax
  404f61:	fidivr DWORD PTR [edi+0xc]
  404f64:	rcr    BYTE PTR [ecx+0x416f945e],1
  404f6a:	inc    edx
  404f6b:	pop    ebp
  404f6c:	push   esp
  404f6d:	pop    edi
  404f6e:	inc    ecx
  404f6f:	aas    
  404f70:	or     DWORD PTR [ebp-0x61],esi
  404f73:	mov    WORD PTR [ecx-0x18d79d9a],?
  404f79:	dec    edx
  404f7a:	push   eax
  404f7b:	sbb    esp,ecx
  404f7d:	adc    al,0x8c
  404f7f:	(bad)  
  404f80:	icebp  
  404f81:	mov    ebx,0xd67d6b93
  404f86:	inc    esp
  404f87:	adc    dl,ch
  404f89:	add    al,0x95
  404f8b:	adc    esp,ecx
  404f8d:	ins    DWORD PTR es:[edi],dx
  404f8e:	jns    0x404f26
  404f90:	adc    DWORD PTR [ebx+0x619d1891],0x834b7e17
  404f9a:	lds    esi,FWORD PTR [eax]
  404f9c:	out    0x5f,al
  404f9e:	inc    ebp
  404f9f:	mov    WORD PTR [eax-0x48e434d0],?
  404fa5:	mov    ecx,0x27222a6
  404faa:	es jle 0x404f52
  404fad:	sub    BYTE PTR [ebp+0x4b4581c5],bl
  404fb3:	rol    BYTE PTR [ebp-0x21],0x94
  404fb7:	cmc    
  404fb8:	adc    eax,ebp
  404fba:	push   ds
  404fbb:	jne    0x404ff2
  404fbd:	retf   
  404fbe:	cmc    
  404fbf:	repnz aas 
  404fc1:	and    bh,BYTE PTR [ecx]
  404fc3:	xchg   esp,eax
  404fc4:	rcr    DWORD PTR [ecx],1
  404fc6:	jo     0x404f71
  404fc8:	jo     0x404fe2
  404fca:	add    al,BYTE PTR [edi-0x660ce14b]
  404fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd1:	ss out dx,eax
  404fd3:	arpl   WORD PTR [esi+ecx*8-0x2d],bp
  404fd7:	out    dx,al
  404fd8:	inc    ebx
  404fd9:	ja     0x405051
  404fdb:	pcmpeqb mm2,QWORD PTR [ecx-0xd]
  404fdf:	in     eax,dx
  404fe0:	data16 in al,0x45
  404fe3:	inc    esi
  404fe4:	sbb    al,BYTE PTR [edi]
  404fe6:	and    BYTE PTR [esi-0x33dbc9bd],bl
  404fec:	ret    0x7b7a
  404fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ff0:	das    
  404ff1:	mov    esp,0x98ada6e1
  404ff6:	lock (bad) 
  404ff8:	std    
  404ff9:	jle    0x404fcf
  404ffb:	inc    ecx
  404ffc:	mov    al,0x6c
  404ffe:	mov    edx,0x26c95c27
  405003:	xor    bl,bh
  405005:	test   BYTE PTR [esi+0x6509fae6],bh
  40500b:	xor    ebp,eax
  40500d:	add    eax,0x20dd4677
  405012:	test   eax,0x398865b0
  405017:	in     eax,0x88
  405019:	mov    ecx,0x328a7952
  40501e:	jne    0x405097
  405020:	mov    edi,0x4e3dedc4
  405025:	mov    ds:0xd747480d,eax
  40502a:	dec    ebp
  40502b:	mov    al,ds:0x33615e19
  405030:	cdq    
  405031:	push   ebx
  405032:	or     DWORD PTR [edx],eax
  405034:	aas    
  405035:	jle    0x4050aa
  405037:	test   DWORD PTR [eax],esi
  405039:	pop    edx
  40503a:	adc    ch,BYTE PTR [ecx+0x791d3d67]
  405040:	or     eax,0x938c9d74
  405045:	push   cs
  405046:	jns    0x40508d
  405048:	xor    al,0x5c
  40504b:	cmovbe edx,DWORD PTR [edx-0x10fea3b7]
  405052:	and    ebp,DWORD PTR [ecx+eax*2+0x282eb4f5]
  405059:	pop    eax
  40505a:	add    al,0x69
  40505c:	nop
  40505d:	clc    
  40505e:	pushf  
  40505f:	pop    ebx
  405060:	mov    bl,0x2f
  405062:	ss loope 0x4050a7
  405065:	xchg   esp,eax
  405066:	or     BYTE PTR [ebp+0x42afe75f],0xc4
  40506d:	xchg   ecx,eax
  40506e:	int    0x46
  405070:	mov    ds:0x77da1f10,al
  405075:	out    0xf0,al
  405077:	xor    BYTE PTR [edx-0x4b],al
  40507a:	aam    0x41
  40507c:	add    DWORD PTR [esi-0x6fb9753d],esp
  405082:	push   ss
  405083:	leave  
  405084:	xchg   edi,eax
  405085:	leave  
  405086:	mov    ecx,0xe76926c5
  40508b:	and    al,0xa
  40508d:	clc    
  40508e:	dec    esi
  40508f:	das    
  405090:	inc    eax
  405091:	arpl   WORD PTR [edx+0x10a53b5d],bx
  405097:	sbb    dh,BYTE PTR [edi]
  405099:	js     0x405102
  40509b:	mov    al,ds:0x17c3caaa
  4050a0:	in     eax,dx
  4050a1:	test   al,0xb8
  4050a3:	adc    DWORD PTR [ecx-0x65],esp
  4050a6:	pop    eax
  4050a7:	imul   esi,DWORD PTR [ebx-0x47],0xffffff91
  4050ab:	xchg   DWORD PTR [edi+eiz*1+0x6d2136c8],edx
  4050b2:	repz sbb edi,DWORD PTR [ebp+0x5010ff6c]
  4050b9:	and    eax,0xc00cb087
  4050be:	and    BYTE PTR [ecx+0x48de4031],cl
  4050c4:	lods   eax,DWORD PTR ds:[esi]
  4050c5:	and    BYTE PTR [ebp+eiz*1+0x43655b9a],al
  4050cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050cd:	inc    esp
  4050ce:	mov    WORD PTR cs:[esi],fs
  4050d1:	sbb    edx,esi
  4050d3:	cld    
  4050d4:	aam    0xb8
  4050d6:	imul   edi,DWORD PTR [esi-0x50],0x16183dfb
  4050dd:	mov    ebp,0xdcd4a9af
  4050e2:	xchg   ebp,eax
  4050e3:	inc    edx
  4050e4:	retf   0xc547
  4050e7:	pop    edx
  4050e8:	test   al,0x4a
  4050ea:	and    al,dh
  4050ec:	ins    DWORD PTR es:[edi],dx
  4050ed:	inc    ebp
  4050ee:	push   eax
  4050ef:	rcr    esi,1
  4050f1:	or     al,0xdd
  4050f3:	xchg   ecx,eax
  4050f4:	arpl   bx,sp
  4050f6:	mov    bh,0xcd
  4050f8:	sti    
  4050f9:	and    ebp,DWORD PTR [esp+esi*2-0x51b507a7]
  405100:	rcl    dl,0x8b
  405103:	repz sub dl,dh
  405106:	gs mov cl,0x7d
  405109:	fist   DWORD PTR [edi]
  40510b:	pop    edx
  40510c:	loop   0x4050e9
  40510e:	push   ds
  40510f:	xchg   ebp,eax
  405110:	leave  
  405111:	add    ebp,edi
  405113:	or     al,0x82
  405115:	cmp    al,0xa7
  405117:	sbb    eax,0x1d3e06eb
  40511c:	inc    ebx
  40511d:	std    
  40511e:	mov    WORD PTR [edi],ss
  405120:	(bad)  
  405121:	int3   
  405122:	fprem  
  405124:	repnz fcom QWORD PTR [edx]
  405127:	(bad)  [esi-0x23]
  40512a:	dec    ebp
  40512b:	shl    DWORD PTR [ebp+0x11],1
  40512e:	arpl   WORD PTR [ebp+edx*4-0x32],dx
  405132:	sbb    al,0x77
  405134:	xchg   esp,eax
  405135:	push   edi
  405136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405137:	cmp    eax,0x527c3987
  40513c:	jnp    0x405129
  40513e:	pusha  
  40513f:	add    al,0x38
  405141:	(bad)  
  405142:	outs   dx,DWORD PTR ds:[esi]
  405143:	push   eax
  405144:	jp     0x4051b3
  405146:	sub    BYTE PTR [esi+0x10fce9ee],ch
  40514c:	call   0x834d:0xb2bb4414
  405153:	(bad)  
  405154:	sbb    esi,DWORD PTR [ecx-0x311bd034]
  40515a:	aad    0x35
  40515c:	rol    DWORD PTR [esi-0x5e7bb942],cl
  405162:	mov    BYTE PTR [edi],ah
  405164:	bound  esi,QWORD PTR [edi-0x5a]
  405167:	jmp    0xaac5:0xc62dc430
  40516e:	and    eax,0x79e9d585
  405173:	mov    ds:0x1880c121,al
  405178:	jne    0x40518d
  40517a:	inc    ebp
  40517b:	jbe    0x405131
  40517d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40517e:	int    0x27
  405180:	jno    0x4051af
  405182:	mov    al,0x8f
  405184:	(bad)  
  405186:	(bad)  
  405187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405188:	repz pop esp
  40518a:	fnstsw WORD PTR [edx]
  40518c:	adc    eax,0x453798d7
  405191:	out    dx,al
  405192:	jecxz  0x40518a
  405194:	add    cl,BYTE PTR [ecx+0x35]
  405197:	xor    dh,BYTE PTR [edx+ebp*1]
  40519a:	dec    edx
  40519b:	int    0xdf
  40519d:	mov    bl,BYTE PTR [esi]
  40519f:	imul   edx,ecx,0x1d
  4051a2:	in     al,dx
  4051a3:	mov    ch,0xde
  4051a5:	lods   eax,DWORD PTR ds:[esi]
  4051a6:	loop   0x4051ce
  4051a8:	xor    cl,BYTE PTR [esi-0x48241930]
  4051ae:	cwde   
  4051af:	xchg   ebx,eax
  4051b0:	loop   0x405142
  4051b2:	sbb    dl,ch
  4051b4:	cwde   
  4051b5:	jae    0x405216
  4051b7:	sahf   
  4051b8:	enter  0x2f8f,0x0
  4051bc:	fidiv  WORD PTR [esi]
  4051be:	outs   dx,DWORD PTR ds:[esi]
  4051bf:	adc    al,BYTE PTR [edx-0x45609eca]
  4051c5:	lock jae 0x4051e2
  4051c8:	xchg   esp,eax
  4051c9:	jo     0x4051a7
  4051cb:	inc    ebp
  4051cc:	sbb    eax,0x794a2c06
  4051d1:	inc    ebp
  4051d2:	add    cl,BYTE PTR [esi]
  4051d4:	or     BYTE PTR [ecx-0x754a3cf2],ah
  4051da:	xchg   esp,eax
  4051db:	test   eax,0x9dc436f9
  4051e0:	inc    ebx
  4051e1:	inc    esp
  4051e2:	xchg   DWORD PTR [ebx+0x5610695f],ebp
  4051e8:	(bad)  
  4051e9:	jne    0x4051f1
  4051eb:	inc    ebp
  4051ec:	cli    
  4051ed:	call   0x8e5ecbf1
  4051f2:	jno    0x40524b
  4051f4:	adc    bh,BYTE PTR cs:[ebx+0x119f6297]
  4051fb:	jb     0x4051f3
  4051fd:	xor    bl,BYTE PTR [ebx+0x1b4afe0a]
  405203:	sub    eax,0x707635ef
  405208:	fwait
  405209:	daa    
  40520a:	lods   eax,DWORD PTR ds:[esi]
  40520b:	mov    ebx,0xaeff425e
  405210:	sbb    al,0x83
  405212:	xor    al,0xc1
  405214:	in     al,0x57
  405216:	pop    esi
  405217:	call   0xb5a1:0x972fca0b
  40521e:	mov    eax,ds:0x335f6239
  405223:	ret    
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0xe3b994ee
  405804:	and    DWORD PTR [esi],ebp
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	std    
  40580f:	cmp    al,0xb6
  405811:	leave  
  405812:	xor    al,0x81
  405814:	popa   
  405815:	push   esi
  405816:	add    eax,0x167c397d
  40581b:	or     BYTE PTR [edx-0x5b095586],0xa9
  405822:	(bad)  
  405823:	ror    ebx,cl
  405825:	jmp    0x30fcfd5a
  40582a:	pop    ebp
  40582b:	fs mov al,0x17
  40582e:	cmp    DWORD PTR [esi],ecx
  405830:	test   BYTE PTR [edi],dl
  405832:	out    0x34,eax
  405834:	xor    eax,0x67
  405837:	push   ebp
  405838:	shr    DWORD PTR [ecx],0x28
  40583b:	and    esi,ecx
  40583d:	push   esi
  40583e:	adc    BYTE PTR [esi],bl
  405840:	aad    0xdc
  405842:	pop    ds
  405843:	pusha  
  405844:	push   ebx
  405845:	cmp    ah,BYTE PTR [edx-0x4]
  405848:	mov    ch,bh
  40584a:	push   edi
  40584b:	cmp    bl,BYTE PTR [eax+eax*8-0x1d]
  40584f:	cmp    edx,DWORD PTR [eax+0x29e31976]
  405855:	push   0xf12d8893
  40585a:	aaa    
  40585b:	or     eax,0x8e5cb477
  405860:	and    DWORD PTR [ecx+0x4da84d2b],ecx
  405866:	add    dl,bh
  405868:	js     0x405856
  40586a:	repnz inc ebp
  40586c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586d:	lods   al,BYTE PTR ds:[esi]
  40586e:	int3   
  40586f:	sahf   
  405870:	add    dl,ah
  405872:	inc    edi
  405873:	(bad)  
  405874:	sbb    BYTE PTR [edi+0x70b0b35d],al
  40587a:	rcr    DWORD PTR [esi+0x2382eaea],cl
  405880:	xchg   ebx,eax
  405881:	or     BYTE PTR [edi-0x41e65ee9],0x16
  405888:	mov    esi,0x4ccbc649
  40588d:	inc    ebp
  40588e:	pop    ebp
  40588f:	add    cl,BYTE PTR [esi]
  405891:	inc    BYTE PTR [edx+0x4a]
  405894:	add    eax,0x98bb22ff
  405899:	or     DWORD PTR [esp+edx*1+0xe],ebp
  40589d:	dec    ebp
  40589e:	jo     0x405842
  4058a0:	xchg   ebp,eax
  4058a1:	sbb    DWORD PTR [esi],0x16
  4058a4:	stos   DWORD PTR es:[edi],eax
  4058a5:	sbb    bh,ah
  4058a7:	add    DWORD PTR [ebx+0x47],ebx
  4058aa:	mov    eax,0xa7c33496
  4058af:	and    dh,0x25
  4058b2:	xlat   BYTE PTR ds:[ebx]
  4058b3:	scas   eax,DWORD PTR es:[edi]
  4058b4:	push   esp
  4058b5:	ret    0x2a2a
  4058b8:	push   esp
  4058b9:	sbb    al,0x4
  4058bb:	and    eax,ecx
  4058bd:	jmp    0x835d:0x474f0c93
  4058c4:	or     ecx,edi
  4058c6:	data16 jmp 0x405947
  4058c9:	ss dec edi
  4058cb:	and    BYTE PTR [edx-0x71],bh
  4058ce:	dec    esp
  4058cf:	pop    ds
  4058d0:	mov    BYTE PTR [ecx-0x22],dl
  4058d3:	nop
  4058d4:	rcr    BYTE PTR [eax+0x7d],cl
  4058d7:	call   0xb498:0xb6631b1c
  4058de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058df:	aad    0x34
  4058e1:	inc    esp
  4058e2:	sbb    eax,0x20565fc8
  4058e7:	loop   0x4058df
  4058e9:	fs dec esp
  4058eb:	mov    dl,0xa4
  4058ed:	push   esp
  4058ee:	scas   al,BYTE PTR es:[edi]
  4058ef:	mov    edx,0x72ec2241
  4058f4:	and    ebp,DWORD PTR [ebx+0xa]
  4058f7:	(bad)  
  4058f8:	into   
  4058f9:	pop    edx
  4058fa:	out    0x67,eax
  4058fc:	dec    esp
  4058fd:	out    dx,al
  4058fe:	in     eax,0x5c
  405900:	ds gs or al,0x3d
  405904:	add    eax,0x89c1e0d3
  405909:	hlt    
  40590a:	mov    ds:0xe1a9ed5d,eax
  40590f:	ins    BYTE PTR es:[edi],dx
  405910:	xchg   esi,eax
  405911:	dec    edi
  405912:	xor    ebp,ebp
  405914:	pusha  
  405915:	mov    al,ds:0xd4769fca
  40591a:	and    DWORD PTR [edx-0x6e],esp
  40591d:	xor    DWORD PTR [esi+edx*4],eax
  405920:	ret    0xbbb2
  405923:	jle    0x4058ce
  405925:	inc    ebx
  405926:	repnz xor al,0x49
  405929:	push   esi
  40592a:	mov    edx,0xff1b8ff
  40592f:	pop    esi
  405930:	out    dx,eax
  405931:	add    al,0x3c
  405933:	daa    
  405934:	pusha  
  405935:	pushf  
  405936:	cdq    
  405937:	pusha  
  405938:	in     al,dx
  405939:	add    ecx,eax
  40593b:	mov    ebx,DWORD PTR [ebx+eax*1+0x57]
  40593f:	mov    al,ds:0xbc1b669a
  405944:	fwait
  405945:	les    eax,FWORD PTR [ebx-0x4f]
  405948:	into   
  405949:	js     0x4059a0
  40594b:	adc    esi,DWORD PTR [eax-0x73]
  40594e:	ds dec esi
  405950:	test   al,0x29
  405952:	rcl    DWORD PTR [ecx+0x7b08dafa],0x2e
  405959:	(bad)  
  40595a:	pusha  
  40595b:	xor    cl,al
  40595d:	mov    dh,0xae
  40595f:	sbb    bh,BYTE PTR [edx-0xf]
  405962:	push   esi
  405963:	sbb    eax,0xa8474f75
  405968:	mov    dh,0x97
  40596a:	ss stos DWORD PTR es:[edi],eax
  40596c:	mov    ch,0xc0
  40596e:	push   ebp
  40596f:	push   es
  405970:	or     DWORD PTR [ebx+0x62e0bf58],ecx
  405976:	adc    al,0x7f
  405978:	mov    dh,0xa
  40597a:	and    al,BYTE PTR [edi+0x19]
  40597d:	push   ebx
  40597e:	outs   dx,BYTE PTR ds:[esi]
  40597f:	stos   DWORD PTR es:[edi],eax
  405980:	clc    
  405981:	fisubr WORD PTR [esi-0x48]
  405984:	in     al,0x4b
  405986:	jmp    FWORD PTR [ebx+0x7b]
  405989:	jl     0x4059c1
  40598b:	cmp    esi,DWORD PTR [esi+0x77]
  40598e:	test   eax,0xd44b526a
  405993:	retf   
  405994:	mov    gs,WORD PTR [eax-0x5a]
  405997:	xor    esp,ecx
  405999:	or     BYTE PTR [ecx+0x6be339cf],bh
  40599f:	sub    ah,cl
  4059a1:	sbb    ch,0xee
  4059a4:	iret   
  4059a5:	or     eax,0x846c16af
  4059aa:	out    0x2b,al
  4059ac:	ret    0x9c6a
  4059af:	sub    DWORD PTR [ebx+ecx*4+0x2997ae2e],edx
  4059b6:	mov    bh,0xdd
  4059b8:	mov    ch,0x99
  4059ba:	(bad)  [ecx]
  4059bc:	sub    ch,dl
  4059be:	xor    al,0x99
  4059c0:	mov    WORD PTR [edx+0x4fcfba39],ss
  4059c6:	out    0x96,eax
  4059c8:	mov    eax,0x1471e8bf
  4059cd:	sar    DWORD PTR ds:0x22984a69,0xfe
  4059d4:	or     BYTE PTR [esi-0x35],ch
  4059d7:	jo     0x40597c
  4059d9:	adc    eax,0xb6944f84
  4059de:	int3   
  4059df:	shr    DWORD PTR [esi+0x65a88e60],1
  4059e5:	and    eax,0x64db5301
  4059ea:	jl     0x4059a2
  4059ec:	xor    edx,0xffffff95
  4059ef:	js     0x405a57
  4059f1:	mov    edi,0xd7815b80
  4059f6:	loopne 0x4059fd
  4059f8:	imul   esi,DWORD PTR [esi+0x52d88a6c],0x65
  4059ff:	mov    edx,0xf8790b2
  405a04:	arpl   si,si
  405a06:	inc    ecx
  405a07:	repz push edi
  405a09:	scas   eax,DWORD PTR es:[edi]
  405a0a:	xchg   edx,eax
  405a0b:	(bad)  
  405a0c:	jmp    0x4c603c6d
  405a11:	mov    esi,0x6d6bca30
  405a16:	and    ebp,0x3acfd902
  405a1c:	mov    al,ds:0x84556d5e
  405a21:	push   ebp
  405a22:	scas   eax,DWORD PTR es:[edi]
  405a23:	adc    ebp,DWORD PTR [ebx]
  405a25:	cdq    
  405a26:	(bad)  
  405a27:	lea    esp,[esi]
  405a29:	loopne 0x405a6b
  405a2b:	mov    edi,0xfd21cfa6
  405a30:	ss popf 
  405a32:	cs sti 
  405a34:	shr    BYTE PTR [edx],0x99
  405a37:	pop    edx
  405a38:	xor    al,0xc0
  405a3a:	xchg   DWORD PTR [ebx],ecx
  405a3c:	subps  xmm2,XMMWORD PTR [ebx-0x3e]
  405a40:	les    esi,FWORD PTR [ebp+0x61389aa]
  405a46:	out    0x51,al
  405a48:	retf   0xd10e
  405a4b:	loop   0x405a09
  405a4d:	loop   0x405aba
  405a4f:	jle    0x405a10
  405a51:	nop
  405a52:	or     dl,BYTE PTR [edi-0xe7a227e]
  405a58:	pop    eax
  405a59:	or     DWORD PTR [ecx+0x3d178e7b],ebx
  405a5f:	aam    0x0
  405a61:	jb     0x405a28
  405a63:	rcl    ebx,1
  405a65:	in     al,0xd9
  405a67:	aaa    
  405a68:	xor    BYTE PTR [edx-0x53437dc3],cl
  405a6e:	icebp  
  405a6f:	pop    ebx
  405a70:	or     BYTE PTR [ecx-0x4a8ca85d],dl
  405a76:	shl    eax,1
  405a78:	pop    esi
  405a79:	shl    dl,0xf3
  405a7c:	cli    
  405a7d:	and    ebp,ecx
  405a7f:	fwait
  405a80:	adc    BYTE PTR [edx],bh
  405a82:	es dec eax
  405a84:	sub    BYTE PTR [ecx],bl
  405a86:	out    dx,eax
  405a87:	sbb    ebx,ebx
  405a89:	repnz mov eax,ds:0x30eb3b12
  405a8f:	jl     0x405ae5
  405a91:	mov    bl,0xf1
  405a93:	cli    
  405a94:	push   esp
  405a95:	pop    es
  405a96:	aaa    
  405a97:	or     bh,cl
  405a99:	pop    edi
  405a9a:	(bad)  
  405a9b:	(bad)  [ecx+edx*1-0x30]
  405a9f:	adc    dl,BYTE PTR [edx+eiz*2-0x71bde552]
  405aa6:	dec    ecx
  405aa7:	add    eax,0xf70f1632
  405aac:	inc    eax
  405aad:	hlt    
  405aae:	mov    ebp,0x42f8ee08
  405ab3:	and    ebx,DWORD PTR [eax-0x6e]
  405ab6:	test   DWORD PTR [edi+ecx*2-0x4],edx
  405aba:	and    eax,0xbaa2e72c
  405abf:	aam    0xbe
  405ac1:	aad    0xa8
  405ac3:	repnz and esi,ebx
  405ac6:	in     eax,0x80
  405ac8:	adc    bl,BYTE PTR [ebp+0x9]
  405acb:	push   ss
  405acc:	iret   
  405acd:	out    0x68,al
  405acf:	mov    cl,0x88
  405ad1:	popf   
  405ad2:	fnstenv [ecx-0x6d]
  405ad5:	outs   dx,BYTE PTR ds:[esi]
  405ad6:	jp     0x405ae2
  405ad8:	iret   
  405ad9:	mov    bh,0x56
  405adb:	mov    ?,ebp
  405add:	add    al,0x37
  405adf:	leave  
  405ae0:	mov    cs,WORD PTR [eax+0x53]
  405ae3:	in     al,dx
  405ae4:	hlt    
  405ae5:	cmp    bh,ah
  405ae7:	fistp  WORD PTR [edi+0x62]
  405aea:	dec    ecx
  405aeb:	pop    esi
  405aec:	and    bh,BYTE PTR [edi]
  405aee:	ja     0x405b57
  405af0:	cli    
  405af1:	pop    ss
  405af2:	not    ebp
  405af4:	xchg   esi,eax
  405af5:	sbb    al,0xfb
  405af7:	sar    ebx,1
  405af9:	outs   dx,DWORD PTR ds:[esi]
  405afa:	rol    BYTE PTR [ecx+0x636eeac2],1
  405b00:	popa   
  405b01:	pop    ebp
  405b02:	or     DWORD PTR [ebp+0x5659ca4e],0xcd16263d
  405b0c:	adc    al,0xc6
  405b0e:	outs   dx,BYTE PTR ds:[esi]
  405b0f:	addr16 inc esp
  405b11:	test   al,bh
  405b13:	mov    dl,0xcc
  405b15:	inc    ebp
  405b16:	cmp    DWORD PTR ds:0x1ed4856f,ebx
  405b1c:	mov    esp,0x53616021
  405b21:	fbstp  TBYTE PTR [eax+0x52376538]
  405b27:	(bad)  
  405b28:	sti    
  405b29:	dec    ebx
  405b2a:	mov    dh,0xbe
  405b2c:	stos   BYTE PTR es:[edi],al
  405b2d:	mov    al,0xed
  405b2f:	inc    esi
  405b30:	lods   al,BYTE PTR ds:[esi]
  405b31:	call   0x78015e2f
  405b36:	mov    eax,ds:0x40da21ba
  405b3b:	push   esp
  405b3c:	sbb    BYTE PTR [edi+0x62],bh
  405b3f:	scas   al,BYTE PTR es:[edi]
  405b40:	jne    0x405b71
  405b42:	push   esp
  405b43:	cmp    eax,0x2a35a774
  405b48:	test   DWORD PTR [ebp+0x507e87aa],0x5da1db5c
  405b52:	cmp    DWORD PTR [ecx],esi
  405b54:	enter  0x411c,0x94
  405b58:	bnd jne 0x405b9c
  405b5b:	dec    ebp
  405b5c:	daa    
  405b5d:	call   0x77f7:0x1256d0e0
  405b64:	out    0xb3,eax
  405b66:	jg     0x405ba0
  405b68:	add    BYTE PTR [ebx+0xf6471af],0x6
  405b6f:	stos   BYTE PTR es:[edi],al
  405b70:	add    eax,0x61cc34c0
  405b75:	adc    eax,0xc70bc83e
  405b7a:	pop    ecx
  405b7b:	inc    edx
  405b7c:	xor    BYTE PTR [esp+ebp*4+0x43],ch
  405b80:	add    BYTE PTR [ebx-0x26],bh
  405b83:	and    esp,edi
  405b85:	or     al,0x7e
  405b87:	adc    ah,BYTE PTR fs:[esi]
  405b8a:	rol    BYTE PTR [ecx-0x7e],1
  405b8d:	addr16 in eax,dx
  405b8f:	jmp    0x405bf8
  405b91:	adc    BYTE PTR [eax-0x70],0x5a
  405b95:	in     al,0xc
  405b97:	test   eax,0xfa54db9d
  405b9c:	mov    ebp,0xa6781f6d
  405ba1:	and    eax,DWORD PTR [esi-0x44]
  405ba4:	pop    ecx
  405ba5:	(bad)  
  405ba6:	pop    esi
  405ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba8:	outs   dx,BYTE PTR ds:[esi]
  405ba9:	cmp    BYTE PTR [edx],cl
  405bab:	pop    edx
  405bac:	and    edx,DWORD PTR [edi+0x17]
  405baf:	rol    BYTE PTR [edi+0x7b9afb26],0x31
  405bb6:	stos   BYTE PTR es:[edi],al
  405bb7:	ret    
  405bb8:	or     DWORD PTR [eax-0x1eb9c2c0],0x2
  405bbf:	cmc    
  405bc0:	rcr    dh,0xe4
  405bc3:	outs   dx,BYTE PTR ds:[esi]
  405bc4:	jnp    0x405b74
  405bc6:	xchg   edx,eax
  405bc7:	ss inc ecx
  405bc9:	inc    ecx
  405bca:	inc    esi
  405bcb:	repnz mov cl,0xb
  405bce:	aas    
  405bcf:	fimul  WORD PTR [ebp+0x6f]
  405bd2:	call   0x55352eb5
  405bd7:	sub    DWORD PTR [eax-0x491cbe41],esi
  405bdd:	mov    ds:0x24e2932b,eax
  405be2:	xchg   DWORD PTR [esi+0xf],edi
  405be5:	imul   esi,esi,0xc8e900ce
  405beb:	scas   eax,DWORD PTR es:[edi]
  405bec:	push   ebp
  405bed:	adc    BYTE PTR [eax+0x19ee80e0],0x13
  405bf4:	push   ss
  405bf5:	sbb    edi,DWORD PTR [edi-0x6ad64915]
  405bfb:	mov    al,ds:0x4adcd491
  405c00:	mov    ds:0x3f9586e9,eax
  405c05:	test   BYTE PTR [eax],0x9f
  405c08:	ja     0x405c2b
  405c0a:	cs je  0x405c8a
  405c0d:	in     eax,0x62
  405c0f:	hlt    
  405c10:	fdivr  DWORD PTR [edx]
  405c12:	ret    0x7674
  405c15:	(bad)  
  405c16:	fnstcw WORD PTR [esi-0x64009798]
  405c1c:	stos   BYTE PTR es:[edi],al
  405c1d:	nop    DWORD PTR [edx]
  405c20:	sbb    ch,BYTE PTR [ebp-0x23e0fcc3]
  405c26:	mov    bl,0x62
  405c28:	popa   
  405c29:	lods   eax,DWORD PTR ds:[esi]
  405c2a:	pushf  
  405c2b:	mov    bh,0x70
  405c2d:	dec    ebx
  405c2e:	std    
  405c2f:	mov    al,0x17
  405c31:	pop    ebp
  405c32:	lahf   
  405c33:	lds    ebx,FWORD PTR [ebp+0x120f6a0d]
  405c39:	mov    dh,0xd6
  405c3b:	mov    ah,0x88
  405c3d:	sbb    al,0x93
  405c3f:	jp     0x405be6
  405c41:	popf   
  405c42:	jb     0x405c75
  405c44:	adc    eax,0xf17a809d
  405c49:	jg     0x405c1f
  405c4b:	call   0x5afa:0xb7df848
  405c52:	xchg   BYTE PTR [esi],bl
  405c54:	push   0xcbbc21c0
  405c59:	xchg   ebx,eax
  405c5a:	stos   BYTE PTR es:[edi],al
  405c5b:	ret    0x7221
  405c5e:	mov    ah,ah
  405c60:	push   esp
  405c61:	mov    edx,DWORD PTR [esi+0x24]
  405c64:	xor    bl,al
  405c66:	(bad)  
  405c67:	test   eax,0xdae7010a
  405c6c:	aam    0x3b
  405c6e:	mov    esi,0x20c8fab4
  405c73:	jno    0x405c59
  405c75:	in     eax,0x3
  405c77:	cwde   
  405c78:	js     0x405c7f
  405c7a:	xor    dh,BYTE PTR [ebp-0x2e]
  405c7d:	sub    BYTE PTR [ebx-0x9],al
  405c80:	push   ds
  405c81:	sar    DWORD PTR [edx],1
  405c83:	xor    BYTE PTR [eax+0x22574765],bl
  405c89:	out    0xaf,al
  405c8b:	jne    0x405c3a
  405c8d:	mov    ebp,0xfe812cec
  405c92:	sub    al,0x2d
  405c94:	out    dx,eax
  405c95:	setg   ch
  405c98:	add    BYTE PTR [eax],bh
  405c9a:	xor    al,0x59
  405c9c:	xchg   ebx,eax
  405c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c9e:	lea    esi,[ecx+ebx*4+0x7aa66481]
  405ca5:	sub    edi,ebp
  405ca7:	ror    DWORD PTR [ecx+0x6],cl
  405caa:	jo     0x405d2a
  405cac:	add    BYTE PTR [ebx+edx*1+0x70afe040],al
  405cb3:	in     al,dx
  405cb4:	dec    ecx
  405cb5:	or     DWORD PTR [ecx],edx
  405cb7:	sub    BYTE PTR [esi+0x75afe17f],al
  405cbd:	inc    ecx
  405cbe:	shr    BYTE PTR [esi-0x1c],1
  405cc1:	or     al,0x10
  405cc3:	push   ebp
  405cc4:	stos   DWORD PTR es:[edi],eax
  405cc5:	das    
  405cc6:	sub    ah,BYTE PTR [ebx-0x10051e19]
  405ccc:	inc    ecx
  405ccd:	and    eax,0x6d9b0036
  405cd2:	jp     0x405d25
  405cd4:	sub    eax,0xe888b632
  405cd9:	shl    BYTE PTR [ebx+esi*2+0xc],1
  405cdd:	push   esp
  405cde:	test   dh,ah
  405ce0:	scas   al,BYTE PTR es:[edi]
  405ce1:	cmp    al,BYTE PTR [eax]
  405ce3:	xlat   BYTE PTR ds:[ebx]
  405ce4:	jo     0x405d4e
  405ce6:	pop    edx
  405ce7:	je     0x405cfd
  405ce9:	jge    0x405ca2
  405ceb:	retf   
  405cec:	and    eax,0xf48faf25
  405cf1:	jmp    0xbdc7:0xe74c569e
  405cf8:	jecxz  0x405d67
  405cfa:	xor    al,0x6
  405cfc:	jb     0x405d38
  405cfe:	repz jmp 0x405d19
  405d01:	or     eax,esi
  405d03:	cld    
  405d04:	sbb    eax,DWORD PTR [ebx-0x61195f48]
  405d0a:	fsub   DWORD PTR [edx-0x29]
  405d0d:	pop    eax
  405d0e:	shl    BYTE PTR [ebx],0x15
  405d11:	in     al,0x78
  405d13:	cmp    al,0xa
  405d15:	je     0x405cad
  405d17:	pusha  
  405d18:	test   al,0xce
  405d1a:	adc    BYTE PTR [eax+edi*2],0x2a
  405d1e:	pop    ebx
  405d1f:	mov    al,0x6
  405d21:	push   esp
  405d22:	jno    0x405d0e
  405d24:	mov    edx,0x19310aaa
  405d29:	cmp    BYTE PTR [edi+0x6d],ah
  405d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d2d:	sub    DWORD PTR ds:0xe1af92a9,edx
  405d33:	fprem  
  405d35:	nop
  405d36:	sbb    al,dl
  405d38:	xchg   ecx,eax
  405d39:	inc    ebx
  405d3a:	popf   
  405d3b:	push   ebp
  405d3c:	dec    ebp
  405d3d:	dec    edi
  405d3e:	inc    eax
  405d3f:	inc    edx
  405d40:	jmp    0x8a0ba083
  405d45:	sub    al,0xb
  405d47:	mov    esi,edi
  405d49:	lea    ecx,[ebp-0x4984b867]
  405d4f:	inc    edi
  405d50:	(bad)  
  405d51:	jle    0x405da9
  405d53:	jge    0x405dc9
  405d55:	add    eax,0x83338338
  405d5a:	xchg   bl,ah
  405d5c:	fcmovnu st,st(7)
  405d5e:	stc    
  405d5f:	dec    ebx
  405d60:	popa   
  405d61:	mov    ch,0x91
  405d63:	cmp    DWORD PTR [ebx+0x71a9ff0b],ecx
  405d69:	inc    ebp
  405d6a:	and    ebp,esi
  405d6c:	cs pop esi
  405d6e:	enter  0x28e5,0x5
  405d72:	inc    ebx
  405d73:	adc    al,0xc7
  405d75:	pop    esp
  405d76:	loopne 0x405dc4
  405d78:	or     eax,ebp
  405d7a:	or     DWORD PTR [ecx+0x28],ebx
  405d7d:	test   BYTE PTR [ebx+0x17dbc05c],ch
  405d83:	and    ebp,DWORD PTR gs:[ebp-0x587834fd]
  405d8a:	and    BYTE PTR [ebp-0x4a677fd],0x85
  405d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d92:	loop   0x405d22
  405d94:	test   DWORD PTR [edx],ebp
  405d96:	sbb    al,BYTE PTR ss:[ecx+0x62d35de8]
  405d9d:	dec    ebp
  405d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d9f:	mov    esi,cs
  405da1:	and    esi,DWORD PTR [esi-0x25]
  405da4:	xchg   edx,eax
  405da5:	add    al,0xb9
  405da7:	add    BYTE PTR [edi+0x5ff93957],0x69
  405dae:	mov    dl,0x54
  405db0:	into   
  405db1:	ret    
  405db2:	add    eax,0xe6104648
  405db7:	pop    edi
  405db8:	jge    0x405d82
  405dba:	fcmovnb st,st(1)
  405dbc:	lock dec edx
  405dbe:	xlat   BYTE PTR ds:[ebx]
  405dbf:	xlat   BYTE PTR ds:[ebx]
  405dc0:	dec    ebp
  405dc1:	xchg   ebx,eax
  405dc2:	arpl   WORD PTR [ebp+eiz*4-0x68a2cfb6],ax
  405dc9:	sub    ebp,DWORD PTR [ebp+0x438cefc]
  405dcf:	(bad)  
  405dd0:	(bad)  
  405dd1:	out    dx,eax
  405dd2:	sub    BYTE PTR [eax],bl
  405dd4:	adc    ecx,DWORD PTR [ebx-0x42]
  405dd7:	outs   dx,BYTE PTR ds:[esi]
  405dd8:	add    BYTE PTR [edi+0xc],dh
  405ddb:	lods   eax,DWORD PTR ds:[esi]
  405ddc:	repnz outs dx,BYTE PTR ds:[esi]
  405dde:	mov    dh,0xd5
  405de0:	les    esi,FWORD PTR [esi-0x21]
  405de3:	fs out dx,al
  405de5:	test   WORD PTR [ebx-0x49222a61],0x7437
  405dee:	aad    0x4f
  405df0:	fwait
  405df1:	pop    esi
  405df2:	in     al,dx
  405df3:	dec    eax
  405df4:	stc    
  405df5:	mov    ah,0xe
  405df7:	and    ecx,ebp
  405df9:	push   ebp
  405dfa:	sbb    esi,DWORD PTR es:[esi+0x4d20875]
  405e01:	jo     0x405daf
  405e03:	xlat   BYTE PTR ds:[ebx]
  405e04:	xchg   ecx,eax
  405e05:	xchg   esi,eax
  405e06:	cmp    BYTE PTR [ecx+ebp*1],al
  405e09:	mov    WORD PTR [esp+ebx*4+0x28ab841c],ds
  405e10:	aad    0xd1
  405e12:	loop   0x405dbd
  405e14:	xchg   esp,eax
  405e15:	retf   
  405e16:	adc    eax,0x7fd5d04a
  405e1b:	dec    eax
  405e1c:	inc    edi
  405e1d:	arpl   di,si
  405e1f:	sub    al,0x4
  405e21:	and    ah,dh
  405e23:	popa   
  405e24:	ins    DWORD PTR es:[edi],dx
  405e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e26:	xor    eax,0xa39c3f92
  405e2b:	les    edx,FWORD PTR [ebx+0x55]
  405e2e:	and    DWORD PTR [ecx-0xf],esp
  405e31:	jo     0x405e3d
  405e33:	mov    DWORD PTR [edi+0x32],esp
  405e36:	jmp    0x405eb5
  405e38:	int3   
  405e39:	ret    
  405e3a:	add    al,BYTE PTR [edx+edx*2+0x41]
  405e3e:	or     eax,DWORD PTR [edi]
  405e40:	leave  
  405e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e42:	scas   eax,DWORD PTR es:[edi]
  405e43:	xor    ebp,DWORD PTR [edx+0x5c]
  405e46:	adc    ax,sp
  405e49:	outs   dx,DWORD PTR ds:[esi]
  405e4a:	mov    esp,0xe5b44ab3
  405e4f:	out    0x43,al
  405e51:	mov    ecx,DWORD PTR [edi]
  405e53:	jne    0x405e26
  405e55:	mov    ecx,0x1accb7e2
  405e5a:	aam    0x99
  405e5c:	dec    ebp
  405e5d:	xor    eax,DWORD PTR [edx+0x6c]
  405e60:	fmul   st(1),st
  405e62:	adc    BYTE PTR [edi-0x54dc3142],bh
  405e68:	mov    gs:0x90e2fff,al
  405e6e:	fldcw  WORD PTR [eax+0x61]
  405e71:	outs   dx,BYTE PTR ds:[esi]
  405e72:	or     dl,dh
  405e74:	cld    
  405e75:	pop    ebp
  405e76:	mov    edx,0xd510f34b
  405e7b:	loopne 0x405ea0
  405e7d:	sbb    dl,ch
  405e7f:	enter  0xd002,0x66
  405e83:	fist   DWORD PTR [edi-0x3b]
  405e86:	inc    edx
  405e87:	(bad)  
  405e88:	stc    
  405e89:	sub    eax,0xe9c4dd96
  405e8e:	pushf  
  405e8f:	ins    DWORD PTR es:[edi],dx
  405e90:	int    0x1c
  405e92:	das    
  405e93:	int    0xe5
  405e95:	gs je  0x405e9d
  405e98:	or     DWORD PTR ds:0x7cbd2a37,edi
  405e9e:	cwde   
  405e9f:	jbe    0x405e2d
  405ea1:	lods   eax,DWORD PTR ds:[esi]
  405ea2:	push   ebp
  405ea3:	fiadd  DWORD PTR ds:0x9736e669
  405ea9:	xchg   DWORD PTR [edi-0x275b7648],ebp
  405eaf:	(bad)  
  405eb1:	sub    DWORD PTR [eax],edi
  405eb3:	repnz xor al,0x3d
  405eb6:	xchg   ebx,eax
  405eb7:	mov    cl,0x3d
  405eb9:	cdq    
  405eba:	xchg   edx,eax
  405ebb:	fcom   DWORD PTR ds:0x44513800
  405ec1:	(bad)
  405ec5:	or     bh,0xf2
  405ec8:	mov    edx,0x97d0dc69
  405ecd:	fist   DWORD PTR [eax+0x23]
  405ed0:	dec    edx
  405ed1:	push   es
  405ed2:	leave  
  405ed3:	mov    ecx,0x2da20b34
  405ed8:	or     edx,DWORD PTR [edx+ecx*1-0x783ab7a1]
  405edf:	pop    edi
  405ee0:	inc    eax
  405ee1:	cld    
  405ee2:	add    al,0x54
  405ee4:	push   esp
  405ee5:	jns    0x405eef
  405ee7:	call   0x530463fe
  405eec:	add    DWORD PTR [edi-0x30b2fe1d],0xffffffba
  405ef3:	cld    
  405ef4:	xchg   ah,al
  405ef6:	jl     0x405e83
  405ef8:	mov    es,WORD PTR [esi+ebx*1-0x23]
  405efc:	push   cs
  405efd:	push   ecx
  405efe:	or     eax,0xdc75b9cd
  405f03:	adc    eax,0xffffff85
  405f06:	enter  0x2119,0x55
  405f0a:	xlat   BYTE PTR ds:[ebx]
  405f0b:	ret    
  405f0c:	cli    
  405f0d:	or     bl,BYTE PTR [edx+eiz*8+0x6e1e8ffe]
  405f14:	pop    edi
  405f15:	xor    ebx,DWORD PTR [edi-0x5d]
  405f18:	xchg   edi,eax
  405f19:	jnp    0x405ef9
  405f1b:	ss lock sub eax,0xfb52eac1
  405f22:	lahf   
  405f23:	add    eax,0x43cc3a79
  405f28:	push   ss
  405f29:	push   esi
  405f2a:	nop
  405f2b:	and    DWORD PTR gs:[esi+ecx*1-0x68438d34],ecx
  405f33:	jno    0x405fa4
  405f35:	sbb    al,0xb4
  405f37:	inc    ebp
  405f38:	mov    edx,0x4b33cb54
  405f3d:	xor    BYTE PTR [ebx],ah
  405f3f:	xchg   BYTE PTR [ebp+0x3520d04d],al
  405f45:	jecxz  0x405f38
  405f47:	inc    ebx
  405f48:	and    eax,0x94320bb0
  405f4d:	into   
  405f4e:	out    0x57,al
  405f50:	outs   dx,BYTE PTR ds:[esi]
  405f51:	cwde   
  405f52:	xor    dl,BYTE PTR [esi+0x341975cc]
  405f58:	fldenv [esi+0x2d]
  405f5b:	fild   WORD PTR [ebx+0x75]
  405f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f5f:	scas   al,BYTE PTR es:[edi]
  405f60:	imul   esp,DWORD PTR [ecx+0x31ed8475],0x74419975
  405f6a:	pop    esp
  405f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f6c:	push   ebp
  405f6d:	test   al,0x5c
  405f6f:	or     BYTE PTR [ebp+eiz*1-0x79],0xf5
  405f74:	xchg   BYTE PTR [edx+ebx*1],ah
  405f77:	xchg   BYTE PTR [ebp-0x5a75c551],al
  405f7d:	push   0x6b0c2c1d
  405f82:	xor    DWORD PTR [edi],esi
  405f84:	or     ebx,DWORD PTR [esi+esi*2-0x2c5468b9]
  405f8b:	xchg   ecx,eax
  405f8c:	inc    edi
  405f8d:	enter  0xda64,0xcf
  405f91:	(bad)  
  405f92:	jae    0x406005
  405f94:	or     DWORD PTR [edi-0x9],esp
  405f97:	mov    al,0x6e
  405f99:	and    ebx,esp
  405f9b:	addr16 mov ecx,fs
  405f9e:	in     al,dx
  405f9f:	shl    esp,1
  405fa1:	lods   al,BYTE PTR ds:[esi]
  405fa2:	xor    eax,DWORD PTR [edx+0xc]
  405fa5:	cmc    
  405fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa7:	sub    DWORD PTR [ebx-0x5eb480f1],edi
  405fad:	adc    eax,0x63427a71
  405fb2:	inc    esi
  405fb3:	or     eax,0xfcbbe0ca
  405fb8:	push   edx
  405fb9:	dec    ebx
  405fba:	imul   esi,DWORD PTR [edx],0x6b824ff5
  405fc0:	scas   eax,DWORD PTR es:[edi]
  405fc1:	inc    esi
  405fc2:	retf   
  405fc3:	int    0x79
  405fc5:	dec    ebp
  405fc6:	inc    esp
  405fc7:	inc    ebp
  405fc8:	pop    ecx
  405fc9:	(bad)  
  405fca:	adc    BYTE PTR [eax+0x7c35a386],al
  405fd0:	out    0xb9,eax
  405fd2:	jne    0x405fa8
  405fd4:	mov    al,0xd4
  405fd6:	not    BYTE PTR [edi-0x32cdbd32]
  405fdc:	or     BYTE PTR [ebx-0x58],cl
  405fdf:	mov    esi,0x4db60d5a
  405fe4:	mov    dl,0x7f
  405fe6:	sub    DWORD PTR ds:0x3ed14c,edx
  405fec:	(bad)  
  405fed:	pop    edi
  405fee:	and    DWORD PTR [edx],ebx
  405ff0:	jl     0x405fb6
  405ff2:	pop    ss
  405ff3:	lods   eax,DWORD PTR ds:[esi]
  405ff4:	mov    ebx,cs
  405ff6:	sti    
  405ff7:	cld    
  405ff8:	stos   DWORD PTR es:[edi],eax
  405ff9:	popf   
  405ffa:	cmc    
  405ffb:	xchg   ecx,eax
  405ffc:	push   ebp
  405ffd:	or     edi,esi
  405fff:	sub    BYTE PTR [ecx-0x2],0x91
  406003:	ret    0x6235
  406006:	and    DWORD PTR [ecx+0x2577b96f],0x298ab399
  406010:	rcl    BYTE PTR [esi-0xf],0x2e
  406014:	ins    BYTE PTR es:[edi],dx
  406015:	add    al,0x6c
  406017:	push   ecx
  406018:	add    al,0xc2
  40601a:	(bad)  
  40601b:	ins    BYTE PTR es:[edi],dx
  40601c:	(bad)  
  40601d:	and    al,0xd4
  40601f:	ins    BYTE PTR es:[edi],dx
  406020:	hlt    
  406021:	or     bl,ah
  406023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406024:	fdivr  st(4),st
  406026:	into   
  406027:	mov    dh,0x3f
  406029:	sub    eax,DWORD PTR [esi+0x29470924]
  40602f:	lock pop edi
  406031:	pop    esi
  406032:	outs   dx,BYTE PTR ds:[esi]
  406033:	xchg   BYTE PTR [esi-0x14],dl
  406036:	and    BYTE PTR [edi-0x522ed07e],0x3c
  40603d:	std    
  40603e:	pop    edx
  40603f:	out    0xbd,eax
  406041:	fldl2t 
  406043:	mov    ebx,DWORD PTR [ecx+0x2efb63a8]
  406049:	inc    esi
  40604a:	aaa    
  40604b:	rcr    DWORD PTR [edx-0x3d337615],cl
  406051:	inc    eax
  406052:	scas   al,BYTE PTR es:[edi]
  406053:	xchg   DWORD PTR [ebx-0x72],edx
  406056:	cmp    bh,BYTE PTR [ecx-0x4710715b]
  40605c:	dec    edx
  40605d:	call   0xd19cfea5
  406062:	aad    0x37
  406064:	xlat   BYTE PTR ds:[ebx]
  406065:	jg     0x406035
  406067:	(bad)  
  406068:	(bad)  
  406069:	jmp    0x4060c6
  40606b:	loope  0x40604d
  40606d:	push   edx
  40606e:	sub    DWORD PTR [edi-0x47b985ef],esp
  406074:	adc    al,0xc
  406076:	add    DWORD PTR [esi],edx
  406078:	jle    0x4060c8
  40607a:	ror    BYTE PTR [edx+0x47cf85c7],cl
  406080:	inc    eax
  406081:	dec    ebp
  406082:	xor    eax,0x79bf0c21
  406087:	mov    cl,0x8
  406089:	mov    edx,0xe169290d
  40608e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40608f:	sti    
  406090:	sub    cl,BYTE PTR [ebp+0x1c3f69a6]
  406096:	add    DWORD PTR [ebx+eax*8+0x64],ebx
  40609a:	xor    ecx,DWORD PTR [edx-0x4c]
  40609d:	pop    ss
  40609e:	jae    0x4060c1
  4060a0:	or     eax,0x54438678
  4060a5:	mov    dh,0xb3
  4060a7:	pop    eax
  4060a8:	fs jle 0x4060ef
  4060ab:	push   eax
  4060ac:	div    edi
  4060ae:	xchg   edx,eax
  4060af:	add    edi,DWORD PTR [ebx-0x2]
  4060b2:	sbb    esp,DWORD PTR [ebx]
  4060b4:	mov    edx,0x8c7115be
  4060b9:	stos   DWORD PTR es:[edi],eax
  4060ba:	add    eax,0x9fa98714
  4060bf:	les    ecx,FWORD PTR [ecx]
  4060c1:	pusha  
  4060c2:	pushf  
  4060c3:	out    0xae,eax
  4060c5:	xlat   BYTE PTR ds:[ebx]
  4060c6:	mov    edi,edx
  4060c8:	data16 fild DWORD PTR [ebx]
  4060cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060cc:	add    DWORD PTR [ebx-0x5326c554],edx
  4060d2:	or     DWORD PTR [edi+ebx*1-0xe9551c2],edi
  4060d9:	je     0x4060ca
  4060db:	data16 repz scas al,BYTE PTR es:[edi]
  4060de:	pop    ebx
  4060df:	mov    al,ds:0x500ba173
  4060e4:	std    
  4060e5:	and    al,0xcf
  4060e7:	jno    0x406078
  4060e9:	mov    esi,0x94ff7d6f
  4060ee:	adc    ah,BYTE PTR [edx-0x31ea69a3]
  4060f4:	(bad)  
  4060f5:	fucomip st,st(3)
  4060f7:	jg     0x4060ad
  4060f9:	mov    BYTE PTR [eax+0x41],0x3c
  4060fd:	outs   dx,DWORD PTR ds:[esi]
  4060fe:	and    BYTE PTR [ebx],ch
  406100:	mov    bl,0x4
  406102:	shr    DWORD PTR [ebp+0x728cab43],cl
  406108:	sbb    DWORD PTR [edx+0x48bfa8af],ebx
  40610e:	jmp    0xaf4154ab
  406113:	add    eax,0xe5c2e7dc
  406118:	pop    esi
  406119:	bound  esi,QWORD PTR [esi]
  40611b:	and    ch,al
  40611d:	out    dx,al
  40611e:	sub    bh,BYTE PTR [ebp+0x370f8ae]
  406124:	outs   dx,BYTE PTR ds:[esi]
  406125:	push   eax
  406126:	sbb    eax,0xfab8b61a
  40612b:	mov    eax,0xd16e1aea
  406130:	int3   
  406131:	mov    al,0x3
  406133:	scas   al,BYTE PTR es:[edi]
  406134:	xchg   edi,eax
  406135:	call   0x18099a3c
  40613a:	xchg   esi,eax
  40613b:	sbb    al,0xdb
  40613d:	sub    eax,0xcfdf501
  406142:	push   es
  406143:	and    bl,BYTE PTR [ecx]
  406145:	adc    ecx,edx
  406147:	sbb    DWORD PTR [eax+0x3c7f19d2],ebx
  40614d:	cdq    
  40614e:	outs   dx,DWORD PTR ds:[esi]
  40614f:	rcr    BYTE PTR [edx+0x58],0x34
  406153:	inc    ebx
  406154:	fbld   TBYTE PTR [ebp-0x34]
  406157:	xor    al,0x5e
  406159:	jmp    0xcc8fb0d3
  40615e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40615f:	inc    edi
  406160:	test   al,0xff
  406162:	mov    ch,0xee
  406164:	xor    eax,0xb40b18a3
  406169:	add    eax,0xdc1f2e5c
  40616e:	jo     0x40613e
  406170:	clc    
  406171:	mov    bl,0x6c
  406173:	or     eax,0x7a1d4d2e
  406178:	scas   al,BYTE PTR es:[edi]
  406179:	mov    eax,ds:0xa1d8fc2c
  40617e:	fnstsw WORD PTR [ebx+0x61bee979]
  406184:	test   DWORD PTR [edi+0x42],0x827f3eb0
  40618b:	pop    esi
  40618c:	cmp    al,0x6c
  40618e:	test   BYTE PTR [edx+0x1bf33d79],dh
  406194:	aaa    
  406195:	sub    BYTE PTR [eax-0x4abd0d3],0xed
  40619c:	sub    DWORD PTR [edi],eax
  40619e:	inc    ebx
  40619f:	sub    DWORD PTR [ebx],0x25
  4061a2:	mov    esi,0x7daa13da
  4061a7:	jmp    0xc924:0x4d1d1ba7
  4061ae:	(bad)  
  4061af:	sti    
  4061b0:	mov    eax,0x82302f19
  4061b5:	inc    ebp
  4061b6:	xor    ch,BYTE PTR [ecx-0x37d03b80]
  4061bc:	push   eax
  4061bd:	push   eax
  4061be:	sub    DWORD PTR ss:[esi-0x1f],eax
  4061c2:	call   0x894ce2b7
  4061c7:	ja     0x40620c
  4061c9:	or     cl,BYTE PTR [edx+0x4d805924]
  4061cf:	imul   edi,DWORD PTR [ecx],0x6c7a58d4
  4061d5:	inc    edi
  4061d6:	adc    dh,BYTE PTR [edi]
  4061d8:	fadd   st(5),st
  4061da:	jmp    DWORD PTR fs:[eax+0x589bebfc]
  4061e1:	repnz or dl,BYTE PTR [ebx+0x1b]
  4061e5:	fimul  DWORD PTR [edx+ebp*8]
  4061e8:	jb     0x40616f
  4061ea:	pop    esp
  4061eb:	clc    
  4061ec:	aaa    
  4061ed:	cmp    cl,BYTE PTR [esi-0x38]
  4061f0:	out    dx,al
  4061f1:	das    
  4061f2:	icebp  
  4061f3:	lea    edx,[edx+0x13214c7e]
  4061f9:	mov    ebx,0x42664f65
  4061fe:	fisubr WORD PTR [edi]
  406200:	test   BYTE PTR [ebx*1+0x5a7992d0],0x46
  406208:	pop    esi
  406209:	pop    es
  40620a:	stc    
  40620b:	mov    bh,0x6f
  40620d:	test   BYTE PTR [eax],al
  40620f:	fwait
  406210:	sub    DWORD PTR [ebx-0x6e3ffe],ecx
  406216:	push   ds
  406217:	aam    0xd
  406219:	mov    dl,0x9
  40621b:	imul   edi,DWORD PTR [ebx-0x39],0x42
  40621f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  406221:	sbb    BYTE PTR [esi+0x2879ad14],cl
  406227:	jnp    0x4061f1
  406229:	cmp    al,0x47
  40622b:	clc    
  40622c:	cs adc al,0x6a
  40622f:	out    0x47,eax
  406231:	sbb    ecx,DWORD PTR [eax-0x6c]
  406234:	push   ebp
  406235:	or     BYTE PTR [edx+eax*1],0x97
  406239:	lea    esi,[esi-0xecc0966]
  40623f:	cmp    BYTE PTR [edx-0x44],cl
  406242:	call   0x56254b80
  406247:	mov    eax,0xde67457a
  40624c:	push   ebx
  40624d:	ror    DWORD PTR [eax-0x299581a1],cl
  406253:	jmp    0xeead:0x14ced986
  40625a:	test   BYTE PTR [ecx-0x6d52d7bb],al
  406260:	add    al,0x56
  406262:	retf   
  406263:	in     al,dx
  406264:	adc    BYTE PTR [ebx+0x41],al
  406267:	sub    al,0xfb
  406269:	inc    DWORD PTR [esi]
  40626b:	inc    edi
  40626c:	mov    ah,0x31
  40626e:	pop    edi
  40626f:	jl     0x406213
  406271:	cmp    esp,eax
  406273:	inc    ecx
  406274:	cs cwde 
  406276:	sub    eax,0x530bf228
  40627b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40627c:	fisttp DWORD PTR [edi+0x291723b3]
  406282:	mov    DWORD PTR [ecx-0x1bc11374],eax
  406288:	mov    BYTE PTR [eax-0x76321a33],dh
  40628e:	mov    al,ds:0xc00f446e
  406293:	pop    esi
  406294:	inc    DWORD PTR [ebp+ebp*4+0x4760d037]
  40629b:	sub    eax,0xf72ca910
  4062a0:	data16 mov WORD PTR [eax],cs
  4062a3:	dec    eax
  4062a4:	mov    esi,0x583aa72a
  4062a9:	mov    ecx,0x89d82940
  4062ae:	repnz push ds
  4062b0:	dec    ecx
  4062b1:	aas    
  4062b2:	sbb    BYTE PTR [eax+0x40],bh
  4062b5:	cmp    eax,0x6d1b653b
  4062ba:	imul   edx,DWORD PTR ss:[eax+ebx*2],0x41
  4062bf:	cmp    al,0x8d
  4062c1:	pop    eax
  4062c2:	and    eax,0x782c60e9
  4062c7:	sub    eax,0xa7f0812a
  4062cc:	inc    ecx
  4062cd:	enter  0x2078,0x28
  4062d1:	aas    
  4062d2:	dec    ecx
  4062d3:	fistp  DWORD PTR [ebx+esi*2]
  4062d6:	cmp    eax,0x21077515
  4062db:	in     eax,dx
  4062dc:	stos   BYTE PTR es:[edi],al
  4062dd:	cmp    al,0x97
  4062df:	iret   
  4062e0:	stos   DWORD PTR es:[edi],eax
  4062e1:	(bad)  
  4062e2:	mov    edi,0x3d07954a
  4062e7:	call   0xf9f1988a
  4062ec:	pop    ebp
  4062ed:	xchg   DWORD PTR [ebp+0x33],esi
  4062f0:	push   edx
  4062f1:	adc    ah,BYTE PTR [ebx-0x3a389a98]
  4062f7:	or     DWORD PTR [ebx+0x49f03585],ecx
  4062fd:	mov    ebp,0x4c8271d2
  406302:	fs call 0x65a11daf
  406308:	jg     0x406308
  40630a:	aam    0x9f
  40630c:	(bad)  
  40630d:	mov    ebx,0x12fb23f0
  406312:	lock shr esi,cl
  406315:	sbb    edx,DWORD PTR [ebx+esi*4]
  406318:	hlt    
  406319:	fmul   st(5),st
  40631b:	jnp    0x406384
  40631d:	test   DWORD PTR [ecx+0x2d4ed7d5],ebp
  406323:	jb     0x40632f
  406325:	cld    
  406326:	mov    ds:0xfafac173,al
  40632b:	mov    esi,DWORD PTR [ebp-0x54cfcb76]
  406331:	dec    eax
  406332:	lea    edx,[ebp+0x5babf395]
  406338:	xlat   BYTE PTR ds:[ebx]
  406339:	scas   al,BYTE PTR es:[edi]
  40633a:	push   es
  40633b:	push   ebp
  40633c:	pusha  
  40633d:	loopne 0x4062d8
  40633f:	or     al,0xd2
  406341:	mov    bh,0xbc
  406343:	add    esp,DWORD PTR [ebx+0xf]
  406346:	dec    ebx
  406347:	dec    edx
  406348:	and    cl,BYTE PTR [ebx-0x34]
  40634b:	and    eax,0xb956fd40
  406350:	in     al,dx
  406351:	popa   
  406352:	mov    ds:0x6ce5c3ee,al
  406357:	jp     0x4062e1
  406359:	lahf   
  40635a:	divps  xmm5,xmm3
  40635d:	fninit 
  40635f:	lahf   
  406360:	sti    
  406361:	loope  0x4063db
  406363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406364:	in     al,0x2b
  406366:	stos   BYTE PTR es:[edi],al
  406367:	std    
  406368:	(bad)  
  406369:	cld    
  40636a:	mov    fs,WORD PTR [ebx]
  40636c:	outs   dx,DWORD PTR ds:[esi]
  40636d:	je     0x40639c
  40636f:	adc    al,0xb9
  406371:	cmp    eax,0xc5c8d26a
  406376:	adc    DWORD PTR [ecx-0x47c5da2c],ecx
  40637c:	mov    ebx,0xeb9470a
  406381:	les    edi,FWORD PTR [edi-0x595fa9d6]
  406387:	jge    0x406343
  406389:	icebp  
  40638a:	(bad)  
  40638b:	and    al,0x1d
  40638d:	or     BYTE PTR [edx-0x10d359c],dl
  406393:	or     edx,DWORD PTR [eax+0x32aa494d]
  406399:	stc    
  40639a:	popf   
  40639b:	dec    ebx
  40639c:	rcr    DWORD PTR [esi-0x1a387556],1
  4063a2:	stos   DWORD PTR es:[edi],eax
  4063a3:	pop    ds
  4063a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a5:	(bad)  
  4063a6:	push   ebx
  4063a7:	les    esp,FWORD PTR [edx-0x4f24327e]
  4063ad:	adc    bl,BYTE PTR [edi+0x58b8117e]
  4063b3:	adc    DWORD PTR [edx+0x6f],eax
  4063b6:	mov    al,0xb8
  4063b8:	jb     0x406347
  4063ba:	pop    eax
  4063bb:	pop    eax
  4063bc:	jno    0x40637b
  4063be:	rol    DWORD PTR ds:0xa0eba94d,cl
  4063c4:	pop    ds
  4063c5:	lods   eax,DWORD PTR ds:[esi]
  4063c6:	iret   
  4063c7:	in     al,0x1d
  4063c9:	sub    al,ah
  4063cb:	add    bl,BYTE PTR [ebp+eiz*1+0x2d1c80ac]
  4063d2:	gs jne 0x406411
  4063d5:	jmp    0x7bd72508
  4063da:	fistp  WORD PTR [ebp+0x886254d]
  4063e0:	and    edi,edx
  4063e2:	stc    
  4063e3:	rol    DWORD PTR [ebx-0x11],1
  4063e6:	inc    ecx
  4063e7:	inc    eax
  4063e8:	out    dx,al
  4063e9:	in     eax,dx
  4063ea:	inc    esp
  4063eb:	into   
  4063ec:	jno    0x4063a4
  4063ee:	leave  
  4063ef:	in     al,0x46
  4063f1:	or     DWORD PTR [edx-0x80],esi
  4063f4:	shl    al,1
  4063f6:	test   ch,cl
  4063f8:	out    dx,eax
  4063f9:	push   0x34
  4063fb:	(bad)  
  4063fc:	sub    al,0xb6
  4063fe:	sbb    al,0x97
  406400:	push   ss
  406401:	sti    
  406402:	stos   DWORD PTR es:[edi],eax
  406403:	dec    edi
  406404:	dec    ebp
  406405:	iret   
  406406:	div    DWORD PTR [esi+edx*2]
  406409:	xchg   dl,bh
  40640b:	xchg   ebp,eax
  40640c:	aad    0xea
  40640e:	retf   
  40640f:	cmp    BYTE PTR [eax],bh
  406411:	jmp    0x406404
  406413:	xchg   esp,eax
  406414:	jmp    0x406480
  406416:	add    DWORD PTR [edi],esi
  406418:	in     eax,dx
  406419:	mov    esi,0x27a110ff
  40641e:	and    eax,0x2e6712cc
  406423:	imul   esi,eax,0x60
  406426:	and    edx,DWORD PTR [ecx+0x22]
  406429:	xor    eax,0xd649b0a3
  40642e:	sbb    edi,esi
  406430:	xor    eax,0xbe713611
  406435:	mov    ah,0x2e
  406437:	int3   
  406438:	fcomp  DWORD PTR [edx+0x8]
  40643b:	cld    
  40643c:	leave  
  40643d:	jmp    0x8763:0x95d1fdc0
  406444:	and    al,0x56
  406446:	push   ebp
  406447:	sub    bh,dh
  406449:	rcl    BYTE PTR [esp+edx*1+0x34],cl
  40644d:	jne    0x40646f
  40644f:	gs jnp 0x406470
  406452:	test   BYTE PTR [ebx+ebp*8+0x15a00d37],bh
  406459:	ror    BYTE PTR [edi+0xedd0041],cl
  40645f:	mov    al,0xc
  406461:	ret    0xaa92
  406464:	lahf   
  406465:	scas   eax,DWORD PTR es:[edi]
  406466:	fcomp  QWORD PTR [ebx-0x43c77cc3]
  40646c:	adc    DWORD PTR [esi],ebp
  40646e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40646f:	dec    edi
  406470:	outs   dx,BYTE PTR ds:[esi]
  406471:	and    DWORD PTR [edx+edi*1],edi
  406474:	push   eax
  406475:	cmc    
  406476:	in     eax,0xf5
  406478:	cmp    al,0xf6
  40647a:	xchg   DWORD PTR [ebx+0x40],ecx
  40647d:	inc    edi
  40647e:	ficomp WORD PTR [ebx-0x2f7f04b6]
  406484:	fidivr WORD PTR [eax]
  406486:	imul   edx,DWORD PTR [edi+0x74],0x71
  40648a:	aam    0x86
  40648c:	mov    ebx,0x5568c344
  406491:	enter  0xafe0,0x7e
  406495:	jp     0x4064c5
  406497:	xchg   esp,eax
  406498:	mov    esp,DWORD PTR [esi]
  40649a:	sbb    eax,0x42c621db
  40649f:	sub    DWORD PTR [ecx-0x39],ecx
  4064a2:	xchg   ebp,eax
  4064a3:	xchg   ecx,eax
  4064a4:	or     al,0x69
  4064a6:	fild   WORD PTR [esi-0x64102f25]
  4064ac:	ret    
  4064ad:	xor    BYTE PTR [edi+eax*8+0x63a3691],0xc9
  4064b5:	mov    edi,0x694b2af3
  4064ba:	cwde   
  4064bb:	idiv   BYTE PTR [esi+0x7d384080]
  4064c1:	dec    eax
  4064c2:	mov    eax,ds:0x6b1955ed
  4064c7:	push   0xe1bcb0fe
  4064cc:	push   esi
  4064cd:	add    al,0x4a
  4064cf:	popf   
  4064d0:	rcl    BYTE PTR [ecx+0x7e],1
  4064d3:	cmp    edx,DWORD PTR [edi+eax*2]
  4064d6:	pop    ss
  4064d7:	sub    bh,cl
  4064d9:	mov    ebp,0x78c2c7a4
  4064de:	xor    DWORD PTR [ebx],edx
  4064e0:	cs push ss
  4064e2:	test   eax,0x6c51b7ee
  4064e7:	stc    
  4064e8:	bnd jge 0x406500
  4064eb:	stos   BYTE PTR es:[edi],al
  4064ec:	add    al,0x2e
  4064ee:	and    ch,al
  4064f0:	clc    
  4064f1:	adc    BYTE PTR [esi-0x6c75128b],al
  4064f7:	adc    bl,BYTE PTR [ecx]
  4064f9:	popa   
  4064fa:	cmp    BYTE PTR [eax+0x15],ah
  4064fd:	(bad)  
  4064fe:	in     al,dx
  4064ff:	ror    ch,cl
  406501:	dec    ebx
  406502:	cmp    eax,0x67322d12
  406507:	inc    ebx
  406508:	xchg   DWORD PTR [edi],esi
  40650a:	aas    
  40650b:	jb     0x40649d
  40650d:	dec    eax
  40650e:	or     BYTE PTR [eax-0x5fbd2153],ah
  406514:	pop    eax
  406515:	gs adc eax,edx
  406518:	mov    ?,WORD PTR [ebx]
  40651a:	bound  ebx,QWORD PTR [ebp-0x19]
  40651d:	push   cs
  40651e:	int3   
  40651f:	stos   BYTE PTR es:[edi],al
  406520:	push   ecx
  406521:	int    0x52
  406523:	fs pop ebx
  406525:	push   0x276d5a94
  40652a:	mov    dh,0x5f
  40652c:	dec    edi
  40652d:	or     eax,0x4059d1c6
  406532:	mov    ds:0x3f9bd61,eax
  406537:	add    cl,dl
  406539:	pop    ss
  40653a:	mov    cl,0x9f
  40653c:	and    ah,BYTE PTR [ebx]
  40653e:	mov    bh,0xe5
  406540:	cdq    
  406541:	sub    BYTE PTR [ebx+ebp*2+0x4434441],0x8b
  406549:	stc    
  40654a:	(bad)  
  40654b:	aad    0xbc
  40654d:	scas   eax,DWORD PTR es:[edi]
  40654e:	push   esp
  40654f:	cli    
  406550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406551:	(bad)  
  406552:	jne    0x406518
  406554:	inc    ecx
  406555:	cdq    
  406556:	loopne 0x406545
  406558:	jmp    0x4541b61c
  40655d:	jmp    0xe0144ab9
  406562:	arpl   WORD PTR [eax],di
  406564:	rcr    DWORD PTR [eax+ebp*2+0x3a],1
  406568:	adc    ebp,DWORD PTR [ebp+0x15]
  40656b:	arpl   bp,bp
  40656d:	daa    
  40656e:	(bad)  
  40656f:	sbb    DWORD PTR [esi+0xf],ecx
  406572:	imul   ebp,DWORD PTR [eax+0x3b],0x3d9b5cf1
  406579:	ins    DWORD PTR es:[edi],dx
  40657a:	(bad)  
  40657b:	mov    ds:0x4ad7e9f8,eax
  406580:	aas    
  406581:	out    dx,eax
  406582:	iret   
  406583:	in     al,0xf3
  406585:	cwde   
  406586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406587:	hlt    
  406588:	or     al,0xb0
  40658a:	sbb    BYTE PTR [edi-0x69f780de],bh
  406590:	int    0x61
  406592:	aaa    
  406593:	xchg   ebp,eax
  406594:	jmp    0x4d494e20
  406599:	mov    dh,0xad
  40659b:	(bad)  
  40659c:	out    dx,al
  40659d:	ror    eax,1
  40659f:	ja     0x4065dd
  4065a1:	or     eax,DWORD PTR [eax+ebp*2+0x2e]
  4065a5:	xor    DWORD PTR [edx-0x630e2ded],edx
  4065ab:	popf   
  4065ac:	ins    BYTE PTR es:[edi],dx
  4065ad:	enter  0x9328,0x63
  4065b1:	mov    fs,WORD PTR [ebx+ecx*1]
  4065b4:	push   edx
  4065b5:	inc    esi
  4065b6:	jnp    0x406577
  4065b8:	test   cl,ah
  4065ba:	add    DWORD PTR ds:0x4f6d1fa9,0xd29617b2
  4065c4:	movhps QWORD PTR [eax+ebp*2+0x56],xmm5
  4065c9:	shl    BYTE PTR [eax-0x212dfe3c],cl
  4065cf:	bound  eax,QWORD PTR [edx+edx*8+0x74]
  4065d3:	or     bl,dl
  4065d5:	ret    0xe9c1
  4065d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065d9:	in     eax,0xa2
  4065db:	cwde   
  4065dc:	sub    edi,edi
  4065de:	or     dl,BYTE PTR [eax-0x52]
  4065e1:	xor    eax,0xe66ca937
  4065e6:	and    dl,BYTE PTR [edx-0x3c]
  4065e9:	xchg   edi,eax
  4065ea:	jg     0x4065e4
  4065ec:	cmp    ebx,DWORD PTR [eax-0x59]
  4065ef:	push   ds
  4065f0:	pop    esp
  4065f1:	inc    esp
  4065f2:	mov    eax,0x27c458b0
  4065f7:	cld    
  4065f8:	cmp    al,0x83
  4065fa:	arpl   WORD PTR [esi+edi*4],ax
  4065fd:	or     eax,0x5f88569b
  406602:	ins    DWORD PTR es:[edi],dx
  406603:	in     eax,dx
  406604:	cmp    cl,BYTE PTR es:[ebx+eiz*8+0x2d2fdc7c]
  40660c:	jb     0x406619
  40660e:	repnz mov eax,esi
  406611:	(bad)  
  406612:	mov    ebp,0xe6fd80ab
  406617:	loop   0x4065d3
  406619:	js     0x4065f6
  40661b:	fld    DWORD PTR [ebx+0x2c2aceca]
  406621:	xor    BYTE PTR [edi-0x6452a169],bl
  406627:	mov    eax,ds:0x589a332
  40662c:	mov    al,0x3
  40662e:	dec    edi
  40662f:	and    DWORD PTR [ebx+edi*8],eax
  406632:	pop    ebp
  406633:	outs   dx,BYTE PTR ds:[esi]
  406634:	test   BYTE PTR [edx],0x15
  406637:	jmp    0x2e05df44
  40663c:	into   
  40663d:	sbb    cl,BYTE PTR [ebp-0x21da4436]
  406643:	jb     0x4066ba
  406645:	ret    
  406646:	sbb    al,0xd6
  406648:	mov    al,ds:0x1dc151fa
  40664d:	call   0x2d876d39
  406652:	dec    esi
  406653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406654:	mov    eax,0x7ab2a867
  406659:	loopne 0x406645
  40665b:	xor    esp,DWORD PTR [eax+0x5b4a95d1]
  406661:	ror    BYTE PTR [eax-0x59a2ac5],0x63
  406668:	cmp    BYTE PTR [ecx-0x1b],cl
  40666b:	test   eax,0xdd1a63bd
  406670:	(bad)  
  406671:	jns    0x4066d0
  406673:	push   ecx
  406674:	ret    
  406675:	div    BYTE PTR [eax-0x41bc8a6e]
  40667b:	ja     0x40666b
  40667d:	xchg   edi,eax
  40667e:	sar    DWORD PTR [edx-0x27],cl
  406681:	sub    DWORD PTR [edi+ecx*2],edi
  406684:	mov    edi,0xf209845f
  406689:	add    al,0xf3
  40668b:	inc    ebx
  40668c:	push   eax
  40668d:	add    dl,BYTE PTR [edi+0x4b0cd815]
  406693:	push   eax
  406694:	ret    
  406695:	ror    BYTE PTR [esi],cl
  406697:	mov    dh,0xbf
  406699:	scas   al,BYTE PTR es:[edi]
  40669a:	add    al,0x52
  40669c:	sbb    edi,DWORD PTR [edx+0x3c]
  40669f:	imul   esi,DWORD PTR [edi],0xdb6501d4
  4066a5:	mov    ah,0x76
  4066a7:	jne    0x4066b2
  4066a9:	frstor [esi]
  4066ab:	lods   eax,DWORD PTR ds:[esi]
  4066ac:	xor    esp,DWORD PTR [edi]
  4066ae:	push   ecx
  4066af:	add    BYTE PTR [esi+0x2c6d6b29],ah
  4066b5:	fcom   st(1)
  4066b7:	cmp    al,BYTE PTR [esi+esi*1+0x6a]
  4066bb:	mov    ah,0xcc
  4066bd:	adc    DWORD PTR [esi+0x42bb41d0],edx
  4066c3:	mov    BYTE PTR [esi+eax*2+0xb],bh
  4066c7:	mov    bl,0xfa
  4066c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066ca:	jne    0x4066ca
  4066cc:	jno    0x4066fd
  4066ce:	lds    ebp,FWORD PTR [edx-0x5f9e468e]
  4066d4:	das    
  4066d5:	sub    DWORD PTR [edx],edx
  4066d7:	inc    edi
  4066d8:	pop    esp
  4066d9:	xchg   ecx,eax
  4066da:	pop    ss
  4066db:	sbb    esi,DWORD PTR [ebp+0x7c07e547]
  4066e1:	mov    al,0x93
  4066e3:	std    
  4066e4:	into   
  4066e5:	lea    eax,[eax+0x6e]
  4066e8:	aam    0xd7
  4066ea:	aas    
  4066eb:	pop    ss
  4066ec:	mov    al,BYTE PTR [edi]
  4066ee:	imul   esp,DWORD PTR [ebp-0x77d473e4],0xfffffff9
  4066f5:	jl     0x4066b1
  4066f7:	loope  0x406729
  4066f9:	ds push ss
  4066fb:	cdq    
  4066fc:	sbb    al,0xde
  4066fe:	fwait
  4066ff:	xchg   ecx,eax
  406700:	pop    esi
  406701:	sub    eax,0x9bd19f07
  406706:	retf   0x1296
  406709:	dec    ebp
  40670a:	pop    esi
  40670b:	aas    
  40670c:	add    eax,0xc88c80e7
  406711:	ins    BYTE PTR es:[edi],dx
  406712:	jle    0x4066d7
  406714:	push   eax
  406715:	and    DWORD PTR [edx+0x18],0x9c341013
  40671c:	(bad)  
  40671d:	xor    cl,bh
  40671f:	jne    0x406795
  406721:	push   esp
  406722:	repnz ror BYTE PTR [edi+0x70b632cc],0x40
  40672a:	or     al,0x7b
  40672c:	mov    esi,0x8d9cf102
  406731:	fst    QWORD PTR [esi-0x162bbf24]
  406737:	das    
  406738:	call   DWORD PTR [edi+0x676fcafa]
  40673e:	xor    dh,al
  406740:	arpl   WORD PTR [edi+0x6c66e906],bx
  406746:	fwait
  406747:	popa   
  406748:	test   eax,0x693f3d20
  40674d:	push   0xc10c2ff1
  406752:	add    BYTE PTR [edx+0x3a],al
  406755:	(bad)  
  406756:	fldenv [esi]
  406758:	fs cli 
  40675a:	and    ch,BYTE PTR [esi+0x3c]
  40675d:	inc    esi
  40675e:	test   DWORD PTR [ecx],ebp
  406760:	jge    0x406737
  406762:	arpl   ax,sp
  406764:	pop    esi
  406765:	je     0x4067da
  406767:	in     eax,dx
  406768:	xor    eax,0xc08adab8
  40676d:	call   0xd7b07bb2
  406772:	lds    eax,FWORD PTR [ecx]
  406774:	fisttp WORD PTR [eax+0x23]
  406777:	nop
  406778:	daa    
  406779:	or     BYTE PTR [ebx],dl
  40677b:	sbb    al,0x8e
  40677d:	outs   dx,DWORD PTR ds:[esi]
  40677e:	jb     0x406740
  406780:	imul   esp,DWORD PTR [ebp*2-0x598d1ba8],0x9540ede2
  40678b:	add    dl,BYTE PTR [ebp+0xd]
  40678e:	jo     0x4067ba
  406790:	push   ds
  406791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406792:	scas   eax,DWORD PTR es:[edi]
  406793:	mov    esi,0xc5bca0fc
  406798:	nop
  406799:	mov    eax,0x3b155906
  40679e:	aas    
  40679f:	(bad)  
  4067a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a1:	jae    0x4067a7
  4067a3:	addr16 jg 0x406819
  4067a6:	sar    DWORD PTR [ebx+0x2f7e9cbb],cl
  4067ac:	(bad)  [edi]
  4067ae:	aas    
  4067af:	ror    BYTE PTR [bp+di],0xeb
  4067b3:	sub    al,0x17
  4067b5:	addr16 dec edx
  4067b7:	or     al,BYTE PTR [ebp+0x343058e]
  4067bd:	imul   eax,DWORD PTR [esi+0x9],0xffffffd5
  4067c1:	and    DWORD PTR [ecx-0x34],ebp
  4067c4:	pop    eax
  4067c5:	mov    eax,0x29c22115
  4067ca:	mov    al,0x8c
  4067cc:	imul   edi,DWORD PTR [eax],0xb7f1d033
  4067d2:	mov    ebx,0xd930f5d9
  4067d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067d8:	js     0x406836
  4067da:	stos   DWORD PTR es:[edi],eax
  4067db:	mov    eax,ds:0xc4e7b167
  4067e0:	inc    esi
  4067e1:	lea    edx,[edi]
  4067e3:	jle    0x406775
  4067e5:	lods   al,BYTE PTR ds:[esi]
  4067e6:	cmp    eax,0xbb383180
  4067eb:	mov    BYTE PTR [ecx],bl
  4067ed:	xor    al,0xb6
  4067ef:	pop    ecx
  4067f0:	gs push esi
  4067f2:	aaa    
  4067f3:	inc    ebx
  4067f4:	stc    
  4067f5:	jp     0x406854
  4067f7:	ins    BYTE PTR es:[edi],dx
  4067f8:	xor    al,0xc6
  4067fa:	or     ch,bh
  4067fc:	es jmp 0x95dd:0x3dec78fe
  406804:	push   0x24a65300
  406809:	xor    ebx,DWORD PTR [eax]
  40680b:	mov    al,0xbb
  40680d:	push   ss
  40680e:	hlt    
  40680f:	add    BYTE PTR ss:[ecx-0x53],0x4a
  406814:	lahf   
  406815:	push   eax
  406816:	add    esp,DWORD PTR [eax-0x12e50898]
  40681c:	jecxz  0x4067d3
  40681e:	lds    ecx,FWORD PTR [eax-0x2f]
  406821:	or     dl,bl
  406823:	adc    ah,0x0
  406826:	gs push cs
  406828:	mov    edi,0xa63a9ade
  40682d:	pushf  
  40682e:	ss (bad) 
  406830:	es mov bl,0x98
  406833:	lea    esi,[edx+0x13]
  406836:	out    0x4a,eax
  406838:	iret   
  406839:	pop    es
  40683a:	adc    eax,0x641fc883
  40683f:	jmp    0x40683b
  406841:	fstp   TBYTE PTR [ebp+edx*1+0x63]
  406845:	cmp    edx,DWORD PTR [ecx+edi*2]
  406848:	jle    0x406880
  40684a:	lock jl 0x4067ea
  40684d:	dec    ebp
  40684e:	pop    edx
  40684f:	inc    ebx
  406850:	repz push ebx
  406852:	dec    edi
  406853:	xchg   BYTE PTR [esi+0x41],cl
  406856:	fidiv  DWORD PTR [ecx-0x23c631bc]
  40685c:	in     eax,0x79
  40685e:	fcmovu st,st(5)
  406860:	jl     0x4067e2
  406862:	or     eax,0x6aca2f
  406867:	xchg   edx,eax
  406868:	push   cs
  406869:	pop    esp
  40686a:	retf   0x4d95
  40686d:	adc    ebx,DWORD PTR [esi]
  40686f:	test   eax,0x611f310a
  406874:	addr16 iret 
  406876:	jbe    0x4068f7
  406878:	and    esi,0xffffff9f
  40687b:	pop    edx
  40687c:	jp     0x406871
  40687e:	lods   al,BYTE PTR ds:[esi]
  40687f:	loope  0x4068dc
  406881:	and    BYTE PTR [esi+eiz*1+0x5e1c6b21],0x45
  406889:	(bad)  
  40688a:	pop    ss
  40688b:	es inc ebp
  40688d:	mov    dh,0xc9
  40688f:	sar    BYTE PTR [ebx],1
  406891:	dec    ecx
  406892:	inc    ebx
  406893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406894:	push   es
  406895:	fwait
  406896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406897:	xchg   ecx,eax
  406898:	mov    ah,0xcf
  40689a:	xchg   ecx,eax
  40689b:	and    BYTE PTR [edi+0x61],bh
  40689e:	dec    ebx
  40689f:	push   esp
  4068a0:	cdq    
  4068a1:	xchg   ebx,eax
  4068a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a3:	scas   eax,DWORD PTR es:[edi]
  4068a4:	xor    ecx,DWORD PTR [edx-0x13]
  4068a7:	ror    BYTE PTR ds:0xd2030efd,cl
  4068ad:	xor    DWORD PTR [edi],0xe879616c
  4068b3:	es stc 
  4068b5:	(bad)  
  4068b6:	sbb    eax,0xa1aad1db
  4068bb:	shr    DWORD PTR [edx],cl
  4068bd:	sbb    DWORD PTR [ebp-0x5be936d3],0xc0afd00a
  4068c7:	(bad)  
  4068c8:	in     eax,dx
  4068c9:	mov    ds:0x1bd62155,al
  4068ce:	inc    ebp
  4068cf:	add    al,0x84
  4068d1:	aad    0x7a
  4068d3:	mov    edx,0x64599c63
  4068d8:	xor    al,0x1b
  4068da:	aaa    
  4068db:	mov    ds:0xb9e75bf6,al
  4068e0:	inc    esp
  4068e1:	daa    
  4068e2:	imul   ecx,DWORD PTR [edx],0x13
  4068e5:	cli    
  4068e6:	aaa    
  4068e7:	es aad 0x97
  4068ea:	fist   WORD PTR [eax+0x34]
  4068ed:	sahf   
  4068ee:	stos   BYTE PTR es:[edi],al
  4068ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068f0:	fsubr  DWORD PTR [edx]
  4068f2:	scas   eax,DWORD PTR es:[edi]
  4068f3:	mov    sp,0x365f
  4068f7:	xchg   edi,esp
  4068f9:	rol    bl,cl
  4068fb:	cmp    al,0x2f
  4068fd:	call   FWORD PTR [edi+0x3]
  406900:	sub    edi,DWORD PTR [esi+esi*4-0xe099f96]
  406907:	mov    ds:0xd22769c5,eax
  40690c:	das    
  40690d:	add    eax,0x7aeac1c2
  406912:	clc    
  406913:	inc    ecx
  406914:	jle    0x406960
  406916:	push   esp
  406917:	test   al,0x2a
  406919:	pop    esp
  40691a:	fst    st(7)
  40691c:	mov    dl,0x59
  40691e:	inc    esi
  40691f:	inc    edi
  406920:	fsub   DWORD PTR [esi]
  406922:	jmp    0x7f5fc50e
  406927:	or     al,0x66
  406929:	dec    eax
  40692a:	mov    dh,0x95
  40692c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40692d:	enter  0x7f2,0xb
  406931:	pushf  
  406932:	mov    WORD PTR [eax+0x5de804cb],ss
  406938:	sti    
  406939:	sbb    ebp,edx
  40693b:	fsubr  QWORD PTR [eax+0x2cf5e1a7]
  406941:	dec    edx
  406942:	fwait
  406943:	sub    ah,BYTE PTR [esi]
  406945:	pop    eax
  406946:	pop    esi
  406947:	mov    dh,0x6a
  406949:	stos   DWORD PTR es:[edi],eax
  40694a:	push   edi
  40694b:	loop   0x406989
  40694d:	mov    ch,BYTE PTR [edi+0x7c3b9dd0]
  406953:	popf   
  406954:	sbb    DWORD PTR fs:[esi-0x6b],edi
  406958:	fxtract 
  40695a:	je     0x406970
  40695c:	dec    BYTE PTR [edx-0x1e9b1f0d]
  406962:	sub    al,0xaa
  406964:	jnp    0x406967
  406966:	mov    al,ds:0x44447195
  40696b:	mov    ah,0xa3
  40696d:	adc    al,BYTE PTR [esi]
  40696f:	sbb    DWORD PTR [edx],ecx
  406971:	inc    ebp
  406972:	fsub   QWORD PTR [edx+eiz*8-0x25e0569b]
  406979:	add    ah,cl
  40697b:	mov    ds,WORD PTR [ebp-0x4c]
  40697e:	loope  0x406923
  406980:	fisttp WORD PTR [esi+0x7b]
  406983:	psrlw  mm3,QWORD PTR [ebp-0x34]
  406987:	mov    ebp,0xe5bdd422
  40698c:	or     eax,0x5e489414
  406991:	dec    ebx
  406992:	mov    bl,0x6a
  406994:	xor    ecx,DWORD PTR [ecx]
  406996:	sbb    DWORD PTR [esi+eax*8],edi
  406999:	cmp    DWORD PTR [esi-0x4c],edx
  40699c:	mov    al,0x20
  40699e:	jns    0x40694f
  4069a0:	fs (bad) 
  4069a2:	shl    DWORD PTR [ecx+0x3f],cl
  4069a5:	sbb    ch,dl
  4069a7:	dec    esi
  4069a8:	sub    eax,0x1616ab73
  4069ad:	call   0xa184:0x9123eb4
  4069b4:	and    BYTE PTR [ebp+0x8d9804e],ah
  4069ba:	dec    edi
  4069bb:	xchg   esp,eax
  4069bc:	and    BYTE PTR [edx-0x23],bh
  4069bf:	mov    ah,0xfe
  4069c1:	aaa    
  4069c2:	jle    0x406973
  4069c4:	test   ebp,eax
  4069c6:	lods   eax,DWORD PTR ds:[esi]
  4069c7:	push   edi
  4069c8:	add    ecx,ebx
  4069ca:	mov    ebp,DWORD PTR [eax+ebx*8+0x77246024]
  4069d1:	scas   al,BYTE PTR es:[edi]
  4069d2:	mov    dh,0x22
  4069d4:	lods   al,BYTE PTR ds:[esi]
  4069d5:	inc    esi
  4069d6:	mov    esi,0x72080850
  4069db:	out    0xb5,al
  4069dd:	xchg   esi,eax
  4069de:	mov    ecx,0xb5bee2f5
  4069e3:	mov    edx,0x322fdf07
  4069e8:	ss jl  0x4069d8
  4069eb:	pop    es
  4069ec:	xlat   BYTE PTR ds:[ebx]
  4069ed:	dec    eax
  4069ee:	mov    ebx,0x4cddec8c
  4069f3:	xchg   ecx,eax
  4069f4:	add    eax,0xd369b710
  4069f9:	and    BYTE PTR [ecx],0x7
  4069fc:	cmp    edx,ecx
  4069fe:	xchg   ebp,eax
  4069ff:	jecxz  0x406a68
  406a01:	cli    
  406a02:	daa    
  406a03:	jmp    DWORD PTR [esi+edi*8+0x72]
  406a07:	add    dl,al
  406a09:	cmp    DWORD PTR [edx+0x55],edx
  406a0c:	and    eax,ecx
  406a0e:	lock in eax,dx
  406a10:	sub    eax,0x298dc243
  406a15:	or     ebp,ebx
  406a17:	(bad)  
  406a18:	imul   edx,DWORD PTR [ebp-0x145dd819],0xffffff81
  406a1f:	add    eax,0x6314a618
  406a24:	dec    edx
  406a25:	sbb    ebx,DWORD PTR [edi+ecx*8]
  406a28:	push   esi
  406a29:	xlat   BYTE PTR ds:[ebx]
  406a2a:	outs   dx,BYTE PTR ds:[esi]
  406a2b:	std    
  406a2c:	fwait
  406a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a2e:	xchg   ebp,eax
  406a2f:	int3   
  406a30:	xor    eax,0x87e82618
  406a35:	ror    esp,1
  406a37:	adc    eax,0x79c4807
  406a3c:	stos   DWORD PTR es:[edi],eax
  406a3d:	lods   eax,DWORD PTR ds:[esi]
  406a3e:	jmp    0x4069db
  406a40:	(bad)  
  406a42:	(bad)  
  406a43:	cmp    cl,bh
  406a45:	xchg   ebx,eax
  406a46:	or     al,0x8d
  406a48:	imul   edx,DWORD PTR [edx-0x78],0x7a4cfb0e
  406a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a50:	adc    BYTE PTR [edx+0x689aefac],0x6c
  406a57:	lods   eax,DWORD PTR ds:[esi]
  406a58:	aam    0xdd
  406a5a:	pop    eax
  406a5b:	sub    eax,0xd889b745
  406a60:	mov    ds:0x521dbd7d,eax
  406a65:	sbb    al,BYTE PTR [ebx]
  406a67:	push   ebx
  406a68:	inc    ebp
  406a69:	adc    DWORD PTR [ebp-0x49],esi
  406a6c:	lea    esp,[eax-0x76]
  406a6f:	push   ecx
  406a70:	aad    0xaf
  406a72:	call   0x3c5e:0x89670916
  406a79:	adc    eax,0x4286e7dc
  406a7e:	mov    ch,0xb5
  406a80:	xor    eax,0xfc1e2e26
  406a85:	mov    ebx,0xda045c0c
  406a8a:	lea    edi,[eax]
  406a8c:	pop    ebx
  406a8d:	mov    ebx,ecx
  406a8f:	retf   
  406a90:	fstp   DWORD PTR [edi]
  406a92:	push   ds
  406a93:	idiv   BYTE PTR [ecx-0x12047cb0]
  406a99:	xchg   bl,ah
  406a9b:	test   DWORD PTR [esi+eax*1],ecx
  406a9e:	jb     0x406a53
  406aa0:	jbe    0x406b0b
  406aa2:	pop    bx
  406aa4:	retf   
  406aa5:	jmp    0x406a42
  406aa7:	clc    
  406aa8:	shl    BYTE PTR [ebp-0x33],1
  406aab:	jge    0x406a93
  406aad:	mov    edi,0xb36701f5
  406ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ab3:	idiv   eax
  406ab5:	pop    ebp
  406ab6:	loop   0x406aec
  406ab8:	mov    ds:0x10969000,al
  406abd:	or     DWORD PTR gs:[eax],ebx
  406ac0:	sbb    BYTE PTR [edi-0xc],cl
  406ac3:	vpmacsdd xmm14,xmm5,XMMWORD PTR [eax+0x59d3bd3],xmm1
  406acd:	mov    WORD PTR [ebp-0x21],gs
  406ad0:	dec    eax
  406ad1:	add    bh,cl
  406ad3:	push   cs
  406ad4:	jb     0x406b47
  406ad6:	retf   0x760a
  406ad9:	mov    ebx,0x66a5d945
  406ade:	(bad)  
  406adf:	in     eax,dx
  406ae0:	ret    0x6c9c
  406ae3:	pop    ss
  406ae4:	sbb    al,0x1e
  406ae6:	fild   QWORD PTR [esi-0x21]
  406ae9:	push   edx
  406aea:	mov    edx,0x833fed6
  406aef:	mov    edx,0x53138dcc
  406af4:	aad    0x3b
  406af6:	aad    0xae
  406af8:	jg     0x406a80
  406afa:	and    BYTE PTR ds:0xf1b8a5a7,0x78
  406b01:	mov    edx,0xdaba4eee
  406b06:	push   ebx
  406b07:	add    eax,0xb40f878b
  406b0c:	jmp    0x406af1
  406b0e:	(bad)
  406b11:	xor    edx,DWORD PTR [ebx]
  406b13:	mov    eax,0xc354956a
  406b18:	jo     0x406b88
  406b1a:	cmc    
  406b1b:	ins    BYTE PTR es:[edi],dx
  406b1c:	aaa    
  406b1d:	xchg   edx,eax
  406b1e:	xchg   ecx,eax
  406b1f:	test   BYTE PTR [edx],al
  406b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b22:	mov    eax,0x38842971
  406b27:	mov    eax,ds:0x351804be
  406b2c:	(bad)  
  406b2d:	jmp    0x406ab0
  406b2f:	out    0xdf,eax
  406b31:	mov    BYTE PTR [ecx+0x8bfcf7a],bl
  406b37:	in     al,dx
  406b38:	inc    esi
  406b39:	popa   
  406b3a:	int    0x74
  406b3c:	xchg   ecx,eax
  406b3d:	(bad)  
  406b3e:	pop    ecx
  406b3f:	xor    dl,dh
  406b41:	cwde   
  406b42:	pop    esp
  406b43:	xchg   DWORD PTR [edx+0x13349d2a],eax
  406b49:	cli    
  406b4a:	jecxz  0x406bbe
  406b4c:	jns    0x406aea
  406b4e:	add    ah,BYTE PTR [ecx]
  406b50:	xor    al,0x60
  406b53:	popa   
  406b54:	call   0x8d10ecf3
  406b59:	in     eax,dx
  406b5a:	dec    ebx
  406b5b:	pop    ecx
  406b5c:	mov    ecx,0xdc8421b1
  406b61:	lods   eax,DWORD PTR ds:[esi]
  406b62:	fs clc 
  406b64:	int3   
  406b65:	xor    cl,BYTE PTR [ecx+ebx*2]
  406b68:	int3   
  406b69:	inc    ebp
  406b6a:	or     eax,0xacfcaad0
  406b6f:	pop    es
  406b70:	dec    edx
  406b71:	add    esp,eax
  406b73:	test   DWORD PTR [ebp+0x7c],ebp
  406b76:	and    al,0x41
  406b79:	mov    ss,WORD PTR [ebp-0x18efbbd4]
  406b7f:	lahf   
  406b80:	jle    0x406bcb
  406b82:	sahf   
  406b83:	mov    edi,0xaebbbfa7
  406b88:	mov    bl,BYTE PTR [edx]
  406b8a:	fs sub ch,bh
  406b8d:	xor    edx,DWORD PTR [edi]
  406b8f:	inc    ebp
  406b90:	push   eax
  406b91:	jo     0x406bcc
  406b93:	(bad)  
  406b94:	jl     0x406ba8
  406b96:	ins    BYTE PTR es:[edi],dx
  406b97:	pop    ebx
  406b98:	mov    ch,0xcd
  406b9a:	or     ah,BYTE PTR [edi]
  406b9c:	call   0xa872:0xafba35
  406ba3:	repnz daa 
  406ba5:	cmp    DWORD PTR [esp+esi*8-0x72e69ade],0x43
  406bad:	jb     0x406bc1
  406baf:	mov    al,ds:0x25abc239
  406bb4:	push   ds
  406bb5:	sub    esi,eax
  406bb7:	leave  
  406bb8:	cmp    BYTE PTR [eax],al
  406bba:	cmp    DWORD PTR [ebp+0x39],ecx
  406bbd:	test   DWORD PTR [edx],ecx
  406bbf:	and    DWORD PTR [edx-0x67],edi
  406bc2:	xchg   esi,eax
  406bc3:	pushf  
  406bc4:	pop    eax
  406bc5:	test   BYTE PTR [edi],dl
  406bc7:	mov    fs,WORD PTR [eax]
  406bc9:	ins    BYTE PTR es:[edi],dx
  406bca:	jecxz  0x406c48
  406bcc:	push   edi
  406bcd:	test   DWORD PTR [ebp-0x9005ab6],0x8629bc67
  406bd7:	fcmovu st,st(6)
  406bd9:	ss in  al,0x62
  406bdc:	xchg   BYTE PTR [edi+ebx*2+0x6f],ch
  406be0:	xor    edi,ebp
  406be2:	les    edx,FWORD PTR [esi]
  406be4:	xchg   ebp,eax
  406be5:	call   0x4bf1:0x4147c9b5
  406bec:	xchg   esp,eax
  406bed:	xchg   DWORD PTR [esi+0x3030bddb],ebx
  406bf3:	pop    esp
  406bf4:	int3   
  406bf5:	fist   WORD PTR [ebx+0x55]
  406bf8:	sub    eax,0x863bde08
  406bfd:	stos   DWORD PTR es:[edi],eax
  406bfe:	dec    ecx
  406bff:	cmp    edx,DWORD PTR [edi]
  406c01:	cwde   
  406c02:	rcl    BYTE PTR [edx],0xe9
  406c05:	enter  0xa3c9,0xb8
  406c09:	jl     0x406c2b
  406c0b:	ret    0xcee1
  406c0e:	test   DWORD PTR [ebx-0x6f],eax
  406c11:	test   edi,0xdccf16d0
  406c17:	mov    DWORD PTR [eax+0x33bf8950],edx
  406c1d:	and    al,0xef
  406c1f:	ror    BYTE PTR [esi+0x6a],1
  406c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c23:	mov    eax,0xbd255895
  406c28:	push   ss
  406c29:	dec    ebx
  406c2a:	pop    es
  406c2b:	jae    0x406be0
  406c2d:	dec    esi
  406c2e:	bound  ecx,QWORD PTR [edi]
  406c30:	clc    
  406c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c32:	aas    
  406c33:	mov    eax,0xf7246008
  406c38:	cmp    bh,BYTE PTR [ebx]
  406c3a:	(bad)  
  406c3b:	loopne 0x406c1d
  406c3d:	dec    ebx
  406c3e:	mov    ebp,0x63bedbb9
  406c43:	mov    bh,0x29
  406c45:	push   ds
  406c46:	adc    DWORD PTR [eax],edx
  406c48:	ret    0xf5a3
  406c4b:	gs cs daa 
  406c4e:	(bad)  
  406c4f:	sbb    esp,DWORD PTR [eax-0x13]
  406c52:	fs dec ebp
  406c54:	jns    0x406c46
  406c56:	in     al,dx
  406c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c58:	data16 stos BYTE PTR es:[edi],al
  406c5a:	jbe    0x406beb
  406c5c:	pop    eax
  406c5d:	mov    DWORD PTR [edx-0x5e],ebx
  406c60:	push   eax
  406c61:	stos   BYTE PTR es:[edi],al
  406c62:	sbb    ah,BYTE PTR [edx-0x43b91a19]
  406c68:	in     al,dx
  406c69:	xchg   esp,eax
  406c6a:	out    0x2f,eax
  406c6c:	dec    eax
  406c6d:	shr    BYTE PTR [eax-0x6f1486b7],1
  406c73:	(bad)  
  406c74:	aad    0xd1
  406c76:	pop    edi
  406c77:	cmp    BYTE PTR [edx],bh
  406c79:	push   ecx
  406c7a:	shl    DWORD PTR [ecx+eiz*2],1
  406c7d:	cs push ds
  406c7f:	pop    ebp
  406c80:	mov    eax,0x67ed6b9f
  406c85:	push   ecx
  406c86:	pop    esi
  406c87:	int    0x63
  406c89:	cmp    DWORD PTR [edi-0x34],esp
  406c8c:	mov    ch,0x16
  406c8e:	sbb    ecx,DWORD PTR [edi+esi*4]
  406c91:	pusha  
  406c92:	mov    BYTE PTR [ebp-0x6400d20c],cl
  406c98:	mov    eax,ds:0xa152a9bc
  406c9d:	cmp    bl,dh
  406c9f:	or     eax,DWORD PTR [ecx+0x39]
  406ca2:	cmp    ch,BYTE PTR [esi+0x2b]
  406ca5:	pushf  
  406ca6:	out    dx,eax
  406ca7:	aas    
  406ca8:	dec    eax
  406ca9:	int    0xb9
  406cab:	sbb    eax,0x58a25c21
  406cb0:	ret    
  406cb1:	inc    esp
  406cb2:	pop    es
  406cb3:	mov    ds,edx
  406cb5:	jae    0x406cf6
  406cb7:	imul   ebp,DWORD PTR [edx-0x5b],0x6e
  406cbb:	dec    eax
  406cbc:	mov    esp,0x2b412225
  406cc1:	xchg   edi,eax
  406cc2:	pop    ebp
  406cc3:	js     0x406c7c
  406cc5:	sub    BYTE PTR [edi+0x7f],al
  406cc8:	fimul  WORD PTR [ecx-0x1d7379bd]
  406cce:	stc    
  406ccf:	(bad)  
  406cd0:	arpl   cx,dx
  406cd2:	sbb    edx,edi
  406cd4:	pop    ebx
  406cd5:	cmp    bh,bl
  406cd7:	fisttp QWORD PTR [ebx+eiz*4+0x8]
  406cdb:	xchg   edi,eax
  406cdc:	fidiv  DWORD PTR [ecx]
  406cde:	scas   eax,DWORD PTR es:[edi]
  406cdf:	loop   0x406ccc
  406ce1:	ins    DWORD PTR es:[edi],dx
  406ce2:	xor    ch,bl
  406ce4:	stc    
  406ce5:	cwde   
  406ce6:	mov    dl,0x15
  406ce8:	sar    cl,cl
  406cea:	fmul   QWORD PTR [ebp-0x14]
  406ced:	js     0x406c8d
  406cef:	jle    0x406cc3
  406cf1:	and    ebp,esi
  406cf3:	mov    bh,0x13
  406cf5:	mov    DWORD PTR [edx-0x27],esi
  406cf8:	lds    ebx,FWORD PTR [eax+0x58]
  406cfb:	mov    bl,0x33
  406cfd:	mov    edi,0xb5b0261b
  406d02:	adc    al,0x57
  406d04:	push   ds
  406d05:	xchg   edi,eax
  406d06:	stos   BYTE PTR es:[edi],al
  406d07:	adc    DWORD PTR [ecx+0x2a],edi
  406d0a:	jl     0x406c96
  406d0c:	push   cs
  406d0d:	nop
  406d0e:	into   
  406d0f:	add    eax,0x7e05fc51
  406d14:	das    
  406d15:	jg     0x406d74
  406d17:	sbb    esp,DWORD PTR [eax]
  406d19:	pop    ebp
  406d1a:	xchg   ecx,eax
  406d1b:	xor    eax,0x54dbbe4d
  406d20:	lahf   
  406d21:	iret   
  406d22:	lods   al,BYTE PTR ds:[esi]
  406d23:	cmc    
  406d24:	aaa    
  406d25:	mov    edi,DWORD PTR [edx]
  406d27:	pop    ebp
  406d28:	add    ch,BYTE PTR [edi+0x37]
  406d2b:	pop    ebx
  406d2c:	inc    ecx
  406d2d:	xlat   BYTE PTR ds:[ebx]
  406d2e:	stos   BYTE PTR es:[edi],al
  406d2f:	in     eax,dx
  406d30:	fld    DWORD PTR [ebx-0x3574d03d]
  406d36:	test   eax,0x184aca7f
  406d3b:	push   eax
  406d3c:	mov    ah,0x84
  406d3e:	das    
  406d3f:	pop    esi
  406d40:	sbb    BYTE PTR [edi],0x3a
  406d43:	call   0x481a3ec6
  406d48:	stos   DWORD PTR es:[edi],eax
  406d49:	js     0x406cf4
  406d4b:	mov    dl,0xe4
  406d4d:	cmp    al,0xea
  406d4f:	pop    ebx
  406d50:	adc    dh,BYTE PTR ds:0xa9906178
  406d56:	test   eax,0x12d56701
  406d5b:	dec    esp
  406d5c:	(bad)  
  406d5d:	scas   al,BYTE PTR es:[edi]
  406d5e:	cmp    edx,ecx
  406d60:	and    DWORD PTR [edi+ebx*2+0x128807e8],edx
  406d67:	es jp  0x406d70
  406d6a:	inc    ecx
  406d6b:	popf   
  406d6c:	(bad)  
  406d6d:	shr    ebx,1
  406d6f:	inc    edx
  406d70:	stc    
  406d71:	ret    
  406d72:	mov    ?,WORD PTR [esi+edi*2+0x6ec6eccd]
  406d79:	(bad)  
  406d7a:	cmp    eax,0x3619089
  406d7f:	fucom  st(5)
  406d81:	dec    eax
  406d82:	dec    ebp
  406d83:	loope  0x406d1a
  406d85:	fsubr  st,st(5)
  406d87:	mov    eax,ds:0xb723e855
  406d8c:	cs std 
  406d8e:	pushf  
  406d8f:	ds mov ah,0x58
  406d92:	iret   
  406d93:	test   eax,0xca12c540
  406d98:	xor    ecx,DWORD PTR [ecx+0x7]
  406d9b:	js     0x406d5a
  406d9d:	and    al,0x42
  406d9f:	shl    BYTE PTR [esi],0xaa
  406da2:	mov    bl,0x15
  406da4:	jmp    0xfdf0a1e7
  406da9:	in     eax,dx
  406daa:	dec    edi
  406dab:	jmp    0x224c:0x1e296d9a
  406db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db3:	xlat   BYTE PTR ds:[ebx]
  406db4:	and    bl,al
  406db6:	xchg   ecx,eax
  406db7:	scas   al,BYTE PTR es:[edi]
  406db8:	push   ebp
  406db9:	and    DWORD PTR [ebx-0x5d00dc8c],edi
  406dbf:	aaa    
  406dc0:	dec    esp
  406dc1:	inc    edx
  406dc2:	les    esp,FWORD PTR [edi+ebx*2-0x1c]
  406dc6:	cmp    eax,0xe40d668d
  406dcb:	data16 scas al,BYTE PTR es:[edi]
  406dcd:	jp     0x406d77
  406dcf:	mov    eax,DWORD PTR [esi+0x46f2c655]
  406dd5:	sub    BYTE PTR [edx],bh
  406dd7:	rol    ah,0xa2
  406dda:	push   edi
  406ddb:	int    0x43
  406ddd:	sbb    BYTE PTR [edi+0x4132df68],dl
  406de3:	jle    0x406e47
  406de5:	or     al,0x86
  406de7:	jmp    DWORD PTR [eax]
  406de9:	loopne 0x406e29
  406deb:	dec    edi
  406dec:	xlat   BYTE PTR ds:[ebx]
  406ded:	add    bh,BYTE PTR [edi]
  406def:	loopne 0x406d93
  406df1:	inc    ebp
  406df2:	inc    ecx
  406df3:	mov    BYTE PTR [esi],ch
  406df5:	mov    ah,0xe
  406df7:	mov    ah,0xce
  406df9:	bound  esi,QWORD PTR [edi-0x60]
  406dfc:	fstp   DWORD PTR [ebp-0x34af5b12]
  406e02:	pop    ss
  406e03:	inc    BYTE PTR [eax+esi*2]
  406e06:	dec    ebp
  406e07:	inc    esi
  406e08:	add    bl,BYTE PTR [ecx-0x3814b9db]
  406e0e:	imul   ebp,DWORD PTR [ebx-0x70e11323],0x978a8ade
  406e18:	nop
  406e19:	repnz mov gs,WORD PTR [esi-0x3]
  406e1d:	jge    0x406dd8
  406e1f:	pop    ebx
  406e20:	push   es
  406e21:	das    
  406e22:	push   es
  406e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e24:	pop    ss
  406e25:	fisttp QWORD PTR [edi]
  406e27:	mul    DWORD PTR [ecx+ebp*2+0x7]
  406e2b:	enter  0x25ae,0x8e
  406e2f:	out    dx,eax
  406e30:	and    BYTE PTR [eax+0x77b4390d],0x77
  406e37:	push   cs
  406e38:	arpl   WORD PTR [ebx-0x738a5552],si
  406e3e:	stos   BYTE PTR es:[edi],al
  406e3f:	inc    esp
  406e40:	jg     0x406e55
  406e42:	mov    DWORD PTR [ebp-0x2b],eax
  406e45:	sbb    dh,dh
  406e47:	ror    BYTE PTR [edx],1
  406e49:	das    
  406e4a:	mov    bh,0x40
  406e4c:	js     0x406ea1
  406e4e:	sahf   
  406e4f:	pop    ecx
  406e50:	stos   DWORD PTR es:[edi],eax
  406e51:	ss jle 0x406eae
  406e54:	into   
  406e55:	in     al,dx
  406e56:	imul   ebp,DWORD PTR [ecx],0xe4181bde
  406e5c:	xchg   ebx,eax
  406e5d:	jecxz  0x406e1e
  406e5f:	mov    al,0xf7
  406e61:	pop    edi
  406e62:	mov    edx,0x8b61397
  406e67:	pop    esp
  406e68:	push   edi
  406e69:	pop    ss
  406e6a:	add    al,0x65
  406e6c:	loop   0x406e57
  406e6e:	mov    ah,0x5a
  406e70:	aaa    
  406e71:	or     eax,DWORD PTR [ebx+0x4b]
  406e74:	sub    al,0x4e
  406e76:	frstor [ebp-0x5ac60573]
  406e7c:	fnsave [edi+0x16fcf451]
  406e82:	mov    WORD PTR [ebx],?
  406e84:	jmp    0xfd985a7a
  406e89:	inc    ecx
  406e8a:	ss in  eax,0x3a
  406e8d:	jge    0x406ead
  406e8f:	dec    edx
  406e90:	test   BYTE PTR [edx-0x57be4ce1],dl
  406e96:	test   DWORD PTR [eax],ecx
  406e98:	sar    DWORD PTR [ecx],0x48
  406e9b:	jnp    0x406e87
  406e9d:	sbb    eax,0xc470fde5
  406ea2:	(bad)  
  406ea3:	out    dx,al
  406ea4:	lock cmp al,0x63
  406ea7:	push   0xea55e4f0
  406eac:	dec    eax
  406ead:	and    bh,BYTE PTR [eax+0x6f]
  406eb0:	xchg   ecx,eax
  406eb1:	xchg   edx,eax
  406eb2:	addr16 xchg edx,eax
  406eb4:	jmp    0x406ed7
  406eb6:	and    dl,bl
  406eb8:	hlt    
  406eb9:	lahf   
  406eba:	hlt    
  406ebb:	fidivr DWORD PTR [eax+0x234c7c4d]
  406ec1:	cmp    al,0xb9
  406ec3:	lock adc eax,0x4d45ac31
  406ec9:	mov    ah,0xd5
  406ecb:	sub    esp,ecx
  406ecd:	test   al,0x3d
  406ecf:	cmc    
  406ed0:	sub    bl,BYTE PTR [ebx-0x195699e4]
  406ed6:	cmp    eax,DWORD PTR [ebx]
  406ed8:	or     BYTE PTR [edx+0x12950e68],0x6b
  406edf:	push   esp
  406ee0:	mov    BYTE PTR ds:0x1d8de9a,ah
  406ee6:	xlat   BYTE PTR ds:[ebx]
  406ee7:	cwde   
  406ee8:	mov    ecx,DWORD PTR [eax]
  406eea:	(bad)  
  406eeb:	into   
  406eec:	ins    BYTE PTR es:[edi],dx
  406eed:	mov    esi,0x7031f7b9
  406ef2:	add    DWORD PTR [ebp-0x3e],ecx
  406ef5:	sbb    BYTE PTR [esi+0x7b],ch
  406ef8:	add    eax,0x613215e8
  406efd:	mov    BYTE PTR [eax+ebx*4-0x64313a73],cl
  406f04:	jnp    0x406ef1
  406f06:	sbb    dh,BYTE PTR [edx]
  406f08:	int    0x77
  406f0a:	xor    DWORD PTR [eax+esi*4],edi
  406f0d:	sub    eax,0x9e647aab
  406f12:	and    DWORD PTR [esp+eax*2],0xabc022d7
  406f19:	mov    ah,0x20
  406f1b:	js     0x406ec7
  406f1d:	mov    eax,ds:0x2e02dc29
  406f22:	xchg   esi,eax
  406f23:	call   0x892d1000
  406f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f29:	pop    esp
  406f2a:	add    ch,BYTE PTR [edx-0x21]
  406f2d:	push   esi
  406f2e:	(bad)  
  406f2f:	jb     0x406f5e
  406f31:	xor    bh,BYTE PTR [ebx+0x63d19714]
  406f37:	fidiv  DWORD PTR [eax+0x77]
  406f3a:	pop    ss
  406f3b:	lahf   
  406f3c:	ret    0x8645
  406f3f:	push   ebp
  406f40:	adc    ebp,DWORD PTR [ecx]
  406f42:	mov    esi,DWORD PTR [esi]
  406f44:	xor    edx,DWORD PTR [ecx-0x66f49e0]
  406f4a:	push   ss
  406f4b:	dec    esi
  406f4c:	rol    BYTE PTR [ebx+ebp*1],0x17
  406f50:	jo     0x406f4d
  406f52:	cmp    al,0xb8
  406f55:	adc    edi,DWORD PTR [ebx-0x4a]
  406f58:	pop    esi
  406f59:	arpl   WORD PTR [eax],cx
  406f5b:	mov    ?,eax
  406f5d:	sar    ebx,cl
  406f5f:	je     0x406f42
  406f61:	(bad)  
  406f62:	outs   dx,DWORD PTR ds:[esi]
  406f63:	jge    0x406fa7
  406f65:	and    eax,0x8b5858cf
  406f6a:	test   DWORD PTR [ecx-0x5d],esp
  406f6d:	into   
  406f6e:	mov    al,0x2
  406f70:	bound  esp,QWORD PTR [eax]
  406f72:	ror    ebx,1
  406f74:	je     0x406fdf
  406f76:	daa    
  406f77:	nop
  406f78:	scas   al,BYTE PTR es:[edi]
  406f79:	sbb    eax,0x2a1d6c4a
  406f7e:	sbb    edx,esi
  406f80:	xor    edx,ebx
  406f82:	test   eax,0x29bb2a7e
  406f87:	hlt    
  406f88:	jmp    0x406f49
  406f8a:	int3   
  406f8b:	jmp    0xd2f90c2d
  406f90:	cmp    ebx,0x178859b3
  406f96:	jmp    0x7403:0x835d54f4
  406f9d:	xchg   edi,eax
  406f9e:	inc    esi
  406f9f:	mov    eax,0xa6e516f5
  406fa4:	ret    
  406fa5:	and    eax,0x8ded1f7a
  406faa:	stos   BYTE PTR es:[di],al
  406fac:	xchg   edx,eax
  406fad:	xor    BYTE PTR [esp+ebx*1+0x6d76bb9d],dh
  406fb4:	leave  
  406fb5:	popf   
  406fb6:	call   0x2648eb92
  406fbb:	mov    eax,0x5eb4b28d
  406fc0:	(bad)  
  406fc1:	fdivr  st(1),st
  406fc3:	shr    ebx,cl
  406fc5:	inc    ebx
  406fc6:	pop    ebp
  406fc7:	xor    eax,0x9f28173b
  406fcc:	jae    0x406f98
  406fce:	hlt    
  406fcf:	fdiv   st(6),st
  406fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd2:	mov    al,0xd4
  406fd4:	(bad)  
  406fd6:	(bad)  
  406fd7:	cdq    
  406fd8:	xor    al,0x79
  406fda:	inc    ebp
  406fdb:	int3   
  406fdc:	fs jns 0x406f62
  406fdf:	(bad)  
  406fe0:	faddp  st(4),st
  406fe2:	xor    DWORD PTR [eax],esp
  406fe4:	scas   al,BYTE PTR es:[edi]
  406fe5:	mov    eax,ds:0x5519f523
  406fea:	jno    0x406f9e
  406fec:	jo     0x406faf
  406fee:	mov    ebp,?
  406ff0:	jmp    0x47d9:0xfac818cc
  406ff7:	mov    eax,ds:0x45356a07
  406ffc:	lods   al,BYTE PTR ds:[esi]
  406ffd:	in     eax,0x97
  406fff:	(bad)  
  407000:	xchg   esi,eax
  407001:	jle    0x407048
  407003:	inc    ebp
  407004:	mov    eax,DWORD PTR [esi+0x3f]
  407007:	in     al,dx
  407008:	cs jns 0x407072
  40700b:	popf   
  40700c:	(bad)  
  40700d:	pop    esp
  40700e:	pushf  
  40700f:	aam    0x35
  407011:	out    0x4,al
  407013:	hlt    
  407014:	xchg   edi,eax
  407015:	and    eax,0xbe664166
  40701a:	retf   0x2673
  40701d:	daa    
  40701e:	pusha  
  40701f:	popa   
  407020:	mov    ebp,0x879592f2
  407025:	rol    dl,1
  407027:	and    eax,0xa92ea81f
  40702c:	jl     0x407038
  40702e:	jo     0x40702e
  407030:	sbb    ch,BYTE PTR [ecx+0x53]
  407033:	jg     0x407042
  407035:	xor    al,0xac
  407037:	ja     0x407031
  407039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40703a:	mov    bh,0xea
  40703c:	push   0x66
  40703e:	ret    
  40703f:	dec    edi
  407040:	enter  0x6633,0x8f
  407044:	in     eax,0x7a
  407046:	mov    eax,0x39980780
  40704b:	push   ebp
  40704c:	dec    edx
  40704d:	or     esp,DWORD PTR [edi]
  40704f:	pop    esp
  407050:	push   ebp
  407051:	stos   BYTE PTR es:[edi],al
  407052:	loop   0x407076
  407054:	jns    0x406fe3
  407056:	or     bh,al
  407058:	ins    BYTE PTR es:[edi],dx
  407059:	xchg   edx,eax
  40705a:	(bad)  
  40705b:	sbb    bl,dh
  40705d:	push   edi
  40705e:	mov    ecx,0x4348137f
  407063:	adc    BYTE PTR [eax],cl
  407065:	call   0x496e3b71
  40706a:	xlat   BYTE PTR ds:[ebx]
  40706b:	jo     0x4070b9
  40706d:	ficomp WORD PTR [ebx]
  40706f:	pop    ds
  407070:	bswap  edx
  407072:	aam    0x7
  407074:	popf   
  407075:	inc    ebp
  407076:	ds mov dl,0x50
  407079:	mov    ds:0x593491c3,eax
  40707e:	es sti 
  407080:	jmp    0x9d43:0xbd4fdc66
  407087:	icebp  
  407088:	ss (bad) 
  40708b:	ret    
  40708c:	cmp    eax,0xcf8656da
  407091:	fwait
  407092:	or     cl,dl
  407094:	jp     0x407068
  407096:	fst    DWORD PTR [ebp-0x75]
  407099:	add    ebx,ecx
  40709b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40709c:	in     al,dx
  40709d:	test   BYTE PTR [ebx],ah
  40709f:	add    al,0xcf
  4070a1:	adc    BYTE PTR [ecx],dl
  4070a3:	cwde   
  4070a4:	lds    edi,FWORD PTR [ecx+edi*2+0x54]
  4070a8:	ds cwde 
  4070aa:	xor    cl,cl
  4070ac:	cwde   
  4070ad:	push   ds
  4070ae:	or     bl,bh
  4070b0:	popf   
  4070b1:	xchg   edi,eax
  4070b2:	mov    fs,WORD PTR [esi]
  4070b4:	out    dx,al
  4070b5:	mov    edx,0x45dbfaae
  4070ba:	ror    DWORD PTR [ecx+0x48],1
  4070bd:	test   eax,0xf24e8eb7
  4070c2:	les    bx,DWORD PTR [ecx]
  4070c5:	and    al,BYTE PTR [eax+0x3d]
  4070c8:	jo     0x4070ee
  4070ca:	mov    WORD PTR ds:0x18f058b5,?
  4070d0:	(bad)  
  4070d1:	call   0x248a6802
  4070d6:	or     DWORD PTR [edx-0x16d99b0e],0x285510f6
  4070e0:	hlt    
  4070e1:	inc    edi
  4070e2:	arpl   WORD PTR [ebx-0x4d],ax
  4070e5:	dec    ebp
  4070e6:	lahf   
  4070e7:	inc    eax
  4070e8:	popa   
  4070e9:	and    BYTE PTR [ebp-0x2b140ef2],dh
  4070ef:	mov    ch,0xf3
  4070f1:	into   
  4070f2:	dec    ecx
  4070f3:	js     0x407093
  4070f5:	retf   0xf44a
  4070f8:	(bad)  
  4070f9:	xor    esp,DWORD PTR [ebx]
  4070fb:	mov    cs,WORD PTR [ebx+0x324193b4]
  407101:	stos   DWORD PTR es:[edi],eax
  407102:	(bad)  es:[esi+eiz*4]
  407106:	mov    ecx,0x7fa2a454
  40710b:	cli    
  40710c:	cs jl  0x407151
  40710f:	mov    DWORD PTR ss:[esi+ecx*1],ebp
  407113:	xchg   edx,eax
  407114:	sbb    ecx,ecx
  407116:	ins    BYTE PTR es:[edi],dx
  407117:	jp     0x4070db
  407119:	mov    ch,0x4f
  40711b:	sub    cl,BYTE PTR [ecx]
  40711d:	cli    
  40711e:	adc    eax,0xb192d490
  407123:	iret   
  407124:	pusha  
  407125:	jbe    0xa4ac4ab9
  40712b:	scas   eax,DWORD PTR es:[edi]
  40712c:	add    ecx,DWORD PTR [esp+ecx*2]
  40712f:	aaa    
  407130:	xor    dl,0x27
  407133:	jge    0x40715c
  407135:	cmp    bh,0xa5
  407138:	out    0x4d,al
  40713a:	cmp    esp,DWORD PTR [edi+ebp*8+0x30117d0c]
  407141:	inc    esp
  407142:	std    
  407143:	jmp    0xa7c7176b
  407148:	retf   
  407149:	call   0xd552:0x36e5e569
  407150:	sub    al,0x13
  407152:	dec    edx
  407153:	out    0x7f,eax
  407155:	cmp    al,0x73
  407157:	jge    0x4071c6
  407159:	inc    edx
  40715a:	fsubp  st(1),st
  40715c:	pop    ebx
  40715d:	xchg   edi,eax
  40715e:	adc    ebp,DWORD PTR [ebp+0x22d032c6]
  407164:	lahf   
  407165:	jnp    0x407150
  407167:	adc    DWORD PTR ds:0xc713c40b,ebp
  40716d:	cmc    
  40716e:	jge    0x4071ca
  407170:	sbb    DWORD PTR [eax+0xf],esp
  407173:	and    al,0x56
  407175:	jmp    0xa185de4a
  40717a:	nop
  40717b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40717c:	dec    esi
  40717d:	adc    BYTE PTR [eax],al
  40717f:	cwde   
  407180:	dec    eax
  407181:	por    mm7,mm2
  407184:	repz int 0xd
  407187:	mov    cl,0x29
  407189:	imul   ebx,DWORD PTR [eax],0xffffff8f
  40718c:	fidivr DWORD PTR [ebx+0x14]
  40718f:	xchg   edi,eax
  407190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407191:	mov    ah,0x40
  407193:	(bad)  
  407194:	push   ds
  407195:	std    
  407196:	outs   dx,BYTE PTR ds:[esi]
  407197:	add    al,0xef
  407199:	retf   0x7243
  40719c:	xchg   esi,eax
  40719d:	imul   ebp,DWORD PTR [eax],0x56469cbf
  4071a3:	or     eax,0xcb80042f
  4071a8:	xchg   edi,eax
  4071a9:	mov    ebp,ds
  4071ab:	mov    dh,0xb8
  4071ad:	jns    0x407179
  4071af:	or     eax,0xae0edd33
  4071b4:	cmp    esp,DWORD PTR [ecx+ecx*4+0x783c1b02]
  4071bb:	or     ah,BYTE PTR [esi-0x193ed2ee]
  4071c1:	leave  
  4071c2:	sbb    ebp,DWORD PTR [esi+0x64]
  4071c5:	shr    DWORD PTR [ecx+0x3378fda5],1
  4071cb:	xor    DWORD PTR [ecx+0x23e4e306],esp
  4071d1:	lea    edi,[eax+eiz*8-0x1a6cf5b7]
  4071d8:	jg     0x40721b
  4071da:	repnz (bad) 
  4071dc:	out    dx,eax
  4071dd:	sub    eax,0xe599063
  4071e2:	jmp    0x49410848
  4071e7:	sub    esi,eax
  4071e9:	pusha  
  4071ea:	sahf   
  4071eb:	add    eax,0x5374522a
  4071f0:	enter  0xbda7,0xc3
  4071f4:	pop    ecx
  4071f5:	mov    BYTE PTR [ecx],cl
  4071f7:	push   ecx
  4071f8:	and    DWORD PTR [eax-0x39],ecx
  4071fb:	and    al,bh
  4071fd:	push   esi
  4071fe:	pop    ss
  4071ff:	in     eax,dx
  407200:	and    DWORD PTR [ecx+0xffa683b],ebx
  407206:	hlt    
  407207:	sub    eax,0x9b044ff3
  40720c:	mov    ebp,0x848e2a20
  407211:	fadd   st,st(3)
  407213:	(bad)  
  407214:	push   ecx
  407215:	lea    ebp,[eax-0x286cb061]
  40721b:	call   0x903166df
  407220:	aam    0x6f
  407222:	xchg   esp,eax
  407223:	in     eax,0x9e
  407225:	test   ch,bl
  407227:	in     al,0xf2
  407229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40722a:	int3   
  40722b:	je     0x4071b1
  40722d:	push   esi
  40722e:	cmp    DWORD PTR [ecx],edi
  407230:	punpckhbw mm5,mm1
  407233:	imul   ecx,DWORD PTR [esi],0x21
  407236:	into   
  407237:	or     bh,BYTE PTR [edx]
  407239:	add    DWORD PTR [edi+0x5d],esi
  40723c:	xchg   ebx,eax
  40723d:	ss aam 0x4f
  407240:	mov    dl,0xd6
  407242:	mov    esp,0xf86075e3
  407247:	repnz out 0xb5,al
  40724a:	scas   al,BYTE PTR es:[edi]
  40724b:	fabs   
  40724d:	push   ecx
  40724e:	loop   0x407279
  407250:	rcr    DWORD PTR [esi+0x6990f327],1
  407256:	xor    esi,edx
  407258:	in     al,0x75
  40725a:	call   0x168e:0xbd6844f9
  407261:	rol    DWORD PTR [esi-0x76],0x9f
  407265:	jb     0x407239
  407267:	cli    
  407268:	ret    0x76b2
  40726b:	mov    BYTE PTR [ecx-0x4b],dh
  40726e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407270:	arpl   WORD PTR [eax+0x45],si
  407273:	mov    edx,0x39cab1ae
  407278:	fndisi(8087 only) 
  40727a:	add    eax,0x6c4c47ff
  40727f:	xor    ch,BYTE PTR [ebp+0x4a]
  407282:	push   ebx
  407283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407284:	xchg   ebp,eax
  407285:	add    al,BYTE PTR [esi-0x3f0d8d33]
  40728b:	outs   dx,BYTE PTR ds:[esi]
  40728c:	or     al,0x5b
  40728e:	dec    ebx
  40728f:	inc    edx
  407290:	inc    ebp
  407291:	or     cl,BYTE PTR [ebx]
  407293:	es fwait
  407295:	jge    0x4072c6
  407297:	push   ds
  407298:	pop    edx
  407299:	fistp  QWORD PTR [ecx+0x3e08725]
  40729f:	fldcw  WORD PTR [ebx+0x5a]
  4072a2:	mov    BYTE PTR [eax-0x7],cl
  4072a5:	and    bl,0x87
  4072a8:	ss jae 0x4072ea
  4072ab:	jecxz  0x4072be
  4072ad:	(bad)  
  4072ae:	aaa    
  4072af:	mov    DWORD PTR [ecx-0x47d5cee3],esi
  4072b5:	jle    0x4072d1
  4072b7:	nop
  4072b8:	mov    esp,0x2c43d2b1
  4072bd:	pop    esi
  4072be:	push   esp
  4072bf:	cdq    
  4072c0:	mov    ds:0xfc8e70c5,al
  4072c5:	jmp    0x65b4:0xf4be1b7e
  4072cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072cd:	and    eax,DWORD PTR [esi]
  4072cf:	mov    ds:0x46f71d10,al
  4072d4:	popf   
  4072d5:	pop    edx
  4072d6:	aad    0x1c
  4072d8:	jnp    0x40733a
  4072da:	shr    DWORD PTR [esi-0x76],cl
  4072dd:	xor    al,0xb
  4072df:	int    0xc6
  4072e1:	rcl    DWORD PTR ds:0x493fa9c3,0x4a
  4072e8:	xchg   ebx,eax
  4072e9:	inc    esp
  4072ea:	cmc    
  4072eb:	dec    ebx
  4072ec:	nop
  4072ed:	fwait
  4072ee:	ret    0xf61a
  4072f1:	mov    cl,0xdd
  4072f3:	fcmove st,st(7)
  4072f5:	(bad)  
  4072f6:	iret   
  4072f7:	shl    BYTE PTR [ebx+0x2e851be4],1
  4072fd:	hlt    
  4072fe:	mul    BYTE PTR [ecx]
  407300:	sbb    esi,DWORD PTR [ebx-0x38]
  407303:	adc    al,ch
  407305:	js     0x4072dd
  407307:	push   ebp
  407308:	and    DWORD PTR [ecx+0x59],ecx
  40730b:	not    DWORD PTR [eax]
  40730d:	iret   
  40730e:	fst    st(4)
  407310:	in     eax,dx
  407311:	dec    ecx
  407312:	and    eax,0x6cd61d6f
  407317:	stos   DWORD PTR es:[edi],eax
  407318:	mov    dh,0xd4
  40731a:	lods   al,BYTE PTR ds:[esi]
  40731b:	jmp    0x7b7d:0xa17a6d03
  407322:	ret    0xac7a
  407325:	pop    edx
  407326:	add    ah,BYTE PTR [ebp+0x606242f8]
  40732c:	lea    esp,[esi+0x25e4f144]
  407332:	pop    esp
  407333:	adc    al,0x56
  407335:	nop
  407336:	aaa    
  407337:	test   DWORD PTR [edx+0x16],edi
  40733a:	jnp    0x4072c4
  40733c:	push   ebp
  40733d:	xchg   DWORD PTR [edi+edi*1-0x4c],edi
  407341:	cdq    
  407342:	mov    BYTE PTR [edi+0x64cf2a85],ch
  407348:	out    0x88,al
  40734a:	mov    BYTE PTR [edi+edi*2],ah
  40734d:	sbb    al,BYTE PTR ds:0x86d8b34e
  407353:	mov    ds:0x331f20ef,al
  407358:	sub    al,0x9d
  40735a:	dec    ebx
  40735b:	fmul   DWORD PTR [eax]
  40735d:	and    edi,DWORD PTR [ecx+0x4f]
  407360:	inc    eax
  407361:	aas    
  407362:	sub    DWORD PTR [ebx-0x2f86c356],0xfffffff2
  407369:	sbb    eax,0x29965b2e
  40736e:	mov    ah,0x5f
  407370:	xchg   ebp,eax
  407371:	call   0x3b0ae8d
  407376:	adc    bh,al
  407378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407379:	and    dl,BYTE PTR [edx+ecx*4]
  40737c:	xchg   esp,eax
  40737d:	adc    bl,BYTE PTR [eax]
  40737f:	aas    
  407380:	add    al,0xf6
  407382:	das    
  407383:	fwait
  407384:	jecxz  0x407362
  407386:	jb     0x407341
  407388:	int3   
  407389:	sbb    eax,0xd8d69d6e
  40738e:	sbb    ah,BYTE PTR [edx]
  407390:	ja     0x4073dc
  407392:	fst    DWORD PTR [edi+eiz*8]
  407395:	pusha  
  407396:	fistp  DWORD PTR [ebx+0x4eaac8d5]
  40739c:	push   ebx
  40739d:	pop    es
  40739e:	push   0xfffffff1
  4073a0:	test   al,0xe3
  4073a2:	push   esi
  4073a3:	enter  0xbd0c,0x3a
  4073a7:	sub    eax,0x9e77f6e3
  4073ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ad:	mov    ds:0xbcb4318a,eax
  4073b2:	jo     0x4073c9
  4073b4:	push   esi
  4073b5:	xchg   esi,eax
  4073b6:	pop    ds
  4073b7:	pop    ds
  4073b8:	ss mov ah,0xfe
  4073bb:	daa    
  4073bc:	dec    ebp
  4073bd:	(bad)  
  4073be:	lahf   
  4073bf:	aam    0x4c
  4073c1:	push   esi
  4073c2:	push   esi
  4073c3:	pop    ebp
  4073c4:	ficom  WORD PTR [ebp-0x6d6993c3]
  4073ca:	mov    dh,0x70
  4073cc:	aaa    
  4073cd:	je     0x40743a
  4073cf:	or     al,0x74
  4073d1:	das    
  4073d2:	sub    DWORD PTR [eax],esi
  4073d4:	pop    eax
  4073d5:	pusha  
  4073d6:	mov    WORD PTR [ecx+ecx*1],ss
  4073d9:	lods   eax,DWORD PTR ds:[esi]
  4073da:	out    0xd8,al
  4073dc:	mov    WORD PTR [edx+0x5f],cs
  4073df:	pop    esp
  4073e0:	sbb    cl,0x7
  4073e3:	ror    DWORD PTR [ebx],1
  4073e5:	adc    DWORD PTR [eax+0x5d9ea6a4],0x4ac06ab1
  4073ef:	xlat   BYTE PTR ds:[ebx]
  4073f0:	xchg   BYTE PTR [eax+0x3b],bl
  4073f3:	mov    ebp,0xf5a3496c
  4073f8:	loop   0x4073bd
  4073fa:	in     eax,dx
  4073fb:	dec    esi
  4073fc:	ja     0x40741d
  4073fe:	mov    dh,0x6d
  407400:	xor    DWORD PTR [edx-0x72],0x3a
  407404:	repz push esp
  407406:	cmp    eax,0x553410f1
  40740b:	ret    0xd0f8
  40740e:	sar    BYTE PTR [esp+eax*8],cl
  407411:	pop    ds
  407412:	cdq    
  407413:	pop    edx
  407414:	dec    ecx
  407415:	sub    al,0x27
  407417:	sbb    DWORD PTR [edi+0x1c],eax
  40741a:	retf   0xea15
  40741d:	add    BYTE PTR [edx-0x3c2c8afb],cl
  407423:	add    al,0xed
  407425:	ret    
  407426:	mov    ebx,0x53341c87
  40742b:	xchg   esp,eax
  40742c:	sub    al,0x3c
  40742e:	pop    ebp
  40742f:	enter  0xc9bc,0x6
  407433:	and    ebx,DWORD PTR [ebx-0x4c]
  407436:	jne    0x4073e5
  407438:	pop    eax
  407439:	and    esi,DWORD PTR ds:0xbf5e23e7
  40743f:	imul   ebx,DWORD PTR [ecx],0xffffff9a
  407442:	les    esi,FWORD PTR [esp+ebx*2+0x12]
  407446:	mov    eax,0x1775afa3
  40744b:	or     dh,BYTE PTR [ecx-0x7be7c1b6]
  407451:	cmp    al,0x80
  407453:	cdq    
  407454:	add    BYTE PTR [ebp+0x7a2220e6],al
  40745a:	fimul  DWORD PTR [ebx]
  40745c:	(bad)  
  40745e:	sub    eax,0x82815a2a
  407463:	ror    ebp,cl
  407465:	das    
  407466:	cwde   
  407467:	pop    ss
  407468:	stc    
  407469:	push   edx
  40746a:	jle    0x407420
  40746c:	cmp    bh,BYTE PTR [ebp+0x4148602b]
  407472:	fmulp  st(3),st
  407474:	push   0x20c8f0bb
  407479:	aaa    
  40747a:	in     al,dx
  40747b:	sub    edi,esi
  40747d:	sbb    al,0xb7
  40747f:	call   0x3aab:0xf3cb6bc7
  407486:	ds mov al,0xe
  407489:	out    0xde,eax
  40748b:	xor    BYTE PTR [ecx],dh
  40748d:	rol    edx,0xdf
  407490:	mul    DWORD PTR [ebp+0x219997f9]
  407496:	dec    eax
  407497:	jne    0x407476
  407499:	iret   
  40749a:	and    DWORD PTR [eax+ebp*8],0x2c
  40749e:	cmp    ebp,ebx
  4074a0:	mov    ds:0x74ea7907,al
  4074a5:	nop
  4074a6:	push   0x49
  4074a8:	cli    
  4074a9:	popf   
  4074aa:	push   esp
  4074ab:	cli    
  4074ac:	push   es
  4074ad:	pop    ecx
  4074ae:	or     BYTE PTR [ebp+0x4e],dl
  4074b1:	lds    ebp,FWORD PTR [edi+0x452e1d5e]
  4074b7:	push   edx
  4074b8:	mov    esi,DWORD PTR [ecx+0x46b4d570]
  4074be:	mov    dl,0x93
  4074c0:	jp     0x407464
  4074c2:	(bad)  [ecx]
  4074c4:	xchg   esp,eax
  4074c5:	pop    eax
  4074c6:	outs   dx,DWORD PTR ds:[esi]
  4074c7:	int3   
  4074c8:	xchg   edi,eax
  4074c9:	jmp    0xd0f1:0x443aae01
  4074d0:	inc    esp
  4074d1:	push   0xffffff91
  4074d3:	shl    DWORD PTR [ecx-0x2c],cl
  4074d6:	mov    DWORD PTR [eax+edx*4+0x6ed7426e],edi
  4074dd:	mov    dh,0xd0
  4074df:	repnz aad 0xd8
  4074e2:	or     bh,BYTE PTR [ecx+0x54]
  4074e5:	xchg   ebx,eax
  4074e6:	add    edx,DWORD PTR ds:0x432a21cb
  4074ec:	and    eax,0x2df3622a
  4074f1:	or     DWORD PTR [ecx+0x2d2d3407],0xe05d7242
  4074fb:	or     DWORD PTR [ecx-0x4],0xffffff8e
  4074ff:	sahf   
  407500:	std    
  407501:	(bad)  [edi]
  407503:	cmp    DWORD PTR [ebx+0x5c],eax
  407506:	ins    DWORD PTR es:[edi],dx
  407507:	test   BYTE PTR [ecx-0x5b],bh
  40750a:	scas   eax,DWORD PTR es:[edi]
  40750b:	rcr    BYTE PTR [edx+0x2f],1
  40750e:	and    BYTE PTR [esi+0x57],bh
  407511:	out    dx,eax
  407512:	mov    ch,0x7b
  407514:	test   al,0x64
  407516:	js     0x40755d
  407518:	jo     0x4074c1
  40751a:	mov    edi,0x83cf7040
  40751f:	cdq    
  407520:	std    
  407521:	jmp    0x35772be7
  407526:	rol    DWORD PTR [ebp+0x68],cl
  407529:	bound  eax,QWORD PTR [ebp-0x51]
  40752c:	cmp    esp,DWORD PTR [esi+ebp*2]
  40752f:	jno    0x407550
  407531:	inc    eax
  407532:	std    
  407533:	int    0x1c
  407535:	sbb    BYTE PTR [edx+0x3dc7c1fe],ch
  40753b:	mov    esp,DWORD PTR [edi-0x3837e7ab]
  407541:	aaa    
  407542:	mov    bh,0x35
  407544:	out    0x30,eax
  407546:	test   al,0x3
  407548:	inc    ebp
  407549:	ja     0x4074ee
  40754b:	push   edx
  40754c:	inc    ecx
  40754d:	neg    edx
  40754f:	sbb    al,0x43
  407551:	mov    ebp,0x7a2bc496
  407556:	scas   eax,DWORD PTR es:[edi]
  407557:	sbb    bh,BYTE PTR [edx+0x4d]
  40755a:	out    0x14,eax
  40755c:	adc    eax,0x16c22bf7
  407561:	pop    esp
  407562:	rol    DWORD PTR [ecx+esi*8],0xcd
  407566:	sbb    DWORD PTR [edi+0x2a],eax
  407569:	mov    ah,0xb8
  40756b:	gs ins BYTE PTR es:[edi],dx
  40756d:	xchg   edx,eax
  40756e:	sub    al,0xdf
  407570:	or     bh,BYTE PTR [edi+0x614b531]
  407576:	(bad)  
  407577:	stos   BYTE PTR es:[edi],al
  407578:	test   al,0x10
  40757a:	rcl    BYTE PTR [edx],0xc5
  40757d:	push   ds
  40757e:	xor    ebx,DWORD PTR [ebp+edi*8-0x1a]
  407582:	stos   DWORD PTR es:[edi],eax
  407583:	push   esp
  407584:	sahf   
  407585:	push   ebp
  407586:	add    al,0x71
  407588:	loop   0x407565
  40758a:	xor    BYTE PTR [edi-0x71],ch
  40758d:	pop    ss
  40758e:	sub    eax,0x18b6a729
  407593:	sbb    dh,dh
  407595:	dec    edi
  407596:	add    DWORD PTR [esi-0x6d],edx
  407599:	cmp    edi,DWORD PTR [eax-0xc]
  40759c:	adc    DWORD PTR [edi],0x9dcee636
  4075a2:	mov    ah,0x2
  4075a4:	jmp    0x9405:0x894674b7
  4075ab:	ja     0x4075e1
  4075ad:	loop   0x407617
  4075af:	pop    ecx
  4075b0:	rcr    DWORD PTR [edi],0x95
  4075b3:	loop   0x407554
  4075b5:	nop
  4075b6:	add    DWORD PTR [ebx-0x40],ebp
  4075b9:	(bad)  
  4075ba:	(bad)  [ecx]
  4075bc:	adc    eax,0x8d9f9030
  4075c1:	jne    0x407577
  4075c3:	xchg   esi,eax
  4075c4:	cs jae 0x407566
  4075c7:	test   eax,0x5ebb3988
  4075cc:	push   ebp
  4075cd:	push   eax
  4075ce:	mov    edi,0xa59c296
  4075d3:	sub    bh,0x9
  4075d6:	cmp    al,0x27
  4075d8:	into   
  4075d9:	pop    edi
  4075da:	dec    BYTE PTR [edx+0x172f5ddd]
  4075e0:	cmp    DWORD PTR [esi+edx*1+0x263fa3a9],eax
  4075e7:	adc    esi,DWORD PTR [eax-0x6a]
  4075ea:	data16 cmc 
  4075ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ed:	loop   0x407627
  4075ef:	out    dx,al
  4075f0:	pop    ebp
  4075f1:	and    dh,ch
  4075f3:	into   
  4075f4:	jp     0x4075ce
  4075f6:	mov    bh,0xe0
  4075f8:	js     0x407678
  4075fa:	inc    esp
  4075fb:	add    ebp,DWORD PTR [ebx-0x479f922f]
  407601:	ds ja  0x407649
  407604:	mov    edx,0x230efc21
  407609:	and    esp,DWORD PTR [edi+0x50b0571a]
  40760f:	or     al,0x3d
  407611:	xchg   esi,eax
  407612:	pop    ebp
  407613:	mov    cl,dl
  407615:	xchg   DWORD PTR [ebx+0x41cd7a1e],ebx
  40761b:	test   al,0xe3
  40761d:	push   esp
  40761e:	and    ch,BYTE PTR [edx-0x5d]
  407621:	mov    dl,al
  407623:	adc    DWORD PTR [ecx],0x68
  407626:	(bad)  
  407627:	push   edx
  407628:	mov    cl,0x20
  40762a:	mov    esi,0x37dc2482
  40762f:	mov    ds:0xdf4975bc,al
  407634:	fidivr DWORD PTR [esi+0x2]
  407637:	or     BYTE PTR [ebx+esi*2-0x3bc36e0e],0xaf
  40763f:	xchg   edx,eax
  407640:	push   DWORD PTR [ebp-0x5687046b]
  407646:	xor    al,0x12
  407648:	xor    al,0xb
  40764a:	adc    BYTE PTR [edx],dl
  40764c:	and    eax,0xde1b3a3d
  407651:	mov    edx,0xedc0b19b
  407656:	outs   dx,BYTE PTR ds:[esi]
  407657:	fs addr16 std 
  40765a:	jnp    0x40761b
  40765c:	popf   
  40765d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40765e:	xchg   dl,ah
  407660:	cdq    
  407661:	dec    edx
  407662:	rcl    DWORD PTR [eax+0x6c0b32fa],1
  407668:	fisubr WORD PTR [ebx-0xec3f348]
  40766e:	cmp    esi,ecx
  407670:	pushw  0xe728
  407674:	ret    
  407675:	and    DWORD PTR [eax+0x3d75bb6c],esp
  40767b:	pop    ebp
  40767c:	jg     0x4076c8
  40767e:	and    bh,al
  407680:	and    eax,0x2620cc73
  407685:	ja     0x40760e
  407687:	or     BYTE PTR [edi],cl
  407689:	and    BYTE PTR [ebp-0x77],0xd2
  40768d:	outs   dx,BYTE PTR ds:[esi]
  40768e:	fist   DWORD PTR [ecx-0x68]
  407691:	(bad)  
  407692:	out    dx,al
  407693:	sar    ch,0x8d
  407696:	adc    eax,0xcf701e36
  40769b:	aas    
  40769c:	sahf   
  40769d:	cli    
  40769e:	adc    DWORD PTR [ebx-0x1e],0xad7d52b3
  4076a5:	cmp    ah,BYTE PTR [edx]
  4076a7:	xchg   edi,eax
  4076a8:	int    0xd6
  4076aa:	sbb    edx,DWORD PTR [edx+edx*2+0x32dca9f0]
  4076b1:	popa   
  4076b2:	xchg   esp,eax
  4076b3:	leave  
  4076b4:	daa    
  4076b5:	xchg   esi,eax
  4076b6:	iret   
  4076b7:	in     eax,0x9b
  4076b9:	jno    0x40765d
  4076bb:	mov    al,ds:0xa681abce
  4076c0:	dec    ecx
  4076c1:	dec    ebp
  4076c2:	lea    edx,[edi-0x36]
  4076c5:	gs push edi
  4076c7:	fld    TBYTE PTR [edi]
  4076c9:	mov    ebp,0x7d256da4
  4076ce:	int    0xb9
  4076d0:	out    dx,al
  4076d1:	mov    esp,0xb5b04777
  4076d6:	lock lods eax,DWORD PTR ds:[esi]
  4076d8:	imul   esp,DWORD PTR [esi-0x7b8c8124],0x4ff9610c
  4076e2:	lahf   
  4076e3:	sub    eax,0x673c1c69
  4076e8:	dec    edi
  4076e9:	cmp    esp,DWORD PTR [edx+0x27]
  4076ec:	arpl   bp,bx
  4076ee:	jno    0x40774d
  4076f0:	stos   BYTE PTR es:[edi],al
  4076f1:	mov    DWORD PTR [edx],ebx
  4076f3:	dec    ecx
  4076f4:	shl    DWORD PTR [eax],cl
  4076f6:	inc    ecx
  4076f7:	out    dx,al
  4076f8:	xor    bl,BYTE PTR [eax-0x66906bba]
  4076fe:	rol    DWORD PTR [esi-0x71a76ff4],1
  407704:	jp     0x40776e
  407706:	loop   0x4076a5
  407708:	out    dx,eax
  407709:	fdivr  QWORD PTR [eax]
  40770b:	jl     0x407789
  40770d:	cwde   
  40770e:	leave  
  40770f:	out    dx,al
  407710:	imul   edi,DWORD PTR [edx-0x4bd69218],0x879f4654
  40771a:	test   eax,0x2f08ee63
  40771f:	in     al,0x4e
  407721:	arpl   dx,bp
  407723:	pop    es
  407724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407725:	aas    
  407726:	push   ebp
  407727:	jle    0x407748
  407729:	fstp   QWORD PTR [eax+0x33]
  40772c:	outs   dx,DWORD PTR ds:[esi]
  40772d:	fistp  QWORD PTR [eax]
  40772f:	lds    ecx,FWORD PTR [eax-0x4a]
  407732:	in     eax,0x76
  407734:	push   eax
  407735:	mov    esi,0xf31a6888
  40773a:	xchg   ecx,eax
  40773b:	nop
  40773c:	pop    ds
  40773d:	test   al,0xe2
  40773f:	shr    BYTE PTR [eax],1
  407741:	in     al,dx
  407742:	pop    edx
  407743:	out    0x3d,eax
  407745:	ds cmc 
  407747:	xchg   DWORD PTR [ecx+0xc4663a2],ecx
  40774d:	dec    ebx
  40774e:	rol    DWORD PTR [ebx+ebp*4+0x2fbbb00c],cl
  407755:	push   cs
  407756:	cli    
  407757:	and    cl,0xeb
  40775a:	imul   edi,esp,0x51
  40775d:	data16 inc dh
  407760:	fdiv   st,st(2)
  407762:	cmp    al,0x74
  407764:	jle    0x40778b
  407766:	div    DWORD PTR [ebp+0xb6637bb]
  40776c:	aas    
  40776d:	jnp    0x407742
  40776f:	stos   DWORD PTR es:[edi],eax
  407770:	push   ebx
  407771:	jmp    0xd512:0x8114f862
  407778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407779:	popf   
  40777a:	and    eax,0x99a22e81
  40777f:	jle    0x4077ba
  407781:	add    edx,DWORD PTR [esi]
  407783:	inc    ebx
  407784:	repnz ins BYTE PTR es:[edi],dx
  407786:	cdq    
  407787:	mov    dh,0xf4
  407789:	jmp    0x40773a
  40778b:	leave  
  40778c:	pop    edx
  40778d:	mov    edx,DWORD PTR [ecx-0x5]
  407790:	iret   
  407791:	cmp    bl,al
  407793:	sar    DWORD PTR [esi+0x4b],0x58
  407797:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  407799:	pop    ebp
  40779a:	(bad)  
  40779b:	lahf   
  40779c:	push   ebp
  40779d:	pusha  
  40779e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40779f:	mov    WORD PTR [eax],ds
  4077a1:	rcr    DWORD PTR [edx+0x1e6f9347],1
  4077a7:	sbb    ebp,ebp
  4077a9:	fsub   st(7),st
  4077ab:	mov    BYTE PTR [esi+0x523e6c51],bl
  4077b1:	daa    
  4077b2:	fcmovnb st,st(7)
  4077b4:	push   esp
  4077b5:	sub    BYTE PTR [eax],0xde
  4077b8:	out    dx,eax
  4077b9:	push   esi
  4077ba:	test   DWORD PTR [edi-0x4c],ebx
  4077bd:	fadd   DWORD PTR [esi+0x14]
  4077c0:	outs   dx,DWORD PTR ds:[esi]
  4077c1:	in     al,0x82
  4077c3:	(bad)  
  4077c5:	sub    cl,BYTE PTR [ebx]
  4077c7:	pop    es
  4077c8:	fimul  DWORD PTR [ebx-0x46]
  4077cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077cc:	add    DWORD PTR [eax+0x4],0xc79698c3
  4077d3:	outs   dx,DWORD PTR ds:[esi]
  4077d4:	jbe    0x407798
  4077d6:	add    DWORD PTR ds:[esi],edi
  4077d9:	cmp    dh,BYTE PTR [ecx+0x6f6e681f]
  4077df:	iret   
  4077e0:	loope  0x40783d
  4077e2:	dec    ebp
  4077e3:	fs dec ebx
  4077e5:	and    al,0x5e
  4077e7:	mov    cl,0x79
  4077e9:	rol    BYTE PTR [esi-0x7f672d82],1
  4077ef:	dec    edx
  4077f0:	loopne 0x407792
  4077f2:	nop
  4077f3:	adc    eax,0x4e359ddd
  4077f8:	inc    eax
  4077f9:	std    
  4077fa:	stc    
  4077fb:	mov    eax,0x9c5639f1
  407800:	and    edx,edi
  407802:	push   cs
  407803:	jmp    0x11db:0xe5cf71ad
  40780a:	addr16 nop
  40780c:	mov    eax,0xe64a0beb
  407811:	cld    
  407812:	mov    es,ebx
  407814:	inc    edi
  407815:	jb     0x407843
  407817:	jne    0x40782c
  407819:	jbe    0x407819
  40781b:	sahf   
  40781c:	adc    bh,BYTE PTR [eax]
  40781e:	add    al,0x7c
  407820:	dec    edx
  407821:	and    bh,BYTE PTR [edi-0x63e69636]
  407827:	pop    es
  407828:	lock iret 
  40782a:	(bad)  
  40782b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40782c:	pop    ebx
  40782d:	xor    eax,0x247ae3ee
  407832:	pusha  
  407833:	aas    
  407834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407835:	or     eax,0x3924a6b0
  40783a:	xor    edx,0x16
  40783d:	mov    ds:0x82d63dca,al
  407842:	jmp    0xb452:0x1865e115
  407849:	in     al,dx
  40784a:	shl    DWORD PTR [eax],0x33
  40784d:	pop    edx
  40784e:	(bad)  
  407850:	dec    esi
  407851:	arpl   cx,di
  407853:	dec    ebx
  407854:	outs   dx,BYTE PTR ds:[esi]
  407855:	xchg   ecx,eax
  407856:	dec    eax
  407857:	into   
  407858:	mov    esp,0xdb809c5b
  40785d:	and    ah,al
  40785f:	lea    esp,[esi+0x61e10fe0]
  407865:	dec    ebx
  407866:	(bad)  
  407867:	ds adc ch,bl
  40786a:	sbb    ebx,DWORD PTR [edi+0x58b7362b]
  407870:	ret    
  407871:	ja     0x4078db
  407873:	jge    0x407886
  407875:	sbb    esi,0x31
  407878:	fs jle 0x407809
  40787b:	xor    edx,ecx
  40787d:	cmp    al,0x83
  40787f:	xchg   edx,ecx
  407881:	lds    ecx,FWORD PTR [ebp+0xace0929]
  407887:	clc    
  407888:	fidiv  DWORD PTR [edx+0x45]
  40788b:	loopne 0x4078b9
  40788d:	les    edx,FWORD PTR [edx-0x7c0827fd]
  407893:	and    dl,BYTE PTR [ebx+0x6df9e84d]
  407899:	out    0x1f,al
  40789b:	jmp    0xc3acc85c
  4078a0:	(bad)  
  4078a1:	test   al,0xf1
  4078a3:	inc    edi
  4078a4:	or     eax,esi
  4078a6:	int    0x1a
  4078a8:	mov    ah,0x79
  4078aa:	mov    eax,0x6d74424f
  4078af:	pop    ds
  4078b0:	outs   dx,BYTE PTR ds:[esi]
  4078b1:	dec    ebp
  4078b2:	sub    dh,al
  4078b4:	(bad)  
  4078b5:	lock cmp DWORD PTR [ebp-0x45],esi
  4078b9:	or     ecx,esp
  4078bb:	retf   0xdb73
  4078be:	push   0x3d
  4078c0:	cmc    
  4078c1:	jmp    0x4078ed
  4078c3:	push   edx
  4078c4:	fiadd  DWORD PTR [eax]
  4078c6:	or     BYTE PTR [esi-0x58ef4c01],dl
  4078cc:	adc    al,BYTE PTR ds:[esi]
  4078cf:	imul   cl
  4078d1:	jno    0x407878
  4078d3:	sti    
  4078d4:	cdq    
  4078d5:	cmp    ebp,DWORD PTR [edx+0x72bbce3d]
  4078db:	nop
  4078dc:	and    edx,ebp
  4078de:	popa   
  4078df:	sahf   
  4078e0:	adc    ecx,DWORD PTR ds:0xadfb1277
  4078e6:	mov    DWORD PTR [ecx+0x7e4eafa3],ebx
  4078ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078ed:	(bad)
  4078f2:	ret    
  4078f3:	loop   0x407957
  4078f5:	jno    0x4078fd
  4078f7:	lea    ecx,[eax+0x357b45f]
  4078fd:	popf   
  4078fe:	mov    al,0xdd
  407900:	fld    st(6)
  407902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407903:	sub    BYTE PTR [ecx+0x5e9d6429],0xf0
  40790a:	sahf   
  40790b:	push   ebx
  40790c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40790d:	mov    ebx,0xfffa87ec
  407912:	and    eax,0xdb6c41c5
  407917:	repnz inc ecx
  407919:	outs   dx,DWORD PTR ds:[esi]
  40791a:	cmp    al,0xa
  40791c:	(bad)  
  40791d:	aaa    
  40791e:	sub    esi,DWORD PTR fs:[eax+0x5b]
  407922:	outs   dx,BYTE PTR ds:[esi]
  407923:	sub    dl,BYTE PTR [edx-0x7a]
  407926:	leave  
  407927:	imul   eax,DWORD PTR [ebx],0x3fe9a64a
  40792d:	dec    edi
  40792e:	adc    eax,0x6d4475f2
  407933:	jno    0x407947
  407935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407936:	shl    DWORD PTR [edi+0x5b80216a],cl
  40793c:	xor    BYTE PTR [ecx-0x51],dl
  40793f:	scas   eax,DWORD PTR es:[edi]
  407940:	out    0xf2,eax
  407942:	test   al,0x88
  407944:	push   ebp
  407945:	shl    DWORD PTR [edi+ebx*2-0x3193139d],0x42
  40794d:	jnp    0x4079c7
  40794f:	sbb    DWORD PTR [ecx+0x300ddf53],0xfa21d14f
  407959:	jnp    0x4079ca
  40795b:	and    eax,0xe4d0ce17
  407960:	fs dec ecx
  407962:	fcmovbe st,st(6)
  407964:	xchg   esp,eax
  407965:	mov    al,ds:0xf1ec4677
  40796a:	and    dl,BYTE PTR fs:[ebp-0x4eec35a5]
  407971:	jle    0x40794a
  407973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407974:	push   ds
  407975:	(bad)  
  407976:	in     al,dx
  407977:	ss cs jp 0x40794f
  40797b:	push   ecx
  40797c:	retf   
  40797d:	inc    BYTE PTR [eax+0x70]
  407980:	mov    bl,0xea
  407982:	sub    edi,edi
  407984:	test   esi,esi
  407986:	and    al,0x11
  407988:	sub    BYTE PTR [ecx+ecx*2+0x54],0xbe
  40798d:	nop
  40798e:	mov    ds:0x6cd6f55f,eax
  407993:	or     DWORD PTR [ebp+ebp*2-0x60fbeba0],ebx
  40799a:	pop    ecx
  40799b:	shl    BYTE PTR [edx+0x40911e3c],1
  4079a1:	inc    edx
  4079a2:	push   eax
  4079a3:	cmp    al,BYTE PTR [eax]
  4079a5:	fstp   TBYTE PTR [eax+0x115da967]
  4079ab:	pushf  
  4079ac:	iretw  
  4079ae:	push   0x72
  4079b0:	xchg   edi,eax
  4079b1:	mov    edx,0x7ed574d8
  4079b6:	scas   al,BYTE PTR es:[edi]
  4079b7:	enter  0x1f3d,0x8e
  4079bb:	pop    eax
  4079bc:	jl     0x407a1e
  4079be:	in     al,dx
  4079bf:	stos   BYTE PTR es:[edi],al
  4079c0:	into   
  4079c1:	xor    edi,DWORD PTR [esi+0x20]
  4079c4:	leave  
  4079c5:	clc    
  4079c6:	ja     0x407955
  4079c8:	sub    al,0xf0
  4079ca:	dec    esp
  4079cb:	and    esp,esp
  4079cd:	add    al,0x8b
  4079cf:	imul   esi,esi,0xa9fd49a
  4079d5:	aas    
  4079d6:	jge    0x407a4f
  4079d8:	dec    ecx
  4079d9:	leave  
  4079da:	mov    ?,edx
  4079dc:	fcmovu st,st(5)
  4079de:	pop    ds
  4079df:	es cmc 
  4079e1:	inc    edx
  4079e2:	mov    ch,0xd6
  4079e4:	addr16 pop edi
  4079e6:	out    dx,al
  4079e7:	stc    
  4079e8:	(bad)  
  4079e9:	pop    ecx
  4079ea:	inc    ebx
  4079eb:	cmp    BYTE PTR [ebp+0x781e22e7],ch
  4079f1:	loope  0x407a6a
  4079f3:	lea    esi,[esi]
  4079f5:	in     eax,dx
  4079f6:	stos   BYTE PTR es:[edi],al
  4079f7:	sbb    al,0x5b
  4079f9:	imul   eax,DWORD PTR [edx+edi*4-0x41],0x6d
  4079fe:	mov    dh,0x21
  407a00:	adc    DWORD PTR [esi+0x15],edi
  407a03:	dec    edx
  407a04:	mov    dl,0x4c
  407a06:	mov    edi,0x57b97e88
  407a0b:	add    BYTE PTR [edx],0xd
  407a0e:	cwde   
  407a0f:	es dec eax
  407a11:	adc    esp,DWORD PTR [edx-0x697b42ed]
  407a17:	cld    
  407a18:	pop    ds
  407a19:	jp     0x4079cd
  407a1b:	adc    al,0x7a
  407a1d:	(bad)  
  407a1e:	stc    
  407a1f:	mov    cl,0xc3
  407a21:	inc    edi
  407a22:	sbb    eax,0xda28111e
  407a27:	into   
  407a28:	jg     0x407a9f
  407a2a:	add    eax,0xe7299af2
  407a2f:	pushf  
  407a30:	mov    cs,WORD PTR [edx]
  407a32:	cmp    DWORD PTR [edi-0x4e6b61bb],ebp
  407a38:	sti    
  407a39:	in     al,dx
  407a3a:	mov    fs,WORD PTR [edx-0x73]
  407a3d:	aam    0x75
  407a3f:	dec    edi
  407a40:	inc    edi
  407a41:	in     al,dx
  407a42:	js     0x4079cf
  407a44:	outs   dx,DWORD PTR ds:[esi]
  407a45:	mov    WORD PTR [edx-0x2c13b561],fs
  407a4b:	cld    
  407a4c:	jbe    0x407aa8
  407a4e:	test   BYTE PTR [ebx-0x62],dl
  407a51:	add    eax,0x78ae3b36
  407a56:	jmp    0x7efa2cc3
  407a5b:	and    eax,0xdd8a0cc
  407a60:	int    0x58
  407a62:	inc    esi
  407a63:	or     eax,0x6ec981a6
  407a68:	sahf   
  407a69:	mov    dh,0xd3
  407a6b:	xor    ch,BYTE PTR [eax]
  407a6d:	sbb    eax,0x6b9828b8
  407a72:	int    0xa3
  407a74:	je     0x407acd
  407a76:	out    dx,eax
  407a77:	cmp    eax,0xcb0cb794
  407a7c:	add    DWORD PTR [esi-0x4d],ebx
  407a7f:	faddp  st(3),st
  407a81:	enter  0x115e,0xa6
  407a85:	bnd jge 0x407a7a
  407a88:	into   
  407a89:	ds push edi
  407a8b:	jb     0x407a6c
  407a8d:	xor    ecx,edi
  407a8f:	imul   esp,DWORD PTR [edx+0x38a62893],0xffffffb5
  407a96:	push   ecx
  407a97:	(bad)  
  407a98:	cmp    edx,esp
  407a9a:	fdivr  DWORD PTR [ebp+0x3aea2cde]
  407aa0:	ret    0xb7a
  407aa3:	pop    edx
  407aa4:	lahf   
  407aa5:	aad    0xa1
  407aa7:	and    al,0xab
  407aa9:	sar    eax,cl
  407aab:	jns    0x407af8
  407aad:	inc    DWORD PTR [ebp-0x4cc9e97b]
  407ab3:	xchg   edi,eax
  407ab4:	call   0x8ac3:0x272eb3e4
  407abb:	gs push edi
  407abd:	xor    eax,0xc22b7b42
  407ac2:	xchg   ebx,eax
  407ac3:	shl    BYTE PTR [edi],cl
  407ac5:	je     0x407abd
  407ac7:	mov    ds:0x44b95712,al
  407acc:	mov    edi,0x3bcc23f9
  407ad1:	xchg   edx,eax
  407ad2:	out    dx,eax
  407ad3:	adc    edi,DWORD PTR [ecx]
  407ad5:	fld    TBYTE PTR [ebx+0x44fd7382]
  407adb:	fadd   QWORD PTR [eax-0x1c]
  407ade:	cld    
  407adf:	sub    eax,0x9e956da7
  407ae4:	push   0x5ad2a256
  407ae9:	pop    eax
  407aea:	xchg   esi,eax
  407aeb:	or     ah,ah
  407aed:	sub    ah,al
  407aef:	sub    ebx,DWORD PTR ds:0x7f86f1e4
  407af5:	fcmovu st,st(5)
  407af7:	out    dx,eax
  407af8:	fidiv  DWORD PTR [edx+0x60ff9bfa]
  407afe:	mov    dl,0x9a
  407b00:	fimul  WORD PTR [esi-0x39]
  407b03:	fsubr  DWORD PTR [edi+0xe]
  407b06:	(bad)  
  407b07:	cmp    bl,dl
  407b09:	sub    DWORD PTR [edx-0x60e33a2b],esp
  407b0f:	jg     0x407ad4
  407b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b12:	ins    DWORD PTR es:[edi],dx
  407b13:	repz and ebp,DWORD PTR [edi]
  407b16:	inc    ebx
  407b17:	adc    eax,0x6802f3ca
  407b1c:	or     eax,0x2cf64dab
  407b21:	jbe    0x407b85
  407b23:	imul   edx,edi,0xffffffa2
  407b26:	hlt    
  407b27:	lea    edi,ss:[edi+0x37]
  407b2b:	out    0xbb,al
  407b2d:	sar    DWORD PTR [edi-0x4d3fb1a8],1
  407b33:	push   ebp
  407b34:	and    eax,0xc4ff37b6
  407b39:	mov    ds:0x33d4224d,eax
  407b3e:	stc    
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0xb41770e0
  407e5b:	dec    edi
  407e5c:	cwde   
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	jge    0x407e03
  407e67:	sbb    cl,BYTE PTR [ecx]
  407e69:	icebp  
  407e6a:	mov    al,0x8c
  407e6c:	cmp    bh,BYTE PTR [edx+ebp*1+0x323b4307]
  407e73:	faddp  st(7),st
  407e75:	cmp    eax,0x1dcfe9a8
  407e7a:	add    eax,0xc0269c1b
  407e7f:	pop    edi
  407e80:	xor    BYTE PTR [ebx+0x6c],ch
  407e83:	and    edi,DWORD PTR [esi+0x7b]
  407e86:	xchg   esi,eax
  407e87:	sbb    al,0x0
  407e89:	sti    
  407e8a:	fs pop ss
  407e8c:	aas    
  407e8d:	gs mov ebp,0x53f166fb
  407e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e94:	dec    edi
  407e95:	add    al,0x28
  407e97:	scas   eax,DWORD PTR es:[edi]
  407e98:	(bad)  
  407e99:	cdq    
  407e9a:	iret   
  407e9b:	sub    DWORD PTR [esi-0x75c6f8ba],esp
  407ea1:	push   cs
  407ea2:	cmp    eax,0x92aed6fd
  407ea7:	ds xchg ebx,eax
  407ea9:	xor    BYTE PTR [edi],cl
  407eab:	cmp    al,0x4a
  407ead:	and    ebp,ebp
  407eaf:	or     ch,BYTE PTR [ebp-0x6f]
  407eb2:	loope  0x407f21
  407eb4:	and    al,0x92
  407eb6:	aaa    
  407eb7:	sub    esp,DWORD PTR [eax+ebx*2+0x13c14eb0]
  407ebe:	sti    
  407ebf:	rol    BYTE PTR [edi+0x6cd6259d],0x81
  407ec6:	xlat   BYTE PTR ds:[ebx]
  407ec7:	pop    edx
  407ec8:	loope  0x407ecc
  407eca:	adc    bh,bl
  407ecc:	add    edi,eax
  407ece:	sbb    DWORD PTR [ebx],eax
  407ed0:	not    ch
  407ed2:	and    edi,0x2f294f8c
  407ed8:	push   ebp
  407ed9:	es jmp 0xcd2c4071
  407edf:	nop
  407ee0:	ret    
  407ee1:	mov    DWORD PTR [ebx+eax*2+0xe],0xa9ec0f4a
  407ee9:	jae    0x407eb9
  407eeb:	dec    esi
  407eec:	in     al,dx
  407eed:	test   BYTE PTR [edi-0x7fb397b8],bl
  407ef3:	dec    edx
  407ef4:	(bad)  
  407ef5:	mov    dl,0x20
  407ef7:	pop    ss
  407ef8:	stos   DWORD PTR es:[edi],eax
  407ef9:	test   DWORD PTR [ebx],0xe2408edc
  407eff:	inc    edx
  407f00:	sbb    BYTE PTR [eax+0x3e],bh
  407f03:	rcr    BYTE PTR [ecx-0x2799c17],cl
  407f09:	div    BYTE PTR [ecx]
  407f0b:	dec    edi
  407f0c:	pop    ss
  407f0d:	test   DWORD PTR ds:0x9d3c1a4,edi
  407f13:	es xchg ebx,eax
  407f15:	clc    
  407f16:	sub    al,0x6b
  407f18:	sub    cl,BYTE PTR [edi-0x47ddc528]
  407f1e:	stos   DWORD PTR es:[edi],eax
  407f1f:	outs   dx,BYTE PTR ds:[esi]
  407f20:	or     eax,0x8ea33273
  407f25:	jecxz  0x407eb6
  407f27:	lea    edx,[ebp+0x576f3588]
  407f2d:	les    esi,FWORD PTR [ecx]
  407f2f:	sti    
  407f30:	sub    esi,ebx
  407f32:	push   ecx
  407f33:	addr16 nop
  407f35:	push   edi
  407f36:	sbb    esp,DWORD PTR [ebx]
  407f38:	stos   BYTE PTR es:[edi],al
  407f39:	imul   esp,DWORD PTR [ebp-0x43d1c0b9],0x4fd5c156
  407f43:	mov    ch,0xc4
  407f45:	jl     0x407ef4
  407f47:	loope  0x407f10
  407f49:	enter  0xfb24,0x9e
  407f4d:	int3   
  407f4e:	sub    BYTE PTR [ebp-0x40c3a41f],cl
  407f54:	jno    0x407ef7
  407f56:	cmp    edi,ecx
  407f58:	and    al,bl
  407f5a:	imul   esp,esp,0x6cb5343d
  407f60:	(bad)  
  407f61:	pop    ebp
  407f62:	xchg   edi,eax
  407f63:	fisub  WORD PTR [edi+0x449c7741]
  407f69:	jmp    0x407fc9
  407f6b:	ror    DWORD PTR ds:0x9753d4a5,1
  407f71:	(bad)  
  407f73:	sub    esi,DWORD PTR [edi+0x0]
  407f76:	or     BYTE PTR [eax-0x417d4feb],dh
  407f7c:	dec    esi
  407f7d:	inc    ebp
  407f7e:	push   esi
  407f7f:	mov    ds:0x2679d5f3,eax
  407f84:	ss js  0x407f62
  407f87:	mov    dl,0x2f
  407f89:	pop    ds
  407f8a:	xor    bh,BYTE PTR [esi]
  407f8c:	lahf   
  407f8d:	mov    edi,0xfad602c9
  407f92:	and    DWORD PTR [ecx-0x45dd202],eax
  407f98:	inc    ecx
  407f99:	add    dh,BYTE PTR [eax-0x1791e820]
  407f9f:	(bad)  
  407fa0:	jl     0x407f5c
  407fa2:	inc    esi
  407fa3:	js     0x407fee
  407fa5:	mov    ebp,0xff403d1f
  407faa:	inc    edi
  407fab:	xchg   ebp,eax
  407fac:	mov    ebp,DWORD PTR [esp+esi*8+0x24]
  407fb0:	xchg   edi,eax
  407fb1:	rcl    DWORD PTR [ecx+0x3890c270],1
  407fb7:	mov    al,0x5c
  407fb9:	aas    
  407fba:	jns    0x407fc9
  407fbc:	pusha  
  407fbd:	adc    eax,0x760f9ec4
  407fc2:	sub    BYTE PTR [edx-0x74],bh
  407fc5:	pop    esi
  407fc6:	and    dh,bh
  407fc8:	sbb    dl,BYTE PTR [esi+0x36]
  407fcb:	adc    eax,0x299a6278
  407fd0:	(bad)  
  407fd1:	adc    al,0x78
  407fd3:	in     eax,0x37
  407fd5:	gs pop esp
  407fd7:	jg     0x408014
  407fd9:	inc    esi
  407fda:	push   cs
  407fdb:	push   ds
  407fdc:	jl     0x407f98
  407fde:	div    al
  407fe0:	scas   al,BYTE PTR es:[edi]
  407fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe2:	out    dx,eax
  407fe3:	cld    
  407fe4:	mov    ch,0xfe
  407fe6:	or     al,0xd5
  407fe8:	jle    0x407f81
  407fea:	js     0x407fdf
  407fec:	sbb    eax,ebp
  407fee:	push   ds
  407fef:	mov    edx,DWORD PTR [edx]
  407ff1:	inc    esp
  407ff2:	iret   
  407ff3:	push   0x4f
  407ff5:	add    BYTE PTR [esi-0xe],ah
  407ff8:	push   ds
  407ff9:	int3   
  407ffa:	sti    
  407ffb:	pusha  
  407ffc:	push   0x36
  407ffe:	pop    ds
  407fff:	cdq    
  408000:	add    DWORD PTR [ecx],eax
  408002:	pushf  
  408003:	lods   eax,DWORD PTR ds:[esi]
  408004:	mov    ah,0x4e
  408006:	idiv   ah
  408008:	dec    ecx
  408009:	retf   0x9df3
  40800c:	push   esp
  40800d:	ins    BYTE PTR es:[edi],dx
  40800e:	test   DWORD PTR [edx],ebp
  408010:	mov    DWORD PTR [ebp+0x1a],ebx
  408013:	arpl   WORD PTR [ebx-0x593c31eb],di
  408019:	adc    eax,0x89c2e866
  40801e:	ins    DWORD PTR es:[edi],dx
  40801f:	pop    edx
  408020:	js     0x407fd0
  408022:	(bad)  
  408023:	pop    edi
  408024:	push   ebp
  408025:	(bad)  
  408026:	mov    eax,0xa55c99a5
  40802b:	push   es
  40802c:	(bad)  
  40802d:	mov    DWORD PTR [ecx-0x6],esi
  408030:	inc    esp
  408031:	mov    BYTE PTR [eax+edx*4-0x6d],bh
  408035:	or     ch,bh
  408037:	dec    eax
  408038:	cmp    dh,ah
  40803a:	pushf  
  40803b:	mov    ebx,DWORD PTR [ecx]
  40803d:	fwait
  40803e:	xor    dh,BYTE PTR [eax]
  408040:	xchg   edx,eax
  408041:	push   ebx
  408042:	sub    al,0xed
  408044:	cmp    eax,DWORD PTR [esi-0x6e8c78e1]
  40804a:	mov    ds:0x5eea752f,al
  40804f:	ret    
  408050:	adc    DWORD PTR [ebx+eiz*8],esi
  408053:	loope  0x4080c3
  408055:	lock ja 0x408009
  408058:	lods   eax,DWORD PTR ds:[esi]
  408059:	jns    0x40807e
  40805b:	push   0xbc1412f0
  408060:	adc    al,0x4f
  408062:	outs   dx,BYTE PTR ds:[esi]
  408063:	or     al,0xe6
  408065:	leave  
  408066:	pop    ss
  408067:	pop    esp
  408068:	pop    edx
  408069:	cwde   
  40806a:	xor    eax,DWORD PTR [ecx+0x4]
  40806d:	gs push ss
  40806f:	je     0x4080cd
  408071:	sahf   
  408072:	into   
  408073:	popf   
  408074:	push   esi
  408075:	cmp    BYTE PTR [eax+edx*1+0x7b46f2a4],bl
  40807c:	lods   al,BYTE PTR ds:[esi]
  40807d:	pop    edi
  40807e:	mov    ebp,0x4c727bb2
  408083:	add    BYTE PTR [eax-0x7beccac6],bh
  408089:	loop   0x408073
  40808b:	fidivr DWORD PTR [esi]
  40808d:	gs ins DWORD PTR es:[edi],dx
  40808f:	das    
  408090:	outs   dx,BYTE PTR ds:[esi]
  408091:	sti    
  408092:	mov    ch,0x49
  408094:	dec    ebx
  408095:	lahf   
  408096:	add    edi,esi
  408098:	sahf   
  408099:	and    al,0x42
  40809b:	dec    edi
  40809c:	xchg   ebp,eax
  40809d:	xor    BYTE PTR [eax],bl
  40809f:	daa    
  4080a0:	adc    BYTE PTR [ebx+0xaf289d5],bl
  4080a6:	push   ds
  4080a7:	fbstp  TBYTE PTR [eax-0x793d580a]
  4080ad:	aaa    
  4080ae:	outs   dx,DWORD PTR ds:[esi]
  4080af:	outs   dx,BYTE PTR ds:[esi]
  4080b0:	repz add edi,eax
  4080b3:	pop    ds
  4080b4:	adc    cl,ah
  4080b6:	lgs    esp,FWORD PTR [esi-0x3e]
  4080ba:	jmp    0x40808d
  4080bc:	outs   dx,DWORD PTR ds:[esi]
  4080bd:	daa    
  4080be:	inc    ebp
  4080bf:	sub    BYTE PTR [edi],dh
  4080c1:	popa   
  4080c2:	push   0x5
  4080c4:	pop    ebx
  4080c5:	repnz scas al,BYTE PTR es:[edi]
  4080c7:	ins    DWORD PTR es:[edi],dx
  4080c8:	jecxz  0x408095
  4080ca:	and    ch,BYTE PTR [edi]
  4080cc:	xor    dl,BYTE PTR [ebp-0x3e92888e]
  4080d2:	adc    BYTE PTR [esi-0x3bf030ff],ch
  4080d8:	ins    DWORD PTR es:[edi],dx
  4080d9:	aam    0xd1
  4080db:	inc    esi
  4080dc:	es push esp
  4080de:	pop    ebx
  4080df:	xchg   esp,eax
  4080e0:	es push esp
  4080e2:	(bad)  
  4080e3:	out    0xc2,al
  4080e5:	(bad)  
  4080e6:	sahf   
  4080e7:	ret    0x7468
  4080ea:	inc    BYTE PTR [eax+0x38ed891d]
  4080f0:	add    BYTE PTR [esi-0x5e],bl
  4080f3:	call   DWORD PTR cs:[ebp-0x5abb724c]
  4080fa:	sar    ah,1
  4080fc:	outs   dx,DWORD PTR ds:[esi]
  4080fd:	xchg   ebx,eax
  4080fe:	fldenv [eax+ecx*4]
  408101:	les    ebp,FWORD PTR [ebp+0x5933bc0f]
  408107:	lahf   
  408108:	push   esp
  408109:	and    dl,0x74
  40810c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40810d:	test   eax,0xe5ae4e31
  408112:	aas    
  408113:	mov    al,ds:0xbaa6456e
  408118:	gs adc eax,0xc57f9b18
  40811e:	push   es
  40811f:	fisubr WORD PTR [ecx]
  408121:	pusha  
  408122:	pusha  
  408123:	jae    0x4080d0
  408125:	add    bl,BYTE PTR [ecx-0x2]
  408128:	ins    DWORD PTR es:[edi],dx
  408129:	test   BYTE PTR [ebp+0x3f61d41d],0x88
  408130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408131:	xchg   ecx,eax
  408132:	idiv   dl
  408134:	aaa    
  408135:	xchg   edi,eax
  408136:	cmp    al,BYTE PTR [ebx]
  408138:	sub    ebp,DWORD PTR [edx+0x24]
  40813b:	mov    BYTE PTR [edx+eiz*8],cl
  40813e:	dec    ebx
  40813f:	add    BYTE PTR [esi-0x3a63c07e],0x75
  408146:	in     eax,dx
  408147:	mov    bh,0x4f
  408149:	adc    dh,BYTE PTR [ecx-0x3d191196]
  40814f:	or     eax,0x5cbcab21
  408154:	inc    esi
  408155:	jp     0x40819c
  408157:	(bad)  
  408158:	xor    eax,0x39eb194c
  40815d:	push   ebp
  40815e:	fist   DWORD PTR [ebx]
  408160:	ret    
  408161:	stos   DWORD PTR es:[edi],eax
  408162:	pop    ebx
  408163:	cmp    eax,DWORD PTR [ecx]
  408165:	repnz imul esp,DWORD PTR [ecx],0xf9c0797e
  40816c:	or     eax,0xf2d82b9c
  408171:	push   cs
  408172:	mov    ds:0x78db0ed0,eax
  408177:	xor    eax,DWORD PTR [ecx+0x21d93dab]
  40817d:	out    dx,al
  40817e:	dec    ebx
  40817f:	sbb    bl,BYTE PTR [ecx]
  408181:	(bad)  
  408183:	mov    ds:0x9367776,eax
  408188:	adc    eax,0x2ab512eb
  40818d:	inc    ebp
  40818e:	jnp    0x408133
  408190:	lock fcom DWORD PTR ds:0x452b0caf
  408197:	mul    ecx
  408199:	sbb    edi,0xffffffab
  40819c:	mov    cl,0x1
  40819e:	(bad)  
  40819f:	mov    al,ds:0x67869456
  4081a4:	outs   dx,DWORD PTR ds:[esi]
  4081a5:	add    eax,0xb3bba957
  4081aa:	out    0x50,eax
  4081ac:	mov    edx,0x6b837074
  4081b1:	sub    al,0xbe
  4081b3:	ret    0x8b64
  4081b6:	lock fsubr st(2),st
  4081b9:	sbb    BYTE PTR [esi+0xf9b2c7b],bl
  4081bf:	mov    esi,0xdc57385c
  4081c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c5:	dec    edi
  4081c6:	xchg   edx,eax
  4081c7:	inc    edi
  4081c8:	(bad)  
  4081ca:	in     eax,dx
  4081cb:	pop    edi
  4081cc:	les    ebx,FWORD PTR [esi+0x25]
  4081cf:	ins    DWORD PTR es:[edi],dx
  4081d0:	add    DWORD PTR [eax],eax
  4081d2:	jecxz  0x4081e1
  4081d4:	cmc    
  4081d5:	fsubr  DWORD PTR [ecx+0x6e]
  4081d8:	test   BYTE PTR [edi+0x33],al
  4081db:	push   esp
  4081dc:	lods   eax,DWORD PTR ds:[esi]
  4081dd:	call   0x4158:0x65f72cd2
  4081e4:	sti    
  4081e5:	cwde   
  4081e6:	stos   BYTE PTR es:[edi],al
  4081e7:	sahf   
  4081e8:	dec    edi
  4081e9:	push   edx
  4081ea:	popa   
  4081eb:	or     BYTE PTR [ecx+edx*4-0x384a5f5],bl
  4081f2:	ins    BYTE PTR es:[edi],dx
  4081f3:	shr    ch,0xac
  4081f6:	sbb    eax,0xb90b6676
  4081fb:	hlt    
  4081fc:	push   ebp
  4081fd:	je     0x408238
  4081ff:	mov    ebx,0xa54db1d8
  408204:	xor    BYTE PTR [ecx+0x13],al
  408207:	cmp    al,0x2d
  408209:	and    eax,0x4ce8deb4
  40820e:	sub    al,0xd0
  408210:	cwde   
  408211:	adc    al,0xe8
  408213:	loope  0x408294
  408215:	cmp    edx,DWORD PTR ds:0x5725ec65
  40821b:	mov    ds:0x53b4a91d,eax
  408220:	dec    esp
  408221:	pop    edx
  408222:	add    edx,0x11
  408225:	jecxz  0x4081c0
  408227:	stos   DWORD PTR es:[edi],eax
  408228:	dec    ebx
  408229:	lea    ecx,[edx]
  40822b:	or     al,0x5b
  40822d:	and    dl,ah
  40822f:	mov    ah,0x48
  408231:	sar    DWORD PTR ds:0x4852e94e,0xa
  408238:	mov    eax,ds:0x296e0983
  40823d:	mov    esi,0xaa6567a
  408242:	(bad)  
  408243:	rcl    DWORD PTR ds:0x371ee6e8,0xf6
  40824a:	ja     0x40822a
  40824c:	test   DWORD PTR ds:[ebx+ecx*4+0x691233e0],edi
  408254:	jmp    0x20e:0x2cee5fe5
  40825b:	inc    esp
  40825c:	icebp  
  40825d:	xchg   esi,eax
  40825e:	dec    esi
  40825f:	pop    esi
  408260:	sar    DWORD PTR ds:0xf724a7b8,1
  408266:	cwde   
  408267:	sub    ch,0x23
  40826a:	xor    BYTE PTR [edx-0x12],cl
  40826d:	into   
  40826e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40826f:	xchg   ebx,eax
  408270:	ss or  al,0x7d
  408273:	lods   al,BYTE PTR ds:[esi]
  408274:	lods   al,BYTE PTR ds:[esi]
  408276:	dec    eax
  408277:	jno    0x408229
  408279:	retf   0xbb06
  40827c:	dec    edx
  40827d:	pop    ss
  40827e:	sbb    DWORD PTR [ecx],eax
  408280:	jo     0x40825f
  408282:	bound  eax,QWORD PTR [eax+0x9]
  408285:	fisttp WORD PTR [esi]
  408287:	adc    DWORD PTR [edi],ecx
  408289:	add    BYTE PTR [ebx-0x8],bh
  40828c:	outs   dx,DWORD PTR ds:[esi]
  40828d:	add    ecx,DWORD PTR [eax-0x78b32c82]
  408293:	cmp    eax,0x4d30696d
  408298:	mov    ds:0x4154f8e0,eax
  40829d:	shr    ch,cl
  40829f:	rcr    BYTE PTR [esi+0x77afdb40],0xb4
  4082a6:	mov    ecx,0xbbfac7d9
  4082ab:	mov    ecx,0x34e57a9
  4082b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b1:	cld    
  4082b2:	adc    BYTE PTR [eax+0x53c754d4],0x2
  4082b9:	aas    
  4082ba:	dec    esp
  4082bb:	push   ss
  4082bc:	sbb    cl,BYTE PTR [ebp+0x12a64536]
  4082c2:	push   edx
  4082c3:	jmp    0x4082e2
  4082c5:	in     al,0x48
  4082c7:	xor    al,0xe0
  4082c9:	jle    0x4082a6
  4082cb:	sub    eax,0x8f442f41
  4082d0:	aam    0x34
  4082d2:	mov    esi,0x2dc3a11c
  4082d7:	push   ss
  4082d8:	inc    edx
  4082d9:	mov    ebx,0x37872b8f
  4082de:	repnz das 
  4082e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082e1:	xor    DWORD PTR [esi+ebp*2],edi
  4082e4:	xor    eax,0xd61a5592
  4082e9:	pop    ebx
  4082ea:	xchg   esp,eax
  4082eb:	aad    0x1
  4082ed:	mov    bh,0x5d
  4082ef:	arpl   WORD PTR [ebp-0x2d],bp
  4082f2:	xchg   esp,eax
  4082f3:	enter  0xeb7f,0x84
  4082f7:	hlt    
  4082f8:	shr    DWORD PTR [ebp-0x648f2567],0x87
  4082ff:	sub    ah,BYTE PTR [ecx+0x686b94a4]
  408305:	das    
  408306:	jl     0x40832c
  408308:	jbe    0x408369
  40830a:	call   0x78bcf5f
  40830f:	xchg   ecx,eax
  408310:	rcl    DWORD PTR [edi+0x4],1
  408313:	adc    ebp,esi
  408315:	add    esi,ebp
  408317:	jb     0x408327
  408319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40831a:	fs popa 
  40831c:	int3   
  40831d:	push   cx
  40831f:	xchg   ebx,eax
  408320:	push   ds
  408321:	cmp    BYTE PTR [ecx-0x8],ah
  408324:	stos   BYTE PTR es:[edi],al
  408325:	ja     0x4083a4
  408327:	cwde   
  408328:	sar    DWORD PTR [esi-0x35],cl
  40832b:	push   ebx
  40832c:	je     0x40832b
  40832e:	dec    esp
  40832f:	in     al,dx
  408330:	add    DWORD PTR [ecx],edi
  408332:	(bad)  
  408333:	in     eax,0xe
  408335:	xor    BYTE PTR [edi-0x28c5e900],dh
  40833b:	mov    ecx,0x65c7d3b2
  408340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408341:	icebp  
  408342:	loop   0x4082cc
  408344:	loopne 0x4082f0
  408346:	frstor [ebx-0x69]
  408349:	pusha  
  40834a:	imul   esi,DWORD PTR [ebp-0xfa3febc],0x6e8d1e1d
  408354:	repz sbb BYTE PTR [eax],dl
  408357:	sbb    BYTE PTR [ebx-0x1e],ch
  40835a:	pop    ebx
  40835b:	outs   dx,BYTE PTR ds:[esi]
  40835c:	fld    TBYTE PTR [ecx]
  40835e:	jno    0x40830e
  408360:	fcmovnbe st,st(2)
  408362:	out    dx,al
  408363:	mov    DWORD PTR [edi],edx
  408365:	mov    bl,0x8a
  408367:	ins    DWORD PTR es:[edi],dx
  408368:	shr    BYTE PTR [edx+0x57],1
  40836b:	frstor [edi+0x5]
  40836e:	jno    0x4083b0
  408370:	les    esi,FWORD PTR [ebx]
  408372:	add    edx,DWORD PTR [ebx-0x19]
  408375:	inc    eax
  408376:	ds cmc 
  408378:	jnp    0x40832c
  40837a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40837b:	cmp    DWORD PTR [ecx],ecx
  40837d:	inc    ecx
  40837e:	adc    eax,0x3adf2106
  408383:	pop    ss
  408384:	xor    dl,BYTE PTR [ecx]
  408386:	lahf   
  408387:	mov    eax,ds:0x93259c1
  40838c:	mov    dh,0x48
  40838e:	push   ecx
  40838f:	xlat   BYTE PTR ds:[ebx]
  408390:	push   ds
  408391:	sub    BYTE PTR [eax+0x739bf60c],0x2f
  408398:	nop
  408399:	sti    
  40839a:	and    eax,0xf2e70cd5
  40839f:	add    dh,BYTE PTR [edx]
  4083a1:	mov    edi,0xc06cbb1d
  4083a6:	mov    edi,0xe8ec36d7
  4083ab:	push   esp
  4083ac:	pop    ds
  4083ad:	adc    bl,BYTE PTR [esi]
  4083af:	or     dh,BYTE PTR [ebp-0x2062e199]
  4083b5:	pop    edx
  4083b6:	mov    al,ds:0xcefc46eb
  4083bb:	xor    eax,0x1e10416a
  4083c0:	push   ds
  4083c1:	iret   
  4083c2:	mov    ds:0x7640c357,eax
  4083c7:	inc    edx
  4083c8:	lods   eax,DWORD PTR ds:[esi]
  4083c9:	push   eax
  4083ca:	jle    0x40837f
  4083cc:	push   esp
  4083cd:	add    DWORD PTR [eax+eax*2-0x3e4138bc],ebp
  4083d4:	add    eax,0x7cb558e4
  4083d9:	lds    ecx,FWORD PTR [edi]
  4083db:	inc    edi
  4083dc:	ror    BYTE PTR [edx-0x50],1
  4083df:	loopne 0x4083d6
  4083e1:	daa    
  4083e2:	jb     0x4083b9
  4083e4:	jp     0x4083f3
  4083e6:	aaa    
  4083e7:	iret   
  4083e8:	pushf  
  4083e9:	sar    BYTE PTR [ecx],1
  4083eb:	push   es
  4083ec:	adc    ebp,DWORD PTR [ebp+eiz*4+0x73]
  4083f0:	in     eax,0x89
  4083f2:	pop    es
  4083f3:	inc    esp
  4083f4:	and    dh,BYTE PTR [eax+0x43]
  4083f7:	add    ch,BYTE PTR [esi]
  4083f9:	mov    cl,0x7
  4083fb:	repz cs sbb al,0x89
  4083ff:	push   ebp
  408400:	mov    al,0xe4
  408402:	fwait
  408403:	daa    
  408404:	es sbb al,0x3c
  408407:	popa   
  408408:	and    DWORD PTR [esi],eax
  40840a:	(bad)  
  40840b:	fisttp WORD PTR ds:0xe0495155
  408411:	pop    ds
  408412:	fst    QWORD PTR [eax-0x71]
  408415:	test   eax,0xa85c4867
  40841a:	xchg   ebp,eax
  40841b:	es das 
  40841d:	iret   
  40841e:	mov    al,BYTE PTR cs:[esp+edx*2+0x10c78140]
  408426:	std    
  408427:	rcl    DWORD PTR [ebp+0x26f1e02e],cl
  40842d:	xor    BYTE PTR [edi],cl
  40842f:	inc    edi
  408430:	ror    dh,cl
  408432:	xchg   ebp,eax
  408433:	or     al,0xef
  408435:	jne    0x4083ce
  408437:	ror    ebx,cl
  408439:	std    
  40843a:	xor    ah,BYTE PTR [ecx+esi*4+0xd96c9d1]
  408441:	outs   dx,BYTE PTR ds:[esi]
  408442:	ret    0x74ac
  408445:	(bad)  
  408446:	push   ss
  408447:	pop    ss
  408448:	inc    esp
  408449:	in     eax,0x25
  40844b:	ret    
  40844c:	stc    
  40844d:	push   cs
  40844e:	stos   DWORD PTR es:[edi],eax
  40844f:	cmp    bl,BYTE PTR ds:0x92faaf4c
  408455:	int    0x2b
  408457:	cwde   
  408458:	cmp    cl,BYTE PTR [ecx]
  40845a:	push   esp
  40845b:	adc    BYTE PTR [ebp+0x3b8acba8],ch
  408461:	and    DWORD PTR [ecx+edx*4],0xf4b5f85f
  408468:	shl    DWORD PTR [ebp+0x69627556],cl
  40846e:	shl    al,0xa6
  408471:	and    esp,DWORD PTR [edi+0x2c19a093]
  408477:	cdq    
  408478:	ins    BYTE PTR es:[edi],dx
  408479:	sbb    bl,ah
  40847b:	imul   eax,DWORD PTR [ecx-0xd],0xf2bc7e06
  408482:	test   DWORD PTR [esi-0x15d0dc2d],ebp
  408488:	std    
  408489:	push   0xb3b4e257
  40848e:	ror    BYTE PTR [ebx+0x3cc97d7c],cl
  408494:	mov    ds:0xb011e36b,al
  408499:	dec    ecx
  40849a:	fnstsw WORD PTR [edi]
  40849c:	cli    
  40849d:	mov    ebp,0xa1776638
  4084a2:	cs jmp 0x969a:0x9003e72b
  4084aa:	inc    esp
  4084ab:	mov    ecx,0x41cd1a3e
  4084b0:	lahf   
  4084b1:	xchg   ebp,eax
  4084b2:	fadd   QWORD PTR [ecx]
  4084b4:	inc    esi
  4084b5:	out    0xb1,eax
  4084b7:	sub    dh,BYTE PTR [edi]
  4084b9:	dec    ebx
  4084ba:	int    0x20
  4084bc:	cmp    eax,0x56d0e12
  4084c1:	cmp    al,bh
  4084c3:	push   es
  4084c4:	lahf   
  4084c5:	in     eax,0xcc
  4084c7:	shr    ecx,0x78
  4084ca:	fstp   DWORD PTR [ebp-0x16]
  4084cd:	mov    ?,esi
  4084cf:	mov    ebx,0x39dbad1d
  4084d4:	lea    edi,[edi-0x5588c4e9]
  4084da:	(bad)  
  4084db:	push   esp
  4084dd:	(bad)  
  4084de:	rol    BYTE PTR [ebp+0x26],1
  4084e1:	repnz imul ebp,ebx,0xffffff8c
  4084e5:	test   BYTE PTR [ebp+0x50e80f3e],0x9
  4084ec:	cli    
  4084ed:	xchg   ebx,eax
  4084ee:	stc    
  4084ef:	lock imul edx,DWORD PTR [ecx+0x47f7d553],0x3e07fabe
  4084fa:	pop    edi
  4084fb:	pop    ss
  4084fc:	ins    DWORD PTR es:[edi],dx
  4084fd:	jne    0x408554
  4084ff:	jg     0x40848d
  408501:	ret    0xae1
  408504:	fld    DWORD PTR [ebp-0x57127d64]
  40850a:	cmp    eax,0x8548846f
  40850f:	adc    ebp,esi
  408511:	and    al,0x8e
  408513:	jecxz  0x4084f3
  408515:	ds out 0x6c,al
  408518:	adc    dh,BYTE PTR [ecx]
  40851a:	jmp    0x885ba81e
  40851f:	dec    ebp
  408520:	repz jns 0x4084f2
  408523:	push   edi
  408524:	mov    DWORD PTR [edi-0x2d921827],eax
  40852a:	mov    bh,0x90
  40852c:	jno    0x4084f3
  40852e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40852f:	arpl   WORD PTR [edx+0x2ecbe511],sp
  408535:	fisttp WORD PTR [edi+0x4b24ae9a]
  40853b:	test   eax,0xcaa2f13f
  408540:	pop    ecx
  408541:	cmp    ah,BYTE PTR [edx+0x6d]
  408544:	mov    esp,0xcad24344
  408549:	das    
  40854a:	add    al,0x42
  40854c:	jno    0x4084f4
  40854e:	outs   dx,DWORD PTR ds:[esi]
  40854f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408550:	sub    al,0xa2
  408552:	jbe    0x40851a
  408554:	and    edi,DWORD PTR [esi+ebx*1-0x18]
  408558:	inc    ebx
  408559:	test   DWORD PTR [eax-0x20884db0],edi
  40855f:	add    BYTE PTR [esi+eax*2-0xd300209],bh
  408566:	xor    al,0xdb
  408568:	aaa    
  408569:	dec    edi
  40856a:	jge    0x4085c4
  40856c:	aaa    
  40856d:	sysenter 
  40856f:	pop    ebx
  408570:	inc    esp
  408571:	(bad)  
  408572:	pop    ss
  408573:	pop    edx
  408574:	ins    DWORD PTR es:[edi],dx
  408575:	jnp    0x408551
  408577:	(bad)  
  408578:	mov    ds:0x541686fc,eax
  40857d:	inc    eax
  40857e:	icebp  
  40857f:	or     DWORD PTR [ecx+ebx*1-0x16],edx
  408583:	sbb    esp,esi
  408585:	push   cs
  408586:	and    esi,DWORD PTR [ebx-0x1f]
  408589:	sub    eax,0x27a165ce
  40858e:	in     eax,dx
  40858f:	(bad)  
  408590:	adc    bh,ah
  408592:	jb     0x408604
  408594:	mov    al,ds:0x291e6dca
  408599:	add    al,0x37
  40859b:	outs   dx,DWORD PTR ds:[esi]
  40859c:	ror    BYTE PTR [edx],0xd8
  40859f:	ret    0x91f0
  4085a2:	sahf   
  4085a3:	cdq    
  4085a4:	sbb    dh,BYTE PTR [ecx]
  4085a6:	inc    ebp
  4085a7:	push   ebp
  4085a8:	sub    al,0xd5
  4085aa:	test   al,0xab
  4085ac:	loopne 0x4085ba
  4085ae:	(bad)  
  4085af:	mov    ds:0xab90c80c,al
  4085b4:	fldenv [esi+0x59e1ff93]
  4085ba:	(bad)  
  4085bb:	pop    ebx
  4085bc:	inc    ebx
  4085bd:	(bad)  
  4085be:	mov    ebx,0xbeaf2523
  4085c3:	or     DWORD PTR [esi-0x23fa6967],ecx
  4085c9:	ds cwde 
  4085cb:	cwde   
  4085cc:	int    0xa0
  4085ce:	call   0xeaa9:0x55d730ef
  4085d5:	retf   
  4085d6:	and    bl,dh
  4085d8:	xchg   ebp,eax
  4085d9:	push   edx
  4085da:	sub    al,BYTE PTR [edx+0x6f]
  4085dd:	lds    esi,FWORD PTR [ecx-0x63]
  4085e0:	loopne 0x4085cc
  4085e2:	adc    BYTE PTR [edi+edx*2],al
  4085e5:	aas    
  4085e6:	es cmc 
  4085e8:	xor    BYTE PTR [ecx],cl
  4085ea:	push   esp
  4085eb:	sub    bh,BYTE PTR [ebp-0x76a624d]
  4085f1:	xchg   edi,eax
  4085f2:	add    al,0xa2
  4085f4:	inc    edi
  4085f5:	jecxz  0x4085ff
  4085f7:	es clc 
  4085f9:	(bad)  
  4085fa:	sub    al,0x70
  4085fc:	cs jne 0x408630
  4085ff:	mov    dh,0x13
  408601:	lock pop ds
  408603:	test   eax,0x3b568717
  408608:	test   eax,0xb03f6534
  40860d:	add    ah,BYTE PTR [esi]
  40860f:	inc    ecx
  408610:	shl    ah,1
  408612:	push   esi
  408613:	add    ch,BYTE PTR [ecx-0x51899381]
  408619:	daa    
  40861a:	pop    esi
  40861b:	sar    DWORD PTR [ebp-0x4eae2d43],0x71
  408622:	mov    gs,ebp
  408624:	lods   eax,DWORD PTR ds:[esi]
  408625:	mov    edx,0x609eca00
  40862a:	mov    DWORD PTR [ecx],esp
  40862c:	dec    ebx
  40862d:	push   0x75
  40862f:	mov    dl,0x44
  408631:	aaa    
  408632:	(bad)  
  408633:	jl     0x4085f7
  408635:	int3   
  408636:	add    al,0x10
  408638:	in     eax,0x6
  40863a:	sbb    ch,bh
  40863c:	xchg   edx,eax
  40863d:	lea    esp,[eax]
  40863f:	cs xchg bl,bh
  408642:	sti    
  408643:	lock xor DWORD PTR [ebx-0x22],edi
  408647:	sbb    eax,0x7d6bd29
  40864c:	stos   DWORD PTR es:[edi],eax
  40864d:	pop    edx
  40864e:	loope  0x408637
  408650:	ficomp DWORD PTR [ebx+0x15]
  408653:	jl     0x408655
  408655:	int    0xd
  408657:	sub    DWORD PTR [ecx+0x20],edx
  40865a:	xchg   edi,eax
  40865b:	call   FWORD PTR [edx-0x38]
  40865e:	push   ebx
  40865f:	inc    ebp
  408660:	cmp    cl,ah
  408662:	mov    ebp,0x95c35255
  408667:	or     al,0x3
  408669:	aad    0x12
  40866b:	jmp    0x2abd2778
  408670:	push   ds
  408671:	inc    edi
  408672:	retf   0x7555
  408675:	inc    BYTE PTR [esi+ebx*2+0x3d]
  408679:	and    eax,0x3ceefe53
  40867e:	nop
  40867f:	dec    eax
  408680:	test   al,0x92
  408682:	jmp    0xe3d41153
  408687:	jne    0x4086de
  408689:	into   
  40868a:	adc    BYTE PTR [edi],ch
  40868c:	arpl   WORD PTR ds:0x2c1bcbaa,di
  408692:	pop    ebp
  408693:	in     al,0xf2
  408695:	(bad)  
  408696:	in     eax,dx
  408697:	test   al,0xae
  408699:	mov    dl,0xb0
  40869b:	lahf   
  40869c:	adc    ah,ah
  40869e:	inc    DWORD PTR [edx+0x6f7a5818]
  4086a4:	repz sbb dl,BYTE PTR [esi+eax*2]
  4086a8:	lods   eax,DWORD PTR ds:[esi]
  4086a9:	aad    0x85
  4086ab:	fwait
  4086ac:	dec    edi
  4086ad:	jmp    0x408653
  4086af:	mov    ecx,0x80e51e7f
  4086b4:	sub    al,0x40
  4086b6:	sti    
  4086b7:	mov    ch,bh
  4086b9:	dec    ebx
  4086ba:	sahf   
  4086bb:	out    dx,al
  4086bc:	in     eax,0x5d
  4086be:	and    eax,DWORD PTR [edi-0x69]
  4086c1:	inc    BYTE PTR [ebx+0x51]
  4086c4:	fwait
  4086c5:	and    al,0x90
  4086c7:	mov    esp,?
  4086c9:	stos   DWORD PTR es:[edi],eax
  4086ca:	cmp    DWORD PTR [edx+0x64850899],ecx
  4086d0:	inc    ecx
  4086d1:	rcr    cl,1
  4086d3:	pop    ebx
  4086d4:	fsub   st,st(4)
  4086d6:	pop    edi
  4086d7:	push   edx
  4086d8:	(bad)  
  4086d9:	fstp   QWORD PTR [ebp+0x117a6e24]
  4086df:	pop    es
  4086e0:	add    al,BYTE PTR [edx+ecx*4-0x26]
  4086e4:	repnz add al,0xe7
  4086e7:	sbb    eax,0x4c6c2e99
  4086ec:	mov    ebx,DWORD PTR [eax-0x2d]
  4086ef:	cld    
  4086f0:	in     al,dx
  4086f1:	movsx  edx,BYTE PTR [ecx-0x1290d756]
  4086f8:	or     DWORD PTR [ecx-0x72],edi
  4086fb:	sbb    eax,0xc1395fe0
  408700:	cmp    DWORD PTR [edi-0x2c995670],0xffffff9d
  408707:	xor    DWORD PTR [edx+0x25ae8c46],0xdcdca6e3
  408711:	jmp    0xb9aa16c7
  408716:	lods   al,BYTE PTR ds:[esi]
  408717:	xchg   edx,eax
  408718:	mov    ch,0x6e
  40871a:	fadd   QWORD PTR [edi]
  40871c:	or     ebp,DWORD PTR [ebx]
  40871e:	(bad)  
  40871f:	repnz lods eax,DWORD PTR ds:[esi]
  408721:	jmp    0x408775
  408723:	xchg   esi,eax
  408724:	mov    bl,0x93
  408726:	or     eax,0xb674e475
  40872b:	mov    ebp,0xe7cbdc4c
  408730:	lahf   
  408731:	adc    al,0x45
  408733:	aam    0xea
  408735:	fistp  DWORD PTR [ebp+0x58d9bafd]
  40873b:	inc    ebx
  40873c:	sbb    edi,esi
  40873e:	xchg   ebx,eax
  40873f:	hlt    
  408740:	dec    ebx
  408741:	pop    ds
  408742:	mov    bl,0xd6
  408744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408745:	(bad)  
  408746:	xor    al,0x6b
  408748:	jne    0x408709
  40874a:	sbb    eax,0xda82d15d
  40874f:	dec    edi
  408750:	pop    esi
  408751:	cmp    DWORD PTR [ebx-0x47381043],esi
  408757:	pop    esi
  408758:	jbe    0x4087ab
  40875a:	(bad)  
  40875b:	mov    al,ds:0x4160a00a
  408760:	dec    esi
  408761:	scas   al,BYTE PTR es:[edi]
  408762:	popa   
  408763:	push   esp
  408764:	popa   
  408765:	fwait
  408766:	xchg   edi,eax
  408767:	add    BYTE PTR [edx],bl
  408769:	jge    0x40878d
  40876b:	clc    
  40876c:	pop    esp
  40876d:	pop    ds
  40876e:	and    cl,BYTE PTR [eax]
  408770:	not    BYTE PTR [ebx-0x14]
  408773:	push   ecx
  408774:	dec    ebp
  408775:	sub    DWORD PTR ss:[eax-0x138a4424],ecx
  40877c:	and    BYTE PTR [edx+0x7a2c9bee],cl
  408782:	adc    al,0x5f
  408784:	pop    ebx
  408785:	int3   
  408786:	xor    eax,0xda78fc84
  40878b:	mov    ds:0x93c651e,eax
  408790:	into   
  408791:	mov    esi,0xf26cda59
  408796:	enter  0x3213,0x4d
  40879a:	pop    ebp
  40879b:	xchg   esp,eax
  40879c:	scas   eax,DWORD PTR es:[edi]
  40879d:	ds (bad) 
  40879f:	hlt    
  4087a0:	pop    ecx
  4087a1:	lods   al,BYTE PTR ds:[esi]
  4087a2:	pop    edx
  4087a3:	arpl   cx,bp
  4087a5:	in     al,dx
  4087a6:	jbe    0x40877a
  4087a8:	pop    ebp
  4087a9:	loop   0x40882a
  4087ab:	push   edx
  4087ac:	inc    esp
  4087ad:	xchg   esp,eax
  4087ae:	and    BYTE PTR [eax+0x42],dl
  4087b1:	shl    ebp,cl
  4087b3:	cmp    BYTE PTR [ebx-0x46],dh
  4087b6:	call   0x9844:0x21826840
  4087bd:	jns    0x408760
  4087bf:	imul   ebx,DWORD PTR [edi-0xc],0x6e
  4087c3:	popf   
  4087c4:	sub    DWORD PTR [eax+0x24],ecx
  4087c7:	loop   0x40881e
  4087c9:	add    eax,0x2697a067
  4087ce:	mov    bh,0xc
  4087d0:	dec    edx
  4087d1:	into   
  4087d2:	ss and eax,0x445d881c
  4087d8:	xor    ah,BYTE PTR [ebx+0x3c]
  4087db:	aas    
  4087dc:	adc    eax,DWORD PTR [ebp+0x756d7f9f]
  4087e2:	add    eax,0x91d91676
  4087e8:	mov    ds:0x17fd1399,al
  4087ed:	into   
  4087ee:	out    dx,eax
  4087ef:	fcmovnbe st,st(7)
  4087f1:	inc    BYTE PTR ds:[esi+0x38]
  4087f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f6:	push   esp
  4087f7:	fbld   TBYTE PTR [ecx+0x21c66dd2]
  4087fd:	in     al,0x66
  4087ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408800:	push   0xffffffb2
  408802:	jb     0x4087a4
  408804:	ds add edi,ebx
  408807:	inc    edi
  408808:	xor    al,0xa0
  40880a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40880b:	adc    dh,bl
  40880d:	adc    BYTE PTR [eax+0x2f8ef222],ch
  408813:	out    0xd1,al
  408815:	in     eax,dx
  408816:	in     al,dx
  408817:	pop    ss
  408818:	cdq    
  408819:	cwde   
  40881a:	adc    ch,BYTE PTR [ebx+0x5a]
  40881d:	jl     0x4087dc
  40881f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408820:	in     al,dx
  408821:	or     ebp,edi
  408823:	lea    ebx,[ebx-0x7d]
  408826:	sbb    edi,ebp
  408828:	mov    edx,0xdfc21fef
  40882d:	jmp    0x42894920
  408832:	jnp    0x40882c
  408834:	cmp    DWORD PTR [eax],0x312a76b9
  40883a:	(bad)  [ecx+0x60]
  40883d:	cmp    eax,0x577c3d5b
  408842:	nop
  408843:	or     al,0xd0
  408845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408846:	rol    BYTE PTR [eax],1
  408848:	adc    al,BYTE PTR [ecx+0x11f281f7]
  40884e:	adc    edx,DWORD PTR [esi+0x77b9e941]
  408854:	add    eax,0xbb6e6308
  408859:	js     0x40889b
  40885b:	pop    ds
  40885c:	fimul  WORD PTR [ecx-0x13b078a9]
  408862:	mov    dl,0xc4
  408864:	sbb    BYTE PTR [esi-0x1231bca],al
  40886a:	mov    DWORD PTR [ecx],ebp
  40886c:	cmp    bl,BYTE PTR ds:0xe046beef
  408872:	jb     0x4088f1
  408874:	add    esp,DWORD PTR [esi]
  408876:	imul   esi,DWORD PTR [ecx],0x37
  408879:	push   esp
  40887a:	cmc    
  40887b:	loop   0x4088d2
  40887d:	dec    ebp
  40887e:	fld    TBYTE PTR [edx+0xb603b4d]
  408884:	push   esi
  408885:	ds add eax,0xdb2f1de
  40888b:	les    esi,FWORD PTR [ebp+0x1]
  40888e:	(bad)  
  40888f:	mov    ds:0x22e30e5d,eax
  408894:	test   al,0x75
  408896:	cmp    dh,bl
  408898:	jle    0x4088c5
  40889a:	mov    ah,dl
  40889c:	cwde   
  40889d:	dec    edx
  40889e:	dec    esi
  40889f:	adc    eax,0x4bde271
  4088a4:	sbb    eax,0x68a99396
  4088a9:	xchg   esp,eax
  4088aa:	adc    eax,0xf7f94421
  4088af:	leave  
  4088b0:	dec    ebp
  4088b1:	and    DWORD PTR [edi],eax
  4088b3:	std    
  4088b4:	jmp    0x49df:0x7fa3b511
  4088bb:	jp     0x408900
  4088bd:	mov    ebp,DWORD PTR [esi+0x617f8980]
  4088c3:	cs ss inc esp
  4088c6:	mov    esi,0xf65c30
  4088cb:	jnp    0x408877
  4088cd:	pop    esp
  4088ce:	inc    edi
  4088cf:	adc    eax,0x956ea689
  4088d4:	adc    edi,DWORD PTR [ebx+0x597c33dd]
  4088da:	(bad)  
  4088db:	leave  
  4088dc:	push   esi
  4088dd:	xchg   ebx,eax
  4088de:	in     al,0xf3
  4088e0:	or     esi,DWORD PTR [ebp+0x50]
  4088e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088e4:	mov    eax,ds:0x482af6a4
  4088e9:	aad    0x2c
  4088eb:	adc    ch,BYTE PTR [ebp+0x1f]
  4088ee:	ret    
  4088ef:	retf   
  4088f0:	xchg   BYTE PTR [ecx-0x4bfc536b],dl
  4088f6:	scas   al,BYTE PTR es:[edi]
  4088f7:	inc    esi
  4088f8:	xor    DWORD PTR [bx],0xfd75943d
  4088ff:	cld    
  408900:	sbb    cl,ch
  408902:	(bad)  
  408903:	sub    al,0xc5
  408905:	scas   al,BYTE PTR es:[edi]
  408906:	jae    0x408912
  408908:	push   esi
  408909:	fidiv  DWORD PTR [ecx-0x24941136]
  40890f:	inc    ebx
  408910:	mov    eax,fs:0x59a90040
  408916:	pop    ecx
  408917:	stos   DWORD PTR es:[edi],eax
  408918:	sub    bl,BYTE PTR [ebx]
  40891a:	sti    
  40891b:	rol    BYTE PTR [edi],0x5
  40891e:	pop    eax
  40891f:	int3   
  408920:	mov    al,ds:0x4db39990
  408925:	cmp    DWORD PTR [edx],eax
  408927:	pop    esi
  408928:	and    dh,cl
  40892a:	push   eax
  40892b:	stos   BYTE PTR es:[edi],al
  40892c:	mov    ds:0x50d9926,al
  408931:	ss push ds
  408933:	mov    bl,BYTE PTR [ecx]
  408935:	pop    esp
  408936:	fdiv   QWORD PTR [ebx]
  408938:	xor    BYTE PTR [ebx+ecx*8-0xf05c31c],bh
  40893f:	push   edx
  408940:	cs scas al,BYTE PTR es:[edi]
  408942:	cmp    esp,DWORD PTR [eax+edx*1]
  408945:	lock rcl BYTE PTR [edx+eax*1],0x69
  40894a:	(bad)  
  40894b:	xchg   eax,ebp
  40894d:	leave  
  40894e:	in     eax,0xc4
  408950:	stos   BYTE PTR es:[edi],al
  408951:	pushf  
  408952:	or     eax,0x1f026de
  408957:	dec    ebx
  408958:	sub    esp,DWORD PTR [ebx-0x41]
  40895b:	pop    ss
  40895c:	aam    0xc1
  40895e:	stos   BYTE PTR es:[edi],al
  40895f:	lods   al,BYTE PTR ds:[esi]
  408960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408961:	ss scas eax,DWORD PTR es:[edi]
  408963:	xchg   esi,eax
  408964:	xlat   BYTE PTR ds:[ebx]
  408965:	mov    ebx,fs
  408967:	mov    cl,0xe3
  408969:	jbe    0x40891d
  40896b:	jp     0x4088f7
  40896d:	cmp    BYTE PTR gs:[ebx+0x13e2c6de],cl
  408974:	adc    BYTE PTR [ecx],0x17
  408977:	jl     0x408959
  408979:	mov    eax,0x2883f453
  40897e:	jg     0x40898e
  408980:	pop    esp
  408981:	mov    dl,0xb5
  408983:	mov    ah,0x15
  408985:	ret    0x8992
  408988:	cdq    
  408989:	rol    BYTE PTR [edx+esi*4+0x3c],1
  40898d:	dec    edx
  40898e:	sub    DWORD PTR fs:[esi+eax*4+0x28],ebx
  408993:	ror    DWORD PTR [edi-0x1f],1
  408996:	mov    ecx,0x43d0cd22
  40899b:	or     ecx,DWORD PTR [eax-0x3559228d]
  4089a1:	xchg   ecx,eax
  4089a2:	jns    0x4089d0
  4089a4:	mov    cl,0xfb
  4089a6:	rol    bl,1
  4089a8:	call   0x9588:0x9e615537
  4089af:	sbb    BYTE PTR [esi+ebx*2-0x53ad9b6b],dh
  4089b6:	bound  ecx,QWORD PTR [ebx+0x2c]
  4089b9:	cmp    al,0x1e
  4089bb:	ror    ecx,0x49
  4089be:	cli    
  4089bf:	mov    DWORD PTR [eax+0x3c],eax
  4089c2:	mov    edi,0x55b23173
  4089c7:	ds ds jae 0x408a32
  4089cb:	into   
  4089cc:	shr    bl,1
  4089ce:	adc    DWORD PTR [edi],ebx
  4089d0:	loop   0x408a07
  4089d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089d3:	push   ebx
  4089d4:	jle    0x408a34
  4089d6:	ror    BYTE PTR [ebp-0x78754fde],cl
  4089dc:	mov    ecx,0x4561e6dd
  4089e1:	fstp   DWORD PTR [edx-0x62]
  4089e4:	mov    esp,0x1dbf0c8f
  4089e9:	dec    edx
  4089ea:	cmp    bh,dl
  4089ec:	mov    al,0x63
  4089ee:	daa    
  4089ef:	sbb    edi,DWORD PTR [edx-0x4c]
  4089f2:	inc    esi
  4089f3:	call   0x84ae:0x426d3217
  4089fa:	jecxz  0x408a24
  4089fc:	sti    
  4089fd:	retf   0x44b3
  408a00:	mov    dl,0x9e
  408a02:	ret    
  408a03:	iret   
  408a04:	fsubr  st,st(6)
  408a06:	cwde   
  408a07:	stos   DWORD PTR es:[edi],eax
  408a08:	frstor [ebp+0xd9c6e43]
  408a0e:	cdq    
  408a0f:	inc    ecx
  408a10:	lods   al,BYTE PTR ds:[esi]
  408a11:	cmc    
  408a12:	lods   eax,DWORD PTR ds:[esi]
  408a13:	inc    ecx
  408a14:	ret    0xdc2b
  408a17:	pop    ebx
  408a18:	call   0x45a1:0xc6c6fed
  408a1f:	jmp    FWORD PTR [edx+0x22b02937]
  408a25:	(bad)  
  408a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a27:	mov    ebx,0xfdf6cf1b
  408a2c:	inc    ebp
  408a2d:	arpl   bp,sp
  408a2f:	cwde   
  408a30:	mov    ah,BYTE PTR [ecx]
  408a32:	adc    BYTE PTR [ecx],dh
  408a34:	stos   DWORD PTR es:[edi],eax
  408a35:	call   0x44cd361f
  408a3a:	(bad)  
  408a3b:	(bad)  
  408a3d:	mov    ds:0xb11bc467,eax
  408a42:	ficom  DWORD PTR [ebx+0x27]
  408a45:	clc    
  408a46:	sti    
  408a47:	mov    bl,0x78
  408a49:	ret    0x151
  408a4c:	into   
  408a4d:	ret    
  408a4e:	outs   dx,DWORD PTR ds:[esi]
  408a4f:	add    DWORD PTR [ebx+0x1422883b],eax
  408a55:	enter  0xcfbf,0x86
  408a59:	and    edx,DWORD PTR [edx-0x14040b28]
  408a5f:	clc    
  408a60:	div    DWORD PTR [ebp+ecx*4-0x4a]
  408a64:	sbb    eax,0xbf7207f3
  408a69:	sbb    cl,BYTE PTR [esi+0x2b]
  408a6c:	div    DWORD PTR [ebx]
  408a6e:	xchg   esi,ebp
  408a70:	inc    ecx
  408a71:	arpl   bp,dx
  408a73:	mov    edi,0xa7fe93a1
  408a78:	dec    edi
  408a79:	push   ss
  408a7a:	repz (bad) 
  408a7c:	push   ebx
  408a7d:	int    0x7e
  408a7f:	in     al,0x74
  408a81:	data16 sub ch,BYTE PTR [ebp+0x6e]
  408a85:	out    dx,al
  408a86:	and    BYTE PTR [esi-0x6297b36c],0xf2
  408a8d:	sub    esi,DWORD PTR [ebx+0x21ad0557]
  408a93:	ror    DWORD PTR [eax],0x33
  408a96:	jne    0x408a99
  408a98:	(bad)  
  408a99:	into   
  408a9a:	mov    esp,0x622865f6
  408a9f:	ja     0x408aff
  408aa1:	lods   eax,DWORD PTR ds:[esi]
  408aa2:	xchg   ebp,eax
  408aa3:	out    0x7f,eax
  408aa5:	push   esp
  408aa6:	xor    al,0xc4
  408aa8:	aaa    
  408aa9:	cld    
  408aaa:	ret    
  408aab:	aad    0x66
  408aad:	clc    
  408aae:	jmp    0x408a40
  408ab0:	mov    es,edx
  408ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab3:	es ret 0x7cd8
  408ab7:	push   es
  408ab8:	inc    edi
  408ab9:	pop    ss
  408aba:	sub    eax,0x9ad415c1
  408abf:	int    0x15
  408ac1:	leave  
  408ac2:	mov    dl,0xbb
  408ac4:	cmp    ebx,0xa
  408ac7:	mov    ds:0x39691e41,al
  408acc:	mov    ds:0xbf2d8259,eax
  408ad1:	cmp    al,0x27
  408ad3:	adc    BYTE PTR [esi],dh
  408ad5:	loop   0x408af9
  408ad7:	mov    ds:0x53a5209d,eax
  408adc:	xchg   ebp,eax
  408add:	xlat   BYTE PTR ds:[ebx]
  408ade:	retf   
  408adf:	push   ds
  408ae0:	adc    ah,BYTE PTR [ebp+ebx*1+0x4d]
  408ae4:	mov    edi,0x3b6ca009
  408ae9:	adc    al,0x36
  408aeb:	test   DWORD PTR [ecx],esp
  408aed:	mov    bh,0x81
  408aef:	aad    0xa
  408af1:	or     ebp,DWORD PTR [ecx]
  408af3:	out    dx,eax
  408af4:	xchg   BYTE PTR [esi-0x61846d9a],bl
  408afa:	inc    esp
  408afb:	cdq    
  408afc:	mov    edi,0x85e9aa7c
  408b01:	xor    ebx,DWORD PTR [edx+0xb7486fe]
  408b07:	pop    ebx
  408b08:	mov    WORD PTR [ebx+0x1348384a],es
  408b0e:	pop    ds
  408b0f:	push   ss
  408b10:	test   eax,0x6e10b3ad
  408b15:	xchg   edi,eax
  408b16:	push   edx
  408b17:	vpsrlq ymm7,ymm7,XMMWORD PTR [ecx+0x3ad91992]
  408b1f:	adc    BYTE PTR [edx-0x7],0x6e
  408b23:	loopne 0x408b32
  408b25:	or     eax,0x18fb3503
  408b2a:	mov    esp,0xd6128914
  408b2f:	dec    eax
  408b30:	out    0xfc,eax
  408b32:	test   esp,ebp
  408b34:	xor    DWORD PTR [esi+edx*8-0x6d],esp
  408b38:	push   ds
  408b39:	out    0xe2,al
  408b3b:	fnstsw WORD PTR [ecx+0x4e]
  408b3e:	shr    ch,0x45
  408b41:	fdivrp st(0),st
  408b43:	sbb    cl,BYTE PTR [ecx+0x23aab132]
  408b49:	outs   dx,BYTE PTR ds:[esi]
  408b4a:	adc    DWORD PTR [edx+0x487e0239],ebx
  408b50:	pushf  
  408b51:	sbb    dh,BYTE PTR [edi+ebx*4]
  408b54:	cmp    DWORD PTR [edx+0x263b00f],ebp
  408b5a:	mov    esi,0x9257179e
  408b5f:	xchg   ebp,eax
  408b60:	xchg   ecx,eax
  408b61:	sbb    al,0x83
  408b63:	jbe    0x408b5c
  408b65:	push   eax
  408b66:	clc    
  408b67:	pusha  
  408b68:	(bad)  
  408b69:	adc    edi,DWORD PTR [esi]
  408b6b:	je     0x408bea
  408b6d:	jg     0x4a59296e
  408b73:	jo     0x408b97
  408b75:	adc    eax,0xc97f5458
  408b7a:	nop    DWORD PTR [ebp+0x7f]
  408b7e:	fcmovbe st,st(3)
  408b80:	add    ecx,DWORD PTR [ecx-0x7d]
  408b83:	les    esp,FWORD PTR [eax+0x3f]
  408b86:	pop    edi
  408b87:	sbb    al,0xce
  408b89:	fs nop
  408b8b:	sbb    DWORD PTR [ebx-0x769ff6eb],0x66f3644a
  408b95:	add    BYTE PTR [edx+0x39098502],bl
  408b9b:	xchg   edx,eax
  408b9c:	sbb    DWORD PTR [edi-0x2aada8fb],edi
  408ba2:	data16 jns 0x408b2f
  408ba5:	jnp    0x408c0c
  408ba7:	stos   BYTE PTR es:[edi],al
  408ba8:	popa   
  408ba9:	cmp    DWORD PTR [ecx-0x50],esi
  408bac:	in     eax,dx
  408bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bae:	retf   
  408baf:	lods   eax,DWORD PTR ds:[esi]
  408bb0:	out    dx,eax
  408bb1:	ds jge 0x408b9f
  408bb4:	sub    dh,bl
  408bb6:	xor    ecx,DWORD PTR [eax]
  408bb8:	xor    edi,DWORD PTR [eax+0x7bad26e0]
  408bbe:	mov    esi,0xfdaa0db
  408bc3:	leave  
  408bc4:	cmp    edx,edx
  408bc6:	jne    0x408bb7
  408bc8:	popa   
  408bc9:	sbb    BYTE PTR [ebp+0x3b],bl
  408bcc:	std    
  408bcd:	sbb    DWORD PTR [ebp+0x3d86ff6a],esi
  408bd3:	inc    esi
  408bd4:	fnstenv [ebx+0x260b7386]
  408bda:	popf   
  408bdb:	cdq    
  408bdc:	and    edx,edi
  408bde:	push   esp
  408bdf:	sbb    bh,BYTE PTR [eax+0x52]
  408be2:	rcl    DWORD PTR [eax+0x3284e6f8],cl
  408be8:	add    BYTE PTR [ebp+0x2e068536],0xd0
  408bef:	call   0x16f9f379
  408bf4:	pop    es
  408bf5:	stos   BYTE PTR es:[edi],al
  408bf6:	pop    eax
  408bf7:	aas    
  408bf8:	rol    DWORD PTR [ecx+0x62],1
  408bfb:	sub    DWORD PTR [ebp-0x1d4bda43],esi
  408c01:	or     BYTE PTR [esi+0x2b],bh
  408c04:	les    ebx,FWORD PTR [ebp+0x7f1efec7]
  408c0a:	test   al,0xc
  408c0c:	and    cl,BYTE PTR [edi]
  408c0e:	and    DWORD PTR [ecx+0xbb57a9e],ecx
  408c14:	pop    ebp
  408c15:	inc    edi
  408c16:	call   DWORD PTR [ebp+0x2e93a512]
  408c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c1d:	repz sbb eax,0x4402b429
  408c23:	xchg   ecx,eax
  408c24:	sti    
  408c25:	xlat   BYTE PTR ds:[ebx]
  408c26:	mov    eax,es:0xca8d42cb
  408c2c:	lahf   
  408c2d:	sbb    dh,cl
  408c2f:	cmp    DWORD PTR [esi+0x4f],esp
  408c32:	pop    ds
  408c33:	adc    BYTE PTR [edx-0x27191b27],ch
  408c39:	call   0xfeada704
  408c3e:	push   0x12
  408c40:	cmp    BYTE PTR [edi+0x1a],cl
  408c43:	mov    eax,ds:0x89396d53
  408c48:	mov    edx,DWORD PTR [ebp-0x53]
  408c4b:	xor    al,al
  408c4d:	cmp    eax,0xfa1bc9a8
  408c52:	mov    ?,ebx
  408c54:	loop   0x408c33
  408c56:	cmp    DWORD PTR [ecx+0x8],ebp
  408c59:	repz ret 0x9521
  408c5d:	pop    esi
  408c5e:	(bad)  
  408c5f:	std    
  408c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c61:	mov    eax,ds:0x321b991b
  408c66:	(bad)  
  408c68:	call   0x44ca:0x448b3fcf
  408c6f:	cmp    bh,BYTE PTR [ecx]
  408c71:	jno    0x408ca3
  408c73:	jno    0x408c92
  408c75:	popf   
  408c76:	dec    eax
  408c77:	mov    es,WORD PTR [ebp-0x27644315]
  408c7d:	ja     0x408ca2
  408c7f:	inc    eax
  408c80:	fnclex 
  408c82:	add    esi,ebx
  408c84:	int3   
  408c85:	inc    ebx
  408c86:	mov    BYTE PTR [ecx+0x29d85bc8],al
  408c8c:	paddd  mm5,QWORD PTR [ebx]
  408c8f:	xchg   ecx,eax
  408c90:	jns    0x408ca0
  408c92:	push   ecx
  408c93:	mov    eax,ds:0x4a9f13ff
  408c98:	push   esp
  408c99:	rcl    BYTE PTR [ebx+0x4a578ea4],0x11
  408ca0:	js     0x408ce3
  408ca2:	mov    esp,0xe0cdab0
  408ca7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408ca9:	xchg   BYTE PTR [ebp-0x4df0b699],bl
  408caf:	inc    ebx
  408cb0:	cli    
  408cb1:	mov    esp,0xaabc6b61
  408cb6:	dec    esp
  408cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cb8:	(bad)  
  408cb9:	push   ss
  408cba:	mov    edx,0xafc77172
  408cbf:	sti    
  408cc0:	sub    ecx,ebx
  408cc2:	jp     0x408cd7
  408cc4:	into   
  408cc5:	std    
  408cc6:	cwd    
  408cc8:	daa    
  408cc9:	(bad)  [ebx]
  408ccb:	adc    BYTE PTR [edi],bh
  408ccd:	pop    edi
  408cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ccf:	pop    es
  408cd0:	fwait
  408cd1:	dec    eax
  408cd2:	jne    0x408c56
  408cd4:	pop    edi
  408cd5:	push   ebp
  408cd6:	mov    al,ds:0xb2bcea0e
  408cdb:	or     ch,BYTE PTR [ebx-0x75c3f3c]
  408ce1:	pop    ebp
  408ce2:	jmp    0x408d45
  408ce4:	out    dx,eax
  408ce5:	dec    ebx
  408ce6:	fiadd  DWORD PTR [edx-0x6f72b80d]
  408cec:	adc    al,0xbd
  408cee:	aad    0xd5
  408cf0:	push   0x1f
  408cf2:	stos   DWORD PTR es:[edi],eax
  408cf3:	cmp    al,0x7e
  408cf5:	std    
  408cf6:	sbb    edi,DWORD PTR [edi+esi*1]
  408cf9:	cmp    eax,DWORD PTR [edx-0xf637974]
  408cff:	mov    ebx,0xf5c4adb6
  408d04:	bound  edx,QWORD PTR [ecx]
  408d06:	mov    ah,0x27
  408d08:	xor    BYTE PTR [esi],bl
  408d0a:	ds dec eax
  408d0c:	mov    ebx,DWORD PTR [esi]
  408d0e:	mov    esi,0x9634bf92
  408d13:	sti    
  408d14:	xor    eax,0x2f72b404
  408d19:	in     al,0xe1
  408d1b:	sar    DWORD PTR [edx-0x1e8a5947],cl
  408d21:	fild   WORD PTR [esi+esi*8+0x1032febf]
  408d28:	jp     0x408d05
  408d2a:	stos   BYTE PTR es:[edi],al
  408d2b:	jno    0x408cca
  408d2d:	gs xor al,bh
  408d30:	mov    al,ds:0x3c96f0f6
  408d35:	or     edx,DWORD PTR [esi+0x2fee1b4f]
  408d3b:	iret   
  408d3c:	mov    dl,0xb3
  408d3e:	test   al,0x28
  408d40:	imul   ebp,DWORD PTR [esi-0x66],0x12d5a552
  408d47:	jmp    0x9ed4:0x9ea42937
  408d4e:	xor    cl,cl
  408d50:	out    0x92,al
  408d52:	call   0x5232:0xc96607d4
  408d59:	leave  
  408d5a:	jo     0x408d4b
  408d5c:	ffreep st(2)
  408d5e:	xor    eax,DWORD PTR [edi+0x335bc43e]
  408d64:	out    dx,al
  408d65:	aaa    
  408d66:	mov    cl,0x7a
  408d68:	mov    cs,edi
  408d6a:	mov    dh,0x92
  408d6c:	push   ecx
  408d6d:	out    0x1a,eax
  408d6f:	inc    ebp
  408d70:	and    ebx,DWORD PTR [esi-0xfa28e12]
  408d76:	dec    ebp
  408d77:	xor    bl,dh
  408d79:	cwde   
  408d7a:	pop    esi
  408d7b:	aas    
  408d7c:	stos   DWORD PTR es:[edi],eax
  408d7d:	pop    ss
  408d7e:	inc    ebp
  408d7f:	mov    esi,0x7bf2cd2e
  408d84:	into   
  408d85:	iret   
  408d86:	div    BYTE PTR [ebx]
  408d88:	mov    bh,BYTE PTR [ebx]
  408d8a:	mov    ebp,0x2848a6f3
  408d8f:	sub    bh,cl
  408d91:	jno    0x408d55
  408d93:	xchg   esi,eax
  408d94:	xchg   ecx,eax
  408d95:	iret   
  408d96:	adc    eax,0xc7a72890
  408d9b:	test   eax,0xa8835d3a
  408da0:	add    BYTE PTR [edi],bh
  408da2:	dec    esp
  408da3:	ret    0x18e2
  408da6:	push   0x957343fa
  408dab:	stc    
  408dac:	out    0x2d,eax
  408dae:	jo     0x408d7b
  408db0:	call   0x666a:0x9c61979e
  408db7:	jo     0x408df2
  408db9:	pop    es
  408dba:	pop    ebx
  408dbb:	pop    edi
  408dbc:	cmp    DWORD PTR [eax+0x63],esp
  408dbf:	dec    eax
  408dc0:	aaa    
  408dc1:	sahf   
  408dc2:	sbb    edx,DWORD PTR [edi]
  408dc4:	cmp    bl,al
  408dc6:	inc    esp
  408dc7:	mov    dl,0xb0
  408dc9:	cli    
  408dca:	retf   
  408dcb:	mov    ebx,0xa7a9ab09
  408dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dd1:	popa   
  408dd2:	lahf   
  408dd3:	rol    BYTE PTR ds:0x11ff3134,cl
  408dd9:	add    esi,DWORD PTR [esi-0x21]
  408ddc:	loopne 0x408e2d
  408dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ddf:	fsub   DWORD PTR [eax]
  408de1:	test   BYTE PTR [eax-0x4d],bl
  408de4:	cdq    
  408de5:	out    0x94,eax
  408de7:	loop   0x408d75
  408de9:	push   esi
  408dea:	icebp  
  408deb:	cmp    ecx,DWORD PTR [eax]
  408ded:	daa    
  408dee:	imul   ebp,ecx,0x35ad82c9
  408df4:	outs   dx,DWORD PTR ds:[esi]
  408df5:	ins    BYTE PTR es:[edi],dx
  408df6:	arpl   WORD PTR [ebx+0x1b8c6feb],sp
  408dfc:	in     eax,0x3e
  408dfe:	add    bl,dh
  408e00:	pop    ds
  408e01:	inc    esp
  408e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e03:	popa   
  408e04:	mov    al,0x65
  408e06:	mov    edi,0x99206af9
  408e0b:	enter  0x4849,0xa5
  408e0f:	push   0x37
  408e11:	(bad)  
  408e12:	cli    
  408e13:	sbb    DWORD PTR gs:[eax],esi
  408e16:	adc    ecx,ecx
  408e18:	(bad)  
  408e19:	pop    edx
  408e1a:	test   DWORD PTR ds:0x14377541,ebp
  408e20:	cld    
  408e21:	and    DWORD PTR [edx+0x28],0x1a
  408e25:	cmp    al,0x1a
  408e27:	add    eax,0xa4dacb7e
  408e2c:	outs   dx,DWORD PTR ds:[esi]
  408e2d:	daa    
  408e2e:	mov    esi,0x10b06e35
  408e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e34:	fidivr WORD PTR [eax-0x7]
  408e37:	sub    esp,DWORD PTR [esi+ecx*4]
  408e3a:	cmp    BYTE PTR [ebx+0xa],dl
  408e3d:	mov    bl,BYTE PTR [eax+0x3321477]
  408e43:	ret    0x4cb6
  408e46:	mov    ah,0x9f
  408e48:	xchg   esi,eax
  408e49:	pop    edi
  408e4a:	jmp    0x61daf151
  408e4f:	in     eax,dx
  408e50:	les    eax,FWORD PTR [esi-0x7e]
  408e53:	test   al,0x58
  408e55:	add    cl,BYTE PTR [ecx]
  408e57:	push   0x2c
  408e59:	jmp    0xfbb20860
  408e5e:	mov    ecx,0x4f5d9d07
  408e63:	fidiv  DWORD PTR [eax]
  408e65:	retf   
  408e66:	mov    eax,0x136c1cc8
  408e6b:	mov    ebx,DWORD PTR [esi-0x5c]
  408e6e:	mov    BYTE PTR [edx+0x5c],dh
  408e71:	std    
  408e72:	sub    eax,0x20d112fd
  408e77:	into   
  408e78:	js     0x408e1f
  408e7a:	add    al,0x6d
  408e7c:	lea    ebx,[eax+0x55]
  408e7f:	dec    edx
  408e80:	mov    eax,0x5d403be6
  408e85:	scas   al,BYTE PTR es:[edi]
  408e86:	int    0xfb
  408e88:	sbb    eax,0x59153891
  408e8d:	shl    dh,1
  408e8f:	add    edi,DWORD PTR [ebx-0x76]
  408e92:	or     eax,0xcf86b7ac
  408e97:	ficomp DWORD PTR [eax-0x3f]
  408e9a:	sbb    BYTE PTR [ecx+0x64af55a7],cl
  408ea0:	adc    al,0xe0
  408ea2:	mov    ebp,0x85c075e6
  408ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ea8:	pop    es
  408ea9:	ret    
  408eaa:	jbe    0x408ee0
  408eac:	out    dx,al
  408ead:	inc    ebx
  408eae:	mov    bl,0xf4
  408eb0:	adc    eax,0xcf8cbea3
  408eb5:	loop   0x408f00
  408eb7:	xchg   esi,eax
  408eb8:	outs   dx,DWORD PTR ds:[esi]
  408eb9:	mov    ?,WORD PTR [esi+edx*4+0x3d]
  408ebd:	fstp   TBYTE PTR [edi+0x73]
  408ec0:	xchg   esp,eax
  408ec1:	hlt    
  408ec2:	mov    ecx,0x33c9240d
  408ec7:	xor    bh,cl
  408ec9:	jge    0x408e9a
  408ecb:	sbb    eax,0xfa941322
  408ed0:	add    al,0x4
  408ed2:	inc    ebp
  408ed3:	(bad)  
  408ed4:	(bad)  
  408ed5:	jmp    0x408e5c
  408ed7:	(bad)  
  408ed8:	and    cl,BYTE PTR [ebx-0x57af4c2a]
  408ede:	(bad)  
  408edf:	jge    0x408eb2
  408ee1:	xchg   BYTE PTR [edx],cl
  408ee3:	xchg   ebp,eax
  408ee4:	mov    ds:0xe7f9c54b,eax
  408ee9:	sub    BYTE PTR [edx+edi*8-0x7],al
  408eed:	call   0x3e45:0x753cfce8
  408ef4:	mov    bh,BYTE PTR [esi+0x1b595475]
  408efa:	mov    ds:0x517926a0,al
  408eff:	or     al,0x61
  408f01:	jp     0x408ee0
  408f03:	inc    esi
  408f04:	icebp  
  408f05:	pop    ecx
  408f06:	imul   edx,DWORD PTR [edi+0x205d1b3f],0xffffffca
  408f0d:	outs   dx,BYTE PTR ds:[esi]
  408f0e:	mov    ecx,0x8753885a
  408f13:	imul   edx
  408f15:	mov    ecx,0xf2dba82e
  408f1a:	push   ss
  408f1b:	ret    0xce4c
  408f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f1f:	(bad)  
  408f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f21:	mov    ah,0x3a
  408f23:	sub    BYTE PTR [edx-0x2],bl
  408f26:	nop
  408f27:	add    bl,BYTE PTR [edi]
  408f29:	pop    edi
  408f2a:	retf   
  408f2b:	loop   0x408ec7
  408f2d:	pusha  
  408f2e:	mov    WORD PTR [esp+eax*4+0x63736300],cs
  408f35:	in     al,0x56
  408f37:	xor    eax,0x61f776bf
  408f3c:	inc    esp
  408f3d:	mov    al,0x79
  408f3f:	mov    es,WORD PTR [esi-0x4acc2c1f]
  408f45:	icebp  
  408f46:	(bad)
  408f49:	cmp    dh,ch
  408f4b:	jo     0x408fb4
  408f4d:	adc    dl,ch
  408f4f:	sbb    eax,0x2070a940
  408f54:	out    0x17,eax
  408f56:	shl    BYTE PTR [ecx],0x41
  408f59:	add    ch,BYTE PTR [edx-0x21]
  408f5c:	scas   eax,DWORD PTR es:[edi]
  408f5d:	bound  esi,QWORD PTR [ecx-0x5a]
  408f60:	mov    ebp,DWORD PTR [edi+0x3cdea9ac]
  408f66:	mul    BYTE PTR [ebx+0x64bf5e81]
  408f6c:	(bad)  
  408f6d:	mov    al,ds:0x9f8846d
  408f72:	(bad)  
  408f73:	cmc    
  408f74:	repz fucomi st,st(1)
  408f77:	dec    edi
  408f78:	inc    ebp
  408f79:	cmp    dl,dh
  408f7b:	inc    edx
  408f7c:	cmp    eax,0xae889691
  408f81:	lahf   
  408f82:	or     bl,BYTE PTR [eax+edi*1-0x4e]
  408f86:	scas   al,BYTE PTR es:[edi]
  408f87:	sbb    al,0x11
  408f89:	dec    esp
  408f8a:	jo     0x408f3b
  408f8c:	loopne 0x408fcd
  408f8e:	ins    DWORD PTR es:[edi],dx
  408f8f:	mov    al,ds:0xbbf25295
  408f94:	rcr    DWORD PTR [esi+edi*1],0x60
  408f98:	lods   al,BYTE PTR ds:[esi]
  408f99:	xchg   edx,eax
  408f9a:	push   es
  408f9b:	ficomp DWORD PTR [ebp+0x1d]
  408f9e:	cmp    al,0x2b
  408fa0:	pop    esi
  408fa1:	stos   DWORD PTR es:[edi],eax
  408fa2:	sub    al,dh
  408fa4:	jo     0x408ffc
  408fa6:	stos   DWORD PTR es:[edi],eax
  408fa7:	les    edx,FWORD PTR [ebx]
  408fa9:	(bad)  [edx+0x7315558]
  408faf:	jg     0x408f9f
  408fb1:	jns    0x408fd4
  408fb3:	dec    ebp
  408fb4:	cmp    ebx,DWORD PTR [eax-0x149d5ff8]
  408fba:	(bad)
  408fbf:	push   0xffffffe0
  408fc1:	jnp    0x408fb3
  408fc3:	xor    cl,dh
  408fc5:	aaa    
  408fc6:	xor    ecx,DWORD PTR [esi]
  408fc8:	(bad)  
  408fc9:	es mov ebx,0x76ed6865
  408fcf:	or     DWORD PTR [edi+0x5e5ecce6],ebx
  408fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fd7:	pop    ecx
  408fd8:	cli    
  408fd9:	lahf   
  408fda:	and    BYTE PTR [eax+eiz*8-0x6199c999],bl
  408fe1:	loop   0x408ff2
  408fe3:	or     al,BYTE PTR [edi-0x411d2b2c]
  408fe9:	imul   edi,edx,0xffffffc2
  408fec:	clts   
  408fee:	data16 jne 0x408fc1
  408ff1:	arpl   cx,cx
  408ff3:	fs test dl,cl
  408ff6:	mov    al,ds:0x6b5bc12e
  408ffb:	jge    0x409029
  408ffd:	cmp    DWORD PTR [edi-0x4631a7e3],edx
  409003:	xor    al,0x62
  409005:	mov    edi,0x9406b59d
  40900a:	test   eax,0xbcda3ff4
  40900f:	ins    DWORD PTR es:[edi],dx
  409010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409011:	imul   ebx,edx,0x446594ad
  409017:	mov    esi,0x12b8f7d4
  40901c:	mov    edx,0x6573c17
  409021:	test   DWORD PTR [ebx+0x66],0xe3207f13
  409028:	gs xchg esi,eax
  40902a:	mov    ebx,0xfc92c685
  40902f:	xor    ecx,edx
  409031:	dec    esp
  409032:	inc    edx
  409033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409034:	fbstp  TBYTE PTR [esi-0x14]
  409037:	pop    eax
  409038:	mov    dh,0x9f
  40903a:	cmp    ch,BYTE PTR [ecx+0x12]
  40903d:	aas    
  40903e:	mov    edx,0x50dafbde
  409043:	push   edx
  409044:	test   DWORD PTR [ebp+esi*1+0x26e5c5b],esp
  40904b:	js     0x408ffd
  40904d:	push   eax
  40904e:	in     eax,0xd0
  409050:	ja     0x40904d
  409052:	retf   
  409053:	je     0x40906c
  409055:	scas   al,BYTE PTR es:[edi]
  409056:	test   cl,bh
  409058:	fs xchg si,ax
  40905b:	or     ch,ah
  40905d:	leave  
  40905e:	enter  0x7cc5,0x31
  409062:	test   BYTE PTR [edi+0x78],ah
  409065:	iret   
  409066:	arpl   WORD PTR [edx],dx
  409068:	fucomp st(5)
  40906a:	aaa    
  40906b:	mov    DWORD PTR [ecx],ecx
  40906d:	sub    al,BYTE PTR [edx+0x9]
  409070:	jp     0x409051
  409072:	scas   eax,DWORD PTR es:[edi]
  409073:	push   edi
  409074:	mov    ecx,0x119086d5
  409079:	aaa    
  40907a:	jle    0x40905e
  40907c:	mov    cl,0xee
  40907e:	(bad)  
  40907f:	jle    0x4090b9
  409081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409082:	jns    0x409070
  409084:	ins    BYTE PTR es:[edi],dx
  409085:	adc    ebx,ebp
  409087:	popa   
  409088:	in     eax,0x45
  40908a:	(bad)  
  40908b:	loope  0x409088
  40908d:	stos   BYTE PTR es:[edi],al
  40908e:	xor    dh,dh
  409090:	mov    edi,0x6c4e8a46
  409095:	sub    edi,DWORD PTR [eax]
  409097:	xor    BYTE PTR [edx+0x20],bl
  40909a:	inc    edi
  40909b:	xchg   ebp,eax
  40909c:	mov    edx,0x5d6c1b56
  4090a1:	cwde   
  4090a2:	bound  ebx,QWORD PTR [esi+eiz*1]
  4090a5:	mov    esp,0x237a20f
  4090aa:	or     bh,BYTE PTR [ebx+eiz*2+0x66]
  4090ae:	pop    ebp
  4090af:	sbb    al,0x1c
  4090b1:	jnp    0x409082
  4090b3:	(bad)  
  4090b5:	das    
  4090b6:	daa    
  4090b7:	pop    esi
  4090b8:	xor    dl,ch
  4090ba:	cmp    BYTE PTR [edi+0x2de1bcb],bl
  4090c0:	daa    
  4090c1:	iret   
  4090c2:	neg    BYTE PTR [ebx-0x74]
  4090c5:	xchg   edi,eax
  4090c6:	sti    
  4090c7:	in     eax,dx
  4090c8:	mov    dl,al
  4090ca:	loope  0x4090eb
  4090cc:	sbb    eax,0xe7cb981b
  4090d1:	ror    DWORD PTR [edx-0xb],cl
  4090d4:	inc    esi
  4090d5:	jnp    0x409132
  4090d7:	push   cs
  4090d8:	shl    DWORD PTR [edx+eiz*4],1
  4090db:	mov    dh,0x9c
  4090dd:	rol    ebp,cl
  4090df:	jl     0x4090ea
  4090e1:	outs   dx,DWORD PTR ds:[esi]
  4090e2:	mov    al,ds:0x83cbefac
  4090e7:	popf   
  4090e8:	(bad)  
  4090e9:	jnp    0x409148
  4090eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ec:	pop    esi
  4090ed:	inc    ebp
  4090ee:	add    BYTE PTR [edi+0x7f],ch
  4090f1:	stos   BYTE PTR es:[edi],al
  4090f2:	jg     0x409083
  4090f4:	in     eax,0x50
  4090f6:	sub    bl,BYTE PTR [ebx]
  4090f8:	cs pop esp
  4090fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090fb:	lods   eax,DWORD PTR ds:[esi]
  4090fc:	mov    DWORD PTR [esi-0x2],ecx
  4090ff:	sbb    ecx,edx
  409101:	pop    es
  409102:	mov    bl,0x2b
  409104:	js     0x409173
  409106:	popf   
  409107:	sbb    eax,0x18233540
  40910c:	inc    ebx
  40910d:	dec    ecx
  40910e:	retf   0xaefc
  409111:	sub    BYTE PTR [ecx-0x5366a08f],ch
  409117:	std    
  409118:	stos   DWORD PTR es:[edi],eax
  409119:	xchg   BYTE PTR [ebp+0x3a411523],ch
  40911f:	xlat   BYTE PTR ds:[ebx]
  409120:	mov    eax,0x452f731d
  409125:	fdivr  DWORD PTR [eax+eiz*8-0x4e2bff1f]
  40912c:	pop    esi
  40912d:	stos   BYTE PTR es:[edi],al
  40912e:	sub    al,0x19
  409130:	outs   dx,BYTE PTR ds:[esi]
  409131:	push   esi
  409132:	bound  ecx,QWORD PTR fs:[edx+0x6c]
  409136:	adc    BYTE PTR [ecx+edi*2-0x766bb0bc],bl
  40913d:	sub    bh,BYTE PTR [bp+si+0x2e34]
  409142:	je     0x4090c9
  409144:	mov    edi,0xb0022ca8
  409149:	pusha  
  40914a:	push   cs
  40914b:	out    0xe0,al
  40914d:	cmp    al,0xfa
  40914f:	adc    eax,0x3ec2ac42
  409154:	cmc    
  409155:	cmp    al,0x6c
  409157:	mov    cs,WORD PTR [ecx+0x1f22c06b]
  40915d:	xchg   dl,ch
  40915f:	mov    edx,DWORD PTR [edx]
  409161:	fnstenv [ecx]
  409163:	inc    ecx
  409164:	cmp    DWORD PTR [esi+0x66],0xef02465f
  40916b:	or     al,0xa
  40916d:	or     al,0x8d
  40916f:	(bad)  ds:0xc11eea77
  409175:	ficomp DWORD PTR [edi-0x2f]
  409178:	mov    ds:0xbb5e6094,eax
  40917d:	pop    esi
  40917e:	loope  0x40913a
  409180:	inc    ecx
  409181:	fimul  DWORD PTR [ecx+ebx*8+0x68bb0067]
  409188:	mov    al,0x26
  40918a:	jecxz  0x409110
  40918c:	loope  0x409200
  40918e:	and    ecx,esi
  409190:	outs   dx,BYTE PTR ds:[esi]
  409191:	dec    esi
  409192:	sub    DWORD PTR [edx],0x40ad77ae
  409198:	ins    BYTE PTR es:[edi],dx
  409199:	gs jb  0x409156
  40919c:	push   cs
  40919d:	inc    edx
  40919e:	xor    DWORD PTR [ebx-0x67e90ce9],ebp
  4091a4:	cmp    BYTE PTR [esi],ch
  4091a6:	xchg   dl,ch
  4091a8:	ret    
  4091a9:	cs adc eax,0x4afc8b3f
  4091af:	popf   
  4091b0:	jecxz  0x40917c
  4091b2:	fwait
  4091b3:	inc    esp
  4091b4:	sahf   
  4091b5:	and    bl,cl
  4091b7:	lahf   
  4091b8:	inc    esi
  4091b9:	shl    BYTE PTR [edi-0x61],cl
  4091bc:	jae    0x409181
  4091be:	sub    DWORD PTR [ebp-0x6955bb79],edx
  4091c4:	mov    edi,0x1384c87a
  4091c9:	sub    edi,DWORD PTR ds:0x828276ac
  4091cf:	sub    DWORD PTR [esi],edx
  4091d1:	shr    BYTE PTR [eax],1
  4091d3:	pop    esp
  4091d4:	mov    ah,0x37
  4091d6:	data16 xor dh,BYTE PTR [eax-0x29]
  4091da:	xchg   ecx,eax
  4091db:	lods   eax,DWORD PTR ds:[esi]
  4091dc:	scas   eax,DWORD PTR es:[edi]
  4091dd:	mov    ch,bh
  4091df:	test   ebx,eax
  4091e1:	lods   al,BYTE PTR ds:[esi]
  4091e2:	push   eax
  4091e3:	mov    ?,WORD PTR [edx+0x7c]
  4091e6:	pusha  
  4091e7:	xor    al,0x1a
  4091e9:	mov    bl,0x38
  4091eb:	cs fdiv st(5),st
  4091ee:	(bad)
  4091f1:	mov    bl,0x79
  4091f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f4:	dec    ebp
  4091f5:	pop    esp
  4091f6:	aad    0x51
  4091f8:	mov    al,0x2c
  4091fa:	jmp    0x40918a
  4091fc:	icebp  
  4091fd:	jmp    0x409212
  4091ff:	sub    ch,BYTE PTR [ecx]
  409201:	das    
  409202:	dec    eax
  409203:	mov    ebp,0xbb05606d
  409208:	retf   
  409209:	pop    ecx
  40920a:	in     eax,dx
  40920b:	sar    DWORD PTR [ecx+0x5d18d6db],1
  409211:	jmp    0x40921f
  409213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409214:	mov    WORD PTR [ebp+0x55],ss
  409217:	scas   eax,DWORD PTR es:[edi]
  409218:	fild   QWORD PTR [eax+0x21]
  40921b:	aad    0xec
  40921d:	pop    ds
  40921e:	push   edx
  40921f:	out    0x8,al
  409221:	repz push es
  409223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409224:	xor    ebx,DWORD PTR [ebx-0x2e]
  409227:	scas   al,BYTE PTR es:[edi]
  409228:	mov    ecx,0x74aa12af
  40922d:	xchg   edi,eax
  40922e:	fdiv   QWORD PTR [edi]
  409230:	add    DWORD PTR [ebx+edx*1],ecx
  409233:	push   0xffffffff
  409235:	shl    BYTE PTR [edx+ecx*8+0x43279335],cl
  40923c:	or     DWORD PTR [edi],0xfffffff1
  40923f:	sub    eax,ecx
  409241:	pop    edi
  409242:	pop    esi
  409243:	pop    ebx
  409244:	ss (bad) 
  409246:	jo     0x409232
  409248:	mov    eax,0xde640e9
  40924d:	jnp    0x4092c7
  40924f:	cmp    esp,DWORD PTR [edx+0x72fadf07]
  409255:	sub    BYTE PTR [esi],0xdb
  409258:	int3   
  409259:	popa   
  40925a:	aas    
  40925b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40925c:	sub    al,0xbf
  40925e:	mov    bl,bl
  409260:	push   ecx
  409261:	xchg   ecx,eax
  409262:	push   0x1e3e39a1
  409267:	lods   eax,DWORD PTR ds:[esi]
  409268:	or     eax,0x3b482cc3
  40926d:	cmp    ch,BYTE PTR [edx+ebx*8+0x3f8d9287]
  409274:	and    BYTE PTR [edx-0x1f6cecb9],0x45
  40927b:	test   DWORD PTR [esp+ebx*4+0x69],ebp
  40927f:	push   edx
  409280:	out    0xfa,al
  409282:	mov    bh,0xb6
  409284:	push   esi
  409285:	fimul  DWORD PTR [eax+eiz*2-0x3ac436a7]
  40928c:	(bad)  
  40928e:	cmp    bl,ch
  409290:	or     eax,0x9962b508
  409295:	mov    esp,0x3e7b75a1
  40929a:	je     0x4092fc
  40929c:	push   0xd89f4ade
  4092a1:	jecxz  0x40926e
  4092a3:	pop    ecx
  4092a4:	out    0x49,al
  4092a6:	les    ebx,FWORD PTR [edx-0x42]
  4092a9:	mov    DWORD PTR [esi],eax
  4092ab:	sub    cl,BYTE PTR [edi-0x5d]
  4092ae:	or     al,0x5d
  4092b0:	rol    BYTE PTR [ebx+0x499403e7],0x63
  4092b7:	inc    ecx
  4092b8:	out    dx,al
  4092b9:	ins    DWORD PTR es:[edi],dx
  4092ba:	add    esp,DWORD PTR [edx-0x2f3ae041]
  4092c0:	sar    bl,cl
  4092c2:	dec    edx
  4092c3:	fst    QWORD PTR [eax]
  4092c5:	clc    
  4092c6:	inc    ecx
  4092c7:	call   DWORD PTR [ebp+0xb]
  4092ca:	clc    
  4092cb:	sbb    BYTE PTR [esi],al
  4092cd:	xor    DWORD PTR [ebp+eiz*4-0x525b238],esi
  4092d4:	or     eax,0x61cd691f
  4092d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092da:	mov    eax,DWORD PTR [ebx]
  4092dc:	xor    BYTE PTR [ebx-0x80],dl
  4092df:	and    al,0x58
  4092e1:	in     eax,0xab
  4092e3:	fcomi  st,st(4)
  4092e5:	adc    al,BYTE PTR [ebx+0x385802d]
  4092eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ec:	pusha  
  4092ed:	mov    eax,0x6c67e142
  4092f2:	sub    BYTE PTR [edi+0x40],0xf7
  4092f6:	jns    0x40929d
  4092f8:	adc    bh,BYTE PTR [ebp-0x7f]
  4092fb:	mov    dh,0xed
  4092fd:	out    0xf1,al
  4092ff:	xor    BYTE PTR [ebx+0xd],bh
  409302:	jmp    0x4092d1
  409304:	adc    al,0x13
  409306:	and    ecx,ecx
  409308:	sub    DWORD PTR [edi],ecx
  40930a:	cmp    eax,0x44b95ff7
  40930f:	xchg   ebx,eax
  409310:	cmp    DWORD PTR [esi-0x47f263ea],ebx
  409316:	leave  
  409317:	push   ecx
  409318:	lahf   
  409319:	or     DWORD PTR [edx+edx*2+0x15],0xd9c30767
  409321:	add    ch,BYTE PTR [ebx]
  409323:	mov    al,ds:0x852392ad
  409328:	lods   al,BYTE PTR ds:[esi]
  409329:	ror    DWORD PTR [edi-0x4cbbcd44],0xff
  409330:	sbb    bh,BYTE PTR [ebx]
  409332:	jnp    0x40932e
  409334:	rcl    DWORD PTR [eax-0x67f5943a],0x48
  40933b:	dec    eax
  40933c:	ds aas 
  40933e:	ss add al,0xea
  409341:	lds    edi,FWORD PTR [edx+0x776b5deb]
  409347:	xor    bh,BYTE PTR [esi]
  409349:	or     ch,dl
  40934b:	mov    eax,0x18e3b2fe
  409350:	es add esp,edx
  409353:	cmp    BYTE PTR [edi+eax*2+0x66788913],ch
  40935a:	lods   eax,DWORD PTR ds:[esi]
  40935b:	add    BYTE PTR ds:0x32984c9d,bl
  409361:	sbb    al,0x71
  409363:	sub    ebx,edx
  409365:	imul   ecx,DWORD PTR [ecx],0x7
  409368:	div    BYTE PTR [edi-0x1ec2200f]
  40936e:	mov    BYTE PTR [edi+0x526884bc],ch
  409374:	jb     0x409329
  409376:	mov    edi,0xa1dcec3d
  40937b:	and    DWORD PTR [ecx-0x4],0xffffffb1
  40937f:	(bad)  
  409380:	(bad)  
  409381:	jge    0x4093be
  409383:	dec    ebx
  409384:	adc    eax,0x5a3e875c
  409389:	cmc    
  40938a:	fdiv   DWORD PTR [ebx-0x30]
  40938d:	(bad)  
  40938e:	popa   
  40938f:	sbb    DWORD PTR ds:0x809a0dc6,edx
  409395:	and    BYTE PTR [ecx+0x61],ch
  409398:	aas    
  409399:	sub    al,dh
  40939b:	dec    esp
  40939c:	cmp    ch,BYTE PTR [edx]
  40939e:	inc    esp
  40939f:	xchg   DWORD PTR [ebp+0x4],esi
  4093a2:	and    al,0x77
  4093a4:	add    ebp,DWORD PTR [edx+0x16c871c7]
  4093aa:	loop   0x40941e
  4093ac:	jns    0x4093b6
  4093ae:	aaa    
  4093af:	jg     0x409350
  4093b1:	push   eax
  4093b2:	jl     0x409423
  4093b4:	dec    ebx
  4093b5:	sub    DWORD PTR [edi-0x937caef],esp
  4093bb:	or     ebx,DWORD PTR [edi-0x30dc80bc]
  4093c1:	inc    esi
  4093c2:	ror    edi,0x94
  4093c5:	clc    
  4093c6:	mov    edx,0xffca059b
  4093cb:	push   0x30
  4093cd:	dec    ecx
  4093ce:	cmp    al,0xdc
  4093d0:	and    esi,DWORD PTR [edx+0x4]
  4093d3:	adc    bh,BYTE PTR [ebx]
  4093d5:	dec    ebx
  4093d6:	xor    al,0xb
  4093d8:	enter  0x8c4b,0x70
  4093dc:	shl    ebp,0x83
  4093df:	ins    BYTE PTR es:[edi],dx
  4093e0:	ds add al,dh
  4093e3:	inc    esp
  4093e4:	xchg   edx,eax
  4093e5:	popf   
  4093e6:	mov    ebx,0xcd3d191f
  4093eb:	or     eax,0xcbbb8dc1
  4093f0:	pop    eax
  4093f1:	cmp    dl,BYTE PTR [edi-0x1fa415f6]
  4093f7:	ins    DWORD PTR es:[edi],dx
  4093f8:	or     eax,0x2b530edf
  4093fd:	inc    edx
  4093fe:	sbb    DWORD PTR [eax-0x63],ebx
  409401:	xor    eax,0x2f0c3c74
  409406:	sahf   
  409407:	cmp    ebp,DWORD PTR [edi-0x79024ace]
  40940d:	push   0xffffffe1
  40940f:	mov    ch,0x97
  409411:	stc    
  409412:	sbb    ch,BYTE PTR [ebx+0x43286dad]
  409418:	mov    edx,0xd5e33bfb
  40941d:	fidivr DWORD PTR [ecx+ebx*8+0x46ebdf37]
  409424:	stos   BYTE PTR es:[edi],al
  409425:	pop    eax
  409426:	sbb    DWORD PTR [edx],ebx
  409428:	cmp    ch,BYTE PTR es:[ebx+ebp*1-0x7d]
  40942d:	call   0x53ff:0xbdbde51a
  409434:	add    esi,DWORD PTR [edi+ecx*4+0x4742abab]
  40943b:	fnstcw WORD PTR [edx]
  40943d:	stc    
  40943e:	sbb    ebp,DWORD PTR [ebp-0x3ee8a59a]
  409444:	call   0x7518:0x657ede71
  40944b:	stos   DWORD PTR es:[edi],eax
  40944c:	lods   al,BYTE PTR ds:[esi]
  40944d:	cmp    al,0x1
  40944f:	test   DWORD PTR [ebx+0x70c8c198],esp
  409455:	push   ds
  409456:	test   dh,dh
  409458:	fidiv  WORD PTR [edi-0x56]
  40945b:	pushf  
  40945c:	fs out 0xe7,eax
  40945f:	xor    eax,0x6ffd4da0
  409464:	fbld   TBYTE PTR [eax]
  409466:	push   cs
  409467:	dec    ebp
  409468:	dec    edx
  409469:	ds mov edx,0x6db95a04
  40946f:	push   ebp
  409470:	ret    0xffd9
  409473:	pop    ebx
  409474:	fistp  QWORD PTR [eax-0x25f69940]
  40947a:	or     BYTE PTR [ecx-0x1e],dl
  40947d:	dec    edx
  40947e:	push   ebp
  40947f:	call   0x4ffe:0xcf429ab5
  409486:	retf   
  409487:	data16 stc 
  409489:	sbb    eax,0x9d94957e
  40948e:	imul   ebp,DWORD PTR fs:[esi-0xe],0xffffffa7
  409493:	outs   dx,DWORD PTR ds:[esi]
  409494:	push   ss
  409495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409496:	jp     0x409418
  409498:	mov    ch,0x1d
  40949a:	mov    ?,WORD PTR [ebp+0x62de4d9e]
  4094a0:	pusha  
  4094a1:	pushf  
  4094a2:	mov    bh,0xce
  4094a4:	jmp    0x18b8:0x66560893
  4094ab:	into   
  4094ac:	sub    eax,0x3de733aa
  4094b1:	push   ecx
  4094b2:	dec    ebp
  4094b3:	mov    eax,0xe7bcb00c
  4094b8:	or     BYTE PTR [edi-0x15],cl
  4094bb:	imul   edx,esp,0x4f
  4094be:	push   ebx
  4094bf:	cdq    
  4094c0:	xor    eax,0xacfdc259
  4094c5:	call   FWORD PTR ds:0xb64dbc24
  4094cb:	shr    ebx,0x7c
  4094ce:	in     eax,0xb3
  4094d0:	mov    DWORD PTR [edx+0x5730da58],esp
  4094d6:	and    al,BYTE PTR [esi+0x39f78589]
  4094dc:	in     eax,0xa7
  4094de:	out    0x80,eax
  4094e0:	clc    
  4094e1:	push   esp
  4094e2:	lock out dx,al
  4094e4:	(bad)  
  4094e6:	cld    
  4094e7:	jecxz  0x409513
  4094e9:	mov    dh,ch
  4094eb:	inc    ecx
  4094ec:	xchg   edx,eax
  4094ed:	lea    ebx,[ebx+0x265d1661]
  4094f3:	pop    ss
  4094f4:	ror    DWORD PTR [esi+ecx*2+0x6f],cl
  4094f8:	jo     0x40954c
  4094fa:	jno    0x4094e2
  4094fc:	les    edx,FWORD PTR [esi+ebx*8]
  4094ff:	and    eax,0xfbf53870
  409504:	(bad)  
  409505:	mov    esi,0x64d8f651
  40950a:	jmp    0xc0965520
  40950f:	loop   0x4094a7
  409511:	dec    edi
  409512:	xor    BYTE PTR [edi+0x79],cl
  409515:	fisubr DWORD PTR [edx+ecx*8+0x10]
  409519:	push   ss
  40951a:	out    0xdc,al
  40951c:	popa   
  40951d:	cmp    DWORD PTR [edi],ecx
  40951f:	xchg   edi,eax
  409520:	fcom   st(6)
  409522:	mov    ecx,0x714ddb55
  409527:	sub    BYTE PTR [esi],bl
  409529:	cdq    
  40952a:	das    
  40952b:	lods   al,BYTE PTR ds:[esi]
  40952c:	adc    al,0xe6
  40952e:	test   BYTE PTR [edx],ch
  409530:	test   eax,0x1f0d8d68
  409535:	jmp    0x20cb58e6
  40953a:	lahf   
  40953b:	imul   esi
  40953d:	cmp    eax,0xddb65235
  409542:	call   0x8317ee66
  409547:	mov    ebx,0xccc8338f
  40954c:	pop    edi
  40954d:	xchg   ebx,eax
  40954e:	das    
  40954f:	mov    dl,0x20
  409551:	dec    esp
  409552:	pop    esp
  409553:	adc    BYTE PTR [edi+0xee24382],0x1e
  40955a:	or     dh,ah
  40955c:	xchg   ebp,eax
  40955d:	pushf  
  40955e:	jnp    0x40957f
  409560:	out    dx,eax
  409561:	in     al,dx
  409562:	hlt    
  409563:	mov    BYTE PTR ds:0xf05c0d5d,ch
  409569:	leave  
  40956a:	retf   
  40956b:	stos   DWORD PTR es:[edi],eax
  40956c:	inc    ebx
  40956d:	sub    eax,0xd6f55109
  409572:	adc    eax,0xa33e25fd
  409577:	popa   
  409578:	and    bh,BYTE PTR [edx-0x59e95783]
  40957e:	add    DWORD PTR [eax-0x7e72fb06],edi
  409584:	mov    edi,0xa8d276aa
  409589:	lods   eax,DWORD PTR ds:[esi]
  40958a:	enter  0xe98e,0x2f
  40958e:	into   
  40958f:	mov    ecx,0x71f9f155
  409594:	mov    edx,0xe4c1da25
  409599:	pusha  
  40959a:	rol    DWORD PTR [ebp-0x52],0x8c
  40959e:	push   esp
  40959f:	sub    eax,0x577fae50
  4095a4:	mov    DWORD PTR [eax+eiz*4-0x5d354f1d],edx
  4095ab:	test   BYTE PTR [eax+0x7d],al
  4095ae:	lock xrelease mov BYTE PTR [eax-0x62f1e05],al
  4095b6:	or     DWORD PTR [ebx],ebx
  4095b8:	mov    eax,ds:0x7b018912
  4095bd:	xchg   ebp,eax
  4095be:	sub    bh,BYTE PTR [edx]
  4095c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c1:	dec    esp
  4095c2:	aam    0xa1
  4095c4:	push   es
  4095c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095c6:	jnp    0x40960b
  4095c8:	cs js  0x4095ad
  4095cb:	je     0x40963f
  4095cd:	out    0x87,al
  4095cf:	sbb    al,0x30
  4095d1:	gs int3 
  4095d3:	arpl   WORD PTR [eax+0x45],dx
  4095d6:	(bad)  
  4095d7:	push   ss
  4095d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d9:	dec    ecx
  4095da:	jo     0x40956e
  4095dc:	loop   0x40962b
  4095de:	push   ss
  4095df:	in     al,0xa
  4095e1:	mov    dh,0x19
  4095e3:	add    edx,esp
  4095e5:	nop
  4095e6:	pop    ebp
  4095e7:	(bad)  
  4095e8:	in     al,0xea
  4095ea:	push   eax
  4095eb:	scas   al,BYTE PTR es:[edi]
  4095ec:	dec    edx
  4095ed:	aas    
  4095ee:	hlt    
  4095ef:	leave  
  4095f0:	btc    ebx,ebp
  4095f3:	mov    ds:0xc69fa30f,eax
  4095f8:	inc    eax
  4095f9:	sbb    edi,DWORD PTR [eax]
  4095fb:	and    DWORD PTR [ebp+0x6ea9f98d],esi
  409601:	sahf   
  409602:	cmp    BYTE PTR [edx],ah
  409604:	sub    ah,BYTE PTR ds:[edi]
  409607:	jo     0x4095eb
  409609:	push   ds
  40960a:	sbb    eax,0x211319e5
  40960f:	push   edi
  409610:	dec    esi
  409611:	out    0x3d,eax
  409613:	repz jbe 0x4095f3
  409616:	sbb    ecx,ebx
  409618:	cmc    
  409619:	adc    BYTE PTR [esi+0x22762d74],dl
  40961f:	cmp    ebp,ebp
  409621:	pop    ss
  409622:	(bad)  
  409623:	xor    edi,esi
  409625:	pop    ecx
  409626:	fbld   TBYTE PTR [ecx+0x19]
  409629:	scas   al,BYTE PTR es:[edi]
  40962a:	leave  
  40962b:	cdq    
  40962c:	mov    esp,eax
  40962e:	jl     0x4095d6
  409630:	imul   esp,DWORD PTR [ecx],0xdaa4737d
  409636:	dec    esp
  409637:	ror    DWORD PTR [edx+0x4516416d],1
  40963d:	inc    esi
  40963e:	and    DWORD PTR [ebx-0x2c22c40f],0xffffff89
  409645:	les    esp,FWORD PTR [esi+edi*8+0x4]
  409649:	icebp  
  40964a:	mov    cl,0x9f
  40964c:	adc    BYTE PTR [eax+edx*2],bl
  40964f:	int3   
  409650:	icebp  
  409651:	clc    
  409652:	xchg   esi,eax
  409653:	mov    edx,esp
  409655:	stc    
  409656:	jl     0x4095dd
  409658:	or     bl,al
  40965a:	mov    ah,BYTE PTR [ecx+0x60]
  40965d:	mov    ebx,fs
  40965f:	sar    dh,0x63
  409662:	retf   0x5fc1
  409665:	in     al,dx
  409666:	mov    WORD PTR [edx+0x1bac49a3],ds
  40966c:	fxch   st(7)
  40966e:	add    dh,BYTE PTR [eax-0xc]
  409671:	shl    dh,cl
  409673:	idiv   edx
  409675:	dec    edx
  409676:	lock popf 
  409678:	pop    es
  409679:	fisttp DWORD PTR [ebx-0x7a]
  40967c:	outs   dx,DWORD PTR ds:[esi]
  40967d:	pop    esp
  40967e:	push   esi
  40967f:	sbb    DWORD PTR [ebx+0x2e43926],0x65609e5c
  409689:	cmp    DWORD PTR [edx],edi
  40968b:	or     edi,DWORD PTR [eax+edx*2]
  40968e:	or     bh,ch
  409690:	pop    esp
  409691:	jle    0x4096af
  409693:	(bad)  
  409694:	int    0xa
  409696:	pushf  
  409697:	pop    ebx
  409698:	lods   eax,DWORD PTR ds:[esi]
  409699:	push   ebx
  40969a:	mov    esp,0xd7d437b7
  40969f:	fucomi st,st(3)
  4096a1:	xchg   ebp,eax
  4096a2:	mov    ds:0xe76332ee,al
  4096a7:	or     BYTE PTR [edx],bh
  4096a9:	shl    ebx,0x94
  4096ac:	jns    0x409648
  4096ae:	ret    0xec5c
  4096b1:	js     0x409707
  4096b3:	push   edx
  4096b4:	or     dh,BYTE PTR [esi+0x6b]
  4096b7:	lods   eax,DWORD PTR ds:[esi]
  4096b8:	cs jno 0x4096a4
  4096bb:	rol    ah,1
  4096bd:	retf   0xdf9d
  4096c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096c1:	in     eax,0xc0
  4096c3:	push   cs
  4096c4:	mov    esp,0xe65237ea
  4096c9:	cmp    eax,0x5b44a6cc
  4096ce:	xchg   esp,eax
  4096cf:	cmp    BYTE PTR [ebp-0xb6c674d],bl
  4096d5:	mov    dh,0xf4
  4096d7:	ds push cs
  4096d9:	pop    ebp
  4096da:	inc    ebp
  4096db:	int    0xe5
  4096dd:	xor    al,0x31
  4096df:	sbb    BYTE PTR es:[esi-0xb957ec7],0xfc
  4096e7:	test   esp,edi
  4096e9:	ret    
  4096ea:	gs push ebp
  4096ec:	adc    BYTE PTR [ecx+0x53],bl
  4096ef:	jo     0x40971c
  4096f1:	fs out dx,eax
  4096f3:	mov    ch,0xec
  4096f5:	sbb    ebx,DWORD PTR [ebx-0x3f9795c9]
  4096fb:	les    ecx,FWORD PTR [ebx+0xa]
  4096fe:	enter  0xb410,0xb9
  409702:	ins    BYTE PTR es:[edi],dx
  409703:	cmp    eax,0x3ff1b14a
  409708:	adc    eax,0x8fcd7e15
  40970d:	sahf   
  40970e:	lds    esp,FWORD PTR [ecx+0x13]
  409711:	sar    BYTE PTR [edi],1
  409713:	sub    al,0x8c
  409715:	cmp    eax,0x4485f944
  40971a:	mov    BYTE PTR [esi+0x28],ch
  40971d:	dec    ebx
  40971e:	inc    esi
  40971f:	add    al,0x12
  409721:	pop    esi
  409722:	loop   0x409796
  409724:	nop
  409725:	addr16 je 0x4096b8
  409728:	pop    ecx
  409729:	adc    eax,0xa662c415
  40972e:	xchg   esp,eax
  40972f:	mov    esp,0x4fe40438
  409734:	dec    edx
  409735:	scas   al,BYTE PTR es:[edi]
  409736:	xchg   edx,eax
  409737:	in     eax,0x64
  409739:	int    0x89
  40973b:	aad    0x43
  40973d:	stos   BYTE PTR es:[edi],al
  40973e:	icebp  
  40973f:	mov    esi,0xffa1629c
  409744:	jb     0x4096e0
  409746:	push   0xffffff9f
  409748:	and    eax,0xc4ba5879
  40974d:	aaa    
  40974e:	jle    0x409727
  409750:	pop    esi
  409751:	cmc    
  409752:	jnp    0x40976d
  409754:	push   esp
  409755:	push   ds
  409756:	mov    ebp,0xc451306f
  40975b:	data16 mov dh,0x5b
  40975e:	fmul   DWORD PTR [esi]
  409760:	out    dx,eax
  409761:	sbb    DWORD PTR [edi+0x4b],ecx
  409764:	push   cs
  409765:	jg     0x409796
  409767:	idiv   edi
  409769:	mul    BYTE PTR [ebx]
  40976b:	pop    es
  40976c:	xor    eax,0x691dc97e
  409771:	pop    esi
  409772:	pop    edx
  409773:	test   eax,0x455da5e8
  409778:	scas   eax,DWORD PTR es:[edi]
  409779:	test   al,0x52
  40977b:	push   ss
  40977c:	add    DWORD PTR [esi+0x2d],ebx
  40977f:	sahf   
  409780:	rcl    dh,1
  409782:	sub    ecx,DWORD PTR [ecx]
  409784:	ins    DWORD PTR es:[edi],dx
  409785:	pop    esi
  409786:	or     eax,ebx
  409788:	imul   DWORD PTR [edx]
  40978a:	test   DWORD PTR [edi],ebp
  40978c:	sbb    al,0x10
  40978e:	ja     0x409795
  409790:	xchg   esp,eax
  409791:	js     0x40979b
  409793:	mov    al,0x2b
  409795:	ds push DWORD PTR es:[edx+0x3d4dd743]
  40979d:	sbb    ah,BYTE PTR [esi+0x9]
  4097a0:	and    DWORD PTR [ebp-0x2e],ebp
  4097a3:	inc    edx
  4097a4:	xchg   esp,eax
  4097a5:	int    0x5b
  4097a7:	and    esi,DWORD PTR [esi+0x5dd86512]
  4097ad:	es rcr DWORD PTR ds:0x46c3329a,cl
  4097b5:	add    eax,0x7be1ce7
  4097ba:	das    
  4097bb:	inc    esp
  4097bc:	mov    cl,0x8b
  4097be:	lock cmp esi,ecx
  4097c1:	xchg   BYTE PTR [edi-0x108bc539],al
  4097c7:	lds    edi,FWORD PTR [ebx-0xc]
  4097ca:	push   cs
  4097cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097cc:	retf   0x7df2
  4097cf:	mov    bl,0x2b
  4097d1:	push   edi
  4097d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d3:	lods   al,BYTE PTR ds:[esi]
  4097d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097d5:	jecxz  0x409786
  4097d7:	cld    
  4097d8:	ror    BYTE PTR [ecx+0x6c],1
  4097db:	xchg   esi,eax
  4097dc:	stos   BYTE PTR es:[edi],al
  4097dd:	jbe    0x409761
  4097df:	or     al,0x44
  4097e1:	imul   esi,esp,0xffffffda
  4097e4:	pop    esi
  4097e5:	jmp    0x248c6427
  4097ea:	sbb    eax,DWORD PTR [ecx+eax*2]
  4097ed:	mov    bl,0x9a
  4097ef:	shl    DWORD PTR [esi+0x10f879f5],1
  4097f5:	add    al,0x83
  4097f7:	cdq    
  4097f8:	sahf   
  4097f9:	xchg   ebx,eax
  4097fa:	and    al,0x76
  4097fc:	scas   eax,DWORD PTR es:[edi]
  4097fd:	retf   0x38f0
  409800:	mov    ds:0x2a62eb2f,al
  409805:	aam    0xc0
  409807:	mov    esp,0xe9914f5f
  40980c:	adc    eax,0xaf955f90
  409811:	xchg   edx,eax
  409812:	sub    al,0xa4
  409814:	lods   al,BYTE PTR ds:[esi]
  409815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409816:	xchg   DWORD PTR [edx],ebp
  409818:	repz sub ch,0x40
  40981c:	mov    edi,0x6a617373
  409821:	mov    esi,DWORD PTR [edx-0x31]
  409824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409825:	adc    DWORD PTR ds:0x3fc0c54c,ecx
  40982b:	aam    0x2
  40982d:	es fs addr16 sbb eax,0x6609a519
  409835:	js     0x4097eb
  409837:	leave  
  409838:	mov    ebx,0x265ea7c9
  40983d:	mov    ecx,0xf7e1c26b
  409842:	stos   BYTE PTR es:[edi],al
  409843:	aaa    
  409844:	neg    BYTE PTR [ebx-0x31a4db40]
  40984a:	cmp    eax,0x626267e7
  40984f:	jo     0x409870
  409851:	(bad)  
  409852:	(bad)  
  409853:	cwde   
  409854:	shr    BYTE PTR [ebx],1
  409856:	add    DWORD PTR [eax-0x201e93d5],0xffffffd8
  40985d:	dec    ebp
  40985e:	loop   0x4097ee
  409860:	pop    ebp
  409861:	test   ecx,edx
  409863:	inc    esi
  409864:	jns    0x4098af
  409866:	jns    0x409843
  409868:	xor    DWORD PTR [ebp+0x2701329e],eax
  40986e:	repz jp 0x409884
  409871:	mov    ch,0xa0
  409873:	nop
  409874:	pop    ds
  409875:	retf   
  409876:	xchg   esi,eax
  409877:	adc    eax,0xd3c5f3d5
  40987c:	jmp    0x40988d
  40987e:	inc    eax
  40987f:	dec    ebp
  409880:	pop    eax
  409881:	fwait
  409882:	pop    ebp
  409883:	adc    esi,DWORD PTR [esi+0x50468ea8]
  409889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40988a:	stc    
  40988b:	jmp    0x4098eb
  40988d:	and    eax,0x5240b63c
  409892:	mov    ch,BYTE PTR [ecx]
  409894:	repnz xor BYTE PTR [ebp-0x24],cl
  409898:	dec    edi
  409899:	and    sp,WORD PTR [edi+0x5b6dbd87]
  4098a0:	push   edi
  4098a1:	mov    edx,0x56108387
  4098a6:	call   FWORD PTR [esi+0x205f8dac]
  4098ac:	loopne 0x4098f3
  4098ae:	sbb    cl,ch
  4098b0:	repz cmp al,0xc2
  4098b3:	pushf  
  4098b4:	sub    al,BYTE PTR [eax]
  4098b6:	pop    esi
  4098b7:	ret    0x5c7a
  4098ba:	xchg   DWORD PTR [esi],ebp
  4098bc:	leave  
  4098bd:	xchg   esp,eax
  4098be:	or     DWORD PTR [ebx],0x35c9d56e
  4098c4:	dec    ebx
  4098c5:	jmp    0x43bd20bf
  4098ca:	retf   
  4098cb:	btr    DWORD PTR [ecx-0x3],esi
  4098cf:	mov    eax,0x4f6691f5
  4098d4:	mov    dl,al
  4098d6:	push   ebp
  4098d7:	pop    es
  4098d8:	pop    ecx
  4098d9:	in     al,0xe4
  4098db:	mov    BYTE PTR [edx],0x71
  4098de:	xor    al,0xe1
  4098e0:	pop    ebp
  4098e1:	in     eax,dx
  4098e2:	or     BYTE PTR [ebx+0x0],dl
  4098e5:	xchg   esp,eax
  4098e6:	dec    esi
  4098e7:	je     0x409956
  4098e9:	aam    0x35
  4098eb:	fld    TBYTE PTR [ebx-0x1c]
  4098ee:	retf   
  4098ef:	mov    cl,BYTE PTR [edi+0x7e]
  4098f2:	inc    edx
  4098f3:	xchg   ebp,eax
  4098f4:	cli    
  4098f5:	adc    BYTE PTR [ecx-0x4d3c7849],0x1e
  4098fc:	data16 mov WORD PTR ds:0x13e8f5ab,fs
  409903:	pcmpeqb mm6,QWORD PTR gs:[ecx+0xa]
  409908:	call   0xc63c:0x7b2153dc
  40990f:	inc    esp
  409910:	jmp    0x5025ee49
  409915:	sbb    eax,0x476320a9
  40991a:	int    0xeb
  40991c:	or     BYTE PTR [ebp-0x63],dl
  40991f:	jmp    0xca3a:0xc45236ba
  409926:	ret    
  409927:	xor    cl,BYTE PTR [esp+edi*2-0x1d]
  40992b:	(bad)  
  40992c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40992d:	pop    eax
  40992e:	mov    ebp,0xa47d7b
  409933:	mov    ds:0x447fecea,al
  409938:	aaa    
  409939:	xchg   ecx,eax
  40993a:	mov    ebx,0xd28057a1
  40993f:	jl     0x409999
  409941:	(bad)  
  409942:	push   ecx
  409943:	jle    0x40991c
  409945:	pop    esp
  409946:	inc    ebx
  409947:	test   al,0x9e
  409949:	lock add al,al
  40994c:	lods   al,BYTE PTR ds:[esi]
  40994d:	push   esp
  40994e:	(bad)  
  40994f:	retf   0xea2a
  409952:	icebp  
  409953:	call   0xa127:0xf85e7655
  40995a:	nop
  40995b:	sub    edi,DWORD PTR [ecx+0x55]
  40995e:	popf   
  40995f:	add    esi,esp
  409961:	int3   
  409962:	push   cs
  409963:	inc    edx
  409964:	xchg   ebx,eax
  409965:	mov    bl,0x54
  409967:	scas   eax,DWORD PTR es:[edi]
  409968:	fisub  DWORD PTR [edx+0x47c50a9c]
  40996e:	jns    0x4099c8
  409970:	lods   eax,DWORD PTR ds:[esi]
  409971:	xchg   ebp,eax
  409972:	cmp    BYTE PTR [ecx-0x7fab11eb],cl
  409978:	das    
  409979:	loopne 0x4099d6
  40997b:	lea    eax,ds:0x4b56da39
  409981:	aad    0x8a
  409983:	mov    dl,0x7d
  409985:	and    BYTE PTR [esi],0xfd
  409988:	dec    esi
  409989:	repz push cs
  40998b:	loope  0x409987
  40998d:	int3   
  40998e:	scas   eax,DWORD PTR es:[edi]
  40998f:	pop    edi
  409990:	sbb    DWORD PTR [edi-0x42],edx
  409993:	div    DWORD PTR [edi+ebx*1]
  409996:	(bad)  
  409997:	lahf   
  409998:	mov    esp,0x1ee9dc42
  40999d:	xor    ebp,ecx
  40999f:	jge    0x40999e
  4099a1:	ret    0xda02
  4099a4:	aaa    
  4099a5:	int3   
  4099a6:	sub    ebp,esp
  4099a8:	inc    ecx
  4099a9:	push   0xf43abc30
  4099ae:	or     BYTE PTR [edi-0x24],bh
  4099b1:	in     eax,0xe8
  4099b3:	jp     0x409946
  4099b5:	fld    DWORD PTR [ebx+ebp*1-0x78]
  4099b9:	and    ebp,ecx
  4099bb:	jl     0x4099bb
  4099bd:	add    ch,BYTE PTR [esi+0x4a]
  4099c0:	mov    dl,0x8a
  4099c2:	xchg   esp,eax
  4099c3:	xlat   BYTE PTR ds:[ebx]
  4099c4:	mov    ah,BYTE PTR ds:0xe67427d6
  4099ca:	inc    ecx
  4099cb:	jnp    0x409a0c
  4099cd:	(bad)  
  4099ce:	scas   al,BYTE PTR es:[edi]
  4099cf:	inc    ecx
  4099d0:	loope  0x409a50
  4099d2:	push   esp
  4099d3:	sub    edx,DWORD PTR [edi]
  4099d5:	loope  0x409a0a
  4099d7:	dec    edi
  4099d8:	dec    ebx
  4099d9:	repnz dec esi
  4099db:	popa   
  4099dc:	les    eax,FWORD PTR [esi-0x35]
  4099df:	nop
  4099e0:	dec    edi
  4099e1:	jbe    0x409997
  4099e3:	test   cl,ch
  4099e5:	in     eax,0xe8
  4099e7:	ins    DWORD PTR es:[edi],dx
  4099e8:	neg    edx
  4099ea:	xor    eax,0x461b2702
  4099ef:	adc    al,0x28
  4099f1:	jle    0x409a0d
  4099f3:	sbb    esi,0xad911974
  4099f9:	push   es
  4099fa:	jecxz  0x4099ba
  4099fc:	(bad)  
  4099fd:	push   cs
  4099fe:	cli    
  4099ff:	cmp    esp,edi
  409a01:	sbb    BYTE PTR [ebp-0x27eec4fb],dl
  409a07:	ja     0x4099e3
  409a09:	xor    al,0x9a
  409a0b:	in     eax,dx
  409a0c:	pop    ds
  409a0d:	pop    esi
  409a0e:	mov    ecx,0xae3dc961
  409a13:	mov    ebp,0x7b364f9c
  409a18:	(bad)  
  409a19:	dec    edx
  409a1a:	add    DWORD PTR [edi+ebp*2+0x7],ecx
  409a1e:	jae    0x409a09
  409a20:	adc    esi,esi
  409a22:	ja     0x409a68
  409a24:	jns    0x4099d4
  409a26:	daa    
  409a27:	add    eax,0xaf57293f
  409a2c:	jmp    0x2a4:0x9b0e21ed
  409a33:	jg     0x409a9c
  409a35:	cld    
  409a36:	mov    BYTE PTR [ecx+0x70],0x31
  409a3a:	xchg   BYTE PTR [ebx-0x4a],ch
  409a3d:	call   0x498957c1
  409a42:	xchg   esi,eax
  409a43:	mov    ebp,0x9d0b2f3c
  409a48:	dec    esp
  409a49:	popf   
  409a4a:	pusha  
  409a4b:	mov    esp,0xb381043d
  409a50:	push   0xffffffae
  409a52:	int    0xb6
  409a54:	data16 je 0x409a3a
  409a57:	cmp    cl,BYTE PTR [esi+0x63fa57]
  409a5d:	dec    ebp
  409a5e:	sbb    bl,BYTE PTR [eax+0x1a36ca65]
  409a64:	mov    ebx,DWORD PTR [ecx+0x33cb2218]
  409a6a:	add    ah,BYTE PTR [eax+ecx*4-0x60759cc]
  409a71:	(bad)  
  409a72:	(bad)  
  409a74:	outs   dx,BYTE PTR ds:[esi]
  409a75:	pop    eax
  409a76:	pop    ebx
  409a77:	fwait
  409a78:	lock js 0x409a5a
  409a7b:	inc    ebx
  409a7c:	enter  0xf730,0x27
  409a80:	fwait
  409a81:	dec    ebp
  409a82:	leave  
  409a83:	push   ds
  409a84:	(bad)  
  409a85:	dec    ebp
  409a86:	push   edx
  409a87:	scas   eax,DWORD PTR es:[edi]
  409a88:	mov    al,ds:0xa4984cb0
  409a8d:	adc    edi,DWORD PTR [ebx+0x33b57a51]
  409a93:	cmp    eax,0xe95f39b3
  409a98:	inc    esi
  409a99:	fisubr DWORD PTR [edx]
  409a9b:	xlat   BYTE PTR ds:[ebx]
  409a9c:	jmp    0x57d1:0x901f36ff
  409aa3:	test   BYTE PTR [ecx-0x4efe017],cl
  409aa9:	lods   al,BYTE PTR ds:[esi]
  409aaa:	popaw  
  409aac:	dec    esp
  409aad:	(bad)  
  409aae:	jne    0x409b06
  409ab0:	loope  0x409aa4
  409ab2:	xchg   edx,eax
  409ab3:	add    BYTE PTR [ebx+0x50ea76f7],dl
  409ab9:	fidiv  WORD PTR [ebp-0x5b]
  409abc:	push   ebp
  409abd:	cmp    edx,DWORD PTR [esi-0x17]
  409ac0:	mov    dh,0x29
  409ac2:	les    edi,FWORD PTR ds:0x1fcb3659
  409ac8:	adc    bh,BYTE PTR [edi+0x32]
  409acb:	xor    al,BYTE PTR [edx-0x49]
  409ace:	rcl    BYTE PTR [eax],0x4f
  409ad1:	xchg   BYTE PTR [ecx],ah
  409ad3:	push   es
  409ad4:	fstp   TBYTE PTR [edx-0x1b3824f8]
  409ada:	call   eax
  409adc:	jl     0x409ac2
  409ade:	aad    0xac
  409ae0:	aaa    
  409ae1:	or     BYTE PTR [ebp+0xb3336f9],bl
  409ae7:	mov    dh,0x1f
  409ae9:	xor    ecx,eax
  409aeb:	(bad)  
  409aec:	dec    edi
  409aed:	mov    ah,0xcd
  409aef:	mov    esp,0xb525512d
  409af4:	lods   eax,DWORD PTR ds:[esi]
  409af5:	fldenv [ecx+0x4a58e935]
  409afb:	sar    DWORD PTR [ebp-0x58],cl
  409afe:	xor    bh,cl
  409b00:	mov    ch,al
  409b02:	sti    
  409b03:	popf   
  409b04:	lahf   
  409b05:	icebp  
  409b06:	push   cs
  409b07:	jbe    0x409b4e
  409b09:	xlat   BYTE PTR ds:[ebx]
  409b0a:	sub    ebx,ecx
  409b0c:	mov    eax,ds:0x65a3b160
  409b11:	cmp    bh,BYTE PTR [ecx]
  409b13:	daa    
  409b14:	or     BYTE PTR [eax],0xee
  409b17:	(bad)
  409b1a:	test   DWORD PTR [ecx-0x2970e4cb],ebx
  409b20:	stc    
  409b21:	ins    BYTE PTR es:[edi],dx
  409b22:	jnp    0x409b89
  409b24:	rcr    DWORD PTR [edi+0x5da2d262],cl
  409b2a:	dec    ecx
  409b2b:	clc    
  409b2c:	retf   0x7c19
  409b2f:	cmp    BYTE PTR es:0xe9cb7f56,dh
  409b36:	pop    ss
  409b37:	mov    ds:0xc778a791,eax
  409b3c:	jle    0x409af6
  409b3e:	mov    ebx,0xd73245a
  409b43:	int3   
  409b44:	cmp    DWORD PTR [eax+0x4a03c7f4],eax
  409b4a:	xchg   esp,eax
  409b4b:	cmc    
  409b4c:	shr    DWORD PTR [ebp-0x7f],0x78
  409b50:	xchg   ebx,eax
  409b51:	mov    bh,0x57
  409b53:	mov    ch,0xd5
  409b55:	enter  0xbd36,0xbe
  409b59:	adc    ebp,ebx
  409b5b:	push   esp
  409b5c:	mov    DWORD PTR ss:[ebp-0x5a],ebx
  409b60:	stos   DWORD PTR es:[edi],eax
  409b61:	jb     0x409b24
  409b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b64:	test   eax,0x1a349c5e
  409b69:	jb     0x409afa
  409b6b:	cmp    al,dh
  409b6d:	push   cs
  409b6e:	shl    BYTE PTR [eax+ebp*4-0xb38c575],0x1e
  409b76:	call   0x5499:0xd9088312
  409b7d:	cmp    bl,bl
  409b7f:	test   eax,0x3af74f15
  409b84:	mov    BYTE PTR [ecx+0x5a7cd069],al
  409b8a:	add    al,0x26
  409b8c:	stos   BYTE PTR es:[edi],al
  409b8d:	cmp    cl,dl
  409b8f:	xchg   ebx,eax
  409b90:	js     0x409bee
  409b92:	xchg   DWORD PTR [ecx-0x4c],esp
  409b95:	aas    
  409b96:	and    BYTE PTR [edx-0x11d6c581],dl
  409b9c:	jmp    0xbeb9:0x6263f02f
  409ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba4:	mov    ah,0xf4
  409ba6:	out    0x88,eax
  409ba8:	pop    edi
  409ba9:	or     al,0x2d
  409bab:	iret   
  409bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bad:	out    0x43,al
  409baf:	and    bh,BYTE PTR [edi]
  409bb1:	and    ebx,esp
  409bb3:	ds push edx
  409bb5:	dec    edi
  409bb6:	leave  
  409bb7:	hlt    
  409bb8:	inc    esp
  409bb9:	add    bh,bl
  409bbb:	pushf  
  409bbc:	out    dx,eax
  409bbd:	mov    bl,0x87
  409bbf:	rcr    DWORD PTR [ebx],0x85
  409bc2:	sbb    eax,0x26ae2adc
  409bc7:	cmp    DWORD PTR [edx+ebx*8+0x4614c306],ecx
  409bce:	std    
  409bcf:	sbb    al,0xa5
  409bd1:	cmp    al,BYTE PTR [edi-0x48776d13]
  409bd7:	lods   eax,DWORD PTR ds:[esi]
  409bd8:	adc    al,0xe9
  409bda:	xchg   edi,eax
  409bdb:	pushf  
  409bdc:	stos   DWORD PTR es:[edi],eax
  409bdd:	fdivr  st(5),st
  409bdf:	jno    0x409bfe
  409be1:	out    0xc9,eax
  409be3:	mov    edx,0x40197de1
  409be8:	sti    
  409be9:	inc    edi
  409bea:	jl     0x409beb
  409bec:	inc    edi
  409bed:	call   0x9312109d
  409bf2:	xor    al,0xfb
  409bf4:	cmp    al,0x9e
  409bf6:	xchg   edi,eax
  409bf7:	mov    gs,WORD PTR [esi+0x6b38b7af]
  409bfd:	mov    bh,0x6e
  409bff:	sbb    esi,DWORD PTR [ebx+0x21]
  409c02:	jl     0x409c7a
  409c04:	pop    esi
  409c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c06:	sar    BYTE PTR [ecx-0x1b8431c],0xad
  409c0d:	out    0x37,al
  409c0f:	popf   
  409c10:	test   ah,bh
  409c12:	dec    esi
  409c13:	and    BYTE PTR [eax+0x23],0x1a
  409c17:	dec    esi
  409c18:	enter  0x9159,0x8f
  409c1c:	ffree  st(0)
  409c1e:	xchg   edi,eax
  409c1f:	dec    edx
  409c20:	push   ebx
  409c21:	(bad)  
  409c22:	jmp    0x409bcc
  409c24:	repnz xchg esp,eax
  409c26:	push   esp
  409c27:	out    0x19,al
  409c29:	test   BYTE PTR [edi-0x4c],ch
  409c2c:	mov    esp,0x76292cce
  409c31:	push   0x57ee6e82
  409c36:	sub    al,0x6a
  409c38:	test   eax,0x62c4954f
  409c3d:	(bad)  
  409c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c40:	loop   0x409bf6
  409c42:	out    dx,al
  409c43:	lods   al,BYTE PTR ds:[esi]
  409c44:	retf   
  409c45:	adc    eax,0xef8e8c5a
  409c4a:	pop    ebp
  409c4b:	in     eax,0xfc
  409c4d:	adc    cl,BYTE PTR [edi-0x5c]
  409c50:	fs pop ds
  409c52:	jg     0x409c13
  409c54:	popa   
  409c55:	sub    DWORD PTR [ebp+ebp*4-0x4c],esi
  409c59:	xchg   BYTE PTR [eax],dh
  409c5b:	add    eax,0x85c884fc
  409c60:	test   al,0xa3
  409c62:	(bad)  
  409c63:	dec    eax
  409c65:	out    dx,eax
  409c66:	stos   DWORD PTR es:[edi],eax
  409c67:	clc    
  409c68:	pop    esi
  409c69:	ins    BYTE PTR es:[edi],dx
  409c6a:	and    eax,DWORD PTR es:[ebp+0x799351f1]
  409c71:	push   esi
  409c72:	fld    DWORD PTR [edi]
  409c74:	mov    bl,0xd1
  409c76:	sti    
  409c77:	push   esp
  409c78:	pop    ebp
  409c79:	or     BYTE PTR [ecx],0x92
  409c7c:	mov    ds:0x1fb0f484,eax
  409c81:	jl     0x409ce9
  409c83:	sub    bh,BYTE PTR [ebp+0x6b57539]
  409c89:	add    eax,0xa529547e
  409c8e:	pop    ebp
  409c8f:	call   0x7e705452
  409c94:	icebp  
  409c95:	hlt    
  409c96:	push   es
  409c97:	je     0x409c43
  409c99:	call   0x305d:0x6c47f101
  409ca0:	jnp    0x409c9e
  409ca2:	mov    esi,0x1374f9eb
  409ca7:	and    BYTE PTR [ebx+0x2f6b2188],0x8d
  409cae:	add    al,BYTE PTR ds:0x4854f913
  409cb4:	mov    esi,0x643b5a2a
  409cb9:	jno    0x409d32
  409cbb:	sti    
  409cbc:	data16 mov dl,0x88
  409cbf:	push   cs
  409cc0:	jnp    0x409d37
  409cc2:	loope  0x409cfa
  409cc4:	mov    WORD PTR [eax-0xd],cs
  409cc7:	int3   
  409cc8:	stos   BYTE PTR es:[edi],al
  409cc9:	pop    edi
  409cca:	xor    DWORD PTR [esi-0x1748188f],esi
  409cd0:	cmc    
  409cd1:	cmp    BYTE PTR [eax+edx*8+0x60],0x83
  409cd6:	pop    es
  409cd7:	inc    ebp
  409cd8:	fnstenv [eax+0x28d11429]
  409cde:	gs adc eax,0x3b1de585
  409ce4:	inc    esp
  409ce5:	pop    edx
  409ce6:	mov    dh,0x65
  409ce8:	aaa    
  409ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cea:	mov    gs,esi
  409cec:	push   esp
  409ced:	mov    ds:0xcc9225f3,eax
  409cf2:	scas   eax,DWORD PTR es:[edi]
  409cf3:	repnz dec edx
  409cf5:	xchg   ebp,eax
  409cf6:	loopne 0x409c9f
  409cf8:	sahf   
  409cf9:	jg     0x409cea
  409cfb:	cmp    DWORD PTR [esp+eiz*8],ebx
  409cfe:	add    bl,BYTE PTR ds:0x58e6d7a9
  409d04:	inc    ebx
  409d05:	out    dx,al
  409d06:	xchg   edi,eax
  409d07:	dec    edi
  409d08:	test   al,0x14
  409d0a:	fcomp  DWORD PTR [edi+ecx*8+0x2693203a]
  409d11:	pop    ebp
  409d12:	add    eax,0x137e618b
  409d17:	rcr    BYTE PTR [esi+eiz*1],cl
  409d1a:	cmp    dh,BYTE PTR [esi-0x6b1d4ccf]
  409d20:	xchg   ebx,eax
  409d21:	lock sbb al,0x40
  409d24:	push   edx
  409d25:	lahf   
  409d26:	jg     0x409d58
  409d28:	xor    eax,0x926a75e7
  409d2d:	lea    edi,[esi]
  409d2f:	test   al,0x45
  409d31:	outs   dx,DWORD PTR ds:[esi]
  409d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d33:	loop   0x409cbc
  409d35:	test   BYTE PTR [edx+ebx*8-0x7b],ah
  409d39:	inc    esi
  409d3a:	inc    eax
  409d3b:	loop   0x409d8d
  409d3d:	pop    ecx
  409d3e:	add    bh,BYTE PTR ds:0xcbfc2e86
  409d44:	xor    ecx,DWORD PTR ds:0x16c8c875
  409d4a:	mov    ah,BYTE PTR [ecx-0x6e]
  409d4d:	arpl   WORD PTR [eax-0x7773e808],di
  409d53:	dec    esp
  409d54:	push   ebx
  409d55:	jb     0x409ce6
  409d57:	(bad)  
  409d58:	sti    
  409d59:	add    DWORD PTR [eax+0x53c02ce1],edx
  409d5f:	inc    edi
  409d60:	std    
  409d61:	cmp    DWORD PTR [eax],esi
  409d63:	fwait
  409d64:	add    eax,0x395452c8
  409d69:	dec    ebx
  409d6a:	mov    esi,ebp
  409d6c:	xor    al,0x94
  409d6e:	or     al,BYTE PTR [ebp-0x7]
  409d71:	aaa    
  409d72:	lds    ebp,FWORD PTR [edx+0x76]
  409d75:	jno    0x409d78
  409d77:	inc    ebp
  409d78:	inc    eax
  409d79:	jp     0x409df9
  409d7b:	pop    eax
  409d7c:	out    0xf3,al
  409d7e:	adc    DWORD PTR [edx+0x7ff3a362],edx
  409d84:	imul   ecx,DWORD PTR [esi-0x5f3d807a],0x104f8eda
  409d8e:	jb     0x409d44
  409d90:	clc    
  409d91:	jns    0x409d32
  409d93:	mov    ds:0xecdb335d,eax
  409d98:	mov    ds:0x27f0807,eax
  409d9d:	in     al,0x6f
  409d9f:	aad    0x46
  409da1:	sbb    BYTE PTR ds:0x7fc60f38,ch
  409da7:	sub    DWORD PTR ss:[eax],eax
  409daa:	in     eax,dx
  409dab:	or     eax,0x2704a495
  409db0:	inc    esp
  409db1:	je     0x409ddd
  409db3:	inc    eax
  409db4:	inc    esp
  409db5:	shr    cl,0x80
  409db8:	pushf  
  409db9:	dec    esi
  409dba:	mov    edx,DWORD PTR [eax+0x78]
  409dbd:	fwait
  409dbe:	adc    al,0x1d
  409dc0:	in     eax,0xa
  409dc2:	add    BYTE PTR [esi],dh
  409dc4:	push   0xffffffe5
  409dc6:	arpl   WORD PTR [ecx+0x79241aa8],cx
  409dcc:	mov    bl,0x9e
  409dce:	or     BYTE PTR [edi+0x6],0x1e
  409dd2:	dec    eax
  409dd3:	xchg   edi,eax
  409dd4:	xchg   esp,eax
  409dd5:	adc    edx,esp
  409dd7:	xor    al,0x87
  409dd9:	mov    ebx,0x225b2299
  409dde:	shl    BYTE PTR [eax-0x677cfd36],cl
  409de4:	inc    esp
  409de5:	inc    ebx
  409de6:	hlt    
  409de7:	pop    ss
  409de8:	jmp    0x2d30:0x379051e6
  409def:	sub    BYTE PTR [ecx-0x1959dca0],ch
  409df5:	mov    esp,0x2c730a69
  409dfa:	cmp    eax,0x3ed95b17
  409dff:	(bad)  
  409e00:	push   0xffffffee
  409e02:	scas   eax,DWORD PTR es:[edi]
  409e03:	shl    BYTE PTR [edx],cl
  409e05:	ret    
  409e06:	mov    dl,0x9f
  409e08:	cmc    
  409e09:	add    eax,0x11c86e18
  409e0e:	outs   dx,DWORD PTR ds:[esi]
  409e0f:	push   ebp
  409e10:	pop    ds
  409e11:	jo     0x409e24
  409e13:	cli    
  409e14:	dec    esi
  409e15:	mov    al,ds:0xdd1253b2
  409e1a:	out    0x3d,eax
  409e1c:	aad    0x74
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    eax,0x3b66de77
  409e24:	test   DWORD PTR [edi],edi
  409e26:	scas   al,BYTE PTR es:[edi]
  409e27:	shl    DWORD PTR [eax+0x687d98e7],cl
  409e2d:	xor    DWORD PTR [edi],edi
  409e2f:	jmp    0x409dee
  409e31:	scas   eax,DWORD PTR es:[edi]
  409e32:	push   esi
  409e33:	push   ss
  409e34:	push   es
  409e35:	sti    
  409e36:	fadd   QWORD PTR [ebp-0x3f]
  409e39:	jle    0x409eb5
  409e3b:	sub    ah,BYTE PTR [edx-0x75eb2f2f]
  409e41:	loopne 0x409dcb
  409e43:	(bad)  
  409e44:	repz icebp 
  409e46:	clc    
  409e47:	add    BYTE PTR [edx-0x3e],dl
  409e4a:	mov    esi,0x1eaac594
  409e4f:	mov    dh,0x37
  409e51:	in     eax,dx
  409e52:	pop    esi
  409e53:	push   ds
  409e54:	or     eax,DWORD PTR [ebx]
  409e56:	fst    QWORD PTR [ebp+0x77a8491b]
  409e5c:	mov    ah,BYTE PTR [edi-0x529aaf1b]
  409e62:	jno    0x409dfa
  409e64:	lods   eax,DWORD PTR ds:[esi]
  409e65:	test   eax,0xc403527b
  409e6a:	mov    BYTE PTR [ecx+0x50bb6f66],al
  409e70:	sbb    DWORD PTR fs:[eax+0x6d],0xffffff8c
  409e75:	mov    ds:0xebf8de91,eax
  409e7a:	in     eax,dx
  409e7b:	sbb    ecx,DWORD PTR [edx]
  409e7d:	xor    eax,0x3ea1e410
  409e82:	stos   BYTE PTR es:[edi],al
  409e83:	mov    bl,0xd4
  409e85:	mov    eax,ds:0xad147519
  409e8a:	lods   al,BYTE PTR ds:[esi]
  409e8b:	dec    ebp
  409e8c:	ss into 
  409e8e:	mov    eax,ds:0x75764c93
  409e93:	inc    ecx
  409e94:	fimul  DWORD PTR [edx+0x7db959c3]
  409e9a:	push   0xffffffe5
  409e9c:	push   ecx
  409e9d:	add    DWORD PTR [esi],esi
  409e9f:	cmp    bh,BYTE PTR [esi-0xc]
  409ea2:	inc    esp
  409ea3:	add    BYTE PTR [ebp-0x1bcace4f],bh
  409ea9:	outs   dx,BYTE PTR ds:[esi]
  409eaa:	add    BYTE PTR [ecx+0x1b],al
  409ead:	ret    0x7db
  409eb0:	add    al,BYTE PTR [ebp-0x387ca8d6]
  409eb6:	mov    edx,0xde0a8543
  409ebb:	jns    0x409e56
  409ebd:	sbb    al,0x99
  409ebf:	or     eax,DWORD PTR [esi+0xf5b9eea]
  409ec5:	into   
  409ec6:	fld    TBYTE PTR [ebx-0x69]
  409ec9:	pop    edx
  409eca:	leave  
  409ecb:	or     ch,dh
  409ecd:	cli    
  409ece:	cmp    BYTE PTR [eax+eiz*8+0xa],bl
  409ed2:	adc    esi,DWORD PTR [ebx+0x3f88b2ad]
  409ed8:	aad    0xd0
  409eda:	jge    0x409e70
  409edc:	repnz nop
  409ede:	push   es
  409edf:	xchg   BYTE PTR [eax],dh
  409ee1:	not    BYTE PTR [esi-0x6d83c8dd]
  409ee7:	sbb    ebp,eax
  409ee9:	mov    al,ds:0xb36bfd38
  409eee:	push   ds
  409eef:	xchg   di,ax
  409ef1:	scas   eax,DWORD PTR es:[edi]
  409ef2:	mov    dl,0x53
  409ef4:	sub    BYTE PTR [di+0x48],ah
  409ef8:	mov    ah,0x22
  409efa:	gs int 0x18
  409efd:	push   eax
  409efe:	ja     0x409f6c
  409f00:	pop    es
  409f01:	jno    0x409e8a
  409f03:	pop    es
  409f04:	cmc    
  409f05:	jge    0x409f47
  409f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f08:	aam    0xc4
  409f0a:	ror    DWORD PTR [edx+edi*8+0x519efce6],1
  409f11:	pop    edi
  409f12:	cmp    BYTE PTR [edx+0x44],cl
  409f15:	push   ebx
  409f16:	mov    ds:0xa12d5047,eax
  409f1b:	pop    edi
  409f1c:	std    
  409f1d:	dec    esp
  409f1e:	cmp    DWORD PTR [eax-0x546be18d],eax
  409f24:	ins    DWORD PTR es:[edi],dx
  409f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f26:	jg     0x409f54
  409f28:	xor    BYTE PTR [esi+0x70c97051],ah
  409f2e:	or     eax,0xade4ad7f
  409f33:	(bad)  
  409f34:	or     esi,eax
  409f36:	repz pop edi
  409f38:	mov    edx,0x5ad71994
  409f3d:	(bad)  
  409f3e:	je     0x409f66
  409f40:	outs   dx,BYTE PTR ds:[esi]
  409f41:	inc    edx
  409f42:	scas   eax,DWORD PTR es:[edi]
  409f43:	aas    
  409f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f45:	xchg   ebp,eax
  409f46:	xchg   BYTE PTR [edx],bh
  409f48:	adc    al,0x4a
  409f4a:	rcl    DWORD PTR [edi+0x2659df84],0xba
  409f51:	aaa    
  409f52:	inc    ebx
  409f53:	push   0xc30ed66e
  409f58:	sar    bh,cl
  409f5a:	std    
  409f5b:	test   eax,0x6313bc4a
  409f60:	jg     0x409fc3
  409f62:	inc    ebp
  409f63:	dec    ecx
  409f64:	sub    BYTE PTR [ebx-0x2b],dl
  409f67:	push   cs
  409f68:	fcomp  DWORD PTR [edx+eiz*2]
  409f6b:	or     eax,0x5750b228
  409f70:	fs (bad) 
  409f72:	sti    
  409f73:	sbb    DWORD PTR [ebx],edi
  409f75:	fnstenv [edx+0x62]
  409f78:	mov    ecx,0xdc9e0e56
  409f7d:	adc    BYTE PTR [ebp+ecx*4+0x5d],0x96
  409f82:	mov    dh,al
  409f84:	jle    0x409ff9
  409f86:	cmc    
  409f87:	or     edi,DWORD PTR [edx]
  409f89:	sbb    BYTE PTR [edx+0x4b13ab2d],bh
  409f8f:	ins    BYTE PTR es:[edi],dx
  409f90:	div    BYTE PTR [esi+ebx*2]
  409f93:	int    0x44
  409f95:	enter  0x4196,0x8a
  409f99:	mov    eax,ds:0x14f2ba
  409f9e:	cs add al,0xca
  409fa1:	fcomi  st,st(3)
  409fa3:	push   esi
  409fa4:	retf   0x3d76
  409fa7:	mov    dh,0x95
  409fa9:	mov    dh,0x48
  409fab:	inc    edx
  409fac:	xchg   edx,eax
  409fad:	das    
  409fae:	shl    DWORD PTR [ecx],0xda
  409fb1:	sub    edx,DWORD PTR ds:0x7f4804ef
  409fb7:	dec    ebp
  409fb8:	add    al,0xfd
  409fba:	and    BYTE PTR [esi-0x51a5c2ad],0xa8
  409fc1:	es add ebp,ebx
  409fc4:	pop    esp
  409fc5:	mov    al,ds:0x9c2ae1bf
  409fca:	xchg   BYTE PTR [ecx+0x6d12c994],ch
  409fd0:	test   al,0x6d
  409fd2:	outs   dx,BYTE PTR ds:[esi]
  409fd3:	push   eax
  409fd4:	fidiv  DWORD PTR [esi-0x7129305c]
  409fda:	mov    edx,0xe5309fd3
  409fdf:	inc    edx
  409fe0:	mov    edx,0xd67414d
  409fe5:	pop    ebx
  409fe6:	push   0x2d
  409fe8:	jle    0x409f6b
  409fea:	(bad)  
  409fec:	ficomp WORD PTR [edi-0x16]
  409fef:	loope  0x40a033
  409ff1:	hlt    
  409ff2:	lds    esi,FWORD PTR [esi]
  409ff4:	dec    ecx
  409ff5:	scas   al,BYTE PTR es:[edi]
  409ff6:	loop   0x409f9d
  409ff8:	sub    BYTE PTR [ebx+ebp*8],al
  409ffb:	in     eax,dx
  409ffc:	push   0x9df398b5
  40a001:	fwait
  40a002:	test   BYTE PTR [edi+0xe],bh
  40a005:	and    al,BYTE PTR [esi+0x10]
  40a008:	sahf   
  40a009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a00a:	sub    eax,0xe651e29
  40a00f:	xchg   BYTE PTR [esi+0x503f43f7],al
  40a015:	jle    0x40a06f
  40a017:	int    0x63
  40a019:	out    dx,eax
  40a01a:	pop    eax
  40a01b:	(bad)  
  40a01c:	or     edi,DWORD PTR [edx-0x4]
  40a01f:	call   0xe91ceec0
  40a024:	sub    edi,edi
  40a026:	push   0xffffffcb
  40a028:	outs   dx,BYTE PTR ds:[esi]
  40a029:	fild   QWORD PTR [esi-0xbf11d05]
  40a02f:	cs mov cl,0xc1
  40a032:	xchg   ebx,eax
  40a033:	mov    ecx,0xa03269f8
  40a038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a039:	iret   
  40a03a:	cmp    DWORD PTR [eax-0x49],ecx
  40a03d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a03e:	cmp    edi,DWORD PTR [ebp+0x62fdcde1]
  40a044:	jge    0x40a08b
  40a046:	call   0xe6b13104
  40a04b:	int3   
  40a04c:	fdivp  st(2),st
  40a04e:	sub    DWORD PTR [ebp-0x500ed33c],esp
  40a054:	je     0x409ffd
  40a056:	fiadd  DWORD PTR [esi-0x2b]
  40a059:	mov    ch,0xb4
  40a05b:	retw   0x770e
  40a05f:	add    al,BYTE PTR [ebp-0x64]
  40a062:	inc    ecx
  40a063:	ja     0x40a03e
  40a065:	dec    BYTE PTR [esi+0x58]
  40a068:	retf   0x9a1
  40a06b:	fistp  DWORD PTR [ebx+0x139f2c3c]
  40a071:	pop    esp
  40a072:	fwait
  40a073:	gs mov esp,0xa69a8b53
  40a079:	shr    DWORD PTR [esi],1
  40a07b:	enter  0xa389,0xb
  40a07f:	and    ebp,DWORD PTR [esi-0x55dd6289]
  40a085:	xor    eax,0xfce21cb2
  40a08a:	fmul   QWORD PTR [edi-0x22cbebb0]
  40a090:	scas   eax,DWORD PTR es:[edi]
  40a091:	(bad)  
  40a092:	(bad)  
  40a093:	mov    dh,BYTE PTR [edi-0x3e]
  40a096:	cmp    ah,BYTE PTR [ebx+0x53879efb]
  40a09c:	add    eax,edi
  40a09e:	js     0x40a02b
  40a0a0:	fsub   DWORD PTR [ebx+0x40c1aa93]
  40a0a6:	fimul  DWORD PTR [ebx]
  40a0a8:	lods   eax,DWORD PTR ds:[esi]
  40a0a9:	(bad)  
  40a0aa:	ror    BYTE PTR [ebx],cl
  40a0ac:	inc    edx
  40a0ad:	mov    ss,WORD PTR [ebp-0x70970af3]
  40a0b3:	xor    DWORD PTR [ebx+0x1a],edi
  40a0b6:	ss xor esi,esp
  40a0b9:	inc    edx
  40a0ba:	xchg   edx,eax
  40a0bb:	push   edi
  40a0bc:	cs inc ecx
  40a0be:	int3   
  40a0bf:	or     ebx,ebx
  40a0c1:	into   
  40a0c2:	lods   al,BYTE PTR ds:[esi]
  40a0c3:	into   
  40a0c4:	in     al,dx
  40a0c5:	push   ebx
  40a0c6:	push   ecx
  40a0c7:	int    0x30
  40a0c9:	cmp    BYTE PTR [ebx-0x4546544f],bh
  40a0cf:	sbb    eax,0xcfb88afb
  40a0d4:	xor    eax,0xe183ad7c
  40a0d9:	out    dx,eax
  40a0da:	or     BYTE PTR [ebx+0x7152fb3e],0x2b
  40a0e1:	test   bh,dl
  40a0e3:	inc    esp
  40a0e4:	or     al,0xf7
  40a0e6:	repz (bad) 
  40a0e8:	mov    ebp,0xf963da28
  40a0ed:	xchg   ebx,eax
  40a0ee:	rdtsc  
  40a0f0:	dec    edi
  40a0f1:	push   edx
  40a0f2:	les    esi,FWORD PTR [eax-0x77831e3d]
  40a0f8:	(bad)  
  40a0f9:	popf   
  40a0fa:	xor    DWORD PTR [ebp-0x16],esi
  40a0fd:	mov    ch,0x58
  40a0ff:	xor    edx,DWORD PTR [ecx+0x64]
  40a102:	sbb    BYTE PTR [esi-0x5d],dl
  40a105:	clc    
  40a106:	cs pop edx
  40a108:	aaa    
  40a109:	jmp    0x9c7f:0x45d4adc9
  40a110:	fstp   st(4)
  40a112:	aam    0x6a
  40a114:	pop    ds
  40a115:	fstp   QWORD PTR [esi]
  40a117:	aad    0x34
  40a119:	mov    al,ds:0xd3a72715
  40a11e:	mov    edi,0xb1ec91cb
  40a123:	xchg   edi,eax
  40a124:	gs int 0x62
  40a127:	jp     0x40a190
  40a129:	fmulp  st(1),st
  40a12b:	push   edx
  40a12c:	push   ebp
  40a12d:	loop   0x40a132
  40a12f:	jns    0x40a0c7
  40a131:	fisttp QWORD PTR [esi+0x1e]
  40a134:	or     eax,0x132b83a6
  40a139:	sub    al,0xa8
  40a13b:	or     esp,DWORD PTR [ebx-0x73]
  40a13e:	daa    
  40a13f:	sbb    ebp,edi
  40a141:	sahf   
  40a142:	(bad)  
  40a143:	mov    ds:0xfced7fe1,eax
  40a148:	loop   0x40a0cc
  40a14a:	hlt    
  40a14b:	sub    ecx,DWORD PTR [edx]
  40a14d:	push   esp
  40a14e:	sahf   
  40a14f:	cmp    DWORD PTR [eax],0x15b7abbf
  40a155:	imul   BYTE PTR [ecx+eiz*1]
  40a158:	aaa    
  40a159:	popa   
  40a15a:	popf   
  40a15b:	pop    edx
  40a15c:	push   DWORD PTR [esp+ebx*2-0x30]
  40a160:	jnp    0x40a159
  40a162:	adc    BYTE PTR [edx+0x59],cl
  40a165:	repz clc 
  40a167:	(bad)  
  40a168:	mov    ds:0x976a3abf,eax
  40a16d:	outs   dx,DWORD PTR ds:[esi]
  40a16e:	xor    DWORD PTR [esi],edi
  40a170:	fiadd  DWORD PTR [eax+0x4e]
  40a173:	push   edx
  40a175:	fmul   st,st(7)
  40a177:	clc    
  40a178:	out    0xd1,eax
  40a17a:	jns    0x40a119
  40a17c:	addr16 mov esi,0xcfb49df2
  40a182:	push   0x68
  40a184:	pop    es
  40a185:	outs   dx,BYTE PTR ds:[esi]
  40a186:	data16 jl 0x40a147
  40a189:	(bad)  
  40a18a:	xor    ecx,ebp
  40a18c:	mov    edx,0xf314f7b4
  40a191:	cmp    edx,0x8a4d5694
  40a197:	or     bl,BYTE PTR [edi-0x7b335b6b]
  40a19d:	xor    esi,DWORD PTR [eax-0x478af7a7]
  40a1a3:	aaa    
  40a1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1a5:	and    edi,ebx
  40a1a7:	test   BYTE PTR [ecx+0xbcb6333],cl
  40a1ad:	daa    
  40a1ae:	test   eax,0xcb39cbcd
  40a1b3:	pop    esi
  40a1b4:	xor    BYTE PTR [eax-0x54],al
  40a1b7:	xchg   DWORD PTR [esp+ecx*8+0x32],esp
  40a1bb:	imul   ebp,DWORD PTR [edi+0x70],0xd7d5b4e8
  40a1c2:	jge    0x40a1f1
  40a1c4:	ss gs pop ds
  40a1c7:	jmp    0x40a201
  40a1c9:	or     DWORD PTR ds:0xa0499f4b,edx
  40a1cf:	xchg   esi,eax
  40a1d0:	mov    ch,0x65
  40a1d2:	fcmovu st,st(0)
  40a1d4:	test   al,0x49
  40a1d6:	mov    eax,ds:0x4f37a4ad
  40a1db:	popf   
  40a1dc:	sbb    ah,BYTE PTR [eax+esi*8-0xb15f13e]
  40a1e3:	mov    ebp,0x84f3f5e6
  40a1e8:	mov    ebx,0x5c5e59e9
  40a1ed:	lock xor ah,BYTE PTR [eax+0x67]
  40a1f1:	jns    0x40a187
  40a1f3:	scas   eax,DWORD PTR es:[edi]
  40a1f4:	pop    eax
  40a1f5:	xchg   DWORD PTR [edx+0x1b8dfd28],eax
  40a1fb:	jbe    0x40a1f4
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	lds    esp,FWORD PTR [ecx]
  40a5ea:	sbb    ecx,DWORD PTR [ecx]
  40a5ec:	daa    
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	mov    al,0x1a
  40a5f6:	sub    ecx,ebx
  40a5f8:	nop
  40a5f9:	sub    eax,0x156c217a
  40a5fe:	sub    edi,0xcfd6172a
  40a604:	sbb    edx,DWORD PTR [ebx-0x620543c9]
  40a60a:	aas    
  40a60b:	call   0x33578b5
  40a610:	ja     0x40a5df
  40a612:	pop    esi
  40a613:	inc    esp
  40a614:	je     0x40a5d2
  40a616:	enter  0x8180,0x25
  40a61a:	(bad)  
  40a61c:	sub    eax,0xd33ed05b
  40a621:	aad    0xa8
  40a623:	adc    dh,BYTE PTR [ebx-0x26391c]
  40a629:	push   ebx
  40a62a:	or     eax,ebx
  40a62c:	inc    esi
  40a62d:	outs   dx,BYTE PTR ds:[esi]
  40a62e:	jne    0x40a5eb
  40a630:	add    dl,bh
  40a632:	int    0x7b
  40a634:	mov    DWORD PTR [ebx+0x14],edx
  40a637:	test   eax,0xdc9cd78
  40a63c:	and    BYTE PTR [esi+0x5],0xa7
  40a640:	jne    0x40a5f2
  40a642:	int3   
  40a643:	cld    
  40a644:	jmp    0x40a62d
  40a646:	fldenv [edx+0x2b]
  40a649:	push   cs
  40a64a:	inc    ecx
  40a64b:	jge    0x40a66d
  40a64d:	(bad)  
  40a64e:	adc    al,0xb4
  40a650:	pop    eax
  40a651:	xor    eax,0x86f8b0a
  40a656:	dec    ebx
  40a657:	dec    esi
  40a658:	ins    BYTE PTR es:[edi],dx
  40a659:	not    dl
  40a65b:	fxch   st(2)
  40a65d:	sbb    DWORD PTR [ebx-0x17],edi
  40a660:	push   ds
  40a661:	dec    ecx
  40a662:	pop    esi
  40a663:	inc    ebx
  40a664:	pop    esp
  40a665:	xor    eax,0x47404dec
  40a66a:	sti    
  40a66b:	and    edi,DWORD PTR gs:[edi+eiz*4]
  40a66f:	xchg   edx,eax
  40a670:	mov    al,ds:0x201401fd
  40a675:	xor    ebx,DWORD PTR [ebp-0x17bf19e9]
  40a67b:	inc    esi
  40a67c:	add    al,0x8b
  40a67e:	lock xchg esi,eax
  40a680:	jno    0x40a61e
  40a682:	ret    
  40a683:	scas   eax,DWORD PTR es:[edi]
  40a684:	add    bl,bh
  40a686:	or     DWORD PTR [eax],ecx
  40a688:	sub    DWORD PTR [ebp+ebx*8+0x69c7df7],esi
  40a68f:	scas   eax,DWORD PTR es:[edi]
  40a690:	xchg   ecx,eax
  40a691:	adc    BYTE PTR [edi-0xbada379],dh
  40a697:	mov    DWORD PTR [esp+edi*4-0x50],esp
  40a69b:	(bad)  
  40a69c:	int3   
  40a69d:	aas    
  40a69e:	add    eax,0x263706c8
  40a6a3:	(bad)  
  40a6a5:	sbb    dh,BYTE PTR [ecx+ebx*2]
  40a6a8:	pushf  
  40a6a9:	not    BYTE PTR [ecx+edx*1+0x4bf84126]
  40a6b0:	aas    
  40a6b1:	xor    DWORD PTR [edx-0x36b5e873],eax
  40a6b7:	lea    ebx,[edx+0x6e01265f]
  40a6bd:	pop    edx
  40a6be:	inc    DWORD PTR [esp+eiz*8-0x75]
  40a6c2:	mov    edi,0x989bcce2
  40a6c7:	jo     0x40a6f2
  40a6c9:	sbb    al,0xb1
  40a6cb:	push   eax
  40a6cc:	and    eax,0x4f221422
  40a6d1:	aaa    
  40a6d2:	or     eax,0x1c40b366
  40a6d7:	and    BYTE PTR [eax-0x28],0x15
  40a6db:	neg    BYTE PTR [ecx]
  40a6dd:	mov    bh,0x58
  40a6df:	out    dx,eax
  40a6e0:	or     ebx,DWORD PTR [ecx-0x6e]
  40a6e3:	js     0x40a69b
  40a6e5:	(bad)
  40a6e9:	mov    eax,ds:0xb95d9a93
  40a6ee:	xor    dh,bl
  40a6f0:	cs fwait
  40a6f2:	jno    0x40a75a
  40a6f4:	pop    esi
  40a6f5:	adc    ebx,DWORD PTR [esi]
  40a6f7:	enter  0x5e06,0x14
  40a6fb:	repnz pop edx
  40a6fd:	mov    edx,0x102a8e82
  40a702:	cli    
  40a703:	push   esi
  40a704:	mov    ch,0x3e
  40a706:	fadd   QWORD PTR [ecx]
  40a708:	fs imul ecx,esi,0x96e7ef36
  40a70f:	retf   0xe72a
  40a712:	add    al,0x21
  40a714:	jnp    0x40a718
  40a716:	fld    DWORD PTR [eax+0x60]
  40a719:	mov    ds:0xeaa93cde,al
  40a71e:	lods   al,BYTE PTR ds:[esi]
  40a71f:	(bad)  
  40a721:	xor    al,0xe0
  40a723:	sub    BYTE PTR [ebx+ebp*2+0x2f],0xe6
  40a728:	lahf   
  40a729:	inc    edi
  40a72a:	shl    edi,1
  40a72c:	sti    
  40a72d:	push   esi
  40a72e:	add    DWORD PTR [edi-0x722ca3e5],0x2e4ddc5
  40a738:	add    al,0x78
  40a73a:	sub    BYTE PTR [ecx-0x55886a8],dl
  40a740:	out    0xe3,eax
  40a742:	out    dx,eax
  40a743:	mov    ecx,0x40ce08bc
  40a748:	fucom  st(0)
  40a74a:	jmp    0xde946d49
  40a74f:	sub    eax,0xd5952e3e
  40a754:	scas   al,BYTE PTR es:[edi]
  40a755:	stc    
  40a756:	adc    eax,0x7a0bd6e0
  40a75b:	cs lahf 
  40a75d:	inc    eax
  40a75e:	cmp    eax,0xf8f2ce49
  40a763:	popa   
  40a764:	std    
  40a765:	jmp    0xd71203c8
  40a76a:	imul   edx,DWORD PTR [ecx+edx*8+0x48],0x4697b281
  40a772:	bound  esi,QWORD PTR [edi+0x18]
  40a775:	push   cs
  40a776:	xchg   DWORD PTR [ecx+0x55],esi
  40a779:	xor    eax,0x8735c511
  40a77e:	xchg   ecx,eax
  40a77f:	aas    
  40a780:	sub    cl,BYTE PTR [ecx-0x2afb9070]
  40a786:	int    0x36
  40a788:	add    edx,edi
  40a78a:	test   esi,esp
  40a78c:	mov    bh,0x68
  40a78e:	mov    ch,0xa9
  40a790:	xor    esi,DWORD PTR ds:0xe8ad798c
  40a796:	retf   0x3308
  40a799:	inc    esi
  40a79a:	(bad)  
  40a79b:	ins    DWORD PTR es:[edi],dx
  40a79c:	ds hlt 
  40a79e:	lods   al,BYTE PTR ds:[esi]
  40a79f:	bound  esi,QWORD PTR gs:[esi-0x79e60f25]
  40a7a6:	push   ecx
  40a7a7:	(bad)  
  40a7a8:	fst    QWORD PTR [ecx+0x1dd7aea8]
  40a7ae:	notrack jmp eax
  40a7b1:	das    
  40a7b2:	je     0x40a81e
  40a7b4:	(bad)  
  40a7b5:	jmp    0x5ac682bd
  40a7ba:	scas   eax,DWORD PTR es:[edi]
  40a7bb:	sub    ah,BYTE PTR [ebp+0x67]
  40a7be:	(bad)  
  40a7c0:	popf   
  40a7c1:	fsub   QWORD PTR [ebx]
  40a7c3:	mov    eax,0xf91f901a
  40a7c8:	adc    edi,ecx
  40a7ca:	js     0x40a7f7
  40a7cc:	in     eax,dx
  40a7cd:	sbb    al,BYTE PTR [ebp-0x18]
  40a7d0:	mov    ah,0x9f
  40a7d2:	and    eax,ecx
  40a7d4:	or     esp,DWORD PTR [edx]
  40a7d6:	je     0x40a80d
  40a7d8:	sbb    BYTE PTR [ecx+0x6],ch
  40a7db:	lods   al,BYTE PTR ds:[esi]
  40a7dc:	leave  
  40a7dd:	sbb    DWORD PTR [eax+0xc9da18],edi
  40a7e3:	repz push edx
  40a7e5:	fmul   DWORD PTR [eax-0x18a9a935]
  40a7eb:	push   cs
  40a7ec:	popf   
  40a7ed:	xchg   esp,eax
  40a7ee:	add    al,0x16
  40a7f0:	js     0x40a862
  40a7f2:	xchg   esp,eax
  40a7f3:	mov    ?,ebp
  40a7f5:	mov    DWORD PTR [edi+0x59c1e222],esp
  40a7fb:	jo     0x40a821
  40a7fd:	out    0xe9,al
  40a7ff:	in     al,0x37
  40a801:	cmp    DWORD PTR [ecx-0x3c783763],ebp
  40a807:	(bad)  
  40a808:	fld    QWORD PTR [eax-0x6fe66e42]
  40a80e:	cli    
  40a80f:	retf   0xf86a
  40a812:	in     al,0x84
  40a814:	mov    bl,0x2d
  40a816:	ret    
  40a817:	js     0x40a888
  40a819:	mov    ds:0x5d9ee7f3,eax
  40a81e:	dec    ebx
  40a81f:	mov    bl,0x15
  40a821:	jmp    0xdfe8:0x92ead679
  40a828:	sub    BYTE PTR [eax-0x54],0xe0
  40a82c:	jne    0x40a898
  40a82e:	je     0x40a885
  40a830:	mov    al,ds:0xb9e28c98
  40a835:	outs   dx,DWORD PTR ds:[esi]
  40a836:	push   ecx
  40a837:	int3   
  40a838:	jbe    0x40a810
  40a83a:	add    BYTE PTR [esi+0x15fdae4a],ch
  40a840:	dec    edi
  40a841:	out    0xb,eax
  40a843:	jnp    0x40a841
  40a845:	into   
  40a846:	sahf   
  40a847:	scas   eax,DWORD PTR es:[edi]
  40a848:	jo     0x40a886
  40a84a:	add    eax,0x2034ab16
  40a84f:	jae    0x40a85f
  40a851:	and    eax,0xadcba96a
  40a856:	inc    esi
  40a857:	adc    ebp,DWORD PTR [edi-0x20]
  40a85a:	inc    BYTE PTR [esi]
  40a85c:	or     eax,0x5a003110
  40a861:	push   es
  40a862:	rcr    DWORD PTR [edi],cl
  40a864:	test   BYTE PTR [ebx+ebp*8],0xcb
  40a868:	and    DWORD PTR [edi],0x52272790
  40a86e:	scas   eax,DWORD PTR es:[edi]
  40a86f:	outs   dx,BYTE PTR ds:[esi]
  40a870:	daa    
  40a871:	iret   
  40a872:	imul   ecx,DWORD PTR [ecx-0x42],0xf578634
  40a879:	xor    DWORD PTR [edi+eax*8+0x4a],0xb63c8781
  40a881:	shr    BYTE PTR [ebp+0x6041bc67],0x48
  40a888:	shl    cl,1
  40a88a:	inc    BYTE PTR [ecx+0x88f6473]
  40a890:	test   ebx,eax
  40a892:	push   edi
  40a893:	and    BYTE PTR [ecx+ebx*1-0x69a8faf6],cl
  40a89a:	fcmovbe st,st(2)
  40a89c:	dec    esp
  40a89d:	dec    esi
  40a89e:	call   0xf3b063ad
  40a8a3:	rol    BYTE PTR [edi+ecx*8+0x23],1
  40a8a7:	push   ebx
  40a8a8:	ror    DWORD PTR [ecx+0x58],cl
  40a8ab:	xchg   edx,eax
  40a8ac:	pop    ss
  40a8ad:	sub    cl,BYTE PTR [edi-0x6228a42f]
  40a8b3:	dec    esi
  40a8b4:	ficom  DWORD PTR [ebp+0x5b47854e]
  40a8ba:	xor    al,0x72
  40a8bc:	xor    edx,edx
  40a8be:	mov    DWORD PTR ds:[ecx],edi
  40a8c1:	adc    eax,0x6769f106
  40a8c6:	stos   DWORD PTR es:[edi],eax
  40a8c7:	push   edx
  40a8c8:	imul   edi,ebx,0x3a
  40a8cb:	clc    
  40a8cc:	add    DWORD PTR [edi],edx
  40a8ce:	jae    0x40a908
  40a8d0:	lea    ebx,[edx-0x4abcbd82]
  40a8d6:	mov    cl,0x8a
  40a8d8:	mov    fs:0x69c3d9d9,al
  40a8de:	mov    al,0xdf
  40a8e0:	mov    esp,0xc773f92a
  40a8e5:	dec    ebp
  40a8e6:	mov    bl,0x25
  40a8e8:	clc    
  40a8e9:	mov    cl,0x59
  40a8eb:	dec    eax
  40a8ec:	jge    0x40a93e
  40a8ee:	popf   
  40a8ef:	xor    DWORD PTR [eax+0x2599252],ebx
  40a8f5:	pop    ss
  40a8f6:	mov    edx,DWORD PTR [edi]
  40a8f8:	popw   ss
  40a8fa:	test   eax,0x9304843b
  40a8ff:	jle    0x40a8b7
  40a901:	mov    al,0x66
  40a903:	cmc    
  40a904:	arpl   WORD PTR [ebp+eax*8+0x6d],si
  40a908:	(bad)  
  40a909:	imul   ebx,DWORD PTR [esi-0x6d],0xffffffe6
  40a90d:	retf   
  40a90e:	adc    bl,BYTE PTR [ebp+eiz*8-0x3b]
  40a912:	clc    
  40a913:	or     edx,DWORD PTR [edx-0x7e471fc2]
  40a919:	mov    dl,0x70
  40a91b:	outs   dx,DWORD PTR ds:[esi]
  40a91c:	jne    0x40a8ab
  40a91e:	sub    al,0xa8
  40a920:	xor    BYTE PTR [ebx+0x41],bl
  40a923:	inc    ebx
  40a924:	dec    ecx
  40a925:	and    ebx,DWORD PTR [edi]
  40a927:	xor    BYTE PTR [eax-0xf50be10],0x50
  40a92e:	test   ch,0xc6
  40a931:	pop    edx
  40a932:	inc    ebx
  40a933:	sub    al,0x71
  40a935:	xchg   ebp,eax
  40a936:	xchg   DWORD PTR [edx+0x1a],ebx
  40a939:	test   DWORD PTR [edx-0x68],ebp
  40a93c:	pushf  
  40a93d:	(bad)  
  40a93e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a93f:	mov    ch,0xb
  40a941:	mov    ds:0xa98364b2,al
  40a946:	out    dx,al
  40a947:	mov    dh,0x99
  40a949:	dec    ecx
  40a94a:	xchg   ebx,eax
  40a94b:	jge    0x40a8da
  40a94d:	sahf   
  40a94e:	pop    ds
  40a94f:	std    
  40a950:	adc    DWORD PTR [ecx+0x25eab152],ecx
  40a956:	data16 cmp dl,BYTE PTR [ebp+0x76d5637e]
  40a95d:	retf   
  40a95e:	xor    al,0xc5
  40a960:	mov    dl,0x34
  40a962:	jns    0x40a920
  40a964:	add    DWORD PTR [ecx],esp
  40a966:	mov    BYTE PTR [edx+ebx*8],bh
  40a969:	mov    dh,0x4a
  40a96b:	push   ecx
  40a96c:	and    eax,0xb2659938
  40a971:	je     0x40a932
  40a973:	xor    DWORD PTR [ebp-0x34b90de6],0xe1cd6387
  40a97d:	xchg   DWORD PTR [ecx],edx
  40a97f:	nop
  40a980:	and    DWORD PTR [edi+0x7374c036],ebx
  40a986:	or     DWORD PTR [ecx],0xfffffff5
  40a989:	or     esi,esp
  40a98b:	push   cs
  40a98c:	push   esp
  40a98d:	test   DWORD PTR [esi],esp
  40a98f:	imul   esp,esp,0x63
  40a992:	and    DWORD PTR [esi],ebx
  40a994:	xchg   ebp,eax
  40a995:	pop    esp
  40a996:	clc    
  40a997:	mov    ds:0x8bff0479,eax
  40a99c:	xchg   esp,eax
  40a99d:	(bad)  
  40a99e:	(bad)
  40a9a2:	dec    eax
  40a9a3:	jo     0x40a9ca
  40a9a5:	test   DWORD PTR ds:0xaa2db7ca,edi
  40a9ab:	rcr    DWORD PTR [ebp+0x593abaaf],1
  40a9b1:	in     eax,dx
  40a9b2:	sahf   
  40a9b3:	mov    dh,0x68
  40a9b5:	xchg   ebp,eax
  40a9b6:	out    dx,al
  40a9b7:	bound  ecx,QWORD PTR [esi]
  40a9b9:	pop    edx
  40a9ba:	xchg   edi,eax
  40a9bb:	inc    esi
  40a9bc:	inc    edi
  40a9bd:	popf   
  40a9be:	mov    bh,0x85
  40a9c0:	int    0x9
  40a9c2:	int    0xda
  40a9c4:	cld    
  40a9c5:	add    eax,0xb8827482
  40a9ca:	dec    eax
  40a9cb:	cdq    
  40a9cc:	add    eax,0x6487ca87
  40a9d1:	jmp    0x40aa17
  40a9d3:	pop    es
  40a9d4:	or     dh,BYTE PTR [eax+0x34624b46]
  40a9da:	das    
  40a9db:	xor    cl,BYTE PTR [ecx-0x37]
  40a9de:	es lahf 
  40a9e0:	inc    eax
  40a9e1:	loop   0x40a98f
  40a9e3:	sub    al,0xe0
  40a9e5:	mov    ds:0xf0f914e6,eax
  40a9ea:	pop    es
  40a9eb:	mov    al,ds:0xe0719e9e
  40a9f0:	call   0x232a8407
  40a9f5:	sub    eax,0xbb15abca
  40a9fa:	and    eax,0x540d5a06
  40a9ff:	fisubr DWORD PTR [ebx-0x5b3c4ab7]
  40aa05:	and    BYTE PTR [edi],bh
  40aa07:	rol    DWORD PTR [ecx+0x14],cl
  40aa0a:	dec    ebx
  40aa0b:	and    eax,0x3ee9e882
  40aa10:	ins    BYTE PTR es:[edi],dx
  40aa11:	aad    0x58
  40aa13:	outs   dx,DWORD PTR ds:[esi]
  40aa14:	mov    bl,al
  40aa16:	call   0xfb6990
  40aa1b:	push   dx
  40aa1d:	sub    BYTE PTR [ecx-0x6b3a4a5c],cl
  40aa23:	pop    ecx
  40aa24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa25:	shl    esp,cl
  40aa27:	mov    esi,esi
  40aa29:	jo     0x40aa5a
  40aa2b:	scas   eax,DWORD PTR es:[edi]
  40aa2c:	cmp    BYTE PTR [edi+0x1c533b9d],dl
  40aa32:	bnd jnp 0x40aa2a
  40aa35:	dec    edi
  40aa36:	outs   dx,BYTE PTR ds:[esi]
  40aa37:	(bad)  
  40aa38:	push   edi
  40aa39:	adc    DWORD PTR [ebp+ebx*4-0x6edd27dc],eax
  40aa40:	repz dec edx
  40aa42:	(bad)  
  40aa43:	out    dx,al
  40aa44:	push   edi
  40aa45:	popa   
  40aa46:	aas    
  40aa47:	mov    bh,0x77
  40aa49:	ja     0x40aaa2
  40aa4b:	inc    esp
  40aa4c:	fdivrp st(6),st
  40aa4e:	ret    
  40aa4f:	fstp   QWORD PTR [edx-0xa86cc5a]
  40aa55:	repnz xchg esi,eax
  40aa57:	cmp    eax,0xbf12597
  40aa5c:	fsubr  QWORD PTR [eax+esi*4+0x2562280e]
  40aa63:	dec    eax
  40aa64:	mov    ecx,0x7571e41a
  40aa69:	sub    al,0x6f
  40aa6b:	sbb    ecx,DWORD PTR [edx+ebp*4+0x4a811acd]
  40aa72:	ins    BYTE PTR es:[edi],dx
  40aa73:	mov    ecx,0x136c3c1a
  40aa78:	out    dx,al
  40aa79:	lods   al,BYTE PTR ds:[esi]
  40aa7a:	push   0x22
  40aa7c:	pop    ss
  40aa7d:	fidiv  DWORD PTR [ebx+0x5acf8e3e]
  40aa83:	push   es
  40aa84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa85:	je     0x40aa7f
  40aa87:	xlat   BYTE PTR ds:[ebx]
  40aa88:	cs or  al,0xea
  40aa8b:	int    0x3a
  40aa8d:	or     DWORD PTR [esi-0x68],ebp
  40aa90:	fnstsw WORD PTR [eax+0x4d7716c8]
  40aa96:	push   0x73f78b19
  40aa9b:	outs   dx,DWORD PTR ds:[esi]
  40aa9c:	sti    
  40aa9d:	jl     0x40ab0a
  40aa9f:	jns    0x40aa2e
  40aaa1:	cs call 0xa6f3:0xeaa144c4
  40aaa9:	or     al,0x9f
  40aaab:	pop    edx
  40aaac:	jp     0x40aab8
  40aaae:	push   0xffffffd6
  40aab0:	sbb    eax,0xd532f390
  40aab5:	cmp    ebp,DWORD PTR [ecx-0x7f322fb9]
  40aabb:	leave  
  40aabc:	std    
  40aabd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aabe:	push   edx
  40aabf:	jno    0x40aa86
  40aac1:	icebp  
  40aac2:	xchg   edi,eax
  40aac3:	dec    edi
  40aac4:	xchg   ebx,eax
  40aac5:	add    dl,BYTE PTR [edi-0x35584ef2]
  40aacb:	jmp    0x6929:0xd16ee81c
  40aad2:	pop    edi
  40aad3:	ret    
  40aad4:	xor    eax,0xcca773cb
  40aad9:	fsub   st,st(1)
  40aadb:	aaa    
  40aadc:	pop    ecx
  40aadd:	fsubr  DWORD PTR [esi-0x6c]
  40aae0:	adc    dl,BYTE PTR [ecx+0x391414ed]
  40aae6:	cli    
  40aae7:	imul   ebp,esp,0xcf92735c
  40aaed:	xor    DWORD PTR [eax],edx
  40aaef:	fs cmp al,0x66
  40aaf2:	mov    ah,0x4d
  40aaf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf5:	mov    al,0xc2
  40aaf7:	or     BYTE PTR [edx-0x7f],dh
  40aafa:	leave  
  40aafb:	lea    edi,[edx+eiz*4+0xdbc4502]
  40ab02:	sbb    eax,0x368a3e3
  40ab07:	add    al,0xb2
  40ab09:	xlat   BYTE PTR ds:[ebx]
  40ab0a:	xchg   DWORD PTR [eax],edx
  40ab0c:	ror    esp,0x87
  40ab0f:	and    esp,esi
  40ab11:	cmp    edx,ebx
  40ab13:	sbb    bl,cl
  40ab15:	(bad)  
  40ab16:	fsub   QWORD PTR [ecx-0x2]
  40ab19:	mov    ss,edi
  40ab1b:	inc    ebp
  40ab1c:	scas   eax,DWORD PTR es:[edi]
  40ab1d:	inc    ebp
  40ab1e:	xchg   ebx,eax
  40ab1f:	jbe    0x40ab93
  40ab21:	cmp    ebp,esi
  40ab23:	cs jne 0x40ab82
  40ab26:	or     bl,BYTE PTR [ebp-0x5c]
  40ab29:	push   eax
  40ab2a:	(bad)  
  40ab2b:	adc    cl,bh
  40ab2d:	and    ebx,DWORD PTR [eax-0x4326cb1f]
  40ab33:	adc    al,0xa
  40ab35:	or     eax,DWORD PTR [ebx-0xc2b9474]
  40ab3b:	and    al,0xa7
  40ab3d:	aam    0x28
  40ab3f:	ss add dh,al
  40ab42:	mov    al,ds:0x7c45018b
  40ab47:	push   ebx
  40ab48:	pop    ds
  40ab49:	loopne 0x40ab32
  40ab4b:	sbb    eax,0xd1f4efe7
  40ab50:	cmp    al,ah
  40ab52:	mov    ecx,0x8ecc626d
  40ab57:	ja     0x40ab59
  40ab59:	int    0xb3
  40ab5b:	xor    DWORD PTR [eax+ebp*2],edx
  40ab5e:	cmp    edi,DWORD PTR [eax]
  40ab60:	pop    ebx
  40ab61:	or     eax,0x24244170
  40ab66:	jge    0x40aba4
  40ab68:	and    DWORD PTR [ecx],ebx
  40ab6a:	lods   al,BYTE PTR ds:[esi]
  40ab6b:	jecxz  0x40abd0
  40ab6d:	add    BYTE PTR [ebx+esi*4],0xe8
  40ab71:	jp     0x40ab9b
  40ab73:	sbb    eax,0x95ed1010
  40ab78:	scas   al,BYTE PTR es:[edi]
  40ab79:	fwait
  40ab7a:	loopne 0x40ab53
  40ab7c:	sub    BYTE PTR [edi],al
  40ab7e:	inc    ecx
  40ab7f:	and    dh,BYTE PTR [edi+0x6d]
  40ab82:	fisub  WORD PTR [esi-0x20b7cea4]
  40ab88:	(bad)  
  40ab8a:	icebp  
  40ab8b:	mov    fs,esp
  40ab8d:	stos   BYTE PTR es:[edi],al
  40ab8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab8f:	sub    bh,BYTE PTR [edi+0x4d0c982a]
  40ab95:	unpcklps xmm0,xmm2
  40ab98:	imul   edi,DWORD PTR ds:0xd2e3d9ca,0x7d
  40ab9f:	cli    
  40aba0:	cmp    al,0xc1
  40aba2:	cmp    ch,bl
  40aba4:	jp     0x40ab73
  40aba6:	cmp    al,0xb6
  40aba8:	imul   ebp,DWORD PTR [ebp+edi*4+0x55],0x31dd808
  40abb0:	imul   cl
  40abb2:	mov    WORD PTR [eax],es
  40abb4:	(bad)  
  40abb5:	or     esp,DWORD PTR [ebp+0x14744eba]
  40abbb:	test   BYTE PTR [edi-0x5a27569e],cl
  40abc1:	jecxz  0x40ab66
  40abc3:	xor    eax,0x7fcff891
  40abc8:	push   esi
  40abc9:	pop    ebp
  40abca:	repz hlt 
  40abcc:	adc    ah,bl
  40abce:	dec    eax
  40abcf:	push   esi
  40abd0:	arpl   bx,bp
  40abd2:	loope  0x40ab8c
  40abd4:	cld    
  40abd5:	dec    ebx
  40abd6:	adc    DWORD PTR [edx-0x13],esi
  40abd9:	les    eax,FWORD PTR [ebp+0x65629aa7]
  40abdf:	std    
  40abe0:	sbb    dl,0xec
  40abe3:	in     al,dx
  40abe4:	and    al,0x81
  40abe6:	lea    edx,[edx]
  40abe8:	int    0x3b
  40abea:	stos   BYTE PTR es:[edi],al
  40abeb:	dec    ecx
  40abec:	jbe    0x40ac41
  40abee:	cmp    eax,0xb8cf241e
  40abf3:	mov    al,ds:0x94e439bd
  40abf8:	out    0x1,al
  40abfa:	(bad)  
  40abfc:	sub    edi,DWORD PTR [eax+0x39b9fa15]
  40ac02:	push   0xe62b67eb
  40ac07:	jo     0x40abd7
  40ac09:	jmp    0x40ac5a
  40ac0b:	or     al,0x13
  40ac0d:	mov    cl,0xfc
  40ac0f:	test   DWORD PTR [edx+0x0],esi
  40ac12:	mov    ah,0xdd
  40ac14:	test   BYTE PTR [eax+ecx*2],bh
  40ac17:	push   0x28
  40ac19:	jle    0x40abf2
  40ac1b:	test   al,0x6e
  40ac1d:	loope  0x40ac18
  40ac1f:	inc    esp
  40ac20:	fprem1 
  40ac22:	add    BYTE PTR [ecx-0x5ae0f567],0xeb
  40ac29:	mov    ebp,0x600950cc
  40ac2e:	push   ecx
  40ac2f:	or     al,0xa6
  40ac31:	or     DWORD PTR [ebx+0x1a1938ec],0xffffffec
  40ac38:	sub    DWORD PTR [edx-0x47b79bf3],ebx
  40ac3e:	(bad)  
  40ac3f:	mov    ds:0x2cf4e32f,al
  40ac44:	retf   0x853c
  40ac47:	pop    ds
  40ac48:	cmp    eax,0x4bd1d29b
  40ac4d:	test   DWORD PTR ds:0xff111fd7,edi
  40ac53:	push   0xffffffe5
  40ac55:	enter  0x6691,0x58
  40ac59:	retf   0x5235
  40ac5c:	pop    es
  40ac5d:	cmp    BYTE PTR [eax-0x19],0x5b
  40ac61:	jge    0x40acae
  40ac63:	call   0x7fc0:0xc2722eee
  40ac6a:	ret    
  40ac6b:	jge    0x40acbf
  40ac6d:	mov    ah,0x1a
  40ac6f:	sub    ch,bl
  40ac71:	lock xor eax,0x24335dae
  40ac77:	jo     0x40ac64
  40ac79:	dec    eax
  40ac7a:	cmp    ebx,edx
  40ac7c:	cwde   
  40ac7d:	and    BYTE PTR [edx+0x4730f9ff],dh
  40ac83:	mov    esp,0x42829676
  40ac88:	aad    0xe3
  40ac8a:	adc    bh,BYTE PTR ds:0xa178848d
  40ac90:	das    
  40ac91:	lahf   
  40ac92:	int    0x12
  40ac94:	ror    BYTE PTR [ebx+0x6],0xfc
  40ac98:	lock lea ebx,[edx+ebp*8+0x25]
  40ac9d:	fimul  DWORD PTR [ecx]
  40ac9f:	outs   dx,DWORD PTR ds:[esi]
  40aca0:	pop    ecx
  40aca1:	in     al,0xb1
  40aca3:	je     0x40ace1
  40aca5:	mov    esi,0x28a9693f
  40acaa:	cmp    al,0x73
  40acac:	test   eax,0x838a0528
  40acb1:	rcl    ebp,cl
  40acb3:	pop    ss
  40acb4:	push   ss
  40acb5:	push   ecx
  40acb6:	jnp    0x40ad2d
  40acb8:	add    BYTE PTR [edx+ebx*2-0x5f3893f],bh
  40acbf:	sub    ebx,DWORD PTR ds:0x88e073c3
  40acc5:	arpl   si,cx
  40acc7:	ss mov bl,0x5
  40acca:	xor    eax,0x781b9904
  40accf:	fwait
  40acd0:	ret    0xcdb0
  40acd3:	xchg   edx,eax
  40acd4:	push   ds
  40acd5:	sbb    edi,DWORD PTR [eax+0x67]
  40acd8:	inc    eax
  40acd9:	mov    edi,0x8cbf764a
  40acde:	dec    edx
  40acdf:	jae    0x40ac99
  40ace1:	push   edi
  40ace2:	or     ebp,DWORD PTR [ebp-0x7273aeec]
  40ace8:	mov    ch,0x60
  40acea:	dec    eax
  40aceb:	nop
  40acec:	adc    BYTE PTR [edi+0x6f83cfe9],dh
  40acf2:	sbb    edi,DWORD PTR [edx]
  40acf4:	push   ebx
  40acf5:	in     al,0xd0
  40acf7:	outs   dx,DWORD PTR ds:[esi]
  40acf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acf9:	inc    ebp
  40acfa:	sbb    ebx,DWORD PTR [esi+esi*1]
  40acfd:	inc    ebx
  40acfe:	stos   BYTE PTR es:[edi],al
  40acff:	out    0xe3,eax
  40ad01:	push   esp
  40ad02:	lea    esp,[ecx-0x956ef64]
  40ad08:	jmp    0x40ad78
  40ad0a:	push   ecx
  40ad0b:	int    0xaa
  40ad0d:	lods   al,BYTE PTR ds:[esi]
  40ad0e:	cmp    eax,0x1abe159c
  40ad13:	inc    edx
  40ad14:	xor    al,0x6f
  40ad16:	dec    esi
  40ad17:	mov    edx,DWORD PTR [esi+0x47]
  40ad1a:	rol    DWORD PTR [ebx+ecx*2],cl
  40ad1d:	lea    ebx,ds:0x2c1c3fcc
  40ad23:	adc    al,ah
  40ad25:	jns    0x40ad0c
  40ad27:	test   eax,0xd862f1e7
  40ad2c:	aas    
  40ad2d:	scas   al,BYTE PTR es:[edi]
  40ad2e:	cs add eax,0x384831bc
  40ad34:	jb     0x40ad70
  40ad36:	into   
  40ad37:	addr16 mov ebx,0xbb83545f
  40ad3d:	outs   dx,DWORD PTR ds:[esi]
  40ad3e:	or     ecx,0x2f1d8c22
  40ad44:	add    eax,0xb2f57273
  40ad49:	pop    edx
  40ad4a:	iret   
  40ad4b:	push   esp
  40ad4c:	add    eax,0xfb0f234b
  40ad51:	push   ecx
  40ad52:	das    
  40ad53:	xchg   esi,eax
  40ad54:	out    0x91,al
  40ad56:	and    bh,BYTE PTR [edi]
  40ad58:	mov    al,0xc4
  40ad5a:	xchg   ebx,eax
  40ad5b:	ret    0x9251
  40ad5e:	adc    BYTE PTR [eax+ebp*4],bh
  40ad61:	jg     0x40ad57
  40ad63:	cmp    eax,0x34ba227
  40ad68:	sbb    bh,BYTE PTR [edx+0x33]
  40ad6b:	inc    esp
  40ad6c:	out    dx,eax
  40ad6d:	scas   eax,DWORD PTR es:[edi]
  40ad6e:	mov    bh,0x13
  40ad70:	inc    ebx
  40ad71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad72:	popf   
  40ad73:	aam    0x50
  40ad75:	adc    BYTE PTR [edi+0xb],al
  40ad78:	dec    edx
  40ad79:	pop    esi
  40ad7b:	clc    
  40ad7c:	dec    eax
  40ad7d:	push   0x6c
  40ad7f:	xchg   edx,eax
  40ad80:	jb     0x40ad48
  40ad82:	rol    BYTE PTR [eax-0x6bbb8cda],0xe2
  40ad89:	xchg   ecx,eax
  40ad8a:	sbb    esp,0x3f39dece
  40ad90:	mov    esi,ecx
  40ad92:	push   0xbc11048
  40ad97:	daa    
  40ad98:	add    edx,eax
  40ad9a:	push   edi
  40ad9b:	mov    ?,eax
  40ad9d:	data16 sar BYTE PTR [edx+eiz*8],cl
  40ada1:	pop    ebp
  40ada2:	ja     0x40adbb
  40ada4:	ror    DWORD PTR [ebx-0x35daa5d1],1
  40adaa:	iret   
  40adab:	int3   
  40adac:	test   DWORD PTR [edx+0x29475d91],esi
  40adb2:	mov    dl,0xb0
  40adb4:	idiv   DWORD PTR [edx-0x2a59fea9]
  40adba:	xchg   BYTE PTR [eax+0x56],al
  40adbd:	mov    bl,0xb8
  40adbf:	shl    DWORD PTR [ebx+0x67],0x53
  40adc3:	pop    ecx
  40adc4:	sub    DWORD PTR [edi+0x53],esi
  40adc7:	outs   dx,BYTE PTR ds:[esi]
  40adc8:	test   eax,0x4e23203f
  40adcd:	push   ds
  40adce:	leave  
  40adcf:	sahf   
  40add0:	push   ecx
  40add1:	in     al,0x1d
  40add3:	sub    al,dl
  40add5:	pop    esi
  40add6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add7:	and    al,0x87
  40add9:	in     eax,0xfb
  40addb:	or     DWORD PTR [edi+0x35],ebp
  40adde:	push   ds
  40addf:	sbb    BYTE PTR [ecx-0x5a],0x7
  40ade3:	and    BYTE PTR [edx],0xcd
  40ade6:	cdq    
  40ade7:	std    
  40ade8:	iret   
  40ade9:	out    dx,al
  40adea:	fstp   TBYTE PTR [esi+0x20a658d9]
  40adf0:	lods   eax,DWORD PTR ds:[esi]
  40adf1:	jne    0x40adc1
  40adf3:	dec    ebp
  40adf4:	ret    0x4066
  40adf7:	inc    esp
  40adf8:	mov    al,ds:0x5b19593e
  40adfd:	out    0x7d,eax
  40adff:	lahf   
  40ae00:	std    
  40ae01:	aad    0x4e
  40ae03:	inc    ecx
  40ae04:	dec    ebx
  40ae05:	int    0xab
  40ae07:	ror    dh,0x73
  40ae0a:	call   0xcdfc:0xf7e2c44e
  40ae11:	mov    BYTE PTR [ebp+0x434be254],ch
  40ae17:	add    ecx,DWORD PTR ds:0xec221555
  40ae1d:	pop    esp
  40ae1e:	into   
  40ae1f:	xchg   edi,eax
  40ae20:	inc    ebp
  40ae21:	sar    DWORD PTR [esi-0x70],1
  40ae24:	xchg   ebx,eax
  40ae25:	pop    ds
  40ae26:	add    bh,BYTE PTR [ecx-0x1e]
  40ae29:	ret    0xa277
  40ae2c:	test   DWORD PTR [eax-0x35],0x2dcbfc62
  40ae33:	fwait
  40ae34:	push   eax
  40ae35:	cwde   
  40ae36:	int3   
  40ae37:	xchg   ebp,eax
  40ae38:	cmp    eax,0xb0b4995e
  40ae3d:	jbe    0x40ae2e
  40ae3f:	ror    ebp,cl
  40ae41:	loopne 0x40ae4b
  40ae43:	dec    ecx
  40ae44:	adc    BYTE PTR [ecx],dl
  40ae46:	clc    
  40ae47:	mov    ch,0xa1
  40ae49:	sbb    ch,BYTE PTR [esi-0x7e0e5f79]
  40ae4f:	addr16 popa 
  40ae51:	pop    edx
  40ae52:	call   0x915be413
  40ae57:	stc    
  40ae58:	out    0xf6,al
  40ae5a:	pop    ebx
  40ae5b:	lock call 0xd636023e
  40ae61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae62:	inc    esi
  40ae63:	push   cs
  40ae64:	push   cs
  40ae65:	inc    ebx
  40ae66:	ins    BYTE PTR es:[edi],dx
  40ae67:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40ae69:	not    DWORD PTR [esi]
  40ae6b:	popf   
  40ae6c:	les    ebx,FWORD PTR [edx+0x161ababf]
  40ae72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae73:	call   0xe0fe:0xa88c4286
  40ae7a:	mov    ebp,DWORD PTR [ecx+0x33]
  40ae7d:	in     al,dx
  40ae7e:	and    dl,BYTE PTR ds:0x88638024
  40ae84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae85:	dec    ecx
  40ae86:	mov    esi,0x9ff36eac
  40ae8b:	jl     0x40ae32
  40ae8d:	push   es
  40ae8e:	mov    ds:0xc294aa9,al
  40ae93:	mov    ecx,0x3bdfec7b
  40ae98:	push   ecx
  40ae99:	stc    
  40ae9a:	repz and ch,al
  40ae9d:	inc    esi
  40ae9e:	sub    eax,0x8eaec718
  40aea3:	fstp   DWORD PTR [edx+esi*2+0x1a]
  40aea7:	xchg   esi,eax
  40aea8:	nop
  40aea9:	xchg   edx,eax
  40aeaa:	ins    DWORD PTR es:[edi],dx
  40aeab:	jecxz  0x40af1d
  40aead:	mov    ebx,0x2dbaa5b4
  40aeb2:	popa   
  40aeb3:	test   DWORD PTR [edx],ebx
  40aeb5:	iret   
  40aeb6:	and    al,0x47
  40aeb8:	xchg   ecx,eax
  40aeb9:	ds xchg esi,eax
  40aebb:	into   
  40aebc:	lock std 
  40aebe:	lea    edx,ds:0xf7a968d
  40aec4:	sub    BYTE PTR [esi],0xb1
  40aec7:	pop    edi
  40aec8:	dec    ecx
  40aec9:	repnz out 0xe7,eax
  40aecc:	sbb    cl,ah
  40aece:	rol    BYTE PTR [ecx],0xca
  40aed1:	inc    eax
  40aed2:	sub    dl,0x70
  40aed5:	add    ebx,0x81ec0b21
  40aedb:	stos   DWORD PTR es:[edi],eax
  40aedc:	loop   0x40aedb
  40aede:	xchg   esp,eax
  40aedf:	adc    ch,0x57
  40aee2:	sbb    BYTE PTR [eax-0x4a],cl
  40aee5:	jge    0x40af0e
  40aee7:	jno    0x40af10
  40aee9:	jmp    0xcb37c25
  40aeee:	mov    ebx,0xa08c3b22
  40aef3:	lods   eax,DWORD PTR ds:[esi]
  40aef4:	xchg   BYTE PTR [eax-0x35],ah
  40aef7:	js     0x40ae7a
  40aef9:	mov    edi,0x25a595a
  40aefe:	stos   DWORD PTR es:[edi],eax
  40aeff:	mov    esp,DWORD PTR [ecx-0x271858c]
  40af05:	mov    edi,0x26f66ec8
  40af0a:	pop    edi
  40af0b:	sbb    DWORD PTR [esi],0x5e
  40af0e:	mov    bh,0x86
  40af10:	js     0x40af2a
  40af12:	push   es
  40af13:	sbb    edi,DWORD PTR [ebx+0x3eb326da]
  40af19:	mov    edi,0xa692311c
  40af1e:	into   
  40af1f:	hlt    
  40af20:	fcmovnb st,st(3)
  40af22:	gs repnz mov esi,0x15968255
  40af29:	out    dx,al
  40af2a:	rcr    ecx,1
  40af2c:	inc    edx
  40af2d:	(bad)  
  40af2f:	fnclex 
  40af31:	pop    ss
  40af32:	test   BYTE PTR [ecx],0x43
  40af35:	xchg   esi,eax
  40af36:	and    eax,0xee8cbc17
  40af3b:	(bad)  
  40af3c:	jp     0x40af94
  40af3e:	mov    bl,0xea
  40af40:	or     BYTE PTR ds:0xf73cc173,bl
  40af46:	add    DWORD PTR [ebx+0x6e83f6c3],edi
  40af4c:	mov    esp,0x56cb8ad3
  40af51:	inc    ecx
  40af52:	sar    DWORD PTR [ecx+0x11],0x5d
  40af56:	stos   BYTE PTR es:[edi],al
  40af57:	addr16 gs dec esi
  40af5a:	aad    0xa5
  40af5c:	test   eax,0x96613eb0
  40af61:	bound  ebp,QWORD PTR [edx]
  40af63:	rol    dl,0x85
  40af66:	hlt    
  40af67:	loope  0x40af92
  40af69:	lock pop edi
  40af6b:	hlt    
  40af6c:	es mov esi,0x5c6c1d47
  40af72:	pop    es
  40af73:	fst    st(6)
  40af75:	fs xor al,0x9c
  40af78:	mov    esi,0x2ef75cbd
  40af7d:	inc    edx
  40af7e:	and    esp,esi
  40af80:	adc    eax,0xd68ae7b3
  40af85:	lahf   
  40af86:	xor    BYTE PTR [esi-0x2833e9a2],ch
  40af8c:	dec    eax
  40af8d:	mov    eax,0xb4f1806a
  40af92:	sbb    bl,ah
  40af94:	or     cl,ah
  40af96:	mov    edi,0x49ad2f3b
  40af9b:	pushf  
  40af9c:	sbb    dl,BYTE PTR [eax+esi*8-0x59]
  40afa0:	gs push 0x36
  40afa3:	push   ecx
  40afa4:	xchg   ecx,eax
  40afa5:	mov    bl,0x9
  40afa7:	push   0xffffffe8
  40afa9:	or     al,BYTE PTR [edi]
  40afab:	xchg   ecx,eax
  40afac:	sahf   
  40afad:	fsubr  st(5),st
  40afaf:	sub    DWORD PTR ds:0xda959018,ebp
  40afb5:	pusha  
  40afb6:	push   ss
  40afb7:	mov    ds:0xe1744b0d,eax
  40afbc:	rcr    BYTE PTR [ebp-0x3b],cl
  40afbf:	inc    edx
  40afc0:	es jb  0x40b000
  40afc3:	mov    ebx,0x624a5418
  40afc8:	gs xadd edx,ebp
  40afcc:	aam    0x82
  40afce:	sbb    BYTE PTR [esi-0x7e],cl
  40afd1:	xchg   esp,eax
  40afd2:	xchg   BYTE PTR [eax],dh
  40afd4:	enter  0x3bfc,0x7a
  40afd8:	retf   0x64f8
  40afdb:	xchg   edx,eax
  40afdc:	push   cs
  40afdd:	call   0x2427:0xe5472981
  40afe4:	xchg   esp,eax
  40afe5:	sub    edi,DWORD PTR [ecx]
  40afe7:	or     eax,0x45f03380
  40afec:	inc    esi
  40afed:	(bad)  
  40afee:	(bad)  
  40aff0:	loop   0x40b029
  40aff2:	inc    eax
  40aff3:	dec    ecx
  40aff4:	xlat   BYTE PTR ds:[ebx]
  40aff5:	aam    0xa9
  40aff7:	and    al,0x13
  40aff9:	cmp    al,0xe5
  40affb:	pop    eax
  40affc:	(bad)  [esi-0x76]
  40afff:	pop    edx
  40b000:	inc    ebp
  40b001:	or     ax,0xf236
  40b005:	add    eax,0xcd0fcc9
  40b00a:	dec    edx
  40b00b:	jp     0x40b04b
  40b00d:	mov    ds:0x5900fa57,al
  40b012:	and    eax,0x3037e068
  40b017:	je     0x40b018
  40b019:	sbb    al,0xbc
  40b01b:	push   ebx
  40b01c:	xchg   ebp,eax
  40b01d:	shr    BYTE PTR [esi+0x4a],0x1d
  40b021:	ret    0x7b35
  40b024:	xor    esp,ebp
  40b026:	inc    edx
  40b027:	es jns 0x40b063
  40b02a:	push   cs
  40b02b:	and    eax,0xbd1f1ee0
  40b030:	sbb    eax,0xc32f2798
  40b035:	jl     0x40aff5
  40b037:	add    eax,0x276c9c13
  40b03c:	sbb    BYTE PTR [edi-0x6],dl
  40b03f:	pop    edx
  40b040:	add    DWORD PTR ds:0x49b5b3b5,edi
  40b046:	out    0x77,al
  40b048:	push   0x4e
  40b04a:	stos   DWORD PTR es:[edi],eax
  40b04b:	pop    edi
  40b04c:	fbstp  TBYTE PTR [ebx+0x1a]
  40b04f:	jne    0x40afd4
  40b051:	fistp  QWORD PTR [ebx+0x47]
  40b054:	gs fwait
  40b056:	int3   
  40b057:	xchg   esi,eax
  40b058:	int    0xc2
  40b05a:	(bad)  
  40b05b:	sbb    DWORD PTR [edi-0x2],eax
  40b05e:	inc    ecx
  40b05f:	push   ebp
  40b060:	retf   
  40b061:	xchg   edi,eax
  40b062:	aad    0xe7
  40b064:	jae    0x40b062
  40b066:	loope  0x40b0ba
  40b068:	(bad)  
  40b069:	fcomp  st(4)
  40b06b:	out    0xcc,al
  40b06d:	jmp    0x4c5802ae
  40b072:	lahf   
  40b073:	(bad)  
  40b074:	mov    esp,DWORD PTR [ecx]
  40b076:	xor    BYTE PTR [ecx+ebp*2-0x2d76569b],dh
  40b07d:	mov    DWORD PTR [esi],edi
  40b07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b080:	or     dl,BYTE PTR ds:0x8e17ad1d
  40b086:	out    dx,al
  40b087:	sbb    ebx,DWORD PTR [eax]
  40b089:	jge    0x40b046
  40b08b:	push   edi
  40b08c:	adc    dh,al
  40b08e:	sub    DWORD PTR [esi],ecx
  40b090:	xor    al,0x6b
  40b092:	pop    ecx
  40b093:	xchg   edx,eax
  40b094:	test   eax,0xf5555c91
  40b099:	js     0x40b0b2
  40b09b:	mov    BYTE PTR [edx],dh
  40b09d:	push   esi
  40b09e:	retf   
  40b09f:	add    eax,0xf1bbd8a4
  40b0a4:	in     eax,dx
  40b0a5:	jp     0x40b0ae
  40b0a7:	out    0xae,eax
  40b0a9:	dec    eax
  40b0aa:	jle    0x40b09d
  40b0ac:	adc    al,0xaa
  40b0ae:	pmulhuw mm1,mm0
  40b0b1:	call   0x6fce:0xef04e3be
  40b0b8:	push   ecx
  40b0b9:	adc    bh,ch
  40b0bb:	into   
  40b0bc:	xor    ebx,DWORD PTR [edi-0x2d42001a]
  40b0c2:	sub    DWORD PTR [esi-0x5b88e867],edi
  40b0c8:	pop    ebp
  40b0c9:	out    dx,al
  40b0ca:	shl    ah,cl
  40b0cc:	and    ebx,eax
  40b0ce:	mov    ds,ecx
  40b0d0:	cmp    DWORD PTR [ebx],esp
  40b0d2:	scas   al,BYTE PTR es:[edi]
  40b0d3:	lods   eax,DWORD PTR ds:[esi]
  40b0d4:	cld    
  40b0d5:	sbb    eax,0xd39f203d
  40b0da:	cmc    
  40b0db:	cmp    eax,DWORD PTR [eax+0x45]
  40b0de:	(bad)  
  40b0df:	ds and al,0x3
  40b0e2:	aas    
  40b0e3:	push   es
  40b0e4:	sahf   
  40b0e5:	xor    esp,esi
  40b0e7:	cdq    
  40b0e8:	test   eax,esp
  40b0ea:	aaa    
  40b0eb:	je     0x40b078
  40b0ed:	xchg   ebx,eax
  40b0ee:	lahf   
  40b0ef:	fwait
  40b0f0:	aam    0x19
  40b0f2:	mov    dh,0x20
  40b0f4:	mov    eax,0xab2fb39f
  40b0f9:	xchg   ebp,eax
  40b0fa:	fs cld 
  40b0fc:	aam    0x78
  40b0fe:	test   eax,0x96dce69e
  40b103:	dec    ebx
  40b104:	pop    es
  40b105:	mov    al,0xef
  40b107:	das    
  40b108:	mov    db7,esp
  40b10b:	and    bh,BYTE PTR [edx]
  40b10d:	sbb    al,0x45
  40b10f:	xchg   ecx,eax
  40b110:	iret   
  40b111:	iret   
  40b112:	dec    eax
  40b113:	fcomp  DWORD PTR [eax-0x47238f77]
  40b119:	and    DWORD PTR [esi],edi
  40b11b:	pop    edx
  40b11c:	dec    edx
  40b11d:	out    0xe,al
  40b11f:	outs   dx,DWORD PTR ds:[esi]
  40b120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b121:	pop    edx
  40b122:	mov    ecx,0x3cdd3b3c
  40b127:	push   esi
  40b128:	mov    esp,0x85d0076d
  40b12d:	add    ebp,DWORD PTR [ebx+0x1a]
  40b130:	scas   al,BYTE PTR es:[edi]
  40b131:	pusha  
  40b132:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b134:	into   
  40b135:	test   eax,0x12a5f542
  40b13a:	cmp    eax,0x9e1151ae
  40b13f:	daa    
  40b140:	pop    eax
  40b141:	std    
  40b142:	ret    0x2242
  40b145:	and    ebp,ebp
  40b147:	mov    bh,0x92
  40b149:	mov    ds:0x2cf6fa06,eax
  40b14e:	repz cmc 
  40b150:	jl     0xdda685a9
  40b156:	aad    0x85
  40b158:	mov    ebx,0x7477ea36
  40b15d:	cwde   
  40b15e:	xchg   esp,eax
  40b15f:	jecxz  0x40b10a
  40b161:	cs test al,0xd3
  40b164:	cs pop eax
  40b166:	mov    BYTE PTR [eax],dl
  40b168:	iret   
  40b169:	mov    ecx,0xc9982cf9
  40b16e:	ret    0x6731
  40b171:	push   0x46
  40b173:	xor    esi,DWORD PTR [eax+0x21a3f2f0]
  40b179:	rcr    DWORD PTR [ecx-0x1c5a0d5c],cl
  40b17f:	jg     0x40b13f
  40b181:	or     ecx,DWORD PTR [esi]
  40b183:	ins    BYTE PTR es:[edi],dx
  40b184:	and    ah,BYTE PTR [eax]
  40b186:	repnz lahf 
  40b188:	in     eax,dx
  40b189:	clc    
  40b18a:	xor    eax,0x5d66f768
  40b18f:	aam    0x10
  40b191:	fwait
  40b192:	(bad)  
  40b193:	and    eax,0x5492fca0
  40b198:	mov    gs,WORD PTR [ecx-0x32]
  40b19b:	lea    ecx,[ebp-0xb722110]
  40b1a1:	add    eax,0x1dbb8c94
  40b1a6:	xor    bl,ch
  40b1a8:	pushf  
  40b1a9:	dec    esi
  40b1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ab:	into   
  40b1ac:	out    dx,eax
  40b1ad:	gs js  0x40b1e8
  40b1b0:	lock rcl BYTE PTR [edx+0x4e],0xa9
  40b1b5:	mov    al,ds:0xcc40d538
  40b1ba:	sub    DWORD PTR [eax+0x3101db8e],esp
  40b1c0:	adc    eax,DWORD PTR [ecx-0x151dd041]
  40b1c6:	je     0x40b155
  40b1c8:	xchg   eax,esp
  40b1ca:	fld    DWORD PTR [esi+0x7e328814]
  40b1d0:	jl     0x40b217
  40b1d2:	xchg   BYTE PTR [edx+0x31],dl
  40b1d5:	(bad)  
  40b1d6:	jge    0x40b1bb
  40b1d8:	stc    
  40b1d9:	inc    eax
  40b1da:	cmp    bh,dh
  40b1dc:	push   0x10848cf7
  40b1e1:	push   0xd5edc1b2
  40b1e6:	add    dl,BYTE PTR [edx*2-0x5c56dfb]
  40b1ed:	mov    ecx,ebx
  40b1ef:	push   ebp
  40b1f0:	shl    DWORD PTR [ebx-0x3e],1
  40b1f3:	shr    edx,1
  40b1f5:	pusha  
  40b1f6:	xor    ah,ah
  40b1f8:	jb     0x40b1ad
  40b1fa:	or     al,0x95
  40b1fc:	ins    DWORD PTR es:[edi],dx
  40b1fd:	push   esi
  40b1fe:	nop
  40b1ff:	out    0xdb,eax
  40b201:	jo     0x40b230
  40b203:	and    esi,0x40069196
  40b209:	mov    WORD PTR [edi-0x2b82aa6c],gs
  40b20f:	dec    edx
  40b210:	scas   al,BYTE PTR es:[edi]
  40b211:	mov    bh,BYTE PTR [ecx+0x1d3c99a7]
  40b217:	shl    DWORD PTR [edx],cl
  40b219:	adc    ebp,ecx
  40b21b:	rcr    esi,cl
  40b21d:	stos   BYTE PTR es:[edi],al
  40b21e:	jne    0x40b1c7
  40b220:	test   ch,dl
  40b222:	inc    ecx
  40b223:	mov    BYTE PTR ds:0x104af57e,ch
  40b229:	jo     0x40b1f4
  40b22b:	mov    dh,0xce
  40b22d:	hlt    
  40b22e:	sub    al,0x2b
  40b230:	pop    esp
  40b231:	jae    0x40b29f
  40b233:	shl    DWORD PTR [eax-0x100fa0c5],cl
  40b239:	or     esi,DWORD PTR [eax-0x5f3b04a9]
  40b23f:	cwde   
  40b240:	jbe    0x40b2aa
  40b242:	test   al,0x28
  40b244:	xor    esi,DWORD PTR [edx+0x3713762f]
  40b24a:	call   0x4cd9:0x24d38621
  40b251:	and    eax,0x49d11c25
  40b256:	adc    BYTE PTR [edx+ebp*1],0x23
  40b25a:	jno    0x40b1e3
  40b25c:	sub    bh,cl
  40b25e:	jp     0x40b280
  40b260:	push   esi
  40b261:	pop    ebp
  40b262:	jl     0x40b27c
  40b264:	push   ds
  40b265:	shl    ch,1
  40b267:	sub    al,0xd1
  40b269:	call   0x19ee:0x58307a0d
  40b270:	xchg   edx,eax
  40b271:	cmp    al,0xe2
  40b273:	out    0x89,al
  40b275:	(bad)  
  40b276:	iret   
  40b277:	jo     0x40b2e7
  40b279:	mov    ebp,0x3face946
  40b27e:	or     DWORD PTR [eax+0x3b17cd91],eax
  40b284:	mov    edi,0x1900f5e0
  40b289:	push   es
  40b28a:	out    0xc5,al
  40b28c:	sahf   
  40b28d:	adc    al,0x97
  40b28f:	ret    0xc0ca
  40b292:	fstp   TBYTE PTR [edx-0x55]
  40b295:	mov    dh,0x4d
  40b297:	out    dx,al
  40b298:	std    
  40b299:	mov    cl,0x36
  40b29b:	or     DWORD PTR [edi+0x43],0x2daa6dc5
  40b2a2:	fsubr  st,st(5)
  40b2a4:	jmp    0x828e:0x82cbdffa
  40b2ab:	hlt    
  40b2ac:	cmp    ecx,edx
  40b2ae:	clc    
  40b2af:	or     DWORD PTR [edx-0x7b],esp
  40b2b2:	jb     0x40b28f
  40b2b4:	pop    es
  40b2b5:	add    ebp,DWORD PTR [ebx]
  40b2b7:	xchg   esi,eax
  40b2b8:	push   edi
  40b2b9:	repz pushf 
  40b2bb:	aad    0x4d
  40b2bd:	fcom   st(0)
  40b2bf:	add    DWORD PTR [ecx-0x1cf61914],esi
  40b2c5:	in     eax,dx
  40b2c6:	das    
  40b2c7:	ds mov ebp,edi
  40b2ca:	xchg   esp,eax
  40b2cb:	dec    edi
  40b2cc:	aas    
  40b2cd:	push   0xa492b6c7
  40b2d2:	mov    ebx,0x665c968d
  40b2d7:	dec    esi
  40b2d8:	cld    
  40b2d9:	mov    ds:0x13f059f6,al
  40b2de:	jge    0x40b2ac
  40b2e0:	out    dx,al
  40b2e1:	adc    eax,0xdaf22bab
  40b2e6:	dec    edi
  40b2e7:	ss pop esp
  40b2e9:	mov    ch,0xb0
  40b2eb:	mul    ebx
  40b2ed:	loopne 0x40b32d
  40b2ef:	add    eax,DWORD PTR [eax+0x19]
  40b2f2:	enter  0xfe77,0xda
  40b2f6:	and    edi,DWORD PTR [ecx]
  40b2f8:	mov    cl,0x91
  40b2fa:	cmp    al,0x51
  40b2fc:	sbb    ebp,0xffffff9b
  40b2ff:	jb     0x40b292
  40b301:	out    0xae,al
  40b303:	push   esp
  40b304:	and    DWORD PTR [esi],edi
  40b306:	cmp    BYTE PTR [ebp+0x4c],al
  40b309:	add    al,0x1e
  40b30b:	lea    ebp,[ebp+eax*4+0x2971b9c2]
  40b312:	mov    eax,ds:0xb6419b5d
  40b317:	add    esi,DWORD PTR [edi+eiz*2-0x29]
  40b31b:	mov    ds:0x8f53828b,al
  40b320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b321:	daa    
  40b322:	rcr    DWORD PTR [eax-0x5dfabffb],0x3d
  40b329:	jl     0x40b343
  40b32b:	mov    eax,ecx
  40b32d:	(bad)  
  40b32e:	aas    
  40b32f:	push   esi
  40b330:	nop
  40b331:	out    dx,eax
  40b332:	push   esi
  40b333:	(bad)  
  40b334:	adc    eax,0xbc6ab147
  40b339:	test   eax,0x281892e0
  40b33e:	repnz std 
  40b340:	out    dx,al
  40b341:	iret   
  40b342:	jae    0x40b2fb
  40b344:	pop    ebp
  40b345:	jb     0x40b2eb
  40b347:	pop    ds
  40b348:	xchg   edx,eax
  40b349:	pop    ds
  40b34a:	sbb    al,0xf5
  40b34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b34d:	adc    al,0xd0
  40b34f:	lods   eax,DWORD PTR ds:[esi]
  40b350:	into   
  40b351:	mov    dl,0x3c
  40b353:	enter  0xaaee,0xa1
  40b357:	test   eax,ebx
  40b359:	in     al,0xd8
  40b35b:	cmc    
  40b35c:	cmp    al,0xd9
  40b35e:	frstor [ecx+0x2e]
  40b361:	ins    DWORD PTR es:[edi],dx
  40b362:	in     eax,0x45
  40b364:	lods   al,BYTE PTR ds:[esi]
  40b365:	and    DWORD PTR [esi+0x2b],0xebd6203e
  40b36c:	mov    dl,cl
  40b36e:	jmp    0x76df:0xcfe92524
  40b375:	cmp    edx,DWORD PTR [ebx+0x504a9dec]
  40b37b:	inc    esp
  40b37c:	jle    0x40b3bd
  40b37e:	jno    0x40b346
  40b380:	ror    BYTE PTR [edi],cl
  40b382:	(bad)  [edi]
  40b384:	push   ecx
  40b385:	pop    esp
  40b386:	xchg   ecx,eax
  40b387:	loopne 0x40b3eb
  40b389:	sti    
  40b38a:	push   es
  40b38b:	jge    0x40b3c0
  40b38d:	xor    cl,BYTE PTR [ebp+0x690d05d9]
  40b393:	enter  0xf585,0xd6
  40b397:	sbb    al,0x5f
  40b399:	(bad)  
  40b39a:	leave  
  40b39b:	mov    dl,0x56
  40b39d:	ret    
  40b39e:	add    al,BYTE PTR [ebp+eiz*2-0x4c]
  40b3a2:	aas    
  40b3a3:	and    eax,0x8856c193
  40b3a8:	ss es sub eax,0xfc3faddb
  40b3af:	jns    0x40b3d0
  40b3b1:	push   0xe436948d
  40b3b6:	loopne 0x40b33c
  40b3b8:	sbb    DWORD PTR [ebx-0x3e],ecx
  40b3bb:	mov    ch,0x15
  40b3bd:	in     eax,0x2a
  40b3bf:	loopne 0x40b341
  40b3c1:	or     ebp,esp
  40b3c3:	fst    DWORD PTR [ebp+0x73b0a166]
  40b3c9:	push   cs
  40b3ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3cc:	dec    edi
  40b3cd:	mov    edi,0x8e32be77
  40b3d2:	mov    ch,bl
  40b3d4:	out    dx,al
  40b3d5:	pop    eax
  40b3d6:	aam    0x1d
  40b3d8:	out    dx,al
  40b3d9:	inc    edi
  40b3da:	aaa    
  40b3db:	sbb    al,0xd5
  40b3dd:	retf   0x9840
  40b3e0:	or     cl,BYTE PTR [edx+0x5a51070d]
  40b3e6:	inc    esi
  40b3e7:	aas    
  40b3e8:	or     edx,DWORD PTR [ecx-0x5bbf00a8]
  40b3ee:	adc    BYTE PTR ds:0x73bfc4fd,al
  40b3f4:	add    DWORD PTR [ebp-0x76],0xdd83708a
  40b3fb:	jmp    0x40b451
  40b3fd:	out    0x64,eax
  40b3ff:	scas   eax,DWORD PTR es:[edi]
  40b400:	cmp    BYTE PTR [esi*1-0x479a8ed0],0x84
  40b408:	xor    al,0x5c
  40b40a:	dec    esi
  40b40b:	or     al,0x20
  40b40d:	sub    ebp,DWORD PTR [edi-0x71c6b789]
  40b413:	out    dx,al
  40b414:	pop    edx
  40b415:	mov    ch,0xa2
  40b417:	test   eax,0xca5d59a0
  40b41c:	inc    esp
  40b41d:	pusha  
  40b41e:	sahf   
  40b41f:	aad    0xd7
  40b421:	fidiv  DWORD PTR [edi+eax*4+0x1a]
  40b425:	mov    dh,0x88
  40b427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b428:	out    0xfd,eax
  40b42a:	jmp    0xdf47:0x4d4eeed6
  40b431:	retf   0x31bf
  40b434:	aad    0xe8
  40b436:	and    dh,BYTE PTR [ebx-0x17]
  40b439:	add    al,0x76
  40b43b:	cld    
  40b43c:	loopne 0x40b4b1
  40b43e:	pop    edi
  40b43f:	in     al,0xb
  40b441:	lds    eax,FWORD PTR [edx]
  40b443:	push   edi
  40b444:	mov    dh,0x50
  40b446:	mov    DWORD PTR [eax-0x3],0x2e4aa906
  40b44d:	jno    0x40b449
  40b44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b450:	jnp    0x40b446
  40b452:	and    al,0x55
  40b454:	daa    
  40b455:	mov    ds:0x83c0d8e8,al
  40b45a:	add    eax,0x75a453a8
  40b45f:	icebp  
  40b460:	data16 int 0xf5
  40b463:	pusha  
  40b464:	pop    edi
  40b465:	lock and DWORD PTR [eax+0x2c],ecx
  40b469:	test   eax,0x6d76841c
  40b46e:	inc    esp
  40b46f:	mov    ch,0xae
  40b471:	push   edx
  40b472:	out    dx,eax
  40b473:	lahf   
  40b474:	not    BYTE PTR [ebp-0x41]
  40b477:	cmp    DWORD PTR [ebp+0x59],ebp
  40b47a:	loop   0x40b4db
  40b47c:	cwde   
  40b47d:	inc    esi
  40b47e:	jb     0x40b4a7
  40b480:	mov    bl,0x52
  40b482:	mov    ebp,0xe13eefe1
  40b487:	add    eax,0x41f29863
  40b48c:	fcomi  st,st(0)
  40b48e:	jg     0x40b461
  40b490:	mov    esp,DWORD PTR [edi+0x2e7f36bb]
  40b496:	and    esi,DWORD PTR [edx]
  40b498:	adc    ebx,edi
  40b49a:	inc    edi
  40b49b:	push   ebp
  40b49c:	mov    ah,0xcd
  40b49e:	into   
  40b49f:	pop    ds
  40b4a0:	inc    eax
  40b4a1:	fs mov ecx,0xf4037428
  40b4a7:	jbe    0x40b499
  40b4a9:	imul   al
  40b4ab:	(bad)  
  40b4ac:	push   ebp
  40b4ae:	ror    DWORD PTR [edx],cl
  40b4b0:	xchg   ebp,eax
  40b4b1:	hlt    
  40b4b2:	and    DWORD PTR [ecx+0x6f],esp
  40b4b5:	jno    0x40b46f
  40b4b7:	jmp    0x399554c2
  40b4bc:	inc    edx
  40b4bd:	cmp    ah,BYTE PTR [ebx+0x4f5ae12c]
  40b4c3:	ror    DWORD PTR [edx],1
  40b4c5:	push   esp
  40b4c6:	aas    
  40b4c7:	(bad)  
  40b4c8:	test   DWORD PTR ss:[edx],esp
  40b4cb:	or     eax,0xff59af34
  40b4d0:	dec    ecx
  40b4d1:	and    al,0x41
  40b4d3:	pop    eax
  40b4d4:	arpl   sp,sp
  40b4d6:	test   DWORD PTR [edi-0x37],esi
  40b4d9:	rol    BYTE PTR [ebx-0x54687fb6],cl
  40b4df:	ja     0x40b47f
  40b4e1:	retf   
  40b4e2:	(bad)  
  40b4e3:	je     0x40b551
  40b4e5:	out    dx,eax
  40b4e6:	sub    eax,edi
  40b4e8:	lock loope 0x40b558
  40b4eb:	shr    BYTE PTR [di],1
  40b4ee:	mov    al,ds:0x574f1fd4
  40b4f3:	rol    ecx,1
  40b4f5:	mov    al,0xea
  40b4f7:	pop    ds
  40b4f8:	mov    ds:0x982d1cfa,eax
  40b4fd:	or     al,0xc9
  40b4ff:	inc    bh
  40b501:	mov    al,dh
  40b503:	and    DWORD PTR [esi+0x26749d0b],edi
  40b509:	sub    dl,ch
  40b50b:	mov    ecx,0x40554521
  40b510:	dec    esi
  40b511:	shl    BYTE PTR [ebx+ebx*4+0x2b6e3d92],cl
  40b518:	(bad)  
  40b519:	lods   eax,DWORD PTR ds:[esi]
  40b51a:	jl     0x40b4b8
  40b51c:	out    dx,al
  40b51d:	add    BYTE PTR [edi],ch
  40b51f:	push   ecx
  40b520:	mov    ebp,0xa821c284
  40b525:	cdq    
  40b526:	int    0x6e
  40b528:	jbe    0x40b536
  40b52a:	retf   
  40b52b:	fisubr DWORD PTR [edi+0x1]
  40b52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b52f:	nop
  40b530:	push   ss
  40b531:	mov    al,ds:0x258ef689
  40b536:	test   al,0xa5
  40b538:	push   cs
  40b539:	sub    ecx,DWORD PTR [eax+0x3e]
  40b53c:	sub    dh,BYTE PTR [ebp+ebx*8-0x65d53abf]
  40b543:	imul   ebp,DWORD PTR [ebx-0x30eee731],0x67f3baad
  40b54d:	dec    edx
  40b54e:	cmp    DWORD PTR [edi+0x15cb615f],0xf61c9be8
  40b558:	ins    BYTE PTR es:[edi],dx
  40b559:	push   ebx
  40b55a:	dec    ecx
  40b55b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b55c:	mov    WORD PTR [ecx+0x33],?
  40b55f:	xlat   BYTE PTR ds:[ebx]
  40b560:	jecxz  0x40b512
  40b562:	gs pop ss
  40b564:	jp     0x40b518
  40b566:	out    0x5d,al
  40b568:	sbb    eax,0x560712f8
  40b56d:	cmp    DWORD PTR [edx+edi*2],0xffffffb6
  40b571:	jecxz  0x40b5e3
  40b573:	mov    DWORD PTR [edx+eax*4-0x5d],esi
  40b577:	xchg   esi,eax
  40b578:	or     al,0xcb
  40b57a:	or     al,0xb0
  40b57c:	mov    dh,0x35
  40b57e:	push   0xe0e25f48
  40b583:	fwait
  40b584:	cmp    eax,0xc2daeb2d
  40b589:	icebp  
  40b58a:	stos   DWORD PTR es:[edi],eax
  40b58b:	adc    eax,0x284c65c4
  40b590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b591:	mov    ebp,0xd4eb6674
  40b596:	xchg   DWORD PTR [ecx+edx*1+0x14],esp
  40b59a:	mov    ebp,0x7d2f86e7
  40b59f:	jle    0x40b5fa
  40b5a1:	pop    ds
  40b5a2:	cmp    ebp,ecx
  40b5a4:	jne    0x40b5e5
  40b5a6:	das    
  40b5a7:	cmp    ebp,DWORD PTR [edi]
  40b5a9:	mov    cs,WORD PTR [edx]
  40b5ab:	and    al,0x80
  40b5ad:	xor    ecx,DWORD PTR [esi+0x554c7891]
  40b5b3:	outs   dx,DWORD PTR ds:[esi]
  40b5b4:	mov    edi,0x3c891ca9
  40b5b9:	lods   al,BYTE PTR ds:[esi]
  40b5ba:	repz sub edx,DWORD PTR [ebp+0x41]
  40b5be:	mov    ch,0x8d
  40b5c0:	inc    edi
  40b5c1:	fdivr  QWORD PTR [edx+0x78]
  40b5c4:	outs   dx,BYTE PTR ds:[esi]
  40b5c5:	mov    ds:0x4a363118,al
  40b5ca:	pop    ebx
  40b5cb:	or     edi,edi
  40b5cd:	(bad)  
  40b5ce:	xchg   ebp,eax
  40b5cf:	stc    
  40b5d0:	dec    eax
  40b5d1:	inc    edx
  40b5d2:	ror    BYTE PTR [ebp+0x77],0x3
  40b5d6:	mov    bh,BYTE PTR [ebx-0x14]
  40b5d9:	cld    
  40b5da:	inc    ebp
  40b5db:	dec    edi
  40b5dc:	jecxz  0x40b5f1
  40b5de:	(bad)  [edi-0x28]
  40b5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5e2:	fadd   st,st(6)
  40b5e4:	mov    bh,0xf9
  40b5e6:	pop    esp
  40b5e7:	or     al,0xd1
  40b5e9:	neg    DWORD PTR [eax]
  40b5eb:	rol    DWORD PTR [esp+edx*8],cl
  40b5ee:	add    ah,ah
  40b5f0:	aad    0x87
  40b5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f3:	inc    esi
  40b5f4:	(bad)  
  40b5f6:	xor    BYTE PTR [ebp-0x5d],0x81
  40b5fa:	sbb    eax,DWORD PTR ds:0x94171648
  40b600:	mov    cl,BYTE PTR [ecx]
  40b602:	lock loop 0x40b5c8
  40b605:	repnz and eax,0x42b395d4
  40b60b:	sub    eax,0xe9100478
  40b610:	add    al,0xe5
  40b612:	sbb    eax,0x88e3214c
  40b617:	xor    eax,0x9293919
  40b61c:	cmp    DWORD PTR [edx-0x29e2aa3f],0x75
  40b623:	and    al,BYTE PTR [esi+0x31]
  40b626:	test   al,ch
  40b628:	cmp    eax,DWORD PTR [edx-0x29]
  40b62b:	dec    esp
  40b62c:	outs   dx,BYTE PTR ds:[esi]
  40b62d:	(bad)  
  40b62e:	cmp    al,BYTE PTR [edx+esi*8-0x50d646a9]
  40b635:	in     eax,dx
  40b636:	sar    BYTE PTR ds:0xd73beec2,1
  40b63c:	fadd   DWORD PTR [ebp+0x75e7365b]
  40b642:	sar    BYTE PTR [esi],cl
  40b644:	dec    esp
  40b645:	pop    ebp
  40b646:	add    esp,edx
  40b648:	pop    edi
  40b649:	nop
  40b64a:	adc    DWORD PTR [edx],0x7ca03648
  40b650:	popf   
  40b651:	xchg   ebx,eax
  40b652:	dec    edx
  40b653:	dec    eax
  40b654:	je     0x40b680
  40b656:	or     ecx,DWORD PTR [esi-0x32de7483]
  40b65c:	push   0xffffffa3
  40b65e:	adc    dl,dh
  40b660:	mov    ch,0x1e
  40b662:	int    0xe8
  40b664:	leave  
  40b665:	jmp    0x40b6ac
  40b667:	add    eax,ebx
  40b669:	pop    ecx
  40b66a:	adc    BYTE PTR [ebx+0x71],0xbe
  40b66e:	test   BYTE PTR [esp+ecx*8],ch
  40b671:	or     DWORD PTR [esi],eax
  40b673:	fwait
  40b674:	loop   0x40b66c
  40b676:	mov    esp,0xd653dc04
  40b67b:	xchg   esi,eax
  40b67c:	pop    ecx
  40b67d:	add    al,0xf0
  40b67f:	sti    
  40b680:	jge    0x40b6ca
  40b682:	leave  
  40b683:	sbb    eax,0xa5e10975
  40b688:	fs pop edi
  40b68a:	lds    esp,FWORD PTR [edx+eiz*1+0x7a]
  40b68e:	fdiv   st(0),st
  40b690:	lds    edi,FWORD PTR [edi]
  40b692:	addr16 cdq 
  40b694:	mov    eax,ds:0xb4b024a4
  40b699:	push   es
  40b69a:	test   al,0x7b
  40b69c:	adc    ch,BYTE PTR [ecx]
  40b69e:	add    eax,0xc6982967
  40b6a3:	add    BYTE PTR [eax+0x3a],bh
  40b6a6:	arpl   bx,sp
  40b6a8:	mov    eax,0xb26ee74a
  40b6ad:	sbb    al,BYTE PTR [eax+0x1a]
  40b6b0:	push   edi
  40b6b1:	outs   dx,BYTE PTR ds:[esi]
  40b6b2:	inc    ebp
  40b6b3:	sub    al,0x13
  40b6b5:	cli    
  40b6b6:	mov    ds:0xd4db90ce,al
  40b6bb:	bnd jmp 0x40b650
  40b6be:	add    DWORD PTR [edx+0x22],0x5f40625b
  40b6c5:	sub    ebp,DWORD PTR [esi+0x57]
  40b6c8:	and    ebx,DWORD PTR [esi]
  40b6ca:	sbb    DWORD PTR [edx+ebx*8-0x18e9da31],ebp
  40b6d1:	inc    ebp
  40b6d2:	sub    al,BYTE PTR [ebx-0x2d]
  40b6d5:	xchg   esi,eax
  40b6d6:	xchg   DWORD PTR ds:0xceabfbd2,esp
  40b6dc:	imul   edx,DWORD PTR [esi+ebx*1-0x32],0x54
  40b6e1:	pop    es
  40b6e2:	je     0x40b6d4
  40b6e4:	dec    ebp
  40b6e5:	imul   ecx,DWORD PTR [eax+0x397224a3],0xd2e911bf
  40b6ef:	bswap  edi
  40b6f1:	mov    eax,0x5914fdb8
  40b6f6:	(bad)  
  40b6f7:	addr16 push edx
  40b6f9:	jp     0x40b775
  40b6fb:	jb     0x40b697
  40b6fd:	sub    DWORD PTR [edi],ebp
  40b6ff:	js     0x40b71d
  40b701:	ins    BYTE PTR es:[edi],dx
  40b702:	jmp    0x6532:0xbe0dfb7f
  40b709:	shl    bl,1
  40b70b:	fldcw  WORD PTR [ebp-0x5c]
  40b70e:	jnp    0x40b759
  40b710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b711:	data16 aaa 
  40b713:	retf   0x882f
  40b716:	and    edx,DWORD PTR [ebp+0x4c0dd3a6]
  40b71c:	rcr    BYTE PTR fs:[ebp-0x5f],1
  40b720:	test   DWORD PTR [eax],esi
  40b722:	mov    ecx,0x1fefd0c7
  40b727:	push   ebp
  40b728:	or     al,0xec
  40b72a:	mov    eax,0xc9b5f7f8
  40b72f:	mov    eax,ds:0xd96a943d
  40b734:	loope  0x40b75b
  40b736:	loopne 0x40b719
  40b738:	lds    edx,FWORD PTR [edi+0x4a]
  40b73b:	mov    ch,0x4b
  40b73d:	les    esp,FWORD PTR [edi-0x1a]
  40b740:	test   dl,0xd
  40b743:	xchg   ebx,eax
  40b744:	fs sti 
  40b746:	and    DWORD PTR [edx+0x71],ebx
  40b749:	xlat   BYTE PTR ds:[ebx]
  40b74a:	not    dh
  40b74c:	xchg   ebx,eax
  40b74d:	jns    0x40b74d
  40b74f:	sbb    eax,ebp
  40b751:	xor    BYTE PTR [eax-0x327cde0e],dl
  40b757:	sbb    al,0x73
  40b759:	or     al,0x2e
  40b75b:	fimul  WORD PTR ds:0x5a9e901b
  40b761:	rcl    DWORD PTR [ecx+ebp*8+0x3b],1
  40b765:	icebp  
  40b766:	test   DWORD PTR [ebx+0x3d],esp
  40b769:	nop
  40b76a:	int    0x8b
  40b76c:	test   eax,0x2d431b7e
  40b771:	outs   dx,BYTE PTR ds:[esi]
  40b772:	shl    DWORD PTR [esi],1
  40b774:	sar    DWORD PTR fs:[ecx-0x30],0xd6
  40b779:	adc    eax,0x396fb4
  40b77e:	addr16 js 0x40b73e
  40b781:	sbb    bh,BYTE PTR [ebx]
  40b783:	mov    esp,0xfc061659
  40b788:	scas   al,BYTE PTR es:[edi]
  40b789:	int3   
  40b78a:	or     dh,BYTE PTR [ecx-0x5d]
  40b78d:	popf   
  40b78e:	(bad)  
  40b78f:	lock or edi,DWORD PTR [ebx-0x274665fb]
  40b796:	sub    bh,BYTE PTR [edx+0x7c]
  40b799:	fs cwde 
  40b79b:	inc    ebx
  40b79c:	stos   DWORD PTR es:[edi],eax
  40b79d:	and    dh,BYTE PTR [ebx+ecx*4]
  40b7a0:	inc    eax
  40b7a1:	mov    ebx,0xf04b2ea9
  40b7a6:	mov    gs,edi
  40b7a8:	dec    eax
  40b7a9:	and    esp,eax
  40b7ab:	sahf   
  40b7ac:	and    eax,0x737b45da
  40b7b1:	(bad)  
  40b7b2:	in     al,dx
  40b7b3:	out    0x32,al
  40b7b5:	push   0xffffffb7
  40b7b7:	mov    cl,0x94
  40b7b9:	jl     0x40b747
  40b7bb:	push   edx
  40b7bc:	sub    eax,esi
  40b7be:	mov    al,ds:0x35694db0
  40b7c3:	sbb    edx,DWORD PTR [ebx-0xc]
  40b7c6:	ja     0x40b832
  40b7c8:	jl     0x40b83a
  40b7ca:	sub    esp,DWORD PTR [eax-0x7b]
  40b7cd:	sub    eax,0x62d92803
  40b7d2:	push   0xb54cfe4f
  40b7d7:	retf   
  40b7d8:	stos   DWORD PTR es:[edi],eax
  40b7d9:	(bad)  
  40b7da:	in     al,0x8d
  40b7dc:	leave  
  40b7dd:	add    ebx,DWORD PTR [ebp-0x5144f038]
  40b7e3:	(bad)  
  40b7e4:	daa    
  40b7e5:	mov    bl,0x33
  40b7e7:	and    BYTE PTR [edi-0x74],bl
  40b7ea:	std    
  40b7eb:	mov    eax,ds:0x85ffcc2b
  40b7f0:	jb     0x40b799
  40b7f2:	test   al,0x6f
  40b7f4:	dec    edx
  40b7f5:	dec    ecx
  40b7f6:	sti    
  40b7f7:	pop    edi
  40b7f8:	out    dx,eax
  40b7f9:	js     0x40b7f8
  40b7fb:	dec    edi
  40b7fc:	je     0x40b79d
  40b7fe:	sub    DWORD PTR [edx-0x65fd716b],edi
  40b804:	xor    BYTE PTR [ebx],dl
  40b806:	adc    dl,BYTE PTR [esi+0x56e55f5f]
  40b80c:	dec    ebx
  40b80d:	xchg   DWORD PTR [ebx-0xe],ebx
  40b810:	nop
  40b811:	adc    ebx,DWORD PTR [edi]
  40b813:	pop    ebx
  40b814:	sahf   
  40b815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b816:	dec    edx
  40b817:	scas   al,BYTE PTR es:[edi]
  40b818:	sahf   
  40b819:	pusha  
  40b81a:	pushf  
  40b81b:	mov    bl,0x7d
  40b81d:	lock lahf 
  40b81f:	adc    dh,BYTE PTR [esi+0x2c]
  40b822:	push   ss
  40b823:	pop    ebx
  40b824:	xor    DWORD PTR [ebx+0x2c],eax
  40b827:	or     edi,DWORD PTR [esi]
  40b829:	(bad)  
  40b82a:	jmp    0x8a5d:0x50cc7c1d
  40b831:	into   
  40b832:	pop    ecx
  40b833:	enter  0x598a,0xfa
  40b837:	outs   dx,DWORD PTR ds:[esi]
  40b838:	or     edx,DWORD PTR [ecx]
  40b83a:	sbb    DWORD PTR [edi+esi*8+0x35],0x50
  40b83f:	mov    ds:0x4344692a,eax
  40b844:	pop    ss
  40b845:	jb     0x40b84b
  40b847:	cmp    dh,BYTE PTR [eax+0x31]
  40b84a:	xchg   edi,eax
  40b84b:	outs   dx,DWORD PTR ds:[esi]
  40b84c:	test   bh,cl
  40b84e:	fld    st(1)
  40b850:	pop    ebp
  40b851:	sbb    BYTE PTR [edx],dl
  40b853:	push   edi
  40b854:	mov    esi,0x5ef7c556
  40b859:	into   
  40b85a:	add    esi,DWORD PTR [ebx-0x48]
  40b85d:	stc    
  40b85e:	adc    eax,0x219da603
  40b863:	adc    eax,DWORD PTR [ecx+0x12]
  40b866:	sub    BYTE PTR [ecx],bl
  40b868:	and    al,0x28
  40b86a:	mov    ebp,0xe3279424
  40b86f:	enter  0x7a9c,0x1d
  40b873:	xchg   ebx,eax
  40b874:	mov    edi,0xb97939fa
  40b879:	add    DWORD PTR [eax+0x5cb9b1ce],edi
  40b87f:	retf   
  40b880:	adc    DWORD PTR [ebx],eax
  40b882:	out    0x68,eax
  40b884:	fisubr DWORD PTR [ecx+0x5ff38322]
  40b88a:	test   al,0xd3
  40b88c:	push   es
  40b88d:	jle    0x40b8c0
  40b88f:	mov    al,BYTE PTR [eax+0x47]
  40b892:	cdq    
  40b893:	mov    eax,0x63634272
  40b898:	std    
  40b899:	aaa    
  40b89a:	outs   dx,BYTE PTR ds:[esi]
  40b89b:	jo     0x40b891
  40b89d:	pop    edi
  40b89e:	inc    edi
  40b89f:	add    eax,0x6619a9b3
  40b8a4:	icebp  
  40b8a5:	mov    bl,0x1f
  40b8a7:	rol    al,cl
  40b8a9:	sahf   
  40b8aa:	cs jnp 0x40b8e2
  40b8ad:	fistp  WORD PTR [eax]
  40b8af:	add    eax,0x5d9736ec
  40b8b4:	lds    edx,FWORD PTR [ecx-0x53924f55]
  40b8ba:	dec    ebx
  40b8bb:	mov    dl,0x8d
  40b8bd:	lahf   
  40b8be:	out    dx,al
  40b8bf:	add    ebx,DWORD PTR [edi-0x415ac1d2]
  40b8c5:	mov    ds,WORD PTR [ecx-0x429f0a04]
  40b8cb:	sbb    edi,DWORD PTR [edi+0x48]
  40b8ce:	cwde   
  40b8cf:	jbe    0x40b934
  40b8d1:	(bad)  
  40b8d2:	lock xor eax,0xe659a274
  40b8d8:	pop    ebx
  40b8d9:	clc    
  40b8da:	push   ss
  40b8db:	mov    cl,0x19
  40b8dd:	ret    
  40b8de:	cmp    DWORD PTR [edi],ebp
  40b8e0:	pop    esp
  40b8e1:	push   ecx
  40b8e2:	out    0x8f,eax
  40b8e4:	xchg   ebp,eax
  40b8e5:	mov    bh,bh
  40b8e7:	in     al,0x8c
  40b8e9:	jmp    0xbb1b:0x763885c8
  40b8f0:	inc    ebx
  40b8f1:	popf   
  40b8f2:	sub    eax,0x5f5f504
  40b8f7:	ficomp DWORD PTR [edx+0x37]
  40b8fa:	xor    bl,BYTE PTR ds:0xa1388308
  40b900:	dec    esi
  40b901:	dec    esp
  40b902:	(bad)  
  40b903:	cwde   
  40b904:	jmp    0x7a90d52d
  40b909:	mov    dl,0x9c
  40b90b:	cmp    eax,ecx
  40b90d:	mov    fs:0x6a5039fa,eax
  40b913:	jmp    0x973b7f59
  40b918:	mov    al,ds:0x927d780
  40b91d:	sbb    eax,0x9386f0bb
  40b922:	cmp    BYTE PTR [eax],bh
  40b924:	(bad)  
  40b925:	not    BYTE PTR [ecx]
  40b927:	or     al,0x37
  40b929:	call   0x5725a019
  40b92e:	ds and ebx,edi
  40b931:	imul   edx,DWORD PTR [edx],0xffffffd2
  40b934:	sbb    ah,BYTE PTR [ecx+0x0]
  40b937:	xor    dh,dl
  40b939:	call   0x3bb3:0x876b1aa9
  40b940:	jb     0x40b985
  40b942:	mov    al,0x96
  40b944:	push   esi
  40b945:	arpl   WORD PTR [esi*4+0x30f2883d],sp
  40b94c:	mov    esi,0xef949fbf
  40b951:	jecxz  0x40b98f
  40b953:	scas   al,BYTE PTR es:[edi]
  40b954:	dec    eax
  40b955:	mov    BYTE PTR [eax-0x5d],0xa5
  40b959:	xor    esi,DWORD PTR [edi-0x1260cfec]
  40b95f:	or     dh,al
  40b961:	adc    esi,DWORD PTR [edx+0x2b47915f]
  40b967:	ret    0x232f
  40b96a:	xor    BYTE PTR [eax-0x1ca70ddc],0xa1
  40b971:	cdq    
  40b972:	add    edi,edi
  40b974:	lahf   
  40b975:	adc    al,0x72
  40b977:	lods   eax,DWORD PTR ds:[esi]
  40b978:	jmp    0xddc096c2
  40b97d:	adc    dl,ch
  40b97f:	and    DWORD PTR [ebp-0x3e],esp
  40b982:	jb     0x40b9ec
  40b984:	mov    ds:0x2bc4236f,eax
  40b989:	adc    eax,0x5340f0d6
  40b98e:	ror    DWORD PTR [edx-0x30],cl
  40b991:	inc    ecx
  40b992:	push   esi
  40b993:	push   0xf5d9fa9e
  40b998:	or     al,0xee
  40b99a:	dec    eax
  40b99b:	fisttp WORD PTR [ebp+0x4f]
  40b99e:	mov    eax,ds:0x7a4273
  40b9a3:	cmp    esp,ebx
  40b9a5:	and    DWORD PTR [edi],0x74db7d7d
  40b9ab:	mov    dh,0xba
  40b9ad:	into   
  40b9ae:	in     eax,dx
  40b9af:	sahf   
  40b9b0:	fcomp  DWORD PTR [edi+0x3bfaec11]
  40b9b6:	jo     0x40b98d
  40b9b8:	push   ebx
  40b9b9:	pop    ebx
  40b9ba:	push   es
  40b9bb:	mov    BYTE PTR [ecx-0x6],bh
  40b9be:	cmp    al,0x5a
  40b9c0:	in     al,dx
  40b9c1:	rcr    DWORD PTR [esi+eiz*1-0x46],cl
  40b9c5:	(bad)  
  40b9c6:	(bad)  
  40b9c8:	inc    edi
  40b9c9:	inc    esp
  40b9ca:	retf   
  40b9cb:	outs   dx,DWORD PTR gs:[esi]
  40b9cd:	sbb    DWORD PTR [edx],0x34bdff9a
  40b9d3:	push   edx
  40b9d4:	mov    edi,0x4617850
  40b9d9:	(bad)  
  40b9da:	out    0xa2,eax
  40b9dc:	jmp    0x40b9cc
  40b9de:	inc    esp
  40b9df:	aad    0x59
  40b9e1:	ds adc eax,0x4fb6f3d
  40b9e7:	adc    eax,0x304b2552
  40b9ec:	adc    ch,BYTE PTR [ebp+eiz*4-0x3089f2c8]
  40b9f3:	ds std 
  40b9f5:	or     bh,ah
  40b9f7:	rcr    DWORD PTR [edi],0x10
  40b9fa:	fldcw  WORD PTR [eax-0x6c]
  40b9fd:	icebp  
  40b9fe:	ins    BYTE PTR es:[edi],dx
  40b9ff:	fist   DWORD PTR [edx]
  40ba01:	icebp  
  40ba02:	push   ss
  40ba03:	xchg   ecx,eax
  40ba04:	jp     0x40ba76
  40ba06:	adc    DWORD PTR [esi+0x4e],eax
  40ba09:	mov    ecx,0xcedbf986
  40ba0e:	xchg   esi,eax
  40ba0f:	mov    bh,0x73
  40ba11:	outs   dx,DWORD PTR ds:[esi]
  40ba12:	push   es
  40ba13:	xlat   BYTE PTR ds:[ebx]
  40ba14:	mov    es:0x2c965830,eax
  40ba1a:	push   ds
  40ba1b:	push   ebx
  40ba1c:	jbe    0x40b9ab
  40ba1e:	nop
  40ba1f:	scas   al,BYTE PTR es:[edi]
  40ba20:	and    DWORD PTR [eax+0x7],esi
  40ba23:	mov    ebx,0x6a3983ff
  40ba28:	rcl    edx,0xe5
  40ba2b:	daa    
  40ba2c:	add    eax,0xfae21f9f
  40ba31:	(bad)  [edi]
  40ba33:	jbe    0x40ba1d
  40ba35:	fnstenv [edi-0x26]
  40ba38:	test   ebx,esp
  40ba3a:	mov    ecx,0x250d48b5
  40ba3f:	fwait
  40ba40:	(bad)  
  40ba41:	call   0x1b5f:0xbb8e6c08
  40ba48:	cs in  eax,dx
  40ba4a:	xchg   edx,eax
  40ba4b:	pushf  
  40ba4c:	clc    
  40ba4d:	stos   DWORD PTR es:[edi],eax
  40ba4e:	std    
  40ba4f:	les    edi,FWORD PTR [edi-0x56]
  40ba52:	aas    
  40ba53:	dec    ebp
  40ba54:	into   
  40ba55:	xchg   ebx,eax
  40ba56:	fist   WORD PTR [edx-0xe]
  40ba59:	dec    esi
  40ba5a:	pop    ebp
  40ba5b:	nop
  40ba5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba5d:	outs   dx,BYTE PTR ds:[esi]
  40ba5e:	ret    0x3cba
  40ba61:	div    DWORD PTR [eax]
  40ba63:	push   ecx
  40ba64:	shl    edi,1
  40ba66:	cmp    edx,DWORD PTR [ebp+0x7b886d25]
  40ba6c:	xchg   edi,eax
  40ba6d:	(bad)  
  40ba6e:	dec    edi
  40ba6f:	outs   dx,DWORD PTR ds:[esi]
  40ba70:	mov    bh,BYTE PTR [edx+esi*4+0x6f1cd145]
  40ba77:	sub    ch,ah
  40ba79:	into   
  40ba7a:	cs mov ecx,0xbd3df178
  40ba80:	test   al,0x90
  40ba82:	inc    esi
  40ba83:	dec    eax
  40ba84:	sub    eax,DWORD PTR [edx]
  40ba86:	dec    edx
  40ba87:	dec    ecx
  40ba88:	ror    ecx,0x70
  40ba8b:	jbe    0x40ba58
  40ba8d:	mov    ebp,0x3dd546cc
  40ba92:	aam    0xbe
  40ba94:	mov    ebx,0x16f12d4b
  40ba99:	rcr    DWORD PTR [esi+0x1],0x0
  40ba9d:	das    
  40ba9e:	inc    ebx
  40ba9f:	push   esp
  40baa0:	push   edi
  40baa1:	mov    edx,0xb38a0f82
  40baa6:	dec    esi
  40baa7:	and    dl,BYTE PTR [edi]
  40baa9:	and    eax,0xaa8ad985
  40baae:	gs cdq 
  40bab0:	pop    ebp
  40bab1:	pop    edx
  40bab2:	jb     0x40ba9a
  40bab4:	add    BYTE PTR [esi+0x6d],bh
  40bab7:	and    BYTE PTR [esi],dl
  40bab9:	cdq    
  40baba:	loope  0x40baa6
  40babc:	sub    eax,0x7f3eeae0
  40bac1:	or     dh,BYTE PTR [ecx+0x33f2bdfb]
  40bac7:	push   0xffffffab
  40bac9:	aaa    
  40baca:	xchg   ecx,eax
  40bacb:	fld    TBYTE PTR ds:0x9d5ab66
  40bad1:	adc    eax,0xfb4dfa05
  40bad6:	fwait
  40bad7:	ins    BYTE PTR es:[edi],dx
  40bad8:	lods   al,BYTE PTR ds:[esi]
  40bad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bada:	mov    ebx,?
  40badc:	dec    esp
  40badd:	xor    dl,BYTE PTR [ecx+0x20d916c1]
  40bae3:	ror    edx,1
  40bae5:	sbb    eax,ebp
  40bae7:	stos   DWORD PTR es:[edi],eax
  40bae8:	scas   al,BYTE PTR es:[edi]
  40bae9:	cmc    
  40baea:	rcr    ebp,0x9c
  40baed:	sub    eax,0x1c91d838
  40baf2:	mov    esi,0x1726e52
  40baf7:	popa   
  40baf8:	leave  
  40baf9:	pop    ecx
  40bafa:	dec    edx
  40bafb:	shl    DWORD PTR ds:0x1e7f06e7,1
  40bb01:	in     al,0x58
  40bb03:	cmp    DWORD PTR [edi-0x1a],0x68
  40bb07:	adc    esp,edx
  40bb09:	pop    ebp
  40bb0a:	xchg   edx,eax
  40bb0b:	bound  esi,QWORD PTR [ecx]
  40bb0d:	pop    DWORD PTR [edi-0x439f62bc]
  40bb13:	jne    0x40bad8
  40bb15:	jbe    0x40bb1d
  40bb17:	dec    edx
  40bb18:	ins    BYTE PTR es:[edi],dx
  40bb19:	mov    BYTE PTR [esp+edi*8],dh
  40bb1c:	mov    esi,0xcc54ba90
  40bb21:	in     eax,dx
  40bb22:	ret    0x9a73
  40bb25:	jle    0x40bab4
  40bb27:	pop    ss
  40bb28:	mov    al,0x40
  40bb2a:	mov    ebx,0x69b92768
  40bb2f:	dec    ebx
  40bb30:	int3   
  40bb31:	lea    esp,[ebp-0x346f24f4]
  40bb37:	pop    eax
  40bb38:	stos   DWORD PTR es:[edi],eax
  40bb39:	mov    edi,0x2d4db9ce
  40bb3e:	fsub   QWORD PTR [edx+0x10e8e65f]
  40bb44:	or     ebx,DWORD PTR [ebp+0x47]
  40bb47:	(bad)  
  40bb48:	fist   WORD PTR [esp+eiz*8]
  40bb4b:	fnsave [edi+eiz*8]
  40bb4e:	cmc    
  40bb4f:	xchg   edx,eax
  40bb50:	mul    DWORD PTR [eax]
  40bb52:	xchg   DWORD PTR [ebx+0x23],eax
  40bb55:	push   esp
  40bb56:	add    al,0x64
  40bb58:	das    
  40bb59:	sahf   
  40bb5a:	mov    BYTE PTR [ecx+0x3b],ch
  40bb5d:	daa    
  40bb5e:	fild   DWORD PTR [ebx+0xc18bd9f]
  40bb64:	mov    ebp,0x6b895663
  40bb69:	clc    
  40bb6a:	xor    ecx,edi
  40bb6c:	dec    ecx
  40bb6d:	pop    ds
  40bb6e:	loop   0x40bb45
  40bb70:	pop    esp
  40bb71:	pop    ebp
  40bb72:	rcl    DWORD PTR [ebx-0x4de09b7],1
  40bb78:	dec    ebp
  40bb79:	pop    edx
  40bb7a:	ret    0xa344
  40bb7d:	jmp    0xed8d:0x11c63e0b
  40bb84:	test   al,0x30
  40bb86:	cmp    al,0x5d
  40bb88:	int3   
  40bb89:	mul    BYTE PTR [edi]
  40bb8b:	jmp    DWORD PTR [esi+0x65ec2c89]
  40bb91:	xchg   edi,eax
  40bb92:	and    esi,DWORD PTR [esi+0x65]
  40bb95:	hlt    
  40bb96:	enter  0x339a,0x23
  40bb9a:	cs dec esi
  40bb9c:	scas   eax,DWORD PTR es:[edi]
  40bb9d:	adc    DWORD PTR [esi+0x5b0cb506],ebx
  40bba3:	enter  0xd317,0xbe
  40bba7:	aas    
  40bba8:	xor    eax,0xab7d3617
  40bbad:	hlt    
  40bbae:	mov    cl,0x93
  40bbb0:	jne    0x40bb62
  40bbb2:	ja     0x40bb64
  40bbb4:	cmp    eax,0xca190984
  40bbb9:	jb     0x40bbf5
  40bbbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbbc:	dec    ebp
  40bbbd:	pop    esp
  40bbbe:	hlt    
  40bbbf:	inc    edx
  40bbc0:	data16 adc ah,BYTE PTR [edi-0x37]
  40bbc4:	jno    0x40bbdc
  40bbc6:	sbb    BYTE PTR [edx+0x5e],al
  40bbc9:	int    0x6a
  40bbcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbcc:	aaa    
  40bbcd:	sub    edi,DWORD PTR [esi-0x682b7c50]
  40bbd3:	cmp    al,0x64
  40bbd5:	daa    
  40bbd6:	and    ch,BYTE PTR [eax+edx*4]
  40bbd9:	outs   dx,DWORD PTR ds:[esi]
  40bbda:	fcom   DWORD PTR [edi-0x7f]
  40bbdd:	(bad)  
  40bbe0:	push   0x44
  40bbe2:	aam    0x11
  40bbe4:	cli    
  40bbe5:	rol    DWORD PTR [ebp+0x4c],1
  40bbe8:	rol    DWORD PTR [ebx+0x52f9e641],0x6d
  40bbef:	mov    ch,0x6c
  40bbf1:	mov    ebx,0xf1422e46
  40bbf6:	pop    eax
  40bbf7:	mov    esi,0xbffbc9f
  40bbfc:	or     ch,ah
  40bbfe:	sti    
  40bbff:	xor    BYTE PTR [edx+0x36],dh
  40bc02:	imul   edi,DWORD PTR [edx-0x54],0x4a
  40bc06:	or     BYTE PTR [ebx-0x51],al
  40bc09:	mov    ch,0xce
  40bc0b:	test   eax,0xec3f6464
  40bc10:	scas   al,BYTE PTR es:[edi]
  40bc11:	out    dx,eax
  40bc12:	sahf   
  40bc13:	push   edx
  40bc14:	cmp    al,0x2e
  40bc16:	aam    0x5
  40bc18:	std    
  40bc19:	test   eax,0xa54be90a
  40bc1e:	jl     0x40bc4c
  40bc20:	mov    bl,0x66
  40bc22:	into   
  40bc23:	repnz mov bh,0xaa
  40bc26:	(bad)  
  40bc28:	lock sbb DWORD PTR [edi],0xffffffc3
  40bc2c:	inc    ecx
  40bc2d:	out    0x53,al
  40bc2f:	adc    eax,0xcf72d441
  40bc34:	jecxz  0x40bbd4
  40bc36:	(bad)  
  40bc37:	jge    0x40bca1
  40bc39:	dec    eax
  40bc3a:	cld    
  40bc3b:	(bad)  
  40bc3c:	cdq    
  40bc3d:	fistp  QWORD PTR [edx+0x209b9a34]
  40bc43:	pop    ss
  40bc44:	fwait
  40bc45:	arpl   WORD PTR ds:0xbf51710f,sp
  40bc4b:	sbb    eax,0xc170b5ba
  40bc50:	call   0x817b:0xd8bd5c9c
  40bc57:	cmp    bh,BYTE PTR [edx]
  40bc59:	mov    bl,0x99
  40bc5b:	repnz mov edx,0x6674dae9
  40bc61:	mov    dl,0x9e
  40bc63:	sbb    bl,0x26
  40bc66:	pop    ebx
  40bc67:	loop   0x40bcce
  40bc69:	popa   
  40bc6a:	adc    al,0xa8
  40bc6c:	lods   eax,DWORD PTR ds:[esi]
  40bc6d:	(bad)  
  40bc6e:	and    DWORD PTR [eax],eax
  40bc70:	or     BYTE PTR ds:0x69ea076b,bl
  40bc76:	jb     0x40bc9e
  40bc78:	loope  0x40bc16
  40bc7a:	sahf   
  40bc7b:	xchg   edi,eax
  40bc7c:	xchg   ebx,eax
  40bc7d:	pop    ebp
  40bc7e:	js     0x40bcbb
  40bc80:	cwde   
  40bc81:	pusha  
  40bc82:	xlat   BYTE PTR ds:[ebx]
  40bc83:	adc    DWORD PTR [ebx+0x3b],0x47191793
  40bc8a:	push   ss
  40bc8b:	sub    ebp,DWORD PTR [edx+edi*2+0x46]
  40bc8f:	fisttp DWORD PTR [ebp+ebp*1+0x54]
  40bc93:	inc    esi
  40bc94:	mov    esi,0x3ccdc518
  40bc99:	adc    ebx,DWORD PTR [esi+0x1d]
  40bc9c:	cmp    eax,0x3c60e62d
  40bca1:	mov    al,ds:0xed0bac37
  40bca6:	cmp    eax,0x48041a5f
  40bcab:	dec    esp
  40bcac:	push   cs
  40bcad:	dec    eax
  40bcae:	push   ecx
  40bcaf:	sub    eax,0xa973cef2
  40bcb4:	lds    edx,FWORD PTR [esp-0x59665f05]
  40bcbb:	lds    esi,FWORD PTR cs:[edi+0x2db0606c]
  40bcc2:	xchg   BYTE PTR [edx],bh
  40bcc4:	mov    DWORD PTR [esi+0x4e12658b],edx
  40bcca:	out    0x48,al
  40bccc:	dec    esp
  40bccd:	in     eax,0x27
  40bccf:	inc    edi
  40bcd0:	xor    esp,esp
  40bcd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd3:	inc    esp
  40bcd4:	cmp    BYTE PTR [ebp-0x1d],dl
  40bcd7:	jne    0x40bcdd
  40bcd9:	out    0x19,al
  40bcdb:	mov    edi,0xd46f13f0
  40bce0:	mov    esi,DWORD PTR [esi-0xcd4952e]
  40bce6:	push   eax
  40bce7:	call   0x7dd7cf6
  40bcec:	pop    edi
  40bced:	ret    
  40bcee:	xchg   esp,eax
  40bcef:	test   al,0x5f
  40bcf1:	loopne 0x40bd61
  40bcf3:	(bad)  
  40bcf5:	cs jl  0x40bcdc
  40bcf8:	lock mov eax,ds:0x21b96428
  40bcfe:	jge    0x40bd57
  40bd00:	in     al,0x20
  40bd02:	xchg   edx,eax
  40bd03:	xchg   BYTE PTR [ebx-0x3b],bh
  40bd06:	hlt    
  40bd07:	dec    ecx
  40bd08:	gs inc ebp
  40bd0a:	int    0xc0
  40bd0c:	push   ecx
  40bd0d:	push   ss
  40bd0e:	or     dh,BYTE PTR [eax+edi*4]
  40bd11:	clc    
  40bd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd13:	icebp  
  40bd14:	push   ecx
  40bd15:	jne    0x40bd61
  40bd17:	and    eax,0xb0af4e39
  40bd1c:	lods   eax,DWORD PTR ds:[esi]
  40bd1d:	pop    ebp
  40bd1e:	les    ebp,FWORD PTR [edi]
  40bd20:	pop    edx
  40bd21:	int    0xae
  40bd23:	xchg   BYTE PTR [eax+0x58],bh
  40bd26:	inc    edi
  40bd27:	or     eax,0x9cf3e99
  40bd2c:	inc    ecx
  40bd2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd2e:	aam    0xf2
  40bd30:	les    eax,FWORD PTR [edx+0x6a]
  40bd33:	pusha  
  40bd34:	hlt    
  40bd35:	and    eax,0x2f27e01f
  40bd3a:	mov    edi,0x217df8bb
  40bd3f:	(bad)  
  40bd40:	sub    esp,DWORD PTR [edi]
  40bd42:	jmp    0x824fbbfb
  40bd47:	jnp    0x40bd59
  40bd49:	adc    eax,0x5259c0de
  40bd4e:	adc    al,0xcb
  40bd50:	push   ebx
  40bd51:	rcr    DWORD PTR ds:0x9f07011,0x6d
  40bd58:	imul   edi,DWORD PTR ds:0x715ead68,0xffffff97
  40bd5f:	mov    edi,0x7182f4c3
  40bd64:	add    DWORD PTR [ebx+0x158c17e4],0x55
  40bd6b:	jo     0x40bd08
  40bd6d:	sar    DWORD PTR [ecx],0x60
  40bd70:	shl    dl,1
  40bd72:	(bad)  
  40bd73:	std    
  40bd74:	clc    
  40bd75:	cmp    al,0xe8
  40bd77:	ret    
  40bd78:	addr16 jns 0x40bd1f
  40bd7b:	sbb    al,0x40
  40bd7d:	xchg   ebp,eax
  40bd7e:	and    eax,0x300c52fd
  40bd83:	hlt    
  40bd84:	cmc    
  40bd85:	mov    ebx,0xc629c4bd
  40bd8a:	sbb    BYTE PTR [ecx],dl
  40bd8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd8d:	sub    edx,DWORD PTR [edi+0x2a]
  40bd90:	jno    0x40bd64
  40bd92:	out    0x47,al
  40bd94:	repnz aaa 
  40bd96:	cmp    al,0x4
  40bd98:	enter  0x3695,0xe6
  40bd9c:	mov    edi,0x60564a35
  40bda1:	(bad)  
  40bda2:	fucomp st(0)
  40bda4:	mov    eax,0x6d63b464
  40bda9:	xchg   ebp,eax
  40bdaa:	and    eax,0x24e8c0d7
  40bdaf:	aad    0x97
  40bdb1:	fmul   QWORD PTR [esi+ebx*8]
  40bdb4:	pop    ecx
  40bdb5:	cmp    ebx,DWORD PTR [ebp-0x46]
  40bdb8:	and    eax,0x59bfd541
  40bdbd:	aad    0x90
  40bdbf:	rol    ebp,cl
  40bdc1:	xor    eax,0x4fcf9093
  40bdc6:	jp     0x40be33
  40bdc8:	cmp    DWORD PTR [edi-0x6c],ebx
  40bdcb:	enter  0x6a03,0xcb
  40bdcf:	jbe    0x40bdbe
  40bdd1:	cmp    eax,0xb6ce9de4
  40bdd6:	xchg   edx,eax
  40bdd7:	mov    dh,0x72
  40bdd9:	sub    DWORD PTR [ecx+0x0],esp
  40bddc:	cwde   
  40bddd:	and    BYTE PTR [esi],dl
  40bddf:	inc    esi
  40bde0:	pop    ecx
  40bde1:	call   0xf8aa3933
  40bde6:	gs or  esp,ebp
  40bde9:	lds    eax,FWORD PTR [eax-0x574b2e39]
  40bdef:	and    bh,BYTE PTR [edx+0x24e01bae]
  40bdf5:	dec    eax
  40bdf6:	inc    ebp
  40bdf7:	and    edx,DWORD PTR [esp+ecx*2]
  40bdfa:	test   DWORD PTR [edi],edx
  40bdfc:	data16 shl BYTE PTR [edi+0x55],cl
  40be00:	push   ebx
  40be01:	popa   
  40be02:	inc    esp
  40be03:	jae    0x40bd8a
  40be05:	push   ebx
  40be06:	mov    al,ds:0x28c4c5b3
  40be0b:	mov    edi,DWORD PTR [ebx+ebp*8]
  40be0e:	jmp    0x40bdde
  40be10:	jo     0x40be01
  40be12:	enter  0xd9ff,0x85
  40be16:	dec    esp
  40be17:	or     al,0xab
  40be19:	ja     0x40bdbd
  40be1b:	jge    0x40bdf5
  40be1d:	xor    cl,bh
  40be1f:	xchg   esi,eax
  40be20:	imul   esp,DWORD PTR [edi],0x508a765a
  40be26:	add    eax,DWORD PTR [esi]
  40be28:	stos   BYTE PTR es:[edi],al
  40be29:	cmp    ebp,ebp
  40be2b:	scas   eax,DWORD PTR es:[edi]
  40be2c:	into   
  40be2d:	lods   al,BYTE PTR ds:[esi]
  40be2e:	jmp    0x40be19
  40be30:	shl    DWORD PTR [eax+0x9257824],1
  40be36:	mov    esi,0x9700b606
  40be3b:	fdiv   DWORD PTR [edx-0x46]
  40be3e:	xchg   edi,eax
  40be3f:	xor    DWORD PTR [esi-0x29],ebx
  40be42:	cmp    dl,BYTE PTR [eax-0x8]
  40be45:	sbb    eax,DWORD PTR cs:[eax-0x3b7d8fcb]
  40be4c:	xor    eax,DWORD PTR [edx+0x1d]
  40be4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be50:	test   DWORD PTR fs:[edx],edi
  40be53:	icebp  
  40be54:	cmc    
  40be55:	scas   al,BYTE PTR es:[edi]
  40be56:	sbb    cl,al
  40be58:	fistp  QWORD PTR [ecx+0x7c]
  40be5b:	sbb    bl,BYTE PTR [ebp-0x43]
  40be5e:	cld    
  40be5f:	or     al,0x51
  40be61:	cmp    eax,0x63e5b270
  40be66:	xor    BYTE PTR [eax],dl
  40be68:	addr16 inc ebx
  40be6a:	and    edi,DWORD PTR [ebx+eax*2-0x699027d5]
  40be71:	popa   
  40be72:	out    dx,eax
  40be73:	adc    al,ch
  40be75:	ret    0xbefa
  40be78:	push   ebp
  40be79:	push   eax
  40be7a:	pop    esp
  40be7b:	mov    esp,?
  40be7d:	mov    al,ds:0x2c468b26
  40be83:	cmp    ebp,DWORD PTR [edx-0x5d]
  40be86:	inc    ecx
  40be87:	jo     0x40befb
  40be89:	mov    WORD PTR [edi+0x6e9ea67e],gs
  40be8f:	adc    DWORD PTR [ecx+0x58],esi
  40be92:	js     0x40be41
  40be94:	loopne 0x40bee0
  40be96:	sbb    dl,BYTE PTR [edi+0x11f1f33c]
  40be9c:	sub    BYTE PTR [edx-0x35c259bc],dh
  40bea2:	popa   
  40bea3:	ss inc edx
  40bea5:	fwait
  40bea6:	rcl    esp,cl
  40bea8:	push   esp
  40bea9:	ja     0x40bed5
  40beab:	in     eax,dx
  40beac:	cmp    DWORD PTR [esi*2-0x73c21c47],ebx
  40beb3:	mov    WORD PTR [ebx+ebx*4],0x53cc
  40beb9:	push   0x1eea684d
  40bebe:	aas    
  40bebf:	cli    
  40bec0:	iret   
  40bec1:	adc    dh,BYTE PTR [ebp+0x4499b2e]
  40bec7:	lods   al,BYTE PTR ds:[esi]
  40bec8:	call   DWORD PTR [ecx+0x3ae890a9]
  40bece:	mov    esp,0xd93ffccd
  40bed3:	sbb    al,0xe1
  40bed5:	adc    al,0x8
  40bed7:	cli    
  40bed8:	mov    al,ds:0x5451e59c
  40bedd:	jge    0x40be6a
  40bedf:	(bad)  
  40bee1:	xor    BYTE PTR [esi],0xae
  40bee4:	or     BYTE PTR [ecx+0x18],ah
  40bee7:	fucom  st(2)
  40bee9:	aam    0x34
  40beeb:	adc    al,0x9
  40beed:	call   0x1034:0x683e0c2c
  40bef4:	in     eax,0xec
  40bef6:	dec    ecx
  40bef7:	adc    dl,dh
  40bef9:	inc    ebp
  40befa:	mov    esi,0x8fdf38d8
  40beff:	mov    ah,BYTE PTR [edi]
  40bf01:	ror    BYTE PTR [ebx-0x2633e374],cl
  40bf07:	outs   dx,DWORD PTR ds:[esi]
  40bf08:	out    0x33,al
  40bf0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf0b:	fwait
  40bf0c:	imul   ebx,DWORD PTR [ebx+edi*4],0x6d
  40bf10:	or     BYTE PTR [edi-0x78],al
  40bf13:	or     al,0xe1
  40bf15:	cmp    edx,DWORD PTR [ebp-0x7643a814]
  40bf1b:	loopne 0x40bed4
  40bf1d:	sbb    ebp,DWORD PTR [ebx]
  40bf1f:	stos   DWORD PTR es:[edi],eax
  40bf20:	lea    ebx,[esi]
  40bf22:	cmc    
  40bf23:	rol    BYTE PTR [esi+0x1c],cl
  40bf26:	xor    eax,0x414da7bf
  40bf2b:	(bad)  
  40bf2c:	int    0xa7
  40bf2e:	push   edx
  40bf2f:	loopne 0x40bf18
  40bf31:	rcl    DWORD PTR [edi],1
  40bf33:	inc    eax
  40bf34:	sbb    BYTE PTR [edi+0x665541e8],al
  40bf3a:	loope  0x40bf9d
  40bf3c:	shl    eax,0xe
  40bf3f:	inc    ebp
  40bf40:	fcomp  QWORD PTR [edi]
  40bf42:	std    
  40bf43:	inc    cl
  40bf45:	xor    bh,0x5b
  40bf48:	outs   dx,BYTE PTR ds:[esi]
  40bf49:	cs dec ecx
  40bf4b:	jo     0x40bee6
  40bf4d:	inc    edx
  40bf4e:	hlt    
  40bf4f:	outs   dx,BYTE PTR ds:[esi]
  40bf50:	rcl    DWORD PTR ds:0x1856ce00,cl
  40bf56:	leave  
  40bf57:	dec    dl
  40bf59:	out    0xd3,al
  40bf5b:	sbb    ah,BYTE PTR [ebp-0x29]
  40bf5e:	enter  0xdf1,0x18
  40bf62:	sub    eax,0x53311cfe
  40bf67:	jns    0x40bf01
  40bf69:	mov    fs,WORD PTR [edi+ebp*8+0x71]
  40bf6d:	adc    cl,bh
  40bf6f:	xchg   edi,eax
  40bf70:	(bad)  
  40bf71:	xchg   edi,eax
  40bf72:	push   ss
  40bf73:	jp     0x40bf4e
  40bf75:	push   ecx
  40bf76:	push   ecx
  40bf77:	pop    edx
  40bf78:	inc    ecx
  40bf79:	cmovp  esi,DWORD PTR [ecx]
  40bf7c:	in     eax,0x3
  40bf7e:	int3   
  40bf7f:	aad    0x9b
  40bf81:	inc    edi
  40bf82:	and    eax,0x970201ac
  40bf87:	and    al,0x6b
  40bf89:	rcr    DWORD PTR [edi],0x72
  40bf8c:	mov    ebx,0x811347f
  40bf91:	pop    edx
  40bf92:	or     eax,0x49d2e888
  40bf97:	aaa    
  40bf98:	rcr    DWORD PTR [edi-0x3a],0x3d
  40bf9c:	je     0x40c005
  40bf9e:	xor    BYTE PTR [edx+0x45],0x2c
  40bfa2:	push   ds
  40bfa3:	int3   
  40bfa4:	mov    ch,0xa9
  40bfa6:	fstp   QWORD PTR [edx+0x3c156d86]
  40bfac:	sbb    dh,BYTE PTR [edx]
  40bfae:	inc    eax
  40bfaf:	xor    DWORD PTR [edx+0x58],ebx
  40bfb2:	ret    
  40bfb3:	push   0xc09f6a5d
  40bfb8:	jecxz  0x40bfd5
  40bfba:	retf   0xe0b4
  40bfbd:	or     ebp,0x53bbfce2
  40bfc3:	xor    edi,DWORD PTR ds:0xeab47853
  40bfc9:	into   
  40bfca:	fwait
  40bfcb:	mov    bl,0x47
  40bfcd:	dec    ecx
  40bfce:	ins    DWORD PTR es:[edi],dx
  40bfcf:	sub    al,0x5e
  40bfd1:	stos   DWORD PTR es:[edi],eax
  40bfd2:	mov    edx,0xc4fa3ef
  40bfd7:	xor    BYTE PTR [ebp+0x43fbb629],0xef
  40bfde:	out    dx,al
  40bfdf:	cld    
  40bfe0:	pusha  
  40bfe1:	or     DWORD PTR [edx],0x5fc8ae89
  40bfe7:	daa    
  40bfe8:	ds into 
  40bfea:	or     esi,DWORD PTR [eax+0x56]
  40bfed:	mov    eax,ds:0xe9b1db5e
  40bff2:	push   ecx
  40bff3:	and    eax,0x86b5d514
  40bff8:	cmc    
  40bff9:	mov    ecx,cs
  40bffb:	or     bh,BYTE PTR [eax]
  40bffd:	popa   
  40bffe:	mov    WORD PTR [eax+0x71],es
  40c001:	mov    edi,0x4d580878
  40c006:	jno    0x40c022
  40c008:	xor    al,0x42
  40c00a:	mov    ebx,0xa1abcd5a
  40c00f:	stc    
  40c010:	mov    al,ds:0xebc74d85
  40c015:	mov    ch,BYTE PTR [esi]
  40c017:	jle    0x40c016
  40c019:	xchg   esi,eax
  40c01a:	sub    ebp,ebp
  40c01c:	ror    DWORD PTR ss:[ecx-0x9],cl
  40c020:	pop    edx
  40c021:	scas   eax,DWORD PTR es:[edi]
  40c022:	aam    0x41
  40c024:	imul   esp,DWORD PTR [esi-0x1a],0x78
  40c028:	aad    0x2c
  40c02a:	data16 (bad) 
  40c02c:	in     eax,dx
  40c02d:	fld    TBYTE PTR [eax+0x1e]
  40c030:	int3   
  40c031:	pop    sp
  40c033:	lahf   
  40c034:	aam    0xae
  40c036:	cwde   
  40c037:	xchg   ebx,eax
  40c038:	lahf   
  40c039:	dec    ebx
  40c03a:	add    BYTE PTR [edx-0x7f7c83c],ah
  40c040:	retf   
  40c041:	rcr    DWORD PTR [esi+0x480bbb1d],cl
  40c047:	fdivp  st(2),st
  40c049:	pusha  
  40c04a:	mov    al,0x2e
  40c04c:	out    dx,al
  40c04d:	bound  ebp,QWORD PTR [edi+0x6fdea55c]
  40c053:	shr    BYTE PTR [esi+ecx*8-0xe],0xf
  40c058:	and    ebp,DWORD PTR [edx-0x1c]
  40c05b:	into   
  40c05c:	cld    
  40c05d:	jo     0x40c09c
  40c05f:	cmp    BYTE PTR [edx+0x396eedc3],ch
  40c065:	(bad)  
  40c066:	enter  0x55b6,0x1b
  40c06a:	jno    0x40c048
  40c06c:	mov    edi,0xa4afd459
  40c071:	shl    DWORD PTR [ebx],cl
  40c073:	jo     0x40c0de
  40c075:	inc    ebx
  40c076:	jle    0x40c04d
  40c078:	or     eax,0xe97e3172
  40c07d:	sahf   
  40c07e:	lods   eax,DWORD PTR ds:[esi]
  40c07f:	ins    DWORD PTR es:[edi],dx
  40c080:	je     0x40c088
  40c082:	pop    edi
  40c083:	dec    eax
  40c084:	fldenv [ebx-0x27]
  40c087:	dec    edi
  40c088:	mov    ds,WORD PTR [ebp+ebx*1+0x9]
  40c08c:	lods   al,BYTE PTR ds:[esi]
  40c08d:	jbe    0x40c0e6
  40c08f:	push   ecx
  40c090:	push   ds
  40c091:	jle    0x40c06b
  40c093:	lahf   
  40c094:	push   edx
  40c095:	aad    0x72
  40c097:	lods   al,BYTE PTR ds:[esi]
  40c098:	mov    ebp,0x52938675
  40c09d:	cmp    esp,DWORD PTR [edi]
  40c09f:	xchg   ebx,eax
  40c0a0:	cmp    al,0x84
  40c0a2:	jge    0x40c0c4
  40c0a4:	inc    esp
  40c0a5:	inc    edx
  40c0a6:	push   es
  40c0a7:	gs push cs
  40c0a9:	inc    ebp
  40c0aa:	mul    BYTE PTR [ebp+0x306a84a9]
  40c0b0:	push   esp
  40c0b1:	pop    esi
  40c0b2:	scas   al,BYTE PTR es:[edi]
  40c0b3:	or     DWORD PTR [ebp-0x7807da40],eax
  40c0b9:	ret    
  40c0ba:	mov    ss,WORD PTR [ebx]
  40c0bc:	mov    edi,DWORD PTR [ebp+0x7228213]
  40c0c2:	in     eax,0x5e
  40c0c4:	in     al,dx
  40c0c5:	gs push es
  40c0c7:	jp     0x40c0f8
  40c0c9:	inc    edx
  40c0ca:	mov    bh,0x97
  40c0cc:	push   ebx
  40c0cd:	sbb    DWORD PTR [ebx],0xb7dbd671
  40c0d3:	inc    ebp
  40c0d4:	in     eax,0x74
  40c0d6:	push   esp
  40c0d7:	loope  0x40c128
  40c0d9:	adc    eax,0x74f48ff3
  40c0de:	push   ds
  40c0df:	vpsrlq xmm1,xmm6,XMMWORD PTR [esi+0x10]
  40c0e4:	adc    ax,0x2e85
  40c0e8:	into   
  40c0e9:	dec    ebp
  40c0ea:	xlat   BYTE PTR ds:[ebx]
  40c0eb:	imul   esp,DWORD PTR [ecx],0x6f
  40c0ee:	sahf   
  40c0ef:	inc    ecx
  40c0f0:	xlat   BYTE PTR ds:[ebx]
  40c0f1:	mov    DWORD PTR [edi],edi
  40c0f3:	hlt    
  40c0f4:	jae    0x40c07f
  40c0f6:	add    eax,0xb4e6796d
  40c0fb:	outs   dx,DWORD PTR ds:[esi]
  40c0fc:	or     al,0x12
  40c0fe:	push   es
  40c0ff:	fldenv ds:0x5b0d
  40c104:	iret   
  40c105:	xchg   edi,eax
  40c106:	repnz pop esi
  40c108:	push   0xe4f9a631
  40c10d:	push   esi
  40c10e:	jmp    0xf650:0xbb9990ef
  40c115:	xchg   edi,eax
  40c116:	js     0x40c0e5
  40c118:	cmc    
  40c119:	leave  
  40c11a:	xor    ah,BYTE PTR [ecx]
  40c11c:	and    BYTE PTR [edi+0x44d39326],dh
  40c122:	sbb    al,0xb
  40c124:	push   es
  40c125:	xor    ecx,DWORD PTR [esi]
  40c127:	cmp    edi,DWORD PTR [esi]
  40c129:	out    dx,al
  40c12a:	ja     0x40c0dd
  40c12c:	rol    ah,1
  40c12e:	add    al,0xde
  40c130:	mov    dl,cl
  40c132:	mov    dl,0x28
  40c134:	ins    BYTE PTR es:[edi],dx
  40c135:	(bad)  
  40c136:	es clc 
  40c138:	in     eax,dx
  40c139:	sbb    al,0xe0
  40c13b:	je     0x40c120
  40c13d:	arpl   WORD PTR [ecx],sp
  40c13f:	push   ebp
  40c140:	mov    esi,DWORD PTR [esi+0x7293e92c]
  40c146:	jl     0x40c120
  40c148:	stos   DWORD PTR es:[edi],eax
  40c149:	call   0x7b8c:0x5d7d9a1d
  40c150:	push   edx
  40c151:	mov    dl,0xe1
  40c153:	xchg   esp,eax
  40c155:	mov    ecx,0x4d7c3a54
  40c15a:	or     DWORD PTR [eax],esi
  40c15c:	fs ins DWORD PTR es:[edi],dx
  40c15e:	lds    esi,FWORD PTR [ecx+edx*2+0x14]
  40c162:	push   edx
  40c163:	ret    0xcb85
  40c166:	xchg   esi,eax
  40c167:	and    eax,0x6ee83ed4
  40c16c:	mov    cs:0xe4eb8661,eax
  40c172:	dec    ebp
  40c173:	push   eax
  40c174:	lahf   
  40c175:	aam    0x76
  40c177:	jns    0x40c118
  40c179:	imul   edx,DWORD PTR [eax+edx*8+0xf6d3aeb],0x34
  40c181:	fsubr  QWORD PTR [esi+0x50]
  40c184:	ja     0x40c1b6
  40c186:	sti    
  40c187:	sti    
  40c188:	lods   eax,DWORD PTR ds:[esi]
  40c189:	and    BYTE PTR [edi],ch
  40c18b:	sbb    eax,0xf2177210
  40c190:	cmp    DWORD PTR [edx-0x25b0b2c2],esi
  40c196:	mov    edx,0x462619b5
  40c19b:	aam    0x76
  40c19d:	ins    BYTE PTR es:[edi],dx
  40c19e:	mov    al,bl
  40c1a0:	and    BYTE PTR [ebp-0x14],dh
  40c1a3:	fild   QWORD PTR [esi+0x77]
  40c1a6:	fs sti 
  40c1a8:	(bad)  
  40c1a9:	retf   
  40c1aa:	jecxz  0x40c1b0
  40c1ac:	in     eax,dx
  40c1ad:	cld    
  40c1ae:	sahf   
  40c1af:	cmc    
  40c1b0:	push   0x658cde90
  40c1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1b6:	test   DWORD PTR [esi+0x52657fd7],ecx
  40c1bc:	or     esp,0x25
  40c1bf:	test   DWORD PTR [esp+edx*2],0x94003c2c
  40c1c6:	or     al,0x2a
  40c1c8:	ds lock xchg ebx,eax
  40c1cb:	or     BYTE PTR [ebp-0x76a547db],dl
  40c1d1:	test   DWORD PTR [esi+0x3a],esp
  40c1d4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d6:	push   ebx
  40c1d7:	or     DWORD PTR [ecx+0x36],esp
  40c1da:	and    al,0x95
  40c1dc:	add    esi,0xe8983c38
  40c1e2:	jno    0x40c216
  40c1e4:	cld    
  40c1e5:	pop    ebp
  40c1e6:	jne    0x40c211
  40c1e8:	je     0x40c25b
  40c1ea:	xchg   edx,eax
  40c1eb:	(bad)  
  40c1ec:	aad    0x81
  40c1ee:	adc    DWORD PTR [ebp-0x50],edx
  40c1f1:	adc    eax,0x2a85f911
  40c1f6:	std    
  40c1f7:	cmp    BYTE PTR [ebp+ebp*2+0x3f],bl
  40c1fb:	xor    bl,BYTE PTR [edi-0x2d2fef4c]
  40c201:	popa   
  40c202:	out    0x9d,eax
  40c204:	cmp    bh,BYTE PTR ds:0xc7388a2e
  40c20a:	imul   eax,ebx,0xffffffef
  40c20d:	scas   eax,DWORD PTR es:[edi]
  40c20e:	jge    0x40c26a
  40c210:	(bad)  
  40c211:	sbb    edx,DWORD PTR [edx+0x18]
  40c214:	fldcw  WORD PTR [esi-0x27]
  40c217:	ins    DWORD PTR es:[edi],dx
  40c218:	add    DWORD PTR [eax],ebp
  40c21a:	push   ebx
  40c21b:	push   edi
  40c21c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c21d:	sbb    ch,BYTE PTR [ecx+0x32d821e7]
  40c223:	jl     0x40c20a
  40c225:	dec    ebp
  40c226:	ds addr16 es ret 
  40c22a:	jnp    0x40c249
  40c22c:	ror    DWORD PTR [ecx],1
  40c22e:	jg     0x40c2ac
  40c230:	mov    eax,0xfd5fe70c
  40c235:	aam    0xd5
  40c237:	mov    al,ds:0x1c13924e
  40c23c:	cwde   
  40c23d:	jo     0x40c214
  40c23f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c240:	out    0x84,al
  40c242:	jmp    0x52ff36cd
  40c247:	call   0xcd953479
  40c24c:	mov    bl,0xa9
  40c24e:	outs   dx,BYTE PTR ds:[esi]
  40c24f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c250:	and    bl,BYTE PTR [esi-0x5a]
  40c253:	pop    ss
  40c254:	pop    edx
  40c255:	xchg   ebx,eax
  40c256:	lahf   
  40c257:	aam    0x3a
  40c259:	adc    bl,BYTE PTR [eax+0x70e42de3]
  40c25f:	fdivr  QWORD PTR [ebx+0x17edf664]
  40c265:	mov    ds:0x266329f9,al
  40c26a:	dec    ebx
  40c26b:	mov    ecx,0x34344159
  40c270:	push   ebp
  40c271:	mov    esi,0x298368a8
  40c276:	lds    ecx,FWORD PTR [edi+0x7a44c754]
  40c27c:	mov    DWORD PTR [edi+0x50],ebp
  40c27f:	pop    esi
  40c280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c281:	fimul  WORD PTR [ecx+ebx*2-0x67608965]
  40c288:	pop    esi
  40c289:	call   0xe5d8dcef
  40c28e:	cdq    
  40c28f:	in     eax,0xfe
  40c291:	push   ecx
  40c292:	xchg   esp,eax
  40c293:	pop    ebp
  40c294:	ja     0x40c2b6
  40c296:	pop    ebp
  40c297:	sbb    eax,0x35dc30ff
  40c29c:	popf   
  40c29d:	call   0xe55d9153
  40c2a2:	dec    esi
  40c2a3:	pop    ecx
  40c2a4:	neg    DWORD PTR [eax-0x31]
  40c2a7:	push   edx
  40c2a9:	adc    edi,DWORD PTR [eax+0x6c]
  40c2ac:	inc    edx
  40c2ad:	retf   
  40c2ae:	sub    edx,DWORD PTR [eax]
  40c2b0:	sbb    al,0x38
  40c2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2b3:	and    edi,DWORD PTR [ecx+ebp*8-0x298b9240]
  40c2ba:	push   ss
  40c2bb:	in     eax,dx
  40c2bc:	cwde   
  40c2bd:	push   esp
  40c2be:	cmc    
  40c2bf:	(bad)  
  40c2c0:	(bad)  
  40c2c1:	jl     0x40c25d
  40c2c3:	inc    ecx
  40c2c4:	push   ds
  40c2c5:	hlt    
  40c2c6:	jbe    0x40c258
  40c2c8:	mov    ebp,DWORD PTR [bx+di+0x4ae7]
  40c2cd:	cmp    DWORD PTR [edx-0x2],esp
  40c2d0:	pop    edi
  40c2d1:	out    dx,eax
  40c2d2:	rcr    BYTE PTR [esi],1
  40c2d4:	mov    ch,ah
  40c2d6:	rol    DWORD PTR [esi],cl
  40c2d8:	mov    edx,ss
  40c2da:	add    eax,ebp
  40c2dc:	dec    esi
  40c2dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2de:	mov    edi,0x2cbcd298
  40c2e3:	jmp    0x742b29d9
  40c2e8:	sbb    BYTE PTR [edi],cl
  40c2ea:	jmp    0x40c33f
  40c2ec:	cld    
  40c2ed:	sti    
  40c2ee:	retf   0x7d29
  40c2f1:	fst    QWORD PTR [edx-0x1]
  40c2f4:	xchg   BYTE PTR [edx-0x32cbb11d],al
  40c2fa:	outs   dx,DWORD PTR ds:[esi]
  40c2fb:	sub    ah,BYTE PTR [ecx+0x61fda086]
  40c301:	xor    DWORD PTR [edi+0x14],edx
  40c304:	jns    0x40c370
  40c306:	adc    BYTE PTR [edx],ah
  40c308:	pop    eax
  40c309:	sub    BYTE PTR [esi+0x51],dh
  40c30c:	dec    edx
  40c30d:	repz jecxz 0x40c2ac
  40c310:	pop    ecx
  40c311:	jmp    0x40c32c
  40c313:	mov    bh,0xae
  40c315:	shl    DWORD PTR [eax],cl
  40c317:	adc    esi,ebp
  40c319:	cmp    al,0xa
  40c31b:	sub    edx,ecx
  40c31d:	push   esi
  40c31e:	pop    ebx
  40c31f:	hlt    
  40c320:	neg    DWORD PTR [ecx]
  40c322:	adc    BYTE PTR [edx+0x27],0xd0
  40c326:	das    
  40c327:	xchg   ebx,eax
  40c328:	sub    eax,0xbaae0033
  40c32d:	std    
  40c32e:	ret    
  40c32f:	mov    ds:0xdd1441db,eax
  40c334:	(bad)  
  40c335:	rcr    BYTE PTR [ebx+eiz*4+0x24],1
  40c339:	xor    ebp,DWORD PTR [ebx-0x1e5cec3e]
  40c33f:	sub    DWORD PTR [esi],ebx
  40c341:	mov    ebp,0x7763ed3a
  40c346:	jmp    0x935f:0xe3a283d
  40c34d:	cmp    DWORD PTR [eax],0xffffff9f
  40c350:	and    eax,0xfa25537f
  40c355:	arpl   WORD PTR [edi+ebx*2-0x35],cx
  40c359:	xchg   edx,eax
  40c35a:	push   esp
  40c35b:	dec    ebp
  40c35c:	outs   dx,BYTE PTR ds:[esi]
  40c35d:	mov    ah,0x1a
  40c35f:	and    al,0x6b
  40c361:	mov    bh,0xc0
  40c363:	dec    eax
  40c364:	jecxz  0x40c383
  40c366:	adc    DWORD PTR [ebp-0x5e],ebp
  40c369:	xchg   ebx,eax
  40c36a:	stos   BYTE PTR es:[edi],al
  40c36b:	xchg   ebx,eax
  40c36c:	xchg   edi,eax
  40c36d:	aam    0xda
  40c36f:	icebp  
  40c370:	call   0x32b2895c
  40c375:	into   
  40c376:	sub    DWORD PTR [ecx],edi
  40c378:	or     ebp,DWORD PTR [edi+0x42d2b744]
  40c37e:	ins    DWORD PTR es:[edi],dx
  40c37f:	scas   eax,DWORD PTR es:[edi]
  40c380:	(bad)  [edx-0x3bb5fec9]
  40c386:	mov    ebx,0x71c87117
  40c38b:	sbb    bh,BYTE PTR [ecx-0x7fccfb22]
  40c391:	inc    esi
  40c392:	stos   DWORD PTR es:[edi],eax
  40c393:	push   ebp
  40c394:	les    ebx,FWORD PTR [edx-0x3a]
  40c397:	xchg   esi,eax
  40c398:	in     al,dx
  40c399:	push   0x5a68a669
  40c39e:	call   0xe002fb6d
  40c3a3:	fcomp  DWORD PTR [edx+ebx*8-0x36]
  40c3a7:	ret    
  40c3a8:	icebp  
  40c3a9:	push   esp
  40c3aa:	dec    edi
  40c3ab:	mov    esi,0x3da9f029
  40c3b0:	mov    ?,WORD PTR [ebp+0x1d1c26f1]
  40c3b6:	mov    eax,ds:0xc4c69061
  40c3bb:	jnp    0x40c3a6
  40c3bd:	into   
  40c3be:	aas    
  40c3bf:	(bad)  
  40c3c0:	idiv   BYTE PTR [ebp+0x14]
  40c3c3:	(bad)  
  40c3c4:	aam    0x16
  40c3c6:	out    dx,eax
  40c3c7:	sar    BYTE PTR [ecx+0x7a],0xdb
  40c3cb:	pop    ebx
  40c3cc:	xchg   esp,eax
  40c3cd:	mov    eax,0x9c9f061c
  40c3d2:	jb     0x40c381
  40c3d4:	mov    WORD PTR [edi+0x3e1fca0],fs
  40c3da:	std    
  40c3db:	adc    al,0xdc
  40c3dd:	pushf  
  40c3de:	test   DWORD PTR ds:[esi],esi
  40c3e1:	and    al,0xf3
  40c3e3:	ud2    
  40c3e5:	cmp    ebx,DWORD PTR [ebx-0x4e]
  40c3e8:	mov    dl,0x6e
  40c3ea:	es loop 0x40c381
  40c3ed:	xchg   esp,eax
  40c3ee:	retf   0xc99c
  40c3f1:	adc    ah,al
  40c3f3:	sub    BYTE PTR [eax+0x1e47771a],cl
  40c3f9:	cli    
  40c3fa:	and    edx,eax
  40c3fc:	shl    dh,cl
  40c3fe:	inc    edi
  40c3ff:	xor    ch,BYTE PTR [eax]
  40c401:	inc    ebp
  40c402:	outs   dx,BYTE PTR ds:[esi]
  40c403:	ss (bad) 
  40c405:	in     eax,0xa
  40c407:	adc    edx,esi
  40c409:	rol    DWORD PTR [eax-0x6fc62490],0xbc
  40c410:	mov    ah,0xfa
  40c412:	jo     0x40c3c4
  40c414:	imul   esp,DWORD PTR [ecx+0x38],0xffffff82
  40c418:	add    eax,0x9aa50c66
  40c41d:	add    bh,BYTE PTR [ecx+edi*4-0x60]
  40c421:	inc    ebp
  40c422:	icebp  
  40c423:	jle    0x40c43c
  40c425:	scas   al,BYTE PTR es:[edi]
  40c426:	stc    
  40c427:	lock sbb eax,0x24d7521e
  40c42d:	ror    esi,1
  40c42f:	add    al,0x4d
  40c431:	psubq  mm3,QWORD PTR [edx-0x20]
  40c435:	push   es
  40c436:	lea    ebp,[eax]
  40c438:	fcomp  QWORD PTR [ecx]
  40c43a:	popa   
  40c43b:	xchg   edi,eax
  40c43c:	xchg   esi,eax
  40c43d:	mov    eax,0xcffd833e
  40c442:	xor    ebx,eax
  40c444:	pop    ss
  40c445:	addr16 sbb al,0x39
  40c448:	hlt    
  40c449:	outs   dx,BYTE PTR ds:[esi]
  40c44a:	xlat   BYTE PTR ds:[ebx]
  40c44b:	ss push edx
  40c44d:	(bad)  
  40c44f:	test   al,0x1b
  40c451:	mov    eax,ds
  40c453:	std    
  40c454:	mov    esp,0xe1cc36cd
  40c459:	out    dx,eax
  40c45a:	xor    bh,BYTE PTR [edx]
  40c45c:	mov    ebx,0x63a69d72
  40c461:	jns    0x40c456
  40c463:	mov    ch,BYTE PTR ds:0xa186216
  40c469:	mov    bh,0x8a
  40c46b:	push   es
  40c46c:	ds adc al,0xe3
  40c46f:	push   esi
  40c470:	lds    edx,FWORD PTR [edx]
  40c472:	sub    eax,0xdf4b8120
  40c477:	jb     0x40c4ed
  40c479:	ins    BYTE PTR es:[edi],dx
  40c47a:	xchg   edx,eax
  40c47b:	cmp    bl,ch
  40c47d:	ss dec ebx
  40c47f:	fld    st(6)
  40c481:	jp     0x9a55195b
  40c487:	inc    esi
  40c488:	or     al,0x58
  40c48a:	add    eax,0x491423cf
  40c48f:	mov    ecx,0x4f5c10ec
  40c494:	lahf   
  40c495:	(bad)  
  40c496:	jp     0x40c4ad
  40c498:	sbb    DWORD PTR [edi-0x57],0x8affae2b
  40c49f:	(bad)  
  40c4a0:	jnp    0x40c520
  40c4a2:	outs   dx,BYTE PTR ds:[esi]
  40c4a3:	ins    BYTE PTR es:[edi],dx
  40c4a4:	addr16 enter 0xa534,0xb2
  40c4a9:	fsub   QWORD PTR ds:0xf2d84758
  40c4af:	dec    esi
  40c4b0:	and    BYTE PTR [esi-0x6eab96a2],0xa
  40c4b7:	mov    eax,ds:0x349d7acb
  40c4bc:	rcl    DWORD PTR [eax-0x32],0xfc
  40c4c0:	sub    edx,DWORD PTR [ecx]
  40c4c2:	dec    esp
  40c4c3:	(bad)  
  40c4c4:	test   DWORD PTR [esi],0xb0743f66
  40c4ca:	pop    ebx
  40c4cb:	xchg   esi,eax
  40c4cc:	mov    ch,0x8b
  40c4ce:	xchg   ebp,eax
  40c4cf:	mov    eax,ds:0xd68c6149
  40c4d4:	retf   0x7776
  40c4d7:	shr    BYTE PTR ds:0x1f4f6561,cl
  40c4dd:	shr    BYTE PTR [edx-0x7af2d458],cl
  40c4e3:	xchg   esi,eax
  40c4e4:	or     eax,0x85b298e2
  40c4e9:	mov    esp,0xe56f1aed
  40c4ee:	cmp    BYTE PTR [esi],0x44
  40c4f1:	mov    edi,ss
  40c4f3:	inc    esp
  40c4f4:	mov    esp,0x78647ab2
  40c4f9:	sti    
  40c4fa:	add    al,0x85
  40c4fc:	retf   0xb450
  40c4ff:	aas    
  40c500:	mov    eax,0x9d6f3e9b
  40c505:	mov    esi,esi
  40c507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c508:	das    
  40c509:	and    eax,0x52704624
  40c50e:	jnp    0x40c4ea
  40c510:	sub    al,0xae
  40c512:	adc    eax,0xf1b6f88f
  40c517:	pop    ebx
  40c518:	(bad)  
  40c519:	repz adc edx,DWORD PTR [esi+0x244b47a7]
  40c520:	aaa    
  40c521:	pop    es
  40c522:	int    0xe9
  40c524:	sbb    BYTE PTR [ebx+0x5f],ah
  40c527:	nop
  40c528:	xchg   edi,ebp
  40c52a:	imul   esp,DWORD PTR [esi-0x36d1123f],0x45077c16
  40c534:	rol    BYTE PTR [esi-0x30d5f269],cl
  40c53a:	test   BYTE PTR [ebp+0x14],dh
  40c53d:	jno    0x40c540
  40c53f:	ja     0x40c512
  40c541:	rcl    BYTE PTR [edx-0x7],cl
  40c544:	les    ebp,FWORD PTR [ecx+0x7b]
  40c547:	leave  
  40c548:	push   ss
  40c549:	jae    0x40c4d9
  40c54b:	(bad)  
  40c54d:	dec    ecx
  40c54e:	clc    
  40c54f:	xor    eax,DWORD PTR ds:0x5b7cf2bc
  40c555:	(bad)  
  40c556:	call   0xf80da35c
  40c55b:	rcr    esp,cl
  40c55d:	ins    BYTE PTR es:[edi],dx
  40c55e:	lds    ebp,FWORD PTR [eax]
  40c560:	sbb    ecx,DWORD PTR [edx]
  40c562:	mov    bl,0x88
  40c564:	adc    eax,0x810991ed
  40c569:	out    0xf4,al
  40c56b:	push   edi
  40c56c:	xlat   BYTE PTR ds:[ebx]
  40c56d:	ja     0x40c587
  40c56f:	xchg   ebp,eax
  40c570:	xor    al,0xe7
  40c572:	hlt    
  40c573:	jl     0x40c533
  40c575:	mov    edx,0xb95d77a7
  40c57a:	stc    
  40c57b:	les    esi,FWORD PTR [edi-0x23f06bf5]
  40c581:	je     0x40c5d2
  40c583:	mov    al,0x28
  40c585:	rol    DWORD PTR [edi+0x260f4cd],0x66
  40c58c:	pop    ecx
  40c58d:	xchg   DWORD PTR fs:[ebp+esi*2-0x3a],esi
  40c592:	shr    DWORD PTR [ebx-0x2b126c40],1
  40c598:	mov    dl,0x81
  40c59a:	dec    ecx
  40c59b:	data16 add BYTE PTR [edx],0x25
  40c59f:	mov    edi,0x61eb925a
  40c5a4:	jb     0x40c539
  40c5a6:	lock sub edi,eax
  40c5a9:	sti    
  40c5aa:	sub    eax,DWORD PTR ds:0x6fbce867
  40c5b0:	dec    ecx
  40c5b1:	pop    edi
  40c5b2:	mov    ebp,0xd09447ae
  40c5b7:	jp     0x40c5fe
  40c5b9:	cmp    BYTE PTR [esi-0xa06c568],0x5e
  40c5c0:	neg    ebp
  40c5c2:	clc    
  40c5c3:	jmp    0x9f99ea21
  40c5c8:	inc    edi
  40c5c9:	xchg   esp,eax
  40c5ca:	in     al,0x2f
  40c5cc:	mov    fs,WORD PTR [edx-0x1d963298]
  40c5d2:	mov    bh,0xaf
  40c5d4:	push   edi
  40c5d5:	scas   eax,DWORD PTR es:[edi]
  40c5d6:	mov    ebx,0x27048b43
  40c5db:	xchg   esp,eax
  40c5dc:	and    eax,0x9d434c84
  40c5e1:	popa   
  40c5e2:	push   ds
  40c5e3:	retf   
  40c5e4:	std    
  40c5e5:	or     edi,DWORD PTR [eax*8-0x5c50df7a]
  40c5ec:	pushf  
  40c5ed:	dec    DWORD PTR [ebp+ebx*8-0x365bada0]
  40c5f4:	pop    edx
  40c5f5:	loop   0x40c664
  40c5f7:	and    esi,DWORD PTR [edx+0x273fd107]
  40c5fd:	inc    edx
  40c5fe:	mov    ds:0x6ba525ae,al
  40c603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c604:	in     al,dx
  40c605:	aad    0x5b
  40c607:	push   ecx
  40c608:	ret    
  40c609:	(bad)  
  40c60b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c60c:	sbb    DWORD PTR [esi+0x3989043],0x49
  40c613:	jl     0x40c5b4
  40c615:	fadd   DWORD PTR [ebp+0x70eeddaf]
  40c61b:	das    
  40c61c:	pushf  
  40c61d:	outs   dx,DWORD PTR ds:[esi]
  40c61e:	stos   BYTE PTR es:[edi],al
  40c61f:	inc    ecx
  40c620:	mov    WORD PTR [eax*2-0x4084d4ea],cs
  40c627:	dec    edi
  40c628:	cmp    edx,ecx
  40c62a:	cdq    
  40c62b:	xchg   ebx,eax
  40c62c:	lahf   
  40c62d:	out    0xf2,al
  40c62f:	fisubr DWORD PTR [edx-0x4b]
  40c632:	(bad)  
  40c633:	lods   eax,DWORD PTR ds:[esi]
  40c634:	adc    ecx,DWORD PTR [ecx+0x4aff1579]
  40c63a:	jmp    0x40c5fc
  40c63c:	ss ss mov esi,0x7c8b6dbc
  40c643:	xor    ebx,DWORD PTR [ecx+0x3ddf59ed]
  40c649:	in     eax,dx
  40c64a:	std    
  40c64b:	push   edi
  40c64c:	adc    ebp,DWORD PTR [eax+0x48]
  40c64f:	and    DWORD PTR [edi],edi
  40c651:	lock out 0xd2,al
  40c654:	mov    edx,0x57fd1961
  40c659:	and    eax,0x100523c8
  40c65e:	shl    DWORD PTR [ebx-0x10],1
  40c661:	(bad)  
  40c662:	mov    cl,0x46
  40c664:	out    dx,al
  40c665:	dec    ecx
  40c666:	test   eax,0xa2e10249
  40c66b:	mov    eax,ss
  40c66d:	mov    al,ds:0x8af5a7fc
  40c672:	jae    0x40c60c
  40c674:	inc    edi
  40c675:	xor    al,BYTE PTR [ebx-0x37]
  40c678:	lock mov eax,ds:0xf0515c8b
  40c67e:	and    DWORD PTR [ebp+0x33e258ce],edi
  40c684:	fidiv  WORD PTR [edx]
  40c686:	nop
  40c687:	call   0x6733:0xb911d767
  40c68e:	mov    edi,0xac95493d
  40c693:	mov    al,0xa6
  40c695:	xchg   ebx,eax
  40c696:	mov    ebp,0x57bfcd84
  40c69b:	fdivrp st(5),st
  40c69d:	pop    edx
  40c69e:	in     eax,dx
  40c69f:	shl    cl,0xcd
  40c6a2:	pop    ss
  40c6a3:	test   eax,edx
  40c6a5:	adc    BYTE PTR [edx+0x56d73802],ah
  40c6ab:	mov    bl,0xed
  40c6ad:	mov    bl,0x95
  40c6af:	sbb    bl,dl
  40c6b1:	mov    ecx,ebp
  40c6b3:	test   DWORD PTR [edi-0x28c5a12c],edi
  40c6b9:	pusha  
  40c6ba:	cmp    ecx,esi
  40c6bc:	ret    
  40c6bd:	lods   al,BYTE PTR ds:[esi]
  40c6be:	adc    eax,0x6772a6cb
  40c6c3:	jmp    0x40c673
  40c6c5:	mov    WORD PTR [eax],cs
  40c6c7:	inc    eax
  40c6c8:	jge    0x40c6d0
  40c6ca:	in     al,0x6
  40c6cc:	xor    BYTE PTR [edi+0x7e],dh
  40c6cf:	repz xchg ebx,eax
  40c6d1:	call   0x6dba2e4b
  40c6d6:	stos   BYTE PTR es:[edi],al
  40c6d7:	fist   DWORD PTR [edi-0x6a]
  40c6da:	add    DWORD PTR [ebp-0x10],ecx
  40c6dd:	in     al,0xf4
  40c6df:	or     eax,0x3d4f9eee
  40c6e4:	stos   BYTE PTR es:[edi],al
  40c6e5:	cmp    eax,0xf78bcbc6
  40c6ea:	pop    edx
  40c6eb:	dec    ebx
  40c6ec:	inc    ebp
  40c6ed:	lock lock push ebx
  40c6f0:	or     BYTE PTR [eax+0x45],bh
  40c6f3:	xor    bh,bh
  40c6f5:	js     0x40c6b8
  40c6f7:	mov    ebp,0xa1357e01
  40c6fc:	outs   dx,DWORD PTR ds:[esi]
  40c6fd:	and    dl,dh
  40c6ff:	xor    bl,BYTE PTR [eax]
  40c701:	xchg   edx,eax
  40c702:	xchg   edx,eax
  40c703:	xor    BYTE PTR [ecx],dh
  40c705:	out    dx,eax
  40c706:	sti    
  40c707:	inc    ebx
  40c708:	sbb    al,0xad
  40c70a:	dec    esp
  40c70b:	xchg   BYTE PTR [edx-0x61],ch
  40c70e:	mov    edx,ebx
  40c710:	xlat   BYTE PTR ds:[ebx]
  40c711:	adc    BYTE PTR [esi-0x45],ch
  40c714:	dec    esi
  40c715:	fsubr  DWORD PTR [esi-0x80]
  40c718:	or     al,0x13
  40c71a:	or     al,0x2f
  40c71c:	mov    eax,0xa2d96cfa
  40c721:	sar    DWORD PTR [edi],cl
  40c723:	fsub   QWORD PTR [eax-0x40]
  40c726:	sbb    dl,bh
  40c728:	sqrtps xmm1,XMMWORD PTR [edx]
  40c72b:	stc    
  40c72c:	sbb    edi,esi
  40c72e:	lods   eax,DWORD PTR fs:[esi]
  40c730:	mov    edi,0xcc4d2c64
  40c735:	mov    dl,0x5e
  40c737:	xchg   edx,eax
  40c738:	pop    ecx
  40c739:	sub    al,0xf7
  40c73b:	repnz xchg edi,eax
  40c73d:	xchg   ebp,eax
  40c73e:	test   DWORD PTR [edx],esp
  40c740:	sbb    BYTE PTR [edx+0x15],0xde
  40c744:	(bad)  
  40c745:	call   0x48d:0x7e565330
  40c74c:	fs jmpw 0xd13e
  40c751:	push   edi
  40c752:	add    dh,BYTE PTR [ebx+0x617d38c9]
  40c758:	hlt    
  40c759:	push   ebp
  40c75a:	xor    edx,DWORD PTR [edi-0x74]
  40c75d:	inc    edx
  40c75e:	dec    ebp
  40c75f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c760:	dec    ebp
  40c761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c762:	mov    ds:0xff5d0820,al
  40c767:	fadd   DWORD PTR [ecx+0x19]
  40c76a:	clc    
  40c76b:	and    eax,0x6bbd3460
  40c770:	xchg   esi,eax
  40c771:	adc    BYTE PTR [eax-0x68ba4acf],0x8c
  40c778:	push   esp
  40c779:	mov    cl,0xd9
  40c77b:	push   0xfe64c8c0
  40c780:	add    ax,0x7517
  40c784:	rcr    bl,cl
  40c786:	cmp    al,BYTE PTR [esi+0x6f]
  40c789:	mov    ch,0x66
  40c78b:	mov    ds:0x2b0b44f,eax
  40c790:	adc    edx,edx
  40c792:	dec    ecx
  40c793:	int    0x40
  40c795:	fs je  0x40c79b
  40c798:	add    eax,0x632ec6ef
  40c79d:	add    dh,BYTE PTR [edi]
  40c79f:	(bad)  
  40c7a0:	hlt    
  40c7a1:	test   DWORD PTR [eax],eax
  40c7a3:	add    al,0x34
  40c7a5:	clc    
  40c7a6:	sub    eax,0x2e79b820
  40c7ab:	add    ecx,edx
  40c7ad:	or     eax,0x48674e6
  40c7b2:	sahf   
  40c7b3:	xlat   BYTE PTR ds:[ebx]
  40c7b4:	and    DWORD PTR [edi+0x3bf7ba5e],eax
  40c7ba:	stos   DWORD PTR es:[edi],eax
  40c7bb:	(bad)  
  40c7bc:	dec    edx
  40c7bd:	dec    edi
  40c7be:	xlat   BYTE PTR ds:[ebx]
  40c7bf:	mov    bl,BYTE PTR [ebx-0x19b3116f]
  40c7c5:	or     eax,0x252d1889
  40c7ca:	rcr    BYTE PTR [edx-0x66],0x89
  40c7ce:	fwait
  40c7cf:	cmp    al,0xed
  40c7d1:	push   ecx
  40c7d2:	stos   BYTE PTR es:[edi],al
  40c7d3:	clc    
  40c7d4:	and    eax,0xa7da0ca2
  40c7d9:	in     eax,dx
  40c7da:	mov    al,ds:0xd8774c33
  40c7df:	cmc    
  40c7e0:	jno    0x40c7d3
  40c7e2:	stos   BYTE PTR es:[edi],al
  40c7e3:	rcr    DWORD PTR [ecx],0xc1
  40c7e6:	sub    BYTE PTR [ebx-0x40a21600],0xf8
  40c7ed:	inc    ecx
  40c7ee:	pushf  
  40c7ef:	jl     0x40c7c6
  40c7f1:	xchg   DWORD PTR [esi],esi
  40c7f3:	mov    DWORD PTR [ebx+0x4b59d357],edi
  40c7f9:	cmp    bl,ah
  40c7fb:	not    DWORD PTR [eax]
  40c7fd:	dec    ebp
  40c7fe:	inc    esi
  40c7ff:	add    al,0xb1
  40c801:	rcl    BYTE PTR [edx+0x77],cl
  40c804:	push   ebx
  40c805:	js     0x40c87f
  40c807:	and    eax,0xae517723
  40c80c:	cmp    eax,0x44c0d673
  40c811:	das    
  40c812:	fnstcw WORD PTR [edx]
  40c814:	(bad)  
  40c815:	fsub   DWORD PTR [esi+0x3a]
  40c818:	xchg   BYTE PTR [edi+0x736d1ee2],bl
  40c81e:	mov    esp,0x14ad16ab
  40c823:	mov    ebx,0xce866cc6
  40c828:	cld    
  40c829:	das    
  40c82a:	js     0x40c80c
  40c82c:	sbb    ebx,DWORD PTR [ebp+0x30]
  40c82f:	rcl    DWORD PTR [esi-0x5e],cl
  40c832:	je     0x40c81b
  40c834:	mov    eax,ds:0x75f49424
  40c839:	cdq    
  40c83a:	dec    ebp
  40c83b:	scas   al,BYTE PTR es:[edi]
  40c83c:	fild   QWORD PTR [edi+eax*4]
  40c83f:	inc    eax
  40c840:	mov    esi,0x2e6cef27
  40c845:	mov    cl,0x4a
  40c847:	sub    eax,0x4690e87a
  40c84c:	sbb    DWORD PTR [edx],ebp
  40c84e:	cli    
  40c84f:	lods   al,BYTE PTR ds:[esi]
  40c850:	mov    ebx,0x6813e0a8
  40c855:	call   0xcb65:0xde64dd3e
  40c85c:	(bad)  
  40c85d:	push   eax
  40c85e:	inc    ecx
  40c85f:	das    
  40c860:	repz pop es
  40c862:	rep outs dx,BYTE PTR ds:[esi]
  40c864:	ins    BYTE PTR es:[edi],dx
  40c865:	inc    ebx
  40c866:	test   al,0x1a
  40c868:	cwde   
  40c869:	into   
  40c86a:	push   ebx
  40c86b:	sbb    eax,DWORD PTR [ecx-0x7e]
  40c86e:	cmp    ebx,esi
  40c870:	and    ah,bl
  40c872:	imul   edx,DWORD PTR [edi],0xdee8e657
  40c878:	lods   al,BYTE PTR ds:[esi]
  40c879:	jbe    0x40c813
  40c87b:	push   0x0
  40c87d:	dec    ecx
  40c87e:	(bad)  
  40c87f:	fsubr  DWORD PTR [esi-0x31]
  40c882:	test   DWORD PTR [edi-0x7c5ee669],ebx
  40c888:	mov    al,ds:0xd4f1fd76
  40c88d:	aaa    
  40c88e:	hlt    
  40c88f:	div    BYTE PTR [ebx-0xa]
  40c892:	loop   0x40c82e
  40c894:	pushf  
  40c895:	ja     0x40c8ac
  40c897:	and    eax,0xa0c698c
  40c89c:	inc    ecx
  40c89d:	in     al,dx
  40c89e:	dec    eax
  40c89f:	(bad)  
  40c8a0:	cmp    eax,0x4bc53d5d
  40c8a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8a6:	mov    ebp,0xcca8c482
  40c8ab:	dec    esi
  40c8ac:	std    
  40c8ad:	xor    eax,0x173c2de9
  40c8b2:	cli    
  40c8b3:	push   edx
  40c8b4:	ja     0x40c8ae
  40c8b6:	jmp    0x40c897
  40c8b8:	adc    eax,edx
  40c8ba:	push   edx
  40c8bb:	add    DWORD PTR [ecx+ebx*4+0x35],esp
  40c8bf:	sub    al,0x5c
  40c8c1:	and    eax,0xe0d58c10
  40c8c6:	jecxz  0x40c8c0
  40c8c8:	out    dx,al
  40c8c9:	adc    BYTE PTR [esi-0x66f76587],cl
  40c8cf:	data16 daa 
  40c8d1:	fisttp QWORD PTR [eax+ebx*8-0x4]
  40c8d5:	xor    BYTE PTR [edx+0x2f27e891],ah
  40c8db:	mov    dh,0xc8
  40c8dd:	mov    eax,ds:0xb9f6ba05
  40c8e2:	mov    ds:0x3e7bf9e4,eax
  40c8e7:	out    dx,eax
  40c8e8:	sub    BYTE PTR [edx],0x88
  40c8eb:	(bad)  
  40c8ec:	jb     0x40c94f
  40c8ee:	sbb    BYTE PTR [ebx+esi*8-0x36cf00fb],al
  40c8f5:	jge    0x40c87e
  40c8f7:	xchg   edx,eax
  40c8f8:	xor    al,0xea
  40c8fa:	cmp    esi,esi
  40c8fc:	sbb    ebx,ebx
  40c8fe:	out    dx,eax
  40c8ff:	push   ds
  40c900:	xchg   ecx,eax
  40c901:	sub    bh,bl
  40c903:	arpl   WORD PTR ds:0xb333d43,bx
  40c909:	dec    ecx
  40c90a:	das    
  40c90b:	daa    
  40c90c:	test   DWORD PTR [esi-0x4e8d5d6b],ebp
  40c912:	(bad)  
  40c913:	call   0xe585:0x702532ad
  40c91a:	mov    BYTE PTR [ecx-0x9a2b5bd],bh
  40c920:	push   ecx
  40c921:	sbb    esp,DWORD PTR [edx]
  40c923:	push   ds
  40c924:	lods   eax,DWORD PTR ds:[esi]
  40c925:	xchg   ebp,eax
  40c926:	pop    edx
  40c927:	dec    esp
  40c928:	inc    eax
  40c929:	push   ebp
  40c92a:	cmovg  ebx,DWORD PTR [ebp-0x37]
  40c92e:	xchg   edi,eax
  40c92f:	jl     0x40c955
  40c931:	mov    DWORD PTR [ebp-0x94f63ab],edx
  40c937:	leave  
  40c938:	(bad)  
  40c939:	jle    0x40c8f6
  40c93b:	das    
  40c93c:	lds    edi,FWORD PTR [edx-0x25]
  40c93f:	or     DWORD PTR [edi+0x71],ecx
  40c942:	fidiv  DWORD PTR [edi-0x1a24a601]
  40c948:	mov    bl,0x6
  40c94a:	in     al,dx
  40c94b:	xchg   ebx,eax
  40c94c:	pop    esi
  40c94d:	jmp    0xd898c047
  40c952:	mov    al,ds:0x48d6ef7a
  40c957:	push   edi
  40c958:	cmp    bh,BYTE PTR [ecx+0xe]
  40c95b:	shl    DWORD PTR [esi],1
  40c95d:	cmp    DWORD PTR [ebx-0x39],ebp
  40c960:	inc    ebp
  40c961:	clc    
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0x14ced55d]
  40d00c:	(bad)  
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	inc    edx
  40d016:	jle    0x40d023
  40d018:	sbb    BYTE PTR [edi-0x71c03ae3],al
  40d01e:	ror    DWORD PTR [eax-0x4cc64b16],cl
  40d024:	enter  0x9f7a,0xa4
  40d028:	mov    ebx,0xb89b18a4
  40d02d:	add    dh,BYTE PTR [edi+0x7c]
  40d030:	sahf   
  40d031:	nop
  40d032:	aaa    
  40d033:	pop    esp
  40d034:	inc    edi
  40d035:	sub    eax,DWORD PTR [eax]
  40d037:	xor    bh,bl
  40d039:	dec    eax
  40d03a:	and    eax,0xc6f27de1
  40d03f:	push   cs
  40d040:	pop    ebx
  40d041:	sub    al,0xbb
  40d043:	test   DWORD PTR [eax-0x5b],esp
  40d046:	pushf  
  40d047:	xchg   edi,eax
  40d048:	in     al,0x6d
  40d04a:	aas    
  40d04b:	mov    dh,0x87
  40d04d:	jne    0x40d049
  40d04f:	mov    ah,0x70
  40d051:	pop    es
  40d052:	jmp    0x28587de5
  40d057:	or     BYTE PTR [edx+0x38],ch
  40d05a:	bound  eax,QWORD PTR [ebx+0x4973c16d]
  40d060:	mov    esp,0x55acafb2
  40d065:	shl    DWORD PTR [edx-0x6195fa46],0x3d
  40d06c:	sbb    al,0x1e
  40d06e:	mov    ds:0x9ccd4f58,al
  40d073:	inc    ebp
  40d074:	ret    0x5193
  40d077:	retf   
  40d078:	push   0x9a6e5a91
  40d07d:	cmc    
  40d07e:	xchg   esp,eax
  40d07f:	sub    al,dl
  40d081:	add    DWORD PTR [ecx+0x71047ea3],esi
  40d087:	ret    0x8824
  40d08a:	or     eax,0x7b401d84
  40d08f:	or     DWORD PTR [edx+0x56],eax
  40d092:	xchg   edi,eax
  40d093:	fwait
  40d094:	rcl    BYTE PTR [ecx+esi*2-0xd],0xcd
  40d099:	int3   
  40d09a:	adc    eax,0xcb5381b
  40d09f:	xchg   esi,eax
  40d0a0:	sbb    BYTE PTR [ebp-0x6e],al
  40d0a3:	mov    DWORD PTR [eax],ebp
  40d0a5:	mov    dl,0x17
  40d0a7:	jns    0x40d08e
  40d0a9:	adc    eax,0xb7bb4b34
  40d0ae:	loopne 0x40d054
  40d0b0:	pop    edx
  40d0b1:	jo     0x40d124
  40d0b3:	jp     0x40d101
  40d0b5:	ja     0x40d0e4
  40d0b7:	shr    DWORD PTR [edx],cl
  40d0b9:	or     bh,BYTE PTR [ebp+0x261f9d59]
  40d0bf:	jp     0x40d0c4
  40d0c1:	fsubr  st(7),st
  40d0c3:	loop   0x40d08c
  40d0c5:	inc    ebx
  40d0c6:	pop    esi
  40d0c7:	xor    BYTE PTR gs:[ebx+0x30],ch
  40d0cb:	scas   eax,DWORD PTR es:[edi]
  40d0cc:	push   ecx
  40d0cd:	adc    edx,DWORD PTR [eax-0x521bbf07]
  40d0d3:	rol    BYTE PTR [edi],1
  40d0d5:	pop    esi
  40d0d6:	imul   edx,DWORD PTR [edi+0x76],0x3e
  40d0da:	icebp  
  40d0db:	test   eax,0xe355220d
  40d0e0:	aas    
  40d0e1:	adc    al,0x18
  40d0e3:	stos   DWORD PTR es:[edi],eax
  40d0e4:	xlat   BYTE PTR ds:[ebx]
  40d0e5:	pushf  
  40d0e6:	push   es
  40d0e7:	mov    esi,0xd9463ec
  40d0ec:	mov    ebp,es
  40d0ee:	mov    cl,0x8d
  40d0f0:	aad    0xaa
  40d0f2:	test   BYTE PTR [esi],bl
  40d0f4:	adc    eax,0xe0f707ba
  40d0f9:	pop    esi
  40d0fa:	xor    DWORD PTR [edi+0x38],edi
  40d0fd:	jnp    0x40d0d2
  40d0ff:	test   al,0xe8
  40d101:	adc    al,0xcc
  40d103:	sbb    DWORD PTR [edi-0x543ac620],ebx
  40d109:	and    al,0x23
  40d10b:	leave  
  40d10c:	out    dx,eax
  40d10d:	adc    DWORD PTR [edx-0xcd30d23],ebx
  40d113:	ror    dh,cl
  40d115:	iret   
  40d116:	rol    BYTE PTR [eax+0x2cd42568],0xa3
  40d11d:	in     al,dx
  40d11e:	in     eax,dx
  40d11f:	xor    ebx,DWORD PTR [esi+0x4ce64572]
  40d125:	enter  0x741f,0xa6
  40d129:	push   cs
  40d12a:	mov    cl,BYTE PTR [esi+0x5f]
  40d12d:	(bad)  
  40d12f:	xor    edx,edx
  40d131:	mov    BYTE PTR [ebx-0x52],bh
  40d134:	sahf   
  40d135:	jge    0x40d17b
  40d137:	push   ecx
  40d138:	cmp    DWORD PTR [edx],esp
  40d13a:	je     0x40d1aa
  40d13c:	cld    
  40d13d:	adc    ebp,ebp
  40d13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d140:	and    eax,0xecb1f5ec
  40d145:	leave  
  40d146:	xor    edx,eax
  40d148:	fsub   st(5),st
  40d14a:	sahf   
  40d14b:	ss inc eax
  40d14d:	in     eax,0x71
  40d14f:	out    0x3d,al
  40d151:	(bad)  
  40d154:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40d156:	icebp  
  40d157:	push   eax
  40d158:	fsubr  st(6),st
  40d15a:	leave  
  40d15b:	pushf  
  40d15c:	nop
  40d15d:	loop   0x40d12e
  40d15f:	inc    esp
  40d160:	jg     0x40d180
  40d162:	pop    esi
  40d163:	or     edi,DWORD PTR [ecx]
  40d165:	pop    edx
  40d166:	stos   DWORD PTR es:[edi],eax
  40d167:	dec    ebp
  40d168:	into   
  40d169:	rol    BYTE PTR [ebp+eax*4+0x34],1
  40d16d:	dec    ebx
  40d16e:	and    bl,bh
  40d170:	mov    ?,WORD PTR [ebx]
  40d172:	jmp    0xc8f0b246
  40d177:	(bad)  [ecx+edi*2-0x11]
  40d17b:	and    DWORD PTR [eax],edi
  40d17d:	sahf   
  40d17e:	pop    eax
  40d17f:	pop    edx
  40d180:	mov    ds:0x682c1b0,al
  40d185:	jg     0x40d15f
  40d187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d188:	adc    al,0x60
  40d18a:	xor    eax,edi
  40d18c:	mov    ds:0xa44816c9,eax
  40d191:	fwait
  40d192:	lds    esi,FWORD PTR [ecx]
  40d194:	xchg   ebp,eax
  40d195:	push   edx
  40d196:	out    dx,eax
  40d197:	xor    ebx,DWORD PTR [ebp-0x237c993c]
  40d19d:	push   ss
  40d19e:	jge    0x40d19b
  40d1a0:	mov    ds:0xd50941da,al
  40d1a5:	add    BYTE PTR [ecx-0x43],dh
  40d1a8:	bound  eax,QWORD PTR [esp+ebx*1]
  40d1ab:	dec    esp
  40d1ac:	js     0x40d134
  40d1ae:	cmp    al,0x29
  40d1b0:	and    al,BYTE PTR [ebx+0x489e40ac]
  40d1b6:	mov    eax,0xefb036a4
  40d1bb:	(bad)  
  40d1bc:	loop   0x40d23a
  40d1be:	add    BYTE PTR [esi-0x2d],dh
  40d1c1:	adc    al,BYTE PTR [ebx-0x64ab545c]
  40d1c7:	cwde   
  40d1c8:	lahf   
  40d1c9:	dec    esi
  40d1ca:	sbb    al,0x1e
  40d1cc:	in     al,0xf3
  40d1ce:	jnp    0x40d234
  40d1d0:	mov    dh,0x39
  40d1d2:	repnz cmp esp,ebx
  40d1d5:	sbb    eax,0xc18ab31a
  40d1da:	mov    ds:0x635cff67,al
  40d1df:	xor    eax,0x694d507d
  40d1e4:	jg     0x40d253
  40d1e6:	sbb    ch,BYTE PTR [ebx-0x50]
  40d1e9:	aad    0x8f
  40d1eb:	aas    
  40d1ec:	loopne 0x40d1f8
  40d1ee:	(bad)
  40d1f1:	in     al,0x75
  40d1f3:	leave  
  40d1f4:	ret    0x3eaa
  40d1f7:	or     BYTE PTR [esi+esi*4],cl
  40d1fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1fb:	xor    al,0x25
  40d1fd:	ret    
  40d1fe:	jbe    0x40d250
  40d200:	mov    ebp,0x13fa49b1
  40d206:	sbb    al,0xe8
  40d208:	stos   BYTE PTR es:[edi],al
  40d209:	jle    0x40d1b0
  40d20b:	inc    ebx
  40d20c:	mov    dl,0x69
  40d20e:	push   esi
  40d20f:	xchg   ah,bh
  40d211:	and    eax,0x839b3950
  40d216:	popa   
  40d217:	imul   edx,DWORD PTR [ecx],0x26
  40d21a:	inc    ecx
  40d21b:	jno    0x40d1dd
  40d21d:	shl    BYTE PTR [eax+ecx*1-0x58],0x32
  40d222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d223:	push   es
  40d224:	dec    edx
  40d225:	jnp    0x40d1b9
  40d227:	stos   DWORD PTR es:[edi],eax
  40d228:	push   ss
  40d229:	ret    0xda90
  40d22c:	push   0x7b
  40d22e:	div    DWORD PTR [ebx]
  40d230:	loope  0x40d29f
  40d232:	(bad)  
  40d233:	lods   al,BYTE PTR ds:[esi]
  40d234:	aad    0x99
  40d236:	test   ebx,eax
  40d238:	xor    dh,BYTE PTR [edi]
  40d23a:	data16 sbb BYTE PTR [ebp+ebp*8+0x5aba35d7],ah
  40d242:	in     al,dx
  40d243:	cdq    
  40d244:	dec    edi
  40d245:	xor    bh,ah
  40d247:	fwait
  40d248:	adc    eax,0xfecdbb68
  40d24d:	test   DWORD PTR [ebp+0x3409e999],0x960d499
  40d257:	push   ds
  40d258:	sbb    edx,DWORD PTR ds:0xb2a46faa
  40d25e:	stc    
  40d25f:	stos   DWORD PTR es:[edi],eax
  40d260:	enter  0x8ac4,0x5
  40d264:	push   ebp
  40d265:	fiadd  WORD PTR [edi+0x5c]
  40d268:	iret   
  40d269:	pop    ss
  40d26a:	sti    
  40d26b:	out    0x18,eax
  40d26d:	out    0x6d,eax
  40d26f:	cs xchg bh,dl
  40d272:	sahf   
  40d273:	jmp    0x40d2dd
  40d275:	and    dl,BYTE PTR [ebx]
  40d277:	xchg   ebp,eax
  40d278:	xor    DWORD PTR [ecx],eax
  40d27a:	add    eax,DWORD PTR [edi+0x413f5ae5]
  40d280:	mov    ah,0xa4
  40d282:	test   BYTE PTR [ecx-0x1c],al
  40d285:	and    al,0xf1
  40d287:	fcomip st,st(7)
  40d289:	cld    
  40d28a:	push   0x10
  40d28c:	add    DWORD PTR [edi],ecx
  40d28e:	mul    BYTE PTR [ebx-0x19d97897]
  40d294:	hlt    
  40d295:	and    ebx,DWORD PTR [ebx+0x23]
  40d298:	push   edx
  40d299:	(bad)  
  40d29a:	xor    edi,DWORD PTR [edi+0x44a162bf]
  40d2a0:	das    
  40d2a1:	add    eax,0xeac57ef9
  40d2a6:	mov    ebp,0x67b7f2ee
  40d2ab:	xchg   ebx,eax
  40d2ac:	int3   
  40d2ad:	cmc    
  40d2ae:	and    eax,0x788759b7
  40d2b3:	add    edi,DWORD PTR [ebx-0x2e]
  40d2b6:	and    edx,esi
  40d2b8:	add    ebp,0xa735d5dc
  40d2be:	or     eax,0x51ba25a4
  40d2c3:	add    DWORD PTR [ebx-0x36],edi
  40d2c6:	test   eax,0xa7f38680
  40d2cb:	mov    dl,0x34
  40d2cd:	pop    ebp
  40d2ce:	mov    eax,0x55d8acaf
  40d2d3:	repz push ebp
  40d2d6:	sub    bh,BYTE PTR [ebx-0x72]
  40d2d9:	adc    bl,BYTE PTR [ebx+0x2b7d4ec2]
  40d2df:	xchg   esi,eax
  40d2e0:	nop
  40d2e1:	rol    DWORD PTR [edx-0x5c],cl
  40d2e4:	sahf   
  40d2e5:	xlat   BYTE PTR ds:[ebx]
  40d2e6:	push   0xffffffc3
  40d2e8:	das    
  40d2e9:	jne    0x40d365
  40d2eb:	call   0x599023b4
  40d2f0:	ins    BYTE PTR es:[edi],dx
  40d2f1:	jle    0x40d322
  40d2f3:	dec    edx
  40d2f5:	xchg   si,ax
  40d2f7:	mov    bh,0x34
  40d2f9:	retf   
  40d2fa:	(bad)  
  40d2fb:	jmp    0x55fea6ae
  40d300:	jb     0x40d2d2
  40d302:	(bad)  
  40d303:	mov    al,0xa1
  40d305:	jae    0x40d31d
  40d307:	clc    
  40d308:	mov    bl,ch
  40d30a:	(bad)  
  40d30b:	cmc    
  40d30c:	stc    
  40d30d:	sbb    DWORD PTR [eax+ecx*1+0x72d26292],0x6e
  40d315:	xchg   ebx,eax
  40d316:	test   DWORD PTR [eax],edx
  40d318:	jecxz  0x40d35e
  40d31a:	lods   eax,DWORD PTR ss:[esi]
  40d31c:	test   al,0xa
  40d31e:	sub    BYTE PTR [edi-0x48],cl
  40d321:	pop    esp
  40d322:	dec    eax
  40d323:	cdq    
  40d324:	sbb    DWORD PTR ds:[edx+0x5e],0x5f
  40d329:	jmp    0x40d2f8
  40d32b:	pop    esp
  40d32c:	std    
  40d32d:	xchg   ebx,eax
  40d32e:	(bad)  
  40d32f:	xlat   BYTE PTR ds:[ebx]
  40d330:	pop    eax
  40d331:	cmp    eax,0x7a9823a
  40d336:	nop
  40d337:	xchg   BYTE PTR [eax+esi*4-0x75505cb],ch
  40d33e:	mov    al,ds:0x5b43b29d
  40d343:	sbb    DWORD PTR [eax],edx
  40d345:	popf   
  40d346:	pop    es
  40d347:	addr16 xchg edi,eax
  40d349:	js     0x40d3be
  40d34b:	bound  esp,QWORD PTR [eax-0x5c37563a]
  40d351:	xchg   edi,eax
  40d352:	daa    
  40d353:	ret    0xc25c
  40d356:	sbb    eax,0xa1557db7
  40d35b:	lds    ebx,FWORD PTR [ecx+edi*2-0x52ea03ac]
  40d362:	adc    DWORD PTR [ebx+0x7a0b40fa],eax
  40d368:	cmp    ah,BYTE PTR [edi+eiz*4-0x4c8b63d2]
  40d36f:	pop    es
  40d370:	xchg   edx,eax
  40d371:	push   edx
  40d372:	push   ebp
  40d373:	jns    0x40d3b7
  40d375:	std    
  40d376:	sbb    dh,BYTE PTR [esp+eax*2]
  40d379:	xor    al,0x0
  40d37b:	shr    BYTE PTR [ecx],cl
  40d37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d37e:	jecxz  0x40d3ca
  40d380:	sahf   
  40d381:	(bad)  
  40d382:	and    eax,DWORD PTR [ebx+edi*8+0x5cf31f00]
  40d389:	ss xor eax,0x7f8e69b5
  40d38f:	adc    al,0xd5
  40d391:	dec    ebx
  40d392:	mov    bh,BYTE PTR [esi-0x46]
  40d395:	lock imul ebp,DWORD PTR [ebp-0x54],0xfffffff2
  40d39a:	dec    ecx
  40d39b:	cli    
  40d39c:	xor    ch,BYTE PTR [edx+0x53]
  40d39f:	in     al,0x78
  40d3a1:	popf   
  40d3a2:	and    edx,esi
  40d3a4:	aam    0x80
  40d3a6:	mov    ebx,0x109e470f
  40d3ab:	inc    esp
  40d3ac:	mov    al,0x63
  40d3ae:	scas   al,BYTE PTR es:[edi]
  40d3af:	gs scas al,BYTE PTR es:[edi]
  40d3b1:	pop    edi
  40d3b2:	dec    eax
  40d3b3:	adc    edi,esp
  40d3b5:	adc    al,0xb8
  40d3b7:	(bad)  
  40d3b8:	js     0x40d34d
  40d3ba:	push   cs
  40d3bb:	push   cs
  40d3bc:	jp     0x40d362
  40d3be:	test   DWORD PTR [edx-0xec3a3ec],esi
  40d3c4:	mov    WORD PTR [edx+0x57b9ddff],ss
  40d3ca:	fabs   
  40d3cc:	xchg   DWORD PTR [edx-0x10],edi
  40d3cf:	inc    eax
  40d3d0:	scas   eax,DWORD PTR es:[edi]
  40d3d1:	test   DWORD PTR [ecx],esi
  40d3d3:	dec    esp
  40d3d4:	sub    eax,0x47f54864
  40d3d9:	stos   DWORD PTR es:[edi],eax
  40d3da:	int    0x65
  40d3dc:	mov    ecx,0xf74a2cf1
  40d3e1:	add    DWORD PTR [edi+edx*2],esi
  40d3e4:	inc    edi
  40d3e6:	sbb    al,0x50
  40d3e8:	repnz sbb bh,dl
  40d3eb:	cmp    bh,0x60
  40d3ee:	int    0x20
  40d3f0:	cmp    BYTE PTR [edx-0x7050a551],bh
  40d3f6:	(bad)  
  40d3f7:	mov    ebx,0x232d96e7
  40d3fc:	outs   dx,BYTE PTR ds:[esi]
  40d3fd:	jge    0x40d3d6
  40d3ff:	pushf  
  40d400:	and    BYTE PTR ds:0x11208578,cl
  40d406:	dec    ecx
  40d407:	pop    ss
  40d408:	sub    eax,0xbaf85020
  40d40d:	pop    ss
  40d40e:	and    al,0xb5
  40d410:	ret    
  40d411:	out    dx,eax
  40d412:	not    BYTE PTR [esi]
  40d414:	sbb    al,0x0
  40d416:	loop   0x40d413
  40d418:	rcl    DWORD PTR [edx],0xd0
  40d41b:	sbb    al,0xcb
  40d41d:	inc    ebp
  40d41e:	ret    0xba04
  40d421:	or     eax,0x544237b5
  40d426:	rcl    BYTE PTR [edx+0x76],cl
  40d429:	jmp    0x88e0:0x3d5d6859
  40d430:	mov    edi,0x61027509
  40d435:	sbb    al,0x8e
  40d437:	push   ss
  40d438:	arpl   bx,bx
  40d43a:	data16 (bad) 
  40d43c:	int    0x0
  40d43e:	push   cs
  40d43f:	pop    es
  40d440:	fld    QWORD PTR [ecx+0x61]
  40d443:	mov    eax,ds:0xc0a47edd
  40d448:	jmp    0x1f9dfd9c
  40d44d:	outs   dx,DWORD PTR ds:[esi]
  40d44e:	fcmovne st,st(0)
  40d450:	jmp    0x40d3e8
  40d452:	pop    ebx
  40d453:	and    esi,ecx
  40d455:	pop    ecx
  40d456:	add    esp,DWORD PTR [ecx+ecx*8-0x4603233f]
  40d45d:	mov    al,0x77
  40d45f:	leave  
  40d460:	jo     0x40d4a2
  40d462:	das    
  40d463:	add    bh,dh
  40d465:	fwait
  40d466:	outs   dx,DWORD PTR ds:[esi]
  40d467:	jbe    0x40d3f1
  40d469:	xchg   ecx,eax
  40d46a:	mov    cl,0xe9
  40d46c:	(bad)  
  40d46d:	sub    DWORD PTR [edx],ebx
  40d46f:	jmp    0x3dbb7655
  40d474:	mov    ch,BYTE PTR ds:0x50bf578
  40d47a:	mov    ebp,eax
  40d47c:	loopne 0x40d4f7
  40d47e:	dec    ebx
  40d47f:	cwde   
  40d480:	scas   eax,DWORD PTR es:[edi]
  40d481:	dec    ebx
  40d482:	cmp    ecx,DWORD PTR [ebx+esi*8-0x42e7362f]
  40d489:	js     0x40d4ad
  40d48b:	cmp    BYTE PTR [ebp+0x2271dca1],ch
  40d491:	mov    gs,WORD PTR [esp+edx*2]
  40d494:	mov    ds:0x87891b25,al
  40d499:	sub    eax,0x4d43fb6a
  40d49e:	sub    DWORD PTR [ecx+edi*8],eax
  40d4a1:	cs jnp 0x40d4a0
  40d4a4:	(bad)  
  40d4a6:	scas   eax,DWORD PTR es:[edi]
  40d4a7:	not    DWORD PTR [ebp-0x12]
  40d4aa:	jle    0x40d4c5
  40d4ac:	or     DWORD PTR [eiz*2+0x9881978],ebp
  40d4b3:	mov    al,ds:0x5385b129
  40d4b8:	cmp    DWORD PTR [edi+0x3d],ecx
  40d4bb:	loope  0x40d481
  40d4bd:	mov    esi,0x42ca4de2
  40d4c2:	fcmovnbe st,st(0)
  40d4c4:	pop    ecx
  40d4c5:	dec    ebp
  40d4c6:	jo     0x40d4ba
  40d4c8:	mov    dh,0x5d
  40d4ca:	call   0x27c2:0x8401e0f3
  40d4d1:	scas   al,BYTE PTR es:[edi]
  40d4d2:	int3   
  40d4d3:	mov    ah,BYTE PTR [ebx+0xe]
  40d4d6:	cmp    DWORD PTR [esi+ecx*4+0x1d],ecx
  40d4da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4db:	retf   
  40d4dc:	jle    0x40d4cb
  40d4de:	ss mov eax,0xc8a2ab3b
  40d4e4:	stos   BYTE PTR es:[edi],al
  40d4e5:	xchg   ebx,eax
  40d4e6:	mov    ah,0x27
  40d4e8:	dec    ecx
  40d4e9:	pop    ds
  40d4ea:	or     eax,0x8233d90b
  40d4ef:	retf   
  40d4f0:	mov    esp,0x3948cf6c
  40d4f5:	mov    edi,0xeceb6f08
  40d4fa:	push   esp
  40d4fb:	loop   0x40d4ce
  40d4fd:	lods   eax,DWORD PTR ds:[esi]
  40d4fe:	int    0x81
  40d500:	dec    ebp
  40d501:	adc    ecx,esp
  40d503:	pop    edi
  40d504:	(bad)  
  40d506:	mov    ebp,0xc2546023
  40d50b:	jo     0x40d4b0
  40d50d:	bound  edx,QWORD PTR [eax]
  40d50f:	mov    ecx,?
  40d511:	cmovg  edx,DWORD PTR [esi+0x41fddb1a]
  40d518:	push   edi
  40d519:	rcr    BYTE PTR ds:0x6a757a7d,cl
  40d51f:	call   0x7fa28328
  40d524:	push   cs
  40d525:	add    eax,0xa75f98cd
  40d52a:	stos   DWORD PTR es:[edi],eax
  40d52b:	adc    eax,0xcb29568d
  40d530:	lea    edi,[eax+0x1e]
  40d533:	fld    DWORD PTR [ebx-0x129e8242]
  40d539:	ret    0xc9d6
  40d53c:	add    esp,0x6ca91baf
  40d542:	lods   eax,DWORD PTR ds:[esi]
  40d543:	in     al,0x53
  40d545:	dec    esi
  40d546:	xchg   ebp,eax
  40d547:	imul   esi,DWORD PTR [edx],0x9ee53072
  40d54d:	(bad)  
  40d54e:	stc    
  40d54f:	xor    bh,bl
  40d551:	sbb    DWORD PTR [eax],0x45
  40d554:	in     eax,dx
  40d555:	xlat   BYTE PTR es:[ebx]
  40d557:	xor    DWORD PTR [esi],esp
  40d559:	stos   DWORD PTR es:[edi],eax
  40d55a:	jno    0x40d5d8
  40d55c:	out    dx,eax
  40d55d:	imul   ecx,DWORD PTR [eax+0x5d],0x1b625b9a
  40d564:	mov    ds:0xbaf74fde,al
  40d569:	add    cl,dl
  40d56b:	fucomi st,st(1)
  40d56d:	stc    
  40d56e:	jp     0x40d559
  40d570:	jge    0x40d5b5
  40d572:	adc    cl,BYTE PTR [eax+0x12]
  40d575:	mov    ah,0x9d
  40d577:	jbe    0x40d54b
  40d579:	inc    edi
  40d57a:	cld    
  40d57b:	inc    edi
  40d57c:	or     DWORD PTR [ecx-0x55],0xf8ca7a14
  40d583:	test   DWORD PTR [edi],0xe0464e44
  40d589:	add    al,0x23
  40d58b:	xchg   ebp,eax
  40d58c:	mov    ah,0x0
  40d58e:	call   0x8a67:0x78d9aa42
  40d595:	(bad)  
  40d596:	cmp    al,0x23
  40d598:	xchg   edi,eax
  40d599:	push   ss
  40d59a:	lahf   
  40d59b:	add    eax,DWORD PTR [edi]
  40d59d:	fiadd  DWORD PTR [eax+0x4af9ef47]
  40d5a3:	xor    ch,dh
  40d5a5:	inc    eax
  40d5a6:	pop    ecx
  40d5a7:	xchg   DWORD PTR [edi],ebx
  40d5a9:	add    edi,edi
  40d5ab:	xor    edi,esi
  40d5ad:	sbb    ch,BYTE PTR [eax-0x1d]
  40d5b0:	enter  0xe789,0xca
  40d5b4:	loope  0x40d5e0
  40d5b6:	adc    al,0x5e
  40d5b8:	ds loop 0x40d5b4
  40d5bb:	js     0x40d589
  40d5bd:	sbb    edi,edi
  40d5bf:	pop    esp
  40d5c0:	addr16 nop
  40d5c2:	xor    al,0xd9
  40d5c4:	retf   
  40d5c5:	fisub  DWORD PTR [edx+0x10]
  40d5c8:	test   DWORD PTR [ebp-0xc],esi
  40d5cb:	in     al,dx
  40d5cc:	mov    eax,ds:0x3ba7712c
  40d5d1:	dec    edi
  40d5d2:	mov    BYTE PTR [ebp-0x67],bl
  40d5d5:	mov    BYTE PTR [esi],0xda
  40d5d8:	jge    0x40d5f0
  40d5da:	aas    
  40d5db:	xor    ah,dl
  40d5dd:	cmc    
  40d5de:	cs hlt 
  40d5e0:	and    esi,ecx
  40d5e2:	mov    esi,0x7f8ed185
  40d5e7:	les    edi,FWORD PTR [edi-0x6605260d]
  40d5ed:	mov    ds:0x8a743ddb,eax
  40d5f2:	mov    ebp,0x37ffd948
  40d5f7:	mov    ebp,ds
  40d5f9:	or     bh,bl
  40d5fb:	pop    edi
  40d5fc:	clc    
  40d5fd:	gs pop ss
  40d5ff:	icebp  
  40d600:	push   ebp
  40d601:	pop    ebx
  40d602:	js     0x40d649
  40d604:	jnp    0x40d634
  40d606:	mov    edx,0x4a79044b
  40d60b:	in     al,0xc
  40d60d:	sub    bh,BYTE PTR [ebp+0x2801714a]
  40d613:	dec    ebx
  40d614:	aaa    
  40d615:	jmp    0x1d44:0x776d7af3
  40d61c:	sbb    BYTE PTR [edi],dh
  40d61e:	out    0x56,eax
  40d620:	push   ecx
  40d621:	add    dh,dl
  40d623:	mul    DWORD PTR [ecx-0x67f0f500]
  40d629:	push   esi
  40d62a:	pusha  
  40d62b:	ja     0x40d5c7
  40d62d:	sti    
  40d62e:	dec    edx
  40d62f:	pop    edi
  40d630:	fdivr  st(2),st
  40d632:	je     0x40d60a
  40d634:	sub    DWORD PTR [edx+edi*1],ebp
  40d637:	mov    edx,0x26821e4c
  40d63c:	(bad)  [esi+ebp*4+0x2807c17b]
  40d643:	stos   BYTE PTR es:[edi],al
  40d644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d646:	mov    al,0x4f
  40d648:	pop    DWORD PTR [edi]
  40d64a:	jno    0x40d694
  40d64c:	add    esp,edx
  40d64e:	push   ebx
  40d64f:	xchg   edx,eax
  40d650:	iret   
  40d651:	icebp  
  40d652:	or     bl,dh
  40d654:	pop    esi
  40d655:	or     ch,BYTE PTR [eax-0x27]
  40d658:	inc    ecx
  40d659:	inc    esp
  40d65a:	mov    eax,ds:0x173bbd90
  40d65f:	jb     0x40d6a7
  40d661:	add    dl,dl
  40d663:	push   esi
  40d664:	enter  0x269e,0x27
  40d668:	mov    ecx,0xfba3f0df
  40d66d:	add    eax,0x49c683eb
  40d672:	ins    DWORD PTR es:[edi],dx
  40d673:	fs sub edx,esi
  40d676:	cdq    
  40d677:	mov    bh,0xd9
  40d679:	into   
  40d67a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d67b:	scas   al,BYTE PTR es:[edi]
  40d67c:	xor    BYTE PTR [eax],ah
  40d67e:	sbb    eax,DWORD PTR [ebx+esi*4]
  40d681:	dec    eax
  40d682:	pop    edx
  40d683:	les    esi,FWORD PTR [edx]
  40d685:	sbb    eax,0x3d8ad72f
  40d68a:	sub    eax,0x9477d6c9
  40d68f:	scas   al,BYTE PTR es:[edi]
  40d690:	jbe    0x40d6b2
  40d692:	dec    esi
  40d693:	sbb    al,0xf1
  40d695:	call   0x2588:0xa9f51b2a
  40d69c:	jb     0x40d6b1
  40d69e:	cmp    edi,DWORD PTR [edi-0x35448e56]
  40d6a4:	xor    cl,dl
  40d6a6:	mov    ah,0xf6
  40d6a8:	fdiv   DWORD PTR [ebx+0x64a487e3]
  40d6ae:	popf   
  40d6af:	adc    ch,BYTE PTR [ecx+edi*2+0x54]
  40d6b3:	lock sbb cl,BYTE PTR [esp+ebp*1+0x42]
  40d6b8:	sbb    al,0xb
  40d6ba:	rcr    edi,1
  40d6bc:	jb     0x40d6cf
  40d6be:	(bad)  
  40d6bf:	out    dx,eax
  40d6c0:	lock jl 0x40d646
  40d6c3:	push   ecx
  40d6c4:	nop
  40d6c5:	aas    
  40d6c6:	mov    ch,0x11
  40d6c8:	dec    edx
  40d6c9:	aam    0xa
  40d6cb:	push   0xfffffffc
  40d6cd:	outs   dx,DWORD PTR ds:[esi]
  40d6ce:	ss sbb al,0xe3
  40d6d1:	out    0x2,al
  40d6d3:	cwde   
  40d6d4:	xchg   ecx,eax
  40d6d5:	dec    ebp
  40d6d6:	adc    ebp,DWORD PTR [ebx]
  40d6d8:	add    dl,BYTE PTR [ebx]
  40d6da:	(bad)  [esi+edx*4]
  40d6dd:	mov    ecx,0xb9b4086d
  40d6e2:	mov    ds:0x18a40318,eax
  40d6e7:	call   0x97b84f21
  40d6ec:	sahf   
  40d6ed:	repnz repz cmp eax,0x86cb5572
  40d6f4:	or     DWORD PTR [ecx+0x4bb158d3],esi
  40d6fa:	xchg   ebx,eax
  40d6fb:	add    dl,0x50
  40d6fe:	(bad)  
  40d6ff:	push   0x47f7342
  40d704:	sub    DWORD PTR [esi-0x3151bd09],0x6
  40d70b:	or     al,0x43
  40d70d:	cli    
  40d70e:	or     DWORD PTR [edx-0x3c],ebx
  40d711:	jp     0x40d709
  40d713:	and    DWORD PTR [edx-0x537a4917],edx
  40d719:	cld    
  40d71a:	das    
  40d71b:	jno    0x40d6ba
  40d71d:	fadd   DWORD PTR [eax]
  40d71f:	outs   dx,DWORD PTR ds:[esi]
  40d720:	jecxz  0x40d6c4
  40d722:	out    0xcc,eax
  40d724:	loope  0x40d794
  40d726:	sbb    al,0x27
  40d728:	mov    dl,0xe4
  40d72a:	jns    0x40d75c
  40d72c:	jne    0x40d6c0
  40d72e:	pop    ecx
  40d72f:	ror    DWORD PTR [ebp+0x32],cl
  40d732:	push   0xffffffdb
  40d734:	or     DWORD PTR [esp+eax*4-0x6702ed8e],0xffffff82
  40d73c:	dec    esp
  40d73d:	pop    ds
  40d73e:	fnstenv [edi-0x59caf9af]
  40d744:	mov    ebx,0x1c553cae
  40d749:	mov    edi,0x57642039
  40d74e:	je     0x40d70f
  40d750:	add    cl,ch
  40d752:	cmp    al,0x2c
  40d754:	mov    bl,0x0
  40d756:	dec    ebx
  40d757:	sub    DWORD PTR [edx+0xb],edx
  40d75a:	mov    ah,0xf0
  40d75c:	push   ebp
  40d75d:	xchg   BYTE PTR [ebp-0x3d958f33],dh
  40d763:	addr16 mov edi,0x46c1c533
  40d769:	push   ds
  40d76a:	cmc    
  40d76b:	(bad)  
  40d76c:	pop    ebx
  40d76d:	or     dl,ah
  40d76f:	rcl    BYTE PTR [esi+0x33],1
  40d772:	mov    al,ds:0x4cab889d
  40d777:	adc    al,BYTE PTR [ebp-0x1fbb848a]
  40d77d:	dec    edx
  40d77e:	shl    DWORD PTR [edi],1
  40d780:	imul   ecx,DWORD PTR [edx],0x8024825c
  40d786:	xchg   ebx,eax
  40d787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d788:	daa    
  40d789:	out    dx,eax
  40d78a:	sbb    ah,BYTE PTR [edx+0x7a]
  40d78d:	sub    eax,0x37857d81
  40d792:	shr    DWORD PTR [ebp+0x635826e9],cl
  40d798:	add    ebx,edi
  40d79a:	or     al,dl
  40d79c:	lahf   
  40d79d:	sub    bh,0x2e
  40d7a0:	fiadd  DWORD PTR [ebx-0x3f]
  40d7a3:	pop    edx
  40d7a4:	inc    ebx
  40d7a5:	inc    ebp
  40d7a6:	jb     0x40d76b
  40d7a8:	inc    edx
  40d7a9:	int    0xd3
  40d7ab:	push   eax
  40d7ac:	xor    al,0xac
  40d7ae:	fld    QWORD PTR [edi-0x2]
  40d7b1:	and    ebp,0xffffffdb
  40d7b4:	cwde   
  40d7b5:	repz enter 0x8ee5,0xf2
  40d7ba:	repz fimul DWORD PTR [ecx+0x47]
  40d7be:	imul   ebx,ebx,0x6b
  40d7c1:	sub    eax,0xcbe9a33e
  40d7c6:	jnp    0x40d7db
  40d7c8:	sar    BYTE PTR [ebx+0x682c2ce8],cl
  40d7ce:	pop    ebp
  40d7cf:	xchg   ebp,eax
  40d7d0:	aam    0x21
  40d7d2:	xor    BYTE PTR [ebx+ecx*8-0x54],ah
  40d7d6:	push   esi
  40d7d7:	fadd   QWORD PTR [edi+esi*4]
  40d7da:	xor    DWORD PTR [esi-0x77c6aba],esi
  40d7e0:	mov    ebp,0x7b124f5e
  40d7e5:	dec    edi
  40d7e6:	loope  0x40d7de
  40d7e8:	mov    esp,0xf602aaed
  40d7ed:	mov    ch,0xb6
  40d7ef:	stos   DWORD PTR es:[edi],eax
  40d7f0:	mov    ch,0x93
  40d7f2:	xchg   edi,eax
  40d7f3:	mov    bl,0x6e
  40d7f5:	and    DWORD PTR [ebx],edi
  40d7f7:	xor    al,0x66
  40d7f9:	jo     0x40d86f
  40d7fb:	jo     0x40d832
  40d7fd:	fcmovne st,st(2)
  40d7ff:	pop    esi
  40d800:	(bad)  
  40d801:	mov    al,ds:0xafa525c6
  40d806:	rcr    DWORD PTR [ebx+ebx*8+0x21],1
  40d80a:	test   DWORD PTR [eax-0x53],0xf8c15bf0
  40d811:	repnz pop eax
  40d813:	mov    DWORD PTR [esi-0x63],edi
  40d816:	and    cl,al
  40d818:	ror    DWORD PTR [ecx-0xc],1
  40d81b:	data16 (bad) 
  40d81d:	xchg   esi,eax
  40d81e:	stos   BYTE PTR es:[edi],al
  40d81f:	push   0x36
  40d821:	sub    ecx,ebx
  40d823:	sahf   
  40d824:	ins    BYTE PTR es:[edi],dx
  40d825:	push   cs
  40d826:	pop    ebx
  40d827:	sub    ah,BYTE PTR ds:0x2e23471c
  40d82d:	jne    0x40d888
  40d82f:	jo     0x40d86c
  40d831:	daa    
  40d832:	add    eax,0x3bb1572f
  40d837:	xor    DWORD PTR ds:0x9580081a,esi
  40d83d:	pop    ss
  40d83e:	into   
  40d83f:	mov    al,ds:0x53b9f6f3
  40d844:	lahf   
  40d845:	fnstsw WORD PTR [edx-0x7ea2cae7]
  40d84b:	push   ds
  40d84c:	mov    eax,ds:0x78f6a24f
  40d851:	sub    eax,0xe19bbe09
  40d856:	test   eax,0x7d0554da
  40d85b:	dec    ebx
  40d85c:	test   eax,0x8c5f8b75
  40d861:	mov    edi,0x8facb610
  40d866:	push   0xc4c9dab2
  40d86b:	(bad)  
  40d86c:	cmp    ebp,DWORD PTR [esi]
  40d86e:	ja     0x40d8e5
  40d870:	jecxz  0x40d806
  40d872:	and    DWORD PTR [edx+edi*1],ebp
  40d875:	pusha  
  40d876:	adc    ebp,DWORD PTR [ebx+0x7f]
  40d879:	data16 out 0xce,al
  40d87c:	hlt    
  40d87d:	popf   
  40d87e:	jns    0x40d89a
  40d880:	cmc    
  40d881:	in     eax,dx
  40d882:	xchg   ecx,eax
  40d883:	sub    edi,DWORD PTR [ecx+0x62]
  40d886:	lods   eax,DWORD PTR ds:[esi]
  40d887:	mov    bh,BYTE PTR [ebx]
  40d889:	out    dx,eax
  40d88a:	adc    al,BYTE PTR [edx]
  40d88c:	xchg   esi,eax
  40d88d:	cmp    BYTE PTR [eax-0x6b],dl
  40d890:	lods   eax,DWORD PTR ds:[esi]
  40d891:	scas   eax,DWORD PTR es:[edi]
  40d892:	adc    al,0xe0
  40d894:	inc    ebx
  40d895:	fdivr  QWORD PTR [esp+ecx*8+0x15c0c8ca]
  40d89c:	xchg   ebp,eax
  40d89d:	xchg   edx,ecx
  40d89f:	punpcklbw mm3,DWORD PTR [esp+ebx*1]
  40d8a3:	cmc    
  40d8a4:	cmc    
  40d8a5:	imul   edx,ecx,0xfe5c1246
  40d8ab:	and    BYTE PTR [ecx],ch
  40d8ad:	repz (bad) 
  40d8af:	cmp    BYTE PTR [eax+0x340ba276],ah
  40d8b5:	sub    esi,DWORD PTR [esi-0x36]
  40d8b8:	vshufps xmm5,xmm1,XMMWORD PTR [ebp+0x35],0xd
  40d8be:	aad    0xf
  40d8c0:	mov    BYTE PTR [ecx+0x63],bl
  40d8c3:	mov    edi,0x45eef6d9
  40d8c8:	mov    cl,0x58
  40d8ca:	test   BYTE PTR [ebp+ecx*2-0x4831d12e],dh
  40d8d1:	mov    bl,0xa4
  40d8d3:	jg     0x40d874
  40d8d5:	xchg   esp,eax
  40d8d6:	inc    ebp
  40d8d7:	nop
  40d8d8:	or     ecx,DWORD PTR [ebp-0x68]
  40d8db:	scas   eax,DWORD PTR es:[edi]
  40d8dc:	adc    al,0xb5
  40d8de:	retf   
  40d8df:	out    dx,eax
  40d8e0:	cmp    eax,0xf76f17cd
  40d8e5:	add    al,0xc3
  40d8e7:	pushf  
  40d8e8:	cdq    
  40d8e9:	lds    esp,FWORD PTR [edx+0x746a63a4]
  40d8ef:	and    dl,BYTE PTR [edi+0x67]
  40d8f2:	pop    edx
  40d8f3:	jmp    0x40d93a
  40d8f5:	adc    BYTE PTR [esi-0x4657fae1],0x15
  40d8fc:	adc    al,0x2a
  40d8fe:	pop    esi
  40d8ff:	xor    edi,DWORD PTR [edi-0x74e0ee30]
  40d905:	int3   
  40d906:	cdq    
  40d907:	inc    esi
  40d908:	inc    eax
  40d909:	jg     0x40d957
  40d90b:	fucomi st,st(2)
  40d90d:	lds    edx,FWORD PTR [eax+0x1b]
  40d910:	rcl    BYTE PTR [esi+edx*1+0x71],cl
  40d914:	popa   
  40d915:	aas    
  40d916:	xchg   ebp,eax
  40d917:	daa    
  40d918:	sub    DWORD PTR [ebx],0x86927ca5
  40d91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d91f:	mov    dh,0xc6
  40d921:	inc    edi
  40d922:	in     eax,0x1c
  40d924:	inc    ebp
  40d925:	push   esi
  40d926:	ins    DWORD PTR es:[edi],dx
  40d927:	sbb    ah,BYTE PTR [eax]
  40d929:	es daa 
  40d92b:	xor    eax,0xe24a44c3
  40d930:	inc    ebp
  40d931:	fidiv  DWORD PTR [esi+0x63fcdda6]
  40d937:	add    eax,0x4b124898
  40d93c:	push   es
  40d93d:	jp     0x40d9a3
  40d93f:	or     dl,BYTE PTR [ebx+edi*4]
  40d942:	mov    BYTE PTR [esi],bl
  40d944:	test   al,0xf2
  40d946:	(bad)  
  40d947:	arpl   WORD PTR ds:0x568e05ff,bx
  40d94d:	arpl   WORD PTR [ebp-0x4b8fc395],sp
  40d953:	adc    al,0xb
  40d955:	rol    ch,cl
  40d957:	pop    ds
  40d958:	mov    dh,0x9d
  40d95a:	arpl   WORD PTR [edx],si
  40d95c:	jae    0x40d8fa
  40d95e:	gs pop esp
  40d960:	iret   
  40d961:	mov    gs,WORD PTR [ecx+edx*4-0x14]
  40d965:	jnp    0x40d920
  40d967:	xor    dh,cl
  40d969:	outs   dx,DWORD PTR ds:[esi]
  40d96a:	sbb    BYTE PTR [edi-0x3c],0x28
  40d96e:	ss inc edi
  40d970:	mov    fs,WORD PTR [edx]
  40d972:	pop    ss
  40d973:	xchg   edx,eax
  40d974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d975:	mov    ebp,fs
  40d977:	add    al,0xb8
  40d979:	inc    ecx
  40d97a:	mov    edi,0xeec3d549
  40d97f:	aas    
  40d980:	out    0x9a,al
  40d982:	loop   0x40d9ae
  40d984:	data16 imul BYTE PTR [ebx+0x39b08e90]
  40d98b:	loope  0x40d980
  40d98d:	xchg   DWORD PTR [edi-0x54],ecx
  40d990:	inc    edi
  40d991:	iret   
  40d992:	xchg   edi,eax
  40d993:	fld    QWORD PTR [edx]
  40d995:	fld    DWORD PTR [ecx]
  40d997:	int3   
  40d998:	or     BYTE PTR [edx+0x1],0x8c
  40d99c:	mov    dh,0x76
  40d99e:	ret    
  40d99f:	push   edx
  40d9a0:	and    DWORD PTR [esi+ebp*1-0x18],edx
  40d9a4:	xor    al,0xf3
  40d9a6:	or     ebx,DWORD PTR [ecx+ebx*2-0x704483b5]
  40d9ad:	adc    eax,0xde4546c6
  40d9b2:	cmc    
  40d9b3:	and    BYTE PTR [edi+0x78f1325],ah
  40d9b9:	adc    ecx,DWORD PTR [esi-0x194eba6e]
  40d9bf:	ret    
  40d9c0:	mov    bh,0xb7
  40d9c2:	mov    ebx,0x7821fb99
  40d9c7:	ja     0x40d9d1
  40d9c9:	test   eax,0x4038468
  40d9ce:	pop    eax
  40d9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9d0:	xor    BYTE PTR [edi-0x4d25c3dd],cl
  40d9d6:	std    
  40d9d7:	jmp    0x40da4a
  40d9d9:	fld    TBYTE PTR [ebx-0x1c87ad23]
  40d9df:	std    
  40d9e0:	mov    edx,0xe937331
  40d9e5:	xor    eax,0xa829e99d
  40d9ea:	xchg   ebp,eax
  40d9eb:	jbe    0x40da01
  40d9ed:	pop    esp
  40d9ee:	out    0xce,eax
  40d9f0:	mov    bl,0x91
  40d9f2:	fiadd  DWORD PTR ds:0x2bf26f60
  40d9f8:	push   0xffffffd6
  40d9fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9fb:	adc    BYTE PTR [edx+0x345c40c4],bl
  40da01:	jae    0x40d9e6
  40da03:	or     DWORD PTR [eax+0x4b6022de],0x40
  40da0a:	loopne 0x40da75
  40da0c:	sar    esi,0x6
  40da0f:	adc    al,bl
  40da11:	mov    cl,BYTE PTR [edx+0x4a]
  40da14:	add    esp,DWORD PTR [esi+eax*8-0x2c]
  40da18:	inc    eax
  40da19:	cld    
  40da1a:	push   esp
  40da1b:	sbb    BYTE PTR [ecx-0x250100b6],cl
  40da21:	or     dl,BYTE PTR [eax+edi*1+0x49b72e48]
  40da28:	call   0x30358976
  40da2d:	sbb    esp,esi
  40da2f:	dec    edi
  40da30:	sub    eax,DWORD PTR [edi+0x4f]
  40da33:	mov    eax,0x9533f13a
  40da38:	or     esp,DWORD PTR [ecx+0x7dd92e1e]
  40da3e:	popa   
  40da3f:	sbb    BYTE PTR cs:[edi+0x70],cl
  40da43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da44:	sub    DWORD PTR [ebp-0x42f8eee9],ecx
  40da4a:	test   eax,0x56ff7c06
  40da4f:	mov    ebx,0xf06d2f6f
  40da54:	or     ch,BYTE PTR [edx]
  40da56:	cwde   
  40da57:	fucom  st(5)
  40da59:	sbb    ebx,edx
  40da5b:	adc    al,0x45
  40da5d:	inc    esi
  40da5e:	subps  xmm2,XMMWORD PTR [ecx-0x5b29e77d]
  40da65:	cs xchg ecx,eax
  40da67:	inc    ebp
  40da68:	fs lock popf 
  40da6b:	lea    esi,[ecx-0x23ce0078]
  40da71:	ror    BYTE PTR [ebx+0x181054f0],0x7a
  40da78:	arpl   WORD PTR [esi+0xa89ec4c],cx
  40da7e:	xchg   edi,eax
  40da7f:	stos   BYTE PTR es:[edi],al
  40da80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da81:	sbb    BYTE PTR [edx-0x35d85ef9],cl
  40da87:	add    ch,dl
  40da89:	xchg   BYTE PTR [eax-0x1f55abc8],bl
  40da8f:	dec    BYTE PTR [esi-0x6f0c0e25]
  40da95:	int    0xb8
  40da97:	shl    DWORD PTR [ebx+0x6309ac9c],cl
  40da9d:	inc    edx
  40da9e:	or     bh,BYTE PTR ds:[edi]
  40daa1:	test   DWORD PTR [esi-0x42],esi
  40daa4:	mov    cl,0xac
  40daa6:	in     eax,0x58
  40daa8:	push   ss
  40daa9:	sbb    eax,0xf52cdf58
  40daae:	or     DWORD PTR [ecx-0x7f7b09],0xffffffc3
  40dab5:	lds    ebx,FWORD PTR [esi+edx*1]
  40dab8:	and    DWORD PTR [eax-0xd23a206],edi
  40dabe:	jmp    0x40db35
  40dac0:	inc    eax
  40dac1:	rcr    BYTE PTR [edi],cl
  40dac3:	mul    DWORD PTR [ebx]
  40dac5:	pusha  
  40dac6:	rcl    DWORD PTR ds:0xd3220ec5,1
  40dacc:	sbb    eax,0x404b7e29
  40dad1:	push   esp
  40dad2:	mov    ecx,0x39b327eb
  40dad7:	ds pop ecx
  40dad9:	stos   DWORD PTR es:[edi],eax
  40dada:	mov    dl,0x74
  40dadc:	lds    ebx,FWORD PTR [ecx+0x5ce0eb6]
  40dae2:	jbe    0x40dad9
  40dae4:	pop    ss
  40dae5:	mov    ebx,0xb57af5cb
  40daea:	sub    ebx,DWORD PTR [eax+0x1a]
  40daed:	inc    eax
  40daee:	mov    ah,0x32
  40daf0:	pop    ecx
  40daf1:	jecxz  0x40db24
  40daf3:	xchg   ebx,eax
  40daf4:	lds    eax,FWORD PTR [esi-0x72]
  40daf7:	cli    
  40daf8:	js     0x40da93
  40dafa:	mov    ah,0x56
  40dafc:	mov    al,bh
  40dafe:	xchg   edx,eax
  40daff:	outs   dx,BYTE PTR ds:[esi]
  40db00:	shr    al,1
  40db02:	dec    edi
  40db03:	loope  0x40db69
  40db05:	sub    ch,BYTE PTR [eax+0x6eb8e65]
  40db0b:	fimul  DWORD PTR [ebx]
  40db0d:	or     al,0xcb
  40db0f:	les    edi,FWORD PTR fs:[eax]
  40db12:	add    edi,ebx
  40db14:	out    0x9e,al
  40db16:	cmp    esi,ebp
  40db18:	adc    dl,BYTE PTR [eax-0x2d]
  40db1b:	ds hlt 
  40db1d:	xlat   BYTE PTR gs:[ebx]
  40db1f:	mov    ebx,0x9d9c6873
  40db24:	js     0x40db89
  40db26:	jbe    0x40db9e
  40db28:	je     0x40db3a
  40db2a:	js     0x40db83
  40db2c:	adc    al,0x79
  40db2e:	mov    DWORD PTR [ebx-0x4d],edi
  40db31:	sub    eax,0x692e7173
  40db36:	jge    0x40db44
  40db38:	gs popa 
  40db3a:	sbb    al,0x54
  40db3c:	and    bh,BYTE PTR [ebx]
  40db3e:	not    BYTE PTR [ecx+eax*2+0x1]
  40db42:	popa   
  40db43:	outs   dx,BYTE PTR ds:[esi]
  40db44:	xor    dl,BYTE PTR [eax+0x11193e3d]
  40db4a:	pushf  
  40db4b:	leave  
  40db4c:	ja     0x40dafb
  40db4e:	out    0xa3,al
  40db50:	dec    ebp
  40db51:	js     0x40db70
  40db53:	push   0xffffffec
  40db55:	or     bl,dh
  40db57:	dec    eax
  40db58:	xor    DWORD PTR [esi],0x44f4c89d
  40db5e:	lds    edx,FWORD PTR [edi-0x469c5e7b]
  40db64:	aad    0xb7
  40db66:	sbb    esi,eax
  40db68:	leave  
  40db69:	add    BYTE PTR [ecx],al
  40db6b:	adc    al,0x65
  40db6d:	fwait
  40db6e:	pushf  
  40db6f:	fsubr  DWORD PTR [ebp-0x7de019cc]
  40db75:	lea    esp,ds:0x3a15905a
  40db7b:	xrelease xchg BYTE PTR [edi],bl
  40db7e:	xchg   esi,eax
  40db7f:	aad    0x6a
  40db81:	es out 0xd7,al
  40db84:	(bad)  
  40db85:	fdivr  DWORD PTR [ebx]
  40db87:	xor    al,0x53
  40db89:	sbb    dl,BYTE PTR [edx+0x73e20153]
  40db8f:	xchg   edi,eax
  40db90:	ins    DWORD PTR es:[edi],dx
  40db91:	retf   0xca4
  40db94:	popa   
  40db95:	mov    ah,0xb9
  40db97:	fst    DWORD PTR [edi+0x58]
  40db9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db9c:	cmp    esi,ebp
  40db9e:	pop    edi
  40db9f:	(bad)  
  40dba0:	jmp    0xc381bc6c
  40dba5:	test   eax,0xca75bbd4
  40dbaa:	sbb    esi,DWORD PTR [esi+0x73fec7a0]
  40dbb0:	sub    ch,BYTE PTR [ecx]
  40dbb2:	cmp    dl,BYTE PTR [ebx+0x70]
  40dbb5:	enter  0x29e8,0x4e
  40dbb9:	mov    ebx,0x12634116
  40dbbe:	aam    0x43
  40dbc0:	hlt    
  40dbc1:	adc    DWORD PTR [ecx+ebp*2-0x7],edi
  40dbc5:	mov    esp,ds
  40dbc7:	stc    
  40dbc8:	mov    ah,0xe9
  40dbca:	ja     0x40db90
  40dbcc:	add    al,0xed
  40dbce:	cs xchg edi,eax
  40dbd0:	fistp  DWORD PTR [esi-0x5aef4cec]
  40dbd6:	jle    0x40dbea
  40dbd8:	stos   BYTE PTR es:[edi],al
  40dbd9:	and    eax,0x7a9c6306
  40dbde:	and    bh,BYTE PTR [ebx+ebx*8]
  40dbe1:	in     al,dx
  40dbe2:	rcr    BYTE PTR [edx-0x7c],cl
  40dbe5:	xor    DWORD PTR [ebx],ecx
  40dbe7:	adc    DWORD PTR [esi+eiz*4],ecx
  40dbea:	sub    DWORD PTR [edx+0x3c1aafe3],edi
  40dbf0:	gs dec ebp
  40dbf2:	jp     0x40dc3d
  40dbf4:	call   0xff3b:0xd9ed5876
  40dbfb:	fcomp  QWORD PTR [ebx+0x22e44c91]
  40dc01:	int    0x41
  40dc03:	inc    ecx
  40dc04:	pusha  
  40dc05:	mov    ch,0x58
  40dc07:	int3   
  40dc08:	xor    ah,BYTE PTR [ebx-0x64]
  40dc0b:	xor    DWORD PTR [ecx+0x256b2ac3],0xfffffff7
  40dc12:	stc    
  40dc13:	hlt    
  40dc14:	int    0xc5
  40dc16:	dec    edi
  40dc17:	cmc    
  40dc18:	jnp    0x40dbe0
  40dc1a:	test   DWORD PTR [ebp+edx*2+0x51],eax
  40dc1e:	dec    esp
  40dc1f:	adc    eax,0x3db8f56
  40dc24:	cdq    
  40dc25:	cld    
  40dc26:	addr16 cmp al,0x24
  40dc29:	add    ch,bl
  40dc2b:	jp     0x40dbc4
  40dc2d:	and    BYTE PTR [edi-0x24ae4ae2],dl
  40dc33:	dec    esp
  40dc34:	add    al,0x8a
  40dc36:	cmp    DWORD PTR [ebp+0x2e79e54d],0x3422d5b6
  40dc40:	jmp    0x4054:0x4aed5b65
  40dc47:	rol    BYTE PTR [ebp-0x14],0xbd
  40dc4b:	push   esi
  40dc4c:	inc    ebp
  40dc4d:	inc    edi
  40dc4e:	fisubr DWORD PTR [ebx]
  40dc50:	data16 mov ds:0x3f3bd2eb,al
  40dc56:	dec    esi
  40dc57:	cdq    
  40dc58:	pop    esp
  40dc59:	or     eax,0x4bbc3053
  40dc5e:	ja     0x40dc3e
  40dc60:	retf   
  40dc61:	sti    
  40dc62:	scas   eax,DWORD PTR es:[edi]
  40dc63:	pop    ds
  40dc64:	xchg   ecx,eax
  40dc65:	retf   0xc3bf
  40dc68:	push   ds
  40dc69:	sbb    DWORD PTR [edi],0x74
  40dc6c:	cmp    DWORD PTR [esp+edi*8+0x2a6d654e],eax
  40dc73:	xor    BYTE PTR [eax+0x12],0xdc
  40dc77:	add    al,BYTE PTR [ecx*4-0x297ef96e]
  40dc7e:	xchg   DWORD PTR [ebx-0x5c],edx
  40dc81:	or     esi,0x1c
  40dc84:	mov    ds:0x682c889f,al
  40dc89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc8a:	mov    WORD PTR [edx+0x56],ds
  40dc8d:	mov    ds:0xd147d514,eax
  40dc92:	cmp    esi,esi
  40dc94:	pop    es
  40dc95:	jge    0x40dc8e
  40dc97:	dec    edx
  40dc98:	push   es
  40dc99:	outs   dx,BYTE PTR ds:[esi]
  40dc9a:	adc    eax,0x51794b29
  40dc9f:	sbb    ch,BYTE PTR ss:[ebx+ebp*1]
  40dca3:	jp     0x40dc52
  40dca5:	icebp  
  40dca6:	push   edx
  40dca7:	sar    BYTE PTR [eax],1
  40dca9:	mov    bh,BYTE PTR [ebp-0x79e15c09]
  40dcaf:	xor    bl,BYTE PTR [eax-0x73159f51]
  40dcb5:	fwait
  40dcb6:	mov    esp,0xc9e18dfd
  40dcbb:	mov    ebp,0xbc91122b
  40dcc0:	cmp    BYTE PTR [esi+eax*1-0x68],dh
  40dcc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcc5:	aas    
  40dcc6:	push   es
  40dcc7:	dec    ebx
  40dcc8:	cli    
  40dcc9:	jnp    0x40dd2b
  40dccb:	xchg   esp,eax
  40dccc:	adc    al,0xfe
  40dcce:	and    BYTE PTR [ebp-0x77],bh
  40dcd1:	call   0xf408:0xc913519f
  40dcd8:	jnp    0x40dcc8
  40dcda:	dec    ecx
  40dcdb:	or     ecx,ecx
  40dcdd:	xchg   BYTE PTR [esi+0x18],ah
  40dce0:	push   es
  40dce1:	loop   0x40dcca
  40dce3:	shl    DWORD PTR [esi-0x10],1
  40dce6:	sub    al,0x66
  40dce8:	cmp    BYTE PTR [edi-0x1c5752cc],ah
  40dcee:	or     BYTE PTR [ebx+0x6],ah
  40dcf1:	call   0xd789:0xcdf67fe9
  40dcf8:	xchg   ecx,eax
  40dcf9:	bound  edx,QWORD PTR [esp+ebx*8-0x2d]
  40dcfd:	and    DWORD PTR [edi],edi
  40dcff:	and    BYTE PTR [eax+0x1f],0x94
  40dd03:	mov    ch,0xd1
  40dd05:	sub    dh,BYTE PTR [ecx]
  40dd07:	dec    edx
  40dd08:	rol    BYTE PTR [esi+0x3bdaaf29],cl
  40dd0e:	add    edx,eax
  40dd10:	mov    dh,0x85
  40dd12:	jne    0x40dd1b
  40dd14:	pop    edi
  40dd15:	call   DWORD PTR [edx]
  40dd17:	inc    edi
  40dd18:	(bad)  
  40dd1a:	jl     0x40dd51
  40dd1c:	outs   dx,BYTE PTR ds:[esi]
  40dd1d:	xor    DWORD PTR [ebx-0x67a7bdaa],0x74
  40dd24:	cld    
  40dd25:	sbb    esp,DWORD PTR ds:0xbd3030e4
  40dd2b:	mov    ebp,0x49a3d6ce
  40dd30:	xchg   ebx,eax
  40dd31:	pusha  
  40dd32:	mov    ecx,0xe7f26e6b
  40dd37:	out    dx,al
  40dd38:	add    al,0x59
  40dd3a:	adc    DWORD PTR [eax-0x79e2a4a4],esp
  40dd40:	xchg   esi,eax
  40dd41:	jl     0x40dda6
  40dd43:	mov    ch,0xea
  40dd45:	cmp    eax,0x27b551c1
  40dd4a:	and    esi,DWORD PTR [esi]
  40dd4c:	scas   al,BYTE PTR es:[edi]
  40dd4d:	lock in eax,0x3f
  40dd50:	scas   eax,DWORD PTR es:[edi]
  40dd51:	out    dx,al
  40dd52:	push   ebx
  40dd53:	nop
  40dd54:	ficomp WORD PTR [ebx]
  40dd56:	adc    esi,edi
  40dd58:	mov    dh,0x6e
  40dd5a:	sar    ah,cl
  40dd5c:	je     0x40dd66
  40dd5e:	pop    edi
  40dd5f:	scas   eax,DWORD PTR es:[edi]
  40dd60:	ret    
  40dd61:	mov    eax,ds:0x1e4994f5
  40dd66:	xor    ah,BYTE PTR [ebp-0x65]
  40dd69:	arpl   WORD PTR [edi+0x434a7531],bp
  40dd6f:	push   0x11
  40dd71:	fsub   QWORD PTR [edx+0x2f61ca07]
  40dd77:	adc    ch,BYTE PTR [edx]
  40dd79:	xchg   edi,eax
  40dd7a:	xor    ch,dh
  40dd7c:	loop   0x40dd7d
  40dd7e:	dec    edx
  40dd7f:	cmp    dl,BYTE PTR [eax-0xd]
  40dd82:	dec    esi
  40dd83:	and    al,0x92
  40dd85:	xor    BYTE PTR [edi],cl
  40dd87:	pop    ebp
  40dd88:	popf   
  40dd89:	fsubr  DWORD PTR [esi+0x2a19e861]
  40dd8f:	sub    DWORD PTR [eax-0x50],eax
  40dd92:	dec    edx
  40dd93:	cmp    esp,DWORD PTR [ecx]
  40dd95:	xor    DWORD PTR [edi+edi*2-0x7d],0x293ae938
  40dd9d:	jl     0x40dddd
  40dd9f:	push   edi
  40dda0:	nop
  40dda1:	mov    bh,0xe3
  40dda3:	pop    eax
  40dda4:	xlat   BYTE PTR ds:[ebx]
  40dda5:	les    eax,FWORD PTR [edx+0x2cfdaae6]
  40ddab:	stos   DWORD PTR es:[edi],eax
  40ddac:	test   BYTE PTR [ecx+0x2],0xf4
  40ddb0:	xchg   edi,eax
  40ddb1:	cmp    DWORD PTR [edx],ecx
  40ddb3:	sbb    ebp,DWORD PTR [edx]
  40ddb5:	xchg   ebx,eax
  40ddb6:	or     al,0xd3
  40ddb8:	mov    esp,0x705621ec
  40ddbd:	(bad)  
  40ddbe:	sub    ah,BYTE PTR [eax+esi*2]
  40ddc1:	xchg   edx,eax
  40ddc2:	pop    eax
  40ddc3:	scas   al,BYTE PTR es:[edi]
  40ddc4:	bound  edx,QWORD PTR [edx+0x1]
  40ddc7:	push   es
  40ddc8:	adc    al,0x2c
  40ddca:	xchg   ebp,eax
  40ddcb:	adc    DWORD PTR [edx-0x5c],edi
  40ddce:	and    ecx,DWORD PTR [esi+0x7bdfda52]
  40ddd4:	shl    DWORD PTR [ecx+eiz*8-0x29],0x8d
  40ddd9:	dec    esi
  40ddda:	add    eax,0x3604be8f
  40dddf:	ror    BYTE PTR [edx+edi*8+0x1f],cl
  40dde3:	mov    al,0xea
  40dde5:	into   
  40dde6:	in     eax,0xda
  40dde8:	cmp    bh,BYTE PTR [ebx]
  40ddea:	add    BYTE PTR [ecx+0x2],dh
  40dded:	or     eax,esp
  40ddef:	aas    
  40ddf0:	in     eax,dx
  40ddf1:	jno    0x40de4d
  40ddf3:	shl    DWORD PTR [ecx+0x2de1b2d],0xe6
  40ddfa:	or     DWORD PTR [edx+edi*1+0x46c011b4],esp
  40de01:	inc    ebp
  40de02:	mov    bl,0x4
  40de04:	repz scas eax,DWORD PTR es:[edi]
  40de06:	mov    WORD PTR [edx+0x3633358e],gs
  40de0c:	adc    edi,DWORD PTR [ecx-0x5819d582]
  40de12:	ss mov esi,0x1806ba67
  40de18:	aaa    
  40de19:	repnz dec edi
  40de1b:	sbb    ah,BYTE PTR [edi]
  40de1d:	sbb    al,0xf3
  40de1f:	in     al,dx
  40de20:	scas   eax,DWORD PTR es:[edi]
  40de21:	xchg   ecx,eax
  40de22:	(bad)  
  40de23:	(bad)  
  40de24:	xor    DWORD PTR [ebx-0x107cea9b],ebp
  40de2a:	dec    edi
  40de2b:	sub    bl,BYTE PTR [edx+0x274d61a2]
  40de31:	inc    ebp
  40de32:	dec    ebx
  40de33:	jp     0x40ddcc
  40de35:	sub    ebx,edx
  40de37:	mov    gs,esp
  40de39:	pop    ebp
  40de3a:	mov    bh,BYTE PTR [edx]
  40de3c:	jl     0x40de5e
  40de3e:	push   edx
  40de3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de40:	add    bh,BYTE PTR [ebx+0x49]
  40de43:	sub    DWORD PTR [esi-0x20101378],eax
  40de49:	push   ebx
  40de4a:	cld    
  40de4b:	dec    ecx
  40de4c:	(bad)  
  40de4d:	out    0xc8,al
  40de4f:	push   0xb594b8f4
  40de54:	gs fsubrp st(0),st
  40de57:	sahf   
  40de58:	fisttp QWORD PTR [ecx-0x77]
  40de5b:	idiv   BYTE PTR [ebx-0x51]
  40de5e:	ror    esp,1
  40de60:	jne    0x40de05
  40de62:	push   es
  40de63:	jmp    0x44c2ef5c
  40de68:	sub    ebx,esi
  40de6a:	cwde   
  40de6b:	out    dx,eax
  40de6c:	jp     0x40de1f
  40de6e:	mov    al,0xf3
  40de70:	mov    ch,0xa5
  40de72:	fiadd  WORD PTR es:[edx-0x53483862]
  40de79:	adc    bl,BYTE PTR [eax]
  40de7b:	push   ds
  40de7c:	or     DWORD PTR [edi+ebp*2-0x1e],edx
  40de80:	or     al,0x4f
  40de82:	xor    al,bh
  40de84:	(bad)  
  40de85:	call   0x3dfd:0xba77a75d
  40de8c:	mov    edi,0x22ed8871
  40de91:	push   eax
  40de92:	jmp    0xca02481d
  40de97:	xchg   ecx,eax
  40de98:	pop    ds
  40de99:	xor    edx,DWORD PTR [edi+0x5b]
  40de9c:	jno    0x40ded5
  40de9e:	or     DWORD PTR [edx-0x3d],edx
  40dea1:	test   al,0x2a
  40dea3:	mov    esp,0x3619b887
  40dea8:	dec    edx
  40dea9:	mov    bh,0xb4
  40deab:	test   DWORD PTR [edx+0x39],0x7da953ba
  40deb2:	clc    
  40deb3:	jle    0x40deab
  40deb5:	adc    eax,0x7c577d6f
  40deba:	imul   ch
  40debc:	stc    
  40debd:	pop    eax
  40debe:	pop    es
  40debf:	arpl   WORD PTR [eax+0x2cbff352],sp
  40dec5:	retf   
  40dec6:	sub    edx,DWORD PTR [ebx]
  40dec8:	add    DWORD PTR [edx+0x3c],0xb28df171
  40decf:	add    eax,0xa21d139e
  40ded4:	out    0x1f,eax
  40ded6:	aad    0x68
  40ded8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded9:	dec    edi
  40deda:	cmp    al,0xdc
  40dedc:	mov    eax,ds:0x7b13ac63
  40dee1:	icebp  
  40dee2:	cmp    al,0xd0
  40dee4:	stos   BYTE PTR es:[edi],al
  40dee5:	pop    ebp
  40dee6:	outs   dx,DWORD PTR ds:[esi]
  40dee7:	fnstcw WORD PTR ds:0x2f1046b4
  40deed:	pop    es
  40deee:	clc    
  40deef:	pop    es
  40def0:	retf   
  40def1:	and    BYTE PTR [esi-0x42dc8f76],dl
  40def7:	xor    ebp,eax
  40def9:	mov    ecx,0x31b289b5
  40defe:	scas   al,BYTE PTR es:[edi]
  40deff:	push   ss
  40df00:	ja     0x40deaa
  40df02:	stc    
  40df03:	or     ebx,ecx
  40df05:	adc    esp,DWORD PTR [ebp-0x73294a1c]
  40df0b:	rol    BYTE PTR [esi+0x4aef65d],cl
  40df11:	js     0x40df0e
  40df13:	in     al,0xc9
  40df15:	fild   WORD PTR [edi]
  40df17:	in     eax,0xf1
  40df19:	jne    0x40df89
  40df1b:	mov    eax,0xd576ba27
  40df20:	inc    esi
  40df21:	sub    DWORD PTR [ebp-0x1b],esi
  40df24:	xor    al,0x46
  40df26:	daa    
  40df27:	inc    eax
  40df28:	add    ebp,edi
  40df2a:	push   cs
  40df2b:	sub    eax,0x949a0e5a
  40df30:	fldenv [edx-0x6255e7b2]
  40df36:	push   ss
  40df37:	jae    0x40decb
  40df39:	fild   WORD PTR [esi-0x34]
  40df3c:	xchg   ebp,eax
  40df3d:	mov    bh,0x9f
  40df3f:	shl    BYTE PTR [eax+0x24],cl
  40df42:	cs into 
  40df44:	popa   
  40df45:	nop
  40df46:	push   esi
  40df47:	mov    eax,0xc41b2516
  40df4c:	mov    dl,0xc
  40df4e:	pushf  
  40df4f:	push   esp
  40df50:	mov    edi,0x43b190b0
  40df55:	test   al,0x1a
  40df57:	sar    ecx,0x93
  40df5a:	scas   eax,DWORD PTR es:[edi]
  40df5b:	test   BYTE PTR [edx-0x4a],al
  40df5e:	jns    0x40df5a
  40df60:	bnd jle 0x40df49
  40df63:	ins    BYTE PTR es:[edi],dx
  40df64:	xor    ah,BYTE PTR [eax+0x29]
  40df67:	push   edx
  40df68:	enter  0xcd2a,0x1a
  40df6c:	ds repz push 0x40
  40df70:	mov    eax,ds:0x84e5b33d
  40df75:	mov    cl,0xba
  40df77:	scas   eax,DWORD PTR es:[edi]
  40df78:	fstp   TBYTE PTR [ecx+ecx*2]
  40df7b:	xchg   DWORD PTR [ebp-0x59],ebx
  40df7e:	push   es
  40df7f:	rcr    bh,cl
  40df81:	jle    0x40dfac
  40df83:	jecxz  0x40df4d
  40df85:	jo     0x40df25
  40df87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df88:	out    0x44,eax
  40df8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df8b:	loopne 0x40df3f
  40df8d:	cmp    esi,edx
  40df8f:	push   es
  40df90:	mov    eax,0x30524f98
  40df95:	pop    edx
  40df96:	(bad)  
  40df97:	in     eax,0x54
  40df99:	push   ecx
  40df9a:	mov    WORD PTR [ebp+0x79],?
  40df9d:	bound  ebx,QWORD PTR [esi+edx*8-0x4]
  40dfa1:	pop    esi
  40dfa2:	je     0x40e01b
  40dfa4:	cmp    DWORD PTR ds:0x2cfce520,edi
  40dfaa:	fdivr  DWORD PTR [esi+0x323d839c]
  40dfb0:	jmp    0xd2d6:0x8248c07d
  40dfb7:	pop    ecx
  40dfb8:	fbstp  TBYTE PTR ds:0x3e55efea
  40dfbe:	loopne 0x40e03f
  40dfc0:	push   esp
  40dfc1:	enter  0xd334,0x23
  40dfc5:	sbb    eax,0x5f193704
  40dfca:	out    dx,eax
  40dfcb:	adc    al,0xd2
  40dfcd:	xor    eax,0xadd71e24
  40dfd2:	jge    0x40e013
  40dfd4:	push   esp
  40dfd5:	mov    bh,0xec
  40dfd7:	xchg   esp,eax
  40dfd8:	dec    edx
  40dfd9:	pop    edi
  40dfda:	add    bh,BYTE PTR [esi-0x57]
  40dfdd:	in     eax,dx
  40dfde:	pop    ebp
  40dfdf:	jge    0x40dfc0
  40dfe1:	outs   dx,DWORD PTR ds:[esi]
  40dfe2:	mov    ch,0x88
  40dfe4:	mov    ebp,0x824b5dfa
  40dfe9:	inc    eax
  40dfea:	push   eax
  40dfeb:	jo     0x40dfc9
  40dfed:	fwait
  40dfee:	ds dec edi
  40dff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff1:	jmp    0x4ab5:0xa451955a
  40dff8:	(bad)  [edx]
  40dffa:	imul   eax,edx,0x72
  40dffd:	lds    edx,FWORD PTR [eax]
  40dfff:	sbb    eax,0x8effeb2e
  40e004:	cli    
  40e005:	sbb    al,BYTE PTR [edi+0x62]
  40e008:	inc    edi
  40e009:	mov    ebx,0xf171858d
  40e00e:	out    0x72,al
  40e010:	test   al,0x6c
  40e012:	push   es
  40e013:	ret    
  40e014:	hlt    
  40e015:	fist   WORD PTR [ecx+edx*8]
  40e018:	dec    ecx
  40e019:	lea    eax,[esi-0x1768d129]
  40e01f:	add    al,0x6e
  40e021:	sahf   
  40e022:	(bad)  
  40e023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e024:	sbb    esp,DWORD PTR [esi+0x2f648975]
  40e02a:	lea    edi,[ebx]
  40e02c:	lock (bad) 
  40e02e:	ins    DWORD PTR es:[edi],dx
  40e02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e030:	daa    
  40e031:	lods   eax,DWORD PTR ds:[esi]
  40e032:	or     eax,eax
  40e034:	out    0xed,eax
  40e036:	mov    ebx,DWORD PTR [esp+eiz*8-0x2d375617]
  40e03d:	stos   DWORD PTR es:[edi],eax
  40e03e:	and    al,0x9c
  40e040:	sub    al,bh
  40e042:	in     eax,dx
  40e043:	dec    edx
  40e044:	or     BYTE PTR [eax+ecx*2-0x16],cl
  40e048:	and    BYTE PTR ds:0xf0665ba6,ah
  40e04e:	neg    bh
  40e050:	sub    al,0x38
  40e052:	cld    
  40e053:	jnp    0x40e039
  40e055:	test   BYTE PTR [eax+0x29],0x62
  40e059:	xor    edx,DWORD PTR [ebp-0x6d2aa82e]
  40e05f:	pop    edx
  40e060:	sbb    eax,ebx
  40e062:	jne    0x40e064
  40e064:	mov    eax,ds:0xc796df09
  40e069:	stos   BYTE PTR es:[edi],al
  40e06a:	sub    ah,BYTE PTR [esi+0x7013be4e]
  40e070:	lods   al,BYTE PTR ds:[esi]
  40e071:	in     al,0xa2
  40e073:	imul   ebp,ecx,0xa4cdc086
  40e079:	into   
  40e07a:	sti    
  40e07b:	mov    ebp,0x7e864ad9
  40e080:	xchg   ebx,eax
  40e081:	cmc    
  40e082:	mov    ebx,0x57aa0e64
  40e087:	es pop es
  40e089:	psllw  mm6,QWORD PTR [edx]
  40e08c:	retf   
  40e08d:	pusha  
  40e08e:	lds    esp,FWORD PTR [ecx+0x31102522]
  40e094:	pop    edi
  40e095:	mov    bh,0x49
  40e097:	cmp    eax,0x1209c8f0
  40e09c:	in     eax,dx
  40e09d:	push   edi
  40e09e:	(bad)  
  40e0a0:	popa   
  40e0a1:	aam    0xc9
  40e0a3:	pop    ebx
  40e0a4:	mov    ecx,0x40993e2a
  40e0a9:	and    ch,BYTE PTR [edi+0x6c]
  40e0ac:	sbb    dh,ch
  40e0ae:	pushf  
  40e0af:	fcmovu st,st(6)
  40e0b1:	mov    esp,0x3faf50f2
  40e0b6:	jg     0x40e067
  40e0b8:	bound  ecx,QWORD PTR [eax+0x7e]
  40e0bb:	cli    
  40e0bc:	pusha  
  40e0bd:	in     al,dx
  40e0be:	mov    esp,DWORD PTR ds:0x10d63200
  40e0c4:	in     eax,dx
  40e0c5:	ficom  WORD PTR [ebx-0x685e7d17]
  40e0cb:	ins    DWORD PTR es:[edi],dx
  40e0cc:	jb     0x40e13f
  40e0ce:	jno    0x40e07d
  40e0d0:	call   0xc42b:0xa008e062
  40e0d7:	es jecxz 0x40e0cd
  40e0da:	mov    eax,DWORD PTR [ebp-0x7611a3e8]
  40e0e0:	mov    ds:0xa049b795,eax
  40e0e5:	cmp    BYTE PTR [edi],bl
  40e0e7:	daa    
  40e0e8:	sub    cl,bh
  40e0ea:	jmp    0x2d62b410
  40e0ef:	ss push ebp
  40e0f1:	daa    
  40e0f2:	lods   al,BYTE PTR ds:[esi]
  40e0f3:	shr    DWORD PTR [ebx+ebp*4],cl
  40e0f6:	or     edx,DWORD PTR [edi+ebp*2+0x5b]
  40e0fa:	sbb    cl,BYTE PTR [esi]
  40e0fc:	and    BYTE PTR [esi-0x7],0xd2
  40e100:	mov    ds:0xff079379,eax
  40e105:	dec    eax
  40e106:	cs mov ebx,0x1427321e
  40e10c:	push   ds
  40e10d:	xchg   ebp,eax
  40e10e:	or     eax,0xa17265c4
  40e113:	mov    edx,0x183c8ca4
  40e118:	inc    ebx
  40e119:	mov    esi,0xd3010ca4
  40e11e:	xor    eax,0x31e7d5b8
  40e123:	nop
  40e124:	pusha  
  40e125:	ja     0x40e0f4
  40e127:	and    al,0x69
  40e129:	int3   
  40e12a:	outs   dx,BYTE PTR ds:[esi]
  40e12b:	arpl   WORD PTR [ecx+0x40],si
  40e12e:	outs   dx,BYTE PTR ds:[esi]
  40e12f:	mov    ch,0xda
  40e131:	mov    al,0xd0
  40e133:	or     eax,0x63edd7bd
  40e138:	mov    ebx,DWORD PTR fs:[eax+eiz*8+0x8d55d43]
  40e140:	xor    al,0x95
  40e142:	push   es
  40e143:	pop    esp
  40e144:	add    edi,esi
  40e146:	rcl    ebx,1
  40e148:	xor    al,0x9
  40e14a:	or     eax,0xbd239a4c
  40e14f:	outs   dx,BYTE PTR ds:[esi]
  40e150:	jmp    0xf86a0e91
  40e155:	sbb    eax,DWORD PTR [ecx]
  40e157:	sbb    eax,0xd04c62b7
  40e15c:	mov    dh,BYTE PTR [esi-0x5c]
  40e15f:	call   0x7a7c:0x665f837f
  40e166:	sti    
  40e167:	add    eax,0x95696372
  40e16c:	retf   0x99ac
  40e16f:	cld    
  40e170:	popa   
  40e171:	test   eax,0xc6022979
  40e176:	das    
  40e177:	(bad)  
  40e178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e179:	test   DWORD PTR [ebx+0x2a9cdc36],0x91c0bfb5
  40e183:	cwde   
  40e184:	jl     0x40e1ef
  40e186:	les    edx,FWORD PTR [ebx+ebx*1-0x271c54e8]
  40e18d:	outs   dx,DWORD PTR ds:[esi]
  40e18e:	(bad)  
  40e190:	inc    ebp
  40e191:	xchg   ecx,eax
  40e192:	sbb    BYTE PTR [esi+ebx*2-0x28],bl
  40e196:	adc    dh,BYTE PTR [ecx]
  40e198:	adc    al,0x40
  40e19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e19b:	daa    
  40e19c:	xor    DWORD PTR [edi+0xb8009b2],esp
  40e1a2:	mov    DWORD PTR [esi-0x6c708c41],esi
  40e1a8:	dec    ebx
  40e1a9:	jg     0x40e131
  40e1ab:	jns    0x40e1f5
  40e1ad:	jp     0x40e150
  40e1af:	aaa    
  40e1b0:	xchg   esp,eax
  40e1b1:	rcr    DWORD PTR [eax],0x13
  40e1b4:	inc    ebx
  40e1b5:	clc    
  40e1b6:	stos   BYTE PTR es:[edi],al
  40e1b7:	ss jno 0x40e15c
  40e1ba:	icebp  
  40e1bb:	call   FWORD PTR [ebx-0x17]
  40e1be:	outs   dx,DWORD PTR ds:[esi]
  40e1bf:	inc    esi
  40e1c0:	push   ebp
  40e1c1:	icebp  
  40e1c2:	add    eax,0xdb57057c
  40e1c7:	mov    ah,0x3a
  40e1c9:	ss dec eax
  40e1cb:	push   es
  40e1cc:	and    al,0xc5
  40e1ce:	sbb    BYTE PTR [edx+0x4c],bh
  40e1d1:	mul    ecx
  40e1d3:	push   edi
  40e1d4:	out    0x3,eax
  40e1d6:	mov    eax,ds:0x61962ee2
  40e1db:	sti    
  40e1dc:	and    edi,0xffffff95
  40e1df:	shl    BYTE PTR [ebx-0x6ba4ab67],cl
  40e1e5:	ss (bad) 
  40e1e7:	push   edx
  40e1e8:	fsub   DWORD PTR [edi+0x25]
  40e1eb:	lods   al,BYTE PTR ds:[esi]
  40e1ec:	and    eax,0x612a9755
  40e1f1:	out    0xbd,al
  40e1f3:	repnz test BYTE PTR [ecx],bl
  40e1f6:	mov    ?,WORD PTR [edx+0x4b98019d]
  40e1fc:	out    0xd,eax
  40e1fe:	ficom  WORD PTR [edi+0x1912db21]
  40e204:	adc    al,0x74
  40e206:	push   eax
  40e207:	and    edi,ebp
  40e209:	test   dh,0xd8
  40e20c:	push   eax
  40e20d:	adc    BYTE PTR [edx-0x730a3970],cl
  40e213:	jno    0x40e248
  40e215:	pop    eax
  40e216:	jns    0x40e1cc
  40e218:	pop    ds
  40e219:	cmc    
  40e21a:	push   esi
  40e21b:	mov    ebx,ecx
  40e21d:	mov    ebp,0x17512395
  40e222:	or     DWORD PTR [ebp-0x26],ecx
  40e225:	into   
  40e226:	or     al,0xf0
  40e228:	adc    ebp,ecx
  40e22a:	iret   
  40e22b:	bound  edi,QWORD PTR [ecx+0x101e9945]
  40e231:	repnz hlt 
  40e233:	ja     0x40e29f
  40e235:	scas   al,BYTE PTR es:[edi]
  40e236:	jnp    0x40e246
  40e238:	das    
  40e239:	js     0x40e255
  40e23b:	(bad)  
  40e23c:	or     edi,DWORD PTR es:[ecx-0x7]
  40e240:	ins    DWORD PTR es:[edi],dx
  40e241:	sbb    edi,DWORD PTR [edi-0x3e]
  40e244:	clc    
  40e245:	popf   
  40e246:	(bad)  
  40e247:	in     eax,0xe8
  40e249:	adc    al,0xf1
  40e24b:	fidiv  WORD PTR [eax+eax*1+0x7f]
  40e24f:	js     0x40e2ae
  40e251:	in     al,0x5f
  40e253:	push   edx
  40e254:	cwde   
  40e255:	adc    BYTE PTR [ecx],ah
  40e257:	xor    BYTE PTR [edi-0x60],dl
  40e25a:	mov    esp,cs
  40e25c:	pop    esi
  40e25d:	and    al,0xae
  40e25f:	fmulp  st(3),st
  40e261:	mov    esp,0x7b3d9f4e
  40e266:	dec    edx
  40e267:	xor    BYTE PTR [edi+0x5722a647],cl
  40e26d:	and    bh,ch
  40e26f:	mov    edx,0xc16859da
  40e274:	cmc    
  40e275:	xor    DWORD PTR [ecx-0x5d],edx
  40e278:	repnz or DWORD PTR [ebx-0x4f],0x7a3866dc
  40e280:	rcl    edx,cl
  40e282:	pop    ecx
  40e283:	pop    eax
  40e284:	adc    BYTE PTR [eax-0x68dadccc],bh
  40e28a:	xchg   bp,ax
  40e28c:	pop    ebp
  40e28d:	test   eax,0xbaad6f94
  40e292:	mov    esp,0x26b1677f
  40e297:	ret    
  40e298:	xor    edx,DWORD PTR [ecx+0x40]
  40e29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e29c:	sub    esi,ebp
  40e29e:	add    al,0x9c
  40e2a0:	sahf   
  40e2a1:	fsubr  st,st(3)
  40e2a3:	push   es
  40e2a4:	and    eax,0xba9ad6bd
  40e2a9:	(bad)  
  40e2aa:	xor    al,0x10
  40e2ac:	ret    
  40e2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2ae:	and    dh,BYTE PTR [ebp-0x71]
  40e2b1:	das    
  40e2b2:	mov    ebp,0x1a3d38f5
  40e2b7:	mov    esp,0x485a11ef
  40e2bc:	div    DWORD PTR [ebx+0x55]
  40e2bf:	or     esp,DWORD PTR [ebx-0x7e]
  40e2c2:	mov    bh,cl
  40e2c4:	ror    DWORD PTR [ecx],cl
  40e2c6:	jg     0x40e286
  40e2c8:	mov    eax,0x569de25f
  40e2cd:	cmp    eax,0x44b8581c
  40e2d2:	outs   dx,BYTE PTR ds:[esi]
  40e2d3:	push   eax
  40e2d4:	call   0xcaa65a5
  40e2d9:	and    DWORD PTR [ebp+0x2d9f4389],ecx
  40e2df:	test   DWORD PTR [edi],edx
  40e2e1:	mov    ds:0x632a6af0,eax
  40e2e6:	lods   eax,DWORD PTR ds:[esi]
  40e2e7:	mov    bh,0xbf
  40e2e9:	jmp    0x40e318
  40e2eb:	cwde   
  40e2ec:	pop    ds
  40e2ed:	ret    
  40e2ee:	sub    DWORD PTR ds:0x8f3ba231,0xab0dfa59
  40e2f8:	push   ds
  40e2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2fa:	fwait
  40e2fb:	out    dx,al
  40e2fc:	ja     0x40e34f
  40e2fe:	push   0xffffffc8
  40e300:	cmp    cl,cl
  40e302:	mov    ds:0xf48c6d9b,eax
  40e307:	mov    esi,0xac4fdfab
  40e30c:	cdq    
  40e30d:	push   eax
  40e30e:	sub    eax,0x437d555a
  40e313:	loop   0x40e2e3
  40e315:	sar    ebp,0x51
  40e318:	retf   
  40e319:	mov    BYTE PTR [esi-0x37],al
  40e31c:	and    BYTE PTR gs:[edi-0x1176d37d],0xa6
  40e324:	cld    
  40e325:	jo     0x40e2ef
  40e327:	mov    bl,0x9e
  40e329:	lock rcr DWORD PTR [ebp+0x6e],1
  40e32d:	hlt    
  40e32e:	jp     0x40e376
  40e330:	cmp    eax,0x33d2da97
  40e335:	loope  0x40e358
  40e337:	mov    ah,BYTE PTR [esp+ebx*8+0x6d]
  40e33b:	adc    ecx,ebp
  40e33d:	arpl   sp,ax
  40e33f:	mov    al,BYTE PTR [eax+eax*8]
  40e342:	test   BYTE PTR [edx+0x147ae765],dl
  40e348:	jne    0x40e34b
  40e34a:	cdq    
  40e34b:	(bad)  
  40e34c:	mov    bh,0xb3
  40e34e:	or     eax,0x9f24b799
  40e353:	pop    esi
  40e354:	clc    
  40e355:	out    dx,al
  40e356:	sub    eax,0x909efd19
  40e35b:	xor    DWORD PTR [ebx+0xa],ecx
  40e35e:	mov    ecx,0x14ef525c
  40e363:	push   esi
  40e364:	jno    0x40e389
  40e366:	inc    DWORD PTR [bx+di-0x61]
  40e36a:	push   edx
  40e36b:	(bad)  
  40e36c:	dec    ebx
  40e36d:	fsubr  st,st(6)
  40e36f:	jmp    0x46c3:0x541e7b9e
  40e376:	es jns 0x40e3d8
  40e379:	pop    esi
  40e37a:	lods   al,BYTE PTR ds:[esi]
  40e37b:	sub    al,0xdd
  40e37d:	pop    ecx
  40e37e:	xchg   esp,eax
  40e37f:	sar    BYTE PTR [edx+0x32],cl
  40e382:	mov    cl,bl
  40e384:	mov    ch,0x14
  40e386:	push   edx
  40e387:	mov    ah,0x16
  40e389:	fcom   DWORD PTR [ebx]
  40e38b:	xchg   BYTE PTR [edi-0x7fb9f2d],ch
  40e391:	retf   
  40e392:	data16 neg BYTE PTR [ebx+eiz*1-0x7d]
  40e397:	push   edi
  40e398:	mov    WORD PTR [edx],ss
  40e39a:	daa    
  40e39b:	xchg   ecx,eax
  40e39c:	sbb    BYTE PTR [esi],dl
  40e39e:	xchg   edx,eax
  40e39f:	dec    esi
  40e3a0:	inc    eax
  40e3a1:	cwde   
  40e3a2:	es mov edi,0x434b87b0
  40e3a8:	xor    ecx,eax
  40e3aa:	fsubr  QWORD PTR [ecx-0x6d]
  40e3ad:	or     bx,WORD PTR cs:[edx-0x64eb1102]
  40e3b5:	fisub  WORD PTR [eax+edi*4+0x5c5600e6]
  40e3bc:	sub    BYTE PTR [ebp+0x4c],0x19
  40e3c0:	(bad)  
  40e3c1:	int3   
  40e3c2:	into   
  40e3c3:	or     al,0x35
  40e3c5:	rcl    DWORD PTR [edi+0x7fb5987e],1
  40e3cb:	pop    edx
  40e3cc:	popa   
  40e3cd:	mov    WORD PTR [edi-0x7c6d1186],fs
  40e3d3:	sahf   
  40e3d4:	je     0x40e449
  40e3d6:	sub    DWORD PTR [esi],esi
  40e3d8:	xchg   edx,eax
  40e3d9:	dec    edi
  40e3da:	pop    esp
  40e3db:	inc    esp
  40e3dc:	mov    dh,BYTE PTR [edi]
  40e3de:	jl     0x40e45b
  40e3e0:	push   esp
  40e3e1:	jp     0x40e459
  40e3e3:	pop    esp
  40e3e4:	jp     0x40e404
  40e3e6:	out    dx,al
  40e3e7:	adc    ebp,DWORD PTR [esi]
  40e3e9:	sub    eax,0x903bd2e
  40e3ee:	fdiv   QWORD PTR [ebx]
  40e3f0:	inc    ebp
  40e3f1:	retf   0x9da1
  40e3f4:	mov    bl,bh
  40e3f6:	fisttp WORD PTR [ecx+0x54]
  40e3f9:	ret    0xbc6d
  40e3fc:	ret    
  40e3fd:	int3   
  40e3fe:	jno    0x40e440
  40e400:	cmp    cl,BYTE PTR [ecx+0xb8617b1]
  40e406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e407:	and    al,0xa1
  40e409:	push   cs
  40e40a:	ds pop edi
  40e40c:	jns    0x40e3c0
  40e40e:	and    ebx,0x76
  40e411:	jg     0x40e42c
  40e413:	(bad)  
  40e414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e415:	ror    BYTE PTR [eax],0xa1
  40e418:	jecxz  0x40e431
  40e41a:	inc    ecx
  40e41b:	fwait
  40e41c:	adc    BYTE PTR [edi-0x30],bh
  40e41f:	lea    edx,[edi-0x6443e934]
  40e425:	fstp   QWORD PTR [edx+0x13c8f0a7]
  40e42b:	dec    edi
  40e42c:	add    BYTE PTR [ebp-0x699f0555],ah
  40e432:	jmp    0xd523:0xd79aac77
  40e439:	jbe    0x40e3d4
  40e43b:	int3   
  40e43c:	leave  
  40e43d:	daa    
  40e43e:	cld    
  40e43f:	mov    eax,ds:0xbb86d61
  40e444:	push   es
  40e445:	mov    edi,0x81093589
  40e44a:	mov    ebp,0x1f74dcf3
  40e44f:	mov    esi,0x23097007
  40e454:	xchg   ebx,eax
  40e455:	inc    ecx
  40e456:	sub    eax,0x73209afc
  40e45b:	mov    al,0xf
  40e45d:	icebp  
  40e45e:	(bad)  
  40e45f:	shr    ebp,cl
  40e461:	or     cl,cl
  40e463:	push   esp
  40e464:	or     al,BYTE PTR [edi]
  40e466:	push   ss
  40e467:	push   edi
  40e468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e469:	push   edi
  40e46a:	inc    esp
  40e46b:	inc    esp
  40e46c:	mov    cl,al
  40e46e:	sbb    edi,DWORD PTR [ecx+esi*1-0x41]
  40e472:	cmp    eax,0xfdcaa09e
  40e477:	sbb    eax,0x55c2ca6b
  40e47c:	sbb    eax,0x8b822073
  40e481:	fcom   QWORD PTR [eax]
  40e483:	sub    eax,0xc767f102
  40e488:	xchg   edi,eax
  40e489:	leave  
  40e48a:	(bad)
  40e48d:	iret   
  40e48e:	adc    eax,0xc5e5864a
  40e493:	or     ebx,DWORD PTR [eax+0x4df08348]
  40e499:	push   esp
  40e49a:	sbb    BYTE PTR [eax-0x6580834b],cl
  40e4a0:	pop    edx
  40e4a1:	dec    esi
  40e4a2:	je     0x40e48c
  40e4a4:	out    0x44,eax
  40e4a6:	ror    DWORD PTR [eax+0x168a1fde],0x86
  40e4ad:	mov    ecx,0x42839c97
  40e4b2:	xchg   esi,ebx
  40e4b4:	mov    ecx,0x661b7448
  40e4b9:	loopne 0x40e50e
  40e4bb:	or     ebp,DWORD PTR [esi]
  40e4bd:	adc    eax,0xb5836d65
  40e4c2:	mov    dl,0x18
  40e4c4:	cmp    al,0x85
  40e4c6:	pop    esp
  40e4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c8:	adc    edx,DWORD PTR [edx]
  40e4ca:	out    0xfe,al
  40e4cc:	sub    ch,BYTE PTR [esi+0xf]
  40e4cf:	lea    edi,[esi+0x3757ba81]
  40e4d5:	inc    eax
  40e4d6:	mov    DWORD PTR [esi-0x3f],ebp
  40e4d9:	rcl    DWORD PTR [edx-0x39],cl
  40e4dc:	mov    cl,0xfb
  40e4de:	jp     0x40e466
  40e4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4e1:	std    
  40e4e2:	dec    ecx
  40e4e3:	mov    ebp,0xdbf81f45
  40e4e8:	and    BYTE PTR [ecx],cl
  40e4ea:	(bad)  [edi-0x51164ad4]
  40e4f0:	mov    BYTE PTR [esi-0x55],ah
  40e4f3:	adc    edx,0x915d228e
  40e4f9:	imul   eax,DWORD PTR [ebp+0x74e83f94],0xdba578fe
  40e503:	xchg   esi,eax
  40e504:	arpl   WORD PTR [ecx],dx
  40e506:	jmp    0x1695ead8
  40e50b:	mov    esp,DWORD PTR [ebp+0x1abccd8a]
  40e511:	test   BYTE PTR [eax],ah
  40e513:	xor    al,0x5a
  40e515:	sti    
  40e516:	add    ch,BYTE PTR [edi-0x6e30e469]
  40e51c:	aas    
  40e51d:	jbe    0x40e587
  40e51f:	mov    ch,0x1e
  40e521:	inc    esi
  40e522:	mov    ecx,0xb9e6daae
  40e527:	or     BYTE PTR [edx+0x21849587],bh
  40e52d:	push   ss
  40e52e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e52f:	stc    
  40e530:	pop    ss
  40e531:	add    eax,ecx
  40e533:	cdq    
  40e534:	jmp    0xbf1e:0x4b0d74f8
  40e53b:	cwde   
  40e53c:	inc    esp
  40e53d:	mov    edi,0xe1d1fdcf
  40e542:	mov    bh,0x3a
  40e544:	lea    eax,[ecx+0x78605745]
  40e54a:	(bad)  
  40e54b:	mov    ?,WORD PTR [ebx]
  40e54d:	mov    al,ds:0x3168128f
  40e552:	(bad)  
  40e553:	sar    esi,cl
  40e555:	and    dl,BYTE PTR [esi-0x11]
  40e558:	pusha  
  40e559:	je     0x40e55a
  40e55b:	std    
  40e55c:	inc    ecx
  40e55d:	fucompp 
  40e55f:	loopne 0x40e541
  40e561:	icebp  
  40e562:	mov    edi,0x7f4e6e5c
  40e567:	and    al,0x49
  40e569:	jne    0x40e569
  40e56b:	in     eax,0x4c
  40e56d:	and    ch,BYTE PTR [edi-0x7]
  40e570:	inc    ebp
  40e571:	icebp  
  40e572:	xchg   edi,eax
  40e573:	sar    DWORD PTR [ebp+0x351ae4f8],0xf7
  40e57a:	je     0x40e5a2
  40e57c:	cmp    ecx,DWORD PTR [ebx+0x3bd910d]
  40e582:	ret    0xd619
  40e585:	mov    WORD PTR es:[eax-0x8],?
  40e589:	push   edi
  40e58a:	cmc    
  40e58b:	mov    edi,0xe11c3b69
  40e590:	jmp    0xc614:0xfb1dbd73
  40e597:	jbe    0x40e5ca
  40e599:	lahf   
  40e59a:	sub    eax,0x9e9f078c
  40e59f:	cmp    edi,DWORD PTR [esi]
  40e5a1:	div    ebx
  40e5a3:	and    DWORD PTR [ebx+ebx*8+0x43],esp
  40e5a7:	xor    al,0x47
  40e5a9:	pop    ebx
  40e5aa:	addr16 dec edi
  40e5ac:	gs or  eax,0x57d95e6b
  40e5b2:	fs mov esp,0xf6851e7a
  40e5b8:	in     eax,dx
  40e5b9:	push   ss
  40e5ba:	bound  ecx,QWORD PTR [esi-0x39734ed7]
  40e5c0:	xchg   ecx,eax
  40e5c1:	sbb    bl,0x98
  40e5c4:	cwde   
  40e5c5:	popa   
  40e5c6:	fiadd  WORD PTR [edx-0x63]
  40e5c9:	jp     0x40e5b9
  40e5cb:	shl    BYTE PTR [eax+0x1959b515],cl
  40e5d1:	sbb    dh,dh
  40e5d3:	adc    BYTE PTR [edx-0x3d],ch
  40e5d6:	xchg   esp,eax
  40e5d7:	in     al,0x39
  40e5d9:	sbb    al,0x2f
  40e5db:	xor    DWORD PTR [edx],edx
  40e5dd:	test   DWORD PTR [edi+eiz*4-0x6ed28adb],ecx
  40e5e4:	mov    esp,0xead93225
  40e5e9:	jmp    0xad7a:0xf7a7c7da
  40e5f0:	not    DWORD PTR [edx]
  40e5f2:	in     eax,0xb4
  40e5f4:	mov    ebp,0x725ffd41
  40e5f9:	adc    al,0xb6
  40e5fb:	push   ebx
  40e5fc:	mov    esi,0x62d3e72c
  40e601:	dec    edi
  40e602:	out    0xa1,eax
  40e604:	lds    ebp,FWORD PTR [ebp-0x32b4dd66]
  40e60a:	dec    ecx
  40e60b:	out    dx,al
  40e60c:	jmp    0xe8a4:0x4bc14bca
  40e613:	call   0x9dc9:0x48b51ff
  40e61a:	out    dx,eax
  40e61b:	stos   BYTE PTR es:[edi],al
  40e61c:	lods   eax,DWORD PTR ds:[esi]
  40e61d:	loope  0x40e5b3
  40e61f:	mov    dl,0x75
  40e621:	cmp    ebx,0xb6d21f2c
  40e627:	xchg   dl,dl
  40e629:	cmc    
  40e62a:	dec    eax
  40e62b:	aad    0x8c
  40e62d:	jecxz  0x40e665
  40e62f:	jmp    0x40e637
  40e631:	in     eax,dx
  40e632:	push   esi
  40e633:	push   ecx
  40e634:	sbb    BYTE PTR [edi],bl
  40e636:	loopne 0x40e634
  40e638:	xchg   DWORD PTR [esi+0x6c9b411e],ecx
  40e63e:	out    dx,eax
  40e63f:	mov    al,ds:0x855d7ba7
  40e644:	fdiv   DWORD PTR [eax-0x4f8bd0f4]
  40e64a:	data16 adc BYTE PTR [eax+ebx*8-0x46b7c960],cl
  40e652:	rcr    DWORD PTR [eax+0x1a9f6de1],1
  40e658:	rcr    BYTE PTR [ebx],0x5e
  40e65b:	mov    ebp,eax
  40e65d:	and    ah,BYTE PTR [ecx+esi*2-0x20359b86]
  40e664:	leave  
  40e665:	icebp  
  40e666:	daa    
  40e667:	push   esi
  40e668:	inc    esp
  40e669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e66a:	fistp  DWORD PTR [edi+0x2b8e040b]
  40e670:	not    eax
  40e672:	jmp    0xd346b7db
  40e677:	mov    ah,0x22
  40e679:	sub    al,0x9b
  40e67b:	jp     0x40e631
  40e67d:	rcl    DWORD PTR [eax],cl
  40e67f:	push   ecx
  40e680:	out    0x5e,eax
  40e682:	mov    cs,WORD PTR [ebx+0x75f65068]
  40e688:	pop    eax
  40e689:	sub    DWORD PTR [eax+0x41a3337e],ecx
  40e68f:	push   esp
  40e690:	in     eax,dx
  40e691:	(bad)  
  40e692:	(bad)  
  40e693:	pop    eax
  40e694:	call   DWORD PTR [ebp+ebx*2-0x4972f903]
  40e69b:	dec    esp
  40e69c:	push   ecx
  40e69d:	inc    edi
  40e69e:	sbb    eax,DWORD PTR [ebx+0x73]
  40e6a1:	jecxz  0x40e6ef
  40e6a3:	dec    ebx
  40e6a4:	add    al,0xca
  40e6a6:	push   esi
  40e6a7:	sbb    eax,DWORD PTR [eax-0x79]
  40e6aa:	rcr    ah,cl
  40e6ac:	ins    BYTE PTR es:[edi],dx
  40e6ad:	add    DWORD PTR [ebx],0x3a
  40e6b0:	aad    0x6b
  40e6b2:	in     eax,dx
  40e6b3:	scas   eax,DWORD PTR es:[edi]
  40e6b4:	push   0x5a
  40e6b6:	or     al,0x6a
  40e6b8:	adc    edx,edx
  40e6ba:	jne    0x40e715
  40e6bc:	mov    ds:0x7081ae68,eax
  40e6c1:	fadd   DWORD PTR [edi+0x2593114a]
  40e6c7:	stc    
  40e6c8:	hlt    
  40e6c9:	shl    edx,1
  40e6cb:	cmp    esp,edx
  40e6cd:	lds    edx,FWORD PTR [ecx+0x396397f9]
  40e6d3:	shl    dh,1
  40e6d5:	les    eax,FWORD PTR [esi]
  40e6d7:	and    bl,dl
  40e6d9:	pop    ecx
  40e6da:	add    edi,esi
  40e6dc:	adc    DWORD PTR [ecx],ebx
  40e6de:	push   ss
  40e6df:	lock jns 0x40e70a
  40e6e2:	pop    ebx
  40e6e3:	stos   DWORD PTR es:[edi],eax
  40e6e4:	dec    edi
  40e6e5:	ret    
  40e6e6:	pop    ebp
  40e6e7:	push   es
  40e6e8:	sbb    DWORD PTR [ebx+0x51],ebx
  40e6eb:	fcmove st,st(0)
  40e6ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6ee:	enter  0xdfe3,0x2a
  40e6f2:	xchg   esi,eax
  40e6f3:	xor    DWORD PTR [ebp+0x7a],ecx
  40e6f6:	std    
  40e6f7:	lods   eax,DWORD PTR ds:[esi]
  40e6f8:	mov    es,WORD PTR [edi]
  40e6fa:	mov    ds:0xa9ef5532,al
  40e6ff:	or     BYTE PTR [edx],cl
  40e701:	xor    ebp,esi
  40e703:	or     eax,0x9ee3c558
  40e708:	push   eax
  40e709:	push   ebp
  40e70a:	sub    DWORD PTR [ecx],ecx
  40e70c:	push   esi
  40e70d:	into   
  40e70e:	mov    ecx,0x13a7a5d2
  40e713:	mov    edx,0xb654d09
  40e718:	cs pop edi
  40e71a:	adc    BYTE PTR [esp+ebx*2+0x6718234b],0x4f
  40e722:	in     eax,0x6b
  40e724:	cs pop edx
  40e726:	push   ebp
  40e727:	test   al,0x7c
  40e729:	push   eax
  40e72a:	jg     0x40e6d1
  40e72c:	js     0x40e75d
  40e72e:	xchg   esi,eax
  40e72f:	call   0x5a7c:0xa94b15ee
  40e736:	xchg   esi,eax
  40e737:	sub    DWORD PTR [esi-0xa],ebx
  40e73a:	sub    al,0x32
  40e73c:	in     al,0x3c
  40e73e:	scas   eax,DWORD PTR es:[edi]
  40e73f:	and    ebx,DWORD PTR [edi]
  40e741:	in     al,dx
  40e742:	push   ecx
  40e743:	test   eax,0x27c08d40
  40e748:	push   edx
  40e749:	call   0x2c73d4d4
  40e74e:	outs   dx,BYTE PTR ds:[esi]
  40e74f:	into   
  40e750:	daa    
  40e751:	repz mul BYTE PTR cs:[edx-0x50]
  40e756:	adc    DWORD PTR [ebp+0x2c3f41e5],edi
  40e75c:	pop    ebx
  40e75d:	adc    al,0xe2
  40e75f:	es std 
  40e761:	mov    bh,0x83
  40e763:	hlt    
  40e764:	xor    al,0xa5
  40e766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e767:	iret   
  40e768:	into   
  40e769:	out    dx,eax
  40e76a:	fadd   QWORD PTR [edx-0xf]
  40e76d:	mov    al,0x58
  40e76f:	mov    eax,ds:0x48d78a43
  40e774:	sahf   
  40e775:	(bad)  
  40e777:	out    dx,eax
  40e778:	mov    esi,0xb2ae6b5b
  40e77d:	in     eax,dx
  40e77e:	shr    BYTE PTR [edx],cl
  40e780:	xchg   ecx,eax
  40e781:	imul   ecx,DWORD PTR [ecx-0x7e0bad1b],0x6782228c
  40e78b:	(bad)  
  40e78c:	adc    BYTE PTR [eax],al
  40e78e:	mov    ah,0xcb
  40e790:	stos   DWORD PTR es:[edi],eax
  40e791:	neg    DWORD PTR [esi+edx*8-0x52eeb4cf]
  40e798:	dec    edx
  40e799:	xchg   ebx,eax
  40e79a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e79b:	call   0x52092f68
  40e7a0:	test   BYTE PTR [ebp+0x53],dh
  40e7a3:	cld    
  40e7a4:	sar    BYTE PTR [edx+0x4a],1
  40e7a7:	mov    esp,0x9833a27
  40e7ac:	mov    ecx,0x8256218a
  40e7b1:	les    ebp,FWORD PTR [edi+0x4c]
  40e7b4:	mov    ah,0xe4
  40e7b6:	inc    ebp
  40e7b7:	push   eax
  40e7b8:	jge    0x40e73d
  40e7ba:	mov    ebx,0x4b34beda
  40e7bf:	out    dx,al
  40e7c0:	pop    es
  40e7c1:	mov    DWORD PTR [ebx],ebx
  40e7c3:	bound  esp,QWORD PTR [esi]
  40e7c5:	push   0xfffffffb
  40e7c7:	ds push edx
  40e7c9:	xchg   esp,eax
  40e7ca:	cmp    DWORD PTR [edi],edx
  40e7cc:	push   ds
  40e7cd:	ins    BYTE PTR es:[edi],dx
  40e7ce:	(bad)  
  40e7cf:	loop   0x40e784
  40e7d1:	stos   DWORD PTR es:[edi],eax
  40e7d2:	ror    DWORD PTR [ebx-0x1ab7284b],cl
  40e7d8:	stc    
  40e7d9:	xchg   edi,eax
  40e7da:	xchg   edx,eax
  40e7db:	pushf  
  40e7dc:	int3   
  40e7dd:	adc    edx,eax
  40e7df:	popf   
  40e7e0:	or     DWORD PTR [esi],edi
  40e7e2:	add    dh,ah
  40e7e4:	out    dx,eax
  40e7e5:	(bad)  
  40e7e7:	add    BYTE PTR [esi+0x7c2fe7ae],cl
  40e7ed:	adc    al,0x24
  40e7ef:	mov    bh,0xca
  40e7f1:	or     al,0x19
  40e7f3:	jmp    0x6360:0xb584c764
  40e7fa:	aad    0x95
  40e7fc:	mov    esp,0x9bae7c20
  40e801:	adc    DWORD PTR [ecx-0x33],0xe6b222ec
  40e808:	sub    al,0x9
  40e80a:	mov    ch,al
  40e80c:	dec    esi
  40e80d:	arpl   dx,bx
  40e80f:	iret   
  40e810:	mov    ds,WORD PTR [edi]
  40e812:	ffree  st(1)
  40e814:	loop   0x40e7d5
  40e816:	dec    esp
  40e817:	jmp    0x40e821
  40e819:	lea    esi,[edx-0x3710131]
  40e81f:	adc    eax,0xbec1645b
  40e824:	add    DWORD PTR [edi],eax
  40e826:	push   edx
  40e827:	mov    esi,0xfbbbc87e
  40e82c:	pop    esi
  40e82d:	xchg   ebx,eax
  40e82e:	cmc    
  40e82f:	pop    ss
  40e830:	jmp    0xfd35:0xc8325136
  40e837:	push   cs
  40e838:	adc    edx,DWORD PTR [ecx]
  40e83a:	fcmovu st,st(1)
  40e83c:	sub    bh,BYTE PTR [eax]
  40e83e:	inc    edx
  40e83f:	in     al,dx
  40e840:	mov    esp,0x83aa341e
  40e845:	mov    ch,0xae
  40e847:	adc    DWORD PTR [ebp-0x53770f90],ecx
  40e84d:	icebp  
  40e84e:	in     al,0x34
  40e850:	pop    ebx
  40e851:	sub    al,0xc6
  40e853:	clc    
  40e854:	lds    edi,FWORD PTR [esi+0x26143b54]
  40e85a:	fs mov bl,0xaf
  40e85d:	or     BYTE PTR [ebp+eiz*2+0x3f],dh
  40e861:	cmp    al,0x60
  40e863:	cmc    
  40e864:	cmp    esp,DWORD PTR [edx-0x2]
  40e867:	aam    0x60
  40e869:	xchg   ecx,eax
  40e86a:	pusha  
  40e86b:	mov    al,ds:0x21ae00de
  40e870:	pop    ecx
  40e871:	mov    BYTE PTR [eax+0x2e],bh
  40e874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e875:	push   ebp
  40e876:	aas    
  40e877:	rcl    esi,cl
  40e879:	cmp    eax,0x102e22fc
  40e87e:	vpsubd ymm3,ymm3,YMMWORD PTR [edi]
  40e882:	push   cs
  40e883:	js     0x40e854
  40e885:	in     eax,0xe6
  40e887:	xlat   BYTE PTR ds:[ebx]
  40e888:	and    BYTE PTR [edx],ch
  40e88a:	or     DWORD PTR [ecx-0x7a0b7bef],edx
  40e890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e891:	or     al,0x9d
  40e893:	sbb    BYTE PTR [esi],0xf4
  40e896:	mov    bh,0x5c
  40e898:	stos   BYTE PTR es:[edi],al
  40e899:	jnp    0x40e84c
  40e89b:	cdq    
  40e89c:	pusha  
  40e89d:	and    eax,0xf5fd71bc
  40e8a2:	sbb    ah,BYTE PTR [ecx+0x77d711cf]
  40e8a8:	sar    BYTE PTR [ecx+0x1d53a6d0],0x88
  40e8af:	add    dl,bl
  40e8b1:	pop    es
  40e8b2:	jne    0x40e915
  40e8b4:	repz ror BYTE PTR [esi-0x66a5ad57],0xaf
  40e8bc:	sbb    ebx,esp
  40e8be:	add    DWORD PTR [edx],esi
  40e8c0:	rcl    cl,cl
  40e8c2:	aam    0xb4
  40e8c4:	or     BYTE PTR [eax+0x368aa01b],cl
  40e8ca:	dec    ebx
  40e8cb:	mov    ds:0xfd6771a9,al
  40e8d0:	rcr    eax,1
  40e8d2:	mov    dh,0x78
  40e8d4:	leave  
  40e8d5:	xor    al,0x27
  40e8d7:	push   esi
  40e8d8:	and    bh,BYTE PTR [esi-0x5232074f]
  40e8de:	shl    BYTE PTR [edx+0x38e8a205],0x2c
  40e8e5:	fcomp  DWORD PTR [ebx-0x5da201ba]
  40e8eb:	push   es
  40e8ec:	adc    al,bl
  40e8ee:	sbb    ebx,edx
  40e8f0:	mov    edi,DWORD PTR [esi+0x51]
  40e8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8f4:	mov    dl,bl
  40e8f6:	add    al,0xcc
  40e8f8:	inc    edi
  40e8f9:	inc    ecx
  40e8fa:	pop    edx
  40e8fb:	add    al,0xe4
  40e8fd:	sub    DWORD PTR es:[eax],ebp
  40e900:	lea    edi,[edi-0xc8957fc]
  40e906:	ja     0x40e97c
  40e908:	adc    DWORD PTR [ebx-0x40831153],ecx
  40e90e:	pop    eax
  40e90f:	pop    ss
  40e910:	push   esp
  40e911:	mov    eax,ds:0xebceca1e
  40e916:	ins    DWORD PTR es:[edi],dx
  40e917:	mov    ?,WORD PTR [ebx+0x27ade8ae]
  40e91d:	push   cs
  40e91e:	ror    bh,0x1b
  40e921:	xchg   ecx,ebp
  40e923:	jp     0x40e96d
  40e925:	hlt    
  40e926:	and    al,0x11
  40e928:	retf   0x1bed
  40e92b:	(bad)  [edx-0x7]
  40e92e:	xchg   ebp,eax
  40e92f:	cmp    esi,DWORD PTR fs:[esi-0x280ec5a2]
  40e936:	jg     0x40e8cf
  40e938:	out    dx,eax
  40e939:	pop    eax
  40e93a:	ins    DWORD PTR es:[edi],dx
  40e93b:	jmp    0x7228:0x1e78b99a
  40e942:	mov    ch,0xa4
  40e944:	mov    esi,0x904ebf3a
  40e949:	dec    edx
  40e94a:	outs   dx,BYTE PTR ds:[esi]
  40e94b:	push   esi
  40e94c:	fst    DWORD PTR [edx-0x4d998fc7]
  40e952:	mov    dh,0x69
  40e954:	neg    BYTE PTR [edi+0x5253babd]
  40e95a:	and    ecx,ebp
  40e95c:	xchg   ebp,eax
  40e95d:	jns    0x40e944
  40e95f:	mov    esp,0x681baa38
  40e964:	push   edx
  40e965:	daa    
  40e966:	mov    edx,0x5bf6f845
  40e96b:	aam    0xfa
  40e96d:	pop    ds
  40e96e:	dec    eax
  40e96f:	pop    ss
  40e970:	int3   
  40e971:	add    eax,DWORD PTR [edi-0x55]
  40e974:	shl    DWORD PTR [ecx-0x66aa0d78],0xd6
  40e97b:	in     al,dx
  40e97c:	push   edx
  40e97d:	out    0xc4,al
  40e97f:	pop    esi
  40e980:	add    dh,BYTE PTR [esi-0x404a5d80]
  40e986:	ret    
  40e987:	imul   eax,DWORD PTR [ebx+0xbf7007e],0x25
  40e98e:	jnp    0x40e958
  40e990:	in     al,dx
  40e991:	cdq    
  40e992:	adc    cl,ch
  40e994:	cwde   
  40e995:	jne    0x40e940
  40e997:	out    dx,eax
  40e998:	mul    DWORD PTR [ebx]
  40e99a:	les    eax,FWORD PTR [ebp+0x42]
  40e99d:	loop   0x40e996
  40e99f:	ret    
  40e9a0:	jge    0x40e92d
  40e9a2:	in     eax,dx
  40e9a3:	mov    esi,0xed6b0f0c
  40e9a8:	inc    ebx
  40e9a9:	aad    0x5
  40e9ab:	out    0xaf,al
  40e9ad:	test   ah,dl
  40e9af:	cmp    bh,bh
  40e9b1:	cli    
  40e9b2:	xchg   ebx,eax
  40e9b3:	fisttp DWORD PTR [ebp+0x621bbfad]
  40e9b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ba:	pop    ebp
  40e9bb:	xor    DWORD PTR [ecx+0x48c0eee9],ecx
  40e9c1:	push   eax
  40e9c2:	imul   esp,DWORD PTR [edi-0x1a],0x1863cd8a
  40e9c9:	aad    0x64
  40e9cb:	repnz sar DWORD PTR [edi+edi*4-0x6a5c1cee],0xfb
  40e9d4:	jbe    0x40e990
  40e9d6:	or     eax,0xbe961dfe
  40e9db:	sub    al,0x62
  40e9dd:	in     eax,dx
  40e9de:	dec    edx
  40e9df:	les    esp,FWORD PTR [eax]
  40e9e1:	mov    eax,0x9d63100c
  40e9e6:	jmp    0x97d3de86
  40e9eb:	test   al,0xaa
  40e9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ee:	loopne 0x40e995
  40e9f0:	push   ecx
  40e9f1:	add    DWORD PTR [ecx+ecx*1],0xffffffd2
  40e9f5:	inc    ebx
  40e9f6:	imul   bp,WORD PTR ds:0xc7492fdd,0xf0f5
  40e9ff:	shr    BYTE PTR [edx+0x48d471f0],1
  40ea05:	add    ebp,DWORD PTR [edi]
  40ea07:	pop    edi
  40ea08:	iret   
  40ea09:	outs   dx,BYTE PTR ds:[esi]
  40ea0a:	lock pop edi
  40ea0c:	pop    ebx
  40ea0d:	push   0x1d
  40ea0f:	push   cs
  40ea10:	repz add al,0xe6
  40ea13:	mul    ebp
  40ea15:	dec    esi
  40ea16:	mov    BYTE PTR [ebp+0x7],al
  40ea19:	pop    eax
  40ea1a:	in     al,dx
  40ea1b:	mov    dh,0xc0
  40ea1d:	push   ss
  40ea1e:	std    
  40ea1f:	adc    DWORD PTR [ebx],0xf6bc8797
  40ea25:	sbb    cl,BYTE PTR [ecx]
  40ea27:	sub    al,0xff
  40ea29:	jg     0x40e9b7
  40ea2b:	mov    ds:0xe518dcb9,eax
  40ea30:	push   eax
  40ea31:	fld    QWORD PTR [edi-0x43]
  40ea34:	dec    esi
  40ea35:	or     eax,0xa0e5acdb
  40ea3a:	cli    
  40ea3b:	pop    edx
  40ea3c:	dec    esi
  40ea3d:	mov    bl,0x9f
  40ea3f:	fwait
  40ea40:	and    dl,bh
  40ea42:	repz mov bh,0x21
  40ea45:	into   
  40ea46:	dec    ebp
  40ea47:	stc    
  40ea48:	jmp    0x63b388ed
  40ea4d:	add    al,0xad
  40ea4f:	sub    eax,0x99a477db
  40ea54:	clc    
  40ea55:	mov    edx,0x8fd9ec6d
  40ea5a:	mov    fs,WORD PTR ss:[ebp-0x11]
  40ea5e:	mov    dl,0xda
  40ea60:	jge    0x40eac8
  40ea62:	test   BYTE PTR [ebx],cl
  40ea64:	shl    BYTE PTR [eax-0x5],1
  40ea67:	sub    DWORD PTR [eax-0x32],0x2aba3290
  40ea6e:	dec    eax
  40ea6f:	dec    eax
  40ea70:	jns    0x40ea90
  40ea72:	cmc    
  40ea73:	or     ecx,DWORD PTR [esi+edx*4+0x5f038253]
  40ea7a:	stos   DWORD PTR es:[edi],eax
  40ea7b:	imul   esp,DWORD PTR [esi+0x7bb0f0cc],0x47531573
  40ea85:	xor    al,0x99
  40ea87:	lods   al,BYTE PTR ds:[esi]
  40ea88:	push   eax
  40ea89:	cmp    al,0xce
  40ea8b:	pop    ds
  40ea8c:	sub    eax,0x590dbf97
  40ea91:	mov    ebp,0x662ca3
  40ea96:	jle    0x40ea68
  40ea98:	cld    
  40ea99:	and    esi,ebp
  40ea9b:	xor    ah,BYTE PTR [eax]
  40ea9d:	pop    ebp
  40ea9e:	ins    DWORD PTR es:[edi],dx
  40ea9f:	ins    DWORD PTR es:[edi],dx
  40eaa0:	jge    0x40ea6b
  40eaa2:	cmp    dl,BYTE PTR [eax+0x64c50469]
  40eaa8:	pop    esi
  40eaa9:	mov    ds:0x7a059b47,eax
  40eaae:	dec    ebp
  40eaaf:	les    esi,FWORD PTR [edi]
  40eab1:	(bad)  
  40eab2:	call   0xfa8cbf48
  40eab7:	dec    esi
  40eab8:	addr16 inc esi
  40eaba:	xor    BYTE PTR [ecx+0x7e],0x10
  40eabe:	mov    al,0x71
  40eac0:	mov    ecx,0x4cd3e45a
  40eac5:	lds    edx,FWORD PTR [ecx+edi*4]
  40eac8:	or     eax,edi
  40eaca:	add    dl,BYTE PTR [eax-0x7f]
  40eacd:	test   al,0xfe
  40eacf:	push   esi
  40ead0:	mov    ecx,0xf6d5c02e
  40ead5:	les    ecx,FWORD PTR [ecx-0x4]
  40ead8:	fs xchg edi,eax
  40eada:	adc    ebp,DWORD PTR [esi-0x258bdb75]
  40eae0:	or     eax,0xa59e660a
  40eae5:	lock push ecx
  40eae7:	and    BYTE PTR [edi-0x7d9e393b],dl
  40eaed:	push   esi
  40eaee:	cmp    al,0x6f
  40eaf0:	or     al,0xc0
  40eaf2:	jmp    0x5c3e7a32
  40eaf7:	cmp    eax,0x1795bfbb
  40eafc:	and    DWORD PTR cs:[edx],esi
  40eaff:	push   ss
  40eb00:	iret   
  40eb01:	push   edx
  40eb02:	aam    0x74
  40eb04:	(bad)  [ebx+ecx*8+0x6e47321e]
  40eb0b:	lods   eax,DWORD PTR ds:[esi]
  40eb0c:	mov    ds:0xacfeff2a,ax
  40eb12:	jmp    0xcda661b
  40eb17:	and    DWORD PTR [eax+0x42f78d5d],esp
  40eb1d:	dec    edx
  40eb1e:	add    edx,ecx
  40eb20:	(bad)  
  40eb21:	xchg   ecx,eax
  40eb22:	mov    ah,0x67
  40eb24:	fwait
  40eb25:	bnd jl 0x40eb45
  40eb28:	pop    ebp
  40eb29:	dec    ebp
  40eb2a:	xor    bh,BYTE PTR [ebx-0x5991b39d]
  40eb30:	sub    BYTE PTR [edx+0x5c3db209],bl
  40eb36:	adc    BYTE PTR [ebp-0x20],bl
  40eb39:	shl    DWORD PTR [ecx-0xa],1
  40eb3c:	data16 jno 0x40eb28
  40eb3f:	cwde   
  40eb40:	loope  0x40eb8c
  40eb42:	test   eax,0x95c56cc4
  40eb47:	xor    al,0x61
  40eb49:	repnz mov ds:0x44101678,eax
  40eb4f:	xchg   DWORD PTR [edx],ebp
  40eb51:	scas   eax,DWORD PTR es:[edi]
  40eb52:	into   
  40eb53:	hlt    
  40eb54:	jo     0x40ebb6
  40eb56:	lods   eax,DWORD PTR ds:[esi]
  40eb57:	jno    0x40eae2
  40eb59:	xchg   edi,eax
  40eb5a:	in     al,dx
  40eb5b:	jne    0x40ebcb
  40eb5d:	cmp    BYTE PTR cs:[edi-0x39],bh
  40eb61:	push   0xb2b6df7a
  40eb66:	loopne 0x40eb8e
  40eb68:	add    al,0xdf
  40eb6a:	dec    edx
  40eb6b:	mov    al,ds:0xb16d6226
  40eb70:	int3   
  40eb71:	and    bh,ah
  40eb73:	inc    esp
  40eb74:	(bad)  [ebx+eiz*8-0x63543ec2]
  40eb7b:	je     0x40eba9
  40eb7d:	mov    ebp,0x72b2a59f
  40eb82:	push   ss
  40eb83:	dec    ecx
  40eb84:	pop    esp
  40eb85:	int    0x6b
  40eb87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb88:	in     al,0xa
  40eb8a:	or     ecx,DWORD PTR [ebp+ebp*4+0x56]
  40eb8e:	adc    eax,0xe96bda3b
  40eb93:	iret   
  40eb94:	cmp    edi,DWORD PTR [ecx+0x3a8bd05c]
  40eb9a:	mov    eax,0x6306c838
  40eb9f:	fld    st(0)
  40eba1:	into   
  40eba2:	jl     0xc868d563
  40eba8:	xor    BYTE PTR [ecx],al
  40ebaa:	and    DWORD PTR ds:0xedbe69b1,edx
  40ebb0:	pop    ebp
  40ebb1:	mov    eax,ds:0x7fdf3735
  40ebb6:	mov    ecx,0x96667c8a
  40ebbb:	mov    edx,0x8591a097
  40ebc0:	pop    edi
  40ebc1:	call   DWORD PTR [esi]
  40ebc3:	xchg   ebx,eax
  40ebc4:	or     esp,DWORD PTR [esp+ebp*4]
  40ebc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebc8:	out    dx,eax
  40ebc9:	adc    eax,0xc717c8ea
  40ebce:	out    0xe1,al
  40ebd0:	mov    ecx,0x888afc96
  40ebd5:	and    BYTE PTR [ecx+0x6cb32186],cl
  40ebdb:	add    al,0x26
  40ebdd:	mov    dl,0xec
  40ebdf:	out    dx,al
  40ebe0:	je     0x40ebba
  40ebe2:	cmp    edx,eax
  40ebe4:	xchg   edi,eax
  40ebe5:	icebp  
  40ebe6:	cli    
  40ebe7:	dec    ecx
  40ebe8:	pop    ebp
  40ebe9:	xor    dh,BYTE PTR [ebx]
  40ebeb:	aam    0xf3
  40ebed:	push   ecx
  40ebee:	xchg   DWORD PTR [ebp+0x7d46a512],edi
  40ebf4:	pop    es
  40ebf5:	adc    DWORD PTR [ebp+0x50],edx
  40ebf8:	add    al,0x8f
  40ebfa:	ins    DWORD PTR es:[edi],dx
  40ebfb:	lods   al,BYTE PTR ds:[esi]
  40ebfc:	mov    al,0xb9
  40ebfe:	aad    0xab
  40ec00:	lods   al,BYTE PTR ds:[esi]
  40ec01:	push   eax
  40ec02:	int    0x7d
  40ec04:	xchg   ebx,eax
  40ec05:	test   DWORD PTR [edx+0x0],ebp
  40ec08:	push   cs
  40ec09:	pop    ebx
  40ec0a:	inc    edx
  40ec0b:	fistp  DWORD PTR [esi]
  40ec0d:	mov    eax,0x384dac2d
  40ec12:	push   ebp
  40ec13:	jo     0x40ebf5
  40ec15:	(bad)  
  40ec16:	jmp    0x72a7:0xda6340b2
  40ec1d:	sbb    edx,ecx
  40ec1f:	cdq    
  40ec20:	test   DWORD PTR [edi-0x42],edi
  40ec23:	fisub  WORD PTR [ecx]
  40ec25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec26:	add    DWORD PTR [ebx-0x42bc3bf1],edi
  40ec2c:	pusha  
  40ec2d:	rcr    BYTE PTR [edx],0xa7
  40ec30:	popa   
  40ec31:	xor    ch,dh
  40ec33:	mov    ecx,esp
  40ec35:	inc    esp
  40ec36:	xchg   esp,eax
  40ec37:	out    0x2d,eax
  40ec39:	pop    es
  40ec3a:	push   esi
  40ec3b:	call   0xcc8d:0x3cb4dc1d
  40ec42:	cmp    BYTE PTR [ecx+0x5e36e9af],0xef
  40ec49:	cld    
  40ec4a:	mov    edx,0x2dca0c67
  40ec4f:	rcl    DWORD PTR [ecx+edx*4],0xa1
  40ec53:	loop   0x40ec87
  40ec55:	xor    dl,0xd8
  40ec58:	pop    es
  40ec59:	(bad)  
  40ec5a:	not    BYTE PTR [edx]
  40ec5c:	std    
  40ec5d:	push   esp
  40ec5e:	sub    edi,edi
  40ec60:	mov    ah,0xde
  40ec62:	and    edi,DWORD PTR [eax-0x15]
  40ec65:	enter  0x16e1,0xd8
  40ec69:	cmp    al,0x75
  40ec6b:	ins    DWORD PTR es:[edi],dx
  40ec6c:	cmp    esp,DWORD PTR [eax+ebp*4+0x28]
  40ec70:	pop    esi
  40ec71:	or     DWORD PTR [edx-0x5e2a7dce],ebx
  40ec77:	inc    edx
  40ec78:	jbe    0x40ecd0
  40ec7a:	mov    esi,0x44af9f64
  40ec7f:	cmp    ebp,esi
  40ec81:	out    0xa5,eax
  40ec83:	sub    al,0xc9
  40ec85:	dec    edi
  40ec86:	(bad)  
  40ec87:	aam    0x3b
  40ec89:	xchg   ecx,eax
  40ec8a:	pop    edi
  40ec8b:	jmp    0x40eced
  40ec8d:	sub    DWORD PTR [esi],0xde3bc769
  40ec93:	or     dh,bh
  40ec95:	mov    dh,ah
  40ec97:	lock leave 
  40ec99:	jp     0x40ec74
  40ec9b:	sbb    BYTE PTR [eax+0x423c91b5],bh
  40eca1:	push   es
  40eca2:	test   eax,0xac3345d0
  40eca7:	sti    
  40eca8:	xor    DWORD PTR [esp+eax*1+0x31],ebp
  40ecac:	outs   dx,DWORD PTR ds:[esi]
  40ecad:	push   0xa92d28e7
  40ecb2:	(bad)  
  40ecb3:	fmul   QWORD PTR [edi+ebp*1-0x28]
  40ecb7:	jmp    0x40ed02
  40ecb9:	push   esi
  40ecba:	sbb    BYTE PTR [edx+0x33e60821],cl
  40ecc0:	xor    bh,BYTE PTR [esi+ebx*4+0x39a3cac8]
  40ecc7:	stos   DWORD PTR es:[edi],eax
  40ecc8:	cli    
  40ecc9:	cmp    DWORD PTR es:0xc23ac7dc,ebp
  40ecd0:	xor    bh,BYTE PTR [edi-0x74075d61]
  40ecd6:	mov    ah,0xb3
  40ecd8:	jno    0x40ed23
  40ecda:	nop
  40ecdb:	mov    bl,0xe3
  40ecdd:	jmp    0x8b73:0xb56a0d85
  40ece4:	fnstsw WORD PTR [ecx-0x3e507b8]
  40ecea:	std    
  40eceb:	mov    dl,0x9d
  40eced:	ja     0x40ed56
  40ecef:	dec    ecx
  40ecf0:	fdivr  st(1),st
  40ecf2:	(bad)  
  40ecf3:	stc    
  40ecf4:	jbe    0x40ed5c
  40ecf6:	xchg   ebp,eax
  40ecf7:	idiv   DWORD PTR [ebx]
  40ecf9:	sub    ebp,DWORD PTR [eax]
  40ecfb:	cld    
  40ecfc:	js     0x40ecff
  40ecfe:	les    ebp,FWORD PTR [edi+0x52dd78da]
  40ed04:	add    ebp,ecx
  40ed06:	retf   0x9575
  40ed09:	mov    cl,0x72
  40ed0b:	imul   cl
  40ed0d:	sbb    DWORD PTR [ecx],0x3f
  40ed10:	sbb    edx,eax
  40ed12:	xchg   ecx,eax
  40ed13:	(bad)  
  40ed14:	mov    edi,?
  40ed16:	mov    bl,0xc5
  40ed18:	ins    DWORD PTR es:[edi],dx
  40ed19:	dec    edi
  40ed1a:	sar    DWORD PTR [ebx-0x5f],cl
  40ed1d:	add    DWORD PTR [esi+0x47],esi
  40ed20:	loope  0x40ed24
  40ed22:	push   ds
  40ed23:	xchg   ebp,eax
  40ed24:	arpl   WORD PTR [edi-0x31],di
  40ed27:	clc    
  40ed28:	sub    DWORD PTR [esi],esp
  40ed2a:	cmp    dh,al
  40ed2c:	sbb    dh,BYTE PTR [eax+0x3c]
  40ed2f:	mov    eax,ds:0xb17e6901
  40ed34:	sub    BYTE PTR [ebx],bh
  40ed36:	rcl    DWORD PTR ds:0x54d04116,0x3
  40ed3d:	std    
  40ed3e:	int3   
  40ed3f:	gs push edx
  40ed41:	push   eax
  40ed42:	pop    edx
  40ed43:	push   esp
  40ed44:	sbb    al,0xb3
  40ed46:	(bad)  
  40ed47:	sbb    ch,BYTE PTR [edx*8-0x4337a08]
  40ed4e:	inc    eax
  40ed4f:	mov    ds:0x21f3c329,eax
  40ed54:	jo     0x40ecdc
  40ed56:	test   al,0x78
  40ed58:	adc    DWORD PTR [si+0x6b],ebp
  40ed5c:	dec    ecx
  40ed5d:	retfw  0x6e72
  40ed61:	pop    eax
  40ed62:	das    
  40ed63:	pusha  
  40ed64:	dec    ecx
  40ed65:	(bad)  
  40ed66:	jmp    0xdc09:0xae8339c3
  40ed6d:	or     al,0x48
  40ed6f:	jb     0x40ede6
  40ed71:	or     ecx,eax
  40ed73:	imul   dh
  40ed75:	in     al,dx
  40ed76:	push   ebx
  40ed77:	loope  0x40ed62
  40ed79:	retf   0x3fef
  40ed7c:	xchg   edi,eax
  40ed7d:	mov    ds:0xf6dbb7f1,eax
  40ed82:	add    eax,0x8f0b02bd
  40ed87:	scas   al,BYTE PTR es:[edi]
  40ed88:	add    ch,BYTE PTR [ebp+0x75fb1d22]
  40ed8e:	mov    eax,0x66f3ce22
  40ed93:	jmp    0xc71c:0x9e651680
  40ed9a:	mov    bh,0x9f
  40ed9c:	inc    ebx
  40ed9d:	or     esi,DWORD PTR [esp+eiz*8+0x14]
  40eda1:	mov    cl,BYTE PTR [ecx-0x36]
  40eda4:	xchg   edx,eax
  40eda5:	pushf  
  40eda6:	mov    dl,0x1f
  40eda8:	mov    edx,0x47a7a4f
  40edad:	jnp    0x40ed68
  40edaf:	or     esp,DWORD PTR [ebx+0x78]
  40edb2:	mov    ebx,0x7b1ab5f5
  40edb7:	(bad)  
  40edb8:	and    al,0xe
  40edba:	adc    DWORD PTR fs:[esi],0xee7e6ff1
  40edc1:	cli    
  40edc2:	iret   
  40edc3:	jmp    0x40ed6d
  40edc5:	shl    BYTE PTR [eax],cl
  40edc7:	xchg   edx,eax
  40edc8:	and    eax,0xf63bea67
  40edcd:	pop    ds
  40edce:	enter  0xdb5c,0x13
  40edd2:	ret    
  40edd3:	and    al,BYTE PTR [ebx]
  40edd5:	sti    
  40edd6:	inc    edx
  40edd7:	xchg   esp,eax
  40edd8:	or     eax,0xa77b1b11
  40eddd:	gs (bad) 
  40eddf:	shl    bh,cl
  40ede1:	shl    BYTE PTR [eax],cl
  40ede3:	push   ebp
  40ede4:	mov    ds:0xd49380ba,eax
  40ede9:	and    BYTE PTR [esi],ch
  40edeb:	jns    0x40ed7b
  40eded:	mov    esi,DWORD PTR [edi+0x3c]
  40edf0:	sub    eax,0xadd194ea
  40edf5:	inc    eax
  40edf6:	push   ebp
  40edf7:	fwait
  40edf8:	push   eax
  40edf9:	call   0x5908b826
  40edfe:	leave  
  40edff:	or     eax,0x33e09ab9
  40ee04:	mov    ds:0xbca41ca6,al
  40ee09:	test   al,0x1d
  40ee0b:	daa    
  40ee0c:	mov    ds:0x30d5f461,al
  40ee11:	gs xchg esp,eax
  40ee13:	in     al,dx
  40ee14:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40ee16:	test   DWORD PTR [eax-0x47a380ef],ebx
  40ee1c:	mov    bl,0x26
  40ee1e:	fidivr WORD PTR [ebx+0x31]
  40ee21:	or     DWORD PTR [edi-0x73],ecx
  40ee24:	fsub   QWORD PTR [edi+ecx*4+0x1de3920f]
  40ee2b:	out    dx,al
  40ee2c:	jnp    0x40ee7f
  40ee2e:	jae    0x40edc2
  40ee30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee31:	mov    ebp,DWORD PTR [edx-0x4447bd29]
  40ee37:	xchg   ebx,eax
  40ee38:	stc    
  40ee39:	out    dx,eax
  40ee3a:	sub    al,0xab
  40ee3c:	sub    BYTE PTR [ebx],bl
  40ee3e:	(bad)
  40ee41:	ret    
  40ee42:	jp     0x40ee9b
  40ee44:	sub    ebp,esp
  40ee46:	or     al,0xc6
  40ee48:	out    dx,eax
  40ee49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee4a:	lods   al,BYTE PTR ds:[esi]
  40ee4b:	jmp    0x4755:0xb9a72d6b
  40ee52:	pop    ds
  40ee53:	iret   
  40ee54:	jmp    0x9d88:0x16ffe20f
  40ee5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee5c:	push   DWORD PTR [esi+0x52]
  40ee5f:	xor    ecx,ecx
  40ee61:	xor    dl,BYTE PTR [ebx-0x5c4e8fb6]
  40ee67:	jae    0x40ee84
  40ee69:	push   esp
  40ee6a:	push   edi
  40ee6b:	pop    ebp
  40ee6c:	push   ss
  40ee6d:	lahf   
  40ee6e:	mov    edx,0xc8670799
  40ee73:	mov    ecx,0xf01796a4
  40ee78:	xchg   edx,eax
  40ee79:	les    ecx,FWORD PTR [ebp-0x6c7db35e]
  40ee7f:	aaa    
  40ee80:	shl    BYTE PTR [ecx],cl
  40ee82:	jne    0x40ee42
  40ee84:	sub    ch,ch
  40ee86:	fst    DWORD PTR [edi+0x268d23f5]
  40ee8c:	push   edx
  40ee8d:	into   
  40ee8e:	test   BYTE PTR [edi+0x5a],dh
  40ee91:	scas   eax,DWORD PTR es:[edi]
  40ee92:	sahf   
  40ee93:	xchg   esp,eax
  40ee94:	dec    esp
  40ee95:	mov    ah,0xb6
  40ee97:	mov    eax,DWORD PTR [ebp+0x6e]
  40ee9a:	cli    
  40ee9b:	into   
  40ee9c:	mov    eax,ds:0x2eba0810
  40eea1:	out    0x99,eax
  40eea3:	adc    cl,BYTE PTR [ebp-0x4dbb4353]
  40eea9:	sub    DWORD PTR [ebx-0x48],ebp
  40eeac:	ins    BYTE PTR es:[edi],dx
  40eead:	cmp    DWORD PTR [eax-0x5d44c35],0xed089d72
  40eeb7:	xor    eax,DWORD PTR [eax-0x40]
  40eeba:	pop    es
  40eebb:	jno    0x40ee5f
  40eebd:	xor    BYTE PTR [edi+0xf],ah
  40eec0:	jno    0x40eec1
  40eec2:	ret    0x463d
  40eec5:	push   0x3e
  40eec7:	pop    ebp
  40eec8:	sub    ebp,0xffffffe8
  40eecb:	add    al,0xbe
  40eecd:	test   bh,cl
  40eecf:	sub    bl,BYTE PTR [ebx+0xf]
  40eed2:	mov    ebp,0xbc532f3e
  40eed7:	dec    edx
  40eed8:	xchg   BYTE PTR [ecx+0x3e633edd],bl
  40eede:	adc    BYTE PTR [edx-0x1a2a25a],dl
  40eee4:	dec    esp
  40eee5:	mov    ds:0x852d3546,al
  40eeea:	push   ds
  40eeeb:	stos   BYTE PTR es:[edi],al
  40eeec:	mov    ah,0x44
  40eeee:	inc    eax
  40eeef:	pusha  
  40eef0:	(bad)
  40eef4:	jle    0x40ef03
  40eef6:	xchg   esp,eax
  40eef7:	in     eax,0xe
  40eef9:	xor    al,0x4a
  40eefb:	ins    BYTE PTR es:[edi],dx
  40eefc:	jns    0x40eec2
  40eefe:	mov    bh,0xa2
  40ef00:	push   0x56d5f79
  40ef05:	jnp    0x40eee0
  40ef07:	inc    edx
  40ef08:	sti    
  40ef09:	mov    al,ds:0x484c2940
  40ef0e:	icebp  
  40ef0f:	popf   
  40ef10:	test   BYTE PTR [ecx-0x36c03dda],bl
  40ef16:	cwde   
  40ef17:	mov    ecx,0x283681c6
  40ef1c:	adc    BYTE PTR [edi],dh
  40ef1e:	dec    ebx
  40ef1f:	test   al,0x6d
  40ef21:	jb     0x40eeb2
  40ef23:	loopne 0x40eeeb
  40ef25:	dec    eax
  40ef26:	clc    
  40ef27:	fadd   DWORD PTR [edi+0x70f85306]
  40ef2d:	fs inc esp
  40ef2f:	push   ebp
  40ef30:	rol    BYTE PTR [edx+ebp*4-0x20],1
  40ef34:	fldl2e 
  40ef36:	scas   al,BYTE PTR es:[edi]
  40ef37:	es xor al,0x52
  40ef3a:	cli    
  40ef3b:	or     DWORD PTR [esi+0x5a],0x23
  40ef3f:	ja     0x40ef87
  40ef41:	jmp    0xc21e:0x96d9451b
  40ef48:	shr    edx,cl
  40ef4a:	(bad)
  40ef4e:	shl    DWORD PTR [eax+0x38be4c3a],1
  40ef54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef55:	cmp    al,0x68
  40ef57:	pop    edx
  40ef58:	mov    edx,eax
  40ef5a:	fisubr DWORD PTR [eax]
  40ef5c:	pop    ecx
  40ef5d:	mov    bl,0xf3
  40ef5f:	add    BYTE PTR [edx+0x46],0xdc
  40ef63:	mov    ebp,0x6db0d6dd
  40ef68:	sub    eax,0x16e4e14d
  40ef6d:	test   BYTE PTR [ecx],0x5b
  40ef70:	mov    DWORD PTR [ecx],edi
  40ef72:	dec    esp
  40ef73:	and    edx,edi
  40ef75:	mov    dh,0xc
  40ef77:	shl    DWORD PTR cs:[ebp-0x51],cl
  40ef7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef7c:	xor    al,ah
  40ef7e:	stos   BYTE PTR es:[edi],al
  40ef7f:	jno    0x40ef75
  40ef81:	mov    al,0xca
  40ef83:	pop    esp
  40ef84:	outs   dx,BYTE PTR ds:[esi]
  40ef85:	sbb    eax,DWORD PTR [edi+0x617ca9fb]
  40ef8b:	mov    ch,0x21
  40ef8d:	shr    dl,0xce
  40ef90:	jecxz  0x40ef70
  40ef92:	out    0xb2,eax
  40ef94:	xor    DWORD PTR [eax-0xa],edi
  40ef97:	jg     0x40efc1
  40ef99:	xor    eax,0x8e5041a1
  40ef9e:	cmp    BYTE PTR [edi+ebp*8+0x9727043],cl
  40efa5:	push   ss
  40efa6:	jb     0x40f020
  40efa8:	rcl    DWORD PTR [esi-0x77],1
  40efab:	mov    DWORD PTR [esi+0x118d8bdb],edi
  40efb1:	(bad)  
  40efb2:	push   ds
  40efb3:	test   al,0x65
  40efb5:	push   cs
  40efb6:	rol    BYTE PTR ds:0xa551f676,1
  40efbc:	inc    ebx
  40efbd:	jae    0x40efc5
  40efbf:	shl    edx,1
  40efc1:	adc    eax,edi
  40efc3:	xchg   esp,eax
  40efc4:	xchg   esi,eax
  40efc5:	cmp    BYTE PTR [ebx],0x58
  40efc8:	and    ebp,esi
  40efca:	rcl    DWORD PTR [esi+0x1b],cl
  40efcd:	sub    eax,0x2147e735
  40efd2:	sub    al,0x9b
  40efd4:	(bad)
  40efd8:	cli    
  40efd9:	idiv   DWORD PTR [eax+0x48263f3f]
  40efdf:	cmp    al,bh
  40efe1:	xchg   ch,bh
  40efe3:	data16 ds jbe 0x40f054
  40efe7:	add    dl,BYTE PTR [ebx-0x36963fdf]
  40efed:	push   es
  40efee:	rol    DWORD PTR [esi-0x36],cl
  40eff1:	lods   al,BYTE PTR ds:[esi]
  40eff2:	mov    DWORD PTR [edx+eax*4+0x6b673cf4],esi
  40eff9:	pop    ds
  40effa:	pop    ebp
  40effb:	pusha  
  40effc:	mov    ds:0x59d04681,al
  40f001:	mov    esi,0x114b67ce
  40f006:	push   0x759ba557
  40f00b:	mov    edx,DWORD PTR [eax-0x7842179a]
  40f011:	xor    eax,0x4cab8f96
  40f016:	jo     0x40efc9
  40f018:	push   esp
  40f019:	cmp    al,0x55
  40f01b:	not    DWORD PTR [esp+edx*4]
  40f01e:	imul   eax,DWORD PTR [ecx],0x2d
  40f021:	pop    ebp
  40f022:	inc    ebp
  40f023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f024:	xchg   edi,eax
  40f025:	cmp    al,BYTE PTR [ecx]
  40f027:	in     eax,dx
  40f028:	pop    esi
  40f029:	pop    esp
  40f02a:	sub    al,BYTE PTR [ecx+0x68eaa0c6]
  40f030:	pop    es
  40f031:	das    
  40f032:	push   edx
  40f033:	aaa    
  40f034:	and    al,0x64
  40f036:	add    eax,0x4da47d73
  40f03b:	idiv   DWORD PTR [edx+edi*2-0x79bb8fd0]
  40f042:	cmp    eax,0xd68582a2
  40f047:	pusha  
  40f048:	and    dl,al
  40f04a:	push   ebx
  40f04b:	mov    esi,0xe816eb31
  40f050:	aad    0x33
  40f052:	add    ebp,DWORD PTR [eax+0x67aedd57]
  40f058:	clc    
  40f059:	pop    edx
  40f05a:	xor    ebx,DWORD PTR [edi+0x70537313]
  40f060:	aas    
  40f061:	lods   eax,DWORD PTR ds:[esi]
  40f063:	lea    esp,[ebp-0x29]
  40f066:	and    ebx,DWORD PTR [eax]
  40f068:	shr    bl,0x83
  40f06b:	lods   eax,DWORD PTR ds:[esi]
  40f06c:	and    esi,DWORD PTR [esi]
  40f06e:	ins    BYTE PTR es:[edi],dx
  40f06f:	mov    esp,0xd8109bc0
  40f074:	aam    0xd5
  40f076:	lods   al,BYTE PTR ds:[esi]
  40f077:	pop    ds
  40f078:	adc    ebx,DWORD PTR [ebp-0x3a]
  40f07b:	dec    edi
  40f07c:	pop    esp
  40f07d:	xor    edx,DWORD PTR [edx*1-0x4053e89c]
  40f084:	pop    edi
  40f085:	sbb    DWORD PTR [eax+0x4fcce172],ecx
  40f08b:	mov    ds:0xd4e9ed54,eax
  40f091:	sub    esi,0xbf61018d
  40f097:	(bad)  
  40f098:	sti    
  40f099:	mov    ebp,0x5b7a7fad
  40f09e:	mov    al,ds:0xb9da5b32
  40f0a3:	pop    ebx
  40f0a4:	bound  edx,QWORD PTR [esi+0x32daa8f0]
  40f0aa:	pop    ebp
  40f0ab:	adc    esi,DWORD PTR [ecx-0x7194cd3]
  40f0b1:	enter  0xd389,0xfb
  40f0b5:	inc    ecx
  40f0b6:	mov    bl,dh
  40f0b8:	daa    
  40f0b9:	loope  0x40f043
  40f0bb:	(bad)  
  40f0bc:	pop    edx
  40f0bd:	mov    es,WORD PTR [ecx-0x5f]
  40f0c0:	jp     0x40f0ce
  40f0c2:	jecxz  0x40f055
  40f0c4:	sub    bl,ah
  40f0c6:	xchg   edi,eax
  40f0c7:	inc    esi
  40f0c8:	push   ebx
  40f0c9:	mov    dl,0x1a
  40f0cb:	jg     0x40f05b
  40f0cd:	test   eax,0xfba09427
  40f0d2:	push   edx
  40f0d3:	cwde   
  40f0d4:	std    
  40f0d5:	dec    BYTE PTR [esi+0x8]
  40f0d8:	pop    esi
  40f0d9:	stos   DWORD PTR es:[edi],eax
  40f0da:	(bad)  
  40f0db:	push   edx
  40f0dc:	les    esp,FWORD PTR [edi]
  40f0de:	mov    al,0x9f
  40f0e0:	pop    ebp
  40f0e1:	call   0x4a30:0x4971ec8d
  40f0e8:	(bad)  
  40f0e9:	rol    DWORD PTR [eax],1
  40f0eb:	icebp  
  40f0ec:	int3   
  40f0ed:	fdivr  DWORD PTR [esi]
  40f0ef:	pop    ebx
  40f0f0:	xor    ebx,ebx
  40f0f2:	push   ebp
  40f0f3:	in     eax,0xec
  40f0f5:	fstp   TBYTE PTR [eax-0x2e]
  40f0f8:	aaa    
  40f0f9:	out    0xf6,eax
  40f0fb:	mov    eax,DWORD PTR [ecx+0x6f4c06a7]
  40f101:	cwde   
  40f102:	sbb    BYTE PTR [ebp+0x3c],0x7d
  40f106:	push   ebx
  40f107:	xor    BYTE PTR [ecx],ch
  40f109:	mov    fs,WORD PTR [edi-0x14]
  40f10c:	lea    esi,[edx]
  40f10e:	repnz sub BYTE PTR [edx],ah
  40f111:	mov    esi,0xc14ca6d1
  40f116:	or     ebp,DWORD PTR [esp+esi*2+0x4c]
  40f11a:	cwde   
  40f11b:	or     ch,ah
  40f11d:	fsub   st(7),st
  40f11f:	ins    BYTE PTR es:[edi],dx
  40f120:	xor    DWORD PTR [eax-0x42],esi
  40f123:	sbb    eax,0x64402757
  40f128:	sub    DWORD PTR [ebp-0x13c07884],ecx
  40f12e:	mov    ebp,0xbfb54fa6
  40f133:	pop    ss
  40f134:	mov    edx,0xd232d8ae
  40f139:	pop    ds
  40f13a:	mov    cl,0xbb
  40f13c:	sub    eax,0x4971463f
  40f141:	cmp    al,0x5
  40f143:	arpl   bp,si
  40f145:	adc    ah,BYTE PTR [esi-0x1c]
  40f148:	add    esp,DWORD PTR [ebx+0x7a92901a]
  40f14e:	ret    0xe2c7
  40f151:	dec    esi
  40f152:	shl    bl,0xd3
  40f155:	and    al,BYTE PTR [ebx]
  40f157:	fs mov ebx,0xe8a8cf8c
  40f15d:	(bad)  
  40f15e:	fld    QWORD PTR [eax+ebx*2+0x3e]
  40f162:	lods   eax,DWORD PTR ds:[esi]
  40f163:	repz imul ebx,DWORD PTR [ecx],0x5cfe8b77
  40f16a:	std    
  40f16b:	aam    0x3d
  40f16d:	and    ebp,DWORD PTR [esp+ebp*8-0x6a5a6fed]
  40f174:	cmp    DWORD PTR [edi-0x1b08f805],eax
  40f17a:	and    al,0xae
  40f17c:	jae    0x40f1ab
  40f17e:	sub    DWORD PTR [ecx+0x37b71f80],edx
  40f184:	in     eax,dx
  40f185:	jne    0x40f1c0
  40f187:	mov    ah,0x2
  40f189:	mov    cl,0x1c
  40f18b:	add    al,BYTE PTR [eax]
  40f18d:	out    dx,eax
  40f18e:	les    ecx,FWORD PTR [edi]
  40f190:	fsubr  st,st(5)
  40f192:	fnstenv [edx-0x57]
  40f195:	mov    ah,0x5f
  40f197:	and    eax,0xa1006b89
  40f19c:	xor    DWORD PTR [ebp-0x79],0x339ecb81
  40f1a3:	fcom   st(4)
  40f1a5:	xchg   esp,eax
  40f1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a7:	push   ss
  40f1a8:	(bad)  
  40f1a9:	mov    dl,0x3a
  40f1ab:	int3   
  40f1ac:	scas   al,BYTE PTR es:[edi]
  40f1ad:	aad    0x80
  40f1af:	mov    BYTE PTR [edx],bl
  40f1b1:	add    BYTE PTR [ebp+ecx*8-0x5a208971],0x23
  40f1b9:	mov    bh,0x59
  40f1bb:	sub    BYTE PTR [edx],cl
  40f1bd:	jo     0x40f206
  40f1bf:	pop    esi
  40f1c0:	arpl   WORD PTR [esi-0x4eef8327],cx
  40f1c6:	test   bl,0x4
  40f1c9:	mov    bh,cl
  40f1cb:	(bad)  
  40f1cc:	jno    0x40f1a8
  40f1ce:	mov    ds,eax
  40f1d0:	je     0x40f1e4
  40f1d2:	icebp  
  40f1d3:	pop    es
  40f1d4:	or     eax,0xe171b6a5
  40f1d9:	pop    ecx
  40f1da:	xchg   ecx,eax
  40f1db:	mov    bh,0x1c
  40f1dd:	ror    bh,1
  40f1df:	arpl   WORD PTR [edx+0x6521522d],bx
  40f1e5:	mov    ch,0xb3
  40f1e7:	or     bh,BYTE PTR [esi-0x7c]
  40f1ea:	mov    cs,WORD PTR [esi-0x3d]
  40f1ed:	lods   al,BYTE PTR ds:[esi]
  40f1ee:	pop    eax
  40f1ef:	mov    dl,0x30
  40f1f1:	fucom  st(7)
  40f1f3:	mov    esi,0x45616403
  40f1f8:	outs   dx,BYTE PTR ds:[esi]
  40f1f9:	jp     0x40f25e
  40f1fb:	ja     0x40f24c
  40f1fd:	les    ebx,FWORD PTR [ebp+0x29]
  40f200:	cmc    
  40f201:	or     DWORD PTR [ebp-0x3d],esp
  40f204:	mov    cs,WORD PTR [ecx]
  40f206:	cli    
  40f207:	push   0xffffffb3
  40f209:	or     al,0x75
  40f20b:	icebp  
  40f20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f20d:	adc    DWORD PTR ds:0xe7a59b9,edx
  40f213:	and    eax,0x92c16c33
  40f218:	push   ecx
  40f219:	stos   BYTE PTR es:[edi],al
  40f21a:	jmp    0x36d1e2d5
  40f21f:	inc    esi
  40f220:	dec    eax
  40f221:	cmp    DWORD PTR [ecx],ecx
  40f223:	ds (bad) 
  40f225:	(bad)  
  40f226:	cwde   
  40f227:	adc    ebp,DWORD PTR [ebx-0x3c5ad060]
  40f22d:	out    dx,al
  40f22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f22f:	test   al,0xa2
  40f231:	punpckhbw mm4,mm3
  40f234:	enter  0x27bf,0x24
  40f238:	repnz frstor [ebx-0x6a]
  40f23c:	pop    ss
  40f23d:	or     ecx,DWORD PTR [edi]
  40f23f:	mov    ds:0x5ba24f69,eax
  40f244:	popa   
  40f245:	sub    BYTE PTR [ebx-0x4c],0x9c
  40f249:	adc    DWORD PTR [edx-0x152ba2ea],ebx
  40f24f:	adc    eax,0xf4fa30e7
  40f254:	sbb    BYTE PTR [edx-0x57ffb369],dl
  40f25a:	pop    ebp
  40f25b:	icebp  
  40f25c:	in     eax,0xe0
  40f25e:	add    eax,0x5a2bd6ac
  40f263:	xlat   BYTE PTR ds:[ebx]
  40f264:	push   edi
  40f265:	dec    ebx
  40f266:	or     eax,0xffffffa2
  40f269:	pop    eax
  40f26a:	jns    0x40f234
  40f26c:	xor    BYTE PTR [esi+eax*2],ch
  40f26f:	in     al,dx
  40f270:	xchg   ecx,eax
  40f271:	xchg   esp,eax
  40f272:	add    ebp,ebp
  40f274:	pop    edx
  40f275:	sbb    al,0xfe
  40f277:	cwde   
  40f278:	and    eax,0x31776e4e
  40f27d:	call   0xb3fea26
  40f282:	call   0xb6806f23
  40f287:	xchg   ecx,eax
  40f288:	mov    WORD PTR [edx-0x77],ss
  40f28b:	push   edi
  40f28c:	es jo  0x40f2d1
  40f28f:	cwde   
  40f290:	push   esp
  40f291:	int    0x7
  40f293:	inc    edi
  40f294:	lahf   
  40f295:	sti    
  40f296:	jno    0x40f2ce
  40f298:	(bad)
  40f29b:	inc    edx
  40f29c:	shl    BYTE PTR [edx-0x58307fd7],1
  40f2a2:	fwait
  40f2a3:	add    ecx,DWORD PTR [edx+0x6ba90758]
  40f2a9:	push   0x12
  40f2ab:	jmp    0xa615:0xcf6202ef
  40f2b2:	jno    0x40f2e0
  40f2b4:	mov    ah,0x45
  40f2b6:	popa   
  40f2b7:	mov    edi,0x37cb9b0
  40f2bc:	or     DWORD PTR [ecx],0xee2b6b8
  40f2c2:	test   eax,0x7ecff138
  40f2c7:	jmp    0x40f256
  40f2c9:	(bad)  
  40f2ca:	sbb    BYTE PTR cs:[ebx+0x603195f3],dl
  40f2d1:	cmp    dl,BYTE PTR [ecx+0x6cdd0fdf]
  40f2d7:	pop    es
  40f2d8:	push   es
  40f2d9:	addr16 in al,dx
  40f2db:	or     edi,ecx
  40f2dd:	sub    eax,0x6e3a40a
  40f2e2:	mov    al,ds:0x8fe4436a
  40f2e7:	out    0xbd,eax
  40f2e9:	xchg   esp,eax
  40f2ea:	mov    WORD PTR [esi+eax*1+0x50],?
  40f2ee:	dec    edi
  40f2ef:	xchg   esi,eax
  40f2f0:	jnp    0x40f304
  40f2f2:	jno    0x40f336
  40f2f4:	sub    al,0x55
  40f2f6:	dec    edx
  40f2f7:	add    al,0xfa
  40f2f9:	popf   
  40f2fa:	push   0x3d0a4312
  40f2ff:	std    
  40f300:	pop    ebp
  40f301:	in     eax,0xb
  40f303:	aas    
  40f304:	inc    eax
  40f305:	arpl   WORD PTR [ebp-0x2763c7b0],sp
  40f30b:	daa    
  40f30c:	sbb    eax,0x39bdd588
  40f311:	test   eax,0x6e13b86a
  40f316:	sbb    eax,0x7d099fe8
  40f31b:	mov    ecx,es
  40f31d:	pop    edi
  40f31e:	pusha  
  40f31f:	jo     0x40f392
  40f321:	test   BYTE PTR [ebx],cl
  40f323:	fidiv  WORD PTR [ebp-0x1483c7f8]
  40f329:	fimul  WORD PTR [ebp-0x5f]
  40f32c:	dec    eax
  40f32d:	inc    ebx
  40f32e:	mov    ebp,0x2c64fc97
  40f333:	pop    eax
  40f334:	mov    ds:0x15fb7f34,al
  40f339:	sti    
  40f33a:	mov    edi,0x8a54513e
  40f33f:	dec    edi
  40f340:	mov    ch,0x41
  40f342:	jnp    0x40f349
  40f344:	das    
  40f345:	jo     0x40f37a
  40f347:	addr16 mov cl,bl
  40f34a:	ins    BYTE PTR es:[edi],dx
  40f34b:	test   BYTE PTR [edi],bl
  40f34d:	into   
  40f34e:	loopne 0x40f37a
  40f350:	inc    ebx
  40f351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f352:	cmp    BYTE PTR [ebx],bl
  40f354:	dec    ebp
  40f355:	xor    cl,BYTE PTR [esi+0x7fc8b48f]
  40f35b:	jbe    0x40f2ff
  40f35d:	sbb    ch,bh
  40f35f:	adc    esi,DWORD PTR [edx-0xed57d37]
  40f365:	jno    0x40f3b8
  40f367:	pushf  
  40f368:	je     0x40f335
  40f36a:	lock and al,0x71
  40f36d:	imul   ebx,ebx,0xffffffc2
  40f370:	in     eax,dx
  40f371:	mov    esi,0x77fc88bd
  40f376:	int3   
  40f377:	scas   eax,DWORD PTR es:[edi]
  40f378:	dec    ebx
  40f379:	lods   al,BYTE PTR ds:[esi]
  40f37a:	aam    0xcc
  40f37c:	adc    edi,DWORD PTR [edx+ebx*1+0x331a8b1f]
  40f383:	sti    
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x61ae63c4,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	mov    ebp,0xd39cee21
  40f488:	pop    edx
  40f489:	or     al,0x75
  40f48b:	adc    BYTE PTR [esi+0x2d],bh
  40f48e:	mov    al,ds:0x1045aca0
  40f493:	jp     0x40f46b
  40f495:	sahf   
  40f496:	pusha  
  40f497:	jle    0x40f45c
  40f499:	fsubr  DWORD PTR [ebp-0x71]
  40f49c:	addr16 mov ebx,0xe402af2d
  40f4a2:	jl     0x40f473
  40f4a4:	icebp  
  40f4a5:	out    0xf4,eax
  40f4a7:	mov    ds:0xc82a6c11,eax
  40f4ac:	shl    BYTE PTR [edx],0xf6
  40f4af:	fs ret 0xaa05
  40f4b3:	test   al,0x15
  40f4b5:	out    dx,al
  40f4b6:	jp     0x40f443
  40f4b8:	addr16 fsubrp st(3),st
  40f4bb:	ror    BYTE PTR [edx+0x61f85ffd],cl
  40f4c1:	xchg   cl,ch
  40f4c3:	mov    ch,0x6f
  40f4c5:	mov    ch,0xe5
  40f4c7:	rol    BYTE PTR [ebp-0x44],cl
  40f4ca:	mov    edx,0x9856ff
  40f4cf:	jge    0x40f52a
  40f4d1:	enter  0x591a,0xd6
  40f4d5:	out    0xd2,eax
  40f4d7:	jmp    0xc7e2:0x5b0d6579
  40f4de:	push   cs
  40f4df:	mov    BYTE PTR [ecx-0x683bce1],al
  40f4e5:	jmp    0x34399e90
  40f4ea:	or     al,0x6e
  40f4ec:	xchg   ecx,eax
  40f4ed:	add    ebx,DWORD PTR [esi+0x49870557]
  40f4f3:	cli    
  40f4f4:	pop    ss
  40f4f5:	push   cs
  40f4f6:	xchg   ebp,eax
  40f4f7:	jno    0x40f4da
  40f4f9:	xchg   edx,eax
  40f4fa:	into   
  40f4fb:	(bad)
  40f4fe:	push   cs
  40f4ff:	pop    eax
  40f500:	push   ds
  40f501:	fwait
  40f502:	in     eax,0xe1
  40f504:	push   es
  40f505:	jo     0x40f515
  40f507:	ins    DWORD PTR es:[edi],dx
  40f508:	test   DWORD PTR [ebp-0x71],edi
  40f50b:	push   ebx
  40f50c:	xor    ch,bl
  40f50e:	and    al,cl
  40f510:	mov    esp,0x55e75124
  40f515:	fs dec esp
  40f517:	cmc    
  40f518:	aam    0x30
  40f51a:	dec    esi
  40f51b:	xchg   BYTE PTR [ebx+0x73e9be4d],cl
  40f521:	adc    eax,0x7b6fda38
  40f526:	xchg   ebx,eax
  40f527:	xchg   ebx,eax
  40f528:	jno    0x40f59f
  40f52a:	pop    ds
  40f52b:	cmp    al,BYTE PTR ds:0xef34362f
  40f531:	gs adc al,0x5c
  40f534:	inc    ebp
  40f535:	mov    BYTE PTR [ebx+0x17],0x97
  40f539:	(bad)  
  40f53a:	and    ebx,ebp
  40f53c:	adc    ebx,eax
  40f53e:	adc    esp,esi
  40f540:	cmc    
  40f541:	sar    eax,cl
  40f543:	pop    ds
  40f544:	adc    eax,0x627108aa
  40f549:	and    DWORD PTR [eax+esi*1-0x9],edi
  40f54d:	mov    al,ds:0x71d2b694
  40f552:	ret    
  40f553:	(bad)  
  40f554:	iret   
  40f555:	cmp    bl,BYTE PTR [ecx]
  40f557:	dec    edx
  40f558:	add    ch,dl
  40f55a:	xor    esi,ebx
  40f55c:	xchg   esp,eax
  40f55d:	das    
  40f55e:	imul   ebx,DWORD PTR [edx+0x7],0x3e9c5aa6
  40f565:	xchg   ecx,eax
  40f566:	ins    DWORD PTR es:[edi],dx
  40f567:	or     edi,DWORD PTR ds:0x58ed244b
  40f56d:	arpl   WORD PTR [ebx],sp
  40f56f:	mov    ah,0x5
  40f571:	cld    
  40f572:	jg     0x40f544
  40f574:	gs jge 0x40f5f3
  40f577:	shr    BYTE PTR [edi+esi*8-0x17858250],0x2
  40f57f:	push   cs
  40f580:	push   edx
  40f581:	mov    ebp,0xb7b4cfaf
  40f586:	(bad)  
  40f588:	jne    0x40f5a1
  40f58a:	push   esp
  40f58b:	jne    0x40f5bc
  40f58d:	xchg   esi,eax
  40f58e:	xchg   esp,eax
  40f58f:	mov    ?,WORD PTR [ecx+0x6713861c]
  40f595:	sbb    ecx,esi
  40f597:	xchg   ecx,eax
  40f598:	push   cs
  40f599:	ret    0x1514
  40f59c:	adc    eax,DWORD PTR [esi+0x8e91c2]
  40f5a2:	mov    WORD PTR [ebx+0x4],ds
  40f5a5:	mov    BYTE PTR ds:0xe91d6b8c,cl
  40f5ab:	pop    eax
  40f5ac:	sbb    al,0x7f
  40f5ae:	pushf  
  40f5af:	(bad)  ds:0xdbc6273a
  40f5b5:	leave  
  40f5b6:	mov    ecx,0xe0e01533
  40f5bb:	add    eax,0x44ce6b42
  40f5c0:	xor    al,0x75
  40f5c2:	sub    BYTE PTR [ebx-0x22],0xef
  40f5c6:	and    BYTE PTR [ebx],0x71
  40f5c9:	ret    0x142
  40f5cc:	sub    al,0x12
  40f5ce:	sti    
  40f5cf:	iret   
  40f5d0:	xchg   esp,eax
  40f5d1:	xor    al,0xe0
  40f5d3:	sub    BYTE PTR cs:[edx-0x7c7c1e82],ch
  40f5da:	rcl    esi,cl
  40f5dc:	jns    0x40f5de
  40f5de:	dec    esi
  40f5df:	jbe    0x40f617
  40f5e1:	mov    dl,0xc8
  40f5e3:	lods   eax,DWORD PTR ds:[esi]
  40f5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5e5:	cmp    eax,0xfaa10de0
  40f5ea:	sub    edx,DWORD PTR [ebp+0x2a3dce25]
  40f5f0:	dec    edx
  40f5f1:	add    DWORD PTR [ebx-0x73],eax
  40f5f4:	sahf   
  40f5f5:	sbb    DWORD PTR [esi],0xffffffcf
  40f5f8:	inc    esi
  40f5f9:	adc    eax,0xf8d8cb4b
  40f5fe:	add    eax,0x4d60e907
  40f603:	int3   
  40f604:	int    0xb6
  40f606:	fistp  QWORD PTR [eax+0x487c5526]
  40f60c:	push   edx
  40f60d:	scas   eax,DWORD PTR es:[edi]
  40f60e:	gs enter 0x27dd,0x59
  40f613:	and    dh,BYTE PTR [edx-0x385e4bcc]
  40f619:	mov    eax,ds:0x557054ee
  40f61e:	adc    esi,eax
  40f620:	sub    eax,DWORD PTR [eax+eax*4+0x34cf1b62]
  40f627:	pop    edi
  40f628:	fiadd  DWORD PTR [eax+0x545f0248]
  40f62e:	adc    BYTE PTR [ebx],cl
  40f630:	(bad)  
  40f631:	(bad)  
  40f632:	jae    0x40f5ea
  40f634:	sbb    BYTE PTR [edi+ecx*4-0x6f9704f7],ah
  40f63b:	xchg   edx,eax
  40f63c:	mov    esp,0x70bd53d1
  40f641:	pop    edx
  40f642:	mov    al,0xd8
  40f644:	sbb    BYTE PTR [ecx+edi*4+0x1d57a2f3],dl
  40f64b:	imul   ebp,DWORD PTR [ebp+0x6e],0xffffffe9
  40f64f:	and    al,BYTE PTR [ebp-0x7c]
  40f652:	adc    DWORD PTR [edx],ecx
  40f654:	and    eax,0x44aea39d
  40f659:	mov    ecx,0x86b2f7b2
  40f65e:	ret    
  40f65f:	sub    al,0x16
  40f661:	jecxz  0x40f651
  40f663:	jmp    DWORD PTR [edi-0x54]
  40f666:	call   0xe68b:0x3d735b32
  40f66d:	ds xchg ebx,eax
  40f66f:	and    esp,DWORD PTR [esi-0x2e53b356]
  40f675:	add    DWORD PTR [esi],edx
  40f677:	push   esp
  40f678:	test   al,0xf0
  40f67a:	lods   eax,DWORD PTR ds:[esi]
  40f67b:	je     0x40f600
  40f67d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f67e:	xlat   BYTE PTR ds:[ebx]
  40f67f:	sbb    al,0xed
  40f681:	leave  
  40f682:	mov    bl,0x90
  40f684:	enter  0x1bce,0x8f
  40f688:	test   DWORD PTR [ebp+0x311f0852],edx
  40f68e:	cmp    bl,BYTE PTR [eax-0x7fe779d6]
  40f694:	std    
  40f695:	sub    BYTE PTR [edi-0x6e],ch
  40f698:	lods   al,BYTE PTR ds:[esi]
  40f699:	je     0x40f6f0
  40f69b:	sti    
  40f69c:	ss aas 
  40f69e:	inc    edx
  40f69f:	lods   al,BYTE PTR ds:[esi]
  40f6a0:	mov    dh,0x2
  40f6a2:	sar    BYTE PTR [eax],0xd
  40f6a5:	loop   0x40f71f
  40f6a7:	(bad)  
  40f6a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6a9:	push   ds
  40f6aa:	or     al,0x60
  40f6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6ad:	andps  xmm3,xmm7
  40f6b0:	out    dx,al
  40f6b1:	dec    esi
  40f6b2:	mov    ebx,0x2ed1b682
  40f6b7:	pop    eax
  40f6b8:	cmp    dl,BYTE PTR [esp+ebx*2+0x49]
  40f6bc:	cdq    
  40f6bd:	push   ecx
  40f6be:	int3   
  40f6bf:	loope  0x40f72e
  40f6c1:	(bad)  
  40f6c2:	je     0x40f6a2
  40f6c4:	or     DWORD PTR ds:0x3bb8a719,esi
  40f6ca:	bound  eax,QWORD PTR [eax-0x4a]
  40f6cd:	jne    0x40f73d
  40f6cf:	mov    ds:0x3abbdb45,eax
  40f6d4:	sub    bh,BYTE PTR [eax+edi*1-0x11]
  40f6d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6d9:	sahf   
  40f6da:	aas    
  40f6db:	iret   
  40f6dc:	sti    
  40f6dd:	loopne 0x40f678
  40f6df:	fsubr  DWORD PTR [eax+0x16]
  40f6e2:	retf   
  40f6e3:	adc    al,0xea
  40f6e5:	sub    al,0x23
  40f6e7:	mov    eax,ds:0x5e96125a
  40f6ec:	xchg   ecx,eax
  40f6ed:	adc    eax,0x46e02a2e
  40f6f2:	jae    0x40f6e7
  40f6f4:	push   esp
  40f6f5:	jbe    0x40f6ce
  40f6f7:	inc    ebx
  40f6f8:	inc    esp
  40f6f9:	sub    ecx,DWORD PTR [edi-0xdfd5e48]
  40f6ff:	dec    esi
  40f700:	mov    ch,0x90
  40f702:	xor    ch,BYTE PTR [edi-0x37]
  40f705:	scas   eax,DWORD PTR es:[edi]
  40f706:	pop    ebp
  40f707:	icebp  
  40f708:	lods   al,BYTE PTR ds:[esi]
  40f709:	sub    bl,BYTE PTR [eax]
  40f70b:	int    0xe0
  40f70d:	push   cs
  40f70e:	mov    al,0xab
  40f710:	adc    eax,0xef07371f
  40f715:	inc    eax
  40f716:	dec    edi
  40f717:	sbb    eax,0x873e4162
  40f71c:	add    ebp,DWORD PTR [edi]
  40f71e:	sub    ecx,ecx
  40f720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f721:	mov    al,0xf7
  40f723:	bound  edi,QWORD PTR [ebx-0x30c92e19]
  40f729:	inc    ebp
  40f72a:	ds icebp 
  40f72c:	or     eax,0xb53e3cd6
  40f731:	sahf   
  40f732:	imul   esi,DWORD PTR [esp+ecx*8-0x30],0x809643da
  40f73a:	imul   edi,DWORD PTR [ebx-0x2def35df],0xf300132d
  40f744:	xlat   BYTE PTR ds:[ebx]
  40f745:	das    
  40f746:	cmp    al,al
  40f748:	xor    al,0x1b
  40f74a:	mov    al,0x60
  40f74c:	and    eax,0xabee03f3
  40f751:	xchg   cl,ch
  40f753:	mov    esi,0x219e8d6f
  40f758:	jnp    0x40f786
  40f75a:	inc    DWORD PTR [edi]
  40f75c:	(bad)  
  40f75d:	repnz retf 
  40f75f:	aam    0x30
  40f761:	pop    esi
  40f762:	test   al,0x53
  40f764:	push   0x34b325eb
  40f769:	std    
  40f76a:	pop    ebp
  40f76b:	jl     0x40f75e
  40f76d:	xchg   BYTE PTR [esi-0xe4e5ddb],al
  40f773:	div    DWORD PTR [edi]
  40f775:	fdiv   st,st(1)
  40f777:	repnz mov eax,ds:0x4a7ccdf6
  40f77d:	inc    esp
  40f77e:	fdiv   st,st(3)
  40f780:	mov    ebx,0xe3b2b4a4
  40f785:	sbb    esp,DWORD PTR [edi+0xb]
  40f788:	jo     0x40f7b1
  40f78a:	pusha  
  40f78b:	mov    bl,0xa6
  40f78d:	mov    eax,0x9b88a1b8
  40f792:	ret    
  40f793:	fmul   QWORD PTR [ebx-0x7065847b]
  40f799:	scas   eax,DWORD PTR es:[edi]
  40f79a:	test   eax,0x4ae907b3
  40f79f:	in     eax,0x6a
  40f7a1:	call   0x3f05:0xf05a1028
  40f7a8:	gs pop ds
  40f7aa:	mov    ds:0x7f1c86ad,al
  40f7af:	cmp    ebx,DWORD PTR [ecx]
  40f7b1:	adc    BYTE PTR [eax-0x27],ch
  40f7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7b5:	jo     0x40f825
  40f7b7:	rcl    DWORD PTR [edx+ebx*1-0x623dc63f],1
  40f7be:	sub    esi,DWORD PTR [ebp-0x5a]
  40f7c1:	aas    
  40f7c2:	cmp    DWORD PTR [edi+ebp*1+0x1e],eax
  40f7c6:	add    esi,DWORD PTR [ebx-0x5c]
  40f7c9:	and    eax,0xeb275e9e
  40f7ce:	xchg   ecx,eax
  40f7cf:	stos   DWORD PTR es:[edi],eax
  40f7d0:	jne    0x40f7d5
  40f7d2:	retf   
  40f7d3:	bound  ecx,QWORD PTR [edx+0x4f]
  40f7d6:	iret   
  40f7d7:	adc    bl,BYTE PTR [ecx]
  40f7d9:	xchg   esp,eax
  40f7da:	fdivrp st(2),st
  40f7dc:	cmp    BYTE PTR [ebp+ecx*4-0x49f64a40],bh
  40f7e3:	sub    eax,0x6357458a
  40f7e8:	xchg   esi,eax
  40f7e9:	add    eax,0xf681baa2
  40f7ee:	and    ebx,esp
  40f7f0:	xor    eax,0x3d84250b
  40f7f5:	sub    al,0x20
  40f7f7:	push   ebp
  40f7f8:	pop    ebx
  40f7f9:	fidiv  WORD PTR [esi+0x3cd0297e]
  40f7ff:	aam    0x65
  40f801:	jno    0x40f87b
  40f803:	mov    dh,0x51
  40f805:	ret    
  40f806:	xchg   ebp,eax
  40f807:	pop    eax
  40f808:	retf   
  40f809:	jae    0x40f822
  40f80b:	lods   eax,DWORD PTR ds:[esi]
  40f80c:	aad    0xfb
  40f80e:	retf   0x9640
  40f811:	or     DWORD PTR ds:0x6c027f03,ecx
  40f817:	inc    esp
  40f818:	out    dx,eax
  40f819:	test   al,0x1a
  40f81b:	dec    edx
  40f81c:	and    DWORD PTR [edx+eax*4],ebx
  40f81f:	fadd   QWORD PTR [ebp+ebx*2+0x31]
  40f823:	call   0x8526:0x9d5e298d
  40f82a:	into   
  40f82b:	scas   eax,DWORD PTR es:[edi]
  40f82c:	add    BYTE PTR [esi-0x44],bh
  40f82f:	fwait
  40f830:	int    0x53
  40f832:	aaa    
  40f833:	mov    dl,0x24
  40f835:	jbe    0x40f7c3
  40f837:	or     eax,0xbf828f7f
  40f83c:	lods   eax,DWORD PTR ds:[esi]
  40f83d:	fnstsw WORD PTR [ebp-0x263a128f]
  40f843:	and    bh,0x52
  40f846:	adc    ah,BYTE PTR ds:0x6fab1128
  40f84c:	inc    edx
  40f84d:	adc    al,0x32
  40f84f:	and    al,0x9c
  40f851:	ins    DWORD PTR es:[edi],dx
  40f852:	xchg   ebp,eax
  40f853:	xor    ah,BYTE PTR [esi+edx*1+0x1c285d30]
  40f85a:	lock sbb edi,DWORD PTR [esi-0xcae85ac]
  40f861:	cmp    al,0xb1
  40f863:	lods   al,BYTE PTR ds:[esi]
  40f864:	or     bh,BYTE PTR [ebx-0x64]
  40f867:	cmp    edx,DWORD PTR [eax]
  40f869:	in     eax,dx
  40f86a:	data16 xor al,0xe9
  40f86d:	sahf   
  40f86e:	mov    esp,0xd602a658
  40f873:	call   0xc221e543
  40f878:	jno    0x40f80c
  40f87a:	jb     0x40f894
  40f87c:	test   al,0xed
  40f87e:	mov    ch,0x2f
  40f880:	mov    cl,BYTE PTR [eax]
  40f882:	push   eax
  40f883:	jae    0x40f8bc
  40f885:	stos   BYTE PTR es:[edi],al
  40f886:	and    DWORD PTR [edx-0x1],ecx
  40f889:	mov    ebx,0xebe2c491
  40f88e:	jne    0x40f8ad
  40f890:	xchg   esp,eax
  40f891:	stos   DWORD PTR es:[edi],eax
  40f892:	inc    edi
  40f893:	jge    0x40f869
  40f895:	add    eax,0xf4e3b9a6
  40f89a:	push   ds
  40f89b:	mov    ebx,0xbe7b5ea1
  40f8a0:	jne    0x40f8bf
  40f8a2:	fdiv   QWORD PTR [edi+0x631e5c5e]
  40f8a8:	inc    ebp
  40f8a9:	(bad)  
  40f8aa:	cmp    ecx,DWORD PTR [ebp+ebp*1-0x13]
  40f8ae:	inc    ecx
  40f8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b0:	stos   DWORD PTR es:[edi],eax
  40f8b1:	push   esi
  40f8b2:	ret    
  40f8b3:	bound  ebx,QWORD PTR [ebx+ecx*8]
  40f8b6:	xchg   edx,eax
  40f8b7:	mov    cl,0x37
  40f8b9:	push   ebp
  40f8ba:	adc    BYTE PTR [edi-0x7bbceb18],bl
  40f8c0:	ins    BYTE PTR es:[edi],dx
  40f8c1:	and    dh,BYTE PTR [ecx-0x6775fa23]
  40f8c7:	pop    eax
  40f8c8:	into   
  40f8c9:	inc    edx
  40f8ca:	addr16 add eax,0x66a2581
  40f8d0:	push   ebp
  40f8d1:	add    BYTE PTR ds:0x40b29928,dl
  40f8d7:	sbb    al,0xdb
  40f8d9:	shl    DWORD PTR [ebx],1
  40f8db:	js     0x40f8a7
  40f8dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8de:	mov    al,0x3
  40f8e0:	(bad)  
  40f8e1:	cld    
  40f8e2:	nop
  40f8e3:	fwait
  40f8e4:	jmp    0x3a49:0x52fcce7f
  40f8eb:	into   
  40f8ec:	cmovle ecx,esp
  40f8ef:	cmp    ebp,esp
  40f8f1:	sub    BYTE PTR [edi-0x23],cl
  40f8f4:	push   ss
  40f8f5:	pop    edi
  40f8f6:	lods   eax,DWORD PTR ds:[esi]
  40f8f7:	fst    DWORD PTR ds:0x342e6dec
  40f8fd:	mov    esi,DWORD PTR [esi]
  40f8ff:	mov    al,0x66
  40f901:	xchg   edi,eax
  40f902:	xor    eax,0xb4a51305
  40f907:	ret    
  40f908:	xchg   BYTE PTR [esi+0x66],dl
  40f90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f90c:	loop   0x40f966
  40f90e:	int    0x2d
  40f910:	inc    ecx
  40f911:	mov    dl,0x8b
  40f913:	dec    ebx
  40f915:	ret    0x3474
  40f918:	data16 (bad) 
  40f91a:	xor    DWORD PTR [eax+0x6bd14017],edi
  40f920:	pop    ds
  40f921:	ds pop ecx
  40f923:	or     ebp,DWORD PTR [ebp+esi*8+0x74]
  40f927:	fnstenv [edi]
  40f929:	push   ebx
  40f92a:	or     esp,edi
  40f92c:	sbb    DWORD PTR [edi+0x43],eax
  40f92f:	or     eax,0x403d0522
  40f934:	pushf  
  40f935:	or     BYTE PTR [edx-0x3f30a6cc],bh
  40f93b:	inc    eax
  40f93c:	jle    0x40f93e
  40f93e:	retf   0x4728
  40f941:	mov    bl,0x9d
  40f943:	inc    eax
  40f944:	stos   BYTE PTR es:[edi],al
  40f945:	lds    ebx,FWORD PTR [ecx+eiz*8]
  40f948:	xor    ah,al
  40f94a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f94b:	mov    eax,ds:0x1bb4cbe0
  40f950:	add    DWORD PTR [eax+edi*2-0x4c],eax
  40f954:	push   ds
  40f955:	int    0xb5
  40f957:	fldenv ds:0xd65d57a6
  40f95d:	sbb    cl,BYTE PTR [edx+0x41]
  40f960:	adc    ebx,esp
  40f962:	in     al,dx
  40f963:	rol    BYTE PTR [esi+ebp*8-0x7d730581],0x5c
  40f96b:	pop    ecx
  40f96c:	aad    0x7e
  40f96e:	mov    ebx,ebx
  40f970:	enter  0xab5e,0xe
  40f974:	iret   
  40f975:	sub    bh,BYTE PTR [esi*4+0x6d9bb099]
  40f97c:	dec    edx
  40f97d:	sbb    BYTE PTR [esi-0x1f],cl
  40f980:	gs jbe 0x40f90c
  40f983:	push   edx
  40f984:	mov    ch,0x83
  40f986:	sbb    bl,ch
  40f988:	add    DWORD PTR [ebx],ecx
  40f98a:	mov    ah,0xbd
  40f98c:	jb     0x40f916
  40f98e:	add    dl,ah
  40f990:	inc    eax
  40f991:	or     BYTE PTR [esi],ah
  40f993:	cmp    eax,0xb78d981c
  40f998:	into   
  40f999:	cli    
  40f99a:	mov    BYTE PTR [edx],dh
  40f99c:	cs scas al,BYTE PTR es:[edi]
  40f99e:	push   ss
  40f99f:	pop    ss
  40f9a0:	popa   
  40f9a1:	pop    edx
  40f9a2:	xchg   esp,eax
  40f9a3:	xor    eax,0xaa44ef89
  40f9a8:	icebp  
  40f9a9:	retf   
  40f9aa:	push   ecx
  40f9ab:	mov    esi,0x8998b09c
  40f9b0:	pop    ecx
  40f9b1:	sub    bh,bl
  40f9b3:	jg     0x40f9b8
  40f9b5:	gs sub eax,0xf7d55c98
  40f9bb:	ret    0x13bf
  40f9be:	leave  
  40f9bf:	mov    dl,0x5
  40f9c1:	lds    edx,FWORD PTR [eax]
  40f9c3:	dec    ecx
  40f9c4:	cmp    DWORD PTR [ebx-0x76],esp
  40f9c7:	fldenv [eax]
  40f9c9:	lods   al,BYTE PTR ds:[esi]
  40f9ca:	hlt    
  40f9cb:	mov    esp,0x1f637d13
  40f9d0:	jmp    0x40f9ad
  40f9d2:	icebp  
  40f9d3:	adc    eax,0x48b5d5f0
  40f9d8:	or     esi,ebx
  40f9da:	nop
  40f9db:	ret    
  40f9dc:	and    eax,0x8d422976
  40f9e1:	mov    cl,0x8f
  40f9e3:	cmp    DWORD PTR [esi-0x3d],ebx
  40f9e6:	cwde   
  40f9e7:	cld    
  40f9e8:	sub    BYTE PTR [edx],0x68
  40f9eb:	mov    ecx,es
  40f9ed:	test   BYTE PTR [ecx+0x7],0x82
  40f9f1:	jge    0x40fa15
  40f9f3:	shl    cl,0x2b
  40f9f6:	fsubp  st(1),st
  40f9f8:	xor    al,BYTE PTR [ecx+0x65]
  40f9fb:	adc    al,0x2b
  40f9fd:	es xchg edi,eax
  40f9ff:	jns    0x40f9a4
  40fa01:	outs   dx,DWORD PTR ds:[esi]
  40fa02:	pop    edx
  40fa03:	adc    ch,ah
  40fa05:	ret    
  40fa06:	sbb    al,0x8d
  40fa08:	xor    edx,DWORD PTR [ebx-0x7b]
  40fa0b:	cld    
  40fa0c:	repnz popa 
  40fa0e:	or     al,0x28
  40fa10:	add    DWORD PTR [ebp+0x7e7f46c],edi
  40fa16:	popa   
  40fa17:	mov    eax,ds:0x1e9a3ee2
  40fa1c:	fadd   st(5),st
  40fa1e:	rol    DWORD PTR [ecx],0x5a
  40fa21:	cmp    ebp,eax
  40fa23:	in     al,dx
  40fa24:	mov    bl,0x2
  40fa26:	pop    edx
  40fa27:	in     eax,dx
  40fa28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa29:	mov    al,ds:0xf545c094
  40fa2e:	cdq    
  40fa2f:	(bad)  
  40fa30:	loope  0x40fa44
  40fa32:	pop    eax
  40fa33:	sub    BYTE PTR [esi+0x63b640de],cl
  40fa39:	xor    DWORD PTR [edi+0x18],edi
  40fa3c:	push   ecx
  40fa3d:	adc    al,bh
  40fa3f:	adc    ecx,esp
  40fa41:	(bad)  
  40fa42:	and    DWORD PTR [ebx-0x3afaefed],esp
  40fa48:	xlat   BYTE PTR ds:[ebx]
  40fa49:	xor    DWORD PTR [ebx],esi
  40fa4b:	adc    BYTE PTR [esp+esi*8],dh
  40fa4e:	cmc    
  40fa4f:	into   
  40fa50:	daa    
  40fa51:	push   ds
  40fa52:	jg     0x40fa2d
  40fa54:	or     al,0xf6
  40fa56:	fidiv  DWORD PTR ds:0x832c4bd5
  40fa5c:	sub    esp,DWORD PTR [esi]
  40fa5e:	shl    BYTE PTR [ecx-0x4],0xf1
  40fa62:	(bad)  
  40fa63:	das    
  40fa64:	xor    bl,BYTE PTR [ebx+0x2f]
  40fa67:	and    DWORD PTR [ebp+0x19],edx
  40fa6a:	adc    eax,0xb48baa10
  40fa6f:	pop    ecx
  40fa70:	xchg   esp,eax
  40fa71:	inc    edx
  40fa72:	in     eax,0x39
  40fa74:	inc    esp
  40fa75:	add    edx,DWORD PTR [ebx-0x54a57742]
  40fa7b:	xor    BYTE PTR [edx+0x7deb24bc],cl
  40fa81:	std    
  40fa82:	pop    edx
  40fa83:	push   esi
  40fa84:	jg     0x40faa3
  40fa86:	stos   BYTE PTR es:[edi],al
  40fa87:	and    edx,DWORD PTR [esi]
  40fa89:	pop    esp
  40fa8a:	mov    DWORD PTR [ecx+0x35],eax
  40fa8d:	push   edi
  40fa8e:	lods   eax,DWORD PTR ds:[esi]
  40fa8f:	iret   
  40fa90:	sbb    eax,0xab08db2e
  40fa95:	inc    eax
  40fa96:	mov    esp,0xdfd2c8d6
  40fa9b:	push   ecx
  40fa9c:	fcmovb st,st(4)
  40fa9e:	xor    bh,bl
  40faa0:	jl     0x40fa8d
  40faa2:	fcom   st(1)
  40faa4:	lea    edx,[edx]
  40faa6:	ins    DWORD PTR es:[edi],dx
  40faa7:	lods   eax,DWORD PTR ds:[esi]
  40faa8:	jmp    0x40faaf
  40faaa:	pop    esi
  40faab:	sbb    ecx,edi
  40faad:	mov    fs,WORD PTR [edx+0x5c]
  40fab0:	jp     0x40fa3b
  40fab2:	adc    al,0xd
  40fab4:	(bad)  
  40fab5:	push   ds
  40fab6:	mov    ebp,0x6c8c240b
  40fabb:	xchg   edx,eax
  40fabc:	or     DWORD PTR [ebx-0x33],esp
  40fabf:	pushf  
  40fac0:	jne    0x40fa4b
  40fac2:	dec    edx
  40fac3:	aas    
  40fac4:	and    ch,BYTE PTR [esi+0x45f6778b]
  40faca:	jmp    0xedab83bc
  40facf:	lds    esi,FWORD PTR [ebp+eiz*8+0x246cb54d]
  40fad6:	mov    ch,0xcc
  40fad8:	push   ds
  40fad9:	pop    ebx
  40fada:	jbe    0x40fa68
  40fadc:	jae    0x40faf2
  40fade:	cmp    BYTE PTR [eax+edx*1],al
  40fae1:	jg     0x40faa1
  40fae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae4:	imul   ecx,ebp,0xffffffb9
  40fae7:	mov    bl,0xb0
  40fae9:	ins    BYTE PTR es:[edi],dx
  40faea:	lock xchg edi,eax
  40faec:	dec    esi
  40faed:	mov    bl,bl
  40faef:	call   0x5654fd4d
  40faf4:	stos   BYTE PTR es:[edi],al
  40faf5:	mov    bh,0xd1
  40faf7:	adc    eax,esi
  40faf9:	out    dx,eax
  40fafa:	sub    edi,DWORD PTR [ecx-0xf]
  40fafd:	or     esi,esp
  40faff:	fwait
  40fb00:	jp     0x40fb5b
  40fb02:	cmp    BYTE PTR [eax+0x4373f513],dh
  40fb08:	sbb    esp,ebx
  40fb0a:	xor    BYTE PTR [edi],ah
  40fb0c:	add    bh,bh
  40fb0e:	icebp  
  40fb0f:	mov    ds:0x3dfa2597,eax
  40fb14:	ficomp WORD PTR [edi]
  40fb16:	inc    ebp
  40fb17:	jl     0x40fb71
  40fb19:	rcr    DWORD PTR [eax+0x4a2b3c2f],1
  40fb1f:	jnp    0x40fb91
  40fb21:	jp     0x40fb66
  40fb23:	popf   
  40fb24:	std    
  40fb25:	sub    ecx,ebp
  40fb27:	lods   al,BYTE PTR ds:[esi]
  40fb28:	mov    cs,eax
  40fb2a:	push   esp
  40fb2b:	je     0x40fb9f
  40fb2d:	add    BYTE PTR [edx+ebp*4-0x3d],ah
  40fb31:	inc    ecx
  40fb32:	push   ebp
  40fb33:	inc    eax
  40fb34:	mov    bh,0x90
  40fb36:	lds    eax,FWORD PTR [edi]
  40fb38:	inc    edi
  40fb39:	pushf  
  40fb3a:	enter  0xdba8,0x92
  40fb3e:	and    al,0x8e
  40fb40:	rcr    BYTE PTR [ebx],1
  40fb42:	dec    edx
  40fb43:	repnz xchg edi,eax
  40fb45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb46:	cmc    
  40fb47:	sub    dl,ah
  40fb49:	pop    esi
  40fb4a:	ja     0x40fb5b
  40fb4c:	mov    al,0xac
  40fb4e:	lea    esp,[ecx+ebx*2+0x26dbcdd6]
  40fb55:	adc    al,0xaf
  40fb57:	mov    esi,0x8831bcd8
  40fb5c:	(bad)  
  40fb5d:	inc    ebp
  40fb5e:	push   ebp
  40fb5f:	cmp    ah,bl
  40fb61:	sbb    DWORD PTR [edi-0x4a],edi
  40fb64:	jo     0x40fbbf
  40fb66:	js     0x40faf8
  40fb68:	inc    edi
  40fb69:	mov    ss,WORD PTR [ebx+edi*8]
  40fb6c:	adc    al,0xe9
  40fb6e:	adc    ebp,esp
  40fb70:	mov    al,0x11
  40fb72:	ins    BYTE PTR es:[edi],dx
  40fb73:	mov    bl,0x13
  40fb75:	push   es
  40fb76:	ror    edx,cl
  40fb78:	inc    eax
  40fb79:	cwde   
  40fb7a:	or     ch,BYTE PTR [ebp+esi*4+0x6b]
  40fb7e:	adc    eax,edx
  40fb80:	mov    dl,0xb9
  40fb82:	(bad)  
  40fb83:	mov    bl,0xe3
  40fb85:	pop    ebp
  40fb86:	xchg   BYTE PTR [ebx+ecx*1+0x36bc18de],cl
  40fb8d:	hlt    
  40fb8e:	imul   esi,DWORD PTR [esi-0x5d],0x3e
  40fb92:	inc    edx
  40fb93:	add    bh,0x6a
  40fb96:	dec    ebx
  40fb97:	and    ah,BYTE PTR [edx-0xdeaba68]
  40fb9d:	push   0x90190ff0
  40fba2:	stos   DWORD PTR es:[edi],eax
  40fba3:	jle    0x40fb4e
  40fba5:	sbb    dl,BYTE PTR [ebx+0x59458654]
  40fbab:	mov    dl,BYTE PTR [ecx-0x5882f457]
  40fbb1:	adc    al,0xe1
  40fbb3:	push   ds
  40fbb4:	retf   
  40fbb5:	push   ebx
  40fbb6:	xchg   DWORD PTR [ecx+0x20],edi
  40fbb9:	cmp    dh,ah
  40fbbb:	mov    bh,0xe7
  40fbbd:	jo     0x40fc03
  40fbbf:	push   edx
  40fbc0:	inc    ecx
  40fbc1:	lods   al,BYTE PTR ds:[esi]
  40fbc2:	mov    edx,0x50a69546
  40fbc7:	push   esi
  40fbc8:	(bad)  
  40fbc9:	lahf   
  40fbca:	adc    BYTE PTR [edx+0x1da6a927],0x9f
  40fbd1:	out    0x1c,al
  40fbd3:	or     ecx,esi
  40fbd5:	aad    0x60
  40fbd7:	xchg   esi,eax
  40fbd8:	loope  0x40fc06
  40fbda:	add    ecx,DWORD PTR [ebx+0x6c7f242b]
  40fbe0:	mov    ds:0xa6a62e43,al
  40fbe5:	pop    ebx
  40fbe6:	push   ds
  40fbe7:	xor    cl,ch
  40fbe9:	pop    es
  40fbea:	out    dx,al
  40fbeb:	push   cs
  40fbec:	lahf   
  40fbed:	jmp    0x3f32000d
  40fbf2:	call   0x8b626800
  40fbf7:	mov    BYTE PTR [bx+di+0x7452],bh
  40fbfc:	jp     0x40fc6a
  40fbfe:	shl    DWORD PTR [edi-0x77],1
  40fc01:	aas    
  40fc02:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc04:	adc    eax,0x524cd1c
  40fc09:	lahf   
  40fc0a:	in     eax,dx
  40fc0b:	add    BYTE PTR [ebx+0x32],al
  40fc0e:	xlat   BYTE PTR ds:[ebx]
  40fc0f:	jne    0x40fc21
  40fc11:	cdq    
  40fc12:	ja     0x40fbf9
  40fc14:	mov    dl,0x1b
  40fc16:	outs   dx,DWORD PTR ds:[esi]
  40fc17:	pop    ss
  40fc18:	push   ss
  40fc19:	loope  0x40fc59
  40fc1b:	aam    0xf2
  40fc1d:	pop    ds
  40fc1e:	and    ebp,DWORD PTR [eax+0x22]
  40fc21:	jmp    0x40fbe2
  40fc23:	and    ah,dh
  40fc25:	inc    esp
  40fc26:	jnp    0x40fc1b
  40fc28:	mov    ds:0xe150ed0c,al
  40fc2d:	jecxz  0x40fc69
  40fc2f:	mov    DWORD PTR [eax+0xf0c2002],0x81e3ae18
  40fc39:	in     al,dx
  40fc3a:	mov    eax,0x7b4ac2d4
  40fc3f:	jbe    0x40fcb0
  40fc41:	popa   
  40fc42:	cmp    BYTE PTR [eax-0x28],0x8a
  40fc46:	pop    ebp
  40fc47:	add    al,0xca
  40fc49:	jmp    0xfe11de86
  40fc4e:	mov    ecx,0xe87148f4
  40fc53:	push   ebx
  40fc54:	or     al,BYTE PTR [esi-0x3e]
  40fc57:	sub    al,0xdf
  40fc59:	bnd jb 0x40fcc4
  40fc5c:	call   0xc61e:0x5d73e241
  40fc63:	loope  0x40fc7f
  40fc65:	and    al,0xe9
  40fc67:	push   esi
  40fc68:	rol    cl,cl
  40fc6a:	jge    0x40fce3
  40fc6c:	std    
  40fc6d:	repnz (bad) 
  40fc6f:	or     bh,bh
  40fc71:	xlat   BYTE PTR ds:[ebx]
  40fc72:	iret   
  40fc73:	xor    ecx,ecx
  40fc75:	push   edi
  40fc76:	xchg   edx,eax
  40fc77:	sar    dl,0xa8
  40fc7a:	inc    ebp
  40fc7b:	mov    ch,0xe1
  40fc7d:	mov    esp,DWORD PTR es:[edi+0x7c]
  40fc81:	ret    0xc795
  40fc84:	sahf   
  40fc85:	xor    DWORD PTR [esi],edi
  40fc87:	cmp    ah,cl
  40fc89:	jb     0x40fc29
  40fc8b:	inc    esp
  40fc8c:	push   ds
  40fc8d:	sbb    bh,bl
  40fc8f:	fcom   DWORD PTR [edx]
  40fc91:	xchg   edx,eax
  40fc92:	fcom   QWORD PTR [edi+ebx*4-0x11]
  40fc96:	cld    
  40fc97:	scas   al,BYTE PTR es:[edi]
  40fc98:	arpl   WORD PTR [esi+0x38],dx
  40fc9b:	and    esi,DWORD PTR [esi+ebp*1]
  40fc9e:	rcr    ah,cl
  40fca0:	xor    al,BYTE PTR [ecx]
  40fca2:	or     bl,BYTE PTR [edi-0x80]
  40fca5:	shl    ecx,1
  40fca7:	or     bh,ch
  40fca9:	lods   eax,DWORD PTR ds:[esi]
  40fcaa:	mov    dh,0x3b
  40fcac:	or     DWORD PTR [edi+0x6339321d],ebp
  40fcb2:	dec    edi
  40fcb3:	cli    
  40fcb4:	je     0x40fce4
  40fcb6:	fsub   DWORD PTR [ebp-0x3c]
  40fcb9:	xor    esp,DWORD PTR ds:0xe64e6e46
  40fcbf:	int3   
  40fcc0:	mov    edi,0xc133ec20
  40fcc5:	jg     0x40fcdd
  40fcc7:	push   ebp
  40fcc8:	mov    ch,BYTE PTR ds:[esi]
  40fccb:	inc    ecx
  40fccc:	(bad)  
  40fcce:	mov    eax,0x6fd022f7
  40fcd3:	ins    BYTE PTR es:[edi],dx
  40fcd4:	test   edx,ecx
  40fcd6:	das    
  40fcd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcd8:	or     BYTE PTR [ecx-0x286ea8bf],cl
  40fcde:	aaa    
  40fcdf:	push   0x573cadfb
  40fce4:	add    ecx,DWORD PTR [edx+esi*1]
  40fce7:	adc    ch,dl
  40fce9:	cmc    
  40fcea:	xor    eax,0x9a5826ee
  40fcef:	rol    ecx,0x4c
  40fcf2:	sahf   
  40fcf3:	and    dh,al
  40fcf5:	sbb    eax,0x16287667
  40fcfa:	ja     0x40fd05
  40fcfc:	ja     0x40fcb9
  40fcfe:	sahf   
  40fcff:	push   cs
  40fd00:	xchg   ecx,eax
  40fd01:	inc    esi
  40fd02:	pop    ebp
  40fd03:	push   esp
  40fd04:	jl     0x40fd1b
  40fd06:	ins    BYTE PTR es:[edi],dx
  40fd07:	js     0x40fccb
  40fd09:	clc    
  40fd0a:	fstp   DWORD PTR [edx+edi*8+0x2ccdcbd0]
  40fd11:	mov    ebp,0xcdd31cde
  40fd16:	scas   eax,DWORD PTR es:[edi]
  40fd17:	jns    0x40fd1b
  40fd19:	push   ds
  40fd1a:	lahf   
  40fd1b:	sub    al,0x30
  40fd1d:	add    eax,0x5d7104ad
  40fd22:	leave  
  40fd23:	sbb    eax,0xffdc297a
  40fd28:	iret   
  40fd29:	jg     0x40fd64
  40fd2b:	cmp    bl,BYTE PTR [edi+eax*1+0x238bf355]
  40fd32:	sahf   
  40fd33:	call   0x2805:0xe687284b
  40fd3a:	push   eax
  40fd3b:	pop    eax
  40fd3c:	mov    ecx,0x5d3f09a6
  40fd41:	int3   
  40fd42:	mov    edi,0x7e991c5e
  40fd47:	jo     0x40fdbf
  40fd49:	jbe    0x40fd8f
  40fd4b:	inc    esp
  40fd4c:	cmc    
  40fd4d:	xor    BYTE PTR [eax],0x3e
  40fd50:	xlat   BYTE PTR ds:[ebx]
  40fd51:	or     DWORD PTR [esi-0x6eed3a6f],0xb500ca32
  40fd5b:	inc    ecx
  40fd5c:	xchg   BYTE PTR [eax+0x6],cl
  40fd5f:	aad    0xc5
  40fd61:	cmp    BYTE PTR [eax+0x11],dh
  40fd64:	push   ss
  40fd65:	clc    
  40fd66:	xor    BYTE PTR [edi],dl
  40fd68:	dec    ebx
  40fd69:	scas   eax,DWORD PTR es:[edi]
  40fd6a:	cmp    ebp,DWORD PTR [edx+ecx*2-0x19]
  40fd6e:	cmc    
  40fd6f:	inc    ecx
  40fd70:	jns    0x40fd21
  40fd72:	adc    bh,dl
  40fd74:	inc    edi
  40fd75:	push   esp
  40fd76:	push   ebx
  40fd77:	xlat   BYTE PTR ds:[ebx]
  40fd78:	mov    ds:0x809d4299,al
  40fd7d:	aaa    
  40fd7e:	inc    ebp
  40fd7f:	sar    BYTE PTR [eax+0x6845fb98],cl
  40fd85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd86:	or     DWORD PTR [edx],edx
  40fd88:	and    eax,0x15a013d0
  40fd8d:	mov    dl,0x94
  40fd8f:	sbb    BYTE PTR [ecx],0x9b
  40fd92:	(bad)  
  40fd93:	xchg   edx,eax
  40fd94:	inc    esi
  40fd95:	cmp    ah,0x2d
  40fd98:	mov    dl,0x32
  40fd9a:	cmp    eax,0x99c972da
  40fd9f:	inc    esi
  40fda0:	loope  0x40fdfc
  40fda2:	fwait
  40fda3:	jne    0x40fd57
  40fda5:	call   0xb0c62550
  40fdaa:	out    0x32,al
  40fdac:	(bad)  [esi-0x66f13d9e]
  40fdb2:	in     eax,0x7d
  40fdb4:	ret    
  40fdb5:	mov    esi,ss
  40fdb7:	xor    cl,cl
  40fdb9:	stos   BYTE PTR es:[edi],al
  40fdba:	test   BYTE PTR [esi],bl
  40fdbc:	call   eax
  40fdbe:	mov    ebx,DWORD PTR [ecx-0x5c0d920a]
  40fdc4:	dec    esi
  40fdc5:	lods   al,BYTE PTR ds:[esi]
  40fdc6:	jbe    0x40fd58
  40fdc8:	xchg   esi,eax
  40fdc9:	and    edi,DWORD PTR [edx+0x5077d12a]
  40fdcf:	mov    ch,0x8a
  40fdd1:	fs xor eax,0x2cc11771
  40fdd7:	cld    
  40fdd8:	push   DWORD PTR [esi+0x7013f309]
  40fdde:	push   0x1c993a4b
  40fde3:	pop    edx
  40fde4:	add    DWORD PTR [esi+ecx*2-0x21],0x3f542144
  40fdec:	push   edi
  40fded:	out    0xf1,eax
  40fdef:	push   ecx
  40fdf0:	daa    
  40fdf1:	add    eax,DWORD PTR [edi+0x4aeea940]
  40fdf7:	pop    ebx
  40fdf8:	inc    eax
  40fdf9:	and    BYTE PTR [edi],dl
  40fdfb:	xor    cl,BYTE PTR [esi]
  40fdfd:	(bad)  [edx+0x36]
  40fe00:	loop   0x40fe50
  40fe02:	popf   
  40fe03:	xor    al,0xbb
  40fe05:	jne    0x40fde0
  40fe07:	jmp    0xefca2633
  40fe0c:	cdq    
  40fe0d:	pop    ebp
  40fe0e:	pop    eax
  40fe0f:	pop    es
  40fe10:	pop    esp
  40fe11:	mov    bh,0x16
  40fe13:	cld    
  40fe14:	dec    eax
  40fe15:	stos   DWORD PTR es:[edi],eax
  40fe16:	shl    BYTE PTR [esi-0x5f],0xad
  40fe1a:	fcom   st(5)
  40fe1c:	or     eax,0xe5e3caed
  40fe22:	or     BYTE PTR [eax-0x55e30d18],0x6e
  40fe29:	add    ebp,0x2e808808
  40fe2f:	and    ebp,DWORD PTR ds:0x8908e22c
  40fe35:	sar    BYTE PTR [edi+0x65],0xca
  40fe39:	fiadd  DWORD PTR [edx]
  40fe3b:	sbb    esi,DWORD PTR [ecx+0x621ab0e8]
  40fe41:	icebp  
  40fe42:	mov    ds:0xf6073618,al
  40fe47:	int    0x9f
  40fe49:	loopne 0x40fe92
  40fe4b:	and    al,0x43
  40fe4d:	out    0x34,eax
  40fe4f:	mov    BYTE PTR [ebx-0x7cf8bbc1],cl
  40fe55:	jg     0x40fe42
  40fe57:	addr16 sbb dh,dl
  40fe5a:	(bad)  
  40fe5b:	mov    bh,0x6e
  40fe5d:	sub    al,0x10
  40fe5f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40fe61:	(bad)  
  40fe62:	xchg   edx,eax
  40fe63:	test   eax,0xc5fcff22
  40fe68:	sub    BYTE PTR [ecx+edi*1+0x52],ch
  40fe6c:	or     DWORD PTR [eax-0x43],edx
  40fe6f:	mov    cl,0xdf
  40fe71:	fidivr DWORD PTR [ebx-0x1f7438db]
  40fe77:	retf   0x22f4
  40fe7a:	adc    al,0xbd
  40fe7c:	xor    ebp,DWORD PTR [esi+ebx*2+0x4d866b67]
  40fe83:	js     0x40fef0
  40fe85:	popf   
  40fe86:	(bad)  
  40fe87:	cmp    DWORD PTR [esi],esp
  40fe89:	retf   
  40fe8a:	ja     0x40fe92
  40fe8c:	xchg   DWORD PTR [ebp+ebp*2-0x6a],ebx
  40fe90:	dec    ebx
  40fe91:	adc    BYTE PTR [eax-0x72],0xb4
  40fe95:	mov    esi,0x9391d29a
  40fe9a:	mov    esp,0x9909c530
  40fe9f:	jns    0x40fec5
  40fea1:	enter  0x72f2,0x2d
  40fea5:	inc    ebx
  40fea6:	aam    0x3e
  40fea8:	popf   
  40fea9:	sbb    eax,0xdb21c76
  40feae:	sbb    al,0xdd
  40feb0:	and    eax,0x80b9ee6c
  40feb5:	fist   DWORD PTR [edi+0x74d145e2]
  40febb:	push   edi
  40febc:	xor    al,0x6f
  40febe:	and    al,0x79
  40fec0:	das    
  40fec1:	dec    eax
  40fec2:	push   es
  40fec3:	int3   
  40fec4:	scas   eax,DWORD PTR es:[edi]
  40fec5:	mov    bh,0x70
  40fec7:	cmp    dl,BYTE PTR [edx]
  40fec9:	in     al,0x28
  40fecb:	cmp    eax,0x8cb3aee8
  40fed0:	dec    ebx
  40fed1:	mov    al,ds:0x5907b316
  40fed6:	sub    eax,0x587085b1
  40fedb:	jne    0x40fe75
  40fedd:	sub    al,0x23
  40fedf:	pop    ebx
  40fee0:	(bad)  
  40fee1:	push   0x7c
  40fee3:	add    al,BYTE PTR [ecx]
  40fee5:	lahf   
  40fee6:	fcomp  DWORD PTR [eax+ebp*2]
  40fee9:	push   cs
  40feea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feeb:	mov    ah,0xa5
  40feed:	das    
  40feee:	(bad)  
  40feef:	(bad)  gs:[ecx-0x543abdef]
  40fef6:	fsub   st,st(4)
  40fef8:	out    dx,al
  40fef9:	jns    0x40ff5b
  40fefb:	call   0x5dd682fa
  40ff00:	sub    eax,0x758aa621
  40ff05:	jp     0x40fedb
  40ff07:	mov    ebp,cs
  40ff09:	push   0xe8260b9d
  40ff0e:	imul   ebx,DWORD PTR [eax-0x6e],0x55
  40ff12:	les    esi,FWORD PTR [edx]
  40ff14:	xlat   BYTE PTR ds:[ebx]
  40ff15:	aas    
  40ff16:	push   edx
  40ff17:	mov    edi,0x7a273484
  40ff1c:	lods   al,BYTE PTR ds:[esi]
  40ff1d:	xor    al,0xa1
  40ff1f:	xchg   esi,esp
  40ff21:	arpl   WORD PTR [ebp-0x35],dx
  40ff24:	mov    al,ds:0x2ec154a
  40ff29:	out    0xe6,al
  40ff2b:	jbe    0x40feb3
  40ff2d:	pusha  
  40ff2e:	dec    edx
  40ff2f:	jmp    0x5a89290b
  40ff34:	mov    eax,ds:0xf5ca8c7
  40ff39:	hlt    
  40ff3a:	mov    ds:0xf87358f3,eax
  40ff3f:	adc    al,0xbe
  40ff41:	(bad)  
  40ff42:	xchg   ebx,eax
  40ff43:	(bad)  
  40ff44:	fimul  WORD PTR [ebp+0xd5091d0]
  40ff4a:	pop    ss
  40ff4b:	dec    edi
  40ff4c:	sahf   
  40ff4d:	sbb    dl,bh
  40ff4f:	jb     0x40ffa4
  40ff51:	gs (bad) 
  40ff53:	mov    bh,0x5b
  40ff55:	jb     0x40fefa
  40ff57:	pop    edi
  40ff58:	and    ah,BYTE PTR [ecx+0x1d13347c]
  40ff5e:	stos   BYTE PTR es:[edi],al
  40ff5f:	sbb    DWORD PTR [ecx+0x59518288],esp
  40ff65:	xor    dh,BYTE PTR [edi]
  40ff67:	add    edi,eax
  40ff69:	aad    0x2b
  40ff6b:	add    dl,BYTE PTR [ebx]
  40ff6d:	iret   
  40ff6e:	arpl   WORD PTR [eax],si
  40ff70:	pop    esp
  40ff71:	inc    edx
  40ff72:	(bad)  [ecx-0x79]
  40ff75:	popf   
  40ff76:	sbb    edi,DWORD PTR [ebp+0xabff2b1]
  40ff7c:	sar    DWORD PTR [edx],0x96
  40ff7f:	leave  
  40ff80:	adc    eax,0x6a73f1cb
  40ff85:	nop
  40ff86:	(bad)  
  40ff87:	(bad)  
  40ff88:	call   0xb7a162b3
  40ff8d:	xchg   edi,eax
  40ff8e:	popw   es
  40ff90:	cmp    DWORD PTR [edx+eax*1+0x2b],esi
  40ff94:	fld    QWORD PTR [ecx+ebp*2]
  40ff97:	cmp    BYTE PTR [esi+0x300e9cf2],0x4e
  40ff9e:	mov    ch,0x85
  40ffa0:	dec    esi
  40ffa1:	xchg   esp,eax
  40ffa2:	and    esi,ecx
  40ffa4:	sbb    eax,0xce41c025
  40ffa9:	loope  0x40ffb3
  40ffab:	or     edi,0xa186dcab
  40ffb1:	jmp    0x40ffb2
  40ffb3:	es push eax
  40ffb5:	fldcw  WORD PTR [ecx+0x6b33072]
  40ffbb:	mov    al,ds:0x7ca50845
  40ffc0:	and    ch,BYTE PTR [ecx-0x5b194aac]
  40ffc6:	ds push ebx
  40ffc8:	mov    WORD PTR [edi-0x4b8542de],gs
  40ffce:	(bad)  
  40ffd0:	daa    
  40ffd1:	outs   dx,BYTE PTR ds:[esi]
  40ffd2:	cs in  eax,0x7b
  40ffd5:	es popa 
  40ffd7:	pop    esp
  40ffd8:	mov    ch,0xdc
  40ffda:	enter  0xc776,0x7f
  40ffde:	jecxz  0x410033
  40ffe0:	shl    DWORD PTR [ecx],1
  40ffe2:	lea    eax,[ebx+0xe9b1c06]
  40ffe8:	fdivr  DWORD PTR [eax+eax*4-0x1658c68]
  40ffef:	leave  
  40fff0:	loop   0x41001d
  40fff2:	ss (bad) 
  40fff4:	fbld   TBYTE PTR [eax-0x43fe5814]
  40fffa:	sbb    eax,0x94c4d482
  40ffff:	jle    0x40ffa6
  410001:	dec    ebx
  410002:	cwde   
  410003:	mov    ch,BYTE PTR [esi]
  410005:	sbb    eax,0x33278499
  41000a:	add    BYTE PTR [esi-0x7],0x90
  41000e:	adc    DWORD PTR [esi+eax*2],edx
  410011:	push   0x9a137aff
  410016:	cmp    al,0x44
  410018:	fistp  QWORD PTR ds:0x1a7d4aa9
  41001e:	test   BYTE PTR [edx-0x7dafaf19],cl
  410024:	xor    DWORD PTR [edx+ebx*1],edi
  410027:	inc    ebx
  410028:	xor    BYTE PTR [edx-0x27],bh
  41002b:	sub    al,0xa0
  41002d:	dec    ebp
  41002e:	mov    dl,bh
  410030:	or     al,0xde
  410032:	arpl   WORD PTR es:[edi],bx
  410035:	lods   eax,DWORD PTR ds:[esi]
  410036:	sub    BYTE PTR [edx],0xad
  410039:	cmp    ah,ch
  41003b:	inc    esp
  41003c:	jl     0x40ffce
  41003e:	xor    dl,cl
  410040:	cmc    
  410041:	aas    
  410042:	ja     0x4100a4
  410044:	pop    ss
  410045:	cwde   
  410046:	push   cs
  410047:	mov    ah,0x87
  410049:	dec    BYTE PTR [ebp+0x31aa8664]
  41004f:	push   ebp
  410050:	(bad)  
  410051:	retf   
  410052:	jp     0x40ffd4
  410054:	sbb    eax,0xabf77e89
  410059:	ror    DWORD PTR [ecx],0x60
  41005c:	jmp    0xde3837e
  410061:	sub    eax,0x995d6e99
  410066:	lahf   
  410067:	in     eax,dx
  410068:	xlat   BYTE PTR ds:[ebx]
  410069:	bound  edx,QWORD PTR [edi-0x5034398c]
  41006f:	and    esp,DWORD PTR [ecx+0x305eaef2]
  410075:	pop    edx
  410076:	sahf   
  410077:	mov    al,0xd5
  410079:	sub    edi,ebx
  41007b:	cwde   
  41007c:	pusha  
  41007d:	outs   dx,BYTE PTR ds:[esi]
  41007e:	fimul  DWORD PTR [ecx+0x75]
  410081:	push   esi
  410082:	in     al,dx
  410083:	xchg   cl,bl
  410085:	pop    ebx
  410086:	outs   dx,DWORD PTR ds:[esi]
  410087:	shl    dh,1
  410089:	in     al,dx
  41008a:	push   esi
  41008b:	rcl    DWORD PTR [ebx+eax*8+0x625b64ad],0x88
  410093:	push   ss
  410094:	and    al,0x54
  410096:	hlt    
  410097:	push   cs
  410098:	mov    dh,0x19
  41009a:	xchg   bl,dh
  41009c:	pop    edi
  41009d:	test   DWORD PTR [esi+0x7c],0xb135cb4b
  4100a4:	sub    DWORD PTR [ecx-0x10],ebp
  4100a7:	mov    bh,0x22
  4100a9:	dec    esp
  4100aa:	std    
  4100ab:	ss jmp 0x171fe786
  4100b1:	pushf  
  4100b2:	fcom   DWORD PTR [ecx+0xa800ddb]
  4100b8:	add    ah,cl
  4100ba:	test   eax,0x9b1d3a7e
  4100bf:	hlt    
  4100c0:	jp     0x4100e5
  4100c2:	pop    edi
  4100c3:	and    bl,BYTE PTR [edi+eax*8+0x6a]
  4100c7:	push   es
  4100c8:	push   ss
  4100c9:	repnz mov gs,ecx
  4100cc:	sub    al,0x4a
  4100ce:	cmp    DWORD PTR [ebx+0x6],edx
  4100d1:	cmp    BYTE PTR [esi-0x4f3242fe],0x24
  4100d8:	and    BYTE PTR [ebp-0x3e],0x3
  4100dc:	test   al,0x8d
  4100de:	bound  ebx,QWORD PTR [eax-0x5ee27d81]
  4100e4:	call   0xa8ff76f7
  4100e9:	push   0x5a20103
  4100ee:	cdq    
  4100ef:	jo     0x410103
  4100f1:	push   0xffffffe2
  4100f3:	lods   al,BYTE PTR ds:[esi]
  4100f4:	sbb    bh,BYTE PTR [eax+0x36]
  4100f7:	repz xchg edi,esi
  4100fa:	out    0x32,eax
  4100fc:	xor    BYTE PTR [eax+ebp*8],bh
  4100ff:	add    eax,0xbdf7a358
  410104:	retf   0x4c74
  410107:	clc    
  410108:	pop    ebx
  410109:	cmc    
  41010a:	sbb    DWORD PTR [eax+0x1cf9d91b],ebp
  410110:	xor    eax,0x60722a33
  410115:	sahf   
  410116:	mov    BYTE PTR [esi+0x35ca1013],bh
  41011c:	cmp    al,0x96
  41011e:	nop
  41011f:	add    ch,dl
  410121:	pop    edi
  410122:	push   0xffffffe0
  410124:	jbe    0x4100c5
  410126:	scas   al,BYTE PTR es:[edi]
  410127:	(bad)  
  410128:	imul   edi,DWORD PTR [edx+edi*2],0x1d
  41012c:	xor    bh,BYTE PTR [ebp+0x5]
  41012f:	repnz xor ebx,ecx
  410132:	inc    esp
  410133:	sbb    al,0x72
  410135:	in     al,dx
  410136:	pop    esp
  410137:	retf   
  410138:	jl     0x595c517a
  41013e:	test   eax,0xda7bb6
  410143:	shl    ebx,1
  410145:	test   eax,0x1ffa3a41
  41014a:	popf   
  41014b:	mov    al,ds:0xc0237718
  410150:	xor    BYTE PTR [esp+ebx*8],cl
  410153:	data16 jle 0x410152
  410156:	xchg   esp,eax
  410157:	fnstenv [edi+0x3a]
  41015a:	inc    ecx
  41015b:	push   0xffffffa6
  41015d:	mov    esi,0x6d5329d8
  410162:	(bad)  
  410163:	int    0x1c
  410165:	jbe    0x410175
  410167:	bound  eax,QWORD PTR [esi]
  410169:	mov    eax,ds:0x81c33f1e
  41016e:	cli    
  41016f:	xchg   esp,eax
  410170:	xchg   edi,eax
  410171:	inc    esp
  410172:	pop    esi
  410173:	mov    DWORD PTR [esi+0x22],eax
  410176:	xchg   BYTE PTR ds:[eax+0x4cf4bc98],dl
  41017d:	sub    ebx,DWORD PTR [ebx]
  41017f:	xchg   esp,eax
  410180:	dec    esi
  410181:	mov    WORD PTR [edx+esi*4-0x59],?
  410185:	nop
  410186:	pop    ecx
  410187:	sbb    eax,0xbe288bd4
  41018c:	mov    al,ds:0x56d19bcc
  410191:	jb     0x4101f3
  410193:	jg     0x4101fe
  410195:	js     0x4101f3
  410197:	pushf  
  410198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410199:	call   0x8b25:0x4ca6e468
  4101a0:	cmp    bh,BYTE PTR [esp+eiz*2+0x736d1a19]
  4101a7:	mov    al,0xb0
  4101a9:	ficomp DWORD PTR [edi-0x73]
  4101ac:	mov    dh,0xb2
  4101ae:	(bad)  
  4101af:	jge    0x4101a1
  4101b1:	jecxz  0x410185
  4101b3:	int3   
  4101b4:	or     eax,0x31c66c16
  4101b9:	stc    
  4101ba:	xor    esp,esp
  4101bc:	dec    ecx
  4101bd:	mov    edx,0x5240173f
  4101c2:	xchg   edx,eax
  4101c3:	xor    al,0x96
  4101c5:	je     0x4101f8
  4101c7:	lock (bad) 
  4101c9:	inc    ebp
  4101ca:	inc    eax
  4101cb:	add    ebx,0x3a
  4101ce:	jge    0x410174
  4101d0:	ins    BYTE PTR es:[edi],dx
  4101d1:	jp     0x410221
  4101d3:	jb     0x4101c4
  4101d5:	sti    
  4101d6:	fwait
  4101d7:	bound  esp,QWORD PTR [edx+ebx*4]
  4101da:	inc    ebp
  4101db:	fld    QWORD PTR [edi]
  4101dd:	fidivr DWORD PTR [edx-0x28]
  4101e0:	rol    DWORD PTR [ecx-0x65],0x11
  4101e4:	sub    al,0x44
  4101e6:	fld    QWORD PTR [ebx+ebp*4]
  4101e9:	push   ss
  4101ea:	jne    0x4101e1
  4101ec:	test   BYTE PTR [ecx+0x23],cl
  4101ef:	jmp    0x1dc2:0x8c2d19e8
  4101f6:	push   0x1365aa4
  4101fb:	pushf  
  4101fc:	jbe    0x4101f0
  4101fe:	mov    ah,0x8f
  410200:	sub    DWORD PTR [ebx-0x697b7456],0x79
  410207:	adc    ah,BYTE PTR [ebx+0x7d5d71f2]
  41020d:	int    0xd2
  41020f:	mov    BYTE PTR [ebx-0x26],dl
  410212:	sar    DWORD PTR [eax+0x6268256b],cl
  410218:	aas    
  410219:	cmp    edx,DWORD PTR [edi+0x4b707c07]
  41021f:	fmul   DWORD PTR [edx+0x3b]
  410222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410223:	push   ebx
  410224:	push   ds
  410225:	mov    ah,0xc9
  410227:	or     ah,bl
  410229:	arpl   WORD PTR [ecx+0x3b],cx
  41022c:	mov    edx,0xe4bfbebd
  410231:	loope  0x41021d
  410233:	shl    DWORD PTR [edi+0xc],0x77
  410237:	mov    ebx,0xaff82264
  41023c:	popf   
  41023d:	std    
  41023e:	sub    edi,DWORD PTR [edx+0x6d9ce93]
  410244:	sahf   
  410245:	ds retf 0x532f
  410249:	aam    0xe1
  41024b:	neg    DWORD PTR [edx-0x17535554]
  410251:	rol    DWORD PTR [edi+0x3d515229],cl
  410257:	lds    edx,FWORD PTR [ecx]
  410259:	aad    0x72
  41025b:	dec    ecx
  41025c:	test   BYTE PTR [edx+edi*1-0x13f40732],cl
  410263:	frstor [ebx]
  410265:	mov    esi,0xc27edfdb
  41026a:	inc    edi
  41026b:	dec    edi
  41026c:	jle    0x410272
  41026e:	sbb    edx,DWORD PTR [edi]
  410270:	jns    0x4102ba
  410272:	scas   eax,DWORD PTR es:[edi]
  410273:	outs   dx,BYTE PTR ds:[esi]
  410274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410275:	mov    cl,0x9
  410277:	test   DWORD PTR [ebp-0x3215154c],ebp
  41027d:	(bad)  
  41027e:	lods   al,BYTE PTR ds:[esi]
  41027f:	jp     0x4102b4
  410281:	clc    
  410282:	mov    dl,0x48
  410284:	sahf   
  410285:	cmp    BYTE PTR [ebx+0xfc528ae],dl
  41028b:	jmp    0x410220
  41028d:	in     al,dx
  41028e:	sahf   
  41028f:	jge    0x410255
  410291:	in     al,dx
  410292:	jno    0x410225
  410294:	adc    al,BYTE PTR [ebp-0xc78038e]
  41029a:	bound  edi,QWORD PTR [ebx+0x7d0dc2ea]
  4102a0:	or     esi,ecx
  4102a2:	cmp    ebp,DWORD PTR [edx-0x4fdee1df]
  4102a8:	js     0x4102e2
  4102aa:	fmul   DWORD PTR [ebp+eiz*8-0x33]
  4102ae:	sti    
  4102af:	adc    DWORD PTR [ecx],eax
  4102b1:	cmp    esi,DWORD PTR [eax]
  4102b3:	sub    edi,0x51
  4102b6:	mov    ah,0xe6
  4102b8:	push   ds
  4102b9:	or     dh,0xbe
  4102bc:	imul   ebp
  4102be:	mov    ch,ch
  4102c0:	add    eax,DWORD PTR gs:[edi+0x798511e7]
  4102c7:	out    0x10,eax
  4102c9:	mov    edx,DWORD PTR [ebp+0x4a499a5e]
  4102cf:	push   ebp
  4102d0:	adc    al,0x86
  4102d2:	popa   
  4102d3:	or     edi,DWORD PTR [ebp*2+0x4939023e]
  4102da:	in     al,0x43
  4102dc:	test   DWORD PTR [ebx-0x60430be1],edi
  4102e2:	enter  0xcaf3,0x3e
  4102e6:	dec    esp
  4102e7:	stc    
  4102e8:	dec    esp
  4102e9:	daa    
  4102ea:	inc    ebx
  4102eb:	pop    es
  4102ec:	pushf  
  4102ed:	shl    DWORD PTR [ebx],0x8b
  4102f0:	imul   edi,DWORD PTR [eax],0xb1c88ce7
  4102f6:	pusha  
  4102f7:	jmp    0x410333
  4102f9:	lods   al,BYTE PTR ds:[esi]
  4102fa:	jmp    0xc8fe5e77
  4102ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410300:	inc    eax
  410301:	mov    bh,0xdf
  410303:	push   esi
  410304:	stos   DWORD PTR es:[edi],eax
  410305:	jle    0x41033c
  410307:	pushf  
  410308:	xchg   edi,eax
  410309:	fbld   TBYTE PTR es:[eax+0x5b]
  41030d:	cmp    BYTE PTR [esi],bh
  41030f:	jo     0x410372
  410311:	inc    eax
  410312:	pop    ebp
  410313:	in     al,dx
  410314:	in     eax,dx
  410315:	jmp    0xe9341d7b
  41031a:	mov    esp,0x993b86fe
  41031f:	jne    0x4102cc
  410321:	idiv   DWORD PTR [edx+esi*8-0x66]
  410325:	push   edi
  410326:	xchg   ebx,eax
  410327:	scas   eax,DWORD PTR es:[edi]
  410328:	lods   eax,DWORD PTR ds:[esi]
  410329:	rcr    DWORD PTR [ebp-0x1b8debeb],cl
  41032f:	jecxz  0x41033d
  410331:	retf   
  410332:	mov    ah,0x96
  410334:	aad    0xd1
  410336:	adc    ah,dl
  410338:	cmp    esp,DWORD PTR [edx]
  41033a:	jp     0x4102db
  41033c:	dec    esp
  41033d:	sbb    esi,eax
  41033f:	add    BYTE PTR [ebp+0x3],ch
  410342:	icebp  
  410343:	push   0x273466d
  410348:	mov    edx,0xb96e6310
  41034d:	mov    ebx,0xb0c72c51
  410352:	ins    BYTE PTR es:[edi],dx
  410353:	jmp    0x3f957490
  410358:	mov    esi,DWORD PTR [ecx-0x2f]
  41035b:	lds    edi,FWORD PTR [edx]
  41035d:	xchg   ebx,eax
  41035e:	push   ebp
  41035f:	mov    eax,0xb0e36632
  410364:	mov    dl,0xba
  410366:	div    DWORD PTR [edx+0x24f8ca03]
  41036c:	sbb    al,BYTE PTR [edx+0x22]
  41036f:	mov    al,0xc1
  410371:	ror    dl,0xfc
  410374:	inc    eax
  410375:	addr16 mov edx,edi
  410378:	shl    DWORD PTR ds:0x9f6fa666,1
  41037e:	enter  0x6d07,0x41
  410382:	mov    DWORD PTR [eax-0x2a],edi
  410385:	dec    ebx
  410386:	(bad)  
  410387:	push   eax
  410388:	xchg   esi,eax
  410389:	ja     0x410320
  41038b:	jg     0x410323
  41038d:	lock clc 
  41038f:	mov    bl,0x62
  410391:	add    esi,esi
  410393:	leave  
  410394:	int3   
  410395:	add    dh,ah
  410397:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  410399:	dec    ebp
  41039a:	mov    ah,cl
  41039c:	mov    dl,0xf9
  41039e:	jmp    0x2afba0b5
  4103a3:	mov    esp,0xec10bbc6
  4103a8:	push   es
  4103a9:	jae    0x4103ad
  4103ab:	pop    ecx
  4103ac:	lea    eax,[ebp-0x16fea1a5]
  4103b2:	xor    eax,0x1ee9eb88
  4103b7:	push   ecx
  4103b8:	mov    eax,ds:0xc8c42624
  4103bd:	sub    DWORD PTR [ebx-0x7c],ebp
  4103c0:	ins    BYTE PTR es:[edi],dx
  4103c1:	xor    DWORD PTR [ebp+0x36],ebp
  4103c4:	retf   
  4103c5:	jne    0x410355
  4103c7:	dec    ecx
  4103c8:	mov    ebx,0x68aa2daf
  4103cd:	and    BYTE PTR [ebp+0x257d0633],dl
  4103d3:	jnp    0x41044e
  4103d5:	pop    ecx
  4103d6:	mov    bl,0xff
  4103d8:	pop    edi
  4103d9:	dec    ecx
  4103da:	push   cs
  4103db:	pop    edx
  4103dc:	lods   eax,DWORD PTR ds:[esi]
  4103dd:	ins    DWORD PTR es:[edi],dx
  4103de:	mov    esp,0xe9e86c8e
  4103e3:	xchg   BYTE PTR [edx-0x29f37211],dl
  4103e9:	vmwrite esi,DWORD PTR [ecx]
  4103ec:	sbb    DWORD PTR [edi+0x16],edx
  4103ef:	pusha  
  4103f0:	lea    esi,[edx]
  4103f2:	enter  0x6d9f,0x95
  4103f6:	xchg   edx,eax
  4103f7:	push   ss
  4103f8:	dec    edx
  4103f9:	stc    
  4103fa:	nop
  4103fb:	arpl   WORD PTR [ebx-0x52],ax
  4103fe:	int3   
  4103ff:	leave  
  410400:	outs   dx,DWORD PTR ds:[esi]
  410401:	mov    al,0x4
  410403:	dec    ebx
  410404:	xchg   esi,eax
  410405:	push   eax
  410406:	int    0x7b
  410408:	xchg   esp,eax
  410409:	xor    al,BYTE PTR [ebx]
  41040b:	xchg   ch,cl
  41040d:	pop    ebp
  41040e:	xchg   esp,eax
  41040f:	out    dx,eax
  410410:	mov    bh,0xf6
  410412:	push   0x1f
  410414:	xchg   esi,eax
  410415:	inc    ebx
  410416:	inc    ebx
  410417:	jo     0x410492
  410419:	addr16 add eax,0x7a828236
  41041f:	repz inc eax
  410421:	sti    
  410422:	push   esi
  410423:	mov    al,ds:0xe9b79955
  410428:	(bad)  
  410429:	xor    al,0xb9
  41042b:	add    eax,0x562132e1
  410430:	xor    al,0xca
  410432:	dec    eax
  410433:	cmp    eax,0xf5c155b6
  410438:	stos   BYTE PTR es:[edi],al
  410439:	mov    al,0x6a
  41043b:	iret   
  41043c:	call   0x8ee6:0x46410b9
  410443:	fsubr  QWORD PTR [edx+0x3a685cce]
  410449:	mov    eax,0xb1edb36b
  41044e:	push   ecx
  41044f:	jns    0x4103f6
  410451:	cmp    DWORD PTR [edi+eiz*8],ecx
  410454:	leave  
  410455:	xchg   esp,eax
  410456:	fidiv  WORD PTR [ebp-0x48]
  410459:	cld    
  41045a:	xchg   esi,eax
  41045b:	mov    cl,0xf3
  41045d:	lahf   
  41045e:	out    dx,eax
  41045f:	shl    DWORD PTR [edx+0x7bff882a],1
  410465:	pop    esp
  410466:	addr16 add eax,0xf297e7b8
  41046c:	xor    edx,ecx
  41046e:	out    0x1,al
  410470:	int3   
  410471:	push   edi
  410472:	in     al,0xc2
  410474:	add    BYTE PTR [ebx-0x24],0x97
  410478:	repnz cmp eax,0x3d92867c
  41047e:	mov    ecx,0xe8b08303
  410483:	add    ebx,DWORD PTR [ebp+0x23]
  410486:	cmc    
  410487:	ret    0x4ff9
  41048a:	xlat   BYTE PTR ds:[ebx]
  41048b:	fld    QWORD PTR [esi+eax*8-0x240be267]
  410492:	cwde   
  410493:	scas   eax,DWORD PTR es:[edi]
  410494:	popa   
  410495:	cmc    
  410496:	and    eax,0xff578011
  41049b:	fwait
  41049c:	jle    0x410514
  41049e:	fcomp  DWORD PTR [esi-0x3ad7f6e4]
  4104a4:	daa    
  4104a5:	push   edi
  4104a6:	in     al,dx
  4104a7:	adc    BYTE PTR [ebp+0x736ddb75],ah
  4104ad:	add    DWORD PTR [ecx+0x25c49e6a],esi
  4104b3:	in     al,0xf9
  4104b5:	(bad)  
  4104b6:	iret   
  4104b7:	mov    eax,0xaf413364
  4104bc:	imul   BYTE PTR ss:[edi]
  4104bf:	adc    bl,BYTE PTR [edx+0x24835b3]
  4104c5:	test   DWORD PTR [eax-0x1c],ecx
  4104c8:	and    dl,BYTE PTR [ebp-0x5a4933d4]
  4104ce:	inc    edx
  4104cf:	or     eax,0x51f8000e
  4104d4:	shr    DWORD PTR [eax-0x224ce8dd],0xe8
  4104db:	stos   DWORD PTR es:[edi],eax
  4104dc:	mov    esi,0xb6866641
  4104e1:	cs inc esp
  4104e3:	xchg   DWORD PTR [ecx],ebp
  4104e5:	enter  0xcb6f,0x8e
  4104e9:	pop    esp
  4104ea:	stos   BYTE PTR es:[edi],al
  4104eb:	xchg   ebp,eax
  4104ec:	and    ebp,DWORD PTR ds:0xf2587abd
  4104f2:	lds    ebx,FWORD PTR [edi+edx*1]
  4104f5:	jnp    0x4104d4
  4104f7:	jge    0x410519
  4104f9:	into   
  4104fa:	dec    esp
  4104fb:	dec    esi
  4104fc:	or     ebp,DWORD PTR [edx+0x684df590]
  410502:	mov    edx,0x1d46a79d
  410507:	mov    ah,bh
  410509:	enter  0x8b15,0x57
  41050d:	(bad)  
  41050e:	lahf   
  41050f:	les    eax,FWORD PTR [eax]
  410511:	in     eax,dx
  410512:	sub    al,0xf
  410514:	retf   0x1daf
  410517:	pop    ds
  410518:	push   esp
  410519:	(bad)  
  41051a:	xor    cl,BYTE PTR [ebp-0x7d]
  41051d:	push   es
  41051e:	mov    eax,0xa5913a53
  410523:	push   ds
  410524:	les    edx,FWORD PTR [esi]
  410526:	sub    DWORD PTR [esi+0x7bc8eee2],ebx
  41052c:	lock inc eax
  41052e:	xchg   BYTE PTR [eax-0x7e],dl
  410531:	test   al,0x14
  410533:	les    edx,FWORD PTR [esi]
  410535:	hlt    
  410536:	out    0x22,al
  410538:	pop    ecx
  410539:	or     DWORD PTR [ebx+ebp*8-0x20539459],esi
  410540:	ror    BYTE PTR [eax],0x51
  410543:	(bad)  
  410544:	pop    edi
  410545:	sub    ecx,DWORD PTR [esi]
  410547:	ja     0x4104f9
  410549:	les    edx,FWORD PTR ds:0x386fd017
  41054f:	aad    0x4f
  410551:	cdq    
  410552:	xchg   ebp,eax
  410553:	mov    dh,0x51
  410555:	xchg   ecx,eax
  410556:	jecxz  0x410501
  410558:	rcl    BYTE PTR [ebx-0x54],1
  41055b:	mov    esi,0x86ddd5b7
  410560:	adc    BYTE PTR [edx+0x61],dh
  410563:	test   BYTE PTR [ebp-0x30],ch
  410566:	sub    al,0x78
  410569:	in     eax,dx
  41056a:	test   BYTE PTR [ebx-0x17],cl
  41056d:	pop    ss
  41056e:	mov    eax,0x4d365a46
  410573:	out    0x42,al
  410575:	outs   dx,DWORD PTR ds:[esi]
  410576:	inc    esp
  410577:	dec    eax
  410578:	mov    al,ds:0x5b44135a
  41057d:	scas   eax,DWORD PTR es:[edi]
  41057e:	cmp    eax,0x798ca5fa
  410583:	es jecxz 0x410553
  410586:	cwde   
  410587:	(bad)
  41058b:	loope  0x4105ff
  41058d:	fbld   TBYTE PTR [ebx+0x6]
  410590:	in     al,dx
  410591:	add    al,BYTE PTR [ebx+0x74]
  410594:	cmp    cl,BYTE PTR [esi-0x14d2ccd0]
  41059a:	xchg   DWORD PTR [ebx+0x7d39960b],edi
  4105a0:	fs das 
  4105a2:	sub    al,BYTE PTR [edi]
  4105a4:	(bad)  
  4105a5:	adc    ebp,ebp
  4105a7:	pop    ebp
  4105a8:	push   eax
  4105a9:	ret    0xc278
  4105ac:	jne    0x4105b6
  4105ae:	pop    edi
  4105af:	ficom  WORD PTR [eax]
  4105b1:	pop    es
  4105b2:	sub    esp,edx
  4105b4:	sbb    esp,ebp
  4105b6:	mov    ebx,0xa9f12835
  4105bb:	xchg   edx,eax
  4105bc:	stc    
  4105bd:	push   edi
  4105be:	push   edx
  4105bf:	jnp    0x410628
  4105c1:	jnp    0x41062f
  4105c3:	jnp    0x4105b9
  4105c5:	scas   eax,DWORD PTR es:[edi]
  4105c6:	not    ebp
  4105c8:	(bad)  
  4105c9:	out    dx,eax
  4105ca:	or     al,BYTE PTR [ebx+esi*8-0x52080ceb]
  4105d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105d2:	jnp    0x41060c
  4105d4:	cld    
  4105d5:	or     DWORD PTR [eax-0x5],0x5a
  4105d9:	add    al,BYTE PTR [edx-0x5a]
  4105dc:	pop    ebp
  4105dd:	popa   
  4105de:	fsubp  st(6),st
  4105e0:	std    
  4105e1:	outs   dx,BYTE PTR ds:[esi]
  4105e2:	unpckhps xmm3,xmm1
  4105e5:	int    0x6d
  4105e7:	iret   
  4105e8:	clc    
  4105e9:	xor    eax,DWORD PTR [ecx+ebx*8]
  4105ec:	push   ebx
  4105ed:	sbb    DWORD PTR [edi],0x9893a85
  4105f3:	nop
  4105f4:	rol    dh,cl
  4105f6:	mov    cs,WORD PTR ds:0x91fb6eaf
  4105fc:	test   al,0xce
  4105fe:	(bad)  
  4105ff:	mov    DWORD PTR [edi],esp
  410601:	jg     0x41064d
  410603:	mov    edi,0xab7601fb
  410608:	mov    eax,esi
  41060a:	mov    ebx,0x487ff2d5
  41060f:	dec    ebx
  410610:	(bad)  
  410611:	push   ds
  410612:	mov    ch,bh
  410614:	cmp    ch,BYTE PTR [esi]
  410616:	xor    DWORD PTR [ebx],ebp
  410618:	fwait
  410619:	out    dx,al
  41061a:	aad    0x39
  41061c:	rol    DWORD PTR [ebp+edi*2-0x67],cl
  410620:	mov    ecx,0xeb7628cb
  410625:	mov    esp,0x354d3ffb
  41062a:	daa    
  41062b:	or     ch,al
  41062d:	sub    BYTE PTR [ebp+ebp*1-0x66a79034],dh
  410634:	cdq    
  410635:	scas   al,BYTE PTR es:[edi]
  410636:	(bad)  
  410638:	int    0x8e
  41063a:	aaa    
  41063b:	pop    DWORD PTR [edi-0x7d]
  41063e:	int3   
  41063f:	cmp    al,al
  410641:	add    al,0x82
  410643:	sbb    eax,0xe51d819f
  410648:	aam    0x86
  41064a:	cs ret 0xfe32
  41064e:	aas    
  41064f:	mov    ah,0xfa
  410651:	mov    al,ds:0xcfda2813
  410656:	adc    esi,DWORD PTR [edx-0x7e]
  410659:	inc    edx
  41065a:	pop    ecx
  41065b:	(bad)  
  41065c:	in     al,dx
  41065d:	or     DWORD PTR ds:0x743b0189,0x3f
  410664:	sub    al,0x28
  410666:	mov    ch,0xde
  410668:	loope  0x4105fb
  41066a:	std    
  41066b:	jmp    0x41067f
  41066d:	jnp    0x4106ec
  41066f:	bound  ecx,QWORD PTR [edi+0x2aeda980]
  410675:	cmc    
  410676:	mov    ebp,0xb71413b4
  41067b:	mov    cl,ch
  41067d:	xor    eax,0xe3351ad6
  410682:	mov    dh,0xc9
  410684:	mov    bh,0x6a
  410686:	fnstsw WORD PTR [ebx]
  410688:	fild   WORD PTR [edi]
  41068a:	mov    ds,WORD PTR [ebx+0x7658cc9b]
  410690:	dec    ebx
  410691:	adc    BYTE PTR [edi],dh
  410693:	and    al,0xbd
  410695:	mov    esi,0x92456a23
  41069a:	dec    eax
  41069b:	cld    
  41069c:	call   0x3a5f5150
  4106a1:	sahf   
  4106a2:	mov    cs,WORD PTR [edx+ebx*8-0x58363a41]
  4106a9:	mov    dl,0x1
  4106ab:	out    dx,eax
  4106ac:	mov    al,ds:0x48579d1b
  4106b1:	imul   esp,DWORD PTR [ebx+0x17],0xfffffffc
  4106b5:	mov    bl,0x42
  4106b7:	inc    esi
  4106b8:	jne    0x41071b
  4106ba:	sbb    DWORD PTR [ebp+0x459ba9b6],edx
  4106c0:	mov    bl,0x4c
  4106c2:	imul   esp,ecx,0xffffffbb
  4106c5:	xor    eax,esp
  4106c7:	stos   BYTE PTR es:[edi],al
  4106c8:	mov    ebx,0x8fa8972c
  4106cd:	add    dh,BYTE PTR [eax+0x4a3722ca]
  4106d3:	sub    edx,ebp
  4106d5:	mov    ds:0x2289c3da,eax
  4106da:	in     al,0x66
  4106dc:	fistp  WORD PTR [edi]
  4106de:	les    esp,FWORD PTR [ebp-0x11f5204f]
  4106e4:	add    DWORD PTR [ecx+0x37f68c6a],ebx
  4106ea:	jb     0x41068c
  4106ec:	or     DWORD PTR [ebx],edi
  4106ee:	sbb    ah,BYTE PTR [esi+0x6f1edc9e]
  4106f4:	dec    ecx
  4106f5:	mov    dh,0x1b
  4106f7:	adc    cl,dh
  4106f9:	int    0x26
  4106fb:	or     dh,al
  4106fd:	ror    BYTE PTR [edx-0x13ea9018],1
  410703:	stos   DWORD PTR es:[edi],eax
  410704:	int    0x95
  410706:	mov    ds:0x2c4ae35,al
  41070c:	push   edi
  41070d:	pop    esp
  41070e:	mov    edi,ebx
  410710:	pop    edi
  410711:	out    0xc5,eax
  410713:	imul   eax,DWORD PTR [ebp+ebx*4-0x51],0x7c
  410718:	js     0x4106d1
  41071a:	shl    edi,cl
  41071c:	add    DWORD PTR [ebp-0x80],edi
  41071f:	adc    bh,al
  410721:	mov    al,ds:0xfc276fea
  410726:	cmp    ecx,esi
  410728:	(bad)  
  410729:	ins    BYTE PTR es:[edi],dx
  41072a:	sbb    eax,0x3f934c6c
  41072f:	push   esi
  410730:	add    dh,BYTE PTR fs:[ebx-0x73]
  410734:	dec    ebp
  410735:	sar    bh,0x92
  410738:	fdiv   st,st(7)
  41073a:	sti    
  41073b:	addr16 dec ebp
  41073d:	cmp    BYTE PTR ds:0x257e8bbb,bh
  410743:	lock loop 0x4106ec
  410746:	pushf  
  410747:	ror    cl,cl
  410749:	ins    DWORD PTR es:[edi],dx
  41074a:	icebp  
  41074b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41074c:	jge    0x4106f8
  41074e:	dec    ecx
  41074f:	jl     0x410733
  410751:	add    al,0xd0
  410753:	pop    ss
  410754:	or     eax,0x39e62c7a
  410759:	dec    DWORD PTR [ebp-0x16070916]
  41075f:	js     0x4106f0
  410761:	sar    DWORD PTR [eax-0x6f],cl
  410764:	das    
  410765:	retf   
  410766:	in     eax,0xe3
  410768:	adc    DWORD PTR [edi+0x5ccf2c3a],esi
  41076e:	icebp  
  41076f:	dec    esp
  410770:	mov    DWORD PTR [edx+edx*8],ebx
  410773:	adc    BYTE PTR [esi+edx*2],bl
  410776:	cmp    ch,BYTE PTR [ebp-0x5dac0cc5]
  41077c:	std    
  41077d:	outs   dx,BYTE PTR ds:[esi]
  41077e:	jmp    0x7a539f15
  410783:	add    DWORD PTR [edi+esi*4+0x76],ebx
  410787:	aad    0x28
  410789:	fwait
  41078a:	ror    DWORD PTR [ecx-0x7768a6e4],1
  410790:	scas   al,BYTE PTR es:[edi]
  410791:	cld    
  410792:	fld1   
  410794:	jmp    0xdb7c258f
  410799:	pop    esp
  41079a:	lds    esi,FWORD PTR [esi]
  41079c:	jbe    0x41075d
  41079e:	lods   eax,DWORD PTR ds:[esi]
  41079f:	add    DWORD PTR [esi+0x49a6ebe2],0x1a6584b1
  4107a9:	imul   ebx,DWORD PTR [ebx],0x30ef5982
  4107af:	mov    edi,0x3240bf9b
  4107b4:	out    dx,al
  4107b5:	fs sub al,0xd4
  4107b8:	xchg   ecx,eax
  4107b9:	cmp    bl,BYTE PTR [esi+0x674eac27]
  4107bf:	daa    
  4107c0:	rcr    BYTE PTR [ecx+0x26],0x20
  4107c4:	lea    eax,[eax-0x5c]
  4107c7:	sti    
  4107c8:	(bad)  
  4107c9:	aaa    
  4107ca:	sbb    dh,dl
  4107cc:	(bad)  
  4107cd:	mov    al,ds:0x7a5718c0
  4107d2:	fldenv [ecx]
  4107d4:	retf   
  4107d5:	enter  0x7304,0xe7
  4107d9:	popf   
  4107da:	cld    
  4107db:	and    cl,BYTE PTR [ebx-0x10]
  4107de:	scas   al,BYTE PTR es:[edi]
  4107df:	mov    ah,0xdf
  4107e1:	loope  0x41076d
  4107e3:	cmp    eax,0x87fc0e83
  4107e8:	inc    eax
  4107e9:	hlt    
  4107ea:	push   0x6b9ce2bc
  4107ef:	js     0x41080e
  4107f1:	imul   ecx,esp,0xffffffd5
  4107f4:	lods   al,BYTE PTR ds:[esi]
  4107f5:	inc    edi
  4107f6:	iret   
  4107f7:	icebp  
  4107f8:	fwait
  4107f9:	sub    bh,BYTE PTR [esp+edx*2+0x28]
  4107fd:	push   esi
  4107fe:	nop
  4107ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410800:	ret    0x2d5a
  410803:	outs   dx,DWORD PTR ds:[esi]
  410804:	cld    
  410805:	repz mov edi,0xca83e658
  41080b:	jp     0x410796
  41080d:	scas   al,BYTE PTR es:[edi]
  41080e:	retf   
  41080f:	add    BYTE PTR [esi-0x57ed1b0b],dh
  410815:	bound  ecx,QWORD PTR [ebp+0x33]
  410818:	enter  0x70b0,0x4e
  41081c:	aaa    
  41081d:	sbb    eax,0xd0b9df2e
  410822:	outs   dx,DWORD PTR ds:[esi]
  410823:	into   
  410824:	mov    ds:0xaf6fd7a2,eax
  410829:	mov    dl,0x23
  41082b:	add    ah,al
  41082d:	jle    0x4108a1
  41082f:	leave  
  410830:	repnz cmp ebx,DWORD PTR [edx]
  410833:	or     esp,DWORD PTR [ebx+0x52938f1c]
  410839:	addr16 push ebp
  41083b:	in     al,dx
  41083c:	xchg   ecx,eax
  41083d:	aas    
  41083e:	cs add eax,0xc5570f44
  410844:	retf   0x5a96
  410847:	hlt    
  410848:	fnstsw WORD PTR ds:0x1b9568e3
  41084e:	jne    0x410832
  410850:	fsubr  QWORD PTR [eax-0x16]
  410853:	xchg   ecx,eax
  410854:	adc    al,BYTE PTR [esi]
  410856:	stos   BYTE PTR es:[edi],al
  410857:	pop    ecx
  410858:	jne    0x4108a9
  41085a:	out    0xaa,al
  41085c:	(bad)  
  41085d:	mov    eax,0xf920eab6
  410862:	in     al,0x4a
  410864:	pop    eax
  410865:	test   al,0x4d
  410867:	and    BYTE PTR [ebx+0x163605ba],cl
  41086d:	stos   BYTE PTR es:[edi],al
  41086e:	in     al,dx
  41086f:	mov    cl,0xd3
  410871:	xor    eax,0xd03ba1e2
  410876:	push   esi
  410877:	rcr    DWORD PTR [esi],1
  410879:	pop    edi
  41087a:	push   es
  41087b:	xchg   ebx,eax
  41087c:	xchg   ebx,eax
  41087d:	sub    bl,al
  41087f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410880:	lock xor BYTE PTR [eax],0x1f
  410884:	ror    DWORD PTR [edx+0x1d],0x9c
  410888:	imul   ebp
  41088a:	push   0x91a884fd
  41088f:	push   ss
  410890:	and    al,dh
  410892:	ror    BYTE PTR [ebp+0x35],0xb5
  410896:	std    
  410897:	pop    esp
  410898:	out    dx,eax
  410899:	rcr    BYTE PTR [ebx-0x43cc7316],cl
  41089f:	and    esp,eax
  4108a1:	mov    edi,0x91e9d438
  4108a6:	aaa    
  4108a7:	cmp    esp,ebx
  4108a9:	push   ecx
  4108aa:	mov    ebx,0x3e30d9ad
  4108af:	je     0x410926
  4108b1:	adc    eax,0x113e6b2b
  4108b6:	xchg   ecx,eax
  4108b7:	imul   esp,DWORD PTR [ecx],0x4e24164c
  4108bd:	jmp    0x6049:0x7faa
  4108c4:	(bad)
  4108c8:	dec    edx
  4108c9:	or     al,0x34
  4108cb:	pop    edi
  4108cc:	pop    eax
  4108cd:	mov    ds:0x36345ed,al
  4108d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108d3:	shr    DWORD PTR [edi-0x6e],0xb1
  4108d7:	xor    eax,0x4e2ccebd
  4108dc:	pop    ebp
  4108dd:	gs jne 0x41091a
  4108e0:	jp     0x4108b0
  4108e2:	adc    BYTE PTR [ecx],dl
  4108e4:	outs   dx,BYTE PTR ds:[esi]
  4108e5:	adc    eax,0x415fe827
  4108ea:	in     al,dx
  4108eb:	cli    
  4108ec:	xchg   edi,eax
  4108ed:	xchg   si,ax
  4108ef:	aaa    
  4108f0:	xor    BYTE PTR [edi-0x1e],bh
  4108f3:	out    dx,eax
  4108f4:	(bad)  
  4108f5:	pop    edi
  4108f6:	push   0xffffffbe
  4108f8:	lds    ebx,FWORD PTR [ecx-0x2db8afdb]
  4108fe:	je     0x4108e1
  410900:	(bad)  
  410901:	int3   
  410902:	stos   BYTE PTR es:[edi],al
  410903:	pop    esi
  410904:	push   ds
  410905:	loopne 0x410900
  410907:	dec    ebp
  410908:	(bad)  
  410909:	clc    
  41090a:	sub    ah,dl
  41090c:	pop    ds
  41090d:	daa    
  41090e:	int    0xa9
  410910:	fist   DWORD PTR [edx-0x64]
  410913:	mov    dl,0xa
  410915:	or     esi,eax
  410917:	sbb    BYTE PTR [edx+0x60],dl
  41091a:	jbe    0x41093a
  41091c:	shr    BYTE PTR [ebp+0x78d4fd99],1
  410922:	push   edx
  410923:	jl     0x41093e
  410925:	in     al,dx
  410926:	lods   eax,DWORD PTR ds:[esi]
  410927:	aam    0x9
  410929:	xor    cl,bh
  41092b:	fwait
  41092c:	mov    eax,0xa998528e
  410931:	aad    0xe9
  410933:	push   eax
  410934:	push   edx
  410935:	pop    eax
  410936:	sbb    BYTE PTR [ecx-0x67],0x8c
  41093a:	jmp    0xcb14:0xe47899e6
  410941:	idiv   DWORD PTR [eax+0x58]
  410944:	mov    eax,0x3c4c7a77
  410949:	sub    eax,0xa6196f98
  41094e:	sahf   
  41094f:	mov    dh,0x65
  410951:	aas    
  410952:	jns    0x410964
  410954:	lock (bad) 
  410956:	mov    eax,0x44a4cc7b
  41095b:	sbb    al,0x20
  41095d:	sti    
  41095e:	and    BYTE PTR [edx],ch
  410960:	add    DWORD PTR [eax-0x7b915b8d],edx
  410966:	pusha  
  410967:	dec    ebp
  410968:	pop    ebp
  410969:	and    DWORD PTR [ebp-0x73],0xffffffff
  41096d:	and    al,0xa9
  41096f:	cmp    bl,dl
  410971:	add    al,0xc5
  410973:	add    DWORD PTR [edi+0x21],ecx
  410976:	or     DWORD PTR [ecx-0x38528dde],0xffffff87
  41097d:	pop    ecx
  41097e:	sbb    edx,DWORD PTR [ecx+eiz*4]
  410981:	into   
  410982:	out    dx,eax
  410983:	bound  esp,QWORD PTR ss:[eax+0x639d12ad]
  41098a:	aaa    
  41098b:	cmc    
  41098c:	jp     0x410992
  41098e:	sub    eax,0x9cd85693
  410993:	das    
  410994:	outs   dx,BYTE PTR ds:[esi]
  410995:	push   0x4f15b7d0
  41099a:	dec    edx
  41099b:	cmp    al,0x4e
  41099d:	icebp  
  41099e:	clc    
  41099f:	ficomp DWORD PTR [edx+0x7d415282]
  4109a5:	arpl   WORD PTR [ecx-0x6723021e],bp
  4109ab:	test   eax,0x90c90671
  4109b0:	mov    al,0x8b
  4109b2:	lahf   
  4109b3:	xchg   ebx,eax
  4109b4:	ret    0x324a
  4109b7:	mov    ds:0x4ba15f59,eax
  4109bc:	popa   
  4109bd:	fbstp  TBYTE PTR [esi-0x9f01749]
  4109c3:	xchg   edi,eax
  4109c4:	ss jmp 0xaa73:0xe5ec5d50
  4109cc:	leave  
  4109cd:	mov    eax,ebp
  4109cf:	jo     0x41098b
  4109d1:	adc    DWORD PTR [ebx+0x5d],esp
  4109d4:	ja     0x410a14
  4109d6:	out    dx,eax
  4109d7:	das    
  4109d8:	sar    BYTE PTR [esi],0xac
  4109db:	mov    eax,0x1c47e5ed
  4109e0:	add    al,0x29
  4109e2:	push   edi
  4109e3:	dec    ebx
  4109e4:	pushf  
  4109e5:	(bad)  
  4109e6:	xchg   esi,ebx
  4109e8:	adc    eax,0x4a0701c4
  4109ed:	xchg   WORD PTR [edx],si
  4109f0:	retf   0xc51c
  4109f3:	push   esi
  4109f4:	xor    dl,cl
  4109f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109f7:	pop    edi
  4109f8:	inc    eax
  4109f9:	into   
  4109fa:	push   ebx
  4109fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109fc:	pop    esp
  4109fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fe:	call   0xf1db:0x9eabd588
  410a05:	adc    ah,BYTE PTR [edx+0x4401b519]
  410a0b:	cmp    eax,esi
  410a0d:	pop    ds
  410a0e:	and    BYTE PTR [ebp+0x4a],ch
  410a11:	int    0xaf
  410a13:	push   edx
  410a14:	clc    
  410a15:	stos   BYTE PTR es:[edi],al
  410a16:	mov    ch,0xc1
  410a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a19:	dec    edx
  410a1a:	nop
  410a1b:	and    eax,0xec116170
  410a20:	jmp    0x4109ea
  410a22:	or     al,BYTE PTR [esi]
  410a24:	hlt    
  410a25:	popa   
  410a26:	mov    al,ds:0x454c7ae5
  410a2b:	mov    eax,0xc7f3cdda
  410a30:	add    eax,0x8b226838
  410a35:	jbe    0x410a75
  410a37:	inc    eax
  410a38:	cmp    al,0x9f
  410a3a:	jmp    0xa39456d5
  410a3f:	pop    esp
  410a40:	pusha  
  410a41:	inc    ebp
  410a42:	dec    ebx
  410a43:	js     0x410a4d
  410a45:	imul   esi,DWORD PTR [ebp+0x1e526c01],0xd906d2f8
  410a4f:	mov    al,BYTE PTR [edx]
  410a51:	mov    dh,0xe6
  410a53:	mov    al,0x51
  410a55:	inc    eax
  410a56:	fdiv   DWORD PTR [edi]
  410a58:	loope  0x410abc
  410a5a:	sahf   
  410a5b:	cmp    al,0x9d
  410a5d:	dec    ebp
  410a5e:	jp     0x410a42
  410a60:	ret    0xd056
  410a63:	mov    esp,0x1380e199
  410a68:	rcl    bh,0x1b
  410a6b:	pop    ss
  410a6c:	jb     0x410a2c
  410a6e:	(bad)  
  410a6f:	jmp    0xfbd4e851
  410a74:	jb     0x410a50
  410a76:	cmp    ebp,eax
  410a78:	cmc    
  410a79:	add    eax,DWORD PTR [edx+0x7e07dc1a]
  410a7f:	xor    eax,0x90bb6a3a
  410a84:	jnp    0x410ac5
  410a86:	inc    esi
  410a87:	jge    0x410ab1
  410a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a8a:	adc    DWORD PTR [edx-0x1e0f4197],esp
  410a90:	aas    
  410a91:	cmp    edx,0xffffffca
  410a94:	sub    edx,DWORD PTR cs:[edx+0x24]
  410a98:	mov    dh,0x84
  410a9a:	pop    ds
  410a9b:	adc    DWORD PTR [edx],0x50
  410a9e:	push   edi
  410a9f:	add    al,0xf6
  410aa1:	sbb    DWORD PTR [edx],edi
  410aa3:	dec    edi
  410aa4:	nop
  410aa5:	mov    edx,0xddfd6c92
  410aaa:	bnd jae 0x410a70
  410aad:	pusha  
  410aae:	mov    bl,0xf9
  410ab0:	lods   al,BYTE PTR ds:[esi]
  410ab1:	sbb    BYTE PTR [edi-0x46],0x7d
  410ab5:	icebp  
  410ab6:	add    DWORD PTR [ebx+0x8],ebp
  410ab9:	pusha  
  410aba:	sub    eax,0xef06e9c2
  410abf:	bound  edx,QWORD PTR [ebp+0xf]
  410ac2:	mov    esp,0x894d4e02
  410ac7:	push   0x7
  410ac9:	es test al,0x2f
  410acc:	inc    eax
  410acd:	sbb    DWORD PTR [edi+0x6],0x47fef342
  410ad4:	or     al,0x7
  410ad6:	lahf   
  410ad7:	call   0xb766:0x2415f4d
  410ade:	push   ebp
  410adf:	fidivr WORD PTR [edi]
  410ae1:	mov    ah,0x24
  410ae3:	fs stos DWORD PTR es:[edi],eax
  410ae5:	nop
  410ae6:	jecxz  0x410b58
  410ae8:	jae    0x410ab5
  410aea:	stc    
  410aeb:	adc    eax,0x8da83a9f
  410af0:	xchg   esp,eax
  410af1:	mov    eax,ds:0x141ebaae
  410af6:	xchg   esp,eax
  410af7:	sbb    DWORD PTR [esi-0x80],ecx
  410afa:	lods   eax,DWORD PTR ds:[esi]
  410afb:	fwait
  410afc:	dec    ebx
  410afd:	popa   
  410afe:	adc    al,0xf8
  410b00:	fldcw  WORD PTR [edi+0x209f6afd]
  410b06:	or     al,0xcf
  410b09:	mov    ebx,0xd2eb4df4
  410b0e:	dec    esp
  410b0f:	xor    ebx,DWORD PTR [ebp+eiz*2+0x36]
  410b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b14:	or     ebx,DWORD PTR [ecx+0x266a3eec]
  410b1a:	pop    edi
  410b1b:	sahf   
  410b1c:	popf   
  410b1d:	inc    edx
  410b1e:	sub    DWORD PTR [esp+ecx*2+0x5f],0xffffffad
  410b23:	push   esi
  410b24:	xchg   ecx,eax
  410b25:	dec    ecx
  410b26:	cwde   
  410b27:	enter  0x8842,0x6e
  410b2b:	jnp    0x410ae4
  410b2d:	shr    BYTE PTR [esi-0x2f],1
  410b30:	jecxz  0x410b21
  410b32:	out    0xdb,eax
  410b34:	pop    ebp
  410b35:	(bad)  
  410b36:	jle    0x410b91
  410b38:	dec    eax
  410b39:	popa   
  410b3a:	mov    ebx,0x63c5fb33
  410b3f:	ror    BYTE PTR [eax+eiz*2-0x6d880bf9],1
  410b46:	dec    edi
  410b47:	arpl   WORD PTR [ebp+0x7fe96193],dx
  410b4d:	out    dx,eax
  410b4e:	ins    BYTE PTR es:[edi],dx
  410b4f:	cmp    BYTE PTR [edx+0x6a],al
  410b52:	ins    BYTE PTR es:[edi],dx
  410b53:	xchg   ecx,eax
  410b54:	les    esi,FWORD PTR ds:0xe731b3c6
  410b5a:	push   cs
  410b5b:	stc    
  410b5c:	dec    ebx
  410b5d:	and    BYTE PTR [ebp-0x3e5596f1],ah
  410b63:	addr16 jb 0x410b0c
  410b66:	mov    ah,0xcd
  410b68:	es ret 
  410b6a:	or     DWORD PTR [ebx+ebx*1-0x5c45a8cb],0xffffffb3
  410b72:	push   0x48
  410b74:	adc    edx,DWORD PTR [ebx+edi*8]
  410b77:	cmp    DWORD PTR [ebx-0x58],ecx
  410b7a:	mov    esp,0xabfeec9d
  410b7f:	mov    cl,0xa7
  410b81:	dec    eax
  410b82:	in     eax,dx
  410b83:	das    
  410b84:	cmp    al,0x60
  410b86:	jae    0x410bc6
  410b88:	sbb    bl,cl
  410b8a:	jb     0x410bf6
  410b8c:	push   ds
  410b8d:	pop    esi
  410b8e:	out    0x18,al
  410b90:	adc    eax,0x23d85855
  410b95:	xchg   ecx,eax
  410b96:	or     DWORD PTR [edx+ecx*4-0x7],ebx
  410b9a:	xchg   ebp,eax
  410b9b:	sbb    eax,0xbec9ec28
  410ba0:	push   ecx
  410ba1:	inc    edx
  410ba2:	out    dx,al
  410ba3:	jle    0x410ba9
  410ba5:	mov    cl,0xff
  410ba7:	dec    esi
  410ba8:	inc    edi
  410ba9:	sub    BYTE PTR [esi+0x272bffcb],bh
  410baf:	fcmovbe st,st(5)
  410bb1:	push   eax
  410bb2:	das    
  410bb3:	mov    DWORD PTR [edx+0x4b8d6ad3],ebx
  410bb9:	xlat   BYTE PTR ds:[ebx]
  410bba:	cs popf 
  410bbc:	mov    ds:0x875b2b76,eax
  410bc1:	rcl    DWORD PTR [ebp-0x28],0x35
  410bc5:	inc    ebp
  410bc6:	ret    0x74c7
  410bc9:	nop
  410bca:	test   esi,eax
  410bcc:	mov    al,0x7d
  410bce:	lods   eax,DWORD PTR ds:[esi]
  410bcf:	mov    dl,0xab
  410bd1:	and    ch,al
  410bd3:	cmc    
  410bd4:	inc    eax
  410bd5:	ds mov ebx,0xefeac2da
  410bdb:	ss dec edi
  410bdd:	sbb    esi,eax
  410bdf:	aad    0x58
  410be1:	mov    BYTE PTR [ebp+0x26],cl
  410be4:	lock push 0xffffffc7
  410be7:	jle    0x410bda
  410be9:	lds    esp,FWORD PTR [esi+ebp*8-0x7a]
  410bed:	sub    BYTE PTR [eax],bh
  410bef:	jae    0x410ba2
  410bf1:	adc    eax,edx
  410bf3:	mov    BYTE PTR ds:0xf302c16c,cl
  410bf9:	ds xchg esp,eax
  410bfb:	mov    ds:0x9db73def,eax
  410c00:	dec    ebx
  410c01:	sbb    BYTE PTR [ebx+0x5f],cl
  410c04:	jns    0x410c85
  410c06:	mov    dl,0xdd
  410c08:	or     ecx,edi
  410c0a:	mov    dl,0xa0
  410c0c:	xor    al,0x11
  410c0e:	(bad)  
  410c10:	pop    ss
  410c11:	nop
  410c12:	mov    al,0xb
  410c14:	add    cl,BYTE PTR [edx-0x5f]
  410c17:	(bad)  
  410c18:	jno    0x410bad
  410c1a:	fcmove st,st(4)
  410c1c:	bound  esi,QWORD PTR [ebp-0x46]
  410c1f:	xchg   ebp,eax
  410c20:	icebp  
  410c21:	ins    BYTE PTR es:[edi],dx
  410c22:	ins    BYTE PTR es:[edi],dx
  410c23:	sbb    eax,0x6495488a
  410c28:	jo     0x410c74
  410c2a:	cmp    DWORD PTR [esi],ebx
  410c2c:	gs adc eax,0x8b23f4e3
  410c32:	push   esp
  410c33:	aas    
  410c34:	loope  0x410c4e
  410c36:	mov    ebp,0xb1473c15
  410c3b:	sbb    edx,DWORD PTR [eax-0x7324d552]
  410c41:	loope  0x410c01
  410c43:	mov    ebp,0xc7eb164c
  410c48:	enter  0x639b,0x7c
  410c4c:	rcl    DWORD PTR [eax-0x5d],0x44
  410c50:	retf   0xd85b
  410c53:	sub    al,0xb
  410c55:	dec    ebx
  410c56:	pusha  
  410c57:	mov    dl,BYTE PTR [eax+0x7b]
  410c5a:	sar    DWORD PTR [edx+0x49],0x62
  410c5e:	push   edx
  410c5f:	shl    DWORD PTR [eax-0x32],0x20
  410c63:	aad    0xfd
  410c65:	xchg   esp,eax
  410c66:	aad    0x79
  410c68:	jl     0x410c7d
  410c6a:	rol    cl,1
  410c6c:	mov    eax,ds:0x21af35f1
  410c71:	mov    esi,0x7ce25f96
  410c76:	imul   ebx,DWORD PTR [edi],0x8675921
  410c7c:	lock fidivr WORD PTR [ebp-0x31]
  410c80:	mov    cs,edi
  410c82:	cmp    ebx,esi
  410c84:	push   edx
  410c85:	leave  
  410c86:	pop    esp
  410c87:	sub    WORD PTR [esp+ebx*1+0x42],si
  410c8c:	adc    dh,cl
  410c8e:	sbb    bl,BYTE PTR [edx]
  410c90:	das    
  410c91:	repnz dec ebx
  410c93:	outs   dx,DWORD PTR ds:[esi]
  410c94:	cmp    eax,0x3e75b6cb
  410c99:	pop    ebx
  410c9a:	aam    0xd0
  410c9c:	hlt    
  410c9d:	cmp    al,0x63
  410c9f:	sub    DWORD PTR [ebx],edi
  410ca1:	mov    ds:0x2e66f98c,eax
  410ca6:	(bad)  
  410ca7:	out    dx,eax
  410ca8:	push   cs
  410ca9:	jmp    0xeec5f1e2
  410cae:	rol    BYTE PTR [edi+ebp*8+0x6e62dfa],1
  410cb5:	sub    BYTE PTR ds:[edi],cl
  410cb8:	test   eax,0xfe9130f3
  410cbd:	xchg   esi,eax
  410cbe:	sbb    DWORD PTR ds:0x44fe6931,esi
  410cc4:	xor    bh,BYTE PTR [edi-0x2bd2c662]
  410cca:	and    al,0xc2
  410ccc:	dec    eax
  410ccd:	jecxz  0x410cab
  410ccf:	outs   dx,DWORD PTR ds:[esi]
  410cd0:	retf   
  410cd1:	sti    
  410cd2:	xchg   BYTE PTR [edx+0x7a],ah
  410cd5:	push   ebx
  410cd7:	sti    
  410cd8:	ret    
  410cd9:	das    
  410cda:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  410cdc:	fmul   st(3),st
  410cde:	shr    BYTE PTR [ecx+ebx*4],0x7b
  410ce2:	mov    BYTE PTR [ebp-0x76350b8],0x84
  410ce9:	mov    ds:0x9b27b6c7,eax
  410cee:	lods   eax,DWORD PTR ds:[esi]
  410cef:	dec    eax
  410cf0:	adc    eax,0x24b1e9b
  410cf5:	in     al,0x2
  410cf7:	mov    eax,0xc1c4a205
  410cfc:	and    dl,BYTE PTR [ebx+0x3263a0bc]
  410d02:	stos   DWORD PTR es:[edi],eax
  410d03:	mov    ebp,0x8c878f61
  410d08:	cmp    al,0xf9
  410d0a:	dec    edx
  410d0b:	call   0x5772:0x298c20ab
  410d12:	ja     0x410d61
  410d14:	pop    esp
  410d15:	push   ds
  410d16:	mov    eax,ds:0x1f30350c
  410d1b:	and    eax,0xc8edec52
  410d20:	mov    ds:0x56d21566,al
  410d25:	push   0xffffffa1
  410d27:	pop    ebx
  410d28:	enter  0xc00c,0x3d
  410d2c:	ins    BYTE PTR es:[edi],dx
  410d2d:	jbe    0x410cfb
  410d2f:	lds    ebp,FWORD PTR [ebx]
  410d31:	mov    bl,0x9c
  410d33:	push   esi
  410d34:	rcr    BYTE PTR [ebp+edx*4+0x22a57757],cl
  410d3b:	jno    0x410d66
  410d3d:	mov    eax,ds:0xb360f769
  410d42:	js     0x410d8d
  410d44:	fmulp  st(5),st
  410d46:	(bad)  
  410d47:	stos   BYTE PTR es:[edi],al
  410d48:	cmp    esp,0x39
  410d4b:	mov    edx,0x4bd18aaf
  410d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d51:	lahf   
  410d52:	mov    ebx,0xa5d37b77
  410d57:	mov    bh,0xfb
  410d59:	mov    al,0xfa
  410d5b:	cwde   
  410d5c:	jne    0x410d39
  410d5e:	jge    0x410d9c
  410d60:	arpl   WORD PTR [edi+0x34],si
  410d63:	jg     0x410dc7
  410d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d66:	nop
  410d67:	jno    0x410d2d
  410d69:	add    al,0x1a
  410d6b:	pop    ecx
  410d6c:	jecxz  0x410dcd
  410d6e:	ins    BYTE PTR es:[edi],dx
  410d6f:	jmp    0xb21d:0xe65d4af1
  410d76:	pop    esp
  410d77:	pop    edi
  410d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d79:	push   ebx
  410d7a:	fcmovu st,st(2)
  410d7c:	dec    ebx
  410d7d:	imul   esp,DWORD PTR [edi],0x7ac6e83f
  410d83:	inc    eax
  410d84:	rol    BYTE PTR [edx-0x236f0bcb],0x28
  410d8b:	int3   
  410d8c:	push   ebx
  410d8d:	hlt    
  410d8e:	fcomp  DWORD PTR [edx+0x1a]
  410d91:	les    esp,FWORD PTR [eax]
  410d93:	add    dl,0x30
  410d96:	add    DWORD PTR [esi],ebp
  410d98:	sbb    eax,0x925e977d
  410d9d:	loop   0x410d6f
  410d9f:	adc    al,0x8d
  410da1:	mov    al,ds:0x3059ae0e
  410da6:	ret    
  410da7:	mov    ds:0xecb933d4,al
  410dac:	lds    ebp,FWORD PTR [esi+eax*4-0x9]
  410db0:	icebp  
  410db1:	xor    eax,edi
  410db3:	jle    0x410e26
  410db5:	jne    0x410de4
  410db7:	rol    DWORD PTR [eax-0x3],cl
  410dba:	inc    eax
  410dbb:	add    al,0x24
  410dbd:	and    bl,BYTE PTR [edi+0x6ea2590c]
  410dc3:	stos   DWORD PTR es:[edi],eax
  410dc4:	mov    cl,0x9a
  410dc6:	ret    
  410dc7:	and    dh,BYTE PTR [edi]
  410dc9:	mov    ds:0xcab29255,eax
  410dce:	adc    al,0x9c
  410dd0:	push   cs
  410dd1:	mov    ds:0xcd926a85,al
  410dd6:	adc    ecx,DWORD PTR [ebp+0x7b]
  410dd9:	stc    
  410dda:	out    0xc1,eax
  410ddc:	jge    0x410d9b
  410dde:	fdivr  DWORD PTR [ecx-0x189ad42f]
  410de4:	lea    edx,[edx]
  410de6:	repnz inc ecx
  410de8:	mov    ecx,0xceae7736
  410ded:	add    dl,ah
  410def:	mov    dh,0xbd
  410df1:	xlat   BYTE PTR ds:[ebx]
  410df2:	ret    
  410df3:	mov    ecx,0xd96bc2e6
  410df8:	adc    ebx,DWORD PTR [ebx-0x64]
  410dfb:	jbe    0x410e16
  410dfd:	xchg   ebp,eax
  410dfe:	das    
  410dff:	push   ecx
  410e00:	xor    eax,0x1b75e30
  410e05:	jecxz  0x410df4
  410e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e08:	ja     0x410e26
  410e0a:	xchg   ebx,eax
  410e0b:	mov    BYTE PTR [ebx+0x72],al
  410e0e:	dec    edx
  410e0f:	push   ecx
  410e10:	dec    eax
  410e11:	cmp    ch,dl
  410e13:	stos   DWORD PTR es:[edi],eax
  410e14:	call   0xa777156a
  410e19:	pop    ebx
  410e1a:	cmp    dh,BYTE PTR [esi+esi*2+0x19]
  410e1e:	loope  0x410dd6
  410e20:	repnz rol DWORD PTR [esp+ecx*8],0xc0
  410e25:	sbb    eax,0x9f2cc18a
  410e2a:	jg     0x410e8a
  410e2c:	dec    esp
  410e2d:	outs   dx,BYTE PTR ds:[esi]
  410e2e:	not    BYTE PTR [edi-0x74088ca]
  410e34:	or     ebx,esp
  410e36:	cmp    BYTE PTR [esi],cl
  410e38:	lods   eax,DWORD PTR ds:[esi]
  410e39:	xor    al,0x75
  410e3b:	arpl   cx,dx
  410e3d:	arpl   WORD PTR [edx+0x16],bx
  410e40:	in     al,0x4
  410e42:	or     BYTE PTR [ebx+0x691356ba],cl
  410e48:	fcmovnbe st,st(7)
  410e4a:	sahf   
  410e4b:	or     bl,BYTE PTR [ebp+0x0]
  410e4e:	and    ebp,edx
  410e50:	icebp  
  410e51:	inc    edx
  410e52:	jp     0x410def
  410e54:	or     eax,0x1a1cd2f0
  410e59:	cdq    
  410e5a:	mov    ds:0x802fadd4,eax
  410e5f:	les    eax,FWORD PTR es:[esp+eiz*2+0x29]
  410e64:	or     edi,DWORD PTR [edx+edi*1]
  410e67:	lea    edx,[esi]
  410e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e6a:	jecxz  0x410e0f
  410e6c:	ja     0x410e80
  410e6e:	clc    
  410e6f:	test   DWORD PTR ds:0xded0f41d,esp
  410e75:	popa   
  410e76:	xor    eax,0xb1515923
  410e7b:	jl     0x410e57
  410e7d:	adc    BYTE PTR [edx-0x534648bf],bl
  410e83:	jle    0x410ede
  410e85:	add    al,0xf3
  410e87:	stc    
  410e88:	push   ebp
  410e89:	nop
  410e8a:	and    esi,DWORD PTR [edx+0x5937438b]
  410e90:	mov    eax,ds:0x8790a9df
  410e95:	loop   0x410e1f
  410e97:	dec    esp
  410e98:	jns    0x410ebc
  410e9a:	repz inc ecx
  410e9c:	loop   0x410e39
  410e9e:	(bad)  
  410e9f:	aad    0x96
  410ea1:	sbb    DWORD PTR [ebx-0x1d],0x4cc55c8f
  410ea8:	les    ebp,FWORD PTR [ecx-0x67b47b36]
  410eae:	pop    edx
  410eaf:	jg     0x410ec8
  410eb1:	ret    0x109e
  410eb4:	mov    DWORD PTR ds:0xc205ac40,edi
  410eba:	xchg   edx,eax
  410ebb:	add    al,0x9
  410ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ebe:	stc    
  410ebf:	jo     0x410ed4
  410ec1:	sub    BYTE PTR [ebx+0x7e8e373f],ch
  410ec7:	add    BYTE PTR [eax+ecx*4],al
  410eca:	inc    eax
  410ecb:	mov    gs,WORD PTR [ecx+0x6401148b]
  410ed1:	mov    ebp,0x51a9766e
  410ed6:	and    al,0xea
  410ed8:	fwait
  410ed9:	xchg   edx,eax
  410eda:	dec    ebx
  410edb:	lods   al,BYTE PTR ds:[esi]
  410edc:	ret    0xf14f
  410edf:	adc    dl,BYTE PTR [eax-0x49]
  410ee2:	inc    esp
  410ee3:	das    
  410ee4:	xor    eax,0x1d8efe30
  410ee9:	inc    esp
  410eea:	aad    0x4a
  410eec:	test   eax,ecx
  410eee:	fcmovnb st,st(6)
  410ef0:	jbe    0x410ed9
  410ef2:	inc    esi
  410ef3:	sub    eax,0xce45db92
  410ef8:	push   0x2dc620ce
  410efd:	dec    ecx
  410efe:	sub    ch,BYTE PTR [ebp-0x50]
  410f01:	cs pop edi
  410f03:	jne    0x410f57
  410f05:	mov    ecx,0xf2441c64
  410f0a:	and    dh,0x28
  410f0d:	test   BYTE PTR [eax+ebx*4],bl
  410f10:	sub    DWORD PTR [edx],esp
  410f12:	into   
  410f13:	ret    
  410f14:	or     eax,0x1c311a55
  410f19:	sub    BYTE PTR [edi+0x30001ebd],cl
  410f1f:	adc    al,0x36
  410f21:	mov    al,0xf0
  410f23:	push   ebp
  410f24:	test   BYTE PTR [ebx+eax*4+0x1],0x83
  410f29:	into   
  410f2a:	adc    dh,BYTE PTR [edi]
  410f2c:	mov    eax,0x9d3f4bbd
  410f31:	addr16 cmc 
  410f33:	mov    ch,0x3a
  410f35:	fwait
  410f36:	push   cs
  410f37:	(bad)  
  410f38:	pop    edx
  410f39:	push   edx
  410f3a:	ins    DWORD PTR es:[edi],dx
  410f3b:	repz add ebp,DWORD PTR [edx-0x3c]
  410f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f40:	enter  0x5bf6,0x44
  410f44:	xor    DWORD PTR [eax-0x6d6fa668],ebp
  410f4a:	(bad)  
  410f4b:	dec    edx
  410f4d:	ss cli 
  410f4f:	xor    esp,DWORD PTR [edi+0x7f6282dd]
  410f55:	ss jle 0x410f52
  410f58:	(bad)  
  410f59:	(bad)  
  410f5a:	bnd jae 0x410f12
  410f5d:	test   DWORD PTR ds:0x50599390,0x2b86c995
  410f67:	sub    eax,0xe1716493
  410f6c:	imul   edx,DWORD PTR [esi],0x9d030fea
  410f72:	into   
  410f73:	sbb    al,0x9c
  410f75:	push   0x81d10edc
  410f7a:	es call 0xc75:0x8f6dcc6c
  410f82:	fimul  DWORD PTR [ebp-0x6632581]
  410f88:	mov    bh,0xa3
  410f8a:	sahf   
  410f8b:	push   ecx
  410f8c:	in     eax,0xe
  410f8e:	jno    0x410fc4
  410f90:	leave  
  410f91:	(bad)  
  410f92:	std    
  410f93:	ds (bad) 
  410f96:	call   0xbfd3:0x8b444002
  410f9d:	jp     0x410f99
  410f9f:	mov    ?,esi
  410fa1:	mov    edx,0x6db05a46
  410fa6:	jge    0x410f6c
  410fa8:	xchg   ebx,eax
  410fa9:	sar    esi,1
  410fab:	mov    eax,eax
  410fad:	sub    al,BYTE PTR [eax+ebx*1-0x221407b4]
  410fb4:	ror    edx,1
  410fb6:	sahf   
  410fb7:	pop    ss
  410fb8:	sbb    eax,0xa623aa44
  410fbd:	rcl    DWORD PTR [ebp-0x276d5fd7],cl
  410fc3:	jmp    0x410f88
  410fc5:	lock imul BYTE PTR [esi-0x3ecf6b8]
  410fcc:	mov    ds:0x59c034cb,eax
  410fd1:	dec    ebx
  410fd2:	lea    edi,[edx]
  410fd4:	stc    
  410fd5:	mov    dh,BYTE PTR [edi+0x47914986]
  410fdb:	ja     0x410fe6
  410fdd:	or     al,0x3e
  410fdf:	push   edi
  410fe0:	xchg   BYTE PTR [edx-0x18481186],ah
  410fe6:	in     eax,0x1e
  410fe8:	pop    eax
  410fe9:	pop    es
  410fea:	mov    ds:0x39af4c39,al
  410fef:	xchg   ebp,eax
  410ff0:	mov    dh,dh
  410ff2:	push   edi
  410ff3:	rol    eax,0xbd
  410ff6:	mov    ah,bh
  410ff8:	sbb    al,0x5b
  410ffa:	in     eax,0xc8
  410ffc:	ror    BYTE PTR [edx],cl
  410ffe:	stos   BYTE PTR es:[edi],al
  410fff:	in     al,dx
  411000:	ins    BYTE PTR es:[edi],dx
  411001:	jb     0x411064
  411003:	sub    DWORD PTR [edi+0x346d01e7],ebp
  411009:	popa   
  41100a:	add    al,0xf0
  41100c:	int3   
  41100d:	mov    edi,0xbbaee39b
  411012:	outs   dx,BYTE PTR ds:[esi]
  411013:	sbb    edi,ebp
  411015:	arpl   WORD PTR [esp+eiz*2+0x43],dx
  411019:	push   esp
  41101a:	mov    esp,0xf23afee7
  41101f:	mov    bl,0x68
  411021:	and    bl,ch
  411023:	(bad)  
  411025:	xchg   ecx,eax
  411026:	dec    esi
  411027:	cld    
  411028:	and    DWORD PTR ss:[ebp-0x9],esp
  41102c:	push   0x1b
  41102e:	jb     0x410fd1
  411030:	dec    ebx
  411031:	test   dl,0xfc
  411034:	mov    edx,0x9ca43db8
  411039:	imul   BYTE PTR [ebx-0x9ef3eb6]
  41103f:	adc    esp,ecx
  411041:	mov    dl,0x91
  411043:	sbb    esp,edi
  411045:	mov    dl,0x8d
  411047:	inc    esp
  411048:	hlt    
  411049:	aam    0xad
  41104b:	(bad)  
  41104c:	(bad)  
  41104d:	cmp    bh,BYTE PTR [esi-0x31]
  411050:	cwde   
  411051:	cmp    bh,0xe0
  411054:	jmp    0xa45b1ab7
  411059:	enter  0x81e6,0x8e
  41105d:	scas   eax,DWORD PTR es:[edi]
  41105e:	dec    esi
  41105f:	ins    BYTE PTR es:[edi],dx
  411060:	arpl   di,dx
  411062:	mov    eax,0xb9e59443
  411067:	mov    fs,WORD PTR [ebp+0x60]
  41106a:	push   edi
  41106b:	sbb    ecx,ecx
  41106d:	ficom  WORD PTR [edi+0xd3e2b2b]
  411073:	inc    eax
  411074:	jge    0x4110a0
  411076:	sub    ah,BYTE PTR [esi]
  411078:	mov    eax,0x29dab3c2
  41107d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41107e:	mov    cl,0x71
  411080:	cmc    
  411081:	stos   DWORD PTR es:[edi],eax
  411082:	sti    
  411083:	mov    al,ds:0x3eebde17
  411088:	lds    eax,FWORD PTR [ebx-0x370548c6]
  41108e:	sar    BYTE PTR [edx],0x31
  411091:	mov    eax,0x18bbd485
  411096:	jmp    0x650d:0x78c6db66
  41109d:	shl    bh,cl
  41109f:	or     DWORD PTR [ecx],esi
  4110a1:	mov    eax,0x5c75d12c
  4110a6:	xchg   edi,esi
  4110a8:	push   eax
  4110a9:	push   cs
  4110aa:	adc    DWORD PTR [ebx-0x13],esp
  4110ad:	pop    edx
  4110ae:	test   eax,0xaffdba04
  4110b3:	push   esp
  4110b4:	scas   al,BYTE PTR es:[edi]
  4110b5:	int3   
  4110b6:	push   ecx
  4110b7:	cmp    DWORD PTR [edi],eax
  4110b9:	mov    ecx,0xc3495cbb
  4110be:	sbb    DWORD PTR [edi-0x16778e6f],ebp
  4110c4:	mov    ds:0x85249b88,eax
  4110c9:	fwait
  4110ca:	psubsw mm1,QWORD PTR [ecx]
  4110cd:	sub    bh,ah
  4110cf:	aas    
  4110d0:	and    DWORD PTR [esi-0x70],ebp
  4110d3:	in     al,dx
  4110d4:	xchg   edi,eax
  4110d5:	pop    edx
  4110d6:	push   es
  4110d7:	jae    0x4110cc
  4110d9:	sbb    al,0x4e
  4110db:	(bad)  
  4110dc:	xchg   edx,eax
  4110dd:	fstp   TBYTE PTR [eax]
  4110df:	(bad)  
  4110e1:	dec    esi
  4110e2:	bnd jl 0x411084
  4110e5:	mov    WORD PTR [edx-0x260e6e51],cs
  4110eb:	test   eax,0xf15d7cd4
  4110f0:	pop    edx
  4110f1:	scas   al,BYTE PTR es:[edi]
  4110f2:	adc    BYTE PTR [esi],bh
  4110f4:	dec    esi
  4110f5:	clc    
  4110f6:	adc    DWORD PTR [ecx],esi
  4110f8:	xor    BYTE PTR [edx-0x2fc7f7cb],0x65
  4110ff:	pusha  
  411100:	out    0xc7,eax
  411102:	mov    cl,0xb9
  411104:	fwait
  411105:	dec    esi
  411106:	jl     0x411180
  411108:	(bad)  
  411109:	dec    esp
  41110a:	leave  
  41110b:	test   eax,0xb4293c72
  411110:	sbb    eax,DWORD PTR [eax]
  411112:	loope  0x41116b
  411114:	scas   eax,DWORD PTR es:[edi]
  411115:	mov    al,ds:0x928866fb
  41111a:	shl    BYTE PTR [edi+0x49],1
  41111d:	mov    al,ds:0x345abf01
  411122:	pop    ebp
  411123:	dec    esi
  411124:	push   esi
  411125:	or     BYTE PTR [ebx-0x6dc28a93],ah
  41112b:	es inc eax
  41112d:	jne    0x411151
  41112f:	inc    ebp
  411130:	mov    ds:0x6b101907,eax
  411135:	jae    0x411111
  411137:	pop    esp
  411138:	adc    BYTE PTR ds:0x62245901,al
  41113e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411140:	mov    cl,0xce
  411142:	inc    esp
  411143:	dec    esi
  411144:	enter  0x8e19,0x4a
  411148:	shr    ah,0xc4
  41114b:	lock mov ebp,0xa33b6cb7
  411151:	(bad)  
  411152:	stos   DWORD PTR es:[edi],eax
  411153:	in     al,0x9f
  411155:	fdiv   DWORD PTR [esi+0x13c01f81]
  41115c:	sbb    ch,BYTE PTR [esi-0x25]
  41115f:	add    eax,DWORD PTR [ecx+0x4eea6e64]
  411165:	mov    WORD PTR [edi+0x43],gs
  411168:	mov    ds:0x48baf435,eax
  41116d:	xchg   ebx,eax
  41116e:	scas   al,BYTE PTR es:[edi]
  41116f:	mov    bh,0x1e
  411171:	inc    ebx
  411172:	out    dx,eax
  411173:	or     al,0xb8
  411175:	cmp    al,BYTE PTR [esi-0x505b9129]
  41117b:	mov    ecx,0x49cb1a02
  411180:	or     ebp,edi
  411182:	dec    ebp
  411183:	cmp    DWORD PTR [edi-0x3],edx
  411186:	push   0x71e6c4ab
  41118b:	repnz cmc 
  41118d:	jg     0x4111c7
  41118f:	dec    esp
  411190:	sub    esp,DWORD PTR [edi-0x2a68b3f4]
  411196:	xlat   BYTE PTR ds:[ebx]
  411197:	or     eax,0x5a8cb8b5
  41119c:	xchg   ebx,ebp
  41119e:	inc    esp
  41119f:	mov    ch,0xbe
  4111a1:	test   al,0xac
  4111a3:	and    dl,ah
  4111a5:	cmc    
  4111a6:	fild   WORD PTR [edx-0x56]
  4111a9:	cmc    
  4111aa:	repnz lods al,BYTE PTR ds:[esi]
  4111ac:	or     DWORD PTR [esi],ebp
  4111ae:	add    bh,BYTE PTR [ebp+0x58]
  4111b1:	push   ebx
  4111b2:	std    
  4111b3:	ins    BYTE PTR es:[edi],dx
  4111b4:	shr    BYTE PTR [edi+edx*2-0x35beafb3],cl
  4111bb:	xchg   edi,eax
  4111bc:	hlt    
  4111bd:	mov    edi,0xd573fada
  4111c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c3:	mov    ebp,0x2ee2bbf0
  4111c8:	xchg   ecx,eax
  4111c9:	push   ebp
  4111ca:	je     0x411170
  4111cc:	lock add BYTE PTR [edx+eiz*4+0xf],al
  4111d1:	push   cs
  4111d2:	loopne 0x4111fc
  4111d4:	nop
  4111d5:	add    DWORD PTR [ebp+0x10a6b34c],esp
  4111db:	cmp    esi,ecx
  4111dd:	fisub  WORD PTR [edi-0x7756e10a]
  4111e3:	sbb    esp,eax
  4111e5:	sti    
  4111e6:	retf   
  4111e7:	jnp    0x411170
  4111e9:	fdivrp st(7),st
  4111eb:	or     al,0x6
  4111ed:	jmp    0x411243
  4111ef:	sbb    al,0xb3
  4111f1:	push   esp
  4111f2:	retf   
  4111f3:	dec    esp
  4111f4:	xchg   edi,eax
  4111f5:	mov    ebx,0xbdc430ec
  4111fa:	ror    BYTE PTR [ecx],0xd9
  4111fd:	fwait
  4111fe:	in     eax,dx
  4111ff:	or     al,0x88
  411201:	fild   DWORD PTR ds:0x6545ffeb
  411207:	add    dh,dl
  411209:	jge    0x411263
  41120b:	sbb    eax,0x87841658
  411210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411211:	fst    QWORD PTR [eax-0xb]
  411214:	push   ebx
  411215:	xchg   DWORD PTR [esi-0x73],ebx
  411218:	cmc    
  411219:	mov    esi,DWORD PTR [edx]
  41121b:	scas   eax,DWORD PTR es:[edi]
  41121c:	sbb    esp,DWORD PTR [esi+0x1cfb9201]
  411222:	repnz and eax,0x9f3349cb
  411228:	add    esp,DWORD PTR [eax]
  41122a:	daa    
  41122b:	in     eax,dx
  41122c:	jmp    0xf239:0x5f4746de
  411233:	and    bl,bl
  411235:	sar    DWORD PTR [eax],1
  411237:	jno    0x4111c3
  411239:	cmp    BYTE PTR [esi],ah
  41123b:	adc    dh,BYTE PTR [edx+0x6a7bb101]
  411241:	imul   esi,DWORD PTR [edi+edx*2-0x7b88f461],0x685275a6
  41124c:	jg     0x4112a5
  41124e:	lds    ecx,FWORD PTR [ecx+0x78c3672a]
  411254:	cmp    DWORD PTR [ecx],esi
  411256:	sbb    al,0x4c
  411258:	fbld   TBYTE PTR es:[esi+eiz*2-0x66]
  41125d:	addr16 clc 
  41125f:	and    BYTE PTR [ebx],0xda
  411262:	mov    eax,ds:0x2bbb3a72
  411267:	ins    DWORD PTR es:[edi],dx
  411268:	or     ah,BYTE PTR [edx]
  41126a:	add    DWORD PTR [ebx],edx
  41126c:	inc    edx
  41126d:	xchg   ebp,eax
  41126e:	push   0xef122512
  411273:	xor    al,0x56
  411275:	xchg   dl,dh
  411277:	pop    es
  411278:	xchg   edx,eax
  411279:	xor    eax,0xc3a88387
  41127e:	sar    DWORD PTR [esi],cl
  411280:	push   edi
  411281:	push   0x18
  411283:	push   ecx
  411284:	sbb    DWORD PTR [ecx],ecx
  411286:	sahf   
  411287:	lods   al,BYTE PTR ds:[esi]
  411288:	les    edi,FWORD PTR [ebx]
  41128a:	les    eax,FWORD PTR cs:[ebp+0x44]
  41128e:	nop
  41128f:	leave  
  411290:	popf   
  411291:	sub    DWORD PTR [esp+ebp*1],ebx
  411294:	sub    BYTE PTR [esi],bl
  411296:	pop    eax
  411297:	mov    edi,0xc7908a74
  41129c:	sbb    ebp,eax
  41129e:	lods   al,BYTE PTR ds:[esi]
  41129f:	sub    eax,DWORD PTR [edi]
  4112a1:	lods   al,BYTE PTR ds:[esi]
  4112a2:	popf   
  4112a3:	push   eax
  4112a4:	xor    eax,eax
  4112a6:	stos   BYTE PTR es:[edi],al
  4112a7:	dec    esp
  4112a8:	in     al,dx
  4112a9:	(bad)  
  4112ab:	ret    0xc92b
  4112ae:	rcr    DWORD PTR ds:0xe3f2eee0,cl
  4112b4:	data16 jae 0x41125e
  4112b7:	xor    eax,0xa45e48ab
  4112bc:	shl    DWORD PTR [eax+edx*2+0x19b5431a],0x6d
  4112c4:	pop    ss
  4112c5:	lock fbstp TBYTE PTR [ebx+0x753ed0b1]
  4112cc:	adc    ah,BYTE PTR [ecx-0x6e]
  4112cf:	dec    edi
  4112d0:	lock mov bh,0x34
  4112d3:	dec    esp
  4112d4:	lahf   
  4112d5:	fld    DWORD PTR ss:[esi]
  4112d8:	sub    BYTE PTR [ecx+0x1a],bl
  4112db:	sbb    DWORD PTR [esi+ebp*1-0x51],eax
  4112df:	mov    esi,0xcd279978
  4112e4:	push   ebx
  4112e5:	js     0x41135f
  4112e7:	sbb    DWORD PTR [ebx-0x580adcc6],esi
  4112ed:	pop    esp
  4112ee:	or     BYTE PTR [esi-0x65],dh
  4112f1:	pop    edx
  4112f2:	mov    esi,0x54dca957
  4112f7:	push   ecx
  4112f8:	mov    al,ds:0xf7899091
  4112fd:	stos   BYTE PTR es:[edi],al
  4112fe:	aaa    
  4112ff:	inc    edx
  411300:	cwde   
  411301:	out    dx,al
  411302:	xchg   ecx,esp
  411304:	mov    ebp,0xd887a23d
  411309:	pop    ds
  41130a:	sub    eax,0x8ddadf51
  41130f:	adc    edi,esi
  411311:	pop    ebp
  411312:	adc    eax,0xca67bd5c
  411317:	pusha  
  411318:	xchg   ecx,eax
  411319:	lods   al,BYTE PTR ds:[esi]
  41131a:	das    
  41131b:	mov    ecx,0xc9f704c6
  411320:	iret   
  411321:	nop
  411322:	jae    0x411377
  411324:	gs vpsubq ymm1,ymm0,ymm3
  411329:	in     eax,0xa2
  41132b:	mov    dl,0x37
  41132d:	cmp    al,0xcb
  41132f:	imul   esi,edi,0xcb4a867e
  411335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411336:	lods   al,BYTE PTR ds:[esi]
  411337:	sub    al,0x4b
  411339:	inc    ebp
  41133a:	ror    BYTE PTR [ebx],0x2d
  41133d:	dec    ebp
  41133e:	in     eax,dx
  41133f:	pop    edx
  411340:	xor    dh,cl
  411342:	sbb    ebp,esi
  411344:	cmp    DWORD PTR [ebx+eax*2],ecx
  411347:	lea    esp,[esi+0xe96022d]
  41134d:	mov    ds:0x98ae3851,eax
  411352:	ins    DWORD PTR es:[edi],dx
  411353:	cmc    
  411354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411355:	ds xchg esp,eax
  411357:	aad    0xce
  411359:	sahf   
  41135a:	int    0xc3
  41135c:	dec    edi
  41135d:	fidiv  DWORD PTR [ebx+0x256aa88f]
  411363:	es in  eax,dx
  411365:	into   
  411366:	jb     0x411322
  411368:	dec    edi
  411369:	or     esi,DWORD PTR [ebx+esi*1]
  41136c:	aam    0x55
  41136e:	dec    esi
  41136f:	clc    
  411370:	les    ebp,FWORD PTR [ebx+0x2eb90fbf]
  411376:	(bad)  
  411377:	into   
  411378:	cmp    edx,DWORD PTR [eax]
  41137a:	xor    eax,0x4475817
  41137f:	loope  0x4113b8
  411381:	bound  edx,QWORD PTR [ebx]
  411383:	stc    
  411384:	push   esi
  411385:	mov    ?,WORD PTR [eax]
  411387:	adc    eax,0xe43900d5
  41138c:	movhpd xmm2,QWORD PTR [edx]
  411390:	push   esi
  411391:	jae    0x4113f5
  411393:	pop    ecx
  411394:	pop    ebx
  411395:	dec    ecx
  411396:	mov    eax,0x357c6a0
  41139b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41139c:	aam    0xc1
  41139e:	jno    0x4113bb
  4113a0:	pop    ecx
  4113a2:	pop    ebx
  4113a3:	inc    DWORD PTR [edi+0x6fed3ded]
  4113a9:	adc    al,0xc8
  4113ab:	and    DWORD PTR [edx],ecx
  4113ad:	push   ds
  4113ae:	xchg   bh,dl
  4113b0:	jmp    DWORD PTR [ebx-0x2167406c]
  4113b6:	xlat   BYTE PTR ds:[ebx]
  4113b7:	fild   WORD PTR [esp+edi*2+0x72852a72]
  4113be:	pop    ebp
  4113bf:	js     0x4113ca
  4113c1:	popf   
  4113c2:	adc    al,0x81
  4113c4:	xor    al,0xc7
  4113c6:	push   edx
  4113c7:	je     0x4113f8
  4113c9:	popf   
  4113ca:	out    0x29,al
  4113cc:	or     al,BYTE PTR [esi-0x13b89d21]
  4113d2:	mov    ah,0xb5
  4113d4:	mov    dl,0x98
  4113d6:	mov    ebx,0xb4917fba
  4113db:	cmp    DWORD PTR [esi],edi
  4113dd:	push   es
  4113de:	aas    
  4113df:	xlat   BYTE PTR ds:[ebx]
  4113e0:	nop
  4113e1:	rcl    esp,0x8e
  4113e4:	mov    ds:0xe0c7884c,eax
  4113e9:	fst    QWORD PTR [esi-0x2bb23ed4]
  4113ef:	and    esp,DWORD PTR [ebx-0x58]
  4113f2:	lds    ebx,FWORD PTR [edx]
  4113f4:	cmp    eax,0xd2b09e02
  4113f9:	in     eax,dx
  4113fa:	retf   0x6830
  4113fd:	mov    dh,0x30
  4113ff:	or     DWORD PTR [edx+edx*2-0x6c4b4b3f],ecx
  411406:	mov    ch,0xb3
  411408:	in     al,dx
  411409:	loop   0x41139e
  41140b:	adc    esp,esi
  41140d:	xchg   edi,eax
  41140e:	and    DWORD PTR [edx-0x7d1f8b5],edx
  411414:	clc    
  411415:	mov    ecx,0x4ae0483
  41141a:	mov    ebp,0x70bc1333
  41141f:	jl     0x4113e3
  411421:	retf   
  411422:	or     ebx,DWORD PTR [edx]
  411424:	mov    ds:0x7e58abf6,al
  411429:	sbb    edi,DWORD PTR [ebx]
  41142b:	pop    esp
  41142c:	arpl   WORD PTR [edi+0x5e],dx
  41142f:	jge    0x41143c
  411431:	shl    ecx,cl
  411433:	or     al,bl
  411435:	scas   al,BYTE PTR es:[edi]
  411436:	std    
  411437:	bound  ecx,QWORD PTR [edi-0xf38b306]
  41143d:	loope  0x4113ed
  41143f:	out    0x19,al
  411441:	sub    DWORD PTR [ecx],ebx
  411443:	jle    0x4114b4
  411445:	sub    eax,0x2cfbe252
  41144a:	sbb    ebx,esi
  41144c:	xchg   ebx,eax
  41144d:	inc    edx
  41144e:	fiadd  DWORD PTR [esi-0x64]
  411451:	xor    eax,0x4de375a6
  411456:	(bad)  
  411458:	fcompp 
  41145a:	xchg   esi,eax
  41145b:	es pop eax
  41145d:	adc    BYTE PTR [esi],dh
  41145f:	jae    0x41142e
  411461:	mov    dl,0x9a
  411463:	leave  
  411464:	jmp    0xf6ed:0xc2add278
  41146b:	xchg   esi,eax
  41146c:	sub    eax,0x6cc152f
  411471:	fistp  QWORD PTR [edx+ebp*1-0x27babba7]
  411478:	push   0x391d343d
  41147d:	icebp  
  41147e:	call   0xe9b0092f
  411483:	push   esi
  411484:	into   
  411485:	or     eax,0xe12b9cc4
  41148a:	pop    ds
  41148b:	and    al,ah
  41148d:	mov    BYTE PTR [edi+edi*4],bl
  411490:	leave  
  411491:	(bad)  
  411493:	mov    ecx,0x34ae39fb
  411498:	cld    
  411499:	iret   
  41149a:	fmul   QWORD PTR [ebx-0x723842a7]
  4114a0:	sub    eax,0x71e313a0
  4114a5:	retf   
  4114a6:	lock push ecx
  4114a8:	sbb    BYTE PTR [ebx+esi*2+0x71d4076f],al
  4114af:	sub    DWORD PTR [esi-0x1d],esi
  4114b2:	mov    bl,0x5b
  4114b4:	test   DWORD PTR [ecx+esi*8+0x3068ee5e],esi
  4114bb:	push   ebx
  4114bc:	stos   BYTE PTR es:[edi],al
  4114bd:	test   al,0x79
  4114bf:	das    
  4114c0:	pop    eax
  4114c1:	add    bh,dh
  4114c3:	in     al,dx
  4114c4:	stos   BYTE PTR es:[edi],al
  4114c5:	std    
  4114c6:	xchg   ecx,eax
  4114c7:	or     esp,DWORD PTR [ebp+edi*8-0x6e]
  4114cb:	push   ds
  4114cc:	icebp  
  4114cd:	or     DWORD PTR [edx-0x62],ebp
  4114d0:	das    
  4114d1:	scas   al,BYTE PTR es:[edi]
  4114d2:	jmp    0xd824cb78
  4114d7:	fist   DWORD PTR [edi]
  4114d9:	retf   
  4114da:	aam    0x70
  4114dc:	retf   0xc8e0
  4114df:	addr16 jmp 0x5fca5e79
  4114e5:	aad    0x3
  4114e7:	push   edi
  4114e8:	xor    BYTE PTR [edx-0x3f42cf28],ah
  4114ee:	popa   
  4114ef:	pop    esi
  4114f0:	and    al,0xc7
  4114f2:	inc    ecx
  4114f3:	cmp    eax,0x89018ddf
  4114f8:	fst    DWORD PTR [eax-0x16882513]
  4114fe:	and    al,0x5a
  411500:	jp     0x4114b5
  411502:	fucomip st,st(0)
  411504:	pop    ss
  411505:	loopne 0x4114b3
  411507:	jae    0x4114e1
  411509:	mov    edx,0x4d80acfc
  41150e:	bound  ebp,QWORD PTR [ebp-0xf]
  411511:	in     al,dx
  411512:	and    ah,bh
  411514:	ins    BYTE PTR es:[edi],dx
  411515:	cmp    ch,bl
  411517:	lock shl BYTE PTR [ebx-0x297a5f4b],1
  41151e:	cld    
  41151f:	or     ebp,eax
  411521:	mov    ecx,0x1b3107b2
  411526:	dec    edi
  411527:	mov    ebp,0xcbcc7337
  41152c:	idiv   DWORD PTR [eax+0x2f84b9d2]
  411532:	fld    TBYTE PTR [ecx-0x9]
  411535:	adc    di,WORD PTR [edi+edx*1]
  411539:	inc    eax
  41153a:	lahf   
  41153b:	loopne 0x4114ef
  41153d:	cmp    al,0xd3
  41153f:	push   edx
  411540:	or     eax,0xb6459bf3
  411545:	push   ebp
  411546:	call   FWORD PTR [ebx]
  411548:	inc    BYTE PTR [ebx]
  41154a:	xor    al,0xbc
  41154c:	jl     0x41159c
  41154e:	cwde   
  41154f:	pop    ebp
  411550:	mov    ebp,0x4b347f3b
  411555:	mov    al,0xfa
  411557:	stos   BYTE PTR es:[edi],al
  411558:	push   cs
  411559:	mov    esp,0xe5bac94b
  41155e:	loopne 0x411553
  411560:	jns    0x4115ad
  411562:	fldenv [edi+0x244b11e7]
  411568:	ss lahf 
  41156a:	push   edi
  41156b:	mov    ds:0xf0934a76,al
  411570:	movzx  ebp,BYTE PTR [ecx-0x22]
  411574:	aad    0xe
  411576:	mov    esi,0x880c75d7
  41157b:	or     eax,0xb3e1d7bd
  411580:	sbb    ebp,DWORD PTR [esi]
  411582:	out    dx,eax
  411583:	aad    0xb4
  411585:	mov    esp,0x5b9556e9
  41158a:	(bad)  
  41158b:	add    al,0x9a
  41158d:	cli    
  41158e:	push   ebx
  41158f:	cmp    al,0xf5
  411591:	inc    ecx
  411592:	inc    edx
  411593:	xor    DWORD PTR [edx-0x75890df7],ebp
  411599:	add    esp,DWORD PTR [eax+0x18]
  41159c:	enter  0xf1ab,0x96
  4115a0:	or     ebp,esi
  4115a2:	xchg   BYTE PTR [ecx],dh
  4115a4:	stc    
  4115a5:	call   0x1181b80
  4115aa:	dec    ecx
  4115ab:	mov    edx,0x8d0c5365
  4115b0:	imul   ebx,edx,0x6f116d89
  4115b6:	mov    edx,0x856d6b7d
  4115bb:	jnp    0x411592
  4115bd:	pop    edi
  4115be:	mov    ah,0xd7
  4115c0:	xor    DWORD PTR [edi+0x10],ecx
  4115c3:	cmp    BYTE PTR [edx],ch
  4115c5:	leave  
  4115c6:	mov    esp,0x6526f13c
  4115cb:	retf   0xb5bb
  4115ce:	cmp    BYTE PTR [edi+0x58],0xdc
  4115d2:	push   esp
  4115d3:	pusha  
  4115d4:	out    0x3d,al
  4115d6:	test   BYTE PTR [edx],ch
  4115d8:	arpl   WORD PTR [eax+0x1892ee70],dx
  4115de:	enter  0x9a65,0x9a
  4115e2:	neg    BYTE PTR [edi-0x48]
  4115e5:	fisttp WORD PTR [edx-0x7a]
  4115e8:	inc    edx
  4115e9:	mov    ebp,0xb220dc78
  4115ee:	outs   dx,BYTE PTR ds:[esi]
  4115ef:	div    DWORD PTR [edx+0x5d3083e4]
  4115f5:	lods   al,BYTE PTR ds:[esi]
  4115f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f8:	jl     0x4115d9
  4115fa:	mov    edx,0xdc49ecc5
  4115ff:	dec    esp
  411600:	stos   BYTE PTR es:[edi],al
  411601:	retf   
  411602:	inc    esi
  411603:	mov    bl,0xbd
  411605:	push   eax
  411606:	mov    ds:0x4c4a21f2,al
  41160b:	push   ebx
  41160c:	dec    edx
  41160d:	les    esi,FWORD PTR [ecx-0x78]
  411610:	loop   0x411671
  411612:	and    dl,dl
  411614:	into   
  411615:	sti    
  411616:	add    DWORD PTR [edx],edi
  411618:	out    dx,al
  411619:	aad    0x93
  41161b:	mov    ebp,0x1617b2f3
  411620:	push   ebp
  411621:	lods   eax,DWORD PTR ds:[esi]
  411622:	mov    BYTE PTR [edi+0x38],0x94
  411626:	lods   al,BYTE PTR ds:[esi]
  411627:	push   es
  411628:	cmc    
  411629:	js     0x41165b
  41162b:	not    BYTE PTR [ecx+0x2a99042f]
  411631:	jno    0x4115be
  411633:	dec    edi
  411634:	int    0x87
  411636:	xor    dh,bh
  411638:	jne    0x411639
  41163a:	push   0x70
  41163c:	arpl   WORD PTR ds:[edi-0x5],ax
  411640:	test   eax,0x8849dd28
  411645:	push   es
  411646:	pop    ebx
  411647:	call   0x6a0c:0xd93a9117
  41164e:	and    cl,BYTE PTR [ebp+0x11]
  411651:	loope  0x411659
  411653:	push   esp
  411654:	(bad)  
  411655:	scas   al,BYTE PTR es:[edi]
  411656:	pop    ds
  411657:	mov    cl,0x4d
  411659:	les    ebx,FWORD PTR [edi-0x3c]
  41165c:	push   esi
  41165d:	xlat   BYTE PTR ds:[ebx]
  41165e:	mov    ecx,DWORD PTR [ecx-0x4b412aa5]
  411664:	outs   dx,BYTE PTR ds:[esi]
  411665:	sbb    al,0x66
  411667:	push   ebp
  411668:	sbb    dh,BYTE PTR [edx+ebp*2-0x7128ff5f]
  41166f:	mov    es,WORD PTR [edi]
  411671:	pop    esi
  411672:	adc    eax,0x5dfbda0f
  411677:	pusha  
  411678:	and    eax,0x1a0ba9da
  41167d:	popf   
  41167e:	cmp    eax,DWORD PTR [ebx]
  411680:	push   edx
  411681:	out    0x82,eax
  411683:	loop   0x411670
  411685:	sbb    eax,0x77214f1
  41168a:	and    eax,DWORD PTR [ebx+0x487f3aa7]
  411690:	inc    ecx
  411691:	mov    WORD PTR [esi+esi*1+0x31],ss
  411695:	ret    
  411696:	xor    al,0xa1
  411698:	(bad)  
  41169a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41169b:	call   0xc22af5cc
  4116a0:	lods   eax,DWORD PTR ds:[esi]
  4116a1:	cmp    edx,ebx
  4116a3:	mov    ebp,0xb8821925
  4116a8:	xchg   ebx,eax
  4116a9:	psllq  mm6,QWORD PTR [edi-0x32bd44bc]
  4116b0:	inc    ebx
  4116b1:	test   DWORD PTR [eax+0xbb31633],0x9f2131db
  4116bb:	sti    
  4116bc:	xchg   edi,eax
  4116bd:	push   ecx
  4116be:	add    ah,BYTE PTR [esi+0x403c03e2]
  4116c4:	jg     0x411737
  4116c6:	jmp    0x411706
  4116c8:	cld    
  4116c9:	dec    esp
  4116ca:	icebp  
  4116cb:	adc    bl,al
  4116cd:	rol    BYTE PTR [eax],0xed
  4116d0:	mov    edx,0xc6427014
  4116d5:	sbb    eax,DWORD PTR [edx+0x4f]
  4116d8:	adc    DWORD PTR [ebx],esi
  4116da:	inc    esp
  4116db:	push   esp
  4116dc:	shl    BYTE PTR [edi],0x8
  4116df:	sbb    al,0xbe
  4116e1:	in     al,dx
  4116e2:	add    ebx,ecx
  4116e4:	and    BYTE PTR [ebx-0x3],al
  4116e7:	adc    BYTE PTR [ecx],al
  4116e9:	push   eax
  4116ea:	popf   
  4116eb:	xadd   ah,ah
  4116ee:	aaa    
  4116ef:	mov    al,ds:0x1ce1efbb
  4116f4:	and    al,0x9e
  4116f6:	scas   eax,DWORD PTR es:[edi]
  4116f7:	shl    BYTE PTR [edi+0x58],1
  4116fa:	out    dx,al
  4116fb:	inc    ecx
  4116fc:	jp     0x41175b
  4116fe:	mov    ss,WORD PTR [ebp+0xbd0e869]
  411704:	and    al,0x8c
  411706:	mov    DWORD PTR ds:0xbad80a14,esp
  41170c:	sub    eax,0x4db02800
  411711:	stos   BYTE PTR es:[edi],al
  411712:	inc    eax
  411713:	mov    bl,0x99
  411715:	pop    ebp
  411716:	lea    esi,[eax]
  411718:	xor    eax,DWORD PTR [edx+esi*1+0x53]
  41171c:	sbb    DWORD PTR [edi+0x65c666e2],ebp
  411722:	cmp    eax,0xac5ed11b
  411727:	pop    ss
  411728:	xor    cl,BYTE PTR [esi-0x6d]
  41172b:	cmp    al,0x3a
  41172d:	daa    
  41172e:	xor    dh,BYTE PTR [edi-0x5ab96505]
  411734:	imul   esi,eax,0x62c095b5
  41173a:	pop    edx
  41173b:	mov    ebx,0x1f446409
  411740:	in     eax,dx
  411741:	pop    es
  411742:	sbb    dl,BYTE PTR [edi-0x75]
  411745:	and    DWORD PTR [edx-0x114620f3],ebp
  41174b:	pop    ebp
  41174c:	push   esp
  41174d:	div    DWORD PTR [ebp+ebx*1-0x3]
  411751:	inc    edi
  411752:	jb     0x411775
  411754:	repz (bad) 
  411756:	std    
  411757:	fld    TBYTE PTR [ecx+ebp*2+0x1bfc6b0e]
  41175e:	retf   0x2b36
  411761:	sub    al,0x98
  411763:	mov    BYTE PTR [edi],dl
  411765:	mov    esp,0x60df56ad
  41176a:	(bad)  
  41176b:	fistp  DWORD PTR [esi+0x479d1936]
  411771:	aas    
  411772:	arpl   WORD PTR [ecx+0x74],bp
  411775:	ins    DWORD PTR es:[edi],dx
  411776:	pop    edx
  411777:	sbb    al,0x50
  411779:	mov    edx,0x3b7a8095
  41177e:	and    eax,DWORD PTR [esi]
  411780:	lock sbb al,0xf8
  411783:	lock pop eax
  411785:	(bad)  
  411786:	cli    
  411787:	pop    ss
  411788:	xor    eax,0x26d84cfe
  41178d:	mov    esi,eax
  41178f:	xor    eax,DWORD PTR [ebx-0xa7359a8]
  411795:	test   al,0x17
  411797:	xor    edi,DWORD PTR [edx]
  411799:	inc    eax
  41179a:	lock sbb eax,0xa0044865
  4117a0:	aam    0x92
  4117a2:	cmc    
  4117a3:	pop    es
  4117a4:	cld    
  4117a5:	clc    
  4117a6:	addr16 test ah,cl
  4117a9:	retf   
  4117aa:	ins    BYTE PTR es:[edi],dx
  4117ab:	pop    ebp
  4117ac:	mov    ds:0xc3a5e45e,al
  4117b1:	add    al,0xbf
  4117b3:	jmp    0xe9787299
  4117b8:	aas    
  4117b9:	and    bl,cl
  4117bb:	push   edx
  4117bc:	mov    al,0x81
  4117be:	lock pop esi
  4117c0:	les    edx,FWORD PTR [edi-0x6d8306d0]
  4117c6:	mov    esi,0x18c5e098
  4117cb:	daa    
  4117cc:	imul   ebp,DWORD PTR [ebp-0x2d],0x69
  4117d0:	cli    
  4117d1:	xor    al,BYTE PTR [ecx+0x50a817cd]
  4117d7:	and    eax,0x1442b5f
  4117dc:	aad    0xd3
  4117de:	mov    ecx,0xfd3ad0b2
  4117e3:	sub    eax,0x4f450d03
  4117e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e9:	xchg   ebx,eax
  4117ea:	add    BYTE PTR [ecx-0x17],0xd1
  4117ee:	sub    ecx,esi
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	adc    BYTE PTR [ebx],al
  41186e:	(bad)  
  41186f:	jne    0x411859
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	test   BYTE PTR [ebx],al
  41187a:	xchg   esp,eax
  41187b:	loop   0x4118e1
  41187d:	imul   eax,DWORD PTR [edx-0x11d2d5a3],0x1f75f06
  411887:	mov    bl,0xe4
  411889:	js     0x4118db
  41188b:	mov    WORD PTR [ecx],es
  41188d:	dec    esp
  41188e:	sub    BYTE PTR [edx-0x44d87d40],bl
  411894:	jae    0x4118c0
  411896:	cmp    DWORD PTR [eax+0x3b],esi
  411899:	push   esi
  41189a:	add    ch,BYTE PTR [ecx+ebp*8-0x14]
  41189e:	dec    ecx
  41189f:	add    al,0x6c
  4118a1:	xor    cl,ch
  4118a3:	rcr    BYTE PTR ds:0x7be6265f,1
  4118a9:	push   ds
  4118aa:	repz jb 0x411877
  4118ad:	nop
  4118ae:	or     al,0x5
  4118b0:	movntq QWORD PTR [ebp+0x2c57515e],mm1
  4118b7:	push   0x43bd89b8
  4118bc:	(bad)  
  4118bd:	ficom  WORD PTR [edx]
  4118bf:	clc    
  4118c0:	lahf   
  4118c1:	into   
  4118c2:	sub    eax,0x5908d555
  4118c7:	ds pop esi
  4118c9:	xor    DWORD PTR [edi],esi
  4118cb:	test   BYTE PTR [esi],ah
  4118cd:	and    ecx,0xffffffbe
  4118d0:	or     edi,edi
  4118d2:	je     0x41186c
  4118d4:	stos   DWORD PTR es:[edi],eax
  4118d5:	sub    al,0xf0
  4118d7:	popa   
  4118d8:	lock ss hlt 
  4118db:	sbb    ah,BYTE PTR [edx+0x76]
  4118de:	bound  edi,QWORD PTR [esi-0x205dfdc9]
  4118e4:	sti    
  4118e5:	jb     0x4118b6
  4118e7:	and    al,0x6d
  4118e9:	inc    edx
  4118ea:	out    dx,al
  4118eb:	add    edx,DWORD PTR [edi]
  4118ed:	jmp    0x4118a0
  4118ef:	mov    ebx,0x4f045c81
  4118f4:	mov    ebp,0xee942647
  4118f9:	(bad)  
  4118fa:	in     eax,dx
  4118fb:	out    0x46,eax
  4118fd:	pop    ebx
  4118fe:	popa   
  4118ff:	push   edx
  411900:	out    dx,eax
  411901:	or     ch,bh
  411903:	popa   
  411904:	push   ebx
  411906:	pop    edx
  411907:	or     eax,0x4c126d74
  41190c:	sub    al,0xf5
  41190e:	jp     0x4118a2
  411910:	stos   DWORD PTR es:[edi],eax
  411911:	adc    bl,BYTE PTR [esi+0x12]
  411914:	pop    edx
  411915:	les    esp,FWORD PTR [edx+0x7]
  411918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411919:	popa   
  41191a:	jb     0x4118f5
  41191c:	xchg   edx,eax
  41191d:	pop    edx
  41191e:	sub    bh,BYTE PTR [edx]
  411920:	or     BYTE PTR ds:0x6559edff,dl
  411926:	or     al,0x49
  411928:	fsubr  DWORD PTR [edx]
  41192a:	or     ch,BYTE PTR [ebx+esi*1-0x7226e33b]
  411931:	(bad)  
  411932:	enter  0x1538,0x6
  411936:	test   DWORD PTR [ebp-0x1d],esp
  411939:	and    bh,cl
  41193b:	inc    edx
  41193c:	mov    ah,0x12
  41193e:	in     eax,dx
  41193f:	int3   
  411940:	cmp    DWORD PTR [eax-0x757a4e61],esp
  411946:	mov    BYTE PTR [ecx-0x58],bh
  411949:	mov    ebx,0x2cb654b8
  41194e:	sbb    ebx,esi
  411950:	inc    ebp
  411951:	lea    esp,[eax+0x2f]
  411954:	dec    eax
  411955:	lods   eax,DWORD PTR ds:[esi]
  411956:	fimul  DWORD PTR [esi]
  411958:	push   ds
  411959:	pop    esi
  41195a:	(bad)  
  41195b:	aas    
  41195c:	pop    ss
  41195d:	call   0x183b:0x812e9868
  411964:	repz aam 0x97
  411967:	imul   esp,DWORD PTR [edi-0x6b],0xd
  41196b:	inc    eax
  41196c:	cmp    ah,BYTE PTR [ebx-0x71]
  41196f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411970:	fiadd  DWORD PTR [edx+0x2d41426d]
  411976:	push   ebx
  411977:	pop    ds
  411978:	jg     0x4119c1
  41197a:	cmp    ch,0xe2
  41197d:	(bad)  
  41197e:	sbb    al,0xf6
  411980:	in     eax,dx
  411981:	in     al,0x24
  411983:	mov    eax,ss:0x3a2d6f5a
  411989:	jg     0x4119aa
  41198b:	fwait
  41198c:	adc    edx,DWORD PTR [edi+0x3eb4c1f5]
  411992:	xor    dl,BYTE PTR [ecx]
  411994:	cwde   
  411995:	pusha  
  411996:	mov    eax,ds:0x4e0ee398
  41199b:	ja     0x41196d
  41199d:	xor    eax,DWORD PTR [ebx-0x29]
  4119a0:	(bad)  
  4119a1:	ins    DWORD PTR es:[edi],dx
  4119a2:	mov    ah,0xb1
  4119a4:	pop    edi
  4119a5:	imul   edx,DWORD PTR [ebx+0x2a],0x5dbe1e88
  4119ac:	mov    dl,0xf9
  4119ae:	sahf   
  4119af:	fs dec ecx
  4119b1:	cs es cmc 
  4119b4:	push   edi
  4119b5:	xchg   ebx,eax
  4119b6:	or     al,0x41
  4119b8:	es nop
  4119ba:	dec    edx
  4119bb:	daa    
  4119bc:	(bad)  
  4119bd:	fadd   DWORD PTR [ecx+0x61]
  4119c0:	jmp    0xc93b:0xc658be2c
  4119c7:	dec    ebp
  4119c8:	and    dl,BYTE PTR [edx+0x5d]
  4119cb:	cmp    dl,BYTE PTR ds:0x96e77e26
  4119d1:	(bad)  
  4119d2:	fcomp  DWORD PTR [edx-0x5dee8bc4]
  4119d8:	repnz lea esp,[esp+ebx*1+0x32dd2dcb]
  4119e0:	test   al,0x97
  4119e2:	mov    dl,0xa0
  4119e4:	pop    ecx
  4119e5:	push   ss
  4119e6:	aam    0x7e
  4119e8:	jne    0x411a5c
  4119ea:	jecxz  0x4119df
  4119ec:	mov    al,0x2
  4119ee:	jns    0x4119e7
  4119f0:	fwait
  4119f1:	lahf   
  4119f2:	push   0x2b
  4119f4:	loopne 0x411a0b
  4119f6:	test   eax,0xe2f9b08
  4119fb:	punpcklwd mm6,DWORD PTR [esi]
  4119fe:	dec    edx
  4119ff:	sub    ch,BYTE PTR [eax]
  411a01:	xchg   DWORD PTR [ebx],ebx
  411a03:	add    esp,DWORD PTR [ecx]
  411a05:	mov    eax,0x8770b977
  411a0a:	jecxz  0x4119af
  411a0c:	sub    esi,DWORD PTR [eax]
  411a0e:	repz mov es,WORD PTR [edi-0x17e971ec]
  411a15:	inc    esp
  411a16:	inc    eax
  411a17:	mov    dl,0xcd
  411a19:	out    dx,al
  411a1a:	daa    
  411a1b:	lock add al,0xf3
  411a1e:	push   0x71
  411a20:	mov    bl,0x39
  411a22:	(bad)  
  411a23:	in     al,0x2c
  411a25:	push   edi
  411a26:	adc    BYTE PTR [eax+0x7b],bl
  411a29:	xchg   edx,eax
  411a2a:	pop    ecx
  411a2b:	pop    ebp
  411a2c:	mov    eax,0x3926c1ac
  411a31:	dec    ecx
  411a32:	fs xchg ebx,eax
  411a34:	stos   DWORD PTR es:[edi],eax
  411a35:	fisttp DWORD PTR [edi+0x617e421]
  411a3b:	sub    al,0x57
  411a3d:	xor    DWORD PTR ds:0xaba1aa58,ebp
  411a43:	xor    ebx,DWORD PTR [edx+0x714be8e]
  411a49:	pop    ss
  411a4a:	mov    al,ds:0x35695734
  411a4f:	and    DWORD PTR [ebp-0x21ab60dc],ecx
  411a55:	xchg   edi,eax
  411a56:	retf   0x5b45
  411a59:	imul   esi,DWORD PTR [ecx+0x1edea79d],0x192c7e5
  411a63:	push   cs
  411a64:	das    
  411a65:	out    dx,eax
  411a66:	push   ss
  411a67:	pusha  
  411a68:	sub    al,0x2f
  411a6a:	in     al,dx
  411a6b:	jmp    0x8f1dc030
  411a70:	adc    DWORD PTR [ebp+esi*8-0x4f],edi
  411a74:	mov    esi,DWORD PTR ds:0x8891e35d
  411a7a:	aaa    
  411a7b:	cli    
  411a7c:	push   ecx
  411a7d:	into   
  411a7e:	es stos BYTE PTR es:[edi],al
  411a80:	(bad)  
  411a81:	repz jg 0x411a6e
  411a84:	inc    esi
  411a85:	or     DWORD PTR [edi+0x78bf130a],eax
  411a8b:	pop    ecx
  411a8c:	das    
  411a8d:	call   0xf708:0xf304c41e
  411a94:	fnstsw WORD PTR [eax-0x11]
  411a97:	in     al,dx
  411a98:	cmp    DWORD PTR [ecx+ebp*1],esi
  411a9b:	mov    WORD PTR [edi],ss
  411a9d:	xor    bl,BYTE PTR [esi-0x5f]
  411aa0:	mov    esi,DWORD PTR [ebp-0x77]
  411aa3:	or     al,0xf3
  411aa5:	jp     0x411aa2
  411aa7:	psubb  mm7,QWORD PTR [edi-0x7b5ccdf7]
  411aae:	xor    ah,BYTE PTR [ebx+eax*2]
  411ab1:	mov    esp,gs
  411ab3:	std    
  411ab4:	mov    ds:0xc8777087,eax
  411ab9:	add    al,0x1a
  411abb:	sbb    edx,ebx
  411abd:	jb     0x411a54
  411abf:	ja     0x411b34
  411ac1:	jne    0x411a90
  411ac3:	outs   dx,DWORD PTR ds:[esi]
  411ac4:	rol    BYTE PTR [eax],1
  411ac6:	cs mov bh,0x99
  411ac9:	paddsb mm0,QWORD PTR [ecx+ecx*1-0x29]
  411ace:	mov    al,ds:0x7fc6ef5f
  411ad3:	es jno 0x411b11
  411ad6:	mov    esi,0xc8e71b0b
  411adb:	pop    esi
  411adc:	pop    edx
  411add:	sbb    edx,DWORD PTR [ecx+0x20]
  411ae0:	add    DWORD PTR [edi-0x5d9b610],0x8c3224b8
  411aea:	ret    
  411aeb:	cmp    dh,BYTE PTR [edi-0xb409250]
  411af1:	or     eax,0x148630a7
  411af6:	mov    BYTE PTR [eax],bh
  411af8:	repz cld 
  411afa:	stos   DWORD PTR es:[edi],eax
  411afb:	push   cs
  411afc:	or     ebx,DWORD PTR [esi-0x317d615a]
  411b02:	outs   dx,DWORD PTR ds:[esi]
  411b03:	bound  edi,QWORD PTR [ecx-0x7fcd424f]
  411b09:	int3   
  411b0a:	jl     0x411b5d
  411b0c:	xor    DWORD PTR [edi],0xffffffe0
  411b0f:	cld    
  411b10:	sbb    esp,DWORD PTR [eax-0x2bcaedf5]
  411b16:	add    DWORD PTR [edx+0x74e1772],ebx
  411b1c:	inc    esp
  411b1d:	mov    edx,0xe390d3f7
  411b22:	sahf   
  411b23:	retf   
  411b24:	bswap  edx
  411b26:	mov    edx,0x69e35fcf
  411b2b:	adc    DWORD PTR [eax+0x19],0x78
  411b2f:	lahf   
  411b30:	dec    edi
  411b31:	shl    DWORD PTR [esp+edx*2-0x20d9157f],1
  411b38:	ins    DWORD PTR es:[edi],dx
  411b39:	sbb    bh,BYTE PTR [edi+0x35]
  411b3c:	jae    0x411acb
  411b3e:	std    
  411b3f:	shl    BYTE PTR [eax-0x4fb6b310],0x81
  411b46:	fldcw  WORD PTR [eax]
  411b48:	or     bl,BYTE PTR [ebx]
  411b4a:	jb     0x411b44
  411b4c:	and    al,0x8c
  411b4e:	shl    ch,0xad
  411b51:	push   edx
  411b52:	mov    cl,0x88
  411b54:	cmp    al,BYTE PTR [ecx]
  411b56:	fistp  QWORD PTR [esi-0x3d0c02a4]
  411b5c:	out    0x41,al
  411b5e:	hlt    
  411b5f:	push   cs
  411b60:	cs jle 0x411ba6
  411b63:	js     0x411bad
  411b65:	jle    0x411b91
  411b67:	pop    esp
  411b68:	(bad)  
  411b69:	in     al,dx
  411b6a:	sti    
  411b6b:	xor    bl,bl
  411b6d:	clc    
  411b6e:	dec    esi
  411b6f:	pop    ecx
  411b70:	push   ss
  411b71:	jmp    0xa80d36fb
  411b76:	imul   BYTE PTR [ebx-0x271208ac]
  411b7c:	sub    cl,ch
  411b7e:	das    
  411b7f:	xchg   ebp,eax
  411b80:	enter  0xc107,0x68
  411b84:	(bad)  
  411b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b86:	hlt    
  411b87:	mov    ebx,DWORD PTR [ecx-0x2e91d87f]
  411b8d:	dec    ecx
  411b8e:	add    al,0x5a
  411b90:	pop    ebp
  411b91:	sub    esp,ebx
  411b93:	mov    eax,ds:0x12a1450b
  411b98:	mov    gs,eax
  411b9a:	jmp    0xc18a:0x93ddb508
  411ba1:	shr    BYTE PTR [esi+ebp*2-0x27b3059c],1
  411ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ba9:	test   al,0xa0
  411bab:	in     eax,0xd6
  411bad:	or     al,0x2a
  411baf:	test   al,0x8f
  411bb1:	mov    esp,0xd9c5d120
  411bb6:	pop    ss
  411bb7:	push   ecx
  411bb8:	fadd   QWORD PTR [ecx-0x4854e417]
  411bbe:	pop    esi
  411bbf:	lods   al,BYTE PTR ds:[esi]
  411bc0:	pop    ecx
  411bc1:	dec    esi
  411bc2:	dec    ebx
  411bc3:	xchg   esi,eax
  411bc4:	mov    WORD PTR [bp+si-0x6a9d],?
  411bc9:	pop    eax
  411bca:	push   0xfffffff0
  411bcc:	ds (bad) 
  411bcf:	imul   ebx,DWORD PTR [esi+0x72],0x5
  411bd3:	daa    
  411bd4:	mov    ?,WORD PTR [edx]
  411bd6:	sbb    ah,BYTE PTR [ecx+0x30]
  411bd9:	add    esi,DWORD PTR ds:0x9f64e773
  411bdf:	loopne 0x411c4c
  411be1:	cld    
  411be2:	mov    al,0x39
  411be4:	in     al,dx
  411be5:	cld    
  411be6:	iret   
  411be7:	out    dx,al
  411be8:	mov    ebx,DWORD PTR [ecx-0x55]
  411beb:	popf   
  411bec:	xlat   BYTE PTR ds:[ebx]
  411bed:	repnz lds eax,FWORD PTR [esi+edi*4+0x38]
  411bf2:	or     bh,ch
  411bf4:	jecxz  0x411bde
  411bf6:	add    eax,0x655af2f4
  411bfb:	push   0x186f4bcf
  411c00:	adc    ah,cl
  411c02:	cmc    
  411c03:	push   esi
  411c04:	fisttp DWORD PTR [edi+ebx*8]
  411c07:	out    dx,al
  411c08:	into   
  411c09:	mov    esp,0xe5dca83a
  411c0e:	ret    
  411c0f:	mov    ds:0x569b6383,al
  411c14:	pusha  
  411c15:	mov    ds:0x84594361,al
  411c1a:	call   0x1cf6710d
  411c1f:	sub    DWORD PTR [esi+0x18],eax
  411c22:	inc    ecx
  411c23:	cmp    ebx,ebp
  411c25:	cmp    eax,0x5667b495
  411c2a:	and    ch,BYTE PTR [ebp-0x5bf8574d]
  411c30:	mov    eax,ds:0x97933fe4
  411c35:	sub    BYTE PTR [ecx],0x17
  411c38:	test   BYTE PTR [ebx],al
  411c3a:	push   ebp
  411c3b:	adc    DWORD PTR [eax+0x49],eax
  411c3e:	mov    ds:0x38e8d299,eax
  411c43:	clc    
  411c44:	rol    esi,1
  411c46:	push   0x56366da7
  411c4b:	sub    al,0xa9
  411c4d:	dec    ecx
  411c4e:	ja     0x411c78
  411c50:	shr    BYTE PTR [ebx+0xb62e36a],0xa0
  411c57:	jmp    0x3d26915d
  411c5c:	push   esp
  411c5d:	int    0x10
  411c5f:	push   ss
  411c60:	xor    ecx,esi
  411c62:	hlt    
  411c63:	in     al,0xe8
  411c65:	imul   esp,DWORD PTR [edx-0x2f],0xffffff82
  411c69:	cmp    esp,eax
  411c6b:	mov    dl,0xc
  411c6d:	add    dl,BYTE PTR [edi-0x6f22e828]
  411c73:	xor    esp,edx
  411c75:	call   0x292b:0x87db122c
  411c7c:	leave  
  411c7d:	mov    cl,0x7a
  411c7f:	jp     0x411cd8
  411c81:	iret   
  411c82:	mov    dl,0x78
  411c84:	mov    cl,0xa8
  411c86:	jbe    0x411ca5
  411c88:	jne    0x411c77
  411c8a:	test   al,0x5d
  411c8c:	(bad)  
  411c8d:	jo     0x411c27
  411c8f:	lock xor al,0x18
  411c92:	(bad)  
  411c93:	aas    
  411c94:	jno    0x411d0a
  411c96:	sbb    ebx,DWORD PTR [edx]
  411c98:	in     eax,dx
  411c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c9a:	mov    edx,0x5b3fdf3d
  411c9f:	push   ebp
  411ca0:	mov    ecx,0x84038966
  411ca5:	xchg   BYTE PTR [edi-0x3f],bh
  411ca8:	retf   0x99b0
  411cab:	scas   al,BYTE PTR es:[edi]
  411cac:	pop    ebp
  411cad:	je     0x411cd8
  411caf:	mov    edx,0x6183825d
  411cb4:	xor    al,0x84
  411cb6:	adc    bh,ah
  411cb8:	popa   
  411cb9:	(bad)  
  411cba:	ret    
  411cbb:	lea    esp,[eax-0x220b4d0e]
  411cc1:	sbb    eax,DWORD PTR [edx+0x53]
  411cc4:	adc    al,0x62
  411cc6:	inc    DWORD PTR [ebx-0x46]
  411cc9:	stc    
  411cca:	sbb    ebx,DWORD PTR [esi-0x5a]
  411ccd:	sub    DWORD PTR [esi+edi*8-0x31],0x54
  411cd2:	call   0xbb8164f8
  411cd7:	pop    es
  411cd8:	or     ch,bl
  411cda:	inc    ecx
  411cdb:	cmc    
  411cdc:	stos   DWORD PTR es:[edi],eax
  411cdd:	iret   
  411cde:	rcl    DWORD PTR [ebp+0x1960e31f],1
  411ce4:	sub    BYTE PTR [ebp-0x5f538ea2],bh
  411cea:	cmp    esp,edi
  411cec:	inc    ecx
  411ced:	ins    DWORD PTR es:[edi],dx
  411cee:	jno    0x411d4c
  411cf0:	out    0x80,eax
  411cf2:	mov    esp,0x4296cdc
  411cf7:	xlat   BYTE PTR ds:[ebx]
  411cf8:	cmc    
  411cf9:	loope  0x411d00
  411cfb:	ret    0xa03a
  411cfe:	adc    esi,ebx
  411d00:	jne    0x411c8e
  411d02:	or     dh,BYTE PTR [esi+0x14]
  411d05:	xchg   DWORD PTR [edx+0x8],esp
  411d08:	aad    0xe
  411d0a:	and    di,WORD PTR [eax-0x6e7c055a]
  411d11:	cmp    eax,0x88692055
  411d16:	mov    dh,0x74
  411d18:	inc    edi
  411d19:	cmc    
  411d1a:	pop    eax
  411d1b:	add    al,0x1a
  411d1d:	cmp    eax,0x1216c31c
  411d22:	test   eax,0xafb0d90f
  411d27:	or     ch,al
  411d29:	and    esi,ecx
  411d2b:	and    bl,BYTE PTR [ebp+0x2af871cb]
  411d31:	je     0x411d96
  411d33:	ror    BYTE PTR [ebx+0x4c8608e0],1
  411d39:	stos   DWORD PTR es:[edi],eax
  411d3a:	inc    edi
  411d3b:	in     eax,0xfe
  411d3d:	cli    
  411d3e:	rcr    DWORD PTR [edx-0x2b],1
  411d41:	mov    bl,0x3c
  411d43:	add    bl,ah
  411d45:	xchg   esp,eax
  411d46:	dec    ebx
  411d47:	dec    esp
  411d48:	aam    0x91
  411d4a:	xor    al,0x32
  411d4c:	or     BYTE PTR [edx-0x14bb665d],dl
  411d52:	loope  0x411d9c
  411d54:	mov    ch,0x35
  411d56:	jo     0x411d39
  411d58:	sahf   
  411d59:	push   esp
  411d5a:	test   BYTE PTR [ebp+0x249d646c],0xe5
  411d61:	push   0xfffffffc
  411d63:	push   esi
  411d64:	mov    dh,0xb1
  411d66:	mov    ecx,0x87f2ec7c
  411d6b:	test   eax,0x2ad70fe5
  411d70:	fld    DWORD PTR [edi+0x2e72c0ab]
  411d76:	push   0x6c
  411d78:	leave  
  411d79:	mov    BYTE PTR [edi+0x55],bh
  411d7c:	sbb    edi,DWORD PTR [ebx]
  411d7e:	sbb    ecx,eax
  411d80:	sub    eax,0xdb838d28
  411d85:	icebp  
  411d86:	xor    BYTE PTR [ecx+ebp*1-0x69159d0e],bl
  411d8d:	in     al,0xdc
  411d8f:	sbb    al,0xc3
  411d91:	pop    es
  411d92:	enter  0x1d5b,0xc9
  411d96:	bound  edx,QWORD PTR [ecx]
  411d98:	test   DWORD PTR [edi],ebp
  411d9a:	sub    al,0x13
  411d9c:	jecxz  0x411d81
  411d9e:	in     al,dx
  411d9f:	cmp    eax,DWORD PTR [edx-0x22]
  411da2:	popa   
  411da3:	arpl   WORD PTR [edi],di
  411da5:	ins    DWORD PTR es:[edi],dx
  411da6:	or     ebp,0x60c3ea00
  411dac:	dec    esp
  411dad:	mov    eax,ds:0xf99e679e
  411db2:	sbb    dl,dh
  411db4:	sbb    bl,BYTE PTR [edi+0x3e87dee1]
  411dba:	mov    dl,0xfd
  411dbc:	inc    ebx
  411dbd:	fisttp WORD PTR [edx-0x46da5847]
  411dc3:	stos   BYTE PTR es:[edi],al
  411dc4:	push   ebp
  411dc5:	rcl    BYTE PTR [edx+eiz*2+0x38f4739],1
  411dcc:	aas    
  411dcd:	int3   
  411dce:	sbb    cl,BYTE PTR [ecx-0x5c868fd5]
  411dd4:	cmp    DWORD PTR [ebx+eiz*1+0x4ecb2a32],eax
  411ddb:	pusha  
  411ddc:	les    edx,FWORD PTR [esi-0x44953dad]
  411de2:	mov    bl,BYTE PTR [ecx+ebx*4]
  411de5:	pop    ss
  411de6:	shl    DWORD PTR [esi-0x7e],0xec
  411dea:	pop    esi
  411deb:	std    
  411dec:	sbb    al,0xb5
  411def:	cmp    eax,0x1a940732
  411df4:	cli    
  411df5:	fcom   DWORD PTR [eax+0x28]
  411df8:	(bad)  [edi+0x22bec9ab]
  411dfe:	inc    eax
  411dff:	mov    cl,0xad
  411e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e02:	push   0x61ce0915
  411e07:	jno    0x411e5c
  411e09:	jle    0x411e1e
  411e0b:	shl    ch,0x95
  411e0e:	inc    edx
  411e0f:	leave  
  411e10:	jmp    0x217:0x5dc8596d
  411e17:	enter  0x5d12,0xb5
  411e1b:	adc    ebx,ecx
  411e1d:	jecxz  0x411e74
  411e1f:	xchg   ebx,eax
  411e20:	jne    0x411e70
  411e22:	addr16 sub al,0x9c
  411e25:	add    edi,eax
  411e27:	sar    DWORD PTR [esi],cl
  411e29:	pop    eax
  411e2a:	add    bh,bl
  411e2c:	xor    al,0x5b
  411e2e:	rol    DWORD PTR [esi],1
  411e30:	cmc    
  411e31:	jecxz  0x411ded
  411e33:	scas   al,BYTE PTR es:[edi]
  411e34:	push   ebx
  411e35:	iret   
  411e36:	aam    0x24
  411e38:	or     eax,0xd60e68c4
  411e3d:	fisubr WORD PTR [eax+0xa]
  411e40:	sub    al,ah
  411e42:	cdq    
  411e43:	shl    BYTE PTR [esi+eiz*1-0x2a],0xba
  411e48:	stos   DWORD PTR es:[edi],eax
  411e49:	jb     0x411e09
  411e4b:	dec    esp
  411e4c:	or     ch,BYTE PTR [edi-0x3]
  411e4f:	add    eax,DWORD PTR [edi+0x71a52280]
  411e55:	das    
  411e56:	mov    al,ds:0xa19bd7e3
  411e5b:	xor    dl,BYTE PTR [edi+0x479c1c6b]
  411e61:	fidiv  WORD PTR [ebx-0x58319750]
  411e67:	mov    WORD PTR [edx-0x52f3d43d],gs
  411e6d:	in     al,dx
  411e6e:	pusha  
  411e6f:	or     al,0x51
  411e71:	lods   eax,DWORD PTR ds:[esi]
  411e72:	lea    ebp,[edx]
  411e74:	jnp    0x411e27
  411e76:	pop    edx
  411e77:	pusha  
  411e78:	outs   dx,BYTE PTR ds:[esi]
  411e79:	fist   WORD PTR [ebp+0x48]
  411e7c:	mov    ebx,0x9b3c5f65
  411e81:	add    ah,ah
  411e83:	mov    eax,ds:0xa7cc2c45
  411e88:	dec    ecx
  411e89:	shr    DWORD PTR [edi-0x5dfdf392],cl
  411e8f:	mov    al,ds:0x4ec262c1
  411e94:	sub    bh,cl
  411e96:	mov    edi,0x21a1ada6
  411e9b:	dec    esp
  411e9c:	(bad)  
  411e9d:	ja     0x411ece
  411e9f:	imul   edx,DWORD PTR [edx+0x50a20214],0x7e
  411ea6:	or     DWORD PTR [eax-0x3],edi
  411ea9:	mov    esi,0xaf6f5ed1
  411eae:	adc    BYTE PTR [bx+di],dh
  411eb1:	idiv   DWORD PTR [esi]
  411eb3:	sub    eax,0x938f37f1
  411eb8:	inc    esi
  411eb9:	icebp  
  411eba:	pop    ds
  411ebb:	and    eax,0x4c90070e
  411ec0:	int3   
  411ec1:	and    eax,0x989c61c9
  411ec6:	jbe    0x411e64
  411ec8:	inc    ecx
  411ec9:	jmp    DWORD PTR [ecx-0xa]
  411ecc:	scas   eax,DWORD PTR es:[edi]
  411ecd:	adc    al,0xfa
  411ecf:	in     eax,dx
  411ed0:	push   ecx
  411ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ed2:	retf   
  411ed3:	mov    ebp,0xc298f4ca
  411ed8:	sub    al,0xcf
  411eda:	(bad)  
  411edd:	ins    DWORD PTR es:[edi],dx
  411ede:	inc    eax
  411edf:	pushf  
  411ee0:	inc    edx
  411ee1:	outs   dx,DWORD PTR ds:[esi]
  411ee2:	test   eax,0xe71610d
  411ee7:	add    al,0x7d
  411ee9:	adc    BYTE PTR [esp+eax*1+0x623384a2],bh
  411ef0:	sub    bl,dl
  411ef2:	es jb  0x411eeb
  411ef5:	push   esi
  411ef6:	mov    DWORD PTR [ebp+0x2d],eax
  411ef9:	and    ecx,0xbe495b59
  411eff:	dec    ebx
  411f00:	jae    0x411f59
  411f02:	pop    esi
  411f03:	jle    0x411ea3
  411f05:	mov    eax,0xb078ce99
  411f0a:	nop
  411f0b:	adc    ecx,DWORD PTR [edx-0x51eb156]
  411f11:	cmp    al,0x8b
  411f13:	mov    edi,0xca95c5e3
  411f18:	pop    esi
  411f19:	leave  
  411f1a:	sbb    BYTE PTR [ecx-0x42],0x90
  411f1e:	sub    ecx,DWORD PTR [esi+edx*4-0x18]
  411f22:	xor    BYTE PTR [ebp+0x50668df6],0xd3
  411f29:	dec    bp
  411f2b:	sub    BYTE PTR ds:0x9d199fe3,0x9f
  411f32:	outs   dx,DWORD PTR ds:[esi]
  411f33:	test   ecx,esp
  411f35:	cmp    al,0xac
  411f37:	(bad)  
  411f38:	mov    eax,0x8b7e705d
  411f3d:	mov    ?,WORD PTR [ecx+0x2065c760]
  411f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f44:	jnp    0x411f10
  411f46:	(bad)
  411f49:	mov    ds:0xf6b3c375,al
  411f4e:	mov    ebp,0x493ac3f
  411f53:	mov    bh,0x17
  411f55:	call   0xc5ffb51c
  411f5a:	mov    edx,0xd295cbb1
  411f5f:	in     eax,0xf
  411f61:	je     0x411ee7
  411f63:	loope  0x411fb2
  411f65:	mul    BYTE PTR [esi]
  411f67:	test   al,ch
  411f69:	leave  
  411f6a:	mov    al,ds:0x431adf05
  411f6f:	jns    0x411f99
  411f71:	test   eax,0xb5b1eccb
  411f76:	mov    al,ds:0x56d27f31
  411f7b:	les    ecx,FWORD PTR [esi]
  411f7d:	retf   0x2a86
  411f80:	mov    al,ds:0x6e185d32
  411f85:	popf   
  411f86:	stos   DWORD PTR es:[edi],eax
  411f87:	pop    ecx
  411f88:	jbe    0x411f29
  411f8a:	adc    dh,dl
  411f8c:	into   
  411f8d:	inc    edi
  411f8e:	in     al,dx
  411f8f:	addr16 mov ds:0x26a4,al
  411f93:	mov    eax,0xd17071bc
  411f98:	lock enter 0x844d,0x32
  411f9d:	jne    0x411fdf
  411f9f:	pushf  
  411fa0:	add    al,0x54
  411fa2:	in     al,0x3b
  411fa4:	fmul   QWORD PTR [edx-0x55fb3917]
  411faa:	shl    BYTE PTR [eax-0x34],1
  411fad:	xchg   edi,eax
  411fae:	mov    al,0x7
  411fb0:	jns    0x411f38
  411fb2:	add    BYTE PTR [ecx-0x23203159],bh
  411fb8:	repz sbb eax,0x99567ed7
  411fbe:	ret    
  411fbf:	ret    0xe7e
  411fc2:	mov    esi,0xddb3cefc
  411fc7:	bound  esp,QWORD PTR es:[ebp+0x11]
  411fcb:	neg    BYTE PTR [edx+0x24]
  411fce:	inc    esi
  411fcf:	cli    
  411fd0:	inc    esi
  411fd1:	in     eax,dx
  411fd2:	jmp    0x79859b66
  411fd7:	adc    al,dl
  411fd9:	rcr    ecx,cl
  411fdb:	shr    BYTE PTR [edi+0x143a9890],1
  411fe1:	jg     0x412042
  411fe3:	fidivr DWORD PTR [edx+ebp*2-0x4d]
  411fe7:	mov    esp,0xbb31c2f2
  411fec:	test   al,0x9b
  411fee:	out    0x33,al
  411ff0:	mov    fs,WORD PTR [esi]
  411ff2:	mov    edx,0xce2bbceb
  411ff7:	(bad)  
  411ff9:	mov    BYTE PTR [eiz*2-0x242af809],bh
  412000:	fisub  DWORD PTR [edx]
  412002:	dec    esi
  412003:	pusha  
  412004:	fnstcw WORD PTR [edi-0x391c6439]
  41200a:	add    dh,dh
  41200c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41200d:	mov    ebx,0x58829970
  412012:	rcr    BYTE PTR [eax+0xc54bf0d],0x95
  412019:	ret    
  41201a:	neg    DWORD PTR [edx]
  41201c:	shl    DWORD PTR [ecx],cl
  41201e:	inc    al
  412020:	inc    ebp
  412021:	jnp    0x412096
  412023:	repnz push ecx
  412025:	jae    0x411fc0
  412027:	cli    
  412028:	ds cwde 
  41202a:	or     BYTE PTR [ebx+eax*2-0x3a9200f6],bh
  412031:	or     eax,0x7d059d13
  412036:	mov    ch,0xb6
  412038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412039:	aas    
  41203a:	pop    ss
  41203b:	clc    
  41203c:	push   edx
  41203d:	jecxz  0x411fc0
  41203f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412040:	cdq    
  412041:	pop    es
  412042:	leave  
  412043:	push   es
  412044:	or     BYTE PTR [eax-0x7a],bh
  412047:	add    al,0xe
  412049:	fldenv [ebx-0x2257be36]
  41204f:	cmc    
  412050:	iret   
  412051:	out    dx,al
  412052:	rcl    BYTE PTR [edx],0xdf
  412055:	adc    BYTE PTR ds:0xf2af68dc,cl
  41205b:	jno    0x4120a1
  41205d:	(bad)  
  41205e:	pushf  
  41205f:	fld    TBYTE PTR [edi+0x74]
  412062:	mov    dl,0x8d
  412064:	mov    bh,0xdb
  412066:	stos   DWORD PTR es:[edi],eax
  412067:	cmp    al,0x6f
  412069:	xchg   edx,eax
  41206a:	cmp    BYTE PTR [ebx],0x45
  41206d:	gs daa 
  41206f:	imul   ecx,esp,0xa1040d49
  412075:	addr16 jbe 0x41201a
  412078:	sub    BYTE PTR [edx+0x6a8159d9],dh
  41207e:	mov    edi,0x9286b40
  412083:	pop    edx
  412084:	rcl    bl,cl
  412086:	icebp  
  412087:	ret    
  412088:	and    ebx,DWORD PTR [esi]
  41208a:	sbb    al,0xed
  41208c:	mov    dl,0xf1
  41208e:	add    DWORD PTR [edi+0x52],edi
  412091:	ja     0x412034
  412093:	retf   0xfd2d
  412096:	push   0x519657bf
  41209b:	in     eax,0x87
  41209d:	fst    QWORD PTR [edx+0x51d199a4]
  4120a3:	jmp    0x881f:0xc1c28c8
  4120aa:	call   0x3fb43830
  4120af:	mov    ch,0x6b
  4120b1:	jo     0x412093
  4120b3:	scas   eax,DWORD PTR es:[edi]
  4120b4:	or     al,0x44
  4120b6:	fnsave [ecx+edx*1-0x16]
  4120ba:	fstp   st(5)
  4120bc:	adc    al,0x37
  4120be:	pop    eax
  4120bf:	sbb    eax,0xd229873b
  4120c4:	mov    ss,WORD PTR [esi+0x2d]
  4120c7:	out    0xfa,eax
  4120c9:	mov    ebx,0x1445fcd9
  4120ce:	pop    ds
  4120cf:	fstp   DWORD PTR [ebx]
  4120d1:	jae    0x412130
  4120d3:	sbb    al,0xb5
  4120d5:	adc    al,0xbc
  4120d7:	xchg   edi,eax
  4120d8:	mov    edi,0x92806bae
  4120dd:	inc    edx
  4120de:	lahf   
  4120df:	add    dl,bl
  4120e1:	mov    edx,0x8c3bc47f
  4120e6:	and    ah,al
  4120e8:	test   eax,0x4506714c
  4120ed:	daa    
  4120ee:	test   eax,0xf2ae3f97
  4120f3:	loop   0x41210f
  4120f5:	lds    esp,FWORD PTR [ebx-0x446ad9cd]
  4120fb:	cmp    cl,BYTE PTR [edi+0x656ec496]
  412101:	ret    0x2da1
  412104:	adc    eax,0x673956b8
  412109:	push   ds
  41210a:	outs   dx,DWORD PTR ds:[esi]
  41210b:	push   esp
  41210c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41210d:	lock mov dh,0x87
  412110:	ins    BYTE PTR es:[edi],dx
  412111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412112:	or     al,0x52
  412114:	xor    ebp,ebp
  412116:	and    BYTE PTR [eax],0x56
  412119:	or     BYTE PTR [eax],bh
  41211b:	mov    bh,0xa4
  41211d:	repnz cmp ch,BYTE PTR [ecx+0x7138f0d5]
  412124:	pop    edi
  412125:	mov    ds:0x67021c04,al
  41212a:	mov    dl,0xd7
  41212c:	add    al,0xc1
  41212e:	mov    esi,0xd96984aa
  412133:	and    al,dh
  412135:	ins    BYTE PTR es:[edi],dx
  412136:	jp     0x41212c
  412138:	sub    DWORD PTR [ecx+0x6d],ecx
  41213b:	ret    
  41213c:	gs jbe 0x4120e9
  41213f:	aam    0x8f
  412141:	or     ah,cl
  412143:	enter  0x35c3,0xea
  412147:	pop    ebp
  412148:	sub    BYTE PTR [ecx],cl
  41214a:	nop
  41214b:	dec    esi
  41214c:	xor    eax,0x8fbc2f3d
  412151:	call   0x4cd0dec6
  412156:	retf   0x1634
  412159:	neg    BYTE PTR [eax-0x7b7c38ba]
  41215f:	or     esp,esp
  412161:	neg    cl
  412163:	outs   dx,DWORD PTR ds:[esi]
  412164:	push   eax
  412165:	call   0xb4f79cd3
  41216a:	aad    0x88
  41216c:	push   0x6c
  41216e:	sbb    ebx,DWORD PTR [ecx+0x55f84d6d]
  412174:	mov    dh,0x37
  412176:	int    0x19
  412178:	stos   DWORD PTR es:[edi],eax
  412179:	add    al,BYTE PTR [edx+0x70]
  41217c:	inc    esp
  41217d:	repnz sbb eax,0xfaedf327
  412183:	mov    al,ds:0x70465adc
  412188:	dec    BYTE PTR [edx-0x34320e88]
  41218e:	icebp  
  41218f:	loopne 0x412207
  412191:	test   BYTE PTR [ebp-0x20f45149],al
  412197:	inc    eax
  412198:	cmp    eax,0xe2fbcbdc
  41219d:	mov    ss,ebx
  41219f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121a0:	int    0xe1
  4121a2:	(bad)  
  4121a3:	and    BYTE PTR [ecx],ah
  4121a5:	retf   
  4121a6:	fimul  DWORD PTR [ecx]
  4121a8:	mov    ebp,0x98d50f83
  4121ad:	sbb    dh,BYTE PTR [ecx]
  4121af:	add    eax,0x1bf35cd1
  4121b4:	cmp    al,BYTE PTR [edi+ecx*8-0x39]
  4121b8:	ja     0x4121f2
  4121ba:	inc    esi
  4121bb:	(bad)  
  4121bc:	test   edi,0x96f25c7e
  4121c2:	aad    0x6a
  4121c4:	aas    
  4121c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c6:	mov    ebx,0xe402cf20
  4121cb:	dec    ecx
  4121cc:	ins    BYTE PTR es:[edi],dx
  4121cd:	jno    0x4121c5
  4121cf:	imul   ecx,eax,0xffffffd5
  4121d2:	sub    al,0xc3
  4121d4:	test   eax,0xdf50033a
  4121d9:	xor    BYTE PTR [esi],0x35
  4121dc:	xchg   DWORD PTR [ebp+0x47],edi
  4121df:	cwde   
  4121e0:	outs   dx,BYTE PTR ds:[esi]
  4121e1:	(bad)  
  4121e2:	jecxz  0x41216a
  4121e4:	popf   
  4121e5:	sbb    eax,0x4da0d724
  4121ea:	add    DWORD PTR [eax-0x66],0xffffffad
  4121ee:	popa   
  4121ef:	loope  0x4121c9
  4121f1:	jle    0x4121f2
  4121f3:	xchg   edx,eax
  4121f4:	sbb    eax,0xa3f5adef
  4121f9:	sbb    al,ah
  4121fb:	ins    BYTE PTR es:[edi],dx
  4121fc:	mov    ebp,0xada52254
  412201:	pop    eax
  412202:	cdq    
  412203:	push   esi
  412204:	cmp    bh,BYTE PTR [eax+0x30]
  412207:	icebp  
  412208:	outs   dx,DWORD PTR ds:[esi]
  412209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41220a:	inc    esp
  41220b:	mov    dl,0x80
  41220d:	jae    0x4121e1
  41220f:	fmul   QWORD PTR [ecx+0x7dc83f88]
  412215:	mov    al,0xb5
  412217:	mov    edi,0xd44400d3
  41221c:	push   cs
  41221d:	add    bl,BYTE PTR [esi+eax*1+0x13]
  412221:	test   DWORD PTR [esi-0x5e],edx
  412224:	fbstp  TBYTE PTR [ebp+0x13929e6a]
  41222a:	sbb    al,0x4b
  41222c:	stos   DWORD PTR es:[edi],eax
  41222d:	test   DWORD PTR [ecx+0xfb4a504],ecx
  412233:	(bad)  
  412234:	imul   cx,WORD PTR [edx],0x3174
  412239:	pop    ss
  41223a:	sar    bl,0xf1
  41223d:	bound  ebx,QWORD PTR ds:0x3fd56fc1
  412243:	neg    DWORD PTR ds:0xba9f8edf
  412249:	push   0x6698408b
  41224e:	and    eax,0xf3fe21fa
  412253:	imul   DWORD PTR [ecx+0x27]
  412256:	add    DWORD PTR [esi+ebp*1+0x24b79d03],ebx
  41225d:	or     eax,0xb1bcbf8e
  412262:	sub    DWORD PTR [eax+ebx*4+0x5bacbb67],ebp
  412269:	test   dh,bl
  41226b:	xchg   esp,eax
  41226c:	in     eax,0x33
  41226e:	xchg   edx,eax
  41226f:	fwait
  412270:	sub    eax,DWORD PTR [bp+di]
  412273:	pushf  
  412274:	pop    es
  412275:	sub    edx,DWORD PTR [edi]
  412277:	ss call 0x796e:0x23772ffd
  41227f:	and    eax,0xdfcb274d
  412284:	xor    ebp,DWORD PTR [edx+0xd]
  412287:	sub    al,0xb7
  412289:	or     esi,DWORD PTR [ebx-0x7754285b]
  41228f:	or     edi,DWORD PTR [bp+si+0x437e]
  412294:	dec    ecx
  412295:	or     DWORD PTR [ebx],eax
  412297:	out    dx,eax
  412298:	adc    eax,0xde28ca76
  41229d:	out    0xd5,eax
  41229f:	out    0xd0,al
  4122a1:	mov    dl,0x2d
  4122a3:	lods   eax,DWORD PTR ds:[esi]
  4122a4:	dec    eax
  4122a5:	loope  0x4122d0
  4122a7:	cmp    edx,eax
  4122a9:	test   DWORD PTR [ebx+edx*4-0x4e40567d],ebx
  4122b0:	adc    eax,0x17330fba
  4122b5:	and    eax,0x9ef22329
  4122ba:	add    ebp,ebx
  4122bc:	jbe    0x4122a7
  4122be:	sbb    eax,0x2ea09555
  4122c3:	jb     0x412326
  4122c5:	jg     0x41231f
  4122c7:	int3   
  4122c8:	mov    ch,0xc7
  4122ca:	pop    edx
  4122cb:	or     ecx,DWORD PTR [ecx-0x23417e8c]
  4122d1:	mov    eax,DWORD PTR [ecx]
  4122d3:	cmp    BYTE PTR [ebp+edx*4+0x5b7618f9],0x1c
  4122db:	sti    
  4122dc:	pop    ds
  4122dd:	enter  0x1bff,0x5b
  4122e1:	stos   DWORD PTR es:[edi],eax
  4122e2:	call   0xaece:0xa3381365
  4122e9:	cmp    DWORD PTR [eax+0x4a],ecx
  4122ec:	inc    esi
  4122ed:	mov    al,0xd5
  4122ef:	fimul  WORD PTR [ecx-0x7472cd55]
  4122f5:	mov    esp,0xcddeb08d
  4122fa:	mov    ah,0xdf
  4122fc:	jmp    FWORD PTR [edx]
  4122fe:	clc    
  4122ff:	cdq    
  412300:	mov    bh,0xfb
  412302:	push   0xffffffd2
  412304:	daa    
  412305:	cmp    BYTE PTR [ecx],0x56
  412308:	pop    es
  412309:	gs out 0x3,al
  41230c:	dec    ebx
  41230d:	fs popf 
  41230f:	xor    DWORD PTR [eax-0x68],edx
  412312:	stos   DWORD PTR es:[edi],eax
  412313:	xchg   ecx,eax
  412314:	xchg   BYTE PTR [esi],al
  412316:	outs   dx,DWORD PTR ds:[esi]
  412317:	pop    es
  412318:	pop    esp
  412319:	push   ebp
  41231a:	adc    esi,DWORD PTR [eax+0x2f81fa0a]
  412320:	jmp    0x3131c793
  412325:	and    eax,0x1e3ef827
  41232a:	comiss xmm0,DWORD PTR [edi-0x1f]
  41232e:	mov    esp,0x92ecb1a8
  412333:	pop    eax
  412334:	dec    eax
  412335:	(bad)  
  412336:	sub    BYTE PTR [eax+0x7cccd097],ah
  41233c:	data16 and dh,al
  41233f:	lods   al,BYTE PTR ds:[esi]
  412340:	sub    eax,0xbf804359
  412345:	cld    
  412346:	jecxz  0x41235c
  412348:	push   esp
  412349:	neg    BYTE PTR [ebx]
  41234b:	xor    BYTE PTR [ebp-0x3baf985c],dh
  412351:	or     edx,edx
  412353:	push   ebp
  412354:	in     al,0x8e
  412356:	dec    BYTE PTR [edi-0x389abe60]
  41235c:	pop    ebx
  41235d:	hlt    
  41235e:	push   ds
  41235f:	xor    eax,esp
  412361:	pop    ecx
  412362:	into   
  412363:	test   al,0x4b
  412365:	sbb    ch,BYTE PTR [edi]
  412367:	scas   al,BYTE PTR es:[edi]
  412368:	and    BYTE PTR [eax-0x19742c3b],dh
  41236e:	adc    al,0x18
  412370:	outs   dx,BYTE PTR es:[esi]
  412372:	rcl    BYTE PTR [eax],0xb8
  412375:	xchg   DWORD PTR [ecx],ebx
  412377:	leave  
  412378:	outs   dx,DWORD PTR ds:[esi]
  412379:	adc    ebp,ebp
  41237b:	xchg   edx,eax
  41237c:	icebp  
  41237d:	xchg   edx,eax
  41237e:	fiadd  DWORD PTR [esi+0x1e]
  412381:	cmp    esp,DWORD PTR [eax*1-0x25a0bdc0]
  412388:	push   es
  412389:	bound  edx,QWORD PTR [ebx-0xf]
  41238c:	(bad)  
  41238d:	neg    DWORD PTR [ebp-0xafbdfa8]
  412393:	in     eax,0x8f
  412395:	adc    al,0x69
  412397:	popa   
  412398:	(bad)  [edi]
  41239a:	ins    BYTE PTR es:[edi],dx
  41239b:	add    eax,0x9cd00984
  4123a0:	test   DWORD PTR [ebp+0x397d1633],edi
  4123a6:	vhaddpd xmm6,xmm5,XMMWORD PTR [ebp+0x4e]
  4123ab:	cld    
  4123ac:	adc    BYTE PTR [edi+0x3f29a8],0x7f
  4123b3:	clc    
  4123b4:	test   eax,0xb4f044a
  4123b9:	xor    eax,0xb525db2
  4123be:	mov    bl,0xfc
  4123c0:	push   cs
  4123c1:	retf   
  4123c2:	inc    ecx
  4123c3:	and    esi,DWORD PTR [edx]
  4123c5:	jae    0x4123f9
  4123c7:	and    dh,al
  4123c9:	and    eax,0xce8e5dce
  4123ce:	mov    cl,dl
  4123d0:	mov    ebx,0x892eb1a
  4123d5:	inc    ebp
  4123d6:	cmp    eax,DWORD PTR [esi+0x1c075751]
  4123dc:	add    DWORD PTR [eax+0x428c3f5b],ecx
  4123e2:	repz loop 0x41244f
  4123e5:	es push esi
  4123e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123e8:	mov    edx,0xeeaa3b69
  4123ed:	sbb    al,0x53
  4123ef:	loopne 0x4123f3
  4123f1:	sbb    DWORD PTR [ebx],eax
  4123f3:	push   ebx
  4123f4:	push   cs
  4123f5:	mov    esi,0x6fde7bb6
  4123fa:	push   ecx
  4123fb:	pushf  
  4123fc:	jne    0x4123db
  4123fe:	aaa    
  4123ff:	or     ebp,ebx
  412401:	out    0xec,al
  412403:	cdq    
  412404:	mov    ch,0xa0
  412406:	cmp    edi,DWORD PTR [ebp-0x64]
  412409:	mov    cl,0x4f
  41240b:	lea    ecx,[ebp-0x1927de21]
  412411:	ins    BYTE PTR es:[edi],dx
  412412:	fneni(8087 only) 
  412414:	add    al,0xd2
  412416:	add    dh,cl
  412418:	pop    ds
  412419:	and    dl,bl
  41241b:	aaa    
  41241c:	call   0x4426:0x3c6a70f9
  412423:	lods   eax,DWORD PTR ds:[esi]
  412424:	jbe    0x4123b1
  412426:	mov    DWORD PTR [ebp-0x58],eax
  412429:	dec    eax
  41242a:	pop    esi
  41242b:	lds    esi,FWORD PTR [esp+eax*8+0x2]
  41242f:	fucomp st(6)
  412431:	push   ecx
  412432:	sbb    DWORD PTR [edx-0x3e0b4270],esp
  412438:	test   eax,0xd94b3143
  41243d:	mov    bl,0xf8
  41243f:	ficomp DWORD PTR [eax]
  412441:	mov    ecx,gs
  412443:	ja     0x412448
  412445:	scas   eax,DWORD PTR es:[edi]
  412446:	je     0x412443
  412448:	pop    edi
  412449:	cmp    dh,BYTE PTR [eax-0x3d56e234]
  41244f:	or     BYTE PTR [ebx],0x63
  412452:	ss xchg ebx,eax
  412454:	vshufps xmm6,xmm7,XMMWORD PTR [esi-0x2e],0x25
  41245a:	jmp    0x85af6a56
  41245f:	push   ds
  412460:	retf   0x661f
  412463:	mov    DWORD PTR [esi],esi
  412465:	pop    ds
  412466:	dec    esp
  412467:	dec    esi
  412468:	pop    ebx
  412469:	pop    edx
  41246a:	xor    ebx,esi
  41246c:	ror    BYTE PTR [si+0x46],1
  412470:	cmc    
  412471:	retw   0x8e86
  412475:	mov    DWORD PTR [esi+0x44e1a5fb],ecx
  41247b:	dec    ecx
  41247c:	mov    DWORD PTR [ebp+0x34eb5627],edx
  412482:	loopne 0x4124e2
  412484:	or     BYTE PTR [eax+0x1a1b9544],cl
  41248a:	cmp    DWORD PTR [esi-0x698188d9],eax
  412490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412491:	mov    eax,0xe25e656c
  412496:	repnz lahf 
  412498:	ficom  WORD PTR [eax]
  41249a:	in     eax,dx
  41249b:	mov    dl,0xc5
  41249d:	jnp    0x41242a
  41249f:	fdiv   DWORD PTR [esi+0x73]
  4124a2:	jle    0x412431
  4124a4:	data16 data16 mov cl,0xe2
  4124a8:	test   eax,0x307388d5
  4124ad:	cmp    DWORD PTR [edx+0x74],edx
  4124b0:	sub    BYTE PTR ds:[eax],bl
  4124b3:	das    
  4124b4:	daa    
  4124b5:	je     0x412536
  4124b7:	pushf  
  4124b8:	das    
  4124b9:	mov    cs,edx
  4124bb:	mov    ?,esi
  4124bd:	and    eax,0x170f42b6
  4124c2:	inc    esp
  4124c3:	xor    eax,0x86f73243
  4124c8:	mov    al,ds:0x434221e8
  4124cd:	(bad)  
  4124ce:	(bad)  [ebp-0x1702b88f]
  4124d4:	mov    esi,0x65406fe7
  4124d9:	mov    eax,ds:0x54cc07cf
  4124de:	mov    ds:0xb38edcab,eax
  4124e3:	mov    ebp,0xd45248fa
  4124e8:	push   ecx
  4124e9:	out    0x48,eax
  4124eb:	sahf   
  4124ec:	pop    esp
  4124ed:	inc    edx
  4124ee:	call   0xf6a95386
  4124f3:	enter  0x2114,0x11
  4124f7:	sub    dl,BYTE PTR [esi]
  4124f9:	dec    ebp
  4124fa:	test   eax,0x7fa0decb
  4124ff:	in     eax,0xa7
  412501:	sub    ah,BYTE PTR [edx-0x2d81a48f]
  412507:	stos   BYTE PTR es:[edi],al
  412508:	inc    ecx
  412509:	push   eax
  41250a:	add    edx,DWORD PTR [edx+0x2a66abf2]
  412510:	push   ss
  412511:	mov    esi,DWORD PTR [ecx-0x6a]
  412514:	data16 jo 0x41256c
  412517:	sbb    DWORD PTR [esi-0x24],ebp
  41251a:	xor    DWORD PTR [ebx-0x2f],edx
  41251d:	fsubr  QWORD PTR [ecx-0x7a6c9e5e]
  412523:	imul   edx,DWORD PTR [eax-0x78],0xffffff9d
  412527:	and    BYTE PTR [eax-0x4cfc7b5f],0xf5
  41252e:	xchg   ebp,eax
  41252f:	xchg   esp,eax
  412530:	pop    ss
  412531:	mov    esp,ebx
  412533:	xchg   ebx,eax
  412534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412535:	inc    ecx
  412536:	mov    dl,0x15
  412538:	loop   0x412599
  41253a:	shl    ah,0xa5
  41253d:	fcmovnb st,st(1)
  41253f:	add    DWORD PTR [ebp+0x34],ebx
  412542:	fldenv [eax-0x12]
  412545:	sar    dh,cl
  412547:	push   esp
  412548:	and    ch,ch
  41254a:	lods   eax,DWORD PTR ds:[esi]
  41254b:	push   0x1f493bf7
  412550:	jl     0x4125be
  412552:	mov    ch,0xef
  412554:	in     al,dx
  412555:	xchg   esi,eax
  412556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412557:	lock xchg ebx,eax
  412559:	pop    esp
  41255a:	nop
  41255b:	fs in  eax,0x6e
  41255e:	mov    bl,0x19
  412560:	enter  0x2c4c,0xfb
  412564:	ja     0x412541
  412566:	and    al,0x25
  412568:	pop    ecx
  412569:	pushf  
  41256a:	xor    al,bh
  41256c:	fisub  WORD PTR [edi+0x6aef7e71]
  412572:	jnp    0x412561
  412574:	xchg   esp,ebx
  412576:	jo     0x412599
  412578:	ret    
  412579:	stos   BYTE PTR es:[edi],al
  41257a:	iret   
  41257b:	ins    BYTE PTR es:[edi],dx
  41257c:	shr    BYTE PTR [edx-0x41],cl
  41257f:	sub    edi,DWORD PTR [eax+0x49]
  412582:	inc    esi
  412583:	aam    0xbe
  412585:	test   BYTE PTR [ebx-0x79],dl
  412588:	mov    ebx,0x3806cd33
  41258d:	sbb    al,0x75
  41258f:	pop    esi
  412590:	ins    BYTE PTR es:[edi],dx
  412591:	xchg   esi,eax
  412592:	pushf  
  412593:	lods   al,BYTE PTR ds:[esi]
  412594:	cmc    
  412595:	xor    dh,BYTE PTR [esp+edi*1]
  412598:	dec    ebp
  412599:	fcmovne st,st(6)
  41259b:	int    0xfb
  41259d:	cmp    ah,BYTE PTR ds:0x893819be
  4125a3:	push   ebp
  4125a4:	cli    
  4125a5:	sub    ah,BYTE PTR [ecx-0x1]
  4125a8:	xchg   edx,eax
  4125a9:	mov    ?,ecx
  4125ab:	push   cs
  4125ac:	add    DWORD PTR [ebx],edi
  4125ae:	add    edi,DWORD PTR [edi+0x3e]
  4125b1:	inc    ebp
  4125b2:	in     eax,dx
  4125b3:	int3   
  4125b4:	push   ebp
  4125b5:	enter  0x138b,0x1e
  4125b9:	mov    ebx,0x65dde1de
  4125be:	(bad)  
  4125bf:	imul   esp,DWORD PTR [ebx-0x2d2d9838],0x54d9fb19
  4125c9:	xlat   BYTE PTR ds:[ebx]
  4125ca:	shr    DWORD PTR [edx+0x31],cl
  4125cd:	sbb    ecx,DWORD PTR [edx-0x6db04e7b]
  4125d3:	dec    esi
  4125d4:	test   BYTE PTR [eax],cl
  4125d6:	add    BYTE PTR [ecx],ah
  4125d8:	arpl   WORD PTR [ecx+esi*1-0x35b9185a],ax
  4125df:	call   0xadca3fef
  4125e4:	mov    DWORD PTR [ecx+0x1a],ebx
  4125e7:	(bad)  
  4125e8:	aam    0x24
  4125ea:	jmp    0x4ff3e031
  4125ef:	inc    ebx
  4125f0:	sub    al,0xc2
  4125f2:	push   es
  4125f3:	out    dx,eax
  4125f4:	gs aad 0x90
  4125f7:	jno    0x4125d5
  4125f9:	and    ecx,DWORD PTR [eax-0x1c419fce]
  4125ff:	sub    al,0x49
  412601:	or     eax,0x7246f4fd
  412606:	mov    ah,0x6e
  412608:	ja     0x412636
  41260a:	add    DWORD PTR [edx+0x1aa3dc7],0xffffffd3
  412611:	pop    ebp
  412612:	pop    ss
  412613:	xchg   ebp,eax
  412614:	mov    BYTE PTR [esi+0x7b881f24],dh
  41261a:	mov    edi,0x73e56cf7
  41261f:	cmp    bh,dl
  412621:	mov    dh,0xe3
  412623:	test   DWORD PTR [ebx-0xa429bd2],ecx
  412629:	ins    DWORD PTR es:[edi],dx
  41262a:	pop    DWORD PTR [eax]
  41262c:	push   eax
  41262d:	cmp    edi,DWORD PTR [ecx-0x27]
  412630:	outs   dx,BYTE PTR ds:[esi]
  412631:	push   esp
  412632:	push   edi
  412633:	shr    DWORD PTR ds:0xa37bfed4,1
  412639:	mov    ds:0xd3c1a283,eax
  41263e:	pop    esi
  41263f:	or     edi,DWORD PTR ds:0xb5a53ee5
  412645:	fwait
  412646:	jne    0x4125f0
  412648:	neg    ecx
  41264a:	sub    ah,BYTE PTR [eax-0xa]
  41264d:	sar    esi,cl
  41264f:	cmp    al,0xa9
  412651:	sbb    al,0xe0
  412653:	arpl   WORD PTR [esi-0x4284a3fc],si
  412659:	sub    al,0x80
  41265b:	jmp    0xe57c:0xbfd0c006
  412662:	imul   ebx,DWORD PTR [ecx+ebp*2-0x7f],0x60
  412667:	push   esi
  412668:	shr    ah,1
  41266a:	ret    0x7ece
  41266d:	clc    
  41266e:	aas    
  41266f:	scas   eax,DWORD PTR es:[edi]
  412670:	pop    esp
  412671:	and    al,0xb
  412673:	and    esi,DWORD PTR [edx]
  412675:	scas   eax,DWORD PTR es:[edi]
  412676:	sub    BYTE PTR [edi+0x57c2ad3],ch
  41267c:	int3   
  41267d:	xor    BYTE PTR [edi+ebp*8-0x3c],0xc0
  412682:	or     BYTE PTR [esi-0x4e2a74ee],dh
  412688:	adc    esp,esi
  41268a:	and    ebx,ebp
  41268c:	mov    edx,0x24cedceb
  412691:	int3   
  412692:	frstor [ebx+0x510b9097]
  412698:	dec    ebx
  412699:	inc    edi
  41269a:	jo     0x4126bb
  41269c:	sbb    BYTE PTR [ebp-0x10113d48],al
  4126a2:	push   edi
  4126a3:	out    0x31,eax
  4126a5:	mov    bl,0xd6
  4126a7:	xchg   ebx,eax
  4126a8:	mov    ds:0x7564ee1a,eax
  4126ad:	sub    BYTE PTR ds:0xc5e79809,ah
  4126b3:	in     eax,0xa2
  4126b5:	ret    0x539a
  4126b8:	xor    DWORD PTR [ebx+0x55fb06c8],esp
  4126be:	xchg   ebp,eax
  4126bf:	sahf   
  4126c0:	mov    ds:0xe507f4e1,eax
  4126c5:	mov    ah,0xb9
  4126c7:	jno    0x412705
  4126c9:	and    ebp,esp
  4126cb:	popa   
  4126cc:	jmp    0x8648edf1
  4126d1:	mov    dh,0x6a
  4126d3:	stos   DWORD PTR es:[edi],eax
  4126d4:	sbb    al,0x50
  4126d6:	cdq    
  4126d7:	pop    eax
  4126d8:	ret    0x9c6c
  4126db:	push   ss
  4126dc:	push   es
  4126dd:	adc    DWORD PTR [ebx+ebx*8+0x223f2da6],edi
  4126e4:	imul   esp,DWORD PTR [esi+ebp*2+0x7add4038],0x2c
  4126ec:	scas   eax,DWORD PTR es:[edi]
  4126ed:	jb     0x4126c2
  4126ef:	pop    ss
  4126f0:	hlt    
  4126f1:	cmp    cl,0xc1
  4126f4:	adc    DWORD PTR [eax],eax
  4126f6:	dec    eax
  4126f7:	in     eax,dx
  4126f8:	sub    eax,0x9eb49986
  4126fd:	sbb    ah,BYTE PTR [ebp-0x8]
  412700:	pop    ss
  412701:	cmp    al,bl
  412703:	xchg   ebx,eax
  412704:	xchg   ecx,eax
  412705:	retf   0xa913
  412708:	cld    
  412709:	(bad)  
  41270a:	cld    
  41270b:	jg     0x412780
  41270d:	lds    edx,FWORD PTR ds:0xf2e47754
  412713:	ret    
  412714:	lock int3 
  412716:	mov    ds:0x68b41aea,al
  41271b:	dec    ecx
  41271c:	add    dh,BYTE PTR [ebx+0x10]
  41271f:	xchg   BYTE PTR [ecx],ah
  412721:	in     eax,dx
  412722:	shl    DWORD PTR [ebx],cl
  412724:	mov    ebx,0xfd7a4023
  412729:	xlat   BYTE PTR ds:[ebx]
  41272a:	adc    bh,bl
  41272c:	pushf  
  41272d:	stc    
  41272e:	mov    ch,0x98
  412730:	cmp    DWORD PTR [esi*2-0x5204a8d2],edx
  412737:	rcr    esp,1
  412739:	in     eax,0xdd
  41273b:	hlt    
  41273c:	or     ebx,edx
  41273e:	cdq    
  41273f:	inc    esi
  412740:	idiv   BYTE PTR [edi+0x58326169]
  412746:	js     0x4126f6
  412748:	mov    bh,0x2b
  41274a:	mov    esp,0x2a0fc69c
  41274f:	cmp    BYTE PTR [ebp+0x3809e6b8],bl
  412755:	jnp    0x41277b
  412757:	inc    ecx
  412758:	repz adc al,0xcd
  41275b:	neg    BYTE PTR [ebp+0x7bf87d90]
  412761:	or     ah,cl
  412763:	call   0x46442831
  412768:	out    0xfb,eax
  41276a:	das    
  41276b:	gs cmp al,0x45
  41276e:	rcl    BYTE PTR [ebx],1
  412770:	sbb    BYTE PTR [eax+0x32],bh
  412773:	or     BYTE PTR [edi-0x32],cl
  412776:	add    DWORD PTR [edi],edi
  412778:	into   
  412779:	inc    DWORD PTR [esi-0x52a3971b]
  41277f:	cmp    DWORD PTR [ebp-0x525e0f84],ebp
  412785:	mov    ecx,0x5da27776
  41278a:	xchg   ebx,eax
  41278b:	xchg   ebp,eax
  41278c:	scas   eax,DWORD PTR es:[edi]
  41278d:	mov    al,ds:0x2a8b73ec
  412792:	imul   eax,DWORD PTR [edi-0x61808da4],0xffffff93
  412799:	xchg   ebx,eax
  41279a:	mov    ecx,0x3fdedb3c
  41279f:	test   al,0x7e
  4127a1:	pop    ecx
  4127a2:	out    dx,eax
  4127a3:	pop    ds
  4127a4:	xlat   BYTE PTR ds:[ebx]
  4127a5:	mov    ch,0x51
  4127a7:	cmp    edi,DWORD PTR [edx+0x21]
  4127aa:	mov    cl,0x1d
  4127ac:	cmp    eax,0x1a3fa481
  4127b1:	inc    DWORD PTR [ebx]
  4127b3:	jmp    0x412790
  4127b5:	clc    
  4127b6:	cmc    
  4127b7:	or     dl,0xdf
  4127ba:	sub    DWORD PTR [eax+0x40a19b7d],edi
  4127c0:	push   cs
  4127c1:	mov    al,bl
  4127c3:	sub    al,0x8e
  4127c5:	inc    ecx
  4127c6:	je     0x412838
  4127c8:	jo     0x412785
  4127ca:	mov    ds:0x66fd8ce9,al
  4127cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127d0:	adc    al,0x2
  4127d2:	pop    ebp
  4127d3:	sbb    edx,esi
  4127d5:	ins    DWORD PTR es:[edi],dx
  4127d6:	fld    DWORD PTR [edi-0x75]
  4127d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127da:	ins    DWORD PTR es:[edi],dx
  4127db:	mov    esi,0xe37c7b46
  4127e0:	inc    ebp
  4127e1:	lds    eax,FWORD PTR [esi+eax*4-0x1fb10e88]
  4127e8:	dec    eax
  4127e9:	outs   dx,DWORD PTR ds:[esi]
  4127ea:	scas   eax,DWORD PTR es:[edi]
  4127eb:	arpl   WORD PTR [ecx],sp
  4127ed:	mov    edx,0xc99faf56
  4127f2:	pusha  
  4127f3:	inc    edi
  4127f4:	test   BYTE PTR [eax+0x67],bh
  4127f7:	call   0x19f8:0xc137e00f
  4127fe:	cmp    eax,0x8d93b570
  412803:	adc    BYTE PTR ds:[edi+ebx*4+0x1f],al
  412808:	loope  0x41282a
  41280a:	jae    0x4127d5
  41280c:	shr    DWORD PTR [esi+edi*4],1
  41280f:	imul   DWORD PTR [edx+ecx*1]
  412812:	adc    eax,DWORD PTR [ebx-0x2f5dbd4d]
  412818:	jnp    0x4127a1
  41281a:	push   ss
  41281b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41281c:	ror    BYTE PTR [eax+eiz*1-0x6e],cl
  412820:	into   
  412821:	stos   BYTE PTR es:[edi],al
  412822:	jmp    0x4127c1
  412824:	sbb    edx,ebp
  412826:	jno    0x412836
  412828:	andps  xmm5,XMMWORD PTR [edx-0x648a4410]
  41282f:	ins    BYTE PTR es:[edi],dx
  412830:	jo     0x412820
  412832:	mov    BYTE PTR [edx-0x1b],bl
  412835:	ficomp DWORD PTR [edx]
  412837:	mov    al,ds:0x6d9581f0
  41283c:	dec    ebx
  41283d:	(bad)  
  41283e:	mov    bh,0xe2
  412840:	inc    esi
  412841:	lock mov eax,ds:0x30642d64
  412847:	loopne 0x412816
  412849:	dec    edx
  41284a:	ret    0xc1ac
  41284d:	add    DWORD PTR [ebx-0x53b737e],eax
  412853:	shl    DWORD PTR [eax+edi*2+0x30ee2ecf],cl
  41285a:	adc    al,0xcb
  41285c:	xor    al,al
  41285e:	dec    ebp
  41285f:	jmp    0x5c9ee55b
  412864:	pusha  
  412865:	dec    eax
  412866:	mov    ebx,0xa4abd8e2
  41286b:	mov    al,ds:0x994eed65
  412870:	cmp    eax,DWORD PTR cs:[edx+ebp*1]
  412874:	jo     0x4128ee
  412876:	add    DWORD PTR [ecx],edx
  412878:	sub    BYTE PTR [ebx-0x652a231e],al
  41287e:	popa   
  41287f:	(bad)  
  412880:	arpl   WORD PTR [ebx],di
  412882:	les    esp,FWORD PTR [ecx+0x66]
  412885:	enter  0xddb4,0xa0
  412889:	xchg   edx,eax
  41288a:	pavgw  mm2,QWORD PTR [ebx+ebp*2-0x1a]
  41288f:	fcom   DWORD PTR ds:0xe3b4a90c
  412895:	imul   edx,ebx,0x2a
  412898:	jg     0x41284b
  41289a:	sbb    edi,ecx
  41289c:	imul   ecx,DWORD PTR [ecx],0x3e
  41289f:	scas   al,BYTE PTR es:[edi]
  4128a0:	pop    edi
  4128a1:	mov    bl,0x92
  4128a3:	and    DWORD PTR [edi-0x33],edx
  4128a6:	add    edi,DWORD PTR [esi-0x3f]
  4128a9:	sub    cl,BYTE PTR [ebp+0x1b]
  4128ac:	pop    edi
  4128ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ae:	jbe    0x4128aa
  4128b0:	fdiv   DWORD PTR [ebp-0x6d]
  4128b3:	test   al,0x75
  4128b5:	pusha  
  4128b6:	xor    al,0xcc
  4128b8:	out    dx,eax
  4128b9:	mov    WORD PTR [eax-0xb],es
  4128bc:	mov    esp,0xf22388fc
  4128c1:	xchg   ebx,eax
  4128c2:	mov    edx,0xf8711cff
  4128c7:	sub    edi,DWORD PTR [ebx-0x352a9849]
  4128cd:	sbb    al,0x3
  4128cf:	fsub   st,st(7)
  4128d1:	scas   eax,DWORD PTR es:[edi]
  4128d2:	ror    ebp,1
  4128d4:	xor    DWORD PTR [ecx+0x689dd7a3],ebx
  4128da:	jnp    0x4128fb
  4128dc:	mov    ds:0x9eeae66f,eax
  4128e1:	in     eax,dx
  4128e2:	fadd   DWORD PTR [ebx-0x79bffcbd]
  4128e8:	jle    0x41289a
  4128ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128eb:	ss popf 
  4128ed:	cli    
  4128ee:	dec    edi
  4128ef:	mov    eax,0xf922ad62
  4128f4:	push   ecx
  4128f5:	mov    al,0xdf
  4128f7:	out    dx,al
  4128f8:	dec    ecx
  4128f9:	sub    eax,0x913d764d
  4128fe:	test   DWORD PTR [edx],0x360c55fb
  412904:	xchg   esp,eax
  412905:	out    dx,eax
  412906:	mov    WORD PTR [edx],?
  412908:	dec    eax
  412909:	or     bh,ch
  41290b:	mov    edx,0x706a6f1a
  412910:	cmp    al,0x85
  412912:	cmp    BYTE PTR [ebp+ebp*8+0x50],dl
  412916:	shl    BYTE PTR [ebp-0x3df4d44d],cl
  41291c:	fs inc ebx
  41291e:	sub    ecx,ebp
  412920:	test   BYTE PTR [eax],al
  412922:	add    eax,0xd8fbc1d5
  412927:	cmp    BYTE PTR [ebx-0x5cb8c8e7],0xe7
  41292e:	xor    DWORD PTR [ebx-0x32],ebx
  412931:	aas    
  412932:	mov    dl,0x95
  412934:	adc    edi,esp
  412936:	lds    ecx,FWORD PTR [ebp*2+0xca2dcb5]
  41293d:	mov    edx,0x83c40498
  412942:	mov    eax,ds:0x15122a92
  412947:	xchg   DWORD PTR [ecx+edx*1+0x6e],esp
  41294b:	fld    st(3)
  41294d:	lods   al,BYTE PTR ds:[esi]
  41294e:	push   edx
  41294f:	sub    eax,DWORD PTR [ecx+0x79]
  412952:	pop    es
  412953:	ja     0x412976
  412955:	test   eax,0x82ea2953
  41295a:	adc    ch,ah
  41295c:	push   esi
  41295d:	ja     0x4128f7
  41295f:	push   DWORD PTR [ebx+esi*4]
  412962:	push   cs
  412963:	(bad)  
  412964:	retf   
  412965:	cs jecxz 0x4129ba
  412968:	(bad)  
  412969:	mov    cl,BYTE PTR [edi-0x11]
  41296c:	cmp    edx,DWORD PTR [eax+0x7aa0cab7]
  412972:	int    0xe3
  412974:	outs   dx,BYTE PTR ds:[esi]
  412975:	lea    ebp,[ecx]
  412977:	mov    eax,ds:0xc0a5a21d
  41297c:	jno    0x41295d
  41297e:	push   eax
  41297f:	sbb    DWORD PTR [edx],0x40182665
  412985:	sbb    BYTE PTR [ecx+0x5a8c7e7a],ch
  41298b:	mov    edi,0xad63e7bc
  412990:	xor    ebx,0xe8e054c7
  412996:	jl     0x4129f1
  412998:	dec    esp
  412999:	cs pop ebx
  41299b:	idiv   BYTE PTR fs:[ecx]
  41299e:	mov    cl,BYTE PTR [ecx+0x77fabfef]
  4129a4:	test   al,bh
  4129a6:	shl    BYTE PTR [ebp-0x2561d7af],cl
  4129ac:	mov    bl,0x26
  4129ae:	inc    eax
  4129af:	jmp    0xf4141128
  4129b4:	enter  0xf035,0x79
  4129b8:	push   eax
  4129b9:	and    BYTE PTR [edx-0x2],bh
  4129bc:	mov    edx,0x3679474a
  4129c1:	sbb    al,0xe9
  4129c3:	int    0x5f
  4129c5:	das    
  4129c6:	xor    al,0x78
  4129c8:	sti    
  4129c9:	enter  0x23fd,0x7e
  4129cd:	dec    eax
  4129ce:	js     0x41298c
  4129d0:	test   eax,0x7755e889
  4129d5:	cmp    ebp,DWORD PTR [esi]
  4129d7:	je     0x4129be
  4129d9:	inc    ebp
  4129da:	sti    
  4129db:	lods   eax,DWORD PTR ds:[esi]
  4129dc:	mov    cl,0x3
  4129de:	clc    
  4129df:	xchg   BYTE PTR [edx+0x1bc30f7c],al
  4129e5:	mov    al,ds:0xfce5ef45
  4129ea:	push   ecx
  4129eb:	repnz out 0x2b,al
  4129ee:	loop   0x412a30
  4129f0:	loop   0x412a02
  4129f2:	xchg   edi,eax
  4129f3:	cmp    BYTE PTR [ecx+0x731dce67],bl
  4129f9:	add    DWORD PTR [ebx],esi
  4129fb:	sbb    ebx,DWORD PTR [ebp+0x5a]
  4129fe:	ins    DWORD PTR es:[edi],dx
  4129ff:	daa    
  412a00:	rcl    BYTE PTR [eax],0xfd
  412a03:	dec    esp
  412a04:	sti    
  412a05:	loope  0x412a3b
  412a07:	mov    ds:0xdbe6d653,eax
  412a0c:	ret    0xe178
  412a0f:	clc    
  412a10:	mov    cl,0x48
  412a12:	repz sbb al,0x18
  412a15:	push   0x1a
  412a17:	inc    esi
  412a18:	popa   
  412a19:	mov    fs,WORD PTR [esi-0x4c]
  412a1c:	mov    edi,0x87cf1824
  412a21:	out    dx,al
  412a22:	arpl   bx,bp
  412a24:	(bad)  
  412a26:	mov    bl,0xd
  412a28:	jb     0x412a14
  412a2a:	aam    0x1f
  412a2c:	jne    0x412aa7
  412a2e:	pop    ss
  412a2f:	(bad)
  412a32:	sahf   
  412a33:	mov    esp,0x763445f2
  412a38:	loopne 0x412a71
  412a3a:	ret    
  412a3b:	push   ebp
  412a3c:	ror    BYTE PTR es:[ebx],1
  412a3f:	dec    esi
  412a40:	mov    ah,0xe0
  412a42:	sbb    eax,0x7870dfc
  412a47:	iret   
  412a48:	lea    esi,[esi+0x5a473d0b]
  412a4e:	or     eax,ecx
  412a50:	mov    ebx,0x27283f02
  412a55:	sbb    ch,cl
  412a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a58:	mov    al,0x15
  412a5a:	aaa    
  412a5b:	lock adc eax,0xd21e8c00
  412a61:	iret   
  412a62:	push   ebx
  412a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a64:	push   es
  412a65:	wrmsr  
  412a67:	mov    eax,ds:0x7fd05d22
  412a6c:	(bad)  
  412a6e:	jge    0x412a3d
  412a70:	das    
  412a71:	fdiv   DWORD PTR [ebp+ecx*1+0x14]
  412a75:	mov    ?,esp
  412a77:	jp     0x412a2f
  412a79:	gs push cs
  412a7b:	fwait
  412a7c:	sub    esp,DWORD PTR [eax]
  412a7e:	jl     0x412adb
  412a80:	push   ds
  412a81:	fld    TBYTE PTR [ebx+eiz*8+0x37]
  412a85:	and    BYTE PTR [ebp+0x615a1510],ch
  412a8b:	cld    
  412a8c:	xor    BYTE PTR [ebp-0x53],ah
  412a8f:	lahf   
  412a90:	inc    esi
  412a91:	adc    al,0xce
  412a93:	jne    0x412a4d
  412a95:	lock out 0xa0,eax
  412a98:	fmul   DWORD PTR [ebx+ebx*4+0x6ce9258f]
  412a9f:	aas    
  412aa0:	and    esi,DWORD PTR [ebx-0x4a]
  412aa3:	int3   
  412aa4:	mul    DWORD PTR [esi]
  412aa6:	lea    ebp,[edx]
  412aa8:	xchg   edi,eax
  412aa9:	add    ebx,edx
  412aab:	das    
  412aac:	mov    WORD PTR [ebx],?
  412aae:	jno    0x412b20
  412ab0:	jecxz  0x412ad8
  412ab2:	xchg   al,dh
  412ab4:	js     0x412a4e
  412ab6:	jns    0x412add
  412ab8:	jne    0x412b22
  412aba:	mov    esi,0x61bd3e78
  412abf:	stos   BYTE PTR es:[edi],al
  412ac0:	mov    ds:0x45771063,al
  412ac5:	stos   DWORD PTR es:[edi],eax
  412ac6:	or     ecx,eax
  412ac8:	lock addr16 mov al,0x6d
  412acc:	gs leave 
  412ace:	lds    eax,FWORD PTR [ebx-0x6f8863b1]
  412ad4:	mov    eax,0x8c7a6251
  412ad9:	or     dh,BYTE PTR [ecx-0x64beb6f6]
  412adf:	sub    DWORD PTR [edx+0x2b043402],ecx
  412ae5:	sub    dh,BYTE PTR [ebp+0x2c]
  412ae8:	mov    ah,0x62
  412aea:	dec    edi
  412aeb:	lods   eax,DWORD PTR ds:[esi]
  412aec:	cli    
  412aed:	aam    0xe6
  412aef:	inc    eax
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	xchg   esp,eax
  412af2:	inc    esp
  412af3:	jb     0x412b6c
  412af5:	xchg   ebp,eax
  412af6:	xor    eax,0xabf9655a
  412afb:	and    BYTE PTR [esi+0x79],cl
  412afe:	xor    eax,0xaed8a5e
  412b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b04:	push   0x617f53a4
  412b09:	jmp    0x2b8cef89
  412b0e:	pop    ebx
  412b0f:	fsub   DWORD PTR [eax-0x8]
  412b12:	out    dx,eax
  412b13:	test   eax,0xc24592a4
  412b18:	pop    es
  412b19:	rcr    edi,1
  412b1b:	cmp    al,dl
  412b1d:	cmp    esp,DWORD PTR [ebp-0x76]
  412b20:	outs   dx,BYTE PTR ds:[esi]
  412b21:	imul   BYTE PTR [esi]
  412b23:	jo     0x412b3e
  412b25:	mov    ?,WORD PTR [eax+0x2b9dde22]
  412b2b:	dec    ebp
  412b2c:	mov    bl,0x86
  412b2e:	retf   
  412b2f:	add    eax,0x46d5775e
  412b34:	pop    ecx
  412b35:	fadd   st,st(7)
  412b37:	xor    ch,BYTE PTR [ecx-0x504cdf94]
  412b3d:	mov    ds,eax
  412b3f:	pop    edi
  412b40:	mov    dh,0xb9
  412b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b43:	pop    ds
  412b44:	and    ebp,esi
  412b46:	loop   0x412b2f
  412b48:	sbb    eax,DWORD PTR [edx]
  412b4a:	das    
  412b4b:	push   edi
  412b4c:	out    dx,eax
  412b4d:	neg    DWORD PTR [ecx-0x2]
  412b50:	sub    ebp,0x4
  412b53:	lds    ebp,FWORD PTR [esi+0x4198149d]
  412b59:	sti    
  412b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b5b:	sti    
  412b5c:	cmc    
  412b5d:	(bad)  
  412b5e:	int    0x7
  412b60:	sbb    eax,0xcb8eead1
  412b65:	std    
  412b66:	js     0x412bcc
  412b68:	hlt    
  412b69:	es mov dl,ah
  412b6c:	mov    al,ds:0xaa271d84
  412b71:	sub    BYTE PTR [eax+0x62],dh
  412b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b75:	mov    dl,0x27
  412b77:	or     eax,eax
  412b79:	aam    0x62
  412b7b:	mov    BYTE PTR [ebp+0x12],bh
  412b7e:	add    DWORD PTR [esi+0x3e],0x7d
  412b82:	popf   
  412b83:	ds (bad) 
  412b85:	sbb    DWORD PTR [ecx+0x17],ecx
  412b88:	pop    ds
  412b89:	stc    
  412b8a:	loop   0x412b1a
  412b8c:	mov    ebx,0x5fbd0da1
  412b91:	sar    BYTE PTR [ebx],1
  412b93:	xchg   BYTE PTR [ebp+0x6e143af1],cl
  412b99:	rcl    DWORD PTR [ebx+0x22],1
  412b9c:	cld    
  412b9d:	je     0x412b3d
  412b9f:	ss and eax,0x2695e457
  412ba5:	fs loope 0x412c18
  412ba8:	cmc    
  412ba9:	pop    ds
  412baa:	push   cs
  412bab:	mov    DWORD PTR [edx-0x5ba5f05e],edx
  412bb1:	inc    edx
  412bb2:	gs pop esp
  412bb4:	das    
  412bb5:	mov    ebx,0x8b434deb
  412bba:	into   
  412bbb:	(bad)
  412bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bc0:	or     DWORD PTR [esp+eiz*8+0x6f],edx
  412bc4:	test   bl,ch
  412bc6:	fdivr  st,st(3)
  412bc8:	idiv   BYTE PTR [ecx]
  412bca:	mov    ds:0xd85c4ce2,al
  412bcf:	jmp    0x412b58
  412bd1:	pushf  
  412bd2:	xor    BYTE PTR [esi-0x17],cl
  412bd5:	sbb    bh,BYTE PTR [edx-0x4703d726]
  412bdb:	es pop es
  412bdd:	xchg   edx,eax
  412bde:	cmp    ah,BYTE PTR [ebx+0x54]
  412be1:	ins    DWORD PTR es:[edi],dx
  412be2:	mov    WORD PTR [ecx-0x53e87b54],bx
  412be9:	cld    
  412bea:	adc    al,0x72
  412bec:	js     0x412c1b
  412bee:	mov    ds:0x4ec5fcd,al
  412bf3:	ror    BYTE PTR [edi+eax*2],0x3c
  412bf7:	lds    ecx,FWORD PTR [esi-0x3c]
  412bfa:	test   DWORD PTR [edi],ecx
  412bfc:	test   eax,0x3b95bc09
  412c01:	jnp    0x412b85
  412c03:	mov    edx,0x50f1603c
  412c08:	std    
  412c09:	pushf  
  412c0a:	in     eax,dx
  412c0b:	(bad)  
  412c0c:	into   
  412c0d:	adc    al,0x15
  412c0f:	in     al,0x3b
  412c11:	push   esp
  412c12:	cbw    
  412c14:	icebp  
  412c15:	cmp    al,0xac
  412c17:	mov    cl,0xdf
  412c19:	jg     0x412bcd
  412c1b:	xchg   edi,eax
  412c1c:	std    
  412c1d:	stos   DWORD PTR es:[edi],eax
  412c1e:	mov    ch,0xa2
  412c20:	xchg   DWORD PTR [ebp+0x19],ebx
  412c23:	lds    ecx,FWORD PTR [edx-0x37]
  412c26:	and    BYTE PTR [ecx+0x1c],dh
  412c29:	xchg   DWORD PTR [edx-0x2f],ebp
  412c2c:	lock xor BYTE PTR [ebp-0x1c],al
  412c30:	mov    ch,0x1b
  412c32:	nop
  412c33:	add    ebp,ebp
  412c35:	(bad)  
  412c36:	ror    DWORD PTR [eax],0xe7
  412c39:	retf   
  412c3a:	fist   DWORD PTR [esi]
  412c3c:	hlt    
  412c3d:	push   ebp
  412c3e:	sub    esp,DWORD PTR [ebx]
  412c40:	xor    DWORD PTR [ebx],esp
  412c42:	dec    esi
  412c43:	cmp    bh,bh
  412c45:	push   ebx
  412c46:	das    
  412c47:	xor    al,0xb9
  412c49:	xchg   edi,eax
  412c4a:	xor    ch,BYTE PTR [eax]
  412c4c:	std    
  412c4d:	jl     0x412c4d
  412c4f:	and    al,0xbe
  412c51:	std    
  412c52:	jno    0x412cc4
  412c54:	sti    
  412c55:	and    esi,eax
  412c57:	shl    DWORD PTR [edi-0x72],cl
  412c5a:	dec    edx
  412c5b:	mov    fs,WORD PTR [eax+0x5de0ff6f]
  412c61:	push   es
  412c62:	lods   al,BYTE PTR ds:[esi]
  412c63:	adc    ebx,DWORD PTR [ebx+0x7381b14d]
  412c69:	jns    0x412ca2
  412c6b:	cmp    DWORD PTR [esi-0x1c1ffa61],eax
  412c71:	jo     0x412cbb
  412c73:	scas   al,BYTE PTR es:[edi]
  412c74:	push   esi
  412c75:	bound  eax,QWORD PTR [esi+0x33725cb5]
  412c7b:	retf   0xc5e3
  412c7e:	sahf   
  412c7f:	add    dl,ah
  412c81:	mov    WORD PTR [ebx+eax*1],ss
  412c84:	into   
  412c85:	or     edx,DWORD PTR [edi]
  412c87:	xchg   ebp,eax
  412c88:	outs   dx,DWORD PTR ds:[esi]
  412c89:	stos   BYTE PTR es:[edi],al
  412c8a:	xor    esp,ebx
  412c8c:	mov    ah,0x83
  412c8e:	adc    al,0x7c
  412c90:	jnp    0x412cf7
  412c92:	fisub  DWORD PTR [esi-0x1c2932f1]
  412c98:	jmp    0xe3d144e0
  412c9d:	das    
  412c9e:	test   BYTE PTR [ebx],ch
  412ca0:	mov    bh,0x9d
  412ca2:	add    ecx,DWORD PTR [ecx+eax*1+0x3311605b]
  412ca9:	inc    ebx
  412caa:	fcmovu st,st(6)
  412cac:	mov    al,0x97
  412cae:	pop    eax
  412caf:	ss pop ebp
  412cb1:	imul   eax,DWORD PTR [ebx+0x6a],0x6e
  412cb5:	rcl    ebp,0x8
  412cb8:	xchg   ebp,eax
  412cb9:	sub    esp,esp
  412cbb:	stos   DWORD PTR es:[edi],eax
  412cbc:	mov    dl,0x7d
  412cbe:	shl    BYTE PTR [edi],1
  412cc0:	mov    ecx,0x56224e87
  412cc5:	pop    ss
  412cc6:	clc    
  412cc7:	inc    edi
  412cc8:	pop    edx
  412cc9:	dec    edi
  412cca:	addr16 (bad) 
  412ccd:	retf   0xefc7
  412cd0:	jne    0x412c7f
  412cd2:	adc    al,0xe3
  412cd4:	jo     0x412d24
  412cd6:	rol    al,1
  412cd8:	mov    ebp,0x80385447
  412cdd:	in     eax,0x6f
  412cdf:	cli    
  412ce0:	popf   
  412ce1:	cmc    
  412ce2:	jecxz  0x412ca9
  412ce4:	inc    edi
  412ce5:	mov    ds:0x3d1b133d,eax
  412cea:	ds nop
  412cec:	mov    ebx,0xce362478
  412cf1:	cmc    
  412cf2:	aam    0x5e
  412cf4:	lahf   
  412cf5:	sub    DWORD PTR [edx+edi*8+0x2d],esi
  412cf9:	shl    bl,1
  412cfb:	stos   WORD PTR es:[edi],ax
  412cfd:	or     DWORD PTR [ebx-0x18],ebp
  412d00:	sub    DWORD PTR [ebp-0x55682995],eax
  412d06:	outs   dx,DWORD PTR ds:[esi]
  412d07:	inc    ebp
  412d08:	sub    BYTE PTR [esi-0xd],dh
  412d0b:	mov    edi,0x63baf7e8
  412d10:	fadd   DWORD PTR [edi-0x26200e59]
  412d16:	das    
  412d17:	in     eax,0x21
  412d19:	jbe    0x412d53
  412d1b:	retf   
  412d1c:	cmp    eax,0x3524818e
  412d21:	xchg   DWORD PTR [esi+0x6ff38fac],edi
  412d27:	pop    ecx
  412d28:	inc    edx
  412d29:	mov    esi,0x4a203249
  412d2e:	mov    dl,0x28
  412d30:	xchg   BYTE PTR [eax+ebp*4-0x692e9b7],al
  412d37:	(bad)  
  412d38:	cmc    
  412d39:	jne    0x412d2c
  412d3b:	loope  0x412d91
  412d3d:	pop    edi
  412d3e:	inc    edx
  412d3f:	adc    BYTE PTR [edi+0x754b30bf],bh
  412d45:	xchg   edx,eax
  412d46:	imul   esi,edi,0x48
  412d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4a:	out    0x8c,eax
  412d4c:	dec    DWORD PTR [edi+0x0]
  412d4f:	repz cmp eax,0xa9f283e2
  412d55:	or     cl,al
  412d57:	scas   eax,DWORD PTR es:[edi]
  412d58:	cmp    eax,0x716b978d
  412d5d:	sbb    edi,DWORD PTR [edx-0x1cdb8214]
  412d63:	outs   dx,BYTE PTR ds:[esi]
  412d64:	push   esp
  412d65:	add    eax,0x384abee9
  412d6a:	inc    eax
  412d6b:	mov    ecx,0x607dc270
  412d70:	call   0xf595:0xd59e257f
  412d77:	test   eax,0xe463bdf2
  412d7c:	lods   al,BYTE PTR ds:[esi]
  412d7d:	out    dx,al
  412d7e:	cmp    ebp,DWORD PTR [esi+ebx*4+0x2a]
  412d82:	in     al,0x11
  412d84:	clc    
  412d85:	sbb    DWORD PTR [edx+0x13388cfd],ebp
  412d8b:	fistp  QWORD PTR [ebp-0x534a59c7]
  412d91:	xchg   ebp,eax
  412d92:	(bad)  
  412d93:	cvtdq2ps xmm6,XMMWORD PTR [eax]
  412d96:	mov    eax,0x4ee81055
  412d9b:	retf   
  412d9c:	xchg   edx,eax
  412d9d:	adc    DWORD PTR [edi+0x6eff028c],esp
  412da3:	test   DWORD PTR [ecx+0xb52294d],0xda36d102
  412dad:	arpl   WORD PTR [ebx-0x4172031b],di
  412db3:	push   edx
  412db4:	mov    BYTE PTR [edi-0x6d],al
  412db7:	push   0x359310d9
  412dbc:	push   ecx
  412dbd:	addr16 mov ebp,0xc0004fae
  412dc3:	ins    DWORD PTR es:[edi],dx
  412dc4:	pop    ebp
  412dc5:	lods   eax,DWORD PTR ds:[esi]
  412dc6:	retf   
  412dc7:	lods   al,BYTE PTR ds:[esi]
  412dc8:	mov    eax,ds:0xf370a0ee
  412dcd:	je     0x412d6d
  412dcf:	stos   BYTE PTR es:[edi],al
  412dd0:	or     WORD PTR [edx+0x72],bx
  412dd4:	and    eax,0x7d3d9923
  412dd9:	sar    esi,0xf5
  412ddc:	pop    ebx
  412ddd:	mov    ah,0x86
  412ddf:	and    esp,esp
  412de1:	mov    ebp,0x8e9e943c
  412de6:	or     BYTE PTR [eax-0xb0eed31],dl
  412dec:	call   0xdcb133f
  412df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df2:	pop    ecx
  412df3:	ins    DWORD PTR es:[edi],dx
  412df4:	stos   BYTE PTR es:[edi],al
  412df5:	inc    eax
  412df6:	jl     0x412e6d
  412df8:	add    eax,0xdcff733a
  412dfd:	in     al,0x4c
  412dff:	test   DWORD PTR [esp+eax*1-0x4b],eax
  412e03:	jbe    0x412e80
  412e05:	or     eax,0xa0cfebae
  412e0a:	jbe    0x412e52
  412e0c:	gs dec ecx
  412e0e:	sahf   
  412e0f:	jge    0x412df4
  412e11:	jbe    0x412db4
  412e13:	(bad)  
  412e14:	lock mov esi,0x2b128d28
  412e1a:	in     eax,0x3a
  412e1c:	mov    ebp,0x2d65f140
  412e21:	fwait
  412e22:	test   BYTE PTR [esi+0x48],bh
  412e25:	jno    0x412e88
  412e27:	fwait
  412e28:	ss pop esi
  412e2a:	lock jne 0x412e8c
  412e2d:	xchg   edi,eax
  412e2e:	and    al,BYTE PTR ds:0xf84592fd
  412e34:	push   ss
  412e35:	cmp    BYTE PTR ds:0x91a8428c,dh
  412e3b:	popa   
  412e3c:	mov    ds,WORD PTR [edi]
  412e3e:	pop    ebx
  412e3f:	lock fild DWORD PTR [ecx+0xd]
  412e43:	jl     0x412de8
  412e45:	add    DWORD PTR [ebp-0x774f4e18],esp
  412e4b:	(bad)  
  412e4c:	lahf   
  412e4d:	pop    eax
  412e4e:	jp     0x412e95
  412e50:	add    cl,al
  412e52:	imul   edx,edx,0xdf606028
  412e58:	test   ecx,edi
  412e5a:	ret    0x2302
  412e5d:	mov    al,ah
  412e5f:	push   cs
  412e60:	jo     0x412e79
  412e62:	(bad)  
  412e63:	sbb    cl,bl
  412e65:	jbe    0x412e29
  412e67:	sbb    BYTE PTR [ebx],cl
  412e69:	stos   DWORD PTR es:[edi],eax
  412e6a:	sub    eax,0x7b6d142c
  412e6f:	sbb    al,0x38
  412e71:	and    DWORD PTR [ecx],0x7e
  412e74:	push   es
  412e75:	adc    eax,0xbce3d17e
  412e7a:	push   esi
  412e7b:	jbe    0x412ecb
  412e7d:	int    0x59
  412e7f:	push   0xffffffa1
  412e81:	or     eax,0xe2b27675
  412e86:	sbb    BYTE PTR [ebp+0x59f9329e],ch
  412e8c:	or     BYTE PTR [ecx+ebx*8-0x60],bh
  412e90:	shl    DWORD PTR ds:0xf35e3b33,1
  412e96:	sub    BYTE PTR [ecx+0x29],cl
  412e99:	sub    DWORD PTR [ebp-0x28b97020],edi
  412e9f:	or     eax,0x7a07efbb
  412ea4:	data16 fisubr DWORD PTR [ecx-0x66272e4b]
  412eab:	enter  0x762b,0x2b
  412eaf:	retf   
  412eb0:	loop   0x412e97
  412eb2:	hlt    
  412eb3:	add    eax,0xaf0e51af
  412eb8:	in     al,dx
  412eb9:	add    eax,0xe3ff4560
  412ebe:	in     al,dx
  412ebf:	add    DWORD PTR [ebp-0x6a6ec34f],edi
  412ec5:	gs sub al,0x3b
  412ec8:	mov    edx,0xeb1a7fff
  412ecd:	inc    eax
  412ece:	mov    bh,0xe4
  412ed0:	jns    0x412e55
  412ed2:	imul   eax,eax,0x7e
  412ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ed6:	ins    DWORD PTR es:[edi],dx
  412ed7:	inc    edi
  412ed8:	call   0xa82:0xab9262d0
  412edf:	cmp    cl,ah
  412ee1:	dec    edi
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	fnstenv ds:0x9aded87
  412ee9:	jne    0x412f37
  412eeb:	int    0x5
  412eed:	(bad)  
  412eee:	cmc    
  412eef:	retf   0x5dcb
  412ef2:	inc    esi
  412ef3:	out    dx,eax
  412ef4:	sbb    esp,DWORD PTR [eax]
  412ef6:	gs stos DWORD PTR es:[edi],eax
  412ef8:	mov    ds:0xf697f6e9,al
  412efd:	xor    dl,BYTE PTR [esi]
  412eff:	push   0xdeb6b28f
  412f04:	sub    edi,DWORD PTR [ebp+0x6c7f5915]
  412f0a:	mov    fs,ebx
  412f0c:	in     eax,dx
  412f0d:	inc    ebx
  412f0e:	jle    0x412eef
  412f10:	dec    ecx
  412f11:	or     al,0x7e
  412f13:	ins    BYTE PTR es:[edi],dx
  412f14:	(bad)  
  412f15:	mov    al,dh
  412f17:	adc    bl,al
  412f19:	mov    ds:0x4152162,al
  412f1e:	dec    ebp
  412f1f:	shl    esp,cl
  412f21:	sub    DWORD PTR [esp+edx*8-0x30],edi
  412f25:	push   0xffffffe0
  412f27:	sbb    eax,0xbcbc9fea
  412f2c:	cmp    al,BYTE PTR [ebx+0x21]
  412f2f:	sub    ebx,DWORD PTR [edi+0x1e]
  412f32:	mov    ds:0x5d68ae89,al
  412f37:	dec    edx
  412f38:	scas   al,BYTE PTR es:[edi]
  412f39:	add    esp,DWORD PTR [esi-0x6218bec5]
  412f3f:	sar    DWORD PTR [esi+eax*4+0x46019d28],cl
  412f46:	mov    bh,0x43
  412f48:	mov    ecx,0x9656cc9f
  412f4d:	cmp    DWORD PTR [edi],esi
  412f4f:	mov    eax,ds:0x76e8b43a
  412f54:	cmp    BYTE PTR [ebp-0x49abdd20],dl
  412f5a:	fld    DWORD PTR [esi-0x25]
  412f5d:	lods   eax,DWORD PTR ds:[esi]
  412f5e:	js     0x412ee8
  412f60:	sbb    ch,BYTE PTR [edi+esi*8]
  412f63:	push   0xa72ac064
  412f68:	aad    0xef
  412f6a:	mov    ebx,0xd7c7b30
  412f6f:	nop
  412f70:	jne    0x412f52
  412f72:	and    esp,edx
  412f74:	push   edx
  412f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f76:	xchg   edi,eax
  412f77:	popf   
  412f78:	and    al,0x8b
  412f7a:	fistp  QWORD PTR [ebp-0x7f49fe49]
  412f80:	pop    esp
  412f81:	(bad)  
  412f82:	sub    ch,BYTE PTR [edx-0x55]
  412f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f86:	repz pop ebx
  412f88:	jmp    0xf127:0x70c63b30
  412f8f:	mov    eax,0x400f9805
  412f94:	in     eax,0xaa
  412f96:	cli    
  412f97:	add    BYTE PTR [edi],0x94
  412f9a:	iret   
  412f9b:	bound  edi,QWORD PTR [eax*1-0x51894074]
  412fa2:	cdq    
  412fa3:	stos   DWORD PTR es:[edi],eax
  412fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fa5:	mov    ds:0xdc889aff,al
  412faa:	cmp    DWORD PTR [edx-0xe],esp
  412fad:	pop    ss
  412fae:	iret   
  412faf:	fld    TBYTE PTR [eax]
  412fb1:	les    ebx,FWORD PTR [ecx]
  412fb3:	push   cs
  412fb4:	rol    BYTE PTR ds:0x9e3ed4b5,1
  412fba:	cdq    
  412fbb:	ss (bad) 
  412fbd:	retf   
  412fbe:	jb     0x412f55
  412fc0:	push   cs
  412fc1:	(bad)  
  412fc2:	cmp    dl,BYTE PTR [ecx-0x44]
  412fc5:	cli    
  412fc6:	pop    esi
  412fc7:	das    
  412fc8:	ja     0x412fa8
  412fca:	mov    edx,0xe6d365ce
  412fcf:	leave  
  412fd0:	mov    dh,0x76
  412fd2:	push   0x4f
  412fd4:	out    0x8c,al
  412fd6:	fwait
  412fd7:	adc    DWORD PTR [edx-0x76c0408c],esp
  412fdd:	repz leave 
  412fdf:	(bad)  
  412fe0:	fisttp WORD PTR [ecx-0x55d7e9db]
  412fe6:	leave  
  412fe7:	add    DWORD PTR [edi],eax
  412fe9:	retf   0x8b42
  412fec:	mov    ah,0x3f
  412fee:	out    0x89,al
  412ff0:	jge    0x412fc1
  412ff2:	sub    DWORD PTR ds:[ebx],eax
  412ff5:	jb     0x412fc3
  412ff7:	adc    bh,0x80
  412ffa:	aas    
  412ffb:	jecxz  0x413052
  412ffd:	outs   dx,DWORD PTR ds:[esi]
  412ffe:	fmul   QWORD PTR [edi+0x5]
  413001:	out    0x51,eax
  413003:	ja     0x412f94
  413005:	aaa    
  413006:	mov    WORD PTR [edi-0x51],ds
  413009:	pop    ss
  41300a:	data16 fisub WORD PTR [edx+ebp*1]
  41300e:	loop   0x413073
  413010:	push   ebp
  413011:	pop    ss
  413012:	jno    0x413003
  413014:	add    dh,BYTE PTR [edx+0x13be3a2a]
  41301a:	xor    eax,0x3010b783
  41301f:	lock lods eax,DWORD PTR ds:[esi]
  413021:	push   edx
  413022:	mov    ds:0x68276b5d,eax
  413027:	mov    esp,0x43ed9101
  41302c:	sbb    ch,ch
  41302e:	sub    edi,DWORD PTR [ecx]
  413030:	mov    eax,0xeaad9d26
  413035:	out    dx,eax
  413036:	and    dl,BYTE PTR [edi-0x51]
  413039:	fadd   QWORD PTR [ebx-0x7f5f1e40]
  41303f:	pop    esi
  413040:	(bad)  
  413041:	xchg   edx,eax
  413042:	mov    esp,0x12e1c0e2
  413047:	push   0xffffffc6
  413049:	push   0x25
  41304b:	xor    al,0xb7
  41304d:	xchg   ecx,eax
  41304e:	xor    DWORD PTR [ecx-0x2db7a63],ecx
  413054:	mov    ch,0x3f
  413056:	xchg   esp,eax
  413057:	sub    al,0x49
  413059:	lods   al,BYTE PTR ds:[esi]
  41305a:	jmp    DWORD PTR [ebx+ecx*4-0x59]
  41305e:	mov    ch,0x6f
  413060:	xchg   ecx,eax
  413061:	push   ss
  413062:	mov    esi,0x9acf7f2d
  413067:	mov    BYTE PTR [esi],bh
  413069:	popa   
  41306a:	in     eax,0xf5
  41306c:	fdivr  st(0),st
  41306e:	lahf   
  41306f:	mov    ebp,DWORD PTR [ecx]
  413071:	ss out dx,eax
  413073:	adc    ecx,DWORD PTR [eax+0x62]
  413076:	mov    bl,0x6a
  413078:	add    bh,BYTE PTR [edi-0x5f]
  41307b:	scas   al,BYTE PTR es:[edi]
  41307c:	out    dx,eax
  41307d:	imul   esp,DWORD PTR [eax+0x24],0x5b220d08
  413084:	or     ch,ah
  413086:	fcomp  DWORD PTR [edi+ebp*1+0x78]
  41308a:	sbb    bh,BYTE PTR [eax+0x2cbb4281]
  413090:	cli    
  413091:	gs cli 
  413093:	mov    ch,0x5e
  413095:	popf   
  413096:	setl   BYTE PTR [ecx]
  413099:	out    0xd3,al
  41309b:	out    0x5f,eax
  41309d:	setb   BYTE PTR [edi+0x605a5d8b]
  4130a4:	mov    dl,0x77
  4130a6:	inc    edx
  4130a7:	outs   dx,BYTE PTR cs:[esi]
  4130a9:	gs setno ah
  4130ad:	cmp    al,0x12
  4130af:	loop   0x4130ab
  4130b1:	cmp    eax,0xaae41598
  4130b6:	jmp    0x413081
  4130b8:	sbb    cl,ch
  4130ba:	repnz cmc 
  4130bc:	cs es add esp,ebp
  4130c0:	mov    edx,0xe2298c82
  4130c5:	nop
  4130c6:	ins    BYTE PTR es:[edi],dx
  4130c7:	dec    edi
  4130c8:	gs mov dl,0x2f
  4130cb:	imul   esp,DWORD PTR [ecx+eiz*2-0x730e890e],0x5f
  4130d3:	ja     0x413095
  4130d5:	or     DWORD PTR [edi-0x4f],esi
  4130d8:	nop
  4130d9:	lods   eax,DWORD PTR ds:[esi]
  4130da:	inc    eax
  4130db:	inc    ecx
  4130dc:	mov    ebp,DWORD PTR [eax]
  4130de:	cmp    eax,edi
  4130e0:	mov    ah,0xdd
  4130e2:	stos   DWORD PTR es:[edi],eax
  4130e3:	xor    al,0x4e
  4130e5:	rcl    eax,cl
  4130e7:	xchg   edi,eax
  4130e8:	into   
  4130e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ea:	ret    0xd0c8
  4130ed:	test   BYTE PTR [esi+0x35],ch
  4130f0:	shl    BYTE PTR [eax+0x3c],0x96
  4130f4:	push   ebp
  4130f5:	fninit 
  4130f7:	scas   al,BYTE PTR es:[edi]
  4130f8:	leave  
  4130f9:	mov    BYTE PTR [esi+0x66ecb137],0xbb
  413100:	or     eax,0xe8f1e70
  413105:	fmul   st,st(6)
  413107:	div    BYTE PTR [edi]
  413109:	dec    edx
  41310a:	imul   ebp,DWORD PTR [edx+0x59],0xe83a2cb5
  413111:	adc    al,0x2e
  413113:	mov    bl,0x59
  413115:	jg     0x413180
  413117:	popf   
  413118:	push   edi
  413119:	sti    
  41311a:	jbe    0x41311f
  41311c:	sbb    bh,BYTE PTR [edx+edx*1-0x2480dee3]
  413123:	pop    ecx
  413124:	lock push ss
  413126:	iret   
  413127:	repz pop es
  413129:	or     DWORD PTR [ecx+ebx*8+0x28],0x32
  41312e:	ret    0x8790
  413131:	dec    ebp
  413132:	jb     0x4130fe
  413134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413135:	imul   edi,DWORD PTR [ebx+0x4a],0x68
  413139:	sub    DWORD PTR [eax],ebp
  41313b:	nop
  41313c:	ss pop edx
  41313e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41313f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413140:	push   esi
  413141:	enter  0x4253,0x5a
  413145:	sbb    al,0xf7
  413147:	sbb    BYTE PTR [esi+0x1e83f3e1],ch
  41314d:	adc    DWORD PTR [ecx-0x148b8c05],ebx
  413153:	cmp    eax,0xfbada26f
  413158:	xchg   edi,eax
  413159:	loope  0x41314b
  41315b:	lods   eax,DWORD PTR ds:[esi]
  41315c:	xchg   BYTE PTR [edx+ebp*1-0x59],ah
  413160:	pmaddwd mm3,QWORD PTR [edx-0x6fe294ad]
  413167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413168:	mov    ds:0x9a69205,al
  41316d:	cmp    esp,esp
  41316f:	jae    0x413154
  413171:	sar    DWORD PTR ds:0x788b2c2d,0xc
  413178:	and    edx,ebp
  41317a:	mov    al,0x30
  41317c:	retf   
  41317d:	inc    edx
  41317e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41317f:	dec    edx
  413180:	in     eax,0xd5
  413182:	cmc    
  413183:	aam    0x4d
  413185:	xchg   esp,eax
  413186:	inc    ebp
  413187:	mov    bh,0x20
  413189:	dec    edx
  41318a:	ret    
  41318b:	fldcw  WORD PTR [ecx-0x2]
  41318e:	xlat   BYTE PTR ds:[ebx]
  41318f:	into   
  413190:	scas   al,BYTE PTR es:[edi]
  413191:	retf   
  413192:	in     al,0xa0
  413194:	and    DWORD PTR [eax+0x6d],ecx
  413197:	push   ds
  413198:	jbe    0x413178
  41319a:	dec    edx
  41319b:	stos   BYTE PTR es:[edi],al
  41319c:	cdq    
  41319d:	jg     0x41315f
  41319f:	test   eax,0x691ed607
  4131a4:	mov    WORD PTR [esi+0x151a24e9],gs
  4131aa:	outs   dx,BYTE PTR ds:[esi]
  4131ab:	ror    dl,cl
  4131ad:	xor    eax,0xa5651951
  4131b2:	and    eax,0xd685e3a0
  4131b7:	mov    esp,0x908344dd
  4131bc:	ficom  DWORD PTR [ebp-0xc]
  4131bf:	pop    ds
  4131c0:	mov    bl,0x93
  4131c2:	pop    edi
  4131c3:	inc    edi
  4131c4:	scas   al,BYTE PTR es:[edi]
  4131c5:	and    bh,BYTE PTR [ecx+0x34bf325d]
  4131cb:	test   al,0xdc
  4131cd:	sahf   
  4131ce:	scas   eax,DWORD PTR es:[edi]
  4131cf:	pop    es
  4131d0:	adc    al,0x7c
  4131d2:	jecxz  0x4131ed
  4131d4:	inc    ebp
  4131d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131d6:	bound  edx,QWORD PTR [ecx]
  4131d8:	bound  edx,QWORD PTR [esp+eax*1+0x1c8bec32]
  4131df:	aam    0x20
  4131e1:	dec    ebp
  4131e2:	test   DWORD PTR [ebp-0x219343b0],esi
  4131e8:	dec    edi
  4131e9:	jmp    0x41323f
  4131eb:	je     0x413227
  4131ed:	and    al,0x65
  4131ef:	jns    0x41322a
  4131f1:	test   al,0x1f
  4131f3:	jle    0x41325b
  4131f5:	mov    bl,0xa2
  4131f7:	fs pop ecx
  4131f9:	cmp    eax,0x60
  4131fc:	xor    dl,BYTE PTR ds:0xca47935a
  413202:	(bad)  
  413203:	and    al,0x57
  413205:	add    al,0x95
  413207:	mov    ecx,0x3e0f48ef
  41320c:	or     eax,0x1b206afa
  413211:	jp     0x4131ce
  413213:	jbe    0x41322b
  413215:	sbb    ecx,DWORD PTR [ebp+0x50cc7421]
  41321b:	gs push esi
  41321d:	and    BYTE PTR [edi-0x59],0xd6
  413221:	and    esp,edi
  413223:	mov    es,WORD PTR [eax+0x5987ec11]
  413229:	mov    cl,0x80
  41322b:	sub    DWORD PTR [edi-0x1d],eax
  41322e:	pop    esp
  41322f:	daa    
  413230:	rol    BYTE PTR [edx*4-0x4badb1a7],1
  413237:	pop    es
  413238:	xlat   BYTE PTR ds:[ebx]
  413239:	xchg   ecx,eax
  41323a:	xchg   DWORD PTR [ebx-0x24004671],esi
  413240:	jmp    0x4131d5
  413242:	cld    
  413243:	adc    BYTE PTR [ebx+0x6b],bl
  413246:	cmp    ebx,DWORD PTR [bp-0x2]
  41324a:	mov    ecx,0x80ab6ca0
  41324f:	jnp    0x413253
  413251:	shl    BYTE PTR [ebp+0x241ad88e],cl
  413257:	sti    
  413258:	stc    
  413259:	(bad)  
  41325a:	sub    BYTE PTR [ecx],bh
  41325c:	cli    
  41325d:	dec    edx
  41325e:	xor    eax,0xcc4906a9
  413263:	adc    bl,BYTE PTR [ebx+0x6a775120]
  413269:	lea    esp,[eax]
  41326b:	ret    
  41326c:	jp     0x4132b6
  41326e:	or     eax,esp
  413270:	push   ds
  413271:	mov    dl,0x83
  413273:	cmp    al,BYTE PTR [esi+0x72e0be39]
  413279:	js     0x4132e0
  41327b:	cmp    dl,0xf3
  41327e:	pop    eax
  41327f:	ss call 0x2407a6d2
  413285:	fist   DWORD PTR [esi-0x10]
  413288:	xchg   edx,eax
  413289:	call   DWORD PTR [esi+0x3c7c47c0]
  41328f:	(bad)  
  413290:	hlt    
  413291:	mov    ebx,?
  413293:	sub    BYTE PTR [ebp+0x75d817eb],bh
  413299:	dec    esp
  41329a:	mov    bl,BYTE PTR [esi-0x50]
  41329d:	jmp    0x6d94:0xa66af7b3
  4132a4:	sbb    ebp,DWORD PTR [ebx-0x2f4a0605]
  4132aa:	(bad)  
  4132ac:	and    al,0xae
  4132ae:	call   0x2c7dd592
  4132b3:	(bad)  
  4132b4:	ins    BYTE PTR es:[edi],dx
  4132b5:	retf   0x8cc7
  4132b8:	adc    edx,DWORD PTR [eax]
  4132ba:	and    eax,ebp
  4132bc:	mov    edx,DWORD PTR [ebp+edi*4+0x17]
  4132c0:	mov    ah,0x27
  4132c2:	outs   dx,DWORD PTR ds:[esi]
  4132c3:	push   es
  4132c4:	xor    DWORD PTR [ebx+ecx*1+0x154344c4],eax
  4132cb:	scas   al,BYTE PTR es:[edi]
  4132cc:	jnp    0x4132ef
  4132ce:	pop    edi
  4132cf:	sub    edx,DWORD PTR [edi-0x2e429ce5]
  4132d5:	sbb    BYTE PTR [ebp+0x35],cl
  4132d8:	js     0x413323
  4132da:	push   ebp
  4132db:	push   esi
  4132dc:	cmp    ch,bh
  4132de:	and    cl,ch
  4132e0:	jle    0x41329c
  4132e2:	and    al,0x2
  4132e4:	dec    eax
  4132e5:	sbb    edx,DWORD PTR [ebx]
  4132e7:	sub    dh,BYTE PTR [ecx+0x70]
  4132ea:	jns    0x4132be
  4132ec:	stos   DWORD PTR es:[edi],eax
  4132ed:	shl    DWORD PTR [eax+0x4a1dee3e],0xa0
  4132f4:	pop    esi
  4132f5:	scas   eax,DWORD PTR es:[edi]
  4132f6:	add    al,0x26
  4132f8:	adc    al,BYTE PTR [esi-0x4ef9754f]
  4132fe:	rcr    BYTE PTR [edi+ebp*4-0x2d],1
  413302:	sbb    DWORD PTR [ebx+0x10],esp
  413305:	ror    DWORD PTR [esi],cl
  413307:	adc    BYTE PTR [ecx-0x19164851],ch
  41330d:	jle    0x41333a
  41330f:	jle    0x4132b8
  413311:	aaa    
  413312:	out    0xf8,eax
  413314:	test   BYTE PTR [edi+0x83091f7],bl
  41331a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41331b:	cdq    
  41331c:	mov    bh,0x4d
  41331e:	fmul   st,st(6)
  413320:	shl    BYTE PTR [edx-0x7024c6a2],cl
  413326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413327:	repnz fnsave [ecx+0x46]
  41332b:	xor    esp,DWORD PTR [ebp+ebx*1-0x2e6d6ad0]
  413332:	scas   al,BYTE PTR es:[edi]
  413333:	lea    eax,[ecx+esi*1]
  413336:	stc    
  413337:	in     eax,dx
  413338:	(bad)  
  413339:	xchg   edx,eax
  41333a:	jg     0x413327
  41333c:	js     0x413368
  41333e:	call   0xc49f0c44
  413343:	push   ds
  413344:	adc    DWORD PTR [ebp-0x5e61fd2f],esp
  41334a:	inc    edx
  41334b:	sub    eax,esp
  41334d:	or     ebx,DWORD PTR ds:0x1c8bc147
  413353:	mov    esi,0xaf3bf96b
  413358:	fiadd  WORD PTR [edx+0x20cda98]
  41335e:	jp     0x413349
  413360:	and    DWORD PTR [ebx+0xbb7023e],ebp
  413366:	jmp    0x9fdf46a6
  41336b:	div    DWORD PTR [ebx-0x717fc186]
  413371:	call   0xcb53:0x623f27c3
  413378:	in     al,0x7
  41337a:	xchg   ebp,eax
  41337b:	daa    
  41337c:	cmp    al,0x7a
  41337e:	(bad)  
  41337f:	dec    ecx
  413380:	ins    BYTE PTR es:[edi],dx
  413381:	add    eax,0xf484f17
  413386:	retf   0x37b7
  413389:	into   
  41338a:	push   ebx
  41338b:	push   ds
  41338c:	rcl    BYTE PTR [ebx],0xc
  41338f:	inc    edx
  413390:	aaa    
  413391:	sbb    eax,0xa86699fc
  413396:	xchg   ebp,eax
  413397:	call   0x5d2c:0xc6220d2f
  41339e:	jecxz  0x413374
  4133a0:	jne    0x41335f
  4133a2:	dec    ecx
  4133a3:	je     0x413396
  4133a5:	ins    BYTE PTR es:[edi],dx
  4133a6:	mov    db7,esp
  4133a9:	test   al,0xf2
  4133ab:	mov    dh,0x58
  4133ad:	out    dx,al
  4133ae:	mov    bh,bl
  4133b0:	call   0xfc04:0xe987f7ab
  4133b7:	jbe    0x413363
  4133b9:	xchg   esp,eax
  4133ba:	jmp    0xab658a48
  4133bf:	cmp    al,0x24
  4133c1:	pop    esp
  4133c2:	les    ebp,FWORD PTR [eax-0x59]
  4133c5:	and    cl,BYTE PTR [ecx+esi*2+0x20826259]
  4133cc:	xchg   ecx,eax
  4133cd:	or     ah,cl
  4133cf:	jecxz  0x413440
  4133d1:	pop    edx
  4133d2:	nop
  4133d3:	loope  0x4133b5
  4133d5:	(bad)  
  4133d7:	mov    dh,0xe9
  4133d9:	retf   0xeb3
  4133dc:	mov    ecx,0xba83b7ba
  4133e1:	sub    bl,dl
  4133e3:	sub    esp,edi
  4133e5:	or     edi,DWORD PTR [esi-0x20]
  4133e8:	sbb    ch,ah
  4133ea:	pop    ebp
  4133eb:	xchg   esi,eax
  4133ec:	dec    edi
  4133ed:	push   ds
  4133ee:	outs   dx,BYTE PTR ds:[esi]
  4133ef:	inc    ebp
  4133f0:	aad    0x85
  4133f2:	mov    gs,ebp
  4133f4:	mov    cl,0xb6
  4133f6:	lahf   
  4133f7:	xchg   edi,eax
  4133f8:	or     ebx,DWORD PTR [edi+0x17]
  4133fb:	lods   eax,DWORD PTR ds:[esi]
  4133fc:	xor    ah,dl
  4133fe:	jmp    0x4b9d2366
  413403:	cmp    DWORD PTR [edi+0xf1a45c0],esi
  413409:	call   FWORD PTR [ebx]
  41340b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41340d:	fwait
  41340e:	jb     0x413415
  413410:	xchg   ecx,eax
  413411:	mov    al,0xd9
  413413:	bnd jae 0x41347b
  413416:	mov    ?,WORD PTR [ecx]
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	xor    al,0x83
  41341b:	mov    ss,WORD PTR [esi]
  41341d:	mov    edi,0x7d795646
  413422:	dec    esi
  413423:	mov    dl,0x81
  413425:	mov    WORD PTR [edx+0x65e303f2],?
  41342b:	mov    DWORD PTR [ecx+0x33],edx
  41342e:	iret   
  41342f:	add    esp,ebp
  413431:	cli    
  413432:	mov    ch,0x1a
  413434:	int3   
  413435:	push   ebx
  413436:	addr16 jmp 0xdb1cfe69
  41343c:	sub    bh,al
  41343e:	in     al,dx
  41343f:	push   esp
  413440:	stc    
  413441:	clc    
  413442:	int    0xe4
  413444:	lock push ebx
  413446:	push   es
  413447:	push   ss
  413448:	xchg   ebx,eax
  413449:	icebp  
  41344a:	cmp    al,0xf4
  41344c:	inc    esi
  41344d:	lods   al,BYTE PTR ds:[esi]
  41344e:	jmp    0x1618b7b3
  413453:	rcl    BYTE PTR [eax-0xaa8b3ba],0x46
  41345a:	push   cs
  41345b:	int    0x62
  41345d:	inc    esp
  41345e:	mov    ecx,esi
  413460:	cmp    eax,DWORD PTR [ecx-0x34ec2512]
  413466:	in     al,dx
  413467:	jecxz  0x41343d
  413469:	mov    ebx,DWORD PTR [esi-0x27]
  41346c:	stos   DWORD PTR es:[edi],eax
  41346d:	les    edi,FWORD PTR [edx+0x5c742861]
  413473:	outs   dx,BYTE PTR ds:[esi]
  413474:	fdiv   QWORD PTR [eax-0x74]
  413477:	xor    ah,ah
  413479:	adc    al,ah
  41347b:	cmp    eax,esp
  41347d:	inc    ebx
  41347e:	call   0x2003:0xaf2c7f13
  413485:	mov    edx,0x878eb9ea
  41348a:	xchg   ebp,eax
  41348b:	add    cl,ah
  41348d:	mov    dl,0x73
  41348f:	data16 shr bh,0xd
  413493:	outs   dx,BYTE PTR ds:[esi]
  413494:	call   0xfd02:0x809b0eb9
  41349b:	pushf  
  41349c:	push   0xe06ff815
  4134a1:	mov    cl,0xa5
  4134a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134a4:	(bad)  
  4134a6:	cmp    edx,DWORD PTR [esi-0x66]
  4134a9:	fnstenv [esi+0x4d614bd2]
  4134af:	sub    esp,DWORD PTR [eax-0x654da3d]
  4134b5:	xchg   edi,eax
  4134b6:	sub    edi,esp
  4134b8:	pop    esp
  4134b9:	das    
  4134ba:	or     eax,0x28f15171
  4134bf:	popa   
  4134c0:	jg     0x413473
  4134c2:	std    
  4134c3:	(bad)  
  4134c4:	lods   eax,DWORD PTR ds:[esi]
  4134c5:	imul   ebp,ebx,0xffffffad
  4134c8:	sbb    DWORD PTR [esi-0x1052f7ee],edx
  4134ce:	mov    edi,0xfbd1bc7e
  4134d3:	mov    bh,0x9d
  4134d5:	int    0xee
  4134d7:	xchg   edx,eax
  4134d8:	les    ebp,FWORD PTR [edi+0x7a]
  4134db:	jne    0x4134d6
  4134dd:	in     al,dx
  4134de:	imul   esp,DWORD PTR [ebx],0x10
  4134e1:	icebp  
  4134e2:	push   cs
  4134e3:	repz loopne 0x413551
  4134e6:	mov    dh,ah
  4134e8:	and    bl,BYTE PTR [edi-0x2a804fc4]
  4134ee:	jge    0x4134af
  4134f0:	cmp    cl,BYTE PTR [esi+0x7e005d51]
  4134f6:	outs   dx,DWORD PTR ds:[esi]
  4134f7:	std    
  4134f8:	cmp    DWORD PTR ds:0xcc892e45,esi
  4134fe:	retf   
  4134ff:	jb     0x413520
  413501:	out    dx,eax
  413502:	pop    es
  413503:	adc    ch,BYTE PTR [edx+0x72]
  413506:	and    ebp,DWORD PTR [esi+0x5a]
  413509:	push   esi
  41350a:	or     ebx,DWORD PTR [esp+eiz*4+0x75537d7e]
  413511:	cmp    edi,DWORD PTR [ebx-0x7dfa723]
  413517:	ror    bl,0x9d
  41351a:	adc    ecx,0x30
  41351d:	add    dh,ch
  41351f:	mov    ah,0x36
  413521:	out    dx,al
  413522:	fiadd  DWORD PTR [ecx]
  413524:	cmc    
  413525:	mov    al,ds:0x57d63b69
  41352a:	mov    edx,0x355e6e4
  41352f:	jg     0x4134d7
  413531:	xor    eax,0x8e684f8d
  413536:	xchg   ebx,eax
  413537:	mov    eax,0x78c9aca9
  41353c:	sahf   
  41353d:	fcmovb st,st(2)
  41353f:	daa    
  413540:	sub    dl,BYTE PTR [ecx-0x3a6811fe]
  413546:	dec    edi
  413547:	ret    
  413548:	sub    al,0x5a
  41354a:	inc    ecx
  41354b:	mov    al,0xa
  41354d:	popa   
  41354e:	sbb    bl,BYTE PTR [edx-0x6dcf5765]
  413554:	xchg   cl,al
  413556:	idiv   BYTE PTR [ecx-0x3e23ff1e]
  41355c:	cmp    ecx,DWORD PTR [esp+edi*2-0x7f]
  413560:	(bad)  
  413562:	sub    BYTE PTR [edx-0x759d1852],dl
  413568:	jb     0x4135bc
  41356a:	div    DWORD PTR [ebx+edx*2]
  41356d:	scas   eax,DWORD PTR es:[edi]
  41356e:	fwait
  41356f:	jo     0x413596
  413571:	int3   
  413572:	cmp    eax,0xd468cf0a
  413577:	add    edi,DWORD PTR [ecx+0x167cf86e]
  41357d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41357e:	sub    ah,BYTE PTR [eax]
  413580:	adc    al,0x42
  413582:	(bad)  
  413583:	mov    BYTE PTR [edi],dh
  413585:	add    dh,al
  413587:	push   0xffffff83
  413589:	xchg   ebx,eax
  41358a:	or     eax,0xe537140c
  41358f:	ja     0x4135bb
  413591:	xor    DWORD PTR ds:0x9507566c,eax
  413597:	and    eax,0x8bc555ea
  41359c:	sub    al,0xf3
  41359e:	and    eax,0x79c63ac8
  4135a3:	int    0x33
  4135a5:	ss push eax
  4135a7:	es div ah
  4135aa:	aad    0xb4
  4135ac:	lahf   
  4135ad:	add    ch,BYTE PTR [edi+0x4d521be2]
  4135b3:	out    0x86,al
  4135b5:	pop    ebp
  4135b6:	sbb    ebp,DWORD PTR [edi]
  4135b8:	mov    edi,0x4e1ce0e
  4135bd:	push   cs
  4135be:	push   ds
  4135bf:	mov    ah,BYTE PTR [ebx-0x7903f118]
  4135c5:	outs   dx,BYTE PTR ds:[esi]
  4135c6:	popa   
  4135c7:	mov    ecx,edx
  4135c9:	retf   
  4135ca:	loope  0x413605
  4135cc:	rcl    DWORD PTR [esi+0x1d5ff5e6],cl
  4135d2:	call   0x5d0e:0xdc2e9fae
  4135d9:	add    al,0x8f
  4135db:	add    al,0xa
  4135dd:	mov    eax,ds:0xfbdc55d0
  4135e2:	cmp    al,0xf2
  4135e4:	mov    ecx,0xee514594
  4135e9:	loopne 0x4135a9
  4135eb:	gs stos BYTE PTR es:[edi],al
  4135ed:	mov    ebp,0x39db9a62
  4135f2:	jg     0x4135cb
  4135f4:	mov    dl,0x14
  4135f6:	cmp    BYTE PTR [edx+0x77],ch
  4135f9:	xchg   ebx,eax
  4135fa:	rol    DWORD PTR [ecx+0x200a2e0],cl
  413600:	xlat   BYTE PTR ds:[ebx]
  413601:	je     0x413632
  413603:	xchg   esp,eax
  413604:	int3   
  413605:	in     eax,0x5e
  413607:	cmp    DWORD PTR [ebp+ebp*8-0x5bb891b0],ecx
  41360e:	into   
  41360f:	pop    ecx
  413610:	sbb    BYTE PTR [eax+0x3b1264b0],dl
  413616:	mov    edi,0x4b7268c
  41361b:	(bad)  
  41361c:	in     al,dx
  41361d:	shr    DWORD PTR [ebp+0x247bcbae],cl
  413623:	retf   
  413624:	inc    ecx
  413625:	mov    ah,0x83
  413627:	lods   eax,DWORD PTR ds:[esi]
  413628:	cmp    al,dh
  41362a:	addr16 mov bh,0x6c
  41362d:	dec    ecx
  41362e:	ins    BYTE PTR es:[edi],dx
  41362f:	push   ecx
  413630:	xlat   BYTE PTR ds:[ebx]
  413631:	or     DWORD PTR [edi-0x33],esi
  413634:	daa    
  413635:	retf   0xc1b4
  413638:	mov    bh,0x99
  41363a:	mov    dh,0xe0
  41363c:	mov    dl,0xee
  41363e:	outs   dx,BYTE PTR ss:[esi]
  413640:	mov    esi,0x7e32a032
  413645:	nop
  413646:	xchg   DWORD PTR [edi-0x43],edx
  413649:	xor    eax,0xcafeeb28
  41364e:	repz xor DWORD PTR [ebp+0x2b3eeed3],esi
  413655:	jmp    FWORD PTR [eax-0x1f6261f5]
  41365b:	inc    edi
  41365c:	retf   0x9981
  41365f:	mov    cl,0xc8
  413661:	mov    ds:0x23b62774,eax
  413666:	dec    edx
  413667:	pop    ds
  413668:	sahf   
  413669:	xchg   esp,eax
  41366a:	xor    esp,DWORD PTR [eax]
  41366c:	push   es
  41366d:	inc    ecx
  41366e:	test   al,0x1b
  413670:	pop    edx
  413671:	dec    ecx
  413672:	iret   
  413673:	test   BYTE PTR [ebp+0x16],al
  413676:	loop   0x413624
  413678:	addr16 adc cl,dh
  41367b:	data16 mov ds:0xb0c1d1d5,al
  413681:	shl    ebp,1
  413683:	ins    BYTE PTR es:[edi],dx
  413684:	test   BYTE PTR [eax],ch
  413686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413687:	push   cs
  413688:	lock mov bl,0x3e
  41368b:	(bad)  
  41368c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41368d:	or     bh,BYTE PTR [esi+esi*4]
  413690:	cmp    BYTE PTR [ebx-0x2b],ch
  413693:	mov    al,ds:0x25ea2895
  413698:	dec    esi
  413699:	adc    dl,dl
  41369b:	in     eax,0xe3
  41369d:	sbb    esi,DWORD PTR [edx-0x4aac3441]
  4136a3:	cmp    edx,DWORD PTR [edi]
  4136a5:	pusha  
  4136a6:	jns    0x4136f9
  4136a8:	repz div BYTE PTR [esi-0xc]
  4136ac:	lds    ecx,FWORD PTR [ebx+0x5a]
  4136af:	fwait
  4136b0:	hlt    
  4136b1:	and    DWORD PTR [ebx-0x58],edx
  4136b4:	leave  
  4136b5:	xor    ebx,ecx
  4136b7:	jge    0x41365b
  4136b9:	push   ss
  4136ba:	mov    al,0xd9
  4136bc:	fisttp DWORD PTR [edx-0x1]
  4136bf:	jle    0x4136fd
  4136c1:	xchg   esi,eax
  4136c2:	sub    al,0x79
  4136c4:	add    al,0x62
  4136c6:	out    dx,eax
  4136c7:	retf   
  4136c8:	out    0xab,eax
  4136ca:	loopne 0x41373d
  4136cc:	sbb    dh,BYTE PTR [ebx+0x1f]
  4136cf:	ss out dx,al
  4136d1:	inc    edx
  4136d2:	repz imul ebp,DWORD PTR [eax+0x62a2a20d],0xffffffae
  4136da:	jge    0x4136f6
  4136dc:	push   eax
  4136dd:	adc    eax,0x84de4a82
  4136e2:	cmp    dh,BYTE PTR [esi+0x788b3eb5]
  4136e8:	and    eax,0xdacc11a
  4136ed:	rol    DWORD PTR [edx+0x75],0x42
  4136f1:	aas    
  4136f2:	cmp    al,0x77
  4136f4:	adc    bl,BYTE PTR [esi-0x2c]
  4136f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136f8:	xchg   esp,eax
  4136f9:	fbstp  TBYTE PTR [ecx+0x57]
  4136fc:	sub    DWORD PTR es:[ebp-0x3],esi
  413700:	and    eax,DWORD PTR [ecx]
  413702:	or     bh,bh
  413704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413705:	xor    al,0x6c
  413707:	call   0x7e87df70
  41370c:	sbb    DWORD PTR [ecx-0x54],0xffffffbd
  413710:	out    0xf7,eax
  413712:	dec    ebx
  413713:	sar    dl,cl
  413715:	mov    edx,0x7b80a88d
  41371a:	(bad)  
  41371b:	or     DWORD PTR [ebx],ebx
  41371d:	sbb    al,0x1f
  41371f:	jns    0x4136df
  413721:	fstp   TBYTE PTR [ebx+0x17]
  413724:	call   0xdcf0:0xd3108b7e
  41372b:	jge    0x41376d
  41372d:	(bad)  
  41372e:	in     al,dx
  41372f:	sbb    al,0xa3
  413731:	sub    eax,0xf6f05c5
  413736:	mov    WORD PTR [ebx+0x7ce2bbb4],es
  41373c:	mov    DWORD PTR [ecx+0x7f],esi
  41373f:	and    al,0xb1
  413741:	ins    DWORD PTR es:[edi],dx
  413742:	pop    ss
  413743:	mov    esi,0xf393aefa
  413748:	pushf  
  413749:	add    al,0xa5
  41374b:	aad    0x6b
  41374d:	popf   
  41374e:	aaa    
  41374f:	std    
  413750:	ja     0x41370f
  413752:	sub    al,0x71
  413754:	pop    ss
  413755:	bound  esi,QWORD PTR [edi+0x43b75b6b]
  41375b:	mov    esp,0x98d29b15
  413760:	ret    
  413761:	stos   BYTE PTR es:[edi],al
  413762:	push   ebp
  413763:	push   ebp
  413764:	fsubr  DWORD PTR [edx]
  413766:	loope  0x413769
  413768:	push   cs
  413769:	lods   eax,DWORD PTR ds:[esi]
  41376a:	add    edi,DWORD PTR [ecx]
  41376c:	sub    DWORD PTR [ebp+0x39],edx
  41376f:	cmc    
  413770:	sbb    eax,0xc3714d70
  413775:	xlat   BYTE PTR ds:[ebx]
  413776:	lahf   
  413777:	gs jo  0x4137e2
  41377a:	jge    0x413718
  41377c:	mov    dh,0xa2
  41377e:	in     eax,0x10
  413780:	imul   ebp,DWORD PTR [ecx-0x7bc265cd],0x6c415573
  41378a:	push   esp
  41378b:	cmp    edi,DWORD PTR [ebx]
  41378d:	adc    edi,esp
  41378f:	dec    eax
  413790:	push   cs
  413791:	inc    edx
  413792:	out    dx,al
  413793:	mov    esp,DWORD PTR cs:[ebx-0x69]
  413797:	lds    eax,FWORD PTR [eax]
  413799:	cdq    
  41379a:	sub    BYTE PTR [ebx+0x29],dh
  41379d:	jle    0x413739
  41379f:	adc    eax,esi
  4137a1:	repnz and eax,DWORD PTR [edx]
  4137a4:	int3   
  4137a5:	add    DWORD PTR [ecx],0xffffffab
  4137a8:	mov    DWORD PTR [esi],ebx
  4137aa:	retf   0x823a
  4137ad:	sbb    edx,DWORD PTR [ecx+0x470a7abe]
  4137b3:	clc    
  4137b4:	lods   eax,DWORD PTR ds:[esi]
  4137b5:	into   
  4137b6:	xchg   esp,eax
  4137b7:	call   0x34c4f7f0
  4137bc:	mov    al,0xa2
  4137be:	sbb    bl,ch
  4137c0:	(bad)  
  4137c2:	aas    
  4137c3:	adc    edx,DWORD PTR [ebp+esi*8+0x630adee7]
  4137ca:	sbb    DWORD PTR [edx],esp
  4137cc:	xchg   ebp,eax
  4137cd:	imul   esp,esi,0x2d
  4137d0:	ins    DWORD PTR es:[edi],dx
  4137d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d2:	jle    0x413782
  4137d4:	sub    ebx,0xffffffdb
  4137d7:	repnz mul DWORD PTR [ebx+ebx*4-0x3e0b8b08]
  4137df:	aaa    
  4137e0:	call   0x3671:0x914b87c0
  4137e7:	mov    edi,0x244b483e
  4137ec:	push   esi
  4137ed:	out    dx,eax
  4137ee:	mov    gs,WORD PTR [eax]
  4137f0:	xchg   BYTE PTR [edi],al
  4137f2:	inc    edi
  4137f3:	lea    edx,[edi+0x720ac2d0]
  4137f9:	ds test eax,0x624e1d1
  4137ff:	call   0x51f88666
  413804:	test   DWORD PTR [ebx+0x5f85f2e5],esi
  41380a:	(bad)  
  41380c:	bound  ecx,QWORD PTR [edx]
  41380e:	add    DWORD PTR [ebx-0x28],ebx
  413811:	dec    ebx
  413812:	dec    edi
  413813:	xchg   DWORD PTR [ebp+0x71c38a17],ecx
  413819:	sbb    eax,0x242647f6
  41381e:	arpl   WORD PTR [esp+esi*1],cx
  413821:	aad    0xb7
  413823:	test   eax,0x4f615e01
  413828:	pushf  
  413829:	pop    ecx
  41382a:	xchg   ebp,eax
  41382b:	pop    esp
  41382c:	repz lea ebx,[ecx+0x2c]
  413830:	adc    cl,BYTE PTR [ebp-0x58]
  413833:	xchg   DWORD PTR [ebx],eax
  413835:	and    DWORD PTR [ebp+eax*4+0x7a96ed24],eax
  41383c:	mov    ebp,0x650d53e3
  413841:	or     BYTE PTR [edi+0x4788490f],bh
  413847:	inc    edx
  413848:	or     BYTE PTR [ecx],al
  41384a:	add    BYTE PTR [eax+edx*1-0x3e],ch
  41384e:	idiv   BYTE PTR [ebx]
  413850:	fdivrp st(2),st
  413852:	(bad)  
  413853:	ficom  WORD PTR [ebp+0x6a9b0105]
  413859:	mov    cl,0x4
  41385b:	ins    DWORD PTR es:[edi],dx
  41385c:	hlt    
  41385d:	punpckldq mm5,DWORD PTR [ebp+eiz*2-0x52059295]
  413865:	(bad)  
  413866:	adc    al,0xd
  413868:	aad    0x9e
  41386a:	das    
  41386b:	mov    ds:0x413a0511,eax
  413870:	mov    cl,0x30
  413872:	dec    esi
  413873:	mov    ebp,0xe686c6e7
  413878:	dec    ebp
  413879:	mov    ecx,0x5d18bc29
  41387e:	jae    0x413813
  413880:	pop    esp
  413881:	icebp  
  413882:	pop    ebx
  413883:	(bad)  
  413884:	xchg   esi,eax
  413885:	stos   BYTE PTR es:[edi],al
  413886:	(bad)  
  413887:	lods   al,BYTE PTR ds:[esi]
  413888:	test   eax,0x7fb69ccb
  41388d:	push   es
  41388e:	sbb    eax,0x99e7c12b
  413893:	dec    edx
  413894:	mov    edx,0xcee8bc7a
  413899:	push   ebp
  41389a:	push   0x27e61515
  41389f:	adc    ecx,DWORD PTR [ebp-0x1a]
  4138a2:	stos   DWORD PTR es:[edi],eax
  4138a3:	pop    ebx
  4138a4:	outs   dx,DWORD PTR ds:[esi]
  4138a5:	and    DWORD PTR [eax+0x65],ecx
  4138a8:	mov    dh,0x55
  4138aa:	cmc    
  4138ab:	mov    ebp,0x6cb2e1b5
  4138b0:	add    eax,0xfd95f3cc
  4138b5:	outs   dx,DWORD PTR ds:[esi]
  4138b6:	shl    BYTE PTR [edx],1
  4138b8:	jg     0x413930
  4138ba:	lods   eax,DWORD PTR ds:[esi]
  4138bb:	xor    dl,BYTE PTR [eax-0x79]
  4138be:	xor    DWORD PTR [eax],0x14b11039
  4138c4:	mov    gs,WORD PTR [esi]
  4138c6:	push   cs
  4138c7:	pop    edx
  4138c8:	enter  0x4631,0x71
  4138cc:	and    eax,0xec126921
  4138d1:	retf   0x258a
  4138d4:	shl    BYTE PTR [esp+ecx*8-0x68],cl
  4138d8:	mov    esi,0x7b6f1820
  4138dd:	mov    eax,ds:0xcdf9e5b5
  4138e2:	adc    eax,0x5c0ff8f5
  4138e7:	pop    edi
  4138e8:	out    dx,eax
  4138e9:	xchg   BYTE PTR [edi+0x1b5f0148],cl
  4138ef:	pop    ebp
  4138f0:	jmp    0x4138f9
  4138f2:	jne    0x4138e1
  4138f4:	ret    0x8f2b
  4138f7:	cmc    
  4138f8:	cs dec ebx
  4138fa:	push   eax
  4138fb:	(bad)  
  4138fc:	jl     0x41391e
  4138fe:	out    dx,al
  4138ff:	and    DWORD PTR ds:0xd182cc6b,ebp
  413905:	test   BYTE PTR [edi-0x11],bh
  413908:	or     ch,ah
  41390a:	lods   eax,DWORD PTR ds:[esi]
  41390b:	push   eax
  41390c:	adc    ch,BYTE PTR [ebp-0x6797a304]
  413912:	dec    esi
  413913:	dec    esp
  413914:	test   DWORD PTR [ebp-0x14f87769],esp
  41391a:	aas    
  41391b:	enter  0x383c,0xbc
  41391f:	adc    DWORD PTR [edi+ecx*8],ecx
  413922:	dec    ecx
  413923:	stos   BYTE PTR es:[edi],al
  413924:	cmp    BYTE PTR [edx-0x52],ch
  413927:	mov    dh,bh
  413929:	sub    BYTE PTR [esi-0x1a],0x6c
  41392d:	or     al,0x18
  41392f:	retf   0xe59f
  413932:	sub    al,0x4
  413934:	add    DWORD PTR [esi],edi
  413936:	sbb    DWORD PTR [ebx+0x19],ecx
  413939:	push   0xffffffc4
  41393b:	jnp    0x41393d
  41393d:	xchg   ecx,eax
  41393e:	ret    0x825a
  413941:	adc    esp,ebx
  413943:	push   edx
  413944:	fmulp  st(0),st
  413946:	clc    
  413947:	outs   dx,DWORD PTR ds:[esi]
  413948:	bound  esi,QWORD PTR [ecx]
  41394a:	das    
  41394b:	xor    cl,BYTE PTR [edi]
  41394d:	mov    esi,0x9dce7741
  413952:	jb     0x41399f
  413954:	aad    0x31
  413956:	push   ebx
  413957:	inc    edi
  413958:	repz push 0xfffffff9
  41395b:	fldcw  WORD PTR [edx+0x6c]
  41395e:	inc    eax
  41395f:	fs push ecx
  413961:	dec    edi
  413962:	push   esp
  413963:	xlat   BYTE PTR ds:[ebx]
  413964:	inc    edi
  413965:	or     DWORD PTR [ebx-0x51],ebp
  413968:	add    BYTE PTR [ebp+0x24],bl
  41396b:	jmp    0xbe8a:0x63da04dc
  413972:	sbb    eax,0x38d8ad61
  413977:	stos   DWORD PTR es:[edi],eax
  413978:	jns    0x41393b
  41397a:	and    DWORD PTR [edx+ecx*1+0x36a3ab4a],eax
  413981:	dec    esp
  413982:	push   edx
  413983:	pop    es
  413984:	daa    
  413985:	aam    0xb3
  413987:	gs aad 0x62
  41398a:	sbb    edx,DWORD PTR [edi+0x25]
  41398d:	xchg   edx,eax
  41398e:	and    ch,BYTE PTR [eax+eiz*2]
  413991:	xchg   ebx,eax
  413992:	dec    eax
  413993:	inc    esp
  413994:	or     BYTE PTR [ebp+0x61ff03c2],al
  41399a:	or     DWORD PTR [eax-0x3a66547a],edx
  4139a0:	shrd   ecx,esi,0x8
  4139a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a5:	push   edx
  4139a6:	and    edx,0x5a
  4139a9:	xor    BYTE PTR [eax+esi*8+0x63e57977],bl
  4139b0:	jns    0x413a15
  4139b2:	sar    BYTE PTR [ebx+0x2a],1
  4139b5:	lds    eax,FWORD PTR [ebp-0x63798096]
  4139bb:	push   ds
  4139bc:	rcl    ah,1
  4139be:	cmp    BYTE PTR [edx+0x5d],bh
  4139c1:	clc    
  4139c2:	jg     0x413985
  4139c4:	(bad)  
  4139c5:	repnz int 0x69
  4139c8:	scas   eax,DWORD PTR es:[edi]
  4139c9:	aad    0x1d
  4139cb:	ret    0x6a3e
  4139ce:	je     0x41396e
  4139d0:	arpl   WORD PTR [ebx-0x3b344961],di
  4139d6:	xchg   ebp,eax
  4139d7:	jmp    FWORD PTR [edi]
  4139d9:	mov    esp,0x612c95c9
  4139de:	shl    BYTE PTR [ecx],0xa1
  4139e1:	and    dl,bh
  4139e3:	out    0x79,eax
  4139e5:	data16 fdivp st(3),st
  4139e8:	mov    ecx,0x2edb9e66
  4139ed:	cli    
  4139ee:	xchg   edi,eax
  4139ef:	ds mov ecx,0x725c05ad
  4139f5:	imul   ebx,DWORD PTR [eax-0x641c3c09]
  4139fc:	sar    ebp,cl
  4139fe:	jb     0x413a1d
  413a00:	push   edi
  413a01:	(bad)  
  413a02:	adc    ch,BYTE PTR [edx]
  413a04:	sub    ah,BYTE PTR [edx-0x53]
  413a07:	cmp    ebp,DWORD PTR [ebp+0x21]
  413a0a:	add    BYTE PTR [edi+0x3e0052d7],0x89
  413a11:	push   edx
  413a12:	imul   BYTE PTR [edi+ebx*8-0x16]
  413a16:	aas    
  413a17:	jno    0x4139ae
  413a19:	shl    BYTE PTR [ebp-0x2935b0d8],1
  413a1f:	fwait
  413a20:	mov    al,ds:0x698a182
  413a25:	pop    eax
  413a26:	mov    esi,0xf2e0861d
  413a2b:	lock call 0xe7619a9e
  413a31:	mov    DWORD PTR [ebx+0x11],esp
  413a34:	ds push ds
  413a36:	adc    edx,eax
  413a38:	dec    edx
  413a39:	mov    bh,0x48
  413a3b:	(bad)  
  413a3c:	pusha  
  413a3d:	clc    
  413a3e:	stos   BYTE PTR es:[edi],al
  413a3f:	rol    BYTE PTR es:[edx+eax*1],cl
  413a43:	pop    eax
  413a44:	mov    ch,al
  413a46:	rol    DWORD PTR [ebx-0x426feaf6],1
  413a4c:	jmp    0x409f:0x374c74f5
  413a53:	stc    
  413a54:	lods   eax,DWORD PTR ds:[esi]
  413a55:	xor    cl,bl
  413a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a58:	jl     0x413a6c
  413a5a:	(bad)  
  413a5b:	into   
  413a5c:	mov    ah,0xf5
  413a5e:	leave  
  413a5f:	out    dx,al
  413a60:	mov    dl,0x6f
  413a62:	push   esi
  413a63:	pop    ss
  413a64:	les    ecx,FWORD PTR [ebx-0x35470058]
  413a6a:	dec    esi
  413a6b:	or     al,0x7b
  413a6d:	xchg   DWORD PTR [esi-0x6d],edi
  413a70:	outs   dx,DWORD PTR ds:[esi]
  413a71:	xor    ah,BYTE PTR [ecx-0xd99f9b2]
  413a77:	mov    dh,0xa1
  413a79:	(bad)  
  413a7a:	sub    DWORD PTR [edx-0x59],esp
  413a7d:	sti    
  413a7e:	enter  0x84d1,0x9c
  413a82:	imul   eax,DWORD PTR ds:[eax+0x2b],0x61
  413a87:	and    esp,DWORD PTR [ecx]
  413a89:	outs   dx,BYTE PTR ds:[esi]
  413a8a:	mov    ecx,0x57b413
  413a8f:	sub    al,0x65
  413a91:	xor    esp,DWORD PTR [esi-0x4d4e53a8]
  413a97:	out    dx,eax
  413a98:	lahf   
  413a99:	cli    
  413a9a:	push   eax
  413a9b:	fs or  ebp,ecx
  413a9e:	cmc    
  413a9f:	icebp  
  413aa0:	adc    BYTE PTR [eax-0x34],0x57
  413aa4:	mov    bl,0x52
  413aa6:	add    dh,BYTE PTR [edx]
  413aa8:	shl    BYTE PTR [ebx],0x88
  413aab:	push   es
  413aac:	push   0xba9b3523
  413ab1:	fmul   QWORD PTR [ecx]
  413ab3:	out    0x57,eax
  413ab5:	sub    DWORD PTR [eax+0x15],ebx
  413ab8:	daa    
  413ab9:	mov    esp,0x9a39843d
  413abe:	mov    ecx,0x750e3ae1
  413ac3:	mov    BYTE PTR [esi-0x245895d1],al
  413ac9:	xor    dh,BYTE PTR [esi+0x19]
  413acc:	cli    
  413acd:	outs   dx,BYTE PTR ds:[esi]
  413ace:	fst    QWORD PTR [edx]
  413ad0:	pop    esi
  413ad1:	sub    al,0x34
  413ad3:	rcr    ecx,cl
  413ad5:	pop    ds
  413ad6:	fsubr  st,st(1)
  413ad8:	jmp    0x413b4a
  413ada:	shl    BYTE PTR [eax-0x10d4334a],0x89
  413ae1:	sub    cl,BYTE PTR [edi]
  413ae3:	std    
  413ae4:	cmp    BYTE PTR [edi],ch
  413ae6:	pop    edx
  413ae7:	lahf   
  413ae8:	test   DWORD PTR ss:[esi+ecx*4+0x6a],ebp
  413aed:	lock (bad) 
  413af0:	sbb    al,0x6a
  413af3:	shl    BYTE PTR [esi+ebx*2-0x1],1
  413af7:	dec    edi
  413af8:	xchg   ebp,eax
  413af9:	outs   dx,BYTE PTR ds:[esi]
  413afa:	aaa    
  413afb:	imul   edx,DWORD PTR [esi],0x6a6a1be4
  413b01:	bound  edx,QWORD PTR [eax+0x10]
  413b04:	jge    0x413ac4
  413b06:	and    esp,DWORD PTR [ebp+0x6a]
  413b09:	xor    al,0xdf
  413b0b:	xchg   ebx,eax
  413b0c:	dec    BYTE PTR [esi+0x4e]
  413b0f:	push   ebx
  413b10:	inc    eax
  413b11:	pop    esi
  413b12:	sub    cl,BYTE PTR [esi+0x2d200a6a]
  413b18:	cmp    al,0x64
  413b1a:	in     al,dx
  413b1b:	pop    ecx
  413b1c:	lahf   
  413b1d:	out    0xf6,al
  413b1f:	mov    esi,0xb3df2a84
  413b24:	add    al,0xbb
  413b26:	arpl   WORD PTR [esi-0x33],ax
  413b29:	cmp    DWORD PTR [edx-0x3b],esi
  413b2c:	mov    ecx,0x22ad21e1
  413b31:	int3   
  413b32:	sub    ecx,ebx
  413b34:	dec    esi
  413b35:	add    eax,0x6fef7140
  413b3a:	js     0x413baf
  413b3c:	xlat   BYTE PTR ds:[ebx]
  413b3d:	xlat   BYTE PTR ds:[ebx]
  413b3e:	sub    ch,BYTE PTR [ebx*1+0x3ed12d96]
  413b45:	add    ch,BYTE PTR [ebx+0x7d]
  413b48:	push   ecx
  413b49:	xchg   ah,dh
  413b4b:	cli    
  413b4c:	pop    eax
  413b4d:	mov    ebp,0xf205e71f
  413b52:	rcl    cl,1
  413b54:	ds pop edi
  413b56:	jnp    0x413b04
  413b58:	(bad)  
  413b59:	sti    
  413b5a:	push   ebp
  413b5b:	in     al,dx
  413b5c:	inc    eax
  413b5d:	adc    eax,0x23a57de5
  413b62:	test   cl,0xb7
  413b65:	ds inc edi
  413b67:	ret    0x420
  413b6a:	sbb    esp,esi
  413b6c:	pushf  
  413b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b6e:	cwde   
  413b6f:	stc    
  413b70:	inc    ebp
  413b71:	mov    BYTE PTR [edx+0x67],al
  413b74:	jo     0x413b2c
  413b76:	and    eax,0xf07ec4d0
  413b7b:	mov    ah,0xe1
  413b7d:	fiadd  WORD PTR [ebx+0xebf37bc]
  413b83:	outs   dx,DWORD PTR ds:[esi]
  413b84:	mov    al,0x35
  413b86:	cmp    bh,ah
  413b88:	adc    ecx,DWORD PTR [ebp-0x1831ee04]
  413b8e:	popf   
  413b8f:	xchg   esi,eax
  413b90:	test   al,0xdf
  413b92:	div    DWORD PTR [ecx+0x130f8534]
  413b98:	(bad)  
  413b99:	dec    esi
  413b9a:	inc    eax
  413b9b:	sub    DWORD PTR [ebx+ebx*4+0x2334e256],0xb6d1a153
  413ba6:	sahf   
  413ba7:	jo     0x413c24
  413ba9:	cdq    
  413baa:	imul   eax,DWORD PTR [edx],0xfffffff0
  413bad:	push   ebp
  413bae:	cli    
  413baf:	test   eax,0x3e0b8a73
  413bb4:	cmp    ch,dl
  413bb6:	aas    
  413bb7:	pusha  
  413bb8:	xor    DWORD PTR [eax],ebp
  413bba:	outs   dx,BYTE PTR ds:[esi]
  413bbb:	adc    al,0x91
  413bbd:	jno    0x413b76
  413bbf:	call   0x9084b049
  413bc4:	call   0x771869cf
  413bc9:	inc    edx
  413bca:	fisttp QWORD PTR [ecx+0x6501abe0]
  413bd0:	enter  0x4463,0xd9
  413bd4:	lahf   
  413bd5:	fucomp st(3)
  413bd7:	call   edi
  413bd9:	lds    esi,FWORD PTR ds:0xfd2b70b1
  413bdf:	jno    0x413b7b
  413be1:	stos   BYTE PTR es:[edi],al
  413be2:	mov    bl,0x8b
  413be4:	dec    ebp
  413be5:	clc    
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	cli    
  413d45:	adc    BYTE PTR [eax],dl
  413d47:	or     eax,0x4f7e9cab
  413d4c:	xchg   ebx,eax
  413d4d:	add    BYTE PTR [ebp+ebp*1+0x5b],bh
  413d51:	call   0x42d683
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
