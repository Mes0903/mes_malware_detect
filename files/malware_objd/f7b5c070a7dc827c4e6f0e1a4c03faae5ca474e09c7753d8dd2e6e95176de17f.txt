
f7b5c070a7dc827c4e6f0e1a4c03faae5ca474e09c7753d8dd2e6e95176de17f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	mov    bh,0x60
  4010fc:	retf   
  4010fd:	jae    0x4010be
  4010ff:	mov    bl,0x22
  401101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401102:	adc    esi,ecx
  401104:	rcr    BYTE PTR [ebx+0x26c422a1],0x5a
  40110b:	icebp  
  40110c:	out    dx,eax
  40110d:	push   edx
  40110e:	sti    
  40110f:	or     DWORD PTR [esi],0x1a3af13
  401115:	xchg   esp,eax
  401116:	call   0x195a:0xcbe85844
  40111d:	jnp    0x4010d5
  40111f:	(bad)  
  401120:	mov    ds:0xdea46ac,eax
  401125:	lea    esi,[edi+0x79]
  401128:	xchg   edi,eax
  401129:	aas    
  40112a:	sub    DWORD PTR [ebx],0x71378a3c
  401130:	and    edx,DWORD PTR [bp+0x73]
  401134:	mov    ah,0xe8
  401136:	sbb    BYTE PTR [ebx],0xc9
  401139:	call   0xcd74:0xf32faaed
  401140:	das    
  401141:	out    0xf1,eax
  401143:	pop    esp
  401144:	push   cs
  401145:	outs   dx,DWORD PTR ds:[esi]
  401146:	test   esi,0x65134eef
  40114c:	sub    bl,0xf0
  40114f:	fstp   DWORD PTR [ebx+0x39]
  401152:	push   edx
  401153:	xchg   ecx,eax
  401154:	xchg   ebx,eax
  401155:	in     al,0xb2
  401157:	mov    ecx,0x735659d4
  40115c:	inc    ebp
  40115d:	push   esi
  40115e:	rol    DWORD PTR [ebx+0x47],1
  401161:	mov    al,ds:0x6005bef7
  401166:	sti    
  401167:	daa    
  401168:	lock xchg edx,eax
  40116a:	(bad)  
  40116d:	mov    ?,edi
  40116f:	pop    ss
  401170:	or     al,0x46
  401172:	ret    0x5806
  401175:	inc    ebx
  401176:	loop   0x401178
  401178:	adc    ebx,DWORD PTR [esi+0x7a]
  40117b:	and    BYTE PTR [ebx-0x40],dl
  40117e:	and    ebx,DWORD PTR [edi+eiz*2]
  401181:	xchg   edi,eax
  401182:	lea    ecx,[ebx-0x6b]
  401185:	jmp    0xb750dfd6
  40118a:	adc    DWORD PTR es:[edi+edi*2],ecx
  40118e:	popa   
  40118f:	mov    BYTE PTR [esi+0xb],0xea
  401193:	add    eax,0x9430b69e
  401198:	test   al,0x9f
  40119a:	cmp    ebx,ebp
  40119c:	pop    ebp
  40119d:	fmul   st,st(5)
  40119f:	mov    ch,0xa7
  4011a1:	test   eax,0x93a6716d
  4011a6:	addr16 inc ebp
  4011a8:	adc    BYTE PTR [ebp+edx*1+0x296b8870],0x62
  4011b0:	push   edi
  4011b1:	test   al,0x55
  4011b3:	xchg   edx,ebx
  4011b5:	mov    ebp,0xecd1579b
  4011ba:	out    dx,eax
  4011bb:	ins    BYTE PTR es:[edi],dx
  4011bc:	xchg   esp,eax
  4011bd:	xor    DWORD PTR [edi-0x6e024736],esp
  4011c3:	inc    eax
  4011c4:	iret   
  4011c5:	mov    ch,0x75
  4011c7:	push   edx
  4011c8:	repnz mov ah,0x68
  4011cb:	jmp    FWORD PTR [eax+esi*8-0x553364d9]
  4011d2:	or     DWORD PTR [edx-0x6c7abe7c],0xffffffa3
  4011d9:	push   ebp
  4011da:	(bad)  
  4011db:	std    
  4011dc:	xchg   esi,eax
  4011dd:	lods   al,BYTE PTR ds:[esi]
  4011de:	and    ebp,DWORD PTR [edi-0x2017da6]
  4011e4:	ret    
  4011e5:	mov    eax,ds:0xb1d8c853
  4011ea:	xor    cl,dl
  4011ec:	sub    eax,0xba11b8b9
  4011f1:	jns    0x4011bc
  4011f3:	arpl   WORD PTR [eax],ax
  4011f5:	inc    edx
  4011f6:	and    BYTE PTR [ebx-0x27],dl
  4011f9:	bound  edx,QWORD PTR [edx-0x22]
  4011fc:	clc    
  4011fd:	jl     0x4011db
  4011ff:	cli    
  401200:	sbb    DWORD PTR [esi-0x49fdc0b7],eax
  401206:	iret   
  401207:	int    0x83
  401209:	mov    eax,0xb7681c93
  40120e:	ins    DWORD PTR es:[edi],dx
  40120f:	pushf  
  401210:	or     BYTE PTR [edx],bh
  401212:	je     0x4011cb
  401214:	push   esi
  401215:	inc    ebx
  401216:	and    ebx,edi
  401218:	pushf  
  401219:	jge    0x4011b7
  40121b:	mov    BYTE PTR [ebp+0x98381b2],dh
  401221:	xor    ebx,DWORD PTR [esi]
  401223:	sbb    eax,0x5e5860b9
  401228:	lahf   
  401229:	mov    WORD PTR [eax+0x2e],es
  40122c:	mov    bl,0xb9
  40122e:	xchg   ebx,eax
  40122f:	ins    DWORD PTR es:[edi],dx
  401230:	mov    edx,0x38eb3e05
  401235:	hlt    
  401236:	bound  edi,QWORD PTR [esi+0x59]
  401239:	clc    
  40123a:	int3   
  40123b:	jbe    0x401246
  40123d:	fiadd  DWORD PTR ds:0x4b698f73
  401243:	into   
  401244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401245:	in     al,0xe3
  401247:	inc    edx
  401248:	dec    ecx
  401249:	mov    ch,0xdc
  40124b:	leave  
  40124c:	cmp    eax,0xcdb59158
  401251:	jp     0x401221
  401253:	mov    ebp,0xb7d59bcb
  401258:	shl    BYTE PTR [ecx+esi*4-0x64293d71],cl
  40125f:	dec    eax
  401260:	(bad)  
  401261:	pop    ebx
  401262:	stos   BYTE PTR es:[edi],al
  401263:	mov    eax,ss:0xee0f5f21
  401269:	mov    ebx,0x492e95cc
  40126e:	aaa    
  40126f:	pusha  
  401270:	pop    esi
  401271:	test   al,0xd6
  401273:	out    dx,al
  401274:	pusha  
  401275:	test   DWORD PTR [edi+0x6fb72e53],esp
  40127b:	xchg   edi,eax
  40127c:	push   esi
  40127d:	push   esi
  40127e:	(bad)  
  40127f:	fldenv [ecx]
  401281:	adc    eax,0x369cc5b0
  401286:	sbb    bl,BYTE PTR [edi-0x2c]
  401289:	sahf   
  40128a:	sbb    al,0x48
  40128c:	xchg   DWORD PTR [eax],edx
  40128e:	pushf  
  40128f:	dec    ebp
  401290:	jns    0x4012d8
  401292:	cmp    DWORD PTR [edx+0x55],ebp
  401295:	push   edx
  401296:	cmp    DWORD PTR [ebp-0x66b1b336],ebp
  40129c:	imul   DWORD PTR [ebx+0x2a]
  40129f:	mov    ecx,0x29e459e0
  4012a4:	fxch   st(6)
  4012a6:	pushf  
  4012a7:	pusha  
  4012a8:	js     0x4012b3
  4012aa:	ret    
  4012ab:	pusha  
  4012ac:	mov    BYTE PTR [esi-0x1317cdcc],dh
  4012b2:	leave  
  4012b3:	sub    BYTE PTR [edx+0x79],0x2a
  4012b7:	add    al,0xaf
  4012b9:	cmp    cl,BYTE PTR [ebx]
  4012bb:	pop    edx
  4012bc:	test   BYTE PTR [ebx+0xa5f7ca5],ch
  4012c2:	sub    BYTE PTR [edx],dh
  4012c4:	in     eax,dx
  4012c5:	int3   
  4012c6:	and    esi,DWORD PTR [ecx]
  4012c8:	cmp    DWORD PTR [esi],eax
  4012ca:	jmp    0x2c4e:0x4630c190
  4012d1:	aas    
  4012d2:	dec    edx
  4012d3:	call   0x4f94:0xfbf75f66
  4012da:	enter  0x8071,0xa3
  4012de:	adc    eax,DWORD PTR [ebp-0x5e]
  4012e1:	mov    bl,0xa9
  4012e3:	into   
  4012e4:	loope  0x40129f
  4012e6:	xor    ebx,eax
  4012e8:	dec    ebp
  4012e9:	push   cs
  4012ea:	daa    
  4012eb:	jnp    0x4012f6
  4012ed:	cmp    eax,0x351a0a25
  4012f2:	lods   al,BYTE PTR ds:[esi]
  4012f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012f4:	xchg   BYTE PTR [ebx-0x3582eb78],cl
  4012fa:	das    
  4012fb:	mov    cl,0xc1
  4012fd:	pop    ds
  4012fe:	mov    edi,0xabd33f7b
  401303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401304:	push   edx
  401305:	(bad)  
  401306:	mov    ds:0x1a4b0c99,al
  40130b:	xor    eax,DWORD PTR [edx]
  40130d:	into   
  40130e:	in     al,dx
  40130f:	push   ebp
  401310:	aam    0x3b
  401312:	sub    ebx,DWORD PTR [ebx]
  401314:	aam    0x3
  401316:	or     cl,BYTE PTR [edx-0x103332b6]
  40131c:	(bad)  
  40131d:	loope  0x401339
  40131f:	gs nop
  401321:	xchg   esi,eax
  401322:	or     eax,DWORD PTR [edi+0x4ff7d84b]
  401328:	sbb    cl,BYTE PTR [esi+0x40]
  40132b:	outs   dx,BYTE PTR ds:[esi]
  40132c:	jo     0x401356
  40132e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40132f:	test   eax,0xe49dc2b0
  401334:	and    ecx,ecx
  401336:	imul   esp
  401338:	push   0xffffff82
  40133a:	pop    ss
  40133b:	xor    edx,DWORD PTR [esi]
  40133d:	in     al,0xe2
  40133f:	add    bh,BYTE PTR [edx]
  401341:	arpl   WORD PTR [ebp+ebx*4+0x23],dx
  401345:	adc    al,0x1c
  401347:	cmp    eax,0x352829b1
  40134c:	leave  
  40134d:	push   edi
  40134e:	(bad)  
  40134f:	test   al,0x78
  401351:	int3   
  401352:	pop    es
  401353:	rcl    BYTE PTR [eax+0x5b],0xe1
  401357:	adc    al,0xb
  401359:	adc    DWORD PTR [edx+0xf],edi
  40135c:	dec    edx
  40135d:	sbb    BYTE PTR [ecx+0x5143918b],ch
  401363:	sar    DWORD PTR [eax+0x9],0xd0
  401367:	mov    ?,eax
  401369:	mov    bl,0x12
  40136c:	cmp    eax,0x605629f7
  401371:	adc    DWORD PTR ds:0x8ea691c9,esp
  401377:	inc    esp
  401378:	push   edx
  401379:	xor    esp,ebx
  40137b:	jecxz  0x401379
  40137d:	(bad)  
  40137e:	stos   DWORD PTR es:[edi],eax
  40137f:	mov    eax,ds:0x978672cd
  401384:	jne    0x401393
  401386:	fldenv ds:0xc84d1348
  40138c:	inc    edx
  40138d:	sub    esp,DWORD PTR [eax]
  40138f:	call   0xceb5944e
  401394:	xchg   ecx,eax
  401395:	sub    edx,eax
  401397:	mov    ?,WORD PTR [eax+ecx*1-0x16]
  40139b:	mov    cl,0xc5
  40139d:	inc    ebx
  40139e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40139f:	dec    esp
  4013a0:	xor    DWORD PTR [ecx-0x43],edi
  4013a3:	scas   al,BYTE PTR es:[edi]
  4013a4:	inc    esp
  4013a5:	pop    ebp
  4013a6:	fld    QWORD PTR [edi+0x30]
  4013a9:	mov    dh,0xaf
  4013ab:	add    al,0xf9
  4013ad:	adc    BYTE PTR [ecx],dl
  4013af:	cmp    BYTE PTR [ebp+0x3f62257c],dh
  4013b5:	push   es
  4013b6:	test   DWORD PTR [edx],esi
  4013b8:	and    BYTE PTR [eax*8+0x7ec4d804],cl
  4013bf:	mov    esp,0x95cadfac
  4013c4:	ret    0x5514
  4013c7:	das    
  4013c8:	push   esp
  4013c9:	adc    eax,0xfc8b21ed
  4013ce:	dec    ebx
  4013cf:	dec    ecx
  4013d0:	adc    dl,al
  4013d2:	pusha  
  4013d3:	sbb    bl,BYTE PTR [edi]
  4013d5:	add    eax,0xfdfe3d5
  4013da:	lahf   
  4013db:	xor    al,0xb7
  4013dd:	scas   eax,DWORD PTR es:[edi]
  4013de:	push   esp
  4013df:	mov    ebp,0xb58eaff6
  4013e4:	imul   ebx,ecx,0x1e
  4013e7:	jmp    0x8a27:0xc30058e3
  4013ee:	add    eax,0x6014ccb1
  4013f3:	popf   
  4013f4:	and    edi,ebx
  4013f6:	or     DWORD PTR [esi-0x3cb3a2aa],ecx
  4013fc:	dec    esi
  4013fd:	xchg   ebp,eax
  4013fe:	into   
  4013ff:	add    al,BYTE PTR [eax-0x3]
  401402:	fsubr  DWORD PTR [edx+0x7d]
  401405:	xchg   ebp,eax
  401406:	idiv   BYTE PTR [eax-0x303dcf77]
  40140c:	xor    DWORD PTR [ebx-0x78b092bc],esp
  401412:	mov    DWORD PTR [edi+0x2f],edi
  401415:	and    eax,0x7e086f0b
  40141a:	stos   DWORD PTR es:[edi],eax
  40141b:	or     DWORD PTR [esi-0x2e04441],esp
  401421:	int    0x1a
  401423:	add    BYTE PTR [ebp+ebp*4-0x6f],dh
  401427:	fs jbe 0x40146e
  40142a:	aam    0x51
  40142c:	repz popf 
  40142e:	dec    esp
  40142f:	cmp    al,0xe0
  401431:	retf   0xcc48
  401434:	fsub   DWORD PTR [edi-0x19383bee]
  40143a:	leave  
  40143b:	jno    0x4013d1
  40143d:	mov    bh,0x67
  40143f:	inc    eax
  401440:	shr    DWORD PTR [edx+esi*4],0xdc
  401444:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401446:	or     edi,DWORD PTR [edi+eax*4]
  401449:	sub    ch,bh
  40144b:	into   
  40144c:	cdq    
  40144d:	dec    ebx
  40144e:	and    al,dl
  401450:	das    
  401451:	in     al,0xc3
  401453:	fmul   DWORD PTR ds:[eax+eiz*8+0x44]
  401458:	sbb    eax,0x3062ac8d
  40145d:	lahf   
  40145e:	mov    ch,dl
  401460:	push   ebp
  401461:	fsub   QWORD PTR [ebx]
  401463:	inc    esp
  401464:	cdq    
  401465:	add    DWORD PTR [edi-0x715c85e5],ecx
  40146b:	dec    edx
  40146c:	les    ebp,FWORD PTR [ebp+0x75]
  40146f:	lods   eax,DWORD PTR ds:[esi]
  401470:	arpl   WORD PTR [ebx],sp
  401472:	icebp  
  401473:	aad    0x97
  401475:	mov    esi,DWORD PTR [edx-0x59]
  401478:	push   cs
  401479:	push   esi
  40147a:	dec    ebx
  40147b:	jmp    0xfcdeee1b
  401480:	aad    0x64
  401482:	push   ecx
  401483:	pushw  0x39
  401486:	test   al,bh
  401488:	out    dx,eax
  401489:	xlat   BYTE PTR ds:[ebx]
  40148a:	fwait
  40148b:	imul   esp,DWORD PTR [ecx+0x5d3f41f5],0xde52cb4d
  401495:	call   0x4b1c:0xa4d23467
  40149c:	test   BYTE PTR [esi-0x18],0x30
  4014a0:	rsm    
  4014a2:	or     al,0x60
  4014a4:	or     al,0xea
  4014a6:	(bad)  
  4014a8:	cmp    al,0xd1
  4014aa:	xchg   edi,eax
  4014ab:	mov    bl,0x2d
  4014ad:	and    dh,0x75
  4014b0:	stc    
  4014b1:	mov    al,cl
  4014b3:	loopne 0x4014da
  4014b5:	dec    ecx
  4014b6:	xor    ebx,ecx
  4014b8:	adc    esi,ecx
  4014ba:	inc    ebp
  4014bb:	test   DWORD PTR [esi+0x280caeaf],ecx
  4014c1:	inc    eax
  4014c2:	mov    al,0xd7
  4014c4:	add    al,BYTE PTR [edx-0x5]
  4014c7:	gs popf 
  4014c9:	inc    ecx
  4014ca:	rcr    esi,1
  4014cc:	ins    BYTE PTR es:[edi],dx
  4014cd:	add    eax,0xafc9fa4f
  4014d2:	xchg   DWORD PTR [ebx+0x7d],esi
  4014d5:	mov    bh,0x8c
  4014d7:	arpl   WORD PTR [ebx],di
  4014d9:	mov    ss,WORD PTR [ecx+0x4d]
  4014dc:	retf   0x6d1b
  4014df:	test   al,0x91
  4014e1:	icebp  
  4014e2:	pop    ss
  4014e3:	daa    
  4014e4:	mov    edx,0xdc2ba113
  4014ea:	jle    0x4014e0
  4014ec:	add    dl,bh
  4014ee:	in     eax,dx
  4014ef:	aas    
  4014f0:	xchg   ebp,eax
  4014f1:	or     cl,al
  4014f3:	mov    edi,0x72c93f80
  4014f8:	aas    
  4014f9:	or     al,0x68
  4014fb:	imul   edx,eax,0xffffffb7
  4014fe:	or     BYTE PTR [edx-0x3c],bl
  401501:	std    
  401502:	repnz fs push ds
  401505:	popf   
  401506:	or     bl,dh
  401508:	(bad)  
  401509:	or     al,0xbe
  40150b:	xchg   ecx,eax
  40150c:	mov    eax,0xb174504a
  401511:	mov    esp,0xb78006ea
  401516:	(bad)  [ecx]
  401518:	pop    esp
  401519:	jg     0x4014ba
  40151b:	stos   BYTE PTR es:[edi],al
  40151c:	inc    ebx
  40151d:	push   esp
  40151e:	mov    bh,0x5c
  401520:	fild   QWORD PTR [edx]
  401522:	sub    ebx,0x32
  401525:	inc    edi
  401526:	xchg   edi,eax
  401527:	(bad)  
  401528:	(bad)  
  401529:	into   
  40152a:	add    eax,0x111bb3dd
  40152f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401530:	jmp    0x401522
  401532:	sub    BYTE PTR ds:[ebx-0x35],0xf7
  401537:	xor    bh,al
  401539:	cmp    ebp,DWORD PTR [ebp+esi*4-0x44f170d5]
  401540:	or     eax,DWORD PTR [eax+0x4824b554]
  401546:	jge    0x40153b
  401548:	mov    ebx,0xe62436e6
  40154d:	jge    0x401598
  40154f:	stos   BYTE PTR es:[edi],al
  401550:	retf   0x3176
  401553:	js     0x401545
  401555:	push   esp
  401556:	sbb    eax,0x61046a9
  40155b:	dec    esp
  40155c:	adc    cl,BYTE PTR [eax]
  40155e:	jle    0x401595
  401560:	sub    dh,dl
  401562:	lds    ebp,FWORD PTR [eax+0x8]
  401565:	nop
  401566:	in     al,dx
  401567:	std    
  401568:	jnp    0x4015c6
  40156a:	xor    DWORD PTR [ebp-0x40],edx
  40156d:	lahf   
  40156e:	add    esp,DWORD PTR [edx+0x59]
  401571:	mov    ?,WORD PTR [esi+0x665b8bed]
  401577:	cwde   
  401578:	dec    esi
  401579:	adc    edx,edx
  40157b:	mov    ?,ecx
  40157d:	lock popf 
  40157f:	inc    edx
  401580:	xor    eax,0x509f11a3
  401585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401586:	clc    
  401587:	push   es
  401588:	jecxz  0x4015e8
  40158a:	retf   0xc462
  40158d:	es jle 0x401595
  401590:	sar    BYTE PTR [edi+0x3a],1
  401593:	sar    BYTE PTR [ecx-0x56178117],1
  401599:	fsubrp st(2),st
  40159b:	jl     0x4015c1
  40159d:	leave  
  40159e:	scas   al,BYTE PTR es:[edi]
  40159f:	loope  0x40154d
  4015a1:	mov    ds:0x5b6374ce,eax
  4015a6:	aam    0xf7
  4015a8:	sbb    bh,bl
  4015aa:	cmp    al,BYTE PTR [edx+0x1b75e486]
  4015b0:	mov    DWORD PTR [ecx-0x33f9b9a7],esi
  4015b6:	adc    eax,0xc4e6d1c1
  4015bb:	je     0x4015e3
  4015bd:	mov    bh,0x65
  4015bf:	pop    esp
  4015c0:	ins    BYTE PTR es:[edi],dx
  4015c1:	test   eax,0x5d6624cb
  4015c6:	jecxz  0x40159b
  4015c8:	iret   
  4015c9:	loope  0x401570
  4015cb:	or     DWORD PTR [ecx+edx*1+0x14],0x42
  4015d0:	clflush BYTE PTR [ecx]
  4015d3:	out    0x2c,eax
  4015d5:	pop    ss
  4015d6:	fcomp  DWORD PTR [edi]
  4015d8:	cmp    BYTE PTR [ecx-0x10],bl
  4015db:	lods   al,BYTE PTR ds:[esi]
  4015dc:	jl     0x401630
  4015de:	mov    eax,fs:0x8fbbba26
  4015e4:	arpl   WORD PTR [eax],bp
  4015e6:	push   ds
  4015e7:	pop    eax
  4015e8:	pusha  
  4015e9:	add    bh,al
  4015eb:	sbb    DWORD PTR [ecx-0x1e9c0cfd],ebp
  4015f1:	je     0x4015ab
  4015f3:	adc    edx,DWORD PTR [esi+ebx*8-0x106796b9]
  4015fa:	pcmpeqw mm2,QWORD PTR [ebx+eax*1+0x1f9eb493]
  401602:	scas   al,BYTE PTR es:[edi]
  401603:	pusha  
  401604:	cmp    eax,0x6047c7b2
  401609:	lea    ebp,[ebp-0x63]
  40160c:	fs out dx,al
  40160e:	clc    
  40160f:	dec    eax
  401610:	jg     0x401686
  401612:	jae    0x40161d
  401614:	and    BYTE PTR [edx],cl
  401616:	hlt    
  401617:	pop    edi
  401618:	pop    es
  401619:	retf   
  40161a:	xchg   BYTE PTR gs:[edx+0x1e],al
  40161e:	push   edx
  40161f:	enter  0x7768,0x4
  401623:	sbb    eax,0x2f7b5f25
  401628:	and    esi,esp
  40162a:	push   ss
  40162b:	push   0xc
  40162d:	fabs   
  40162f:	cmp    ah,bl
  401631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401632:	cmp    al,BYTE PTR [edx+0x17]
  401635:	pop    ss
  401636:	ret    0x12f7
  401639:	jge    0x401664
  40163b:	and    BYTE PTR [edx+0x19],dl
  40163e:	xchg   ecx,eax
  40163f:	(bad)  
  401640:	sbb    esp,DWORD PTR [ecx-0x7b97b77a]
  401646:	pop    ebp
  401647:	test   al,0xa7
  401649:	pop    edx
  40164a:	xlat   BYTE PTR ds:[ebx]
  40164b:	shl    BYTE PTR [eax-0x3081f7b8],0xee
  401652:	mov    ds:0x99560bb6,eax
  401657:	aam    0xf0
  401659:	call   0xb237:0xe61c9356
  401660:	dec    ebx
  401661:	or     ch,BYTE PTR cs:[ebx+0x31]
  401665:	aam    0x42
  401667:	adc    ebx,edx
  401669:	popa   
  40166a:	fstp   st(2)
  40166c:	sub    bh,dl
  40166e:	lock inc edx
  401670:	mov    dh,BYTE PTR [edx+0x15]
  401673:	dec    eax
  401674:	mov    BYTE PTR [eax-0x270e8313],bl
  40167a:	cld    
  40167b:	push   ebp
  40167c:	arpl   WORD PTR [eax-0x2ff7bd09],bp
  401682:	push   es
  401683:	sub    ebp,DWORD PTR [edx+0x220fd25b]
  401689:	mov    ds:0x1bb4da34,eax
  40168e:	sub    ch,bl
  401690:	in     al,0x70
  401692:	dec    ecx
  401693:	jmp    0xbe1e:0xd424e366
  40169a:	iret   
  40169b:	xor    al,0xb8
  40169d:	imul   edx,DWORD PTR [edi],0x3565bbd1
  4016a3:	mov    al,ds:0x6a5692d1
  4016a8:	rep lods al,BYTE PTR ds:[esi]
  4016aa:	and    ecx,DWORD PTR ds:[edx-0x2e]
  4016ae:	sub    eax,0x5471f7f9
  4016b3:	push   ss
  4016b4:	jae    0x4016b2
  4016b6:	sbb    eax,0xdd1007fa
  4016bb:	cdq    
  4016bc:	mov    WORD PTR [ebx],ds
  4016be:	outs   dx,DWORD PTR ds:[esi]
  4016bf:	(bad)  
  4016c0:	mov    eax,ds:0xf5667059
  4016c5:	xchg   ecx,eax
  4016c6:	inc    eax
  4016c7:	sub    eax,0x601bf1bf
  4016cc:	push   eax
  4016cd:	pusha  
  4016ce:	pop    edi
  4016cf:	ins    BYTE PTR es:[edi],dx
  4016d0:	xchg   esi,eax
  4016d1:	xchg   edx,ebx
  4016d3:	push   0xafbeeaba
  4016d8:	xchg   edi,eax
  4016d9:	loope  0x401714
  4016db:	(bad)  
  4016dc:	icebp  
  4016dd:	into   
  4016de:	xchg   esp,eax
  4016df:	pop    edx
  4016e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016e1:	xchg   ebp,eax
  4016e2:	xor    BYTE PTR [edx],bl
  4016e4:	jnp    0x4016ab
  4016e6:	(bad)  
  4016e8:	outs   dx,DWORD PTR ds:[esi]
  4016e9:	or     al,0x4c
  4016eb:	xchg   ah,cl
  4016ed:	sub    DWORD PTR [edx-0x68],0x4a941dc1
  4016f4:	cmc    
  4016f5:	lea    eax,[ecx]
  4016f7:	xor    edi,DWORD PTR [eax+0x17bb79a5]
  4016fd:	out    0xdc,eax
  4016ff:	pop    esp
  401700:	out    0x6a,eax
  401702:	pop    ss
  401703:	xor    bl,bh
  401705:	push   esi
  401706:	mov    ds:0x6f9be835,al
  40170b:	in     al,dx
  40170c:	mov    cl,0xaf
  40170e:	inc    edx
  40170f:	lock repz or eax,0x4ef599f9
  401716:	ins    BYTE PTR es:[edi],dx
  401717:	imul   esp,esi,0x54
  40171a:	out    0x6,al
  40171c:	and    eax,DWORD PTR [esi+0x3a8eb699]
  401722:	sbb    al,0x48
  401724:	xchg   BYTE PTR [edi-0x15620ab3],ch
  40172a:	cmp    BYTE PTR [edx],ch
  40172c:	mov    ch,0xd7
  40172e:	or     bl,BYTE PTR [eax+0x46b357b5]
  401734:	mov    cl,0x77
  401736:	call   0xe69bbadf
  40173b:	and    BYTE PTR [esi],dl
  40173d:	or     eax,0x3cf1cfa1
  401742:	push   edi
  401743:	inc    esp
  401744:	jo     0x401748
  401746:	loope  0x401767
  401748:	retf   0x6e69
  40174b:	ds mov ecx,0x9ba30b23
  401751:	mov    eax,0xac981c01
  401756:	fimul  WORD PTR [esi]
  401758:	dec    esp
  401759:	xchg   esi,eax
  40175a:	jns    0x4016f2
  40175c:	xchg   DWORD PTR [edx+ecx*2-0x68653ac4],ebp
  401763:	in     eax,0xbf
  401765:	repz inc eax
  401767:	cmp    ebx,DWORD PTR ds:0x8313d167
  40176d:	inc    ebp
  40176e:	xchg   edi,eax
  40176f:	das    
  401770:	mov    cl,0x63
  401772:	mov    ebp,0x59a85fb0
  401777:	mov    esi,0x50d16962
  40177c:	or     bh,BYTE PTR [esi+0x24]
  40177f:	mov    ecx,0x3084b63c
  401784:	cwde   
  401785:	imul   edi,DWORD PTR [ebx+0x525278be],0xb10adeb7
  40178f:	mov    dh,0x53
  401791:	pushf  
  401792:	mov    cl,0x49
  401794:	and    al,0xa3
  401796:	stc    
  401797:	sub    BYTE PTR [edx],al
  401799:	mov    edi,0x801df101
  40179e:	mov    eax,ds:0xa7f35fb6
  4017a3:	push   es
  4017a4:	clc    
  4017a5:	ss ret 
  4017a7:	popa   
  4017a8:	rcl    DWORD PTR [edx],0x8c
  4017ab:	push   ecx
  4017ac:	shr    BYTE PTR [esi+0x67],1
  4017af:	inc    ebp
  4017b0:	or     eax,0xf14a0790
  4017b5:	jmp    0x8d95347
  4017ba:	xor    DWORD PTR [edi+0x75b32a4a],ecx
  4017c0:	(bad)  
  4017c1:	jo     0x40176a
  4017c3:	inc    esp
  4017c4:	call   0x5635:0x9a78f94f
  4017cb:	dec    ebx
  4017cc:	push   esi
  4017cd:	scas   al,BYTE PTR es:[edi]
  4017ce:	jo     0x401751
  4017d0:	(bad)
  4017d3:	xor    esp,DWORD PTR [edx+0x4cd4197f]
  4017d9:	test   eax,0xbd649768
  4017de:	sbb    esp,DWORD PTR [eax+0x7f]
  4017e1:	inc    ebp
  4017e2:	retf   0xb0d8
  4017e5:	sti    
  4017e6:	iret   
  4017e7:	xchg   ebx,eax
  4017e8:	cmp    DWORD PTR [eax+0x2c6dacbe],ecx
  4017ee:	lds    eax,FWORD PTR [ebx]
  4017f0:	push   eax
  4017f1:	and    ecx,DWORD PTR [ebx+0x2e48760f]
  4017f7:	sub    cl,al
  4017f9:	cmp    DWORD PTR [ebx-0x73ff807b],esp
  4017ff:	pop    ecx
  401800:	sbb    DWORD PTR [ecx-0x21aa3236],esi
  401806:	test   eax,0x39c16f02
  40180b:	xchg   edx,eax
  40180c:	daa    
  40180d:	lock pop ds
  40180f:	out    0xe6,eax
  401811:	js     0x4017fe
  401813:	popf   
  401814:	cmp    edi,esi
  401816:	cmp    eax,0xd7a23d20
  40181b:	or     dh,BYTE PTR [eax]
  40181d:	cdq    
  40181e:	nop
  40181f:	sbb    dl,al
  401821:	scas   al,BYTE PTR es:[edi]
  401822:	into   
  401823:	mov    eax,0xa930c4af
  401828:	scas   eax,DWORD PTR es:[edi]
  401829:	mov    edi,0xec0f5518
  40182e:	mov    ds:0x5a897963,al
  401833:	lea    esi,[ecx-0x2e]
  401836:	(bad)  
  401837:	cld    
  401838:	ds int3 
  40183a:	stc    
  40183b:	xchg   ebp,ebx
  40183d:	xchg   edi,eax
  40183e:	in     al,0x86
  401840:	push   edx
  401841:	imul   ebp,DWORD PTR [ebp-0x11],0x6f
  401845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401846:	push   eax
  401847:	sub    bl,cl
  401849:	cld    
  40184a:	sbb    eax,0xe3460d23
  40184f:	call   0x8bb1:0xa10d420
  401856:	popa   
  401857:	dec    edi
  401858:	dec    esp
  401859:	jb     0x401881
  40185b:	pushf  
  40185c:	cmp    BYTE PTR [edi],ah
  40185e:	addr16 xchg ebp,edx
  401861:	ror    BYTE PTR [esi-0x72da667b],1
  401867:	xor    dl,BYTE PTR [esp+eiz*4]
  40186a:	aaa    
  40186b:	pop    eax
  40186c:	mov    edx,0xb2d33316
  401871:	retf   
  401872:	inc    ecx
  401873:	out    dx,al
  401874:	mov    dl,0x35
  401876:	sbb    esp,eax
  401878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401879:	mov    ebp,0x4a6d1534
  40187e:	das    
  40187f:	jo     0x4018da
  401881:	cmp    al,dl
  401883:	pop    ecx
  401884:	adc    eax,edi
  401886:	xchg   edx,eax
  401887:	mov    ecx,0x57f944e9
  40188c:	enter  0x3ec7,0x77
  401890:	xchg   esp,eax
  401891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401892:	mov    BYTE PTR [ebx],al
  401894:	test   eax,0xff44a03d
  401899:	jno    0x401888
  40189b:	int    0xc1
  40189d:	adc    cl,BYTE PTR [edx+0x287b07bf]
  4018a3:	(bad)  
  4018a4:	jg     0x4018ff
  4018a6:	rcr    DWORD PTR [eax+ebx*1-0x5c],1
  4018aa:	sar    DWORD PTR [esi],0x9d
  4018ad:	and    eax,0x9516eafe
  4018b2:	cmp    ebx,DWORD PTR [ecx+edi*1]
  4018b5:	cld    
  4018b6:	je     0x4018b6
  4018b8:	jbe    0x4018d2
  4018ba:	and    bh,dh
  4018bc:	test   eax,0x48921b43
  4018c1:	jmp    0x4018a5
  4018c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018c4:	add    al,0xb3
  4018c6:	aaa    
  4018c7:	push   es
  4018c8:	jmp    0xbd94ece6
  4018cd:	bound  edx,QWORD PTR [eax-0x71]
  4018d0:	cmp    al,0xc8
  4018d2:	jae    0x401857
  4018d4:	mov    ecx,0x2971a9d9
  4018d9:	cs popf 
  4018db:	repz pop es
  4018dd:	jecxz  0x401955
  4018df:	mov    WORD PTR [edi],ss
  4018e1:	or     eax,0x9840df7c
  4018e6:	cwde   
  4018e7:	jecxz  0x40193a
  4018e9:	daa    
  4018ea:	test   DWORD PTR [eax-0x5e],0x38505ee2
  4018f1:	rcl    BYTE PTR [esi-0x51a7084],0xf8
  4018f8:	push   ebx
  4018f9:	aaa    
  4018fa:	or     dh,BYTE PTR [ecx-0x4b]
  4018fd:	std    
  4018fe:	popa   
  4018ff:	xchg   DWORD PTR [edx-0x64],eax
  401902:	adc    ah,ch
  401904:	rcl    BYTE PTR [edx+ecx*4-0x9608a06],1
  40190b:	stos   BYTE PTR es:[edi],al
  40190c:	repnz xchg ebp,eax
  40190e:	in     al,dx
  40190f:	jnp    0x401892
  401911:	into   
  401912:	push   ss
  401913:	icebp  
  401914:	call   0x93b9586
  401919:	ja     0x401956
  40191b:	fcmovbe st,st(6)
  40191d:	mov    cl,0x2e
  40191f:	(bad)  
  401920:	lods   eax,DWORD PTR ds:[esi]
  401921:	imul   edx,DWORD PTR [esi],0x32
  401924:	push   ebx
  401925:	mov    ch,BYTE PTR [ecx-0x3e6f5e43]
  40192b:	push   ds
  40192c:	repnz int 0x0
  40192f:	jo     0x401927
  401931:	loopne 0x4019b2
  401933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401934:	push   edi
  401935:	pop    ebx
  401936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401937:	adc    ecx,DWORD PTR [ebp-0x2f]
  40193a:	and    eax,0x9caf875a
  40193f:	test   eax,0xebe168e3
  401944:	loope  0x401920
  401946:	add    BYTE PTR [ebx-0x1],bl
  401949:	mov    eax,0xb15bdd30
  40194e:	pop    bp
  401950:	fbld   TBYTE PTR [eax-0x3d]
  401953:	idiv   DWORD PTR [esi]
  401955:	sbb    al,0xec
  401957:	jle    0x4019a0
  401959:	dec    ebx
  40195a:	out    dx,al
  40195b:	or     eax,0x93804286
  401960:	ret    
  401961:	inc    esp
  401962:	or     esi,eax
  401964:	jnp    0x401998
  401966:	arpl   WORD PTR ds:0xec25023d,sp
  40196c:	dec    eax
  40196d:	and    al,0xcf
  40196f:	popa   
  401970:	sub    ecx,esi
  401972:	jle    0x401955
  401974:	inc    ebp
  401975:	sahf   
  401976:	nop
  401977:	adc    eax,0xe62fe024
  40197c:	ds or  ah,0x1f
  401980:	cmc    
  401981:	fisttp WORD PTR [edx]
  401983:	js     0x401926
  401985:	jg     0x401950
  401987:	mov    edi,0x529f8a58
  40198c:	mov    bh,0x29
  40198e:	mov    cs,ecx
  401990:	mov    cl,0xf6
  401992:	push   ebp
  401993:	jmp    0xfa39:0xadd2279f
  40199a:	jnp    0x401a05
  40199c:	clc    
  40199d:	push   edi
  40199e:	xchg   BYTE PTR [ecx+0x61eceee5],cl
  4019a4:	outs   dx,BYTE PTR ds:[esi]
  4019a5:	lea    esp,[edi-0x2a31818]
  4019ab:	test   eax,0x5e46c20a
  4019b0:	push   esp
  4019b1:	repnz dec eax
  4019b3:	addr16 pushf 
  4019b5:	int    0xdf
  4019b7:	cmp    edx,ecx
  4019b9:	pop    ds
  4019ba:	or     BYTE PTR es:[ecx-0x6c],dh
  4019be:	push   cs
  4019bf:	call   0xe5e43f42
  4019c4:	(bad)  
  4019c6:	push   eax
  4019c7:	inc    esp
  4019c8:	lahf   
  4019c9:	inc    eax
  4019ca:	mov    eax,ds:0xb0822f3d
  4019cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019d0:	aas    
  4019d1:	inc    ebx
  4019d2:	or     ah,BYTE PTR [ecx-0x72]
  4019d5:	add    al,0x61
  4019d7:	and    al,0xc5
  4019d9:	pop    esp
  4019da:	aam    0x80
  4019dc:	add    edi,DWORD PTR [ebx]
  4019de:	sti    
  4019df:	in     al,0x32
  4019e1:	lock sub eax,0x6c5e61a6
  4019e7:	shl    ch,cl
  4019e9:	inc    edx
  4019ea:	mov    dl,BYTE PTR [edx+0x2a130fe1]
  4019f0:	call   FWORD PTR [edx]
  4019f2:	aaa    
  4019f3:	pop    esp
  4019f4:	adc    BYTE PTR [esi+0x540af7da],0x7f
  4019fb:	(bad)  
  4019fc:	hlt    
  4019fd:	push   eax
  4019fe:	ins    DWORD PTR es:[edi],dx
  4019ff:	sub    ch,0x6f
  401a02:	add    al,0xdd
  401a04:	adc    eax,0xd12b83d9
  401a09:	retf   0x39d9
  401a0c:	(bad)  
  401a0d:	mov    bh,0x4
  401a0f:	xchg   ecx,eax
  401a10:	xchg   ecx,eax
  401a11:	mov    edx,0x109335cd
  401a16:	push   ebx
  401a17:	mov    ebp,edx
  401a19:	and    DWORD PTR [eax-0x9],0x30
  401a1d:	leave  
  401a1e:	mov    bl,0xe6
  401a20:	test   al,0x3f
  401a22:	cdq    
  401a23:	cmc    
  401a24:	clc    
  401a25:	hlt    
  401a26:	int3   
  401a27:	xor    edi,DWORD PTR ds:0x4702b6d1
  401a2d:	ret    0x3d4d
  401a30:	and    DWORD PTR [eax],0x733656fe
  401a36:	sub    DWORD PTR [ebx],ecx
  401a38:	mov    esp,0x8802d336
  401a3d:	push   0x1064c12e
  401a42:	rcr    BYTE PTR [eax+0x66bf1b19],cl
  401a48:	pop    ebx
  401a49:	dec    ecx
  401a4a:	mov    dh,BYTE PTR [ebx-0x109150fd]
  401a50:	outs   dx,BYTE PTR ds:[esi]
  401a51:	out    dx,eax
  401a52:	jae    0x401aaa
  401a54:	and    al,0x60
  401a56:	fdivr  DWORD PTR [edi]
  401a58:	and    ah,BYTE PTR [esi-0x13]
  401a5b:	xlat   BYTE PTR ds:[ebx]
  401a5c:	in     eax,dx
  401a5d:	jae    0x401a54
  401a5f:	in     al,0x38
  401a61:	(bad)  
  401a62:	push   cs
  401a63:	repz sbb edi,DWORD PTR [esi-0x5]
  401a67:	ret    0x51c8
  401a6a:	xchg   edi,eax
  401a6b:	sub    dl,BYTE PTR [edx+ebx*8+0x389f58e9]
  401a72:	retf   
  401a73:	dec    edx
  401a74:	dec    esp
  401a75:	in     eax,dx
  401a76:	rol    eax,cl
  401a78:	nop
  401a79:	jno    0x401a75
  401a7b:	test   BYTE PTR es:[ebp-0x19],bh
  401a7f:	aam    0x35
  401a81:	daa    
  401a82:	rol    BYTE PTR [ebp+0x39713f1d],0x88
  401a89:	pushf  
  401a8a:	or     al,0xd3
  401a8c:	mov    ?,WORD PTR [eax-0x6432bad1]
  401a92:	pop    ebx
  401a93:	adc    al,0xee
  401a95:	enter  0x5a9a,0xe3
  401a99:	ja     0x401af5
  401a9b:	fsub   QWORD PTR [ebx]
  401a9d:	je     0x401abf
  401a9f:	gs out dx,eax
  401aa1:	pop    ds
  401aa2:	mov    cl,0x85
  401aa4:	(bad)  
  401aa5:	cmp    al,0x3b
  401aa7:	popa   
  401aa8:	jmp    0x884e:0x4dc8a14f
  401aaf:	jp     0x401ade
  401ab1:	jp     0x401a70
  401ab3:	sub    DWORD PTR [esi-0x6b],esp
  401ab6:	sub    al,0xea
  401ab8:	jecxz  0x401b15
  401aba:	push   ebx
  401abb:	dec    eax
  401abc:	cmp    ebx,eax
  401abe:	add    esp,ebx
  401ac0:	cmp    eax,0xf64495f
  401ac5:	mov    bh,ch
  401ac7:	xchg   ecx,eax
  401ac8:	xchg   ecx,eax
  401ac9:	sub    BYTE PTR ds:0x59b64c84,ch
  401acf:	ins    BYTE PTR es:[edi],dx
  401ad0:	push   esp
  401ad1:	fwait
  401ad2:	xchg   edx,eax
  401ad3:	jbe    0x401aad
  401ad5:	sub    BYTE PTR [ebp-0x2ccf0ca8],bh
  401adb:	nop
  401adc:	fst    DWORD PTR [ebx+eax*8-0x5b3ebbfa]
  401ae3:	int3   
  401ae4:	js     0x401a7a
  401ae6:	push   ds
  401ae7:	xchg   edx,eax
  401ae8:	hlt    
  401ae9:	(bad)  
  401aea:	call   0x68fa:0x810c1ee2
  401af1:	stc    
  401af2:	fsubr  QWORD PTR [edx+0x749f0cd8]
  401af8:	popf   
  401af9:	pop    ecx
  401afa:	jl     0x401ada
  401afc:	in     al,dx
  401afd:	loop   0x401a88
  401aff:	retf   
  401b00:	fisubr DWORD PTR [eax+edx*2-0x5f]
  401b04:	dec    edx
  401b05:	mov    WORD PTR [edx],es
  401b07:	std    
  401b08:	push   0xc6ee3323
  401b0d:	xor    DWORD PTR [edx],ebx
  401b0f:	pop    ss
  401b10:	xchg   edx,eax
  401b11:	cli    
  401b12:	mov    al,ds:0xac66161
  401b17:	aam    0xbe
  401b19:	dec    eax
  401b1a:	sub    cl,BYTE PTR [eax+eax*8]
  401b1d:	add    esi,esp
  401b1f:	aaa    
  401b20:	loop   0x401b4b
  401b22:	sub    esi,ebx
  401b24:	or     edi,DWORD PTR [edx-0x72]
  401b27:	adc    ebp,ecx
  401b29:	stc    
  401b2a:	mov    cl,0x60
  401b2c:	mov    al,ds:0x95c164fc
  401b31:	test   eax,0xd4244375
  401b36:	retf   
  401b37:	hlt    
  401b38:	retf   0x740d
  401b3b:	hlt    
  401b3c:	jo     0x401bb0
  401b3e:	fistp  DWORD PTR [ecx+0x7c]
  401b41:	nop
  401b42:	jb     0x401b38
  401b44:	mov    BYTE PTR [ebp+0x5a],dl
  401b47:	dec    edx
  401b48:	push   edx
  401b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b4a:	add    al,0xcb
  401b4c:	dec    esi
  401b4d:	or     BYTE PTR [ebp+0xdfaca34],ch
  401b53:	ja     0x401bc7
  401b55:	add    al,0xf5
  401b57:	xchg   esi,eax
  401b58:	mov    DWORD PTR [ecx-0x10261592],0x6563515a
  401b62:	sti    
  401b63:	xchg   esp,eax
  401b64:	xchg   edx,eax
  401b65:	mov    ebp,0x95212e66
  401b6a:	xlat   BYTE PTR ds:[ebx]
  401b6b:	xchg   esp,eax
  401b6c:	add    BYTE PTR [ebx+0x37245f9e],ch
  401b72:	xchg   edx,eax
  401b73:	hlt    
  401b74:	cmp    dh,bl
  401b76:	adc    DWORD PTR ds:0x83d274ee,ebx
  401b7c:	add    eax,0x4dbe2d34
  401b81:	iret   
  401b82:	ficomp DWORD PTR [ecx]
  401b84:	ret    0xbaad
  401b87:	cld    
  401b88:	enter  0xd100,0x62
  401b8c:	(bad)  
  401b8d:	in     eax,dx
  401b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b8f:	and    DWORD PTR [edi-0x37],ebx
  401b92:	or     DWORD PTR [ebp-0xcadc06],esp
  401b98:	or     bh,BYTE PTR [ebx]
  401b9a:	and    al,0x31
  401b9c:	or     edx,DWORD PTR [esi+0x9]
  401b9f:	sahf   
  401ba0:	jns    0x401b8b
  401ba2:	fcomp  QWORD PTR [edx]
  401ba4:	shl    BYTE PTR [edi+0x11],cl
  401ba7:	test   BYTE PTR [ebx-0x25703006],cl
  401bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bae:	and    cl,0xc9
  401bb1:	push   0x387e61d8
  401bb6:	sub    al,0x75
  401bb8:	push   ebp
  401bb9:	ret    
  401bba:	fwait
  401bbb:	aaa    
  401bbc:	aam    0x82
  401bbe:	jnp    0x401bfb
  401bc0:	aas    
  401bc1:	push   ds
  401bc2:	push   ebp
  401bc3:	shr    BYTE PTR [ecx],cl
  401bc5:	mov    ebx,0x518f6fb5
  401bca:	mov    BYTE PTR [ecx+0x4d5c6df8],bh
  401bd0:	mov    dh,0x7c
  401bd2:	ror    DWORD PTR ds:0x80423816,cl
  401bd8:	retf   
  401bd9:	fcom   QWORD PTR [bx]
  401bdc:	cmp    eax,0x9bcd97fd
  401be1:	pop    edi
  401be2:	in     eax,0xc9
  401be4:	xor    bh,dh
  401be6:	ja     0x401c06
  401be8:	(bad)  
  401be9:	in     al,dx
  401bea:	pusha  
  401beb:	clc    
  401bec:	push   esp
  401bed:	es xor ebp,ecx
  401bf0:	repnz jecxz 0x401bc2
  401bf3:	and    ebx,DWORD PTR [edi+0x4d6b6864]
  401bf9:	mov    cl,BYTE PTR [edi+0x73e235f]
  401bff:	inc    ecx
  401c00:	pop    edx
  401c01:	and    ah,bh
  401c03:	cs in  al,dx
  401c05:	dec    eax
  401c06:	imul   BYTE PTR [esi+esi*1+0xc028c80]
  401c0d:	daa    
  401c0e:	add    ch,0x40
  401c11:	mov    eax,ds:0xa374ad56
  401c16:	test   DWORD PTR [esi],0xfac677e3
  401c1c:	test   DWORD PTR [esi+0x56],0x6f1b1eb6
  401c23:	jecxz  0x401bb9
  401c25:	xor    bh,BYTE PTR [ebp+0x2d6aa941]
  401c2b:	push   eax
  401c2c:	ins    BYTE PTR es:[edi],dx
  401c2d:	stc    
  401c2e:	mov    eax,eax
  401c30:	adc    esi,DWORD PTR [edi]
  401c32:	cmp    eax,0xee00f856
  401c37:	ja     0x401c76
  401c39:	fidivr WORD PTR [edi]
  401c3b:	jecxz  0x401c04
  401c3d:	cmp    BYTE PTR [ebp+0x23],ch
  401c40:	sbb    esp,ecx
  401c42:	dec    ebp
  401c43:	jo     0x401c9c
  401c45:	inc    ebx
  401c46:	(bad)  
  401c47:	out    dx,eax
  401c48:	cmp    DWORD PTR [edi+0x2f67b351],ebx
  401c4e:	sub    BYTE PTR [ebp+ebp*8-0x37db61a6],bh
  401c55:	inc    ebp
  401c56:	out    dx,eax
  401c57:	retf   0x597d
  401c5a:	add    al,0x6a
  401c5c:	xchg   ebp,eax
  401c5d:	cmp    DWORD PTR [esi-0x15],edi
  401c60:	sti    
  401c61:	retf   0xd554
  401c64:	dec    ecx
  401c65:	jae    0x401c53
  401c67:	std    
  401c68:	outs   dx,DWORD PTR ds:[esi]
  401c69:	int    0x1
  401c6b:	or     eax,0xd391fdf8
  401c70:	std    
  401c71:	mov    ds:0x7151d79a,al
  401c76:	shl    BYTE PTR [ebx-0x2880aeb3],cl
  401c7c:	jge    0x401c97
  401c7e:	mov    eax,ds:0xf3ed3ff9
  401c83:	lods   eax,DWORD PTR ds:[esi]
  401c84:	(bad)  
  401c85:	push   0x3ee062db
  401c8a:	and    BYTE PTR [ebp+0x10],cl
  401c8d:	shl    edi,cl
  401c8f:	arpl   WORD PTR [esi-0x12e7bdd8],si
  401c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c96:	pop    ecx
  401c97:	sbb    esi,DWORD PTR [edx-0xd7c1c82]
  401c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c9e:	mov    ds:0x1e0ef2d5,al
  401ca3:	mov    esi,DWORD PTR [edi+0x2]
  401ca6:	and    dl,al
  401ca8:	iret   
  401ca9:	cs inc ebx
  401cab:	adc    BYTE PTR [edi+0x446258f3],ah
  401cb1:	sbb    eax,0x31c5a522
  401cb6:	ds dec ebp
  401cb8:	jmp    0x401c89
  401cba:	in     eax,dx
  401cbb:	(bad)
  401cbf:	es das 
  401cc1:	xlat   BYTE PTR ds:[ebx]
  401cc2:	dec    ecx
  401cc3:	mov    ?,ebp
  401cc5:	dec    ecx
  401cc6:	les    esi,FWORD PTR [ebp+0x23e13c23]
  401ccc:	fdivr  st(3),st
  401cce:	pop    edi
  401ccf:	ss pop ecx
  401cd1:	out    0xb3,al
  401cd3:	mov    dh,0x29
  401cd5:	dec    edx
  401cd6:	inc    edx
  401cd7:	mov    esp,0xbb0680e8
  401cdc:	xor    DWORD PTR [esp+ebx*1-0x14e77ef6],edx
  401ce3:	or     esp,DWORD PTR [esi+0x39946a14]
  401ce9:	jmp    0x401c79
  401ceb:	and    esi,esp
  401ced:	xchg   DWORD PTR [edi-0x72],eax
  401cf0:	iret   
  401cf1:	dec    ebp
  401cf2:	jle    0x401d20
  401cf4:	inc    edi
  401cf5:	adc    DWORD PTR [eax],0xf346021b
  401cfb:	push   edx
  401cfc:	das    
  401cfd:	mul    DWORD PTR [edx+0x74e6b1f5]
  401d03:	push   ebx
  401d04:	adc    ebp,ecx
  401d06:	pop    ebp
  401d07:	and    esi,DWORD PTR [edi]
  401d09:	sub    eax,0x8bc0c402
  401d0e:	out    0x53,al
  401d10:	(bad)
  401d14:	add    BYTE PTR [ebx-0x37],dl
  401d17:	retf   
  401d18:	loop   0x401d17
  401d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1b:	pop    edi
  401d1c:	stc    
  401d1d:	mov    ah,0xd0
  401d1f:	adc    al,0xc5
  401d21:	mov    ch,0x42
  401d23:	in     eax,0xcd
  401d25:	push   edi
  401d26:	ins    BYTE PTR es:[edi],dx
  401d27:	test   al,0x2b
  401d29:	or     BYTE PTR [eax],dl
  401d2b:	pop    edx
  401d2c:	loopne 0x401d26
  401d2e:	js     0x401d1e
  401d30:	and    DWORD PTR gs:[ecx+0x5f8cd57a],eax
  401d37:	push   esi
  401d38:	add    DWORD PTR [ecx+0x29cdef76],edx
  401d3e:	push   esp
  401d3f:	in     eax,dx
  401d40:	or     al,BYTE PTR [edx+0x39]
  401d43:	std    
  401d44:	push   cs
  401d45:	jns    0x401d39
  401d47:	and    BYTE PTR [esi+edx*2-0x6dff59fa],ah
  401d4e:	sbb    esp,esi
  401d50:	mov    esi,esi
  401d52:	int    0x4b
  401d54:	xchg   ecx,eax
  401d55:	cmp    al,0xd5
  401d57:	ror    BYTE PTR [eax-0x76ebeaed],cl
  401d5d:	jne    0x401d0b
  401d5f:	xor    DWORD PTR [edx],esi
  401d61:	cs std 
  401d63:	mov    edx,0x44da5101
  401d68:	or     eax,0xfffd1793
  401d6d:	(bad)  
  401d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d6f:	adc    eax,0xca751477
  401d74:	jmp    0x401d61
  401d76:	adc    esi,DWORD PTR [edi]
  401d78:	mov    ebp,0xa905acff
  401d7d:	loopne 0x401db1
  401d7f:	mov    edx,ebp
  401d81:	es jb  0x401ddc
  401d84:	add    eax,0xe04f760a
  401d89:	xchg   esi,eax
  401d8a:	mov    BYTE PTR [eax+eiz*4],dl
  401d8d:	mov    al,ds:0x927929f1
  401d92:	cmp    edx,DWORD PTR fs:[esi+esi*2]
  401d96:	scas   eax,DWORD PTR es:[edi]
  401d97:	call   0xc5b5:0xce146a01
  401d9e:	jmp    0x401d68
  401da0:	mov    edi,0x2b82a4df
  401da5:	call   0x1d31:0x77098d9b
  401dac:	out    0x96,al
  401dae:	lahf   
  401daf:	packsswb mm0,QWORD PTR [edx]
  401db2:	ja     0x401d97
  401db4:	xor    eax,0x37a5912b
  401db9:	inc    ecx
  401dba:	sub    eax,0xae0e574c
  401dbf:	fwait
  401dc0:	sbb    DWORD PTR [edx-0x15c9ddd0],edi
  401dc6:	cmp    BYTE PTR ds:0xc0ce206b,dl
  401dcc:	lods   eax,DWORD PTR ds:[esi]
  401dcd:	in     eax,dx
  401dce:	xchg   edi,eax
  401dcf:	(bad)  
  401dd0:	sbb    esp,esp
  401dd2:	hlt    
  401dd3:	call   0x9d2e:0x68297727
  401dda:	inc    edi
  401ddb:	mov    ch,0x9c
  401ddd:	pop    ss
  401dde:	ret    
  401ddf:	ss mov dl,0xee
  401de2:	inc    esi
  401de3:	inc    edx
  401de4:	sub    BYTE PTR [ebp-0x80],ch
  401de7:	jmp    0xa17de695
  401dec:	hlt    
  401ded:	push   eax
  401dee:	push   0xffffff99
  401df0:	add    edx,DWORD PTR [esi-0x68a21ced]
  401df6:	sahf   
  401df7:	push   0xffffffe8
  401df9:	cmp    bl,BYTE PTR [ebp+ebx*1+0x7c]
  401dfd:	(bad)
  401e01:	adc    eax,ebx
  401e03:	sbb    eax,0xdb394a4a
  401e08:	add    DWORD PTR [esi+0x6fa6468],eax
  401e0e:	cmp    BYTE PTR [eax+0x27],0x19
  401e12:	cmp    eax,0xc2b20774
  401e17:	cwde   
  401e18:	xor    eax,0x83e9aad6
  401e1d:	sub    eax,0x980b577f
  401e22:	pop    edx
  401e23:	sbb    DWORD PTR [ecx],ecx
  401e25:	adc    DWORD PTR [ecx+0x6315a11d],esi
  401e2b:	sbb    BYTE PTR [ebx+eax*8-0x2b9d6ed1],ah
  401e32:	arpl   WORD PTR [ecx+0x667aba02],bx
  401e38:	xchg   al,dl
  401e3a:	imul   ecx,DWORD PTR ds:0xf6977349,0x62c59065
  401e44:	dec    eax
  401e45:	pop    ds
  401e46:	call   0x844d462f
  401e4b:	sahf   
  401e4c:	lds    edi,FWORD PTR [edx+0x797a87ae]
  401e52:	pushf  
  401e53:	mov    es,edx
  401e55:	inc    ebp
  401e56:	xchg   ebp,eax
  401e57:	adc    cl,BYTE PTR [edi]
  401e59:	shl    BYTE PTR [ebx+0x31],1
  401e5c:	popf   
  401e5d:	(bad)  
  401e5e:	jmp    0xbecc:0xdba74a79
  401e65:	arpl   WORD PTR [ebx],di
  401e67:	adc    DWORD PTR [edi-0x5d8fe892],ebp
  401e6d:	in     eax,0xa5
  401e6f:	fs out dx,al
  401e71:	xchg   DWORD PTR [ecx+0x10],esi
  401e74:	xchg   esi,eax
  401e75:	sbb    dl,dl
  401e77:	imul   esp,ecx,0xb9364a0
  401e7d:	mov    esp,0xc35389b6
  401e82:	or     edx,DWORD PTR [ebp-0x6f]
  401e85:	xor    eax,0x24e0b166
  401e8a:	mov    cl,dl
  401e8c:	and    eax,0xda29ba67
  401e91:	jb     0x401e59
  401e93:	pop    esp
  401e94:	imul   esi,DWORD PTR [edx+eax*2-0x10c6b089],0x74
  401e9c:	gs mov edi,0xc508716b
  401ea2:	xor    al,0x18
  401ea4:	sbb    DWORD PTR [eax-0x1d],edi
  401ea7:	ja     0x401eca
  401ea9:	out    dx,al
  401eaa:	xor    ebp,esp
  401eac:	xlat   BYTE PTR ds:[ebx]
  401ead:	cvtdq2ps xmm3,XMMWORD PTR [ebp+0xa3bc7cb]
  401eb4:	enter  0x43f2,0xd0
  401eb8:	push   cs
  401eb9:	int3   
  401eba:	push   ebp
  401ebb:	and    eax,0xa4275a52
  401ec0:	pusha  
  401ec1:	add    edx,edi
  401ec3:	push   esi
  401ec4:	nop
  401ec5:	hlt    
  401ec6:	dec    ecx
  401ec7:	popf   
  401ec8:	out    dx,al
  401ec9:	nop
  401eca:	lea    eax,[eax]
  401ecc:	add    esp,ecx
  401ece:	(bad)  
  401ecf:	cmp    eax,0xe53387b9
  401ed4:	out    0xcc,eax
  401ed6:	retf   0xac81
  401ed9:	push   ebp
  401eda:	mov    ebp,0x324663c6
  401edf:	mov    eax,0x6af79750
  401ee4:	hlt    
  401ee5:	outs   dx,DWORD PTR ds:[esi]
  401ee6:	pop    es
  401ee7:	mov    edi,0xc6e27014
  401eec:	pop    edx
  401eed:	jno    0x401f1e
  401eef:	daa    
  401ef0:	mov    ah,0x99
  401ef2:	fdiv   st,st(3)
  401ef4:	shl    DWORD PTR [eax+0x5f],0x33
  401ef8:	mov    bl,0xa3
  401efa:	mov    eax,0x17338e6d
  401eff:	or     al,0xef
  401f01:	test   al,0xd
  401f03:	cmova  eax,DWORD PTR [ebx]
  401f06:	fimul  WORD PTR gs:[esi+0x4a]
  401f0a:	push   ds
  401f0b:	adc    DWORD PTR [edi+0x1fd448fd],eax
  401f11:	cmp    edx,edx
  401f13:	adc    cl,BYTE PTR [ebx+0x421b55c7]
  401f19:	(bad)  
  401f1a:	out    dx,eax
  401f1b:	xor    BYTE PTR [eax],dh
  401f1d:	ja     0x401f6d
  401f1f:	pop    esp
  401f20:	lea    esi,[esi]
  401f22:	pop    edi
  401f23:	retf   0x98bb
  401f26:	pop    esp
  401f27:	xor    esp,ebx
  401f29:	enter  0x577b,0xd0
  401f2d:	call   0xb0d0:0x2749a04e
  401f34:	cmp    ecx,DWORD PTR [edx+0x30]
  401f37:	mov    esi,0x1221fde
  401f3c:	sbb    al,0x64
  401f3e:	push   ecx
  401f3f:	jnp    0x401f6f
  401f41:	or     al,0x91
  401f43:	push   edi
  401f44:	test   al,0xc5
  401f46:	jmp    0x8cc2b25a
  401f4b:	cmp    al,0x4b
  401f4d:	jecxz  0x401f01
  401f4f:	popf   
  401f50:	and    al,0x7c
  401f52:	cli    
  401f53:	test   DWORD PTR ds:0x992390cb,esp
  401f59:	repz scas al,BYTE PTR es:[edi]
  401f5b:	push   ebx
  401f5c:	sub    al,0x1f
  401f5e:	jae    0x401fb9
  401f60:	mov    ah,BYTE PTR ds:0xf873bf5b
  401f66:	mov    ebx,0x1c13af2
  401f6b:	repz ror DWORD PTR [ebx+0x79],0x94
  401f70:	lock popa 
  401f72:	jecxz  0x401fa9
  401f74:	aad    0x3f
  401f76:	aas    
  401f77:	push   0xbec32967
  401f7c:	sahf   
  401f7d:	jb     0x401f99
  401f7f:	les    esi,FWORD PTR [bp+si+0x629f]
  401f84:	inc    eax
  401f85:	gs fs mov bh,0xea
  401f89:	aam    0x6b
  401f8b:	mov    al,0x3d
  401f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f8e:	mov    ebx,0x7115c234
  401f93:	out    0xe7,eax
  401f95:	inc    ecx
  401f96:	and    ch,BYTE PTR [ecx+0x3e]
  401f99:	outs   dx,BYTE PTR ds:[esi]
  401f9a:	test   al,0x86
  401f9c:	hlt    
  401f9d:	(bad)  
  401f9e:	mov    ch,0x4d
  401fa0:	ror    al,cl
  401fa2:	mov    ?,eax
  401fa4:	(bad)  
  401fa6:	aas    
  401fa7:	cmp    ecx,DWORD PTR [ebp-0x67]
  401faa:	xor    eax,0x480e8519
  401faf:	test   DWORD PTR [eax+0x4ad96ab],edx
  401fb5:	stos   BYTE PTR es:[edi],al
  401fb6:	and    al,dh
  401fb8:	xchg   ebp,eax
  401fb9:	xchg   ebp,eax
  401fba:	add    dh,BYTE PTR [ecx-0x5f]
  401fbd:	scas   al,BYTE PTR es:[edi]
  401fbe:	sbb    bl,dl
  401fc0:	sub    al,0x5c
  401fc2:	loop   0x401f4e
  401fc4:	gs dec ecx
  401fc6:	lds    edi,FWORD PTR [ecx+0x2]
  401fc9:	pop    esi
  401fca:	mov    ebp,DWORD PTR [eax]
  401fcc:	and    esi,DWORD PTR [eax+eax*8-0x49]
  401fd0:	test   BYTE PTR [esi+0x497fd02d],bh
  401fd6:	dec    edx
  401fd7:	inc    eax
  401fd8:	sub    DWORD PTR [ecx+0x55c2bd06],0xffffff9d
  401fdf:	add    DWORD PTR [eax-0x6b],0xd2ecf2e
  401fe6:	sbb    bl,BYTE PTR [edx]
  401fe8:	js     0x402044
  401fea:	enter  0x5302,0x29
  401fee:	cmp    BYTE PTR [ebx+ebx*4+0x4b],dh
  401ff2:	rcr    bl,0x70
  401ff5:	push   esi
  401ff6:	int    0xb2
  401ff8:	imul   esi,DWORD PTR [edx+0x23],0xffffffb7
  401ffc:	or     eax,0x84a61cda
  402001:	shr    DWORD PTR [esi],cl
  402003:	adc    DWORD PTR [edi+0x7bdbbf94],ecx
  402009:	pop    edi
  40200a:	push   ds
  40200b:	out    0xc8,al
  40200d:	hlt    
  40200e:	inc    ebp
  40200f:	jg     0x401f93
  402011:	dec    eax
  402012:	dec    esi
  402013:	ins    BYTE PTR es:[edi],dx
  402014:	push   ecx
  402015:	ret    0x529c
  402018:	inc    ebx
  402019:	test   eax,0xa05793a
  40201e:	cwde   
  40201f:	loopne 0x402071
  402021:	xchg   BYTE PTR [esi+0x74],ah
  402024:	jg     0x40208b
  402026:	aaa    
  402027:	dec    esi
  402028:	push   ebx
  402029:	jp     0x40205e
  40202b:	bound  ebx,QWORD PTR [ebx+0x17]
  40202e:	enter  0xb04a,0x4d
  402032:	and    BYTE PTR [ebx+edi*8+0x4ba29578],bh
  402039:	sbb    eax,0x668f3d0e
  40203e:	inc    edi
  40203f:	push   0xffffffe2
  402041:	in     eax,0x76
  402043:	sahf   
  402044:	dec    eax
  402045:	(bad)  
  402046:	dec    ebp
  402047:	jmp    0x2c95:0x360a266a
  40204e:	xchg   BYTE PTR [edx-0x2f],al
  402051:	gs (bad) 
  402053:	push   ds
  402054:	push   0x5fd678d0
  402059:	test   DWORD PTR [eax-0x4e],eax
  40205c:	cmp    ebp,edi
  40205e:	mov    al,0xf0
  402060:	shr    DWORD PTR [edx+eiz*2],1
  402063:	nop
  402064:	sbb    al,0x4e
  402066:	mov    edi,DWORD PTR [ebp-0x72df2044]
  40206c:	mov    cl,0x82
  40206e:	push   ebx
  40206f:	repnz fadd QWORD PTR [edx-0x79c63090]
  402076:	sub    al,0xb8
  402078:	je     0x4020df
  40207a:	jo     0x402032
  40207c:	xchg   edx,eax
  40207d:	mov    ebp,0x7b3c1f2f
  402082:	xchg   ecx,eax
  402083:	mov    es,WORD PTR [ecx-0x1140d015]
  402089:	add    bh,ah
  40208b:	sub    ebp,ecx
  40208d:	inc    esi
  40208e:	mov    ebp,0xd420f789
  402093:	xchg   ebp,eax
  402094:	nop
  402095:	add    ebp,0x57
  402098:	imul   BYTE PTR [edx+0x39]
  40209b:	push   edi
  40209c:	fistp  QWORD PTR [edx-0x22]
  40209f:	xchg   edi,eax
  4020a0:	cld    
  4020a1:	mov    edi,?
  4020a3:	in     al,0x8e
  4020a5:	xchg   BYTE PTR ds:0xfb4e8a8f,dl
  4020ab:	into   
  4020ac:	xchg   ebp,eax
  4020ad:	retf   0x9ebf
  4020b0:	into   
  4020b1:	lods   eax,DWORD PTR ds:[esi]
  4020b2:	fsub   st(7),st
  4020b4:	push   es
  4020b5:	enter  0x1336,0xef
  4020b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020ba:	mov    ebp,0x9c89d937
  4020bf:	cmp    dl,BYTE PTR [edx+0x2f64e189]
  4020c5:	xor    ebp,esp
  4020c7:	fadd   DWORD PTR [ebx]
  4020c9:	into   
  4020ca:	scas   al,BYTE PTR es:[edi]
  4020cb:	aam    0xa2
  4020cd:	xor    eax,0xcaf18f6e
  4020d2:	arpl   WORD PTR [edx],dx
  4020d4:	mov    eax,ds:0x9ec16a92
  4020d9:	stos   BYTE PTR es:[edi],al
  4020da:	and    ah,BYTE PTR [ecx+ebx*1+0x67]
  4020de:	pop    eax
  4020df:	shr    BYTE PTR [ebx+0x6c],cl
  4020e2:	xor    BYTE PTR [ebx-0x6a],al
  4020e5:	std    
  4020e6:	add    BYTE PTR [esi],0xd7
  4020e9:	aad    0x27
  4020eb:	(bad)  
  4020ec:	adc    al,0x52
  4020ee:	aaa    
  4020ef:	neg    DWORD PTR [edi+0x1e]
  4020f2:	push   ss
  4020f3:	or     dl,bh
  4020f5:	cmp    ch,BYTE PTR [eax]
  4020f7:	jg     0x4020a8
  4020f9:	je     0x402095
  4020fb:	pop    ss
  4020fc:	es ret 
  4020fe:	fnstenv [ebx+edx*4-0xacd0e9c]
  402105:	mov    ebp,0xa71653c0
  40210a:	mov    ah,0x14
  40210c:	icebp  
  40210d:	sbb    al,0x88
  40210f:	call   0x8667e0dd
  402114:	fcomp  QWORD PTR [ecx-0x17]
  402117:	loopne 0x40215b
  402119:	pushf  
  40211a:	repnz xor DWORD PTR [ebx],0x66
  40211e:	or     BYTE PTR [edi-0x73663304],bh
  402124:	jmp    0x40211c
  402126:	dec    esp
  402127:	cmp    ebp,DWORD PTR ds:0xab87998d
  40212d:	in     eax,dx
  40212e:	or     eax,0x61c54878
  402133:	mov    eax,ds:0xf140a87c
  402138:	mov    al,ds:0x7f242846
  40213d:	pushf  
  40213e:	xor    DWORD PTR [ecx],ebp
  402140:	inc    edx
  402141:	fdivr  QWORD PTR ds:0xeb258f28
  402147:	pop    ecx
  402148:	cmp    BYTE PTR [ecx],al
  40214a:	gs push edx
  40214c:	jb     0x402156
  40214e:	repz sub BYTE PTR [edx],ah
  402151:	mov    dl,0xe6
  402153:	jp     0x40216b
  402155:	add    al,0xe9
  402157:	push   ebx
  402158:	pop    edi
  402159:	xor    eax,0x206f0988
  40215e:	pop    ss
  40215f:	aam    0x90
  402161:	and    al,0xb5
  402163:	fsub   QWORD PTR [edx+0x6b]
  402166:	loop   0x402147
  402168:	sub    ah,BYTE PTR [eax]
  40216a:	and    esi,eax
  40216c:	retf   0xf16
  40216f:	push   esp
  402170:	lods   al,BYTE PTR ds:[esi]
  402171:	(bad)  
  402172:	cmp    ebp,DWORD PTR ds:0x7f46df3f
  402178:	fidivr DWORD PTR [edi]
  40217a:	aas    
  40217b:	mov    al,0x3a
  40217d:	add    eax,esp
  40217f:	jge    0x4021fb
  402181:	mov    WORD PTR [esi+0x61],ss
  402184:	sbb    DWORD PTR [edx+ecx*1-0x76d607f6],ebp
  40218b:	fcmove st,st(5)
  40218d:	fs int 0x11
  402190:	idiv   DWORD PTR [edi-0xd]
  402193:	and    esi,DWORD PTR [ecx]
  402195:	sbb    al,0x68
  402197:	loopne 0x402133
  402199:	or     ah,BYTE PTR ds:0x68ed9082
  40219f:	jae    0x4021cf
  4021a1:	frstor [ecx]
  4021a3:	dec    eax
  4021a4:	retf   
  4021a5:	(bad)
  4021a8:	in     al,0xe7
  4021aa:	push   0x285784f7
  4021af:	pusha  
  4021b0:	ins    DWORD PTR es:[edi],dx
  4021b1:	sti    
  4021b2:	or     al,0x52
  4021b4:	or     esi,esi
  4021b6:	inc    ebx
  4021b7:	lahf   
  4021b8:	ret    0xcac2
  4021bb:	and    eax,0xb1d1f8dc
  4021c0:	inc    ebp
  4021c1:	mov    eax,ds:0x7f4bf938
  4021c6:	jno    0x4021f1
  4021c8:	pushf  
  4021c9:	outs   dx,DWORD PTR ds:[esi]
  4021ca:	imul   esi,DWORD PTR [eax],0xffffffc7
  4021cd:	test   ebp,eax
  4021cf:	xlat   BYTE PTR ds:[ebx]
  4021d0:	sti    
  4021d1:	popa   
  4021d2:	ja     0x40217e
  4021d4:	pushf  
  4021d5:	and    al,0x10
  4021d7:	pusha  
  4021d8:	or     al,0x2c
  4021da:	(bad)  
  4021db:	std    
  4021dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021dd:	rol    DWORD PTR [ebx+0x72],0x28
  4021e1:	int3   
  4021e2:	push   ebp
  4021e3:	shl    BYTE PTR [ebx],1
  4021e5:	or     edi,DWORD PTR [edi-0x7477984a]
  4021eb:	cs inc esp
  4021ed:	sub    esp,DWORD PTR [esi-0x6f]
  4021f0:	inc    esp
  4021f1:	lahf   
  4021f2:	jmp    0xd2dd:0x6930f760
  4021f9:	xor    dh,bh
  4021fb:	retf   
  4021fc:	mov    al,ds:0xf82119b1
  402201:	cli    
  402202:	fdiv   QWORD PTR [edi+0x5aacc6c2]
  402208:	aas    
  402209:	fcomp  st(0)
  40220b:	pop    edi
  40220c:	jmp    0x55a286fc
  402211:	xor    ah,al
  402213:	(bad)  
  402214:	fadd   st,st(2)
  402216:	js     0x4021c6
  402218:	adc    dl,bl
  40221a:	in     al,dx
  40221b:	xchg   BYTE PTR [edi],bl
  40221d:	bnd jp 0x402231
  402220:	iret   
  402221:	mov    ecx,0x9c359325
  402226:	ss jb  0x4021c9
  402229:	inc    edi
  40222a:	mov    ch,0xe
  40222c:	aas    
  40222d:	cmc    
  40222e:	add    edx,DWORD PTR [ecx-0x529297db]
  402234:	lock push 0x1dbb58e2
  40223a:	and    eax,0xbca572fe
  40223f:	push   ebp
  402240:	mov    ebp,0xfc96ccd2
  402245:	mov    eax,0x990bc68a
  40224a:	adc    al,0xdc
  40224c:	mov    dh,0x6e
  40224e:	(bad)  
  40224f:	out    dx,al
  402250:	xor    edi,0x3d
  402253:	push   ecx
  402254:	xchg   BYTE PTR [edi],dh
  402256:	add    al,0x89
  402258:	push   esi
  402259:	mov    WORD PTR [ebx+0x408482b7],?
  40225f:	scas   al,BYTE PTR es:[edi]
  402260:	inc    esi
  402261:	sbb    eax,0x33916096
  402266:	sub    BYTE PTR [esi+0x1d],cl
  402269:	enter  0x5a72,0xf
  40226d:	aad    0xf8
  40226f:	pop    esp
  402270:	test   al,0xe1
  402272:	imul   ecx,DWORD PTR [esi-0x5e],0xbef9b6a
  402279:	ja     0x402245
  40227b:	add    BYTE PTR [ebp+0x3cca2497],al
  402281:	bound  esi,QWORD PTR [eax-0x56]
  402284:	cmp    edi,DWORD PTR [edx]
  402286:	pop    ecx
  402287:	les    ebx,FWORD PTR [ebp+0x1f]
  40228a:	mov    ecx,0x88f0b997
  40228f:	ins    DWORD PTR es:[edi],dx
  402290:	xor    DWORD PTR [eax-0x4a7a3374],eax
  402296:	jg     0x4022cd
  402298:	(bad)  
  402299:	pop    ebp
  40229a:	sub    edx,DWORD PTR [ebp+0x3]
  40229d:	inc    ebx
  40229e:	scas   al,BYTE PTR es:[edi]
  40229f:	inc    ebp
  4022a0:	loope  0x402268
  4022a2:	lock push ss
  4022a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a5:	xchg   ecx,eax
  4022a6:	adc    ebx,DWORD PTR [esi+0x6ea3d799]
  4022ac:	es and al,0xdb
  4022af:	loop   0x4022e6
  4022b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022b2:	cli    
  4022b3:	test   ebx,esp
  4022b5:	and    DWORD PTR [esi-0x69],ecx
  4022b8:	popf   
  4022b9:	imul   edx,DWORD PTR [edx+edx*2+0x15b255d],0x75
  4022c1:	aad    0x2e
  4022c3:	dec    edi
  4022c4:	out    0x1e,al
  4022c6:	lahf   
  4022c7:	mov    DWORD PTR [edi+ecx*2],edi
  4022ca:	ror    DWORD PTR [edx-0x31],1
  4022cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022ce:	test   al,0x23
  4022d0:	sub    ecx,0x1
  4022d3:	add    DWORD PTR [eax+edx*4-0x6e],ebx
  4022d7:	mov    esi,0x9fb6c85c
  4022dc:	mov    bl,0xd2
  4022de:	mov    dh,0xa0
  4022e0:	mov    eax,ds:0xcb7312ae
  4022e5:	mov    esp,0x6db4a4f4
  4022ea:	and    al,0x8c
  4022ec:	scas   eax,DWORD PTR es:[edi]
  4022ed:	xor    edx,DWORD PTR [esi+esi*1+0x42]
  4022f1:	cmp    dh,BYTE PTR [esi+0x23]
  4022f4:	enter  0x6f5d,0x5c
  4022f8:	jmp    0xeaa1:0xe0ad61ce
  4022ff:	inc    esp
  402300:	or     eax,0x36fee4d5
  402305:	(bad)  
  402307:	inc    ecx
  402308:	mov    ds:0x7ef7971d,al
  40230d:	mov    eax,0x5f7ebb1b
  402312:	in     eax,dx
  402313:	dec    ebp
  402314:	xchg   esi,eax
  402315:	ins    DWORD PTR es:[edi],dx
  402316:	(bad)  
  402317:	dec    DWORD PTR [edi]
  402319:	mov    edi,0x74174873
  40231e:	stos   BYTE PTR es:[edi],al
  40231f:	push   ecx
  402320:	aaa    
  402321:	fst    DWORD PTR [ecx-0x7c]
  402324:	dec    BYTE PTR [esi-0x7d6e4eab]
  40232a:	and    eax,esi
  40232c:	ss (bad) 
  40232e:	sub    al,0x1e
  402330:	cli    
  402331:	lock sbb BYTE PTR [ecx-0xff096e9],ah
  402338:	retf   
  402339:	add    DWORD PTR [ebx-0x28b75552],edi
  40233f:	pop    esi
  402340:	or     ah,BYTE PTR [edx]
  402342:	pusha  
  402343:	test   BYTE PTR [esi],0xbb
  402346:	fmul   QWORD PTR [edi+0x7b504f28]
  40234c:	aad    0x9b
  40234e:	fsubr  QWORD PTR [ecx-0xd8aaab7]
  402354:	jo     0x4023ae
  402356:	cs xchg esi,eax
  402358:	adc    BYTE PTR [ebp+0x44],dl
  40235b:	cmp    al,0xbf
  40235d:	push   es
  40235e:	fs xchg esp,eax
  402360:	pop    esi
  402361:	xchg   ebp,eax
  402362:	nop
  402363:	fiadd  DWORD PTR [edx-0x4]
  402366:	dec    ecx
  402367:	mov    al,ds:0x2700af4d
  40236c:	ss mov dh,0x6a
  40236f:	sar    BYTE PTR [ecx-0x7f],0xfc
  402373:	mov    esp,0x64c59d25
  402378:	xor    DWORD PTR [eax-0x406c342f],edi
  40237e:	stos   BYTE PTR es:[edi],al
  40237f:	test   DWORD PTR [edi+0x415a4fd5],ebp
  402385:	xchg   edi,eax
  402386:	sahf   
  402387:	ret    0x3610
  40238a:	ret    
  40238b:	lahf   
  40238c:	(bad)  [eax+0x20]
  40238f:	lods   eax,DWORD PTR ds:[esi]
  402390:	jcxz   0x4023ea
  402393:	mov    ebp,DWORD PTR ds:0xad1a991c
  402399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40239a:	push   0xa0bcf40c
  40239f:	mov    DWORD PTR [edx-0x65],esi
  4023a2:	inc    esp
  4023a3:	push   edi
  4023a4:	dec    esp
  4023a5:	xor    eax,0xa1a0c24e
  4023aa:	xor    bh,BYTE PTR [eax+0x1a]
  4023ad:	xor    al,0xd3
  4023af:	mov    ah,0x8d
  4023b1:	sbb    BYTE PTR [esi+0x4c0a4061],0x15
  4023b8:	xchg   ecx,eax
  4023b9:	(bad)
  4023be:	imul   ebp,DWORD PTR [ecx+ecx*8+0x66167f79],0xffffff92
  4023c6:	lahf   
  4023c7:	or     DWORD PTR [edi+0x47],0x32ab3411
  4023ce:	mov    BYTE PTR [ebx+eax*1+0x7c],dh
  4023d2:	fsub   QWORD PTR [edx+0x2958c2fe]
  4023d8:	pop    esp
  4023d9:	rcl    DWORD PTR [ebx-0x65489a7d],1
  4023df:	mov    ch,0xff
  4023e1:	inc    esp
  4023e2:	fisttp QWORD PTR [ecx]
  4023e4:	mov    ds:0x65cdace6,al
  4023e9:	or     ah,BYTE PTR [ebx+edx*2-0x10ab7c59]
  4023f0:	adc    eax,DWORD PTR [esi+0x36]
  4023f3:	push   ebx
  4023f4:	inc    esi
  4023f5:	stos   BYTE PTR es:[edi],al
  4023f6:	test   eax,0x630c6391
  4023fb:	cld    
  4023fc:	xchg   esp,eax
  4023fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023fe:	push   0xf7ccebcc
  402403:	dec    esp
  402404:	jno    0x40245f
  402406:	scas   al,BYTE PTR es:[edi]
  402407:	mov    esp,DWORD PTR [eax]
  402409:	in     al,0x4a
  40240b:	pop    edx
  40240c:	mov    BYTE PTR [esp+ebp*2],al
  40240f:	mov    eax,ds:0x4035b01a
  402414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402415:	adc    BYTE PTR [ecx],bl
  402417:	sub    al,0xea
  402419:	call   0x7145:0x34f08c52
  402420:	xor    DWORD PTR [eax],esp
  402422:	inc    ebx
  402423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402424:	mov    al,ds:0x4e6cc06
  402429:	sub    BYTE PTR [eax+0x1328c4aa],ch
  40242f:	cmc    
  402430:	or     al,0x16
  402433:	cmp    bl,BYTE PTR [edi+0x23]
  402436:	pusha  
  402437:	enter  0xd2ec,0xf9
  40243b:	mov    ebx,DWORD PTR [eax]
  40243d:	inc    esi
  40243e:	or     eax,0x2771c9be
  402443:	out    0x4d,eax
  402445:	fnstenv [esi+0x1]
  402448:	ss test ebp,edx
  40244b:	ins    BYTE PTR es:[edi],dx
  40244c:	adc    eax,0x6a2f34b7
  402451:	inc    edi
  402452:	push   edx
  402453:	repz and DWORD PTR [ecx],0xffffffeb
  402457:	or     al,BYTE PTR [esi+0x135fb274]
  40245d:	call   0x6abd1256
  402462:	sbb    DWORD PTR [eax-0xe],esp
  402465:	sub    esp,DWORD PTR [ebx-0x11]
  402468:	jae    0x402409
  40246a:	ror    DWORD PTR [ecx-0x4b80afd2],0xdf
  402471:	push   ebp
  402472:	add    BYTE PTR [esi+0x4da94511],ch
  402478:	mov    dh,0xa6
  40247a:	mov    dh,0x2c
  40247c:	scas   eax,DWORD PTR es:[edi]
  40247d:	jnp    0x18661235
  402483:	adc    ebp,ebp
  402485:	enter  0xb333,0xc3
  402489:	bound  ecx,QWORD PTR [edx]
  40248b:	sbb    al,0x6c
  40248d:	push   esi
  40248e:	imul   esi,DWORD PTR [ecx+0x326dcae8],0x8
  402495:	fcomp  QWORD PTR [ebx+0x17c01d24]
  40249b:	jp     0x4024ba
  40249d:	adc    bl,ch
  40249f:	adc    DWORD PTR [ecx],edi
  4024a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024a2:	inc    ebp
  4024a3:	dec    ebx
  4024a4:	lds    ebx,FWORD PTR [edi-0x61c7e938]
  4024aa:	std    
  4024ab:	cmp    eax,edi
  4024ad:	aad    0x4d
  4024af:	aam    0xa3
  4024b1:	leave  
  4024b2:	mov    dl,0x67
  4024b4:	pop    ss
  4024b5:	cs inc ebx
  4024b7:	(bad)  
  4024b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024ba:	test   BYTE PTR [edx-0x10],dl
  4024bd:	sbb    al,0x53
  4024bf:	push   0x1f78999a
  4024c4:	icebp  
  4024c5:	and    BYTE PTR [ebp-0x39],dl
  4024c8:	xchg   DWORD PTR [eax+0x2e36057d],ebp
  4024ce:	push   ecx
  4024cf:	push   esi
  4024d0:	lea    eax,[edx+0x61471a71]
  4024d6:	enter  0xb306,0x5f
  4024da:	mov    ebx,DWORD PTR [ebx+0x3f42a571]
  4024e0:	stc    
  4024e1:	add    eax,0x7cfa3188
  4024e6:	test   bh,bl
  4024e8:	outs   dx,BYTE PTR ds:[esi]
  4024e9:	pop    ds
  4024ea:	adc    bh,ch
  4024ec:	int3   
  4024ed:	cwde   
  4024ee:	lds    esi,FWORD PTR [edx+0x667ce6f3]
  4024f4:	sbb    al,0xd3
  4024f6:	xlat   BYTE PTR ds:[ebx]
  4024f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024f8:	in     al,0x50
  4024fa:	lahf   
  4024fb:	daa    
  4024fc:	or     dl,BYTE PTR [edi-0x16282c71]
  402502:	in     eax,dx
  402503:	(bad)  
  402504:	retf   
  402505:	pop    ecx
  402506:	add    BYTE PTR [edx-0x70],dh
  402509:	inc    edi
  40250a:	daa    
  40250b:	mov    ds:0x2c2cd91f,eax
  402510:	mov    eax,ds:0x86233f8
  402515:	pop    eax
  402516:	sbb    al,0x92
  402518:	mov    esp,0x6f1fc676
  40251d:	daa    
  40251e:	loope  0x40256c
  402520:	xchg   BYTE PTR [ebp+0x9f37a13],ch
  402526:	dec    eax
  402527:	mov    dh,0xcf
  402529:	clc    
  40252a:	popa   
  40252b:	ror    DWORD PTR [eax+0x69],cl
  40252e:	sub    BYTE PTR [ecx+0x7],bh
  402531:	and    DWORD PTR [ecx],esi
  402533:	data16 hlt 
  402535:	test   ecx,ebp
  402537:	mov    ds:0x3729ab9b,eax
  40253c:	inc    ebp
  40253d:	add    eax,DWORD PTR [edx+0x45]
  402540:	inc    edi
  402541:	jmp    0x5eb8:0x9bf23217
  402548:	inc    edi
  402549:	mov    eax,ds:0xf075545b
  40254e:	sbb    bh,BYTE PTR [edx+0x1f]
  402551:	fimul  DWORD PTR [edi]
  402553:	and    BYTE PTR [edi],ah
  402555:	daa    
  402556:	call   0x4381:0x89833639
  40255d:	sub    eax,0xb4f51a59
  402562:	dec    esi
  402563:	jae    0x40253e
  402565:	lahf   
  402566:	add    BYTE PTR [ebx-0x6f],bl
  402569:	xchg   ebx,edi
  40256b:	dec    edx
  40256c:	add    dh,BYTE PTR [ebp+0x7e439f32]
  402572:	jg     0x402561
  402574:	das    
  402575:	test   BYTE PTR [ecx-0x60a32e59],al
  40257b:	jo     0x4025d0
  40257d:	sbb    ebx,DWORD PTR [edi+eiz*8+0x71]
  402581:	and    BYTE PTR [ecx+edx*4-0x14],bl
  402585:	fwait
  402586:	or     dh,bl
  402588:	lods   al,BYTE PTR ds:[esi]
  402589:	dec    ecx
  40258a:	add    eax,0x5bd35c51
  40258f:	jo     0x4025ae
  402591:	or     al,0xa3
  402593:	dec    esi
  402594:	in     al,0xd5
  402596:	sub    DWORD PTR [ecx-0x33],0xffffffbd
  40259a:	ret    0xfbb2
  40259d:	scas   eax,DWORD PTR es:[edi]
  40259e:	sti    
  40259f:	mov    WORD PTR [esi-0x59],es
  4025a2:	ss out 0x1c,eax
  4025a5:	mov    BYTE PTR gs:[edi-0x7f],al
  4025a9:	je     0x402608
  4025ab:	es jl  0x402627
  4025ae:	push   cs
  4025af:	jle    0x4025cf
  4025b1:	out    dx,al
  4025b2:	push   es
  4025b3:	push   ss
  4025b4:	and    al,0xaa
  4025b6:	sbb    al,0x8f
  4025b8:	in     al,0x4b
  4025ba:	jne    0x4025f0
  4025bc:	jo     0x4025fa
  4025be:	sub    ecx,edi
  4025c0:	aad    0x4e
  4025c2:	fstp   TBYTE PTR [ebx]
  4025c4:	dec    esp
  4025c5:	dec    BYTE PTR [edi+0x5]
  4025c8:	fiadd  WORD PTR [esi]
  4025ca:	cmp    cl,BYTE PTR [edi]
  4025cc:	mov    ecx,es
  4025ce:	ror    DWORD PTR [edi+0x75b16ed4],cl
  4025d4:	mov    WORD PTR [esi-0x7e],?
  4025d7:	adc    ch,0x92
  4025da:	push   edx
  4025db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025dc:	dec    ebp
  4025dd:	es xchg ecx,eax
  4025df:	data16 hlt 
  4025e1:	inc    bp
  4025e3:	loopne 0x40258a
  4025e5:	push   ds
  4025e6:	(bad)  
  4025e7:	loop   0x4025e9
  4025e9:	sub    eax,0xb869e670
  4025ee:	push   eax
  4025ef:	pop    ds
  4025f0:	sub    dl,cl
  4025f2:	repnz mov edi,0x269b9462
  4025f8:	int    0x38
  4025fa:	dec    esp
  4025fb:	mov    ch,0x2d
  4025fd:	jae    0x402590
  4025ff:	dec    esi
  402600:	leave  
  402601:	scas   al,BYTE PTR es:[edi]
  402602:	and    BYTE PTR [edx-0x14],dl
  402605:	inc    ecx
  402606:	mov    ah,0x63
  402608:	inc    eax
  402609:	sbb    al,0xb7
  40260b:	stc    
  40260c:	and    BYTE PTR [edi+0x17],bh
  40260f:	in     al,0x87
  402611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402612:	retf   0x3c98
  402615:	mov    ebp,0x19faac7f
  40261a:	popf   
  40261b:	iret   
  40261c:	enter  0x8879,0xde
  402620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402621:	mov    edx,0x2ad9a074
  402626:	push   ds
  402627:	test   DWORD PTR [edx+edi*8+0x3b9e77f2],edi
  40262e:	(bad)  
  40262f:	clc    
  402630:	lahf   
  402631:	loop   0x402618
  402633:	adc    ch,BYTE PTR [esi-0x3c537673]
  402639:	loopne 0x402620
  40263b:	fisub  WORD PTR [ecx*1+0x611549e3]
  402642:	push   ss
  402643:	fdivr  st(7),st
  402645:	jmp    0xd043de52
  40264a:	xor    DWORD PTR [esi],ebp
  40264c:	mov    esp,0x56464b2d
  402651:	add    ch,BYTE PTR [eax+0x4f67bde4]
  402657:	leave  
  402658:	xchg   cl,ch
  40265a:	(bad)  
  40265b:	jne    0x402645
  40265d:	xchg   ecx,eax
  40265e:	pop    ds
  40265f:	inc    esi
  402660:	push   cs
  402661:	mov    esp,0xaf34d4df
  402666:	push   0xffffffd0
  402668:	fcmovne st,st(2)
  40266a:	ret    
  40266b:	add    esp,DWORD PTR ds:0xab39987d
  402671:	loop   0x402682
  402673:	xchg   ax,ax
  402675:	mov    al,ds:0x7fe58094
  40267a:	mov    dl,0x3
  40267c:	mov    ah,BYTE PTR [esi+0xa]
  40267f:	sub    al,0xd8
  402682:	xor    BYTE PTR [ebx+0x70ffc4df],bl
  402688:	jns    0x402708
  40268a:	jle    0x402670
  40268c:	aam    0x4a
  40268e:	add    eax,0xaf877e9f
  402693:	add    ebx,ecx
  402695:	clc    
  402696:	push   cs
  402697:	stos   BYTE PTR es:[edi],al
  402698:	jg     0x40261f
  40269a:	mov    bl,BYTE PTR [ebp+0x6]
  40269d:	gs jbe 0x40271a
  4026a0:	jbe    0x402643
  4026a2:	fwait
  4026a3:	cdq    
  4026a4:	push   ebp
  4026a5:	stos   BYTE PTR es:[edi],al
  4026a6:	jmp    0x7bef:0x33f97c04
  4026ad:	popw   es
  4026af:	dec    ebx
  4026b0:	xor    al,0xa9
  4026b2:	in     al,dx
  4026b3:	adc    al,0xd
  4026b5:	or     edi,DWORD PTR [eax+0x50]
  4026b8:	xchg   esp,eax
  4026b9:	in     al,0x61
  4026bb:	dec    edi
  4026bc:	cmp    DWORD PTR [edi],0xd9ec420b
  4026c2:	ss fist DWORD PTR cs:[edx-0x63]
  4026c7:	mov    dl,0xe6
  4026c9:	retf   0x21d6
  4026cc:	cmp    BYTE PTR [ecx-0x468c6b08],ch
  4026d2:	outs   dx,DWORD PTR ds:[esi]
  4026d3:	pop    ebx
  4026d4:	lds    ebx,FWORD PTR [esi+0x3facff64]
  4026da:	pop    ds
  4026db:	(bad)  
  4026dc:	sbb    bh,dh
  4026de:	xchg   ebp,eax
  4026df:	inc    ebp
  4026e0:	mov    ebp,0x4fd4b1c8
  4026e5:	ret    
  4026e6:	cmp    al,0x23
  4026e8:	dec    ebp
  4026e9:	stc    
  4026ea:	lea    esp,[ebp+0x56]
  4026ed:	ja     0x4026d3
  4026ef:	call   0x2269d192
  4026f4:	push   esp
  4026f5:	shl    BYTE PTR [esi],0xf0
  4026f8:	mov    gs,WORD PTR [edi+0x70]
  4026fb:	mov    ebx,0x11c08025
  402700:	cld    
  402701:	sbb    bh,0x34
  402704:	mov    edi,0xb5edeff9
  402709:	dec    ecx
  40270a:	jb     0x4026c5
  40270c:	or     dl,BYTE PTR [ebp+0xb]
  40270f:	mov    ch,0xb5
  402711:	imul   ecx,DWORD PTR [edx],0x61434fa8
  402717:	push   0x6377d220
  40271c:	sbb    DWORD PTR [edi+0xe9e81b4],0xffffffff
  402723:	test   al,0xc2
  402725:	and    bh,dh
  402727:	sahf   
  402728:	inc    edi
  402729:	mov    esi,DWORD PTR [ebp+0x38]
  40272c:	loop   0x40274f
  40272e:	ret    0x4f88
  402731:	mov    dl,0x67
  402733:	out    0x5c,eax
  402735:	dec    esp
  402736:	daa    
  402737:	pusha  
  402738:	jno    0x402772
  40273a:	icebp  
  40273b:	ins    DWORD PTR es:[edi],dx
  40273c:	js     0x402778
  40273e:	jno    0x4026c9
  402740:	sub    DWORD PTR [ebp+0x4f21c39f],eax
  402746:	and    bl,BYTE PTR [eax-0x2a]
  402749:	cs push cs
  40274b:	jge    0x402765
  40274d:	sbb    al,0xe6
  40274f:	jne    0x4026f1
  402751:	ins    BYTE PTR es:[edi],dx
  402752:	aam    0x20
  402754:	mov    bh,0xc4
  402756:	dec    esi
  402757:	daa    
  402758:	and    DWORD PTR [ecx],edx
  40275a:	iret   
  40275b:	or     eax,0x5ae69abe
  402760:	pop    esi
  402761:	push   ds
  402762:	sar    bh,1
  402764:	jbe    0x402798
  402766:	lds    esi,FWORD PTR [edx]
  402768:	and    BYTE PTR [edx-0x16],ch
  40276b:	out    0x50,al
  40276d:	pop    ebx
  40276e:	xchg   esp,eax
  40276f:	mov    bl,0x16
  402771:	sbb    dh,ah
  402773:	pop    ds
  402774:	pop    ds
  402775:	fdivr  st,st(6)
  402777:	jo     0x402729
  402779:	xchg   ecx,eax
  40277a:	fldenv [edx]
  40277c:	inc    esp
  40277d:	mov    al,ds:0x2b3f6d66
  402782:	(bad)  
  402785:	mov    BYTE PTR [edx],dh
  402787:	inc    esi
  402788:	pushf  
  402789:	push   ebp
  40278a:	pop    eax
  40278b:	dec    ebp
  40278c:	mov    WORD PTR [edi+0x43f32886],fs
  402792:	xor    bl,BYTE PTR [ebx]
  402794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402795:	xor    DWORD PTR [edi-0x5d1e1055],ebp
  40279b:	imul   ebp,DWORD PTR [ecx],0xfffffff9
  40279e:	call   0x8787cd31
  4027a3:	or     eax,0x2c6d243b
  4027a8:	imul   edi,esp,0xffffffb4
  4027ab:	mov    al,ds:0x718d60df
  4027b0:	sub    DWORD PTR [ecx+0x22],eax
  4027b3:	out    dx,al
  4027b4:	cmp    eax,0x290c8206
  4027b9:	sub    eax,0xcf43f722
  4027be:	pop    ss
  4027bf:	xchg   ecx,eax
  4027c0:	jnp    0x40280b
  4027c2:	rcr    BYTE PTR [ebp+0x5],1
  4027c5:	scas   al,BYTE PTR es:[edi]
  4027c6:	jl     0x402818
  4027c8:	sbb    eax,0x7b05c838
  4027cd:	or     edx,DWORD PTR ds:0xaede7196
  4027d3:	or     BYTE PTR [ebp-0x6a4c1273],al
  4027d9:	ins    BYTE PTR es:[edi],dx
  4027da:	sub    DWORD PTR [edi+0x1f],esi
  4027dd:	xchg   ebp,eax
  4027de:	daa    
  4027df:	jecxz  0x402834
  4027e1:	clc    
  4027e2:	mov    eax,0xa85658e8
  4027e7:	ror    eax,0x3f
  4027ea:	scas   al,BYTE PTR es:[edi]
  4027eb:	div    BYTE PTR [edx+0x70f9bb2c]
  4027f1:	sti    
  4027f2:	aad    0xcd
  4027f4:	aad    0xb0
  4027f6:	mov    esi,DWORD PTR [ecx]
  4027f8:	icebp  
  4027f9:	or     BYTE PTR [esi],cl
  4027fb:	arpl   WORD PTR [eax+0xf],si
  4027fe:	sti    
  4027ff:	aas    
  402800:	mov    esi,0x10086e5b
  402805:	push   esi
  402806:	in     al,0x5b
  402808:	mov    dh,0x5f
  40280a:	stos   DWORD PTR es:[edi],eax
  40280b:	jg     0x402874
  40280d:	mov    edx,0xc578ca1c
  402812:	loope  0x402853
  402814:	mov    WORD PTR [ebp-0x1a],ds
  402817:	cmp    BYTE PTR [edx],bh
  402819:	movaps xmm1,xmm7
  40281c:	out    dx,eax
  40281d:	mov    DWORD PTR [esi+0x1],eax
  402820:	adc    bl,ch
  402822:	xchg   DWORD PTR [ecx-0x1f97fc0d],edi
  402828:	(bad)  
  40282a:	jbe    0x402888
  40282c:	pop    edx
  40282d:	mov    WORD PTR [eax],fs
  40282f:	sbb    DWORD PTR [edx],eax
  402831:	lea    ebx,[ebp-0x29]
  402834:	hlt    
  402835:	iret   
  402836:	ins    DWORD PTR es:[edi],dx
  402837:	arpl   dx,dx
  402839:	pop    eax
  40283a:	inc    esi
  40283b:	inc    esp
  40283c:	mov    cl,0x14
  40283e:	rcl    ebx,1
  402840:	arpl   WORD PTR [edx],ax
  402842:	sti    
  402843:	jb     0x4027e8
  402845:	aad    0x3c
  402847:	arpl   cx,bp
  402849:	cmp    eax,0x58229ed4
  40284e:	and    eax,0xb2e6bea8
  402853:	aaa    
  402854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402855:	dec    esi
  402856:	jecxz  0x40286f
  402858:	daa    
  402859:	mov    dh,0xfc
  40285b:	es in  al,0x17
  40285e:	cmp    eax,edx
  402860:	xor    dl,al
  402862:	add    dh,BYTE PTR [edi+0xe245a23]
  402868:	js     0x40285c
  40286a:	mov    ah,0xb0
  40286c:	push   ss
  40286d:	int3   
  40286e:	push   0x54d9246f
  402873:	test   eax,0x9866e5c
  402878:	and    DWORD PTR [eax-0x30009ade],ebx
  40287e:	pop    ds
  40287f:	stos   DWORD PTR es:[edi],eax
  402880:	out    dx,eax
  402881:	xor    DWORD PTR [eax],esp
  402883:	call   0xb6ca:0x795586f1
  40288a:	mov    dl,0x5f
  40288c:	ret    
  40288d:	push   eax
  40288e:	pushf  
  40288f:	popf   
  402890:	in     al,0x39
  402892:	ret    0x8233
  402895:	push   ecx
  402896:	sar    DWORD PTR [ebp+ecx*4-0xfe93a94],0x85
  40289e:	mov    ebx,DWORD PTR fs:[ecx-0x2ab3963b]
  4028a5:	jecxz  0x402877
  4028a7:	enter  0xfa7b,0x5f
  4028ab:	xor    eax,0x62812ad9
  4028b0:	shr    BYTE PTR [ebp+0x3a07014b],0x52
  4028b7:	sbb    al,0xa8
  4028b9:	pop    es
  4028ba:	(bad)  
  4028bb:	push   esp
  4028bc:	pop    ds
  4028bd:	pop    esp
  4028be:	ficom  WORD PTR [esi+0x78]
  4028c1:	push   ebp
  4028c2:	sub    al,0x2d
  4028c4:	pop    esp
  4028c5:	int    0x71
  4028c7:	mov    ecx,0xbdaeb798
  4028cc:	arpl   WORD PTR [edx-0x55c14721],bx
  4028d2:	mov    ecx,0xe139037c
  4028d7:	popf   
  4028d8:	inc    edx
  4028d9:	test   eax,0xa0e1df81
  4028de:	test   BYTE PTR [edx-0x69c126fe],0x23
  4028e5:	ds pop esp
  4028e7:	sub    edx,edi
  4028e9:	mov    cl,0x41
  4028eb:	ud2    
  4028ed:	jnp    0x4028b7
  4028ef:	rcl    BYTE PTR [ebx-0x25],cl
  4028f2:	loopne 0x4028b5
  4028f4:	pop    cx
  4028f6:	jo     0x402911
  4028f8:	sbb    eax,0x278afee2
  4028fd:	shr    BYTE PTR [ebp+0x64],cl
  402900:	ret    
  402901:	push   eax
  402902:	mul    DWORD PTR [eax+0x52647517]
  402908:	arpl   WORD PTR [ebx+0x79],bp
  40290b:	bound  esp,QWORD PTR [eax-0x29]
  40290e:	out    0x80,al
  402910:	mov    BYTE PTR [ebx],0xce
  402913:	inc    ebx
  402914:	push   esp
  402915:	mov    ecx,edx
  402917:	rol    DWORD PTR ds:0x486dab95,1
  40291d:	sub    dh,al
  40291f:	cmp    bl,BYTE PTR [ebx]
  402921:	pop    ds
  402922:	adc    BYTE PTR [esp+ebx*2-0x68],ch
  402926:	jge    0x402954
  402928:	pop    es
  402929:	push   esi
  40292a:	in     eax,dx
  40292b:	ret    
  40292c:	and    ebx,DWORD PTR [eax-0x45]
  40292f:	addr16 pop ebx
  402931:	ss popaw 
  402934:	je     0x4028d4
  402936:	jecxz  0x402943
  402938:	aad    0x72
  40293a:	adc    bh,dl
  40293c:	mov    ch,0x4b
  40293e:	enter  0xd982,0x31
  402942:	dec    edi
  402943:	xchg   ecx,eax
  402944:	mov    edi,0xab775b38
  402949:	imul   esp,ecx,0x33bdcb0a
  40294f:	inc    ecx
  402950:	nop
  402951:	daa    
  402952:	xchg   esi,eax
  402953:	sub    BYTE PTR [ebp-0xabc25b2],dl
  402959:	jp     0x402966
  40295b:	mov    dh,0xed
  40295d:	add    ebp,DWORD PTR ss:[edi+0x2a]
  402961:	in     eax,dx
  402962:	aas    
  402963:	aaa    
  402964:	push   esp
  402965:	test   DWORD PTR [esi-0x70e58141],edx
  40296b:	cmp    al,0x1c
  40296d:	sahf   
  40296e:	jp     0x4029e4
  402970:	ins    DWORD PTR es:[edi],dx
  402971:	xor    eax,0x534bcdb0
  402976:	jg     0x402909
  402978:	rcl    ah,cl
  40297a:	js     0x4029c7
  40297c:	xor    dl,BYTE PTR [edi]
  40297e:	or     BYTE PTR [edx+0x5002ad0b],0x80
  402985:	ds mov cl,0xc6
  402988:	bound  esp,QWORD PTR [ecx+0x1c3b2d23]
  40298e:	jle    0x4029ff
  402990:	push   eax
  402991:	sub    al,0x35
  402993:	mov    ah,0x93
  402995:	int3   
  402996:	mov    ds:0x94d5224b,eax
  40299b:	mov    ?,edi
  40299d:	int3   
  40299e:	je     0x402a17
  4029a0:	mov    edi,0x945c70e2
  4029a5:	cmp    eax,0xb646a192
  4029aa:	and    DWORD PTR [ecx-0x72a2a7ad],esp
  4029b0:	jo     0x402978
  4029b2:	call   0xf1ba:0xffbd6d8c
  4029b9:	cmp    BYTE PTR [edi+0x9df06dc],al
  4029bf:	and    DWORD PTR [ebp+0x115a182d],0xe
  4029c6:	ins    BYTE PTR es:[edi],dx
  4029c7:	cld    
  4029c8:	ret    0xe259
  4029cb:	scas   eax,DWORD PTR es:[edi]
  4029cc:	jl     0x402985
  4029ce:	dec    esp
  4029cf:	pop    esi
  4029d0:	repnz imul di,bp,0x699
  4029d6:	leave  
  4029d7:	shr    DWORD PTR [ebx+0x7e5edf4c],cl
  4029dd:	cmc    
  4029de:	int3   
  4029df:	jge    0x402a34
  4029e1:	test   eax,0x64783407
  4029e6:	and    BYTE PTR [ebx],dh
  4029e8:	loope  0x402a51
  4029ea:	aas    
  4029eb:	push   ss
  4029ec:	mov    DWORD PTR [edx],edx
  4029ee:	not    BYTE PTR [ebp+esi*4-0x6c]
  4029f2:	mov    cl,ch
  4029f4:	dec    edx
  4029f5:	mov    dl,0xb4
  4029f7:	mov    al,0x5c
  4029f9:	imul   BYTE PTR [ecx]
  4029fb:	adc    BYTE PTR [edi-0x2],bl
  4029fe:	nop
  4029ff:	xchg   DWORD PTR [edx+0x103a950e],eax
  402a05:	mov    esi,0xbc18f072
  402a0a:	mov    eax,0xaf5958fb
  402a0f:	mov    ah,0xf8
  402a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a12:	or     BYTE PTR [ebp-0x3b],al
  402a15:	lods   eax,DWORD PTR ds:[esi]
  402a16:	fcmovnb st,st(5)
  402a18:	push   ss
  402a19:	daa    
  402a1a:	mov    edi,cs
  402a1c:	repnz or bl,bh
  402a1f:	dec    eax
  402a20:	sbb    edi,DWORD PTR [esi]
  402a22:	jno    0x402a81
  402a24:	mov    BYTE PTR [ecx+0x5c],0x1e
  402a28:	dec    esp
  402a29:	jl     0x402a50
  402a2b:	(bad)  
  402a2d:	enter  0x4681,0x73
  402a31:	into   
  402a32:	mov    ds:0xc5f66bfd,eax
  402a37:	aaa    
  402a38:	mov    ds:0x22b0c15f,al
  402a3d:	(bad)  
  402a3e:	push   ds
  402a3f:	stos   BYTE PTR es:[edi],al
  402a40:	arpl   dx,si
  402a42:	lods   eax,DWORD PTR ds:[esi]
  402a43:	and    al,0xd3
  402a45:	pusha  
  402a46:	outs   dx,BYTE PTR ds:[esi]
  402a47:	mov    gs,ecx
  402a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a4a:	inc    esp
  402a4b:	mov    ds:0x99c4a7a8,al
  402a50:	jmp    0x402a99
  402a52:	cld    
  402a53:	lea    edi,[edx+eax*4+0xd]
  402a57:	bswap  edx
  402a59:	mov    dl,0x5c
  402a5b:	ins    DWORD PTR es:[edi],dx
  402a5c:	cmp    al,0x87
  402a5e:	mov    esp,0x6bf7033a
  402a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a64:	xchg   esi,eax
  402a65:	shl    DWORD PTR [eax-0x6a],cl
  402a68:	mov    WORD PTR [ebx-0x4a],?
  402a6b:	mov    DWORD PTR [edx-0x1e],esi
  402a6e:	into   
  402a6f:	push   ss
  402a70:	add    DWORD PTR [ecx-0x4ba93c06],0xffffff94
  402a77:	cmp    al,0x39
  402a79:	mov    esp,DWORD PTR [ecx]
  402a7b:	in     al,dx
  402a7c:	jns    0x402ac0
  402a7e:	outs   dx,BYTE PTR ds:[esi]
  402a7f:	pop    ss
  402a80:	das    
  402a81:	std    
  402a82:	xchg   esi,eax
  402a83:	push   cs
  402a84:	lea    eax,[eax+esi*2]
  402a87:	js     0x402acb
  402a89:	add    eax,0x831997f
  402a8e:	shl    DWORD PTR [edx-0x5a],0xf9
  402a92:	cld    
  402a93:	lods   al,BYTE PTR ds:[esi]
  402a94:	adc    eax,0x55b67e46
  402a99:	mov    bl,0xca
  402a9b:	push   esp
  402a9c:	pop    edx
  402a9d:	cs xchg esi,eax
  402a9f:	nop
  402aa0:	mov    esp,0x8fb2d03a
  402aa5:	rcr    DWORD PTR [ebx+ebp*8-0x3],cl
  402aa9:	xchg   esp,eax
  402aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aab:	(bad)  
  402aac:	and    cl,BYTE PTR [eax]
  402aae:	inc    ebx
  402aaf:	dec    eax
  402ab0:	and    eax,0x2c7048af
  402ab5:	or     bh,dl
  402ab7:	sbb    BYTE PTR [edi+0x72afbf76],dl
  402abd:	in     al,dx
  402abe:	in     eax,dx
  402abf:	in     eax,0x3c
  402ac1:	fcomp  st(7)
  402ac3:	or     al,0x14
  402ac5:	inc    ebx
  402ac6:	inc    esp
  402ac7:	xchg   esi,eax
  402ac8:	xor    al,0xe3
  402aca:	vshufps xmm4,xmm7,XMMWORD PTR [ecx+0x51],0xd
  402ad0:	sti    
  402ad1:	sti    
  402ad2:	xor    eax,0x305328cc
  402ad7:	outs   dx,DWORD PTR ds:[esi]
  402ad8:	sbb    BYTE PTR [ecx],0x3d
  402adb:	sbb    esp,esi
  402add:	pop    esi
  402ade:	mov    ds:0x98508a18,al
  402ae3:	dec    ecx
  402ae4:	mov    edx,0xb84bc27b
  402ae9:	shr    DWORD PTR [ebx-0x104602f6],0x62
  402af0:	das    
  402af1:	cdq    
  402af2:	and    eax,0x7dd01741
  402af7:	dec    ebp
  402af8:	jmp    0x402b2d
  402afa:	xchg   edx,eax
  402afb:	ret    0x4cc5
  402afe:	ret    0xca1d
  402b01:	jnp    0x402b41
  402b03:	xchg   ebp,eax
  402b04:	jo     0x402b1c
  402b06:	inc    esi
  402b07:	pop    ebx
  402b08:	add    al,0xf5
  402b0a:	pop    ebx
  402b0b:	mov    dl,0xa3
  402b0d:	enter  0x1050,0xf0
  402b11:	in     al,dx
  402b12:	in     eax,0x93
  402b14:	in     al,dx
  402b15:	out    dx,al
  402b16:	in     al,dx
  402b17:	lock jbe 0x402b1b
  402b1a:	push   ecx
  402b1b:	xor    al,0x85
  402b1d:	retf   
  402b1e:	jg     0x402aff
  402b20:	push   ds
  402b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b22:	xlat   BYTE PTR ds:[ebx]
  402b23:	add    DWORD PTR [edx],eax
  402b25:	add    al,0xe8
  402b27:	adc    dl,BYTE PTR [esi+0x73d2fbd9]
  402b2d:	ins    BYTE PTR es:[edi],dx
  402b2e:	jb     0x402b43
  402b30:	jno    0x402ad4
  402b32:	sub    BYTE PTR [edx],al
  402b34:	mov    bl,dl
  402b36:	cld    
  402b37:	jecxz  0x402b7a
  402b39:	lahf   
  402b3a:	mov    eax,ds:0x462b1ee6
  402b3f:	jge    0x402b06
  402b41:	xchg   esi,eax
  402b42:	dec    ebp
  402b43:	stc    
  402b44:	cmp    bl,BYTE PTR [ebx]
  402b46:	push   0xc8d0fb32
  402b4b:	pop    ebp
  402b4c:	pop    ds
  402b4d:	test   bh,cl
  402b4f:	xchg   DWORD PTR [ebx-0x33],esp
  402b52:	pop    ecx
  402b53:	daa    
  402b54:	sub    ch,ah
  402b56:	push   0xffffff9e
  402b58:	fwait
  402b59:	lods   al,BYTE PTR ds:[esi]
  402b5a:	lods   al,BYTE PTR ds:[esi]
  402b5b:	inc    esp
  402b5c:	imul   edi,DWORD PTR [eax],0xffffff9f
  402b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b60:	jle    0x402aff
  402b62:	les    ebp,FWORD PTR [edx-0x422d5c29]
  402b68:	test   DWORD PTR [edi+0x69],ebx
  402b6b:	push   esp
  402b6c:	push   esp
  402b6d:	fistp  DWORD PTR [ebx+0x559ffbec]
  402b73:	iret   
  402b74:	mov    ebp,0xf7386d70
  402b79:	inc    edi
  402b7a:	mov    ch,0x31
  402b7c:	or     eax,0x1558673b
  402b81:	retf   0x316a
  402b84:	fisub  WORD PTR [esi-0x37dadb8b]
  402b8a:	xchg   edx,eax
  402b8b:	push   ecx
  402b8c:	imul   edx,esp,0xffffffe3
  402b8f:	push   esi
  402b90:	es call 0x41adfa61
  402b96:	je     0x402b5c
  402b98:	dec    eax
  402b99:	and    eax,0xbe52384e
  402b9e:	sbb    al,BYTE PTR [ebx-0x5e019972]
  402ba4:	je     0x402b78
  402ba6:	clc    
  402ba7:	jne    0x402bae
  402ba9:	mov    ch,0x94
  402bab:	push   cs
  402bac:	cmp    esi,ebx
  402bae:	sbb    eax,0xddafdec4
  402bb3:	push   es
  402bb4:	xchg   esi,eax
  402bb5:	gs (bad) 
  402bb7:	sbb    al,0xed
  402bb9:	mov    bh,0x60
  402bbb:	push   eax
  402bbc:	stos   BYTE PTR es:[edi],al
  402bbd:	test   al,0xea
  402bbf:	(bad)  
  402bc0:	ins    BYTE PTR es:[edi],dx
  402bc1:	xchg   edi,eax
  402bc2:	imul   edx,edx,0xffffffd0
  402bc5:	xchg   esi,eax
  402bc6:	jno    0x402bbf
  402bc8:	pop    ebx
  402bc9:	sub    al,0x90
  402bcb:	jecxz  0x402c2c
  402bcd:	retf   
  402bce:	enter  0xcf5,0x8a
  402bd2:	jmp    DWORD PTR [edi]
  402bd4:	leave  
  402bd5:	bound  ecx,QWORD PTR [esi-0x71]
  402bd8:	or     BYTE PTR [eax+0x1161bcfa],0xcf
  402bdf:	mov    ds:0x2c4e50ec,al
  402be4:	pop    ss
  402be5:	retf   
  402be6:	jb     0x402c16
  402be8:	addr16 sub eax,0xa638b5da
  402bee:	xchg   ebp,eax
  402bef:	out    dx,al
  402bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bf1:	fistp  WORD PTR [edi-0x53a5849c]
  402bf7:	pop    ss
  402bf8:	mov    eax,ds:0x34eed41a
  402bfd:	mov    ah,0x6e
  402bff:	int3   
  402c00:	ds lock daa 
  402c03:	test   DWORD PTR [esi+0x65106227],ebx
  402c09:	adc    al,0x5e
  402c0b:	cli    
  402c0c:	dec    edx
  402c0d:	pop    edi
  402c0e:	xor    eax,0xdb097b78
  402c13:	(bad)  
  402c14:	mov    dl,0x58
  402c16:	int3   
  402c17:	int    0xb0
  402c19:	push   eax
  402c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c1b:	xor    al,BYTE PTR [edi+0x7cac1daf]
  402c21:	and    DWORD PTR [esi+eiz*1-0x2dac46ec],0xffffffb4
  402c29:	cmc    
  402c2a:	xlat   BYTE PTR ds:[ebx]
  402c2b:	call   0x3e84:0xf9d232b5
  402c32:	call   0xabb510f1
  402c37:	test   al,0x6b
  402c39:	fs rcr al,cl
  402c3c:	and    al,0x69
  402c3e:	or     ebp,DWORD PTR [ecx-0x4b]
  402c41:	sbb    edi,DWORD PTR [ecx*1-0xdc45479]
  402c48:	push   0xffffffaa
  402c4a:	ret    0x76e6
  402c4d:	jg     0x402cab
  402c4f:	cmp    al,0x49
  402c51:	retf   
  402c52:	ror    edi,0xf1
  402c55:	loope  0x402c5d
  402c57:	jne    0x402c2b
  402c59:	dec    ebx
  402c5a:	outs   dx,BYTE PTR ds:[esi]
  402c5b:	adc    al,0x6b
  402c5d:	out    dx,eax
  402c5e:	loopne 0x402c44
  402c60:	jmp    0x402c06
  402c62:	add    bl,BYTE PTR [edx+0x7b7f3a50]
  402c68:	jmp    0x418f7acd
  402c6d:	push   ecx
  402c6e:	repz clc 
  402c70:	sbb    esi,DWORD PTR [edx-0x69f317a6]
  402c76:	fdiv   QWORD PTR [edx]
  402c78:	or     DWORD PTR [eax+0x1dd86d2b],ebx
  402c7e:	stc    
  402c7f:	sub    al,0x5c
  402c81:	jecxz  0x402cbe
  402c83:	cmp    BYTE PTR [eax],ch
  402c85:	jecxz  0x402cf6
  402c87:	jns    0x402c17
  402c89:	bound  edi,QWORD PTR ds:0x65ab61d9
  402c8f:	inc    ebp
  402c90:	lods   al,BYTE PTR ds:[esi]
  402c91:	in     al,0x9c
  402c93:	lock dec edi
  402c95:	int3   
  402c96:	xchg   ah,dh
  402c98:	ret    
  402c99:	inc    ecx
  402c9a:	out    dx,al
  402c9b:	ins    DWORD PTR es:[edi],dx
  402c9c:	xor    DWORD PTR [edi],ecx
  402c9e:	cli    
  402c9f:	ja     0x402ca6
  402ca1:	add    edx,0x6ac5c0e8
  402ca7:	in     al,dx
  402ca8:	pushf  
  402ca9:	inc    ebp
  402caa:	xor    eax,0xb2fe73b5
  402caf:	push   ebp
  402cb0:	sub    ah,BYTE PTR [ecx]
  402cb2:	push   ecx
  402cb3:	add    ebp,esi
  402cb5:	push   0x1635d859
  402cba:	mov    DWORD PTR [ebx+0x3be41291],edx
  402cc0:	int    0x5e
  402cc2:	push   0xd3975c08
  402cc7:	stos   BYTE PTR es:[edi],al
  402cc8:	sysexit 
  402cca:	or     BYTE PTR [edx-0x5f],ch
  402ccd:	sub    dl,dl
  402ccf:	mov    ebp,0x749dbbd5
  402cd4:	mov    bl,0xd2
  402cd6:	inc    eax
  402cd7:	jmp    0x402ca3
  402cd9:	pop    ds
  402cda:	je     0x402ce1
  402cdc:	push   esi
  402cdd:	inc    edi
  402cde:	icebp  
  402cdf:	lds    eax,FWORD PTR [eax-0x18]
  402ce2:	and    BYTE PTR [ecx],ah
  402ce4:	xchg   DWORD PTR [ecx+0x1b81fa36],esp
  402cea:	mov    eax,fs
  402cec:	pop    esp
  402ced:	dec    esp
  402cee:	pop    edx
  402cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cf0:	xchg   edx,eax
  402cf1:	jmp    0x402d47
  402cf3:	inc    edx
  402cf4:	repnz xchg ah,dh
  402cf7:	fadd   QWORD PTR [ecx-0x4534007a]
  402cfd:	push   edx
  402cfe:	int3   
  402cff:	lea    eax,[eax+0x1ea365d1]
  402d05:	mov    dh,0x39
  402d07:	pop    edx
  402d08:	add    esi,DWORD PTR [ecx-0x4]
  402d0b:	pop    ecx
  402d0c:	pusha  
  402d0d:	clc    
  402d0e:	dec    edx
  402d0f:	and    edx,edx
  402d11:	jg     0x402d4e
  402d13:	xchg   esp,eax
  402d14:	mov    edi,0xad745543
  402d19:	hlt    
  402d1a:	dec    ecx
  402d1b:	outs   dx,BYTE PTR ds:[si]
  402d1d:	fld    TBYTE PTR [eax-0x56]
  402d20:	mov    cl,0x2d
  402d22:	std    
  402d23:	popf   
  402d24:	lea    eax,[ebx+0x4c]
  402d27:	outs   dx,DWORD PTR es:[esi]
  402d29:	idiv   dh
  402d2b:	out    0xa4,eax
  402d2d:	je     0x402d3f
  402d2f:	(bad)  
  402d30:	xchg   esi,eax
  402d31:	mov    edx,DWORD PTR [ebp+0x2682d300]
  402d37:	pusha  
  402d38:	sub    al,0x71
  402d3a:	mov    eax,0xb1ae63a5
  402d3f:	outs   dx,DWORD PTR ds:[esi]
  402d40:	and    al,0xa6
  402d42:	and    DWORD PTR [edx+ecx*2],eax
  402d45:	mov    edi,0x3d821a66
  402d4a:	and    ebx,DWORD PTR [esi-0x6dad3a85]
  402d50:	mov    bl,0xf5
  402d52:	in     eax,0xd3
  402d54:	inc    edx
  402d55:	idiv   BYTE PTR [esi-0x246c28dc]
  402d5b:	outs   dx,DWORD PTR ds:[esi]
  402d5c:	xor    eax,DWORD PTR [edi+eiz*4-0x567293b8]
  402d63:	sub    ecx,DWORD PTR [edi+0x59]
  402d66:	cmc    
  402d67:	or     al,0x2e
  402d69:	out    dx,al
  402d6a:	or     BYTE PTR [eax-0x2d],bh
  402d6d:	(bad)
  402d70:	into   
  402d71:	or     eax,0x16cc47fc
  402d76:	cmp    al,0xb
  402d78:	icebp  
  402d79:	ins    DWORD PTR es:[edi],dx
  402d7a:	cmc    
  402d7b:	outs   dx,DWORD PTR ds:[esi]
  402d7c:	test   eax,0x317a8c64
  402d81:	sub    edi,DWORD PTR [eax+edi*8+0x1ec98e6e]
  402d88:	hlt    
  402d89:	leave  
  402d8a:	add    bl,BYTE PTR ds:0x7543bbbc
  402d90:	adc    BYTE PTR [ebx+0x35],dl
  402d93:	lahf   
  402d94:	cmp    BYTE PTR ds:0xe67903cd,dl
  402d9a:	imul   eax,DWORD PTR [ebp+0x707aa515],0xffffffa2
  402da1:	and    ecx,ebx
  402da3:	adc    eax,0x4d760839
  402da8:	mov    edi,ebx
  402daa:	fmul   QWORD PTR [edi-0x1d]
  402dad:	xor    DWORD PTR [ecx],eax
  402daf:	sub    edx,eax
  402db1:	or     cl,bl
  402db3:	pusha  
  402db4:	push   eax
  402db5:	sahf   
  402db6:	xor    ah,BYTE PTR [bp+di+0x8d]
  402dbb:	add    dh,dl
  402dbd:	adc    BYTE PTR [edi],bl
  402dbf:	adc    esi,DWORD PTR [edx]
  402dc1:	stc    
  402dc2:	cmp    BYTE PTR [eax-0x2b],0x1c
  402dc6:	fidivr WORD PTR [edi]
  402dc8:	lods   eax,DWORD PTR ds:[esi]
  402dc9:	mov    dl,0xe3
  402dcb:	adc    eax,0x514fcc13
  402dd0:	jle    0x402dfc
  402dd2:	xchg   BYTE PTR [ebx+0x7d],ah
  402dd5:	xor    bl,al
  402dd7:	sbb    DWORD PTR [esi],eax
  402dd9:	sbb    bl,dl
  402ddb:	out    dx,eax
  402ddc:	or     al,0xc3
  402dde:	xor    al,0xb8
  402de0:	ja     0x402e04
  402de2:	in     eax,0xd
  402de4:	cmp    eax,0x6d0586a6
  402de9:	test   BYTE PTR [edx],bl
  402deb:	jl     0x402e15
  402ded:	adc    al,0xb1
  402def:	repnz push esp
  402df1:	jle    0x402e58
  402df3:	mov    ds:0x64d231d5,al
  402df8:	lock scas al,BYTE PTR es:[edi]
  402dfa:	out    dx,al
  402dfb:	(bad)  
  402dfc:	out    0xb0,eax
  402dfe:	les    edi,FWORD PTR [ecx-0x2f98052f]
  402e04:	push   ds
  402e05:	jl     0x402dc5
  402e07:	scas   al,BYTE PTR es:[edi]
  402e08:	sub    al,BYTE PTR [ecx]
  402e0a:	cld    
  402e0b:	xor    BYTE PTR [edi],bl
  402e0d:	add    ecx,eax
  402e0f:	push   eax
  402e10:	sbb    esi,eax
  402e12:	add    bl,dl
  402e14:	pop    ecx
  402e15:	inc    ebx
  402e16:	div    DWORD PTR [eax-0x3d2fef8]
  402e1c:	push   es
  402e1d:	dec    ebp
  402e1e:	(bad)  
  402e1f:	cwde   
  402e20:	addr16 mov edi,0x6d179d2d
  402e26:	pop    esi
  402e27:	rcr    bl,0xc8
  402e2a:	imul   edi,DWORD PTR [edx+0x12],0x6e
  402e2e:	and    eax,0x5619c25b
  402e33:	leave  
  402e34:	in     al,dx
  402e35:	aad    0xf8
  402e37:	int    0xb2
  402e39:	mov    ah,0xd4
  402e3b:	sbb    dl,BYTE PTR [ebx+ebx*4+0x45]
  402e3f:	enter  0x9e4a,0x9b
  402e43:	retf   0x7898
  402e46:	ds xchg ebp,eax
  402e48:	inc    edx
  402e49:	inc    ecx
  402e4a:	sbb    BYTE PTR [ebp-0x5db66ccf],ah
  402e50:	sbb    DWORD PTR [esi-0x30131198],ebx
  402e56:	mov    ds:0x84ca461a,eax
  402e5b:	ror    esp,cl
  402e5d:	lahf   
  402e5e:	lock scas al,BYTE PTR es:[edi]
  402e60:	(bad)  
  402e61:	adc    al,0x89
  402e63:	ficomp WORD PTR [edx+0x3f]
  402e66:	and    dl,BYTE PTR [eax+0x40a2676b]
  402e6c:	mov    ds:0x265d6515,eax
  402e71:	(bad)  
  402e72:	push   ebp
  402e73:	push   cs
  402e74:	xchg   esi,eax
  402e75:	and    al,0xe7
  402e77:	stos   DWORD PTR es:[edi],eax
  402e78:	push   0xffffffed
  402e7a:	jle    0x402e8d
  402e7c:	push   0x1c
  402e7e:	loop   0x402ed8
  402e80:	adc    BYTE PTR [ecx-0x25fcf79f],cl
  402e86:	in     eax,0xac
  402e88:	loop   0x402eed
  402e8a:	dec    edx
  402e8b:	pop    ss
  402e8c:	rcr    al,1
  402e8e:	es in  eax,dx
  402e90:	out    0x81,al
  402e92:	adc    eax,0xb48f4e6b
  402e97:	jae    0x402e7e
  402e99:	(bad)  
  402e9a:	out    dx,al
  402e9b:	xchg   esp,eax
  402e9c:	je     0x402e2d
  402e9e:	xor    DWORD PTR [eax],esi
  402ea0:	adc    esi,DWORD PTR [eax+ebx*4-0x5aa12f5d]
  402ea7:	sub    eax,0xf8860aec
  402eac:	inc    esp
  402ead:	xor    al,0x7f
  402eaf:	mov    al,BYTE PTR [ebx]
  402eb1:	adc    DWORD PTR [ecx+0x6cb40242],edi
  402eb7:	mov    ah,bl
  402eb9:	outs   dx,BYTE PTR ds:[esi]
  402eba:	jno    0x402ef9
  402ebc:	and    ebp,DWORD PTR [edi-0x5a]
  402ebf:	(bad)  
  402ec0:	push   edx
  402ec1:	test   DWORD PTR [ecx],esi
  402ec3:	xlat   BYTE PTR ds:[ebx]
  402ec4:	adc    al,0xae
  402ec6:	push   0x9f661f01
  402ecb:	sbb    ah,ah
  402ecd:	and    BYTE PTR [edi],bh
  402ecf:	xchg   edi,eax
  402ed0:	push   edx
  402ed1:	std    
  402ed2:	and    eax,esp
  402ed4:	sbb    al,0xa9
  402ed6:	mov    ch,ch
  402ed8:	sbb    BYTE PTR [eax],cl
  402eda:	outs   dx,DWORD PTR ds:[esi]
  402edb:	mov    dh,0x58
  402edd:	div    al
  402edf:	lods   eax,DWORD PTR fs:[esi]
  402ee1:	jo     0x402ef8
  402ee3:	cmp    DWORD PTR [edi],edx
  402ee5:	ins    DWORD PTR es:[edi],dx
  402ee6:	jae    0x402f4a
  402ee8:	jne    0x402f09
  402eea:	jno    0x402e84
  402eec:	icebp  
  402eed:	in     eax,0xff
  402eef:	or     dh,BYTE PTR [esi-0x79244832]
  402ef5:	aad    0x58
  402ef7:	xor    ecx,ebp
  402ef9:	shr    DWORD PTR [esi+0x2],cl
  402efc:	shl    bh,cl
  402efe:	lock lods al,BYTE PTR ds:[esi]
  402f00:	dec    ebx
  402f01:	and    DWORD PTR [edx+0x6d],edi
  402f04:	add    eax,0x61e80837
  402f09:	rcl    DWORD PTR [eax+0x25576bbf],1
  402f0f:	or     eax,0x25cd54e
  402f14:	and    ah,bl
  402f16:	pop    ecx
  402f17:	push   edx
  402f18:	cmp    eax,0x2683e828
  402f1d:	jmp    0xa71f:0x47433fc4
  402f24:	stc    
  402f25:	(bad)  
  402f26:	fadd   QWORD PTR [ebx-0x21e271f9]
  402f2c:	jo     0x402fa1
  402f2e:	add    DWORD PTR [eax-0xf6047d],ecx
  402f34:	aaa    
  402f35:	mov    ds:0x304c05e6,eax
  402f3a:	mov    ebx,0x71583af5
  402f3f:	jae    0x402f3c
  402f41:	jbe    0x402f61
  402f43:	ret    
  402f44:	cld    
  402f45:	retf   0xc1d5
  402f48:	aaa    
  402f49:	xchg   edx,eax
  402f4a:	fild   QWORD PTR [eax-0x64]
  402f4d:	repz sbb eax,0x506aafd8
  402f53:	mov    ebx,0x90e2021b
  402f58:	ss xchg esp,eax
  402f5a:	cmp    eax,0x882d945
  402f5f:	rcr    BYTE PTR [esi-0x4c54c001],1
  402f65:	mov    al,ds:0x60ccfc28
  402f6a:	inc    edi
  402f6b:	mov    al,0x83
  402f6d:	(bad)  
  402f6e:	shl    ebx,cl
  402f70:	add    DWORD PTR [ebp-0x3a],esp
  402f73:	mov    esp,0xc193734f
  402f78:	mov    ebx,0xb485cd93
  402f7d:	fmul   st,st(1)
  402f7f:	add    al,0xfa
  402f81:	pop    ecx
  402f82:	test   al,0x5e
  402f84:	rcr    DWORD PTR [eax],1
  402f86:	(bad)  
  402f87:	(bad)  
  402f88:	jp     0x402f6a
  402f8a:	mov    cl,0x35
  402f8c:	rcl    DWORD PTR [ebp+ebx*2-0x3ba33ec9],cl
  402f93:	ret    0xb5a7
  402f96:	adc    ch,al
  402f98:	fmul   DWORD PTR [ecx+esi*2-0x7b794ef9]
  402f9f:	shr    DWORD PTR [ebp+0xf],0x6
  402fa3:	out    0xc5,eax
  402fa5:	xor    al,BYTE PTR [edi]
  402fa7:	jg     0x40301d
  402fa9:	dec    edx
  402faa:	es xchg esi,eax
  402fac:	xchg   DWORD PTR [esi-0x3db66a7],edi
  402fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fb3:	xchg   ecx,eax
  402fb4:	cmp    DWORD PTR [ebx+ebp*8],0xffffff9b
  402fb8:	cwde   
  402fb9:	repz repnz sub ebp,ecx
  402fbd:	retf   0x9330
  402fc0:	jnp    0x402fe9
  402fc2:	pop    esp
  402fc3:	lock inc esp
  402fc5:	mov    ds:0x2b0c080,al
  402fca:	cmp    BYTE PTR [esi-0x24],ah
  402fcd:	xchg   ebp,eax
  402fce:	sub    BYTE PTR [ebp-0x7d],0x2f
  402fd2:	inc    esi
  402fd3:	adc    eax,0x4b418dff
  402fd8:	ror    ecx,0x42
  402fdb:	xchg   edi,eax
  402fdc:	stos   BYTE PTR es:[edi],al
  402fdd:	shr    DWORD PTR fs:[esi],1
  402fe0:	int    0x6f
  402fe2:	iret   
  402fe3:	in     eax,0xaf
  402fe5:	sahf   
  402fe6:	pop    es
  402fe7:	sti    
  402fe8:	fild   WORD PTR [edx+0x5ac03c5f]
  402fee:	inc    ecx
  402fef:	lahf   
  402ff0:	inc    esp
  402ff1:	retf   
  402ff2:	push   ds
  402ff3:	mov    al,0x99
  402ff5:	repnz inc ebp
  402ff7:	or     al,0x31
  402ff9:	shl    DWORD PTR [ecx-0x5dc312b7],0xea
  403000:	punpckldq mm6,DWORD PTR [esi-0x49]
  403004:	and    al,0x32
  403006:	out    0xb4,al
  403008:	dec    edi
  403009:	sar    ah,0xbd
  40300c:	test   al,0x49
  40300e:	ins    DWORD PTR es:[edi],dx
  40300f:	xor    al,0x85
  403011:	pushf  
  403012:	cs dec edi
  403014:	sub    cl,BYTE PTR [edx+0x29]
  403017:	fnsave [eax-0x56]
  40301a:	ja     0x40309b
  40301c:	dec    ecx
  40301d:	jne    0x40305c
  40301f:	sub    bh,dh
  403021:	jno    0x402fde
  403023:	inc    esp
  403024:	(bad)  
  403025:	popf   
  403026:	stos   BYTE PTR es:[edi],al
  403027:	jp     0x40309e
  403029:	test   al,0xb6
  40302b:	mov    eax,0xd4271ba4
  403030:	or     al,0x41
  403032:	in     eax,dx
  403033:	dec    esp
  403034:	xor    BYTE PTR [esi],dh
  403036:	sub    eax,0x50a0a2f
  40303b:	xor    DWORD PTR [ebp+eax*1-0x70],esp
  40303f:	add    DWORD PTR [edx-0x3f56a403],edx
  403045:	or     edx,DWORD PTR [edx]
  403047:	sti    
  403048:	xor    al,0xd3
  40304a:	or     al,0xab
  40304c:	xchg   DWORD PTR [edi-0x1d],ecx
  40304f:	jo     0x403031
  403051:	scas   al,BYTE PTR es:[edi]
  403052:	cdq    
  403053:	sahf   
  403054:	xor    bh,al
  403056:	sti    
  403057:	jo     0x403003
  403059:	xchg   BYTE PTR [edx-0x5b],bh
  40305c:	icebp  
  40305d:	gs jbe 0x403023
  403060:	xchg   BYTE PTR [ebp-0xbf931fe],dh
  403066:	sbb    al,0xb5
  403068:	stos   DWORD PTR es:[edi],eax
  403069:	add    eax,0x9f3fe00d
  40306e:	pop    esi
  40306f:	daa    
  403070:	or     BYTE PTR [ebx+0xe6781be],ch
  403076:	xchg   ecx,eax
  403077:	xchg   esp,eax
  403078:	push   ax
  40307a:	fcom   DWORD PTR [edi-0x7d]
  40307d:	or     ah,dh
  40307f:	push   ecx
  403080:	loopne 0x403016
  403082:	call   ecx
  403084:	mov    al,ds:0x6b63ca9e
  403089:	push   eax
  40308a:	call   0xef2c:0x3f13026b
  403091:	pop    eax
  403092:	leave  
  403093:	pop    esi
  403094:	xchg   ecx,eax
  403095:	mov    ah,0x9
  403097:	mov    eax,ds:0xf8edf992
  40309c:	inc    edi
  40309d:	enter  0x5001,0xc9
  4030a1:	hlt    
  4030a2:	(bad)  
  4030a3:	out    dx,eax
  4030a4:	ret    
  4030a5:	sbb    eax,0x7d1195fe
  4030aa:	mov    edx,0xedbbe1db
  4030af:	add    ah,0xa4
  4030b2:	adc    eax,0x392b2704
  4030b7:	call   0x184f051e
  4030bc:	and    eax,0xd0b7a9a1
  4030c1:	jae    0x4030f6
  4030c3:	rcr    esp,0xd8
  4030c6:	sbb    al,BYTE PTR [ebx+0x1e88150e]
  4030cc:	jb     0x403052
  4030ce:	mov    al,ds:0x2e7ceba5
  4030d3:	(bad)  
  4030d4:	adc    al,0x2a
  4030d6:	fidiv  WORD PTR [ebx+0x1b]
  4030d9:	out    0x63,eax
  4030db:	sbb    dl,BYTE PTR [ecx+0x721081f8]
  4030e1:	mov    bh,BYTE PTR [esi+0x68]
  4030e4:	outs   dx,BYTE PTR ds:[esi]
  4030e5:	lods   al,BYTE PTR ds:[esi]
  4030e7:	mov    ch,0xb2
  4030e9:	cmc    
  4030ea:	loop   0x403080
  4030ec:	loope  0x4030c7
  4030ee:	or     dh,BYTE PTR [ecx-0x56145e51]
  4030f4:	cs dec ecx
  4030f6:	mov    eax,0x8db25987
  4030fb:	ror    BYTE PTR [eax-0x39],1
  4030fe:	jb     0x40314c
  403100:	cmp    eax,0xc6982c50
  403105:	push   edi
  403106:	dec    ecx
  403107:	jb     0x403165
  403109:	test   BYTE PTR [ebp+0x46a916ad],ah
  40310f:	in     eax,0x94
  403111:	jge    0x40318a
  403113:	adc    BYTE PTR [eax],0xc5
  403116:	test   al,0x82
  403118:	xor    BYTE PTR [edx+0x1a],bl
  40311b:	mov    esi,0x6f861de0
  403120:	out    0xf5,al
  403122:	cmp    BYTE PTR [ebp-0x4f],bl
  403125:	sub    DWORD PTR [edx+0x33],0xd7dfc281
  40312c:	test   ecx,edx
  40312e:	rol    DWORD PTR [edx+0x5eb47799],0xec
  403135:	popf   
  403136:	mov    edi,0x59053994
  40313b:	ins    DWORD PTR es:[edi],dx
  40313c:	loope  0x4031a2
  40313e:	rol    DWORD PTR [edi+ecx*8],1
  403141:	jns    0x4030e5
  403143:	mov    BYTE PTR [ebp+0x7c688306],ah
  403149:	icebp  
  40314a:	cmp    BYTE PTR [edi],ah
  40314c:	test   BYTE PTR [eax+0x2089c8ac],bh
  403152:	stos   DWORD PTR es:[edi],eax
  403153:	shl    BYTE PTR [ebx+0x0],cl
  403156:	pop    ss
  403157:	popf   
  403158:	or     eax,ecx
  40315a:	push   ds
  40315b:	cmc    
  40315c:	sbb    eax,0x31de90ff
  403161:	repnz mov ebx,0xbdae97da
  403167:	clc    
  403168:	xlat   BYTE PTR ds:[ebx]
  403169:	ins    DWORD PTR es:[edi],dx
  40316a:	pusha  
  40316b:	fisttp WORD PTR [edx]
  40316d:	dec    esi
  40316e:	push   es
  40316f:	inc    ebx
  403170:	loop   0x4031b6
  403172:	fistp  QWORD PTR [esi+0x760fcecb]
  403178:	ficom  DWORD PTR [ebx-0x33]
  40317b:	mov    esp,0x1e9c4f50
  403180:	sbb    BYTE PTR [edi+ecx*1],bh
  403183:	les    edx,FWORD PTR [esi+0x400ff892]
  403189:	adc    eax,eax
  40318b:	loope  0x4031bf
  40318d:	mov    ebp,ebx
  40318f:	push   edx
  403190:	cmp    eax,0x97e19751
  403195:	jmp    0x9192:0x411ab0c5
  40319c:	data16 hlt 
  40319e:	shl    DWORD PTR [edi+0x3],cl
  4031a1:	dec    esp
  4031a2:	xchg   ecx,eax
  4031a3:	loop   0x4031f6
  4031a5:	out    dx,al
  4031a6:	ins    BYTE PTR es:[edi],dx
  4031a7:	ror    BYTE PTR [edi],cl
  4031a9:	dec    ebx
  4031aa:	aad    0x3a
  4031ac:	pusha  
  4031ad:	jg     0x4031dc
  4031af:	sub    al,0xda
  4031b1:	mov    fs,WORD PTR [esi]
  4031b3:	cdq    
  4031b4:	sbb    eax,0xa14536f0
  4031b9:	arpl   WORD PTR [ebp+0x3c6a0f5b],ax
  4031bf:	and    ecx,ecx
  4031c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031c2:	sbb    ah,BYTE PTR [ecx-0x45]
  4031c5:	loop   0x403178
  4031c7:	ja     0x40323e
  4031c9:	addr16 pop ebp
  4031cb:	jp     0x4031df
  4031cd:	out    0xbc,eax
  4031cf:	mov    bh,0x5c
  4031d1:	dec    esp
  4031d2:	ss inc esi
  4031d4:	mov    ds:0x7ed803c2,al
  4031d9:	es pop es
  4031db:	fnstenv [eax-0x2f]
  4031de:	rol    BYTE PTR [ecx-0x758bfc6a],1
  4031e4:	imul   ecx,DWORD PTR [edx],0x30ad514b
  4031ea:	or     BYTE PTR [eax+0x6cc318c6],bh
  4031f0:	dec    ecx
  4031f1:	test   BYTE PTR [edi-0x72],cl
  4031f4:	inc    edx
  4031f5:	call   0xee0:0xb9cc576e
  4031fc:	mov    bh,0x85
  4031fe:	push   eax
  4031ff:	imul   edx,DWORD PTR [edx],0x7
  403202:	cmc    
  403203:	call   0xa26ff63a
  403208:	push   esi
  403209:	cmp    cl,BYTE PTR [edx+eiz*8]
  40320c:	int    0x81
  40320e:	mov    DWORD PTR [edx],edx
  403210:	ja     0x403206
  403212:	and    bh,BYTE PTR [ebp+0x10]
  403215:	(bad)  
  403217:	xchg   ebp,eax
  403218:	mov    DWORD PTR [ebx+0x68],ebp
  40321b:	das    
  40321c:	cmp    al,0x6f
  40321e:	ins    DWORD PTR es:[edi],dx
  40321f:	jecxz  0x403291
  403221:	mov    dl,BYTE PTR [ecx+0x41]
  403224:	jnp    0x4031a8
  403226:	pusha  
  403227:	icebp  
  403228:	or     al,0x51
  40322a:	jbe    0x40323f
  40322c:	mov    ds:0xa91e0978,al
  403231:	push   ss
  403232:	inc    eax
  403233:	sti    
  403234:	bound  esi,QWORD PTR [eax]
  403236:	scas   al,BYTE PTR es:[edi]
  403237:	rol    DWORD PTR [esi-0x2c5f853],0xe5
  40323e:	inc    esi
  40323f:	xchg   edx,eax
  403240:	or     BYTE PTR [esi],bl
  403242:	or     BYTE PTR [ebx],dl
  403244:	out    dx,eax
  403245:	push   ebx
  403246:	push   ds
  403247:	xlat   BYTE PTR ds:[ebx]
  403248:	or     BYTE PTR [ebx-0x34],bh
  40324b:	imul   eax,edx,0x6844654f
  403251:	adc    BYTE PTR [ebx-0x15],ah
  403254:	mov    eax,0xc344f51c
  403259:	mov    ecx,0xcfaa4316
  40325e:	push   0x2d
  403260:	fldcw  WORD PTR [edx+0x287bd47e]
  403266:	xor    al,0x43
  403268:	ss jbe 0x403271
  40326b:	test   al,0x10
  40326d:	mov    cl,0x65
  40326f:	or     dl,BYTE PTR [edx-0x6d]
  403272:	loopne 0x40328d
  403274:	pop    esp
  403275:	sbb    dl,al
  403277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403278:	shr    DWORD PTR ds:0xddfc1bed,1
  40327e:	push   ecx
  40327f:	fidiv  DWORD PTR [ebx+edx*2+0x592f5013]
  403286:	ja     0x4032fb
  403288:	pop    edx
  403289:	add    al,0xd8
  40328b:	pop    es
  40328c:	jle    0x403213
  40328e:	ds (bad) 
  403290:	out    dx,eax
  403291:	mov    al,0x55
  403293:	cmp    al,0x4a
  403295:	outs   dx,DWORD PTR ds:[esi]
  403296:	dec    edi
  403297:	add    al,0xc4
  403299:	js     0x4032fa
  40329b:	popa   
  40329c:	pop    edi
  40329d:	dec    edi
  40329e:	sub    bl,BYTE PTR [edx]
  4032a0:	xchg   ebp,eax
  4032a1:	mov    BYTE PTR [edx],0x98
  4032a4:	add    eax,0xf5dd2e2c
  4032a9:	lods   al,BYTE PTR ds:[esi]
  4032aa:	ret    
  4032ab:	dec    ecx
  4032ac:	out    dx,eax
  4032ad:	dec    ebp
  4032ae:	test   eax,0x7b77049e
  4032b3:	test   BYTE PTR [edx],dl
  4032b5:	pop    ebp
  4032b6:	add    al,0x27
  4032b8:	imul   edi,DWORD PTR [edx+0x74],0x262c3dd2
  4032bf:	inc    eax
  4032c0:	emms   
  4032c2:	xlat   BYTE PTR ds:[ebx]
  4032c3:	xor    DWORD PTR [ebp+0x43],esi
  4032c6:	cdq    
  4032c7:	icebp  
  4032c8:	fwait
  4032c9:	sub    DWORD PTR [edx-0x7828c1fa],edx
  4032cf:	mov    ecx,0x14497f6
  4032d4:	xchg   edi,eax
  4032d5:	sahf   
  4032d6:	dec    edx
  4032d7:	mov    dh,0xf6
  4032d9:	pop    es
  4032da:	xchg   ebx,eax
  4032db:	leave  
  4032dc:	fnstcw WORD PTR [edi+eax*1]
  4032df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e0:	mov    ds:0xb1631c36,eax
  4032e5:	outs   dx,BYTE PTR ds:[esi]
  4032e6:	popa   
  4032e7:	sub    DWORD PTR [edx-0x2b],esi
  4032ea:	cdq    
  4032eb:	or     DWORD PTR [ecx+0x3ce5c514],esi
  4032f1:	sahf   
  4032f2:	std    
  4032f3:	sbb    ecx,DWORD PTR [esi]
  4032f5:	jno    0x4032f4
  4032f7:	rcl    bh,cl
  4032f9:	jne    0x4032a2
  4032fb:	jle    0x403363
  4032fd:	addr16 or eax,0x8fa45ee5
  403303:	mov    ebx,0x6793b5af
  403308:	cli    
  403309:	adc    ch,BYTE PTR [edi-0x2aa093d7]
  40330f:	js     0x4032eb
  403311:	inc    ebp
  403312:	xor    ch,ah
  403314:	adc    eax,0xaaa951da
  403319:	fisub  DWORD PTR ds:0x6e01794f
  40331f:	in     al,dx
  403320:	sub    edx,DWORD PTR [ebx-0x62e2f195]
  403326:	nop
  403327:	ror    DWORD PTR [edx+eiz*1-0x70],0xa8
  40332c:	dec    ebx
  40332d:	scas   al,BYTE PTR es:[edi]
  40332e:	xchg   edi,eax
  40332f:	pop    ecx
  403330:	sti    
  403331:	pop    ebp
  403332:	iret   
  403333:	test   al,0xbc
  403335:	xchg   ebx,eax
  403336:	mov    ecx,0x8daaba72
  40333b:	dec    ecx
  40333c:	cmp    esp,DWORD PTR [edx+ebx*4-0x48]
  403340:	fcomi  st,st(1)
  403342:	lods   eax,DWORD PTR ds:[esi]
  403343:	lods   al,BYTE PTR ds:[esi]
  403344:	loope  0x40336f
  403346:	call   0x9685:0xb48eeff1
  40334d:	xchg   edx,eax
  40334e:	add    al,0x9c
  403350:	ss add eax,0x3a823a98
  403356:	ret    
  403357:	stos   BYTE PTR es:[edi],al
  403358:	stos   BYTE PTR es:[edi],al
  403359:	xchg   edi,eax
  40335a:	mov    al,0x4f
  40335c:	push   esp
  40335d:	rcr    edx,cl
  40335f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403360:	std    
  403361:	push   eax
  403362:	pop    eax
  403363:	out    0x6b,al
  403365:	sbb    al,0xfb
  403367:	add    BYTE PTR [edi-0x5c],ah
  40336a:	les    edx,FWORD PTR [eax-0x3f]
  40336d:	adc    DWORD PTR [edx+eax*4+0x19],0xce3ede36
  403375:	mov    edi,0x807a10ac
  40337a:	fcmovu st,st(3)
  40337c:	stc    
  40337d:	loope  0x4033a2
  40337f:	ins    DWORD PTR es:[edi],dx
  403380:	jbe    0x403302
  403382:	jne    0x4033cf
  403384:	les    eax,FWORD PTR [ebx-0x1e9f53f]
  40338a:	(bad)  
  40338b:	adc    DWORD PTR [ecx-0x5],esi
  40338e:	repz mov cl,0xa
  403391:	scas   eax,DWORD PTR es:[edi]
  403392:	std    
  403393:	div    DWORD PTR [ecx]
  403395:	push   es
  403396:	add    al,0x57
  403398:	mov    dl,0x9b
  40339a:	ds sbb al,0x96
  40339d:	fwait
  40339e:	or     DWORD PTR [ebp-0x6d92f5ec],eax
  4033a4:	popf   
  4033a5:	push   0x8d3fd35d
  4033aa:	mov    BYTE PTR [ecx],bh
  4033ac:	push   edx
  4033ad:	dec    edi
  4033ae:	xor    eax,0xe3bbf710
  4033b3:	arpl   WORD PTR [ecx+edx*2],ax
  4033b6:	lods   al,BYTE PTR ds:[esi]
  4033b7:	cmp    bh,bl
  4033b9:	ret    
  4033ba:	gs in  al,0xf4
  4033bd:	add    DWORD PTR [esi+0x45d3a937],ebx
  4033c3:	xlat   BYTE PTR ds:[ebx]
  4033c4:	mov    eax,0x7da977b5
  4033c9:	fwait
  4033ca:	mov    al,0xe4
  4033cc:	pop    ebx
  4033cd:	xor    eax,edx
  4033cf:	dec    ebp
  4033d0:	mov    ecx,0xc0e9a51a
  4033d5:	xor    BYTE PTR [ebp-0x27],cl
  4033d8:	mov    cs,WORD PTR [edx]
  4033da:	mov    dl,ch
  4033dc:	xor    al,0xfe
  4033de:	sbb    DWORD PTR [eax+0x3e6acda2],esi
  4033e4:	ins    BYTE PTR es:[edi],dx
  4033e5:	mov    ebp,0xac5ada38
  4033ea:	sub    al,0xd4
  4033ec:	mov    ch,0xe
  4033ee:	jb     0x403427
  4033f0:	add    eax,0x4ae15ca6
  4033f5:	shl    DWORD PTR [edi],0xe6
  4033f8:	fcos   
  4033fa:	pop    es
  4033fb:	adc    al,0x69
  4033fd:	jmp    0xa8d0:0x368ca36d
  403404:	dec    ebp
  403405:	ja     0x4033a5
  403407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403408:	or     dh,BYTE PTR [ebx-0x3b76bc95]
  40340e:	aam    0xb
  403410:	xchg   edi,eax
  403411:	bnd jne 0x403479
  403414:	xor    ebp,DWORD PTR [eax-0xf5ee79f]
  40341a:	loop   0x40346c
  40341c:	mov    DWORD PTR [eax-0x6c44522e],edi
  403422:	mov    esi,0xbfde54d8
  403427:	push   esp
  403428:	inc    esi
  403429:	sahf   
  40342a:	sbb    ebp,edx
  40342c:	movnti DWORD PTR [ebp-0x8ed9950],esi
  403433:	dec    ecx
  403434:	loop   0x4033f5
  403436:	loop   0x4033d7
  403438:	int3   
  403439:	xor    bh,al
  40343b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40343c:	pusha  
  40343d:	mov    ds:0xa2a8e67b,al
  403442:	js     0x403467
  403444:	mov    ah,0x1d
  403446:	dec    ebx
  403447:	loop   0x40348e
  403449:	dec    sp
  40344c:	xchg   ebp,eax
  40344d:	sbb    eax,0x835db030
  403452:	outs   dx,DWORD PTR ds:[esi]
  403453:	mov    bp,0x32d5
  403457:	pushf  
  403458:	cmp    eax,0x71262b4a
  40345d:	and    ebx,0x1fc71ea1
  403463:	inc    ebx
  403464:	scas   eax,DWORD PTR es:[edi]
  403465:	arpl   dx,si
  403467:	xchg   edx,eax
  403468:	dec    ecx
  403469:	xchg   esi,eax
  40346a:	out    0xd1,al
  40346c:	sbb    eax,0x115a5e5
  403471:	and    esp,DWORD PTR [edi]
  403473:	test   BYTE PTR [ecx+eax*4],al
  403476:	out    0x45,eax
  403478:	neg    BYTE PTR [esi]
  40347a:	mov    bl,cl
  40347c:	add    esp,esi
  40347e:	jb     0x40341e
  403480:	push   ebp
  403481:	or     esi,ebx
  403483:	out    0x85,eax
  403485:	cmp    eax,0xfbceca74
  40348a:	pop    es
  40348b:	cmp    eax,0x3ce54de0
  403490:	jp     0x403427
  403492:	mov    dl,0xea
  403494:	daa    
  403495:	js     0x403469
  403497:	xchg   ebx,eax
  403498:	js     0x4034d1
  40349a:	(bad)  
  40349d:	xchg   edx,eax
  40349e:	sbb    cl,BYTE PTR [edx-0x5e]
  4034a1:	fisubr DWORD PTR [edx-0x52b629fd]
  4034a7:	jmp    0xc237:0xf6147705
  4034ae:	jg     0x403480
  4034b0:	daa    
  4034b1:	cli    
  4034b2:	or     al,0xba
  4034b4:	jmp    0x670c:0xf30665d
  4034bb:	fistp  DWORD PTR [edx-0x7b]
  4034be:	xchg   esi,eax
  4034bf:	push   0x30
  4034c1:	iret   
  4034c2:	fst    QWORD PTR [ebp-0x5cc34f8a]
  4034c8:	push   ecx
  4034c9:	jmp    0x1879:0xe3e260f4
  4034d0:	or     BYTE PTR fs:[edi],dh
  4034d3:	dec    esp
  4034d4:	lahf   
  4034d5:	or     al,0x46
  4034d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034d8:	jmp    0x91e913fa
  4034dd:	sbb    ebx,DWORD PTR [edi]
  4034df:	jp     0x403532
  4034e1:	sti    
  4034e2:	xor    eax,0xd2dbe83b
  4034e7:	aas    
  4034e8:	sub    al,0x99
  4034ea:	xor    BYTE PTR [ecx+0x620fbfe5],al
  4034f0:	sar    BYTE PTR [edx+0x60964791],0x8
  4034f7:	seta   BYTE PTR [edx+0x6a]
  4034fb:	jnp    0x403554
  4034fd:	ins    DWORD PTR es:[edi],dx
  4034fe:	push   edx
  4034ff:	scas   al,BYTE PTR es:[edi]
  403500:	(bad)  
  403501:	jmp    0x4aac7363
  403506:	mov    edx,0xadbf0e55
  40350b:	pop    esi
  40350c:	popf   
  40350d:	popf   
  40350e:	(bad)  
  40350f:	and    BYTE PTR [edi+0x3916655d],dh
  403515:	dec    ebx
  403516:	pop    es
  403517:	sar    BYTE PTR [edi+0x1f],0x45
  40351b:	enter  0x1e1b,0x1b
  40351f:	stc    
  403520:	loop   0x403508
  403522:	mov    esi,0x28513623
  403527:	sub    dl,BYTE PTR [ebx-0x5455dc78]
  40352d:	into   
  40352e:	(bad)  
  40352f:	repnz cli 
  403531:	(bad)  
  403532:	sar    DWORD PTR [eax-0x1aa5a09],1
  403538:	sar    DWORD PTR [ecx+0xdabb23a],cl
  40353e:	mov    edi,DWORD PTR [edx+0x6108070b]
  403544:	jmp    0x403558
  403546:	out    dx,eax
  403547:	jecxz  0x4034cf
  403549:	xchg   esi,eax
  40354a:	in     eax,dx
  40354b:	inc    esp
  40354c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40354d:	mov    BYTE PTR [edi],dl
  40354f:	out    0xb,al
  403551:	sub    BYTE PTR [edx-0x5f2ab3b8],al
  403557:	or     dl,0xcc
  40355a:	call   0xd1410646
  40355f:	adc    eax,0x3a2a14cf
  403564:	pusha  
  403565:	sub    DWORD PTR ss:[ebx+0x4d2f0c38],ecx
  40356c:	xchg   ecx,eax
  40356d:	pusha  
  40356e:	inc    DWORD PTR es:[eax+0x5]
  403572:	push   esp
  403573:	cmp    cl,dl
  403575:	mov    ah,0x0
  403577:	inc    edi
  403578:	pop    esi
  403579:	and    al,0x7f
  40357b:	jo     0x40356e
  40357d:	mov    al,0xcb
  40357f:	pop    edx
  403580:	cwd    
  403582:	(bad)  
  403583:	cmp    DWORD PTR [edx],esp
  403585:	cli    
  403586:	fstp   DWORD PTR [edx+edi*4-0x50]
  40358a:	mov    ebp,0xb1c8b17f
  40358f:	pop    ebx
  403590:	or     eax,0xb65e6814
  403595:	fstp   QWORD PTR [edi+edi*1+0x23c7cf59]
  40359c:	sti    
  40359d:	add    cl,ch
  40359f:	mov    bh,0xfe
  4035a1:	jb     0x4035a4
  4035a3:	cld    
  4035a4:	push   ds
  4035a5:	xor    BYTE PTR [edx+ecx*8+0x2a1a415d],bh
  4035ac:	adc    ecx,DWORD PTR [edi-0x29d0598a]
  4035b2:	pop    ss
  4035b3:	call   0xb129:0x6398639d
  4035ba:	inc    esp
  4035bb:	je     0x403637
  4035bd:	dec    eax
  4035be:	lods   al,BYTE PTR ds:[esi]
  4035bf:	dec    esi
  4035c0:	and    BYTE PTR [esi+0x26],dh
  4035c3:	xchg   dh,ch
  4035c5:	or     esi,esi
  4035c7:	sub    DWORD PTR [esi+0x71a353bc],ebp
  4035cd:	loop   0x40357c
  4035cf:	mov    edi,DWORD PTR [edi+0xa253533]
  4035d5:	add    bl,BYTE PTR [esi-0x1b]
  4035d8:	add    eax,DWORD PTR [ecx-0x5ce1db40]
  4035de:	pop    esi
  4035df:	outs   dx,BYTE PTR ds:[esi]
  4035e0:	or     eax,0x1ab04b92
  4035e5:	sbb    eax,0x8d613430
  4035ea:	pop    esi
  4035eb:	cmp    bh,BYTE PTR [eax]
  4035ed:	xor    BYTE PTR [ebp+0x7ae86fa3],dl
  4035f3:	shl    bl,1
  4035f5:	inc    ebx
  4035f6:	popf   
  4035f7:	and    bh,BYTE PTR [ebx]
  4035f9:	sub    al,cl
  4035fb:	aad    0x4
  4035fd:	xchg   ecx,eax
  4035fe:	mov    ebp,DWORD PTR [edi]
  403600:	cmp    ecx,ebx
  403602:	jne    0x40364c
  403604:	push   ss
  403605:	mov    ch,0x84
  403607:	sub    BYTE PTR [eax+0x33d7a280],ah
  40360d:	pop    edi
  40360e:	(bad)  
  40360f:	pop    ecx
  403610:	push   edx
  403611:	stc    
  403612:	imul   ebx,DWORD PTR [esi],0xffffff87
  403615:	xor    dl,ah
  403617:	push   cs
  403618:	outs   dx,BYTE PTR ds:[esi]
  403619:	pop    esi
  40361a:	call   0x2bb8d810
  40361f:	pop    edi
  403620:	or     DWORD PTR [ebx-0x757903d8],edi
  403626:	or     eax,0xcf694ce0
  40362b:	fcomp  QWORD PTR [ebx]
  40362d:	out    dx,al
  40362e:	jp     0x4035b7
  403630:	fild   DWORD PTR [edx]
  403632:	mov    dh,0x0
  403634:	das    
  403635:	fdivr  DWORD PTR [esi-0x31]
  403638:	outs   dx,DWORD PTR ds:[esi]
  403639:	or     al,0x3c
  40363b:	loope  0x403691
  40363d:	repnz sbb ah,al
  403640:	fsubr  DWORD PTR [ebx]
  403642:	jns    0x40367b
  403644:	dec    esp
  403645:	mov    ebp,DWORD PTR [esi-0x5c15a053]
  40364b:	(bad)
  40364e:	cmp    ch,BYTE PTR [edi]
  403650:	mov    es,WORD PTR [esi-0x1656055b]
  403656:	pop    edi
  403657:	jmp    0xccb0b78d
  40365c:	dec    edi
  40365d:	mov    dh,0x82
  40365f:	adc    eax,0x8bcc5c7a
  403664:	sti    
  403665:	xchg   ecx,eax
  403666:	sbb    al,0xa5
  403668:	bound  ebp,QWORD PTR [edx+0x4ef382e6]
  40366e:	mov    ah,0xa8
  403670:	aaa    
  403671:	dec    ecx
  403672:	shl    esp,cl
  403674:	dec    ebp
  403675:	or     bh,BYTE PTR [edi-0x71c39d73]
  40367b:	dec    edx
  40367c:	xor    BYTE PTR [edx-0x75bf2fbe],ch
  403682:	aaa    
  403683:	das    
  403684:	clc    
  403685:	loop   0x40366d
  403687:	lds    ebx,FWORD PTR ds:[edx+0x55193cd9]
  40368e:	dec    esp
  40368f:	shl    BYTE PTR [edi+0x7d1087c9],1
  403695:	mov    ebx,0x641a7ab5
  40369a:	pushf  
  40369b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40369c:	or     edi,DWORD PTR [ebx-0x5]
  40369f:	mov    al,ds:0xa71d8684
  4036a4:	xchg   edx,eax
  4036a5:	sub    BYTE PTR [edi-0x3c],0xf7
  4036a9:	pop    ebp
  4036aa:	add    bx,WORD PTR [ebp-0x525a2445]
  4036b1:	jg     0x4036ec
  4036b3:	sub    eax,0x555578f7
  4036b8:	mov    eax,ds:0x702b2317
  4036bd:	sti    
  4036be:	or     al,0x63
  4036c0:	xor    BYTE PTR [edx+0x19175247],0xe3
  4036c7:	ja     0x4036ce
  4036c9:	daa    
  4036ca:	inc    ebp
  4036cb:	mov    edi,0xdee9fed6
  4036d0:	sbb    BYTE PTR [esi-0x52a6eb7c],bl
  4036d6:	(bad)  
  4036d7:	pusha  
  4036d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036d9:	sub    ebx,esp
  4036db:	fbld   TBYTE PTR [ebp-0x6b]
  4036de:	cmp    ecx,esp
  4036e0:	popf   
  4036e1:	pop    ss
  4036e2:	cmp    edi,esi
  4036e4:	adc    BYTE PTR [edx],dl
  4036e6:	dec    eax
  4036e7:	inc    BYTE PTR [esi+0x13351991]
  4036ed:	push   ebx
  4036ee:	adc    al,0xdd
  4036f0:	or     DWORD PTR [ecx],0x88ee9ca5
  4036f6:	mov    edi,0x90137ce9
  4036fb:	cli    
  4036fc:	push   0xa3168686
  403701:	bound  edi,QWORD PTR [edx-0x271c25c0]
  403707:	mov    al,0x18
  403709:	mov    ecx,0x96d904dd
  40370e:	mov    bh,0xf
  403710:	push   ebp
  403711:	mov    bh,0xa7
  403713:	ss fcom st(6)
  403716:	rcl    BYTE PTR [esi],cl
  403718:	add    BYTE PTR [ecx-0x1219070e],0xc
  40371f:	add    BYTE PTR [eax],dh
  403721:	shl    dl,cl
  403723:	adc    eax,DWORD PTR [esi]
  403725:	retf   
  403726:	adc    ebx,esi
  403728:	idiv   DWORD PTR [edi+0x66466ebe]
  40372e:	jnp    0x403715
  403730:	push   edx
  403731:	jns    0x4036cc
  403733:	scas   al,BYTE PTR es:[edi]
  403734:	cs popf 
  403736:	cmp    ebx,esp
  403738:	or     esi,DWORD PTR [eax]
  40373a:	aad    0x8b
  40373c:	sub    BYTE PTR [ecx-0x75],0x6f
  403740:	push   es
  403741:	leave  
  403742:	mov    edx,0x464b0c9b
  403747:	in     al,dx
  403748:	sahf   
  403749:	mov    dh,bl
  40374b:	add    DWORD PTR ds:0x5688d384,0xaa484e71
  403755:	mov    al,ds:0xd5f71d2e
  40375a:	sub    al,0xfe
  40375c:	outs   dx,DWORD PTR ds:[esi]
  40375d:	inc    edx
  40375e:	ins    BYTE PTR es:[edi],dx
  40375f:	clc    
  403760:	mov    ds:0x3d63f3d1,eax
  403765:	and    al,BYTE PTR [edi+0x65]
  403768:	mov    eax,0xcdc2d396
  40376d:	jmp    0x2be0:0x6c1b3f1e
  403774:	fld    DWORD PTR [ebx+0x10]
  403777:	stos   DWORD PTR es:[edi],eax
  403778:	or     bl,BYTE PTR [esi]
  40377a:	sti    
  40377b:	cdq    
  40377c:	mov    al,ds:0x823c93bf
  403781:	pop    eax
  403782:	pop    eax
  403783:	test   BYTE PTR [edi-0x298a7649],bh
  403789:	(bad)  
  40378a:	pushf  
  40378b:	div    DWORD PTR [edx+edi*2-0x2b]
  40378f:	mov    ebx,0x1834d6a4
  403794:	dec    esi
  403795:	ds sti 
  403797:	xor    DWORD PTR [ebx+0x3787af5c],esi
  40379d:	arpl   WORD PTR [esi-0x6a3424ec],ax
  4037a3:	sbb    al,0x45
  4037a5:	xor    al,0x74
  4037a7:	shl    BYTE PTR [eax],0xc2
  4037aa:	test   DWORD PTR [edi],0x20309301
  4037b0:	retf   0x6c5f
  4037b3:	xchg   esi,eax
  4037b4:	(bad)  
  4037b5:	pop    edx
  4037b6:	fistp  DWORD PTR [ecx]
  4037b8:	sub    esp,0xcb73a7bd
  4037be:	inc    esi
  4037bf:	jbe    0x4037a4
  4037c1:	jne    0x40374d
  4037c3:	sar    ah,1
  4037c5:	xchg   DWORD PTR [ebp-0x4],eax
  4037c8:	cmp    DWORD PTR [eax+0x10afda14],ebx
  4037ce:	or     dh,BYTE PTR es:[edx+0x510348c5]
  4037d5:	xor    dh,BYTE PTR [ecx]
  4037d7:	into   
  4037d8:	shl    DWORD PTR [ecx+0x1a],1
  4037db:	add    al,ah
  4037dd:	push   esi
  4037de:	ficomp DWORD PTR [edi+0x3bc5fabf]
  4037e4:	xor    eax,0x25cdfe17
  4037e9:	loop   0x403782
  4037eb:	push   eax
  4037ec:	stos   DWORD PTR es:[edi],eax
  4037ed:	jo     0x40385c
  4037ef:	dec    ecx
  4037f0:	int3   
  4037f1:	aam    0x3c
  4037f3:	sub    dh,BYTE PTR [eax-0x62abc190]
  4037f9:	mov    eax,ds:0x24f3092
  4037fe:	push   esi
  4037ff:	jne    0x403858
  403801:	dec    ecx
  403802:	pushf  
  403803:	out    0xd3,al
  403805:	pop    es
  403806:	push   0x77
  403808:	jp     0x403835
  40380a:	mov    ecx,0x3edcb4f3
  40380f:	or     al,0x62
  403811:	jno    0x4037e3
  403813:	cmp    eax,DWORD PTR [edx]
  403815:	stc    
  403816:	jno    0x4037b5
  403818:	shl    BYTE PTR [ebx-0x17092c8e],cl
  40381e:	jno    0x403854
  403820:	pxor   mm5,QWORD PTR [ebx]
  403823:	xchg   edx,eax
  403824:	iret   
  403825:	jns    0x403854
  403827:	and    dh,BYTE PTR [eax-0x73]
  40382a:	jle    0x403878
  40382c:	les    ebp,FWORD PTR [edx+0x57]
  40382f:	mov    BYTE PTR [ebx-0x7a72e6a9],bh
  403835:	clc    
  403836:	mov    ah,0x5c
  403838:	cmp    bh,BYTE PTR [edi+0x65946a52]
  40383e:	iret   
  40383f:	jnp    0x4038b1
  403841:	ins    DWORD PTR es:[edi],dx
  403842:	hlt    
  403843:	call   0xad33f064
  403848:	add    eax,0x683b5fe7
  40384d:	push   ebp
  40384e:	jge    0x4038ad
  403850:	xor    esp,DWORD PTR [edi+0x4a]
  403853:	inc    esi
  403854:	dec    esi
  403855:	imul   ecx,ecx,0x80bcab43
  40385b:	jne    0x4037dd
  40385d:	out    dx,al
  40385e:	mov    bh,0x77
  403860:	dec    ebp
  403861:	call   0xe32d:0xf3d79c20
  403868:	bswap  edx
  40386a:	or     ah,BYTE PTR [ecx-0x7ba257eb]
  403870:	add    al,0xa9
  403872:	ds popa 
  403874:	iret   
  403875:	ja     0x403841
  403877:	div    BYTE PTR [esi]
  403879:	push   edx
  40387a:	into   
  40387b:	inc    edi
  40387c:	ja     0x40384e
  40387e:	arpl   WORD PTR [ebx+0x332b563c],bp
  403884:	sahf   
  403885:	mov    eax,ds:0x82f2446b
  40388a:	int    0x1a
  40388c:	int    0x68
  40388e:	adc    bh,BYTE PTR [eax+ecx*2+0xd]
  403892:	inc    esp
  403893:	test   BYTE PTR [edx+0x2e],bh
  403896:	sti    
  403897:	hlt    
  403898:	xor    eax,0xb1f60d69
  40389d:	shr    DWORD PTR ds:0xc893334,1
  4038a3:	addr16 out 0x3d,al
  4038a6:	jae    0x403880
  4038a8:	rcr    DWORD PTR [ebx+0x3b],1
  4038ab:	fisubr DWORD PTR [ebp+0x26575dde]
  4038b1:	adc    BYTE PTR ds:0x3374ffee,dh
  4038b7:	data16 mov bl,0xe7
  4038ba:	or     eax,0x9913ebc6
  4038bf:	fnstenv [ebx-0x1582d38a]
  4038c5:	push   esp
  4038c6:	or     al,0xec
  4038c8:	sar    DWORD PTR [eax+0x7a],0x72
  4038cc:	(bad)  
  4038ce:	sbb    al,0x2c
  4038d0:	in     al,0x97
  4038d2:	loop   0x40393e
  4038d4:	sub    dl,BYTE PTR [esi+ebx*8-0x27f87d65]
  4038db:	imul   edx,DWORD PTR [edx-0x12],0x75
  4038df:	inc    ebx
  4038e0:	mov    esi,DWORD PTR [edx]
  4038e2:	xor    eax,0x10a8b0b5
  4038e7:	inc    esi
  4038e8:	or     edx,esp
  4038ea:	mov    ecx,0xf9a59c76
  4038ef:	test   al,0xea
  4038f1:	loop   0x403909
  4038f3:	push   ecx
  4038f4:	pop    ebx
  4038f5:	push   ebp
  4038f6:	jo     0x40396c
  4038f8:	aad    0xce
  4038fa:	push   edi
  4038fb:	ins    DWORD PTR es:[edi],dx
  4038fc:	out    0x98,al
  4038fe:	mov    edi,0x623438f1
  403903:	nop
  403904:	(bad)  
  403905:	and    al,0xda
  403907:	loopne 0x403923
  403909:	loopne 0x40389b
  40390b:	retf   
  40390c:	xor    DWORD PTR [ecx+0x1dde5f6],esi
  403912:	in     al,0x32
  403914:	push   edi
  403915:	test   DWORD PTR [esi-0x5e195e0b],ecx
  40391b:	(bad)
  40391e:	jecxz  0x4038fe
  403920:	mov    edi,0xc27db1d6
  403925:	arpl   WORD PTR [edx+0x63],ax
  403928:	leave  
  403929:	pop    ds
  40392a:	lods   al,BYTE PTR ds:[esi]
  40392b:	push   es
  40392c:	iret   
  40392d:	mov    BYTE PTR [edi],al
  40392f:	outs   dx,DWORD PTR ds:[esi]
  403930:	dec    ebx
  403931:	or     bh,dl
  403933:	or     eax,DWORD PTR [ebx]
  403935:	push   ecx
  403936:	into   
  403937:	mov    ecx,0x7a9ae60c
  40393c:	icebp  
  40393d:	jecxz  0x403969
  40393f:	das    
  403940:	xchg   esi,eax
  403941:	mov    ebx,0x3db84a2e
  403946:	xchg   edi,eax
  403947:	xor    bh,BYTE PTR [eax+0x34]
  40394a:	adc    al,0x8
  40394c:	jne    0x4038d3
  40394e:	add    cl,dh
  403950:	xor    dl,BYTE PTR [eax]
  403952:	mov    eax,ds:0x40caa2db
  403957:	mov    cl,0x22
  403959:	call   0x42357fa7
  40395e:	call   0xdcae:0xe4a608c6
  403965:	push   edi
  403966:	ins    BYTE PTR es:[edi],dx
  403967:	pop    esi
  403968:	popf   
  403969:	cmp    BYTE PTR [edx+0x64],ch
  40396c:	cmp    BYTE PTR [eax-0x80],0xf9
  403970:	dec    ecx
  403971:	mov    dl,0xea
  403973:	fst    DWORD PTR [esi+0x49]
  403976:	loope  0x40394b
  403978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403979:	das    
  40397a:	mov    ebx,0xc209627b
  40397f:	mov    esp,0xca059f67
  403984:	jmp    0x4039ea
  403986:	pushf  
  403987:	fwait
  403988:	adc    bh,dl
  40398a:	adc    ecx,edi
  40398c:	pop    esp
  40398d:	dec    ebp
  40398e:	sbb    ecx,ebx
  403990:	xlat   BYTE PTR ds:[ebx]
  403991:	cli    
  403992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403993:	or     eax,0x97cfe904
  403998:	popf   
  403999:	int3   
  40399a:	xchg   ebx,ebp
  40399c:	mov    esi,0xb2edbe04
  4039a1:	shl    DWORD PTR [ebx+0x1d],1
  4039a4:	dec    esi
  4039a5:	pop    esi
  4039a6:	or     eax,0xe8a3a93b
  4039ab:	xor    dh,BYTE PTR [esi]
  4039ad:	dec    ebx
  4039ae:	fisttp QWORD PTR [edx-0x4ab4009b]
  4039b4:	or     al,0xb7
  4039b6:	push   0xffffff91
  4039b8:	packsswb mm2,QWORD PTR [edx-0x3e8108d2]
  4039bf:	lods   al,BYTE PTR ds:[esi]
  4039c0:	js     0x4039c2
  4039c2:	adc    edx,esi
  4039c4:	sbb    DWORD PTR [ebp-0x11f91645],ebx
  4039ca:	cmp    eax,DWORD PTR [edi+0x46925143]
  4039d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039d1:	push   0x4a
  4039d3:	add    dh,dh
  4039d5:	aam    0x60
  4039d7:	mov    ds:0x2881b28d,eax
  4039dc:	dec    edi
  4039dd:	mov    eax,0x2f642729
  4039e2:	lds    ebp,FWORD PTR fs:[ebp-0x674b28b7]
  4039e9:	or     cl,BYTE PTR [ebx]
  4039eb:	pop    ebx
  4039ec:	(bad)  
  4039ed:	xor    esi,DWORD PTR [ebx-0x33]
  4039f0:	enter  0xf393,0x4
  4039f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f5:	jns    0x4039cb
  4039f7:	pushf  
  4039f8:	and    edi,DWORD PTR [ebx-0x29]
  4039fb:	sub    ch,BYTE PTR [eax]
  4039fd:	fstp   DWORD PTR [edi]
  4039ff:	mov    ah,0x97
  403a01:	mov    esp,0xee7b498c
  403a06:	xor    eax,0xbf060414
  403a0b:	imul   eax,DWORD PTR [eax],0x129acd9
  403a11:	and    eax,0x4a149c3f
  403a16:	or     edi,DWORD PTR [edi-0x91c5f7b]
  403a1c:	pop    es
  403a1d:	lea    eax,[esp+ebp*1+0x4b]
  403a21:	add    BYTE PTR [ebp-0x21f23c05],dl
  403a27:	dec    esi
  403a28:	pop    ebx
  403a29:	push   ecx
  403a2a:	clc    
  403a2b:	ja     0x403a45
  403a2d:	in     al,0x20
  403a2f:	sbb    eax,0xda5408a0
  403a34:	(bad)  
  403a35:	repz gs xor eax,0x996dfac1
  403a3c:	shl    esp,1
  403a3e:	les    eax,FWORD PTR [ebx-0x43]
  403a41:	shr    DWORD PTR [ebx+0x1],cl
  403a44:	pop    ebx
  403a45:	sub    bh,bl
  403a47:	jnp    0x403a29
  403a49:	xchg   ah,ch
  403a4b:	mov    ebx,0x9b67bd2d
  403a50:	bound  eax,QWORD PTR [ebx-0xc2fc579]
  403a56:	jl     0x403aa9
  403a58:	mov    cl,0xeb
  403a5a:	push   esp
  403a5b:	fs push edx
  403a5d:	test   edi,eax
  403a5f:	pop    edx
  403a60:	cmp    DWORD PTR [edi],0xfffffffb
  403a63:	repz cmp ebp,DWORD PTR [esi]
  403a66:	sbb    BYTE PTR [ebp+eiz*2-0x4addcdf8],al
  403a6d:	sbb    DWORD PTR [ecx+0x15],ebx
  403a70:	xchg   DWORD PTR [ecx+0x67a323e5],ebp
  403a76:	xchg   edi,eax
  403a77:	pop    ss
  403a78:	jmp    0x403a20
  403a7a:	push   ss
  403a7b:	shl    DWORD PTR [esi+0x44],cl
  403a7e:	(bad)
  403a81:	jo     0x403aca
  403a83:	dec    esi
  403a84:	call   0xb992:0xa21d4eb0
  403a8b:	mov    bl,0xb1
  403a8d:	(bad)  
  403a8f:	push   ebp
  403a90:	call   0xf484:0xbcc6400b
  403a97:	adc    eax,0xb26444c6
  403a9c:	aad    0xeb
  403a9e:	mov    ch,0x76
  403aa0:	lea    ebp,[ebx+0x1908396b]
  403aa6:	arpl   si,bx
  403aa8:	or     DWORD PTR [eax+0x5773bf8a],edx
  403aae:	mov    dh,0x63
  403ab0:	jae    0x403a60
  403ab2:	out    dx,al
  403ab3:	push   0xffffff82
  403ab5:	sub    dl,BYTE PTR [ebp+0x55d7d728]
  403abb:	scas   eax,DWORD PTR es:[edi]
  403abc:	fsubr  DWORD PTR [esi+0x6e]
  403abf:	dec    eax
  403ac0:	shr    BYTE PTR [edx*4-0x35959f64],cl
  403ac7:	inc    edx
  403ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ac9:	fadd   DWORD PTR [edx-0x4d36843d]
  403acf:	inc    esi
  403ad0:	in     al,0x21
  403ad2:	jecxz  0x403a95
  403ad4:	(bad)  
  403ad5:	ror    BYTE PTR [eax],0xb
  403ad8:	sub    al,0x97
  403ada:	jne    0x403a6e
  403adc:	fnstenv [edi-0x6e43f5e8]
  403ae2:	(bad)  
  403ae3:	repz xor al,0xc
  403ae6:	into   
  403ae7:	es dec eax
  403ae9:	aad    0x24
  403aeb:	scas   eax,DWORD PTR es:[edi]
  403aec:	mov    ds:0x212912b6,al
  403af1:	sbb    BYTE PTR [esi+0xc],dl
  403af4:	xchg   bl,ch
  403af6:	push   es
  403af7:	cmp    BYTE PTR [edx+0x2510cf9e],dh
  403afd:	repnz mov fs:0x4a4ab73,eax
  403b04:	cs int 0x6
  403b07:	rcl    DWORD PTR [ebp+eax*8-0x76],cl
  403b0b:	sbb    DWORD PTR [esi+edx*1+0x6d],ebp
  403b0f:	mov    ch,0x40
  403b11:	sbb    DWORD PTR [eax-0x4c34fd85],ecx
  403b17:	mov    ds:0x111954de,al
  403b1c:	and    bl,al
  403b1e:	aad    0xfc
  403b20:	xchg   ebx,eax
  403b21:	call   0xbb6f:0xbb710a86
  403b28:	loopne 0x403adb
  403b2a:	or     dh,al
  403b2c:	xchg   edi,eax
  403b2d:	pusha  
  403b2e:	mov    eax,0xc6ac9d01
  403b33:	pop    ebp
  403b34:	jecxz  0x403b6b
  403b36:	dec    edi
  403b37:	or     dh,dh
  403b39:	retf   0x6b24
  403b3c:	ins    DWORD PTR es:[edi],dx
  403b3d:	adc    BYTE PTR ss:[eax-0x44],al
  403b41:	jl     0x403af5
  403b43:	out    0x5,eax
  403b45:	sub    eax,0xa3f6a89
  403b4a:	and    eax,0x62b5fb36
  403b4f:	jmp    0x7d2c4ed
  403b54:	jne    0x403bb0
  403b56:	(bad)  
  403b57:	push   ecx
  403b58:	retf   
  403b59:	mov    cl,BYTE PTR [ebx+0x1a7df9f5]
  403b5f:	aas    
  403b60:	mov    al,0x4e
  403b62:	cld    
  403b63:	jb     0x403b82
  403b65:	pop    ss
  403b66:	mov    cl,0x63
  403b68:	ror    BYTE PTR [ebx-0x28c32bfe],1
  403b6e:	inc    esp
  403b6f:	mov    ebx,0x1926ab16
  403b74:	aaa    
  403b75:	fs xchg edx,eax
  403b77:	inc    esi
  403b78:	inc    ebx
  403b79:	add    DWORD PTR [esi-0x22],0xfffffff9
  403b7d:	inc    edi
  403b7e:	add    eax,0x250e31fb
  403b83:	bound  esp,QWORD PTR ds:0x19af9d58
  403b89:	test   al,0xf8
  403b8b:	dec    ecx
  403b8c:	iret   
  403b8d:	out    0xdc,al
  403b8f:	cmp    BYTE PTR [edx],dh
  403b91:	add    DWORD PTR [ecx],esp
  403b93:	(bad)  
  403b95:	sbb    ecx,DWORD PTR gs:[edx]
  403b98:	xor    al,0xa8
  403b9a:	inc    edx
  403b9b:	call   0x487f:0x109fb211
  403ba2:	stc    
  403ba3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ba5:	(bad)  
  403ba7:	push   0xfb8a61d0
  403bac:	or     ah,BYTE PTR [edx+0x5e163f8d]
  403bb2:	mov    dl,0x30
  403bb4:	mov    edi,0xb184eff
  403bb9:	test   al,0x97
  403bbb:	xchg   ecx,eax
  403bbc:	arpl   WORD PTR [ecx+ebx*1+0x2f],dx
  403bc0:	aad    0x41
  403bc2:	inc    esp
  403bc3:	loopne 0x403c16
  403bc5:	push   edx
  403bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bc7:	mov    bl,BYTE PTR [esi+0x6f]
  403bca:	call   0xb6e80174
  403bcf:	and    eax,0x879f014d
  403bd4:	jmp    0x6e5a:0x87583919
  403bdb:	adc    ecx,edx
  403bdd:	sbb    esi,esi
  403bdf:	mov    gs,ecx
  403be1:	adc    al,0xf4
  403be3:	adc    ecx,DWORD PTR [eax+0x48ad650d]
  403be9:	mov    DWORD PTR [edi+0x14342dc8],ebx
  403bef:	cmp    cl,bl
  403bf1:	xchg   DWORD PTR [ecx+0x54],edx
  403bf4:	dec    esp
  403bf5:	or     eax,0xa6d011ea
  403bfa:	shl    BYTE PTR [ebx+0x3],1
  403bfd:	fld    QWORD PTR [ebx+0x7c09fbab]
  403c03:	mov    ebp,0xc7f3bcc8
  403c08:	sar    ebp,1
  403c0a:	sbb    eax,0x62b236a4
  403c0f:	gs dec edi
  403c11:	mov    es,WORD PTR [ebx-0x3707c9a2]
  403c17:	jl     0x403c01
  403c19:	add    DWORD PTR [edx],esi
  403c1b:	push   edx
  403c1c:	jmp    0xc079cb61
  403c21:	xlat   BYTE PTR ds:[ebx]
  403c22:	xchg   esp,eax
  403c23:	pushf  
  403c24:	xchg   esi,eax
  403c25:	stos   DWORD PTR es:[edi],eax
  403c26:	push   esp
  403c27:	cwde   
  403c28:	mov    ?,WORD PTR [eax+0x1a482e9b]
  403c2e:	jp     0x403caa
  403c30:	arpl   WORD PTR [eax+0x49792e76],bx
  403c36:	jge    0x403c5e
  403c38:	inc    ecx
  403c39:	fwait
  403c3a:	cmc    
  403c3b:	push   ebp
  403c3c:	jns    0x403c4d
  403c3e:	mov    eax,0x2ba25f3d
  403c43:	loope  0x403bd5
  403c45:	push   esi
  403c46:	cld    
  403c47:	and    DWORD PTR [ecx],0xc4d54ff
  403c4d:	shl    edx,cl
  403c4f:	mov    dh,0x5d
  403c51:	jecxz  0x403c05
  403c53:	mov    ch,0xcb
  403c55:	in     al,0xf
  403c57:	sbb    ebx,DWORD PTR [eax]
  403c59:	push   esp
  403c5a:	push   ss
  403c5b:	rcl    DWORD PTR [bx+0x1b],1
  403c5f:	xor    BYTE PTR [eax],dl
  403c61:	loopne 0x403c93
  403c63:	dec    ebp
  403c64:	xchg   edx,eax
  403c65:	fs ins BYTE PTR es:[edi],dx
  403c67:	scas   eax,DWORD PTR es:[edi]
  403c68:	out    dx,eax
  403c69:	pusha  
  403c6a:	pop    ebx
  403c6b:	outs   dx,DWORD PTR ds:[esi]
  403c6c:	and    DWORD PTR [ebp-0x33e442d7],esp
  403c72:	pop    ds
  403c73:	fs jnp 0x403c6f
  403c76:	sbb    eax,DWORD PTR [ebx+0x76362ea8]
  403c7c:	bound  edx,QWORD PTR [eax]
  403c7e:	test   DWORD PTR [ecx+0x3801e8ca],ebx
  403c84:	xor    eax,0x17fcecfd
  403c89:	push   es
  403c8a:	pop    ebp
  403c8b:	cmp    edx,DWORD PTR [edi]
  403c8d:	xchg   ecx,eax
  403c8e:	(bad)  
  403c8f:	jecxz  0x403ca3
  403c91:	sbb    dl,BYTE PTR [esi]
  403c93:	add    cl,BYTE PTR es:[ebp+0x2c]
  403c97:	cwde   
  403c98:	std    
  403c99:	sub    eax,0x745ae5fd
  403c9e:	aam    0x93
  403ca0:	or     edi,DWORD PTR [ebx]
  403ca2:	arpl   WORD PTR [edi+ebp*1+0x613516b9],di
  403ca9:	cmp    dl,BYTE PTR [edx+0x36d10abc]
  403caf:	test   ebx,esp
  403cb1:	stc    
  403cb2:	out    0x19,al
  403cb4:	push   cs
  403cb5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cb7:	jge    0x403cc0
  403cb9:	pusha  
  403cba:	imul   edx,DWORD PTR [edx+0x34462faa],0xfffffff7
  403cc1:	adc    BYTE PTR [ebp-0x488cfe5e],dl
  403cc7:	pop    ss
  403cc8:	fld    TBYTE PTR [esi-0x26]
  403ccb:	icebp  
  403ccc:	outs   dx,BYTE PTR ds:[esi]
  403ccd:	mov    bh,BYTE PTR [edi-0x2618fb1b]
  403cd3:	mov    ecx,0xaf33ee9e
  403cd8:	mov    al,0x9b
  403cda:	push   ss
  403cdb:	sbb    BYTE PTR [edx+0x204c1d8f],al
  403ce1:	adc    dh,bh
  403ce3:	push   ebx
  403ce4:	fs int 0xd7
  403ce7:	arpl   WORD PTR [ecx+0x25],sp
  403cea:	int3   
  403ceb:	mov    ebp,0x81afc1c2
  403cf0:	add    al,0x2f
  403cf2:	pop    eax
  403cf3:	adc    al,0x82
  403cf5:	mov    al,0xa5
  403cf7:	inc    esp
  403cf8:	(bad)  
  403cf9:	ins    BYTE PTR es:[edi],dx
  403cfa:	dec    esp
  403cfb:	add    eax,0xe2188fa7
  403d00:	sbb    ebx,edi
  403d02:	inc    edx
  403d03:	popa   
  403d04:	shl    cl,cl
  403d06:	add    ah,BYTE PTR [edx-0x4f]
  403d09:	js     0x403d6c
  403d0b:	mov    ds:0xcac5fb07,al
  403d10:	xchg   ebx,eax
  403d11:	bnd jno 0x403ca5
  403d14:	not    BYTE PTR [ebx+0x6ca8c7b5]
  403d1a:	mov    ch,ah
  403d1c:	push   ebp
  403d1d:	push   ds
  403d1e:	pop    es
  403d1f:	aaa    
  403d20:	es mov bl,0xd0
  403d23:	mov    ebx,DWORD PTR [eax+0x25502e2e]
  403d29:	mov    ch,0x8f
  403d2b:	int3   
  403d2c:	push   ebx
  403d2d:	sbb    bh,BYTE PTR [ebx+0x406fbd8]
  403d33:	fmul   DWORD PTR [esi+0x59]
  403d36:	pop    ds
  403d37:	xchg   ah,al
  403d39:	sub    BYTE PTR [edi-0x5b29164a],dh
  403d3f:	std    
  403d40:	cmc    
  403d41:	xchg   esi,eax
  403d42:	scas   al,BYTE PTR es:[edi]
  403d43:	imul   ebp,DWORD PTR [ebp-0x6bc9b93d],0x66
  403d4a:	out    0x34,al
  403d4c:	jbe    0x403dc9
  403d4e:	push   es
  403d4f:	xchg   ecx,eax
  403d50:	test   BYTE PTR [ebx],0x5d
  403d53:	jg     0x403d0f
  403d55:	enter  0x107,0xbc
  403d59:	dec    esi
  403d5a:	inc    esi
  403d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d5c:	cdq    
  403d5d:	imul   ebx,DWORD PTR [ebx],0xa87fb7bb
  403d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d64:	ficom  DWORD PTR [ebx+0x5676d381]
  403d6a:	inc    ecx
  403d6b:	dec    ebx
  403d6c:	jmp    0x49ee1391
  403d71:	xor    bh,BYTE PTR ds:0xf47426a8
  403d77:	push   es
  403d78:	out    dx,al
  403d79:	ror    al,0xa4
  403d7c:	ja     0x403d42
  403d7e:	in     eax,0xe4
  403d80:	mov    ebp,0x547f91e5
  403d85:	mov    eax,0xde249ff7
  403d8a:	pushf  
  403d8b:	call   0x30fb:0xd72555a2
  403d92:	push   edi
  403d93:	cmp    BYTE PTR [eax+0x4c77e703],ah
  403d99:	pop    esi
  403d9a:	or     al,0xfb
  403d9c:	mov    ds:0x8cc23922,eax
  403da1:	cmc    
  403da2:	mov    esi,0x6a59f4d9
  403da7:	xchg   bh,bh
  403da9:	mov    esp,0xb6cee7d3
  403dae:	xor    eax,0x9d8db550
  403db3:	cmovs  edi,DWORD PTR [ebx+0x5882625f]
  403dba:	fist   DWORD PTR [ecx]
  403dbc:	jb     0x403d76
  403dbe:	sub    BYTE PTR [ebp+0x64],0xea
  403dc2:	iret   
  403dc3:	popw   ds
  403dc5:	in     eax,dx
  403dc6:	pop    ebx
  403dc7:	daa    
  403dc8:	enter  0x6ba,0x63
  403dcc:	ror    eax,cl
  403dce:	pop    eax
  403dcf:	mov    dh,0xf6
  403dd1:	sbb    al,0x9c
  403dd3:	and    al,0x6e
  403dd5:	sbb    ecx,DWORD PTR [edi+0x62377ca1]
  403ddb:	out    0x37,al
  403ddd:	pop    ebp
  403dde:	daa    
  403ddf:	mov    ah,0xdb
  403de1:	(bad)  
  403de2:	mov    DWORD PTR [esi-0xf],edi
  403de5:	test   BYTE PTR [ebx-0x75],ch
  403de8:	jle    0x403e4f
  403dea:	(bad)  
  403deb:	jecxz  0x403df4
  403ded:	xchg   ecx,eax
  403dee:	pop    esp
  403def:	dec    edi
  403df0:	inc    esp
  403df1:	push   cs
  403df2:	dec    ebx
  403df3:	fdiv   DWORD PTR [ebp-0x58ac77a9]
  403df9:	out    0xfb,al
  403dfb:	shr    DWORD PTR [edx],cl
  403dfd:	fisubr DWORD PTR [edi+0x53]
  403e00:	dec    ebp
  403e01:	ja     0x403e59
  403e03:	ins    DWORD PTR es:[edi],dx
  403e04:	xchg   ecx,eax
  403e05:	pop    edi
  403e06:	lods   al,BYTE PTR ds:[esi]
  403e07:	ja     0x403d93
  403e09:	jbe    0x403e3a
  403e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e0c:	mov    eax,0xafa490a1
  403e11:	sbb    BYTE PTR [ebx],dl
  403e13:	div    DWORD PTR [edx-0x36764961]
  403e19:	dec    edi
  403e1a:	dec    eax
  403e1b:	mov    bl,0x32
  403e1d:	das    
  403e1e:	popf   
  403e1f:	dec    edi
  403e20:	test   eax,0x169d3aaa
  403e25:	sub    al,0x96
  403e27:	shl    DWORD PTR [ebp-0x7],1
  403e2a:	fwait
  403e2b:	xor    al,0xc
  403e2d:	mov    ecx,0xa7c1583f
  403e32:	pushf  
  403e33:	mov    cl,0xd5
  403e35:	inc    ebx
  403e36:	imul   DWORD PTR [esi+0x37ca4568]
  403e3c:	jbe    0x403e8c
  403e3e:	mov    BYTE PTR [ebx],bh
  403e40:	jp     0x403e2e
  403e42:	or     eax,DWORD PTR fs:0x92f9e631
  403e49:	jns    0x403ea4
  403e4b:	cdq    
  403e4c:	in     eax,0xe0
  403e4e:	add    ecx,DWORD PTR ds:0x7eab
  403e53:	dec    esp
  403e54:	add    DWORD PTR [ebp-0x36cb4ec4],esi
  403e5a:	and    ch,BYTE PTR [ecx+0x3ae177e7]
  403e60:	mov    edx,0x413bd843
  403e65:	stos   DWORD PTR es:[edi],eax
  403e66:	xchg   ecx,eax
  403e67:	fnstsw WORD PTR [esi]
  403e69:	(bad)  
  403e6a:	jle    0x403eea
  403e6c:	mov    ah,ch
  403e6e:	mov    ch,0xb6
  403e70:	inc    esp
  403e71:	adc    al,0xa0
  403e73:	adc    edx,DWORD PTR [esi+0x39]
  403e76:	stos   DWORD PTR es:[edi],eax
  403e77:	std    
  403e78:	in     al,0xbb
  403e7a:	sbb    ebp,DWORD PTR [edx-0x17a0ec6c]
  403e80:	out    0x17,eax
  403e82:	lahf   
  403e83:	loope  0x403f04
  403e85:	push   ds
  403e86:	add    dh,ch
  403e88:	popa   
  403e89:	or     edi,DWORD PTR [esi-0x2d]
  403e8c:	cdq    
  403e8d:	nop
  403e8e:	mov    esi,es
  403e90:	(bad)  
  403e91:	xchg   edx,eax
  403e92:	cdq    
  403e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e94:	xor    ebp,esi
  403e96:	aam    0x9f
  403e98:	fstp   DWORD PTR [ebp+eax*4+0x68242cc1]
  403e9f:	lock xchg ecx,eax
  403ea1:	xchg   BYTE PTR [edx+ebp*8+0x9],ch
  403ea5:	push   edx
  403ea6:	push   0x15
  403ea8:	das    
  403ea9:	mov    cl,BYTE PTR ss:[edi]
  403eac:	sub    eax,0xa26cc403
  403eb1:	cmp    eax,0xc7fa2296
  403eb6:	fwait
  403eb7:	je     0x403ee5
  403eb9:	inc    ecx
  403eba:	mov    cl,0x50
  403ebc:	shl    DWORD PTR [edi+eiz*4],1
  403ebf:	jge    0x403ed2
  403ec1:	pop    ebx
  403ec2:	mov    ah,0xb8
  403ec4:	pop    esp
  403ec5:	mov    ebp,0x608cd5c1
  403eca:	xor    al,0xf4
  403ecc:	loopne 0x403e74
  403ece:	mov    ecx,0xb23566b0
  403ed3:	cmp    DWORD PTR [edi+0x3e669887],0x4
  403eda:	or     ecx,DWORD PTR [eax]
  403edc:	push   ss
  403edd:	adc    DWORD PTR [ebp+0x2fe055f6],ecx
  403ee3:	mov    bl,0x7a
  403ee5:	jg     0x403e9e
  403ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee8:	dec    esp
  403ee9:	jb     0x403e88
  403eeb:	push   esi
  403eec:	mov    dh,0x92
  403eee:	and    ebp,edx
  403ef0:	mov    eax,0xd3871b53
  403ef5:	outs   dx,BYTE PTR ds:[esi]
  403ef6:	add    DWORD PTR [eax-0x3426eb8b],ebp
  403efc:	inc    BYTE PTR [ebp-0x29]
  403eff:	and    al,0xc1
  403f01:	push   ecx
  403f02:	sub    ebp,ebp
  403f04:	mov    bh,0x9e
  403f06:	or     eax,0x6229f195
  403f0b:	les    edi,FWORD PTR [edi]
  403f0d:	sub    eax,0xa6a6634c
  403f12:	mov    bl,0xc7
  403f14:	sahf   
  403f15:	jp     0x403ebd
  403f17:	jp     0x403f56
  403f19:	fidiv  DWORD PTR [ebx+eax*2]
  403f1c:	jnp    0x403f5e
  403f1e:	pushf  
  403f1f:	out    0x27,eax
  403f21:	leave  
  403f22:	sub    BYTE PTR [edx+0x14fd4001],dh
  403f28:	pop    ebp
  403f29:	jle    0x403ebe
  403f2b:	dec    edi
  403f2c:	mov    dh,0x4f
  403f2e:	cwde   
  403f2f:	popa   
  403f30:	sub    al,0xb3
  403f32:	and    eax,0x628ff07b
  403f37:	adc    dh,BYTE PTR [edx]
  403f39:	mov    ds:0xb5f54efe,eax
  403f3e:	jne    0x403ed5
  403f40:	mov    edx,0xe46819ae
  403f45:	je     0x403f74
  403f47:	aad    0x99
  403f49:	and    al,0x85
  403f4b:	arpl   WORD PTR [esi+edi*1-0x55998d7],di
  403f52:	scas   eax,DWORD PTR es:[di]
  403f54:	and    ebx,eax
  403f56:	dec    edx
  403f57:	ret    
  403f58:	adc    ebp,ebp
  403f5a:	xchg   ecx,eax
  403f5b:	inc    esp
  403f5c:	add    edi,DWORD PTR [ecx+eax*2-0x48d3d311]
  403f63:	shl    DWORD PTR [edi+0x64],1
  403f66:	adc    eax,0x6016e420
  403f6b:	fadd   st,st(6)
  403f6d:	adc    dh,ch
  403f6f:	and    ebp,esp
  403f71:	lods   eax,DWORD PTR ds:[esi]
  403f72:	mov    esi,0xff1f6d7c
  403f77:	push   ss
  403f78:	(bad)  
  403f79:	mov    ebx,DWORD PTR [ebp+0x7e]
  403f7c:	pop    esi
  403f7d:	jb     0x403f62
  403f7f:	fisttp QWORD PTR [edi+0x28dbe8eb]
  403f85:	cmp    ecx,DWORD PTR [edx+0x60]
  403f88:	jmp    0x404008
  403f8a:	retf   
  403f8b:	inc    esp
  403f8c:	gs adc eax,0x30c84807
  403f92:	(bad)  
  403f93:	cmp    bl,BYTE PTR ds:0xb1e7466f
  403f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f9a:	jnp    0x403f8a
  403f9c:	mov    ch,0x67
  403f9e:	inc    ebp
  403f9f:	(bad)  
  403fa0:	jne    0x403fdf
  403fa2:	in     al,0xd4
  403fa4:	xchg   ebx,edx
  403fa6:	test   eax,0xa14071f2
  403fab:	lods   al,BYTE PTR ds:[esi]
  403fac:	jle    0x404010
  403fae:	push   ebx
  403faf:	push   ebx
  403fb0:	int3   
  403fb1:	cmp    eax,0x65b49ab1
  403fb6:	lock xchg DWORD PTR [edi+0x8548158],ecx
  403fbd:	in     al,dx
  403fbe:	iret   
  403fbf:	(bad)  
  403fc0:	mov    ecx,0xc6380b92
  403fc5:	adc    eax,0xa0ada02e
  403fca:	sti    
  403fcb:	mov    esi,0x68e178da
  403fd0:	iret   
  403fd1:	mov    esp,0xd59226df
  403fd6:	fcomip st,st(0)
  403fd8:	es dec edx
  403fda:	mov    ebp,0x3b7590ec
  403fdf:	test   DWORD PTR [ebx-0x298cf158],0x99aff5c5
  403fe9:	jge    0x403fb2
  403feb:	inc    edi
  403fec:	jge    0x40403a
  403fee:	dec    ah
  403ff0:	mov    dl,0xe6
  403ff2:	icebp  
  403ff3:	enter  0x45b0,0xfb
  403ff7:	push   ds
  403ff8:	jnp    0x404041
  403ffa:	push   0xffffff80
  403ffc:	hlt    
  403ffd:	inc    eax
  403ffe:	clc    
  403fff:	cmp    dh,ch
  404001:	pop    esi
  404002:	mov    esi,0xd440c71c
  404007:	and    al,0x40
  404009:	dec    eax
  40400a:	and    al,0xa4
  40400c:	call   0x29c0a5fb
  404011:	add    eax,0xe51664f1
  404016:	and    edx,DWORD PTR [edi-0x1589cc4e]
  40401c:	test   BYTE PTR [ebp-0x64],al
  40401f:	hlt    
  404020:	mov    esp,DWORD PTR [ebx+0x2d016760]
  404026:	(bad)  
  404027:	test   al,0x5f
  404029:	inc    esp
  40402a:	or     bh,BYTE PTR [edi]
  40402c:	sar    BYTE PTR [edi+0x62],cl
  40402f:	stos   BYTE PTR es:[edi],al
  404030:	neg    esi
  404032:	iret   
  404033:	fimul  WORD PTR [ebx+0x21d164a6]
  404039:	jo     0x403fd6
  40403b:	rol    DWORD PTR [edx+0x53],0xb5
  40403f:	jo     0x4040b5
  404041:	jne    0x404092
  404043:	fimul  DWORD PTR [ebp+0x38]
  404046:	adc    dl,al
  404048:	cmc    
  404049:	add    al,0x86
  40404b:	pusha  
  40404c:	jo     0x404033
  40404e:	xor    BYTE PTR [eax+0x34001337],0xf1
  404055:	lods   al,BYTE PTR ds:[esi]
  404056:	cs ret 0xbd5b
  40405a:	lods   al,BYTE PTR ds:[esi]
  40405b:	lds    edx,FWORD PTR gs:[edx+0x5b]
  40405f:	cmp    al,0x6a
  404061:	(bad)  
  404062:	jne    0x404023
  404064:	dec    esp
  404065:	test   eax,0x97c1db98
  40406a:	mov    BYTE PTR [edx+0x8],dh
  40406d:	loope  0x40404f
  40406f:	jmp    0x4040e3
  404071:	cmp    al,0xe9
  404073:	aas    
  404074:	aad    0x17
  404076:	cdq    
  404077:	cs jl  0x404056
  40407a:	push   esi
  40407b:	pop    ebx
  40407c:	sbb    eax,0x2d965735
  404081:	dec    eax
  404082:	lds    eax,FWORD PTR [eax]
  404084:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  404086:	sahf   
  404087:	xor    al,0x67
  404089:	lods   eax,DWORD PTR ds:[esi]
  40408a:	sub    eax,0xdee0c20c
  40408f:	xor    dl,BYTE PTR [ebx-0x1ee05b9a]
  404095:	push   ss
  404096:	icebp  
  404097:	das    
  404098:	sub    al,BYTE PTR [ebp-0x3e]
  40409b:	inc    edi
  40409c:	xchg   ebp,eax
  40409d:	(bad)  
  40409e:	jmp    0x44136181
  4040a3:	sti    
  4040a4:	lods   eax,DWORD PTR ds:[esi]
  4040a5:	ins    DWORD PTR es:[edi],dx
  4040a6:	xor    dh,dl
  4040a8:	mov    ebx,es
  4040aa:	jb     0x404075
  4040ac:	cmp    esp,DWORD PTR [ebx-0x6aeb0dc0]
  4040b2:	(bad)  
  4040b3:	and    BYTE PTR [eax],bl
  4040b5:	std    
  4040b6:	push   esp
  4040b7:	mov    BYTE PTR [ebx],ch
  4040b9:	push   ss
  4040ba:	cli    
  4040bb:	frndint 
  4040bd:	or     dl,ch
  4040bf:	sbb    BYTE PTR [esi-0x2bebfe68],dl
  4040c5:	add    esi,esp
  4040c7:	mov    WORD PTR ds:0xa7198a54,ss
  4040cd:	or     edx,esi
  4040cf:	cmc    
  4040d0:	out    dx,al
  4040d1:	mov    ch,0x3f
  4040d3:	sub    BYTE PTR [esi-0xa],cl
  4040d6:	sub    dl,bl
  4040d8:	pop    ss
  4040d9:	mov    ds:0xacf2388e,al
  4040de:	mov    dh,0x4a
  4040e0:	sub    ebp,DWORD PTR [ebx-0x76]
  4040e3:	enter  0xd919,0x3e
  4040e7:	imul   esp,DWORD PTR [ecx-0x46],0x3f7f65bf
  4040ee:	outs   dx,BYTE PTR ds:[esi]
  4040ef:	sar    BYTE PTR [edi+ebx*4+0x64],0x39
  4040f4:	sti    
  4040f5:	(bad)  
  4040f6:	push   esp
  4040f7:	ficom  DWORD PTR [ebx]
  4040f9:	fdivr  DWORD PTR [ebp+0x7c690288]
  4040ff:	push   eax
  404100:	je     0x40415e
  404102:	xor    edi,DWORD PTR [ebp+0x2b]
  404105:	pop    es
  404106:	retf   
  404107:	loope  0x4040ba
  404109:	and    eax,0xac73c674
  40410e:	adc    dl,BYTE PTR [ebx-0x1efb546f]
  404114:	xchg   ebx,eax
  404115:	sub    esp,edx
  404117:	leave  
  404118:	rcr    BYTE PTR [eax],0xee
  40411b:	test   al,0x67
  40411d:	in     al,dx
  40411e:	jg     0x404123
  404120:	imul   esi,DWORD PTR [edi+esi*8],0x912cfe91
  404127:	dec    edi
  404128:	ins    DWORD PTR es:[edi],dx
  404129:	fiadd  WORD PTR [edi+0x69e525d2]
  40412f:	lock cs fdivr st(6),st
  404133:	pop    ss
  404134:	imul   esi,DWORD PTR [edx],0x25
  404137:	sub    ecx,DWORD PTR [ebx-0x7ab1d5df]
  40413d:	aad    0x50
  40413f:	mov    al,ds:0xc202db9c
  404144:	(bad)  
  404146:	mov    ds:0x9c5c0f97,eax
  40414b:	xor    al,0x65
  40414d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40414f:	stos   DWORD PTR es:[edi],eax
  404150:	or     eax,0x3dd6e6b5
  404155:	inc    ebp
  404156:	add    eax,0x4f665467
  40415b:	daa    
  40415c:	sahf   
  40415d:	int3   
  40415e:	popf   
  40415f:	dec    edx
  404160:	iret   
  404161:	mov    dh,0x9b
  404163:	mov    eax,0xd0670c2c
  404168:	stos   DWORD PTR es:[edi],eax
  404169:	mov    eax,0xe6bea0ef
  40416e:	fild   QWORD PTR ds:0xe9909504
  404174:	ins    DWORD PTR es:[edi],dx
  404175:	mov    ds:0x2fa2ac75,eax
  40417a:	test   BYTE PTR [ecx+0x23795fc5],0x38
  404181:	mov    al,0x16
  404183:	pop    es
  404184:	repnz inc ecx
  404186:	pop    eax
  404187:	mov    edi,0xaed22a09
  40418c:	stos   DWORD PTR es:[edi],eax
  40418d:	in     al,dx
  40418e:	xchg   esi,eax
  40418f:	dec    esp
  404190:	or     eax,0x7c866704
  404195:	ss adc ch,0x6
  404199:	inc    BYTE PTR [edx]
  40419b:	in     al,0x8f
  40419d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40419e:	ffree  st(4)
  4041a0:	(bad)  
  4041a1:	adc    esi,eax
  4041a3:	hlt    
  4041a4:	sub    esi,ebx
  4041a6:	stos   BYTE PTR es:[edi],al
  4041a7:	fild   QWORD PTR [edi]
  4041a9:	stc    
  4041aa:	(bad)  
  4041ab:	xchg   ebx,eax
  4041ac:	out    0x6a,al
  4041ae:	scas   al,BYTE PTR es:[edi]
  4041af:	icebp  
  4041b0:	mov    edi,0x1e2c7e30
  4041b5:	and    bh,ah
  4041b7:	dec    ebp
  4041b8:	or     dl,al
  4041ba:	(bad)  
  4041bb:	jge    0x4041be
  4041bd:	je     0x404203
  4041bf:	bound  ecx,QWORD PTR [edx]
  4041c1:	mov    cl,0x5b
  4041c3:	jbe    0x4041c5
  4041c5:	daa    
  4041c6:	mov    cl,0xe8
  4041c8:	xor    DWORD PTR [ebp-0x5],edi
  4041cb:	lods   eax,DWORD PTR ds:[esi]
  4041cc:	jo     0x404156
  4041ce:	add    BYTE PTR [ebx-0x23d3fc5c],al
  4041d4:	sub    eax,0xdfac832f
  4041d9:	jbe    0x40422f
  4041db:	adc    al,0x67
  4041dd:	popf   
  4041de:	fidiv  DWORD PTR [esi+ebx*1]
  4041e1:	es ja  0x4041ec
  4041e4:	retf   
  4041e5:	scas   eax,DWORD PTR es:[edi]
  4041e6:	adc    BYTE PTR [esi-0x239089c],dh
  4041ec:	xor    edi,ecx
  4041ee:	dec    ebp
  4041ef:	xor    al,0x95
  4041f1:	inc    esi
  4041f2:	mov    dl,0x39
  4041f4:	repnz imul esi,DWORD PTR [ebx+ebx*2],0xffffff93
  4041f9:	aad    0x61
  4041fb:	and    cl,ch
  4041fd:	dec    edi
  4041fe:	adc    eax,0x52a55abf
  404203:	dec    ebp
  404204:	imul   BYTE PTR [ebp+ebp*1-0x29]
  404208:	pop    ecx
  404209:	or     dl,BYTE PTR [ebx]
  40420b:	loope  0x404284
  40420d:	mov    ecx,es
  40420f:	jp     0x40421b
  404211:	or     ah,BYTE PTR [ebx]
  404213:	jno    0x4041db
  404215:	outs   dx,BYTE PTR ds:[esi]
  404216:	mov    dl,0x68
  404218:	cs jnp 0x4041bb
  40421b:	pop    ebx
  40421c:	lds    ebp,FWORD PTR [edx]
  40421e:	adc    edi,DWORD PTR [esi+0x3f]
  404221:	js     0x4041e0
  404223:	iret   
  404224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404225:	fidivr DWORD PTR [eax+0x1ce81c83]
  40422b:	popa   
  40422c:	or     BYTE PTR [edx-0x56ba569d],dh
  404232:	xor    dl,BYTE PTR [edi+esi*8+0x154c370c]
  404239:	cmp    eax,0x4cc5b4c9
  40423e:	pop    eax
  40423f:	sub    al,0x94
  404241:	pop    es
  404242:	push   0x17
  404244:	mov    ds:0x4764ba6b,eax
  404249:	pusha  
  40424a:	mov    ah,al
  40424c:	pop    esp
  40424d:	inc    ebx
  40424e:	shl    DWORD PTR [esi],1
  404250:	iret   
  404251:	push   esp
  404252:	cmp    cl,BYTE PTR [ebp-0x4e]
  404255:	(bad)  
  404256:	pop    ebp
  404257:	jo     0x4041e8
  404259:	mov    ebp,ebx
  40425b:	sbb    ah,bl
  40425d:	sar    DWORD PTR [ecx+0x4578581d],cl
  404263:	push   edx
  404264:	mov    bh,0x12
  404266:	lock pop eax
  404268:	imul   ebp,DWORD PTR [esi+eiz*1+0x2d1e1239],0xd5c63d5f
  404273:	push   0xffffffdc
  404275:	fst    QWORD PTR [edx-0x5]
  404278:	lahf   
  404279:	shr    BYTE PTR [ebx],0xe7
  40427c:	sub    al,dl
  40427e:	jb     0x40424a
  404280:	in     al,dx
  404281:	pop    ds
  404282:	or     eax,0x18dbb4ea
  404287:	lods   eax,DWORD PTR ds:[esi]
  404288:	out    dx,eax
  404289:	mov    esi,0x84ff52d2
  40428e:	ror    BYTE PTR [esi+0x4f],cl
  404291:	push   cs
  404292:	adc    DWORD PTR [ecx-0x5a],ebp
  404295:	cmp    eax,0xbe786e1f
  40429a:	in     eax,dx
  40429b:	addr16 push edx
  40429d:	pop    edi
  40429e:	xor    ah,BYTE PTR [ebx-0x141d4d20]
  4042a4:	adc    ebx,DWORD PTR [eax]
  4042a6:	dec    esp
  4042a7:	jge    0x404257
  4042a9:	xor    BYTE PTR [ebx+0x4efd175c],cl
  4042af:	push   0x6133d118
  4042b4:	dec    esp
  4042b5:	(bad)  
  4042b6:	mov    ebx,0x2ee9be88
  4042bb:	jle    0x4042a5
  4042bd:	push   ebx
  4042be:	jecxz  0x40433e
  4042c0:	mov    eax,0x99cde226
  4042c5:	dec    ecx
  4042c6:	mov    bl,al
  4042c8:	les    ecx,FWORD PTR [ebx]
  4042ca:	pop    eax
  4042cb:	addr16 jbe 0x40431f
  4042ce:	push   ecx
  4042cf:	test   BYTE PTR [ebx-0x6a],cl
  4042d2:	ret    
  4042d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042d4:	mov    eax,0xa00fbb52
  4042d9:	inc    ecx
  4042da:	call   0x940fb959
  4042df:	mov    bh,0x5e
  4042e1:	xor    eax,0xc720a058
  4042e6:	push   edi
  4042e7:	repnz into 
  4042e9:	or     al,BYTE PTR [ebp+0x2b]
  4042ec:	inc    esp
  4042ed:	push   ecx
  4042ee:	pop    ds
  4042ef:	pop    edi
  4042f0:	push   ecx
  4042f1:	xchg   esi,eax
  4042f2:	xor    edi,DWORD PTR [ebp+0x72ae61e5]
  4042f8:	stos   DWORD PTR es:[edi],eax
  4042f9:	jecxz  0x4042b7
  4042fb:	cld    
  4042fc:	or     BYTE PTR [ebx],dh
  4042fe:	sbb    ah,bl
  404300:	sub    al,0x57
  404302:	xchg   edi,eax
  404303:	push   edi
  404304:	inc    esi
  404305:	stos   BYTE PTR es:[edi],al
  404306:	inc    esi
  404307:	sar    BYTE PTR [ebx+esi*4+0x36],0xea
  40430c:	pop    esp
  40430d:	stos   DWORD PTR es:[edi],eax
  40430e:	stc    
  40430f:	push   ds
  404310:	ja     0x404317
  404312:	inc    esi
  404313:	jno    0x4042a2
  404315:	mov    edi,0x6c9caee3
  40431a:	inc    ebp
  40431b:	hlt    
  40431c:	es in  al,0xd3
  40431f:	sub    BYTE PTR [eax],ch
  404321:	add    edx,DWORD PTR es:[ebx]
  404324:	fucom  st(3)
  404326:	mov    ecx,DWORD PTR [eax-0x6e3472b1]
  40432c:	fsubp  st(2),st
  40432e:	add    eax,0xac405cae
  404333:	fucomi st,st(1)
  404335:	int3   
  404336:	or     eax,0x69b299fd
  40433b:	fwait
  40433c:	scas   al,BYTE PTR es:[edi]
  40433d:	in     eax,0x90
  40433f:	inc    esi
  404340:	add    dl,BYTE PTR [esi-0x4ae89436]
  404346:	addr16 sub al,0x13
  404349:	pop    ebp
  40434a:	xchg   ecx,eax
  40434b:	sub    al,0xf6
  40434d:	fs dec ecx
  40434f:	mov    esi,0xb4eeed5
  404354:	sub    al,0xba
  404356:	addr16 ret 0x7f08
  40435a:	das    
  40435b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40435c:	ds dec eax
  40435e:	jmp    0xc3e6:0x4beaa50
  404365:	mov    ds:0x6f4686a4,al
  40436a:	imul   esp,esp,0x480f6d38
  404370:	stc    
  404371:	ins    DWORD PTR es:[edi],dx
  404372:	mov    dl,0x78
  404374:	mov    BYTE PTR [esi-0x41629870],ah
  40437a:	lods   al,BYTE PTR gs:[esi]
  40437c:	jecxz  0x40433e
  40437e:	add    ah,BYTE PTR [ecx]
  404380:	rcr    DWORD PTR [ebp+0x6613c5a7],0x7
  404387:	aad    0xf6
  404389:	add    ah,al
  40438b:	sbb    eax,0xcfa38f2f
  404390:	mov    al,ds:0xaf969a9e
  404395:	inc    ecx
  404396:	inc    ebx
  404397:	cmp    BYTE PTR [edx],0xd8
  40439a:	cwde   
  40439b:	call   0xe23d:0xdfd9a96d
  4043a2:	ror    DWORD PTR [ecx],cl
  4043a4:	(bad)  
  4043a5:	in     eax,dx
  4043a6:	add    edx,DWORD PTR [edx-0x47]
  4043a9:	lods   eax,DWORD PTR ds:[esi]
  4043aa:	pusha  
  4043ab:	mov    esi,0x351e0bd5
  4043b0:	sub    DWORD PTR [ecx],edi
  4043b2:	nop    DWORD PTR [esi+0x36d433df]
  4043b9:	jmp    0xee00e28f
  4043be:	add    BYTE PTR [ebx-0x5b9a68ca],cl
  4043c4:	mov    al,ds:0x31b503e
  4043c9:	pop    es
  4043ca:	fwait
  4043cb:	fs add al,0x11
  4043ce:	imul   DWORD PTR [eax]
  4043d0:	cmp    eax,DWORD PTR [edx+ecx*1-0x33]
  4043d4:	and    ch,dl
  4043d6:	test   DWORD PTR [eax+0x29bef46d],ebx
  4043dc:	mov    al,ds:0x2ca774b2
  4043e1:	add    al,0xa5
  4043e3:	jae    0x404461
  4043e5:	(bad)  
  4043e6:	fbld   TBYTE PTR [edi+esi*4]
  4043e9:	pusha  
  4043ea:	stos   BYTE PTR es:[edi],al
  4043eb:	(bad)  
  4043ec:	sahf   
  4043ed:	ins    DWORD PTR es:[edi],dx
  4043ee:	cmp    DWORD PTR [ebx-0x6dc15317],0x7
  4043f5:	out    dx,al
  4043f6:	inc    esi
  4043f7:	jmp    0xa7744d40
  4043fc:	inc    esi
  4043fd:	cmp    BYTE PTR [eax],ch
  4043ff:	mov    dh,0x23
  404401:	outs   dx,DWORD PTR ds:[esi]
  404402:	repnz mov ebp,0x8d6b1250
  404408:	mov    DWORD PTR [esi+0x5fa7f818],esi
  40440e:	repnz arpl WORD PTR ds:0xc156d678,dx
  404415:	loope  0x4043c2
  404417:	retf   0xf82c
  40441a:	fidivr WORD PTR [edx-0x2d]
  40441d:	sti    
  40441e:	sub    DWORD PTR [edx+0x4b],eax
  404421:	jl     0x4043a6
  404423:	cmp    eax,0x349def80
  404428:	ins    DWORD PTR es:[edi],dx
  404429:	mov    al,ah
  40442b:	or     DWORD PTR [eax],eax
  40442d:	in     al,dx
  40442e:	repz test eax,0x9ebbcbda
  404434:	xchg   esi,eax
  404435:	popf   
  404436:	mov    esp,?
  404438:	cmc    
  404439:	and    BYTE PTR ds:0x3e06760c,dh
  40443f:	loop   0x404429
  404441:	adc    al,0x14
  404443:	pop    ds
  404444:	sub    cl,BYTE PTR [ecx-0x40eb048e]
  40444a:	or     ah,BYTE PTR ds:0xa163f3de
  404450:	sub    al,0x1b
  404452:	or     dl,BYTE PTR [eax]
  404454:	aas    
  404455:	jae    0x404460
  404457:	mov    dl,0x4
  404459:	in     eax,0x41
  40445b:	jb     0x40442a
  40445d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40445e:	in     eax,0x30
  404460:	fwait
  404461:	and    DWORD PTR [ebx],0xf8192a0a
  404467:	pop    eax
  404468:	ds pop ecx
  40446a:	mov    cl,0xa
  40446c:	add    BYTE PTR fs:[edi-0x54],cl
  404470:	lahf   
  404471:	loopne 0x404434
  404473:	pop    ds
  404474:	inc    edx
  404475:	push   edi
  404476:	sbb    eax,0xccec67c2
  40447b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40447c:	inc    esi
  40447d:	scas   eax,DWORD PTR es:[edi]
  40447e:	(bad)  
  40447f:	mov    esp,0x58564324
  404484:	sub    DWORD PTR [esi-0x1],edi
  404487:	in     eax,0xfc
  404489:	xchg   edx,eax
  40448a:	xchg   BYTE PTR [eax+0x71],ah
  40448d:	push   ecx
  40448e:	or     al,0xbd
  404490:	add    al,0xa3
  404492:	je     0x404456
  404494:	add    al,0xaa
  404496:	cwde   
  404497:	icebp  
  404498:	xchg   DWORD PTR [ebx],eax
  40449a:	cld    
  40449b:	mov    al,ds:0xc8333bf
  4044a0:	rcl    edi,0x8b
  4044a3:	lock imul DWORD PTR gs:[eax+0x7a]
  4044a8:	hlt    
  4044a9:	xchg   ebp,eax
  4044aa:	inc    ecx
  4044ab:	dec    BYTE PTR [ebp+0x1e64d5e5]
  4044b1:	cmp    DWORD PTR [edi+edx*1-0x29d04a],ebx
  4044b8:	not    BYTE PTR ds:0x1a11d110
  4044be:	ss rol BYTE PTR es:[edx],1
  4044c2:	xchg   edi,eax
  4044c3:	sahf   
  4044c4:	mov    al,0xd7
  4044c6:	pop    ebx
  4044c7:	push   edx
  4044c8:	clc    
  4044c9:	je     0x40453a
  4044cb:	daa    
  4044cc:	jnp    0x4044f1
  4044ce:	out    0x39,eax
  4044d0:	test   BYTE PTR [edi+edx*8-0x44471454],bh
  4044d7:	mov    al,0xd9
  4044d9:	int    0x34
  4044db:	mov    ds:0x1c1f4f55,eax
  4044e0:	and    al,0xcb
  4044e2:	pusha  
  4044e3:	(bad)  
  4044e4:	or     ebx,DWORD PTR [ebx+0x79]
  4044e7:	mov    BYTE PTR [edx+0x6c143249],al
  4044ed:	xlat   BYTE PTR ds:[ebx]
  4044ee:	ffreep st(3)
  4044f0:	dec    edi
  4044f1:	mov    dl,0x8c
  4044f3:	pop    edi
  4044f4:	sbb    DWORD PTR [eax-0x76b8016e],0xc334c219
  4044fe:	into   
  4044ff:	test   BYTE PTR [eax-0x7882c24f],dl
  404505:	aad    0x38
  404507:	les    edx,FWORD PTR [eax]
  404509:	rol    BYTE PTR [eax-0x3c85fb2c],0xcf
  404510:	dec    ecx
  404511:	xchg   ebx,eax
  404512:	mov    dh,0x65
  404514:	loopne 0x4044ee
  404516:	jb     0x4044da
  404518:	hlt    
  404519:	and    eax,0xa06a098a
  40451e:	cld    
  40451f:	lds    ecx,FWORD PTR [eax]
  404521:	cdq    
  404522:	sbb    BYTE PTR [eax-0x7625c8e],bh
  404528:	repz or dh,BYTE PTR ds:0xf62b290a
  40452f:	test   DWORD PTR [ebp+0x33],eax
  404532:	daa    
  404533:	sub    BYTE PTR [edi-0x4c4ccf9d],ch
  404539:	cmp    esp,DWORD PTR [edx-0x483f5e5b]
  40453f:	mov    bh,BYTE PTR [edi-0x32]
  404542:	sub    eax,0xd35b75da
  404547:	jbe    0x40457a
  404549:	push   ebx
  40454a:	mov    DWORD PTR [edx+0xf],esp
  40454d:	and    eax,0x12b758cf
  404552:	xchg   edx,eax
  404553:	sub    eax,DWORD PTR [edx-0x9]
  404556:	leave  
  404557:	xor    esi,DWORD PTR [esi]
  404559:	sbb    BYTE PTR [esi+0x1],bl
  40455c:	cmp    DWORD PTR [edx],ebx
  40455e:	scas   eax,DWORD PTR es:[edi]
  40455f:	into   
  404560:	jb     0x40452b
  404562:	pop    ebp
  404563:	pop    esi
  404564:	mov    al,0x54
  404566:	aam    0xb1
  404568:	sbb    BYTE PTR [edi],0xd1
  40456b:	mov    DWORD PTR [edi+0xd4deff],esi
  404571:	mov    edx,DWORD PTR [ecx]
  404573:	outs   dx,DWORD PTR ds:[esi]
  404574:	outs   dx,DWORD PTR ds:[esi]
  404575:	js     0x4044f9
  404577:	add    al,0xfb
  404579:	popf   
  40457a:	fs in  eax,dx
  40457c:	ins    BYTE PTR es:[edi],dx
  40457d:	cmp    eax,0x629cbdcf
  404582:	rcr    DWORD PTR [edx],0xf8
  404585:	fmul   DWORD PTR [esi]
  404587:	mov    bh,0x2a
  404589:	sbb    BYTE PTR [ecx+0x14ff75b1],dh
  40458f:	sar    DWORD PTR [edx+0x5b],cl
  404592:	dec    esi
  404593:	leave  
  404594:	pop    ebp
  404595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404596:	add    dl,bh
  404598:	in     al,dx
  404599:	call   DWORD PTR [ecx-0x6f494f12]
  40459f:	add    DWORD PTR [ebx+0x1fd87e72],0x532a2683
  4045a9:	adc    ecx,DWORD PTR [eax-0x12f73531]
  4045af:	dec    esi
  4045b0:	(bad)  
  4045b1:	aas    
  4045b2:	sub    ebx,DWORD PTR [edi-0x5107e170]
  4045b8:	inc    ebp
  4045b9:	(bad)  
  4045ba:	dec    eax
  4045bb:	addr16 push esp
  4045bd:	(bad)  
  4045be:	jmp    0x672074df
  4045c3:	or     al,0xfc
  4045c5:	cdq    
  4045c6:	push   edi
  4045c7:	jno    0x404625
  4045c9:	mov    ebp,0x62552913
  4045ce:	mov    ds:0xd7ec1f36,eax
  4045d3:	lods   al,BYTE PTR ds:[esi]
  4045d4:	and    DWORD PTR [esi+0x36],0xffffffc2
  4045d8:	and    al,al
  4045da:	loopne 0x404629
  4045dc:	pusha  
  4045dd:	std    
  4045de:	mov    al,0x2
  4045e0:	pop    ebx
  4045e1:	scas   al,BYTE PTR es:[edi]
  4045e2:	fisttp QWORD PTR [esi]
  4045e4:	mov    ?,edi
  4045e6:	push   ebp
  4045e7:	and    al,0x1f
  4045e9:	sub    al,0xa4
  4045eb:	punpckldq mm0,DWORD PTR [esi]
  4045ee:	mov    bl,0xf0
  4045f0:	sub    ebx,ebx
  4045f2:	into   
  4045f3:	mov    edx,0xa4178014
  4045f8:	and    eax,0x58bec5d8
  4045fd:	add    al,0xf
  4045ff:	push   0x2ea4491c
  404604:	and    BYTE PTR [edi-0x5e16631d],al
  40460a:	jmp    0x78407328
  40460f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404610:	cmp    edx,ebp
  404612:	gs jmp 0xc731d688
  404618:	xor    eax,0x56b664eb
  40461d:	shr    BYTE PTR [ebp-0x62],1
  404620:	pop    eax
  404621:	mov    bh,dh
  404623:	add    BYTE PTR [edi],dl
  404625:	or     bh,cl
  404627:	js     0x40468e
  404629:	xor    DWORD PTR [ebx],ecx
  40462b:	xor    dh,BYTE PTR [ecx+0x1b]
  40462e:	(bad)  
  40462f:	clc    
  404630:	mov    al,ds:0x8327e457
  404635:	enter  0x59e,0x1
  404639:	sahf   
  40463a:	cmp    ebx,esp
  40463c:	dec    eax
  40463d:	bound  esp,QWORD PTR ds:0xf3920821
  404643:	jnp    0x4045d7
  404645:	mov    bl,0x58
  404647:	adc    eax,0xf6a0abdf
  40464c:	cld    
  40464d:	cld    
  40464e:	adc    al,0xf6
  404650:	mov    esi,0xd4e3b841
  404655:	mov    es,ebp
  404657:	dec    edi
  404658:	ret    
  404659:	es aaa 
  40465b:	clc    
  40465c:	jl     0x4045e1
  40465e:	jbe    0x404642
  404660:	add    DWORD PTR [ebp+0x66c1d82f],ebp
  404666:	outs   dx,BYTE PTR ds:[esi]
  404667:	sbb    eax,0x2acec158
  40466c:	sbb    BYTE PTR [ebp+0x2c],bl
  40466f:	pop    ebx
  404670:	inc    ebp
  404671:	mov    ebx,0x1bc5d09e
  404677:	inc    edx
  404678:	int3   
  404679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40467a:	pop    ebx
  40467b:	inc    esp
  40467c:	cmp    al,0xcf
  40467e:	jae    0x404628
  404680:	mov    al,0xda
  404682:	cs jb  0x40469d
  404685:	inc    ebp
  404686:	into   
  404687:	imul   eax,DWORD PTR [edi-0x1],0xffffffcd
  40468b:	and    al,0xe0
  40468d:	gs stos BYTE PTR es:[edi],al
  40468f:	xor    DWORD PTR [ebp+0x70],esi
  404692:	mov    bh,0xc3
  404694:	adc    esp,DWORD PTR ds:0xee92a9c4
  40469a:	pop    ebx
  40469b:	ret    
  40469c:	aaa    
  40469d:	jg     0x404658
  40469f:	sbb    DWORD PTR [edi-0x6b53c9bf],ecx
  4046a5:	and    BYTE PTR [edi],bl
  4046a7:	daa    
  4046a8:	es in  al,dx
  4046aa:	or     BYTE PTR [edx+0x49],0x49
  4046ae:	push   ds
  4046af:	push   ebx
  4046b0:	or     eax,0xfd3ca686
  4046b5:	pop    ecx
  4046b6:	mov    bh,0xe2
  4046b8:	pusha  
  4046b9:	ror    DWORD PTR [ecx-0x57],cl
  4046bc:	test   BYTE PTR [eax+ebp*2-0x314462d5],ah
  4046c3:	mov    eax,0x1ed13ece
  4046c8:	inc    esp
  4046c9:	mov    eax,ds:0x959ae10a
  4046ce:	retf   
  4046cf:	sub    edi,DWORD PTR [esi]
  4046d1:	push   ebp
  4046d2:	call   DWORD PTR [edi-0x2527166f]
  4046d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d9:	xor    eax,0x9c69e4d8
  4046de:	scas   eax,DWORD PTR es:[edi]
  4046df:	mov    esp,0x8e8c12ba
  4046e4:	mov    dl,0x60
  4046e6:	jae    0x4046cc
  4046e8:	and    BYTE PTR [esi+esi*2+0x64],dh
  4046ec:	pop    edx
  4046ed:	mov    esp,0x62c1f5df
  4046f2:	imul   ebx,DWORD PTR [edx],0xffffffb5
  4046f5:	ret    0x580f
  4046f8:	sar    BYTE PTR [ecx+0x13],0x7f
  4046fc:	jno    0x40476d
  4046fe:	ss pop edx
  404700:	add    cl,BYTE PTR [edi+0x513df21f]
  404706:	in     al,0x4b
  404708:	jb     0x404713
  40470a:	test   al,0x4a
  40470c:	dec    ebx
  40470d:	and    DWORD PTR [edi+0x1d],0xffffffbc
  404711:	stc    
  404712:	adc    edi,0x2eacdd7
  404718:	or     DWORD PTR [ebx],ebx
  40471a:	sub    DWORD PTR [edx],ebx
  40471c:	inc    ebp
  40471d:	add    eax,0x362e351e
  404722:	xor    edx,DWORD PTR [edx]
  404724:	jmp    0x185f54d3
  404729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472a:	mov    ebp,0x4a05b908
  40472f:	fscale 
  404731:	out    dx,eax
  404732:	mov    BYTE PTR [edx+0x1a],0x2a
  404736:	sub    eax,0xda3773b2
  40473b:	mov    dl,BYTE PTR [ebx-0x6a5aed0b]
  404741:	inc    edx
  404742:	iret   
  404743:	jno    0x404744
  404745:	in     al,0x3b
  404747:	xor    al,BYTE PTR [eax-0x4c]
  40474a:	fild   QWORD PTR [ebp+0x53745256]
  404750:	mov    esp,0xb772ec11
  404755:	fs ins DWORD PTR es:[edi],dx
  404757:	hlt    
  404758:	sbb    ch,ah
  40475a:	and    DWORD PTR ds:0x8fa58846,edi
  404760:	mov    esp,0xbbf99a31
  404765:	mov    al,ds:0x7d549d7e
  40476a:	mov    fs,WORD PTR [ebx+0x65]
  40476d:	xor    eax,0x3b47796d
  404772:	jae    0x4047ac
  404774:	pusha  
  404775:	pop    es
  404776:	cdq    
  404777:	mov    DWORD PTR [eax-0xb9fe76c],0xe1320b72
  404781:	dec    eax
  404782:	retf   0xece0
  404785:	mov    bh,0x32
  404787:	mov    edi,0x4c304eb6
  40478c:	cli    
  40478d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40478e:	vmwrite esp,DWORD PTR [esi-0x66869276]
  404795:	das    
  404796:	retf   0x820d
  404799:	call   0x47df0286
  40479e:	fisttp WORD PTR [esi+0x30]
  4047a1:	mov    al,0x10
  4047a3:	into   
  4047a4:	mov    esp,0x96c8352c
  4047a9:	xor    edx,edx
  4047ab:	cld    
  4047ac:	clc    
  4047ad:	stos   BYTE PTR es:[edi],al
  4047ae:	loop   0x40474f
  4047b0:	scas   al,BYTE PTR es:[edi]
  4047b1:	idiv   DWORD PTR [esp+ecx*2]
  4047b4:	faddp  st(5),st
  4047b6:	(bad)  
  4047b8:	sub    esp,esp
  4047ba:	jmp    0x4047c2
  4047bc:	push   0x68
  4047be:	ficomp DWORD PTR [ecx+0x32]
  4047c1:	das    
  4047c2:	js     0x40481b
  4047c4:	xor    DWORD PTR [edi],ecx
  4047c6:	ret    0xf488
  4047c9:	jne    0x4047b8
  4047cb:	inc    esi
  4047cc:	(bad)  
  4047cd:	es jmp 0xe1e7:0xc9ddb240
  4047d5:	mov    ds:0xc56d31b7,al
  4047da:	jb     0x404776
  4047dc:	adc    DWORD PTR [eax-0x5e57958d],ebp
  4047e2:	adc    edi,ecx
  4047e4:	adc    al,0x1f
  4047e6:	outs   dx,DWORD PTR ds:[esi]
  4047e7:	jmp    0x519:0x9a693d7d
  4047ee:	fmul   DWORD PTR [edx]
  4047f0:	add    al,0x68
  4047f2:	imul   eax,DWORD PTR [ebx-0x34],0xffffffd8
  4047f6:	cmp    al,0xe2
  4047f8:	and    edi,ebp
  4047fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047fb:	xor    edi,0x7c
  4047fe:	cs inc esp
  404800:	pushf  
  404801:	adc    BYTE PTR [edi-0x17],dl
  404804:	push   eax
  404805:	xchg   edi,eax
  404806:	push   0xffffffd8
  404808:	bound  ecx,QWORD PTR [edi-0x5]
  40480b:	dec    ebp
  40480c:	or     BYTE PTR [ebx+0x2],ch
  40480f:	mov    cl,0xef
  404812:	push   edi
  404813:	es ja  0x40481e
  404816:	add    eax,0xbd64cf
  40481b:	and    bl,cl
  40481d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481e:	mov    esp,DWORD PTR [eax-0x36]
  404821:	xor    ecx,DWORD PTR [ebp+0x77]
  404824:	mov    edi,0xc88883b6
  404829:	adc    edi,DWORD PTR [eax+0x4ef95ee2]
  40482f:	aas    
  404830:	adc    eax,0x80b32620
  404835:	cmp    ax,0xe3a3
  404839:	and    eax,0x5dd71445
  40483e:	es adc eax,0xd67b45fc
  404844:	sub    bh,BYTE PTR [esi]
  404846:	in     eax,0x46
  404848:	imul   ebp,DWORD PTR [ebx+0x20],0x2ec2966b
  40484f:	hlt    
  404850:	idiv   BYTE PTR [esi+0x9f8b181]
  404856:	mov    ebx,0xaa4d5931
  40485b:	int3   
  40485c:	cld    
  40485d:	pop    ds
  40485e:	jae    0x40488a
  404860:	fwait
  404861:	sahf   
  404862:	fwait
  404863:	pop    edi
  404864:	mov    ebx,0x96683239
  404869:	out    0xe8,al
  40486b:	xchg   DWORD PTR [ebp-0xe],ecx
  40486e:	push   ds
  40486f:	(bad)  
  404870:	shr    DWORD PTR [edi-0x5f],cl
  404873:	fcomp  st(1)
  404875:	push   edx
  404876:	and    al,0xd1
  404878:	fisubr DWORD PTR [edi+0x64]
  40487b:	repnz sub DWORD PTR [edi-0x49790def],0x494288f4
  404886:	ret    0xe82f
  404889:	sbb    al,0x8d
  40488b:	into   
  40488c:	pop    es
  40488d:	xchg   ecx,eax
  40488e:	(bad)  [ebx-0x38301875]
  404894:	fsub   DWORD PTR [eax+ebx*8]
  404897:	addr16 jl 0x404862
  40489a:	inc    esi
  40489b:	sti    
  40489c:	mov    al,0x62
  40489e:	push   esp
  40489f:	sbb    ch,BYTE PTR [esi+0x12]
  4048a2:	add    DWORD PTR [eax-0x13fdb3ab],ebp
  4048a8:	test   BYTE PTR [edi+ebp*2],0xc
  4048ac:	xor    DWORD PTR [ebp+0x7b],esi
  4048af:	lock pop edi
  4048b1:	sbb    al,0xd5
  4048b3:	lar    edi,WORD PTR [edx-0x2c]
  4048b7:	mov    ds:0xb06aa718,al
  4048bc:	(bad)  
  4048be:	xchg   ebp,eax
  4048bf:	sbb    eax,0x64ef33a7
  4048c4:	in     al,0xe1
  4048c6:	xchg   ebx,eax
  4048c7:	pusha  
  4048c8:	loop   0x404904
  4048ca:	dec    edi
  4048cb:	ds nop
  4048cd:	jg     0x4048e2
  4048cf:	dec    esp
  4048d0:	ins    BYTE PTR es:[edi],dx
  4048d1:	in     al,dx
  4048d2:	repz in al,dx
  4048d4:	xchg   ecx,eax
  4048d5:	dec    esp
  4048d6:	inc    esi
  4048d7:	cmp    BYTE PTR [eax+eiz*8],ch
  4048da:	retf   
  4048db:	inc    esi
  4048dc:	jecxz  0x404897
  4048de:	sub    DWORD PTR [ebx+edi*4],ecx
  4048e1:	pop    gs
  4048e3:	rcr    ah,1
  4048e5:	fwait
  4048e6:	xchg   ecx,eax
  4048e7:	loop   0x4048f8
  4048e9:	jnp    0x404905
  4048eb:	jmp    0x6a979b68
  4048f0:	push   0xffffffcb
  4048f2:	jecxz  0x404944
  4048f4:	shr    BYTE PTR [edi+0xa],0x78
  4048f8:	out    dx,eax
  4048f9:	mov    cl,0x9d
  4048fb:	jecxz  0x404887
  4048fd:	arpl   WORD PTR [edx+ebp*4-0x16],bx
  404901:	das    
  404902:	push   ss
  404903:	adc    dl,0x1f
  404906:	call   0x605b:0x7bf3b32c
  40490d:	dec    ebp
  40490e:	sbb    DWORD PTR [edx+0x68a4e5d2],0xffffffcc
  404915:	push   eax
  404916:	(bad)  
  404917:	ret    0xc12d
  40491a:	pop    esi
  40491b:	cmp    eax,0xce759c48
  404920:	adc    dh,al
  404922:	sub    eax,0x7a2cd228
  404927:	mov    ecx,0xbdbad98
  40492c:	cli    
  40492d:	std    
  40492e:	popa   
  40492f:	xor    al,BYTE PTR ds:0x5a959e8b
  404935:	dec    edi
  404936:	test   al,0xdf
  404938:	push   ebx
  404939:	jno    0x404970
  40493b:	sbb    al,0x85
  40493d:	jmp    0xcd3:0xef1ec425
  404944:	xchg   edx,eax
  404945:	in     eax,dx
  404946:	sub    esp,DWORD PTR [eax+0x47]
  404949:	pop    ebp
  40494a:	xor    bh,BYTE PTR [ecx-0x6e]
  40494d:	add    ch,dh
  40494f:	push   edi
  404950:	push   edx
  404951:	mov    eax,0xa631f5e0
  404956:	dec    ebp
  404957:	test   BYTE PTR [esi*2-0x5458b283],al
  40495e:	dec    edx
  40495f:	push   edx
  404960:	in     eax,0x3e
  404962:	dec    edx
  404963:	dec    edi
  404964:	outs   dx,DWORD PTR ds:[esi]
  404965:	imul   ebp,DWORD PTR [ecx+0x22],0x2d
  404969:	push   ds
  40496a:	test   eax,0x2d601cc6
  40496f:	lods   al,BYTE PTR ds:[esi]
  404970:	mov    ecx,0x85cce132
  404975:	ret    
  404976:	jnp    0x4049d6
  404978:	jge    0x4049c0
  40497a:	dec    ebp
  40497b:	push   esp
  40497c:	push   ebp
  40497d:	cmp    DWORD PTR [esi],ebp
  40497f:	dec    ebp
  404980:	int3   
  404981:	cli    
  404982:	ja     0x4049e5
  404984:	call   0x5e2d:0xda47e1dd
  40498b:	ret    
  40498c:	scas   al,BYTE PTR es:[edi]
  40498d:	rcr    BYTE PTR [eax-0x72c960cf],cl
  404993:	bound  ecx,QWORD PTR [esi]
  404995:	mov    ebx,0x1cc2e548
  40499a:	xor    ebx,DWORD PTR [edx]
  40499c:	cmp    al,0x39
  40499e:	adc    al,0x7c
  4049a0:	lods   al,BYTE PTR ds:[esi]
  4049a1:	div    ebp
  4049a3:	sub    dh,BYTE PTR [ebx-0x3618324d]
  4049a9:	mov    esp,edx
  4049ab:	out    0x14,al
  4049ad:	or     ecx,esi
  4049af:	mov    ecx,ss
  4049b1:	cwde   
  4049b2:	aad    0x10
  4049b4:	jecxz  0x4049a6
  4049b6:	es adc eax,0x92b78a8e
  4049bc:	ins    DWORD PTR es:[edi],dx
  4049bd:	xchg   edx,eax
  4049be:	outs   dx,BYTE PTR ds:[esi]
  4049bf:	dec    esi
  4049c0:	xor    al,0x95
  4049c2:	mov    eax,ds:0x69ade49a
  4049c7:	sbb    eax,eax
  4049c9:	inc    ecx
  4049ca:	mov    esp,0x2323222b
  4049cf:	cs jns 0x40499a
  4049d2:	xchg   esp,eax
  4049d3:	nop
  4049d4:	jae    0x40496e
  4049d6:	popf   
  4049d7:	in     eax,0x7d
  4049d9:	arpl   WORD PTR [eax-0x23],sp
  4049dc:	inc    DWORD PTR [edx-0x476f65ea]
  4049e2:	call   0xeb74c2ae
  4049e7:	ror    BYTE PTR [edx-0x79],0xbc
  4049eb:	popa   
  4049ec:	shl    DWORD PTR [si-0x57b5],1
  4049f1:	sbb    esi,DWORD PTR [ebx-0x45]
  4049f4:	push   edx
  4049f5:	push   ecx
  4049f6:	xor    dh,BYTE PTR [ebx*2+0x6d372d61]
  4049fd:	ja     0x404a54
  4049ff:	lea    ecx,cs:[esi+edx*2-0x2833032f]
  404a07:	test   DWORD PTR [ebp+0x4037d864],esi
  404a0d:	jnp    0x4049d5
  404a0f:	cmp    al,0xa6
  404a11:	daa    
  404a12:	neg    DWORD PTR [eax+0x43]
  404a15:	cwde   
  404a16:	sti    
  404a17:	out    0x9f,eax
  404a19:	int    0xaf
  404a1b:	cmp    DWORD PTR ds:0x2b2d26e1,0x2952e82c
  404a25:	repz in al,dx
  404a27:	add    dh,bh
  404a29:	jbe    0x404a61
  404a2b:	push   0x6b8244fb
  404a30:	sub    edx,eax
  404a32:	pusha  
  404a33:	dec    edi
  404a34:	sbb    BYTE PTR [ebx],0x78
  404a37:	retf   0x6dd3
  404a3a:	mov    al,ah
  404a3c:	dec    esi
  404a3d:	test   dl,bh
  404a3f:	ret    0xa896
  404a42:	adc    ah,bl
  404a44:	pop    ss
  404a45:	fst    QWORD PTR [ecx+ebx*8-0x76884df8]
  404a4c:	xchg   edi,eax
  404a4d:	out    dx,al
  404a4e:	push   cs
  404a4f:	dec    ecx
  404a50:	ret    
  404a51:	sbb    bh,ch
  404a53:	dec    ebp
  404a54:	dec    eax
  404a55:	xor    DWORD PTR [edx+0x4cb4398f],edi
  404a5b:	inc    ebx
  404a5c:	fidivr WORD PTR [edi*8-0x74935a96]
  404a63:	into   
  404a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a65:	aaa    
  404a66:	(bad)  
  404a67:	test   bh,0x51
  404a6a:	sub    al,0xb4
  404a6c:	dec    eax
  404a6d:	or     al,0x1e
  404a6f:	mov    al,ds:0x6ec333cb
  404a74:	push   ds
  404a75:	sub    DWORD PTR [edi+0x7da569a1],edx
  404a7b:	mov    al,ds:0x52b2bf34
  404a80:	into   
  404a81:	sti    
  404a82:	xor    eax,0xb27db973
  404a87:	pop    edi
  404a88:	xchg   ebx,eax
  404a89:	sub    DWORD PTR [ecx+0x4a],edi
  404a8c:	fimul  DWORD PTR [ebp-0x6ddac785]
  404a92:	rol    BYTE PTR [ebx+0x4e9ec78d],1
  404a98:	std    
  404a99:	sub    al,0x5d
  404a9b:	popf   
  404a9c:	jecxz  0x404a7e
  404a9e:	stc    
  404a9f:	sbb    BYTE PTR [eax],cl
  404aa1:	mov    eax,ds:0xeddd0f8f
  404aa6:	lods   eax,DWORD PTR ds:[esi]
  404aa7:	dec    ecx
  404aa8:	mov    al,0x9
  404aaa:	dec    eax
  404aab:	fs hlt 
  404aad:	mov    dh,0x40
  404aaf:	or     BYTE PTR [ebp+0x6f7ede1f],ch
  404ab5:	xlat   BYTE PTR ds:[ebx]
  404ab6:	gs ins BYTE PTR es:[edi],dx
  404ab8:	pop    ebx
  404ab9:	out    dx,eax
  404aba:	stos   DWORD PTR es:[edi],eax
  404abb:	jne    0x404a7a
  404abd:	test   al,al
  404abf:	mov    BYTE PTR [esi+ecx*4+0x3d7706e5],dl
  404ac6:	sub    DWORD PTR [esi],edx
  404ac8:	mov    ecx,0x73e853c
  404acd:	cmc    
  404ace:	xor    dh,ah
  404ad0:	fnstsw WORD PTR [ecx]
  404ad2:	not    ch
  404ad4:	icebp  
  404ad5:	jl     0x404af5
  404ad7:	test   BYTE PTR [eax-0x2b9541e2],0xf8
  404ade:	(bad)  
  404adf:	mov    esi,0x83feb8cc
  404ae4:	fdivrp st(5),st
  404ae6:	ss cmp eax,0x1e175a36
  404aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aed:	sbb    edi,DWORD PTR [ebx]
  404aef:	shl    DWORD PTR [edi+0x75487c76],0x86
  404af6:	(bad)  
  404af7:	jmp    0x5236dc34
  404afc:	mov    ecx,0x5b07d22
  404b01:	out    0xb5,eax
  404b03:	pop    ebx
  404b04:	mov    dh,0xaa
  404b06:	add    eax,0x264b0a2
  404b0b:	mov    bl,0x32
  404b0d:	jmp    0x404b29
  404b0f:	sub    al,0xe3
  404b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b12:	lods   eax,DWORD PTR ds:[esi]
  404b13:	jmp    0x2290:0x5d451889
  404b1a:	sbb    al,0xed
  404b1c:	or     bh,BYTE PTR [bx+si-0x7f]
  404b20:	xor    al,0x83
  404b22:	xchg   ecx,eax
  404b23:	push   ebx
  404b24:	adc    ecx,DWORD PTR [edi-0x50]
  404b27:	fs jbe 0x404add
  404b2a:	pop    edx
  404b2b:	cdq    
  404b2c:	aaa    
  404b2d:	push   cs
  404b2e:	and    BYTE PTR [ecx-0x2e],bl
  404b31:	inc    eax
  404b32:	xor    DWORD PTR [ebx-0x70],esp
  404b35:	dec    esp
  404b36:	int    0x3b
  404b38:	sub    ebp,DWORD PTR [ebx]
  404b3a:	outs   dx,DWORD PTR ds:[esi]
  404b3b:	inc    ecx
  404b3c:	sub    eax,0xd482b7dd
  404b41:	clc    
  404b42:	xor    al,0x28
  404b44:	cli    
  404b45:	cmp    BYTE PTR [eax],dh
  404b47:	push   edi
  404b48:	popa   
  404b49:	or     al,cl
  404b4b:	adc    esp,DWORD PTR [eax-0x6cfb6aae]
  404b51:	repnz cmp DWORD PTR [edx+0x70c77df7],0xffffff89
  404b59:	int    0x59
  404b5b:	jo     0x404bb3
  404b5d:	sub    DWORD PTR [ecx],eax
  404b5f:	xchg   ebp,eax
  404b60:	jmp    FWORD PTR ds:0x8542c81f
  404b66:	lea    ebx,[esi-0x19]
  404b69:	inc    ebx
  404b6a:	jmp    0xb980:0xecd2f332
  404b71:	data16 into 
  404b73:	and    eax,0x21421e5d
  404b78:	cli    
  404b79:	iret   
  404b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b7b:	ficom  WORD PTR [edi-0x3437432c]
  404b81:	jle    0x404b9a
  404b83:	cmp    eax,0x1e7aaf59
  404b88:	mov    BYTE PTR [ecx],al
  404b8a:	in     al,dx
  404b8b:	jg     0x404b13
  404b8d:	adc    al,0xd
  404b8f:	je     0x404b21
  404b91:	push   0x6a
  404b93:	call   0xb72b90a6
  404b98:	(bad)  
  404b99:	cdq    
  404b9a:	icebp  
  404b9b:	and    DWORD PTR [esi+0x54ce0fcb],ebp
  404ba1:	adc    DWORD PTR [ecx],ebp
  404ba3:	xor    dh,bl
  404ba5:	dec    edi
  404ba6:	jmp    0x5b8784a6
  404bab:	push   cs
  404bac:	loopne 0x404b75
  404bae:	adc    edx,esp
  404bb0:	ja     0x404bd9
  404bb2:	lahf   
  404bb3:	dec    edi
  404bb4:	sbb    esi,DWORD PTR [esi+0x8]
  404bb7:	mov    bl,BYTE PTR [eax]
  404bb9:	daa    
  404bba:	std    
  404bbb:	jmp    0x1b35:0x5f042ba
  404bc2:	cwde   
  404bc3:	dec    esp
  404bc4:	adc    DWORD PTR [ebx-0x7e2d58b3],ebp
  404bca:	loop   0x404bc5
  404bcc:	cmp    ah,BYTE PTR [eax+0x51]
  404bcf:	sub    al,0x61
  404bd1:	push   esi
  404bd2:	xchg   ebx,eax
  404bd3:	scas   eax,DWORD PTR es:[edi]
  404bd4:	lds    edx,FWORD PTR [ebp+0x6425624f]
  404bda:	(bad)  
  404bdb:	jae    0x404bb7
  404bdd:	pop    es
  404bde:	or     BYTE PTR [esi+0x689dc8e9],dh
  404be4:	pop    edx
  404be5:	ss push ecx
  404be7:	out    0x58,al
  404be9:	fwait
  404bea:	les    edx,FWORD PTR [esi-0x43]
  404bed:	cmp    bl,BYTE PTR [ebx-0x31]
  404bf0:	mov    ch,0xdb
  404bf2:	inc    esi
  404bf3:	xchg   esi,eax
  404bf4:	ret    
  404bf5:	and    al,0xcb
  404bf7:	nop    DWORD PTR [eax-0x6cc82ecd]
  404bfe:	lods   al,BYTE PTR ds:[esi]
  404bff:	(bad)  
  404c00:	std    
  404c01:	jl     0x404c34
  404c03:	and    al,0x8f
  404c05:	imul   ecx,DWORD PTR ds:0xa9ab056b,0xffffffe0
  404c0c:	sar    BYTE PTR [ebx],cl
  404c0e:	test   DWORD PTR [esi],0xf2bee4aa
  404c14:	jne    0x404bfb
  404c16:	dec    esi
  404c17:	das    
  404c18:	out    dx,al
  404c19:	rcr    bh,1
  404c1b:	inc    ebx
  404c1c:	pop    ebx
  404c1d:	std    
  404c1e:	call   0x40d478e5
  404c23:	cdq    
  404c24:	clc    
  404c25:	(bad)  
  404c26:	jne    0x404c01
  404c28:	push   eax
  404c29:	or     bh,bh
  404c2b:	imul   ebx,esi,0xcb7c56f1
  404c31:	pop    ss
  404c32:	pop    esi
  404c33:	daa    
  404c34:	int3   
  404c35:	(bad)  
  404c36:	addr16 pop edx
  404c38:	leave  
  404c39:	mov    al,ds:0xad421e28
  404c3e:	iret   
  404c3f:	ret    0x4c94
  404c42:	adc    ebx,DWORD PTR [eax+0x55177266]
  404c48:	out    dx,eax
  404c49:	mov    edx,0x76493a3e
  404c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c4f:	mov    ch,0xf6
  404c51:	sub    bl,ah
  404c53:	int    0x85
  404c55:	pop    esi
  404c56:	dec    ebp
  404c57:	jb     0x404c54
  404c59:	mul    edx
  404c5b:	or     edx,DWORD PTR [edi+0x5d]
  404c5e:	jb     0x404ca6
  404c60:	loop   0x404cb3
  404c62:	adc    al,0x8e
  404c64:	out    dx,eax
  404c65:	adc    eax,0x975fb0d8
  404c6a:	sub    al,bl
  404c6c:	mov    ah,0x33
  404c6e:	cmc    
  404c6f:	sub    cl,BYTE PTR [ebx]
  404c71:	sub    esi,DWORD PTR [esp+esi*4+0x20]
  404c75:	add    bh,BYTE PTR ds:0x5be5fbc1
  404c7b:	bound  edx,QWORD PTR ds:0x4182207a
  404c81:	xor    ebp,edx
  404c83:	icebp  
  404c84:	je     0x404d05
  404c86:	xchg   DWORD PTR [edx],ecx
  404c88:	sahf   
  404c89:	fsub   DWORD PTR [edi-0x7228d2e3]
  404c8f:	mov    dl,0x8b
  404c91:	push   ebx
  404c92:	retf   0x50d2
  404c95:	push   0xb6f5e3d9
  404c9a:	jnp    0x404cbf
  404c9c:	xchg   ebx,eax
  404c9d:	cmp    DWORD PTR [edi],ebp
  404c9f:	ror    DWORD PTR [edx-0x65],cl
  404ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ca3:	mov    edi,0x135c36d3
  404ca8:	fs pop ebp
  404caa:	pop    eax
  404cab:	push   edi
  404cac:	aad    0xfc
  404cae:	jl     0x404cb9
  404cb0:	push   ss
  404cb1:	push   ds
  404cb2:	or     DWORD PTR [esi],esi
  404cb4:	dec    esi
  404cb5:	cmp    BYTE PTR ds:0xc64b2592,ch
  404cbb:	lods   eax,DWORD PTR ds:[esi]
  404cbc:	xlat   BYTE PTR ds:[ebx]
  404cbd:	popf   
  404cbe:	xor    esp,DWORD PTR [edx]
  404cc0:	adc    BYTE PTR [ebx+0x67943175],ch
  404cc6:	mov    cl,0xa
  404cc8:	inc    ecx
  404cc9:	sub    al,0xa5
  404ccb:	sub    DWORD PTR [edx-0x21],edi
  404cce:	loope  0x404d3c
  404cd0:	and    al,0xea
  404cd2:	jnp    0x404d23
  404cd4:	cwde   
  404cd5:	and    eax,0x8ae8b5cc
  404cda:	repnz xor eax,0xca945d49
  404ce0:	popf   
  404ce1:	fwait
  404ce2:	stos   DWORD PTR es:[edi],eax
  404ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ce4:	xor    al,ah
  404ce6:	(bad)  
  404ce7:	imul   edi,DWORD PTR [edx+0xab2b771],0x3c
  404cee:	sbb    ebp,DWORD PTR [esi-0x264c74e7]
  404cf4:	jmp    0x2210:0xf85631ca
  404cfb:	jmp    0x404c92
  404cfd:	push   esi
  404cfe:	shl    DWORD PTR [edi],0xf0
  404d01:	ins    BYTE PTR es:[edi],dx
  404d02:	scas   al,BYTE PTR es:[edi]
  404d03:	aaa    
  404d04:	adc    BYTE PTR [ebp-0x513178d6],dl
  404d0a:	js     0x404cfc
  404d0c:	xchg   ebp,eax
  404d0d:	mov    eax,es:0xc4b30f99
  404d13:	inc    ebp
  404d14:	inc    esp
  404d15:	adc    ah,BYTE PTR [ebp+0x12]
  404d18:	leave  
  404d19:	mov    esi,0xd818877b
  404d1e:	and    ebp,edi
  404d20:	jge    0x404ce3
  404d22:	mov    ?,WORD PTR [edi+ecx*1-0x38405d62]
  404d29:	mov    esi,0x239232c1
  404d2e:	mov    edi,0x5f37f4c2
  404d33:	fsub   QWORD PTR [ecx-0x53]
  404d36:	ficom  WORD PTR [esi]
  404d38:	push   ss
  404d39:	test   BYTE PTR ds:[esi],cl
  404d3c:	adc    cl,BYTE PTR [eax]
  404d3e:	gs push ebx
  404d40:	sub    ebp,esp
  404d42:	push   esp
  404d43:	stos   DWORD PTR es:[edi],eax
  404d44:	xchg   ecx,eax
  404d45:	scas   eax,DWORD PTR es:[edi]
  404d46:	mov    bl,0xb3
  404d48:	dec    eax
  404d49:	icebp  
  404d4a:	or     dl,BYTE PTR [ecx]
  404d4c:	jns    0x404ced
  404d4e:	repz mov al,0xeb
  404d51:	cdq    
  404d52:	fcmovb st,st(0)
  404d54:	ins    DWORD PTR es:[edi],dx
  404d55:	xchg   ecx,eax
  404d56:	jmp    0xb77f5085
  404d5b:	sub    eax,0xea03f55f
  404d60:	jns    0x404d7b
  404d62:	ss jmp 0xf23f:0xd7b6ae87
  404d6a:	fdivr  st(0),st
  404d6c:	add    edi,ebp
  404d6e:	imul   BYTE PTR [eax]
  404d70:	aas    
  404d71:	out    dx,al
  404d72:	into   
  404d73:	inc    eax
  404d74:	stc    
  404d75:	xchg   edi,eax
  404d76:	loopne 0x404de1
  404d78:	fwait
  404d79:	inc    ebp
  404d7a:	dec    esp
  404d7b:	sub    eax,0x78fa345c
  404d80:	fild   QWORD PTR [ecx-0x52e53267]
  404d86:	mov    bl,0xdd
  404d88:	mov    eax,0x91db2ec1
  404d8d:	pusha  
  404d8e:	repz pop ecx
  404d90:	pop    edx
  404d91:	retf   0x77d9
  404d94:	hlt    
  404d95:	or     edx,DWORD PTR [edi+edx*1+0x4166877c]
  404d9c:	mov    al,0xce
  404d9e:	test   al,0x27
  404da0:	cli    
  404da1:	aas    
  404da2:	dec    ebx
  404da3:	dec    esi
  404da4:	jle    0x404e0b
  404da6:	add    eax,0x671259cd
  404dab:	mov    edi,0x71e0b4ec
  404db0:	pop    ss
  404db1:	fnsetpm(287 only) 
  404db3:	mov    esi,0x658509f1
  404db8:	mov    ebx,0xbcbe5304
  404dbd:	repnz scas al,BYTE PTR es:[edi]
  404dbf:	outs   dx,BYTE PTR ds:[esi]
  404dc0:	pop    si
  404dc2:	mov    ebp,0xc7f96345
  404dc7:	fcom   DWORD PTR [esi-0x242ca4ec]
  404dcd:	mov    dl,0xc2
  404dcf:	out    0x80,eax
  404dd1:	inc    edx
  404dd2:	mov    ebx,0xd2eb7e8f
  404dd7:	dec    ecx
  404dd8:	add    BYTE PTR [ecx],ch
  404dda:	inc    edi
  404ddb:	jo     0x404dd1
  404ddd:	inc    edx
  404dde:	(bad)  
  404ddf:	adc    bl,BYTE PTR [edi+edx*4-0x27b06f77]
  404de6:	in     al,dx
  404de7:	mov    esi,0x475368db
  404dec:	fistp  DWORD PTR [edi]
  404dee:	cli    
  404def:	stos   BYTE PTR es:[edi],al
  404df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df1:	test   al,0x97
  404df3:	daa    
  404df4:	lea    ebx,ds:0x901fe042
  404dfa:	(bad)  
  404dfb:	mov    al,ss:0xa99cceb
  404e01:	lods   eax,DWORD PTR ds:[esi]
  404e02:	out    0xbc,eax
  404e04:	inc    edx
  404e05:	add    BYTE PTR [eax-0x58],dh
  404e08:	cmp    DWORD PTR [ebx-0x1a0f84cf],eax
  404e0e:	popf   
  404e0f:	lock and al,0xda
  404e12:	sbb    ah,BYTE PTR [ebx-0x7742abee]
  404e18:	push   ds
  404e19:	pop    ebx
  404e1a:	stc    
  404e1b:	std    
  404e1c:	ins    DWORD PTR es:[edi],dx
  404e1d:	ins    BYTE PTR es:[edi],dx
  404e1e:	inc    ecx
  404e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e20:	dec    eax
  404e21:	jne    0x404dd3
  404e23:	xor    DWORD PTR [edx+0x40],0x23
  404e27:	pop    ebp
  404e28:	out    dx,al
  404e29:	lods   eax,DWORD PTR ds:[esi]
  404e2a:	nop
  404e2b:	iret   
  404e2c:	int3   
  404e2d:	fiadd  WORD PTR ds:[eax]
  404e30:	pushf  
  404e31:	mov    BYTE PTR [bx+si+0x98b],cl
  404e36:	jae    0x404e97
  404e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e39:	push   edi
  404e3a:	mov    cl,BYTE PTR [ebp+0x4c]
  404e3d:	mov    dl,0x7b
  404e3f:	xchg   DWORD PTR [ebp+0x6b],edi
  404e42:	adc    ah,BYTE PTR [eax-0x4025d7f8]
  404e48:	packsswb mm1,mm5
  404e4b:	and    BYTE PTR [ebx+ecx*8],ah
  404e4e:	sub    cl,bh
  404e50:	sub    edi,ebx
  404e52:	test   eax,0xad372747
  404e57:	in     eax,0xe6
  404e59:	rcl    ebp,cl
  404e5b:	mov    ebx,0xc63ad37f
  404e60:	adc    BYTE PTR [edx],cl
  404e62:	xchg   edi,eax
  404e63:	mov    ds:0x4d2527cc,eax
  404e68:	repnz lods eax,DWORD PTR ds:[esi]
  404e6a:	out    dx,al
  404e6b:	imul   eax,DWORD PTR [ecx],0xaf66d82
  404e71:	mov    DWORD PTR [edi+0x6e],edx
  404e74:	fsubr  QWORD PTR [ebx+eiz*1+0x2f]
  404e78:	push   ds
  404e79:	sub    eax,0xb6fa3dcb
  404e7e:	xor    DWORD PTR [ebx],esi
  404e80:	adc    eax,0xdd0756b6
  404e85:	stos   DWORD PTR es:[edi],eax
  404e86:	pop    ecx
  404e87:	and    DWORD PTR [ebx],0xfa3b561f
  404e8d:	adc    BYTE PTR [eax-0x33],cl
  404e90:	mov    ebp,0xd380e515
  404e95:	out    dx,al
  404e96:	push   ebp
  404e97:	call   0x674b:0xc3973875
  404e9e:	inc    esp
  404e9f:	and    DWORD PTR [ecx+0x18],ebp
  404ea2:	cmc    
  404ea3:	js     0x404eae
  404ea5:	mov    BYTE PTR [edx-0x1c655b3b],bl
  404eab:	enter  0x391c,0xa9
  404eaf:	in     al,dx
  404eb0:	imul   esi,DWORD PTR [edi],0x7e
  404eb3:	push   es
  404eb4:	retf   
  404eb5:	xchg   ebp,eax
  404eb6:	fld    DWORD PTR [edi+ebp*2+0x6368a0ac]
  404ebd:	ja     0x404ecc
  404ebf:	inc    eax
  404ec0:	fwait
  404ec1:	imul   ebp,eax,0xe072912
  404ec7:	imul   BYTE PTR [ebx+0x64]
  404eca:	retf   0xbb5c
  404ecd:	cmp    BYTE PTR [ebx],0x51
  404ed0:	mov    ebp,0x91a15ccc
  404ed5:	cmp    DWORD PTR [ebx+0x2510f702],ebx
  404edb:	je     0x404e79
  404edd:	iret   
  404ede:	stc    
  404edf:	enter  0xcea3,0xf1
  404ee3:	mov    dl,0xfc
  404ee5:	xchg   edi,eax
  404ee6:	and    eax,0x28b1855b
  404eeb:	retf   0xd010
  404eee:	jle    0x404e8b
  404ef0:	sub    esi,DWORD PTR ds:0x4ea68303
  404ef6:	test   eax,0x7ddfbbd6
  404efb:	cmp    ch,ah
  404efd:	test   eax,eax
  404eff:	clc    
  404f00:	sti    
  404f01:	push   es
  404f02:	test   eax,0x6c6f739e
  404f07:	test   DWORD PTR [edx],esi
  404f09:	pushf  
  404f0a:	mov    al,0x8e
  404f0c:	ror    BYTE PTR ds:0x24c0a06d,0x70
  404f13:	mov    ah,0x21
  404f15:	cmp    al,0x96
  404f17:	sahf   
  404f18:	js     0x404eec
  404f1a:	cdq    
  404f1b:	rcr    esi,cl
  404f1d:	xchg   edx,eax
  404f1e:	xlat   BYTE PTR ds:[ebx]
  404f1f:	push   ebx
  404f20:	sub    ch,BYTE PTR [esi+0x26a1d843]
  404f26:	xchg   esi,edx
  404f28:	pop    ebx
  404f29:	cwde   
  404f2a:	inc    ebp
  404f2b:	and    al,0x66
  404f2d:	adc    eax,0x1edf4044
  404f32:	xchg   ebp,eax
  404f33:	dec    esp
  404f34:	gs jg  0x404ee7
  404f37:	outs   dx,DWORD PTR ds:[esi]
  404f38:	fsubp  st(0),st
  404f3a:	(bad)  
  404f3b:	int    0x87
  404f3d:	out    dx,al
  404f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3f:	pop    ss
  404f40:	aas    
  404f41:	sub    dh,BYTE PTR fs:[ebx]
  404f44:	adc    DWORD PTR [edx],ecx
  404f46:	sub    DWORD PTR [ebx],ebp
  404f48:	adc    al,0xd9
  404f4a:	xor    ch,BYTE PTR [edx]
  404f4c:	mov    ch,0x4f
  404f4e:	mov    edx,0x70c395d1
  404f53:	or     dh,cl
  404f55:	add    BYTE PTR [eax],ch
  404f57:	xchg   ecx,eax
  404f58:	jnp    0x404f56
  404f5a:	call   FWORD PTR [ecx]
  404f5c:	(bad)  
  404f5d:	pop    ebx
  404f5e:	repz rcr BYTE PTR [ebx+eax*8-0x69564780],1
  404f66:	loope  0x404fde
  404f68:	xor    eax,0x8a19608b
  404f6d:	loopne 0x404f9b
  404f6f:	retf   0x2745
  404f72:	arpl   WORD PTR [edx+edi*2+0x317270a4],si
  404f79:	push   0x244bac30
  404f7e:	iret   
  404f7f:	into   
  404f80:	dec    ecx
  404f81:	fldcw  WORD PTR [edi-0x7f0abeed]
  404f87:	pop    ss
  404f88:	cdq    
  404f89:	mov    cl,BYTE PTR [ebx+0x232f9f7b]
  404f8f:	cwde   
  404f90:	mov    ecx,0x9221d8ec
  404f95:	add    al,0xd
  404f97:	mov    al,ds:0x44355a1f
  404f9c:	sub    dl,BYTE PTR [ebx+edx*4+0x5827c3d5]
  404fa3:	push   ebx
  404fa4:	dec    eax
  404fa5:	or     al,0x1f
  404fa7:	add    BYTE PTR [ebx],al
  404fa9:	ins    BYTE PTR es:[edi],dx
  404faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fab:	stc    
  404fac:	fldln2 
  404fae:	push   eax
  404faf:	mov    al,BYTE PTR [ecx-0x5d4707e5]
  404fb5:	mov    DWORD PTR [ebx],esp
  404fb7:	daa    
  404fb8:	or     esi,esi
  404fba:	add    eax,0x1ce90f31
  404fbf:	dec    ecx
  404fc0:	sub    ebp,DWORD PTR [ebp+0x162679f3]
  404fc6:	into   
  404fc7:	mov    ah,0x4e
  404fc9:	(bad)  
  404fca:	jecxz  0x404fc3
  404fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fcd:	cdq    
  404fce:	scas   eax,DWORD PTR es:[edi]
  404fcf:	lea    eax,[ecx]
  404fd1:	push   ecx
  404fd2:	pop    eax
  404fd3:	jl     0x405023
  404fd5:	fs push 0x16
  404fd8:	sbb    ah,BYTE PTR [esi+0x1c]
  404fdb:	sti    
  404fdc:	mov    dl,0x10
  404fde:	mov    edx,0xbdf8de39
  404fe3:	daa    
  404fe4:	fstp   DWORD PTR [ebx-0x4]
  404fe7:	and    esp,DWORD PTR [di-0x3dc5]
  404fec:	mov    BYTE PTR [eax+ecx*4+0x266bd2ca],dl
  404ff3:	pop    es
  404ff4:	es test eax,0xa9bbd089
  404ffa:	ds inc edx
  404ffc:	js     0x40502c
  404ffe:	pop    esp
  404fff:	add    dl,dh
  405001:	add    ch,BYTE PTR [edi+0x32df6649]
  405007:	les    ecx,FWORD PTR [ebp-0x2a537e4a]
  40500d:	sub    DWORD PTR [ecx],edx
  40500f:	(bad)  
  405011:	loope  0x404fe8
  405013:	(bad)  
  405014:	jl     0x404fcb
  405016:	jb     0x404fc2
  405018:	sub    al,0x5e
  40501a:	nop
  40501b:	into   
  40501c:	addr16 cdq 
  40501e:	cmp    dl,BYTE PTR [edx+0x67]
  405021:	xchg   edx,eax
  405022:	push   eax
  405023:	lods   al,BYTE PTR ds:[esi]
  405024:	sahf   
  405025:	mov    esp,0x7bb77954
  40502a:	mov    ds:0x33aeb7ec,eax
  40502f:	iret   
  405030:	ds mov dh,0x1c
  405033:	push   edi
  405034:	btc    DWORD PTR [edi],edi
  405037:	adc    al,0xc1
  405039:	mov    ecx,0x4285608e
  40503e:	pop    ds
  40503f:	ficomp WORD PTR [ecx+ebx*4+0x67]
  405043:	mov    dh,0x15
  405045:	push   edx
  405046:	clc    
  405047:	fidivr WORD PTR [ebp-0x75ce5b1a]
  40504d:	xchg   esi,eax
  40504e:	stos   BYTE PTR es:[edi],al
  40504f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405050:	call   0x8718:0xf2b4be60
  405057:	inc    ebx
  405058:	and    DWORD PTR [eax+edx*1],eax
  40505b:	cwde   
  40505c:	mov    ch,0x26
  40505e:	sbb    edx,DWORD PTR [ebx-0x785b6320]
  405064:	jle    0x405029
  405066:	sub    ebp,DWORD PTR [eax+0x2b]
  405069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40506a:	shl    DWORD PTR [edi],0xe8
  40506d:	fmul   DWORD PTR [edx]
  40506f:	jo     0x3c8181
  405075:	test   eax,0x56a81dad
  40507a:	mov    cl,0x9f
  40507c:	jne    0x405081
  40507e:	or     al,0x5a
  405080:	mov    ebp,0xc1908a76
  405085:	fs pop esi
  405087:	lds    ebp,FWORD PTR [eax]
  405089:	mov    BYTE PTR [esi-0x6],al
  40508c:	pop    edi
  40508d:	lahf   
  40508e:	xchg   edx,eax
  40508f:	xchg   ebx,eax
  405090:	cli    
  405091:	stos   BYTE PTR es:[edi],al
  405092:	popa   
  405093:	div    DWORD PTR [esi]
  405095:	fwait
  405096:	ds je  0x4050d5
  405099:	jmp    0x4050c8
  40509b:	sub    al,0x37
  40509d:	push   esi
  40509e:	jb     0x40508b
  4050a0:	push   edx
  4050a1:	xchg   esp,eax
  4050a2:	push   cs
  4050a3:	sahf   
  4050a4:	dec    eax
  4050a5:	je     0x4050f6
  4050a7:	pop    edx
  4050a8:	in     eax,0xa3
  4050aa:	pop    es
  4050ab:	rol    DWORD PTR [eax],1
  4050ad:	fld    TBYTE PTR [esp+ebx*4]
  4050b0:	push   eax
  4050b1:	ret    
  4050b2:	icebp  
  4050b3:	ret    0xd5f3
  4050b6:	pop    esp
  4050b7:	and    BYTE PTR [ebp+ebx*2-0x28],dh
  4050bb:	pop    ds
  4050bc:	xchg   edx,esp
  4050be:	ja     0x4050d9
  4050c0:	xchg   ebp,eax
  4050c1:	pop    ebp
  4050c2:	xchg   BYTE PTR [esi+0x20],al
  4050c5:	outs   dx,DWORD PTR ds:[esi]
  4050c6:	das    
  4050c7:	leave  
  4050c8:	pop    esp
  4050c9:	xor    BYTE PTR [ecx-0x264eb387],al
  4050cf:	xchg   ecx,eax
  4050d0:	ins    DWORD PTR es:[edi],dx
  4050d1:	jl     0x4050dc
  4050d3:	dec    esi
  4050d4:	ss addr16 pushf 
  4050d7:	push   cs
  4050d8:	fs jp  0x40512e
  4050db:	test   DWORD PTR [eax+0x19],0x9642d494
  4050e2:	push   esi
  4050e3:	xchg   edi,eax
  4050e4:	mov    bh,0x8
  4050e6:	push   0xc35541a0
  4050eb:	idiv   dh
  4050ed:	pop    esp
  4050ee:	xor    BYTE PTR [eax],0x2c
  4050f1:	add    BYTE PTR [eax+0x3e],0x3a
  4050f5:	jmp    0x6f7eb277
  4050fa:	cmp    ecx,DWORD PTR [eax]
  4050fc:	mov    edi,0x13305e00
  405101:	pop    ebp
  405102:	mov    bh,0xf6
  405104:	loopne 0x40509e
  405106:	pop    ebp
  405107:	(bad)  
  405108:	test   al,0x68
  40510a:	mov    al,0x31
  40510c:	cdq    
  40510d:	ret    0x77c4
  405110:	xchg   esp,eax
  405111:	cmp    al,0xd9
  405114:	sahf   
  405115:	scas   al,BYTE PTR es:[edi]
  405116:	cmc    
  405117:	ror    BYTE PTR [esp+ecx*1-0x37a663f4],0x28
  40511f:	aad    0x5e
  405121:	mov    al,0xc0
  405123:	inc    ebp
  405124:	xchg   DWORD PTR [esp+ecx*2-0x3e],esi
  405128:	add    eax,0xf809bfce
  40512d:	repz mov ebx,0xd2d51781
  405133:	inc    ecx
  405134:	fmul   DWORD PTR [edi+0x47]
  405137:	popa   
  405138:	pop    esi
  405139:	dec    esp
  40513a:	sub    eax,0x1910bc39
  40513f:	xor    cl,ch
  405141:	cld    
  405142:	push   esi
  405143:	fs mov dh,0xe4
  405146:	enter  0xcd7a,0xae
  40514a:	aas    
  40514b:	mov    ah,0x7a
  40514d:	loope  0x405106
  40514f:	in     eax,dx
  405150:	nop    DWORD PTR [ebx+0x36]
  405154:	cmp    al,0x60
  405156:	mov    ah,BYTE PTR [eax+0x46]
  405159:	imul   ebx,ebp,0xffffffdf
  40515c:	ins    DWORD PTR es:[edi],dx
  40515d:	ret    
  40515e:	(bad)  
  40515f:	pop    edx
  405160:	test   al,0x8b
  405162:	mov    WORD PTR [ebx],?
  405164:	pop    esi
  405165:	es mov ah,0xb2
  405168:	adc    eax,0xcd446863
  40516d:	push   eax
  40516e:	shl    DWORD PTR [ecx],cl
  405170:	(bad)  
  405171:	mov    DWORD PTR [ebp-0x18dd5bc8],edi
  405177:	sti    
  405178:	lds    edx,FWORD PTR [ebp-0x682b0908]
  40517e:	out    dx,al
  40517f:	push   cs
  405180:	shl    BYTE PTR [eax+0x3],cl
  405183:	je     0x4051dd
  405185:	or     eax,0x976ebe55
  40518a:	out    0x40,al
  40518c:	mov    cl,0x42
  40518e:	jmp    0x444c0501
  405193:	scas   eax,DWORD PTR es:[edi]
  405194:	sbb    edi,DWORD PTR [ebx]
  405196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405197:	in     eax,0xf5
  405199:	sahf   
  40519a:	and    ebx,DWORD PTR [edx+ebx*4+0x16]
  40519e:	xor    al,0xdf
  4051a0:	sbb    esi,DWORD PTR [edx+0x2f]
  4051a3:	cmp    eax,0x163ef9ac
  4051a8:	sbb    BYTE PTR [ebx-0x64],ah
  4051ab:	jns    0x40514d
  4051ad:	ror    BYTE PTR [ecx-0xfeaa5be],0x16
  4051b4:	sbb    DWORD PTR [ebx-0x1f],ecx
  4051b7:	mov    cl,0xa8
  4051b9:	sbb    ebx,esi
  4051bb:	mov    esp,0xae392b46
  4051c0:	mov    edx,0x46f4e320
  4051c5:	xor    al,0x1f
  4051c7:	mov    al,ds:0xde15eb6f
  4051cc:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4051ce:	pop    edx
  4051cf:	xchg   DWORD PTR [edx+ebx*8+0x56],esp
  4051d3:	rcl    ah,1
  4051d5:	int3   
  4051d6:	out    dx,al
  4051d7:	dec    eax
  4051d8:	mov    ebp,0x5b175384
  4051dd:	sbb    al,0x76
  4051df:	add    BYTE PTR [edi+eax*2-0x54],0xd
  4051e4:	dec    esp
  4051e5:	mov    dh,bl
  4051e7:	sub    eax,ebp
  4051e9:	push   ebp
  4051ea:	pop    edx
  4051eb:	loopne 0x4051ef
  4051ed:	or     al,0x8c
  4051ef:	pslld  mm2,QWORD PTR [ebx]
  4051f2:	dec    ch
  4051f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f5:	ins    DWORD PTR es:[edi],dx
  4051f6:	call   0x5fc8:0x74a86930
  4051fd:	mov    ch,0x87
  4051ff:	adc    DWORD PTR [edx-0x24],ebp
  405202:	pop    es
  405203:	push   esi
  405204:	in     al,0x61
  405206:	mov    ?,WORD PTR [eax]
  405208:	xor    edx,DWORD PTR [esi+0x3d]
  40520b:	pop    ds
  40520c:	(bad)  
  40520d:	retf   0x8681
  405210:	jmp    0x1c38:0x819b1d6e
  405217:	pop    ebx
  405218:	loopne 0x4051c8
  40521a:	mov    esp,0x5367bc9
  40521f:	iret   
  405220:	xor    esp,DWORD PTR cs:[esi-0xb0ee84a]
  405227:	xchg   DWORD PTR [ecx],ecx
  405229:	xor    esp,DWORD PTR [edx+eiz*1-0x71a3823b]
  405230:	xchg   ebp,eax
  405231:	inc    eax
  405232:	push   esp
  405233:	pop    ebp
  405234:	xor    eax,0xcbc0b6d5
  405239:	imul   ebp,ebp,0x3fe75dc7
  40523f:	scas   al,BYTE PTR es:[edi]
  405240:	mov    cl,BYTE PTR [esi]
  405242:	add    BYTE PTR [esi+0x6bc6425a],0x62
  405249:	and    edi,DWORD PTR [edx+ecx*1-0x73df4cb8]
  405250:	xchg   edx,eax
  405251:	test   cl,bl
  405253:	aad    0xa2
  405255:	xchg   BYTE PTR [ecx+edi*1-0x56],cl
  405259:	cli    
  40525a:	lods   al,BYTE PTR ds:[esi]
  40525b:	sub    esi,DWORD PTR [edi-0x7d4d5474]
  405261:	and    DWORD PTR [ebx+0x21e20563],0x13
  405268:	inc    eax
  405269:	idiv   eax
  40526b:	and    BYTE PTR [esi],bl
  40526d:	es gs jp 0x40523d
  405271:	rcl    DWORD PTR [ecx-0x4c],1
  405274:	dec    BYTE PTR [eax+eax*1-0x2948253f]
  40527b:	mov    al,0x35
  40527d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40527e:	jnp    0x4052ea
  405280:	cdq    
  405281:	jg     0x40528a
  405283:	retf   
  405284:	xchg   DWORD PTR [esi],ecx
  405286:	and    DWORD PTR [edx],ebx
  405288:	mov    ch,0xbe
  40528a:	icebp  
  40528b:	push   ecx
  40528c:	mov    esp,0x8cd74731
  405291:	rol    DWORD PTR [ebx+ecx*2+0x201be251],cl
  405298:	repnz mov edx,0xa21f8e3e
  40529e:	xor    DWORD PTR [edi-0x153fc4c4],0xffffffa1
  4052a5:	ds jmp 0x72c7:0x9e6f8adc
  4052ad:	call   0x5319:0xb1c6f67a
  4052b4:	imul   ebx,ebx,0xffffffc8
  4052b7:	sub    DWORD PTR [edi-0x7087110],ecx
  4052bd:	push   edx
  4052be:	pusha  
  4052bf:	cmp    eax,0xa1d8ab8b
  4052c4:	cmp    edx,esi
  4052c6:	mov    eax,0x15f003f0
  4052cb:	cmp    DWORD PTR ds:0x34c991be,ebp
  4052d1:	fxch   st(1)
  4052d3:	push   esp
  4052d4:	xchg   ebp,eax
  4052d6:	cwde   
  4052d7:	sub    ecx,ecx
  4052d9:	dec    edi
  4052da:	push   0x4676444c
  4052df:	dec    eax
  4052e0:	sbb    DWORD PTR [esi],ecx
  4052e2:	addr16 pop es
  4052e4:	dec    esi
  4052e5:	in     al,0xfc
  4052e7:	cli    
  4052e8:	arpl   WORD PTR [esi],di
  4052ea:	xchg   edx,eax
  4052eb:	or     al,0x93
  4052ed:	or     eax,0xb60b7e55
  4052f2:	adc    BYTE PTR [eax],ah
  4052f4:	pop    esp
  4052f5:	rcl    DWORD PTR [ebx-0x72],1
  4052f8:	fcomp  DWORD PTR [ecx+0x12]
  4052fb:	(bad)  
  4052fd:	mov    eax,0xdd01d5db
  405302:	inc    BYTE PTR [ebp-0x13ce6dfc]
  405308:	dec    edx
  405309:	lds    edi,FWORD PTR [ebx-0x6732310b]
  40530f:	add    DWORD PTR [esi-0x2f71fe35],ebx
  405315:	cmp    DWORD PTR [edx-0x63],0xdee4d234
  40531c:	dec    esp
  40531d:	ja     0x40530d
  40531f:	cmp    ebp,0xdfceac62
  405325:	fmulp  st(1),st
  405327:	shr    BYTE PTR [edx],1
  405329:	or     al,0x9a
  40532b:	adc    dl,BYTE PTR [ebp+eax*8-0x1c396959]
  405332:	scas   al,BYTE PTR es:[edi]
  405333:	add    BYTE PTR [esi],bl
  405335:	loop   0x4052ca
  405337:	add    dl,BYTE PTR [esi+0x1fe895c0]
  40533d:	mov    bh,0x3a
  40533f:	xchg   ah,ah
  405341:	mov    al,0x14
  405343:	add    DWORD PTR [eax+0x54],eax
  405346:	sub    esp,ecx
  405348:	int    0x78
  40534a:	xor    al,0x41
  40534c:	int    0x11
  40534e:	or     DWORD PTR [esi],esi
  405350:	dec    esi
  405351:	or     BYTE PTR [eax+0x7f],bh
  405354:	mov    dl,0x69
  405356:	call   0x92376dd5
  40535b:	call   0xf5c0ed95
  405360:	xchg   esi,eax
  405361:	retf   0xc0da
  405364:	ins    BYTE PTR es:[edi],dx
  405365:	push   es
  405366:	hlt    
  405367:	stos   BYTE PTR es:[edi],al
  405368:	inc    ebx
  405369:	ss fcompp 
  40536c:	mov    ebp,DWORD PTR [eax+0x25]
  40536f:	enter  0x53e4,0x4
  405373:	add    ebx,ecx
  405375:	mov    DWORD PTR [edi+eax*1-0x1f],ebp
  405379:	jne    0x4053d8
  40537b:	cld    
  40537c:	sti    
  40537d:	cs in  eax,0x39
  405380:	push   ecx
  405381:	and    bh,BYTE PTR [edx+0x24]
  405384:	push   esi
  405385:	jno    0x405391
  405387:	ret    0xcf1f
  40538a:	loopne 0x405358
  40538c:	and    al,0xbf
  40538e:	or     dl,ch
  405390:	aaa    
  405391:	pop    ebp
  405392:	xor    eax,0xbdce6727
  405397:	pop    es
  405398:	xor    al,bh
  40539a:	sar    BYTE PTR [ebx+0x45],1
  40539d:	cmp    al,0x28
  40539f:	mov    ebp,0x68af2eb6
  4053a4:	or     bl,BYTE PTR ds:0x656ebd00
  4053aa:	cmp    DWORD PTR [edx+0x31ea8b6c],esp
  4053b0:	mov    ebx,ecx
  4053b2:	ja     0x4053f6
  4053b4:	ret    0xb080
  4053b7:	retf   
  4053b8:	mov    esp,0x77f9c628
  4053bd:	ret    0x2100
  4053c0:	mov    ds:0xe763dcca,al
  4053c5:	add    ch,BYTE PTR [edx-0xc]
  4053c8:	mov    ebx,0x1104256
  4053cd:	push   ebp
  4053ce:	fsubr  QWORD PTR [edx+0x7b]
  4053d1:	ret    0x9406
  4053d4:	jmp    0x4f57:0x2708aef8
  4053db:	pop    ecx
  4053dc:	push   ebx
  4053dd:	or     DWORD PTR [esi-0x13486f0b],0x7c
  4053e4:	pop    eax
  4053e5:	jp     0x4053cc
  4053e7:	inc    edx
  4053e8:	pop    ds
  4053e9:	iret   
  4053ea:	cmp    dh,BYTE PTR [ecx-0x2]
  4053ed:	jns    0x405440
  4053ef:	sbb    eax,0xb91b4145
  4053f4:	sub    BYTE PTR [edi],bl
  4053f6:	push   edx
  4053f7:	(bad)  
  4053f8:	mov    bh,BYTE PTR cs:[edi-0x2fcfcce9]
  4053ff:	cmp    esi,DWORD PTR [edi+0x7d39918f]
  405405:	push   ebx
  405406:	xchg   edi,eax
  405407:	addr16 push edi
  405409:	mov    dh,0x7f
  40540b:	push   esp
  40540c:	sti    
  40540d:	std    
  40540e:	push   ecx
  40540f:	cmp    al,0x6f
  405411:	pop    ebp
  405412:	ror    BYTE PTR [edx+ebx*8-0x720300aa],1
  405419:	fs call 0x1965:0x369f9f1c
  405421:	mov    gs,WORD PTR [ebx]
  405423:	jecxz  0x40546e
  405425:	hlt    
  405426:	push   edx
  405427:	sbb    bh,BYTE PTR [ebp-0x44]
  40542a:	pop    eax
  40542b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40542c:	dec    BYTE PTR [ebx]
  40542e:	jmp    0x8746d065
  405433:	scas   eax,DWORD PTR es:[edi]
  405434:	stc    
  405435:	call   0xd9afcd2c
  40543a:	inc    esi
  40543b:	mov    ds:0x9cef3231,eax
  405440:	cwde   
  405441:	mov    cl,0xcd
  405443:	je     0x40543c
  405445:	and    bl,dl
  405447:	push   esp
  405448:	xor    edi,ebx
  40544a:	xor    al,0xa
  40544c:	jne    0x405428
  40544e:	pop    ss
  40544f:	(bad)  [eax-0x79496d4f]
  405455:	dec    ecx
  405456:	push   0xf5bfd91e
  40545b:	das    
  40545c:	repz jle 0x40545c
  40545f:	adc    eax,0x14c97332
  405464:	xor    ebp,DWORD PTR [eax]
  405466:	mov    ebp,DWORD PTR [ebx+0x25b48192]
  40546c:	jnp    0x405489
  40546e:	mov    DWORD PTR [edx+eiz*2+0x39c8ac66],esp
  405475:	mov    ds:0xa60546b7,al
  40547a:	xchg   ebp,eax
  40547b:	push   edi
  40547c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40547d:	jno    0x405459
  40547f:	stos   DWORD PTR es:[edi],eax
  405480:	mov    ecx,DWORD PTR [eax-0x2f2da9fa]
  405486:	dec    esi
  405487:	test   eax,0x760794a
  40548c:	fdivr  DWORD PTR [esi-0x11b84f17]
  405492:	fcomp  QWORD PTR [esi]
  405494:	dec    edx
  405495:	mov    ah,BYTE PTR [eax]
  405497:	loope  0x405457
  405499:	in     eax,0xc6
  40549b:	ds and al,0x54
  40549e:	cs adc eax,0xd5a1ff98
  4054a4:	mov    bl,0xe0
  4054a6:	es pop esp
  4054a8:	loopne 0x405437
  4054aa:	int3   
  4054ab:	sti    
  4054ac:	int    0x98
  4054ae:	popf   
  4054af:	pop    ebx
  4054b0:	fmul   QWORD PTR [ebx+edi*1]
  4054b3:	ret    0xab51
  4054b6:	imul   eax,DWORD PTR [ebx],0x4ecf0772
  4054bc:	iret   
  4054bd:	sub    edi,ebp
  4054bf:	sbb    eax,DWORD PTR [ecx+0x561396f5]
  4054c5:	je     0x4054b4
  4054c7:	call   0x7171b85
  4054cc:	and    BYTE PTR ds:0x456f884b,bh
  4054d2:	add    BYTE PTR [edx+0x38],0x71
  4054d6:	xlat   BYTE PTR ds:[ebx]
  4054d7:	pop    edx
  4054d8:	xor    bl,BYTE PTR es:[edx]
  4054db:	ins    BYTE PTR es:[edi],dx
  4054dc:	enter  0x113,0xf5
  4054e0:	pop    eax
  4054e1:	call   0xecff:0x479e39ef
  4054e8:	aaa    
  4054e9:	xor    al,0x22
  4054eb:	cmp    cl,ch
  4054ed:	int3   
  4054ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ef:	scas   al,BYTE PTR es:[edi]
  4054f0:	sbb    al,0x97
  4054f2:	das    
  4054f3:	xchg   esp,eax
  4054f4:	sbb    DWORD PTR [eax],ebx
  4054f6:	or     al,0xe0
  4054f8:	out    0x14,eax
  4054fa:	or     eax,0x35274944
  4054ff:	das    
  405500:	add    DWORD PTR [edi+0x1b],esi
  405503:	mov    ds:0x148f566,al
  405508:	scas   eax,DWORD PTR es:[edi]
  405509:	push   edx
  40550a:	cmp    ebx,esi
  40550c:	inc    eax
  40550d:	sub    dh,dh
  40550f:	mov    edx,0x37a078ca
  405514:	push   ds
  405515:	arpl   WORD PTR [ebp-0x6aa5aaf7],cx
  40551b:	mov    bh,0x92
  40551d:	test   DWORD PTR [ecx+0x13],0xef49d285
  405524:	mov    edx,ebp
  405526:	pavgw  mm3,QWORD PTR [eax-0x35]
  40552a:	cmp    BYTE PTR [esi+ebp*1-0x7c],ah
  40552e:	lds    ebx,FWORD PTR [ecx-0x43]
  405531:	inc    eax
  405532:	mov    al,ds:0x1084c500
  405537:	aad    0x99
  405539:	cvttps2pi mm0,QWORD PTR es:0xe3f61543
  405541:	dec    edi
  405542:	mov    bl,0x9e
  405544:	(bad)  
  405545:	int    0x96
  405547:	add    BYTE PTR [eax-0x20666f11],cl
  40554d:	(bad)  
  40554e:	and    DWORD PTR [ebx+0x0],ebx
  405551:	pop    esi
  405552:	mov    eax,0x15f9256d
  405557:	sbb    edi,DWORD PTR [ecx-0x7ae655bd]
  40555d:	lahf   
  40555e:	shr    DWORD PTR [edx-0x3d8e4f95],0x69
  405565:	jecxz  0x40558e
  405567:	xor    esp,DWORD PTR [edi+0x29]
  40556a:	jmp    0x71f0:0x3a1a0f73
  405571:	bound  edx,QWORD PTR [esi+eax*4]
  405574:	pusha  
  405575:	and    esp,ecx
  405577:	shl    BYTE PTR [ecx+0x7b],0x8a
  40557b:	int3   
  40557c:	mov    eax,ds:0x96ef24de
  405581:	add    DWORD PTR [ecx],0x2c26c08d
  405587:	dec    bp
  405589:	add    ebx,DWORD PTR [ecx]
  40558b:	xchg   DWORD PTR ss:[ebp-0x15],edi
  40558f:	mov    ch,0x6f
  405591:	(bad)
  405594:	test   eax,0xbec8a3e5
  405599:	and    esp,DWORD PTR [ebp+0x5f]
  40559c:	pop    edi
  40559d:	push   ds
  40559e:	and    al,0x93
  4055a0:	cmp    ebx,DWORD PTR [edx-0x79cbfbcf]
  4055a6:	push   ecx
  4055a7:	rcl    BYTE PTR [ebp+ebx*1+0x73],cl
  4055ab:	cdq    
  4055ac:	or     al,BYTE PTR [esi+0x3bde9735]
  4055b2:	scas   al,BYTE PTR es:[edi]
  4055b3:	addr16 gs push ss
  4055b6:	pmovmskb ecx,mm4
  4055b9:	add    eax,0x30b6870a
  4055be:	xor    ch,BYTE PTR [esi]
  4055c0:	mov    ch,0xc8
  4055c2:	xchg   esp,eax
  4055c3:	lock in al,0xe9
  4055c6:	leave  
  4055c7:	add    BYTE PTR [ebp-0x78],0x66
  4055cb:	jmp    0x4055d0
  4055cd:	aaa    
  4055ce:	out    dx,al
  4055cf:	mov    al,ds:0x7d92ecb4
  4055d4:	cmc    
  4055d5:	sub    DWORD PTR [ebx+0x3002444b],esp
  4055db:	xchg   edx,eax
  4055dc:	enter  0xd3e4,0xd5
  4055e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055e1:	shl    ecx,0x8c
  4055e4:	push   es
  4055e5:	jle    0x4055b0
  4055e7:	out    0xeb,al
  4055e9:	add    eax,DWORD PTR fs:[esi]
  4055ec:	pop    edx
  4055ed:	jae    0x405597
  4055ef:	pop    ds
  4055f0:	push   esp
  4055f1:	pop    ebx
  4055f2:	out    dx,al
  4055f3:	add    al,0x41
  4055f5:	sub    dl,bl
  4055f7:	int3   
  4055f8:	cmp    dl,cl
  4055fa:	push   ecx
  4055fb:	jbe    0x4055b5
  4055fd:	mov    eax,ds:0xd015ea70
  405602:	imul   al
  405604:	and    DWORD PTR [ecx],ecx
  405606:	jmp    0x12e72d40
  40560b:	jb     0x4055f3
  40560d:	pop    ds
  40560e:	mov    al,0x9a
  405610:	popa   
  405611:	sub    eax,0x9c37210f
  405616:	push   es
  405617:	mov    bl,0xa7
  405619:	mov    bh,0x3b
  40561b:	add    al,0x7d
  40561d:	aam    0x0
  40561f:	loopne 0x40568c
  405621:	(bad)  
  405622:	mov    dl,0x1f
  405624:	(bad)  
  405625:	int    0x19
  405627:	stos   BYTE PTR es:[edi],al
  405628:	mov    cl,0xe6
  40562a:	addr16 and eax,0x394818fa
  405630:	adc    al,0x12
  405632:	jae    0x405641
  405634:	data16 idiv BYTE PTR [ebx-0x65]
  405638:	adc    al,0x68
  40563a:	push   edi
  40563b:	outs   dx,BYTE PTR ds:[esi]
  40563c:	cld    
  40563d:	mov    bh,0x27
  40563f:	ret    
  405640:	cmp    DWORD PTR [ebx],esp
  405642:	in     al,0x49
  405644:	mov    ecx,0x7a4db1ef
  40564a:	jmp    DWORD PTR [esi]
  40564c:	push   es
  40564d:	sub    BYTE PTR [ecx-0x65],dh
  405650:	retf   
  405651:	das    
  405652:	sub    ch,BYTE PTR [esi+esi*4-0x5b]
  405656:	add    ch,BYTE PTR [ebx-0x63]
  405659:	push   ss
  40565a:	imul   dl
  40565c:	or     al,0x4d
  40565e:	inc    edi
  40565f:	lods   al,BYTE PTR ds:[esi]
  405660:	(bad)  
  405661:	je     0x4056cc
  405663:	and    dl,bl
  405665:	mul    cl
  405667:	mov    ds:0xec2d4a48,eax
  40566c:	scas   al,BYTE PTR es:[edi]
  40566d:	dec    ebp
  40566e:	enter  0xcc,0xa2
  405672:	outs   dx,BYTE PTR ds:[esi]
  405673:	adc    BYTE PTR ds:0x65860b97,ch
  405679:	mov    eax,0x1b404d16
  40567e:	call   0x59838598
  405683:	push   esp
  405684:	clc    
  405685:	jp     0x40567f
  405687:	dec    eax
  405688:	imul   ah
  40568a:	mov    ah,0xc4
  40568c:	sub    esp,eax
  40568e:	arpl   si,bx
  405690:	xchg   esp,eax
  405691:	adc    al,0xfc
  405693:	push   ss
  405694:	mov    cl,0x40
  405697:	mov    al,0x6b
  405699:	xchg   ebx,eax
  40569a:	jmp    0x43383bab
  40569f:	xchg   edx,eax
  4056a0:	inc    esp
  4056a1:	xchg   sp,ax
  4056a3:	jns    0x405710
  4056a5:	sbb    esi,esi
  4056a7:	and    BYTE PTR [edi+eax*4+0x1c35657c],bh
  4056ae:	pop    es
  4056af:	adc    bl,BYTE PTR [eax]
  4056b1:	fistp  DWORD PTR [ecx-0x3116bb10]
  4056b7:	shr    bl,1
  4056b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056ba:	not    BYTE PTR [eax+0x19]
  4056bd:	adc    BYTE PTR [bx+di-0x1f78],0x96
  4056c3:	and    BYTE PTR [ebp+0x72],bl
  4056c6:	xchg   ebx,eax
  4056c7:	add    BYTE PTR [edi],bh
  4056c9:	pop    esi
  4056ca:	mov    al,ds:0x993cdf2a
  4056cf:	nop
  4056d0:	retf   
  4056d1:	mov    bh,BYTE PTR [esi]
  4056d3:	adc    DWORD PTR [ecx*8-0x54e37ec5],esp
  4056da:	mov    al,ds:0xafd5761b
  4056df:	mov    BYTE PTR [edi+0x7744b1ee],dl
  4056e5:	mov    edi,0x8ad5b459
  4056ea:	mov    ds:0x6a7f2def,al
  4056ef:	rol    DWORD PTR [edi+0x1ae651d0],cl
  4056f5:	inc    eax
  4056f6:	and    edi,DWORD PTR [esi-0x44]
  4056f9:	arpl   WORD PTR ds:0xd58c0553,dx
  4056ff:	(bad)  
  405700:	jae    0x4056a2
  405702:	xchg   ebp,eax
  405703:	(bad)  
  405704:	ss inc eax
  405706:	mov    ds:0x4431221,eax
  40570b:	ret    
  40570c:	jae    0x405697
  40570e:	adc    BYTE PTR [esi+0x91de61d],dh
  405714:	jle    0x405760
  405716:	test   DWORD PTR [esi],eax
  405718:	push   eax
  405719:	push   ebx
  40571a:	lock adc al,0xd2
  40571d:	sbb    dl,BYTE PTR [ecx+0x747c01af]
  405723:	pop    edi
  405724:	ins    DWORD PTR es:[edi],dx
  405725:	aad    0x66
  405727:	mov    edi,0x43f07ed2
  40572c:	jp     0x405744
  40572e:	shl    DWORD PTR [esi],0x58
  405731:	test   DWORD PTR [esi-0x502a6f78],ecx
  405737:	push   0x72
  405739:	sbb    edx,ecx
  40573b:	iret   
  40573c:	or     DWORD PTR fs:[esi+0xf69c950],0x79ab1e32
  405747:	adc    al,BYTE PTR [edx-0x38ad3d0]
  40574d:	icebp  
  40574e:	cwde   
  40574f:	mov    al,0x5e
  405751:	lds    edx,FWORD PTR gs:[ebx]
  405754:	aad    0x60
  405756:	adc    dh,cl
  405758:	mov    ebp,0xae306a7a
  40575d:	repnz enter 0x7c80,0xcd
  405762:	fistp  QWORD PTR [esi+0x40cdd5ba]
  405768:	sub    cl,BYTE PTR ds:0xe5a48862
  40576e:	out    0xd,eax
  405770:	mov    ds:0x4edeb6d9,al
  405775:	lds    ebp,FWORD PTR [ecx-0x22]
  405778:	mov    ecx,0x7b6c97b3
  40577d:	rol    DWORD PTR [esi],cl
  40577f:	push   0x65
  405781:	std    
  405782:	and    al,0xba
  405784:	(bad)  
  405785:	fs or  eax,0x841665a0
  40578b:	sbb    ecx,ecx
  40578d:	cs pop eax
  40578f:	jne    0x4057a6
  405791:	sub    al,0x8d
  405793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405794:	sub    eax,0x665262e2
  405799:	cmp    esi,DWORD PTR [ecx+0x49]
  40579c:	mov    eax,0x61b3a8ec
  4057a1:	push   ss
  4057a2:	inc    esi
  4057a3:	push   ss
  4057a4:	stc    
  4057a5:	jmp    0x4057b5
  4057a7:	mov    al,0x42
  4057a9:	mov    ds:0x928cb332,eax
  4057ae:	jecxz  0x4057b9
  4057b0:	add    esi,DWORD PTR [esi+edx*8+0x4c]
  4057b4:	shr    dl,cl
  4057b6:	stos   DWORD PTR es:[edi],eax
  4057b7:	sub    ch,dh
  4057b9:	and    BYTE PTR [edi],bl
  4057bb:	xor    cl,BYTE PTR [ebx+0x63]
  4057be:	xor    eax,0x912cf4fb
  4057c3:	xchg   esi,eax
  4057c4:	pop    esp
  4057c5:	pop    esp
  4057c6:	xchg   ecx,eax
  4057c7:	inc    esi
  4057c8:	push   ebx
  4057c9:	iret   
  4057ca:	inc    ecx
  4057cb:	fdivrp st(7),st
  4057cd:	sbb    al,0x9
  4057cf:	pushf  
  4057d0:	jne    0x405785
  4057d2:	lds    ebp,FWORD PTR [eax+0x59]
  4057d5:	das    
  4057d6:	and    esi,DWORD PTR ds:0x9ac11f32
  4057dc:	jmp    0x4057be
  4057de:	aam    0x28
  4057e0:	cmp    eax,0xfe4f2f0e
  4057e5:	bswap  edx
  4057e7:	fwait
  4057e8:	aam    0xa
  4057ea:	(bad)  
  4057eb:	cwde   
  4057ec:	sub    cl,0x76
  4057ef:	ficom  DWORD PTR [eax-0x50]
  4057f2:	mov    edi,DWORD PTR [ebp+0x20]
  4057f5:	jl     0x4057e2
  4057f7:	mov    ds:0xafea2122,al
  4057fc:	stc    
  4057fd:	mov    ah,0xfe
  4057ff:	add    BYTE PTR [ebp-0x6],dl
  405802:	dec    eax
  405803:	(bad)  
  405805:	arpl   WORD PTR ds:0x2a4323bd,bp
  40580b:	mov    fs:0x2f128f5e,eax
  405811:	jns    0x4057ec
  405813:	leave  
  405814:	xor    eax,0x2f9ba447
  405819:	xchg   ebx,eax
  40581a:	repnz call 0xb1a3:0x7c26388a
  405822:	inc    ebx
  405823:	xor    eax,0x373156e
  405828:	iret   
  405829:	mov    ah,BYTE PTR [eax+0x38]
  40582c:	pop    es
  40582d:	les    edx,FWORD PTR [edi]
  40582f:	aas    
  405830:	rcl    BYTE PTR [eax+0x46],1
  405833:	das    
  405834:	icebp  
  405835:	adc    ah,BYTE PTR [esi-0x70]
  405838:	pushf  
  405839:	loopne 0x4057fd
  40583b:	sti    
  40583c:	fsubr  st(6),st
  40583e:	call   0x6117b4ca
  405843:	scas   eax,DWORD PTR es:[edi]
  405844:	fnsave [edx+0x1ab7f21c]
  40584a:	and    edx,ebp
  40584c:	mov    esi,0x9983b783
  405851:	add    eax,0x2cacceae
  405856:	popa   
  405857:	cli    
  405858:	ret    0xb7fb
  40585b:	inc    edx
  40585c:	xor    edx,DWORD PTR [esi+0x4c]
  40585f:	jle    0x4057e2
  405861:	test   al,0xb3
  405863:	out    dx,eax
  405864:	pop    edx
  405865:	in     al,dx
  405866:	inc    esp
  405867:	(bad)  
  405868:	int    0xe3
  40586a:	outs   dx,BYTE PTR ds:[esi]
  40586b:	call   0xf352:0x755b2c74
  405872:	jecxz  0x405888
  405874:	fs pop ds
  405876:	call   0xb468950b
  40587b:	clc    
  40587c:	loopne 0x405835
  40587e:	adc    ah,BYTE PTR [ebx-0x64]
  405881:	or     eax,0x6d239599
  405886:	push   ds
  405887:	sbb    BYTE PTR [ebx+0x26a91a17],ah
  40588d:	xchg   ecx,eax
  40588e:	das    
  40588f:	sub    DWORD PTR [ecx-0x2f548d92],0x33498dd5
  405899:	in     al,0xc5
  40589b:	ss xchg edx,eax
  40589d:	push   0x49
  40589f:	repz sbb ebx,eax
  4058a2:	lods   al,BYTE PTR ds:[esi]
  4058a3:	out    0x44,eax
  4058a5:	mov    es,WORD PTR [edx+0x7c5c1fef]
  4058ab:	sub    ch,BYTE PTR [eax+0x77]
  4058ae:	addr16 out 0x61,eax
  4058b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b2:	mov    BYTE PTR [edi],dh
  4058b4:	inc    esi
  4058b5:	std    
  4058b6:	aam    0x75
  4058b8:	xlat   BYTE PTR ds:[ebx]
  4058b9:	xchg   edx,eax
  4058ba:	nop
  4058bb:	sbb    bl,BYTE PTR [ebx+eax*1+0x18]
  4058bf:	aam    0x34
  4058c1:	add    edx,ebp
  4058c3:	push   es
  4058c4:	pop    eax
  4058c5:	shl    BYTE PTR [eax+0x41],0x7c
  4058c9:	xchg   esp,eax
  4058ca:	lods   eax,DWORD PTR ds:[esi]
  4058cb:	fcomp  DWORD PTR [esi+0x6298bfcb]
  4058d1:	xor    BYTE PTR [ecx+0x446a22d8],bl
  4058d7:	leave  
  4058d8:	sub    DWORD PTR [esi+0x1d],esi
  4058db:	jmp    0x60de793c
  4058e0:	imul   esp,edx,0x58af47d
  4058e6:	inc    edx
  4058e7:	data16 and dl,BYTE PTR [edi-0x11de95d0]
  4058ee:	adc    al,0x14
  4058f0:	scas   al,BYTE PTR es:[edi]
  4058f1:	add    ch,BYTE PTR [edx]
  4058f3:	nop
  4058f4:	push   0xc97c7f7
  4058f9:	rcl    DWORD PTR [ebx-0x9],cl
  4058fc:	sti    
  4058fd:	pusha  
  4058fe:	mov    WORD PTR [ebp+ebx*2+0x26],ss
  405902:	nop
  405903:	dec    esp
  405904:	mov    esi,0x9442af91
  405909:	ss out dx,eax
  40590b:	(bad)  
  40590c:	dec    edi
  40590d:	inc    esp
  40590e:	mov    DWORD PTR [ebx],eax
  405910:	in     eax,dx
  405911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405912:	push   0xd6de272c
  405917:	je     0x40597b
  405919:	pop    es
  40591a:	fucom  st(6)
  40591c:	test   DWORD PTR [edx-0x76],esi
  40591f:	outs   dx,BYTE PTR ds:[esi]
  405920:	xor    DWORD PTR [esi],esi
  405922:	lods   al,BYTE PTR ds:[esi]
  405923:	or     BYTE PTR [ebp-0x5600aab0],bl
  405929:	or     DWORD PTR [ecx],esp
  40592b:	adc    esi,esi
  40592d:	add    DWORD PTR [ecx],ebp
  40592f:	ins    DWORD PTR es:[edi],dx
  405930:	aaa    
  405931:	out    0x87,al
  405933:	inc    ebp
  405934:	and    esp,DWORD PTR [ecx+0x50]
  405937:	mov    ecx,0x9e4e1320
  40593c:	sbb    BYTE PTR [eax],0x51
  40593f:	fwait
  405940:	sti    
  405941:	dec    eax
  405942:	add    dl,bh
  405944:	jle    0x405958
  405946:	icebp  
  405947:	add    bl,bl
  405949:	xchg   ecx,eax
  40594a:	xor    ah,BYTE PTR [eax+0x2adc9568]
  405950:	lahf   
  405951:	pop    ss
  405952:	test   eax,0x30ad3a56
  405957:	cli    
  405958:	sbb    eax,0x6258b780
  40595d:	ror    DWORD PTR [ecx-0x3e],cl
  405960:	jbe    0x405986
  405962:	pop    ds
  405963:	or     esp,DWORD PTR [ebx+0x8]
  405966:	dec    ebx
  405967:	(bad)  
  405968:	(bad)  
  405969:	rcl    BYTE PTR [edi-0x7d16ce7b],1
  40596f:	cmp    al,0xf6
  405971:	retf   0x1e67
  405974:	ss es add eax,0x327e0cf1
  40597b:	pusha  
  40597c:	je     0x405980
  40597e:	pop    edx
  40597f:	psrlq  mm0,mm0
  405982:	(bad)  
  405983:	mov    edi,DWORD PTR [edx+ebp*8+0xc]
  405987:	(bad)  
  405988:	pop    ecx
  405989:	outs   dx,DWORD PTR ds:[esi]
  40598a:	push   eax
  40598b:	ds pop edx
  40598d:	dec    eax
  40598e:	inc    ebp
  40598f:	sub    DWORD PTR [ecx],0x2d8bbb0e
  405995:	in     eax,dx
  405996:	add    eax,esi
  405998:	lds    edi,FWORD PTR [esi]
  40599a:	mov    bh,0x90
  40599c:	inc    ebp
  40599d:	xchg   ebp,eax
  40599e:	xor    BYTE PTR [edi],ch
  4059a0:	iret   
  4059a1:	xchg   esi,eax
  4059a2:	lea    ebx,[ebp+0x4a]
  4059a5:	or     BYTE PTR [ecx],0x7d
  4059a8:	mov    DWORD PTR [esi+0x40],esi
  4059ab:	mov    edi,0xdf838d9b
  4059b0:	pop    ds
  4059b1:	push   cs
  4059b2:	data16 icebp 
  4059b4:	clc    
  4059b5:	mov    esp,0xa205e266
  4059ba:	sub    ecx,edi
  4059bc:	loope  0x40597a
  4059be:	push   esi
  4059bf:	(bad)  
  4059c0:	pop    ds
  4059c1:	lods   al,BYTE PTR ds:[esi]
  4059c2:	lds    edx,FWORD PTR [ebx+0x7]
  4059c5:	cmp    BYTE PTR [eax],0xcc
  4059c8:	in     al,0xfa
  4059ca:	icebp  
  4059cb:	imul   edi,DWORD PTR ss:[ecx-0x2b],0xffffff9e
  4059d0:	fldenv [esi+0x89d2225]
  4059d6:	or     eax,0x259a847e
  4059db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059dc:	(bad)  
  4059dd:	or     eax,0x50421e37
  4059e2:	fisttp WORD PTR [edi+0x43]
  4059e5:	lds    edx,FWORD PTR [edx+edx*1-0x75]
  4059e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ea:	sbb    DWORD PTR [ebp+0x1bee0a54],eax
  4059f0:	stc    
  4059f1:	cmp    esi,eax
  4059f3:	jl     0x405a3a
  4059f5:	jle    0x4059f3
  4059f7:	lods   al,BYTE PTR ds:[esi]
  4059f8:	cmp    al,bh
  4059fa:	in     al,0x5f
  4059fc:	outs   dx,DWORD PTR ds:[esi]
  4059fd:	mov    al,0x31
  4059ff:	jl     0x4059df
  405a01:	xchg   ebx,eax
  405a02:	les    esp,FWORD PTR [ebx]
  405a04:	pop    ds
  405a05:	imul   esi,DWORD PTR ds:0xb68d8f2f,0x12
  405a0c:	mov    eax,ds:0x87e10723
  405a11:	(bad)  [edi]
  405a13:	pop    eax
  405a14:	sub    ah,BYTE PTR [ecx-0x4c]
  405a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a18:	jns    0x405a78
  405a1a:	sahf   
  405a1b:	mov    bl,0x75
  405a1d:	int    0xea
  405a1f:	rcr    BYTE PTR [ebx-0x40],cl
  405a22:	test   BYTE PTR [eax-0x50],al
  405a25:	mov    ds,eax
  405a27:	test   al,0xaa
  405a29:	icebp  
  405a2a:	push   ds
  405a2b:	push   edi
  405a2c:	sbb    DWORD PTR [eax-0x52],edi
  405a2f:	std    
  405a30:	xchg   ecx,eax
  405a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a32:	rcr    dl,0x6c
  405a35:	outs   dx,BYTE PTR ds:[esi]
  405a36:	sbb    ebx,DWORD PTR [edx+edx*2]
  405a39:	aaa    
  405a3a:	les    ebx,FWORD PTR [edx]
  405a3c:	ds ja  0x405a5d
  405a3f:	mov    DWORD PTR [ecx+0x20],edi
  405a42:	mov    ecx,fs
  405a44:	mov    esi,0x9c19e9e2
  405a49:	inc    edi
  405a4a:	cwde   
  405a4b:	out    0x1b,al
  405a4d:	add    ah,BYTE PTR [esi-0x16d05c6f]
  405a53:	add    eax,0xcc55a800
  405a58:	or     BYTE PTR [ebx+esi*1-0x4df1095b],0x34
  405a60:	inc    ebp
  405a61:	mov    dl,0x5d
  405a63:	(bad)  
  405a64:	lods   al,BYTE PTR ds:[esi]
  405a65:	push   cs
  405a66:	mov    WORD PTR [esi],?
  405a68:	jmp    0x8a8d18d5
  405a6d:	cmc    
  405a6e:	jnp    0x405a45
  405a70:	sub    BYTE PTR [ebx+0x6b1a198d],ch
  405a76:	jl     0x405ad7
  405a78:	sub    al,0x3f
  405a7a:	popf   
  405a7b:	cmp    al,0x8f
  405a7d:	dec    ecx
  405a7e:	mov    esp,ebp
  405a80:	imul   BYTE PTR [ebx-0x31e997b3]
  405a86:	dec    esi
  405a87:	cmp    dl,bh
  405a89:	in     eax,0x70
  405a8b:	arpl   WORD PTR [ecx+0xde3ba6c],di
  405a91:	popa   
  405a92:	or     al,0x6e
  405a94:	gs xchg esi,eax
  405a96:	(bad)  
  405a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a99:	call   0xe7c878e5
  405a9e:	mov    ds:0xb90b963,al
  405aa3:	cmp    edx,DWORD PTR [eax]
  405aa5:	sub    BYTE PTR [ebx+0x6c952c9b],al
  405aab:	sub    al,0x12
  405aad:	xchg   edi,eax
  405aae:	mov    edi,0x4e550ab1
  405ab3:	xor    al,0x9e
  405ab5:	jno    0x405a39
  405ab7:	(bad)  
  405ab8:	(bad)  
  405ab9:	mov    esp,0x835689e
  405abe:	aas    
  405abf:	and    eax,0x71f64c93
  405ac4:	cmc    
  405ac5:	test   eax,0x7e47c30a
  405aca:	(bad)  
  405acb:	and    eax,0x19115d34
  405ad0:	jne    0x405b39
  405ad2:	in     eax,dx
  405ad3:	retf   
  405ad4:	and    DWORD PTR [edi-0xd],esp
  405ad7:	jge    0x405b41
  405ad9:	(bad)  
  405adb:	push   esp
  405adc:	fbstp  TBYTE PTR [esi]
  405ade:	fistp  WORD PTR [esi+0xbff88d4]
  405ae4:	add    eax,0xb617568d
  405ae9:	call   0xc0a8:0xe427da2
  405af0:	outs   dx,BYTE PTR ds:[esi]
  405af1:	sbb    ecx,esp
  405af3:	jae    0x405b05
  405af5:	dec    esp
  405af6:	(bad)  
  405af7:	xor    BYTE PTR [eax-0x2f],al
  405afa:	adc    edx,DWORD PTR [ebp-0x47]
  405afd:	xchg   ecx,eax
  405afe:	mov    esp,ecx
  405b00:	retf   
  405b01:	mov    esi,0x8617ec64
  405b06:	icebp  
  405b07:	xchg   esi,eax
  405b08:	aas    
  405b09:	mov    ds:0xeb0f37eb,al
  405b0e:	(bad)  
  405b10:	and    edx,DWORD PTR [esi+0x6b]
  405b13:	bound  ecx,QWORD PTR ds:0xc54387eb
  405b19:	sahf   
  405b1a:	or     eax,0x867eae1b
  405b1f:	sub    BYTE PTR [ebx+0x16],bl
  405b22:	sub    DWORD PTR [edi-0x6f10329d],eax
  405b28:	fs (bad) 
  405b2b:	les    edi,FWORD PTR [edi-0x7d169053]
  405b31:	mov    BYTE PTR [ebx+0x10],ch
  405b34:	mov    edx,edi
  405b36:	sbb    BYTE PTR [eax+0x48],ah
  405b39:	ss test eax,0x1df08e8b
  405b3f:	push   esp
  405b40:	jl     0x405b71
  405b42:	popf   
  405b43:	jmp    0x405b89
  405b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b46:	push   ecx
  405b47:	adc    bh,BYTE PTR [edi+0x60bf56d7]
  405b4d:	pop    ss
  405b4e:	mov    edi,0xfca6b3d1
  405b53:	cwde   
  405b54:	sbb    ebp,esp
  405b56:	(bad)  
  405b57:	cmp    dl,BYTE PTR [esi-0x693ebc2e]
  405b5d:	repz loop 0x405b83
  405b60:	xchg   ecx,eax
  405b61:	push   esp
  405b62:	fmul   DWORD PTR [edx-0x2f]
  405b65:	pop    esi
  405b66:	fldcw  WORD PTR [di]
  405b69:	nop
  405b6a:	ja     0x405b6d
  405b6c:	stos   DWORD PTR es:[edi],eax
  405b6d:	mov    dh,0x1c
  405b70:	imul   edx,DWORD PTR [ecx],0xf5d47425
  405b76:	sub    BYTE PTR [eax+ebp*4],ch
  405b79:	sbb    ch,BYTE PTR [eax]
  405b7b:	sbb    al,0x7d
  405b7d:	and    cl,bh
  405b7f:	ja     0x405b1e
  405b81:	xor    al,BYTE PTR [ecx]
  405b83:	jo     0x405c00
  405b85:	mov    dh,0xea
  405b87:	in     eax,0xd7
  405b89:	jbe    0x405b66
  405b8b:	cwde   
  405b8c:	mov    ebx,fs
  405b8e:	in     al,dx
  405b8f:	cld    
  405b90:	pop    es
  405b91:	dec    ebx
  405b92:	out    dx,al
  405b93:	jecxz  0x405b8c
  405b95:	lds    esp,FWORD PTR [ebp-0x33da866c]
  405b9b:	(bad)  
  405b9c:	mov    esi,0xcfed5069
  405ba1:	add    ch,ah
  405ba3:	sbb    eax,0xa7298492
  405ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba9:	push   ds
  405baa:	js     0x405b58
  405bac:	pop    ecx
  405bad:	jae    0x405b70
  405baf:	xchg   esi,eax
  405bb0:	inc    esi
  405bb1:	mov    ch,0x18
  405bb3:	xchg   ebp,eax
  405bb4:	and    eax,0xcd39cf00
  405bb9:	fmul   st,st(4)
  405bbb:	iret   
  405bbc:	fcomp  QWORD PTR [edx-0x285d0c94]
  405bc2:	jecxz  0x405b6d
  405bc4:	jmp    0x5a838c57
  405bc9:	fcomp  QWORD PTR [eax+0x2dc4816c]
  405bcf:	pushf  
  405bd0:	mov    ch,0x61
  405bd2:	push   esp
  405bd3:	and    BYTE PTR [eax],al
  405bd5:	fbstp  TBYTE PTR [ebx-0x7e]
  405bd8:	imul   eax,DWORD PTR [edi-0x70],0xffffffa0
  405bdc:	ds push edx
  405bde:	xor    al,0x92
  405be0:	mov    ebp,0x2f95dabf
  405be5:	icebp  
  405be6:	xor    eax,0x599f3936
  405beb:	stos   DWORD PTR es:[edi],eax
  405bec:	jne    0x405bf3
  405bee:	popf   
  405bef:	push   ebx
  405bf0:	and    DWORD PTR [ebp+0xf],esp
  405bf3:	xchg   esi,eax
  405bf4:	mov    dl,0x5e
  405bf6:	cwde   
  405bf7:	adc    ch,ah
  405bf9:	in     al,0x75
  405bfb:	stos   BYTE PTR es:[edi],al
  405bfc:	call   0x40bdddc
  405c01:	jo     0x405bcb
  405c03:	data16 sar BYTE PTR [eax],cl
  405c06:	inc    edx
  405c07:	shr    BYTE PTR ds:0xcfaae5e5,1
  405c0d:	lock xor eax,0x49233848
  405c13:	bound  esp,QWORD PTR [esi]
  405c15:	mov    al,ds:0x2630b1bf
  405c1a:	cwde   
  405c1b:	out    dx,al
  405c1c:	or     DWORD PTR [ecx-0x7b],esi
  405c1f:	loope  0x405bc3
  405c21:	cmp    esp,DWORD PTR ds:0xae5ba466
  405c27:	ja     0x405c11
  405c29:	jo     0x405c0f
  405c2b:	cwde   
  405c2c:	or     dl,0x1f
  405c2f:	sub    edi,DWORD PTR fs:[eax+0x49]
  405c33:	lds    edx,FWORD PTR ds:0x717efd22
  405c39:	cmp    al,0x82
  405c3b:	icebp  
  405c3c:	shr    BYTE PTR [eax+0x12a5efac],cl
  405c42:	jae    0x405c68
  405c44:	and    DWORD PTR [esi],0xffffffbc
  405c47:	xchg   ebx,edi
  405c49:	fdivr  st,st(7)
  405c4b:	adc    ah,BYTE PTR [esi+0x49bedc60]
  405c51:	test   eax,0x29f69e03
  405c56:	sbb    eax,0x1c525489
  405c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5c:	retf   
  405c5d:	les    esp,FWORD PTR ds:0x6b0de0bd
  405c63:	mov    ds:0x7d392074,al
  405c68:	mov    edx,0xca85a01b
  405c6d:	daa    
  405c6e:	sbb    al,0xf6
  405c70:	sbb    cl,BYTE PTR [edi]
  405c72:	pop    ecx
  405c73:	xchg   esp,eax
  405c74:	lds    ecx,FWORD PTR [eax-0x5f]
  405c77:	aad    0xb
  405c79:	outs   dx,DWORD PTR ds:[esi]
  405c7a:	jecxz  0x405c3c
  405c7c:	adc    eax,edx
  405c7e:	das    
  405c7f:	cmp    al,0x4c
  405c81:	jnp    0x405caa
  405c83:	lds    edx,FWORD PTR [edx]
  405c85:	sub    al,0xbb
  405c87:	nop
  405c88:	retf   
  405c89:	xor    dh,BYTE PTR gs:[esi]
  405c8c:	std    
  405c8d:	or     eax,0x5a2e70cb
  405c92:	inc    ebp
  405c93:	lds    edx,FWORD PTR [edi-0x2d]
  405c96:	pushw  cs
  405c98:	pusha  
  405c99:	std    
  405c9a:	jle    0x405cb4
  405c9c:	ja     0x405c9c
  405c9e:	xor    bl,BYTE PTR [esi-0x58]
  405ca1:	mov    eax,DWORD PTR [ebx+0x716b67f9]
  405ca7:	into   
  405ca8:	les    ebp,FWORD PTR [edi+0x66]
  405cab:	jnp    0x405cfb
  405cad:	cmp    BYTE PTR [ebx],0x61
  405cb0:	adc    edx,0xffffffcd
  405cb3:	cwde   
  405cb4:	fadd   DWORD PTR [eax-0x4d918e1b]
  405cba:	mov    DWORD PTR [ebx],esi
  405cbc:	sbb    DWORD PTR [ebx+0x33],0xfffffff2
  405cc0:	dec    ebx
  405cc1:	pop    esp
  405cc2:	cmp    bh,BYTE PTR [ebp+0x5e]
  405cc5:	jp     0x405c7b
  405cc7:	add    DWORD PTR [edx+0x6c],edi
  405cca:	pop    ecx
  405ccb:	push   eax
  405ccc:	or     al,BYTE PTR [ecx]
  405cce:	push   esi
  405ccf:	mov    al,0xa3
  405cd1:	js     0x405c72
  405cd3:	cmc    
  405cd4:	add    ebp,DWORD PTR gs:[eax+0x9]
  405cd8:	pop    ebx
  405cd9:	lahf   
  405cda:	int    0xd7
  405cdc:	(bad)  
  405cdd:	push   ss
  405cde:	fnstcw WORD PTR [esi+0x4]
  405ce1:	sbb    esp,DWORD PTR [ebx+0x3a91875d]
  405ce7:	push   cs
  405ce8:	mov    ebp,0x37da1cb1
  405ced:	sbb    al,0xcd
  405cef:	or     eax,0x73a23145
  405cf4:	ins    BYTE PTR es:[edi],dx
  405cf5:	(bad)  
  405cf6:	bound  esi,QWORD PTR [esi+0x8]
  405cf9:	int    0x9f
  405cfb:	retf   
  405cfc:	push   ss
  405cfd:	or     eax,edx
  405cff:	jnp    0x405d78
  405d01:	lahf   
  405d02:	arpl   sp,bx
  405d04:	imul   ebp,edi,0x7619deb8
  405d0a:	mov    cl,0x71
  405d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d0d:	cmc    
  405d0e:	aas    
  405d0f:	dec    ebx
  405d10:	stos   DWORD PTR es:[edi],eax
  405d11:	push   edi
  405d12:	push   es
  405d13:	test   eax,0x38e40960
  405d18:	dec    esp
  405d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d1a:	test   al,0x2a
  405d1c:	mov    cl,0xd8
  405d1e:	jns    0x405d5c
  405d20:	repnz sti 
  405d22:	xchg   BYTE PTR [ecx-0x71c652c],bl
  405d28:	imul   edx,DWORD PTR [eax+0x34],0xffffffec
  405d2c:	gs pop edx
  405d2e:	cmp    ah,BYTE PTR [edi-0x5f]
  405d31:	mov    cl,0xcc
  405d33:	daa    
  405d34:	das    
  405d35:	mov    dh,0xb4
  405d37:	ret    
  405d38:	mov    eax,ds:0xe2bb3626
  405d3d:	cmp    BYTE PTR ds:0xb32ab7d5,0xdb
  405d44:	adc    DWORD PTR [ebp+0x244260c3],edi
  405d4a:	jecxz  0x405d81
  405d4c:	clc    
  405d4d:	xlat   BYTE PTR ds:[ebx]
  405d4e:	shl    BYTE PTR [ebx],0x45
  405d51:	or     eax,0xc9e8d2bc
  405d56:	(bad)  
  405d57:	aam    0xc5
  405d59:	xchg   DWORD PTR [edi],ebp
  405d5b:	loopne 0x405cf1
  405d5d:	jle    0x405dd8
  405d5f:	sahf   
  405d60:	scas   al,BYTE PTR es:[edi]
  405d61:	mov    ds:0xf2fabc33,al
  405d66:	ja     0x405cf5
  405d68:	jns    0x405d04
  405d6a:	mov    ebx,0xb8ed1a30
  405d6f:	(bad)  
  405d70:	pop    ds
  405d71:	add    DWORD PTR ds:0xa4bf83bb,esp
  405d77:	adc    ecx,ebx
  405d79:	cmp    ah,ah
  405d7b:	std    
  405d7c:	js     0x405dce
  405d7e:	ins    DWORD PTR es:[edi],dx
  405d7f:	add    al,0x69
  405d81:	cld    
  405d82:	mov    esi,0x9cd3a1dd
  405d87:	pop    ecx
  405d88:	fimul  WORD PTR [ebp+0x23ce7820]
  405d8e:	xor    BYTE PTR [esi-0x3a38350b],bh
  405d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d95:	cmp    al,0x9c
  405d97:	retf   
  405d98:	ds imul ebp,ebx,0xffffff9f
  405d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d9d:	or     eax,0xca1441a9
  405da2:	adc    DWORD PTR [ecx],ebp
  405da4:	xchg   esp,eax
  405da5:	cdq    
  405da6:	pop    es
  405da7:	adc    edx,0xfffffff9
  405daa:	sbb    ebp,DWORD PTR [edi+0x70]
  405dad:	clc    
  405dae:	pusha  
  405daf:	aam    0x6e
  405db1:	ret    0xe5f4
  405db4:	inc    esi
  405db5:	ds (bad) 
  405db7:	cmc    
  405db8:	bound  ebp,QWORD PTR [ecx]
  405dba:	add    cl,BYTE PTR [eax+0x47]
  405dbd:	sub    BYTE PTR [edx-0x17],bh
  405dc0:	pusha  
  405dc1:	stos   BYTE PTR es:[edi],al
  405dc2:	cmp    ecx,esi
  405dc4:	and    DWORD PTR ds:0xc491d188,edi
  405dca:	imul   ebx,DWORD PTR [ecx+0x5a],0x2b3e7da
  405dd1:	shl    ch,0x45
  405dd4:	test   eax,0xce35dc37
  405dd9:	xchg   ebp,eax
  405dda:	mov    bh,0x3d
  405ddc:	inc    ebp
  405ddd:	mov    DWORD PTR [edi-0x4d],edi
  405de0:	aas    
  405de1:	and    DWORD PTR [ecx],edx
  405de3:	call   0x5fed:0x643a5fa4
  405dea:	pop    eax
  405deb:	out    dx,al
  405dec:	jo     0x405e4c
  405dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405def:	xchg   al,dl
  405df1:	dec    edi
  405df2:	rcr    ebx,0x3d
  405df5:	out    0x54,eax
  405df7:	push   ebx
  405df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df9:	or     BYTE PTR [eax-0x2feb71b],ah
  405dff:	pop    es
  405e00:	dec    edx
  405e01:	and    ch,BYTE PTR [ecx-0x17]
  405e04:	and    eax,0xd8db59a7
  405e09:	pop    esp
  405e0a:	aad    0x51
  405e0c:	cmc    
  405e0d:	imul   eax,DWORD PTR ds:0x40ff03d3,0x6f
  405e14:	xlat   BYTE PTR ds:[ebx]
  405e15:	xchg   ebx,eax
  405e16:	lods   eax,DWORD PTR ds:[esi]
  405e17:	adc    edx,DWORD PTR [edi+0x600ba668]
  405e1d:	xchg   ebx,eax
  405e1e:	hlt    
  405e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e20:	dec    ebx
  405e21:	(bad)  
  405e22:	in     eax,0xdb
  405e24:	add    BYTE PTR [eax],cl
  405e26:	mov    ds:0x19cc3991,eax
  405e2b:	loope  0x405e94
  405e2d:	pop    esi
  405e2e:	push   esi
  405e2f:	xchg   ecx,eax
  405e30:	outs   dx,BYTE PTR ds:[esi]
  405e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e32:	jle    0x405e6c
  405e34:	mov    es,esi
  405e36:	mov    al,ds:0xfd7214dd
  405e3b:	fs imul ebx,ecx,0x1c710bd3
  405e42:	mov    al,ds:0x510344a1
  405e47:	shl    BYTE PTR [edx],1
  405e49:	mov    ds:0xeb4e7b69,al
  405e4e:	enter  0xf220,0x8a
  405e52:	mov    bl,0xa
  405e54:	stc    
  405e55:	xchg   ebp,eax
  405e56:	pop    ebp
  405e57:	lods   al,BYTE PTR ds:[esi]
  405e58:	cmp    al,0xea
  405e5a:	ds jp  0x405e1c
  405e5d:	mov    edx,0xa5b0677a
  405e62:	fsub   DWORD PTR [ebx-0xd]
  405e65:	ds clc 
  405e67:	xchg   DWORD PTR [edi],edi
  405e69:	jbe    0x405e61
  405e6b:	pop    ebx
  405e6c:	pop    esi
  405e6d:	sub    ebp,DWORD PTR [ebp-0x19e5afcb]
  405e73:	icebp  
  405e74:	sbb    al,0x7f
  405e76:	les    edi,FWORD PTR [ebp-0x74739e1d]
  405e7c:	loope  0x405ec1
  405e7e:	or     DWORD PTR [esi],0xffffffa4
  405e81:	popf   
  405e82:	jbe    0x405eeb
  405e84:	xchg   DWORD PTR [ebx+0x614b7b95],ecx
  405e8a:	jb     0x405ef2
  405e8c:	out    dx,eax
  405e8d:	imul   eax,DWORD PTR [edi-0x54],0xffffffb9
  405e91:	push   eax
  405e92:	test   BYTE PTR [ebx],0xa8
  405e95:	xchg   ecx,eax
  405e96:	push   dx
  405e98:	dec    eax
  405e99:	jnp    0x405e8e
  405e9b:	xchg   esp,eax
  405e9c:	adc    ebp,DWORD PTR [esi+ebp*4+0x354d41f6]
  405ea3:	mov    ds:0x51710961,eax
  405ea8:	(bad)  
  405ea9:	aad    0xf3
  405eab:	jg     0x405eed
  405ead:	mov    al,ds:0x7523bed2
  405eb2:	mov    eax,ds:0xeda28a94
  405eb7:	mov    ecx,0xf9bff669
  405ebc:	lods   al,BYTE PTR ds:[esi]
  405ebd:	and    DWORD PTR [ebp+0x7549e8a],esi
  405ec3:	pop    ecx
  405ec4:	pop    esi
  405ec5:	cmp    eax,0xabf3137b
  405eca:	ins    DWORD PTR es:[edi],dx
  405ecb:	cmc    
  405ecc:	ins    DWORD PTR es:[edi],dx
  405ecd:	jmp    DWORD PTR [edi+eiz*2+0x29]
  405ed1:	cli    
  405ed2:	add    al,0xbb
  405ed4:	ds mov bl,bh
  405ed7:	cld    
  405ed8:	(bad)  ds:0xa7ac6506
  405ede:	daa    
  405edf:	call   0xf232:0x2266030b
  405ee6:	(bad)  
  405ee7:	push   cs
  405ee8:	les    eax,FWORD PTR [eax-0x5f03a336]
  405eee:	scas   al,BYTE PTR es:[edi]
  405eef:	mov    WORD PTR [esi+ebp*1+0x79f6d3e5],cs
  405ef6:	xchg   DWORD PTR [esi],esp
  405ef8:	mov    dh,0x6
  405efa:	xchg   ebp,eax
  405efb:	lds    eax,FWORD PTR [edi+edx*2-0x56661212]
  405f02:	je     0x405f63
  405f04:	fidiv  DWORD PTR [ebx+esi*8]
  405f07:	mov    edi,0xe6664ee
  405f0c:	mov    esp,DWORD PTR [eax]
  405f0e:	fdivr  DWORD PTR [ebx]
  405f10:	retf   
  405f11:	mov    DWORD PTR [edi-0x4c],ebx
  405f14:	popf   
  405f15:	pop    es
  405f16:	popf   
  405f17:	popa   
  405f18:	add    bh,0xb
  405f1b:	pop    edi
  405f1c:	inc    ecx
  405f1d:	mov    dl,0x7a
  405f1f:	jp     0x405fa0
  405f21:	inc    ecx
  405f22:	push   edx
  405f23:	jge    0x405f96
  405f25:	add    BYTE PTR [ebx],dl
  405f27:	xchg   ebx,edx
  405f29:	aam    0xfb
  405f2b:	inc    ebx
  405f2c:	xchg   esi,eax
  405f2d:	jmp    0xf0b4:0x4c5e1b8a
  405f34:	sbb    esp,ebx
  405f36:	jge    0x405f8f
  405f38:	(bad)  
  405f39:	in     eax,0x4c
  405f3b:	lods   al,BYTE PTR ds:[esi]
  405f3c:	outs   dx,BYTE PTR ds:[esi]
  405f3d:	(bad)  
  405f3e:	loop   0x405f62
  405f40:	mov    ch,0x93
  405f42:	sbb    BYTE PTR [ebx+0x6f3a22ee],bl
  405f48:	int3   
  405f49:	mov    eax,0xf8c6b2cc
  405f4e:	mov    esi,0x2cc8d50c
  405f53:	adc    BYTE PTR [eax+0x6],dh
  405f56:	arpl   WORD PTR [ecx+0xa],bp
  405f59:	jl     0x405f37
  405f5b:	pop    eax
  405f5c:	mov    al,0x7d
  405f5e:	or     al,0x4d
  405f60:	xor    edi,esp
  405f62:	push   cs
  405f63:	push   esp
  405f64:	ret    0xcbde
  405f67:	stos   BYTE PTR es:[edi],al
  405f68:	fsub   QWORD PTR [esi]
  405f6a:	pop    ss
  405f6b:	lahf   
  405f6c:	jmp    FWORD PTR [esi-0x319d4cc0]
  405f72:	jns    0x405fe5
  405f74:	pop    edi
  405f75:	in     al,0x4f
  405f77:	call   0xd15cfb6f
  405f7c:	push   0x40
  405f7e:	ja     0x405f9d
  405f80:	push   es
  405f81:	mov    cl,0xf3
  405f83:	imul   ebp,DWORD PTR [esi+0x381d9e81],0x23cd6f6
  405f8d:	into   
  405f8e:	jle    0x405f29
  405f90:	dec    ebx
  405f91:	mov    dl,0xb2
  405f93:	xchg   ebx,eax
  405f94:	jmp    0xbad4:0xad3a08a0
  405f9b:	push   es
  405f9c:	mov    ds:0x42e31f60,eax
  405fa1:	mov    ebp,0x253d9fbe
  405fa6:	das    
  405fa7:	sub    DWORD PTR [esi+0x78db4798],edi
  405fad:	dec    ebx
  405fae:	aaa    
  405faf:	pop    edx
  405fb0:	je     0x405f33
  405fb2:	mov    esi,0x5d1be573
  405fb7:	rol    BYTE PTR [esi+0x434525c3],cl
  405fbd:	jno    0x405f7d
  405fbf:	adc    al,0x32
  405fc1:	das    
  405fc2:	push   0x39
  405fc4:	xchg   esi,eax
  405fc5:	dec    edx
  405fc6:	lods   eax,DWORD PTR ds:[esi]
  405fc7:	pop    ebx
  405fc8:	(bad)  [edi-0x3f5b7810]
  405fce:	test   eax,0x43fe5639
  405fd3:	jp     0x405f67
  405fd5:	xchg   ebp,eax
  405fd6:	out    0x40,eax
  405fd8:	out    dx,eax
  405fd9:	shl    ecx,0x5d
  405fdc:	mov    BYTE PTR [edx-0x54af44fe],ah
  405fe2:	shl    BYTE PTR [ebx+0x1a6dd45],0x76
  405fe9:	std    
  405fea:	arpl   WORD PTR [esp+ebp*4+0x6d74d887],di
  405ff1:	imul   ebx,DWORD PTR [ebx+eax*1-0x21],0x9e07fe64
  405ff9:	pusha  
  405ffa:	loopne 0x405fc4
  405ffc:	sub    DWORD PTR [esi+0x5f],esi
  405fff:	neg    BYTE PTR [eax+ebp*2+0x49]
  406003:	dec    ebp
  406004:	mov    al,0x7d
  406006:	jmp    0x1197bc5
  40600b:	ror    dh,cl
  40600d:	stc    
  40600e:	add    al,0xf3
  406010:	fsub   DWORD PTR [eax-0x4e]
  406013:	xchg   ch,dh
  406015:	push   0xffffffb4
  406017:	and    edx,DWORD PTR [esi-0x12214d94]
  40601d:	sbb    BYTE PTR [edi],bh
  40601f:	pop    edi
  406020:	popf   
  406021:	scas   al,BYTE PTR es:[edi]
  406022:	pop    edi
  406023:	sub    al,0x98
  406025:	stos   BYTE PTR es:[edi],al
  406026:	push   0xffffffcc
  406028:	out    dx,al
  406029:	mov    ds:0x571e5cf7,al
  40602e:	test   DWORD PTR [ebx-0x533c7a99],0xe7f912b9
  406038:	test   al,0xb1
  40603a:	jmp    0x406094
  40603c:	ret    0x3463
  40603f:	repz inc esi
  406041:	xor    ecx,ebx
  406043:	push   edi
  406044:	push   edx
  406045:	out    dx,al
  406046:	dec    ebx
  406047:	xchg   esi,eax
  406048:	sbb    eax,0xb677df1
  40604d:	mov    ebx,ebx
  40604f:	mov    al,0xbf
  406051:	xor    BYTE PTR [edx+eax*8+0x2dd46b2b],dh
  406058:	and    ebx,eax
  40605a:	mov    dl,0x14
  40605c:	scas   al,BYTE PTR es:[edi]
  40605d:	pop    ss
  40605e:	dec    edx
  40605f:	inc    edx
  406060:	push   ds
  406061:	stos   BYTE PTR es:[edi],al
  406062:	sub    bl,BYTE PTR [ebx+0x61]
  406065:	dec    ebx
  406066:	(bad)  
  406067:	outs   dx,DWORD PTR ds:[esi]
  406068:	and    BYTE PTR [esi+0x62],ch
  40606b:	adc    eax,0x3bb2f28f
  406070:	xchg   esp,eax
  406071:	imul   esp,DWORD PTR [eax-0x5d],0xe62c6f12
  406078:	inc    esi
  406079:	lea    ebp,[ecx-0x74]
  40607c:	mov    al,0x23
  40607e:	aas    
  40607f:	jbe    0x406007
  406081:	int3   
  406082:	hlt    
  406083:	iret   
  406084:	adc    BYTE PTR [edx],dl
  406086:	sub    dh,BYTE PTR [ecx]
  406088:	push   esp
  406089:	pop    ss
  40608a:	jbe    0x4060c9
  40608c:	adc    BYTE PTR [edi-0x78],dh
  40608f:	int3   
  406090:	outs   dx,BYTE PTR ds:[esi]
  406091:	sub    al,0xa4
  406093:	ins    DWORD PTR es:[edi],dx
  406094:	adc    BYTE PTR [edi+0x52],0x62
  406098:	push   esp
  406099:	cmp    eax,0x8874f0fa
  40609e:	and    DWORD PTR ds:0xccea0976,eax
  4060a4:	add    eax,0xf121f942
  4060a9:	fdivr  DWORD PTR [ebx+eiz*2+0x21]
  4060ad:	jo     0x406037
  4060af:	inc    ebx
  4060b0:	stos   DWORD PTR es:[edi],eax
  4060b1:	leave  
  4060b2:	pop    ebx
  4060b3:	xchg   ebp,eax
  4060b4:	iret   
  4060b5:	(bad)  
  4060b6:	ins    BYTE PTR es:[edi],dx
  4060b7:	out    dx,al
  4060b8:	outs   dx,DWORD PTR ds:[esi]
  4060b9:	sub    ebx,DWORD PTR [edi+ecx*8-0x39]
  4060bd:	lock int3 
  4060bf:	inc    esp
  4060c0:	push   0xe0802309
  4060c5:	cwde   
  4060c6:	push   esi
  4060c7:	and    dh,BYTE PTR [edi+0x75870236]
  4060cd:	jns    0x40605b
  4060cf:	xchg   esi,eax
  4060d0:	push   eax
  4060d1:	cmp    al,0x8a
  4060d3:	dec    esp
  4060d4:	dec    esp
  4060d5:	retf   0x4c69
  4060d8:	retf   
  4060d9:	cmp    esi,DWORD PTR [edx-0x30788711]
  4060df:	outs   dx,DWORD PTR ds:[esi]
  4060e0:	jge    0x406063
  4060e2:	pop    edi
  4060e3:	cmc    
  4060e4:	jbe    0x406165
  4060e6:	loopne 0x406155
  4060e8:	rol    DWORD PTR [edi-0x4f7ff449],cl
  4060ee:	pushf  
  4060ef:	mov    eax,0x1a79088
  4060f4:	add    DWORD PTR [eax-0x17cbae9],ebp
  4060fa:	imul   edi,ecx,0xd4b1c647
  406100:	inc    edx
  406101:	call   0xe605:0xebda8af4
  406108:	mov    ss,WORD PTR [eax-0x1acdeb4f]
  40610e:	pop    ds
  40610f:	adc    al,0x8e
  406111:	mov    ds:0xe6050e48,al
  406116:	add    al,0xf7
  406118:	add    al,0xb
  40611a:	jecxz  0x4060d0
  40611c:	lods   eax,DWORD PTR ds:[esi]
  40611d:	or     eax,0x94a38c21
  406122:	mov    eax,ds:0x10e54f6f
  406127:	bound  ebp,QWORD PTR [esi+ebp*4-0x6d]
  40612b:	pop    eax
  40612c:	push   esi
  40612d:	sub    DWORD PTR ds:0xccb03617,edi
  406133:	mov    DWORD PTR [edx+0x4c2f83e6],ebx
  406139:	sub    edx,DWORD PTR [ebp+0x148ba140]
  40613f:	mov    bl,BYTE PTR [ebx+ebx*2+0xc3e1959]
  406146:	shl    DWORD PTR [edx+edi*4-0x4f28647e],1
  40614d:	xchg   ebp,eax
  40614e:	and    BYTE PTR [eax+0x1f],0x14
  406152:	popf   
  406153:	in     eax,dx
  406154:	fisttp QWORD PTR [edi]
  406156:	add    eax,0xa0d19706
  40615b:	mul    bh
  40615d:	dec    edi
  40615e:	inc    esi
  40615f:	loop   0x4061ba
  406161:	xchg   ebp,eax
  406162:	aas    
  406163:	jg     0x4061b4
  406165:	jmp    0xabd3:0xdae879c2
  40616c:	and    DWORD PTR [edx],0x4dd40b72
  406172:	test   eax,0xdb5a7937
  406177:	and    BYTE PTR [ebx],dh
  406179:	nop
  40617a:	fisttp WORD PTR [ebx]
  40617c:	out    dx,al
  40617d:	lock xor bl,BYTE PTR [edx-0x17efa784]
  406184:	cmp    eax,DWORD PTR [edi+0x31]
  406187:	xor    eax,0x86543065
  40618c:	bswap  eax
  40618e:	scas   al,BYTE PTR es:[edi]
  40618f:	imul   ecx,DWORD PTR [edi-0x21],0x89b2883f
  406196:	pop    ecx
  406197:	dec    esp
  406198:	int3   
  406199:	rol    BYTE PTR [edi-0x6e017bf4],0xe7
  4061a0:	cmp    dh,ch
  4061a2:	(bad)  
  4061a3:	sub    al,0x65
  4061a5:	or     ah,BYTE PTR [esp+ebx*2+0x69]
  4061a9:	add    al,0x35
  4061ab:	xchg   BYTE PTR [ebp+0x4a],cl
  4061ae:	and    ebx,edx
  4061b0:	cmp    al,0x1c
  4061b2:	xor    DWORD PTR [eax-0x58],ebx
  4061b5:	adc    BYTE PTR [eax],cl
  4061b7:	inc    eax
  4061b8:	mov    cs,WORD PTR [esi]
  4061ba:	pusha  
  4061bb:	das    
  4061bc:	fidiv  DWORD PTR [esi-0x74442759]
  4061c2:	mov    ebp,0xe0f331f6
  4061c7:	mov    ebp,DWORD PTR [esi]
  4061c9:	jecxz  0x4061d3
  4061cb:	push   cs
  4061cc:	lock js 0x406234
  4061cf:	repz mov ah,0xe8
  4061d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d3:	inc    esi
  4061d4:	nop
  4061d5:	in     eax,0x61
  4061d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d8:	jmp    0x4061f1
  4061da:	mov    ah,0xb6
  4061dc:	jge    0x4061ad
  4061de:	xchg   BYTE PTR [esi+edx*8],bh
  4061e1:	leave  
  4061e2:	push   ebp
  4061e3:	jo     0x406232
  4061e5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061e7:	inc    edi
  4061e8:	loopne 0x4061b2
  4061ea:	icebp  
  4061eb:	xchg   edi,eax
  4061ec:	or     DWORD PTR [edi-0x65d99a35],esp
  4061f2:	ja     0x4061c4
  4061f4:	mov    ds:0x605e898d,al
  4061f9:	call   0x795:0x1f8fd901
  406200:	sbb    ebp,esp
  406202:	add    al,0xc8
  406204:	pop    es
  406205:	adc    DWORD PTR [esi+0x1059ed96],edx
  40620b:	push   ebx
  40620c:	fdivr  DWORD PTR ss:[edx]
  40620f:	dec    edx
  406210:	cmp    dl,BYTE PTR [esi-0x644c5922]
  406216:	cmp    DWORD PTR [ecx+0x49],edi
  406219:	pop    ebp
  40621a:	dec    edi
  40621b:	pop    es
  40621c:	jno    0x406263
  40621e:	push   esi
  40621f:	hlt    
  406220:	ins    DWORD PTR es:[edi],dx
  406221:	nop
  406222:	loop   0x4061c5
  406224:	xchg   esp,eax
  406225:	fidiv  WORD PTR [edx+esi*1-0x70]
  406229:	jnp    0xeeabf10f
  40622f:	(bad)  
  406230:	ficomp DWORD PTR ds:0x978639a4
  406236:	fcomi  st,st(7)
  406238:	push   esi
  406239:	icebp  
  40623a:	dec    esi
  40623b:	or     ecx,edx
  40623d:	xchg   edi,eax
  40623e:	fimul  DWORD PTR [edx-0x1a]
  406241:	std    
  406242:	or     DWORD PTR [ecx],0xffffff87
  406245:	sti    
  406246:	xor    ah,BYTE PTR [edx+0x20]
  406249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40624a:	es jmp 0x40624f
  40624d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40624e:	push   ds
  40624f:	or     ecx,ecx
  406251:	cmp    eax,0x60ca69ae
  406256:	(bad)  [ebx]
  406258:	mov    dh,0xb0
  40625a:	enter  0xc99d,0xd4
  40625e:	cmp    ebp,DWORD PTR [esi]
  406260:	(bad)  [esi]
  406262:	cld    
  406263:	jae    0x406204
  406265:	hlt    
  406266:	je     0x4062d1
  406268:	cdq    
  406269:	push   ecx
  40626a:	retf   0x9a2a
  40626d:	mov    edi,0x11283d76
  406272:	(bad)  
  406273:	push   0x5
  406275:	or     esi,DWORD PTR [ebp+0x582c02fd]
  40627b:	sbb    ecx,ebp
  40627d:	lock mov dl,0x8b
  406280:	push   esp
  406281:	ror    BYTE PTR [eax-0x4fdc6775],cl
  406287:	rcr    BYTE PTR [ebx+edx*2],1
  40628a:	push   ebp
  40628b:	int    0xf8
  40628d:	xchg   edx,eax
  40628e:	cmp    esp,ebp
  406290:	push   ebp
  406291:	and    al,ch
  406293:	jmp    0x8731:0x4b4838a9
  40629a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40629b:	hlt    
  40629c:	cmp    BYTE PTR ds:0x3dc4e3aa,cl
  4062a2:	gs js  0x406227
  4062a5:	mov    bh,0xf9
  4062a7:	add    DWORD PTR [edx-0x35],ebp
  4062aa:	inc    eax
  4062ab:	cli    
  4062ac:	sub    dh,BYTE PTR [esi+eiz*1-0x1b]
  4062b0:	fidivr WORD PTR [esi+0x1a]
  4062b3:	mov    ecx,0x119f3450
  4062b8:	mov    gs,WORD PTR [ecx*8+0x46ebe9b0]
  4062bf:	or     dl,0xb3
  4062c2:	(bad)  
  4062c3:	loope  0x406286
  4062c5:	jnp    0x406274
  4062c7:	add    ebp,DWORD PTR [ecx-0x5e]
  4062ca:	inc    eax
  4062cb:	pop    ebx
  4062cc:	dec    edi
  4062cd:	mov    al,0x25
  4062cf:	push   ss
  4062d0:	popf   
  4062d1:	mov    al,0x55
  4062d3:	mov    edx,0xb26f7560
  4062d8:	and    ecx,0xd
  4062db:	aam    0x1d
  4062dd:	test   ecx,edi
  4062df:	js     0x406335
  4062e1:	add    eax,0x29ead53d
  4062e6:	cmp    eax,0xb349e384
  4062eb:	fwait
  4062ec:	sar    DWORD PTR [ebx+0x7],cl
  4062ef:	(bad)  
  4062f0:	scas   eax,DWORD PTR es:[edi]
  4062f1:	ss xchg ecx,eax
  4062f3:	mov    edi,0xe9adf186
  4062f8:	loopne 0x406335
  4062fa:	mov    ds:0xac95a967,al
  4062ff:	(bad)  
  406300:	mov    ds:0x21f05400,eax
  406305:	addr16 sbb al,0x55
  406308:	pop    edi
  406309:	leave  
  40630a:	or     al,0x47
  40630c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630d:	ja     0x40631c
  40630f:	ror    ebp,cl
  406311:	jge    0x40633d
  406313:	fild   DWORD PTR [edi-0x6fecd1d2]
  406319:	or     edx,0xffffffa8
  40631c:	gs cld 
  40631e:	cmp    esp,DWORD PTR [edi-0x20]
  406321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406322:	or     eax,0xac138406
  406327:	mov    dh,0xf5
  406329:	mov    esi,0x26512b63
  40632e:	xchg   ecx,eax
  40632f:	mov    ds:0xcb50d8ad,al
  406334:	sbb    al,0xf9
  406336:	inc    edx
  406337:	repz out dx,al
  406339:	mov    dh,0x64
  40633b:	lea    edx,es:[esi+0x60e8893e]
  406342:	pop    edi
  406343:	inc    eax
  406344:	add    BYTE PTR [ebp-0x11e4da5],ch
  40634a:	jb     0x406312
  40634c:	mov    bl,0x2c
  40634e:	mov    ecx,DWORD PTR [edi-0x4f]
  406351:	inc    ebx
  406352:	inc    esp
  406353:	js     0x406345
  406355:	inc    ebx
  406356:	stc    
  406357:	push   edx
  406358:	repnz and ebx,ebp
  40635b:	(bad)  
  40635c:	rcl    DWORD PTR [edi-0x223f5b98],0x1d
  406363:	ins    DWORD PTR es:[edi],dx
  406364:	lods   al,BYTE PTR ds:[esi]
  406365:	(bad)  
  406366:	push   ds
  406367:	in     eax,0xd9
  406369:	push   ds
  40636a:	cmp    BYTE PTR [ebx+0x3c],0xce
  40636e:	popa   
  40636f:	gs dec edi
  406371:	(bad)  
  406372:	cmp    eax,0x1b969557
  406377:	(bad)  
  406378:	je     0x406307
  40637a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40637b:	(bad)  
  40637c:	aas    
  40637d:	daa    
  40637e:	adc    DWORD PTR [ebx+eax*2+0x28],ebx
  406382:	test   BYTE PTR [edx+0x3aca9a82],dl
  406388:	inc    ecx
  406389:	imul   edi,DWORD PTR [edi-0x45161814],0x39d43a68
  406393:	arpl   WORD PTR [ecx-0x3bde3325],di
  406399:	pop    eax
  40639a:	push   0x72
  40639c:	(bad)  
  40639d:	int3   
  40639e:	sbb    ah,BYTE PTR [esi+0x2b7aa8a3]
  4063a4:	add    eax,0x85b2a7a4
  4063a9:	adc    DWORD PTR [edi],0x66
  4063ac:	test   DWORD PTR [eax],ebp
  4063ae:	xor    BYTE PTR [ecx+0x43],bl
  4063b1:	das    
  4063b2:	push   esi
  4063b3:	jno    0x406367
  4063b5:	out    dx,eax
  4063b6:	lea    ebp,[edx+0x4b]
  4063b9:	jbe    0x4063fa
  4063bb:	inc    esp
  4063bc:	cmp    al,0x7a
  4063be:	sbb    ecx,ebx
  4063c0:	lods   al,BYTE PTR ds:[esi]
  4063c1:	scas   eax,DWORD PTR es:[edi]
  4063c2:	ss in  eax,dx
  4063c4:	jns    0x40636e
  4063c6:	cmp    DWORD PTR [edx],esp
  4063c8:	pusha  
  4063c9:	jle    0x406431
  4063cb:	dec    ebp
  4063cc:	outs   dx,BYTE PTR ds:[esi]
  4063cd:	cmp    eax,0x9a20c627
  4063d2:	shr    BYTE PTR [ebx+0x54abec1c],1
  4063d8:	call   0x2b1f760b
  4063dd:	(bad)  [esi-0x4c]
  4063e0:	test   DWORD PTR fs:[ebx],esi
  4063e3:	mov    dl,BYTE PTR [edx]
  4063e5:	imul   edi,DWORD PTR [edi+edi*2],0x77c37823
  4063ec:	cli    
  4063ed:	push   0xfc6ef4fc
  4063f2:	ficom  DWORD PTR [ecx]
  4063f4:	xor    ah,dl
  4063f6:	sar    DWORD PTR ds:[edx-0x36aca326],1
  4063fd:	stos   BYTE PTR es:[edi],al
  4063fe:	ret    
  4063ff:	test   dl,ch
  406401:	icebp  
  406402:	jp     0x40647f
  406404:	ss jbe 0x406445
  406407:	mov    ebx,0x7e6125bf
  40640c:	push   eax
  40640d:	jmp    0xd306:0xf6ebf79d
  406414:	cmp    edx,DWORD PTR [ebp+0x4817f02e]
  40641a:	aam    0xfa
  40641c:	ss pop ebx
  40641e:	mov    dh,BYTE PTR [ebx]
  406420:	or     DWORD PTR [edi-0x5698509d],0x16
  406427:	outs   dx,BYTE PTR ds:[esi]
  406428:	adc    eax,0x5d362bf9
  40642d:	xor    BYTE PTR [eax+0x3b952e85],dl
  406433:	shl    DWORD PTR [ecx+0x37],0x65
  406437:	inc    esi
  406438:	and    ebp,DWORD PTR [edi+esi*4+0x44f7b133]
  40643f:	dec    edx
  406440:	pop    ebp
  406441:	pusha  
  406442:	sbb    BYTE PTR [ecx-0x6f91cf18],ch
  406448:	fdiv   DWORD PTR [ebp+0x41]
  40644b:	ins    BYTE PTR es:[edi],dx
  40644c:	push   esi
  40644d:	xchg   ebp,eax
  40644e:	les    esp,FWORD PTR [edi+ebp*4+0x77eb10ea]
  406455:	dec    esp
  406456:	into   
  406457:	add    cl,BYTE PTR [ebx-0x6]
  40645a:	mov    edx,0xf729a516
  40645f:	xor    BYTE PTR [ebx-0x393f12e4],0xef
  406466:	push   cs
  406467:	pop    ds
  406468:	shr    BYTE PTR [eax-0x4b],1
  40646b:	jne    0x406456
  40646d:	add    eax,0xee3909e6
  406472:	int3   
  406473:	lahf   
  406474:	or     DWORD PTR [esi+0x676d706a],0xa3cf78cc
  40647e:	loopne 0x40643e
  406480:	xor    eax,DWORD PTR [esi]
  406482:	mov    edx,DWORD PTR [esi+0x4f]
  406485:	(bad)  
  406487:	out    0x84,eax
  406489:	push   0x50f80a73
  40648e:	test   BYTE PTR [eax+0x3683a231],ch
  406494:	std    
  406495:	fdiv   st(0),st
  406497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406498:	push   ds
  406499:	mov    esp,0x48965b25
  40649e:	stos   DWORD PTR es:[edi],eax
  40649f:	sbb    ecx,DWORD PTR [ecx-0x3f]
  4064a2:	or     DWORD PTR [ebx-0x56],eax
  4064a5:	jecxz  0x4064c3
  4064a7:	jg     0x406485
  4064a9:	sub    ebx,edx
  4064ab:	push   esi
  4064ac:	sub    BYTE PTR [eax+0x2ba888e7],bh
  4064b2:	xchg   bh,cl
  4064b4:	sub    eax,0xffbfa6dc
  4064b9:	xor    BYTE PTR [edx+0x20d6340],0x31
  4064c0:	jmp    0xb109da76
  4064c5:	jne    0x4064ac
  4064c7:	std    
  4064c8:	and    DWORD PTR [eax+eiz*8+0x419818f4],ecx
  4064cf:	rcl    cl,0x9b
  4064d2:	cmc    
  4064d3:	adc    ah,ah
  4064d5:	dec    edi
  4064d6:	in     eax,0xd6
  4064d8:	pop    esp
  4064d9:	push   cs
  4064da:	sahf   
  4064db:	imul   esp,edx,0xffffffa4
  4064de:	xor    eax,DWORD PTR [edi+0x22]
  4064e1:	or     DWORD PTR [esi+ecx*2-0x2d33c573],0x3a
  4064e9:	fcom   DWORD PTR [ecx+ebx*8]
  4064ec:	mov    ebx,0xeee87ea7
  4064f1:	lock pop ds
  4064f3:	enter  0x31d3,0x19
  4064f7:	into   
  4064f8:	(bad)  
  4064f9:	mov    ch,0x41
  4064fb:	hlt    
  4064fc:	fninit 
  4064fe:	icebp  
  4064ff:	loopne 0x406519
  406501:	mov    ebx,0x246a35a
  406506:	xchg   ebp,eax
  406507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406508:	neg    dl
  40650a:	xchg   esi,eax
  40650b:	push   ds
  40650c:	sbb    BYTE PTR [edx+0x52],dh
  40650f:	mov    BYTE PTR [eax+eax*4+0x48],ch
  406513:	shl    edi,0x6a
  406516:	inc    esi
  406517:	and    al,0xd9
  406519:	loopne 0x40653c
  40651b:	out    dx,eax
  40651c:	push   edi
  40651d:	aad    0x1b
  40651f:	lods   eax,DWORD PTR ds:[esi]
  406520:	in     al,0x31
  406522:	or     edi,DWORD PTR [esi+0x2280cdad]
  406528:	cmp    bl,al
  40652a:	cli    
  40652b:	mov    WORD PTR [edi],es
  40652d:	rcl    DWORD PTR [ebp-0x28],1
  406530:	push   ecx
  406531:	pushf  
  406532:	adc    eax,0x93304f9a
  406537:	push   edx
  406538:	es out 0x69,eax
  40653b:	div    BYTE PTR [ebp+esi*2+0x6e]
  40653f:	mov    BYTE PTR [edi],dl
  406541:	setbe  BYTE PTR [edi-0x15]
  406545:	scas   eax,DWORD PTR es:[edi]
  406546:	sub    dl,0xff
  406549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40654a:	sbb    al,0xc6
  40654c:	add    bh,BYTE PTR [esi]
  40654e:	push   cs
  40654f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406550:	sbb    eax,ebp
  406552:	ins    BYTE PTR es:[edi],dx
  406553:	jo     0x4065ce
  406555:	dec    ebx
  406556:	inc    esi
  406557:	test   al,0x3
  406559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40655a:	outs   dx,DWORD PTR ds:[esi]
  40655b:	test   DWORD PTR [edx+0x1b5846ad],esp
  406561:	jp     0x406551
  406563:	push   cs
  406564:	mov    edx,0xf538d525
  406569:	inc    ebx
  40656a:	ficomp WORD PTR [esi+0x599ac08c]
  406570:	push   ebp
  406571:	add    ebx,edx
  406573:	mov    DWORD PTR [eax],esi
  406575:	mov    dl,0x82
  406577:	or     eax,0xe371c7ed
  40657c:	xchg   ecx,eax
  40657d:	mov    esp,0x955de738
  406582:	outs   dx,BYTE PTR ds:[esi]
  406583:	cwde   
  406584:	(bad)  
  406585:	retf   0xc5b3
  406588:	push   ebx
  406589:	in     eax,dx
  40658a:	scas   eax,DWORD PTR es:[edi]
  40658b:	dec    ebx
  40658c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40658d:	dec    esp
  40658e:	outs   dx,BYTE PTR ds:[esi]
  40658f:	mov    edx,0xe0a1f369
  406594:	enter  0x5f7e,0xf7
  406598:	(bad)  
  406599:	mov    ds:0xfe7f437f,eax
  40659e:	call   0xe0dc660f
  4065a3:	scas   al,BYTE PTR es:[edi]
  4065a4:	jae    0x40658d
  4065a6:	ins    DWORD PTR es:[edi],dx
  4065a7:	sahf   
  4065a8:	stos   BYTE PTR es:[edi],al
  4065a9:	dec    eax
  4065aa:	ret    
  4065ab:	push   ecx
  4065ac:	or     DWORD PTR [eax],ebp
  4065ae:	ins    BYTE PTR es:[edi],dx
  4065af:	xchg   esp,eax
  4065b0:	ret    0x9d1d
  4065b3:	cwde   
  4065b4:	sub    DWORD PTR [esi-0x2a],ebp
  4065b7:	cwde   
  4065b8:	test   eax,0x38d2fa9
  4065bd:	cmp    BYTE PTR [edi-0x25],dh
  4065c0:	jp     0x4065a1
  4065c2:	fs out dx,al
  4065c4:	addr16 mov ah,0xbf
  4065c7:	sub    BYTE PTR [ecx-0x348f705c],0x59
  4065ce:	ss push ebx
  4065d0:	mov    ebp,0x3955975b
  4065d5:	mov    ebx,DWORD PTR [edx+0x16cf2bf7]
  4065db:	mov    bl,0x86
  4065dd:	dec    esi
  4065de:	xchg   DWORD PTR [ecx-0x55fe13fe],ebp
  4065e4:	out    0x42,eax
  4065e6:	xchg   esi,eax
  4065e7:	cmc    
  4065e8:	mov    ebx,0x3b326b2b
  4065ed:	enter  0x4307,0x17
  4065f1:	and    al,0xae
  4065f3:	pop    edx
  4065f4:	aaa    
  4065f5:	inc    esp
  4065f6:	sbb    eax,0x91938368
  4065fb:	sub    edx,ecx
  4065fd:	jno    0x406618
  4065ff:	mov    bh,0x7c
  406601:	out    0xf5,al
  406603:	(bad)  
  406605:	popa   
  406606:	retf   0xa223
  406609:	inc    ecx
  40660a:	arpl   WORD PTR [eax],bp
  40660c:	loopne 0x40660e
  40660e:	inc    esp
  40660f:	add    BYTE PTR [edx+0x1e],0xe4
  406613:	sbb    cl,BYTE PTR [esp+eax*2+0x66]
  406617:	xor    DWORD PTR [ecx-0x34],0xffffff9a
  40661b:	in     al,dx
  40661c:	add    edi,ebx
  40661e:	dec    ecx
  40661f:	jp     0x40668d
  406621:	not    BYTE PTR [ecx+0x4f]
  406624:	int    0xe8
  406626:	scas   eax,DWORD PTR es:[edi]
  406627:	and    BYTE PTR [ebp-0x9ca0a07],bl
  40662d:	push   esp
  40662e:	dec    edx
  40662f:	inc    edi
  406630:	adc    al,0xa9
  406632:	inc    ebp
  406633:	call   0x44ed:0x40b86074
  40663a:	inc    esi
  40663b:	ret    
  40663c:	mov    ds:0x9db4ed40,eax
  406641:	add    eax,0xd0ba3a52
  406646:	aad    0xd8
  406648:	out    0x66,eax
  40664a:	jno    0x40669d
  40664c:	clc    
  40664d:	sti    
  40664e:	(bad)  
  40664f:	mul    DWORD PTR [edi-0x4c]
  406652:	sub    eax,0x18f25c0c
  406657:	ds or  dl,ch
  40665a:	out    dx,al
  40665b:	sbb    al,0xf6
  40665d:	push   es
  40665e:	retf   
  40665f:	enter  0xdc86,0x52
  406663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406664:	dec    ebp
  406665:	cmp    bl,0x61
  406668:	add    DWORD PTR [esi-0x6748fc1a],0x2d
  40666f:	lahf   
  406670:	mov    esi,esp
  406672:	gs data16 aas 
  406675:	or     eax,0xf9af57fc
  40667a:	idiv   BYTE PTR [ebp-0x5655e474]
  406680:	xor    eax,DWORD PTR [esp+edi*4+0x68]
  406684:	shl    DWORD PTR [eiz*2+0x1b156716],1
  40668b:	and    DWORD PTR [ebp+edi*8-0x1168368],0x1e90ca14
  406696:	jmp    0x6919e3a
  40669b:	adc    eax,0xd56ec08a
  4066a0:	cmp    BYTE PTR [eax+0x50e7d302],bh
  4066a6:	gs mov edi,0xcf8d5d23
  4066ac:	enter  0x3ba2,0xba
  4066b0:	rol    DWORD PTR [esi],0x55
  4066b3:	inc    edx
  4066b4:	or     ah,BYTE PTR [edx+0xcd2f93d]
  4066ba:	xchg   ebp,eax
  4066bb:	mov    dh,0x36
  4066bd:	and    cl,al
  4066bf:	int3   
  4066c0:	mov    BYTE PTR [edx-0x5fc2bd9d],0xe
  4066c7:	push   eax
  4066c8:	cmp    ebp,ecx
  4066ca:	and    ch,ch
  4066cc:	add    dl,BYTE PTR [edx]
  4066ce:	push   edi
  4066cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d0:	jecxz  0x406722
  4066d2:	test   BYTE PTR [eax+0x5a],0x61
  4066d6:	jne    0x40672a
  4066d8:	in     eax,dx
  4066d9:	mov    BYTE PTR [edi-0x60],al
  4066dc:	std    
  4066dd:	pop    esp
  4066de:	pop    es
  4066df:	and    esp,DWORD PTR [esi+eax*1+0x15]
  4066e3:	cdq    
  4066e4:	sahf   
  4066e5:	cld    
  4066e6:	xor    BYTE PTR [ebx+0xf],ah
  4066e9:	mov    esp,DWORD PTR [esi-0x5009d305]
  4066ef:	nop
  4066f0:	fisubr DWORD PTR [edi-0x50]
  4066f3:	jge    0x40671e
  4066f5:	mov    edi,DWORD PTR [esi-0xc]
  4066f8:	sub    al,0x33
  4066fa:	ror    esi,1
  4066fc:	inc    edi
  4066fd:	jl     0x4066d7
  4066ff:	dec    eax
  406700:	nop
  406701:	shl    DWORD PTR [esi],1
  406703:	push   ebx
  406704:	xchg   ecx,eax
  406705:	scas   eax,DWORD PTR es:[edi]
  406706:	test   al,0x15
  406708:	ins    DWORD PTR es:[edi],dx
  406709:	ds lahf 
  40670b:	repnz fisttp QWORD PTR [ebp-0x6a437a17]
  406712:	push   ebx
  406713:	in     al,dx
  406714:	ins    DWORD PTR es:[edi],dx
  406715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406716:	xor    al,0x40
  406718:	cld    
  406719:	xor    ah,ah
  40671b:	(bad)
  406720:	dec    eax
  406721:	mov    dl,0x7b
  406723:	arpl   sp,dx
  406725:	fcomp  DWORD PTR [edi]
  406727:	xor    ebp,DWORD PTR [ebp-0x625c5ada]
  40672d:	jo     0x4066fe
  40672f:	push   edx
  406730:	mov    bh,0x67
  406732:	mul    al
  406734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406735:	pop    esp
  406736:	shl    bl,cl
  406738:	push   ds
  406739:	sbb    ebp,DWORD PTR [edi-0x547f1a79]
  40673f:	aad    0x5a
  406741:	sub    al,0xb6
  406743:	cli    
  406744:	adc    BYTE PTR [eax],0x88
  406747:	sbb    BYTE PTR [esi],dh
  406749:	inc    esp
  40674a:	pop    ebp
  40674b:	and    esi,edx
  40674d:	adc    eax,0x6ec065d6
  406752:	jg     0x4067ab
  406754:	mov    ds:0x83f590d0,al
  406759:	sub    edi,DWORD PTR [eax]
  40675b:	sbb    DWORD PTR [ebp-0x58],0xfffffffd
  40675f:	ins    DWORD PTR es:[edi],dx
  406760:	dec    ecx
  406761:	add    ebx,esi
  406763:	out    dx,al
  406764:	scas   eax,DWORD PTR es:[edi]
  406765:	std    
  406766:	and    dh,BYTE PTR [ebx-0x2c]
  406769:	xchg   ecx,eax
  40676a:	test   eax,0x70fbb74f
  40676f:	dec    esp
  406770:	xor    eax,0x11dd89e2
  406775:	push   cs
  406776:	sbb    esi,ebx
  406778:	add    DWORD PTR [ecx-0x708a07e4],0xbefc45f5
  406782:	adc    ebx,DWORD PTR [eax-0x4e48c9c9]
  406788:	xchg   DWORD PTR [ebp-0x7e],ebp
  40678b:	sbb    ah,cl
  40678d:	mov    bl,0x3c
  40678f:	push   ds
  406790:	mov    esp,0x5e642797
  406795:	gs add eax,0xc085bbe2
  40679b:	push   cs
  40679c:	ficom  WORD PTR [eax]
  40679e:	add    BYTE PTR [eax-0x6b],bl
  4067a1:	stc    
  4067a2:	mov    ds:0xad691df1,al
  4067a7:	jg     0x406818
  4067a9:	outs   dx,BYTE PTR ds:[esi]
  4067aa:	je     0x40676d
  4067ac:	mov    esi,DWORD PTR [esi+0x55]
  4067af:	pop    ds
  4067b0:	nop
  4067b1:	adc    cl,BYTE PTR [eax+ecx*2]
  4067b4:	jge    0x4067be
  4067b6:	push   esp
  4067b7:	cs (bad) 
  4067b9:	les    edi,FWORD PTR [edx-0x24]
  4067bc:	inc    edi
  4067bd:	int3   
  4067be:	sbb    cl,BYTE PTR [edi]
  4067c0:	rcl    ebp,0xf7
  4067c3:	mov    eax,ds:0x32d04c56
  4067c8:	lea    ebx,[edi-0x24d5d31]
  4067ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067cf:	popf   
  4067d0:	pop    esp
  4067d1:	cld    
  4067d2:	out    0x7f,al
  4067d4:	in     al,dx
  4067d5:	in     al,dx
  4067d6:	xchg   esp,eax
  4067d7:	stc    
  4067d8:	jmp    0x4067a7
  4067da:	adc    al,0x18
  4067dc:	mov    ds:0x3cd50778,al
  4067e1:	test   al,0x24
  4067e3:	mov    WORD PTR [ebp-0x74],?
  4067e6:	adc    bh,dh
  4067e8:	rol    BYTE PTR [esi-0x3f],0xfc
  4067ec:	rcl    ebx,1
  4067ee:	cld    
  4067ef:	push   es
  4067f0:	jo     0x40679d
  4067f2:	stc    
  4067f3:	je     0x406856
  4067f5:	lahf   
  4067f6:	imul   eax,DWORD PTR [edx],0xbdc42d40
  4067fc:	inc    ebp
  4067fd:	pop    es
  4067fe:	pop    ds
  4067ff:	lods   eax,DWORD PTR ds:[esi]
  406800:	sbb    ebx,DWORD PTR [eax+0x3896a5b1]
  406806:	pusha  
  406807:	(bad)  
  406808:	fist   WORD PTR [esi+0x69]
  40680b:	hlt    
  40680c:	pop    ebx
  40680d:	or     BYTE PTR [esi],ch
  40680f:	shl    DWORD PTR [edi-0x79],0x37
  406813:	scas   eax,DWORD PTR es:[edi]
  406814:	xor    cl,bl
  406816:	add    DWORD PTR [edx],eax
  406818:	mov    ebp,0x70d9fd7d
  40681d:	in     eax,0x51
  40681f:	lahf   
  406820:	jo     0x40689c
  406822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406823:	out    0xd9,al
  406825:	push   ss
  406826:	jo     0x406859
  406828:	jmp    0x406825
  40682a:	cdq    
  40682b:	dec    esp
  40682c:	mov    ecx,edi
  40682e:	jmp    0x34e0:0x9996e0cb
  406835:	mov    al,ds:0x2ec69f60
  40683a:	fcomp  QWORD PTR [edx+0x5a1b5d0d]
  406840:	and    DWORD PTR [ebx],0x70ce547a
  406846:	test   dh,dh
  406848:	or     eax,0x65feb3d6
  40684d:	sahf   
  40684e:	pop    edx
  40684f:	sbb    esi,edi
  406851:	add    DWORD PTR [eax-0x3b],eax
  406854:	shl    bh,cl
  406856:	addr16 retf 0x5af6
  40685a:	aas    
  40685b:	(bad)  
  40685c:	xor    eax,0xa5e3a744
  406861:	sbb    DWORD PTR [ebp+0x8fec851],0x28d26245
  40686b:	clc    
  40686c:	in     eax,0xc7
  40686e:	xor    eax,0x60d9e12a
  406873:	jmp    0xfa54:0xdb72a224
  40687a:	sbb    al,0x7d
  40687c:	sbb    eax,0x7cd6060a
  406881:	or     ch,bh
  406883:	fild   DWORD PTR [esi-0x57]
  406886:	jo     0x4068a8
  406888:	lahf   
  406889:	popa   
  40688a:	loopne 0x406832
  40688c:	cmp    DWORD PTR [esi-0xce2cb50],eax
  406892:	inc    eax
  406893:	scas   al,BYTE PTR es:[edi]
  406894:	mov    ecx,DWORD PTR [esi+0x68a995e1]
  40689a:	xor    DWORD PTR es:[ebx+0x38],eax
  40689e:	outs   dx,DWORD PTR ds:[esi]
  40689f:	mov    esi,0x7ffc9443
  4068a4:	outs   dx,BYTE PTR ds:[esi]
  4068a5:	je     0x4068b1
  4068a7:	inc    esi
  4068a8:	dec    edi
  4068a9:	mov    edi,0xc93c8e3
  4068ae:	inc    esp
  4068af:	lds    edi,FWORD PTR [esi]
  4068b1:	ss inc ecx
  4068b3:	adc    al,0xdd
  4068b5:	mov    BYTE PTR [ecx+eiz*2+0x1c],cl
  4068b9:	or     eax,0x820b2cf1
  4068be:	pusha  
  4068bf:	mov    ebp,edi
  4068c1:	xchg   BYTE PTR [eax+0x7f],ah
  4068c4:	adc    bh,0xb8
  4068c7:	mov    bh,0x6e
  4068c9:	(bad)  
  4068ca:	jmp    0xb3e2:0xdfb4497
  4068d1:	pushf  
  4068d2:	mov    DWORD PTR [esi],0x76afd996
  4068d8:	in     eax,0x71
  4068da:	mov    ds:0x5af21fa2,al
  4068df:	mov    ecx,DWORD PTR [ebp+0x1d]
  4068e2:	jns    0x4068a8
  4068e4:	pop    ebx
  4068e5:	mov    ss,ecx
  4068e7:	pop    ebx
  4068e8:	aas    
  4068e9:	and    al,0x91
  4068eb:	add    eax,0x6823e527
  4068f0:	adc    eax,0x7abc7052
  4068f5:	loope  0x4068bc
  4068f7:	jecxz  0x40687d
  4068f9:	xor    al,0x7a
  4068fb:	push   ss
  4068fc:	jb     0x406930
  4068fe:	ds adc al,0xd7
  406901:	xor    esi,DWORD PTR [esi-0x71]
  406904:	mov    eax,0x7772c5fe
  406909:	push   ss
  40690a:	mov    ch,0x9
  40690c:	mov    BYTE PTR [ecx],bh
  40690e:	gs retf 
  406910:	arpl   ax,sp
  406912:	pop    esi
  406913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406914:	sub    BYTE PTR [esi],0xe2
  406917:	jno    0x4068df
  406919:	pushf  
  40691a:	jae    0x406964
  40691c:	ins    BYTE PTR es:[edi],dx
  40691d:	gs (bad) 
  40691f:	(bad)  
  406921:	shr    BYTE PTR [ebx],1
  406923:	or     ah,BYTE PTR [edx]
  406925:	push   0xffffff8d
  406927:	mov    dl,0xed
  406929:	jle    0x40698d
  40692b:	adc    DWORD PTR ds:0x99cff506,esi
  406931:	arpl   WORD PTR [edx],dx
  406933:	mov    al,ds:0x2273d42c
  406938:	pop    ecx
  406939:	(bad)  
  40693a:	hlt    
  40693b:	adc    WORD PTR [eax],bp
  40693e:	mov    edx,0x487e4f6e
  406943:	icebp  
  406944:	sub    al,0x4c
  406946:	cmp    eax,0xbb65ca8
  40694b:	pop    ss
  40694c:	inc    edi
  40694d:	sti    
  40694e:	out    0x11,al
  406950:	(bad)
  406953:	push   esi
  406954:	jmp    0x2d45f177
  406959:	add    al,0x21
  40695b:	sub    ebx,DWORD PTR [ebp-0x2d291740]
  406961:	out    dx,al
  406962:	daa    
  406963:	out    0xb3,al
  406965:	cmp    eax,0x8cc91ee
  40696a:	xchg   ecx,eax
  40696b:	add    ebx,0xcca503f8
  406971:	xchg   edi,eax
  406972:	pop    edi
  406973:	xor    BYTE PTR [edx+0x27fc23b7],al
  406979:	lods   al,BYTE PTR ds:[esi]
  40697a:	mov    edi,0x347290b7
  40697f:	add    ch,BYTE PTR [esi-0x7a]
  406982:	pop    eax
  406983:	dec    ebp
  406984:	paddsw mm6,QWORD PTR [edx-0x35]
  406988:	xchg   DWORD PTR [esi+esi*8],ebx
  40698b:	scas   eax,DWORD PTR es:[edi]
  40698c:	inc    esp
  40698d:	test   DWORD PTR [ebx-0x194ed46c],ebp
  406993:	add    BYTE PTR [edi-0x7f29f28b],0x3c
  40699a:	and    al,0x4
  40699c:	mov    bh,0xa
  40699e:	push   esp
  40699f:	dec    ebp
  4069a0:	or     ebx,DWORD PTR [esi+0x49fe19be]
  4069a6:	adc    al,0xaa
  4069a8:	mov    ch,bl
  4069aa:	rcr    BYTE PTR [edx+0x7084f017],0xf2
  4069b1:	adc    DWORD PTR [edx],esi
  4069b3:	adc    eax,0x34dc849f
  4069b8:	pop    DWORD PTR [edx+0x4ec6edca]
  4069be:	fwait
  4069bf:	push   0x70e44e24
  4069c4:	loop   0x4069c8
  4069c6:	xchg   esp,eax
  4069c7:	retf   
  4069c8:	inc    eax
  4069c9:	(bad)  
  4069ca:	jnp    0x406958
  4069cc:	adc    DWORD PTR [ebp+0x3578f061],0x52432804
  4069d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069d7:	fidivr DWORD PTR [esi+eiz*4]
  4069da:	push   edx
  4069db:	jo     0x406a14
  4069dd:	cwde   
  4069de:	ins    BYTE PTR es:[edi],dx
  4069df:	jno    0x406a2d
  4069e1:	mov    ds:0xcc6ea348,al
  4069e6:	scas   eax,DWORD PTR es:[edi]
  4069e7:	icebp  
  4069e8:	test   BYTE PTR [edi+ebp*4-0x12],bl
  4069ec:	jo     0x406a4d
  4069ee:	loopne 0x406a64
  4069f0:	js     0x406a43
  4069f2:	xchg   ecx,eax
  4069f3:	mov    ?,ebx
  4069f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f6:	ret    0xd96
  4069f9:	mov    cl,0x11
  4069fb:	les    esp,FWORD PTR [edi-0xb3028d2]
  406a01:	inc    ecx
  406a02:	into   
  406a03:	jae    0x406a6e
  406a05:	outs   dx,DWORD PTR ds:[esi]
  406a06:	jne    0x406a66
  406a08:	mov    edx,0x6669380b
  406a0d:	xchg   ebx,eax
  406a0e:	xor    al,0x93
  406a10:	test   DWORD PTR [eax],ebx
  406a12:	pop    ss
  406a13:	inc    esi
  406a14:	xchg   ebp,eax
  406a15:	out    0xb0,eax
  406a17:	hlt    
  406a18:	outs   dx,DWORD PTR ds:[esi]
  406a19:	(bad)  
  406a1a:	popa   
  406a1b:	push   edx
  406a1c:	pop    ebp
  406a1d:	loope  0x406a89
  406a1f:	lods   al,BYTE PTR ds:[esi]
  406a20:	daa    
  406a21:	in     al,dx
  406a22:	mov    ebp,0x92ef7b26
  406a27:	xchg   esp,eax
  406a28:	cwde   
  406a29:	xchg   ebx,eax
  406a2a:	mov    eax,0x662f638b
  406a2f:	nop
  406a30:	out    0xee,al
  406a32:	retf   0x3eff
  406a35:	jns    0x4069fc
  406a37:	sbb    al,0xab
  406a39:	mov    esi,0x86d972a4
  406a3e:	adc    al,0x6f
  406a40:	sbb    al,0x1f
  406a42:	imul   edi,eax,0x5d4d01f5
  406a48:	and    esi,edx
  406a4a:	iret   
  406a4b:	pop    edi
  406a4d:	push   ebx
  406a4e:	jg     0x4069e6
  406a50:	mov    ecx,0x9a52cf45
  406a55:	dec    edx
  406a56:	je     0x406a56
  406a58:	pusha  
  406a59:	cmc    
  406a5a:	lahf   
  406a5b:	shl    BYTE PTR [ecx],0x4f
  406a5e:	test   eax,0xe25d5dd1
  406a63:	inc    esp
  406a64:	push   ebp
  406a65:	(bad)  
  406a66:	push   ecx
  406a67:	cs dec edx
  406a69:	pusha  
  406a6a:	push   edx
  406a6b:	pop    ecx
  406a6c:	jge    0x406a9d
  406a6e:	fmul   st(5),st
  406a70:	cmp    esp,DWORD PTR ds:0x5d644af3
  406a76:	xor    al,0xaa
  406a78:	or     al,0xd7
  406a7a:	imul   ebp,DWORD PTR [esi+0x1dc53ed4],0x4511211a
  406a84:	rol    BYTE PTR [eax+0x5d5a8141],0xd7
  406a8b:	and    ch,BYTE PTR [edx+eax*8+0x50]
  406a8f:	jno    0x406a7b
  406a91:	sbb    ebx,DWORD PTR [edi]
  406a93:	jecxz  0x406a34
  406a95:	cmp    eax,0x757dfdc5
  406a9a:	add    DWORD PTR [eax+edx*4+0x6050f8e0],eax
  406aa1:	fucom  st(0)
  406aa3:	and    edx,0x22
  406aa6:	imul   BYTE PTR [edx+0x2d]
  406aa9:	neg    BYTE PTR [eax+0x79a99813]
  406aaf:	jbe    0x406b29
  406ab1:	xchg   edx,eax
  406ab2:	fistp  QWORD PTR [edx+0x2b]
  406ab5:	pushf  
  406ab6:	fimul  WORD PTR ds:0x45d0ee3d
  406abc:	js     0x406ae3
  406abe:	mov    al,es:0x28f8fc29
  406ac4:	adc    esp,DWORD PTR es:[ebx-0x20489393]
  406acb:	mov    eax,0x3395bfca
  406ad0:	not    DWORD PTR [esi+0x7f]
  406ad3:	push   ebx
  406ad4:	mov    ah,0x77
  406ad6:	add    DWORD PTR [esi+0x52],edi
  406ad9:	fistp  QWORD PTR [edx+0x1d506a]
  406adf:	ss xchg esp,eax
  406ae1:	dec    ecx
  406ae2:	xchg   dh,al
  406ae4:	dec    ebx
  406ae5:	push   eax
  406ae6:	push   ecx
  406ae7:	sub    ecx,DWORD PTR [ebx]
  406ae9:	add    DWORD PTR [eax+0x36],ebx
  406aec:	adc    dl,BYTE PTR ds:0x880eb336
  406af2:	add    dl,bl
  406af4:	push   eax
  406af5:	test   eax,0xbfd1fe73
  406afa:	test   BYTE PTR [ecx+0x6b],ch
  406afd:	adc    cl,BYTE PTR [ebx-0x58a34a2d]
  406b03:	int    0x6d
  406b05:	inc    ecx
  406b06:	sahf   
  406b07:	mov    ds:0x695498c1,eax
  406b0c:	(bad)  
  406b0e:	pop    esp
  406b0f:	xchg   esp,eax
  406b10:	push   ss
  406b11:	mov    DWORD PTR [ebx+0x7fd40df],0x32745dd4
  406b1b:	cdq    
  406b1c:	xor    edx,0xffffffed
  406b1f:	mov    al,ds:0x39240d0a
  406b24:	and    al,0x24
  406b26:	mov    DWORD PTR [eax+ebx*4],edi
  406b29:	(bad)  
  406b2a:	ds je  0x406b75
  406b2d:	push   esi
  406b2e:	sub    al,0x3c
  406b30:	dec    ebx
  406b31:	adc    dl,0x85
  406b34:	std    
  406b35:	inc    esi
  406b36:	mov    ds:0x4a9ee3ea,eax
  406b3b:	mov    ah,0x8f
  406b3d:	fldln2 
  406b3f:	stc    
  406b40:	loope  0x406b06
  406b42:	pusha  
  406b43:	call   0xef85524a
  406b48:	mov    es,eax
  406b4a:	(bad)  
  406b4b:	adc    bl,BYTE PTR [edi]
  406b4d:	and    esi,DWORD PTR [ebx+0x10681704]
  406b53:	xchg   cl,dl
  406b55:	xchg   ebx,eax
  406b56:	inc    esi
  406b57:	iret   
  406b58:	cmp    DWORD PTR ds:0xdc6aaab7,ebp
  406b5e:	push   0xffffffa9
  406b60:	(bad)  
  406b61:	sar    BYTE PTR [ebp-0x6e],cl
  406b64:	fldenv [eax-0x47323f0b]
  406b6a:	js     0x406bdf
  406b6c:	push   0xf2738f4
  406b71:	(bad)  
  406b72:	and    cl,cl
  406b74:	fnstsw WORD PTR [ebx+0x19c71172]
  406b7a:	mov    al,ds:0xcb0b49f4
  406b7f:	adc    BYTE PTR [esi-0x80],0x51
  406b83:	mov    edi,0x109c4336
  406b88:	cdq    
  406b89:	add    ebp,ebx
  406b8b:	adc    ebx,DWORD PTR [esi+0x62]
  406b8e:	fdiv   QWORD PTR [esi+0x31]
  406b91:	(bad)  
  406b92:	and    DWORD PTR [ebp-0x26799e88],ebp
  406b98:	imul   edi,edx,0x8d7324b9
  406b9e:	adc    DWORD PTR [esi-0x39],esi
  406ba1:	dec    ebp
  406ba2:	dec    edi
  406ba3:	xor    edx,DWORD PTR [ecx-0x25e4f200]
  406ba9:	jmp    0xd65c3b20
  406bae:	push   0x70
  406bb0:	int3   
  406bb1:	repnz sub BYTE PTR ds:0x2933eef,bl
  406bb8:	and    BYTE PTR [edx+edi*4-0x53],bh
  406bbc:	mov    WORD PTR [esi+eiz*1-0x65f43d7d],gs
  406bc3:	pinsrw mm6,WORD PTR [edi+0x4d],0x73
  406bc8:	imul   ebx,DWORD PTR [ebp-0x11712225],0x1b1ce99e
  406bd2:	hlt    
  406bd3:	scas   al,BYTE PTR es:[edi]
  406bd4:	dec    esp
  406bd5:	pop    edi
  406bd6:	and    eax,0x22907586
  406bdb:	scas   eax,DWORD PTR es:[edi]
  406bdc:	jns    0x406be5
  406bde:	adc    DWORD PTR ds:0x12b9946f,esi
  406be4:	mov    eax,DWORD PTR [edx-0x261b5364]
  406bea:	test   al,0xd9
  406bec:	mov    dl,0xb0
  406bee:	addr16 icebp 
  406bf0:	add    eax,DWORD PTR [edi+0x711d2034]
  406bf6:	sbb    cl,BYTE PTR [edx-0x6]
  406bf9:	sub    BYTE PTR [edx+0x3bf9a0b6],al
  406bff:	imul   esi,edi,0xbdba2f04
  406c05:	mov    DWORD PTR [ebx+0x16a24aa],edi
  406c0b:	fcomp  DWORD PTR [esi]
  406c0d:	push   edx
  406c0e:	iret   
  406c0f:	cmp    edi,esp
  406c11:	rol    BYTE PTR [eax+0x6e],0x5a
  406c15:	mov    eax,ds:0xee76b8f1
  406c1a:	mov    ah,0x1
  406c1c:	jmp    0x406c2f
  406c1e:	out    0xcb,al
  406c20:	das    
  406c21:	rol    BYTE PTR [ecx],cl
  406c23:	loope  0x406bba
  406c25:	int    0x8f
  406c27:	jbe    0x406c91
  406c29:	ins    DWORD PTR es:[edi],dx
  406c2a:	xor    DWORD PTR [ebx],ebp
  406c2c:	fwait
  406c2d:	cdq    
  406c2e:	cs adc eax,0xf11fc210
  406c34:	mov    ah,0xf7
  406c36:	add    DWORD PTR [eax-0x49],0xffffffe0
  406c3a:	test   ebx,0xd3b262b0
  406c40:	jle    0x406c78
  406c42:	lock fidivr DWORD PTR [ecx+0x728aa0c7]
  406c49:	and    al,0x27
  406c4b:	jne    0x406c7f
  406c4d:	push   edi
  406c4e:	out    dx,eax
  406c4f:	push   cs
  406c50:	(bad)  
  406c51:	jl     0x406bdb
  406c53:	sbb    eax,0x4a963b6b
  406c58:	and    BYTE PTR [ecx],0x7f
  406c5b:	push   esp
  406c5c:	jmp    0xd9a8:0x12eff4a7
  406c63:	push   0x6b667506
  406c68:	jmp    0xaa57:0x2370f301
  406c6f:	test   al,0xf5
  406c71:	stos   DWORD PTR es:[edi],eax
  406c72:	jae    0x406c42
  406c74:	push   ecx
  406c75:	(bad)  
  406c76:	pop    edx
  406c77:	dec    ebx
  406c78:	push   ebx
  406c79:	jns    0x406c5b
  406c7b:	inc    edx
  406c7c:	and    eax,0x9e6118a4
  406c81:	adc    DWORD PTR [ecx+0x45],0x32
  406c85:	sbb    ch,BYTE PTR [ebx+0x28]
  406c88:	mov    WORD PTR [esi],?
  406c8a:	in     eax,dx
  406c8b:	or     dh,BYTE PTR [ecx+eax*2+0x7445ae35]
  406c92:	loopne 0x406d0b
  406c94:	ret    0x2544
  406c97:	into   
  406c98:	add    eax,edx
  406c9a:	dec    esi
  406c9b:	jg     0x406c1f
  406c9d:	jmp    0x62fd6634
  406ca2:	cdq    
  406ca3:	repz fs dec edx
  406ca6:	mov    dh,0x2b
  406ca8:	mov    ds:0xfbd02564,eax
  406cad:	jb     0x406cb2
  406caf:	adc    eax,0xbae50ecd
  406cb4:	(bad)  
  406cb5:	xor    al,bh
  406cb7:	shl    BYTE PTR [esi-0x73],0x21
  406cbb:	repnz lea ecx,ds:0x51aa75f
  406cc2:	ins    BYTE PTR es:[edi],dx
  406cc3:	bound  esi,QWORD PTR [edx-0x44]
  406cc6:	push   es
  406cc7:	das    
  406cc8:	jbe    0x406d19
  406cca:	dec    esp
  406ccb:	aam    0x21
  406ccd:	and    esi,DWORD PTR [eax+edx*4+0x11]
  406cd1:	or     al,0x67
  406cd3:	into   
  406cd4:	dec    esi
  406cd5:	ins    DWORD PTR es:[edi],dx
  406cd6:	mov    bh,0x4f
  406cd8:	and    al,ah
  406cda:	push   es
  406cdb:	fstp   st(4)
  406cdd:	pop    edx
  406cde:	into   
  406cdf:	and    BYTE PTR [edx-0x17066219],dh
  406ce5:	or     DWORD PTR ds:[esi-0x80],edi
  406ce9:	cmp    eax,0x2774055d
  406cee:	cdq    
  406cef:	ss sub eax,0x7346d224
  406cf5:	repz mov ebp,0x1d23f551
  406cfb:	(bad)  
  406cfc:	in     al,dx
  406cfd:	adc    BYTE PTR [edx+0x4cb06d8],cl
  406d03:	out    dx,eax
  406d04:	aam    0xd1
  406d06:	jg     0x406c9a
  406d08:	out    0x55,al
  406d0a:	repz iret 
  406d0c:	sub    al,0x40
  406d0e:	and    DWORD PTR [esi+eiz*4],ebp
  406d11:	push   0xd8999607
  406d16:	push   cs
  406d17:	icebp  
  406d18:	jbe    0x406d88
  406d1a:	jp     0x406cf9
  406d1c:	leave  
  406d1d:	push   ebp
  406d1e:	adc    DWORD PTR [ecx+0x2027ae42],edi
  406d24:	sbb    BYTE PTR [ecx+edi*4],cl
  406d27:	cmp    eax,0x98edae28
  406d2c:	adc    DWORD PTR ds:0xd6165303,ebx
  406d32:	sub    bl,0x4a
  406d35:	push   ebp
  406d36:	jmp    FWORD PTR [ebx+ebp*1]
  406d39:	mov    edi,DWORD PTR [ebx]
  406d3b:	or     eax,0x87937412
  406d40:	aam    0x4a
  406d42:	sub    BYTE PTR [eax-0x6dfb271e],ch
  406d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d49:	cmp    al,0x11
  406d4b:	lea    esi,[edx+0x5526c230]
  406d51:	fs jmp 0x6763:0x52251181
  406d59:	sar    ecx,cl
  406d5b:	cmp    al,0xad
  406d5d:	les    ecx,FWORD PTR [esi]
  406d5f:	xchg   ecx,eax
  406d60:	sub    BYTE PTR [ecx],ch
  406d62:	stc    
  406d63:	ds or  al,0x9c
  406d66:	mov    ecx,0x2f318b38
  406d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d6c:	sub    ecx,ecx
  406d6e:	add    al,0x24
  406d70:	test   BYTE PTR [ebp+0x1dd53601],0x61
  406d77:	mov    esi,0x18159b4b
  406d7c:	imul   eax,DWORD PTR [ecx+0x5ecbf72c],0x19996fd2
  406d86:	push   esi
  406d87:	fcomp  QWORD PTR [ebx]
  406d89:	dec    esp
  406d8a:	bound  ebp,QWORD PTR [edi+0x3]
  406d8d:	xor    bl,BYTE PTR [ecx-0x1dfdb037]
  406d93:	adc    al,dh
  406d95:	dec    ebp
  406d96:	push   ebp
  406d97:	mov    ds:0x90f9b540,eax
  406d9c:	fmul   DWORD PTR [eax+edi*4+0x1523b21]
  406da3:	lock adc al,0x58
  406da6:	mov    dh,0x24
  406da8:	sub    eax,0x7a740a24
  406dad:	popf   
  406dae:	sub    edi,DWORD PTR [edx-0xd]
  406db1:	mov    al,0x34
  406db3:	inc    edx
  406db4:	icebp  
  406db5:	inc    eax
  406db6:	fwait
  406db7:	or     ecx,DWORD PTR [edi+0x33533620]
  406dbd:	pop    ds
  406dbe:	xor    bh,BYTE PTR [ebp-0x3705bde9]
  406dc4:	and    eax,0xd9c1c1f
  406dc9:	ret    0x2c9b
  406dcc:	je     0x406d53
  406dce:	pushf  
  406dcf:	shl    dl,0x72
  406dd2:	in     eax,dx
  406dd3:	mov    eax,ds:0x6c983dea
  406dd8:	(bad)  
  406dd9:	xchg   ebp,eax
  406dda:	je     0x406dc4
  406ddc:	adc    DWORD PTR [edx],ebp
  406dde:	rcl    bl,cl
  406de0:	jne    0x406dca
  406de2:	or     al,0x54
  406de4:	js     0x406e17
  406de6:	xchg   edx,eax
  406de7:	popa   
  406de8:	jecxz  0x406d6e
  406dea:	sbb    BYTE PTR [eax],al
  406dec:	retf   0x55d7
  406def:	push   es
  406df0:	jmp    0x28f2:0xf7a4a810
  406df7:	fxch   st(2)
  406df9:	mov    esi,DWORD PTR [esi+0x6b35c3ff]
  406dff:	aas    
  406e00:	push   ecx
  406e01:	jmp    0x406e64
  406e03:	pop    eax
  406e04:	cwde   
  406e05:	inc    esp
  406e06:	sbb    ah,BYTE PTR [ecx+0x70fcaaa5]
  406e0c:	(bad)  
  406e0e:	xchg   ebx,eax
  406e0f:	xchg   ebp,eax
  406e10:	dec    edi
  406e11:	repz inc eax
  406e13:	outs   dx,BYTE PTR ds:[esi]
  406e14:	fcmove st,st(6)
  406e16:	push   ds
  406e17:	ret    
  406e18:	test   DWORD PTR [eax+0xe],edx
  406e1b:	jne    0x406e34
  406e1d:	xor    al,BYTE PTR [edx]
  406e1f:	pop    edi
  406e20:	add    eax,0xc0ac61d7
  406e25:	rcl    DWORD PTR [eax-0x51],cl
  406e28:	(bad)  [ebx+0x21]
  406e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e2c:	stos   DWORD PTR es:[edi],eax
  406e2d:	push   0x835604d
  406e32:	mov    ah,0x15
  406e34:	cmp    eax,0xc5c3dd73
  406e39:	cli    
  406e3a:	outs   dx,BYTE PTR ds:[esi]
  406e3b:	xchg   edx,eax
  406e3c:	cmc    
  406e3d:	sti    
  406e3e:	test   BYTE PTR [esi-0x3f],cl
  406e41:	test   DWORD PTR [edx-0x37],ecx
  406e44:	scas   eax,DWORD PTR es:[edi]
  406e45:	stc    
  406e46:	and    al,0xfb
  406e48:	mov    al,0xb7
  406e4a:	cmp    al,0x2e
  406e4c:	stc    
  406e4d:	jbe    0x406e01
  406e4f:	aas    
  406e50:	sbb    eax,DWORD PTR [ebp-0x1cbc018f]
  406e56:	mov    ds:0x2459ad01,al
  406e5b:	fsubr  DWORD PTR [ebp-0x285de72]
  406e61:	push   es
  406e62:	mov    bh,0x9e
  406e64:	mov    bh,0x99
  406e66:	push   ebx
  406e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e68:	hlt    
  406e69:	cld    
  406e6a:	cwde   
  406e6b:	mov    esp,0x53c3bd4b
  406e70:	and    al,0x1a
  406e72:	sti    
  406e73:	xor    DWORD PTR [eax-0x1f],ebx
  406e76:	jnp    0x406e32
  406e78:	dec    edi
  406e79:	popf   
  406e7a:	dec    ecx
  406e7b:	pop    esi
  406e7c:	inc    edi
  406e7d:	fsub   QWORD PTR [edx]
  406e7f:	data16 or al,0x8e
  406e82:	push   ebx
  406e83:	(bad)  
  406e84:	pop    ds
  406e85:	push   ecx
  406e86:	jmp    0x406e6d
  406e88:	scas   eax,DWORD PTR es:[edi]
  406e89:	xchg   BYTE PTR [edi-0xa],al
  406e8c:	rcr    edx,cl
  406e8e:	jmp    0x406ec0
  406e90:	or     BYTE PTR [edi+ecx*2+0x137036ca],0x68
  406e98:	mov    edi,0xe82c96ea
  406e9d:	repnz dec esi
  406e9f:	pop    ecx
  406ea0:	fst    QWORD PTR [eax-0x1b]
  406ea3:	jg     0x406edf
  406ea5:	das    
  406ea6:	mov    eax,ds:0xe0d64a57
  406eab:	mov    ebx,0xa274e35d
  406eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb1:	lahf   
  406eb2:	int    0x95
  406eb4:	adc    al,0x63
  406eb6:	add    al,dl
  406eb8:	ins    DWORD PTR es:[edi],dx
  406eb9:	arpl   ax,dx
  406ebb:	lahf   
  406ebc:	lods   al,BYTE PTR ds:[esi]
  406ebd:	push   0xffffffab
  406ebf:	outs   dx,BYTE PTR ds:[esi]
  406ec0:	test   DWORD PTR [edi-0x11],eax
  406ec3:	mov    ebx,0x9f99e33c
  406ec8:	pop    ebx
  406ec9:	test   al,0x42
  406ecb:	dec    eax
  406ecc:	(bad)
  406ed1:	jmp    edi
  406ed3:	or     BYTE PTR [eax+0x539c886],ah
  406ed9:	inc    ebx
  406eda:	and    DWORD PTR [eax+0x609736b2],0xffffffc7
  406ee1:	icebp  
  406ee2:	pop    eax
  406ee3:	pop    ebp
  406ee4:	jmp    0x406f52
  406ee6:	push   ebp
  406ee7:	neg    DWORD PTR [edx-0x74]
  406eea:	sbb    BYTE PTR [eax-0x26],cl
  406eed:	inc    ecx
  406eee:	inc    esi
  406eef:	out    0x98,al
  406ef1:	mov    BYTE PTR [eax+ebx*2],bl
  406ef4:	sbb    bl,BYTE PTR [esi]
  406ef6:	mov    eax,ds:0xc9c67ff5
  406efb:	imul   edi,DWORD PTR [edi],0x37f7a9ba
  406f01:	fisttp DWORD PTR [esi]
  406f03:	test   ecx,ebx
  406f05:	clc    
  406f06:	push   ds
  406f07:	je     0x406ebe
  406f09:	or     eax,DWORD PTR [ebp+0x30]
  406f0c:	fcom   DWORD PTR [esi+ebp*8]
  406f0f:	push   ebp
  406f10:	jl     0x406eca
  406f12:	inc    edx
  406f13:	pusha  
  406f14:	dec    ebp
  406f15:	mov    dh,0x5c
  406f17:	cli    
  406f18:	xor    eax,0x8d0e472c
  406f1d:	xor    DWORD PTR [eax+0x7d2fe98],esi
  406f23:	jmp    0x406f8e
  406f25:	jmp    0x406ead
  406f27:	imul   edi,esp,0xffffffe1
  406f2a:	adc    al,0x59
  406f2c:	jne    0x406ef4
  406f2e:	sbb    DWORD PTR [edx+0x7a],0xffffffec
  406f32:	in     eax,0x2e
  406f34:	out    dx,eax
  406f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f36:	sub    ebx,DWORD PTR [eax+0x24]
  406f39:	cmp    eax,0x49f568
  406f3e:	mov    ah,0xf9
  406f40:	ret    
  406f41:	(bad)  
  406f43:	jns    0x406fa9
  406f45:	int    0xb
  406f47:	adc    al,0x20
  406f49:	sub    eax,DWORD PTR es:[edx-0x22]
  406f4d:	aam    0xc9
  406f4f:	loope  0x406fd0
  406f51:	imul   edi,DWORD PTR [ecx-0x6ce4013],0x985a7e26
  406f5b:	mov    ah,0xd3
  406f5d:	mov    ebx,0x33dcb256
  406f62:	mov    esi,fs
  406f64:	mov    WORD PTR [edx+esi*2-0x30],ss
  406f68:	outs   dx,DWORD PTR ds:[esi]
  406f69:	sub    BYTE PTR [eax-0x56],cl
  406f6c:	idiv   BYTE PTR [ebx-0x2af6bd50]
  406f72:	adc    BYTE PTR [edx],dh
  406f74:	adc    eax,0xa18f217b
  406f79:	sub    eax,0x75f50ea1
  406f7e:	cmp    al,0x6
  406f80:	cld    
  406f81:	push   es
  406f82:	cmp    DWORD PTR [esi-0x4c3619d5],ecx
  406f88:	je     0x406f4a
  406f8a:	imul   DWORD PTR [edi-0x38]
  406f8d:	neg    dl
  406f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f90:	xor    al,BYTE PTR [ecx+0x14]
  406f93:	in     eax,0xff
  406f95:	ret    
  406f96:	(bad)  
  406f97:	bnd js 0x406f36
  406f9a:	jmp    0x5bff:0xb7ec15cc
  406fa1:	cli    
  406fa2:	retf   
  406fa3:	call   0xbcb1e96f
  406fa8:	fcom   QWORD PTR [ebp+0x1dd4e224]
  406fae:	or     bl,BYTE PTR [esi+0x4771b045]
  406fb4:	sbb    eax,0x8dfe037d
  406fb9:	jmp    edx
  406fbb:	enter  0xe349,0xd9
  406fbf:	jo     0x40703a
  406fc1:	into   
  406fc2:	ret    0xd6b7
  406fc5:	or     eax,DWORD PTR [edi-0x1f]
  406fc8:	dec    eax
  406fc9:	cld    
  406fca:	dec    edx
  406fcb:	mov    WORD PTR [esi+0x769535a3],?
  406fd1:	cld    
  406fd2:	in     eax,0x75
  406fd4:	loop   0x40700e
  406fd6:	mov    ds:0xd99787d2,al
  406fdb:	test   DWORD PTR [ecx],0xca18e981
  406fe1:	in     al,0xbc
  406fe3:	xchg   ecx,eax
  406fe4:	repz cmp dl,BYTE PTR [eax-0x3446a2be]
  406feb:	sub    al,0x9e
  406fed:	lods   al,BYTE PTR ds:[esi]
  406fee:	popa   
  406fef:	loope  0x40706d
  406ff1:	cmp    BYTE PTR [ebx-0x1c],cl
  406ff4:	es push esi
  406ff6:	inc    edx
  406ff7:	(bad)  
  406ff8:	pushf  
  406ff9:	popa   
  406ffa:	lods   al,BYTE PTR ds:[esi]
  406ffb:	test   BYTE PTR [ebx+0x4f],ah
  406ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fff:	add    eax,0x5ce40cf1
  407004:	in     eax,0x0
  407006:	mov    ebx,0xa3d39367
  40700b:	nop
  40700c:	test   BYTE PTR [esi],bh
  40700e:	pop    ebp
  40700f:	xchg   edi,eax
  407010:	call   0x488c:0x3ac1fc09
  407017:	fbstp  TBYTE PTR [esi+0x3233be00]
  40701d:	xlat   BYTE PTR ds:[ebx]
  40701e:	or     al,0x7a
  407020:	je     0x406fd4
  407022:	lods   eax,DWORD PTR ds:[esi]
  407023:	repnz mov ds:0xd2844fd,al
  407029:	pop    ebp
  40702a:	xchg   ebx,eax
  40702b:	or     BYTE PTR [edi-0x4417add],dl
  407031:	sbb    bl,0x9b
  407034:	scas   al,BYTE PTR es:[edi]
  407035:	xchg   esi,eax
  407036:	test   eax,0x60570f53
  40703b:	xchg   DWORD PTR [edi-0x20],ebx
  40703e:	or     al,BYTE PTR [edi-0x14]
  407041:	gs sahf 
  407043:	jnp    0x407085
  407045:	in     eax,0xd7
  407047:	fild   WORD PTR [eax]
  407049:	jmp    0x407013
  40704b:	sbb    ebx,DWORD PTR [edi-0x76]
  40704e:	inc    ebp
  40704f:	mov    DWORD PTR [edx],esi
  407051:	retf   0x1edb
  407054:	jne    0x407099
  407056:	mov    ecx,0x786a0fc0
  40705b:	sti    
  40705c:	outs   dx,DWORD PTR ds:[esi]
  40705d:	ja     0x407011
  40705f:	jp     0x406fe7
  407061:	pusha  
  407062:	imul   ecx,esi,0xffffff81
  407065:	outs   dx,DWORD PTR ds:[esi]
  407066:	inc    edi
  407067:	sti    
  407068:	stos   DWORD PTR es:[edi],eax
  407069:	xchg   esp,eax
  40706a:	jmp    0x407085
  40706c:	jmp    0x407017
  40706e:	inc    edx
  40706f:	js     0x4070ce
  407071:	xchg   ecx,eax
  407072:	dec    eax
  407073:	and    DWORD PTR [ecx-0x9],edx
  407076:	fnsave [edi-0x57b6739f]
  40707c:	and    eax,0x9242f9a5
  407081:	or     cl,BYTE PTR [edi-0x56]
  407084:	int3   
  407085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407086:	loopne 0x407086
  407088:	mov    al,0xc
  40708a:	cli    
  40708b:	cmp    dl,BYTE PTR [ebx+0x1cfb7044]
  407091:	jmp    0x4070d1
  407093:	sbb    al,0xb7
  407095:	add    eax,0x7f034bba
  40709a:	add    BYTE PTR [ebp+0x43],cl
  40709d:	dec    edi
  40709e:	pushf  
  40709f:	nop
  4070a0:	jl     0x407087
  4070a2:	pop    esi
  4070a3:	das    
  4070a4:	into   
  4070a5:	inc    eax
  4070a6:	out    dx,al
  4070a7:	repnz sbb bh,bl
  4070aa:	sar    DWORD PTR [edi-0x42],1
  4070ad:	scas   al,BYTE PTR es:[edi]
  4070ae:	xchg   ebx,eax
  4070af:	mov    ebp,0x438161cb
  4070b4:	loope  0x4070c0
  4070b6:	push   edx
  4070b7:	jae    0x4070a6
  4070b9:	iret   
  4070ba:	std    
  4070bb:	adc    edx,DWORD PTR [edx]
  4070bd:	fs daa 
  4070bf:	jge    0x40712c
  4070c1:	outs   dx,DWORD PTR ds:[esi]
  4070c2:	popf   
  4070c3:	dec    esp
  4070c4:	scas   eax,DWORD PTR es:[edi]
  4070c5:	jb     0x4070f2
  4070c7:	jmp    0x407121
  4070c9:	pop    edi
  4070ca:	cdq    
  4070cb:	or     DWORD PTR [eax],0x67
  4070ce:	nop
  4070cf:	and    ebx,DWORD PTR [edi]
  4070d1:	fsubr  DWORD PTR [esi+0x67]
  4070d4:	repz ss and eax,0x54edc6d2
  4070db:	xlat   BYTE PTR ds:[ebx]
  4070dc:	call   0xfe5e:0xb7b20ab7
  4070e3:	cmc    
  4070e4:	test   eax,0xb1789694
  4070e9:	sbb    DWORD PTR [ebx-0x41],ecx
  4070ec:	and    esp,DWORD PTR [ebp+0x61]
  4070ef:	ss into 
  4070f1:	jg     0x40710f
  4070f3:	push   ebp
  4070f4:	retf   
  4070f5:	inc    esi
  4070f6:	pop    edi
  4070f7:	out    dx,eax
  4070f8:	scas   eax,DWORD PTR es:[edi]
  4070f9:	ds cld 
  4070fb:	pop    DWORD PTR [esi+0x34ed3a0a]
  407101:	stos   DWORD PTR es:[edi],eax
  407102:	(bad)  
  407103:	mov    edi,0x6c1e1740
  407108:	test   eax,0xf82cb148
  40710d:	out    0x1f,al
  40710f:	es ins BYTE PTR es:[edi],dx
  407111:	fisubr WORD PTR [edx+esi*2-0x6d]
  407115:	pop    esi
  407116:	jne    0x4070a1
  407118:	jp     0x4070f3
  40711a:	pop    ds
  40711b:	xor    BYTE PTR [edi+0x1a],bh
  40711e:	pop    esp
  40711f:	ret    0x33d4
  407122:	push   ds
  407123:	nop
  407124:	stc    
  407125:	aas    
  407126:	mov    al,ds:0xa2c8a3b0
  40712b:	cdq    
  40712c:	ins    DWORD PTR es:[edi],dx
  40712d:	aam    0x9b
  40712f:	(bad)  
  407131:	inc    esp
  407132:	in     al,dx
  407133:	pop    edi
  407134:	jo     0x4070eb
  407136:	stos   BYTE PTR es:[edi],al
  407137:	inc    edi
  407138:	in     al,0x1c
  40713a:	mov    edi,0xaeab74f8
  40713f:	les    edi,FWORD PTR [ebp+0x4f8be24e]
  407145:	sub    BYTE PTR ds:0xf3e234de,ch
  40714b:	push   ds
  40714c:	bound  edx,QWORD PTR [esi-0x39941501]
  407152:	cdq    
  407153:	(bad)  
  407155:	imul   edx,DWORD PTR [edi+0x56],0xffffffc4
  407159:	out    dx,eax
  40715a:	sbb    eax,eax
  40715c:	aad    0x3
  40715e:	fidiv  WORD PTR [ebx+edx*8+0x6db21f9f]
  407165:	aad    0x33
  407167:	jns    0x4070eb
  407169:	jg     0x407190
  40716b:	inc    ebx
  40716c:	ficom  WORD PTR [edx+0x27]
  40716f:	xchg   esi,eax
  407170:	push   edx
  407171:	push   ecx
  407172:	mov    esp,?
  407174:	pop    ebp
  407175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407176:	sbb    DWORD PTR [ebp-0x45],0xfffffff6
  40717a:	sub    esi,DWORD PTR [edi]
  40717c:	pop    esi
  40717d:	push   eax
  40717e:	cdq    
  40717f:	mov    WORD PTR [ebx+edi*1],?
  407182:	pop    ss
  407183:	int3   
  407184:	fiadd  WORD PTR [edx+ebp*2-0x49]
  407188:	and    DWORD PTR [edx-0x74],eax
  40718b:	lods   eax,DWORD PTR ds:[esi]
  40718c:	cld    
  40718d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40718e:	push   ds
  40718f:	(bad)  
  407191:	pushf  
  407192:	xchg   BYTE PTR [ebp+0x166c1459],cl
  407198:	test   al,dh
  40719a:	lds    eax,FWORD PTR [esi]
  40719c:	mov    edx,0xacaf608e
  4071a1:	sbb    eax,ecx
  4071a3:	sub    eax,0x5fd38f83
  4071a8:	jp     0x407220
  4071aa:	fbld   TBYTE PTR [ebp-0x18]
  4071ad:	xchg   ebx,eax
  4071ae:	lods   al,BYTE PTR ds:[esi]
  4071af:	mov    al,0xd7
  4071b1:	push   ds
  4071b2:	sub    DWORD PTR [edx+0x7b],esp
  4071b5:	xchg   ebp,eax
  4071b6:	mov    DWORD PTR [edx*1+0x1a143005],esp
  4071bd:	aam    0x71
  4071bf:	cmp    edx,edi
  4071c1:	repz les eax,FWORD PTR [ebp+0x36005b6b]
  4071c8:	retf   0x524b
  4071cb:	dec    ebx
  4071cc:	lea    esp,[ecx-0x50]
  4071cf:	inc    ebx
  4071d0:	popa   
  4071d1:	adc    esp,DWORD PTR [ebp+0x5c]
  4071d4:	stos   DWORD PTR es:[edi],eax
  4071d5:	call   0xe8f9aad7
  4071da:	scas   al,BYTE PTR es:[edi]
  4071db:	stc    
  4071dc:	test   DWORD PTR [eax+esi*8+0x7a],0x8a7599c0
  4071e4:	and    eax,0xd61af403
  4071e9:	mov    dh,0xd0
  4071eb:	jno    0x4071e1
  4071ed:	test   eax,0xb9ed3ac0
  4071f2:	xchg   ebx,ecx
  4071f4:	add    edi,DWORD PTR [ebp-0x26]
  4071f7:	mov    ?,WORD PTR [ecx+0x20]
  4071fa:	jmp    0x4071cf
  4071fc:	push   ss
  4071fd:	or     DWORD PTR [eax-0x432e02],esi
  407203:	push   ebp
  407204:	fs jg  0x4071c5
  407207:	in     al,0x24
  407209:	fldcw  WORD PTR [eax-0x25e752c0]
  40720f:	ret    0x2b60
  407212:	push   ebp
  407213:	inc    edi
  407214:	in     eax,0x1c
  407216:	ins    BYTE PTR es:[edi],dx
  407217:	loopne 0x4071df
  407219:	pushf  
  40721a:	stos   DWORD PTR es:[edi],eax
  40721b:	js     0x407270
  40721d:	into   
  40721e:	xchg   BYTE PTR [edi],ch
  407220:	inc    eax
  407221:	clc    
  407222:	adc    ebp,esp
  407224:	jmp    0xfad4:0x68672ba8
  40722b:	cli    
  40722c:	mov    ah,0xdc
  40722e:	sub    al,0xb3
  407230:	lds    ebp,FWORD PTR [esi+0x73]
  407233:	std    
  407234:	sbb    BYTE PTR [ebp+0x4f],bh
  407237:	dec    ebx
  407238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407239:	rol    DWORD PTR [eax],cl
  40723b:	and    al,0x47
  40723d:	mov    ecx,0xcf7b740d
  407242:	sub    al,0x75
  407244:	jae    0x4071d6
  407246:	push   eax
  407247:	or     DWORD PTR [esi-0x23943a23],0x1e7c6f56
  407251:	cmp    DWORD PTR [ecx-0xb89f3eb],esi
  407257:	inc    edx
  407258:	inc    esi
  407259:	pop    esi
  40725a:	aam    0xa9
  40725c:	out    dx,al
  40725d:	scas   eax,DWORD PTR es:[edi]
  40725e:	cdq    
  40725f:	jae    0x4072a8
  407261:	cmp    BYTE PTR [ebp-0x2f951e7d],dh
  407267:	dec    esp
  407268:	lahf   
  407269:	outs   dx,DWORD PTR ds:[esi]
  40726b:	aad    0xeb
  40726d:	imul   esp,DWORD PTR [ecx-0x2ad7ea25],0x1f700a81
  407277:	xchg   esp,eax
  407278:	xor    BYTE PTR [esi-0x4ed13bb4],0x8a
  40727f:	into   
  407280:	add    al,0x3
  407282:	mov    dl,0x4f
  407284:	cdq    
  407285:	retf   0xd2a1
  407288:	jmp    0x407229
  40728a:	daa    
  40728b:	enter  0x599e,0x8c
  40728f:	adc    edi,edi
  407291:	dec    esp
  407292:	xor    al,0x58
  407294:	rcr    DWORD PTR [edi],1
  407296:	js     0x407230
  407298:	cmp    eax,0x88997544
  40729d:	scas   al,BYTE PTR es:[edi]
  40729e:	fsub   QWORD PTR [ebp-0x21]
  4072a1:	dec    edx
  4072a2:	inc    eax
  4072a3:	jbe    0x407246
  4072a5:	dec    esp
  4072a6:	mov    BYTE PTR [ebp+0x33ca3f4a],dl
  4072ac:	ror    BYTE PTR [edi-0x72],cl
  4072af:	mov    esi,0xf3cd5598
  4072b4:	adc    eax,ebx
  4072b6:	cmp    al,0x2c
  4072b8:	jge    0x407312
  4072ba:	adc    BYTE PTR [ebp+0x1f],dh
  4072bd:	in     eax,dx
  4072be:	pop    ebx
  4072bf:	mov    al,0xd1
  4072c1:	aas    
  4072c2:	push   0x132cc8ce
  4072c7:	fiadd  WORD PTR [ebp-0x7e]
  4072ca:	cmp    BYTE PTR [edi-0x5badd6cd],bh
  4072d0:	aaa    
  4072d1:	fldenv [edi+0x1]
  4072d4:	jo     0x4072cc
  4072d6:	pop    es
  4072d7:	jg     0x407355
  4072d9:	ja     0x40726a
  4072db:	cdq    
  4072dc:	cli    
  4072dd:	jg     0x407272
  4072df:	inc    esi
  4072e0:	daa    
  4072e1:	push   ebp
  4072e2:	retf   
  4072e3:	mov    al,ds:0x41b23678
  4072e8:	(bad)  
  4072e9:	ins    BYTE PTR es:[edi],dx
  4072ea:	in     eax,0x8a
  4072ec:	bound  esp,QWORD PTR [edi+0x67]
  4072ef:	fdivr  st(7),st
  4072f1:	aad    0xc3
  4072f3:	in     al,0x37
  4072f5:	push   0xbbf94c4b
  4072fa:	cs in  al,dx
  4072fc:	mov    ch,0xd9
  4072fe:	ds aam 0xa6
  407301:	popf   
  407302:	pand   mm3,mm0
  407305:	mov    ds:0xd3e5ac2b,al
  40730a:	xchg   esi,eax
  40730b:	lods   eax,DWORD PTR ds:[esi]
  40730c:	mov    dl,0x81
  40730e:	mov    ch,0x6e
  407310:	bound  ecx,QWORD PTR [edx-0xa]
  407313:	lods   eax,DWORD PTR ds:[esi]
  407314:	or     al,0xc8
  407316:	mov    edx,0x932c43ad
  40731b:	scas   eax,DWORD PTR es:[edi]
  40731c:	mov    al,0x19
  40731e:	push   0x50
  407320:	mov    al,ds:0x6dc83eeb
  407325:	(bad)  
  407326:	shl    bl,cl
  407328:	ret    0x9403
  40732b:	or     BYTE PTR [ebp-0x48f9d32f],ah
  407331:	and    cl,BYTE PTR [edx+eiz*2+0xb]
  407335:	lods   al,BYTE PTR ds:[esi]
  407336:	cli    
  407337:	and    dh,dh
  407339:	sahf   
  40733a:	adc    bl,bl
  40733c:	das    
  40733d:	out    0x50,eax
  40733f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407340:	fld    TBYTE PTR [esi]
  407342:	ss sub al,0x3e
  407345:	add    ah,dl
  407347:	enter  0xeee9,0x8e
  40734b:	out    0x2a,al
  40734d:	sar    DWORD PTR [eax-0x13],cl
  407350:	dec    esi
  407351:	cli    
  407352:	mov    al,0x75
  407354:	in     eax,dx
  407355:	nop
  407356:	lods   al,BYTE PTR ds:[esi]
  407357:	sbb    DWORD PTR [ebp+0x3364da1a],0xb7b8f812
  407361:	jno    0x40738b
  407363:	mov    bl,0xba
  407365:	inc    ebx
  407366:	out    0x96,eax
  407368:	daa    
  407369:	adc    dh,BYTE PTR [ebx-0x42]
  40736c:	pusha  
  40736d:	cmp    eax,0x20f455d2
  407372:	adc    al,0x57
  407374:	inc    eax
  407375:	test   eax,0x94caa5c2
  40737a:	xchg   ecx,eax
  40737b:	neg    DWORD PTR [edx]
  40737d:	aaa    
  40737e:	dec    edi
  40737f:	xor    DWORD PTR [ebp+0x2631acab],edx
  407385:	stos   DWORD PTR es:[edi],eax
  407386:	repz cmp DWORD PTR [edx],ebp
  407389:	mov    eax,ds:0xc040d863
  40738e:	inc    edi
  40738f:	sbb    ecx,DWORD PTR [ebp+edi*1+0x4]
  407393:	jg     0x407342
  407395:	mov    ds:0x6cfd6ec7,eax
  40739a:	dec    esi
  40739b:	inc    edx
  40739c:	data16 add dl,BYTE PTR [ecx+0x2f]
  4073a0:	push   edx
  4073a1:	ds xor bh,bl
  4073a4:	pop    edi
  4073a5:	pop    ds
  4073a6:	adc    eax,0x181ca391
  4073ab:	mov    ds:0xd9e61767,al
  4073b0:	loope  0x4073a3
  4073b2:	and    eax,0x1a13b4b5
  4073b7:	and    ebx,DWORD PTR ds:0x478c157a
  4073bd:	sbb    DWORD PTR [eax-0x421b1b4f],eax
  4073c3:	ret    0xb28b
  4073c6:	ret    0xa28
  4073c9:	mov    ah,0x43
  4073cb:	jo     0x40740d
  4073cd:	or     eax,0x4b3d29e8
  4073d2:	or     eax,0x7d8ca94c
  4073d7:	pop    es
  4073d8:	out    0x9b,al
  4073da:	fimul  DWORD PTR [edi-0x494586c5]
  4073e0:	mov    eax,0xeaa55d04
  4073e5:	or     edi,DWORD PTR [esi-0x5f]
  4073e8:	sbb    edi,esp
  4073ea:	scas   eax,DWORD PTR es:[edi]
  4073eb:	jg     0x4073de
  4073ed:	mov    esp,0x2995c366
  4073f2:	pop    ebp
  4073f3:	or     eax,0x72e76bef
  4073f8:	xor    ch,BYTE PTR [eax+0x20a8452e]
  4073fe:	mov    cl,0x7a
  407400:	dec    edx
  407401:	gs xchg edx,eax
  407403:	aas    
  407404:	cmp    DWORD PTR [ecx+0x523b8e3f],ecx
  40740a:	pop    esi
  40740b:	mov    ebp,0x976949ac
  407410:	out    0x2b,al
  407412:	xchg   ebp,eax
  407413:	inc    esi
  407414:	mov    eax,ds:0x89949d68
  407419:	add    esp,DWORD PTR [ebx+0xa]
  40741c:	pop    esi
  40741d:	das    
  40741e:	call   0xa301120d
  407423:	out    0x7e,al
  407425:	jnp    0x40744c
  407427:	xlat   BYTE PTR ds:[ebx]
  407428:	repz cmp eax,0x30104913
  40742e:	push   edi
  40742f:	adc    eax,0x929ae9fd
  407434:	jne    0x40743d
  407436:	jno    0x40745a
  407438:	fs pop eax
  40743a:	push   eax
  40743b:	out    0x27,eax
  40743d:	inc    edx
  40743e:	lea    esi,[edi]
  407440:	test   ecx,esp
  407442:	xchg   ecx,eax
  407443:	adc    BYTE PTR [edi+ebx*8],0xa9
  407447:	aad    0x1
  407449:	dec    ecx
  40744a:	js     0x40745f
  40744c:	mov    al,bh
  40744e:	cmp    al,0xb7
  407450:	add    al,0x9e
  407452:	(bad)  
  407453:	frstor [ecx+edi*4]
  407456:	aas    
  407457:	xor    eax,0xdf9a9d74
  40745c:	pop    edx
  40745d:	aad    0xbd
  40745f:	stc    
  407460:	xchg   DWORD PTR [ebp-0x4a],eax
  407463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407464:	dec    eax
  407465:	mov    ebx,0x5d3e3a0e
  40746a:	mov    cl,0xe2
  40746c:	sbb    al,0xeb
  40746e:	xchg   esi,eax
  40746f:	sti    
  407470:	ror    esp,1
  407472:	(bad)  
  407473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407474:	imul   ecx,DWORD PTR [ecx-0x16],0xe020606a
  40747b:	stc    
  40747c:	or     ecx,ebx
  40747e:	or     DWORD PTR [edx-0x27],eax
  407481:	inc    ebx
  407482:	dec    esi
  407483:	xchg   ebp,eax
  407484:	frstor [ebx-0x196b1cd6]
  40748a:	not    BYTE PTR [ebp-0x1d6d36a5]
  407490:	scas   eax,DWORD PTR es:[edi]
  407491:	lea    ebx,[ebx+0x71]
  407494:	stos   BYTE PTR es:[edi],al
  407495:	sbb    edx,ecx
  407497:	dec    esi
  407498:	jg     0x407464
  40749a:	cmp    dl,0x4e
  40749d:	jp     0x4074ff
  40749f:	mov    ebx,eax
  4074a1:	(bad)  
  4074a2:	cmp    BYTE PTR [edi+0x3d6f4d6e],bl
  4074a8:	cld    
  4074a9:	out    0x40,al
  4074ab:	in     eax,dx
  4074ac:	ret    
  4074ad:	into   
  4074ae:	(bad)  
  4074af:	adc    DWORD PTR [ecx+0xb],esp
  4074b2:	cmc    
  4074b3:	aas    
  4074b4:	call   0xe75f:0xa773b18d
  4074bb:	jnp    0x407535
  4074bd:	ret    
  4074be:	pop    edx
  4074bf:	jb     0x4074a0
  4074c1:	(bad)  
  4074c2:	mov    ebx,0x5d7ca148
  4074c7:	pushf  
  4074c8:	push   ebx
  4074c9:	call   0xf6ea:0x8a118670
  4074d0:	mov    esi,0x5d328d4
  4074d5:	push   esp
  4074d6:	ins    BYTE PTR es:[edi],dx
  4074d7:	pop    ecx
  4074d8:	fldcw  WORD PTR [esi]
  4074da:	lods   eax,DWORD PTR ds:[esi]
  4074db:	jl     0x4074b2
  4074dd:	ficomp WORD PTR [ebx+0x501f42d7]
  4074e3:	jecxz  0x407468
  4074e5:	ret    
  4074e6:	sub    esp,DWORD PTR [ebx+0x75]
  4074e9:	mov    al,0xa3
  4074eb:	hlt    
  4074ec:	lods   eax,DWORD PTR ds:[esi]
  4074ed:	push   edi
  4074ee:	loopne 0x40752d
  4074f0:	sbb    ebx,DWORD PTR [edx+0x325c5668]
  4074f6:	outs   dx,DWORD PTR ds:[esi]
  4074f7:	in     eax,0x7e
  4074f9:	xor    eax,DWORD PTR [edx]
  4074fb:	int    0x15
  4074fd:	cmp    ecx,DWORD PTR [edi+0x1fa76ba7]
  407503:	add    ebp,DWORD PTR [eax-0x29]
  407506:	(bad)  
  407507:	push   ebp
  407508:	mov    ah,0xcb
  40750a:	xor    eax,0xccdb6d21
  40750f:	(bad)  
  407511:	hlt    
  407512:	adc    al,cl
  407514:	xchg   esi,eax
  407515:	int    0x9
  407517:	cs (bad) 
  407519:	fcom   QWORD PTR [eax+0x18]
  40751c:	inc    eax
  40751d:	ins    DWORD PTR es:[edi],dx
  40751e:	cwde   
  40751f:	cmp    eax,0x72fc8c5a
  407524:	test   BYTE PTR [edi+0x6c8e586c],ch
  40752a:	inc    eax
  40752b:	xor    eax,0xb41a1fff
  407530:	mov    WORD PTR [edx-0x488b341a],es
  407536:	mov    BYTE PTR [edx],bh
  407538:	loop   0x40755b
  40753a:	pop    eax
  40753b:	xor    eax,0x605fb136
  407540:	clc    
  407541:	sbb    eax,0xdfa4fbb7
  407546:	je     0x407507
  407548:	sub    eax,DWORD PTR [edi]
  40754a:	repz in al,dx
  40754c:	mov    ebx,DWORD PTR [ebp+0x9]
  40754f:	mov    esp,0xfd46e990
  407554:	ds xchg edi,eax
  407556:	loope  0x4074f5
  407558:	adc    eax,0x83e0426
  40755d:	popf   
  40755e:	pop    ss
  40755f:	xor    edx,esi
  407561:	jae    0x4074e9
  407563:	cs and eax,0x4874d932
  407569:	inc    edi
  40756a:	inc    eax
  40756b:	xchg   ecx,eax
  40756c:	daa    
  40756d:	mov    bl,0xf9
  40756f:	cmp    eax,0x5addb4a8
  407574:	push   ds
  407575:	cmp    al,al
  407577:	sbb    esi,DWORD PTR [ecx-0x5b]
  40757a:	mov    ebp,0x8e756b26
  40757f:	mov    al,0x8e
  407581:	inc    ebx
  407582:	mov    bh,0xee
  407584:	jae    0x407584
  407586:	sub    ch,dl
  407588:	jbe    0x40754d
  40758a:	rcl    ah,0x81
  40758d:	lds    ebx,FWORD PTR [ebx+ebp*4]
  407590:	pop    eax
  407591:	add    ecx,DWORD PTR [eax]
  407593:	xchg   esp,eax
  407594:	shl    BYTE PTR [ebx-0x29a22fba],0xc8
  40759b:	call   0xe4e27e89
  4075a0:	dec    esp
  4075a1:	xchg   esp,eax
  4075a2:	jl     0x407545
  4075a4:	js     0x407572
  4075a6:	push   ds
  4075a7:	mov    al,0x4c
  4075a9:	sbb    BYTE PTR [edx-0x38],cl
  4075ac:	and    eax,0x476ee38b
  4075b1:	push   ebx
  4075b2:	retf   0x847d
  4075b5:	mov    bl,0x43
  4075b7:	jns    0x4075c2
  4075b9:	pop    esi
  4075ba:	retf   0xbbb4
  4075bd:	and    BYTE PTR [ecx],al
  4075bf:	jl     0x4075a3
  4075c1:	mov    dl,0xb5
  4075c3:	cdq    
  4075c4:	iret   
  4075c5:	imul   esp,DWORD PTR [eax-0x27],0xffffffab
  4075c9:	test   al,0xe7
  4075cb:	jmp    0x407568
  4075cd:	xchg   esi,eax
  4075ce:	push   ds
  4075cf:	inc    ebp
  4075d0:	loopne 0x4075e0
  4075d2:	pop    ebp
  4075d3:	(bad)  
  4075d4:	sub    al,0x8c
  4075d6:	stos   DWORD PTR es:[edi],eax
  4075d7:	stos   BYTE PTR es:[edi],al
  4075d8:	loopne 0x407578
  4075da:	outs   dx,DWORD PTR ds:[esi]
  4075db:	scas   eax,DWORD PTR es:[edi]
  4075dc:	pop    edi
  4075dd:	cdq    
  4075de:	mov    ecx,0x613beace
  4075e3:	imul   eax,DWORD PTR ds:0x3f5c837a,0x6d
  4075ea:	dec    ebx
  4075eb:	xor    BYTE PTR [edi-0x6e],ah
  4075ee:	dec    ebp
  4075ef:	push   esi
  4075f0:	mov    ?,WORD PTR [ecx-0x50600f21]
  4075f6:	cmp    al,0x23
  4075f8:	int    0x53
  4075fa:	int3   
  4075fb:	add    al,0xb8
  4075fd:	scas   al,BYTE PTR es:[edi]
  4075fe:	sbb    al,0xc2
  407600:	imul   eax,DWORD PTR [edx-0x4bd06a4],0x26
  407607:	mov    cl,0x78
  407609:	dec    ebp
  40760a:	cmp    BYTE PTR [ecx],cl
  40760c:	pop    ds
  40760d:	sti    
  40760e:	xchg   ebx,eax
  40760f:	push   ebp
  407610:	inc    edi
  407611:	inc    esi
  407612:	mov    esp,DWORD PTR es:[eax-0x5efbd4ac]
  407619:	shr    DWORD PTR [esi-0x4b],1
  40761c:	push   ecx
  40761d:	and    al,0x8f
  40761f:	cmp    DWORD PTR [edi+0x67cefd9d],eax
  407625:	jne    0x407673
  407627:	std    
  407628:	mov    edx,DWORD PTR [ebx]
  40762a:	leave  
  40762b:	dec    edx
  40762d:	cmp    al,0xdb
  40762f:	pop    esi
  407630:	or     esi,DWORD PTR [ebx]
  407632:	sahf   
  407633:	dec    edi
  407634:	mov    ebp,0x36c6a330
  407639:	adc    eax,0x87af39fe
  40763e:	inc    eax
  40763f:	mov    al,BYTE PTR [eax]
  407641:	inc    ebp
  407642:	mov    esi,eax
  407644:	mov    cl,0x2d
  407646:	(bad)  
  407647:	repnz and al,0x2a
  40764a:	mov    esi,DWORD PTR [ebx+esi*4+0x52]
  40764e:	fdiv   QWORD PTR [ecx-0x3]
  407651:	or     DWORD PTR [esi],ebp
  407653:	loopne 0x4075e8
  407655:	cli    
  407656:	sub    DWORD PTR [edx-0x49b5bc43],0x53df5518
  407660:	(bad)  
  407661:	push   esi
  407662:	mov    DWORD PTR [edi-0x74992f4f],edx
  407668:	out    dx,al
  407669:	not    BYTE PTR [esi]
  40766b:	push   ss
  40766c:	repnz or cl,dh
  40766f:	cmp    eax,0xc6c7efa2
  407674:	dec    ebx
  407675:	mov    ecx,0x29d10f10
  40767a:	popf   
  40767b:	inc    edx
  40767c:	hlt    
  40767d:	xor    BYTE PTR [edi-0x1e],0xa4
  407681:	mov    bl,0x28
  407683:	jns    0x407605
  407685:	lea    ebp,[edi]
  407687:	retf   
  407688:	stos   BYTE PTR es:[edi],al
  407689:	mov    al,0x25
  40768b:	sub    DWORD PTR [esp+esi*4+0x702c71c4],0x5f
  407693:	sub    BYTE PTR [ebp-0x16305971],0xa3
  40769a:	fldcw  WORD PTR [edx+ecx*8+0x23c1e83f]
  4076a1:	sbb    DWORD PTR [eax+ebp*4-0x290f4d00],0x22
  4076a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076aa:	xlat   BYTE PTR ds:[ebx]
  4076ab:	mov    eax,ds:0x79a49b5b
  4076b0:	adc    esp,DWORD PTR ds:0x28f5a106
  4076b6:	mov    eax,ds:0xe99981ce
  4076bb:	fadd   DWORD PTR [edi-0x711f791]
  4076c1:	inc    edi
  4076c2:	jmp    0x7f8d:0xe4fad9fe
  4076c9:	push   ebp
  4076ca:	xchg   edi,eax
  4076cb:	jnp    0x407690
  4076cd:	jl     0x407708
  4076cf:	sar    BYTE PTR [edx-0x4717d1da],cl
  4076d5:	add    al,0x3a
  4076d7:	arpl   WORD PTR [edi+0x2b],di
  4076da:	mov    ecx,0x2c7a77ec
  4076df:	out    dx,al
  4076e0:	loop   0x407722
  4076e2:	pop    ss
  4076e3:	in     eax,0x41
  4076e5:	mov    ebp,0x2f07913a
  4076ea:	inc    edi
  4076eb:	dec    esp
  4076ec:	jg     0x407672
  4076ee:	mov    edi,0x2d78f30c
  4076f4:	daa    
  4076f5:	mov    BYTE PTR [ebp-0x73],bh
  4076f8:	sbb    DWORD PTR [ebx],eax
  4076fa:	es push edx
  4076fc:	ds mov bh,0xc3
  4076ff:	mov    bl,0xe0
  407701:	rcl    DWORD PTR [ecx],cl
  407703:	sub    ch,BYTE PTR [esi-0x35]
  407706:	adc    BYTE PTR [eax-0x17],bl
  407709:	xchg   esi,eax
  40770a:	test   DWORD PTR [ebp-0x71],ebx
  40770d:	mov    ecx,DWORD PTR [esi]
  40770f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407710:	stc    
  407711:	xchg   edi,eax
  407712:	adc    ebx,ebp
  407714:	cmc    
  407715:	nop
  407716:	inc    edx
  407717:	(bad)  
  407718:	xor    eax,0x8d68b5a6
  40771d:	in     al,dx
  40771e:	in     eax,dx
  40771f:	xchg   BYTE PTR ds:0x6d99af3a,al
  407725:	xor    BYTE PTR [edi+0x3338179b],0xea
  40772c:	fdivp  st(2),st
  40772e:	mov    ecx,0x96d1e2f0
  407733:	cmp    DWORD PTR [esi-0x60],0x5f2aaeb5
  40773a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40773b:	std    
  40773c:	and    bl,BYTE PTR [ebx-0x2ef9975d]
  407742:	mov    al,ds:0x5b8c88c8
  407747:	add    al,0xed
  407749:	xor    al,bl
  40774b:	ss (bad) 
  40774d:	icebp  
  40774e:	sub    al,0x76
  407750:	imul   edi,eax,0x36996977
  407756:	add    BYTE PTR [edi-0x6fa67147],bh
  40775c:	loope  0x4077c2
  40775e:	push   ds
  40775f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407761:	js     0x40773b
  407763:	push   ecx
  407764:	stos   DWORD PTR es:[edi],eax
  407765:	es mov ebx,0xe964e465
  40776b:	jne    0x407744
  40776d:	and    DWORD PTR [eax],ebx
  40776f:	jmp    FWORD PTR [edi+ecx*2]
  407772:	outs   dx,DWORD PTR ds:[esi]
  407773:	push   es
  407774:	add    edx,DWORD PTR [edi]
  407776:	dec    edx
  407777:	es call 0xe52f287
  40777d:	imul   ecx,esp,0x59
  407780:	mov    al,ds:0xfab5447
  407785:	enter  0x2479,0x52
  407789:	pop    esp
  40778a:	call   0x56f2c9df
  40778f:	sbb    eax,0x99081b55
  407794:	jns    0x407802
  407796:	mov    ds:0x110c3900,eax
  40779b:	(bad)  
  40779c:	imul   eax,DWORD PTR [ecx],0x67
  40779f:	xor    bl,BYTE PTR ds:0xdcfeafa0
  4077a5:	outs   dx,DWORD PTR ds:[esi]
  4077a6:	es stos BYTE PTR es:[edi],al
  4077a8:	aas    
  4077a9:	dec    ebx
  4077aa:	int    0x58
  4077ac:	sub    eax,0xf59c311f
  4077b1:	lea    ebp,[edi+0x67]
  4077b4:	repz mov esi,0x3994df55
  4077ba:	mov    dh,0x31
  4077bc:	mov    ds:0x7ba8a6b2,eax
  4077c1:	inc    esp
  4077c2:	rol    DWORD PTR [esi],0x6
  4077c5:	dec    ebx
  4077c6:	push   ecx
  4077c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077c8:	test   cl,al
  4077ca:	retf   
  4077cb:	xchg   edi,eax
  4077cc:	mov    al,ds:0x28642b21
  4077d1:	out    dx,al
  4077d2:	inc    edx
  4077d3:	pop    eax
  4077d4:	pop    es
  4077d5:	cmc    
  4077d6:	lods   eax,DWORD PTR ds:[esi]
  4077d7:	xchg   esp,eax
  4077d8:	icebp  
  4077d9:	mov    ds:0x1dee49d1,eax
  4077de:	sti    
  4077df:	mov    cl,0xe9
  4077e1:	mov    ch,BYTE PTR [esi]
  4077e3:	addr16 mov bl,0x5e
  4077e6:	or     BYTE PTR [ebp+0x7726c05e],ch
  4077ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ed:	mov    esp,0x526ecbc8
  4077f2:	sbb    ax,0x32ea
  4077f6:	mov    eax,0x727e0938
  4077fb:	push   ebx
  4077fc:	ret    
  4077fd:	jae    0x4077c4
  4077ff:	neg    DWORD PTR [edi+0x5]
  407802:	into   
  407803:	cmp    ecx,ebx
  407805:	sbb    al,0x30
  407807:	mov    ch,0x81
  407809:	add    edi,DWORD PTR ss:[esi+0x1c08fea]
  407810:	inc    edi
  407811:	inc    esp
  407812:	add    BYTE PTR [eax-0x1968f5af],cl
  407818:	push   eax
  407819:	push   ebx
  40781a:	dec    esp
  40781b:	xlat   BYTE PTR gs:[ebx]
  40781d:	or     esi,eax
  40781f:	adc    eax,0xcc79a64b
  407824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407825:	jmp    0x18d2a604
  40782a:	jne    0x407818
  40782c:	add    bh,bl
  40782e:	pop    edi
  40782f:	mov    edx,0x3c2e4b0a
  407834:	xchg   ecx,eax
  407835:	clc    
  407836:	jmp    FWORD PTR [esi]
  407838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407839:	xchg   ecx,eax
  40783a:	out    0x13,eax
  40783c:	pop    ds
  40783d:	popa   
  40783e:	push   0xb1453b0f
  407843:	imul   ecx,DWORD PTR [edx-0x6c103a14],0xffffffba
  40784a:	sub    edx,eax
  40784c:	(bad)  [eax+0x1e]
  40784f:	test   BYTE PTR [edi],0xc
  407852:	jle    0x40789a
  407854:	mov    ds:0x68cf4c05,al
  407859:	dec    esi
  40785a:	sahf   
  40785b:	fist   WORD PTR [ebp+0x7c]
  40785e:	daa    
  40785f:	mov    ebp,0xaf806ea3
  407864:	into   
  407865:	mov    ch,0x5d
  407867:	push   edx
  407868:	lock pushf 
  40786a:	outs   dx,DWORD PTR ds:[esi]
  40786b:	outs   dx,DWORD PTR ds:[esi]
  40786c:	jp     0x40789e
  40786e:	add    al,0xe6
  407870:	push   ebx
  407871:	add    bl,0x42
  407874:	mov    esi,0x539b579f
  40787a:	cmp    eax,0x69b0da88
  40787f:	mov    esi,0xb74ea380
  407884:	fs out 0xb3,al
  407887:	psubsb mm6,QWORD PTR ds:[ebx-0x2932dbb9]
  40788f:	add    edx,0x6ae73de4
  407895:	cmp    DWORD PTR [eax-0x4b8045e3],ecx
  40789b:	xor    eax,0xb7431890
  4078a0:	adc    DWORD PTR [ebp+0x8],eax
  4078a3:	shl    ebx,cl
  4078a5:	retf   
  4078a6:	mov    bh,0xca
  4078a8:	test   BYTE PTR [ecx],0x36
  4078ab:	lods   al,BYTE PTR ds:[esi]
  4078ac:	imul   esi,DWORD PTR [eax+eiz*2],0xffffffa7
  4078b0:	rcl    DWORD PTR [edx],1
  4078b2:	jmp    0xc3b0:0x24d14987
  4078b9:	jmp    FWORD PTR [ebp+0x55]
  4078bc:	cmp    al,0xb
  4078be:	imul   eax,DWORD PTR [eax-0x3e],0xd32310ff
  4078c5:	xchg   esp,eax
  4078c6:	push   cs
  4078c7:	pop    ecx
  4078c8:	cmp    BYTE PTR ds:0x4f11,cl
  4078cd:	out    0xd3,eax
  4078cf:	pop    ss
  4078d0:	jl     0x4078ef
  4078d2:	dec    ecx
  4078d3:	or     eax,0xf9a882af
  4078d8:	out    0x5f,al
  4078da:	mov    dh,0xa5
  4078dc:	dec    ebx
  4078dd:	xor    DWORD PTR [esi+0x28],edx
  4078e0:	test   BYTE PTR [esi+0x26ebfeea],dh
  4078e6:	jmp    0xe8412b10
  4078eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078ec:	dec    edx
  4078ed:	int3   
  4078ee:	mov    dh,0x97
  4078f0:	daa    
  4078f1:	fistp  QWORD PTR [ecx-0x6b]
  4078f4:	fcom   QWORD PTR [ebx+0x17f33b54]
  4078fa:	mov    esi,0x842fbe1a
  4078ff:	imul   BYTE PTR [edx-0x5cdb215f]
  407905:	and    ah,BYTE PTR [edx]
  407907:	adc    DWORD PTR ds:0x16d39033,ebp
  40790d:	(bad)  
  40790e:	jmp    0xfb21ee5c
  407913:	pop    edx
  407914:	mov    al,ds:0xe8e7d38e
  407919:	push   ss
  40791a:	xchg   BYTE PTR [edx],dh
  40791c:	(bad)  
  40791d:	(bad)  
  40791e:	adc    eax,0xf2a8d6dd
  407923:	inc    ebp
  407924:	mov    ch,0xac
  407926:	push   edx
  407927:	push   es
  407928:	test   DWORD PTR [ebp+0x64],eax
  40792b:	and    al,0x89
  40792d:	sub    DWORD PTR ds:0x7edf7701,ebp
  407933:	add    DWORD PTR [ebp-0x53e44342],ecx
  407939:	call   0x5eb4:0x90a47d78
  407940:	bound  esp,QWORD PTR [ecx+edx*8+0x0]
  407944:	popf   
  407945:	sub    DWORD PTR [esi],0xc
  407948:	or     BYTE PTR [eax-0x12f13804],0xda
  40794f:	xor    esi,edx
  407951:	repz sub eax,0xf8729885
  407957:	js     0x4078f0
  407959:	mov    ds:0x616c3a44,eax
  40795e:	push   ebp
  40795f:	das    
  407960:	mov    al,0x2
  407962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407963:	sar    esi,0xf3
  407966:	pop    ebx
  407967:	and    al,0xe3
  407969:	cmp    BYTE PTR [ebp+0x5a],al
  40796c:	and    esi,DWORD PTR [edi-0xc45b132]
  407972:	and    edi,edi
  407974:	push   eax
  407975:	push   esp
  407976:	pushf  
  407977:	ds ds mov edx,0x49d075a4
  40797e:	shl    DWORD PTR [eax],cl
  407980:	xchg   ebp,eax
  407981:	inc    eax
  407982:	inc    edx
  407983:	mov    esp,0xf4124e34
  407988:	sahf   
  407989:	add    BYTE PTR [esi+0x22],dh
  40798c:	inc    ecx
  40798d:	jmp    0x40790f
  40798f:	mov    ds,WORD PTR [eax+eiz*2]
  407992:	sub    ch,BYTE PTR [eax-0x7a942258]
  407998:	cmp    ah,BYTE PTR [ebp-0x19cea9eb]
  40799e:	xchg   ecx,eax
  40799f:	push   edi
  4079a0:	loopne 0x40795f
  4079a2:	xchg   ecx,eax
  4079a3:	fnstenv [eax]
  4079a5:	sbb    bh,dh
  4079a7:	cmp    al,0x64
  4079a9:	xchg   ebp,eax
  4079aa:	js     0x4079a3
  4079ac:	mov    dh,0xbc
  4079ae:	call   0x8eac:0x6751b465
  4079b5:	add    BYTE PTR [ebp+ecx*4-0x7c],dh
  4079b9:	(bad)  
  4079ba:	push   ds
  4079bb:	and    edi,DWORD PTR [eax]
  4079bd:	fwait
  4079be:	out    0xa3,al
  4079c0:	ja     0x407a36
  4079c2:	mov    ds:0xecf069cb,eax
  4079c7:	mov    ah,0xeb
  4079c9:	fild   DWORD PTR [esi+0x46341a2c]
  4079cf:	xchg   esp,eax
  4079d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079d1:	out    dx,eax
  4079d2:	inc    esi
  4079d3:	je     0x4079c0
  4079d5:	xor    BYTE PTR [esi+ecx*1],0x4a
  4079d9:	dec    BYTE PTR [esi-0x4c296236]
  4079df:	stos   DWORD PTR es:[edi],eax
  4079e0:	xchg   esp,eax
  4079e1:	jl     0x40798d
  4079e3:	adc    DWORD PTR [edi-0x6a7155b1],0x4d3dafc8
  4079ed:	fisttp DWORD PTR [ebx+0x61243466]
  4079f3:	bound  edx,QWORD PTR [ebx]
  4079f5:	cld    
  4079f6:	push   ebp
  4079f7:	cmp    BYTE PTR [ecx+ecx*4],dh
  4079fa:	xor    bl,BYTE PTR [esi+0x5590384f]
  407a00:	adc    eax,0x5ded6b0b
  407a05:	sbb    eax,0x405ac2ed
  407a0a:	xchg   BYTE PTR ds:0xcdbd4786,bh
  407a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a11:	(bad)  
  407a12:	mov    DWORD PTR [edi-0x77],ebp
  407a15:	push   ds
  407a16:	jne    0x407a14
  407a18:	imul   esi,DWORD PTR [ecx-0xf],0xe3d9696
  407a1f:	fwait
  407a20:	cmp    ah,BYTE PTR [ebx+0x53e75c0]
  407a26:	push   edi
  407a27:	push   eax
  407a28:	xor    esp,DWORD PTR [ebx+0x63156f4e]
  407a2e:	cmp    esp,esp
  407a30:	gs adc eax,0xad3ddd14
  407a36:	mov    dl,0x85
  407a38:	xor    eax,0xfbff1bfb
  407a3d:	call   0x9c6c5b9a
  407a42:	or     al,BYTE PTR [edi]
  407a44:	lods   eax,DWORD PTR ds:[esi]
  407a45:	les    ebx,FWORD PTR [edx-0x6adf303e]
  407a4b:	adc    DWORD PTR [ebp+0x2adbda87],ebp
  407a51:	cmp    dh,BYTE PTR [ebx]
  407a53:	jge    0x407a5d
  407a55:	pop    ebx
  407a56:	mov    cl,BYTE PTR [ecx]
  407a58:	mov    bl,0x1c
  407a5a:	pop    ebx
  407a5b:	mov    al,ds:0x21b1dc0a
  407a60:	fisttp WORD PTR [ecx+0x7600ec93]
  407a66:	push   eax
  407a67:	rcr    BYTE PTR [eax+0x31],1
  407a6a:	aas    
  407a6b:	in     eax,dx
  407a6c:	inc    ebx
  407a6d:	mov    ecx,0xe9cd8ed5
  407a72:	fistp  DWORD PTR [edi-0x7eb00fae]
  407a78:	add    DWORD PTR [ebx+eiz*8],edi
  407a7b:	mov    al,0x2d
  407a7d:	cmp    DWORD PTR [ecx-0x7005d4db],edx
  407a83:	outs   dx,BYTE PTR ds:[esi]
  407a84:	and    BYTE PTR [ecx+eiz*1-0x1bf5654d],bl
  407a8b:	push   0xffffffff
  407a8d:	xchg   BYTE PTR [edx+0x64b1cf5d],ah
  407a93:	jmp    FWORD PTR [ebp+edx*8+0x6cae1f69]
  407a9a:	mov    edx,DWORD PTR [ecx]
  407a9c:	mov    WORD PTR [ebx+0x63c93da0],?
  407aa2:	inc    esi
  407aa3:	mov    WORD PTR [esi+ebx*1-0x2c],?
  407aa7:	je     0x407af7
  407aa9:	adc    bh,BYTE PTR [ebp+0x35476e24]
  407aaf:	dec    edx
  407ab0:	popa   
  407ab1:	(bad)  
  407ab2:	cs stc 
  407ab4:	cdq    
  407ab5:	mov    ds:0xa57837a3,al
  407aba:	ss and al,0xe0
  407abd:	push   edx
  407abe:	loopne 0x407a48
  407ac0:	pop    eax
  407ac1:	jl     0x407aa6
  407ac3:	sbb    eax,0x5e0d277c
  407ac8:	jno    0x407aa6
  407aca:	sar    DWORD PTR ds:0x729953f3,1
  407ad0:	adc    dl,dh
  407ad2:	push   edi
  407ad3:	inc    ebx
  407ad4:	mov    al,ds:0xd60288f2
  407ad9:	in     eax,dx
  407ada:	mov    dh,0x1
  407adc:	stc    
  407add:	fs into 
  407adf:	arpl   WORD PTR [ebp+0x25],sp
  407ae2:	adc    ch,BYTE PTR [eax]
  407ae4:	not    DWORD PTR [ebp+0x53]
  407ae7:	mov    ebx,0xa809c6d2
  407aec:	not    BYTE PTR [edi+0x7d724b01]
  407af2:	dec    ebp
  407af3:	cmp    eax,0xa0dea0cc
  407af8:	mov    DWORD PTR cs:[edx],edi
  407afb:	je     0x407b36
  407afd:	dec    DWORD PTR [ecx]
  407aff:	dec    eax
  407b00:	cmp    BYTE PTR [ecx+0x5b],0x44
  407b04:	out    0xec,al
  407b06:	ins    DWORD PTR es:[edi],dx
  407b07:	mov    ds:0x2fb7a8d0,eax
  407b0c:	push   ds
  407b0d:	mul    DWORD PTR [ebp+0x9]
  407b10:	out    dx,al
  407b11:	add    cl,BYTE PTR [edx+edi*4-0x26]
  407b15:	jae    0x407adc
  407b17:	(bad)  
  407b18:	vmread DWORD PTR [ebx],esi
  407b1b:	pop    es
  407b1c:	outs   dx,BYTE PTR ds:[esi]
  407b1d:	js     0x407acb
  407b1f:	aas    
  407b20:	and    BYTE PTR [ebx+0x62],al
  407b23:	cmp    eax,0x990256ee
  407b28:	push   eax
  407b29:	ret    
  407b2a:	add    ah,dl
  407b2c:	lds    edx,FWORD PTR [ebp+0x53a4c332]
  407b32:	mov    ds:0x6d1bbe02,al
  407b37:	(bad)  
  407b38:	stos   BYTE PTR es:[edi],al
  407b39:	cs jo  0x407b2e
  407b3c:	jl     0x407af3
  407b3e:	pop    ebx
  407b3f:	mov    BYTE PTR [edx],al
  407b41:	cli    
  407b42:	or     edi,eax
  407b44:	inc    ebx
  407b45:	fstp   TBYTE PTR [ebx]
  407b47:	and    al,BYTE PTR [ebx-0x1e]
  407b4a:	mov    ch,BYTE PTR [edi+ebx*4-0x17]
  407b4e:	pop    ebp
  407b4f:	sbb    eax,0x35413831
  407b54:	and    al,0x7d
  407b56:	pop    esi
  407b57:	inc    ebp
  407b58:	fild   QWORD PTR [eax+ecx*1+0x724efb67]
  407b5f:	mov    dh,0x4b
  407b61:	fsubr  QWORD PTR [ecx]
  407b63:	js     0x407b63
  407b65:	mov    DWORD PTR [edi-0x64a43abe],ebp
  407b6b:	push   ds
  407b6c:	jmp    0xeb2e:0x7f27846
  407b73:	or     al,0x84
  407b75:	cmp    al,cl
  407b77:	enter  0xfe9f,0x19
  407b7b:	pop    ecx
  407b7c:	inc    eax
  407b7d:	or     eax,0xcbb6f884
  407b82:	adc    DWORD PTR [ecx+0x2d],edx
  407b85:	aam    0xc
  407b87:	mov    dh,BYTE PTR [edi-0x59ff12e5]
  407b8d:	mov    dh,0xb9
  407b8f:	pop    es
  407b90:	pop    es
  407b91:	pop    ss
  407b92:	lds    ebx,FWORD PTR [eax-0x7c896d38]
  407b98:	push   0xf5499729
  407b9d:	cdq    
  407b9e:	fnstcw WORD PTR [eax-0xc]
  407ba1:	xchg   ebp,eax
  407ba2:	xchg   ecx,eax
  407ba3:	das    
  407ba4:	ret    
  407ba5:	aam    0x64
  407ba7:	jbe    0x407bf0
  407ba9:	lods   eax,DWORD PTR ds:[esi]
  407baa:	dec    ebp
  407bab:	cwde   
  407bac:	pop    esi
  407bad:	mov    dh,0x77
  407baf:	(bad)  
  407bb0:	push   edx
  407bb1:	(bad)  
  407bb2:	inc    ebp
  407bb3:	mov    DWORD PTR [ecx+0x5],eax
  407bb6:	hlt    
  407bb7:	xchg   ebp,eax
  407bb8:	ret    0xb5fe
  407bbb:	mov    bl,0x9f
  407bbd:	mov    al,0x50
  407bbf:	inc    edi
  407bc0:	mov    gs,esi
  407bc2:	push   ebx
  407bc3:	xor    eax,0xc5444003
  407bc8:	cmp    al,0x11
  407bca:	jle    0x407bf2
  407bcc:	rol    DWORD PTR [ecx-0x7e6ad917],cl
  407bd2:	cmp    eax,0x58574933
  407bd7:	cmp    DWORD PTR [ebx-0x385cbfcf],esp
  407bdd:	push   edi
  407bde:	gs pop ss
  407be0:	mov    al,BYTE PTR [esi]
  407be2:	inc    edx
  407be3:	test   BYTE PTR [edi-0x66],bl
  407be6:	and    BYTE PTR [ebx+0x7036d3dc],bh
  407bec:	push   es
  407bed:	jl     0x407b81
  407bef:	adc    BYTE PTR [edi],0x3d
  407bf2:	fdivr  QWORD PTR [edx]
  407bf4:	fdivr  QWORD PTR [ecx-0x3e]
  407bf7:	ret    
  407bf8:	je     0x407bc0
  407bfa:	inc    ebx
  407bfb:	cmp    eax,0xc28a93e
  407c00:	cs (bad) 
  407c02:	sub    esi,DWORD PTR [eax+0x64]
  407c05:	arpl   WORD PTR [ecx-0x3],cx
  407c08:	mov    bl,0x99
  407c0a:	fisubr WORD PTR [esi-0x55]
  407c0d:	outs   dx,DWORD PTR ds:[esi]
  407c0e:	mov    esp,0x20ea11f4
  407c13:	jp     0x407beb
  407c15:	adc    edx,DWORD PTR [edi-0x512efb4e]
  407c1b:	jmp    0x407c30
  407c1d:	in     eax,0x2b
  407c1f:	scas   al,BYTE PTR es:[edi]
  407c20:	jl     0x407bd9
  407c22:	cmc    
  407c23:	aam    0xc8
  407c25:	sbb    bh,BYTE PTR [edi]
  407c27:	xor    eax,0xb460df77
  407c2c:	or     eax,0x584b7af2
  407c31:	xor    BYTE PTR [ebx-0x45ca1abc],dh
  407c37:	leave  
  407c38:	shufps xmm2,XMMWORD PTR ds:0xa301761c,0x3e
  407c40:	pop    ebx
  407c41:	bound  esi,QWORD PTR [ebx-0x691b2834]
  407c47:	mov    al,ds:0x73b5419a
  407c4c:	int3   
  407c4d:	mov    bh,0xca
  407c4f:	and    eax,0x67ac7b9f
  407c54:	fsubr  DWORD PTR [eax+0x17]
  407c57:	xor    ch,al
  407c59:	sahf   
  407c5a:	inc    eax
  407c5b:	lea    ecx,[edx+edx*2-0x69]
  407c5f:	outs   dx,BYTE PTR ds:[esi]
  407c60:	sbb    al,0x6d
  407c62:	icebp  
  407c63:	xchg   ebx,eax
  407c65:	pop    edi
  407c66:	push   es
  407c67:	xor    ebx,0xa78d9e8f
  407c6d:	pop    es
  407c6e:	loop   0x407cb9
  407c70:	inc    DWORD PTR [edx]
  407c72:	fimul  WORD PTR [esi]
  407c74:	and    eax,0xfcbb6644
  407c79:	sub    al,0xbb
  407c7b:	jge    0x407c01
  407c7d:	in     eax,dx
  407c7e:	std    
  407c7f:	fs stos BYTE PTR es:[edi],al
  407c81:	aaa    
  407c82:	sti    
  407c83:	std    
  407c84:	sub    al,BYTE PTR [esi+0x57661105]
  407c8a:	adc    eax,0xe55133d3
  407c8f:	xchg   DWORD PTR [eax+0x6538fa73],esi
  407c95:	mov    BYTE PTR [eax],al
  407c97:	jo     0x407ccb
  407c99:	dec    edx
  407c9a:	in     al,0x75
  407c9c:	sub    DWORD PTR [bp+si],esp
  407c9f:	cmp    BYTE PTR ds:0x8c4b923a,dh
  407ca5:	cmp    al,BYTE PTR [ecx+eiz*2]
  407ca8:	iret   
  407ca9:	aad    0xa6
  407cab:	and    al,0xd5
  407cad:	aaa    
  407cae:	or     BYTE PTR [ebp-0x5d],0x8d
  407cb2:	cmp    DWORD PTR [edx+0x73ecf982],esp
  407cb8:	xor    dl,BYTE PTR [edx-0x35e6d69a]
  407cbe:	test   al,0xb9
  407cc0:	push   0x8524349e
  407cc5:	jno    0x407c96
  407cc7:	xchg   esi,eax
  407cc8:	fst    QWORD PTR [ebx-0x27a3af09]
  407cce:	(bad)
  407cd1:	shl    DWORD PTR [ecx+0x2a],1
  407cd4:	xchg   edi,eax
  407cd5:	cdq    
  407cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cd7:	mov    ds:0xe68b33d8,eax
  407cdc:	sub    al,0x33
  407cde:	mov    al,0xe
  407ce0:	xor    bl,al
  407ce2:	cmp    BYTE PTR [edi-0x5e38f587],dh
  407ce8:	fadd   DWORD PTR ds:0x8cd9f237
  407cee:	inc    ecx
  407cef:	or     eax,0x3f5df092
  407cf4:	adc    eax,0xb24b38aa
  407cf9:	or     ebx,ecx
  407cfb:	or     al,0xaf
  407cfd:	fmul   QWORD PTR [ecx-0x33c9558]
  407d03:	pop    es
  407d04:	popa   
  407d05:	adc    BYTE PTR [ebx],0xbe
  407d08:	mov    ebp,0x7f55399b
  407d0d:	push   eax
  407d0e:	pop    ebx
  407d0f:	inc    eax
  407d10:	retf   0x354b
  407d13:	adc    edi,0x112eebfe
  407d19:	dec    ebp
  407d1a:	mov    edx,0x74dcc59a
  407d1f:	(bad)  
  407d20:	loope  0x407d0e
  407d22:	(bad)  
  407d23:	pop    ebp
  407d24:	jecxz  0x407d9d
  407d26:	push   ebp
  407d27:	mov    ecx,esp
  407d29:	jae    0x407d8d
  407d2b:	mov    es,WORD PTR [ebp-0x2ce310e8]
  407d31:	bound  esi,QWORD PTR [ebp+0x2ea17147]
  407d37:	sbb    esi,edx
  407d39:	sub    eax,0xa002683f
  407d3e:	mov    ch,0x1e
  407d40:	int    0x80
  407d42:	verr   di
  407d45:	add    eax,0x4086dbe1
  407d4a:	imul   eax,DWORD PTR [esi],0x9b24b9ef
  407d50:	mov    ebp,0xc4815941
  407d55:	clc    
  407d56:	(bad)  
  407d57:	enter  0x6f7d,0xf2
  407d5b:	and    bl,bh
  407d5d:	test   al,0x42
  407d5f:	pop    ds
  407d60:	xor    eax,0xf45a047c
  407d65:	scas   al,BYTE PTR es:[edi]
  407d66:	js     0x407d5e
  407d68:	xchg   ebx,eax
  407d69:	adc    eax,0x7dd5589
  407d6e:	and    eax,0x20dfa1c7
  407d73:	stc    
  407d74:	cdq    
  407d75:	cwde   
  407d76:	mov    al,ds:0x7b1ef265
  407d7b:	inc    esi
  407d7c:	ins    BYTE PTR es:[edi],dx
  407d7d:	xchg   ebx,eax
  407d7e:	jae    0x407d32
  407d80:	push   eax
  407d81:	xchg   BYTE PTR [ecx+0x399d0f90],dl
  407d87:	and    eax,0x7bf6e34d
  407d8c:	aas    
  407d8d:	or     ah,cl
  407d8f:	push   0x201cec5f
  407d94:	and    esp,DWORD PTR [ebp+0x57f02cd]
  407d9a:	(bad)  
  407d9b:	call   0x6a264b67
  407da0:	inc    ebx
  407da1:	xor    edi,ebp
  407da3:	sub    esp,esi
  407da5:	sahf   
  407da6:	push   ebp
  407da7:	ja     0x407d2b
  407da9:	daa    
  407daa:	mov    bh,0x2f
  407dac:	loop   0x407d8a
  407dae:	jae    0x407d33
  407db0:	sub    BYTE PTR [esi+0x37],bh
  407db3:	cli    
  407db4:	movlps xmm3,QWORD PTR [eax-0x59]
  407db8:	adc    al,BYTE PTR [esi+0x2f]
  407dbb:	ret    0xb321
  407dbe:	stc    
  407dbf:	jg     0x407e34
  407dc1:	and    al,0x63
  407dc3:	je     0x407e37
  407dc5:	inc    eax
  407dc6:	adc    eax,0xd4ef6707
  407dcb:	cmp    BYTE PTR [ecx],0xe1
  407dce:	xor    edi,DWORD PTR [esi-0x7ddcb5d1]
  407dd4:	pop    eax
  407dd5:	out    0xa4,eax
  407dd7:	ret    
  407dd8:	sbb    eax,0xd469b751
  407ddd:	mov    bh,0x13
  407ddf:	fs jp  0x407db8
  407de2:	(bad)  
  407de3:	cli    
  407de4:	aad    0xb0
  407de6:	pushf  
  407de7:	data16 cmp al,0xb4
  407dea:	inc    eax
  407deb:	pusha  
  407dec:	psllq  mm5,QWORD PTR [edi]
  407def:	push   es
  407df0:	rcr    DWORD PTR [ecx],0x7
  407df3:	scas   eax,DWORD PTR es:[edi]
  407df4:	push   0xffffffc9
  407df6:	add    DWORD PTR ds:0xa0452f97,0xffffffd2
  407dfd:	data16 jae 0x407e3b
  407e00:	fcomp  DWORD PTR [ecx+0x6a]
  407e03:	cmc    
  407e04:	out    dx,eax
  407e05:	fcmovnu st,st(7)
  407e07:	dec    esp
  407e08:	stc    
  407e09:	or     DWORD PTR [edi-0x2],edx
  407e0c:	and    al,0x1a
  407e0e:	pop    ds
  407e0f:	icebp  
  407e10:	shr    BYTE PTR [edx+ebx*1-0x22c0a975],cl
  407e17:	ror    esi,1
  407e19:	add    ax,0x78be
  407e1d:	cmp    DWORD PTR [ecx+0x73],edx
  407e20:	ins    BYTE PTR es:[edi],dx
  407e21:	inc    ebp
  407e22:	jge    0x407e8c
  407e24:	cmp    ebx,DWORD PTR [eax+ebp*4+0x27]
  407e28:	ins    DWORD PTR es:[edi],dx
  407e29:	push   esp
  407e2a:	xchg   edi,eax
  407e2b:	xchg   esp,eax
  407e2c:	sti    
  407e2d:	fist   DWORD PTR [esi]
  407e2f:	out    dx,al
  407e30:	idiv   DWORD PTR ds:0x3d65ee82
  407e36:	cmp    DWORD PTR [edx-0x23],0xffffffd2
  407e3a:	stos   DWORD PTR es:[edi],eax
  407e3b:	cmp    ah,0x9e
  407e3e:	mov    bl,0x86
  407e40:	scas   eax,DWORD PTR es:[edi]
  407e41:	fstp   QWORD PTR [eax+0x2b]
  407e44:	mov    dl,0x3e
  407e46:	inc    ebx
  407e47:	inc    ebp
  407e48:	loope  0x407dcc
  407e4a:	push   cs
  407e4b:	push   ecx
  407e4c:	mov    eax,ds:0x435fa3bb
  407e51:	or     DWORD PTR [ebx],ecx
  407e53:	cmp    ecx,DWORD PTR [edi+0x54cea90a]
  407e59:	push   0x46
  407e5b:	sbb    ebp,0xd04ef235
  407e61:	or     ecx,DWORD PTR [esi+0x2fe9da75]
  407e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e68:	mov    ah,0xe8
  407e6a:	out    dx,eax
  407e6b:	test   BYTE PTR [ecx-0x59bdd740],dh
  407e71:	scas   eax,DWORD PTR es:[edi]
  407e72:	aam    0xfa
  407e74:	dec    edx
  407e75:	add    al,0x37
  407e77:	add    DWORD PTR fs:[ebx-0x39],edi
  407e7b:	inc    edx
  407e7c:	lds    ebp,FWORD PTR [ebx-0x35]
  407e7f:	(bad)  
  407e80:	jns    0x407eab
  407e82:	clc    
  407e83:	in     al,0x63
  407e85:	mov    cl,0x20
  407e87:	jmp    0x407e1e
  407e89:	(bad)  [edx+0x165f0853]
  407e8f:	cmp    BYTE PTR [edx+0x2e3be964],dh
  407e95:	sbb    ebp,esi
  407e97:	jb     0x407e1a
  407e99:	mov    al,ds:0xea59760f
  407e9e:	in     eax,0x6e
  407ea0:	mul    eax
  407ea2:	pop    esi
  407ea3:	push   edi
  407ea4:	cmp    bh,BYTE PTR [esi]
  407ea6:	fidivr DWORD PTR [esi+0x68]
  407ea9:	nop
  407eaa:	mov    eax,DWORD PTR [ecx+eax*8-0x41]
  407eae:	push   0x23
  407eb0:	sar    BYTE PTR [edi-0x7657209a],1
  407eb6:	fwait
  407eb7:	jle    0x407f0b
  407eb9:	lea    edx,[esi+ecx*4]
  407ebc:	cs ss inc ebp
  407ebf:	aad    0xfa
  407ec1:	or     al,0x43
  407ec3:	in     al,0xbb
  407ec5:	mov    cl,al
  407ec7:	imul   DWORD PTR [ebx]
  407ec9:	fcmovnbe st,st(0)
  407ecb:	outs   dx,DWORD PTR ds:[esi]
  407ecc:	mul    DWORD PTR [edx-0xa]
  407ecf:	nop
  407ed0:	dec    ebx
  407ed1:	in     eax,dx
  407ed2:	out    dx,eax
  407ed3:	sbb    edx,ebx
  407ed5:	sbb    eax,DWORD PTR [esp+ecx*2-0x28]
  407ed9:	mov    edi,0x47c70343
  407ede:	or     ah,dl
  407ee0:	xchg   esi,eax
  407ee1:	xor    eax,0x77b7000d
  407ee6:	ret    
  407ee7:	xor    al,0xfa
  407ee9:	inc    esp
  407eea:	dec    esi
  407eeb:	xor    BYTE PTR [ebx+0x56960d26],dl
  407ef1:	aad    0x61
  407ef3:	call   0x6116:0x9a2abfc6
  407efa:	ror    BYTE PTR [esi-0x5a],0x33
  407efe:	retf   
  407eff:	adc    al,0x41
  407f01:	ins    BYTE PTR es:[edi],dx
  407f02:	xor    esp,edx
  407f04:	sub    DWORD PTR ds:0x7c4374ad,esp
  407f0a:	xchg   ebx,eax
  407f0b:	xchg   ebp,eax
  407f0c:	push   ebp
  407f0d:	lock and DWORD PTR [edi-0x10f6f4a8],esp
  407f14:	mov    cl,0xa
  407f16:	aaa    
  407f17:	in     eax,0x79
  407f19:	repnz cmp bh,BYTE PTR [ebx-0xe918008]
  407f20:	xchg   esp,eax
  407f21:	mov    esi,0x86539444
  407f26:	(bad)  
  407f27:	outs   dx,DWORD PTR ds:[esi]
  407f28:	xchg   BYTE PTR [eax-0x6e],dl
  407f2b:	mov    eax,DWORD PTR [edx+0x2c3f396f]
  407f31:	out    dx,eax
  407f32:	test   BYTE PTR [eax-0x44],bl
  407f35:	mov    edx,0xe2f1b034
  407f3a:	jbe    0x407f26
  407f3c:	cmp    bl,BYTE PTR [ebx-0x3614f3f4]
  407f42:	dec    eax
  407f43:	scas   eax,DWORD PTR es:[edi]
  407f44:	and    DWORD PTR [ecx-0x7],esp
  407f47:	loop   0x407f3f
  407f49:	xor    al,0x4e
  407f4b:	loop   0x407fc2
  407f4d:	int3   
  407f4e:	add    BYTE PTR [eax+eax*4+0x2d],bl
  407f52:	(bad)  
  407f53:	mov    eax,0x77235037
  407f58:	jmp    0x407f8a
  407f5a:	jne    0x407f9b
  407f5c:	popa   
  407f5d:	lea    ebx,[edx-0x65b66d3b]
  407f63:	add    esi,0xffffff82
  407f66:	stc    
  407f67:	and    eax,0x3e9d4ae9
  407f6c:	inc    esp
  407f6d:	and    eax,0xbfe9232
  407f72:	lahf   
  407f73:	test   DWORD PTR [edx+0x4c315aba],ebp
  407f79:	jmp    0x5876:0x571b3600
  407f80:	push   eax
  407f81:	call   0xf215a95
  407f86:	mov    cl,0xbe
  407f88:	cmp    DWORD PTR ds:0x1d347762,esi
  407f8e:	jmp    0x407f85
  407f90:	push   es
  407f91:	stos   DWORD PTR es:[edi],eax
  407f92:	clc    
  407f93:	mov    bl,0x9c
  407f96:	int3   
  407f97:	daa    
  407f98:	repnz ror DWORD PTR [esp+edx*4-0x3432d73e],cl
  407fa0:	aas    
  407fa1:	push   ebx
  407fa2:	sbb    esp,eax
  407fa4:	test   al,0xd0
  407fa6:	(bad)  
  407fa7:	aas    
  407fa8:	xchg   BYTE PTR [ebp+edi*2-0x3e8d5016],bh
  407faf:	push   ebx
  407fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fb1:	das    
  407fb2:	xchg   esi,eax
  407fb3:	sub    ebx,0xffffffad
  407fb6:	sbb    BYTE PTR [ebx],bl
  407fb8:	lods   al,BYTE PTR ds:[esi]
  407fb9:	jl     0x407f7e
  407fbb:	inc    ebp
  407fbc:	pop    eax
  407fbd:	pop    esi
  407fbe:	mov    edi,0x44e93a3e
  407fc3:	push   esp
  407fc4:	xchg   ebp,eax
  407fc5:	pop    ecx
  407fc6:	xlat   BYTE PTR ds:[ebx]
  407fc7:	or     dl,BYTE PTR [eax-0x232afe1c]
  407fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fce:	mov    esp,0x75da424a
  407fd3:	jb     0x407f6d
  407fd5:	dec    eax
  407fd6:	push   ebp
  407fd7:	and    eax,0x79270535
  407fdc:	mov    ebx,0x99831c48
  407fe1:	mov    ah,0x2c
  407fe3:	pop    edx
  407fe4:	and    al,0x20
  407fe6:	imul   edi,DWORD PTR [ebp+0x38b0f9d3],0xb20888af
  407ff0:	push   ss
  407ff1:	push   ss
  407ff2:	in     eax,0x54
  407ff4:	fiadd  WORD PTR [ebp-0x2abe6193]
  407ffa:	cld    
  407ffb:	(bad)  
  407ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ffd:	fist   DWORD PTR [edi+ecx*2+0x3]
  408001:	(bad)  
  408002:	sbb    al,0x1a
  408004:	inc    eax
  408005:	or     eax,0x282d9b24
  40800a:	add    bl,bl
  40800c:	cmp    eax,0xe58b8d56
  408011:	mov    ch,0x13
  408013:	mov    eax,0x3ec99ab0
  408018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408019:	std    
  40801a:	and    ebp,eax
  40801c:	outs   dx,BYTE PTR ds:[esi]
  40801d:	popa   
  40801e:	push   DWORD PTR [eax-0x21dd8319]
  408024:	mov    dh,0x36
  408026:	pop    esi
  408027:	sub    eax,DWORD PTR [edx-0x6edfb574]
  40802d:	call   0x4810:0x989154e
  408034:	push   ebx
  408035:	jmp    FWORD PTR [esi]
  408037:	aaa    
  408038:	cld    
  408039:	xchg   esi,eax
  40803a:	jns    0x407fde
  40803c:	pop    esp
  40803d:	stos   BYTE PTR es:[edi],al
  40803e:	imul   DWORD PTR ds:0x2b0ae07
  408044:	imul   eax,DWORD PTR [ebx],0x7bcda119
  40804a:	pop    ebx
  40804b:	push   eax
  40804c:	jnp    0x408008
  40804e:	mov    eax,0x98012782
  408053:	jno    0x4080b2
  408055:	mov    esp,DWORD PTR [esi-0x246cffe4]
  40805b:	pop    ss
  40805c:	lods   al,BYTE PTR ds:[esi]
  40805d:	mov    ah,0x33
  40805f:	cmp    al,0x6
  408061:	lock pop eax
  408063:	inc    edi
  408064:	(bad)  
  408065:	sti    
  408066:	ret    0xa764
  408069:	ins    BYTE PTR es:[edi],dx
  40806a:	xchg   DWORD PTR [esi-0x5b],esi
  40806d:	add    eax,0x386cd240
  408072:	aam    0xa
  408074:	(bad)  
  408075:	js     0x4080ed
  408077:	mov    al,ds:0x5178de4e
  40807c:	inc    eax
  40807d:	repz push ds
  40807f:	sbb    ebx,ecx
  408081:	(bad)  
  408082:	mov    ecx,0x2c5c1f71
  408087:	xor    bh,al
  408089:	dec    ebx
  40808a:	xchg   esi,eax
  40808b:	pop    ebp
  40808c:	stos   BYTE PTR es:[edi],al
  40808d:	pop    ebx
  40808e:	adc    esp,DWORD PTR ss:[edi-0x7b]
  408092:	dec    esi
  408093:	or     BYTE PTR [esi+eiz*1-0x5ccd3a62],bl
  40809a:	fisub  WORD PTR [ecx-0x29]
  40809d:	jns    0x40805f
  40809f:	imul   ebx,ebx,0x9b297a38
  4080a5:	imul   edi,DWORD PTR [edx+0x2a8c160c],0xb66cdadf
  4080af:	mov    BYTE PTR [esi+0x49],bl
  4080b2:	test   BYTE PTR [eax+0x595c6cad],dl
  4080b8:	outs   dx,BYTE PTR ds:[esi]
  4080b9:	and    eax,0x8076d5f8
  4080be:	xor    BYTE PTR [ecx+0x71],0xbe
  4080c2:	into   
  4080c3:	jno    0x4080c0
  4080c5:	dec    eax
  4080c6:	mov    cl,0x39
  4080c8:	test   BYTE PTR [edx-0x3d],bh
  4080cb:	xchg   DWORD PTR [eax+0x6ad2f802],esi
  4080d1:	jb     0x40805a
  4080d3:	pop    esp
  4080d4:	inc    edi
  4080d5:	cmp    ebp,DWORD PTR [ecx+edi*8-0x37]
  4080d9:	or     ecx,DWORD PTR [edx-0x2f5411dc]
  4080df:	add    al,0xeb
  4080e1:	scas   al,BYTE PTR es:[edi]
  4080e2:	dec    esp
  4080e3:	ins    BYTE PTR es:[edi],dx
  4080e4:	fdiv   QWORD PTR gs:[esp+ebx*8-0x15]
  4080e9:	cli    
  4080ea:	scas   al,BYTE PTR es:[edi]
  4080eb:	dec    edi
  4080ec:	or     DWORD PTR [eax-0xfcbef12],esi
  4080f2:	push   edi
  4080f3:	adc    DWORD PTR [edi],esi
  4080f5:	jle    0x4080c4
  4080f7:	ds xor edx,edx
  4080fa:	fs cli 
  4080fc:	pop    DWORD PTR [eax+0x3ccb5419]
  408102:	(bad)  
  408103:	cmp    edx,DWORD PTR [ecx-0x659af27b]
  408109:	ins    DWORD PTR es:[edi],dx
  40810a:	mov    ss,WORD PTR [eax+esi*2]
  40810d:	jl     0x408172
  40810f:	or     BYTE PTR [esi+0x268ed1a0],bh
  408115:	lds    eax,FWORD PTR [edi]
  408117:	inc    esi
  408118:	daa    
  408119:	retf   
  40811a:	xchg   DWORD PTR [ebx],ebp
  40811c:	bound  ebp,QWORD PTR ds:0x59cbcbb5
  408122:	jg     0x4081a0
  408124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408125:	xor    dl,bl
  408127:	xor    DWORD PTR [eax-0x18ca2b12],ecx
  40812d:	lods   al,BYTE PTR ds:[esi]
  40812e:	jae    0x40813e
  408130:	loop   0x40814b
  408132:	mov    ds:0xfb66a45,al
  408137:	xor    BYTE PTR [ebx+0x6ed762a5],0x74
  40813e:	inc    edi
  40813f:	push   es
  408140:	retf   0x1769
  408143:	mov    ecx,0x78e0efb9
  408148:	add    BYTE PTR [esi+0x600fca31],ch
  40814e:	rol    DWORD PTR [ecx-0x63],0x12
  408152:	xchg   esp,eax
  408153:	jo     0x4081b0
  408155:	sub    DWORD PTR [esp+eax*4+0x5c549d47],esp
  40815c:	or     esp,DWORD PTR [esi+0x242a7975]
  408162:	cmp    dh,BYTE PTR [ecx-0x7]
  408165:	(bad)  [edx]
  408167:	ret    
  408168:	dec    ebp
  408169:	mov    ebp,0xe84ed078
  40816e:	push   esp
  40816f:	jmp    0x40818b
  408171:	pop    ecx
  408172:	mov    ebx,0xace85531
  408177:	or     edx,DWORD PTR [eax+0x5e]
  40817a:	pop    ebp
  40817b:	sti    
  40817c:	imul   esp,DWORD PTR [ecx-0x2e],0x2b
  408180:	cwde   
  408181:	call   0xf78e:0x57b1ec82
  408188:	into   
  408189:	stc    
  40818a:	or     edx,edi
  40818c:	pop    edi
  40818d:	ret    0x3692
  408190:	and    al,0xa4
  408192:	inc    ecx
  408193:	mov    bl,0x6a
  408195:	and    eax,0x766d9e0e
  40819a:	mov    ss,esi
  40819c:	lods   eax,DWORD PTR ds:[esi]
  40819d:	xchg   esp,eax
  40819e:	ret    0x7fa3
  4081a1:	cmc    
  4081a2:	dec    esp
  4081a3:	icebp  
  4081a4:	adc    dl,BYTE PTR [ecx-0x4]
  4081a7:	pop    ss
  4081a8:	rol    BYTE PTR [ecx],cl
  4081aa:	test   eax,0x75e2b0a0
  4081af:	dec    ebp
  4081b0:	adc    BYTE PTR ds:0xa26b2547,cl
  4081b6:	fmul   QWORD PTR [edx]
  4081b8:	xchg   DWORD PTR [ebp-0x486eb5c1],esp
  4081be:	(bad)  
  4081bf:	test   BYTE PTR [ebp-0x1e],0xb0
  4081c3:	and    DWORD PTR [eax+0xc],0x29
  4081c7:	jp     0x408229
  4081c9:	add    DWORD PTR [esi+0x42],0xfffffffd
  4081cd:	cmp    ch,BYTE PTR ds:0x9461a622
  4081d3:	lods   al,BYTE PTR cs:[esi]
  4081d5:	jno    0x408190
  4081d7:	(bad)  
  4081d8:	pusha  
  4081d9:	aam    0x43
  4081db:	jne    0x40818e
  4081dd:	in     eax,0xa6
  4081df:	push   esp
  4081e0:	mov    esi,0xb8129a63
  4081e5:	push   0xffffffc5
  4081e7:	aas    
  4081e8:	xor    DWORD PTR [edx-0x1a],edx
  4081eb:	fistp  DWORD PTR [ebx]
  4081ed:	scas   eax,DWORD PTR es:[edi]
  4081ee:	mov    edx,0x6288749c
  4081f3:	add    eax,ebp
  4081f5:	shr    DWORD PTR [edi],1
  4081f7:	outs   dx,BYTE PTR ss:[esi]
  4081f9:	adc    DWORD PTR [ebp+0x46aa0276],ebx
  4081ff:	xor    BYTE PTR [edx+ebx*2-0x1c981f8c],al
  408206:	ins    DWORD PTR es:[edi],dx
  408207:	pop    eax
  408208:	fsub   st,st(6)
  40820a:	cmc    
  40820b:	cld    
  40820c:	xchg   esi,eax
  40820d:	adc    BYTE PTR [eax],dl
  40820f:	fadd   DWORD PTR [ebp+0x5]
  408212:	cs or  eax,0xeb854a07
  408218:	sub    eax,0xe22bc583
  40821d:	loopne 0x408269
  40821f:	(bad)  
  408221:	pop    ss
  408222:	sub    ebx,DWORD PTR [ecx+0x17]
  408225:	adc    cl,0xe6
  408228:	call   0x99d5c89d
  40822d:	pop    eax
  40822e:	loope  0x4081f5
  408230:	and    ebx,eax
  408232:	add    DWORD PTR [eax+0x4ecc68e5],esp
  408238:	fbld   TBYTE PTR [edx+0x64]
  40823b:	imul   DWORD PTR [eax-0x41a4bd00]
  408241:	sti    
  408242:	xchg   ecx,eax
  408243:	jns    0x40822b
  408245:	cdq    
  408246:	mov    al,ds:0x877b6a19
  40824b:	jecxz  0x4082ba
  40824d:	or     eax,0xbbdd3f6d
  408252:	retf   
  408253:	lahf   
  408254:	xchg   ebx,ecx
  408256:	dec    ebx
  408257:	sar    DWORD PTR [esi],1
  408259:	mov    WORD PTR [ebp-0x7c],?
  40825c:	pop    ds
  40825d:	xor    al,0xe6
  40825f:	stc    
  408260:	div    DWORD PTR [eax]
  408262:	or     edi,DWORD PTR [edx]
  408264:	das    
  408265:	inc    esp
  408266:	mov    gs,WORD PTR [ebp-0x365363e8]
  40826c:	cli    
  40826d:	loopne 0x4081ef
  40826f:	jns    0x4082e3
  408271:	pop    esi
  408272:	mov    al,ds:0xd20db69c
  408277:	sbb    al,0x81
  408279:	in     eax,dx
  40827a:	leave  
  40827b:	mov    al,ds:0xd004085a
  408280:	(bad)  
  408283:	inc    eax
  408284:	cmp    DWORD PTR [ecx-0x6e39a7fc],ebx
  40828a:	inc    eax
  40828b:	loop   0x408267
  40828d:	das    
  40828e:	leave  
  40828f:	cdq    
  408290:	inc    esp
  408291:	or     bh,BYTE PTR [eax+0x29]
  408294:	clc    
  408295:	adc    ah,0x59
  408298:	es xor esi,edi
  40829b:	loopne 0x408262
  40829d:	in     eax,dx
  40829e:	xchg   edi,eax
  40829f:	and    esp,ebx
  4082a1:	jmp    DWORD PTR [edx+0x2b8a33c9]
  4082a7:	mov    esi,0x158e73d0
  4082ac:	jl     0x4082e1
  4082ae:	dec    edi
  4082af:	out    dx,eax
  4082b0:	mov    ds:0x33f0b50e,al
  4082b5:	xchg   esp,eax
  4082b6:	adc    bh,BYTE PTR [edx]
  4082b8:	ror    DWORD PTR [esi+0x1983caf8],cl
  4082be:	xchg   ebp,eax
  4082bf:	or     eax,0xef71b47f
  4082c4:	psubsb mm7,QWORD PTR [edx+0x327ccc40]
  4082cb:	std    
  4082cc:	ja     0x40830e
  4082ce:	in     eax,0x61
  4082d0:	dec    ebp
  4082d1:	cmp    eax,0x968bb3d5
  4082d6:	pushf  
  4082d7:	mov    ch,BYTE PTR [eax]
  4082d9:	cwde   
  4082da:	mov    dl,BYTE PTR [ecx]
  4082dc:	out    0x2a,eax
  4082de:	xchg   DWORD PTR [esi],edx
  4082e0:	mov    BYTE PTR [esp+eax*1],dh
  4082e3:	(bad)  
  4082e4:	mov    al,ds:0xdfff487f
  4082e9:	iret   
  4082ea:	les    ecx,FWORD PTR [ecx-0x71]
  4082ed:	mov    ch,0x41
  4082ef:	jge    0x408348
  4082f1:	xor    al,0x52
  4082f3:	inc    esi
  4082f4:	add    al,dh
  4082f6:	dec    ebp
  4082f7:	adc    dl,BYTE PTR [ebx+edx*2+0x3d4e6d7]
  4082fe:	jl     0x408313
  408300:	pop    ecx
  408301:	mov    al,dh
  408303:	and    DWORD PTR cs:[esi-0x55],eax
  408307:	sub    al,0xa2
  408309:	dec    eax
  40830a:	das    
  40830b:	mov    edi,0xbd301827
  408310:	and    ebx,0xe685e02b
  408316:	shr    cl,cl
  408318:	popa   
  408319:	je     0x40834a
  40831b:	sbb    dh,BYTE PTR [ebx+eiz*2-0x253eedf2]
  408322:	out    dx,eax
  408323:	div    BYTE PTR [ebx]
  408325:	or     DWORD PTR [edx-0x4c],esp
  408328:	into   
  408329:	enter  0xa581,0x2f
  40832d:	dec    ebx
  40832e:	adc    eax,0x7d416761
  408333:	cdq    
  408334:	or     eax,0x1bbd08d2
  408339:	ss mov esi,edi
  40833c:	pop    ebp
  40833d:	dec    ecx
  40833e:	push   0xc25df926
  408343:	les    edx,FWORD PTR [ecx-0x24]
  408346:	sbb    BYTE PTR [edi+0x77],0xa9
  40834a:	push   DWORD PTR [ebp+ebx*1-0x6]
  40834e:	imul   esp,DWORD PTR [edx+0x67],0x28
  408352:	shr    BYTE PTR [esi],cl
  408354:	int    0xf0
  408356:	xchg   ecx,eax
  408357:	loop   0x408326
  408359:	in     al,dx
  40835a:	out    dx,al
  40835b:	loop   0x40836b
  40835d:	dec    esi
  40835e:	add    al,0x42
  408360:	inc    ebx
  408361:	or     BYTE PTR [edx],ch
  408363:	nop
  408364:	mov    BYTE PTR [ecx],dl
  408366:	add    BYTE PTR [eax],0x86
  408369:	out    0x3c,al
  40836b:	sbb    bl,BYTE PTR [edi+0x6]
  40836e:	std    
  40836f:	sbb    al,0x8c
  408371:	and    BYTE PTR [ecx+0x15279c58],0x36
  408378:	adc    DWORD PTR [ecx],0x73
  40837b:	or     al,0x6d
  40837d:	mov    ch,0x1c
  40837f:	push   ecx
  408380:	push   0x6e6eb59f
  408385:	aad    0x4d
  408387:	mov    bh,0x1c
  408389:	sbb    BYTE PTR [eax-0x2d],dh
  40838c:	xor    esp,esp
  40838e:	cld    
  40838f:	(bad)  
  408391:	cmp    cl,BYTE PTR ds:0x9549bb7
  408397:	lock out 0x8a,eax
  40839a:	dec    edi
  40839b:	mov    ah,0x9d
  40839d:	cmp    cl,dl
  40839f:	pop    esi
  4083a0:	test   DWORD PTR [eax+0xe336643],eax
  4083a6:	test   DWORD PTR [esi+0x73],ecx
  4083a9:	dec    ebp
  4083aa:	retf   0x37aa
  4083ad:	xor    al,0x2d
  4083af:	sub    cl,BYTE PTR [ebx]
  4083b1:	mov    dl,BYTE PTR [ebx]
  4083b3:	int3   
  4083b4:	pop    ecx
  4083b5:	(bad)  
  4083b6:	call   0xb4b1:0xd474ccea
  4083bd:	sti    
  4083be:	mov    cs,WORD PTR [ebx+0x79]
  4083c1:	mov    eax,ds:0x861df83
  4083c6:	push   esp
  4083c7:	sub    eax,0xda5e69aa
  4083cc:	sub    al,0xc6
  4083ce:	pop    edi
  4083cf:	test   al,0xa1
  4083d1:	cwde   
  4083d2:	leave  
  4083d3:	out    0x86,eax
  4083d5:	pop    esi
  4083d6:	mov    esi,0xbb73b516
  4083db:	xor    al,0x94
  4083dd:	(bad)  
  4083de:	and    al,0xc5
  4083e0:	inc    esp
  4083e1:	dec    ebx
  4083e2:	mov    eax,0x5516da4e
  4083e7:	inc    ebx
  4083e8:	adc    eax,0xb779ffb7
  4083ed:	bound  edi,QWORD PTR [ebx]
  4083ef:	jae    0x408423
  4083f1:	adc    BYTE PTR [ebp+0x60],cl
  4083f4:	inc    edi
  4083f5:	iret   
  4083f6:	sbb    BYTE PTR [ecx+0x4f],bh
  4083f9:	test   eax,0xb059b984
  4083fe:	out    0xce,al
  408400:	mov    eax,DWORD PTR [edi+0x3e4f543b]
  408406:	(bad)  
  408407:	xchg   edi,eax
  408408:	cwde   
  408409:	add    al,0x88
  40840b:	adc    eax,0xd8832855
  408410:	cmp    DWORD PTR ds:0xc15df233,0xa6e9169a
  40841a:	loop   0x4083db
  40841c:	and    dl,al
  40841e:	sti    
  40841f:	dec    ebp
  408420:	stos   DWORD PTR es:[edi],eax
  408421:	fcom   st(4)
  408423:	lds    edi,FWORD PTR ds:0xa22dbd8
  408429:	mov    WORD PTR [ebx+0x2c10ea60],ss
  40842f:	fdivp  st(1),st
  408431:	popa   
  408432:	data16 aam 0x16
  408435:	pop    ecx
  408436:	outs   dx,DWORD PTR ds:[esi]
  408437:	(bad)  
  408439:	add    ecx,ebx
  40843b:	js     0x408496
  40843d:	mov    esi,0x2484001a
  408442:	jne    0x408454
  408444:	in     eax,0xde
  408446:	add    DWORD PTR [ebx-0x18e2341d],edx
  40844c:	(bad)  
  40844d:	icebp  
  40844e:	jp     0x408401
  408450:	mov    ?,WORD PTR [edi+0x66871837]
  408456:	(bad)  
  408457:	mov    WORD PTR [esi+0x178221fe],fs
  40845d:	shl    DWORD PTR [eax-0x5b],1
  408460:	mov    es,WORD PTR [ecx+ebp*1-0x6e]
  408464:	imul   edi,edx,0xffffff96
  408467:	jmp    0xb28025c2
  40846c:	test   eax,0x712e186a
  408471:	call   0x97c7:0xc32e060f
  408478:	xor    al,0x21
  40847a:	sub    eax,0x1704bda3
  40847f:	cmp    eax,0x25603007
  408484:	mov    DWORD PTR [edi+0x38],ebx
  408487:	jg     0x408506
  408489:	mov    edx,0x1057ed55
  40848e:	sub    al,0xd4
  408490:	ins    BYTE PTR es:[edi],dx
  408491:	push   edi
  408492:	sub    al,0xc3
  408494:	push   es
  408495:	out    0xc0,al
  408497:	lahf   
  408498:	sbb    ecx,DWORD PTR [edx+0x6e]
  40849b:	mov    BYTE PTR [eax-0x42df0545],ch
  4084a1:	mov    eax,ds:0x69be1d17
  4084a6:	in     al,0x5d
  4084a8:	pop    edx
  4084a9:	mov    ss,WORD PTR [edi-0x78bab3b6]
  4084af:	loopne 0x408495
  4084b1:	mov    esi,0xbe060648
  4084b6:	std    
  4084b7:	out    0x26,al
  4084b9:	xchg   edx,eax
  4084ba:	adc    dh,BYTE PTR [ebx+0x16e40233]
  4084c0:	addr16 mov al,0xec
  4084c3:	and    al,0xaf
  4084c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084c6:	mov    al,ds:0xfbf0db7a
  4084cb:	faddp  st(7),st
  4084cd:	hlt    
  4084ce:	jg     0x4084a9
  4084d0:	or     BYTE PTR [ecx],0xf9
  4084d3:	and    al,0x98
  4084d5:	mov    ebx,DWORD PTR [ecx+0x33]
  4084d8:	shr    BYTE PTR [esi-0x46],0x38
  4084dc:	cmp    bh,BYTE PTR [ebp-0x58a85d35]
  4084e2:	mov    ecx,0xec2d1747
  4084e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084e8:	out    0x1c,al
  4084ea:	out    dx,eax
  4084eb:	mov    ecx,edi
  4084ed:	cld    
  4084ee:	call   0x1e4c:0x37047270
  4084f5:	iret   
  4084f6:	dec    ebp
  4084f7:	xchg   ecx,eax
  4084f8:	xchg   BYTE PTR [edi+ecx*8-0x800e50],bh
  4084ff:	push   0x45e94e15
  408504:	add    dh,bh
  408506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408507:	imul   esp,DWORD PTR [ecx],0x45affb8f
  40850d:	popa   
  40850e:	rep ds stos DWORD PTR es:[edi],eax
  408511:	in     al,dx
  408512:	icebp  
  408513:	test   eax,0x85aa86b0
  408518:	jecxz  0x4084c3
  40851a:	gs (bad) 
  40851c:	hlt    
  40851d:	cmp    ebp,DWORD PTR [edi]
  40851f:	imul   edx,DWORD PTR [ecx-0x43172406],0x1e73d0c7
  408529:	ins    BYTE PTR es:[edi],dx
  40852a:	dec    edx
  40852b:	mov    ecx,0xd6323b2a
  408530:	pusha  
  408531:	lods   eax,DWORD PTR ds:[esi]
  408532:	pop    edx
  408533:	mov    ch,0xbb
  408535:	jb     0x4084fa
  408537:	sbb    al,BYTE PTR [eax+edx*8]
  40853a:	icebp  
  40853b:	lods   eax,DWORD PTR ds:[esi]
  40853c:	or     bl,ch
  40853e:	(bad)  
  40853f:	cmp    BYTE PTR [ecx-0xe],cl
  408542:	push   ebp
  408543:	ins    BYTE PTR es:[edi],dx
  408544:	shr    DWORD PTR [esi-0x7351da72],1
  40854a:	popf   
  40854b:	out    0x14,al
  40854d:	shl    dh,1
  40854f:	mov    gs,WORD PTR [ebx-0x3cf587f0]
  408555:	jo     0x408506
  408557:	in     eax,0xbe
  408559:	clc    
  40855a:	xchg   esi,eax
  40855b:	push   ebx
  40855c:	call   0x9a690f76
  408561:	popa   
  408562:	aam    0x9b
  408564:	in     al,0xd
  408566:	xchg   edi,eax
  408567:	add    eax,DWORD PTR [edi+0x1dafd516]
  40856d:	inc    ebx
  40856e:	pop    esp
  40856f:	data16 fsubr DWORD PTR [ecx]
  408572:	shl    DWORD PTR [ebx-0x4caa717e],1
  408578:	(bad)  
  40857a:	push   ebp
  40857b:	dec    edx
  40857c:	fwait
  40857d:	sub    al,0xac
  40857f:	cmc    
  408580:	sbb    ch,dl
  408582:	pushf  
  408583:	ja     0x4085ce
  408585:	or     BYTE PTR [ebx],ch
  408587:	int    0x29
  408589:	dec    eax
  40858a:	rcr    DWORD PTR [ecx+0x2b],cl
  40858d:	push   esp
  40858e:	jbe    0x4085f0
  408590:	mov    ds:0x60f5d3e,eax
  408595:	cmp    esi,ebx
  408597:	lds    eax,FWORD PTR [esi+0x2e]
  40859a:	xor    ecx,DWORD PTR [eax*1+0x663fc193]
  4085a1:	shl    BYTE PTR ds:0xecc13939,cl
  4085a7:	pop    ss
  4085a8:	pop    edx
  4085a9:	fs ds sahf 
  4085ac:	mov    WORD PTR [ebx+0x76],?
  4085af:	cwde   
  4085b0:	rcr    DWORD PTR fs:[edi-0x15],1
  4085b4:	jp     0x408537
  4085b6:	adc    esi,DWORD PTR [edi+0x16]
  4085b9:	outs   dx,BYTE PTR ds:[esi]
  4085ba:	dec    eax
  4085bb:	ja     0x40855b
  4085bd:	ret    0xa8af
  4085c0:	or     ch,BYTE PTR [ecx-0x12809c7d]
  4085c6:	mov    dl,0xbb
  4085c8:	jb     0x4085f5
  4085ca:	lea    ebp,[eax+eiz*4]
  4085cd:	(bad)  
  4085ce:	imul   eax,DWORD PTR [edi-0x5b],0x15
  4085d2:	lea    esi,[ecx-0x3e]
  4085d5:	pop    es
  4085d6:	push   esp
  4085d7:	mov    al,ss:0xbbcee59d
  4085dd:	mov    cl,0xfd
  4085df:	or     DWORD PTR [ebp*8-0x3bef3537],esp
  4085e6:	sub    al,0x77
  4085e8:	xchg   ecx,eax
  4085e9:	sub    DWORD PTR [ecx],eax
  4085eb:	adc    DWORD PTR [eax],edi
  4085ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ee:	cli    
  4085ef:	push   ebp
  4085f0:	in     eax,dx
  4085f1:	sub    ch,BYTE PTR [ebx-0x5ab01f64]
  4085f7:	retf   0x18ad
  4085fa:	add    edi,DWORD PTR [esi-0x32646852]
  408600:	add    eax,0xd448fd4f
  408605:	scas   eax,DWORD PTR es:[edi]
  408606:	sahf   
  408607:	retf   
  408608:	xchg   ebx,eax
  408609:	aad    0x54
  40860b:	mov    BYTE PTR [esi-0x79],ah
  40860e:	pusha  
  40860f:	clc    
  408610:	sti    
  408611:	jns    0x408593
  408613:	arpl   bx,sp
  408615:	or     al,0x68
  408617:	dec    ecx
  408618:	ret    0x445f
  40861b:	jno    0x408629
  40861d:	test   BYTE PTR [esp+edx*8-0x7a],bh
  408621:	sbb    cl,cl
  408623:	jnp    0x40864f
  408625:	push   edi
  408626:	not    BYTE PTR [ecx]
  408628:	hlt    
  408629:	jecxz  0x408631
  40862b:	repz mov bl,0x77
  40862e:	sti    
  40862f:	cli    
  408630:	dec    ebp
  408631:	xchg   ecx,eax
  408632:	int    0xa8
  408634:	adc    DWORD PTR [edi-0x77],ebx
  408637:	or     DWORD PTR [ebx+0x47],eax
  40863a:	dec    esi
  40863b:	dec    esp
  40863c:	xchg   DWORD PTR [ebx],esi
  40863e:	outs   dx,DWORD PTR ds:[esi]
  40863f:	js     0x4086b8
  408641:	retf   
  408642:	out    0xee,al
  408644:	cmp    BYTE PTR [ebp+eax*8+0x23],al
  408648:	aad    0x62
  40864a:	push   edi
  40864b:	mov    ds:0xdcd0aaaf,al
  408650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408651:	sub    al,0xe3
  408653:	xor    dl,bh
  408655:	add    ecx,ebp
  408657:	jmp    0x69f3:0xf3eacd7a
  40865e:	cmp    bh,BYTE PTR [eax-0x49]
  408661:	cmp    DWORD PTR [eax+0x49],ebp
  408664:	and    eax,0xdffd22c1
  408669:	aam    0xcf
  40866b:	pop    eax
  40866c:	sbb    BYTE PTR [ebx],dh
  40866e:	rcr    BYTE PTR [edi],0x36
  408671:	ret    
  408672:	and    bh,dl
  408674:	aaa    
  408675:	ret    
  408676:	(bad)  
  408677:	mov    dh,0xfa
  408679:	pop    edi
  40867a:	jo     0x408643
  40867c:	pop    ss
  40867d:	cmp    BYTE PTR [ebp-0x622c7724],0x9e
  408684:	pop    ecx
  408685:	add    al,0x9a
  408687:	sbb    BYTE PTR [eax],dl
  408689:	dec    edi
  40868a:	mov    bh,ch
  40868c:	neg    DWORD PTR [ecx]
  40868e:	outs   dx,DWORD PTR ds:[esi]
  40868f:	sub    DWORD PTR [esi+0x415faf85],esp
  408695:	mov    esp,0x2f573dee
  40869a:	or     eax,0xb2b1d45
  40869f:	leave  
  4086a0:	adc    eax,0x985454de
  4086a5:	jl     0x40866d
  4086a7:	mov    BYTE PTR [edi],ah
  4086a9:	push   esp
  4086aa:	loopne 0x4086b7
  4086ac:	rcr    DWORD PTR [eax+0x20],1
  4086af:	adc    eax,0x15c18859
  4086b4:	mov    edx,0xdffe7b35
  4086b9:	orps   xmm5,xmm3
  4086bc:	inc    ebx
  4086bd:	aas    
  4086be:	sbb    eax,DWORD PTR [ecx+0x1f2a7462]
  4086c4:	sub    eax,0xcff4317a
  4086c9:	xor    dl,BYTE PTR [ecx+0x73]
  4086cc:	sti    
  4086cd:	inc    edx
  4086ce:	dec    eax
  4086cf:	and    al,0x2c
  4086d1:	and    BYTE PTR [edx-0x9],bh
  4086d4:	loop   0x40871a
  4086d6:	rcl    bl,1
  4086d8:	fsubr  st(2),st
  4086da:	pop    ss
  4086db:	mov    edx,0x326c580c
  4086e0:	int    0xd6
  4086e2:	adc    BYTE PTR [edi],al
  4086e4:	push   esp
  4086e5:	jmp    0x83f3:0x92331825
  4086ec:	cld    
  4086ed:	mov    ds:0xb2574ce7,al
  4086f2:	mov    dl,0xeb
  4086f4:	out    dx,al
  4086f5:	cmp    dl,BYTE PTR [ecx+0x2943af34]
  4086fb:	aaa    
  4086fc:	leave  
  4086fd:	or     al,0xa1
  4086ff:	or     ebx,DWORD PTR [eax+0x6e]
  408702:	lea    esi,[ebx+0x55]
  408705:	pop    esi
  408706:	pop    eax
  408707:	sbb    BYTE PTR ds:0xe16b024c,dh
  40870d:	fiadd  WORD PTR [edi-0x65d595ef]
  408713:	mul    edi
  408715:	bswap  eax
  408717:	rol    BYTE PTR ds:0x36aa7af0,cl
  40871d:	mov    eax,ds:0xc5e8737b
  408722:	(bad)  
  408723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408724:	sub    BYTE PTR [eax],cl
  408726:	dec    ecx
  408727:	sub    eax,0xdf5af793
  40872c:	xchg   edx,eax
  40872d:	push   0x455cab0a
  408732:	into   
  408733:	(bad)  
  408734:	out    0xc9,eax
  408736:	in     eax,0x36
  408738:	xor    al,0x49
  40873a:	hlt    
  40873b:	loope  0x4086d5
  40873d:	or     BYTE PTR [ecx-0x6b],bh
  408740:	js     0x40878b
  408742:	jmp    0xe9af4805
  408747:	(bad)  
  408748:	cmp    ah,al
  40874a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40874b:	add    DWORD PTR [ebp-0x72e2dac7],edx
  408751:	add    ecx,eax
  408753:	ins    DWORD PTR es:[edi],dx
  408754:	mov    ch,0x8c
  408756:	scas   eax,DWORD PTR es:[edi]
  408757:	gs xchg esp,eax
  408759:	icebp  
  40875a:	inc    edi
  40875b:	pop    eax
  40875c:	xchg   esi,eax
  40875d:	fisub  DWORD PTR [ecx]
  40875f:	pop    es
  408760:	shr    edx,cl
  408762:	and    BYTE PTR [eax],bl
  408764:	shl    BYTE PTR [esi],cl
  408766:	sti    
  408767:	clc    
  408768:	je     0x40870e
  40876a:	popa   
  40876b:	hlt    
  40876c:	xchg   edi,eax
  40876d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40876e:	ret    0x717b
  408771:	jno    0x4087db
  408773:	add    ebp,esp
  408775:	lods   al,BYTE PTR ds:[esi]
  408776:	mov    esp,0x5b20ac39
  40877b:	pop    esi
  40877c:	add    dl,0xd4
  40877f:	ds inc esi
  408781:	jmp    0x18f1:0x82523a8c
  408788:	xor    dh,ah
  40878a:	add    eax,0x1b10466c
  40878f:	xor    bh,BYTE PTR [edx-0x18]
  408792:	mov    esi,0x4a256a2b
  408797:	ss adc eax,0x98b632ad
  40879d:	xchg   ecx,eax
  40879e:	and    al,0xfc
  4087a0:	sub    DWORD PTR [ecx-0x30],ecx
  4087a3:	aam    0x96
  4087a5:	lods   al,BYTE PTR ds:[esi]
  4087a6:	dec    eax
  4087a7:	mov    DWORD PTR [ebp-0x659e16f0],edi
  4087ad:	jo     0x40875a
  4087af:	test   ch,ch
  4087b1:	sub    BYTE PTR [ecx-0xe10e75f],cl
  4087b7:	loop   0x408756
  4087b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087ba:	adc    eax,0xebb71330
  4087bf:	cmp    BYTE PTR [edx-0x25f4a3db],dh
  4087c5:	adc    eax,DWORD PTR [ebp-0x4cd608da]
  4087cb:	pusha  
  4087cc:	xchg   ebx,eax
  4087cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087ce:	out    dx,eax
  4087cf:	and    ebp,edx
  4087d1:	jno    0x40879e
  4087d3:	push   0xc004ac31
  4087d8:	sahf   
  4087d9:	mov    edi,0x75f22e1f
  4087de:	stos   BYTE PTR es:[edi],al
  4087df:	jle    0x4087fa
  4087e1:	fwait
  4087e2:	pop    edx
  4087e3:	jbe    0x408775
  4087e5:	push   cs
  4087e6:	aad    0x31
  4087e8:	rol    DWORD PTR [eax+esi*4+0x568b027d],0x76
  4087f0:	cmc    
  4087f1:	add    ebx,DWORD PTR [eax+0x2760b70d]
  4087f7:	loope  0x408794
  4087f9:	mov    ebx,0x6dd2e5dd
  4087fe:	daa    
  4087ff:	dec    edi
  408800:	shl    esp,0xc8
  408803:	sbb    bh,BYTE PTR [ebp+0x37]
  408806:	out    dx,al
  408807:	sub    dh,BYTE PTR cs:[ebp+0x3a]
  40880b:	call   0xcdb0:0xdb013be4
  408812:	push   ecx
  408813:	(bad)
  408817:	mov    WORD PTR [esp+edx*2-0x709788b9],?
  40881e:	ins    BYTE PTR es:[edi],dx
  40881f:	xchg   ebx,eax
  408820:	fistp  WORD PTR [edx]
  408822:	out    dx,eax
  408823:	std    
  408824:	mov    eax,0x81a12121
  408829:	out    0xf5,eax
  40882b:	sub    BYTE PTR [edi+0x6e1e8602],al
  408831:	iret   
  408832:	pop    es
  408833:	aaa    
  408834:	test   DWORD PTR [edx+ecx*8-0x623a728d],edi
  40883b:	gs aad 0x9f
  40883e:	clc    
  40883f:	cs lock stos DWORD PTR es:[edi],eax
  408842:	nop
  408843:	ins    DWORD PTR es:[edi],dx
  408844:	outs   dx,DWORD PTR ds:[esi]
  408845:	sub    BYTE PTR [esi+0x4f],bh
  408848:	xchg   DWORD PTR [eax-0x41],ebp
  40884b:	and    edx,DWORD PTR [eax+0x4cd2d25c]
  408851:	xchg   ecx,eax
  408852:	push   esp
  408853:	add    BYTE PTR [edx+0x3],ch
  408856:	scas   al,BYTE PTR es:[edi]
  408857:	adc    eax,0x4bdd5a7b
  40885c:	mov    bh,0x94
  40885e:	(bad)  
  40885f:	dec    ebp
  408860:	push   esp
  408861:	fld    QWORD PTR [ecx]
  408863:	inc    esi
  408864:	sbb    cl,bl
  408866:	scas   eax,DWORD PTR es:[edi]
  408867:	fs inc edx
  408869:	push   eax
  40886a:	jb     0x4088b7
  40886c:	and    BYTE PTR [edx-0x358a2683],cl
  408872:	daa    
  408873:	fild   QWORD PTR [esi+0x33759983]
  408879:	call   0x6f4d30a4
  40887e:	aas    
  40887f:	sub    DWORD PTR [ebx+0x77],eax
  408882:	cmp    BYTE PTR [ecx+esi*1],bh
  408885:	pushf  
  408886:	fst    QWORD PTR [ebx-0x21]
  408889:	xchg   edx,eax
  40888a:	call   edx
  40888c:	pop    esi
  40888d:	sbb    edi,DWORD PTR [esp+esi*1+0x31b1c42a]
  408894:	xchg   ebx,eax
  408895:	xchg   edx,eax
  408896:	dec    ecx
  408897:	add    dh,dl
  408899:	mov    ds:0x5ff5517a,eax
  40889e:	hlt    
  40889f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088a0:	stos   BYTE PTR es:[edi],al
  4088a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088a2:	and    dh,dh
  4088a4:	sar    BYTE PTR [esi+0x40ac9d91],1
  4088aa:	bound  edi,QWORD PTR [ecx+0x6b12b038]
  4088b0:	or     eax,0x54acecdb
  4088b5:	xchg   edi,eax
  4088b6:	add    al,0x53
  4088b8:	and    DWORD PTR [ebp-0x26],edx
  4088bb:	or     eax,0x4a740f97
  4088c0:	jo     0x40893c
  4088c2:	addr16 pop ss
  4088c4:	pop    ebp
  4088c5:	(bad)  
  4088c6:	clc    
  4088c7:	in     al,dx
  4088c8:	mov    ebx,0x1ec5cc12
  4088cd:	dec    ebp
  4088ce:	int    0xf8
  4088d0:	xor    ecx,DWORD PTR [ebx-0x1e]
  4088d3:	lods   al,BYTE PTR ds:[esi]
  4088d4:	xchg   BYTE PTR [esi],dh
  4088d6:	dec    esp
  4088d7:	out    0x3,al
  4088d9:	xor    dh,BYTE PTR [esi+0x169b9cf5]
  4088df:	mul    DWORD PTR [ebp+0x3]
  4088e2:	push   es
  4088e3:	xchg   ebx,esi
  4088e5:	int    0x7c
  4088e7:	in     al,0x74
  4088e9:	and    ah,bl
  4088eb:	out    dx,eax
  4088ec:	dec    edi
  4088ed:	(bad)  
  4088ee:	pop    ebp
  4088ef:	push   DWORD PTR ss:[ecx+0x10]
  4088f3:	inc    esi
  4088f4:	and    BYTE PTR [ebp-0x4bee6779],bh
  4088fa:	cmp    BYTE PTR [ecx+ebp*1-0x25],bh
  4088fe:	mul    DWORD PTR [ebx]
  408900:	adc    BYTE PTR [ebp-0x7f],ah
  408903:	xlat   BYTE PTR ds:[ebx]
  408904:	push   ds
  408905:	fadd   st,st(4)
  408907:	cwde   
  408908:	jmp    0x40890c
  40890a:	mov    esi,0x304a24be
  40890f:	jo     0x408918
  408911:	fst    DWORD PTR [ecx-0x22]
  408914:	mov    ecx,0x600c7cb9
  408919:	sbb    ebx,DWORD PTR [eax-0x3]
  40891c:	popa   
  40891d:	mov    dl,0x3a
  40891f:	mov    al,0x57
  408921:	xor    al,0x40
  408923:	jae    0x4088a9
  408925:	xchg   esi,eax
  408926:	cmp    al,0x3b
  408928:	inc    esi
  408929:	cli    
  40892a:	adc    BYTE PTR [eax*2-0x4be61bdd],0x37
  408932:	push   esi
  408933:	pop    ebp
  408934:	outs   dx,DWORD PTR ds:[esi]
  408935:	xor    DWORD PTR es:0x677e4dd8,eax
  40893c:	and    al,BYTE PTR [esp+ebx*1-0x48]
  408940:	or     eax,0x1ff05b22
  408945:	rcl    edx,1
  408947:	lds    eax,FWORD PTR [eax+eiz*2-0x1618bc9c]
  40894e:	mov    bl,0x31
  408950:	retf   0x2907
  408953:	adc    edi,eax
  408955:	xchg   ebx,eax
  408956:	in     eax,dx
  408957:	cmc    
  408958:	cmp    BYTE PTR [edx+0x3c42520c],ah
  40895e:	int    0x34
  408960:	adc    ebx,ebp
  408962:	pop    esp
  408963:	sahf   
  408964:	xchg   ebp,edi
  408966:	test   BYTE PTR [ebp-0x6528b955],dh
  40896c:	int3   
  40896d:	push   edx
  40896e:	dec    eax
  40896f:	jae    0x40898f
  408971:	jno    0x40892d
  408973:	(bad)  
  408974:	int3   
  408975:	xchg   DWORD PTR [ecx+ebp*2+0x6f5abd1f],eax
  40897c:	mov    ebp,0xdde8f419
  408981:	sar    DWORD PTR [edx+esi*8+0x566209cd],1
  408988:	std    
  408989:	jle    0x4089c0
  40898b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40898c:	pop    ebp
  40898d:	inc    edi
  40898e:	ror    cl,1
  408990:	jmp    0x37b52334
  408995:	jnp    0x4089d3
  408997:	outs   dx,BYTE PTR ds:[esi]
  408998:	push   edi
  408999:	js     0x408a09
  40899b:	in     al,dx
  40899c:	jmp    0x1a10b860
  4089a1:	xor    esi,edi
  4089a3:	jmp    0x40895e
  4089a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089a6:	hlt    
  4089a7:	inc    ecx
  4089a8:	push   edi
  4089a9:	ja     0x408a03
  4089ab:	(bad)  
  4089ad:	in     eax,0x49
  4089af:	inc    eax
  4089b0:	scas   al,BYTE PTR es:[edi]
  4089b1:	sub    DWORD PTR [edi+0x7aa41c76],esi
  4089b7:	adc    DWORD PTR [edx-0x57],edi
  4089ba:	in     al,dx
  4089bb:	nop
  4089bc:	xchg   edi,eax
  4089bd:	inc    edi
  4089be:	stc    
  4089bf:	aas    
  4089c0:	adc    ebx,DWORD PTR [edi]
  4089c2:	push   esp
  4089c3:	xchg   ebp,eax
  4089c4:	inc    eax
  4089c5:	adc    ch,BYTE PTR [esi]
  4089c7:	sbb    al,0x54
  4089c9:	popf   
  4089ca:	mov    edx,0x7dc05a37
  4089cf:	(bad)  
  4089d0:	add    eax,0xa262d7ce
  4089d5:	jno    0x4089c6
  4089d7:	sbb    DWORD PTR [esi+0x56],ebx
  4089da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089db:	mov    edi,0x4c694e90
  4089e0:	lea    edi,[edx]
  4089e2:	inc    edx
  4089e3:	mov    es,WORD PTR [edi+0x60]
  4089e6:	dec    esp
  4089e7:	xor    ebp,DWORD PTR [edi-0x12]
  4089ea:	xor    bl,BYTE PTR [ebp+0x55]
  4089ed:	sbb    al,0x40
  4089ef:	cmp    DWORD PTR [ecx],0x4ba89785
  4089f5:	and    dh,ah
  4089f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089f8:	sub    BYTE PTR [ecx],al
  4089fa:	inc    ecx
  4089fb:	cmp    eax,0x396bfc1c
  408a00:	test   dl,0x57
  408a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a04:	cdq    
  408a05:	sbb    dh,bl
  408a07:	ror    BYTE PTR [eax],1
  408a09:	shl    BYTE PTR [ebp-0x19bb5d24],1
  408a0f:	inc    DWORD PTR [edi+esi*4]
  408a12:	adc    bh,BYTE PTR [esi+ebp*2-0x46]
  408a16:	loopne 0x408a3d
  408a18:	or     DWORD PTR [eax],ecx
  408a1a:	jae    0x408a10
  408a1c:	dec    edi
  408a1d:	xor    al,0x20
  408a1f:	mov    dx,0x8c2c
  408a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a24:	mov    al,ds:0x573e398a
  408a29:	mov    al,0x6c
  408a2b:	pop    eax
  408a2c:	xchg   ebx,eax
  408a2d:	mov    ds,WORD PTR [eax-0xc7978a3]
  408a33:	add    esi,edx
  408a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a36:	lahf   
  408a37:	add    ch,0x80
  408a3a:	or     DWORD PTR [edi+0x2fa27a53],esp
  408a40:	je     0x408a21
  408a42:	or     BYTE PTR [eax+0x5f],bh
  408a45:	pop    es
  408a46:	or     BYTE PTR [ecx+0x7905531a],ah
  408a4c:	dec    ebx
  408a4d:	(bad)  
  408a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a4f:	es adc al,0x84
  408a52:	int    0x18
  408a54:	mov    dl,0xa4
  408a56:	and    ecx,DWORD PTR [ecx]
  408a58:	mov    esp,0x204383bb
  408a5d:	test   al,0xda
  408a5f:	xor    DWORD PTR [edi+0x2f03b37a],0xe29cb7db
  408a69:	popa   
  408a6a:	and    dl,BYTE PTR [eax-0x24]
  408a6d:	sahf   
  408a6e:	ret    
  408a6f:	cmp    eax,ebx
  408a71:	adc    al,0x2f
  408a73:	lods   eax,DWORD PTR ds:[esi]
  408a74:	loopne 0x408acd
  408a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a77:	cmc    
  408a78:	push   0x50
  408a7a:	aas    
  408a7b:	imul   ebp,DWORD PTR [esi+0xd01d39f],0xbf760b8c
  408a85:	in     eax,dx
  408a86:	daa    
  408a87:	xor    BYTE PTR [ecx],cl
  408a89:	and    al,0x1f
  408a8b:	dec    esi
  408a8c:	lea    edx,[ecx-0x17]
  408a8f:	bound  eax,QWORD PTR [edx]
  408a91:	mov    al,cs:0xd28bf1e9
  408a97:	jb     0x408ac7
  408a99:	pusha  
  408a9a:	scas   eax,DWORD PTR es:[edi]
  408a9b:	stos   BYTE PTR es:[edi],al
  408a9c:	bound  ebp,QWORD PTR [esi]
  408a9e:	repz xlat BYTE PTR ds:[ebx]
  408aa0:	mov    dh,0xc9
  408aa2:	scas   eax,DWORD PTR es:[edi]
  408aa3:	sub    al,0xf2
  408aa5:	sub    dh,0x2c
  408aa8:	dec    ebp
  408aa9:	dec    edi
  408aaa:	retf   0x2121
  408aad:	and    al,0x79
  408aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ab0:	mov    al,ds:0x1b16cd60
  408ab5:	dec    esp
  408ab6:	into   
  408ab7:	retf   
  408ab8:	xor    eax,0xedcf1526
  408abd:	data16 cld 
  408abf:	scas   eax,DWORD PTR es:[edi]
  408ac0:	add    DWORD PTR [edi-0x360fc25f],esi
  408ac6:	rcl    DWORD PTR [ecx+0x64d0773d],0xa8
  408acd:	int    0x50
  408acf:	mov    eax,0x7cb5be94
  408ad4:	test   al,0xbb
  408ad6:	push   ebp
  408ad7:	dec    esp
  408ad8:	xor    ebp,DWORD PTR [edx]
  408ada:	test   DWORD PTR [ebp+0x40],esp
  408add:	cdq    
  408ade:	mov    al,0xec
  408ae0:	jge    0x408a80
  408ae2:	sbb    BYTE PTR [ebp-0x2857f7f],ah
  408ae8:	or     DWORD PTR [ebp+0x7148b7a0],edx
  408aee:	mov    eax,0x6356972d
  408af3:	add    DWORD PTR [ebx+0x53],ecx
  408af6:	lea    ebp,ds:0x94ba80e3
  408afc:	xor    ch,BYTE PTR [ebx-0x41]
  408aff:	sub    DWORD PTR [esi-0x5de0db9e],edx
  408b05:	jae    0x408b2f
  408b07:	mov    ebp,0x161bc5e5
  408b0c:	ins    BYTE PTR es:[edi],dx
  408b0d:	mov    bl,0x94
  408b0f:	pop    ebp
  408b10:	push   edi
  408b11:	in     eax,dx
  408b12:	xor    ebx,ecx
  408b14:	mov    esp,0xf12bc737
  408b19:	xchg   dh,bl
  408b1b:	adc    BYTE PTR [edi-0x228d7f3d],0x3
  408b22:	add    BYTE PTR [edx-0x4552184b],0x96
  408b29:	pop    ebx
  408b2a:	stc    
  408b2b:	fadd   DWORD PTR [esi-0x365cd7b4]
  408b31:	adc    edx,ecx
  408b33:	sbb    al,0xfb
  408b35:	sbb    dh,BYTE PTR [eax+0x20394c92]
  408b3b:	mov    ah,0x9e
  408b3d:	cli    
  408b3e:	jo     0x408b62
  408b40:	push   0x67404434
  408b45:	stc    
  408b46:	adc    BYTE PTR [ebp+0x38ab6987],ch
  408b4c:	in     al,dx
  408b4d:	loopne 0x408b75
  408b4f:	je     0x408b80
  408b51:	mov    ds:0xb2c6b677,eax
  408b56:	ss jne 0x408bb8
  408b59:	cmp    eax,0xa65ed53
  408b5e:	xor    ebp,DWORD PTR [esi+0x6a]
  408b61:	push   eax
  408b62:	scas   eax,DWORD PTR es:[edi]
  408b63:	(bad)  
  408b64:	ror    esp,0x3c
  408b67:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b69:	int3   
  408b6a:	ins    BYTE PTR es:[edi],dx
  408b6b:	push   ds
  408b6c:	mov    ecx,0x27731cef
  408b71:	data16 or al,0x5d
  408b74:	cwde   
  408b75:	(bad)  
  408b76:	jle    0x408b9b
  408b78:	jne    0x408b6c
  408b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b7b:	push   cs
  408b7c:	out    dx,al
  408b7d:	pmuludq mm6,QWORD PTR [edx]
  408b80:	mov    ch,0xad
  408b82:	push   ecx
  408b83:	jbe    0x408b12
  408b85:	ins    BYTE PTR es:[edi],dx
  408b86:	jmp    0x408b90
  408b88:	inc    ebp
  408b89:	sub    dl,BYTE PTR [edx-0x760a961d]
  408b8f:	je     0x408baf
  408b91:	jle    0x408b19
  408b93:	xchg   esi,eax
  408b94:	jecxz  0x408bfa
  408b96:	adc    al,0x33
  408b98:	push   ebx
  408b99:	jb     0x408bd0
  408b9b:	mov    ds:0xbf524d67,eax
  408ba0:	mov    al,0xdd
  408ba2:	repnz mov ds:0x8a161408,al
  408ba8:	imul   ecx,eax,0x3504e337
  408bae:	xchg   DWORD PTR [eax+0x3e1f5d51],esp
  408bb4:	rcr    DWORD PTR [esi],cl
  408bb6:	jb     0x408b91
  408bb8:	icebp  
  408bb9:	push   esi
  408bba:	gs jne 0x408c05
  408bbd:	inc    eax
  408bbe:	(bad)  [ebx-0x4ee5f9d4]
  408bc4:	push   sp
  408bc6:	mov    ebp,0x3ffbc422
  408bcb:	pcmpgtw mm6,QWORD PTR [eax+0x1a1be756]
  408bd2:	push   ebp
  408bd3:	sbb    eax,0x4a6c0448
  408bd8:	mov    eax,ds:0xf3b9f273
  408bdd:	dec    ecx
  408bde:	jecxz  0x408b9c
  408be0:	sub    DWORD PTR [eax+ebp*1],edx
  408be3:	or     eax,0xc21318a4
  408be8:	mov    BYTE PTR [edi],al
  408bea:	daa    
  408beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bec:	ret    0x2a51
  408bef:	loop   0x408c49
  408bf1:	in     al,0xcf
  408bf3:	mov    edi,0x51923f91
  408bf8:	call   0x571d:0xb32ed525
  408bff:	fnstenv [ebx+0x4b900123]
  408c05:	repz sub ah,bl
  408c08:	adc    eax,0x348959cd
  408c0d:	call   0xb694:0x6177849f
  408c14:	xchg   ecx,eax
  408c15:	jle    0x408bb5
  408c17:	fcom   QWORD PTR [eax]
  408c19:	mov    ah,0x86
  408c1b:	jne    0x408ba0
  408c1d:	mov    ebp,0x45eedf11
  408c22:	aad    0x2c
  408c24:	xchg   ebx,eax
  408c25:	cmp    eax,0x6e8f2541
  408c2a:	jecxz  0x408beb
  408c2c:	loop   0x408c41
  408c2e:	out    dx,eax
  408c2f:	test   eax,0xfb2720b
  408c34:	xchg   ecx,eax
  408c35:	repnz push ds
  408c37:	iret   
  408c38:	adc    bh,BYTE PTR [ebx-0x401fe9f2]
  408c3e:	pusha  
  408c3f:	loopne 0x408bd9
  408c41:	mov    ax,WORD PTR [ebp-0x2599d30a]
  408c48:	jmp    0x408cb0
  408c4a:	xchg   eax,eax
  408c4c:	lds    eax,FWORD PTR [ecx-0x27f641cd]
  408c52:	push   0x20
  408c54:	jecxz  0x408c95
  408c56:	mov    BYTE PTR [edx-0x4e],al
  408c59:	jb     0x408cae
  408c5b:	dec    esp
  408c5c:	inc    dx
  408c5e:	xchg   ebx,eax
  408c5f:	mov    al,0xe0
  408c61:	sbb    eax,0x89fc855
  408c66:	into   
  408c67:	push   ds
  408c68:	je     0x408c16
  408c6a:	inc    ebp
  408c6b:	adc    esp,ebx
  408c6d:	push   edx
  408c6e:	mov    eax,ds:0x1f3de10d
  408c73:	imul   ebp,eax,0x7e
  408c76:	sbb    dl,BYTE PTR [esi-0x3e]
  408c79:	jle    0x408c9d
  408c7b:	mov    edx,DWORD PTR [ebp+0x2d061c1c]
  408c81:	loopne 0x408cb8
  408c83:	mov    dl,BYTE PTR [ebp*8+0x310b2e64]
  408c8a:	icebp  
  408c8b:	neg    dh
  408c8d:	mov    ah,0xd7
  408c8f:	and    eax,0xe81e2f7
  408c94:	sbb    ch,BYTE PTR [esi+0x4c]
  408c97:	mov    al,BYTE PTR [edx+0x5f83f1a4]
  408c9d:	sbb    BYTE PTR [ebx],ch
  408c9f:	mov    bh,0xe
  408ca1:	out    0xfa,eax
  408ca3:	mov    edi,0xd53ffba6
  408ca8:	push   es
  408ca9:	cdq    
  408caa:	add    DWORD PTR [eax+0x214dd174],esp
  408cb0:	mov    esi,0x91fee3b2
  408cb5:	sbb    eax,0x325fc48b
  408cba:	lds    ebp,FWORD PTR [eax+0x53]
  408cbd:	out    0x33,eax
  408cbf:	jnp    0x408ceb
  408cc1:	and    DWORD PTR [eax-0x4144ea65],edx
  408cc7:	ret    0x3dc7
  408cca:	mov    DWORD PTR [ecx-0x35],0xb278c07f
  408cd1:	test   edi,ecx
  408cd3:	(bad)  
  408cd4:	cmp    dl,bh
  408cd6:	or     BYTE PTR ss:[edx-0x35cb2284],bl
  408cdd:	repz dec edx
  408cdf:	in     al,dx
  408ce0:	call   0x7292d255
  408ce5:	jne    0x408d3d
  408ce7:	dec    eax
  408ce8:	inc    ebp
  408ce9:	jb     0x408d3d
  408ceb:	jno    0x408c97
  408ced:	mov    ebp,0xc86b6dd4
  408cf2:	jp     0x408d40
  408cf4:	inc    ebp
  408cf5:	fnstsw WORD PTR [ebx-0x7e]
  408cf8:	mov    bl,0x84
  408cfa:	pusha  
  408cfb:	outs   dx,BYTE PTR ds:[esi]
  408cfc:	xchg   esp,eax
  408cfd:	test   eax,0x13547081
  408d02:	jne    0x408d47
  408d04:	gs cmp al,0xdc
  408d07:	xchg   edi,eax
  408d08:	outs   dx,BYTE PTR ds:[esi]
  408d09:	(bad)  
  408d0a:	loope  0x408ce4
  408d0c:	push   eax
  408d0d:	mov    esp,0xd381e732
  408d12:	dec    edx
  408d13:	pop    ss
  408d14:	(bad)  [edx-0x301c074f]
  408d1a:	(bad)  
  408d1b:	out    0x63,eax
  408d1d:	jge    0x408ce8
  408d1f:	test   al,0xb2
  408d21:	lahf   
  408d22:	retf   0xd197
  408d25:	ret    
  408d26:	pushf  
  408d27:	test   eax,0x6605c6be
  408d2c:	or     DWORD PTR [edx-0x35883c26],edi
  408d32:	enter  0xa03c,0x59
  408d36:	sti    
  408d37:	mov    WORD PTR [esi],cs
  408d39:	dec    eax
  408d3a:	jb     0x408d85
  408d3c:	or     al,0xf7
  408d3e:	popa   
  408d3f:	repnz aam 0x91
  408d42:	cli    
  408d43:	mov    bh,0xa1
  408d45:	std    
  408d46:	js     0x408d5a
  408d48:	inc    esi
  408d49:	popf   
  408d4a:	dec    ebx
  408d4b:	stos   BYTE PTR es:[edi],al
  408d4c:	(bad)  
  408d4d:	retf   
  408d4e:	xor    BYTE PTR [edx],0x24
  408d51:	mov    ds:0x51b6eee8,al
  408d56:	test   al,0xae
  408d58:	daa    
  408d59:	mov    ebp,0xe667b2b8
  408d5e:	pop    esi
  408d5f:	xchg   esp,eax
  408d60:	pop    edi
  408d61:	repz pop eax
  408d63:	out    0x22,eax
  408d65:	pop    edx
  408d66:	jmp    FWORD PTR [ebx+ebp*4]
  408d69:	push   cs
  408d6a:	fist   WORD PTR [ebx-0x2e8ecdef]
  408d70:	adc    dh,bh
  408d72:	bound  ebx,QWORD PTR [edx-0x74419b54]
  408d78:	pop    eax
  408d79:	lahf   
  408d7a:	test   ebx,ebx
  408d7c:	out    0xf2,al
  408d7e:	mov    ebp,0xc6280e7a
  408d83:	and    bl,bh
  408d85:	lods   al,BYTE PTR ds:[esi]
  408d86:	outs   dx,DWORD PTR ds:[esi]
  408d87:	dec    ebx
  408d88:	idiv   BYTE PTR [edx-0x693185d5]
  408d8e:	sub    bl,BYTE PTR [ebx-0x50]
  408d91:	pop    es
  408d92:	xchg   ebx,eax
  408d93:	jl     0x408de4
  408d95:	mov    eax,ds:0x1d4486f0
  408d9a:	scas   eax,DWORD PTR es:[edi]
  408d9b:	in     eax,0x2a
  408d9d:	mov    edx,0xd26a8701
  408da2:	call   0x1ef905e3
  408da7:	int    0x7e
  408da9:	lahf   
  408daa:	(bad)  
  408dab:	push   edx
  408dac:	pushf  
  408dad:	scas   eax,DWORD PTR es:[edi]
  408dae:	cld    
  408daf:	cmp    cl,BYTE PTR [ebx-0x2c]
  408db2:	sbb    bl,BYTE PTR ds:0xb52963c4
  408db8:	mov    ds:0x823636d7,al
  408dbd:	mov    ecx,0xae150b1d
  408dc2:	inc    esp
  408dc3:	retf   0x2a9b
  408dc6:	dec    edx
  408dc7:	sar    BYTE PTR [ebp-0x335224bc],0xba
  408dce:	retf   
  408dcf:	test   BYTE PTR ds:[eax],cl
  408dd2:	add    ebp,edi
  408dd4:	pop    es
  408dd5:	outs   dx,BYTE PTR ds:[esi]
  408dd6:	mov    ecx,0x2a583537
  408ddb:	aam    0x54
  408ddd:	aam    0x55
  408ddf:	sbb    ah,BYTE PTR [edx+0x4a]
  408de2:	sub    edx,DWORD PTR [ebp+0x1b24cacf]
  408de8:	inc    eax
  408de9:	jnp    0x408dcb
  408deb:	push   es
  408dec:	leave  
  408ded:	push   es
  408dee:	xor    eax,esp
  408df0:	cwde   
  408df1:	fistp  QWORD PTR ds:0x2afbdbee
  408df7:	pop    ebp
  408df8:	xor    dh,BYTE PTR [esi-0x2e]
  408dfb:	or     ebx,ebp
  408dfd:	cmp    BYTE PTR [esi],dh
  408dff:	daa    
  408e00:	aad    0x71
  408e02:	(bad)  
  408e04:	rcr    dl,0xf3
  408e07:	push   edx
  408e08:	or     eax,0x7b783900
  408e0d:	test   DWORD PTR [edx+esi*1+0x50be7527],ebp
  408e14:	sub    esi,esi
  408e16:	test   BYTE PTR [esi+ecx*2],ch
  408e19:	or     BYTE PTR [ecx],bl
  408e1b:	cwde   
  408e1c:	xor    cl,BYTE PTR [esi+0x17869c56]
  408e22:	adc    al,0x46
  408e24:	(bad)  
  408e25:	into   
  408e26:	gs icebp 
  408e28:	or     al,0xa5
  408e2a:	xlat   BYTE PTR ds:[ebx]
  408e2b:	inc    ebp
  408e2c:	ror    DWORD PTR [edx-0xa],1
  408e2f:	sub    dl,bh
  408e31:	aas    
  408e32:	mov    dl,0xd2
  408e34:	push   edx
  408e35:	mov    ch,0x1c
  408e37:	out    dx,eax
  408e38:	stos   BYTE PTR es:[edi],al
  408e39:	outs   dx,BYTE PTR ds:[esi]
  408e3a:	pop    ss
  408e3b:	sub    ebp,DWORD PTR [edx]
  408e3d:	das    
  408e3e:	jns    0x408ea5
  408e40:	add    esp,eax
  408e42:	out    dx,eax
  408e43:	das    
  408e44:	imul   ah
  408e46:	jno    0x408dda
  408e48:	ret    0xcabf
  408e4b:	in     eax,dx
  408e4c:	sbb    dh,dh
  408e4e:	jbe    0x408eaa
  408e50:	mov    esi,0xbe6cb38d
  408e55:	xchg   ebp,eax
  408e56:	imul   edi,DWORD PTR [ebx-0x507bc56e],0x49257e6d
  408e60:	cdq    
  408e61:	aad    0xf3
  408e63:	inc    esi
  408e64:	lods   eax,DWORD PTR ds:[esi]
  408e65:	mov    edx,0xb5dace84
  408e6a:	in     al,0x35
  408e6c:	sub    ch,BYTE PTR [ebp-0x2f9a14be]
  408e72:	mov    bl,0x8d
  408e74:	cmp    eax,0xebcdb04e
  408e79:	pop    ecx
  408e7a:	and    esi,edi
  408e7c:	dec    esp
  408e7d:	enter  0xddf7,0xbc
  408e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e82:	jmp    0x408e5b
  408e84:	jmp    0x408e2b
  408e86:	lods   al,BYTE PTR ds:[esi]
  408e87:	add    edx,ecx
  408e89:	aam    0xcc
  408e8b:	mov    bh,0xff
  408e8d:	inc    eax
  408e8e:	iret   
  408e8f:	sahf   
  408e90:	leave  
  408e91:	mov    dl,0x41
  408e93:	sbb    BYTE PTR [eax+0x4b],al
  408e96:	inc    ecx
  408e97:	(bad)  
  408e98:	cmp    eax,0x11f47343
  408e9d:	and    al,0xef
  408e9f:	idiv   DWORD PTR [edx]
  408ea1:	inc    eax
  408ea2:	sbb    al,0xfa
  408ea4:	xchg   esi,eax
  408ea5:	mov    dl,0xeb
  408ea7:	sub    ebp,0x99b231ea
  408ead:	imul   ecx,DWORD PTR [ebp-0x2b9f847a],0x858d7f6d
  408eb7:	add    al,0xe6
  408eb9:	pop    es
  408eba:	or     esp,ecx
  408ebc:	jmp    DWORD PTR [eax+0x493b24]
  408ec2:	xor    al,0x9e
  408ec4:	adc    BYTE PTR [edi-0x3e],ah
  408ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ec8:	test   al,0x40
  408eca:	fiadd  WORD PTR [edx]
  408ecc:	xchg   esp,eax
  408ecd:	and    eax,0x80e16d0c
  408ed2:	out    0x46,eax
  408ed4:	inc    edi
  408ed5:	pop    ebp
  408ed6:	outs   dx,BYTE PTR ds:[esi]
  408ed7:	cmp    ebp,esp
  408ed9:	call   DWORD PTR [ebx+0x36b34282]
  408edf:	jnp    0x408edf
  408ee1:	dec    esi
  408ee2:	fucomi st,st(1)
  408ee4:	or     esi,DWORD PTR [edx+ebx*1]
  408ee7:	not    BYTE PTR [edx+0x27]
  408eea:	cli    
  408eeb:	or     DWORD PTR [edx+ebp*2],esi
  408eee:	cwde   
  408eef:	xchg   ecx,eax
  408ef0:	(bad)  
  408ef1:	loope  0x408e82
  408ef3:	in     al,0x1d
  408ef5:	pop    ds
  408ef6:	xor    dh,BYTE PTR [edx+0x4a6325a9]
  408efc:	ins    DWORD PTR es:[edi],dx
  408efd:	xchg   ebx,eax
  408efe:	mov    al,0x29
  408f00:	aas    
  408f01:	outs   dx,BYTE PTR ds:[esi]
  408f02:	cmp    DWORD PTR [ebp+eax*4-0x62],ecx
  408f06:	gs jmp 0x9aa1:0x69783403
  408f0e:	mov    cl,0xca
  408f10:	je     0x408f3a
  408f12:	mov    ebp,0x2bdf8295
  408f17:	dec    eax
  408f18:	popa   
  408f19:	jge    0x408edc
  408f1b:	fist   DWORD PTR [esi+eax*1]
  408f1e:	mov    al,ds:0x34ec5ab6
  408f23:	and    eax,0x6fb8c5d3
  408f28:	push   ebx
  408f29:	jge    0x408ef8
  408f2b:	call   0xf53c:0x1879e6a3
  408f32:	scas   eax,DWORD PTR es:[edi]
  408f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f34:	adc    ebp,DWORD PTR [ebx+0x4c]
  408f37:	inc    ebp
  408f38:	mov    bh,0xdb
  408f3a:	sub    DWORD PTR [esi-0x53],ecx
  408f3d:	mov    ecx,0xe40361ca
  408f42:	adc    ch,BYTE PTR [ecx+0x77]
  408f45:	inc    ebx
  408f46:	stc    
  408f47:	aaa    
  408f48:	(bad)  
  408f49:	jb     0x408f90
  408f4b:	arpl   cx,cx
  408f4d:	addr16 cld 
  408f4f:	dec    esp
  408f50:	cdq    
  408f51:	push   0x57
  408f53:	enter  0x6cf5,0x5
  408f57:	lock not BYTE PTR [ecx]
  408f5a:	cmp    eax,0xa88ac603
  408f5f:	inc    esp
  408f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f61:	test   edi,edi
  408f63:	enter  0x2512,0x35
  408f67:	jb     0x408fce
  408f69:	push   edx
  408f6a:	mov    eax,DWORD PTR [esi+0x71ce974e]
  408f70:	ins    BYTE PTR es:[edi],dx
  408f71:	mov    ?,WORD PTR fs:[ebx+0x11]
  408f75:	sub    eax,0x3785d1fd
  408f7a:	xchg   esi,eax
  408f7b:	add    DWORD PTR [ebp+0x52],0xee29cf1
  408f82:	push   ebp
  408f83:	mov    ecx,0x897d14b9
  408f88:	lods   al,BYTE PTR ds:[esi]
  408f89:	jp     0x408f82
  408f8b:	jns    0x408f65
  408f8d:	mov    edx,0x8ab852fb
  408f92:	cmp    eax,0x6515a43a
  408f97:	in     al,0x55
  408f99:	(bad)
  408f9c:	adc    ch,dh
  408f9e:	xor    al,0xb3
  408fa0:	push   0x3f
  408fa2:	dec    esi
  408fa3:	pusha  
  408fa4:	push   ebp
  408fa5:	cmc    
  408fa6:	in     eax,dx
  408fa7:	mov    ebx,0x9162f7aa
  408fac:	jae    0x408f63
  408fae:	cs cmp ebp,ecx
  408fb1:	push   0xdede85e6
  408fb6:	pop    es
  408fb7:	and    DWORD PTR ss:[edx-0x2a4a4ee0],eax
  408fbe:	mov    al,ds:0x4e09ab2c
  408fc3:	sub    edx,ebp
  408fc5:	mov    ebp,0x4ea11f34
  408fca:	(bad)  [esi+0x6091366e]
  408fd0:	cli    
  408fd1:	fsub   st,st(5)
  408fd3:	rol    BYTE PTR [edi-0x1b],0x6c
  408fd7:	clc    
  408fd8:	inc    edx
  408fd9:	bound  esp,QWORD PTR [edx-0x47]
  408fdc:	ror    eax,cl
  408fde:	push   eax
  408fdf:	fistp  WORD PTR [esi]
  408fe1:	pop    edx
  408fe2:	js     0x409032
  408fe4:	bound  esi,QWORD PTR [edx]
  408fe6:	aam    0xd0
  408fe8:	icebp  
  408fe9:	cdq    
  408fea:	ins    BYTE PTR es:[edi],dx
  408feb:	add    bl,ah
  408fed:	sub    BYTE PTR [esi+esi*8+0x4f255bc2],ch
  408ff4:	or     al,0x2e
  408ff6:	stc    
  408ff7:	sub    al,0xc4
  408ff9:	int3   
  408ffa:	(bad)  
  408ffb:	xor    DWORD PTR [edi+0x1f],edi
  408ffe:	retf   0x9051
  409001:	xacquire xchg BYTE PTR [edx+edi*8+0x19],bh
  409006:	mov    bl,0xb3
  409008:	es pop ecx
  40900a:	das    
  40900b:	enter  0x15f5,0x1e
  40900f:	call   0x63ac:0x55464551
  409016:	mov    edx,0xa249a839
  40901b:	xchg   esi,eax
  40901c:	push   esp
  40901d:	loope  0x408ff7
  40901f:	je     0x408fd8
  409021:	mov    eax,0xe912aa48
  409026:	and    ebp,DWORD PTR [esi-0x6611bb81]
  40902c:	pop    ss
  40902d:	iret   
  40902e:	and    al,0x84
  409030:	sbb    bh,BYTE PTR [edi+0x2aba2a71]
  409036:	inc    ecx
  409037:	push   ecx
  409038:	jbe    0x4090b1
  40903a:	jle    0x409051
  40903c:	ret    
  40903d:	sbb    DWORD PTR [edi+0x20ee8db0],ecx
  409043:	pop    ss
  409044:	in     eax,dx
  409045:	(bad)
  409049:	or     eax,0xe234a156
  40904e:	sub    dl,BYTE PTR [eax+0x6e]
  409051:	xchg   BYTE PTR ds:0x2a72830e,bl
  409057:	retf   0xd7e3
  40905a:	pop    esp
  40905b:	or     esi,ebp
  40905d:	sub    DWORD PTR [edx-0x28],edx
  409060:	int    0x15
  409062:	jb     0x4090ae
  409064:	pop    ebx
  409065:	daa    
  409066:	in     al,0x56
  409068:	std    
  409069:	sti    
  40906a:	jecxz  0x409072
  40906c:	hlt    
  40906d:	in     al,dx
  40906e:	push   edx
  40906f:	retf   
  409070:	loopne 0x40902d
  409072:	mov    esp,0xa9090c4a
  409077:	adc    BYTE PTR [ebp+0x5c90ce1e],cl
  40907d:	jns    0x409035
  40907f:	add    dh,bh
  409081:	popf   
  409082:	push   0xd
  409084:	(bad)  
  409085:	imul   ecx,DWORD PTR [esi*8-0x59150021],0x6ee89f5e
  409090:	sub    bh,al
  409092:	cs cld 
  409094:	addr16 int 0x1e
  409097:	cwde   
  409098:	push   eax
  409099:	xchg   edx,eax
  40909a:	ror    DWORD PTR [edx],cl
  40909c:	push   edi
  40909d:	mov    al,0x38
  40909f:	mov    ebp,0x957af15b
  4090a4:	sti    
  4090a5:	je     0x409046
  4090a7:	out    dx,al
  4090a8:	or     ch,BYTE PTR [edi+eiz*8]
  4090ab:	int    0xee
  4090ad:	mov    bl,0xee
  4090af:	sub    DWORD PTR [eax-0x482c4dde],edx
  4090b5:	fadd   DWORD PTR [eax]
  4090b7:	sub    eax,0x978723b1
  4090bc:	ret    0x7916
  4090bf:	push   ds
  4090c0:	daa    
  4090c1:	and    eax,0xf29cef39
  4090c6:	inc    eax
  4090c7:	ss into 
  4090c9:	sbb    BYTE PTR [edi+0x69],0xfd
  4090cd:	pop    ebp
  4090ce:	push   ebx
  4090cf:	xchg   edx,eax
  4090d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090d1:	cmp    DWORD PTR [ebx],ebx
  4090d3:	mov    dl,0x7f
  4090d5:	add    bh,BYTE PTR [ecx]
  4090d7:	xor    BYTE PTR [eax+0x7e],cl
  4090da:	xor    al,0x34
  4090dc:	lock es inc eax
  4090df:	int3   
  4090e0:	or     edi,DWORD PTR [ebx+0x5b69af33]
  4090e6:	int    0xa2
  4090e8:	ror    DWORD PTR fs:[ebx+0x56],cl
  4090ec:	pop    eax
  4090ed:	pop    ebx
  4090ee:	aas    
  4090ef:	mov    eax,0xc5b4a2f1
  4090f4:	sbb    BYTE PTR [edi-0x2da1c8e1],dh
  4090fa:	pop    edi
  4090fb:	out    dx,al
  4090fc:	scas   al,BYTE PTR es:[edi]
  4090fd:	stc    
  4090fe:	enter  0x30cd,0xc9
  409102:	inc    ebp
  409103:	jne    0x4090ec
  409105:	xchg   ecx,eax
  409106:	jge    0x4090f3
  409108:	jmp    0xd894767e
  40910d:	lea    esp,[eax-0x52a5f335]
  409113:	(bad)  
  409114:	xlat   BYTE PTR ds:[ebx]
  409115:	xchg   esi,eax
  409116:	mov    ebx,DWORD PTR gs:[ebp-0x4387aed5]
  40911d:	js     0x409111
  40911f:	mov    ecx,0xf03f8bf2
  409124:	mov    ah,BYTE PTR [edx-0x3bf11d14]
  40912a:	arpl   WORD PTR [ebp-0x7824a96f],cx
  409130:	xchg   esp,eax
  409131:	daa    
  409132:	xor    dl,BYTE PTR [eax+0x18]
  409135:	mov    ch,al
  409137:	shr    DWORD PTR [esp+ebx*8],0x5f
  40913b:	hlt    
  40913c:	lds    ebp,FWORD PTR [eax+0x133f3142]
  409142:	sub    al,0xa2
  409144:	je     0x409157
  409146:	jge    0x409127
  409148:	imul   ecx,DWORD PTR [eax+0x17402af4],0x4d
  40914f:	push   ds
  409150:	inc    DWORD PTR [edi+edi*2-0x3d]
  409154:	call   0x79f8:0x8c94d391
  40915b:	mov    dh,0x93
  40915d:	or     ch,al
  40915f:	in     al,dx
  409160:	mov    DWORD PTR [di-0x4651],edx
  409165:	cmp    ebx,DWORD PTR [esi+esi*4+0x63]
  409169:	fnstenv [eax]
  40916b:	pop    edi
  40916c:	dec    BYTE PTR [edi+0x75]
  40916f:	je     0x4091b5
  409171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409172:	push   edx
  409173:	xchg   ecx,eax
  409174:	jne    0x40919e
  409176:	mov    al,ds:0xdb756af6
  40917b:	sub    ebx,DWORD PTR [esi+edi*4+0x5d]
  40917f:	mov    ah,0x2
  409181:	cdq    
  409182:	ins    DWORD PTR es:[edi],dx
  409183:	das    
  409184:	mov    edx,0x89396c4d
  409189:	xor    ebx,DWORD PTR [ebp+0x2dfec1fa]
  40918f:	out    0x3e,eax
  409191:	es je  0x40913c
  409194:	mov    cl,0xbb
  409196:	cmp    esi,ecx
  409198:	mov    ds:0xdb8260e7,al
  40919d:	push   esp
  40919e:	ret    
  40919f:	jg     0x409124
  4091a1:	pushw  0xa83a
  4091a5:	cmp    ch,BYTE PTR [ebp-0x58e6e514]
  4091ab:	or     BYTE PTR [ebx],ch
  4091ad:	mov    esp,DWORD PTR [edx+0x8141e7f]
  4091b3:	jae    0x4091e4
  4091b5:	inc    eax
  4091b6:	lods   eax,DWORD PTR ds:[esi]
  4091b7:	xor    ebp,esi
  4091b9:	ja     0x409199
  4091bb:	mov    ebp,ds
  4091bd:	jb     0x409149
  4091bf:	lods   eax,DWORD PTR ds:[esi]
  4091c0:	std    
  4091c1:	jle    0x409211
  4091c3:	mov    ecx,0x68e040f2
  4091c8:	out    0x56,al
  4091ca:	add    DWORD PTR [ebx-0x31],esp
  4091cd:	sbb    al,0x14
  4091cf:	xor    ecx,eax
  4091d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d2:	jg     0x4091ad
  4091d4:	cmp    BYTE PTR [ecx],bl
  4091d6:	push   ecx
  4091d7:	sbb    eax,0xe2f725a6
  4091dc:	scas   al,BYTE PTR es:[edi]
  4091dd:	bound  esp,QWORD PTR fs:[ebx]
  4091e0:	pushf  
  4091e1:	outs   dx,DWORD PTR ds:[esi]
  4091e2:	xor    ch,ah
  4091e4:	out    dx,eax
  4091e5:	pop    edx
  4091e6:	repz inc ecx
  4091e8:	jo     0x4091a9
  4091ea:	repnz stc 
  4091ec:	jno    0x4091f3
  4091ee:	pop    ecx
  4091ef:	scas   eax,DWORD PTR es:[edi]
  4091f0:	cmc    
  4091f1:	outs   dx,BYTE PTR ds:[esi]
  4091f2:	sub    ecx,DWORD PTR [ebp-0x21]
  4091f5:	push   0xffffffd1
  4091f7:	inc    edi
  4091f8:	out    0xa4,eax
  4091fa:	outs   dx,DWORD PTR ds:[esi]
  4091fb:	daa    
  4091fc:	jnp    0x40926d
  4091fe:	arpl   bx,cx
  409200:	add    esp,DWORD PTR [edx-0x6c]
  409203:	or     DWORD PTR [ebp-0xf],eax
  409206:	in     eax,0xec
  409208:	nop
  409209:	sbb    eax,0x25889be4
  40920e:	add    al,0x50
  409210:	adc    DWORD PTR [edi+eiz*8-0x1c],esi
  409214:	cdq    
  409215:	dec    edx
  409216:	sub    eax,0x11bdf30a
  40921b:	sub    ecx,esi
  40921d:	imul   ebp,DWORD PTR [esi],0x428fea14
  409223:	leave  
  409224:	adc    eax,0x58f92c9e
  409229:	dec    esi
  40922a:	sahf   
  40922b:	push   cs
  40922c:	xor    dl,bh
  40922e:	sbb    al,0xd3
  409230:	sub    bl,ch
  409232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409233:	xchg   ebp,eax
  409234:	bound  edx,QWORD PTR [ebp+esi*1+0x32]
  409238:	in     eax,dx
  409239:	xchg   ebp,eax
  40923a:	and    dh,cl
  40923c:	inc    esp
  40923d:	sbb    eax,0x2362ee6c
  409242:	push   esp
  409243:	inc    edi
  409244:	xor    BYTE PTR [edi+0x6e],dh
  409247:	arpl   WORD PTR [eax],dx
  409249:	addps  xmm1,xmm5
  40924c:	mov    edi,0x1dc110c0
  409251:	inc    esp
  409252:	test   al,0x11
  409254:	pushf  
  409255:	and    DWORD PTR [ebx-0x11526d5],ebx
  40925b:	outs   dx,DWORD PTR ds:[esi]
  40925c:	loop   0x4092db
  40925e:	jl     0x4092a5
  409260:	stc    
  409261:	les    eax,FWORD PTR [esp+ebx*1+0x35efc6ff]
  409268:	ins    BYTE PTR es:[edi],dx
  409269:	outs   dx,BYTE PTR ds:[esi]
  40926a:	int    0xa6
  40926c:	jo     0x40929b
  40926e:	das    
  40926f:	add    BYTE PTR [edi],dh
  409271:	sbb    edx,DWORD PTR [ebx+0x16ae610]
  409277:	and    eax,0xde474d9b
  40927c:	mov    eax,0x1ff268ea
  409281:	push   esi
  409282:	ss into 
  409284:	xlat   BYTE PTR ds:[ebx]
  409285:	mov    edx,0x6e4bd7e7
  40928a:	int    0xb4
  40928c:	test   al,0x3d
  40928e:	test   eax,0xd2af2148
  409293:	jmp    DWORD PTR [ebx-0x12c81281]
  409299:	xchg   ebp,eax
  40929a:	push   edi
  40929b:	push   0x21f392e4
  4092a0:	jne    0x4092ec
  4092a2:	pop    ecx
  4092a3:	pop    ds
  4092a4:	sub    BYTE PTR [edx],dh
  4092a6:	sbb    ecx,0xffffffce
  4092a9:	std    
  4092aa:	jle    0x40924f
  4092ac:	in     al,dx
  4092ad:	in     eax,0x3b
  4092af:	push   edi
  4092b0:	push   0xffffffb4
  4092b2:	and    DWORD PTR [eax+0x21],0xd7851a88
  4092b9:	cmp    esi,edi
  4092bb:	mov    ebp,0xcc108b0d
  4092c0:	xlat   BYTE PTR ds:[ebx]
  4092c1:	mov    eax,ds:0xc002da3b
  4092c6:	dec    ebp
  4092c7:	mov    cl,0x44
  4092c9:	jle    0x4092b2
  4092cb:	pop    ebp
  4092cc:	outs   dx,DWORD PTR ds:[esi]
  4092cd:	pop    ss
  4092ce:	call   0xb1c8:0x52d172c
  4092d5:	aad    0x5f
  4092d7:	retf   
  4092d8:	and    DWORD PTR [edi+0x2da90a8],edx
  4092de:	into   
  4092df:	mov    esp,DWORD PTR [edi-0x48]
  4092e2:	sbb    eax,0x49369ea8
  4092e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e8:	enter  0x69f4,0xa7
  4092ec:	mov    esi,0xbabb7c95
  4092f1:	ret    
  4092f2:	sti    
  4092f3:	(bad)  
  4092f4:	out    0xdf,eax
  4092f6:	jmp    0x68e7a189
  4092fb:	(bad)  
  4092fc:	int    0x6b
  4092fe:	xchg   esi,eax
  4092ff:	adc    DWORD PTR [ecx-0x48],ebx
  409302:	ja     0x409284
  409304:	(bad)  
  409305:	and    ah,BYTE PTR [edi]
  409307:	jg     0x409371
  409309:	mov    esi,0x38ff722b
  40930e:	clc    
  40930f:	xchg   BYTE PTR [edi-0x10],ah
  409312:	sub    bh,cl
  409314:	fidivr DWORD PTR [edx]
  409316:	xor    al,0xb8
  409318:	rcr    DWORD PTR [edi-0x24],1
  40931b:	pop    ebx
  40931c:	inc    esi
  40931d:	lods   eax,DWORD PTR ds:[esi]
  40931e:	add    DWORD PTR [ebp-0x31],ebp
  409321:	clc    
  409322:	push   0xf4efb2b
  409327:	mov    ebp,0xb1a091fe
  40932c:	std    
  40932d:	stc    
  40932e:	and    BYTE PTR [esp+edx*2],0xe5
  409332:	inc    ebp
  409333:	xchg   ebp,eax
  409334:	mov    eax,ds:0x32479d33
  409339:	fcomp  DWORD PTR [edi+ebx*8+0x54]
  40933d:	jns    0x4092cf
  40933f:	push   cs
  409340:	lock mov ds:0xf326e98,eax
  409346:	(bad)  
  409347:	jne    0x409332
  409349:	les    ebp,FWORD PTR [eax-0x30]
  40934c:	adc    DWORD PTR [edx-0x5b9dfcf2],esp
  409352:	pop    esp
  409353:	inc    edi
  409354:	add    al,0xf6
  409356:	lods   al,BYTE PTR ds:[esi]
  409357:	xor    ch,BYTE PTR [ecx]
  409359:	out    dx,al
  40935a:	pop    esi
  40935c:	aas    
  40935d:	jmp    0x5969f2f7
  409362:	sbb    edx,DWORD PTR [esi]
  409364:	dec    ebp
  409365:	arpl   WORD PTR [ecx-0xa],si
  409368:	and    edx,esp
  40936a:	or     DWORD PTR ds:0x8c9441fd,ebp
  409370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409371:	xor    dl,al
  409373:	jns    0x4093c3
  409375:	cmp    dh,dh
  409377:	adc    bh,bh
  409379:	(bad)  
  40937a:	mov    ds:0x218e7ebf,al
  40937f:	ins    DWORD PTR es:[edi],dx
  409380:	push   ebp
  409381:	and    eax,0x807b22b1
  409386:	stos   BYTE PTR es:[edi],al
  409387:	cs mov esi,0x5d680efa
  40938d:	mov    eax,0x24c32563
  409392:	dec    edx
  409393:	retf   
  409394:	inc    eax
  409395:	sub    BYTE PTR [edi-0x44aaba7d],cl
  40939b:	aaa    
  40939c:	or     edx,DWORD PTR [esi-0x48dac530]
  4093a2:	add    eax,0xcfe55c3f
  4093a7:	fs inc edi
  4093a9:	jne    0x409355
  4093ab:	inc    edx
  4093ac:	mov    ?,WORD PTR [esi]
  4093ae:	(bad)  
  4093af:	loope  0x409373
  4093b1:	inc    ebx
  4093b2:	push   ds
  4093b3:	dec    ebx
  4093b4:	xor    BYTE PTR [ecx+0x64727f32],0xb9
  4093bb:	mov    dl,0x37
  4093bd:	jae    0x409387
  4093bf:	loop   0x4093f4
  4093c1:	call   0x4b65cde9
  4093c6:	or     cl,dh
  4093c8:	popf   
  4093c9:	outs   dx,DWORD PTR ds:[esi]
  4093ca:	adc    edx,DWORD PTR [edx-0x3bd93b92]
  4093d0:	shl    eax,1
  4093d2:	push   ecx
  4093d3:	cdq    
  4093d4:	out    dx,eax
  4093d5:	call   0xcc8dd183
  4093da:	sbb    DWORD PTR [ecx],0x67
  4093dd:	cmp    BYTE PTR [ecx-0x1f],cl
  4093e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093e1:	enter  0x98b,0xe9
  4093e5:	or     eax,0x10811d5f
  4093ea:	add    edi,0x81d74e51
  4093f0:	xor    al,0x1b
  4093f2:	(bad)  
  4093f3:	ficom  DWORD PTR [edx-0x15bd5a9c]
  4093f9:	sbb    dl,dl
  4093fb:	xchg   ebp,eax
  4093fc:	and    bh,ah
  4093fe:	xlat   BYTE PTR ds:[ebx]
  4093ff:	cli    
  409400:	dec    ebp
  409401:	xor    cl,BYTE PTR [ecx-0x636d370e]
  409407:	inc    edx
  409408:	cmp    BYTE PTR [ebx+edx*2+0x5c4cc28b],ch
  40940f:	pop    ss
  409410:	imul   BYTE PTR [esi]
  409412:	push   edi
  409413:	xchg   DWORD PTR [edx],edx
  409415:	pop    ebp
  409416:	cmp    esi,ecx
  409418:	mov    ds,WORD PTR ds:0x3fdb17a2
  40941e:	and    esi,ebp
  409420:	ror    BYTE PTR [edx+0x3e],0x40
  409424:	xchg   ebx,eax
  409425:	sub    al,0x21
  409427:	dec    ebx
  409428:	int3   
  409429:	ja     0x40948c
  40942b:	pop    esp
  40942c:	ja     0x409451
  40942e:	repnz inc edi
  409430:	mov    ds:0xbcb3d2f2,eax
  409435:	inc    ebx
  409436:	jnp    0x40941c
  409438:	ins    DWORD PTR es:[edi],dx
  409439:	pop    ecx
  40943a:	sub    dh,bh
  40943c:	cs add al,0x14
  40943f:	mov    dl,0xa1
  409441:	sbb    BYTE PTR [ebp-0x7f],0x98
  409445:	in     al,0xa
  409447:	pop    ebx
  409448:	push   edx
  409449:	mov    ds:0x6dd842eb,eax
  40944e:	lods   eax,DWORD PTR ds:[esi]
  40944f:	xor    eax,0x9a17156f
  409454:	in     al,0xce
  409456:	push   edi
  409457:	nop
  409458:	shl    DWORD PTR [eax],1
  40945a:	xor    esi,DWORD PTR [ebx]
  40945c:	push   edi
  40945d:	jge    0x409490
  40945f:	aas    
  409460:	(bad)  
  409462:	xor    eax,0xe006803b
  409467:	ds nop
  409469:	mov    cl,al
  40946b:	pop    esi
  40946c:	in     eax,dx
  40946d:	sub    cl,BYTE PTR [edx]
  40946f:	dec    ebx
  409470:	sbb    esp,DWORD PTR [edx]
  409472:	sub    ecx,edi
  409474:	outs   dx,DWORD PTR ds:[esi]
  409475:	mov    ebx,DWORD PTR [ebx+0x56]
  409478:	rcl    DWORD PTR [eax+0x608da39d],1
  40947e:	adc    eax,0x5b077681
  409483:	sub    BYTE PTR [edx+0x18],dl
  409486:	push   eax
  409487:	sti    
  409488:	pusha  
  409489:	jecxz  0x40948f
  40948b:	xor    eax,0xf2797169
  409490:	sub    esp,DWORD PTR [ecx]
  409492:	out    dx,al
  409493:	mov    edi,0x4e5871d1
  409498:	scas   al,BYTE PTR es:[edi]
  409499:	or     dh,BYTE PTR [ebx+ebx*2]
  40949c:	mov    dl,0xa2
  40949e:	xchg   edi,eax
  40949f:	(bad)  
  4094a0:	js     0x409489
  4094a2:	add    edi,DWORD PTR [esi-0x27]
  4094a5:	inc    esi
  4094a6:	adc    ecx,DWORD PTR fs:[edx+edx*4+0x6f]
  4094ab:	enter  0x8cd2,0x2c
  4094af:	loop   0x4094be
  4094b1:	dec    ecx
  4094b2:	xchg   edi,eax
  4094b3:	jb     0x4094a4
  4094b5:	popa   
  4094b6:	mov    BYTE PTR [eax-0x7c25cc70],ah
  4094bc:	sbb    eax,DWORD PTR [edi]
  4094be:	pop    edx
  4094c0:	xchg   BYTE PTR [ebx],dh
  4094c2:	mov    WORD PTR ds:0x646ae2f4,?
  4094c8:	cli    
  4094c9:	adc    al,0xb4
  4094cb:	push   ecx
  4094cc:	push   ds
  4094cd:	outs   dx,DWORD PTR ds:[esi]
  4094ce:	shl    DWORD PTR ds:0x3ad47118,1
  4094d4:	lock stos DWORD PTR es:[edi],eax
  4094d6:	mov    DWORD PTR [ecx-0x3161e348],esi
  4094dc:	clc    
  4094dd:	dec    edi
  4094de:	adc    al,0x20
  4094e0:	mov    WORD PTR [edx],gs
  4094e2:	xchg   ebx,eax
  4094e3:	pop    ebx
  4094e4:	mov    ds:0x9a4da1e1,al
  4094e9:	pushf  
  4094ea:	xor    esp,DWORD PTR [edx+ecx*2]
  4094ed:	jbe    0x4094c5
  4094ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094f0:	lods   eax,DWORD PTR ds:[esi]
  4094f1:	ja     0x40947b
  4094f3:	dec    edx
  4094f4:	add    al,0xed
  4094f6:	sbb    BYTE PTR [edx-0x20],ch
  4094f9:	jae    0x409495
  4094fb:	xor    BYTE PTR [ebx-0x3bf7b460],ah
  409501:	inc    ecx
  409502:	xchg   edi,eax
  409503:	into   
  409504:	mov    ecx,0x5b88d9d6
  409509:	loopne 0x4094bb
  40950b:	scas   eax,DWORD PTR es:[edi]
  40950c:	(bad)  
  40950d:	fistp  DWORD PTR ds:0xab402576
  409513:	jmp    0xe888:0xc453a9b5
  40951a:	mov    al,0x67
  40951c:	jbe    0x40951d
  40951e:	cmp    BYTE PTR ds:0x9c3cda1,dh
  409524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409525:	dec    esp
  409526:	rcl    edx,0xa1
  409529:	inc    ebx
  40952a:	mov    esp,DWORD PTR [ebx]
  40952c:	mov    al,0x3a
  40952e:	shl    al,1
  409530:	mov    eax,ds:0x2d6f2216
  409535:	jecxz  0x4094f9
  409537:	sub    BYTE PTR [edx-0x5d30680e],cl
  40953d:	outs   dx,BYTE PTR ds:[esi]
  40953e:	jp     0x4094f2
  409540:	test   BYTE PTR [ecx+0x43aa8339],ch
  409546:	sub    bh,BYTE PTR [esi-0x311662d2]
  40954c:	test   al,0xe2
  40954e:	cli    
  40954f:	out    0x6c,eax
  409551:	xchg   BYTE PTR [ecx-0x87d6d97],dl
  409557:	adc    edx,eax
  409559:	rcl    DWORD PTR [edi+0x2cea200a],0x13
  409560:	imul   eax,DWORD PTR ds:0xf6f759c8,0x3
  409568:	adc    eax,0x7cf2799d
  40956d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40956e:	arpl   WORD PTR [ebx+0x12],di
  409571:	enter  0xf511,0x5f
  409575:	mov    edx,0x297b0ede
  40957a:	add    DWORD PTR [ebx+edi*8],0x19e2ac61
  409581:	lea    edx,[esi]
  409583:	leave  
  409584:	push   esi
  409585:	test   DWORD PTR [ebp-0x27],esi
  409588:	cmp    DWORD PTR [ebp-0xc13d5c],eax
  40958e:	std    
  40958f:	imul   edi,DWORD PTR [ecx+0x68],0xa2572ce7
  409596:	repz jns 0x4095a4
  409599:	inc    ebx
  40959a:	adc    al,BYTE PTR gs:[ebx]
  40959d:	sbb    eax,DWORD PTR [ebx-0x45]
  4095a0:	lds    ebp,FWORD PTR [edx]
  4095a2:	push   ebx
  4095a3:	and    edx,DWORD PTR [ebx-0x52]
  4095a6:	(bad)  
  4095a7:	xchg   DWORD PTR ss:[edi+0x7a0b8587],eax
  4095ae:	aaa    
  4095af:	xor    esi,esi
  4095b1:	add    al,BYTE PTR [ebx+0x3c]
  4095b4:	aas    
  4095b5:	push   ds
  4095b6:	and    dl,BYTE PTR [eax-0x44]
  4095b9:	(bad)  
  4095ba:	(bad)  
  4095bb:	in     al,dx
  4095bc:	shrd   DWORD PTR [ebx-0x2b0298ce],ecx,0xa4
  4095c4:	jbe    0x4095b9
  4095c6:	loopne 0x40961d
  4095c8:	dec    ebp
  4095c9:	lods   al,BYTE PTR ds:[esi]
  4095ca:	frstor [esi-0x3b]
  4095cd:	push   ebx
  4095ce:	dec    esi
  4095cf:	mov    eax,ds:0x42c596e8
  4095d4:	je     0x40955d
  4095d6:	rcr    bl,1
  4095d8:	clc    
  4095d9:	adc    ch,dl
  4095db:	bound  ebp,QWORD PTR [esi+0x18]
  4095de:	inc    edi
  4095df:	jne    0x40964b
  4095e1:	arpl   WORD PTR ds:0xdf352eb4,ax
  4095e7:	mov    ebp,0x46570d97
  4095ec:	sahf   
  4095ed:	cs push edi
  4095ef:	mov    al,al
  4095f1:	es scas eax,DWORD PTR es:[edi]
  4095f3:	push   ebp
  4095f4:	retf   0xe755
  4095f7:	inc    ecx
  4095f8:	or     BYTE PTR [edi+0x2e8531a8],bl
  4095fe:	lea    edi,[eax+0x19]
  409601:	push   eax
  409602:	pop    edi
  409603:	inc    esp
  409604:	ficomp WORD PTR [ecx]
  409606:	mov    ds:0x31abab15,al
  40960b:	dec    ebx
  40960c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960d:	into   
  40960e:	enter  0x71ec,0x47
  409612:	dec    eax
  409613:	arpl   WORD PTR [ecx],dx
  409615:	rcr    DWORD PTR [ebx+0x58],1
  409618:	scas   eax,DWORD PTR es:[edi]
  409619:	ret    0xbb9b
  40961c:	in     al,0x40
  40961e:	jo     0x4095fb
  409620:	xchg   edi,eax
  409621:	loopne 0x409610
  409623:	cmc    
  409624:	sub    ebp,eax
  409626:	inc    ecx
  409627:	jnp    0x4095be
  409629:	dec    edx
  40962a:	mov    edi,DWORD PTR [ecx-0xaf58d6b]
  409630:	js     0x409610
  409632:	fcmove st,st(4)
  409634:	cmp    cl,BYTE PTR [ebp*8-0x5b5fce6f]
  40963b:	mov    bh,0x4f
  40963d:	setle  BYTE PTR [ebx]
  409640:	mov    esi,0x3cd6828e
  409645:	add    al,0x38
  409647:	sti    
  409648:	add    al,0x48
  40964a:	jecxz  0x409616
  40964c:	outs   dx,BYTE PTR ds:[esi]
  40964d:	(bad)  
  40964e:	mov    ah,0x28
  409650:	call   DWORD PTR [edi]
  409652:	adc    eax,0x537d7aff
  409657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409658:	push   es
  409659:	or     BYTE PTR [ebx+ebp*8+0x76c7f802],al
  409660:	or     eax,0xbdedec73
  409665:	shr    BYTE PTR [edi],0x8b
  409668:	xchg   esi,eax
  409669:	cmp    edx,edi
  40966b:	std    
  40966c:	pop    edi
  40966d:	iret   
  40966e:	pop    ecx
  40966f:	jns    0x409624
  409671:	mov    bh,0x9b
  409673:	cmp    al,0x59
  409675:	(bad)  
  409676:	cmp    eax,0x303e4227
  40967b:	jns    0x409646
  40967d:	scas   eax,DWORD PTR es:[edi]
  40967e:	test   esi,eax
  409680:	leave  
  409681:	or     BYTE PTR [esi-0x71],0x5
  409685:	jge    0x40964b
  409687:	aaa    
  409688:	aaa    
  409689:	in     al,0x2
  40968b:	push   esi
  40968c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40968d:	pop    edx
  40968e:	pop    esp
  40968f:	das    
  409690:	retf   
  409691:	popf   
  409692:	mov    bl,0x8b
  409694:	add    eax,0xe25574f9
  409699:	(bad)
  40969c:	mov    ds:0x4052d90,eax
  4096a1:	(bad)  
  4096a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096a3:	clc    
  4096a4:	mov    ah,0x8d
  4096a6:	sub    esi,DWORD PTR [ebx]
  4096a8:	dec    edx
  4096a9:	dec    ecx
  4096aa:	js     0x4096df
  4096ac:	fwait
  4096ad:	(bad)  
  4096ae:	je     0x40972e
  4096b0:	jno    0x40970c
  4096b2:	test   DWORD PTR [edx+0x40],0xcc7fe475
  4096b9:	imul   DWORD PTR [di]
  4096bc:	jmp    0x4dae2f49
  4096c1:	or     ch,dl
  4096c3:	mov    ch,0xb7
  4096c5:	xchg   edx,eax
  4096c6:	jle    0x40965f
  4096c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c9:	adc    al,0x87
  4096cb:	es retf 
  4096cd:	push   esp
  4096ce:	jae    0x4096cf
  4096d0:	cmp    BYTE PTR [edi],dl
  4096d2:	xchg   ecx,eax
  4096d3:	mov    ah,0xdc
  4096d5:	in     eax,0xf1
  4096d7:	inc    ecx
  4096d8:	dec    esi
  4096d9:	dec    esp
  4096da:	xor    eax,0xaaa5790c
  4096df:	(bad)  
  4096e0:	fidiv  WORD PTR [eax]
  4096e2:	mov    dl,0x74
  4096e4:	adc    BYTE PTR ds:0x55d570e0,ah
  4096ea:	pop    edi
  4096eb:	shl    ah,0x6
  4096ee:	push   0x8d576da5
  4096f3:	retf   0x40ca
  4096f6:	sahf   
  4096f7:	in     al,dx
  4096f8:	inc    esi
  4096f9:	fsub   QWORD PTR [esi+0x4a]
  4096fc:	jmp    0x49b3:0x638a53e3
  409703:	aad    0x13
  409705:	xor    BYTE PTR [edi],al
  409707:	sub    eax,0xd10fd70c
  40970c:	fldcw  WORD PTR [esp+esi*4+0x35c0a0bf]
  409713:	jae    0x409725
  409715:	fld    DWORD PTR [ecx+0x5c3c1831]
  40971b:	mov    ecx,0xf15e5d3b
  409720:	lea    eax,[ecx]
  409722:	sub    BYTE PTR [esi-0x3c211f70],cl
  409728:	jnp    0x4096b0
  40972a:	(bad)  
  40972b:	out    0xd8,eax
  40972d:	std    
  40972e:	ins    BYTE PTR es:[edi],dx
  40972f:	fisubr WORD PTR [edi]
  409731:	pop    ds
  409732:	dec    esi
  409733:	and    BYTE PTR [esi-0xb68c4ad],bh
  409739:	mov    bh,0x1c
  40973b:	daa    
  40973c:	rcr    BYTE PTR [edi],cl
  40973e:	rol    DWORD PTR [edx],cl
  409740:	adc    eax,0x9d93b49f
  409745:	popf   
  409746:	in     eax,0x97
  409748:	dec    edi
  409749:	inc    BYTE PTR [ecx-0x37e0c7a8]
  40974f:	leave  
  409750:	sbb    eax,0x76120dd3
  409755:	outs   dx,BYTE PTR ds:[esi]
  409756:	inc    eax
  409757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409758:	jo     0x4096fa
  40975a:	in     eax,dx
  40975b:	inc    eax
  40975c:	leave  
  40975d:	adc    BYTE PTR [esi],ah
  40975f:	sub    BYTE PTR [ecx+0x43],cl
  409762:	dec    eax
  409763:	push   0xffffffc1
  409765:	sub    BYTE PTR [ebx],0xb9
  409768:	in     al,0xfb
  40976a:	mov    ah,0xd1
  40976c:	cmc    
  40976d:	mov    ecx,0xd66d147a
  409772:	mov    ah,0xf4
  409774:	daa    
  409775:	jmp    0x409780
  409777:	rcr    DWORD PTR [ebx+0x1f2b4deb],cl
  40977d:	dec    ebp
  40977e:	adc    cl,cl
  409780:	daa    
  409781:	sub    bh,BYTE PTR cs:[esi+0x8bfa514]
  409788:	icebp  
  409789:	mov    edi,0x3ff58458
  40978e:	fdiv   DWORD PTR [edi-0x7b]
  409791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409792:	mov    ah,0x72
  409794:	(bad)  
  409795:	xlat   BYTE PTR ds:[ebx]
  409796:	mov    ebp,0xcda22ef0
  40979b:	mov    WORD PTR gs:[ecx+0x55],cs
  40979f:	(bad)  
  4097a0:	jae    0x409734
  4097a2:	fucomip st,st(3)
  4097a4:	mov    fs,WORD PTR [esi]
  4097a6:	mov    ah,0x1b
  4097a8:	js     0x409813
  4097aa:	ffree  st(0)
  4097ac:	call   FWORD PTR [edx+esi*8-0x2ad1cf78]
  4097b3:	and    al,0x77
  4097b5:	jnp    0x40982d
  4097b7:	enter  0x6e93,0xf0
  4097bb:	dec    eax
  4097bc:	shl    edx,1
  4097be:	stos   BYTE PTR es:[edi],al
  4097bf:	or     bh,BYTE PTR [ecx+0x24]
  4097c2:	cdq    
  4097c3:	out    dx,eax
  4097c4:	mov    BYTE PTR [esi],0x4d
  4097c7:	hlt    
  4097c8:	pop    es
  4097c9:	test   DWORD PTR [esi],ecx
  4097cb:	and    BYTE PTR [eax+0x14d51a85],al
  4097d1:	jns    0x4097af
  4097d3:	mov    dh,0x7d
  4097d5:	jmp    0x4097f3
  4097d7:	cli    
  4097d8:	aam    0xf3
  4097da:	cmp    eax,0x3ad66f79
  4097df:	data16 cmp BYTE PTR [ebp-0x6e71fa78],dh
  4097e6:	shl    DWORD PTR [ecx+0x7e],cl
  4097e9:	sbb    al,0xb2
  4097eb:	out    0xe4,al
  4097ed:	out    0xa,al
  4097ef:	push   edi
  4097f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f1:	loopne 0x40984d
  4097f3:	dec    ecx
  4097f4:	fucomip st,st(5)
  4097f6:	cmp    bl,ah
  4097f8:	sbb    esi,DWORD PTR [eax+0x5f]
  4097fb:	aam    0x6d
  4097fd:	adc    BYTE PTR [edx+0x41fa767d],dh
  409803:	mov    ch,0x7b
  409805:	mov    eax,ds:0x118bec0b
  40980a:	push   0x33
  40980c:	cmp    eax,0x369499b
  409811:	outs   dx,DWORD PTR ds:[esi]
  409812:	xor    DWORD PTR [esi+0x1c],0x1d
  409816:	sub    ebx,DWORD PTR [ecx+0x2]
  409819:	mov    edi,0x7cc2acfa
  40981e:	in     al,dx
  40981f:	fsub   DWORD PTR [eax+eiz*8-0x56]
  409823:	xchg   edi,eax
  409824:	xchg   edx,eax
  409825:	ss dec eax
  409827:	xor    DWORD PTR ds:0xb458c298,edi
  40982d:	int    0x10
  40982f:	mov    edx,0xc820f9a9
  409834:	iret   
  409835:	mov    cl,0x46
  409837:	push   edi
  409838:	out    dx,al
  409839:	iret   
  40983a:	sbb    BYTE PTR [edx],ch
  40983c:	lahf   
  40983d:	popf   
  40983e:	sub    ebp,DWORD PTR [esi]
  409840:	push   ds
  409841:	icebp  
  409842:	push   0x13
  409844:	jns    0x409880
  409846:	jno    0x409887
  409848:	cmp    esi,0x5dbf71fa
  40984e:	aaa    
  40984f:	inc    ebx
  409850:	inc    edx
  409851:	mov    ah,0x7d
  409853:	(bad)  
  409854:	jne    0x4098d0
  409856:	dec    ebp
  409857:	xlat   BYTE PTR ds:[ebx]
  409858:	pop    ss
  409859:	retf   
  40985a:	ror    DWORD PTR [ebx+ebx*8],0x4d
  40985e:	xor    eax,0xc0b7480
  409863:	xor    eax,0xa8879533
  409868:	pop    ecx
  409869:	aad    0x4a
  40986b:	cmp    ebp,DWORD PTR [edx-0x40]
  40986e:	jo     0x4097f7
  409870:	in     eax,dx
  409871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409872:	pop    esi
  409873:	push   esp
  409874:	clc    
  409875:	int3   
  409876:	sbb    DWORD PTR cs:0xfc4a5231,edi
  40987d:	popa   
  40987e:	sub    bl,BYTE PTR [ebx]
  409880:	je     0x40984b
  409882:	inc    ecx
  409883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409884:	outs   dx,DWORD PTR ds:[esi]
  409885:	and    eax,0xcaddf282
  40988a:	sbb    bh,cl
  40988c:	xor    al,0x1c
  40988e:	inc    ecx
  40988f:	inc    edi
  409890:	retf   0xc4af
  409893:	or     DWORD PTR [esi],edx
  409895:	xor    esp,edi
  409897:	xor    BYTE PTR [ecx-0x5e],cl
  40989a:	(bad)  
  40989b:	shl    DWORD PTR [eax],0xd2
  40989e:	jo     0x40991c
  4098a0:	jmp    0x75ff:0x1e08df5a
  4098a7:	adc    DWORD PTR ds:0x33a8a916,esi
  4098ad:	in     eax,0xf1
  4098af:	adc    ch,BYTE PTR [ecx+0x40]
  4098b2:	sbb    ecx,DWORD PTR [ebx+0x36]
  4098b5:	pop    esi
  4098b6:	or     esi,DWORD PTR [esi+0x5c]
  4098b9:	jae    0x4098bc
  4098bb:	mov    ss,WORD PTR [edi+ebx*8]
  4098be:	sbb    eax,0x8413b5b3
  4098c3:	sar    BYTE PTR [ecx],cl
  4098c5:	out    dx,al
  4098c6:	(bad)  
  4098c7:	push   cs
  4098c8:	lods   eax,DWORD PTR ds:[esi]
  4098c9:	inc    esi
  4098ca:	push   0x41
  4098cc:	push   eax
  4098cd:	cmc    
  4098ce:	adc    DWORD PTR [esi+0x150888f9],esp
  4098d4:	inc    esp
  4098d5:	push   ebp
  4098d6:	push   esp
  4098d7:	mov    edi,0xce3d1243
  4098dc:	xor    esp,DWORD PTR [eax]
  4098de:	push   esp
  4098df:	mov    eax,0x947fe1e3
  4098e4:	and    BYTE PTR [edi-0x1b],ah
  4098e7:	lods   eax,DWORD PTR ds:[esi]
  4098e8:	cmp    al,0xd0
  4098ea:	xor    al,0x57
  4098ec:	push   ss
  4098ed:	cmp    esi,DWORD PTR [esi]
  4098ef:	push   ecx
  4098f0:	add    eax,0x30d6a3f
  4098f5:	push   0x3cab6fff
  4098fa:	dec    esi
  4098fb:	mov    bl,0x34
  4098fd:	dec    esp
  4098fe:	xor    al,bh
  409900:	pop    ds
  409901:	fisttp WORD PTR [edx]
  409903:	cdq    
  409904:	lahf   
  409905:	mov    ds:0xb41f8ca1,al
  40990a:	mov    dh,0xc5
  40990c:	nop
  40990d:	pop    es
  40990e:	sbb    bh,cl
  409910:	sub    al,0xda
  409913:	movups XMMWORD PTR [esi-0x4b],xmm6
  409917:	data16 gs aas 
  40991a:	jo     0x409999
  40991c:	xchg   ecx,eax
  40991d:	pop    edx
  40991e:	xchg   ebx,eax
  40991f:	arpl   WORD PTR ds:0xcac0245a,sp
  409925:	mov    eax,0xb2424549
  40992a:	cmc    
  40992b:	dec    edi
  40992c:	cs ffree st(7)
  40992f:	into   
  409930:	lahf   
  409931:	test   BYTE PTR [edi-0x6400510a],al
  409937:	mov    ds:0x18c79144,al
  40993c:	rcl    DWORD PTR [edx],0x2
  40993f:	adc    DWORD PTR [edi],0x1241b4d6
  409945:	(bad)  
  409946:	sbb    DWORD PTR [ebp+0x7],esi
  409949:	mov    ch,0xd1
  40994b:	inc    ecx
  40994c:	xor    al,0x6
  40994e:	sahf   
  40994f:	jmp    0x30493403
  409954:	add    eax,0xae55bd99
  409959:	xchg   edi,eax
  40995a:	in     eax,dx
  40995b:	inc    ebx
  40995c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40995d:	and    bl,dl
  40995f:	mov    WORD PTR gs:[esi],cs
  409962:	xchg   DWORD PTR [esi+ebx*4],esi
  409965:	(bad)  
  409967:	sbb    eax,DWORD PTR [edx+0x6839e21b]
  40996d:	and    dh,ch
  40996f:	scas   eax,DWORD PTR es:[edi]
  409970:	pop    ebp
  409971:	fucomip st,st(4)
  409973:	loope  0x409931
  409975:	es aaa 
  409977:	xor    eax,0x6a6226
  40997c:	rol    DWORD PTR [esi+0x73],cl
  40997f:	sub    BYTE PTR [ecx+0x64103b27],bl
  409985:	push   ebx
  409986:	dec    esi
  409987:	shr    BYTE PTR [ebp+0xc],0xb
  40998b:	fwait
  40998c:	shl    DWORD PTR [ecx],cl
  40998e:	sbb    ebp,DWORD PTR [eax+edx*4+0x8]
  409992:	push   ebx
  409993:	inc    bh
  409995:	jp     0x40993c
  409997:	bound  edx,QWORD PTR ds:0xf7863a53
  40999d:	sub    dl,bh
  40999f:	das    
  4099a0:	and    dl,cl
  4099a2:	sub    al,0xa0
  4099a4:	outs   dx,BYTE PTR ds:[esi]
  4099a5:	sbb    BYTE PTR [eax+0x11],dl
  4099a8:	sub    eax,0x8d8914dd
  4099ad:	push   0x63
  4099af:	call   0xde6f8f28
  4099b4:	retf   
  4099b5:	or     BYTE PTR [edx+0x61],ah
  4099b8:	add    eax,0x3c051a8d
  4099bd:	mov    dl,0x67
  4099bf:	jmp    0xbe71:0xcfd201df
  4099c6:	lods   eax,DWORD PTR ds:[esi]
  4099c7:	stos   DWORD PTR es:[edi],eax
  4099c8:	adc    edx,DWORD PTR [edi+esi*2-0xd]
  4099cc:	sbb    esp,DWORD PTR [edx+0x7ccc2679]
  4099d2:	push   0x56
  4099d4:	adc    DWORD PTR [ebp+0x5],0x5f
  4099d8:	push   esp
  4099d9:	retf   
  4099da:	cmc    
  4099db:	je     0x4099f8
  4099dd:	dec    ecx
  4099de:	or     dl,cl
  4099e0:	mov    esp,0xf4a6073e
  4099e5:	and    DWORD PTR [ecx+edx*2-0x2b],edx
  4099e9:	push   edx
  4099ea:	adc    BYTE PTR [ebx+0x9],cl
  4099ed:	retf   0x2e8e
  4099f0:	clc    
  4099f1:	mov    bl,0xd6
  4099f3:	in     eax,0x66
  4099f5:	imul   esi,esp,0xfffffff1
  4099f8:	hlt    
  4099f9:	add    eax,0x7905c4b3
  4099fe:	mov    dh,0x65
  409a00:	mov    eax,DWORD PTR [ebp-0x6482d7f9]
  409a06:	mov    ds:0x8b08221a,eax
  409a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a0c:	push   ss
  409a0d:	inc    ecx
  409a0e:	popf   
  409a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a10:	adc    al,ah
  409a12:	mov    ch,0xa8
  409a14:	repnz xor eax,0x283afe96
  409a1a:	jge    0x409a68
  409a1c:	add    BYTE PTR [eax+0x59],al
  409a1f:	hlt    
  409a20:	sbb    eax,0x41557586
  409a25:	(bad)  [ecx+edi*8]
  409a28:	cmp    ah,BYTE PTR [esi+0x5c750f4d]
  409a2e:	sub    cl,BYTE PTR [eax]
  409a30:	mov    ah,0x12
  409a32:	lods   al,BYTE PTR ds:[esi]
  409a33:	jo     0x409a1a
  409a35:	or     al,ah
  409a37:	int3   
  409a38:	popa   
  409a39:	push   ebp
  409a3a:	std    
  409a3b:	clc    
  409a3c:	fstp   DWORD PTR ds:0x3d422ec9
  409a42:	sub    DWORD PTR [esi+0xc5e3831],edi
  409a48:	dec    edi
  409a49:	clc    
  409a4a:	cmp    eax,0xc947ece9
  409a4f:	jmp    0x498e:0xd37870b7
  409a56:	(bad)  
  409a57:	cld    
  409a58:	sbb    al,0x43
  409a5a:	xor    al,0x64
  409a5c:	pop    es
  409a5d:	mov    ds:0xb7058e66,eax
  409a62:	and    ebx,DWORD PTR [ecx-0x4523e7ea]
  409a68:	adc    eax,0xe8d6ea6e
  409a6d:	pop    edi
  409a6e:	jge    0x409a80
  409a70:	pop    ss
  409a71:	sub    BYTE PTR [ebx+0x78eb166e],0x3f
  409a78:	inc    eax
  409a79:	retf   0x29d8
  409a7c:	sar    DWORD PTR [ebp-0x40],1
  409a7f:	aas    
  409a80:	aad    0x51
  409a82:	(bad)  
  409a85:	dec    edi
  409a86:	outs   dx,BYTE PTR ds:[esi]
  409a87:	add    ebp,ebp
  409a89:	mov    bh,0x56
  409a8b:	xlat   BYTE PTR ds:[ebx]
  409a8c:	clc    
  409a8d:	imul   edi,DWORD PTR [ecx+0x5d],0x2a
  409a91:	pop    ebx
  409a92:	sub    ah,dh
  409a94:	or     BYTE PTR [ebx+eax*2-0xd1023b3],ah
  409a9b:	sub    al,0x4b
  409a9d:	lds    edx,FWORD PTR [ebp+ebx*8-0x26]
  409aa1:	push   esp
  409aa2:	jecxz  0x409b20
  409aa4:	dec    esp
  409aa5:	(bad)  
  409aa6:	bound  ebp,QWORD PTR ss:[eax-0x44]
  409aaa:	and    BYTE PTR [eax+ebp*2+0x70],0x38
  409aaf:	dec    ecx
  409ab0:	retf   0x257
  409ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ab4:	icebp  
  409ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ab6:	clc    
  409ab7:	pop    es
  409ab8:	fs and ah,ah
  409abb:	or     esi,esi
  409abd:	push   ds
  409abe:	inc    ebp
  409abf:	mov    esi,0xc18944a
  409ac4:	add    al,0xc1
  409ac6:	jns    0x409a72
  409ac8:	leave  
  409ac9:	push   ds
  409aca:	adc    eax,0xf19b975f
  409acf:	jnp    0x409a99
  409ad1:	mov    dh,0x5f
  409ad3:	pop    esp
  409ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ad5:	out    dx,eax
  409ad6:	cdq    
  409ad7:	in     al,dx
  409ad8:	or     al,0x1b
  409ada:	nop
  409adb:	std    
  409adc:	xor    eax,DWORD PTR [eax+0x3bf8f516]
  409ae2:	es inc esp
  409ae4:	mov    dh,0x81
  409ae6:	retf   
  409ae7:	mul    DWORD PTR [edi+0x300d9e19]
  409aed:	scas   eax,DWORD PTR es:[edi]
  409aee:	mov    ah,0xb
  409af0:	inc    eax
  409af1:	leave  
  409af2:	call   0x9bd7:0x1cdf73b
  409af9:	jbe    0x409ad0
  409afb:	outs   dx,DWORD PTR ds:[esi]
  409afc:	outs   dx,BYTE PTR ds:[esi]
  409afd:	and    al,0xcc
  409aff:	add    DWORD PTR [eax],esp
  409b01:	int    0x37
  409b03:	add    DWORD PTR [esp+edx*4],0x6e
  409b07:	cdq    
  409b08:	inc    ebx
  409b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0a:	and    dh,BYTE PTR [esi+ebp*2-0x70]
  409b0e:	and    eax,0xb55a797b
  409b13:	inc    esp
  409b14:	dec    ebx
  409b15:	and    ch,dh
  409b17:	jecxz  0x409aa8
  409b19:	sub    DWORD PTR [edi],ebx
  409b1b:	sub    edi,DWORD PTR ds:0x9401099f
  409b21:	pop    edx
  409b22:	jmp    0x409b5f
  409b24:	(bad)  
  409b25:	ins    BYTE PTR es:[edi],dx
  409b26:	dec    esp
  409b27:	int3   
  409b28:	or     eax,0xa82c1ff8
  409b2d:	shl    BYTE PTR [edx+0x53fa7905],cl
  409b33:	xor    al,0x5e
  409b35:	jmp    0x412b:0x6e70ddd4
  409b3c:	ss loop 0x409b79
  409b3f:	xchg   BYTE PTR [edi+0x46],dl
  409b42:	adc    eax,0xe0c73468
  409b47:	mov    esi,0x333faef4
  409b4c:	sub    esp,eax
  409b4e:	loop   0x409b23
  409b50:	cmp    eax,0xa3ca6792
  409b55:	pop    ds
  409b56:	jno    0x409afe
  409b58:	dec    edx
  409b59:	pop    edx
  409b5a:	sbb    al,0x68
  409b5c:	jmp    FWORD PTR [ebx+edx*2-0x21]
  409b60:	dec    ecx
  409b61:	mov    bh,0x3f
  409b63:	mov    ecx,0x3fd7d95f
  409b68:	aad    0xd6
  409b6a:	pop    ss
  409b6b:	(bad)  
  409b6c:	pushf  
  409b6d:	retf   
  409b6e:	(bad)  
  409b6f:	outs   dx,BYTE PTR ds:[esi]
  409b70:	and    ebp,edi
  409b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b73:	sub    BYTE PTR [ebp+eax*1-0x49],bh
  409b77:	mov    ch,BYTE PTR [eax*1+0x61071e2c]
  409b7e:	or     edx,ebp
  409b80:	pop    ebp
  409b81:	mov    eax,ds:0xa2d1d17e
  409b86:	push   edx
  409b87:	push   esp
  409b88:	add    dh,bh
  409b8a:	push   ecx
  409b8b:	push   esp
  409b8c:	mul    DWORD PTR [edx+0x1e]
  409b8f:	mov    bh,0x7c
  409b91:	test   BYTE PTR [ebp-0x1290495c],bh
  409b97:	inc    ebx
  409b98:	fisub  WORD PTR [ebp-0x27000be4]
  409b9e:	xchg   ebx,eax
  409b9f:	retf   
  409ba0:	cmp    BYTE PTR [esi],cl
  409ba2:	je     0x409b58
  409ba4:	xchg   edx,eax
  409ba5:	repz adc al,0xf
  409ba8:	ja     0x409c1e
  409baa:	in     eax,0x48
  409bac:	test   eax,0x58dee3d9
  409bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bb2:	sbb    al,0x67
  409bb4:	mov    esi,0x9a403349
  409bb9:	pop    ebx
  409bba:	jle    0x409c14
  409bbc:	mov    esi,0x832bebc9
  409bc1:	dec    ebx
  409bc2:	jne    0x409c06
  409bc4:	adc    BYTE PTR [ecx+edi*8+0x7e],dh
  409bc8:	xchg   esp,eax
  409bc9:	push   ecx
  409bca:	pop    eax
  409bcb:	pop    edi
  409bcc:	aaa    
  409bcd:	(bad)  [edi]
  409bcf:	pop    ss
  409bd0:	test   al,0x35
  409bd2:	and    BYTE PTR [ebp+eax*1+0x73a04b6b],0x39
  409bda:	js     0x409b6a
  409bdc:	sbb    BYTE PTR [edi],al
  409bde:	xchg   esi,eax
  409bdf:	mov    DWORD PTR [ebp-0x9325dc7],eax
  409be5:	xchg   edx,eax
  409be6:	js     0x409c42
  409be8:	cld    
  409be9:	jp     0x409b6b
  409beb:	pop    edx
  409bec:	nop
  409bed:	jbe    0x409b94
  409bef:	jnp    0x409c0e
  409bf1:	cs mov cl,0xf2
  409bf4:	inc    edx
  409bf5:	jmp    0x409b86
  409bf7:	cmp    al,0x57
  409bf9:	mov    es,WORD PTR [eax+0x5d]
  409bfc:	mov    ds:0xee6509e6,al
  409c01:	iret   
  409c02:	inc    esi
  409c03:	dec    ebx
  409c04:	in     eax,dx
  409c05:	inc    ebp
  409c06:	jne    0x409bb9
  409c08:	mov    bh,0x75
  409c0a:	mov    al,ds:0xdb3d7eb8
  409c0f:	or     al,0x4
  409c11:	jo     0x409c8b
  409c13:	out    dx,eax
  409c14:	mov    BYTE PTR [esi-0x7d],ch
  409c17:	push   0x359d6514
  409c1c:	sub    al,0xd8
  409c1e:	icebp  
  409c1f:	inc    edx
  409c20:	and    bh,dl
  409c22:	std    
  409c23:	retf   
  409c24:	mov    bh,0xd0
  409c26:	jbe    0x409c23
  409c28:	(bad)  
  409c29:	xchg   edi,eax
  409c2a:	sbb    DWORD PTR [ebx+esi*8],0xffffffe8
  409c2e:	repnz sub eax,0xd18f8461
  409c34:	aam    0xa3
  409c36:	aad    0x5c
  409c38:	adc    al,0xd9
  409c3a:	inc    DWORD PTR [edi]
  409c3c:	cmp    DWORD PTR [edi+0x4f],0x1a3f822f
  409c43:	les    esi,FWORD PTR [edi]
  409c45:	ins    BYTE PTR es:[edi],dx
  409c46:	mov    eax,ds:0xb4566a14
  409c4b:	mov    esp,esi
  409c4d:	sub    eax,0x3fdcaa89
  409c52:	jb     0x409c67
  409c54:	ja     0x409cc8
  409c56:	sub    ecx,DWORD PTR [edi-0x55]
  409c59:	and    DWORD PTR [esi-0x2b0e1c5b],0xffffffe6
  409c60:	dec    edx
  409c61:	fwait
  409c62:	or     DWORD PTR [ebp-0x7872d14c],esp
  409c68:	loopne 0x409cdb
  409c6a:	pop    esp
  409c6b:	dec    eax
  409c6c:	xchg   edx,eax
  409c6d:	adc    BYTE PTR [edx],0x21
  409c70:	int3   
  409c71:	mov    BYTE PTR [edx],al
  409c73:	adc    bh,BYTE PTR [edx-0x66c5fc71]
  409c79:	ret    0xa08d
  409c7c:	sub    eax,0xb3c6895d
  409c81:	fxam   
  409c83:	retf   
  409c84:	out    0x84,eax
  409c86:	sbb    eax,0xeac34954
  409c8b:	or     DWORD PTR [ebx+0x62e43ca7],ecx
  409c91:	mov    ds:0x2a6dcdd6,al
  409c96:	je     0x409c95
  409c98:	mov    ebp,0xf5ed949
  409c9d:	ss sub eax,0x18c8ae44
  409ca3:	in     al,0xf9
  409ca5:	aad    0x82
  409ca7:	adc    esp,DWORD PTR [esi-0x58]
  409caa:	cmp    ebp,DWORD PTR [ecx+0x34]
  409cad:	dec    ebx
  409cae:	cdq    
  409caf:	sahf   
  409cb0:	sub    eax,DWORD PTR [esi-0x5b]
  409cb3:	xchg   BYTE PTR [ebp-0x5239131d],dl
  409cb9:	std    
  409cba:	sbb    BYTE PTR [esi],bl
  409cbc:	loop   0x409c68
  409cbe:	stos   DWORD PTR es:[edi],eax
  409cbf:	jns    0x409cf4
  409cc1:	sar    ch,0x65
  409cc4:	imul   edi,esp,0x66dd95b7
  409cca:	add    BYTE PTR [esi-0xc],0x4c
  409cce:	popf   
  409ccf:	add    edx,DWORD PTR [eax+edi*4+0x4868693e]
  409cd6:	add    BYTE PTR [edi],0xf4
  409cd9:	aas    
  409cda:	pop    ecx
  409cdb:	rcr    eax,cl
  409cdd:	dec    esi
  409cde:	sub    ch,BYTE PTR [ecx-0x76144a21]
  409ce4:	xlat   BYTE PTR ds:[ebx]
  409ce5:	push   esi
  409ce6:	ficomp DWORD PTR [ebx+esi*1+0x29]
  409cea:	les    edx,FWORD PTR [ebp-0x17a41a2f]
  409cf0:	int    0xac
  409cf2:	jmp    0x3841:0x3be6bb5f
  409cf9:	pop    ecx
  409cfa:	push   ds
  409cfb:	ret    0xc0c9
  409cfe:	mov    eax,ds:0x48471a29
  409d03:	or     DWORD PTR [edx],esp
  409d05:	mov    dl,ch
  409d07:	sub    DWORD PTR [ecx-0xb4d7502],edx
  409d0d:	rcl    DWORD PTR [esi],cl
  409d0f:	or     esi,esi
  409d11:	cmp    DWORD PTR [edx+0x4baa08a1],eax
  409d17:	and    esi,DWORD PTR [eax]
  409d19:	pop    ss
  409d1a:	push   edi
  409d1b:	shrd   DWORD PTR [esi],edi,0x66
  409d1f:	sbb    DWORD PTR [ecx+ecx*2],ebx
  409d22:	jno    0x409cb7
  409d24:	sbb    al,0x5d
  409d26:	out    0x3,eax
  409d28:	add    DWORD PTR [ebx+0x5e7d11c],0xdfc633b6
  409d32:	popf   
  409d33:	jg     0x409cc7
  409d35:	or     DWORD PTR [ecx],ebp
  409d37:	lea    eax,[esi]
  409d39:	push   es
  409d3a:	xor    al,BYTE PTR [edx+0xa]
  409d3d:	stos   DWORD PTR es:[edi],eax
  409d3e:	popa   
  409d3f:	inc    ebx
  409d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d41:	push   edi
  409d42:	add    al,al
  409d44:	aas    
  409d45:	xchg   BYTE PTR [eax],ah
  409d47:	add    eax,0xab6d4fb4
  409d4c:	push   esp
  409d4d:	mov    al,0x42
  409d4f:	mov    ebx,0xe7afa160
  409d54:	pop    edi
  409d55:	leave  
  409d56:	cmp    BYTE PTR [esi],al
  409d58:	jle    0x409d8d
  409d5a:	adc    BYTE PTR [ebx-0x55e4c74d],dh
  409d60:	inc    ecx
  409d61:	push   edx
  409d62:	addr16 push esi
  409d64:	leave  
  409d65:	int3   
  409d66:	push   esi
  409d67:	or     DWORD PTR [edi+edx*2+0x3f32cfc7],0x77
  409d6f:	lock pop ebp
  409d71:	gs mov ecx,0xa62aa164
  409d77:	sahf   
  409d78:	jmp    0xbca518ce
  409d7d:	shl    BYTE PTR [esi],1
  409d7f:	mov    edx,DWORD PTR [ecx+ebp*8]
  409d82:	rol    edx,1
  409d84:	sbb    DWORD PTR [ebp-0x78381339],esp
  409d8a:	lods   al,BYTE PTR ds:[esi]
  409d8b:	repz pop esi
  409d8d:	pop    esp
  409d8e:	xchg   DWORD PTR [edi-0x75a78197],esi
  409d94:	das    
  409d95:	arpl   si,si
  409d97:	dec    esp
  409d98:	iret   
  409d99:	add    ch,BYTE PTR [ecx]
  409d9b:	repz jns 0x409df2
  409d9e:	push   ecx
  409d9f:	test   al,0x4a
  409da1:	dec    edx
  409da2:	mov    al,ds:0xd494e7ab
  409da7:	mov    ecx,0x51b1ee61
  409dac:	dec    esp
  409dad:	dec    edi
  409dae:	and    DWORD PTR [ebp+0x78385f04],ecx
  409db4:	dec    ecx
  409db5:	jg     0x409d80
  409db7:	gs mov ebx,0x44013c4
  409dbd:	jno    0x409e3e
  409dbf:	dec    edx
  409dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc1:	add    cl,al
  409dc3:	(bad)  
  409dc4:	pop    edi
  409dc5:	sbb    BYTE PTR [ebx+0x6413eb18],0xbd
  409dcc:	or     al,0x93
  409dce:	adc    DWORD PTR [edi-0x13c91547],edx
  409dd4:	cmp    al,0xc2
  409dd6:	ss call 0x6668e1c9
  409ddc:	cmp    ecx,DWORD PTR [edi+0x5c]
  409ddf:	push   eax
  409de0:	mov    eax,ds:0x42fde06a
  409de5:	jmp    0xde16c2d9
  409dea:	outs   dx,DWORD PTR ds:[esi]
  409deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dec:	mov    ah,0x69
  409dee:	xchg   ecx,eax
  409def:	pop    ds
  409df0:	add    eax,0xe1e263ff
  409df5:	cmp    BYTE PTR [edx],dh
  409df7:	(bad)  
  409df8:	cmp    ebp,DWORD PTR [ebp-0x3c]
  409dfb:	jle    0x409e37
  409dfd:	mov    esi,0xf8008b34
  409e02:	addr16 es mov ebx,0xe881c6c7
  409e09:	sub    al,0x9c
  409e0b:	pop    ebx
  409e0c:	dec    eax
  409e0d:	mov    ebx,DWORD PTR [ebp+0x1d5246e7]
  409e13:	(bad)  
  409e14:	lock aad 0x25
  409e17:	push   es
  409e18:	imul   ebp,DWORD PTR [esp+esi*8],0xcdaa3dc
  409e1f:	fsub   DWORD PTR [ebx+0x3212d435]
  409e25:	mov    dh,0xd1
  409e27:	inc    edx
  409e28:	test   eax,0x8b960d46
  409e2d:	mov    ds:0x1770bace,eax
  409e32:	clc    
  409e33:	mov    dl,0x3d
  409e35:	mov    ah,ch
  409e37:	jnp    0x409eb8
  409e39:	int    0x27
  409e3b:	adc    cl,ah
  409e3d:	cld    
  409e3e:	lods   al,BYTE PTR ds:[esi]
  409e3f:	call   0xf822:0xd4cfcde1
  409e46:	test   al,0x8f
  409e48:	xor    DWORD PTR [edi-0x1f533950],edi
  409e4e:	stos   BYTE PTR es:[edi],al
  409e4f:	fdivr  st,st(5)
  409e51:	pop    eax
  409e52:	rcr    bl,cl
  409e54:	nop
  409e55:	jae    0x409e6f
  409e57:	arpl   WORD PTR [ebx+0x7f],di
  409e5a:	div    DWORD PTR ss:[esi-0x51]
  409e5e:	test   DWORD PTR [ecx-0x7b],0xc994b4d9
  409e65:	daa    
  409e66:	ret    
  409e67:	inc    esi
  409e68:	inc    edi
  409e69:	cmc    
  409e6a:	std    
  409e6b:	ret    
  409e6c:	jns    0x409e6e
  409e6e:	stc    
  409e6f:	cmp    DWORD PTR [esi],edx
  409e71:	cwde   
  409e72:	dec    edx
  409e73:	cld    
  409e74:	arpl   WORD PTR [edx],ax
  409e76:	div    DWORD PTR [edx+0x65]
  409e79:	push   ds
  409e7a:	and    ebx,DWORD PTR [ecx]
  409e7c:	lock jecxz 0x409e30
  409e7f:	mov    ebp,0xad18fbed
  409e84:	sti    
  409e85:	adc    BYTE PTR [esi+eax*1+0x1a90942a],bl
  409e8c:	mov    ebx,DWORD PTR ds:[ebx-0x61]
  409e90:	or     DWORD PTR [ecx+0x21daba40],0xd5ccbf96
  409e9a:	lds    esp,FWORD PTR ds:0xbde328cb
  409ea0:	out    dx,eax
  409ea1:	js     0x409f13
  409ea3:	ror    ah,0x88
  409ea6:	in     eax,dx
  409ea7:	outs   dx,DWORD PTR ds:[esi]
  409ea8:	push   0x3f21c182
  409ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eae:	mov    WORD PTR [edx+0x7],ss
  409eb1:	arpl   WORD PTR [ecx-0x66c5b47b],bx
  409eb7:	xor    DWORD PTR [ebx+0x13],edi
  409eba:	outs   dx,DWORD PTR ds:[esi]
  409ebb:	push   0x69
  409ebd:	imul   edx,DWORD PTR [ebx+0x2d],0xfffffffc
  409ec1:	cmp    BYTE PTR [edx+0x22],dh
  409ec4:	sbb    cl,BYTE PTR [ebx-0x14e82ba5]
  409eca:	cmp    cl,0xf
  409ecd:	ins    DWORD PTR es:[edi],dx
  409ece:	ins    DWORD PTR es:[edi],dx
  409ecf:	adc    eax,0xa1bee98d
  409ed4:	mov    bl,0xa1
  409ed6:	nop
  409ed7:	pop    ebp
  409ed8:	cld    
  409ed9:	jne    0x409f53
  409edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409edc:	jecxz  0x409edf
  409ede:	scas   eax,DWORD PTR es:[edi]
  409edf:	push   cs
  409ee0:	das    
  409ee1:	retf   0x2a7f
  409ee4:	(bad)  
  409ee5:	jae    0x409efd
  409ee7:	or     eax,0xe3874282
  409eec:	inc    eax
  409eed:	push   ss
  409eee:	mov    ebp,0x3e876e1
  409ef3:	adc    ebp,eax
  409ef5:	mov    edx,0x96ff1e1b
  409efa:	jmp    0xcb5a:0xb843ca98
  409f01:	push   esi
  409f02:	jnp    0x409f82
  409f04:	sbb    esi,DWORD PTR [edi-0x74]
  409f07:	pop    edx
  409f08:	push   eax
  409f09:	pop    esi
  409f0a:	mov    esi,0xf4184e74
  409f0f:	fwait
  409f10:	in     al,0x76
  409f12:	and    al,0x2a
  409f14:	jnp    0x409ea7
  409f16:	out    dx,al
  409f17:	fs in  al,dx
  409f19:	arpl   WORD PTR [edi-0x9a0f2e],cx
  409f1f:	stc    
  409f20:	ins    BYTE PTR es:[edi],dx
  409f21:	int    0x76
  409f23:	mov    DWORD PTR [ecx+0x53],edi
  409f26:	xor    eax,0x540467e7
  409f2b:	dec    esi
  409f2c:	sub    al,0x6d
  409f2e:	push   eax
  409f2f:	xchg   esp,eax
  409f30:	push   eax
  409f31:	(bad)  
  409f32:	fcmovu st,st(7)
  409f34:	dec    edx
  409f35:	stos   BYTE PTR es:[edi],al
  409f36:	push   ds
  409f37:	int3   
  409f38:	dec    esp
  409f39:	test   al,0x88
  409f3b:	mov    edi,0xbdceb44f
  409f40:	lea    ecx,[edi+ebp*8+0x7d]
  409f44:	mov    edx,0x8939a5a2
  409f49:	and    edx,DWORD PTR [eax]
  409f4b:	or     al,0xb6
  409f4d:	jl     0x409f42
  409f4f:	lods   al,BYTE PTR ds:[esi]
  409f50:	mov    eax,DWORD PTR [edx]
  409f52:	jmp    0x9a3a:0x6bb5962d
  409f59:	stc    
  409f5a:	in     eax,dx
  409f5b:	imul   edx,DWORD PTR [edx+0x3d],0x1d
  409f5f:	jns    0x409f9e
  409f61:	dec    edx
  409f62:	dec    edx
  409f63:	cld    
  409f64:	dec    esi
  409f65:	scas   al,BYTE PTR es:[edi]
  409f66:	push   eax
  409f67:	pop    edx
  409f68:	je     0x409f7f
  409f6a:	aas    
  409f6b:	sbb    ah,BYTE PTR [ecx-0x5057a1cd]
  409f71:	(bad)  
  409f73:	jmp    0xad83:0x6fd76711
  409f7a:	dec    esi
  409f7b:	arpl   WORD PTR [eax+0x2f],di
  409f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f7f:	imul   esp,DWORD PTR [edi-0x6da49146],0x32da5ab5
  409f89:	xlat   BYTE PTR ds:[ebx]
  409f8a:	std    
  409f8b:	bnd jb 0x409f33
  409f8e:	or     ebx,DWORD PTR [ebx-0x7f]
  409f91:	adc    BYTE PTR [eax],dl
  409f93:	dec    edx
  409f94:	inc    edi
  409f95:	jbe    0x409fa3
  409f97:	retf   
  409f98:	push   edi
  409f99:	das    
  409f9a:	cdq    
  409f9b:	out    dx,eax
  409f9c:	lock mov bl,BYTE PTR ds:0x62478419
  409fa3:	fs sbb ebx,eax
  409fa6:	jecxz  0x409f89
  409fa8:	sbb    eax,ebx
  409faa:	test   eax,0x15c736dd
  409faf:	mov    ds:0xe83d0424,al
  409fb4:	jnp    0x409fbb
  409fb6:	dec    edi
  409fb7:	sub    eax,0x7e9df2f8
  409fbc:	dec    ebp
  409fbd:	into   
  409fbe:	jne    0x40a034
  409fc0:	fcomp  st(3)
  409fc2:	mov    ebx,0xdec60dce
  409fc7:	inc    eax
  409fc8:	lahf   
  409fc9:	xlat   BYTE PTR ds:[ebx]
  409fca:	leave  
  409fcb:	repz mov ebp,0x77e27e61
  409fd1:	push   ecx
  409fd2:	aad    0x4f
  409fd4:	xchg   ebx,eax
  409fd5:	cdq    
  409fd6:	ret    
  409fd7:	push   ecx
  409fd8:	jmp    0x5e4dac8
  409fdd:	rcl    DWORD PTR [edx],1
  409fdf:	push   edi
  409fe0:	sub    dl,cl
  409fe2:	push   0xffffff9d
  409fe4:	and    al,0xd8
  409fe6:	push   ecx
  409fe7:	add    eax,ebx
  409fe9:	fmul   DWORD PTR [edi+eiz*8-0x16]
  409fed:	sysret 
  409fef:	xlat   BYTE PTR ds:[ebx]
  409ff0:	stos   DWORD PTR es:[edi],eax
  409ff1:	add    BYTE PTR [edi-0x28],ch
  409ff4:	div    DWORD PTR fs:[ecx+0x24283466]
  409ffb:	xchg   ebx,eax
  409ffc:	ss retf 0xa18b
  40a000:	mov    bh,0x78
  40a002:	sub    eax,0x4c58e1d1
  40a007:	cmp    eax,0x1944a709
  40a00c:	xor    esp,eax
  40a00e:	sub    eax,0x6fed346c
  40a013:	cmp    ecx,DWORD PTR [eax+edi*8-0x16]
  40a017:	retf   
  40a018:	jmp    0x40a092
  40a01a:	fst    QWORD PTR ds:0x86bfd92a
  40a020:	(bad)  
  40a021:	inc    edi
  40a022:	cmp    eax,0xa680b7b9
  40a027:	ins    BYTE PTR es:[edi],dx
  40a028:	gs mov dl,0x20
  40a02b:	imul   ecx,DWORD PTR [eax-0x73],0x4a
  40a02f:	xchg   esi,eax
  40a030:	jno    0x409fd6
  40a032:	pop    es
  40a033:	pushf  
  40a034:	pop    ecx
  40a035:	jg     0x409fd4
  40a037:	ins    DWORD PTR es:[edi],dx
  40a038:	fisttp DWORD PTR [edi-0x10ce7397]
  40a03e:	icebp  
  40a03f:	in     al,0x3c
  40a041:	dec    esp
  40a042:	pop    esi
  40a043:	inc    esi
  40a044:	fdecstp 
  40a046:	xor    BYTE PTR [esi+0x6810ff08],ah
  40a04c:	pop    es
  40a04d:	push   es
  40a04e:	jnp    0x40a086
  40a050:	outs   dx,DWORD PTR ds:[esi]
  40a051:	inc    eax
  40a052:	push   edi
  40a053:	out    0x1e,eax
  40a055:	out    dx,al
  40a056:	in     eax,0x1b
  40a058:	dec    ebp
  40a059:	aaa    
  40a05a:	je     0x40a0d3
  40a05c:	(bad)  
  40a05d:	fadd   QWORD PTR [ecx]
  40a05f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a060:	mov    al,ds:0x948570ed
  40a065:	cdq    
  40a066:	fcmovb st,st(3)
  40a068:	mov    DWORD PTR [eax],eax
  40a06a:	xor    BYTE PTR [edi-0x18],bl
  40a06d:	cmp    esp,DWORD PTR [ebx-0x77]
  40a070:	pop    es
  40a071:	dec    esp
  40a072:	cmp    ecx,0x2
  40a075:	mov    BYTE PTR [ecx+edx*2],bl
  40a078:	(bad)  
  40a079:	ja     0x40a063
  40a07b:	adc    DWORD PTR [esi],esi
  40a07d:	ficomp WORD PTR [ebx]
  40a07f:	div    DWORD PTR [ebp-0x73]
  40a082:	adc    ecx,DWORD PTR [edx]
  40a084:	or     eax,0xbdb24d9d
  40a089:	scas   eax,DWORD PTR es:[edi]
  40a08a:	push   ecx
  40a08b:	icebp  
  40a08c:	adc    BYTE PTR [edx+edi*1+0x1d47eca],al
  40a093:	xor    BYTE PTR [ebp+0x26],dh
  40a096:	imul   ecx,DWORD PTR [eax+edx*1],0xffffffdc
  40a09a:	icebp  
  40a09b:	mov    dl,0x8c
  40a09d:	ficomp DWORD PTR [ebx-0x18]
  40a0a0:	mov    bl,0xd9
  40a0a2:	inc    esi
  40a0a3:	aam    0x51
  40a0a5:	mov    dl,BYTE PTR [edi+0x5e]
  40a0a8:	cmc    
  40a0a9:	push   ds
  40a0aa:	in     eax,dx
  40a0ab:	daa    
  40a0ac:	hlt    
  40a0ad:	jle    0x40a0e1
  40a0af:	scas   al,BYTE PTR es:[edi]
  40a0b0:	mov    ecx,DWORD PTR [ebp+0xdd90195]
  40a0b6:	mov    ebx,0x1c2a7c58
  40a0bb:	xchg   edi,eax
  40a0bc:	pop    esi
  40a0bd:	call   0xdc85:0xf89573e4
  40a0c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0c5:	jns    0x40a063
  40a0c7:	sar    DWORD PTR [edx],1
  40a0c9:	bnd jne 0x40a0eb
  40a0cc:	cmp    BYTE PTR [edx-0x21],dl
  40a0cf:	mov    bl,0x16
  40a0d1:	retf   0xa10a
  40a0d4:	fimul  WORD PTR [edx]
  40a0d6:	fwait
  40a0d7:	dec    edx
  40a0d8:	sub    edx,ebp
  40a0da:	and    eax,0xb750dfd2
  40a0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e0:	adc    eax,0x3bbe9e3e
  40a0e5:	ror    DWORD PTR [ebx-0x5834759a],1
  40a0eb:	cdq    
  40a0ec:	jno    0x40a0c5
  40a0ee:	repz add esp,DWORD PTR [edi-0x78]
  40a0f2:	mov    eax,0x19bd2986
  40a0f7:	popf   
  40a0f8:	xor    dh,cl
  40a0fa:	ja     0x90ccb351
  40a100:	nop
  40a101:	jns    0x40a0e3
  40a103:	and    esi,ecx
  40a105:	sbb    cl,BYTE PTR [edi]
  40a107:	adc    eax,esp
  40a109:	and    ebp,DWORD PTR [edx-0x23]
  40a10c:	iret   
  40a10d:	mov    bh,0xae
  40a10f:	jne    0x40a10c
  40a111:	add    DWORD PTR [esi+0x61],ebx
  40a114:	popa   
  40a115:	lds    ebx,FWORD PTR [edx-0x46]
  40a118:	mov    edi,0x697f59b
  40a11d:	push   esp
  40a11e:	push   ss
  40a11f:	dec    edi
  40a120:	mov    esi,0x87f82bf1
  40a125:	mov    ds:0x2f316319,al
  40a12a:	add    DWORD PTR [esi-0x5e],edi
  40a12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a12e:	push   edx
  40a12f:	pop    esi
  40a130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a131:	cmp    DWORD PTR [edx-0x50],edi
  40a134:	mov    edx,0x29ef284d
  40a139:	pop    edx
  40a13a:	pop    ds
  40a13b:	inc    ecx
  40a13c:	dec    ebp
  40a13d:	add    esi,DWORD PTR ds:0xe690d388
  40a143:	aad    0x22
  40a145:	xor    esp,DWORD PTR [esi]
  40a147:	dec    esi
  40a148:	mov    bh,0x1b
  40a14a:	(bad)  
  40a14b:	cmp    cl,BYTE PTR [eax+eax*4+0xd]
  40a14f:	mov    esi,0xcf804057
  40a154:	fmul   st(5),st
  40a156:	or     WORD PTR [esi-0x49c19a84],0x8fee
  40a15f:	jl     0x40a16a
  40a161:	or     BYTE PTR [eax+0x5ebb3532],al
  40a167:	lods   al,BYTE PTR ds:[esi]
  40a168:	ror    dl,cl
  40a16a:	lahf   
  40a16b:	sub    ch,BYTE PTR [ecx+edx*1+0x3f]
  40a16f:	fdivrp st(1),st
  40a171:	mov    al,ds:0xce95b305
  40a176:	aad    0xde
  40a178:	out    0xea,al
  40a17a:	popf   
  40a17b:	cmp    BYTE PTR [edx+0x39b251e0],dl
  40a181:	ret    0xbf90
  40a184:	mov    WORD PTR [ecx+0x28496947],ds
  40a18a:	pop    eax
  40a18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a18c:	push   esi
  40a18d:	pop    ss
  40a18e:	mov    ds:0xd8c0a21a,al
  40a193:	call   0xd008:0xfa9d42d8
  40a19a:	sub    ecx,DWORD PTR [esi]
  40a19c:	push   ss
  40a19d:	out    dx,al
  40a19e:	or     DWORD PTR [edx],ebx
  40a1a0:	retf   
  40a1a1:	retf   
  40a1a2:	adc    al,0x50
  40a1a4:	jp     0x40a126
  40a1a6:	mov    edx,0xe528a23e
  40a1ab:	add    BYTE PTR [edi+0x25195b61],bh
  40a1b1:	jb     0x40a1bf
  40a1b3:	daa    
  40a1b4:	jg     0x40a1b8
  40a1b6:	fwait
  40a1b7:	shr    DWORD PTR ds:0xc42ec7db,1
  40a1bd:	xchg   ebx,eax
  40a1be:	push   ds
  40a1bf:	icebp  
  40a1c0:	cmp    ebx,ebx
  40a1c2:	call   0x2bfb2e86
  40a1c7:	xor    al,0x8b
  40a1c9:	mov    esi,0x1a66a456
  40a1ce:	sub    ebx,DWORD PTR [edi+edx*4]
  40a1d1:	adc    al,0x97
  40a1d3:	xchg   ebp,eax
  40a1d4:	out    0x93,eax
  40a1d6:	push   eax
  40a1d7:	adc    eax,edx
  40a1d9:	fiadd  DWORD PTR [edx+0x72]
  40a1dc:	out    dx,al
  40a1dd:	sti    
  40a1de:	in     eax,0xb7
  40a1e0:	pop    esp
  40a1e1:	ficomp DWORD PTR [edi+0x4]
  40a1e4:	mov    esp,0xf965dfd2
  40a1e9:	inc    eax
  40a1ea:	stos   DWORD PTR es:[edi],eax
  40a1eb:	and    BYTE PTR [edi],ch
  40a1ed:	sti    
  40a1ee:	clc    
  40a1ef:	mov    al,ds:0x99779d96
  40a1f4:	pop    ecx
  40a1f5:	push   edx
  40a1f6:	loope  0x40a1f0
  40a1f8:	mov    dh,0x15
  40a1fa:	pop    edx
  40a1fb:	imul   edi,DWORD PTR [eax-0x7404989b],0x2759cd1c
  40a205:	push   0xb115aaba
  40a20a:	mov    edx,0xb6c3da05
  40a20f:	sahf   
  40a210:	cmp    al,0x72
  40a212:	call   0x8343c326
  40a217:	cld    
  40a218:	aaa    
  40a219:	mov    WORD PTR [ebx-0x22893032],gs
  40a21f:	or     ecx,ecx
  40a221:	not    DWORD PTR [ecx-0x6fe7b2f]
  40a227:	sbb    eax,DWORD PTR [eax]
  40a229:	mov    dl,0xc9
  40a22b:	int    0x0
  40a22d:	cmp    edx,eax
  40a22f:	outs   dx,DWORD PTR ds:[esi]
  40a230:	jmp    0xb98466f7
  40a235:	ss or  ch,cl
  40a238:	cmp    dh,bl
  40a23a:	sbb    al,0x3c
  40a23c:	sbb    esp,DWORD PTR [esp+edi*1]
  40a23f:	xor    eax,0x8c6defba
  40a244:	(bad)  
  40a245:	shr    BYTE PTR [esi+eax*8+0x7f835c7f],cl
  40a24c:	loopne 0x40a1e6
  40a24e:	inc    edx
  40a24f:	sbb    eax,0xbb33569c
  40a254:	mov    esp,0xcee8e335
  40a259:	stos   BYTE PTR es:[edi],al
  40a25a:	outs   dx,BYTE PTR ds:[esi]
  40a25b:	rcl    cl,1
  40a25d:	sti    
  40a25e:	push   esi
  40a25f:	cmp    edi,DWORD PTR [edi]
  40a261:	cmp    DWORD PTR [edx],esp
  40a263:	or     eax,ebx
  40a265:	into   
  40a266:	test   BYTE PTR [eax+0x7a],ch
  40a269:	pop    ebx
  40a26a:	push   ds
  40a26b:	js     0x40a22a
  40a26d:	jbe    0x40a20a
  40a26f:	in     eax,dx
  40a270:	fdivr  QWORD PTR [ebp-0x8e650c6]
  40a276:	popf   
  40a277:	pusha  
  40a278:	pop    ecx
  40a279:	mov    bh,0x50
  40a27b:	xlat   BYTE PTR ds:[ebx]
  40a27c:	inc    edi
  40a27d:	xor    al,0xc2
  40a27f:	push   ecx
  40a280:	add    ecx,edi
  40a282:	add    BYTE PTR [esi+ebp*2],ch
  40a285:	call   0x4b3c:0x6cdaa7bb
  40a28c:	cwde   
  40a28d:	loope  0x40a280
  40a28f:	xor    eax,0x73e0a8e3
  40a294:	inc    edx
  40a295:	addps  xmm5,xmm0
  40a298:	xor    esi,edi
  40a29a:	add    al,BYTE PTR [ecx]
  40a29c:	and    esi,DWORD PTR [esi-0x7bc076ac]
  40a2a2:	inc    esp
  40a2a3:	ds mov cl,0x69
  40a2a6:	adc    eax,0x288cffd4
  40a2ab:	fldenv [edx+edi*8+0x7b]
  40a2af:	pop    ss
  40a2b0:	push   es
  40a2b1:	js     0x40a237
  40a2b3:	push   edx
  40a2b4:	or     BYTE PTR [ecx],al
  40a2b6:	jmp    0xe92e933f
  40a2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bc:	fstp   QWORD PTR [esi-0x1d57e5f9]
  40a2c2:	iret   
  40a2c3:	das    
  40a2c4:	lds    esp,FWORD PTR fs:[ebp+0x23]
  40a2c8:	cli    
  40a2c9:	(bad)  
  40a2ca:	(bad)  [esi+ebp*1-0xe]
  40a2ce:	sub    al,0x69
  40a2d0:	fcomp  QWORD PTR [ebp-0x5edbaab2]
  40a2d6:	jmp    0x43ad:0xdd7edb3
  40a2dd:	hlt    
  40a2de:	jmp    0x40a2e7
  40a2e0:	ins    BYTE PTR es:[edi],dx
  40a2e1:	push   esp
  40a2e2:	and    eax,0x9e350813
  40a2e7:	adc    DWORD PTR [edx-0x7646d221],0xffffffd6
  40a2ee:	add    dl,BYTE PTR [esi+0xb779a88]
  40a2f4:	(bad)  
  40a2f5:	in     al,dx
  40a2f6:	mov    es,WORD PTR ds:0x4818d60d
  40a2fc:	ins    BYTE PTR es:[edi],dx
  40a2fd:	sbb    BYTE PTR [ebp-0x53],al
  40a300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a301:	stc    
  40a302:	cmp    edx,DWORD PTR [ecx+0x2c]
  40a305:	dec    esp
  40a306:	jl     0x40a2c0
  40a308:	cwde   
  40a309:	scas   eax,DWORD PTR es:[edi]
  40a30a:	outs   dx,DWORD PTR ds:[esi]
  40a30b:	and    ecx,DWORD PTR [esi]
  40a30d:	pop    ecx
  40a30e:	das    
  40a30f:	push   esi
  40a310:	dec    ecx
  40a311:	sbb    DWORD PTR [esi],esi
  40a313:	out    dx,eax
  40a314:	test   DWORD PTR [eax-0x55],0x5a7f3ffb
  40a31b:	sti    
  40a31c:	mov    bh,0xbd
  40a31e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40a320:	cli    
  40a321:	test   eax,0x95af9c75
  40a326:	icebp  
  40a327:	inc    ecx
  40a328:	xlat   BYTE PTR ds:[ebx]
  40a329:	or     DWORD PTR [edi-0x44],esi
  40a32c:	add    dh,bh
  40a32e:	pop    esp
  40a32f:	fild   DWORD PTR [ecx]
  40a331:	add    DWORD PTR [edx],0xeeb6ee0e
  40a337:	lods   eax,DWORD PTR ds:[esi]
  40a338:	aam    0x0
  40a33a:	mov    dl,BYTE PTR [edi-0x4c]
  40a33d:	out    0xab,eax
  40a33f:	leave  
  40a340:	push   esp
  40a341:	mov    ecx,0x72de06aa
  40a346:	jne    0x40a393
  40a348:	inc    esi
  40a349:	sbb    ebx,DWORD PTR [ecx+edx*2-0x3d]
  40a34d:	loopne 0x40a337
  40a34f:	sti    
  40a350:	cmp    BYTE PTR [esp+ebx*8+0x69],ch
  40a354:	int3   
  40a355:	cmp    al,0x36
  40a357:	mov    ecx,0x3e2e6a4
  40a35c:	mov    ah,0x48
  40a35e:	mov    bl,0xce
  40a360:	or     BYTE PTR [ecx+0x129b34a9],dl
  40a366:	les    edi,FWORD PTR [edx+0x7e1f2941]
  40a36c:	dec    edx
  40a36d:	dec    esp
  40a36e:	mov    DWORD PTR [esi-0x5a],edx
  40a371:	inc    esi
  40a372:	inc    esi
  40a373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a374:	fsubr  DWORD PTR ss:[ecx]
  40a377:	int    0x4
  40a379:	gs je  0x40a344
  40a37c:	leave  
  40a37d:	jge    0x40a3ce
  40a37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a380:	push   ecx
  40a381:	test   edx,ebp
  40a383:	call   0xaed38f87
  40a388:	andps  xmm0,XMMWORD PTR [esi]
  40a38b:	jl     0x40a3b6
  40a38d:	popf   
  40a38e:	jbe    0x40a39d
  40a390:	adc    dl,ch
  40a392:	xchg   edi,eax
  40a393:	mov    eax,0x5aae8096
  40a398:	mov    bl,BYTE PTR [ebx-0x50]
  40a39b:	fsub   st(0),st
  40a39d:	or     eax,0xe4680ef0
  40a3a2:	mov    edi,0xffede012
  40a3a7:	pop    eax
  40a3a8:	out    dx,al
  40a3a9:	imul   eax,edx,0x3f
  40a3ac:	retf   
  40a3ad:	xchg   ebx,eax
  40a3ae:	xchg   edi,eax
  40a3af:	adc    eax,0xaf042164
  40a3b4:	pushf  
  40a3b5:	cmp    DWORD PTR [ecx+0x1db099ab],edi
  40a3bb:	push   es
  40a3bc:	cmp    DWORD PTR [ecx+edi*4],edx
  40a3bf:	leave  
  40a3c0:	and    eax,0x623ad8d
  40a3c5:	ret    0xcd2d
  40a3c8:	jae    0x40a3eb
  40a3ca:	or     eax,0x796632e2
  40a3cf:	je     0x40a419
  40a3d1:	mov    dh,0xb1
  40a3d3:	jnp    0x40a362
  40a3d5:	xor    DWORD PTR ds:0x6d6f2e51,eax
  40a3db:	leave  
  40a3dc:	push   ecx
  40a3dd:	inc    ecx
  40a3de:	dec    ecx
  40a3df:	xchg   edx,eax
  40a3e0:	lahf   
  40a3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3e2:	mov    cl,BYTE PTR [ecx+0x39b2aead]
  40a3e8:	xchg   esp,eax
  40a3e9:	sbb    al,0x6c
  40a3eb:	imul   esp,DWORD PTR [ecx+0x223b21c4],0x13
  40a3f2:	leave  
  40a3f3:	test   BYTE PTR [eax-0x168ef57a],ah
  40a3f9:	bound  edx,QWORD PTR [edi]
  40a3fb:	or     esp,DWORD PTR [ebx-0x20]
  40a3fe:	int3   
  40a3ff:	ja     0x40a3c9
  40a401:	fstp   QWORD PTR [eax]
  40a403:	stc    
  40a404:	int3   
  40a405:	shl    BYTE PTR [ebx-0x62],0x6d
  40a409:	mov    ds,esp
  40a40b:	adc    al,0x81
  40a40d:	inc    ebp
  40a40e:	cmp    edi,DWORD PTR [edi]
  40a410:	stos   BYTE PTR es:[edi],al
  40a411:	ror    DWORD PTR [eax-0x56],1
  40a414:	sub    al,0x2d
  40a416:	call   0x1f44a8fc
  40a41b:	mov    WORD PTR [ecx-0x65],?
  40a41e:	mov    dl,0x61
  40a420:	rcr    DWORD PTR [ecx+0x15700272],cl
  40a426:	enter  0xfcf1,0xd2
  40a42a:	out    0xc4,al
  40a42c:	repnz leave 
  40a42e:	mov    ah,0x85
  40a430:	inc    ebx
  40a431:	sbb    edi,eax
  40a433:	jl     0x40a489
  40a435:	mov    esp,0x3330608
  40a43a:	xchg   esp,eax
  40a43b:	popf   
  40a43c:	lahf   
  40a43d:	test   eax,0x53e6b7b5
  40a442:	jns    0x40a3e3
  40a444:	jns    0x40a4bc
  40a446:	pop    ss
  40a447:	push   ebp
  40a448:	sahf   
  40a449:	xchg   esp,eax
  40a44a:	ret    
  40a44b:	stos   DWORD PTR es:[edi],eax
  40a44c:	sbb    edx,esp
  40a44e:	pop    edi
  40a44f:	mov    ds:0xc0c879d3,al
  40a454:	mov    esp,0x75c8411b
  40a459:	sub    BYTE PTR [esi-0x1fee9277],al
  40a45f:	mov    ?,WORD PTR ds:0x9f87ae37
  40a465:	pop    ecx
  40a466:	(bad)  
  40a467:	lock outs dx,BYTE PTR ds:[esi]
  40a469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a46a:	aam    0x6d
  40a46c:	out    dx,eax
  40a46d:	sbb    al,BYTE PTR [esi+0x4f82c069]
  40a473:	jmp    0x785d170d
  40a478:	cmp    DWORD PTR [esi+0x32beb481],ecx
  40a47e:	jo     0x40a46e
  40a480:	push   edx
  40a481:	jmp    0x96ac:0x7b0b65e5
  40a488:	fstp   DWORD PTR [ecx-0x4f]
  40a48b:	mov    ds:0x203a6d6d,al
  40a490:	in     al,dx
  40a491:	sbb    BYTE PTR ds:0x7b07b488,0x14
  40a498:	jmp    0x781b1b33
  40a49d:	sub    cl,BYTE PTR [edx]
  40a49f:	sub    BYTE PTR ds:0xcebd3898,0x92
  40a4a6:	jmp    0x937d8ca7
  40a4ab:	rol    BYTE PTR [edx-0x22],1
  40a4ae:	(bad)  
  40a4af:	jae    0x40a4ae
  40a4b1:	lahf   
  40a4b2:	and    DWORD PTR [esi+0x397842a2],edx
  40a4b8:	std    
  40a4b9:	outs   dx,BYTE PTR ds:[esi]
  40a4ba:	(bad)  
  40a4bb:	pusha  
  40a4bc:	(bad)  
  40a4bd:	(bad)  
  40a4bf:	ret    0x5d9f
  40a4c2:	outs   dx,BYTE PTR ds:[esi]
  40a4c3:	adc    eax,0x2166d070
  40a4c8:	mov    ch,0x91
  40a4ca:	mov    esi,0x39ca44c6
  40a4cf:	fadd   QWORD PTR [edx-0x44]
  40a4d2:	xor    al,0x2c
  40a4d4:	inc    eax
  40a4d5:	or     edx,DWORD PTR [eax]
  40a4d7:	sub    bl,BYTE PTR [edi-0x5f25a231]
  40a4dd:	add    DWORD PTR [ebp+0x6],edx
  40a4e0:	push   ebp
  40a4e1:	mov    BYTE PTR [ecx+0x1e],ah
  40a4e4:	stc    
  40a4e5:	add    ebp,DWORD PTR [edi+0x16]
  40a4e8:	sub    ebp,eax
  40a4ea:	xchg   edx,eax
  40a4eb:	aad    0x68
  40a4ed:	aam    0x1
  40a4ef:	jnp    0x40a520
  40a4f1:	xor    BYTE PTR [ebx],bl
  40a4f3:	pop    ebx
  40a4f4:	dec    esi
  40a4f5:	iret   
  40a4f6:	push   ebp
  40a4f7:	and    ebx,edi
  40a4f9:	sbb    DWORD PTR [eax-0x67cf1fdc],eax
  40a4ff:	popf   
  40a500:	sub    eax,0x10fc1f47
  40a505:	ret    
  40a506:	dec    edi
  40a507:	xor    al,0x9b
  40a509:	jge    0x40a51a
  40a50b:	mov    DWORD PTR [esi],ecx
  40a50d:	jp     0x40a4f7
  40a50f:	int3   
  40a510:	ror    BYTE PTR ds:0x22361462,1
  40a516:	mov    dh,0x63
  40a518:	je     0x40a594
  40a51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a51b:	fadd   DWORD PTR [edx]
  40a51d:	jmp    0x40a544
  40a51f:	sbb    al,BYTE PTR [edx+0x7252a91]
  40a525:	fadd   QWORD PTR [ebx]
  40a527:	or     BYTE PTR [ecx+ebx*4+0x638ccdfe],0x7e
  40a52f:	jnp    0x40a59f
  40a531:	inc    ebp
  40a532:	repz loope 0x40a545
  40a535:	push   ds
  40a536:	xor    bh,ah
  40a538:	push   ds
  40a539:	add    eax,0xd334d51e
  40a53e:	pop    eax
  40a53f:	inc    esp
  40a540:	jns    0x40a588
  40a542:	stc    
  40a543:	pop    esp
  40a544:	fwait
  40a545:	adc    al,0xf4
  40a547:	lahf   
  40a548:	mov    ah,0x5
  40a54a:	inc    edx
  40a54b:	fmul   st,st(6)
  40a54d:	fnsave [eax]
  40a54f:	je     0x40a4e3
  40a551:	mov    bh,0xce
  40a553:	sahf   
  40a554:	xor    al,0xfa
  40a556:	xchg   DWORD PTR [ecx-0x369617b9],esi
  40a55c:	adc    al,0x79
  40a55e:	xchg   esi,eax
  40a55f:	xor    eax,0x24258725
  40a564:	(bad)  [edi+0x1f]
  40a567:	pop    ax
  40a569:	sbb    esi,DWORD PTR ds:0xe1a542cd
  40a56f:	enter  0xebf0,0xbb
  40a573:	lds    ebx,FWORD PTR [ecx]
  40a575:	std    
  40a576:	or     al,0x5
  40a578:	xor    bh,BYTE PTR ds:0xdc63f461
  40a57e:	push   edi
  40a57f:	inc    ecx
  40a580:	into   
  40a581:	scas   al,BYTE PTR es:[edi]
  40a582:	adc    eax,0x8647be8a
  40a587:	in     eax,0xc8
  40a589:	mov    bl,0xc2
  40a58b:	das    
  40a58c:	and    ch,ah
  40a58e:	mov    ecx,0xeb3c1191
  40a593:	daa    
  40a594:	jg     0x40a5ee
  40a596:	iret   
  40a597:	out    0xab,eax
  40a599:	out    0x9e,eax
  40a59b:	je     0x40a5eb
  40a59d:	nop
  40a59e:	and    ebp,eax
  40a5a0:	scas   eax,DWORD PTR es:[edi]
  40a5a1:	jl     0x40a530
  40a5a3:	lds    esp,FWORD PTR [ecx]
  40a5a5:	inc    edx
  40a5a6:	cld    
  40a5a7:	rol    BYTE PTR [ebx],1
  40a5a9:	mov    ds:0xbcb7c1e9,eax
  40a5ae:	loope  0x40a56f
  40a5b0:	int    0x9c
  40a5b2:	push   esi
  40a5b3:	mov    eax,ds:0xa918f61c
  40a5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5b9:	jo     0x40a5d4
  40a5bb:	jae    0x40a61c
  40a5bd:	push   edi
  40a5be:	into   
  40a5bf:	and    BYTE PTR [edi],cl
  40a5c1:	arpl   WORD PTR [esi-0x25ce1f5d],sp
  40a5c7:	jbe    0x40a5f4
  40a5c9:	dec    eax
  40a5ca:	(bad)  [eax+0x1]
  40a5cd:	or     al,0x49
  40a5cf:	jl     0x40a62a
  40a5d1:	retf   0x40f3
  40a5d4:	push   ebx
  40a5d5:	imul   eax,DWORD PTR ds:0x337665b5,0xffffffc0
  40a5dc:	sub    ch,BYTE PTR [eax-0x3fb019f5]
  40a5e2:	xchg   ebp,eax
  40a5e3:	std    
  40a5e4:	push   cs
  40a5e5:	lea    ebp,[esi]
  40a5e7:	jb     0x40a634
  40a5e9:	add    BYTE PTR [ecx+0x1a9cf21],dh
  40a5ef:	xchg   esi,eax
  40a5f0:	xchg   esp,eax
  40a5f1:	arpl   si,di
  40a5f3:	xor    DWORD PTR [eax],eax
  40a5f5:	dec    ebx
  40a5f6:	ja     0x40a5bc
  40a5f8:	fadd   DWORD PTR [esi-0x82cc5e0]
  40a5fe:	retf   0xa56
  40a601:	push   esp
  40a602:	sub    al,0x8a
  40a604:	cmp    al,0xfc
  40a606:	dec    edi
  40a607:	retf   
  40a608:	loope  0x40a64a
  40a60a:	fild   DWORD PTR [edx]
  40a60c:	dec    ebp
  40a60d:	jo     0x40a5b2
  40a60f:	mov    dh,ah
  40a611:	pop    ebp
  40a612:	jnp    0x40a65e
  40a614:	mov    bh,0xaf
  40a616:	push   ebx
  40a617:	js     0x40a690
  40a619:	out    dx,eax
  40a61a:	scas   al,BYTE PTR es:[edi]
  40a61b:	mov    dh,0x55
  40a61d:	(bad)  
  40a61e:	sahf   
  40a61f:	add    DWORD PTR [eax+0x4d],esp
  40a622:	shl    DWORD PTR [esi],cl
  40a624:	jecxz  0x40a67a
  40a626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a627:	rol    DWORD PTR [edi+0x71],1
  40a62a:	jmp    0x40a690
  40a62c:	cli    
  40a62d:	push   edi
  40a62e:	cs mov ebx,0x253c04d
  40a634:	jecxz  0x40a60e
  40a636:	push   ebx
  40a637:	ins    BYTE PTR es:[edi],dx
  40a638:	push   esi
  40a639:	aad    0x73
  40a63b:	outs   dx,DWORD PTR ds:[esi]
  40a63c:	pop    ebx
  40a63d:	les    esp,FWORD PTR [edx+0x3f]
  40a640:	sbb    al,0x7b
  40a642:	scas   al,BYTE PTR es:[edi]
  40a643:	adc    eax,0x37704096
  40a648:	or     eax,0x7d3e2d52
  40a64d:	sbb    ah,BYTE PTR [esi]
  40a64f:	jbe    0x40a60d
  40a651:	ffree  st(0)
  40a653:	fbstp  TBYTE PTR [edx]
  40a655:	mov    ebx,0x3a00a768
  40a65a:	sub    BYTE PTR [ecx],dl
  40a65c:	pop    es
  40a65d:	xchg   edi,eax
  40a65e:	(bad)  
  40a660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a661:	push   edi
  40a662:	inc    esp
  40a663:	outs   dx,DWORD PTR ds:[esi]
  40a664:	and    eax,0x8dd672b1
  40a669:	inc    esp
  40a66a:	jp     0x40a60d
  40a66c:	pop    ss
  40a66d:	or     al,0xc
  40a66f:	dec    esp
  40a670:	sbb    esi,DWORD PTR ds:0xf8c9c40e
  40a676:	jge    0x40a67e
  40a678:	push   ebp
  40a679:	dec    esi
  40a67a:	mov    dh,0xe9
  40a67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a67d:	enter  0x6fa4,0xe4
  40a681:	fisttp QWORD PTR [ecx]
  40a683:	test   dl,bl
  40a685:	or     ebx,DWORD PTR [edx]
  40a687:	or     eax,0x79fffd2c
  40a68c:	mov    ecx,0xca1bdd81
  40a691:	xor    DWORD PTR [eax+0x6ce3a463],0xffffff92
  40a698:	mov    ebx,0x83ad238a
  40a69d:	pushf  
  40a69e:	inc    edx
  40a69f:	and    DWORD PTR [esi-0x20],esp
  40a6a2:	ja     0x40a63f
  40a6a4:	and    ah,BYTE PTR [eax+0x4914be5b]
  40a6aa:	lahf   
  40a6ab:	lock shl DWORD PTR [edx+0x29],cl
  40a6af:	mov    ch,0xa8
  40a6b1:	jmp    0x40a6c9
  40a6b3:	nop
  40a6b4:	daa    
  40a6b5:	out    dx,eax
  40a6b6:	add    ah,bh
  40a6b8:	pusha  
  40a6b9:	out    dx,eax
  40a6ba:	xor    DWORD PTR [eax+ebx*4-0x26bcb79a],esp
  40a6c1:	pop    edi
  40a6c2:	cli    
  40a6c3:	inc    ecx
  40a6c4:	push   cs
  40a6c5:	push   ss
  40a6c6:	mov    cl,0x26
  40a6c8:	imul   eax,DWORD PTR [ebx-0x72],0x51
  40a6cc:	das    
  40a6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ce:	inc    edx
  40a6cf:	and    eax,0x1883882d
  40a6d4:	and    eax,0xb88baf0f
  40a6d9:	and    ch,BYTE PTR [edx+0x2b]
  40a6dc:	into   
  40a6dd:	lea    esi,[esi+0x5d]
  40a6e0:	add    dh,ah
  40a6e2:	rcl    BYTE PTR [edx],0xc3
  40a6e5:	dec    eax
  40a6e6:	jns    0x40a6e0
  40a6e8:	in     al,0xa7
  40a6ea:	out    dx,eax
  40a6eb:	jb     0x40a692
  40a6ed:	dec    ebx
  40a6ee:	in     eax,0x25
  40a6f0:	loope  0x40a6b3
  40a6f2:	ror    DWORD PTR [ecx],1
  40a6f4:	test   DWORD PTR [esi+0x3ccfa1fa],0xb7b915e1
  40a6fe:	pushf  
  40a6ff:	je     0x40a714
  40a701:	mov    ebx,0x7e89b4ea
  40a706:	(bad)  
  40a707:	(bad)  
  40a709:	mov    ebx,0x637a143d
  40a70e:	or     DWORD PTR [eax-0x31],edx
  40a711:	inc    ecx
  40a712:	xchg   bx,ax
  40a714:	adc    DWORD PTR [edi-0x46],ecx
  40a717:	xchg   esi,eax
  40a718:	mov    ds:0x778a13da,eax
  40a71d:	imul   eax,DWORD PTR [ebp+0x635a6700],0x13ca5d56
  40a727:	jmp    0xdad87fb5
  40a72c:	in     eax,0x73
  40a72e:	pop    es
  40a72f:	test   BYTE PTR [eax],0xdb
  40a732:	xchg   ecx,eax
  40a733:	iret   
  40a734:	mov    ah,0xc9
  40a736:	mov    bh,0x4d
  40a738:	movsx  ecx,BYTE PTR ds:0x9ad947c6
  40a73f:	call   DWORD PTR [esp+ecx*8-0x44c19882]
  40a746:	(bad)  
  40a747:	nop
  40a748:	pusha  
  40a749:	scas   eax,DWORD PTR es:[edi]
  40a74a:	repz sbb ch,cl
  40a74d:	fwait
  40a74e:	xlat   BYTE PTR ds:[ebx]
  40a74f:	or     dl,bh
  40a751:	jo     0x40a750
  40a753:	and    DWORD PTR [eax-0x3f],ebp
  40a756:	cli    
  40a757:	nop
  40a758:	jno    0x40a6f0
  40a75a:	push   ebp
  40a75b:	pop    edi
  40a75c:	lods   eax,DWORD PTR ds:[esi]
  40a75d:	int3   
  40a75e:	aas    
  40a75f:	loopne 0x40a7d3
  40a761:	int    0xdc
  40a763:	daa    
  40a764:	cmp    esi,ebp
  40a766:	push   esp
  40a767:	mov    al,0xb5
  40a769:	mov    al,BYTE PTR [ebx+0x6ac9ef22]
  40a76f:	cdq    
  40a770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a771:	out    dx,al
  40a772:	dec    edi
  40a773:	push   esi
  40a774:	mov    eax,0x14b497af
  40a779:	clc    
  40a77a:	xchg   edx,eax
  40a77b:	test   eax,0x8ab3e354
  40a780:	or     BYTE PTR [bp+si+0x42],ah
  40a784:	jns    0x40a7d8
  40a786:	stc    
  40a787:	cwde   
  40a788:	add    al,0xe0
  40a78a:	inc    edx
  40a78b:	mov    ds:0x5a8d49c3,al
  40a790:	aad    0x63
  40a792:	(bad)  
  40a793:	int    0xb1
  40a795:	push   0x913ed554
  40a79a:	inc    BYTE PTR [edx+edi*4]
  40a79d:	int    0x4d
  40a79f:	inc    ebp
  40a7a0:	retf   0x7f84
  40a7a3:	cmp    al,0x2b
  40a7a5:	scas   eax,DWORD PTR es:[edi]
  40a7a6:	inc    esi
  40a7a7:	lds    edi,FWORD PTR [edx+0x1027d70d]
  40a7ad:	sub    eax,0xa2fbbd5b
  40a7b2:	scas   al,BYTE PTR es:[edi]
  40a7b3:	sub    al,0x62
  40a7b5:	shl    DWORD PTR [edi-0x31],cl
  40a7b8:	int3   
  40a7b9:	rcl    ah,1
  40a7bb:	ins    DWORD PTR es:[edi],dx
  40a7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7bd:	dec    BYTE PTR [edx]
  40a7bf:	xchg   edi,eax
  40a7c0:	in     eax,0x83
  40a7c2:	ds loope 0x40a801
  40a7c5:	xor    al,0xcf
  40a7c7:	inc    ebx
  40a7c8:	mov    al,0x21
  40a7ca:	lea    esp,[ebx+0x33]
  40a7cd:	pop    ds
  40a7ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7cf:	icebp  
  40a7d0:	add    dh,BYTE PTR [bp+si+0x3aa]
  40a7d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7d6:	outs   dx,DWORD PTR ds:[esi]
  40a7d7:	fsub   DWORD PTR [ebx-0x2df62822]
  40a7dd:	jp     0x40a7e9
  40a7df:	outs   dx,DWORD PTR ds:[esi]
  40a7e0:	inc    ecx
  40a7e1:	retf   0xccc7
  40a7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7e5:	mov    ch,cl
  40a7e7:	fnstsw WORD PTR [esi+ebp*8+0xd]
  40a7eb:	call   0x7d3b7a70
  40a7f0:	mov    cl,0xf8
  40a7f2:	xchg   ebx,eax
  40a7f3:	mov    bl,0xb2
  40a7f5:	push   edi
  40a7f6:	mov    dh,0xfa
  40a7f8:	push   esi
  40a7f9:	add    esi,DWORD PTR [edi]
  40a7fb:	out    dx,eax
  40a7fc:	push   edi
  40a7fd:	scas   al,BYTE PTR es:[edi]
  40a7fe:	pop    ds
  40a7ff:	ficomp WORD PTR [edx]
  40a801:	cs or  bl,ch
  40a804:	cmp    esp,edx
  40a806:	fisubr DWORD PTR ds:0x415144c5
  40a80c:	mov    eax,DWORD PTR [edi+0x2d2382f6]
  40a812:	cdq    
  40a813:	or     eax,0xe53a07c
  40a818:	loope  0x40a7c0
  40a81a:	sbb    ah,bl
  40a81c:	fldcw  WORD PTR [ebx]
  40a81e:	adc    esi,esp
  40a820:	push   es
  40a821:	ds add al,0x8b
  40a824:	gs dec ecx
  40a826:	inc    esp
  40a827:	push   ebx
  40a828:	add    ch,BYTE PTR [ebx-0x5d907469]
  40a82e:	xchg   ecx,eax
  40a82f:	dec    esp
  40a830:	cli    
  40a831:	xor    eax,0x9634f2e8
  40a836:	inc    esi
  40a837:	cmp    ecx,DWORD PTR [ebp+0x45b44844]
  40a83d:	aad    0xf6
  40a83f:	jb     0x40a852
  40a841:	call   0x8cc4:0x20e6d24e
  40a848:	push   cs
  40a849:	push   ss
  40a84a:	iret   
  40a84b:	inc    ecx
  40a84c:	mov    dh,0x56
  40a84e:	pop    ebx
  40a84f:	int3   
  40a850:	bound  ebx,QWORD PTR [ebx]
  40a852:	aad    0x30
  40a854:	xchg   BYTE PTR [ecx],bh
  40a856:	xchg   ebx,eax
  40a857:	jo     0x40a839
  40a859:	mov    bl,0xc7
  40a85b:	xlat   BYTE PTR ds:[ebx]
  40a85c:	adc    eax,0x943776f9
  40a861:	add    cl,BYTE PTR [eax+0x3ee007a4]
  40a867:	sahf   
  40a868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a869:	sub    al,0x25
  40a86b:	xchg   edi,eax
  40a86c:	mov    cl,0xe8
  40a86e:	lds    esp,FWORD PTR [ebx]
  40a870:	xchg   DWORD PTR [esi],esp
  40a872:	add    eax,DWORD PTR [ecx]
  40a874:	pop    edx
  40a875:	mov    al,ds:0xb063699
  40a87a:	add    ebp,DWORD PTR [edx+0x2031cc4f]
  40a880:	sub    al,0x8e
  40a882:	fs loope 0x40a827
  40a885:	jns    0x40a84f
  40a887:	fst    DWORD PTR [edi-0x51]
  40a88a:	and    BYTE PTR [ebx-0x4d],ah
  40a88d:	sub    DWORD PTR [eax+0x3a0cd8d3],eax
  40a893:	outs   dx,BYTE PTR ds:[esi]
  40a894:	cmp    DWORD PTR [ecx+0xe],edx
  40a897:	cli    
  40a898:	popf   
  40a899:	or     eax,0x4e196c0e
  40a89e:	iret   
  40a89f:	or     al,0xb
  40a8a1:	cwde   
  40a8a2:	jecxz  0x40a8fc
  40a8a4:	or     dl,BYTE PTR [edi]
  40a8a6:	xor    eax,DWORD PTR [ecx+0x57]
  40a8a9:	loopne 0x40a8e5
  40a8ab:	mov    ch,0x60
  40a8ad:	add    DWORD PTR [eax],0xffffffd1
  40a8b0:	lds    cx,DWORD PTR ds:[ebx]
  40a8b4:	sbb    BYTE PTR ds:0x653c4052,ah
  40a8ba:	mov    ebx,0xebdbbd1
  40a8bf:	jns    0x40a8d6
  40a8c1:	scas   al,BYTE PTR es:[edi]
  40a8c2:	stc    
  40a8c3:	dec    edx
  40a8c4:	popf   
  40a8c5:	xchg   DWORD PTR [edi+ebx*2],esp
  40a8c8:	and    ah,dl
  40a8ca:	loopne 0x40a923
  40a8cc:	mov    esp,0xcbb6478c
  40a8d1:	sub    cl,BYTE PTR ss:[eax-0x35]
  40a8d5:	inc    ebx
  40a8d6:	(bad)  
  40a8d7:	aam    0xd2
  40a8d9:	push   0x2f
  40a8db:	ret    0x6e29
  40a8de:	loope  0x40a86f
  40a8e0:	gs ja  0x40a90b
  40a8e3:	sub    eax,0xaf86aa4d
  40a8e8:	push   esp
  40a8e9:	addr16 mov ds:0x8833,al
  40a8ed:	les    ecx,FWORD PTR [ebx]
  40a8ef:	das    
  40a8f0:	pushf  
  40a8f1:	push   DWORD PTR [ecx+esi*2-0x46]
  40a8f5:	jp     0x40a8d3
  40a8f7:	pop    esp
  40a8f8:	pop    ss
  40a8f9:	scas   al,BYTE PTR es:[edi]
  40a8fa:	xchg   esp,eax
  40a8fb:	dec    ebp
  40a8fc:	hlt    
  40a8fd:	imul   edi,DWORD PTR [eax+0x64],0x3db0fdbf
  40a904:	das    
  40a905:	jle    0x40a958
  40a907:	fcmovu st,st(5)
  40a909:	out    dx,al
  40a90a:	outs   dx,DWORD PTR ds:[esi]
  40a90b:	mov    BYTE PTR ss:[edx],bl
  40a90e:	and    BYTE PTR [ebx+ebp*2-0x166a5119],dl
  40a915:	add    ebp,DWORD PTR [esi+esi*1]
  40a918:	push   0x6
  40a91a:	inc    eax
  40a91b:	fwait
  40a91c:	push   ds
  40a91d:	into   
  40a91e:	out    0x3,eax
  40a920:	arpl   WORD PTR [edx-0x7441e2e3],dx
  40a926:	xlat   BYTE PTR ds:[ebx]
  40a927:	sub    BYTE PTR [esi],0x23
  40a92a:	pop    esp
  40a92b:	test   DWORD PTR [ecx-0x3f],eax
  40a92e:	pop    eax
  40a92f:	aam    0x99
  40a931:	icebp  
  40a932:	jle    0x40a8b9
  40a934:	jmp    FWORD PTR [esi+ebx*8-0x5]
  40a938:	inc    esi
  40a939:	call   0x43e0:0x7f40bb0b
  40a940:	cmp    eax,0x16e33d3
  40a945:	(bad)  
  40a946:	ds jmp 0xb510:0x1b0c13a
  40a94e:	cli    
  40a94f:	adc    DWORD PTR [ebp-0x74cd2707],esi
  40a955:	sbb    DWORD PTR [ebp-0x610d295e],esp
  40a95b:	dec    esp
  40a95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a95d:	std    
  40a95e:	rol    BYTE PTR [ecx+0x166d6eff],1
  40a964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a965:	fimul  WORD PTR [ecx+eax*1+0x38]
  40a969:	inc    al
  40a96b:	std    
  40a96c:	ret    
  40a96d:	mov    dl,0x5b
  40a96f:	es pop fs
  40a972:	pop    es
  40a973:	popf   
  40a974:	pop    ds
  40a975:	aas    
  40a976:	push   eax
  40a977:	aam    0xe1
  40a979:	aas    
  40a97a:	out    0xfd,eax
  40a97c:	rcl    BYTE PTR [edi-0x5d68a50f],1
  40a982:	jo     0x40a96d
  40a984:	dec    eax
  40a985:	(bad)  
  40a986:	jl     0x40a99f
  40a988:	repz jns 0x40a9ce
  40a98b:	stos   DWORD PTR es:[edi],eax
  40a98c:	aas    
  40a98d:	push   0xffffffaf
  40a98f:	and    ch,BYTE PTR [eax-0x46]
  40a992:	int3   
  40a993:	ror    BYTE PTR [esi],0x6a
  40a996:	xchg   esp,eax
  40a997:	push   eax
  40a998:	push   eax
  40a999:	popa   
  40a99a:	(bad)  
  40a99b:	js     0x40a9bd
  40a99d:	and    al,0x55
  40a99f:	aam    0x8c
  40a9a1:	and    eax,esi
  40a9a3:	jp     0x40a959
  40a9a5:	and    eax,0xd7adcf70
  40a9aa:	nop
  40a9ab:	lods   al,BYTE PTR ds:[esi]
  40a9ac:	add    ch,BYTE PTR [edi+edi*4-0x64]
  40a9b0:	test   DWORD PTR [edi+0x17e56e0a],edi
  40a9b6:	(bad)  
  40a9b7:	mov    ss,ecx
  40a9b9:	push   ebp
  40a9ba:	and    dh,BYTE PTR [esi]
  40a9bc:	pop    ss
  40a9bd:	add    ebx,DWORD PTR [ecx-0x2436b5c7]
  40a9c3:	mov    dl,0x2e
  40a9c5:	dec    esi
  40a9c6:	sar    esi,0xb9
  40a9c9:	pusha  
  40a9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9cb:	stos   DWORD PTR es:[edi],eax
  40a9cc:	add    DWORD PTR [ebx+0x69],eax
  40a9cf:	jg     0x40aa0f
  40a9d1:	xor    BYTE PTR [ecx+ebp*1-0x5f],al
  40a9d5:	shr    BYTE PTR [edx],1
  40a9d7:	jmp    0x40aa53
  40a9d9:	jmp    0x40a969
  40a9db:	mov    dl,0x32
  40a9dd:	xor    al,0x3a
  40a9df:	out    0x2d,al
  40a9e1:	mov    cl,0x2d
  40a9e3:	mov    al,0xec
  40a9e5:	rcl    ebx,1
  40a9e7:	mov    eax,ds:0xc0a9539c
  40a9ec:	ret    0xa862
  40a9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f0:	sub    ah,BYTE PTR ds:0xe89f6300
  40a9f6:	test   al,0x3f
  40a9f8:	pop    ecx
  40a9f9:	jp     0x40aa41
  40a9fb:	sbb    cl,BYTE PTR [esi]
  40a9fd:	xchg   edx,eax
  40a9fe:	hlt    
  40a9ff:	mov    edi,0x81a3f5b3
  40aa04:	push   cs
  40aa05:	push   esi
  40aa06:	mov    ebx,0x50c573c4
  40aa0b:	push   edx
  40aa0c:	fwait
  40aa0d:	mov    ecx,0x472b9d3d
  40aa12:	(bad)  
  40aa13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa14:	out    dx,eax
  40aa15:	xchg   edi,eax
  40aa16:	(bad)  
  40aa18:	int    0x47
  40aa1a:	sbb    al,0x9d
  40aa1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa1d:	sub    DWORD PTR [edx],ecx
  40aa1f:	inc    ebx
  40aa20:	push   0x7d
  40aa22:	cli    
  40aa23:	call   0xb7bd:0x6938f05f
  40aa2a:	lock xchg ebp,eax
  40aa2c:	xchg   esp,eax
  40aa2d:	and    bl,BYTE PTR [eax+0x75]
  40aa30:	lock xchg esp,eax
  40aa32:	or     al,0x78
  40aa34:	pop    ebx
  40aa35:	std    
  40aa36:	mov    ebp,0xaaff6f05
  40aa3b:	adc    eax,0x705251d5
  40aa40:	gs es fs xchg ecx,eax
  40aa44:	std    
  40aa45:	sbb    DWORD PTR [esi],0x1f
  40aa48:	(bad)  
  40aa49:	hlt    
  40aa4a:	mov    esi,0x88f94626
  40aa4f:	jno    0x40aacc
  40aa51:	mov    bl,0xa9
  40aa53:	push   esp
  40aa54:	pushf  
  40aa55:	out    dx,al
  40aa56:	xor    dl,BYTE PTR [ebx+0x55d7ebb6]
  40aa5c:	mov    esp,0xa364832c
  40aa61:	dec    esi
  40aa62:	in     al,0xae
  40aa64:	sub    BYTE PTR [esi-0x54042ce8],0x3c
  40aa6b:	pop    ebx
  40aa6c:	push   esi
  40aa6d:	jnp    0x40aa25
  40aa6f:	pop    ss
  40aa70:	xchg   edx,eax
  40aa71:	pop    eax
  40aa72:	pusha  
  40aa73:	mov    ebx,0x90ac69f0
  40aa78:	fld    TBYTE PTR [edx-0x58]
  40aa7b:	rdtsc  
  40aa7d:	fisttp QWORD PTR [edx]
  40aa7f:	daa    
  40aa80:	mov    bh,0xb2
  40aa82:	test   eax,0x714141ec
  40aa87:	out    0x9d,eax
  40aa89:	int    0x80
  40aa8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa8c:	call   0x30b0cb97
  40aa91:	test   eax,0x239f9f9c
  40aa96:	jmp    0x9983765e
  40aa9b:	or     BYTE PTR [ebp+0x39],bl
  40aa9e:	loope  0x40aadf
  40aaa0:	inc    esp
  40aaa1:	cmp    eax,0x918d03e2
  40aaa6:	int    0x4
  40aaa8:	sbb    al,0xe4
  40aaaa:	mov    WORD PTR [ecx+0x4c],ss
  40aaad:	adc    BYTE PTR [ebx+edi*4+0x5a9fbc1],0x20
  40aab5:	jecxz  0x40aab4
  40aab7:	call   0x86fe98f6
  40aabc:	icebp  
  40aabd:	in     eax,dx
  40aabe:	cmp    edx,DWORD PTR [ebp+0x4b]
  40aac1:	inc    ebx
  40aac2:	pop    esp
  40aac3:	mov    edi,0x61b73cb3
  40aac8:	pop    edi
  40aac9:	addr16 xchg edx,eax
  40aacb:	mov    esp,ebx
  40aacd:	xchg   esp,eax
  40aace:	imul   edx,esp,0xffffffa6
  40aad1:	sbb    al,0x3a
  40aad3:	inc    esp
  40aad4:	adc    esp,edx
  40aad6:	pushf  
  40aad7:	call   0x6c21:0x9ad1a494
  40aade:	sbb    esp,DWORD PTR [ebx-0x72]
  40aae1:	xor    BYTE PTR [ebx-0x74],al
  40aae4:	loope  0x40ab48
  40aae6:	(bad)  [edx-0x751e80e1]
  40aaec:	or     eax,esp
  40aaee:	fcom   DWORD PTR [edx]
  40aaf0:	and    DWORD PTR [ebp-0x43],esi
  40aaf3:	cmp    eax,0x161f7245
  40aaf8:	mov    bl,0x2b
  40aafa:	cmp    ebp,ebx
  40aafc:	outs   dx,DWORD PTR ds:[esi]
  40aafd:	(bad)  
  40aafe:	xor    al,0x20
  40ab00:	dec    esi
  40ab01:	jne    0x40ab1d
  40ab03:	cwde   
  40ab04:	(bad)  
  40ab05:	jnp    0x40ab14
  40ab07:	(bad)  
  40ab08:	xlat   BYTE PTR ds:[ebx]
  40ab09:	jo     0x40ab2a
  40ab0b:	dec    ebp
  40ab0c:	inc    eax
  40ab0d:	adc    al,0xd8
  40ab0f:	lock cmp esi,edx
  40ab12:	xor    BYTE PTR [eiz*4-0x26b0c2dd],ah
  40ab19:	in     al,dx
  40ab1a:	inc    edx
  40ab1b:	inc    edx
  40ab1c:	or     eax,0x2b8117b2
  40ab21:	pop    ds
  40ab22:	push   eax
  40ab23:	push   DWORD PTR [eax]
  40ab25:	cmp    al,0xeb
  40ab27:	shl    cl,0x9c
  40ab2a:	adc    edx,DWORD PTR [ebx+0x7d]
  40ab2d:	jbe    0x40ab5d
  40ab2f:	lods   al,BYTE PTR ds:[esi]
  40ab30:	jae    0x40ab5e
  40ab32:	icebp  
  40ab33:	mov    edx,0x87cc98ee
  40ab38:	rcr    BYTE PTR [esi+eax*4+0x4c42f28d],1
  40ab3f:	ja     0x40aad5
  40ab41:	mov    ch,BYTE PTR [edi-0x7ac8997f]
  40ab47:	mov    ah,0xe
  40ab49:	push   esi
  40ab4a:	cmp    dl,cl
  40ab4c:	sub    al,0x5e
  40ab4e:	inc    esp
  40ab4f:	cmp    DWORD PTR [esi+esi*4+0x17448f3f],0xacde1667
  40ab5a:	push   0xcef62d91
  40ab5f:	icebp  
  40ab60:	stc    
  40ab61:	add    eax,0x36bb36fe
  40ab66:	dec    esp
  40ab67:	or     esi,DWORD PTR [ecx-0x420e9e59]
  40ab6d:	dec    ebp
  40ab6e:	dec    ebp
  40ab6f:	retf   
  40ab70:	clc    
  40ab71:	int3   
  40ab72:	adc    ebx,ebx
  40ab74:	repz pushf 
  40ab76:	pop    esi
  40ab77:	add    eax,0x1d44780a
  40ab7c:	in     al,0x8a
  40ab7e:	loopne 0x40ab69
  40ab80:	or     eax,0x22ee899f
  40ab85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab86:	xchg   ecx,eax
  40ab87:	inc    esi
  40ab88:	dec    esp
  40ab89:	test   al,0x4
  40ab8b:	xor    eax,0x785086af
  40ab90:	mov    al,0x19
  40ab92:	jnp    0x40ab4d
  40ab94:	cmp    eax,0xcf587640
  40ab99:	mov    gs,WORD PTR [esi+0x12d1536]
  40ab9f:	jnp    0x40ab29
  40aba1:	mov    WORD PTR [ecx],es
  40aba3:	repz sub DWORD PTR [edi-0x21d59ec0],0x5f7a6f43
  40abae:	dec    edx
  40abaf:	mov    ecx,0xeaff1c10
  40abb4:	sbb    ecx,DWORD PTR [edx+0x58]
  40abb7:	ss out 0xad,eax
  40abba:	and    ebx,edx
  40abbc:	or     dh,BYTE PTR [ebx]
  40abbe:	lahf   
  40abbf:	sub    eax,0xcc777e6d
  40abc4:	push   edx
  40abc5:	xchg   edx,eax
  40abc6:	sub    BYTE PTR [eax],al
  40abc8:	dec    ecx
  40abc9:	loopne 0x40abf4
  40abcb:	aam    0x2
  40abcd:	ss push es
  40abcf:	jmp    DWORD PTR [ebp-0x39]
  40abd2:	xor    BYTE PTR [ebp+0x4cf16002],dh
  40abd8:	mov    ecx,0x24bb6e14
  40abdd:	mov    fs,WORD PTR [ebx-0x6a]
  40abe0:	sbb    edx,DWORD PTR ds:0xff8f0c1f
  40abe6:	dec    ebx
  40abe7:	outs   dx,BYTE PTR ds:[esi]
  40abe8:	arpl   WORD PTR [edi+edx*2],di
  40abeb:	loope  0x40abeb
  40abed:	outs   dx,BYTE PTR ds:[esi]
  40abee:	(bad)  
  40abef:	(bad)  
  40abf0:	pop    ecx
  40abf1:	mov    bl,0xd7
  40abf3:	inc    esp
  40abf4:	jne    0x40abac
  40abf6:	sbb    BYTE PTR [esi],ch
  40abf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf9:	fstp   QWORD PTR [esi]
  40abfb:	jb     0x40ab8f
  40abfd:	and    eax,0xb0ba4486
  40ac02:	lds    esi,FWORD PTR ds:0x62a38ee6
  40ac08:	ror    BYTE PTR ds:0x7c571698,cl
  40ac0e:	mov    al,0x71
  40ac10:	mov    dl,0xc6
  40ac12:	sbb    esi,DWORD PTR [edi+0x57]
  40ac15:	retf   
  40ac16:	xor    ah,ah
  40ac18:	dec    ecx
  40ac19:	std    
  40ac1a:	pop    ecx
  40ac1b:	pop    ss
  40ac1c:	cld    
  40ac1d:	outs   dx,DWORD PTR ds:[esi]
  40ac1e:	in     eax,dx
  40ac1f:	xchg   DWORD PTR [ebp+0x3a],esi
  40ac22:	in     al,dx
  40ac23:	not    BYTE PTR [edi]
  40ac25:	or     al,0xdf
  40ac27:	xor    DWORD PTR [ebp+edi*8-0x28],eax
  40ac2b:	in     al,0xf2
  40ac2d:	enter  0xe077,0x8b
  40ac31:	pushf  
  40ac32:	nop
  40ac33:	lock sbb al,0xb7
  40ac37:	int3   
  40ac38:	adc    BYTE PTR [ecx-0x3c],0x66
  40ac3c:	add    eax,0x9ed14d0b
  40ac41:	out    0x84,al
  40ac43:	cmp    edi,ebp
  40ac45:	loopne 0x40ac8a
  40ac47:	test   al,0x99
  40ac49:	es mov bl,0x24
  40ac4c:	dec    esp
  40ac4d:	sub    dl,ch
  40ac4f:	cmp    al,0x54
  40ac51:	jle    0x40ac39
  40ac53:	fdivr  st,st(7)
  40ac55:	cmp    BYTE PTR [edi-0x6],ah
  40ac58:	xchg   ebp,eax
  40ac59:	sbb    esp,DWORD PTR [ebp-0x377f8dc]
  40ac5f:	cmp    al,0x76
  40ac61:	enter  0xeb58,0xa7
  40ac65:	fadd   QWORD PTR [ebp+0x1b214a07]
  40ac6b:	cmc    
  40ac6c:	cli    
  40ac6d:	cmc    
  40ac6e:	js     0x40ac66
  40ac70:	aam    0xb9
  40ac72:	out    0xc3,al
  40ac74:	aas    
  40ac75:	stc    
  40ac76:	addr16 mov dl,0x2e
  40ac79:	mov    dh,cl
  40ac7b:	test   BYTE PTR fs:[ecx],ch
  40ac7e:	xor    eax,0xba01c0e7
  40ac83:	rol    DWORD PTR [edx],cl
  40ac85:	out    dx,al
  40ac86:	adc    al,0x3b
  40ac88:	fcmovnbe st,st(5)
  40ac8a:	test   al,0x6e
  40ac8c:	xlat   BYTE PTR ds:[ebx]
  40ac8d:	icebp  
  40ac8e:	adc    edi,eax
  40ac90:	aas    
  40ac91:	jnp    0x40ac4f
  40ac93:	push   ss
  40ac94:	and    DWORD PTR [eax-0x4120e285],edx
  40ac9a:	pusha  
  40ac9b:	out    0xd7,eax
  40ac9d:	or     al,0xd8
  40ac9f:	sbb    edx,DWORD PTR [ebx+ebp*8+0x516afac0]
  40aca6:	jae    0x40ac57
  40aca8:	retf   0xeaac
  40acab:	jb     0x40acf4
  40acad:	mov    ecx,0x9974d5bc
  40acb2:	mov    ah,0xc9
  40acb4:	fld    QWORD PTR [edx-0xf51e177]
  40acba:	push   ds
  40acbb:	popf   
  40acbc:	adc    dh,0xb4
  40acbf:	test   al,0x29
  40acc1:	push   0x5f
  40acc3:	imul   ebx,DWORD PTR [ebx-0x5d],0xf725403
  40acca:	cmp    ebx,edx
  40accc:	fadd   DWORD PTR [edx+0x77]
  40accf:	das    
  40acd0:	imul   esi,edx,0x4d
  40acd3:	xchg   esi,edx
  40acd5:	xchg   edi,eax
  40acd6:	lds    eax,FWORD PTR ds:0xeaaca3a0
  40acdc:	shl    DWORD PTR [ebx],0xcb
  40acdf:	out    dx,eax
  40ace0:	jb     0x40ac7e
  40ace2:	jne    0x40acf9
  40ace4:	jns    0x40ac80
  40ace6:	repz cmp BYTE PTR [ecx+0x43],ch
  40acea:	push   es
  40aceb:	retf   0xe0da
  40acee:	mov    bl,0xd0
  40acf0:	jno    0x40acb7
  40acf2:	imul   ebp,DWORD PTR [edx+0x39a181f8],0x3bb1a7a6
  40acfc:	out    0x2d,eax
  40acfe:	mov    cl,0x22
  40ad00:	sbb    edi,ebp
  40ad02:	nop
  40ad03:	xchg   ebx,eax
  40ad04:	jg     0x40ad00
  40ad06:	jle    0xa54e01f0
  40ad0c:	or     dl,BYTE PTR [ebx-0x3a90caa2]
  40ad12:	cmp    BYTE PTR [eax-0x6b],bh
  40ad15:	in     eax,dx
  40ad16:	push   ds
  40ad17:	jge    0x40ad8d
  40ad19:	mov    ebp,0xf8a5b2e6
  40ad1e:	jmp    0x40ad83
  40ad20:	ret    
  40ad21:	or     BYTE PTR ds:0xba2753e1,al
  40ad27:	cli    
  40ad28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad29:	mov    BYTE PTR [edi-0x3953fe6f],ch
  40ad2f:	add    ah,BYTE PTR [ecx+0x63506ba5]
  40ad35:	mov    ebx,0x4fb1ec9d
  40ad3a:	push   eax
  40ad3b:	mov    ?,WORD PTR [edi-0xf]
  40ad3e:	cmp    edx,0x49
  40ad41:	xor    ecx,DWORD PTR [edi+0x21]
  40ad44:	pop    es
  40ad45:	cmp    al,0xf1
  40ad47:	mov    ebx,0xcc3c5279
  40ad4c:	pusha  
  40ad4d:	sbb    dh,bh
  40ad4f:	xchg   esp,ebp
  40ad51:	dec    edx
  40ad52:	leave  
  40ad53:	mov    bh,0x91
  40ad55:	js     0x40ad6c
  40ad57:	stc    
  40ad58:	xlat   BYTE PTR ds:[ebx]
  40ad59:	inc    BYTE PTR [edx+0xfab1a25]
  40ad5f:	add    BYTE PTR [ebx],0x5c
  40ad62:	or     ah,BYTE PTR [ebp-0xf7e8647]
  40ad68:	add    bh,BYTE PTR [edx+0x3b]
  40ad6b:	mov    bl,0x54
  40ad6d:	add    edi,DWORD PTR [ebx]
  40ad6f:	mov    bh,0xe4
  40ad71:	sub    dl,BYTE PTR [eax]
  40ad73:	push   esi
  40ad74:	inc    edi
  40ad75:	push   edi
  40ad76:	ja     0x40ad43
  40ad78:	pop    ds
  40ad79:	or     al,0x7f
  40ad7b:	dec    esi
  40ad7c:	add    ebp,DWORD PTR ds:0x42cbb623
  40ad82:	cmp    bl,dh
  40ad84:	push   ebp
  40ad85:	mov    esp,0xa07303f9
  40ad8a:	mov    bl,0x80
  40ad8c:	xor    BYTE PTR [ebp-0x4e89fb23],bh
  40ad92:	stos   DWORD PTR es:[edi],eax
  40ad93:	sbb    ecx,0x749f7979
  40ad99:	out    dx,eax
  40ad9a:	dec    esi
  40ad9b:	test   BYTE PTR [ecx],dl
  40ad9d:	dec    ecx
  40ad9e:	cmp    DWORD PTR [ebp-0x2204febe],ebx
  40ada4:	and    DWORD PTR [eax],0xffffffe8
  40ada7:	xchg   esp,ebx
  40ada9:	adc    al,0x76
  40adab:	adc    eax,0xceaff763
  40adb0:	mov    esi,0x8994f0df
  40adb5:	xchg   esi,eax
  40adb6:	add    cl,BYTE PTR ds:0xc52e2e53
  40adbc:	aaa    
  40adbd:	int3   
  40adbe:	push   eax
  40adbf:	scas   al,BYTE PTR es:[edi]
  40adc0:	out    dx,al
  40adc1:	pop    edi
  40adc2:	lea    ecx,[edx+0x46ae3593]
  40adc8:	pop    edi
  40adc9:	(bad)  
  40adca:	adc    BYTE PTR [ebp-0x4c0796bf],al
  40add0:	je     0x40ae50
  40add2:	jge    0x40ae1e
  40add4:	fsubr  st(6),st
  40add6:	push   edi
  40add7:	mul    BYTE PTR [ebx-0x46a527cf]
  40addd:	xor    BYTE PTR [eax+0x50],al
  40ade0:	cmp    al,BYTE PTR [esi]
  40ade2:	les    eax,FWORD PTR [edi+0x62]
  40ade5:	cmp    ah,BYTE PTR [ebp-0x7916c327]
  40adeb:	gs sahf 
  40aded:	lock stos BYTE PTR es:[edi],al
  40adef:	or     eax,0x4fe57760
  40adf4:	xchg   ebx,eax
  40adf5:	fs hlt 
  40adf7:	xchg   DWORD PTR [esi+ebp*4],eax
  40adfa:	in     eax,0x5
  40adfc:	retf   
  40adfd:	std    
  40adfe:	jp     0x40ae15
  40ae00:	jle    0x40adb2
  40ae02:	pop    ss
  40ae03:	mov    bh,0xd4
  40ae05:	adc    al,0x7a
  40ae07:	add    BYTE PTR ds:0x46395bff,ah
  40ae0d:	pop    eax
  40ae0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae0f:	pop    edi
  40ae10:	sub    ecx,DWORD PTR [ebx+0x5f]
  40ae13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae14:	sub    eax,0x695bb30f
  40ae19:	and    dl,BYTE PTR [ebx+edx*2+0x1a1b23d6]
  40ae20:	or     ebx,0xa3ac347
  40ae26:	push   esi
  40ae27:	xchg   ebp,eax
  40ae28:	xchg   ebx,eax
  40ae29:	mov    ds:0x9708695c,eax
  40ae2e:	add    ebx,DWORD PTR [esi+ecx*1-0x11]
  40ae32:	pop    ebx
  40ae33:	cli    
  40ae34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae35:	mov    edi,0x6a37b687
  40ae3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae3b:	sbb    cl,ah
  40ae3d:	adc    esi,ecx
  40ae3f:	pushf  
  40ae40:	rcr    DWORD PTR [edi+ecx*4-0xfafbe44],cl
  40ae47:	xor    ch,bh
  40ae49:	rol    BYTE PTR [edx-0x333d2f03],cl
  40ae4f:	arpl   WORD PTR [esi-0x5f],bx
  40ae52:	mov    ah,0x62
  40ae54:	mov    cl,BYTE PTR [ecx+0xe]
  40ae57:	dec    esi
  40ae58:	add    ah,BYTE PTR [ecx+0x4a]
  40ae5b:	dec    ecx
  40ae5c:	aas    
  40ae5d:	xor    al,0x4e
  40ae5f:	test   eax,0xdd7ab461
  40ae64:	shr    eax,0xfd
  40ae67:	mov    bl,0x4
  40ae69:	call   0x66fa26af
  40ae6e:	jle    0x40adfc
  40ae70:	xchg   ebp,eax
  40ae71:	push   0x41
  40ae73:	imul   ecx,ebp,0xffffffda
  40ae76:	aam    0x38
  40ae78:	dec    ecx
  40ae79:	mov    ecx,0xf7e12735
  40ae7e:	inc    bp
  40ae80:	sbb    esp,esp
  40ae82:	ficomp DWORD PTR [edx]
  40ae84:	in     al,dx
  40ae85:	push   es
  40ae86:	adc    DWORD PTR [ebx-0x31],ebx
  40ae89:	mov    bl,0xfc
  40ae8b:	push   0x30
  40ae8d:	test   al,0x41
  40ae8f:	sbb    al,0x3d
  40ae91:	pusha  
  40ae92:	sub    DWORD PTR [edx-0x53],ebx
  40ae95:	cmp    dl,BYTE PTR [edi+ebx*8-0x66546537]
  40ae9c:	mov    eax,ds:0xfcd9f665
  40aea1:	add    al,0x15
  40aea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aea4:	pop    ss
  40aea5:	int    0x34
  40aea7:	add    BYTE PTR [ebx-0x1a828581],0x9b
  40aeae:	(bad)  
  40aeaf:	mov    ecx,0xc915807
  40aeb4:	fsubr  st(6),st
  40aeb6:	test   eax,0x31663528
  40aebb:	scas   eax,DWORD PTR es:[edi]
  40aebc:	and    eax,DWORD PTR [ebx+0x2158c95a]
  40aec2:	shl    DWORD PTR [eax-0x720b1cde],0xac
  40aec9:	xor    edx,ebp
  40aecb:	jae    0x40aed0
  40aecd:	xor    al,0x7b
  40aecf:	jae    0x40af16
  40aed1:	sbb    BYTE PTR [edx],0xb8
  40aed4:	shl    DWORD PTR [ecx-0x6c52a42d],1
  40aeda:	pop    es
  40aedb:	stc    
  40aedc:	cmp    ebx,edi
  40aede:	dec    ecx
  40aedf:	addr16 jne 0x40af53
  40aee2:	add    ebx,eax
  40aee4:	or     esi,DWORD PTR [ebx]
  40aee6:	mov    edx,0xab9b85d0
  40aeeb:	std    
  40aeec:	mov    ebx,0xc612aac8
  40aef1:	push   edx
  40aef2:	jg     0x40aed8
  40aef4:	lods   al,BYTE PTR ds:[esi]
  40aef5:	jmp    0x40af27
  40aef7:	fchs   
  40aef9:	xor    edx,DWORD PTR [ebp+edi*4-0x3e]
  40aefd:	scas   eax,DWORD PTR es:[edi]
  40aefe:	bound  esp,QWORD PTR [ebp-0x7b18b2b8]
  40af04:	mov    ah,0xef
  40af06:	lock inc edi
  40af08:	mov    dh,0x4b
  40af0a:	hlt    
  40af0b:	inc    ecx
  40af0c:	mov    BYTE PTR [esi],bl
  40af0e:	pop    ebp
  40af0f:	mov    bh,BYTE PTR [ebx+0x70]
  40af12:	jecxz  0x40af45
  40af14:	in     al,0x8a
  40af16:	adc    bl,BYTE PTR [eax-0x6226c3ff]
  40af1c:	not    DWORD PTR [edi-0x79f5d55e]
  40af22:	clc    
  40af23:	pop    ecx
  40af24:	and    eax,0x1942270e
  40af29:	out    0x6a,al
  40af2b:	push   eax
  40af2c:	mov    cl,0x8e
  40af2e:	int3   
  40af2f:	lock adc al,0xce
  40af32:	sub    dl,dl
  40af34:	shr    ecx,0x99
  40af37:	sbb    al,0x8a
  40af39:	mov    ah,0xb0
  40af3b:	ror    BYTE PTR [esi],cl
  40af3d:	add    al,0x27
  40af3f:	bswap  esp
  40af41:	mov    bl,0xa4
  40af43:	inc    ebx
  40af44:	xchg   esi,eax
  40af45:	test   eax,0xe44b1c6c
  40af4a:	imul   esp,ebp,0xd4689081
  40af50:	repnz pusha 
  40af52:	jmp    0x40afc2
  40af54:	arpl   WORD PTR [ecx+0x5d],cx
  40af57:	lds    eax,FWORD PTR [ecx+ebx*8-0x2a]
  40af5b:	xor    ebp,DWORD PTR [ebp-0x77]
  40af5e:	popf   
  40af5f:	shl    BYTE PTR [ecx],cl
  40af61:	xor    BYTE PTR ds:0x5d5843b9,dh
  40af67:	arpl   WORD PTR [edx-0x74c0e260],cx
  40af6d:	mov    WORD PTR [ebx],?
  40af6f:	push   0x37e7248a
  40af74:	in     al,0xa3
  40af76:	fadd   QWORD PTR [eax-0x24]
  40af79:	aas    
  40af7a:	mov    esi,0x18653e51
  40af7f:	iret   
  40af80:	gs stc 
  40af82:	or     ebp,edx
  40af84:	push   esp
  40af85:	jne    0x40aff0
  40af87:	dec    eax
  40af88:	(bad)  
  40af89:	mov    ecx,0xb6e315dd
  40af8e:	cmp    al,0x3b
  40af90:	jp     0x40af92
  40af92:	mov    dl,0xfa
  40af94:	cmp    dh,BYTE PTR [edi+ebp*8+0x51]
  40af98:	mov    BYTE PTR [eax+0x2be3e554],dh
  40af9e:	mov    esp,0x8d601e78
  40afa3:	lea    ebx,[ecx-0x6e]
  40afa6:	or     BYTE PTR [ebp+eiz*8+0x67df5b40],bl
  40afad:	out    0xf1,eax
  40afaf:	pop    ss
  40afb0:	sbb    edx,edx
  40afb2:	and    DWORD PTR [edi+0x663680e3],edx
  40afb8:	push   edx
  40afb9:	ret    0xa9e2
  40afbc:	ins    DWORD PTR es:[edi],dx
  40afbd:	mul    BYTE PTR [esi+eax*2]
  40afc0:	jle    0x40af86
  40afc2:	mov    ebp,0x4baf58c1
  40afc7:	retf   
  40afc8:	jg     0x40af7c
  40afca:	loopne 0x40b045
  40afcc:	xchg   ebx,eax
  40afcd:	jb     0x40af6c
  40afcf:	es xor eax,0x1a6a7010
  40afd5:	icebp  
  40afd6:	xor    ebp,DWORD PTR [ecx+0x40]
  40afd9:	dec    ecx
  40afda:	push   ebp
  40afdb:	inc    edi
  40afdc:	shl    BYTE PTR [ebp-0x1518e8d8],1
  40afe2:	xchg   esi,eax
  40afe3:	int    0xb6
  40afe5:	(bad)  
  40afe6:	(bad)  
  40afe7:	loopne 0x40afd9
  40afe9:	add    bl,BYTE PTR [ecx]
  40afeb:	mov    ?,WORD PTR ds:0x4a2391a
  40aff1:	push   ecx
  40aff2:	in     al,dx
  40aff3:	stc    
  40aff4:	ja     0x40afff
  40aff6:	les    edi,FWORD PTR [ecx]
  40aff8:	mov    ebp,0xea947ed1
  40affd:	test   edx,esp
  40afff:	addr16 mov cl,0x5a
  40b002:	retf   0x1142
  40b005:	es pop ds
  40b007:	lahf   
  40b008:	add    dh,BYTE PTR [ebx]
  40b00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b00b:	mov    cl,0xbf
  40b00d:	(bad)  
  40b00e:	(bad)  
  40b00f:	mov    ds:0x7e696786,al
  40b014:	pop    ebx
  40b015:	cmp    DWORD PTR [eax-0x78144170],esp
  40b01b:	loope  0x40b067
  40b01d:	pop    ebx
  40b01e:	jmp    0x420a:0x44f301ff
  40b025:	fnstenv [ebx-0x7a]
  40b028:	sbb    eax,0xe6331d09
  40b02d:	lds    ebp,FWORD PTR [ecx-0xf9aec30]
  40b033:	shl    BYTE PTR [esi-0x7d],1
  40b036:	inc    esi
  40b037:	or     al,0x88
  40b039:	mov    al,0xc8
  40b03b:	dec    ebp
  40b03c:	mov    dl,0xf8
  40b03e:	pop    es
  40b03f:	push   cs
  40b040:	leave  
  40b041:	das    
  40b042:	or     al,0xb
  40b044:	inc    edi
  40b045:	icebp  
  40b046:	pop    ebp
  40b047:	repnz mov edx,0x2e4b3bdd
  40b04d:	jge    0x40b04f
  40b04f:	inc    esi
  40b050:	fwait
  40b051:	test   BYTE PTR ss:[ebp+ebp*2+0x3],dh
  40b056:	jne    0x40b032
  40b058:	(bad)  
  40b05a:	es popw ds
  40b05d:	hlt    
  40b05e:	push   es
  40b05f:	fbld   TBYTE PTR [eax-0x46]
  40b062:	push   cs
  40b063:	push   0x450c61fe
  40b068:	jmp    0x531cb5e
  40b06d:	fwait
  40b06e:	inc    eax
  40b06f:	xor    DWORD PTR [eax-0x55],0x1
  40b073:	or     cl,BYTE PTR [edi]
  40b075:	mov    ds,WORD PTR [ebp-0x16c696ea]
  40b07b:	sub    ch,BYTE PTR [ebp-0x4604a4e7]
  40b081:	dec    esi
  40b082:	fwait
  40b083:	shl    DWORD PTR [eax+0x57],0x9c
  40b087:	push   ebp
  40b088:	jecxz  0x40b0fb
  40b08a:	xor    eax,0x2b4ccaca
  40b08f:	cmp    ax,0x32ab
  40b093:	ins    BYTE PTR es:[edi],dx
  40b094:	stos   DWORD PTR es:[edi],eax
  40b095:	(bad)  ss:[edx]
  40b098:	sbb    esi,DWORD PTR [esi+0x22464789]
  40b09e:	sbb    eax,0xdf674994
  40b0a3:	xchg   esp,eax
  40b0a4:	pop    esi
  40b0a5:	or     DWORD PTR [ecx+0x6],esi
  40b0a8:	jb     0x40b0e5
  40b0aa:	pop    ebx
  40b0ab:	and    ebx,DWORD PTR [ebp+ecx*8-0x1be19b8c]
  40b0b2:	inc    ebx
  40b0b3:	jb     0x40b073
  40b0b5:	in     al,0x2d
  40b0b7:	mov    dh,ah
  40b0b9:	fld    QWORD PTR [esi+0x79]
  40b0bc:	push   ss
  40b0bd:	daa    
  40b0be:	inc    ebx
  40b0bf:	int3   
  40b0c0:	in     eax,0xb1
  40b0c2:	jmp    0x40b0d7
  40b0c4:	or     esp,DWORD PTR [edi]
  40b0c6:	lea    ebp,[eax+0x2e5933a6]
  40b0cc:	adc    DWORD PTR [ebx],ebx
  40b0ce:	or     edx,DWORD PTR [ebp+0x18a682bc]
  40b0d4:	int    0xe9
  40b0d6:	inc    ecx
  40b0d7:	add    DWORD PTR gs:[edx+ecx*2+0x11],edi
  40b0dc:	cmp    eax,0x622be1cd
  40b0e1:	cwde   
  40b0e2:	cmp    ah,dl
  40b0e4:	and    eax,0x84861889
  40b0e9:	bswap  edi
  40b0eb:	xchg   edi,eax
  40b0ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ed:	xchg   DWORD PTR ds:0x4babcf35,ebp
  40b0f3:	dec    edi
  40b0f4:	mov    ch,0xd2
  40b0f6:	xor    ah,BYTE PTR [ecx-0x5c934973]
  40b0fc:	loopne 0x40b136
  40b0fe:	inc    esi
  40b0ff:	xchg   ebp,eax
  40b100:	in     eax,dx
  40b101:	mov    esi,cs
  40b103:	(bad)  ds:0xe1dc3e85
  40b109:	in     eax,0x7f
  40b10b:	sub    al,0x56
  40b10d:	fcom   st(3)
  40b10f:	xlat   BYTE PTR ds:[ebx]
  40b110:	out    dx,al
  40b111:	mov    edi,esp
  40b113:	mov    esp,0xdb1a5fe5
  40b118:	and    eax,0xebdda23c
  40b11d:	sub    BYTE PTR [ebp-0x491ffb1d],ah
  40b123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b124:	sbb    eax,0x533469bf
  40b129:	sbb    bl,0x97
  40b12c:	cmp    eax,0x9f1a9629
  40b131:	add    al,0x90
  40b133:	cld    
  40b134:	je     0x40b100
  40b136:	ss aad 0x7b
  40b139:	cwde   
  40b13a:	(bad)  
  40b13b:	fsubr  QWORD PTR [eax-0x474bbdc2]
  40b141:	mov    DWORD PTR [esi+0x70],ecx
  40b144:	hlt    
  40b145:	xchg   esi,eax
  40b146:	jbe    0x40b183
  40b148:	and    BYTE PTR [edx+0x67],0xde
  40b14c:	call   0x349:0x68beaf6f
  40b153:	adc    bl,ah
  40b155:	add    edx,DWORD PTR [edi]
  40b157:	cld    
  40b158:	pusha  
  40b159:	xchg   edx,eax
  40b15a:	mov    esp,0x5b5efad6
  40b15f:	in     al,dx
  40b160:	mov    ecx,0x1607ad62
  40b165:	lea    edx,[edi+ebp*1+0x4d]
  40b169:	lahf   
  40b16a:	imul   BYTE PTR [ebx-0x555ca30b]
  40b170:	ins    DWORD PTR es:[edi],dx
  40b171:	call   0xc4da:0xae05ee13
  40b178:	cmp    ecx,eax
  40b17a:	pop    esi
  40b17b:	sbb    BYTE PTR ss:[ebp+0x3044f2c1],dh
  40b182:	cmp    bl,dh
  40b184:	xor    eax,0xaaa5e5cc
  40b189:	adc    al,0x22
  40b18b:	xchg   edx,eax
  40b18c:	pop    eax
  40b18d:	push   0x1e319b7a
  40b192:	mov    edi,0x3638431b
  40b197:	add    DWORD PTR [ebp+eiz*1+0x11],esi
  40b19b:	sub    dh,dh
  40b19d:	repz stc 
  40b19f:	fwait
  40b1a0:	ins    DWORD PTR es:[edi],dx
  40b1a1:	sbb    eax,0x160189d3
  40b1a6:	or     al,bl
  40b1a8:	xor    ah,BYTE PTR [esi-0x7f9422e9]
  40b1ae:	mov    bl,0xdf
  40b1b0:	and    eax,0x630aa9e2
  40b1b5:	dec    esi
  40b1b6:	fisttp WORD PTR [edi+edx*4]
  40b1b9:	shl    DWORD PTR [edx+0x55],0x87
  40b1bd:	adc    DWORD PTR [ecx+0x2b],ebx
  40b1c0:	pop    ss
  40b1c1:	mov    eax,0xeea74e68
  40b1c6:	push   ebx
  40b1c7:	js     0x40b1bc
  40b1c9:	leave  
  40b1ca:	les    ebx,FWORD PTR [ecx-0x447b7771]
  40b1d0:	fwait
  40b1d1:	scas   al,BYTE PTR es:[edi]
  40b1d2:	(bad)  
  40b1d3:	mov    eax,0x1de10126
  40b1d8:	or     al,0x1c
  40b1da:	mov    DWORD PTR [edx],esp
  40b1dc:	or     BYTE PTR [ebx-0x3b],ah
  40b1df:	shl    DWORD PTR [ebp-0x32],1
  40b1e2:	in     eax,0x64
  40b1e4:	sbb    dh,bh
  40b1e6:	jmp    0x40b25b
  40b1e8:	pop    ss
  40b1e9:	fidiv  WORD PTR ds:0x67878be6
  40b1ef:	inc    esi
  40b1f0:	dec    ebx
  40b1f1:	scas   eax,DWORD PTR es:[edi]
  40b1f2:	in     al,dx
  40b1f3:	jmp    FWORD PTR [ebx-0x3b]
  40b1f6:	push   ss
  40b1f7:	cmp    al,0x5
  40b1f9:	dec    ecx
  40b1fa:	xchg   ebx,eax
  40b1fb:	dec    ecx
  40b1fc:	or     bh,BYTE PTR [edi+0x56]
  40b1ff:	sar    DWORD PTR [ecx],cl
  40b201:	cvttps2pi mm0,QWORD PTR [eax+0x53a08692]
  40b208:	cmp    ebp,DWORD PTR [edx]
  40b20a:	loop   0x40b1dd
  40b20c:	inc    esi
  40b20d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b20e:	cli    
  40b20f:	inc    esp
  40b210:	retf   0x7513
  40b213:	pop    eax
  40b214:	stos   BYTE PTR es:[edi],al
  40b215:	shr    BYTE PTR [ebp-0x42898c58],1
  40b21b:	gs hlt 
  40b21d:	cs es push ecx
  40b220:	cmp    ecx,esp
  40b222:	xor    DWORD PTR [eax],eax
  40b224:	cwde   
  40b225:	clc    
  40b226:	mov    ebp,DWORD PTR [ebp-0xb]
  40b229:	mov    ds:0xb87d5569,al
  40b22e:	int    0x68
  40b230:	rol    DWORD PTR [di],1
  40b233:	test   BYTE PTR [esi],0xc0
  40b236:	adc    BYTE PTR [ebp+eiz*4-0x42],dh
  40b23a:	jb     0x40b1e5
  40b23c:	mul    BYTE PTR [eax+ebx*1-0x3b69b1cd]
  40b243:	add    ax,WORD PTR [edx-0x36]
  40b247:	push   es
  40b248:	ds call 0xbd1004c4
  40b24e:	cmp    al,0x72
  40b250:	inc    eax
  40b251:	mov    ch,0x5c
  40b253:	loopne 0x40b1e5
  40b255:	aas    
  40b256:	dec    edi
  40b257:	repnz xor ah,BYTE PTR [ecx-0x49]
  40b25b:	je     0x40b2ad
  40b25d:	dec    edi
  40b25e:	mov    ah,0xf4
  40b260:	nop
  40b261:	lock jne 0x40b26a
  40b264:	mov    eax,ds:0x884d0f04
  40b269:	adc    DWORD PTR [edi],edi
  40b26b:	jbe    0x40b24e
  40b26d:	xor    al,0x83
  40b26f:	jns    0x40b25f
  40b271:	sbb    al,0x88
  40b273:	dec    ebp
  40b274:	mov    al,ds:0xe744820d
  40b279:	(bad)  
  40b27a:	(bad)  [eax-0x62dd5626]
  40b280:	mov    eax,ds:0x61d1150b
  40b285:	popa   
  40b286:	repz mov esi,0x467ced28
  40b28c:	push   ds
  40b28d:	mov    ebx,0xbfe7d6d8
  40b292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b293:	fld    QWORD PTR [edi]
  40b295:	dec    edi
  40b296:	sahf   
  40b297:	cmp    eax,0xd4701379
  40b29c:	(bad)  
  40b29d:	retf   0x86a4
  40b2a0:	cmp    ebx,DWORD PTR [ecx-0x3c46676e]
  40b2a6:	pusha  
  40b2a7:	lods   eax,DWORD PTR ds:[esi]
  40b2a8:	push   edx
  40b2a9:	test   ah,0xb5
  40b2ac:	jne    0x40b2b9
  40b2ae:	jle    0x40b2d0
  40b2b0:	out    0x75,al
  40b2b2:	xchg   ebp,eax
  40b2b3:	jbe    0x40b2ea
  40b2b5:	mov    dh,0xf9
  40b2b7:	imul   ebp,DWORD PTR [ebx],0xbbbe2dcd
  40b2bd:	js     0x40b287
  40b2bf:	loop   0x40b2f7
  40b2c1:	mov    ?,WORD PTR [edx+eax*8-0x71a4bc6c]
  40b2c8:	mov    dh,0xd7
  40b2ca:	push   ss
  40b2cb:	push   ebx
  40b2cc:	jnp    0x40b2f8
  40b2ce:	rol    bl,1
  40b2d0:	pop    edi
  40b2d1:	mov    esi,0x54ea7e39
  40b2d6:	lahf   
  40b2d7:	shl    DWORD PTR [esi],cl
  40b2d9:	lea    ebp,[edx]
  40b2db:	adc    al,0x35
  40b2dd:	cmp    BYTE PTR [edi+0x7b],bl
  40b2e0:	cmp    dl,BYTE PTR [ecx]
  40b2e2:	adc    eax,0xa6d0a063
  40b2e7:	leave  
  40b2e8:	out    dx,al
  40b2e9:	aam    0xae
  40b2eb:	aaa    
  40b2ec:	loopne 0x40b2e2
  40b2ee:	mov    DWORD PTR [ecx+0x64a5dffc],eax
  40b2f4:	jmp    0x866a8bed
  40b2f9:	and    bh,BYTE PTR [eax+0x6afa5576]
  40b2ff:	int3   
  40b300:	dec    ecx
  40b301:	xlat   BYTE PTR ds:[ebx]
  40b302:	sub    DWORD PTR [edx+ecx*4+0x76],edx
  40b306:	push   0xffffff89
  40b308:	jno    0x40b359
  40b30a:	arpl   cx,dx
  40b30c:	jo     0x40b303
  40b30e:	mov    dl,0x5a
  40b310:	(bad)  
  40b311:	in     al,dx
  40b312:	xchg   ecx,eax
  40b313:	mov    ebp,0x8686a461
  40b318:	cwde   
  40b319:	sbb    BYTE PTR [ecx+ebx*2-0x3aa1881a],ah
  40b320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b321:	mov    eax,ds:0x7e2bc021
  40b326:	sti    
  40b327:	ja     0x40b2c9
  40b329:	pop    edx
  40b32a:	or     DWORD PTR [eax-0x70b9778b],esi
  40b330:	std    
  40b331:	mov    esp,ebp
  40b333:	sub    DWORD PTR ds:0xf379a635,esi
  40b339:	sbb    al,0x2e
  40b33b:	xchg   ebp,eax
  40b33c:	pop    ebx
  40b33d:	mov    ah,0x22
  40b33f:	ja     0x40b3b8
  40b341:	popf   
  40b342:	xor    BYTE PTR [esi-0x32db1ce8],dh
  40b348:	popa   
  40b349:	pusha  
  40b34a:	push   0xe9fa25ae
  40b34f:	sub    BYTE PTR [esi-0x3811e7ee],ch
  40b355:	pop    eax
  40b356:	sbb    ebx,ebx
  40b358:	dec    esi
  40b359:	sbb    esi,DWORD PTR [edx]
  40b35b:	sub    eax,0x5f426adb
  40b360:	add    al,0xe
  40b362:	shr    DWORD PTR [edi+0xadc45a4],cl
  40b368:	add    ecx,eax
  40b36a:	sub    edx,DWORD PTR [ebx]
  40b36c:	cwde   
  40b36d:	gs je  0x40b35a
  40b370:	cmp    DWORD PTR [ebp-0x1b],edx
  40b373:	jb     0x40b3a4
  40b375:	jg     0x40b369
  40b377:	jne    0x40b363
  40b379:	ins    BYTE PTR es:[edi],dx
  40b37a:	mov    edi,0xfdfb4090
  40b37f:	out    0xb4,eax
  40b381:	push   edi
  40b382:	fistp  QWORD PTR [esi-0x55]
  40b385:	repnz adc ah,ch
  40b388:	inc    edi
  40b389:	gs pusha 
  40b38b:	pop    esp
  40b38c:	pop    ss
  40b38d:	in     al,0x92
  40b38f:	in     eax,dx
  40b390:	xchg   esi,eax
  40b391:	sbb    al,0xd3
  40b393:	sbb    esp,ebp
  40b395:	cs add eax,0x23a08844
  40b39b:	(bad)  
  40b39d:	jae    0x40b414
  40b39f:	jge    0x40b401
  40b3a1:	push   ds
  40b3a2:	push   esp
  40b3a3:	sub    DWORD PTR [ebx-0x57],esi
  40b3a6:	idiv   al
  40b3a8:	pop    ss
  40b3a9:	out    dx,al
  40b3aa:	int3   
  40b3ab:	shl    DWORD PTR [ebx+0x7f],1
  40b3ae:	ucomiss xmm1,xmm4
  40b3b1:	test   DWORD PTR [ebp+0x25],esi
  40b3b4:	sub    edx,DWORD PTR [edi-0x116c6b7]
  40b3ba:	ds stc 
  40b3bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3bd:	lahf   
  40b3be:	xor    al,0x35
  40b3c0:	pop    esi
  40b3c1:	mov    ecx,0x45969375
  40b3c6:	(bad)  [ebx+0x49890d07]
  40b3cc:	mov    al,0xd0
  40b3ce:	xor    al,0xf7
  40b3d0:	or     eax,DWORD PTR [ecx-0x6a]
  40b3d3:	add    esi,esp
  40b3d5:	test   eax,0xc896f1a2
  40b3da:	xor    al,0x12
  40b3dc:	pop    ecx
  40b3dd:	lea    esi,ds:0xa0e9fffa
  40b3e3:	sbb    eax,0x876db98b
  40b3e8:	push   ecx
  40b3e9:	ja     0x40b40e
  40b3eb:	(bad)  [edx+0x31]
  40b3ee:	cdq    
  40b3ef:	dec    edi
  40b3f0:	or     ch,BYTE PTR [ebx-0x3c499b23]
  40b3f6:	lods   eax,DWORD PTR ds:[esi]
  40b3f7:	push   esp
  40b3f8:	cdq    
  40b3f9:	fisubr WORD PTR [ecx-0x7fc0ae64]
  40b3ff:	mov    dl,0x72
  40b401:	test   al,0x67
  40b403:	ret    
  40b404:	xchg   esi,eax
  40b405:	call   0x771b:0x1b5588b4
  40b40c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40b40e:	dec    edi
  40b40f:	adc    dl,ah
  40b411:	fstp   DWORD PTR [esi+edx*8+0x2fc3f098]
  40b418:	sbb    edi,DWORD PTR [eax-0x5a6ae94d]
  40b41e:	xor    edx,eax
  40b420:	adc    ebx,DWORD PTR [ebp+0x60]
  40b423:	in     al,dx
  40b424:	mov    ah,0xed
  40b426:	in     al,dx
  40b427:	xchg   ecx,eax
  40b428:	inc    eax
  40b429:	es push ebp
  40b42b:	fst    QWORD PTR [edx+0x2e]
  40b42e:	fs cmp esp,esp
  40b431:	pop    eax
  40b432:	sahf   
  40b433:	ret    
  40b434:	cmp    dh,BYTE PTR [ecx+ebp*8]
  40b437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b438:	pop    esp
  40b439:	push   ds
  40b43a:	fsub   DWORD PTR [ecx-0x6497ed1d]
  40b440:	cdq    
  40b441:	aas    
  40b442:	xor    BYTE PTR ds:0xabca31c8,bh
  40b448:	jnp    0x40b418
  40b44a:	adc    al,0x15
  40b44c:	pop    eax
  40b44d:	scas   al,BYTE PTR es:[edi]
  40b44e:	mov    DWORD PTR [esi],edi
  40b450:	aas    
  40b451:	mov    esp,0x41804270
  40b456:	arpl   WORD PTR [ebp+0x79a33445],bp
  40b45c:	xor    al,0x6b
  40b45e:	push   ebp
  40b45f:	sub    eax,0x3a78ed68
  40b464:	shl    DWORD PTR [edi+0x75],1
  40b467:	inc    ebp
  40b468:	stos   DWORD PTR es:[edi],eax
  40b469:	or     eax,0xb3aac71a
  40b46e:	fistp  QWORD PTR [esi+ebp*1+0x50df2a87]
  40b475:	fsin   
  40b477:	inc    edi
  40b478:	int3   
  40b479:	mov    ch,0x8b
  40b47b:	out    dx,al
  40b47c:	or     DWORD PTR [ecx],ebp
  40b47e:	pop    eax
  40b47f:	lods   eax,DWORD PTR ds:[esi]
  40b480:	scas   al,BYTE PTR es:[edi]
  40b481:	xor    eax,0x3d5e44fb
  40b486:	in     eax,dx
  40b487:	push   ss
  40b488:	xchg   edx,eax
  40b489:	outs   dx,BYTE PTR ds:[esi]
  40b48a:	and    al,0x3f
  40b48c:	into   
  40b48d:	push   es
  40b48e:	lock xor edi,DWORD PTR ds:0x4ae24a82
  40b495:	(bad)  [esi+0xd]
  40b498:	mov    ch,0xad
  40b49a:	lea    ebx,[ecx]
  40b49c:	jbe    0x40b518
  40b49e:	adc    BYTE PTR [edx+0x2211c786],dl
  40b4a4:	idiv   BYTE PTR [ecx+0x6]
  40b4a7:	into   
  40b4a8:	jmp    0xaae4:0x6ac8931
  40b4af:	cs cld 
  40b4b1:	xchg   DWORD PTR [esi+edi*1-0x7c3775f3],esp
  40b4b8:	push   ebx
  40b4b9:	lds    ebp,FWORD PTR [eax]
  40b4bb:	mov    edx,0xecee72c1
  40b4c0:	shr    BYTE PTR [esi-0x36],cl
  40b4c3:	or     dh,BYTE PTR [ebx-0x5f86221a]
  40b4c9:	mov    ds:0xc44e3092,eax
  40b4ce:	inc    edi
  40b4cf:	mov    ebp,0xe8e4820f
  40b4d4:	inc    edi
  40b4d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4d6:	sub    al,0xd0
  40b4d8:	jge    0x40b4f0
  40b4da:	add    DWORD PTR [ecx+0x8],ebx
  40b4dd:	mov    eax,ds:0x3525c9f0
  40b4e2:	push   0xffffffb5
  40b4e4:	(bad)  
  40b4e6:	cmp    BYTE PTR [ecx+0x35ef1eb4],dl
  40b4ec:	pop    ds
  40b4ed:	cmc    
  40b4ee:	fimul  WORD PTR ds:0x2d1bf88e
  40b4f4:	xor    al,0x83
  40b4f6:	mov    ebp,0x6a48cf05
  40b4fb:	sub    eax,0xb79f8378
  40b500:	cmc    
  40b501:	jb     0x40b4a0
  40b503:	into   
  40b504:	pop    esp
  40b505:	cmp    BYTE PTR [edx],cl
  40b507:	cmc    
  40b508:	cmc    
  40b509:	clc    
  40b50a:	lea    edx,[edi-0x61]
  40b50d:	in     al,0x17
  40b50f:	stos   BYTE PTR es:[edi],al
  40b510:	dec    edi
  40b511:	push   0x9312eea8
  40b516:	dec    ecx
  40b517:	dec    esp
  40b518:	shr    BYTE PTR [edx-0xb2162cd],0x71
  40b51f:	test   al,0x9b
  40b521:	and    esi,DWORD PTR [ebx]
  40b523:	and    ecx,eax
  40b525:	pop    ebx
  40b526:	push   esp
  40b527:	aas    
  40b528:	mov    ah,0xda
  40b52a:	pop    ss
  40b52b:	pop    esp
  40b52c:	sbb    DWORD PTR [eax+0x3],ebp
  40b52f:	sti    
  40b530:	retf   
  40b531:	jge    0x40b4ea
  40b533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b534:	clc    
  40b535:	pop    ds
  40b536:	sub    bl,BYTE PTR [ecx]
  40b538:	dec    edi
  40b539:	out    dx,al
  40b53a:	mov    ?,edx
  40b53c:	xchg   dl,ah
  40b53e:	mov    BYTE PTR [edx+0x6658aca3],dl
  40b544:	lods   eax,DWORD PTR ds:[esi]
  40b545:	(bad)  [eax-0x3f]
  40b548:	shr    dh,1
  40b54a:	pop    ebp
  40b54b:	pop    eax
  40b54c:	and    esp,DWORD PTR [edi]
  40b54e:	xchg   esp,eax
  40b54f:	or     DWORD PTR [edx-0x70],eax
  40b552:	cmp    DWORD PTR [eax+0x12479dd3],eax
  40b558:	into   
  40b559:	jae    0x40b517
  40b55b:	js     0x40b4ec
  40b55d:	sbb    al,BYTE PTR [edi-0x1cf8c4f3]
  40b563:	mov    ch,0xeb
  40b565:	add    bh,BYTE PTR [eax-0x24]
  40b568:	test   DWORD PTR [ebp+0x12abbadb],ecx
  40b56e:	call   0xb07511fe
  40b573:	mov    BYTE PTR [edx],ch
  40b575:	mov    bh,0x68
  40b577:	rcr    DWORD PTR gs:[ebp+0x224886ec],1
  40b57e:	push   0xfa0b8a0e
  40b583:	je     0x40b55c
  40b585:	jae    0x40b59d
  40b587:	push   edi
  40b588:	xchg   edi,eax
  40b589:	int3   
  40b58a:	xchg   DWORD PTR [ebp-0x29fa223b],ebx
  40b590:	cdq    
  40b591:	jns    0x40b527
  40b593:	enter  0xd04d,0xb
  40b597:	pcmpgtw mm0,QWORD PTR [ecx+eiz*1-0x14]
  40b59c:	iret   
  40b59d:	pop    edx
  40b59e:	mov    cl,0x83
  40b5a0:	mov    edx,0xc4f030ee
  40b5a5:	(bad)  
  40b5a6:	mov    eax,ds:0xe6d1fecd
  40b5ab:	mov    ds:0xc2bcbb23,eax
  40b5b0:	jne    0x40b5d9
  40b5b2:	cmp    al,0xbe
  40b5b4:	ss sbb al,0xcf
  40b5b7:	cmp    eax,0xaf745200
  40b5bc:	push   eax
  40b5bd:	lods   eax,DWORD PTR ds:[esi]
  40b5be:	jns    0x40b609
  40b5c0:	outs   dx,DWORD PTR ds:[esi]
  40b5c1:	adc    DWORD PTR [esi+edi*8-0x1d66bce8],esi
  40b5c8:	jecxz  0x40b5b7
  40b5ca:	dec    eax
  40b5cb:	jo     0x40b5f5
  40b5cd:	int    0x4d
  40b5cf:	pushf  
  40b5d0:	mov    eax,0x1db78dc3
  40b5d5:	leave  
  40b5d6:	pop    es
  40b5d7:	sbb    al,0x20
  40b5d9:	pop    edi
  40b5da:	push   eax
  40b5db:	jp     0x40b575
  40b5dd:	imul   esp,DWORD PTR [ebx-0x349e7cef],0x6b
  40b5e4:	sbb    ah,BYTE PTR [esi+0x2e4c63a7]
  40b5ea:	jl     0x40b57a
  40b5ec:	inc    edi
  40b5ed:	call   0xbf8000cd
  40b5f2:	in     eax,dx
  40b5f3:	rcr    DWORD PTR [ecx-0x4fe5823c],0x21
  40b5fa:	les    ebp,FWORD PTR [ebx-0x53f5c0d8]
  40b600:	dec    esp
  40b601:	sub    ecx,ebp
  40b603:	push   eax
  40b604:	jns    0x40b606
  40b606:	pop    ebp
  40b607:	jp     0x40b651
  40b609:	test   eax,0xc54a3cef
  40b60e:	inc    esi
  40b60f:	and    al,0x62
  40b611:	inc    eax
  40b612:	lods   al,BYTE PTR ds:[esi]
  40b613:	pop    esp
  40b614:	fwait
  40b615:	sub    dh,BYTE PTR [ecx+0x22]
  40b618:	mov    al,0x0
  40b61a:	jp     0x40b674
  40b61c:	mov    al,0xf4
  40b61e:	inc    ebp
  40b61f:	ds mov cl,0x5a
  40b622:	sbb    BYTE PTR [esi],ch
  40b624:	hlt    
  40b625:	xchg   eax,eax
  40b627:	mov    bl,0x1a
  40b629:	add    al,BYTE PTR [edi-0x2f]
  40b62c:	js     0x40b626
  40b62e:	(bad)  
  40b62f:	ins    BYTE PTR es:[edi],dx
  40b630:	fadd   st(0),st
  40b632:	das    
  40b633:	rol    edx,1
  40b635:	push   esp
  40b636:	lea    eax,[edi+0x2b]
  40b639:	jmp    0x1ff54933
  40b63e:	jae    0x40b6ba
  40b640:	fst    QWORD PTR [edi+0x63]
  40b643:	pop    esi
  40b644:	xchg   edi,eax
  40b645:	dec    eax
  40b646:	jmp    0x3e28267a
  40b64b:	pop    edi
  40b64c:	dec    edx
  40b64d:	pop    edi
  40b64e:	xor    BYTE PTR [edx],bh
  40b650:	sub    ebx,0xd13cf1fc
  40b656:	lock sub ebp,DWORD PTR [esi+0x2f]
  40b65a:	jge    0x40b632
  40b65c:	(bad)  
  40b65e:	mov    edx,0x8f280f96
  40b663:	pushf  
  40b664:	xor    bl,BYTE PTR [edi+0x43fd730a]
  40b66a:	ja     0x40b630
  40b66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b66d:	push   ds
  40b66e:	jb     0x40b69b
  40b670:	jo     0x40b6bc
  40b672:	neg    BYTE PTR [ebx]
  40b674:	adc    ch,BYTE PTR [esi+edi*4-0x511a936d]
  40b67b:	and    ebx,DWORD PTR [eax-0x2b6b2b78]
  40b681:	rcl    bl,0xb8
  40b684:	sub    eax,0x46a28658
  40b689:	sahf   
  40b68a:	mov    ds:0x40230265,eax
  40b68f:	cs cwde 
  40b691:	mov    bh,0xef
  40b693:	adc    BYTE PTR [ecx],ah
  40b695:	jmp    0x40b625
  40b697:	stc    
  40b698:	mov    ah,0x98
  40b69a:	icebp  
  40b69b:	jno    0x40b649
  40b69d:	add    al,0xd5
  40b69f:	adc    DWORD PTR [edi+0xde06590],edi
  40b6a5:	test   eax,0xcdb2face
  40b6aa:	shl    BYTE PTR [esi+eax*1],cl
  40b6ad:	in     al,dx
  40b6ae:	mov    ch,0xe3
  40b6b0:	lods   al,BYTE PTR ds:[esi]
  40b6b1:	lds    ebp,FWORD PTR [ecx]
  40b6b3:	cld    
  40b6b4:	push   ss
  40b6b5:	sub    BYTE PTR [ecx],0xa0
  40b6b8:	sub    ecx,DWORD PTR [ebp-0x4d]
  40b6bb:	std    
  40b6bc:	pop    ss
  40b6bd:	jmp    0xf5382fb8
  40b6c2:	imul   ebp,DWORD PTR [ecx+0x442bde86],0xe5679463
  40b6cc:	jge    0x40b6ae
  40b6ce:	mov    ebp,0xf1ce794a
  40b6d3:	and    BYTE PTR [edi+ebp*1],bl
  40b6d6:	push   es
  40b6d7:	mov    edi,0xd501699d
  40b6dc:	das    
  40b6dd:	add    al,0x49
  40b6df:	mov    BYTE PTR [edi+0xdd6ff87],ah
  40b6e5:	cmp    BYTE PTR [esi+ebx*1],bl
  40b6e8:	(bad)  
  40b6e9:	out    dx,al
  40b6ea:	test   BYTE PTR [eax+0xacb7fc3],0xa6
  40b6f1:	xor    eax,0x1f498302
  40b6f6:	pop    ecx
  40b6f7:	icebp  
  40b6f8:	inc    edx
  40b6f9:	pop    esi
  40b6fa:	and    ebp,esp
  40b6fc:	fdiv   QWORD PTR [esi-0x61bbf78]
  40b702:	or     al,0xf3
  40b704:	ja     0x40b6f1
  40b706:	loop   0x40b732
  40b708:	xor    ebp,0xf1ac7022
  40b70e:	cld    
  40b70f:	xlat   BYTE PTR ds:[ebx]
  40b710:	ret    
  40b711:	and    al,0x8a
  40b713:	cmp    eax,0x9d440e12
  40b718:	out    0x92,al
  40b71a:	jnp    0x40b727
  40b71c:	outs   dx,DWORD PTR ds:[esi]
  40b71d:	mov    ds,WORD PTR [ecx]
  40b71f:	jge    0x40b778
  40b721:	fsub   QWORD PTR [edi]
  40b723:	xor    esi,esp
  40b725:	js     0x40b6d3
  40b727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b728:	outs   dx,DWORD PTR ds:[esi]
  40b729:	push   edi
  40b72a:	sub    ecx,DWORD PTR [edx+0x6f]
  40b72d:	push   ecx
  40b72e:	es inc esp
  40b730:	data16 icebp 
  40b732:	inc    ebx
  40b733:	mov    edx,0x6729f97b
  40b738:	mov    ebx,0xfe61f76b
  40b73d:	or     dl,BYTE PTR [edx+0x41]
  40b740:	mov    esp,0x90095c16
  40b745:	aam    0xaa
  40b747:	jne    0x40b714
  40b749:	push   0x5652b8e8
  40b74e:	out    0x2e,eax
  40b750:	arpl   WORD PTR [edx+0x43e43824],di
  40b756:	xor    al,BYTE PTR [ecx]
  40b758:	mov    al,al
  40b75a:	inc    ecx
  40b75b:	push   es
  40b75c:	aas    
  40b75d:	mov    edi,es
  40b75f:	jne    0x40b7d3
  40b761:	scas   al,BYTE PTR es:[edi]
  40b762:	sbb    ah,BYTE PTR [ebx+0x4784e5df]
  40b768:	push   DWORD PTR [edi+0x7]
  40b76b:	adc    al,0x97
  40b76d:	and    al,0x24
  40b76f:	aad    0x9c
  40b771:	xlat   BYTE PTR ds:[ebx]
  40b772:	fwait
  40b773:	jnp    0x40b7c9
  40b775:	xchg   esi,eax
  40b776:	and    eax,ebx
  40b778:	std    
  40b779:	mov    cl,dh
  40b77b:	jmp    0x40b710
  40b77d:	jg     0x40b732
  40b77f:	out    dx,al
  40b780:	jmp    0x4c1bcc7e
  40b785:	cmp    al,0x7b
  40b787:	imul   DWORD PTR ds:0xa685471b
  40b78d:	push   edi
  40b78e:	test   al,0xe
  40b790:	pop    ds
  40b791:	mov    DWORD PTR [ebx+0x5e],esi
  40b794:	sbb    al,0xc1
  40b796:	ror    BYTE PTR [edi+0xe962dc2],0x54
  40b79d:	adc    ebp,DWORD PTR [edx-0xea7bec5]
  40b7a3:	es xchg edx,eax
  40b7a5:	lods   al,BYTE PTR ds:[esi]
  40b7a6:	inc    ebx
  40b7a7:	mov    al,ds:0x489f35a1
  40b7ac:	jp     0x40b78b
  40b7ae:	jmp    0x511a0325
  40b7b3:	inc    si
  40b7b5:	or     eax,0x6436d3be
  40b7ba:	jge    0x40b775
  40b7bc:	addr16 sbb ebp,eax
  40b7bf:	loopne 0x40b7e0
  40b7c1:	sbb    edx,ecx
  40b7c3:	cli    
  40b7c4:	pop    edi
  40b7c5:	sbb    esi,DWORD PTR [ecx+0x55fbd4c9]
  40b7cb:	dec    ebx
  40b7cc:	sbb    ebx,DWORD PTR [edx+0x1e2034dc]
  40b7d2:	sbb    eax,0x5e585482
  40b7d7:	sbb    BYTE PTR [ebp+0x2d19b231],cl
  40b7dd:	icebp  
  40b7de:	aaa    
  40b7df:	arpl   si,di
  40b7e1:	mov    dh,0xb9
  40b7e3:	sbb    cl,0x1c
  40b7e6:	pop    ecx
  40b7e7:	es pop esp
  40b7e9:	adc    BYTE PTR [edi],0x56
  40b7ec:	push   ecx
  40b7ed:	les    edx,FWORD PTR [ecx+0x64bbcece]
  40b7f3:	dec    edx
  40b7f4:	xchg   esi,eax
  40b7f5:	add    esi,ebp
  40b7f7:	imul   al
  40b7f9:	andps  xmm4,xmm6
  40b7fc:	adc    eax,0xa614396b
  40b801:	pushf  
  40b802:	mov    cl,BYTE PTR [edx]
  40b804:	in     eax,0x39
  40b806:	popa   
  40b807:	push   edi
  40b808:	aad    0x33
  40b80a:	test   BYTE PTR [ebx-0x2619d820],dh
  40b810:	lahf   
  40b811:	and    edx,edi
  40b813:	nop
  40b814:	inc    esi
  40b815:	adc    al,0x34
  40b817:	mov    ah,0xa5
  40b819:	pop    esp
  40b81a:	sub    esi,ecx
  40b81c:	(bad)  
  40b81e:	dec    ecx
  40b81f:	lea    ebp,[esi+0x2]
  40b822:	sbb    eax,ebp
  40b824:	cli    
  40b825:	add    esi,0x11
  40b828:	out    dx,al
  40b829:	out    0x94,eax
  40b82b:	shl    DWORD PTR [edi],cl
  40b82d:	mov    esp,0x891610fa
  40b832:	mov    al,BYTE PTR [edx]
  40b834:	ret    
  40b835:	in     eax,dx
  40b836:	mov    dl,0x68
  40b838:	into   
  40b839:	sub    ah,BYTE PTR [ebx]
  40b83b:	lods   al,BYTE PTR ds:[esi]
  40b83c:	xchg   ebx,eax
  40b83d:	add    al,0x34
  40b83f:	mov    BYTE PTR [edx-0x16c67667],ch
  40b845:	lock sbb dh,BYTE PTR [ecx+0xb690736]
  40b84c:	push   ss
  40b84d:	cmp    DWORD PTR [eax+0xb5c1e84],edx
  40b853:	jb     0x40b85e
  40b855:	cs dec eax
  40b857:	scas   al,BYTE PTR es:[edi]
  40b858:	sub    BYTE PTR [eax-0x51319194],dl
  40b85e:	test   eax,0xb8c616b6
  40b863:	xchg   ebp,eax
  40b864:	inc    esp
  40b865:	xchg   BYTE PTR [esi+esi*2+0x54],dh
  40b869:	jle    0x40b8c2
  40b86b:	sbb    eax,0x1fb3f28d
  40b870:	xlat   BYTE PTR ds:[ebx]
  40b871:	lods   eax,DWORD PTR ds:[esi]
  40b872:	push   esp
  40b873:	js     0x40b857
  40b875:	sub    BYTE PTR [ebx+0x3079fb5],0xb0
  40b87c:	das    
  40b87d:	adc    edx,DWORD PTR [eax+0x43eaab24]
  40b883:	repz dec eax
  40b885:	mov    eax,0xc14bf1ad
  40b88a:	cmc    
  40b88b:	getsec 
  40b88d:	cmp    BYTE PTR [ebp+0x25],0xed
  40b891:	cmp    esi,DWORD PTR [edi]
  40b893:	sahf   
  40b894:	ds inc ecx
  40b896:	add    edx,DWORD PTR [ecx-0x44]
  40b899:	loope  0x40b878
  40b89b:	popa   
  40b89c:	fsubr  DWORD PTR [edi-0x2df84e0c]
  40b8a2:	inc    ecx
  40b8a3:	aad    0x35
  40b8a5:	add    eax,0x5b96be0
  40b8aa:	test   al,0x89
  40b8ac:	rol    DWORD PTR [ecx+0x1b],1
  40b8af:	mov    eax,ds:0xe85a22b2
  40b8b4:	scas   eax,DWORD PTR es:[edi]
  40b8b5:	icebp  
  40b8b6:	inc    eax
  40b8b7:	xchg   esi,eax
  40b8b8:	mov    al,0xbb
  40b8ba:	mov    DWORD PTR [ebx],edx
  40b8bc:	inc    esi
  40b8bd:	sbb    ah,BYTE PTR ds:0x26034a52
  40b8c3:	fwait
  40b8c4:	mov    ah,0xf1
  40b8c6:	pop    edi
  40b8c7:	lods   al,BYTE PTR ds:[esi]
  40b8c8:	push   ebp
  40b8ca:	xor    ebp,edi
  40b8cc:	loopne 0x40b8ac
  40b8ce:	mov    eax,ds:0xa425afb1
  40b8d3:	push   edx
  40b8d4:	test   DWORD PTR [esi-0x3f0be30e],esp
  40b8da:	fidivr WORD PTR [ebx+0x24]
  40b8dd:	stos   BYTE PTR es:[edi],al
  40b8de:	dec    bp
  40b8e0:	cs xor ebp,edx
  40b8e3:	inc    esp
  40b8e4:	jne    0x40b8ff
  40b8e6:	loopne 0x40b932
  40b8e8:	sti    
  40b8e9:	scas   eax,DWORD PTR es:[edi]
  40b8ea:	sub    BYTE PTR [ebx],ah
  40b8ec:	cmp    bh,BYTE PTR [ecx-0x4d]
  40b8ef:	popf   
  40b8f0:	xchg   esp,eax
  40b8f1:	rcr    ebp,cl
  40b8f3:	pop    ss
  40b8f4:	sbb    edi,DWORD PTR [esi]
  40b8f6:	mov    ah,0x37
  40b8f8:	ja     0x40b96d
  40b8fa:	fdivr  DWORD PTR ds:0x3bcf7acb
  40b900:	jg     0x40b8b3
  40b902:	mov    DWORD PTR [edi],edi
  40b904:	mov    ah,0xbb
  40b906:	div    bl
  40b908:	addr16 mov ecx,0x8f364145
  40b90e:	pop    edi
  40b90f:	jo     0x40b8d1
  40b911:	adc    eax,0xb64a2818
  40b916:	add    bh,dh
  40b918:	pop    ecx
  40b919:	ins    DWORD PTR es:[edi],dx
  40b91a:	stc    
  40b91b:	mov    BYTE PTR fs:[esi+0x19628c7],bh
  40b922:	jmp    0x40b974
  40b924:	cmp    BYTE PTR [edx+0x29e0b187],dh
  40b92a:	sbb    eax,0xc3221ed8
  40b92f:	fs jnp 0x40b99c
  40b932:	sbb    BYTE PTR [ecx+0x262cba3e],cl
  40b938:	div    BYTE PTR ds:0x8117fcef
  40b93e:	loopne 0x40b994
  40b940:	dec    eax
  40b941:	cwde   
  40b942:	inc    ebx
  40b943:	fist   WORD PTR [edx+0x39f862d]
  40b949:	ss mov cx,0x7e24
  40b94e:	jmp    0xfd93bfa3
  40b953:	std    
  40b954:	push   ebp
  40b955:	mov    esi,0x825bcdcb
  40b95a:	div    BYTE PTR [eax-0x7e]
  40b95d:	ja     0x40b9bd
  40b95f:	xchg   esp,eax
  40b960:	and    eax,0x68275d51
  40b965:	fwait
  40b966:	sub    DWORD PTR [esi-0xd15e4b1],0xde5cc01d
  40b970:	rcl    DWORD PTR [eax],0x9f
  40b973:	or     DWORD PTR [edi-0x33],esi
  40b976:	jnp    0x40b912
  40b978:	imul   DWORD PTR [ecx]
  40b97a:	repz mov esp,0x4f33aca1
  40b980:	ds mov edi,0x789d224
  40b986:	les    eax,FWORD PTR [edi+0x61]
  40b989:	jmp    0xdfbb:0x18b1b557
  40b990:	or     al,0x32
  40b992:	mov    esi,0xb5c9cf17
  40b997:	loop   0x40b9d1
  40b999:	mov    bl,0xb6
  40b99b:	shl    BYTE PTR [ebp+0x1472d716],0x23
  40b9a2:	(bad)  
  40b9a3:	push   ss
  40b9a4:	pop    ss
  40b9a5:	ss sub eax,0x5dd416af
  40b9ab:	ret    
  40b9ac:	or     BYTE PTR [esi+eax*4],al
  40b9af:	pop    edi
  40b9b0:	rol    BYTE PTR [ecx-0x14],1
  40b9b3:	mov    ebp,0x44869a3c
  40b9b8:	aaa    
  40b9b9:	scas   eax,DWORD PTR es:[edi]
  40b9ba:	inc    esp
  40b9bb:	in     eax,0x71
  40b9bd:	retf   
  40b9be:	push   0xffffff9e
  40b9c0:	(bad)  
  40b9c2:	adc    dh,dl
  40b9c4:	pop    ds
  40b9c5:	jae    0x40b9c5
  40b9c7:	inc    esp
  40b9c8:	sub    eax,0x5daabc52
  40b9cd:	pop    es
  40b9ce:	dec    edx
  40b9cf:	mov    dl,BYTE PTR [ebx+eax*2]
  40b9d2:	mov    ebx,ebx
  40b9d4:	popa   
  40b9d5:	daa    
  40b9d6:	repnz aas 
  40b9d8:	sbb    BYTE PTR [edi],0xcb
  40b9db:	push   edx
  40b9dc:	jmp    DWORD PTR ds:0xabefc04c
  40b9e2:	test   al,0x73
  40b9e4:	ret    
  40b9e5:	retf   0xdc44
  40b9e8:	stc    
  40b9e9:	adc    DWORD PTR [ecx-0x4e],esi
  40b9ec:	repnz sbb BYTE PTR [ecx+0x46],dh
  40b9f0:	push   es
  40b9f1:	jp     0x40b975
  40b9f3:	data16 cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40b9f6:	frstor [ebp+0x20c6efd5]
  40b9fc:	stos   DWORD PTR es:[edi],eax
  40b9fd:	nop
  40b9fe:	push   edx
  40b9ff:	sub    bl,BYTE PTR [ebp-0x3f]
  40ba02:	sbb    esp,DWORD PTR [edi+0x74711bd6]
  40ba08:	les    ebx,FWORD PTR [ecx-0x16]
  40ba0b:	sbb    cl,0xdd
  40ba0e:	scas   eax,DWORD PTR es:[edi]
  40ba0f:	inc    esi
  40ba10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba11:	sbb    esp,0x20
  40ba14:	push   edx
  40ba15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba17:	mov    esp,0x6c8b222b
  40ba1c:	mov    dh,0x36
  40ba1e:	jno    0x40ba81
  40ba20:	mov    esi,0x5f5c08d2
  40ba25:	jb     0x40ba02
  40ba27:	sub    edi,DWORD PTR [esi]
  40ba29:	fidiv  WORD PTR [ebx-0x1]
  40ba2c:	idiv   BYTE PTR [esp+ecx*2-0x32]
  40ba30:	pop    es
  40ba31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba32:	div    al
  40ba34:	(bad)  
  40ba35:	loope  0x40ba7f
  40ba37:	sar    DWORD PTR [ebx-0x64],1
  40ba3a:	push   ds
  40ba3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba3c:	pop    es
  40ba3d:	mov    ecx,0x616b4320
  40ba42:	aad    0x1c
  40ba44:	iret   
  40ba45:	mov    ch,0x5b
  40ba47:	mov    esi,0xe3f83912
  40ba4c:	or     al,0x65
  40ba4e:	adc    BYTE PTR [esp+ebx*4-0x12],ah
  40ba52:	test   eax,0x7b5ca5a5
  40ba57:	das    
  40ba58:	mov    al,0xdd
  40ba5a:	(bad)  
  40ba5b:	cs popa 
  40ba5d:	into   
  40ba5e:	push   esi
  40ba5f:	int    0x37
  40ba61:	shl    BYTE PTR [eax],1
  40ba63:	fld    QWORD PTR [ebx]
  40ba65:	xchg   edx,esi
  40ba67:	push   eax
  40ba68:	add    al,0xa9
  40ba6a:	add    eax,0x413b3371
  40ba6f:	jecxz  0x40baee
  40ba71:	push   ds
  40ba72:	jno    0x40baa9
  40ba74:	test   al,0xaa
  40ba76:	mov    ecx,0xd3f55c72
  40ba7b:	xor    BYTE PTR [edx+0x11],bl
  40ba7e:	or     eax,0x8a610135
  40ba83:	imul   ebx,DWORD PTR [esi],0x6556483f
  40ba89:	std    
  40ba8a:	aam    0xd4
  40ba8c:	das    
  40ba8d:	or     BYTE PTR [esi-0x38],0x27
  40ba91:	mov    edx,DWORD PTR [ebx-0x7abd80b1]
  40ba97:	mov    dl,0x79
  40ba99:	add    DWORD PTR [edx+eiz*2],esp
  40ba9c:	test   DWORD PTR ds:0x2a142627,esp
  40baa2:	(bad)  
  40baa3:	in     al,0xf2
  40baa5:	cli    
  40baa6:	mov    cl,BYTE PTR [eax]
  40baa8:	scas   al,BYTE PTR es:[edi]
  40baa9:	cmp    cl,dl
  40baab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baac:	pushf  
  40baad:	mov    al,ds:0xb83bd371
  40bab2:	cmp    DWORD PTR [edx],0x1aa76c2d
  40bab8:	push   0x9e8f0bcd
  40babd:	leave  
  40babe:	retf   
  40babf:	mov    ecx,0xedb54087
  40bac4:	out    0xdc,al
  40bac6:	imul   eax,ecx,0xffffff92
  40bac9:	into   
  40baca:	fs pop esp
  40bacc:	scas   eax,DWORD PTR es:[edi]
  40bacd:	cwde   
  40bace:	pop    es
  40bacf:	jbe    0x40ba64
  40bad1:	retf   
  40bad2:	shr    DWORD PTR ss:[ebp+0x1908e343],cl
  40bad9:	das    
  40bada:	out    0xd9,eax
  40badc:	das    
  40badd:	out    0xa6,al
  40badf:	inc    ebp
  40bae0:	iret   
  40bae1:	pop    ds
  40bae2:	pushf  
  40bae3:	in     eax,dx
  40bae4:	jle    0x40bb03
  40bae6:	(bad)  
  40bae7:	lods   eax,DWORD PTR ds:[esi]
  40bae8:	mov    edi,0xd58eb59a
  40baed:	cs (bad) 
  40baef:	(bad)  
  40baf0:	out    dx,al
  40baf1:	mov    edi,0xa5ff791c
  40baf6:	dec    esp
  40baf7:	and    edi,DWORD PTR [eax+ebx*1+0x18]
  40bafb:	mov    dl,0x76
  40bafd:	mov    ch,0x9d
  40baff:	rol    DWORD PTR [esi+ebx*1-0x1a],1
  40bb03:	dec    edx
  40bb04:	xor    BYTE PTR [eax],ch
  40bb06:	push   ds
  40bb07:	mov    bh,0xda
  40bb09:	push   ebx
  40bb0a:	cmp    BYTE PTR ds:0xdf3eb8fc,bl
  40bb10:	sbb    eax,0xf331d428
  40bb15:	bnd ret 0x558f
  40bb19:	scas   al,BYTE PTR es:[edi]
  40bb1a:	rcr    BYTE PTR [edi+0x59fb644c],1
  40bb20:	pushf  
  40bb21:	and    esp,ebp
  40bb23:	popa   
  40bb24:	daa    
  40bb25:	inc    edi
  40bb26:	mov    BYTE PTR [esi-0x2e],ch
  40bb29:	jmp    0x7c34:0x82c5403b
  40bb30:	jnp    0x40bab4
  40bb32:	(bad)  
  40bb33:	and    ebp,esp
  40bb35:	xor    al,0x2b
  40bb37:	jb     0x40bac8
  40bb39:	das    
  40bb3a:	(bad)  
  40bb3b:	cwde   
  40bb3c:	neg    BYTE PTR [ebx-0x30c468d1]
  40bb42:	add    dh,BYTE PTR [edx-0x53]
  40bb45:	adc    ecx,DWORD PTR [ecx-0x6b]
  40bb48:	nop
  40bb49:	jp     0x40bbb6
  40bb4b:	pop    edx
  40bb4c:	pop    ebx
  40bb4d:	jb     0x40bb87
  40bb4f:	xchg   ebp,eax
  40bb50:	mov    bl,0x30
  40bb52:	fdiv   st,st(5)
  40bb54:	in     eax,0xad
  40bb56:	push   edx
  40bb57:	mov    eax,ds:0x6c350dc5
  40bb5c:	mov    ds:0x957abad6,eax
  40bb61:	pushf  
  40bb62:	cmp    eax,0x6fa3c2c9
  40bb67:	ss (bad) 
  40bb69:	inc    edx
  40bb6a:	push   edi
  40bb6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb6c:	dec    ecx
  40bb6d:	call   0xf70b:0x82944a1c
  40bb74:	test   eax,0x42a20536
  40bb79:	cli    
  40bb7a:	pop    esi
  40bb7b:	fmul   DWORD PTR ds:0x732023a8
  40bb81:	scas   al,BYTE PTR es:[edi]
  40bb82:	bound  edi,QWORD PTR ds:[edi-0x5af731cb]
  40bb89:	popf   
  40bb8a:	pop    esi
  40bb8b:	out    0x80,al
  40bb8d:	cmp    esp,DWORD PTR [edx]
  40bb8f:	cmp    esp,DWORD PTR [edx]
  40bb91:	dec    eax
  40bb92:	loope  0x40bb29
  40bb94:	(bad)  
  40bb95:	sub    ebx,DWORD PTR fs:[edx+0x5f906062]
  40bb9c:	push   ebp
  40bb9d:	mov    ch,0x2e
  40bb9f:	sub    BYTE PTR [edx+0x18cd0f18],bl
  40bba5:	cli    
  40bba6:	outs   dx,DWORD PTR ds:[esi]
  40bba7:	ja     0x40bb68
  40bba9:	js     0x40bba2
  40bbab:	jae    0x40bc17
  40bbad:	dec    eax
  40bbae:	xor    cl,BYTE PTR [esi]
  40bbb0:	imul   ebx,DWORD PTR [eax*1+0x38790979],0x78
  40bbb8:	out    0x8a,eax
  40bbba:	test   al,0xf9
  40bbbc:	call   0x141d:0x198cb04c
  40bbc3:	sar    ebp,cl
  40bbc5:	inc    ebp
  40bbc6:	imul   edx,DWORD PTR ds:0x40ae4894,0x71
  40bbcd:	push   ds
  40bbce:	cli    
  40bbcf:	fbld   TBYTE PTR [edi]
  40bbd1:	mov    bl,0xb1
  40bbd3:	lods   al,BYTE PTR ds:[esi]
  40bbd4:	sbb    bh,bh
  40bbd6:	addr16 call 0x6311:0x8078adbc
  40bbde:	shl    BYTE PTR [esi],cl
  40bbe0:	mov    eax,ds:0x325574c3
  40bbe5:	xor    eax,0xe08790c9
  40bbea:	xor    eax,0x77659215
  40bbef:	popa   
  40bbf0:	mov    cl,0xe8
  40bbf2:	(bad)  
  40bbf3:	fwait
  40bbf4:	rcr    DWORD PTR [esi-0x7e961074],1
  40bbfa:	mov    BYTE PTR [edi-0x7cc52e5a],bh
  40bc00:	clc    
  40bc01:	push   ds
  40bc02:	shr    BYTE PTR [ecx+0x238e06b7],1
  40bc08:	loope  0x40bbb5
  40bc0a:	inc    ebp
  40bc0b:	repz or ah,BYTE PTR [eax+0x5]
  40bc0f:	test   BYTE PTR [ecx],cl
  40bc11:	retf   0xc0ee
  40bc14:	imul   ebx,esp,0xcdb8d173
  40bc1a:	sub    bl,cl
  40bc1c:	jo     0x40bc31
  40bc1e:	sub    DWORD PTR ds:0x3e0537dd,ecx
  40bc24:	pop    ss
  40bc25:	jp     0x40bc92
  40bc27:	push   ebx
  40bc28:	pop    ds
  40bc29:	and    eax,0xd66f2e63
  40bc2e:	add    eax,0xc66e646
  40bc33:	js     0x40bc32
  40bc35:	adc    eax,DWORD PTR [ecx+0x1afdaa86]
  40bc3b:	cli    
  40bc3c:	push   ds
  40bc3d:	fld    TBYTE PTR ds:[ecx]
  40bc40:	arpl   WORD PTR [esi],bp
  40bc42:	shr    DWORD PTR ds:0x535a536,0x1d
  40bc49:	fs inc esi
  40bc4b:	dec    edi
  40bc4c:	setne  BYTE PTR [edx+0x23]
  40bc50:	and    eax,0xe67d0894
  40bc55:	icebp  
  40bc56:	and    cl,cl
  40bc58:	jmp    0xb6a7ef51
  40bc5d:	xchg   BYTE PTR [edx+edx*2],dh
  40bc60:	mov    edi,0x7a3217e4
  40bc65:	shl    DWORD PTR [edx+edx*8+0x46b74dcd],cl
  40bc6c:	jnp    0x40bc11
  40bc6e:	enter  0x74db,0xf1
  40bc72:	xor    al,0xc9
  40bc74:	dec    edi
  40bc75:	retf   
  40bc76:	and    BYTE PTR [edx+0x6fb42f44],ah
  40bc7c:	or     bh,BYTE PTR [esi+0x652278e0]
  40bc82:	xor    BYTE PTR [esp+eax*8-0x54],bl
  40bc86:	cdq    
  40bc87:	adc    edx,DWORD PTR [ebp-0x64127800]
  40bc8d:	sub    edx,DWORD PTR [ecx]
  40bc8f:	sti    
  40bc90:	xchg   edx,eax
  40bc91:	aas    
  40bc92:	ror    BYTE PTR [edx+0x6ce9cf03],cl
  40bc98:	inc    ebp
  40bc99:	mov    ah,0x1e
  40bc9b:	or     ebx,ebp
  40bc9d:	ins    BYTE PTR es:[edi],dx
  40bc9e:	loopne 0x40bc6d
  40bca0:	pop    ds
  40bca1:	sub    bl,ah
  40bca3:	mov    bl,0x3d
  40bca5:	mov    dh,cl
  40bca7:	(bad)  
  40bca9:	or     al,BYTE PTR [edi+eax*8-0x181722b0]
  40bcb0:	retf   0xcd22
  40bcb3:	das    
  40bcb4:	mov    eax,DWORD PTR [ebp+0x352a5957]
  40bcba:	or     BYTE PTR [ecx+0x43],bh
  40bcbd:	int    0xeb
  40bcbf:	xor    DWORD PTR [edi-0x54],eax
  40bcc2:	mov    ch,0x56
  40bcc4:	fld    QWORD PTR [ebx-0x66]
  40bcc7:	retf   
  40bcc8:	inc    edx
  40bcc9:	mov    bh,0xb2
  40bccb:	mov    ds:0x93d04099,al
  40bcd0:	cdq    
  40bcd1:	xor    al,0x77
  40bcd3:	dec    DWORD PTR [ebp+0x115012df]
  40bcd9:	aam    0xdd
  40bcdb:	scas   al,BYTE PTR es:[edi]
  40bcdc:	aas    
  40bcdd:	jmp    0x2399486d
  40bce2:	fdiv   QWORD PTR ds:0x9e29b4e4
  40bce8:	push   0xb49ce5c7
  40bced:	fs (bad) 
  40bcef:	cmp    eax,0x33b59d64
  40bcf4:	enter  0x2be8,0xc0
  40bcf8:	sbb    dh,BYTE PTR [ebp-0x2a]
  40bcfb:	pusha  
  40bcfc:	or     al,0xa
  40bcfe:	jecxz  0x40bd63
  40bd00:	pop    es
  40bd01:	inc    edi
  40bd02:	or     BYTE PTR [edi],bh
  40bd04:	imul   eax,DWORD PTR [esi],0xfffffff0
  40bd07:	inc    edi
  40bd08:	dec    edx
  40bd09:	sub    ebp,DWORD PTR [ebp-0x7f2b505d]
  40bd0f:	push   cs
  40bd10:	iret   
  40bd11:	outs   dx,BYTE PTR ds:[esi]
  40bd12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd13:	lods   al,BYTE PTR ds:[esi]
  40bd14:	cwde   
  40bd15:	mov    bl,BYTE PTR [ebx-0x4d29fa21]
  40bd1b:	aas    
  40bd1c:	inc    eax
  40bd1d:	jbe    0x40bd7b
  40bd1f:	mov    al,ds:0xecd6a700
  40bd24:	call   0x1ef6:0xe1d63879
  40bd2b:	xchg   BYTE PTR [eax+0x1c],al
  40bd2e:	dec    edx
  40bd2f:	xchg   edx,eax
  40bd30:	pop    ecx
  40bd31:	hlt    
  40bd32:	xchg   ch,ah
  40bd34:	sbb    al,0xec
  40bd36:	fsubr  st,st(6)
  40bd38:	dec    edx
  40bd39:	jae    0x40bda8
  40bd3b:	ins    BYTE PTR es:[edi],dx
  40bd3c:	leave  
  40bd3d:	mov    bh,BYTE PTR [edx]
  40bd3f:	pushf  
  40bd40:	neg    DWORD PTR [edx-0x2ed65d4f]
  40bd46:	and    ah,BYTE PTR [ebx]
  40bd48:	add    ebp,DWORD PTR [eax+0x5e198a41]
  40bd4e:	das    
  40bd4f:	or     DWORD PTR [edx-0x29],eax
  40bd52:	dec    edi
  40bd53:	bound  edx,QWORD PTR [esi]
  40bd55:	pusha  
  40bd56:	push   0xd29e5c55
  40bd5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd5c:	(bad)  
  40bd5d:	in     al,0xa5
  40bd5f:	enter  0xe3a2,0xbf
  40bd63:	out    0xd9,eax
  40bd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd66:	cmp    eax,DWORD PTR [edx+0x79d02a1c]
  40bd6c:	enter  0xdccb,0x7a
  40bd70:	pop    edi
  40bd71:	es jl  0x40bdb3
  40bd74:	mov    ds:0x5567b50c,al
  40bd79:	mov    ebx,0x7afb0192
  40bd7e:	jp     0x40bda5
  40bd80:	pushf  
  40bd81:	enter  0x4bff,0x76
  40bd85:	icebp  
  40bd86:	out    0xcf,al
  40bd88:	or     eax,0xea507afd
  40bd8d:	cld    
  40bd8e:	xor    DWORD PTR [ecx-0x1e9fa90d],edx
  40bd94:	aad    0x58
  40bd96:	pop    edx
  40bd97:	ret    0xe67a
  40bd9a:	std    
  40bd9b:	sbb    edx,DWORD PTR [ebp+0x7a211066]
  40bda1:	js     0x40bd6f
  40bda3:	push   ebx
  40bda4:	data16 jle 0x40bdbd
  40bda7:	lock nop
  40bda9:	lea    edi,[ebp-0x41]
  40bdac:	jle    0x40bd8c
  40bdae:	popa   
  40bdaf:	mov    ds:0x27127cf8,al
  40bdb4:	les    ebp,FWORD PTR [ecx]
  40bdb6:	mov    dl,cl
  40bdb8:	mov    bh,0xa4
  40bdba:	mov    ebx,0xf144bf76
  40bdbf:	jecxz  0x40bdc7
  40bdc1:	push   ss
  40bdc2:	dec    esp
  40bdc3:	test   DWORD PTR [ecx+0x52406c0],edi
  40bdc9:	aaa    
  40bdca:	jecxz  0x40bd85
  40bdcc:	call   DWORD PTR [esi-0x5499857e]
  40bdd2:	lds    edi,FWORD PTR [ebp+0x2661aeff]
  40bdd8:	cwde   
  40bdd9:	int    0xa7
  40bddb:	mov    ds,WORD PTR [ebp+0x17]
  40bdde:	pmullw mm5,QWORD PTR [ebp+0x1b1a548d]
  40bde5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde7:	or     eax,0xaf2038c5
  40bdec:	cmp    al,0xbd
  40bdee:	call   0x5123f200
  40bdf3:	je     0x40bdbe
  40bdf5:	inc    esi
  40bdf6:	sub    ebx,DWORD PTR [eax-0x3e5506c4]
  40bdfc:	mov    ch,0x84
  40bdfe:	mov    ebx,0x6ab32798
  40be03:	sub    ecx,DWORD PTR [edi+0x1f6c19b3]
  40be09:	cmp    eax,0x1895deb9
  40be0e:	mov    esi,0xe7ef2b2a
  40be13:	mov    ch,al
  40be15:	rol    DWORD PTR ds:0x6a049033,cl
  40be1b:	ret    0x918e
  40be1e:	adc    al,0x5d
  40be20:	test   al,0x89
  40be22:	pop    edi
  40be23:	dec    esi
  40be24:	inc    ecx
  40be25:	popf   
  40be26:	ins    DWORD PTR es:[edi],dx
  40be27:	pop    ecx
  40be28:	sub    eax,0xc00da2b5
  40be2d:	arpl   WORD PTR [ebx+0x74c07b1d],bp
  40be33:	mov    ecx,DWORD PTR [ebp+edi*1+0x3f16eff]
  40be3a:	(bad)  
  40be3b:	ror    cl,1
  40be3d:	lods   eax,DWORD PTR ds:[esi]
  40be3e:	cli    
  40be3f:	test   eax,0xcdd78ffa
  40be44:	pop    esi
  40be45:	cs inc edx
  40be47:	jae    0x40bdf4
  40be49:	inc    esp
  40be4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be4b:	xlat   BYTE PTR ds:[ebx]
  40be4c:	(bad)  
  40be4d:	push   edx
  40be4e:	scas   eax,DWORD PTR es:[edi]
  40be4f:	adc    al,0xc6
  40be51:	push   ss
  40be52:	call   0xde50:0x63aaf14e
  40be59:	mov    DWORD PTR [esi-0x7e53b2c0],ebp
  40be5f:	jle    0x40be1a
  40be61:	jge    0x40be07
  40be63:	aaa    
  40be64:	mov    edx,0x82ad760c
  40be69:	jbe    0x40be1f
  40be6b:	or     BYTE PTR ds:0x5d72047d,dl
  40be71:	pop    edi
  40be72:	add    eax,0x9900e53a
  40be77:	not    BYTE PTR [ecx-0x22914df6]
  40be7d:	sub    esp,esp
  40be7f:	sti    
  40be80:	pop    ss
  40be81:	mov    esi,0xad5d0677
  40be86:	push   ecx
  40be87:	mov    bh,BYTE PTR [ecx+0x52]
  40be8a:	pushf  
  40be8b:	sbb    eax,0xccdc2630
  40be90:	mov    ebp,0xe8ba702d
  40be95:	mov    ds:0xd4881bb6,al
  40be9a:	fimul  WORD PTR [ebp-0x69030cba]
  40bea0:	mov    WORD PTR [eax+0x45df6ea8],?
  40bea6:	shl    BYTE PTR [esi-0x64203d35],0x89
  40bead:	adc    ebp,DWORD PTR [edx-0x45]
  40beb0:	mov    bh,BYTE PTR [eax+0x7a291fcd]
  40beb6:	dec    ebx
  40beb7:	pusha  
  40beb8:	mov    ah,0x63
  40beba:	mov    ebp,0x5f06f6af
  40bebf:	mov    dl,0x8b
  40bec1:	dec    eax
  40bec2:	jnp    0x40bf0b
  40bec4:	loopne 0x40bf14
  40bec6:	icebp  
  40bec7:	pop    ds
  40bec8:	in     al,0xec
  40beca:	sub    esi,DWORD PTR [ebx+0x6ee68189]
  40bed0:	lods   al,BYTE PTR ds:[esi]
  40bed1:	lock adc BYTE PTR [ecx+ebp*4+0x36576b9c],ah
  40bed9:	stos   BYTE PTR es:[edi],al
  40beda:	mov    bl,0x1a
  40bedc:	sub    ecx,DWORD PTR [edx+0x55]
  40bedf:	fs test eax,0x6fe77d9
  40bee5:	rol    bh,1
  40bee7:	xlat   BYTE PTR ds:[ebx]
  40bee8:	add    eax,0xc00d7414
  40beed:	aas    
  40beee:	into   
  40beef:	xor    ch,BYTE PTR [ebp-0x5]
  40bef2:	mov    dh,0x67
  40bef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef5:	dec    esp
  40bef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef7:	mov    bl,0x81
  40bef9:	push   ss
  40befa:	(bad)  [edi-0x11]
  40befd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40befe:	lock inc ecx
  40bf00:	(bad)  
  40bf01:	fcomi  st,st(2)
  40bf03:	jns    0x40bf42
  40bf05:	imul   esp,DWORD PTR [esp+edi*4+0x7e19e68a],0xffffffca
  40bf0d:	xor    BYTE PTR [esi-0x6],cl
  40bf10:	mov    cl,0xd8
  40bf12:	mov    al,ds:0x4f1dea0
  40bf17:	(bad)  
  40bf18:	or     cl,dh
  40bf1a:	pop    eax
  40bf1b:	fsub   st(6),st
  40bf1d:	jle    0x40bf7f
  40bf1f:	ins    BYTE PTR es:[edi],dx
  40bf20:	jge    0x40bf62
  40bf22:	and    edi,DWORD PTR [eax]
  40bf24:	retf   
  40bf25:	push   edi
  40bf26:	jp     0x40bf55
  40bf28:	or     eax,0xbbb77fa0
  40bf2d:	mov    eax,ds:0x3bb535e9
  40bf32:	and    BYTE PTR [edx-0xe110ba7],ah
  40bf38:	retf   0x329
  40bf3b:	je     0x40bf4f
  40bf3d:	imul   esp,DWORD PTR [ecx-0x1a],0xea54c977
  40bf44:	je     0x40bf8e
  40bf46:	popa   
  40bf47:	jge    0x40befd
  40bf49:	sub    eax,0xfc57f08b
  40bf4e:	hlt    
  40bf4f:	jns    0x40bf56
  40bf51:	ret    0xb23
  40bf54:	shr    BYTE PTR [edi-0x4e9adfb2],0xa5
  40bf5b:	inc    ecx
  40bf5c:	rcr    ebp,cl
  40bf5e:	imul   ebx,DWORD PTR [eax],0x6b0953b1
  40bf64:	pop    edi
  40bf65:	mov    ds:0x4988137b,al
  40bf6a:	sub    DWORD PTR [eax+0x3e],0xffffff85
  40bf6e:	dec    esp
  40bf6f:	cwde   
  40bf70:	in     al,0x37
  40bf72:	and    esp,DWORD PTR [ecx]
  40bf74:	sub    al,0x7
  40bf76:	sbb    esp,ebx
  40bf78:	cmp    al,BYTE PTR [eax+0x22]
  40bf7b:	mov    ebx,0x41234121
  40bf80:	enter  0x5a0b,0x13
  40bf84:	xor    eax,0x9c158b18
  40bf89:	scas   al,BYTE PTR es:[edi]
  40bf8a:	setne  BYTE PTR [esi-0x5f]
  40bf8e:	xor    ch,BYTE PTR [edi+0x34]
  40bf91:	enter  0xc463,0xcf
  40bf95:	(bad)  
  40bf97:	xchg   edi,eax
  40bf98:	hlt    
  40bf99:	xor    edi,DWORD PTR [ecx-0x185a83f2]
  40bf9f:	stos   DWORD PTR es:[edi],eax
  40bfa0:	add    BYTE PTR [ebx-0x70d9a972],cl
  40bfa6:	js     0x40bfcd
  40bfa8:	jmp    0x73129dc9
  40bfad:	xor    al,0x8e
  40bfaf:	inc    ebp
  40bfb0:	ja     0x40bf7c
  40bfb2:	sub    BYTE PTR [ebp+eiz*2+0x78],0x30
  40bfb7:	pop    eax
  40bfb8:	and    bh,bl
  40bfba:	sbb    eax,0x8d2f2f73
  40bfbf:	add    DWORD PTR [edi-0x69],0xffffff8a
  40bfc3:	and    al,0x6b
  40bfc5:	in     eax,dx
  40bfc6:	sub    al,0x3f
  40bfc8:	sbb    dh,BYTE PTR [ecx]
  40bfca:	push   ecx
  40bfcb:	push   esi
  40bfcc:	outs   dx,BYTE PTR ds:[esi]
  40bfcd:	aad    0xd6
  40bfcf:	dec    ebx
  40bfd0:	loopne 0x40bff3
  40bfd2:	and    BYTE PTR [esp+ebx*2],dh
  40bfd5:	adc    cl,ah
  40bfd7:	int3   
  40bfd8:	or     al,0xc5
  40bfda:	cmc    
  40bfdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfdc:	pusha  
  40bfdd:	mov    al,ds:0x6775ca8e
  40bfe2:	push   ss
  40bfe3:	push   cs
  40bfe4:	lds    esp,FWORD PTR [edi+eax*2]
  40bfe7:	fwait
  40bfe8:	outs   dx,DWORD PTR ds:[esi]
  40bfe9:	dec    ecx
  40bfea:	ds imul edi,eax,0x35
  40bfee:	push   ebx
  40bfef:	mov    al,ds:0x68cbeef
  40bff4:	push   cs
  40bff5:	jmp    0x1f3b:0xb5e25eb6
  40bffc:	dec    eax
  40bffd:	add    esp,DWORD PTR [eax+ebx*1]
  40c000:	imul   esp,DWORD PTR [eax-0x2a8cf2c7],0xe97cdb41
  40c00a:	push   ecx
  40c00b:	imul   ecx,DWORD PTR [eax],0xffffff9b
  40c00e:	xor    al,0x2b
  40c010:	icebp  
  40c011:	outs   dx,BYTE PTR ds:[esi]
  40c012:	lds    ebx,FWORD PTR [edx+0x1f454d24]
  40c018:	(bad)  
  40c019:	pusha  
  40c01a:	and    al,0x29
  40c01c:	xchg   edi,eax
  40c01d:	mov    bl,0x86
  40c01f:	sub    eax,0x5e321c7c
  40c024:	or     DWORD PTR [ecx],ebx
  40c026:	xor    BYTE PTR [ebx-0x3379b02d],dh
  40c02c:	sbb    BYTE PTR [eax],0x37
  40c02f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c030:	popa   
  40c031:	mov    esp,0x3f6e2379
  40c036:	aam    0xa9
  40c038:	out    dx,al
  40c039:	mov    bh,0xeb
  40c03b:	add    ch,bh
  40c03d:	sbb    al,0x11
  40c03f:	mov    cl,0x50
  40c041:	sbb    bl,BYTE PTR [bp+di-0x80]
  40c045:	mov    ecx,DWORD PTR [edx+0x6]
  40c048:	and    al,0xd6
  40c04a:	ret    0xb802
  40c04d:	cmp    bl,bl
  40c04f:	sub    al,0x74
  40c051:	les    ecx,FWORD PTR [eax+0x32a90b7]
  40c057:	jp     0x40c09f
  40c059:	dec    ebx
  40c05a:	outs   dx,BYTE PTR ds:[esi]
  40c05b:	sub    eax,0xf98fdbff
  40c061:	cmc    
  40c062:	xor    ebx,esi
  40c064:	and    DWORD PTR [ecx+0x13],esp
  40c067:	xchg   esp,eax
  40c068:	fst    DWORD PTR [esi]
  40c06b:	adc    BYTE PTR [ebp-0x49c9d94c],cl
  40c071:	arpl   WORD PTR [edx+0x3f595a8a],bp
  40c077:	dec    edi
  40c078:	inc    ecx
  40c079:	dec    ebp
  40c07a:	and    ecx,edi
  40c07c:	lods   al,BYTE PTR ds:[esi]
  40c07d:	and    ch,BYTE PTR [ecx+0x5c0ae4f8]
  40c083:	jae    0x40c06e
  40c085:	cmp    eax,0x78ae222
  40c08a:	and    al,0x34
  40c08c:	iret   
  40c08d:	pmulhw mm7,QWORD PTR [edx+ecx*2+0x5bd3f1eb]
  40c095:	cmp    ebx,DWORD PTR [ecx-0xbea682d]
  40c09b:	sub    BYTE PTR [edi+0x7f253c3c],dl
  40c0a1:	popf   
  40c0a2:	push   ecx
  40c0a3:	cmc    
  40c0a4:	cmp    ebx,DWORD PTR [edi]
  40c0a6:	pop    ebx
  40c0a7:	cwde   
  40c0a8:	jecxz  0x40c090
  40c0aa:	popa   
  40c0ab:	mov    al,0x19
  40c0ad:	call   0x252fc2b1
  40c0b2:	hlt    
  40c0b3:	xor    esp,DWORD PTR [esi+0x1e]
  40c0b6:	jge    0x40c09e
  40c0b8:	dec    ebx
  40c0b9:	popf   
  40c0ba:	mov    edi,0x4367b3
  40c0bf:	mov    ds,WORD PTR [edi+0x7d9dc89]
  40c0c5:	arpl   ax,si
  40c0c7:	ror    DWORD PTR [ebp+0x77],0x4d
  40c0cb:	mov    dh,0xe0
  40c0cd:	aas    
  40c0ce:	sub    eax,0x12273ede
  40c0d3:	lea    esp,[ebx+0x63]
  40c0d6:	adc    BYTE PTR [ecx-0xb],dl
  40c0d9:	mov    WORD PTR [ecx-0x40],ss
  40c0dc:	mov    esp,0x56b04e76
  40c0e1:	leave  
  40c0e2:	push   ebp
  40c0e3:	add    eax,0xae8dd600
  40c0e8:	aaa    
  40c0e9:	jmp    0xb038:0x198ff7d7
  40c0f0:	mov    cl,0xea
  40c0f2:	mov    BYTE PTR [ebx],bl
  40c0f4:	inc    edi
  40c0f5:	xchg   ebx,eax
  40c0f6:	inc    edx
  40c0f7:	cld    
  40c0f8:	mov    dl,0x36
  40c0fa:	pusha  
  40c0fb:	or     DWORD PTR [edi+esi*4-0x13],esi
  40c0ff:	mov    ch,0xef
  40c101:	fmulp  st(2),st
  40c103:	repnz shl DWORD PTR ds:[esi],cl
  40c107:	int3   
  40c108:	push   ecx
  40c109:	jp     0x40c15e
  40c10b:	mov    ebp,0xeb1fe391
  40c110:	loop   0x40c0fb
  40c112:	adc    eax,0xc7d1804f
  40c117:	inc    eax
  40c118:	(bad)  
  40c119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c11a:	sbb    BYTE PTR [bp+di+0x1c4c],0x24
  40c120:	jmpw   0x4111
  40c124:	push   0xa8272557
  40c129:	pop    esp
  40c12a:	mov    edi,0xf98db4a7
  40c12f:	jg     0x40c14d
  40c131:	push   0xb173be59
  40c136:	ret    0xce09
  40c139:	xchg   cx,ax
  40c13b:	dec    eax
  40c13c:	mov    ecx,0x6aedc662
  40c141:	mov    esp,0x39ab429e
  40c146:	test   al,0x87
  40c148:	jbe    0x40c13a
  40c14a:	test   BYTE PTR [ebp+0x4d],dl
  40c14d:	ss jbe 0x40c0de
  40c150:	leave  
  40c151:	aas    
  40c152:	test   ax,0xcdd1
  40c156:	pop    esi
  40c157:	sbb    DWORD PTR [ecx-0x3c],eax
  40c15a:	addr16 push edi
  40c15c:	out    0x18,al
  40c15e:	stos   BYTE PTR es:[edi],al
  40c15f:	lds    edx,FWORD PTR [edi+0x79]
  40c162:	mov    dh,BYTE PTR [esi+edi*1-0x55]
  40c166:	mov    eax,ds:0xdaf62738
  40c16b:	enter  0xc742,0xf
  40c16f:	into   
  40c170:	push   0xffffffe9
  40c172:	dec    edi
  40c173:	in     eax,0x48
  40c175:	xchg   ebp,eax
  40c176:	repz pop edi
  40c178:	or     BYTE PTR [eax+0x106a90b],bl
  40c17e:	mov    ah,0x23
  40c180:	cmp    BYTE PTR [edi],al
  40c182:	pop    edx
  40c183:	pop    ss
  40c184:	out    0x9d,al
  40c186:	push   eax
  40c187:	rcr    DWORD PTR ss:[esp+edx*8],cl
  40c18b:	out    0xee,al
  40c18d:	fwait
  40c18e:	stos   BYTE PTR es:[edi],al
  40c18f:	stos   DWORD PTR es:[edi],eax
  40c190:	int    0xd5
  40c192:	(bad)  
  40c193:	xor    eax,0x802a8df7
  40c198:	push   esp
  40c199:	mov    BYTE PTR ds:0x6f7e8ccf,0x79
  40c1a0:	sub    DWORD PTR [edi],ebx
  40c1a2:	push   ecx
  40c1a3:	jmp    0xe77f79b7
  40c1a8:	shr    DWORD PTR [edx],1
  40c1aa:	pop    es
  40c1ab:	data16 mov bh,BYTE PTR [edi+eax*4-0x35]
  40c1b0:	addr16 cdq 
  40c1b2:	jne    0x40c211
  40c1b4:	int    0xe8
  40c1b6:	mov    al,0x48
  40c1b8:	xchg   DWORD PTR [edx+0x2449b8da],edx
  40c1be:	mov    ds:0x46727ade,eax
  40c1c3:	ret    0x7d0
  40c1c6:	jmp    0x40c200
  40c1c8:	or     al,0xda
  40c1ca:	aam    0x49
  40c1cc:	mov    ecx,DWORD PTR [edx-0x1d]
  40c1cf:	xor    al,0x6b
  40c1d1:	mov    dh,0x5b
  40c1d3:	test   bl,dl
  40c1d5:	stc    
  40c1d6:	push   ds
  40c1d7:	inc    esi
  40c1d8:	call   0xd7d0e1e8
  40c1dd:	repnz retf 
  40c1df:	or     al,0xa2
  40c1e1:	dec    eax
  40c1e2:	add    al,0x6f
  40c1e4:	pop    edi
  40c1e5:	pop    es
  40c1e6:	arpl   WORD PTR [ebx+0x28],sp
  40c1e9:	dec    esi
  40c1ea:	scas   eax,DWORD PTR es:[edi]
  40c1eb:	or     edx,DWORD PTR [ebx-0x27]
  40c1ee:	lock add bl,al
  40c1f1:	or     eax,0x99700dc7
  40c1f6:	imul   edx,edx,0xffffffe4
  40c1f9:	jecxz  0x40c22b
  40c1fb:	arpl   dx,bx
  40c1fd:	loope  0x40c27b
  40c1ff:	js     0x40c25c
  40c201:	inc    eax
  40c202:	mul    DWORD PTR [esi]
  40c204:	sbb    eax,0xda2a2f1d
  40c209:	daa    
  40c20a:	mov    DWORD PTR [edi],esi
  40c20c:	mov    ah,0x98
  40c20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c20f:	popa   
  40c210:	ror    DWORD PTR [esi+0x31e77a54],cl
  40c216:	sahf   
  40c217:	mov    al,ds:0x1e8da04b
  40c21c:	dec    ebp
  40c21d:	(bad)  
  40c21e:	mov    ecx,0x2898d9db
  40c223:	fstp   QWORD PTR [edi]
  40c225:	popa   
  40c226:	xor    edx,DWORD PTR [edi]
  40c228:	not    ah
  40c22a:	add    BYTE PTR [ebp+0x27306147],bl
  40c230:	jae    0x40c255
  40c232:	mov    esp,0xe9d9a345
  40c237:	or     edx,DWORD PTR [ebx]
  40c239:	in     eax,0xd3
  40c23b:	mov    eax,ds:0xa4eb174b
  40c240:	addr16 call 0x14c0c6f5
  40c246:	mov    eax,0x79ad64f9
  40c24b:	jg     0x40c244
  40c24d:	mov    eax,ds:0xec316155
  40c252:	and    bl,BYTE PTR [edx+0x7]
  40c255:	outs   dx,DWORD PTR ds:[esi]
  40c256:	mov    edi,eax
  40c258:	sbb    DWORD PTR [esi-0x3c4f4678],ebp
  40c25e:	jb     0x40c22c
  40c260:	out    dx,eax
  40c261:	push   ebx
  40c262:	js     0x40c221
  40c264:	jne    0x40c257
  40c266:	pop    edx
  40c267:	pop    edi
  40c268:	xor    eax,0x9de5185a
  40c26d:	push   ebx
  40c26e:	xchg   ebx,eax
  40c26f:	xchg   BYTE PTR [ebp-0x31],ch
  40c272:	ins    DWORD PTR es:[edi],dx
  40c273:	(bad)  
  40c274:	rol    BYTE PTR [ebp-0x17],0xa9
  40c278:	mov    WORD PTR [eax],fs
  40c27a:	cli    
  40c27b:	sub    eax,0x3dc1d987
  40c280:	cmp    BYTE PTR [esi+0x6ad5873],0x62
  40c287:	fsub   QWORD PTR [ebx+0x15]
  40c28a:	mov    cl,0xc1
  40c28c:	ret    
  40c28d:	outs   dx,DWORD PTR ds:[esi]
  40c28e:	push   ds
  40c28f:	cld    
  40c290:	push   ebx
  40c291:	je     0x40c2c7
  40c293:	ror    DWORD PTR [edx-0x346b8ba0],0x23
  40c29a:	inc    ebp
  40c29b:	mov    dh,0x26
  40c29d:	out    0xce,al
  40c29f:	xchg   edx,eax
  40c2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2a1:	stos   DWORD PTR es:[edi],eax
  40c2a2:	test   eax,0x1242d45e
  40c2a7:	rcl    BYTE PTR [ebx+0x6c3d4a],1
  40c2ad:	(bad)  
  40c2ae:	lods   al,BYTE PTR ds:[esi]
  40c2af:	jmp    0x40c32f
  40c2b1:	mov    dl,0xd4
  40c2b3:	inc    eax
  40c2b4:	dec    esp
  40c2b5:	out    dx,al
  40c2b6:	inc    ebx
  40c2b7:	xchg   esi,eax
  40c2b8:	inc    esi
  40c2b9:	pop    ebx
  40c2ba:	xor    eax,0xf25deea3
  40c2bf:	outs   dx,DWORD PTR ds:[esi]
  40c2c0:	jne    0x40c261
  40c2c2:	or     al,0x78
  40c2c4:	mov    ecx,esp
  40c2c6:	dec    esp
  40c2c7:	jno    0x40c2a3
  40c2c9:	sbb    ebp,DWORD PTR [eax-0x78f93a4d]
  40c2cf:	ja     0x40c28e
  40c2d1:	jl     0x40c305
  40c2d3:	mov    bl,0x3d
  40c2d5:	and    ebp,eax
  40c2d7:	add    ah,BYTE PTR [ecx-0x456e88b5]
  40c2dd:	adc    esp,DWORD PTR [esi-0x2633c7f4]
  40c2e3:	outs   dx,DWORD PTR ds:[esi]
  40c2e4:	pop    edi
  40c2e5:	scas   al,BYTE PTR es:[edi]
  40c2e6:	add    BYTE PTR [edx+0x13227506],al
  40c2ec:	sub    al,0x14
  40c2ee:	and    al,0x52
  40c2f0:	ficomp WORD PTR [ecx+0x69b811d9]
  40c2f6:	mov    bl,0x4c
  40c2f8:	data16 (bad) 
  40c2fa:	arpl   WORD PTR [eax+0x4a3c1429],bp
  40c300:	jmp    0xa86e:0xce598594
  40c307:	sbb    eax,eax
  40c309:	add    DWORD PTR [edi+0x3f],eax
  40c30c:	jl     0x40c346
  40c30e:	daa    
  40c30f:	(bad)  
  40c310:	pusha  
  40c311:	fimul  DWORD PTR [ebx]
  40c313:	fs mov bx,0x66b1
  40c318:	imul   ebp,DWORD PTR [edx+0xe],0x78
  40c31c:	aas    
  40c31d:	sbb    eax,0xfeb45fb7
  40c322:	mov    edi,0xb35dd678
  40c327:	mov    ebx,0xd0e67ee9
  40c32c:	sub    ch,BYTE PTR fs:[edx]
  40c32f:	dec    eax
  40c330:	dec    ecx
  40c331:	sahf   
  40c332:	pop    ds
  40c333:	mov    bh,cl
  40c335:	fmul   QWORD PTR [ebp+0x6c41f2d1]
  40c33b:	dec    edx
  40c33c:	dec    ebx
  40c33d:	cmp    DWORD PTR [ecx],edx
  40c33f:	sub    eax,0x8726d12b
  40c344:	test   al,0xb1
  40c346:	(bad)  
  40c347:	iret   
  40c348:	sti    
  40c349:	xor    esp,esi
  40c34b:	cmp    BYTE PTR [edx+0x70],dl
  40c34e:	adc    edi,DWORD PTR [esi-0x73]
  40c351:	fcomp  QWORD PTR [ebx-0x63]
  40c354:	push   0x404bb755
  40c359:	fcom   DWORD PTR [esp+eiz*8+0x47]
  40c35d:	daa    
  40c35e:	iret   
  40c35f:	dec    esp
  40c360:	popa   
  40c361:	in     eax,dx
  40c362:	sub    BYTE PTR [edi],bl
  40c364:	test   BYTE PTR [ecx+0x69da837f],cl
  40c36a:	pop    ebx
  40c36b:	and    eax,0x39c6b8ec
  40c370:	pop    ebp
  40c371:	out    0x1c,al
  40c373:	pop    ebx
  40c374:	leave  
  40c375:	xchg   BYTE PTR [esi+ebp*8-0x4f],bh
  40c379:	aad    0xa2
  40c37b:	adc    al,BYTE PTR [ebx]
  40c37d:	sbb    ecx,ebx
  40c37f:	mov    ebp,0x34462579
  40c384:	mov    ebx,0x77dce97e
  40c389:	mov    esi,0xd96bd979
  40c38e:	xor    al,0xac
  40c390:	test   BYTE PTR [ebp+edi*8+0x16],0x78
  40c395:	cdq    
  40c396:	cli    
  40c397:	pushf  
  40c398:	loope  0x40c3ce
  40c39a:	lods   al,BYTE PTR es:[esi]
  40c39c:	adc    bh,0x9b
  40c39f:	out    dx,eax
  40c3a0:	call   0xc2593bb5
  40c3a5:	arpl   WORD PTR [ebx-0x14e249a5],si
  40c3ab:	sub    ch,BYTE PTR [edx]
  40c3ad:	addr16 int3 
  40c3af:	sbb    bh,ah
  40c3b1:	out    0xba,al
  40c3b3:	jmp    0x9aa390e3
  40c3b8:	in     al,0xd3
  40c3ba:	loope  0x40c344
  40c3bc:	fwait
  40c3bd:	cmp    DWORD PTR [ebx-0x4b],ecx
  40c3c0:	jo     0x40c409
  40c3c2:	xor    edx,DWORD PTR [edi-0x6c]
  40c3c5:	(bad)  
  40c3c7:	leave  
  40c3c8:	fdivr  DWORD PTR [edx+0x6092484a]
  40c3ce:	loop   0x40c3a3
  40c3d0:	add    edx,DWORD PTR [edi+esi*2-0xc]
  40c3d4:	es push ecx
  40c3d6:	or     ch,bl
  40c3d8:	fs add ebx,ebp
  40c3db:	adc    DWORD PTR [ebx+0x1bc9ead1],ecx
  40c3e1:	lods   eax,DWORD PTR ds:[esi]
  40c3e2:	rcr    edx,1
  40c3e4:	(bad)  
  40c3e5:	addr16 out 0xd0,al
  40c3e8:	pop    es
  40c3e9:	pop    esi
  40c3ea:	push   es
  40c3eb:	xchg   esi,eax
  40c3ec:	(bad)  
  40c3ee:	mov    edx,0xb6574dc
  40c3f3:	aaa    
  40c3f4:	inc    esp
  40c3f5:	outs   dx,DWORD PTR ds:[esi]
  40c3f6:	imul   ecx,esp,0x3ff30f6
  40c3fc:	mov    eax,ds:0xa326880c
  40c401:	sbb    edx,eax
  40c403:	inc    ebp
  40c404:	fdivr  QWORD PTR [ebx]
  40c406:	xor    dl,BYTE PTR [edx]
  40c408:	sbb    al,0xd9
  40c40a:	pusha  
  40c40b:	cs ds es std 
  40c40f:	push   ecx
  40c410:	inc    eax
  40c411:	pop    ss
  40c412:	xor    DWORD PTR [ecx+0x3660aee6],eax
  40c418:	jl     0x40c3fd
  40c41a:	add    dh,BYTE PTR [ecx]
  40c41c:	data16 (bad) 
  40c41e:	xchg   esp,eax
  40c41f:	out    dx,eax
  40c420:	fidivr DWORD PTR [eax]
  40c422:	push   ss
  40c423:	xor    ch,BYTE PTR [eax+0x44]
  40c426:	xchg   ecx,eax
  40c427:	and    al,0x1e
  40c429:	pop    ecx
  40c42a:	push   0xffffffeb
  40c42c:	cmc    
  40c42d:	mov    ebp,0x49d379d2
  40c432:	xchg   BYTE PTR [ebx+0x481e60a7],dh
  40c438:	jae    0x40c3ef
  40c43a:	push   eax
  40c43b:	adc    eax,0x7908c6a5
  40c440:	sbb    DWORD PTR [ebp-0x64],0x37
  40c444:	or     bl,ch
  40c446:	jl     0x40c3db
  40c448:	and    esi,0x1c39983d
  40c44e:	repnz ss dec edi
  40c451:	mov    bh,cl
  40c453:	call   0x9daf:0x49fdf35f
  40c45a:	hlt    
  40c45b:	sti    
  40c45c:	leave  
  40c45d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c45e:	aad    0xfe
  40c460:	nop
  40c461:	cld    
  40c462:	mov    edi,0xdcb78459
  40c467:	xor    al,0xd0
  40c469:	push   esp
  40c46a:	(bad)  
  40c46b:	jg     0x40c40a
  40c46d:	xchg   edx,eax
  40c46e:	cmp    esp,DWORD PTR [esp+ecx*8-0x6ffbc6c5]
  40c475:	and    BYTE PTR [ebp+0x3169c717],ch
  40c47b:	out    dx,al
  40c47c:	inc    esp
  40c47d:	inc    ebx
  40c47e:	add    DWORD PTR [ebp+edx*1+0x462f9484],edi
  40c485:	test   al,0xa7
  40c488:	outs   dx,BYTE PTR ds:[esi]
  40c489:	mov    ebp,0x3ce2ff01
  40c48e:	push   ebp
  40c48f:	jp     0x40c446
  40c491:	push   ds
  40c492:	sbb    BYTE PTR ds:0x7cc19b35,bl
  40c498:	sbb    eax,0xd37c8825
  40c49d:	mov    WORD PTR [ebp+0x2e836c05],cs
  40c4a3:	mov    DWORD PTR [ebx+0x2d259c5e],eax
  40c4a9:	jmp    0x40c50d
  40c4ab:	fs pop ds
  40c4ad:	and    eax,0x1cbc5b40
  40c4b2:	test   al,0xb7
  40c4b4:	xor    BYTE PTR gs:[edx+0x0],al
  40c4b8:	cmp    esp,esi
  40c4ba:	jge    0x40c459
  40c4bc:	ins    DWORD PTR es:[edi],dx
  40c4bd:	ins    DWORD PTR es:[edi],dx
  40c4be:	stos   DWORD PTR es:[edi],eax
  40c4bf:	push   esi
  40c4c0:	add    dh,ch
  40c4c2:	jmp    0x5c2f:0xdbd8fde8
  40c4c9:	xor    esp,DWORD PTR [esi]
  40c4cb:	jae    0x40c4cc
  40c4cd:	mul    DWORD PTR [eax+ebx*1-0x47]
  40c4d1:	mov    eax,ds:0x30904533
  40c4d6:	(bad)  
  40c4d7:	sbb    al,0x8f
  40c4d9:	test   BYTE PTR [ebp+0x6a],cl
  40c4dc:	jmp    0x8e41a671
  40c4e1:	jmp    0x45e6:0x3754fbea
  40c4e8:	out    0x15,al
  40c4ea:	out    0xfa,al
  40c4ec:	in     al,0x46
  40c4ee:	push   ebx
  40c4ef:	push   ebp
  40c4f0:	mov    dh,0x38
  40c4f2:	gs xchg ecx,eax
  40c4f4:	stos   BYTE PTR es:[edi],al
  40c4f5:	mov    esi,0xc7cadfe3
  40c4fa:	and    eax,0xea53f4c3
  40c4ff:	adc    al,0x45
  40c501:	call   0x2830:0x27db7c5e
  40c508:	sahf   
  40c509:	das    
  40c50a:	sbb    BYTE PTR [edx+0x5501eb30],bl
  40c510:	mov    al,0xec
  40c512:	dec    esi
  40c513:	inc    ebx
  40c514:	push   0xfffffffe
  40c516:	imul   DWORD PTR [eax-0x64]
  40c519:	mov    al,0xe9
  40c51b:	or     BYTE PTR [edx],ah
  40c51d:	adc    eax,0x4cb25de4
  40c522:	push   ecx
  40c523:	cmp    edx,esi
  40c525:	sti    
  40c526:	mov    edx,0x55d49726
  40c52b:	enter  0x7b40,0x2f
  40c52f:	enter  0x6638,0xce
  40c533:	cmp    dl,dh
  40c535:	mov    ecx,0x3749b033
  40c53a:	popf   
  40c53b:	aas    
  40c53c:	ins    BYTE PTR es:[edi],dx
  40c53d:	push   esp
  40c53e:	xchg   esi,eax
  40c53f:	xchg   DWORD PTR [esi-0x62],edi
  40c542:	sub    al,0x3d
  40c544:	inc    ecx
  40c545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c546:	stc    
  40c547:	out    0xf8,eax
  40c549:	xchg   edx,eax
  40c54a:	scas   al,BYTE PTR es:[edi]
  40c54b:	add    ebp,DWORD PTR [eax-0x78]
  40c54e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c54f:	arpl   ax,sp
  40c551:	sar    BYTE PTR [esi+0x4f],0x4e
  40c555:	dec    ebp
  40c556:	bound  ebx,QWORD PTR [edi-0x7e]
  40c559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c55a:	mov    es,WORD PTR [edi-0x1f]
  40c55d:	(bad)  
  40c55f:	rol    DWORD PTR [ebx+0x5],1
  40c562:	ds cmp eax,0x7720de1d
  40c568:	andps  xmm1,XMMWORD PTR [ecx+eiz*4]
  40c56c:	into   
  40c56d:	pop    ss
  40c56e:	(bad)  
  40c56f:	int3   
  40c570:	push   ecx
  40c571:	faddp  st(4),st
  40c573:	jb     0x40c52c
  40c575:	loopne 0x40c56b
  40c577:	sbb    DWORD PTR [edi+ebp*4+0x36],0xffffffdb
  40c57c:	in     eax,0x4a
  40c57e:	(bad)  
  40c57f:	(bad)  
  40c581:	sahf   
  40c582:	mov    bh,0x6
  40c584:	loop   0x40c547
  40c586:	ss jmp 0xd635f3e1
  40c58c:	jb     0x40c5d4
  40c58e:	ds stc 
  40c590:	or     DWORD PTR [eax],esp
  40c592:	ret    0x3116
  40c595:	loopne 0x40c603
  40c597:	arpl   cx,sp
  40c599:	mov    al,0xf5
  40c59b:	and    eax,0x51c9d64d
  40c5a0:	test   BYTE PTR [edi],bh
  40c5a2:	jns    0x40c5e6
  40c5a4:	and    DWORD PTR [eax-0x2c],ebp
  40c5a7:	je     0x40c613
  40c5a9:	cmp    al,0x8
  40c5ab:	nop/reserved BYTE PTR ds:[edx]
  40c5af:	mov    al,BYTE PTR ds:0x4665f18b
  40c5b5:	pop    ebp
  40c5b6:	sbb    esi,DWORD PTR [eax+0x3e]
  40c5b9:	popf   
  40c5ba:	popf   
  40c5bb:	mov    bh,0xe2
  40c5bd:	push   ecx
  40c5be:	(bad)  [esi]
  40c5c0:	gs popa 
  40c5c2:	sbb    eax,0x29254c45
  40c5c7:	jbe    0x40c605
  40c5c9:	je     0x40c5d9
  40c5cb:	cs push ecx
  40c5cd:	sbb    eax,0xd20e4ddd
  40c5d2:	dec    esi
  40c5d3:	fbld   TBYTE PTR [ebx+ebp*8+0x3b]
  40c5d7:	cdq    
  40c5d8:	icebp  
  40c5d9:	xchg   DWORD PTR [edx+esi*2+0x4f423128],ecx
  40c5e0:	ds mov esi,0x65080b59
  40c5e6:	jecxz  0x40c63b
  40c5e8:	(bad)  [edx-0x6ce53bd7]
  40c5ee:	aas    
  40c5ef:	push   esp
  40c5f0:	arpl   dx,sp
  40c5f2:	sti    
  40c5f3:	mov    ah,0xc
  40c5f6:	fcmovnbe st,st(4)
  40c5f8:	into   
  40c5f9:	sbb    eax,0x47492a62
  40c5fe:	mov    edi,0x2f3fbc5
  40c603:	mov    ah,0x14
  40c605:	fimul  WORD PTR [edi-0x3f]
  40c608:	push   ecx
  40c609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c60a:	outs   dx,DWORD PTR ds:[esi]
  40c60b:	in     eax,dx
  40c60c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60d:	nop
  40c60e:	hlt    
  40c60f:	iret   
  40c610:	xchg   edx,eax
  40c611:	push   cs
  40c612:	mov    eax,ds:0x3ea3e95c
  40c617:	rol    DWORD PTR [ebx+0x20],0xd1
  40c61b:	xchg   ebp,eax
  40c61c:	jl     0x40c67d
  40c61e:	pop    ss
  40c61f:	xlat   BYTE PTR ds:[ebx]
  40c620:	xor    al,0x57
  40c622:	cwde   
  40c623:	clc    
  40c624:	popf   
  40c625:	scas   al,BYTE PTR es:[edi]
  40c626:	mov    ds:0xef8206bb,al
  40c62b:	cli    
  40c62c:	adc    bl,BYTE PTR [edi]
  40c62e:	adc    bh,BYTE PTR [ecx-0x65f457e9]
  40c634:	call   DWORD PTR [eax]
  40c636:	pop    ds
  40c637:	jg     0x40c5e6
  40c639:	addr16 xor dh,al
  40c63c:	jb     0x40c651
  40c63e:	test   al,0x9c
  40c640:	xchg   esi,eax
  40c641:	add    bl,0xdd
  40c644:	leave  
  40c645:	sub    al,0x74
  40c647:	call   0x40d1637d
  40c64c:	dec    eax
  40c64d:	data16 stos BYTE PTR es:[edi],al
  40c64f:	aaa    
  40c650:	out    dx,al
  40c651:	rcr    DWORD PTR [ebx+0x2b],0x5
  40c655:	dec    esp
  40c656:	nop
  40c657:	jns    0x40c5ea
  40c659:	jno    0x40c6a3
  40c65b:	adc    BYTE PTR [ecx+0x4130c5ab],0xd3
  40c662:	retf   0x10a7
  40c665:	inc    eax
  40c666:	arpl   WORD PTR [ecx],dx
  40c668:	push   es
  40c669:	mov    edx,0x82b3401b
  40c66e:	sub    al,0x6f
  40c670:	xor    DWORD PTR [edx-0x73],esi
  40c673:	mov    cl,0xc0
  40c675:	push   0x76
  40c677:	es mov cl,0x96
  40c67a:	sbb    edx,DWORD PTR [ecx]
  40c67c:	in     eax,0x1
  40c67e:	mov    esp,0x32b767ca
  40c683:	sbb    esp,DWORD PTR [edx+0x2b]
  40c686:	(bad)  
  40c687:	push   edx
  40c688:	ins    BYTE PTR es:[edi],dx
  40c689:	and    ah,BYTE PTR ds:0x2e3a5748
  40c68f:	jnp    0x40c6a4
  40c691:	adc    cl,BYTE PTR [ebx+eiz*4]
  40c694:	in     al,0xf7
  40c696:	clc    
  40c697:	inc    DWORD PTR [ebx+ecx*2+0x41ffa23]
  40c69e:	ficom  DWORD PTR [edi+0x43daf1d7]
  40c6a4:	inc    esp
  40c6a5:	xor    DWORD PTR [ebx+0x6f96ef5],esi
  40c6ab:	dec    esp
  40c6ac:	mov    dh,0xc7
  40c6ae:	sub    eax,0x89114702
  40c6b3:	add    esi,DWORD PTR [edx]
  40c6b5:	mov    dl,cl
  40c6b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6b8:	and    al,0x23
  40c6ba:	into   
  40c6bb:	data16 ja 0x40c654
  40c6be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6bf:	sbb    ebx,DWORD PTR [ecx+0x3]
  40c6c2:	sub    edi,DWORD PTR [ebx+0x75]
  40c6c5:	stos   DWORD PTR es:[edi],eax
  40c6c6:	and    eax,ebx
  40c6c8:	dec    esp
  40c6c9:	jne    0x40c6d3
  40c6cb:	push   ss
  40c6cc:	xchg   DWORD PTR [esi+0x217039a8],ebx
  40c6d2:	lods   eax,DWORD PTR ds:[esi]
  40c6d3:	push   eax
  40c6d4:	xchg   edi,eax
  40c6d5:	sbb    esp,DWORD PTR [ebp+0x6e]
  40c6d8:	and    eax,DWORD PTR [esi-0x2a1e2d51]
  40c6de:	mul    DWORD PTR [ebx+eax*4+0x35]
  40c6e2:	and    edi,ecx
  40c6e4:	sub    DWORD PTR [ecx-0x5ff9aaa0],esp
  40c6ea:	arpl   WORD PTR [ebp+0x39],ax
  40c6ed:	(bad)  
  40c6ee:	push   edi
  40c6ef:	arpl   sp,bx
  40c6f1:	ss cs mov ebx,ecx
  40c6f5:	ret    0xf820
  40c6f8:	jg     0x40c6e5
  40c6fa:	push   0xffffff94
  40c6fc:	pop    edx
  40c6fd:	loop   0x40c6bf
  40c6ff:	jl     0x40c718
  40c701:	sbb    bh,dh
  40c703:	pop    es
  40c704:	inc    DWORD PTR [eax+0x62a17b18]
  40c70a:	add    eax,0xdc0e3c7a
  40c70f:	int3   
  40c710:	fisubr WORD PTR [edi]
  40c712:	jge    0x40c6c1
  40c714:	outs   dx,DWORD PTR ds:[esi]
  40c715:	jbe    0x40c785
  40c717:	push   cs
  40c718:	lds    ebx,FWORD PTR [eax]
  40c71a:	ret    0xf857
  40c71d:	push   0x19
  40c71f:	jl     0x40c6de
  40c721:	mov    ebp,0xc6a858a0
  40c726:	add    eax,0x7b5207c8
  40c72b:	mov    esp,0x593eea01
  40c730:	ja     0x40c6d9
  40c732:	cmp    bh,BYTE PTR [ebx]
  40c734:	fsub   QWORD PTR [ebp-0x4161a5d4]
  40c73a:	push   ecx
  40c73b:	and    BYTE PTR [eax],0x50
  40c73e:	gs cmp al,0x50
  40c741:	mov    ds:0xe64254af,eax
  40c746:	inc    esi
  40c747:	sub    BYTE PTR [eax+0x22],0x59
  40c74b:	(bad)  
  40c74c:	dec    ebp
  40c74d:	push   ds
  40c74e:	xor    BYTE PTR [eax+edi*4-0x4d],al
  40c752:	ins    DWORD PTR es:[edi],dx
  40c753:	ror    BYTE PTR [ecx+0x37536832],1
  40c759:	adc    al,0x60
  40c75b:	jecxz  0x40c7ba
  40c75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c75e:	imul   esi,DWORD PTR [ebx+edx*1],0xffffffc9
  40c762:	scas   al,BYTE PTR es:[edi]
  40c763:	lods   al,BYTE PTR ds:[esi]
  40c764:	jle    0x40c717
  40c766:	aam    0x48
  40c768:	(bad)  
  40c769:	in     al,dx
  40c76a:	int    0xdd
  40c76c:	clc    
  40c76d:	push   edi
  40c76e:	cmp    DWORD PTR [ecx],0xfffffff3
  40c771:	(bad)  
  40c772:	mov    esp,0x28fb8b56
  40c777:	cmp    eax,0x172d8420
  40c77c:	sub    ebp,DWORD PTR [ebx-0x416bd698]
  40c782:	jmp    0x738a6abe
  40c787:	pop    ds
  40c788:	dec    edx
  40c789:	stos   BYTE PTR es:[edi],al
  40c78a:	dec    BYTE PTR es:[esi]
  40c78d:	and    cl,cl
  40c78f:	mov    es,WORD PTR [ebx-0x79]
  40c792:	in     al,0xab
  40c794:	sbb    al,0x2f
  40c796:	jb     0x40c723
  40c798:	ins    DWORD PTR es:[edi],dx
  40c799:	cmp    al,0x45
  40c79b:	(bad)  
  40c79c:	dec    ebp
  40c79d:	add    ch,0x75
  40c7a0:	jmp    0x40c7ef
  40c7a2:	lahf   
  40c7a3:	lds    eax,FWORD PTR [ebx+0x4a]
  40c7a6:	jg     0x40c743
  40c7a8:	lock lock sbb ecx,DWORD PTR [edx+eax*2]
  40c7ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ae:	into   
  40c7af:	jnp    0x40c77c
  40c7b1:	aaa    
  40c7b2:	(bad)  
  40c7b3:	jmp    0x40c73a
  40c7b5:	dec    esi
  40c7b6:	test   BYTE PTR [edi-0x16a3079e],ah
  40c7bc:	lods   al,BYTE PTR ds:[esi]
  40c7bd:	repnz lods eax,DWORD PTR ds:[esi]
  40c7bf:	mov    ebx,0x76cbfb27
  40c7c4:	or     al,0xe5
  40c7c6:	mov    dl,0xdb
  40c7c8:	push   ebx
  40c7c9:	or     BYTE PTR [edx+0x7ae53296],ch
  40c7cf:	cdq    
  40c7d0:	adc    eax,DWORD PTR [edx-0x38d40813]
  40c7d6:	cmp    bh,BYTE PTR [edx-0x7a3762cc]
  40c7dc:	pop    ecx
  40c7dd:	push   0xffffffa6
  40c7df:	push   esp
  40c7e0:	ins    DWORD PTR es:[edi],dx
  40c7e1:	es jmp 0x28e8:0x8dc28df1
  40c7e9:	sahf   
  40c7ea:	and    al,0xce
  40c7ec:	test   DWORD PTR [edx-0x3e105286],esi
  40c7f2:	aas    
  40c7f3:	or     eax,0x6e78acc9
  40c7f8:	js     0x40c837
  40c7fa:	retf   
  40c7fb:	leave  
  40c7fc:	ret    
  40c7fd:	jg     0x40c80b
  40c7ff:	sub    al,0x0
  40c801:	pop    ss
  40c802:	inc    esi
  40c803:	arpl   WORD PTR [eax],cx
  40c805:	adc    eax,DWORD PTR [ebp-0x58f79afb]
  40c80b:	inc    eax
  40c80c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c80d:	fsub   QWORD PTR [ebx+edx*4+0x24]
  40c811:	loope  0x40c82b
  40c813:	int3   
  40c814:	mov    eax,0xa5616b0f
  40c819:	sub    DWORD PTR [edi],ecx
  40c81b:	scas   al,BYTE PTR es:[edi]
  40c81c:	ins    BYTE PTR es:[edi],dx
  40c81d:	stc    
  40c81e:	jecxz  0x40c7d8
  40c820:	push   ebp
  40c821:	push   ecx
  40c822:	dec    ebp
  40c823:	inc    edi
  40c824:	jle    0x40c83a
  40c826:	pop    ss
  40c827:	test   BYTE PTR [ebx-0x49],ch
  40c82a:	mov    esp,0x756eb87b
  40c82f:	mov    ch,0xf6
  40c831:	fsub   st,st(1)
  40c833:	fistp  QWORD PTR [esi-0x4f]
  40c836:	jge    0x40c862
  40c838:	and    esi,DWORD PTR [ebp+0x61]
  40c83b:	das    
  40c83c:	xchg   dh,ch
  40c83e:	lds    esp,FWORD PTR [ebx]
  40c840:	jno    0x40c7d9
  40c842:	dec    edi
  40c843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c844:	lock push ecx
  40c846:	mov    eax,0x87e1c268
  40c84b:	push   esi
  40c84c:	stc    
  40c84d:	cmp    DWORD PTR [esi-0x5dd574f9],ecx
  40c853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c854:	mov    ebx,0xe4e86172
  40c859:	jb     0x40c862
  40c85b:	loop   0x40c87f
  40c85d:	rol    eax,cl
  40c85f:	mov    al,ds:0x46110599
  40c864:	in     al,0x60
  40c866:	mov    fs,WORD PTR [esi+0x4ab1befe]
  40c86c:	aad    0xc7
  40c86e:	test   BYTE PTR [ebp+0x2],bh
  40c871:	lea    edx,[esi+0x3f08ded]
  40c877:	mov    dl,0x8c
  40c879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c87a:	or     BYTE PTR [eax-0x3c40dde],0x9
  40c881:	or     DWORD PTR [esi-0x5c],esi
  40c884:	prefetch (bad)
  40c885:	or     eax,0xa7fb01df
  40c88a:	mov    edx,0x4adb77d8
  40c88f:	sub    ecx,DWORD PTR [ecx+0x3c]
  40c892:	mov    bp,0xdb28
  40c896:	and    ch,BYTE PTR [edx-0x4e3b3f4a]
  40c89c:	das    
  40c89d:	rcr    BYTE PTR [ecx+ebx*4+0x2b13bd9a],0x47
  40c8a5:	ret    0xcdd6
  40c8a8:	jle    0x40c85b
  40c8aa:	jge    0x40c8f6
  40c8ac:	jecxz  0x40c8d4
  40c8ae:	add    al,0xdb
  40c8b0:	xor    dl,al
  40c8b2:	sbb    edx,DWORD PTR [edi+0xe]
  40c8b5:	into   
  40c8b6:	(bad)  
  40c8b7:	popf   
  40c8b8:	ss aaa 
  40c8ba:	adc    al,dh
  40c8bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8bd:	push   edi
  40c8be:	and    DWORD PTR [esp+eax*4-0x7fbb9c1],esp
  40c8c5:	adc    edx,DWORD PTR [ebp-0x19]
  40c8c8:	sbb    BYTE PTR [ecx],cl
  40c8ca:	out    dx,eax
  40c8cb:	mov    dh,BYTE PTR [eax+0x2b26223d]
  40c8d1:	fsubr  st,st(1)
  40c8d3:	popa   
  40c8d4:	jne    0x40c8ac
  40c8d6:	cdq    
  40c8d7:	pushaw 
  40c8d9:	lock stos DWORD PTR es:[edi],eax
  40c8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8dc:	push   ebp
  40c8dd:	inc    ebp
  40c8de:	repz xor al,0x21
  40c8e1:	je     0x40c8af
  40c8e3:	mov    ebx,0x26486779
  40c8e8:	or     edx,DWORD PTR [eax-0x13]
  40c8eb:	adc    dl,BYTE PTR [edx-0x5e]
  40c8ee:	mul    DWORD PTR [ecx-0x257d2e4d]
  40c8f4:	xor    BYTE PTR [esp+eax*8],0xf
  40c8f8:	fucomip st,st(1)
  40c8fa:	mov    ecx,0xe281d7da
  40c8ff:	and    DWORD PTR [edx],esp
  40c901:	out    0x3c,eax
  40c903:	inc    ebx
  40c904:	adc    DWORD PTR ds:0xd572ae7a,0xffffffbb
  40c90b:	pop    ss
  40c90c:	pop    edx
  40c90d:	js     0x40c8b0
  40c90f:	mov    BYTE PTR [edi+0x7eeb5879],bh
  40c915:	push   ecx
  40c916:	xchg   esi,eax
  40c917:	sti    
  40c918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c919:	add    BYTE PTR [esi+0x37],cl
  40c91c:	add    DWORD PTR [edx+0x37cfd50c],edi
  40c922:	imul   ecx,DWORD PTR [ecx+0x4e],0x16
  40c926:	jp     0x40c965
  40c928:	stos   BYTE PTR es:[edi],al
  40c929:	pop    edi
  40c92a:	dec    eax
  40c92b:	cmp    DWORD PTR [edx+0x17873afa],eax
  40c931:	dec    esp
  40c932:	push   ds
  40c933:	cmp    ch,ch
  40c935:	int    0x8d
  40c937:	leave  
  40c938:	fsubr  DWORD PTR [ecx]
  40c93a:	ins    BYTE PTR es:[edi],dx
  40c93b:	jne    0x40c9b2
  40c93d:	(bad)  
  40c93e:	loopne 0x40c97a
  40c940:	cmp    al,ch
  40c942:	mov    bl,0x77
  40c944:	lds    eax,FWORD PTR [esi-0x49]
  40c947:	pusha  
  40c948:	adc    BYTE PTR [eax],al
  40c94a:	sub    DWORD PTR [edi-0x50ba5b60],ebx
  40c950:	pop    esp
  40c951:	pop    ds
  40c952:	aas    
  40c953:	not    BYTE PTR gs:[esi-0x63]
  40c957:	test   al,0x9b
  40c959:	inc    ecx
  40c95a:	mov    cl,0x59
  40c95c:	ret    0x2dd
  40c95f:	test   BYTE PTR [ebx+0x7e023e26],bh
  40c965:	mov    WORD PTR [ebp-0x4f],es
  40c968:	and    al,0x23
  40c96a:	jb     0x40c90a
  40c96c:	stc    
  40c96d:	fwait
  40c96e:	sub    DWORD PTR [edx+0x3952c696],esi
  40c974:	int3   
  40c975:	sti    
  40c976:	pop    esi
  40c977:	loopne 0x40c982
  40c979:	dec    eax
  40c97a:	xor    eax,0x11053b6a
  40c97f:	push   cs
  40c980:	jns    0x40c9db
  40c982:	push   eax
  40c983:	mov    bl,0xac
  40c985:	xor    BYTE PTR ds:0x9bda339e,0xd9
  40c98c:	outs   dx,BYTE PTR ds:[esi]
  40c98d:	fcom   DWORD PTR [ecx+0x2a]
  40c990:	mov    DWORD PTR [esi+0x1b8e9765],esp
  40c996:	pop    ecx
  40c997:	out    0xe5,al
  40c999:	cmp    DWORD PTR [eax+0x48],ebp
  40c99c:	jbe    0x40c9aa
  40c99e:	frstor [esi-0x28e14516]
  40c9a4:	ret    
  40c9a5:	inc    ebp
  40c9a6:	fsubp  st(2),st
  40c9a8:	push   edi
  40c9a9:	inc    ebp
  40c9aa:	out    0xc7,eax
  40c9ac:	pop    ss
  40c9ad:	mov    ah,0x19
  40c9af:	push   es
  40c9b0:	and    BYTE PTR [edi+0xc],dl
  40c9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9b4:	addr16 sub bl,bl
  40c9b7:	call   edi
  40c9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ba:	retf   
  40c9bb:	dec    esp
  40c9bc:	bound  ebx,QWORD PTR [edx]
  40c9be:	mov    bl,0xe5
  40c9c0:	mov    ebp,DWORD PTR [ecx+0x22]
  40c9c3:	xor    ebx,ebp
  40c9c5:	mov    eax,ds:0x90475f51
  40c9ca:	imul   eax,DWORD PTR [ebx+0x69af1d8c],0xfed5fd92
  40c9d4:	test   eax,0x7dde6d0b
  40c9d9:	mov    dh,BYTE PTR ds:0x6b5a4483
  40c9df:	xchg   edx,eax
  40c9e0:	sub    eax,0x47ca18bb
  40c9e5:	(bad)  
  40c9e6:	sbb    DWORD PTR [esi-0x48],edi
  40c9e9:	cmp    ecx,DWORD PTR [esi+0x517e3ebe]
  40c9ef:	adc    dh,BYTE PTR ss:[ecx+0x2e85301f]
  40c9f6:	daa    
  40c9f7:	sbb    bl,cl
  40c9f9:	dec    edi
  40c9fa:	ret    0x2c2f
  40c9fd:	(bad)  
  40c9fe:	mov    bl,BYTE PTR ds:0x4e5ee560
  40ca04:	(bad)
  40ca07:	dec    ebx
  40ca08:	lock retf 
  40ca0a:	pop    ebp
  40ca0b:	scas   al,BYTE PTR es:[edi]
  40ca0c:	mov    dh,0xee
  40ca0e:	sbb    DWORD PTR [esi-0x236c1e7f],edi
  40ca14:	outs   dx,DWORD PTR ds:[esi]
  40ca15:	xor    ebp,DWORD PTR [esi]
  40ca17:	xor    dl,al
  40ca19:	das    
  40ca1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca1b:	in     al,dx
  40ca1c:	bound  esp,QWORD PTR [edx+eax*2-0x57]
  40ca20:	mov    ch,BYTE PTR [edi-0x21b2e243]
  40ca26:	or     ch,BYTE PTR [ecx]
  40ca28:	int    0xc4
  40ca2a:	lods   al,BYTE PTR ds:[esi]
  40ca2b:	out    dx,al
  40ca2c:	dec    edi
  40ca2d:	mov    DWORD PTR ds:0x65c6cf2a,edx
  40ca33:	in     al,dx
  40ca34:	mov    ebp,0x34d7f4af
  40ca39:	add    cl,BYTE PTR [esi+0x1d]
  40ca3c:	outs   dx,DWORD PTR ds:[esi]
  40ca3d:	adc    DWORD PTR [esi-0x6f0a2400],0x23
  40ca44:	push   ebp
  40ca45:	repz mov cl,0xe
  40ca48:	js     0x40ca8d
  40ca4a:	jno    0x40ca1f
  40ca4c:	push   esp
  40ca4d:	int    0x9b
  40ca4f:	sahf   
  40ca50:	mov    cl,0xc1
  40ca52:	inc    edx
  40ca53:	in     al,0x3a
  40ca55:	xor    al,0x2a
  40ca57:	sar    DWORD PTR [eax-0x5b],0xc8
  40ca5b:	lods   al,BYTE PTR ds:[esi]
  40ca5c:	inc    edi
  40ca5d:	jl     0x40ca5e
  40ca5f:	mov    bh,0x1e
  40ca61:	push   edx
  40ca62:	popa   
  40ca63:	pushf  
  40ca64:	sub    eax,0x8642c50f
  40ca69:	xor    ebp,edx
  40ca6b:	ror    DWORD PTR [eax+0x7d9794bf],cl
  40ca71:	cmp    edi,ebp
  40ca73:	test   eax,0x903ece2e
  40ca78:	call   0x7db93597
  40ca7d:	cwde   
  40ca7e:	inc    esi
  40ca7f:	push   ebp
  40ca80:	test   DWORD PTR [ecx+0x50],ebx
  40ca83:	aad    0xa4
  40ca85:	stos   DWORD PTR es:[edi],eax
  40ca86:	sbb    DWORD PTR [ebx],eax
  40ca88:	sub    DWORD PTR [ebx-0x270af354],0x30
  40ca8f:	das    
  40ca90:	or     BYTE PTR [ecx+0x3ac10171],ah
  40ca96:	pop    edx
  40ca97:	mov    ch,0xbc
  40ca99:	or     esp,eax
  40ca9b:	ja     0x40ca9e
  40ca9d:	mov    ebx,0x8c0c38b
  40caa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caa3:	push   0xa29aa637
  40caa8:	push   0xffffffda
  40caaa:	jb     0x40cad9
  40caac:	cmp    dh,BYTE PTR [esi]
  40caae:	cwde   
  40caaf:	xor    BYTE PTR ds:0xfa053158,dl
  40cab5:	sbb    bl,BYTE PTR [eax+0xf]
  40cab8:	dec    eax
  40cab9:	ja     0x40ca9a
  40cabb:	xor    eax,0x9bd63805
  40cac0:	sub    DWORD PTR [ebp-0x56ff2f69],edi
  40cac6:	adc    bl,ah
  40cac8:	fisub  WORD PTR [ebp+0x1b]
  40cacb:	je     0x40cafd
  40cacd:	xor    esp,ecx
  40cacf:	mov    bl,0xdc
  40cad1:	fst    st(4)
  40cad3:	pop    es
  40cad4:	aaa    
  40cad5:	out    dx,al
  40cad6:	and    al,0x0
  40cad8:	jbe    0x40cb14
  40cada:	cmp    esi,edi
  40cadc:	jns    0x40ca6d
  40cade:	mov    ecx,0x279198c7
  40cae3:	xchg   edi,eax
  40cae4:	xor    eax,0x1c3e3bfd
  40cae9:	mov    esi,0x6967d3fc
  40caee:	jl     0x40ca73
  40caf0:	xchg   edx,eax
  40caf1:	push   ecx
  40caf2:	mov    bl,0xef
  40caf4:	retf   
  40caf5:	mov    esi,0x3949753f
  40cafa:	pop    es
  40cafb:	enter  0xb3b6,0x9a
  40caff:	inc    edi
  40cb00:	fsubr  QWORD PTR [ebx+0x34]
  40cb03:	mov    al,ds:0x969d58fa
  40cb08:	pushf  
  40cb09:	adc    al,0xb7
  40cb0b:	sbb    edx,ecx
  40cb0d:	aad    0x15
  40cb0f:	test   BYTE PTR [edx-0x7e243629],bh
  40cb15:	cmp    BYTE PTR [ebx-0x4a],dl
  40cb18:	adc    al,0x4c
  40cb1a:	adc    eax,0x2f6f6490
  40cb1f:	pop    esi
  40cb20:	dec    edx
  40cb21:	sub    eax,0x386f2f4
  40cb26:	fimul  DWORD PTR [edi]
  40cb28:	sahf   
  40cb29:	push   ecx
  40cb2a:	lods   eax,DWORD PTR ds:[esi]
  40cb2b:	cmp    al,BYTE PTR [edi+ebp*8-0x7e473852]
  40cb32:	jnp    0x40cb2c
  40cb34:	push   ds
  40cb35:	pop    ss
  40cb36:	xlat   BYTE PTR ds:[ebx]
  40cb37:	push   ds
  40cb38:	out    dx,eax
  40cb39:	call   DWORD PTR [esi+0xc]
  40cb3c:	inc    eax
  40cb3d:	push   esi
  40cb3e:	je     0x40cb01
  40cb40:	or     bl,BYTE PTR [edx+0x2f5b29]
  40cb46:	push   0xf54176c2
  40cb4b:	inc    edi
  40cb4c:	lock rdmsr 
  40cb4f:	arpl   WORD PTR [esp+ebx*8-0x5c7a43c7],bp
  40cb56:	out    dx,al
  40cb57:	dec    ecx
  40cb58:	je     0x40caff
  40cb5a:	popa   
  40cb5b:	cmp    bh,BYTE PTR [edi-0x396138ea]
  40cb61:	jle    0x40cb46
  40cb63:	dec    ebp
  40cb64:	and    eax,0x67a19172
  40cb69:	push   ecx
  40cb6a:	adc    ah,bl
  40cb6c:	outs   dx,DWORD PTR ds:[esi]
  40cb6d:	and    eax,0x5f25ffc5
  40cb72:	mov    ds:0xb2f5855a,eax
  40cb77:	xchg   ecx,eax
  40cb78:	fs aaa 
  40cb7a:	(bad)  
  40cb7b:	lods   al,BYTE PTR ds:[esi]
  40cb7c:	pop    esi
  40cb7d:	sub    eax,0xc551caed
  40cb82:	xchg   edi,eax
  40cb83:	jbe    0x40cbdc
  40cb85:	add    cl,BYTE PTR [ebp+0x524db356]
  40cb8b:	sbb    BYTE PTR [ebx-0x27499e08],ah
  40cb91:	stc    
  40cb92:	data16 gs std 
  40cb95:	test   eax,0x7e5066ed
  40cb9a:	out    dx,eax
  40cb9b:	mov    cl,0xae
  40cb9d:	jns    0x40cb51
  40cb9f:	add    ebx,DWORD PTR [esi]
  40cba1:	and    BYTE PTR [esi+edx*2-0x68],ah
  40cba5:	mov    WORD PTR [ebx],?
  40cba7:	out    dx,eax
  40cba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cba9:	mov    eax,0xd14bc035
  40cbae:	les    eax,FWORD PTR [esi+ebx*2-0x79]
  40cbb2:	ins    BYTE PTR es:[edi],dx
  40cbb3:	xchg   edi,eax
  40cbb4:	jno    0x40cc02
  40cbb6:	(bad)  
  40cbb7:	sahf   
  40cbb8:	ret    
  40cbb9:	dec    edx
  40cbba:	or     al,0x29
  40cbbc:	popf   
  40cbbd:	(bad)  
  40cbbe:	mov    cl,0xd9
  40cbc0:	mov    ebx,0x993d0e6d
  40cbc5:	rcl    BYTE PTR [eax+eiz*4-0x4607624b],0xda
  40cbcd:	stos   BYTE PTR es:[edi],al
  40cbce:	cmp    BYTE PTR [ebp+0x14],al
  40cbd1:	sar    DWORD PTR [eax+0x5931f327],cl
  40cbd7:	and    eax,0x55ee2f2b
  40cbdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbdd:	loope  0x40cbc2
  40cbdf:	push   ebx
  40cbe0:	repnz les esp,FWORD PTR [esi-0x4b]
  40cbe4:	outs   dx,BYTE PTR ds:[esi]
  40cbe5:	aam    0xf8
  40cbe7:	bnd jno 0x40cc16
  40cbea:	pop    edx
  40cbeb:	mov    eax,0x87391d8d
  40cbf0:	mov    dh,0x9e
  40cbf2:	dec    edx
  40cbf3:	push   edi
  40cbf4:	fisubr DWORD PTR ds:0x1cb23415
  40cbfa:	adc    bh,al
  40cbfc:	cmp    eax,0x253d1f1e
  40cc01:	push   cs
  40cc02:	clc    
  40cc03:	add    eax,0x91faf61c
  40cc08:	call   0x7dfe:0xa22051d
  40cc0f:	sbb    eax,0x8ea42a51
  40cc14:	aad    0x9b
  40cc16:	pop    edi
  40cc17:	das    
  40cc18:	xchg   ecx,eax
  40cc19:	or     eax,0xb8378b89
  40cc1e:	es add dl,0x63
  40cc22:	mov    ds:0x6c7de290,eax
  40cc27:	loop   0x40cc97
  40cc29:	cmc    
  40cc2a:	xchg   esp,eax
  40cc2b:	in     eax,0x20
  40cc2d:	jmp    0x40cbfc
  40cc2f:	sbb    al,0x59
  40cc31:	mov    bx,0xf001
  40cc35:	ins    DWORD PTR es:[edi],dx
  40cc36:	call   0xcdac:0x400b7052
  40cc3d:	daa    
  40cc3e:	ret    
  40cc3f:	dec    eax
  40cc40:	inc    ebx
  40cc41:	and    al,0x8d
  40cc43:	(bad)  
  40cc44:	mov    edx,0x8a86a948
  40cc49:	rcr    DWORD PTR [ecx],1
  40cc4b:	dec    ecx
  40cc4c:	cld    
  40cc4d:	test   BYTE PTR [esi+0x249b5be9],dh
  40cc53:	leave  
  40cc54:	xchg   esi,eax
  40cc55:	xor    al,0x6e
  40cc57:	dec    esi
  40cc58:	rol    DWORD PTR [ebx+0x46],0xe6
  40cc5c:	retf   
  40cc5d:	mov    bl,0xb2
  40cc5f:	mov    bh,0xa5
  40cc61:	cli    
  40cc62:	ja     0x40cc6a
  40cc64:	sub    eax,0x685af480
  40cc69:	pop    edi
  40cc6a:	xor    eax,0xecdbbc96
  40cc6f:	sub    dh,ah
  40cc71:	cdq    
  40cc72:	mov    ch,0x75
  40cc74:	mov    ebp,0x63cbc15e
  40cc79:	push   cs
  40cc7a:	mov    dl,0x88
  40cc7c:	out    0xbc,al
  40cc7e:	in     eax,dx
  40cc7f:	adc    eax,0x8d0c9271
  40cc84:	mov    ecx,0x3f7dd0d2
  40cc89:	shr    BYTE PTR ds:0x26897e1,1
  40cc8f:	mov    bh,0x61
  40cc91:	arpl   dx,si
  40cc93:	imul   edx,DWORD PTR [esi-0x23],0x25
  40cc97:	pop    ds
  40cc98:	push   edi
  40cc99:	mov    esi,0x3596c6
  40cc9e:	adc    BYTE PTR [esi],bl
  40cca0:	sub    al,0xa5
  40cca2:	xchg   esp,eax
  40cca3:	mov    ah,0x3e
  40cca6:	and    ch,ah
  40cca8:	cli    
  40cca9:	ret    
  40ccaa:	sbb    ecx,DWORD PTR [eax+0x58bab373]
  40ccb0:	mov    WORD PTR [esi],?
  40ccb2:	add    dh,al
  40ccb4:	call   0x7ad6:0xe5074843
  40ccbb:	lahf   
  40ccbc:	adc    eax,0x5bb32499
  40ccc1:	or     cl,BYTE PTR [edi+ecx*4-0x523baae5]
  40ccc8:	inc    esi
  40ccc9:	adc    esi,ebx
  40cccb:	or     al,BYTE PTR [edi-0x60]
  40ccce:	add    BYTE PTR [ebx+0x657530d5],bh
  40ccd4:	or     ebx,eax
  40ccd6:	fld    TBYTE PTR [esi+0x519e0342]
  40ccdc:	lods   al,BYTE PTR ds:[esi]
  40ccdd:	mov    bh,0x4a
  40ccdf:	add    eax,DWORD PTR [ebx+0x4f96d723]
  40cce5:	jno    0x40cd40
  40cce7:	test   eax,0x1c149561
  40ccec:	cwde   
  40cced:	and    bh,bh
  40ccef:	test   DWORD PTR [esi-0x1971f776],ecx
  40ccf5:	scas   eax,DWORD PTR es:[edi]
  40ccf6:	jns    0x40ccf5
  40ccf8:	mov    ecx,0x128b0fce
  40ccfd:	shl    BYTE PTR [ebx],0x8d
  40cd00:	xchg   edi,eax
  40cd01:	mov    ebp,0x7b083b93
  40cd06:	idiv   DWORD PTR [edi-0x13]
  40cd09:	enter  0xbf2c,0xb9
  40cd0d:	in     eax,dx
  40cd0e:	pop    ss
  40cd0f:	lea    ecx,[edi+0x776390bd]
  40cd15:	int3   
  40cd16:	into   
  40cd17:	cmp    bh,cl
  40cd19:	fcom   st(5)
  40cd1b:	rep outs dx,DWORD PTR ds:[esi]
  40cd1d:	adc    BYTE PTR [eax+0x6e],bh
  40cd20:	scas   eax,DWORD PTR es:[edi]
  40cd21:	sbb    bl,BYTE PTR [edi+0x27dcc9d1]
  40cd27:	add    al,0x50
  40cd29:	out    dx,al
  40cd2a:	mov    bl,0x91
  40cd2c:	sbb    ebx,DWORD PTR [edx+ebp*2-0x26]
  40cd30:	mov    edx,0x53268ca6
  40cd35:	pop    ebp
  40cd36:	stc    
  40cd37:	or     eax,0x29d553f8
  40cd3c:	xchg   ebp,eax
  40cd3d:	dec    ecx
  40cd3e:	or     bh,ch
  40cd40:	lahf   
  40cd41:	cmp    DWORD PTR [eax],ebp
  40cd43:	jbe    0x40ccdc
  40cd45:	xchg   edx,eax
  40cd46:	and    DWORD PTR [edi-0x68],ebx
  40cd49:	jmp    FWORD PTR [edi-0x15]
  40cd4c:	jmp    0xed29:0x1bfe262a
  40cd53:	das    
  40cd54:	sahf   
  40cd55:	cmp    DWORD PTR [edx+0x8cd4df],0x59
  40cd5c:	xchg   al,bh
  40cd5e:	mov    dl,0xdc
  40cd60:	cmp    esp,DWORD PTR [edi-0x1b]
  40cd63:	xchg   BYTE PTR [ebp+0x79],dl
  40cd66:	inc    edi
  40cd67:	dec    edx
  40cd68:	js     0x40cd80
  40cd6a:	inc    edx
  40cd6b:	and    eax,0xfccf8333
  40cd70:	xor    ch,BYTE PTR [ecx-0x18265756]
  40cd76:	mov    ebx,0xdbaa0dc5
  40cd7b:	mov    ebp,ss
  40cd7d:	or     ch,BYTE PTR [ebp+0xf01c6bf]
  40cd83:	cld    
  40cd84:	sbb    BYTE PTR [eax+0x277eca09],dh
  40cd8a:	inc    esp
  40cd8b:	mov    ebx,0x53bbe9eb
  40cd90:	loop   0x40cd53
  40cd92:	sbb    ebx,ecx
  40cd94:	push   es
  40cd95:	aaa    
  40cd96:	or     BYTE PTR cs:[edx],dh
  40cd99:	push   ebp
  40cd9a:	pop    ebp
  40cd9b:	fmul   st(1),st
  40cd9d:	jmp    0x40ce01
  40cd9f:	fnstenv [edx+0x78]
  40cda2:	mov    dh,0xdc
  40cda4:	lds    ecx,FWORD PTR [esi]
  40cda6:	aad    0x46
  40cda8:	push   ecx
  40cda9:	ins    BYTE PTR es:[edi],dx
  40cdaa:	sbb    ch,BYTE PTR [esi+0x6784f12a]
  40cdb0:	pop    edi
  40cdb1:	cwde   
  40cdb2:	ffreep st(5)
  40cdb4:	cmp    BYTE PTR [edx+0x11],bh
  40cdb7:	xchg   esi,eax
  40cdb8:	in     eax,dx
  40cdb9:	pop    eax
  40cdba:	das    
  40cdbb:	rcl    BYTE PTR [eax],0x89
  40cdbe:	scas   eax,DWORD PTR es:[edi]
  40cdbf:	or     ebp,edx
  40cdc1:	cmp    ecx,DWORD PTR [ebp+0x2c]
  40cdc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdc5:	add    edx,DWORD PTR [eax-0x6]
  40cdc8:	push   ebx
  40cdc9:	sti    
  40cdca:	aam    0x5
  40cdcc:	xchg   ebx,eax
  40cdcd:	push   edi
  40cdce:	jmp    0x40cd6e
  40cdd0:	mov    ah,0xef
  40cdd2:	fstp   TBYTE PTR [edx+0x1e]
  40cdd5:	jae    0x40ce43
  40cdd7:	adc    ebp,0x5f
  40cdda:	mov    edi,0xa475035a
  40cddf:	in     al,0x3d
  40cde1:	sar    BYTE PTR [edx-0x6b],cl
  40cde4:	push   es
  40cde5:	sub    eax,0x36ff8bd9
  40cdea:	mov    al,0x6
  40cdec:	mov    ah,0x99
  40cdee:	jbe    0x40ce36
  40cdf0:	push   ss
  40cdf1:	mov    esp,0x41c2a28b
  40cdf6:	test   BYTE PTR [eax+0x71],ch
  40cdf9:	jb     0x40cda5
  40cdfb:	sbb    al,BYTE PTR [ecx]
  40cdfd:	mov    eax,ds:0xfc1f52ab
  40ce02:	shl    DWORD PTR [eiz*1+0x21f50063],cl
  40ce09:	pusha  
  40ce0a:	and    edx,DWORD PTR [edx]
  40ce0c:	push   ss
  40ce0d:	ret    
  40ce0e:	xor    al,0xb1
  40ce10:	in     al,dx
  40ce11:	je     0x40cdf5
  40ce13:	xchg   ecx,eax
  40ce14:	ret    
  40ce15:	call   0xba094c8a
  40ce1a:	jl     0x40ce2a
  40ce1c:	cli    
  40ce1d:	(bad)  
  40ce1e:	fwait
  40ce1f:	ss out dx,eax
  40ce21:	sub    DWORD PTR [edi+0x34],edi
  40ce24:	add    ch,ch
  40ce26:	xchg   esp,eax
  40ce27:	push   edi
  40ce28:	add    esi,DWORD PTR [edx+0x66]
  40ce2b:	enter  0x7bcb,0x3f
  40ce2f:	sbb    al,0x38
  40ce31:	and    esp,0x66bfa74b
  40ce37:	push   ebx
  40ce38:	push   ebx
  40ce39:	cmp    eax,0x85b6c15b
  40ce3e:	or     cl,bh
  40ce40:	sbb    BYTE PTR [ecx-0x2ff167c0],bl
  40ce46:	lock mov BYTE PTR [ebp+0x65],ah
  40ce4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce4b:	pop    esi
  40ce4c:	aad    0xf8
  40ce4e:	out    0x19,al
  40ce50:	xchg   edx,eax
  40ce51:	(bad)  
  40ce52:	and    al,0xa5
  40ce54:	push   es
  40ce55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce56:	sbb    ebx,DWORD PTR [ebx+0x55]
  40ce59:	push   ss
  40ce5a:	push   ecx
  40ce5b:	(bad)  [edi+edi*1-0x3f082b4c]
  40ce62:	retf   0x393e
  40ce65:	inc    ecx
  40ce66:	pop    eax
  40ce67:	inc    ebx
  40ce68:	test   DWORD PTR [ebp-0x70939391],0x1a14035f
  40ce72:	out    0x3d,eax
  40ce74:	mov    WORD PTR [edi+0x6c9ef69e],?
  40ce7a:	in     al,0x35
  40ce7c:	scas   al,BYTE PTR es:[edi]
  40ce7d:	arpl   WORD PTR [ebx],si
  40ce7f:	fistp  QWORD PTR [eax+0x23879e02]
  40ce85:	dec    edi
  40ce86:	lahf   
  40ce87:	cmp    bh,BYTE PTR [edi-0x6b]
  40ce8a:	(bad)  
  40ce8c:	cmp    edx,edi
  40ce8e:	js     0x40ce16
  40ce90:	mov    al,0xfe
  40ce92:	bound  edx,QWORD PTR [ebp-0x56]
  40ce95:	into   
  40ce96:	les    edx,FWORD PTR [edi]
  40ce98:	dec    ebp
  40ce99:	sar    BYTE PTR [eax+edx*1],cl
  40ce9c:	fldenv [ebx+0x28f9b432]
  40cea2:	gs dec ebp
  40cea4:	pushf  
  40cea5:	stos   BYTE PTR es:[edi],al
  40cea6:	ret    0xab9b
  40cea9:	mov    ebp,esp
  40ceab:	into   
  40ceac:	call   0x32d06e2f
  40ceb1:	std    
  40ceb2:	jmp    0x8e70:0x81aeb2c8
  40ceb9:	pop    ebp
  40ceba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cebb:	addr16 sub esi,ebx
  40cebe:	iret   
  40cebf:	fisubr WORD PTR ds:0x37a67ff
  40cec5:	jp     0x40ceb3
  40cec7:	std    
  40cec8:	push   eax
  40cec9:	mov    ch,0x8c
  40cecb:	mov    eax,ds:0xf03ab75d
  40ced0:	inc    edx
  40ced1:	ror    esi,0xaa
  40ced4:	sub    al,BYTE PTR ds:0x4e9be08b
  40ceda:	or     al,0x44
  40cedc:	outs   dx,BYTE PTR ds:[esi]
  40cedd:	mov    ds:0x15d4bbab,eax
  40cee2:	jg     0x40cec4
  40cee4:	cmp    cl,BYTE PTR [ecx+0x6]
  40cee7:	sbb    esi,DWORD PTR [ecx]
  40cee9:	dec    eax
  40ceea:	sbb    dl,BYTE PTR [edx-0x47]
  40ceed:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceef:	mov    al,ds:0x468e8d5f
  40cef4:	or     eax,DWORD PTR [edx+0x65282d3c]
  40cefa:	jno    0x40cec1
  40cefc:	xor    ch,al
  40cefe:	rol    BYTE PTR [edi+0x12],1
  40cf01:	xchg   edx,eax
  40cf02:	(bad)  
  40cf03:	in     al,dx
  40cf04:	xchg   ecx,eax
  40cf05:	int3   
  40cf06:	iret   
  40cf07:	sbb    ebx,DWORD PTR [ecx+0x4e]
  40cf0a:	dec    ebp
  40cf0b:	fwait
  40cf0c:	mov    edx,0x80106dbf
  40cf11:	jmp    0x40cebc
  40cf13:	jae    0x40cf6b
  40cf15:	out    dx,al
  40cf16:	push   edi
  40cf17:	mov    eax,ds:0xfd035200
  40cf1c:	call   0xaa0a:0x70aa44b2
  40cf23:	call   0x5484:0xc9547e8d
  40cf2a:	sub    eax,0xadfe58c6
  40cf2f:	into   
  40cf30:	clc    
  40cf31:	jae    0x40ceda
  40cf33:	pop    ss
  40cf34:	(bad)  
  40cf35:	mov    dh,0xe0
  40cf37:	scas   eax,DWORD PTR es:[edi]
  40cf38:	sub    BYTE PTR [edi+0x2f36c1ae],bh
  40cf3e:	mov    bl,0x2
  40cf40:	adc    eax,0x3ffb6321
  40cf45:	push   esp
  40cf46:	lods   eax,DWORD PTR ds:[esi]
  40cf47:	outs   dx,DWORD PTR ds:[esi]
  40cf48:	pop    esi
  40cf49:	cs mov al,0xda
  40cf4c:	aad    0xa7
  40cf4e:	pushw  0x42
  40cf51:	test   al,0x17
  40cf53:	test   BYTE PTR [ecx-0x34],dh
  40cf56:	in     eax,0x49
  40cf58:	daa    
  40cf59:	or     eax,0xccca7765
  40cf5e:	scas   al,BYTE PTR es:[edi]
  40cf5f:	jns    0x40cf7e
  40cf61:	jno    0x40cf2e
  40cf63:	das    
  40cf64:	pop    ecx
  40cf65:	mov    bl,0xa9
  40cf67:	mov    al,ds:0x371a3f5a
  40cf6c:	cmp    BYTE PTR [edi+0x54881f2d],bl
  40cf72:	xlat   BYTE PTR ds:[ebx]
  40cf73:	inc    esi
  40cf74:	xchg   DWORD PTR [eax+0x12],esp
  40cf77:	std    
  40cf78:	adc    bl,BYTE PTR [esi]
  40cf7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf7b:	sbb    eax,0x805e1025
  40cf80:	sub    dh,al
  40cf82:	jg     0x40cf15
  40cf84:	ins    BYTE PTR es:[edi],dx
  40cf85:	test   DWORD PTR [edi-0x49],ecx
  40cf88:	add    BYTE PTR [edi],0x74
  40cf8b:	lds    ecx,FWORD PTR [ebx+0x148d71e]
  40cf91:	push   es
  40cf92:	mov    ds,ecx
  40cf94:	lods   al,BYTE PTR ds:[esi]
  40cf95:	(bad)  
  40cf96:	in     eax,dx
  40cf97:	push   esi
  40cf98:	mov    ebx,0x868b1a2c
  40cf9d:	mov    al,0x8
  40cf9f:	mov    ds:0x9260ef1c,eax
  40cfa4:	fs xchg ah,dl
  40cfa7:	jae    0x40cf76
  40cfa9:	pop    ebx
  40cfaa:	in     eax,0x81
  40cfac:	jnp    0x40cf30
  40cfae:	push   0xe4ac4516
  40cfb3:	shr    BYTE PTR ds:0x29f6180b,cl
  40cfb9:	and    al,0xe5
  40cfbb:	add    eax,DWORD PTR [esi]
  40cfbd:	add    al,0xd9
  40cfbf:	repz xor dh,dh
  40cfc2:	sbb    al,BYTE PTR [edi+0x45]
  40cfc5:	test   eax,0xa6135163
  40cfca:	mov    DWORD PTR [esi-0x3d2a1ede],ecx
  40cfd0:	jmp    0xc963:0xc730bcf9
  40cfd7:	cdq    
  40cfd8:	shl    DWORD PTR [esi+0x459f3e44],1
  40cfde:	xchg   esi,eax
  40cfdf:	pop    ecx
  40cfe0:	sbb    al,0xc4
  40cfe2:	bswap  eax
  40cfe4:	es dec esp
  40cfe6:	cs stc 
  40cfe8:	into   
  40cfe9:	inc    esi
  40cfea:	mov    WORD PTR [ebp+edx*2-0x38338d71],fs
  40cff1:	repnz icebp 
  40cff3:	pop    ebp
  40cff4:	retf   
  40cff5:	fsubr  QWORD PTR [edi+edx*2-0x3d0bbada]
  40cffc:	mov    dl,0xf4
  40cffe:	popa   
  40cfff:	mov    DWORD PTR [edx],ecx
  40d001:	inc    esp
  40d002:	mov    esi,0x6bdacacc
  40d007:	(bad)  
  40d008:	call   0x43e2:0x61d9afb9
  40d00f:	popa   
  40d010:	test   cl,cl
  40d012:	mov    edx,0xaec9baf3
  40d017:	lock (bad) 
  40d019:	push   cs
  40d01a:	and    eax,0xf2f8dd97
  40d01f:	loop   0x40d087
  40d021:	mov    esi,0xd9ad9017
  40d026:	scas   eax,DWORD PTR es:[edi]
  40d027:	sub    ch,BYTE PTR [ebp+0x256e3178]
  40d02d:	fistp  WORD PTR [edx]
  40d02f:	outs   dx,BYTE PTR ds:[esi]
  40d030:	pop    ecx
  40d031:	inc    ecx
  40d032:	sub    al,0x42
  40d034:	mov    dl,0x59
  40d036:	jne    0x40d064
  40d038:	rcr    esi,cl
  40d03a:	loop   0x40cff4
  40d03c:	int    0x81
  40d03e:	or     al,0x4e
  40d040:	fs dec ecx
  40d042:	push   0x450ecc17
  40d047:	out    0x27,eax
  40d049:	adc    bh,BYTE PTR [ebx]
  40d04b:	cmp    eax,0x8c9b9701
  40d050:	stos   BYTE PTR es:[edi],al
  40d051:	sub    DWORD PTR [ebp*8-0x5d568b1c],ebp
  40d058:	or     DWORD PTR [ebx+ebx*4],esp
  40d05b:	xchg   DWORD PTR [ecx],esp
  40d05d:	mov    eax,0xc95d46c8
  40d062:	jmp    0xed16:0x66fedee8
  40d069:	out    dx,al
  40d06a:	retf   
  40d06b:	cmp    al,0xf9
  40d06d:	pushf  
  40d06e:	add    esp,edi
  40d070:	(bad)  
  40d071:	sbb    al,0x72
  40d073:	xor    eax,0xdeb79f82
  40d078:	fwait
  40d079:	mov    cl,0x10
  40d07b:	in     al,dx
  40d07c:	scas   eax,DWORD PTR es:[edi]
  40d07d:	jl     0x40d0d4
  40d07f:	pushf  
  40d080:	add    al,0xba
  40d082:	fimul  WORD PTR [edi+esi*8+0x52]
  40d086:	mov    edi,0x8a658837
  40d08b:	mov    eax,ds:0xc8545721
  40d090:	lods   al,BYTE PTR ds:[esi]
  40d091:	arpl   WORD PTR [edx-0x3171e371],dx
  40d097:	push   edi
  40d098:	fistp  WORD PTR [eax]
  40d09a:	xlat   BYTE PTR ds:[ebx]
  40d09b:	int3   
  40d09c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d09d:	xchg   DWORD PTR [eax-0x4fc85be],ebp
  40d0a3:	or     al,0x4c
  40d0a5:	(bad)  
  40d0a6:	mov    dh,0x39
  40d0a8:	push   ecx
  40d0a9:	fisttp QWORD PTR [edi-0x4d]
  40d0ac:	ret    0xd1b3
  40d0af:	xchg   edx,eax
  40d0b0:	in     al,dx
  40d0b1:	sub    eax,0xc7bd508
  40d0b6:	(bad)  
  40d0b7:	sbb    cl,BYTE PTR [esi-0x563f1d1d]
  40d0bd:	add    esp,esi
  40d0bf:	pop    ss
  40d0c0:	scas   eax,DWORD PTR es:[edi]
  40d0c1:	adc    al,0x69
  40d0c3:	xchg   esi,eax
  40d0c4:	push   ds
  40d0c5:	add    ecx,DWORD PTR [ecx-0x3b29ed76]
  40d0cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0cc:	aad    0x1f
  40d0ce:	call   0xdb1659e6
  40d0d3:	mov    bl,BYTE PTR [eax+0x28]
  40d0d6:	jl     0x40d069
  40d0d8:	mul    DWORD PTR [ebx+0x54]
  40d0db:	lods   eax,DWORD PTR ds:[esi]
  40d0dc:	ins    BYTE PTR es:[edi],dx
  40d0dd:	inc    esp
  40d0de:	cmp    dl,BYTE PTR [esi]
  40d0e0:	ret    0x855f
  40d0e3:	sub    bl,cl
  40d0e5:	lea    esi,[edx+0x6513c594]
  40d0eb:	jl     0x40d11c
  40d0ed:	cmp    bh,BYTE PTR ds:0x5e99fce2
  40d0f3:	lods   al,BYTE PTR ds:[esi]
  40d0f4:	ret    
  40d0f5:	mov    dh,0xf2
  40d0f7:	jns    0x40d099
  40d0f9:	mov    edx,0x6930cde0
  40d0fe:	out    0x66,al
  40d100:	push   eax
  40d101:	jae    0x40d154
  40d103:	popa   
  40d104:	push   ecx
  40d105:	sub    eax,0xfadb7c43
  40d10a:	ins    DWORD PTR es:[edi],dx
  40d10b:	cli    
  40d10c:	mov    ebx,?
  40d10e:	(bad)  
  40d10f:	js     0x40d144
  40d111:	cld    
  40d112:	rol    BYTE PTR [ebx],1
  40d114:	xchg   esp,eax
  40d115:	xor    al,0xe6
  40d117:	rcr    DWORD PTR [ecx-0x742282e],0x79
  40d11e:	clc    
  40d11f:	fisub  DWORD PTR [esi-0xfed814d]
  40d125:	add    eax,0x259b922d
  40d12a:	cmp    eax,0xd531938
  40d12f:	xchg   ecx,eax
  40d130:	jp     0x40d187
  40d132:	shl    ebp,cl
  40d134:	gs test al,0x5e
  40d137:	sbb    BYTE PTR [esi+0x1a7f9532],bl
  40d13d:	push   ss
  40d13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d13f:	fisubr WORD PTR [eax-0x37a434c3]
  40d145:	sub    al,0xb9
  40d147:	sub    eax,0x1e99498d
  40d14c:	mov    ecx,0x5d94e182
  40d151:	jae    0x40d1c9
  40d153:	and    DWORD PTR [edi],eax
  40d155:	ja     0x40d161
  40d157:	aam    0xfc
  40d159:	shl    DWORD PTR [eax],0x3e
  40d15c:	rcr    DWORD PTR [eax+0x72],cl
  40d15f:	push   es
  40d160:	sub    ecx,DWORD PTR [esi-0x3ab2dd5d]
  40d166:	(bad)  
  40d167:	ret    
  40d168:	jmp    0xcd0b7264
  40d16d:	inc    ebp
  40d16e:	sub    al,BYTE PTR [ecx-0x74]
  40d171:	loope  0x40d152
  40d173:	and    eax,0x45e8a61d
  40d178:	push   0xffffff81
  40d17a:	fistp  DWORD PTR [esi-0x4b89f195]
  40d180:	mov    ah,0x9d
  40d182:	call   FWORD PTR [ecx]
  40d184:	inc    esp
  40d185:	jmp    0x40d150
  40d187:	loope  0x40d1db
  40d189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d18a:	mov    esi,0xf4cca9b2
  40d18f:	(bad)  
  40d190:	mov    ebp,DWORD PTR [edx+0x1]
  40d193:	sub    al,0x9b
  40d195:	xor    DWORD PTR [edx+0x1d],ebx
  40d198:	aas    
  40d199:	jnp    0x40d15d
  40d19b:	jl     0x40d188
  40d19d:	scas   al,BYTE PTR es:[edi]
  40d19e:	int    0xc3
  40d1a0:	and    bl,ah
  40d1a2:	and    al,0xf
  40d1a4:	jmp    FWORD PTR ds:0x2b5c57a4
  40d1aa:	mov    al,ds:0xa46090de
  40d1af:	lods   eax,DWORD PTR ds:[esi]
  40d1b0:	jmp    eax
  40d1b2:	arpl   WORD PTR [edx-0x73],dx
  40d1b5:	repz out 0xd4,al
  40d1b8:	sbb    al,0xee
  40d1ba:	ss icebp 
  40d1bc:	shl    BYTE PTR [edx+0x53],0xb3
  40d1c0:	sub    dh,BYTE PTR [ebp+ebp*8-0xce8290c]
  40d1c7:	das    
  40d1c8:	div    DWORD PTR ds:0xd959e381
  40d1ce:	push   ss
  40d1cf:	and    DWORD PTR [eax+0xa6bfbb6],ebp
  40d1d5:	mov    ds:0xc64ea083,al
  40d1da:	fmul   QWORD PTR [edi+0x5eef4e27]
  40d1e0:	call   0x6c37fc87
  40d1e5:	int3   
  40d1e6:	inc    ebp
  40d1e7:	inc    esi
  40d1e8:	(bad)  
  40d1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1eb:	imul   edi,ebp,0x40812dd2
  40d1f1:	mov    ah,BYTE PTR [esi+0x7292419c]
  40d1f7:	pop    eax
  40d1f8:	out    0xbd,eax
  40d1fa:	imul   DWORD PTR ds:0x1f87d33b
  40d200:	mov    edx,0x83224199
  40d205:	arpl   WORD PTR [edx+0x2db1ff9],cx
  40d20b:	cmp    DWORD PTR [esi],esp
  40d20d:	xchg   edx,eax
  40d20e:	and    bh,BYTE PTR [ebx]
  40d210:	arpl   WORD PTR [esi+0x29],cx
  40d213:	add    al,0x41
  40d215:	cmp    ebp,ebp
  40d217:	(bad)  
  40d218:	cmp    ah,BYTE PTR [edx]
  40d21a:	retf   0x1bd2
  40d21d:	mov    eax,ds:0xbf97e11e
  40d222:	icebp  
  40d223:	xor    edi,DWORD PTR [ebp-0x53011a7d]
  40d229:	je     0x40d222
  40d22b:	outs   dx,DWORD PTR ds:[esi]
  40d22c:	mov    ah,0x26
  40d22e:	shl    esp,0x7e
  40d231:	sar    DWORD PTR [ecx+0xc253e9a],0x7
  40d238:	repnz sub eax,0xde241044
  40d23e:	popa   
  40d23f:	cli    
  40d240:	fwait
  40d241:	pop    esp
  40d242:	(bad)  
  40d243:	into   
  40d244:	(bad)  
  40d245:	mov    ebp,0x826c6809
  40d24a:	xchg   esi,eax
  40d24b:	xchg   DWORD PTR [edi+0xe926380],esp
  40d251:	mov    al,ds:0xe0de96b5
  40d256:	push   ss
  40d257:	sbb    eax,0x5202d61a
  40d25c:	dec    eax
  40d25d:	pop    ss
  40d25e:	(bad)  
  40d25f:	pop    ebx
  40d260:	retf   
  40d261:	cs ds stc 
  40d264:	dec    edi
  40d265:	jmp    0x7ab9e600
  40d26a:	dec    edx
  40d26b:	out    dx,al
  40d26c:	push   ebx
  40d26d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d26e:	jecxz  0x40d242
  40d270:	jp     0x40d218
  40d272:	and    DWORD PTR [eax+ebp*1],ebp
  40d275:	inc    ebx
  40d276:	jl     0x40d216
  40d278:	adc    al,0xa7
  40d27a:	je     0x40d21d
  40d27c:	ins    BYTE PTR es:[edi],dx
  40d27d:	or     al,0x49
  40d27f:	stos   DWORD PTR es:[edi],eax
  40d280:	fmul   QWORD PTR [edx-0x7982aae1]
  40d286:	cs mov edx,0x6eca6e18
  40d28c:	imul   esp,DWORD PTR [edx],0xffffff8a
  40d28f:	mov    al,ds:0x4f31ef1f
  40d294:	outs   dx,DWORD PTR ds:[esi]
  40d295:	pop    ds
  40d296:	dec    edi
  40d297:	mov    ah,0xb9
  40d299:	add    ch,ch
  40d29b:	sbb    eax,0x16babf8b
  40d2a0:	and    bh,ah
  40d2a2:	mov    ds:0xad58f744,eax
  40d2a7:	and    eax,0x76ae9eb2
  40d2ac:	mov    al,ds:0x8ae0b343
  40d2b1:	sbb    DWORD PTR [edx],ecx
  40d2b3:	xor    eax,0x240f8b25
  40d2b8:	adc    eax,0x976aa41e
  40d2bd:	sub    al,0xf8
  40d2bf:	xor    al,0x30
  40d2c1:	mov    ds:0x65a1c103,eax
  40d2c6:	inc    ecx
  40d2c7:	pop    eax
  40d2c8:	int    0x22
  40d2ca:	imul   esp,DWORD PTR [ebx],0x6ee511cf
  40d2d0:	mov    al,0xce
  40d2d2:	add    al,BYTE PTR [ecx-0x29cbff3a]
  40d2d8:	cmp    eax,0x434808b4
  40d2dd:	rol    DWORD PTR [edx-0x70],cl
  40d2e0:	jge    0x40d2be
  40d2e2:	cs push cs
  40d2e4:	xor    BYTE PTR [ebx+eax*8-0xd],dh
  40d2e8:	dec    ebp
  40d2e9:	cwde   
  40d2ea:	or     al,0xd6
  40d2ec:	sub    eax,0xd452bd58
  40d2f1:	inc    ecx
  40d2f2:	push   esi
  40d2f3:	jecxz  0x40d2a8
  40d2f5:	fcomp  DWORD PTR [edi]
  40d2f7:	push   0x28
  40d2f9:	xchg   BYTE PTR [edx-0x2ed10a5b],ch
  40d2ff:	pop    ecx
  40d300:	ret    
  40d301:	xor    DWORD PTR [eax-0xd],eax
  40d304:	jne    0x40d2a3
  40d306:	push   edi
  40d307:	imul   edi,DWORD PTR [ecx-0x6a],0xffffffb0
  40d30b:	cmp    al,dl
  40d30d:	outs   dx,DWORD PTR ds:[esi]
  40d30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d30f:	fneni(8087 only) 
  40d311:	in     eax,dx
  40d312:	fdiv   DWORD PTR [ecx-0x3]
  40d315:	xor    BYTE PTR [edx],dl
  40d317:	inc    edx
  40d318:	jbe    0x40d34a
  40d31a:	lea    cx,[esi+0x42]
  40d31e:	cmp    DWORD PTR [ebx],edi
  40d320:	movsx  edi,WORD PTR [ebp-0x638c94b9]
  40d327:	mov    edi,0x635a7755
  40d32c:	or     al,0x44
  40d32e:	jae    0x40d38e
  40d330:	push   ebx
  40d331:	aad    0xb0
  40d333:	stos   BYTE PTR es:[edi],al
  40d334:	retf   0x8d24
  40d337:	test   eax,0xbaf2bb11
  40d33c:	cmp    bh,BYTE PTR [ebx-0x2c03e8f0]
  40d342:	loope  0x40d361
  40d344:	cld    
  40d345:	pusha  
  40d346:	dec    edi
  40d347:	je     0x40d37f
  40d349:	es push edi
  40d34b:	mov    edx,0xb0bce0e7
  40d350:	jecxz  0x40d32b
  40d352:	call   0x3923:0x93002e81
  40d359:	cmp    al,0x89
  40d35b:	jb     0x40d2f0
  40d35d:	scas   al,BYTE PTR es:[edi]
  40d35e:	sbb    bh,BYTE PTR [eax-0x5d]
  40d361:	add    bh,BYTE PTR [ebp-0x8]
  40d364:	and    al,0x25
  40d366:	jge    0x40d34d
  40d368:	xor    DWORD PTR [esp+esi*2-0x26],0x13
  40d36d:	out    dx,eax
  40d36e:	xchg   esi,eax
  40d36f:	pop    es
  40d370:	fs loopne 0x40d3d4
  40d373:	(bad)
  40d376:	sbb    ecx,DWORD PTR [ebx-0x27fdbc8c]
  40d37c:	mov    dh,0x3
  40d37e:	sar    DWORD PTR gs:[eax-0x32],1
  40d382:	dec    eax
  40d383:	push   ss
  40d384:	xor    BYTE PTR [edx+0x36],dl
  40d387:	lds    edi,FWORD PTR es:[eax-0x69]
  40d38b:	icebp  
  40d38c:	sub    dh,cl
  40d38e:	enter  0x2ac6,0x6a
  40d392:	arpl   WORD PTR [ebp+0x63],bx
  40d395:	dec    eax
  40d396:	jg     0x40d401
  40d398:	test   DWORD PTR [eax+0x55],edx
  40d39b:	ret    
  40d39c:	sbb    edx,DWORD PTR [ebx-0x44]
  40d39f:	sbb    bl,BYTE PTR [esi-0x2b]
  40d3a2:	dec    edi
  40d3a3:	inc    ebx
  40d3a4:	and    al,0x86
  40d3a6:	inc    eax
  40d3a7:	lods   al,BYTE PTR ds:[esi]
  40d3a8:	xchg   ebx,eax
  40d3a9:	push   eax
  40d3aa:	hlt    
  40d3ab:	pop    es
  40d3ac:	xchg   DWORD PTR [eax-0x46],ebx
  40d3af:	aam    0xbf
  40d3b1:	adc    al,0x54
  40d3b3:	xor    DWORD PTR ds:0xb000a957,edi
  40d3b9:	xchg   DWORD PTR [ebp-0x61],ecx
  40d3bc:	test   BYTE PTR [ecx+0x3b],ch
  40d3bf:	cmp    ch,BYTE PTR [esi+0x83c4d09]
  40d3c5:	pushf  
  40d3c6:	cdq    
  40d3c7:	mov    al,0x57
  40d3c9:	das    
  40d3ca:	in     al,0x8
  40d3cc:	lods   al,BYTE PTR ds:[esi]
  40d3cd:	mov    ds:0x145d5fd7,eax
  40d3d2:	rcl    cl,0xa4
  40d3d5:	inc    esp
  40d3d6:	cmp    bl,0xdd
  40d3d9:	pop    ss
  40d3da:	js     0x40d40c
  40d3dc:	pop    edx
  40d3dd:	mov    al,0xf9
  40d3df:	lea    ebp,[edi+0xc1d2cdb]
  40d3e5:	(bad)  
  40d3e6:	sub    DWORD PTR [edi-0x67],esp
  40d3e9:	stos   DWORD PTR es:[edi],eax
  40d3ea:	leave  
  40d3eb:	shr    BYTE PTR [edx-0x22],1
  40d3ee:	or     DWORD PTR [edi-0x41],0xd
  40d3f2:	(bad)  
  40d3f3:	fild   QWORD PTR [esi]
  40d3f5:	and    edi,DWORD PTR [esi]
  40d3f7:	push   ecx
  40d3f8:	ds jae 0x40d3dc
  40d3fb:	dec    ecx
  40d3fc:	retf   0x9e17
  40d3ff:	inc    eax
  40d400:	gs out 0xee,eax
  40d403:	lods   al,BYTE PTR ds:[esi]
  40d404:	mov    esp,0x6aaf843c
  40d409:	jb     0x40d3d6
  40d40b:	nop
  40d40c:	shl    BYTE PTR [ebx+0x53c4ec9e],cl
  40d412:	inc    esp
  40d413:	mov    ds:0x268ebb57,al
  40d418:	push   cs
  40d419:	fldcw  WORD PTR [edi]
  40d41b:	shr    bh,0x59
  40d41e:	xor    eax,0x1555fecd
  40d423:	call   0xc4d84f32
  40d428:	push   ds
  40d429:	in     al,0x79
  40d42b:	in     al,0x7b
  40d42d:	daa    
  40d42e:	dec    DWORD PTR [ecx+0x43]
  40d431:	adc    eax,edx
  40d433:	push   esp
  40d434:	rol    al,0x0
  40d437:	sbb    ch,dh
  40d439:	mov    ebp,0x80d7ed0e
  40d43e:	or     esp,DWORD PTR [esi-0x25]
  40d441:	add    BYTE PTR [eax+0x70],cl
  40d444:	add    ch,BYTE PTR [edi]
  40d446:	mov    ecx,0xe0fb19eb
  40d44b:	mov    edi,ss
  40d44d:	clc    
  40d44e:	mov    ch,BYTE PTR ds:0xb6e59c28
  40d454:	retf   
  40d455:	lahf   
  40d456:	outs   dx,BYTE PTR ds:[esi]
  40d457:	addr16 jle 0x40d3ee
  40d45a:	pusha  
  40d45b:	push   ebp
  40d45c:	pop    edx
  40d45d:	stc    
  40d45e:	jno    0x40d4a1
  40d460:	jmp    0xc1d:0xf0130720
  40d467:	fisub  DWORD PTR ds:[esp+edi*1-0x6da324a0]
  40d46f:	mov    ch,0x8b
  40d471:	scas   eax,DWORD PTR es:[edi]
  40d472:	mov    ch,BYTE PTR [edx+0x6b3d93c1]
  40d478:	sub    esp,esi
  40d47a:	hlt    
  40d47b:	pop    ss
  40d47c:	add    al,0x34
  40d47e:	adc    al,0x60
  40d480:	mov    DWORD PTR [edx-0x74412c9b],ebp
  40d486:	push   ebp
  40d487:	add    DWORD PTR gs:[esi],edx
  40d48a:	dec    esp
  40d48b:	out    dx,eax
  40d48c:	jmp    0x7047:0x40400d03
  40d493:	fs jg  0x40d446
  40d496:	sbb    eax,0x664f6df6
  40d49b:	lock retf 0x5075
  40d49f:	imul   edi,DWORD PTR [edx+0x2fcd881b],0x8b1980bd
  40d4a9:	outs   dx,DWORD PTR ds:[esi]
  40d4aa:	fidivr DWORD PTR [edx]
  40d4ac:	mov    edi,0xfceca6cb
  40d4b1:	mov    DWORD PTR [esi],edi
  40d4b3:	sub    al,0x8f
  40d4b5:	dec    edi
  40d4b6:	das    
  40d4b7:	jbe    0x40d48d
  40d4b9:	adc    edx,DWORD PTR [esi]
  40d4bb:	and    al,0x81
  40d4bd:	dec    ebp
  40d4be:	jo     0x40d4e1
  40d4c0:	mov    edx,0xc61fb00d
  40d4c5:	lods   al,BYTE PTR ds:[esi]
  40d4c6:	scas   al,BYTE PTR es:[edi]
  40d4c7:	dec    eax
  40d4c8:	dec    ebp
  40d4c9:	or     eax,0xa8510666
  40d4ce:	jno    0x40d4ed
  40d4d0:	mov    WORD PTR [ebp+eax*8-0x208a5a29],es
  40d4d7:	ret    0xed4
  40d4da:	inc    ecx
  40d4db:	pop    esi
  40d4dc:	pusha  
  40d4dd:	inc    ecx
  40d4de:	(bad)  
  40d4df:	adc    eax,0x9972470d
  40d4e4:	xchg   al,bh
  40d4e6:	neg    edi
  40d4e8:	bound  edi,QWORD PTR [ebp-0x6638659a]
  40d4ee:	inc    ecx
  40d4ef:	xchg   ebp,eax
  40d4f0:	enter  0x646e,0xa6
  40d4f4:	mov    ebx,fs
  40d4f6:	out    dx,al
  40d4f7:	sub    BYTE PTR ds:0x92d872e5,al
  40d4fd:	ja     0x40d550
  40d4ff:	xchg   dh,ch
  40d501:	jmp    0xa798a739
  40d506:	pop    ds
  40d507:	jae    0x40d4af
  40d509:	ins    DWORD PTR es:[edi],dx
  40d50a:	jecxz  0x40d4b9
  40d50c:	imul   esi,DWORD PTR [esi+0x14],0xf275cf36
  40d513:	mov    edx,0xbdabf0ed
  40d518:	arpl   bp,bx
  40d51a:	je     0x40d55c
  40d51c:	adc    ecx,DWORD PTR [edx+0x4135b742]
  40d522:	pcmpeqb mm7,QWORD PTR [ecx]
  40d525:	int    0xc8
  40d527:	mov    BYTE PTR ds:0x91c75334,bl
  40d52d:	push   0xd55e8819
  40d532:	mov    ah,0x96
  40d534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d535:	jnp    0x40d5b0
  40d537:	scas   eax,DWORD PTR es:[edi]
  40d538:	pop    ds
  40d539:	les    esp,FWORD PTR [ecx+esi*8]
  40d53c:	xor    bh,ah
  40d53e:	jl     0x40d59c
  40d540:	lods   al,BYTE PTR ds:[esi]
  40d541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d542:	mov    ebx,0xada18396
  40d547:	pop    es
  40d548:	loop   0x40d51f
  40d54a:	adc    esi,DWORD PTR [edi+0x34661542]
  40d550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d551:	les    ecx,FWORD PTR [edi-0x16]
  40d554:	and    eax,0xcb990027
  40d559:	jg     0x40d50e
  40d55b:	xchg   ecx,eax
  40d55c:	mov    ebx,0x9e4e653
  40d561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d562:	sbb    al,0x6d
  40d564:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40d566:	sub    dl,BYTE PTR [ebx]
  40d568:	mov    cl,BYTE PTR [ebp-0x32]
  40d56b:	jecxz  0x40d55e
  40d56d:	mov    al,ds:0x7a1ec4cc
  40d572:	repz jg 0x40d5d6
  40d575:	xor    al,0x1a
  40d577:	pop    esi
  40d578:	adc    edx,DWORD PTR [edx+edx*4-0x7b7ab856]
  40d57f:	mov    ecx,DWORD PTR [ebx-0x4f5b52a6]
  40d585:	mov    al,ds:0x6580d00e
  40d58a:	push   ds
  40d58b:	or     ah,BYTE PTR [eax]
  40d58d:	pop    esp
  40d58e:	mov    BYTE PTR [esi-0x231b77ce],bl
  40d594:	ds jnp 0x40d5b7
  40d597:	add    BYTE PTR [edi+ebp*8-0xc40a5f5],bh
  40d59e:	mov    ebx,0xf24a5850
  40d5a3:	xor    ebp,DWORD PTR [esi-0x3b]
  40d5a6:	mul    esp
  40d5a8:	pop    esi
  40d5a9:	test   eax,0xf98ec6c0
  40d5ae:	ds leave 
  40d5b0:	fld    QWORD PTR [esi+eax*4]
  40d5b3:	hlt    
  40d5b4:	mov    esp,0x6442f121
  40d5b9:	rol    dh,1
  40d5bb:	sbb    eax,0xba61fe0f
  40d5c0:	xlat   BYTE PTR ds:[ebx]
  40d5c1:	pop    ecx
  40d5c2:	inc    eax
  40d5c3:	rcr    DWORD PTR [edx],0xfa
  40d5c6:	sbb    ecx,DWORD PTR [ebp-0x5b]
  40d5c9:	cmp    esi,DWORD PTR [ebx-0x49c654cd]
  40d5cf:	cmp    esp,edi
  40d5d1:	pop    edx
  40d5d2:	xor    al,0xdc
  40d5d4:	sbb    BYTE PTR [esp+esi*4+0xcbd7310],bh
  40d5db:	test   BYTE PTR [edi-0x2e],0x6d
  40d5df:	xor    DWORD PTR [edi-0x5ad3fb9e],esp
  40d5e5:	xlat   BYTE PTR ds:[ebx]
  40d5e6:	out    0x3,eax
  40d5e8:	stos   BYTE PTR es:[edi],al
  40d5e9:	dec    edi
  40d5ea:	jecxz  0x40d576
  40d5ec:	cmp    eax,0x551810ea
  40d5f1:	icebp  
  40d5f2:	scas   eax,DWORD PTR es:[edi]
  40d5f3:	neg    DWORD PTR [ebx+0x6f]
  40d5f6:	pop    ss
  40d5f7:	cmp    BYTE PTR [edi-0x4eb94b33],al
  40d5fd:	or     cl,BYTE PTR [esi]
  40d5ff:	and    bh,ah
  40d601:	ror    BYTE PTR [esi-0x2fcf79b0],0x3c
  40d608:	add    eax,0x697be3e6
  40d60d:	cmp    al,0x29
  40d60f:	fmulp  st(6),st
  40d611:	mov    edx,0xbb93d144
  40d616:	mov    edx,0x914c0d5e
  40d61b:	cmp    eax,DWORD PTR [edi+0x7b]
  40d61e:	(bad)  
  40d61f:	xor    BYTE PTR [ebx+0x7c32eb4e],bl
  40d625:	push   ss
  40d626:	nop
  40d627:	jge    0x40d610
  40d629:	out    0xf5,eax
  40d62b:	aas    
  40d62c:	mov    edi,0x70e16b20
  40d631:	mov    dl,0x2e
  40d633:	sub    dl,BYTE PTR [edx+0x47]
  40d636:	sar    BYTE PTR [ebx],0x6
  40d639:	enter  0xfe35,0xea
  40d63d:	data16 jno 0x40d65c
  40d640:	ficom  WORD PTR [ecx+esi*8+0xe]
  40d644:	xchg   esp,eax
  40d645:	mov    edi,0x7789afb2
  40d64a:	je     0x40d60b
  40d64c:	repnz inc esi
  40d64e:	xchg   esp,eax
  40d64f:	int3   
  40d650:	call   0x9283:0xc541f6c
  40d657:	sbb    DWORD PTR [edi],ebx
  40d659:	cmp    edx,edx
  40d65b:	jle    0x40d64f
  40d65d:	stos   DWORD PTR es:[edi],eax
  40d65e:	mov    eax,ds:0xb43cac95
  40d663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d664:	repnz sbb ecx,DWORD PTR [ecx+0x1c]
  40d668:	and    eax,0x2b6f356b
  40d66d:	dec    ebp
  40d66e:	test   DWORD PTR [ecx],esp
  40d670:	xor    eax,0x350f80aa
  40d675:	out    dx,eax
  40d676:	pop    ebp
  40d677:	and    DWORD PTR [ecx-0x70184a5c],ebp
  40d67d:	xchg   esp,eax
  40d67e:	push   es
  40d67f:	xchg   ebx,eax
  40d680:	icebp  
  40d681:	pop    edi
  40d682:	std    
  40d683:	mov    es,WORD PTR [edx]
  40d685:	int    0xd7
  40d687:	shl    DWORD PTR [ebp+0x62e93be8],1
  40d68d:	aaa    
  40d68e:	stos   BYTE PTR es:[edi],al
  40d68f:	out    0x78,eax
  40d691:	hlt    
  40d692:	cli    
  40d693:	sbb    DWORD PTR [esi],esp
  40d695:	inc    edi
  40d696:	xor    dh,BYTE PTR [esi-0x75326ab2]
  40d69c:	jns    0x40d710
  40d69e:	out    0xf8,al
  40d6a0:	cwde   
  40d6a1:	pop    ds
  40d6a2:	mov    bh,BYTE PTR [ebx-0x1a]
  40d6a5:	sub    ebx,DWORD PTR [edx]
  40d6a7:	jmp    0x40d6d7
  40d6a9:	cmp    ebx,DWORD PTR [ebx]
  40d6ab:	stos   DWORD PTR es:[edi],eax
  40d6ac:	js     0x40d6b9
  40d6ae:	jns    0x40d6ba
  40d6b0:	aad    0x3b
  40d6b2:	sub    al,0x26
  40d6b4:	xchg   BYTE PTR [edi+edx*8+0x208f75aa],ch
  40d6bb:	cdq    
  40d6bc:	jg     0x40d6d2
  40d6be:	hlt    
  40d6bf:	(bad)  
  40d6c0:	xchg   ecx,eax
  40d6c1:	push   ebx
  40d6c2:	pop    esi
  40d6c3:	xor    ah,bl
  40d6c5:	mov    eax,ds:0x3c414e87
  40d6ca:	pop    edx
  40d6cb:	ret    
  40d6cc:	add    DWORD PTR [ebp+0x380c6586],esi
  40d6d2:	sahf   
  40d6d3:	fild   DWORD PTR ds:0xa2fcc892
  40d6d9:	call   FWORD PTR [ecx+eax*2]
  40d6dc:	push   0xffffffae
  40d6de:	xor    eax,0xd68867b4
  40d6e3:	xchg   edx,eax
  40d6e4:	fst    DWORD PTR [ebx]
  40d6e6:	mov    cl,0xa
  40d6e8:	into   
  40d6e9:	or     al,0x47
  40d6eb:	mov    dh,0x6f
  40d6ed:	icebp  
  40d6ee:	or     ch,0x75
  40d6f1:	dec    ebx
  40d6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f3:	and    eax,0x94a983ff
  40d6f8:	into   
  40d6f9:	(bad)  
  40d6fa:	jmp    0x40d74c
  40d6fc:	sbb    eax,DWORD PTR [esi]
  40d6fe:	sub    eax,0x24c918a5
  40d703:	mov    cl,0xb5
  40d705:	cmp    bl,BYTE PTR [ebp+0xb20be35]
  40d70b:	push   esp
  40d70c:	loop   0x40d68f
  40d70e:	fcom   st(4)
  40d710:	sti    
  40d711:	pop    edi
  40d712:	dec    ebx
  40d713:	ds adc eax,0x4feceffa
  40d719:	and    al,0x28
  40d71b:	sub    DWORD PTR [esi+0x7ae60261],edx
  40d721:	int    0xed
  40d723:	jb     0x40d78a
  40d725:	mov    dh,0x9b
  40d727:	imul   ebp,DWORD PTR [esi],0x54f5d33a
  40d72d:	test   BYTE PTR [esi],ah
  40d72f:	aam    0x27
  40d731:	test   BYTE PTR [ebx+esi*2-0x3c4aaf4b],ah
  40d738:	retf   0x956b
  40d73b:	ds cmc 
  40d73d:	xchg   esi,eax
  40d73e:	add    BYTE PTR [ebx+0x66],dl
  40d741:	push   cs
  40d742:	pop    es
  40d743:	in     eax,dx
  40d744:	xchg   ebp,eax
  40d745:	jae    0x40d6e6
  40d747:	adc    BYTE PTR [edx-0x30],bl
  40d74a:	jmp    0x98f7:0x5a1f0a1d
  40d751:	mov    ebx,0x4dccb63
  40d756:	iret   
  40d757:	push   esi
  40d758:	into   
  40d759:	das    
  40d75a:	jns    0x40d759
  40d75c:	xor    ecx,0xfffffff1
  40d75f:	and    dl,dl
  40d761:	es add edi,esi
  40d764:	dec    ecx
  40d765:	in     al,0x53
  40d767:	sub    ebx,0xffffffcc
  40d76a:	inc    ebx
  40d76b:	aad    0xa6
  40d76d:	xchg   BYTE PTR [esi],dl
  40d76f:	jle    0x40d770
  40d771:	sti    
  40d772:	js     0x40d702
  40d774:	jb     0x40d739
  40d776:	in     al,dx
  40d777:	enter  0xa1f1,0xc8
  40d77b:	cmp    eax,0x254007fb
  40d780:	lock div DWORD PTR [ecx-0x7f]
  40d784:	les    edx,FWORD PTR [ecx+0x391c9940]
  40d78a:	push   0x8d7bdae0
  40d78f:	test   BYTE PTR [ebx-0xfb6dff4],cl
  40d795:	adc    DWORD PTR [eax],ebx
  40d797:	int3   
  40d798:	mov    BYTE PTR [esi-0x2a],ch
  40d79b:	xor    BYTE PTR [ebx],dh
  40d79d:	aad    0xf3
  40d79f:	and    al,0xbb
  40d7a1:	and    al,0xb4
  40d7a3:	mov    ebp,DWORD PTR [eax-0x50]
  40d7a6:	addr16 test al,0x3a
  40d7a9:	mov    cl,0xb
  40d7ab:	dec    ecx
  40d7ac:	sar    DWORD PTR [ebp+0x2b],cl
  40d7af:	mov    DWORD PTR cs:[edi],ebp
  40d7b2:	push   ecx
  40d7b3:	(bad)  
  40d7b4:	jl     0x40d7a9
  40d7b6:	loop   0x40d75f
  40d7b8:	clc    
  40d7b9:	mov    ebp,0x6d8c31e3
  40d7be:	jecxz  0x40d7af
  40d7c0:	imul   edi,ecx,0x2920ae0e
  40d7c6:	fst    QWORD PTR [edi+0xa59aa1a]
  40d7cc:	or     bh,al
  40d7ce:	das    
  40d7cf:	mov    eax,ds:0x726852cc
  40d7d4:	sub    eax,0xe774905b
  40d7d9:	pop    ebp
  40d7da:	in     al,dx
  40d7db:	gs mov dh,0xe3
  40d7de:	enter  0x6f65,0x80
  40d7e2:	push   edx
  40d7e3:	ds mov esi,0x947f1b8b
  40d7e9:	xchg   ch,bh
  40d7eb:	xchg   DWORD PTR [eax+0x46],edx
  40d7ee:	inc    eax
  40d7ef:	stc    
  40d7f0:	mov    ebx,0x6d78ef54
  40d7f5:	jb     0x40d7f2
  40d7f7:	iret   
  40d7f8:	aam    0x27
  40d7fa:	jo     0x40d860
  40d7fc:	leave  
  40d7fd:	pusha  
  40d7fe:	adc    ebp,edx
  40d800:	jnp    0x40d802
  40d802:	add    dh,BYTE PTR [esp+eax*8]
  40d805:	inc    esp
  40d806:	mov    DWORD PTR [edx+ebx*2],ebp
  40d809:	push   0xe7b1c9c
  40d80e:	sub    eax,0xbaca302c
  40d813:	mov    ebx,DWORD PTR [ebx]
  40d815:	int    0xcd
  40d817:	pop    ebx
  40d818:	jl     0x40d7e8
  40d81a:	dec    esp
  40d81b:	add    BYTE PTR [ebp+0x7b6c130a],ch
  40d821:	add    dl,al
  40d823:	lods   eax,DWORD PTR ds:[esi]
  40d824:	dec    edi
  40d826:	cmp    edx,DWORD PTR [esi-0x20]
  40d829:	pop    edi
  40d82a:	fsubr  QWORD PTR [edi]
  40d82c:	fcmove st,st(3)
  40d82e:	pop    DWORD PTR [eax+ecx*4]
  40d831:	mov    ds:0x3fe99dd2,al
  40d836:	and    eax,0xd7dcab9b
  40d83b:	je     0x40d7eb
  40d83d:	clc    
  40d83e:	inc    ebx
  40d83f:	imul   edi,DWORD PTR [edi+0x66],0xfffffff5
  40d843:	add    BYTE PTR [ebp-0x64],cl
  40d846:	xchg   edx,eax
  40d847:	jmp    0x5e6:0x148ca66a
  40d84e:	in     al,0xcb
  40d850:	mov    bh,al
  40d852:	imul   ebp,DWORD PTR [esi+0x2ad37dd3],0xec37bf0
  40d85c:	xor    dh,BYTE PTR [edx]
  40d85e:	outs   dx,DWORD PTR ds:[esi]
  40d85f:	das    
  40d860:	not    BYTE PTR [eax+0x2262df67]
  40d866:	dec    edi
  40d867:	out    dx,eax
  40d868:	xor    BYTE PTR [eax],bl
  40d86a:	popa   
  40d86b:	sub    eax,eax
  40d86d:	loope  0x40d8af
  40d86f:	test   BYTE PTR [edx-0x53],bl
  40d872:	lds    ebp,FWORD PTR [esi-0x7a]
  40d875:	jmp    0xba10:0xc528c6eb
  40d87c:	int3   
  40d87d:	xchg   ebp,edi
  40d87f:	dec    esi
  40d880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d881:	dec    ecx
  40d882:	sbb    BYTE PTR [esp+ebp*4+0x4db930c],dl
  40d889:	dec    ebp
  40d88a:	popa   
  40d88b:	xchg   edi,eax
  40d88c:	adc    edx,DWORD PTR [esp+edx*8-0x21]
  40d890:	(bad)
  40d893:	xlat   BYTE PTR ds:[ebx]
  40d894:	aam    0xc5
  40d896:	imul   edx,DWORD PTR [esi],0xc4566d05
  40d89c:	ss pushf 
  40d89e:	(bad)  
  40d89f:	rcr    DWORD PTR ds:0x882a1b1e,0xfb
  40d8a6:	ret    0xadf9
  40d8a9:	xchg   esp,eax
  40d8aa:	ret    0x9d84
  40d8ad:	ja     0x40d84a
  40d8af:	pop    esi
  40d8b0:	sub    al,bh
  40d8b2:	clc    
  40d8b3:	ins    DWORD PTR es:[edi],dx
  40d8b4:	mov    DWORD PTR [edi-0x4f73680],esi
  40d8ba:	jmp    0x40d871
  40d8bc:	adc    eax,DWORD PTR [edi+0x63]
  40d8bf:	scas   al,BYTE PTR es:[edi]
  40d8c0:	(bad)  
  40d8c1:	dec    esi
  40d8c2:	retf   
  40d8c3:	inc    eax
  40d8c4:	mov    ss,WORD PTR [edx+ebx*2]
  40d8c7:	icebp  
  40d8c8:	lds    eax,FWORD PTR [ecx+0x743e8f0c]
  40d8ce:	ds push eax
  40d8d0:	daa    
  40d8d1:	stc    
  40d8d2:	xor    DWORD PTR [ecx],0x0
  40d8d5:	sub    BYTE PTR [ecx],cl
  40d8d7:	jp     0x40d8b5
  40d8d9:	and    al,0xd8
  40d8db:	fnstsw WORD PTR [ebx-0xa]
  40d8de:	and    eax,0x32744e02
  40d8e3:	repz es (bad) 
  40d8e6:	adc    eax,0xb03ff50c
  40d8eb:	inc    ecx
  40d8ec:	add    eax,0xeece1512
  40d8f1:	out    dx,al
  40d8f2:	dec    eax
  40d8f3:	xor    ebp,DWORD PTR [ebp-0x31]
  40d8f6:	hlt    
  40d8f7:	mov    ecx,0xd3da6ee3
  40d8fc:	sar    DWORD PTR ds:0xdfd1fc44,0xfe
  40d903:	and    ebp,ecx
  40d905:	into   
  40d906:	pop    esp
  40d907:	add    ecx,DWORD PTR [ecx-0x33978b48]
  40d90d:	mov    dl,0x2e
  40d90f:	repz mov bl,BYTE PTR [edi]
  40d912:	in     al,dx
  40d913:	adc    eax,DWORD PTR [edx-0x746a6582]
  40d919:	and    cl,BYTE PTR [ebp-0x7e]
  40d91c:	cmc    
  40d91d:	or     BYTE PTR [ecx+0x21180f3a],ah
  40d923:	mov    ah,0x1f
  40d925:	mov    esi,0xadb4077c
  40d92a:	push   ebp
  40d92b:	stos   BYTE PTR es:[edi],al
  40d92c:	lock sub BYTE PTR ss:[edx+edx*1],ah
  40d931:	cmp    al,0x88
  40d933:	rep ins DWORD PTR es:[edi],dx
  40d935:	scas   eax,DWORD PTR es:[edi]
  40d936:	push   ds
  40d937:	stc    
  40d938:	dec    edx
  40d939:	add    cl,dl
  40d93b:	sub    BYTE PTR [eax],bh
  40d93d:	add    al,0x45
  40d93f:	js     0x40d8e2
  40d941:	mov    ds:0xcab7fe33,eax
  40d946:	push   ebp
  40d947:	jge    0x40d98a
  40d949:	cld    
  40d94a:	pop    esp
  40d94b:	xchg   esp,eax
  40d94c:	jg     0x40d90f
  40d94e:	jmp    0x9dc3b11b
  40d953:	pop    eax
  40d954:	mov    esi,0x682f4bdb
  40d959:	std    
  40d95a:	gs pop es
  40d95c:	push   edi
  40d95d:	outs   dx,BYTE PTR ds:[esi]
  40d95e:	push   ecx
  40d95f:	mov    esi,ebx
  40d961:	pop    es
  40d962:	xchg   ecx,eax
  40d963:	add    ecx,DWORD PTR [ebx-0x72ec468a]
  40d969:	rcr    DWORD PTR [ebx+0x75819708],cl
  40d96f:	adc    DWORD PTR [esi],eax
  40d971:	xchg   DWORD PTR [ebx],ebx
  40d973:	sti    
  40d974:	push   cs
  40d975:	gs or  eax,0xce331547
  40d97b:	xor    eax,0xffffffd1
  40d97e:	mov    al,ds:0x7f76675c
  40d983:	mov    ah,0xd1
  40d985:	fidivr DWORD PTR [ebx+ecx*4]
  40d988:	imul   esi,DWORD PTR [esp+edi*2],0x3
  40d98c:	scas   al,BYTE PTR es:[edi]
  40d98d:	xor    ch,dh
  40d98f:	inc    eax
  40d990:	les    esp,FWORD PTR [ecx+0x1c464f68]
  40d996:	sub    cl,BYTE PTR [edi+ebp*8-0xf2f2d78]
  40d99d:	mov    ebx,0xb75b90e9
  40d9a2:	hlt    
  40d9a3:	ret    0x7d49
  40d9a6:	xchg   ecx,eax
  40d9a8:	push   0x675a2a01
  40d9ad:	mov    dl,0xfe
  40d9af:	test   BYTE PTR [esi+ebp*1-0x3c],dh
  40d9b3:	in     al,0x2a
  40d9b5:	and    DWORD PTR [ebp+0x70],ebx
  40d9b8:	fistp  WORD PTR [ebx+0x2302abd1]
  40d9be:	sub    eax,0x7199e22a
  40d9c3:	popf   
  40d9c4:	popa   
  40d9c5:	or     cl,bh
  40d9c7:	sub    BYTE PTR [ebp-0x61665e01],bh
  40d9cd:	in     eax,0x2c
  40d9cf:	sahf   
  40d9d0:	sbb    eax,DWORD PTR [ebp-0x52]
  40d9d3:	pop    edx
  40d9d4:	mov    ds:0x24d6d509,al
  40d9d9:	lods   al,BYTE PTR ds:[esi]
  40d9da:	pushf  
  40d9db:	sbb    DWORD PTR [edi-0x5c],edi
  40d9de:	jle    0x40d9b5
  40d9e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9e1:	adc    DWORD PTR es:[edx],0xffffff99
  40d9e5:	dec    esi
  40d9e6:	leave  
  40d9e7:	les    ebp,FWORD PTR es:0xda48e19f
  40d9ee:	je     0x40da2d
  40d9f0:	imul   esp,DWORD PTR [edx-0x264e2ca],0x18
  40d9f7:	ins    BYTE PTR es:[edi],dx
  40d9f8:	(bad)  
  40d9f9:	cmp    esi,DWORD PTR [esi+ebx*8+0x2b]
  40d9fd:	ret    
  40d9fe:	dec    edi
  40d9ff:	xor    DWORD PTR [edi+0x28],0x2e253675
  40da06:	fisubr WORD PTR [edx]
  40da08:	jno    0x40da40
  40da0a:	icebp  
  40da0b:	lahf   
  40da0c:	cld    
  40da0d:	call   0x5092bc90
  40da12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da13:	pop    si
  40da15:	in     al,dx
  40da16:	or     BYTE PTR [edx+0x59dc9ce4],dl
  40da1c:	popf   
  40da1d:	jle    0x40d9d3
  40da1f:	mov    al,0xb0
  40da21:	xchg   edi,eax
  40da22:	add    al,0xdc
  40da24:	mov    esi,0x39d6d68c
  40da29:	push   ecx
  40da2a:	push   edx
  40da2b:	sti    
  40da2c:	xor    al,0x2b
  40da2e:	dec    ecx
  40da2f:	aam    0xa7
  40da31:	and    BYTE PTR [edi+0x71fcc7f1],dh
  40da37:	jle    0x40da12
  40da39:	mov    edi,0x77c5929d
  40da3e:	jle    0x40da18
  40da40:	xchg   esi,eax
  40da41:	inc    esi
  40da42:	sahf   
  40da43:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40da45:	aas    
  40da46:	pop    ds
  40da47:	mov    dl,0xf1
  40da49:	cmp    DWORD PTR ds:0x43662dbe,ebx
  40da4f:	xor    al,0x95
  40da51:	das    
  40da52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da53:	adc    dl,BYTE PTR [ecx+0x25dc65]
  40da59:	in     al,dx
  40da5a:	aam    0x93
  40da5c:	mov    esp,DWORD PTR [ecx]
  40da5e:	shr    DWORD PTR [ebp-0x38],cl
  40da61:	ss push ds
  40da63:	push   0xe977baed
  40da68:	dec    ecx
  40da69:	push   esi
  40da6a:	mov    bl,0x33
  40da6c:	inc    esp
  40da6d:	dec    edi
  40da6e:	dec    ecx
  40da6f:	sbb    al,0x8e
  40da71:	pushf  
  40da72:	into   
  40da73:	push   edi
  40da74:	sub    DWORD PTR [esi+ecx*4+0x4f2c31f2],edx
  40da7b:	sbb    BYTE PTR [edi],0xc
  40da7e:	xchg   ebx,eax
  40da7f:	add    al,0x7b
  40da81:	mov    bh,0x6
  40da83:	add    BYTE PTR [eax+0x4d],al
  40da86:	push   eax
  40da87:	jne    0x40da7e
  40da89:	(bad)  
  40da8a:	popa   
  40da8b:	jge    0x40da39
  40da8d:	jno    0x40da99
  40da8f:	cmc    
  40da90:	pop    ss
  40da91:	out    dx,al
  40da92:	test   al,0x1d
  40da94:	jns    0x40da6e
  40da96:	jns    0x40da6b
  40da98:	(bad)  
  40da99:	cmp    BYTE PTR [ecx+0xe],ah
  40da9c:	std    
  40da9d:	test   al,0xe
  40da9f:	mov    bl,BYTE PTR [eax-0x235e7e4]
  40daa5:	sbb    ecx,DWORD PTR [edx-0x6]
  40daa8:	hlt    
  40daa9:	jne    0x40daa6
  40daab:	mov    eax,ds:0xc3e339e2
  40dab0:	hlt    
  40dab1:	hlt    
  40dab2:	mov    fs,WORD PTR [edx+0x6a]
  40dab5:	in     eax,0x2d
  40dab7:	mov    cl,0x86
  40dab9:	fidivr WORD PTR [ecx+esi*2]
  40dabc:	inc    edi
  40dabd:	sbb    al,0x69
  40dabf:	ja     0x40dad1
  40dac1:	js     0x40db31
  40dac3:	aad    0xbb
  40dac5:	jl     0x40daa4
  40dac7:	rol    BYTE PTR [edi-0x2],1
  40daca:	xor    al,0xc8
  40dacc:	ficomp DWORD PTR [edi]
  40dace:	fcom   QWORD PTR [esi]
  40dad0:	mov    dh,0xc7
  40dad2:	and    al,0x36
  40dad4:	sbb    edx,esi
  40dad6:	arpl   WORD PTR [ebx],ax
  40dad8:	fimul  DWORD PTR [ecx+0x75]
  40dadb:	xchg   ebp,eax
  40dadc:	fisttp QWORD PTR [ecx]
  40dade:	sub    esi,DWORD PTR [ebp+0x6e8f0e3d]
  40dae4:	mov    ah,0xb
  40dae6:	test   al,0x99
  40dae8:	mov    ch,BYTE PTR [edi+0xe]
  40daeb:	mov    ebp,0x172dd3c1
  40daf0:	mov    ecx,0x32a72137
  40daf5:	xor    eax,0xaa4b65fa
  40dafa:	pop    ebp
  40dafb:	xor    edi,DWORD PTR [eax]
  40dafd:	imul   esp,DWORD PTR [ebx-0x3a],0x4e4450e1
  40db04:	nop
  40db05:	mov    bl,0x9d
  40db07:	push   ss
  40db08:	xor    al,0xb8
  40db0a:	ret    
  40db0b:	xor    BYTE PTR [ebp+0x2a],0x51
  40db0f:	jg     0x40db63
  40db11:	adc    al,0xc6
  40db13:	aaa    
  40db14:	lahf   
  40db15:	stos   BYTE PTR es:[edi],al
  40db16:	fcomp  DWORD PTR [ebx-0x46bce32f]
  40db1c:	jmp    0x91315741
  40db21:	xchg   esi,eax
  40db22:	(bad)  
  40db23:	xor    al,0x3f
  40db25:	pushf  
  40db26:	push   ss
  40db27:	dec    ebp
  40db28:	stos   BYTE PTR es:[edi],al
  40db29:	mov    bh,0x8e
  40db2b:	add    DWORD PTR [esi],edi
  40db2d:	adc    edx,edx
  40db2f:	repz int 0xcd
  40db32:	inc    esi
  40db33:	sbb    DWORD PTR [edx+0x181953d3],esp
  40db39:	cmp    BYTE PTR [ebx+0x1fca27a0],cl
  40db3f:	dec    edi
  40db40:	mov    ebx,DWORD PTR [esi]
  40db42:	add    eax,0x85cdb04c
  40db47:	xchg   BYTE PTR [ebx+0xd],al
  40db4a:	mov    ds:0x7c1dcdef,al
  40db4f:	stc    
  40db50:	shl    bh,1
  40db52:	fs jo  0x40db5e
  40db55:	mov    ecx,0x79016795
  40db5a:	cmp    al,0x46
  40db5c:	sub    cl,BYTE PTR [ecx]
  40db5e:	cdq    
  40db5f:	lock sub BYTE PTR [ebp+0x30],bh
  40db63:	inc    eax
  40db64:	cmc    
  40db65:	rcr    BYTE PTR [ebx+0x26],0xa2
  40db69:	lahf   
  40db6a:	cmp    bl,BYTE PTR [eax]
  40db6c:	cmp    al,0x2c
  40db6e:	ds shr ah,0x49
  40db72:	popa   
  40db73:	int    0xbf
  40db75:	popa   
  40db76:	(bad)  
  40db77:	dec    eax
  40db78:	or     al,0x51
  40db7a:	sub    ch,cl
  40db7c:	idiv   DWORD PTR [esi]
  40db7e:	fcom   QWORD PTR [ecx-0x772a010a]
  40db84:	or     eax,0x29e7a427
  40db89:	sbb    DWORD PTR [ebp-0x39160a6b],ebp
  40db8f:	jl     0x40db1c
  40db91:	pusha  
  40db92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db93:	mov    al,ds:0x6695500d
  40db98:	push   esi
  40db99:	pop    ebx
  40db9a:	pop    ebp
  40db9b:	std    
  40db9c:	push   esp
  40db9d:	sahf   
  40db9e:	cdq    
  40db9f:	cmp    eax,DWORD PTR [edi+0x7e292316]
  40dba5:	mov    ds:0x951f6e3e,al
  40dbaa:	cmp    DWORD PTR [edx+0x7f729e75],esi
  40dbb0:	jne    0x40dc26
  40dbb2:	outs   dx,DWORD PTR ds:[esi]
  40dbb3:	(bad)  
  40dbb4:	(bad)
  40dbb8:	mov    ch,0x8c
  40dbba:	ret    
  40dbbb:	dec    edi
  40dbbc:	pushf  
  40dbbd:	or     eax,0xe31976ac
  40dbc2:	push   ds
  40dbc3:	imul   ebx,ebp,0xffffffe6
  40dbc6:	test   BYTE PTR [ebx],ch
  40dbc8:	xor    al,0xc9
  40dbca:	das    
  40dbcb:	mov    edi,0x9ce84fff
  40dbd0:	xor    al,0x25
  40dbd2:	fwait
  40dbd3:	cs in  al,dx
  40dbd5:	jae    0x40dbe9
  40dbd7:	and    cl,al
  40dbd9:	mov    ds:0x74bd534f,eax
  40dbde:	dec    esi
  40dbdf:	jbe    0x40dbda
  40dbe1:	xor    edx,DWORD PTR [esi-0x737afc0f]
  40dbe7:	call   0x43df45ef
  40dbec:	and    BYTE PTR [ebx],al
  40dbee:	js     0x40db94
  40dbf0:	pushf  
  40dbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf2:	mov    ch,0xd6
  40dbf4:	fs jns 0x40dc28
  40dbf7:	cmp    al,0x6f
  40dbf9:	push   eax
  40dbfa:	leave  
  40dbfb:	push   ebp
  40dbfd:	test   DWORD PTR [edx+ebp*1+0x36628d19],edx
  40dc04:	jecxz  0x40dbc6
  40dc06:	in     al,dx
  40dc07:	inc    ebx
  40dc08:	xchg   edi,eax
  40dc09:	mov    DWORD PTR [ecx-0x5b],esi
  40dc0c:	dec    ebx
  40dc0d:	lea    ebx,[ecx-0x1e3aa573]
  40dc13:	jl     0x40dc05
  40dc15:	call   0xe62cb085
  40dc1a:	inc    ebp
  40dc1b:	jnp    0x40dbfc
  40dc1d:	dec    edi
  40dc1e:	cmp    bl,BYTE PTR [edi+0x5949504a]
  40dc24:	int    0xeb
  40dc26:	xor    BYTE PTR [ebx-0x37],bh
  40dc29:	(bad)  
  40dc2a:	and    edi,DWORD PTR [ebx-0x3463fd4b]
  40dc30:	mov    esi,0xa87f4f9e
  40dc35:	clc    
  40dc36:	loopne 0x40dbc5
  40dc38:	mov    esi,0xe0b72072
  40dc3d:	pop    esp
  40dc3e:	int    0x82
  40dc40:	(bad)  
  40dc41:	icebp  
  40dc42:	dec    ebx
  40dc43:	imul   BYTE PTR [ebp-0xb]
  40dc46:	into   
  40dc47:	mov    ebp,0x185ddbcb
  40dc4c:	xor    eax,0x88da61c3
  40dc51:	rcl    BYTE PTR [ebx+0x2f],0x96
  40dc55:	mov    edx,0xb13269e
  40dc5a:	retf   0x79e8
  40dc5d:	cs sbb eax,0x42f22cff
  40dc63:	or     eax,0xe039a1da
  40dc68:	sbb    dl,BYTE PTR [edi]
  40dc6a:	push   ebp
  40dc6b:	lods   eax,DWORD PTR ds:[esi]
  40dc6c:	pop    ss
  40dc6d:	dec    esp
  40dc6e:	dec    eax
  40dc6f:	sbb    DWORD PTR [ecx],0x426448fc
  40dc75:	xchg   esp,eax
  40dc76:	out    dx,eax
  40dc77:	call   0xa86412bf
  40dc7c:	and    eax,0xf97af3fa
  40dc81:	in     ax,0x2c
  40dc84:	jmp    0x40dcc2
  40dc86:	mov    ds:0xf19e1b9a,al
  40dc8b:	(bad)  
  40dc8c:	into   
  40dc8d:	mov    eax,0x5349f762
  40dc92:	data16 cmc 
  40dc94:	ja     0x40dceb
  40dc96:	jge    0x40dc44
  40dc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc99:	push   ss
  40dc9a:	push   ds
  40dc9b:	outs   dx,DWORD PTR ds:[esi]
  40dc9c:	imul   edi,DWORD PTR ds:0x777fa811,0xffffff81
  40dca3:	add    eax,0x585d63a4
  40dca8:	push   esp
  40dca9:	iret   
  40dcaa:	mov    ah,0x72
  40dcac:	push   ebp
  40dcad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcae:	add    BYTE PTR [ebx],ch
  40dcb0:	aad    0xa6
  40dcb2:	retf   
  40dcb3:	std    
  40dcb4:	fstp   TBYTE PTR [ebx+0x2b]
  40dcb7:	push   0x69e5a908
  40dcbc:	jmp    0xae5b96ae
  40dcc1:	iret   
  40dcc2:	scas   eax,DWORD PTR es:[edi]
  40dcc3:	xchg   BYTE PTR ss:[esi-0x71],bl
  40dcc7:	jecxz  0x40dd18
  40dcc9:	dec    eax
  40dcca:	enter  0xb9de,0xbe
  40dcce:	mov    esp,0xe94d2cd4
  40dcd3:	xor    al,0x5
  40dcd5:	cwde   
  40dcd6:	dec    edi
  40dcd7:	neg    ebx
  40dcd9:	aas    
  40dcda:	hlt    
  40dcdb:	es push ebp
  40dcdd:	adc    al,BYTE PTR [esi+0x63d3d83c]
  40dce3:	lock daa 
  40dce5:	mov    ch,0x35
  40dce7:	sar    BYTE PTR [ecx+ebp*1+0x8],cl
  40dceb:	mov    dh,0x80
  40dced:	cmp    eax,0x78584888
  40dcf2:	daa    
  40dcf3:	int    0x53
  40dcf5:	cld    
  40dcf6:	sub    DWORD PTR [eax+0x68],ebp
  40dcf9:	push   es
  40dcfa:	(bad)  
  40dcfb:	mov    bh,0x10
  40dcfd:	jmp    0x5ab9:0x43ae8d8b
  40dd04:	fisub  DWORD PTR [edi+esi*1-0x3760dfd2]
  40dd0b:	mov    BYTE PTR [eax-0x6e6ffea1],ah
  40dd11:	mov    WORD PTR [eax],?
  40dd13:	mov    WORD PTR [ebp-0x4a],cs
  40dd16:	popf   
  40dd17:	cmp    eax,0x6d9a06f7
  40dd1c:	fs or  al,0x18
  40dd1f:	jns    0x40dd05
  40dd21:	push   ebx
  40dd22:	in     eax,0xb2
  40dd24:	(bad)  
  40dd25:	scas   eax,DWORD PTR es:[edi]
  40dd26:	mov    bh,0x7c
  40dd28:	sub    al,0xf2
  40dd2a:	add    eax,0x5a115221
  40dd2f:	jnp    0x40dcce
  40dd31:	cli    
  40dd32:	mov    dh,0xba
  40dd34:	rcl    ch,0xca
  40dd37:	out    0xa7,eax
  40dd39:	imul   esp,DWORD PTR [ecx],0xffffff84
  40dd3c:	xchg   edi,eax
  40dd3d:	push   0xfe922df5
  40dd42:	xor    eax,0xc2caf8b0
  40dd47:	stc    
  40dd48:	(bad)  
  40dd49:	lea    esi,[edx-0x69]
  40dd4c:	iret   
  40dd4d:	ds and eax,0x189a33c7
  40dd53:	xchg   ebp,eax
  40dd54:	inc    esp
  40dd55:	mov    edi,0x12fa5ea7
  40dd5a:	inc    esp
  40dd5b:	daa    
  40dd5c:	add    BYTE PTR [edx],bh
  40dd5e:	add    ebp,DWORD PTR [edx]
  40dd60:	inc    ebx
  40dd61:	ss push esi
  40dd63:	inc    edx
  40dd64:	fs test edx,0x68436eb1
  40dd6b:	mov    ebp,0xa23c8afc
  40dd70:	mov    bl,0xf4
  40dd72:	pop    esi
  40dd73:	and    BYTE PTR [esi+0x240c7a99],ah
  40dd79:	mov    esp,0x5ffbb730
  40dd7e:	jb     0x40dd74
  40dd80:	ret    
  40dd81:	sub    eax,esp
  40dd83:	xor    edi,eax
  40dd85:	lods   al,BYTE PTR ds:[esi]
  40dd86:	sub    BYTE PTR [ecx-0x1f41ec80],al
  40dd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd8d:	popf   
  40dd8e:	push   ebx
  40dd8f:	dec    eax
  40dd90:	inc    ebp
  40dd91:	xchg   esp,eax
  40dd92:	pusha  
  40dd93:	out    0x3e,eax
  40dd95:	stos   BYTE PTR es:[edi],al
  40dd96:	mov    dl,cl
  40dd98:	inc    ebx
  40dd99:	xlat   BYTE PTR ds:[ebx]
  40dd9a:	mov    ds:0x2e0bd84b,eax
  40dd9f:	loope  0x40ddf0
  40dda1:	jge    0x40dd53
  40dda3:	lods   eax,DWORD PTR ds:[esi]
  40dda4:	lock fwait
  40dda6:	mov    BYTE PTR [esi-0x39cdc67],ah
  40ddac:	inc    esp
  40ddad:	mov    bl,0xd4
  40ddaf:	cmp    DWORD PTR [ebp+eiz*1+0x84334a5],edx
  40ddb6:	out    dx,eax
  40ddb7:	call   0x6bc5:0xb8054482
  40ddbe:	clc    
  40ddbf:	sub    eax,esp
  40ddc1:	aaa    
  40ddc2:	fcmovnu st,st(6)
  40ddc4:	mov    bh,0xda
  40ddc6:	jge    0x40dd80
  40ddc8:	cli    
  40ddc9:	push   esi
  40ddca:	std    
  40ddcb:	mov    ebx,0x8c6e9632
  40ddd0:	mov    ebp,ecx
  40ddd2:	hlt    
  40ddd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddd4:	ret    0xe9b8
  40ddd7:	mov    al,ds:0x37fa320a
  40dddc:	jle    0x40de1b
  40ddde:	mov    ah,0x6f
  40dde0:	mov    esi,0x63e4600a
  40dde5:	cld    
  40dde6:	sbb    DWORD PTR [edi],0x5d
  40dde9:	pop    ds
  40ddea:	and    dl,cl
  40ddec:	int    0xed
  40ddee:	mov    edx,0xf2913220
  40ddf3:	nop
  40ddf4:	inc    eax
  40ddf5:	sbb    eax,0x6939e2ae
  40ddfa:	test   eax,0x5b610d44
  40ddff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de00:	test   eax,0x274f21e9
  40de05:	adc    edx,esi
  40de07:	bound  ebx,QWORD PTR [edi-0x4cfe58be]
  40de0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de0e:	inc    ebx
  40de0f:	inc    esp
  40de10:	leave  
  40de11:	dec    ebx
  40de12:	cmp    BYTE PTR [edx],bh
  40de14:	xchg   ecx,eax
  40de15:	repz fcomp DWORD PTR es:[esi+0x18]
  40de1a:	lahf   
  40de1b:	fsubr  DWORD PTR [edx-0x44]
  40de1e:	imul   edi,DWORD PTR [ebp+0x6c0109d3],0xc35083a3
  40de28:	retf   0x9005
  40de2b:	scas   eax,DWORD PTR es:[edi]
  40de2c:	xchg   edx,eax
  40de2d:	leave  
  40de2e:	nop
  40de2f:	xor    DWORD PTR [esi*2+0x37bd181e],0x102ac51e
  40de3a:	(bad)  
  40de3b:	jno    0x40de04
  40de3d:	xchg   ebp,eax
  40de3e:	retf   
  40de3f:	pop    ebx
  40de40:	(bad)  
  40de41:	dec    eax
  40de42:	lea    esp,[edi+0x1c63a49a]
  40de48:	jae    0x40de0d
  40de4a:	inc    esp
  40de4b:	jno    0x40de67
  40de4d:	pop    esp
  40de4e:	inc    edx
  40de4f:	sbb    BYTE PTR [ecx-0x38],bh
  40de52:	out    0x1c,al
  40de54:	cmp    al,0x31
  40de56:	les    edi,FWORD PTR [edi-0x1b]
  40de59:	push   ecx
  40de5a:	popf   
  40de5b:	xchg   ebp,eax
  40de5c:	leave  
  40de5d:	push   cs
  40de5e:	mov    edi,esi
  40de60:	es and al,0xfb
  40de63:	sub    BYTE PTR [eax+eiz*2+0x5bb9d61a],dh
  40de6a:	adc    DWORD PTR [ecx-0xf],eax
  40de6d:	and    al,0x53
  40de6f:	fild   WORD PTR [edi]
  40de71:	test   DWORD PTR [eax+0x60fd5f4c],esp
  40de77:	adc    dl,dl
  40de79:	sti    
  40de7a:	imul   ebp,esi,0x1386e26c
  40de80:	fsubr  QWORD PTR [ebx]
  40de82:	nop
  40de83:	jle    0x40de96
  40de85:	lods   al,BYTE PTR ds:[esi]
  40de86:	dec    ecx
  40de87:	sbb    DWORD PTR [ebx-0x2],edx
  40de8a:	cwde   
  40de8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de8c:	clc    
  40de8d:	outs   dx,DWORD PTR ds:[esi]
  40de8e:	sbb    al,0x8
  40de90:	push   edi
  40de91:	popa   
  40de92:	out    dx,eax
  40de93:	jmp    0xcc448787
  40de98:	mov    ebx,0xbc1d91d2
  40de9d:	scas   al,BYTE PTR es:[edi]
  40de9e:	push   ss
  40de9f:	jbe    0x40dee9
  40dea1:	pusha  
  40dea2:	daa    
  40dea3:	xor    DWORD PTR [esi-0x773619aa],0xffbe405f
  40dead:	sub    eax,0xb516f302
  40deb2:	and    al,0xf3
  40deb4:	xor    DWORD PTR [edx+0x300f9a91],edx
  40deba:	out    dx,al
  40debb:	push   ebp
  40debc:	pop    ecx
  40debd:	int    0x50
  40debf:	mov    eax,0x3d6277a0
  40dec4:	pop    es
  40dec5:	js     0x40defa
  40dec7:	or     bh,BYTE PTR [esi-0x322fd7a8]
  40decd:	xor    BYTE PTR [ebx],bh
  40decf:	sbb    edi,DWORD PTR [eax+0x3c]
  40ded2:	push   edx
  40ded3:	lock out dx,al
  40ded5:	test   ebx,0x7b0d986f
  40dedb:	and    edx,DWORD PTR [edi+0x2]
  40dede:	mov    edx,0x6c51c289
  40dee3:	push   cs
  40dee4:	dec    edi
  40dee5:	add    edx,esp
  40dee7:	sub    al,0x36
  40dee9:	push   cs
  40deea:	or     eax,0x4f47870d
  40deef:	shl    dh,1
  40def1:	and    al,0xb4
  40def3:	adc    ah,bh
  40def5:	fwait
  40def6:	or     DWORD PTR [ecx],edi
  40def8:	xchg   ecx,eax
  40def9:	(bad)  
  40defa:	jecxz  0x40deed
  40defc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40defd:	int    0x18
  40deff:	shl    DWORD PTR [eax],cl
  40df01:	pop    edx
  40df02:	jg     0x40ded8
  40df04:	mov    al,0xac
  40df06:	stos   BYTE PTR es:[edi],al
  40df07:	mov    WORD PTR [esi+0x73550a21],fs
  40df0d:	push   ss
  40df0e:	outs   dx,BYTE PTR fs:[esi]
  40df10:	cld    
  40df11:	retf   0x1339
  40df14:	push   esi
  40df15:	popa   
  40df16:	into   
  40df17:	push   ds
  40df18:	call   0xd0eee545
  40df1d:	leave  
  40df1e:	mov    esp,0x860e6dd2
  40df23:	jl     0x40df7a
  40df25:	call   0x11350e8
  40df2a:	sbb    eax,0x6e27e052
  40df2f:	daa    
  40df30:	out    dx,al
  40df31:	out    0x73,al
  40df33:	dec    eax
  40df34:	shr    DWORD PTR cs:[edi+0x4e379425],0x42
  40df3c:	xchg   edx,eax
  40df3d:	ins    BYTE PTR es:[edi],dx
  40df3e:	adc    BYTE PTR [esi-0xe],al
  40df41:	pop    eax
  40df42:	sub    DWORD PTR [eax+0x67],ebx
  40df45:	out    0x9e,eax
  40df47:	mov    bh,0x97
  40df49:	jg     0x40df0c
  40df4b:	lahf   
  40df4c:	out    0x74,al
  40df4e:	xor    al,0x91
  40df50:	je     0x40df48
  40df52:	pop    edx
  40df53:	stc    
  40df54:	cmc    
  40df55:	(bad)  [ebx+0x2bac89f6]
  40df5b:	out    dx,eax
  40df5c:	add    dh,BYTE PTR [esi-0x39]
  40df5f:	loop   0x40df32
  40df61:	call   0x35cc:0x9a2e591d
  40df68:	dec    ebp
  40df69:	std    
  40df6a:	enter  0x4caa,0x75
  40df6e:	push   ds
  40df6f:	fwait
  40df70:	popa   
  40df71:	jge    0x40df10
  40df73:	push   ecx
  40df74:	pop    edi
  40df75:	sub    ebx,eax
  40df77:	cmp    bl,dl
  40df79:	xor    edx,esi
  40df7b:	sub    esi,DWORD PTR [esi]
  40df7d:	mov    ah,0xd7
  40df7f:	lock es out 0xec,eax
  40df83:	pop    ebx
  40df84:	rcr    BYTE PTR [edi+0x32a569f],cl
  40df8a:	mov    edx,0x46da46a6
  40df8f:	out    0x1b,al
  40df91:	js     0x40df19
  40df93:	mov    dh,0xd4
  40df95:	cmp    ecx,eax
  40df97:	inc    eax
  40df98:	jne    0x40df2e
  40df9a:	loop   0x40df9a
  40df9c:	ja     0x40dfba
  40df9e:	push   ds
  40df9f:	mov    bl,0x7
  40dfa1:	std    
  40dfa2:	call   0xf635:0x592db7e6
  40dfa9:	mov    edi,0xd3a4fb55
  40dfae:	cmp    al,0xa1
  40dfb0:	pop    DWORD PTR [ebx+0x2ccab411]
  40dfb6:	out    dx,al
  40dfb7:	xchg   esi,eax
  40dfb8:	push   eax
  40dfb9:	lahf   
  40dfba:	dec    edx
  40dfbb:	loop   0x40df6e
  40dfbd:	aaa    
  40dfbe:	popa   
  40dfbf:	pop    ebp
  40dfc0:	push   cs
  40dfc1:	repz xor ax,0xbb39
  40dfc6:	xchg   ebx,eax
  40dfc7:	pushf  
  40dfc8:	xchg   DWORD PTR [edx+edx*4+0x12],ebp
  40dfcc:	push   esi
  40dfcd:	cli    
  40dfce:	(bad)  
  40dfd1:	or     BYTE PTR [edx+0x54],al
  40dfd4:	fld    st(1)
  40dfd6:	mov    eax,ds:0x2e6880ad
  40dfdb:	retf   
  40dfdc:	hlt    
  40dfdd:	jecxz  0x40df91
  40dfdf:	and    DWORD PTR [ecx-0x7c],esp
  40dfe2:	sub    ebp,DWORD PTR [esi]
  40dfe4:	ja     0x40df8b
  40dfe6:	(bad)  
  40dfe7:	cmp    eax,0xb4c5354b
  40dfec:	add    bl,BYTE PTR [esi]
  40dfee:	mov    bh,0xf5
  40dff0:	(bad)  
  40dff1:	adc    cl,BYTE PTR ds:0x8321b8b4
  40dff7:	inc    ecx
  40dff8:	push   edx
  40dff9:	hlt    
  40dffa:	ret    0x757b
  40dffd:	mov    eax,ds:0x95792e5b
  40e002:	push   0xffffff99
  40e004:	adc    al,0xb4
  40e006:	jp     0x40dfc8
  40e008:	aas    
  40e009:	jmp    0xa3e5:0x5f986541
  40e010:	and    bl,dh
  40e012:	mov    eax,0x489f3244
  40e017:	out    0x3,al
  40e019:	cmp    DWORD PTR [ebp+0x740c8773],ebp
  40e01f:	pop    edx
  40e020:	cdq    
  40e021:	(bad)  
  40e022:	sbb    cl,cl
  40e024:	dec    eax
  40e025:	mov    dh,0x2a
  40e027:	pop    esp
  40e028:	jg     0x40e0a2
  40e02a:	in     al,dx
  40e02b:	lahf   
  40e02c:	xlat   BYTE PTR ds:[ebx]
  40e02d:	push   ebp
  40e02e:	lds    ebx,FWORD PTR [eax]
  40e030:	loopne 0x40e0a6
  40e032:	mov    cl,0x45
  40e034:	das    
  40e035:	in     eax,0x72
  40e037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e038:	pop    ecx
  40e039:	ja     0x40e094
  40e03b:	mov    ch,0x84
  40e03d:	loopne 0x40e067
  40e03f:	mov    esi,0x93d124ee
  40e044:	xor    ebp,0x604cd3e2
  40e04a:	mov    WORD PTR [ebx-0x41],gs
  40e04d:	fld    QWORD PTR [edi+0x3f85171f]
  40e053:	cmp    ah,dl
  40e055:	shr    BYTE PTR [edx],cl
  40e057:	int    0x96
  40e059:	daa    
  40e05a:	not    DWORD PTR [esi]
  40e05c:	mov    eax,0xe0de45e1
  40e061:	(bad)  
  40e062:	push   edi
  40e063:	jns    0x40e098
  40e065:	or     al,0x66
  40e067:	or     esp,DWORD PTR [ebp-0x3e]
  40e06a:	int    0xa6
  40e06c:	and    esp,esi
  40e06e:	enter  0x96eb,0x61
  40e072:	sub    ebx,DWORD PTR [eax+0x25]
  40e075:	xor    DWORD PTR [ebx-0x69],eax
  40e078:	out    dx,al
  40e079:	sbb    eax,0x22f13970
  40e07e:	inc    ebp
  40e07f:	mov    ebp,0x2ad0aeb5
  40e084:	test   eax,0xc89f3df8
  40e089:	in     eax,0xcb
  40e08b:	aas    
  40e08c:	mov    dl,0x23
  40e08e:	and    al,BYTE PTR [ebx+0x4c596915]
  40e094:	fild   WORD PTR [eax+edx*1]
  40e097:	jnp    0x40e03d
  40e099:	adc    DWORD PTR [esi+0x37],esi
  40e09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e09d:	push   edi
  40e09e:	sub    eax,0x5193cea9
  40e0a3:	mov    eax,ds:0xe106bc42
  40e0a8:	adc    esi,edi
  40e0aa:	xor    al,0x9e
  40e0ac:	mov    bl,0x24
  40e0ae:	imul   edx,DWORD PTR [eax+0x3a],0x9d48130
  40e0b5:	add    eax,0x555ddc8e
  40e0ba:	jg     0x40e0bd
  40e0bc:	sbb    al,BYTE PTR [edi+edx*1+0x1e]
  40e0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0c1:	cdq    
  40e0c2:	fs popa 
  40e0c4:	lods   al,BYTE PTR ds:[esi]
  40e0c5:	push   ds
  40e0c6:	dec    ebx
  40e0c7:	les    ebx,FWORD PTR ds:0xd0667e57
  40e0cd:	aad    0xec
  40e0cf:	jg     0x40e144
  40e0d1:	or     ecx,edx
  40e0d3:	ds pop ds
  40e0d5:	add    eax,0x1e82a2d5
  40e0da:	fdivr  QWORD PTR [ebp-0x7664f8dc]
  40e0e0:	xor    dl,BYTE PTR [edx+esi*4+0x69]
  40e0e4:	cmp    al,0xcc
  40e0e6:	jns    0x40e092
  40e0e8:	lods   eax,DWORD PTR ds:[esi]
  40e0e9:	in     al,0x65
  40e0eb:	sbb    BYTE PTR [ebp+edi*2+0x2ce0fe46],dl
  40e0f2:	repz (bad) 
  40e0f4:	xor    ecx,0xffffffa9
  40e0f7:	push   0x43
  40e0f9:	mov    dl,0x1e
  40e0fb:	add    ecx,ecx
  40e0fd:	ret    0x9b63
  40e100:	pop    ebp
  40e101:	fnstsw WORD PTR [edi]
  40e103:	fs xchg edi,eax
  40e105:	cld    
  40e106:	call   0x945ef82c
  40e10b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e10c:	pop    esp
  40e10d:	sub    BYTE PTR [ebp-0x5cfa84f5],al
  40e113:	or     al,0xa
  40e115:	pop    ds
  40e116:	cmp    al,0x63
  40e118:	ja     0x40e103
  40e11a:	sbb    BYTE PTR [esi+0x4f],dh
  40e11d:	cwde   
  40e11e:	mov    esp,0xdbf27729
  40e123:	pop    ecx
  40e124:	gs adc cl,0xe5
  40e128:	mov    DWORD PTR [eax-0x5d1854f8],ebp
  40e12e:	xor    dh,BYTE PTR ds:0xb3746807
  40e134:	add    BYTE PTR [ebx-0x6f],dl
  40e137:	shr    DWORD PTR [esi+0x6f],0x16
  40e13b:	clc    
  40e13c:	mov    BYTE PTR [esi+ebp*8+0xc],al
  40e140:	in     al,dx
  40e141:	gs xor eax,0xa756a215
  40e147:	mov    dh,0x8f
  40e149:	loop   0x40e188
  40e14b:	add    BYTE PTR [ebp+0x789c395f],bl
  40e151:	pop    ds
  40e152:	inc    eax
  40e153:	add    al,0x5d
  40e155:	fidivr WORD PTR [ebp-0x27]
  40e158:	scas   eax,DWORD PTR es:[edi]
  40e159:	neg    BYTE PTR gs:[ecx]
  40e15c:	sub    al,0xd2
  40e15e:	cli    
  40e15f:	out    0x1f,al
  40e161:	dec    eax
  40e162:	adc    DWORD PTR [edx+0x4d04e880],edx
  40e168:	xor    BYTE PTR [ecx],al
  40e16a:	int    0xdc
  40e16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e16d:	sar    BYTE PTR [edi],0x73
  40e170:	mov    ah,0xb5
  40e172:	pop    edx
  40e173:	adc    al,0xba
  40e175:	cmp    ebx,esp
  40e177:	sbb    ecx,DWORD PTR [ecx+0x59]
  40e17a:	fcmovnbe st,st(2)
  40e17c:	cmp    ah,BYTE PTR [ecx-0x22]
  40e17f:	inc    ebx
  40e180:	inc    edx
  40e181:	xor    ebp,DWORD PTR [eax+0x30]
  40e184:	inc    ecx
  40e185:	in     eax,dx
  40e186:	pop    edx
  40e187:	shl    BYTE PTR [edi],0x9a
  40e18a:	inc    eax
  40e18b:	jb     0x40e1ea
  40e18d:	and    BYTE PTR [ebp+0x33],bh
  40e190:	jle    0x40e1fb
  40e192:	push   edi
  40e193:	mov    dh,0x5
  40e195:	data16 adc dh,BYTE PTR [ebx+0x6e]
  40e199:	mov    bh,0x7d
  40e19b:	test   eax,0x777be817
  40e1a0:	sbb    eax,0x9949e651
  40e1a5:	ficom  WORD PTR [edi]
  40e1a7:	stos   DWORD PTR es:[edi],eax
  40e1a8:	jne    0x40e18e
  40e1aa:	adc    bh,BYTE PTR [edi+edx*2]
  40e1ad:	pop    ds
  40e1ae:	add    DWORD PTR [eax-0xb3a272b],edi
  40e1b4:	retf   
  40e1b5:	(bad)  
  40e1b6:	jae    0x40e1eb
  40e1b8:	cmp    al,BYTE PTR [ebp-0x5c]
  40e1bb:	pop    ebp
  40e1bc:	repz xor dl,BYTE PTR [ebx]
  40e1bf:	rcpps  xmm3,xmm1
  40e1c2:	aam    0x4b
  40e1c4:	push   ebx
  40e1c5:	retf   
  40e1c6:	push   edi
  40e1c7:	call   0xc28:0xe6a7ce0d
  40e1ce:	iret   
  40e1cf:	mov    ebp,0x4800d2ad
  40e1d4:	imul   esi,DWORD PTR [esi+0x1a],0xec0f3022
  40e1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1dc:	ror    al,cl
  40e1de:	ret    0x36cf
  40e1e1:	dec    ecx
  40e1e2:	enter  0xca38,0x6f
  40e1e6:	xchg   edx,eax
  40e1e7:	push   edx
  40e1e8:	in     eax,dx
  40e1e9:	cmp    DWORD PTR [esi-0x6d],ebp
  40e1ec:	and    eax,0x7b8b5bb3
  40e1f1:	dec    ebx
  40e1f2:	push   ss
  40e1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f4:	bswap  esi
  40e1f6:	daa    
  40e1f7:	(bad)  
  40e1f8:	(bad)  
  40e1f9:	mov    esp,0xc65c5eb3
  40e1fe:	sbb    eax,0xd9ef9b5b
  40e203:	jb     0x40e1da
  40e205:	js     0x40e20d
  40e207:	mov    eax,ds:0xc6233cf4
  40e20c:	or     bh,ch
  40e20e:	ins    DWORD PTR es:[edi],dx
  40e20f:	popa   
  40e210:	out    0xb6,al
  40e212:	push   esp
  40e213:	jg     0x40e202
  40e215:	cmp    esp,DWORD PTR [esi]
  40e217:	mov    ah,0xc6
  40e219:	jg     0x40e1d5
  40e21b:	cmp    eax,DWORD PTR [ebx-0x80]
  40e21e:	xchg   BYTE PTR [eax+0x7b24efc6],dl
  40e224:	retf   
  40e225:	add    al,BYTE PTR [ecx+ebx*1]
  40e228:	int3   
  40e229:	out    dx,eax
  40e22a:	call   0xf54c1a27
  40e22f:	leave  
  40e230:	dec    edi
  40e231:	mov    esp,0x43587f81
  40e236:	push   ebp
  40e237:	in     eax,dx
  40e238:	sub    dl,0x9e
  40e23b:	lahf   
  40e23c:	pop    edx
  40e23d:	pop    esp
  40e23e:	jo     0x40e1e2
  40e240:	or     al,0x48
  40e242:	push   ecx
  40e243:	mov    esp,0x26deb58b
  40e248:	jge    0x40e2aa
  40e24a:	and    eax,0x23a70aa1
  40e24f:	push   ebp
  40e250:	xchg   esp,eax
  40e251:	rcr    BYTE PTR [edx+eax*1-0x58],cl
  40e255:	and    BYTE PTR [ecx-0x5f349379],dh
  40e25b:	jge    0x40e26c
  40e25d:	jecxz  0x40e29a
  40e25f:	in     al,0x96
  40e261:	lea    ebp,[eax-0x54e70f6f]
  40e267:	mov    BYTE PTR [ecx],ch
  40e269:	xor    al,0x24
  40e26b:	xchg   ebp,eax
  40e26c:	mov    ch,0x3e
  40e26e:	inc    esi
  40e26f:	cmc    
  40e270:	call   0xf7f:0x6f0d2617
  40e277:	pop    edx
  40e278:	dec    edx
  40e279:	push   ds
  40e27a:	adc    al,0x64
  40e27c:	outs   dx,BYTE PTR ds:[esi]
  40e27d:	jmp    0x40e2a6
  40e27f:	sub    ebp,DWORD PTR [esi-0x41]
  40e282:	or     DWORD PTR [eax-0x38f7cd9f],esp
  40e288:	in     eax,0xd0
  40e28a:	sbb    al,0x95
  40e28c:	ja     0x40e2f7
  40e28e:	test   DWORD PTR [ebp+0x4a],edx
  40e291:	add    eax,0x30f588e8
  40e296:	add    al,0xf7
  40e298:	push   ss
  40e299:	ret    
  40e29a:	imul   ebx,DWORD PTR [edx+0x1a],0x35
  40e29e:	pop    ss
  40e29f:	neg    DWORD PTR [edi+0x5f]
  40e2a2:	mov    cs,WORD PTR [edx+0x232343f4]
  40e2a8:	adc    BYTE PTR [esi],0x9a
  40e2ab:	jg     0x40e32b
  40e2ad:	jbe    0x40e2b0
  40e2af:	loop   0x40e32c
  40e2b1:	inc    ecx
  40e2b2:	mov    edi,0x642aa618
  40e2b7:	bnd jmp DWORD PTR [ebp+0x46320cb7]
  40e2be:	cmp    eax,0xf7855dae
  40e2c3:	lods   al,BYTE PTR ds:[esi]
  40e2c4:	adc    edx,0x24
  40e2c7:	jle    0x40e2e1
  40e2c9:	popf   
  40e2ca:	mov    dh,0xea
  40e2cc:	int    0xd9
  40e2ce:	and    al,0x25
  40e2d0:	outs   dx,DWORD PTR ds:[esi]
  40e2d1:	mov    BYTE PTR [edi],ch
  40e2d3:	fincstp 
  40e2d5:	mov    cl,0x40
  40e2d7:	sub    BYTE PTR [eax],bh
  40e2d9:	imul   esp,DWORD PTR [ebp+0x48],0x21
  40e2dd:	popfw  
  40e2df:	mov    WORD PTR [esi+0x2779e49e],es
  40e2e5:	mov    ebp,0x1f68c718
  40e2ea:	mov    esi,0x492b423f
  40e2ef:	aas    
  40e2f0:	sbb    esi,DWORD PTR [edi+ecx*4]
  40e2f3:	sbb    al,BYTE PTR [edx+0x4ce0491f]
  40e2f9:	pop    edi
  40e2fa:	pop    ds
  40e2fb:	mov    esi,0x4ccbef6d
  40e300:	dec    ebx
  40e301:	call   0xbe4f040f
  40e306:	sub    eax,0x9f60816d
  40e30b:	push   edi
  40e30c:	int3   
  40e30d:	jnp    0x40e318
  40e30f:	retf   0x6665
  40e312:	add    BYTE PTR [edx],al
  40e314:	inc    ebx
  40e315:	leavew 
  40e317:	mov    al,0xa6
  40e319:	mov    esp,es
  40e31b:	xchg   ebp,eax
  40e31c:	cld    
  40e31d:	shl    DWORD PTR [ebp+0x2f],1
  40e320:	out    0xe,al
  40e322:	sub    eax,DWORD PTR [eax+0x769a6cb8]
  40e328:	(bad)
  40e32b:	jns    0x40e2b4
  40e32d:	sbb    esi,DWORD PTR [esi-0x49]
  40e330:	cmp    al,0x61
  40e332:	mov    ah,0xac
  40e334:	addr16 cmp al,0xcc
  40e337:	adc    al,0x43
  40e339:	out    dx,al
  40e33a:	das    
  40e33b:	cs sbb eax,0x454b1a8d
  40e341:	cmp    BYTE PTR [eax+0x28],0x40
  40e345:	addr16 data16 sub al,0x6b
  40e349:	repnz sbb al,0xe1
  40e34c:	repnz mov WORD PTR [edi+0x5739f3a3],ss
  40e353:	jge    0x40e369
  40e355:	lds    ebx,FWORD PTR [edi-0x725a5e16]
  40e35b:	jbe    0x40e2e4
  40e35d:	sub    bl,dl
  40e35f:	ins    DWORD PTR es:[edi],dx
  40e360:	adc    ah,BYTE PTR [ecx-0x37]
  40e363:	sbb    al,0xcb
  40e365:	or     ch,bh
  40e367:	lahf   
  40e368:	call   0x4da3:0xf214ada1
  40e36f:	mov    bl,0x7
  40e371:	and    esp,esi
  40e373:	scas   al,BYTE PTR es:[edi]
  40e374:	mov    eax,0xf251866a
  40e379:	int    0xa0
  40e37b:	test   al,0x7a
  40e37d:	outs   dx,DWORD PTR ds:[esi]
  40e37e:	hlt    
  40e37f:	sbb    BYTE PTR [ebx+0x281ca00f],dh
  40e385:	inc    esp
  40e386:	int3   
  40e387:	mov    dl,BYTE PTR [ecx+0x15d6cc6d]
  40e38d:	sbb    bl,BYTE PTR [edi]
  40e38f:	mov    edx,0x43dc79e
  40e394:	jb     0x40e365
  40e396:	and    BYTE PTR [esi+0x25],bl
  40e399:	jl     0x40e320
  40e39b:	mov    al,ds:0xd6bab129
  40e3a0:	test   al,0x60
  40e3a2:	jge    0x40e401
  40e3a4:	test   DWORD PTR [edx+0x7f82be64],esp
  40e3aa:	ins    BYTE PTR es:[edi],dx
  40e3ab:	shl    DWORD PTR [ecx],cl
  40e3ad:	dec    ecx
  40e3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3af:	dec    ebx
  40e3b0:	xchg   dh,ah
  40e3b2:	mov    eax,ds:0x9f53fe89
  40e3b7:	lods   eax,DWORD PTR ds:[esi]
  40e3b8:	inc    ebp
  40e3b9:	daa    
  40e3ba:	push   0xe69c68fc
  40e3bf:	mov    bh,0xbb
  40e3c1:	pop    ss
  40e3c2:	ins    BYTE PTR es:[edi],dx
  40e3c3:	jmp    0xfee2:0x11c44c45
  40e3ca:	sub    BYTE PTR ss:[ebx],bh
  40e3cd:	mov    al,0x68
  40e3cf:	int3   
  40e3d0:	push   cs
  40e3d1:	stos   DWORD PTR es:[edi],eax
  40e3d2:	push   esp
  40e3d3:	aam    0xfe
  40e3d5:	xchg   ebx,eax
  40e3d6:	xchg   edx,eax
  40e3d7:	xchg   edx,eax
  40e3d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3d9:	das    
  40e3da:	(bad)  
  40e3db:	jb     0x40e39a
  40e3dd:	pop    esp
  40e3de:	lock test al,0xe7
  40e3e1:	xor    edi,ebx
  40e3e3:	inc    eax
  40e3e4:	shr    eax,cl
  40e3e6:	push   edi
  40e3e7:	int    0x2d
  40e3e9:	js     0x40e408
  40e3eb:	pop    ebp
  40e3ec:	push   cs
  40e3ed:	adc    esi,DWORD PTR [edi-0x72]
  40e3f0:	mov    bh,0xdd
  40e3f2:	mov    al,ds:0xe0a2e216
  40e3f7:	movq   mm5,QWORD PTR [ebx]
  40e3fa:	cmp    esi,0x4b
  40e3fd:	lahf   
  40e3fe:	(bad)  
  40e3ff:	outs   dx,BYTE PTR ds:[esi]
  40e400:	cmp    ah,0xba
  40e403:	jmp    0x40e45a
  40e405:	xchg   ebx,eax
  40e406:	(bad)  
  40e407:	retf   
  40e408:	sub    al,0xe0
  40e40a:	repz mov eax,cs
  40e40d:	call   0xec4a1b9d
  40e412:	icebp  
  40e413:	push   esp
  40e414:	int    0x28
  40e416:	push   es
  40e417:	cmp    ecx,DWORD PTR [ebx+0x30b4e03e]
  40e41d:	jmp    0x80f85a69
  40e422:	push   0x68
  40e424:	mov    ebx,0xb9d9970
  40e429:	jmp    0x25d89678
  40e42e:	fbld   TBYTE PTR [ebx-0x23]
  40e431:	mov    dl,0x7
  40e433:	mov    bl,BYTE PTR [ebp+ecx*4-0x80]
  40e437:	push   cs
  40e438:	xchg   BYTE PTR [esi],al
  40e43a:	mov    edx,0xfd6db8d
  40e43f:	mov    bh,0x6d
  40e441:	ins    BYTE PTR es:[edi],dx
  40e442:	stos   DWORD PTR es:[edi],eax
  40e443:	mov    ebp,edi
  40e445:	sbb    eax,DWORD PTR [eax]
  40e447:	ins    BYTE PTR es:[edi],dx
  40e448:	call   0x1142a7b5
  40e44d:	push   ebx
  40e44e:	(bad)  
  40e44f:	mov    ebx,0x97999fa9
  40e454:	xchg   DWORD PTR [ebx+0x3cef9df5],edi
  40e45a:	sti    
  40e45b:	sub    eax,0xf5375122
  40e460:	cmc    
  40e461:	and    eax,DWORD PTR [ebp-0x61603325]
  40e467:	(bad)  
  40e468:	aad    0x51
  40e46a:	aad    0xce
  40e46c:	in     eax,dx
  40e46d:	mov    dh,0xa2
  40e46f:	scas   eax,DWORD PTR es:[edi]
  40e470:	jg     0x40e3fb
  40e472:	js     0x40e487
  40e474:	arpl   bp,dx
  40e476:	cmp    al,0xa8
  40e478:	add    BYTE PTR ss:[ebp-0x5d],cl
  40e47c:	pop    ebx
  40e47d:	push   esi
  40e47e:	inc    ebp
  40e47f:	stc    
  40e480:	ja     0x40e4c7
  40e482:	in     eax,dx
  40e483:	std    
  40e484:	dec    esi
  40e485:	ja     0x40e4d6
  40e487:	sub    BYTE PTR [edx-0x2d],dl
  40e48a:	pushf  
  40e48b:	jl     0x40e4d4
  40e48d:	jmp    0x40e43e
  40e48f:	out    0x27,eax
  40e491:	data16 mov al,0x7a
  40e494:	gs out 0x1f,al
  40e497:	ss loope 0x40e467
  40e49a:	inc    esp
  40e49b:	jns    0x40e49d
  40e49d:	cs popa 
  40e49f:	retf   0x82b6
  40e4a2:	cmp    dh,BYTE PTR [esi+0x14eafe45]
  40e4a8:	sbb    DWORD PTR [edi-0xf],0x16
  40e4ac:	sub    DWORD PTR [esp+esi*1],eax
  40e4af:	and    eax,0xea159673
  40e4b4:	push   ecx
  40e4b5:	sbb    eax,0x5490db94
  40e4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4bb:	mov    eax,ds:0x6d811936
  40e4c0:	pop    ds
  40e4c1:	je     0x40e49f
  40e4c3:	mov    dl,0x48
  40e4c5:	iret   
  40e4c6:	push   es
  40e4c7:	cli    
  40e4c8:	fmul   QWORD PTR [eax]
  40e4ca:	data16 aam 0xa6
  40e4cd:	sbb    eax,0x5275743a
  40e4d2:	(bad)  
  40e4d3:	arpl   WORD PTR [ebp-0x50],dx
  40e4d6:	ret    0x6d4e
  40e4d9:	aad    0x2c
  40e4db:	cs (bad) 
  40e4dd:	ins    DWORD PTR es:[edi],dx
  40e4de:	push   esi
  40e4df:	sahf   
  40e4e0:	(bad)  
  40e4e1:	jecxz  0x40e535
  40e4e3:	push   esp
  40e4e4:	jnp    0x40e543
  40e4e6:	pop    eax
  40e4e7:	pop    edi
  40e4e8:	mov    cl,0x8e
  40e4ea:	clc    
  40e4eb:	setns  BYTE PTR [eax]
  40e4ee:	xor    edx,DWORD PTR [esp+ebx*1-0x15]
  40e4f2:	pushf  
  40e4f3:	cs xchg ecx,eax
  40e4f5:	cmp    eax,0xc4286df7
  40e4fa:	repnz and al,0xfd
  40e4fd:	pop    ecx
  40e4fe:	inc    edi
  40e4ff:	pusha  
  40e500:	jg     0x40e501
  40e502:	lds    esp,FWORD PTR [ebx]
  40e504:	lds    edx,FWORD PTR [ecx+0x130f96ff]
  40e50a:	arpl   cx,si
  40e50c:	cmp    DWORD PTR [eax],eax
  40e50e:	mov    dl,0x3d
  40e510:	popf   
  40e511:	xor    al,0xb9
  40e513:	adc    bl,BYTE PTR [ecx-0x38cefd5c]
  40e519:	adc    bl,al
  40e51b:	pop    ebp
  40e51c:	jg     0x40e579
  40e51e:	xchg   esp,eax
  40e51f:	mov    eax,0x94a03ea8
  40e524:	test   al,0x1b
  40e526:	pop    edx
  40e527:	mov    edx,DWORD PTR [edi]
  40e529:	jmp    0x40e50b
  40e52b:	ja     0x40e572
  40e52d:	dec    eax
  40e52e:	out    0x43,al
  40e530:	mov    DWORD PTR [edi+0x5daa5c38],edx
  40e536:	mov    ebx,0x11cea4be
  40e53b:	inc    esp
  40e53c:	pushf  
  40e53d:	div    DWORD PTR [ebp-0x68]
  40e540:	repz pop es
  40e542:	pop    edx
  40e543:	gs adc eax,0x7731fc65
  40e549:	(bad)  
  40e54a:	popa   
  40e54b:	inc    ebp
  40e54c:	jbe    0x40e554
  40e54e:	aad    0xd8
  40e550:	(bad)  
  40e551:	mov    ds,WORD PTR [ebp-0x2d44b182]
  40e557:	sti    
  40e558:	pop    ss
  40e559:	or     ebx,DWORD PTR [ecx+0x37b4f662]
  40e55f:	dec    ebp
  40e560:	fs push ebx
  40e562:	stc    
  40e563:	aam    0x8e
  40e565:	xor    edx,edx
  40e567:	iret   
  40e568:	sub    BYTE PTR [ecx+0x72522294],bl
  40e56e:	rcr    ebx,0x98
  40e571:	xchg   DWORD PTR [ebx],ebx
  40e573:	jne    0x40e56f
  40e575:	fld    DWORD PTR [edx-0x7e]
  40e578:	pop    ds
  40e579:	lods   ax,WORD PTR ds:[esi]
  40e57b:	je     0x40e5dc
  40e57d:	jae    0x40e594
  40e57f:	fisttp QWORD PTR [edi+ebp*4]
  40e582:	mov    ah,0x9
  40e584:	xchg   ebp,eax
  40e585:	xchg   esi,eax
  40e586:	(bad)  
  40e587:	mov    dh,0xe3
  40e58a:	pop    edi
  40e58b:	ss push ebp
  40e58d:	hlt    
  40e58e:	sti    
  40e58f:	adc    edx,DWORD PTR [edi]
  40e591:	mov    ah,0x25
  40e593:	push   edx
  40e594:	mov    BYTE PTR [edi-0x17],cl
  40e597:	dec    ecx
  40e598:	cmp    eax,0xfab4b645
  40e59d:	aaa    
  40e59e:	ja     0x40e5d3
  40e5a0:	cmp    BYTE PTR [eax-0x35],al
  40e5a3:	jnp    0x40e617
  40e5a5:	cmc    
  40e5a6:	adc    bl,BYTE PTR [edx]
  40e5a8:	xchg   ebp,eax
  40e5a9:	xchg   ebx,eax
  40e5aa:	pop    edx
  40e5ab:	daa    
  40e5ac:	adc    BYTE PTR [ebx+0x14],dh
  40e5af:	jo     0x40e5cf
  40e5b1:	xor    al,0x55
  40e5b3:	jae    0x40e569
  40e5b5:	mov    bl,dl
  40e5b7:	out    dx,al
  40e5b8:	cdq    
  40e5b9:	call   esp
  40e5bb:	add    eax,0xf51d4500
  40e5c0:	adc    edx,DWORD PTR [esi]
  40e5c2:	adc    eax,0xe1ae06fe
  40e5c7:	fisubr WORD PTR [eax]
  40e5c9:	cmp    esi,DWORD PTR [esi]
  40e5cb:	outs   dx,DWORD PTR ds:[esi]
  40e5cc:	add    BYTE PTR [ebp+0x77],cl
  40e5cf:	pop    ecx
  40e5d0:	in     eax,dx
  40e5d1:	outs   dx,BYTE PTR ds:[esi]
  40e5d2:	or     BYTE PTR ds:[edi-0x640e574e],bl
  40e5d9:	(bad)  
  40e5da:	xchg   edx,eax
  40e5db:	sar    DWORD PTR [ebx],0xc2
  40e5de:	mov    dl,0xf6
  40e5e0:	(bad)  
  40e5e1:	call   0xf0b5:0x1e5a
  40e5e7:	lock scas al,BYTE PTR es:[edi]
  40e5e9:	dec    edx
  40e5ea:	mov    eax,ds:0xe06af22b
  40e5ef:	mov    WORD PTR [ebp-0x72d4fed1],ss
  40e5f5:	add    eax,0xfc3ad62d
  40e5fa:	xchg   ebx,eax
  40e5fb:	test   eax,0x307a64c5
  40e600:	dec    edx
  40e601:	mov    dh,0x0
  40e603:	stc    
  40e604:	imul   ecx,DWORD PTR [ecx-0x452ee64e],0x9f305680
  40e60e:	test   DWORD PTR [ecx],ebx
  40e610:	js     0x40e65a
  40e612:	or     esp,DWORD PTR [edi+0x70]
  40e615:	mov    ds:0xaedad270,eax
  40e61a:	hlt    
  40e61b:	out    dx,eax
  40e61c:	mov    BYTE PTR [ebx+eiz*4-0x2ef7911a],ch
  40e623:	mov    ebx,0x44a516db
  40e628:	or     esi,DWORD PTR [ecx-0x4cd0d8fb]
  40e62e:	jae    0x40e631
  40e630:	cmp    esp,DWORD PTR [edx-0x6b7a8f15]
  40e636:	inc    edi
  40e637:	push   0x8d66c60f
  40e63c:	fild   QWORD PTR [edi-0x20241779]
  40e642:	sbb    al,0x43
  40e644:	stos   DWORD PTR es:[edi],eax
  40e645:	or     BYTE PTR [ebx],0xf2
  40e648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e649:	aam    0xee
  40e64b:	fiadd  DWORD PTR [ebp+0x1c]
  40e64e:	or     BYTE PTR [esp+esi*2+0x9a3c46],bl
  40e655:	inc    eax
  40e656:	xor    BYTE PTR [ecx+0x2e],ch
  40e659:	hlt    
  40e65a:	xchg   BYTE PTR [esi+0x4f5f802],ah
  40e660:	loopne 0x40e6d0
  40e662:	and    bh,BYTE PTR [ecx+0x7f]
  40e665:	sar    BYTE PTR [ebx],cl
  40e667:	aad    0x96
  40e669:	adc    edi,DWORD PTR [ebx]
  40e66b:	(bad)  [ecx+0x3a]
  40e66e:	push   ds
  40e66f:	sbb    al,0x9f
  40e671:	xchg   DWORD PTR [ebx],edi
  40e673:	mov    al,0x22
  40e675:	push   eax
  40e676:	and    ch,ah
  40e678:	cli    
  40e679:	loope  0x40e603
  40e67b:	jg     0x40e664
  40e67d:	mov    esp,0x545072b0
  40e682:	mov    bh,0x4d
  40e684:	jecxz  0x40e610
  40e686:	lods   al,BYTE PTR ds:[esi]
  40e687:	and    DWORD PTR [edx],0xffffffb2
  40e68a:	mov    cl,0x31
  40e68c:	lds    eax,FWORD PTR [ebp+ebx*2+0x5e]
  40e690:	lea    ecx,[eax]
  40e692:	mov    edi,0xa561c3d0
  40e697:	les    esi,FWORD PTR [esi+edx*1-0x72]
  40e69b:	gs popa 
  40e69d:	scas   al,BYTE PTR es:[edi]
  40e69e:	sub    ebp,DWORD PTR ss:[edx+edi*4-0x169ecf39]
  40e6a6:	push   cs
  40e6a7:	jp     0x40e689
  40e6a9:	dec    ebp
  40e6aa:	xchg   edi,eax
  40e6ab:	loop   0x40e6a0
  40e6ad:	(bad)  
  40e6ae:	(bad)  [eax-0x4cfef537]
  40e6b4:	fwait
  40e6b5:	inc    esi
  40e6b6:	popf   
  40e6b7:	sub    bl,bh
  40e6b9:	aad    0x9d
  40e6bb:	arpl   WORD PTR [edx-0x2d],bp
  40e6be:	inc    ecx
  40e6bf:	add    ch,BYTE PTR [eax]
  40e6c1:	ins    DWORD PTR es:[edi],dx
  40e6c2:	jge    0x40e702
  40e6c4:	sbb    DWORD PTR [ebx+ebp*4],ebp
  40e6c7:	mov    eax,ds:0xb5fcc4f6
  40e6cc:	push   ebx
  40e6cd:	cmp    al,0x1a
  40e6cf:	cdq    
  40e6d0:	pop    esi
  40e6d1:	or     DWORD PTR [edi],ebx
  40e6d3:	hlt    
  40e6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6d5:	in     al,dx
  40e6d6:	clc    
  40e6d7:	cmc    
  40e6d8:	pop    ecx
  40e6d9:	xor    esi,esp
  40e6db:	pusha  
  40e6dc:	mov    DWORD PTR [esi],edx
  40e6de:	leave  
  40e6df:	push   eax
  40e6e0:	fistp  QWORD PTR [ecx+0x1a]
  40e6e3:	ds jge 0x40e70a
  40e6e6:	(bad)  
  40e6e7:	adc    eax,0x576b37f7
  40e6ec:	and    esi,edx
  40e6ee:	(bad)  
  40e6ef:	lods   al,BYTE PTR ds:[esi]
  40e6f0:	mov    ebp,0x6f0752fb
  40e6f5:	mov    esp,0xd1a4290a
  40e6fa:	xchg   DWORD PTR [edi],edi
  40e6fc:	jl     0x40e747
  40e6fe:	xlat   BYTE PTR ds:[ebx]
  40e6ff:	fild   QWORD PTR [edx+0x5f]
  40e702:	dec    esi
  40e703:	ins    BYTE PTR es:[edi],dx
  40e704:	push   edx
  40e705:	stos   BYTE PTR es:[edi],al
  40e706:	push   0xec3efe8f
  40e70b:	or     BYTE PTR [edx-0x14],0xfe
  40e70f:	lahf   
  40e710:	mov    dl,0xaa
  40e712:	mov    bl,0xce
  40e714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e715:	mov    ds:0x81fb9d21,al
  40e71a:	fsub   QWORD PTR [ebx]
  40e71c:	je     0x40e72d
  40e71e:	sub    bh,BYTE PTR [eax]
  40e720:	mov    edi,0xf77b319e
  40e725:	xchg   edx,eax
  40e726:	imul   ecx,DWORD PTR [ecx-0x9],0xffffff95
  40e72a:	pop    es
  40e72b:	inc    edx
  40e72c:	fild   QWORD PTR [edx-0x7549c00a]
  40e732:	mov    al,0x86
  40e734:	call   0xfb56:0x55018aac
  40e73b:	dec    ebp
  40e73c:	sub    BYTE PTR [edi+0x47637b29],0xec
  40e743:	and    BYTE PTR [ecx*1-0x7acd07ec],bl
  40e74a:	bts    ebp,ebp
  40e74d:	dec    edx
  40e74e:	jo     0x40e739
  40e750:	xor    ebp,esp
  40e752:	aaa    
  40e753:	dec    ebx
  40e754:	imul   esp,DWORD PTR [edx],0x3
  40e757:	dec    ebx
  40e758:	retf   0x8f6a
  40e75b:	jge    0x40e7c3
  40e75d:	ins    DWORD PTR es:[edi],dx
  40e75e:	or     cl,0x1a
  40e761:	ficomp WORD PTR [ecx]
  40e763:	xor    dh,BYTE PTR [ecx+0x5]
  40e766:	sbb    BYTE PTR [edx],ch
  40e768:	push   esi
  40e769:	dec    ebx
  40e76a:	in     eax,dx
  40e76b:	ins    BYTE PTR es:[edi],dx
  40e76c:	into   
  40e76d:	xlat   BYTE PTR ds:[ebx]
  40e76e:	push   ebx
  40e76f:	in     al,0xf5
  40e771:	lods   eax,DWORD PTR ds:[esi]
  40e772:	inc    ecx
  40e773:	pop    edx
  40e774:	dec    esp
  40e775:	cld    
  40e776:	mov    edi,0xa08d7ab2
  40e77b:	xchg   esp,eax
  40e77c:	(bad)  
  40e77d:	gs mov dh,0x7d
  40e780:	inc    ecx
  40e781:	pop    DWORD PTR [eax]
  40e783:	mov    eax,0x3e93a5d9
  40e788:	dec    edx
  40e789:	push   0xffffffe0
  40e78b:	jge    0x40e7e9
  40e78d:	dec    ebx
  40e78e:	imul   ecx,DWORD PTR [ecx+0x4d16fedd],0xffffffa7
  40e795:	xor    edx,eax
  40e797:	pmaxub mm2,QWORD PTR [esi+eiz*2+0x523e5ad9]
  40e79f:	jl     0x40e7dd
  40e7a1:	fwait
  40e7a2:	and    dh,al
  40e7a4:	rcl    ah,1
  40e7a6:	mul    BYTE PTR [ebx+edi*1]
  40e7a9:	jmp    0x40e816
  40e7ab:	in     al,dx
  40e7ac:	sbb    edi,DWORD PTR [ebx]
  40e7ae:	stos   DWORD PTR es:[edi],eax
  40e7af:	xor    DWORD PTR ds:[edi],ebp
  40e7b2:	in     eax,dx
  40e7b3:	mov    edx,0x401c101d
  40e7b8:	cmp    DWORD PTR [ebx+ebp*8+0x4d],esi
  40e7bc:	scas   al,BYTE PTR es:[edi]
  40e7bd:	mov    dl,0x7b
  40e7bf:	inc    ebx
  40e7c0:	mov    dl,ah
  40e7c2:	push   ds
  40e7c3:	test   BYTE PTR [ebp-0x6e],cl
  40e7c6:	out    dx,eax
  40e7c7:	mov    dh,0xb1
  40e7c9:	inc    edx
  40e7ca:	dec    edi
  40e7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7cc:	sbb    al,BYTE PTR [edi]
  40e7ce:	inc    esp
  40e7cf:	aas    
  40e7d0:	ins    DWORD PTR es:[edi],dx
  40e7d1:	inc    eax
  40e7d2:	pop    ebp
  40e7d3:	add    dh,BYTE PTR [ebx-0x1c02ca0f]
  40e7d9:	push   ebp
  40e7da:	push   cs
  40e7db:	mov    al,0x87
  40e7dd:	xchg   ebx,eax
  40e7de:	into   
  40e7df:	push   eax
  40e7e0:	cmp    cl,cl
  40e7e2:	das    
  40e7e3:	enter  0xb021,0x5c
  40e7e7:	cmp    al,cl
  40e7e9:	je     0x40e7bd
  40e7eb:	stos   BYTE PTR es:[edi],al
  40e7ec:	bound  esi,QWORD PTR [ebp-0x73ff3470]
  40e7f2:	stos   DWORD PTR es:[edi],eax
  40e7f3:	call   DWORD PTR [ecx-0x62558a70]
  40e7f9:	add    bh,bh
  40e7fb:	mov    bl,0xea
  40e7fd:	or     bh,BYTE PTR [ebx+eiz*8-0x20]
  40e801:	pushf  
  40e802:	cld    
  40e803:	xor    eax,DWORD PTR [ebx+0x5f]
  40e806:	xor    DWORD PTR [ecx+edx*8-0xf],esp
  40e80a:	xor    DWORD PTR es:[edi-0x7c31083f],esi
  40e811:	sti    
  40e812:	int    0x60
  40e814:	sub    edi,esi
  40e816:	fwait
  40e817:	jb     0x40e854
  40e819:	dec    ebp
  40e81a:	ja     0x40e85d
  40e81c:	cld    
  40e81d:	mov    ecx,0x2bfae753
  40e822:	jg     0x40e838
  40e824:	push   ebx
  40e825:	jp     0x40e850
  40e827:	add    eax,0x60a12e18
  40e82c:	pop    ds
  40e82d:	lea    ecx,[eax]
  40e82f:	jmp    FWORD PTR [ebx+esi*1+0xe]
  40e833:	out    dx,eax
  40e834:	(bad)
  40e837:	jnp    0x40e89d
  40e839:	mov    esi,ss
  40e83b:	jmp    DWORD PTR [ecx-0x5e]
  40e83e:	ds mov bl,0x73
  40e841:	jg     0x40e7fb
  40e843:	xor    BYTE PTR ds:0x666d2cab,bl
  40e849:	jbe    0x40e7f2
  40e84b:	unpckhps xmm4,XMMWORD PTR [edx-0x1f905e28]
  40e852:	pop    esi
  40e853:	xchg   DWORD PTR [edx+eax*1+0x5],ebp
  40e857:	sub    ebp,ebp
  40e859:	shl    DWORD PTR [eax-0x5],1
  40e85c:	cs xor eax,0xe3b86cf6
  40e862:	mov    dl,0x8d
  40e864:	mov    esp,cs
  40e866:	addr16 push ecx
  40e868:	jge    0x40e84d
  40e86a:	adc    al,0xfd
  40e86c:	es dec ebx
  40e86e:	mov    edx,0x84e4e407
  40e873:	sub    DWORD PTR [ecx+ecx*2+0x241da304],edi
  40e87a:	scas   eax,DWORD PTR es:[edi]
  40e87b:	mov    ecx,0x612036c2
  40e880:	andnps xmm7,XMMWORD PTR ds:0xb8d7ba18
  40e887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e888:	adc    DWORD PTR [edi+0x2c85bfcb],esi
  40e88e:	cwde   
  40e88f:	pop    esi
  40e891:	js     0x40e8a0
  40e893:	test   eax,0x4b2b2d4a
  40e898:	(bad)  
  40e899:	adc    al,0xe0
  40e89b:	in     al,0x94
  40e89d:	(bad)  
  40e89e:	aas    
  40e89f:	in     al,0x22
  40e8a1:	push   edx
  40e8a2:	push   ss
  40e8a3:	and    BYTE PTR [ebx+0x4a],0xd3
  40e8a7:	mov    al,ds:0x50c48269
  40e8ac:	fldcw  WORD PTR [edx+0x41082599]
  40e8b2:	pop    ebx
  40e8b3:	leave  
  40e8b4:	push   esp
  40e8b5:	daa    
  40e8b6:	mov    ebx,0xc33563d4
  40e8bb:	mov    ebx,0x23519c56
  40e8c0:	sbb    bl,0x4b
  40e8c3:	call   0xa61339fa
  40e8c8:	rol    DWORD PTR [edx],0x38
  40e8cb:	pop    ecx
  40e8cc:	pop    esp
  40e8cd:	mov    al,ds:0x259c0eb1
  40e8d2:	sbb    BYTE PTR [edi],0xc6
  40e8d5:	call   0x1225:0x96ec7ecc
  40e8dc:	jo     0x40e89f
  40e8de:	sbb    ebx,DWORD PTR [ebx-0x62]
  40e8e1:	mov    ebp,esi
  40e8e3:	test   al,0xb2
  40e8e5:	dec    ecx
  40e8e6:	mov    ch,0x4
  40e8e8:	mov    ds,edx
  40e8ea:	xchg   BYTE PTR [eax],al
  40e8ec:	dec    edi
  40e8ed:	dec    esp
  40e8ee:	ja     0x40e8ab
  40e8f0:	jmp    0xb64f8e4d
  40e8f5:	sub    cl,BYTE PTR [ecx-0x3d464d23]
  40e8fb:	ds inc eax
  40e8fd:	fistp  DWORD PTR [ebp+0x646c8e28]
  40e903:	mov    dl,0x22
  40e905:	aaa    
  40e906:	sbb    DWORD PTR [ebx-0x3],esi
  40e909:	stos   DWORD PTR es:[edi],eax
  40e90a:	pop    ds
  40e90b:	sbb    ch,BYTE PTR [esi+0x74]
  40e90e:	xchg   ebp,eax
  40e90f:	add    al,0xe8
  40e911:	loope  0x40e8d0
  40e913:	inc    edx
  40e914:	push   edi
  40e915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e916:	mov    ds:0xb878961e,al
  40e91b:	(bad)  
  40e91c:	sti    
  40e91d:	add    dh,BYTE PTR [ecx+0x5d44e038]
  40e923:	fs xor edi,edi
  40e926:	xlat   BYTE PTR ds:[ebx]
  40e927:	pop    ebp
  40e928:	(bad)  
  40e929:	xchg   esp,eax
  40e92a:	jmp    FWORD PTR [esi]
  40e92c:	in     al,0x50
  40e92e:	shl    BYTE PTR [ebx-0x335c2d09],0x31
  40e935:	push   ebp
  40e936:	std    
  40e937:	push   ss
  40e938:	adc    DWORD PTR [eax+0x8],eax
  40e93b:	mov    esi,DWORD PTR [edx-0x21]
  40e93e:	pop    esi
  40e93f:	push   cs
  40e940:	int    0x35
  40e942:	add    BYTE PTR [esi+ebx*4-0x30],cl
  40e946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e947:	pop    esp
  40e948:	imul   edx,ebx,0x4184e7f4
  40e94e:	pop    edx
  40e94f:	test   esi,edx
  40e951:	mov    WORD PTR [eax+0xde87239],gs
  40e957:	adc    al,0x74
  40e959:	mov    edx,0x48f52187
  40e95e:	mov    bh,0xd6
  40e960:	xor    dl,ch
  40e962:	mov    ah,0xec
  40e964:	int    0x7b
  40e966:	gs mov eax,0xf33cd68c
  40e96c:	dec    edx
  40e96d:	dec    ebp
  40e96e:	cmp    eax,0x54a4b42d
  40e973:	jnp    0x40e93e
  40e975:	mov    esi,0x3683fedc
  40e97a:	ficom  DWORD PTR [ebx+0x17423f41]
  40e980:	jns    0x40e944
  40e982:	add    ecx,DWORD PTR [esi-0x2be07415]
  40e988:	xor    BYTE PTR [ebx],bl
  40e98a:	ins    BYTE PTR es:[edi],dx
  40e98b:	mov    dl,BYTE PTR [eax+esi*1]
  40e98e:	jecxz  0x40e9ee
  40e990:	icebp  
  40e991:	sbb    al,0x8e
  40e993:	xor    eax,0xe1c6fe6
  40e998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e999:	sahf   
  40e99a:	push   ecx
  40e99b:	or     ecx,eax
  40e99d:	arpl   WORD PTR [ebx+0x7212a670],cx
  40e9a3:	in     eax,0x1f
  40e9a5:	inc    eax
  40e9a6:	outs   dx,BYTE PTR ds:[esi]
  40e9a7:	add    dh,BYTE PTR [eax+0x1d7e7863]
  40e9ad:	mov    cs,WORD PTR [ebp+0x19a7cac5]
  40e9b3:	psubw  mm1,mm2
  40e9b6:	jb     0x40e9b0
  40e9b8:	(bad)  
  40e9b9:	js     0x40e957
  40e9bb:	fisttp DWORD PTR [esi+esi*4+0x1e]
  40e9bf:	out    0xd2,eax
  40e9c1:	add    eax,0xc76096a0
  40e9c6:	in     eax,dx
  40e9c7:	lds    ecx,FWORD PTR [esi+0x6e]
  40e9ca:	cdq    
  40e9cb:	cwde   
  40e9cc:	pop    ss
  40e9cd:	adc    eax,0xf1f6a076
  40e9d2:	xor    eax,0x716225ab
  40e9d7:	mov    dh,0xbc
  40e9d9:	mov    eax,ds:0xf6456a68
  40e9de:	cmp    al,0xa5
  40e9e0:	je     0x40e9f5
  40e9e2:	icebp  
  40e9e3:	mov    ds,WORD PTR [eax+0x58]
  40e9e6:	test   BYTE PTR [edx-0x6fd50e42],bl
  40e9ec:	inc    esp
  40e9ed:	std    
  40e9ee:	jmp    0x4800c3e
  40e9f3:	sub    dh,BYTE PTR [ebx-0x75]
  40e9f6:	(bad)  
  40e9f7:	ins    BYTE PTR es:[edi],dx
  40e9f8:	imul   esi,eax,0x529b8e91
  40e9fe:	add    al,0x6e
  40ea00:	imul   DWORD PTR [ebx-0x740906ba]
  40ea06:	fidiv  WORD PTR [edi]
  40ea08:	sbb    bl,BYTE PTR [edi-0x33]
  40ea0b:	dec    ebp
  40ea0c:	ins    BYTE PTR es:[edi],dx
  40ea0d:	rcr    DWORD PTR [ecx],cl
  40ea0f:	call   0x459a4942
  40ea14:	sub    ch,BYTE PTR [ebx]
  40ea16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea17:	hlt    
  40ea18:	loope  0x40ea5e
  40ea1a:	push   edx
  40ea1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea1c:	add    eax,0x67fcf988
  40ea21:	or     ah,BYTE PTR [ebx-0x71]
  40ea24:	add    al,0xb2
  40ea26:	iret   
  40ea27:	int    0xc0
  40ea29:	icebp  
  40ea2a:	pushf  
  40ea2b:	pop    esi
  40ea2c:	fst    st(0)
  40ea2e:	test   al,0xe8
  40ea30:	mov    ah,0x91
  40ea32:	dec    ebx
  40ea33:	aam    0x54
  40ea35:	arpl   WORD PTR [ebp+0x1c4c5f25],bx
  40ea3b:	pop    esp
  40ea3c:	mov    edx,0xe01e742b
  40ea41:	popf   
  40ea42:	ror    BYTE PTR [edi-0x38],1
  40ea45:	jmp    0x40ea32
  40ea47:	frstor [edx+0x28]
  40ea4a:	adc    BYTE PTR [ebx],bl
  40ea4c:	push   0x3
  40ea4e:	mov    edi,DWORD PTR [edx]
  40ea50:	xor    esp,eax
  40ea52:	xchg   edx,edx
  40ea54:	jecxz  0x40ea1f
  40ea56:	js     0x40ead3
  40ea58:	add    ebx,DWORD PTR [esi]
  40ea5a:	cmp    bh,BYTE PTR [ebx-0x48]
  40ea5d:	adc    DWORD PTR [edx-0x3e],0x9b361d51
  40ea64:	or     al,0xc
  40ea66:	leave  
  40ea67:	out    dx,eax
  40ea68:	and    cl,BYTE PTR [edx]
  40ea6a:	rcr    bh,1
  40ea6c:	push   ebx
  40ea6d:	les    edx,FWORD PTR [edi-0x164d29f2]
  40ea73:	and    BYTE PTR [ebx+ebx*1+0x784c9ed2],al
  40ea7a:	xchg   cl,bl
  40ea7c:	adc    BYTE PTR [ebp-0xb48f9bc],bh
  40ea82:	push   esi
  40ea83:	fistp  WORD PTR [esi+0x69]
  40ea86:	enter  0x5958,0xdf
  40ea8a:	fxam   
  40ea8c:	lock ror BYTE PTR ds:0x157b3125,cl
  40ea93:	daa    
  40ea94:	pop    ecx
  40ea95:	lea    edx,[ecx-0x779efa56]
  40ea9b:	push   esi
  40ea9c:	sub    edi,edx
  40ea9e:	sbb    edi,DWORD PTR [edx-0x67b99019]
  40eaa4:	push   ds
  40eaa5:	test   DWORD PTR [esi+0x1b],eax
  40eaa8:	cmp    eax,0x7338946b
  40eaad:	jns    0x40eaef
  40eaaf:	cdq    
  40eab0:	imul   esp,edi,0x2181e0a7
  40eab6:	sub    DWORD PTR [ebp-0x2d1325d3],edi
  40eabc:	dec    ebx
  40eabd:	lea    edx,[edx+eax*2-0x433ae29b]
  40eac4:	jmp    0x40ea72
  40eac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac7:	adc    esi,DWORD PTR [ecx+0x0]
  40eaca:	cld    
  40eacb:	popf   
  40eacc:	out    dx,al
  40eacd:	popf   
  40eace:	pop    ebx
  40eacf:	stos   DWORD PTR es:[edi],eax
  40ead0:	or     ecx,DWORD PTR [eax*8+0x4f7b7520]
  40ead7:	rcr    al,0x1e
  40eada:	inc    eax
  40eadb:	mov    dl,0xe4
  40eadd:	aaa    
  40eade:	push   ss
  40eadf:	and    BYTE PTR [esi+0x73],al
  40eae2:	retf   0xf7d
  40eae5:	cdq    
  40eae6:	sbb    ebp,edx
  40eae8:	add    al,0xd8
  40eaea:	pop    es
  40eaeb:	aad    0x7c
  40eaed:	bound  ecx,QWORD PTR [edx+0x825a459]
  40eaf3:	retf   
  40eaf4:	pop    ebp
  40eaf5:	inc    esi
  40eaf6:	jge    0x40eae1
  40eaf8:	ret    
  40eaf9:	adc    al,bh
  40eafb:	mov    edi,0xbe8805e5
  40eb00:	fmul   QWORD PTR ds:0xeec0213
  40eb06:	arpl   WORD PTR [esp+edx*4],bx
  40eb09:	jle    0x40eb29
  40eb0b:	in     eax,dx
  40eb0c:	loopne 0x40eb89
  40eb0e:	clc    
  40eb0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb10:	(bad)  
  40eb11:	aaa    
  40eb12:	mov    bl,0xe4
  40eb14:	sbb    al,0x25
  40eb16:	out    dx,eax
  40eb17:	rol    BYTE PTR [ebx-0x5e],0x7a
  40eb1b:	das    
  40eb1c:	aam    0x4c
  40eb1e:	mov    ecx,0x62e5f054
  40eb23:	xor    bl,BYTE PTR [esi-0x15b4ffd3]
  40eb29:	retf   0xcf12
  40eb2c:	enter  0xe8e2,0xc8
  40eb30:	adc    dh,BYTE PTR [ecx]
  40eb32:	mov    ecx,0x8efb1f5a
  40eb37:	xor    al,0x8a
  40eb39:	sub    dl,BYTE PTR ds:0x8f11e7de
  40eb3f:	inc    ebx
  40eb40:	xchg   ecx,eax
  40eb41:	sub    eax,0xc41b2a48
  40eb46:	xor    eax,0xa06b8b45
  40eb4b:	sub    ebp,DWORD PTR [edi+0x7f]
  40eb4e:	(bad)  
  40eb4f:	xchg   eax,ebp
  40eb51:	comiss xmm2,DWORD PTR [esi+ecx*1-0x7841b57c]
  40eb59:	in     al,dx
  40eb5a:	fisubr DWORD PTR [edx+0x72]
  40eb5d:	sahf   
  40eb5e:	out    dx,al
  40eb5f:	or     al,0xe3
  40eb61:	mov    ecx,DWORD PTR [esi]
  40eb63:	mov    esi,0x302707b5
  40eb68:	xchg   edi,eax
  40eb69:	mov    ds:0x820f8ec7,al
  40eb6e:	mov    edx,0x80056a10
  40eb73:	add    al,0xba
  40eb75:	inc    edi
  40eb76:	push   DWORD PTR [ecx-0xe]
  40eb79:	pop    eax
  40eb7a:	jge    0x40eb4a
  40eb7c:	dec    ebx
  40eb7d:	sub    esp,edx
  40eb7f:	xor    BYTE PTR [ebx+edx*8],0xb1
  40eb83:	jp     0x40eb42
  40eb85:	cmp    al,0xcd
  40eb87:	arpl   WORD PTR [edx+eiz*1-0x61],dx
  40eb8b:	adc    al,0xbd
  40eb8d:	mov    dl,0x45
  40eb8f:	and    DWORD PTR [edi],edx
  40eb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb92:	sbb    eax,0xb9afa2bd
  40eb97:	push   esi
  40eb98:	mov    esi,0xfdec9c63
  40eb9d:	mov    ch,0x4f
  40eb9f:	in     eax,0x31
  40eba1:	cmp    DWORD PTR [ebx+edx*4-0x6f],esi
  40eba5:	and    dh,BYTE PTR [edi]
  40eba7:	adc    esi,DWORD PTR [ebx-0x531d82f3]
  40ebad:	into   
  40ebae:	mov    BYTE PTR [edi+eiz*4],dh
  40ebb1:	xor    eax,0x2e177ec3
  40ebb6:	adc    ecx,DWORD PTR [ecx+eiz*2+0xa]
  40ebba:	nop
  40ebbb:	push   edi
  40ebbc:	mov    ebp,0x6a3c2639
  40ebc1:	cld    
  40ebc2:	xchg   DWORD PTR [eax+0x43],ebp
  40ebc5:	shl    BYTE PTR [ebx],1
  40ebc7:	mov    dl,bh
  40ebc9:	dec    esp
  40ebca:	enter  0x2c9,0xef
  40ebce:	sbb    bh,BYTE PTR [ecx+edi*2-0x3a38f5df]
  40ebd5:	rol    DWORD PTR ds:0x6f66d274,1
  40ebdb:	mov    BYTE PTR [ebp-0x70a87457],cl
  40ebe1:	sub    BYTE PTR [ecx],bl
  40ebe3:	and    cl,dl
  40ebe5:	mov    esi,0xf90171b8
  40ebea:	xor    BYTE PTR ds:0xaa18d63d,bh
  40ebf0:	add    al,0xcb
  40ebf2:	or     dh,BYTE PTR gs:[eax]
  40ebf5:	sbb    al,dl
  40ebf7:	push   esi
  40ebf8:	test   al,0x9b
  40ebfa:	inc    esi
  40ebfb:	int    0xcc
  40ebfd:	int3   
  40ebfe:	adc    ah,BYTE PTR [ebp-0x4c]
  40ec01:	xchg   esi,edx
  40ec03:	dec    esp
  40ec04:	cs push ecx
  40ec06:	cmp    bh,BYTE PTR [ebx+0x23]
  40ec09:	mov    ah,0x36
  40ec0b:	test   DWORD PTR [ecx],esp
  40ec0d:	push   0x34bc932c
  40ec12:	fstp   DWORD PTR [ebx-0x68d842b9]
  40ec18:	jae    0x40ec08
  40ec1a:	bound  esi,QWORD PTR [ebx+0x1c]
  40ec1d:	cmp    ecx,esi
  40ec1f:	pop    esp
  40ec20:	push   0x27eb7bde
  40ec25:	inc    eax
  40ec26:	js     0x40ec74
  40ec28:	cdq    
  40ec29:	aad    0x4
  40ec2b:	(bad)  [edi-0x1c8136b1]
  40ec31:	dec    ebx
  40ec32:	test   DWORD PTR [edi+0x3df6f4e5],esp
  40ec38:	push   ebx
  40ec39:	adc    ebp,ebp
  40ec3b:	les    eax,FWORD PTR [esi+0x12e5c6b2]
  40ec41:	pop    ebp
  40ec42:	aam    0xde
  40ec44:	push   cs
  40ec45:	jp     0x40ec27
  40ec47:	mov    eax,0x9e8ac3f7
  40ec4c:	dec    edi
  40ec4d:	in     al,dx
  40ec4e:	mov    edx,DWORD PTR [ebx]
  40ec50:	push   esi
  40ec51:	movsx  edx,BYTE PTR [esi+0x76]
  40ec55:	data16 adc al,BYTE PTR [eax+edx*1-0xa]
  40ec5a:	(bad)  
  40ec5b:	push   esp
  40ec5c:	ja     0x40eca0
  40ec5e:	and    esp,DWORD PTR [eax]
  40ec60:	loop   0x40ec1f
  40ec62:	(bad)  
  40ec63:	jno    0x40ebf1
  40ec65:	out    0xca,eax
  40ec67:	mov    esp,0x6754313e
  40ec6c:	jns    0x40ec7e
  40ec6e:	inc    edx
  40ec6f:	nop
  40ec70:	jmp    0x5553dd16
  40ec75:	sbb    DWORD PTR [edi],esi
  40ec77:	jl     0x40ec59
  40ec79:	sahf   
  40ec7a:	xor    al,bl
  40ec7c:	mov    WORD PTR [edi+0x53],cs
  40ec7f:	addr16 call 0xfd16:0xb4fee917
  40ec87:	rol    DWORD PTR [eax+eiz*2],cl
  40ec8a:	pop    ss
  40ec8b:	or     al,0x28
  40ec8d:	adc    al,0x96
  40ec8f:	les    ebp,FWORD PTR [edx]
  40ec91:	xchg   esp,eax
  40ec92:	jne    0x40ec99
  40ec94:	jno    0x40ec68
  40ec96:	nop
  40ec97:	sbb    BYTE PTR [ebx+ebp*8],0x96
  40ec9b:	or     DWORD PTR [ebp+eax*4-0x50],eax
  40ec9f:	mov    al,ds:0xbfd403b1
  40eca4:	fmul   st(3),st
  40eca6:	hlt    
  40eca7:	(bad)  
  40eca9:	mov    eax,0xce1ff69
  40ecae:	sbb    esi,ecx
  40ecb0:	mov    eax,0x78439056
  40ecb5:	xchg   ebp,eax
  40ecb6:	jne    0x40ec76
  40ecb8:	repnz cmp eax,esp
  40ecbb:	hlt    
  40ecbc:	xor    ah,bl
  40ecbe:	inc    eax
  40ecbf:	jp     0x40ecfa
  40ecc1:	push   cs
  40ecc2:	lock mov al,0x49
  40ecc5:	in     eax,dx
  40ecc6:	fiadd  DWORD PTR ds:0x9e2ab060
  40eccc:	into   
  40eccd:	mov    eax,0x85a11d88
  40ecd2:	ins    BYTE PTR es:[edi],dx
  40ecd3:	lods   al,BYTE PTR ds:[esi]
  40ecd4:	mov    dh,0x91
  40ecd6:	mov    ebx,0x90a20838
  40ecdb:	cld    
  40ecdc:	(bad)  
  40ecdd:	cmp    ebp,DWORD PTR [esi+0x64]
  40ece0:	pop    eax
  40ece1:	adc    eax,DWORD PTR [ecx+0x2ccfd3bc]
  40ece7:	cs dec eax
  40ece9:	push   0x6a529087
  40ecee:	mov    ebx,esp
  40ecf0:	push   ds
  40ecf1:	mov    BYTE PTR [edi-0x9],ch
  40ecf4:	jecxz  0x40ecab
  40ecf6:	jae    0x40ed5b
  40ecf8:	adc    DWORD PTR [edi-0x3f],esp
  40ecfb:	(bad)  
  40ecfc:	leave  
  40ecfd:	xor    al,0xe5
  40ecff:	ficomp WORD PTR [edi-0x5ac01ec6]
  40ed05:	jmp    0x40ed53
  40ed07:	sbb    esi,DWORD PTR [ebx-0x6daacb8f]
  40ed0d:	in     eax,dx
  40ed0e:	push   0xffffffd4
  40ed10:	in     al,0xb0
  40ed12:	sub    DWORD PTR [edx],edx
  40ed14:	xchg   bh,cl
  40ed16:	adc    cl,BYTE PTR [esp+edx*8-0xf]
  40ed1a:	int    0xba
  40ed1c:	lahf   
  40ed1d:	xchg   DWORD PTR [ebx-0xfd59b01],ecx
  40ed23:	inc    edi
  40ed24:	gs jb  0x40ed84
  40ed27:	xchg   esi,eax
  40ed28:	in     eax,dx
  40ed29:	fwait
  40ed2a:	and    ebp,edi
  40ed2c:	and    BYTE PTR [edi-0x302aee99],ah
  40ed32:	pop    eax
  40ed33:	cmp    BYTE PTR [esi],0xe6
  40ed36:	(bad)  
  40ed37:	fcmovne st,st(2)
  40ed39:	push   ss
  40ed3a:	(bad)  
  40ed3c:	adc    bh,bh
  40ed3e:	and    BYTE PTR [edi],bl
  40ed40:	dec    ebx
  40ed41:	sub    DWORD PTR [ecx],0xad72d5f9
  40ed47:	rcl    BYTE PTR [esi],0xb4
  40ed4a:	pop    ebx
  40ed4b:	ror    BYTE PTR [ebx-0x14],0xcd
  40ed4f:	xchg   edx,eax
  40ed50:	enter  0x1b10,0xb3
  40ed54:	xchg   ecx,eax
  40ed55:	sar    DWORD PTR [ecx],0x9c
  40ed58:	fisttp WORD PTR [ebx-0x45]
  40ed5b:	xor    DWORD PTR [ebp+0x3b8556ea],eax
  40ed61:	push   ds
  40ed62:	rcr    dl,1
  40ed64:	cmp    eax,0x95bed13
  40ed69:	push   ecx
  40ed6a:	pop    ss
  40ed6b:	(bad)  
  40ed6c:	fistp  QWORD PTR [eax]
  40ed6e:	jo     0x40ed9a
  40ed70:	cs addr16 jbe 0x40edc0
  40ed74:	inc    eax
  40ed75:	mov    ebp,DWORD PTR [edx]
  40ed77:	cmp    al,0x5b
  40ed79:	pop    ebp
  40ed7a:	cmp    DWORD PTR [eax-0x6ae9d523],eax
  40ed80:	repz dec edi
  40ed82:	dec    ecx
  40ed83:	pop    edi
  40ed84:	lock scas al,BYTE PTR es:[edi]
  40ed86:	cmp    DWORD PTR [edi-0x4d0560b4],ebp
  40ed8c:	inc    eax
  40ed8d:	xor    BYTE PTR [ebp+0x48eed705],0x7c
  40ed94:	dec    edi
  40ed95:	scas   al,BYTE PTR es:[edi]
  40ed96:	lock fwait
  40ed98:	push   esp
  40ed99:	lahf   
  40ed9a:	sub    eax,0xa8e21a3e
  40ed9f:	dec    esi
  40eda0:	popf   
  40eda1:	push   edx
  40eda2:	pop    eax
  40eda3:	add    DWORD PTR [edi+0x52aa9e4f],esp
  40eda9:	and    al,BYTE PTR [edx+0x6397cba5]
  40edaf:	jnp    0x40ed38
  40edb1:	mov    DWORD PTR [ecx-0x76],edx
  40edb4:	pop    esp
  40edb5:	jle    0x40ed73
  40edb7:	adc    BYTE PTR ds:0xce0e94bb,0x41
  40edbe:	inc    esp
  40edbf:	js     0x40edcb
  40edc1:	adc    al,dl
  40edc3:	mov    ds:0x3ed87f6a,al
  40edc8:	and    eax,0x5da8db3
  40edcd:	pop    ebp
  40edce:	clc    
  40edcf:	xchg   ebp,eax
  40edd0:	fsub   st,st(6)
  40edd2:	cmp    DWORD PTR [ebx],edi
  40edd4:	in     eax,dx
  40edd5:	enter  0xb7f2,0xe
  40edd9:	out    0xa4,eax
  40eddb:	loope  0x40eddc
  40eddd:	xlat   BYTE PTR ds:[ebx]
  40edde:	rcr    BYTE PTR [ecx-0x75],0x11
  40ede2:	fld    TBYTE PTR [eax+edx*8+0x5b]
  40ede6:	hlt    
  40ede7:	cld    
  40ede8:	je     0x40ed74
  40edea:	xchg   ecx,eax
  40edeb:	cli    
  40edec:	xor    DWORD PTR [edx+0x5c],ecx
  40edef:	loope  0x40ee18
  40edf1:	sub    DWORD PTR [ecx],ecx
  40edf3:	inc    edi
  40edf4:	data16 fsubp st(3),st
  40edf7:	fist   WORD PTR [esi-0x2f]
  40edfa:	sbb    ah,ch
  40edfc:	inc    esp
  40edfd:	scas   al,BYTE PTR es:[edi]
  40edfe:	in     al,dx
  40edff:	jecxz  0x40eda6
  40ee01:	lea    esp,[eax-0x74]
  40ee04:	aas    
  40ee05:	jp     0x40edcb
  40ee07:	mov    BYTE PTR [ebp+0x37],ch
  40ee0a:	or     esp,eax
  40ee0c:	cmp    bl,ah
  40ee0e:	ds pop edi
  40ee10:	mov    ds:0xbb68e998,eax
  40ee15:	jmp    FWORD PTR [esi]
  40ee17:	cmp    esp,edx
  40ee19:	jmp    0x7b19dc31
  40ee1e:	mov    ch,0x2b
  40ee20:	xor    al,0xa9
  40ee22:	cwde   
  40ee23:	fisubr WORD PTR [eax-0x258d4f45]
  40ee29:	ds jno 0x40ee9e
  40ee2c:	shl    BYTE PTR [ebx+0x2e4de9a7],1
  40ee32:	sar    ch,cl
  40ee34:	lods   al,BYTE PTR ds:[esi]
  40ee35:	shr    DWORD PTR [ecx],0x55
  40ee38:	out    dx,eax
  40ee39:	loopne 0x40ee42
  40ee3b:	dec    edx
  40ee3c:	mov    es,WORD PTR [edx-0x18]
  40ee3f:	loopne 0x40edd2
  40ee41:	mov    edx,0xc970698d
  40ee46:	stos   DWORD PTR es:[edi],eax
  40ee47:	out    0x69,al
  40ee49:	dec    ebp
  40ee4a:	pop    esp
  40ee4b:	fs std 
  40ee4d:	adc    eax,DWORD PTR [edx]
  40ee4f:	pop    edx
  40ee50:	pusha  
  40ee51:	and    eax,0x925d803d
  40ee56:	in     al,dx
  40ee57:	inc    ebp
  40ee58:	mov    ds:0x154f9ca0,al
  40ee5d:	ds pop ss
  40ee5f:	or     sp,WORD PTR [edi-0x52]
  40ee63:	imul   edx,DWORD PTR [eax+0x15d519f3],0xffffff9c
  40ee6a:	xchg   esp,eax
  40ee6b:	jp     0x40ee27
  40ee6d:	add    BYTE PTR [ecx-0x203ee0b5],bl
  40ee73:	mov    ds:0x69772dcd,al
  40ee78:	xor    ah,BYTE PTR [esi+0x5]
  40ee7b:	push   ebx
  40ee7c:	test   eax,0xe657b0bb
  40ee81:	cmc    
  40ee82:	jmp    DWORD PTR [edx+0x35]
  40ee85:	xchg   esp,eax
  40ee86:	inc    edx
  40ee87:	lock aaa 
  40ee89:	fcom   DWORD PTR [edi+edx*1-0x1da53ae9]
  40ee90:	pop    ebp
  40ee91:	(bad)  
  40ee92:	mov    edx,0xebba998a
  40ee97:	sub    al,0x74
  40ee99:	cmp    eax,DWORD PTR [edx]
  40ee9b:	sbb    dl,ah
  40ee9d:	push   ebx
  40ee9e:	nop
  40ee9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eea0:	pop    esi
  40eea1:	div    dl
  40eea3:	fsubr  DWORD PTR [ebp+0x73]
  40eea6:	jp     0x40eeb7
  40eea8:	inc    esi
  40eea9:	mov    eax,ds:0xe818ddb9
  40eeae:	leave  
  40eeaf:	mov    esi,0x1462a1eb
  40eeb4:	inc    edx
  40eeb5:	mov    edi,0x5b9a4b44
  40eeba:	stc    
  40eebb:	ins    BYTE PTR es:[edi],dx
  40eebc:	(bad)  
  40eebe:	xor    BYTE PTR [ebp-0x4d],ch
  40eec1:	push   cs
  40eec2:	in     al,0x9a
  40eec4:	retf   0x8b19
  40eec7:	pop    ecx
  40eec8:	pop    esi
  40eec9:	in     al,dx
  40eeca:	in     al,dx
  40eecb:	or     eax,0x29943f59
  40eed0:	cmp    BYTE PTR [ebp-0x22],dh
  40eed3:	out    dx,al
  40eed4:	addr16 push es
  40eed6:	mov    ecx,0xd4c75175
  40eedb:	fnstenv [ebx-0x3963d293]
  40eee1:	push   ecx
  40eee2:	dec    edx
  40eee3:	mov    ds,WORD PTR [edi+0x4e]
  40eee6:	imul   esp,DWORD PTR [edx],0x4eded235
  40eeec:	push   ebp
  40eeed:	ficom  DWORD PTR [ecx-0x6c3ca5ed]
  40eef3:	lods   al,BYTE PTR ds:[esi]
  40eef4:	ret    0xbac9
  40eef7:	jne    0x40ee9e
  40eef9:	mov    cl,0x68
  40eefb:	pop    ebx
  40eefc:	cmp    esp,DWORD PTR [edx+0x384ac77f]
  40ef02:	lea    ecx,[eax]
  40ef04:	test   eax,0x5c2e6aa0
  40ef09:	xor    BYTE PTR [edx+eax*1],ah
  40ef0c:	xchg   esp,eax
  40ef0d:	xchg   esi,eax
  40ef0e:	call   0x8d878980
  40ef13:	popa   
  40ef14:	push   ecx
  40ef15:	jecxz  0x40ee9c
  40ef17:	jg     0x40eeb5
  40ef19:	xor    BYTE PTR [edx],bh
  40ef1b:	push   esi
  40ef1c:	sub    al,0xf1
  40ef1e:	adc    BYTE PTR [ecx+0x2fb73d0b],ah
  40ef24:	jg     0x40ef1e
  40ef26:	jne    0x40eef9
  40ef28:	cmp    BYTE PTR [ecx],cl
  40ef2a:	clc    
  40ef2b:	jl     0x40ef4f
  40ef2d:	push   0xffffffbf
  40ef2f:	jl     0x40eec3
  40ef31:	fadd   QWORD PTR [ecx]
  40ef33:	push   ss
  40ef34:	mov    ebx,0x4b07cf99
  40ef39:	push   edx
  40ef3a:	lods   al,BYTE PTR ds:[esi]
  40ef3b:	mov    ecx,0xe060e9
  40ef40:	and    BYTE PTR [esi+0x3a],ch
  40ef43:	div    DWORD PTR [edx]
  40ef45:	dec    ebp
  40ef46:	sub    eax,0xbd53be0f
  40ef4b:	add    eax,0x1adb1d0b
  40ef50:	out    0x2c,eax
  40ef52:	sub    esp,DWORD PTR [esp+ecx*8-0x38]
  40ef56:	xor    al,BYTE PTR ds:[ecx+eiz*8]
  40ef5a:	aaa    
  40ef5b:	push   ebp
  40ef5c:	jmp    0xf99dd55c
  40ef61:	dec    ecx
  40ef62:	test   DWORD PTR [eax],ebp
  40ef64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef65:	sbb    BYTE PTR ds:0xd9cfbd4d,ch
  40ef6b:	jnp    0x40ef35
  40ef6d:	ss jae 0x40ef6e
  40ef70:	in     eax,0x5c
  40ef72:	sub    bh,ah
  40ef74:	imul   esi,DWORD PTR [ebx],0xffd7f129
  40ef7a:	jnp    0x40efb0
  40ef7c:	push   0x9cc3ad1e
  40ef81:	and    al,0x95
  40ef83:	adc    eax,0x76db3316
  40ef88:	mov    al,dl
  40ef8a:	jne    0x40eff7
  40ef8c:	xor    BYTE PTR ds:0x4377314a,dh
  40ef92:	inc    edx
  40ef93:	out    dx,al
  40ef94:	loopne 0x40ef53
  40ef96:	(bad)  
  40ef97:	dec    ebx
  40ef98:	dec    edi
  40ef99:	(bad)  
  40ef9a:	fnstcw WORD PTR [esi+edi*8+0x3ed94d3e]
  40efa1:	leave  
  40efa2:	leave  
  40efa3:	aad    0xd6
  40efa5:	iret   
  40efa6:	mov    dl,0xdf
  40efa8:	std    
  40efa9:	add    ch,BYTE PTR [edi+0x76]
  40efac:	xchg   edi,eax
  40efad:	push   ecx
  40efae:	leave  
  40efaf:	cmp    eax,0xe02a539d
  40efb4:	pop    ecx
  40efb5:	jns    0x40ef6a
  40efb7:	pop    ebp
  40efb8:	je     0x40efea
  40efba:	mov    esi,DWORD PTR [edi-0x73ce23b6]
  40efc0:	es mov bl,0x4c
  40efc3:	repnz lea ecx,[eax-0x53]
  40efc7:	push   edi
  40efc8:	fst    DWORD PTR [ebp-0x32]
  40efcb:	test   ebx,ebp
  40efcd:	enter  0x16a6,0x11
  40efd1:	sbb    eax,0x294ffb64
  40efd6:	hlt    
  40efd7:	cmp    bl,al
  40efd9:	mov    cl,0xa4
  40efdb:	fdivr  QWORD PTR [ebp+0x8b9fd45]
  40efe1:	repnz sti 
  40efe3:	inc    eax
  40efe4:	xor    BYTE PTR ds:0xe3f054c3,cl
  40efea:	mov    edi,0x2c03e46
  40efef:	sbb    esi,ebp
  40eff1:	inc    edx
  40eff2:	loope  0x40efc9
  40eff4:	dec    esp
  40eff5:	arpl   bx,ax
  40eff7:	sbb    BYTE PTR [edx-0x56beb9b8],ch
  40effd:	xchg   edi,eax
  40effe:	pop    esi
  40efff:	lahf   
  40f000:	mov    ebp,0x4c22d540
  40f005:	stos   DWORD PTR es:[edi],eax
  40f006:	fimul  WORD PTR [ebp+edi*1-0x47]
  40f00a:	xor    DWORD PTR [eax],esp
  40f00c:	mov    cl,0xc7
  40f00e:	cs pusha 
  40f010:	and    al,0x3f
  40f012:	mov    esi,0x99e7fda6
  40f017:	and    eax,0x9329be85
  40f01c:	cmp    al,0x99
  40f01e:	pop    edi
  40f01f:	psrlq  mm6,QWORD PTR [esi]
  40f022:	stos   BYTE PTR es:[edi],al
  40f023:	lods   eax,DWORD PTR ds:[esi]
  40f024:	retf   0xc1f4
  40f027:	push   0x76
  40f029:	pop    edi
  40f02a:	and    edx,DWORD PTR [ebx]
  40f02c:	mov    ecx,0x5f6d9070
  40f031:	sbb    bl,BYTE PTR [eax]
  40f033:	scas   al,BYTE PTR es:[edi]
  40f034:	sub    eax,0xd7842990
  40f039:	xor    DWORD PTR [edi-0x11],esp
  40f03c:	(bad)  
  40f03d:	dec    edx
  40f03e:	mov    bl,BYTE PTR [eax]
  40f040:	loopne 0x40f022
  40f042:	add    BYTE PTR [ebx+0x8],0xd2
  40f046:	pop    esp
  40f047:	jg     0x40f05f
  40f049:	rol    eax,1
  40f04b:	push   cs
  40f04c:	std    
  40f04d:	jmp    0x310:0xd25874b3
  40f054:	push   eax
  40f055:	lods   eax,DWORD PTR ds:[esi]
  40f056:	gs push esp
  40f058:	test   DWORD PTR ds:0x56404972,ebx
  40f05e:	mov    eax,0xe11c82be
  40f063:	and    ebp,DWORD PTR [ebx-0x283a78d0]
  40f069:	sub    edx,DWORD PTR [esi]
  40f06b:	fcomip st,st(0)
  40f06d:	das    
  40f06e:	and    BYTE PTR [eax],ch
  40f070:	and    al,ah
  40f072:	cmp    eax,0x58ca13f1
  40f077:	jae    0x40f073
  40f079:	mov    esp,DWORD PTR [eax]
  40f07b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f07c:	stos   DWORD PTR es:[edi],eax
  40f07d:	mov    eax,edi
  40f07f:	or     al,0xfd
  40f081:	sub    DWORD PTR [ebx+0x6b5f1eb8],ecx
  40f087:	out    dx,al
  40f088:	add    eax,0x320f5bc0
  40f08d:	jle    0x40f096
  40f08f:	(bad)  
  40f091:	mov    ebp,0xe5af815
  40f096:	cmp    BYTE PTR ds:0x9030ab6e,dh
  40f09c:	xchg   esp,eax
  40f09d:	push   edx
  40f09e:	or     ebx,DWORD PTR [eax]
  40f0a0:	xchg   BYTE PTR [ecx-0x1c9716e7],ah
  40f0a6:	inc    ecx
  40f0a7:	push   esi
  40f0a8:	fild   DWORD PTR [edi-0x25]
  40f0ab:	jl     0x40f12b
  40f0ad:	jbe    0x40f03e
  40f0af:	add    eax,0x736581ce
  40f0b4:	fsub   QWORD PTR [ecx]
  40f0b6:	pop    es
  40f0b7:	das    
  40f0b8:	sub    al,0xbe
  40f0ba:	mov    al,0x26
  40f0bc:	jbe    0x40f12b
  40f0be:	loopne 0x40f05a
  40f0c0:	(bad)  
  40f0c1:	in     eax,dx
  40f0c2:	ds mov dl,0xe2
  40f0c5:	test   BYTE PTR [ecx-0x79],0x71
  40f0c9:	fldenv [edx+0x31]
  40f0cc:	or     edi,DWORD PTR [eax-0x53]
  40f0cf:	cmp    eax,0xd5f79770
  40f0d4:	xchg   ebp,eax
  40f0d5:	pop    ds
  40f0d6:	mov    esi,0x4baa95ef
  40f0db:	mov    DWORD PTR [esi+0x3],edx
  40f0de:	aad    0x4
  40f0e0:	pushf  
  40f0e1:	push   edi
  40f0e2:	jg     0x40f131
  40f0e4:	inc    ecx
  40f0e5:	inc    edi
  40f0e6:	fbstp  TBYTE PTR [edi+0x5b43b9f6]
  40f0ec:	enter  0xa8d8,0xf9
  40f0f0:	mov    dl,0x37
  40f0f2:	and    eax,DWORD PTR [eax]
  40f0f4:	xchg   BYTE PTR [ebx-0x145e4e73],al
  40f0fa:	scas   al,BYTE PTR es:[edi]
  40f0fb:	out    dx,al
  40f0fc:	gs fs pop esp
  40f0ff:	sub    al,0x45
  40f101:	idiv   DWORD PTR [ebx+0x4e]
  40f104:	dec    esp
  40f105:	add    al,0x68
  40f107:	push   eax
  40f108:	(bad)  
  40f109:	ja     0x40f100
  40f10b:	loope  0x40f172
  40f10d:	mov    al,0xc7
  40f10f:	pop    ebx
  40f110:	enter  0xe60c,0xd2
  40f114:	popa   
  40f115:	cwde   
  40f116:	ins    BYTE PTR es:[edi],dx
  40f117:	add    eax,0x2c60a271
  40f11c:	mov    cl,0xe4
  40f11e:	leave  
  40f11f:	leave  
  40f120:	call   0xfb56376f
  40f125:	scas   al,BYTE PTR es:[edi]
  40f126:	jae    0x40f19a
  40f128:	mov    bh,0x13
  40f12a:	outs   dx,DWORD PTR ds:[esi]
  40f12b:	adc    BYTE PTR [eax-0x4a],cl
  40f12e:	add    cl,dl
  40f130:	cmp    DWORD PTR [edi+0x63],edx
  40f133:	mov    ebx,0xbdd9a200
  40f138:	push   ds
  40f139:	add    DWORD PTR [ecx+0x39bc1ebf],0xffffffd2
  40f140:	jmp    0xdecd:0xd2206610
  40f147:	cmp    DWORD PTR [ebp-0x1b],esp
  40f14a:	loop   0x40f0de
  40f14c:	pop    es
  40f14d:	jns    0x40f0d6
  40f14f:	test   eax,0x725a7dbf
  40f154:	dec    ebx
  40f155:	push   ds
  40f156:	imul   edi,DWORD PTR [edi],0x20
  40f159:	test   al,0xa0
  40f15b:	xchg   DWORD PTR [eax],esp
  40f15d:	mov    eax,0xd23ebd9e
  40f162:	dec    edx
  40f163:	test   DWORD PTR [esi+0x7bdf61f3],esi
  40f169:	(bad)  
  40f16a:	loop   0x40f1da
  40f16c:	and    ebx,edi
  40f16e:	pop    ebp
  40f16f:	aad    0xa7
  40f171:	push   esi
  40f172:	dec    ecx
  40f173:	xchg   ecx,eax
  40f174:	out    0x4c,eax
  40f176:	push   esp
  40f177:	popf   
  40f178:	sub    BYTE PTR [ecx-0x42],0x6e
  40f17c:	icebp  
  40f17d:	test   BYTE PTR cs:[edx],0x82
  40f181:	mov    ebx,0x39559cd0
  40f186:	scas   eax,DWORD PTR es:[edi]
  40f187:	dec    edi
  40f188:	jb     0x40f1e7
  40f18a:	mov    ds:0x9947534d,eax
  40f18f:	mov    ds:0xff905d00,al
  40f194:	out    dx,al
  40f195:	jg     0x40f1b1
  40f197:	push   ebx
  40f198:	fistp  WORD PTR [eax+0x69575ab3]
  40f19e:	mov    eax,DWORD PTR [ebx+0x64]
  40f1a1:	loope  0x40f1bc
  40f1a3:	ret    0xd1dd
  40f1a6:	jl     0x40f191
  40f1a8:	mov    ds:0xd66f186c,eax
  40f1ad:	(bad)
  40f1b3:	and    DWORD PTR [ecx],ebx
  40f1b5:	scas   al,BYTE PTR es:[edi]
  40f1b6:	xor    ebx,ecx
  40f1b8:	lods   eax,DWORD PTR ds:[esi]
  40f1b9:	shl    BYTE PTR [ecx+0x2f3e27e1],cl
  40f1bf:	sub    al,0x2e
  40f1c1:	xchg   ebp,eax
  40f1c2:	mov    edx,0xf66c57e0
  40f1c7:	ds das 
  40f1c9:	inc    ecx
  40f1ca:	(bad)  
  40f1cb:	sub    DWORD PTR [ecx],ebx
  40f1cd:	mov    edx,0x90a3544
  40f1d2:	gs jb  0x40f16a
  40f1d5:	mov    dh,0x22
  40f1d7:	mov    esi,0xb5bb0173
  40f1dc:	stc    
  40f1dd:	out    dx,al
  40f1de:	dec    esi
  40f1df:	add    esp,DWORD PTR [edi]
  40f1e1:	jge    0x40f1ce
  40f1e3:	adc    bh,cl
  40f1e5:	dec    eax
  40f1e6:	pushf  
  40f1e7:	(bad)  cs:[ebp-0x67]
  40f1eb:	out    0x72,al
  40f1ed:	mov    ebx,DWORD PTR [edx+0x28]
  40f1f0:	jno    0x40f1d8
  40f1f2:	sub    BYTE PTR [edx-0x59b4e680],ah
  40f1f8:	fdivr  QWORD PTR [esi]
  40f1fa:	stc    
  40f1fb:	out    0xf7,eax
  40f1fd:	(bad)  
  40f1fe:	nop
  40f1ff:	xchg   esi,eax
  40f200:	add    al,0x70
  40f202:	fwait
  40f203:	retf   
  40f204:	enter  0x8913,0xd4
  40f208:	inc    eax
  40f209:	inc    ebx
  40f20a:	fidivr WORD PTR [edi+0x13e9a2b5]
  40f210:	clc    
  40f211:	xchg   ebx,eax
  40f212:	jo     0x40f1f4
  40f214:	add    al,0xb
  40f216:	retf   0x903d
  40f219:	pop    edx
  40f21a:	sbb    al,0x8c
  40f21c:	mov    ebx,0x6894395d
  40f221:	jle    0x40f212
  40f223:	rol    DWORD PTR [esi+0x6fa583fa],cl
  40f229:	in     al,dx
  40f22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f22b:	add    al,0xc9
  40f22d:	(bad)  
  40f22e:	out    dx,al
  40f22f:	mov    ah,0x6c
  40f231:	pop    edx
  40f232:	outs   dx,BYTE PTR ds:[esi]
  40f233:	lea    ecx,[ebx+0x73344036]
  40f239:	pop    ebp
  40f23a:	sub    BYTE PTR [ecx+ebx*4-0x4e6f350a],ah
  40f241:	or     eax,0x33f157f1
  40f246:	gs cld 
  40f248:	shl    DWORD PTR [ebx+ebp*4],0xfb
  40f24c:	xchg   BYTE PTR [esi-0x2a],ah
  40f24f:	lds    esp,FWORD PTR [eax-0x1b65ea98]
  40f255:	cmp    cl,bh
  40f257:	ss in  eax,0xa4
  40f25a:	pop    esi
  40f25b:	xor    cl,BYTE PTR [ebx-0x7e]
  40f25e:	mov    ecx,0xdef2d3d0
  40f263:	cld    
  40f264:	rcr    ecx,cl
  40f266:	adc    esi,edx
  40f268:	rcr    BYTE PTR [eax+0xdf5956d],0x1
  40f26f:	in     al,0x95
  40f271:	fcomp  QWORD PTR [ecx-0x3be477cc]
  40f277:	call   FWORD PTR [edx+eiz*4-0x3]
  40f27b:	in     eax,dx
  40f27c:	(bad)  
  40f27d:	js     0x40f23f
  40f27f:	sub    ebp,DWORD PTR [ebx]
  40f281:	in     al,0xec
  40f283:	sbb    al,bh
  40f285:	fwait
  40f286:	xor    al,0x4f
  40f288:	inc    edx
  40f289:	test   BYTE PTR [edx+0x585eb024],cl
  40f28f:	or     al,0x12
  40f291:	stos   BYTE PTR es:[edi],al
  40f292:	mov    WORD PTR [eax],cs
  40f294:	push   ecx
  40f295:	pop    edi
  40f296:	pop    ds
  40f297:	xor    bh,BYTE PTR [ecx]
  40f299:	xor    edi,DWORD PTR [eax+ebx*8-0x73]
  40f29d:	and    eax,0xe032d871
  40f2a2:	shr    BYTE PTR cs:[edi+0x41],0x5c
  40f2a7:	push   0x4831676e
  40f2ac:	mov    edx,0xe887b61c
  40f2b1:	and    dh,dh
  40f2b3:	nop
  40f2b4:	or     al,0x73
  40f2b6:	adc    DWORD PTR [esi+0x800eb68],0xdd214d92
  40f2c0:	fdecstp 
  40f2c2:	out    dx,eax
  40f2c3:	cmp    al,0xf7
  40f2c5:	scas   al,BYTE PTR es:[edi]
  40f2c6:	or     eax,DWORD PTR [edi+0x684953b8]
  40f2cc:	cmp    al,0x7b
  40f2ce:	inc    eax
  40f2cf:	popf   
  40f2d0:	pushf  
  40f2d1:	sahf   
  40f2d2:	sub    edx,DWORD PTR [esi-0xb]
  40f2d5:	adc    al,0x19
  40f2d7:	loop   0x40f336
  40f2d9:	into   
  40f2da:	add    DWORD PTR [ecx],ebx
  40f2dc:	add    eax,0xbb043ece
  40f2e1:	push   ss
  40f2e2:	xchg   esp,eax
  40f2e3:	adc    BYTE PTR [ebx-0x4d7d5ce3],bl
  40f2e9:	mov    ebp,0xcacedd11
  40f2ee:	fnsave [eax+0x71]
  40f2f1:	push   ecx
  40f2f2:	pop    ebx
  40f2f3:	xchg   dl,ah
  40f2f5:	pop    ds
  40f2f6:	(bad)  
  40f2f8:	sbb    BYTE PTR [edi+0x568cedbd],ch
  40f2fe:	pop    es
  40f2ff:	xchg   esi,eax
  40f300:	mov    cl,0x87
  40f302:	outs   dx,BYTE PTR ds:[esi]
  40f303:	and    ah,BYTE PTR [ebp-0x12]
  40f306:	xor    esi,0xa971b5c8
  40f30c:	gs (bad) 
  40f30e:	test   DWORD PTR [ecx+edi*2-0x50],0x7e0e1fba
  40f316:	sbb    ebx,0xffffffa6
  40f319:	adc    DWORD PTR [ecx],0xffffffca
  40f31c:	pop    esi
  40f31d:	mov    al,0x5c
  40f31f:	arpl   WORD PTR [edi-0x2d58f704],ax
  40f325:	or     cl,BYTE PTR [edx+0x5a]
  40f328:	imul   ebp,DWORD PTR [ebp+eiz*8-0x2f],0x5c
  40f32d:	fiadd  WORD PTR [eax-0x3e8c6ff3]
  40f333:	mov    eax,0x1ce8a061
  40f338:	iret   
  40f339:	mov    esi,0xebc10fa4
  40f33e:	ret    
  40f33f:	xor    eax,0xa402f42c
  40f344:	cwde   
  40f345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f346:	mov    bl,0xfa
  40f348:	iret   
  40f349:	and    edi,DWORD PTR [esi-0x51c8b40a]
  40f34f:	fisub  WORD PTR [ecx-0x8]
  40f352:	sub    DWORD PTR [eax+0x29],0x5f
  40f356:	push   esp
  40f357:	rcl    BYTE PTR [edi-0x25a85fcf],1
  40f35d:	xor    dh,ch
  40f35f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f360:	outs   dx,DWORD PTR ds:[esi]
  40f361:	loope  0x40f3da
  40f363:	fcmovb st,st(5)
  40f365:	mov    ecx,0x464fdfca
  40f36a:	mov    ch,0x19
  40f36c:	outs   dx,DWORD PTR ds:[esi]
  40f36d:	ja     0x40f3df
  40f36f:	xchg   esp,eax
  40f370:	cmp    ebp,DWORD PTR [edi]
  40f372:	ret    
  40f373:	fild   WORD PTR [edi]
  40f375:	jmp    0x75b9:0x93400539
  40f37c:	jecxz  0x40f399
  40f37e:	(bad)  
  40f37f:	dec    edx
  40f380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f381:	mov    BYTE PTR [ebx+ebp*8-0x6a],0x6d
  40f386:	inc    ebx
  40f387:	lods   eax,DWORD PTR ds:[esi]
  40f388:	jle    0x40f3d6
  40f38a:	mov    ch,0x9d
  40f38c:	and    eax,0x23594ff7
  40f391:	add    esp,DWORD PTR [ecx+0x22]
  40f394:	and    BYTE PTR [ecx+0x22],al
  40f397:	jle    0x40f3b3
  40f399:	cwde   
  40f39a:	(bad)  
  40f39b:	fst    DWORD PTR [eax+0x602609ca]
  40f3a1:	sahf   
  40f3a2:	push   esi
  40f3a3:	test   DWORD PTR [ebx],edx
  40f3a5:	and    al,BYTE PTR [ebx-0xa]
  40f3a8:	and    BYTE PTR [eax],dh
  40f3aa:	out    0xc,al
  40f3ac:	loope  0x40f372
  40f3ae:	es inc edx
  40f3b0:	je     0x40f365
  40f3b2:	inc    esp
  40f3b3:	out    dx,eax
  40f3b4:	mov    ds:0xbeac8622,al
  40f3b9:	add    cl,BYTE PTR [edi]
  40f3bb:	mov    ds:0x68cdf68e,eax
  40f3c0:	sar    edx,0xd1
  40f3c3:	pop    ss
  40f3c4:	jle    0x40f3bb
  40f3c6:	popf   
  40f3c7:	mov    dh,BYTE PTR [esi+0x41]
  40f3ca:	sub    bl,BYTE PTR ds:0x93d2cab3
  40f3d0:	enter  0xf4a5,0xfb
  40f3d4:	ret    0x29a
  40f3d7:	xchg   ecx,eax
  40f3d8:	add    eax,DWORD PTR [eax-0x1cb312f]
  40f3de:	dec    esi
  40f3df:	sbb    eax,0x52ba4feb
  40f3e4:	adc    DWORD PTR [ebx+0x24],ebx
  40f3e7:	cli    
  40f3e8:	rcl    DWORD PTR [edx],cl
  40f3ea:	xor    ebx,ebp
  40f3ec:	adc    BYTE PTR [ecx],dh
  40f3ee:	out    dx,al
  40f3ef:	cmp    eax,0x4568d598
  40f3f4:	jbe    0x40f3f4
  40f3f6:	dec    esp
  40f3f7:	and    eax,0xcaed818f
  40f3fc:	mov    esi,0xa139a1fe
  40f401:	mov    DWORD PTR [ebp+0x52],0xf7fa8bb7
  40f408:	test   DWORD PTR [eax],0xf52e037e
  40f40e:	jmp    0x7866:0xafcca03a
  40f415:	jge    0x40f3b6
  40f417:	mov    ecx,cs
  40f419:	mov    bh,0x52
  40f41b:	adc    BYTE PTR [eax+0x64],ah
  40f41e:	lods   al,BYTE PTR ds:[esi]
  40f41f:	hlt    
  40f420:	int3   
  40f421:	mov    dl,0x8e
  40f423:	push   ds
  40f424:	cmp    esp,DWORD PTR [ebx-0x68]
  40f427:	outs   dx,DWORD PTR ds:[esi]
  40f428:	xchg   al,dh
  40f42a:	push   0x1c9bf8f2
  40f42f:	inc    eax
  40f430:	mov    ebx,0x7357b5a5
  40f435:	sbb    eax,ebp
  40f437:	push   esi
  40f438:	xchg   esi,eax
  40f439:	dec    ebp
  40f43a:	xchg   DWORD PTR [edx-0x49],esi
  40f43d:	mov    ds:0x9c1e3b87,eax
  40f442:	(bad)  
  40f443:	pop    eax
  40f444:	cmp    DWORD PTR [ecx],ecx
  40f446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f448:	push   ss
  40f449:	(bad)  
  40f44a:	sbb    dl,BYTE PTR [edi+edx*1+0x5f]
  40f44e:	das    
  40f44f:	jno    0x40f482
  40f451:	or     eax,edi
  40f453:	mov    bh,cl
  40f455:	sub    al,0xaa
  40f457:	sbb    ebx,DWORD PTR [edx]
  40f459:	sub    DWORD PTR [esi-0x2de4ad65],esp
  40f45f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f460:	xchg   ebp,eax
  40f461:	dec    ecx
  40f462:	cmp    eax,0x53bfb803
  40f467:	(bad)
  40f46a:	push   esi
  40f46b:	jne    0x40f4d1
  40f46d:	scas   eax,DWORD PTR es:[edi]
  40f46e:	das    
  40f46f:	mov    ecx,0x6a91b786
  40f474:	lock fnstenv fs:[ebp-0x19]
  40f479:	mov    eax,ds:0xb7030d3f
  40f47e:	and    DWORD PTR [ebp-0x58],ebx
  40f481:	ins    BYTE PTR es:[edi],dx
  40f482:	and    esp,DWORD PTR [edx+ebp*8+0x2c20bae0]
  40f489:	mov    edi,0x2f74d207
  40f48e:	xchg   DWORD PTR [edi],edx
  40f490:	sar    eax,cl
  40f492:	dec    esp
  40f493:	and    ch,BYTE PTR [eax+ebx*2]
  40f496:	clc    
  40f497:	jns    0x40f439
  40f499:	in     eax,dx
  40f49a:	dec    ebp
  40f49b:	and    BYTE PTR [esi+0x28f0e9ec],bl
  40f4a1:	adc    al,0x56
  40f4a3:	inc    eax
  40f4a4:	test   BYTE PTR [esi+0x61],ch
  40f4a7:	and    ebp,eax
  40f4a9:	(bad)  
  40f4ab:	in     eax,0x85
  40f4ad:	xor    bl,al
  40f4af:	sub    DWORD PTR [ebp-0x64],edi
  40f4b2:	pop    ds
  40f4b3:	xor    eax,0xe53b8c04
  40f4b8:	ret    0x7222
  40f4bb:	jbe    0x40f443
  40f4bd:	hlt    
  40f4be:	test   al,0x57
  40f4c0:	jnp    0x40f495
  40f4c2:	push   esp
  40f4c3:	mov    eax,ds:0x438b687f
  40f4c8:	pop    ss
  40f4c9:	loope  0x40f490
  40f4cb:	jg     0x40f4e2
  40f4cd:	xor    eax,0xd98989e4
  40f4d2:	not    BYTE PTR [ecx]
  40f4d4:	dec    esi
  40f4d5:	gs push 0xffffffb5
  40f4d8:	aas    
  40f4d9:	pop    ds
  40f4da:	in     eax,0x6c
  40f4dc:	add    DWORD PTR [edx-0x55],0x70b53e7d
  40f4e3:	rcl    DWORD PTR [ecx+0x2d],1
  40f4e6:	mov    ah,0x48
  40f4e8:	addr16 xor eax,0xae5c9ec3
  40f4ee:	imul   ebp,DWORD PTR [ebp+0x48],0xffffffe8
  40f4f2:	loopne 0x40f4f7
  40f4f4:	lock dec eax
  40f4f6:	dec    esp
  40f4f7:	jge    0x40f519
  40f4f9:	stc    
  40f4fa:	or     eax,0x5adc38c1
  40f4ff:	or     esi,ebx
  40f501:	jle    0x40f4b6
  40f503:	sbb    eax,0x7ca84121
  40f508:	std    
  40f509:	sub    DWORD PTR [ecx],ecx
  40f50b:	shl    DWORD PTR [eax+0x3b0aeec8],1
  40f511:	mov    edx,0xdd493904
  40f516:	mov    cl,0xd2
  40f518:	adc    ch,BYTE PTR [eax+ecx*1+0x4488709a]
  40f51f:	out    0x97,al
  40f521:	cmp    ebx,ebp
  40f523:	mov    edi,0x3220121d
  40f528:	imul   ecx,DWORD PTR [edx-0x3b],0x92754ac1
  40f52f:	fsub   DWORD PTR [ebx]
  40f531:	inc    ecx
  40f532:	xor    al,0x83
  40f534:	mov    edx,0xc50684d
  40f539:	sub    al,0x5
  40f53b:	pop    eax
  40f53c:	adc    al,0x53
  40f53e:	cmp    ah,al
  40f540:	mov    eax,ds:0xaa834b0e
  40f545:	imul   edi,DWORD PTR [edx-0x6b0a2f5d],0xffffff85
  40f54c:	(bad)  
  40f54d:	stc    
  40f54e:	jg     0x40f5c4
  40f550:	out    dx,al
  40f551:	fstp   DWORD PTR [ecx-0x80]
  40f554:	iret   
  40f555:	cs mov bl,0x9f
  40f558:	jmp    0x8e37f2e0
  40f55d:	fdivp  st(6),st
  40f55f:	pop    ds
  40f560:	push   edx
  40f561:	and    eax,0xbc472b76
  40f566:	test   al,0x79
  40f568:	les    edi,FWORD PTR [ebx+edi*4-0x2af2474c]
  40f56f:	mov    esp,0xbc592448
  40f574:	retf   0xb199
  40f577:	sbb    DWORD PTR [eax-0x414f2da2],ecx
  40f57d:	push   eax
  40f57e:	clc    
  40f57f:	lahf   
  40f580:	and    dh,dl
  40f582:	inc    eax
  40f583:	bound  ecx,QWORD PTR [esi+0x3619b9c3]
  40f589:	(bad)  
  40f58a:	out    0xb1,al
  40f58c:	fwait
  40f58d:	leave  
  40f58e:	gs dec edx
  40f590:	and    al,0x26
  40f592:	cmp    eax,0x74664aaf
  40f597:	mov    BYTE PTR [edi-0x6d],bl
  40f59a:	lods   eax,DWORD PTR ds:[esi]
  40f59b:	and    eax,0x786ab69f
  40f5a0:	adc    al,0x85
  40f5a2:	hlt    
  40f5a3:	dec    esp
  40f5a4:	daa    
  40f5a5:	cld    
  40f5a6:	mov    ?,WORD PTR [eax+0x7]
  40f5a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5aa:	cmp    BYTE PTR [ebp+ebx*1-0x1],bh
  40f5ae:	inc    esp
  40f5af:	(bad)  
  40f5b0:	lahf   
  40f5b1:	imul   ebp,DWORD PTR ds:0x3155b58,0xffffffd5
  40f5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b9:	sub    bh,al
  40f5bb:	iret   
  40f5bc:	les    esp,FWORD PTR [ebx]
  40f5be:	mov    ebp,0x9ce64701
  40f5c3:	mov    edx,0x986b32c8
  40f5c8:	push   es
  40f5c9:	cmp    al,0xa6
  40f5cb:	repnz leave 
  40f5cd:	push   ss
  40f5ce:	cmp    eax,0x1b7aa5a7
  40f5d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5d4:	loopne 0x40f616
  40f5d6:	xchg   DWORD PTR [edx+0x18ddd427],esp
  40f5dc:	mov    esi,0x9ec628bf
  40f5e1:	(bad)  
  40f5e2:	sti    
  40f5e3:	in     eax,0xdb
  40f5e5:	into   
  40f5e6:	int    0xba
  40f5e8:	(bad)  
  40f5e9:	daa    
  40f5ea:	neg    DWORD PTR [ebx-0x79]
  40f5ed:	sub    edi,ecx
  40f5ef:	daa    
  40f5f0:	mov    al,0xb
  40f5f2:	into   
  40f5f3:	enter  0xe261,0xc2
  40f5f7:	xor    edi,DWORD PTR [eax+0x464ae910]
  40f5fd:	adc    eax,0xd1d09f0a
  40f602:	mov    ds:0x12f8436d,al
  40f607:	mov    ah,0x2c
  40f609:	loopne 0x40f5b9
  40f60b:	and    ebx,DWORD PTR [ecx+0x4a]
  40f60e:	stos   BYTE PTR es:[edi],al
  40f60f:	push   ebx
  40f610:	push   cs
  40f611:	imul   DWORD PTR es:[edx-0x5c]
  40f615:	mov    BYTE PTR [esi],bh
  40f617:	(bad)  
  40f619:	pop    esp
  40f61a:	mov    bh,0x14
  40f61c:	dec    esi
  40f61d:	popa   
  40f61e:	js     0x40f667
  40f620:	scas   eax,DWORD PTR es:[edi]
  40f621:	inc    ebx
  40f622:	mov    ebx,0x1a7a1f44
  40f627:	xchg   esp,eax
  40f628:	stos   DWORD PTR es:[edi],eax
  40f629:	cwde   
  40f62a:	call   0x9241266f
  40f62f:	dec    ecx
  40f630:	(bad)  
  40f631:	call   0xfed807e8
  40f636:	outs   dx,DWORD PTR ds:[esi]
  40f637:	xchg   esi,eax
  40f638:	inc    eax
  40f639:	adc    al,0xbb
  40f63b:	add    DWORD PTR [eax+0x7a],edi
  40f63e:	div    BYTE PTR [edi-0x49957c07]
  40f644:	adc    BYTE PTR [esi-0x18],al
  40f647:	clc    
  40f648:	retf   
  40f649:	sbb    BYTE PTR [ebp+0x628ab38b],cl
  40f64f:	xchg   ecx,eax
  40f650:	ds jb  0x40f624
  40f653:	lea    esp,[esp+eiz*2-0x21]
  40f657:	jge    0x40f659
  40f659:	pop    ebx
  40f65a:	daa    
  40f65b:	pop    ebp
  40f65c:	adc    bh,BYTE PTR [edx+0x2b]
  40f65f:	shr    ch,0x54
  40f662:	mov    ch,BYTE PTR [ecx+0x5a34ba4d]
  40f668:	out    0x1d,al
  40f66a:	xor    DWORD PTR [edi-0x44],ebx
  40f66d:	or     dl,BYTE PTR [esp+edx*2+0x26]
  40f671:	add    edx,DWORD PTR ds:0xdef0f0e7
  40f677:	lds    esi,FWORD PTR [edi+0x9be764f]
  40f67d:	xchg   ebx,eax
  40f67e:	lahf   
  40f67f:	add    ecx,DWORD PTR [ebx+0x18cf70b0]
  40f685:	mov    ebx,0x2297f30e
  40f68a:	and    dl,BYTE PTR [eax+0x46]
  40f68d:	inc    eax
  40f68e:	js     0x40f673
  40f690:	cmp    eax,0xa6d8d02e
  40f695:	push   cs
  40f696:	or     ch,bh
  40f698:	inc    eax
  40f699:	mov    eax,ds:0xd95214c
  40f69e:	lods   al,BYTE PTR ds:[esi]
  40f69f:	cmp    eax,0x8dfdce0b
  40f6a4:	mov    bl,0xba
  40f6a6:	jmp    0x816df750
  40f6ab:	jg     0x40f6f2
  40f6ad:	mov    ds:0xfb6f6051,al
  40f6b2:	sub    BYTE PTR [eax],ch
  40f6b4:	or     ah,bh
  40f6b6:	inc    edx
  40f6b7:	xor    BYTE PTR [edi],bl
  40f6b9:	lahf   
  40f6ba:	or     dl,bh
  40f6bc:	outs   dx,BYTE PTR ds:[esi]
  40f6bd:	mov    DWORD PTR [ebp-0x2c],edx
  40f6c0:	retf   
  40f6c1:	(bad)
  40f6c4:	xchg   esi,eax
  40f6c5:	ins    BYTE PTR es:[edi],dx
  40f6c6:	pop    esp
  40f6c7:	test   DWORD PTR [ebp-0x4f],esi
  40f6ca:	lahf   
  40f6cb:	mov    ebx,0xa9a79cf4
  40f6d0:	fbld   TBYTE PTR [edi]
  40f6d2:	leave  
  40f6d3:	(bad)  
  40f6d4:	in     eax,0xfc
  40f6d6:	lock jmp 0x40f699
  40f6d9:	repnz or ecx,ebx
  40f6dc:	pop    ds
  40f6dd:	sub    DWORD PTR [edi+0x6fba1880],eax
  40f6e3:	in     ax,0x6a
  40f6e6:	popf   
  40f6e7:	shl    DWORD PTR ss:[ecx],1
  40f6ea:	push   0xcc6e1db
  40f6ef:	cld    
  40f6f0:	in     eax,dx
  40f6f1:	popa   
  40f6f2:	test   cl,ch
  40f6f4:	push   ebx
  40f6f5:	enter  0x2c8b,0xa5
  40f6f9:	add    DWORD PTR [edi],0x64
  40f6fc:	stc    
  40f6fd:	xchg   ebx,eax
  40f6fe:	jnp    0x40f75b
  40f700:	outs   dx,BYTE PTR ds:[esi]
  40f701:	pop    ecx
  40f702:	repz out dx,al
  40f704:	push   ss
  40f705:	or     eax,0xfab4654c
  40f70a:	mov    WORD PTR [ecx+0x4c],ds
  40f70d:	lock push ecx
  40f70f:	pushf  
  40f710:	sbb    BYTE PTR [edi+0x5d],0x57
  40f714:	adc    ecx,esi
  40f716:	jecxz  0x40f6d3
  40f718:	mov    eax,ds:0x83524a3a
  40f71d:	and    eax,0xa5fcb5ac
  40f722:	add    al,bh
  40f724:	dec    ebp
  40f725:	retf   
  40f726:	pop    esp
  40f727:	or     DWORD PTR ss:[eax],0xffffffda
  40f72b:	adc    al,0xe3
  40f72d:	hlt    
  40f72e:	mov    al,ds:0xe631a4ee
  40f733:	adc    cl,BYTE PTR [ebx+0x6d21cc94]
  40f739:	jp     0x40f7a2
  40f73b:	push   es
  40f73c:	xchg   edx,eax
  40f73d:	xlat   BYTE PTR ds:[ebx]
  40f73e:	sub    al,0x4a
  40f740:	ins    DWORD PTR es:[edi],dx
  40f741:	jns    0x40f6ff
  40f743:	xor    al,0xb6
  40f745:	(bad)  
  40f746:	call   0x5f08:0x69e62238
  40f74d:	ja     0x40f732
  40f74f:	add    eax,DWORD PTR [eax-0x74]
  40f752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f753:	fadd   DWORD PTR [ebx+0x49]
  40f756:	outs   dx,BYTE PTR ds:[esi]
  40f757:	push   ecx
  40f758:	out    dx,al
  40f759:	aam    0xf3
  40f75b:	mov    ch,ah
  40f75d:	das    
  40f75e:	call   0x1295:0x5a345b5b
  40f765:	mov    bl,BYTE PTR [edi-0x5c]
  40f768:	mov    esi,0xa4bbc8ec
  40f76d:	adc    al,0x7a
  40f76f:	push   ebx
  40f770:	jle    0x40f7ae
  40f772:	cdq    
  40f773:	jg     0x40f79c
  40f775:	mov    ds:0x53cbac92,eax
  40f77a:	repz mov edx,0x18331ff8
  40f780:	xor    dh,dh
  40f782:	std    
  40f783:	in     al,dx
  40f784:	shr    BYTE PTR [esi-0x41],0x1e
  40f788:	mov    esi,0x121fa983
  40f78d:	cwde   
  40f78e:	and    al,0x3b
  40f790:	xchg   edi,eax
  40f791:	imul   ebp,DWORD PTR [ecx-0x2a],0x1f6d1116
  40f798:	xlat   BYTE PTR ds:[ebx]
  40f799:	imul   ebp
  40f79b:	es ret 
  40f79d:	push   0x8ba02178
  40f7a2:	sub    eax,0x7625499f
  40f7a7:	mov    dh,0xe3
  40f7a9:	mov    ecx,DWORD PTR [esi]
  40f7ab:	repnz xchg esi,eax
  40f7ad:	imul   ecx,DWORD PTR [edx-0x47],0x5e
  40f7b1:	imul   ecx,DWORD PTR [esi-0x8034f81],0xa2e2e725
  40f7bb:	ins    BYTE PTR es:[edi],dx
  40f7bc:	mov    al,ds:0x2bd3f196
  40f7c1:	dec    eax
  40f7c2:	mov    al,ds:0xe5390f0b
  40f7c7:	arpl   WORD PTR [ecx],di
  40f7c9:	aad    0xaa
  40f7cb:	pop    eax
  40f7cc:	dec    DWORD PTR [ecx-0x10]
  40f7cf:	xchg   esi,eax
  40f7d0:	mov    ecx,0xb267d21b
  40f7d5:	add    bh,BYTE PTR [edx+0x64a863d3]
  40f7db:	cs jnp 0x40f842
  40f7de:	lock cmp esp,ecx
  40f7e1:	push   ebx
  40f7e2:	sub    BYTE PTR [edx-0x75],cl
  40f7e5:	(bad)  [eax+0x775373fe]
  40f7eb:	sar    BYTE PTR [ecx+edi*8-0x3d6bad44],1
  40f7f2:	or     BYTE PTR [ebx-0x61],bh
  40f7f5:	dec    ebx
  40f7f6:	sub    BYTE PTR [ebp-0x25],al
  40f7f9:	jge    0x40f7aa
  40f7fb:	scas   eax,DWORD PTR es:[edi]
  40f7fc:	in     al,dx
  40f7fd:	xor    ecx,DWORD PTR ds:0x9c4e50b9
  40f803:	mov    dh,0x3f
  40f805:	xor    ecx,edx
  40f807:	sub    ch,al
  40f809:	test   eax,0x11251d66
  40f80e:	shl    DWORD PTR [ebp-0x3099601a],0xa8
  40f815:	jno    0x40f813
  40f817:	cmp    esp,DWORD PTR [esp+edx*4]
  40f81a:	test   al,0xf4
  40f81d:	inc    edx
  40f81e:	scas   eax,DWORD PTR es:[edi]
  40f81f:	ret    0x60f1
  40f822:	jae    0x40f7c4
  40f824:	jae    0x40f7bb
  40f826:	add    bh,bl
  40f828:	stc    
  40f829:	(bad)
  40f82d:	test   eax,0xc9f32fac
  40f832:	jne    0x40f81d
  40f834:	xor    edi,0x56
  40f837:	xchg   ebx,eax
  40f838:	ss jge 0x40f8a3
  40f83b:	jmp    0x632b1802
  40f840:	faddp  st(2),st
  40f842:	je     0x40f822
  40f844:	push   cs
  40f845:	jge    0x40f7dc
  40f847:	stc    
  40f848:	sti    
  40f849:	pop    ebx
  40f84a:	shl    BYTE PTR [esi],1
  40f84c:	pop    eax
  40f84d:	sub    DWORD PTR [eax],esi
  40f84f:	xchg   BYTE PTR [esi+0x3733a741],dl
  40f855:	xor    eax,0x2d7aea0a
  40f85a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f85b:	mov    edi,0x3d3d7599
  40f860:	inc    ebx
  40f861:	imul   esi,DWORD PTR [ebp-0x27283ce9],0xc75899bb
  40f86b:	bnd call DWORD PTR [ebp+0x6c11461f]
  40f872:	int    0x4a
  40f874:	lods   al,BYTE PTR ds:[esi]
  40f875:	dec    ebp
  40f876:	and    BYTE PTR [eax+0x3a7bc4a8],cl
  40f87c:	retf   0xb3cc
  40f87f:	retf   
  40f880:	and    DWORD PTR [edx-0x182cbeb],ebx
  40f886:	jno    0x40f87c
  40f888:	sbb    ebx,DWORD PTR [eax-0x2e]
  40f88b:	sub    BYTE PTR [ecx],dl
  40f88d:	add    al,0x4c
  40f88f:	pop    ecx
  40f890:	iret   
  40f891:	cmp    eax,0x342c79a4
  40f896:	pop    edi
  40f897:	fst    DWORD PTR [ecx+0x44]
  40f89a:	inc    ecx
  40f89b:	ja     0x40f87e
  40f89d:	adc    edx,esi
  40f89f:	ja     0x40f855
  40f8a1:	or     dl,BYTE PTR [ebx]
  40f8a3:	cli    
  40f8a4:	mov    BYTE PTR [eax+0x51],cl
  40f8a7:	cld    
  40f8a8:	imul   esp,DWORD PTR [esi+0x10881bd2],0x4311a0b1
  40f8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b3:	lea    ecx,[edi+0x33]
  40f8b6:	push   edi
  40f8b7:	pop    es
  40f8b8:	retf   
  40f8b9:	out    0x95,eax
  40f8bb:	cmp    BYTE PTR [edx],bh
  40f8bd:	inc    edx
  40f8be:	jne    0x40f890
  40f8c0:	pop    ebx
  40f8c1:	mov    esi,0xb5d54293
  40f8c6:	jb     0x40f939
  40f8c8:	jae    0x40f86b
  40f8ca:	sti    
  40f8cb:	jp     0x40f8b4
  40f8cd:	cmp    BYTE PTR [edx+0x42cf857d],dl
  40f8d3:	push   es
  40f8d4:	xor    eax,0x2625b905
  40f8d9:	or     esi,DWORD PTR [esi+0x56693867]
  40f8df:	push   eax
  40f8e0:	(bad)  
  40f8e1:	jmp    0xfd41a618
  40f8e6:	data16 sbb al,0x7f
  40f8e9:	or     esp,DWORD PTR [eax+0x220bff0b]
  40f8ef:	xchg   esp,eax
  40f8f0:	das    
  40f8f1:	sub    dh,cl
  40f8f3:	rcr    BYTE PTR [ebx-0x1687c524],1
  40f8f9:	test   DWORD PTR [esi],ebx
  40f8fb:	fadd   QWORD PTR [edi]
  40f8fd:	dec    eax
  40f8fe:	mov    esp,0x2ad5d6db
  40f903:	icebp  
  40f904:	dec    ebp
  40f905:	push   ss
  40f906:	dec    ecx
  40f907:	js     0xbcf6dc3b
  40f90d:	inc    ebp
  40f90e:	adc    BYTE PTR [eax+eax*2+0x35],ch
  40f912:	fnstsw WORD PTR [edx+0x36]
  40f915:	jns    0x40f979
  40f917:	lds    ebp,FWORD PTR [eax+0x65]
  40f91a:	dec    ebx
  40f91b:	imul   edx,DWORD PTR [edx+0x1146a851],0x7793373c
  40f925:	or     al,0xcd
  40f927:	ins    BYTE PTR es:[edi],dx
  40f928:	push   esp
  40f929:	mov    bh,0xd6
  40f92b:	loop   0x40f8bf
  40f92d:	or     DWORD PTR [esi+0xd702a81],0x1f
  40f934:	add    dl,dl
  40f936:	lahf   
  40f937:	pop    ds
  40f938:	adc    ebx,ebp
  40f93a:	push   ebx
  40f93b:	in     eax,dx
  40f93c:	mov    al,ds:0x2ee1b493
  40f941:	xchg   DWORD PTR ds:[eax-0x73],esp
  40f945:	pop    ebx
  40f946:	fadd   QWORD PTR [eax]
  40f948:	jle    0x40f94b
  40f94a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f94b:	ja     0x40f8f4
  40f94d:	mov    eax,DWORD PTR [edi]
  40f94f:	adc    al,0x23
  40f951:	fdiv   st(0),st
  40f953:	mov    bh,0x7a
  40f955:	imul   ecx,DWORD PTR [ebp-0x72],0xa1bbafd
  40f95c:	fnsave [eax+0x1e]
  40f95f:	ror    BYTE PTR [ecx+edx*8],cl
  40f962:	cli    
  40f963:	loope  0x40f9b6
  40f965:	std    
  40f966:	xchg   esi,eax
  40f967:	aaa    
  40f968:	or     edx,ebx
  40f96a:	jae    0x40f919
  40f96c:	iret   
  40f96d:	pop    es
  40f96e:	xchg   ecx,eax
  40f96f:	dec    edx
  40f970:	xor    BYTE PTR [ebx],al
  40f972:	fidivr WORD PTR [ecx+ebp*2+0x27]
  40f976:	aas    
  40f977:	cmp    dl,dh
  40f979:	inc    edx
  40f97a:	add    eax,ebx
  40f97c:	push   cs
  40f97d:	and    al,0x5e
  40f97f:	(bad)  
  40f980:	sbb    DWORD PTR [bx+si],ebx
  40f983:	hlt    
  40f984:	pop    ebp
  40f985:	jnp    0x40f980
  40f987:	lods   al,BYTE PTR ds:[esi]
  40f988:	aad    0x42
  40f98a:	leave  
  40f98b:	dec    ebx
  40f98c:	sbb    dl,BYTE PTR [esi+0x5c]
  40f98f:	loopne 0x40f980
  40f991:	pop    ecx
  40f992:	stc    
  40f993:	fucompp 
  40f995:	dec    eax
  40f996:	mov    ds:0x6433249f,eax
  40f99b:	fist   DWORD PTR [edi+ebx*2]
  40f99e:	test   BYTE PTR [eax],ah
  40f9a0:	aam    0xdf
  40f9a2:	lds    ebp,FWORD PTR [ebx+0x5ca1bef6]
  40f9a8:	rcl    dh,1
  40f9aa:	mov    ds:0x7b024fcf,al
  40f9af:	arpl   WORD PTR [edi],ax
  40f9b1:	sar    DWORD PTR [ebx],1
  40f9b3:	jne    0x40f9b6
  40f9b5:	xor    BYTE PTR [eax-0xa],al
  40f9b8:	sub    DWORD PTR ds:0xdf5ea2b7,ebx
  40f9be:	sub    DWORD PTR [eax-0x2b],edx
  40f9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9c2:	enter  0x8222,0xc3
  40f9c6:	lea    ebp,[ebp-0x18]
  40f9c9:	adc    DWORD PTR [edx-0x8e46dd9],edx
  40f9cf:	mov    esi,0xce4fa9e1
  40f9d4:	ret    
  40f9d5:	xchg   ebp,eax
  40f9d6:	push   cs
  40f9d7:	cmp    BYTE PTR [ebx+0x5c],0x0
  40f9db:	jle    0x40fa13
  40f9dd:	fstp   QWORD PTR [ecx+0x474a47d2]
  40f9e3:	add    BYTE PTR [eax-0x32],bh
  40f9e6:	shl    edi,1
  40f9e8:	sti    
  40f9e9:	push   ebx
  40f9ea:	cmp    ch,BYTE PTR [ecx+ecx*8-0x47]
  40f9ee:	or     esi,DWORD PTR [ebx-0x27dcbfa5]
  40f9f4:	sbb    DWORD PTR [ecx-0xc601288],ebp
  40f9fa:	rcr    ch,0xd2
  40f9fd:	inc    ebp
  40f9fe:	and    al,0x85
  40fa00:	inc    edx
  40fa01:	out    0x95,eax
  40fa03:	xor    esi,esi
  40fa05:	sbb    DWORD PTR [esi+0x5743d5d9],0xffffffc4
  40fa0c:	(bad)
  40fa0f:	mov    esp,0x409aefa9
  40fa14:	popa   
  40fa15:	push   cs
  40fa16:	jns    0x40fa44
  40fa18:	shl    dh,0xfe
  40fa1b:	jle    0x40fa13
  40fa1d:	sub    eax,0x856686a0
  40fa22:	sub    DWORD PTR [ebx],ecx
  40fa24:	(bad)  
  40fa25:	pop    eax
  40fa26:	push   0xe
  40fa28:	out    dx,al
  40fa29:	in     eax,0xd3
  40fa2b:	push   0x7a
  40fa2d:	(bad)  
  40fa2e:	mov    al,ds:0x367984ec
  40fa33:	jne    0x40fa09
  40fa35:	pop    eax
  40fa36:	jmp    0x709f079d
  40fa3b:	and    BYTE PTR [ebp+0x39],0x5f
  40fa3f:	jp     0x40faa9
  40fa41:	clc    
  40fa42:	out    0xea,eax
  40fa44:	jmp    0x22ee:0x111d21a9
  40fa4b:	test   bl,al
  40fa4d:	cwde   
  40fa4e:	data16 xor al,0x55
  40fa51:	lods   eax,DWORD PTR ds:[esi]
  40fa52:	push   0x3d
  40fa54:	out    0x59,eax
  40fa56:	cwde   
  40fa57:	jle    0x40fa8c
  40fa59:	mov    ebx,0xad1da9c8
  40fa5e:	ins    DWORD PTR es:[edi],dx
  40fa5f:	gs in  eax,dx
  40fa61:	adc    eax,0xfb6704fc
  40fa66:	enter  0x64ae,0x90
  40fa6a:	fcomp  QWORD PTR [esi-0x3c]
  40fa6d:	pusha  
  40fa6e:	mov    ebp,0x6987b3dc
  40fa73:	in     eax,dx
  40fa74:	cmc    
  40fa75:	fdivr  st,st(5)
  40fa77:	sbb    dl,BYTE PTR ss:[esi+0x56af198e]
  40fa7e:	mov    esp,fs
  40fa80:	in     al,dx
  40fa81:	mov    ecx,0xb48f4341
  40fa86:	pop    eax
  40fa87:	scas   al,BYTE PTR es:[edi]
  40fa88:	xchg   edi,eax
  40fa89:	jl     0x40fad9
  40fa8b:	jge    0x40faae
  40fa8d:	ret    0x8be0
  40fa90:	(bad)  
  40fa91:	lea    eax,[esi]
  40fa93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa94:	mov    edi,DWORD PTR [si+0x1]
  40fa98:	cmp    esp,DWORD PTR [ecx]
  40fa9a:	loop   0x40fae8
  40fa9c:	xor    al,BYTE PTR [eax]
  40fa9e:	xchg   ebx,eax
  40fa9f:	not    edi
  40faa1:	fimul  WORD PTR [eax-0x1f]
  40faa4:	sbb    al,0x8a
  40faa6:	xchg   ebx,eax
  40faa7:	dec    ecx
  40faa8:	jne    0x40fb17
  40faaa:	lods   eax,DWORD PTR ds:[esi]
  40faab:	xchg   ebx,eax
  40faac:	inc    edx
  40faad:	sbb    al,0x3
  40faaf:	pop    es
  40fab0:	jnp    0x40fa47
  40fab2:	push   es
  40fab3:	outs   dx,DWORD PTR ds:[esi]
  40fab4:	loope  0x40fa63
  40fab6:	jne    0x40fa88
  40fab8:	(bad)  
  40faba:	mov    ebp,0xb145363
  40fabf:	push   esi
  40fac0:	test   eax,0x26eb8e25
  40fac5:	push   ss
  40fac6:	in     eax,0xa8
  40fac8:	(bad)  
  40fac9:	push   ebx
  40faca:	mov    esp,0x1c0ab5bc
  40facf:	push   ds
  40fad0:	in     al,0xc4
  40fad2:	in     al,0x9a
  40fad4:	repz inc ebx
  40fad6:	pop    esp
  40fad7:	out    dx,eax
  40fad8:	sbb    DWORD PTR [ecx],esp
  40fada:	push   esp
  40fadb:	sub    ebx,0xe621a25e
  40fae1:	add    BYTE PTR [esi+0x6e1f2ac7],bh
  40fae7:	shr    BYTE PTR [esi-0x75],cl
  40faea:	lds    edi,FWORD PTR [ebp+esi*2-0x3c]
  40faee:	ret    0x8ed
  40faf1:	mov    dl,0x62
  40faf3:	dec    ebp
  40faf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faf5:	mov    dh,0xa6
  40faf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faf8:	adc    DWORD PTR [ebx+0x7a],esp
  40fafb:	lods   eax,DWORD PTR ds:[esi]
  40fafc:	sbb    al,0x24
  40fafe:	jg     0x40fae2
  40fb00:	add    BYTE PTR [edx+0x5],0x5f
  40fb04:	test   eax,0x25cbc9c9
  40fb09:	jno    0x40fa8c
  40fb0b:	ret    
  40fb0c:	xor    bh,BYTE PTR gs:[eax+0x656329]
  40fb13:	push   0xffffffad
  40fb15:	xchg   esp,eax
  40fb16:	xor    al,0xd8
  40fb18:	ins    BYTE PTR es:[edi],dx
  40fb19:	xchg   ebx,eax
  40fb1a:	pop    esi
  40fb1b:	cli    
  40fb1c:	inc    esp
  40fb1d:	xor    BYTE PTR [edi-0xc70a302],0x9b
  40fb24:	push   ecx
  40fb25:	add    BYTE PTR [ecx-0x302e579e],0x6a
  40fb2c:	mov    ebp,0xfaf165b6
  40fb31:	inc    eax
  40fb32:	pop    ebp
  40fb33:	xchg   edi,eax
  40fb34:	mov    al,ds:0xb5b56a9f
  40fb39:	in     eax,dx
  40fb3a:	mov    al,ds:0xbb00dd0c
  40fb3f:	push   0x2
  40fb41:	sbb    BYTE PTR ds:0x83a47e56,bl
  40fb47:	js     0x40facb
  40fb49:	xchg   esp,eax
  40fb4a:	mov    ch,0x9
  40fb4c:	repz mov ?,WORD PTR [ebx-0x5e]
  40fb50:	push   cs
  40fb51:	out    0x76,al
  40fb53:	leave  
  40fb54:	repz scas al,BYTE PTR es:[edi]
  40fb56:	and    al,0xad
  40fb58:	bound  ebx,QWORD PTR [ebx-0x4c]
  40fb5b:	add    ch,0x37
  40fb5e:	cmp    DWORD PTR [esp+ebx*2+0x2b],0x4d509bc2
  40fb66:	cld    
  40fb67:	push   esi
  40fb68:	(bad)  
  40fb69:	fdivrp st(5),st
  40fb6b:	ret    0xf7ec
  40fb6e:	jnp    0x40fb93
  40fb70:	add    eax,DWORD PTR fs:[si]
  40fb74:	mov    ebx,0x42d6f95d
  40fb79:	adc    cl,BYTE PTR [eax+0x7d]
  40fb7c:	pop    ss
  40fb7d:	or     cl,bl
  40fb7f:	je     0x40fba1
  40fb81:	aaa    
  40fb82:	stos   BYTE PTR es:[edi],al
  40fb83:	pop    ebx
  40fb84:	dec    edx
  40fb85:	or     BYTE PTR [edx-0x15f73686],cl
  40fb8b:	fld    QWORD PTR [ebx+0x53]
  40fb8e:	mov    eax,ds:0x13265e98
  40fb93:	(bad)  
  40fb94:	jnp    0x40fb85
  40fb96:	imul   BYTE PTR [esi]
  40fb98:	inc    edi
  40fb99:	hlt    
  40fb9a:	scas   al,BYTE PTR es:[edi]
  40fb9b:	je     0x40fb8b
  40fb9d:	pop    edx
  40fb9e:	es repnz mov bl,0x20
  40fba2:	cmp    DWORD PTR [esi+ecx*4],esp
  40fba5:	inc    ebx
  40fba6:	and    BYTE PTR [edx],bh
  40fba8:	mov    dl,0x41
  40fbaa:	mov    esi,0x1594cfba
  40fbaf:	sub    DWORD PTR [edi-0x45cf637],0xd329c1b8
  40fbb9:	mov    dl,BYTE PTR [edx+0x2ea0db38]
  40fbbf:	pop    edx
  40fbc0:	xchg   esp,eax
  40fbc1:	nop
  40fbc2:	pop    edx
  40fbc3:	push   ebx
  40fbc4:	iret   
  40fbc5:	xor    al,0x49
  40fbc7:	enter  0x4df3,0x39
  40fbcb:	add    DWORD PTR [edi+0x41],ebp
  40fbce:	sbb    eax,0x478caf82
  40fbd3:	cdq    
  40fbd4:	icebp  
  40fbd5:	sub    al,0x31
  40fbd7:	(bad)  
  40fbd8:	jbe    0x40fbe3
  40fbda:	fs mov ch,0x3a
  40fbdd:	or     al,0xe9
  40fbdf:	adc    eax,DWORD PTR [ebx-0x35]
  40fbe2:	dec    esp
  40fbe3:	dec    esi
  40fbe4:	into   
  40fbe5:	cmp    esp,DWORD PTR [ecx-0x4b]
  40fbe8:	je     0x40fba8
  40fbea:	pusha  
  40fbeb:	jle    0x40fbe1
  40fbed:	and    al,0x7b
  40fbef:	gs jmp 0xb181e7e5
  40fbf5:	imul   esi,DWORD PTR [ebx],0xfffffff7
  40fbf8:	dec    ecx
  40fbf9:	ret    
  40fbfa:	add    eax,0x24177c3e
  40fbff:	sbb    ah,BYTE PTR [ecx+ebx*8+0x475e39f0]
  40fc06:	pop    esi
  40fc07:	aaa    
  40fc08:	jmp    0x505d:0x1df67a35
  40fc0f:	scas   al,BYTE PTR es:[edi]
  40fc10:	lds    edx,FWORD PTR ds:0x990aa5b3
  40fc16:	push   0x52
  40fc18:	mov    cl,0x35
  40fc1a:	jle    0x40fc54
  40fc1c:	test   ch,ch
  40fc1e:	sbb    dh,BYTE PTR [edi+0x51147c4c]
  40fc24:	sub    DWORD PTR [esi],ebp
  40fc26:	mov    esp,cs
  40fc28:	add    DWORD PTR [esp+ebx*8-0x5f12625],ebp
  40fc2f:	test   eax,0xc9964ca1
  40fc34:	or     al,0x83
  40fc36:	repz je 0x40fc2e
  40fc39:	lahf   
  40fc3a:	lahf   
  40fc3b:	jo     0x40fc84
  40fc3d:	(bad)  
  40fc3e:	pop    esi
  40fc3f:	mov    ch,0x90
  40fc41:	mov    WORD PTR [ecx],?
  40fc43:	xchg   DWORD PTR [ebp+0x2d],ebx
  40fc46:	jp     0x40fc55
  40fc48:	into   
  40fc49:	lds    ecx,FWORD PTR [eax]
  40fc4b:	in     eax,dx
  40fc4c:	cmp    BYTE PTR ds:0xb23e4998,ah
  40fc52:	jne    0x40fca2
  40fc54:	xchg   ebx,eax
  40fc55:	lahf   
  40fc56:	fs std 
  40fc58:	loop   0x40fc7d
  40fc5a:	sbb    BYTE PTR [esp+edi*1+0x2afe5c0e],al
  40fc61:	rol    bh,cl
  40fc63:	dec    eax
  40fc64:	xchg   DWORD PTR [esi+eax*4-0x22],ecx
  40fc68:	or     BYTE PTR [ebp-0x61],al
  40fc6b:	cbw    
  40fc6d:	jmp    0x12d48709
  40fc72:	aas    
  40fc73:	fst    DWORD PTR [edi+ebp*8+0x392a0430]
  40fc7a:	inc    esi
  40fc7b:	push   edi
  40fc7c:	loop   0x40fc69
  40fc7e:	push   es
  40fc7f:	jle    0x40fc70
  40fc81:	xor    eax,0x704be009
  40fc86:	cmp    esi,esp
  40fc88:	ins    DWORD PTR es:[edi],dx
  40fc89:	mov    al,ds:0x3858111e
  40fc8e:	mov    ds:0x5866e9b8,eax
  40fc93:	out    0xec,al
  40fc95:	jae    0x40fc1c
  40fc97:	sub    ebx,DWORD PTR [edi+0x5d]
  40fc9a:	aaa    
  40fc9b:	out    0x10,eax
  40fc9d:	mov    esp,0x93bd14e9
  40fca2:	push   0xffffff8a
  40fca4:	xchg   edx,eax
  40fca5:	ins    DWORD PTR es:[edi],dx
  40fca6:	cmp    BYTE PTR [ecx+ebp*4-0x330f7758],0x90
  40fcae:	xchg   cl,dl
  40fcb0:	mov    cl,0x54
  40fcb2:	cwde   
  40fcb3:	mov    eax,ds:0xd42d7d8c
  40fcb8:	mov    ah,BYTE PTR [edx-0x6b]
  40fcbb:	out    dx,al
  40fcbc:	cli    
  40fcbd:	mov    ebx,0xc6ce19c1
  40fcc2:	popf   
  40fcc3:	jmp    0x7f24:0xfe93ec9a
  40fcca:	add    cl,dh
  40fccc:	jp     0x40fc53
  40fcce:	pop    ebx
  40fccf:	mov    BYTE PTR [eax+0x5d],ah
  40fcd2:	xchg   esi,eax
  40fcd3:	js     0x40fd2c
  40fcd5:	in     eax,0xd0
  40fcd7:	loop   0x40fca8
  40fcd9:	jl     0x40fd55
  40fcdb:	mov    edi,0x16d4a914
  40fce0:	lds    ebp,FWORD PTR [esi]
  40fce2:	cmc    
  40fce3:	pop    esi
  40fce4:	pushf  
  40fce5:	pop    esp
  40fce6:	test   BYTE PTR [eax+0x3b],ah
  40fce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcea:	loop   0x40fccc
  40fcec:	sub    bh,BYTE PTR [ebp+ebx*4-0x70a69731]
  40fcf3:	xor    BYTE PTR [ecx+0x1b],bl
  40fcf6:	not    BYTE PTR [esi+0x6a]
  40fcf9:	xor    DWORD PTR [esi+0x54],esi
  40fcfc:	push   edi
  40fcfd:	fdivr  QWORD PTR [esi+ebx*2-0x2bc20375]
  40fd04:	lock jns 0x40fc8f
  40fd07:	mov    esp,0x3119f0ab
  40fd0c:	jne    0x40fce7
  40fd0e:	loopne 0x40fcb2
  40fd10:	fcom   DWORD PTR [ebp+0xb]
  40fd13:	mov    gs,WORD PTR [eax]
  40fd15:	neg    BYTE PTR [edx-0x30]
  40fd18:	cmp    ah,BYTE PTR [edi-0x3]
  40fd1b:	enter  0x5f78,0x25
  40fd1f:	or     edx,DWORD PTR [eax+0xf]
  40fd22:	jge    0x40fd40
  40fd24:	dec    ecx
  40fd25:	sbb    esp,edi
  40fd27:	and    DWORD PTR ds:0x91983037,ebx
  40fd2d:	fistp  QWORD PTR [ecx-0x79]
  40fd30:	repz inc DWORD PTR [edi+ecx*8]
  40fd34:	sub    DWORD PTR [edx-0x4e],ebx
  40fd37:	in     al,0x86
  40fd39:	add    ebx,DWORD PTR [ebx-0x3f]
  40fd3c:	xchg   ebp,eax
  40fd3d:	punpcklwd mm1,DWORD PTR [eax]
  40fd40:	popf   
  40fd41:	or     BYTE PTR [eax],ch
  40fd43:	sbb    edx,ecx
  40fd45:	sar    BYTE PTR [ecx-0x1022dbe4],cl
  40fd4b:	mov    esp,esp
  40fd4d:	ds in  eax,dx
  40fd4f:	jns    0x40fd49
  40fd51:	retf   0x3521
  40fd54:	sbb    BYTE PTR [edx+0x1d],0x29
  40fd58:	xor    ebx,edx
  40fd5a:	jl     0x40fd40
  40fd5c:	jp     0x40fd17
  40fd5e:	jae    0x40fce1
  40fd60:	sti    
  40fd61:	push   0xffffffe5
  40fd63:	das    
  40fd64:	shl    DWORD PTR [ebx-0x57],0xae
  40fd68:	out    0x6b,eax
  40fd6a:	jae    0x40fd00
  40fd6c:	fdiv   st,st(4)
  40fd6e:	or     dh,BYTE PTR [ecx-0x57db5305]
  40fd74:	cmp    esp,DWORD PTR ds:[edx+0x6b]
  40fd78:	frstor [eax-0x2c876411]
  40fd7e:	inc    esp
  40fd7f:	pushf  
  40fd80:	fld    QWORD PTR [ebp+0x42]
  40fd83:	pop    ecx
  40fd84:	sti    
  40fd85:	xor    DWORD PTR [ebx-0x45],0xffffffca
  40fd89:	jbe    0x40fd9e
  40fd8b:	xchg   esi,eax
  40fd8c:	repz and al,0xbb
  40fd8f:	push   ds
  40fd90:	imul   DWORD PTR [ecx]
  40fd92:	sbb    eax,0xa919132a
  40fd97:	test   DWORD PTR [ecx+0x784e0b17],edi
  40fd9d:	imul   ecx,DWORD PTR [edi+esi*1],0xb5e22705
  40fda4:	add    eax,0x3bd1888
  40fda9:	aad    0x4
  40fdab:	test   al,0x63
  40fdad:	mov    eax,0x1de28152
  40fdb2:	fsubr  DWORD PTR [edi]
  40fdb4:	pushf  
  40fdb5:	dec    esp
  40fdb6:	sahf   
  40fdb7:	int    0x94
  40fdb9:	test   BYTE PTR [esi+0x3e],al
  40fdbc:	out    0x30,eax
  40fdbe:	jno    0x40fda9
  40fdc0:	sub    ch,BYTE PTR ds:0x8f3999c7
  40fdc6:	pop    eax
  40fdc7:	dec    ebx
  40fdc8:	retf   
  40fdc9:	push   esi
  40fdca:	mov    edx,0xbe49f213
  40fdcf:	or     edi,DWORD PTR [ebp-0x43]
  40fdd2:	out    0xd8,eax
  40fdd4:	int    0xea
  40fdd6:	loop   0x40fd70
  40fdd8:	and    bl,BYTE PTR [edx-0x15ea16eb]
  40fdde:	sti    
  40fddf:	repz xor cl,BYTE PTR [ecx-0x666fc23c]
  40fde6:	mov    eax,0x3b62d38b
  40fdeb:	mov    ch,0xd6
  40fded:	popf   
  40fdee:	int    0x1a
  40fdf0:	loope  0x40fe16
  40fdf2:	mov    al,0x6b
  40fdf4:	scas   al,BYTE PTR es:[edi]
  40fdf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdf6:	popa   
  40fdf7:	mov    eax,0xb73774d6
  40fdfc:	mov    al,ds:0x12f7e5e3
  40fe01:	cwde   
  40fe02:	cmp    ch,dl
  40fe04:	inc    edx
  40fe05:	pop    ebx
  40fe06:	nop
  40fe07:	fidivr WORD PTR [esi-0x4d]
  40fe0a:	jmp    0x40fdcf
  40fe0c:	dec    edx
  40fe0d:	rcl    BYTE PTR [edx],0x20
  40fe10:	fiadd  WORD PTR [esi-0x17]
  40fe13:	divps  xmm0,XMMWORD PTR [edi+0x5e0af5a8]
  40fe1a:	jns    0x40fdf9
  40fe1c:	fistp  DWORD PTR [edi]
  40fe1e:	inc    eax
  40fe1f:	mov    al,0x35
  40fe21:	ds ins DWORD PTR es:[edi],dx
  40fe23:	shr    DWORD PTR [esi+eiz*2+0x1cbfb42e],cl
  40fe2a:	mov    dh,0xca
  40fe2c:	imul   esi,DWORD PTR [eax+0x4d],0x4ad20d96
  40fe33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe34:	clc    
  40fe35:	aaa    
  40fe36:	jge    0x40fdc7
  40fe38:	sub    al,0x8d
  40fe3a:	mov    bl,0x17
  40fe3c:	xor    BYTE PTR [eax-0x71e33b7f],cl
  40fe42:	sub    al,0x2b
  40fe44:	or     al,0x96
  40fe46:	cmp    bh,dh
  40fe48:	bound  esp,QWORD PTR [esi-0x47]
  40fe4b:	add    bl,BYTE PTR [esi-0x53]
  40fe4e:	mov    edx,DWORD PTR [esi-0x6f]
  40fe51:	mul    DWORD PTR [edi+0x3fe9ba07]
  40fe57:	test   edx,ebp
  40fe59:	retf   0x7fdd
  40fe5c:	xchg   ebx,eax
  40fe5d:	cwde   
  40fe5e:	inc    ebx
  40fe5f:	fidiv  DWORD PTR [edx-0x5ec9ebda]
  40fe65:	lea    edx,[edx-0x1f]
  40fe68:	push   ebx
  40fe69:	mov    ecx,0x4081da36
  40fe6e:	or     ebx,edi
  40fe70:	addr16 cdq 
  40fe72:	push   ebx
  40fe73:	stos   DWORD PTR es:[edi],eax
  40fe74:	inc    ecx
  40fe75:	xchg   ebx,eax
  40fe76:	sub    eax,0x42010410
  40fe7b:	dec    esp
  40fe7c:	bound  ebx,QWORD PTR [esi-0x338bbf3b]
  40fe82:	or     DWORD PTR [edi+0x74],eax
  40fe85:	ds pushf 
  40fe87:	add    al,0xf5
  40fe89:	mov    dh,0xfa
  40fe8b:	stos   DWORD PTR es:[edi],eax
  40fe8c:	jnp    0x40fe97
  40fe8e:	adc    DWORD PTR [edi-0x7e],edx
  40fe91:	int    0x21
  40fe93:	xchg   ecx,eax
  40fe94:	mov    ch,0x86
  40fe96:	cld    
  40fe97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe98:	sbb    al,0xa9
  40fe9a:	loope  0x40fe87
  40fe9c:	pop    ebp
  40fe9d:	rol    DWORD PTR [eax-0x545a1fc2],0x36
  40fea4:	push   0x61
  40fea6:	repz loopne 0x40fec7
  40fea9:	lahf   
  40feaa:	leave  
  40feab:	arpl   WORD PTR [edi-0x47136fdc],ax
  40feb1:	sbb    eax,0x331c62e9
  40feb6:	outs   dx,DWORD PTR ds:[esi]
  40feb7:	mov    DWORD PTR [ecx],eax
  40feb9:	sub    al,0xd0
  40febb:	cmovo  esi,esp
  40febe:	mov    dh,0xf8
  40fec0:	jns    0x40fe62
  40fec2:	adc    ecx,DWORD PTR [esi-0x5d]
  40fec5:	ja     0x40ff1a
  40fec7:	fs inc edx
  40fec9:	mov    bh,0xc
  40fecb:	inc    edx
  40fecc:	jmp    0xcd16c21e
  40fed1:	and    eax,0x1bae0fa0
  40fed6:	pop    edx
  40fed7:	mov    edx,0x80842f11
  40fedc:	push   esi
  40fedd:	mov    esi,0xea322fc5
  40fee2:	jmp    0xd04c6283
  40fee7:	jmp    eax
  40fee9:	scas   eax,DWORD PTR es:[edi]
  40feea:	aaa    
  40feeb:	mov    ecx,DWORD PTR [edi+0x52e04d23]
  40fef1:	push   0xffffffc6
  40fef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fef4:	xor    eax,0x5d50ebc7
  40fef9:	mov    BYTE PTR [eax+0x4a33420a],0x86
  40ff00:	jmp    0x40fe87
  40ff02:	scas   eax,DWORD PTR es:[edi]
  40ff03:	mov    ch,0xdb
  40ff05:	popa   
  40ff06:	movq   mm4,mm0
  40ff09:	repz fwait
  40ff0b:	xor    bl,dl
  40ff0d:	inc    esp
  40ff0e:	fimul  DWORD PTR [ebx+0x7e15f449]
  40ff14:	out    dx,eax
  40ff15:	cmp    eax,esp
  40ff17:	inc    DWORD PTR [edi]
  40ff19:	stos   BYTE PTR es:[edi],al
  40ff1a:	pop    ss
  40ff1b:	add    ebx,ebp
  40ff1d:	fs lock dec eax
  40ff20:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff22:	js     0x40fecb
  40ff24:	cmp    eax,0x521c9b3b
  40ff29:	add    BYTE PTR [esi+0x34],dl
  40ff2c:	(bad)  
  40ff2d:	or     eax,edi
  40ff2f:	mov    dl,0xa9
  40ff31:	sahf   
  40ff32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff33:	jmp    DWORD PTR [ebx+0x3ae6e5d2]
  40ff39:	leave  
  40ff3a:	clc    
  40ff3b:	dec    edx
  40ff3c:	and    al,0x20
  40ff3e:	mov    ds,WORD PTR [edi+eax*1]
  40ff41:	inc    esp
  40ff42:	xchg   ebp,eax
  40ff43:	cdq    
  40ff44:	push   ecx
  40ff45:	pop    edi
  40ff46:	pop    ss
  40ff47:	jne    0x40ff97
  40ff49:	loopne 0x40ff30
  40ff4b:	mov    al,ds:0x3789edcb
  40ff50:	in     eax,dx
  40ff51:	sub    BYTE PTR [edx+0x62f027b9],al
  40ff57:	cmp    BYTE PTR [ecx],ch
  40ff59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff5a:	mov    ebx,DWORD PTR [eax]
  40ff5c:	xor    al,0xf8
  40ff5e:	fs loope 0x40ff34
  40ff61:	mov    ds:0x8a2f9435,eax
  40ff66:	xor    BYTE PTR [eax],al
  40ff68:	mov    eax,ds:0xe0115028
  40ff6d:	mov    cl,BYTE PTR [edi-0xbee9d25]
  40ff73:	aas    
  40ff74:	lods   al,BYTE PTR ds:[esi]
  40ff75:	cmp    eax,0x690c2d2
  40ff7a:	cld    
  40ff7b:	cld    
  40ff7c:	mov    esi,eax
  40ff7e:	rol    BYTE PTR [ebx+ecx*8+0x6f],cl
  40ff82:	cmp    ecx,eax
  40ff84:	or     DWORD PTR [ebp+0x19],eax
  40ff87:	aad    0x50
  40ff89:	sbb    eax,0xd3cfeb8c
  40ff8e:	fwait
  40ff8f:	stos   DWORD PTR es:[edi],eax
  40ff90:	ins    DWORD PTR es:[edi],dx
  40ff91:	xchg   BYTE PTR [esi-0x2e],al
  40ff94:	mov    cl,0x81
  40ff96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff97:	mov    ebx,0x39c58cab
  40ff9c:	jl     0x40ffe1
  40ff9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff9f:	or     al,0x39
  40ffa1:	push   es
  40ffa2:	cs (bad) 
  40ffa4:	mov    esp,0xd01de9d8
  40ffa9:	pop    edx
  40ffaa:	scas   al,BYTE PTR es:[edi]
  40ffab:	mov    esp,DWORD PTR [eax+0x19]
  40ffae:	test   DWORD PTR cs:[eax-0x133287c6],edi
  40ffb5:	(bad)  
  40ffb6:	push   ecx
  40ffb7:	mov    ds:0xf208a61e,al
  40ffbc:	and    DWORD PTR [ebx+ebx*1-0x7b],esi
  40ffc0:	mov    ecx,0x770c06d0
  40ffc5:	test   BYTE PTR [edx],bh
  40ffc7:	inc    ebx
  40ffc8:	sbb    eax,0xfeba8215
  40ffcd:	(bad)  
  40ffce:	cs xchg ebx,eax
  40ffd0:	jo     0x40ffbb
  40ffd2:	mov    bh,0x6e
  40ffd4:	rol    bl,1
  40ffd6:	aaa    
  40ffd7:	test   DWORD PTR [ebp+0x33],edx
  40ffda:	sbb    bl,dl
  40ffdc:	out    0xe8,eax
  40ffde:	jb     0x40ff9c
  40ffe0:	mov    ecx,0xec9792b1
  40ffe5:	jg     0x40ff85
  40ffe7:	lahf   
  40ffe8:	mov    edi,0x39e67e7a
  40ffed:	arpl   cx,cx
  40ffef:	in     eax,0xa6
  40fff1:	addr16 leave 
  40fff3:	scas   eax,DWORD PTR es:[edi]
  40fff4:	or     al,0x7e
  40fff6:	cli    
  40fff7:	inc    ebx
  40fff8:	ret    0x4a0f
  40fffb:	cmp    esi,esi
  40fffd:	xor    eax,0xd1688926
  410002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410003:	clc    
  410004:	and    eax,0x26a35cb
  410009:	in     al,dx
  41000a:	enter  0x85f,0x62
  41000e:	imul   edx,DWORD PTR [ebx+0x2c],0xffffffa7
  410012:	loop   0x40ffcd
  410014:	adc    DWORD PTR [ebx-0x1d],esp
  410017:	sub    bh,BYTE PTR [ecx+0x6f]
  41001a:	pop    edi
  41001b:	cs je  0x410068
  41001e:	xchg   edi,eax
  41001f:	mul    BYTE PTR [edi+0x2c]
  410022:	jmp    0xb8fe:0xc3859453
  410029:	mov    bh,bl
  41002b:	and    edi,DWORD PTR [edi+0x76]
  41002e:	aam    0xa2
  410030:	inc    edx
  410031:	push   esp
  410032:	(bad)  
  410033:	jecxz  0x40ffee
  410035:	scas   eax,DWORD PTR es:[edi]
  410036:	inc    ecx
  410037:	arpl   ax,dx
  410039:	push   ecx
  41003a:	adc    DWORD PTR [ebx],ebx
  41003c:	dec    ebx
  41003d:	and    ecx,DWORD PTR [eax]
  41003f:	repnz and al,0x93
  410042:	(bad)  
  410043:	mov    edi,0xe272c696
  410048:	test   al,0x23
  41004a:	xchg   ebp,eax
  41004b:	out    dx,al
  41004c:	push   esp
  41004d:	inc    edi
  41004e:	pusha  
  41004f:	loopne 0x4100c8
  410051:	shl    esi,cl
  410053:	mov    eax,0x9932a5b
  410058:	push   ecx
  410059:	fwait
  41005a:	jg     0x41000d
  41005c:	mov    al,ds:0x3697bbba
  410061:	fucom  st(7)
  410063:	and    ah,BYTE PTR [esi+eax*2-0x8f71d3]
  41006a:	push   eax
  41006b:	sbb    al,0xb0
  41006d:	push   ds
  41006e:	mov    WORD PTR [eax-0xa],es
  410071:	mov    ah,BYTE PTR [ebx]
  410073:	test   al,0xf0
  410075:	mov    ds:0x46963924,eax
  41007a:	shl    DWORD PTR [edi],0xf7
  41007d:	adc    BYTE PTR [edi],dh
  41007f:	hlt    
  410080:	lods   al,BYTE PTR ds:[esi]
  410081:	sub    cl,dl
  410083:	arpl   WORD PTR [ebx],bx
  410085:	aam    0x5f
  410087:	test   al,0x34
  410089:	enter  0xfe9c,0xa0
  41008d:	mov    al,ds:0xa33b2797
  410092:	call   0x695b:0x4aedbcc7
  410099:	inc    ebp
  41009a:	jnp    0x41003b
  41009c:	mov    dl,0x82
  41009e:	inc    edx
  41009f:	rcr    BYTE PTR [edx],1
  4100a1:	or     al,BYTE PTR ds:0x58d56ca1
  4100a7:	push   es
  4100a8:	add    eax,eax
  4100aa:	pop    ecx
  4100ab:	outs   dx,DWORD PTR ds:[esi]
  4100ac:	sub    eax,0x9cfb9182
  4100b1:	popa   
  4100b2:	xchg   edi,eax
  4100b3:	dec    eax
  4100b4:	stc    
  4100b5:	loop   0x410050
  4100b7:	ss aam 0x76
  4100ba:	cmc    
  4100bb:	ja     0x41007c
  4100bd:	loopne 0x4100a6
  4100bf:	xor    eax,0x9759d7f7
  4100c4:	mov    ebp,DWORD PTR [ebp+edi*1-0x49571c82]
  4100cb:	inc    ecx
  4100cc:	fucomp st(1)
  4100ce:	icebp  
  4100cf:	dec    edx
  4100d0:	or     BYTE PTR [esi+0x6247aa9],ah
  4100d6:	js     0x410155
  4100d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100d9:	xor    DWORD PTR [edx-0x6d],esi
  4100dc:	push   ecx
  4100dd:	adc    eax,0x6af57461
  4100e2:	jne    0x410101
  4100e4:	jne    0x410094
  4100e6:	scas   al,BYTE PTR es:[edi]
  4100e7:	cmc    
  4100e8:	inc    edi
  4100e9:	mov    bl,0x4f
  4100eb:	(bad)
  4100ee:	mov    dh,0x41
  4100f0:	push   edx
  4100f1:	lahf   
  4100f2:	iret   
  4100f3:	jp     0x4100df
  4100f5:	(bad)  
  4100f6:	ficom  DWORD PTR [esi-0x49c54ac6]
  4100fc:	in     al,0xb9
  4100fe:	mov    esp,ebx
  410100:	sbb    eax,0xcc9bc697
  410105:	pusha  
  410106:	lock mov ds:0x418b831,eax
  41010c:	repz jno 0x410155
  41010f:	adc    BYTE PTR [edx-0x39],dl
  410112:	fist   WORD PTR [esi+eiz*2]
  410115:	repnz loope 0x4100db
  410118:	xor    eax,0xc1ce653
  41011d:	sbb    bh,BYTE PTR [edx-0x5fe5d685]
  410123:	in     al,0xcc
  410125:	in     eax,0x5c
  410127:	in     al,dx
  410128:	jo     0x4100d2
  41012a:	pop    eax
  41012b:	mov    dl,0xb
  41012d:	xchg   ebp,eax
  41012e:	pop    eax
  41012f:	mov    bh,0x5f
  410131:	sub    al,0xcc
  410133:	fnsave [ebp+0x11]
  410136:	call   0x2ecb:0x16db367b
  41013d:	loopne 0x4100c7
  41013f:	ins    DWORD PTR es:[edi],dx
  410140:	imul   ebx,DWORD PTR fs:[edi],0x11df0726
  410147:	stos   DWORD PTR es:[edi],eax
  410148:	mov    WORD PTR [eax+0x9],?
  41014b:	outs   dx,DWORD PTR ds:[esi]
  41014c:	fild   QWORD PTR [esi+ebx*1+0x53]
  410150:	and    eax,0xdb565686
  410155:	push   ebp
  410156:	mov    esi,0xdc2d04e6
  41015b:	jb     0x410112
  41015d:	adc    ch,BYTE PTR [ecx+0x34]
  410160:	xor    DWORD PTR [ebx],esi
  410162:	inc    edi
  410163:	pusha  
  410164:	pop    esi
  410165:	mov    dh,0xe7
  410167:	or     eax,0x70a8d899
  41016c:	pop    esp
  41016d:	std    
  41016e:	mov    al,ds:0x4089d710
  410173:	push   cs
  410174:	(bad)  
  410175:	ud0    edx,DWORD PTR [edx]
  410178:	push   cs
  410179:	pop    esp
  41017a:	jmp    0xde6c:0x4a9156ff
  410181:	xchg   ebp,eax
  410182:	inc    ebx
  410183:	shr    DWORD PTR [esi],cl
  410185:	fnstenv [ecx*4-0x29ce43da]
  41018c:	mov    ah,0xe
  41018e:	pop    es
  41018f:	mov    DWORD PTR ds:0x2cb9d60d,edi
  410195:	ja     0x410126
  410197:	je     0x41020c
  410199:	xchg   ebp,eax
  41019a:	sbb    al,0x94
  41019c:	mov    eax,0x60d057ec
  4101a1:	jo     0x4101d4
  4101a3:	(bad)  
  4101a4:	test   ax,0xd07
  4101a8:	mov    ecx,0x7574cb22
  4101ad:	dec    edi
  4101ae:	add    DWORD PTR [ebp-0x117cc30],esi
  4101b4:	mov    edi,0xc5324339
  4101b9:	jmp    0xc6e1d707
  4101be:	or     ch,ch
  4101c0:	sub    eax,0x9c43e510
  4101c5:	adc    BYTE PTR [ebx],ah
  4101c7:	or     BYTE PTR [edi-0x5a],ah
  4101ca:	int    0xc2
  4101cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101cd:	int3   
  4101ce:	imul   ebp,DWORD PTR fs:[ecx-0x41b580f1],0x40dda433
  4101d9:	push   ds
  4101da:	push   edi
  4101db:	shl    DWORD PTR [edx+0x3ad0216],0xcc
  4101e2:	out    0x4c,eax
  4101e4:	retf   0x4ff5
  4101e7:	and    al,0x22
  4101e9:	push   ebp
  4101ea:	adc    bl,BYTE PTR [edi+0x1f697b6]
  4101f0:	mov    esi,0x26d27143
  4101f5:	pop    ebp
  4101f6:	xor    dl,BYTE PTR [ecx-0x7dabf534]
  4101fc:	push   ss
  4101fd:	fldenv [edx+edx*2-0x36]
  410201:	jnp    0x410256
  410203:	jne    0x4101b3
  410205:	xchg   ah,bl
  410207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410208:	xor    eax,0xe3b26a2e
  41020d:	sub    al,cl
  41020f:	std    
  410210:	test   DWORD PTR [ebx+ecx*1+0xfa8ecec],esp
  410217:	xchg   ebp,eax
  410218:	in     al,dx
  410219:	dec    ecx
  41021a:	not    edi
  41021c:	shl    BYTE PTR [eax+0x46],cl
  41021f:	leave  
  410220:	push   ss
  410221:	cli    
  410222:	imul   edi,DWORD PTR [ebx+esi*4-0x43628993],0x5d4c5002
  41022d:	push   0xffffff89
  41022f:	mov    ecx,0x97070404
  410234:	rcr    bh,0xc9
  410237:	out    0xe1,eax
  410239:	add    al,0x29
  41023b:	fsub   DWORD PTR [edx]
  41023d:	ror    BYTE PTR [esp+eax*1],0x7c
  410241:	push   ebp
  410242:	loop   0x410245
  410244:	or     DWORD PTR [ebp-0x38],esi
  410247:	add    bh,BYTE PTR [ecx+edi*4]
  41024a:	ins    DWORD PTR es:[edi],dx
  41024b:	mov    edx,0x2955d3b4
  410250:	(bad)  
  410251:	jle    0x410231
  410253:	jmp    0x3c99d635
  410258:	mov    bl,0x78
  41025a:	mov    ebp,esi
  41025c:	jnp    0x41026a
  41025e:	fs aaa 
  410260:	inc    ebp
  410261:	push   ds
  410262:	cmp    BYTE PTR ds:[edx],dh
  410265:	xchg   esp,eax
  410266:	mov    ecx,0x1e23675f
  41026b:	or     ah,BYTE PTR [eax-0x41c5c9b]
  410271:	pop    ss
  410272:	addr16 out 0xc6,al
  410275:	in     eax,dx
  410276:	das    
  410277:	int    0x11
  410279:	daa    
  41027a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41027b:	mov    esp,0xd9473740
  410280:	out    0x2d,al
  410282:	jno    0x410287
  410284:	test   DWORD PTR [eax],ecx
  410286:	dec    ebx
  410287:	loopne 0x410247
  410289:	dec    esi
  41028a:	xchg   esi,eax
  41028b:	sbb    al,0x87
  41028d:	shl    BYTE PTR [ebx],1
  41028f:	into   
  410290:	jns    0x410275
  410292:	jp     0x41029e
  410294:	cli    
  410295:	into   
  410296:	dec    esi
  410297:	mov    ds:0x34008b1,al
  41029c:	gs mov eax,0x1b47f2a
  4102a2:	in     eax,0xb2
  4102a4:	pop    eax
  4102a5:	dec    esp
  4102a6:	int3   
  4102a7:	imul   esp,DWORD PTR [ebp-0xa],0x33
  4102ab:	mov    edx,0xc0a5314c
  4102b0:	cli    
  4102b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102b2:	je     0x41027a
  4102b4:	inc    ebx
  4102b5:	call   0x6c383e3f
  4102ba:	and    eax,0x1722a1ba
  4102bf:	fld    DWORD PTR [ecx]
  4102c1:	loopne 0x410284
  4102c3:	mov    bl,0xe
  4102c5:	jge    0x4102d0
  4102c7:	xchg   al,ah
  4102c9:	xor    ebx,edi
  4102cb:	fyl2xp1 
  4102cd:	push   ecx
  4102ce:	xchg   ecx,eax
  4102cf:	pop    edi
  4102d0:	nop
  4102d1:	push   es
  4102d2:	lahf   
  4102d3:	jl     0x41028b
  4102d5:	addr16 call 0xab19:0xb108d251
  4102dd:	pop    eax
  4102de:	jl     0x4102d2
  4102e0:	cwde   
  4102e1:	adc    BYTE PTR [edi],ch
  4102e3:	xchg   edx,eax
  4102e4:	loopne 0x4102cc
  4102e6:	clc    
  4102e7:	jno    0x410328
  4102e9:	or     bl,BYTE PTR [ecx+ebp*8-0x6a]
  4102ed:	pushf  
  4102ee:	and    DWORD PTR [ebp+ebx*4-0x39],ecx
  4102f2:	inc    esi
  4102f3:	xchg   edi,eax
  4102f4:	ret    
  4102f5:	in     eax,dx
  4102f6:	mov    eax,0x555c4ae3
  4102fb:	push   ebp
  4102fc:	iret   
  4102fd:	jns    0x410302
  4102ff:	out    dx,eax
  410300:	mov    ds:0xfeb10662,eax
  410305:	popa   
  410306:	add    esi,DWORD PTR [ebx]
  410308:	js     0x4102a8
  41030a:	(bad)  
  41030c:	sti    
  41030d:	xor    ebx,DWORD PTR [edi-0x7d]
  410310:	sahf   
  410311:	or     al,0x45
  410313:	ficom  DWORD PTR [edi+0x69]
  410316:	cmp    eax,0xe235e815
  41031b:	sar    al,1
  41031d:	iret   
  41031e:	jg     0x410338
  410320:	dec    esp
  410321:	pushf  
  410322:	jbe    0x4102fb
  410324:	into   
  410325:	lds    eax,FWORD PTR [ebp-0x1be3b06]
  41032b:	ja     0x410358
  41032d:	ins    DWORD PTR es:[edi],dx
  41032e:	ds stos BYTE PTR es:[edi],al
  410330:	out    dx,eax
  410331:	imul   ecx,DWORD PTR [ecx],0x70
  410334:	cmp    eax,0x461bd807
  410339:	jae    0x4102f4
  41033b:	(bad)  
  41033c:	mov    DWORD PTR [edi+esi*8+0x1f],esi
  410340:	arpl   WORD PTR [esi],dx
  410342:	out    dx,al
  410343:	stos   DWORD PTR es:[edi],eax
  410344:	js     0x410380
  410346:	scas   al,BYTE PTR es:[edi]
  410347:	and    al,0xd
  410349:	loope  0x410304
  41034b:	jno    0x41035c
  41034d:	pop    ebx
  41034e:	push   0x48
  410350:	or     al,0x26
  410352:	mov    edx,0xd9af9e4b
  410357:	outs   dx,BYTE PTR ds:[esi]
  410358:	sbb    BYTE PTR [edx+0x7b],ch
  41035b:	icebp  
  41035c:	(bad)  
  41035d:	jnp    0x410305
  41035f:	mov    esi,0x4073a650
  410364:	push   0xb65b90fa
  410369:	leave  
  41036a:	ror    esp,1
  41036c:	mov    edi,0x2ffb28a
  410371:	retf   0xba8a
  410374:	push   edi
  410375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410376:	xor    al,0x26
  410378:	aas    
  410379:	sar    DWORD PTR [edx+0x1e],cl
  41037c:	pop    esp
  41037d:	ror    ah,cl
  41037f:	repz inc edi
  410381:	inc    eax
  410382:	push   eax
  410383:	sbb    BYTE PTR [edx-0x19],bh
  410386:	sahf   
  410387:	push   ebp
  410388:	pop    eax
  410389:	or     al,0xfe
  41038b:	jo     0x41032f
  41038d:	cmp    bh,cl
  41038f:	imul   esi,DWORD PTR [ecx-0x44],0xf1dc9a1a
  410396:	daa    
  410397:	mov    esi,0xba467789
  41039c:	adc    eax,0x2e7037ef
  4103a1:	jecxz  0x410326
  4103a3:	cmp    eax,DWORD PTR [eax+0x3e]
  4103a6:	cmp    eax,0x4bebeb6a
  4103ab:	mov    edi,0x8e679064
  4103b0:	mov    ecx,0x2c337912
  4103b5:	sbb    al,0x25
  4103b7:	sbb    eax,0xab007fa2
  4103bc:	call   0x95f8:0xca4bc50c
  4103c3:	fwait
  4103c4:	pop    esi
  4103c5:	fst    DWORD PTR [edi]
  4103c7:	fcom   QWORD PTR [edi-0x7f371a1d]
  4103cd:	mov    al,0x28
  4103cf:	adc    DWORD PTR [esi+0x7a],esp
  4103d2:	xchg   edx,eax
  4103d3:	mov    ebx,0x18b7baeb
  4103d8:	and    eax,0x63b2613e
  4103dd:	(bad)  
  4103df:	jecxz  0x41043e
  4103e1:	rcl    BYTE PTR [eax-0x6a],1
  4103e4:	test   BYTE PTR [esi],0x3a
  4103e7:	adc    edi,DWORD PTR [ecx]
  4103e9:	lahf   
  4103ea:	out    dx,al
  4103eb:	sub    bh,BYTE PTR [edi*1+0x52258937]
  4103f2:	test   DWORD PTR [edi],esp
  4103f4:	(bad)  
  4103f5:	shl    ah,0xe9
  4103f8:	aam    0xd
  4103fa:	jmp    0xe3e1:0xb2f1e889
  410401:	inc    esi
  410402:	les    esi,FWORD PTR [edi+0x1b4e2d42]
  410408:	scas   eax,DWORD PTR es:[edi]
  410409:	std    
  41040a:	daa    
  41040b:	jo     0x410416
  41040d:	mov    bl,0x62
  41040f:	cld    
  410410:	jbe    0x4103c0
  410412:	mov    al,ds:0x7bec7d8c
  410417:	call   0x752c3c94
  41041c:	je     0x41047a
  41041e:	je     0x4103d2
  410420:	lods   al,BYTE PTR ds:[esi]
  410421:	push   eax
  410422:	std    
  410423:	mov    BYTE PTR [edx],dl
  410425:	dec    eax
  410426:	arpl   bp,sp
  410428:	nop
  410429:	scas   al,BYTE PTR es:[edi]
  41042a:	and    DWORD PTR [edi+eiz*8-0x58],0x48d71f29
  410432:	sahf   
  410433:	shr    edx,1
  410435:	rep ins DWORD PTR es:[edi],dx
  410437:	(bad)  
  410438:	ins    BYTE PTR es:[edi],dx
  410439:	ss jle 0x410437
  41043c:	sub    esi,DWORD PTR [ecx+edx*2+0x1a]
  410440:	xchg   ebp,eax
  410441:	sub    DWORD PTR [ebp+0x45],esi
  410444:	lea    ecx,[ebp+0x3c]
  410447:	out    0x67,eax
  410449:	sbb    esp,edi
  41044b:	inc    eax
  41044c:	jo     0x4104a7
  41044e:	mov    ds:0x628a9de7,al
  410453:	ins    BYTE PTR es:[edi],dx
  410454:	pop    edi
  410455:	mov    ecx,0x64a1fa53
  41045a:	or     ah,dl
  41045c:	xchg   DWORD PTR ds:0x7517449a,edi
  410462:	mov    ds:0xe64c5d80,al
  410467:	adc    DWORD PTR [esi],edi
  410469:	call   0x3c04:0x42982d05
  410470:	imul   edi,DWORD PTR ds:0x49d2d337,0x405457b
  41047a:	jl     0x410498
  41047c:	test   eax,0xa9397f18
  410481:	xchg   edi,eax
  410482:	dec    esi
  410483:	dec    ebp
  410484:	outs   dx,DWORD PTR ds:[esi]
  410485:	jne    0x41047e
  410487:	addr16 popa 
  410489:	jae    0x41040d
  41048b:	xor    al,0xd8
  41048d:	ret    0x10a4
  410490:	retf   0xd30c
  410493:	mov    ebx,0xe1ebc7f9
  410498:	fstp   DWORD PTR [ecx+0x6a7b2fc2]
  41049e:	mov    ebx,0xb7be354c
  4104a3:	add    edi,ebx
  4104a5:	ins    DWORD PTR es:[edi],dx
  4104a6:	dec    ebx
  4104a7:	pop    ecx
  4104a8:	stc    
  4104a9:	pusha  
  4104aa:	ds and eax,0x6976f06
  4104b0:	aaa    
  4104b1:	(bad)  
  4104b2:	sbb    eax,0x5b89e293
  4104b7:	mov    ebx,0x4d14b107
  4104bc:	mov    dl,0xfb
  4104be:	sar    DWORD PTR [edi-0x2a],cl
  4104c1:	sub    BYTE PTR [ecx+0x198b3b9e],al
  4104c7:	xchg   edi,eax
  4104c8:	mov    edx,ss
  4104ca:	pop    ecx
  4104cb:	pop    ecx
  4104cc:	jne    0x410505
  4104ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104cf:	jo     0x410488
  4104d1:	stos   BYTE PTR es:[edi],al
  4104d2:	mov    al,0xa8
  4104d4:	mov    al,ds:0x64c1e87f
  4104d9:	test   al,0xf3
  4104db:	repnz inc esp
  4104dd:	fnstcw WORD PTR [ecx+0x12]
  4104e0:	and    dh,BYTE PTR [edi+0x27]
  4104e3:	pop    edx
  4104e4:	ds cwde 
  4104e6:	or     DWORD PTR [ebx+ecx*1+0x21a7e8c2],ebp
  4104ed:	ds or  eax,0x6346e55c
  4104f3:	adc    DWORD PTR [edi+0x5cc50d14],eax
  4104f9:	add    ebp,DWORD PTR [edi+ebp*8-0x1c]
  4104fd:	mov    ch,0x8c
  4104ff:	xchg   ebp,eax
  410500:	add    BYTE PTR [esi-0xf815c26],0xba
  410507:	cmp    BYTE PTR [ebp-0x7b],dh
  41050a:	icebp  
  41050b:	lock mov ds:0xd8a61366,eax
  410511:	cmp    dh,BYTE PTR [eax-0x7f]
  410514:	or     al,al
  410516:	dec    edi
  410517:	pop    ecx
  410518:	mov    edi,edi
  41051a:	push   eax
  41051b:	popf   
  41051c:	lea    esp,[esp+edx*4]
  41051f:	mov    esp,0xa5f29c50
  410524:	fnsave [ebp+0x56]
  410527:	mov    ch,0xf
  410529:	sti    
  41052a:	inc    edx
  41052b:	and    DWORD PTR [edx-0x50],edx
  41052e:	ins    DWORD PTR es:[edi],dx
  41052f:	inc    eax
  410530:	shr    DWORD PTR [esi-0x1bb791cd],0xc3
  410537:	lea    edi,[ebp-0xe]
  41053a:	(bad)  
  41053b:	jl     0x410545
  41053d:	ins    DWORD PTR es:[edi],dx
  41053e:	sub    al,0x47
  410540:	pop    ds
  410541:	pop    ebx
  410542:	hlt    
  410543:	ret    
  410544:	int    0x1b
  410546:	sti    
  410547:	fs jnp 0x410564
  41054a:	add    BYTE PTR [edx+ebx*8+0x6b],0x30
  41054f:	mov    WORD PTR [ecx+0x4a],fs
  410552:	in     eax,0x3c
  410554:	push   edx
  410555:	xchg   DWORD PTR [ecx+edx*8-0xf],ebx
  410559:	xchg   esi,eax
  41055a:	cmp    al,0x56
  41055c:	sub    bh,BYTE PTR [esi+0x61]
  41055f:	dec    edx
  410560:	and    eax,0x340f576
  410565:	pop    ss
  410566:	lock sbb ecx,DWORD PTR [edi-0x11]
  41056a:	mov    al,BYTE PTR [esi]
  41056c:	push   eax
  41056d:	in     al,dx
  41056e:	cmp    eax,edi
  410570:	ficomp WORD PTR [eax+0x334ab6cc]
  410576:	les    esp,FWORD PTR [ebx]
  410578:	xchg   edi,eax
  410579:	jnp    0x41050f
  41057b:	add    cl,BYTE PTR [ebx-0x7611ddf3]
  410581:	inc    DWORD PTR [ebp+0x4fc3ed31]
  410587:	xor    BYTE PTR [esi+0x588cc62c],0x5a
  41058e:	ret    
  41058f:	aas    
  410590:	test   BYTE PTR [ebx],0x6a
  410593:	jbe    0x41054a
  410595:	jmp    0xd27819a
  41059a:	jnp    0x4105dd
  41059c:	mov    ch,0x50
  41059e:	repnz into 
  4105a0:	sub    al,0xa
  4105a2:	sbb    eax,0xa50468c6
  4105a7:	in     eax,dx
  4105a8:	test   al,0xcf
  4105aa:	adc    edx,DWORD PTR [bx+si]
  4105ad:	pop    es
  4105ae:	pop    esp
  4105af:	push   edx
  4105b0:	das    
  4105b1:	aam    0x24
  4105b3:	cmc    
  4105b4:	nop
  4105b5:	jp     0x41062c
  4105b7:	fbld   TBYTE PTR [eax+0x7256222d]
  4105bd:	pusha  
  4105be:	xlat   BYTE PTR ds:[ebx]
  4105bf:	lea    edi,[ecx]
  4105c1:	cdq    
  4105c2:	lds    esp,FWORD PTR [ebp-0x61c9b52a]
  4105c8:	xchg   DWORD PTR [edi+0x7b1cabf7],edi
  4105ce:	ins    DWORD PTR es:[edi],dx
  4105cf:	popa   
  4105d0:	nop
  4105d1:	or     bl,BYTE PTR cs:[esi-0x40]
  4105d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105d6:	lods   eax,DWORD PTR ds:[esi]
  4105d7:	shl    BYTE PTR [eax],1
  4105d9:	and    DWORD PTR [eax+edx*8-0xc],ebx
  4105dd:	dec    ecx
  4105de:	add    al,0x16
  4105e0:	inc    ebp
  4105e1:	jbe    0x410632
  4105e3:	mov    eax,esi
  4105e5:	adc    ebx,DWORD PTR [ecx]
  4105e7:	bound  ebp,QWORD PTR [ebp+0x59]
  4105ea:	or     DWORD PTR [ebx-0x40],ebp
  4105ed:	dec    esp
  4105ee:	xor    eax,0xcf607390
  4105f3:	mov    dh,0x97
  4105f5:	mov    edx,0x4fd804c
  4105fa:	jge    0x410635
  4105fc:	(bad)  
  4105fe:	push   esi
  4105ff:	add    BYTE PTR [esi-0x55d3dc62],dh
  410605:	ret    0xd533
  410608:	mov    DWORD PTR [ebx],edx
  41060a:	vpslld ymm3,ymm2,xmm1
  41060e:	xchg   edi,eax
  41060f:	dec    edi
  410610:	retf   0x7d0a
  410613:	push   ss
  410614:	imul   ecx,DWORD PTR [esi],0xffffff84
  410617:	push   edi
  410618:	xchg   DWORD PTR [ebx-0x735dbb11],eax
  41061e:	lds    esp,FWORD PTR [edi-0x70f8392]
  410624:	andps  xmm5,xmm2
  410627:	shr    ebx,cl
  410629:	xor    eax,0xc572f2e0
  41062e:	sbb    eax,0x81ab732
  410633:	pop    ebx
  410634:	push   ss
  410635:	lods   al,BYTE PTR ds:[esi]
  410636:	mov    bh,0x18
  410638:	shl    BYTE PTR [edx-0x8],0x58
  41063c:	xor    eax,0x6d73921e
  410641:	shr    BYTE PTR [ebp-0xa46e200],0x5d
  410648:	xchg   BYTE PTR [ebx+ebp*2-0x4587989c],al
  41064f:	iret   
  410650:	repnz mov gs,WORD PTR [ebx+edi*2]
  410654:	push   es
  410655:	mov    ebp,0x63b48b36
  41065a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41065c:	sbb    edi,DWORD PTR [ecx]
  41065e:	leave  
  41065f:	mov    al,ds:0x88042214
  410665:	pop    ebx
  410666:	loop   0x41064a
  410668:	cmp    dl,bl
  41066a:	inc    edi
  41066b:	ds out dx,al
  41066d:	mov    al,0x4e
  41066f:	lods   al,BYTE PTR ds:[esi]
  410670:	sbb    DWORD PTR [ebx],eax
  410672:	aam    0x61
  410674:	jae    0x4106dd
  410676:	cmc    
  410677:	bswap  esp
  410679:	dec    ebx
  41067a:	sbb    BYTE PTR [eax-0x453a6084],0x85
  410681:	stos   DWORD PTR es:[edi],eax
  410682:	cmp    DWORD PTR [edi],edi
  410684:	mov    ss,WORD PTR [edx-0x8697f68]
  41068a:	xlat   BYTE PTR ds:[ebx]
  41068b:	lock pushf 
  41068d:	adc    al,0xe7
  41068f:	push   edx
  410690:	std    
  410691:	enter  0x2999,0xf2
  410695:	ret    
  410696:	xchg   BYTE PTR [esp+eax*4-0x58],dh
  41069a:	in     al,dx
  41069b:	add    DWORD PTR [eax+ebp*4+0x2b4eeaf2],esi
  4106a2:	cld    
  4106a3:	adc    BYTE PTR ss:[ebp-0x238cb16f],dh
  4106aa:	ror    ch,1
  4106ac:	jb     0x4106fb
  4106ae:	mov    BYTE PTR [eax],bh
  4106b0:	aas    
  4106b1:	leave  
  4106b2:	add    al,BYTE PTR [edx+0x56a1e7a8]
  4106b8:	jp     0x4106eb
  4106ba:	loop   0x41067c
  4106bc:	stc    
  4106bd:	rol    edi,1
  4106bf:	xchg   esi,eax
  4106c0:	xchg   ecx,eax
  4106c1:	push   ebx
  4106c2:	mov    ds:0x2a906a86,al
  4106c7:	test   eax,0x7dfdf5a9
  4106cc:	loopne 0x410662
  4106ce:	mov    bh,0x5a
  4106d0:	push   0xffffffd2
  4106d2:	fisttp WORD PTR [eax-0xae07984]
  4106d8:	inc    eax
  4106d9:	dec    ebp
  4106da:	or     DWORD PTR [edi-0x7f],ebx
  4106dd:	xchg   edi,eax
  4106de:	fldenv [esi-0x76]
  4106e1:	fs pusha 
  4106e3:	jo     0x4106c2
  4106e5:	imul   eax,DWORD PTR [edi-0xa0f3928],0xd96da506
  4106ef:	mov    edx,0xcb157d7f
  4106f4:	in     al,dx
  4106f5:	push   cs
  4106f6:	(bad)  
  4106f8:	sub    DWORD PTR ds:0x2b48ef63,esp
  4106fe:	mov    bh,0xa3
  410700:	js     0x410768
  410702:	sub    dl,BYTE PTR [ebp-0x31]
  410705:	jae    0x410695
  410707:	scas   eax,DWORD PTR es:[edi]
  410708:	(bad)  
  410709:	out    dx,eax
  41070a:	mov    ebx,0x790bd3e6
  41070f:	lods   eax,DWORD PTR ds:[esi]
  410710:	xor    eax,0x94f43ba9
  410715:	xor    esp,DWORD PTR [eax]
  410717:	in     eax,0x2a
  410719:	jno    0x41075c
  41071b:	imul   ebp,ebp,0x20d570ba
  410721:	inc    esi
  410722:	or     DWORD PTR [ecx+0x60883a06],esp
  410728:	not    BYTE PTR [ebp+0x71]
  41072b:	adc    eax,DWORD PTR [ebx+0x2249290a]
  410731:	dec    esi
  410732:	cs mov cl,0x81
  410735:	sbb    DWORD PTR [ebp-0x1a],ebx
  410738:	or     esp,0x49
  41073b:	mov    edi,ecx
  41073d:	inc    edi
  41073e:	xlat   BYTE PTR ds:[ebx]
  41073f:	mov    ebx,0xd4b450ce
  410744:	jne    0x410756
  410746:	retf   
  410747:	pop    ebx
  410748:	xor    al,0xd
  41074a:	hlt    
  41074b:	mov    edx,0xacc380f9
  410750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410751:	out    dx,eax
  410752:	test   al,al
  410754:	sub    al,0x3
  410756:	cmp    eax,0xa2b8608a
  41075b:	cdq    
  41075c:	leave  
  41075d:	push   es
  41075e:	and    BYTE PTR [eax-0x46a3fe1c],al
  410764:	push   es
  410765:	sahf   
  410766:	xchg   esi,eax
  410767:	push   eax
  410768:	div    BYTE PTR [esi-0x79]
  41076b:	push   cs
  41076c:	or     al,0x74
  41076e:	(bad)  
  410770:	dec    eax
  410771:	mov    DWORD PTR [edx],edx
  410773:	jmp    0x41073b
  410775:	cmp    DWORD PTR [edx-0x7f],esi
  410778:	es das 
  41077a:	ins    BYTE PTR es:[edi],dx
  41077b:	mov    dl,0x9f
  41077d:	mov    eax,ds:0xce8ec3ee
  410782:	jb     0x4107e2
  410784:	adc    al,0x18
  410786:	out    dx,eax
  410787:	mov    BYTE PTR gs:[eax+0x2d],bh
  41078b:	sbb    BYTE PTR [edi-0xe1635f4],0x32
  410792:	sahf   
  410793:	sbb    BYTE PTR [ecx-0xe],al
  410796:	cld    
  410797:	icebp  
  410798:	leave  
  410799:	push   edx
  41079a:	in     eax,dx
  41079b:	mov    gs,WORD PTR [eax+eax*2-0x1a5dbfd6]
  4107a2:	std    
  4107a3:	mov    ds:0xda06466b,eax
  4107a8:	and    BYTE PTR [esi+0x6b],bl
  4107ab:	xchg   edi,eax
  4107ac:	(bad)  
  4107ad:	mov    dh,0xfb
  4107af:	push   ebx
  4107b0:	push   es
  4107b1:	sub    esp,ebp
  4107b3:	mov    esi,0x127e6e66
  4107b8:	adc    cl,ah
  4107ba:	dec    ebp
  4107bb:	mov    BYTE PTR [edi-0x1f],al
  4107be:	mov    eax,ds:0x89cda7d3
  4107c4:	mov    dh,0x4a
  4107c6:	mov    cl,0x93
  4107c8:	nop
  4107c9:	fcmovnu st,st(4)
  4107cb:	push   ss
  4107cc:	es jle 0x410810
  4107cf:	stc    
  4107d0:	out    dx,eax
  4107d1:	div    dh
  4107d3:	or     dh,BYTE PTR [ebx+0x53]
  4107d6:	loop   0x410836
  4107d8:	xor    al,0x38
  4107da:	(bad)  
  4107db:	jg     0x4107fe
  4107dd:	lock and DWORD PTR ds:[esi+edx*2-0x5d3c9cf],esi
  4107e6:	pop    esi
  4107e7:	dec    esi
  4107e8:	pop    ebx
  4107e9:	sub    bh,cl
  4107eb:	sub    BYTE PTR [ebp+0x54],ah
  4107ee:	xor    al,cl
  4107f0:	mov    edi,0x61bc48a8
  4107f5:	repnz push edx
  4107f7:	in     al,dx
  4107f8:	and    ah,dl
  4107fa:	out    dx,al
  4107fb:	sahf   
  4107fc:	mov    dh,0x26
  4107fe:	aaa    
  4107ff:	stos   BYTE PTR es:[edi],al
  410800:	ins    BYTE PTR es:[edi],dx
  410801:	loop   0x4107f5
  410803:	adc    eax,0x8ae55727
  410808:	sub    DWORD PTR [ebx],0x687a6c44
  41080e:	adc    bl,BYTE PTR [ebp+0x1b]
  410811:	cmp    dh,BYTE PTR [esi]
  410813:	pusha  
  410814:	inc    eax
  410815:	cmp    BYTE PTR [edx-0xe],0xa2
  410819:	lods   al,BYTE PTR ss:[esi]
  41081b:	cs jp  0x4107dd
  41081e:	fld    QWORD PTR [ebx-0x675e3708]
  410824:	push   edx
  410825:	adc    DWORD PTR [edi-0x3c],0x2746cfe9
  41082c:	pop    edx
  41082d:	test   eax,0x611f429c
  410832:	mov    esi,0x334cca05
  410837:	mov    ah,0xe5
  410839:	mov    edx,0x80fc6e25
  41083e:	push   edi
  41083f:	pop    es
  410840:	arpl   WORD PTR [ebx-0x50abbb9c],sp
  410846:	test   ebp,0x8b81f7d3
  41084c:	mov    bl,0xb6
  41084e:	enter  0x7644,0x5d
  410852:	adc    BYTE PTR [ebx-0x60d71e6d],dl
  410858:	and    bl,BYTE PTR [edi]
  41085a:	mov    WORD PTR fs:[ebx-0x51d29944],gs
  410861:	lahf   
  410862:	cld    
  410863:	das    
  410864:	pop    ss
  410865:	xor    ebp,ecx
  410867:	jae    0x4108c2
  410869:	stc    
  41086a:	pop    ss
  41086b:	sbb    esi,DWORD PTR [esi-0x18dbe08c]
  410871:	lock sub ecx,DWORD PTR [edx]
  410874:	jge    0x4108d7
  410876:	sub    ecx,ebx
  410878:	stos   DWORD PTR es:[edi],eax
  410879:	xor    BYTE PTR [ecx],bl
  41087b:	scas   al,BYTE PTR es:[edi]
  41087c:	xor    esi,DWORD PTR [edi-0x4609b8f7]
  410882:	fisttp WORD PTR [ecx+0x17]
  410885:	lahf   
  410886:	in     al,dx
  410887:	xchg   ebx,eax
  410888:	ret    0x9ef9
  41088b:	and    dh,BYTE PTR [ebx-0x326b1b4d]
  410891:	jge    0x410864
  410893:	ds ins DWORD PTR es:[edi],dx
  410895:	push   edx
  410896:	mov    edx,gs
  410898:	mov    esi,DWORD PTR [edi-0x5b]
  41089b:	in     eax,dx
  41089c:	outs   dx,DWORD PTR ds:[esi]
  41089d:	add    BYTE PTR [eax-0x11bb04d1],dh
  4108a3:	add    eax,0x643565a7
  4108a8:	dec    eax
  4108a9:	mov    al,0x3d
  4108ab:	daa    
  4108ac:	popf   
  4108ad:	dec    edx
  4108ae:	lahf   
  4108af:	(bad)  [edi+ebp*8]
  4108b2:	cld    
  4108b3:	xchg   BYTE PTR [eax+0x62],ah
  4108b6:	and    eax,0x253b0ac3
  4108bb:	retf   
  4108bc:	adc    cl,bl
  4108be:	loope  0x41093e
  4108c0:	in     eax,0x35
  4108c2:	cs mov cl,0xbb
  4108c5:	mov    eax,ds:0xd0a85196
  4108ca:	mov    dh,0xed
  4108cc:	(bad)  
  4108cd:	fs jp  0x41090b
  4108d0:	jmp    0x3130:0xc0ec7954
  4108d7:	sbb    DWORD PTR [eax-0x57],esi
  4108da:	ins    BYTE PTR es:[edi],dx
  4108db:	test   al,0x31
  4108dd:	pop    ebp
  4108de:	test   DWORD PTR [ebp-0x67],eax
  4108e1:	in     eax,dx
  4108e2:	arpl   WORD PTR ss:[esi+0x5a50dddc],dx
  4108e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ea:	cmp    DWORD PTR [ebx+0x399efe9],ecx
  4108f0:	js     0x410874
  4108f2:	dec    eax
  4108f3:	hlt    
  4108f4:	inc    eax
  4108f5:	mov    WORD PTR [eax],?
  4108f7:	lds    ebp,FWORD PTR [edi]
  4108f9:	push   0x6c16334a
  4108fe:	jmp    0x8102b564
  410903:	push   ds
  410904:	add    bh,BYTE PTR [esi]
  410906:	pop    ds
  410907:	cmp    eax,0x21c58f5
  41090c:	cmp    ebp,0xffffff80
  41090f:	add    eax,0x386a9e96
  410914:	mov    esi,0x14ea2804
  41091a:	and    ebp,DWORD PTR [edi+edx*4+0x75]
  41091e:	clc    
  41091f:	mov    edi,0xc2a18591
  410924:	dec    edi
  410925:	repz enter 0x61f1,0xbb
  41092a:	xor    BYTE PTR [ebx+ebx*4-0x67],dl
  41092e:	or     ebx,DWORD PTR [ebx-0x36]
  410931:	iret   
  410932:	inc    ebp
  410933:	aad    0xeb
  410935:	imul   ebp,DWORD PTR [eax+0x4b],0x70
  410939:	jge    0x410977
  41093b:	inc    esi
  41093c:	shr    BYTE PTR [ebx-0x30fb6f12],1
  410942:	sbb    BYTE PTR [edi+0x14e44a1],al
  410948:	lods   eax,DWORD PTR ds:[esi]
  410949:	pusha  
  41094a:	fdiv   DWORD PTR [ebx-0x6875027b]
  410950:	int3   
  410951:	mov    ebx,0xb4a439fc
  410956:	jb     0x410983
  410958:	cmp    BYTE PTR [ebp-0x5ce74e80],ch
  41095e:	je     0x4109ca
  410960:	outs   dx,BYTE PTR ds:[esi]
  410961:	jnp    0x4108e9
  410963:	inc    edx
  410964:	sbb    BYTE PTR [ecx],0xc3
  410967:	aam    0xa
  410969:	xor    dl,dl
  41096b:	and    bh,BYTE PTR [ecx+0x1b]
  41096e:	sbb    al,0x29
  410970:	and    eax,0xac65bda5
  410975:	push   ss
  410976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410977:	cli    
  410978:	inc    edx
  410979:	div    BYTE PTR [edx+0x16]
  41097c:	pushf  
  41097d:	and    esi,DWORD PTR [eax+0x9]
  410980:	test   eax,0x6a8b2599
  410985:	data16 scas al,BYTE PTR es:[edi]
  410987:	test   eax,0xf0b62e21
  41098c:	clc    
  41098d:	cmp    eax,0xef67cb3
  410992:	cmp    ebp,DWORD PTR [ebp-0x46]
  410995:	inc    edx
  410996:	jae    0x4109ee
  410998:	(bad)  
  41099b:	push   ebx
  41099c:	cmc    
  41099d:	lods   al,BYTE PTR ds:[esi]
  41099e:	mov    al,0x9d
  4109a0:	pop    edx
  4109a1:	xchg   ecx,eax
  4109a2:	fisttp WORD PTR [edi]
  4109a4:	(bad)  
  4109a5:	push   0x8e63d975
  4109aa:	pop    esp
  4109ab:	inc    edi
  4109ac:	lock sub DWORD PTR [edi-0x38],0xffffffc4
  4109b1:	jns    0x410976
  4109b3:	push   es
  4109b4:	stc    
  4109b5:	sub    al,0x5f
  4109b7:	sbb    dl,al
  4109b9:	push   esp
  4109ba:	mov    ss,WORD PTR [ebx+0x7c]
  4109bd:	mov    cl,0x78
  4109bf:	pop    ss
  4109c0:	inc    edi
  4109c1:	int3   
  4109c2:	mov    edi,0x9390187d
  4109c7:	mov    ecx,DWORD PTR [esi+ebx*2-0x47e043f7]
  4109ce:	mov    ah,0xcb
  4109d0:	adc    ah,BYTE PTR [edx+ecx*1+0x5f]
  4109d4:	adc    eax,0xc56b2397
  4109d9:	pop    edx
  4109da:	(bad)  
  4109db:	mov    edi,esi
  4109dd:	(bad)  
  4109de:	xchg   edx,eax
  4109df:	mov    ds:0xe00e5816,al
  4109e4:	push   ss
  4109e5:	ret    
  4109e6:	je     0x4109c9
  4109e8:	jle    0x4109ef
  4109ea:	mov    dl,dh
  4109ec:	or     DWORD PTR [edi+0x7d],0xc05310a0
  4109f3:	add    DWORD PTR [eax+0x16],edi
  4109f6:	sub    bl,0x28
  4109f9:	mov    eax,0x5dcdb2aa
  4109fe:	or     DWORD PTR [edi],esp
  410a00:	jo     0x4109f8
  410a02:	ret    0x7ae6
  410a05:	call   0xdd664541
  410a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a0b:	cmp    DWORD PTR [eax+ecx*2-0x6dc105b6],0x879337ff
  410a16:	push   edx
  410a17:	popf   
  410a18:	inc    edi
  410a19:	in     al,dx
  410a1a:	push   0x8ed64cb0
  410a1f:	or     dl,BYTE PTR [esi+0x2]
  410a22:	je     0x4109d4
  410a24:	mov    cl,0x98
  410a26:	sbb    eax,0x5009af6e
  410a2b:	mov    edi,0xdb5927ea
  410a30:	fcomp  QWORD PTR [ebx+0x3a]
  410a33:	and    al,0x77
  410a35:	aaa    
  410a36:	test   eax,0xaf5ea81c
  410a3b:	js     0x410a26
  410a3d:	jmp    0x6b7e5e0f
  410a42:	scas   al,BYTE PTR es:[edi]
  410a43:	push   0xec07a543
  410a48:	add    BYTE PTR [ebx+0x3adbfc7b],bh
  410a4e:	mov    ds:0x51ca4be1,al
  410a53:	mov    WORD PTR [eax-0x7753d480],?
  410a59:	jmp    0x410a48
  410a5b:	push   ss
  410a5c:	mov    ebp,0x1f659faa
  410a61:	ss mov eax,0x55a0ceef
  410a67:	out    dx,eax
  410a68:	sub    ah,cl
  410a6a:	out    dx,al
  410a6b:	cs or  eax,0x2b09e16f
  410a71:	inc    ebx
  410a72:	xlat   BYTE PTR ds:[ebx]
  410a73:	mov    cl,bl
  410a75:	and    al,0x8c
  410a77:	cmp    BYTE PTR [edx],ch
  410a79:	outs   dx,DWORD PTR ds:[esi]
  410a7a:	dec    edi
  410a7b:	leave  
  410a7c:	pop    es
  410a7d:	sbb    esi,DWORD PTR [edi+edx*4-0x69]
  410a81:	and    ah,bl
  410a83:	jb     0x410a0b
  410a85:	ror    BYTE PTR [edx+0x1a],0xa8
  410a89:	mov    ebp,0x25299251
  410a8e:	std    
  410a8f:	js     0x410a35
  410a91:	inc    ecx
  410a92:	sbb    cl,BYTE PTR [ecx+0x23]
  410a95:	fild   DWORD PTR [edx+edx*2]
  410a98:	call   0x55b2:0xef84ed67
  410a9f:	shr    BYTE PTR [ecx],1
  410aa1:	adc    ebp,esi
  410aa3:	inc    ebp
  410aa4:	mov    al,0xd0
  410aa6:	mov    eax,ds:0x5874e2b2
  410aab:	nop
  410aac:	mov    dl,0x1
  410aae:	add    eax,edx
  410ab0:	push   ecx
  410ab1:	retf   0x676a
  410ab4:	cmp    BYTE PTR [ecx+0x35],ch
  410ab7:	call   0x8402:0x62afd7f0
  410abe:	daa    
  410abf:	jae    0x410b37
  410ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ac2:	pop    eax
  410ac3:	cdq    
  410ac4:	int3   
  410ac5:	xchg   BYTE PTR [esp+ebp*8-0x6129d80a],cl
  410acc:	sbb    edx,DWORD PTR [edi]
  410ace:	div    DWORD PTR ds:0x413758dd
  410ad4:	jns    0x410ae8
  410ad6:	dec    esp
  410ad7:	mov    BYTE PTR [edi-0x50],dl
  410ada:	ins    DWORD PTR es:[edi],dx
  410adb:	dec    esi
  410adc:	and    al,0x18
  410ade:	mov    esp,0x4acd9339
  410ae3:	jnp    0x410adc
  410ae5:	inc    ebx
  410ae6:	popf   
  410ae7:	hlt    
  410ae8:	ins    BYTE PTR es:[edi],dx
  410ae9:	xchg   esp,eax
  410aea:	fild   QWORD PTR [eax+eax*4+0x4fdd1cd2]
  410af1:	(bad)  
  410af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af3:	push   ss
  410af4:	xor    ebp,eax
  410af6:	push   ss
  410af7:	or     al,0xdd
  410af9:	mov    al,ds:0xe53aae9e
  410afe:	shr    BYTE PTR [eax],0xaa
  410b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b02:	loope  0x410b5d
  410b04:	xor    eax,0x3120b5fc
  410b09:	addr16 xchg edi,eax
  410b0b:	inc    edx
  410b0c:	dec    eax
  410b0d:	sub    BYTE PTR [edx],ah
  410b0f:	aas    
  410b10:	sub    ebp,esp
  410b12:	mov    ebp,0xf317aa50
  410b17:	push   eax
  410b18:	xchg   BYTE PTR ds:0xc7fe0506,ch
  410b1e:	aam    0xbb
  410b20:	push   0xffffffe5
  410b22:	(bad)  
  410b23:	lds    esp,FWORD PTR [edx+0x1e5d99b6]
  410b29:	xlat   BYTE PTR ds:[ebx]
  410b2a:	or     al,0x11
  410b2d:	clc    
  410b2e:	(bad)  
  410b2f:	cwde   
  410b30:	pop    eax
  410b31:	or     edx,esp
  410b33:	fidiv  WORD PTR [edx+0x6e]
  410b36:	int    0x10
  410b38:	push   ebx
  410b39:	mov    esp,0xbb55744
  410b3e:	shl    DWORD PTR [edx-0x34865bbf],cl
  410b44:	and    eax,0xee287bcf
  410b49:	ds push cx
  410b4c:	dec    eax
  410b4d:	(bad)  
  410b4e:	dec    esp
  410b4f:	test   esi,0x2b9fb817
  410b55:	push   es
  410b56:	sub    bh,BYTE PTR [esi+0x19]
  410b59:	mov    gs,WORD PTR [eax+0x75]
  410b5c:	jp     0x410b35
  410b5e:	xor    edx,eax
  410b60:	fist   WORD PTR ds:0x28149254
  410b66:	inc    esp
  410b67:	mov    WORD PTR [edi-0x271ad2e6],es
  410b6d:	out    0x11,al
  410b6f:	lods   eax,DWORD PTR ds:[esi]
  410b70:	loope  0x410b9b
  410b72:	cli    
  410b73:	bound  edx,QWORD PTR [edx]
  410b75:	jmp    0xba2790f8
  410b7a:	pusha  
  410b7b:	pop    ebx
  410b7d:	into   
  410b7e:	dec    edx
  410b7f:	xchg   ebp,eax
  410b80:	jae    0x410b97
  410b82:	push   ss
  410b83:	test   esp,ebx
  410b85:	or     bl,BYTE PTR [edx]
  410b87:	cmc    
  410b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b89:	rol    bl,0x95
  410b8c:	mov    WORD PTR [edi-0x632db8c5],gs
  410b92:	mov    al,ds:0x823e9eae
  410b97:	mov    ah,0x82
  410b99:	sbb    BYTE PTR [edx],cl
  410b9b:	xchg   ecx,eax
  410b9c:	xor    DWORD PTR [esi],esi
  410b9e:	xlat   BYTE PTR ds:[ebx]
  410b9f:	xor    bh,BYTE PTR [eax]
  410ba1:	pop    edi
  410ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba3:	adc    BYTE PTR [edi+0x49],al
  410ba6:	pop    ebp
  410ba7:	hlt    
  410ba8:	jle    0x410b6e
  410baa:	push   esp
  410bab:	fadd   DWORD PTR [ecx]
  410bad:	jbe    0x410b78
  410baf:	add    BYTE PTR [ebx+ecx*2-0x56],bl
  410bb3:	aas    
  410bb4:	and    ecx,DWORD PTR [esi-0x65]
  410bb7:	jmp    0x410c19
  410bb9:	ret    0x6ec0
  410bbc:	jmp    0x98ea:0xb2180078
  410bc3:	cmc    
  410bc4:	sbb    BYTE PTR [edi+ecx*2],dl
  410bc7:	and    bl,BYTE PTR ds:0xe1c2ab16
  410bcd:	cmp    dl,BYTE PTR [ecx+0x2f0ac9ca]
  410bd3:	and    DWORD PTR [esi-0x5a],ebp
  410bd6:	mov    edx,eax
  410bd8:	outs   dx,BYTE PTR ds:[esi]
  410bd9:	ss inc edi
  410bdb:	push   es
  410bdc:	mov    WORD PTR [edx],fs
  410bde:	sbb    DWORD PTR [ebx],0x5e
  410be1:	push   eax
  410be2:	lods   eax,DWORD PTR ds:[esi]
  410be3:	aas    
  410be4:	jbe    0x410c27
  410be6:	lods   eax,DWORD PTR ds:[esi]
  410be7:	mov    edx,db3
  410bea:	dec    ebp
  410beb:	mov    cl,0xef
  410bed:	and    BYTE PTR [ebx-0x5ec48376],0xf9
  410bf4:	lahf   
  410bf5:	xchg   edi,eax
  410bf6:	fcom   DWORD PTR [eax*8+0x15643263]
  410bfd:	jmp    0x3884c22e
  410c02:	retf   
  410c03:	outs   dx,DWORD PTR ds:[esi]
  410c04:	mul    DWORD PTR [esi]
  410c06:	aaa    
  410c07:	pop    ss
  410c08:	sbb    al,0xf8
  410c0a:	sub    eax,DWORD PTR [eax]
  410c0c:	mov    eax,0x64d94c3b
  410c12:	imul   ebx,DWORD PTR [ebp+0x3fc3c874],0xf7a0d321
  410c1c:	add    eax,0xd5ca0b2f
  410c21:	xor    eax,0x55ed3f00
  410c26:	inc    ebx
  410c27:	xor    DWORD PTR [ebp-0x56df2f7b],edi
  410c2d:	in     al,0xeb
  410c2f:	stos   BYTE PTR es:[edi],al
  410c30:	push   esi
  410c31:	pop    ss
  410c32:	pop    edx
  410c33:	shr    DWORD PTR [ecx],1
  410c35:	push   ecx
  410c36:	push   esp
  410c37:	push   edx
  410c38:	dec    ecx
  410c39:	sub    al,0x78
  410c3b:	sbb    BYTE PTR [esi-0x3b],dh
  410c3e:	dec    esi
  410c3f:	jmp    0x9672e273
  410c44:	pop    esp
  410c45:	(bad)  
  410c47:	loopne 0x410cbf
  410c49:	out    dx,al
  410c4a:	lea    esi,[esi-0x2c2f17a4]
  410c50:	outs   dx,DWORD PTR ds:[esi]
  410c51:	or     ch,BYTE PTR [esi+ebx*4]
  410c54:	sbb    al,0xcc
  410c56:	outs   dx,BYTE PTR ds:[esi]
  410c57:	jnp    0x410c46
  410c59:	mov    esi,0x45b371fc
  410c5e:	adc    edx,DWORD PTR [edi-0x63]
  410c61:	daa    
  410c62:	(bad)  
  410c63:	pop    esp
  410c64:	pop    ecx
  410c65:	or     ch,cl
  410c67:	cmc    
  410c68:	pop    ss
  410c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c6a:	mov    ss,WORD PTR [eax-0x32ced027]
  410c70:	adc    al,0x0
  410c72:	push   ds
  410c73:	pop    ss
  410c74:	cs or  eax,0xda5978d4
  410c7a:	inc    eax
  410c7b:	and    edx,edi
  410c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c7e:	or     eax,0xc897a3e3
  410c83:	sbb    eax,0x671b8010
  410c88:	adc    bh,dh
  410c8a:	or     ch,BYTE PTR [ecx]
  410c8c:	jg     0x410c8a
  410c8e:	pop    esp
  410c8f:	jge    0x410c78
  410c91:	stos   BYTE PTR es:[edi],al
  410c92:	xlat   BYTE PTR ds:[ebx]
  410c93:	inc    esi
  410c94:	(bad)  
  410c95:	jmp    0xf1a5ea18
  410c9a:	sbb    ecx,edi
  410c9c:	mov    bh,0x42
  410c9e:	mov    eax,0x833365f
  410ca3:	mov    ah,cl
  410ca5:	ins    DWORD PTR es:[edi],dx
  410ca6:	std    
  410ca7:	cmp    al,0x8d
  410ca9:	sbb    ebp,ecx
  410cab:	mov    ebp,0x2d658009
  410cb0:	xor    ch,bl
  410cb2:	xchg   edx,eax
  410cb3:	push   es
  410cb4:	push   ecx
  410cb5:	test   ecx,esi
  410cb7:	dec    edi
  410cb8:	(bad)  
  410cb9:	loop   0x410c8c
  410cbb:	mov    ecx,0x2a9500ff
  410cc0:	jmp    0x7f4a:0x7ba0399b
  410cc7:	xor    eax,0xa07c6d47
  410ccc:	xor    BYTE PTR [ebp+edi*2+0x1d4f10f5],dh
  410cd3:	ficomp WORD PTR [edi+0x61452b04]
  410cd9:	or     al,0x69
  410cdb:	iret   
  410cdc:	pop    ebx
  410cdd:	test   al,0x77
  410cdf:	fucomp st(3)
  410ce1:	in     eax,dx
  410ce2:	push   0xffffffda
  410ce4:	mov    cl,0x4c
  410ce6:	arpl   WORD PTR [eax+0x6f],si
  410ce9:	popa   
  410cea:	sbb    DWORD PTR [ebx-0x43],ebp
  410ced:	mov    esi,0xe2649379
  410cf2:	xor    al,0x4
  410cf4:	test   esi,0xcadfd388
  410cfa:	aam    0xa2
  410cfc:	jp     0x410c84
  410cfe:	mov    WORD PTR [esi-0x1c],es
  410d01:	loopne 0x410d71
  410d03:	leave  
  410d04:	dec    ebp
  410d05:	inc    edx
  410d06:	inc    ebx
  410d07:	adc    DWORD PTR [edi+0x465cf6c6],edi
  410d0d:	loop   0x410cdd
  410d0f:	mov    bh,BYTE PTR [edi-0xe579c17]
  410d15:	mov    WORD PTR [esi],ss
  410d17:	sub    al,0xcb
  410d19:	int3   
  410d1a:	push   esi
  410d1b:	daa    
  410d1c:	dec    esi
  410d1e:	in     al,dx
  410d1f:	ins    BYTE PTR es:[edi],dx
  410d20:	ror    bh,cl
  410d22:	(bad)  
  410d23:	sbb    eax,0x734e2af9
  410d28:	xchg   esi,eax
  410d29:	cmp    eax,0x1bcaa74a
  410d2e:	lea    esp,[edi-0x2076b4fb]
  410d34:	scas   eax,DWORD PTR es:[edi]
  410d35:	push   ds
  410d36:	jle    0x410d0b
  410d38:	adc    edx,ebx
  410d3a:	(bad)  
  410d3b:	pusha  
  410d3c:	dec    eax
  410d3d:	cmc    
  410d3e:	fst    st(3)
  410d40:	xchg   edx,eax
  410d41:	sub    ebx,ebp
  410d43:	popf   
  410d44:	cmp    eax,0xe3ba3ad2
  410d49:	pop    ecx
  410d4a:	adc    BYTE PTR [esi-0x6f2abc7f],dl
  410d50:	adc    DWORD PTR [ecx+0x7b64c4b3],edx
  410d56:	push   cs
  410d57:	fnstsw WORD PTR [edi+0xa614537]
  410d5d:	jp     0x410d8d
  410d5f:	cli    
  410d60:	dec    ebx
  410d61:	scas   eax,DWORD PTR es:[edi]
  410d62:	dec    edx
  410d63:	mov    ecx,0x4aa394ad
  410d68:	cmp    dl,BYTE PTR [esi-0x46]
  410d6b:	in     al,0xfa
  410d6d:	pop    edx
  410d6e:	xor    BYTE PTR [bx+0x4e],bh
  410d72:	ins    DWORD PTR es:[edi],dx
  410d73:	cmp    bl,BYTE PTR [eax]
  410d75:	fs out dx,al
  410d77:	in     eax,dx
  410d78:	loope  0x410dd6
  410d7a:	jle    0x410d7f
  410d7c:	aad    0xa7
  410d7e:	inc    esp
  410d7f:	lods   eax,DWORD PTR ds:[esi]
  410d80:	call   0xfa14:0x4bb3363d
  410d87:	popa   
  410d88:	add    ebx,edx
  410d8a:	cmp    al,0x3e
  410d8c:	or     ebx,DWORD PTR [edi+0x29d5f5d5]
  410d92:	push   esi
  410d93:	je     0x410dd0
  410d95:	fwait
  410d96:	clc    
  410d97:	lahf   
  410d98:	and    bh,dh
  410d9a:	aam    0x11
  410d9c:	je     0x410e12
  410d9e:	into   
  410d9f:	shr    DWORD PTR [eax+0x24],0x42
  410da3:	dec    edx
  410da4:	push   0x419e7b71
  410da9:	and    al,0x36
  410dab:	(bad)  
  410dac:	pusha  
  410dad:	push   cs
  410dae:	add    eax,0x44e936df
  410db3:	mov    ds:0xfa35084d,al
  410db8:	pop    edx
  410db9:	bound  ebp,QWORD PTR [ebx]
  410dbb:	sbb    eax,0x910fa4b
  410dc0:	call   0x618a:0xd954d7d7
  410dc7:	fild   WORD PTR [ebp-0x102d3296]
  410dcd:	mov    edi,0x830cd367
  410dd2:	outs   dx,DWORD PTR ds:[esi]
  410dd3:	sar    DWORD PTR [eax*8-0x2ed477e4],cl
  410dda:	in     al,0x1a
  410ddc:	cld    
  410ddd:	add    eax,0xbecb86e8
  410de2:	stos   BYTE PTR es:[edi],al
  410de3:	jle    0x410de8
  410de5:	mov    eax,ds:0x1567d268
  410dea:	push   edi
  410deb:	or     BYTE PTR [edi],cl
  410ded:	adc    esi,esp
  410def:	ss inc esi
  410df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df2:	dec    eax
  410df3:	sbb    DWORD PTR [ebp+0x52],0xffffffda
  410df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df8:	xor    DWORD PTR [ebp+0x39b89d9a],esi
  410dfe:	adc    BYTE PTR [eax-0x40],0x60
  410e02:	add    DWORD PTR [ecx-0x38848fc8],0xb
  410e09:	sti    
  410e0a:	imul   esi,DWORD PTR [edx],0x6c
  410e0d:	es ss gs dec eax
  410e11:	mov    ecx,0xeab46e61
  410e16:	test   BYTE PTR [esi+0x4],bh
  410e19:	inc    esi
  410e1a:	push   esi
  410e1b:	or     DWORD PTR [edx+0x2404c2e3],ebp
  410e21:	retf   0x9b0a
  410e24:	fs out 0x6c,eax
  410e27:	aad    0x57
  410e29:	out    0x74,al
  410e2b:	jae    0x410e5e
  410e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e2e:	push   edi
  410e2f:	and    eax,0x8aa7860f
  410e34:	sbb    cl,BYTE PTR [eax+0x19]
  410e37:	jb     0x410e45
  410e39:	xchg   ebx,eax
  410e3a:	mov    eax,0xfc60fe22
  410e3f:	pushf  
  410e40:	out    0x70,eax
  410e42:	sbb    edi,DWORD PTR [edx]
  410e44:	sti    
  410e45:	push   ebx
  410e46:	add    DWORD PTR [ebp-0x39b5cef8],0x1d
  410e4d:	je     0x410e09
  410e4f:	mov    DWORD PTR [edx+0x3a],esi
  410e52:	mov    BYTE PTR [ebp+0x68c12a1e],dh
  410e58:	in     eax,0x2b
  410e5a:	mov    WORD PTR [edx+0x2d],es
  410e5d:	stc    
  410e5e:	in     eax,dx
  410e5f:	aaa    
  410e60:	push   es
  410e61:	inc    eax
  410e62:	lock mov edi,0x56eb0ab3
  410e68:	xor    BYTE PTR [esi],0xc7
  410e6b:	pusha  
  410e6c:	push   ebx
  410e6d:	and    ebp,DWORD PTR [eax+0x5d2f75e5]
  410e73:	mov    ebx,DWORD PTR [edi-0x6f]
  410e76:	out    0xac,eax
  410e78:	mov    ds:0x21c23c16,al
  410e7d:	add    DWORD PTR [esi+0x5f82bf04],ecx
  410e83:	inc    esi
  410e84:	jns    0x410e06
  410e86:	cmp    BYTE PTR [ecx-0x144b6027],ah
  410e8c:	js     0x410ea1
  410e8e:	not    edi
  410e90:	in     eax,0x25
  410e92:	cmp    cl,BYTE PTR [ecx+0x41]
  410e95:	mov    bl,0xa1
  410e97:	ins    DWORD PTR es:[edi],dx
  410e98:	xor    ch,al
  410e9a:	inc    esp
  410e9b:	ss and dl,ch
  410e9e:	mov    eax,ds:0x23e331d0
  410ea3:	xlat   BYTE PTR ds:[ebx]
  410ea4:	(bad)  
  410ea5:	imul   ecx,DWORD PTR [ebx-0x16cbaf7],0xfffffff5
  410eac:	scas   al,BYTE PTR es:[edi]
  410ead:	lock xchg edi,eax
  410eaf:	and    al,BYTE PTR [ebx+0x3b]
  410eb2:	sbb    DWORD PTR [edx],esi
  410eb4:	jmp    0x410e4d
  410eb6:	ficomp DWORD PTR [ebx]
  410eb8:	and    al,0x50
  410eba:	fnstsw WORD PTR [ebx]
  410ebc:	or     esp,esi
  410ebe:	or     eax,0x3468911c
  410ec3:	jmp    0x542e:0x7aa47c4d
  410eca:	xchg   edx,eax
  410ecb:	stos   DWORD PTR es:[edi],eax
  410ecc:	loope  0x410e79
  410ece:	fst    st(7)
  410ed0:	add    BYTE PTR [edx],bh
  410ed2:	or     edi,DWORD PTR [edi]
  410ed4:	stos   BYTE PTR es:[edi],al
  410ed5:	pcmpeqb mm3,QWORD PTR [ebx]
  410ed8:	jo     0x410f48
  410eda:	clc    
  410edb:	pop    ebx
  410edc:	loopne 0x410e90
  410ede:	sbb    edi,ebp
  410ee0:	adc    ebp,DWORD PTR [ecx+edx*2+0x23ed50e2]
  410ee7:	ins    BYTE PTR es:[edi],dx
  410ee8:	jb     0x410f08
  410eea:	repnz inc esp
  410eec:	mov    ecx,0xc8ec4cf9
  410ef1:	fiadd  WORD PTR [edi+0x1b3d4a02]
  410ef7:	or     edx,esp
  410ef9:	or     eax,0x3a4c7ff1
  410efe:	mov    edx,0xa4b07fa3
  410f03:	rcl    BYTE PTR [eax],1
  410f05:	push   cs
  410f06:	out    dx,eax
  410f07:	pop    ss
  410f08:	jg     0x410f04
  410f0a:	inc    edx
  410f0b:	repnz lea ecx,[eax+0x69e6661a]
  410f12:	out    0xa0,eax
  410f14:	pop    es
  410f15:	sub    bh,BYTE PTR [ebp-0x52c76c44]
  410f1b:	repz and ah,ch
  410f1e:	pop    ss
  410f1f:	inc    ebp
  410f21:	dec    esp
  410f22:	(bad)  
  410f23:	(bad)  
  410f24:	lods   eax,DWORD PTR ds:[esi]
  410f25:	stos   BYTE PTR es:[edi],al
  410f26:	xchg   esp,eax
  410f27:	shl    esi,cl
  410f29:	xchg   DWORD PTR [ecx-0x6fcf9eba],esi
  410f2f:	cmc    
  410f30:	add    bh,BYTE PTR [edi+edi*2]
  410f33:	sub    al,BYTE PTR [edi]
  410f35:	(bad)  
  410f36:	xchg   BYTE PTR [ebx],cl
  410f38:	jl     0x410fa1
  410f3a:	jmp    0xc469bc2a
  410f3f:	sub    edx,DWORD PTR [edi-0x7376cb9d]
  410f45:	std    
  410f46:	test   eax,0x7cc4a20b
  410f4b:	icebp  
  410f4c:	inc    eax
  410f4d:	loopne 0x410f65
  410f4f:	scas   al,BYTE PTR es:[edi]
  410f50:	not    DWORD PTR [ebx-0x7f]
  410f53:	(bad)  
  410f54:	rcr    ch,cl
  410f56:	pop    edi
  410f57:	daa    
  410f58:	adc    eax,0x407bd0b9
  410f5d:	pop    edi
  410f5e:	sub    DWORD PTR [ecx-0x50],ebx
  410f61:	int3   
  410f62:	mov    ah,BYTE PTR [eax-0x56f2a592]
  410f68:	lds    edi,FWORD PTR [ebp+0x77039dc6]
  410f6e:	rcl    DWORD PTR [ebx+eiz*8-0x3],1
  410f72:	mov    ecx,0x899cc909
  410f77:	popf   
  410f78:	adc    eax,0x8b4ea422
  410f7d:	les    edi,FWORD PTR ds:0x6a341ea8
  410f83:	jle    0x410f9b
  410f85:	inc    edi
  410f86:	or     ebx,DWORD PTR [ebx+0x20]
  410f89:	popa   
  410f8a:	sub    DWORD PTR ds:0xf0beafa4,edi
  410f90:	sbb    BYTE PTR [ebx+0x9],bl
  410f93:	leave  
  410f94:	jo     0x410f22
  410f96:	aaa    
  410f97:	add    dh,BYTE PTR [esi+0x6d]
  410f9a:	pop    edi
  410f9b:	xchg   ebx,eax
  410f9c:	fwait
  410f9d:	sti    
  410f9e:	pop    edi
  410f9f:	sbb    eax,0x5f7d994f
  410fa4:	add    al,0xfa
  410fa6:	xor    eax,0x6a70bcf5
  410fab:	(bad)  
  410fac:	lods   al,BYTE PTR ds:[esi]
  410fad:	int3   
  410fae:	xchg   ebx,eax
  410faf:	add    DWORD PTR [edx+0x47],esi
  410fb2:	stc    
  410fb3:	idiv   DWORD PTR [ebx]
  410fb5:	jp     0x410ff2
  410fb7:	ss xchg edx,eax
  410fb9:	push   ss
  410fba:	dec    esp
  410fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fbc:	lock sbb ebx,DWORD PTR [eax+edx*4]
  410fc0:	call   0x69db:0x4bb896a2
  410fc7:	xor    eax,0x4869089b
  410fcc:	pop    esi
  410fcd:	dec    ecx
  410fce:	push   esp
  410fcf:	(bad)  
  410fd0:	clc    
  410fd1:	pop    ss
  410fd2:	xchg   esp,eax
  410fd3:	int    0xb4
  410fd5:	dec    edi
  410fd6:	cs in  eax,0xf1
  410fd9:	iret   
  410fda:	fs pop ebx
  410fdc:	sti    
  410fdd:	add    ebx,DWORD PTR [eax]
  410fdf:	or     al,0x47
  410fe1:	jmp    0x411002
  410fe3:	in     eax,0xc1
  410fe5:	push   edx
  410fe6:	jge    0x410fe3
  410fe8:	inc    esi
  410fe9:	mov    cs,WORD PTR [eax]
  410feb:	lods   al,BYTE PTR ds:[esi]
  410fec:	neg    DWORD PTR [esi-0x7caf64e]
  410ff2:	add    edi,DWORD PTR [edi+0x2ef72616]
  410ff8:	mov    al,0x7e
  410ffa:	sub    ch,BYTE PTR [ecx]
  410ffc:	inc    ecx
  410ffd:	mov    eax,0xe9324af9
  411002:	outs   dx,BYTE PTR ds:[esi]
  411003:	lds    edi,FWORD PTR [esi+0x76]
  411006:	outs   dx,BYTE PTR ds:[esi]
  411007:	repnz into 
  411009:	mov    edi,0x49c6c388
  41100e:	mov    ecx,0x3605b652
  411013:	dec    ebp
  411014:	sub    ebx,DWORD PTR [ecx+ebp*8+0x10]
  411018:	adc    esp,esi
  41101a:	in     al,0xd2
  41101c:	fiadd  DWORD PTR [eax]
  41101e:	mov    edx,0x831db0b3
  411023:	mov    bl,0x59
  411025:	mov    fs,WORD PTR [ecx-0x4b]
  411028:	sub    bl,BYTE PTR [ebx+ecx*4]
  41102b:	push   ebp
  41102c:	jmp    edx
  41102e:	and    dh,BYTE PTR [ecx+0x47]
  411031:	and    BYTE PTR [ebx+edi*1-0x71],bh
  411035:	dec    esi
  411036:	sub    al,0xf0
  411038:	mov    dl,0xf0
  41103a:	ins    DWORD PTR es:[edi],dx
  41103b:	pushf  
  41103c:	es aad 0x21
  41103f:	(bad)  
  411040:	in     eax,dx
  411041:	jmp    0x589806cf
  411046:	mov    ah,0xb7
  411048:	dec    edx
  411049:	outs   dx,BYTE PTR ds:[esi]
  41104a:	inc    ebp
  41104b:	pop    esi
  41104c:	enter  0x895a,0xab
  411050:	adc    BYTE PTR [ecx],cl
  411052:	ja     0x411034
  411054:	arpl   WORD PTR [ecx],di
  411056:	sub    DWORD PTR [edx+ebx*4+0x14e824e4],edx
  41105d:	(bad)  
  41105e:	mov    ecx,0xa211324f
  411063:	lahf   
  411064:	clc    
  411065:	adc    al,0xea
  411067:	xor    BYTE PTR gs:[esi-0x45155946],0xc5
  41106f:	(bad)  
  411070:	sub    esi,DWORD PTR [edi+ecx*4]
  411073:	mov    ds:0x2924f7e4,al
  411078:	shr    esp,1
  41107a:	sub    esp,0x43
  41107d:	loop   0x41101d
  41107f:	fisttp WORD PTR [ebx-0x20ccaefb]
  411085:	or     DWORD PTR [edi],0xa16113f0
  41108b:	lahf   
  41108c:	lods   eax,DWORD PTR ds:[esi]
  41108d:	xor    edi,edi
  41108f:	inc    ebx
  411090:	mov    dl,0x14
  411092:	and    al,0x91
  411094:	pop    ebx
  411095:	jne    0x41109d
  411097:	and    eax,0x77d21c76
  41109c:	push   ds
  41109d:	rcl    DWORD PTR [edi-0x1ed8c5a9],cl
  4110a3:	jnp    0x41106f
  4110a5:	shl    BYTE PTR [eiz*4+0x5452e07d],0x2d
  4110ad:	mov    ebp,0xa31bb168
  4110b2:	xchg   DWORD PTR [eax+esi*4-0x80],edx
  4110b6:	in     eax,dx
  4110b7:	xchg   edi,eax
  4110b8:	in     al,dx
  4110b9:	and    eax,0xe4b21431
  4110be:	fisttp QWORD PTR [ecx-0x6d]
  4110c1:	mov    dl,0x5f
  4110c3:	push   0x27bc1992
  4110c8:	mov    DWORD PTR [esi],edi
  4110ca:	call   0xb3c1e85
  4110cf:	int3   
  4110d0:	push   ecx
  4110d1:	and    eax,0x2d8816ad
  4110d6:	or     eax,0xcb0c71fd
  4110db:	or     al,0x29
  4110dd:	xor    eax,0x5cb2eb78
  4110e2:	push   esp
  4110e3:	call   0xfbd6:0xa23adecb
  4110ea:	mov    al,ds:0x232d5724
  4110ef:	jne    0x4110f5
  4110f1:	leave  
  4110f2:	mov    ch,0xb7
  4110f4:	js     0x411107
  4110f6:	(bad)  
  4110f7:	xchg   edi,eax
  4110f8:	cmp    al,0xe0
  4110fa:	inc    edx
  4110fb:	imul   ebx,DWORD PTR [esp+esi*1],0x56982766
  411102:	out    0x17,al
  411104:	ror    BYTE PTR [edi],1
  411106:	pop    ebx
  411107:	loopne 0x4110a4
  411109:	adc    ecx,DWORD PTR [edi]
  41110b:	dec    edi
  41110c:	cmc    
  41110d:	jne    0x411140
  41110f:	sub    ebp,ecx
  411111:	mov    BYTE PTR [ecx-0x5854008f],0xd5
  411118:	fdivr  QWORD PTR [ebx]
  41111a:	pop    ds
  41111b:	and    BYTE PTR [edi],ah
  41111d:	js     0x411107
  41111f:	push   si
  411121:	add    eax,DWORD PTR [eax+esi*1]
  411124:	push   ebx
  411125:	cdq    
  411126:	loop   0x41118a
  411128:	pslld  mm5,QWORD PTR [eax-0x2d]
  41112c:	call   0xe801:0x3e3af86d
  411133:	dec    esp
  411134:	fistp  WORD PTR [esp+edi*4]
  411137:	fnstsw WORD PTR [edi-0xe5b6e5]
  41113d:	sub    DWORD PTR [edi],ecx
  41113f:	ret    0x5062
  411142:	lock and cl,BYTE PTR fs:[esi+0x6af335fc]
  41114a:	(bad)  
  41114b:	mov    eax,0x9c17a33b
  411150:	les    esi,FWORD PTR [ebp-0x713baf1d]
  411156:	loop   0x411175
  411158:	adc    BYTE PTR [ecx],al
  41115a:	out    dx,al
  41115b:	mov    WORD PTR [ebx+esi*2+0x11],gs
  41115f:	add    BYTE PTR [esi],cl
  411161:	and    bh,bl
  411163:	lods   al,BYTE PTR ds:[esi]
  411164:	sti    
  411165:	and    eax,0xb3f61a5c
  41116a:	adc    eax,0xfdec47d7
  41116f:	mov    esi,0xa8f72420
  411174:	jge    0x41119c
  411176:	retf   
  411177:	add    al,0xa1
  411179:	or     BYTE PTR [ebp+0x4dafd6d],ah
  41117f:	inc    ecx
  411180:	xchg   edi,eax
  411181:	fcmovbe st,st(7)
  411183:	lock mov dh,0x45
  411186:	cmp    DWORD PTR [ecx],0x79
  411189:	xor    dl,al
  41118b:	sub    eax,0xd5374d17
  411190:	mov    esi,0xdfe1b45c
  411195:	data16 int 0xdf
  411198:	stos   BYTE PTR es:[edi],al
  411199:	inc    esi
  41119a:	aam    0xd8
  41119c:	or     al,0x11
  41119e:	sub    al,0xa2
  4111a0:	rcr    DWORD PTR [eax-0x6f],cl
  4111a3:	xchg   edx,eax
  4111a4:	enter  0xfb58,0x54
  4111a8:	mov    bh,0x28
  4111aa:	ret    0xec57
  4111ad:	fdiv   st,st(0)
  4111af:	stos   DWORD PTR es:[edi],eax
  4111b0:	jecxz  0x4111f5
  4111b2:	mov    bl,0xe7
  4111b4:	or     al,0x43
  4111b6:	loop   0x411148
  4111b8:	(bad)  
  4111b9:	sbb    ecx,ebp
  4111bb:	call   edi
  4111bd:	push   ebp
  4111be:	and    dl,dh
  4111c0:	mov    DWORD PTR [ebx-0x689bf5ba],ebx
  4111c6:	int3   
  4111c7:	popf   
  4111c8:	mov    esi,0xa1a319d5
  4111cd:	inc    esi
  4111ce:	inc    ebx
  4111cf:	shr    BYTE PTR [edx+0x6a],cl
  4111d2:	or     BYTE PTR [ebp+0x714a9a79],dl
  4111d8:	mov    esi,0x577e9db6
  4111dd:	inc    ebx
  4111de:	leave  
  4111df:	rcl    BYTE PTR [eax-0x67b87ffc],1
  4111e5:	test   al,0xb5
  4111e7:	push   esi
  4111e8:	push   0x1c
  4111ea:	iret   
  4111eb:	bound  esi,QWORD PTR [edi]
  4111ed:	test   al,0x19
  4111ef:	mov    cl,0x6a
  4111f1:	inc    edx
  4111f2:	ret    
  4111f3:	in     eax,0x4f
  4111f5:	push   esp
  4111f6:	int3   
  4111f7:	sar    DWORD PTR [edi+eax*4],1
  4111fa:	dec    eax
  4111fb:	xor    ecx,DWORD PTR [edi]
  4111fd:	scas   eax,DWORD PTR es:[edi]
  4111fe:	jo     0x41121d
  411200:	leave  
  411201:	call   0xe327:0xd8ad5a9
  411208:	jns    0x4111c5
  41120a:	cld    
  41120b:	lock popa 
  41120d:	xchg   edx,eax
  41120e:	mov    edx,0x4745c507
  411213:	ss fs xchg bx,ax
  411217:	std    
  411218:	mov    dl,0x47
  41121a:	xchg   esi,eax
  41121b:	xor    DWORD PTR [ebx],edi
  41121d:	pusha  
  41121e:	out    0x78,eax
  411220:	pop    ss
  411221:	add    BYTE PTR ds:0x125590a1,dh
  411227:	cmp    esi,ebx
  411229:	repz dec eax
  41122b:	xchg   esi,edi
  41122d:	popf   
  41122e:	sbb    DWORD PTR [edx-0x11],eax
  411231:	adc    edi,DWORD PTR [eax+edi*4-0x38]
  411235:	mov    eax,0x3655cae0
  41123a:	inc    esi
  41123b:	cmp    al,0x50
  41123d:	in     eax,dx
  41123e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41123f:	mov    esi,0x1a4f4245
  411244:	jle    0x411237
  411246:	cmp    BYTE PTR [esi+0xd],dl
  411249:	cwde   
  41124a:	cmp    BYTE PTR [eax],dl
  41124c:	shl    DWORD PTR [edi-0x6b],1
  41124f:	adc    BYTE PTR [edi],ah
  411251:	lods   eax,DWORD PTR ds:[esi]
  411252:	and    DWORD PTR [ebp-0x6],edi
  411255:	repnz cmp eax,0x9be58f16
  41125b:	push   eax
  41125c:	push   eax
  41125d:	dec    ebp
  41125e:	lock jne 0x4112c4
  411261:	pop    ecx
  411262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411264:	push   eax
  411265:	clc    
  411266:	push   es
  411267:	xor    cl,BYTE PTR [ebp+0x37a96f7c]
  41126d:	popa   
  41126e:	scas   al,BYTE PTR es:[edi]
  41126f:	in     eax,0x6d
  411271:	mov    ch,0x7e
  411273:	mov    ss,ecx
  411275:	iret   
  411276:	mov    ebp,0x80f3b0c3
  41127b:	adc    al,0xe5
  41127d:	jg     0x411224
  41127f:	aas    
  411280:	enter  0xbdc5,0xa4
  411284:	ja     0x4112b0
  411286:	imul   esi,DWORD PTR [ecx+edx*8-0x72],0x1e3ddd84
  41128e:	push   esp
  41128f:	fnsave [edx]
  411291:	push   ds
  411292:	gs xchg edi,eax
  411294:	out    0xe0,eax
  411296:	scas   eax,DWORD PTR es:[edi]
  411297:	jecxz  0x411284
  411299:	push   di
  41129b:	pop    ds
  41129c:	push   cs
  41129d:	scas   eax,DWORD PTR es:[edi]
  41129e:	into   
  41129f:	cmc    
  4112a0:	push   esp
  4112a1:	cli    
  4112a2:	xchg   ebx,eax
  4112a3:	out    0xf4,al
  4112a5:	push   ebp
  4112a6:	fild   QWORD PTR [eax]
  4112a8:	push   ebx
  4112a9:	imul   esi,DWORD PTR [ecx-0x5e5c98f],0x14
  4112b0:	jecxz  0x4112d4
  4112b2:	hlt    
  4112b3:	or     BYTE PTR [ecx-0x36b5760e],al
  4112b9:	mul    DWORD PTR [edi]
  4112bb:	inc    edx
  4112bc:	mov    esi,0x36bec6ab
  4112c1:	jb     0x41126a
  4112c3:	nop
  4112c4:	xor    al,0x55
  4112c6:	mov    cl,0xfd
  4112c8:	leave  
  4112c9:	imul   BYTE PTR [ecx+0x14]
  4112cc:	inc    esi
  4112cd:	add    ebx,edi
  4112cf:	cmc    
  4112d0:	push   eax
  4112d1:	adc    eax,0x147a9c89
  4112d6:	daa    
  4112d7:	jge    0x411322
  4112d9:	jmp    0x22463c7f
  4112de:	adc    edx,ebx
  4112e0:	mov    dh,0x7a
  4112e2:	cs loopne 0x4112dd
  4112e5:	inc    esp
  4112e6:	mov    dh,0x7b
  4112e8:	mov    ah,0x34
  4112ea:	int    0x47
  4112ec:	push   esp
  4112ed:	in     al,0xa8
  4112ef:	sub    al,0x96
  4112f1:	fild   DWORD PTR [edx+0x4b]
  4112f4:	pop    edx
  4112f5:	adc    al,0xce
  4112f7:	mov    edi,0x25f565d5
  4112fc:	in     al,dx
  4112fd:	ja     0x4112a7
  4112ff:	xor    DWORD PTR [edx+0x402b70bc],edi
  411305:	ror    BYTE PTR [eax],1
  411307:	jg     0x411298
  411309:	lea    esp,[esi]
  41130b:	shld   esp,ecx,cl
  41130e:	xchg   ebp,eax
  41130f:	push   esi
  411310:	sub    al,0xf2
  411312:	push   esi
  411313:	mov    dl,BYTE PTR [ecx+0x4b01ad03]
  411319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41131a:	sbb    edx,DWORD PTR [ecx]
  41131c:	jns    0x4112f3
  41131e:	xor    bl,bh
  411320:	jns    0x411317
  411322:	jecxz  0x411307
  411324:	test   eax,0xb6c3d5f6
  411329:	jne    0x41134a
  41132b:	jg     0x41132f
  41132d:	sbb    BYTE PTR [edx-0x7a223e7f],0xfe
  411334:	or     dh,BYTE PTR [ebx-0x1e66d87a]
  41133a:	ds jno 0x41139f
  41133d:	jle    0x411344
  41133f:	sbb    edi,DWORD PTR [edi]
  411341:	sub    DWORD PTR [edi-0x43d93e70],edi
  411347:	aaa    
  411348:	sti    
  411349:	in     al,0xd
  41134b:	mov    esi,edx
  41134d:	js     0x4113c9
  41134f:	(bad)  
  411350:	lods   al,BYTE PTR ds:[esi]
  411351:	push   eax
  411352:	sbb    BYTE PTR [edx+0x6a],dh
  411355:	xchg   ebx,eax
  411356:	ins    BYTE PTR es:[edi],dx
  411357:	outs   dx,DWORD PTR ds:[esi]
  411358:	cmp    eax,DWORD PTR [edi+eax*2-0x75]
  41135c:	jae    0x41136b
  41135e:	rcl    DWORD PTR [esi+0x49],0x91
  411362:	add    dl,BYTE PTR ss:[eax]
  411365:	mov    WORD PTR [esi+0x25],cs
  411368:	xor    DWORD PTR [edi+0x2c],esp
  41136b:	in     al,dx
  41136c:	push   cs
  41136d:	rcl    BYTE PTR [eax+0x6a4edb5],cl
  411373:	pop    esp
  411374:	mov    esp,0x3d26e7af
  411379:	push   es
  41137a:	(bad)  
  41137b:	pop    eax
  41137c:	pop    edi
  41137d:	ficomp DWORD PTR [esi]
  41137f:	xchg   esi,eax
  411380:	aad    0xfd
  411382:	mov    ebp,0x990d5568
  411387:	dec    edi
  411388:	leave  
  411389:	leave  
  41138a:	xchg   ebx,eax
  41138b:	sti    
  41138c:	mov    ecx,DWORD PTR [eax+0x4c5c1fcc]
  411392:	jo     0x411390
  411394:	mov    eax,0x7e478cab
  411399:	xchg   edi,eax
  41139a:	mov    edx,0xb199da7c
  41139f:	sbb    al,0x97
  4113a1:	push   edx
  4113a2:	cmp    BYTE PTR [eax-0x3f338e7],dl
  4113a8:	add    eax,0x1935d4ee
  4113ad:	xchg   esp,eax
  4113ae:	and    BYTE PTR [edx-0x53],ah
  4113b1:	dec    ebx
  4113b2:	pop    ds
  4113b3:	loop   0x411372
  4113b5:	std    
  4113b6:	jnp    0x411424
  4113b8:	cmp    DWORD PTR [eax+ecx*1-0x60],0x7cd2d5a
  4113c0:	aad    0xbf
  4113c2:	adc    eax,DWORD PTR [esi]
  4113c4:	neg    esi
  4113c6:	mov    edi,0xe36df77c
  4113cb:	dec    eax
  4113cc:	lods   eax,DWORD PTR ds:[esi]
  4113cd:	(bad)  
  4113ce:	jmp    0x155619d6
  4113d3:	xchg   ebp,eax
  4113d4:	sbb    DWORD PTR [ecx-0x26dc10f3],0xcef7f487
  4113de:	mov    esp,DWORD PTR [esi+0x49]
  4113e1:	sbb    BYTE PTR [eax-0x34],al
  4113e4:	mov    bl,0x25
  4113e6:	push   esi
  4113e7:	out    0xf1,eax
  4113e9:	and    al,0x77
  4113eb:	sbb    al,0xca
  4113ed:	out    dx,al
  4113ee:	stc    
  4113ef:	inc    esp
  4113f0:	lea    esp,[edi]
  4113f2:	test   eax,0xafc9c4f8
  4113f7:	or     eax,0x46f5f89d
  4113fc:	clc    
  4113fd:	out    0x7e,eax
  4113ff:	out    dx,al
  411400:	jne    0x41144c
  411402:	ds ins BYTE PTR es:[edi],dx
  411404:	sbb    edx,DWORD PTR [edi]
  411406:	xchg   ebp,eax
  411407:	mov    eax,0x6018a2ff
  41140c:	aas    
  41140d:	fwait
  41140e:	and    edx,DWORD PTR [eax+edx*4-0x1f]
  411412:	pop    ss
  411413:	icebp  
  411414:	xchg   esi,eax
  411415:	aaa    
  411416:	push   DWORD PTR [ebp+esi*4-0x35]
  41141a:	add    BYTE PTR [ecx],bl
  41141c:	leave  
  41141d:	xchg   ebp,eax
  41141e:	push   0xffffffa5
  411420:	mov    ebp,0x97fe862a
  411425:	sbb    BYTE PTR [edx],cl
  411427:	mov    cl,0xaa
  411429:	int3   
  41142a:	push   edi
  41142b:	ds cmp eax,0xea7f6f7b
  411431:	ds inc edi
  411433:	out    dx,eax
  411434:	or     al,BYTE PTR [ecx-0x2cfaf30a]
  41143a:	inc    edi
  41143b:	ret    
  41143c:	mov    eax,0xa95884d6
  411441:	ss jne 0x4113db
  411444:	inc    eax
  411445:	sysenter 
  411447:	ja     0x411498
  411449:	jle    0x41141a
  41144b:	js     0x4114a0
  41144d:	ins    BYTE PTR es:[edi],dx
  41144e:	sbb    ecx,ecx
  411450:	dec    esp
  411451:	loopne 0x411493
  411453:	dec    edx
  411454:	mov    BYTE PTR [ebp-0x2bb08693],dh
  41145a:	ret    
  41145b:	sbb    DWORD PTR [esi],esi
  41145d:	fst    DWORD PTR [edx+0x7]
  411460:	sbb    eax,0x44a019d
  411465:	xor    ebp,ebp
  411467:	mov    esp,0x18fef2b9
  41146c:	mov    bl,0x1d
  41146e:	pop    ds
  41146f:	sahf   
  411470:	jbe    0x411463
  411472:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  411474:	in     al,0x7c
  411476:	pop    ebp
  411477:	int    0xaa
  411479:	inc    eax
  41147a:	jne    0x411452
  41147c:	jg     0x411447
  41147e:	test   al,0xf5
  411480:	jb     0x4114b0
  411482:	cmp    al,0x62
  411484:	jbe    0x4114e5
  411486:	jbe    0x411452
  411488:	aas    
  411489:	mov    esi,0xe4e5941a
  41148e:	inc    edi
  41148f:	popf   
  411490:	push   edx
  411491:	push   esp
  411492:	test   DWORD PTR [ebx+0x5e2d9d18],ecx
  411498:	add    edi,ebp
  41149a:	mov    ebp,DWORD PTR [esi-0x3db49132]
  4114a0:	pop    edx
  4114a1:	data16 loope 0x4114dd
  4114a4:	jl     0x411443
  4114a6:	test   ebx,ebx
  4114a8:	adc    al,0x4c
  4114aa:	mov    eax,0x579d8f29
  4114af:	mov    edi,0xbcd4f04
  4114b4:	ds lahf 
  4114b6:	jns    0x411469
  4114b8:	pop    ebx
  4114b9:	pop    ebp
  4114ba:	popf   
  4114bb:	psrld  mm6,mm5
  4114be:	and    al,0x4a
  4114c0:	cwde   
  4114c1:	cmp    BYTE PTR [edi],bh
  4114c3:	pop    ebp
  4114c4:	call   0x6a4168e7
  4114c9:	inc    ebp
  4114ca:	and    DWORD PTR [ecx+0x50],0x3f
  4114ce:	mov    edx,0xdce5e288
  4114d3:	and    bh,BYTE PTR [ebx+0x4d5b1d37]
  4114d9:	mov    bl,0x64
  4114db:	je     0x4114d1
  4114dd:	mul    DWORD PTR [eax+ebx*2+0x66]
  4114e1:	pop    edi
  4114e2:	sbb    DWORD PTR [esi-0x47d78f7f],esp
  4114e8:	scas   eax,DWORD PTR es:[edi]
  4114e9:	test   al,0xa5
  4114eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ec:	pop    es
  4114ed:	cmp    DWORD PTR ss:[ecx+0x43],esi
  4114f1:	jbe    0x4114c4
  4114f3:	loopne 0x4114dd
  4114f5:	(bad)  
  4114f6:	cwde   
  4114f7:	cmp    ebp,DWORD PTR [eax+0x68]
  4114fa:	jl     0x4114ea
  4114fc:	cmc    
  4114fd:	stos   DWORD PTR es:[edi],eax
  4114fe:	in     eax,dx
  4114ff:	xor    cl,BYTE PTR [ebx]
  411501:	ret    0x95ac
  411504:	movntq QWORD PTR [ecx-0x23dc9ee8],mm0
  41150b:	mov    ebx,0x6faa2cc2
  411510:	xchg   ebp,eax
  411511:	fdivrp st(2),st
  411513:	mov    dh,0x25
  411515:	adc    eax,0x80d6dd6f
  41151a:	adc    DWORD PTR [eax],0xd
  41151d:	es or  ebp,ecx
  411520:	push   esi
  411521:	xor    DWORD PTR [edx],ebp
  411523:	jns    0x411503
  411525:	mov    al,0xf7
  411527:	lock sub al,BYTE PTR [esi]
  41152a:	mov    ebx,0xca5f861a
  41152f:	adc    al,BYTE PTR [ebx]
  411531:	inc    esi
  411532:	push   cs
  411533:	aam    0x1e
  411535:	push   ds
  411536:	adc    eax,0x1c2508d9
  41153b:	push   edx
  41153c:	test   ah,cl
  41153e:	push   eax
  41153f:	mov    dh,0x31
  411541:	or     BYTE PTR [ecx+0x53],0x6c
  411545:	call   0x1d1c:0x806c9f20
  41154c:	dec    ecx
  41154d:	stos   DWORD PTR es:[edi],eax
  41154e:	out    dx,al
  41154f:	stos   BYTE PTR es:[edi],al
  411550:	lods   al,BYTE PTR ds:[esi]
  411551:	push   ebp
  411552:	popa   
  411553:	xor    al,0x34
  411555:	(bad)  
  411556:	neg    BYTE PTR [ebp+0x29]
  411559:	jns    0x41157e
  41155b:	mov    cl,BYTE PTR [ebp+eiz*4-0x48873d9b]
  411562:	sub    BYTE PTR [edi+0x19],cl
  411565:	mov    bh,0xcb
  411567:	and    bl,ah
  411569:	je     0x411551
  41156b:	sar    DWORD PTR [esi],1
  41156d:	inc    edx
  41156e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41156f:	xchg   esi,eax
  411570:	lods   al,BYTE PTR ds:[esi]
  411571:	mov    eax,0xdedb411
  411576:	cmp    al,BYTE PTR [ebp-0x5c]
  411579:	jnp    0x411588
  41157b:	cmp    BYTE PTR [edx],dl
  41157d:	xchg   edx,eax
  41157e:	inc    ebx
  41157f:	and    eax,0x7f62a686
  411584:	scas   eax,DWORD PTR es:[edi]
  411585:	cld    
  411586:	jg     0x411588
  411588:	lea    esp,[esi+0x7f]
  41158b:	call   0x15c38a48
  411590:	gs out dx,eax
  411592:	scas   ax,WORD PTR es:[edi]
  411594:	pop    edi
  411595:	inc    eax
  411596:	cdq    
  411597:	mov    DWORD PTR [esi],esp
  411599:	ins    DWORD PTR es:[edi],dx
  41159a:	mov    ah,0xd5
  41159c:	icebp  
  41159d:	cmc    
  41159e:	push   ebx
  41159f:	cmc    
  4115a0:	cli    
  4115a1:	fistp  QWORD PTR [ecx+0x5a62b19f]
  4115a7:	leave  
  4115a8:	ins    BYTE PTR es:[edi],dx
  4115a9:	js     0x41162a
  4115ab:	add    ebp,0x53825bb8
  4115b1:	addr16 xchg ecx,eax
  4115b3:	pop    ss
  4115b4:	push   ebx
  4115b5:	mov    edx,0xc611b394
  4115ba:	ja     0x411556
  4115bc:	lods   eax,DWORD PTR ds:[esi]
  4115bd:	add    DWORD PTR [edi+ebx*8+0x53],ecx
  4115c1:	sub    al,0xfa
  4115c3:	and    BYTE PTR [esi],al
  4115c5:	fistp  WORD PTR [ecx]
  4115c7:	call   0x42c84879
  4115cc:	daa    
  4115cd:	dec    edx
  4115ce:	fs ja  0x411561
  4115d1:	les    edx,FWORD PTR [esi]
  4115d3:	jae    0x4115b4
  4115d5:	(bad)  
  4115d7:	stos   DWORD PTR es:[edi],eax
  4115d8:	mov    DWORD PTR [ebp-0x61cd8ea2],esi
  4115de:	add    BYTE PTR [edx-0x7487ebb5],bh
  4115e4:	es mov dl,0x5f
  4115e7:	icebp  
  4115e8:	inc    BYTE PTR [ecx+0x7b]
  4115eb:	stos   DWORD PTR es:[edi],eax
  4115ec:	jns    0x4115d0
  4115ee:	push   cs
  4115ef:	fcmovbe st,st(7)
  4115f1:	xor    al,0xeb
  4115f3:	aas    
  4115f4:	sub    DWORD PTR [eax-0x317118ad],esp
  4115fa:	push   ds
  4115fb:	mov    cl,0xc4
  4115fd:	adc    eax,0xe3edea3d
  411602:	lds    ebx,FWORD PTR [edx]
  411604:	mov    edx,0x659fea13
  411609:	xor    edi,DWORD PTR [ebx-0xfd4a90f]
  41160f:	add    bh,BYTE PTR [ecx]
  411611:	mov    BYTE PTR [ebp+0x2a],ah
  411614:	mov    eax,0xa3662699
  411619:	jmp    FWORD PTR [edx]
  41161b:	ret    
  41161c:	jmp    0xb95:0x2d73d967
  411623:	test   DWORD PTR [ebx-0x4457cf1f],esp
  411629:	mov    al,0x6e
  41162b:	leave  
  41162c:	cdq    
  41162d:	mov    BYTE PTR [esp+edi*4-0x46d974b8],cl
  411634:	push   cs
  411635:	inc    esp
  411636:	out    0xe3,eax
  411638:	clc    
  411639:	retf   0xacc6
  41163c:	pop    edi
  41163d:	lods   eax,DWORD PTR ds:[esi]
  41163e:	pop    edx
  41163f:	ror    ebx,cl
  411641:	jo     0x41160a
  411643:	mov    esp,edi
  411645:	scas   al,BYTE PTR es:[edi]
  411646:	jp     0x411636
  411648:	fbld   TBYTE PTR [ecx+0x4b1b3056]
  41164e:	rol    bl,cl
  411650:	adc    eax,0xa1c1b0bf
  411655:	out    0xc,eax
  411657:	adc    al,0x89
  411659:	scas   al,BYTE PTR es:[edi]
  41165a:	adc    eax,0x56ae60db
  41165f:	in     eax,0xa8
  411661:	(bad)  
  411662:	sbb    eax,0x6ccd84bc
  411667:	push   ebx
  411668:	mov    ah,0x6b
  41166a:	addr16 mov ebx,0xf236df5c
  411670:	fcomi  st,st(0)
  411672:	dec    ebx
  411673:	xchg   edi,eax
  411674:	jae    0x411631
  411676:	push   ss
  411677:	fidivr DWORD PTR [ebx]
  411679:	dec    edi
  41167a:	(bad)  
  41167b:	repnz loope 0x41169f
  41167e:	add    ah,ch
  411680:	add    BYTE PTR [edi-0x6f3926eb],ah
  411686:	daa    
  411687:	js     0x4116cf
  411689:	add    DWORD PTR [esi+0x406c4829],ebp
  41168f:	add    dl,BYTE PTR [edx-0x14aa13b0]
  411695:	pop    edx
  411696:	ja     0x41162e
  411698:	out    dx,eax
  411699:	fwait
  41169a:	jp     0x4116f6
  41169c:	test   al,0x90
  41169e:	or     al,0x0
  4116a0:	jnp    0x411700
  4116a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116a3:	sbb    eax,0x757f0e9a
  4116a8:	add    ch,BYTE PTR [eax+edi*8+0x4c806d5b]
  4116af:	jl     0x411642
  4116b1:	out    dx,al
  4116b2:	je     0x41172b
  4116b4:	call   0x935504b
  4116b9:	mov    al,ds:0x90e2b251
  4116be:	mov    ds:0x661df3f1,al
  4116c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c4:	jne    0x411721
  4116c6:	xor    DWORD PTR [ecx+0xb],edx
  4116c9:	test   eax,esp
  4116cb:	dec    esp
  4116cc:	or     al,0x30
  4116ce:	or     al,0x9f
  4116d0:	jmp    0x4855d5df
  4116d5:	xchg   BYTE PTR [edx+ecx*8-0xe72e317],cl
  4116dc:	aad    0xf8
  4116de:	imul   ebp,DWORD PTR [ebx],0xfe6fc432
  4116e4:	pop    ebp
  4116e5:	or     BYTE PTR [ebp-0x66701c34],0x83
  4116ec:	(bad)  
  4116ed:	fadd   st,st(6)
  4116ef:	imul   ecx,DWORD PTR [ecx+ebp*4+0x13d4957c],0xffffff80
  4116f7:	outs   dx,DWORD PTR ds:[esi]
  4116f8:	add    al,0xf9
  4116fa:	arpl   WORD PTR [ebx-0xee57dee],dx
  411700:	pop    edx
  411701:	imul   eax,DWORD PTR [esi+0x2],0xe6fada81
  411708:	lea    ecx,[edx+edx*2-0x1d]
  41170c:	mov    ah,0xa6
  41170e:	inc    esi
  41170f:	sahf   
  411710:	sbb    DWORD PTR [ebp+0x6e],eax
  411713:	jmp    0x4116ad
  411715:	sub    eax,0xf07e9eb9
  41171a:	loop   0x411700
  41171c:	inc    esp
  41171d:	adc    al,0x45
  41171f:	xor    bh,BYTE PTR ds:0x6711131f
  411725:	test   BYTE PTR [ecx+0x483c1454],ch
  41172b:	dec    edx
  41172c:	pop    esp
  41172d:	rcr    BYTE PTR [esi],1
  41172f:	jmp    0xfe1b:0x6122fb95
  411736:	inc    eax
  411737:	mov    cl,0xda
  411739:	lea    edx,[edx+0x7c]
  41173c:	or     al,0x1b
  41173e:	leave  
  41173f:	daa    
  411740:	mov    cl,0x87
  411742:	jae    0x411738
  411744:	inc    ecx
  411745:	outs   dx,BYTE PTR ds:[esi]
  411746:	iret   
  411747:	scas   eax,DWORD PTR es:[edi]
  411748:	test   al,0x9b
  41174a:	mov    esp,DWORD PTR [ebp-0x68978612]
  411750:	dec    edi
  411751:	add    esi,DWORD PTR [ecx]
  411753:	(bad)  
  411754:	out    dx,al
  411755:	push   edi
  411756:	xor    DWORD PTR [edx-0x2a33a28f],ecx
  41175c:	adc    bh,BYTE PTR [esi-0x6d4fc085]
  411762:	mov    ch,0xee
  411764:	js     0x41170a
  411766:	sbb    DWORD PTR ds:0xbe3ad6e0,edx
  41176c:	pop    esp
  41176d:	ins    BYTE PTR es:[edi],dx
  41176e:	mov    ebp,0x18d16613
  411773:	mov    ebx,esi
  411775:	pop    edx
  411776:	and    ax,WORD PTR [edx+ecx*4]
  41177a:	int    0x6f
  41177c:	ins    BYTE PTR es:[edi],dx
  41177d:	out    dx,al
  41177e:	jae    0x4117fd
  411780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411781:	and    ecx,edi
  411783:	dec    edx
  411784:	xor    edx,DWORD PTR [ebp-0x8a704c6]
  41178a:	xlat   BYTE PTR ds:[ebx]
  41178b:	gs or  al,0x66
  41178e:	add    ch,BYTE PTR [ebp+0x11ae1f75]
  411794:	push   esi
  411795:	sub    DWORD PTR [ebp+0x1dcdfa49],esi
  41179b:	and    al,0x46
  41179d:	xor    al,0xd1
  41179f:	or     bh,BYTE PTR [edx-0x27c1be57]
  4117a5:	test   dl,dh
  4117a7:	adc    eax,DWORD PTR [ebx+edi*4-0x18]
  4117ab:	aaa    
  4117ac:	int3   
  4117ad:	dec    ebx
  4117ae:	arpl   WORD PTR [edx+esi*8+0x4f29e262],si
  4117b5:	push   es
  4117b6:	(bad)  
  4117b7:	js     0x4117ef
  4117b9:	push   edi
  4117ba:	repz jg 0x411742
  4117bd:	scas   al,BYTE PTR es:[edi]
  4117be:	or     DWORD PTR [eax+0xc6aa15c],ebp
  4117c4:	lahf   
  4117c5:	mov    fs,WORD PTR [edx]
  4117c7:	das    
  4117c8:	sub    edi,DWORD PTR [eax]
  4117ca:	pusha  
  4117cb:	add    eax,0xdb7c72a4
  4117d0:	jp     0x4117f6
  4117d2:	jae    0x41183f
  4117d4:	pop    edx
  4117d5:	shl    DWORD PTR [esi],1
  4117d7:	call   0xaa3504bd
  4117dc:	push   ds
  4117dd:	cdq    
  4117de:	inc    esi
  4117df:	sub    al,0xad
  4117e1:	mov    edx,0x6a2fdb52
  4117e6:	add    DWORD PTR [edx],ecx
  4117e8:	sub    BYTE PTR [esi],ch
  4117ea:	jmp    0xba8c:0x68b0119b
  4117f1:	ror    DWORD PTR [esi+0x5d],1
  4117f4:	out    0x7f,eax
  4117f6:	and    BYTE PTR [ebp+0x64],dl
  4117f9:	mov    cl,0xd1
  4117fb:	or     eax,0x3b8a29aa
  411800:	mov    BYTE PTR [ecx+0x7c],ah
  411803:	aam    0xc2
  411805:	mov    esi,0xd95653d2
  41180a:	sbb    BYTE PTR [edx],ah
  41180c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41180e:	pop    edx
  41180f:	lock push ebp
  411811:	push   eax
  411812:	out    dx,eax
  411813:	call   0x7704:0xbb69acfd
  41181a:	out    dx,eax
  41181b:	fst    DWORD PTR [ecx+0x9]
  41181e:	xlat   BYTE PTR ds:[ebx]
  41181f:	gs lock inc ebp
  411822:	add    eax,0xf98079a0
  411827:	mov    esi,0xbdd656f4
  41182c:	jnp    0x4117b1
  41182e:	repz iret 
  411830:	cwde   
  411831:	mov    DWORD PTR [edi+0x41],esp
  411834:	sub    ch,BYTE PTR [esi-0x70b8cc0a]
  41183a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41183b:	jno    0x41180c
  41183d:	xchg   esp,eax
  41183e:	mov    dl,0x54
  411840:	cmp    al,0x27
  411842:	jmp    0x844b2d80
  411847:	pushf  
  411848:	pop    eax
  411849:	jp     0x411861
  41184b:	arpl   WORD PTR [esi],sp
  41184d:	pop    edi
  41184e:	lahf   
  41184f:	ror    DWORD PTR [ebx],cl
  411851:	shr    dh,1
  411853:	sbb    BYTE PTR [esi],cl
  411855:	and    BYTE PTR [edi+0x38],0x5f
  411859:	jmp    0xa4734de9
  41185e:	ins    DWORD PTR es:[edi],dx
  41185f:	ss pop edx
  411861:	push   edi
  411862:	mov    ah,0x76
  411864:	lds    esp,FWORD PTR [edi-0x49]
  411867:	out    0xb4,eax
  411869:	repz pop ebp
  41186b:	in     eax,dx
  41186c:	or     BYTE PTR [ecx+esi*4+0x42676e9d],dl
  411873:	idiv   BYTE PTR [ebp+0x6f3f1a03]
  411879:	jl     0x411816
  41187b:	out    dx,eax
  41187c:	popf   
  41187d:	jmp    0x411855
  41187f:	fstp   QWORD PTR [ecx+0x22]
  411882:	xchg   ebx,eax
  411883:	cmp    bh,al
  411885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411886:	in     eax,dx
  411887:	(bad)
  41188b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41188c:	loope  0x4118f8
  41188e:	inc    eax
  41188f:	cdq    
  411890:	jne    0x4118ef
  411892:	sub    DWORD PTR [ebp-0x17],0xade8f6de
  411899:	ja     0x41187c
  41189b:	sbb    eax,0xdcfe0a86
  4118a0:	and    dh,BYTE PTR [ebp-0x485bf4a3]
  4118a6:	fwait
  4118a7:	out    0x55,al
  4118a9:	pop    ebx
  4118aa:	cmp    al,0x31
  4118ac:	add    al,0xb9
  4118ae:	imul   DWORD PTR [ebx-0x47]
  4118b1:	mov    ecx,0xa4e47c29
  4118b6:	mov    ebx,0xd0d0b7c4
  4118bb:	push   cs
  4118bc:	mov    edx,0xa870b254
  4118c1:	das    
  4118c2:	clc    
  4118c3:	sbb    al,0x1a
  4118c5:	inc    eax
  4118c6:	dec    esi
  4118c7:	mov    ds:0x7ae086e,eax
  4118cc:	hlt    
  4118cd:	js     0x411875
  4118cf:	mov    cl,0xba
  4118d1:	repz adc al,0x13
  4118d4:	pop    edx
  4118d5:	int    0xd0
  4118d7:	pop    es
  4118d8:	mov    ch,0x3e
  4118da:	inc    esi
  4118db:	xchg   DWORD PTR [eax],esp
  4118dd:	and    al,0x6c
  4118df:	add    BYTE PTR [esi-0x2c],ch
  4118e2:	xor    eax,0xe2665f73
  4118e7:	jno    0x41190b
  4118e9:	in     eax,dx
  4118ea:	outs   dx,BYTE PTR ds:[esi]
  4118eb:	xor    ah,BYTE PTR [ebx+0x41]
  4118ee:	mov    ecx,0x750cf35e
  4118f3:	(bad)  
  4118f4:	lahf   
  4118f5:	lock and DWORD PTR [ebp-0x5b],ecx
  4118f9:	outs   dx,DWORD PTR ds:[esi]
  4118fa:	call   0x6778:0x9971f604
  411901:	add    dh,ah
  411903:	jmp    0x411887
  411905:	mov    edx,0x57d1596d
  41190a:	ds stos BYTE PTR es:[edi],al
  41190c:	mov    edi,0x9aa42312
  411911:	test   al,0x25
  411913:	dec    edi
  411914:	and    DWORD PTR [ebx],0x5d948afb
  41191a:	rcl    DWORD PTR [esi+0x5d],0xeb
  41191e:	sub    DWORD PTR fs:[eax+0x51],esi
  411922:	dec    ebx
  411923:	adc    al,0xc3
  411925:	outs   dx,DWORD PTR ds:[esi]
  411926:	test   al,0x61
  411928:	iret   
  411929:	adc    al,0x71
  41192b:	and    BYTE PTR [ecx-0x6bf19a72],cl
  411931:	popa   
  411932:	leave  
  411933:	mov    ds:0x79ff9a63,al
  411938:	imul   ecx,edi,0xba2f4f44
  41193e:	inc    ebx
  41193f:	call   0x2f9ac1ec
  411944:	(bad)  
  411945:	jecxz  0x4118f3
  411947:	jge    0x4118ed
  411949:	add    BYTE PTR [edi],ah
  41194b:	shl    BYTE PTR [esp+edi*2],0x9c
  41194f:	rcr    cl,1
  411951:	jnp    0x411934
  411953:	adc    al,0x62
  411955:	xchg   edx,eax
  411956:	dec    ebx
  411957:	hlt    
  411958:	sub    eax,ecx
  41195a:	mov    bl,0x7f
  41195c:	sub    BYTE PTR [ebp-0x1525a7c2],ah
  411962:	cmp    eax,0xd922393
  411967:	cmc    
  411968:	or     DWORD PTR [esi+0x764cdaa8],edi
  41196e:	hlt    
  41196f:	inc    ecx
  411970:	jmp    0x9ad0:0x5cbc4778
  411977:	retf   0xcc71
  41197a:	adc    ebx,DWORD PTR [ecx]
  41197c:	scas   eax,DWORD PTR es:[edi]
  41197d:	(bad)  
  41197e:	cli    
  41197f:	xlat   BYTE PTR cs:[ebx]
  411981:	and    dh,dh
  411983:	mov    al,ds:0x8d19d273
  411988:	lods   eax,DWORD PTR ds:[esi]
  411989:	pop    esp
  41198a:	and    eax,0x63d365a3
  41198f:	scas   al,BYTE PTR es:[edi]
  411990:	adc    al,0xa4
  411992:	ins    DWORD PTR es:[edi],dx
  411993:	add    bl,BYTE PTR [eax]
  411995:	outs   dx,DWORD PTR ds:[esi]
  411996:	shl    DWORD PTR [ebx-0x2a],1
  411999:	jo     0x4119c6
  41199b:	push   es
  41199c:	fdivr  DWORD PTR [edi+0x4]
  41199f:	cmp    bl,BYTE PTR [edi+0x5c9c8370]
  4119a5:	lds    eax,FWORD PTR [ecx+edx*4+0x2402b6de]
  4119ac:	xchg   ebp,eax
  4119ad:	mov    dh,0x45
  4119af:	adc    al,BYTE PTR [eax-0x3556c940]
  4119b5:	loop   0x411a1b
  4119b7:	cmp    al,0xb0
  4119b9:	cwde   
  4119ba:	neg    edi
  4119bc:	xchg   esp,eax
  4119bd:	outs   dx,BYTE PTR ds:[esi]
  4119be:	jb     0x411962
  4119c0:	xor    al,0x64
  4119c2:	ret    
  4119c3:	and    edi,DWORD PTR [ecx-0x26]
  4119c6:	lahf   
  4119c7:	sbb    DWORD PTR ds:0x7bc9d5fe,ecx
  4119cd:	cdq    
  4119ce:	mov    ah,0x8b
  4119d0:	mov    dl,0x3d
  4119d2:	adc    DWORD PTR [edx+edx*4+0x1fa1ad6e],ebx
  4119d9:	cmp    eax,0x4a6bcbf4
  4119de:	inc    esp
  4119df:	jecxz  0x411a44
  4119e1:	fstp   st(7)
  4119e3:	cmp    edx,ebx
  4119e5:	into   
  4119e6:	pop    edi
  4119e7:	jle    0x411a5c
  4119e9:	mov    WORD PTR [ebx+0x23],cs
  4119ec:	or     cl,cl
  4119ee:	pop    ebx
  4119ef:	int3   
  4119f0:	(bad)  
  4119f1:	jg     0x411a5b
  4119f3:	xor    BYTE PTR [eax+0x28],bl
  4119f6:	adc    al,0xa4
  4119f8:	push   0xffffffd9
  4119fa:	inc    ecx
  4119fb:	or     al,0xc8
  4119fd:	mov    bh,0x93
  4119ff:	cdq    
  411a00:	xchg   ebp,eax
  411a01:	adc    edi,DWORD PTR [edx-0x5e]
  411a04:	adc    eax,DWORD PTR [eax]
  411a06:	cmp    edx,esi
  411a08:	jno    0x411a83
  411a0a:	xchg   edi,eax
  411a0b:	mov    bl,0xc8
  411a0d:	ja     0x41199f
  411a0f:	dec    edi
  411a10:	cmp    BYTE PTR [esi-0x4379bcfc],0x4
  411a17:	jmp    0x23789b2d
  411a1c:	dec    ebx
  411a1d:	xchg   esp,eax
  411a1e:	and    al,0x13
  411a20:	mov    bl,0x4a
  411a22:	cmp    DWORD PTR [ebx],edi
  411a24:	adc    eax,0x2909d93a
  411a29:	ins    BYTE PTR es:[edi],dx
  411a2a:	pop    es
  411a2b:	xchg   ebp,eax
  411a2c:	xchg   ebp,eax
  411a2d:	jnp    0x411a4d
  411a2f:	rol    DWORD PTR [ebx],0x2c
  411a32:	jmp    0x411a92
  411a34:	aas    
  411a35:	call   0x311862f1
  411a3a:	inc    esi
  411a3b:	mov    ds:0xda89b5aa,eax
  411a40:	in     eax,0x2d
  411a42:	in     al,0xea
  411a44:	in     eax,dx
  411a45:	sbb    al,0xdb
  411a47:	mov    dh,0x11
  411a49:	and    edi,ebp
  411a4b:	sub    eax,0x2e7501c5
  411a50:	call   0xf223:0x739126a0
  411a57:	xchg   edi,eax
  411a58:	fwait
  411a59:	mov    al,ds:0x9221ff6e
  411a5e:	and    eax,0x268b0644
  411a63:	shr    DWORD PTR ds:0x3e7751f1,1
  411a69:	and    DWORD PTR [edi+0x5e546a70],ecx
  411a6f:	daa    
  411a70:	pop    ds
  411a71:	jo     0x411a34
  411a73:	cdq    
  411a74:	(bad)  
  411a75:	lods   eax,DWORD PTR ds:[esi]
  411a76:	pop    ecx
  411a77:	js     0x411a61
  411a79:	aam    0x40
  411a7b:	sub    eax,0x96eedfaf
  411a80:	daa    
  411a81:	das    
  411a82:	mov    BYTE PTR [ecx+ecx*2-0x2e1aa97c],dl
  411a89:	ss push es
  411a8b:	mov    BYTE PTR [edx+edi*2],al
  411a8e:	xlat   BYTE PTR ds:[ebx]
  411a8f:	push   es
  411a90:	out    0xb1,eax
  411a92:	scas   al,BYTE PTR es:[edi]
  411a93:	jmp    0x411aaf
  411a95:	sub    al,BYTE PTR [ebx-0x5e]
  411a98:	dec    edi
  411a99:	popf   
  411a9a:	sahf   
  411a9b:	dec    ebx
  411a9c:	ins    DWORD PTR es:[edi],dx
  411a9d:	push   ss
  411a9e:	rol    BYTE PTR [ebp-0x5024da26],cl
  411aa4:	mov    bh,0xd
  411aa6:	outs   dx,DWORD PTR ds:[esi]
  411aa7:	push   ds
  411aa8:	repz test esi,ebx
  411aab:	jecxz  0x411a70
  411aad:	fistp  DWORD PTR [edi-0x74bd618a]
  411ab3:	retf   
  411ab4:	shr    BYTE PTR [ecx+0x199b621d],1
  411aba:	fistp  WORD PTR [ebp-0x22ea26fd]
  411ac0:	out    dx,al
  411ac1:	xchg   edi,eax
  411ac2:	pop    es
  411ac3:	or     ch,0x15
  411ac6:	repz rcl cl,0xb
  411aca:	lods   eax,DWORD PTR ds:[esi]
  411acb:	add    eax,0xa43e82d3
  411ad0:	and    dl,BYTE PTR gs:[esi-0x39559294]
  411ad7:	mov    ebp,0xaa52f22c
  411adc:	ins    BYTE PTR es:[edi],dx
  411add:	pop    eax
  411ade:	pop    esi
  411adf:	ficom  DWORD PTR [ebp-0x43a9fc47]
  411ae5:	rcl    DWORD PTR [ebp-0x5],0x6f
  411ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aea:	adc    BYTE PTR [edx],dh
  411aec:	retf   
  411aed:	push   ss
  411aee:	xchg   ebp,eax
  411aef:	xor    al,0x4d
  411af1:	stos   DWORD PTR es:[edi],eax
  411af2:	mov    ds:0x4c2e6b44,eax
  411af7:	mov    dl,0xd2
  411af9:	add    ebx,DWORD PTR [edi]
  411afb:	test   eax,0xb7376b9b
  411b00:	out    0x73,eax
  411b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b03:	ins    DWORD PTR es:[edi],dx
  411b04:	sar    DWORD PTR [edi],cl
  411b06:	or     eax,0x577c8f76
  411b0b:	jge    0x411b59
  411b0d:	push   es
  411b0e:	int3   
  411b0f:	rcr    DWORD PTR [eax+ebx*1+0x42ee2283],0x4e
  411b17:	inc    eax
  411b18:	into   
  411b19:	mov    esp,0xcc4cbc6
  411b1e:	ret    
  411b1f:	lock push ss
  411b21:	scas   al,BYTE PTR es:[edi]
  411b22:	jg     0x411ac5
  411b24:	xchg   esp,eax
  411b25:	fstp   QWORD PTR [edi-0x5a]
  411b28:	stos   BYTE PTR es:[edi],al
  411b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b2a:	ss dec edi
  411b2c:	aas    
  411b2d:	out    dx,eax
  411b2e:	mov    dl,0x23
  411b30:	test   bh,bl
  411b32:	mov    edi,0xcd645443
  411b37:	dec    eax
  411b38:	ror    BYTE PTR ss:[esi],1
  411b3b:	or     al,0xcb
  411b3d:	adc    BYTE PTR [ecx],bh
  411b3f:	leave  
  411b40:	arpl   dx,cx
  411b42:	dec    edx
  411b43:	fstp   st(6)
  411b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b46:	sub    esp,DWORD PTR [eax-0xaf63d2d]
  411b4c:	and    ch,bl
  411b4e:	imul   ebp,DWORD PTR [ebp-0x450f1b6a],0x2e1c49f0
  411b58:	add    bh,BYTE PTR [edi+0x756ddfb0]
  411b5e:	push   ds
  411b5f:	pop    ebx
  411b60:	enter  0x5a8e,0x39
  411b64:	ss pop es
  411b66:	adc    al,0xe7
  411b68:	sbb    eax,0x5baae948
  411b6d:	inc    esi
  411b6e:	jmp    0xe9e3ea57
  411b73:	mov    bh,0xcc
  411b75:	gs out 0xa5,eax
  411b78:	popa   
  411b79:	ds std 
  411b7b:	test   BYTE PTR [eax-0x4af1cdcc],ch
  411b81:	xchg   ebp,eax
  411b82:	in     al,dx
  411b83:	jp     0x411b92
  411b85:	hlt    
  411b86:	rol    BYTE PTR [ebp+0x76a438d5],1
  411b8c:	ficomp DWORD PTR [ecx+ebx*8-0x46]
  411b90:	cwde   
  411b91:	enter  0x9413,0x73
  411b95:	scas   al,BYTE PTR es:[edi]
  411b96:	loop   0x411bb7
  411b98:	adc    BYTE PTR [eax-0x47],dl
  411b9b:	sub    eax,0xf88746bc
  411ba0:	int3   
  411ba1:	outs   dx,DWORD PTR ds:[esi]
  411ba2:	jl     0x411bff
  411ba4:	sbb    eax,0xbc4868d4
  411ba9:	or     ah,BYTE PTR [ebp-0x7ac0952d]
  411baf:	jmp    0x22f6b9cb
  411bb4:	js     0x411b51
  411bb6:	dec    eax
  411bb7:	sub    eax,0xb2696a9a
  411bbc:	push   ebp
  411bbd:	ins    DWORD PTR es:[edi],dx
  411bbe:	mov    ebp,0x99ac3d22
  411bc3:	xor    BYTE PTR [ebp+esi*4-0x3806f6c3],al
  411bca:	mov    ebp,0xe59ad955
  411bcf:	gs fwait
  411bd1:	push   edx
  411bd2:	scas   al,BYTE PTR es:[edi]
  411bd3:	(bad)  
  411bd4:	clc    
  411bd5:	push   edx
  411bd6:	fist   DWORD PTR [esi+0x7c32b6d0]
  411bdc:	fisub  WORD PTR [edi+0x6b]
  411bdf:	or     cl,dl
  411be1:	in     al,0xb4
  411be3:	mov    dh,0xde
  411be5:	lahf   
  411be6:	pop    eax
  411be7:	aam    0x6d
  411be9:	xchg   edx,eax
  411bea:	scas   eax,DWORD PTR es:[edi]
  411beb:	icebp  
  411bec:	fnstsw WORD PTR [edx+ebp*1-0x502f0449]
  411bf3:	(bad)  
  411bf4:	shl    edi,0x41
  411bf7:	xchg   edx,eax
  411bf8:	pop    edi
  411bf9:	adc    BYTE PTR [edx+ebx*8],ah
  411bfc:	cs jle 0x411bee
  411bff:	push   edx
  411c00:	inc    ebx
  411c01:	aam    0x34
  411c03:	jmp    0x8a23b997
  411c08:	sub    DWORD PTR [edi-0x6b],esp
  411c0b:	sti    
  411c0c:	fucompp 
  411c0e:	push   ecx
  411c0f:	jl     0x411bf8
  411c11:	mov    dh,0xfe
  411c13:	stos   DWORD PTR es:[edi],eax
  411c14:	xchg   edi,eax
  411c15:	call   0xa1c80ca1
  411c1a:	sbb    bl,BYTE PTR [ebp+0x39903fda]
  411c20:	pop    ebp
  411c21:	xchg   edx,eax
  411c22:	leave  
  411c23:	shl    esi,cl
  411c25:	stc    
  411c26:	dec    ecx
  411c27:	push   esp
  411c28:	jp     0x411bbd
  411c2a:	cdq    
  411c2b:	fbld   TBYTE PTR [esi+0x67]
  411c2e:	stos   DWORD PTR es:[edi],eax
  411c2f:	sbb    al,0xf6
  411c31:	icebp  
  411c32:	xor    DWORD PTR [ebx],edx
  411c34:	sar    ah,cl
  411c36:	or     DWORD PTR [ecx+0x466edffc],esi
  411c3c:	mov    dl,0x53
  411c3e:	jne    0x411c62
  411c40:	xchg   esi,eax
  411c41:	xor    eax,0x306fe53a
  411c46:	sahf   
  411c47:	add    eax,0x41779a6e
  411c4c:	mov    bh,dl
  411c4e:	push   edx
  411c4f:	sahf   
  411c50:	adc    BYTE PTR [edx-0x4a],bh
  411c53:	lds    eax,FWORD PTR [ecx-0x4a05165a]
  411c59:	enter  0xa781,0xcb
  411c5d:	ja     0x411cca
  411c5f:	adc    DWORD PTR [esi+0x683d37b6],esp
  411c65:	add    dl,BYTE PTR [ecx+0xc]
  411c68:	xor    al,0xce
  411c6a:	iret   
  411c6b:	fidiv  DWORD PTR [edx]
  411c6d:	jle    0x411bf4
  411c6f:	xchg   DWORD PTR [ebp-0x11],eax
  411c72:	xchg   DWORD PTR [ecx],edi
  411c74:	xchg   ecx,eax
  411c75:	add    eax,DWORD PTR [ecx-0x30]
  411c78:	xor    DWORD PTR [edx+0x464b55bf],ecx
  411c7e:	popa   
  411c7f:	xchg   DWORD PTR [esi-0x5cfc2b7c],ebx
  411c85:	push   ebp
  411c86:	sub    dl,BYTE PTR [eax-0x62]
  411c89:	or     cl,cl
  411c8b:	scas   al,BYTE PTR es:[edi]
  411c8c:	mov    esi,edx
  411c8e:	lea    esi,[esi+0xbc2a398]
  411c94:	retf   0xda70
  411c97:	xchg   edi,eax
  411c98:	out    dx,al
  411c99:	rcl    DWORD PTR [edx+0x4bfa8b49],0x58
  411ca0:	stos   DWORD PTR es:[edi],eax
  411ca1:	es ins DWORD PTR es:[edi],dx
  411ca3:	xchg   ebp,eax
  411ca4:	cmp    al,0xbf
  411ca6:	sti    
  411ca7:	aaa    
  411ca8:	cmp    ebp,DWORD PTR [ecx+0x18d6fe40]
  411cae:	popf   
  411caf:	outs   dx,BYTE PTR ds:[esi]
  411cb0:	add    BYTE PTR [edi],0x9f
  411cb3:	xlat   BYTE PTR cs:[ebx]
  411cb5:	stc    
  411cb6:	and    al,ch
  411cb8:	(bad)  
  411cb9:	outs   dx,DWORD PTR ds:[esi]
  411cba:	out    dx,al
  411cbb:	and    ebx,DWORD PTR [edi+0x2376dac6]
  411cc1:	mov    ebx,0x3e11bd59
  411cc6:	sub    eax,0x47d3b809
  411ccb:	sub    dh,BYTE PTR [edx]
  411ccd:	ins    BYTE PTR es:[edi],dx
  411cce:	aad    0xcf
  411cd0:	cmp    BYTE PTR [edi-0x7c02da8c],dl
  411cd6:	ret    
  411cd7:	push   ds
  411cd8:	or     DWORD PTR [eax-0x4b4c5400],esp
  411cde:	pop    ebx
  411cdf:	and    esp,eax
  411ce1:	stc    
  411ce2:	or     ecx,DWORD PTR [edi-0x6acf72b7]
  411ce8:	iret   
  411ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cea:	out    dx,al
  411ceb:	jp     0x411d16
  411ced:	pop    edx
  411cee:	inc    esi
  411cef:	mov    al,0x7b
  411cf1:	adc    al,0xcc
  411cf3:	dec    edx
  411cf4:	rol    bh,0xf2
  411cf7:	add    edi,eax
  411cf9:	inc    edx
  411cfa:	fistp  QWORD PTR ds:[ebx-0x64270da4]
  411d01:	neg    DWORD PTR ds:0x2d1b23f1
  411d07:	and    DWORD PTR [esi+0x6527cb09],edx
  411d0d:	loop   0x411cd4
  411d0f:	jecxz  0x411ca6
  411d11:	arpl   bx,dx
  411d13:	dec    edi
  411d14:	adc    DWORD PTR [ebx+0x4008d1ea],edx
  411d1a:	adc    al,0x3b
  411d1c:	xor    eax,0x9d178876
  411d21:	call   0xe29a4a16
  411d26:	xchg   ecx,eax
  411d27:	iret   
  411d28:	inc    edx
  411d29:	fnsetpm(287 only) 
  411d2b:	(bad)  
  411d2c:	mov    esi,0x59100850
  411d31:	scas   al,BYTE PTR es:[edi]
  411d32:	pop    esi
  411d33:	jno    0x411d84
  411d35:	mov    DWORD PTR [edx],edx
  411d37:	cmp    DWORD PTR [ebx],esp
  411d39:	les    esp,FWORD PTR [eax+0x3b]
  411d3c:	jns    0x411ce1
  411d3e:	aas    
  411d3f:	mov    ah,0xc6
  411d41:	sub    dh,BYTE PTR [edx+edi*8-0x245a7198]
  411d48:	push   ds
  411d49:	push   ebp
  411d4a:	fnstcw WORD PTR [ebx+0x4e]
  411d4d:	out    dx,eax
  411d4e:	cmc    
  411d4f:	adc    DWORD PTR es:[edi-0x45d39c10],edi
  411d56:	mov    ds:0x74c1e04,eax
  411d5b:	mov    eax,ds:0xab02ef5d
  411d60:	bound  edi,QWORD PTR [ecx+0x4d964544]
  411d66:	add    BYTE PTR [edx],ah
  411d68:	stc    
  411d69:	inc    edx
  411d6a:	push   eax
  411d6b:	repz pop ss
  411d6d:	pop    esi
  411d6e:	mov    cl,0xe7
  411d70:	nop
  411d71:	cmp    ch,BYTE PTR [ebx+ebx*2-0x36d5cf8a]
  411d78:	push   eax
  411d79:	sbb    dh,bl
  411d7b:	subps  xmm3,xmm6
  411d7e:	call   0x62f8:0x2ed1ec9
  411d85:	pop    edi
  411d86:	adc    ebx,DWORD PTR [ebp+0x2e]
  411d89:	in     al,dx
  411d8a:	jg     0x411d7a
  411d8c:	ja     0x411d7d
  411d8e:	aad    0x0
  411d90:	in     al,0x9a
  411d92:	adc    eax,0x1d2e3371
  411d97:	aam    0xc4
  411d99:	xor    al,0xb0
  411d9b:	mov    ds:0x1c4a0c5,al
  411da0:	and    bl,dl
  411da2:	ret    0xad91
  411da5:	xchg   DWORD PTR [edi+eax*4+0x6b],ebp
  411da9:	out    0xb1,al
  411dab:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dad:	xchg   esi,eax
  411dae:	push   esi
  411daf:	sub    al,al
  411db1:	pop    ebx
  411db2:	add    eax,DWORD PTR [edi+0xb6cc1ab]
  411db8:	scas   al,BYTE PTR es:[edi]
  411db9:	loop   0x411da7
  411dbb:	or     DWORD PTR [edx-0x35],0x3ab5d264
  411dc2:	xlat   BYTE PTR ds:[ebx]
  411dc3:	push   edi
  411dc4:	or     eax,0xac070c09
  411dc9:	sub    al,0xb
  411dcb:	test   al,0x4f
  411dcd:	data16 (bad) 
  411dcf:	xor    BYTE PTR ds:0x2868556d,bl
  411dd5:	fwait
  411dd6:	sbb    dh,dh
  411dd8:	pop    esi
  411dd9:	and    cl,BYTE PTR [ecx+ebp*8]
  411ddc:	sbb    eax,ecx
  411dde:	pop    ebp
  411ddf:	rcl    dl,cl
  411de1:	stc    
  411de2:	xchg   ebx,eax
  411de3:	icebp  
  411de4:	push   edx
  411de5:	or     al,0xdd
  411de7:	dec    ecx
  411de8:	fiadd  WORD PTR [eax]
  411dea:	in     eax,0x8f
  411dec:	mov    bx,0xdd79
  411df0:	fistp  DWORD PTR [edi]
  411df2:	jnp    0x411ddf
  411df4:	and    al,0x4b
  411df6:	imul   BYTE PTR [edx-0x7ae5687]
  411dfc:	pop    edx
  411dfd:	sbb    al,0x3d
  411dff:	and    edi,DWORD PTR [esp+eax*1+0x29]
  411e03:	in     al,dx
  411e04:	adc    ecx,DWORD PTR [eax+ebp*4-0x1d486b2b]
  411e0b:	retf   
  411e0c:	test   eax,0x4515038
  411e11:	cld    
  411e12:	in     al,0xd
  411e14:	out    dx,eax
  411e15:	jecxz  0x411db9
  411e17:	bound  esi,QWORD PTR [eax]
  411e19:	scas   eax,DWORD PTR es:[edi]
  411e1a:	mov    ch,0xf4
  411e1c:	fcom   QWORD PTR [ebp-0x2e]
  411e1f:	jp     0x411e0f
  411e21:	std    
  411e22:	rol    DWORD PTR [esi+edx*4+0x75],1
  411e26:	mov    ds:0xc879f55e,eax
  411e2b:	xor    al,0xc5
  411e2d:	stc    
  411e2e:	mov    DWORD PTR [ebp-0x28],ecx
  411e31:	jg     0x411de1
  411e33:	bound  ebp,QWORD PTR [ebx]
  411e35:	pusha  
  411e36:	rol    BYTE PTR [eax],1
  411e38:	dec    eax
  411e39:	mov    bl,0x92
  411e3b:	repnz jmp 0xaccc:0xc2f2905d
  411e43:	cmp    DWORD PTR [ecx],esi
  411e45:	clc    
  411e46:	dec    edx
  411e47:	mov    cl,0x70
  411e49:	jp     0x411ea6
  411e4b:	stos   BYTE PTR es:[edi],al
  411e4c:	xchg   esi,eax
  411e4d:	inc    esi
  411e4e:	push   edi
  411e4f:	xchg   ecx,eax
  411e50:	ss clc 
  411e52:	rol    DWORD PTR [ebx-0x64638bd1],1
  411e58:	(bad)  
  411e59:	rcl    BYTE PTR [edx-0x23],0x34
  411e5d:	sbb    cl,BYTE PTR [ecx]
  411e5f:	in     al,dx
  411e60:	test   BYTE PTR [ebp-0x66b1a62d],bh
  411e66:	(bad)  
  411e67:	mov    WORD PTR [eax+ebx*1],ss
  411e6a:	fstp   TBYTE PTR [ebx-0x485c0acc]
  411e70:	outs   dx,DWORD PTR ds:[esi]
  411e71:	leave  
  411e72:	repnz cmc 
  411e74:	retf   
  411e75:	pusha  
  411e76:	ins    DWORD PTR es:[edi],dx
  411e77:	scas   al,BYTE PTR es:[edi]
  411e78:	pushf  
  411e79:	xchg   edx,eax
  411e7a:	dec    ebp
  411e7b:	neg    DWORD PTR cs:[edx+0x44]
  411e7f:	mov    esi,0x2edfc656
  411e84:	push   ebx
  411e85:	mov    bh,0xe1
  411e87:	popa   
  411e88:	sbb    edx,ebx
  411e8a:	clc    
  411e8b:	aad    0x23
  411e8d:	cmp    esp,DWORD PTR [edx]
  411e8f:	fistp  QWORD PTR [esi]
  411e91:	ja     0x411ef8
  411e93:	cmp    ch,BYTE PTR [edi-0x62]
  411e96:	pop    eax
  411e97:	das    
  411e98:	bound  esi,QWORD PTR [ebp-0x1c6d1c91]
  411e9e:	(bad)  
  411e9f:	fld    TBYTE PTR [ebp-0x5f]
  411ea2:	in     al,0xd9
  411ea4:	dec    ecx
  411ea5:	cmp    BYTE PTR [esi],bl
  411ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ea8:	jne    0x411ea6
  411eaa:	lea    eax,[ebx]
  411eac:	cmc    
  411ead:	(bad)
  411eb0:	je     0x411e94
  411eb2:	inc    ecx
  411eb3:	sub    DWORD PTR [ebp+0x75],edx
  411eb6:	lds    ebp,FWORD PTR [edx-0x7e3144d]
  411ebc:	repz cwde 
  411ebe:	in     eax,0xbe
  411ec0:	adc    DWORD PTR [edx-0x69],0xbd16a5d
  411ec7:	loope  0x411f2e
  411ec9:	ret    
  411eca:	push   es
  411ecb:	or     ecx,eax
  411ecd:	aas    
  411ece:	xor    al,0x82
  411ed0:	inc    esp
  411ed1:	popa   
  411ed2:	push   esp
  411ed3:	pop    esi
  411ed4:	sbb    ch,cl
  411ed6:	ss adc eax,0xeaf5c481
  411edc:	(bad)  
  411edd:	adc    eax,DWORD PTR ds:0x78458d91
  411ee3:	push   ecx
  411ee4:	push   ds
  411ee5:	outs   dx,BYTE PTR ds:[esi]
  411ee6:	les    ecx,FWORD PTR [eax-0x42384d60]
  411eec:	fidivr DWORD PTR [edi-0x1b]
  411eef:	rcr    BYTE PTR [eax-0x44],0x58
  411ef3:	adc    BYTE PTR [ecx+0x3b],dl
  411ef6:	mov    dl,0x61
  411ef8:	pop    esp
  411ef9:	cs pop eax
  411efb:	pop    edi
  411efc:	int3   
  411efd:	push   cs
  411efe:	cwde   
  411eff:	fld    DWORD PTR [ecx]
  411f01:	jb     0x411f49
  411f03:	cmp    al,0x64
  411f05:	jo     0x411f86
  411f07:	stos   BYTE PTR es:[edi],al
  411f08:	mov    ecx,0xd3b5103d
  411f0d:	in     eax,0x7f
  411f0f:	sbb    eax,0xb2f8ee0
  411f14:	in     eax,0xe9
  411f16:	sub    dh,dl
  411f18:	or     al,0x9b
  411f1a:	jae    0x411f15
  411f1c:	(bad)  ds:0x6940e29b
  411f22:	adc    cl,cl
  411f24:	sar    BYTE PTR [eax-0x4],1
  411f27:	push   edi
  411f29:	sbb    eax,0x21fb06d4
  411f2e:	push   es
  411f2f:	pop    esp
  411f30:	and    dh,bl
  411f32:	inc    ebp
  411f33:	bound  eax,QWORD PTR [edi-0x50]
  411f36:	ins    BYTE PTR es:[edi],dx
  411f37:	sar    BYTE PTR [edi+0x58],1
  411f3a:	sbb    al,0x6d
  411f3c:	lods   al,BYTE PTR ds:[esi]
  411f3d:	and    eax,edx
  411f3f:	inc    edx
  411f40:	push   edi
  411f41:	xor    dh,dl
  411f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f44:	xchg   BYTE PTR [eax],cl
  411f46:	xchg   edi,eax
  411f47:	mov    WORD PTR [ebx],gs
  411f49:	mov    ebp,0x983d4a32
  411f4e:	imul   ebx,DWORD PTR [eax],0x28
  411f51:	jo     0x411ef0
  411f53:	lock or ebp,esp
  411f56:	push   ebp
  411f57:	imul   eax,DWORD PTR [edi+0x22],0x159854bf
  411f5e:	jecxz  0x411f64
  411f60:	adc    eax,0x33a9e259
  411f65:	xchg   ebp,eax
  411f66:	jmp    0x411f41
  411f68:	out    dx,eax
  411f69:	stc    
  411f6a:	pop    es
  411f6b:	out    0xc2,eax
  411f6d:	std    
  411f6e:	mov    dl,BYTE PTR [eax+ebx*8+0x200d8ef4]
  411f75:	xchg   ebx,eax
  411f76:	push   esi
  411f77:	push   ecx
  411f78:	js     0x411fb2
  411f7a:	jl     0x411fe1
  411f7c:	push   esp
  411f7d:	loopne 0x411fca
  411f7f:	ins    DWORD PTR es:[edi],dx
  411f80:	je     0x411f1f
  411f82:	lds    edi,FWORD PTR [edi+0x5]
  411f85:	pop    edx
  411f86:	sub    bl,BYTE PTR [ebx-0x3a]
  411f89:	fisubr DWORD PTR [ebp+0x146275e5]
  411f8f:	jne    0x411f65
  411f91:	shl    DWORD PTR [edi+0x50017f7e],1
  411f97:	shr    DWORD PTR [ebp-0x30],cl
  411f9a:	ror    dl,cl
  411f9c:	je     0x411f81
  411f9e:	add    al,0xcc
  411fa0:	mov    edi,0x566cfae4
  411fa5:	mov    cl,0xe2
  411fa7:	cmp    eax,0xbe2a7a04
  411fac:	outs   dx,DWORD PTR ds:[esi]
  411fad:	scas   eax,DWORD PTR es:[edi]
  411fae:	pop    ss
  411faf:	xchg   esp,eax
  411fb0:	daa    
  411fb1:	xchg   esi,eax
  411fb2:	mov    ds:0x9604fce5,al
  411fb7:	xchg   DWORD PTR [edx],ebp
  411fb9:	push   esp
  411fba:	ins    BYTE PTR es:[edi],dx
  411fbb:	pop    es
  411fbc:	dec    ebx
  411fbd:	outs   dx,BYTE PTR ds:[esi]
  411fbe:	pop    ebp
  411fbf:	gs add al,0x38
  411fc2:	push   cs
  411fc3:	(bad)  
  411fc5:	mov    ebx,0xf39a1520
  411fca:	mov    cl,0xe3
  411fcc:	call   0x8bd6d444
  411fd1:	test   eax,0x6ad26905
  411fd6:	dec    eax
  411fd7:	(bad)  
  411fd9:	pop    ss
  411fda:	mov    bl,0x8c
  411fdc:	inc    edi
  411fdd:	fnsave [ebp-0x6d]
  411fe0:	out    0x79,al
  411fe2:	test   eax,0x10c9d183
  411fe7:	cmp    DWORD PTR cs:[eax+0x116b687a],edx
  411fee:	test   DWORD PTR [eax+0x1b3db21e],eax
  411ff4:	sbb    DWORD PTR ds:0x98e82597,ecx
  411ffa:	pop    es
  411ffb:	sbb    al,0xd0
  411ffd:	js     0x412040
  411fff:	fcmovb st,st(1)
  412001:	xchg   DWORD PTR [edi],ebp
  412003:	not    BYTE PTR [edx-0xe]
  412006:	(bad)  
  412008:	xchg   ebp,eax
  412009:	dec    esi
  41200a:	popa   
  41200b:	jbe    0x411ff7
  41200d:	mov    ds:0x8d599f7c,al
  412012:	jno    0x412082
  412014:	aam    0xd0
  412016:	int3   
  412017:	jle    0x411fd5
  412019:	std    
  41201a:	ss call 0x5e51:0x394150ce
  412022:	cmc    
  412023:	fwait
  412024:	jns    0x41206e
  412026:	test   eax,0xc6cf5e2b
  41202b:	mov    bl,0x8e
  41202d:	or     al,0x5b
  41202f:	mov    edx,DWORD PTR [edi+edx*4]
  412032:	pop    edx
  412033:	mov    ds:0xb0a23d0,eax
  412038:	sub    al,0x71
  41203a:	mov    edx,0x8fcd6330
  41203f:	cli    
  412040:	shl    BYTE PTR [ebx],0x5f
  412043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412044:	mov    al,0xc4
  412046:	popa   
  412047:	cmp    esp,DWORD PTR [ebx-0x39]
  41204a:	mov    esp,0x17d65320
  41204f:	mov    eax,0xb7ed1a91
  412054:	xor    al,0x91
  412056:	adc    al,0xe4
  412058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412059:	xchg   ecx,eax
  41205a:	xchg   ebx,eax
  41205b:	bound  ebp,QWORD PTR [edx]
  41205d:	push   ebx
  41205e:	sbb    eax,0xe7207205
  412063:	dec    esp
  412064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412065:	cmc    
  412066:	push   ecx
  412067:	sbb    ah,dl
  412069:	pop    eax
  41206a:	and    al,0x43
  41206c:	push   ebx
  41206d:	jge    0x41209c
  41206f:	imul   ebx,DWORD PTR [eax+0xb],0x65
  412073:	mov    bl,0x45
  412075:	push   ebp
  412076:	mov    ebp,0x6c45f3de
  41207b:	dec    edx
  41207c:	(bad)
  412080:	lods   eax,DWORD PTR ds:[esi]
  412081:	jp     0x4120e9
  412083:	arpl   cx,cx
  412085:	mov    dh,0x45
  412087:	pop    ecx
  412088:	jmp    0x5104:0x19662d53
  41208f:	cmp    ebx,ebp
  412091:	daa    
  412092:	inc    ebp
  412093:	sbb    al,0xf
  412095:	add    BYTE PTR [esp+esi*4-0x6a0fb482],ah
  41209c:	cmp    ch,BYTE PTR [edi+0x245f48e9]
  4120a2:	ja     0x4120ca
  4120a4:	loop   0x412082
  4120a6:	xchg   esi,eax
  4120a7:	inc    esp
  4120a8:	push   0xffffff9d
  4120aa:	icebp  
  4120ab:	arpl   WORD PTR [eax],si
  4120ad:	cmp    bh,ch
  4120af:	aaa    
  4120b0:	dec    esp
  4120b1:	mov    gs,ebp
  4120b3:	jb     0x4120d3
  4120b5:	mov    ds:0x964baee9,al
  4120ba:	addr16 popa 
  4120bc:	bound  esp,QWORD PTR [ecx-0x4c90df80]
  4120c2:	sub    al,0x83
  4120c4:	ins    DWORD PTR es:[edi],dx
  4120c5:	mov    WORD PTR [ebx+0x5b],cs
  4120c8:	pusha  
  4120c9:	stos   BYTE PTR es:[edi],al
  4120ca:	test   eax,0x1ef302b2
  4120cf:	ja     0x41205e
  4120d1:	imul   edi,DWORD PTR [esi-0x6],0xffffffe2
  4120d5:	mov    al,ds:0xf38f918e
  4120da:	cmc    
  4120db:	mov    ebp,0x6097c45e
  4120e0:	pop    edi
  4120e1:	fisub  WORD PTR [ecx+0x1e]
  4120e4:	sar    ch,1
  4120e6:	cdq    
  4120e7:	(bad)  
  4120e8:	imul   eax,DWORD PTR [eax],0xb
  4120eb:	inc    ebp
  4120ec:	sub    al,0x27
  4120ee:	mov    ch,0xad
  4120f0:	cli    
  4120f1:	cmp    edi,DWORD PTR [eax+0x44cbafdc]
  4120f7:	push   ecx
  4120f8:	jmp    0x3e4a:0x16ee4232
  4120ff:	dec    ebp
  412100:	sbb    al,0xd3
  412102:	dec    esp
  412103:	sbb    DWORD PTR [ebx-0x6a],edx
  412106:	stc    
  412107:	in     eax,0x21
  412109:	leave  
  41210a:	leave  
  41210b:	in     al,dx
  41210c:	or     ebx,ebx
  41210e:	pop    ebx
  41210f:	into   
  412110:	ss scas eax,DWORD PTR es:[edi]
  412112:	mov    esp,0xbdf987f3
  412117:	call   0x900bd74d
  41211c:	loopne 0x41211b
  41211e:	sub    ecx,DWORD PTR [ecx-0x56a0bdb8]
  412124:	out    0x10,eax
  412126:	stos   DWORD PTR es:[edi],eax
  412127:	sar    BYTE PTR [esi],cl
  412129:	dec    ecx
  41212a:	lds    edi,FWORD PTR [edi]
  41212c:	ins    DWORD PTR es:[edi],dx
  41212d:	or     cl,bh
  41212f:	out    dx,al
  412130:	pop    ds
  412131:	xchg   esi,eax
  412132:	pusha  
  412133:	jnp    0x412165
  412135:	adc    ecx,eax
  412137:	pop    esi
  412138:	jmp    0x2123:0xc77fce8b
  41213f:	dec    ebx
  412140:	push   ds
  412141:	dec    edi
  412142:	dec    eax
  412143:	in     al,dx
  412144:	lock add dh,BYTE PTR [edx]
  412147:	repz ja 0x41211f
  41214a:	loopne 0x4120d4
  41214c:	sub    eax,0x8f86c042
  412151:	or     DWORD PTR [eax+0x21],ebx
  412154:	bound  esi,QWORD PTR [ecx+0x66]
  412157:	add    BYTE PTR [ebx],bh
  412159:	scas   eax,DWORD PTR es:[edi]
  41215a:	mov    edi,0xadb70e65
  41215f:	sbb    DWORD PTR [ecx+0x58],eax
  412162:	xor    al,0x95
  412164:	in     eax,0xbd
  412166:	adc    DWORD PTR [esi-0x47],eax
  412169:	retf   0x126a
  41216c:	adc    DWORD PTR [esi+0x192b69c8],ecx
  412172:	(bad)  
  412173:	xchg   esp,eax
  412174:	popa   
  412175:	hlt    
  412176:	lods   al,BYTE PTR ds:[esi]
  412177:	scas   eax,DWORD PTR es:[edi]
  412178:	mov    edi,DWORD PTR [eax-0x47b329]
  41217e:	jmp    0xf3be:0xb1981c19
  412185:	or     BYTE PTR [eax+0x3],bl
  412188:	xchg   ecx,eax
  412189:	cwde   
  41218a:	xchg   edi,eax
  41218b:	ins    DWORD PTR es:[edi],dx
  41218c:	adc    al,0xe0
  41218e:	rcl    DWORD PTR [ecx+edi*4],1
  412191:	pop    edx
  412192:	jg     0x4121cd
  412194:	outs   dx,BYTE PTR ds:[esi]
  412195:	adc    DWORD PTR [ebp-0x55640671],ebp
  41219b:	pop    ebx
  41219c:	sub    dh,bh
  41219e:	mov    esp,0xbe5f6c28
  4121a3:	bound  esp,QWORD PTR [edx+0x11]
  4121a6:	xchg   BYTE PTR gs:[ebp+0x2e],dl
  4121aa:	dec    edi
  4121ab:	inc    edi
  4121ac:	fmul   st(6),st
  4121ae:	jne    0x4121a3
  4121b0:	sbb    bh,dh
  4121b2:	jbe    0x412165
  4121b4:	in     eax,0xc6
  4121b6:	addr16 (bad) 
  4121b8:	loop   0x412232
  4121ba:	into   
  4121bb:	and    DWORD PTR [ebx-0x3105c426],eax
  4121c1:	sbb    DWORD PTR [esi],esp
  4121c3:	dec    edx
  4121c4:	int3   
  4121c5:	in     eax,dx
  4121c6:	pusha  
  4121c7:	gs gs mov edx,0x42ee768b
  4121ce:	sbb    al,0x9c
  4121d0:	retf   
  4121d1:	rcl    BYTE PTR [ecx+0x42],cl
  4121d4:	sbb    eax,0xd14662f8
  4121d9:	fisub  DWORD PTR ds:0x849f2c24
  4121df:	xchg   BYTE PTR [esi+0x74],al
  4121e2:	test   al,0x99
  4121e4:	dec    ebx
  4121e5:	div    BYTE PTR fs:0x291e041b
  4121ec:	dec    ecx
  4121ed:	jno    0x4121f8
  4121ef:	int    0xdb
  4121f1:	test   DWORD PTR ds:0xc8b17735,eax
  4121f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f8:	pushf  
  4121f9:	jl     0x41224a
  4121fb:	daa    
  4121fc:	push   edi
  4121fd:	fnstsw WORD PTR [eax+0x3b]
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	sub    al,bh
  412203:	mov    BYTE PTR [eax+esi*8+0x192520e4],dl
  41220a:	dec    ebp
  41220b:	cmc    
  41220c:	sbb    al,0xb9
  41220e:	xor    eax,0x1ce0c54a
  412213:	mov    edi,0x30c9d66f
  412218:	sbb    eax,0x682bba5f
  41221d:	bound  ebp,QWORD PTR [ebp+0x65]
  412220:	inc    edx
  412221:	(bad)  
  412222:	mov    bh,0x14
  412224:	and    ebp,DWORD PTR [ebx]
  412226:	inc    ecx
  412227:	(bad)  
  412228:	(bad)  
  412229:	rol    BYTE PTR [ebp-0x39],0x6a
  41222d:	ds ins BYTE PTR es:[edi],dx
  41222f:	xchg   DWORD PTR ds:0x2c33efa,edi
  412235:	mov    bl,0xf3
  412237:	inc    ebp
  412238:	hlt    
  412239:	cmp    dl,bh
  41223b:	mov    es,WORD PTR [esi+0x843b8f3]
  412241:	push   0x27
  412243:	lods   eax,DWORD PTR ds:[esi]
  412244:	mov    edi,0x56bcc957
  412249:	xchg   ecx,eax
  41224a:	call   0x14e01784
  41224f:	in     al,dx
  412250:	fidivr DWORD PTR [ecx-0x753ce356]
  412256:	shl    DWORD PTR [ecx],cl
  412258:	mov    ds:0x3d3afcf,al
  41225d:	jne    0x41224a
  41225f:	inc    eax
  412260:	addr16 ja 0x41220c
  412263:	xchg   DWORD PTR [edi-0x27],ecx
  412266:	xor    DWORD PTR [edi],edi
  412268:	test   al,0xcf
  41226a:	dec    esp
  41226b:	inc    ebp
  41226c:	pop    edi
  41226d:	cmp    edi,DWORD PTR [eax+0x4ac7eb15]
  412273:	add    al,0xa5
  412275:	sub    al,0x39
  412277:	xor    esp,eax
  412279:	mov    al,0xcb
  41227b:	push   0xcc302637
  412280:	arpl   WORD PTR [esi-0x4a088cf7],dx
  412286:	dec    ebp
  412287:	not    BYTE PTR [ecx+0x5e]
  41228a:	push   ecx
  41228b:	mov    ds:0x9a8f7317,eax
  412290:	xchg   esp,eax
  412291:	inc    esi
  412292:	out    0x28,eax
  412294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412295:	add    BYTE PTR [edi],dl
  412297:	xor    cl,BYTE PTR [edi]
  412299:	shr    eax,0xb2
  41229c:	add    BYTE PTR [ecx-0x4f8b6217],0x2e
  4122a3:	pop    esi
  4122a4:	iret   
  4122a5:	ins    BYTE PTR es:[edi],dx
  4122a6:	mov    ecx,0x483a4256
  4122ab:	test   BYTE PTR [ebp-0x61f3e722],cl
  4122b1:	inc    esp
  4122b2:	lods   al,BYTE PTR ds:[esi]
  4122b3:	or     al,0x74
  4122b5:	shl    cl,cl
  4122b7:	bound  ecx,QWORD PTR [bp+di-0x48]
  4122bb:	imul   DWORD PTR [ebp-0x57]
  4122be:	or     al,0xce
  4122c0:	imul   esp,DWORD PTR [ebx-0x4bcf3230],0x548d1425
  4122ca:	es gs jne 0x412274
  4122ce:	add    DWORD PTR [ebx-0x56],0x184373ac
  4122d5:	sub    al,0xf4
  4122d7:	ins    DWORD PTR es:[edi],dx
  4122d8:	enter  0x7cb1,0x2d
  4122dc:	pop    ecx
  4122dd:	mov    eax,0x5194e774
  4122e2:	adc    al,0xef
  4122e4:	inc    eax
  4122e5:	xor    DWORD PTR [edi-0x54a7e140],esp
  4122eb:	xchg   esp,eax
  4122ec:	push   es
  4122ed:	les    ecx,FWORD PTR [edx+0x7210fa83]
  4122f3:	mov    ah,0xd6
  4122f5:	ss je  0x41234f
  4122f8:	daa    
  4122f9:	imul   esp,DWORD PTR [ecx],0x24c8f53
  4122ff:	cdq    
  412300:	outs   dx,BYTE PTR ds:[esi]
  412301:	into   
  412302:	test   esi,esp
  412304:	jo     0x412317
  412306:	dec    edx
  412307:	and    ecx,DWORD PTR [ebx+0x2d99ca45]
  41230d:	imul   esi,DWORD PTR [edi-0x79],0x26
  412311:	ds dec ebp
  412313:	lea    eax,[ebx+0x44]
  412316:	push   ebx
  412317:	and    eax,0x8b3e3471
  41231c:	adc    al,BYTE PTR [edx+ebp*4]
  41231f:	das    
  412320:	add    al,0x27
  412322:	inc    esi
  412323:	sub    BYTE PTR [esp+eiz*8],dh
  412326:	dec    esp
  412327:	xor    eax,0x9ba27137
  41232c:	fcomp  DWORD PTR [eax]
  41232e:	jo     0x41231f
  412330:	(bad)  
  412331:	xor    al,0xd7
  412333:	and    al,0x2b
  412335:	(bad)  
  412336:	pop    ebp
  412337:	mov    BYTE PTR [ebx],ah
  412339:	repz mov cl,0x5b
  41233c:	mov    BYTE PTR [ebp+0x1f5a870f],0x56
  412343:	mov    dh,0xbd
  412345:	aam    0xa9
  412347:	cdq    
  412348:	fwait
  412349:	sbb    esp,DWORD PTR ds:[ebp+0x3336c7c6]
  412350:	adc    ecx,DWORD PTR [edx+ebp*8+0x4c939b4]
  412357:	icebp  
  412358:	femms  
  41235a:	mov    edi,0x30829da8
  41235f:	pop    ebx
  412360:	adc    esp,DWORD PTR [ecx-0x27de25f4]
  412366:	jmp    0x5dfd:0x65f5f9f4
  41236d:	ds inc eax
  41236f:	icebp  
  412370:	(bad)  
  412371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412372:	test   eax,0xc01464e7
  412377:	imul   esi,DWORD PTR [ecx+edx*8],0x9b43ed9e
  41237e:	cmp    eax,0xd7528e4a
  412383:	sub    al,0x20
  412385:	inc    ecx
  412386:	mov    esi,0x4958d997
  41238b:	fdiv   QWORD PTR [edx-0x3f]
  41238e:	mov    ebx,DWORD PTR [edx+0x32]
  412391:	or     DWORD PTR [eax],ecx
  412393:	xchg   ebp,eax
  412394:	lahf   
  412395:	push   ebp
  412396:	std    
  412397:	adc    ch,cl
  412399:	push   cs
  41239a:	repnz rcl BYTE PTR [eax-0x689fbeed],cl
  4123a1:	sub    ch,BYTE PTR [edx+0x6e633b19]
  4123a7:	in     ax,dx
  4123a9:	popa   
  4123aa:	lock add eax,0xfc41ede1
  4123b0:	mov    ch,0xa6
  4123b2:	in     eax,dx
  4123b3:	push   0xffffffc1
  4123b5:	sub    ah,BYTE PTR ds:0x5f219b31
  4123bb:	ins    DWORD PTR es:[edi],dx
  4123bc:	sub    BYTE PTR [edx+0x43],bl
  4123bf:	lods   eax,DWORD PTR ds:[esi]
  4123c0:	call   0x38eb:0x4dbd8a99
  4123c7:	add    ebx,ecx
  4123c9:	xor    DWORD PTR [eax],ebx
  4123cb:	cld    
  4123cc:	mov    ecx,0x6e20670a
  4123d1:	xor    al,0x58
  4123d3:	imul   esi,edi,0x51
  4123d6:	ss (bad) 
  4123d8:	(bad)  [edx+0x420a5ba2]
  4123de:	xchg   esp,eax
  4123df:	test   al,0x57
  4123e1:	pop    edi
  4123e2:	lea    edx,[esi]
  4123e4:	pop    esp
  4123e5:	es cs or ch,ah
  4123e9:	sub    eax,DWORD PTR cs:[eax+0x71a25d87]
  4123f0:	loop   0x412417
  4123f2:	push   cs
  4123f3:	stc    
  4123f4:	out    dx,al
  4123f5:	inc    ebp
  4123f6:	inc    esi
  4123f7:	dec    esi
  4123f8:	or     cl,dh
  4123fa:	mov    ds:0x5027838,al
  4123ff:	pushf  
  412400:	arpl   WORD PTR ds:0x3034c17e,ax
  412406:	ja     0x412417
  412408:	cli    
  412409:	aaa    
  41240a:	test   ch,bh
  41240c:	xchg   esp,eax
  41240d:	loopne 0x412472
  41240f:	xor    al,0xe0
  412411:	and    eax,0xacf58f5e
  412416:	xchg   esi,eax
  412417:	mov    eax,ds:0x6610b018
  41241c:	dec    edx
  41241d:	fwait
  41241e:	lods   al,BYTE PTR ds:[esi]
  41241f:	push   cs
  412420:	inc    eax
  412421:	cdq    
  412422:	mov    ecx,0xe022e119
  412427:	mov    edx,0x64394972
  41242c:	pop    ebx
  41242d:	jle    0x4123fc
  41242f:	push   esp
  412430:	in     eax,0xce
  412432:	mov    al,0x4
  412434:	mov    cl,0x60
  412436:	lea    ebx,[esi+0x7ae8ca09]
  41243c:	(bad)  
  41243d:	icebp  
  41243e:	cmc    
  41243f:	xor    al,BYTE PTR [edx-0x7c]
  412442:	dec    eax
  412443:	cmp    eax,DWORD PTR [edx]
  412445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412446:	add    al,0x83
  412448:	mov    ecx,0xed4d435b
  41244d:	leave  
  41244e:	loope  0x412433
  412450:	fnstsw WORD PTR [esi+edx*4]
  412453:	pop    ss
  412454:	pop    edi
  412455:	les    esp,FWORD PTR [edx]
  412457:	sub    BYTE PTR ds:0xb6a12a66,bh
  41245d:	xor    eax,0x84d2eb16
  412462:	jmp    0x1f0700d0
  412467:	ins    BYTE PTR es:[edi],dx
  412468:	std    
  412469:	dec    ecx
  41246a:	jl     0x412465
  41246c:	dec    esi
  41246d:	aad    0xab
  41246f:	leave  
  412470:	inc    ebx
  412471:	inc    BYTE PTR [edi-0x5c]
  412474:	push   0x64
  412476:	or     ecx,DWORD PTR [edi]
  412478:	loopne 0x4124ae
  41247a:	mov    ebp,0xc82ef150
  41247f:	push   esp
  412480:	ds (bad) 
  412482:	(bad)  
  412484:	mov    ds:0xe6f84f0c,eax
  412489:	enter  0xf13,0x3d
  41248d:	inc    edx
  41248e:	cld    
  41248f:	xchg   edx,eax
  412490:	xor    DWORD PTR es:[ebp+0x56511df1],edx
  412497:	(bad)  
  412498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412499:	(bad)  
  41249b:	pop    ecx
  41249c:	xor    esp,DWORD PTR ds:0xb5f02ca1
  4124a2:	fcmovnbe st,st(6)
  4124a4:	add    ah,ah
  4124a6:	int3   
  4124a7:	mov    edx,0xcabe6b07
  4124ac:	jge    0x412499
  4124ae:	inc    edi
  4124af:	inc    ebp
  4124b0:	cdq    
  4124b1:	fsub   QWORD PTR [ebx*2-0x6c9655ca]
  4124b8:	dec    ebx
  4124b9:	imul   esp,DWORD PTR [esi+0x74],0xffffffdb
  4124bd:	rcl    DWORD PTR [edi-0x1d],0xd1
  4124c1:	mov    DWORD PTR [eax],ecx
  4124c3:	xchg   ebp,eax
  4124c4:	into   
  4124c5:	inc    edi
  4124c6:	test   BYTE PTR [ebp-0x24698402],dh
  4124cc:	dec    edi
  4124cd:	imul   eax,DWORD PTR [ecx+0x5f],0xffffffb6
  4124d1:	push   es
  4124d2:	mov    eax,0x578326b
  4124d7:	mov    ds:0x19102472,eax
  4124dc:	pop    ebx
  4124dd:	xor    dh,BYTE PTR [ebx]
  4124df:	jg     0x412507
  4124e1:	daa    
  4124e2:	dec    esi
  4124e3:	rcr    DWORD PTR [edx+ebx*4-0xc44e6fb],0xac
  4124eb:	xor    al,0xc5
  4124ed:	jns    0x41252a
  4124ef:	into   
  4124f0:	adc    BYTE PTR [ebp+esi*2+0x44],al
  4124f4:	xchg   edi,eax
  4124f5:	push   es
  4124f6:	xor    eax,0x296f66e0
  4124fb:	inc    esi
  4124fc:	idiv   dl
  4124fe:	rol    DWORD PTR [ebx-0x43228647],1
  412504:	jmp    0x99a65e95
  412509:	fmul   st(1),st
  41250b:	outs   dx,BYTE PTR ds:[esi]
  41250c:	ss jecxz 0x4124ae
  41250f:	mov    es,WORD PTR [esi+eiz*8]
  412512:	addr16 stc 
  412514:	es rcl al,0x6a
  412518:	pop    ss
  412519:	mov    DWORD PTR ss:[ebx+0x34],ebp
  41251d:	clc    
  41251e:	addr16 adc eax,edi
  412521:	popf   
  412522:	ss inc ecx
  412524:	fdivr  DWORD PTR [esi+0x2]
  412527:	mov    edi,0xb69a9c32
  41252c:	jmp    0x412592
  41252e:	(bad)  
  41252f:	je     0x41255d
  412531:	or     DWORD PTR [esi-0x4a],ebp
  412534:	and    ch,BYTE PTR [edx+0x7f9e8164]
  41253a:	imul   edi,DWORD PTR [edx],0x5fba50c9
  412540:	add    BYTE PTR [edx],0xe2
  412543:	inc    esi
  412544:	mov    eax,0xc8001afc
  412549:	in     al,dx
  41254a:	cld    
  41254b:	js     0x412522
  41254d:	cmp    eax,0x9c429351
  412552:	leave  
  412553:	mov    DWORD PTR [ebx-0x370d74f4],eax
  412559:	pop    esp
  41255a:	mov    ds:0x7e4ea945,al
  41255f:	loope  0x4125da
  412561:	jnp    0x412544
  412563:	and    eax,0x903ada88
  412568:	jno    0x4124ef
  41256a:	mov    dh,0x9a
  41256c:	xlat   BYTE PTR ds:[ebx]
  41256d:	call   0x82e1:0x2d5090a8
  412574:	fimul  DWORD PTR [edi]
  412576:	xchg   ebx,eax
  412577:	mov    eax,0xf7101788
  41257c:	das    
  41257d:	cmp    al,BYTE PTR [edx-0x62]
  412580:	es pop ecx
  412582:	hlt    
  412583:	inc    ebx
  412584:	sahf   
  412585:	add    eax,DWORD PTR [ebp-0x7d]
  412588:	push   cs
  412589:	loope  0x41259c
  41258b:	push   eax
  41258c:	sbb    BYTE PTR [ebx],cl
  41258e:	xor    DWORD PTR [edx-0x59],esi
  412591:	push   0xffffffe7
  412593:	fisubr WORD PTR [ebx-0x61625407]
  412599:	mov    bh,0x45
  41259b:	(bad)  
  41259d:	pop    ds
  41259e:	hlt    
  41259f:	jbe    0x4125d7
  4125a1:	sub    al,0x1c
  4125a3:	sbb    bh,dl
  4125a5:	cmp    ebx,DWORD PTR [edi+0x36]
  4125a8:	repz sbb bh,ah
  4125ab:	and    al,0x92
  4125ad:	sbb    BYTE PTR [eax+0x4f4e794b],0x6
  4125b4:	test   al,0x63
  4125b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b7:	in     eax,0x32
  4125b9:	adc    ecx,eax
  4125bb:	dec    ebx
  4125bc:	xchg   ah,dh
  4125be:	dec    BYTE PTR [edx-0x5f]
  4125c1:	test   BYTE PTR [edx-0x7e4e2983],0xe8
  4125c8:	mov    ?,WORD PTR [esi-0x30]
  4125cb:	out    0x47,eax
  4125cd:	pop    ebx
  4125ce:	sub    ebp,DWORD PTR [ebp-0x7d4a43af]
  4125d4:	sbb    edx,ebx
  4125d6:	bound  esp,QWORD PTR ds:0x34eb047c
  4125dc:	pop    es
  4125dd:	test   al,0xb5
  4125df:	xchg   esp,eax
  4125e0:	scas   al,BYTE PTR es:[edi]
  4125e1:	sbb    esp,DWORD PTR [ebp-0xb]
  4125e4:	cmp    BYTE PTR [ebx+0x5a9cb455],dh
  4125ea:	dec    esp
  4125eb:	fistp  WORD PTR [ecx-0x21b03d2d]
  4125f1:	dec    edx
  4125f2:	mov    edx,0x46590bb3
  4125f7:	bound  ebp,QWORD PTR [ecx+edx*1+0x51]
  4125fb:	fadd   QWORD PTR [eax+0x7d6f5d98]
  412601:	inc    esp
  412602:	and    eax,0xd0ec9328
  412607:	dec    ebx
  412608:	stc    
  412609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41260a:	mov    ebx,0xa7ca1da8
  41260f:	jmp    0x9997fddf
  412614:	sti    
  412615:	es pop ecx
  412617:	push   edi
  412618:	mov    al,ds:0xc6d2d66e
  41261d:	cmp    ah,BYTE PTR [edi+edx*1+0x39bb5cfc]
  412624:	push   ss
  412625:	jmp    0xfccbc7c4
  41262a:	bound  esi,QWORD PTR [ecx+0x7695eebf]
  412630:	sub    eax,0x38a4df8a
  412635:	cli    
  412636:	shr    DWORD PTR [ecx],0x52
  412639:	dec    edx
  41263a:	out    dx,al
  41263b:	stos   BYTE PTR es:[edi],al
  41263c:	mov    eax,ds:0xa757285f
  412642:	fnstsw WORD PTR [eax]
  412644:	fstp   st(4)
  412646:	cmp    ecx,DWORD PTR [edx-0x39]
  412649:	ss dec ecx
  41264b:	pop    eax
  41264c:	inc    ebp
  41264d:	pop    ss
  41264e:	nop
  41264f:	mov    ch,0x4f
  412651:	sti    
  412652:	push   ds
  412653:	cmp    al,0xec
  412655:	fild   DWORD PTR [edx-0x9932457]
  41265b:	sti    
  41265c:	mov    ah,0x52
  41265e:	jns    0x4125e2
  412660:	inc    ebx
  412661:	std    
  412662:	lock xchg edx,eax
  412664:	add    BYTE PTR [ebx-0x77],al
  412667:	fs cli 
  412669:	out    0x5,al
  41266b:	pushf  
  41266c:	inc    edx
  41266d:	xchg   esp,eax
  41266e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41266f:	fsub   QWORD PTR [esi-0x3eb60307]
  412675:	outs   dx,DWORD PTR ds:[esi]
  412676:	inc    edx
  412677:	vmwrite esp,DWORD PTR [esi-0x10]
  41267b:	mov    eax,ds:0x447bdb12
  412680:	sub    ah,BYTE PTR [edi]
  412682:	xor    esi,DWORD PTR [edi]
  412684:	pop    es
  412685:	and    DWORD PTR [esi],0xffffffb1
  412688:	out    dx,al
  412689:	aad    0x9e
  41268b:	dec    eax
  41268c:	add    DWORD PTR [edi],0x4c
  41268f:	fcmovnu st,st(6)
  412691:	fs int 0x85
  412694:	rol    esp,cl
  412696:	push   ecx
  412697:	inc    ebx
  412698:	out    0xfe,al
  41269a:	lea    edi,[ebp+0x59]
  41269d:	inc    ebp
  41269e:	and    BYTE PTR [eax+eax*2-0x7a3c894f],cl
  4126a5:	cmp    esp,DWORD PTR [ebp+0x56c0f0e0]
  4126ab:	pop    eax
  4126ac:	cmp    BYTE PTR [ecx*4+0x35428851],dh
  4126b3:	or     edi,DWORD PTR [ebp+ebx*2+0x4f]
  4126b7:	push   ecx
  4126b8:	add    al,0x2e
  4126ba:	jbe    0x41271f
  4126bc:	mov    ds:0x16b63edf,eax
  4126c1:	aas    
  4126c2:	nop
  4126c3:	add    edi,DWORD PTR [ebx+0x5e67148f]
  4126c9:	aam    0x29
  4126cb:	adc    eax,0xe93cdb7e
  4126d0:	sbb    BYTE PTR [edx],ah
  4126d2:	pop    esi
  4126d3:	push   ebx
  4126d4:	or     DWORD PTR [ebx+0x54],ebp
  4126d7:	aad    0x79
  4126d9:	xchg   ebp,eax
  4126da:	mov    esi,0xb5caaf01
  4126df:	ret    
  4126e0:	adc    bh,BYTE PTR [esi-0xbd59ba0]
  4126e6:	mov    ch,0x13
  4126e8:	js     0x412720
  4126ea:	pop    edx
  4126eb:	xchg   esp,eax
  4126ec:	fdiv   st,st(0)
  4126ee:	test   DWORD PTR [esi],esi
  4126f0:	loopne 0x4126e9
  4126f2:	test   DWORD PTR [eax+0x1e098758],esi
  4126f8:	jle    0x4126c6
  4126fa:	adc    esp,edx
  4126fc:	xor    dh,bh
  4126fe:	add    esp,eax
  412700:	dec    edi
  412701:	or     ah,BYTE PTR [ebp+0x17]
  412704:	dec    ecx
  412705:	(bad)  
  412706:	jae    0x4126f5
  412708:	leave  
  412709:	aaa    
  41270a:	pop    ecx
  41270b:	mov    ebx,0x3a522baf
  412710:	dec    esp
  412711:	or     ch,BYTE PTR [edx]
  412713:	sar    DWORD PTR [ebp-0x66c95146],0xbc
  41271a:	mov    ch,0x3c
  41271c:	dec    ebp
  41271d:	mov    bl,0xe7
  41271f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412720:	sbb    al,0x5d
  412722:	idiv   BYTE PTR [esi-0x54fcbe53]
  412728:	(bad)
  41272c:	pusha  
  41272d:	cmc    
  41272e:	(bad)  
  41272f:	push   esi
  412730:	push   ebx
  412731:	fwait
  412732:	into   
  412733:	sti    
  412734:	(bad)  
  412735:	clc    
  412736:	out    0x35,al
  412738:	sbb    BYTE PTR [ebp-0x5c790682],ch
  41273e:	int    0xf1
  412740:	aaa    
  412741:	jns    0x41278b
  412743:	add    BYTE PTR [ebx+0x23],0x89
  412747:	dec    esi
  412748:	or     eax,0xe0e0bf04
  41274d:	mov    esi,0xc2917f69
  412752:	cmp    al,0xc6
  412754:	mov    cl,0xe0
  412756:	fadd   DWORD PTR [ecx+edi*1]
  412759:	push   ss
  41275a:	xor    al,0x6b
  41275c:	jmp    0x1a:0xc6145a40
  412763:	stc    
  412764:	adc    esi,DWORD PTR [ebp-0x9]
  412767:	sbb    BYTE PTR [edx+edi*8-0x6e],bh
  41276b:	jecxz  0x4126ff
  41276d:	xchg   edi,eax
  41276e:	icebp  
  41276f:	mov    edx,0x59dda1ac
  412774:	data16 (bad) 
  412776:	fmul   st(6),st
  412778:	nop
  412779:	(bad)
  41277c:	xor    DWORD PTR [ecx+0x3c],0xffffffad
  412780:	and    al,0x77
  412782:	and    esi,DWORD PTR [ebp+0x5a]
  412785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412786:	(bad)  
  412787:	shl    DWORD PTR [esi+0x6d],cl
  41278a:	outs   dx,DWORD PTR ds:[esi]
  41278b:	aas    
  41278c:	test   eax,eax
  41278e:	mov    ds:0xd74ca281,eax
  412793:	int    0xf7
  412795:	jo     0x412774
  412797:	cmp    eax,0xa6d1c4a1
  41279c:	and    al,0xe6
  41279e:	pop    ss
  41279f:	out    dx,eax
  4127a0:	ffree  st(5)
  4127a2:	and    esp,ebp
  4127a4:	mov    ds:0x4a9ff16b,eax
  4127a9:	lock dec eax
  4127ab:	repz add ecx,DWORD PTR [ebx-0x75dacb9c]
  4127b2:	test   eax,0x6eea3c28
  4127b7:	push   0x2b
  4127b9:	inc    ah
  4127bb:	test   DWORD PTR [ebp-0x4d],eax
  4127be:	cdq    
  4127bf:	dec    ecx
  4127c0:	jmp    0x4127ad
  4127c2:	xor    al,0x3d
  4127c4:	ds js  0x412764
  4127c7:	test   BYTE PTR [ebp-0x2a1fe1e],0x36
  4127ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127cf:	fucomp st(0)
  4127d1:	loope  0x41283d
  4127d3:	cmp    al,0xca
  4127d5:	push   ds
  4127d6:	or     al,0x36
  4127d8:	daa    
  4127d9:	(bad)  
  4127da:	lock mov es,WORD PTR [ecx+eax*1]
  4127de:	ds jmp 0x4a63dfce
  4127e4:	test   BYTE PTR [eax-0x247e67ef],ch
  4127ea:	sbb    edi,ebx
  4127ec:	mov    bh,bl
  4127ee:	sub    eax,0xc1693e3f
  4127f3:	pusha  
  4127f4:	hlt    
  4127f5:	or     DWORD PTR [edi+0x305f8a60],edx
  4127fb:	sahf   
  4127fc:	add    cl,bh
  4127fe:	mov    al,BYTE PTR [edx-0x4f215372]
  412804:	xchg   BYTE PTR [ebx-0x4b],ch
  412807:	dec    ebp
  412808:	inc    ebp
  412809:	adc    DWORD PTR [edx-0x6948cd32],0xffffffb5
  412810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412811:	ja     0x4127d6
  412813:	adc    al,0xcd
  412815:	add    eax,0xcd9342cc
  41281a:	test   BYTE PTR ds:0xbe5e316d,cl
  412820:	ror    cl,1
  412822:	fimul  DWORD PTR [edi-0x6b1c448b]
  412828:	cmp    ah,ah
  41282a:	pop    ds
  41282b:	cmp    DWORD PTR [ebx+0x0],0x8
  41282f:	mov    edx,0xeed242fc
  412835:	push   esi
  412836:	ret    
  412837:	xchg   ebx,eax
  412838:	jg     0x4127de
  41283a:	out    0xa4,al
  41283c:	scas   al,BYTE PTR es:[edi]
  41283d:	pop    esi
  41283e:	outs   dx,DWORD PTR ds:[esi]
  41283f:	leave  
  412840:	mov    BYTE PTR [ecx-0x55],ch
  412843:	fmul   st,st(3)
  412845:	cmp    DWORD PTR [ecx],edi
  412847:	mov    ah,0xce
  412849:	retf   
  41284a:	outs   dx,BYTE PTR ds:[esi]
  41284b:	stos   DWORD PTR es:[edi],eax
  41284c:	add    al,0xab
  41284e:	idiv   DWORD PTR [eax+0x2b0b0d1]
  412854:	inc    ebx
  412855:	daa    
  412856:	push   es
  412857:	call   0x5c7f:0x76b9f88f
  41285e:	cwde   
  41285f:	mov    eax,DWORD PTR [edx+0x19]
  412862:	cmp    BYTE PTR [esi-0x61dda462],ah
  412868:	bound  edx,QWORD PTR [ebx]
  41286a:	bsf    esi,DWORD PTR [eax-0x5d]
  41286e:	add    ebp,eax
  412870:	nop
  412871:	repz mov esp,0xc55b7bc7
  412877:	imul   esi,DWORD PTR [edx-0x21],0x85724006
  41287e:	push   0x3f
  412880:	call   0x4caf3ecc
  412885:	(bad)  
  412886:	mov    edx,DWORD PTR [ebp+0x22]
  412889:	rcl    BYTE PTR [eax],cl
  41288b:	sub    ebx,eax
  41288d:	and    al,BYTE PTR [ebx]
  41288f:	xor    DWORD PTR [edx-0x47],0x2e04e2c8
  412896:	sbb    DWORD PTR [edx],edx
  412898:	outs   dx,DWORD PTR ds:[esi]
  412899:	add    dh,BYTE PTR ds:0x8b7ad84e
  41289f:	cdq    
  4128a0:	and    eax,0xd8cdde9f
  4128a5:	fild   WORD PTR [ebx]
  4128a7:	push   ebp
  4128a8:	add    ch,dl
  4128aa:	in     al,0x21
  4128ac:	adc    BYTE PTR [edi+ebp*4+0x39],cl
  4128b0:	out    dx,al
  4128b1:	fdivp  st(4),st
  4128b3:	add    esp,DWORD PTR [esi]
  4128b5:	jmp    0x48e242e3
  4128ba:	add    al,0x91
  4128bc:	sub    al,BYTE PTR [ebx]
  4128be:	inc    ebp
  4128bf:	or     al,0xb6
  4128c1:	dec    ebp
  4128c2:	ret    
  4128c3:	jnp    0x41292b
  4128c5:	sbb    DWORD PTR [ebp+0x39],eax
  4128c8:	jo     0x412853
  4128ca:	dec    ebp
  4128cb:	pushf  
  4128cc:	sub    eax,0xe8760a8d
  4128d1:	pop    esp
  4128d2:	push   ecx
  4128d3:	fs sti 
  4128d5:	mov    cl,BYTE PTR [ebx+ebx*2-0x5552fd7a]
  4128dc:	jne    0x412935
  4128de:	jg     0x4128d5
  4128e0:	aad    0x26
  4128e2:	cld    
  4128e3:	ss jns 0x41295a
  4128e6:	call   0x8631aa4
  4128eb:	push   esp
  4128ec:	mov    bp,0x78fc
  4128f0:	pop    es
  4128f1:	test   BYTE PTR [edi+0x117f49ef],bh
  4128f7:	inc    ebp
  4128f8:	es jns 0x4128cf
  4128fb:	stos   BYTE PTR es:[edi],al
  4128fc:	mov    esi,0x3d621f2f
  412901:	mov    ecx,0x88480a91
  412906:	imul   ecx,DWORD PTR [ecx+edi*8+0x10],0x59
  41290b:	and    edx,DWORD PTR [ecx-0x26]
  41290e:	out    0xbe,al
  412910:	out    0x3c,eax
  412912:	pop    ebx
  412913:	stc    
  412914:	das    
  412915:	jecxz  0x412958
  412917:	stc    
  412918:	fsubr  DWORD PTR [eax+esi*2+0x78]
  41291c:	in     al,0xea
  41291e:	cmp    ah,dh
  412920:	fdivr  QWORD PTR [edi]
  412922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412923:	call   0xb7ef:0x35580bd
  41292a:	push   eax
  41292b:	inc    eax
  41292c:	dec    esp
  41292d:	push   es
  41292e:	push   ss
  41292f:	mov    bh,BYTE PTR [esi]
  412931:	sub    dl,BYTE PTR [edx-0x6f2194e0]
  412937:	out    0xc3,eax
  412939:	dec    eax
  41293a:	xchg   edi,eax
  41293b:	push   ecx
  41293c:	lock mov al,0x58
  41293f:	icebp  
  412940:	ja     0x4128c6
  412942:	xchg   ecx,eax
  412943:	pusha  
  412944:	in     eax,dx
  412945:	add    al,0x7e
  412947:	push   esp
  412948:	out    0xd6,eax
  41294a:	ss dec edx
  41294c:	sub    eax,0x3866d4ec
  412951:	enter  0x6b9c,0xae
  412955:	iret   
  412956:	sub    ebp,DWORD PTR [eax]
  412958:	sbb    al,0x8b
  41295a:	adc    al,0x8f
  41295c:	inc    ecx
  41295d:	mov    bl,BYTE PTR [ecx+eiz*4]
  412960:	sti    
  412961:	aaa    
  412962:	les    esi,FWORD PTR [ebx-0x6ed84c86]
  412968:	xchg   esp,eax
  412969:	push   ds
  41296a:	jne    0x4129d2
  41296c:	xor    dh,BYTE PTR ds:0x9bc09162
  412972:	loopne 0x412987
  412974:	inc    edx
  412975:	aam    0xb8
  412977:	jmp    0x7f51:0x40a6dc4f
  41297e:	ret    
  41297f:	imul   esp,DWORD PTR [ecx],0xffffffbb
  412982:	sbb    DWORD PTR [ecx+eiz*4-0xf],ecx
  412986:	in     eax,0x70
  412988:	cld    
  412989:	fbld   TBYTE PTR [eax]
  41298b:	mov    bh,0x3c
  41298d:	jne    0x412982
  41298f:	loope  0x412997
  412991:	mov    dh,0xc3
  412993:	imul   BYTE PTR [edi+0x49]
  412996:	cmc    
  412997:	and    esp,DWORD PTR ds:0x6d9204
  41299d:	pop    edx
  41299e:	mov    WORD PTR ds:0xe6c1b3bf,?
  4129a4:	outs   dx,DWORD PTR ds:[esi]
  4129a5:	xchg   DWORD PTR ds:0xd5990267,edi
  4129ab:	(bad)  
  4129ac:	mov    al,ds:0x5e2b96ed
  4129b1:	push   edx
  4129b2:	pop    edx
  4129b3:	inc    esi
  4129b4:	dec    edi
  4129b5:	pop    edi
  4129b6:	sbb    DWORD PTR [eax-0x1563323c],0xffffffc2
  4129bd:	pop    edi
  4129be:	retf   0xdfb1
  4129c1:	xchg   esp,eax
  4129c2:	cmp    esp,ebp
  4129c4:	push   0x4466a124
  4129c9:	or     BYTE PTR [edx-0x29],bh
  4129cc:	ja     0x412968
  4129ce:	loope  0x412973
  4129d0:	push   es
  4129d1:	sbb    BYTE PTR [ebx+ebx*4],0xf3
  4129d5:	dec    edx
  4129d6:	jno    0x4129be
  4129d8:	or     eax,0x38e0b0f0
  4129dd:	dec    ebp
  4129de:	lahf   
  4129df:	ret    
  4129e0:	xor    BYTE PTR [edx+0x15],dl
  4129e3:	mov    ch,0xd3
  4129e5:	clc    
  4129e6:	xor    BYTE PTR [ecx],cl
  4129e8:	iret   
  4129e9:	sbb    eax,0x94bdddbd
  4129ee:	sbb    bl,BYTE PTR [ebx-0x15]
  4129f1:	xor    ebp,esp
  4129f3:	push   eax
  4129f4:	dec    ebx
  4129f5:	scas   eax,DWORD PTR es:[edi]
  4129f6:	outs   dx,DWORD PTR ds:[esi]
  4129f7:	outs   dx,BYTE PTR ds:[esi]
  4129f8:	xor    BYTE PTR [edi+0x28c7c17e],bh
  4129fe:	and    eax,0x5b979da
  412a03:	int    0x95
  412a05:	pxor   mm2,mm5
  412a08:	xor    eax,0xacb50c9c
  412a0d:	test   esi,ebp
  412a0f:	jp     0x412a27
  412a11:	pop    esp
  412a12:	ds push eax
  412a14:	clc    
  412a15:	in     eax,dx
  412a16:	ror    BYTE PTR [edx+ebx*4],cl
  412a19:	pop    ebx
  412a1a:	mov    edx,0xe3d10309
  412a1f:	adc    dl,BYTE PTR [edi+0x1bcde5f4]
  412a25:	and    eax,0x3837a5b
  412a2a:	lods   eax,DWORD PTR ds:[esi]
  412a2b:	fwait
  412a2c:	fs pop bx
  412a30:	fmul   st(5),st
  412a32:	sbb    dh,BYTE PTR [esi+0x5e]
  412a35:	jecxz  0x412a14
  412a37:	imul   esp,ecx,0x96e2d0c
  412a3d:	test   DWORD PTR [edx-0x5b],edx
  412a40:	adc    BYTE PTR [eax-0x76],ch
  412a43:	ret    
  412a44:	popa   
  412a45:	inc    ebx
  412a46:	not    ch
  412a48:	sub    al,0x34
  412a4a:	je     0x412a1f
  412a4c:	adc    al,0x44
  412a4e:	pop    eax
  412a4f:	jb     0x412a6d
  412a51:	aam    0x6a
  412a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a54:	ins    DWORD PTR es:[edi],dx
  412a55:	cmp    eax,DWORD PTR [esi-0x264464f1]
  412a5b:	or     dl,BYTE PTR [esi-0x5f421fae]
  412a61:	das    
  412a62:	test   al,0x18
  412a64:	aad    0x51
  412a66:	mov    al,0x68
  412a68:	push   0x127f025c
  412a6d:	mov    al,ds:0x7a473859
  412a72:	fidivr WORD PTR [ecx*8+0x6bcd25cf]
  412a79:	lea    esp,[esi-0x52]
  412a7c:	pushf  
  412a7d:	rcr    DWORD PTR [ecx],0x1f
  412a80:	and    DWORD PTR [esi],edi
  412a82:	sub    al,0xfa
  412a84:	jb     0x412a5b
  412a86:	xor    al,0x29
  412a88:	jno    0x412a0b
  412a8a:	jmp    FWORD PTR [edi-0x3a]
  412a8d:	xlat   BYTE PTR ds:[ebx]
  412a8e:	inc    DWORD PTR [ecx-0x1c319263]
  412a94:	test   eax,0x6e8036f0
  412a99:	or     eax,0x3088e486
  412a9e:	pop    ss
  412a9f:	dec    ecx
  412aa0:	inc    eax
  412aa1:	mov    ebx,0x40fe367a
  412aa6:	shl    al,1
  412aa8:	pop    ebx
  412aa9:	into   
  412aaa:	add    esp,ebp
  412aac:	ds pop esp
  412aae:	fwait
  412aaf:	push   edx
  412ab0:	push   ds
  412ab1:	add    al,BYTE PTR [ecx+0x32]
  412ab4:	jnp    0x412a3a
  412ab6:	push   ds
  412ab7:	mov    dh,0x58
  412ab9:	push   ecx
  412aba:	mov    bh,0x4a
  412abc:	out    0x1,al
  412abe:	dec    esi
  412abf:	push   esi
  412ac0:	mov    al,0xe4
  412ac2:	imul   ecx,edx,0xffffffd5
  412ac5:	and    DWORD PTR [eax+0x3f],ebp
  412ac8:	mov    dh,BYTE PTR [edx+0x25550418]
  412ace:	mov    al,ds:0x82a38fa0
  412ad3:	push   ds
  412ad4:	js     0x412a5e
  412ad6:	scas   eax,DWORD PTR es:[edi]
  412ad7:	xchg   ebp,eax
  412ad8:	fcomp  DWORD PTR [edi+0x6a11e77a]
  412ade:	dec    esp
  412adf:	dec    ebp
  412ae0:	in     eax,dx
  412ae1:	iret   
  412ae2:	cs aad 0xe0
  412ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae6:	je     0x412acb
  412ae8:	jae    0x412b11
  412aea:	sub    dl,cl
  412aec:	add    eax,0x1750f0ee
  412af1:	sub    DWORD PTR [edx],esp
  412af3:	xchg   edi,eax
  412af4:	xchg   edi,eax
  412af5:	mov    ecx,0xa215a320
  412afa:	gs or  al,0xbe
  412afd:	lods   eax,DWORD PTR ds:[esi]
  412afe:	(bad)  
  412aff:	cmp    ecx,esi
  412b01:	imul   ebp,esp,0x9
  412b04:	call   0xb73c:0xc5ad569e
  412b0b:	loopne 0x412b49
  412b0d:	stos   BYTE PTR es:[edi],al
  412b0e:	jns    0x412b39
  412b10:	xor    esp,DWORD PTR [ebx-0x65]
  412b13:	mov    edx,DWORD PTR ds:0xc270446e
  412b19:	(bad)  
  412b1a:	pop    ebp
  412b1b:	inc    esi
  412b1c:	sti    
  412b1d:	les    esp,FWORD PTR ds:0x9cac5d98
  412b23:	jmp    0xb03c79e3
  412b28:	(bad)  
  412b29:	lock pop esi
  412b2b:	add    al,0x2
  412b2d:	sahf   
  412b2e:	adc    eax,0x81482cbc
  412b33:	ret    
  412b34:	int3   
  412b35:	adc    eax,0xe7b1afe3
  412b3a:	xor    al,0x1b
  412b3c:	cs iret 
  412b3e:	dec    ebp
  412b3f:	mov    edi,0xd4bb5718
  412b44:	jne    0x412b22
  412b46:	cli    
  412b47:	sub    dh,dh
  412b49:	(bad)  
  412b4a:	cmp    BYTE PTR [edx],0xdc
  412b4d:	ins    DWORD PTR es:[edi],dx
  412b4e:	xchg   bh,ah
  412b50:	mov    esp,0x55f97913
  412b55:	mov    ebp,DWORD PTR [esi+edx*2-0x73]
  412b59:	jp     0x412b3d
  412b5b:	jae    0x412b0e
  412b5d:	jle    0x412ae7
  412b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b60:	ret    0xd49b
  412b63:	not    ch
  412b65:	xor    ah,BYTE PTR [ecx+edi*8+0x35e1b5fc]
  412b6c:	(bad)  
  412b6d:	push   cs
  412b6e:	(bad)  
  412b6f:	push   esp
  412b70:	pop    esp
  412b71:	xlat   BYTE PTR ds:[ebx]
  412b72:	pop    ss
  412b73:	push   ds
  412b74:	cmp    ebx,DWORD PTR [edx+0x38]
  412b77:	shr    eax,0x49
  412b7a:	loope  0x412b2b
  412b7c:	enter  0x4285,0x1e
  412b80:	in     eax,0xdc
  412b82:	mov    ds:0x485ebf42,al
  412b87:	(bad)  
  412b88:	call   0xfc8c7456
  412b8d:	cmp    al,0x42
  412b8f:	jmp    0xde4f:0x853dec20
  412b96:	stos   BYTE PTR es:[edi],al
  412b97:	sbb    ebp,DWORD PTR [esi+esi*8+0x26]
  412b9b:	jg     0x412bd2
  412b9d:	pushw  cs
  412b9f:	and    esp,DWORD PTR [eax]
  412ba1:	push   ss
  412ba2:	xor    al,0xb8
  412ba4:	or     eax,0x4b7792c
  412ba9:	or     eax,0x3d499bf6
  412bae:	shl    DWORD PTR [ebp-0x3fda9eb0],1
  412bb4:	test   eax,0x7ff9375e
  412bb9:	jge    0x412ba9
  412bbb:	lock jecxz 0x412be0
  412bbe:	jno    0x412bb8
  412bc0:	push   es
  412bc1:	push   ebp
  412bc2:	ss mov dx,0x5a09
  412bc7:	or     bl,BYTE PTR [edi]
  412bc9:	sub    BYTE PTR ds:0x738102a9,dh
  412bcf:	cld    
  412bd0:	adc    DWORD PTR [ebp+0x38c1b5af],ebp
  412bd6:	adc    al,0xdb
  412bd8:	sbb    esi,DWORD PTR [ebp+0x3ce66b40]
  412bde:	pop    eax
  412bdf:	xchg   DWORD PTR [edi],ecx
  412be1:	dec    ecx
  412be2:	(bad)  
  412be3:	rcl    DWORD PTR [edx],cl
  412be5:	pop    ds
  412be6:	push   esi
  412be7:	lahf   
  412be8:	inc    eax
  412be9:	cmc    
  412bea:	data16 jbe 0x412b96
  412bed:	pusha  
  412bee:	call   0x8c24fdf4
  412bf3:	sbb    eax,edi
  412bf5:	xor    eax,0xc4d776d3
  412bfa:	push   0xffffffa1
  412bfc:	lock test eax,0x1f918548
  412c02:	inc    ebx
  412c03:	mov    ch,0x86
  412c05:	pop    esi
  412c06:	adc    al,0x88
  412c08:	shl    ecx,0x86
  412c0b:	inc    esp
  412c0c:	add    edx,edi
  412c0e:	arpl   WORD PTR [ebx+0x6356dc98],sp
  412c14:	sbb    al,0x53
  412c16:	cmp    eax,0xb3c3820c
  412c1b:	sbb    DWORD PTR [edx],0x77
  412c1e:	dec    ecx
  412c1f:	das    
  412c20:	neg    DWORD PTR [esi-0x1b]
  412c23:	mov    DWORD PTR [ecx],esp
  412c25:	imul   ebp,DWORD PTR [ecx],0x74042557
  412c2b:	jne    0x412c88
  412c2d:	or     eax,0xc12bb6b4
  412c32:	popa   
  412c33:	out    dx,eax
  412c34:	cld    
  412c35:	inc    edi
  412c36:	and    ah,BYTE PTR [ebx-0x1c]
  412c39:	call   0x1279:0x31ae515c
  412c40:	xchg   ebx,eax
  412c41:	inc    ebx
  412c42:	call   0x5c02:0x23e3b375
  412c49:	es jmp 0x6f2432ee
  412c4f:	gs cwde 
  412c51:	add    eax,0x546ca0d
  412c56:	sub    eax,0xa8a2c87c
  412c5b:	jmp    0x8f8ce063
  412c60:	into   
  412c61:	inc    ebp
  412c62:	jg     0x412c3d
  412c64:	mov    cl,0x40
  412c66:	jg     0x412c6a
  412c68:	inc    ecx
  412c69:	push   esi
  412c6a:	xchg   ebx,eax
  412c6b:	push   ebx
  412c6c:	sbb    esp,0x9
  412c6f:	std    
  412c70:	into   
  412c71:	mov    ecx,0xf1682e3c
  412c76:	ret    
  412c77:	or     cl,ch
  412c79:	cwde   
  412c7a:	aad    0x73
  412c7c:	and    BYTE PTR [ebx],dl
  412c7e:	aam    0x9c
  412c80:	adc    al,0xbc
  412c82:	retf   
  412c83:	jp     0x412c0c
  412c85:	loop   0x412c39
  412c87:	cmp    dh,bh
  412c89:	retf   0x329e
  412c8c:	adc    eax,DWORD PTR [edi+0x75]
  412c8f:	xchg   BYTE PTR ds:0x6117a9a7,dh
  412c95:	cmp    esp,eax
  412c97:	xor    BYTE PTR [ebx],bl
  412c99:	fdivrp st(7),st
  412c9b:	es loope 0x412cdd
  412c9e:	xor    al,0x2d
  412ca0:	push   ebx
  412ca1:	out    dx,al
  412ca2:	mov    bh,BYTE PTR [edx-0x5d]
  412ca5:	sub    BYTE PTR [ecx],ch
  412ca7:	shl    DWORD PTR [edx+edi*4],0xfb
  412cab:	int    0x12
  412cad:	xor    DWORD PTR [ecx-0x3193d213],edx
  412cb3:	sti    
  412cb4:	xchg   ebp,eax
  412cb5:	pop    ebp
  412cb6:	iret   
  412cb7:	mov    esi,0xd390b392
  412cbc:	rcl    al,1
  412cbe:	push   esp
  412cbf:	adc    DWORD PTR [esi],ebx
  412cc1:	xor    BYTE PTR ds:0x96598741,0x7d
  412cc8:	inc    ebp
  412cc9:	js     0x412d02
  412ccb:	addr16 jle 0x412c5d
  412cce:	aas    
  412ccf:	in     eax,0x46
  412cd1:	xor    eax,0xfcaf95d4
  412cd6:	call   0xf623f93b
  412cdb:	test   DWORD PTR [ebp+0x24],ecx
  412cde:	test   BYTE PTR [esi+eiz*1+0x8],al
  412ce2:	sub    al,0x8b
  412ce4:	dec    esi
  412ce5:	in     al,dx
  412ce6:	je     0x412c7a
  412ce8:	sti    
  412ce9:	imul   esp,DWORD PTR ds:0xe2d30904,0xffffffa7
  412cf0:	(bad)  [ecx-0x239aa086]
  412cf6:	inc    ebp
  412cf7:	(bad)  
  412cf8:	adc    al,0x9c
  412cfa:	jecxz  0x412c8c
  412cfc:	sub    ch,BYTE PTR [ecx]
  412cfe:	cs lahf 
  412d00:	int    0x11
  412d02:	sbb    BYTE PTR [esi-0x2d],cl
  412d05:	call   0xbb3b:0xf7e0e313
  412d0c:	pushf  
  412d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d0e:	daa    
  412d0f:	sbb    BYTE PTR [eax+eax*4-0x4c],bl
  412d13:	adc    al,0xe3
  412d15:	loope  0x412cc3
  412d17:	jmp    0xdc65:0xa2645b9f
  412d1e:	ror    edx,1
  412d20:	mov    ebx,0x733ebc73
  412d25:	inc    edi
  412d26:	push   cs
  412d27:	inc    edx
  412d28:	cmp    al,0xc4
  412d2a:	dec    ecx
  412d2b:	or     eax,DWORD PTR [eax-0x616acb9b]
  412d31:	gs das 
  412d33:	std    
  412d34:	aas    
  412d35:	test   BYTE PTR [ebx+0x118e2506],dl
  412d3b:	repz jbe 0x412d81
  412d3e:	mov    cl,0xa0
  412d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d41:	imul   BYTE PTR [ebp+0x75]
  412d44:	jo     0x412d19
  412d46:	sub    ch,BYTE PTR [ebp-0x342de8bf]
  412d4c:	pop    ds
  412d4d:	dec    esi
  412d4e:	push   esp
  412d4f:	jl     0x412cd8
  412d51:	shl    cl,1
  412d53:	(bad)  
  412d54:	and    DWORD PTR [ebp+0x2318c821],eax
  412d5a:	hlt    
  412d5b:	inc    eax
  412d5c:	add    al,0xf5
  412d5e:	xor    edi,eax
  412d60:	xchg   edi,esi
  412d62:	push   edi
  412d63:	mov    WORD PTR [esi],cs
  412d65:	idiv   BYTE PTR [edx+0x139f76e3]
  412d6b:	test   eax,0xb70894bf
  412d70:	fild   WORD PTR [ecx-0x1c]
  412d73:	(bad)  
  412d75:	int3   
  412d76:	push   ecx
  412d77:	dec    edi
  412d78:	fild   WORD PTR [ebx]
  412d7a:	mov    BYTE PTR [edx-0xb],al
  412d7d:	js     0x412d92
  412d7f:	jns    0x412d7b
  412d81:	(bad)  
  412d82:	cmovbe eax,DWORD PTR [esi]
  412d85:	dec    ebx
  412d86:	shl    ebp,0xd9
  412d89:	into   
  412d8a:	mov    esp,0xdb55267c
  412d8f:	shl    BYTE PTR [edx+0x56],1
  412d92:	xchg   ebp,eax
  412d93:	out    dx,al
  412d94:	nop
  412d95:	xlat   BYTE PTR ds:[ebx]
  412d96:	inc    edx
  412d97:	pop    ds
  412d98:	popf   
  412d99:	dec    edi
  412d9a:	aas    
  412d9b:	lea    eax,[ebp-0x1c]
  412d9e:	aas    
  412d9f:	pop    ebp
  412da0:	shl    DWORD PTR [ecx+edi*4+0x61562839],cl
  412da7:	loope  0x412da8
  412da9:	jle    0x412de2
  412dab:	mov    dh,0xb5
  412dad:	push   es
  412dae:	jne    0x412d6e
  412db0:	inc    ebx
  412db1:	test   DWORD PTR [edi-0x3bd9d22],edx
  412db7:	xor    BYTE PTR [edi],dl
  412db9:	mov    eax,ds:0xdb0670a6
  412dbe:	or     DWORD PTR [esp+esi*4],esp
  412dc1:	and    eax,ecx
  412dc3:	hlt    
  412dc4:	xor    al,0xb4
  412dc6:	mov    cl,0xb4
  412dc8:	int3   
  412dc9:	(bad)  
  412dca:	(bad)  
  412dcc:	cmc    
  412dcd:	pop    esi
  412dce:	push   cs
  412dcf:	ret    
  412dd0:	pop    ds
  412dd1:	sbb    BYTE PTR [edx-0x2207edfd],al
  412dd7:	adc    eax,0x3e3a924d
  412ddc:	ins    DWORD PTR es:[edi],dx
  412ddd:	adc    DWORD PTR ss:[ebp+0x1a920d31],0x3053d9e9
  412de8:	dec    ebp
  412de9:	scas   al,BYTE PTR es:[edi]
  412dea:	out    dx,eax
  412deb:	mov    es,WORD PTR [ecx+0xe]
  412dee:	sub    BYTE PTR [esp+ecx*4+0x6d],al
  412df2:	mov    DWORD PTR [ecx-0x5e],esp
  412df5:	sbb    al,0x34
  412df7:	pop    es
  412df8:	pusha  
  412df9:	fs mov cl,0x94
  412dfc:	call   0x4eee46b3
  412e01:	dec    edi
  412e02:	push   ecx
  412e03:	sbb    eax,0x58dea41e
  412e08:	inc    eax
  412e09:	pop    edx
  412e0a:	aad    0xba
  412e0c:	in     al,0x6e
  412e0e:	jl     0x412e56
  412e10:	repz add ebx,DWORD PTR [ecx+eiz*2-0x7d79124c]
  412e18:	jmp    0x8048:0x7774c10c
  412e1f:	into   
  412e20:	and    al,0xc3
  412e22:	ds in  eax,dx
  412e24:	and    esi,DWORD PTR [edi+0x2dc8c5a3]
  412e2a:	in     al,dx
  412e2b:	sti    
  412e2c:	inc    esp
  412e2d:	xchg   esi,eax
  412e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e2f:	jb     0x412dc0
  412e31:	push   ebp
  412e32:	jb     0x412dd5
  412e34:	and    dl,ch
  412e36:	adc    ecx,ecx
  412e38:	mov    ds:0xdeabf868,eax
  412e3d:	pusha  
  412e3e:	fmul   QWORD PTR [eax+0x42d7da67]
  412e44:	in     al,dx
  412e45:	mov    bh,0xeb
  412e47:	and    bh,BYTE PTR [ecx+0x63]
  412e4a:	xchg   ebp,eax
  412e4b:	mov    al,ah
  412e4d:	dec    ebp
  412e4e:	scas   eax,DWORD PTR es:[edi]
  412e4f:	in     al,dx
  412e50:	pop    edx
  412e51:	mov    WORD PTR [esi-0x43e3202a],?
  412e57:	xor    cl,al
  412e59:	outs   dx,DWORD PTR ds:[esi]
  412e5a:	cmp    eax,0x92bc243c
  412e5f:	mov    esp,0xcfb45a61
  412e64:	call   esi
  412e66:	inc    eax
  412e67:	mov    ebx,0xa7a903b2
  412e6c:	dec    esp
  412e6d:	and    edi,DWORD PTR [ecx+0x40212148]
  412e73:	jg     0x412e18
  412e75:	fist   DWORD PTR ds:[esp+edx*2-0x5d]
  412e7a:	call   0x2e1761f5
  412e7f:	stc    
  412e80:	fadd   DWORD PTR [ecx+0x69]
  412e83:	mov    esi,0x9d400981
  412e88:	mov    BYTE PTR [ebp-0x91b26a7],ch
  412e8e:	lods   eax,DWORD PTR ds:[esi]
  412e8f:	retf   
  412e90:	jge    0x412ef2
  412e92:	xor    eax,0xadfb4c5a
  412e97:	xchg   ecx,eax
  412e98:	and    al,0x7e
  412e9a:	call   0x446a6d12
  412e9f:	test   BYTE PTR [ecx-0x32978b26],al
  412ea5:	lods   al,BYTE PTR ds:[esi]
  412ea6:	popf   
  412ea7:	xor    bl,BYTE PTR [edx+0x79]
  412eaa:	mov    al,ds:0x84fe52b5
  412eaf:	test   ch,bl
  412eb1:	push   edi
  412eb2:	cmp    BYTE PTR [eax-0x3e762774],al
  412eb8:	or     ebp,DWORD PTR [edi]
  412eba:	imul   eax,DWORD PTR [edx+0x6c139795],0xad72cd41
  412ec4:	lods   al,BYTE PTR ds:[esi]
  412ec5:	neg    BYTE PTR [ebx-0x695c717a]
  412ecb:	int    0xc6
  412ecd:	jg     0x412ef5
  412ecf:	out    0xa7,eax
  412ed1:	or     DWORD PTR [esi-0x84836d],edi
  412ed7:	gs adc edx,ebx
  412eda:	out    0x64,al
  412edc:	pusha  
  412edd:	pop    eax
  412ede:	sbb    eax,0xe3dfe47e
  412ee3:	imul   esp,DWORD PTR [edx+eiz*8-0x21],0x62ce87e6
  412eeb:	pop    ebp
  412eec:	in     al,0x22
  412eee:	cwde   
  412eef:	out    0x33,eax
  412ef1:	mov    eax,0xd31658f5
  412ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ef7:	lahf   
  412ef8:	ret    0xca35
  412efb:	dec    ebx
  412efc:	sub    BYTE PTR [ecx-0x6dad564a],0x2f
  412f03:	jmp    0x412ec0
  412f05:	or     BYTE PTR [ecx-0x51],bl
  412f08:	jmp    0xb2cb2f34
  412f0d:	mov    ebp,0x105468dd
  412f12:	nop
  412f13:	mov    dl,ch
  412f15:	or     al,0x5a
  412f17:	stc    
  412f18:	or     BYTE PTR [esp+eiz*8],0x2d
  412f1c:	sbb    edx,edx
  412f1e:	jmp    0x98fd:0xef12c01b
  412f25:	cli    
  412f26:	dec    esp
  412f27:	dec    ebx
  412f28:	out    0x34,al
  412f2a:	(bad)  
  412f2b:	clc    
  412f2c:	pop    ss
  412f2d:	xor    bh,bl
  412f2f:	inc    edx
  412f30:	jne    0x412ec3
  412f32:	es pop ecx
  412f34:	in     al,0x51
  412f36:	pop    es
  412f37:	aam    0xc7
  412f39:	(bad)  
  412f3b:	jns    0x412f50
  412f3d:	mov    WORD PTR [esi],?
  412f3f:	jmp    0x412f35
  412f41:	push   ebx
  412f42:	mov    ah,0xf1
  412f44:	push   0x5dd64f53
  412f49:	cli    
  412f4a:	add    BYTE PTR [edx+0x4b],bh
  412f4d:	pop    ebx
  412f4e:	imul   ebp,ecx,0xe39aee67
  412f54:	fs in  al,0x82
  412f57:	scas   eax,DWORD PTR es:[edi]
  412f58:	or     DWORD PTR ds:0xbb128b7c,edi
  412f5e:	(bad)  
  412f5f:	lock out dx,eax
  412f61:	jno    0x412f1c
  412f63:	shr    DWORD PTR [ebx],cl
  412f65:	dec    esp
  412f66:	pop    ss
  412f67:	push   es
  412f68:	jne    0x412f05
  412f6a:	add    dh,0xb2
  412f6d:	mov    eax,0xe0e3b16c
  412f72:	or     BYTE PTR [eax-0x67],bl
  412f75:	ins    DWORD PTR es:[edi],dx
  412f76:	ret    
  412f77:	mov    cl,0x5b
  412f79:	add    bl,BYTE PTR [edi+ebx*1-0x5f]
  412f7d:	push   ebp
  412f7e:	(bad)  
  412f7f:	or     al,0x35
  412f81:	scas   eax,DWORD PTR es:[edi]
  412f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f83:	jp     0x412feb
  412f85:	icebp  
  412f86:	jne    0x412f87
  412f88:	adc    BYTE PTR [edi-0x7759cc3c],bh
  412f8e:	aam    0x1c
  412f90:	push   es
  412f91:	mov    ah,0x48
  412f93:	xchg   esi,eax
  412f94:	add    BYTE PTR [ebx+0x4b],bh
  412f97:	(bad)  
  412f98:	rol    DWORD PTR ds:0x34104879,cl
  412f9e:	(bad)  
  412f9f:	or     eax,0x6d9c7b94
  412fa4:	xlat   BYTE PTR ds:[ebx]
  412fa5:	in     eax,0xe
  412fa7:	cmp    DWORD PTR [ecx],0x9c10114b
  412fad:	push   edi
  412fae:	sub    cl,BYTE PTR [ecx]
  412fb0:	out    0xbf,eax
  412fb2:	and    edx,ebx
  412fb4:	push   ebx
  412fb5:	mov    ecx,0x2c8abc0b
  412fba:	mov    WORD PTR [eax],?
  412fbc:	pushf  
  412fbd:	sahf   
  412fbe:	shl    DWORD PTR [edi+0x5d],0x7d
  412fc2:	lods   eax,DWORD PTR ds:[esi]
  412fc3:	fs push edx
  412fc5:	int3   
  412fc6:	test   ah,dl
  412fc8:	add    al,0xe1
  412fca:	xchg   edx,eax
  412fcb:	imul   ebp,DWORD PTR [ebx],0x47c9a6c7
  412fd1:	rcr    DWORD PTR [ebx+eiz*2+0x51],cl
  412fd5:	xchg   BYTE PTR [ebp+eiz*8+0x1fffb854],ah
  412fdc:	rcl    DWORD PTR [edx+0x484086d4],1
  412fe2:	ror    eax,1
  412fe4:	or     DWORD PTR [ebp+0x298357dd],eax
  412fea:	push   0xd64b50c4
  412fef:	xchg   esp,eax
  412ff0:	stc    
  412ff1:	mov    ecx,DWORD PTR [eax-0x619e3ed5]
  412ff7:	aas    
  412ff8:	daa    
  412ff9:	jmp    0x412f94
  412ffb:	and    cl,0xb0
  412ffe:	bound  edi,QWORD PTR [esi]
  413000:	std    
  413001:	sbb    DWORD PTR [eax-0x9d471a5],esi
  413007:	(bad)  
  413009:	(bad)  
  41300b:	sahf   
  41300c:	sbb    DWORD PTR [edi],ebp
  41300e:	push   esp
  41300f:	xor    eax,0x4a7ec4eb
  413014:	loopne 0x41302c
  413016:	and    al,0x31
  413018:	fcom   DWORD PTR [esi+0x50]
  41301b:	(bad)  
  41301c:	cwde   
  41301d:	daa    
  41301e:	xor    dl,BYTE PTR [eax-0x10]
  413021:	(bad)  
  413022:	jp     0x412feb
  413024:	inc    esp
  413025:	stos   BYTE PTR es:[edi],al
  413026:	lds    ebx,FWORD PTR [ebx-0x3c822e0d]
  41302c:	rcl    BYTE PTR [ecx],0x1b
  41302f:	test   BYTE PTR [edx+ebx*4-0x50],0xab
  413034:	cld    
  413035:	sub    al,0x9e
  413037:	xor    dh,cl
  413039:	pop    edx
  41303a:	xchg   BYTE PTR [eax+ebp*2+0x59bdc9d4],dh
  413041:	aaa    
  413042:	sbb    edi,DWORD PTR [esi+0x14]
  413045:	or     eax,DWORD PTR [ecx-0x27a9863f]
  41304b:	in     al,dx
  41304c:	test   BYTE PTR [ebx+0x286deb85],dh
  413052:	mov    al,ds:0x326c3ae6
  413057:	fdivr  DWORD PTR [ebx+ebp*1+0x6e80f584]
  41305e:	gs fwait
  413060:	adc    BYTE PTR [edi+0x7f52eb7],dh
  413066:	mov    BYTE PTR [esi],dh
  413068:	jge    0x413017
  41306a:	push   ds
  41306b:	ins    BYTE PTR es:[edi],dx
  41306c:	sbb    ah,0x3f
  41306f:	test   al,0xfc
  413071:	xchg   edx,eax
  413072:	jo     0x4130df
  413074:	and    DWORD PTR [ecx],edx
  413076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413077:	xchg   ebx,eax
  413078:	add    BYTE PTR [eax-0x2037ec4],ch
  41307e:	and    eax,edx
  413080:	lock cwde 
  413082:	(bad)  
  413083:	jle    0x413076
  413085:	rol    DWORD PTR [ebp+0x52feb714],0xfd
  41308c:	sub    DWORD PTR [edx+0x21],ecx
  41308f:	loop   0x4130c6
  413091:	es aaa 
  413093:	std    
  413094:	mov    ds:0x6d58d088,al
  413099:	xlat   BYTE PTR ds:[ebx]
  41309a:	xchg   esi,eax
  41309b:	dec    esi
  41309c:	retf   0x4387
  41309f:	cs mov bh,0x9d
  4130a2:	cmp    DWORD PTR [eax+0x55781ad2],eax
  4130a8:	or     ebp,DWORD PTR [edx]
  4130aa:	in     eax,0xc5
  4130ac:	sub    al,0x40
  4130ae:	scas   eax,DWORD PTR es:[edi]
  4130af:	lahf   
  4130b0:	mov    al,ds:0xf2816bf5
  4130b5:	stos   DWORD PTR es:[edi],eax
  4130b6:	lods   al,BYTE PTR ds:[esi]
  4130b7:	xchg   al,bh
  4130b9:	int    0x79
  4130bb:	addr16 push ebp
  4130bd:	mov    bl,0x27
  4130bf:	stos   DWORD PTR es:[edi],eax
  4130c0:	cmp    eax,ebx
  4130c2:	mov    dh,0xbb
  4130c4:	and    eax,0x3ec3e679
  4130c9:	aaa    
  4130ca:	and    esi,edx
  4130cc:	inc    eax
  4130cd:	lods   al,BYTE PTR ds:[esi]
  4130ce:	fist   DWORD PTR [ecx-0x6dc44e81]
  4130d4:	pop    DWORD PTR ss:[eax-0x5f]
  4130d8:	mov    eax,ds:0xb515d0ca
  4130dd:	std    
  4130de:	sbb    BYTE PTR ds:0x5ddb459c,al
  4130e4:	stc    
  4130e5:	daa    
  4130e6:	mov    edi,0x8670f0b9
  4130eb:	or     DWORD PTR [edi-0x30],ebp
  4130ee:	shl    BYTE PTR [esi+0x2ff60427],0xb8
  4130f5:	sbb    al,0x14
  4130f7:	stos   BYTE PTR es:[edi],al
  4130f8:	adc    BYTE PTR [eax-0x42e77718],dl
  4130fe:	xchg   esi,eax
  4130ff:	sub    DWORD PTR [ecx-0x7b10b2b0],edi
  413105:	sub    esp,DWORD PTR [edi]
  413107:	std    
  413108:	outs   dx,BYTE PTR ds:[esi]
  413109:	rol    BYTE PTR [ebx+ebx*2+0x1],0x54
  41310e:	stos   BYTE PTR es:[edi],al
  41310f:	mov    esi,DWORD PTR [eax]
  413111:	sbb    ebx,DWORD PTR [ebp-0x50]
  413114:	adc    bl,BYTE PTR [eax]
  413116:	(bad)  
  413117:	(bad)  
  413118:	pushf  
  413119:	aas    
  41311a:	test   al,0x6a
  41311c:	push   esi
  41311d:	jecxz  0x4130a9
  41311f:	std    
  413120:	jecxz  0x41319a
  413122:	jns    0x41317c
  413124:	(bad)  
  413125:	in     eax,0x34
  413127:	and    ecx,DWORD PTR [edx-0x3d1b0345]
  41312d:	jecxz  0x4130e7
  41312f:	gs jno 0x413153
  413132:	mov    esp,0x47b972c3
  413137:	fwait
  413138:	push   esi
  413139:	push   ecx
  41313a:	push   ecx
  41313b:	in     eax,dx
  41313c:	lods   al,BYTE PTR ds:[esi]
  41313d:	repnz hlt 
  41313f:	xchg   esp,eax
  413140:	or     esp,DWORD PTR [esi-0x27c38f28]
  413146:	xchg   esi,eax
  413147:	xor    dl,BYTE PTR [ebx]
  413149:	push   ecx
  41314a:	test   eax,0xb6d8cd46
  41314f:	adc    dl,bl
  413151:	or     BYTE PTR [esi],0xc1
  413154:	xchg   esp,eax
  413155:	test   BYTE PTR [esi+0x5164859e],bl
  41315b:	cs data16 mov bl,0x41
  41315f:	out    dx,eax
  413160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413161:	test   eax,0x887c5f64
  413166:	ss pop esi
  413168:	(bad)  
  413169:	imul   esp,ebp,0xae087ac3
  41316f:	xchg   ebx,eax
  413171:	mov    esp,0x1d03a75c
  413176:	out    0x71,al
  413178:	iret   
  413179:	loop   0x4131c2
  41317b:	lahf   
  41317c:	std    
  41317d:	icebp  
  41317e:	add    al,0xd1
  413180:	out    0xcf,al
  413182:	mov    dl,0x96
  413184:	ds pop ss
  413186:	push   0x3aaa876b
  41318b:	cmp    eax,0xdbaeeb3e
  413190:	ss in  al,0xb2
  413193:	fnstcw WORD PTR [ecx]
  413195:	dec    esi
  413196:	push   ebp
  413197:	push   0x79
  413199:	sar    DWORD PTR [ebx-0x656e0ff4],1
  41319f:	ins    DWORD PTR es:[edi],dx
  4131a0:	adc    eax,0x3660a884
  4131a5:	fist   WORD PTR ds:0xff599aeb
  4131ab:	jecxz  0x41318c
  4131ad:	leave  
  4131ae:	dec    esp
  4131af:	out    0xb8,eax
  4131b1:	adc    dl,BYTE PTR [ebx]
  4131b3:	mov    ch,0x7
  4131b5:	out    0xde,eax
  4131b7:	mov    esp,0x2912dd8c
  4131bc:	out    dx,eax
  4131bd:	add    DWORD PTR [edi],esi
  4131bf:	inc    edi
  4131c0:	push   ecx
  4131c1:	nop
  4131c2:	fcomp  QWORD PTR [ebx-0x45]
  4131c5:	push   esp
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	mov    dl,0x41
  4131c9:	ret    0xf58b
  4131cc:	ins    DWORD PTR es:[edi],dx
  4131cd:	jmp    0xe030e760
  4131d2:	fcomp  DWORD PTR [ecx-0xc92fdd6]
  4131d8:	rcl    BYTE PTR [eax-0x4a01c248],1
  4131de:	retf   0x6330
  4131e1:	enter  0x87d8,0x32
  4131e5:	inc    ebx
  4131e6:	or     cl,dh
  4131e8:	sub    edx,0xffffffc9
  4131eb:	cmp    ch,al
  4131ed:	stc    
  4131ee:	out    dx,al
  4131ef:	call   0xe0fb:0xccaa5daa
  4131f6:	sar    bh,cl
  4131f8:	jne    0x41323e
  4131fa:	mov    esp,0xdc3c9432
  4131ff:	sub    al,0x3
  413201:	xchg   ebx,eax
  413202:	xchg   esp,eax
  413203:	int3   
  413204:	loope  0x4131b8
  413206:	mov    ah,0xce
  413208:	dec    edx
  413209:	cmp    esp,DWORD PTR [ebx]
  41320b:	outs   dx,BYTE PTR ds:[esi]
  41320c:	xor    edi,eax
  41320e:	in     al,0x3e
  413210:	xchg   esi,eax
  413211:	pop    ss
  413212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413213:	daa    
  413214:	test   BYTE PTR [ebx-0x63],ch
  413217:	test   BYTE PTR [ebx-0x4e1e0e47],dh
  41321d:	push   edi
  41321e:	out    dx,al
  41321f:	adc    al,0xef
  413221:	std    
  413222:	sbb    eax,0xe87afe31
  413228:	jle    0x413222
  41322a:	pop    edi
  41322b:	cli    
  41322c:	inc    ebx
  41322d:	call   0x9d868e17
  413232:	or     DWORD PTR gs:[eax-0x710eb6db],eax
  413239:	or     BYTE PTR [edi+0x247301cf],dl
  41323f:	cmp    eax,0x2e0b7f78
  413244:	ret    0x3cce
  413247:	dec    ebp
  413248:	dec    ebx
  413249:	sub    DWORD PTR [eax+0x3e],esi
  41324c:	out    0xfe,eax
  41324e:	ins    BYTE PTR es:[edi],dx
  41324f:	lea    ecx,[edi-0x710a862]
  413255:	pop    ss
  413256:	sar    dl,cl
  413258:	mov    esi,0x509b2819
  41325d:	push   ds
  41325e:	leave  
  41325f:	dec    edx
  413260:	mov    esi,0xafc17c05
  413265:	push   eax
  413266:	jns    0x4132ad
  413268:	addr16 mov cl,0xa6
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	sbb    BYTE PTR [ebp+esi*8+0x13c9b2c8],0xbf
  413274:	add    eax,0x7bce0d05
  413279:	ins    DWORD PTR es:[edi],dx
  41327a:	idiv   DWORD PTR [edi]
  41327c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41327d:	cmp    edi,0xdea7b019
  413283:	out    dx,al
  413284:	push   ebp
  413285:	xor    al,0xb5
  413287:	adc    eax,0xed30fe74
  41328c:	mov    eax,ds:0xbb872c48
  413291:	jmp    0xed43:0xa23e6829
  413298:	xor    al,0xc9
  41329a:	xchg   ebx,eax
  41329b:	jl     0x413302
  41329d:	fcomip st,st(6)
  41329f:	mov    WORD PTR [ebx+0x5d913af1],ss
  4132a5:	inc    ecx
  4132a6:	mul    BYTE PTR [ecx-0x410f50c0]
  4132ac:	fld    QWORD PTR [esi-0x72]
  4132af:	ja     0x4132d3
  4132b1:	(bad)  
  4132b3:	xlat   BYTE PTR ds:[ebx]
  4132b4:	pusha  
  4132b5:	test   ah,bh
  4132b7:	add    edi,DWORD PTR [ebp+0x1a8ecee0]
  4132bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132be:	mov    esi,0x3d57b8cb
  4132c3:	adc    cl,BYTE PTR [ebp+0x7647e769]
  4132c9:	xor    al,0x9a
  4132cc:	or     BYTE PTR [edi],dh
  4132ce:	into   
  4132cf:	(bad)  
  4132d1:	and    al,0x73
  4132d3:	(bad)  
  4132d5:	repnz inc ebp
  4132d7:	dec    esi
  4132d8:	mov    ss,WORD PTR [eax]
  4132da:	pop    ecx
  4132db:	dec    esp
  4132dc:	test   al,0xd5
  4132de:	arpl   bp,dx
  4132e0:	and    al,0xaa
  4132e2:	mov    eax,0x5559fdef
  4132e7:	jne    0x413298
  4132e9:	and    eax,0x977f2cdc
  4132ee:	cmc    
  4132ef:	(bad)  
  4132f0:	fwait
  4132f1:	sti    
  4132f2:	jnp    0x4132c2
  4132f4:	(bad)  
  4132f6:	xor    ebp,DWORD PTR [ebx-0x7]
  4132f9:	push   esp
  4132fa:	or     esi,0xffffffb2
  4132fd:	mov    ch,0x6c
  4132ff:	daa    
  413300:	test   DWORD PTR [ebp+0x7ae304c5],esi
  413306:	test   DWORD PTR ds:0x821ed657,edi
  41330c:	mov    ds,WORD PTR [ecx-0x67c2d233]
  413312:	jg     0x413331
  413314:	sub    esp,DWORD PTR [esi+0x432fb1e1]
  41331a:	xor    dl,dh
  41331c:	(bad)  
  41331d:	fdivr  st(3),st
  41331f:	cld    
  413320:	or     ch,ch
  413322:	les    eax,FWORD PTR [edx+0x29]
  413325:	sub    eax,0xe8fc0c42
  41332a:	mov    ecx,0xfe508d66
  41332f:	inc    eax
  413330:	add    esi,ecx
  413332:	in     al,0xc0
  413334:	xor    al,0xfc
  413336:	jmp    0x41338b
  413338:	int    0x5b
  41333a:	inc    edx
  41333b:	dec    edx
  41333c:	not    BYTE PTR [ebx+0x68]
  41333f:	inc    ecx
  413340:	loopne 0x4132f3
  413342:	xor    DWORD PTR [ebx-0x64169277],esp
  413348:	test   DWORD PTR [ebx+edi*2-0x13],edx
  41334c:	and    BYTE PTR [eax-0x5],0x3d
  413350:	add    DWORD PTR [ecx+0x75],0xffffffc4
  413354:	cmp    dh,BYTE PTR [eax]
  413356:	mov    ?,WORD PTR [ebp+0x12a63363]
  41335c:	cmc    
  41335d:	iret   
  41335e:	cli    
  41335f:	xor    BYTE PTR [eax],0xf2
  413362:	cs das 
  413364:	aad    0x4
  413366:	jo     0x41332f
  413368:	in     eax,0x1b
  41336a:	mov    bh,0xdc
  41336c:	inc    ebp
  41336d:	outs   dx,BYTE PTR ds:[esi]
  41336e:	out    0x37,al
  413370:	stos   DWORD PTR es:[edi],eax
  413371:	rcl    DWORD PTR [eax],1
  413373:	jmp    0x4133d4
  413375:	(bad)  [edx]
  413377:	jecxz  0x41336d
  413379:	loope  0x41338a
  41337b:	int3   
  41337c:	adc    al,0xcd
  41337e:	cmp    eax,0xa581f33b
  413383:	mov    edi,0x6b25fe45
  413388:	push   ds
  413389:	cmp    ebp,DWORD PTR [ecx-0x3f]
  41338c:	dec    edi
  41338d:	add    ecx,ebx
  41338f:	xor    ecx,esp
  413391:	lods   al,BYTE PTR ds:[esi]
  413392:	mov    ebp,0xaf2ac82b
  413397:	not    BYTE PTR [ebp-0x2e]
  41339a:	outs   dx,DWORD PTR ds:[esi]
  41339b:	xchg   DWORD PTR [edx],ecx
  41339d:	test   al,0x28
  41339f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133a0:	mov    ebx,0x301972dc
  4133a5:	cmp    DWORD PTR [ecx+edi*8-0x21aaaae3],esp
  4133ac:	shl    BYTE PTR [ebx+0x66],cl
  4133af:	lods   eax,DWORD PTR ds:[esi]
  4133b0:	sbb    ah,ah
  4133b2:	ds addr16 loope 0x413426
  4133b6:	xchg   BYTE PTR [eax+0x4fad349e],ch
  4133bc:	test   al,0xd6
  4133be:	mov    ?,WORD PTR ds:0xd79d5f83
  4133c4:	jns    0x41340b
  4133c6:	mov    al,ds:0xf8ee81f5
  4133cb:	or     al,0xf7
  4133cd:	dec    ebx
  4133ce:	mov    ebp,0xa59c573a
  4133d3:	pop    eax
  4133d4:	div    BYTE PTR [eax+0x36e3b231]
  4133da:	pop    ebp
  4133db:	rol    BYTE PTR [ecx],1
  4133dd:	or     al,0x39
  4133df:	mov    ds:0xd81ea0d6,eax
  4133e4:	mov    edi,0xb6f6c14
  4133e9:	(bad)  
  4133ea:	xchg   ebx,eax
  4133eb:	sbb    DWORD PTR [ecx+0x27de1418],0xd77bc83
  4133f5:	xchg   ebx,edi
  4133f7:	lods   al,BYTE PTR ds:[esi]
  4133f8:	adc    eax,0xdc1c2b44
  4133fd:	pusha  
  4133fe:	mov    esi,0x9a925016
  413403:	popa   
  413404:	pop    ebx
  413405:	jle    0x413476
  413407:	outs   dx,DWORD PTR ds:[esi]
  413408:	cmc    
  413409:	stos   DWORD PTR es:[edi],eax
  41340a:	retf   
  41340b:	cld    
  41340c:	adc    eax,0xdcf851dc
  413411:	adc    DWORD PTR ds:0xf2c76258,eax
  413417:	ss inc eax
  413419:	mov    ch,0xe3
  41341b:	fnstenv [esi-0x9]
  41341e:	jo     0x413441
  413420:	pop    ss
  413421:	mov    BYTE PTR [eax+edx*8],cl
  413424:	clc    
  413425:	(bad)  
  413426:	mov    DWORD PTR [ecx-0x522e521d],esi
  41342c:	cli    
  41342d:	add    BYTE PTR [esi-0x1520ab42],bh
  413433:	imul   edi,DWORD PTR [ecx-0x5e],0x5c
  413437:	sbb    eax,0xd7013a14
  41343c:	mov    ebp,DWORD PTR [ebx+0x5d49f210]
  413442:	outs   dx,BYTE PTR ds:[esi]
  413443:	xchg   esi,eax
  413444:	mov    esp,0x8c372f1b
  413449:	or     al,0xa8
  41344b:	fwait
  41344c:	dec    edx
  41344d:	or     eax,0xa37ec8a0
  413452:	mov    edx,0xbb6f7f5e
  413457:	sub    eax,0x60d87c1
  41345c:	lods   eax,DWORD PTR ds:[esi]
  41345d:	loopne 0x413432
  41345f:	jmp    DWORD PTR [eax+0x54]
  413462:	xor    esp,DWORD PTR [edx+0x21]
  413465:	inc    esi
  413466:	stos   BYTE PTR es:[edi],al
  413467:	inc    ebx
  413468:	mov    ecx,DWORD PTR [ecx-0x71]
  41346b:	lods   al,BYTE PTR ds:[esi]
  41346c:	jle    0x4134dd
  41346e:	push   edi
  41346f:	pop    ss
  413470:	mov    ds:0xf338e35c,al
  413475:	ins    DWORD PTR es:[edi],dx
  413476:	jp     0x4134ad
  413478:	inc    esi
  413479:	and    eax,0xf599c7cf
  41347e:	sbb    eax,0xc80c46c5
  413483:	ds das 
  413485:	(bad)  
  413486:	arpl   WORD PTR [ebx],dx
  413488:	sbb    al,0xe9
  41348a:	pusha  
  41348b:	(bad)  
  41348d:	stos   BYTE PTR es:[edi],al
  41348e:	and    DWORD PTR [edi+0x5d],ebx
  413491:	pop    ebx
  413492:	sar    DWORD PTR [edx],cl
  413494:	jo     0x413511
  413496:	add    eax,0xce62d368
  41349b:	lds    edx,FWORD PTR [esi-0x19ad4a89]
  4134a1:	in     eax,dx
  4134a2:	and    DWORD PTR [eax+0x7],esp
  4134a5:	(bad)  
  4134a6:	pop    ds
  4134a7:	mov    eax,ds:0x91ce75a5
  4134ac:	cmp    ah,dl
  4134ae:	cmp    DWORD PTR [esi],edi
  4134b0:	dec    ebx
  4134b1:	xchg   ebx,eax
  4134b2:	imul   DWORD PTR es:[edi-0x70]
  4134b6:	cli    
  4134b7:	adc    BYTE PTR [edi-0x5c6f35df],dh
  4134bd:	push   ecx
  4134be:	cs ret 
  4134c0:	jne    0x413541
  4134c2:	shl    BYTE PTR [edi],0x31
  4134c5:	lods   al,BYTE PTR ds:[esi]
  4134c6:	dec    esi
  4134c7:	push   esp
  4134c8:	xlat   BYTE PTR ds:[ebx]
  4134c9:	xchg   DWORD PTR [ebx],ebp
  4134cb:	and    eax,0x537fefcf
  4134d0:	(bad)  
  4134d1:	addr16 leave 
  4134d3:	fldl2e 
  4134d5:	mov    eax,ds:0x9cd91989
  4134da:	xor    ebp,DWORD PTR [esi]
  4134dc:	dec    edi
  4134dd:	jmp    0x1486:0xb13e4324
  4134e4:	out    dx,eax
  4134e5:	mov    ebp,0x6666e6af
  4134ea:	jno    0x41347f
  4134ec:	jmp    0x4134c1
  4134ee:	mov    dl,0xe8
  4134f0:	jg     0x413561
  4134f2:	inc    edi
  4134f3:	bound  ecx,QWORD PTR ds:0x9b100fbc
  4134f9:	pushf  
  4134fa:	inc    eax
  4134fb:	test   BYTE PTR [esi+edi*2-0x8],ch
  4134ff:	xor    edx,DWORD PTR [edi+ebx*4+0x54cab528]
  413506:	jmp    0x41351f
  413508:	xchg   ecx,eax
  413509:	stos   BYTE PTR es:[edi],al
  41350a:	inc    eax
  41350b:	mov    edi,0x4eb8ec57
  413510:	or     ch,ch
  413512:	out    dx,eax
  413513:	out    dx,al
  413514:	repz mov bl,ch
  413517:	(bad)
  41351a:	xchg   ebp,eax
  41351b:	and    BYTE PTR [esi],0x1e
  41351e:	das    
  41351f:	mov    ebx,0x62286cdf
  413524:	rcr    DWORD PTR fs:[ecx+ebp*1],cl
  413528:	push   cs
  413529:	mov    al,BYTE PTR [eax-0x72]
  41352c:	sub    eax,0xeffad7cd
  413531:	push   es
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	out    0xd7,eax
  413535:	xchg   BYTE PTR [edx],ch
  413537:	xor    eax,0xcc7bf38d
  41353c:	(bad)  
  41353d:	bound  ebx,QWORD PTR [ecx+0x3e92e2e7]
  413543:	push   eax
  413544:	mov    al,0xbe
  413546:	or     ch,BYTE PTR [edi-0x1c]
  413549:	aam    0x49
  41354b:	xchg   ecx,eax
  41354c:	addr16 cmp edx,esi
  41354f:	xchg   ebp,eax
  413550:	fxch   st(0)
  413552:	xchg   edi,ebx
  413554:	push   ss
  413555:	xor    dl,BYTE PTR [esi+eax*8+0x34469421]
  41355c:	inc    esi
  41355d:	ins    DWORD PTR es:[edi],dx
  41355e:	je     0x413524
  413560:	out    dx,eax
  413561:	fwait
  413562:	test   BYTE PTR ds:0x77dfd6e2,bh
  413568:	cmc    
  413569:	test   DWORD PTR [ebp+0x128e7773],edi
  41356f:	dec    eax
  413570:	sub    ebx,ebx
  413572:	mov    esp,0x2273d6cd
  413577:	ret    
  413578:	enter  0x5e14,0xb
  41357c:	cmp    BYTE PTR [ecx-0x4383e130],0x2d
  413583:	push   ebx
  413584:	cdq    
  413585:	cmp    al,0xc5
  413587:	xor    al,0xbd
  413589:	fist   DWORD PTR [eax+0x62]
  41358c:	sub    eax,0x3d7d861a
  413591:	fild   WORD PTR [esi]
  413593:	fisubr DWORD PTR [edi]
  413595:	shr    DWORD PTR [eax],1
  413597:	mov    BYTE PTR [ebx+0x10],cl
  41359a:	outs   dx,BYTE PTR ds:[esi]
  41359b:	mov    ss,WORD PTR [ecx+0x3f]
  41359e:	cmp    DWORD PTR [edi+0xb9e8d6f],edx
  4135a4:	and    eax,0xd9e519ed
  4135a9:	sbb    eax,0x9919c6cf
  4135ae:	jns    0x41359d
  4135b0:	pop    ecx
  4135b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135b2:	sti    
  4135b3:	mov    esi,0x9813d78a
  4135b8:	mov    edx,gs
  4135ba:	add    al,BYTE PTR [eax+0x17]
  4135bd:	mov    ds:0x66f0f0e9,eax
  4135c2:	fwait
  4135c3:	mov    al,ds:0x99e27edd
  4135c8:	inc    ebx
  4135c9:	jecxz  0x4135a0
  4135cb:	sbb    edx,DWORD PTR ds:0x4a4280cb
  4135d1:	popf   
  4135d2:	adc    eax,0x9e8b944a
  4135d7:	cli    
  4135d8:	fisttp DWORD PTR [ebx+edx*1-0x56c05c20]
  4135df:	or     ah,ah
  4135e1:	dec    esi
  4135e2:	outs   dx,BYTE PTR ds:[esi]
  4135e3:	in     eax,dx
  4135e4:	add    edx,edi
  4135e6:	int3   
  4135e7:	inc    ecx
  4135e8:	mov    BYTE PTR [edi],ah
  4135ea:	cmp    eax,0xd5e3b7a7
  4135ef:	lea    ebp,[eax]
  4135f1:	or     cl,BYTE PTR ds:0xa4ff8ecd
  4135f7:	(bad)  [ecx+0x657e36ef]
  4135fd:	dec    edx
  4135fe:	sbb    ecx,DWORD PTR [esi-0x6]
  413601:	add    dh,bl
  413603:	iret   
  413604:	aad    0xdf
  413606:	iret   
  413607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413608:	test   al,0x57
  41360a:	bound  ecx,QWORD PTR [eax-0x63]
  41360d:	push   ebp
  41360e:	or     BYTE PTR [ecx+0x4f],ch
  413611:	cmp    eax,0xb555a122
  413616:	inc    ebx
  413617:	dec    ebp
  413618:	lahf   
  413619:	rcr    si,0x68
  41361d:	pop    ss
  41361e:	adc    edx,esi
  413620:	fsubp  st(3),st
  413622:	test   esi,0x65684b3d
  413628:	inc    esp
  413629:	mov    eax,0xaeabb7f1
  41362e:	or     eax,0x5dc20c6a
  413633:	leave  
  413634:	jb     0x4136b3
  413636:	and    edx,DWORD PTR [ecx+0x6b]
  413639:	sti    
  41363a:	ins    BYTE PTR es:[edi],dx
  41363b:	push   ds
  41363c:	push   edi
  41363d:	(bad)  
  41363f:	lods   eax,DWORD PTR ds:[esi]
  413640:	dec    esi
  413641:	mov    dh,0x45
  413643:	daa    
  413644:	sub    al,BYTE PTR [esi]
  413646:	daa    
  413647:	add    BYTE PTR [ebx+0x5a9086ef],dl
  41364d:	ss scas al,BYTE PTR es:[edi]
  41364f:	test   eax,0x4f194d84
  413654:	xchg   ecx,eax
  413655:	test   eax,edx
  413657:	je     0x413612
  413659:	repnz xchg edi,eax
  41365b:	and    bh,BYTE PTR [ecx+0x60]
  41365e:	sbb    DWORD PTR [edx+esi*1+0x70],edx
  413662:	sub    BYTE PTR [eax],cl
  413664:	shl    BYTE PTR [eax+eiz*8+0x2e],cl
  413668:	test   al,0x54
  41366a:	adc    al,0xd3
  41366c:	push   edx
  41366d:	rcr    eax,0xdc
  413670:	ror    eax,1
  413672:	and    bh,0x8
  413675:	sub    al,0xe7
  413677:	mov    al,0xe1
  413679:	push   ebp
  41367a:	jle    0x41366d
  41367c:	add    esi,DWORD PTR [esi+0x13]
  41367f:	xor    cl,BYTE PTR [ebx]
  413681:	shl    DWORD PTR [eax],cl
  413683:	pop    esi
  413684:	cmp    al,0x40
  413686:	gs jbe 0x4136a5
  413689:	gs aaa 
  41368b:	(bad)  
  41368c:	jmp    0xaeb1:0x27123203
  413693:	mov    ss,WORD PTR [eax]
  413695:	inc    eax
  413696:	push   esp
  413697:	sbb    BYTE PTR [edx+esi*2-0x5561ebc2],ch
  41369e:	lea    ebp,[ecx]
  4136a0:	push   ebp
  4136a1:	mov    eax,0x33497c8d
  4136a6:	jle    0x41370d
  4136a8:	mov    edx,0xc1f1c987
  4136ad:	or     eax,0x53f82bc
  4136b2:	cmp    cl,BYTE PTR [edx+0x1c01b3f1]
  4136b8:	fist   DWORD PTR [esi+0x3ba1d1c6]
  4136be:	pop    ebx
  4136bf:	xchg   ecx,eax
  4136c0:	loopne 0x4136dd
  4136c2:	adc    ebx,DWORD PTR [eax]
  4136c4:	(bad)  
  4136c5:	jmp    0x5176:0x986b5fff
  4136cc:	mov    edi,DWORD PTR [eax]
  4136ce:	cmp    eax,0x1ae43022
  4136d3:	fstp   DWORD PTR ds:0x8bf33343
  4136d9:	mov    ?,WORD PTR [eax+0x7f]
  4136dc:	pushf  
  4136dd:	jmp    0x388abc33
  4136e2:	sbb    al,0x8b
  4136e4:	jmp    0xb4d4043e
  4136e9:	sbb    dh,bh
  4136eb:	dec    esp
  4136ec:	mov    edi,0x5efd1af7
  4136f1:	cs push 0xb
  4136f4:	jmp    0x866f7359
  4136f9:	mov    ah,0x36
  4136fb:	ret    
  4136fc:	inc    ebx
  4136fd:	mov    bh,BYTE PTR [edi+esi*8]
  413700:	lahf   
  413701:	jnp    0x413728
  413703:	retf   
  413704:	inc    esi
  413705:	shl    DWORD PTR [edi-0xa82168e],cl
  41370b:	mov    al,BYTE PTR [esi+0x2c54b1e3]
  413711:	mov    ds,WORD PTR [ecx]
  413713:	jnp    0x4136bf
  413715:	jno    0x413779
  413717:	das    
  413718:	imul   ebx,ebp,0xb2eded25
  41371e:	xor    BYTE PTR [edi-0x1d],ch
  413721:	pop    ebx
  413722:	outs   dx,BYTE PTR ds:[esi]
  413723:	ret    0x687c
  413726:	sbb    DWORD PTR [ebx],ebp
  413728:	(bad)  
  413729:	hlt    
  41372a:	adc    ah,BYTE PTR [esi+0x7a]
  41372d:	pop    esi
  41372e:	aas    
  41372f:	repnz ficom WORD PTR [eax-0x60]
  413733:	repnz fdiv DWORD PTR [esi+0x27511aa9]
  41373a:	ror    dl,cl
  41373c:	mov    DWORD PTR [ebp+0xf28e929],esi
  413742:	stc    
  413743:	into   
  413744:	or     al,0x50
  413746:	pop    eax
  413747:	setle  BYTE PTR [eax+eiz*4-0x7e4984fe]
  41374f:	imul   eax,esp,0x2d
  413752:	pop    ebp
  413753:	test   al,0x5d
  413755:	scas   eax,DWORD PTR es:[edi]
  413756:	lods   eax,DWORD PTR ds:[esi]
  413757:	adc    eax,0x295acc32
  41375c:	out    0x5f,eax
  41375e:	mov    eax,0x2d6c82f4
  413763:	adc    dh,BYTE PTR [eax-0x37]
  413766:	inc    ebx
  413767:	cmp    esi,ebx
  413769:	xchg   esp,eax
  41376a:	aaa    
  41376b:	ins    BYTE PTR es:[edi],dx
  41376c:	sbb    ebx,DWORD PTR [ebx-0x25]
  41376f:	fist   WORD PTR ss:[edx+0x6915b4a9]
  413776:	aad    0xe5
  413778:	add    DWORD PTR [ecx+0x19],edi
  41377b:	xlat   BYTE PTR ds:[ebx]
  41377c:	cmp    esi,eax
  41377e:	lock sub DWORD PTR [eax+0x59a0e217],edi
  413785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413786:	or     al,0x8d
  413788:	and    DWORD PTR [eax+0x6fe0f2d3],ebx
  41378e:	lods   eax,DWORD PTR ds:[esi]
  41378f:	outs   dx,BYTE PTR ds:[esi]
  413790:	addr16 dec esi
  413792:	mov    ah,BYTE PTR [edi]
  413794:	nop
  413795:	out    dx,eax
  413796:	jbe    0x4137b2
  413798:	push   es
  413799:	xor    ecx,DWORD PTR [esi+0x71]
  41379c:	test   BYTE PTR [edx-0x25],ah
  41379f:	das    
  4137a0:	push   esp
  4137a1:	xchg   BYTE PTR [esi-0x66e9cbe5],dh
  4137a7:	dec    ebx
  4137a8:	outs   dx,DWORD PTR ds:[esi]
  4137a9:	adc    eax,0x46be50bd
  4137ae:	call   0x223ff3a5
  4137b3:	xor    eax,0x5486e6ca
  4137b8:	imul   ebp,DWORD PTR [ecx-0x4292f3c6],0x3c2fa712
  4137c2:	pop    ds
  4137c3:	nop
  4137c4:	(bad)  
  4137c5:	loopne 0x4137c2
  4137c7:	mov    bh,0x8c
  4137c9:	jecxz  0x4137f6
  4137cb:	or     al,bh
  4137cd:	sbb    ah,ah
  4137cf:	test   al,0x21
  4137d1:	retf   0x5ec2
  4137d4:	out    dx,eax
  4137d5:	xor    DWORD PTR [eax-0x7e278905],0x18
  4137dc:	adc    al,0xcb
  4137de:	adc    ebp,esi
  4137e0:	add    DWORD PTR [ebx+0x4a],esi
  4137e3:	sub    dl,BYTE PTR [eax+0x73]
  4137e6:	ret    0xd67d
  4137e9:	add    ch,BYTE PTR [ecx]
  4137eb:	ins    DWORD PTR es:[edi],dx
  4137ec:	mov    ebp,ebx
  4137ee:	push   edi
  4137ef:	jmp    0xe2b5:0x168c3a50
  4137f6:	test   al,0xce
  4137f8:	loop   0x413842
  4137fa:	mov    ah,0x97
  4137fc:	sbb    eax,0xf137b825
  413801:	inc    edi
  413802:	rcr    ch,cl
  413804:	inc    edx
  413805:	je     0x4137bd
  413807:	push   esi
  413808:	jge    0x4137c1
  41380a:	pop    ebp
  41380b:	sub    ah,BYTE PTR ss:[edi]
  41380e:	pop    edx
  41380f:	popa   
  413810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413811:	jno    0x41388c
  413813:	std    
  413814:	jae    0x41382f
  413816:	fiadd  WORD PTR [eax+ebx*8-0x9]
  41381a:	je     0x4137da
  41381c:	jle    0x413860
  41381e:	inc    ecx
  41381f:	fs mov ecx,0x5904be5a
  413825:	xor    eax,0x79d3b432
  41382a:	xlat   BYTE PTR ds:[ebx]
  41382b:	cli    
  41382c:	ja     0x4137e5
  41382e:	mov    ecx,0x536cf576
  413833:	xor    ebp,DWORD PTR [edi-0x4243e4f6]
  413839:	je     0x4137f0
  41383b:	push   esp
  41383c:	test   DWORD PTR [esi-0x38],ebx
  41383f:	or     BYTE PTR ds:0x510f7b85,ah
  413845:	daa    
  413846:	inc    ebp
  413847:	loopne 0x413822
  413849:	push   ebp
  41384a:	(bad)  
  41384b:	push   ds
  41384c:	mov    esp,0x746de020
  413851:	cmp    al,0xec
  413853:	jae    0x413824
  413855:	cmp    bh,BYTE PTR [esi-0x34152a63]
  41385b:	les    esp,FWORD PTR [ebx]
  41385d:	mov    al,ds:0xddfaa35a
  413862:	call   0x4ecc2221
  413867:	mov    dl,0xb6
  413869:	not    cl
  41386b:	dec    eax
  41386c:	dec    eax
  41386d:	adc    al,0x43
  41386f:	add    edx,ecx
  413871:	push   es
  413872:	cmp    dh,BYTE PTR [edx+eiz*8-0x16]
  413876:	dec    edx
  413877:	call   0x5751:0xfc0f2b16
  41387e:	pop    ss
  41387f:	mov    ebx,DWORD PTR fs:[ebp-0x34]
  413883:	mov    al,0xac
  413885:	ins    BYTE PTR es:[edi],dx
  413886:	push   ebp
  413887:	out    0x77,al
  413889:	les    edi,FWORD PTR [edx+ecx*2+0x67]
  41388d:	popf   
  41388e:	clc    
  41388f:	mov    cl,BYTE PTR [ebx-0x10]
  413892:	ss pop eax
  413894:	pop    es
  413895:	dec    eax
  413896:	rcl    BYTE PTR [ebx+0x73],0xb0
  41389a:	(bad)  
  41389b:	lahf   
  41389c:	cli    
  41389d:	cmp    eax,0x6fe02a1d
  4138a2:	sub    eax,edx
  4138a4:	or     BYTE PTR [esi-0x10f9e89],bh
  4138aa:	xor    bl,dl
  4138ac:	daa    
  4138ad:	inc    eax
  4138ae:	mov    WORD PTR [esi+0x8f231f8],?
  4138b4:	pop    esi
  4138b5:	jle    0x4138c4
  4138b7:	push   cs
  4138b8:	cmp    ch,bh
  4138ba:	add    eax,0x2062aed0
  4138bf:	repz repnz mov dh,0xd4
  4138c3:	outs   dx,BYTE PTR ds:[esi]
  4138c4:	out    dx,eax
  4138c5:	inc    edx
  4138c6:	and    DWORD PTR [edi+0x32],esi
  4138c9:	daa    
  4138ca:	mov    ds:0x23040c30,al
  4138cf:	jnp    0x413908
  4138d1:	jg     0x4138d1
  4138d3:	scas   eax,DWORD PTR es:[edi]
  4138d4:	jns    0x4138c7
  4138d6:	and    al,0x93
  4138d8:	push   0xae0c8fad
  4138dd:	and    bl,BYTE PTR [eax+0x64ff9408]
  4138e3:	sub    edi,DWORD PTR es:[eax+0x52]
  4138e7:	jo     0x413930
  4138e9:	in     al,0x8
  4138eb:	retf   0xac45
  4138ee:	adc    ecx,DWORD PTR [edx]
  4138f0:	xchg   BYTE PTR [edx+ebp*2-0x7572de29],ah
  4138f7:	adc    edx,DWORD PTR [ebx+edx*1+0x7f1faa0d]
  4138fe:	inc    ecx
  4138ff:	jae    0x4138ba
  413901:	jecxz  0x413982
  413903:	les    esp,FWORD PTR [ecx-0x1457c484]
  413909:	aaa    
  41390a:	mov    DWORD PTR [eax-0x620548b7],esp
  413910:	sbb    DWORD PTR [eax+0x34275974],0xd
  413917:	inc    edi
  413918:	pop    DWORD PTR [ebx-0x7e]
  41391b:	cli    
  41391c:	xchg   ecx,eax
  41391d:	lods   eax,DWORD PTR ds:[esi]
  41391e:	push   ss
  41391f:	inc    edi
  413920:	inc    ecx
  413921:	sbb    BYTE PTR [esi-0x21012797],dh
  413927:	inc    ebx
  413928:	and    esp,esp
  41392a:	add    ebp,ebp
  41392c:	pop    es
  41392d:	dec    esi
  41392e:	xchg   esi,eax
  41392f:	stos   DWORD PTR es:[edi],eax
  413930:	lahf   
  413931:	(bad)  
  413933:	test   eax,0xa26fd027
  413938:	xchg   DWORD PTR [eax-0x1f],edi
  41393b:	add    eax,edx
  41393d:	xlat   BYTE PTR ds:[ebx]
  41393e:	adc    DWORD PTR ds:[edx],eax
  413941:	sub    al,0x8d
  413943:	out    dx,al
  413944:	push   ss
  413945:	scas   al,BYTE PTR es:[edi]
  413946:	int3   
  413947:	pusha  
  413948:	pop    eax
  413949:	mov    BYTE PTR [esi+0x6],cl
  41394c:	stos   BYTE PTR es:[edi],al
  41394d:	rcl    esi,0xd9
  413950:	ins    BYTE PTR es:[edi],dx
  413951:	scas   eax,DWORD PTR es:[edi]
  413952:	cmp    eax,0x946b5cae
  413957:	jmp    0x413907
  413959:	mov    eax,0x5bd8b50d
  41395e:	dec    BYTE PTR ds:0xf671ef0
  413964:	jae    0x413929
  413966:	sub    BYTE PTR [ecx-0x257304f4],bl
  41396c:	cmp    bh,dl
  41396e:	xor    BYTE PTR [edi-0x491b25ea],dh
  413974:	add    ch,BYTE PTR [eax*1+0x740f7cd0]
  41397b:	in     al,0x81
  41397d:	dec    edi
  41397e:	nop
  41397f:	xchg   edi,eax
  413980:	mov    esi,0x6a91dbe5
  413985:	inc    ebp
  413986:	loope  0x413983
  413988:	mov    dh,BYTE PTR [edi]
  41398a:	mov    bh,0xe7
  41398c:	xor    al,0x5d
  41398e:	loope  0x4139b9
  413990:	mov    ds,WORD PTR [ebx+0x79]
  413993:	loope  0x41397e
  413995:	hlt    
  413996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413997:	sbb    eax,0xd8af6c95
  41399c:	xchg   ebp,eax
  41399d:	mov    ds:0x23b1fe6c,eax
  4139a2:	jcxz   0x413976
  4139a5:	or     esp,ebp
  4139a7:	cmp    al,BYTE PTR [edx+ecx*1]
  4139aa:	mov    dh,dl
  4139ac:	mov    ds:0x967e21e2,eax
  4139b1:	jmp    0x38fc8377
  4139b6:	gs jmp 0x413a1b
  4139b9:	sti    
  4139ba:	xchg   ebp,eax
  4139bb:	in     eax,dx
  4139bc:	mov    edx,0x7c5d2424
  4139c1:	(bad)  
  4139c2:	repz fcmovnbe st,st(5)
  4139c5:	retf   0xf7e6
  4139c8:	scas   eax,DWORD PTR es:[edi]
  4139c9:	arpl   si,bx
  4139cb:	ds mov al,0x1d
  4139ce:	rcr    BYTE PTR [ebx+0x62b9282],1
  4139d4:	add    ebp,edi
  4139d6:	add    DWORD PTR [ebx+0x9ba5512],ebx
  4139dc:	popa   
  4139dd:	xchg   esp,eax
  4139de:	sub    al,0x46
  4139e0:	dec    edx
  4139e1:	mov    eax,DWORD PTR [esi+0x7bc95162]
  4139e7:	popa   
  4139e8:	xor    DWORD PTR cs:[ecx+0x3d],edi
  4139ec:	pop    ecx
  4139ed:	into   
  4139ee:	pusha  
  4139ef:	nop
  4139f0:	or     eax,0x8e0d6611
  4139f5:	or     ecx,edi
  4139f7:	std    
  4139f8:	cwde   
  4139f9:	sbb    al,bl
  4139fb:	push   edi
  4139fc:	jge    0x413992
  4139fe:	cmp    cl,dl
  413a00:	(bad)  
  413a01:	fild   WORD PTR [edi+0x68c96c84]
  413a07:	sti    
  413a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a09:	jb     0x4139b0
  413a0b:	pop    ecx
  413a0c:	inc    esp
  413a0d:	adc    BYTE PTR [ecx+0x199bffdd],bl
  413a13:	jbe    0x4139f5
  413a15:	or     esp,DWORD PTR [ecx+0x22605d]
  413a1b:	pop    eax
  413a1c:	gs jns 0x4139ac
  413a1f:	fnsave [edi-0x59]
  413a22:	xchg   esp,eax
  413a23:	inc    edi
  413a24:	xchg   esi,ebx
  413a26:	cli    
  413a27:	fisttp DWORD PTR [ebx]
  413a29:	hlt    
  413a2a:	mov    WORD PTR [ebx-0x76ec5c96],gs
  413a30:	jno    0x4139c9
  413a32:	xor    BYTE PTR [ebp-0x3f],dl
  413a35:	scas   al,BYTE PTR es:[edi]
  413a36:	and    al,0xef
  413a38:	loop   0x413a33
  413a3a:	pop    ebp
  413a3b:	test   al,0xab
  413a3d:	dec    esi
  413a3e:	(bad)  
  413a3f:	shl    esp,cl
  413a41:	jmp    0xb2e:0xd07c01f6
  413a48:	jo     0x413aac
  413a4a:	sahf   
  413a4b:	call   0x185c:0xa39a4867
  413a52:	arpl   cx,bx
  413a54:	pusha  
  413a55:	ret    
  413a56:	jp     0x413a82
  413a58:	mov    al,ds:0xc1242b38
  413a5d:	xchg   ecx,eax
  413a5e:	add    eax,0x643519c9
  413a63:	push   0x75005679
  413a68:	popa   
  413a69:	in     al,dx
  413a6a:	or     eax,0xc8cc673b
  413a6f:	sbb    DWORD PTR [ebx+0x5a5e19c],eax
  413a75:	and    ecx,DWORD PTR [ecx-0x762329b]
  413a7b:	fld    TBYTE PTR [edx+0x444dfe]
  413a81:	outs   dx,BYTE PTR ds:[esi]
  413a82:	xor    DWORD PTR [ebx-0x71],edi
  413a85:	xchg   esi,eax
  413a86:	jl     0x413aef
  413a88:	rcpps  xmm3,XMMWORD PTR [edi-0x731eca5e]
  413a8f:	or     eax,eax
  413a91:	fprem  
  413a93:	pusha  
  413a94:	jecxz  0x413a3a
  413a96:	and    edi,DWORD PTR [eax-0x45]
  413a99:	inc    esp
  413a9a:	cmp    bl,BYTE PTR [ebx+0x339ff4ce]
  413aa0:	stos   DWORD PTR es:[edi],eax
  413aa1:	js     0x413a73
  413aa3:	push   ds
  413aa4:	push   edi
  413aa5:	dec    edi
  413aa6:	mov    ah,0x5f
  413aa8:	jo     0x413a71
  413aaa:	fcomp  DWORD PTR [ebx+0x34d64136]
  413ab0:	sbb    al,0x1e
  413ab2:	push   eax
  413ab3:	push   ss
  413ab4:	inc    ebp
  413ab5:	mov    al,0x34
  413ab7:	lea    eax,[ecx+ebx*2+0x1224b8db]
  413abe:	push   esi
  413abf:	aas    
  413ac0:	mov    esi,0x8f4f8db
  413ac5:	pusha  
  413ac6:	adc    eax,0x2d2d00c
  413acb:	scas   eax,DWORD PTR es:[edi]
  413acc:	push   ds
  413acd:	arpl   WORD PTR [edi+eax*2-0x6],si
  413ad1:	lock ret 0xfe89
  413ad5:	fcom   QWORD PTR [eax-0x36]
  413ad8:	(bad)  
  413ad9:	call   0x95b2:0x602a32c2
  413ae0:	pop    esi
  413ae1:	shl    DWORD PTR ds:0xfbd3f252,cl
  413ae7:	mov    ah,BYTE PTR [ebx]
  413ae9:	sti    
  413aea:	mov    edx,0x25975e57
  413aef:	mov    edi,eax
  413af1:	retf   
  413af2:	in     eax,dx
  413af3:	xchg   edi,eax
  413af4:	jno    0x413a9a
  413af6:	jle    0x413b6e
  413af8:	xor    DWORD PTR [ebx-0x58],esi
  413afb:	outs   dx,BYTE PTR ds:[esi]
  413afc:	scas   al,BYTE PTR es:[edi]
  413afd:	lea    edi,[ebp+0x2a2fcd55]
  413b03:	mov    al,ds:0xadd0189a
  413b08:	not    BYTE PTR [esi+0x66]
  413b0b:	scas   al,BYTE PTR es:[edi]
  413b0c:	scas   al,BYTE PTR es:[edi]
  413b0d:	mov    ecx,0xd685c52b
  413b12:	xchg   esi,eax
  413b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b14:	sahf   
  413b15:	dec    ecx
  413b16:	push   es
  413b17:	and    al,cl
  413b19:	ins    DWORD PTR es:[edi],dx
  413b1a:	jmp    0x8024b18
  413b1f:	mov    al,0x10
  413b21:	inc    ecx
  413b22:	inc    ebp
  413b23:	(bad)  
  413b24:	enter  0x11bb,0xbf
  413b28:	je     0x413ad3
  413b2a:	pop    ds
  413b2b:	ret    
  413b2c:	inc    ecx
  413b2d:	fld    QWORD PTR [edx]
  413b2f:	ficom  DWORD PTR ds:[eax+0x1b]
  413b33:	call   0xaf910764
  413b38:	in     al,dx
  413b39:	jns    0x413b81
  413b3b:	popf   
  413b3c:	popa   
  413b3d:	cmp    BYTE PTR [ebp-0xe],0xf0
  413b41:	hlt    
  413b42:	pop    eax
  413b43:	cmp    ebp,DWORD PTR [ebx-0x65]
  413b46:	mov    BYTE PTR [eax+ebx*2-0x46],cl
  413b4a:	fcom   DWORD PTR [ebp+edx*4+0x9767d6b]
  413b51:	repnz xchg ebp,eax
  413b53:	mov    esp,0x48fbe215
  413b58:	cli    
  413b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b5a:	or     dh,BYTE PTR [edx+0x79ac0094]
  413b60:	(bad)  
  413b61:	sub    BYTE PTR [edi],dl
  413b63:	jmp    0x5aea:0x57abd5f
  413b6a:	or     ecx,DWORD PTR [eax+0x22720c0d]
  413b70:	adc    eax,0xe36f2cc3
  413b75:	pusha  
  413b76:	mov    eax,ds:0xd9102fe8
  413b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b7c:	cmp    DWORD PTR [edi+ebp*1-0x516b78a7],edi
  413b83:	nop
  413b84:	mov    ecx,0xb361ef2e
  413b89:	ficomp WORD PTR [eax+0x502c4bcd]
  413b8f:	pop    ds
  413b90:	jp     0x413b3d
  413b92:	lods   al,BYTE PTR ds:[esi]
  413b93:	in     al,dx
  413b94:	ror    DWORD PTR ds:0xaed27bbf,0x8b
  413b9b:	xchg   esp,eax
  413b9c:	or     cl,ch
  413b9e:	inc    ecx
  413b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ba0:	shl    BYTE PTR [edi+0x67457935],1
  413ba6:	dec    esp
  413ba7:	lods   al,BYTE PTR ds:[esi]
  413ba8:	ds push ecx
  413baa:	pop    ds
  413bab:	mov    BYTE PTR [ebx+0x70],0xe
  413baf:	pop    edx
  413bb0:	(bad)  
  413bb2:	sbb    al,0x8b
  413bb4:	pushf  
  413bb5:	out    0x6c,al
  413bb7:	scas   eax,DWORD PTR es:[edi]
  413bb8:	test   al,0x9d
  413bba:	repnz (bad) 
  413bbc:	inc    ebp
  413bbd:	adc    bh,ah
  413bbf:	mov    bh,0x4a
  413bc1:	lods   eax,DWORD PTR ds:[esi]
  413bc2:	fimul  WORD PTR ds:0x8d8a9321
  413bc8:	mov    ch,0xd1
  413bca:	mov    ch,0xf8
  413bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bcd:	stc    
  413bce:	dec    eax
  413bcf:	pop    ebx
  413bd0:	enter  0x5ea8,0x4e
  413bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bd5:	test   eax,0x925910dc
  413bda:	cmc    
  413bdb:	xchg   edx,eax
  413bdc:	fst    DWORD PTR [ebp-0x67]
  413bdf:	clc    
  413be0:	xor    al,0x38
  413be2:	retf   0x2395
  413be5:	inc    ecx
  413be6:	cs (bad) 
  413be8:	dec    esp
  413be9:	loop   0x413bc4
  413beb:	mov    ch,0x57
  413bed:	inc    ecx
  413bee:	inc    ebp
  413bef:	data16 cmp bl,dh
  413bf2:	push   esp
  413bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bf4:	and    DWORD PTR [ecx-0x34],edx
  413bf7:	mov    ds:0x27a85ffd,al
  413bfc:	loope  0x413b8d
  413bfe:	call   0xb46a9f4c
  413c03:	add    eax,0x8664e46a
  413c08:	cmp    DWORD PTR [edx*4+0x2bb5ddd9],0x125170cb
  413c13:	loopne 0x413c18
  413c15:	(bad)  
  413c16:	add    esi,DWORD PTR [esi+0x5b]
  413c19:	mov    ds:0xe3995ccd,al
  413c1e:	inc    ecx
  413c1f:	cmp    al,0x45
  413c21:	xchg   esp,eax
  413c22:	stos   BYTE PTR es:[edi],al
  413c23:	ins    DWORD PTR es:[edi],dx
  413c24:	or     cl,BYTE PTR [ecx-0x232c8625]
  413c2a:	idiv   BYTE PTR es:[ebx-0x16f3a179]
  413c31:	test   DWORD PTR [esi-0x62],esi
  413c34:	sub    BYTE PTR [esi+0x736c44c5],ch
  413c3a:	xor    eax,0x67db3d1a
  413c3f:	sub    edi,esp
  413c41:	add    al,0xe2
  413c43:	jb     0x413c44
  413c45:	jmp    0x413bcf
  413c47:	sbb    BYTE PTR [edx-0x22128592],bh
  413c4d:	cs rep lods eax,DWORD PTR fs:[esi]
  413c51:	popf   
  413c52:	cwde   
  413c53:	inc    ecx
  413c54:	mov    al,ds:0x7acbba8e
  413c59:	pushf  
  413c5a:	lds    ebp,FWORD PTR [edx+0x38]
  413c5d:	lods   eax,DWORD PTR ds:[esi]
  413c5e:	stc    
  413c5f:	jmp    0xa536ad5
  413c64:	ds cmc 
  413c66:	fstp   TBYTE PTR [edi-0x80]
  413c69:	sbb    BYTE PTR [edx+0xfe5ce38],0xf0
  413c70:	mov    al,ds:0x28fa3191
  413c75:	pop    ebx
  413c76:	pop    esp
  413c77:	jb     0x413cb4
  413c79:	inc    edi
  413c7a:	add    bh,ch
  413c7c:	pusha  
  413c7d:	(bad)  
  413c7e:	hlt    
  413c7f:	sti    
  413c80:	pop    ds
  413c81:	cmp    DWORD PTR [edx-0x16630edb],edx
  413c87:	in     al,0xd7
  413c89:	hlt    
  413c8a:	xchg   ebx,eax
  413c8b:	fisubr WORD PTR [edi]
  413c8d:	cmp    al,0x4b
  413c8f:	bound  ebp,QWORD PTR [ebp+0x47618127]
  413c95:	xor    eax,0x9f946e74
  413c9a:	mov    al,BYTE PTR [ebp+0x2d]
  413c9d:	sar    BYTE PTR [eax],1
  413c9f:	test   al,0xd6
  413ca1:	out    dx,eax
  413ca2:	cmp    ecx,DWORD PTR [ebx+0x26a901f0]
  413ca8:	or     BYTE PTR [ebx+0x76],dl
  413cab:	in     eax,0x1d
  413cad:	call   0x77e4f07d
  413cb2:	into   
  413cb3:	int3   
  413cb4:	adc    al,0x1e
  413cb6:	xchg   esi,eax
  413cb7:	mov    ah,0xf1
  413cb9:	dec    esi
  413cba:	mov    eax,0xb6960b7f
  413cbf:	sbb    DWORD PTR [ebx+esi*4],esp
  413cc2:	stc    
  413cc3:	mov    ebp,0x35bbbd89
  413cc8:	es cmp al,0x11
  413ccb:	dec    BYTE PTR [ebp+0x1f122202]
  413cd1:	dec    eax
  413cd2:	xchg   edx,eax
  413cd3:	sar    DWORD PTR [esi],1
  413cd5:	hlt    
  413cd6:	inc    cx
  413cd8:	xor    ch,BYTE PTR [esi]
  413cda:	in     al,0xd9
  413cdc:	xor    BYTE PTR [ecx],ch
  413cde:	add    eax,0x45938faa
  413ce3:	cwde   
  413ce4:	pop    ebp
  413ce5:	xchg   edx,eax
  413ce6:	nop
  413ce7:	cld    
  413ce8:	dec    edi
  413ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cea:	xchg   ebx,eax
  413ceb:	lahf   
  413cec:	cs adc al,0xbe
  413cef:	jg     0x413d27
  413cf1:	mov    ebp,0xb6795695
  413cf6:	hlt    
  413cf7:	dec    eax
  413cf8:	aam    0xe6
  413cfa:	sbb    ebp,ecx
  413cfc:	and    bl,BYTE PTR [eax-0x30f887ba]
  413d02:	sub    edi,ebx
  413d04:	test   al,0x22
  413d06:	cwde   
  413d07:	out    dx,eax
  413d08:	fld    QWORD PTR [eax]
  413d0a:	lahf   
  413d0b:	pop    ss
  413d0c:	mov    esi,0x791ced8e
  413d11:	pop    es
  413d12:	loop   0x413cfa
  413d14:	jbe    0x413ca3
  413d16:	inc    ebp
  413d17:	iret   
  413d18:	iret   
  413d19:	sbb    ch,BYTE PTR [edi+0x42]
  413d1c:	mov    ebp,0xcff011fd
  413d21:	jne    0x413cac
  413d23:	xor    eax,0xae83fd40
  413d28:	outs   dx,DWORD PTR ds:[esi]
  413d29:	push   ebx
  413d2a:	cwde   
  413d2b:	sub    ebx,edi
  413d2d:	fwait
  413d2e:	pop    ebp
  413d2f:	retf   0x7fd
  413d32:	xchg   edi,eax
  413d33:	jae    0x413cd7
  413d35:	lock clc 
  413d37:	adc    eax,0xbaf256b1
  413d3c:	jo     0x413d9e
  413d3e:	jmp    0x413d49
  413d40:	jecxz  0x413d69
  413d42:	jg     0x413d5a
  413d44:	sbb    eax,DWORD PTR [esp+eax*1+0x1b566ca6]
  413d4b:	inc    edx
  413d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4d:	lods   eax,DWORD PTR ds:[esi]
  413d4e:	out    0x60,al
  413d50:	ret    0x86d5
  413d53:	loope  0x413d34
  413d55:	jecxz  0x413d59
  413d57:	push   ss
  413d58:	inc    edi
  413d59:	mov    al,ds:0xc6f2213c
  413d5e:	in     al,0xd7
  413d60:	aaa    
  413d61:	das    
  413d62:	adc    dl,BYTE PTR [ebx-0x1c369a7]
  413d68:	add    eax,0x6b61b364
  413d6d:	inc    edx
  413d6e:	in     al,dx
  413d6f:	repz add edi,ebp
  413d72:	ret    
  413d73:	ja     0x413d54
  413d75:	jle    0x413d83
  413d77:	pop    eax
  413d78:	pop    ecx
  413d79:	rcr    DWORD PTR [ebx+ecx*1-0x71fd769c],1
  413d80:	sti    
  413d81:	sub    ebp,edi
  413d83:	inc    ecx
  413d84:	jmp    0xbcba7fcb
  413d89:	daa    
  413d8a:	sub    eax,0xa88714ed
  413d8f:	xor    DWORD PTR [eax],eax
  413d91:	sahf   
  413d92:	mov    DWORD PTR [eax-0x4b],eax
  413d95:	mov    eax,DWORD PTR [eax-0x24]
  413d98:	mov    BYTE PTR [edi],bh
  413d9a:	cdq    
  413d9b:	add    eax,DWORD PTR [eax+edx*1-0x74]
  413d9f:	(bad)  
  413da1:	mul    esi
  413da3:	fcmovnbe st,st(4)
  413da5:	adc    eax,0xda501b91
  413daa:	mov    ds:0x2aae59b7,eax
  413daf:	cmp    eax,0x3e9973ca
  413db4:	push   esp
  413db5:	push   ebp
  413db6:	xor    dh,al
  413db8:	imul   DWORD PTR [esi+0x1ec38739]
  413dbe:	cmp    edi,DWORD PTR [ecx+0x1e]
  413dc1:	cli    
  413dc2:	mov    WORD PTR [edx],gs
  413dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dc5:	adc    eax,DWORD PTR [edx]
  413dc7:	inc    esi
  413dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dc9:	neg    DWORD PTR [ebp+0x72]
  413dcc:	adc    eax,0x867569b3
  413dd1:	jo     0x413da4
  413dd3:	push   es
  413dd4:	jbe    0x413d81
  413dd6:	cwde   
  413dd7:	pop    esi
  413dd8:	add    bl,al
  413dda:	pop    esp
  413ddb:	(bad)  
  413ddc:	dec    ebx
  413ddd:	outs   dx,DWORD PTR ds:[esi]
  413dde:	xchg   esi,eax
  413ddf:	int3   
  413de0:	sub    dl,dl
  413de2:	pusha  
  413de3:	aaa    
  413de4:	pop    edi
  413de5:	fdivr  QWORD PTR [esi]
  413de7:	pushf  
  413de8:	(bad)  
  413de9:	inc    DWORD PTR [ebx-0x20]
  413dec:	pop    ss
  413ded:	clc    
  413dee:	test   eax,0x7e523c30
  413df3:	pop    ss
  413df4:	sbb    al,0xa3
  413df6:	xchg   ebx,eax
  413df7:	rcl    DWORD PTR [esi+0x16],1
  413dfa:	add    DWORD PTR [edx+0x4e],ebx
  413dfd:	inc    ebx
  413dfe:	sub    BYTE PTR [ecx-0x2e15e7af],al
  413e04:	xchg   ebx,eax
  413e05:	outs   dx,BYTE PTR ds:[esi]
  413e06:	aad    0x4d
  413e08:	xchg   esi,eax
  413e09:	in     eax,dx
  413e0a:	mov    ds:0xee0b564,eax
  413e0f:	jns    0x413e48
  413e11:	sti    
  413e12:	jno    0x413dd5
  413e14:	dec    ebx
  413e15:	imul   ebx,DWORD PTR [edx+0x75006510],0x56229389
  413e1f:	push   0x59
  413e21:	and    ch,BYTE PTR [eax+0x47]
  413e24:	adc    BYTE PTR [ecx],al
  413e26:	mov    al,0x3f
  413e28:	pusha  
  413e29:	or     ebx,DWORD PTR [edi+0x17ef230e]
  413e2f:	in     al,dx
  413e30:	inc    ebx
  413e31:	rcr    eax,1
  413e33:	in     al,0xe
  413e35:	inc    ebp
  413e36:	jo     0x413dea
  413e38:	adc    ch,ah
  413e3a:	jp     0x413eb5
  413e3c:	popf   
  413e3d:	out    dx,al
  413e3e:	mov    ebx,0x59fa395c
  413e43:	and    dl,bl
  413e45:	or     esi,DWORD PTR [eax+0x31]
  413e48:	xor    dh,BYTE PTR [ebp-0x7]
  413e4b:	mov    bl,0xf5
  413e4d:	push   ecx
  413e4e:	ds push esi
  413e50:	jp     0x413dec
  413e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e53:	in     eax,0x85
  413e55:	les    ebp,FWORD PTR [esi+eiz*1-0x12]
  413e59:	cmp    al,0x7c
  413e5b:	inc    DWORD PTR [esi-0x20]
  413e5e:	fmul   st,st(0)
  413e60:	imul   edx,DWORD PTR [ebx+0x2f],0x49
  413e64:	push   ecx
  413e65:	mov    bh,BYTE PTR [eax]
  413e67:	lods   eax,DWORD PTR ds:[esi]
  413e68:	ins    DWORD PTR es:[edi],dx
  413e69:	ret    0x5350
  413e6c:	dec    edx
  413e6d:	pop    cx
  413e6f:	ins    BYTE PTR es:[edi],dx
  413e70:	test   eax,0x69cfabdb
  413e75:	aas    
  413e76:	bnd jb 0x413e4a
  413e79:	fld    TBYTE PTR [ecx]
  413e7b:	and    cl,dh
  413e7d:	sbb    dl,BYTE PTR [edi-0x590b5525]
  413e83:	pop    es
  413e84:	out    0x8,al
  413e86:	xor    BYTE PTR [edx+0x24400a0c],bl
  413e8c:	mov    ds:0x81c9211a,eax
  413e91:	lahf   
  413e92:	lods   al,BYTE PTR ds:[esi]
  413e93:	push   eax
  413e94:	mov    ds:0xec1847c7,al
  413e99:	xchg   ecx,eax
  413e9a:	bound  esp,QWORD PTR [ebx+edx*4+0x6b]
  413e9e:	cmp    ecx,DWORD PTR [edx-0x7a]
  413ea1:	mov    esp,0xff4d9c21
  413ea6:	add    BYTE PTR [ebx+eiz*8-0x5dd3716e],cl
  413ead:	jae    0x413e7d
  413eaf:	bound  edi,QWORD PTR [eax]
  413eb1:	add    al,0xf9
  413eb3:	jecxz  0x413e74
  413eb5:	jp     0x413e49
  413eb7:	add    BYTE PTR [edx-0x68b76a5c],ah
  413ebd:	jo     0x413ee0
  413ebf:	inc    ebx
  413ec0:	daa    
  413ec1:	mov    ecx,0xf762b735
  413ec6:	lods   al,BYTE PTR ds:[esi]
  413ec7:	or     ebx,DWORD PTR [ebp+0x79]
  413eca:	retf   0x481d
  413ecd:	jno    0x413f0b
  413ecf:	imul   edi,edi,0x48
  413ed2:	push   esi
  413ed3:	dec    ebp
  413ed4:	hlt    
  413ed5:	lock push ecx
  413ed7:	(bad)  
  413ed8:	out    0x21,al
  413eda:	cmc    
  413edb:	aam    0x89
  413edd:	dec    eax
  413ede:	frstor ds:0x54805c84
  413ee4:	and    esp,DWORD PTR [esi+0x4]
  413ee7:	fld    TBYTE PTR [esi]
  413ee9:	inc    esi
  413eea:	sbb    ecx,ecx
  413eec:	jecxz  0x413f0f
  413eee:	hlt    
  413eef:	push   cs
  413ef0:	cs pusha 
  413ef2:	pop    ss
  413ef3:	mov    BYTE PTR [edi],al
  413ef5:	sbb    edx,esp
  413ef7:	xchg   ebx,eax
  413ef8:	(bad)  
  413ef9:	out    0x24,al
  413efb:	xchg   al,bh
  413efd:	jb     0x413eb6
  413eff:	fisttp WORD PTR [esi]
  413f01:	aam    0xcf
  413f03:	cmp    bh,ah
  413f05:	rcr    bh,0xfc
  413f08:	mov    al,0x64
  413f0a:	xchg   ecx,eax
  413f0b:	push   cs
  413f0c:	fmul   DWORD PTR [ebp-0x3f939eb8]
  413f12:	inc    esi
  413f13:	cli    
  413f14:	xchg   ebx,ecx
  413f16:	push   0x760e237e
  413f1b:	inc    ebx
  413f1c:	inc    edi
  413f1d:	mov    cl,0xc3
  413f1f:	fadd   QWORD PTR [edx-0x293beea9]
  413f25:	(bad)  
  413f26:	adc    ecx,DWORD PTR [ebx]
  413f28:	xchg   ebp,eax
  413f29:	cmp    eax,0xe78bf5f8
  413f2e:	int    0x6d
  413f30:	loop   0x413f6c
  413f32:	es xchg ebx,eax
  413f34:	pop    ss
  413f35:	ss inc esp
  413f37:	and    DWORD PTR [ebx],ecx
  413f39:	(bad)  
  413f3a:	sub    al,0x39
  413f3c:	push   0xb12a0802
  413f41:	lahf   
  413f42:	cwde   
  413f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f44:	(bad)  
  413f45:	dec    esp
  413f46:	(bad)  
  413f47:	pop    ss
  413f48:	push   0x42
  413f4a:	cmc    
  413f4b:	js     0x413fb1
  413f4d:	outs   dx,BYTE PTR ds:[esi]
  413f4e:	mov    WORD PTR [ebp-0x454013b7],gs
  413f54:	rcr    DWORD PTR [esi+0x7c385c85],1
  413f5a:	lahf   
  413f5b:	sbb    eax,0xf0117f2e
  413f60:	loop   0x413f23
  413f62:	push   es
  413f63:	sbb    ebp,DWORD PTR [ecx+0x60]
  413f66:	out    0x1d,eax
  413f68:	or     BYTE PTR [esi+ebp*1],cl
  413f6b:	inc    ebp
  413f6c:	or     DWORD PTR [edi],esi
  413f6e:	fstp   TBYTE PTR [esi-0x4cab1955]
  413f74:	pop    ds
  413f75:	dec    esi
  413f76:	rcr    bl,1
  413f78:	test   BYTE PTR [edx+eiz*1+0x3d],bl
  413f7c:	loop   0x413f68
  413f7e:	cli    
  413f7f:	hlt    
  413f80:	push   0x60
  413f82:	retf   
  413f83:	jmp    0x413fe9
  413f85:	mov    bh,0x5b
  413f87:	cmc    
  413f88:	outs   dx,DWORD PTR ds:[esi]
  413f89:	(bad)  
  413f8b:	and    DWORD PTR cs:[ebx-0x61c21709],ebx
  413f92:	pop    ebx
  413f93:	outs   dx,BYTE PTR ds:[esi]
  413f94:	mov    ebp,DWORD PTR [ebx+esi*8+0x61a728cd]
  413f9b:	loopne 0x413fa1
  413f9d:	fnsave [edx-0x65]
  413fa0:	jne    0x414011
  413fa2:	sub    al,BYTE PTR [ecx]
  413fa4:	cwde   
  413fa5:	(bad)  
  413fa6:	mov    ebx,0x3ae67b95
  413fab:	pop    ecx
  413fac:	mov    cl,0xa8
  413fae:	pop    esp
  413faf:	push   0x496e189f
  413fb4:	outs   dx,DWORD PTR ds:[esi]
  413fb5:	js     0x413fbc
  413fb7:	aaa    
  413fb8:	aaa    
  413fb9:	xchg   esi,eax
  413fba:	sahf   
  413fbb:	mov    eax,0xf908e503
  413fc0:	fwait
  413fc1:	lods   eax,DWORD PTR ds:[esi]
  413fc2:	sbb    BYTE PTR [edi],bh
  413fc4:	push   esp
  413fc5:	add    DWORD PTR [esi-0x58],ecx
  413fc8:	or     ah,BYTE PTR [esi]
  413fca:	gs and eax,0x2fc1d1c
  413fd0:	dec    edx
  413fd1:	fild   WORD PTR [ecx]
  413fd3:	add    dh,BYTE PTR [eax+ebx*4+0x5c371d44]
  413fda:	mov    ch,0x4d
  413fdc:	mov    al,0x15
  413fde:	je     0x413fff
  413fe0:	pop    es
  413fe1:	push   esi
  413fe2:	push   ecx
  413fe3:	fadd   st(4),st
  413fe5:	sbb    ah,BYTE PTR [eax-0xe]
  413fe8:	daa    
  413fe9:	outs   dx,DWORD PTR ds:[esi]
  413fea:	pop    es
  413feb:	mov    DWORD PTR [ecx],edx
  413fed:	sar    al,0xbd
  413ff0:	cmp    bl,bh
  413ff2:	adc    DWORD PTR [esi+eax*1],edx
  413ff5:	shl    ebx,cl
  413ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ff8:	call   0xc4ae:0x11def2e3
  413fff:	es iret 
  414001:	add    cl,BYTE PTR [esi]
  414003:	pop    ebp
  414004:	imul   ebx,DWORD PTR [eax],0xd2496a69
  41400a:	mov    ds:0x824e1f2e,eax
  41400f:	and    al,0xa0
  414011:	push   ecx
  414012:	inc    ebx
  414013:	or     esp,DWORD PTR [ecx+0x475e963f]
  414019:	add    BYTE PTR [esi],0xa4
  41401c:	sar    DWORD PTR [edx+0x48dc78f5],cl
  414022:	and    bh,dh
  414024:	das    
  414025:	popa   
  414026:	mov    bl,0x9
  414028:	pop    es
  414029:	xor    ebx,DWORD PTR [ebp+0x60a824b9]
  41402f:	popa   
  414030:	jmp    0x414043
  414032:	js     0x414005
  414034:	or     BYTE PTR [ebp+0x39764191],dh
  41403a:	xchg   ecx,eax
  41403b:	out    0x3a,al
  41403d:	out    0x0,al
  41403f:	cmp    ch,bh
  414041:	fst    QWORD PTR [edi+edi*8+0x19]
  414045:	jo     0x41408e
  414047:	xchg   DWORD PTR [edi+ebp*4-0x4879f282],ebp
  41404e:	add    ecx,DWORD PTR [ecx-0x1f]
  414051:	cmp    DWORD PTR [ebp-0x5d],ebx
  414054:	in     eax,dx
  414055:	in     al,0x1e
  414057:	jns    0x414050
  414059:	shl    esp,1
  41405b:	and    BYTE PTR [edi+0x590cc36],0x47
  414062:	adc    eax,0xe92d1b3a
  414067:	je     0x4140b9
  414069:	sbb    al,0xab
  41406b:	stc    
  41406c:	bnd jp 0x414089
  41406f:	loop   0x41404f
  414071:	data16 jecxz 0x4140ab
  414074:	sub    eax,0x5e5d0f5d
  414079:	mov    ecx,0x1facd5a2
  41407e:	dec    ecx
  41407f:	aas    
  414080:	push   esp
  414081:	and    al,0x7a
  414083:	ds ins DWORD PTR es:[edi],dx
  414085:	cmp    eax,0xf188ecdf
  41408a:	ret    
  41408b:	and    BYTE PTR [edx+0x62141012],cl
  414091:	jno    0x414024
  414093:	and    eax,0xc8dc48
  414098:	test   DWORD PTR [ecx-0x6d19798f],esp
  41409e:	xchg   ecx,eax
  41409f:	cmp    ah,bl
  4140a1:	adc    BYTE PTR [ecx-0x4de27f0f],ch
  4140a7:	cli    
  4140a8:	in     al,dx
  4140a9:	test   al,0x8d
  4140ab:	and    eax,DWORD PTR [edx]
  4140ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ae:	ins    DWORD PTR es:[edi],dx
  4140af:	fld    st(2)
  4140b1:	paddb  mm0,QWORD PTR [eax+edi*4+0x1d5f2ab1]
  4140b9:	push   0x4ff3c7dd
  4140be:	(bad)  
  4140bf:	cmp    al,0x2
  4140c1:	sub    edi,ebx
  4140c3:	push   es
  4140c4:	test   eax,0x6274049d
  4140c9:	jl     0x4140d6
  4140cb:	dec    eax
  4140cc:	aad    0x19
  4140ce:	es out 0x46,eax
  4140d1:	in     al,0xa2
  4140d3:	das    
  4140d4:	stos   BYTE PTR es:[edi],al
  4140d5:	loope  0x414102
  4140d7:	mov    bh,0x5c
  4140d9:	mov    DWORD PTR [edx],esp
  4140db:	inc    ebp
  4140dc:	cld    
  4140dd:	call   0x9f57caa4
  4140e2:	gs jmp 0xf40f94bc
  4140e8:	je     0x4140fe
  4140ea:	call   0x67638270
  4140ef:	push   eax
  4140f0:	mov    ah,0xda
  4140f2:	ds inc di
  4140f5:	cmc    
  4140f6:	rol    DWORD PTR [edi+0x390d00e5],cl
  4140fc:	mov    eax,ds:0x9f1ac9cc
  414101:	cmp    BYTE PTR [edx],dh
  414103:	cli    
  414104:	mov    al,0x7c
  414106:	xor    DWORD PTR [ecx-0x74],esp
  414109:	push   0xfffffff7
  41410b:	cmp    al,0x34
  41410d:	jg     0x41411e
  41410f:	ficom  DWORD PTR [ebp+0x59]
  414112:	pop    ecx
  414113:	xchg   esi,eax
  414114:	mov    esp,0xad658a8e
  414119:	aad    0x1e
  41411b:	pop    esp
  41411c:	outs   dx,BYTE PTR ds:[esi]
  41411d:	xchg   ebp,eax
  41411e:	jnp    0x414156
  414120:	pop    edi
  414121:	cmp    dl,ch
  414123:	jmp    0x7153:0x4dc0c157
  41412a:	scas   al,BYTE PTR es:[edi]
  41412b:	data16 and ch,BYTE PTR ss:[edx]
  41412f:	jo     0x4140d0
  414131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414132:	(bad)  
  414133:	outs   dx,BYTE PTR ds:[esi]
  414134:	cmp    ebp,esp
  414136:	aas    
  414137:	cmp    edx,DWORD PTR [esi+0xe]
  41413a:	inc    esi
  41413b:	fisttp QWORD PTR [edx-0x250d1d5]
  414141:	jge    0x41416a
  414143:	scas   eax,DWORD PTR es:[edi]
  414144:	inc    ebx
  414145:	test   al,0x30
  414147:	(bad)  
  414148:	shl    esi,cl
  41414a:	jne    0x414143
  41414c:	retf   
  41414d:	aam    0xfd
  41414f:	adc    eax,0xb367b6bd
  414154:	mov    eax,ds:0x2a7e915c
  414159:	pop    esi
  41415a:	fst    st(6)
  41415c:	outs   dx,DWORD PTR ds:[esi]
  41415d:	inc    edi
  41415e:	mov    al,0x53
  414160:	(bad)  
  414161:	mov    ds:0xee98a752,al
  414166:	bound  ecx,QWORD PTR [ecx]
  414168:	sbb    DWORD PTR [ecx-0x14a56d7d],ebx
  41416e:	dec    ebx
  41416f:	data16 hlt 
  414171:	adc    eax,0xa789ca77
  414176:	jnp    0x4141b1
  414178:	jno    0x414131
  41417a:	pop    ss
  41417b:	xchg   ebx,eax
  41417c:	push   esi
  41417d:	or     al,0xc2
  41417f:	test   DWORD PTR [ecx],esp
  414181:	push   esi
  414182:	retf   
  414183:	dec    eax
  414184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414185:	mov    eax,ds:0x5276123d
  41418a:	mov    BYTE PTR [ebx],dl
  41418c:	and    bl,BYTE PTR [ebx+esi*8-0x1d250319]
  414193:	dec    edi
  414194:	mov    eax,ds:0xf8a7513b
  414199:	or     bh,cl
  41419b:	icebp  
  41419c:	add    eax,0x9c8144b3
  4141a1:	xor    esp,DWORD PTR [edx+0x281ecae9]
  4141a7:	rcr    DWORD PTR [ebx+0x3f],cl
  4141aa:	daa    
  4141ab:	mov    eax,0x9d8c155a
  4141b0:	pop    ebx
  4141b1:	and    eax,0x990844f5
  4141b6:	and    eax,0xeb44e6a3
  4141bb:	xchg   ebp,eax
  4141bc:	cmp    ebp,DWORD PTR [edi+ebx*8-0x1a]
  4141c0:	(bad)  
  4141c1:	das    
  4141c2:	arpl   WORD PTR [esi-0x36b03ff5],dx
  4141c8:	mov    esp,0x3b8e0d5b
  4141cd:	(bad)  
  4141ce:	daa    
  4141cf:	call   0xf42145be
  4141d4:	lock ins DWORD PTR es:[edi],dx
  4141d6:	lds    edx,FWORD PTR [edi-0x54eff151]
  4141dc:	nop
  4141dd:	dec    eax
  4141de:	pop    ebx
  4141df:	mov    esp,0xef1c56b5
  4141e4:	in     al,0xdc
  4141e6:	repnz dec esi
  4141e8:	push   0xfffffff8
  4141ea:	mov    ebp,0x3d1c7705
  4141ef:	mov    DWORD PTR [ecx-0x4c],edi
  4141f2:	adc    eax,0x73a63677
  4141f7:	adc    ch,BYTE PTR [edi+ecx*2]
  4141fa:	cmp    bh,dh
  4141fc:	shr    BYTE PTR [edx-0x49],cl
  4141ff:	add    dh,ah
  414201:	xlat   BYTE PTR ds:[ebx]
  414202:	xor    eax,0x4132e306
  414207:	popf   
  414208:	cmp    BYTE PTR [edi-0x21],ah
  41420b:	or     eax,0xd1962c00
  414210:	mov    BYTE PTR [ebp-0x50],ah
  414213:	xchg   edx,eax
  414214:	jmp    0xedc:0x5b384001
  41421b:	pop    ss
  41421c:	mov    DWORD PTR gs:[eax],esp
  41421f:	and    al,0xe5
  414221:	jmp    0xa91d:0x942959a7
  414228:	xor    DWORD PTR ds:0xb6be5802,ebp
  41422e:	sahf   
  41422f:	cmp    al,0x96
  414231:	xchg   ebp,eax
  414232:	jno    0x41427a
  414234:	dec    esi
  414235:	mov    WORD PTR [edi+0x6effa095],es
  41423b:	pop    ecx
  41423c:	loop   0x4141cc
  41423e:	pop    es
  41423f:	lock push ds
  414241:	in     al,0x63
  414243:	or     DWORD PTR [ebp-0x52],0xffffffc4
  414247:	lods   al,BYTE PTR ds:[esi]
  414248:	lea    eax,[eax-0x2b]
  41424b:	into   
  41424c:	(bad)  
  41424d:	inc    eax
  41424e:	js     0x4141e3
  414250:	in     al,0xe9
  414252:	and    bh,BYTE PTR [ebp-0x109c9210]
  414258:	jo     0x414218
  41425a:	ds jmp 0x50f77f89
  414260:	adc    DWORD PTR [edx+0x3f],0xecc40c34
  414267:	int    0x4d
  414269:	mov    edx,0x4cc73a73
  41426e:	adc    edx,DWORD PTR [ebx-0x62]
  414271:	ret    0xf689
  414274:	mov    WORD PTR ds:0x945c495b,gs
  41427a:	sbb    BYTE PTR [ebx],ch
  41427c:	icebp  
  41427d:	add    ah,BYTE PTR [ecx]
  41427f:	out    0x8f,eax
  414281:	and    dl,BYTE PTR [eax+0x12]
  414284:	mov    DWORD PTR [esi],0xfcf6f33a
  41428a:	nop
  41428b:	add    eax,0x2d10f08d
  414290:	outs   dx,DWORD PTR ds:[esi]
  414291:	dec    ecx
  414292:	sbb    edi,DWORD PTR [ebx+eiz*1]
  414295:	call   0x86b87cd4
  41429a:	fmul   QWORD PTR [ebp-0x2590ad66]
  4142a0:	(bad)  
  4142a1:	sti    
  4142a2:	xchg   ebp,eax
  4142a3:	dec    esi
  4142a4:	or     edi,DWORD PTR fs:[esi-0x7b0c0868]
  4142ab:	add    ah,BYTE PTR [ebp+0x2f740a79]
  4142b1:	or     BYTE PTR [ebx-0x2494ae2f],ch
  4142b7:	push   edi
  4142b8:	pop    ecx
  4142b9:	ja     0x414287
  4142bb:	push   ss
  4142bc:	pop    edi
  4142bd:	sbb    esp,ebx
  4142bf:	in     al,0xa0
  4142c1:	or     eax,0x6b0544fe
  4142c6:	or     DWORD PTR [ecx],esp
  4142c8:	adc    BYTE PTR [ecx],cl
  4142ca:	in     eax,0x4e
  4142cc:	mov    ecx,0xe96cc74c
  4142d1:	addr16 hlt 
  4142d3:	hlt    
  4142d4:	sahf   
  4142d5:	(bad)  
  4142d6:	jns    0x4142d0
  4142d8:	mov    cl,0x51
  4142da:	mov    al,0xc
  4142dc:	dec    ecx
  4142dd:	add    cl,BYTE PTR [edx+0x29d2f76]
  4142e3:	jle    0x4142fc
  4142e5:	inc    ebp
  4142e6:	xor    eax,0xb2330321
  4142eb:	ret    
  4142ec:	call   0x5f53b3d2
  4142f1:	out    0x3e,eax
  4142f3:	pop    edx
  4142f4:	push   eax
  4142f5:	cld    
  4142f6:	mov    gs,WORD PTR [ebp-0x65]
  4142f9:	sbb    eax,0xebf0651d
  4142fe:	cmp    bl,BYTE PTR [ebp-0x18af8d32]
  414304:	mov    ch,0x1
  414306:	adc    eax,0x69818138
  41430b:	addr16 popf 
  41430d:	push   ss
  41430e:	hlt    
  41430f:	std    
  414310:	add    eax,0xb52d7d7
  414315:	jns    0x41435c
  414317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414318:	call   0x3f6e:0x4a42abe3
  41431f:	push   ss
  414320:	xlat   BYTE PTR ds:[ebx]
  414321:	jns    0x414354
  414323:	out    0x58,eax
  414325:	mov    ebp,ecx
  414327:	mov    dh,ah
  414329:	mov    eax,ds:0x7d99804f
  41432e:	cli    
  41432f:	pop    es
  414330:	jno    0x4142df
  414332:	mov    ch,BYTE PTR [edi-0x2a045624]
  414338:	lods   eax,DWORD PTR ds:[esi]
  414339:	addr16 mov dh,0xb
  41433c:	mov    al,0x38
  41433e:	mov    es,esp
  414340:	jge    0x41433d
  414342:	pop    ecx
  414343:	pop    edi
  414344:	inc    ecx
  414345:	xchg   bl,dl
  414347:	cmp    eax,DWORD PTR [ecx]
  414349:	pop    esp
  41434a:	and    edx,esp
  41434c:	stos   WORD PTR es:[edi],ax
  41434e:	mov    cl,0x40
  414350:	inc    ecx
  414351:	cdq    
  414352:	ss push esp
  414354:	sub    al,0xb6
  414356:	push   es
  414357:	add    cl,BYTE PTR [edi-0x58]
  41435a:	addr16 jle 0x414300
  41435d:	fwait
  41435e:	inc    esi
  41435f:	jae    0x41435f
  414361:	jmp    0xfb67:0xdaba551a
  414368:	rcl    BYTE PTR [eax+eiz*4+0x17b173f3],1
  41436f:	inc    eax
  414370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414371:	popa   
  414372:	stos   DWORD PTR es:[edi],eax
  414373:	data16 fdiv QWORD PTR [ebx+0x424b6dc5]
  41437a:	pcmpeqd mm6,QWORD PTR [ecx+0x4d42c016]
  414381:	jo     0x41438e
  414383:	lds    edi,FWORD PTR [ecx]
  414385:	dec    edx
  414386:	es sti 
  414388:	aas    
  414389:	cmp    edi,DWORD PTR [edi-0x6fd3405c]
  41438f:	sbb    BYTE PTR [esi],al
  414391:	mov    BYTE PTR [edi-0x2],bh
  414394:	call   0xa855:0xaaddabea
  41439b:	pop    esi
  41439c:	ds dec ebx
  41439e:	gs adc bh,dl
  4143a1:	pop    ebx
  4143a2:	loope  0x4143c7
  4143a4:	sti    
  4143a5:	mov    ecx,0xab4af41c
  4143aa:	pop    edi
  4143ab:	and    BYTE PTR ds:0x5712c14f,0x65
  4143b2:	gs pop esp
  4143b4:	add    eax,0xf32075b
  4143b9:	ffreep st(5)
  4143bb:	sub    eax,DWORD PTR [ebx]
  4143bd:	xor    al,BYTE PTR [edi+0x1c]
  4143c0:	aaa    
  4143c1:	inc    edi
  4143c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143c3:	mov    al,ds:0xdd0e5f44
  4143c8:	or     esi,ebp
  4143ca:	in     eax,0x3e
  4143cc:	add    eax,0xe37e612b
  4143d1:	loope  0x414381
  4143d3:	mov    ds:0x5e1303eb,al
  4143d8:	add    DWORD PTR [ebp+0x2ad01efc],esp
  4143de:	rol    DWORD PTR [esi+0x62],cl
  4143e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143e2:	cs lahf 
  4143e4:	lea    edx,[edi+0x6]
  4143e7:	int3   
  4143e8:	jbe    0x414406
  4143ea:	inc    esp
  4143eb:	stos   BYTE PTR es:[edi],al
  4143ec:	hlt    
  4143ed:	jge    0x41440f
  4143ef:	mov    eax,0x89f08e12
  4143f4:	push   ds
  4143f5:	sbb    eax,0xbbbc7e73
  4143fa:	aaa    
  4143fb:	jp     0x414397
  4143fd:	pop    edx
  4143fe:	and    BYTE PTR [edx],al
  414400:	ins    BYTE PTR es:[edi],dx
  414401:	cld    
  414402:	pop    edx
  414403:	pop    ecx
  414404:	inc    ebx
  414405:	(bad)  
  414407:	loopne 0x4143fa
  414409:	lahf   
  41440a:	test   edi,edx
  41440c:	jmp    0x98ed:0xf4d8a66b
  414413:	ins    BYTE PTR es:[edi],dx
  414414:	sahf   
  414415:	das    
  414416:	outs   dx,BYTE PTR ds:[esi]
  414417:	pop    eax
  414418:	pusha  
  414419:	jg     0x414498
  41441b:	adc    ebx,esi
  41441d:	fisubr WORD PTR [eax+0x4145251]
  414423:	loopne 0x414431
  414425:	fsub   st(0),st
  414427:	push   0xffffffd4
  414429:	in     eax,0xa0
  41442b:	sub    bl,BYTE PTR [di-0x60]
  41442f:	dec    esi
  414430:	mov    ebp,0x6c075a64
  414435:	cmp    al,0x5d
  414437:	adc    esi,DWORD PTR [esi]
  414439:	and    al,BYTE PTR [ebp+0x44]
  41443c:	push   ebp
  41443d:	adc    DWORD PTR [ebx],ebx
  41443f:	jmp    0xf993:0x324c17e5
  414446:	xchg   esi,eax
  414447:	out    0x3f,eax
  414449:	pop    ebp
  41444a:	ins    BYTE PTR es:[edi],dx
  41444b:	leave  
  41444c:	gs cdq 
  41444e:	cmp    eax,0xec2d7654
  414453:	or     ch,ah
  414455:	out    0x83,al
  414457:	adc    DWORD PTR [esp+ebp*2-0x30],0xe2dbf6ec
  41445f:	fmul   QWORD PTR [ebp+0x6c8453f7]
  414465:	push   ebp
  414466:	sub    al,0xd4
  414468:	and    ah,ch
  41446a:	call   0x5377:0x7df7c9b
  414471:	sub    al,0xfe
  414473:	cli    
  414474:	out    0xcc,al
  414476:	inc    ebp
  414477:	xchg   edx,eax
  414478:	out    0x66,al
  41447a:	inc    edi
  41447b:	or     DWORD PTR [edi-0x376a9e6b],ebx
  414481:	jmp    0x414428
  414483:	mov    bl,0x88
  414485:	test   al,0x89
  414487:	cmp    al,0xcf
  414489:	adc    al,0xac
  41448b:	aam    0x61
  41448d:	mov    esi,0x90aa0ea9
  414492:	ret    
  414493:	test   al,0x36
  414495:	or     DWORD PTR [esi],esp
  414497:	or     eax,0x77b3fbde
  41449c:	mov    ds:0x3f108f6e,eax
  4144a1:	cmp    al,BYTE PTR [eiz*8-0x3edf3773]
  4144a8:	retf   0x66d6
  4144ab:	xchg   ebp,eax
  4144ac:	in     eax,dx
  4144ad:	inc    eax
  4144ae:	lea    eax,[eax]
  4144b0:	data16 jbe 0x414461
  4144b3:	loope  0x41448d
  4144b5:	or     DWORD PTR [eax-0x32],esp
  4144b8:	cmp    al,0xe4
  4144ba:	dec    edi
  4144bb:	add    DWORD PTR [esi],esp
  4144bd:	push   ebp
  4144be:	xchg   ebp,eax
  4144bf:	sub    cl,bh
  4144c1:	addr16 (bad) 
  4144c3:	or     eax,0x12d34e9
  4144c8:	jmp    0x4144d9
  4144ca:	fprem  
  4144cc:	jbe    0x4144de
  4144ce:	and    ecx,DWORD PTR [edi-0x75eba6da]
  4144d4:	fwait
  4144d5:	icebp  
  4144d6:	ins    BYTE PTR es:[edi],dx
  4144d7:	dec    ebx
  4144d8:	jne    0x414514
  4144da:	push   ebp
  4144db:	xchg   ebx,eax
  4144dc:	add    BYTE PTR [esi],al
  4144de:	fistp  DWORD PTR [edx-0x44615539]
  4144e4:	xchg   edi,eax
  4144e5:	nop
  4144e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e7:	sahf   
  4144e8:	sub    ebp,0x3e6b5c70
  4144ee:	jmp    0x414547
  4144f0:	mov    ds:0xd1cf3646,eax
  4144f5:	(bad)  
  4144f7:	sbb    ecx,DWORD PTR [ecx]
  4144f9:	or     cl,bh
  4144fb:	lock dec eax
  4144fd:	scas   eax,DWORD PTR es:[edi]
  4144fe:	mov    dh,0x3b
  414500:	jg     0x414566
  414502:	mov    ch,0x3c
  414504:	and    BYTE PTR [eax+0x11],ch
  414507:	in     eax,0xb4
  414509:	mov    edx,0x8681ade8
  41450e:	cmc    
  41450f:	inc    edi
  414510:	inc    esp
  414511:	sti    
  414512:	pop    es
  414513:	stos   BYTE PTR es:[edi],al
  414514:	mov    esi,0x438b653
  414519:	add    DWORD PTR [edi+0x73],ebp
  41451c:	retf   0x758b
  41451f:	sub    dh,BYTE PTR [ecx]
  414521:	lods   al,BYTE PTR ds:[esi]
  414522:	js     0x414578
  414524:	sar    BYTE PTR [esi],1
  414526:	std    
  414527:	cmp    eax,ecx
  414529:	jb     0x41453f
  41452b:	fs push cs
  41452d:	div    BYTE PTR [eax]
  41452f:	outs   dx,BYTE PTR ds:[esi]
  414530:	fimul  DWORD PTR [edi-0x41]
  414533:	xchg   BYTE PTR [ebp-0x54292659],bl
  414539:	inc    eax
  41453a:	lahf   
  41453b:	inc    esi
  41453c:	jo     0x41454b
  41453e:	repz ror DWORD PTR [ecx],cl
  414541:	mov    dh,0xf7
  414543:	outs   dx,DWORD PTR ds:[esi]
  414544:	enter  0x64e0,0xf
  414548:	xchg   ebx,eax
  414549:	sbb    esi,ebx
  41454b:	jo     0x4145af
  41454d:	jmp    0x41457f
  41454f:	push   0xffffffb2
  414551:	fwait
  414552:	jae    0x414580
  414554:	sub    edx,DWORD PTR [eax]
  414556:	push   es
  414557:	lods   eax,DWORD PTR ds:[esi]
  414558:	div    BYTE PTR [esi]
  41455a:	ds and eax,0xaf64d4a5
  414560:	xor    ah,ah
  414562:	ja     0x41456f
  414564:	push   ecx
  414565:	mov    cl,BYTE PTR [ebx]
  414567:	mov    bh,0xf2
  414569:	in     eax,0x35
  41456b:	cdq    
  41456c:	mul    BYTE PTR [ebx+0xa]
  41456f:	std    
  414570:	inc    esi
  414571:	mov    eax,0x175274f8
  414576:	scas   al,BYTE PTR es:[edi]
  414577:	pop    ebp
  414578:	aas    
  414579:	lahf   
  41457a:	and    al,0x9a
  41457c:	dec    edi
  41457d:	(bad)  
  41457e:	out    dx,eax
  41457f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414580:	and    eax,0xc588f6c4
  414585:	sub    DWORD PTR [esi-0x72],edi
  414588:	adc    bl,BYTE PTR [edi-0x263ab24e]
  41458e:	cwde   
  41458f:	(bad)  
  414590:	test   al,0x9c
  414592:	lea    edi,[eax-0x6b9c9484]
  414598:	push   ebp
  414599:	call   0xa541c348
  41459e:	loop   0x41453d
  4145a0:	pop    ebx
  4145a1:	out    dx,al
  4145a2:	cmp    cl,BYTE PTR [edi]
  4145a4:	add    edi,esp
  4145a6:	imul   eax,DWORD PTR [edi],0xffffff88
  4145a9:	push   eax
  4145aa:	leave  
  4145ab:	inc    edx
  4145ac:	mov    al,0x76
  4145ae:	in     al,dx
  4145af:	jo     0x414531
  4145b1:	pop    edi
  4145b2:	loope  0x414539
  4145b4:	arpl   si,ax
  4145b6:	pop    edi
  4145b7:	and    cl,ah
  4145b9:	dec    esp
  4145ba:	scas   eax,DWORD PTR es:[edi]
  4145bb:	jecxz  0x41459f
  4145bd:	rol    DWORD PTR [esi+eax*8-0x23cf636f],cl
  4145c4:	xchg   DWORD PTR [eax],ecx
  4145c6:	xchg   ebx,eax
  4145c7:	test   al,0x1f
  4145c9:	inc    ebp
  4145ca:	aam    0xcc
  4145cc:	push   ds
  4145cd:	lods   eax,DWORD PTR ds:[esi]
  4145ce:	aam    0x70
  4145d0:	sbb    al,BYTE PTR [ebx+0x3d3e3110]
  4145d6:	dec    ecx
  4145d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d8:	xor    BYTE PTR [eax+0x26],0xb2
  4145dc:	or     bl,BYTE PTR [ecx+0x6b070ed8]
  4145e2:	jmp    0xdc033967
  4145e7:	je     0x414604
  4145e9:	cwde   
  4145ea:	or     edi,0x924f854b
  4145f0:	out    dx,eax
  4145f1:	xchg   esp,eax
  4145f2:	jnp    0x4145db
  4145f4:	jae    0x414602
  4145f6:	aas    
  4145f7:	adc    DWORD PTR [edi],0xffffffc2
  4145fa:	cmp    BYTE PTR ds:0xfa8aaa83,bl
  414600:	mov    ah,BYTE PTR [ebp+0x32]
  414603:	xlat   BYTE PTR ds:[ebx]
  414604:	mov    ds:0xc61e0d0d,eax
  414609:	inc    ecx
  41460a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41460b:	ins    DWORD PTR es:[edi],dx
  41460c:	cmpxchg DWORD PTR [ebx-0x32],ebp
  414610:	pop    ebp
  414611:	inc    ebx
  414612:	leave  
  414613:	push   esi
  414614:	dec    ebx
  414615:	push   esp
  414616:	pop    es
  414617:	cld    
  414618:	ins    DWORD PTR es:[edi],dx
  414619:	imul   ebx,DWORD PTR [ebp-0x674fa21a],0xfffffffc
  414620:	inc    edx
  414621:	pop    es
  414622:	lahf   
  414623:	add    DWORD PTR [esi+0x6f],ebp
  414626:	inc    eax
  414627:	inc    esp
  414628:	loope  0x4145d9
  41462a:	push   eax
  41462b:	sbb    eax,edi
  41462d:	shr    BYTE PTR [ebx-0x2f],0x4d
  414631:	repz or ebx,edx
  414634:	fisttp QWORD PTR [edx+ebx*4]
  414637:	loopne 0x414686
  414639:	arpl   WORD PTR [eax],sp
  41463b:	arpl   WORD PTR [edi],di
  41463d:	sub    al,0xed
  41463f:	lock std 
  414641:	xchg   ebp,eax
  414642:	dec    ebp
  414643:	add    al,0x84
  414645:	inc    esp
  414646:	int    0x2
  414648:	popf   
  414649:	loopne 0x414674
  41464b:	adc    BYTE PTR [ecx],0x92
  41464e:	xor    dh,ch
  414650:	in     eax,0x83
  414652:	imul   al
  414654:	int    0xf5
  414656:	pop    es
  414657:	lock scas eax,DWORD PTR es:[edi]
  414659:	in     eax,0x57
  41465b:	mov    DWORD PTR [edi+edx*4],eax
  41465e:	dec    ebx
  41465f:	int3   
  414660:	or     esp,esp
  414662:	arpl   WORD PTR [ecx+0x73],bp
  414665:	jo     0x414629
  414667:	shr    BYTE PTR [ecx-0x77eb8ae1],cl
  41466d:	mov    dl,0xca
  41466f:	xor    al,0x2d
  414671:	cmp    edi,DWORD PTR [ebp-0x6e0b0419]
  414677:	mov    ebp,0xd2d85d9d
  41467c:	add    eax,0xf0842a21
  414681:	(bad)  
  414682:	mov    bl,0x65
  414684:	fld    QWORD PTR [ebx-0x18]
  414687:	out    0x6a,eax
  414689:	into   
  41468a:	ret    0x185
  41468d:	push   esi
  41468e:	adc    DWORD PTR [edi+edi*2+0x6ac00e35],0xffffff86
  414696:	(bad)  
  414698:	sbb    DWORD PTR [esi],0x2c
  41469b:	fwait
  41469c:	jl     0x414712
  41469e:	pop    esp
  41469f:	cli    
  4146a0:	loope  0x41470d
  4146a2:	scas   al,BYTE PTR es:[edi]
  4146a3:	fbld   TBYTE PTR [edi+0x1836b5d5]
  4146a9:	xor    al,0xe1
  4146ab:	(bad)  
  4146ad:	cmp    ebx,DWORD PTR [ecx+0x5fb91ec6]
  4146b3:	or     BYTE PTR [ecx+0x4c1926d0],ah
  4146b9:	in     al,dx
  4146ba:	pop    ebx
  4146bb:	add    ecx,0x75d5b28c
  4146c1:	icebp  
  4146c2:	pop    ss
  4146c3:	pop    edx
  4146c4:	jbe    0x414724
  4146c6:	cmp    DWORD PTR [ebx-0x2373c6dd],edi
  4146cc:	(bad)  [edx]
  4146ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146cf:	sahf   
  4146d0:	sbb    al,0xc8
  4146d2:	call   0x4129a8fa
  4146d7:	dec    edi
  4146d8:	std    
  4146d9:	pushf  
  4146da:	aam    0x64
  4146dc:	clc    
  4146dd:	mov    bl,0x64
  4146df:	lds    esp,FWORD PTR [ecx+0x179e00a8]
  4146e5:	enter  0xc6c9,0x32
  4146e9:	jno    0x4146ad
  4146eb:	daa    
  4146ec:	ret    
  4146ed:	mov    cl,0x81
  4146ef:	aaa    
  4146f0:	cmp    edi,DWORD PTR [esi+edi*4]
  4146f3:	xor    eax,0x8776c711
  4146f8:	jmp    0x47f2e758
  4146fd:	mov    bl,0x1f
  4146ff:	add    DWORD PTR [esi-0x53],ecx
  414702:	jle    0x414714
  414704:	push   eax
  414705:	add    BYTE PTR [esi+0xfacaec1],ch
  41470b:	jbe    0x414775
  41470d:	cmp    al,0x7b
  41470f:	aas    
  414710:	mov    ch,BYTE PTR [eax]
  414712:	push   edx
  414713:	inc    esp
  414714:	(bad)  
  414715:	outs   dx,BYTE PTR ds:[esi]
  414716:	push   edi
  414717:	add    DWORD PTR [esi+0x2455cb75],ebx
  41471d:	xchg   ecx,eax
  41471e:	popfw  
  414720:	cwde   
  414721:	push   es
  414722:	or     eax,ebx
  414724:	push   ss
  414725:	test   BYTE PTR [eax-0x75],cl
  414728:	inc    ecx
  414729:	popf   
  41472a:	adc    al,0x55
  41472c:	inc    ebx
  41472d:	push   ebp
  41472e:	sbb    eax,0x80857df8
  414733:	push   ecx
  414734:	pop    ss
  414735:	call   0xf87d:0x64243c8c
  41473c:	xor    edx,0xffffffb9
  41473f:	frstor [esi+0x1819d327]
  414745:	mov    bl,0x4d
  414747:	int    0xd5
  414749:	leave  
  41474a:	adc    al,0x89
  41474c:	or     al,0xae
  41474e:	push   esi
  41474f:	sub    edx,esp
  414751:	push   es
  414752:	push   esp
  414753:	inc    esi
  414754:	jb     0x414707
  414756:	jb     0x41474b
  414758:	jge    0x4146ee
  41475a:	push   es
  41475b:	inc    esi
  41475c:	cs repnz mov edx,0xdd9adfef
  414763:	mov    esi,0xf743a275
  414768:	stos   BYTE PTR es:[edi],al
  414769:	mov    ah,dh
  41476b:	dec    eax
  41476c:	and    DWORD PTR [ebp-0x58bb1cfe],ecx
  414772:	mov    cl,0xa5
  414774:	test   eax,0xe7b119f7
  414779:	mov    bh,0x4b
  41477b:	js     0x4147d7
  41477d:	rcr    BYTE PTR [ebp-0x598fa584],cl
  414783:	mov    esi,edx
  414785:	inc    esi
  414786:	mov    edi,0xcea99aa3
  41478b:	push   edx
  41478c:	aad    0x55
  41478e:	push   edx
  41478f:	jg     0x41474b
  414791:	ret    0x6d8c
  414794:	fs scas eax,DWORD PTR es:[edi]
  414796:	xor    ebx,DWORD PTR [ecx]
  414798:	es inc ebx
  41479a:	mov    esp,0x46020dc1
  41479f:	pop    edx
  4147a0:	add    al,0xcc
  4147a2:	jl     0x4147f1
  4147a4:	stos   DWORD PTR es:[edi],eax
  4147a5:	ins    DWORD PTR es:[edi],dx
  4147a6:	cli    
  4147a7:	mov    ebp,0x7a0db576
  4147ac:	nop
  4147ad:	mov    ds:0xb4e7d5bc,al
  4147b2:	sahf   
  4147b3:	cmp    BYTE PTR ds:0x3715c66a,ah
  4147b9:	jb     0x4147d0
  4147bb:	push   edx
  4147bc:	test   BYTE PTR [esi+0x2a875940],ah
  4147c2:	retf   
  4147c3:	push   esi
  4147c4:	inc    ebx
  4147c5:	cmp    BYTE PTR [ecx+0x6933b98a],bl
  4147cb:	xchg   BYTE PTR [ebx+0xc],dl
  4147ce:	mov    dl,al
  4147d0:	pop    esi
  4147d1:	jecxz  0x414827
  4147d3:	or     eax,0x59742ccc
  4147d8:	add    dl,bh
  4147da:	inc    ebx
  4147db:	je     0x4147db
  4147dd:	or     ebx,DWORD PTR [ebx]
  4147df:	sub    dl,BYTE PTR [ecx+0x59]
  4147e2:	sbb    eax,0x6b282a93
  4147e7:	fisttp QWORD PTR [ebx+eax*2-0x32cf1830]
  4147ee:	jnp    0x41483a
  4147f0:	sub    ch,bh
  4147f2:	repz test al,0x5d
  4147f5:	mov    ds:0xd50d9239,eax
  4147fa:	cli    
  4147fb:	aam    0x67
  4147fd:	test   BYTE PTR [ebp-0x1e],ch
  414800:	out    0x43,al
  414802:	pop    edi
  414803:	jmp    0x41479c
  414805:	mov    ds:0x50cacaf9,eax
  41480a:	imul   eax,DWORD PTR [esi+0x39],0xffffffb1
  41480e:	xor    al,BYTE PTR [eax-0x20]
  414811:	inc    esp
  414812:	add    DWORD PTR [edi-0x4f],edi
  414815:	fdivp  st(1),st
  414817:	jnp    0x4147d0
  414819:	mov    ebx,0x7cf71159
  41481e:	dec    esi
  41481f:	push   esi
  414820:	test   DWORD PTR [ebx],edx
  414822:	outs   dx,DWORD PTR ds:[esi]
  414823:	jae    0x414877
  414825:	push   cs
  414826:	sbb    edi,DWORD PTR [ebx]
  414828:	push   0x48
  41482a:	jbe    0x41489b
  41482c:	stos   BYTE PTR es:[edi],al
  41482d:	repnz mov ax,ds:0x747a424e
  414834:	or     ebx,DWORD PTR [esi-0x63]
  414837:	arpl   WORD PTR [esi+0x46],cx
  41483a:	xor    eax,0xef594074
  41483f:	arpl   dx,bx
  414841:	fs pop ebx
  414843:	aaa    
  414844:	gs jae 0x414836
  414847:	and    dl,dh
  414849:	sbb    edi,DWORD PTR [ecx+0x4e2831b3]
  41484f:	fcomp  DWORD PTR [ebp+0x4a]
  414852:	pop    ebp
  414853:	popa   
  414854:	pop    es
  414855:	sub    eax,0x2300d6d6
  41485a:	mov    dh,0x48
  41485c:	js     0x414863
  41485e:	lahf   
  41485f:	dec    ebp
  414860:	dec    esp
  414861:	arpl   WORD PTR [eax-0x44],si
  414864:	sub    al,0xf
  414866:	scas   al,BYTE PTR es:[edi]
  414867:	mov    ds:0x3ab88a92,eax
  41486c:	shl    ebx,1
  41486e:	dec    eax
  41486f:	dec    esi
  414870:	in     eax,0xc7
  414872:	in     eax,0x2d
  414874:	push   ds
  414875:	add    DWORD PTR [edi-0x6b],ecx
  414878:	ss mov al,0x41
  41487b:	push   ds
  41487c:	push   0xdc416c27
  414881:	lods   al,BYTE PTR ds:[esi]
  414882:	inc    eax
  414883:	add    edx,DWORD PTR [ecx+edx*8]
  414886:	(bad)  
  414887:	mov    al,0x38
  414889:	jnp    0x4148ba
  41488b:	lfs    ecx,FWORD PTR [eax+0x22]
  41488f:	add    al,0x8
  414891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414892:	mov    ebx,0x8abb9a48
  414897:	call   0xec96:0x7fd7503d
  41489e:	into   
  41489f:	loop   0x414865
  4148a1:	jbe    0x414880
  4148a3:	inc    edi
  4148a4:	jmp    FWORD PTR [eax+eiz*1]
  4148a7:	enter  0x96c3,0x69
  4148ab:	test   BYTE PTR [eax],bh
  4148ad:	pop    edx
  4148ae:	mov    ebx,DWORD PTR [ebp+eax*2-0x31287888]
  4148b5:	jecxz  0x414905
  4148b7:	mov    BYTE PTR [eax-0x3a455424],ah
  4148bd:	ja     0x414883
  4148bf:	mov    ebx,0xe8e447ff
  4148c4:	in     al,dx
  4148c5:	das    
  4148c6:	stos   DWORD PTR es:[edi],eax
  4148c7:	or     eax,0xb05bfb1e
  4148cc:	or     DWORD PTR [edx-0x56],ebp
  4148cf:	popa   
  4148d0:	dec    BYTE PTR es:[ecx+eax*8]
  4148d4:	jns    0x4148b7
  4148d6:	loop   0x414866
  4148d8:	push   edx
  4148d9:	aad    0x95
  4148db:	xlat   BYTE PTR ds:[ebx]
  4148dc:	rcr    BYTE PTR [edx-0x4913237a],0xbb
  4148e3:	jo     0x414872
  4148e5:	pop    ebp
  4148e6:	pushf  
  4148e7:	mov    ds:0x3716cc21,al
  4148ec:	mov    al,ds:0xd76e9f68
  4148f1:	push   ebx
  4148f2:	sub    DWORD PTR [edi+edx*2-0x5ed50cc4],edx
  4148f9:	into   
  4148fa:	iret   
  4148fb:	or     al,0xe7
  4148fd:	jae    0x4148cf
  4148ff:	pop    eax
  414900:	sub    al,0xca
  414902:	arpl   WORD PTR [eax],sp
  414904:	mov    eax,ds:0xe39441c5
  414909:	test   DWORD PTR [edi],edi
  41490b:	fsub   QWORD PTR [esi-0x70189900]
  414911:	outs   dx,BYTE PTR ds:[esi]
  414912:	je     0x414953
  414914:	stos   BYTE PTR es:[edi],al
  414915:	in     eax,0xd6
  414917:	jnp    0x4148fb
  414919:	jmp    0x414942
  41491b:	xor    DWORD PTR [ebx],edi
  41491d:	jmp    0x4ae3cddd
  414922:	ret    0x5301
  414925:	dec    eax
  414926:	test   ecx,edi
  414928:	xor    DWORD PTR [esi],0xffffff96
  41492b:	fwait
  41492c:	jmp    0x46f7abb2
  414931:	xchg   DWORD PTR [ecx],esi
  414933:	ret    0xf540
  414936:	scas   eax,DWORD PTR es:[edi]
  414937:	sub    DWORD PTR [esp+edx*1-0x2],edx
  41493b:	nop
  41493c:	repnz push ds
  41493e:	pushf  
  41493f:	stc    
  414940:	fcmovb st,st(6)
  414942:	ss aam 0x14
  414945:	dec    eax
  414946:	push   esi
  414947:	lock ret 0x6523
  41494b:	cmp    DWORD PTR [edi-0x6e],esp
  41494e:	cmp    edx,edx
  414950:	mov    cl,0xfa
  414952:	mov    DWORD PTR [esi+0x75],0x6103615
  414959:	dec    edx
  41495a:	je     0x4149d5
  41495c:	jae    0x41498c
  41495e:	outs   dx,BYTE PTR ds:[esi]
  41495f:	dec    ebp
  414960:	stos   DWORD PTR es:[edi],eax
  414961:	pop    es
  414962:	pop    ecx
  414963:	je     0x4148f4
  414965:	(bad)  
  414966:	inc    esi
  414967:	jmp    0x41495d
  414969:	or     al,BYTE PTR [esi]
  41496b:	xchg   edx,eax
  41496c:	aas    
  41496d:	test   eax,ebp
  41496f:	push   eax
  414970:	stc    
  414971:	jmp    0x4148f8
  414973:	loop   0x4149c3
  414975:	mov    BYTE PTR [esi+eiz*1+0x72],ch
  414979:	pop    ds
  41497a:	arpl   WORD PTR [esi+0x512e3e81],bp
  414980:	mov    esp,DWORD PTR [ebx+0x45dc9930]
  414986:	pop    ecx
  414987:	jo     0x414953
  414989:	aas    
  41498a:	xchg   eax,ebx
  41498c:	int    0x97
  41498e:	sbb    BYTE PTR [eax],bl
  414990:	cli    
  414991:	mov    eax,DWORD PTR [ebp-0x26074dad]
  414997:	lahf   
  414998:	or     DWORD PTR [edi],0x5d
  41499b:	cmp    DWORD PTR [edx+0x7],ecx
  41499e:	push   ecx
  41499f:	and    al,BYTE PTR [eax-0xccd2234]
  4149a5:	dec    ecx
  4149a6:	mov    esi,0xf7ff23fe
  4149ab:	les    ecx,FWORD PTR [esi+0x45a39c36]
  4149b1:	cmp    BYTE PTR [ebx-0x65],0xe3
  4149b5:	hlt    
  4149b6:	rcr    dl,1
  4149b8:	mov    bh,0x9e
  4149ba:	pop    es
  4149bb:	dec    edi
  4149bc:	mov    ds:0xf47568e,eax
  4149c1:	shr    BYTE PTR [ebx-0x41],1
  4149c4:	lock or DWORD PTR [ecx],edi
  4149c7:	sub    ah,BYTE PTR [edx-0x714cdcae]
  4149cd:	mov    ebp,0xa8361ae0
  4149d2:	mov    al,0x47
  4149d4:	jl     0x4149a8
  4149d6:	mov    eax,ds:0x7421dfc8
  4149db:	fldcw  WORD PTR [edi+0x1c]
  4149de:	push   eax
  4149df:	ds lahf 
  4149e1:	xor    bl,BYTE PTR [edi]
  4149e3:	pop    ebx
  4149e4:	mov    esi,DWORD PTR [esp+0x482fe08a]
  4149eb:	and    DWORD PTR [edi-0x62354f2d],ecx
  4149f1:	mov    ch,0xf6
  4149f3:	push   ss
  4149f4:	fs ss push ds
  4149f7:	fidivr DWORD PTR [esi+edx*1-0xf62c82d]
  4149fe:	adc    al,0x54
  414a00:	mov    ah,0x20
  414a02:	cld    
  414a03:	cmp    dh,BYTE PTR [edi+edx*4+0x2502b8b]
  414a0a:	hlt    
  414a0b:	or     eax,0x31bc6f0c
  414a10:	scas   eax,DWORD PTR es:[edi]
  414a11:	jns    0x4149e9
  414a13:	mov    dl,0x3c
  414a15:	loop   0x4149f2
  414a17:	jge    0x414a59
  414a19:	js     0x4149f5
  414a1b:	inc    ebx
  414a1c:	jle    0x4149c1
  414a1e:	mov    ch,0x42
  414a20:	and    cl,BYTE PTR [edx-0x56]
  414a23:	mov    WORD PTR [edi+0x4],cs
  414a26:	xchg   BYTE PTR [ecx-0x295c00ad],ch
  414a2c:	xchg   edi,eax
  414a2d:	ds and ch,bh
  414a30:	hlt    
  414a31:	inc    edi
  414a32:	xor    DWORD PTR [eax-0x18cfae19],ebp
  414a38:	popf   
  414a39:	xor    al,0xdb
  414a3b:	push   esp
  414a3c:	(bad)  [edx+0x53525e99]
  414a42:	cmp    al,0xfe
  414a44:	adc    ecx,DWORD PTR [ecx-0x7b]
  414a47:	mul    BYTE PTR ds:0x17a21872
  414a4d:	sbb    dl,bh
  414a4f:	addr16 dec eax
  414a51:	jmp    0xb3e51ad5
  414a56:	jbe    0x414a74
  414a58:	pop    eax
  414a59:	test   DWORD PTR [esi],eax
  414a5b:	repz mov ch,0x3b
  414a5e:	cmp    eax,0x7cc7da3a
  414a63:	shl    DWORD PTR [ecx],1
  414a65:	les    edi,FWORD PTR [edi+0x50]
  414a68:	aaa    
  414a69:	xchg   edx,eax
  414a6a:	dec    ebx
  414a6b:	cmp    BYTE PTR [edi-0x43],cl
  414a6e:	mov    ebp,0xd78d04aa
  414a73:	cwde   
  414a74:	inc    edx
  414a75:	xor    eax,0xdf86c49
  414a7a:	xchg   edx,eax
  414a7b:	stc    
  414a7c:	jbe    0x414a44
  414a7e:	adc    al,0x13
  414a80:	lahf   
  414a81:	add    eax,DWORD PTR [ecx]
  414a83:	mov    ch,0xbd
  414a85:	mov    DWORD PTR [edi+0x5f2f7152],ebx
  414a8b:	test   BYTE PTR [ecx+edi*8],ah
  414a8e:	pop    edx
  414a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a90:	lock es or edi,eax
  414a94:	pop    ecx
  414a95:	(bad)  
  414a96:	mov    ds:0x9fef8006,eax
  414a9b:	sbb    al,0x68
  414a9d:	int3   
  414a9e:	mov    edx,0x2f799e0e
  414aa3:	stos   BYTE PTR es:[edi],al
  414aa4:	stos   DWORD PTR es:[edi],eax
  414aa5:	mov    edi,0xef8e1661
  414aaa:	dec    DWORD PTR [ebx-0x42d35990]
  414ab0:	inc    ebx
  414ab1:	xor    BYTE PTR [esi+ecx*8-0x270ad041],0x47
  414ab9:	push   ecx
  414aba:	inc    ecx
  414abb:	jge    0x414ad9
  414abd:	cwde   
  414abe:	test   cl,cl
  414ac0:	xchg   ebx,eax
  414ac1:	hlt    
  414ac2:	jns    0x414a67
  414ac4:	aad    0xc4
  414ac6:	xor    BYTE PTR [edx-0x11],al
  414ac9:	pop    esp
  414aca:	push   esi
  414acb:	scas   al,BYTE PTR es:[edi]
  414acc:	js     0x414b24
  414ace:	push   ebx
  414acf:	dec    ecx
  414ad0:	mov    ebp,0x5519504a
  414ad5:	dec    esp
  414ad6:	inc    edx
  414ad7:	lea    edx,[ecx+0x1]
  414ada:	mov    gs,esi
  414adc:	jb     0x414ad8
  414ade:	and    al,0xc0
  414ae0:	add    eax,0xeec1071c
  414ae5:	loope  0x414a6f
  414ae7:	jmp    0x2df3:0xa3406a54
  414aee:	cmp    bl,BYTE PTR [eax]
  414af0:	lods   eax,DWORD PTR ds:[esi]
  414af1:	inc    ebx
  414af2:	dec    ebp
  414af3:	push   cs
  414af4:	inc    esi
  414af5:	scas   eax,DWORD PTR es:[edi]
  414af6:	cmp    esp,eax
  414af8:	mov    edi,0xdf8f9d02
  414afd:	loope  0x414adc
  414aff:	or     eax,DWORD PTR [ecx+0x11c18d4d]
  414b05:	add    al,al
  414b07:	xchg   ecx,eax
  414b08:	cwde   
  414b09:	mov    esp,0x72bf721f
  414b0e:	sbb    BYTE PTR [eax],ah
  414b10:	or     DWORD PTR [ebp+0x79],ebx
  414b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b14:	sub    al,0x8d
  414b16:	jge    0x414a9a
  414b18:	xor    ch,BYTE PTR [ebx+0x5943fa9a]
  414b1e:	xor    DWORD PTR [ebp-0x5cb70f78],ebx
  414b24:	gs inc ebx
  414b26:	es retf 0x9d39
  414b2a:	mov    bl,0xf0
  414b2c:	popf   
  414b2d:	xchg   edx,eax
  414b2e:	push   esi
  414b2f:	sti    
  414b30:	or     DWORD PTR [edi+0xb134917],esi
  414b36:	call   0x9a217c0a
  414b3b:	jecxz  0x414ba6
  414b3d:	arpl   WORD PTR ds:0xf5b8daad,cx
  414b43:	or     BYTE PTR [edi-0x7f],bl
  414b46:	not    BYTE PTR ds:0x8d99f9d3
  414b4c:	repz fmul st(5),st
  414b4f:	adc    ebp,DWORD PTR [ebp+0x54acb37e]
  414b55:	ret    
  414b56:	jl     0x414b7e
  414b58:	cld    
  414b59:	mov    al,ah
  414b5b:	and    eax,0x9baeb74b
  414b60:	mov    bh,BYTE PTR [eax+0x0]
  414b63:	sbb    al,0x11
  414b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b66:	jo     0x414b0d
  414b68:	dec    edi
  414b69:	mov    eax,ds:0x1b768b6c
  414b6e:	push   ebp
  414b6f:	ins    DWORD PTR es:[edi],dx
  414b70:	dec    esp
  414b71:	push   esp
  414b72:	icebp  
  414b73:	jp     0x414bc7
  414b75:	mov    ebx,0x1d2e97ab
  414b7a:	std    
  414b7b:	push   cs
  414b7c:	fild   DWORD PTR [ecx+0x3b]
  414b7f:	jb     0x414bfc
  414b81:	stos   BYTE PTR es:[edi],al
  414b82:	addr16 pop ebx
  414b84:	out    0x65,al
  414b86:	fistp  QWORD PTR [esi]
  414b88:	dec    ebp
  414b89:	mov    dh,ah
  414b8b:	adc    bl,BYTE PTR [ebp+ebx*2+0x5ce1816a]
  414b92:	(bad)  
  414b93:	pop    eax
  414b94:	mov    dl,0xae
  414b96:	test   al,0xe3
  414b98:	xor    eax,0x543b0c5d
  414b9d:	leave  
  414b9e:	loope  0x414b57
  414ba0:	dec    esi
  414ba1:	or     BYTE PTR [ecx+0x2a378fee],dl
  414ba7:	or     ah,ch
  414ba9:	push   edx
  414baa:	inc    ecx
  414bab:	int3   
  414bac:	aad    0x34
  414bae:	sbb    al,0x17
  414bb0:	scas   eax,DWORD PTR es:[edi]
  414bb1:	scas   al,BYTE PTR es:[edi]
  414bb2:	sub    eax,0x574b8070
  414bb7:	enter  0xf87f,0x89
  414bbb:	inc    eax
  414bbc:	scas   eax,DWORD PTR es:[edi]
  414bbd:	sub    eax,0x97ec63c2
  414bc2:	(bad)  
  414bc3:	rcl    BYTE PTR [esi+0x677ab924],1
  414bc9:	or     ah,BYTE PTR [ecx-0x4a723c9e]
  414bcf:	and    dh,BYTE PTR [edx]
  414bd1:	imul   ebp,DWORD PTR [ebp-0x50],0x23
  414bd5:	cmp    bl,BYTE PTR [edi+0x5a]
  414bd8:	lods   al,BYTE PTR ds:[esi]
  414bd9:	test   eax,0xaec98e5f
  414bde:	cmp    al,0x2a
  414be0:	pop    es
  414be1:	inc    ecx
  414be2:	pop    esi
  414be3:	adc    BYTE PTR [esi],bl
  414be5:	loope  0x414bfb
  414be7:	out    dx,al
  414be8:	dec    ebx
  414be9:	bound  ebp,QWORD PTR [ecx+0x43]
  414bec:	cmp    al,0x73
  414bee:	dec    DWORD PTR [edi]
  414bf0:	in     al,0x77
  414bf2:	pop    esp
  414bf3:	mov    bh,0x3c
  414bf5:	pusha  
  414bf6:	mov    ebp,ecx
  414bf8:	jns    0x414b83
  414bfa:	dec    ebx
  414bfb:	(bad)  
  414bfc:	and    eax,0x802f202f
  414c01:	cmp    DWORD PTR [esi-0x7f],edx
  414c04:	shr    DWORD PTR [eax],cl
  414c06:	shl    BYTE PTR [esp+ecx*8-0x17],cl
  414c0a:	loop   0x414c6e
  414c0c:	retf   0x433c
  414c0f:	jae    0x414c78
  414c11:	add    ebx,DWORD PTR [eax]
  414c13:	rcr    BYTE PTR [eax-0xc],cl
  414c16:	mov    ch,0xe2
  414c18:	and    cl,BYTE PTR [esi+0x2f]
  414c1b:	lds    ecx,FWORD PTR [ebx-0x13]
  414c1e:	mov    ch,0x37
  414c20:	ins    DWORD PTR es:[edi],dx
  414c21:	addr16 sub al,0x11
  414c24:	inc    edx
  414c25:	and    cl,BYTE PTR [ebx]
  414c27:	mov    cl,BYTE PTR [ebx-0x3]
  414c2a:	push   ss
  414c2b:	stos   BYTE PTR es:[edi],al
  414c2c:	ret    0x1ba5
  414c2f:	mov    eax,0xa2f5c887
  414c34:	jmp    0x414bbe
  414c36:	pop    edx
  414c37:	iret   
  414c38:	outs   dx,DWORD PTR ds:[esi]
  414c39:	repnz sub al,bl
  414c3c:	dec    eax
  414c3d:	xor    ch,BYTE PTR [ebp+ecx*2-0x57]
  414c41:	mov    ebx,0x99298932
  414c46:	mov    ah,0x39
  414c48:	faddp  st(2),st
  414c4a:	aas    
  414c4b:	(bad)  
  414c4c:	int    0x7f
  414c4e:	mov    esi,0xa3d0e3fd
  414c53:	hlt    
  414c54:	fldcw  WORD PTR [eax-0x70b5369c]
  414c5a:	inc    esp
  414c5b:	aad    0xd6
  414c5d:	cwde   
  414c5e:	add    al,0xbe
  414c60:	test   eax,0x162414e1
  414c65:	pop    ecx
  414c66:	mov    esp,DWORD PTR [esi-0x68]
  414c69:	cmp    edx,DWORD PTR [esi]
  414c6b:	dec    edx
  414c6c:	mov    eax,ds:0xb8a3da91
  414c71:	cwde   
  414c72:	inc    esp
  414c73:	frstor [ebx]
  414c75:	and    DWORD PTR ds:0x45314b2,0x1bbd9d45
  414c7f:	pop    DWORD PTR [ebp+0x2d1cd37c]
  414c85:	pop    ss
  414c86:	shl    eax,cl
  414c88:	retf   0x4c0c
  414c8b:	cs jecxz 0x414c6d
  414c8e:	pop    edi
  414c8f:	jo     0x414cc4
  414c91:	dec    ebx
  414c92:	fs jnp 0x414c50
  414c95:	rcl    DWORD PTR [eax-0x3f4a950],1
  414c9b:	adc    ch,ah
  414c9d:	sub    ch,bl
  414c9f:	add    BYTE PTR [ebx-0x6e],dh
  414ca2:	jmp    0x73679013
  414ca7:	sbb    ch,BYTE PTR ds:0x431e4dd9
  414cad:	data16 jbe 0x414ce4
  414cb0:	sub    BYTE PTR [eax+0x72],0xb6
  414cb4:	jo     0x414c4b
  414cb6:	loope  0x414d06
  414cb8:	jae    0x414d38
  414cba:	cs retf 0x487b
  414cbe:	mov    cl,0x9e
  414cc0:	aas    
  414cc1:	cld    
  414cc2:	retf   0x8cd5
  414cc5:	sub    al,0x8e
  414cc7:	mov    al,ds:0x86499959
  414ccc:	lea    edx,[ecx+0x43]
  414ccf:	push   0xfa083faf
  414cd4:	xor    DWORD PTR [esi],esi
  414cd6:	lock jle 0x414ccb
  414cd9:	mov    esp,0x3464dc2f
  414cde:	fcmovnbe st,st(4)
  414ce0:	lds    ecx,FWORD PTR [esi+0x4768410a]
  414ce6:	daa    
  414ce7:	in     eax,0x96
  414ce9:	adc    eax,ecx
  414ceb:	hlt    
  414cec:	mov    bl,0x61
  414cee:	fdiv   DWORD PTR cs:[ecx+ebx*4-0xe]
  414cf3:	push   es
  414cf4:	inc    edi
  414cf5:	dec    edx
  414cf6:	fwait
  414cf7:	mov    eax,0xa4ce397
  414cfc:	dec    edi
  414cfd:	retf   
  414cfe:	inc    ebx
  414cff:	mov    eax,ds:0x1dd6f6af
  414d04:	sub    BYTE PTR [edi],dh
  414d06:	pop    edi
  414d07:	sar    DWORD PTR [ebx],cl
  414d09:	mov    cl,BYTE PTR [esi+esi*1-0x25]
  414d0d:	push   ebp
  414d0e:	sub    DWORD PTR [edx-0x7cc41324],esp
  414d14:	cmc    
  414d15:	fsubr  QWORD PTR [edx]
  414d17:	iret   
  414d18:	pop    ebp
  414d19:	stc    
  414d1a:	int    0x30
  414d1c:	pusha  
  414d1d:	dec    edx
  414d1e:	adc    eax,0x602ebc9
  414d23:	jns    0x414d45
  414d25:	hlt    
  414d26:	(bad)  
  414d27:	xchg   ecx,eax
  414d28:	leave  
  414d29:	lods   al,BYTE PTR ds:[esi]
  414d2a:	int3   
  414d2b:	xor    al,0xeb
  414d2d:	in     al,dx
  414d2e:	inc    cx
  414d30:	mov    dh,0x3d
  414d32:	xchg   ebp,ebp
  414d34:	outs   dx,DWORD PTR ds:[esi]
  414d35:	jmp    0x414da6
  414d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d38:	hlt    
  414d39:	hlt    
  414d3a:	adc    eax,0xb4c588ce
  414d3f:	lds    esp,FWORD PTR [esi+0x0]
  414d42:	ss je  0x414db4
  414d45:	shl    BYTE PTR [esi+0x6a],cl
  414d48:	or     BYTE PTR [ebp+0x22ee7872],dh
  414d4e:	fnstcw WORD PTR [edx+edx*4]
  414d51:	ins    DWORD PTR es:[edi],dx
  414d52:	fld    TBYTE PTR ds:0x34e77739
  414d58:	xor    ecx,DWORD PTR [ecx-0x62]
  414d5b:	leave  
  414d5c:	into   
  414d5d:	int    0xe2
  414d5f:	dec    eax
  414d60:	cwde   
  414d61:	std    
  414d62:	mov    ds:0xef550632,eax
  414d67:	fistp  DWORD PTR [eax]
  414d69:	das    
  414d6a:	or     WORD PTR [ebx-0x7689271e],bx
  414d71:	add    BYTE PTR [esi+0x1],bl
  414d74:	imul   edx,ecx,0xcc9ffd4f
  414d7a:	mov    ss,WORD PTR [ebx-0xe0e7bbe]
  414d80:	cmp    al,0x6c
  414d82:	scas   eax,DWORD PTR es:[edi]
  414d83:	xor    ah,BYTE PTR [ebx]
  414d85:	ins    BYTE PTR es:[edi],dx
  414d86:	jl     0x414d1a
  414d88:	dec    ebx
  414d89:	mov    DWORD PTR ds:0xe564e61,esi
  414d8f:	rcl    BYTE PTR [eax],cl
  414d91:	es sahf 
  414d93:	rol    DWORD PTR [ebx-0x80],1
  414d96:	popf   
  414d97:	inc    ecx
  414d98:	mov    ebp,DWORD PTR [edx]
  414d9a:	idiv   DWORD PTR [esp+edi*8-0x42423629]
  414da1:	repnz pop es
  414da3:	mov    esp,0xae229cfb
  414da8:	mov    ecx,ecx
  414daa:	iret   
  414dab:	push   ebx
  414dac:	fmul   QWORD PTR [edi+0x1d80ed5]
  414db2:	jns    0x414df6
  414db4:	das    
  414db5:	loope  0x414d7e
  414db7:	cdq    
  414db8:	rol    DWORD PTR [ebx+ebx*4],cl
  414dbb:	or     al,bl
  414dbd:	jmp    FWORD PTR [ecx-0x49]
  414dc0:	lahf   
  414dc1:	cli    
  414dc2:	mov    DWORD PTR [ebx+edi*1],ebp
  414dc5:	std    
  414dc6:	fnstenv [ecx]
  414dc8:	fnstcw WORD PTR [edi-0x4c]
  414dcb:	neg    dl
  414dcd:	jp     0x414d9c
  414dcf:	(bad)  
  414dd0:	jecxz  0x414d8b
  414dd2:	ret    
  414dd3:	pop    ebx
  414dd4:	or     BYTE PTR [edx],al
  414dd6:	mov    al,0x23
  414dd8:	add    ebp,0x38
  414ddb:	and    edi,DWORD PTR [edx-0x37]
  414dde:	test   DWORD PTR [ecx+0x1],edi
  414de1:	in     al,0xad
  414de3:	cmp    DWORD PTR [ebx+0x35e826fc],edx
  414de9:	push   ebx
  414dea:	add    al,bh
  414dec:	xchg   esp,eax
  414ded:	jno    0x414dcc
  414def:	dec    ebp
  414df0:	xchg   edx,esi
  414df2:	(bad)  
  414df4:	xchg   ecx,eax
  414df5:	je     0x414db1
  414df7:	(bad)  
  414df8:	std    
  414df9:	add    eax,esp
  414dfb:	pop    edi
  414dfc:	int3   
  414dfd:	std    
  414dfe:	gs push ds
  414e00:	outs   dx,BYTE PTR ds:[esi]
  414e01:	inc    ebp
  414e02:	xor    edx,ebp
  414e04:	mov    al,ds:0xd7f401af
  414e09:	ins    DWORD PTR es:[edi],dx
  414e0a:	aad    0xb7
  414e0c:	or     ecx,DWORD PTR [esi+eiz*4-0x3b90719c]
  414e13:	je     0x414db7
  414e15:	aas    
  414e16:	sub    al,0x45
  414e18:	rcl    BYTE PTR [ebx-0x2a],0x4a
  414e1c:	mov    al,ds:0x4a66974d
  414e21:	addr16 dec eax
  414e23:	lahf   
  414e24:	cmc    
  414e25:	push   0x68
  414e27:	dec    esi
  414e28:	sub    DWORD PTR [ebx+0x5da2ae53],esi
  414e2e:	arpl   bp,bp
  414e30:	sbb    edi,DWORD PTR [edx+0x21]
  414e33:	or     esi,DWORD PTR [ebx+0x34]
  414e36:	jecxz  0x414e10
  414e38:	addr16 test eax,0x57ad1698
  414e3e:	sbb    BYTE PTR [ebx-0x6679d007],bl
  414e44:	popf   
  414e45:	clc    
  414e46:	imul   edi,DWORD PTR [ecx],0xdc42e390
  414e4c:	call   0xb9896d32
  414e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e52:	ds xchg ebx,eax
  414e54:	push   ss
  414e55:	push   es
  414e56:	(bad)  [edx]
  414e58:	sbb    DWORD PTR [ebp+edi*2-0x3164e66f],ebp
  414e5f:	es scas al,BYTE PTR es:[edi]
  414e61:	std    
  414e62:	jnp    0x414e6c
  414e64:	call   0xe3f4:0x5bc00a6e
  414e6b:	stc    
  414e6c:	fist   WORD PTR [edx+ecx*8]
  414e6f:	push   esi
  414e70:	imul   ebp,esi,0x4c85586
  414e76:	fdivr  DWORD PTR [esi-0xc]
  414e7a:	mov    edx,0x829d9fd0
  414e7f:	repz inc ecx
  414e81:	or     eax,0x4d3a6b61
  414e86:	jmp    0x3b3e:0x55349f4e
  414e8d:	dec    ecx
  414e8e:	aaa    
  414e8f:	(bad)  
  414e90:	scas   al,BYTE PTR es:[edi]
  414e91:	inc    ebx
  414e92:	pop    eax
  414e93:	and    bh,BYTE PTR [eax-0x6e0f2da9]
  414e99:	into   
  414e9a:	repnz xchg esp,eax
  414e9c:	ret    0xb981
  414e9f:	mov    al,0x30
  414ea1:	pop    ds
  414ea2:	gs repz push ds
  414ea5:	sbb    BYTE PTR [edx-0x7e],0x8a
  414ea9:	inc    esi
  414eaa:	stc    
  414eab:	xlat   BYTE PTR ds:[ebx]
  414eac:	sub    al,0x9e
  414eae:	dec    eax
  414eaf:	enter  0x3af1,0xb2
  414eb3:	or     DWORD PTR [edi+edi*4+0x3c15952d],0x956e9492
  414ebe:	push   es
  414ebf:	cli    
  414ec0:	mov    al,0x8c
  414ec2:	inc    ecx
  414ec3:	dec    ebp
  414ec4:	addr16 jmp 0x7391:0x86e8ac09
  414ecc:	lahf   
  414ecd:	add    DWORD PTR cs:[ebp-0x1d06a5a2],ebx
  414ed4:	jnp    0x414efd
  414ed6:	daa    
  414ed7:	mov    DWORD PTR [eax+0x63],esp
  414eda:	fcomp  QWORD PTR [esi-0x12e28fe2]
  414ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee1:	hlt    
  414ee2:	sub    ch,bl
  414ee4:	or     bh,ch
  414ee6:	in     eax,dx
  414ee7:	ins    DWORD PTR es:[edi],dx
  414ee8:	pushf  
  414ee9:	mov    al,0xea
  414eeb:	mov    ah,cl
  414eed:	inc    esp
  414eee:	(bad)  
  414eef:	mov    edi,0x7f50631f
  414ef4:	dec    esi
  414ef5:	pop    edx
  414ef6:	inc    edx
  414ef7:	add    eax,0x8732be4
  414efc:	add    al,0xa3
  414efe:	std    
  414eff:	and    BYTE PTR [edx],dl
  414f01:	inc    ebx
  414f02:	ja     0x414ea8
  414f04:	pop    es
  414f05:	aas    
  414f06:	int    0x1c
  414f08:	hlt    
  414f09:	mov    esi,0xf6580884
  414f0e:	clc    
  414f0f:	push   cs
  414f10:	sub    bl,BYTE PTR [ebp-0x691be4cf]
  414f16:	fmul   st(6),st
  414f18:	stos   BYTE PTR es:[edi],al
  414f19:	mov    esp,0x2d4d382f
  414f1e:	jl     0x414f09
  414f20:	mov    cl,0x8e
  414f22:	cwde   
  414f23:	jb     0x414ef4
  414f25:	in     eax,dx
  414f26:	mov    ch,0x2
  414f28:	ins    BYTE PTR es:[edi],dx
  414f29:	imul   ebp,DWORD PTR [ebp+0x3927aaff],0x3154fcc5
  414f33:	fidiv  WORD PTR [edi]
  414f35:	mov    edx,0x730b27d6
  414f3a:	jl     0x414f35
  414f3c:	imul   eax,DWORD PTR [ecx-0x44e5afb4],0x30
  414f43:	and    al,BYTE PTR [eax]
  414f45:	stos   DWORD PTR es:[edi],eax
  414f46:	sub    al,0x9a
  414f48:	loop   0x414fbc
  414f4a:	or     eax,0x590368cb
  414f4f:	mov    ss:0xe655a1a,al
  414f55:	fnstsw WORD PTR [ebx]
  414f57:	icebp  
  414f58:	repnz in eax,0xa4
  414f5b:	in     eax,dx
  414f5c:	push   0x11f6627c
  414f61:	push   0xe9cbaf0b
  414f66:	sub    BYTE PTR [edx-0x2d6c9452],0x96
  414f6d:	xchg   esi,eax
  414f6e:	xor    BYTE PTR [esi+edx*1+0x23e49040],cl
  414f75:	cmp    BYTE PTR [ebp-0x13],0x34
  414f79:	gs ds in al,0xa0
  414f7d:	jmp    0x414fc6
  414f7f:	mov    ecx,0x4b77aac2
  414f84:	fwait
  414f85:	dec    DWORD PTR [eax*8+0x34c77f22]
  414f8c:	add    eax,0x67b69e5
  414f91:	int3   
  414f92:	sub    esi,DWORD PTR [eax-0x2a]
  414f95:	imul   esi,DWORD PTR [esi-0x1],0x54
  414f99:	inc    ebp
  414f9a:	aas    
  414f9b:	mul    BYTE PTR [edi-0x3e]
  414f9e:	hlt    
  414f9f:	push   edi
  414fa0:	or     BYTE PTR [ecx-0x65],bh
  414fa3:	and    BYTE PTR [ecx],ch
  414fa5:	icebp  
  414fa6:	retf   0xfaa
  414fa9:	ret    
  414faa:	sub    ch,al
  414fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fad:	jmp    0x414f6f
  414faf:	stc    
  414fb0:	mov    ecx,DWORD PTR [ebx]
  414fb2:	(bad)  
  414fb3:	mov    esi,0x71bd2a7d
  414fb8:	int3   
  414fb9:	jae    0x414fb1
  414fbb:	arpl   sp,sp
  414fbd:	bound  edi,QWORD PTR [ebx]
  414fbf:	ret    
  414fc0:	push   eax
  414fc1:	inc    ecx
  414fc2:	sub    eax,0x736b2daf
  414fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc8:	(bad)  [eax-0x60704132]
  414fce:	in     eax,0xf0
  414fd0:	sbb    DWORD PTR [ecx+0x6958ed8e],esp
  414fd6:	nop
  414fd7:	daa    
  414fd8:	lea    eax,[esi-0x3a]
  414fdb:	mov    ds:0x21de016e,eax
  414fe0:	push   eax
  414fe1:	fdivr  st(5),st
  414fe3:	inc    ebx
  414fe4:	mov    ah,0xa
  414fe6:	adc    eax,0xaa49977c
  414feb:	inc    esp
  414fec:	or     eax,0x2f53dfa0
  414ff1:	div    esp
  414ff3:	jmp    0x2c9a:0xe9731ef1
  414ffa:	std    
  414ffb:	or     DWORD PTR [ebx+eax*1-0xc],0x34
  415000:	and    cl,0x54
  415003:	push   es
  415004:	xor    BYTE PTR [edi],al
  415006:	cmp    ecx,DWORD PTR ss:[edx]
  415009:	inc    ecx
  41500a:	jmp    0x41506e
  41500c:	push   0x2ee7c577
  415011:	fwait
  415012:	mov    dh,bh
  415014:	mov    BYTE PTR [ebp-0x8dcf29],al
  41501a:	dec    ecx
  41501b:	js     0x415014
  41501d:	xor    eax,0x90bc4206
  415022:	out    dx,al
  415023:	xor    cl,cl
  415025:	jge    0x41500d
  415027:	lods   eax,DWORD PTR ds:[esi]
  415028:	adc    bl,BYTE PTR [ebp-0x3]
  41502b:	pop    esi
  41502c:	ins    BYTE PTR es:[edi],dx
  41502d:	pop    esp
  41502e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502f:	cmp    DWORD PTR [eax-0x6a],eax
  415032:	cmp    DWORD PTR [ecx+0x58a4524c],0xffffffa7
  415039:	jo     0x414fca
  41503b:	jne    0x415043
  41503d:	and    DWORD PTR [esi+0x4d45a9ed],ecx
  415043:	mov    ecx,0xe6f54b5b
  415048:	and    al,0xc3
  41504a:	fsub   DWORD PTR [edi+eax*8+0x2f]
  41504e:	sub    al,0xd0
  415050:	js     0x415035
  415052:	jnp    0x415006
  415054:	jnp    0x41508d
  415056:	popf   
  415057:	or     edx,DWORD PTR [ecx-0x5cfe1d33]
  41505d:	icebp  
  41505e:	cmp    ch,0x8a
  415061:	pop    ss
  415062:	push   cs
  415063:	mov    eax,ds:0x3461d72
  415068:	mov    ebx,DWORD PTR [ecx+0x740ab21c]
  41506e:	pop    ds
  41506f:	xor    al,bh
  415071:	sub    ebp,DWORD PTR [ecx+0x4e]
  415074:	js     0x4150cb
  415076:	inc    edi
  415077:	cmp    DWORD PTR [bp+si+0x4397],0x30
  41507d:	jmp    0x9cd0:0xe407afec
  415084:	xchg   DWORD PTR [edx+0x5c],eax
  415087:	sub    eax,0xa6cbd671
  41508c:	pop    esp
  41508d:	ss jp  0x415055
  415090:	mov    cs,edi
  415092:	or     eax,0xd0b05b22
  415097:	gs pop ebp
  415099:	inc    eax
  41509a:	maskmovq mm4,(bad)
  41509b:	mul    DWORD PTR [eax]
  41509d:	loope  0x41509d
  41509f:	and    eax,0x35667b95
  4150a4:	aam    0x77
  4150a6:	aad    0x28
  4150a8:	sbb    al,0x57
  4150aa:	mov    esi,0xb53ebda0
  4150af:	in     al,dx
  4150b0:	cld    
  4150b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150b3:	je     0x4150d4
  4150b5:	ss mov bl,ah
  4150b8:	push   edi
  4150b9:	aad    0x3
  4150bb:	stos   BYTE PTR es:[edi],al
  4150bc:	test   eax,0x6ceb6b9d
  4150c1:	jmp    0x6af3:0xf64cd6c9
  4150c8:	inc    eax
  4150c9:	lods   al,BYTE PTR ds:[esi]
  4150ca:	cwde   
  4150cb:	aas    
  4150cc:	xchg   BYTE PTR [eax-0x185ff012],dh
  4150d2:	(bad)  [esp+ecx*8+0x19e02f29]
  4150d9:	call   0x781:0x96aedd9a
  4150e0:	pop    ds
  4150e1:	push   edi
  4150e2:	pop    ss
  4150e3:	push   cs
  4150e4:	xchg   edi,eax
  4150e5:	in     eax,dx
  4150e6:	push   ss
  4150e7:	pushf  
  4150e8:	cmp    dl,BYTE PTR [edi+0x76]
  4150eb:	and    bl,BYTE PTR [esi+0x4638a5b7]
  4150f1:	comiss xmm7,xmm2
  4150f4:	push   esi
  4150f5:	fwait
  4150f6:	jae    0x4150d8
  4150f8:	xchg   ecx,eax
  4150f9:	mov    ch,0xe0
  4150fb:	pop    edi
  4150fc:	xchg   esp,eax
  4150fd:	daa    
  4150fe:	push   ecx
  4150ff:	cld    
  415100:	and    BYTE PTR [ebx-0x158c5e03],0x40
  415107:	jg     0x415125
  415109:	adc    al,0xc
  41510b:	or     esi,DWORD PTR ds:0xd6de01ce
  415111:	jbe    0x4150dd
  415113:	mov    bh,0x68
  415115:	cmp    al,0x51
  415117:	and    DWORD PTR [ebx-0x1722b0c3],edx
  41511d:	and    edx,esp
  41511f:	dec    edx
  415120:	inc    ebp
  415121:	or     al,ah
  415123:	and    DWORD PTR [ecx-0x64],0xffffffd7
  415127:	pop    edi
  415128:	jo     0x4150c9
  41512a:	jne    0x415156
  41512c:	push   eax
  41512d:	push   edi
  41512e:	enter  0xc76e,0xfa
  415132:	sub    al,0x48
  415134:	mov    DWORD PTR [edi],0x3e2caf96
  41513a:	jmp    0x1e839653
  41513f:	or     al,0x71
  415141:	sahf   
  415142:	dec    ebx
  415143:	in     al,0x2f
  415145:	pop    es
  415146:	addr16 js 0x4151b2
  415149:	and    al,0x2d
  41514b:	push   eax
  41514c:	test   BYTE PTR [edi],bl
  41514e:	clc    
  41514f:	mov    ah,0x6f
  415151:	ins    BYTE PTR es:[edi],dx
  415152:	push   0x35
  415154:	pop    ss
  415155:	sbb    dl,BYTE PTR [edx]
  415157:	cmp    bh,bh
  415159:	lock arpl WORD PTR [ecx],cx
  41515c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41515d:	dec    eax
  41515e:	inc    edi
  41515f:	xchg   DWORD PTR [eax],eax
  415161:	jg     0x415114
  415163:	pop    esi
  415164:	test   al,0x10
  415166:	pop    ds
  415167:	sbb    esi,ecx
  415169:	jno    0x41510d
  41516b:	adc    eax,0xe6a16505
  415170:	fs (bad) 
  415172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415173:	adc    esi,edx
  415175:	jne    0x41516b
  415177:	cmp    al,0xd7
  415179:	pop    edx
  41517a:	adc    al,0x1e
  41517c:	mov    eax,ds:0x4e3c28f9
  415181:	jl     0x41511a
  415183:	lahf   
  415184:	mov    ebx,0x60783ec1
  415189:	shl    DWORD PTR [ebx],cl
  41518b:	out    0x7e,eax
  41518d:	jmp    0x41516d
  41518f:	and    ecx,DWORD PTR ds:0xe068ef5b
  415195:	retw   0xd719
  415199:	pop    edi
  41519a:	mov    edi,0x58fd088b
  41519f:	mov    ebx,0x92647f6d
  4151a4:	in     eax,dx
  4151a5:	sbb    ah,BYTE PTR [edi-0x27]
  4151a8:	aad    0x7b
  4151aa:	jns    0x4151f1
  4151ac:	out    dx,eax
  4151ad:	jg     0x4151bd
  4151af:	repnz test DWORD PTR [ecx+ecx*8+0x21],edx
  4151b4:	div    esi
  4151b6:	and    ah,BYTE PTR [eax-0x65]
  4151b9:	call   0x4ec:0xd6e4c606
  4151c0:	push   0x939e4b9c
  4151c5:	fcom   st(4)
  4151c7:	dec    ecx
  4151c8:	mov    eax,ds:0xe43f83e6
  4151cd:	mov    edi,0x8149f079
  4151d2:	sbb    esp,ebx
  4151d4:	xor    ebp,DWORD PTR [ecx-0xc]
  4151d7:	and    bh,BYTE PTR [esi-0x4b44d993]
  4151dd:	jbe    0x4151d9
  4151df:	fs iret 
  4151e1:	add    BYTE PTR [ecx-0x1ece6466],0x47
  4151e8:	pop    ebp
  4151e9:	fild   QWORD PTR [ebx+0x24853417]
  4151ef:	fld    QWORD PTR [edx+0x1d]
  4151f2:	clc    
  4151f3:	ja     0x415241
  4151f5:	pop    ebx
  4151f6:	les    ebx,FWORD PTR [ebx+eiz*1]
  4151f9:	cmp    DWORD PTR [bx+si+0x4867],0x21595754
  415202:	or     DWORD PTR [edx],0x1b115a87
  415208:	and    BYTE PTR [edi+0x22f7ad03],bh
  41520e:	mov    esi,0xe4d278d3
  415213:	dec    ebp
  415214:	out    0xcd,eax
  415216:	rcr    BYTE PTR [edi+0x2a],cl
  415219:	jg     0x41523b
  41521b:	mov    ebx,0x7bbc2f43
  415220:	pop    ds
  415221:	xchg   ebp,eax
  415222:	aas    
  415223:	sbb    bl,0xa5
  415226:	loope  0x4151b6
  415228:	adc    dl,BYTE PTR ds:0x4ecdb3b0
  41522e:	mov    dl,bh
  415230:	push   ds
  415231:	dec    edi
  415232:	add    eax,0x922fa427
  415237:	jl     0x415296
  415239:	stos   DWORD PTR es:[edi],eax
  41523a:	mov    eax,ds:0x92294f4f
  41523f:	xchg   ebx,eax
  415240:	cmp    dh,BYTE PTR [edx-0x7c]
  415243:	ja     0x41522a
  415245:	repz in al,dx
  415247:	in     al,dx
  415248:	aas    
  415249:	cwde   
  41524a:	shl    dl,1
  41524c:	aas    
  41524d:	inc    esp
  41524e:	aam    0xf9
  415250:	out    0x4e,al
  415252:	loop   0x41521b
  415254:	fwait
  415255:	(bad)  
  415256:	repnz mov edi,0x7f1a4470
  41525c:	ja     0x415290
  41525e:	sub    eax,0x42898435
  415263:	jmp    0x11e:0x1fe9ef74
  41526a:	inc    edi
  41526b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41526c:	out    dx,eax
  41526d:	dec    ebp
  41526e:	test   al,0xdf
  415270:	xchg   ecx,eax
  415271:	mov    cl,0x13
  415273:	(bad)  
  415274:	xor    al,0x4
  415276:	in     eax,dx
  415277:	push   0x3
  415279:	mov    edx,0x3f27748b
  41527e:	jbe    0x415232
  415280:	xchg   BYTE PTR [ecx],dh
  415282:	and    edx,DWORD PTR ds:0xfad45552
  415288:	scas   al,BYTE PTR es:[edi]
  415289:	sub    BYTE PTR [edx-0x28],bl
  41528c:	adc    al,0xef
  41528e:	push   ecx
  41528f:	mov    ebx,0x70ce4b87
  415294:	scas   eax,DWORD PTR es:[edi]
  415295:	dec    ebx
  415296:	add    bl,BYTE PTR [edx+0x62c6225f]
  41529c:	inc    edi
  41529d:	fild   DWORD PTR [eax-0x3c]
  4152a0:	scas   al,BYTE PTR es:[edi]
  4152a1:	call   0xff8b:0x4f0cfeb
  4152a8:	xchg   edx,eax
  4152a9:	mov    edi,ecx
  4152ab:	sbb    ah,BYTE PTR [ebx-0x28db1abf]
  4152b1:	push   edx
  4152b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152b4:	inc    eax
  4152b5:	or     al,0xb5
  4152b7:	popf   
  4152b8:	add    al,0x58
  4152ba:	sub    esp,DWORD PTR [ecx]
  4152bc:	test   DWORD PTR [eax],ebx
  4152be:	inc    ebx
  4152bf:	test   BYTE PTR [edx-0x20],cl
  4152c2:	sub    DWORD PTR [ecx],edx
  4152c4:	cmp    edx,edi
  4152c6:	fadd   DWORD PTR [ebp+0x3a7151a2]
  4152cc:	in     al,dx
  4152cd:	mov    eax,ds:0x6402b6d0
  4152d2:	mov    fs,WORD PTR [edi]
  4152d4:	push   ebp
  4152d5:	push   cs
  4152d6:	call   DWORD PTR ds:0x417014
  4152dc:	mov    DWORD PTR [ebp-0x2c],eax
  4152df:	movzx  eax,WORD PTR [ebp-0x2c]
  4152e3:	cmp    eax,0x539
  4152e8:	jne    0x415319
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0x82b6d76e
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0x953b392e
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	push   ss
  415508:	xor    esi,DWORD PTR [edx+0x2b5f90a7]
  41550e:	dec    ebx
  41550f:	pop    ebx
  415510:	ret    0x2aa4
  415513:	dec    esp
  415514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415515:	imul   esp,DWORD PTR [edx],0x2b5f931f
  41551b:	dec    ebx
  41551c:	pop    edi
  41551d:	ret    0x6aa4
  415520:	mov    bl,0x5b
  415522:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415528:	dec    ebx
  415529:	pop    edi
  41552a:	ret    0x2aa4
  41552d:	mov    bl,0x5b
  41552f:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415535:	dec    ebx
  415536:	pop    edi
  415537:	ret    0x2aa4
  41553a:	mov    bl,0x5b
  41553c:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415542:	dec    ebx
  415543:	push   edi
  415544:	ret    
  415545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415546:	sub    bh,BYTE PTR [ebp-0x58d32cbc]
  41554c:	daa    
  41554d:	push   esi
  41554e:	out    0x6a,al
  415550:	out    0xc3,eax
  415552:	call   0x150e83e
  415557:	dec    ebx
  415558:	aam    0xb3
  41555a:	das    
  41555b:	pop    ecx
  41555c:	and    al,0x38
  41555e:	mov    al,0xc5
  415560:	inc    edi
  415561:	xchg   ebx,eax
  415562:	cmp    BYTE PTR [eax],cl
  415564:	dec    esp
  415565:	leave  
  415566:	cld    
  415567:	sub    ecx,DWORD PTR [ebx]
  415569:	sub    DWORD PTR [edx],edi
  41556b:	loop   0x415543
  41556d:	pop    edi
  41556e:	fnstsw WORD PTR [ebx+0x0]
  415571:	dec    esp
  415572:	xchg   edi,edx
  415574:	adc    BYTE PTR [eax+0x6b],bh
  415577:	xor    ch,BYTE PTR [ebp+0x569d4fc0]
  41557d:	sub    BYTE PTR fs:[ebx+0x4b2b5f93],al
  415584:	pop    edi
  415585:	ret    0x50a4
  415588:	jl     0x4155d7
  41558a:	out    0x1c,eax
  41558c:	or     ebx,ebp
  41558e:	adc    BYTE PTR ds:0x9a1f27e5,0x84
  415595:	retf   
  415596:	xchg   BYTE PTR [ecx+edx*1+0x41],cl
  41559a:	dec    esi
  41559b:	jge    0x415522
  41559d:	xor    eax,DWORD PTR [edx+0x6ef897e7]
  4155a3:	in     al,0xc7
  4155a5:	pop    edx
  4155a6:	jp     0x41555e
  4155a8:	ins    BYTE PTR es:[edi],dx
  4155a9:	clc    
  4155aa:	xchg   esi,eax
  4155ab:	dec    edx
  4155ac:	ins    BYTE PTR es:[edi],dx
  4155ad:	fdivr  st(7),st
  4155af:	loop   0x415534
  4155b1:	mov    edx,0x273d9cff
  4155b6:	idiv   BYTE PTR [ecx+ecx*4+0x39]
  4155ba:	jns    0x4155d9
  4155bc:	sbb    eax,0x7115b423
  4155c1:	js     0x415545
  4155c3:	push   cs
  4155c4:	in     eax,0x27
  4155c6:	pop    ds
  4155c7:	call   0xdf8d:0x2086ca84
  4155ce:	dec    esi
  4155cf:	popf   
  4155d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d1:	and    DWORD PTR [edx+0x6e520af2],eax
  4155d7:	jle    0x415633
  4155d9:	cmc    
  4155da:	jp     0x4155c6
  4155dc:	icebp  
  4155dd:	push   ebx
  4155de:	xchg   esi,eax
  4155df:	jp     0x4155d2
  4155e1:	inc    esi
  4155e2:	test   DWORD PTR [ebp+esi*8-0x5f7d00ef],0xf174f6ba
  4155ed:	mov    edx,0x38da7879
  4155f2:	add    DWORD PTR [ecx+ecx*1],ebx
  4155f5:	jmp    0x415579
  4155f7:	sub    ecx,DWORD PTR [ebx+0x5f]
  4155fa:	ret    0x2aa4
  4155fd:	mov    bl,0x5b
  4155ff:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415605:	dec    ebx
  415606:	pop    edi
  415607:	ret    0x2aa4
  41560a:	mov    bl,0x5b
  41560c:	imul   esp,DWORD PTR [edx],0x2b1ac3a7
  415612:	dec    ebx
  415613:	adc    eax,ebx
  415615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415616:	sub    dl,ch
  415618:	adc    eax,0x93a76d24
  41561d:	pop    edi
  41561e:	sub    ecx,DWORD PTR [ebx+0x5f]
  415621:	ret    0xcaa4
  415624:	mov    bl,0x59
  415626:	push   0x5f99a629
  41562b:	sub    ebp,DWORD PTR [ecx-0x515b3da5]
  415631:	mov    ch,0x5b
  415633:	imul   esp,DWORD PTR [edx],0x961c93a7
  415639:	dec    ebx
  41563a:	pop    edi
  41563b:	ret    0x2ab4
  41563e:	mov    bl,0x5b
  415640:	imul   esp,DWORD PTR [edi],0x6b5f93a7
  415646:	dec    ebx
  415647:	pop    edi
  415648:	shl    BYTE PTR [edx+ebp*1+0x226959b3],cl
  41564f:	mov    ds:0x4b2b5e93,al
  415654:	pop    edi
  415655:	ret    0x2fa4
  415658:	mov    bl,0x5a
  41565a:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415660:	jnp    0x4156b5
  415662:	ret    0x2ea4
  415665:	mov    bl,0x5b
  415667:	arpl   sp,bx
  415669:	mov    ds:0xb2b5d93,eax
  41566e:	faddp  st(2),st
  415670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415671:	cmp    dh,BYTE PTR [ebx-0x58dd86a5]
  415677:	xchg   ebx,eax
  415678:	pop    edi
  415679:	cmp    ecx,DWORD PTR [ebx+0x5f]
  41567c:	shl    BYTE PTR [edx+ebp*1+0x22695bb3],cl
  415683:	mov    bh,0x93
  415685:	pop    edi
  415686:	sub    ecx,DWORD PTR [ebx+0x5f]
  415689:	ret    0x2aa4
  41568c:	mov    bl,0x5b
  41568e:	imul   esp,DWORD PTR [esi],0x725f9fa7
  415694:	dec    eax
  415695:	pop    edi
  415696:	ret    0xeaa4
  415699:	mov    eax,0xa71d3c5b
  41569e:	xchg   ebx,eax
  41569f:	pop    edi
  4156a0:	sub    ecx,DWORD PTR [ebx+0x5f]
  4156a3:	ret    0x2aa4
  4156a6:	mov    bl,0x5b
  4156a8:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4156ae:	dec    ebx
  4156af:	pop    edi
  4156b0:	loop   0x41565a
  4156b2:	sub    ch,BYTE PTR [ebx-0x58dd96a5]
  4156b8:	xchg   ebx,eax
  4156b9:	pop    edi
  4156ba:	sub    ecx,DWORD PTR [ebx+0x5f]
  4156bd:	ret    0x2aa4
  4156c0:	mov    bl,0x5b
  4156c2:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4156c8:	dec    ebx
  4156c9:	pop    edi
  4156ca:	ret    0x2aa4
  4156cd:	mov    bl,0x5b
  4156cf:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4156d5:	dec    ebx
  4156d6:	pop    edi
  4156d7:	ret    0x2aa4
  4156da:	mov    bl,0x5b
  4156dc:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4156e2:	dec    ebx
  4156e3:	pop    edi
  4156e4:	ret    0x2aa4
  4156e7:	mov    bl,0x5b
  4156e9:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4156ef:	dec    ebx
  4156f0:	pop    edi
  4156f1:	ret    0x2aa4
  4156f4:	mov    bl,0x5b
  4156f6:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4156fc:	dec    ebx
  4156fd:	pop    edi
  4156fe:	ret    0x2aa4
  415701:	mov    bl,0x5b
  415703:	imul   esp,DWORD PTR [edx],0x5f7193a7
  415709:	cs daa 
  41570b:	mov    dh,0xa4
  41570d:	sub    dh,BYTE PTR [ebx-0x58d626a5]
  415713:	xchg   ebx,eax
  415714:	dec    edi
  415715:	sub    ecx,DWORD PTR [ebx+0x5f]
  415718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415719:	mov    al,ds:0x695fb32a
  41571e:	and    dh,bh
  415720:	(bad)  
  415721:	sbb    al,0x19
  415723:	pop    ds
  415724:	adc    dl,al
  415726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415727:	sub    dh,BYTE PTR [ebx-0x58fd96a5]
  41572d:	xchg   ebx,eax
  41572e:	mov    edi,0xb02c3905
  415733:	(bad)  
  415734:	sub    dh,BYTE PTR [ebx-0x58bd96a5]
  41573a:	xchg   ebx,eax
  41573b:	pop    edi
  41573c:	jmp    0x41577e
  41573e:	pop    edi
  41573f:	ret    0x2af6
  415742:	mov    bl,0x5b
  415744:	add    esp,DWORD PTR [esi]
  415746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415747:	xchg   ebx,eax
  415748:	pop    edi
  415749:	sub    ecx,DWORD PTR [ebx+0x5f]
  41574c:	ret    0x2aa4
  41574f:	mov    bl,0x5b
  415751:	imul   esp,DWORD PTR [edx],0xcb5f9387
  415757:	gs sub eax,0xd045c8a7
  41575d:	pop    ebx
  41575e:	imul   esp,DWORD PTR [edx],0x2b5f93a5
  415764:	imul   edx,DWORD PTR [ebx-0x3e],0xffffffa4
  415768:	sub    BYTE PTR [ebx-0x5c6196a5],dh
  41576e:	xchg   ebx,eax
  41576f:	pop    edi
  415770:	sub    ecx,DWORD PTR [ebx+0x5f]
  415773:	ret    0x2aa4
  415776:	mov    bl,0x5b
  415778:	imul   esp,DWORD PTR [edx],0x2b5fd3a7
  41577e:	mov    ebx,DWORD PTR [edi-0x3e]
  415781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415782:	sub    dh,BYTE PTR [ebx-0x58dd96a5]
  415788:	xchg   ebx,eax
  415789:	pop    edi
  41578a:	sub    ecx,DWORD PTR [ebx+0x5f]
  41578d:	ret    0x2aa4
  415790:	mov    bl,0x5b
  415792:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415798:	dec    ebx
  415799:	pop    edi
  41579a:	ret    0x2aa4
  41579d:	mov    bl,0x5b
  41579f:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4157a5:	dec    ebx
  4157a6:	pop    edi
  4157a7:	ret    0x2aa4
  4157aa:	mov    bl,0x5b
  4157ac:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4157b2:	dec    ebx
  4157b3:	pop    edi
  4157b4:	ret    0x2aa4
  4157b7:	mov    bl,0x5b
  4157b9:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4157bf:	dec    ebx
  4157c0:	pop    edi
  4157c1:	ret    0x2aa4
  4157c4:	mov    bl,0x5b
  4157c6:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4157cc:	dec    ebx
  4157cd:	pop    edi
  4157ce:	ret    0x2aa4
  4157d1:	mov    bl,0x5b
  4157d3:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4157d9:	dec    ebx
  4157da:	pop    edi
  4157db:	ret    0x2aa4
  4157de:	mov    bl,0x5b
  4157e0:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4157e6:	dec    ebx
  4157e7:	pop    edi
  4157e8:	ret    0x2aa4
  4157eb:	mov    bl,0x5b
  4157ed:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4157f3:	dec    ebx
  4157f4:	pop    edi
  4157f5:	ret    0x2aa4
  4157f8:	mov    bl,0x5b
  4157fa:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415800:	dec    ebx
  415801:	pop    edi
  415802:	ret    0x2aa4
  415805:	mov    bl,0x5b
  415807:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  41580d:	dec    ebx
  41580e:	pop    edi
  41580f:	ret    0x2aa4
  415812:	mov    bl,0x5b
  415814:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  41581a:	dec    ebx
  41581b:	pop    edi
  41581c:	ret    0x2aa4
  41581f:	mov    bl,0x5b
  415821:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415827:	dec    ebx
  415828:	pop    edi
  415829:	ret    0x2aa4
  41582c:	mov    bl,0x5b
  41582e:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415834:	dec    ebx
  415835:	pop    edi
  415836:	ret    0x2aa4
  415839:	mov    bl,0x5b
  41583b:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415841:	dec    ebx
  415842:	pop    edi
  415843:	ret    0x2aa4
  415846:	mov    bl,0x5b
  415848:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  41584e:	dec    ebx
  41584f:	pop    edi
  415850:	ret    0x2aa4
  415853:	mov    bl,0x5b
  415855:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  41585b:	dec    ebx
  41585c:	pop    edi
  41585d:	ret    0x2aa4
  415860:	mov    bl,0x5b
  415862:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415868:	dec    ebx
  415869:	pop    edi
  41586a:	ret    0x2aa4
  41586d:	mov    bl,0x5b
  41586f:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415875:	dec    ebx
  415876:	pop    edi
  415877:	ret    0x2aa4
  41587a:	mov    bl,0x5b
  41587c:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415882:	dec    ebx
  415883:	pop    edi
  415884:	ret    0x2aa4
  415887:	mov    bl,0x5b
  415889:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  41588f:	dec    ebx
  415890:	pop    edi
  415891:	ret    0x2aa4
  415894:	mov    bl,0x5b
  415896:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  41589c:	dec    ebx
  41589d:	pop    edi
  41589e:	ret    0x2aa4
  4158a1:	mov    bl,0x5b
  4158a3:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4158a9:	dec    ebx
  4158aa:	pop    edi
  4158ab:	ret    0x2aa4
  4158ae:	mov    bl,0x5b
  4158b0:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4158b6:	dec    ebx
  4158b7:	pop    edi
  4158b8:	ret    0x2aa4
  4158bb:	mov    bl,0x5b
  4158bd:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4158c3:	dec    ebx
  4158c4:	pop    edi
  4158c5:	ret    0x2aa4
  4158c8:	mov    bl,0x5b
  4158ca:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4158d0:	dec    ebx
  4158d1:	pop    edi
  4158d2:	ret    0x2aa4
  4158d5:	mov    bl,0x5b
  4158d7:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4158dd:	dec    ebx
  4158de:	pop    edi
  4158df:	ret    0x2aa4
  4158e2:	mov    bl,0x5b
  4158e4:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4158ea:	dec    ebx
  4158eb:	pop    edi
  4158ec:	ret    0x2aa4
  4158ef:	mov    bl,0x5b
  4158f1:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  4158f7:	dec    ebx
  4158f8:	pop    edi
  4158f9:	ret    0x2aa4
  4158fc:	mov    bl,0x5b
  4158fe:	imul   esp,DWORD PTR [edx],0x2b5f93a7
  415904:	dec    ebx
  415905:	pop    edi
  415906:	ret    0x640f
  415909:	mov    eax,0xa722465b
  41590e:	sbb    DWORD PTR [edi+0x2b],0x61
  415912:	std    
  415913:	sbb    al,dl
  415915:	xchg   edi,eax
  415916:	cld    
  415917:	push   0xae9c097b
  41591c:	mov    al,0x9e
  41591e:	fstp   DWORD PTR [ecx-0x75]
  415921:	std    
  415922:	fld    TBYTE PTR [edi-0x18]
  415925:	jp     0x41598c
  415927:	pushf  
  415928:	jp     0x4158b1
  41592a:	mov    al,ds:0x5e002e09
  41592f:	gs and al,0x5
  415932:	mov    dh,0xf6
  415934:	out    0xf0,eax
  415936:	xor    cl,al
  415938:	lock mov fs,edi
  41593b:	out    0x23,eax
  41593d:	cmp    ebx,ebx
  41593f:	jle    0x415920
  415941:	xchg   DWORD PTR [edx+0x13496867],ebp
  415947:	test   DWORD PTR [esi+esi*4+0x64],edi
  41594b:	adc    al,0x57
  41594d:	xchg   ecx,eax
  41594e:	push   ecx
  41594f:	addr16 inc esi
  415951:	cmp    al,0x5
  415953:	scas   al,BYTE PTR es:[edi]
  415954:	nop
  415955:	retf   
  415956:	mov    dh,0x54
  415958:	dec    ebx
  415959:	not    dl
  41595b:	or     eax,0xaef2a9
  415960:	mov    ds:0x92cc4b68,eax
  415965:	int3   
  415966:	mov    ch,0xc3
  415968:	cmp    al,0xb4
  41596a:	or     eax,0x371f4f1e
  41596f:	or     BYTE PTR [esi+0xe],0xb4
  415973:	adc    al,0x1a
  415975:	repnz and al,0xab
  415978:	push   edi
  415979:	sbb    al,BYTE PTR [edi-0x26]
  41597c:	mov    cl,0x4f
  41597e:	adc    ecx,edx
  415980:	dec    ebp
  415981:	add    DWORD PTR ds:0x3049c477,esi
  415987:	inc    esi
  415988:	and    DWORD PTR [ebx],esi
  41598a:	push   cs
  41598b:	out    0xcb,al
  41598d:	ret    0x3ad0
  415990:	loope  0x4159cb
  415992:	or     eax,0x3146c11d
  415997:	ins    DWORD PTR es:[edi],dx
  415998:	cmp    ah,BYTE PTR [edx+0x9871d5d]
  41599e:	sub    DWORD PTR [edi],eax
  4159a0:	pop    eax
  4159a1:	lods   al,BYTE PTR ds:[esi]
  4159a2:	adc    eax,0x1da90491
  4159a7:	dec    ebx
  4159a8:	fcos   
  4159aa:	pop    ecx
  4159ab:	xchg   esi,eax
  4159ac:	in     al,0xb8
  4159ae:	cmc    
  4159af:	or     al,0x48
  4159b1:	inc    DWORD PTR [edi-0x451ce2f9]
  4159b7:	scas   al,BYTE PTR es:[edi]
  4159b8:	fwait
  4159b9:	add    dl,ah
  4159bb:	aaa    
  4159bc:	jbe    0x415a0a
  4159be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159bf:	cmp    ebx,DWORD PTR [esi-0x5c34fe42]
  4159c5:	clc    
  4159c6:	adc    DWORD PTR [edx],0xfffffffc
  4159c9:	and    eax,0x403c737
  4159ce:	jp     0x415979
  4159d0:	mov    WORD PTR [esi-0x9],cs
  4159d3:	repnz cmp al,0x96
  4159d6:	xchg   edx,eax
  4159d7:	push   ds
  4159d8:	mov    ebx,0x820a93b2
  4159dd:	and    ebx,DWORD PTR [esi+0x7d4ed934]
  4159e3:	lods   eax,DWORD PTR ds:[esi]
  4159e4:	push   eax
  4159e5:	mov    al,0x58
  4159e7:	ins    BYTE PTR es:[edi],dx
  4159e8:	or     bh,bl
  4159ea:	out    0x7a,al
  4159ec:	xlat   BYTE PTR ds:[ebx]
  4159ed:	ret    
  4159ee:	xchg   ebx,esi
  4159f0:	frstor [esp+eiz*4]
  4159f3:	sub    edi,DWORD PTR [ebp-0x51845bbf]
  4159f9:	sbb    DWORD PTR [edx-0x7b],ebx
  4159fc:	in     eax,0x65
  4159fe:	iret   
  4159ff:	xchg   BYTE PTR [ecx-0x43],bh
  415a02:	inc    esp
  415a03:	std    
  415a04:	xchg   edi,eax
  415a05:	inc    edi
  415a06:	jp     0x4159f7
  415a08:	out    0xb1,eax
  415a0a:	pop    eax
  415a0b:	pop    edx
  415a0c:	lds    eax,FWORD PTR [esi+0x4d237af4]
  415a12:	xchg   ecx,eax
  415a13:	lahf   
  415a14:	mov    ?,ebp
  415a16:	popf   
  415a17:	daa    
  415a18:	add    al,0x2a
  415a1a:	jns    0x415a8d
  415a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a1d:	xor    DWORD PTR [ecx-0x1f0ee91c],ebx
  415a23:	adc    dh,ch
  415a25:	leave  
  415a26:	xchg   ebp,eax
  415a27:	or     eax,0x72b7b788
  415a2c:	repz pop esi
  415a2e:	rol    dl,cl
  415a30:	sahf   
  415a31:	add    dl,BYTE PTR [ebx+eax*2]
  415a34:	push   ss
  415a35:	pop    ss
  415a36:	or     eax,0x574ee0f8
  415a3b:	jge    0x4159fa
  415a3d:	cmp    eax,0x23f6d7c4
  415a42:	pop    ds
  415a43:	mov    dl,al
  415a45:	push   esi
  415a46:	jg     0x415a53
  415a48:	pop    ebp
  415a49:	xchg   bl,ah
  415a4b:	jae    0x415ac1
  415a4d:	pop    ebp
  415a4e:	mov    ds:0x1ff1e44d,eax
  415a53:	jae    0x415ac0
  415a55:	mov    dh,0x0
  415a57:	sbb    eax,DWORD PTR [eax]
  415a59:	dec    edi
  415a5a:	test   ah,al
  415a5c:	cs mov eax,ecx
  415a5f:	call   DWORD PTR [ebp-0x7f]
  415a62:	jae    0x415ac8
  415a64:	ror    BYTE PTR [edx+ebx*4+0x5f],cl
  415a68:	push   ds
  415a69:	xor    ecx,0xffffffb8
  415a6c:	repz xlat BYTE PTR ds:[ebx]
  415a6e:	mov    ecx,0x4cd03fc7
  415a73:	add    DWORD PTR [edx-0x6],0xffffffc0
  415a77:	mov    ecx,0xe96be8a9
  415a7c:	push   ebx
  415a7d:	jbe    0x415adf
  415a7f:	cwde   
  415a80:	je     0x415a0c
  415a82:	aam    0xb3
  415a84:	xchg   DWORD PTR [eax-0x26],esi
  415a87:	xchg   ebp,eax
  415a88:	mov    cl,0x7a
  415a8a:	aas    
  415a8b:	mov    ebp,0xa7f73f12
  415a90:	mov    BYTE PTR [eax+edx*8+0x5da2dc09],0x86
  415a98:	lods   al,BYTE PTR ds:[esi]
  415a99:	xchg   edx,eax
  415a9a:	xchg   esp,eax
  415a9b:	repz push edi
  415a9d:	nop
  415a9e:	inc    esi
  415a9f:	into   
  415aa0:	ds ins BYTE PTR es:[edi],dx
  415aa2:	mov    ecx,0xc1e79f50
  415aa7:	out    0xe0,al
  415aa9:	int    0x8a
  415aab:	and    cl,ah
  415aad:	and    edx,DWORD PTR [ebp+ecx*8-0x1a]
  415ab1:	int3   
  415ab2:	fcmovnu st,st(3)
  415ab4:	clc    
  415ab5:	dec    esi
  415ab6:	sbb    DWORD PTR [edi],edi
  415ab8:	cwde   
  415ab9:	mov    dl,BYTE PTR ds:0xb5a82150
  415abf:	mov    ch,0x40
  415ac1:	stc    
  415ac2:	aam    0x15
  415ac4:	pop    ecx
  415ac5:	int    0x7a
  415ac7:	shl    BYTE PTR [ebx+0x8a1fe5f],cl
  415acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ace:	mov    edi,0x36efc534
  415ad3:	pop    eax
  415ad4:	cli    
  415ad5:	aas    
  415ad6:	add    DWORD PTR [edx],0x9dc388f7
  415adc:	cld    
  415add:	pop    ebp
  415ade:	sbb    esi,DWORD PTR [edx+0x4d]
  415ae1:	mov    bl,0x47
  415ae3:	mov    eax,ds:0xf5a11d07
  415ae8:	stos   BYTE PTR es:[edi],al
  415ae9:	and    ch,BYTE PTR ds:0x270611c1
  415aef:	xchg   ecx,eax
  415af0:	inc    ecx
  415af1:	in     eax,0x9d
  415af3:	fcmovnbe st,st(7)
  415af5:	jno    0x415b68
  415af7:	sbb    DWORD PTR [ebx+edi*2-0x13],ebp
  415afb:	mov    al,ds:0x8e2bb5e9
  415b00:	jae    0x415aa1
  415b02:	pop    es
  415b03:	xor    al,0x94
  415b05:	or     dh,bh
  415b07:	pop    esi
  415b08:	ja     0x415ab3
  415b0a:	and    dh,ch
  415b0c:	mov    ecx,0xef3171bc
  415b11:	xchg   edx,eax
  415b12:	or     BYTE PTR [ecx-0x4181d308],bl
  415b18:	dec    ebx
  415b19:	mov    ah,0x89
  415b1b:	sbb    eax,0xe3e096a1
  415b20:	adc    al,0xa9
  415b22:	lds    ebp,FWORD PTR [ecx-0x350edd95]
  415b28:	ja     0x415ba1
  415b2a:	mov    al,ds:0x4fbe82b6
  415b2f:	mov    esp,0xaf24b5c8
  415b34:	sbb    al,0x7d
  415b36:	xor    esi,0xeaaaca53
  415b3c:	out    0xd2,eax
  415b3e:	mov    ebx,gs
  415b40:	cmp    BYTE PTR [ebx],al
  415b42:	jno    0x415afb
  415b44:	or     DWORD PTR [ecx],0xfffffff1
  415b47:	xchg   ebp,eax
  415b48:	fld    DWORD PTR [esi+0x3c2b8105]
  415b4e:	fsubr  st(6),st
  415b50:	lods   eax,DWORD PTR ds:[esi]
  415b51:	ret    
  415b52:	div    BYTE PTR [eax-0x31]
  415b55:	xchg   ecx,eax
  415b56:	aas    
  415b57:	sub    dl,al
  415b59:	or     al,0xdc
  415b5b:	xchg   edx,eax
  415b5c:	lods   eax,DWORD PTR ds:[esi]
  415b5d:	sbb    al,0xd9
  415b5f:	sar    BYTE PTR [esi-0x3e289b80],0xa9
  415b66:	dec    edi
  415b67:	xchg   edx,eax
  415b68:	sub    esi,eax
  415b6a:	addr16 pop es
  415b6c:	rcl    DWORD PTR ds:0x6f5ab144,cl
  415b72:	out    0x97,al
  415b74:	pop    esi
  415b75:	jmp    0x415b78
  415b77:	cmp    dh,bl
  415b79:	(bad)
  415b7c:	dec    eax
  415b7d:	xchg   edi,eax
  415b7e:	loope  0x415b93
  415b80:	arpl   dx,di
  415b82:	jmp    0xf899:0x9febc747
  415b89:	dec    ecx
  415b8a:	test   al,0xf6
  415b8c:	dec    BYTE PTR [esi+0xf]
  415b8f:	add    ebp,esi
  415b91:	in     al,0x5d
  415b93:	shl    BYTE PTR [eax-0x12],1
  415b96:	add    bh,BYTE PTR [ecx+0x2b]
  415b99:	popf   
  415b9a:	test   DWORD PTR [ebx-0x1],edx
  415b9d:	scas   al,BYTE PTR es:[edi]
  415b9e:	jo     0x415b64
  415ba0:	enter  0x4699,0x57
  415ba4:	jae    0x415c0b
  415ba6:	push   edi
  415ba7:	jno    0x415b67
  415ba9:	push   esp
  415baa:	icebp  
  415bab:	push   esp
  415bac:	les    esp,FWORD PTR [eax-0x59d63b6f]
  415bb2:	repz cmc 
  415bb4:	adc    eax,DWORD PTR [ecx+0x78]
  415bb7:	and    eax,0xf8383ba0
  415bbc:	xor    esi,DWORD PTR [eax+ebx*1-0x2b]
  415bc0:	iret   
  415bc1:	or     eax,0x5c5a96fe
  415bc6:	ret    0xc6de
  415bc9:	xor    eax,0x8dece404
  415bce:	inc    ecx
  415bcf:	cdq    
  415bd0:	dec    eax
  415bd1:	outs   dx,DWORD PTR ds:[esi]
  415bd2:	push   bx
  415bd4:	inc    ebx
  415bd5:	mov    eax,edx
  415bd7:	or     eax,0x44abe2ad
  415bdc:	int    0x6f
  415bde:	(bad)  
  415be0:	bound  ebx,QWORD PTR [edx+0x36]
  415be3:	push   ecx
  415be4:	rcr    BYTE PTR [edi+0x65],cl
  415be7:	mov    dh,0x7f
  415be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bea:	aaa    
  415beb:	cmp    eax,0x731acbc4
  415bf0:	mov    BYTE PTR [ebp+0x568e2f6f],bl
  415bf6:	mov    esp,0x55c39c38
  415bfb:	and    DWORD PTR [edx+0x2eeaa766],ebp
  415c01:	int3   
  415c02:	pushf  
  415c03:	xchg   si,ax
  415c05:	cmp    ebx,DWORD PTR ds:0xe873649f
  415c0b:	xchg   ebp,eax
  415c0c:	test   al,0xb4
  415c0e:	mov    eax,ds:0xedbcc267
  415c13:	in     eax,0x2b
  415c15:	retf   
  415c16:	mov    dl,0x24
  415c18:	in     eax,0xa5
  415c1a:	pop    es
  415c1b:	jbe    0x415c86
  415c1d:	xchg   esi,eax
  415c1e:	jae    0x415c69
  415c20:	pop    DWORD PTR [edx+0x7c]
  415c23:	retf   
  415c24:	push   eax
  415c25:	(bad)
  415c29:	inc    edx
  415c2a:	jge    0x415bdb
  415c2c:	(bad)  
  415c2e:	pusha  
  415c2f:	shl    DWORD PTR [esp+ecx*8],0x2d
  415c33:	fmul   QWORD PTR [ebp-0x5a]
  415c36:	ret    0x51b9
  415c39:	leave  
  415c3a:	and    BYTE PTR [ecx],dl
  415c3c:	mov    ss,eax
  415c3e:	sbb    al,0xf2
  415c40:	iret   
  415c41:	mov    ch,0x8
  415c43:	pop    ebx
  415c44:	pushf  
  415c45:	psubd  mm1,QWORD PTR [eax-0x5deafd63]
  415c4c:	cld    
  415c4d:	cmp    eax,0x2dd11123
  415c52:	retf   0xa1dd
  415c55:	dec    edi
  415c56:	mov    esp,0x5db9a8c4
  415c5b:	je     0x415bf5
  415c5d:	and    ebx,edx
  415c5f:	sbb    dh,BYTE PTR [ecx+0x3a]
  415c62:	rcr    edi,0xb6
  415c65:	in     eax,dx
  415c66:	aam    0xf0
  415c68:	lods   al,BYTE PTR ds:[esi]
  415c69:	sub    edx,DWORD PTR [eax-0x3e]
  415c6c:	mov    BYTE PTR [ecx+edx*1-0x20],bh
  415c70:	data16 jnp 0x415c7d
  415c73:	ret    0x533
  415c76:	pop    ebx
  415c77:	dec    ecx
  415c78:	ds xchg ebp,eax
  415c7a:	pop    DWORD PTR [eax+ecx*4+0x28]
  415c7e:	popf   
  415c7f:	push   ecx
  415c80:	mov    esp,0x6443a411
  415c85:	mov    esp,0x77f08711
  415c8a:	lock or DWORD PTR [eax+0x743752f1],esi
  415c91:	xor    ebx,edi
  415c93:	retf   0x2ef6
  415c96:	ret    0xa091
  415c99:	iret   
  415c9a:	sub    al,0x70
  415c9c:	inc    ebp
  415c9d:	pop    ss
  415c9e:	cmp    edi,esi
  415ca0:	mov    bl,0x5
  415ca2:	sar    BYTE PTR [esi+0x19],1
  415ca5:	into   
  415ca6:	xchg   esp,eax
  415ca7:	inc    BYTE PTR [edx+edi*1+0x40]
  415cab:	add    edi,DWORD PTR [eax]
  415cad:	dec    esi
  415cae:	cmp    al,0xb6
  415cb0:	mov    ecx,0xbd2c57cb
  415cb5:	add    DWORD PTR [ecx-0x5],esi
  415cb8:	js     0x415d10
  415cba:	pushf  
  415cbb:	sub    al,0xf6
  415cbd:	jnp    0x415ca0
  415cbf:	das    
  415cc0:	mov    ah,0xa1
  415cc2:	and    bh,0xda
  415cc5:	adc    BYTE PTR [eax-0x25],dl
  415cc8:	sbb    BYTE PTR [esi-0x3d],ch
  415ccb:	inc    eax
  415ccc:	cs (bad) 
  415ccf:	pop    edx
  415cd0:	jle    0x415cb4
  415cd2:	cmp    cl,bl
  415cd4:	sub    al,0xa
  415cd6:	pop    es
  415cd7:	(bad)  
  415cd8:	cmp    eax,0x85c9ff2f
  415cdd:	lea    esi,[edi]
  415cdf:	xchg   ecx,eax
  415ce0:	adc    BYTE PTR [ebx+0x1ce4f70b],ch
  415ce6:	xor    al,0x28
  415ce8:	mov    WORD PTR [eax],ds
  415cea:	xor    al,0x54
  415cec:	aam    0xe4
  415cee:	mov    esi,fs
  415cf0:	sub    al,0x91
  415cf2:	xor    BYTE PTR [edi-0x319079c0],dh
  415cf8:	jne    0x415cc2
  415cfa:	mov    ds:0xd3713b1e,al
  415cff:	leave  
  415d00:	xchg   ebp,eax
  415d01:	outs   dx,BYTE PTR ds:[esi]
  415d02:	add    eax,0xeaafde4b
  415d07:	scas   eax,DWORD PTR es:[edi]
  415d08:	pxor   mm5,QWORD PTR [esi-0x494e463e]
  415d0f:	xchg   edx,esp
  415d11:	rcl    dh,cl
  415d13:	and    al,0x59
  415d15:	mov    ds:0xa83e7362,al
  415d1a:	xchg   edx,eax
  415d1b:	pop    ecx
  415d1c:	cmp    BYTE PTR [esi-0x13],bl
  415d1f:	xchg   BYTE PTR [edi-0x4],dh
  415d22:	xchg   edx,eax
  415d23:	mov    dh,0xaa
  415d25:	hlt    
  415d26:	add    DWORD PTR ds:0xde8fe12e,0xffffff96
  415d2d:	mov    ch,0x20
  415d2f:	xchg   edx,eax
  415d30:	in     al,dx
  415d31:	cmp    DWORD PTR [ebp+0x21],edi
  415d34:	sbb    BYTE PTR [esi-0x61],ah
  415d37:	repz adc BYTE PTR [ebx+0x60d8008e],dh
  415d3e:	push   ecx
  415d3f:	cmp    esi,ecx
  415d41:	rcr    DWORD PTR [esi-0x564b659e],0x9
  415d48:	sbb    al,0x48
  415d4a:	push   esp
  415d4b:	(bad)  [ecx]
  415d4d:	nop
  415d4e:	addr16 mov dh,0xa0
  415d51:	in     al,0xe4
  415d53:	xchg   edx,eax
  415d54:	in     eax,dx
  415d55:	sbb    al,0xfa
  415d57:	out    dx,al
  415d58:	sti    
  415d59:	or     al,0x51
  415d5b:	mov    ch,0x61
  415d5d:	jp     0x415d7d
  415d5f:	daa    
  415d60:	mov    esi,0x36be73a4
  415d65:	retf   0x8a3f
  415d68:	xchg   esi,eax
  415d69:	shl    BYTE PTR [esp+eiz*2-0x6f15428a],1
  415d70:	cmp    al,0x56
  415d72:	es jb  0x415d65
  415d75:	and    ah,BYTE PTR fs:[ecx]
  415d78:	and    eax,0x53764464
  415d7d:	pop    edi
  415d7e:	xor    BYTE PTR [eax+0x146074ea],dh
  415d84:	xchg   esi,eax
  415d85:	scas   al,BYTE PTR es:[edi]
  415d86:	test   eax,0x371bc394
  415d8b:	push   0x4c
  415d8d:	leave  
  415d8e:	sub    al,0x9b
  415d90:	jmp    0xe02b468d
  415d95:	or     edx,eax
  415d97:	inc    ebp
  415d98:	cwde   
  415d99:	inc    edi
  415d9a:	shl    DWORD PTR [ebp-0x15],1
  415d9d:	jge    0x415de5
  415d9f:	mov    ebp,0xdd83d4ab
  415da4:	pop    edx
  415da5:	outs   dx,DWORD PTR ds:[esi]
  415da6:	xor    BYTE PTR [ebp+0x68],dh
  415da9:	and    esi,eax
  415dab:	add    BYTE PTR [eax+0x4d],bh
  415dae:	iret   
  415daf:	loope  0x415d81
  415db1:	push   ebx
  415db2:	sbb    edx,DWORD PTR [esi]
  415db4:	enter  0x2953,0x18
  415db8:	shl    BYTE PTR [eax+0x1],0x2a
  415dbc:	fld    st(0)
  415dbe:	mov    bl,0x54
  415dc0:	pop    ebx
  415dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc2:	mov    al,0xbf
  415dc4:	stos   DWORD PTR es:[edi],eax
  415dc5:	test   al,0x2b
  415dc7:	inc    ebp
  415dc8:	ja     0x415d7b
  415dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dcb:	cmp    ebx,DWORD PTR [ebp+0x4c28607a]
  415dd1:	rol    BYTE PTR [edx+0x3b],1
  415dd4:	lds    esi,FWORD PTR ds:0xccf5fcda
  415dda:	mov    esp,0xba0889f7
  415ddf:	jmp    0xc554:0xe2b1d239
  415de6:	jo     0x415e47
  415de8:	stos   BYTE PTR es:[edi],al
  415de9:	out    dx,al
  415dea:	sbb    eax,0x37b6f1f2
  415def:	lods   al,BYTE PTR ds:[esi]
  415df0:	in     eax,dx
  415df1:	test   eax,0x4afc4915
  415df6:	dec    edi
  415df7:	mov    ah,0x31
  415df9:	aas    
  415dfa:	cld    
  415dfb:	dec    eax
  415dfc:	jne    0x415db4
  415dfe:	push   ebx
  415dff:	inc    edx
  415e00:	adc    eax,0x5b7e57da
  415e05:	enter  0xdfa7,0x71
  415e09:	dec    DWORD PTR [esi+0x4f]
  415e0c:	sbb    eax,0x36192b28
  415e11:	sub    ch,BYTE PTR [edx+0x3329ac3]
  415e17:	and    ecx,edi
  415e19:	add    bl,ah
  415e1b:	cmp    ch,BYTE PTR ds:0x38c34b39
  415e21:	ins    BYTE PTR es:[edi],dx
  415e22:	xchg   esi,eax
  415e23:	push   esp
  415e24:	sub    BYTE PTR es:[eax+0x6c9e3adf],dh
  415e2b:	imul   edi,DWORD PTR [ebx],0xffffff86
  415e2e:	inc    esi
  415e2f:	xor    BYTE PTR [edi+0x2e],cl
  415e32:	mov    edi,es
  415e34:	mov    edi,DWORD PTR [edi-0x63d1c4a0]
  415e3a:	and    ch,dh
  415e3c:	rol    DWORD PTR [ebp+eiz*4-0x10f55206],0x60
  415e44:	aad    0x35
  415e46:	cwde   
  415e47:	ret    
  415e48:	or     BYTE PTR [esi-0x6418d715],dl
  415e4e:	cli    
  415e4f:	cmc    
  415e50:	sub    DWORD PTR [esi-0x15cb5e39],ecx
  415e56:	imul   ebx,DWORD PTR [ecx-0x6d34c836],0xffffffdb
  415e5d:	stos   BYTE PTR es:[edi],al
  415e5e:	call   0xf1ca:0x37ef1321
  415e65:	cdq    
  415e66:	cmp    ebp,DWORD PTR [edi+0x43]
  415e69:	mov    edx,0x6144f3d8
  415e6e:	pop    eax
  415e6f:	lea    ebp,[ecx+edi*1]
  415e72:	pop    esp
  415e73:	aad    0xc2
  415e75:	sub    al,0x5e
  415e77:	mov    DWORD PTR [edx],ebx
  415e79:	fadd   DWORD PTR [ebp+0x3ce3d902]
  415e7f:	mov    es,WORD PTR [edx]
  415e81:	cmp    al,0x27
  415e83:	sub    esi,DWORD PTR [ecx-0x60]
  415e86:	add    ecx,DWORD PTR [ecx]
  415e88:	call   0x124d:0x364f2eb3
  415e8f:	xlat   BYTE PTR ds:[ebx]
  415e90:	push   0x5c
  415e92:	aas    
  415e93:	not    DWORD PTR [ebp-0x1d]
  415e96:	mov    ds:0x49e80ee6,al
  415e9b:	adc    BYTE PTR [eax-0x69b280f5],dh
  415ea1:	fistp  DWORD PTR [ebp+0x72]
  415ea4:	in     eax,dx
  415ea5:	inc    esi
  415ea6:	in     eax,0x19
  415ea8:	outs   dx,DWORD PTR ds:[esi]
  415ea9:	out    0x60,al
  415eab:	nop
  415eac:	aas    
  415ead:	repnz xchg ebx,eax
  415eaf:	aas    
  415eb0:	jle    0x415eb7
  415eb2:	cdq    
  415eb3:	inc    eax
  415eb4:	pusha  
  415eb5:	sbb    edx,DWORD PTR [edi+0x308a73f0]
  415ebb:	add    DWORD PTR [edi+0x4049779d],0x5
  415ec2:	mov    ds:0x626b6498,al
  415ec7:	ins    BYTE PTR es:[edi],dx
  415ec8:	ins    BYTE PTR es:[edi],dx
  415ec9:	gs retf 0xce7d
  415ecd:	mov    DWORD PTR [esi-0x41],ecx
  415ed0:	test   ah,cl
  415ed2:	xor    DWORD PTR [ecx+0xe],ebp
  415ed5:	fisub  WORD PTR [eax]
  415ed7:	mov    al,0x6b
  415ed9:	rcr    BYTE PTR [edi+ebx*8],cl
  415edc:	fisub  WORD PTR [eax-0x6b27160a]
  415ee2:	mov    ss,esi
  415ee4:	ins    BYTE PTR es:[di],dx
  415ee6:	or     bh,bh
  415ee8:	lods   eax,DWORD PTR ds:[esi]
  415ee9:	aaa    
  415eea:	aaa    
  415eeb:	aad    0xa
  415eed:	adc    DWORD PTR [ecx-0x54],esi
  415ef0:	push   0x6a67f317
  415ef5:	or     DWORD PTR [ecx-0x24343bd],ecx
  415efb:	cs (bad) 
  415efd:	call   0xa88fb8e7
  415f02:	fs mov ecx,0xc542e150
  415f08:	xchg   esi,eax
  415f09:	call   0xbf6537fb
  415f0e:	cmc    
  415f0f:	ins    BYTE PTR es:[edi],dx
  415f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f11:	add    DWORD PTR [edi],edi
  415f13:	rcl    DWORD PTR [eax],cl
  415f15:	imul   ebp,edx,0x5671418a
  415f1b:	mov    ebx,0x99286d4e
  415f20:	jae    0x59b17835
  415f26:	loop   0x415ed9
  415f28:	xor    DWORD PTR [esp+edx*8-0x4954b45a],0xed913f4
  415f33:	mov    dl,0xc5
  415f35:	outs   dx,DWORD PTR ds:[esi]
  415f36:	popf   
  415f37:	rcl    BYTE PTR [eax-0x30],1
  415f3a:	js     0x415eec
  415f3c:	aaa    
  415f3d:	fisubr DWORD PTR [eax]
  415f3f:	mov    dh,0x37
  415f41:	in     al,dx
  415f42:	bound  edi,QWORD PTR [edi+0x66f67356]
  415f48:	mov    DWORD PTR [ebx+esi*4],ebx
  415f4b:	mov    edi,0x89ebb165
  415f50:	inc    eax
  415f51:	cmp    al,0xf4
  415f53:	aam    0x83
  415f55:	outs   dx,DWORD PTR ds:[esi]
  415f56:	fist   WORD PTR [esp+edi*2]
  415f59:	dec    esp
  415f5a:	and    BYTE PTR [edx-0xb],dh
  415f5d:	pand   mm7,mm1
  415f60:	push   cs
  415f61:	addr16 das 
  415f63:	scas   al,BYTE PTR es:[edi]
  415f64:	mov    esi,0x8d03b3c2
  415f69:	jbe    0x415f0d
  415f6b:	dec    esi
  415f6c:	adc    BYTE PTR [ebp+0x69],cl
  415f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f70:	ret    0xba73
  415f73:	mov    db5,esi
  415f76:	jnp    0x415f79
  415f78:	pop    es
  415f79:	lahf   
  415f7a:	xchg   ebp,edx
  415f7c:	xor    eax,0x596fc57
  415f81:	(bad)  
  415f82:	cwde   
  415f83:	lea    eax,[ebx+edi*1]
  415f86:	push   esp
  415f87:	add    DWORD PTR [ebp+0x8],0xa51e2dd9
  415f8e:	out    0xa1,al
  415f90:	loop   0x415fba
  415f92:	sahf   
  415f93:	push   esp
  415f94:	aas    
  415f95:	push   esi
  415f96:	xor    al,0x32
  415f98:	mov    eax,0x8441d137
  415f9d:	dec    edx
  415f9e:	adc    ebx,DWORD PTR [esi]
  415fa0:	adc    eax,0xfb77f11
  415fa5:	dec    ebx
  415fa6:	test   DWORD PTR [edx+0x53f03d99],eax
  415fac:	pop    edi
  415fad:	cmp    al,0x3e
  415faf:	mov    cl,0x75
  415fb1:	or     edi,edx
  415fb3:	mov    al,ds:0x9fc344d0
  415fb8:	pop    ebx
  415fb9:	xchg   ebp,eax
  415fba:	xchg   esi,eax
  415fbb:	stos   BYTE PTR es:[edi],al
  415fbc:	cmp    edx,0xf619af02
  415fc2:	into   
  415fc3:	aaa    
  415fc4:	add    eax,0xde7c8c1
  415fc9:	xor    eax,0x8f68664c
  415fce:	pop    esi
  415fcf:	stos   DWORD PTR es:[edi],eax
  415fd0:	or     eax,0x4bc0b4a1
  415fd5:	push   es
  415fd6:	test   DWORD PTR [eax-0x6eabc3e1],eax
  415fdc:	mov    al,0x90
  415fde:	inc    edx
  415fdf:	push   eax
  415fe0:	addr16 sahf 
  415fe2:	cs sub esp,esi
  415fe5:	mov    dl,0x8e
  415fe7:	and    dl,al
  415fe9:	jae    0x416026
  415feb:	test   al,0x88
  415fed:	fs iret 
  415fef:	inc    edx
  415ff0:	arpl   WORD PTR [edx+eax*2+0x1f],cx
  415ff4:	jmp    0x686f2534
  415ff9:	mov    ds:0x3bda79b5,al
  415ffe:	gs mov bh,0x8a
  416001:	pop    ecx
  416002:	(bad)  
  416003:	pop    esp
  416004:	fcmovnu st,st(1)
  416006:	pop    es
  416007:	and    ah,ah
  416009:	es jbe 0x416073
  41600c:	scas   al,BYTE PTR es:[edi]
  41600d:	xchg   DWORD PTR [edx-0x3f],edx
  416010:	test   eax,0x400cfb35
  416015:	cmp    edi,DWORD PTR [eax+esi*8-0x27]
  416019:	jecxz  0x41601b
  41601b:	shr    ch,1
  41601d:	in     eax,0x1f
  41601f:	xor    BYTE PTR [ebp-0x5313a72],bh
  416025:	xorps  xmm4,XMMWORD PTR ss:[eax+0x2b]
  41602a:	fldenv [esi+ebp*1+0x7d]
  41602e:	mov    al,0x92
  416030:	daa    
  416031:	xor    DWORD PTR [esi-0x14],edi
  416034:	xlat   BYTE PTR ds:[ebx]
  416035:	idiv   cl
  416037:	or     ebx,DWORD PTR [eax+0x6b]
  41603a:	je     0x416053
  41603c:	ins    DWORD PTR es:[edi],dx
  41603d:	ret    
  41603e:	mov    eax,0x978d40ae
  416043:	shr    DWORD PTR [ecx-0x5],cl
  416046:	daa    
  416047:	int    0xc8
  416049:	sub    eax,0xc4fab379
  41604e:	mov    ch,0x0
  416050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416051:	inc    ecx
  416052:	or     ch,BYTE PTR [esi-0x4c]
  416055:	int    0xe
  416057:	add    BYTE PTR [edx],0xba
  41605a:	xchg   BYTE PTR ds:[edi-0x21],dh
  41605e:	(bad)  [ebx]
  416060:	or     cl,BYTE PTR [edx-0x6e88823]
  416066:	je     0x41600e
  416068:	push   edi
  416069:	jae    0x415ffa
  41606b:	cmp    DWORD PTR [edx],0xffffffe0
  41606e:	pop    esi
  41606f:	cmp    dh,BYTE PTR [ecx]
  416071:	addr16 jae 0x416018
  416074:	sub    eax,0x98c19f90
  416079:	sbb    al,0xd2
  41607b:	or     BYTE PTR [edi-0x78],0x56
  41607f:	jmp    0xb885:0x69658922
  416086:	xchg   DWORD PTR [edx],eax
  416088:	ins    DWORD PTR es:[edi],dx
  416089:	sub    al,0x9a
  41608b:	(bad)  [edx-0x28]
  41608e:	in     eax,0x1d
  416090:	push   ds
  416091:	push   0x5177080d
  416096:	xor    al,0x79
  416098:	outs   dx,BYTE PTR ds:[esi]
  416099:	(bad)  
  41609a:	adc    al,0x4e
  41609c:	enter  0xcfeb,0x88
  4160a0:	xchg   ebx,eax
  4160a1:	xor    al,0xf9
  4160a3:	cmp    al,0x7e
  4160a5:	fisttp DWORD PTR [edx]
  4160a7:	shr    DWORD PTR [ebp-0x4a],0xec
  4160ab:	mov    eax,0xcaf482ce
  4160b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b1:	cmp    BYTE PTR [edx+0x51522123],dh
  4160b7:	or     ch,ah
  4160b9:	dec    ebp
  4160bb:	mov    ebx,0x3ada7470
  4160c0:	jmp    0x416114
  4160c2:	pop    edi
  4160c3:	or     dh,0xa4
  4160c6:	push   edi
  4160c7:	and    DWORD PTR [edi+esi*8-0x5b1e5ba7],ebx
  4160ce:	mov    eax,0x612345e4
  4160d3:	push   ebx
  4160d4:	xchg   ebp,eax
  4160d5:	pop    ds
  4160d6:	test   BYTE PTR [edi],ah
  4160d8:	xchg   esp,eax
  4160d9:	out    0x68,eax
  4160db:	push   esi
  4160dc:	pop    ds
  4160dd:	(bad)  
  4160df:	adc    ah,BYTE PTR [ebx+0xb]
  4160e2:	fisubr WORD PTR [ecx+0x38377345]
  4160e8:	pop    ecx
  4160e9:	xor    al,0xab
  4160eb:	cmp    BYTE PTR [ebx+ecx*1+0x3298459d],ah
  4160f2:	jne    0x4160af
  4160f4:	mov    edi,fs
  4160f6:	xor    DWORD PTR [edi+edx*2],ebx
  4160f9:	xlat   BYTE PTR ds:[ebx]
  4160fa:	push   eax
  4160fb:	add    DWORD PTR [esi],ecx
  4160fd:	imul   eax,DWORD PTR [esi-0x5f],0xb2376cb3
  416104:	cmp    BYTE PTR [esi+0x0],al
  416107:	ins    BYTE PTR es:[edi],dx
  416108:	loopne 0x416183
  41610a:	add    eax,0xeb7a472c
  41610f:	cld    
  416110:	and    cl,BYTE PTR [ebx+0x7bfea100]
  416116:	call   0xfcef9e0b
  41611b:	ja     0x416154
  41611d:	xchg   edi,eax
  41611e:	(bad)  
  41611f:	and    al,BYTE PTR [eax-0x10]
  416122:	mov    bl,0xfe
  416124:	jmp    0x25b8:0x8caea6fc
  41612b:	sub    ch,dl
  41612d:	jecxz  0x41616e
  41612f:	cmp    dl,0x26
  416132:	cwde   
  416133:	pop    es
  416134:	in     al,0x84
  416136:	cmp    BYTE PTR [ebx-0x53],al
  416139:	or     ch,ah
  41613b:	or     bh,BYTE PTR [ebx+0x41e8ebee]
  416141:	retf   0xee38
  416144:	fild   QWORD PTR [ebx]
  416146:	or     BYTE PTR [edx+0x37],ah
  416149:	pusha  
  41614a:	adc    eax,0x76a51659
  41614f:	xchg   ebp,eax
  416150:	cmp    esp,DWORD PTR [ecx]
  416152:	imul   ecx,DWORD PTR [ebp-0x2f288f95],0xd5274e89
  41615c:	jb     0x416167
  41615e:	fist   WORD PTR [ebx]
  416160:	and    al,0x60
  416162:	inc    eax
  416163:	push   esp
  416164:	fadd   st(1),st
  416166:	jp     0x416134
  416168:	fidivr WORD PTR [eax+0x46d481b8]
  41616e:	daa    
  41616f:	(bad)  
  416170:	in     eax,dx
  416171:	push   ecx
  416172:	adc    eax,0x4f513961
  416177:	shl    DWORD PTR [edx-0x3b],0xa2
  41617b:	retf   0x99a8
  41617e:	or     DWORD PTR [esi],esp
  416180:	and    DWORD PTR [esp+esi*8+0x42613268],0xdb11e4e2
  41618b:	test   eax,0x7e1ec34b
  416190:	add    eax,0xf11542b1
  416195:	push   ds
  416196:	sbb    DWORD PTR [edx-0x4e],esp
  416199:	ret    0x7124
  41619c:	pop    esi
  41619d:	pop    esi
  41619e:	mov    esi,0xc8ea6edf
  4161a3:	shl    eax,1
  4161a5:	pop    ebx
  4161a6:	rcr    edx,0x6d
  4161a9:	(bad)  
  4161aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161ab:	aaa    
  4161ac:	ins    BYTE PTR es:[edi],dx
  4161ad:	mov    cl,0x22
  4161af:	in     al,0xac
  4161b1:	inc    esi
  4161b2:	mov    ah,0x71
  4161b4:	mov    ch,BYTE PTR [ebp+esi*4+0x7e942d49]
  4161bb:	push   esi
  4161bc:	aad    0xc1
  4161be:	jb     0x4161e7
  4161c0:	in     al,dx
  4161c1:	call   0x113d:0xf5cacc0b
  4161c8:	dec    esi
  4161c9:	jl     0x416241
  4161cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161cc:	xchg   BYTE PTR [eax],cl
  4161ce:	mov    esi,0x2554c991
  4161d3:	stc    
  4161d4:	mov    edi,0x26cb6634
  4161d9:	arpl   WORD PTR [edi+0x48],sp
  4161dc:	pop    esp
  4161dd:	xor    ch,BYTE PTR [ecx]
  4161df:	test   BYTE PTR [edx+ebx*2+0x22cc0008],ch
  4161e6:	sbb    eax,0x70f430ed
  4161eb:	mov    BYTE PTR [eax+0x7859e8ce],bh
  4161f1:	sub    cl,BYTE PTR [edi-0x1b248e4e]
  4161f7:	jmp    0x416226
  4161f9:	cmp    eax,0x7103e838
  4161fe:	lods   al,BYTE PTR ds:[esi]
  4161ff:	cmp    ecx,DWORD PTR [eax-0x3ade5136]
  416205:	xor    eax,edx
  416207:	dec    ecx
  416208:	pop    ebx
  416209:	push   ecx
  41620a:	stos   DWORD PTR es:[edi],eax
  41620b:	sti    
  41620c:	dec    ebx
  41620d:	arpl   WORD PTR [ecx],ax
  41620f:	jns    0x416198
  416211:	cli    
  416212:	and    dl,BYTE PTR [edi+ecx*4+0x3c6d9116]
  416219:	lahf   
  41621a:	pop    ebx
  41621b:	(bad)  
  41621d:	jns    0x4161f8
  41621f:	daa    
  416220:	jo     0x416211
  416222:	ins    BYTE PTR es:[edi],dx
  416223:	or     al,0xd5
  416225:	sbb    esi,DWORD PTR [eax+eax*2+0x3a985f79]
  41622c:	(bad)  
  41622d:	jecxz  0x41627a
  41622f:	dec    edx
  416230:	fs test edi,0xbbf6ee79
  416237:	adc    eax,0xcf0a1963
  41623c:	repz leave 
  41623e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41623f:	in     al,dx
  416240:	sub    al,0x6
  416242:	aas    
  416243:	outs   dx,DWORD PTR ds:[esi]
  416244:	das    
  416245:	call   0x93c:0x27d07904
  41624c:	cmp    ebp,DWORD PTR fs:[ebp-0x70]
  416250:	add    esi,edx
  416252:	dec    ecx
  416253:	mov    ecx,0x26fd0bc1
  416258:	clc    
  416259:	shl    DWORD PTR [ecx-0x4d],cl
  41625c:	std    
  41625d:	push   ecx
  41625e:	sub    BYTE PTR [esi],bh
  416260:	aaa    
  416261:	push   ecx
  416262:	add    esp,DWORD PTR [edx+eax*8-0xb]
  416266:	test   DWORD PTR [edi],esp
  416268:	icebp  
  416269:	jbe    0x41624d
  41626b:	mov    ch,0x6a
  41626d:	loopne 0x416220
  41626f:	push   ds
  416270:	push   fs
  416272:	pushf  
  416273:	add    edi,DWORD PTR [esi+0xc]
  416276:	inc    ecx
  416277:	inc    ecx
  416278:	fcom   DWORD PTR [esi]
  41627a:	jmp    0x416263
  41627c:	popf   
  41627d:	lds    edi,FWORD PTR ds:0xdb8eb855
  416283:	stc    
  416284:	and    DWORD PTR [edi-0x4b8e4b00],esp
  41628a:	cdq    
  41628b:	ds aam 0x2f
  41628e:	cmp    ah,bh
  416290:	out    0x52,eax
  416292:	stos   BYTE PTR es:[edi],al
  416293:	jg     0x41625f
  416295:	iret   
  416296:	jbe    0x4162e6
  416298:	idiv   BYTE PTR [eax+0x52]
  41629b:	(bad)  
  41629c:	and    eax,0x90cc76cb
  4162a1:	mov    ebx,0x26390e63
  4162a6:	cld    
  4162a7:	mov    bh,0xa6
  4162a9:	sub    al,0xe3
  4162ab:	cmp    esi,DWORD PTR [edx+0x2c]
  4162ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162af:	in     eax,dx
  4162b0:	jmp    0x38408de7
  4162b5:	ss mov ah,0x3f
  4162b8:	add    eax,0x8802a245
  4162bd:	and    edi,esi
  4162bf:	sbb    al,BYTE PTR [ebx-0x30]
  4162c2:	push   ebx
  4162c3:	jecxz  0x416315
  4162c5:	(bad)  
  4162c8:	jno    0x416305
  4162ca:	les    edx,FWORD PTR [ecx-0x2dd03f9a]
  4162d0:	pop    ebx
  4162d1:	mov    al,ds:0xa6bf1479
  4162d6:	pop    edi
  4162d7:	push   cs
  4162d8:	xchg   ebp,eax
  4162d9:	mov    ecx,0x1715b891
  4162de:	adc    al,0xbb
  4162e0:	xchg   BYTE PTR [esi-0x66],al
  4162e3:	lds    edi,FWORD PTR [ebx]
  4162e5:	add    BYTE PTR [edx-0x30b1cb33],ah
  4162eb:	call   0x6bd6:0x8a98bd5d
  4162f2:	test   al,0x1c
  4162f4:	ror    DWORD PTR [eax+edi*8-0x6],1
  4162f8:	cmp    ch,BYTE PTR [edi-0x1c1e9c7a]
  4162fe:	mov    BYTE PTR [ebx+0xf086a90],al
  416304:	out    0xc9,al
  416306:	xor    BYTE PTR [ebx],ch
  416308:	mov    ds:0x6ef1dfe5,al
  41630d:	ror    BYTE PTR ds:0x364133b2,1
  416313:	sbb    al,0x78
  416315:	stos   BYTE PTR es:[edi],al
  416316:	pop    ecx
  416317:	pop    es
  416318:	sbb    edi,ecx
  41631a:	(bad)  
  41631b:	aas    
  41631c:	addr16 imul ebx,ebx,0xffffff8f
  416320:	push   ebp
  416321:	mov    cl,0x46
  416323:	pop    ebp
  416324:	jl     0x41635d
  416326:	mov    ?,ebx
  416328:	push   ebx
  416329:	sbb    ch,bl
  41632b:	in     al,0x69
  41632d:	dec    edx
  41632e:	lea    eax,ds:0x10a2b2d5
  416334:	sbb    ebx,edi
  416336:	xor    ebp,DWORD PTR [edx+0x45]
  416339:	in     al,dx
  41633a:	pushf  
  41633b:	inc    esi
  41633c:	or     eax,0xacbacf6d
  416341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416342:	outs   dx,BYTE PTR ds:[esi]
  416343:	ins    DWORD PTR es:[edi],dx
  416344:	or     eax,0xa0b73a3c
  416349:	xchg   ecx,eax
  41634a:	dec    ebp
  41634b:	in     al,0xe9
  41634d:	icebp  
  41634e:	aam    0xed
  416350:	xchg   edi,eax
  416351:	fstp   QWORD PTR [edi-0x73bfdccd]
  416357:	push   es
  416358:	mov    esp,0xe82154cc
  41635d:	loop   0x4162e8
  41635f:	in     al,0xad
  416361:	sub    edi,ecx
  416363:	int3   
  416364:	cwde   
  416365:	xor    BYTE PTR [edi-0xb],cl
  416368:	rcr    DWORD PTR [esi+edi*2],0x44
  41636c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41636d:	ins    DWORD PTR es:[edi],dx
  41636e:	lahf   
  41636f:	fadd   QWORD PTR [ebp+0x32c6a2ba]
  416375:	inc    esp
  416376:	std    
  416377:	mov    ah,0xb2
  416379:	in     eax,0x78
  41637b:	inc    esp
  41637c:	and    esi,edi
  41637e:	adc    eax,0x7def1610
  416383:	dec    ebp
  416384:	pop    ss
  416385:	mov    ds:0x74c85e27,al
  41638a:	mov    dl,0xc5
  41638c:	jge    0x41638d
  41638e:	jb     0x4163fa
  416390:	adc    ebp,ebx
  416392:	cmc    
  416393:	fild   QWORD PTR [esi+0x7]
  416396:	loopne 0x41638f
  416398:	adc    DWORD PTR [ecx],0xffffffb9
  41639b:	scas   al,BYTE PTR es:[edi]
  41639c:	cld    
  41639d:	into   
  41639e:	test   edi,0x5dcb91d4
  4163a4:	mov    bl,0xd
  4163a6:	jmp    0x416335
  4163a8:	add    al,0x3
  4163aa:	mov    esp,ecx
  4163ac:	cwde   
  4163ad:	int3   
  4163ae:	ja     0x416422
  4163b0:	sbb    eax,0x43566166
  4163b5:	into   
  4163b6:	or     DWORD PTR [edx],0x24
  4163b9:	push   eax
  4163ba:	xchg   ecx,eax
  4163bb:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163bd:	test   DWORD PTR [esi],edi
  4163bf:	sbb    dl,bl
  4163c1:	add    ah,ch
  4163c3:	mov    esp,0x1c12f11d
  4163c8:	pavgw  mm2,QWORD PTR [esi]
  4163cb:	pusha  
  4163cc:	xchg   DWORD PTR [ebp+eax*1-0x553ba3f5],edx
  4163d3:	push   0xf326190e
  4163d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163d9:	adc    DWORD PTR [edx+esi*2+0x3385eab8],esp
  4163e0:	adc    cl,cl
  4163e2:	cmp    DWORD PTR ds:0x554b6e68,esi
  4163e8:	lahf   
  4163e9:	ficomp DWORD PTR [edx-0x3b]
  4163ec:	mov    ds:0x4f27303e,eax
  4163f1:	or     DWORD PTR [ebp+0x43],ebx
  4163f4:	fs xchg edx,eax
  4163f6:	out    0xe,eax
  4163f8:	xlat   BYTE PTR ds:[ebx]
  4163f9:	or     esp,DWORD PTR [ecx+eax*4]
  4163fc:	out    dx,al
  4163fd:	enter  0x3571,0xcb
  416401:	iret   
  416402:	pop    ecx
  416403:	mov    cl,0x39
  416405:	fst    QWORD PTR [ebp+0x7a]
  416408:	out    0x1a,eax
  41640a:	mov    eax,edi
  41640c:	and    ebx,ebp
  41640e:	sbb    BYTE PTR [edx-0x340d3f8f],bh
  416414:	sub    al,0x3
  416416:	cmp    DWORD PTR [esi-0x28],0x6d2fead6
  41641d:	and    ebx,DWORD PTR [eax]
  41641f:	or     eax,0x4d08eb08
  416424:	jle    0x4163b0
  416426:	out    0xf4,al
  416428:	leave  
  416429:	adc    eax,0x96289333
  41642e:	push   ss
  41642f:	cmp    esi,DWORD PTR [esi-0x4faa05fb]
  416435:	es jl  0x41642f
  416438:	adc    DWORD PTR [esi+0xa],eax
  41643b:	push   edi
  41643c:	stos   BYTE PTR es:[edi],al
  41643d:	iret   
  41643e:	cld    
  41643f:	sbb    cl,BYTE PTR [edi-0x1b]
  416442:	cmc    
  416443:	xor    BYTE PTR [eax-0x76d25b6c],0xb9
  41644a:	xchg   ebx,eax
  41644b:	inc    esp
  41644c:	pop    ebx
  41644d:	fadd   QWORD PTR ds:0xf1922c3
  416453:	jo     0x416421
  416455:	fisubr WORD PTR [esi+0x1359b4bc]
  41645b:	push   esi
  41645c:	repnz adc ah,BYTE PTR [ebp+0x13]
  416460:	rcl    DWORD PTR ds:0xb84afa1c,cl
  416466:	push   ebx
  416467:	(bad)  
  416468:	cmc    
  416469:	fwait
  41646a:	cmp    eax,0x53c56445
  41646f:	int3   
  416470:	fistp  QWORD PTR [eax+0x28020e17]
  416476:	pop    ebx
  416477:	jmp    0x23d3:0x14936442
  41647e:	pop    eax
  41647f:	jmp    0x416488
  416481:	stos   DWORD PTR es:[edi],eax
  416482:	sub    edi,ebx
  416484:	nop
  416485:	mov    al,0x53
  416487:	jo     0x41641e
  416489:	adc    dh,al
  41648b:	js     0x4164a8
  41648d:	popf   
  41648e:	scas   eax,DWORD PTR es:[edi]
  41648f:	test   DWORD PTR [edx+0x7f],edx
  416492:	cwde   
  416493:	cdq    
  416494:	and    DWORD PTR [esi+0x4f43ad8b],ebp
  41649a:	push   ecx
  41649b:	aad    0x34
  41649d:	sub    al,bl
  41649f:	out    0x85,al
  4164a1:	jg     0x416479
  4164a3:	xchg   edi,eax
  4164a4:	out    0x7b,al
  4164a6:	stos   DWORD PTR es:[edi],eax
  4164a7:	mov    ch,0x12
  4164a9:	xchg   edi,eax
  4164aa:	mov    ds,WORD PTR [ecx-0x71]
  4164ad:	push   ebp
  4164ae:	cwde   
  4164af:	mov    edi,DWORD PTR [ebp-0x4]
  4164b2:	in     eax,dx
  4164b3:	ja     0x4164c5
  4164b5:	push   es
  4164b6:	jnp    0x4164e7
  4164b8:	test   al,0x9c
  4164ba:	(bad)  
  4164bb:	sub    ebp,eax
  4164bd:	in     al,dx
  4164be:	stos   BYTE PTR es:[edi],al
  4164bf:	push   0x59ca5bb
  4164c4:	jg     0x416463
  4164c6:	mov    ebp,0x3a472a8a
  4164cb:	ja     0x41651b
  4164cd:	pop    es
  4164ce:	and    BYTE PTR [edi],bh
  4164d0:	mov    eax,0xe0901e49
  4164d5:	into   
  4164d6:	shl    DWORD PTR [edx],1
  4164d8:	in     eax,0xc0
  4164da:	rcl    BYTE PTR [edx+0x55],cl
  4164dd:	adc    eax,0x605f5e42
  4164e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164e3:	scas   eax,DWORD PTR es:[edi]
  4164e4:	ins    DWORD PTR es:[edi],dx
  4164e5:	mov    BYTE PTR [esi+0x11],bh
  4164e8:	push   edi
  4164e9:	mul    DWORD PTR [ebp-0x6e]
  4164ec:	push   edx
  4164ed:	out    0x47,eax
  4164ef:	push   ebp
  4164f0:	xor    DWORD PTR [ebx],0x42
  4164f3:	cmc    
  4164f4:	mov    esi,0x6154d00d
  4164f9:	nop
  4164fa:	loope  0x4164a3
  4164fc:	xchg   DWORD PTR [edx-0x75],ebx
  4164ff:	inc    ecx
  416500:	outs   dx,BYTE PTR ds:[esi]
  416501:	(bad)  
  416502:	test   eax,0xab7af67f
  416507:	mov    bh,0xd4
  416509:	xchg   esi,eax
  41650a:	aaa    
  41650b:	lods   eax,DWORD PTR ds:[esi]
  41650c:	inc    edx
  41650d:	xor    eax,0x9a65487
  416512:	sub    DWORD PTR [edi+0x692303c8],ebx
  416518:	aam    0xf2
  41651a:	add    ecx,edi
  41651c:	rcr    BYTE PTR ds:0x384f84ac,0x2d
  416523:	sub    edx,DWORD PTR [ecx]
  416525:	sbb    DWORD PTR [ebp-0x647b05e7],esi
  41652b:	(bad)  
  41652d:	pop    ds
  41652e:	sub    dh,ah
  416530:	push   ss
  416531:	addr16 mov ch,0x5c
  416534:	jne    0x416521
  416536:	cmp    ecx,DWORD PTR [ecx]
  416538:	push   0xffffff84
  41653a:	lahf   
  41653b:	out    0xe4,al
  41653d:	and    eax,0xb40744cc
  416542:	test   ebx,edx
  416544:	pop    edi
  416545:	xor    eax,0x755d1254
  41654a:	gs jmp 0x4164e0
  41654d:	cmp    eax,0xe6014fb0
  416552:	int    0x6b
  416554:	adc    ch,al
  416556:	stc    
  416557:	mul    edi
  416559:	inc    eax
  41655a:	push   ebp
  41655b:	pop    esi
  41655c:	adc    DWORD PTR [eax],0x827a70a7
  416562:	(bad)
  416565:	mov    fs,WORD PTR [esi-0xc]
  416568:	scas   al,BYTE PTR es:[edi]
  416569:	mov    dl,BYTE PTR [eax+0xcabcdbf]
  41656f:	mov    cl,0x8e
  416571:	push   ebp
  416572:	inc    ecx
  416573:	cmp    eax,edx
  416575:	add    edx,DWORD PTR [eax+0x320d736]
  41657b:	add    eax,0xfd4c2832
  416580:	mul    bh
  416582:	cld    
  416583:	sbb    ebp,0x6d7a9160
  416589:	icebp  
  41658a:	xchg   BYTE PTR [ecx-0x29e89e5f],dl
  416590:	inc    ebx
  416591:	ret    0xa235
  416594:	push   eax
  416595:	pop    edx
  416596:	and    bh,dl
  416598:	lea    ebx,[esi+0x1575ae7e]
  41659e:	and    eax,esp
  4165a0:	or     BYTE PTR [ecx],al
  4165a2:	jae    0x416572
  4165a4:	fs cmp al,0xc4
  4165a7:	daa    
  4165a8:	ja     0x4165db
  4165aa:	lea    esp,[ebx]
  4165ac:	xchg   esp,eax
  4165ad:	pop    edx
  4165ae:	jp     0x416605
  4165b0:	fdivrp st(1),st
  4165b2:	pop    ecx
  4165b3:	mov    esi,0x4ad2fce1
  4165b8:	addr16 movs DWORD PTR es:[di],DWORD PTR ds:[si]
  4165bb:	loope  0x41655c
  4165bd:	pop    edi
  4165be:	mov    BYTE PTR [ebp+0x4],cl
  4165c1:	inc    eax
  4165c2:	or     eax,0xfe9acab3
  4165c7:	sbb    ch,BYTE PTR [eax]
  4165c9:	pop    esi
  4165ca:	ja     0x41660f
  4165cc:	test   al,0xa
  4165ce:	and    DWORD PTR [ebx+0x6c8ef2f5],eax
  4165d4:	mov    dl,0xfe
  4165d6:	jae    0x416635
  4165d8:	std    
  4165d9:	jl     0x416656
  4165db:	(bad)  
  4165dc:	cli    
  4165dd:	fdivr  DWORD PTR [eax-0x44]
  4165e0:	fisub  WORD PTR ds:0xd4026adb
  4165e6:	aaa    
  4165e7:	outs   dx,BYTE PTR cs:[esi]
  4165e9:	ins    BYTE PTR es:[edi],dx
  4165ea:	pushf  
  4165eb:	sub    al,0xab
  4165ed:	add    BYTE PTR [eax+edi*4],0x5d
  4165f1:	jecxz  0x4165c7
  4165f3:	and    DWORD PTR [ebx-0xc5fbbc8],ecx
  4165f9:	push   cs
  4165fa:	bswap  ecx
  4165fc:	jnp    0x4165ce
  4165fe:	jmp    0xc3265fbb
  416603:	or     eax,0x45383d63
  416608:	mov    edx,DWORD PTR [edi+0x7e]
  41660b:	sbb    DWORD PTR [ebx+0x25],esi
  41660e:	jbe    0x416597
  416610:	jle    0x416676
  416612:	(bad)  
  416613:	mov    al,0xfe
  416615:	cmp    al,0x64
  416617:	inc    DWORD PTR [ebp-0x39]
  41661a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41661b:	inc    BYTE PTR [ebx]
  41661d:	ja     0x41661e
  41661f:	adc    edi,DWORD PTR [esi]
  416621:	and    al,0x6f
  416623:	(bad)  
  416624:	into   
  416625:	loopne 0x416695
  416627:	push   ebx
  416628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416629:	pop    ds
  41662a:	mov    edi,0xa915ee0c
  41662f:	push   ebx
  416630:	add    ch,ah
  416632:	into   
  416633:	frstor [esi+0x9f7489f]
  416639:	mov    dl,ch
  41663b:	or     esi,DWORD PTR [esi]
  41663d:	outs   dx,DWORD PTR ds:[esi]
  41663e:	push   ecx
  41663f:	push   edx
  416640:	imul   esi,DWORD PTR fs:[ecx-0x55b32cdb],0x21
  416648:	es test eax,0x95e4126
  41664e:	popa   
  41664f:	in     al,0xf8
  416651:	cmp    eax,0x1c963db2
  416656:	dec    esp
  416657:	iret   
  416658:	bound  ecx,QWORD PTR [edi-0x5]
  41665b:	sbb    eax,0xcad4a457
  416660:	add    BYTE PTR [eax],0x9a
  416663:	mov    dl,0xd9
  416665:	das    
  416666:	cmc    
  416667:	jge    0x41665d
  416669:	pop    ebp
  41666a:	imul   esp,DWORD PTR [edi],0x6e
  41666d:	add    al,bl
  41666f:	or     al,BYTE PTR [ecx-0x1]
  416672:	fisttp QWORD PTR [esi-0x1c108306]
  416678:	fiadd  WORD PTR [eax]
  41667a:	mov    esp,0xc6dd0404
  41667f:	jge    0x41666e
  416681:	sbb    dh,ch
  416683:	and    BYTE PTR [edx+0x14],al
  416686:	jmp    0x4166c2
  416688:	cld    
  416689:	sbb    DWORD PTR [esi-0x34],ebp
  41668c:	call   0x7cf142da
  416691:	enter  0x96b2,0xd
  416695:	jb     0x416646
  416697:	and    al,0x24
  416699:	into   
  41669a:	fisub  DWORD PTR [edi]
  41669c:	xor    dl,BYTE PTR [ebx-0xd]
  41669f:	stos   BYTE PTR es:[edi],al
  4166a0:	jns    0x41667e
  4166a2:	push   ebx
  4166a3:	daa    
  4166a4:	cwde   
  4166a5:	mov    WORD PTR [edi],ds
  4166a7:	fstp   DWORD PTR [eax]
  4166a9:	ins    DWORD PTR es:[edi],dx
  4166aa:	jmp    0xe282a181
  4166af:	loope  0x416686
  4166b1:	fxtract 
  4166b3:	jge    0x41668b
  4166b5:	rcl    DWORD PTR [edx+0x781a107f],1
  4166bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166bc:	dec    ebx
  4166bd:	(bad)  
  4166be:	(bad)  
  4166bf:	data16 sub BYTE PTR [ecx],dl
  4166c2:	(bad)  
  4166c5:	sub    ch,BYTE PTR [ecx]
  4166c7:	push   ecx
  4166c8:	seto   BYTE PTR [ebp-0x2364ef31]
  4166cf:	call   0x3fb0:0x64e11405
  4166d6:	xchg   DWORD PTR [edx+0xa324d20],edx
  4166dc:	dec    esi
  4166dd:	pop    edi
  4166de:	push   cs
  4166df:	ss or  eax,0x3fbdcb50
  4166e5:	ins    DWORD PTR es:[edi],dx
  4166e6:	iret   
  4166e7:	retf   0x843a
  4166ea:	lods   eax,DWORD PTR ds:[esi]
  4166eb:	call   0x8383:0x69acdf22
  4166f2:	dec    ecx
  4166f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f4:	sbb    BYTE PTR [eax+0x19],0x64
  4166f8:	cmp    edx,DWORD PTR [eax+0x7e505e2f]
  4166fe:	idiv   BYTE PTR [ebp+0x5153262e]
  416704:	push   edi
  416705:	xor    al,0x6b
  416707:	jns    0x4166dd
  416709:	leave  
  41670a:	aaa    
  41670b:	pusha  
  41670c:	pop    edx
  41670d:	daa    
  41670e:	add    DWORD PTR [esi-0x35],esp
  416711:	and    eax,0xe022a94a
  416716:	lea    ecx,[esp+ebp*8-0x3ea82619]
  41671d:	(bad)  
  41671e:	mov    eax,0x43eccc46
  416723:	or     BYTE PTR [ebx+ebx*4],dh
  416726:	es daa 
  416728:	aaa    
  416729:	cmp    dl,BYTE PTR [ecx-0x48624b61]
  41672f:	jo     0x416768
  416731:	ja     0x4166ea
  416733:	mov    edx,0xf92cba7f
  416738:	pushf  
  416739:	push   cs
  41673a:	or     DWORD PTR [esi-0xa],esi
  41673d:	or     al,0xcd
  41673f:	dec    edi
  416740:	push   ebx
  416741:	push   cx
  416743:	mov    ebp,0xa82c2226
  416748:	ja     0x41679c
  41674a:	jg     0x4166d0
  41674c:	jbe    0x4166ef
  41674e:	out    0xaf,al
  416750:	test   BYTE PTR [ebx+eiz*1+0x6de9a531],al
  416757:	outs   dx,DWORD PTR ds:[esi]
  416758:	cmp    al,0x46
  41675a:	cmc    
  41675b:	daa    
  41675c:	mov    esp,0x95e3d82e
  416761:	push   ebp
  416762:	jne    0x416737
  416764:	mov    edx,0xa19401be
  416769:	in     eax,0x43
  41676b:	unpckhps xmm7,XMMWORD PTR [ecx+0x1c]
  41676f:	jl     0x41671c
  416771:	lock repz sbb eax,0xa6841031
  416778:	adc    edi,DWORD PTR [ebx-0x7bc35dfa]
  41677e:	retf   
  41677f:	jae    0x416769
  416781:	and    edi,DWORD PTR [ebp-0x7]
  416784:	dec    ebx
  416785:	retf   
  416786:	sbb    ebx,esp
  416788:	pop    ds
  416789:	(bad)  
  41678a:	cdq    
  41678b:	xor    eax,0xe3150edb
  416790:	sti    
  416791:	adc    dl,BYTE PTR [edi-0x1601bc4a]
  416797:	loopne 0x4167af
  416799:	scas   eax,DWORD PTR es:[edi]
  41679a:	cwde   
  41679b:	mov    ds:0xb31ad2f8,al
  4167a0:	push   ebx
  4167a1:	dec    ebx
  4167a2:	vminss xmm3,xmm6,DWORD PTR ds:0x63e062a5
  4167aa:	cld    
  4167ab:	out    dx,al
  4167ac:	xor    al,0xe9
  4167ae:	in     eax,dx
  4167af:	vandps ymm6,ymm2,YMMWORD PTR ds:0xc9922f83
  4167b7:	leave  
  4167b8:	adc    esi,edi
  4167ba:	ror    DWORD PTR [ebp-0x27],cl
  4167bd:	mov    edi,DWORD PTR ds:0xcbe44efb
  4167c3:	cmp    esi,0xfffffff6
  4167c6:	jmp    0x416833
  4167c8:	or     BYTE PTR [edx+edi*1],bl
  4167cb:	pop    edx
  4167cc:	(bad)  
  4167cd:	fimul  WORD PTR [ebx-0x3e]
  4167d0:	push   ds
  4167d1:	mov    eax,ds:0x99c14a04
  4167d6:	(bad)  
  4167d7:	mov    DWORD PTR [edi+ebp*1+0x580ea623],edx
  4167de:	jge    0x416773
  4167e0:	dec    eax
  4167e1:	cdq    
  4167e2:	xchg   edi,eax
  4167e3:	xlat   BYTE PTR ds:[ebx]
  4167e4:	(bad)  
  4167e5:	mov    bx,0x6932
  4167e9:	and    DWORD PTR [eax],edi
  4167eb:	jl     0x416846
  4167ed:	pop    eax
  4167ee:	nop
  4167ef:	into   
  4167f0:	ss (bad) 
  4167f2:	jns    0x4167a6
  4167f4:	shr    DWORD PTR [ebx+0x61],cl
  4167f7:	xchg   ebp,eax
  4167f8:	xchg   ebp,eax
  4167f9:	inc    esi
  4167fa:	int3   
  4167fb:	add    al,dl
  4167fd:	ret    
  4167fe:	mov    ebp,0x6d698629
  416803:	ss xchg edx,eax
  416805:	mov    edx,0xb25e8745
  41680a:	xchg   ebp,eax
  41680b:	in     eax,0x16
  41680d:	out    dx,al
  41680e:	sbb    ecx,DWORD PTR [eax-0x1b8a0a6b]
  416814:	mov    ah,0xb6
  416816:	or     esi,ecx
  416818:	scas   eax,DWORD PTR es:[edi]
  416819:	dec    esi
  41681b:	xchg   ebx,eax
  41681c:	into   
  41681d:	mov    dl,0x2f
  41681f:	(bad)  
  416820:	pop    ecx
  416821:	mov    esi,DWORD PTR [ecx]
  416823:	push   edi
  416824:	dec    edx
  416825:	out    dx,eax
  416826:	fs hlt 
  416828:	test   al,0x14
  41682a:	shl    DWORD PTR [ecx-0x22],0x86
  41682e:	shl    DWORD PTR [eax-0x14ac29a5],cl
  416834:	mov    BYTE PTR [eax+0x1a674c69],bh
  41683a:	inc    edx
  41683b:	ret    
  41683c:	cmp    ebx,esp
  41683e:	mov    esp,DWORD PTR [esi+0x60d5b20f]
  416844:	dec    ebx
  416845:	(bad)  
  416846:	js     0x4168b5
  416848:	add    ebx,DWORD PTR [ecx+eiz*1+0x1]
  41684c:	les    ebx,FWORD PTR [ebp-0x176ce061]
  416852:	je     0x4167d5
  416854:	mov    ebx,0x34090018
  416859:	inc    ecx
  41685a:	test   BYTE PTR [edi-0x4b],ah
  41685d:	gs icebp 
  41685f:	inc    ebp
  416860:	xchg   esp,eax
  416861:	push   ecx
  416862:	(bad)  
  416863:	fcomi  st,st(7)
  416865:	loop   0x4168c3
  416867:	stos   BYTE PTR es:[edi],al
  416868:	jb     0x416891
  41686a:	fistp  DWORD PTR [edi]
  41686c:	and    DWORD PTR [eax],0xe7155e4d
  416872:	mov    cl,0x58
  416874:	sbb    bl,bh
  416876:	gs and al,0x1c
  416879:	ret    
  41687a:	clc    
  41687b:	jle    0x416855
  41687d:	in     al,dx
  41687e:	pop    esi
  41687f:	push   0x58e04adb
  416884:	fild   WORD PTR [edx]
  416886:	lods   eax,DWORD PTR ds:[esi]
  416887:	pop    DWORD PTR [ebx+ebx*2+0x322981cd]
  41688e:	adc    DWORD PTR [edx+0x1ac8f2b5],esp
  416894:	bound  ecx,QWORD PTR [ebx+0x675b1f79]
  41689a:	pop    ss
  41689b:	xor    DWORD PTR [esi+0x5b],ebx
  41689e:	cs out 0x92,eax
  4168a1:	jge    0x416907
  4168a3:	cld    
  4168a4:	test   DWORD PTR [ecx],edi
  4168a6:	inc    eax
  4168a7:	in     al,0x2
  4168a9:	cdq    
  4168aa:	adc    bh,BYTE PTR [edx-0x65]
  4168ad:	inc    ebx
  4168ae:	add    ebp,DWORD PTR [edx]
  4168b0:	int    0x84
  4168b2:	fistp  DWORD PTR [ebx+0x5c]
  4168b5:	stc    
  4168b6:	pop    esi
  4168b7:	iret   
  4168b8:	int3   
  4168b9:	aas    
  4168ba:	xor    BYTE PTR [edx+ebp*4],0x24
  4168be:	in     al,dx
  4168bf:	xchg   ebp,eax
  4168c0:	js     0x41687f
  4168c2:	lods   al,BYTE PTR ds:[esi]
  4168c3:	xchg   esi,eax
  4168c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c5:	in     al,dx
  4168c6:	(bad)
  4168cb:	mov    dl,0xb7
  4168cd:	(bad)  
  4168ce:	loopne 0x4168fb
  4168d0:	or     eax,edi
  4168d2:	dec    ecx
  4168d3:	mov    DWORD PTR [esi+0x39020013],edx
  4168d9:	sbb    DWORD PTR [ebx-0x68128555],edx
  4168df:	add    al,0xe8
  4168e1:	sti    
  4168e2:	retf   0x6a04
  4168e5:	daa    
  4168e6:	and    al,0xd6
  4168e8:	shr    dl,cl
  4168ea:	ss sbb al,0x10
  4168ed:	les    edx,FWORD PTR [ecx-0x5a]
  4168f0:	sbb    dl,ah
  4168f2:	js     0x41694b
  4168f4:	mov    al,0xbf
  4168f6:	retf   
  4168f7:	push   ecx
  4168f8:	aam    0x5a
  4168fa:	dec    ebp
  4168fb:	std    
  4168fc:	adc    edi,esi
  4168fe:	dec    edx
  4168ff:	jmp    0xff3a0894
  416904:	das    
  416905:	pop    ebx
  416906:	add    dh,BYTE PTR [edx]
  416908:	pop    edi
  416909:	sbb    al,0x46
  41690b:	cwde   
  41690c:	(bad)  
  41690d:	jecxz  0x4168ae
  41690f:	sub    al,0x9a
  416911:	and    BYTE PTR [ebx],dl
  416913:	cld    
  416914:	mov    esp,0xa9af2686
  416919:	(bad)  
  41691b:	imul   ecx,DWORD PTR [ebx+0x13],0xe3e8afb0
  416922:	mov    cl,0x23
  416924:	ret    0xc020
  416927:	jno    0x416964
  416929:	mov    edx,DWORD PTR [ebp+ebx*4+0x6f]
  41692d:	sti    
  41692e:	pushf  
  41692f:	fs pop esi
  416931:	and    al,0xb5
  416933:	mov    BYTE PTR [esi-0x4f],bl
  416936:	push   ebp
  416937:	mov    cl,0x7a
  416939:	fs jle 0x4168db
  41693c:	inc    ecx
  41693d:	test   DWORD PTR [ebx-0x2900038b],ecx
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
