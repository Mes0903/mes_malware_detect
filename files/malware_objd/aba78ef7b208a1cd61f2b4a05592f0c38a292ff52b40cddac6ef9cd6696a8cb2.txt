
aba78ef7b208a1cd61f2b4a05592f0c38a292ff52b40cddac6ef9cd6696a8cb2.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	mov    eax,DWORD PTR [ebp+0x8]
   10644:	xor    edx,edx
   10646:	inc    edx
   10647:	mov    DWORD PTR [ecx],eax
   10649:	push   esi
   1064a:	mov    eax,DWORD PTR [ecx]
   1064c:	mov    esi,eax
   1064e:	shr    esi,0x1e
   10651:	xor    esi,eax
   10653:	imul   esi,esi,0x6c078965
   10659:	add    ecx,0x4
   1065c:	add    esi,edx
   1065e:	inc    edx
   1065f:	cmp    edx,0x270
   10665:	mov    DWORD PTR [ecx],esi
   10667:	jl     0x1064a
   10669:	pop    esi
   1066a:	pop    ebp
   1066b:	ret    0x4
   1066e:	int3   
   1066f:	int3   
   10670:	int3   
   10671:	int3   
   10672:	int3   
   10673:	int3   
   10674:	mov    edi,edi
   10676:	push   ebp
   10677:	mov    ebp,esp
   10679:	push   ecx
   1067a:	push   ebx
   1067b:	push   esi
   1067c:	push   edi
   1067d:	mov    edi,ecx
   1067f:	mov    esi,edi
   10681:	mov    ebx,0xe3
   10686:	push   DWORD PTR [esi+0x4]
   10689:	mov    ecx,edi
   1068b:	push   DWORD PTR [esi]
   1068d:	dec    ebx
   1068e:	push   DWORD PTR [esi+0x634]
   10694:	call   0x10606
   10699:	mov    DWORD PTR [esi],eax
   1069b:	add    esi,0x4
   1069e:	test   ebx,ebx
   106a0:	jne    0x10686
   106a2:	mov    DWORD PTR [ebp-0x4],0x18c
   106a9:	lea    ebx,[esi+0x4]
   106ac:	push   DWORD PTR [ebx]
   106ae:	mov    ecx,edi
   106b0:	push   DWORD PTR [esi]
   106b2:	push   DWORD PTR [esi-0x38c]
   106b8:	call   0x10606
   106bd:	dec    DWORD PTR [ebp-0x4]
   106c0:	mov    DWORD PTR [esi],eax
   106c2:	mov    esi,ebx
   106c4:	jne    0x106a9
   106c6:	push   DWORD PTR [edi]
   106c8:	mov    ecx,edi
   106ca:	push   DWORD PTR [esi]
   106cc:	push   DWORD PTR [esi-0x38c]
   106d2:	call   0x10606
   106d7:	mov    DWORD PTR [esi],eax
   106d9:	mov    DWORD PTR [edi+0x9c4],0x270
   106e3:	mov    DWORD PTR [edi+0x9c0],edi
   106e9:	pop    edi
   106ea:	pop    esi
   106eb:	pop    ebx
   106ec:	leave  
   106ed:	ret    
   106ee:	int3   
   106ef:	int3   
   106f0:	int3   
   106f1:	int3   
   106f2:	int3   
   106f3:	int3   
   106f4:	mov    edi,edi
   106f6:	push   ebp
   106f7:	mov    ebp,esp
   106f9:	push   esi
   106fa:	push   DWORD PTR [ebp+0x8]
   106fd:	mov    esi,ecx
   106ff:	call   0x1063c
   10704:	mov    ecx,esi
   10706:	call   0x10674
   1070b:	pop    esi
   1070c:	pop    ebp
   1070d:	ret    0x4
   10710:	int3   
   10711:	int3   
   10712:	int3   
   10713:	int3   
   10714:	int3   
   10715:	int3   
   10716:	mov    edi,edi
   10718:	push   esi
   10719:	push   edi
   1071a:	mov    edi,ecx
   1071c:	lea    esi,[edi+0x9c4]
   10722:	cmp    DWORD PTR [esi],0x0
   10725:	jne    0x1072c
   10727:	call   0x10674
   1072c:	dec    DWORD PTR [esi]
   1072e:	lea    eax,[edi+0x9c0]
   10734:	mov    edx,DWORD PTR [eax]
   10736:	mov    ecx,DWORD PTR [edx]
   10738:	add    edx,0x4
   1073b:	mov    DWORD PTR [eax],edx
   1073d:	mov    eax,ecx
   1073f:	shr    eax,0xb
   10742:	xor    ecx,eax
   10744:	mov    eax,ecx
   10746:	and    eax,0xff3a58ad
   1074b:	shl    eax,0x7
   1074e:	xor    ecx,eax
   10750:	mov    eax,ecx
   10752:	and    eax,0xffffdf8c
   10757:	shl    eax,0xf
   1075a:	xor    ecx,eax
   1075c:	mov    eax,ecx
   1075e:	shr    eax,0x12
   10761:	pop    edi
   10762:	xor    eax,ecx
   10764:	pop    esi
   10765:	ret    
   10766:	int3   
   10767:	int3   
   10768:	int3   
   10769:	int3   
   1076a:	int3   
   1076b:	int3   
   1076c:	mov    edi,edi
   1076e:	push   ebp
   1076f:	mov    ebp,esp
   10771:	push   esi
   10772:	mov    esi,DWORD PTR [ebp+0x8]
   10775:	shr    esi,1
   10777:	or     esi,DWORD PTR [ebp+0x8]
   1077a:	push   edi
   1077b:	mov    eax,esi
   1077d:	shr    eax,0x2
   10780:	or     esi,eax
   10782:	mov    eax,esi
   10784:	shr    eax,0x4
   10787:	or     esi,eax
   10789:	mov    eax,esi
   1078b:	shr    eax,0x8
   1078e:	or     esi,eax
   10790:	mov    eax,esi
   10792:	shr    eax,0x10
   10795:	mov    edi,ecx
   10797:	or     esi,eax
   10799:	mov    ecx,edi
   1079b:	call   0x10716
   107a0:	and    eax,esi
   107a2:	cmp    eax,DWORD PTR [ebp+0x8]
   107a5:	ja     0x10799
   107a7:	pop    edi
   107a8:	pop    esi
   107a9:	pop    ebp
   107aa:	ret    0x4
   107ad:	int3   
   107ae:	int3   
   107af:	int3   
   107b0:	int3   
   107b1:	int3   
   107b2:	mov    edi,edi
   107b4:	push   ebp
   107b5:	mov    ebp,esp
   107b7:	sub    esp,0xa04
   107bd:	push   ebx
   107be:	push   esi
   107bf:	mov    esi,DWORD PTR [ebp+0x14]
   107c2:	push   edi
   107c3:	test   esi,esi
   107c5:	jne    0x108a0
   107cb:	xor    ecx,ecx
   107cd:	lea    eax,[ebp-0x3c]
   107d0:	mov    edx,0xff
   107d5:	shl    edx,cl
   107d7:	and    edx,DWORD PTR [ebp+0x8]
   107da:	shr    edx,cl
   107dc:	inc    ecx
   107dd:	inc    ecx
   107de:	mov    DWORD PTR [eax],edx
   107e0:	add    eax,0x4
   107e3:	cmp    ecx,0x14
   107e6:	jne    0x107d0
   107e8:	mov    ebx,DWORD PTR [ebp+0xc]
   107eb:	xor    eax,eax
   107ed:	mov    WORD PTR [ebx],ax
   107f0:	mov    eax,DWORD PTR [ebp-0x3c]
   107f3:	push   0x5
   107f5:	cdq    
   107f6:	pop    ecx
   107f7:	idiv   ecx
   107f9:	mov    DWORD PTR [ebp-0x14],0x1e576
   10800:	mov    DWORD PTR [ebp-0x10],0x1e56c
   10807:	mov    DWORD PTR [ebp-0xc],0x1e564
   1080e:	mov    DWORD PTR [ebp-0x8],0x1e55a
   10815:	mov    DWORD PTR [ebp-0x4],0x1e550
   1081c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   10820:	mov    ecx,edx
   10822:	mov    ax,WORD PTR [edx]
   10825:	inc    edx
   10826:	inc    edx
   10827:	test   ax,ax
   1082a:	jne    0x10822
   1082c:	sub    edx,ecx
   1082e:	mov    edi,ebx
   10830:	dec    edi
   10831:	mov    esi,ecx
   10833:	dec    edi
   10834:	mov    ax,WORD PTR [edi+0x2]
   10838:	inc    edi
   10839:	inc    edi
   1083a:	test   ax,ax
   1083d:	jne    0x10834
   1083f:	mov    ecx,edx
   10841:	shr    ecx,0x2
   10844:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10846:	mov    ecx,edx
   10848:	and    ecx,0x3
   1084b:	mov    eax,ebx
   1084d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1084f:	lea    ecx,[eax+0x2]
   10852:	mov    dx,WORD PTR [eax]
   10855:	inc    eax
   10856:	inc    eax
   10857:	test   dx,dx
   1085a:	jne    0x10852
   1085c:	sub    eax,ecx
   1085e:	sar    eax,1
   10860:	mov    ecx,eax
   10862:	mov    eax,DWORD PTR [ebp-0x38]
   10865:	push   0x3
   10867:	cdq    
   10868:	pop    esi
   10869:	idiv   esi
   1086b:	cmp    edx,0xfffffffe
   1086e:	je     0x10954
   10874:	add    edx,0x2
   10877:	lea    esi,[ebp-0x34]
   1087a:	mov    DWORD PTR [ebp+0x8],edx
   1087d:	mov    eax,DWORD PTR [esi]
   1087f:	cdq    
   10880:	push   0x1a
   10882:	pop    edi
   10883:	idiv   edi
   10885:	add    esi,0x4
   10888:	xor    eax,eax
   1088a:	add    edx,0x61
   1088d:	mov    WORD PTR [ebx+ecx*2],dx
   10891:	inc    ecx
   10892:	dec    DWORD PTR [ebp+0x8]
   10895:	mov    WORD PTR [ebx+ecx*2],ax
   10899:	jne    0x1087d
   1089b:	jmp    0x10954
   108a0:	cmp    esi,0x1
   108a3:	je     0x108b0
   108a5:	mov    eax,esi
   108a7:	imul   eax,eax,0xa
   108aa:	add    eax,DWORD PTR [ebp+0x10]
   108ad:	add    DWORD PTR [ebp+0x8],eax
   108b0:	push   DWORD PTR [ebp+0x8]
   108b3:	lea    ecx,[ebp-0xa04]
   108b9:	call   0x106f4
   108be:	lea    eax,[esi-0x1]
   108c1:	cmp    eax,0x5
   108c4:	ja     0x108d5
   108c6:	imul   esi,esi,0x3
   108c9:	add    esi,DWORD PTR [ebp+0x10]
   108cc:	mov    esi,DWORD PTR [esi*4+0x76ebc]
   108d3:	jmp    0x108da
   108d5:	mov    esi,0x1e54e
   108da:	mov    ebx,DWORD PTR [ebp+0xc]
   108dd:	xor    eax,eax
   108df:	mov    WORD PTR [ebx],ax
   108e2:	mov    eax,esi
   108e4:	mov    edx,esi
   108e6:	mov    cx,WORD PTR [eax]
   108e9:	inc    eax
   108ea:	inc    eax
   108eb:	test   cx,cx
   108ee:	jne    0x108e6
   108f0:	sub    eax,edx
   108f2:	mov    edi,ebx
   108f4:	dec    edi
   108f5:	dec    edi
   108f6:	mov    cx,WORD PTR [edi+0x2]
   108fa:	inc    edi
   108fb:	inc    edi
   108fc:	test   cx,cx
   108ff:	jne    0x108f6
   10901:	mov    ecx,eax
   10903:	shr    ecx,0x2
   10906:	mov    esi,edx
   10908:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1090a:	mov    ecx,eax
   1090c:	and    ecx,0x3
   1090f:	mov    eax,ebx
   10911:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10913:	lea    ecx,[eax+0x2]
   10916:	mov    dx,WORD PTR [eax]
   10919:	inc    eax
   1091a:	inc    eax
   1091b:	test   dx,dx
   1091e:	jne    0x10916
   10920:	sub    eax,ecx
   10922:	sar    eax,1
   10924:	push   0x5
   10926:	mov    esi,eax
   10928:	pop    edi
   10929:	push   0x23
   1092b:	lea    ecx,[ebp-0xa04]
   10931:	call   0x1076c
   10936:	cmp    eax,0xa
   10939:	jae    0x10940
   1093b:	add    eax,0x30
   1093e:	jmp    0x10943
   10940:	add    eax,0x57
   10943:	movzx  eax,ax
   10946:	mov    WORD PTR [ebx+esi*2],ax
   1094a:	inc    esi
   1094b:	xor    eax,eax
   1094d:	dec    edi
   1094e:	mov    WORD PTR [ebx+esi*2],ax
   10952:	jne    0x10929
   10954:	pop    edi
   10955:	pop    esi
   10956:	pop    ebx
   10957:	leave  
   10958:	ret    0x10
   1095b:	int3   
   1095c:	int3   
   1095d:	int3   
   1095e:	int3   
   1095f:	int3   
   10960:	mov    edi,edi
   10962:	push   ebp
   10963:	mov    ebp,esp
   10965:	mov    eax,DWORD PTR [ebp+0x8]
   10968:	lea    edx,[eax+0x2]
   1096b:	mov    cx,WORD PTR [eax]
   1096e:	inc    eax
   1096f:	inc    eax
   10970:	test   cx,cx
   10973:	jne    0x1096b
   10975:	sub    eax,edx
   10977:	sar    eax,1
   10979:	pop    ebp
   1097a:	ret    0x4
   1097d:	int3   
   1097e:	int3   
   1097f:	int3   
   10980:	int3   
   10981:	int3   
   10982:	mov    eax,ecx
   10984:	ret    
   10985:	int3   
   10986:	int3   
   10987:	int3   
   10988:	int3   
   10989:	int3   
   1098a:	ret    
   1098b:	int3   
   1098c:	int3   
   1098d:	int3   
   1098e:	int3   
   1098f:	int3   
   10990:	mov    edi,edi
   10992:	push   ebp
   10993:	mov    ebp,esp
   10995:	push   esi
   10996:	xor    esi,esi
   10998:	xor    edx,edx
   1099a:	cmp    DWORD PTR [ebp+0xc],esi
   1099d:	je     0x109ba
   1099f:	mov    eax,DWORD PTR [ebp+0x8]
   109a2:	mov    ecx,DWORD PTR [ebp+0x10]
   109a5:	mov    cl,BYTE PTR [edx+ecx*1]
   109a8:	add    eax,esi
   109aa:	xor    BYTE PTR [eax],cl
   109ac:	lea    eax,[edx+0x1]
   109af:	xor    edx,edx
   109b1:	div    DWORD PTR [ebp+0x14]
   109b4:	inc    esi
   109b5:	cmp    esi,DWORD PTR [ebp+0xc]
   109b8:	jne    0x1099f
   109ba:	pop    esi
   109bb:	pop    ebp
   109bc:	ret    0x10
   109bf:	int3   
   109c0:	int3   
   109c1:	int3   
   109c2:	int3   
   109c3:	int3   
   109c4:	mov    edi,edi
   109c6:	push   ebp
   109c7:	mov    ebp,esp
   109c9:	mov    ecx,DWORD PTR [ebp+0x8]
   109cc:	mov    eax,ecx
   109ce:	lea    edx,[eax+0x2]
   109d1:	push   esi
   109d2:	mov    si,WORD PTR [eax]
   109d5:	inc    eax
   109d6:	inc    eax
   109d7:	test   si,si
   109da:	jne    0x109d2
   109dc:	sub    eax,edx
   109de:	sar    eax,1
   109e0:	cmp    eax,0xc
   109e3:	jae    0x109ec
   109e5:	xor    al,al
   109e7:	jmp    0x10aba
   109ec:	lea    eax,[ecx+eax*2-0x18]
   109f0:	movzx  ecx,WORD PTR [eax]
   109f3:	cmp    cx,0x69
   109f7:	je     0x109ff
   109f9:	cmp    cx,0x49
   109fd:	jne    0x109e5
   109ff:	movzx  ecx,WORD PTR [eax+0x2]
   10a03:	push   0x45
   10a05:	pop    esi
   10a06:	push   0x65
   10a08:	pop    edx
   10a09:	cmp    cx,dx
   10a0c:	je     0x10a13
   10a0e:	cmp    cx,si
   10a11:	jne    0x109e5
   10a13:	movzx  ecx,WORD PTR [eax+0x4]
   10a17:	cmp    cx,0x78
   10a1b:	je     0x10a23
   10a1d:	cmp    cx,0x58
   10a21:	jne    0x109e5
   10a23:	movzx  ecx,WORD PTR [eax+0x6]
   10a27:	cmp    cx,0x70
   10a2b:	je     0x10a33
   10a2d:	cmp    cx,0x50
   10a31:	jne    0x109e5
   10a33:	movzx  ecx,WORD PTR [eax+0x8]
   10a37:	cmp    cx,0x6c
   10a3b:	je     0x10a43
   10a3d:	cmp    cx,0x4c
   10a41:	jne    0x109e5
   10a43:	movzx  ecx,WORD PTR [eax+0xa]
   10a47:	cmp    cx,0x6f
   10a4b:	je     0x10a53
   10a4d:	cmp    cx,0x4f
   10a51:	jne    0x109e5
   10a53:	movzx  ecx,WORD PTR [eax+0xc]
   10a57:	cmp    cx,0x72
   10a5b:	je     0x10a63
   10a5d:	cmp    cx,0x52
   10a61:	jne    0x109e5
   10a63:	movzx  ecx,WORD PTR [eax+0xe]
   10a67:	cmp    cx,dx
   10a6a:	je     0x10a75
   10a6c:	cmp    cx,si
   10a6f:	jne    0x109e5
   10a75:	cmp    WORD PTR [eax+0x10],0x2e
   10a7a:	jne    0x109e5
   10a80:	movzx  ecx,WORD PTR [eax+0x12]
   10a84:	cmp    cx,dx
   10a87:	je     0x10a92
   10a89:	cmp    cx,si
   10a8c:	jne    0x109e5
   10a92:	movzx  ecx,WORD PTR [eax+0x14]
   10a96:	cmp    cx,0x78
   10a9a:	je     0x10aa6
   10a9c:	cmp    cx,0x58
   10aa0:	jne    0x109e5
   10aa6:	movzx  eax,WORD PTR [eax+0x16]
   10aaa:	cmp    ax,dx
   10aad:	je     0x10ab8
   10aaf:	cmp    ax,si
   10ab2:	jne    0x109e5
   10ab8:	mov    al,0x1
   10aba:	pop    esi
   10abb:	pop    ebp
   10abc:	ret    0x4
   10abf:	int3   
   10ac0:	int3   
   10ac1:	int3   
   10ac2:	int3   
   10ac3:	int3   
   10ac4:	mov    edi,edi
   10ac6:	push   ebp
   10ac7:	mov    ebp,esp
   10ac9:	mov    ecx,DWORD PTR [ebp+0x8]
   10acc:	mov    eax,ecx
   10ace:	lea    edx,[eax+0x2]
   10ad1:	push   esi
   10ad2:	mov    si,WORD PTR [eax]
   10ad5:	inc    eax
   10ad6:	inc    eax
   10ad7:	test   si,si
   10ada:	jne    0x10ad2
   10adc:	sub    eax,edx
   10ade:	sar    eax,1
   10ae0:	pop    esi
   10ae1:	cmp    eax,0xb
   10ae4:	jae    0x10aed
   10ae6:	xor    al,al
   10ae8:	jmp    0x10ba9
   10aed:	lea    eax,[ecx+eax*2-0x16]
   10af1:	movzx  ecx,WORD PTR [eax]
   10af4:	cmp    cx,0x66
   10af8:	je     0x10b00
   10afa:	cmp    cx,0x46
   10afe:	jne    0x10ae6
   10b00:	movzx  ecx,WORD PTR [eax+0x2]
   10b04:	cmp    cx,0x69
   10b08:	je     0x10b10
   10b0a:	cmp    cx,0x49
   10b0e:	jne    0x10ae6
   10b10:	movzx  ecx,WORD PTR [eax+0x4]
   10b14:	cmp    cx,0x72
   10b18:	je     0x10b20
   10b1a:	cmp    cx,0x52
   10b1e:	jne    0x10ae6
   10b20:	movzx  ecx,WORD PTR [eax+0x6]
   10b24:	cmp    cx,0x65
   10b28:	je     0x10b30
   10b2a:	cmp    cx,0x45
   10b2e:	jne    0x10ae6
   10b30:	movzx  ecx,WORD PTR [eax+0x8]
   10b34:	cmp    cx,0x66
   10b38:	je     0x10b40
   10b3a:	cmp    cx,0x46
   10b3e:	jne    0x10ae6
   10b40:	movzx  ecx,WORD PTR [eax+0xa]
   10b44:	cmp    cx,0x6f
   10b48:	je     0x10b50
   10b4a:	cmp    cx,0x4f
   10b4e:	jne    0x10ae6
   10b50:	movzx  ecx,WORD PTR [eax+0xc]
   10b54:	cmp    cx,0x78
   10b58:	je     0x10b60
   10b5a:	cmp    cx,0x58
   10b5e:	jne    0x10ae6
   10b60:	cmp    WORD PTR [eax+0xe],0x2e
   10b65:	jne    0x10ae6
   10b6b:	movzx  ecx,WORD PTR [eax+0x10]
   10b6f:	cmp    cx,0x65
   10b73:	je     0x10b7f
   10b75:	cmp    cx,0x45
   10b79:	jne    0x10ae6
   10b7f:	movzx  ecx,WORD PTR [eax+0x12]
   10b83:	cmp    cx,0x78
   10b87:	je     0x10b93
   10b89:	cmp    cx,0x58
   10b8d:	jne    0x10ae6
   10b93:	movzx  eax,WORD PTR [eax+0x14]
   10b97:	cmp    ax,0x65
   10b9b:	je     0x10ba7
   10b9d:	cmp    ax,0x45
   10ba1:	jne    0x10ae6
   10ba7:	mov    al,0x1
   10ba9:	pop    ebp
   10baa:	ret    0x4
   10bad:	int3   
   10bae:	int3   
   10baf:	int3   
   10bb0:	int3   
   10bb1:	int3   
   10bb2:	mov    edi,edi
   10bb4:	push   ebp
   10bb5:	mov    ebp,esp
   10bb7:	mov    ecx,DWORD PTR [ebp+0x8]
   10bba:	mov    eax,ecx
   10bbc:	lea    edx,[eax+0x2]
   10bbf:	push   esi
   10bc0:	mov    si,WORD PTR [eax]
   10bc3:	inc    eax
   10bc4:	inc    eax
   10bc5:	test   si,si
   10bc8:	jne    0x10bc0
   10bca:	sub    eax,edx
   10bcc:	sar    eax,1
   10bce:	pop    esi
   10bcf:	cmp    eax,0xa
   10bd2:	jae    0x10bdb
   10bd4:	xor    al,al
   10bd6:	jmp    0x10c83
   10bdb:	lea    eax,[ecx+eax*2-0x14]
   10bdf:	movzx  ecx,WORD PTR [eax]
   10be2:	cmp    cx,0x63
   10be6:	je     0x10bee
   10be8:	cmp    cx,0x43
   10bec:	jne    0x10bd4
   10bee:	movzx  ecx,WORD PTR [eax+0x2]
   10bf2:	cmp    cx,0x68
   10bf6:	je     0x10bfe
   10bf8:	cmp    cx,0x48
   10bfc:	jne    0x10bd4
   10bfe:	movzx  ecx,WORD PTR [eax+0x4]
   10c02:	cmp    cx,0x72
   10c06:	je     0x10c0e
   10c08:	cmp    cx,0x52
   10c0c:	jne    0x10bd4
   10c0e:	movzx  ecx,WORD PTR [eax+0x6]
   10c12:	cmp    cx,0x6f
   10c16:	je     0x10c1e
   10c18:	cmp    cx,0x4f
   10c1c:	jne    0x10bd4
   10c1e:	movzx  ecx,WORD PTR [eax+0x8]
   10c22:	cmp    cx,0x6d
   10c26:	je     0x10c2e
   10c28:	cmp    cx,0x4d
   10c2c:	jne    0x10bd4
   10c2e:	movzx  ecx,WORD PTR [eax+0xa]
   10c32:	cmp    cx,0x65
   10c36:	je     0x10c3e
   10c38:	cmp    cx,0x45
   10c3c:	jne    0x10bd4
   10c3e:	cmp    WORD PTR [eax+0xc],0x2e
   10c43:	jne    0x10bd4
   10c45:	movzx  ecx,WORD PTR [eax+0xe]
   10c49:	cmp    cx,0x65
   10c4d:	je     0x10c59
   10c4f:	cmp    cx,0x45
   10c53:	jne    0x10bd4
   10c59:	movzx  ecx,WORD PTR [eax+0x10]
   10c5d:	cmp    cx,0x78
   10c61:	je     0x10c6d
   10c63:	cmp    cx,0x58
   10c67:	jne    0x10bd4
   10c6d:	movzx  eax,WORD PTR [eax+0x12]
   10c71:	cmp    ax,0x65
   10c75:	je     0x10c81
   10c77:	cmp    ax,0x45
   10c7b:	jne    0x10bd4
   10c81:	mov    al,0x1
   10c83:	pop    ebp
   10c84:	ret    0x4
   10c87:	int3   
   10c88:	int3   
   10c89:	int3   
   10c8a:	int3   
   10c8b:	int3   
   10c8c:	mov    edi,edi
   10c8e:	push   ebp
   10c8f:	mov    ebp,esp
   10c91:	mov    ecx,DWORD PTR [ebp+0x8]
   10c94:	mov    eax,ecx
   10c96:	lea    edx,[eax+0x2]
   10c99:	push   esi
   10c9a:	mov    si,WORD PTR [eax]
   10c9d:	inc    eax
   10c9e:	inc    eax
   10c9f:	test   si,si
   10ca2:	jne    0x10c9a
   10ca4:	sub    eax,edx
   10ca6:	sar    eax,1
   10ca8:	pop    esi
   10ca9:	cmp    eax,0x9
   10cac:	jae    0x10cb5
   10cae:	xor    al,al
   10cb0:	jmp    0x10d49
   10cb5:	lea    eax,[ecx+eax*2-0x12]
   10cb9:	movzx  ecx,WORD PTR [eax]
   10cbc:	cmp    cx,0x6d
   10cc0:	je     0x10cc8
   10cc2:	cmp    cx,0x4d
   10cc6:	jne    0x10cae
   10cc8:	movzx  ecx,WORD PTR [eax+0x2]
   10ccc:	cmp    cx,0x73
   10cd0:	je     0x10cd8
   10cd2:	cmp    cx,0x53
   10cd6:	jne    0x10cae
   10cd8:	movzx  ecx,WORD PTR [eax+0x4]
   10cdc:	cmp    cx,0x68
   10ce0:	je     0x10ce8
   10ce2:	cmp    cx,0x48
   10ce6:	jne    0x10cae
   10ce8:	movzx  ecx,WORD PTR [eax+0x6]
   10cec:	cmp    cx,0x74
   10cf0:	je     0x10cf8
   10cf2:	cmp    cx,0x54
   10cf6:	jne    0x10cae
   10cf8:	movzx  ecx,WORD PTR [eax+0x8]
   10cfc:	cmp    cx,0x61
   10d00:	je     0x10d08
   10d02:	cmp    cx,0x41
   10d06:	jne    0x10cae
   10d08:	cmp    WORD PTR [eax+0xa],0x2e
   10d0d:	jne    0x10cae
   10d0f:	movzx  ecx,WORD PTR [eax+0xc]
   10d13:	cmp    cx,0x65
   10d17:	je     0x10d1f
   10d19:	cmp    cx,0x45
   10d1d:	jne    0x10cae
   10d1f:	movzx  ecx,WORD PTR [eax+0xe]
   10d23:	cmp    cx,0x78
   10d27:	je     0x10d33
   10d29:	cmp    cx,0x58
   10d2d:	jne    0x10cae
   10d33:	movzx  eax,WORD PTR [eax+0x10]
   10d37:	cmp    ax,0x65
   10d3b:	je     0x10d47
   10d3d:	cmp    ax,0x45
   10d41:	jne    0x10cae
   10d47:	mov    al,0x1
   10d49:	pop    ebp
   10d4a:	ret    0x4
   10d4d:	int3   
   10d4e:	int3   
   10d4f:	int3   
   10d50:	int3   
   10d51:	int3   
   10d52:	mov    edi,edi
   10d54:	push   ebp
   10d55:	mov    ebp,esp
   10d57:	push   esi
   10d58:	mov    esi,DWORD PTR [ebp+0x8]
   10d5b:	push   esi
   10d5c:	call   0x109c4
   10d61:	test   al,al
   10d63:	je     0x10d6a
   10d65:	xor    eax,eax
   10d67:	inc    eax
   10d68:	jmp    0x10d97
   10d6a:	push   esi
   10d6b:	call   0x10ac4
   10d70:	test   al,al
   10d72:	je     0x10d79
   10d74:	push   0x2
   10d76:	pop    eax
   10d77:	jmp    0x10d97
   10d79:	push   esi
   10d7a:	call   0x10bb2
   10d7f:	test   al,al
   10d81:	je     0x10d87
   10d83:	push   0x3
   10d85:	jmp    0x10d76
   10d87:	push   esi
   10d88:	call   0x10c8c
   10d8d:	movzx  eax,al
   10d90:	neg    eax
   10d92:	sbb    eax,eax
   10d94:	and    eax,0x4
   10d97:	pop    esi
   10d98:	pop    ebp
   10d99:	ret    0x4
   10d9c:	int3   
   10d9d:	int3   
   10d9e:	int3   
   10d9f:	int3   
   10da0:	int3   
   10da1:	int3   
   10da2:	mov    edi,edi
   10da4:	push   ebp
   10da5:	mov    ebp,esp
   10da7:	mov    eax,DWORD PTR [ebp+0x8]
   10daa:	mov    edx,DWORD PTR [ebp+0xc]
   10dad:	push   esi
   10dae:	xor    esi,esi
   10db0:	jmp    0x10dd5
   10db2:	mov    ecx,eax
   10db4:	and    ecx,0x1
   10db7:	or     ecx,esi
   10db9:	push   esi
   10dba:	jne    0x10dc7
   10dbc:	push   0x2
   10dbe:	push   edx
   10dbf:	push   eax
   10dc0:	call   0x1e192
   10dc5:	jmp    0x10dd5
   10dc7:	push   0x3
   10dc9:	push   edx
   10dca:	push   eax
   10dcb:	call   0x1e186
   10dd0:	add    eax,0x1
   10dd3:	adc    edx,esi
   10dd5:	cmp    eax,0x4
   10dd8:	jne    0x10db2
   10dda:	cmp    edx,esi
   10ddc:	jne    0x10db2
   10dde:	pop    esi
   10ddf:	pop    ebp
   10de0:	ret    0x8
   10de3:	int3   
   10de4:	int3   
   10de5:	int3   
   10de6:	int3   
   10de7:	int3   
   10de8:	mov    edi,edi
   10dea:	push   ebp
   10deb:	mov    ebp,esp
   10ded:	mov    eax,DWORD PTR [ebp+0x8]
   10df0:	mov    edx,DWORD PTR ds:0x77ab0
   10df6:	jmp    0x10dfa
   10df8:	mov    eax,ecx
   10dfa:	mov    ecx,DWORD PTR [eax+0x8]
   10dfd:	cmp    ecx,edx
   10dff:	jne    0x10df8
   10e01:	pop    ebp
   10e02:	ret    0x4
   10e05:	int3   
   10e06:	int3   
   10e07:	int3   
   10e08:	int3   
   10e09:	int3   
   10e0a:	mov    edi,edi
   10e0c:	push   ebp
   10e0d:	mov    ebp,esp
   10e0f:	mov    eax,DWORD PTR [ebp+0x8]
   10e12:	mov    edx,DWORD PTR ds:0x77ab0
   10e18:	jmp    0x10e1c
   10e1a:	mov    eax,ecx
   10e1c:	mov    ecx,DWORD PTR [eax]
   10e1e:	cmp    ecx,edx
   10e20:	jne    0x10e1a
   10e22:	pop    ebp
   10e23:	ret    0x4
   10e26:	int3   
   10e27:	int3   
   10e28:	int3   
   10e29:	int3   
   10e2a:	int3   
   10e2b:	int3   
   10e2c:	mov    edi,edi
   10e2e:	push   ebp
   10e2f:	mov    ebp,esp
   10e31:	mov    eax,DWORD PTR [ebp+0x8]
   10e34:	mov    edx,DWORD PTR ds:0x77ab4
   10e3a:	jmp    0x10e3e
   10e3c:	mov    eax,ecx
   10e3e:	mov    ecx,DWORD PTR [eax+0x8]
   10e41:	cmp    ecx,edx
   10e43:	jne    0x10e3c
   10e45:	pop    ebp
   10e46:	ret    0x4
   10e49:	int3   
   10e4a:	int3   
   10e4b:	int3   
   10e4c:	int3   
   10e4d:	int3   
   10e4e:	mov    edi,edi
   10e50:	push   ebp
   10e51:	mov    ebp,esp
   10e53:	mov    eax,DWORD PTR [ebp+0x8]
   10e56:	mov    edx,DWORD PTR ds:0x77ab4
   10e5c:	jmp    0x10e60
   10e5e:	mov    eax,ecx
   10e60:	mov    ecx,DWORD PTR [eax]
   10e62:	cmp    ecx,edx
   10e64:	jne    0x10e5e
   10e66:	pop    ebp
   10e67:	ret    0x4
   10e6a:	int3   
   10e6b:	int3   
   10e6c:	int3   
   10e6d:	int3   
   10e6e:	int3   
   10e6f:	int3   
   10e70:	mov    edi,edi
   10e72:	push   ebp
   10e73:	mov    ebp,esp
   10e75:	mov    eax,DWORD PTR [ebp+0x8]
   10e78:	mov    edx,DWORD PTR ds:0x77ab8
   10e7e:	jmp    0x10e82
   10e80:	mov    eax,ecx
   10e82:	mov    ecx,DWORD PTR [eax+0x8]
   10e85:	cmp    ecx,edx
   10e87:	jne    0x10e80
   10e89:	pop    ebp
   10e8a:	ret    0x4
   10e8d:	int3   
   10e8e:	int3   
   10e8f:	int3   
   10e90:	int3   
   10e91:	int3   
   10e92:	mov    edi,edi
   10e94:	push   ebp
   10e95:	mov    ebp,esp
   10e97:	mov    eax,DWORD PTR [ebp+0x8]
   10e9a:	mov    edx,DWORD PTR ds:0x77ab8
   10ea0:	jmp    0x10ea4
   10ea2:	mov    eax,ecx
   10ea4:	mov    ecx,DWORD PTR [eax]
   10ea6:	cmp    ecx,edx
   10ea8:	jne    0x10ea2
   10eaa:	pop    ebp
   10eab:	ret    0x4
   10eae:	int3   
   10eaf:	int3   
   10eb0:	int3   
   10eb1:	int3   
   10eb2:	int3   
   10eb3:	int3   
   10eb4:	mov    edi,edi
   10eb6:	push   esi
   10eb7:	mov    esi,ecx
   10eb9:	mov    ecx,DWORD PTR [esi]
   10ebb:	cmp    DWORD PTR [ecx+0x14],0x0
   10ebf:	jne    0x10ece
   10ec1:	mov    eax,DWORD PTR [ecx+0x4]
   10ec4:	cmp    DWORD PTR [eax+0x4],ecx
   10ec7:	jne    0x10ece
   10ec9:	mov    eax,DWORD PTR [ecx+0x8]
   10ecc:	jmp    0x10eeb
   10ece:	mov    eax,DWORD PTR [ecx]
   10ed0:	cmp    eax,DWORD PTR ds:0x77ab0
   10ed6:	je     0x10ee4
   10ed8:	push   eax
   10ed9:	call   0x10de8
   10ede:	jmp    0x10eeb
   10ee0:	mov    DWORD PTR [esi],eax
   10ee2:	mov    ecx,eax
   10ee4:	mov    eax,DWORD PTR [ecx+0x4]
   10ee7:	cmp    ecx,DWORD PTR [eax]
   10ee9:	je     0x10ee0
   10eeb:	mov    DWORD PTR [esi],eax
   10eed:	pop    esi
   10eee:	ret    
   10eef:	int3   
   10ef0:	int3   
   10ef1:	int3   
   10ef2:	int3   
   10ef3:	int3   
   10ef4:	mov    edi,edi
   10ef6:	push   esi
   10ef7:	mov    esi,ecx
   10ef9:	mov    ecx,DWORD PTR [esi]
   10efb:	mov    eax,DWORD PTR [ecx+0x8]
   10efe:	cmp    eax,DWORD PTR ds:0x77ab0
   10f04:	je     0x10f12
   10f06:	push   eax
   10f07:	call   0x10e0a
   10f0c:	jmp    0x10f21
   10f0e:	mov    DWORD PTR [esi],eax
   10f10:	mov    ecx,eax
   10f12:	mov    eax,DWORD PTR [ecx+0x4]
   10f15:	cmp    ecx,DWORD PTR [eax+0x8]
   10f18:	je     0x10f0e
   10f1a:	mov    ecx,DWORD PTR [esi]
   10f1c:	cmp    DWORD PTR [ecx+0x8],eax
   10f1f:	je     0x10f23
   10f21:	mov    DWORD PTR [esi],eax
   10f23:	pop    esi
   10f24:	ret    
   10f25:	int3   
   10f26:	int3   
   10f27:	int3   
   10f28:	int3   
   10f29:	int3   
   10f2a:	mov    edi,edi
   10f2c:	push   ebp
   10f2d:	mov    ebp,esp
   10f2f:	mov    edx,DWORD PTR [ebp+0x8]
   10f32:	mov    eax,DWORD PTR [edx+0x8]
   10f35:	push   esi
   10f36:	mov    esi,DWORD PTR [eax]
   10f38:	mov    DWORD PTR [edx+0x8],esi
   10f3b:	mov    esi,DWORD PTR [eax]
   10f3d:	cmp    esi,DWORD PTR ds:0x77abc
   10f43:	je     0x10f48
   10f45:	mov    DWORD PTR [esi+0x4],edx
   10f48:	mov    esi,DWORD PTR [edx+0x4]
   10f4b:	mov    DWORD PTR [eax+0x4],esi
   10f4e:	mov    ecx,DWORD PTR [ecx+0x4]
   10f51:	pop    esi
   10f52:	cmp    edx,DWORD PTR [ecx+0x4]
   10f55:	jne    0x10f5c
   10f57:	mov    DWORD PTR [ecx+0x4],eax
   10f5a:	jmp    0x10f6a
   10f5c:	mov    ecx,DWORD PTR [edx+0x4]
   10f5f:	cmp    edx,DWORD PTR [ecx]
   10f61:	jne    0x10f67
   10f63:	mov    DWORD PTR [ecx],eax
   10f65:	jmp    0x10f6a
   10f67:	mov    DWORD PTR [ecx+0x8],eax
   10f6a:	mov    DWORD PTR [eax],edx
   10f6c:	mov    DWORD PTR [edx+0x4],eax
   10f6f:	pop    ebp
   10f70:	ret    0x4
   10f73:	int3   
   10f74:	int3   
   10f75:	int3   
   10f76:	int3   
   10f77:	int3   
   10f78:	mov    edi,edi
   10f7a:	push   ebp
   10f7b:	mov    ebp,esp
   10f7d:	mov    eax,DWORD PTR [ebp+0x8]
   10f80:	mov    edx,DWORD PTR ds:0x77abc
   10f86:	jmp    0x10f8a
   10f88:	mov    eax,ecx
   10f8a:	mov    ecx,DWORD PTR [eax+0x8]
   10f8d:	cmp    ecx,edx
   10f8f:	jne    0x10f88
   10f91:	pop    ebp
   10f92:	ret    0x4
   10f95:	int3   
   10f96:	int3   
   10f97:	int3   
   10f98:	int3   
   10f99:	int3   
   10f9a:	mov    edi,edi
   10f9c:	push   ebp
   10f9d:	mov    ebp,esp
   10f9f:	mov    edx,DWORD PTR [ebp+0x8]
   10fa2:	mov    eax,DWORD PTR [edx]
   10fa4:	push   esi
   10fa5:	mov    esi,DWORD PTR [eax+0x8]
   10fa8:	mov    DWORD PTR [edx],esi
   10faa:	mov    esi,DWORD PTR [eax+0x8]
   10fad:	cmp    esi,DWORD PTR ds:0x77abc
   10fb3:	je     0x10fb8
   10fb5:	mov    DWORD PTR [esi+0x4],edx
   10fb8:	mov    esi,DWORD PTR [edx+0x4]
   10fbb:	mov    DWORD PTR [eax+0x4],esi
   10fbe:	mov    ecx,DWORD PTR [ecx+0x4]
   10fc1:	pop    esi
   10fc2:	cmp    edx,DWORD PTR [ecx+0x4]
   10fc5:	jne    0x10fcc
   10fc7:	mov    DWORD PTR [ecx+0x4],eax
   10fca:	jmp    0x10fdb
   10fcc:	mov    ecx,DWORD PTR [edx+0x4]
   10fcf:	cmp    edx,DWORD PTR [ecx+0x8]
   10fd2:	jne    0x10fd9
   10fd4:	mov    DWORD PTR [ecx+0x8],eax
   10fd7:	jmp    0x10fdb
   10fd9:	mov    DWORD PTR [ecx],eax
   10fdb:	mov    DWORD PTR [eax+0x8],edx
   10fde:	mov    DWORD PTR [edx+0x4],eax
   10fe1:	pop    ebp
   10fe2:	ret    0x4
   10fe5:	int3   
   10fe6:	int3   
   10fe7:	int3   
   10fe8:	int3   
   10fe9:	int3   
   10fea:	mov    edi,edi
   10fec:	push   esi
   10fed:	mov    esi,ecx
   10fef:	mov    ecx,DWORD PTR [esi]
   10ff1:	cmp    DWORD PTR [ecx+0x58],0x0
   10ff5:	jne    0x11004
   10ff7:	mov    eax,DWORD PTR [ecx+0x4]
   10ffa:	cmp    DWORD PTR [eax+0x4],ecx
   10ffd:	jne    0x11004
   10fff:	mov    eax,DWORD PTR [ecx+0x8]
   11002:	jmp    0x11021
   11004:	mov    eax,DWORD PTR [ecx]
   11006:	cmp    eax,DWORD PTR ds:0x77abc
   1100c:	je     0x1101a
   1100e:	push   eax
   1100f:	call   0x10f78
   11014:	jmp    0x11021
   11016:	mov    DWORD PTR [esi],eax
   11018:	mov    ecx,eax
   1101a:	mov    eax,DWORD PTR [ecx+0x4]
   1101d:	cmp    ecx,DWORD PTR [eax]
   1101f:	je     0x11016
   11021:	mov    DWORD PTR [esi],eax
   11023:	pop    esi
   11024:	ret    
   11025:	int3   
   11026:	int3   
   11027:	int3   
   11028:	int3   
   11029:	int3   
   1102a:	mov    edi,edi
   1102c:	push   ebp
   1102d:	mov    ebp,esp
   1102f:	mov    eax,DWORD PTR [ebp+0x8]
   11032:	mov    edx,DWORD PTR ds:0x77ac0
   11038:	jmp    0x1103c
   1103a:	mov    eax,ecx
   1103c:	mov    ecx,DWORD PTR [eax+0x8]
   1103f:	cmp    ecx,edx
   11041:	jne    0x1103a
   11043:	pop    ebp
   11044:	ret    0x4
   11047:	int3   
   11048:	int3   
   11049:	int3   
   1104a:	int3   
   1104b:	int3   
   1104c:	mov    edi,edi
   1104e:	push   ebp
   1104f:	mov    ebp,esp
   11051:	mov    eax,DWORD PTR [ebp+0x8]
   11054:	mov    edx,DWORD PTR ds:0x77ac0
   1105a:	jmp    0x1105e
   1105c:	mov    eax,ecx
   1105e:	mov    ecx,DWORD PTR [eax]
   11060:	cmp    ecx,edx
   11062:	jne    0x1105c
   11064:	pop    ebp
   11065:	ret    0x4
   11068:	int3   
   11069:	int3   
   1106a:	int3   
   1106b:	int3   
   1106c:	int3   
   1106d:	int3   
   1106e:	mov    edi,edi
   11070:	push   esi
   11071:	mov    esi,ecx
   11073:	mov    ecx,DWORD PTR [esi]
   11075:	cmp    DWORD PTR [ecx+0x1c],0x0
   11079:	jne    0x11088
   1107b:	mov    eax,DWORD PTR [ecx+0x4]
   1107e:	cmp    DWORD PTR [eax+0x4],ecx
   11081:	jne    0x11088
   11083:	mov    eax,DWORD PTR [ecx+0x8]
   11086:	jmp    0x110a5
   11088:	mov    eax,DWORD PTR [ecx]
   1108a:	cmp    eax,DWORD PTR ds:0x77ac0
   11090:	je     0x1109e
   11092:	push   eax
   11093:	call   0x1102a
   11098:	jmp    0x110a5
   1109a:	mov    DWORD PTR [esi],eax
   1109c:	mov    ecx,eax
   1109e:	mov    eax,DWORD PTR [ecx+0x4]
   110a1:	cmp    ecx,DWORD PTR [eax]
   110a3:	je     0x1109a
   110a5:	mov    DWORD PTR [esi],eax
   110a7:	pop    esi
   110a8:	ret    
   110a9:	int3   
   110aa:	int3   
   110ab:	int3   
   110ac:	int3   
   110ad:	int3   
   110ae:	mov    edi,edi
   110b0:	push   ebp
   110b1:	mov    ebp,esp
   110b3:	mov    eax,DWORD PTR [ebp+0x8]
   110b6:	mov    edx,DWORD PTR ds:0x77ac4
   110bc:	jmp    0x110c0
   110be:	mov    eax,ecx
   110c0:	mov    ecx,DWORD PTR [eax+0x8]
   110c3:	cmp    ecx,edx
   110c5:	jne    0x110be
   110c7:	pop    ebp
   110c8:	ret    0x4
   110cb:	int3   
   110cc:	int3   
   110cd:	int3   
   110ce:	int3   
   110cf:	int3   
   110d0:	mov    edi,edi
   110d2:	push   ebp
   110d3:	mov    ebp,esp
   110d5:	mov    eax,DWORD PTR [ebp+0x8]
   110d8:	mov    edx,DWORD PTR ds:0x77ac4
   110de:	jmp    0x110e2
   110e0:	mov    eax,ecx
   110e2:	mov    ecx,DWORD PTR [eax]
   110e4:	cmp    ecx,edx
   110e6:	jne    0x110e0
   110e8:	pop    ebp
   110e9:	ret    0x4
   110ec:	int3   
   110ed:	int3   
   110ee:	int3   
   110ef:	int3   
   110f0:	int3   
   110f1:	int3   
   110f2:	mov    edi,edi
   110f4:	push   esi
   110f5:	mov    esi,ecx
   110f7:	mov    ecx,DWORD PTR [esi]
   110f9:	cmp    DWORD PTR [ecx+0x14],0x0
   110fd:	jne    0x1110c
   110ff:	mov    eax,DWORD PTR [ecx+0x4]
   11102:	cmp    DWORD PTR [eax+0x4],ecx
   11105:	jne    0x1110c
   11107:	mov    eax,DWORD PTR [ecx+0x8]
   1110a:	jmp    0x11129
   1110c:	mov    eax,DWORD PTR [ecx]
   1110e:	cmp    eax,DWORD PTR ds:0x77ac4
   11114:	je     0x11122
   11116:	push   eax
   11117:	call   0x110ae
   1111c:	jmp    0x11129
   1111e:	mov    DWORD PTR [esi],eax
   11120:	mov    ecx,eax
   11122:	mov    eax,DWORD PTR [ecx+0x4]
   11125:	cmp    ecx,DWORD PTR [eax]
   11127:	je     0x1111e
   11129:	mov    DWORD PTR [esi],eax
   1112b:	pop    esi
   1112c:	ret    
   1112d:	int3   
   1112e:	int3   
   1112f:	int3   
   11130:	int3   
   11131:	int3   
   11132:	mov    edi,edi
   11134:	push   esi
   11135:	mov    esi,ecx
   11137:	mov    ecx,DWORD PTR [esi]
   11139:	cmp    DWORD PTR [ecx+0x60],0x0
   1113d:	jne    0x1114c
   1113f:	mov    eax,DWORD PTR [ecx+0x4]
   11142:	cmp    DWORD PTR [eax+0x4],ecx
   11145:	jne    0x1114c
   11147:	mov    eax,DWORD PTR [ecx+0x8]
   1114a:	jmp    0x11169
   1114c:	mov    eax,DWORD PTR [ecx]
   1114e:	cmp    eax,DWORD PTR ds:0x77ab8
   11154:	je     0x11162
   11156:	push   eax
   11157:	call   0x10e70
   1115c:	jmp    0x11169
   1115e:	mov    DWORD PTR [esi],eax
   11160:	mov    ecx,eax
   11162:	mov    eax,DWORD PTR [ecx+0x4]
   11165:	cmp    ecx,DWORD PTR [eax]
   11167:	je     0x1115e
   11169:	mov    DWORD PTR [esi],eax
   1116b:	pop    esi
   1116c:	ret    
   1116d:	int3   
   1116e:	int3   
   1116f:	int3   
   11170:	int3   
   11171:	int3   
   11172:	mov    edi,edi
   11174:	push   esi
   11175:	mov    esi,ecx
   11177:	mov    ecx,DWORD PTR [esi]
   11179:	mov    eax,DWORD PTR [ecx+0x8]
   1117c:	cmp    eax,DWORD PTR ds:0x77ac0
   11182:	je     0x11190
   11184:	push   eax
   11185:	call   0x1104c
   1118a:	jmp    0x1119f
   1118c:	mov    DWORD PTR [esi],eax
   1118e:	mov    ecx,eax
   11190:	mov    eax,DWORD PTR [ecx+0x4]
   11193:	cmp    ecx,DWORD PTR [eax+0x8]
   11196:	je     0x1118c
   11198:	mov    ecx,DWORD PTR [esi]
   1119a:	cmp    DWORD PTR [ecx+0x8],eax
   1119d:	je     0x111a1
   1119f:	mov    DWORD PTR [esi],eax
   111a1:	pop    esi
   111a2:	ret    
   111a3:	int3   
   111a4:	int3   
   111a5:	int3   
   111a6:	int3   
   111a7:	int3   
   111a8:	mov    edi,edi
   111aa:	push   esi
   111ab:	mov    esi,ecx
   111ad:	mov    ecx,DWORD PTR [esi]
   111af:	mov    eax,DWORD PTR [ecx+0x8]
   111b2:	cmp    eax,DWORD PTR ds:0x77ac4
   111b8:	je     0x111c6
   111ba:	push   eax
   111bb:	call   0x110d0
   111c0:	jmp    0x111d5
   111c2:	mov    DWORD PTR [esi],eax
   111c4:	mov    ecx,eax
   111c6:	mov    eax,DWORD PTR [ecx+0x4]
   111c9:	cmp    ecx,DWORD PTR [eax+0x8]
   111cc:	je     0x111c2
   111ce:	mov    ecx,DWORD PTR [esi]
   111d0:	cmp    DWORD PTR [ecx+0x8],eax
   111d3:	je     0x111d7
   111d5:	mov    DWORD PTR [esi],eax
   111d7:	pop    esi
   111d8:	ret    
   111d9:	int3   
   111da:	int3   
   111db:	int3   
   111dc:	int3   
   111dd:	int3   
   111de:	mov    edi,edi
   111e0:	push   ebp
   111e1:	mov    ebp,esp
   111e3:	mov    eax,DWORD PTR [ebp+0x8]
   111e6:	mov    edx,DWORD PTR ds:0x77acc
   111ec:	jmp    0x111f0
   111ee:	mov    eax,ecx
   111f0:	mov    ecx,DWORD PTR [eax+0x8]
   111f3:	cmp    ecx,edx
   111f5:	jne    0x111ee
   111f7:	pop    ebp
   111f8:	ret    0x4
   111fb:	int3   
   111fc:	int3   
   111fd:	int3   
   111fe:	int3   
   111ff:	int3   
   11200:	mov    edi,edi
   11202:	push   ebp
   11203:	mov    ebp,esp
   11205:	push   ecx
   11206:	push   ecx
   11207:	mov    eax,DWORD PTR [ebp+0x8]
   1120a:	mov    DWORD PTR [ebp-0x4],eax
   1120d:	lea    ecx,[eax+0x2]
   11210:	mov    dx,WORD PTR [eax]
   11213:	inc    eax
   11214:	inc    eax
   11215:	test   dx,dx
   11218:	jne    0x11210
   1121a:	sub    eax,ecx
   1121c:	sar    eax,1
   1121e:	add    eax,eax
   11220:	mov    WORD PTR [ebp-0x8],ax
   11224:	mov    WORD PTR [ebp-0x6],ax
   11228:	lea    eax,[ebp-0x8]
   1122b:	push   eax
   1122c:	call   DWORD PTR ds:0x1f814
   11232:	leave  
   11233:	ret    0x4
   11236:	int3   
   11237:	int3   
   11238:	int3   
   11239:	int3   
   1123a:	int3   
   1123b:	int3   
   1123c:	mov    edi,edi
   1123e:	push   ebp
   1123f:	mov    ebp,esp
   11241:	mov    eax,DWORD PTR [ebp+0x8]
   11244:	test   eax,eax
   11246:	je     0x1124f
   11248:	mov    ecx,DWORD PTR [ebp+0xc]
   1124b:	mov    ecx,DWORD PTR [ecx]
   1124d:	mov    DWORD PTR [eax],ecx
   1124f:	pop    ebp
   11250:	ret    0x8
   11253:	int3   
   11254:	int3   
   11255:	int3   
   11256:	int3   
   11257:	int3   
   11258:	mov    edi,edi
   1125a:	push   ebp
   1125b:	mov    ebp,esp
   1125d:	mov    eax,DWORD PTR [ebp+0x8]
   11260:	test   eax,eax
   11262:	je     0x11271
   11264:	mov    ecx,DWORD PTR [ebp+0xc]
   11267:	mov    edx,DWORD PTR [ecx]
   11269:	mov    DWORD PTR [eax],edx
   1126b:	mov    ecx,DWORD PTR [ecx+0x4]
   1126e:	mov    DWORD PTR [eax+0x4],ecx
   11271:	pop    ebp
   11272:	ret    0x8
   11275:	int3   
   11276:	int3   
   11277:	int3   
   11278:	int3   
   11279:	int3   
   1127a:	test   BYTE PTR ds:0x77ad4,0x1
   11281:	jne    0x11299
   11283:	or     DWORD PTR ds:0x77ad4,0x1
   1128a:	push   0x1e61c
   1128f:	call   0x11200
   11294:	mov    ds:0x77ad0,eax
   11299:	mov    eax,ds:0x77ad0
   1129e:	ret    
   1129f:	int3   
   112a0:	int3   
   112a1:	int3   
   112a2:	int3   
   112a3:	int3   
   112a4:	test   BYTE PTR ds:0x77adc,0x1
   112ab:	jne    0x112c3
   112ad:	or     DWORD PTR ds:0x77adc,0x1
   112b4:	push   0x1e638
   112b9:	call   0x11200
   112be:	mov    ds:0x77ad8,eax
   112c3:	mov    eax,ds:0x77ad8
   112c8:	ret    
   112c9:	int3   
   112ca:	int3   
   112cb:	int3   
   112cc:	int3   
   112cd:	int3   
   112ce:	test   BYTE PTR ds:0x77ae4,0x1
   112d5:	jne    0x112ed
   112d7:	or     DWORD PTR ds:0x77ae4,0x1
   112de:	push   0x1e668
   112e3:	call   0x11200
   112e8:	mov    ds:0x77ae0,eax
   112ed:	mov    eax,ds:0x77ae0
   112f2:	ret    
   112f3:	int3   
   112f4:	int3   
   112f5:	int3   
   112f6:	int3   
   112f7:	int3   
   112f8:	test   BYTE PTR ds:0x77aec,0x1
   112ff:	jne    0x11317
   11301:	or     DWORD PTR ds:0x77aec,0x1
   11308:	push   0x1e69e
   1130d:	call   0x11200
   11312:	mov    ds:0x77ae8,eax
   11317:	mov    eax,ds:0x77ae8
   1131c:	ret    
   1131d:	int3   
   1131e:	int3   
   1131f:	int3   
   11320:	int3   
   11321:	int3   
   11322:	test   BYTE PTR ds:0x77af4,0x1
   11329:	jne    0x11341
   1132b:	or     DWORD PTR ds:0x77af4,0x1
   11332:	push   0x1e6d6
   11337:	call   0x11200
   1133c:	mov    ds:0x77af0,eax
   11341:	mov    eax,ds:0x77af0
   11346:	ret    
   11347:	int3   
   11348:	int3   
   11349:	int3   
   1134a:	int3   
   1134b:	int3   
   1134c:	test   BYTE PTR ds:0x77afc,0x1
   11353:	jne    0x1136b
   11355:	or     DWORD PTR ds:0x77afc,0x1
   1135c:	push   0x1e6f8
   11361:	call   0x11200
   11366:	mov    ds:0x77af8,eax
   1136b:	mov    eax,ds:0x77af8
   11370:	ret    
   11371:	int3   
   11372:	int3   
   11373:	int3   
   11374:	int3   
   11375:	int3   
   11376:	test   BYTE PTR ds:0x77b04,0x1
   1137d:	jne    0x11395
   1137f:	or     DWORD PTR ds:0x77b04,0x1
   11386:	push   0x1e738
   1138b:	call   0x11200
   11390:	mov    ds:0x77b00,eax
   11395:	mov    eax,ds:0x77b00
   1139a:	ret    
   1139b:	int3   
   1139c:	int3   
   1139d:	int3   
   1139e:	int3   
   1139f:	int3   
   113a0:	test   BYTE PTR ds:0x77b0c,0x1
   113a7:	jne    0x113bf
   113a9:	or     DWORD PTR ds:0x77b0c,0x1
   113b0:	push   0x1e74e
   113b5:	call   0x11200
   113ba:	mov    ds:0x77b08,eax
   113bf:	mov    eax,ds:0x77b08
   113c4:	ret    
   113c5:	int3   
   113c6:	int3   
   113c7:	int3   
   113c8:	int3   
   113c9:	int3   
   113ca:	test   BYTE PTR ds:0x77b14,0x1
   113d1:	jne    0x113e9
   113d3:	or     DWORD PTR ds:0x77b14,0x1
   113da:	push   0x1e782
   113df:	call   0x11200
   113e4:	mov    ds:0x77b10,eax
   113e9:	mov    eax,ds:0x77b10
   113ee:	ret    
   113ef:	int3   
   113f0:	int3   
   113f1:	int3   
   113f2:	int3   
   113f3:	int3   
   113f4:	test   BYTE PTR ds:0x77b1c,0x1
   113fb:	jne    0x11413
   113fd:	or     DWORD PTR ds:0x77b1c,0x1
   11404:	push   0x1e7b4
   11409:	call   0x11200
   1140e:	mov    ds:0x77b18,eax
   11413:	mov    eax,ds:0x77b18
   11418:	ret    
   11419:	int3   
   1141a:	int3   
   1141b:	int3   
   1141c:	int3   
   1141d:	int3   
   1141e:	test   BYTE PTR ds:0x77b24,0x1
   11425:	jne    0x1143d
   11427:	or     DWORD PTR ds:0x77b24,0x1
   1142e:	push   0x1e7c8
   11433:	call   0x11200
   11438:	mov    ds:0x77b20,eax
   1143d:	mov    eax,ds:0x77b20
   11442:	ret    
   11443:	int3   
   11444:	int3   
   11445:	int3   
   11446:	int3   
   11447:	int3   
   11448:	test   BYTE PTR ds:0x77b2c,0x1
   1144f:	jne    0x11467
   11451:	or     DWORD PTR ds:0x77b2c,0x1
   11458:	push   0x1e7e0
   1145d:	call   0x11200
   11462:	mov    ds:0x77b28,eax
   11467:	mov    eax,ds:0x77b28
   1146c:	ret    
   1146d:	int3   
   1146e:	int3   
   1146f:	int3   
   11470:	int3   
   11471:	int3   
   11472:	test   BYTE PTR ds:0x77b34,0x1
   11479:	jne    0x11491
   1147b:	or     DWORD PTR ds:0x77b34,0x1
   11482:	push   0x1e7fc
   11487:	call   0x11200
   1148c:	mov    ds:0x77b30,eax
   11491:	mov    eax,ds:0x77b30
   11496:	ret    
   11497:	int3   
   11498:	int3   
   11499:	int3   
   1149a:	int3   
   1149b:	int3   
   1149c:	test   BYTE PTR ds:0x77b3c,0x1
   114a3:	jne    0x114bb
   114a5:	or     DWORD PTR ds:0x77b3c,0x1
   114ac:	push   0x1e836
   114b1:	call   0x11200
   114b6:	mov    ds:0x77b38,eax
   114bb:	mov    eax,ds:0x77b38
   114c0:	ret    
   114c1:	int3   
   114c2:	int3   
   114c3:	int3   
   114c4:	int3   
   114c5:	int3   
   114c6:	test   BYTE PTR ds:0x77b44,0x1
   114cd:	jne    0x114e5
   114cf:	or     DWORD PTR ds:0x77b44,0x1
   114d6:	push   0x1e850
   114db:	call   0x11200
   114e0:	mov    ds:0x77b40,eax
   114e5:	mov    eax,ds:0x77b40
   114ea:	ret    
   114eb:	int3   
   114ec:	int3   
   114ed:	int3   
   114ee:	int3   
   114ef:	int3   
   114f0:	test   BYTE PTR ds:0x77b4c,0x1
   114f7:	jne    0x1150f
   114f9:	or     DWORD PTR ds:0x77b4c,0x1
   11500:	push   0x1e872
   11505:	call   0x11200
   1150a:	mov    ds:0x77b48,eax
   1150f:	mov    eax,ds:0x77b48
   11514:	ret    
   11515:	int3   
   11516:	int3   
   11517:	int3   
   11518:	int3   
   11519:	int3   
   1151a:	test   BYTE PTR ds:0x77b54,0x1
   11521:	jne    0x11539
   11523:	or     DWORD PTR ds:0x77b54,0x1
   1152a:	push   0x1e8ac
   1152f:	call   0x11200
   11534:	mov    ds:0x77b50,eax
   11539:	mov    eax,ds:0x77b50
   1153e:	ret    
   1153f:	int3   
   11540:	int3   
   11541:	int3   
   11542:	int3   
   11543:	int3   
   11544:	test   BYTE PTR ds:0x77b5c,0x1
   1154b:	jne    0x11563
   1154d:	or     DWORD PTR ds:0x77b5c,0x1
   11554:	push   0x1e8d2
   11559:	call   0x11200
   1155e:	mov    ds:0x77b58,eax
   11563:	mov    eax,ds:0x77b58
   11568:	ret    
   11569:	int3   
   1156a:	int3   
   1156b:	int3   
   1156c:	int3   
   1156d:	int3   
   1156e:	test   BYTE PTR ds:0x77b64,0x1
   11575:	jne    0x1158d
   11577:	or     DWORD PTR ds:0x77b64,0x1
   1157e:	push   0x1e902
   11583:	call   0x11200
   11588:	mov    ds:0x77b60,eax
   1158d:	mov    eax,ds:0x77b60
   11592:	ret    
   11593:	int3   
   11594:	int3   
   11595:	int3   
   11596:	int3   
   11597:	int3   
   11598:	test   BYTE PTR ds:0x77b6c,0x1
   1159f:	jne    0x115b7
   115a1:	or     DWORD PTR ds:0x77b6c,0x1
   115a8:	push   0x1e934
   115ad:	call   0x11200
   115b2:	mov    ds:0x77b68,eax
   115b7:	mov    eax,ds:0x77b68
   115bc:	ret    
   115bd:	int3   
   115be:	int3   
   115bf:	int3   
   115c0:	int3   
   115c1:	int3   
   115c2:	test   BYTE PTR ds:0x77b74,0x1
   115c9:	jne    0x115e1
   115cb:	or     DWORD PTR ds:0x77b74,0x1
   115d2:	push   0x1e944
   115d7:	call   0x11200
   115dc:	mov    ds:0x77b70,eax
   115e1:	mov    eax,ds:0x77b70
   115e6:	ret    
   115e7:	int3   
   115e8:	int3   
   115e9:	int3   
   115ea:	int3   
   115eb:	int3   
   115ec:	test   BYTE PTR ds:0x77b7c,0x1
   115f3:	jne    0x1160b
   115f5:	or     DWORD PTR ds:0x77b7c,0x1
   115fc:	push   0x1e96e
   11601:	call   0x11200
   11606:	mov    ds:0x77b78,eax
   1160b:	mov    eax,ds:0x77b78
   11610:	ret    
   11611:	int3   
   11612:	int3   
   11613:	int3   
   11614:	int3   
   11615:	int3   
   11616:	test   BYTE PTR ds:0x77b84,0x1
   1161d:	jne    0x11635
   1161f:	or     DWORD PTR ds:0x77b84,0x1
   11626:	push   0x1e98a
   1162b:	call   0x11200
   11630:	mov    ds:0x77b80,eax
   11635:	mov    eax,ds:0x77b80
   1163a:	ret    
   1163b:	int3   
   1163c:	int3   
   1163d:	int3   
   1163e:	int3   
   1163f:	int3   
   11640:	test   BYTE PTR ds:0x77b8c,0x1
   11647:	jne    0x1165f
   11649:	or     DWORD PTR ds:0x77b8c,0x1
   11650:	push   0x1e9c6
   11655:	call   0x11200
   1165a:	mov    ds:0x77b88,eax
   1165f:	mov    eax,ds:0x77b88
   11664:	ret    
   11665:	int3   
   11666:	int3   
   11667:	int3   
   11668:	int3   
   11669:	int3   
   1166a:	test   BYTE PTR ds:0x77b94,0x1
   11671:	jne    0x11689
   11673:	or     DWORD PTR ds:0x77b94,0x1
   1167a:	push   0x1e9ea
   1167f:	call   0x11200
   11684:	mov    ds:0x77b90,eax
   11689:	mov    eax,ds:0x77b90
   1168e:	ret    
   1168f:	int3   
   11690:	int3   
   11691:	int3   
   11692:	int3   
   11693:	int3   
   11694:	test   BYTE PTR ds:0x77b9c,0x1
   1169b:	jne    0x116b3
   1169d:	or     DWORD PTR ds:0x77b9c,0x1
   116a4:	push   0x1ea14
   116a9:	call   0x11200
   116ae:	mov    ds:0x77b98,eax
   116b3:	mov    eax,ds:0x77b98
   116b8:	ret    
   116b9:	int3   
   116ba:	int3   
   116bb:	int3   
   116bc:	int3   
   116bd:	int3   
   116be:	test   BYTE PTR ds:0x77ba4,0x1
   116c5:	jne    0x116dd
   116c7:	or     DWORD PTR ds:0x77ba4,0x1
   116ce:	push   0x1ea40
   116d3:	call   0x11200
   116d8:	mov    ds:0x77ba0,eax
   116dd:	mov    eax,ds:0x77ba0
   116e2:	ret    
   116e3:	int3   
   116e4:	int3   
   116e5:	int3   
   116e6:	int3   
   116e7:	int3   
   116e8:	test   BYTE PTR ds:0x77bac,0x1
   116ef:	jne    0x11707
   116f1:	or     DWORD PTR ds:0x77bac,0x1
   116f8:	push   0x1ea54
   116fd:	call   0x11200
   11702:	mov    ds:0x77ba8,eax
   11707:	mov    eax,ds:0x77ba8
   1170c:	ret    
   1170d:	int3   
   1170e:	int3   
   1170f:	int3   
   11710:	int3   
   11711:	int3   
   11712:	test   BYTE PTR ds:0x77bb4,0x1
   11719:	jne    0x11731
   1171b:	or     DWORD PTR ds:0x77bb4,0x1
   11722:	push   0x1ea84
   11727:	call   0x11200
   1172c:	mov    ds:0x77bb0,eax
   11731:	mov    eax,ds:0x77bb0
   11736:	ret    
   11737:	int3   
   11738:	int3   
   11739:	int3   
   1173a:	int3   
   1173b:	int3   
   1173c:	test   BYTE PTR ds:0x77bbc,0x1
   11743:	jne    0x1175b
   11745:	or     DWORD PTR ds:0x77bbc,0x1
   1174c:	push   0x1eaa2
   11751:	call   0x11200
   11756:	mov    ds:0x77bb8,eax
   1175b:	mov    eax,ds:0x77bb8
   11760:	ret    
   11761:	int3   
   11762:	int3   
   11763:	int3   
   11764:	int3   
   11765:	int3   
   11766:	test   BYTE PTR ds:0x77bc4,0x1
   1176d:	jne    0x11785
   1176f:	or     DWORD PTR ds:0x77bc4,0x1
   11776:	push   0x1eabc
   1177b:	call   0x11200
   11780:	mov    ds:0x77bc0,eax
   11785:	mov    eax,ds:0x77bc0
   1178a:	ret    
   1178b:	int3   
   1178c:	int3   
   1178d:	int3   
   1178e:	int3   
   1178f:	int3   
   11790:	test   BYTE PTR ds:0x77bcc,0x1
   11797:	jne    0x117af
   11799:	or     DWORD PTR ds:0x77bcc,0x1
   117a0:	push   0x1ead4
   117a5:	call   0x11200
   117aa:	mov    ds:0x77bc8,eax
   117af:	mov    eax,ds:0x77bc8
   117b4:	ret    
   117b5:	int3   
   117b6:	int3   
   117b7:	int3   
   117b8:	int3   
   117b9:	int3   
   117ba:	test   BYTE PTR ds:0x77bd4,0x1
   117c1:	jne    0x117d9
   117c3:	or     DWORD PTR ds:0x77bd4,0x1
   117ca:	push   0x1eaf2
   117cf:	call   0x11200
   117d4:	mov    ds:0x77bd0,eax
   117d9:	mov    eax,ds:0x77bd0
   117de:	ret    
   117df:	int3   
   117e0:	int3   
   117e1:	int3   
   117e2:	int3   
   117e3:	int3   
   117e4:	test   BYTE PTR ds:0x77bdc,0x1
   117eb:	jne    0x11803
   117ed:	or     DWORD PTR ds:0x77bdc,0x1
   117f4:	push   0x1eb12
   117f9:	call   0x11200
   117fe:	mov    ds:0x77bd8,eax
   11803:	mov    eax,ds:0x77bd8
   11808:	ret    
   11809:	int3   
   1180a:	int3   
   1180b:	int3   
   1180c:	int3   
   1180d:	int3   
   1180e:	test   BYTE PTR ds:0x77be4,0x1
   11815:	jne    0x1182d
   11817:	or     DWORD PTR ds:0x77be4,0x1
   1181e:	push   0x1eb32
   11823:	call   0x11200
   11828:	mov    ds:0x77be0,eax
   1182d:	mov    eax,ds:0x77be0
   11832:	ret    
   11833:	int3   
   11834:	int3   
   11835:	int3   
   11836:	int3   
   11837:	int3   
   11838:	test   BYTE PTR ds:0x77bec,0x1
   1183f:	jne    0x11857
   11841:	or     DWORD PTR ds:0x77bec,0x1
   11848:	push   0x1eb52
   1184d:	call   0x11200
   11852:	mov    ds:0x77be8,eax
   11857:	mov    eax,ds:0x77be8
   1185c:	ret    
   1185d:	int3   
   1185e:	int3   
   1185f:	int3   
   11860:	int3   
   11861:	int3   
   11862:	test   BYTE PTR ds:0x77bf4,0x1
   11869:	jne    0x11881
   1186b:	or     DWORD PTR ds:0x77bf4,0x1
   11872:	push   0x1eb68
   11877:	call   0x11200
   1187c:	mov    ds:0x77bf0,eax
   11881:	mov    eax,ds:0x77bf0
   11886:	ret    
   11887:	int3   
   11888:	int3   
   11889:	int3   
   1188a:	int3   
   1188b:	int3   
   1188c:	test   BYTE PTR ds:0x77bfc,0x1
   11893:	jne    0x118ab
   11895:	or     DWORD PTR ds:0x77bfc,0x1
   1189c:	push   0x1eb92
   118a1:	call   0x11200
   118a6:	mov    ds:0x77bf8,eax
   118ab:	mov    eax,ds:0x77bf8
   118b0:	ret    
   118b1:	int3   
   118b2:	int3   
   118b3:	int3   
   118b4:	int3   
   118b5:	int3   
   118b6:	test   BYTE PTR ds:0x77c04,0x1
   118bd:	jne    0x118d5
   118bf:	or     DWORD PTR ds:0x77c04,0x1
   118c6:	push   0x1ebaa
   118cb:	call   0x11200
   118d0:	mov    ds:0x77c00,eax
   118d5:	mov    eax,ds:0x77c00
   118da:	ret    
   118db:	int3   
   118dc:	int3   
   118dd:	int3   
   118de:	int3   
   118df:	int3   
   118e0:	test   BYTE PTR ds:0x77c0c,0x1
   118e7:	jne    0x118ff
   118e9:	or     DWORD PTR ds:0x77c0c,0x1
   118f0:	push   0x1ebd8
   118f5:	call   0x11200
   118fa:	mov    ds:0x77c08,eax
   118ff:	mov    eax,ds:0x77c08
   11904:	ret    
   11905:	int3   
   11906:	int3   
   11907:	int3   
   11908:	int3   
   11909:	int3   
   1190a:	test   BYTE PTR ds:0x77c14,0x1
   11911:	jne    0x11929
   11913:	or     DWORD PTR ds:0x77c14,0x1
   1191a:	push   0x1ec02
   1191f:	call   0x11200
   11924:	mov    ds:0x77c10,eax
   11929:	mov    eax,ds:0x77c10
   1192e:	ret    
   1192f:	int3   
   11930:	int3   
   11931:	int3   
   11932:	int3   
   11933:	int3   
   11934:	test   BYTE PTR ds:0x77c1c,0x1
   1193b:	jne    0x11953
   1193d:	or     DWORD PTR ds:0x77c1c,0x1
   11944:	push   0x1ec20
   11949:	call   0x11200
   1194e:	mov    ds:0x77c18,eax
   11953:	mov    eax,ds:0x77c18
   11958:	ret    
   11959:	int3   
   1195a:	int3   
   1195b:	int3   
   1195c:	int3   
   1195d:	int3   
   1195e:	test   BYTE PTR ds:0x77c24,0x1
   11965:	jne    0x1197d
   11967:	or     DWORD PTR ds:0x77c24,0x1
   1196e:	push   0x1ec4e
   11973:	call   0x11200
   11978:	mov    ds:0x77c20,eax
   1197d:	mov    eax,ds:0x77c20
   11982:	ret    
   11983:	int3   
   11984:	int3   
   11985:	int3   
   11986:	int3   
   11987:	int3   
   11988:	test   BYTE PTR ds:0x77c2c,0x1
   1198f:	jne    0x119a7
   11991:	or     DWORD PTR ds:0x77c2c,0x1
   11998:	push   0x1ec74
   1199d:	call   0x11200
   119a2:	mov    ds:0x77c28,eax
   119a7:	mov    eax,ds:0x77c28
   119ac:	ret    
   119ad:	int3   
   119ae:	int3   
   119af:	int3   
   119b0:	int3   
   119b1:	int3   
   119b2:	test   BYTE PTR ds:0x77c34,0x1
   119b9:	jne    0x119d1
   119bb:	or     DWORD PTR ds:0x77c34,0x1
   119c2:	push   0x1ec98
   119c7:	call   0x11200
   119cc:	mov    ds:0x77c30,eax
   119d1:	mov    eax,ds:0x77c30
   119d6:	ret    
   119d7:	int3   
   119d8:	int3   
   119d9:	int3   
   119da:	int3   
   119db:	int3   
   119dc:	test   BYTE PTR ds:0x77c3c,0x1
   119e3:	jne    0x119fb
   119e5:	or     DWORD PTR ds:0x77c3c,0x1
   119ec:	push   0x1ecbe
   119f1:	call   0x11200
   119f6:	mov    ds:0x77c38,eax
   119fb:	mov    eax,ds:0x77c38
   11a00:	ret    
   11a01:	int3   
   11a02:	int3   
   11a03:	int3   
   11a04:	int3   
   11a05:	int3   
   11a06:	test   BYTE PTR ds:0x77c44,0x1
   11a0d:	jne    0x11a25
   11a0f:	or     DWORD PTR ds:0x77c44,0x1
   11a16:	push   0x1ecde
   11a1b:	call   0x11200
   11a20:	mov    ds:0x77c40,eax
   11a25:	mov    eax,ds:0x77c40
   11a2a:	ret    
   11a2b:	int3   
   11a2c:	int3   
   11a2d:	int3   
   11a2e:	int3   
   11a2f:	int3   
   11a30:	test   BYTE PTR ds:0x77c4c,0x1
   11a37:	jne    0x11a4f
   11a39:	or     DWORD PTR ds:0x77c4c,0x1
   11a40:	push   0x1ed08
   11a45:	call   0x11200
   11a4a:	mov    ds:0x77c48,eax
   11a4f:	mov    eax,ds:0x77c48
   11a54:	ret    
   11a55:	int3   
   11a56:	int3   
   11a57:	int3   
   11a58:	int3   
   11a59:	int3   
   11a5a:	test   BYTE PTR ds:0x77c54,0x1
   11a61:	jne    0x11a79
   11a63:	or     DWORD PTR ds:0x77c54,0x1
   11a6a:	push   0x1ed2c
   11a6f:	call   0x11200
   11a74:	mov    ds:0x77c50,eax
   11a79:	mov    eax,ds:0x77c50
   11a7e:	ret    
   11a7f:	int3   
   11a80:	int3   
   11a81:	int3   
   11a82:	int3   
   11a83:	int3   
   11a84:	test   BYTE PTR ds:0x77c5c,0x1
   11a8b:	jne    0x11aa3
   11a8d:	or     DWORD PTR ds:0x77c5c,0x1
   11a94:	push   0x1ed58
   11a99:	call   0x11200
   11a9e:	mov    ds:0x77c58,eax
   11aa3:	mov    eax,ds:0x77c58
   11aa8:	ret    
   11aa9:	int3   
   11aaa:	int3   
   11aab:	int3   
   11aac:	int3   
   11aad:	int3   
   11aae:	call   0x1127a
   11ab3:	test   eax,eax
   11ab5:	jne    0x11aba
   11ab7:	xor    eax,eax
   11ab9:	ret    
   11aba:	call   0x112a4
   11abf:	test   eax,eax
   11ac1:	je     0x11ab7
   11ac3:	call   0x112ce
   11ac8:	test   eax,eax
   11aca:	je     0x11ab7
   11acc:	call   0x112f8
   11ad1:	test   eax,eax
   11ad3:	je     0x11ab7
   11ad5:	call   0x11322
   11ada:	test   eax,eax
   11adc:	je     0x11ab7
   11ade:	call   0x1134c
   11ae3:	test   eax,eax
   11ae5:	je     0x11ab7
   11ae7:	call   0x11376
   11aec:	test   eax,eax
   11aee:	je     0x11ab7
   11af0:	call   0x113a0
   11af5:	test   eax,eax
   11af7:	je     0x11ab7
   11af9:	call   0x113ca
   11afe:	test   eax,eax
   11b00:	je     0x11ab7
   11b02:	call   0x113f4
   11b07:	test   eax,eax
   11b09:	je     0x11ab7
   11b0b:	call   0x1141e
   11b10:	test   eax,eax
   11b12:	je     0x11ab7
   11b14:	call   0x11448
   11b19:	test   eax,eax
   11b1b:	je     0x11ab7
   11b1d:	call   0x11472
   11b22:	test   eax,eax
   11b24:	je     0x11ab7
   11b26:	call   0x1149c
   11b2b:	test   eax,eax
   11b2d:	je     0x11ab7
   11b2f:	call   0x114c6
   11b34:	test   eax,eax
   11b36:	je     0x11ab7
   11b3c:	call   0x114f0
   11b41:	test   eax,eax
   11b43:	je     0x11ab7
   11b49:	call   0x1151a
   11b4e:	test   eax,eax
   11b50:	je     0x11ab7
   11b56:	call   0x11544
   11b5b:	test   eax,eax
   11b5d:	je     0x11ab7
   11b63:	call   0x1156e
   11b68:	test   eax,eax
   11b6a:	je     0x11ab7
   11b70:	call   0x11598
   11b75:	test   eax,eax
   11b77:	je     0x11ab7
   11b7d:	call   0x115c2
   11b82:	test   eax,eax
   11b84:	je     0x11ab7
   11b8a:	call   0x115ec
   11b8f:	test   eax,eax
   11b91:	je     0x11ab7
   11b97:	call   0x11616
   11b9c:	test   eax,eax
   11b9e:	je     0x11ab7
   11ba4:	call   0x11640
   11ba9:	test   eax,eax
   11bab:	je     0x11ab7
   11bb1:	call   0x1166a
   11bb6:	test   eax,eax
   11bb8:	je     0x11ab7
   11bbe:	call   0x11694
   11bc3:	test   eax,eax
   11bc5:	je     0x11ab7
   11bcb:	call   0x116be
   11bd0:	test   eax,eax
   11bd2:	je     0x11ab7
   11bd8:	call   0x116e8
   11bdd:	test   eax,eax
   11bdf:	je     0x11ab7
   11be5:	call   0x11712
   11bea:	test   eax,eax
   11bec:	je     0x11ab7
   11bf2:	call   0x1173c
   11bf7:	test   eax,eax
   11bf9:	je     0x11ab7
   11bff:	call   0x11766
   11c04:	test   eax,eax
   11c06:	je     0x11ab7
   11c0c:	call   0x11790
   11c11:	test   eax,eax
   11c13:	je     0x11ab7
   11c19:	call   0x117ba
   11c1e:	test   eax,eax
   11c20:	je     0x11ab7
   11c26:	call   0x117e4
   11c2b:	test   eax,eax
   11c2d:	je     0x11ab7
   11c33:	call   0x1180e
   11c38:	test   eax,eax
   11c3a:	je     0x11ab7
   11c40:	call   0x11838
   11c45:	test   eax,eax
   11c47:	je     0x11ab7
   11c4d:	call   0x11862
   11c52:	test   eax,eax
   11c54:	je     0x11ab7
   11c5a:	call   0x1188c
   11c5f:	test   eax,eax
   11c61:	je     0x11ab7
   11c67:	call   0x118b6
   11c6c:	test   eax,eax
   11c6e:	je     0x11ab7
   11c74:	call   0x118e0
   11c79:	test   eax,eax
   11c7b:	je     0x11ab7
   11c81:	call   0x1190a
   11c86:	test   eax,eax
   11c88:	je     0x11ab7
   11c8e:	call   0x11934
   11c93:	test   eax,eax
   11c95:	je     0x11ab7
   11c9b:	call   0x1195e
   11ca0:	test   eax,eax
   11ca2:	je     0x11ab7
   11ca8:	call   0x11988
   11cad:	test   eax,eax
   11caf:	je     0x11ab7
   11cb5:	call   0x119b2
   11cba:	test   eax,eax
   11cbc:	je     0x11ab7
   11cc2:	call   0x119dc
   11cc7:	test   eax,eax
   11cc9:	je     0x11ab7
   11ccf:	call   0x11a06
   11cd4:	test   eax,eax
   11cd6:	je     0x11ab7
   11cdc:	call   0x11a30
   11ce1:	test   eax,eax
   11ce3:	je     0x11ab7
   11ce9:	call   0x11a5a
   11cee:	test   eax,eax
   11cf0:	je     0x11ab7
   11cf6:	call   0x11a84
   11cfb:	neg    eax
   11cfd:	sbb    eax,eax
   11cff:	neg    eax
   11d01:	ret    
   11d02:	int3   
   11d03:	int3   
   11d04:	int3   
   11d05:	int3   
   11d06:	int3   
   11d07:	int3   
   11d08:	mov    edi,edi
   11d0a:	push   ebp
   11d0b:	mov    ebp,esp
   11d0d:	push   esi
   11d0e:	push   0x20
   11d10:	push   0x61737973
   11d15:	push   DWORD PTR [ebp+0x8]
   11d18:	push   0x1
   11d1a:	call   0x11616
   11d1f:	call   eax
   11d21:	mov    esi,eax
   11d23:	test   esi,esi
   11d25:	jne    0x11d33
   11d27:	push   0xc000009a
   11d2c:	call   0x115ec
   11d31:	call   eax
   11d33:	mov    eax,esi
   11d35:	pop    esi
   11d36:	pop    ebp
   11d37:	ret    
   11d38:	int3   
   11d39:	int3   
   11d3a:	int3   
   11d3b:	int3   
   11d3c:	int3   
   11d3d:	int3   
   11d3e:	mov    edi,edi
   11d40:	push   ebp
   11d41:	mov    ebp,esp
   11d43:	cmp    DWORD PTR [ebp+0x8],0x0
   11d47:	je     0x11d55
   11d49:	push   0x0
   11d4b:	push   DWORD PTR [ebp+0x8]
   11d4e:	call   0x11640
   11d53:	call   eax
   11d55:	pop    ebp
   11d56:	ret    
   11d57:	int3   
   11d58:	int3   
   11d59:	int3   
   11d5a:	int3   
   11d5b:	int3   
   11d5c:	mov    edi,edi
   11d5e:	push   ebp
   11d5f:	mov    ebp,esp
   11d61:	mov    eax,ecx
   11d63:	mov    ecx,DWORD PTR [ebp+0x8]
   11d66:	mov    edx,DWORD PTR [ecx]
   11d68:	test   edx,edx
   11d6a:	je     0x11d73
   11d6c:	mov    DWORD PTR [eax],edx
   11d6e:	inc    DWORD PTR [edx+0x4]
   11d71:	jmp    0x11d76
   11d73:	and    DWORD PTR [eax],0x0
   11d76:	pop    ebp
   11d77:	ret    0x4
   11d7a:	int3   
   11d7b:	int3   
   11d7c:	int3   
   11d7d:	int3   
   11d7e:	int3   
   11d7f:	int3   
   11d80:	mov    edi,edi
   11d82:	push   esi
   11d83:	mov    esi,ecx
   11d85:	dec    DWORD PTR [esi+0x4]
   11d88:	jne    0x11d99
   11d8a:	push   DWORD PTR [esi]
   11d8c:	call   0x11d3e
   11d91:	push   esi
   11d92:	call   0x11d3e
   11d97:	pop    ecx
   11d98:	pop    ecx
   11d99:	pop    esi
   11d9a:	ret    
   11d9b:	int3   
   11d9c:	int3   
   11d9d:	int3   
   11d9e:	int3   
   11d9f:	int3   
   11da0:	mov    edi,edi
   11da2:	push   ebp
   11da3:	mov    ebp,esp
   11da5:	push   ecx
   11da6:	push   edi
   11da7:	lea    eax,[ebp-0x4]
   11daa:	push   eax
   11dab:	xor    edi,edi
   11dad:	push   edi
   11dae:	push   edi
   11daf:	push   0x1b
   11db1:	push   DWORD PTR [ebp+0x8]
   11db4:	call   0x113a0
   11db9:	call   eax
   11dbb:	cmp    eax,0xc0000004
   11dc0:	jne    0x11e2b
   11dc2:	mov    ecx,DWORD PTR [ebp-0x4]
   11dc5:	push   ebx
   11dc6:	mov    ebx,DWORD PTR [ebp+0xc]
   11dc9:	movzx  edx,WORD PTR [ebx+0x2]
   11dcd:	lea    eax,[ecx-0x8]
   11dd0:	cmp    edx,eax
   11dd2:	jae    0x11dde
   11dd4:	mov    WORD PTR [ebx],ax
   11dd7:	mov    eax,0x80000005
   11ddc:	jmp    0x11e2a
   11dde:	push   esi
   11ddf:	push   0x20736649
   11de4:	push   ecx
   11de5:	push   edi
   11de6:	call   0x11694
   11deb:	call   eax
   11ded:	mov    esi,eax
   11def:	cmp    esi,edi
   11df1:	jne    0x11dfa
   11df3:	mov    eax,0xc000009a
   11df8:	jmp    0x11e29
   11dfa:	lea    eax,[ebp-0x4]
   11dfd:	push   eax
   11dfe:	push   DWORD PTR [ebp-0x4]
   11e01:	push   esi
   11e02:	push   0x1b
   11e04:	push   DWORD PTR [ebp+0x8]
   11e07:	call   0x113a0
   11e0c:	call   eax
   11e0e:	mov    edi,eax
   11e10:	test   edi,edi
   11e12:	jl     0x11e1d
   11e14:	push   esi
   11e15:	push   ebx
   11e16:	call   0x1166a
   11e1b:	call   eax
   11e1d:	push   0x0
   11e1f:	push   esi
   11e20:	call   0x11640
   11e25:	call   eax
   11e27:	mov    eax,edi
   11e29:	pop    esi
   11e2a:	pop    ebx
   11e2b:	pop    edi
   11e2c:	leave  
   11e2d:	ret    0x8
   11e30:	int3   
   11e31:	int3   
   11e32:	int3   
   11e33:	int3   
   11e34:	int3   
   11e35:	int3   
   11e36:	mov    edi,edi
   11e38:	push   ebp
   11e39:	mov    ebp,esp
   11e3b:	sub    esp,0x18
   11e3e:	push   0x0
   11e40:	push   0x18
   11e42:	lea    eax,[ebp-0x18]
   11e45:	push   eax
   11e46:	push   0x0
   11e48:	push   DWORD PTR [ebp+0x8]
   11e4b:	call   0x113a0
   11e50:	call   eax
   11e52:	test   eax,eax
   11e54:	jl     0x11e5b
   11e56:	mov    eax,DWORD PTR [ebp-0x8]
   11e59:	jmp    0x11e5d
   11e5b:	xor    eax,eax
   11e5d:	leave  
   11e5e:	ret    0x4
   11e61:	int3   
   11e62:	int3   
   11e63:	int3   
   11e64:	int3   
   11e65:	int3   
   11e66:	mov    edi,edi
   11e68:	push   ebp
   11e69:	mov    ebp,esp
   11e6b:	sub    esp,0x10
   11e6e:	push   esi
   11e6f:	push   edi
   11e70:	xor    eax,eax
   11e72:	mov    WORD PTR [ebp-0x8],ax
   11e76:	lea    edi,[ebp-0x6]
   11e79:	stos   DWORD PTR es:[edi],eax
   11e7a:	stos   WORD PTR es:[edi],ax
   11e7c:	mov    eax,DWORD PTR [ebp+0xc]
   11e7f:	mov    DWORD PTR [ebp-0x4],eax
   11e82:	lea    ecx,[eax+0x2]
   11e85:	mov    dx,WORD PTR [eax]
   11e88:	inc    eax
   11e89:	inc    eax
   11e8a:	test   dx,dx
   11e8d:	jne    0x11e85
   11e8f:	mov    esi,DWORD PTR [ebp+0x8]
   11e92:	movzx  edx,WORD PTR [esi]
   11e95:	sub    eax,ecx
   11e97:	sar    eax,1
   11e99:	lea    ecx,[eax+eax*1]
   11e9c:	mov    WORD PTR [ebp-0x8],cx
   11ea0:	mov    WORD PTR [ebp-0x6],cx
   11ea4:	cmp    dx,cx
   11ea7:	jb     0x11ee7
   11ea9:	xor    eax,eax
   11eab:	lea    edi,[ebp-0xe]
   11eae:	stos   DWORD PTR es:[edi],eax
   11eaf:	stos   WORD PTR es:[edi],ax
   11eb1:	mov    WORD PTR [ebp-0x10],cx
   11eb5:	mov    WORD PTR [ebp-0xe],cx
   11eb9:	movzx  eax,dx
   11ebc:	movzx  ecx,cx
   11ebf:	sub    eax,ecx
   11ec1:	mov    ecx,DWORD PTR [esi+0x4]
   11ec4:	cdq    
   11ec5:	sub    eax,edx
   11ec7:	sar    eax,1
   11ec9:	lea    eax,[ecx+eax*2]
   11ecc:	mov    DWORD PTR [ebp-0xc],eax
   11ecf:	push   0x1
   11ed1:	lea    eax,[ebp-0x8]
   11ed4:	push   eax
   11ed5:	lea    eax,[ebp-0x10]
   11ed8:	push   eax
   11ed9:	call   0x116e8
   11ede:	call   eax
   11ee0:	neg    eax
   11ee2:	sbb    eax,eax
   11ee4:	inc    eax
   11ee5:	jmp    0x11ee9
   11ee7:	xor    al,al
   11ee9:	pop    edi
   11eea:	pop    esi
   11eeb:	leave  
   11eec:	ret    0x8
   11eef:	int3   
   11ef0:	int3   
   11ef1:	int3   
   11ef2:	int3   
   11ef3:	int3   
   11ef4:	mov    edi,edi
   11ef6:	push   ebp
   11ef7:	mov    ebp,esp
   11ef9:	push   ebx
   11efa:	xor    eax,eax
   11efc:	push   eax
   11efd:	push   eax
   11efe:	push   eax
   11eff:	push   eax
   11f00:	mov    ebx,0x76f2c
   11f05:	push   ebx
   11f06:	call   0x11a5a
   11f0b:	call   eax
   11f0d:	test   eax,eax
   11f0f:	jge    0x11f15
   11f11:	xor    al,al
   11f13:	jmp    0x11f39
   11f15:	push   esi
   11f16:	mov    esi,DWORD PTR [ebp+0x8]
   11f19:	push   edi
   11f1a:	imul   esi,esi,0x14
   11f1d:	mov    edi,DWORD PTR [ebp+0xc]
   11f20:	push   0x5
   11f22:	pop    ecx
   11f23:	push   0x0
   11f25:	add    esi,0x7797c
   11f2b:	push   ebx
   11f2c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11f2e:	call   0x11a84
   11f33:	call   eax
   11f35:	pop    edi
   11f36:	mov    al,0x1
   11f38:	pop    esi
   11f39:	pop    ebx
   11f3a:	pop    ebp
   11f3b:	ret    0x8
   11f3e:	int3   
   11f3f:	int3   
   11f40:	int3   
   11f41:	int3   
   11f42:	int3   
   11f43:	int3   
   11f44:	mov    edi,edi
   11f46:	push   ebp
   11f47:	mov    ebp,esp
   11f49:	push   ebx
   11f4a:	xor    eax,eax
   11f4c:	push   eax
   11f4d:	push   eax
   11f4e:	push   eax
   11f4f:	push   eax
   11f50:	mov    ebx,0x76f2c
   11f55:	push   ebx
   11f56:	call   0x11a5a
   11f5b:	call   eax
   11f5d:	test   eax,eax
   11f5f:	jl     0x11f83
   11f61:	push   esi
   11f62:	mov    esi,DWORD PTR [ebp+0xc]
   11f65:	push   edi
   11f66:	mov    edi,DWORD PTR [ebp+0x8]
   11f69:	imul   edi,edi,0x14
   11f6c:	push   0x5
   11f6e:	pop    ecx
   11f6f:	push   0x0
   11f71:	add    edi,0x7797c
   11f77:	push   ebx
   11f78:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11f7a:	call   0x11a84
   11f7f:	call   eax
   11f81:	pop    edi
   11f82:	pop    esi
   11f83:	pop    ebx
   11f84:	pop    ebp
   11f85:	ret    0x8
   11f88:	int3   
   11f89:	int3   
   11f8a:	int3   
   11f8b:	int3   
   11f8c:	int3   
   11f8d:	int3   
   11f8e:	mov    edi,edi
   11f90:	push   ebp
   11f91:	mov    ebp,esp
   11f93:	sub    esp,0x14
   11f96:	and    DWORD PTR [ebp-0x14],0x0
   11f9a:	push   edi
   11f9b:	xor    eax,eax
   11f9d:	lea    edi,[ebp-0x10]
   11fa0:	stos   DWORD PTR es:[edi],eax
   11fa1:	stos   DWORD PTR es:[edi],eax
   11fa2:	stos   DWORD PTR es:[edi],eax
   11fa3:	stos   DWORD PTR es:[edi],eax
   11fa4:	lea    eax,[ebp-0x14]
   11fa7:	push   eax
   11fa8:	push   DWORD PTR [ebp+0x8]
   11fab:	call   0x11f44
   11fb0:	pop    edi
   11fb1:	leave  
   11fb2:	ret    0x4
   11fb5:	int3   
   11fb6:	int3   
   11fb7:	int3   
   11fb8:	int3   
   11fb9:	int3   
   11fba:	mov    edi,edi
   11fbc:	push   ebp
   11fbd:	mov    ebp,esp
   11fbf:	mov    ecx,DWORD PTR ds:0x779a4
   11fc5:	sub    esp,0x38
   11fc8:	push   esi
   11fc9:	xor    esi,esi
   11fcb:	cmp    ecx,esi
   11fcd:	jne    0x11fd7
   11fcf:	or     eax,0xffffffff
   11fd2:	jmp    0x120be
   11fd7:	push   edi
   11fd8:	xor    eax,eax
   11fda:	mov    DWORD PTR [ebp-0x20],esi
   11fdd:	lea    edi,[ebp-0x1c]
   11fe0:	stos   DWORD PTR es:[edi],eax
   11fe1:	lea    eax,[ebp-0x18]
   11fe4:	push   eax
   11fe5:	lea    eax,[ebp-0x38]
   11fe8:	push   eax
   11fe9:	push   0x400
   11fee:	lea    eax,[ebp-0x10]
   11ff1:	push   eax
   11ff2:	mov    DWORD PTR [ebp-0x4],esi
   11ff5:	mov    DWORD PTR [ebp-0x38],0x18
   11ffc:	mov    DWORD PTR [ebp-0x34],esi
   11fff:	mov    DWORD PTR [ebp-0x2c],esi
   12002:	mov    DWORD PTR [ebp-0x30],esi
   12005:	mov    DWORD PTR [ebp-0x28],esi
   12008:	mov    DWORD PTR [ebp-0x24],esi
   1200b:	mov    DWORD PTR [ebp-0x18],ecx
   1200e:	mov    DWORD PTR [ebp-0x14],esi
   12011:	call   0x1127a
   12016:	call   eax
   12018:	mov    edi,eax
   1201a:	cmp    edi,esi
   1201c:	jl     0x120bb
   12022:	lea    eax,[ebp-0xc]
   12025:	push   eax
   12026:	push   0x8
   12028:	push   DWORD PTR [ebp-0x10]
   1202b:	call   0x1151a
   12030:	call   eax
   12032:	mov    edi,eax
   12034:	cmp    edi,esi
   12036:	jl     0x120b1
   12038:	lea    eax,[ebp-0x4]
   1203b:	push   eax
   1203c:	push   0x1
   1203e:	push   esi
   1203f:	push   esi
   12040:	push   0x1
   12042:	push   DWORD PTR [ebp-0xc]
   12045:	call   0x11322
   1204a:	call   eax
   1204c:	mov    edi,eax
   1204e:	cmp    edi,esi
   12050:	jl     0x120a7
   12052:	mov    eax,DWORD PTR [ebp+0x8]
   12055:	mov    DWORD PTR [ebp-0x18],eax
   12058:	lea    eax,[ebp-0x18]
   1205b:	push   eax
   1205c:	lea    eax,[ebp-0x38]
   1205f:	push   eax
   12060:	push   0x200
   12065:	lea    eax,[ebp-0x8]
   12068:	push   eax
   12069:	call   0x1127a
   1206e:	call   eax
   12070:	mov    edi,eax
   12072:	cmp    edi,esi
   12074:	jl     0x1209d
   12076:	mov    eax,DWORD PTR [ebp-0x4]
   12079:	push   0x8
   1207b:	mov    DWORD PTR [ebp-0x20],eax
   1207e:	lea    eax,[ebp-0x20]
   12081:	push   eax
   12082:	push   0x9
   12084:	push   DWORD PTR [ebp-0x8]
   12087:	mov    DWORD PTR [ebp-0x1c],esi
   1208a:	call   0x11544
   1208f:	call   eax
   12091:	push   DWORD PTR [ebp-0x8]
   12094:	mov    edi,eax
   12096:	call   0x11598
   1209b:	call   eax
   1209d:	push   DWORD PTR [ebp-0x4]
   120a0:	call   0x11598
   120a5:	call   eax
   120a7:	push   DWORD PTR [ebp-0xc]
   120aa:	call   0x11598
   120af:	call   eax
   120b1:	push   DWORD PTR [ebp-0x10]
   120b4:	call   0x11598
   120b9:	call   eax
   120bb:	mov    eax,edi
   120bd:	pop    edi
   120be:	pop    esi
   120bf:	leave  
   120c0:	ret    0x4
   120c3:	int3   
   120c4:	int3   
   120c5:	int3   
   120c6:	int3   
   120c7:	int3   
   120c8:	mov    edi,edi
   120ca:	push   ebp
   120cb:	mov    ebp,esp
   120cd:	push   ebx
   120ce:	xor    eax,eax
   120d0:	push   eax
   120d1:	push   eax
   120d2:	push   eax
   120d3:	push   eax
   120d4:	mov    ebx,0x778b8
   120d9:	push   ebx
   120da:	call   0x11a5a
   120df:	call   eax
   120e1:	test   eax,eax
   120e3:	jl     0x12100
   120e5:	push   esi
   120e6:	mov    esi,DWORD PTR [ebp+0x8]
   120e9:	push   edi
   120ea:	push   0x40
   120ec:	pop    ecx
   120ed:	push   0x0
   120ef:	mov    edi,0x779a8
   120f4:	push   ebx
   120f5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   120f7:	call   0x11a84
   120fc:	call   eax
   120fe:	pop    edi
   120ff:	pop    esi
   12100:	pop    ebx
   12101:	pop    ebp
   12102:	ret    0x4
   12105:	int3   
   12106:	int3   
   12107:	int3   
   12108:	int3   
   12109:	int3   
   1210a:	mov    edi,edi
   1210c:	push   ebp
   1210d:	mov    ebp,esp
   1210f:	push   ebx
   12110:	xor    eax,eax
   12112:	push   eax
   12113:	push   eax
   12114:	push   eax
   12115:	push   eax
   12116:	mov    ebx,0x778b8
   1211b:	push   ebx
   1211c:	call   0x11a5a
   12121:	call   eax
   12123:	test   eax,eax
   12125:	jge    0x1212b
   12127:	xor    al,al
   12129:	jmp    0x12152
   1212b:	push   esi
   1212c:	push   edi
   1212d:	mov    edi,DWORD PTR [ebp+0x8]
   12130:	push   0x40
   12132:	pop    ecx
   12133:	push   0x0
   12135:	mov    esi,0x779a8
   1213a:	push   ebx
   1213b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1213d:	call   0x11a84
   12142:	call   eax
   12144:	xor    eax,eax
   12146:	cmp    WORD PTR ds:0x779a8,ax
   1214d:	pop    edi
   1214e:	setne  al
   12151:	pop    esi
   12152:	pop    ebx
   12153:	pop    ebp
   12154:	ret    0x4
   12157:	int3   
   12158:	int3   
   12159:	int3   
   1215a:	int3   
   1215b:	int3   
   1215c:	mov    edi,edi
   1215e:	push   ebp
   1215f:	mov    ebp,esp
   12161:	sub    esp,0x43c
   12167:	mov    eax,ds:0x76f1c
   1216c:	xor    eax,ebp
   1216e:	mov    DWORD PTR [ebp-0x4],eax
   12171:	mov    eax,DWORD PTR [ebp+0xc]
   12174:	push   ebx
   12175:	push   esi
   12176:	mov    esi,DWORD PTR [ebp+0x8]
   12179:	push   edi
   1217a:	xor    ebx,ebx
   1217c:	push   0x3ff
   12181:	mov    DWORD PTR [ebp-0x418],eax
   12187:	lea    eax,[ebp-0x403]
   1218d:	push   ebx
   1218e:	push   eax
   1218f:	mov    DWORD PTR [ebp-0x424],esi
   12195:	mov    BYTE PTR [ebp-0x404],bl
   1219b:	call   0x1e19e
   121a0:	add    esp,0xc
   121a3:	lea    eax,[ebp-0x410]
   121a9:	push   eax
   121aa:	push   0x400
   121af:	lea    eax,[ebp-0x404]
   121b5:	push   eax
   121b6:	push   ebx
   121b7:	push   ebx
   121b8:	push   esi
   121b9:	jmp    0x12368
   121be:	cmp    eax,ebx
   121c0:	jl     0x1238a
   121c6:	mov    eax,DWORD PTR [ebp-0x418]
   121cc:	lea    edx,[eax+0x2]
   121cf:	mov    cx,WORD PTR [eax]
   121d2:	inc    eax
   121d3:	inc    eax
   121d4:	cmp    cx,bx
   121d7:	jne    0x121cf
   121d9:	mov    ecx,DWORD PTR [ebp-0x3f8]
   121df:	sub    eax,edx
   121e1:	shr    ecx,1
   121e3:	sar    eax,1
   121e5:	lea    esi,[ecx+eax*1+0x2]
   121e9:	xor    ecx,ecx
   121eb:	push   0x2
   121ed:	pop    edx
   121ee:	mov    eax,esi
   121f0:	mul    edx
   121f2:	seto   cl
   121f5:	neg    ecx
   121f7:	or     ecx,eax
   121f9:	push   ecx
   121fa:	call   0x11d08
   121ff:	mov    edi,eax
   12201:	lea    eax,[esi+esi*1]
   12204:	push   eax
   12205:	push   ebx
   12206:	push   edi
   12207:	mov    DWORD PTR [ebp-0x40c],edi
   1220d:	call   0x1e19e
   12212:	mov    eax,DWORD PTR [ebp-0x418]
   12218:	add    esp,0x10
   1221b:	mov    ecx,eax
   1221d:	mov    dx,WORD PTR [eax]
   12220:	inc    eax
   12221:	inc    eax
   12222:	cmp    dx,bx
   12225:	jne    0x1221d
   12227:	sub    eax,ecx
   12229:	dec    edi
   1222a:	mov    esi,ecx
   1222c:	dec    edi
   1222d:	mov    cx,WORD PTR [edi+0x2]
   12231:	inc    edi
   12232:	inc    edi
   12233:	cmp    cx,bx
   12236:	jne    0x1222d
   12238:	mov    ecx,eax
   1223a:	shr    ecx,0x2
   1223d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1223f:	mov    ecx,eax
   12241:	and    ecx,0x3
   12244:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   12246:	mov    edi,DWORD PTR [ebp-0x40c]
   1224c:	dec    edi
   1224d:	dec    edi
   1224e:	mov    ax,WORD PTR [edi+0x2]
   12252:	inc    edi
   12253:	inc    edi
   12254:	cmp    ax,bx
   12257:	jne    0x1224e
   12259:	mov    esi,0x1e54a
   1225e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1225f:	mov    eax,DWORD PTR [ebp-0x3f8]
   12265:	shr    eax,1
   12267:	push   eax
   12268:	lea    eax,[ebp-0x3f4]
   1226e:	push   eax
   1226f:	push   DWORD PTR [ebp-0x40c]
   12275:	call   0x1e1aa
   1227a:	mov    esi,DWORD PTR [ebp-0x40c]
   12280:	mov    eax,esi
   12282:	add    esp,0xc
   12285:	mov    DWORD PTR [ebp-0x41c],esi
   1228b:	lea    edx,[eax+0x2]
   1228e:	mov    cx,WORD PTR [eax]
   12291:	inc    eax
   12292:	inc    eax
   12293:	cmp    cx,bx
   12296:	jne    0x1228e
   12298:	sub    eax,edx
   1229a:	sar    eax,1
   1229c:	add    eax,eax
   1229e:	mov    WORD PTR [ebp-0x41e],ax
   122a5:	mov    WORD PTR [ebp-0x420],ax
   122ac:	lea    eax,[ebp-0x420]
   122b2:	mov    DWORD PTR [ebp-0x434],eax
   122b8:	lea    eax,[ebp-0x43c]
   122be:	push   eax
   122bf:	push   0xf003f
   122c4:	lea    eax,[ebp-0x414]
   122ca:	push   eax
   122cb:	mov    DWORD PTR [ebp-0x43c],0x18
   122d5:	mov    DWORD PTR [ebp-0x438],ebx
   122db:	mov    DWORD PTR [ebp-0x430],0x40
   122e5:	mov    DWORD PTR [ebp-0x42c],ebx
   122eb:	mov    DWORD PTR [ebp-0x428],ebx
   122f1:	call   0x113f4
   122f6:	call   eax
   122f8:	push   esi
   122f9:	test   eax,eax
   122fb:	jl     0x12384
   12301:	push   DWORD PTR [ebp-0x414]
   12307:	call   0x1215c
   1230c:	push   esi
   1230d:	mov    BYTE PTR [ebp-0x405],al
   12313:	call   0x11d3e
   12318:	pop    ecx
   12319:	push   DWORD PTR [ebp-0x414]
   1231f:	call   0x1141e
   12324:	call   eax
   12326:	test   eax,eax
   12328:	jl     0x1238a
   1232a:	cmp    BYTE PTR [ebp-0x405],bl
   12330:	je     0x1238a
   12332:	push   0x3ff
   12337:	lea    eax,[ebp-0x403]
   1233d:	push   ebx
   1233e:	push   eax
   1233f:	mov    BYTE PTR [ebp-0x404],bl
   12345:	call   0x1e19e
   1234a:	add    esp,0xc
   1234d:	lea    eax,[ebp-0x410]
   12353:	push   eax
   12354:	push   0x400
   12359:	lea    eax,[ebp-0x404]
   1235f:	push   eax
   12360:	push   ebx
   12361:	push   ebx
   12362:	push   DWORD PTR [ebp-0x424]
   12368:	mov    DWORD PTR [ebp-0x410],ebx
   1236e:	call   0x11712
   12373:	call   eax
   12375:	cmp    eax,0x8000001a
   1237a:	jne    0x121be
   12380:	mov    al,0x1
   12382:	jmp    0x1238c
   12384:	call   0x11d3e
   12389:	pop    ecx
   1238a:	xor    al,al
   1238c:	mov    ecx,DWORD PTR [ebp-0x4]
   1238f:	pop    edi
   12390:	pop    esi
   12391:	xor    ecx,ebp
   12393:	pop    ebx
   12394:	call   0x1e145
   12399:	leave  
   1239a:	ret    0x8
   1239d:	int3   
   1239e:	int3   
   1239f:	int3   
   123a0:	int3   
   123a1:	int3   
   123a2:	mov    eax,ds:0x77924
   123a7:	test   eax,eax
   123a9:	je     0x123ba
   123ab:	push   eax
   123ac:	call   0x11790
   123b1:	call   eax
   123b3:	and    DWORD PTR ds:0x77924,0x0
   123ba:	ret    
   123bb:	int3   
   123bc:	int3   
   123bd:	int3   
   123be:	int3   
   123bf:	int3   
   123c0:	push   0x28
   123c2:	push   0x76a48
   123c7:	call   0x1e1dc
   123cc:	xor    eax,eax
   123ce:	mov    DWORD PTR [ebp-0x28],eax
   123d1:	mov    DWORD PTR [ebp-0x2c],eax
   123d4:	mov    ebx,DWORD PTR [ebp+0x8]
   123d7:	cmp    ebx,eax
   123d9:	jne    0x123e2
   123db:	xor    eax,eax
   123dd:	jmp    0x124bf
   123e2:	mov    DWORD PTR [ebp-0x4],eax
   123e5:	lea    ecx,[ebp-0x2c]
   123e8:	push   ecx
   123e9:	push   eax
   123ea:	push   0x1
   123ec:	push   ebx
   123ed:	call   0x114f0
   123f2:	call   eax
   123f4:	mov    edx,eax
   123f6:	sub    edx,ebx
   123f8:	mov    DWORD PTR [ebp-0x38],edx
   123fb:	mov    esi,DWORD PTR [eax+0x1c]
   123fe:	add    esi,ebx
   12400:	mov    edi,DWORD PTR [eax+0x24]
   12403:	add    edi,ebx
   12405:	mov    ecx,DWORD PTR [eax+0x20]
   12408:	add    ecx,ebx
   1240a:	and    DWORD PTR [ebp-0x20],0x0
   1240e:	mov    ebx,DWORD PTR [ebp-0x20]
   12411:	cmp    ebx,DWORD PTR [eax+0x18]
   12414:	jae    0x124a7
   1241a:	movsx  ebx,WORD PTR [edi+ebx*2]
   1241e:	cmp    ebx,DWORD PTR [eax+0x14]
   12421:	jae    0x1249b
   12423:	lea    ebx,[esi+ebx*4]
   12426:	mov    DWORD PTR [ebp-0x34],ebx
   12429:	cmp    DWORD PTR [ebx],edx
   1242b:	jb     0x12439
   1242d:	mov    ebx,DWORD PTR [ebp-0x2c]
   12430:	add    edx,ebx
   12432:	mov    ebx,DWORD PTR [ebp-0x34]
   12435:	cmp    DWORD PTR [ebx],edx
   12437:	jb     0x12490
   12439:	mov    edx,DWORD PTR [ebp+0xc]
   1243c:	mov    DWORD PTR [ebp-0x30],edx
   1243f:	mov    edx,DWORD PTR [ebp-0x20]
   12442:	mov    edx,DWORD PTR [ecx+edx*4]
   12445:	add    edx,DWORD PTR [ebp+0x8]
   12448:	mov    DWORD PTR [ebp-0x24],edx
   1244b:	mov    dl,BYTE PTR [edx]
   1244d:	mov    ebx,DWORD PTR [ebp-0x30]
   12450:	cmp    dl,BYTE PTR [ebx]
   12452:	jne    0x1247d
   12454:	test   dl,dl
   12456:	je     0x12479
   12458:	mov    edx,DWORD PTR [ebp-0x24]
   1245b:	mov    dl,BYTE PTR [edx+0x1]
   1245e:	mov    BYTE PTR [ebp-0x19],dl
   12461:	cmp    dl,BYTE PTR [ebx+0x1]
   12464:	jne    0x1247d
   12466:	mov    edx,DWORD PTR [ebp-0x24]
   12469:	inc    edx
   1246a:	inc    edx
   1246b:	mov    DWORD PTR [ebp-0x24],edx
   1246e:	inc    ebx
   1246f:	inc    ebx
   12470:	mov    DWORD PTR [ebp-0x30],ebx
   12473:	cmp    BYTE PTR [ebp-0x19],0x0
   12477:	jne    0x1244b
   12479:	xor    edx,edx
   1247b:	jmp    0x12482
   1247d:	sbb    edx,edx
   1247f:	sbb    edx,0xffffffff
   12482:	test   edx,edx
   12484:	jne    0x12490
   12486:	mov    eax,DWORD PTR [ebp-0x34]
   12489:	mov    eax,DWORD PTR [eax]
   1248b:	add    eax,DWORD PTR [ebp+0x8]
   1248e:	jmp    0x124b5
   12490:	inc    DWORD PTR [ebp-0x20]
   12493:	mov    edx,DWORD PTR [ebp-0x38]
   12496:	jmp    0x1240e
   1249b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124a2:	jmp    0x123db
   124a7:	mov    eax,DWORD PTR [ebp-0x28]
   124aa:	jmp    0x124b8
   124ac:	xor    eax,eax
   124ae:	inc    eax
   124af:	ret    
   124b0:	mov    esp,DWORD PTR [ebp-0x18]
   124b3:	xor    eax,eax
   124b5:	mov    DWORD PTR [ebp-0x28],eax
   124b8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124bf:	call   0x1e221
   124c4:	ret    0x8
   124c7:	int3   
   124c8:	int3   
   124c9:	int3   
   124ca:	int3   
   124cb:	int3   
   124cc:	mov    edi,edi
   124ce:	push   ebp
   124cf:	mov    ebp,esp
   124d1:	sub    esp,0x48
   124d4:	mov    eax,DWORD PTR [ebp+0xc]
   124d7:	mov    eax,DWORD PTR [eax]
   124d9:	push   edi
   124da:	mov    DWORD PTR [ebp-0x30],eax
   124dd:	lea    eax,[ebp-0x30]
   124e0:	push   eax
   124e1:	lea    eax,[ebp-0x48]
   124e4:	push   eax
   124e5:	xor    edi,edi
   124e7:	push   0x1f0fff
   124ec:	lea    eax,[ebp-0x10]
   124ef:	push   eax
   124f0:	mov    DWORD PTR [ebp-0x48],0x18
   124f7:	mov    DWORD PTR [ebp-0x44],edi
   124fa:	mov    DWORD PTR [ebp-0x3c],0x200
   12501:	mov    DWORD PTR [ebp-0x40],edi
   12504:	mov    DWORD PTR [ebp-0x38],edi
   12507:	mov    DWORD PTR [ebp-0x34],edi
   1250a:	mov    DWORD PTR [ebp-0x2c],edi
   1250d:	mov    DWORD PTR [ebp-0x10],edi
   12510:	call   0x1127a
   12515:	call   eax
   12517:	test   eax,eax
   12519:	jl     0x1286e
   1251f:	push   ebx
   12520:	push   esi
   12521:	push   0x40
   12523:	mov    esi,0x1000
   12528:	push   esi
   12529:	lea    eax,[ebp-0x14]
   1252c:	push   eax
   1252d:	push   edi
   1252e:	lea    eax,[ebp-0xc]
   12531:	push   eax
   12532:	push   DWORD PTR [ebp-0x10]
   12535:	mov    ebx,0x400
   1253a:	mov    DWORD PTR [ebp-0xc],edi
   1253d:	mov    DWORD PTR [ebp-0x14],ebx
   12540:	call   0x112a4
   12545:	call   eax
   12547:	test   eax,eax
   12549:	jl     0x12554
   1254b:	mov    eax,DWORD PTR [ebp-0xc]
   1254e:	mov    ecx,DWORD PTR [ebp+0xc]
   12551:	mov    DWORD PTR [ecx+0x8],eax
   12554:	push   0x4
   12556:	push   esi
   12557:	lea    eax,[ebp-0x14]
   1255a:	push   eax
   1255b:	push   edi
   1255c:	lea    eax,[ebp-0x18]
   1255f:	push   eax
   12560:	push   DWORD PTR [ebp-0x10]
   12563:	mov    DWORD PTR [ebp-0x18],edi
   12566:	mov    DWORD PTR [ebp-0x14],ebx
   12569:	call   0x112a4
   1256e:	call   eax
   12570:	test   eax,eax
   12572:	jl     0x1257d
   12574:	mov    eax,DWORD PTR [ebp-0x18]
   12577:	mov    ecx,DWORD PTR [ebp+0xc]
   1257a:	mov    DWORD PTR [ecx+0xc],eax
   1257d:	lea    eax,[ebp-0x24]
   12580:	push   eax
   12581:	push   DWORD PTR [ebp-0x30]
   12584:	call   0x112ce
   12589:	call   eax
   1258b:	test   eax,eax
   1258d:	jl     0x1286c
   12593:	push   DWORD PTR [ebp-0x24]
   12596:	call   0x117e4
   1259b:	call   eax
   1259d:	mov    eax,DWORD PTR [ebp-0xc]
   125a0:	mov    DWORD PTR [ebp-0x20],edi
   125a3:	cmp    eax,edi
   125a5:	je     0x12852
   125ab:	mov    esi,DWORD PTR [ebp-0x18]
   125ae:	cmp    esi,edi
   125b0:	je     0x127bf
   125b6:	push   0x214
   125bb:	push   edi
   125bc:	push   esi
   125bd:	mov    DWORD PTR [ebp-0x4],eax
   125c0:	call   0x1e19e
   125c5:	mov    eax,DWORD PTR [ebp-0x4]
   125c8:	add    esp,0xc
   125cb:	push   0x60
   125cd:	lea    ebx,[esi+0xc]
   125d0:	push   eax
   125d1:	mov    DWORD PTR [ebx],edi
   125d3:	mov    DWORD PTR [esi],edi
   125d5:	mov    DWORD PTR [ebp-0x20],eax
   125d8:	call   0x19f48
   125dd:	push   0x68
   125df:	push   eax
   125e0:	call   0x19f48
   125e5:	push   ebx
   125e6:	push   eax
   125e7:	call   0x19f60
   125ec:	push   0x6a
   125ee:	pop    ebx
   125ef:	push   ebx
   125f0:	push   eax
   125f1:	call   0x19f48
   125f6:	push   edi
   125f7:	push   eax
   125f8:	call   0x19f48
   125fd:	push   ebx
   125fe:	push   eax
   125ff:	call   0x19f48
   12604:	push   edi
   12605:	push   eax
   12606:	call   0x19f48
   1260b:	push   0x68
   1260d:	push   eax
   1260e:	call   0x19f48
   12613:	push   edi
   12614:	push   eax
   12615:	mov    DWORD PTR [ebp-0x28],eax
   12618:	call   0x19f60
   1261d:	push   ebx
   1261e:	push   eax
   1261f:	call   0x19f48
   12624:	push   edi
   12625:	push   eax
   12626:	call   0x19f48
   1262b:	push   ebx
   1262c:	push   eax
   1262d:	call   0x19f48
   12632:	push   edi
   12633:	push   eax
   12634:	call   0x19f48
   12639:	push   0xb8
   1263e:	push   eax
   1263f:	call   0x19f48
   12644:	push   DWORD PTR ds:0x77970
   1264a:	push   eax
   1264b:	call   0x19f60
   12650:	mov    ebx,0xc00b
   12655:	push   ebx
   12656:	push   eax
   12657:	call   0x19f7a
   1265c:	push   0x74
   1265e:	push   eax
   1265f:	call   0x19f48
   12664:	push   0x9
   12666:	push   eax
   12667:	call   0x19f48
   1266c:	mov    edi,0xd0ff
   12671:	push   edi
   12672:	push   eax
   12673:	call   0x19f7a
   12678:	push   0xb9
   1267d:	push   eax
   1267e:	call   0x19f48
   12683:	lea    ecx,[esi+0x10]
   12686:	push   ecx
   12687:	push   eax
   12688:	call   0x19f60
   1268d:	push   0x189
   12692:	push   eax
   12693:	call   0x19f7a
   12698:	push   0x61
   1269a:	push   eax
   1269b:	call   0x19f48
   126a0:	and    DWORD PTR [ebp-0x8],0x0
   126a4:	mov    DWORD PTR [ebp-0x4],eax
   126a7:	mov    eax,DWORD PTR [ebp+0x8]
   126aa:	mov    DWORD PTR [ebp-0x1c],eax
   126ad:	push   0x0
   126af:	push   DWORD PTR [ebp-0x1c]
   126b2:	push   DWORD PTR [ebp-0x4]
   126b5:	call   0x1a6fc
   126ba:	mov    ecx,eax
   126bc:	sub    ecx,DWORD PTR [ebp-0x1c]
   126bf:	mov    DWORD PTR [ebp-0x1c],eax
   126c2:	add    DWORD PTR [ebp-0x8],ecx
   126c5:	add    DWORD PTR [ebp-0x4],ecx
   126c8:	cmp    DWORD PTR [ebp-0x8],0x5
   126cc:	jb     0x126ad
   126ce:	mov    ecx,DWORD PTR [ebp+0x8]
   126d1:	push   DWORD PTR [ebp-0x4]
   126d4:	mov    eax,DWORD PTR [ebp-0x8]
   126d7:	add    eax,ecx
   126d9:	push   eax
   126da:	call   0x19fbe
   126df:	push   eax
   126e0:	push   DWORD PTR [ebp-0x28]
   126e3:	mov    DWORD PTR [ebp-0x4],eax
   126e6:	call   0x19f60
   126eb:	mov    eax,DWORD PTR [ebp-0x4]
   126ee:	push   0xeb
   126f3:	push   eax
   126f4:	mov    DWORD PTR [esi],eax
   126f6:	call   0x19f48
   126fb:	push   0x0
   126fd:	push   eax
   126fe:	mov    DWORD PTR [esi+0x4],eax
   12701:	call   0x19f48
   12706:	push   0x68
   12708:	push   eax
   12709:	call   0x19f48
   1270e:	push   0x3e8
   12713:	push   eax
   12714:	call   0x19f60
   12719:	push   0xb8
   1271e:	push   eax
   1271f:	call   0x19f48
   12724:	push   DWORD PTR ds:0x77974
   1272a:	push   eax
   1272b:	call   0x19f60
   12730:	push   ebx
   12731:	push   eax
   12732:	call   0x19f7a
   12737:	push   0x74
   12739:	push   eax
   1273a:	call   0x19f48
   1273f:	push   0x2
   12741:	push   eax
   12742:	call   0x19f48
   12747:	push   edi
   12748:	push   eax
   12749:	call   0x19f7a
   1274e:	push   eax
   1274f:	push   DWORD PTR [esi]
   12751:	call   0x19fbe
   12756:	mov    cl,al
   12758:	sub    cl,BYTE PTR [esi+0x4]
   1275b:	push   0x68
   1275d:	dec    cl
   1275f:	push   eax
   12760:	mov    BYTE PTR [esi+0x8],cl
   12763:	call   0x19f48
   12768:	add    esi,0x14
   1276b:	push   esi
   1276c:	push   eax
   1276d:	call   0x19f60
   12772:	push   0xb8
   12777:	push   eax
   12778:	call   0x19f48
   1277d:	push   DWORD PTR ds:0x77968
   12783:	push   eax
   12784:	call   0x19f60
   12789:	push   ebx
   1278a:	push   eax
   1278b:	call   0x19f7a
   12790:	push   0x74
   12792:	push   eax
   12793:	call   0x19f48
   12798:	push   0x2
   1279a:	push   eax
   1279b:	call   0x19f48
   127a0:	push   edi
   127a1:	push   eax
   127a2:	call   0x19f7a
   127a7:	push   0xc2
   127ac:	push   eax
   127ad:	call   0x19f48
   127b2:	push   0x4
   127b4:	push   eax
   127b5:	call   0x19f7a
   127ba:	mov    eax,DWORD PTR [ebp-0xc]
   127bd:	xor    edi,edi
   127bf:	cmp    eax,edi
   127c1:	je     0x12852
   127c7:	add    eax,0x400
   127cc:	lea    esi,[eax-0xc]
   127cf:	lea    ecx,[eax-0x8]
   127d2:	push   esi
   127d3:	lea    ebx,[eax-0x4]
   127d6:	lea    edx,[eax-0x10]
   127d9:	push   0x40
   127db:	add    eax,0xffffffe8
   127de:	push   ecx
   127df:	mov    DWORD PTR [ebp-0x1c],eax
   127e2:	mov    eax,DWORD PTR [ebp+0x8]
   127e5:	mov    DWORD PTR [ebx],eax
   127e7:	push   ebx
   127e8:	mov    DWORD PTR [ecx],0x5
   127ee:	push   0xffffffff
   127f0:	mov    DWORD PTR [ebp-0x8],ecx
   127f3:	mov    DWORD PTR [ebp-0x28],edx
   127f6:	mov    DWORD PTR [esi],edi
   127f8:	call   DWORD PTR ds:0x778e4
   127fe:	test   eax,eax
   12800:	jl     0x12852
   12802:	mov    eax,DWORD PTR [ebp-0x20]
   12805:	sub    eax,DWORD PTR [ebp+0x8]
   12808:	sub    eax,0x5
   1280b:	push   eax
   1280c:	mov    eax,DWORD PTR [ebp-0x1c]
   1280f:	inc    eax
   12810:	push   eax
   12811:	call   0x19f60
   12816:	push   0xe9
   1281b:	push   DWORD PTR [ebp-0x1c]
   1281e:	call   0x19f48
   12823:	mov    eax,DWORD PTR [ebp-0x28]
   12826:	push   eax
   12827:	push   0x5
   12829:	push   DWORD PTR [ebp-0x1c]
   1282c:	mov    DWORD PTR [eax],edi
   1282e:	push   DWORD PTR [ebp+0x8]
   12831:	push   0xffffffff
   12833:	call   DWORD PTR ds:0x778d8
   12839:	mov    eax,DWORD PTR [ebp+0xc]
   1283c:	mov    BYTE PTR [eax+0x10],0x1
   12840:	lea    eax,[ebp-0x20]
   12843:	push   eax
   12844:	push   DWORD PTR [esi]
   12846:	push   DWORD PTR [ebp-0x8]
   12849:	push   ebx
   1284a:	push   0xffffffff
   1284c:	call   DWORD PTR ds:0x778e4
   12852:	call   0x117ba
   12857:	call   eax
   12859:	mov    ecx,DWORD PTR [ebp-0x24]
   1285c:	call   DWORD PTR ds:0x1f850
   12862:	push   DWORD PTR [ebp-0x10]
   12865:	call   0x11598
   1286a:	call   eax
   1286c:	pop    esi
   1286d:	pop    ebx
   1286e:	pop    edi
   1286f:	leave  
   12870:	ret    0x8
   12873:	int3   
   12874:	int3   
   12875:	int3   
   12876:	int3   
   12877:	int3   
   12878:	mov    edi,edi
   1287a:	push   ebp
   1287b:	mov    ebp,esp
   1287d:	sub    esp,0x18
   12880:	and    DWORD PTR [ebp-0x18],0x0
   12884:	push   edi
   12885:	xor    eax,eax
   12887:	lea    edi,[ebp-0x14]
   1288a:	stos   DWORD PTR es:[edi],eax
   1288b:	stos   DWORD PTR es:[edi],eax
   1288c:	stos   DWORD PTR es:[edi],eax
   1288d:	stos   DWORD PTR es:[edi],eax
   1288e:	lea    eax,[ebp-0x18]
   12891:	push   eax
   12892:	push   0x1
   12894:	call   0x11ef4
   12899:	pop    edi
   1289a:	test   al,al
   1289c:	je     0x128f3
   1289e:	cmp    DWORD PTR [ebp-0x18],0x0
   128a2:	je     0x128f3
   128a4:	lea    eax,[ebp-0x4]
   128a7:	push   eax
   128a8:	push   DWORD PTR [ebp-0x18]
   128ab:	call   0x112ce
   128b0:	call   eax
   128b2:	test   eax,eax
   128b4:	jl     0x128f3
   128b6:	push   esi
   128b7:	push   DWORD PTR [ebp-0x4]
   128ba:	call   0x117e4
   128bf:	call   eax
   128c1:	mov    esi,DWORD PTR [ebp-0xc]
   128c4:	mov    eax,DWORD PTR [ebp+0x8]
   128c7:	lea    edx,[esi+0x14]
   128ca:	sub    edx,eax
   128cc:	movzx  ecx,WORD PTR [eax]
   128cf:	mov    WORD PTR [edx+eax*1],cx
   128d3:	inc    eax
   128d4:	inc    eax
   128d5:	test   cx,cx
   128d8:	jne    0x128cc
   128da:	mov    eax,DWORD PTR [esi+0x4]
   128dd:	mov    cl,BYTE PTR [esi+0x8]
   128e0:	mov    BYTE PTR [eax],cl
   128e2:	call   0x117ba
   128e7:	call   eax
   128e9:	mov    ecx,DWORD PTR [ebp-0x4]
   128ec:	call   DWORD PTR ds:0x1f850
   128f2:	pop    esi
   128f3:	leave  
   128f4:	ret    0x4
   128f7:	int3   
   128f8:	int3   
   128f9:	int3   
   128fa:	int3   
   128fb:	int3   
   128fc:	mov    edi,edi
   128fe:	push   ebp
   128ff:	mov    ebp,esp
   12901:	push   ecx
   12902:	and    DWORD PTR [ebp-0x4],0x0
   12906:	push   ebx
   12907:	push   esi
   12908:	push   edi
   12909:	mov    esi,0x1000
   1290e:	push   0x20736649
   12913:	push   esi
   12914:	push   0x0
   12916:	call   0x11694
   1291b:	call   eax
   1291d:	mov    edi,eax
   1291f:	test   edi,edi
   12921:	je     0x12956
   12923:	lea    eax,[ebp-0x4]
   12926:	push   eax
   12927:	push   esi
   12928:	push   edi
   12929:	push   DWORD PTR [ebp+0x8]
   1292c:	call   0x113ca
   12931:	call   eax
   12933:	mov    ebx,eax
   12935:	cmp    ebx,0xc0000004
   1293b:	jne    0x12949
   1293d:	push   0x0
   1293f:	push   edi
   12940:	call   0x11640
   12945:	call   eax
   12947:	add    esi,esi
   12949:	test   ebx,ebx
   1294b:	jne    0x1290e
   1294d:	mov    eax,edi
   1294f:	pop    edi
   12950:	pop    esi
   12951:	pop    ebx
   12952:	leave  
   12953:	ret    0x4
   12956:	xor    eax,eax
   12958:	jmp    0x1294f
   1295a:	int3   
   1295b:	int3   
   1295c:	int3   
   1295d:	int3   
   1295e:	int3   
   1295f:	int3   
   12960:	push   0x0
   12962:	push   0x778f4
   12967:	call   0x11a30
   1296c:	call   eax
   1296e:	push   0x100
   12973:	push   0x0
   12975:	push   0x76fb8
   1297a:	call   0x1e19e
   1297f:	add    esp,0xc
   12982:	ret    
   12983:	int3   
   12984:	int3   
   12985:	int3   
   12986:	int3   
   12987:	int3   
   12988:	mov    edi,edi
   1298a:	push   ebp
   1298b:	mov    ebp,esp
   1298d:	push   ebx
   1298e:	mov    ebx,DWORD PTR [ebp+0x8]
   12991:	cmp    ebx,0x40
   12994:	ja     0x129c3
   12996:	push   esi
   12997:	push   edi
   12998:	xor    edi,edi
   1299a:	push   edi
   1299b:	push   edi
   1299c:	push   edi
   1299d:	push   edi
   1299e:	mov    esi,0x778f4
   129a3:	push   esi
   129a4:	call   0x11a5a
   129a9:	call   eax
   129ab:	test   eax,eax
   129ad:	jl     0x129c1
   129af:	push   edi
   129b0:	lea    eax,[ebx*4+0x76fb8]
   129b7:	inc    DWORD PTR [eax]
   129b9:	push   esi
   129ba:	call   0x11a84
   129bf:	call   eax
   129c1:	pop    edi
   129c2:	pop    esi
   129c3:	pop    ebx
   129c4:	pop    ebp
   129c5:	ret    0x4
   129c8:	int3   
   129c9:	int3   
   129ca:	int3   
   129cb:	int3   
   129cc:	int3   
   129cd:	int3   
   129ce:	mov    edi,edi
   129d0:	push   ebp
   129d1:	mov    ebp,esp
   129d3:	push   ebx
   129d4:	push   esi
   129d5:	push   edi
   129d6:	mov    edi,DWORD PTR [ebp+0x8]
   129d9:	cmp    edi,0x40
   129dc:	ja     0x12a09
   129de:	xor    ebx,ebx
   129e0:	push   ebx
   129e1:	push   ebx
   129e2:	push   ebx
   129e3:	push   ebx
   129e4:	mov    esi,0x778f4
   129e9:	push   esi
   129ea:	call   0x11a5a
   129ef:	call   eax
   129f1:	test   eax,eax
   129f3:	jl     0x12a09
   129f5:	mov    edi,DWORD PTR [edi*4+0x76fb8]
   129fc:	push   ebx
   129fd:	push   esi
   129fe:	call   0x11a84
   12a03:	call   eax
   12a05:	mov    eax,edi
   12a07:	jmp    0x12a0b
   12a09:	xor    eax,eax
   12a0b:	pop    edi
   12a0c:	pop    esi
   12a0d:	pop    ebx
   12a0e:	pop    ebp
   12a0f:	ret    0x4
   12a12:	int3   
   12a13:	int3   
   12a14:	int3   
   12a15:	int3   
   12a16:	int3   
   12a17:	int3   
   12a18:	mov    edi,edi
   12a1a:	push   ebp
   12a1b:	mov    ebp,esp
   12a1d:	push   esi
   12a1e:	mov    esi,DWORD PTR [ebp+0x8]
   12a21:	push   edi
   12a22:	push   DWORD PTR [esi]
   12a24:	call   0x11d08
   12a29:	push   DWORD PTR [esi]
   12a2b:	mov    edi,eax
   12a2d:	push   esi
   12a2e:	push   edi
   12a2f:	call   0x1e1b6
   12a34:	add    esp,0x10
   12a37:	mov    eax,edi
   12a39:	pop    edi
   12a3a:	pop    esi
   12a3b:	pop    ebp
   12a3c:	ret    0x4
   12a3f:	int3   
   12a40:	int3   
   12a41:	int3   
   12a42:	int3   
   12a43:	int3   
   12a44:	mov    edi,edi
   12a46:	push   ebp
   12a47:	mov    ebp,esp
   12a49:	push   ebx
   12a4a:	push   esi
   12a4b:	push   edi
   12a4c:	mov    edi,DWORD PTR [ebp+0x8]
   12a4f:	mov    eax,DWORD PTR [edi+0x4]
   12a52:	mov    esi,ecx
   12a54:	mov    ebx,DWORD PTR [esi]
   12a56:	mov    DWORD PTR [esi+0x4],eax
   12a59:	inc    eax
   12a5a:	push   eax
   12a5b:	call   0x11d08
   12a60:	push   DWORD PTR [esi+0x4]
   12a63:	mov    DWORD PTR [esi],eax
   12a65:	push   DWORD PTR [edi]
   12a67:	push   eax
   12a68:	call   0x1e1b6
   12a6d:	mov    eax,DWORD PTR [esi+0x4]
   12a70:	mov    ecx,DWORD PTR [esi]
   12a72:	push   ebx
   12a73:	mov    BYTE PTR [eax+ecx*1],0x0
   12a77:	call   0x11d3e
   12a7c:	add    esp,0x14
   12a7f:	pop    edi
   12a80:	mov    eax,esi
   12a82:	pop    esi
   12a83:	pop    ebx
   12a84:	pop    ebp
   12a85:	ret    0x4
   12a88:	int3   
   12a89:	int3   
   12a8a:	int3   
   12a8b:	int3   
   12a8c:	int3   
   12a8d:	int3   
   12a8e:	mov    edi,edi
   12a90:	push   ebp
   12a91:	mov    ebp,esp
   12a93:	push   esi
   12a94:	mov    esi,DWORD PTR [ebp+0x8]
   12a97:	push   edi
   12a98:	mov    edi,ecx
   12a9a:	cmp    edi,esi
   12a9c:	je     0x12ac9
   12a9e:	mov    eax,DWORD PTR [edi+0x4]
   12aa1:	cmp    eax,DWORD PTR [esi+0x4]
   12aa4:	je     0x12ab8
   12aa6:	cmp    BYTE PTR [edi],0x0
   12aa9:	je     0x12ab2
   12aab:	push   eax
   12aac:	call   0x11d3e
   12ab1:	pop    ecx
   12ab2:	mov    al,BYTE PTR [esi]
   12ab4:	mov    BYTE PTR [edi],al
   12ab6:	jmp    0x12ac0
   12ab8:	cmp    BYTE PTR [esi],0x0
   12abb:	je     0x12ac0
   12abd:	mov    BYTE PTR [edi],0x1
   12ac0:	mov    eax,DWORD PTR [esi+0x4]
   12ac3:	mov    BYTE PTR [esi],0x0
   12ac6:	mov    DWORD PTR [edi+0x4],eax
   12ac9:	mov    eax,edi
   12acb:	pop    edi
   12acc:	pop    esi
   12acd:	pop    ebp
   12ace:	ret    0x4
   12ad1:	int3   
   12ad2:	int3   
   12ad3:	int3   
   12ad4:	int3   
   12ad5:	int3   
   12ad6:	mov    edi,edi
   12ad8:	push   esi
   12ad9:	push   edi
   12ada:	push   0x20736649
   12adf:	push   0x20
   12ae1:	push   0x0
   12ae3:	mov    esi,ecx
   12ae5:	call   0x11694
   12aea:	call   eax
   12aec:	push   0x0
   12aee:	mov    edi,eax
   12af0:	push   0x1
   12af2:	mov    ecx,esi
   12af4:	mov    DWORD PTR [esi],edi
   12af6:	call   0x10da2
   12afb:	mov    DWORD PTR [esi+0x8],eax
   12afe:	mov    DWORD PTR [esi+0xc],edx
   12b01:	test   edi,edi
   12b03:	jne    0x12b11
   12b05:	push   0xc000009a
   12b0a:	call   0x115ec
   12b0f:	call   eax
   12b11:	pop    edi
   12b12:	mov    eax,esi
   12b14:	pop    esi
   12b15:	ret    
   12b16:	int3   
   12b17:	int3   
   12b18:	int3   
   12b19:	int3   
   12b1a:	int3   
   12b1b:	int3   
   12b1c:	mov    edi,edi
   12b1e:	push   ebp
   12b1f:	mov    ebp,esp
   12b21:	push   esi
   12b22:	push   edi
   12b23:	mov    edi,DWORD PTR [ebp+0x8]
   12b26:	push   edi
   12b27:	mov    esi,ecx
   12b29:	call   0x12a44
   12b2e:	lea    eax,[edi+0x8]
   12b31:	push   eax
   12b32:	lea    ecx,[esi+0x8]
   12b35:	call   0x12a44
   12b3a:	lea    eax,[edi+0x10]
   12b3d:	push   eax
   12b3e:	lea    ecx,[esi+0x10]
   12b41:	call   0x12a44
   12b46:	lea    eax,[edi+0x18]
   12b49:	push   eax
   12b4a:	lea    ecx,[esi+0x18]
   12b4d:	call   0x12a44
   12b52:	mov    eax,DWORD PTR [edi+0x20]
   12b55:	mov    DWORD PTR [esi+0x20],eax
   12b58:	mov    eax,DWORD PTR [edi+0x28]
   12b5b:	mov    DWORD PTR [esi+0x28],eax
   12b5e:	mov    eax,DWORD PTR [edi+0x2c]
   12b61:	mov    DWORD PTR [esi+0x2c],eax
   12b64:	mov    eax,DWORD PTR [edi+0x30]
   12b67:	mov    DWORD PTR [esi+0x30],eax
   12b6a:	mov    eax,DWORD PTR [edi+0x34]
   12b6d:	add    edi,0x38
   12b70:	push   edi
   12b71:	lea    ecx,[esi+0x38]
   12b74:	mov    DWORD PTR [esi+0x34],eax
   12b77:	call   0x12a44
   12b7c:	pop    edi
   12b7d:	mov    eax,esi
   12b7f:	pop    esi
   12b80:	pop    ebp
   12b81:	ret    0x4
   12b84:	int3   
   12b85:	int3   
   12b86:	int3   
   12b87:	int3   
   12b88:	int3   
   12b89:	int3   
   12b8a:	mov    edi,edi
   12b8c:	push   esi
   12b8d:	mov    esi,ecx
   12b8f:	push   DWORD PTR [esi+0x8]
   12b92:	call   0x11d3e
   12b97:	push   DWORD PTR [esi]
   12b99:	call   0x11d3e
   12b9e:	pop    ecx
   12b9f:	pop    ecx
   12ba0:	pop    esi
   12ba1:	ret    
   12ba2:	int3   
   12ba3:	int3   
   12ba4:	int3   
   12ba5:	int3   
   12ba6:	int3   
   12ba7:	int3   
   12ba8:	mov    edi,edi
   12baa:	push   ebp
   12bab:	mov    ebp,esp
   12bad:	push   esi
   12bae:	mov    esi,DWORD PTR [ebp+0xc]
   12bb1:	push   edi
   12bb2:	mov    edi,ecx
   12bb4:	cmp    esi,0xffffffff
   12bb7:	jne    0x12bc8
   12bb9:	mov    esi,DWORD PTR [ebp+0x8]
   12bbc:	lea    ecx,[esi+0x1]
   12bbf:	mov    al,BYTE PTR [esi]
   12bc1:	inc    esi
   12bc2:	test   al,al
   12bc4:	jne    0x12bbf
   12bc6:	sub    esi,ecx
   12bc8:	lea    eax,[esi+0x1]
   12bcb:	push   eax
   12bcc:	call   0x11d08
   12bd1:	pop    ecx
   12bd2:	mov    DWORD PTR [edi],eax
   12bd4:	test   eax,eax
   12bd6:	jne    0x12be3
   12bd8:	push   0xc000009a
   12bdd:	call   DWORD PTR ds:0x1f820
   12be3:	mov    eax,DWORD PTR [edi]
   12be5:	push   esi
   12be6:	push   DWORD PTR [ebp+0x8]
   12be9:	mov    BYTE PTR [esi+eax*1],0x0
   12bed:	push   DWORD PTR [edi]
   12bef:	call   0x1e1b6
   12bf4:	add    esp,0xc
   12bf7:	mov    DWORD PTR [edi+0x4],esi
   12bfa:	pop    edi
   12bfb:	pop    esi
   12bfc:	pop    ebp
   12bfd:	ret    0x8
   12c00:	int3   
   12c01:	int3   
   12c02:	int3   
   12c03:	int3   
   12c04:	int3   
   12c05:	int3   
   12c06:	mov    edi,edi
   12c08:	push   ebp
   12c09:	mov    ebp,esp
   12c0b:	push   ebx
   12c0c:	push   esi
   12c0d:	push   edi
   12c0e:	mov    edi,DWORD PTR [ebp+0x8]
   12c11:	mov    eax,DWORD PTR [edi+0x4]
   12c14:	mov    esi,ecx
   12c16:	mov    ebx,DWORD PTR [esi]
   12c18:	mov    DWORD PTR [esi+0x4],eax
   12c1b:	xor    ecx,ecx
   12c1d:	push   0x2
   12c1f:	inc    eax
   12c20:	pop    edx
   12c21:	mul    edx
   12c23:	seto   cl
   12c26:	neg    ecx
   12c28:	or     ecx,eax
   12c2a:	push   ecx
   12c2b:	call   0x11d08
   12c30:	mov    ecx,DWORD PTR [esi+0x4]
   12c33:	add    ecx,ecx
   12c35:	push   ecx
   12c36:	mov    DWORD PTR [esi],eax
   12c38:	push   DWORD PTR [edi]
   12c3a:	push   eax
   12c3b:	call   0x1e1b6
   12c40:	mov    eax,DWORD PTR [esi+0x4]
   12c43:	mov    ecx,DWORD PTR [esi]
   12c45:	xor    edx,edx
   12c47:	push   ebx
   12c48:	mov    WORD PTR [ecx+eax*2],dx
   12c4c:	call   0x11d3e
   12c51:	add    esp,0x14
   12c54:	pop    edi
   12c55:	mov    eax,esi
   12c57:	pop    esi
   12c58:	pop    ebx
   12c59:	pop    ebp
   12c5a:	ret    0x4
   12c5d:	int3   
   12c5e:	int3   
   12c5f:	int3   
   12c60:	int3   
   12c61:	int3   
   12c62:	mov    edi,edi
   12c64:	push   ebp
   12c65:	mov    ebp,esp
   12c67:	push   esi
   12c68:	push   edi
   12c69:	mov    edi,DWORD PTR [ebp+0xc]
   12c6c:	mov    esi,ecx
   12c6e:	cmp    edi,0xffffffff
   12c71:	jne    0x12c7d
   12c73:	push   DWORD PTR [ebp+0x8]
   12c76:	call   0x10960
   12c7b:	mov    edi,eax
   12c7d:	xor    ecx,ecx
   12c7f:	push   0x2
   12c81:	pop    edx
   12c82:	lea    eax,[edi+0x1]
   12c85:	mul    edx
   12c87:	seto   cl
   12c8a:	neg    ecx
   12c8c:	or     ecx,eax
   12c8e:	push   ecx
   12c8f:	call   0x11d08
   12c94:	pop    ecx
   12c95:	mov    DWORD PTR [esi],eax
   12c97:	test   eax,eax
   12c99:	jne    0x12ca6
   12c9b:	push   0xc000009a
   12ca0:	call   DWORD PTR ds:0x1f820
   12ca6:	mov    ecx,DWORD PTR [esi]
   12ca8:	lea    eax,[edi+edi*1]
   12cab:	push   eax
   12cac:	push   DWORD PTR [ebp+0x8]
   12caf:	xor    edx,edx
   12cb1:	mov    WORD PTR [eax+ecx*1],dx
   12cb5:	push   DWORD PTR [esi]
   12cb7:	call   0x1e1b6
   12cbc:	add    esp,0xc
   12cbf:	mov    DWORD PTR [esi+0x4],edi
   12cc2:	pop    edi
   12cc3:	pop    esi
   12cc4:	pop    ebp
   12cc5:	ret    0x8
   12cc8:	int3   
   12cc9:	int3   
   12cca:	int3   
   12ccb:	int3   
   12ccc:	int3   
   12ccd:	int3   
   12cce:	mov    edi,edi
   12cd0:	push   ebp
   12cd1:	mov    ebp,esp
   12cd3:	mov    eax,DWORD PTR [ebp+0x8]
   12cd6:	mov    edx,DWORD PTR ds:0x77abc
   12cdc:	jmp    0x12ce0
   12cde:	mov    eax,ecx
   12ce0:	mov    ecx,DWORD PTR [eax]
   12ce2:	cmp    ecx,edx
   12ce4:	jne    0x12cde
   12ce6:	pop    ebp
   12ce7:	ret    0x4
   12cea:	int3   
   12ceb:	int3   
   12cec:	int3   
   12ced:	int3   
   12cee:	int3   
   12cef:	int3   
   12cf0:	mov    edi,edi
   12cf2:	push   ebp
   12cf3:	mov    ebp,esp
   12cf5:	mov    eax,DWORD PTR [ecx+0x4]
   12cf8:	mov    ecx,DWORD PTR [eax+0x4]
   12cfb:	mov    edx,DWORD PTR ds:0x77ab0
   12d01:	cmp    ecx,edx
   12d03:	je     0x12d1e
   12d05:	push   esi
   12d06:	mov    esi,DWORD PTR [ebp+0x8]
   12d09:	mov    esi,DWORD PTR [esi]
   12d0b:	cmp    DWORD PTR [ecx+0xc],esi
   12d0e:	jae    0x12d15
   12d10:	mov    ecx,DWORD PTR [ecx+0x8]
   12d13:	jmp    0x12d19
   12d15:	mov    eax,ecx
   12d17:	mov    ecx,DWORD PTR [ecx]
   12d19:	cmp    ecx,edx
   12d1b:	jne    0x12d0b
   12d1d:	pop    esi
   12d1e:	pop    ebp
   12d1f:	ret    0x4
   12d22:	int3   
   12d23:	int3   
   12d24:	int3   
   12d25:	int3   
   12d26:	int3   
   12d27:	int3   
   12d28:	mov    edi,edi
   12d2a:	push   ebp
   12d2b:	mov    ebp,esp
   12d2d:	mov    edx,DWORD PTR [ebp+0x8]
   12d30:	mov    eax,DWORD PTR [edx+0x8]
   12d33:	push   esi
   12d34:	mov    esi,DWORD PTR [eax]
   12d36:	mov    DWORD PTR [edx+0x8],esi
   12d39:	mov    esi,DWORD PTR [eax]
   12d3b:	cmp    esi,DWORD PTR ds:0x77ab0
   12d41:	je     0x12d46
   12d43:	mov    DWORD PTR [esi+0x4],edx
   12d46:	mov    esi,DWORD PTR [edx+0x4]
   12d49:	mov    DWORD PTR [eax+0x4],esi
   12d4c:	mov    ecx,DWORD PTR [ecx+0x4]
   12d4f:	pop    esi
   12d50:	cmp    edx,DWORD PTR [ecx+0x4]
   12d53:	jne    0x12d5a
   12d55:	mov    DWORD PTR [ecx+0x4],eax
   12d58:	jmp    0x12d68
   12d5a:	mov    ecx,DWORD PTR [edx+0x4]
   12d5d:	cmp    edx,DWORD PTR [ecx]
   12d5f:	jne    0x12d65
   12d61:	mov    DWORD PTR [ecx],eax
   12d63:	jmp    0x12d68
   12d65:	mov    DWORD PTR [ecx+0x8],eax
   12d68:	mov    DWORD PTR [eax],edx
   12d6a:	mov    DWORD PTR [edx+0x4],eax
   12d6d:	pop    ebp
   12d6e:	ret    0x4
   12d71:	int3   
   12d72:	int3   
   12d73:	int3   
   12d74:	int3   
   12d75:	int3   
   12d76:	mov    edi,edi
   12d78:	push   ebp
   12d79:	mov    ebp,esp
   12d7b:	mov    edx,DWORD PTR [ebp+0x8]
   12d7e:	mov    eax,DWORD PTR [edx]
   12d80:	push   esi
   12d81:	mov    esi,DWORD PTR [eax+0x8]
   12d84:	mov    DWORD PTR [edx],esi
   12d86:	mov    esi,DWORD PTR [eax+0x8]
   12d89:	cmp    esi,DWORD PTR ds:0x77ab0
   12d8f:	je     0x12d94
   12d91:	mov    DWORD PTR [esi+0x4],edx
   12d94:	mov    esi,DWORD PTR [edx+0x4]
   12d97:	mov    DWORD PTR [eax+0x4],esi
   12d9a:	mov    ecx,DWORD PTR [ecx+0x4]
   12d9d:	pop    esi
   12d9e:	cmp    edx,DWORD PTR [ecx+0x4]
   12da1:	jne    0x12da8
   12da3:	mov    DWORD PTR [ecx+0x4],eax
   12da6:	jmp    0x12db7
   12da8:	mov    ecx,DWORD PTR [edx+0x4]
   12dab:	cmp    edx,DWORD PTR [ecx+0x8]
   12dae:	jne    0x12db5
   12db0:	mov    DWORD PTR [ecx+0x8],eax
   12db3:	jmp    0x12db7
   12db5:	mov    DWORD PTR [ecx],eax
   12db7:	mov    DWORD PTR [eax+0x8],edx
   12dba:	mov    DWORD PTR [edx+0x4],eax
   12dbd:	pop    ebp
   12dbe:	ret    0x4
   12dc1:	int3   
   12dc2:	int3   
   12dc3:	int3   
   12dc4:	int3   
   12dc5:	int3   
   12dc6:	mov    edi,edi
   12dc8:	push   ebp
   12dc9:	mov    ebp,esp
   12dcb:	mov    eax,DWORD PTR [ecx+0x4]
   12dce:	push   esi
   12dcf:	mov    esi,DWORD PTR [eax+0x4]
   12dd2:	push   edi
   12dd3:	mov    edi,eax
   12dd5:	jmp    0x12df0
   12dd7:	push   DWORD PTR [ebp+0x8]
   12dda:	lea    eax,[esi+0x10]
   12ddd:	push   eax
   12dde:	call   0x19f08
   12de3:	test   al,al
   12de5:	je     0x12dec
   12de7:	mov    esi,DWORD PTR [esi+0x8]
   12dea:	jmp    0x12df0
   12dec:	mov    edi,esi
   12dee:	mov    esi,DWORD PTR [esi]
   12df0:	cmp    esi,DWORD PTR ds:0x77abc
   12df6:	jne    0x12dd7
   12df8:	mov    eax,edi
   12dfa:	pop    edi
   12dfb:	pop    esi
   12dfc:	pop    ebp
   12dfd:	ret    0x4
   12e00:	int3   
   12e01:	int3   
   12e02:	int3   
   12e03:	int3   
   12e04:	int3   
   12e05:	int3   
   12e06:	mov    edi,edi
   12e08:	push   ebp
   12e09:	mov    ebp,esp
   12e0b:	mov    eax,DWORD PTR [ecx+0x4]
   12e0e:	push   esi
   12e0f:	mov    esi,DWORD PTR [eax+0x4]
   12e12:	push   edi
   12e13:	mov    edi,eax
   12e15:	jmp    0x12e30
   12e17:	push   DWORD PTR [ebp+0x8]
   12e1a:	lea    eax,[esi+0xc]
   12e1d:	push   eax
   12e1e:	call   0x19f08
   12e23:	test   al,al
   12e25:	je     0x12e2c
   12e27:	mov    esi,DWORD PTR [esi+0x8]
   12e2a:	jmp    0x12e30
   12e2c:	mov    edi,esi
   12e2e:	mov    esi,DWORD PTR [esi]
   12e30:	cmp    esi,DWORD PTR ds:0x77ac0
   12e36:	jne    0x12e17
   12e38:	mov    eax,edi
   12e3a:	pop    edi
   12e3b:	pop    esi
   12e3c:	pop    ebp
   12e3d:	ret    0x4
   12e40:	int3   
   12e41:	int3   
   12e42:	int3   
   12e43:	int3   
   12e44:	int3   
   12e45:	int3   
   12e46:	mov    edi,edi
   12e48:	push   ebp
   12e49:	mov    ebp,esp
   12e4b:	mov    eax,DWORD PTR [ecx+0x4]
   12e4e:	mov    ecx,DWORD PTR [eax+0x4]
   12e51:	mov    edx,DWORD PTR ds:0x77ac4
   12e57:	cmp    ecx,edx
   12e59:	je     0x12e74
   12e5b:	push   esi
   12e5c:	mov    esi,DWORD PTR [ebp+0x8]
   12e5f:	mov    esi,DWORD PTR [esi]
   12e61:	cmp    DWORD PTR [ecx+0xc],esi
   12e64:	jge    0x12e6b
   12e66:	mov    ecx,DWORD PTR [ecx+0x8]
   12e69:	jmp    0x12e6f
   12e6b:	mov    eax,ecx
   12e6d:	mov    ecx,DWORD PTR [ecx]
   12e6f:	cmp    ecx,edx
   12e71:	jne    0x12e61
   12e73:	pop    esi
   12e74:	pop    ebp
   12e75:	ret    0x4
   12e78:	int3   
   12e79:	int3   
   12e7a:	int3   
   12e7b:	int3   
   12e7c:	int3   
   12e7d:	int3   
   12e7e:	mov    edi,edi
   12e80:	push   esi
   12e81:	mov    esi,ecx
   12e83:	mov    ecx,DWORD PTR [esi]
   12e85:	mov    eax,DWORD PTR [ecx+0x8]
   12e88:	cmp    eax,DWORD PTR ds:0x77ab8
   12e8e:	je     0x12e9c
   12e90:	push   eax
   12e91:	call   0x10e92
   12e96:	jmp    0x12eab
   12e98:	mov    DWORD PTR [esi],eax
   12e9a:	mov    ecx,eax
   12e9c:	mov    eax,DWORD PTR [ecx+0x4]
   12e9f:	cmp    ecx,DWORD PTR [eax+0x8]
   12ea2:	je     0x12e98
   12ea4:	mov    ecx,DWORD PTR [esi]
   12ea6:	cmp    DWORD PTR [ecx+0x8],eax
   12ea9:	je     0x12ead
   12eab:	mov    DWORD PTR [esi],eax
   12ead:	pop    esi
   12eae:	ret    
   12eaf:	int3   
   12eb0:	int3   
   12eb1:	int3   
   12eb2:	int3   
   12eb3:	int3   
   12eb4:	mov    edi,edi
   12eb6:	push   esi
   12eb7:	mov    esi,ecx
   12eb9:	mov    ecx,DWORD PTR [esi]
   12ebb:	cmp    DWORD PTR [ecx+0x10],0x0
   12ebf:	jne    0x12ece
   12ec1:	mov    eax,DWORD PTR [ecx+0x4]
   12ec4:	cmp    DWORD PTR [eax+0x4],ecx
   12ec7:	jne    0x12ece
   12ec9:	mov    eax,DWORD PTR [ecx+0x8]
   12ecc:	jmp    0x12eeb
   12ece:	mov    eax,DWORD PTR [ecx]
   12ed0:	cmp    eax,DWORD PTR ds:0x77ab4
   12ed6:	je     0x12ee4
   12ed8:	push   eax
   12ed9:	call   0x10e2c
   12ede:	jmp    0x12eeb
   12ee0:	mov    DWORD PTR [esi],eax
   12ee2:	mov    ecx,eax
   12ee4:	mov    eax,DWORD PTR [ecx+0x4]
   12ee7:	cmp    ecx,DWORD PTR [eax]
   12ee9:	je     0x12ee0
   12eeb:	mov    DWORD PTR [esi],eax
   12eed:	pop    esi
   12eee:	ret    
   12eef:	int3   
   12ef0:	int3   
   12ef1:	int3   
   12ef2:	int3   
   12ef3:	int3   
   12ef4:	mov    edi,edi
   12ef6:	push   esi
   12ef7:	mov    esi,ecx
   12ef9:	mov    ecx,DWORD PTR [esi]
   12efb:	mov    eax,DWORD PTR [ecx+0x8]
   12efe:	cmp    eax,DWORD PTR ds:0x77ab4
   12f04:	je     0x12f12
   12f06:	push   eax
   12f07:	call   0x10e4e
   12f0c:	jmp    0x12f21
   12f0e:	mov    DWORD PTR [esi],eax
   12f10:	mov    ecx,eax
   12f12:	mov    eax,DWORD PTR [ecx+0x4]
   12f15:	cmp    ecx,DWORD PTR [eax+0x8]
   12f18:	je     0x12f0e
   12f1a:	mov    ecx,DWORD PTR [esi]
   12f1c:	cmp    DWORD PTR [ecx+0x8],eax
   12f1f:	je     0x12f23
   12f21:	mov    DWORD PTR [esi],eax
   12f23:	pop    esi
   12f24:	ret    
   12f25:	int3   
   12f26:	int3   
   12f27:	int3   
   12f28:	int3   
   12f29:	int3   
   12f2a:	mov    edi,edi
   12f2c:	push   ebp
   12f2d:	mov    ebp,esp
   12f2f:	mov    edx,DWORD PTR [ebp+0x8]
   12f32:	mov    eax,DWORD PTR [edx+0x8]
   12f35:	push   esi
   12f36:	mov    esi,DWORD PTR [eax]
   12f38:	mov    DWORD PTR [edx+0x8],esi
   12f3b:	mov    esi,DWORD PTR [eax]
   12f3d:	cmp    esi,DWORD PTR ds:0x77ab4
   12f43:	je     0x12f48
   12f45:	mov    DWORD PTR [esi+0x4],edx
   12f48:	mov    esi,DWORD PTR [edx+0x4]
   12f4b:	mov    DWORD PTR [eax+0x4],esi
   12f4e:	mov    ecx,DWORD PTR [ecx+0x4]
   12f51:	pop    esi
   12f52:	cmp    edx,DWORD PTR [ecx+0x4]
   12f55:	jne    0x12f5c
   12f57:	mov    DWORD PTR [ecx+0x4],eax
   12f5a:	jmp    0x12f6a
   12f5c:	mov    ecx,DWORD PTR [edx+0x4]
   12f5f:	cmp    edx,DWORD PTR [ecx]
   12f61:	jne    0x12f67
   12f63:	mov    DWORD PTR [ecx],eax
   12f65:	jmp    0x12f6a
   12f67:	mov    DWORD PTR [ecx+0x8],eax
   12f6a:	mov    DWORD PTR [eax],edx
   12f6c:	mov    DWORD PTR [edx+0x4],eax
   12f6f:	pop    ebp
   12f70:	ret    0x4
   12f73:	int3   
   12f74:	int3   
   12f75:	int3   
   12f76:	int3   
   12f77:	int3   
   12f78:	mov    edi,edi
   12f7a:	push   ebp
   12f7b:	mov    ebp,esp
   12f7d:	mov    edx,DWORD PTR [ebp+0x8]
   12f80:	mov    eax,DWORD PTR [edx]
   12f82:	push   esi
   12f83:	mov    esi,DWORD PTR [eax+0x8]
   12f86:	mov    DWORD PTR [edx],esi
   12f88:	mov    esi,DWORD PTR [eax+0x8]
   12f8b:	cmp    esi,DWORD PTR ds:0x77ab4
   12f91:	je     0x12f96
   12f93:	mov    DWORD PTR [esi+0x4],edx
   12f96:	mov    esi,DWORD PTR [edx+0x4]
   12f99:	mov    DWORD PTR [eax+0x4],esi
   12f9c:	mov    ecx,DWORD PTR [ecx+0x4]
   12f9f:	pop    esi
   12fa0:	cmp    edx,DWORD PTR [ecx+0x4]
   12fa3:	jne    0x12faa
   12fa5:	mov    DWORD PTR [ecx+0x4],eax
   12fa8:	jmp    0x12fb9
   12faa:	mov    ecx,DWORD PTR [edx+0x4]
   12fad:	cmp    edx,DWORD PTR [ecx+0x8]
   12fb0:	jne    0x12fb7
   12fb2:	mov    DWORD PTR [ecx+0x8],eax
   12fb5:	jmp    0x12fb9
   12fb7:	mov    DWORD PTR [ecx],eax
   12fb9:	mov    DWORD PTR [eax+0x8],edx
   12fbc:	mov    DWORD PTR [edx+0x4],eax
   12fbf:	pop    ebp
   12fc0:	ret    0x4
   12fc3:	int3   
   12fc4:	int3   
   12fc5:	int3   
   12fc6:	int3   
   12fc7:	int3   
   12fc8:	mov    edi,edi
   12fca:	push   ebp
   12fcb:	mov    ebp,esp
   12fcd:	mov    eax,DWORD PTR [ecx+0x4]
   12fd0:	push   esi
   12fd1:	mov    esi,DWORD PTR [eax+0x4]
   12fd4:	push   edi
   12fd5:	mov    edi,eax
   12fd7:	jmp    0x12ff2
   12fd9:	push   DWORD PTR [ebp+0x8]
   12fdc:	lea    eax,[esi+0x10]
   12fdf:	push   eax
   12fe0:	call   0x19f08
   12fe5:	test   al,al
   12fe7:	je     0x12fee
   12fe9:	mov    esi,DWORD PTR [esi+0x8]
   12fec:	jmp    0x12ff2
   12fee:	mov    edi,esi
   12ff0:	mov    esi,DWORD PTR [esi]
   12ff2:	cmp    esi,DWORD PTR ds:0x77ab8
   12ff8:	jne    0x12fd9
   12ffa:	mov    eax,edi
   12ffc:	pop    edi
   12ffd:	pop    esi
   12ffe:	pop    ebp
   12fff:	ret    0x4
   13002:	int3   
   13003:	int3   
   13004:	int3   
   13005:	int3   
   13006:	int3   
   13007:	int3   
   13008:	mov    edi,edi
   1300a:	push   ebp
   1300b:	mov    ebp,esp
   1300d:	mov    edx,DWORD PTR [ebp+0x8]
   13010:	mov    eax,DWORD PTR [edx+0x8]
   13013:	push   esi
   13014:	mov    esi,DWORD PTR [eax]
   13016:	mov    DWORD PTR [edx+0x8],esi
   13019:	mov    esi,DWORD PTR [eax]
   1301b:	cmp    esi,DWORD PTR ds:0x77ab8
   13021:	je     0x13026
   13023:	mov    DWORD PTR [esi+0x4],edx
   13026:	mov    esi,DWORD PTR [edx+0x4]
   13029:	mov    DWORD PTR [eax+0x4],esi
   1302c:	mov    ecx,DWORD PTR [ecx+0x4]
   1302f:	pop    esi
   13030:	cmp    edx,DWORD PTR [ecx+0x4]
   13033:	jne    0x1303a
   13035:	mov    DWORD PTR [ecx+0x4],eax
   13038:	jmp    0x13048
   1303a:	mov    ecx,DWORD PTR [edx+0x4]
   1303d:	cmp    edx,DWORD PTR [ecx]
   1303f:	jne    0x13045
   13041:	mov    DWORD PTR [ecx],eax
   13043:	jmp    0x13048
   13045:	mov    DWORD PTR [ecx+0x8],eax
   13048:	mov    DWORD PTR [eax],edx
   1304a:	mov    DWORD PTR [edx+0x4],eax
   1304d:	pop    ebp
   1304e:	ret    0x4
   13051:	int3   
   13052:	int3   
   13053:	int3   
   13054:	int3   
   13055:	int3   
   13056:	mov    edi,edi
   13058:	push   ebp
   13059:	mov    ebp,esp
   1305b:	mov    edx,DWORD PTR [ebp+0x8]
   1305e:	mov    eax,DWORD PTR [edx]
   13060:	push   esi
   13061:	mov    esi,DWORD PTR [eax+0x8]
   13064:	mov    DWORD PTR [edx],esi
   13066:	mov    esi,DWORD PTR [eax+0x8]
   13069:	cmp    esi,DWORD PTR ds:0x77ab8
   1306f:	je     0x13074
   13071:	mov    DWORD PTR [esi+0x4],edx
   13074:	mov    esi,DWORD PTR [edx+0x4]
   13077:	mov    DWORD PTR [eax+0x4],esi
   1307a:	mov    ecx,DWORD PTR [ecx+0x4]
   1307d:	pop    esi
   1307e:	cmp    edx,DWORD PTR [ecx+0x4]
   13081:	jne    0x13088
   13083:	mov    DWORD PTR [ecx+0x4],eax
   13086:	jmp    0x13097
   13088:	mov    ecx,DWORD PTR [edx+0x4]
   1308b:	cmp    edx,DWORD PTR [ecx+0x8]
   1308e:	jne    0x13095
   13090:	mov    DWORD PTR [ecx+0x8],eax
   13093:	jmp    0x13097
   13095:	mov    DWORD PTR [ecx],eax
   13097:	mov    DWORD PTR [eax+0x8],edx
   1309a:	mov    DWORD PTR [edx+0x4],eax
   1309d:	pop    ebp
   1309e:	ret    0x4
   130a1:	int3   
   130a2:	int3   
   130a3:	int3   
   130a4:	int3   
   130a5:	int3   
   130a6:	mov    edi,edi
   130a8:	push   ebp
   130a9:	mov    ebp,esp
   130ab:	mov    eax,DWORD PTR [ecx+0x4]
   130ae:	mov    ecx,DWORD PTR [eax+0x4]
   130b1:	mov    edx,DWORD PTR ds:0x77ab0
   130b7:	cmp    ecx,edx
   130b9:	je     0x130d4
   130bb:	push   esi
   130bc:	mov    esi,DWORD PTR [ebp+0x8]
   130bf:	mov    esi,DWORD PTR [esi]
   130c1:	cmp    esi,DWORD PTR [ecx+0xc]
   130c4:	jae    0x130cc
   130c6:	mov    eax,ecx
   130c8:	mov    ecx,DWORD PTR [ecx]
   130ca:	jmp    0x130cf
   130cc:	mov    ecx,DWORD PTR [ecx+0x8]
   130cf:	cmp    ecx,edx
   130d1:	jne    0x130c1
   130d3:	pop    esi
   130d4:	pop    ebp
   130d5:	ret    0x4
   130d8:	int3   
   130d9:	int3   
   130da:	int3   
   130db:	int3   
   130dc:	int3   
   130dd:	int3   
   130de:	mov    edi,edi
   130e0:	push   ebp
   130e1:	mov    ebp,esp
   130e3:	mov    eax,DWORD PTR [ecx+0x4]
   130e6:	push   esi
   130e7:	mov    esi,DWORD PTR [eax+0x4]
   130ea:	push   edi
   130eb:	mov    edi,eax
   130ed:	jmp    0x13108
   130ef:	lea    eax,[esi+0x10]
   130f2:	push   eax
   130f3:	push   DWORD PTR [ebp+0x8]
   130f6:	call   0x19f08
   130fb:	test   al,al
   130fd:	je     0x13105
   130ff:	mov    edi,esi
   13101:	mov    esi,DWORD PTR [esi]
   13103:	jmp    0x13108
   13105:	mov    esi,DWORD PTR [esi+0x8]
   13108:	cmp    esi,DWORD PTR ds:0x77abc
   1310e:	jne    0x130ef
   13110:	mov    eax,edi
   13112:	pop    edi
   13113:	pop    esi
   13114:	pop    ebp
   13115:	ret    0x4
   13118:	int3   
   13119:	int3   
   1311a:	int3   
   1311b:	int3   
   1311c:	int3   
   1311d:	int3   
   1311e:	mov    edi,edi
   13120:	push   ebp
   13121:	mov    ebp,esp
   13123:	mov    edx,DWORD PTR [ebp+0x8]
   13126:	mov    eax,DWORD PTR [edx+0x8]
   13129:	push   esi
   1312a:	mov    esi,DWORD PTR [eax]
   1312c:	mov    DWORD PTR [edx+0x8],esi
   1312f:	mov    esi,DWORD PTR [eax]
   13131:	cmp    esi,DWORD PTR ds:0x77ac0
   13137:	je     0x1313c
   13139:	mov    DWORD PTR [esi+0x4],edx
   1313c:	mov    esi,DWORD PTR [edx+0x4]
   1313f:	mov    DWORD PTR [eax+0x4],esi
   13142:	mov    ecx,DWORD PTR [ecx+0x4]
   13145:	pop    esi
   13146:	cmp    edx,DWORD PTR [ecx+0x4]
   13149:	jne    0x13150
   1314b:	mov    DWORD PTR [ecx+0x4],eax
   1314e:	jmp    0x1315e
   13150:	mov    ecx,DWORD PTR [edx+0x4]
   13153:	cmp    edx,DWORD PTR [ecx]
   13155:	jne    0x1315b
   13157:	mov    DWORD PTR [ecx],eax
   13159:	jmp    0x1315e
   1315b:	mov    DWORD PTR [ecx+0x8],eax
   1315e:	mov    DWORD PTR [eax],edx
   13160:	mov    DWORD PTR [edx+0x4],eax
   13163:	pop    ebp
   13164:	ret    0x4
   13167:	int3   
   13168:	int3   
   13169:	int3   
   1316a:	int3   
   1316b:	int3   
   1316c:	mov    edi,edi
   1316e:	push   ebp
   1316f:	mov    ebp,esp
   13171:	mov    edx,DWORD PTR [ebp+0x8]
   13174:	mov    eax,DWORD PTR [edx]
   13176:	push   esi
   13177:	mov    esi,DWORD PTR [eax+0x8]
   1317a:	mov    DWORD PTR [edx],esi
   1317c:	mov    esi,DWORD PTR [eax+0x8]
   1317f:	cmp    esi,DWORD PTR ds:0x77ac0
   13185:	je     0x1318a
   13187:	mov    DWORD PTR [esi+0x4],edx
   1318a:	mov    esi,DWORD PTR [edx+0x4]
   1318d:	mov    DWORD PTR [eax+0x4],esi
   13190:	mov    ecx,DWORD PTR [ecx+0x4]
   13193:	pop    esi
   13194:	cmp    edx,DWORD PTR [ecx+0x4]
   13197:	jne    0x1319e
   13199:	mov    DWORD PTR [ecx+0x4],eax
   1319c:	jmp    0x131ad
   1319e:	mov    ecx,DWORD PTR [edx+0x4]
   131a1:	cmp    edx,DWORD PTR [ecx+0x8]
   131a4:	jne    0x131ab
   131a6:	mov    DWORD PTR [ecx+0x8],eax
   131a9:	jmp    0x131ad
   131ab:	mov    DWORD PTR [ecx],eax
   131ad:	mov    DWORD PTR [eax+0x8],edx
   131b0:	mov    DWORD PTR [edx+0x4],eax
   131b3:	pop    ebp
   131b4:	ret    0x4
   131b7:	int3   
   131b8:	int3   
   131b9:	int3   
   131ba:	int3   
   131bb:	int3   
   131bc:	mov    edi,edi
   131be:	push   ebp
   131bf:	mov    ebp,esp
   131c1:	mov    eax,DWORD PTR [ecx+0x4]
   131c4:	push   esi
   131c5:	mov    esi,DWORD PTR [eax+0x4]
   131c8:	push   edi
   131c9:	mov    edi,eax
   131cb:	jmp    0x131e6
   131cd:	lea    eax,[esi+0xc]
   131d0:	push   eax
   131d1:	push   DWORD PTR [ebp+0x8]
   131d4:	call   0x19f08
   131d9:	test   al,al
   131db:	je     0x131e3
   131dd:	mov    edi,esi
   131df:	mov    esi,DWORD PTR [esi]
   131e1:	jmp    0x131e6
   131e3:	mov    esi,DWORD PTR [esi+0x8]
   131e6:	cmp    esi,DWORD PTR ds:0x77ac0
   131ec:	jne    0x131cd
   131ee:	mov    eax,edi
   131f0:	pop    edi
   131f1:	pop    esi
   131f2:	pop    ebp
   131f3:	ret    0x4
   131f6:	int3   
   131f7:	int3   
   131f8:	int3   
   131f9:	int3   
   131fa:	int3   
   131fb:	int3   
   131fc:	mov    edi,edi
   131fe:	push   ebp
   131ff:	mov    ebp,esp
   13201:	mov    edx,DWORD PTR [ebp+0x8]
   13204:	mov    eax,DWORD PTR [edx+0x8]
   13207:	push   esi
   13208:	mov    esi,DWORD PTR [eax]
   1320a:	mov    DWORD PTR [edx+0x8],esi
   1320d:	mov    esi,DWORD PTR [eax]
   1320f:	cmp    esi,DWORD PTR ds:0x77ac4
   13215:	je     0x1321a
   13217:	mov    DWORD PTR [esi+0x4],edx
   1321a:	mov    esi,DWORD PTR [edx+0x4]
   1321d:	mov    DWORD PTR [eax+0x4],esi
   13220:	mov    ecx,DWORD PTR [ecx+0x4]
   13223:	pop    esi
   13224:	cmp    edx,DWORD PTR [ecx+0x4]
   13227:	jne    0x1322e
   13229:	mov    DWORD PTR [ecx+0x4],eax
   1322c:	jmp    0x1323c
   1322e:	mov    ecx,DWORD PTR [edx+0x4]
   13231:	cmp    edx,DWORD PTR [ecx]
   13233:	jne    0x13239
   13235:	mov    DWORD PTR [ecx],eax
   13237:	jmp    0x1323c
   13239:	mov    DWORD PTR [ecx+0x8],eax
   1323c:	mov    DWORD PTR [eax],edx
   1323e:	mov    DWORD PTR [edx+0x4],eax
   13241:	pop    ebp
   13242:	ret    0x4
   13245:	int3   
   13246:	int3   
   13247:	int3   
   13248:	int3   
   13249:	int3   
   1324a:	mov    edi,edi
   1324c:	push   ebp
   1324d:	mov    ebp,esp
   1324f:	mov    edx,DWORD PTR [ebp+0x8]
   13252:	mov    eax,DWORD PTR [edx]
   13254:	push   esi
   13255:	mov    esi,DWORD PTR [eax+0x8]
   13258:	mov    DWORD PTR [edx],esi
   1325a:	mov    esi,DWORD PTR [eax+0x8]
   1325d:	cmp    esi,DWORD PTR ds:0x77ac4
   13263:	je     0x13268
   13265:	mov    DWORD PTR [esi+0x4],edx
   13268:	mov    esi,DWORD PTR [edx+0x4]
   1326b:	mov    DWORD PTR [eax+0x4],esi
   1326e:	mov    ecx,DWORD PTR [ecx+0x4]
   13271:	pop    esi
   13272:	cmp    edx,DWORD PTR [ecx+0x4]
   13275:	jne    0x1327c
   13277:	mov    DWORD PTR [ecx+0x4],eax
   1327a:	jmp    0x1328b
   1327c:	mov    ecx,DWORD PTR [edx+0x4]
   1327f:	cmp    edx,DWORD PTR [ecx+0x8]
   13282:	jne    0x13289
   13284:	mov    DWORD PTR [ecx+0x8],eax
   13287:	jmp    0x1328b
   13289:	mov    DWORD PTR [ecx],eax
   1328b:	mov    DWORD PTR [eax+0x8],edx
   1328e:	mov    DWORD PTR [edx+0x4],eax
   13291:	pop    ebp
   13292:	ret    0x4
   13295:	int3   
   13296:	int3   
   13297:	int3   
   13298:	int3   
   13299:	int3   
   1329a:	mov    edi,edi
   1329c:	push   ebp
   1329d:	mov    ebp,esp
   1329f:	mov    eax,DWORD PTR [ecx+0x4]
   132a2:	mov    ecx,DWORD PTR [eax+0x4]
   132a5:	mov    edx,DWORD PTR ds:0x77ac4
   132ab:	cmp    ecx,edx
   132ad:	je     0x132c8
   132af:	push   esi
   132b0:	mov    esi,DWORD PTR [ebp+0x8]
   132b3:	mov    esi,DWORD PTR [esi]
   132b5:	cmp    esi,DWORD PTR [ecx+0xc]
   132b8:	jge    0x132c0
   132ba:	mov    eax,ecx
   132bc:	mov    ecx,DWORD PTR [ecx]
   132be:	jmp    0x132c3
   132c0:	mov    ecx,DWORD PTR [ecx+0x8]
   132c3:	cmp    ecx,edx
   132c5:	jne    0x132b5
   132c7:	pop    esi
   132c8:	pop    ebp
   132c9:	ret    0x4
   132cc:	int3   
   132cd:	int3   
   132ce:	int3   
   132cf:	int3   
   132d0:	int3   
   132d1:	int3   
   132d2:	mov    edi,edi
   132d4:	push   ebp
   132d5:	mov    ebp,esp
   132d7:	mov    eax,DWORD PTR [ecx+0x4]
   132da:	push   esi
   132db:	mov    esi,DWORD PTR [eax+0x4]
   132de:	push   edi
   132df:	mov    edi,eax
   132e1:	jmp    0x132fc
   132e3:	push   DWORD PTR [ebp+0x8]
   132e6:	lea    eax,[esi+0xc]
   132e9:	push   eax
   132ea:	call   0x19f38
   132ef:	test   al,al
   132f1:	je     0x132f8
   132f3:	mov    esi,DWORD PTR [esi+0x8]
   132f6:	jmp    0x132fc
   132f8:	mov    edi,esi
   132fa:	mov    esi,DWORD PTR [esi]
   132fc:	cmp    esi,DWORD PTR ds:0x77acc
   13302:	jne    0x132e3
   13304:	mov    eax,edi
   13306:	pop    edi
   13307:	pop    esi
   13308:	pop    ebp
   13309:	ret    0x4
   1330c:	int3   
   1330d:	int3   
   1330e:	int3   
   1330f:	int3   
   13310:	int3   
   13311:	int3   
   13312:	mov    edi,edi
   13314:	push   ebp
   13315:	mov    ebp,esp
   13317:	mov    eax,DWORD PTR [ecx+0x4]
   1331a:	mov    ecx,DWORD PTR [eax+0x4]
   1331d:	mov    edx,DWORD PTR ds:0x77ab4
   13323:	cmp    ecx,edx
   13325:	je     0x13340
   13327:	push   esi
   13328:	mov    esi,DWORD PTR [ebp+0x8]
   1332b:	mov    esi,DWORD PTR [esi]
   1332d:	cmp    DWORD PTR [ecx+0xc],esi
   13330:	jae    0x13337
   13332:	mov    ecx,DWORD PTR [ecx+0x8]
   13335:	jmp    0x1333b
   13337:	mov    eax,ecx
   13339:	mov    ecx,DWORD PTR [ecx]
   1333b:	cmp    ecx,edx
   1333d:	jne    0x1332d
   1333f:	pop    esi
   13340:	pop    ebp
   13341:	ret    0x4
   13344:	int3   
   13345:	int3   
   13346:	int3   
   13347:	int3   
   13348:	int3   
   13349:	int3   
   1334a:	mov    edi,edi
   1334c:	push   ebp
   1334d:	mov    ebp,esp
   1334f:	mov    eax,DWORD PTR [ecx+0x4]
   13352:	mov    ecx,DWORD PTR [eax+0x4]
   13355:	mov    edx,DWORD PTR ds:0x77ab4
   1335b:	cmp    ecx,edx
   1335d:	je     0x13378
   1335f:	push   esi
   13360:	mov    esi,DWORD PTR [ebp+0x8]
   13363:	mov    esi,DWORD PTR [esi]
   13365:	cmp    esi,DWORD PTR [ecx+0xc]
   13368:	jae    0x13370
   1336a:	mov    eax,ecx
   1336c:	mov    ecx,DWORD PTR [ecx]
   1336e:	jmp    0x13373
   13370:	mov    ecx,DWORD PTR [ecx+0x8]
   13373:	cmp    ecx,edx
   13375:	jne    0x13365
   13377:	pop    esi
   13378:	pop    ebp
   13379:	ret    0x4
   1337c:	int3   
   1337d:	int3   
   1337e:	int3   
   1337f:	int3   
   13380:	int3   
   13381:	int3   
   13382:	mov    edi,edi
   13384:	push   ebp
   13385:	mov    ebp,esp
   13387:	mov    edx,DWORD PTR [ebp+0x8]
   1338a:	mov    eax,DWORD PTR [edx+0x8]
   1338d:	push   esi
   1338e:	mov    esi,DWORD PTR [eax]
   13390:	mov    DWORD PTR [edx+0x8],esi
   13393:	mov    esi,DWORD PTR [eax]
   13395:	cmp    esi,DWORD PTR ds:0x77acc
   1339b:	je     0x133a0
   1339d:	mov    DWORD PTR [esi+0x4],edx
   133a0:	mov    esi,DWORD PTR [edx+0x4]
   133a3:	mov    DWORD PTR [eax+0x4],esi
   133a6:	mov    ecx,DWORD PTR [ecx+0x4]
   133a9:	pop    esi
   133aa:	cmp    edx,DWORD PTR [ecx+0x4]
   133ad:	jne    0x133b4
   133af:	mov    DWORD PTR [ecx+0x4],eax
   133b2:	jmp    0x133c2
   133b4:	mov    ecx,DWORD PTR [edx+0x4]
   133b7:	cmp    edx,DWORD PTR [ecx]
   133b9:	jne    0x133bf
   133bb:	mov    DWORD PTR [ecx],eax
   133bd:	jmp    0x133c2
   133bf:	mov    DWORD PTR [ecx+0x8],eax
   133c2:	mov    DWORD PTR [eax],edx
   133c4:	mov    DWORD PTR [edx+0x4],eax
   133c7:	pop    ebp
   133c8:	ret    0x4
   133cb:	int3   
   133cc:	int3   
   133cd:	int3   
   133ce:	int3   
   133cf:	int3   
   133d0:	mov    edi,edi
   133d2:	push   ebp
   133d3:	mov    ebp,esp
   133d5:	mov    edx,DWORD PTR [ebp+0x8]
   133d8:	mov    eax,DWORD PTR [edx]
   133da:	push   esi
   133db:	mov    esi,DWORD PTR [eax+0x8]
   133de:	mov    DWORD PTR [edx],esi
   133e0:	mov    esi,DWORD PTR [eax+0x8]
   133e3:	cmp    esi,DWORD PTR ds:0x77acc
   133e9:	je     0x133ee
   133eb:	mov    DWORD PTR [esi+0x4],edx
   133ee:	mov    esi,DWORD PTR [edx+0x4]
   133f1:	mov    DWORD PTR [eax+0x4],esi
   133f4:	mov    ecx,DWORD PTR [ecx+0x4]
   133f7:	pop    esi
   133f8:	cmp    edx,DWORD PTR [ecx+0x4]
   133fb:	jne    0x13402
   133fd:	mov    DWORD PTR [ecx+0x4],eax
   13400:	jmp    0x13411
   13402:	mov    ecx,DWORD PTR [edx+0x4]
   13405:	cmp    edx,DWORD PTR [ecx+0x8]
   13408:	jne    0x1340f
   1340a:	mov    DWORD PTR [ecx+0x8],eax
   1340d:	jmp    0x13411
   1340f:	mov    DWORD PTR [ecx],eax
   13411:	mov    DWORD PTR [eax+0x8],edx
   13414:	mov    DWORD PTR [edx+0x4],eax
   13417:	pop    ebp
   13418:	ret    0x4
   1341b:	int3   
   1341c:	int3   
   1341d:	int3   
   1341e:	int3   
   1341f:	int3   
   13420:	mov    edi,edi
   13422:	push   esi
   13423:	mov    esi,ecx
   13425:	mov    ecx,DWORD PTR [esi]
   13427:	cmp    DWORD PTR [ecx+0x1c],0x0
   1342b:	jne    0x1343a
   1342d:	mov    eax,DWORD PTR [ecx+0x4]
   13430:	cmp    DWORD PTR [eax+0x4],ecx
   13433:	jne    0x1343a
   13435:	mov    eax,DWORD PTR [ecx+0x8]
   13438:	jmp    0x13457
   1343a:	mov    eax,DWORD PTR [ecx]
   1343c:	cmp    eax,DWORD PTR ds:0x77acc
   13442:	je     0x13450
   13444:	push   eax
   13445:	call   0x111de
   1344a:	jmp    0x13457
   1344c:	mov    DWORD PTR [esi],eax
   1344e:	mov    ecx,eax
   13450:	mov    eax,DWORD PTR [ecx+0x4]
   13453:	cmp    ecx,DWORD PTR [eax]
   13455:	je     0x1344c
   13457:	mov    DWORD PTR [esi],eax
   13459:	pop    esi
   1345a:	ret    
   1345b:	int3   
   1345c:	int3   
   1345d:	int3   
   1345e:	int3   
   1345f:	int3   
   13460:	mov    edi,edi
   13462:	push   ebp
   13463:	mov    ebp,esp
   13465:	cmp    DWORD PTR [ebp+0x8],0x0
   13469:	jge    0x1346f
   1346b:	and    DWORD PTR [ebp+0x8],0x0
   1346f:	push   DWORD PTR [ebp+0x8]
   13472:	call   0x11d08
   13477:	pop    ecx
   13478:	pop    ebp
   13479:	ret    0x8
   1347c:	int3   
   1347d:	int3   
   1347e:	int3   
   1347f:	int3   
   13480:	int3   
   13481:	int3   
   13482:	mov    edi,edi
   13484:	push   ebp
   13485:	mov    ebp,esp
   13487:	push   esi
   13488:	mov    esi,ecx
   1348a:	call   0x12b8a
   1348f:	test   BYTE PTR [ebp+0x8],0x1
   13493:	je     0x1349c
   13495:	push   esi
   13496:	call   0x11d3e
   1349b:	pop    ecx
   1349c:	mov    eax,esi
   1349e:	pop    esi
   1349f:	pop    ebp
   134a0:	ret    0x4
   134a3:	int3   
   134a4:	int3   
   134a5:	int3   
   134a6:	int3   
   134a7:	int3   
   134a8:	mov    edi,edi
   134aa:	push   ebp
   134ab:	mov    ebp,esp
   134ad:	push   edi
   134ae:	mov    edi,DWORD PTR [ebp+0xc]
   134b1:	cmp    DWORD PTR [ebp+0x8],edi
   134b4:	je     0x134ca
   134b6:	push   esi
   134b7:	mov    esi,DWORD PTR [ebp+0x10]
   134ba:	inc    DWORD PTR [esi]
   134bc:	lea    ecx,[ebp+0x8]
   134bf:	call   0x10ef4
   134c4:	cmp    DWORD PTR [ebp+0x8],edi
   134c7:	jne    0x134ba
   134c9:	pop    esi
   134ca:	pop    edi
   134cb:	pop    ebp
   134cc:	ret    
   134cd:	int3   
   134ce:	int3   
   134cf:	int3   
   134d0:	int3   
   134d1:	int3   
   134d2:	mov    edi,edi
   134d4:	push   ebp
   134d5:	mov    ebp,esp
   134d7:	push   edi
   134d8:	mov    edi,DWORD PTR [ebp+0xc]
   134db:	cmp    DWORD PTR [ebp+0x8],edi
   134de:	je     0x134f4
   134e0:	push   esi
   134e1:	mov    esi,DWORD PTR [ebp+0x10]
   134e4:	inc    DWORD PTR [esi]
   134e6:	lea    ecx,[ebp+0x8]
   134e9:	call   0x11172
   134ee:	cmp    DWORD PTR [ebp+0x8],edi
   134f1:	jne    0x134e4
   134f3:	pop    esi
   134f4:	pop    edi
   134f5:	pop    ebp
   134f6:	ret    
   134f7:	int3   
   134f8:	int3   
   134f9:	int3   
   134fa:	int3   
   134fb:	int3   
   134fc:	mov    edi,edi
   134fe:	push   ebp
   134ff:	mov    ebp,esp
   13501:	push   edi
   13502:	mov    edi,DWORD PTR [ebp+0xc]
   13505:	cmp    DWORD PTR [ebp+0x8],edi
   13508:	je     0x1351e
   1350a:	push   esi
   1350b:	mov    esi,DWORD PTR [ebp+0x10]
   1350e:	inc    DWORD PTR [esi]
   13510:	lea    ecx,[ebp+0x8]
   13513:	call   0x111a8
   13518:	cmp    DWORD PTR [ebp+0x8],edi
   1351b:	jne    0x1350e
   1351d:	pop    esi
   1351e:	pop    edi
   1351f:	pop    ebp
   13520:	ret    
   13521:	int3   
   13522:	int3   
   13523:	int3   
   13524:	int3   
   13525:	int3   
   13526:	mov    edi,edi
   13528:	push   ebp
   13529:	mov    ebp,esp
   1352b:	push   edi
   1352c:	mov    edi,DWORD PTR [ebp+0xc]
   1352f:	cmp    DWORD PTR [ebp+0x8],edi
   13532:	je     0x13548
   13534:	push   esi
   13535:	mov    esi,DWORD PTR [ebp+0x10]
   13538:	inc    DWORD PTR [esi]
   1353a:	lea    ecx,[ebp+0x8]
   1353d:	call   0x12ef4
   13542:	cmp    DWORD PTR [ebp+0x8],edi
   13545:	jne    0x13538
   13547:	pop    esi
   13548:	pop    edi
   13549:	pop    ebp
   1354a:	ret    
   1354b:	int3   
   1354c:	int3   
   1354d:	int3   
   1354e:	int3   
   1354f:	int3   
   13550:	mov    edi,edi
   13552:	push   esi
   13553:	mov    esi,ecx
   13555:	push   DWORD PTR [esi+0x38]
   13558:	call   0x11d3e
   1355d:	push   DWORD PTR [esi+0x18]
   13560:	call   0x11d3e
   13565:	push   DWORD PTR [esi+0x10]
   13568:	call   0x11d3e
   1356d:	push   DWORD PTR [esi+0x8]
   13570:	call   0x11d3e
   13575:	push   DWORD PTR [esi]
   13577:	call   0x11d3e
   1357c:	add    esp,0x14
   1357f:	pop    esi
   13580:	ret    
   13581:	int3   
   13582:	int3   
   13583:	int3   
   13584:	int3   
   13585:	int3   
   13586:	mov    edi,edi
   13588:	push   ebp
   13589:	mov    ebp,esp
   1358b:	push   esi
   1358c:	mov    esi,ecx
   1358e:	mov    ecx,DWORD PTR [esi]
   13590:	test   ecx,ecx
   13592:	je     0x13599
   13594:	call   0x11d80
   13599:	mov    eax,DWORD PTR [ebp+0x8]
   1359c:	mov    eax,DWORD PTR [eax]
   1359e:	mov    DWORD PTR [esi],eax
   135a0:	inc    DWORD PTR [eax+0x4]
   135a3:	mov    eax,esi
   135a5:	pop    esi
   135a6:	pop    ebp
   135a7:	ret    0x4
   135aa:	int3   
   135ab:	int3   
   135ac:	int3   
   135ad:	int3   
   135ae:	int3   
   135af:	int3   
   135b0:	mov    edi,edi
   135b2:	push   ebp
   135b3:	mov    ebp,esp
   135b5:	push   ebx
   135b6:	push   esi
   135b7:	push   edi
   135b8:	mov    edi,DWORD PTR [ebp+0xc]
   135bb:	mov    esi,ecx
   135bd:	and    DWORD PTR [esi+0x4],0x0
   135c1:	lea    eax,[edi+0x1]
   135c4:	push   eax
   135c5:	mov    DWORD PTR [esi+0x8],edi
   135c8:	call   0x11d08
   135cd:	push   edi
   135ce:	push   DWORD PTR [ebp+0x8]
   135d1:	mov    ebx,eax
   135d3:	push   ebx
   135d4:	call   0x1e1b6
   135d9:	add    esp,0x10
   135dc:	inc    DWORD PTR [esi+0x4]
   135df:	pop    edi
   135e0:	mov    DWORD PTR [esi],ebx
   135e2:	mov    eax,esi
   135e4:	pop    esi
   135e5:	pop    ebx
   135e6:	pop    ebp
   135e7:	ret    0x8
   135ea:	int3   
   135eb:	int3   
   135ec:	int3   
   135ed:	int3   
   135ee:	int3   
   135ef:	int3   
   135f0:	mov    edi,edi
   135f2:	push   ebp
   135f3:	mov    ebp,esp
   135f5:	sub    esp,0x18
   135f8:	lea    eax,[ebp-0x18]
   135fb:	push   eax
   135fc:	push   DWORD PTR [ebp+0x8]
   135ff:	call   0x11ef4
   13604:	test   al,al
   13606:	je     0x13675
   13608:	lea    eax,[ebp-0x4]
   1360b:	push   eax
   1360c:	push   DWORD PTR [ebp+0xc]
   1360f:	call   0x112ce
   13614:	call   eax
   13616:	test   eax,eax
   13618:	jl     0x13675
   1361a:	push   esi
   1361b:	push   0x5
   1361d:	call   0x128fc
   13622:	mov    esi,eax
   13624:	test   esi,esi
   13626:	je     0x13674
   13628:	mov    edx,DWORD PTR [ebp+0x10]
   1362b:	cmp    DWORD PTR [esi+0x44],edx
   1362e:	je     0x1363d
   13630:	mov    ecx,DWORD PTR [eax]
   13632:	test   ecx,ecx
   13634:	je     0x13661
   13636:	add    eax,ecx
   13638:	cmp    DWORD PTR [eax+0x44],edx
   1363b:	jne    0x13630
   1363d:	cmp    DWORD PTR [eax+0x4],0x0
   13641:	je     0x13661
   13643:	mov    ecx,DWORD PTR [eax+0xd8]
   13649:	mov    eax,DWORD PTR [eax+0xdc]
   1364f:	mov    DWORD PTR [ebp-0x14],eax
   13652:	lea    eax,[ebp-0x18]
   13655:	push   eax
   13656:	push   DWORD PTR [ebp+0x8]
   13659:	mov    DWORD PTR [ebp-0x18],ecx
   1365c:	call   0x11f44
   13661:	mov    ecx,DWORD PTR [ebp-0x4]
   13664:	call   DWORD PTR ds:0x1f850
   1366a:	push   0x0
   1366c:	push   esi
   1366d:	call   0x11640
   13672:	call   eax
   13674:	pop    esi
   13675:	leave  
   13676:	ret    0x10
   13679:	int3   
   1367a:	int3   
   1367b:	int3   
   1367c:	int3   
   1367d:	int3   
   1367e:	mov    edi,edi
   13680:	push   ebp
   13681:	mov    ebp,esp
   13683:	push   esi
   13684:	push   DWORD PTR [ebp+0xc]
   13687:	mov    esi,ecx
   13689:	push   DWORD PTR [ebp+0x8]
   1368c:	call   0x12ba8
   13691:	mov    eax,esi
   13693:	pop    esi
   13694:	pop    ebp
   13695:	ret    0x8
   13698:	int3   
   13699:	int3   
   1369a:	int3   
   1369b:	int3   
   1369c:	int3   
   1369d:	int3   
   1369e:	mov    edi,edi
   136a0:	push   ebp
   136a1:	mov    ebp,esp
   136a3:	mov    eax,DWORD PTR [ebp+0x8]
   136a6:	push   esi
   136a7:	push   DWORD PTR [eax+0x4]
   136aa:	mov    esi,ecx
   136ac:	push   DWORD PTR [eax]
   136ae:	call   0x12ba8
   136b3:	mov    eax,esi
   136b5:	pop    esi
   136b6:	pop    ebp
   136b7:	ret    0x4
   136ba:	int3   
   136bb:	int3   
   136bc:	int3   
   136bd:	int3   
   136be:	int3   
   136bf:	int3   
   136c0:	mov    edi,edi
   136c2:	push   esi
   136c3:	mov    esi,ecx
   136c5:	lea    ecx,[esi+0x8]
   136c8:	call   0x13550
   136cd:	push   DWORD PTR [esi]
   136cf:	call   0x11d3e
   136d4:	pop    ecx
   136d5:	pop    esi
   136d6:	ret    
   136d7:	int3   
   136d8:	int3   
   136d9:	int3   
   136da:	int3   
   136db:	int3   
   136dc:	mov    edi,edi
   136de:	push   ebp
   136df:	mov    ebp,esp
   136e1:	push   esi
   136e2:	push   DWORD PTR [ebp+0xc]
   136e5:	mov    esi,ecx
   136e7:	push   DWORD PTR [ebp+0x8]
   136ea:	call   0x12c62
   136ef:	mov    eax,esi
   136f1:	pop    esi
   136f2:	pop    ebp
   136f3:	ret    0x8
   136f6:	int3   
   136f7:	int3   
   136f8:	int3   
   136f9:	int3   
   136fa:	int3   
   136fb:	int3   
   136fc:	mov    edi,edi
   136fe:	push   ebp
   136ff:	mov    ebp,esp
   13701:	mov    eax,DWORD PTR [ebp+0x8]
   13704:	push   esi
   13705:	push   DWORD PTR [eax+0x4]
   13708:	mov    esi,ecx
   1370a:	push   DWORD PTR [eax]
   1370c:	call   0x12c62
   13711:	mov    eax,esi
   13713:	pop    esi
   13714:	pop    ebp
   13715:	ret    0x4
   13718:	int3   
   13719:	int3   
   1371a:	int3   
   1371b:	int3   
   1371c:	int3   
   1371d:	int3   
   1371e:	mov    edi,edi
   13720:	push   ebp
   13721:	mov    ebp,esp
   13723:	push   esi
   13724:	mov    esi,DWORD PTR [ebp+0x8]
   13727:	lea    eax,[ebp+0xc]
   1372a:	push   eax
   1372b:	mov    ecx,esi
   1372d:	call   0x136fc
   13732:	xor    ecx,ecx
   13734:	inc    ecx
   13735:	cmp    DWORD PTR [esi+0x4],ecx
   13738:	jbe    0x1374c
   1373a:	mov    eax,DWORD PTR [esi]
   1373c:	lea    eax,[eax+ecx*2]
   1373f:	mov    dx,WORD PTR [eax-0x2]
   13743:	xor    WORD PTR [eax],dx
   13746:	inc    ecx
   13747:	cmp    ecx,DWORD PTR [esi+0x4]
   1374a:	jb     0x1373a
   1374c:	push   DWORD PTR [ebp+0xc]
   1374f:	call   0x11d3e
   13754:	pop    ecx
   13755:	mov    eax,esi
   13757:	pop    esi
   13758:	pop    ebp
   13759:	ret    0xc
   1375c:	int3   
   1375d:	int3   
   1375e:	int3   
   1375f:	int3   
   13760:	int3   
   13761:	int3   
   13762:	mov    edi,edi
   13764:	push   ebp
   13765:	mov    ebp,esp
   13767:	push   esi
   13768:	mov    esi,DWORD PTR [ebp+0x8]
   1376b:	lea    eax,[ebp+0xc]
   1376e:	push   eax
   1376f:	mov    ecx,esi
   13771:	call   0x1369e
   13776:	xor    ecx,ecx
   13778:	inc    ecx
   13779:	cmp    DWORD PTR [esi+0x4],ecx
   1377c:	jbe    0x1378d
   1377e:	mov    eax,DWORD PTR [esi]
   13780:	add    eax,ecx
   13782:	mov    dl,BYTE PTR [eax-0x1]
   13785:	xor    BYTE PTR [eax],dl
   13787:	inc    ecx
   13788:	cmp    ecx,DWORD PTR [esi+0x4]
   1378b:	jb     0x1377e
   1378d:	push   DWORD PTR [ebp+0xc]
   13790:	call   0x11d3e
   13795:	pop    ecx
   13796:	mov    eax,esi
   13798:	pop    esi
   13799:	pop    ebp
   1379a:	ret    0xc
   1379d:	int3   
   1379e:	int3   
   1379f:	int3   
   137a0:	int3   
   137a1:	int3   
   137a2:	mov    edi,edi
   137a4:	push   esi
   137a5:	mov    esi,ecx
   137a7:	mov    ecx,DWORD PTR [esi]
   137a9:	mov    eax,DWORD PTR [ecx+0x8]
   137ac:	cmp    eax,DWORD PTR ds:0x77abc
   137b2:	je     0x137c0
   137b4:	push   eax
   137b5:	call   0x12cce
   137ba:	jmp    0x137cf
   137bc:	mov    DWORD PTR [esi],eax
   137be:	mov    ecx,eax
   137c0:	mov    eax,DWORD PTR [ecx+0x4]
   137c3:	cmp    ecx,DWORD PTR [eax+0x8]
   137c6:	je     0x137bc
   137c8:	mov    ecx,DWORD PTR [esi]
   137ca:	cmp    DWORD PTR [ecx+0x8],eax
   137cd:	je     0x137d1
   137cf:	mov    DWORD PTR [esi],eax
   137d1:	pop    esi
   137d2:	ret    
   137d3:	int3   
   137d4:	int3   
   137d5:	int3   
   137d6:	int3   
   137d7:	int3   
   137d8:	mov    edi,edi
   137da:	push   ebp
   137db:	mov    ebp,esp
   137dd:	push   esi
   137de:	push   DWORD PTR [ebp+0x8]
   137e1:	mov    esi,ecx
   137e3:	call   0x1369e
   137e8:	push   DWORD PTR [ebp+0xc]
   137eb:	lea    ecx,[esi+0x8]
   137ee:	call   0x1369e
   137f3:	mov    eax,esi
   137f5:	pop    esi
   137f6:	pop    ebp
   137f7:	ret    0x8
   137fa:	int3   
   137fb:	int3   
   137fc:	int3   
   137fd:	int3   
   137fe:	int3   
   137ff:	int3   
   13800:	mov    edi,edi
   13802:	push   ebp
   13803:	mov    ebp,esp
   13805:	mov    eax,DWORD PTR [ebp+0x8]
   13808:	mov    eax,DWORD PTR [eax]
   1380a:	push   esi
   1380b:	push   DWORD PTR [ebp+0xc]
   1380e:	mov    esi,ecx
   13810:	lea    ecx,[esi+0x4]
   13813:	mov    DWORD PTR [esi],eax
   13815:	call   0x11d5c
   1381a:	mov    eax,esi
   1381c:	pop    esi
   1381d:	pop    ebp
   1381e:	ret    0x8
   13821:	int3   
   13822:	int3   
   13823:	int3   
   13824:	int3   
   13825:	int3   
   13826:	mov    edi,edi
   13828:	push   ebp
   13829:	mov    ebp,esp
   1382b:	push   esi
   1382c:	push   edi
   1382d:	mov    edi,DWORD PTR [ebp+0x8]
   13830:	push   edi
   13831:	mov    esi,ecx
   13833:	call   0x1369e
   13838:	lea    eax,[edi+0x8]
   1383b:	push   eax
   1383c:	lea    ecx,[esi+0x8]
   1383f:	call   0x1369e
   13844:	lea    eax,[edi+0x10]
   13847:	push   eax
   13848:	lea    ecx,[esi+0x10]
   1384b:	call   0x1369e
   13850:	lea    eax,[edi+0x18]
   13853:	push   eax
   13854:	lea    ecx,[esi+0x18]
   13857:	call   0x1369e
   1385c:	mov    eax,DWORD PTR [edi+0x20]
   1385f:	mov    DWORD PTR [esi+0x20],eax
   13862:	mov    eax,DWORD PTR [edi+0x28]
   13865:	mov    DWORD PTR [esi+0x28],eax
   13868:	mov    eax,DWORD PTR [edi+0x2c]
   1386b:	mov    DWORD PTR [esi+0x2c],eax
   1386e:	mov    eax,DWORD PTR [edi+0x30]
   13871:	mov    DWORD PTR [esi+0x30],eax
   13874:	mov    eax,DWORD PTR [edi+0x34]
   13877:	add    edi,0x38
   1387a:	push   edi
   1387b:	lea    ecx,[esi+0x38]
   1387e:	mov    DWORD PTR [esi+0x34],eax
   13881:	call   0x1369e
   13886:	pop    edi
   13887:	mov    eax,esi
   13889:	pop    esi
   1388a:	pop    ebp
   1388b:	ret    0x4
   1388e:	int3   
   1388f:	int3   
   13890:	int3   
   13891:	int3   
   13892:	int3   
   13893:	int3   
   13894:	mov    edi,edi
   13896:	push   ebp
   13897:	mov    ebp,esp
   13899:	push   ebx
   1389a:	push   esi
   1389b:	push   edi
   1389c:	mov    edi,DWORD PTR [ebp+0x8]
   1389f:	mov    ebx,ecx
   138a1:	mov    esi,edi
   138a3:	cmp    edi,DWORD PTR ds:0x77ab0
   138a9:	je     0x138c8
   138ab:	push   DWORD PTR [esi+0x8]
   138ae:	mov    ecx,ebx
   138b0:	call   0x13894
   138b5:	mov    esi,DWORD PTR [esi]
   138b7:	push   edi
   138b8:	call   0x11d3e
   138bd:	pop    ecx
   138be:	mov    edi,esi
   138c0:	cmp    esi,DWORD PTR ds:0x77ab0
   138c6:	jne    0x138ab
   138c8:	pop    edi
   138c9:	pop    esi
   138ca:	pop    ebx
   138cb:	pop    ebp
   138cc:	ret    0x4
   138cf:	int3   
   138d0:	int3   
   138d1:	int3   
   138d2:	int3   
   138d3:	int3   
   138d4:	mov    edi,edi
   138d6:	push   ebp
   138d7:	mov    ebp,esp
   138d9:	push   esi
   138da:	push   DWORD PTR [ebp+0x8]
   138dd:	mov    esi,ecx
   138df:	call   0x136fc
   138e4:	push   DWORD PTR [ebp+0xc]
   138e7:	lea    ecx,[esi+0x8]
   138ea:	call   0x136fc
   138ef:	mov    eax,esi
   138f1:	pop    esi
   138f2:	pop    ebp
   138f3:	ret    0x8
   138f6:	int3   
   138f7:	int3   
   138f8:	int3   
   138f9:	int3   
   138fa:	int3   
   138fb:	int3   
   138fc:	mov    edi,edi
   138fe:	push   ebp
   138ff:	mov    ebp,esp
   13901:	push   ebx
   13902:	push   esi
   13903:	push   edi
   13904:	mov    edi,DWORD PTR [ebp+0x8]
   13907:	mov    ebx,ecx
   13909:	mov    esi,edi
   1390b:	cmp    edi,DWORD PTR ds:0x77ab4
   13911:	je     0x13930
   13913:	push   DWORD PTR [esi+0x8]
   13916:	mov    ecx,ebx
   13918:	call   0x138fc
   1391d:	mov    esi,DWORD PTR [esi]
   1391f:	push   edi
   13920:	call   0x11d3e
   13925:	pop    ecx
   13926:	mov    edi,esi
   13928:	cmp    esi,DWORD PTR ds:0x77ab4
   1392e:	jne    0x13913
   13930:	pop    edi
   13931:	pop    esi
   13932:	pop    ebx
   13933:	pop    ebp
   13934:	ret    0x4
   13937:	int3   
   13938:	int3   
   13939:	int3   
   1393a:	int3   
   1393b:	int3   
   1393c:	mov    edi,edi
   1393e:	push   ebp
   1393f:	mov    ebp,esp
   13941:	push   ecx
   13942:	push   DWORD PTR [ebp-0x4]
   13945:	push   DWORD PTR [ebp+0x10]
   13948:	push   DWORD PTR [ebp+0xc]
   1394b:	push   DWORD PTR [ebp+0x8]
   1394e:	call   0x134a8
   13953:	add    esp,0x10
   13956:	leave  
   13957:	ret    
   13958:	int3   
   13959:	int3   
   1395a:	int3   
   1395b:	int3   
   1395c:	int3   
   1395d:	int3   
   1395e:	mov    edi,edi
   13960:	push   ebp
   13961:	mov    ebp,esp
   13963:	push   ecx
   13964:	push   DWORD PTR [ebp-0x4]
   13967:	push   DWORD PTR [ebp+0x10]
   1396a:	push   DWORD PTR [ebp+0xc]
   1396d:	push   DWORD PTR [ebp+0x8]
   13970:	call   0x134d2
   13975:	add    esp,0x10
   13978:	leave  
   13979:	ret    
   1397a:	int3   
   1397b:	int3   
   1397c:	int3   
   1397d:	int3   
   1397e:	int3   
   1397f:	int3   
   13980:	mov    edi,edi
   13982:	push   ebp
   13983:	mov    ebp,esp
   13985:	push   ecx
   13986:	push   DWORD PTR [ebp-0x4]
   13989:	push   DWORD PTR [ebp+0x10]
   1398c:	push   DWORD PTR [ebp+0xc]
   1398f:	push   DWORD PTR [ebp+0x8]
   13992:	call   0x134fc
   13997:	add    esp,0x10
   1399a:	leave  
   1399b:	ret    
   1399c:	int3   
   1399d:	int3   
   1399e:	int3   
   1399f:	int3   
   139a0:	int3   
   139a1:	int3   
   139a2:	mov    edi,edi
   139a4:	push   ebp
   139a5:	mov    ebp,esp
   139a7:	push   ecx
   139a8:	push   DWORD PTR [ebp-0x4]
   139ab:	push   DWORD PTR [ebp+0x10]
   139ae:	push   DWORD PTR [ebp+0xc]
   139b1:	push   DWORD PTR [ebp+0x8]
   139b4:	call   0x13526
   139b9:	add    esp,0x10
   139bc:	leave  
   139bd:	ret    
   139be:	int3   
   139bf:	int3   
   139c0:	int3   
   139c1:	int3   
   139c2:	int3   
   139c3:	int3   
   139c4:	mov    edi,edi
   139c6:	push   ebp
   139c7:	mov    ebp,esp
   139c9:	mov    ecx,DWORD PTR [ebp+0x8]
   139cc:	push   0x0
   139ce:	call   0x13482
   139d3:	pop    ebp
   139d4:	ret    0x4
   139d7:	int3   
   139d8:	int3   
   139d9:	int3   
   139da:	int3   
   139db:	int3   
   139dc:	mov    edi,edi
   139de:	push   ebp
   139df:	mov    ebp,esp
   139e1:	push   esi
   139e2:	push   edi
   139e3:	mov    edi,DWORD PTR [ebp+0x8]
   139e6:	push   edi
   139e7:	mov    esi,ecx
   139e9:	call   0x13826
   139ee:	mov    eax,DWORD PTR [edi+0x40]
   139f1:	mov    DWORD PTR [esi+0x40],eax
   139f4:	pop    edi
   139f5:	mov    eax,esi
   139f7:	pop    esi
   139f8:	pop    ebp
   139f9:	ret    0x4
   139fc:	int3   
   139fd:	int3   
   139fe:	int3   
   139ff:	int3   
   13a00:	int3   
   13a01:	int3   
   13a02:	mov    edi,edi
   13a04:	push   ebp
   13a05:	mov    ebp,esp
   13a07:	push   esi
   13a08:	push   edi
   13a09:	mov    edi,DWORD PTR [ebp+0x8]
   13a0c:	push   edi
   13a0d:	mov    esi,ecx
   13a0f:	call   0x1369e
   13a14:	add    edi,0x8
   13a17:	push   edi
   13a18:	lea    ecx,[esi+0x8]
   13a1b:	call   0x139dc
   13a20:	pop    edi
   13a21:	mov    eax,esi
   13a23:	pop    esi
   13a24:	pop    ebp
   13a25:	ret    0x4
   13a28:	int3   
   13a29:	int3   
   13a2a:	int3   
   13a2b:	int3   
   13a2c:	int3   
   13a2d:	int3   
   13a2e:	mov    edi,edi
   13a30:	push   ebp
   13a31:	mov    ebp,esp
   13a33:	push   esi
   13a34:	push   edi
   13a35:	mov    edi,DWORD PTR [ebp+0x8]
   13a38:	push   edi
   13a39:	mov    esi,ecx
   13a3b:	call   0x1369e
   13a40:	add    edi,0x8
   13a43:	push   edi
   13a44:	lea    ecx,[esi+0x8]
   13a47:	call   0x13826
   13a4c:	pop    edi
   13a4d:	mov    eax,esi
   13a4f:	pop    esi
   13a50:	pop    ebp
   13a51:	ret    0x4
   13a54:	int3   
   13a55:	int3   
   13a56:	int3   
   13a57:	int3   
   13a58:	int3   
   13a59:	int3   
   13a5a:	mov    edi,edi
   13a5c:	push   ebp
   13a5d:	mov    ebp,esp
   13a5f:	push   esi
   13a60:	mov    esi,ecx
   13a62:	call   0x136c0
   13a67:	test   BYTE PTR [ebp+0x8],0x1
   13a6b:	je     0x13a74
   13a6d:	push   esi
   13a6e:	call   0x11d3e
   13a73:	pop    ecx
   13a74:	mov    eax,esi
   13a76:	pop    esi
   13a77:	pop    ebp
   13a78:	ret    0x4
   13a7b:	int3   
   13a7c:	int3   
   13a7d:	int3   
   13a7e:	int3   
   13a7f:	int3   
   13a80:	mov    edi,edi
   13a82:	push   ebp
   13a83:	mov    ebp,esp
   13a85:	push   esi
   13a86:	push   edi
   13a87:	mov    edi,DWORD PTR [ebp+0x8]
   13a8a:	push   edi
   13a8b:	mov    esi,ecx
   13a8d:	call   0x1369e
   13a92:	add    edi,0x8
   13a95:	push   edi
   13a96:	lea    ecx,[esi+0x8]
   13a99:	call   0x1369e
   13a9e:	pop    edi
   13a9f:	mov    eax,esi
   13aa1:	pop    esi
   13aa2:	pop    ebp
   13aa3:	ret    0x4
   13aa6:	int3   
   13aa7:	int3   
   13aa8:	int3   
   13aa9:	int3   
   13aaa:	int3   
   13aab:	int3   
   13aac:	mov    edi,edi
   13aae:	push   ebp
   13aaf:	mov    ebp,esp
   13ab1:	mov    eax,DWORD PTR [ebp+0x8]
   13ab4:	push   esi
   13ab5:	mov    esi,ecx
   13ab7:	mov    ecx,DWORD PTR [eax]
   13ab9:	add    eax,0x4
   13abc:	mov    DWORD PTR [esi],ecx
   13abe:	push   eax
   13abf:	lea    ecx,[esi+0x4]
   13ac2:	call   0x11d5c
   13ac7:	mov    eax,esi
   13ac9:	pop    esi
   13aca:	pop    ebp
   13acb:	ret    0x4
   13ace:	int3   
   13acf:	int3   
   13ad0:	int3   
   13ad1:	int3   
   13ad2:	int3   
   13ad3:	int3   
   13ad4:	mov    edi,edi
   13ad6:	push   ebp
   13ad7:	mov    ebp,esp
   13ad9:	push   esi
   13ada:	mov    esi,ecx
   13adc:	mov    ecx,DWORD PTR [esi+0x4]
   13adf:	test   ecx,ecx
   13ae1:	je     0x13ae8
   13ae3:	call   0x11d80
   13ae8:	test   BYTE PTR [ebp+0x8],0x1
   13aec:	je     0x13af5
   13aee:	push   esi
   13aef:	call   0x11d3e
   13af4:	pop    ecx
   13af5:	mov    eax,esi
   13af7:	pop    esi
   13af8:	pop    ebp
   13af9:	ret    0x4
   13afc:	int3   
   13afd:	int3   
   13afe:	int3   
   13aff:	int3   
   13b00:	int3   
   13b01:	int3   
   13b02:	mov    edi,edi
   13b04:	push   ebp
   13b05:	mov    ebp,esp
   13b07:	push   esi
   13b08:	push   edi
   13b09:	mov    edi,DWORD PTR [ebp+0x8]
   13b0c:	push   edi
   13b0d:	mov    esi,ecx
   13b0f:	call   0x136fc
   13b14:	add    edi,0x8
   13b17:	push   edi
   13b18:	lea    ecx,[esi+0x8]
   13b1b:	call   0x136fc
   13b20:	pop    edi
   13b21:	mov    eax,esi
   13b23:	pop    esi
   13b24:	pop    ebp
   13b25:	ret    0x4
   13b28:	int3   
   13b29:	int3   
   13b2a:	int3   
   13b2b:	int3   
   13b2c:	int3   
   13b2d:	int3   
   13b2e:	mov    edi,edi
   13b30:	push   ebp
   13b31:	mov    ebp,esp
   13b33:	push   esi
   13b34:	push   DWORD PTR [ebp+0x8]
   13b37:	mov    esi,ecx
   13b39:	call   0x1369e
   13b3e:	push   DWORD PTR [ebp+0xc]
   13b41:	lea    ecx,[esi+0x8]
   13b44:	call   0x139dc
   13b49:	mov    eax,esi
   13b4b:	pop    esi
   13b4c:	pop    ebp
   13b4d:	ret    0x8
   13b50:	int3   
   13b51:	int3   
   13b52:	int3   
   13b53:	int3   
   13b54:	int3   
   13b55:	int3   
   13b56:	mov    edi,edi
   13b58:	push   esi
   13b59:	push   edi
   13b5a:	push   0xffffffff
   13b5c:	mov    edi,0x1e5e8
   13b61:	push   edi
   13b62:	mov    esi,ecx
   13b64:	call   0x12ba8
   13b69:	push   0xffffffff
   13b6b:	push   edi
   13b6c:	lea    ecx,[esi+0x8]
   13b6f:	call   0x12ba8
   13b74:	push   0xffffffff
   13b76:	push   edi
   13b77:	lea    ecx,[esi+0x10]
   13b7a:	call   0x12ba8
   13b7f:	push   0xffffffff
   13b81:	push   edi
   13b82:	lea    ecx,[esi+0x18]
   13b85:	call   0x12ba8
   13b8a:	push   0xffffffff
   13b8c:	push   edi
   13b8d:	lea    ecx,[esi+0x38]
   13b90:	call   0x12ba8
   13b95:	xor    eax,eax
   13b97:	mov    DWORD PTR [esi+0x20],eax
   13b9a:	mov    DWORD PTR [esi+0x30],eax
   13b9d:	mov    DWORD PTR [esi+0x34],eax
   13ba0:	pop    edi
   13ba1:	mov    eax,esi
   13ba3:	pop    esi
   13ba4:	ret    
   13ba5:	int3   
   13ba6:	int3   
   13ba7:	int3   
   13ba8:	int3   
   13ba9:	int3   
   13baa:	mov    edi,edi
   13bac:	push   ebp
   13bad:	mov    ebp,esp
   13baf:	push   esi
   13bb0:	push   DWORD PTR [ebp+0x8]
   13bb3:	mov    esi,ecx
   13bb5:	call   0x1369e
   13bba:	push   0xffffffff
   13bbc:	push   0x1e5e8
   13bc1:	lea    ecx,[esi+0x8]
   13bc4:	call   0x12ba8
   13bc9:	push   DWORD PTR [ebp+0xc]
   13bcc:	lea    ecx,[esi+0x10]
   13bcf:	call   0x1369e
   13bd4:	push   DWORD PTR [ebp+0x10]
   13bd7:	lea    ecx,[esi+0x18]
   13bda:	call   0x1369e
   13bdf:	mov    eax,DWORD PTR [ebp+0x18]
   13be2:	push   DWORD PTR [ebp+0x14]
   13be5:	lea    ecx,[esi+0x38]
   13be8:	mov    DWORD PTR [esi+0x20],eax
   13beb:	call   0x1369e
   13bf0:	and    DWORD PTR [esi+0x30],0x0
   13bf4:	and    DWORD PTR [esi+0x34],0x0
   13bf8:	mov    eax,DWORD PTR [ebp+0x1c]
   13bfb:	mov    ecx,DWORD PTR [eax]
   13bfd:	mov    DWORD PTR [esi+0x28],ecx
   13c00:	mov    eax,DWORD PTR [eax+0x4]
   13c03:	mov    DWORD PTR [esi+0x2c],eax
   13c06:	mov    eax,esi
   13c08:	pop    esi
   13c09:	pop    ebp
   13c0a:	ret    0x18
   13c0d:	int3   
   13c0e:	int3   
   13c0f:	int3   
   13c10:	int3   
   13c11:	int3   
   13c12:	mov    edi,edi
   13c14:	push   ebp
   13c15:	mov    ebp,esp
   13c17:	push   esi
   13c18:	push   0xc
   13c1a:	mov    esi,ecx
   13c1c:	call   0x11d08
   13c21:	pop    ecx
   13c22:	test   eax,eax
   13c24:	je     0x13c35
   13c26:	push   DWORD PTR [ebp+0xc]
   13c29:	mov    ecx,eax
   13c2b:	push   DWORD PTR [ebp+0x8]
   13c2e:	call   0x135b0
   13c33:	jmp    0x13c37
   13c35:	xor    eax,eax
   13c37:	mov    DWORD PTR [esi],eax
   13c39:	mov    eax,esi
   13c3b:	pop    esi
   13c3c:	pop    ebp
   13c3d:	ret    0x8
   13c40:	int3   
   13c41:	int3   
   13c42:	int3   
   13c43:	int3   
   13c44:	int3   
   13c45:	int3   
   13c46:	mov    edi,edi
   13c48:	push   ebp
   13c49:	mov    ebp,esp
   13c4b:	push   ecx
   13c4c:	push   esi
   13c4d:	push   edi
   13c4e:	mov    edi,DWORD PTR [ebp+0xc]
   13c51:	push   edi
   13c52:	mov    esi,ecx
   13c54:	call   0x12cf0
   13c59:	mov    esi,DWORD PTR [esi+0x4]
   13c5c:	mov    DWORD PTR [ebp+0xc],eax
   13c5f:	cmp    eax,esi
   13c61:	je     0x13c6f
   13c63:	mov    ecx,DWORD PTR [edi]
   13c65:	cmp    ecx,DWORD PTR [eax+0xc]
   13c68:	jb     0x13c6f
   13c6a:	lea    eax,[ebp+0xc]
   13c6d:	jmp    0x13c75
   13c6f:	mov    DWORD PTR [ebp-0x4],esi
   13c72:	lea    eax,[ebp-0x4]
   13c75:	mov    ecx,DWORD PTR [eax]
   13c77:	mov    eax,DWORD PTR [ebp+0x8]
   13c7a:	pop    edi
   13c7b:	mov    DWORD PTR [eax],ecx
   13c7d:	pop    esi
   13c7e:	leave  
   13c7f:	ret    0x8
   13c82:	int3   
   13c83:	int3   
   13c84:	int3   
   13c85:	int3   
   13c86:	int3   
   13c87:	int3   
   13c88:	mov    edi,edi
   13c8a:	push   ebp
   13c8b:	mov    ebp,esp
   13c8d:	push   ecx
   13c8e:	push   esi
   13c8f:	push   DWORD PTR [ebp+0xc]
   13c92:	mov    esi,ecx
   13c94:	call   0x12dc6
   13c99:	mov    DWORD PTR [ebp-0x4],eax
   13c9c:	cmp    eax,DWORD PTR [esi+0x4]
   13c9f:	je     0x13cb6
   13ca1:	add    eax,0x10
   13ca4:	push   eax
   13ca5:	push   DWORD PTR [ebp+0xc]
   13ca8:	call   0x19f08
   13cad:	test   al,al
   13caf:	jne    0x13cb6
   13cb1:	lea    eax,[ebp-0x4]
   13cb4:	jmp    0x13cbf
   13cb6:	mov    eax,DWORD PTR [esi+0x4]
   13cb9:	mov    DWORD PTR [ebp+0xc],eax
   13cbc:	lea    eax,[ebp+0xc]
   13cbf:	mov    ecx,DWORD PTR [eax]
   13cc1:	mov    eax,DWORD PTR [ebp+0x8]
   13cc4:	mov    DWORD PTR [eax],ecx
   13cc6:	pop    esi
   13cc7:	leave  
   13cc8:	ret    0x8
   13ccb:	int3   
   13ccc:	int3   
   13ccd:	int3   
   13cce:	int3   
   13ccf:	int3   
   13cd0:	mov    edi,edi
   13cd2:	push   ebp
   13cd3:	mov    ebp,esp
   13cd5:	push   esi
   13cd6:	push   DWORD PTR [ebp+0x8]
   13cd9:	mov    esi,ecx
   13cdb:	call   0x1369e
   13ce0:	push   DWORD PTR [ebp+0xc]
   13ce3:	lea    ecx,[esi+0x8]
   13ce6:	call   0x13826
   13ceb:	mov    eax,esi
   13ced:	pop    esi
   13cee:	pop    ebp
   13cef:	ret    0x8
   13cf2:	int3   
   13cf3:	int3   
   13cf4:	int3   
   13cf5:	int3   
   13cf6:	int3   
   13cf7:	int3   
   13cf8:	mov    edi,edi
   13cfa:	push   ebp
   13cfb:	mov    ebp,esp
   13cfd:	push   ecx
   13cfe:	push   esi
   13cff:	push   DWORD PTR [ebp+0xc]
   13d02:	mov    esi,ecx
   13d04:	call   0x12e06
   13d09:	mov    DWORD PTR [ebp-0x4],eax
   13d0c:	cmp    eax,DWORD PTR [esi+0x4]
   13d0f:	je     0x13d26
   13d11:	add    eax,0xc
   13d14:	push   eax
   13d15:	push   DWORD PTR [ebp+0xc]
   13d18:	call   0x19f08
   13d1d:	test   al,al
   13d1f:	jne    0x13d26
   13d21:	lea    eax,[ebp-0x4]
   13d24:	jmp    0x13d2f
   13d26:	mov    eax,DWORD PTR [esi+0x4]
   13d29:	mov    DWORD PTR [ebp+0xc],eax
   13d2c:	lea    eax,[ebp+0xc]
   13d2f:	mov    ecx,DWORD PTR [eax]
   13d31:	mov    eax,DWORD PTR [ebp+0x8]
   13d34:	mov    DWORD PTR [eax],ecx
   13d36:	pop    esi
   13d37:	leave  
   13d38:	ret    0x8
   13d3b:	int3   
   13d3c:	int3   
   13d3d:	int3   
   13d3e:	int3   
   13d3f:	int3   
   13d40:	mov    edi,edi
   13d42:	push   ebp
   13d43:	mov    ebp,esp
   13d45:	push   ecx
   13d46:	push   esi
   13d47:	push   edi
   13d48:	mov    edi,DWORD PTR [ebp+0xc]
   13d4b:	push   edi
   13d4c:	mov    esi,ecx
   13d4e:	call   0x12e46
   13d53:	mov    esi,DWORD PTR [esi+0x4]
   13d56:	mov    DWORD PTR [ebp+0xc],eax
   13d59:	cmp    eax,esi
   13d5b:	je     0x13d69
   13d5d:	mov    ecx,DWORD PTR [edi]
   13d5f:	cmp    ecx,DWORD PTR [eax+0xc]
   13d62:	jl     0x13d69
   13d64:	lea    eax,[ebp+0xc]
   13d67:	jmp    0x13d6f
   13d69:	mov    DWORD PTR [ebp-0x4],esi
   13d6c:	lea    eax,[ebp-0x4]
   13d6f:	mov    ecx,DWORD PTR [eax]
   13d71:	mov    eax,DWORD PTR [ebp+0x8]
   13d74:	pop    edi
   13d75:	mov    DWORD PTR [eax],ecx
   13d77:	pop    esi
   13d78:	leave  
   13d79:	ret    0x8
   13d7c:	int3   
   13d7d:	int3   
   13d7e:	int3   
   13d7f:	int3   
   13d80:	int3   
   13d81:	int3   
   13d82:	mov    edi,edi
   13d84:	push   ebp
   13d85:	mov    ebp,esp
   13d87:	push   ecx
   13d88:	mov    eax,DWORD PTR [ecx]
   13d8a:	lea    ecx,[ebp-0x4]
   13d8d:	mov    DWORD PTR [ebp-0x4],eax
   13d90:	call   0x12eb4
   13d95:	mov    eax,DWORD PTR [ebp-0x4]
   13d98:	add    eax,0xc
   13d9b:	leave  
   13d9c:	ret    
   13d9d:	int3   
   13d9e:	int3   
   13d9f:	int3   
   13da0:	int3   
   13da1:	int3   
   13da2:	mov    edi,edi
   13da4:	push   ebp
   13da5:	mov    ebp,esp
   13da7:	push   ecx
   13da8:	push   esi
   13da9:	push   DWORD PTR [ebp+0xc]
   13dac:	mov    esi,ecx
   13dae:	call   0x12fc8
   13db3:	mov    DWORD PTR [ebp-0x4],eax
   13db6:	cmp    eax,DWORD PTR [esi+0x4]
   13db9:	je     0x13dd0
   13dbb:	add    eax,0x10
   13dbe:	push   eax
   13dbf:	push   DWORD PTR [ebp+0xc]
   13dc2:	call   0x19f08
   13dc7:	test   al,al
   13dc9:	jne    0x13dd0
   13dcb:	lea    eax,[ebp-0x4]
   13dce:	jmp    0x13dd9
   13dd0:	mov    eax,DWORD PTR [esi+0x4]
   13dd3:	mov    DWORD PTR [ebp+0xc],eax
   13dd6:	lea    eax,[ebp+0xc]
   13dd9:	mov    ecx,DWORD PTR [eax]
   13ddb:	mov    eax,DWORD PTR [ebp+0x8]
   13dde:	mov    DWORD PTR [eax],ecx
   13de0:	pop    esi
   13de1:	leave  
   13de2:	ret    0x8
   13de5:	int3   
   13de6:	int3   
   13de7:	int3   
   13de8:	int3   
   13de9:	int3   
   13dea:	mov    edi,edi
   13dec:	push   ebp
   13ded:	mov    ebp,esp
   13def:	push   ecx
   13df0:	push   ecx
   13df1:	push   ebx
   13df2:	push   esi
   13df3:	mov    DWORD PTR [ebp-0x4],ecx
   13df6:	push   edi
   13df7:	mov    edi,DWORD PTR [ebp+0xc]
   13dfa:	lea    ecx,[ebp+0xc]
   13dfd:	call   0x10ef4
   13e02:	mov    esi,DWORD PTR [edi]
   13e04:	mov    eax,ds:0x77ab0
   13e09:	mov    ebx,edi
   13e0b:	mov    DWORD PTR [ebp-0x8],esi
   13e0e:	cmp    esi,eax
   13e10:	jne    0x13e2e
   13e12:	mov    esi,DWORD PTR [edi+0x8]
   13e15:	mov    eax,DWORD PTR [ebx+0x4]
   13e18:	mov    ecx,DWORD PTR [ebp-0x4]
   13e1b:	mov    DWORD PTR [esi+0x4],eax
   13e1e:	mov    eax,DWORD PTR [ecx+0x4]
   13e21:	cmp    DWORD PTR [eax+0x4],edi
   13e24:	jne    0x13ea3
   13e26:	mov    DWORD PTR [eax+0x4],esi
   13e29:	jmp    0x13eb1
   13e2e:	mov    ecx,DWORD PTR [edi+0x8]
   13e31:	cmp    ecx,eax
   13e33:	je     0x13e15
   13e35:	push   ecx
   13e36:	call   0x10e0a
   13e3b:	mov    ebx,eax
   13e3d:	mov    esi,DWORD PTR [ebx+0x8]
   13e40:	cmp    ebx,edi
   13e42:	je     0x13e15
   13e44:	mov    eax,DWORD PTR [ebp-0x8]
   13e47:	mov    DWORD PTR [eax+0x4],ebx
   13e4a:	mov    eax,DWORD PTR [edi]
   13e4c:	mov    DWORD PTR [ebx],eax
   13e4e:	cmp    ebx,DWORD PTR [edi+0x8]
   13e51:	jne    0x13e58
   13e53:	mov    DWORD PTR [esi+0x4],ebx
   13e56:	jmp    0x13e6f
   13e58:	mov    eax,DWORD PTR [ebx+0x4]
   13e5b:	mov    DWORD PTR [esi+0x4],eax
   13e5e:	mov    eax,DWORD PTR [ebx+0x4]
   13e61:	mov    DWORD PTR [eax],esi
   13e63:	mov    eax,DWORD PTR [edi+0x8]
   13e66:	mov    DWORD PTR [ebx+0x8],eax
   13e69:	mov    eax,DWORD PTR [edi+0x8]
   13e6c:	mov    DWORD PTR [eax+0x4],ebx
   13e6f:	mov    eax,DWORD PTR [ebp-0x4]
   13e72:	mov    eax,DWORD PTR [eax+0x4]
   13e75:	cmp    DWORD PTR [eax+0x4],edi
   13e78:	jne    0x13e7f
   13e7a:	mov    DWORD PTR [eax+0x4],ebx
   13e7d:	jmp    0x13e8d
   13e7f:	mov    eax,DWORD PTR [edi+0x4]
   13e82:	cmp    DWORD PTR [eax],edi
   13e84:	jne    0x13e8a
   13e86:	mov    DWORD PTR [eax],ebx
   13e88:	jmp    0x13e8d
   13e8a:	mov    DWORD PTR [eax+0x8],ebx
   13e8d:	mov    eax,DWORD PTR [edi+0x4]
   13e90:	mov    DWORD PTR [ebx+0x4],eax
   13e93:	mov    eax,DWORD PTR [ebx+0x14]
   13e96:	mov    ecx,DWORD PTR [edi+0x14]
   13e99:	mov    DWORD PTR [ebx+0x14],ecx
   13e9c:	mov    DWORD PTR [edi+0x14],eax
   13e9f:	mov    ebx,edi
   13ea1:	jmp    0x13f04
   13ea3:	mov    eax,DWORD PTR [edi+0x4]
   13ea6:	cmp    DWORD PTR [eax],edi
   13ea8:	jne    0x13eae
   13eaa:	mov    DWORD PTR [eax],esi
   13eac:	jmp    0x13eb1
   13eae:	mov    DWORD PTR [eax+0x8],esi
   13eb1:	mov    eax,DWORD PTR [ecx+0x4]
   13eb4:	mov    DWORD PTR [ebp-0x8],eax
   13eb7:	cmp    DWORD PTR [eax],edi
   13eb9:	jne    0x13edb
   13ebb:	mov    edx,DWORD PTR [edi+0x8]
   13ebe:	cmp    edx,DWORD PTR ds:0x77ab0
   13ec4:	jne    0x13ecd
   13ec6:	mov    edx,DWORD PTR [edi+0x4]
   13ec9:	mov    DWORD PTR [eax],edx
   13ecb:	jmp    0x13edb
   13ecd:	push   esi
   13ece:	call   0x10e0a
   13ed3:	mov    ecx,DWORD PTR [ebp-0x8]
   13ed6:	mov    DWORD PTR [ecx],eax
   13ed8:	mov    ecx,DWORD PTR [ebp-0x4]
   13edb:	mov    eax,DWORD PTR [ecx+0x4]
   13ede:	mov    DWORD PTR [ebp-0x8],eax
   13ee1:	cmp    DWORD PTR [eax+0x8],edi
   13ee4:	jne    0x13f04
   13ee6:	mov    ecx,DWORD PTR [edi]
   13ee8:	cmp    ecx,DWORD PTR ds:0x77ab0
   13eee:	jne    0x13ef8
   13ef0:	mov    ecx,DWORD PTR [edi+0x4]
   13ef3:	mov    DWORD PTR [eax+0x8],ecx
   13ef6:	jmp    0x13f04
   13ef8:	push   esi
   13ef9:	call   0x10de8
   13efe:	mov    ecx,DWORD PTR [ebp-0x8]
   13f01:	mov    DWORD PTR [ecx+0x8],eax
   13f04:	xor    edi,edi
   13f06:	inc    edi
   13f07:	cmp    DWORD PTR [ebx+0x14],edi
   13f0a:	jne    0x14021
   13f10:	jmp    0x13fcf
   13f15:	cmp    DWORD PTR [esi+0x14],edi
   13f18:	jne    0x1401e
   13f1e:	mov    eax,DWORD PTR [esi+0x4]
   13f21:	cmp    esi,DWORD PTR [eax]
   13f23:	jne    0x13f9a
   13f25:	mov    eax,DWORD PTR [eax+0x8]
   13f28:	cmp    DWORD PTR [eax+0x14],0x0
   13f2c:	jne    0x13f46
   13f2e:	mov    DWORD PTR [eax+0x14],edi
   13f31:	mov    eax,DWORD PTR [esi+0x4]
   13f34:	and    DWORD PTR [eax+0x14],0x0
   13f38:	push   DWORD PTR [esi+0x4]
   13f3b:	call   0x12d28
   13f40:	mov    eax,DWORD PTR [esi+0x4]
   13f43:	mov    eax,DWORD PTR [eax+0x8]
   13f46:	mov    ecx,DWORD PTR [eax]
   13f48:	cmp    DWORD PTR [ecx+0x14],edi
   13f4b:	jne    0x13f55
   13f4d:	mov    ecx,DWORD PTR [eax+0x8]
   13f50:	cmp    DWORD PTR [ecx+0x14],edi
   13f53:	je     0x13fc8
   13f55:	mov    ecx,DWORD PTR [eax+0x8]
   13f58:	cmp    DWORD PTR [ecx+0x14],edi
   13f5b:	jne    0x13f75
   13f5d:	mov    ecx,DWORD PTR [eax]
   13f5f:	mov    DWORD PTR [ecx+0x14],edi
   13f62:	mov    ecx,DWORD PTR [ebp-0x4]
   13f65:	and    DWORD PTR [eax+0x14],0x0
   13f69:	push   eax
   13f6a:	call   0x12d76
   13f6f:	mov    eax,DWORD PTR [esi+0x4]
   13f72:	mov    eax,DWORD PTR [eax+0x8]
   13f75:	mov    ecx,DWORD PTR [esi+0x4]
   13f78:	mov    ecx,DWORD PTR [ecx+0x14]
   13f7b:	mov    DWORD PTR [eax+0x14],ecx
   13f7e:	mov    ecx,DWORD PTR [esi+0x4]
   13f81:	mov    DWORD PTR [ecx+0x14],edi
   13f84:	mov    eax,DWORD PTR [eax+0x8]
   13f87:	mov    ecx,DWORD PTR [ebp-0x4]
   13f8a:	mov    DWORD PTR [eax+0x14],edi
   13f8d:	push   DWORD PTR [esi+0x4]
   13f90:	call   0x12d28
   13f95:	jmp    0x1401e
   13f9a:	mov    eax,DWORD PTR [eax]
   13f9c:	cmp    DWORD PTR [eax+0x14],0x0
   13fa0:	jne    0x13fb9
   13fa2:	mov    DWORD PTR [eax+0x14],edi
   13fa5:	mov    eax,DWORD PTR [esi+0x4]
   13fa8:	and    DWORD PTR [eax+0x14],0x0
   13fac:	push   DWORD PTR [esi+0x4]
   13faf:	call   0x12d76
   13fb4:	mov    eax,DWORD PTR [esi+0x4]
   13fb7:	mov    eax,DWORD PTR [eax]
   13fb9:	mov    ecx,DWORD PTR [eax+0x8]
   13fbc:	cmp    DWORD PTR [ecx+0x14],edi
   13fbf:	jne    0x13fe0
   13fc1:	mov    ecx,DWORD PTR [eax]
   13fc3:	cmp    DWORD PTR [ecx+0x14],edi
   13fc6:	jne    0x13fe0
   13fc8:	and    DWORD PTR [eax+0x14],0x0
   13fcc:	mov    esi,DWORD PTR [esi+0x4]
   13fcf:	mov    ecx,DWORD PTR [ebp-0x4]
   13fd2:	mov    eax,DWORD PTR [ecx+0x4]
   13fd5:	cmp    esi,DWORD PTR [eax+0x4]
   13fd8:	jne    0x13f15
   13fde:	jmp    0x1401e
   13fe0:	mov    ecx,DWORD PTR [eax]
   13fe2:	cmp    DWORD PTR [ecx+0x14],edi
   13fe5:	jne    0x13fff
   13fe7:	mov    ecx,DWORD PTR [eax+0x8]
   13fea:	mov    DWORD PTR [ecx+0x14],edi
   13fed:	mov    ecx,DWORD PTR [ebp-0x4]
   13ff0:	and    DWORD PTR [eax+0x14],0x0
   13ff4:	push   eax
   13ff5:	call   0x12d28
   13ffa:	mov    eax,DWORD PTR [esi+0x4]
   13ffd:	mov    eax,DWORD PTR [eax]
   13fff:	mov    ecx,DWORD PTR [esi+0x4]
   14002:	mov    ecx,DWORD PTR [ecx+0x14]
   14005:	mov    DWORD PTR [eax+0x14],ecx
   14008:	mov    ecx,DWORD PTR [esi+0x4]
   1400b:	mov    DWORD PTR [ecx+0x14],edi
   1400e:	mov    eax,DWORD PTR [eax]
   14010:	mov    ecx,DWORD PTR [ebp-0x4]
   14013:	mov    DWORD PTR [eax+0x14],edi
   14016:	push   DWORD PTR [esi+0x4]
   14019:	call   0x12d76
   1401e:	mov    DWORD PTR [esi+0x14],edi
   14021:	push   ebx
   14022:	call   0x11d3e
   14027:	mov    eax,DWORD PTR [ebp-0x4]
   1402a:	dec    DWORD PTR [eax+0xc]
   1402d:	mov    eax,DWORD PTR [ebp+0x8]
   14030:	pop    ecx
   14031:	mov    ecx,DWORD PTR [ebp+0xc]
   14034:	pop    edi
   14035:	pop    esi
   14036:	mov    DWORD PTR [eax],ecx
   14038:	pop    ebx
   14039:	leave  
   1403a:	ret    0x8
   1403d:	int3   
   1403e:	int3   
   1403f:	int3   
   14040:	int3   
   14041:	int3   
   14042:	mov    edi,edi
   14044:	push   ebp
   14045:	mov    ebp,esp
   14047:	push   esi
   14048:	push   edi
   14049:	push   DWORD PTR [ebp+0xc]
   1404c:	mov    edi,ecx
   1404e:	call   0x130a6
   14053:	push   DWORD PTR [ebp+0xc]
   14056:	mov    ecx,edi
   14058:	mov    esi,eax
   1405a:	call   0x12cf0
   1405f:	mov    ecx,DWORD PTR [ebp+0x8]
   14062:	pop    edi
   14063:	mov    DWORD PTR [ecx],eax
   14065:	mov    DWORD PTR [ecx+0x4],esi
   14068:	mov    eax,ecx
   1406a:	pop    esi
   1406b:	pop    ebp
   1406c:	ret    0x8
   1406f:	int3   
   14070:	int3   
   14071:	int3   
   14072:	int3   
   14073:	int3   
   14074:	mov    edi,edi
   14076:	push   ebp
   14077:	mov    ebp,esp
   14079:	push   esi
   1407a:	push   edi
   1407b:	push   DWORD PTR [ebp+0xc]
   1407e:	mov    edi,ecx
   14080:	call   0x130de
   14085:	push   DWORD PTR [ebp+0xc]
   14088:	mov    ecx,edi
   1408a:	mov    esi,eax
   1408c:	call   0x12dc6
   14091:	mov    ecx,DWORD PTR [ebp+0x8]
   14094:	pop    edi
   14095:	mov    DWORD PTR [ecx],eax
   14097:	mov    DWORD PTR [ecx+0x4],esi
   1409a:	mov    eax,ecx
   1409c:	pop    esi
   1409d:	pop    ebp
   1409e:	ret    0x8
   140a1:	int3   
   140a2:	int3   
   140a3:	int3   
   140a4:	int3   
   140a5:	int3   
   140a6:	mov    edi,edi
   140a8:	push   ebp
   140a9:	mov    ebp,esp
   140ab:	push   esi
   140ac:	push   edi
   140ad:	push   DWORD PTR [ebp+0xc]
   140b0:	mov    edi,ecx
   140b2:	call   0x131bc
   140b7:	push   DWORD PTR [ebp+0xc]
   140ba:	mov    ecx,edi
   140bc:	mov    esi,eax
   140be:	call   0x12e06
   140c3:	mov    ecx,DWORD PTR [ebp+0x8]
   140c6:	pop    edi
   140c7:	mov    DWORD PTR [ecx],eax
   140c9:	mov    DWORD PTR [ecx+0x4],esi
   140cc:	mov    eax,ecx
   140ce:	pop    esi
   140cf:	pop    ebp
   140d0:	ret    0x8
   140d3:	int3   
   140d4:	int3   
   140d5:	int3   
   140d6:	int3   
   140d7:	int3   
   140d8:	mov    edi,edi
   140da:	push   ebp
   140db:	mov    ebp,esp
   140dd:	push   esi
   140de:	push   edi
   140df:	push   DWORD PTR [ebp+0xc]
   140e2:	mov    edi,ecx
   140e4:	call   0x1329a
   140e9:	push   DWORD PTR [ebp+0xc]
   140ec:	mov    ecx,edi
   140ee:	mov    esi,eax
   140f0:	call   0x12e46
   140f5:	mov    ecx,DWORD PTR [ebp+0x8]
   140f8:	pop    edi
   140f9:	mov    DWORD PTR [ecx],eax
   140fb:	mov    DWORD PTR [ecx+0x4],esi
   140fe:	mov    eax,ecx
   14100:	pop    esi
   14101:	pop    ebp
   14102:	ret    0x8
   14105:	int3   
   14106:	int3   
   14107:	int3   
   14108:	int3   
   14109:	int3   
   1410a:	mov    edi,edi
   1410c:	push   ebp
   1410d:	mov    ebp,esp
   1410f:	push   ecx
   14110:	push   esi
   14111:	push   DWORD PTR [ebp+0xc]
   14114:	mov    esi,ecx
   14116:	call   0x132d2
   1411b:	mov    DWORD PTR [ebp-0x4],eax
   1411e:	cmp    eax,DWORD PTR [esi+0x4]
   14121:	je     0x14138
   14123:	add    eax,0xc
   14126:	push   eax
   14127:	push   DWORD PTR [ebp+0xc]
   1412a:	call   0x19f38
   1412f:	test   al,al
   14131:	jne    0x14138
   14133:	lea    eax,[ebp-0x4]
   14136:	jmp    0x14141
   14138:	mov    eax,DWORD PTR [esi+0x4]
   1413b:	mov    DWORD PTR [ebp+0xc],eax
   1413e:	lea    eax,[ebp+0xc]
   14141:	mov    ecx,DWORD PTR [eax]
   14143:	mov    eax,DWORD PTR [ebp+0x8]
   14146:	mov    DWORD PTR [eax],ecx
   14148:	pop    esi
   14149:	leave  
   1414a:	ret    0x8
   1414d:	int3   
   1414e:	int3   
   1414f:	int3   
   14150:	int3   
   14151:	int3   
   14152:	mov    edi,edi
   14154:	push   ebp
   14155:	mov    ebp,esp
   14157:	push   ecx
   14158:	push   ecx
   14159:	push   ebx
   1415a:	push   esi
   1415b:	mov    DWORD PTR [ebp-0x4],ecx
   1415e:	push   edi
   1415f:	mov    edi,DWORD PTR [ebp+0xc]
   14162:	lea    ecx,[ebp+0xc]
   14165:	call   0x12ef4
   1416a:	mov    esi,DWORD PTR [edi]
   1416c:	mov    eax,ds:0x77ab4
   14171:	mov    ebx,edi
   14173:	mov    DWORD PTR [ebp-0x8],esi
   14176:	cmp    esi,eax
   14178:	jne    0x14196
   1417a:	mov    esi,DWORD PTR [edi+0x8]
   1417d:	mov    eax,DWORD PTR [ebx+0x4]
   14180:	mov    ecx,DWORD PTR [ebp-0x4]
   14183:	mov    DWORD PTR [esi+0x4],eax
   14186:	mov    eax,DWORD PTR [ecx+0x4]
   14189:	cmp    DWORD PTR [eax+0x4],edi
   1418c:	jne    0x1420b
   1418e:	mov    DWORD PTR [eax+0x4],esi
   14191:	jmp    0x14219
   14196:	mov    ecx,DWORD PTR [edi+0x8]
   14199:	cmp    ecx,eax
   1419b:	je     0x1417d
   1419d:	push   ecx
   1419e:	call   0x10e4e
   141a3:	mov    ebx,eax
   141a5:	mov    esi,DWORD PTR [ebx+0x8]
   141a8:	cmp    ebx,edi
   141aa:	je     0x1417d
   141ac:	mov    eax,DWORD PTR [ebp-0x8]
   141af:	mov    DWORD PTR [eax+0x4],ebx
   141b2:	mov    eax,DWORD PTR [edi]
   141b4:	mov    DWORD PTR [ebx],eax
   141b6:	cmp    ebx,DWORD PTR [edi+0x8]
   141b9:	jne    0x141c0
   141bb:	mov    DWORD PTR [esi+0x4],ebx
   141be:	jmp    0x141d7
   141c0:	mov    eax,DWORD PTR [ebx+0x4]
   141c3:	mov    DWORD PTR [esi+0x4],eax
   141c6:	mov    eax,DWORD PTR [ebx+0x4]
   141c9:	mov    DWORD PTR [eax],esi
   141cb:	mov    eax,DWORD PTR [edi+0x8]
   141ce:	mov    DWORD PTR [ebx+0x8],eax
   141d1:	mov    eax,DWORD PTR [edi+0x8]
   141d4:	mov    DWORD PTR [eax+0x4],ebx
   141d7:	mov    eax,DWORD PTR [ebp-0x4]
   141da:	mov    eax,DWORD PTR [eax+0x4]
   141dd:	cmp    DWORD PTR [eax+0x4],edi
   141e0:	jne    0x141e7
   141e2:	mov    DWORD PTR [eax+0x4],ebx
   141e5:	jmp    0x141f5
   141e7:	mov    eax,DWORD PTR [edi+0x4]
   141ea:	cmp    DWORD PTR [eax],edi
   141ec:	jne    0x141f2
   141ee:	mov    DWORD PTR [eax],ebx
   141f0:	jmp    0x141f5
   141f2:	mov    DWORD PTR [eax+0x8],ebx
   141f5:	mov    eax,DWORD PTR [edi+0x4]
   141f8:	mov    DWORD PTR [ebx+0x4],eax
   141fb:	mov    eax,DWORD PTR [ebx+0x10]
   141fe:	mov    ecx,DWORD PTR [edi+0x10]
   14201:	mov    DWORD PTR [ebx+0x10],ecx
   14204:	mov    DWORD PTR [edi+0x10],eax
   14207:	mov    ebx,edi
   14209:	jmp    0x1426c
   1420b:	mov    eax,DWORD PTR [edi+0x4]
   1420e:	cmp    DWORD PTR [eax],edi
   14210:	jne    0x14216
   14212:	mov    DWORD PTR [eax],esi
   14214:	jmp    0x14219
   14216:	mov    DWORD PTR [eax+0x8],esi
   14219:	mov    eax,DWORD PTR [ecx+0x4]
   1421c:	mov    DWORD PTR [ebp-0x8],eax
   1421f:	cmp    DWORD PTR [eax],edi
   14221:	jne    0x14243
   14223:	mov    edx,DWORD PTR [edi+0x8]
   14226:	cmp    edx,DWORD PTR ds:0x77ab4
   1422c:	jne    0x14235
   1422e:	mov    edx,DWORD PTR [edi+0x4]
   14231:	mov    DWORD PTR [eax],edx
   14233:	jmp    0x14243
   14235:	push   esi
   14236:	call   0x10e4e
   1423b:	mov    ecx,DWORD PTR [ebp-0x8]
   1423e:	mov    DWORD PTR [ecx],eax
   14240:	mov    ecx,DWORD PTR [ebp-0x4]
   14243:	mov    eax,DWORD PTR [ecx+0x4]
   14246:	mov    DWORD PTR [ebp-0x8],eax
   14249:	cmp    DWORD PTR [eax+0x8],edi
   1424c:	jne    0x1426c
   1424e:	mov    ecx,DWORD PTR [edi]
   14250:	cmp    ecx,DWORD PTR ds:0x77ab4
   14256:	jne    0x14260
   14258:	mov    ecx,DWORD PTR [edi+0x4]
   1425b:	mov    DWORD PTR [eax+0x8],ecx
   1425e:	jmp    0x1426c
   14260:	push   esi
   14261:	call   0x10e2c
   14266:	mov    ecx,DWORD PTR [ebp-0x8]
   14269:	mov    DWORD PTR [ecx+0x8],eax
   1426c:	xor    edi,edi
   1426e:	inc    edi
   1426f:	cmp    DWORD PTR [ebx+0x10],edi
   14272:	jne    0x14389
   14278:	jmp    0x14337
   1427d:	cmp    DWORD PTR [esi+0x10],edi
   14280:	jne    0x14386
   14286:	mov    eax,DWORD PTR [esi+0x4]
   14289:	cmp    esi,DWORD PTR [eax]
   1428b:	jne    0x14302
   1428d:	mov    eax,DWORD PTR [eax+0x8]
   14290:	cmp    DWORD PTR [eax+0x10],0x0
   14294:	jne    0x142ae
   14296:	mov    DWORD PTR [eax+0x10],edi
   14299:	mov    eax,DWORD PTR [esi+0x4]
   1429c:	and    DWORD PTR [eax+0x10],0x0
   142a0:	push   DWORD PTR [esi+0x4]
   142a3:	call   0x12f2a
   142a8:	mov    eax,DWORD PTR [esi+0x4]
   142ab:	mov    eax,DWORD PTR [eax+0x8]
   142ae:	mov    ecx,DWORD PTR [eax]
   142b0:	cmp    DWORD PTR [ecx+0x10],edi
   142b3:	jne    0x142bd
   142b5:	mov    ecx,DWORD PTR [eax+0x8]
   142b8:	cmp    DWORD PTR [ecx+0x10],edi
   142bb:	je     0x14330
   142bd:	mov    ecx,DWORD PTR [eax+0x8]
   142c0:	cmp    DWORD PTR [ecx+0x10],edi
   142c3:	jne    0x142dd
   142c5:	mov    ecx,DWORD PTR [eax]
   142c7:	mov    DWORD PTR [ecx+0x10],edi
   142ca:	mov    ecx,DWORD PTR [ebp-0x4]
   142cd:	and    DWORD PTR [eax+0x10],0x0
   142d1:	push   eax
   142d2:	call   0x12f78
   142d7:	mov    eax,DWORD PTR [esi+0x4]
   142da:	mov    eax,DWORD PTR [eax+0x8]
   142dd:	mov    ecx,DWORD PTR [esi+0x4]
   142e0:	mov    ecx,DWORD PTR [ecx+0x10]
   142e3:	mov    DWORD PTR [eax+0x10],ecx
   142e6:	mov    ecx,DWORD PTR [esi+0x4]
   142e9:	mov    DWORD PTR [ecx+0x10],edi
   142ec:	mov    eax,DWORD PTR [eax+0x8]
   142ef:	mov    ecx,DWORD PTR [ebp-0x4]
   142f2:	mov    DWORD PTR [eax+0x10],edi
   142f5:	push   DWORD PTR [esi+0x4]
   142f8:	call   0x12f2a
   142fd:	jmp    0x14386
   14302:	mov    eax,DWORD PTR [eax]
   14304:	cmp    DWORD PTR [eax+0x10],0x0
   14308:	jne    0x14321
   1430a:	mov    DWORD PTR [eax+0x10],edi
   1430d:	mov    eax,DWORD PTR [esi+0x4]
   14310:	and    DWORD PTR [eax+0x10],0x0
   14314:	push   DWORD PTR [esi+0x4]
   14317:	call   0x12f78
   1431c:	mov    eax,DWORD PTR [esi+0x4]
   1431f:	mov    eax,DWORD PTR [eax]
   14321:	mov    ecx,DWORD PTR [eax+0x8]
   14324:	cmp    DWORD PTR [ecx+0x10],edi
   14327:	jne    0x14348
   14329:	mov    ecx,DWORD PTR [eax]
   1432b:	cmp    DWORD PTR [ecx+0x10],edi
   1432e:	jne    0x14348
   14330:	and    DWORD PTR [eax+0x10],0x0
   14334:	mov    esi,DWORD PTR [esi+0x4]
   14337:	mov    ecx,DWORD PTR [ebp-0x4]
   1433a:	mov    eax,DWORD PTR [ecx+0x4]
   1433d:	cmp    esi,DWORD PTR [eax+0x4]
   14340:	jne    0x1427d
   14346:	jmp    0x14386
   14348:	mov    ecx,DWORD PTR [eax]
   1434a:	cmp    DWORD PTR [ecx+0x10],edi
   1434d:	jne    0x14367
   1434f:	mov    ecx,DWORD PTR [eax+0x8]
   14352:	mov    DWORD PTR [ecx+0x10],edi
   14355:	mov    ecx,DWORD PTR [ebp-0x4]
   14358:	and    DWORD PTR [eax+0x10],0x0
   1435c:	push   eax
   1435d:	call   0x12f2a
   14362:	mov    eax,DWORD PTR [esi+0x4]
   14365:	mov    eax,DWORD PTR [eax]
   14367:	mov    ecx,DWORD PTR [esi+0x4]
   1436a:	mov    ecx,DWORD PTR [ecx+0x10]
   1436d:	mov    DWORD PTR [eax+0x10],ecx
   14370:	mov    ecx,DWORD PTR [esi+0x4]
   14373:	mov    DWORD PTR [ecx+0x10],edi
   14376:	mov    eax,DWORD PTR [eax]
   14378:	mov    ecx,DWORD PTR [ebp-0x4]
   1437b:	mov    DWORD PTR [eax+0x10],edi
   1437e:	push   DWORD PTR [esi+0x4]
   14381:	call   0x12f78
   14386:	mov    DWORD PTR [esi+0x10],edi
   14389:	push   ebx
   1438a:	call   0x11d3e
   1438f:	mov    eax,DWORD PTR [ebp-0x4]
   14392:	dec    DWORD PTR [eax+0xc]
   14395:	mov    eax,DWORD PTR [ebp+0x8]
   14398:	pop    ecx
   14399:	mov    ecx,DWORD PTR [ebp+0xc]
   1439c:	pop    edi
   1439d:	pop    esi
   1439e:	mov    DWORD PTR [eax],ecx
   143a0:	pop    ebx
   143a1:	leave  
   143a2:	ret    0x8
   143a5:	int3   
   143a6:	int3   
   143a7:	int3   
   143a8:	int3   
   143a9:	int3   
   143aa:	mov    edi,edi
   143ac:	push   ebp
   143ad:	mov    ebp,esp
   143af:	push   esi
   143b0:	push   edi
   143b1:	push   DWORD PTR [ebp+0xc]
   143b4:	mov    edi,ecx
   143b6:	call   0x1334a
   143bb:	push   DWORD PTR [ebp+0xc]
   143be:	mov    ecx,edi
   143c0:	mov    esi,eax
   143c2:	call   0x13312
   143c7:	mov    ecx,DWORD PTR [ebp+0x8]
   143ca:	pop    edi
   143cb:	mov    DWORD PTR [ecx],eax
   143cd:	mov    DWORD PTR [ecx+0x4],esi
   143d0:	mov    eax,ecx
   143d2:	pop    esi
   143d3:	pop    ebp
   143d4:	ret    0x8
   143d7:	int3   
   143d8:	int3   
   143d9:	int3   
   143da:	int3   
   143db:	int3   
   143dc:	mov    edi,edi
   143de:	push   ebp
   143df:	mov    ebp,esp
   143e1:	push   0x0
   143e3:	push   0x60
   143e5:	call   0x13460
   143ea:	mov    ecx,DWORD PTR [ebp+0x8]
   143ed:	mov    DWORD PTR [eax+0x4],ecx
   143f0:	mov    ecx,DWORD PTR [ebp+0xc]
   143f3:	mov    DWORD PTR [eax+0x58],ecx
   143f6:	pop    ebp
   143f7:	ret    0x8
   143fa:	int3   
   143fb:	int3   
   143fc:	int3   
   143fd:	int3   
   143fe:	int3   
   143ff:	int3   
   14400:	mov    edi,edi
   14402:	push   ebp
   14403:	mov    ebp,esp
   14405:	push   0x0
   14407:	push   0x20
   14409:	call   0x13460
   1440e:	mov    ecx,DWORD PTR [ebp+0x8]
   14411:	mov    DWORD PTR [eax+0x4],ecx
   14414:	mov    ecx,DWORD PTR [ebp+0xc]
   14417:	mov    DWORD PTR [eax+0x1c],ecx
   1441a:	pop    ebp
   1441b:	ret    0x8
   1441e:	int3   
   1441f:	int3   
   14420:	int3   
   14421:	int3   
   14422:	int3   
   14423:	int3   
   14424:	mov    edi,edi
   14426:	push   ebp
   14427:	mov    ebp,esp
   14429:	push   0x0
   1442b:	push   0x14
   1442d:	call   0x13460
   14432:	mov    ecx,DWORD PTR [ebp+0x8]
   14435:	mov    DWORD PTR [eax+0x4],ecx
   14438:	mov    ecx,DWORD PTR [ebp+0xc]
   1443b:	mov    DWORD PTR [eax+0x10],ecx
   1443e:	pop    ebp
   1443f:	ret    0x8
   14442:	int3   
   14443:	int3   
   14444:	int3   
   14445:	int3   
   14446:	int3   
   14447:	int3   
   14448:	mov    edi,edi
   1444a:	push   ebp
   1444b:	mov    ebp,esp
   1444d:	push   0x0
   1444f:	push   0x68
   14451:	call   0x13460
   14456:	mov    ecx,DWORD PTR [ebp+0x8]
   14459:	mov    DWORD PTR [eax+0x4],ecx
   1445c:	mov    ecx,DWORD PTR [ebp+0xc]
   1445f:	mov    DWORD PTR [eax+0x60],ecx
   14462:	pop    ebp
   14463:	ret    0x8
   14466:	int3   
   14467:	int3   
   14468:	int3   
   14469:	int3   
   1446a:	int3   
   1446b:	int3   
   1446c:	mov    edi,edi
   1446e:	push   ebp
   1446f:	mov    ebp,esp
   14471:	mov    ecx,DWORD PTR [ebp+0x8]
   14474:	test   ecx,ecx
   14476:	je     0x14480
   14478:	push   DWORD PTR [ebp+0xc]
   1447b:	call   0x13a02
   14480:	pop    ebp
   14481:	ret    0x8
   14484:	int3   
   14485:	int3   
   14486:	int3   
   14487:	int3   
   14488:	int3   
   14489:	int3   
   1448a:	mov    edi,edi
   1448c:	push   ebp
   1448d:	mov    ebp,esp
   1448f:	mov    ecx,DWORD PTR [ebp+0x8]
   14492:	test   ecx,ecx
   14494:	je     0x1449e
   14496:	push   DWORD PTR [ebp+0xc]
   14499:	call   0x13a2e
   1449e:	pop    ebp
   1449f:	ret    0x8
   144a2:	int3   
   144a3:	int3   
   144a4:	int3   
   144a5:	int3   
   144a6:	int3   
   144a7:	int3   
   144a8:	mov    edi,edi
   144aa:	push   ebp
   144ab:	mov    ebp,esp
   144ad:	mov    ecx,DWORD PTR [ebp+0x8]
   144b0:	push   0x0
   144b2:	call   0x13a5a
   144b7:	pop    ebp
   144b8:	ret    0x4
   144bb:	int3   
   144bc:	int3   
   144bd:	int3   
   144be:	int3   
   144bf:	int3   
   144c0:	mov    edi,edi
   144c2:	push   ebp
   144c3:	mov    ebp,esp
   144c5:	mov    ecx,DWORD PTR [ebp+0x8]
   144c8:	test   ecx,ecx
   144ca:	je     0x144d4
   144cc:	push   DWORD PTR [ebp+0xc]
   144cf:	call   0x13a80
   144d4:	pop    ebp
   144d5:	ret    0x8
   144d8:	int3   
   144d9:	int3   
   144da:	int3   
   144db:	int3   
   144dc:	int3   
   144dd:	int3   
   144de:	mov    edi,edi
   144e0:	push   ebp
   144e1:	mov    ebp,esp
   144e3:	mov    ecx,DWORD PTR [ebp+0x8]
   144e6:	test   ecx,ecx
   144e8:	je     0x144f2
   144ea:	push   DWORD PTR [ebp+0xc]
   144ed:	call   0x13aac
   144f2:	pop    ebp
   144f3:	ret    0x8
   144f6:	int3   
   144f7:	int3   
   144f8:	int3   
   144f9:	int3   
   144fa:	int3   
   144fb:	int3   
   144fc:	mov    edi,edi
   144fe:	push   ebp
   144ff:	mov    ebp,esp
   14501:	mov    ecx,DWORD PTR [ebp+0x8]
   14504:	push   0x0
   14506:	call   0x13ad4
   1450b:	pop    ebp
   1450c:	ret    0x4
   1450f:	int3   
   14510:	int3   
   14511:	int3   
   14512:	int3   
   14513:	int3   
   14514:	mov    edi,edi
   14516:	push   ebp
   14517:	mov    ebp,esp
   14519:	mov    ecx,DWORD PTR [ebp+0x8]
   1451c:	test   ecx,ecx
   1451e:	je     0x14528
   14520:	push   DWORD PTR [ebp+0xc]
   14523:	call   0x13b02
   14528:	pop    ebp
   14529:	ret    0x8
   1452c:	int3   
   1452d:	int3   
   1452e:	int3   
   1452f:	int3   
   14530:	int3   
   14531:	int3   
   14532:	mov    edi,edi
   14534:	push   ebp
   14535:	mov    ebp,esp
   14537:	push   ecx
   14538:	mov    eax,ds:0x77ab4
   1453d:	push   ebx
   1453e:	mov    ebx,DWORD PTR [ebp+0xc]
   14541:	push   esi
   14542:	mov    esi,DWORD PTR [ebp+0x8]
   14545:	mov    DWORD PTR [ebp-0x4],ecx
   14548:	mov    DWORD PTR [ebp+0x8],esi
   1454b:	cmp    esi,eax
   1454d:	je     0x14592
   1454f:	push   edi
   14550:	push   DWORD PTR [esi+0x10]
   14553:	mov    ecx,DWORD PTR [ebp-0x4]
   14556:	push   ebx
   14557:	call   0x14424
   1455c:	mov    edi,eax
   1455e:	cmp    DWORD PTR [ebp+0x8],esi
   14561:	jne    0x14566
   14563:	mov    DWORD PTR [ebp+0x8],edi
   14566:	mov    ecx,DWORD PTR [ebp-0x4]
   14569:	push   edi
   1456a:	push   DWORD PTR [esi+0x8]
   1456d:	call   0x14532
   14572:	mov    DWORD PTR [edi+0x8],eax
   14575:	lea    eax,[esi+0xc]
   14578:	push   eax
   14579:	lea    eax,[edi+0xc]
   1457c:	push   eax
   1457d:	call   0x1123c
   14582:	mov    DWORD PTR [ebx],edi
   14584:	mov    esi,DWORD PTR [esi]
   14586:	mov    eax,ds:0x77ab4
   1458b:	mov    ebx,edi
   1458d:	cmp    esi,eax
   1458f:	jne    0x14550
   14591:	pop    edi
   14592:	mov    DWORD PTR [ebx],eax
   14594:	mov    eax,DWORD PTR [ebp+0x8]
   14597:	pop    esi
   14598:	pop    ebx
   14599:	leave  
   1459a:	ret    0x8
   1459d:	int3   
   1459e:	int3   
   1459f:	int3   
   145a0:	int3   
   145a1:	int3   
   145a2:	mov    edi,edi
   145a4:	push   ebp
   145a5:	mov    ebp,esp
   145a7:	push   edi
   145a8:	mov    edi,DWORD PTR [ebp+0xc]
   145ab:	cmp    DWORD PTR [ebp+0x8],edi
   145ae:	je     0x145c4
   145b0:	push   esi
   145b1:	mov    esi,DWORD PTR [ebp+0x10]
   145b4:	inc    DWORD PTR [esi]
   145b6:	lea    ecx,[ebp+0x8]
   145b9:	call   0x137a2
   145be:	cmp    DWORD PTR [ebp+0x8],edi
   145c1:	jne    0x145b4
   145c3:	pop    esi
   145c4:	pop    edi
   145c5:	pop    ebp
   145c6:	ret    
   145c7:	int3   
   145c8:	int3   
   145c9:	int3   
   145ca:	int3   
   145cb:	int3   
   145cc:	mov    edi,edi
   145ce:	push   ebp
   145cf:	mov    ebp,esp
   145d1:	push   DWORD PTR [ebp+0xc]
   145d4:	push   DWORD PTR [ebp+0x8]
   145d7:	call   0x13cf8
   145dc:	mov    eax,DWORD PTR [ebp+0x8]
   145df:	pop    ebp
   145e0:	ret    0x8
   145e3:	int3   
   145e4:	int3   
   145e5:	int3   
   145e6:	int3   
   145e7:	int3   
   145e8:	mov    edi,edi
   145ea:	push   ebp
   145eb:	mov    ebp,esp
   145ed:	push   ecx
   145ee:	push   esi
   145ef:	mov    esi,ecx
   145f1:	cmp    DWORD PTR [esi+0xc],0x0
   145f5:	mov    ecx,DWORD PTR [ebp+0xc]
   145f8:	je     0x14632
   145fa:	mov    eax,DWORD PTR [esi+0x4]
   145fd:	cmp    ecx,DWORD PTR [eax]
   145ff:	jne    0x14632
   14601:	cmp    DWORD PTR [ebp+0x10],eax
   14604:	jne    0x14632
   14606:	push   DWORD PTR [eax+0x4]
   14609:	mov    ecx,esi
   1460b:	call   0x13894
   14610:	mov    ecx,DWORD PTR ds:0x77ab0
   14616:	mov    eax,DWORD PTR [esi+0x4]
   14619:	mov    DWORD PTR [eax+0x4],ecx
   1461c:	mov    eax,DWORD PTR [esi+0x4]
   1461f:	and    DWORD PTR [esi+0xc],0x0
   14623:	mov    DWORD PTR [eax],eax
   14625:	mov    eax,DWORD PTR [esi+0x4]
   14628:	mov    DWORD PTR [eax+0x8],eax
   1462b:	mov    eax,DWORD PTR [esi+0x4]
   1462e:	mov    ecx,DWORD PTR [eax]
   14630:	jmp    0x14657
   14632:	cmp    ecx,DWORD PTR [ebp+0x10]
   14635:	je     0x14657
   14637:	push   edi
   14638:	mov    edi,ecx
   1463a:	lea    ecx,[ebp+0xc]
   1463d:	call   0x10ef4
   14642:	push   edi
   14643:	lea    eax,[ebp-0x4]
   14646:	push   eax
   14647:	mov    ecx,esi
   14649:	call   0x13dea
   1464e:	mov    ecx,DWORD PTR [ebp+0xc]
   14651:	cmp    ecx,DWORD PTR [ebp+0x10]
   14654:	jne    0x14638
   14656:	pop    edi
   14657:	mov    eax,DWORD PTR [ebp+0x8]
   1465a:	mov    DWORD PTR [eax],ecx
   1465c:	pop    esi
   1465d:	leave  
   1465e:	ret    0xc
   14661:	int3   
   14662:	int3   
   14663:	int3   
   14664:	int3   
   14665:	int3   
   14666:	mov    edi,edi
   14668:	push   ebp
   14669:	mov    ebp,esp
   1466b:	push   ecx
   1466c:	push   ecx
   1466d:	push   esi
   1466e:	push   DWORD PTR [ebp+0x8]
   14671:	lea    eax,[ebp-0x8]
   14674:	push   eax
   14675:	mov    esi,ecx
   14677:	call   0x14042
   1467c:	and    DWORD PTR [ebp+0x8],0x0
   14680:	lea    eax,[ebp+0x8]
   14683:	push   eax
   14684:	push   DWORD PTR [ebp-0x4]
   14687:	push   DWORD PTR [ebp-0x8]
   1468a:	call   0x1393c
   1468f:	add    esp,0xc
   14692:	push   DWORD PTR [ebp-0x4]
   14695:	lea    eax,[ebp-0x4]
   14698:	push   DWORD PTR [ebp-0x8]
   1469b:	mov    ecx,esi
   1469d:	push   eax
   1469e:	call   0x145e8
   146a3:	mov    eax,DWORD PTR [ebp+0x8]
   146a6:	pop    esi
   146a7:	leave  
   146a8:	ret    0x4
   146ab:	int3   
   146ac:	int3   
   146ad:	int3   
   146ae:	int3   
   146af:	int3   
   146b0:	mov    edi,edi
   146b2:	push   ebp
   146b3:	mov    ebp,esp
   146b5:	push   ecx
   146b6:	push   esi
   146b7:	mov    esi,ecx
   146b9:	cmp    DWORD PTR [esi+0xc],0x0
   146bd:	mov    ecx,DWORD PTR [ebp+0xc]
   146c0:	je     0x146fa
   146c2:	mov    eax,DWORD PTR [esi+0x4]
   146c5:	cmp    ecx,DWORD PTR [eax]
   146c7:	jne    0x146fa
   146c9:	cmp    DWORD PTR [ebp+0x10],eax
   146cc:	jne    0x146fa
   146ce:	push   DWORD PTR [eax+0x4]
   146d1:	mov    ecx,esi
   146d3:	call   0x138fc
   146d8:	mov    ecx,DWORD PTR ds:0x77ab4
   146de:	mov    eax,DWORD PTR [esi+0x4]
   146e1:	mov    DWORD PTR [eax+0x4],ecx
   146e4:	mov    eax,DWORD PTR [esi+0x4]
   146e7:	and    DWORD PTR [esi+0xc],0x0
   146eb:	mov    DWORD PTR [eax],eax
   146ed:	mov    eax,DWORD PTR [esi+0x4]
   146f0:	mov    DWORD PTR [eax+0x8],eax
   146f3:	mov    eax,DWORD PTR [esi+0x4]
   146f6:	mov    ecx,DWORD PTR [eax]
   146f8:	jmp    0x1471f
   146fa:	cmp    ecx,DWORD PTR [ebp+0x10]
   146fd:	je     0x1471f
   146ff:	push   edi
   14700:	mov    edi,ecx
   14702:	lea    ecx,[ebp+0xc]
   14705:	call   0x12ef4
   1470a:	push   edi
   1470b:	lea    eax,[ebp-0x4]
   1470e:	push   eax
   1470f:	mov    ecx,esi
   14711:	call   0x14152
   14716:	mov    ecx,DWORD PTR [ebp+0xc]
   14719:	cmp    ecx,DWORD PTR [ebp+0x10]
   1471c:	jne    0x14700
   1471e:	pop    edi
   1471f:	mov    eax,DWORD PTR [ebp+0x8]
   14722:	mov    DWORD PTR [eax],ecx
   14724:	pop    esi
   14725:	leave  
   14726:	ret    0xc
   14729:	int3   
   1472a:	int3   
   1472b:	int3   
   1472c:	int3   
   1472d:	int3   
   1472e:	mov    edi,edi
   14730:	push   ebp
   14731:	mov    ebp,esp
   14733:	push   ecx
   14734:	push   ecx
   14735:	push   esi
   14736:	push   DWORD PTR [ebp+0x8]
   14739:	lea    eax,[ebp-0x8]
   1473c:	push   eax
   1473d:	mov    esi,ecx
   1473f:	call   0x143aa
   14744:	and    DWORD PTR [ebp+0x8],0x0
   14748:	lea    eax,[ebp+0x8]
   1474b:	push   eax
   1474c:	push   DWORD PTR [ebp-0x4]
   1474f:	push   DWORD PTR [ebp-0x8]
   14752:	call   0x139a2
   14757:	add    esp,0xc
   1475a:	push   DWORD PTR [ebp-0x4]
   1475d:	lea    eax,[ebp-0x4]
   14760:	push   DWORD PTR [ebp-0x8]
   14763:	mov    ecx,esi
   14765:	push   eax
   14766:	call   0x146b0
   1476b:	mov    eax,DWORD PTR [ebp+0x8]
   1476e:	pop    esi
   1476f:	leave  
   14770:	ret    0x4
   14773:	int3   
   14774:	int3   
   14775:	int3   
   14776:	int3   
   14777:	int3   
   14778:	mov    edi,edi
   1477a:	push   esi
   1477b:	push   edi
   1477c:	push   0x1
   1477e:	xor    edi,edi
   14780:	push   edi
   14781:	mov    esi,ecx
   14783:	call   0x1b140
   14788:	cmp    DWORD PTR ds:0x77ab0,edi
   1478e:	jne    0x147a5
   14790:	mov    ecx,eax
   14792:	mov    DWORD PTR ds:0x77ab0,ecx
   14798:	mov    DWORD PTR [ecx],edi
   1479a:	mov    ecx,DWORD PTR ds:0x77ab0
   147a0:	xor    eax,eax
   147a2:	mov    DWORD PTR [ecx+0x8],edi
   147a5:	inc    DWORD PTR ds:0x77c60
   147ab:	cmp    eax,edi
   147ad:	je     0x147b6
   147af:	push   eax
   147b0:	call   0x11d3e
   147b5:	pop    ecx
   147b6:	push   edi
   147b7:	push   DWORD PTR ds:0x77ab0
   147bd:	mov    ecx,esi
   147bf:	call   0x1b140
   147c4:	mov    DWORD PTR [esi+0xc],edi
   147c7:	mov    DWORD PTR [esi+0x4],eax
   147ca:	mov    DWORD PTR [eax],eax
   147cc:	mov    esi,DWORD PTR [esi+0x4]
   147cf:	pop    edi
   147d0:	mov    DWORD PTR [esi+0x8],esi
   147d3:	pop    esi
   147d4:	ret    
   147d5:	int3   
   147d6:	int3   
   147d7:	int3   
   147d8:	int3   
   147d9:	int3   
   147da:	mov    edi,edi
   147dc:	push   esi
   147dd:	push   edi
   147de:	push   0x1
   147e0:	xor    edi,edi
   147e2:	push   edi
   147e3:	mov    esi,ecx
   147e5:	call   0x143dc
   147ea:	cmp    DWORD PTR ds:0x77abc,edi
   147f0:	jne    0x14807
   147f2:	mov    ecx,eax
   147f4:	mov    DWORD PTR ds:0x77abc,ecx
   147fa:	mov    DWORD PTR [ecx],edi
   147fc:	mov    ecx,DWORD PTR ds:0x77abc
   14802:	xor    eax,eax
   14804:	mov    DWORD PTR [ecx+0x8],edi
   14807:	inc    DWORD PTR ds:0x77c64
   1480d:	cmp    eax,edi
   1480f:	je     0x14818
   14811:	push   eax
   14812:	call   0x11d3e
   14817:	pop    ecx
   14818:	push   edi
   14819:	push   DWORD PTR ds:0x77abc
   1481f:	mov    ecx,esi
   14821:	call   0x143dc
   14826:	mov    DWORD PTR [esi+0xc],edi
   14829:	mov    DWORD PTR [esi+0x4],eax
   1482c:	mov    DWORD PTR [eax],eax
   1482e:	mov    esi,DWORD PTR [esi+0x4]
   14831:	pop    edi
   14832:	mov    DWORD PTR [esi+0x8],esi
   14835:	pop    esi
   14836:	ret    
   14837:	int3   
   14838:	int3   
   14839:	int3   
   1483a:	int3   
   1483b:	int3   
   1483c:	mov    edi,edi
   1483e:	push   esi
   1483f:	push   edi
   14840:	push   0x1
   14842:	xor    edi,edi
   14844:	push   edi
   14845:	mov    esi,ecx
   14847:	call   0x14400
   1484c:	cmp    DWORD PTR ds:0x77ac0,edi
   14852:	jne    0x14869
   14854:	mov    ecx,eax
   14856:	mov    DWORD PTR ds:0x77ac0,ecx
   1485c:	mov    DWORD PTR [ecx],edi
   1485e:	mov    ecx,DWORD PTR ds:0x77ac0
   14864:	xor    eax,eax
   14866:	mov    DWORD PTR [ecx+0x8],edi
   14869:	inc    DWORD PTR ds:0x77c68
   1486f:	cmp    eax,edi
   14871:	je     0x1487a
   14873:	push   eax
   14874:	call   0x11d3e
   14879:	pop    ecx
   1487a:	push   edi
   1487b:	push   DWORD PTR ds:0x77ac0
   14881:	mov    ecx,esi
   14883:	call   0x14400
   14888:	mov    DWORD PTR [esi+0xc],edi
   1488b:	mov    DWORD PTR [esi+0x4],eax
   1488e:	mov    DWORD PTR [eax],eax
   14890:	mov    esi,DWORD PTR [esi+0x4]
   14893:	pop    edi
   14894:	mov    DWORD PTR [esi+0x8],esi
   14897:	pop    esi
   14898:	ret    
   14899:	int3   
   1489a:	int3   
   1489b:	int3   
   1489c:	int3   
   1489d:	int3   
   1489e:	mov    edi,edi
   148a0:	push   esi
   148a1:	push   edi
   148a2:	push   0x1
   148a4:	xor    edi,edi
   148a6:	push   edi
   148a7:	mov    esi,ecx
   148a9:	call   0x1b140
   148ae:	cmp    DWORD PTR ds:0x77ac4,edi
   148b4:	jne    0x148cb
   148b6:	mov    ecx,eax
   148b8:	mov    DWORD PTR ds:0x77ac4,ecx
   148be:	mov    DWORD PTR [ecx],edi
   148c0:	mov    ecx,DWORD PTR ds:0x77ac4
   148c6:	xor    eax,eax
   148c8:	mov    DWORD PTR [ecx+0x8],edi
   148cb:	inc    DWORD PTR ds:0x77c6c
   148d1:	cmp    eax,edi
   148d3:	je     0x148dc
   148d5:	push   eax
   148d6:	call   0x11d3e
   148db:	pop    ecx
   148dc:	push   edi
   148dd:	push   DWORD PTR ds:0x77ac4
   148e3:	mov    ecx,esi
   148e5:	call   0x1b140
   148ea:	mov    DWORD PTR [esi+0xc],edi
   148ed:	mov    DWORD PTR [esi+0x4],eax
   148f0:	mov    DWORD PTR [eax],eax
   148f2:	mov    esi,DWORD PTR [esi+0x4]
   148f5:	pop    edi
   148f6:	mov    DWORD PTR [esi+0x8],esi
   148f9:	pop    esi
   148fa:	ret    
   148fb:	int3   
   148fc:	int3   
   148fd:	int3   
   148fe:	int3   
   148ff:	int3   
   14900:	mov    edi,edi
   14902:	push   esi
   14903:	push   edi
   14904:	push   0x1
   14906:	xor    edi,edi
   14908:	push   edi
   14909:	mov    esi,ecx
   1490b:	call   0x14424
   14910:	cmp    DWORD PTR ds:0x77ab4,edi
   14916:	jne    0x1492d
   14918:	mov    ecx,eax
   1491a:	mov    DWORD PTR ds:0x77ab4,ecx
   14920:	mov    DWORD PTR [ecx],edi
   14922:	mov    ecx,DWORD PTR ds:0x77ab4
   14928:	xor    eax,eax
   1492a:	mov    DWORD PTR [ecx+0x8],edi
   1492d:	inc    DWORD PTR ds:0x77c70
   14933:	cmp    eax,edi
   14935:	je     0x1493e
   14937:	push   eax
   14938:	call   0x11d3e
   1493d:	pop    ecx
   1493e:	push   edi
   1493f:	push   DWORD PTR ds:0x77ab4
   14945:	mov    ecx,esi
   14947:	call   0x14424
   1494c:	mov    DWORD PTR [esi+0xc],edi
   1494f:	mov    DWORD PTR [esi+0x4],eax
   14952:	mov    DWORD PTR [eax],eax
   14954:	mov    esi,DWORD PTR [esi+0x4]
   14957:	pop    edi
   14958:	mov    DWORD PTR [esi+0x8],esi
   1495b:	pop    esi
   1495c:	ret    
   1495d:	int3   
   1495e:	int3   
   1495f:	int3   
   14960:	int3   
   14961:	int3   
   14962:	mov    edi,edi
   14964:	push   ebp
   14965:	mov    ebp,esp
   14967:	push   ebx
   14968:	push   esi
   14969:	mov    esi,DWORD PTR [ebp+0x10]
   1496c:	push   edi
   1496d:	push   0x0
   1496f:	push   esi
   14970:	mov    edi,ecx
   14972:	call   0x14424
   14977:	push   DWORD PTR [ebp+0x14]
   1497a:	mov    ebx,eax
   1497c:	mov    eax,ds:0x77ab4
   14981:	mov    DWORD PTR [ebx],eax
   14983:	mov    eax,ds:0x77ab4
   14988:	mov    DWORD PTR [ebx+0x8],eax
   1498b:	lea    eax,[ebx+0xc]
   1498e:	push   eax
   1498f:	call   0x1123c
   14994:	inc    DWORD PTR [edi+0xc]
   14997:	cmp    esi,DWORD PTR [edi+0x4]
   1499a:	je     0x149be
   1499c:	mov    eax,DWORD PTR [ebp+0xc]
   1499f:	cmp    eax,DWORD PTR ds:0x77ab4
   149a5:	jne    0x149be
   149a7:	mov    eax,DWORD PTR [ebp+0x14]
   149aa:	mov    eax,DWORD PTR [eax]
   149ac:	cmp    eax,DWORD PTR [esi+0xc]
   149af:	jb     0x149be
   149b1:	mov    DWORD PTR [esi+0x8],ebx
   149b4:	mov    eax,DWORD PTR [edi+0x4]
   149b7:	cmp    esi,DWORD PTR [eax+0x8]
   149ba:	jne    0x149d8
   149bc:	jmp    0x149cd
   149be:	mov    DWORD PTR [esi],ebx
   149c0:	mov    eax,DWORD PTR [edi+0x4]
   149c3:	cmp    esi,eax
   149c5:	jne    0x149d2
   149c7:	mov    DWORD PTR [eax+0x4],ebx
   149ca:	mov    eax,DWORD PTR [edi+0x4]
   149cd:	mov    DWORD PTR [eax+0x8],ebx
   149d0:	jmp    0x149d8
   149d2:	cmp    esi,DWORD PTR [eax]
   149d4:	jne    0x149d8
   149d6:	mov    DWORD PTR [eax],ebx
   149d8:	mov    eax,DWORD PTR [edi+0x4]
   149db:	mov    esi,ebx
   149dd:	cmp    ebx,DWORD PTR [eax+0x4]
   149e0:	je     0x14a94
   149e6:	mov    eax,DWORD PTR [esi+0x4]
   149e9:	xor    edx,edx
   149eb:	cmp    DWORD PTR [eax+0x10],edx
   149ee:	jne    0x14a94
   149f4:	mov    ecx,DWORD PTR [eax+0x4]
   149f7:	cmp    eax,DWORD PTR [ecx]
   149f9:	jne    0x14a35
   149fb:	mov    ecx,DWORD PTR [ecx+0x8]
   149fe:	cmp    DWORD PTR [ecx+0x10],edx
   14a01:	je     0x14a3c
   14a03:	cmp    esi,DWORD PTR [eax+0x8]
   14a06:	jne    0x14a12
   14a08:	mov    esi,eax
   14a0a:	push   esi
   14a0b:	mov    ecx,edi
   14a0d:	call   0x12f2a
   14a12:	mov    eax,DWORD PTR [esi+0x4]
   14a15:	mov    DWORD PTR [eax+0x10],0x1
   14a1c:	mov    eax,DWORD PTR [esi+0x4]
   14a1f:	mov    eax,DWORD PTR [eax+0x4]
   14a22:	and    DWORD PTR [eax+0x10],0x0
   14a26:	mov    eax,DWORD PTR [esi+0x4]
   14a29:	push   DWORD PTR [eax+0x4]
   14a2c:	mov    ecx,edi
   14a2e:	call   0x12f78
   14a33:	jmp    0x14a88
   14a35:	mov    ecx,DWORD PTR [ecx]
   14a37:	cmp    DWORD PTR [ecx+0x10],edx
   14a3a:	jne    0x14a59
   14a3c:	mov    edx,eax
   14a3e:	xor    eax,eax
   14a40:	inc    eax
   14a41:	mov    DWORD PTR [edx+0x10],eax
   14a44:	mov    DWORD PTR [ecx+0x10],eax
   14a47:	mov    eax,DWORD PTR [esi+0x4]
   14a4a:	mov    eax,DWORD PTR [eax+0x4]
   14a4d:	and    DWORD PTR [eax+0x10],0x0
   14a51:	mov    eax,DWORD PTR [esi+0x4]
   14a54:	mov    esi,DWORD PTR [eax+0x4]
   14a57:	jmp    0x14a88
   14a59:	cmp    esi,DWORD PTR [eax]
   14a5b:	jne    0x14a67
   14a5d:	mov    esi,eax
   14a5f:	push   esi
   14a60:	mov    ecx,edi
   14a62:	call   0x12f78
   14a67:	mov    eax,DWORD PTR [esi+0x4]
   14a6a:	mov    DWORD PTR [eax+0x10],0x1
   14a71:	mov    eax,DWORD PTR [esi+0x4]
   14a74:	mov    eax,DWORD PTR [eax+0x4]
   14a77:	and    DWORD PTR [eax+0x10],0x0
   14a7b:	mov    eax,DWORD PTR [esi+0x4]
   14a7e:	push   DWORD PTR [eax+0x4]
   14a81:	mov    ecx,edi
   14a83:	call   0x12f2a
   14a88:	mov    eax,DWORD PTR [edi+0x4]
   14a8b:	cmp    esi,DWORD PTR [eax+0x4]
   14a8e:	jne    0x149e6
   14a94:	mov    eax,DWORD PTR [edi+0x4]
   14a97:	mov    eax,DWORD PTR [eax+0x4]
   14a9a:	pop    edi
   14a9b:	mov    DWORD PTR [eax+0x10],0x1
   14aa2:	mov    eax,DWORD PTR [ebp+0x8]
   14aa5:	pop    esi
   14aa6:	mov    DWORD PTR [eax],ebx
   14aa8:	pop    ebx
   14aa9:	pop    ebp
   14aaa:	ret    0x10
   14aad:	int3   
   14aae:	int3   
   14aaf:	int3   
   14ab0:	int3   
   14ab1:	int3   
   14ab2:	mov    edi,edi
   14ab4:	push   esi
   14ab5:	push   edi
   14ab6:	push   0x1
   14ab8:	xor    edi,edi
   14aba:	push   edi
   14abb:	mov    esi,ecx
   14abd:	call   0x14448
   14ac2:	cmp    DWORD PTR ds:0x77ab8,edi
   14ac8:	jne    0x14adf
   14aca:	mov    ecx,eax
   14acc:	mov    DWORD PTR ds:0x77ab8,ecx
   14ad2:	mov    DWORD PTR [ecx],edi
   14ad4:	mov    ecx,DWORD PTR ds:0x77ab8
   14ada:	xor    eax,eax
   14adc:	mov    DWORD PTR [ecx+0x8],edi
   14adf:	inc    DWORD PTR ds:0x77c74
   14ae5:	cmp    eax,edi
   14ae7:	je     0x14af0
   14ae9:	push   eax
   14aea:	call   0x11d3e
   14aef:	pop    ecx
   14af0:	push   edi
   14af1:	push   DWORD PTR ds:0x77ab8
   14af7:	mov    ecx,esi
   14af9:	call   0x14448
   14afe:	mov    DWORD PTR [esi+0xc],edi
   14b01:	mov    DWORD PTR [esi+0x4],eax
   14b04:	mov    DWORD PTR [eax],eax
   14b06:	mov    esi,DWORD PTR [esi+0x4]
   14b09:	pop    edi
   14b0a:	mov    DWORD PTR [esi+0x8],esi
   14b0d:	pop    esi
   14b0e:	ret    
   14b0f:	int3   
   14b10:	int3   
   14b11:	int3   
   14b12:	int3   
   14b13:	int3   
   14b14:	mov    edi,edi
   14b16:	push   ebp
   14b17:	mov    ebp,esp
   14b19:	push   ebx
   14b1a:	push   esi
   14b1b:	mov    esi,DWORD PTR [ebp+0x10]
   14b1e:	push   edi
   14b1f:	push   0x0
   14b21:	push   esi
   14b22:	mov    edi,ecx
   14b24:	call   0x1b140
   14b29:	push   DWORD PTR [ebp+0x14]
   14b2c:	mov    ebx,eax
   14b2e:	mov    eax,ds:0x77ab0
   14b33:	mov    DWORD PTR [ebx],eax
   14b35:	mov    eax,ds:0x77ab0
   14b3a:	mov    DWORD PTR [ebx+0x8],eax
   14b3d:	lea    eax,[ebx+0xc]
   14b40:	push   eax
   14b41:	call   0x11258
   14b46:	inc    DWORD PTR [edi+0xc]
   14b49:	cmp    esi,DWORD PTR [edi+0x4]
   14b4c:	je     0x14b70
   14b4e:	mov    eax,DWORD PTR [ebp+0xc]
   14b51:	cmp    eax,DWORD PTR ds:0x77ab0
   14b57:	jne    0x14b70
   14b59:	mov    eax,DWORD PTR [ebp+0x14]
   14b5c:	mov    eax,DWORD PTR [eax]
   14b5e:	cmp    eax,DWORD PTR [esi+0xc]
   14b61:	jb     0x14b70
   14b63:	mov    DWORD PTR [esi+0x8],ebx
   14b66:	mov    eax,DWORD PTR [edi+0x4]
   14b69:	cmp    esi,DWORD PTR [eax+0x8]
   14b6c:	jne    0x14b8a
   14b6e:	jmp    0x14b7f
   14b70:	mov    DWORD PTR [esi],ebx
   14b72:	mov    eax,DWORD PTR [edi+0x4]
   14b75:	cmp    esi,eax
   14b77:	jne    0x14b84
   14b79:	mov    DWORD PTR [eax+0x4],ebx
   14b7c:	mov    eax,DWORD PTR [edi+0x4]
   14b7f:	mov    DWORD PTR [eax+0x8],ebx
   14b82:	jmp    0x14b8a
   14b84:	cmp    esi,DWORD PTR [eax]
   14b86:	jne    0x14b8a
   14b88:	mov    DWORD PTR [eax],ebx
   14b8a:	mov    eax,DWORD PTR [edi+0x4]
   14b8d:	mov    esi,ebx
   14b8f:	cmp    ebx,DWORD PTR [eax+0x4]
   14b92:	je     0x14c46
   14b98:	mov    eax,DWORD PTR [esi+0x4]
   14b9b:	xor    edx,edx
   14b9d:	cmp    DWORD PTR [eax+0x14],edx
   14ba0:	jne    0x14c46
   14ba6:	mov    ecx,DWORD PTR [eax+0x4]
   14ba9:	cmp    eax,DWORD PTR [ecx]
   14bab:	jne    0x14be7
   14bad:	mov    ecx,DWORD PTR [ecx+0x8]
   14bb0:	cmp    DWORD PTR [ecx+0x14],edx
   14bb3:	je     0x14bee
   14bb5:	cmp    esi,DWORD PTR [eax+0x8]
   14bb8:	jne    0x14bc4
   14bba:	mov    esi,eax
   14bbc:	push   esi
   14bbd:	mov    ecx,edi
   14bbf:	call   0x12d28
   14bc4:	mov    eax,DWORD PTR [esi+0x4]
   14bc7:	mov    DWORD PTR [eax+0x14],0x1
   14bce:	mov    eax,DWORD PTR [esi+0x4]
   14bd1:	mov    eax,DWORD PTR [eax+0x4]
   14bd4:	and    DWORD PTR [eax+0x14],0x0
   14bd8:	mov    eax,DWORD PTR [esi+0x4]
   14bdb:	push   DWORD PTR [eax+0x4]
   14bde:	mov    ecx,edi
   14be0:	call   0x12d76
   14be5:	jmp    0x14c3a
   14be7:	mov    ecx,DWORD PTR [ecx]
   14be9:	cmp    DWORD PTR [ecx+0x14],edx
   14bec:	jne    0x14c0b
   14bee:	mov    edx,eax
   14bf0:	xor    eax,eax
   14bf2:	inc    eax
   14bf3:	mov    DWORD PTR [edx+0x14],eax
   14bf6:	mov    DWORD PTR [ecx+0x14],eax
   14bf9:	mov    eax,DWORD PTR [esi+0x4]
   14bfc:	mov    eax,DWORD PTR [eax+0x4]
   14bff:	and    DWORD PTR [eax+0x14],0x0
   14c03:	mov    eax,DWORD PTR [esi+0x4]
   14c06:	mov    esi,DWORD PTR [eax+0x4]
   14c09:	jmp    0x14c3a
   14c0b:	cmp    esi,DWORD PTR [eax]
   14c0d:	jne    0x14c19
   14c0f:	mov    esi,eax
   14c11:	push   esi
   14c12:	mov    ecx,edi
   14c14:	call   0x12d76
   14c19:	mov    eax,DWORD PTR [esi+0x4]
   14c1c:	mov    DWORD PTR [eax+0x14],0x1
   14c23:	mov    eax,DWORD PTR [esi+0x4]
   14c26:	mov    eax,DWORD PTR [eax+0x4]
   14c29:	and    DWORD PTR [eax+0x14],0x0
   14c2d:	mov    eax,DWORD PTR [esi+0x4]
   14c30:	push   DWORD PTR [eax+0x4]
   14c33:	mov    ecx,edi
   14c35:	call   0x12d28
   14c3a:	mov    eax,DWORD PTR [edi+0x4]
   14c3d:	cmp    esi,DWORD PTR [eax+0x4]
   14c40:	jne    0x14b98
   14c46:	mov    eax,DWORD PTR [edi+0x4]
   14c49:	mov    eax,DWORD PTR [eax+0x4]
   14c4c:	pop    edi
   14c4d:	mov    DWORD PTR [eax+0x14],0x1
   14c54:	mov    eax,DWORD PTR [ebp+0x8]
   14c57:	pop    esi
   14c58:	mov    DWORD PTR [eax],ebx
   14c5a:	pop    ebx
   14c5b:	pop    ebp
   14c5c:	ret    0x10
   14c5f:	int3   
   14c60:	int3   
   14c61:	int3   
   14c62:	int3   
   14c63:	int3   
   14c64:	mov    edi,edi
   14c66:	push   ebp
   14c67:	mov    ebp,esp
   14c69:	push   ecx
   14c6a:	push   ecx
   14c6b:	push   ebx
   14c6c:	push   esi
   14c6d:	mov    DWORD PTR [ebp-0x4],ecx
   14c70:	push   edi
   14c71:	mov    edi,DWORD PTR [ebp+0xc]
   14c74:	lea    ecx,[ebp+0xc]
   14c77:	call   0x11172
   14c7c:	mov    esi,DWORD PTR [edi]
   14c7e:	mov    eax,ds:0x77ac0
   14c83:	mov    ebx,edi
   14c85:	mov    DWORD PTR [ebp-0x8],esi
   14c88:	cmp    esi,eax
   14c8a:	jne    0x14ca8
   14c8c:	mov    esi,DWORD PTR [edi+0x8]
   14c8f:	mov    eax,DWORD PTR [ebx+0x4]
   14c92:	mov    ecx,DWORD PTR [ebp-0x4]
   14c95:	mov    DWORD PTR [esi+0x4],eax
   14c98:	mov    eax,DWORD PTR [ecx+0x4]
   14c9b:	cmp    DWORD PTR [eax+0x4],edi
   14c9e:	jne    0x14d1d
   14ca0:	mov    DWORD PTR [eax+0x4],esi
   14ca3:	jmp    0x14d2b
   14ca8:	mov    ecx,DWORD PTR [edi+0x8]
   14cab:	cmp    ecx,eax
   14cad:	je     0x14c8f
   14caf:	push   ecx
   14cb0:	call   0x1104c
   14cb5:	mov    ebx,eax
   14cb7:	mov    esi,DWORD PTR [ebx+0x8]
   14cba:	cmp    ebx,edi
   14cbc:	je     0x14c8f
   14cbe:	mov    eax,DWORD PTR [ebp-0x8]
   14cc1:	mov    DWORD PTR [eax+0x4],ebx
   14cc4:	mov    eax,DWORD PTR [edi]
   14cc6:	mov    DWORD PTR [ebx],eax
   14cc8:	cmp    ebx,DWORD PTR [edi+0x8]
   14ccb:	jne    0x14cd2
   14ccd:	mov    DWORD PTR [esi+0x4],ebx
   14cd0:	jmp    0x14ce9
   14cd2:	mov    eax,DWORD PTR [ebx+0x4]
   14cd5:	mov    DWORD PTR [esi+0x4],eax
   14cd8:	mov    eax,DWORD PTR [ebx+0x4]
   14cdb:	mov    DWORD PTR [eax],esi
   14cdd:	mov    eax,DWORD PTR [edi+0x8]
   14ce0:	mov    DWORD PTR [ebx+0x8],eax
   14ce3:	mov    eax,DWORD PTR [edi+0x8]
   14ce6:	mov    DWORD PTR [eax+0x4],ebx
   14ce9:	mov    eax,DWORD PTR [ebp-0x4]
   14cec:	mov    eax,DWORD PTR [eax+0x4]
   14cef:	cmp    DWORD PTR [eax+0x4],edi
   14cf2:	jne    0x14cf9
   14cf4:	mov    DWORD PTR [eax+0x4],ebx
   14cf7:	jmp    0x14d07
   14cf9:	mov    eax,DWORD PTR [edi+0x4]
   14cfc:	cmp    DWORD PTR [eax],edi
   14cfe:	jne    0x14d04
   14d00:	mov    DWORD PTR [eax],ebx
   14d02:	jmp    0x14d07
   14d04:	mov    DWORD PTR [eax+0x8],ebx
   14d07:	mov    eax,DWORD PTR [edi+0x4]
   14d0a:	mov    DWORD PTR [ebx+0x4],eax
   14d0d:	mov    eax,DWORD PTR [ebx+0x1c]
   14d10:	mov    ecx,DWORD PTR [edi+0x1c]
   14d13:	mov    DWORD PTR [ebx+0x1c],ecx
   14d16:	mov    DWORD PTR [edi+0x1c],eax
   14d19:	mov    ebx,edi
   14d1b:	jmp    0x14d7e
   14d1d:	mov    eax,DWORD PTR [edi+0x4]
   14d20:	cmp    DWORD PTR [eax],edi
   14d22:	jne    0x14d28
   14d24:	mov    DWORD PTR [eax],esi
   14d26:	jmp    0x14d2b
   14d28:	mov    DWORD PTR [eax+0x8],esi
   14d2b:	mov    eax,DWORD PTR [ecx+0x4]
   14d2e:	mov    DWORD PTR [ebp-0x8],eax
   14d31:	cmp    DWORD PTR [eax],edi
   14d33:	jne    0x14d55
   14d35:	mov    edx,DWORD PTR [edi+0x8]
   14d38:	cmp    edx,DWORD PTR ds:0x77ac0
   14d3e:	jne    0x14d47
   14d40:	mov    edx,DWORD PTR [edi+0x4]
   14d43:	mov    DWORD PTR [eax],edx
   14d45:	jmp    0x14d55
   14d47:	push   esi
   14d48:	call   0x1104c
   14d4d:	mov    ecx,DWORD PTR [ebp-0x8]
   14d50:	mov    DWORD PTR [ecx],eax
   14d52:	mov    ecx,DWORD PTR [ebp-0x4]
   14d55:	mov    eax,DWORD PTR [ecx+0x4]
   14d58:	mov    DWORD PTR [ebp-0x8],eax
   14d5b:	cmp    DWORD PTR [eax+0x8],edi
   14d5e:	jne    0x14d7e
   14d60:	mov    ecx,DWORD PTR [edi]
   14d62:	cmp    ecx,DWORD PTR ds:0x77ac0
   14d68:	jne    0x14d72
   14d6a:	mov    ecx,DWORD PTR [edi+0x4]
   14d6d:	mov    DWORD PTR [eax+0x8],ecx
   14d70:	jmp    0x14d7e
   14d72:	push   esi
   14d73:	call   0x1102a
   14d78:	mov    ecx,DWORD PTR [ebp-0x8]
   14d7b:	mov    DWORD PTR [ecx+0x8],eax
   14d7e:	xor    edi,edi
   14d80:	inc    edi
   14d81:	cmp    DWORD PTR [ebx+0x1c],edi
   14d84:	jne    0x14e9b
   14d8a:	jmp    0x14e49
   14d8f:	cmp    DWORD PTR [esi+0x1c],edi
   14d92:	jne    0x14e98
   14d98:	mov    eax,DWORD PTR [esi+0x4]
   14d9b:	cmp    esi,DWORD PTR [eax]
   14d9d:	jne    0x14e14
   14d9f:	mov    eax,DWORD PTR [eax+0x8]
   14da2:	cmp    DWORD PTR [eax+0x1c],0x0
   14da6:	jne    0x14dc0
   14da8:	mov    DWORD PTR [eax+0x1c],edi
   14dab:	mov    eax,DWORD PTR [esi+0x4]
   14dae:	and    DWORD PTR [eax+0x1c],0x0
   14db2:	push   DWORD PTR [esi+0x4]
   14db5:	call   0x1311e
   14dba:	mov    eax,DWORD PTR [esi+0x4]
   14dbd:	mov    eax,DWORD PTR [eax+0x8]
   14dc0:	mov    ecx,DWORD PTR [eax]
   14dc2:	cmp    DWORD PTR [ecx+0x1c],edi
   14dc5:	jne    0x14dcf
   14dc7:	mov    ecx,DWORD PTR [eax+0x8]
   14dca:	cmp    DWORD PTR [ecx+0x1c],edi
   14dcd:	je     0x14e42
   14dcf:	mov    ecx,DWORD PTR [eax+0x8]
   14dd2:	cmp    DWORD PTR [ecx+0x1c],edi
   14dd5:	jne    0x14def
   14dd7:	mov    ecx,DWORD PTR [eax]
   14dd9:	mov    DWORD PTR [ecx+0x1c],edi
   14ddc:	mov    ecx,DWORD PTR [ebp-0x4]
   14ddf:	and    DWORD PTR [eax+0x1c],0x0
   14de3:	push   eax
   14de4:	call   0x1316c
   14de9:	mov    eax,DWORD PTR [esi+0x4]
   14dec:	mov    eax,DWORD PTR [eax+0x8]
   14def:	mov    ecx,DWORD PTR [esi+0x4]
   14df2:	mov    ecx,DWORD PTR [ecx+0x1c]
   14df5:	mov    DWORD PTR [eax+0x1c],ecx
   14df8:	mov    ecx,DWORD PTR [esi+0x4]
   14dfb:	mov    DWORD PTR [ecx+0x1c],edi
   14dfe:	mov    eax,DWORD PTR [eax+0x8]
   14e01:	mov    ecx,DWORD PTR [ebp-0x4]
   14e04:	mov    DWORD PTR [eax+0x1c],edi
   14e07:	push   DWORD PTR [esi+0x4]
   14e0a:	call   0x1311e
   14e0f:	jmp    0x14e98
   14e14:	mov    eax,DWORD PTR [eax]
   14e16:	cmp    DWORD PTR [eax+0x1c],0x0
   14e1a:	jne    0x14e33
   14e1c:	mov    DWORD PTR [eax+0x1c],edi
   14e1f:	mov    eax,DWORD PTR [esi+0x4]
   14e22:	and    DWORD PTR [eax+0x1c],0x0
   14e26:	push   DWORD PTR [esi+0x4]
   14e29:	call   0x1316c
   14e2e:	mov    eax,DWORD PTR [esi+0x4]
   14e31:	mov    eax,DWORD PTR [eax]
   14e33:	mov    ecx,DWORD PTR [eax+0x8]
   14e36:	cmp    DWORD PTR [ecx+0x1c],edi
   14e39:	jne    0x14e5a
   14e3b:	mov    ecx,DWORD PTR [eax]
   14e3d:	cmp    DWORD PTR [ecx+0x1c],edi
   14e40:	jne    0x14e5a
   14e42:	and    DWORD PTR [eax+0x1c],0x0
   14e46:	mov    esi,DWORD PTR [esi+0x4]
   14e49:	mov    ecx,DWORD PTR [ebp-0x4]
   14e4c:	mov    eax,DWORD PTR [ecx+0x4]
   14e4f:	cmp    esi,DWORD PTR [eax+0x4]
   14e52:	jne    0x14d8f
   14e58:	jmp    0x14e98
   14e5a:	mov    ecx,DWORD PTR [eax]
   14e5c:	cmp    DWORD PTR [ecx+0x1c],edi
   14e5f:	jne    0x14e79
   14e61:	mov    ecx,DWORD PTR [eax+0x8]
   14e64:	mov    DWORD PTR [ecx+0x1c],edi
   14e67:	mov    ecx,DWORD PTR [ebp-0x4]
   14e6a:	and    DWORD PTR [eax+0x1c],0x0
   14e6e:	push   eax
   14e6f:	call   0x1311e
   14e74:	mov    eax,DWORD PTR [esi+0x4]
   14e77:	mov    eax,DWORD PTR [eax]
   14e79:	mov    ecx,DWORD PTR [esi+0x4]
   14e7c:	mov    ecx,DWORD PTR [ecx+0x1c]
   14e7f:	mov    DWORD PTR [eax+0x1c],ecx
   14e82:	mov    ecx,DWORD PTR [esi+0x4]
   14e85:	mov    DWORD PTR [ecx+0x1c],edi
   14e88:	mov    eax,DWORD PTR [eax]
   14e8a:	mov    ecx,DWORD PTR [ebp-0x4]
   14e8d:	mov    DWORD PTR [eax+0x1c],edi
   14e90:	push   DWORD PTR [esi+0x4]
   14e93:	call   0x1316c
   14e98:	mov    DWORD PTR [esi+0x1c],edi
   14e9b:	lea    eax,[ebx+0xc]
   14e9e:	push   eax
   14e9f:	call   0x139c4
   14ea4:	push   ebx
   14ea5:	call   0x11d3e
   14eaa:	mov    eax,DWORD PTR [ebp-0x4]
   14ead:	dec    DWORD PTR [eax+0xc]
   14eb0:	mov    eax,DWORD PTR [ebp+0x8]
   14eb3:	pop    ecx
   14eb4:	mov    ecx,DWORD PTR [ebp+0xc]
   14eb7:	pop    edi
   14eb8:	pop    esi
   14eb9:	mov    DWORD PTR [eax],ecx
   14ebb:	pop    ebx
   14ebc:	leave  
   14ebd:	ret    0x8
   14ec0:	int3   
   14ec1:	int3   
   14ec2:	int3   
   14ec3:	int3   
   14ec4:	int3   
   14ec5:	int3   
   14ec6:	mov    edi,edi
   14ec8:	push   ebp
   14ec9:	mov    ebp,esp
   14ecb:	push   ebx
   14ecc:	push   esi
   14ecd:	push   edi
   14ece:	mov    edi,DWORD PTR [ebp+0x8]
   14ed1:	mov    ebx,ecx
   14ed3:	mov    esi,edi
   14ed5:	cmp    edi,DWORD PTR ds:0x77ac0
   14edb:	je     0x14f03
   14edd:	push   DWORD PTR [esi+0x8]
   14ee0:	mov    ecx,ebx
   14ee2:	call   0x14ec6
   14ee7:	mov    esi,DWORD PTR [esi]
   14ee9:	lea    eax,[edi+0xc]
   14eec:	push   eax
   14eed:	call   0x139c4
   14ef2:	push   edi
   14ef3:	call   0x11d3e
   14ef8:	pop    ecx
   14ef9:	mov    edi,esi
   14efb:	cmp    esi,DWORD PTR ds:0x77ac0
   14f01:	jne    0x14edd
   14f03:	pop    edi
   14f04:	pop    esi
   14f05:	pop    ebx
   14f06:	pop    ebp
   14f07:	ret    0x4
   14f0a:	int3   
   14f0b:	int3   
   14f0c:	int3   
   14f0d:	int3   
   14f0e:	int3   
   14f0f:	int3   
   14f10:	mov    edi,edi
   14f12:	push   esi
   14f13:	push   edi
   14f14:	push   0x1
   14f16:	xor    edi,edi
   14f18:	push   edi
   14f19:	mov    esi,ecx
   14f1b:	call   0x14448
   14f20:	cmp    DWORD PTR ds:0x77ac8,edi
   14f26:	jne    0x14f3d
   14f28:	mov    ecx,eax
   14f2a:	mov    DWORD PTR ds:0x77ac8,ecx
   14f30:	mov    DWORD PTR [ecx],edi
   14f32:	mov    ecx,DWORD PTR ds:0x77ac8
   14f38:	xor    eax,eax
   14f3a:	mov    DWORD PTR [ecx+0x8],edi
   14f3d:	inc    DWORD PTR ds:0x77c78
   14f43:	cmp    eax,edi
   14f45:	je     0x14f4e
   14f47:	push   eax
   14f48:	call   0x11d3e
   14f4d:	pop    ecx
   14f4e:	push   edi
   14f4f:	push   DWORD PTR ds:0x77ac8
   14f55:	mov    ecx,esi
   14f57:	call   0x14448
   14f5c:	mov    DWORD PTR [esi+0xc],edi
   14f5f:	mov    DWORD PTR [esi+0x4],eax
   14f62:	mov    DWORD PTR [eax],eax
   14f64:	mov    esi,DWORD PTR [esi+0x4]
   14f67:	pop    edi
   14f68:	mov    DWORD PTR [esi+0x8],esi
   14f6b:	pop    esi
   14f6c:	ret    
   14f6d:	int3   
   14f6e:	int3   
   14f6f:	int3   
   14f70:	int3   
   14f71:	int3   
   14f72:	mov    edi,edi
   14f74:	push   ebp
   14f75:	mov    ebp,esp
   14f77:	push   ecx
   14f78:	push   DWORD PTR [ebp-0x4]
   14f7b:	push   DWORD PTR [ebp+0x10]
   14f7e:	push   DWORD PTR [ebp+0xc]
   14f81:	push   DWORD PTR [ebp+0x8]
   14f84:	call   0x145a2
   14f89:	add    esp,0x10
   14f8c:	leave  
   14f8d:	ret    
   14f8e:	int3   
   14f8f:	int3   
   14f90:	int3   
   14f91:	int3   
   14f92:	int3   
   14f93:	int3   
   14f94:	mov    edi,edi
   14f96:	push   ebp
   14f97:	mov    ebp,esp
   14f99:	push   ebx
   14f9a:	mov    ebx,DWORD PTR [ebp+0x8]
   14f9d:	mov    eax,DWORD PTR [ebx+0x4]
   14fa0:	push   esi
   14fa1:	push   edi
   14fa2:	mov    esi,ecx
   14fa4:	mov    edi,DWORD PTR [esi+0x4]
   14fa7:	add    eax,0x4
   14faa:	push   edi
   14fab:	push   DWORD PTR [eax]
   14fad:	call   0x14532
   14fb2:	mov    DWORD PTR [edi+0x4],eax
   14fb5:	mov    eax,DWORD PTR [ebx+0xc]
   14fb8:	mov    edi,DWORD PTR [esi+0x4]
   14fbb:	mov    DWORD PTR [esi+0xc],eax
   14fbe:	mov    eax,DWORD PTR [edi+0x4]
   14fc1:	cmp    eax,DWORD PTR ds:0x77ab4
   14fc7:	je     0x14fe1
   14fc9:	push   eax
   14fca:	call   0x10e4e
   14fcf:	mov    DWORD PTR [edi],eax
   14fd1:	mov    esi,DWORD PTR [esi+0x4]
   14fd4:	push   DWORD PTR [esi+0x4]
   14fd7:	call   0x10e2c
   14fdc:	mov    DWORD PTR [esi+0x8],eax
   14fdf:	jmp    0x14fe9
   14fe1:	mov    DWORD PTR [edi],edi
   14fe3:	mov    esi,DWORD PTR [esi+0x4]
   14fe6:	mov    DWORD PTR [esi+0x8],esi
   14fe9:	pop    edi
   14fea:	pop    esi
   14feb:	pop    ebx
   14fec:	pop    ebp
   14fed:	ret    0x4
   14ff0:	int3   
   14ff1:	int3   
   14ff2:	int3   
   14ff3:	int3   
   14ff4:	int3   
   14ff5:	int3   
   14ff6:	mov    edi,edi
   14ff8:	push   ebp
   14ff9:	mov    ebp,esp
   14ffb:	push   ecx
   14ffc:	push   ebx
   14ffd:	push   esi
   14ffe:	push   edi
   14fff:	xor    edi,edi
   15001:	push   edi
   15002:	push   edi
   15003:	push   edi
   15004:	mov    esi,ecx
   15006:	mov    eax,DWORD PTR [esi+0x10]
   15009:	push   edi
   1500a:	push   eax
   1500b:	xor    ebx,ebx
   1500d:	call   0x11a5a
   15012:	call   eax
   15014:	test   eax,eax
   15016:	jge    0x1501c
   15018:	xor    eax,eax
   1501a:	jmp    0x15044
   1501c:	lea    eax,[ebp+0x8]
   1501f:	push   eax
   15020:	lea    eax,[ebp-0x4]
   15023:	push   eax
   15024:	mov    ecx,esi
   15026:	call   0x13c46
   1502b:	mov    eax,DWORD PTR [ebp-0x4]
   1502e:	cmp    eax,DWORD PTR [esi+0x4]
   15031:	je     0x15036
   15033:	mov    ebx,DWORD PTR [eax+0x10]
   15036:	mov    esi,DWORD PTR [esi+0x10]
   15039:	push   edi
   1503a:	push   esi
   1503b:	call   0x11a84
   15040:	call   eax
   15042:	mov    eax,ebx
   15044:	pop    edi
   15045:	pop    esi
   15046:	pop    ebx
   15047:	leave  
   15048:	ret    0x4
   1504b:	int3   
   1504c:	int3   
   1504d:	int3   
   1504e:	int3   
   1504f:	int3   
   15050:	push   0x10
   15052:	push   0x76a68
   15057:	call   0x1e1dc
   1505c:	xor    ebx,ebx
   1505e:	push   ebx
   1505f:	push   ebx
   15060:	push   ebx
   15061:	push   ebx
   15062:	push   0x76f58
   15067:	call   0x11a5a
   1506c:	call   eax
   1506e:	cmp    eax,ebx
   15070:	jl     0x1512e
   15076:	mov    DWORD PTR [ebp-0x4],ebx
   15079:	push   0xffffffff
   1507b:	push   0x1e5e8
   15080:	lea    ecx,[ebp-0x20]
   15083:	call   0x12ba8
   15088:	mov    esi,DWORD PTR [ebp+0x8]
   1508b:	push   esi
   1508c:	lea    eax,[ebp+0x8]
   1508f:	push   eax
   15090:	mov    ecx,DWORD PTR ds:0x76f28
   15096:	call   0x145cc
   1509b:	mov    eax,ds:0x76f28
   150a0:	mov    eax,DWORD PTR [eax+0x4]
   150a3:	mov    ecx,DWORD PTR [ebp+0x8]
   150a6:	cmp    ecx,eax
   150a8:	je     0x150b6
   150aa:	add    ecx,0x14
   150ad:	push   ecx
   150ae:	lea    ecx,[ebp-0x20]
   150b1:	call   0x12a44
   150b6:	mov    edx,DWORD PTR [esi+0x4]
   150b9:	mov    eax,DWORD PTR [ebp-0x1c]
   150bc:	lea    ecx,[eax+edx*1+0x2]
   150c0:	mov    eax,DWORD PTR [ebp+0xc]
   150c3:	cmp    ecx,DWORD PTR [eax]
   150c5:	jbe    0x150d2
   150c7:	mov    DWORD PTR [eax],ecx
   150c9:	mov    DWORD PTR [eax+0x8],0x2
   150d0:	jmp    0x150f5
   150d2:	mov    DWORD PTR [eax+0x8],ebx
   150d5:	mov    esi,DWORD PTR [esi]
   150d7:	lea    edi,[eax+0xc]
   150da:	mov    cl,BYTE PTR [esi]
   150dc:	mov    BYTE PTR [edi],cl
   150de:	inc    esi
   150df:	inc    edi
   150e0:	cmp    cl,bl
   150e2:	jne    0x150da
   150e4:	mov    esi,DWORD PTR [ebp-0x20]
   150e7:	lea    eax,[edx+eax*1+0xd]
   150eb:	mov    cl,BYTE PTR [esi]
   150ed:	mov    BYTE PTR [eax],cl
   150ef:	inc    esi
   150f0:	inc    eax
   150f1:	cmp    cl,bl
   150f3:	jne    0x150eb
   150f5:	push   DWORD PTR [ebp-0x20]
   150f8:	call   0x11d3e
   150fd:	pop    ecx
   150fe:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15105:	jmp    0x15121
   15107:	xor    eax,eax
   15109:	inc    eax
   1510a:	ret    
   1510b:	mov    esp,DWORD PTR [ebp-0x18]
   1510e:	mov    eax,DWORD PTR [ebp+0xc]
   15111:	mov    DWORD PTR [eax+0x8],0x4
   15118:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1511f:	xor    ebx,ebx
   15121:	push   ebx
   15122:	push   0x76f58
   15127:	call   0x11a84
   1512c:	call   eax
   1512e:	call   0x1e221
   15133:	ret    0x8
   15136:	int3   
   15137:	int3   
   15138:	int3   
   15139:	int3   
   1513a:	int3   
   1513b:	int3   
   1513c:	push   0xc
   1513e:	push   0x76a88
   15143:	call   0x1e1dc
   15148:	xor    edi,edi
   1514a:	push   edi
   1514b:	push   edi
   1514c:	push   edi
   1514d:	push   edi
   1514e:	push   0x76f58
   15153:	call   0x11a5a
   15158:	call   eax
   1515a:	cmp    eax,edi
   1515c:	jl     0x1520c
   15162:	mov    DWORD PTR [ebp-0x4],edi
   15165:	lea    eax,[ebp+0x8]
   15168:	push   eax
   15169:	lea    eax,[ebp-0x1c]
   1516c:	push   eax
   1516d:	mov    esi,DWORD PTR ds:0x76fb4
   15173:	mov    ecx,esi
   15175:	call   0x13d40
   1517a:	mov    esi,DWORD PTR [esi+0x4]
   1517d:	mov    ecx,DWORD PTR [ebp-0x1c]
   15180:	cmp    ecx,esi
   15182:	jne    0x15190
   15184:	mov    eax,DWORD PTR [ebp+0xc]
   15187:	mov    DWORD PTR [eax+0x8],0x1
   1518e:	jmp    0x151dc
   15190:	mov    eax,DWORD PTR [ecx+0x10]
   15193:	cmp    eax,edi
   15195:	jne    0x1519b
   15197:	xor    edx,edx
   15199:	jmp    0x1519e
   1519b:	mov    edx,DWORD PTR [eax+0x8]
   1519e:	mov    eax,DWORD PTR [ebp+0xc]
   151a1:	cmp    edx,DWORD PTR [eax]
   151a3:	jbe    0x151b0
   151a5:	mov    DWORD PTR [eax],edx
   151a7:	mov    DWORD PTR [eax+0x8],0x2
   151ae:	jmp    0x151dc
   151b0:	mov    DWORD PTR [eax+0x8],edi
   151b3:	mov    edx,DWORD PTR [ecx+0x10]
   151b6:	cmp    edx,edi
   151b8:	jne    0x151be
   151ba:	xor    edx,edx
   151bc:	jmp    0x151c1
   151be:	mov    edx,DWORD PTR [edx+0x8]
   151c1:	mov    ecx,DWORD PTR [ecx+0x10]
   151c4:	cmp    ecx,edi
   151c6:	jne    0x151cc
   151c8:	xor    ecx,ecx
   151ca:	jmp    0x151ce
   151cc:	mov    ecx,DWORD PTR [ecx]
   151ce:	push   edx
   151cf:	push   ecx
   151d0:	add    eax,0xc
   151d3:	push   eax
   151d4:	call   0x1e1b6
   151d9:	add    esp,0xc
   151dc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   151e3:	jmp    0x151ff
   151e5:	xor    eax,eax
   151e7:	inc    eax
   151e8:	ret    
   151e9:	mov    esp,DWORD PTR [ebp-0x18]
   151ec:	mov    eax,DWORD PTR [ebp+0xc]
   151ef:	mov    DWORD PTR [eax+0x8],0x4
   151f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   151fd:	xor    edi,edi
   151ff:	push   edi
   15200:	push   0x76f58
   15205:	call   0x11a84
   1520a:	call   eax
   1520c:	call   0x1e221
   15211:	ret    0x8
   15214:	int3   
   15215:	int3   
   15216:	int3   
   15217:	int3   
   15218:	int3   
   15219:	int3   
   1521a:	mov    edi,edi
   1521c:	push   ebp
   1521d:	mov    ebp,esp
   1521f:	push   ebx
   15220:	push   esi
   15221:	push   DWORD PTR [ebp+0x8]
   15224:	mov    esi,ecx
   15226:	lea    eax,[ebp+0x8]
   15229:	push   eax
   1522a:	lea    ecx,[esi+0x4]
   1522d:	xor    bl,bl
   1522f:	call   0x13da2
   15234:	mov    eax,DWORD PTR [ebp+0x8]
   15237:	cmp    eax,DWORD PTR [esi+0x8]
   1523a:	je     0x1524a
   1523c:	mov    ecx,DWORD PTR [ebp+0xc]
   1523f:	add    eax,0x18
   15242:	push   eax
   15243:	call   0x12b1c
   15248:	inc    bl
   1524a:	pop    esi
   1524b:	mov    al,bl
   1524d:	pop    ebx
   1524e:	pop    ebp
   1524f:	ret    0x8
   15252:	int3   
   15253:	int3   
   15254:	int3   
   15255:	int3   
   15256:	int3   
   15257:	int3   
   15258:	mov    edi,edi
   1525a:	push   ebp
   1525b:	mov    ebp,esp
   1525d:	push   ecx
   1525e:	push   esi
   1525f:	mov    esi,ecx
   15261:	mov    eax,DWORD PTR [esi+0x4]
   15264:	mov    ecx,DWORD PTR [eax]
   15266:	push   eax
   15267:	push   ecx
   15268:	lea    eax,[ebp-0x4]
   1526b:	push   eax
   1526c:	mov    ecx,esi
   1526e:	call   0x146b0
   15273:	push   DWORD PTR [esi+0x4]
   15276:	call   0x11d3e
   1527b:	xor    eax,eax
   1527d:	mov    DWORD PTR [esi+0x4],eax
   15280:	mov    DWORD PTR [esi+0xc],eax
   15283:	dec    DWORD PTR ds:0x77c70
   15289:	pop    ecx
   1528a:	pop    esi
   1528b:	jne    0x152a3
   1528d:	mov    ecx,DWORD PTR ds:0x77ab4
   15293:	mov    ds:0x77ab4,eax
   15298:	cmp    ecx,eax
   1529a:	je     0x152a3
   1529c:	push   ecx
   1529d:	call   0x11d3e
   152a2:	pop    ecx
   152a3:	leave  
   152a4:	ret    
   152a5:	int3   
   152a6:	int3   
   152a7:	int3   
   152a8:	int3   
   152a9:	int3   
   152aa:	mov    edi,edi
   152ac:	push   ebp
   152ad:	mov    ebp,esp
   152af:	push   ecx
   152b0:	push   ecx
   152b1:	push   DWORD PTR [ebp+0x8]
   152b4:	lea    eax,[ebp-0x8]
   152b7:	push   eax
   152b8:	call   0x14074
   152bd:	and    DWORD PTR [ebp+0x8],0x0
   152c1:	lea    eax,[ebp+0x8]
   152c4:	push   eax
   152c5:	push   DWORD PTR [ebp-0x4]
   152c8:	push   DWORD PTR [ebp-0x8]
   152cb:	call   0x14f72
   152d0:	mov    eax,DWORD PTR [ebp+0x8]
   152d3:	add    esp,0xc
   152d6:	leave  
   152d7:	ret    0x4
   152da:	int3   
   152db:	int3   
   152dc:	int3   
   152dd:	int3   
   152de:	int3   
   152df:	int3   
   152e0:	mov    edi,edi
   152e2:	push   ebp
   152e3:	mov    ebp,esp
   152e5:	push   ecx
   152e6:	push   ebx
   152e7:	push   esi
   152e8:	push   edi
   152e9:	mov    edi,ecx
   152eb:	mov    eax,DWORD PTR [edi+0x4]
   152ee:	mov    esi,DWORD PTR [eax+0x4]
   152f1:	mov    ebx,eax
   152f3:	mov    eax,ds:0x77ab4
   152f8:	mov    dl,0x1
   152fa:	cmp    esi,eax
   152fc:	je     0x1531a
   152fe:	mov    ecx,DWORD PTR [ebp+0xc]
   15301:	mov    ecx,DWORD PTR [ecx]
   15303:	cmp    ecx,DWORD PTR [esi+0xc]
   15306:	mov    ebx,esi
   15308:	setb   dl
   1530b:	test   dl,dl
   1530d:	je     0x15313
   1530f:	mov    esi,DWORD PTR [esi]
   15311:	jmp    0x15316
   15313:	mov    esi,DWORD PTR [esi+0x8]
   15316:	cmp    esi,eax
   15318:	jne    0x15303
   1531a:	cmp    BYTE PTR [edi+0x8],0x0
   1531e:	je     0x1533b
   15320:	push   DWORD PTR [ebp+0xc]
   15323:	push   ebx
   15324:	push   esi
   15325:	lea    eax,[ebp+0xc]
   15328:	push   eax
   15329:	mov    ecx,edi
   1532b:	call   0x14962
   15330:	mov    ecx,DWORD PTR [eax]
   15332:	mov    eax,DWORD PTR [ebp+0x8]
   15335:	mov    BYTE PTR [eax+0x4],0x1
   15339:	jmp    0x1536a
   1533b:	mov    ecx,ebx
   1533d:	mov    DWORD PTR [ebp-0x4],ecx
   15340:	test   dl,dl
   15342:	je     0x15356
   15344:	mov    eax,DWORD PTR [edi+0x4]
   15347:	cmp    ebx,DWORD PTR [eax]
   15349:	je     0x15320
   1534b:	lea    ecx,[ebp-0x4]
   1534e:	call   0x12eb4
   15353:	mov    ecx,DWORD PTR [ebp-0x4]
   15356:	mov    edx,DWORD PTR [ecx+0xc]
   15359:	mov    eax,DWORD PTR [ebp+0xc]
   1535c:	cmp    edx,DWORD PTR [eax]
   1535e:	jae    0x15363
   15360:	push   eax
   15361:	jmp    0x15323
   15363:	mov    eax,DWORD PTR [ebp+0x8]
   15366:	mov    BYTE PTR [eax+0x4],0x0
   1536a:	pop    edi
   1536b:	pop    esi
   1536c:	mov    DWORD PTR [eax],ecx
   1536e:	pop    ebx
   1536f:	leave  
   15370:	ret    0x8
   15373:	int3   
   15374:	int3   
   15375:	int3   
   15376:	int3   
   15377:	int3   
   15378:	mov    edi,edi
   1537a:	push   ebp
   1537b:	mov    ebp,esp
   1537d:	push   ecx
   1537e:	push   ebx
   1537f:	push   esi
   15380:	push   edi
   15381:	mov    edi,ecx
   15383:	mov    eax,DWORD PTR [edi+0x4]
   15386:	mov    esi,DWORD PTR [eax+0x4]
   15389:	mov    ebx,eax
   1538b:	mov    eax,ds:0x77ab0
   15390:	mov    dl,0x1
   15392:	cmp    esi,eax
   15394:	je     0x153b2
   15396:	mov    ecx,DWORD PTR [ebp+0xc]
   15399:	mov    ecx,DWORD PTR [ecx]
   1539b:	cmp    ecx,DWORD PTR [esi+0xc]
   1539e:	mov    ebx,esi
   153a0:	setb   dl
   153a3:	test   dl,dl
   153a5:	je     0x153ab
   153a7:	mov    esi,DWORD PTR [esi]
   153a9:	jmp    0x153ae
   153ab:	mov    esi,DWORD PTR [esi+0x8]
   153ae:	cmp    esi,eax
   153b0:	jne    0x1539b
   153b2:	cmp    BYTE PTR [edi+0x8],0x0
   153b6:	je     0x153d3
   153b8:	push   DWORD PTR [ebp+0xc]
   153bb:	push   ebx
   153bc:	push   esi
   153bd:	lea    eax,[ebp+0xc]
   153c0:	push   eax
   153c1:	mov    ecx,edi
   153c3:	call   0x14b14
   153c8:	mov    ecx,DWORD PTR [eax]
   153ca:	mov    eax,DWORD PTR [ebp+0x8]
   153cd:	mov    BYTE PTR [eax+0x4],0x1
   153d1:	jmp    0x15402
   153d3:	mov    ecx,ebx
   153d5:	mov    DWORD PTR [ebp-0x4],ecx
   153d8:	test   dl,dl
   153da:	je     0x153ee
   153dc:	mov    eax,DWORD PTR [edi+0x4]
   153df:	cmp    ebx,DWORD PTR [eax]
   153e1:	je     0x153b8
   153e3:	lea    ecx,[ebp-0x4]
   153e6:	call   0x10eb4
   153eb:	mov    ecx,DWORD PTR [ebp-0x4]
   153ee:	mov    edx,DWORD PTR [ecx+0xc]
   153f1:	mov    eax,DWORD PTR [ebp+0xc]
   153f4:	cmp    edx,DWORD PTR [eax]
   153f6:	jae    0x153fb
   153f8:	push   eax
   153f9:	jmp    0x153bb
   153fb:	mov    eax,DWORD PTR [ebp+0x8]
   153fe:	mov    BYTE PTR [eax+0x4],0x0
   15402:	pop    edi
   15403:	pop    esi
   15404:	mov    DWORD PTR [eax],ecx
   15406:	pop    ebx
   15407:	leave  
   15408:	ret    0x8
   1540b:	int3   
   1540c:	int3   
   1540d:	int3   
   1540e:	int3   
   1540f:	int3   
   15410:	mov    edi,edi
   15412:	push   ebp
   15413:	mov    ebp,esp
   15415:	push   ecx
   15416:	push   esi
   15417:	mov    esi,ecx
   15419:	cmp    DWORD PTR [esi+0xc],0x0
   1541d:	mov    ecx,DWORD PTR [ebp+0xc]
   15420:	je     0x1545a
   15422:	mov    eax,DWORD PTR [esi+0x4]
   15425:	cmp    ecx,DWORD PTR [eax]
   15427:	jne    0x1545a
   15429:	cmp    DWORD PTR [ebp+0x10],eax
   1542c:	jne    0x1545a
   1542e:	push   DWORD PTR [eax+0x4]
   15431:	mov    ecx,esi
   15433:	call   0x14ec6
   15438:	mov    ecx,DWORD PTR ds:0x77ac0
   1543e:	mov    eax,DWORD PTR [esi+0x4]
   15441:	mov    DWORD PTR [eax+0x4],ecx
   15444:	mov    eax,DWORD PTR [esi+0x4]
   15447:	and    DWORD PTR [esi+0xc],0x0
   1544b:	mov    DWORD PTR [eax],eax
   1544d:	mov    eax,DWORD PTR [esi+0x4]
   15450:	mov    DWORD PTR [eax+0x8],eax
   15453:	mov    eax,DWORD PTR [esi+0x4]
   15456:	mov    ecx,DWORD PTR [eax]
   15458:	jmp    0x1547f
   1545a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1545d:	je     0x1547f
   1545f:	push   edi
   15460:	mov    edi,ecx
   15462:	lea    ecx,[ebp+0xc]
   15465:	call   0x11172
   1546a:	push   edi
   1546b:	lea    eax,[ebp-0x4]
   1546e:	push   eax
   1546f:	mov    ecx,esi
   15471:	call   0x14c64
   15476:	mov    ecx,DWORD PTR [ebp+0xc]
   15479:	cmp    ecx,DWORD PTR [ebp+0x10]
   1547c:	jne    0x15460
   1547e:	pop    edi
   1547f:	mov    eax,DWORD PTR [ebp+0x8]
   15482:	mov    DWORD PTR [eax],ecx
   15484:	pop    esi
   15485:	leave  
   15486:	ret    0xc
   15489:	int3   
   1548a:	int3   
   1548b:	int3   
   1548c:	int3   
   1548d:	int3   
   1548e:	mov    edi,edi
   15490:	push   ebp
   15491:	mov    ebp,esp
   15493:	push   ecx
   15494:	push   ecx
   15495:	push   ebx
   15496:	push   esi
   15497:	mov    DWORD PTR [ebp-0x4],ecx
   1549a:	push   edi
   1549b:	mov    edi,DWORD PTR [ebp+0xc]
   1549e:	lea    ecx,[ebp+0xc]
   154a1:	call   0x12e7e
   154a6:	mov    esi,DWORD PTR [edi]
   154a8:	mov    eax,ds:0x77ab8
   154ad:	mov    ebx,edi
   154af:	mov    DWORD PTR [ebp-0x8],esi
   154b2:	cmp    esi,eax
   154b4:	jne    0x154d2
   154b6:	mov    esi,DWORD PTR [edi+0x8]
   154b9:	mov    eax,DWORD PTR [ebx+0x4]
   154bc:	mov    ecx,DWORD PTR [ebp-0x4]
   154bf:	mov    DWORD PTR [esi+0x4],eax
   154c2:	mov    eax,DWORD PTR [ecx+0x4]
   154c5:	cmp    DWORD PTR [eax+0x4],edi
   154c8:	jne    0x15547
   154ca:	mov    DWORD PTR [eax+0x4],esi
   154cd:	jmp    0x15555
   154d2:	mov    ecx,DWORD PTR [edi+0x8]
   154d5:	cmp    ecx,eax
   154d7:	je     0x154b9
   154d9:	push   ecx
   154da:	call   0x10e92
   154df:	mov    ebx,eax
   154e1:	mov    esi,DWORD PTR [ebx+0x8]
   154e4:	cmp    ebx,edi
   154e6:	je     0x154b9
   154e8:	mov    eax,DWORD PTR [ebp-0x8]
   154eb:	mov    DWORD PTR [eax+0x4],ebx
   154ee:	mov    eax,DWORD PTR [edi]
   154f0:	mov    DWORD PTR [ebx],eax
   154f2:	cmp    ebx,DWORD PTR [edi+0x8]
   154f5:	jne    0x154fc
   154f7:	mov    DWORD PTR [esi+0x4],ebx
   154fa:	jmp    0x15513
   154fc:	mov    eax,DWORD PTR [ebx+0x4]
   154ff:	mov    DWORD PTR [esi+0x4],eax
   15502:	mov    eax,DWORD PTR [ebx+0x4]
   15505:	mov    DWORD PTR [eax],esi
   15507:	mov    eax,DWORD PTR [edi+0x8]
   1550a:	mov    DWORD PTR [ebx+0x8],eax
   1550d:	mov    eax,DWORD PTR [edi+0x8]
   15510:	mov    DWORD PTR [eax+0x4],ebx
   15513:	mov    eax,DWORD PTR [ebp-0x4]
   15516:	mov    eax,DWORD PTR [eax+0x4]
   15519:	cmp    DWORD PTR [eax+0x4],edi
   1551c:	jne    0x15523
   1551e:	mov    DWORD PTR [eax+0x4],ebx
   15521:	jmp    0x15531
   15523:	mov    eax,DWORD PTR [edi+0x4]
   15526:	cmp    DWORD PTR [eax],edi
   15528:	jne    0x1552e
   1552a:	mov    DWORD PTR [eax],ebx
   1552c:	jmp    0x15531
   1552e:	mov    DWORD PTR [eax+0x8],ebx
   15531:	mov    eax,DWORD PTR [edi+0x4]
   15534:	mov    DWORD PTR [ebx+0x4],eax
   15537:	mov    eax,DWORD PTR [ebx+0x60]
   1553a:	mov    ecx,DWORD PTR [edi+0x60]
   1553d:	mov    DWORD PTR [ebx+0x60],ecx
   15540:	mov    DWORD PTR [edi+0x60],eax
   15543:	mov    ebx,edi
   15545:	jmp    0x155a8
   15547:	mov    eax,DWORD PTR [edi+0x4]
   1554a:	cmp    DWORD PTR [eax],edi
   1554c:	jne    0x15552
   1554e:	mov    DWORD PTR [eax],esi
   15550:	jmp    0x15555
   15552:	mov    DWORD PTR [eax+0x8],esi
   15555:	mov    eax,DWORD PTR [ecx+0x4]
   15558:	mov    DWORD PTR [ebp-0x8],eax
   1555b:	cmp    DWORD PTR [eax],edi
   1555d:	jne    0x1557f
   1555f:	mov    edx,DWORD PTR [edi+0x8]
   15562:	cmp    edx,DWORD PTR ds:0x77ab8
   15568:	jne    0x15571
   1556a:	mov    edx,DWORD PTR [edi+0x4]
   1556d:	mov    DWORD PTR [eax],edx
   1556f:	jmp    0x1557f
   15571:	push   esi
   15572:	call   0x10e92
   15577:	mov    ecx,DWORD PTR [ebp-0x8]
   1557a:	mov    DWORD PTR [ecx],eax
   1557c:	mov    ecx,DWORD PTR [ebp-0x4]
   1557f:	mov    eax,DWORD PTR [ecx+0x4]
   15582:	mov    DWORD PTR [ebp-0x8],eax
   15585:	cmp    DWORD PTR [eax+0x8],edi
   15588:	jne    0x155a8
   1558a:	mov    ecx,DWORD PTR [edi]
   1558c:	cmp    ecx,DWORD PTR ds:0x77ab8
   15592:	jne    0x1559c
   15594:	mov    ecx,DWORD PTR [edi+0x4]
   15597:	mov    DWORD PTR [eax+0x8],ecx
   1559a:	jmp    0x155a8
   1559c:	push   esi
   1559d:	call   0x10e70
   155a2:	mov    ecx,DWORD PTR [ebp-0x8]
   155a5:	mov    DWORD PTR [ecx+0x8],eax
   155a8:	xor    edi,edi
   155aa:	inc    edi
   155ab:	cmp    DWORD PTR [ebx+0x60],edi
   155ae:	jne    0x156c5
   155b4:	jmp    0x15673
   155b9:	cmp    DWORD PTR [esi+0x60],edi
   155bc:	jne    0x156c2
   155c2:	mov    eax,DWORD PTR [esi+0x4]
   155c5:	cmp    esi,DWORD PTR [eax]
   155c7:	jne    0x1563e
   155c9:	mov    eax,DWORD PTR [eax+0x8]
   155cc:	cmp    DWORD PTR [eax+0x60],0x0
   155d0:	jne    0x155ea
   155d2:	mov    DWORD PTR [eax+0x60],edi
   155d5:	mov    eax,DWORD PTR [esi+0x4]
   155d8:	and    DWORD PTR [eax+0x60],0x0
   155dc:	push   DWORD PTR [esi+0x4]
   155df:	call   0x13008
   155e4:	mov    eax,DWORD PTR [esi+0x4]
   155e7:	mov    eax,DWORD PTR [eax+0x8]
   155ea:	mov    ecx,DWORD PTR [eax]
   155ec:	cmp    DWORD PTR [ecx+0x60],edi
   155ef:	jne    0x155f9
   155f1:	mov    ecx,DWORD PTR [eax+0x8]
   155f4:	cmp    DWORD PTR [ecx+0x60],edi
   155f7:	je     0x1566c
   155f9:	mov    ecx,DWORD PTR [eax+0x8]
   155fc:	cmp    DWORD PTR [ecx+0x60],edi
   155ff:	jne    0x15619
   15601:	mov    ecx,DWORD PTR [eax]
   15603:	mov    DWORD PTR [ecx+0x60],edi
   15606:	mov    ecx,DWORD PTR [ebp-0x4]
   15609:	and    DWORD PTR [eax+0x60],0x0
   1560d:	push   eax
   1560e:	call   0x13056
   15613:	mov    eax,DWORD PTR [esi+0x4]
   15616:	mov    eax,DWORD PTR [eax+0x8]
   15619:	mov    ecx,DWORD PTR [esi+0x4]
   1561c:	mov    ecx,DWORD PTR [ecx+0x60]
   1561f:	mov    DWORD PTR [eax+0x60],ecx
   15622:	mov    ecx,DWORD PTR [esi+0x4]
   15625:	mov    DWORD PTR [ecx+0x60],edi
   15628:	mov    eax,DWORD PTR [eax+0x8]
   1562b:	mov    ecx,DWORD PTR [ebp-0x4]
   1562e:	mov    DWORD PTR [eax+0x60],edi
   15631:	push   DWORD PTR [esi+0x4]
   15634:	call   0x13008
   15639:	jmp    0x156c2
   1563e:	mov    eax,DWORD PTR [eax]
   15640:	cmp    DWORD PTR [eax+0x60],0x0
   15644:	jne    0x1565d
   15646:	mov    DWORD PTR [eax+0x60],edi
   15649:	mov    eax,DWORD PTR [esi+0x4]
   1564c:	and    DWORD PTR [eax+0x60],0x0
   15650:	push   DWORD PTR [esi+0x4]
   15653:	call   0x13056
   15658:	mov    eax,DWORD PTR [esi+0x4]
   1565b:	mov    eax,DWORD PTR [eax]
   1565d:	mov    ecx,DWORD PTR [eax+0x8]
   15660:	cmp    DWORD PTR [ecx+0x60],edi
   15663:	jne    0x15684
   15665:	mov    ecx,DWORD PTR [eax]
   15667:	cmp    DWORD PTR [ecx+0x60],edi
   1566a:	jne    0x15684
   1566c:	and    DWORD PTR [eax+0x60],0x0
   15670:	mov    esi,DWORD PTR [esi+0x4]
   15673:	mov    ecx,DWORD PTR [ebp-0x4]
   15676:	mov    eax,DWORD PTR [ecx+0x4]
   15679:	cmp    esi,DWORD PTR [eax+0x4]
   1567c:	jne    0x155b9
   15682:	jmp    0x156c2
   15684:	mov    ecx,DWORD PTR [eax]
   15686:	cmp    DWORD PTR [ecx+0x60],edi
   15689:	jne    0x156a3
   1568b:	mov    ecx,DWORD PTR [eax+0x8]
   1568e:	mov    DWORD PTR [ecx+0x60],edi
   15691:	mov    ecx,DWORD PTR [ebp-0x4]
   15694:	and    DWORD PTR [eax+0x60],0x0
   15698:	push   eax
   15699:	call   0x13008
   1569e:	mov    eax,DWORD PTR [esi+0x4]
   156a1:	mov    eax,DWORD PTR [eax]
   156a3:	mov    ecx,DWORD PTR [esi+0x4]
   156a6:	mov    ecx,DWORD PTR [ecx+0x60]
   156a9:	mov    DWORD PTR [eax+0x60],ecx
   156ac:	mov    ecx,DWORD PTR [esi+0x4]
   156af:	mov    DWORD PTR [ecx+0x60],edi
   156b2:	mov    eax,DWORD PTR [eax]
   156b4:	mov    ecx,DWORD PTR [ebp-0x4]
   156b7:	mov    DWORD PTR [eax+0x60],edi
   156ba:	push   DWORD PTR [esi+0x4]
   156bd:	call   0x13056
   156c2:	mov    DWORD PTR [esi+0x60],edi
   156c5:	lea    eax,[ebx+0x10]
   156c8:	push   eax
   156c9:	call   0x144a8
   156ce:	push   ebx
   156cf:	call   0x11d3e
   156d4:	mov    eax,DWORD PTR [ebp-0x4]
   156d7:	dec    DWORD PTR [eax+0xc]
   156da:	mov    eax,DWORD PTR [ebp+0x8]
   156dd:	pop    ecx
   156de:	mov    ecx,DWORD PTR [ebp+0xc]
   156e1:	pop    edi
   156e2:	pop    esi
   156e3:	mov    DWORD PTR [eax],ecx
   156e5:	pop    ebx
   156e6:	leave  
   156e7:	ret    0x8
   156ea:	int3   
   156eb:	int3   
   156ec:	int3   
   156ed:	int3   
   156ee:	int3   
   156ef:	int3   
   156f0:	mov    edi,edi
   156f2:	push   ebp
   156f3:	mov    ebp,esp
   156f5:	push   ebx
   156f6:	push   esi
   156f7:	push   edi
   156f8:	mov    edi,DWORD PTR [ebp+0x8]
   156fb:	mov    ebx,ecx
   156fd:	mov    esi,edi
   156ff:	cmp    edi,DWORD PTR ds:0x77ab8
   15705:	je     0x1572d
   15707:	push   DWORD PTR [esi+0x8]
   1570a:	mov    ecx,ebx
   1570c:	call   0x156f0
   15711:	mov    esi,DWORD PTR [esi]
   15713:	lea    eax,[edi+0x10]
   15716:	push   eax
   15717:	call   0x144a8
   1571c:	push   edi
   1571d:	call   0x11d3e
   15722:	pop    ecx
   15723:	mov    edi,esi
   15725:	cmp    esi,DWORD PTR ds:0x77ab8
   1572b:	jne    0x15707
   1572d:	pop    edi
   1572e:	pop    esi
   1572f:	pop    ebx
   15730:	pop    ebp
   15731:	ret    0x4
   15734:	int3   
   15735:	int3   
   15736:	int3   
   15737:	int3   
   15738:	int3   
   15739:	int3   
   1573a:	mov    edi,edi
   1573c:	push   ebp
   1573d:	mov    ebp,esp
   1573f:	push   ebx
   15740:	push   esi
   15741:	mov    esi,DWORD PTR [ebp+0x10]
   15744:	push   edi
   15745:	push   0x0
   15747:	push   esi
   15748:	mov    edi,ecx
   1574a:	call   0x14448
   1574f:	push   DWORD PTR [ebp+0x14]
   15752:	mov    ebx,eax
   15754:	mov    eax,ds:0x77ab8
   15759:	mov    DWORD PTR [ebx],eax
   1575b:	mov    eax,ds:0x77ab8
   15760:	mov    DWORD PTR [ebx+0x8],eax
   15763:	lea    eax,[ebx+0x10]
   15766:	push   eax
   15767:	call   0x1446c
   1576c:	inc    DWORD PTR [edi+0xc]
   1576f:	cmp    esi,DWORD PTR [edi+0x4]
   15772:	je     0x1579c
   15774:	mov    eax,DWORD PTR [ebp+0xc]
   15777:	cmp    eax,DWORD PTR ds:0x77ab8
   1577d:	jne    0x1579c
   1577f:	lea    eax,[esi+0x10]
   15782:	push   eax
   15783:	push   DWORD PTR [ebp+0x14]
   15786:	call   0x19f08
   1578b:	test   al,al
   1578d:	jne    0x1579c
   1578f:	mov    DWORD PTR [esi+0x8],ebx
   15792:	mov    eax,DWORD PTR [edi+0x4]
   15795:	cmp    esi,DWORD PTR [eax+0x8]
   15798:	jne    0x157b6
   1579a:	jmp    0x157ab
   1579c:	mov    DWORD PTR [esi],ebx
   1579e:	mov    eax,DWORD PTR [edi+0x4]
   157a1:	cmp    esi,eax
   157a3:	jne    0x157b0
   157a5:	mov    DWORD PTR [eax+0x4],ebx
   157a8:	mov    eax,DWORD PTR [edi+0x4]
   157ab:	mov    DWORD PTR [eax+0x8],ebx
   157ae:	jmp    0x157b6
   157b0:	cmp    esi,DWORD PTR [eax]
   157b2:	jne    0x157b6
   157b4:	mov    DWORD PTR [eax],ebx
   157b6:	mov    eax,DWORD PTR [edi+0x4]
   157b9:	mov    esi,ebx
   157bb:	cmp    ebx,DWORD PTR [eax+0x4]
   157be:	je     0x15872
   157c4:	mov    eax,DWORD PTR [esi+0x4]
   157c7:	xor    edx,edx
   157c9:	cmp    DWORD PTR [eax+0x60],edx
   157cc:	jne    0x15872
   157d2:	mov    ecx,DWORD PTR [eax+0x4]
   157d5:	cmp    eax,DWORD PTR [ecx]
   157d7:	jne    0x15813
   157d9:	mov    ecx,DWORD PTR [ecx+0x8]
   157dc:	cmp    DWORD PTR [ecx+0x60],edx
   157df:	je     0x1581a
   157e1:	cmp    esi,DWORD PTR [eax+0x8]
   157e4:	jne    0x157f0
   157e6:	mov    esi,eax
   157e8:	push   esi
   157e9:	mov    ecx,edi
   157eb:	call   0x13008
   157f0:	mov    eax,DWORD PTR [esi+0x4]
   157f3:	mov    DWORD PTR [eax+0x60],0x1
   157fa:	mov    eax,DWORD PTR [esi+0x4]
   157fd:	mov    eax,DWORD PTR [eax+0x4]
   15800:	and    DWORD PTR [eax+0x60],0x0
   15804:	mov    eax,DWORD PTR [esi+0x4]
   15807:	push   DWORD PTR [eax+0x4]
   1580a:	mov    ecx,edi
   1580c:	call   0x13056
   15811:	jmp    0x15866
   15813:	mov    ecx,DWORD PTR [ecx]
   15815:	cmp    DWORD PTR [ecx+0x60],edx
   15818:	jne    0x15837
   1581a:	mov    edx,eax
   1581c:	xor    eax,eax
   1581e:	inc    eax
   1581f:	mov    DWORD PTR [edx+0x60],eax
   15822:	mov    DWORD PTR [ecx+0x60],eax
   15825:	mov    eax,DWORD PTR [esi+0x4]
   15828:	mov    eax,DWORD PTR [eax+0x4]
   1582b:	and    DWORD PTR [eax+0x60],0x0
   1582f:	mov    eax,DWORD PTR [esi+0x4]
   15832:	mov    esi,DWORD PTR [eax+0x4]
   15835:	jmp    0x15866
   15837:	cmp    esi,DWORD PTR [eax]
   15839:	jne    0x15845
   1583b:	mov    esi,eax
   1583d:	push   esi
   1583e:	mov    ecx,edi
   15840:	call   0x13056
   15845:	mov    eax,DWORD PTR [esi+0x4]
   15848:	mov    DWORD PTR [eax+0x60],0x1
   1584f:	mov    eax,DWORD PTR [esi+0x4]
   15852:	mov    eax,DWORD PTR [eax+0x4]
   15855:	and    DWORD PTR [eax+0x60],0x0
   15859:	mov    eax,DWORD PTR [esi+0x4]
   1585c:	push   DWORD PTR [eax+0x4]
   1585f:	mov    ecx,edi
   15861:	call   0x13008
   15866:	mov    eax,DWORD PTR [edi+0x4]
   15869:	cmp    esi,DWORD PTR [eax+0x4]
   1586c:	jne    0x157c4
   15872:	mov    eax,DWORD PTR [edi+0x4]
   15875:	mov    eax,DWORD PTR [eax+0x4]
   15878:	pop    edi
   15879:	mov    DWORD PTR [eax+0x60],0x1
   15880:	mov    eax,DWORD PTR [ebp+0x8]
   15883:	pop    esi
   15884:	mov    DWORD PTR [eax],ebx
   15886:	pop    ebx
   15887:	pop    ebp
   15888:	ret    0x10
   1588b:	int3   
   1588c:	int3   
   1588d:	int3   
   1588e:	int3   
   1588f:	int3   
   15890:	mov    edi,edi
   15892:	push   ebp
   15893:	mov    ebp,esp
   15895:	push   ecx
   15896:	push   ecx
   15897:	push   ebx
   15898:	push   esi
   15899:	mov    DWORD PTR [ebp-0x4],ecx
   1589c:	push   edi
   1589d:	mov    edi,DWORD PTR [ebp+0xc]
   158a0:	lea    ecx,[ebp+0xc]
   158a3:	call   0x137a2
   158a8:	mov    esi,DWORD PTR [edi]
   158aa:	mov    eax,ds:0x77abc
   158af:	mov    ebx,edi
   158b1:	mov    DWORD PTR [ebp-0x8],esi
   158b4:	cmp    esi,eax
   158b6:	jne    0x158d4
   158b8:	mov    esi,DWORD PTR [edi+0x8]
   158bb:	mov    eax,DWORD PTR [ebx+0x4]
   158be:	mov    ecx,DWORD PTR [ebp-0x4]
   158c1:	mov    DWORD PTR [esi+0x4],eax
   158c4:	mov    eax,DWORD PTR [ecx+0x4]
   158c7:	cmp    DWORD PTR [eax+0x4],edi
   158ca:	jne    0x15949
   158cc:	mov    DWORD PTR [eax+0x4],esi
   158cf:	jmp    0x15957
   158d4:	mov    ecx,DWORD PTR [edi+0x8]
   158d7:	cmp    ecx,eax
   158d9:	je     0x158bb
   158db:	push   ecx
   158dc:	call   0x12cce
   158e1:	mov    ebx,eax
   158e3:	mov    esi,DWORD PTR [ebx+0x8]
   158e6:	cmp    ebx,edi
   158e8:	je     0x158bb
   158ea:	mov    eax,DWORD PTR [ebp-0x8]
   158ed:	mov    DWORD PTR [eax+0x4],ebx
   158f0:	mov    eax,DWORD PTR [edi]
   158f2:	mov    DWORD PTR [ebx],eax
   158f4:	cmp    ebx,DWORD PTR [edi+0x8]
   158f7:	jne    0x158fe
   158f9:	mov    DWORD PTR [esi+0x4],ebx
   158fc:	jmp    0x15915
   158fe:	mov    eax,DWORD PTR [ebx+0x4]
   15901:	mov    DWORD PTR [esi+0x4],eax
   15904:	mov    eax,DWORD PTR [ebx+0x4]
   15907:	mov    DWORD PTR [eax],esi
   15909:	mov    eax,DWORD PTR [edi+0x8]
   1590c:	mov    DWORD PTR [ebx+0x8],eax
   1590f:	mov    eax,DWORD PTR [edi+0x8]
   15912:	mov    DWORD PTR [eax+0x4],ebx
   15915:	mov    eax,DWORD PTR [ebp-0x4]
   15918:	mov    eax,DWORD PTR [eax+0x4]
   1591b:	cmp    DWORD PTR [eax+0x4],edi
   1591e:	jne    0x15925
   15920:	mov    DWORD PTR [eax+0x4],ebx
   15923:	jmp    0x15933
   15925:	mov    eax,DWORD PTR [edi+0x4]
   15928:	cmp    DWORD PTR [eax],edi
   1592a:	jne    0x15930
   1592c:	mov    DWORD PTR [eax],ebx
   1592e:	jmp    0x15933
   15930:	mov    DWORD PTR [eax+0x8],ebx
   15933:	mov    eax,DWORD PTR [edi+0x4]
   15936:	mov    DWORD PTR [ebx+0x4],eax
   15939:	mov    eax,DWORD PTR [ebx+0x58]
   1593c:	mov    ecx,DWORD PTR [edi+0x58]
   1593f:	mov    DWORD PTR [ebx+0x58],ecx
   15942:	mov    DWORD PTR [edi+0x58],eax
   15945:	mov    ebx,edi
   15947:	jmp    0x159aa
   15949:	mov    eax,DWORD PTR [edi+0x4]
   1594c:	cmp    DWORD PTR [eax],edi
   1594e:	jne    0x15954
   15950:	mov    DWORD PTR [eax],esi
   15952:	jmp    0x15957
   15954:	mov    DWORD PTR [eax+0x8],esi
   15957:	mov    eax,DWORD PTR [ecx+0x4]
   1595a:	mov    DWORD PTR [ebp-0x8],eax
   1595d:	cmp    DWORD PTR [eax],edi
   1595f:	jne    0x15981
   15961:	mov    edx,DWORD PTR [edi+0x8]
   15964:	cmp    edx,DWORD PTR ds:0x77abc
   1596a:	jne    0x15973
   1596c:	mov    edx,DWORD PTR [edi+0x4]
   1596f:	mov    DWORD PTR [eax],edx
   15971:	jmp    0x15981
   15973:	push   esi
   15974:	call   0x12cce
   15979:	mov    ecx,DWORD PTR [ebp-0x8]
   1597c:	mov    DWORD PTR [ecx],eax
   1597e:	mov    ecx,DWORD PTR [ebp-0x4]
   15981:	mov    eax,DWORD PTR [ecx+0x4]
   15984:	mov    DWORD PTR [ebp-0x8],eax
   15987:	cmp    DWORD PTR [eax+0x8],edi
   1598a:	jne    0x159aa
   1598c:	mov    ecx,DWORD PTR [edi]
   1598e:	cmp    ecx,DWORD PTR ds:0x77abc
   15994:	jne    0x1599e
   15996:	mov    ecx,DWORD PTR [edi+0x4]
   15999:	mov    DWORD PTR [eax+0x8],ecx
   1599c:	jmp    0x159aa
   1599e:	push   esi
   1599f:	call   0x10f78
   159a4:	mov    ecx,DWORD PTR [ebp-0x8]
   159a7:	mov    DWORD PTR [ecx+0x8],eax
   159aa:	xor    edi,edi
   159ac:	inc    edi
   159ad:	cmp    DWORD PTR [ebx+0x58],edi
   159b0:	jne    0x15ac7
   159b6:	jmp    0x15a75
   159bb:	cmp    DWORD PTR [esi+0x58],edi
   159be:	jne    0x15ac4
   159c4:	mov    eax,DWORD PTR [esi+0x4]
   159c7:	cmp    esi,DWORD PTR [eax]
   159c9:	jne    0x15a40
   159cb:	mov    eax,DWORD PTR [eax+0x8]
   159ce:	cmp    DWORD PTR [eax+0x58],0x0
   159d2:	jne    0x159ec
   159d4:	mov    DWORD PTR [eax+0x58],edi
   159d7:	mov    eax,DWORD PTR [esi+0x4]
   159da:	and    DWORD PTR [eax+0x58],0x0
   159de:	push   DWORD PTR [esi+0x4]
   159e1:	call   0x10f2a
   159e6:	mov    eax,DWORD PTR [esi+0x4]
   159e9:	mov    eax,DWORD PTR [eax+0x8]
   159ec:	mov    ecx,DWORD PTR [eax]
   159ee:	cmp    DWORD PTR [ecx+0x58],edi
   159f1:	jne    0x159fb
   159f3:	mov    ecx,DWORD PTR [eax+0x8]
   159f6:	cmp    DWORD PTR [ecx+0x58],edi
   159f9:	je     0x15a6e
   159fb:	mov    ecx,DWORD PTR [eax+0x8]
   159fe:	cmp    DWORD PTR [ecx+0x58],edi
   15a01:	jne    0x15a1b
   15a03:	mov    ecx,DWORD PTR [eax]
   15a05:	mov    DWORD PTR [ecx+0x58],edi
   15a08:	mov    ecx,DWORD PTR [ebp-0x4]
   15a0b:	and    DWORD PTR [eax+0x58],0x0
   15a0f:	push   eax
   15a10:	call   0x10f9a
   15a15:	mov    eax,DWORD PTR [esi+0x4]
   15a18:	mov    eax,DWORD PTR [eax+0x8]
   15a1b:	mov    ecx,DWORD PTR [esi+0x4]
   15a1e:	mov    ecx,DWORD PTR [ecx+0x58]
   15a21:	mov    DWORD PTR [eax+0x58],ecx
   15a24:	mov    ecx,DWORD PTR [esi+0x4]
   15a27:	mov    DWORD PTR [ecx+0x58],edi
   15a2a:	mov    eax,DWORD PTR [eax+0x8]
   15a2d:	mov    ecx,DWORD PTR [ebp-0x4]
   15a30:	mov    DWORD PTR [eax+0x58],edi
   15a33:	push   DWORD PTR [esi+0x4]
   15a36:	call   0x10f2a
   15a3b:	jmp    0x15ac4
   15a40:	mov    eax,DWORD PTR [eax]
   15a42:	cmp    DWORD PTR [eax+0x58],0x0
   15a46:	jne    0x15a5f
   15a48:	mov    DWORD PTR [eax+0x58],edi
   15a4b:	mov    eax,DWORD PTR [esi+0x4]
   15a4e:	and    DWORD PTR [eax+0x58],0x0
   15a52:	push   DWORD PTR [esi+0x4]
   15a55:	call   0x10f9a
   15a5a:	mov    eax,DWORD PTR [esi+0x4]
   15a5d:	mov    eax,DWORD PTR [eax]
   15a5f:	mov    ecx,DWORD PTR [eax+0x8]
   15a62:	cmp    DWORD PTR [ecx+0x58],edi
   15a65:	jne    0x15a86
   15a67:	mov    ecx,DWORD PTR [eax]
   15a69:	cmp    DWORD PTR [ecx+0x58],edi
   15a6c:	jne    0x15a86
   15a6e:	and    DWORD PTR [eax+0x58],0x0
   15a72:	mov    esi,DWORD PTR [esi+0x4]
   15a75:	mov    ecx,DWORD PTR [ebp-0x4]
   15a78:	mov    eax,DWORD PTR [ecx+0x4]
   15a7b:	cmp    esi,DWORD PTR [eax+0x4]
   15a7e:	jne    0x159bb
   15a84:	jmp    0x15ac4
   15a86:	mov    ecx,DWORD PTR [eax]
   15a88:	cmp    DWORD PTR [ecx+0x58],edi
   15a8b:	jne    0x15aa5
   15a8d:	mov    ecx,DWORD PTR [eax+0x8]
   15a90:	mov    DWORD PTR [ecx+0x58],edi
   15a93:	mov    ecx,DWORD PTR [ebp-0x4]
   15a96:	and    DWORD PTR [eax+0x58],0x0
   15a9a:	push   eax
   15a9b:	call   0x10f2a
   15aa0:	mov    eax,DWORD PTR [esi+0x4]
   15aa3:	mov    eax,DWORD PTR [eax]
   15aa5:	mov    ecx,DWORD PTR [esi+0x4]
   15aa8:	mov    ecx,DWORD PTR [ecx+0x58]
   15aab:	mov    DWORD PTR [eax+0x58],ecx
   15aae:	mov    ecx,DWORD PTR [esi+0x4]
   15ab1:	mov    DWORD PTR [ecx+0x58],edi
   15ab4:	mov    eax,DWORD PTR [eax]
   15ab6:	mov    ecx,DWORD PTR [ebp-0x4]
   15ab9:	mov    DWORD PTR [eax+0x58],edi
   15abc:	push   DWORD PTR [esi+0x4]
   15abf:	call   0x10f9a
   15ac4:	mov    DWORD PTR [esi+0x58],edi
   15ac7:	lea    eax,[ebx+0x10]
   15aca:	push   eax
   15acb:	call   0x144a8
   15ad0:	push   ebx
   15ad1:	call   0x11d3e
   15ad6:	mov    eax,DWORD PTR [ebp-0x4]
   15ad9:	dec    DWORD PTR [eax+0xc]
   15adc:	mov    eax,DWORD PTR [ebp+0x8]
   15adf:	pop    ecx
   15ae0:	mov    ecx,DWORD PTR [ebp+0xc]
   15ae3:	pop    edi
   15ae4:	pop    esi
   15ae5:	mov    DWORD PTR [eax],ecx
   15ae7:	pop    ebx
   15ae8:	leave  
   15ae9:	ret    0x8
   15aec:	int3   
   15aed:	int3   
   15aee:	int3   
   15aef:	int3   
   15af0:	int3   
   15af1:	int3   
   15af2:	mov    edi,edi
   15af4:	push   ebp
   15af5:	mov    ebp,esp
   15af7:	push   ebx
   15af8:	push   esi
   15af9:	push   edi
   15afa:	mov    edi,DWORD PTR [ebp+0x8]
   15afd:	mov    ebx,ecx
   15aff:	mov    esi,edi
   15b01:	cmp    edi,DWORD PTR ds:0x77abc
   15b07:	je     0x15b2f
   15b09:	push   DWORD PTR [esi+0x8]
   15b0c:	mov    ecx,ebx
   15b0e:	call   0x15af2
   15b13:	mov    esi,DWORD PTR [esi]
   15b15:	lea    eax,[edi+0x10]
   15b18:	push   eax
   15b19:	call   0x144a8
   15b1e:	push   edi
   15b1f:	call   0x11d3e
   15b24:	pop    ecx
   15b25:	mov    edi,esi
   15b27:	cmp    esi,DWORD PTR ds:0x77abc
   15b2d:	jne    0x15b09
   15b2f:	pop    edi
   15b30:	pop    esi
   15b31:	pop    ebx
   15b32:	pop    ebp
   15b33:	ret    0x4
   15b36:	int3   
   15b37:	int3   
   15b38:	int3   
   15b39:	int3   
   15b3a:	int3   
   15b3b:	int3   
   15b3c:	mov    edi,edi
   15b3e:	push   ebp
   15b3f:	mov    ebp,esp
   15b41:	push   ebx
   15b42:	push   esi
   15b43:	mov    esi,DWORD PTR [ebp+0x10]
   15b46:	push   edi
   15b47:	push   0x0
   15b49:	push   esi
   15b4a:	mov    edi,ecx
   15b4c:	call   0x143dc
   15b51:	push   DWORD PTR [ebp+0x14]
   15b54:	mov    ebx,eax
   15b56:	mov    eax,ds:0x77abc
   15b5b:	mov    DWORD PTR [ebx],eax
   15b5d:	mov    eax,ds:0x77abc
   15b62:	mov    DWORD PTR [ebx+0x8],eax
   15b65:	lea    eax,[ebx+0x10]
   15b68:	push   eax
   15b69:	call   0x1448a
   15b6e:	inc    DWORD PTR [edi+0xc]
   15b71:	cmp    esi,DWORD PTR [edi+0x4]
   15b74:	je     0x15b9e
   15b76:	mov    eax,DWORD PTR [ebp+0xc]
   15b79:	cmp    eax,DWORD PTR ds:0x77abc
   15b7f:	jne    0x15b9e
   15b81:	lea    eax,[esi+0x10]
   15b84:	push   eax
   15b85:	push   DWORD PTR [ebp+0x14]
   15b88:	call   0x19f08
   15b8d:	test   al,al
   15b8f:	jne    0x15b9e
   15b91:	mov    DWORD PTR [esi+0x8],ebx
   15b94:	mov    eax,DWORD PTR [edi+0x4]
   15b97:	cmp    esi,DWORD PTR [eax+0x8]
   15b9a:	jne    0x15bb8
   15b9c:	jmp    0x15bad
   15b9e:	mov    DWORD PTR [esi],ebx
   15ba0:	mov    eax,DWORD PTR [edi+0x4]
   15ba3:	cmp    esi,eax
   15ba5:	jne    0x15bb2
   15ba7:	mov    DWORD PTR [eax+0x4],ebx
   15baa:	mov    eax,DWORD PTR [edi+0x4]
   15bad:	mov    DWORD PTR [eax+0x8],ebx
   15bb0:	jmp    0x15bb8
   15bb2:	cmp    esi,DWORD PTR [eax]
   15bb4:	jne    0x15bb8
   15bb6:	mov    DWORD PTR [eax],ebx
   15bb8:	mov    eax,DWORD PTR [edi+0x4]
   15bbb:	mov    esi,ebx
   15bbd:	cmp    ebx,DWORD PTR [eax+0x4]
   15bc0:	je     0x15c74
   15bc6:	mov    eax,DWORD PTR [esi+0x4]
   15bc9:	xor    edx,edx
   15bcb:	cmp    DWORD PTR [eax+0x58],edx
   15bce:	jne    0x15c74
   15bd4:	mov    ecx,DWORD PTR [eax+0x4]
   15bd7:	cmp    eax,DWORD PTR [ecx]
   15bd9:	jne    0x15c15
   15bdb:	mov    ecx,DWORD PTR [ecx+0x8]
   15bde:	cmp    DWORD PTR [ecx+0x58],edx
   15be1:	je     0x15c1c
   15be3:	cmp    esi,DWORD PTR [eax+0x8]
   15be6:	jne    0x15bf2
   15be8:	mov    esi,eax
   15bea:	push   esi
   15beb:	mov    ecx,edi
   15bed:	call   0x10f2a
   15bf2:	mov    eax,DWORD PTR [esi+0x4]
   15bf5:	mov    DWORD PTR [eax+0x58],0x1
   15bfc:	mov    eax,DWORD PTR [esi+0x4]
   15bff:	mov    eax,DWORD PTR [eax+0x4]
   15c02:	and    DWORD PTR [eax+0x58],0x0
   15c06:	mov    eax,DWORD PTR [esi+0x4]
   15c09:	push   DWORD PTR [eax+0x4]
   15c0c:	mov    ecx,edi
   15c0e:	call   0x10f9a
   15c13:	jmp    0x15c68
   15c15:	mov    ecx,DWORD PTR [ecx]
   15c17:	cmp    DWORD PTR [ecx+0x58],edx
   15c1a:	jne    0x15c39
   15c1c:	mov    edx,eax
   15c1e:	xor    eax,eax
   15c20:	inc    eax
   15c21:	mov    DWORD PTR [edx+0x58],eax
   15c24:	mov    DWORD PTR [ecx+0x58],eax
   15c27:	mov    eax,DWORD PTR [esi+0x4]
   15c2a:	mov    eax,DWORD PTR [eax+0x4]
   15c2d:	and    DWORD PTR [eax+0x58],0x0
   15c31:	mov    eax,DWORD PTR [esi+0x4]
   15c34:	mov    esi,DWORD PTR [eax+0x4]
   15c37:	jmp    0x15c68
   15c39:	cmp    esi,DWORD PTR [eax]
   15c3b:	jne    0x15c47
   15c3d:	mov    esi,eax
   15c3f:	push   esi
   15c40:	mov    ecx,edi
   15c42:	call   0x10f9a
   15c47:	mov    eax,DWORD PTR [esi+0x4]
   15c4a:	mov    DWORD PTR [eax+0x58],0x1
   15c51:	mov    eax,DWORD PTR [esi+0x4]
   15c54:	mov    eax,DWORD PTR [eax+0x4]
   15c57:	and    DWORD PTR [eax+0x58],0x0
   15c5b:	mov    eax,DWORD PTR [esi+0x4]
   15c5e:	push   DWORD PTR [eax+0x4]
   15c61:	mov    ecx,edi
   15c63:	call   0x10f2a
   15c68:	mov    eax,DWORD PTR [edi+0x4]
   15c6b:	cmp    esi,DWORD PTR [eax+0x4]
   15c6e:	jne    0x15bc6
   15c74:	mov    eax,DWORD PTR [edi+0x4]
   15c77:	mov    eax,DWORD PTR [eax+0x4]
   15c7a:	pop    edi
   15c7b:	mov    DWORD PTR [eax+0x58],0x1
   15c82:	mov    eax,DWORD PTR [ebp+0x8]
   15c85:	pop    esi
   15c86:	mov    DWORD PTR [eax],ebx
   15c88:	pop    ebx
   15c89:	pop    ebp
   15c8a:	ret    0x10
   15c8d:	int3   
   15c8e:	int3   
   15c8f:	int3   
   15c90:	int3   
   15c91:	int3   
   15c92:	mov    edi,edi
   15c94:	push   ebp
   15c95:	mov    ebp,esp
   15c97:	push   ebx
   15c98:	push   esi
   15c99:	mov    esi,DWORD PTR [ebp+0x10]
   15c9c:	push   edi
   15c9d:	push   0x0
   15c9f:	push   esi
   15ca0:	mov    edi,ecx
   15ca2:	call   0x14400
   15ca7:	push   DWORD PTR [ebp+0x14]
   15caa:	mov    ebx,eax
   15cac:	mov    eax,ds:0x77ac0
   15cb1:	mov    DWORD PTR [ebx],eax
   15cb3:	mov    eax,ds:0x77ac0
   15cb8:	mov    DWORD PTR [ebx+0x8],eax
   15cbb:	lea    eax,[ebx+0xc]
   15cbe:	push   eax
   15cbf:	call   0x144c0
   15cc4:	inc    DWORD PTR [edi+0xc]
   15cc7:	cmp    esi,DWORD PTR [edi+0x4]
   15cca:	je     0x15cf4
   15ccc:	mov    eax,DWORD PTR [ebp+0xc]
   15ccf:	cmp    eax,DWORD PTR ds:0x77ac0
   15cd5:	jne    0x15cf4
   15cd7:	lea    eax,[esi+0xc]
   15cda:	push   eax
   15cdb:	push   DWORD PTR [ebp+0x14]
   15cde:	call   0x19f08
   15ce3:	test   al,al
   15ce5:	jne    0x15cf4
   15ce7:	mov    DWORD PTR [esi+0x8],ebx
   15cea:	mov    eax,DWORD PTR [edi+0x4]
   15ced:	cmp    esi,DWORD PTR [eax+0x8]
   15cf0:	jne    0x15d0e
   15cf2:	jmp    0x15d03
   15cf4:	mov    DWORD PTR [esi],ebx
   15cf6:	mov    eax,DWORD PTR [edi+0x4]
   15cf9:	cmp    esi,eax
   15cfb:	jne    0x15d08
   15cfd:	mov    DWORD PTR [eax+0x4],ebx
   15d00:	mov    eax,DWORD PTR [edi+0x4]
   15d03:	mov    DWORD PTR [eax+0x8],ebx
   15d06:	jmp    0x15d0e
   15d08:	cmp    esi,DWORD PTR [eax]
   15d0a:	jne    0x15d0e
   15d0c:	mov    DWORD PTR [eax],ebx
   15d0e:	mov    eax,DWORD PTR [edi+0x4]
   15d11:	mov    esi,ebx
   15d13:	cmp    ebx,DWORD PTR [eax+0x4]
   15d16:	je     0x15dca
   15d1c:	mov    eax,DWORD PTR [esi+0x4]
   15d1f:	xor    edx,edx
   15d21:	cmp    DWORD PTR [eax+0x1c],edx
   15d24:	jne    0x15dca
   15d2a:	mov    ecx,DWORD PTR [eax+0x4]
   15d2d:	cmp    eax,DWORD PTR [ecx]
   15d2f:	jne    0x15d6b
   15d31:	mov    ecx,DWORD PTR [ecx+0x8]
   15d34:	cmp    DWORD PTR [ecx+0x1c],edx
   15d37:	je     0x15d72
   15d39:	cmp    esi,DWORD PTR [eax+0x8]
   15d3c:	jne    0x15d48
   15d3e:	mov    esi,eax
   15d40:	push   esi
   15d41:	mov    ecx,edi
   15d43:	call   0x1311e
   15d48:	mov    eax,DWORD PTR [esi+0x4]
   15d4b:	mov    DWORD PTR [eax+0x1c],0x1
   15d52:	mov    eax,DWORD PTR [esi+0x4]
   15d55:	mov    eax,DWORD PTR [eax+0x4]
   15d58:	and    DWORD PTR [eax+0x1c],0x0
   15d5c:	mov    eax,DWORD PTR [esi+0x4]
   15d5f:	push   DWORD PTR [eax+0x4]
   15d62:	mov    ecx,edi
   15d64:	call   0x1316c
   15d69:	jmp    0x15dbe
   15d6b:	mov    ecx,DWORD PTR [ecx]
   15d6d:	cmp    DWORD PTR [ecx+0x1c],edx
   15d70:	jne    0x15d8f
   15d72:	mov    edx,eax
   15d74:	xor    eax,eax
   15d76:	inc    eax
   15d77:	mov    DWORD PTR [edx+0x1c],eax
   15d7a:	mov    DWORD PTR [ecx+0x1c],eax
   15d7d:	mov    eax,DWORD PTR [esi+0x4]
   15d80:	mov    eax,DWORD PTR [eax+0x4]
   15d83:	and    DWORD PTR [eax+0x1c],0x0
   15d87:	mov    eax,DWORD PTR [esi+0x4]
   15d8a:	mov    esi,DWORD PTR [eax+0x4]
   15d8d:	jmp    0x15dbe
   15d8f:	cmp    esi,DWORD PTR [eax]
   15d91:	jne    0x15d9d
   15d93:	mov    esi,eax
   15d95:	push   esi
   15d96:	mov    ecx,edi
   15d98:	call   0x1316c
   15d9d:	mov    eax,DWORD PTR [esi+0x4]
   15da0:	mov    DWORD PTR [eax+0x1c],0x1
   15da7:	mov    eax,DWORD PTR [esi+0x4]
   15daa:	mov    eax,DWORD PTR [eax+0x4]
   15dad:	and    DWORD PTR [eax+0x1c],0x0
   15db1:	mov    eax,DWORD PTR [esi+0x4]
   15db4:	push   DWORD PTR [eax+0x4]
   15db7:	mov    ecx,edi
   15db9:	call   0x1311e
   15dbe:	mov    eax,DWORD PTR [edi+0x4]
   15dc1:	cmp    esi,DWORD PTR [eax+0x4]
   15dc4:	jne    0x15d1c
   15dca:	mov    eax,DWORD PTR [edi+0x4]
   15dcd:	mov    eax,DWORD PTR [eax+0x4]
   15dd0:	pop    edi
   15dd1:	mov    DWORD PTR [eax+0x1c],0x1
   15dd8:	mov    eax,DWORD PTR [ebp+0x8]
   15ddb:	pop    esi
   15ddc:	mov    DWORD PTR [eax],ebx
   15dde:	pop    ebx
   15ddf:	pop    ebp
   15de0:	ret    0x10
   15de3:	int3   
   15de4:	int3   
   15de5:	int3   
   15de6:	int3   
   15de7:	int3   
   15de8:	mov    edi,edi
   15dea:	push   ebp
   15deb:	mov    ebp,esp
   15ded:	push   ecx
   15dee:	push   ecx
   15def:	push   ebx
   15df0:	push   esi
   15df1:	mov    DWORD PTR [ebp-0x4],ecx
   15df4:	push   edi
   15df5:	mov    edi,DWORD PTR [ebp+0xc]
   15df8:	lea    ecx,[ebp+0xc]
   15dfb:	call   0x111a8
   15e00:	mov    esi,DWORD PTR [edi]
   15e02:	mov    eax,ds:0x77ac4
   15e07:	mov    ebx,edi
   15e09:	mov    DWORD PTR [ebp-0x8],esi
   15e0c:	cmp    esi,eax
   15e0e:	jne    0x15e2c
   15e10:	mov    esi,DWORD PTR [edi+0x8]
   15e13:	mov    eax,DWORD PTR [ebx+0x4]
   15e16:	mov    ecx,DWORD PTR [ebp-0x4]
   15e19:	mov    DWORD PTR [esi+0x4],eax
   15e1c:	mov    eax,DWORD PTR [ecx+0x4]
   15e1f:	cmp    DWORD PTR [eax+0x4],edi
   15e22:	jne    0x15ea1
   15e24:	mov    DWORD PTR [eax+0x4],esi
   15e27:	jmp    0x15eaf
   15e2c:	mov    ecx,DWORD PTR [edi+0x8]
   15e2f:	cmp    ecx,eax
   15e31:	je     0x15e13
   15e33:	push   ecx
   15e34:	call   0x110d0
   15e39:	mov    ebx,eax
   15e3b:	mov    esi,DWORD PTR [ebx+0x8]
   15e3e:	cmp    ebx,edi
   15e40:	je     0x15e13
   15e42:	mov    eax,DWORD PTR [ebp-0x8]
   15e45:	mov    DWORD PTR [eax+0x4],ebx
   15e48:	mov    eax,DWORD PTR [edi]
   15e4a:	mov    DWORD PTR [ebx],eax
   15e4c:	cmp    ebx,DWORD PTR [edi+0x8]
   15e4f:	jne    0x15e56
   15e51:	mov    DWORD PTR [esi+0x4],ebx
   15e54:	jmp    0x15e6d
   15e56:	mov    eax,DWORD PTR [ebx+0x4]
   15e59:	mov    DWORD PTR [esi+0x4],eax
   15e5c:	mov    eax,DWORD PTR [ebx+0x4]
   15e5f:	mov    DWORD PTR [eax],esi
   15e61:	mov    eax,DWORD PTR [edi+0x8]
   15e64:	mov    DWORD PTR [ebx+0x8],eax
   15e67:	mov    eax,DWORD PTR [edi+0x8]
   15e6a:	mov    DWORD PTR [eax+0x4],ebx
   15e6d:	mov    eax,DWORD PTR [ebp-0x4]
   15e70:	mov    eax,DWORD PTR [eax+0x4]
   15e73:	cmp    DWORD PTR [eax+0x4],edi
   15e76:	jne    0x15e7d
   15e78:	mov    DWORD PTR [eax+0x4],ebx
   15e7b:	jmp    0x15e8b
   15e7d:	mov    eax,DWORD PTR [edi+0x4]
   15e80:	cmp    DWORD PTR [eax],edi
   15e82:	jne    0x15e88
   15e84:	mov    DWORD PTR [eax],ebx
   15e86:	jmp    0x15e8b
   15e88:	mov    DWORD PTR [eax+0x8],ebx
   15e8b:	mov    eax,DWORD PTR [edi+0x4]
   15e8e:	mov    DWORD PTR [ebx+0x4],eax
   15e91:	mov    eax,DWORD PTR [ebx+0x14]
   15e94:	mov    ecx,DWORD PTR [edi+0x14]
   15e97:	mov    DWORD PTR [ebx+0x14],ecx
   15e9a:	mov    DWORD PTR [edi+0x14],eax
   15e9d:	mov    ebx,edi
   15e9f:	jmp    0x15f02
   15ea1:	mov    eax,DWORD PTR [edi+0x4]
   15ea4:	cmp    DWORD PTR [eax],edi
   15ea6:	jne    0x15eac
   15ea8:	mov    DWORD PTR [eax],esi
   15eaa:	jmp    0x15eaf
   15eac:	mov    DWORD PTR [eax+0x8],esi
   15eaf:	mov    eax,DWORD PTR [ecx+0x4]
   15eb2:	mov    DWORD PTR [ebp-0x8],eax
   15eb5:	cmp    DWORD PTR [eax],edi
   15eb7:	jne    0x15ed9
   15eb9:	mov    edx,DWORD PTR [edi+0x8]
   15ebc:	cmp    edx,DWORD PTR ds:0x77ac4
   15ec2:	jne    0x15ecb
   15ec4:	mov    edx,DWORD PTR [edi+0x4]
   15ec7:	mov    DWORD PTR [eax],edx
   15ec9:	jmp    0x15ed9
   15ecb:	push   esi
   15ecc:	call   0x110d0
   15ed1:	mov    ecx,DWORD PTR [ebp-0x8]
   15ed4:	mov    DWORD PTR [ecx],eax
   15ed6:	mov    ecx,DWORD PTR [ebp-0x4]
   15ed9:	mov    eax,DWORD PTR [ecx+0x4]
   15edc:	mov    DWORD PTR [ebp-0x8],eax
   15edf:	cmp    DWORD PTR [eax+0x8],edi
   15ee2:	jne    0x15f02
   15ee4:	mov    ecx,DWORD PTR [edi]
   15ee6:	cmp    ecx,DWORD PTR ds:0x77ac4
   15eec:	jne    0x15ef6
   15eee:	mov    ecx,DWORD PTR [edi+0x4]
   15ef1:	mov    DWORD PTR [eax+0x8],ecx
   15ef4:	jmp    0x15f02
   15ef6:	push   esi
   15ef7:	call   0x110ae
   15efc:	mov    ecx,DWORD PTR [ebp-0x8]
   15eff:	mov    DWORD PTR [ecx+0x8],eax
   15f02:	xor    edi,edi
   15f04:	inc    edi
   15f05:	cmp    DWORD PTR [ebx+0x14],edi
   15f08:	jne    0x1601f
   15f0e:	jmp    0x15fcd
   15f13:	cmp    DWORD PTR [esi+0x14],edi
   15f16:	jne    0x1601c
   15f1c:	mov    eax,DWORD PTR [esi+0x4]
   15f1f:	cmp    esi,DWORD PTR [eax]
   15f21:	jne    0x15f98
   15f23:	mov    eax,DWORD PTR [eax+0x8]
   15f26:	cmp    DWORD PTR [eax+0x14],0x0
   15f2a:	jne    0x15f44
   15f2c:	mov    DWORD PTR [eax+0x14],edi
   15f2f:	mov    eax,DWORD PTR [esi+0x4]
   15f32:	and    DWORD PTR [eax+0x14],0x0
   15f36:	push   DWORD PTR [esi+0x4]
   15f39:	call   0x131fc
   15f3e:	mov    eax,DWORD PTR [esi+0x4]
   15f41:	mov    eax,DWORD PTR [eax+0x8]
   15f44:	mov    ecx,DWORD PTR [eax]
   15f46:	cmp    DWORD PTR [ecx+0x14],edi
   15f49:	jne    0x15f53
   15f4b:	mov    ecx,DWORD PTR [eax+0x8]
   15f4e:	cmp    DWORD PTR [ecx+0x14],edi
   15f51:	je     0x15fc6
   15f53:	mov    ecx,DWORD PTR [eax+0x8]
   15f56:	cmp    DWORD PTR [ecx+0x14],edi
   15f59:	jne    0x15f73
   15f5b:	mov    ecx,DWORD PTR [eax]
   15f5d:	mov    DWORD PTR [ecx+0x14],edi
   15f60:	mov    ecx,DWORD PTR [ebp-0x4]
   15f63:	and    DWORD PTR [eax+0x14],0x0
   15f67:	push   eax
   15f68:	call   0x1324a
   15f6d:	mov    eax,DWORD PTR [esi+0x4]
   15f70:	mov    eax,DWORD PTR [eax+0x8]
   15f73:	mov    ecx,DWORD PTR [esi+0x4]
   15f76:	mov    ecx,DWORD PTR [ecx+0x14]
   15f79:	mov    DWORD PTR [eax+0x14],ecx
   15f7c:	mov    ecx,DWORD PTR [esi+0x4]
   15f7f:	mov    DWORD PTR [ecx+0x14],edi
   15f82:	mov    eax,DWORD PTR [eax+0x8]
   15f85:	mov    ecx,DWORD PTR [ebp-0x4]
   15f88:	mov    DWORD PTR [eax+0x14],edi
   15f8b:	push   DWORD PTR [esi+0x4]
   15f8e:	call   0x131fc
   15f93:	jmp    0x1601c
   15f98:	mov    eax,DWORD PTR [eax]
   15f9a:	cmp    DWORD PTR [eax+0x14],0x0
   15f9e:	jne    0x15fb7
   15fa0:	mov    DWORD PTR [eax+0x14],edi
   15fa3:	mov    eax,DWORD PTR [esi+0x4]
   15fa6:	and    DWORD PTR [eax+0x14],0x0
   15faa:	push   DWORD PTR [esi+0x4]
   15fad:	call   0x1324a
   15fb2:	mov    eax,DWORD PTR [esi+0x4]
   15fb5:	mov    eax,DWORD PTR [eax]
   15fb7:	mov    ecx,DWORD PTR [eax+0x8]
   15fba:	cmp    DWORD PTR [ecx+0x14],edi
   15fbd:	jne    0x15fde
   15fbf:	mov    ecx,DWORD PTR [eax]
   15fc1:	cmp    DWORD PTR [ecx+0x14],edi
   15fc4:	jne    0x15fde
   15fc6:	and    DWORD PTR [eax+0x14],0x0
   15fca:	mov    esi,DWORD PTR [esi+0x4]
   15fcd:	mov    ecx,DWORD PTR [ebp-0x4]
   15fd0:	mov    eax,DWORD PTR [ecx+0x4]
   15fd3:	cmp    esi,DWORD PTR [eax+0x4]
   15fd6:	jne    0x15f13
   15fdc:	jmp    0x1601c
   15fde:	mov    ecx,DWORD PTR [eax]
   15fe0:	cmp    DWORD PTR [ecx+0x14],edi
   15fe3:	jne    0x15ffd
   15fe5:	mov    ecx,DWORD PTR [eax+0x8]
   15fe8:	mov    DWORD PTR [ecx+0x14],edi
   15feb:	mov    ecx,DWORD PTR [ebp-0x4]
   15fee:	and    DWORD PTR [eax+0x14],0x0
   15ff2:	push   eax
   15ff3:	call   0x131fc
   15ff8:	mov    eax,DWORD PTR [esi+0x4]
   15ffb:	mov    eax,DWORD PTR [eax]
   15ffd:	mov    ecx,DWORD PTR [esi+0x4]
   16000:	mov    ecx,DWORD PTR [ecx+0x14]
   16003:	mov    DWORD PTR [eax+0x14],ecx
   16006:	mov    ecx,DWORD PTR [esi+0x4]
   16009:	mov    DWORD PTR [ecx+0x14],edi
   1600c:	mov    eax,DWORD PTR [eax]
   1600e:	mov    ecx,DWORD PTR [ebp-0x4]
   16011:	mov    DWORD PTR [eax+0x14],edi
   16014:	push   DWORD PTR [esi+0x4]
   16017:	call   0x1324a
   1601c:	mov    DWORD PTR [esi+0x14],edi
   1601f:	lea    eax,[ebx+0xc]
   16022:	push   eax
   16023:	call   0x144fc
   16028:	push   ebx
   16029:	call   0x11d3e
   1602e:	mov    eax,DWORD PTR [ebp-0x4]
   16031:	dec    DWORD PTR [eax+0xc]
   16034:	mov    eax,DWORD PTR [ebp+0x8]
   16037:	pop    ecx
   16038:	mov    ecx,DWORD PTR [ebp+0xc]
   1603b:	pop    edi
   1603c:	pop    esi
   1603d:	mov    DWORD PTR [eax],ecx
   1603f:	pop    ebx
   16040:	leave  
   16041:	ret    0x8
   16044:	int3   
   16045:	int3   
   16046:	int3   
   16047:	int3   
   16048:	int3   
   16049:	int3   
   1604a:	mov    edi,edi
   1604c:	push   ebp
   1604d:	mov    ebp,esp
   1604f:	push   ebx
   16050:	push   esi
   16051:	push   edi
   16052:	mov    edi,DWORD PTR [ebp+0x8]
   16055:	mov    ebx,ecx
   16057:	mov    esi,edi
   16059:	cmp    edi,DWORD PTR ds:0x77ac4
   1605f:	je     0x16087
   16061:	push   DWORD PTR [esi+0x8]
   16064:	mov    ecx,ebx
   16066:	call   0x1604a
   1606b:	mov    esi,DWORD PTR [esi]
   1606d:	lea    eax,[edi+0xc]
   16070:	push   eax
   16071:	call   0x144fc
   16076:	push   edi
   16077:	call   0x11d3e
   1607c:	pop    ecx
   1607d:	mov    edi,esi
   1607f:	cmp    esi,DWORD PTR ds:0x77ac4
   16085:	jne    0x16061
   16087:	pop    edi
   16088:	pop    esi
   16089:	pop    ebx
   1608a:	pop    ebp
   1608b:	ret    0x4
   1608e:	int3   
   1608f:	int3   
   16090:	int3   
   16091:	int3   
   16092:	int3   
   16093:	int3   
   16094:	mov    edi,edi
   16096:	push   ebp
   16097:	mov    ebp,esp
   16099:	push   ebx
   1609a:	push   esi
   1609b:	mov    esi,DWORD PTR [ebp+0x10]
   1609e:	push   edi
   1609f:	push   0x0
   160a1:	push   esi
   160a2:	mov    edi,ecx
   160a4:	call   0x1b140
   160a9:	push   DWORD PTR [ebp+0x14]
   160ac:	mov    ebx,eax
   160ae:	mov    eax,ds:0x77ac4
   160b3:	mov    DWORD PTR [ebx],eax
   160b5:	mov    eax,ds:0x77ac4
   160ba:	mov    DWORD PTR [ebx+0x8],eax
   160bd:	lea    eax,[ebx+0xc]
   160c0:	push   eax
   160c1:	call   0x144de
   160c6:	inc    DWORD PTR [edi+0xc]
   160c9:	cmp    esi,DWORD PTR [edi+0x4]
   160cc:	je     0x160f0
   160ce:	mov    eax,DWORD PTR [ebp+0xc]
   160d1:	cmp    eax,DWORD PTR ds:0x77ac4
   160d7:	jne    0x160f0
   160d9:	mov    eax,DWORD PTR [ebp+0x14]
   160dc:	mov    eax,DWORD PTR [eax]
   160de:	cmp    eax,DWORD PTR [esi+0xc]
   160e1:	jl     0x160f0
   160e3:	mov    DWORD PTR [esi+0x8],ebx
   160e6:	mov    eax,DWORD PTR [edi+0x4]
   160e9:	cmp    esi,DWORD PTR [eax+0x8]
   160ec:	jne    0x1610a
   160ee:	jmp    0x160ff
   160f0:	mov    DWORD PTR [esi],ebx
   160f2:	mov    eax,DWORD PTR [edi+0x4]
   160f5:	cmp    esi,eax
   160f7:	jne    0x16104
   160f9:	mov    DWORD PTR [eax+0x4],ebx
   160fc:	mov    eax,DWORD PTR [edi+0x4]
   160ff:	mov    DWORD PTR [eax+0x8],ebx
   16102:	jmp    0x1610a
   16104:	cmp    esi,DWORD PTR [eax]
   16106:	jne    0x1610a
   16108:	mov    DWORD PTR [eax],ebx
   1610a:	mov    eax,DWORD PTR [edi+0x4]
   1610d:	mov    esi,ebx
   1610f:	cmp    ebx,DWORD PTR [eax+0x4]
   16112:	je     0x161c6
   16118:	mov    eax,DWORD PTR [esi+0x4]
   1611b:	xor    edx,edx
   1611d:	cmp    DWORD PTR [eax+0x14],edx
   16120:	jne    0x161c6
   16126:	mov    ecx,DWORD PTR [eax+0x4]
   16129:	cmp    eax,DWORD PTR [ecx]
   1612b:	jne    0x16167
   1612d:	mov    ecx,DWORD PTR [ecx+0x8]
   16130:	cmp    DWORD PTR [ecx+0x14],edx
   16133:	je     0x1616e
   16135:	cmp    esi,DWORD PTR [eax+0x8]
   16138:	jne    0x16144
   1613a:	mov    esi,eax
   1613c:	push   esi
   1613d:	mov    ecx,edi
   1613f:	call   0x131fc
   16144:	mov    eax,DWORD PTR [esi+0x4]
   16147:	mov    DWORD PTR [eax+0x14],0x1
   1614e:	mov    eax,DWORD PTR [esi+0x4]
   16151:	mov    eax,DWORD PTR [eax+0x4]
   16154:	and    DWORD PTR [eax+0x14],0x0
   16158:	mov    eax,DWORD PTR [esi+0x4]
   1615b:	push   DWORD PTR [eax+0x4]
   1615e:	mov    ecx,edi
   16160:	call   0x1324a
   16165:	jmp    0x161ba
   16167:	mov    ecx,DWORD PTR [ecx]
   16169:	cmp    DWORD PTR [ecx+0x14],edx
   1616c:	jne    0x1618b
   1616e:	mov    edx,eax
   16170:	xor    eax,eax
   16172:	inc    eax
   16173:	mov    DWORD PTR [edx+0x14],eax
   16176:	mov    DWORD PTR [ecx+0x14],eax
   16179:	mov    eax,DWORD PTR [esi+0x4]
   1617c:	mov    eax,DWORD PTR [eax+0x4]
   1617f:	and    DWORD PTR [eax+0x14],0x0
   16183:	mov    eax,DWORD PTR [esi+0x4]
   16186:	mov    esi,DWORD PTR [eax+0x4]
   16189:	jmp    0x161ba
   1618b:	cmp    esi,DWORD PTR [eax]
   1618d:	jne    0x16199
   1618f:	mov    esi,eax
   16191:	push   esi
   16192:	mov    ecx,edi
   16194:	call   0x1324a
   16199:	mov    eax,DWORD PTR [esi+0x4]
   1619c:	mov    DWORD PTR [eax+0x14],0x1
   161a3:	mov    eax,DWORD PTR [esi+0x4]
   161a6:	mov    eax,DWORD PTR [eax+0x4]
   161a9:	and    DWORD PTR [eax+0x14],0x0
   161ad:	mov    eax,DWORD PTR [esi+0x4]
   161b0:	push   DWORD PTR [eax+0x4]
   161b3:	mov    ecx,edi
   161b5:	call   0x131fc
   161ba:	mov    eax,DWORD PTR [edi+0x4]
   161bd:	cmp    esi,DWORD PTR [eax+0x4]
   161c0:	jne    0x16118
   161c6:	mov    eax,DWORD PTR [edi+0x4]
   161c9:	mov    eax,DWORD PTR [eax+0x4]
   161cc:	pop    edi
   161cd:	mov    DWORD PTR [eax+0x14],0x1
   161d4:	mov    eax,DWORD PTR [ebp+0x8]
   161d7:	pop    esi
   161d8:	mov    DWORD PTR [eax],ebx
   161da:	pop    ebx
   161db:	pop    ebp
   161dc:	ret    0x10
   161df:	int3   
   161e0:	int3   
   161e1:	int3   
   161e2:	int3   
   161e3:	int3   
   161e4:	mov    edi,edi
   161e6:	push   ebp
   161e7:	mov    ebp,esp
   161e9:	push   ebx
   161ea:	push   esi
   161eb:	mov    esi,DWORD PTR [ebp+0x10]
   161ee:	push   edi
   161ef:	push   0x0
   161f1:	push   esi
   161f2:	mov    edi,ecx
   161f4:	call   0x14400
   161f9:	push   DWORD PTR [ebp+0x14]
   161fc:	mov    ebx,eax
   161fe:	mov    eax,ds:0x77acc
   16203:	mov    DWORD PTR [ebx],eax
   16205:	mov    eax,ds:0x77acc
   1620a:	mov    DWORD PTR [ebx+0x8],eax
   1620d:	lea    eax,[ebx+0xc]
   16210:	push   eax
   16211:	call   0x14514
   16216:	inc    DWORD PTR [edi+0xc]
   16219:	cmp    esi,DWORD PTR [edi+0x4]
   1621c:	je     0x16246
   1621e:	mov    eax,DWORD PTR [ebp+0xc]
   16221:	cmp    eax,DWORD PTR ds:0x77acc
   16227:	jne    0x16246
   16229:	lea    eax,[esi+0xc]
   1622c:	push   eax
   1622d:	push   DWORD PTR [ebp+0x14]
   16230:	call   0x19f38
   16235:	test   al,al
   16237:	jne    0x16246
   16239:	mov    DWORD PTR [esi+0x8],ebx
   1623c:	mov    eax,DWORD PTR [edi+0x4]
   1623f:	cmp    esi,DWORD PTR [eax+0x8]
   16242:	jne    0x16260
   16244:	jmp    0x16255
   16246:	mov    DWORD PTR [esi],ebx
   16248:	mov    eax,DWORD PTR [edi+0x4]
   1624b:	cmp    esi,eax
   1624d:	jne    0x1625a
   1624f:	mov    DWORD PTR [eax+0x4],ebx
   16252:	mov    eax,DWORD PTR [edi+0x4]
   16255:	mov    DWORD PTR [eax+0x8],ebx
   16258:	jmp    0x16260
   1625a:	cmp    esi,DWORD PTR [eax]
   1625c:	jne    0x16260
   1625e:	mov    DWORD PTR [eax],ebx
   16260:	mov    eax,DWORD PTR [edi+0x4]
   16263:	mov    esi,ebx
   16265:	cmp    ebx,DWORD PTR [eax+0x4]
   16268:	je     0x1631c
   1626e:	mov    eax,DWORD PTR [esi+0x4]
   16271:	xor    edx,edx
   16273:	cmp    DWORD PTR [eax+0x1c],edx
   16276:	jne    0x1631c
   1627c:	mov    ecx,DWORD PTR [eax+0x4]
   1627f:	cmp    eax,DWORD PTR [ecx]
   16281:	jne    0x162bd
   16283:	mov    ecx,DWORD PTR [ecx+0x8]
   16286:	cmp    DWORD PTR [ecx+0x1c],edx
   16289:	je     0x162c4
   1628b:	cmp    esi,DWORD PTR [eax+0x8]
   1628e:	jne    0x1629a
   16290:	mov    esi,eax
   16292:	push   esi
   16293:	mov    ecx,edi
   16295:	call   0x13382
   1629a:	mov    eax,DWORD PTR [esi+0x4]
   1629d:	mov    DWORD PTR [eax+0x1c],0x1
   162a4:	mov    eax,DWORD PTR [esi+0x4]
   162a7:	mov    eax,DWORD PTR [eax+0x4]
   162aa:	and    DWORD PTR [eax+0x1c],0x0
   162ae:	mov    eax,DWORD PTR [esi+0x4]
   162b1:	push   DWORD PTR [eax+0x4]
   162b4:	mov    ecx,edi
   162b6:	call   0x133d0
   162bb:	jmp    0x16310
   162bd:	mov    ecx,DWORD PTR [ecx]
   162bf:	cmp    DWORD PTR [ecx+0x1c],edx
   162c2:	jne    0x162e1
   162c4:	mov    edx,eax
   162c6:	xor    eax,eax
   162c8:	inc    eax
   162c9:	mov    DWORD PTR [edx+0x1c],eax
   162cc:	mov    DWORD PTR [ecx+0x1c],eax
   162cf:	mov    eax,DWORD PTR [esi+0x4]
   162d2:	mov    eax,DWORD PTR [eax+0x4]
   162d5:	and    DWORD PTR [eax+0x1c],0x0
   162d9:	mov    eax,DWORD PTR [esi+0x4]
   162dc:	mov    esi,DWORD PTR [eax+0x4]
   162df:	jmp    0x16310
   162e1:	cmp    esi,DWORD PTR [eax]
   162e3:	jne    0x162ef
   162e5:	mov    esi,eax
   162e7:	push   esi
   162e8:	mov    ecx,edi
   162ea:	call   0x133d0
   162ef:	mov    eax,DWORD PTR [esi+0x4]
   162f2:	mov    DWORD PTR [eax+0x1c],0x1
   162f9:	mov    eax,DWORD PTR [esi+0x4]
   162fc:	mov    eax,DWORD PTR [eax+0x4]
   162ff:	and    DWORD PTR [eax+0x1c],0x0
   16303:	mov    eax,DWORD PTR [esi+0x4]
   16306:	push   DWORD PTR [eax+0x4]
   16309:	mov    ecx,edi
   1630b:	call   0x13382
   16310:	mov    eax,DWORD PTR [edi+0x4]
   16313:	cmp    esi,DWORD PTR [eax+0x4]
   16316:	jne    0x1626e
   1631c:	mov    eax,DWORD PTR [edi+0x4]
   1631f:	mov    eax,DWORD PTR [eax+0x4]
   16322:	pop    edi
   16323:	mov    DWORD PTR [eax+0x1c],0x1
   1632a:	mov    eax,DWORD PTR [ebp+0x8]
   1632d:	pop    esi
   1632e:	mov    DWORD PTR [eax],ebx
   16330:	pop    ebx
   16331:	pop    ebp
   16332:	ret    0x10
   16335:	int3   
   16336:	int3   
   16337:	int3   
   16338:	int3   
   16339:	int3   
   1633a:	mov    edi,edi
   1633c:	push   ebp
   1633d:	mov    ebp,esp
   1633f:	push   esi
   16340:	push   edi
   16341:	mov    edi,DWORD PTR [ebp+0x8]
   16344:	mov    al,BYTE PTR [edi+0x8]
   16347:	mov    esi,ecx
   16349:	mov    BYTE PTR [esi+0x8],al
   1634c:	call   0x14900
   16351:	push   edi
   16352:	mov    ecx,esi
   16354:	call   0x14f94
   16359:	pop    edi
   1635a:	mov    eax,esi
   1635c:	pop    esi
   1635d:	pop    ebp
   1635e:	ret    0x4
   16361:	int3   
   16362:	int3   
   16363:	int3   
   16364:	int3   
   16365:	int3   
   16366:	mov    edi,edi
   16368:	push   ebp
   16369:	mov    ebp,esp
   1636b:	push   ecx
   1636c:	push   esi
   1636d:	mov    esi,ecx
   1636f:	cmp    esi,DWORD PTR [ebp+0x8]
   16372:	je     0x16390
   16374:	mov    eax,DWORD PTR [esi+0x4]
   16377:	mov    ecx,DWORD PTR [eax]
   16379:	push   eax
   1637a:	push   ecx
   1637b:	lea    eax,[ebp-0x4]
   1637e:	push   eax
   1637f:	mov    ecx,esi
   16381:	call   0x146b0
   16386:	push   DWORD PTR [ebp+0x8]
   16389:	mov    ecx,esi
   1638b:	call   0x14f94
   16390:	mov    eax,esi
   16392:	pop    esi
   16393:	leave  
   16394:	ret    0x4
   16397:	int3   
   16398:	int3   
   16399:	int3   
   1639a:	int3   
   1639b:	int3   
   1639c:	mov    edi,edi
   1639e:	push   ebp
   1639f:	mov    ebp,esp
   163a1:	push   esi
   163a2:	push   edi
   163a3:	xor    edi,edi
   163a5:	push   edi
   163a6:	push   edi
   163a7:	push   edi
   163a8:	mov    esi,ecx
   163aa:	mov    eax,DWORD PTR [esi+0x10]
   163ad:	push   edi
   163ae:	push   eax
   163af:	call   0x11a5a
   163b4:	call   eax
   163b6:	test   eax,eax
   163b8:	jl     0x163d1
   163ba:	lea    eax,[ebp+0x8]
   163bd:	push   eax
   163be:	mov    ecx,esi
   163c0:	call   0x14666
   163c5:	mov    esi,DWORD PTR [esi+0x10]
   163c8:	push   edi
   163c9:	push   esi
   163ca:	call   0x11a84
   163cf:	call   eax
   163d1:	pop    edi
   163d2:	pop    esi
   163d3:	pop    ebp
   163d4:	ret    0x4
   163d7:	int3   
   163d8:	int3   
   163d9:	int3   
   163da:	int3   
   163db:	int3   
   163dc:	mov    edi,edi
   163de:	push   ebp
   163df:	mov    ebp,esp
   163e1:	sub    esp,0x40
   163e4:	test   BYTE PTR [ebp+0x8],0x20
   163e8:	je     0x16474
   163ee:	push   ebx
   163ef:	lea    ecx,[ebp-0x40]
   163f2:	call   0x13b56
   163f7:	mov    ecx,DWORD PTR ds:0x778e8
   163fd:	lea    eax,[ebp-0x40]
   16400:	push   eax
   16401:	push   DWORD PTR [ebp+0xc]
   16404:	call   0x1521a
   16409:	test   al,al
   1640b:	je     0x16470
   1640d:	mov    ecx,DWORD PTR [ebp+0x10]
   16410:	lea    eax,[ebp-0x38]
   16413:	push   eax
   16414:	call   0x12a44
   16419:	mov    ecx,DWORD PTR [ebp+0x14]
   1641c:	lea    eax,[ebp-0x30]
   1641f:	push   eax
   16420:	call   0x12a44
   16425:	mov    ecx,DWORD PTR [ebp+0x18]
   16428:	lea    eax,[ebp-0x28]
   1642b:	push   eax
   1642c:	call   0x12a44
   16431:	mov    eax,DWORD PTR [ebp+0x20]
   16434:	mov    ecx,DWORD PTR [ebp-0x20]
   16437:	mov    DWORD PTR [eax],ecx
   16439:	mov    ecx,DWORD PTR [ebp+0x1c]
   1643c:	lea    eax,[ebp-0x8]
   1643f:	push   eax
   16440:	call   0x12a44
   16445:	mov    eax,DWORD PTR [ebp+0x24]
   16448:	mov    ecx,DWORD PTR [ebp-0x18]
   1644b:	mov    DWORD PTR [eax],ecx
   1644d:	mov    ecx,DWORD PTR [ebp-0x14]
   16450:	mov    DWORD PTR [eax+0x4],ecx
   16453:	mov    ecx,DWORD PTR [ebp-0x10]
   16456:	mov    eax,DWORD PTR [ebp+0x28]
   16459:	mov    DWORD PTR [eax],ecx
   1645b:	mov    ecx,DWORD PTR [ebp-0xc]
   1645e:	mov    DWORD PTR [eax+0x4],ecx
   16461:	mov    bl,0x1
   16463:	lea    ecx,[ebp-0x40]
   16466:	call   0x13550
   1646b:	mov    al,bl
   1646d:	pop    ebx
   1646e:	jmp    0x164ef
   16470:	xor    bl,bl
   16472:	jmp    0x16463
   16474:	mov    ecx,DWORD PTR ds:0x778e0
   1647a:	push   esi
   1647b:	push   DWORD PTR [ebp+0xc]
   1647e:	lea    eax,[ebp+0xc]
   16481:	push   eax
   16482:	call   0x13c88
   16487:	mov    esi,DWORD PTR [ebp+0xc]
   1648a:	mov    eax,ds:0x778e0
   1648f:	cmp    esi,DWORD PTR [eax+0x4]
   16492:	jne    0x16498
   16494:	xor    al,al
   16496:	jmp    0x164ee
   16498:	mov    ecx,DWORD PTR [ebp+0x10]
   1649b:	lea    eax,[esi+0x20]
   1649e:	push   eax
   1649f:	call   0x12a44
   164a4:	mov    ecx,DWORD PTR [ebp+0x14]
   164a7:	lea    eax,[esi+0x28]
   164aa:	push   eax
   164ab:	call   0x12a44
   164b0:	mov    ecx,DWORD PTR [ebp+0x18]
   164b3:	lea    eax,[esi+0x30]
   164b6:	push   eax
   164b7:	call   0x12a44
   164bc:	mov    ecx,DWORD PTR [ebp+0x1c]
   164bf:	lea    eax,[esi+0x50]
   164c2:	push   eax
   164c3:	call   0x12a44
   164c8:	mov    eax,DWORD PTR [esi+0x38]
   164cb:	mov    ecx,DWORD PTR [ebp+0x20]
   164ce:	mov    DWORD PTR [ecx],eax
   164d0:	mov    ecx,DWORD PTR [esi+0x40]
   164d3:	mov    eax,DWORD PTR [ebp+0x24]
   164d6:	mov    DWORD PTR [eax],ecx
   164d8:	mov    ecx,DWORD PTR [esi+0x44]
   164db:	mov    DWORD PTR [eax+0x4],ecx
   164de:	mov    ecx,DWORD PTR [esi+0x48]
   164e1:	mov    eax,DWORD PTR [ebp+0x28]
   164e4:	mov    DWORD PTR [eax],ecx
   164e6:	mov    ecx,DWORD PTR [esi+0x4c]
   164e9:	mov    DWORD PTR [eax+0x4],ecx
   164ec:	mov    al,0x1
   164ee:	pop    esi
   164ef:	leave  
   164f0:	ret    0x24
   164f3:	int3   
   164f4:	int3   
   164f5:	int3   
   164f6:	int3   
   164f7:	int3   
   164f8:	push   0x40
   164fa:	push   0x76aa8
   164ff:	call   0x1e1dc
   16504:	xor    esi,esi
   16506:	push   esi
   16507:	push   esi
   16508:	push   esi
   16509:	push   esi
   1650a:	push   0x76f58
   1650f:	call   0x11a5a
   16514:	call   eax
   16516:	cmp    eax,esi
   16518:	jl     0x16691
   1651e:	mov    DWORD PTR [ebp-0x4],esi
   16521:	or     edi,0xffffffff
   16524:	push   edi
   16525:	mov    esi,0x1e5e8
   1652a:	push   esi
   1652b:	lea    ecx,[ebp-0x40]
   1652e:	call   0x12ba8
   16533:	push   edi
   16534:	push   esi
   16535:	lea    ecx,[ebp-0x38]
   16538:	call   0x12ba8
   1653d:	push   edi
   1653e:	push   esi
   1653f:	lea    ecx,[ebp-0x30]
   16542:	call   0x12ba8
   16547:	push   edi
   16548:	push   esi
   16549:	lea    ecx,[ebp-0x28]
   1654c:	call   0x12ba8
   16551:	lea    eax,[ebp-0x50]
   16554:	push   eax
   16555:	lea    eax,[ebp-0x48]
   16558:	push   eax
   16559:	lea    eax,[ebp-0x1c]
   1655c:	push   eax
   1655d:	lea    eax,[ebp-0x28]
   16560:	push   eax
   16561:	lea    eax,[ebp-0x30]
   16564:	push   eax
   16565:	lea    eax,[ebp-0x38]
   16568:	push   eax
   16569:	lea    eax,[ebp-0x40]
   1656c:	push   eax
   1656d:	mov    edi,DWORD PTR [ebp+0x8]
   16570:	push   edi
   16571:	mov    esi,DWORD PTR [ebp+0xc]
   16574:	push   DWORD PTR [esi+0x4]
   16577:	call   0x163dc
   1657c:	test   al,al
   1657e:	jne    0x1658c
   16580:	mov    DWORD PTR [esi+0x8],0x1
   16587:	jmp    0x16646
   1658c:	mov    ecx,DWORD PTR [edi+0x4]
   1658f:	mov    eax,DWORD PTR [ebp-0x3c]
   16592:	lea    edx,[eax+ecx*1+0x2]
   16596:	mov    eax,DWORD PTR [ebp-0x34]
   16599:	lea    edi,[eax+edx*1+0x1]
   1659d:	mov    eax,DWORD PTR [ebp-0x2c]
   165a0:	lea    eax,[eax+edi*1+0x1]
   165a4:	mov    DWORD PTR [ebp-0x20],eax
   165a7:	mov    ebx,DWORD PTR [ebp-0x24]
   165aa:	lea    eax,[ebx+eax*1+0x1]
   165ae:	cmp    eax,DWORD PTR [esi]
   165b0:	jbe    0x165c0
   165b2:	mov    DWORD PTR [esi],eax
   165b4:	mov    DWORD PTR [esi+0x8],0x2
   165bb:	jmp    0x16646
   165c0:	and    DWORD PTR [esi+0x8],0x0
   165c4:	mov    eax,DWORD PTR [ebp-0x1c]
   165c7:	mov    DWORD PTR [esi+0xc],eax
   165ca:	mov    eax,DWORD PTR [ebp-0x48]
   165cd:	mov    DWORD PTR [esi+0x10],eax
   165d0:	mov    eax,DWORD PTR [ebp-0x44]
   165d3:	mov    DWORD PTR [esi+0x14],eax
   165d6:	mov    eax,DWORD PTR [ebp-0x50]
   165d9:	mov    DWORD PTR [esi+0x18],eax
   165dc:	mov    eax,DWORD PTR [ebp-0x4c]
   165df:	mov    DWORD PTR [esi+0x1c],eax
   165e2:	mov    eax,DWORD PTR [ebp+0x8]
   165e5:	mov    eax,DWORD PTR [eax]
   165e7:	mov    DWORD PTR [ebp-0x1c],eax
   165ea:	lea    eax,[esi+0x20]
   165ed:	mov    ebx,DWORD PTR [ebp-0x1c]
   165f0:	mov    bl,BYTE PTR [ebx]
   165f2:	mov    BYTE PTR [ebp+0xb],bl
   165f5:	mov    BYTE PTR [eax],bl
   165f7:	inc    DWORD PTR [ebp-0x1c]
   165fa:	inc    eax
   165fb:	test   bl,bl
   165fd:	jne    0x165ed
   165ff:	mov    ebx,DWORD PTR [ebp-0x40]
   16602:	lea    ecx,[ecx+esi*1+0x21]
   16606:	mov    al,BYTE PTR [ebx]
   16608:	mov    BYTE PTR [ecx],al
   1660a:	inc    ebx
   1660b:	inc    ecx
   1660c:	test   al,al
   1660e:	jne    0x16606
   16610:	mov    ecx,DWORD PTR [ebp-0x38]
   16613:	lea    edx,[edx+esi*1+0x20]
   16617:	mov    al,BYTE PTR [ecx]
   16619:	mov    BYTE PTR [edx],al
   1661b:	inc    ecx
   1661c:	inc    edx
   1661d:	test   al,al
   1661f:	jne    0x16617
   16621:	mov    ecx,DWORD PTR [ebp-0x30]
   16624:	lea    edi,[edi+esi*1+0x20]
   16628:	mov    al,BYTE PTR [ecx]
   1662a:	mov    BYTE PTR [edi],al
   1662c:	inc    ecx
   1662d:	inc    edi
   1662e:	test   al,al
   16630:	jne    0x16628
   16632:	mov    ecx,DWORD PTR [ebp-0x28]
   16635:	mov    eax,DWORD PTR [ebp-0x20]
   16638:	lea    esi,[eax+esi*1+0x20]
   1663c:	mov    al,BYTE PTR [ecx]
   1663e:	mov    BYTE PTR [esi],al
   16640:	inc    ecx
   16641:	inc    esi
   16642:	test   al,al
   16644:	jne    0x1663c
   16646:	push   DWORD PTR [ebp-0x28]
   16649:	call   0x11d3e
   1664e:	push   DWORD PTR [ebp-0x30]
   16651:	call   0x11d3e
   16656:	push   DWORD PTR [ebp-0x38]
   16659:	call   0x11d3e
   1665e:	push   DWORD PTR [ebp-0x40]
   16661:	call   0x11d3e
   16666:	add    esp,0x10
   16669:	jmp    0x1667c
   1666b:	xor    eax,eax
   1666d:	inc    eax
   1666e:	ret    
   1666f:	mov    esp,DWORD PTR [ebp-0x18]
   16672:	mov    eax,DWORD PTR [ebp+0xc]
   16675:	mov    DWORD PTR [eax+0x8],0x4
   1667c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16683:	push   0x0
   16685:	push   0x76f58
   1668a:	call   0x11a84
   1668f:	call   eax
   16691:	call   0x1e221
   16696:	ret    0x8
   16699:	int3   
   1669a:	int3   
   1669b:	int3   
   1669c:	int3   
   1669d:	int3   
   1669e:	mov    edi,edi
   166a0:	push   ebp
   166a1:	mov    ebp,esp
   166a3:	push   ecx
   166a4:	push   ecx
   166a5:	push   DWORD PTR [ebp+0xc]
   166a8:	lea    eax,[ebp-0x8]
   166ab:	push   eax
   166ac:	call   0x152e0
   166b1:	mov    eax,DWORD PTR [ebp+0x8]
   166b4:	mov    ecx,DWORD PTR [ebp-0x8]
   166b7:	mov    DWORD PTR [eax],ecx
   166b9:	mov    cl,BYTE PTR [ebp-0x4]
   166bc:	mov    BYTE PTR [eax+0x4],cl
   166bf:	leave  
   166c0:	ret    0x8
   166c3:	int3   
   166c4:	int3   
   166c5:	int3   
   166c6:	int3   
   166c7:	int3   
   166c8:	mov    edi,edi
   166ca:	push   ebp
   166cb:	mov    ebp,esp
   166cd:	push   ecx
   166ce:	push   ecx
   166cf:	push   DWORD PTR [ebp+0xc]
   166d2:	lea    eax,[ebp-0x8]
   166d5:	push   eax
   166d6:	call   0x15378
   166db:	mov    eax,DWORD PTR [ebp+0x8]
   166de:	mov    ecx,DWORD PTR [ebp-0x8]
   166e1:	mov    DWORD PTR [eax],ecx
   166e3:	mov    cl,BYTE PTR [ebp-0x4]
   166e6:	mov    BYTE PTR [eax+0x4],cl
   166e9:	leave  
   166ea:	ret    0x8
   166ed:	int3   
   166ee:	int3   
   166ef:	int3   
   166f0:	int3   
   166f1:	int3   
   166f2:	mov    edi,edi
   166f4:	push   ebp
   166f5:	mov    ebp,esp
   166f7:	push   ecx
   166f8:	push   ecx
   166f9:	push   esi
   166fa:	push   DWORD PTR [ebp+0x8]
   166fd:	lea    eax,[ebp-0x8]
   16700:	push   eax
   16701:	mov    esi,ecx
   16703:	call   0x140a6
   16708:	and    DWORD PTR [ebp+0x8],0x0
   1670c:	lea    eax,[ebp+0x8]
   1670f:	push   eax
   16710:	push   DWORD PTR [ebp-0x4]
   16713:	push   DWORD PTR [ebp-0x8]
   16716:	call   0x1395e
   1671b:	add    esp,0xc
   1671e:	push   DWORD PTR [ebp-0x4]
   16721:	lea    eax,[ebp-0x4]
   16724:	push   DWORD PTR [ebp-0x8]
   16727:	mov    ecx,esi
   16729:	push   eax
   1672a:	call   0x15410
   1672f:	mov    eax,DWORD PTR [ebp+0x8]
   16732:	pop    esi
   16733:	leave  
   16734:	ret    0x4
   16737:	int3   
   16738:	int3   
   16739:	int3   
   1673a:	int3   
   1673b:	int3   
   1673c:	mov    edi,edi
   1673e:	push   ebp
   1673f:	mov    ebp,esp
   16741:	push   ecx
   16742:	push   ebx
   16743:	push   esi
   16744:	push   edi
   16745:	mov    edi,ecx
   16747:	mov    eax,DWORD PTR [edi+0x4]
   1674a:	mov    esi,DWORD PTR [eax+0x4]
   1674d:	mov    ebx,eax
   1674f:	mov    al,0x1
   16751:	jmp    0x1676c
   16753:	lea    eax,[esi+0x10]
   16756:	push   eax
   16757:	push   DWORD PTR [ebp+0xc]
   1675a:	mov    ebx,esi
   1675c:	call   0x19f08
   16761:	test   al,al
   16763:	je     0x16769
   16765:	mov    esi,DWORD PTR [esi]
   16767:	jmp    0x1676c
   16769:	mov    esi,DWORD PTR [esi+0x8]
   1676c:	cmp    esi,DWORD PTR ds:0x77ab8
   16772:	jne    0x16753
   16774:	cmp    BYTE PTR [edi+0x8],0x0
   16778:	je     0x16795
   1677a:	push   DWORD PTR [ebp+0xc]
   1677d:	lea    eax,[ebp+0xc]
   16780:	push   ebx
   16781:	push   esi
   16782:	push   eax
   16783:	mov    ecx,edi
   16785:	call   0x1573a
   1678a:	mov    ecx,DWORD PTR [eax]
   1678c:	mov    eax,DWORD PTR [ebp+0x8]
   1678f:	mov    BYTE PTR [eax+0x4],0x1
   16793:	jmp    0x167c8
   16795:	mov    DWORD PTR [ebp-0x4],ebx
   16798:	test   al,al
   1679a:	je     0x167ab
   1679c:	mov    eax,DWORD PTR [edi+0x4]
   1679f:	cmp    ebx,DWORD PTR [eax]
   167a1:	je     0x1677a
   167a3:	lea    ecx,[ebp-0x4]
   167a6:	call   0x11132
   167ab:	push   DWORD PTR [ebp+0xc]
   167ae:	mov    eax,DWORD PTR [ebp-0x4]
   167b1:	add    eax,0x10
   167b4:	push   eax
   167b5:	call   0x19f08
   167ba:	test   al,al
   167bc:	jne    0x1677a
   167be:	mov    eax,DWORD PTR [ebp+0x8]
   167c1:	mov    ecx,DWORD PTR [ebp-0x4]
   167c4:	mov    BYTE PTR [eax+0x4],0x0
   167c8:	pop    edi
   167c9:	pop    esi
   167ca:	mov    DWORD PTR [eax],ecx
   167cc:	pop    ebx
   167cd:	leave  
   167ce:	ret    0x8
   167d1:	int3   
   167d2:	int3   
   167d3:	int3   
   167d4:	int3   
   167d5:	int3   
   167d6:	mov    edi,edi
   167d8:	push   ebp
   167d9:	mov    ebp,esp
   167db:	push   ecx
   167dc:	push   esi
   167dd:	mov    esi,ecx
   167df:	cmp    DWORD PTR [esi+0xc],0x0
   167e3:	mov    ecx,DWORD PTR [ebp+0xc]
   167e6:	je     0x16820
   167e8:	mov    eax,DWORD PTR [esi+0x4]
   167eb:	cmp    ecx,DWORD PTR [eax]
   167ed:	jne    0x16820
   167ef:	cmp    DWORD PTR [ebp+0x10],eax
   167f2:	jne    0x16820
   167f4:	push   DWORD PTR [eax+0x4]
   167f7:	mov    ecx,esi
   167f9:	call   0x156f0
   167fe:	mov    ecx,DWORD PTR ds:0x77ab8
   16804:	mov    eax,DWORD PTR [esi+0x4]
   16807:	mov    DWORD PTR [eax+0x4],ecx
   1680a:	mov    eax,DWORD PTR [esi+0x4]
   1680d:	and    DWORD PTR [esi+0xc],0x0
   16811:	mov    DWORD PTR [eax],eax
   16813:	mov    eax,DWORD PTR [esi+0x4]
   16816:	mov    DWORD PTR [eax+0x8],eax
   16819:	mov    eax,DWORD PTR [esi+0x4]
   1681c:	mov    ecx,DWORD PTR [eax]
   1681e:	jmp    0x16845
   16820:	cmp    ecx,DWORD PTR [ebp+0x10]
   16823:	je     0x16845
   16825:	push   edi
   16826:	mov    edi,ecx
   16828:	lea    ecx,[ebp+0xc]
   1682b:	call   0x12e7e
   16830:	push   edi
   16831:	lea    eax,[ebp-0x4]
   16834:	push   eax
   16835:	mov    ecx,esi
   16837:	call   0x1548e
   1683c:	mov    ecx,DWORD PTR [ebp+0xc]
   1683f:	cmp    ecx,DWORD PTR [ebp+0x10]
   16842:	jne    0x16826
   16844:	pop    edi
   16845:	mov    eax,DWORD PTR [ebp+0x8]
   16848:	mov    DWORD PTR [eax],ecx
   1684a:	pop    esi
   1684b:	leave  
   1684c:	ret    0xc
   1684f:	int3   
   16850:	int3   
   16851:	int3   
   16852:	int3   
   16853:	int3   
   16854:	mov    edi,edi
   16856:	push   ebp
   16857:	mov    ebp,esp
   16859:	push   ecx
   1685a:	push   ebx
   1685b:	push   esi
   1685c:	push   edi
   1685d:	mov    edi,ecx
   1685f:	mov    eax,DWORD PTR [edi+0x4]
   16862:	mov    esi,DWORD PTR [eax+0x4]
   16865:	mov    ebx,eax
   16867:	mov    al,0x1
   16869:	jmp    0x16884
   1686b:	lea    eax,[esi+0x10]
   1686e:	push   eax
   1686f:	push   DWORD PTR [ebp+0xc]
   16872:	mov    ebx,esi
   16874:	call   0x19f08
   16879:	test   al,al
   1687b:	je     0x16881
   1687d:	mov    esi,DWORD PTR [esi]
   1687f:	jmp    0x16884
   16881:	mov    esi,DWORD PTR [esi+0x8]
   16884:	cmp    esi,DWORD PTR ds:0x77abc
   1688a:	jne    0x1686b
   1688c:	cmp    BYTE PTR [edi+0x8],0x0
   16890:	je     0x168ad
   16892:	push   DWORD PTR [ebp+0xc]
   16895:	lea    eax,[ebp+0xc]
   16898:	push   ebx
   16899:	push   esi
   1689a:	push   eax
   1689b:	mov    ecx,edi
   1689d:	call   0x15b3c
   168a2:	mov    ecx,DWORD PTR [eax]
   168a4:	mov    eax,DWORD PTR [ebp+0x8]
   168a7:	mov    BYTE PTR [eax+0x4],0x1
   168ab:	jmp    0x168e0
   168ad:	mov    DWORD PTR [ebp-0x4],ebx
   168b0:	test   al,al
   168b2:	je     0x168c3
   168b4:	mov    eax,DWORD PTR [edi+0x4]
   168b7:	cmp    ebx,DWORD PTR [eax]
   168b9:	je     0x16892
   168bb:	lea    ecx,[ebp-0x4]
   168be:	call   0x10fea
   168c3:	push   DWORD PTR [ebp+0xc]
   168c6:	mov    eax,DWORD PTR [ebp-0x4]
   168c9:	add    eax,0x10
   168cc:	push   eax
   168cd:	call   0x19f08
   168d2:	test   al,al
   168d4:	jne    0x16892
   168d6:	mov    eax,DWORD PTR [ebp+0x8]
   168d9:	mov    ecx,DWORD PTR [ebp-0x4]
   168dc:	mov    BYTE PTR [eax+0x4],0x0
   168e0:	pop    edi
   168e1:	pop    esi
   168e2:	mov    DWORD PTR [eax],ecx
   168e4:	pop    ebx
   168e5:	leave  
   168e6:	ret    0x8
   168e9:	int3   
   168ea:	int3   
   168eb:	int3   
   168ec:	int3   
   168ed:	int3   
   168ee:	mov    edi,edi
   168f0:	push   ebp
   168f1:	mov    ebp,esp
   168f3:	push   ecx
   168f4:	push   esi
   168f5:	mov    esi,ecx
   168f7:	cmp    DWORD PTR [esi+0xc],0x0
   168fb:	mov    ecx,DWORD PTR [ebp+0xc]
   168fe:	je     0x16938
   16900:	mov    eax,DWORD PTR [esi+0x4]
   16903:	cmp    ecx,DWORD PTR [eax]
   16905:	jne    0x16938
   16907:	cmp    DWORD PTR [ebp+0x10],eax
   1690a:	jne    0x16938
   1690c:	push   DWORD PTR [eax+0x4]
   1690f:	mov    ecx,esi
   16911:	call   0x15af2
   16916:	mov    ecx,DWORD PTR ds:0x77abc
   1691c:	mov    eax,DWORD PTR [esi+0x4]
   1691f:	mov    DWORD PTR [eax+0x4],ecx
   16922:	mov    eax,DWORD PTR [esi+0x4]
   16925:	and    DWORD PTR [esi+0xc],0x0
   16929:	mov    DWORD PTR [eax],eax
   1692b:	mov    eax,DWORD PTR [esi+0x4]
   1692e:	mov    DWORD PTR [eax+0x8],eax
   16931:	mov    eax,DWORD PTR [esi+0x4]
   16934:	mov    ecx,DWORD PTR [eax]
   16936:	jmp    0x1695d
   16938:	cmp    ecx,DWORD PTR [ebp+0x10]
   1693b:	je     0x1695d
   1693d:	push   edi
   1693e:	mov    edi,ecx
   16940:	lea    ecx,[ebp+0xc]
   16943:	call   0x137a2
   16948:	push   edi
   16949:	lea    eax,[ebp-0x4]
   1694c:	push   eax
   1694d:	mov    ecx,esi
   1694f:	call   0x15890
   16954:	mov    ecx,DWORD PTR [ebp+0xc]
   16957:	cmp    ecx,DWORD PTR [ebp+0x10]
   1695a:	jne    0x1693e
   1695c:	pop    edi
   1695d:	mov    eax,DWORD PTR [ebp+0x8]
   16960:	mov    DWORD PTR [eax],ecx
   16962:	pop    esi
   16963:	leave  
   16964:	ret    0xc
   16967:	int3   
   16968:	int3   
   16969:	int3   
   1696a:	int3   
   1696b:	int3   
   1696c:	mov    edi,edi
   1696e:	push   ebp
   1696f:	mov    ebp,esp
   16971:	push   ecx
   16972:	push   ebx
   16973:	push   esi
   16974:	push   edi
   16975:	mov    edi,ecx
   16977:	mov    eax,DWORD PTR [edi+0x4]
   1697a:	mov    esi,DWORD PTR [eax+0x4]
   1697d:	mov    ebx,eax
   1697f:	mov    al,0x1
   16981:	jmp    0x1699c
   16983:	lea    eax,[esi+0xc]
   16986:	push   eax
   16987:	push   DWORD PTR [ebp+0xc]
   1698a:	mov    ebx,esi
   1698c:	call   0x19f08
   16991:	test   al,al
   16993:	je     0x16999
   16995:	mov    esi,DWORD PTR [esi]
   16997:	jmp    0x1699c
   16999:	mov    esi,DWORD PTR [esi+0x8]
   1699c:	cmp    esi,DWORD PTR ds:0x77ac0
   169a2:	jne    0x16983
   169a4:	cmp    BYTE PTR [edi+0x8],0x0
   169a8:	je     0x169c5
   169aa:	push   DWORD PTR [ebp+0xc]
   169ad:	lea    eax,[ebp+0xc]
   169b0:	push   ebx
   169b1:	push   esi
   169b2:	push   eax
   169b3:	mov    ecx,edi
   169b5:	call   0x15c92
   169ba:	mov    ecx,DWORD PTR [eax]
   169bc:	mov    eax,DWORD PTR [ebp+0x8]
   169bf:	mov    BYTE PTR [eax+0x4],0x1
   169c3:	jmp    0x169f8
   169c5:	mov    DWORD PTR [ebp-0x4],ebx
   169c8:	test   al,al
   169ca:	je     0x169db
   169cc:	mov    eax,DWORD PTR [edi+0x4]
   169cf:	cmp    ebx,DWORD PTR [eax]
   169d1:	je     0x169aa
   169d3:	lea    ecx,[ebp-0x4]
   169d6:	call   0x1106e
   169db:	push   DWORD PTR [ebp+0xc]
   169de:	mov    eax,DWORD PTR [ebp-0x4]
   169e1:	add    eax,0xc
   169e4:	push   eax
   169e5:	call   0x19f08
   169ea:	test   al,al
   169ec:	jne    0x169aa
   169ee:	mov    eax,DWORD PTR [ebp+0x8]
   169f1:	mov    ecx,DWORD PTR [ebp-0x4]
   169f4:	mov    BYTE PTR [eax+0x4],0x0
   169f8:	pop    edi
   169f9:	pop    esi
   169fa:	mov    DWORD PTR [eax],ecx
   169fc:	pop    ebx
   169fd:	leave  
   169fe:	ret    0x8
   16a01:	int3   
   16a02:	int3   
   16a03:	int3   
   16a04:	int3   
   16a05:	int3   
   16a06:	mov    edi,edi
   16a08:	push   ebp
   16a09:	mov    ebp,esp
   16a0b:	push   ecx
   16a0c:	push   ebx
   16a0d:	push   esi
   16a0e:	push   edi
   16a0f:	mov    edi,ecx
   16a11:	mov    eax,DWORD PTR [edi+0x4]
   16a14:	mov    esi,DWORD PTR [eax+0x4]
   16a17:	mov    ebx,eax
   16a19:	mov    eax,ds:0x77ac4
   16a1e:	mov    dl,0x1
   16a20:	cmp    esi,eax
   16a22:	je     0x16a40
   16a24:	mov    ecx,DWORD PTR [ebp+0xc]
   16a27:	mov    ecx,DWORD PTR [ecx]
   16a29:	cmp    ecx,DWORD PTR [esi+0xc]
   16a2c:	mov    ebx,esi
   16a2e:	setl   dl
   16a31:	test   dl,dl
   16a33:	je     0x16a39
   16a35:	mov    esi,DWORD PTR [esi]
   16a37:	jmp    0x16a3c
   16a39:	mov    esi,DWORD PTR [esi+0x8]
   16a3c:	cmp    esi,eax
   16a3e:	jne    0x16a29
   16a40:	cmp    BYTE PTR [edi+0x8],0x0
   16a44:	je     0x16a61
   16a46:	push   DWORD PTR [ebp+0xc]
   16a49:	push   ebx
   16a4a:	push   esi
   16a4b:	lea    eax,[ebp+0xc]
   16a4e:	push   eax
   16a4f:	mov    ecx,edi
   16a51:	call   0x16094
   16a56:	mov    ecx,DWORD PTR [eax]
   16a58:	mov    eax,DWORD PTR [ebp+0x8]
   16a5b:	mov    BYTE PTR [eax+0x4],0x1
   16a5f:	jmp    0x16a90
   16a61:	mov    ecx,ebx
   16a63:	mov    DWORD PTR [ebp-0x4],ecx
   16a66:	test   dl,dl
   16a68:	je     0x16a7c
   16a6a:	mov    eax,DWORD PTR [edi+0x4]
   16a6d:	cmp    ebx,DWORD PTR [eax]
   16a6f:	je     0x16a46
   16a71:	lea    ecx,[ebp-0x4]
   16a74:	call   0x110f2
   16a79:	mov    ecx,DWORD PTR [ebp-0x4]
   16a7c:	mov    edx,DWORD PTR [ecx+0xc]
   16a7f:	mov    eax,DWORD PTR [ebp+0xc]
   16a82:	cmp    edx,DWORD PTR [eax]
   16a84:	jge    0x16a89
   16a86:	push   eax
   16a87:	jmp    0x16a49
   16a89:	mov    eax,DWORD PTR [ebp+0x8]
   16a8c:	mov    BYTE PTR [eax+0x4],0x0
   16a90:	pop    edi
   16a91:	pop    esi
   16a92:	mov    DWORD PTR [eax],ecx
   16a94:	pop    ebx
   16a95:	leave  
   16a96:	ret    0x8
   16a99:	int3   
   16a9a:	int3   
   16a9b:	int3   
   16a9c:	int3   
   16a9d:	int3   
   16a9e:	mov    edi,edi
   16aa0:	push   ebp
   16aa1:	mov    ebp,esp
   16aa3:	push   ecx
   16aa4:	push   esi
   16aa5:	mov    esi,ecx
   16aa7:	cmp    DWORD PTR [esi+0xc],0x0
   16aab:	mov    ecx,DWORD PTR [ebp+0xc]
   16aae:	je     0x16ae8
   16ab0:	mov    eax,DWORD PTR [esi+0x4]
   16ab3:	cmp    ecx,DWORD PTR [eax]
   16ab5:	jne    0x16ae8
   16ab7:	cmp    DWORD PTR [ebp+0x10],eax
   16aba:	jne    0x16ae8
   16abc:	push   DWORD PTR [eax+0x4]
   16abf:	mov    ecx,esi
   16ac1:	call   0x1604a
   16ac6:	mov    ecx,DWORD PTR ds:0x77ac4
   16acc:	mov    eax,DWORD PTR [esi+0x4]
   16acf:	mov    DWORD PTR [eax+0x4],ecx
   16ad2:	mov    eax,DWORD PTR [esi+0x4]
   16ad5:	and    DWORD PTR [esi+0xc],0x0
   16ad9:	mov    DWORD PTR [eax],eax
   16adb:	mov    eax,DWORD PTR [esi+0x4]
   16ade:	mov    DWORD PTR [eax+0x8],eax
   16ae1:	mov    eax,DWORD PTR [esi+0x4]
   16ae4:	mov    ecx,DWORD PTR [eax]
   16ae6:	jmp    0x16b0d
   16ae8:	cmp    ecx,DWORD PTR [ebp+0x10]
   16aeb:	je     0x16b0d
   16aed:	push   edi
   16aee:	mov    edi,ecx
   16af0:	lea    ecx,[ebp+0xc]
   16af3:	call   0x111a8
   16af8:	push   edi
   16af9:	lea    eax,[ebp-0x4]
   16afc:	push   eax
   16afd:	mov    ecx,esi
   16aff:	call   0x15de8
   16b04:	mov    ecx,DWORD PTR [ebp+0xc]
   16b07:	cmp    ecx,DWORD PTR [ebp+0x10]
   16b0a:	jne    0x16aee
   16b0c:	pop    edi
   16b0d:	mov    eax,DWORD PTR [ebp+0x8]
   16b10:	mov    DWORD PTR [eax],ecx
   16b12:	pop    esi
   16b13:	leave  
   16b14:	ret    0xc
   16b17:	int3   
   16b18:	int3   
   16b19:	int3   
   16b1a:	int3   
   16b1b:	int3   
   16b1c:	mov    edi,edi
   16b1e:	push   ebp
   16b1f:	mov    ebp,esp
   16b21:	push   ecx
   16b22:	push   ebx
   16b23:	push   esi
   16b24:	push   edi
   16b25:	mov    edi,ecx
   16b27:	mov    eax,DWORD PTR [edi+0x4]
   16b2a:	mov    esi,DWORD PTR [eax+0x4]
   16b2d:	mov    ebx,eax
   16b2f:	mov    al,0x1
   16b31:	jmp    0x16b4c
   16b33:	lea    eax,[esi+0xc]
   16b36:	push   eax
   16b37:	push   DWORD PTR [ebp+0xc]
   16b3a:	mov    ebx,esi
   16b3c:	call   0x19f38
   16b41:	test   al,al
   16b43:	je     0x16b49
   16b45:	mov    esi,DWORD PTR [esi]
   16b47:	jmp    0x16b4c
   16b49:	mov    esi,DWORD PTR [esi+0x8]
   16b4c:	cmp    esi,DWORD PTR ds:0x77acc
   16b52:	jne    0x16b33
   16b54:	cmp    BYTE PTR [edi+0x8],0x0
   16b58:	je     0x16b75
   16b5a:	push   DWORD PTR [ebp+0xc]
   16b5d:	lea    eax,[ebp+0xc]
   16b60:	push   ebx
   16b61:	push   esi
   16b62:	push   eax
   16b63:	mov    ecx,edi
   16b65:	call   0x161e4
   16b6a:	mov    ecx,DWORD PTR [eax]
   16b6c:	mov    eax,DWORD PTR [ebp+0x8]
   16b6f:	mov    BYTE PTR [eax+0x4],0x1
   16b73:	jmp    0x16ba8
   16b75:	mov    DWORD PTR [ebp-0x4],ebx
   16b78:	test   al,al
   16b7a:	je     0x16b8b
   16b7c:	mov    eax,DWORD PTR [edi+0x4]
   16b7f:	cmp    ebx,DWORD PTR [eax]
   16b81:	je     0x16b5a
   16b83:	lea    ecx,[ebp-0x4]
   16b86:	call   0x13420
   16b8b:	push   DWORD PTR [ebp+0xc]
   16b8e:	mov    eax,DWORD PTR [ebp-0x4]
   16b91:	add    eax,0xc
   16b94:	push   eax
   16b95:	call   0x19f38
   16b9a:	test   al,al
   16b9c:	jne    0x16b5a
   16b9e:	mov    eax,DWORD PTR [ebp+0x8]
   16ba1:	mov    ecx,DWORD PTR [ebp-0x4]
   16ba4:	mov    BYTE PTR [eax+0x4],0x0
   16ba8:	pop    edi
   16ba9:	pop    esi
   16baa:	mov    DWORD PTR [eax],ecx
   16bac:	pop    ebx
   16bad:	leave  
   16bae:	ret    0x8
   16bb1:	int3   
   16bb2:	int3   
   16bb3:	int3   
   16bb4:	int3   
   16bb5:	int3   
   16bb6:	mov    edi,edi
   16bb8:	push   ebp
   16bb9:	mov    ebp,esp
   16bbb:	sub    esp,0x10
   16bbe:	push   DWORD PTR [ebp+0x8]
   16bc1:	lea    ecx,[ebp-0x10]
   16bc4:	call   0x1633a
   16bc9:	push   DWORD PTR [ebp+0xc]
   16bcc:	mov    ecx,DWORD PTR [ebp+0x8]
   16bcf:	call   0x16366
   16bd4:	mov    ecx,DWORD PTR [ebp+0xc]
   16bd7:	lea    eax,[ebp-0x10]
   16bda:	push   eax
   16bdb:	call   0x16366
   16be0:	lea    ecx,[ebp-0x10]
   16be3:	call   0x15258
   16be8:	leave  
   16be9:	ret    0x8
   16bec:	int3   
   16bed:	int3   
   16bee:	int3   
   16bef:	int3   
   16bf0:	int3   
   16bf1:	int3   
   16bf2:	mov    edi,edi
   16bf4:	push   esi
   16bf5:	mov    esi,ecx
   16bf7:	push   edi
   16bf8:	mov    BYTE PTR [esi+0x8],0x0
   16bfc:	call   0x14778
   16c01:	lea    edi,[esi+0x10]
   16c04:	mov    ecx,edi
   16c06:	call   0x12ad6
   16c0b:	mov    edi,DWORD PTR [edi]
   16c0d:	push   0x0
   16c0f:	push   edi
   16c10:	call   0x11a30
   16c15:	call   eax
   16c17:	pop    edi
   16c18:	mov    eax,esi
   16c1a:	pop    esi
   16c1b:	ret    
   16c1c:	int3   
   16c1d:	int3   
   16c1e:	int3   
   16c1f:	int3   
   16c20:	int3   
   16c21:	int3   
   16c22:	mov    edi,edi
   16c24:	push   ebp
   16c25:	mov    ebp,esp
   16c27:	sub    esp,0x10
   16c2a:	mov    eax,DWORD PTR [ebp+0x8]
   16c2d:	mov    eax,DWORD PTR [eax]
   16c2f:	and    DWORD PTR [ebp-0x4],0x0
   16c33:	mov    DWORD PTR [ebp-0x8],eax
   16c36:	lea    eax,[ebp-0x8]
   16c39:	push   eax
   16c3a:	lea    eax,[ebp-0x10]
   16c3d:	push   eax
   16c3e:	call   0x166c8
   16c43:	mov    eax,DWORD PTR [eax]
   16c45:	add    eax,0x10
   16c48:	leave  
   16c49:	ret    0x4
   16c4c:	int3   
   16c4d:	int3   
   16c4e:	int3   
   16c4f:	int3   
   16c50:	int3   
   16c51:	int3   
   16c52:	mov    edi,edi
   16c54:	push   esi
   16c55:	mov    esi,ecx
   16c57:	mov    BYTE PTR [esi+0x8],0x0
   16c5b:	call   0x1483c
   16c60:	mov    eax,esi
   16c62:	pop    esi
   16c63:	ret    0x8
   16c66:	int3   
   16c67:	int3   
   16c68:	int3   
   16c69:	int3   
   16c6a:	int3   
   16c6b:	int3   
   16c6c:	mov    edi,edi
   16c6e:	push   ebp
   16c6f:	mov    ebp,esp
   16c71:	push   ecx
   16c72:	push   ecx
   16c73:	push   DWORD PTR [ebp+0xc]
   16c76:	lea    eax,[ebp-0x8]
   16c79:	push   eax
   16c7a:	call   0x1673c
   16c7f:	mov    eax,DWORD PTR [ebp+0x8]
   16c82:	mov    ecx,DWORD PTR [ebp-0x8]
   16c85:	mov    DWORD PTR [eax],ecx
   16c87:	mov    cl,BYTE PTR [ebp-0x4]
   16c8a:	mov    BYTE PTR [eax+0x4],cl
   16c8d:	leave  
   16c8e:	ret    0x8
   16c91:	int3   
   16c92:	int3   
   16c93:	int3   
   16c94:	int3   
   16c95:	int3   
   16c96:	mov    edi,edi
   16c98:	push   ebp
   16c99:	mov    ebp,esp
   16c9b:	push   ecx
   16c9c:	push   esi
   16c9d:	mov    esi,ecx
   16c9f:	mov    eax,DWORD PTR [esi+0x4]
   16ca2:	mov    ecx,DWORD PTR [eax]
   16ca4:	push   eax
   16ca5:	push   ecx
   16ca6:	lea    eax,[ebp-0x4]
   16ca9:	push   eax
   16caa:	mov    ecx,esi
   16cac:	call   0x167d6
   16cb1:	push   DWORD PTR [esi+0x4]
   16cb4:	call   0x11d3e
   16cb9:	xor    eax,eax
   16cbb:	mov    DWORD PTR [esi+0x4],eax
   16cbe:	mov    DWORD PTR [esi+0xc],eax
   16cc1:	dec    DWORD PTR ds:0x77c74
   16cc7:	pop    ecx
   16cc8:	pop    esi
   16cc9:	jne    0x16ce1
   16ccb:	mov    ecx,DWORD PTR ds:0x77ab8
   16cd1:	mov    ds:0x77ab8,eax
   16cd6:	cmp    ecx,eax
   16cd8:	je     0x16ce1
   16cda:	push   ecx
   16cdb:	call   0x11d3e
   16ce0:	pop    ecx
   16ce1:	leave  
   16ce2:	ret    
   16ce3:	int3   
   16ce4:	int3   
   16ce5:	int3   
   16ce6:	int3   
   16ce7:	int3   
   16ce8:	mov    edi,edi
   16cea:	push   ebp
   16ceb:	mov    ebp,esp
   16ced:	push   ecx
   16cee:	push   ecx
   16cef:	push   DWORD PTR [ebp+0xc]
   16cf2:	lea    eax,[ebp-0x8]
   16cf5:	push   eax
   16cf6:	call   0x16854
   16cfb:	mov    eax,DWORD PTR [ebp+0x8]
   16cfe:	mov    ecx,DWORD PTR [ebp-0x8]
   16d01:	mov    DWORD PTR [eax],ecx
   16d03:	mov    cl,BYTE PTR [ebp-0x4]
   16d06:	mov    BYTE PTR [eax+0x4],cl
   16d09:	leave  
   16d0a:	ret    0x8
   16d0d:	int3   
   16d0e:	int3   
   16d0f:	int3   
   16d10:	int3   
   16d11:	int3   
   16d12:	mov    edi,edi
   16d14:	push   ebp
   16d15:	mov    ebp,esp
   16d17:	push   ecx
   16d18:	mov    eax,DWORD PTR [ecx+0x4]
   16d1b:	mov    edx,DWORD PTR [eax]
   16d1d:	push   eax
   16d1e:	push   edx
   16d1f:	lea    eax,[ebp-0x4]
   16d22:	push   eax
   16d23:	call   0x168ee
   16d28:	leave  
   16d29:	ret    
   16d2a:	int3   
   16d2b:	int3   
   16d2c:	int3   
   16d2d:	int3   
   16d2e:	int3   
   16d2f:	int3   
   16d30:	mov    edi,edi
   16d32:	push   ebp
   16d33:	mov    ebp,esp
   16d35:	push   ecx
   16d36:	push   ecx
   16d37:	push   DWORD PTR [ebp+0xc]
   16d3a:	lea    eax,[ebp-0x8]
   16d3d:	push   eax
   16d3e:	call   0x1696c
   16d43:	mov    eax,DWORD PTR [ebp+0x8]
   16d46:	mov    ecx,DWORD PTR [ebp-0x8]
   16d49:	mov    DWORD PTR [eax],ecx
   16d4b:	mov    cl,BYTE PTR [ebp-0x4]
   16d4e:	mov    BYTE PTR [eax+0x4],cl
   16d51:	leave  
   16d52:	ret    0x8
   16d55:	int3   
   16d56:	int3   
   16d57:	int3   
   16d58:	int3   
   16d59:	int3   
   16d5a:	mov    edi,edi
   16d5c:	push   ebp
   16d5d:	mov    ebp,esp
   16d5f:	push   ecx
   16d60:	push   ecx
   16d61:	push   DWORD PTR [ebp+0xc]
   16d64:	lea    eax,[ebp-0x8]
   16d67:	push   eax
   16d68:	call   0x16a06
   16d6d:	mov    eax,DWORD PTR [ebp+0x8]
   16d70:	mov    ecx,DWORD PTR [ebp-0x8]
   16d73:	mov    DWORD PTR [eax],ecx
   16d75:	mov    cl,BYTE PTR [ebp-0x4]
   16d78:	mov    BYTE PTR [eax+0x4],cl
   16d7b:	leave  
   16d7c:	ret    0x8
   16d7f:	int3   
   16d80:	int3   
   16d81:	int3   
   16d82:	int3   
   16d83:	int3   
   16d84:	mov    edi,edi
   16d86:	push   ebp
   16d87:	mov    ebp,esp
   16d89:	push   ecx
   16d8a:	push   ecx
   16d8b:	push   esi
   16d8c:	push   DWORD PTR [ebp+0x8]
   16d8f:	lea    eax,[ebp-0x8]
   16d92:	push   eax
   16d93:	mov    esi,ecx
   16d95:	call   0x140d8
   16d9a:	and    DWORD PTR [ebp+0x8],0x0
   16d9e:	lea    eax,[ebp+0x8]
   16da1:	push   eax
   16da2:	push   DWORD PTR [ebp-0x4]
   16da5:	push   DWORD PTR [ebp-0x8]
   16da8:	call   0x13980
   16dad:	add    esp,0xc
   16db0:	push   DWORD PTR [ebp-0x4]
   16db3:	lea    eax,[ebp-0x4]
   16db6:	push   DWORD PTR [ebp-0x8]
   16db9:	mov    ecx,esi
   16dbb:	push   eax
   16dbc:	call   0x16a9e
   16dc1:	mov    eax,DWORD PTR [ebp+0x8]
   16dc4:	pop    esi
   16dc5:	leave  
   16dc6:	ret    0x4
   16dc9:	int3   
   16dca:	int3   
   16dcb:	int3   
   16dcc:	int3   
   16dcd:	int3   
   16dce:	mov    edi,edi
   16dd0:	push   ebp
   16dd1:	mov    ebp,esp
   16dd3:	push   ecx
   16dd4:	mov    eax,DWORD PTR [ecx+0x4]
   16dd7:	mov    edx,DWORD PTR [eax]
   16dd9:	push   eax
   16dda:	push   edx
   16ddb:	lea    eax,[ebp-0x4]
   16dde:	push   eax
   16ddf:	call   0x16a9e
   16de4:	leave  
   16de5:	ret    
   16de6:	int3   
   16de7:	int3   
   16de8:	int3   
   16de9:	int3   
   16dea:	int3   
   16deb:	int3   
   16dec:	mov    edi,edi
   16dee:	push   ebp
   16def:	mov    ebp,esp
   16df1:	push   ecx
   16df2:	push   ecx
   16df3:	push   DWORD PTR [ebp+0xc]
   16df6:	lea    eax,[ebp-0x8]
   16df9:	push   eax
   16dfa:	call   0x16b1c
   16dff:	mov    eax,DWORD PTR [ebp+0x8]
   16e02:	mov    ecx,DWORD PTR [ebp-0x8]
   16e05:	mov    DWORD PTR [eax],ecx
   16e07:	mov    cl,BYTE PTR [ebp-0x4]
   16e0a:	mov    BYTE PTR [eax+0x4],cl
   16e0d:	leave  
   16e0e:	ret    0x8
   16e11:	int3   
   16e12:	int3   
   16e13:	int3   
   16e14:	int3   
   16e15:	int3   
   16e16:	mov    edi,edi
   16e18:	push   ebp
   16e19:	mov    ebp,esp
   16e1b:	push   esi
   16e1c:	push   edi
   16e1d:	xor    edi,edi
   16e1f:	push   edi
   16e20:	push   edi
   16e21:	push   edi
   16e22:	mov    esi,ecx
   16e24:	mov    eax,DWORD PTR [esi+0x10]
   16e27:	push   edi
   16e28:	push   eax
   16e29:	call   0x11a5a
   16e2e:	call   eax
   16e30:	test   eax,eax
   16e32:	jl     0x16e50
   16e34:	lea    eax,[ebp+0x8]
   16e37:	push   eax
   16e38:	mov    ecx,esi
   16e3a:	call   0x16c22
   16e3f:	mov    ecx,DWORD PTR [ebp+0xc]
   16e42:	mov    DWORD PTR [eax],ecx
   16e44:	mov    esi,DWORD PTR [esi+0x10]
   16e47:	push   edi
   16e48:	push   esi
   16e49:	call   0x11a84
   16e4e:	call   eax
   16e50:	pop    edi
   16e51:	pop    esi
   16e52:	pop    ebp
   16e53:	ret    0x8
   16e56:	int3   
   16e57:	int3   
   16e58:	int3   
   16e59:	int3   
   16e5a:	int3   
   16e5b:	int3   
   16e5c:	mov    edi,edi
   16e5e:	push   esi
   16e5f:	mov    esi,ecx
   16e61:	mov    BYTE PTR [esi+0x8],0x0
   16e65:	call   0x147da
   16e6a:	mov    eax,esi
   16e6c:	pop    esi
   16e6d:	ret    0x8
   16e70:	int3   
   16e71:	int3   
   16e72:	int3   
   16e73:	int3   
   16e74:	int3   
   16e75:	int3   
   16e76:	mov    edi,edi
   16e78:	push   ebp
   16e79:	mov    ebp,esp
   16e7b:	sub    esp,0x90
   16e81:	push   esi
   16e82:	mov    esi,ecx
   16e84:	lea    ecx,[ebp-0x48]
   16e87:	call   0x13b56
   16e8c:	push   eax
   16e8d:	push   DWORD PTR [ebp+0x8]
   16e90:	lea    ecx,[ebp-0x90]
   16e96:	call   0x13cd0
   16e9b:	push   eax
   16e9c:	lea    eax,[ebp-0x8]
   16e9f:	push   eax
   16ea0:	mov    ecx,esi
   16ea2:	call   0x16ce8
   16ea7:	mov    esi,DWORD PTR [eax]
   16ea9:	lea    ecx,[ebp-0x90]
   16eaf:	call   0x136c0
   16eb4:	lea    ecx,[ebp-0x48]
   16eb7:	call   0x13550
   16ebc:	lea    eax,[esi+0x18]
   16ebf:	pop    esi
   16ec0:	leave  
   16ec1:	ret    0x4
   16ec4:	int3   
   16ec5:	int3   
   16ec6:	int3   
   16ec7:	int3   
   16ec8:	int3   
   16ec9:	int3   
   16eca:	mov    edi,edi
   16ecc:	push   ebp
   16ecd:	mov    ebp,esp
   16ecf:	sub    esp,0x20
   16ed2:	push   esi
   16ed3:	push   0xffffffff
   16ed5:	mov    esi,ecx
   16ed7:	push   0x1e5e8
   16edc:	lea    ecx,[ebp-0x8]
   16edf:	call   0x12ba8
   16ee4:	lea    eax,[ebp-0x8]
   16ee7:	push   eax
   16ee8:	push   DWORD PTR [ebp+0x8]
   16eeb:	lea    ecx,[ebp-0x20]
   16eee:	call   0x137d8
   16ef3:	push   eax
   16ef4:	lea    eax,[ebp-0x10]
   16ef7:	push   eax
   16ef8:	mov    ecx,esi
   16efa:	call   0x16d30
   16eff:	mov    esi,DWORD PTR [eax]
   16f01:	lea    ecx,[ebp-0x20]
   16f04:	call   0x12b8a
   16f09:	push   DWORD PTR [ebp-0x8]
   16f0c:	call   0x11d3e
   16f11:	pop    ecx
   16f12:	lea    eax,[esi+0x14]
   16f15:	pop    esi
   16f16:	leave  
   16f17:	ret    0x4
   16f1a:	int3   
   16f1b:	int3   
   16f1c:	int3   
   16f1d:	int3   
   16f1e:	int3   
   16f1f:	int3   
   16f20:	mov    edi,edi
   16f22:	push   esi
   16f23:	mov    esi,ecx
   16f25:	mov    BYTE PTR [esi+0x8],0x0
   16f29:	call   0x1489e
   16f2e:	mov    eax,esi
   16f30:	pop    esi
   16f31:	ret    0x8
   16f34:	int3   
   16f35:	int3   
   16f36:	int3   
   16f37:	int3   
   16f38:	int3   
   16f39:	int3   
   16f3a:	mov    edi,edi
   16f3c:	push   ebp
   16f3d:	mov    ebp,esp
   16f3f:	sub    esp,0x14
   16f42:	and    DWORD PTR [ebp-0x4],0x0
   16f46:	push   esi
   16f47:	lea    eax,[ebp-0x4]
   16f4a:	push   eax
   16f4b:	push   DWORD PTR [ebp+0x8]
   16f4e:	mov    esi,ecx
   16f50:	lea    ecx,[ebp-0xc]
   16f53:	call   0x13800
   16f58:	push   eax
   16f59:	lea    eax,[ebp-0x14]
   16f5c:	push   eax
   16f5d:	mov    ecx,esi
   16f5f:	call   0x16d5a
   16f64:	mov    ecx,DWORD PTR [ebp-0x8]
   16f67:	mov    esi,DWORD PTR [eax]
   16f69:	test   ecx,ecx
   16f6b:	je     0x16f72
   16f6d:	call   0x11d80
   16f72:	lea    eax,[esi+0x10]
   16f75:	pop    esi
   16f76:	leave  
   16f77:	ret    0x4
   16f7a:	int3   
   16f7b:	int3   
   16f7c:	int3   
   16f7d:	int3   
   16f7e:	int3   
   16f7f:	int3   
   16f80:	mov    edi,edi
   16f82:	push   ebp
   16f83:	mov    ebp,esp
   16f85:	sub    esp,0x20
   16f88:	push   esi
   16f89:	mov    esi,ecx
   16f8b:	mov    eax,DWORD PTR [esi+0x24]
   16f8e:	mov    ecx,DWORD PTR [esi+0x28]
   16f91:	add    ecx,eax
   16f93:	cmp    DWORD PTR [esi+0x10],ecx
   16f96:	jbe    0x17029
   16f9c:	mov    ecx,DWORD PTR [esi+0x18]
   16f9f:	mov    ecx,DWORD PTR [ecx]
   16fa1:	push   edi
   16fa2:	mov    DWORD PTR [ebp-0x4],ecx
   16fa5:	test   eax,eax
   16fa7:	je     0x16fb6
   16fa9:	mov    edi,eax
   16fab:	lea    ecx,[ebp-0x4]
   16fae:	call   0x12ef4
   16fb3:	dec    edi
   16fb4:	jne    0x16fab
   16fb6:	mov    eax,DWORD PTR [ebp-0x4]
   16fb9:	mov    edi,DWORD PTR [eax+0xc]
   16fbc:	lea    ecx,[ebp-0x20]
   16fbf:	mov    BYTE PTR [ebp-0x18],0x0
   16fc3:	call   0x14900
   16fc8:	mov    eax,DWORD PTR [esi+0x8]
   16fcb:	mov    ecx,DWORD PTR [eax]
   16fcd:	mov    DWORD PTR [ebp-0x4],ecx
   16fd0:	cmp    ecx,eax
   16fd2:	je     0x17013
   16fd4:	lea    edx,[ecx+0x58]
   16fd7:	mov    eax,DWORD PTR [edx]
   16fd9:	cmp    eax,edi
   16fdb:	jae    0x16ff2
   16fdd:	push   ecx
   16fde:	lea    eax,[ebp-0x8]
   16fe1:	push   eax
   16fe2:	lea    ecx,[esi+0x4]
   16fe5:	call   0x1548e
   16fea:	mov    ecx,DWORD PTR [ebp-0x8]
   16fed:	mov    DWORD PTR [ebp-0x4],ecx
   16ff0:	jmp    0x1700e
   16ff2:	sub    eax,edi
   16ff4:	mov    DWORD PTR [edx],eax
   16ff6:	push   edx
   16ff7:	lea    eax,[ebp-0x10]
   16ffa:	push   eax
   16ffb:	lea    ecx,[ebp-0x20]
   16ffe:	call   0x1669e
   17003:	lea    ecx,[ebp-0x4]
   17006:	call   0x12e7e
   1700b:	mov    ecx,DWORD PTR [ebp-0x4]
   1700e:	cmp    ecx,DWORD PTR [esi+0x8]
   17011:	jne    0x16fd4
   17013:	lea    eax,[ebp-0x20]
   17016:	push   eax
   17017:	add    esi,0x14
   1701a:	push   esi
   1701b:	call   0x16bb6
   17020:	lea    ecx,[ebp-0x20]
   17023:	call   0x15258
   17028:	pop    edi
   17029:	pop    esi
   1702a:	leave  
   1702b:	ret    
   1702c:	int3   
   1702d:	int3   
   1702e:	int3   
   1702f:	int3   
   17030:	int3   
   17031:	int3   
   17032:	mov    edi,edi
   17034:	push   ebp
   17035:	mov    ebp,esp
   17037:	sub    esp,0x20
   1703a:	push   esi
   1703b:	push   0xffffffff
   1703d:	mov    esi,ecx
   1703f:	push   0x1e54e
   17044:	lea    ecx,[ebp-0x8]
   17047:	call   0x12c62
   1704c:	lea    eax,[ebp-0x8]
   1704f:	push   eax
   17050:	push   DWORD PTR [ebp+0x8]
   17053:	lea    ecx,[ebp-0x20]
   17056:	call   0x138d4
   1705b:	push   eax
   1705c:	lea    eax,[ebp-0x10]
   1705f:	push   eax
   17060:	mov    ecx,esi
   17062:	call   0x16dec
   17067:	mov    esi,DWORD PTR [eax]
   17069:	lea    ecx,[ebp-0x20]
   1706c:	call   0x12b8a
   17071:	push   DWORD PTR [ebp-0x8]
   17074:	call   0x11d3e
   17079:	pop    ecx
   1707a:	lea    eax,[esi+0x14]
   1707d:	pop    esi
   1707e:	leave  
   1707f:	ret    0x4
   17082:	int3   
   17083:	int3   
   17084:	int3   
   17085:	int3   
   17086:	int3   
   17087:	int3   
   17088:	push   0x24
   1708a:	push   0x76ac8
   1708f:	call   0x1e1dc
   17094:	xor    ebx,ebx
   17096:	push   ebx
   17097:	push   ebx
   17098:	push   ebx
   17099:	push   ebx
   1709a:	push   0x76f58
   1709f:	call   0x11a5a
   170a4:	call   eax
   170a6:	cmp    eax,ebx
   170a8:	jge    0x170b9
   170aa:	mov    eax,DWORD PTR [ebp+0x8]
   170ad:	mov    DWORD PTR [eax+0x8],0x4
   170b4:	jmp    0x17172
   170b9:	mov    DWORD PTR [ebp-0x4],ebx
   170bc:	push   0xffffffff
   170be:	mov    esi,DWORD PTR [ebp+0x8]
   170c1:	lea    eax,[esi+0xc]
   170c4:	push   eax
   170c5:	lea    ecx,[ebp-0x24]
   170c8:	call   0x1367e
   170cd:	push   0xffffffff
   170cf:	mov    eax,DWORD PTR [ebp-0x20]
   170d2:	lea    eax,[eax+esi*1+0xd]
   170d6:	push   eax
   170d7:	lea    ecx,[ebp-0x2c]
   170da:	call   0x1367e
   170df:	push   0xffffffff
   170e1:	push   0x1e5e8
   170e6:	lea    ecx,[ebp-0x34]
   170e9:	call   0x12ba8
   170ee:	lea    eax,[ebp-0x34]
   170f1:	push   eax
   170f2:	lea    eax,[ebp-0x2c]
   170f5:	push   eax
   170f6:	call   0x19f18
   170fb:	mov    BYTE PTR [ebp-0x19],al
   170fe:	push   DWORD PTR [ebp-0x34]
   17101:	call   0x11d3e
   17106:	pop    ecx
   17107:	lea    eax,[ebp-0x24]
   1710a:	mov    ecx,DWORD PTR ds:0x76f28
   17110:	push   eax
   17111:	cmp    BYTE PTR [ebp-0x19],bl
   17114:	je     0x1711d
   17116:	call   0x166f2
   1711b:	jmp    0x1712d
   1711d:	call   0x16eca
   17122:	lea    ecx,[ebp-0x2c]
   17125:	push   ecx
   17126:	mov    ecx,eax
   17128:	call   0x12a44
   1712d:	mov    DWORD PTR [esi+0x8],ebx
   17130:	push   DWORD PTR [ebp-0x2c]
   17133:	call   0x11d3e
   17138:	push   DWORD PTR [ebp-0x24]
   1713b:	call   0x11d3e
   17140:	pop    ecx
   17141:	pop    ecx
   17142:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17149:	jmp    0x17165
   1714b:	xor    eax,eax
   1714d:	inc    eax
   1714e:	ret    
   1714f:	mov    esp,DWORD PTR [ebp-0x18]
   17152:	mov    eax,DWORD PTR [ebp+0x8]
   17155:	mov    DWORD PTR [eax+0x8],0x4
   1715c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17163:	xor    ebx,ebx
   17165:	push   ebx
   17166:	push   0x76f58
   1716b:	call   0x11a84
   17170:	call   eax
   17172:	call   0x1e221
   17177:	ret    0x4
   1717a:	int3   
   1717b:	int3   
   1717c:	int3   
   1717d:	int3   
   1717e:	int3   
   1717f:	int3   
   17180:	push   0xc
   17182:	push   0x76ae8
   17187:	call   0x1e1dc
   1718c:	xor    edi,edi
   1718e:	push   edi
   1718f:	push   edi
   17190:	push   edi
   17191:	push   edi
   17192:	push   0x76f58
   17197:	call   0x11a5a
   1719c:	call   eax
   1719e:	cmp    eax,edi
   171a0:	jge    0x171ae
   171a2:	mov    eax,DWORD PTR [ebp+0x8]
   171a5:	mov    DWORD PTR [eax+0x8],0x4
   171ac:	jmp    0x17225
   171ae:	mov    DWORD PTR [ebp-0x4],edi
   171b1:	mov    esi,DWORD PTR [ebp+0x8]
   171b4:	lea    eax,[esi+0x4]
   171b7:	mov    ecx,DWORD PTR ds:0x76fb4
   171bd:	push   eax
   171be:	cmp    DWORD PTR [esi],edi
   171c0:	jbe    0x171ed
   171c2:	call   0x16f3a
   171c7:	mov    ebx,eax
   171c9:	push   DWORD PTR [esi]
   171cb:	lea    eax,[esi+0xc]
   171ce:	push   eax
   171cf:	lea    ecx,[ebp-0x1c]
   171d2:	call   0x13c12
   171d7:	push   eax
   171d8:	mov    ecx,ebx
   171da:	call   0x13586
   171df:	mov    ecx,DWORD PTR [ebp-0x1c]
   171e2:	cmp    ecx,edi
   171e4:	je     0x171f2
   171e6:	call   0x11d80
   171eb:	jmp    0x171f2
   171ed:	call   0x16d84
   171f2:	mov    DWORD PTR [esi+0x8],edi
   171f5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   171fc:	jmp    0x17218
   171fe:	xor    eax,eax
   17200:	inc    eax
   17201:	ret    
   17202:	mov    esp,DWORD PTR [ebp-0x18]
   17205:	mov    eax,DWORD PTR [ebp+0x8]
   17208:	mov    DWORD PTR [eax+0x8],0x4
   1720f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17216:	xor    edi,edi
   17218:	push   edi
   17219:	push   0x76f58
   1721e:	call   0x11a84
   17223:	call   eax
   17225:	call   0x1e221
   1722a:	ret    0x4
   1722d:	int3   
   1722e:	int3   
   1722f:	int3   
   17230:	int3   
   17231:	int3   
   17232:	mov    edi,edi
   17234:	push   ebp
   17235:	mov    ebp,esp
   17237:	sub    esp,0x10
   1723a:	and    DWORD PTR [ebp-0xc],0x0
   1723e:	xor    ecx,ecx
   17240:	mov    DWORD PTR [ebp-0x10],0x1
   17247:	xor    eax,eax
   17249:	mov    dl,BYTE PTR [eax+0x72e40]
   1724f:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17253:	inc    ecx
   17254:	inc    eax
   17255:	and    eax,0xf
   17258:	cmp    ecx,0x8
   1725b:	jne    0x17249
   1725d:	push   ecx
   1725e:	lea    eax,[ebp-0x10]
   17261:	push   eax
   17262:	lea    ecx,[ebp-0x8]
   17265:	mov    DWORD PTR [ebp-0x4],0x2
   1726c:	call   0x13c12
   17271:	mov    ecx,DWORD PTR ds:0x76fb4
   17277:	push   eax
   17278:	lea    eax,[ebp-0x4]
   1727b:	push   eax
   1727c:	call   0x16f3a
   17281:	mov    ecx,eax
   17283:	call   0x13586
   17288:	mov    ecx,DWORD PTR [ebp-0x8]
   1728b:	test   ecx,ecx
   1728d:	je     0x17294
   1728f:	call   0x11d80
   17294:	leave  
   17295:	ret    
   17296:	int3   
   17297:	int3   
   17298:	int3   
   17299:	int3   
   1729a:	int3   
   1729b:	int3   
   1729c:	push   0x868
   172a1:	push   0x76b08
   172a6:	call   0x1e4e0
   172ab:	xor    ebx,ebx
   172ad:	mov    DWORD PTR [ebp-0x838],ebx
   172b3:	mov    DWORD PTR [ebp-0x4],ebx
   172b6:	mov    DWORD PTR [ebp-0x878],ebx
   172bc:	xor    eax,eax
   172be:	lea    edi,[ebp-0x874]
   172c4:	stos   DWORD PTR es:[edi],eax
   172c5:	stos   DWORD PTR es:[edi],eax
   172c6:	stos   DWORD PTR es:[edi],eax
   172c7:	stos   DWORD PTR es:[edi],eax
   172c8:	stos   DWORD PTR es:[edi],eax
   172c9:	mov    BYTE PTR [ebp-0x840],bl
   172cf:	mov    DWORD PTR [ebp-0x83c],ebx
   172d5:	xor    eax,eax
   172d7:	mov    WORD PTR [ebp-0x81c],ax
   172de:	push   0x7fe
   172e3:	push   ebx
   172e4:	lea    eax,[ebp-0x81a]
   172ea:	push   eax
   172eb:	call   0x1e19e
   172f0:	add    esp,0xc
   172f3:	mov    eax,0x770b8
   172f8:	mov    edx,eax
   172fa:	mov    cx,WORD PTR [eax]
   172fd:	inc    eax
   172fe:	inc    eax
   172ff:	cmp    cx,bx
   17302:	jne    0x172fa
   17304:	sub    eax,edx
   17306:	lea    edi,[ebp-0x81c]
   1730c:	dec    edi
   1730d:	dec    edi
   1730e:	mov    cx,WORD PTR [edi+0x2]
   17312:	inc    edi
   17313:	inc    edi
   17314:	cmp    cx,bx
   17317:	jne    0x1730e
   17319:	mov    ecx,eax
   1731b:	mov    esi,edx
   1731d:	shr    ecx,0x2
   17320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17322:	mov    ecx,eax
   17324:	and    ecx,0x3
   17327:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17329:	mov    eax,0x76e48
   1732e:	mov    edx,eax
   17330:	mov    cx,WORD PTR [eax]
   17333:	inc    eax
   17334:	inc    eax
   17335:	cmp    cx,bx
   17338:	jne    0x17330
   1733a:	sub    eax,edx
   1733c:	lea    edi,[ebp-0x81c]
   17342:	dec    edi
   17343:	dec    edi
   17344:	mov    cx,WORD PTR [edi+0x2]
   17348:	inc    edi
   17349:	inc    edi
   1734a:	cmp    cx,bx
   1734d:	jne    0x17344
   1734f:	mov    ecx,eax
   17351:	mov    esi,edx
   17353:	shr    ecx,0x2
   17356:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17358:	mov    ecx,eax
   1735a:	and    ecx,0x3
   1735d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1735f:	lea    eax,[ebp-0x81c]
   17365:	mov    DWORD PTR [ebp-0x85c],eax
   1736b:	lea    ecx,[eax+0x2]
   1736e:	mov    dx,WORD PTR [eax]
   17371:	inc    eax
   17372:	inc    eax
   17373:	cmp    dx,bx
   17376:	jne    0x1736e
   17378:	sub    eax,ecx
   1737a:	sar    eax,1
   1737c:	add    eax,eax
   1737e:	mov    WORD PTR [ebp-0x85e],ax
   17385:	mov    WORD PTR [ebp-0x860],ax
   1738c:	push   0x18
   1738e:	pop    esi
   1738f:	mov    DWORD PTR [ebp-0x878],esi
   17395:	mov    DWORD PTR [ebp-0x874],ebx
   1739b:	mov    DWORD PTR [ebp-0x86c],0x40
   173a5:	lea    eax,[ebp-0x860]
   173ab:	mov    DWORD PTR [ebp-0x870],eax
   173b1:	mov    DWORD PTR [ebp-0x868],ebx
   173b7:	mov    DWORD PTR [ebp-0x864],ebx
   173bd:	lea    eax,[ebp-0x878]
   173c3:	push   eax
   173c4:	push   0x1
   173c6:	lea    eax,[ebp-0x838]
   173cc:	push   eax
   173cd:	call   0x113f4
   173d2:	call   eax
   173d4:	cmp    eax,ebx
   173d6:	je     0x173e2
   173d8:	call   0x17232
   173dd:	jmp    0x174d4
   173e2:	mov    eax,0x1e54e
   173e7:	mov    DWORD PTR [ebp-0x854],eax
   173ed:	lea    edx,[eax+0x2]
   173f0:	mov    cx,WORD PTR [eax]
   173f3:	inc    eax
   173f4:	inc    eax
   173f5:	cmp    cx,bx
   173f8:	jne    0x173f0
   173fa:	sub    eax,edx
   173fc:	sar    eax,1
   173fe:	mov    WORD PTR [ebp-0x856],ax
   17405:	mov    WORD PTR [ebp-0x858],ax
   1740c:	mov    DWORD PTR [ebp-0x844],ebx
   17412:	lea    eax,[ebp-0x844]
   17418:	push   eax
   17419:	push   esi
   1741a:	lea    eax,[ebp-0x834]
   17420:	push   eax
   17421:	push   0x1
   17423:	lea    eax,[ebp-0x858]
   17429:	push   eax
   1742a:	push   DWORD PTR [ebp-0x838]
   17430:	call   0x1180e
   17435:	call   eax
   17437:	cmp    eax,0x80000005
   1743c:	je     0x17445
   1743e:	cmp    eax,0xc0000023
   17443:	jne    0x174b6
   17445:	push   DWORD PTR [ebp-0x844]
   1744b:	call   0x11d08
   17450:	pop    ecx
   17451:	xor    ecx,ecx
   17453:	cmp    eax,ebx
   17455:	setne  cl
   17458:	mov    BYTE PTR [ebp-0x850],cl
   1745e:	mov    DWORD PTR [ebp-0x84c],eax
   17464:	lea    eax,[ebp-0x850]
   1746a:	push   eax
   1746b:	lea    ecx,[ebp-0x840]
   17471:	call   0x12a8e
   17476:	cmp    BYTE PTR [ebp-0x850],bl
   1747c:	je     0x1748a
   1747e:	push   DWORD PTR [ebp-0x84c]
   17484:	call   0x11d3e
   17489:	pop    ecx
   1748a:	lea    eax,[ebp-0x844]
   17490:	push   eax
   17491:	push   DWORD PTR [ebp-0x844]
   17497:	mov    edi,DWORD PTR [ebp-0x83c]
   1749d:	push   edi
   1749e:	push   0x1
   174a0:	lea    eax,[ebp-0x858]
   174a6:	push   eax
   174a7:	push   DWORD PTR [ebp-0x838]
   174ad:	call   0x1180e
   174b2:	call   eax
   174b4:	jmp    0x174bc
   174b6:	mov    edi,DWORD PTR [ebp-0x83c]
   174bc:	cmp    eax,ebx
   174be:	je     0x174e6
   174c0:	call   0x17232
   174c5:	cmp    BYTE PTR [ebp-0x840],bl
   174cb:	je     0x174d4
   174cd:	push   edi
   174ce:	call   0x11d3e
   174d3:	pop    ecx
   174d4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   174db:	call   0x17558
   174e0:	call   0x1e528
   174e5:	ret    
   174e6:	cmp    DWORD PTR [edi+0x4],0x3
   174ea:	jne    0x174c0
   174ec:	mov    esi,DWORD PTR [edi+0xc]
   174ef:	cmp    esi,ebx
   174f1:	je     0x174c5
   174f3:	cmp    esi,0xf4240
   174f9:	ja     0x174c5
   174fb:	mov    DWORD PTR [ebp-0x848],0x2
   17505:	lea    eax,[ebp-0x848]
   1750b:	push   eax
   1750c:	mov    ecx,DWORD PTR ds:0x76fb4
   17512:	call   0x16f3a
   17517:	mov    edi,eax
   17519:	push   esi
   1751a:	mov    esi,DWORD PTR [ebp-0x83c]
   17520:	mov    eax,DWORD PTR [esi+0x8]
   17523:	add    eax,esi
   17525:	push   eax
   17526:	lea    ecx,[ebp-0x848]
   1752c:	call   0x13c12
   17531:	push   eax
   17532:	mov    ecx,edi
   17534:	call   0x13586
   17539:	mov    ecx,DWORD PTR [ebp-0x848]
   1753f:	cmp    ecx,ebx
   17541:	je     0x17548
   17543:	call   0x11d80
   17548:	cmp    BYTE PTR [ebp-0x840],bl
   1754e:	je     0x174d4
   17550:	push   esi
   17551:	jmp    0x174ce
   17556:	xor    ebx,ebx
   17558:	cmp    DWORD PTR [ebp-0x838],ebx
   1755e:	je     0x1756d
   17560:	push   DWORD PTR [ebp-0x838]
   17566:	call   0x11598
   1756b:	call   eax
   1756d:	ret    
   1756e:	int3   
   1756f:	int3   
   17570:	int3   
   17571:	int3   
   17572:	int3   
   17573:	int3   
   17574:	push   0x844
   17579:	push   0x76b28
   1757e:	call   0x1e4e0
   17583:	xor    esi,esi
   17585:	mov    DWORD PTR [ebp-0x820],esi
   1758b:	mov    DWORD PTR [ebp-0x4],esi
   1758e:	mov    DWORD PTR [ebp-0x84c],esi
   17594:	xor    eax,eax
   17596:	lea    edi,[ebp-0x848]
   1759c:	stos   DWORD PTR es:[edi],eax
   1759d:	stos   DWORD PTR es:[edi],eax
   1759e:	stos   DWORD PTR es:[edi],eax
   1759f:	stos   DWORD PTR es:[edi],eax
   175a0:	stos   DWORD PTR es:[edi],eax
   175a1:	mov    BYTE PTR [ebp-0x854],0x0
   175a8:	mov    DWORD PTR [ebp-0x850],esi
   175ae:	xor    eax,eax
   175b0:	mov    WORD PTR [ebp-0x81c],ax
   175b7:	push   0x7fe
   175bc:	push   esi
   175bd:	lea    eax,[ebp-0x81a]
   175c3:	push   eax
   175c4:	call   0x1e19e
   175c9:	add    esp,0xc
   175cc:	mov    eax,0x770b8
   175d1:	mov    edx,eax
   175d3:	push   0x2
   175d5:	pop    ebx
   175d6:	mov    cx,WORD PTR [eax]
   175d9:	add    eax,ebx
   175db:	cmp    cx,si
   175de:	jne    0x175d6
   175e0:	sub    eax,edx
   175e2:	lea    edi,[ebp-0x81c]
   175e8:	dec    edi
   175e9:	dec    edi
   175ea:	mov    cx,WORD PTR [edi+0x2]
   175ee:	add    edi,ebx
   175f0:	cmp    cx,si
   175f3:	jne    0x175ea
   175f5:	mov    ecx,eax
   175f7:	mov    esi,edx
   175f9:	shr    ecx,0x2
   175fc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   175fe:	mov    ecx,eax
   17600:	and    ecx,0x3
   17603:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17605:	mov    eax,0x76e48
   1760a:	mov    edx,eax
   1760c:	mov    cx,WORD PTR [eax]
   1760f:	add    eax,ebx
   17611:	test   cx,cx
   17614:	jne    0x1760c
   17616:	sub    eax,edx
   17618:	lea    edi,[ebp-0x81c]
   1761e:	dec    edi
   1761f:	dec    edi
   17620:	mov    cx,WORD PTR [edi+0x2]
   17624:	add    edi,ebx
   17626:	test   cx,cx
   17629:	jne    0x17620
   1762b:	mov    ecx,eax
   1762d:	mov    esi,edx
   1762f:	shr    ecx,0x2
   17632:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17634:	mov    ecx,eax
   17636:	and    ecx,0x3
   17639:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1763b:	lea    eax,[ebp-0x81c]
   17641:	mov    DWORD PTR [ebp-0x830],eax
   17647:	lea    ecx,[eax+0x2]
   1764a:	mov    dx,WORD PTR [eax]
   1764d:	add    eax,ebx
   1764f:	test   dx,dx
   17652:	jne    0x1764a
   17654:	sub    eax,ecx
   17656:	sar    eax,1
   17658:	add    eax,eax
   1765a:	mov    WORD PTR [ebp-0x832],ax
   17661:	mov    WORD PTR [ebp-0x834],ax
   17668:	mov    DWORD PTR [ebp-0x84c],0x18
   17672:	xor    esi,esi
   17674:	mov    DWORD PTR [ebp-0x848],esi
   1767a:	mov    DWORD PTR [ebp-0x840],0x40
   17684:	lea    eax,[ebp-0x834]
   1768a:	mov    DWORD PTR [ebp-0x844],eax
   17690:	mov    DWORD PTR [ebp-0x83c],esi
   17696:	mov    DWORD PTR [ebp-0x838],esi
   1769c:	lea    eax,[ebp-0x84c]
   176a2:	push   eax
   176a3:	push   0x3
   176a5:	lea    eax,[ebp-0x820]
   176ab:	push   eax
   176ac:	call   0x113f4
   176b1:	call   eax
   176b3:	cmp    eax,esi
   176b5:	je     0x176d0
   176b7:	push   0xfffffffe
   176b9:	lea    eax,[ebp-0x10]
   176bc:	push   eax
   176bd:	push   0x76f1c
   176c2:	call   0x1e39c
   176c7:	add    esp,0xc
   176ca:	call   0x1e528
   176cf:	ret    
   176d0:	mov    eax,0x1e54e
   176d5:	mov    DWORD PTR [ebp-0x824],eax
   176db:	lea    edx,[eax+0x2]
   176de:	mov    cx,WORD PTR [eax]
   176e1:	add    eax,ebx
   176e3:	cmp    cx,si
   176e6:	jne    0x176de
   176e8:	sub    eax,edx
   176ea:	sar    eax,1
   176ec:	mov    WORD PTR [ebp-0x826],ax
   176f3:	mov    WORD PTR [ebp-0x828],ax
   176fa:	mov    DWORD PTR [ebp-0x82c],ebx
   17700:	lea    eax,[ebp-0x82c]
   17706:	push   eax
   17707:	mov    ecx,DWORD PTR ds:0x76fb4
   1770d:	call   0x16f3a
   17712:	mov    eax,DWORD PTR [eax]
   17714:	cmp    eax,esi
   17716:	jne    0x1771c
   17718:	xor    ecx,ecx
   1771a:	jmp    0x1771f
   1771c:	mov    ecx,DWORD PTR [eax+0x8]
   1771f:	cmp    eax,esi
   17721:	jne    0x17727
   17723:	xor    eax,eax
   17725:	jmp    0x17729
   17727:	mov    eax,DWORD PTR [eax]
   17729:	push   ecx
   1772a:	push   eax
   1772b:	push   0x3
   1772d:	push   esi
   1772e:	lea    eax,[ebp-0x828]
   17734:	push   eax
   17735:	push   DWORD PTR [ebp-0x820]
   1773b:	call   0x11448
   17740:	call   eax
   17742:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17749:	call   0x17755
   1774e:	jmp    0x176ca
   17753:	xor    esi,esi
   17755:	cmp    DWORD PTR [ebp-0x820],esi
   1775b:	je     0x1776a
   1775d:	push   DWORD PTR [ebp-0x820]
   17763:	call   0x11598
   17768:	call   eax
   1776a:	ret    
   1776b:	int3   
   1776c:	int3   
   1776d:	int3   
   1776e:	int3   
   1776f:	int3   
   17770:	mov    edi,edi
   17772:	push   ebp
   17773:	mov    ebp,esp
   17775:	push   esi
   17776:	mov    esi,ecx
   17778:	lea    ecx,[esi+0x4]
   1777b:	mov    DWORD PTR [esi],0x72e50
   17781:	mov    BYTE PTR [ecx+0x8],0x0
   17785:	call   0x14ab2
   1778a:	lea    ecx,[esi+0x14]
   1778d:	mov    BYTE PTR [ecx+0x8],0x0
   17791:	call   0x14900
   17796:	mov    eax,DWORD PTR [ebp+0x8]
   17799:	mov    DWORD PTR [esi+0x24],eax
   1779c:	mov    eax,DWORD PTR [ebp+0xc]
   1779f:	mov    DWORD PTR [esi+0x28],eax
   177a2:	mov    eax,esi
   177a4:	pop    esi
   177a5:	pop    ebp
   177a6:	ret    0x8
   177a9:	int3   
   177aa:	int3   
   177ab:	int3   
   177ac:	int3   
   177ad:	int3   
   177ae:	mov    edi,edi
   177b0:	push   esi
   177b1:	mov    esi,ecx
   177b3:	lea    ecx,[esi+0x14]
   177b6:	mov    DWORD PTR [esi],0x72e50
   177bc:	call   0x15258
   177c1:	lea    ecx,[esi+0x4]
   177c4:	pop    esi
   177c5:	jmp    0x16c96
   177ca:	int3   
   177cb:	int3   
   177cc:	int3   
   177cd:	int3   
   177ce:	int3   
   177cf:	int3   
   177d0:	mov    edi,edi
   177d2:	push   ebp
   177d3:	mov    ebp,esp
   177d5:	sub    esp,0xf4
   177db:	push   ebx
   177dc:	push   esi
   177dd:	push   edi
   177de:	mov    esi,ecx
   177e0:	call   0x16f80
   177e5:	push   DWORD PTR [ebp+0x8]
   177e8:	lea    eax,[ebp-0x4]
   177eb:	lea    edi,[esi+0x4]
   177ee:	push   eax
   177ef:	mov    ecx,edi
   177f1:	call   0x13da2
   177f6:	mov    ebx,DWORD PTR [ebp-0x4]
   177f9:	cmp    ebx,DWORD PTR [esi+0x8]
   177fc:	je     0x17847
   177fe:	mov    eax,DWORD PTR [esi+0x18]
   17801:	lea    ecx,[ebp+0x8]
   17804:	mov    DWORD PTR [ebp+0x8],eax
   17807:	call   0x13d82
   1780c:	mov    edi,DWORD PTR [eax]
   1780e:	lea    eax,[ebx+0x58]
   17811:	add    esi,0x14
   17814:	inc    edi
   17815:	push   eax
   17816:	mov    ecx,esi
   17818:	mov    DWORD PTR [ebp+0x8],edi
   1781b:	mov    DWORD PTR [ebp-0x4],eax
   1781e:	call   0x1472e
   17823:	lea    eax,[ebp+0x8]
   17826:	push   eax
   17827:	lea    eax,[ebp-0xc]
   1782a:	push   eax
   1782b:	mov    ecx,esi
   1782d:	call   0x1669e
   17832:	push   DWORD PTR [ebp+0xc]
   17835:	lea    ecx,[ebx+0x18]
   17838:	call   0x12b1c
   1783d:	mov    eax,DWORD PTR [ebp-0x4]
   17840:	mov    DWORD PTR [eax],edi
   17842:	jmp    0x178dc
   17847:	lea    ecx,[ebp-0x54]
   1784a:	call   0x13b56
   1784f:	xor    eax,eax
   17851:	cmp    DWORD PTR [esi+0x20],eax
   17854:	je     0x17867
   17856:	mov    eax,DWORD PTR [esi+0x18]
   17859:	lea    ecx,[ebp-0x4]
   1785c:	mov    DWORD PTR [ebp-0x4],eax
   1785f:	call   0x13d82
   17864:	mov    eax,DWORD PTR [eax]
   17866:	inc    eax
   17867:	push   DWORD PTR [ebp+0xc]
   1786a:	lea    ecx,[ebp-0x54]
   1786d:	mov    DWORD PTR [ebp-0x4],eax
   17870:	mov    DWORD PTR [ebp-0x14],eax
   17873:	call   0x12b1c
   17878:	lea    eax,[ebp-0x54]
   1787b:	push   eax
   1787c:	push   DWORD PTR [ebp+0x8]
   1787f:	lea    ecx,[ebp-0xf4]
   17885:	call   0x13b2e
   1788a:	lea    eax,[ebp-0xf4]
   17890:	push   eax
   17891:	lea    ecx,[ebp-0xa4]
   17897:	call   0x13a02
   1789c:	lea    eax,[ebp-0xa4]
   178a2:	push   eax
   178a3:	lea    eax,[ebp-0xc]
   178a6:	push   eax
   178a7:	mov    ecx,edi
   178a9:	call   0x16c6c
   178ae:	lea    ecx,[ebp-0xa4]
   178b4:	call   0x136c0
   178b9:	lea    ecx,[ebp-0xf4]
   178bf:	call   0x136c0
   178c4:	lea    eax,[ebp-0x4]
   178c7:	push   eax
   178c8:	lea    eax,[ebp-0xc]
   178cb:	push   eax
   178cc:	lea    ecx,[esi+0x14]
   178cf:	call   0x1669e
   178d4:	lea    ecx,[ebp-0x54]
   178d7:	call   0x13550
   178dc:	pop    edi
   178dd:	pop    esi
   178de:	pop    ebx
   178df:	leave  
   178e0:	ret    0x8
   178e3:	int3   
   178e4:	int3   
   178e5:	int3   
   178e6:	int3   
   178e7:	int3   
   178e8:	mov    edi,edi
   178ea:	push   ebp
   178eb:	mov    ebp,esp
   178ed:	sub    esp,0x10
   178f0:	call   0x1a8ce
   178f5:	test   al,al
   178f7:	jne    0x17901
   178f9:	mov    eax,DWORD PTR [ebp+0x8]
   178fc:	jmp    0x17995
   17901:	push   esi
   17902:	mov    esi,DWORD PTR [ebp+0x8]
   17905:	push   0xffffffff
   17907:	push   esi
   17908:	lea    ecx,[ebp-0x8]
   1790b:	call   0x12c62
   17910:	mov    ecx,DWORD PTR ds:0x77ca0
   17916:	lea    eax,[ebp-0x8]
   17919:	push   eax
   1791a:	lea    eax,[ebp+0x8]
   1791d:	push   eax
   1791e:	call   0x1410a
   17923:	mov    eax,DWORD PTR [ebp+0x8]
   17926:	mov    ecx,DWORD PTR ds:0x77ca0
   1792c:	cmp    eax,DWORD PTR [ecx+0x4]
   1792f:	jne    0x17960
   17931:	lea    eax,[ebp-0x8]
   17934:	push   eax
   17935:	lea    ecx,[ebp-0x10]
   17938:	call   0x136fc
   1793d:	mov    ecx,DWORD PTR ds:0x77ca0
   17943:	lea    eax,[ebp-0x10]
   17946:	push   eax
   17947:	lea    eax,[ebp-0x8]
   1794a:	push   eax
   1794b:	call   0x17032
   17950:	mov    ecx,eax
   17952:	call   0x12c06
   17957:	push   DWORD PTR [ebp-0x10]
   1795a:	call   0x11d3e
   1795f:	pop    ecx
   17960:	mov    ecx,DWORD PTR ds:0x77ca0
   17966:	lea    eax,[ebp-0x8]
   17969:	push   eax
   1796a:	lea    eax,[ebp+0x8]
   1796d:	push   eax
   1796e:	call   0x1410a
   17973:	mov    eax,DWORD PTR [ebp+0x8]
   17976:	mov    ecx,DWORD PTR ds:0x77ca0
   1797c:	cmp    eax,DWORD PTR [ecx+0x4]
   1797f:	je     0x17984
   17981:	mov    esi,DWORD PTR [eax+0x14]
   17984:	call   0x1a8ea
   17989:	push   DWORD PTR [ebp-0x8]
   1798c:	call   0x11d3e
   17991:	pop    ecx
   17992:	mov    eax,esi
   17994:	pop    esi
   17995:	leave  
   17996:	ret    0x4
   17999:	int3   
   1799a:	int3   
   1799b:	int3   
   1799c:	int3   
   1799d:	int3   
   1799e:	mov    edi,edi
   179a0:	push   ebp
   179a1:	mov    ebp,esp
   179a3:	sub    esp,0x10
   179a6:	push   esi
   179a7:	call   0x1a8ce
   179ac:	test   al,al
   179ae:	jne    0x179b8
   179b0:	mov    eax,DWORD PTR [ebp+0x8]
   179b3:	jmp    0x17a64
   179b8:	push   DWORD PTR [ebp+0xc]
   179bb:	lea    ecx,[ebp-0x8]
   179be:	push   DWORD PTR [ebp+0x8]
   179c1:	call   0x136dc
   179c6:	mov    ecx,DWORD PTR ds:0x77ca0
   179cc:	lea    eax,[ebp-0x8]
   179cf:	push   eax
   179d0:	lea    eax,[ebp+0xc]
   179d3:	push   eax
   179d4:	call   0x1410a
   179d9:	mov    esi,DWORD PTR [ebp+0xc]
   179dc:	mov    eax,ds:0x77ca0
   179e1:	cmp    esi,DWORD PTR [eax+0x4]
   179e4:	jne    0x17a1f
   179e6:	push   ecx
   179e7:	push   ecx
   179e8:	lea    eax,[ebp-0x8]
   179eb:	mov    ecx,esp
   179ed:	push   eax
   179ee:	call   0x136fc
   179f3:	lea    eax,[ebp-0x10]
   179f6:	push   eax
   179f7:	call   0x1371e
   179fc:	mov    ecx,DWORD PTR ds:0x77ca0
   17a02:	lea    eax,[ebp-0x10]
   17a05:	push   eax
   17a06:	lea    eax,[ebp-0x8]
   17a09:	push   eax
   17a0a:	call   0x17032
   17a0f:	mov    ecx,eax
   17a11:	call   0x12c06
   17a16:	push   DWORD PTR [ebp-0x10]
   17a19:	call   0x11d3e
   17a1e:	pop    ecx
   17a1f:	mov    eax,DWORD PTR [ebp+0x10]
   17a22:	movzx  eax,BYTE PTR [eax]
   17a25:	cmp    eax,0x100
   17a2a:	jge    0x17a42
   17a2c:	mov    ecx,DWORD PTR ds:0x77ca0
   17a32:	lea    eax,[ebp-0x8]
   17a35:	push   eax
   17a36:	lea    eax,[ebp+0xc]
   17a39:	push   eax
   17a3a:	call   0x1410a
   17a3f:	mov    esi,DWORD PTR [ebp+0xc]
   17a42:	mov    eax,ds:0x77ca0
   17a47:	cmp    esi,DWORD PTR [eax+0x4]
   17a4a:	je     0x17a51
   17a4c:	mov    esi,DWORD PTR [esi+0x14]
   17a4f:	jmp    0x17a54
   17a51:	mov    esi,DWORD PTR [ebp+0x8]
   17a54:	call   0x1a8ea
   17a59:	push   DWORD PTR [ebp-0x8]
   17a5c:	call   0x11d3e
   17a61:	pop    ecx
   17a62:	mov    eax,esi
   17a64:	pop    esi
   17a65:	leave  
   17a66:	ret    0xc
   17a69:	int3   
   17a6a:	int3   
   17a6b:	int3   
   17a6c:	int3   
   17a6d:	int3   
   17a6e:	mov    edi,edi
   17a70:	push   ebp
   17a71:	mov    ebp,esp
   17a73:	sub    esp,0x10
   17a76:	push   esi
   17a77:	call   0x1a8ce
   17a7c:	test   al,al
   17a7e:	jne    0x17a88
   17a80:	mov    eax,DWORD PTR [ebp+0x8]
   17a83:	jmp    0x17b34
   17a88:	push   DWORD PTR [ebp+0xc]
   17a8b:	lea    ecx,[ebp-0x8]
   17a8e:	push   DWORD PTR [ebp+0x8]
   17a91:	call   0x1367e
   17a96:	mov    ecx,DWORD PTR ds:0x77ca4
   17a9c:	lea    eax,[ebp-0x8]
   17a9f:	push   eax
   17aa0:	lea    eax,[ebp+0xc]
   17aa3:	push   eax
   17aa4:	call   0x13cf8
   17aa9:	mov    esi,DWORD PTR [ebp+0xc]
   17aac:	mov    eax,ds:0x77ca4
   17ab1:	cmp    esi,DWORD PTR [eax+0x4]
   17ab4:	jne    0x17aef
   17ab6:	push   ecx
   17ab7:	push   ecx
   17ab8:	lea    eax,[ebp-0x8]
   17abb:	mov    ecx,esp
   17abd:	push   eax
   17abe:	call   0x1369e
   17ac3:	lea    eax,[ebp-0x10]
   17ac6:	push   eax
   17ac7:	call   0x13762
   17acc:	mov    ecx,DWORD PTR ds:0x77ca4
   17ad2:	lea    eax,[ebp-0x10]
   17ad5:	push   eax
   17ad6:	lea    eax,[ebp-0x8]
   17ad9:	push   eax
   17ada:	call   0x16eca
   17adf:	mov    ecx,eax
   17ae1:	call   0x12a44
   17ae6:	push   DWORD PTR [ebp-0x10]
   17ae9:	call   0x11d3e
   17aee:	pop    ecx
   17aef:	mov    eax,DWORD PTR [ebp+0x10]
   17af2:	movzx  eax,BYTE PTR [eax]
   17af5:	cmp    eax,0x100
   17afa:	jge    0x17b12
   17afc:	mov    ecx,DWORD PTR ds:0x77ca4
   17b02:	lea    eax,[ebp-0x8]
   17b05:	push   eax
   17b06:	lea    eax,[ebp+0xc]
   17b09:	push   eax
   17b0a:	call   0x13cf8
   17b0f:	mov    esi,DWORD PTR [ebp+0xc]
   17b12:	mov    eax,ds:0x77ca4
   17b17:	cmp    esi,DWORD PTR [eax+0x4]
   17b1a:	je     0x17b21
   17b1c:	mov    esi,DWORD PTR [esi+0x14]
   17b1f:	jmp    0x17b24
   17b21:	mov    esi,DWORD PTR [ebp+0x8]
   17b24:	call   0x1a8ea
   17b29:	push   DWORD PTR [ebp-0x8]
   17b2c:	call   0x11d3e
   17b31:	pop    ecx
   17b32:	mov    eax,esi
   17b34:	pop    esi
   17b35:	leave  
   17b36:	ret    0xc
   17b39:	int3   
   17b3a:	int3   
   17b3b:	int3   
   17b3c:	int3   
   17b3d:	int3   
   17b3e:	mov    edi,edi
   17b40:	push   ebp
   17b41:	mov    ebp,esp
   17b43:	push   esi
   17b44:	mov    esi,ecx
   17b46:	call   0x177ae
   17b4b:	test   BYTE PTR [ebp+0x8],0x1
   17b4f:	je     0x17b58
   17b51:	push   esi
   17b52:	call   0x11d3e
   17b57:	pop    ecx
   17b58:	mov    eax,esi
   17b5a:	pop    esi
   17b5b:	pop    ebp
   17b5c:	ret    0x4
   17b5f:	int3   
   17b60:	int3   
   17b61:	int3   
   17b62:	int3   
   17b63:	int3   
   17b64:	mov    edi,edi
   17b66:	push   ebp
   17b67:	mov    ebp,esp
   17b69:	push   esi
   17b6a:	push   DWORD PTR [ebp+0xc]
   17b6d:	mov    esi,ecx
   17b6f:	push   DWORD PTR [ebp+0x8]
   17b72:	call   0x17770
   17b77:	mov    eax,esi
   17b79:	pop    esi
   17b7a:	pop    ebp
   17b7b:	ret    0x8
   17b7e:	int3   
   17b7f:	int3   
   17b80:	int3   
   17b81:	int3   
   17b82:	int3   
   17b83:	int3   
   17b84:	mov    edi,edi
   17b86:	push   ebp
   17b87:	mov    ebp,esp
   17b89:	sub    esp,0x838
   17b8f:	mov    eax,ds:0x76f1c
   17b94:	xor    eax,ebp
   17b96:	mov    DWORD PTR [ebp-0x4],eax
   17b99:	mov    eax,DWORD PTR [ebp+0x8]
   17b9c:	push   ebx
   17b9d:	push   esi
   17b9e:	push   edi
   17b9f:	mov    DWORD PTR [ebp-0x808],eax
   17ba5:	xor    eax,eax
   17ba7:	push   0x7fe
   17bac:	mov    WORD PTR [ebp-0x804],ax
   17bb3:	xor    ebx,ebx
   17bb5:	lea    eax,[ebp-0x802]
   17bbb:	push   ebx
   17bbc:	push   eax
   17bbd:	call   0x1e19e
   17bc2:	mov    eax,0x770b8
   17bc7:	add    esp,0xc
   17bca:	mov    edx,eax
   17bcc:	mov    cx,WORD PTR [eax]
   17bcf:	inc    eax
   17bd0:	inc    eax
   17bd1:	cmp    cx,bx
   17bd4:	jne    0x17bcc
   17bd6:	sub    eax,edx
   17bd8:	lea    edi,[ebp-0x804]
   17bde:	dec    edi
   17bdf:	dec    edi
   17be0:	mov    cx,WORD PTR [edi+0x2]
   17be4:	inc    edi
   17be5:	inc    edi
   17be6:	cmp    cx,bx
   17be9:	jne    0x17be0
   17beb:	mov    ecx,eax
   17bed:	shr    ecx,0x2
   17bf0:	mov    esi,edx
   17bf2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17bf4:	mov    ecx,eax
   17bf6:	mov    eax,DWORD PTR [ebp-0x808]
   17bfc:	and    ecx,0x3
   17bff:	add    eax,0x400
   17c04:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17c06:	mov    edx,eax
   17c08:	mov    cx,WORD PTR [eax]
   17c0b:	inc    eax
   17c0c:	inc    eax
   17c0d:	cmp    cx,bx
   17c10:	jne    0x17c08
   17c12:	sub    eax,edx
   17c14:	lea    edi,[ebp-0x804]
   17c1a:	dec    edi
   17c1b:	dec    edi
   17c1c:	mov    cx,WORD PTR [edi+0x2]
   17c20:	inc    edi
   17c21:	inc    edi
   17c22:	cmp    cx,bx
   17c25:	jne    0x17c1c
   17c27:	mov    ecx,eax
   17c29:	shr    ecx,0x2
   17c2c:	mov    esi,edx
   17c2e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17c30:	mov    ecx,eax
   17c32:	and    ecx,0x3
   17c35:	lea    eax,[ebp-0x804]
   17c3b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17c3d:	mov    DWORD PTR [ebp-0x818],eax
   17c43:	lea    ecx,[eax+0x2]
   17c46:	mov    dx,WORD PTR [eax]
   17c49:	inc    eax
   17c4a:	inc    eax
   17c4b:	cmp    dx,bx
   17c4e:	jne    0x17c46
   17c50:	sub    eax,ecx
   17c52:	sar    eax,1
   17c54:	add    eax,eax
   17c56:	mov    WORD PTR [ebp-0x81a],ax
   17c5d:	mov    WORD PTR [ebp-0x81c],ax
   17c64:	lea    eax,[ebp-0x81c]
   17c6a:	mov    DWORD PTR [ebp-0x82c],eax
   17c70:	lea    eax,[ebp-0x838]
   17c76:	push   eax
   17c77:	xor    edi,edi
   17c79:	inc    edi
   17c7a:	push   edi
   17c7b:	push   ebx
   17c7c:	push   ebx
   17c7d:	lea    eax,[ebp-0x834]
   17c83:	push   eax
   17c84:	push   0xf003f
   17c89:	lea    eax,[ebp-0x80c]
   17c8f:	push   eax
   17c90:	mov    DWORD PTR [ebp-0x834],0x18
   17c9a:	mov    DWORD PTR [ebp-0x830],ebx
   17ca0:	mov    DWORD PTR [ebp-0x828],0x40
   17caa:	mov    DWORD PTR [ebp-0x824],ebx
   17cb0:	mov    DWORD PTR [ebp-0x820],ebx
   17cb6:	call   0x11766
   17cbb:	call   eax
   17cbd:	test   eax,eax
   17cbf:	jl     0x17e4f
   17cc5:	push   0x1ee08
   17cca:	push   0x9
   17ccc:	push   0x1edf4
   17cd1:	call   0x1799e
   17cd6:	mov    DWORD PTR [ebp-0x810],eax
   17cdc:	lea    edx,[eax+0x2]
   17cdf:	mov    cx,WORD PTR [eax]
   17ce2:	inc    eax
   17ce3:	inc    eax
   17ce4:	cmp    cx,bx
   17ce7:	jne    0x17cdf
   17ce9:	sub    eax,edx
   17ceb:	sar    eax,1
   17ced:	add    eax,eax
   17cef:	mov    WORD PTR [ebp-0x812],ax
   17cf6:	mov    WORD PTR [ebp-0x814],ax
   17cfd:	mov    eax,DWORD PTR [ebp-0x808]
   17d03:	lea    ecx,[eax+0x2]
   17d06:	mov    dx,WORD PTR [eax]
   17d09:	inc    eax
   17d0a:	inc    eax
   17d0b:	cmp    dx,bx
   17d0e:	jne    0x17d06
   17d10:	sub    eax,ecx
   17d12:	sar    eax,1
   17d14:	inc    eax
   17d15:	movzx  eax,ax
   17d18:	add    eax,eax
   17d1a:	push   eax
   17d1b:	push   DWORD PTR [ebp-0x808]
   17d21:	lea    eax,[ebp-0x814]
   17d27:	push   edi
   17d28:	push   ebx
   17d29:	push   eax
   17d2a:	push   DWORD PTR [ebp-0x80c]
   17d30:	call   0x11448
   17d35:	call   eax
   17d37:	test   eax,eax
   17d39:	jl     0x17e4f
   17d3f:	push   0x1edca
   17d44:	push   0x5
   17d46:	push   0x1edbe
   17d4b:	mov    DWORD PTR [ebp-0x808],0x3
   17d55:	call   0x1799e
   17d5a:	mov    DWORD PTR [ebp-0x810],eax
   17d60:	lea    edx,[eax+0x2]
   17d63:	mov    cx,WORD PTR [eax]
   17d66:	inc    eax
   17d67:	inc    eax
   17d68:	cmp    cx,bx
   17d6b:	jne    0x17d63
   17d6d:	sub    eax,edx
   17d6f:	push   0x4
   17d71:	sar    eax,1
   17d73:	pop    esi
   17d74:	add    eax,eax
   17d76:	push   esi
   17d77:	mov    WORD PTR [ebp-0x812],ax
   17d7e:	mov    WORD PTR [ebp-0x814],ax
   17d85:	lea    eax,[ebp-0x808]
   17d8b:	push   eax
   17d8c:	push   esi
   17d8d:	push   ebx
   17d8e:	lea    eax,[ebp-0x814]
   17d94:	push   eax
   17d95:	push   DWORD PTR [ebp-0x80c]
   17d9b:	call   0x11448
   17da0:	call   eax
   17da2:	test   eax,eax
   17da4:	jl     0x17e4f
   17daa:	push   0x1ed80
   17daf:	push   esi
   17db0:	push   0x1ed76
   17db5:	mov    DWORD PTR [ebp-0x808],edi
   17dbb:	call   0x1799e
   17dc0:	mov    DWORD PTR [ebp-0x810],eax
   17dc6:	lea    ecx,[eax+0x2]
   17dc9:	mov    dx,WORD PTR [eax]
   17dcc:	inc    eax
   17dcd:	inc    eax
   17dce:	cmp    dx,bx
   17dd1:	jne    0x17dc9
   17dd3:	sub    eax,ecx
   17dd5:	sar    eax,1
   17dd7:	add    eax,eax
   17dd9:	push   esi
   17dda:	mov    WORD PTR [ebp-0x812],ax
   17de1:	mov    WORD PTR [ebp-0x814],ax
   17de8:	lea    eax,[ebp-0x808]
   17dee:	push   eax
   17def:	push   esi
   17df0:	push   ebx
   17df1:	lea    eax,[ebp-0x814]
   17df7:	push   eax
   17df8:	push   DWORD PTR [ebp-0x80c]
   17dfe:	call   0x11448
   17e03:	call   eax
   17e05:	test   eax,eax
   17e07:	jl     0x17e4f
   17e09:	lea    eax,[ebp-0x81c]
   17e0f:	push   eax
   17e10:	call   0x1173c
   17e15:	call   eax
   17e17:	test   eax,eax
   17e19:	jl     0x17e4f
   17e1b:	lea    eax,[ebp-0x804]
   17e21:	push   eax
   17e22:	push   DWORD PTR [ebp-0x80c]
   17e28:	call   0x1215c
   17e2d:	test   al,al
   17e2f:	je     0x17e42
   17e31:	push   DWORD PTR [ebp-0x80c]
   17e37:	call   0x1141e
   17e3c:	call   eax
   17e3e:	test   eax,eax
   17e40:	jl     0x17e4f
   17e42:	push   DWORD PTR [ebp-0x80c]
   17e48:	call   0x11598
   17e4d:	call   eax
   17e4f:	mov    ecx,DWORD PTR [ebp-0x4]
   17e52:	pop    edi
   17e53:	pop    esi
   17e54:	xor    ecx,ebp
   17e56:	pop    ebx
   17e57:	call   0x1e145
   17e5c:	leave  
   17e5d:	ret    0x4
   17e60:	int3   
   17e61:	int3   
   17e62:	int3   
   17e63:	int3   
   17e64:	int3   
   17e65:	int3   
   17e66:	mov    edi,edi
   17e68:	push   ebp
   17e69:	mov    ebp,esp
   17e6b:	sub    esp,0x44
   17e6e:	mov    eax,DWORD PTR [ebp+0xc]
   17e71:	mov    eax,DWORD PTR [eax]
   17e73:	push   esi
   17e74:	mov    DWORD PTR [ebp-0x2c],eax
   17e77:	lea    eax,[ebp-0x2c]
   17e7a:	push   eax
   17e7b:	lea    eax,[ebp-0x44]
   17e7e:	push   eax
   17e7f:	xor    esi,esi
   17e81:	push   0x1f0fff
   17e86:	lea    eax,[ebp-0x10]
   17e89:	push   eax
   17e8a:	mov    DWORD PTR [ebp-0x44],0x18
   17e91:	mov    DWORD PTR [ebp-0x40],esi
   17e94:	mov    DWORD PTR [ebp-0x38],0x200
   17e9b:	mov    DWORD PTR [ebp-0x3c],esi
   17e9e:	mov    DWORD PTR [ebp-0x34],esi
   17ea1:	mov    DWORD PTR [ebp-0x30],esi
   17ea4:	mov    DWORD PTR [ebp-0x28],esi
   17ea7:	mov    DWORD PTR [ebp-0x10],esi
   17eaa:	call   0x1127a
   17eaf:	call   eax
   17eb1:	test   eax,eax
   17eb3:	jl     0x18127
   17eb9:	push   ebx
   17eba:	push   edi
   17ebb:	push   0x40
   17ebd:	mov    edi,0x1000
   17ec2:	push   edi
   17ec3:	lea    eax,[ebp-0x14]
   17ec6:	push   eax
   17ec7:	push   esi
   17ec8:	lea    eax,[ebp-0x8]
   17ecb:	push   eax
   17ecc:	push   DWORD PTR [ebp-0x10]
   17ecf:	mov    ebx,0x400
   17ed4:	mov    DWORD PTR [ebp-0x8],esi
   17ed7:	mov    DWORD PTR [ebp-0x14],ebx
   17eda:	call   0x112a4
   17edf:	call   eax
   17ee1:	test   eax,eax
   17ee3:	jl     0x17eee
   17ee5:	mov    eax,DWORD PTR [ebp-0x8]
   17ee8:	mov    ecx,DWORD PTR [ebp+0xc]
   17eeb:	mov    DWORD PTR [ecx+0x8],eax
   17eee:	push   0x4
   17ef0:	push   edi
   17ef1:	lea    eax,[ebp-0x14]
   17ef4:	push   eax
   17ef5:	push   esi
   17ef6:	lea    eax,[ebp-0x18]
   17ef9:	push   eax
   17efa:	push   DWORD PTR [ebp-0x10]
   17efd:	mov    DWORD PTR [ebp-0x18],esi
   17f00:	mov    DWORD PTR [ebp-0x14],ebx
   17f03:	call   0x112a4
   17f08:	call   eax
   17f0a:	test   eax,eax
   17f0c:	jl     0x17f17
   17f0e:	mov    eax,DWORD PTR [ebp-0x18]
   17f11:	mov    ecx,DWORD PTR [ebp+0xc]
   17f14:	mov    DWORD PTR [ecx+0xc],eax
   17f17:	lea    eax,[ebp-0x1c]
   17f1a:	push   eax
   17f1b:	push   DWORD PTR [ebp-0x2c]
   17f1e:	call   0x112ce
   17f23:	call   eax
   17f25:	test   eax,eax
   17f27:	jl     0x18125
   17f2d:	push   DWORD PTR [ebp-0x1c]
   17f30:	call   0x117e4
   17f35:	call   eax
   17f37:	mov    ebx,DWORD PTR [ebp-0x8]
   17f3a:	mov    DWORD PTR [ebp-0x4],esi
   17f3d:	cmp    ebx,esi
   17f3f:	je     0x1810b
   17f45:	mov    edi,DWORD PTR [ebp-0x18]
   17f48:	push   0x40
   17f4a:	push   0x76e08
   17f4f:	push   edi
   17f50:	mov    DWORD PTR [ebp-0xc],edi
   17f53:	call   0x19f96
   17f58:	push   0x1ee38
   17f5d:	push   0x4
   17f5f:	push   0x1ee2e
   17f64:	call   0x1799e
   17f69:	mov    edx,eax
   17f6b:	mov    cx,WORD PTR [eax]
   17f6e:	inc    eax
   17f6f:	inc    eax
   17f70:	cmp    cx,si
   17f73:	jne    0x17f6b
   17f75:	sub    eax,edx
   17f77:	dec    edi
   17f78:	dec    edi
   17f79:	mov    cx,WORD PTR [edi+0x2]
   17f7d:	inc    edi
   17f7e:	inc    edi
   17f7f:	cmp    cx,si
   17f82:	jne    0x17f79
   17f84:	mov    ecx,eax
   17f86:	shr    ecx,0x2
   17f89:	mov    esi,edx
   17f8b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17f8d:	mov    ecx,eax
   17f8f:	push   0x60
   17f91:	and    ecx,0x3
   17f94:	push   ebx
   17f95:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17f97:	mov    DWORD PTR [ebp-0x20],ebx
   17f9a:	call   0x19f48
   17f9f:	push   0x68
   17fa1:	push   eax
   17fa2:	call   0x19f48
   17fa7:	push   DWORD PTR [ebp-0xc]
   17faa:	push   eax
   17fab:	call   0x19f60
   17fb0:	push   0xb8
   17fb5:	push   eax
   17fb6:	call   0x19f48
   17fbb:	push   DWORD PTR ds:0x77968
   17fc1:	push   eax
   17fc2:	call   0x19f60
   17fc7:	push   0xc00b
   17fcc:	push   eax
   17fcd:	call   0x19f7a
   17fd2:	push   0x74
   17fd4:	push   eax
   17fd5:	call   0x19f48
   17fda:	push   0x2
   17fdc:	push   eax
   17fdd:	call   0x19f48
   17fe2:	push   0xd0ff
   17fe7:	push   eax
   17fe8:	call   0x19f7a
   17fed:	push   0x61
   17fef:	push   eax
   17ff0:	call   0x19f48
   17ff5:	mov    ebx,DWORD PTR [ebp+0x8]
   17ff8:	mov    edi,eax
   17ffa:	mov    esi,ebx
   17ffc:	push   0x0
   17ffe:	push   esi
   17fff:	push   edi
   18000:	call   0x1a6fc
   18005:	mov    ecx,eax
   18007:	sub    ecx,esi
   18009:	add    DWORD PTR [ebp-0x4],ecx
   1800c:	add    edi,ecx
   1800e:	cmp    DWORD PTR [ebp-0x4],0x5
   18012:	mov    esi,eax
   18014:	jb     0x17ffc
   18016:	mov    eax,DWORD PTR [ebp-0x4]
   18019:	push   edi
   1801a:	add    eax,ebx
   1801c:	push   eax
   1801d:	call   0x19fbe
   18022:	mov    eax,DWORD PTR [ebp-0x8]
   18025:	test   eax,eax
   18027:	je     0x1810b
   1802d:	add    eax,0x400
   18032:	lea    ecx,[eax-0x10]
   18035:	mov    DWORD PTR [ebp-0x24],ecx
   18038:	mov    ecx,DWORD PTR [ebp-0x4]
   1803b:	lea    esi,[eax-0xc]
   1803e:	push   esi
   1803f:	lea    edi,[eax-0x4]
   18042:	lea    ebx,[eax-0x8]
   18045:	shr    ecx,0x2
   18048:	lea    ecx,[ecx*4+0x14]
   1804f:	push   0x40
   18051:	sub    eax,ecx
   18053:	push   ebx
   18054:	mov    DWORD PTR [ebp-0xc],eax
   18057:	mov    eax,DWORD PTR [ebp+0x8]
   1805a:	mov    DWORD PTR [edi],eax
   1805c:	push   edi
   1805d:	mov    DWORD PTR [ebx],0x5
   18063:	and    DWORD PTR [esi],0x0
   18066:	push   0xffffffff
   18068:	call   DWORD PTR ds:0x778e4
   1806e:	test   eax,eax
   18070:	jl     0x180d5
   18072:	push   DWORD PTR [ebp-0x4]
   18075:	push   0x90
   1807a:	push   DWORD PTR [ebp-0xc]
   1807d:	call   0x1e19e
   18082:	mov    eax,DWORD PTR [ebp-0x20]
   18085:	sub    eax,DWORD PTR [ebp+0x8]
   18088:	add    esp,0xc
   1808b:	sub    eax,0x5
   1808e:	push   eax
   1808f:	mov    eax,DWORD PTR [ebp-0xc]
   18092:	inc    eax
   18093:	push   eax
   18094:	call   0x19f60
   18099:	push   0xe9
   1809e:	push   DWORD PTR [ebp-0xc]
   180a1:	call   0x19f48
   180a6:	mov    eax,DWORD PTR [ebp-0x24]
   180a9:	and    DWORD PTR [eax],0x0
   180ac:	push   eax
   180ad:	push   DWORD PTR [ebp-0x4]
   180b0:	push   DWORD PTR [ebp-0xc]
   180b3:	push   DWORD PTR [ebp+0x8]
   180b6:	push   0xffffffff
   180b8:	call   DWORD PTR ds:0x778d8
   180be:	mov    eax,DWORD PTR [ebp+0xc]
   180c1:	mov    BYTE PTR [eax+0x10],0x1
   180c5:	lea    eax,[ebp-0x20]
   180c8:	push   eax
   180c9:	push   DWORD PTR [esi]
   180cb:	push   ebx
   180cc:	push   edi
   180cd:	push   0xffffffff
   180cf:	call   DWORD PTR ds:0x778e4
   180d5:	mov    esi,DWORD PTR [ebp-0x8]
   180d8:	test   esi,esi
   180da:	je     0x1810b
   180dc:	lea    eax,[esi+0x400]
   180e2:	lea    ecx,[eax-0x4]
   180e5:	lea    edx,[eax-0x8]
   180e8:	add    eax,0xfffffff4
   180eb:	push   eax
   180ec:	push   0x20
   180ee:	push   edx
   180ef:	mov    DWORD PTR [ecx],esi
   180f1:	push   ecx
   180f2:	mov    DWORD PTR [edx],0x400
   180f8:	and    DWORD PTR [eax],0x0
   180fb:	push   0xffffffff
   180fd:	call   DWORD PTR ds:0x778e4
   18103:	test   eax,eax
   18105:	jge    0x1810b
   18107:	and    DWORD PTR [ebp-0x8],0x0
   1810b:	call   0x117ba
   18110:	call   eax
   18112:	mov    ecx,DWORD PTR [ebp-0x1c]
   18115:	call   DWORD PTR ds:0x1f850
   1811b:	push   DWORD PTR [ebp-0x10]
   1811e:	call   0x11598
   18123:	call   eax
   18125:	pop    edi
   18126:	pop    ebx
   18127:	pop    esi
   18128:	leave  
   18129:	ret    0x8
   1812c:	int3   
   1812d:	int3   
   1812e:	int3   
   1812f:	int3   
   18130:	int3   
   18131:	int3   
   18132:	mov    edi,edi
   18134:	push   ebp
   18135:	mov    ebp,esp
   18137:	cmp    DWORD PTR ds:0x77968,0x0
   1813e:	push   esi
   1813f:	mov    esi,DWORD PTR [ebp+0x10]
   18142:	jne    0x1820d
   18148:	push   0x1eff2
   1814d:	push   0xc
   1814f:	push   0x1efd8
   18154:	call   0x1799e
   18159:	push   eax
   1815a:	push   DWORD PTR [ebp+0x8]
   1815d:	call   0x11e66
   18162:	test   al,al
   18164:	je     0x1820d
   1816a:	mov    eax,DWORD PTR [esi+0x4]
   1816d:	push   0x1efb0
   18172:	push   0xc
   18174:	push   0x1efa2
   18179:	mov    ds:0x77960,eax
   1817e:	call   0x17a6e
   18183:	push   eax
   18184:	push   DWORD PTR [esi+0x4]
   18187:	call   0x123c0
   1818c:	push   0x1ef7c
   18191:	push   0xc
   18193:	push   0x1ef6e
   18198:	mov    ds:0x77968,eax
   1819d:	call   0x17a6e
   181a2:	push   eax
   181a3:	push   DWORD PTR [esi+0x4]
   181a6:	call   0x123c0
   181ab:	push   0x1ef38
   181b0:	push   0xc
   181b2:	push   0x1ef2a
   181b7:	mov    ds:0x7796c,eax
   181bc:	call   0x17a6e
   181c1:	push   eax
   181c2:	push   DWORD PTR [esi+0x4]
   181c5:	call   0x123c0
   181ca:	push   0x1eeea
   181cf:	push   0x5
   181d1:	push   0x1eee4
   181d6:	mov    ds:0x77970,eax
   181db:	call   0x17a6e
   181e0:	push   eax
   181e1:	push   DWORD PTR [esi+0x4]
   181e4:	call   0x123c0
   181e9:	push   0x1eec2
   181ee:	push   0x4
   181f0:	push   0x1eebc
   181f5:	mov    ds:0x77974,eax
   181fa:	call   0x17a6e
   181ff:	push   eax
   18200:	push   DWORD PTR [esi+0x4]
   18203:	call   0x123c0
   18208:	mov    ds:0x77978,eax
   1820d:	cmp    DWORD PTR ds:0x77964,0x0
   18214:	jne    0x1823c
   18216:	push   0x1ee7e
   1821b:	push   0x9
   1821d:	push   0x1ee6a
   18222:	call   0x1799e
   18227:	push   eax
   18228:	push   DWORD PTR [ebp+0x8]
   1822b:	call   0x11e66
   18230:	test   al,al
   18232:	je     0x1823c
   18234:	mov    eax,DWORD PTR [esi+0x4]
   18237:	mov    ds:0x77964,eax
   1823c:	pop    esi
   1823d:	pop    ebp
   1823e:	ret    0xc
   18241:	int3   
   18242:	int3   
   18243:	int3   
   18244:	int3   
   18245:	int3   
   18246:	mov    edi,edi
   18248:	push   ebp
   18249:	mov    ebp,esp
   1824b:	sub    esp,0x4c
   1824e:	push   ebx
   1824f:	push   esi
   18250:	push   edi
   18251:	push   DWORD PTR [ebp+0xc]
   18254:	push   DWORD PTR [ebp+0x8]
   18257:	call   DWORD PTR ds:0x778f0
   1825d:	mov    DWORD PTR [ebp-0x8],eax
   18260:	xor    eax,eax
   18262:	xor    ebx,ebx
   18264:	mov    DWORD PTR [ebp-0x30],ebx
   18267:	lea    edi,[ebp-0x2c]
   1826a:	stos   DWORD PTR es:[edi],eax
   1826b:	stos   DWORD PTR es:[edi],eax
   1826c:	stos   DWORD PTR es:[edi],eax
   1826d:	stos   DWORD PTR es:[edi],eax
   1826e:	xor    eax,eax
   18270:	mov    DWORD PTR [ebp-0x1c],ebx
   18273:	lea    edi,[ebp-0x18]
   18276:	stos   DWORD PTR es:[edi],eax
   18277:	stos   DWORD PTR es:[edi],eax
   18278:	stos   DWORD PTR es:[edi],eax
   18279:	stos   DWORD PTR es:[edi],eax
   1827a:	lea    eax,[ebp-0x30]
   1827d:	push   eax
   1827e:	push   ebx
   1827f:	call   0x11ef4
   18284:	mov    BYTE PTR [ebp+0xf],al
   18287:	lea    eax,[ebp-0x1c]
   1828a:	push   eax
   1828b:	push   0x1
   1828d:	call   0x11ef4
   18292:	mov    BYTE PTR [ebp-0x1],al
   18295:	cmp    BYTE PTR [ebp+0xf],bl
   18298:	je     0x182f9
   1829a:	mov    esi,DWORD PTR [ebp-0x30]
   1829d:	cmp    esi,ebx
   1829f:	je     0x182f9
   182a1:	push   0x6
   182a3:	pop    ecx
   182a4:	push   ebx
   182a5:	xor    eax,eax
   182a7:	mov    DWORD PTR [ebp-0x4c],ebx
   182aa:	lea    edi,[ebp-0x48]
   182ad:	push   0x1c
   182af:	rep stos DWORD PTR es:[edi],eax
   182b1:	lea    eax,[ebp-0x4c]
   182b4:	push   eax
   182b5:	push   ebx
   182b6:	push   DWORD PTR [ebp+0x8]
   182b9:	call   0x1156e
   182be:	call   eax
   182c0:	cmp    DWORD PTR [ebp-0x44],esi
   182c3:	jne    0x182f9
   182c5:	push   ebx
   182c6:	push   0x4
   182c8:	lea    eax,[ebp+0xc]
   182cb:	push   eax
   182cc:	push   0x9
   182ce:	push   DWORD PTR [ebp+0x8]
   182d1:	mov    DWORD PTR [ebp+0xc],ebx
   182d4:	call   0x1156e
   182d9:	call   eax
   182db:	test   eax,eax
   182dd:	jge    0x182e2
   182df:	mov    DWORD PTR [ebp+0xc],ebx
   182e2:	cmp    DWORD PTR [ebp+0xc],ebx
   182e5:	je     0x182f9
   182e7:	lea    eax,[ebp-0x30]
   182ea:	push   eax
   182eb:	push   DWORD PTR [ebp+0xc]
   182ee:	call   0x17e66
   182f3:	push   ebx
   182f4:	call   0x11f8e
   182f9:	cmp    BYTE PTR [ebp-0x1],bl
   182fc:	je     0x18367
   182fe:	mov    esi,DWORD PTR [ebp-0x1c]
   18301:	cmp    esi,ebx
   18303:	je     0x18367
   18305:	cmp    BYTE PTR [ebp-0xc],bl
   18308:	jne    0x18367
   1830a:	push   0x6
   1830c:	pop    ecx
   1830d:	push   ebx
   1830e:	xor    eax,eax
   18310:	mov    DWORD PTR [ebp-0x4c],ebx
   18313:	lea    edi,[ebp-0x48]
   18316:	push   0x1c
   18318:	rep stos DWORD PTR es:[edi],eax
   1831a:	lea    eax,[ebp-0x4c]
   1831d:	push   eax
   1831e:	push   ebx
   1831f:	push   DWORD PTR [ebp+0x8]
   18322:	call   0x1156e
   18327:	call   eax
   18329:	cmp    DWORD PTR [ebp-0x44],esi
   1832c:	jne    0x18367
   1832e:	push   ebx
   1832f:	push   0x4
   18331:	lea    eax,[ebp+0xc]
   18334:	push   eax
   18335:	push   0x9
   18337:	push   DWORD PTR [ebp+0x8]
   1833a:	mov    DWORD PTR [ebp+0xc],ebx
   1833d:	call   0x1156e
   18342:	call   eax
   18344:	test   eax,eax
   18346:	jge    0x1834b
   18348:	mov    DWORD PTR [ebp+0xc],ebx
   1834b:	cmp    DWORD PTR [ebp+0xc],ebx
   1834e:	je     0x18367
   18350:	lea    eax,[ebp-0x1c]
   18353:	push   eax
   18354:	push   DWORD PTR [ebp+0xc]
   18357:	call   0x124cc
   1835c:	lea    eax,[ebp-0x1c]
   1835f:	push   eax
   18360:	push   0x1
   18362:	call   0x11f44
   18367:	mov    eax,DWORD PTR [ebp-0x8]
   1836a:	pop    edi
   1836b:	pop    esi
   1836c:	pop    ebx
   1836d:	leave  
   1836e:	ret    0x8
   18371:	int3   
   18372:	int3   
   18373:	int3   
   18374:	int3   
   18375:	int3   
   18376:	mov    edi,edi
   18378:	push   ebp
   18379:	mov    ebp,esp
   1837b:	sub    esp,0x40
   1837e:	push   ebx
   1837f:	mov    ebx,DWORD PTR [ebp+0x8]
   18382:	push   esi
   18383:	test   bl,0x20
   18386:	je     0x183c0
   18388:	push   DWORD PTR [ebp+0x24]
   1838b:	mov    esi,DWORD PTR ds:0x778e8
   18391:	push   DWORD PTR [ebp+0x20]
   18394:	lea    ecx,[ebp-0x40]
   18397:	push   DWORD PTR [ebp+0x1c]
   1839a:	push   DWORD PTR [ebp+0x18]
   1839d:	push   DWORD PTR [ebp+0x14]
   183a0:	push   DWORD PTR [ebp+0xc]
   183a3:	call   0x13baa
   183a8:	push   eax
   183a9:	push   DWORD PTR [ebp+0xc]
   183ac:	mov    ecx,esi
   183ae:	call   0x177d0
   183b3:	lea    ecx,[ebp-0x40]
   183b6:	call   0x13550
   183bb:	jmp    0x184ee
   183c0:	push   DWORD PTR [ebp+0xc]
   183c3:	mov    ecx,DWORD PTR ds:0x778e0
   183c9:	call   0x152aa
   183ce:	test   eax,eax
   183d0:	jne    0x183de
   183d2:	test   bl,0x1
   183d5:	jne    0x183de
   183d7:	xor    al,al
   183d9:	jmp    0x184f0
   183de:	push   DWORD PTR [ebp+0xc]
   183e1:	mov    ecx,DWORD PTR ds:0x778e0
   183e7:	call   0x16e76
   183ec:	mov    esi,eax
   183ee:	test   bl,0x1
   183f1:	je     0x18424
   183f3:	mov    eax,DWORD PTR [ebp+0x20]
   183f6:	push   DWORD PTR [ebp+0xc]
   183f9:	mov    ecx,esi
   183fb:	mov    DWORD PTR [esi+0x20],eax
   183fe:	call   0x12a44
   18403:	push   DWORD PTR [ebp+0x10]
   18406:	lea    ecx,[esi+0x8]
   18409:	call   0x12a44
   1840e:	push   DWORD PTR [ebp+0x14]
   18411:	lea    ecx,[esi+0x10]
   18414:	call   0x12a44
   18419:	push   DWORD PTR [ebp+0x18]
   1841c:	lea    ecx,[esi+0x18]
   1841f:	call   0x12a44
   18424:	mov    DWORD PTR [ebp+0x20],ebx
   18427:	and    DWORD PTR [ebp+0x20],0x2
   1842b:	je     0x1843b
   1842d:	mov    eax,DWORD PTR [ebp+0x24]
   18430:	mov    ecx,DWORD PTR [eax]
   18432:	mov    DWORD PTR [esi+0x28],ecx
   18435:	mov    eax,DWORD PTR [eax+0x4]
   18438:	mov    DWORD PTR [esi+0x2c],eax
   1843b:	mov    DWORD PTR [ebp+0x14],ebx
   1843e:	and    DWORD PTR [ebp+0x14],0x4
   18442:	je     0x18452
   18444:	mov    eax,DWORD PTR [ebp+0x28]
   18447:	mov    ecx,DWORD PTR [eax]
   18449:	mov    DWORD PTR [esi+0x30],ecx
   1844c:	mov    eax,DWORD PTR [eax+0x4]
   1844f:	mov    DWORD PTR [esi+0x34],eax
   18452:	test   bl,0x10
   18455:	je     0x184ee
   1845b:	cmp    DWORD PTR [esi+0xc],0x0
   1845f:	jbe    0x184ee
   18465:	mov    eax,ds:0x778e0
   1846a:	mov    eax,DWORD PTR [eax+0x4]
   1846d:	push   edi
   1846e:	mov    edi,DWORD PTR [eax]
   18470:	mov    DWORD PTR [ebp+0x18],edi
   18473:	cmp    edi,eax
   18475:	je     0x184ed
   18477:	push   DWORD PTR [ebp+0xc]
   1847a:	lea    ebx,[edi+0x10]
   1847d:	push   ebx
   1847e:	call   0x19f28
   18483:	test   al,al
   18485:	je     0x184d8
   18487:	lea    eax,[esi+0x8]
   1848a:	push   eax
   1848b:	add    edi,0x20
   1848e:	push   edi
   1848f:	call   0x19f18
   18494:	test   al,al
   18496:	je     0x184d8
   18498:	cmp    DWORD PTR [ebp+0x20],0x0
   1849c:	je     0x184b8
   1849e:	mov    ecx,DWORD PTR ds:0x778e0
   184a4:	push   ebx
   184a5:	call   0x16e76
   184aa:	mov    ecx,DWORD PTR [ebp+0x24]
   184ad:	mov    edx,DWORD PTR [ecx]
   184af:	mov    DWORD PTR [eax+0x28],edx
   184b2:	mov    ecx,DWORD PTR [ecx+0x4]
   184b5:	mov    DWORD PTR [eax+0x2c],ecx
   184b8:	cmp    DWORD PTR [ebp+0x14],0x0
   184bc:	je     0x184d8
   184be:	mov    ecx,DWORD PTR ds:0x778e0
   184c4:	push   ebx
   184c5:	call   0x16e76
   184ca:	mov    ecx,DWORD PTR [ebp+0x28]
   184cd:	mov    edx,DWORD PTR [ecx]
   184cf:	mov    DWORD PTR [eax+0x30],edx
   184d2:	mov    ecx,DWORD PTR [ecx+0x4]
   184d5:	mov    DWORD PTR [eax+0x34],ecx
   184d8:	lea    ecx,[ebp+0x18]
   184db:	call   0x137a2
   184e0:	mov    edi,DWORD PTR [ebp+0x18]
   184e3:	mov    eax,ds:0x778e0
   184e8:	cmp    edi,DWORD PTR [eax+0x4]
   184eb:	jne    0x18477
   184ed:	pop    edi
   184ee:	mov    al,0x1
   184f0:	pop    esi
   184f1:	pop    ebx
   184f2:	leave  
   184f3:	ret    0x24
   184f6:	int3   
   184f7:	int3   
   184f8:	int3   
   184f9:	int3   
   184fa:	int3   
   184fb:	int3   
   184fc:	push   0x40
   184fe:	push   0x76b48
   18503:	call   0x1e1dc
   18508:	xor    esi,esi
   1850a:	push   esi
   1850b:	push   esi
   1850c:	push   esi
   1850d:	push   esi
   1850e:	push   0x76f58
   18513:	call   0x11a5a
   18518:	call   eax
   1851a:	cmp    eax,esi
   1851c:	jge    0x1852d
   1851e:	mov    eax,DWORD PTR [ebp+0x8]
   18521:	mov    DWORD PTR [eax+0x8],0x4
   18528:	jmp    0x18631
   1852d:	mov    DWORD PTR [ebp-0x4],esi
   18530:	or     ebx,0xffffffff
   18533:	push   ebx
   18534:	mov    esi,DWORD PTR [ebp+0x8]
   18537:	lea    eax,[esi+0x20]
   1853a:	push   eax
   1853b:	lea    ecx,[ebp-0x38]
   1853e:	call   0x1367e
   18543:	mov    edi,DWORD PTR [ebp-0x34]
   18546:	inc    edi
   18547:	push   ebx
   18548:	lea    eax,[edi+esi*1+0x20]
   1854c:	push   eax
   1854d:	lea    ecx,[ebp-0x30]
   18550:	call   0x1367e
   18555:	mov    eax,DWORD PTR [ebp-0x2c]
   18558:	lea    edi,[edi+eax*1+0x1]
   1855c:	push   ebx
   1855d:	lea    eax,[edi+esi*1+0x20]
   18561:	push   eax
   18562:	lea    ecx,[ebp-0x28]
   18565:	call   0x1367e
   1856a:	mov    eax,DWORD PTR [ebp-0x24]
   1856d:	lea    edi,[edi+eax*1+0x1]
   18571:	push   ebx
   18572:	lea    eax,[edi+esi*1+0x20]
   18576:	push   eax
   18577:	lea    ecx,[ebp-0x20]
   1857a:	call   0x1367e
   1857f:	mov    eax,DWORD PTR [ebp-0x1c]
   18582:	lea    eax,[edi+eax*1+0x1]
   18586:	push   ebx
   18587:	lea    eax,[eax+esi*1+0x20]
   1858b:	push   eax
   1858c:	lea    ecx,[ebp-0x50]
   1858f:	call   0x1367e
   18594:	mov    eax,DWORD PTR [esi+0xc]
   18597:	mov    ecx,DWORD PTR [esi+0x10]
   1859a:	mov    DWORD PTR [ebp-0x48],ecx
   1859d:	mov    ecx,DWORD PTR [esi+0x14]
   185a0:	mov    DWORD PTR [ebp-0x44],ecx
   185a3:	mov    ecx,DWORD PTR [esi+0x18]
   185a6:	mov    DWORD PTR [ebp-0x40],ecx
   185a9:	mov    ecx,DWORD PTR [esi+0x1c]
   185ac:	mov    DWORD PTR [ebp-0x3c],ecx
   185af:	lea    ecx,[ebp-0x40]
   185b2:	push   ecx
   185b3:	lea    ecx,[ebp-0x48]
   185b6:	push   ecx
   185b7:	push   eax
   185b8:	lea    eax,[ebp-0x50]
   185bb:	push   eax
   185bc:	lea    eax,[ebp-0x20]
   185bf:	push   eax
   185c0:	lea    eax,[ebp-0x28]
   185c3:	push   eax
   185c4:	lea    eax,[ebp-0x30]
   185c7:	push   eax
   185c8:	lea    eax,[ebp-0x38]
   185cb:	push   eax
   185cc:	push   DWORD PTR [esi+0x4]
   185cf:	call   0x18376
   185d4:	xor    ecx,ecx
   185d6:	test   al,al
   185d8:	sete   cl
   185db:	mov    DWORD PTR [esi+0x8],ecx
   185de:	push   DWORD PTR [ebp-0x50]
   185e1:	call   0x11d3e
   185e6:	push   DWORD PTR [ebp-0x20]
   185e9:	call   0x11d3e
   185ee:	push   DWORD PTR [ebp-0x28]
   185f1:	call   0x11d3e
   185f6:	push   DWORD PTR [ebp-0x30]
   185f9:	call   0x11d3e
   185fe:	push   DWORD PTR [ebp-0x38]
   18601:	call   0x11d3e
   18606:	add    esp,0x14
   18609:	jmp    0x1861c
   1860b:	xor    eax,eax
   1860d:	inc    eax
   1860e:	ret    
   1860f:	mov    esp,DWORD PTR [ebp-0x18]
   18612:	mov    eax,DWORD PTR [ebp+0x8]
   18615:	mov    DWORD PTR [eax+0x8],0x4
   1861c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18623:	push   0x0
   18625:	push   0x76f58
   1862a:	call   0x11a84
   1862f:	call   eax
   18631:	call   0x1e221
   18636:	ret    0x4
   18639:	int3   
   1863a:	int3   
   1863b:	int3   
   1863c:	int3   
   1863d:	int3   
   1863e:	push   0x2c
   18640:	push   0x76b68
   18645:	call   0x1e1dc
   1864a:	xor    edi,edi
   1864c:	mov    DWORD PTR [ebp-0x24],edi
   1864f:	mov    ebx,DWORD PTR [ebp+0xc]
   18652:	mov    DWORD PTR [ebx+0x18],edi
   18655:	mov    DWORD PTR [ebx+0x1c],edi
   18658:	mov    eax,DWORD PTR [ebx+0x60]
   1865b:	cmp    BYTE PTR [eax],0xe
   1865e:	jne    0x18b14
   18664:	mov    eax,DWORD PTR [eax+0xc]
   18667:	mov    DWORD PTR [ebx+0x1c],0x84c
   1866e:	mov    ecx,0x22c068
   18673:	cmp    eax,ecx
   18675:	ja     0x189c5
   1867b:	je     0x189b6
   18681:	add    ecx,0xffffffd0
   18684:	cmp    eax,ecx
   18686:	ja     0x187b7
   1868c:	je     0x1879e
   18692:	sub    eax,0x22c020
   18697:	je     0x18768
   1869d:	push   0x4
   1869f:	pop    esi
   186a0:	sub    eax,esi
   186a2:	je     0x18732
   186a8:	sub    eax,esi
   186aa:	je     0x18717
   186ac:	sub    eax,esi
   186ae:	je     0x1870a
   186b0:	sub    eax,esi
   186b2:	je     0x186d9
   186b4:	sub    eax,esi
   186b6:	jne    0x18ab4
   186bc:	mov    esi,DWORD PTR [ebx+0xc]
   186bf:	push   esi
   186c0:	call   0x17180
   186c5:	cmp    DWORD PTR [esi+0x4],0x2
   186c9:	jne    0x18b11
   186cf:	call   0x17574
   186d4:	jmp    0x18b11
   186d9:	mov    esi,DWORD PTR [ebx+0xc]
   186dc:	mov    eax,DWORD PTR [esi]
   186de:	add    eax,0x20
   186e1:	mov    DWORD PTR [ebx+0x1c],eax
   186e4:	push   0xffffffff
   186e6:	lea    eax,[esi+0x20]
   186e9:	push   eax
   186ea:	lea    ecx,[ebp-0x34]
   186ed:	call   0x12ba8
   186f2:	push   esi
   186f3:	lea    eax,[ebp-0x34]
   186f6:	push   eax
   186f7:	call   0x164f8
   186fc:	push   DWORD PTR [ebp-0x34]
   186ff:	call   0x11d3e
   18704:	pop    ecx
   18705:	jmp    0x18b14
   1870a:	push   DWORD PTR [ebx+0xc]
   1870d:	call   0x184fc
   18712:	jmp    0x18b11
   18717:	mov    ecx,DWORD PTR ds:0x778e0
   1871d:	call   0x16d12
   18722:	mov    ecx,DWORD PTR ds:0x76fb4
   18728:	call   0x16dce
   1872d:	jmp    0x18b14
   18732:	mov    eax,DWORD PTR [ebx+0xc]
   18735:	mov    DWORD PTR [ebx+0x1c],0x10
   1873c:	mov    ecx,DWORD PTR [eax]
   1873e:	cmp    ecx,edi
   18740:	jl     0x18b14
   18746:	cmp    ecx,0x6
   18749:	jge    0x18b14
   1874f:	mov    edx,DWORD PTR [eax+0x8]
   18752:	mov    DWORD PTR [ecx*8+0x77930],edx
   18759:	mov    eax,DWORD PTR [eax+0xc]
   1875c:	mov    DWORD PTR [ecx*8+0x77934],eax
   18763:	jmp    0x18b14
   18768:	mov    eax,DWORD PTR [ebx+0xc]
   1876b:	mov    DWORD PTR [ebx+0x1c],0x10
   18772:	mov    ecx,DWORD PTR [eax]
   18774:	cmp    ecx,edi
   18776:	jl     0x18b14
   1877c:	cmp    ecx,0x6
   1877f:	jge    0x18b14
   18785:	mov    edx,DWORD PTR [ecx*8+0x77930]
   1878c:	mov    DWORD PTR [eax+0x8],edx
   1878f:	mov    ecx,DWORD PTR [ecx*8+0x77934]
   18796:	mov    DWORD PTR [eax+0xc],ecx
   18799:	jmp    0x18b14
   1879e:	mov    eax,DWORD PTR [ebx+0xc]
   187a1:	mov    ecx,DWORD PTR [eax]
   187a3:	add    ecx,0xc
   187a6:	mov    DWORD PTR [ebx+0x1c],ecx
   187a9:	push   eax
   187aa:	push   DWORD PTR [eax+0x4]
   187ad:	call   0x1513c
   187b2:	jmp    0x18b14
   187b7:	sub    eax,0x22c03c
   187bc:	je     0x18932
   187c2:	sub    eax,0x10
   187c5:	je     0x18928
   187cb:	push   0x4
   187cd:	pop    esi
   187ce:	sub    eax,esi
   187d0:	je     0x18826
   187d2:	sub    eax,0xc
   187d5:	je     0x1880e
   187d7:	sub    eax,esi
   187d9:	je     0x187f0
   187db:	sub    eax,esi
   187dd:	jne    0x18ab4
   187e3:	push   DWORD PTR [ebx+0xc]
   187e6:	call   0x12878
   187eb:	jmp    0x18b11
   187f0:	mov    DWORD PTR [ebx+0x1c],0x8
   187f7:	mov    ebx,DWORD PTR [ebx+0xc]
   187fa:	mov    eax,ds:0x77914
   187ff:	mov    DWORD PTR [ebx],eax
   18801:	mov    eax,ds:0x77918
   18806:	mov    DWORD PTR [ebx+0x4],eax
   18809:	jmp    0x18b14
   1880e:	mov    eax,DWORD PTR [ebx+0xc]
   18811:	mov    ecx,DWORD PTR [eax]
   18813:	mov    DWORD PTR ds:0x77914,ecx
   18819:	mov    eax,DWORD PTR [eax+0x4]
   1881c:	mov    ds:0x77918,eax
   18821:	jmp    0x18b11
   18826:	mov    DWORD PTR [ebx+0x1c],edi
   18829:	mov    esi,DWORD PTR [ebx+0xc]
   1882c:	mov    DWORD PTR [ebp-0x20],esi
   1882f:	push   0xffffffff
   18831:	push   0x1e5e8
   18836:	lea    ecx,[ebp-0x2c]
   18839:	call   0x12ba8
   1883e:	xor    edi,edi
   18840:	inc    edi
   18841:	mov    DWORD PTR [esi+0x8],edi
   18844:	xor    eax,eax
   18846:	push   eax
   18847:	push   eax
   18848:	push   eax
   18849:	push   eax
   1884a:	push   0x76f58
   1884f:	call   0x11a5a
   18854:	call   eax
   18856:	test   eax,eax
   18858:	jge    0x18862
   1885a:	push   DWORD PTR [ebp-0x2c]
   1885d:	jmp    0x186ff
   18862:	and    DWORD PTR [ebp-0x4],0x0
   18866:	mov    DWORD PTR [ebp-0x4],edi
   18869:	mov    eax,DWORD PTR [esi]
   1886b:	add    eax,0x20
   1886e:	mov    DWORD PTR [ebx+0x1c],eax
   18871:	mov    eax,ds:0x778e0
   18876:	mov    ebx,DWORD PTR [eax+0x4]
   18879:	mov    eax,DWORD PTR [ebx]
   1887b:	mov    DWORD PTR [ebp+0xc],eax
   1887e:	and    DWORD PTR [ebp-0x1c],0x0
   18882:	mov    edi,DWORD PTR [esi+0x20]
   18885:	cmp    DWORD PTR [ebp-0x1c],edi
   18888:	jge    0x1889c
   1888a:	cmp    DWORD PTR [ebp+0xc],ebx
   1888d:	je     0x1889c
   1888f:	lea    ecx,[ebp+0xc]
   18892:	call   0x137a2
   18897:	inc    DWORD PTR [ebp-0x1c]
   1889a:	jmp    0x18885
   1889c:	mov    eax,DWORD PTR [ebp+0xc]
   1889f:	cmp    eax,ebx
   188a1:	je     0x188b5
   188a3:	and    DWORD PTR [esi+0x8],0x0
   188a7:	add    eax,0x10
   188aa:	push   eax
   188ab:	lea    ecx,[ebp-0x2c]
   188ae:	call   0x12a44
   188b3:	jmp    0x188bc
   188b5:	mov    DWORD PTR [esi+0x8],0x1
   188bc:	and    DWORD PTR [esi+0x4],0x0
   188c0:	and    DWORD PTR [ebp-0x4],0x0
   188c4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   188cb:	call   0x18919
   188d0:	cmp    DWORD PTR [esi+0x8],0x0
   188d4:	jne    0x1885a
   188d6:	push   esi
   188d7:	lea    eax,[ebp-0x2c]
   188da:	push   eax
   188db:	call   0x164f8
   188e0:	jmp    0x1885a
   188e5:	xor    eax,eax
   188e7:	inc    eax
   188e8:	ret    
   188e9:	mov    esp,DWORD PTR [ebp-0x18]
   188ec:	mov    eax,DWORD PTR [ebp-0x20]
   188ef:	mov    DWORD PTR [eax+0x8],0x4
   188f6:	push   DWORD PTR [ebp-0x2c]
   188f9:	call   0x11d3e
   188fe:	push   0xfffffffe
   18900:	lea    eax,[ebp-0x10]
   18903:	push   eax
   18904:	push   0x76f1c
   18909:	call   0x1e39c
   1890e:	add    esp,0x10
   18911:	jmp    0x18b14
   18916:	mov    esi,DWORD PTR [ebp-0x20]
   18919:	push   0x0
   1891b:	push   0x76f58
   18920:	call   0x11a84
   18925:	call   eax
   18927:	ret    
   18928:	call   0x123a2
   1892d:	jmp    0x18b14
   18932:	mov    eax,DWORD PTR [ebx+0xc]
   18935:	mov    ecx,DWORD PTR ds:0x76e04
   1893b:	mov    esi,eax
   1893d:	sub    esi,ecx
   1893f:	push   0x2
   18941:	pop    edi
   18942:	movzx  edx,WORD PTR [ecx]
   18945:	mov    WORD PTR [esi+ecx*1],dx
   18949:	add    ecx,edi
   1894b:	test   dx,dx
   1894e:	jne    0x18942
   18950:	mov    ecx,0x76e48
   18955:	lea    esi,[eax+0x50]
   18958:	sub    esi,ecx
   1895a:	movzx  edx,WORD PTR [ecx]
   1895d:	mov    WORD PTR [esi+ecx*1],dx
   18961:	add    ecx,edi
   18963:	test   dx,dx
   18966:	jne    0x1895a
   18968:	mov    ecx,0x76e08
   1896d:	lea    esi,[eax+0x90]
   18973:	sub    esi,ecx
   18975:	movzx  edx,WORD PTR [ecx]
   18978:	mov    WORD PTR [esi+ecx*1],dx
   1897c:	add    ecx,edi
   1897e:	test   dx,dx
   18981:	jne    0x18975
   18983:	mov    ecx,0x76e88
   18988:	lea    esi,[eax+0xd0]
   1898e:	sub    esi,ecx
   18990:	movzx  edx,WORD PTR [ecx]
   18993:	mov    WORD PTR [esi+ecx*1],dx
   18997:	add    ecx,edi
   18999:	test   dx,dx
   1899c:	jne    0x18990
   1899e:	lea    edi,[eax+0x40]
   189a1:	mov    esi,0x72e40
   189a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   189a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   189a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   189a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   189aa:	mov    DWORD PTR [ebx+0x1c],0x110
   189b1:	jmp    0x18b14
   189b6:	mov    eax,DWORD PTR [ebx+0xc]
   189b9:	push   DWORD PTR [eax]
   189bb:	call   0x12988
   189c0:	jmp    0x18b11
   189c5:	mov    ecx,0x22c088
   189ca:	cmp    eax,ecx
   189cc:	ja     0x18a96
   189d2:	je     0x18a6b
   189d8:	sub    eax,0x22c06c
   189dd:	je     0x18a53
   189df:	push   0x4
   189e1:	pop    esi
   189e2:	sub    eax,esi
   189e4:	je     0x18a46
   189e6:	push   0x8
   189e8:	pop    ecx
   189e9:	sub    eax,ecx
   189eb:	je     0x18a39
   189ed:	sub    eax,esi
   189ef:	je     0x18a21
   189f1:	sub    eax,esi
   189f3:	je     0x18a0a
   189f5:	sub    eax,esi
   189f7:	jne    0x18ab4
   189fd:	push   DWORD PTR [ebx+0xc]
   18a00:	call   0x17088
   18a05:	jmp    0x18b11
   18a0a:	mov    DWORD PTR [ebx+0x1c],ecx
   18a0d:	mov    ebx,DWORD PTR [ebx+0xc]
   18a10:	mov    eax,ds:0x7791c
   18a15:	mov    DWORD PTR [ebx],eax
   18a17:	mov    eax,ds:0x77920
   18a1c:	jmp    0x18806
   18a21:	mov    eax,DWORD PTR [ebx+0xc]
   18a24:	mov    ecx,DWORD PTR [eax]
   18a26:	mov    DWORD PTR ds:0x7791c,ecx
   18a2c:	mov    eax,DWORD PTR [eax+0x4]
   18a2f:	mov    ds:0x77920,eax
   18a34:	jmp    0x18b11
   18a39:	push   DWORD PTR [ebx+0xc]
   18a3c:	call   0x17b84
   18a41:	jmp    0x18b11
   18a46:	push   DWORD PTR [ebx+0xc]
   18a49:	call   0x120c8
   18a4e:	jmp    0x18b11
   18a53:	mov    esi,DWORD PTR [ebx+0xc]
   18a56:	push   DWORD PTR [esi]
   18a58:	call   0x129ce
   18a5d:	mov    DWORD PTR [esi],eax
   18a5f:	mov    DWORD PTR [ebx+0x1c],0x4
   18a66:	jmp    0x18b14
   18a6b:	mov    esi,DWORD PTR [ebx+0xc]
   18a6e:	mov    eax,DWORD PTR [esi]
   18a70:	add    eax,0xc
   18a73:	mov    DWORD PTR [ebx+0x1c],eax
   18a76:	push   0xffffffff
   18a78:	lea    eax,[esi+0xc]
   18a7b:	push   eax
   18a7c:	lea    ecx,[ebp-0x3c]
   18a7f:	call   0x12ba8
   18a84:	push   esi
   18a85:	lea    eax,[ebp-0x3c]
   18a88:	push   eax
   18a89:	call   0x15050
   18a8e:	push   DWORD PTR [ebp-0x3c]
   18a91:	jmp    0x186ff
   18a96:	sub    eax,0x22c08c
   18a9b:	je     0x18b03
   18a9d:	push   0x4
   18a9f:	pop    esi
   18aa0:	sub    eax,esi
   18aa2:	je     0x18aef
   18aa4:	sub    eax,esi
   18aa6:	je     0x18ae8
   18aa8:	sub    eax,esi
   18aaa:	je     0x18ad4
   18aac:	sub    eax,esi
   18aae:	je     0x18aca
   18ab0:	sub    eax,esi
   18ab2:	je     0x18abd
   18ab4:	mov    DWORD PTR [ebp-0x24],0xc0000010
   18abb:	jmp    0x18b11
   18abd:	push   DWORD PTR [ebx+0xc]
   18ac0:	call   0x1b186
   18ac5:	mov    DWORD PTR [ebx+0x1c],esi
   18ac8:	jmp    0x18b14
   18aca:	push   DWORD PTR [ebx+0xc]
   18acd:	call   0x1bc0c
   18ad2:	jmp    0x18b11
   18ad4:	mov    eax,DWORD PTR [ebx+0xc]
   18ad7:	mov    ecx,DWORD PTR [eax+0x4]
   18ada:	add    ecx,0x8
   18add:	mov    DWORD PTR [ebx+0x1c],ecx
   18ae0:	push   eax
   18ae1:	call   0x1beda
   18ae6:	jmp    0x18b14
   18ae8:	call   0x1bb1c
   18aed:	jmp    0x18b11
   18aef:	mov    eax,DWORD PTR [ebx+0xc]
   18af2:	mov    ecx,DWORD PTR [eax+0x4]
   18af5:	add    ecx,0x8
   18af8:	mov    DWORD PTR [ebx+0x1c],ecx
   18afb:	push   eax
   18afc:	call   0x1af42
   18b01:	jmp    0x18b14
   18b03:	push   DWORD PTR [ebx+0xc]
   18b06:	call   0x12a18
   18b0b:	push   eax
   18b0c:	call   0x1bd3e
   18b11:	mov    DWORD PTR [ebx+0x1c],edi
   18b14:	mov    eax,DWORD PTR [ebp-0x24]
   18b17:	call   0x1e221
   18b1c:	ret    0x8
   18b1f:	int3   
   18b20:	int3   
   18b21:	int3   
   18b22:	int3   
   18b23:	int3   
   18b24:	push   0x848
   18b29:	push   0x76b90
   18b2e:	call   0x1e4e0
   18b33:	xor    ebx,ebx
   18b35:	mov    BYTE PTR [ebp-0x81d],bl
   18b3b:	xor    eax,eax
   18b3d:	mov    WORD PTR [ebp-0x81c],ax
   18b44:	push   0x7fe
   18b49:	push   ebx
   18b4a:	lea    eax,[ebp-0x81a]
   18b50:	push   eax
   18b51:	call   0x1e19e
   18b56:	add    esp,0xc
   18b59:	push   0x1f086
   18b5e:	push   0x15
   18b60:	push   0x1f05a
   18b65:	call   0x1799e
   18b6a:	mov    edx,eax
   18b6c:	mov    cx,WORD PTR [eax]
   18b6f:	inc    eax
   18b70:	inc    eax
   18b71:	cmp    cx,bx
   18b74:	jne    0x18b6c
   18b76:	sub    eax,edx
   18b78:	lea    edi,[ebp-0x81c]
   18b7e:	dec    edi
   18b7f:	dec    edi
   18b80:	mov    cx,WORD PTR [edi+0x2]
   18b84:	inc    edi
   18b85:	inc    edi
   18b86:	cmp    cx,bx
   18b89:	jne    0x18b80
   18b8b:	mov    ecx,eax
   18b8d:	mov    esi,edx
   18b8f:	shr    ecx,0x2
   18b92:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18b94:	mov    ecx,eax
   18b96:	and    ecx,0x3
   18b99:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18b9b:	mov    eax,0x76e08
   18ba0:	mov    edx,eax
   18ba2:	mov    cx,WORD PTR [eax]
   18ba5:	inc    eax
   18ba6:	inc    eax
   18ba7:	cmp    cx,bx
   18baa:	jne    0x18ba2
   18bac:	sub    eax,edx
   18bae:	lea    edi,[ebp-0x81c]
   18bb4:	dec    edi
   18bb5:	dec    edi
   18bb6:	mov    cx,WORD PTR [edi+0x2]
   18bba:	inc    edi
   18bbb:	inc    edi
   18bbc:	cmp    cx,bx
   18bbf:	jne    0x18bb6
   18bc1:	mov    ecx,eax
   18bc3:	mov    esi,edx
   18bc5:	shr    ecx,0x2
   18bc8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18bca:	mov    ecx,eax
   18bcc:	and    ecx,0x3
   18bcf:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18bd1:	push   0x1f024
   18bd6:	push   0x4
   18bd8:	push   0x1ee2e
   18bdd:	call   0x1799e
   18be2:	mov    edx,eax
   18be4:	mov    cx,WORD PTR [eax]
   18be7:	inc    eax
   18be8:	inc    eax
   18be9:	cmp    cx,bx
   18bec:	jne    0x18be4
   18bee:	sub    eax,edx
   18bf0:	lea    edi,[ebp-0x81c]
   18bf6:	dec    edi
   18bf7:	dec    edi
   18bf8:	mov    cx,WORD PTR [edi+0x2]
   18bfc:	inc    edi
   18bfd:	inc    edi
   18bfe:	cmp    cx,bx
   18c01:	jne    0x18bf8
   18c03:	mov    ecx,eax
   18c05:	mov    esi,edx
   18c07:	shr    ecx,0x2
   18c0a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18c0c:	mov    ecx,eax
   18c0e:	and    ecx,0x3
   18c11:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18c13:	lea    eax,[ebp-0x81c]
   18c19:	push   eax
   18c1a:	lea    eax,[ebp-0x858]
   18c20:	push   eax
   18c21:	call   0x115c2
   18c26:	call   eax
   18c28:	mov    DWORD PTR [ebp-0x824],ebx
   18c2e:	xor    eax,eax
   18c30:	lea    edi,[ebp-0x84c]
   18c36:	stos   DWORD PTR es:[edi],eax
   18c37:	stos   DWORD PTR es:[edi],eax
   18c38:	stos   DWORD PTR es:[edi],eax
   18c39:	stos   DWORD PTR es:[edi],eax
   18c3a:	stos   DWORD PTR es:[edi],eax
   18c3b:	mov    DWORD PTR [ebp-0x830],ebx
   18c41:	xor    eax,eax
   18c43:	lea    edi,[ebp-0x82c]
   18c49:	stos   DWORD PTR es:[edi],eax
   18c4a:	mov    DWORD PTR [ebp-0x850],0x18
   18c54:	mov    DWORD PTR [ebp-0x84c],ebx
   18c5a:	mov    DWORD PTR [ebp-0x844],0x240
   18c64:	lea    eax,[ebp-0x858]
   18c6a:	mov    DWORD PTR [ebp-0x848],eax
   18c70:	mov    DWORD PTR [ebp-0x840],ebx
   18c76:	mov    DWORD PTR [ebp-0x83c],ebx
   18c7c:	push   ebx
   18c7d:	push   ebx
   18c7e:	push   0x60
   18c80:	push   0x1
   18c82:	push   ebx
   18c83:	push   0x80
   18c88:	push   ebx
   18c89:	lea    eax,[ebp-0x830]
   18c8f:	push   eax
   18c90:	lea    eax,[ebp-0x850]
   18c96:	push   eax
   18c97:	push   0x100001
   18c9c:	lea    eax,[ebp-0x824]
   18ca2:	push   eax
   18ca3:	call   0x1149c
   18ca8:	call   eax
   18caa:	cmp    eax,ebx
   18cac:	jge    0x18cb5
   18cae:	xor    al,al
   18cb0:	jmp    0x18d4b
   18cb5:	mov    DWORD PTR [ebp-0x4],ebx
   18cb8:	mov    esi,DWORD PTR [ebp+0xc]
   18cbb:	mov    eax,0x10000
   18cc0:	cmp    esi,eax
   18cc2:	jbe    0x18cc6
   18cc4:	mov    esi,eax
   18cc6:	push   esi
   18cc7:	call   0x11d08
   18ccc:	pop    ecx
   18ccd:	mov    DWORD PTR [ebp-0x828],eax
   18cd3:	mov    DWORD PTR [ebp-0x838],ebx
   18cd9:	xor    eax,eax
   18cdb:	lea    edi,[ebp-0x834]
   18ce1:	stos   DWORD PTR es:[edi],eax
   18ce2:	push   ebx
   18ce3:	lea    eax,[ebp-0x838]
   18ce9:	push   eax
   18cea:	push   esi
   18ceb:	push   DWORD PTR [ebp-0x828]
   18cf1:	lea    eax,[ebp-0x830]
   18cf7:	push   eax
   18cf8:	push   ebx
   18cf9:	push   ebx
   18cfa:	push   ebx
   18cfb:	push   DWORD PTR [ebp-0x824]
   18d01:	call   0x11838
   18d06:	call   eax
   18d08:	cmp    eax,ebx
   18d0a:	jl     0x18d31
   18d0c:	mov    ecx,DWORD PTR [ebp-0x82c]
   18d12:	mov    edi,DWORD PTR [ebp+0x8]
   18d15:	mov    esi,DWORD PTR [ebp-0x828]
   18d1b:	xor    eax,eax
   18d1d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   18d1f:	sete   al
   18d22:	mov    BYTE PTR [ebp-0x81d],al
   18d28:	jmp    0x18d31
   18d2a:	xor    eax,eax
   18d2c:	inc    eax
   18d2d:	ret    
   18d2e:	mov    esp,DWORD PTR [ebp-0x18]
   18d31:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18d38:	push   DWORD PTR [ebp-0x824]
   18d3e:	call   0x11598
   18d43:	call   eax
   18d45:	mov    al,BYTE PTR [ebp-0x81d]
   18d4b:	call   0x1e528
   18d50:	ret    0x8
   18d53:	int3   
   18d54:	int3   
   18d55:	int3   
   18d56:	int3   
   18d57:	int3   
   18d58:	push   0x874
   18d5d:	push   0x76bb0
   18d62:	call   0x1e4e0
   18d67:	mov    eax,DWORD PTR [ebp+0x8]
   18d6a:	mov    DWORD PTR [ebp-0x830],eax
   18d70:	xor    ebx,ebx
   18d72:	mov    BYTE PTR [ebp-0x81d],bl
   18d78:	xor    eax,eax
   18d7a:	mov    WORD PTR [ebp-0x81c],ax
   18d81:	push   0x7fe
   18d86:	push   ebx
   18d87:	lea    eax,[ebp-0x81a]
   18d8d:	push   eax
   18d8e:	call   0x1e19e
   18d93:	add    esp,0xc
   18d96:	push   0x1f0ea
   18d9b:	push   0x15
   18d9d:	push   0x1f05a
   18da2:	call   0x1799e
   18da7:	mov    edx,eax
   18da9:	mov    cx,WORD PTR [eax]
   18dac:	inc    eax
   18dad:	inc    eax
   18dae:	cmp    cx,bx
   18db1:	jne    0x18da9
   18db3:	sub    eax,edx
   18db5:	lea    edi,[ebp-0x81c]
   18dbb:	dec    edi
   18dbc:	dec    edi
   18dbd:	mov    cx,WORD PTR [edi+0x2]
   18dc1:	inc    edi
   18dc2:	inc    edi
   18dc3:	cmp    cx,bx
   18dc6:	jne    0x18dbd
   18dc8:	mov    ecx,eax
   18dca:	mov    esi,edx
   18dcc:	shr    ecx,0x2
   18dcf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18dd1:	mov    ecx,eax
   18dd3:	and    ecx,0x3
   18dd6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18dd8:	mov    eax,0x76e08
   18ddd:	mov    edx,eax
   18ddf:	mov    cx,WORD PTR [eax]
   18de2:	inc    eax
   18de3:	inc    eax
   18de4:	cmp    cx,bx
   18de7:	jne    0x18ddf
   18de9:	sub    eax,edx
   18deb:	lea    edi,[ebp-0x81c]
   18df1:	dec    edi
   18df2:	dec    edi
   18df3:	mov    cx,WORD PTR [edi+0x2]
   18df7:	inc    edi
   18df8:	inc    edi
   18df9:	cmp    cx,bx
   18dfc:	jne    0x18df3
   18dfe:	mov    ecx,eax
   18e00:	mov    esi,edx
   18e02:	shr    ecx,0x2
   18e05:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e07:	mov    ecx,eax
   18e09:	and    ecx,0x3
   18e0c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18e0e:	push   0x1f0c0
   18e13:	push   0x4
   18e15:	push   0x1ee2e
   18e1a:	call   0x1799e
   18e1f:	mov    edx,eax
   18e21:	mov    cx,WORD PTR [eax]
   18e24:	inc    eax
   18e25:	inc    eax
   18e26:	cmp    cx,bx
   18e29:	jne    0x18e21
   18e2b:	sub    eax,edx
   18e2d:	lea    edi,[ebp-0x81c]
   18e33:	dec    edi
   18e34:	dec    edi
   18e35:	mov    cx,WORD PTR [edi+0x2]
   18e39:	inc    edi
   18e3a:	inc    edi
   18e3b:	cmp    cx,bx
   18e3e:	jne    0x18e35
   18e40:	mov    ecx,eax
   18e42:	mov    esi,edx
   18e44:	shr    ecx,0x2
   18e47:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e49:	mov    ecx,eax
   18e4b:	and    ecx,0x3
   18e4e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18e50:	lea    eax,[ebp-0x81c]
   18e56:	push   eax
   18e57:	lea    eax,[ebp-0x884]
   18e5d:	push   eax
   18e5e:	call   0x115c2
   18e63:	call   eax
   18e65:	mov    DWORD PTR [ebp-0x824],ebx
   18e6b:	xor    eax,eax
   18e6d:	lea    edi,[ebp-0x850]
   18e73:	stos   DWORD PTR es:[edi],eax
   18e74:	stos   DWORD PTR es:[edi],eax
   18e75:	stos   DWORD PTR es:[edi],eax
   18e76:	stos   DWORD PTR es:[edi],eax
   18e77:	stos   DWORD PTR es:[edi],eax
   18e78:	mov    DWORD PTR [ebp-0x82c],ebx
   18e7e:	xor    eax,eax
   18e80:	lea    edi,[ebp-0x828]
   18e86:	stos   DWORD PTR es:[edi],eax
   18e87:	mov    DWORD PTR [ebp-0x854],0x18
   18e91:	mov    DWORD PTR [ebp-0x850],ebx
   18e97:	mov    DWORD PTR [ebp-0x848],0x240
   18ea1:	lea    eax,[ebp-0x884]
   18ea7:	mov    DWORD PTR [ebp-0x84c],eax
   18ead:	mov    DWORD PTR [ebp-0x844],ebx
   18eb3:	mov    DWORD PTR [ebp-0x840],ebx
   18eb9:	push   ebx
   18eba:	push   ebx
   18ebb:	push   0x60
   18ebd:	push   ebx
   18ebe:	push   ebx
   18ebf:	push   0x80
   18ec4:	push   ebx
   18ec5:	lea    eax,[ebp-0x82c]
   18ecb:	push   eax
   18ecc:	lea    eax,[ebp-0x854]
   18ed2:	push   eax
   18ed3:	push   0x100002
   18ed8:	lea    eax,[ebp-0x824]
   18ede:	push   eax
   18edf:	call   0x1149c
   18ee4:	call   eax
   18ee6:	cmp    eax,ebx
   18ee8:	jge    0x18ef1
   18eea:	xor    al,al
   18eec:	jmp    0x18ff7
   18ef1:	mov    DWORD PTR [ebp-0x4],ebx
   18ef4:	xor    eax,eax
   18ef6:	lea    edi,[ebp-0x82c]
   18efc:	stos   DWORD PTR es:[edi],eax
   18efd:	stos   DWORD PTR es:[edi],eax
   18efe:	xor    edi,edi
   18f00:	mov    esi,0x10000
   18f05:	mov    DWORD PTR [ebp-0x834],edi
   18f0b:	mov    eax,DWORD PTR [ebp+0xc]
   18f0e:	cmp    edi,eax
   18f10:	jae    0x18f5b
   18f12:	mov    DWORD PTR [ebp-0x83c],ebx
   18f18:	mov    DWORD PTR [ebp-0x83c],edi
   18f1e:	mov    DWORD PTR [ebp-0x838],ebx
   18f24:	sub    eax,edi
   18f26:	cmp    eax,esi
   18f28:	jb     0x18f2c
   18f2a:	mov    eax,esi
   18f2c:	push   ebx
   18f2d:	push   ebx
   18f2e:	push   eax
   18f2f:	mov    eax,DWORD PTR [ebp-0x830]
   18f35:	add    eax,edi
   18f37:	push   eax
   18f38:	lea    eax,[ebp-0x82c]
   18f3e:	push   eax
   18f3f:	push   ebx
   18f40:	push   ebx
   18f41:	push   ebx
   18f42:	push   DWORD PTR [ebp-0x824]
   18f48:	call   0x1188c
   18f4d:	call   eax
   18f4f:	cmp    eax,ebx
   18f51:	jl     0x18fdd
   18f57:	add    edi,esi
   18f59:	jmp    0x18f05
   18f5b:	mov    BYTE PTR [ebp-0x81d],0x1
   18f62:	mov    DWORD PTR [ebp-0x87c],ebx
   18f68:	push   0x9
   18f6a:	pop    ecx
   18f6b:	xor    eax,eax
   18f6d:	lea    edi,[ebp-0x878]
   18f73:	rep stos DWORD PTR es:[edi],eax
   18f75:	mov    eax,DWORD PTR [ebp+0x10]
   18f78:	mov    DWORD PTR [ebp-0x86c],eax
   18f7e:	mov    ecx,DWORD PTR [ebp+0x14]
   18f81:	mov    DWORD PTR [ebp-0x868],ecx
   18f87:	mov    DWORD PTR [ebp-0x874],eax
   18f8d:	mov    DWORD PTR [ebp-0x870],ecx
   18f93:	mov    DWORD PTR [ebp-0x864],eax
   18f99:	mov    DWORD PTR [ebp-0x860],ecx
   18f9f:	mov    DWORD PTR [ebp-0x87c],eax
   18fa5:	mov    DWORD PTR [ebp-0x878],ecx
   18fab:	mov    DWORD PTR [ebp-0x85c],0x80
   18fb5:	push   0x4
   18fb7:	push   0x28
   18fb9:	lea    eax,[ebp-0x87c]
   18fbf:	push   eax
   18fc0:	lea    eax,[ebp-0x82c]
   18fc6:	push   eax
   18fc7:	push   DWORD PTR [ebp-0x824]
   18fcd:	call   0x11862
   18fd2:	call   eax
   18fd4:	jmp    0x18fdd
   18fd6:	xor    eax,eax
   18fd8:	inc    eax
   18fd9:	ret    
   18fda:	mov    esp,DWORD PTR [ebp-0x18]
   18fdd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18fe4:	push   DWORD PTR [ebp-0x824]
   18fea:	call   0x11598
   18fef:	call   eax
   18ff1:	mov    al,BYTE PTR [ebp-0x81d]
   18ff7:	call   0x1e528
   18ffc:	ret    0x10
   18fff:	int3   
   19000:	int3   
   19001:	int3   
   19002:	int3   
   19003:	int3   
   19004:	push   0x874
   19009:	push   0x76bd0
   1900e:	call   0x1e4e0
   19013:	xor    ebx,ebx
   19015:	mov    BYTE PTR [ebp-0x81d],bl
   1901b:	mov    BYTE PTR [ebp-0x81e],bl
   19021:	mov    DWORD PTR [ebp-0x828],ebx
   19027:	mov    DWORD PTR [ebp-0x824],ebx
   1902d:	xor    eax,eax
   1902f:	mov    WORD PTR [ebp-0x81c],ax
   19036:	push   0x7fe
   1903b:	push   ebx
   1903c:	lea    eax,[ebp-0x81a]
   19042:	push   eax
   19043:	call   0x1e19e
   19048:	add    esp,0xc
   1904b:	push   0x1f194
   19050:	push   0x1d
   19052:	push   0x1f158
   19057:	call   0x1799e
   1905c:	mov    edx,eax
   1905e:	mov    cx,WORD PTR [eax]
   19061:	inc    eax
   19062:	inc    eax
   19063:	cmp    cx,bx
   19066:	jne    0x1905e
   19068:	sub    eax,edx
   1906a:	lea    edi,[ebp-0x81c]
   19070:	dec    edi
   19071:	dec    edi
   19072:	mov    cx,WORD PTR [edi+0x2]
   19076:	inc    edi
   19077:	inc    edi
   19078:	cmp    cx,bx
   1907b:	jne    0x19072
   1907d:	mov    ecx,eax
   1907f:	mov    esi,edx
   19081:	shr    ecx,0x2
   19084:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   19086:	mov    ecx,eax
   19088:	and    ecx,0x3
   1908b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1908d:	mov    eax,0x76e48
   19092:	mov    edx,eax
   19094:	mov    cx,WORD PTR [eax]
   19097:	inc    eax
   19098:	inc    eax
   19099:	cmp    cx,bx
   1909c:	jne    0x19094
   1909e:	sub    eax,edx
   190a0:	lea    edi,[ebp-0x81c]
   190a6:	dec    edi
   190a7:	dec    edi
   190a8:	mov    cx,WORD PTR [edi+0x2]
   190ac:	inc    edi
   190ad:	inc    edi
   190ae:	cmp    cx,bx
   190b1:	jne    0x190a8
   190b3:	mov    ecx,eax
   190b5:	mov    esi,edx
   190b7:	shr    ecx,0x2
   190ba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   190bc:	mov    ecx,eax
   190be:	and    ecx,0x3
   190c1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   190c3:	push   0x1f11c
   190c8:	push   0x4
   190ca:	push   0x1f112
   190cf:	call   0x1799e
   190d4:	mov    edx,eax
   190d6:	mov    cx,WORD PTR [eax]
   190d9:	inc    eax
   190da:	inc    eax
   190db:	cmp    cx,bx
   190de:	jne    0x190d6
   190e0:	sub    eax,edx
   190e2:	lea    edi,[ebp-0x81c]
   190e8:	dec    edi
   190e9:	dec    edi
   190ea:	mov    cx,WORD PTR [edi+0x2]
   190ee:	inc    edi
   190ef:	inc    edi
   190f0:	cmp    cx,bx
   190f3:	jne    0x190ea
   190f5:	mov    ecx,eax
   190f7:	mov    esi,edx
   190f9:	shr    ecx,0x2
   190fc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   190fe:	mov    ecx,eax
   19100:	and    ecx,0x3
   19103:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   19105:	lea    eax,[ebp-0x81c]
   1910b:	push   eax
   1910c:	lea    eax,[ebp-0x85c]
   19112:	push   eax
   19113:	call   0x115c2
   19118:	call   eax
   1911a:	xor    eax,eax
   1911c:	lea    edi,[ebp-0x850]
   19122:	stos   DWORD PTR es:[edi],eax
   19123:	stos   DWORD PTR es:[edi],eax
   19124:	stos   DWORD PTR es:[edi],eax
   19125:	stos   DWORD PTR es:[edi],eax
   19126:	stos   DWORD PTR es:[edi],eax
   19127:	mov    DWORD PTR [ebp-0x834],ebx
   1912d:	xor    eax,eax
   1912f:	lea    edi,[ebp-0x830]
   19135:	stos   DWORD PTR es:[edi],eax
   19136:	mov    DWORD PTR [ebp-0x82c],ebx
   1913c:	mov    DWORD PTR [ebp-0x854],0x18
   19146:	mov    DWORD PTR [ebp-0x850],ebx
   1914c:	mov    DWORD PTR [ebp-0x848],0x240
   19156:	lea    eax,[ebp-0x85c]
   1915c:	mov    DWORD PTR [ebp-0x84c],eax
   19162:	mov    DWORD PTR [ebp-0x844],ebx
   19168:	mov    DWORD PTR [ebp-0x840],ebx
   1916e:	push   ebx
   1916f:	push   ebx
   19170:	push   ebx
   19171:	push   0x1
   19173:	push   0x7
   19175:	push   ebx
   19176:	push   ebx
   19177:	lea    eax,[ebp-0x834]
   1917d:	push   eax
   1917e:	lea    eax,[ebp-0x854]
   19184:	push   eax
   19185:	push   0x89
   1918a:	lea    eax,[ebp-0x82c]
   19190:	push   eax
   19191:	call   0x1149c
   19196:	call   eax
   19198:	cmp    eax,ebx
   1919a:	jge    0x191a3
   1919c:	xor    al,al
   1919e:	jmp    0x192c3
   191a3:	mov    DWORD PTR [ebp-0x884],ebx
   191a9:	push   0x9
   191ab:	pop    ecx
   191ac:	xor    eax,eax
   191ae:	lea    edi,[ebp-0x880]
   191b4:	rep stos DWORD PTR es:[edi],eax
   191b6:	mov    DWORD PTR [ebp-0x4],ebx
   191b9:	push   0x4
   191bb:	push   0x28
   191bd:	lea    eax,[ebp-0x884]
   191c3:	push   eax
   191c4:	lea    eax,[ebp-0x834]
   191ca:	push   eax
   191cb:	push   DWORD PTR [ebp-0x82c]
   191d1:	call   0x118b6
   191d6:	call   eax
   191d8:	cmp    eax,ebx
   191da:	jl     0x19258
   191dc:	mov    esi,0x53585
   191e1:	push   esi
   191e2:	call   0x11d08
   191e7:	mov    edi,eax
   191e9:	push   esi
   191ea:	push   0x1f890
   191ef:	push   edi
   191f0:	call   0x1e1b6
   191f5:	add    esp,0x10
   191f8:	push   0x25
   191fa:	push   0x72e18
   191ff:	push   esi
   19200:	push   edi
   19201:	call   0x10990
   19206:	lea    eax,[ebp-0x828]
   1920c:	push   eax
   1920d:	push   esi
   1920e:	push   edi
   1920f:	lea    eax,[ebp-0x83c]
   19215:	push   eax
   19216:	call   0x1a744
   1921b:	mov    BYTE PTR [ebp-0x83c],bl
   19221:	mov    eax,DWORD PTR [ebp-0x838]
   19227:	mov    DWORD PTR [ebp-0x824],eax
   1922d:	cmp    eax,ebx
   1922f:	je     0x1924a
   19231:	push   DWORD PTR [ebp-0x828]
   19237:	push   eax
   19238:	call   0x18b24
   1923d:	test   al,al
   1923f:	je     0x1924a
   19241:	mov    BYTE PTR [ebp-0x81d],0x1
   19248:	jmp    0x19258
   1924a:	mov    BYTE PTR [ebp-0x81d],0x1
   19251:	mov    BYTE PTR [ebp-0x81e],0x1
   19258:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1925f:	jmp    0x19271
   19261:	xor    eax,eax
   19263:	inc    eax
   19264:	ret    
   19265:	mov    esp,DWORD PTR [ebp-0x18]
   19268:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1926f:	xor    ebx,ebx
   19271:	push   DWORD PTR [ebp-0x82c]
   19277:	call   0x11598
   1927c:	call   eax
   1927e:	cmp    BYTE PTR [ebp-0x81e],bl
   19284:	je     0x192a9
   19286:	push   DWORD PTR [ebp-0x880]
   1928c:	push   DWORD PTR [ebp-0x884]
   19292:	push   DWORD PTR [ebp-0x828]
   19298:	push   DWORD PTR [ebp-0x824]
   1929e:	call   0x18d58
   192a3:	mov    BYTE PTR [ebp-0x81d],al
   192a9:	cmp    DWORD PTR [ebp-0x824],ebx
   192af:	je     0x192bd
   192b1:	push   DWORD PTR [ebp-0x824]
   192b7:	call   0x11d3e
   192bc:	pop    ecx
   192bd:	mov    al,BYTE PTR [ebp-0x81d]
   192c3:	call   0x1e528
   192c8:	ret    
   192c9:	int3   
   192ca:	int3   
   192cb:	int3   
   192cc:	int3   
   192cd:	int3   
   192ce:	mov    edi,edi
   192d0:	push   ebp
   192d1:	mov    ebp,esp
   192d3:	sub    esp,0xbc
   192d9:	mov    eax,ds:0x76f1c
   192de:	xor    eax,ebp
   192e0:	mov    DWORD PTR [ebp-0x4],eax
   192e3:	push   ebx
   192e4:	push   edi
   192e5:	push   0x1f1de
   192ea:	push   0xb
   192ec:	push   0x1f1c6
   192f1:	call   0x1799e
   192f6:	push   eax
   192f7:	lea    eax,[ebp-0xbc]
   192fd:	push   eax
   192fe:	call   0x115c2
   19303:	call   eax
   19305:	xor    eax,eax
   19307:	lea    edi,[ebp-0xb0]
   1930d:	stos   DWORD PTR es:[edi],eax
   1930e:	stos   DWORD PTR es:[edi],eax
   1930f:	stos   DWORD PTR es:[edi],eax
   19310:	stos   DWORD PTR es:[edi],eax
   19311:	xor    ebx,ebx
   19313:	push   ebx
   19314:	stos   DWORD PTR es:[edi],eax
   19315:	push   ebx
   19316:	push   ebx
   19317:	push   0x1
   19319:	xor    eax,eax
   1931b:	push   0x7
   1931d:	push   ebx
   1931e:	mov    DWORD PTR [ebp-0x94],ebx
   19324:	lea    edi,[ebp-0x90]
   1932a:	stos   DWORD PTR es:[edi],eax
   1932b:	lea    eax,[ebp-0xbc]
   19331:	mov    DWORD PTR [ebp-0xac],eax
   19337:	push   ebx
   19338:	lea    eax,[ebp-0x94]
   1933e:	push   eax
   1933f:	lea    eax,[ebp-0xb4]
   19345:	push   eax
   19346:	push   0x89
   1934b:	lea    eax,[ebp-0x8c]
   19351:	push   eax
   19352:	mov    DWORD PTR [ebp-0x8c],ebx
   19358:	mov    DWORD PTR [ebp-0xb4],0x18
   19362:	mov    DWORD PTR [ebp-0xb0],ebx
   19368:	mov    DWORD PTR [ebp-0xa8],0x240
   19372:	mov    DWORD PTR [ebp-0xa4],ebx
   19378:	mov    DWORD PTR [ebp-0xa0],ebx
   1937e:	call   0x1149c
   19383:	call   eax
   19385:	test   eax,eax
   19387:	jge    0x19390
   19389:	xor    al,al
   1938b:	jmp    0x1944c
   19390:	push   esi
   19391:	mov    esi,0x20c
   19396:	push   esi
   19397:	call   0x11d08
   1939c:	pop    ecx
   1939d:	push   0x1
   1939f:	mov    edi,eax
   193a1:	push   esi
   193a2:	push   edi
   193a3:	lea    eax,[ebp-0x94]
   193a9:	push   eax
   193aa:	push   DWORD PTR [ebp-0x8c]
   193b0:	cmp    edi,ebx
   193b2:	setne  BYTE PTR [ebp-0x9c]
   193b9:	call   0x11472
   193be:	call   eax
   193c0:	push   DWORD PTR [ebp-0x8c]
   193c6:	mov    esi,eax
   193c8:	call   0x11598
   193cd:	call   eax
   193cf:	cmp    esi,ebx
   193d1:	pop    esi
   193d2:	jge    0x193e5
   193d4:	cmp    BYTE PTR [ebp-0x9c],bl
   193da:	je     0x19389
   193dc:	push   edi
   193dd:	call   0x11d3e
   193e2:	pop    ecx
   193e3:	jmp    0x19389
   193e5:	push   0x6
   193e7:	push   0x1
   193e9:	lea    eax,[ebp-0x84]
   193ef:	push   eax
   193f0:	push   DWORD PTR [edi+0x8]
   193f3:	call   0x107b2
   193f8:	mov    ecx,0x76e08
   193fd:	lea    eax,[ebp-0x84]
   19403:	mov    dx,WORD PTR [eax]
   19406:	cmp    dx,WORD PTR [ecx]
   19409:	jne    0x19429
   1940b:	cmp    dx,bx
   1940e:	je     0x19425
   19410:	mov    dx,WORD PTR [eax+0x2]
   19414:	cmp    dx,WORD PTR [ecx+0x2]
   19418:	jne    0x19429
   1941a:	add    eax,0x4
   1941d:	add    ecx,0x4
   19420:	cmp    dx,bx
   19423:	jne    0x19403
   19425:	xor    eax,eax
   19427:	jmp    0x1942e
   19429:	sbb    eax,eax
   1942b:	sbb    eax,0xffffffff
   1942e:	cmp    eax,ebx
   19430:	sete   BYTE PTR [ebp-0x85]
   19437:	cmp    BYTE PTR [ebp-0x9c],bl
   1943d:	je     0x19446
   1943f:	push   edi
   19440:	call   0x11d3e
   19445:	pop    ecx
   19446:	mov    al,BYTE PTR [ebp-0x85]
   1944c:	mov    ecx,DWORD PTR [ebp-0x4]
   1944f:	pop    edi
   19450:	xor    ecx,ebp
   19452:	pop    ebx
   19453:	call   0x1e145
   19458:	leave  
   19459:	ret    
   1945a:	int3   
   1945b:	int3   
   1945c:	int3   
   1945d:	int3   
   1945e:	int3   
   1945f:	int3   
   19460:	call   0x1a960
   19465:	push   0x1f27c
   1946a:	push   0x34
   1946c:	push   0x1f212
   19471:	call   0x1799e
   19476:	mov    edx,0x770b8
   1947b:	movzx  ecx,WORD PTR [eax]
   1947e:	inc    eax
   1947f:	mov    WORD PTR [edx],cx
   19482:	inc    eax
   19483:	inc    edx
   19484:	inc    edx
   19485:	test   cx,cx
   19488:	jne    0x1947b
   1948a:	ret    
   1948b:	int3   
   1948c:	int3   
   1948d:	int3   
   1948e:	int3   
   1948f:	int3   
   19490:	push   0x33c
   19495:	push   0x76bf0
   1949a:	call   0x1e4e0
   1949f:	mov    esi,DWORD PTR [ebp+0xc]
   194a2:	mov    DWORD PTR [ebp-0x32c],esi
   194a8:	call   DWORD PTR ds:0x1f800
   194ae:	xor    ebx,ebx
   194b0:	cmp    BYTE PTR [ebp+0x10],bl
   194b3:	jne    0x194f1
   194b5:	push   esi
   194b6:	mov    ecx,DWORD PTR ds:0x76f50
   194bc:	call   0x14ff6
   194c1:	mov    edi,eax
   194c3:	push   esi
   194c4:	mov    ecx,DWORD PTR ds:0x76f50
   194ca:	call   0x1639c
   194cf:	mov    eax,edi
   194d1:	dec    eax
   194d2:	je     0x194e6
   194d4:	dec    eax
   194d5:	je     0x194e2
   194d7:	dec    eax
   194d8:	jne    0x196cc
   194de:	push   0xa
   194e0:	jmp    0x194e7
   194e2:	push   0x2
   194e4:	jmp    0x194e7
   194e6:	push   ebx
   194e7:	call   0x12988
   194ec:	jmp    0x196cc
   194f1:	mov    DWORD PTR [ebp-0x320],ebx
   194f7:	xor    eax,eax
   194f9:	lea    edi,[ebp-0x326]
   194ff:	stos   DWORD PTR es:[edi],eax
   19500:	stos   WORD PTR es:[edi],ax
   19502:	xor    eax,eax
   19504:	mov    WORD PTR [ebp-0x21c],ax
   1950b:	push   0x1fc
   19510:	push   ebx
   19511:	lea    eax,[ebp-0x21a]
   19517:	push   eax
   19518:	call   0x1e19e
   1951d:	add    esp,0xc
   19520:	lea    eax,[ebp-0x21c]
   19526:	mov    DWORD PTR [ebp-0x324],eax
   1952c:	xor    eax,eax
   1952e:	mov    WORD PTR [ebp-0x328],ax
   19535:	mov    eax,0x1fe
   1953a:	mov    WORD PTR [ebp-0x326],ax
   19541:	mov    DWORD PTR [ebp-0x34c],0x18
   1954b:	mov    DWORD PTR [ebp-0x348],ebx
   19551:	mov    DWORD PTR [ebp-0x340],0x200
   1955b:	mov    DWORD PTR [ebp-0x344],ebx
   19561:	mov    DWORD PTR [ebp-0x33c],ebx
   19567:	mov    DWORD PTR [ebp-0x338],ebx
   1956d:	mov    DWORD PTR [ebp-0x334],esi
   19573:	mov    DWORD PTR [ebp-0x330],ebx
   19579:	lea    eax,[ebp-0x334]
   1957f:	push   eax
   19580:	lea    eax,[ebp-0x34c]
   19586:	push   eax
   19587:	push   0x1f0fff
   1958c:	lea    eax,[ebp-0x320]
   19592:	push   eax
   19593:	call   0x1127a
   19598:	call   eax
   1959a:	test   eax,eax
   1959c:	jl     0x196cc
   195a2:	lea    eax,[ebp-0x328]
   195a8:	push   eax
   195a9:	push   DWORD PTR [ebp-0x320]
   195af:	call   0x11da0
   195b4:	cmp    eax,ebx
   195b6:	jl     0x196bf
   195bc:	movzx  eax,WORD PTR [ebp-0x328]
   195c3:	shr    eax,1
   195c5:	xor    ecx,ecx
   195c7:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   195cf:	push   DWORD PTR [ebp-0x320]
   195d5:	call   0x11e36
   195da:	lea    eax,[ebp-0x21c]
   195e0:	push   eax
   195e1:	call   0x10d52
   195e6:	cmp    eax,ebx
   195e8:	je     0x1960d
   195ea:	push   eax
   195eb:	push   esi
   195ec:	mov    ecx,DWORD PTR ds:0x76f50
   195f2:	call   0x16e16
   195f7:	push   DWORD PTR [ebp-0x320]
   195fd:	push   DWORD PTR [ebp-0x320]
   19603:	call   0x11e36
   19608:	push   eax
   19609:	push   esi
   1960a:	push   ebx
   1960b:	jmp    0x1968b
   1960d:	push   0x1f2b4
   19612:	push   0x9
   19614:	push   0x1f2a0
   19619:	call   0x1799e
   1961e:	push   eax
   1961f:	lea    eax,[ebp-0x328]
   19625:	push   eax
   19626:	call   0x11e66
   1962b:	test   al,al
   1962d:	je     0x19692
   1962f:	cmp    DWORD PTR ds:0x77c7c,ebx
   19635:	jne    0x19668
   19637:	mov    DWORD PTR ds:0x77c7c,0x1
   19641:	mov    DWORD PTR [ebp-0x4],ebx
   19644:	call   0x19004
   19649:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19650:	jmp    0x19668
   19652:	xor    eax,eax
   19654:	inc    eax
   19655:	ret    
   19656:	mov    esp,DWORD PTR [ebp-0x18]
   19659:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19660:	xor    ebx,ebx
   19662:	mov    esi,DWORD PTR [ebp-0x32c]
   19668:	cmp    DWORD PTR ds:0x779a4,ebx
   1966e:	jne    0x19676
   19670:	mov    DWORD PTR ds:0x779a4,esi
   19676:	push   DWORD PTR [ebp-0x320]
   1967c:	push   DWORD PTR [ebp-0x320]
   19682:	call   0x11e36
   19687:	push   eax
   19688:	push   esi
   19689:	push   0x1
   1968b:	call   0x135f0
   19690:	jmp    0x196bf
   19692:	lea    eax,[ebp-0x31c]
   19698:	push   eax
   19699:	call   0x1210a
   1969e:	test   al,al
   196a0:	je     0x196bf
   196a2:	lea    eax,[ebp-0x31c]
   196a8:	push   eax
   196a9:	lea    eax,[ebp-0x328]
   196af:	push   eax
   196b0:	call   0x11e66
   196b5:	test   al,al
   196b7:	je     0x196bf
   196b9:	push   esi
   196ba:	call   0x11fba
   196bf:	push   DWORD PTR [ebp-0x320]
   196c5:	call   0x11598
   196ca:	call   eax
   196cc:	call   0x1e528
   196d1:	ret    0xc
   196d4:	int3   
   196d5:	int3   
   196d6:	int3   
   196d7:	int3   
   196d8:	int3   
   196d9:	int3   
   196da:	mov    edi,edi
   196dc:	push   ebp
   196dd:	mov    ebp,esp
   196df:	push   ecx
   196e0:	cli    
   196e1:	mov    eax,cr0
   196e4:	mov    DWORD PTR [ebp-0x4],eax
   196e7:	and    eax,0xfffeffff
   196ec:	mov    cr0,eax
   196ef:	push   0x18246
   196f4:	push   DWORD PTR ds:0x778ec
   196fa:	call   0x19fe0
   196ff:	push   0x0
   19701:	push   0x19490
   19706:	mov    ds:0x778f0,eax
   1970b:	call   0x1134c
   19710:	call   eax
   19712:	push   0x18132
   19717:	call   0x112f8
   1971c:	call   eax
   1971e:	mov    eax,DWORD PTR [ebp-0x4]
   19721:	mov    cr0,eax
   19724:	sti    
   19725:	leave  
   19726:	ret    
   19727:	int3   
   19728:	int3   
   19729:	int3   
   1972a:	int3   
   1972b:	int3   
   1972c:	push   0xc
   1972e:	push   0x76c10
   19733:	call   0x1e1dc
   19738:	and    DWORD PTR [ebp-0x4],0x0
   1973c:	push   DWORD PTR [ebp+0xc]
   1973f:	push   DWORD PTR [ebp+0x8]
   19742:	call   0x1863e
   19747:	mov    esi,eax
   19749:	jmp    0x1975e
   1974b:	xor    eax,eax
   1974d:	inc    eax
   1974e:	ret    
   1974f:	mov    esp,DWORD PTR [ebp-0x18]
   19752:	push   0xd
   19754:	call   0x12988
   19759:	mov    esi,0xc0000001
   1975e:	mov    DWORD PTR [ebp-0x1c],esi
   19761:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19768:	cmp    esi,0x103
   1976e:	je     0x1977e
   19770:	mov    ecx,DWORD PTR [ebp+0xc]
   19773:	mov    DWORD PTR [ecx+0x18],esi
   19776:	xor    dl,dl
   19778:	call   DWORD PTR ds:0x1f824
   1977e:	mov    eax,esi
   19780:	call   0x1e221
   19785:	ret    0x8
   19788:	int3   
   19789:	int3   
   1978a:	int3   
   1978b:	int3   
   1978c:	int3   
   1978d:	int3   
   1978e:	mov    edi,edi
   19790:	push   ebp
   19791:	mov    ebp,esp
   19793:	push   esi
   19794:	mov    esi,ecx
   19796:	mov    BYTE PTR [esi+0x8],0x0
   1979a:	call   0x14f10
   1979f:	lea    ecx,[esi+0x10]
   197a2:	mov    BYTE PTR [ecx+0x8],0x0
   197a6:	call   0x14900
   197ab:	mov    eax,DWORD PTR [ebp+0x8]
   197ae:	mov    DWORD PTR [esi+0x20],eax
   197b1:	mov    eax,DWORD PTR [ebp+0xc]
   197b4:	mov    DWORD PTR [esi+0x24],eax
   197b7:	mov    eax,esi
   197b9:	pop    esi
   197ba:	pop    ebp
   197bb:	ret    0x8
   197be:	int3   
   197bf:	int3   
   197c0:	int3   
   197c1:	int3   
   197c2:	int3   
   197c3:	int3   
   197c4:	push   0x854
   197c9:	push   0x76c30
   197ce:	call   0x1e4e0
   197d3:	mov    esi,DWORD PTR [ebp+0x8]
   197d6:	mov    DWORD PTR [ebp-0x830],esi
   197dc:	mov    edi,DWORD PTR [ebp+0xc]
   197df:	call   0x19460
   197e4:	call   0x11aae
   197e9:	test   eax,eax
   197eb:	je     0x19dee
   197f1:	xor    ebx,ebx
   197f3:	mov    DWORD PTR [ebp-0x834],ebx
   197f9:	call   0x192ce
   197fe:	cmp    al,bl
   19800:	jne    0x19a21
   19806:	mov    DWORD PTR [ebp-0x4],ebx
   19809:	push   ebx
   1980a:	push   0x778b8
   1980f:	call   0x11a30
   19814:	call   eax
   19816:	push   0x10
   19818:	call   0x11d08
   1981d:	pop    ecx
   1981e:	cmp    eax,ebx
   19820:	je     0x19839
   19822:	lea    ecx,[ebp-0x81d]
   19828:	push   ecx
   19829:	lea    ecx,[ebp-0x81d]
   1982f:	push   ecx
   19830:	mov    ecx,eax
   19832:	call   0x16e5c
   19837:	jmp    0x1983b
   19839:	xor    eax,eax
   1983b:	mov    ecx,eax
   1983d:	mov    DWORD PTR ds:0x778e0,ecx
   19843:	call   0x16d12
   19848:	push   edi
   19849:	push   0x1f536
   1984e:	lea    eax,[ebp-0x41c]
   19854:	push   eax
   19855:	call   0x1e1ce
   1985a:	add    esp,0xc
   1985d:	push   0xffffffff
   1985f:	lea    eax,[ebp-0x41c]
   19865:	push   eax
   19866:	lea    ecx,[ebp-0x828]
   1986c:	call   0x12ba8
   19871:	lea    eax,[ebp-0x828]
   19877:	push   eax
   19878:	mov    ecx,DWORD PTR ds:0x778e0
   1987e:	call   0x16e76
   19883:	mov    edi,eax
   19885:	push   DWORD PTR [ebp-0x828]
   1988b:	call   0x11d3e
   19890:	pop    ecx
   19891:	lea    eax,[ebp-0x83c]
   19897:	push   eax
   19898:	call   0x11988
   1989d:	call   eax
   1989f:	push   ebx
   198a0:	push   0x989680
   198a5:	push   DWORD PTR [ebp-0x838]
   198ab:	push   DWORD PTR [ebp-0x83c]
   198b1:	call   0x1e192
   198b6:	inc    eax
   198b7:	mov    DWORD PTR [edi+0x20],eax
   198ba:	cmp    eax,ebx
   198bc:	jge    0x198c5
   198be:	mov    DWORD PTR [edi+0x20],0x1
   198c5:	push   0xffffffff
   198c7:	push   0x1f4f6
   198cc:	push   0x4
   198ce:	push   0x1f4f0
   198d3:	call   0x17a6e
   198d8:	push   eax
   198d9:	lea    ecx,[ebp-0x828]
   198df:	call   0x1367e
   198e4:	lea    eax,[ebp-0x828]
   198ea:	push   eax
   198eb:	mov    ecx,edi
   198ed:	call   0x12a44
   198f2:	push   DWORD PTR [ebp-0x828]
   198f8:	call   0x11d3e
   198fd:	mov    DWORD PTR [esp],0x1f4b6
   19904:	push   0x4
   19906:	push   0x1f4ac
   1990b:	call   0x1799e
   19910:	mov    DWORD PTR [ebp-0x824],eax
   19916:	lea    ecx,[eax+0x2]
   19919:	mov    dx,WORD PTR [eax]
   1991c:	inc    eax
   1991d:	inc    eax
   1991e:	cmp    dx,bx
   19921:	jne    0x19919
   19923:	sub    eax,ecx
   19925:	sar    eax,1
   19927:	add    eax,eax
   19929:	mov    WORD PTR [ebp-0x826],ax
   19930:	mov    WORD PTR [ebp-0x828],ax
   19937:	mov    DWORD PTR [ebp-0x854],0x18
   19941:	mov    DWORD PTR [ebp-0x850],ebx
   19947:	mov    DWORD PTR [ebp-0x848],0x40
   19951:	lea    eax,[ebp-0x828]
   19957:	mov    DWORD PTR [ebp-0x84c],eax
   1995d:	mov    DWORD PTR [ebp-0x844],ebx
   19963:	mov    DWORD PTR [ebp-0x840],ebx
   19969:	mov    eax,DWORD PTR [ebp-0x824]
   1996f:	lea    ecx,[eax+0x2]
   19972:	mov    dx,WORD PTR [eax]
   19975:	inc    eax
   19976:	inc    eax
   19977:	cmp    dx,bx
   1997a:	jne    0x19972
   1997c:	sub    eax,ecx
   1997e:	sar    eax,1
   19980:	mov    DWORD PTR [ebp-0x834],eax
   19986:	push   0xffffffff
   19988:	push   0x1f488
   1998d:	push   0x8
   1998f:	push   0x1f47e
   19994:	call   0x17a6e
   19999:	push   eax
   1999a:	lea    ecx,[ebp-0x828]
   199a0:	call   0x1367e
   199a5:	lea    ecx,[edi+0x8]
   199a8:	lea    eax,[ebp-0x828]
   199ae:	push   eax
   199af:	call   0x12a44
   199b4:	push   DWORD PTR [ebp-0x828]
   199ba:	call   0x11d3e
   199bf:	pop    ecx
   199c0:	push   0xffffffff
   199c2:	push   0x1e5e8
   199c7:	lea    ecx,[ebp-0x828]
   199cd:	call   0x12ba8
   199d2:	lea    eax,[ebp-0x828]
   199d8:	push   eax
   199d9:	lea    ecx,[edi+0x10]
   199dc:	call   0x12a44
   199e1:	push   DWORD PTR [ebp-0x828]
   199e7:	call   0x11d3e
   199ec:	pop    ecx
   199ed:	lea    eax,[edi+0x8]
   199f0:	push   eax
   199f1:	lea    ecx,[edi+0x18]
   199f4:	call   0x12a44
   199f9:	mov    eax,DWORD PTR [edi+0x20]
   199fc:	or     DWORD PTR [ebp-0x834],eax
   19a02:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19a09:	jmp    0x19a21
   19a0b:	xor    eax,eax
   19a0d:	inc    eax
   19a0e:	ret    
   19a0f:	mov    esp,DWORD PTR [ebp-0x18]
   19a12:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19a19:	xor    ebx,ebx
   19a1b:	mov    esi,DWORD PTR [ebp-0x830]
   19a21:	cmp    DWORD PTR [ebp-0x834],ebx
   19a27:	jne    0x19dee
   19a2d:	xor    eax,eax
   19a2f:	lea    edi,[ebp-0x844]
   19a35:	stos   DWORD PTR es:[edi],eax
   19a36:	stos   DWORD PTR es:[edi],eax
   19a37:	mov    DWORD PTR [ebp-0x848],0xc
   19a41:	mov    DWORD PTR [ebp-0x844],0x2
   19a4b:	mov    BYTE PTR [ebp-0x840],bl
   19a51:	mov    BYTE PTR [ebp-0x83f],bl
   19a57:	push   0x76f78
   19a5c:	push   ebx
   19a5d:	lea    eax,[ebp-0x848]
   19a63:	push   eax
   19a64:	call   0x1195e
   19a69:	call   eax
   19a6b:	push   eax
   19a6c:	call   0x11934
   19a71:	call   eax
   19a73:	push   0x10
   19a75:	call   0x11d08
   19a7a:	pop    ecx
   19a7b:	cmp    eax,ebx
   19a7d:	je     0x19a9b
   19a7f:	lea    ecx,[ebp-0x81d]
   19a85:	push   ecx
   19a86:	lea    ecx,[ebp-0x81d]
   19a8c:	push   ecx
   19a8d:	mov    ecx,eax
   19a8f:	call   0x16e5c
   19a94:	mov    ds:0x778e0,eax
   19a99:	jmp    0x19aa1
   19a9b:	mov    DWORD PTR ds:0x778e0,ebx
   19aa1:	push   0x2c
   19aa3:	call   0x11d08
   19aa8:	pop    ecx
   19aa9:	cmp    eax,ebx
   19aab:	je     0x19ac2
   19aad:	push   0x96
   19ab2:	push   0x14
   19ab4:	mov    ecx,eax
   19ab6:	call   0x17b64
   19abb:	mov    ds:0x778e8,eax
   19ac0:	jmp    0x19ac8
   19ac2:	mov    DWORD PTR ds:0x778e8,ebx
   19ac8:	push   0x10
   19aca:	call   0x11d08
   19acf:	pop    ecx
   19ad0:	cmp    eax,ebx
   19ad2:	je     0x19af0
   19ad4:	lea    ecx,[ebp-0x81d]
   19ada:	push   ecx
   19adb:	lea    ecx,[ebp-0x81d]
   19ae1:	push   ecx
   19ae2:	mov    ecx,eax
   19ae4:	call   0x16c52
   19ae9:	mov    ds:0x76f28,eax
   19aee:	jmp    0x19af6
   19af0:	mov    DWORD PTR ds:0x76f28,ebx
   19af6:	push   0x10
   19af8:	call   0x11d08
   19afd:	pop    ecx
   19afe:	cmp    eax,ebx
   19b00:	je     0x19b1e
   19b02:	lea    ecx,[ebp-0x81d]
   19b08:	push   ecx
   19b09:	lea    ecx,[ebp-0x81d]
   19b0f:	push   ecx
   19b10:	mov    ecx,eax
   19b12:	call   0x16f20
   19b17:	mov    ds:0x76fb4,eax
   19b1c:	jmp    0x19b24
   19b1e:	mov    DWORD PTR ds:0x76fb4,ebx
   19b24:	push   0x28
   19b26:	call   0x11d08
   19b2b:	pop    ecx
   19b2c:	cmp    eax,ebx
   19b2e:	je     0x19b42
   19b30:	push   0x64
   19b32:	push   0x14
   19b34:	mov    ecx,eax
   19b36:	call   0x1978e
   19b3b:	mov    ds:0x76f54,eax
   19b40:	jmp    0x19b48
   19b42:	mov    DWORD PTR ds:0x76f54,ebx
   19b48:	push   0x20
   19b4a:	call   0x11d08
   19b4f:	pop    ecx
   19b50:	cmp    eax,ebx
   19b52:	je     0x19b62
   19b54:	mov    ecx,eax
   19b56:	call   0x16bf2
   19b5b:	mov    ds:0x76f50,eax
   19b60:	jmp    0x19b68
   19b62:	mov    DWORD PTR ds:0x76f50,ebx
   19b68:	call   0x12960
   19b6d:	call   0x1bca6
   19b72:	call   0x1729c
   19b77:	mov    edi,0x1f46e
   19b7c:	push   edi
   19b7d:	call   0x178e8
   19b82:	push   eax
   19b83:	push   0x1f446
   19b88:	push   0xa
   19b8a:	push   0x1f430
   19b8f:	call   0x1799e
   19b94:	push   eax
   19b95:	lea    eax,[ebp-0x41c]
   19b9b:	push   eax
   19b9c:	call   0x1e1c2
   19ba1:	add    esp,0xc
   19ba4:	lea    eax,[ebp-0x41c]
   19baa:	push   eax
   19bab:	lea    eax,[ebp-0x85c]
   19bb1:	push   eax
   19bb2:	call   0x115c2
   19bb7:	call   eax
   19bb9:	push   edi
   19bba:	call   0x178e8
   19bbf:	push   eax
   19bc0:	push   0x1f3f4
   19bc5:	push   0xe
   19bc7:	push   0x1f3d6
   19bcc:	call   0x1799e
   19bd1:	push   eax
   19bd2:	lea    eax,[ebp-0x81c]
   19bd8:	push   eax
   19bd9:	call   0x1e1c2
   19bde:	add    esp,0xc
   19be1:	lea    eax,[ebp-0x81c]
   19be7:	push   eax
   19be8:	lea    eax,[ebp-0x864]
   19bee:	push   eax
   19bef:	call   0x115c2
   19bf4:	call   eax
   19bf6:	push   0x77924
   19bfb:	push   ebx
   19bfc:	push   0x100
   19c01:	push   0x22
   19c03:	lea    eax,[ebp-0x85c]
   19c09:	push   eax
   19c0a:	push   ebx
   19c0b:	push   esi
   19c0c:	call   0x1190a
   19c11:	call   eax
   19c13:	cmp    eax,ebx
   19c15:	jl     0x19df0
   19c1b:	mov    eax,0x1972c
   19c20:	mov    DWORD PTR [esi+0x94],eax
   19c26:	mov    DWORD PTR [esi+0x90],eax
   19c2c:	mov    DWORD PTR [esi+0xa4],eax
   19c32:	mov    DWORD PTR [esi+0x70],eax
   19c35:	mov    DWORD PTR [esi+0x48],eax
   19c38:	mov    DWORD PTR [esi+0x44],eax
   19c3b:	mov    DWORD PTR [esi+0x40],eax
   19c3e:	mov    DWORD PTR [esi+0x38],eax
   19c41:	mov    eax,ds:0x77924
   19c46:	or     DWORD PTR [eax+0x1c],0x4
   19c4a:	lea    eax,[ebp-0x85c]
   19c50:	push   eax
   19c51:	lea    eax,[ebp-0x864]
   19c57:	push   eax
   19c58:	call   0x118e0
   19c5d:	call   eax
   19c5f:	mov    DWORD PTR [ebp-0x830],eax
   19c65:	cmp    eax,ebx
   19c67:	jge    0x19c7e
   19c69:	push   DWORD PTR [esi+0x4]
   19c6c:	call   0x11790
   19c71:	call   eax
   19c73:	mov    eax,DWORD PTR [ebp-0x830]
   19c79:	jmp    0x19df0
   19c7e:	push   ebx
   19c7f:	push   0x778b8
   19c84:	call   0x11a30
   19c89:	call   eax
   19c8b:	push   ebx
   19c8c:	push   0x76f58
   19c91:	call   0x11a30
   19c96:	call   eax
   19c98:	push   ebx
   19c99:	push   0x76f2c
   19c9e:	call   0x11a30
   19ca3:	call   eax
   19ca5:	push   0x8000000
   19caa:	push   0x1f39a
   19caf:	push   0x9
   19cb1:	push   0x1f01a
   19cb6:	call   0x17a6e
   19cbb:	push   eax
   19cbc:	lea    eax,[ebp-0x82c]
   19cc2:	push   eax
   19cc3:	call   0x1a22a
   19cc8:	push   DWORD PTR [ebp-0x82c]
   19cce:	call   0x114c6
   19cd3:	call   eax
   19cd5:	mov    DWORD PTR [ebp-0x838],eax
   19cdb:	push   ebx
   19cdc:	push   0x1f376
   19ce1:	push   0x16
   19ce3:	push   0x1f35e
   19ce8:	call   0x17a6e
   19ced:	push   eax
   19cee:	push   DWORD PTR [ebp-0x82c]
   19cf4:	call   0x1a110
   19cf9:	push   eax
   19cfa:	push   DWORD PTR [ebp-0x838]
   19d00:	call   0x1a0b6
   19d05:	mov    edi,eax
   19d07:	add    edi,DWORD PTR [ebp-0x82c]
   19d0d:	mov    esi,0x1e5ea
   19d12:	push   esi
   19d13:	call   0x11200
   19d18:	mov    DWORD PTR [ebp-0x824],eax
   19d1e:	push   edi
   19d1f:	call   0x1a05e
   19d24:	mov    ecx,DWORD PTR [ebp-0x824]
   19d2a:	mov    ecx,DWORD PTR [ecx]
   19d2c:	mov    eax,DWORD PTR [ecx+eax*4]
   19d2f:	mov    ds:0x778e4,eax
   19d34:	push   ebx
   19d35:	push   0x1f330
   19d3a:	push   0x14
   19d3c:	push   0x1f31a
   19d41:	call   0x17a6e
   19d46:	push   eax
   19d47:	push   DWORD PTR [ebp-0x82c]
   19d4d:	call   0x1a110
   19d52:	push   eax
   19d53:	push   DWORD PTR [ebp-0x838]
   19d59:	call   0x1a0b6
   19d5e:	mov    edi,eax
   19d60:	add    edi,DWORD PTR [ebp-0x82c]
   19d66:	push   esi
   19d67:	call   0x11200
   19d6c:	mov    DWORD PTR [ebp-0x824],eax
   19d72:	push   edi
   19d73:	call   0x1a05e
   19d78:	mov    ecx,DWORD PTR [ebp-0x824]
   19d7e:	mov    ecx,DWORD PTR [ecx]
   19d80:	mov    eax,DWORD PTR [ecx+eax*4]
   19d83:	mov    ds:0x778d8,eax
   19d88:	push   ebx
   19d89:	push   0x1f2f0
   19d8e:	push   0xe
   19d90:	push   0x1f2e0
   19d95:	call   0x17a6e
   19d9a:	push   eax
   19d9b:	push   DWORD PTR [ebp-0x82c]
   19da1:	call   0x1a110
   19da6:	push   eax
   19da7:	push   DWORD PTR [ebp-0x838]
   19dad:	call   0x1a0b6
   19db2:	mov    edi,eax
   19db4:	add    edi,DWORD PTR [ebp-0x82c]
   19dba:	push   esi
   19dbb:	call   0x11200
   19dc0:	mov    esi,eax
   19dc2:	push   edi
   19dc3:	call   0x1a05e
   19dc8:	mov    ecx,DWORD PTR [esi]
   19dca:	mov    eax,DWORD PTR [ecx+eax*4]
   19dcd:	mov    ds:0x778ec,eax
   19dd2:	push   DWORD PTR [ebp-0x82c]
   19dd8:	call   0x1a37a
   19ddd:	call   0x196da
   19de2:	mov    BYTE PTR ds:0x77928,0x1
   19de9:	jmp    0x19c73
   19dee:	xor    eax,eax
   19df0:	call   0x1e528
   19df5:	ret    0x8
   19df8:	int3   
   19df9:	int3   
   19dfa:	int3   
   19dfb:	int3   
   19dfc:	int3   
   19dfd:	int3   
   19dfe:	mov    edi,edi
   19e00:	push   ebp
   19e01:	mov    ebp,esp
   19e03:	push   ecx
   19e04:	mov    ecx,DWORD PTR [ebp+0x8]
   19e07:	mov    eax,DWORD PTR [ecx+0x4]
   19e0a:	mov    edx,DWORD PTR [ebp+0xc]
   19e0d:	push   ebx
   19e0e:	mov    ebx,DWORD PTR [edx+0x4]
   19e11:	push   esi
   19e12:	push   edi
   19e13:	mov    DWORD PTR [ebp-0x4],eax
   19e16:	mov    DWORD PTR [ebp+0x8],eax
   19e19:	cmp    eax,ebx
   19e1b:	jbe    0x19e20
   19e1d:	mov    DWORD PTR [ebp+0x8],ebx
   19e20:	xor    eax,eax
   19e22:	cmp    DWORD PTR [ebp+0x8],eax
   19e25:	jbe    0x19e3d
   19e27:	mov    esi,DWORD PTR [ecx]
   19e29:	mov    edi,DWORD PTR [edx]
   19e2b:	mov    cl,BYTE PTR [esi+eax*1]
   19e2e:	mov    dl,BYTE PTR [edi+eax*1]
   19e31:	cmp    cl,dl
   19e33:	jl     0x19e4a
   19e35:	jg     0x19e4e
   19e37:	inc    eax
   19e38:	cmp    eax,DWORD PTR [ebp+0x8]
   19e3b:	jb     0x19e2b
   19e3d:	cmp    DWORD PTR [ebp-0x4],ebx
   19e40:	setb   al
   19e43:	pop    edi
   19e44:	pop    esi
   19e45:	pop    ebx
   19e46:	leave  
   19e47:	ret    0x8
   19e4a:	mov    al,0x1
   19e4c:	jmp    0x19e43
   19e4e:	xor    al,al
   19e50:	jmp    0x19e43
   19e52:	int3   
   19e53:	int3   
   19e54:	int3   
   19e55:	int3   
   19e56:	int3   
   19e57:	int3   
   19e58:	mov    edi,edi
   19e5a:	push   ebp
   19e5b:	mov    ebp,esp
   19e5d:	mov    eax,DWORD PTR [ebp+0x8]
   19e60:	mov    ecx,DWORD PTR [eax+0x4]
   19e63:	mov    edx,DWORD PTR [ebp+0xc]
   19e66:	cmp    ecx,DWORD PTR [edx+0x4]
   19e69:	je     0x19e6f
   19e6b:	xor    al,al
   19e6d:	jmp    0x19e7e
   19e6f:	push   esi
   19e70:	mov    esi,DWORD PTR [eax]
   19e72:	push   edi
   19e73:	mov    edi,DWORD PTR [edx]
   19e75:	xor    eax,eax
   19e77:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19e79:	pop    edi
   19e7a:	sete   al
   19e7d:	pop    esi
   19e7e:	pop    ebp
   19e7f:	ret    0x8
   19e82:	int3   
   19e83:	int3   
   19e84:	int3   
   19e85:	int3   
   19e86:	int3   
   19e87:	int3   
   19e88:	mov    edi,edi
   19e8a:	push   ebp
   19e8b:	mov    ebp,esp
   19e8d:	push   DWORD PTR [ebp+0xc]
   19e90:	push   DWORD PTR [ebp+0x8]
   19e93:	call   0x19e58
   19e98:	xor    ecx,ecx
   19e9a:	test   al,al
   19e9c:	sete   cl
   19e9f:	mov    al,cl
   19ea1:	pop    ebp
   19ea2:	ret    0x8
   19ea5:	int3   
   19ea6:	int3   
   19ea7:	int3   
   19ea8:	int3   
   19ea9:	int3   
   19eaa:	mov    edi,edi
   19eac:	push   ebp
   19ead:	mov    ebp,esp
   19eaf:	push   ecx
   19eb0:	mov    ecx,DWORD PTR [ebp+0x8]
   19eb3:	mov    eax,DWORD PTR [ebp+0xc]
   19eb6:	push   ebx
   19eb7:	mov    ebx,DWORD PTR [eax+0x4]
   19eba:	push   esi
   19ebb:	push   edi
   19ebc:	mov    edi,DWORD PTR [ecx+0x4]
   19ebf:	mov    DWORD PTR [ebp-0x4],edi
   19ec2:	cmp    edi,ebx
   19ec4:	jbe    0x19ec8
   19ec6:	mov    edi,ebx
   19ec8:	and    DWORD PTR [ebp+0x8],0x0
   19ecc:	test   edi,edi
   19ece:	jbe    0x19eee
   19ed0:	mov    eax,DWORD PTR [eax]
   19ed2:	mov    ecx,DWORD PTR [ecx]
   19ed4:	sub    ecx,eax
   19ed6:	movzx  edx,WORD PTR [ecx+eax*1]
   19eda:	movzx  esi,WORD PTR [eax]
   19edd:	cmp    dx,si
   19ee0:	jb     0x19efb
   19ee2:	ja     0x19eff
   19ee4:	inc    DWORD PTR [ebp+0x8]
   19ee7:	inc    eax
   19ee8:	inc    eax
   19ee9:	cmp    DWORD PTR [ebp+0x8],edi
   19eec:	jb     0x19ed6
   19eee:	cmp    DWORD PTR [ebp-0x4],ebx
   19ef1:	setb   al
   19ef4:	pop    edi
   19ef5:	pop    esi
   19ef6:	pop    ebx
   19ef7:	leave  
   19ef8:	ret    0x8
   19efb:	mov    al,0x1
   19efd:	jmp    0x19ef4
   19eff:	xor    al,al
   19f01:	jmp    0x19ef4
   19f03:	int3   
   19f04:	int3   
   19f05:	int3   
   19f06:	int3   
   19f07:	int3   
   19f08:	mov    edi,edi
   19f0a:	push   ebp
   19f0b:	mov    ebp,esp
   19f0d:	pop    ebp
   19f0e:	jmp    0x19dfe
   19f13:	int3   
   19f14:	int3   
   19f15:	int3   
   19f16:	int3   
   19f17:	int3   
   19f18:	mov    edi,edi
   19f1a:	push   ebp
   19f1b:	mov    ebp,esp
   19f1d:	pop    ebp
   19f1e:	jmp    0x19e58
   19f23:	int3   
   19f24:	int3   
   19f25:	int3   
   19f26:	int3   
   19f27:	int3   
   19f28:	mov    edi,edi
   19f2a:	push   ebp
   19f2b:	mov    ebp,esp
   19f2d:	pop    ebp
   19f2e:	jmp    0x19e88
   19f33:	int3   
   19f34:	int3   
   19f35:	int3   
   19f36:	int3   
   19f37:	int3   
   19f38:	mov    edi,edi
   19f3a:	push   ebp
   19f3b:	mov    ebp,esp
   19f3d:	pop    ebp
   19f3e:	jmp    0x19eaa
   19f43:	int3   
   19f44:	int3   
   19f45:	int3   
   19f46:	int3   
   19f47:	int3   
   19f48:	mov    edi,edi
   19f4a:	push   ebp
   19f4b:	mov    ebp,esp
   19f4d:	mov    eax,DWORD PTR [ebp+0x8]
   19f50:	mov    cl,BYTE PTR [ebp+0xc]
   19f53:	mov    BYTE PTR [eax],cl
   19f55:	inc    eax
   19f56:	pop    ebp
   19f57:	ret    0x8
   19f5a:	int3   
   19f5b:	int3   
   19f5c:	int3   
   19f5d:	int3   
   19f5e:	int3   
   19f5f:	int3   
   19f60:	mov    edi,edi
   19f62:	push   ebp
   19f63:	mov    ebp,esp
   19f65:	mov    eax,DWORD PTR [ebp+0x8]
   19f68:	mov    ecx,DWORD PTR [ebp+0xc]
   19f6b:	mov    DWORD PTR [eax],ecx
   19f6d:	add    eax,0x4
   19f70:	pop    ebp
   19f71:	ret    0x8
   19f74:	int3   
   19f75:	int3   
   19f76:	int3   
   19f77:	int3   
   19f78:	int3   
   19f79:	int3   
   19f7a:	mov    edi,edi
   19f7c:	push   ebp
   19f7d:	mov    ebp,esp
   19f7f:	mov    eax,DWORD PTR [ebp+0x8]
   19f82:	mov    cx,WORD PTR [ebp+0xc]
   19f86:	mov    WORD PTR [eax],cx
   19f89:	add    eax,0x2
   19f8c:	pop    ebp
   19f8d:	ret    0x8
   19f90:	int3   
   19f91:	int3   
   19f92:	int3   
   19f93:	int3   
   19f94:	int3   
   19f95:	int3   
   19f96:	mov    edi,edi
   19f98:	push   ebp
   19f99:	mov    ebp,esp
   19f9b:	push   esi
   19f9c:	mov    esi,DWORD PTR [ebp+0x10]
   19f9f:	push   edi
   19fa0:	mov    edi,DWORD PTR [ebp+0x8]
   19fa3:	push   esi
   19fa4:	push   DWORD PTR [ebp+0xc]
   19fa7:	push   edi
   19fa8:	call   0x1e1b6
   19fad:	add    esp,0xc
   19fb0:	lea    eax,[edi+esi*1]
   19fb3:	pop    edi
   19fb4:	pop    esi
   19fb5:	pop    ebp
   19fb6:	ret    0xc
   19fb9:	int3   
   19fba:	int3   
   19fbb:	int3   
   19fbc:	int3   
   19fbd:	int3   
   19fbe:	mov    edi,edi
   19fc0:	push   ebp
   19fc1:	mov    ebp,esp
   19fc3:	mov    eax,DWORD PTR [ebp+0xc]
   19fc6:	mov    ecx,DWORD PTR [ebp+0x8]
   19fc9:	sub    ecx,eax
   19fcb:	sub    ecx,0x5
   19fce:	mov    DWORD PTR [eax+0x1],ecx
   19fd1:	mov    BYTE PTR [eax],0xe9
   19fd4:	add    eax,0x5
   19fd7:	pop    ebp
   19fd8:	ret    0x8
   19fdb:	int3   
   19fdc:	int3   
   19fdd:	int3   
   19fde:	int3   
   19fdf:	int3   
   19fe0:	mov    edi,edi
   19fe2:	push   ebp
   19fe3:	mov    ebp,esp
   19fe5:	push   ecx
   19fe6:	push   ebx
   19fe7:	mov    ebx,DWORD PTR [ebp+0x8]
   19fea:	and    DWORD PTR [ebp+0x8],0x0
   19fee:	push   edi
   19fef:	mov    edi,ebx
   19ff1:	test   ebx,ebx
   19ff3:	jne    0x19ff9
   19ff5:	xor    eax,eax
   19ff7:	jmp    0x1a053
   19ff9:	push   esi
   19ffa:	push   0x20736649
   19fff:	push   0x80
   1a004:	push   0x0
   1a006:	call   DWORD PTR ds:0x1f830
   1a00c:	mov    esi,eax
   1a00e:	mov    DWORD PTR [ebp-0x4],esi
   1a011:	push   0x0
   1a013:	push   edi
   1a014:	push   esi
   1a015:	call   0x1a6fc
   1a01a:	mov    ecx,eax
   1a01c:	sub    ecx,edi
   1a01e:	add    DWORD PTR [ebp+0x8],ecx
   1a021:	add    esi,ecx
   1a023:	cmp    DWORD PTR [ebp+0x8],0x5
   1a027:	mov    edi,eax
   1a029:	jb     0x1a011
   1a02b:	push   DWORD PTR [ebp+0x8]
   1a02e:	push   0x90
   1a033:	push   ebx
   1a034:	call   0x1e19e
   1a039:	add    esp,0xc
   1a03c:	push   esi
   1a03d:	lea    eax,[ebx+0x5]
   1a040:	push   eax
   1a041:	call   0x19fbe
   1a046:	push   ebx
   1a047:	push   DWORD PTR [ebp+0xc]
   1a04a:	call   0x19fbe
   1a04f:	mov    eax,DWORD PTR [ebp-0x4]
   1a052:	pop    esi
   1a053:	pop    edi
   1a054:	pop    ebx
   1a055:	leave  
   1a056:	ret    0x8
   1a059:	int3   
   1a05a:	int3   
   1a05b:	int3   
   1a05c:	int3   
   1a05d:	int3   
   1a05e:	mov    edi,edi
   1a060:	push   ebp
   1a061:	mov    ebp,esp
   1a063:	mov    eax,DWORD PTR [ebp+0x8]
   1a066:	mov    eax,DWORD PTR [eax+0x1]
   1a069:	pop    ebp
   1a06a:	ret    0x4
   1a06d:	int3   
   1a06e:	int3   
   1a06f:	int3   
   1a070:	int3   
   1a071:	int3   
   1a072:	mov    edi,edi
   1a074:	push   ebp
   1a075:	mov    ebp,esp
   1a077:	mov    ecx,DWORD PTR [ebp+0x8]
   1a07a:	movzx  eax,WORD PTR [ecx+0x14]
   1a07e:	lea    eax,[eax+ecx*1+0x18]
   1a082:	movzx  ecx,WORD PTR [ecx+0x6]
   1a086:	push   esi
   1a087:	xor    esi,esi
   1a089:	push   edi
   1a08a:	test   ecx,ecx
   1a08c:	jbe    0x1a0a8
   1a08e:	mov    edx,DWORD PTR [eax+0xc]
   1a091:	cmp    DWORD PTR [ebp+0xc],edx
   1a094:	jb     0x1a0a0
   1a096:	mov    edi,DWORD PTR [eax+0x8]
   1a099:	add    edi,edx
   1a09b:	cmp    DWORD PTR [ebp+0xc],edi
   1a09e:	jb     0x1a0aa
   1a0a0:	add    eax,0x28
   1a0a3:	inc    esi
   1a0a4:	cmp    esi,ecx
   1a0a6:	jb     0x1a08e
   1a0a8:	xor    eax,eax
   1a0aa:	pop    edi
   1a0ab:	pop    esi
   1a0ac:	pop    ebp
   1a0ad:	ret    0x8
   1a0b0:	int3   
   1a0b1:	int3   
   1a0b2:	int3   
   1a0b3:	int3   
   1a0b4:	int3   
   1a0b5:	int3   
   1a0b6:	mov    edi,edi
   1a0b8:	push   ebp
   1a0b9:	mov    ebp,esp
   1a0bb:	push   esi
   1a0bc:	push   DWORD PTR [ebp+0xc]
   1a0bf:	mov    esi,DWORD PTR [ebp+0x8]
   1a0c2:	push   esi
   1a0c3:	call   0x1a072
   1a0c8:	mov    ecx,eax
   1a0ca:	test   ecx,ecx
   1a0cc:	je     0x1a0df
   1a0ce:	mov    eax,DWORD PTR [esi+0x3c]
   1a0d1:	dec    eax
   1a0d2:	not    eax
   1a0d4:	and    eax,DWORD PTR [ecx+0x14]
   1a0d7:	sub    eax,DWORD PTR [ecx+0xc]
   1a0da:	add    eax,DWORD PTR [ebp+0xc]
   1a0dd:	jmp    0x1a0e2
   1a0df:	mov    eax,DWORD PTR [ebp+0xc]
   1a0e2:	pop    esi
   1a0e3:	pop    ebp
   1a0e4:	ret    0x8
   1a0e7:	int3   
   1a0e8:	int3   
   1a0e9:	int3   
   1a0ea:	int3   
   1a0eb:	int3   
   1a0ec:	mov    edi,edi
   1a0ee:	push   ebp
   1a0ef:	mov    ebp,esp
   1a0f1:	cmp    DWORD PTR [ebp+0x10],0x0
   1a0f5:	je     0x1a0fc
   1a0f7:	mov    eax,DWORD PTR [ebp+0xc]
   1a0fa:	jmp    0x1a107
   1a0fc:	push   DWORD PTR [ebp+0xc]
   1a0ff:	push   DWORD PTR [ebp+0x8]
   1a102:	call   0x1a0b6
   1a107:	pop    ebp
   1a108:	ret    0xc
   1a10b:	int3   
   1a10c:	int3   
   1a10d:	int3   
   1a10e:	int3   
   1a10f:	int3   
   1a110:	mov    edi,edi
   1a112:	push   ebp
   1a113:	mov    ebp,esp
   1a115:	sub    esp,0x1c
   1a118:	push   ebx
   1a119:	push   esi
   1a11a:	mov    esi,DWORD PTR [ebp+0x8]
   1a11d:	push   edi
   1a11e:	push   esi
   1a11f:	call   0x114c6
   1a124:	call   eax
   1a126:	mov    ebx,eax
   1a128:	lea    eax,[ebp-0x14]
   1a12b:	push   eax
   1a12c:	push   0x0
   1a12e:	push   0x0
   1a130:	push   esi
   1a131:	mov    DWORD PTR [ebp-0x4],ebx
   1a134:	call   0x114f0
   1a139:	call   eax
   1a13b:	mov    edi,eax
   1a13d:	mov    eax,DWORD PTR [ebx+0x50]
   1a140:	mov    ecx,edi
   1a142:	sub    ecx,esi
   1a144:	cmp    eax,ecx
   1a146:	jb     0x1a197
   1a148:	mov    ecx,DWORD PTR [ebp-0x14]
   1a14b:	sub    ecx,esi
   1a14d:	add    ecx,edi
   1a14f:	cmp    eax,ecx
   1a151:	jb     0x1a197
   1a153:	push   DWORD PTR [ebp+0x10]
   1a156:	push   DWORD PTR [edi+0x20]
   1a159:	push   ebx
   1a15a:	call   0x1a0ec
   1a15f:	push   DWORD PTR [ebp+0x10]
   1a162:	mov    ebx,eax
   1a164:	push   DWORD PTR [edi+0x1c]
   1a167:	add    ebx,esi
   1a169:	push   DWORD PTR [ebp-0x4]
   1a16c:	call   0x1a0ec
   1a171:	push   DWORD PTR [ebp+0x10]
   1a174:	add    eax,esi
   1a176:	push   DWORD PTR [edi+0x24]
   1a179:	mov    DWORD PTR [ebp-0x1c],eax
   1a17c:	push   DWORD PTR [ebp-0x4]
   1a17f:	call   0x1a0ec
   1a184:	and    DWORD PTR [ebp-0xc],0x0
   1a188:	add    eax,esi
   1a18a:	mov    esi,DWORD PTR [edi+0x18]
   1a18d:	mov    DWORD PTR [ebp-0x18],eax
   1a190:	mov    DWORD PTR [ebp-0x8],esi
   1a193:	test   esi,esi
   1a195:	jg     0x1a1a3
   1a197:	xor    eax,eax
   1a199:	pop    edi
   1a19a:	pop    esi
   1a19b:	pop    ebx
   1a19c:	leave  
   1a19d:	ret    0xc
   1a1a0:	mov    esi,DWORD PTR [ebp-0x8]
   1a1a3:	mov    eax,DWORD PTR [ebp-0xc]
   1a1a6:	push   DWORD PTR [ebp+0x10]
   1a1a9:	add    esi,eax
   1a1ab:	mov    eax,DWORD PTR [ebp+0xc]
   1a1ae:	sar    esi,1
   1a1b0:	push   DWORD PTR [ebx+esi*4]
   1a1b3:	mov    DWORD PTR [ebp-0x10],eax
   1a1b6:	push   DWORD PTR [ebp-0x4]
   1a1b9:	call   0x1a0ec
   1a1be:	add    eax,DWORD PTR [ebp+0x8]
   1a1c1:	mov    cl,BYTE PTR [eax]
   1a1c3:	mov    edx,DWORD PTR [ebp-0x10]
   1a1c6:	cmp    cl,BYTE PTR [edx]
   1a1c8:	jne    0x1a1e5
   1a1ca:	test   cl,cl
   1a1cc:	je     0x1a1e1
   1a1ce:	mov    cl,BYTE PTR [eax+0x1]
   1a1d1:	cmp    cl,BYTE PTR [edx+0x1]
   1a1d4:	jne    0x1a1e5
   1a1d6:	inc    eax
   1a1d7:	inc    eax
   1a1d8:	inc    edx
   1a1d9:	inc    edx
   1a1da:	mov    DWORD PTR [ebp-0x10],edx
   1a1dd:	test   cl,cl
   1a1df:	jne    0x1a1c1
   1a1e1:	xor    eax,eax
   1a1e3:	jmp    0x1a1ea
   1a1e5:	sbb    eax,eax
   1a1e7:	sbb    eax,0xffffffff
   1a1ea:	test   eax,eax
   1a1ec:	je     0x1a203
   1a1ee:	jge    0x1a1f6
   1a1f0:	inc    esi
   1a1f1:	mov    DWORD PTR [ebp-0xc],esi
   1a1f4:	jmp    0x1a1f9
   1a1f6:	mov    DWORD PTR [ebp-0x8],esi
   1a1f9:	mov    eax,DWORD PTR [ebp-0x8]
   1a1fc:	cmp    DWORD PTR [ebp-0xc],eax
   1a1ff:	jl     0x1a1a0
   1a201:	jmp    0x1a197
   1a203:	mov    eax,DWORD PTR [ebp-0x18]
   1a206:	movzx  eax,WORD PTR [eax+esi*2]
   1a20a:	mov    ecx,DWORD PTR [ebp-0x1c]
   1a20d:	mov    ecx,DWORD PTR [ecx+eax*4]
   1a210:	mov    eax,ecx
   1a212:	sub    eax,edi
   1a214:	add    eax,DWORD PTR [ebp+0x8]
   1a217:	cmp    eax,DWORD PTR [ebp-0x14]
   1a21a:	sbb    eax,eax
   1a21c:	not    eax
   1a21e:	and    eax,ecx
   1a220:	jmp    0x1a199
   1a225:	int3   
   1a226:	int3   
   1a227:	int3   
   1a228:	int3   
   1a229:	int3   
   1a22a:	mov    edi,edi
   1a22c:	push   ebp
   1a22d:	mov    ebp,esp
   1a22f:	sub    esp,0x814
   1a235:	mov    eax,ds:0x76f1c
   1a23a:	xor    eax,ebp
   1a23c:	mov    DWORD PTR [ebp-0x4],eax
   1a23f:	mov    ecx,DWORD PTR [ebp+0xc]
   1a242:	push   ebx
   1a243:	mov    ebx,DWORD PTR [ebp+0x8]
   1a246:	push   esi
   1a247:	push   edi
   1a248:	xor    esi,esi
   1a24a:	xor    eax,eax
   1a24c:	push   ecx
   1a24d:	mov    DWORD PTR [ebp-0x7ec],esi
   1a253:	lea    edi,[ebp-0x7e8]
   1a259:	stos   DWORD PTR es:[edi],eax
   1a25a:	lea    eax,[ebp-0x7d4]
   1a260:	push   0x1f53a
   1a265:	push   eax
   1a266:	mov    DWORD PTR [ebp-0x7d8],esi
   1a26c:	mov    DWORD PTR [ebp-0x7e4],esi
   1a272:	call   DWORD PTR ds:0x1f828
   1a278:	add    esp,0xc
   1a27b:	lea    eax,[ebp-0x7d4]
   1a281:	push   eax
   1a282:	lea    eax,[ebp-0x80c]
   1a288:	push   eax
   1a289:	call   0x115c2
   1a28e:	call   eax
   1a290:	push   0x10
   1a292:	lea    eax,[ebp-0x80c]
   1a298:	mov    DWORD PTR [ebp-0x7fc],eax
   1a29e:	push   0x1
   1a2a0:	lea    eax,[ebp-0x814]
   1a2a6:	push   eax
   1a2a7:	lea    eax,[ebp-0x804]
   1a2ad:	push   eax
   1a2ae:	push   0x80100000
   1a2b3:	lea    eax,[ebp-0x7dc]
   1a2b9:	push   eax
   1a2ba:	mov    DWORD PTR [ebp-0x804],0x18
   1a2c4:	mov    DWORD PTR [ebp-0x800],esi
   1a2ca:	mov    DWORD PTR [ebp-0x7f8],esi
   1a2d0:	mov    DWORD PTR [ebp-0x7f4],esi
   1a2d6:	mov    DWORD PTR [ebp-0x7f0],esi
   1a2dc:	call   0x11376
   1a2e1:	call   eax
   1a2e3:	cmp    eax,esi
   1a2e5:	jl     0x1a363
   1a2e7:	push   DWORD PTR [ebp-0x7dc]
   1a2ed:	lea    eax,[ebp-0x7ec]
   1a2f3:	push   DWORD PTR [ebp+0x10]
   1a2f6:	push   0x2
   1a2f8:	push   eax
   1a2f9:	push   esi
   1a2fa:	push   0x4
   1a2fc:	lea    eax,[ebp-0x7e0]
   1a302:	push   eax
   1a303:	call   0x119dc
   1a308:	call   eax
   1a30a:	push   DWORD PTR [ebp-0x7dc]
   1a310:	mov    edi,eax
   1a312:	call   0x11598
   1a317:	call   eax
   1a319:	cmp    edi,esi
   1a31b:	jge    0x1a321
   1a31d:	mov    eax,edi
   1a31f:	jmp    0x1a363
   1a321:	push   0x2
   1a323:	push   esi
   1a324:	push   0x2
   1a326:	lea    eax,[ebp-0x7e4]
   1a32c:	push   eax
   1a32d:	push   esi
   1a32e:	push   esi
   1a32f:	push   esi
   1a330:	lea    eax,[ebp-0x7d8]
   1a336:	push   eax
   1a337:	push   0xffffffff
   1a339:	push   DWORD PTR [ebp-0x7e0]
   1a33f:	call   0x119b2
   1a344:	call   eax
   1a346:	push   DWORD PTR [ebp-0x7e0]
   1a34c:	mov    edi,eax
   1a34e:	call   0x11598
   1a353:	call   eax
   1a355:	cmp    edi,esi
   1a357:	jl     0x1a31d
   1a359:	mov    eax,DWORD PTR [ebp-0x7d8]
   1a35f:	mov    DWORD PTR [ebx],eax
   1a361:	xor    eax,eax
   1a363:	mov    ecx,DWORD PTR [ebp-0x4]
   1a366:	pop    edi
   1a367:	pop    esi
   1a368:	xor    ecx,ebp
   1a36a:	pop    ebx
   1a36b:	call   0x1e145
   1a370:	leave  
   1a371:	ret    0xc
   1a374:	int3   
   1a375:	int3   
   1a376:	int3   
   1a377:	int3   
   1a378:	int3   
   1a379:	int3   
   1a37a:	mov    edi,edi
   1a37c:	push   ebp
   1a37d:	mov    ebp,esp
   1a37f:	push   DWORD PTR [ebp+0x8]
   1a382:	push   0xffffffff
   1a384:	call   0x11a06
   1a389:	call   eax
   1a38b:	pop    ebp
   1a38c:	ret    0x4
   1a38f:	int3   
   1a390:	int3   
   1a391:	int3   
   1a392:	int3   
   1a393:	int3   
   1a394:	mov    edi,edi
   1a396:	push   ebp
   1a397:	mov    ebp,esp
   1a399:	push   esi
   1a39a:	mov    esi,DWORD PTR [ebp+0x8]
   1a39d:	test   esi,esi
   1a39f:	jne    0x1a3a4
   1a3a1:	lea    esi,[ecx+0x18]
   1a3a4:	mov    edx,DWORD PTR [ebp+0xc]
   1a3a7:	test   edx,edx
   1a3a9:	jne    0x1a3af
   1a3ab:	xor    eax,eax
   1a3ad:	jmp    0x1a3bf
   1a3af:	movzx  eax,BYTE PTR [edx]
   1a3b2:	push   edx
   1a3b3:	lea    eax,[eax*8+0x72f58]
   1a3ba:	push   esi
   1a3bb:	push   eax
   1a3bc:	call   DWORD PTR [eax+0x4]
   1a3bf:	pop    esi
   1a3c0:	pop    ebp
   1a3c1:	ret    0x8
   1a3c4:	int3   
   1a3c5:	int3   
   1a3c6:	int3   
   1a3c7:	int3   
   1a3c8:	int3   
   1a3c9:	int3   
   1a3ca:	mov    edi,edi
   1a3cc:	push   ebp
   1a3cd:	mov    ebp,esp
   1a3cf:	mov    eax,DWORD PTR [ebp+0x14]
   1a3d2:	push   ebx
   1a3d3:	mov    ebx,DWORD PTR [ebp+0x8]
   1a3d6:	push   esi
   1a3d7:	mov    esi,DWORD PTR [ebp+0x10]
   1a3da:	sub    esi,eax
   1a3dc:	push   edi
   1a3dd:	lea    edi,[ebx+eax*1]
   1a3e0:	mov    eax,esi
   1a3e2:	xor    edx,edx
   1a3e4:	dec    eax
   1a3e5:	je     0x1a406
   1a3e7:	dec    eax
   1a3e8:	je     0x1a3f8
   1a3ea:	dec    eax
   1a3eb:	dec    eax
   1a3ec:	jne    0x1a412
   1a3ee:	mov    eax,DWORD PTR [ecx+0xc]
   1a3f1:	mov    edx,DWORD PTR [edi]
   1a3f3:	and    DWORD PTR [eax],0x0
   1a3f6:	jmp    0x1a412
   1a3f8:	mov    eax,DWORD PTR [ecx+0xc]
   1a3fb:	movsx  edx,WORD PTR [edi]
   1a3fe:	mov    DWORD PTR [eax],0x2
   1a404:	jmp    0x1a412
   1a406:	mov    eax,DWORD PTR [ecx+0xc]
   1a409:	movsx  edx,BYTE PTR [edi]
   1a40c:	mov    DWORD PTR [eax],0x3
   1a412:	mov    ecx,DWORD PTR [ebp+0xc]
   1a415:	lea    eax,[edx+ecx*1]
   1a418:	add    eax,DWORD PTR [ebp+0x10]
   1a41b:	sub    edx,ebx
   1a41d:	add    edx,ecx
   1a41f:	dec    esi
   1a420:	je     0x1a432
   1a422:	dec    esi
   1a423:	je     0x1a42d
   1a425:	dec    esi
   1a426:	dec    esi
   1a427:	jne    0x1a434
   1a429:	mov    DWORD PTR [edi],edx
   1a42b:	jmp    0x1a434
   1a42d:	mov    WORD PTR [edi],dx
   1a430:	jmp    0x1a434
   1a432:	mov    BYTE PTR [edi],dl
   1a434:	pop    edi
   1a435:	pop    esi
   1a436:	pop    ebx
   1a437:	pop    ebp
   1a438:	ret    0x10
   1a43b:	int3   
   1a43c:	int3   
   1a43d:	int3   
   1a43e:	int3   
   1a43f:	int3   
   1a440:	mov    edi,edi
   1a442:	push   ebp
   1a443:	mov    ebp,esp
   1a445:	mov    eax,DWORD PTR [ebp+0x10]
   1a448:	inc    eax
   1a449:	pop    ebp
   1a44a:	ret    0xc
   1a44d:	int3   
   1a44e:	int3   
   1a44f:	int3   
   1a450:	int3   
   1a451:	int3   
   1a452:	mov    edi,edi
   1a454:	push   ebp
   1a455:	mov    ebp,esp
   1a457:	mov    eax,ecx
   1a459:	mov    ecx,DWORD PTR [ebp+0x8]
   1a45c:	and    DWORD PTR [eax],0x0
   1a45f:	and    DWORD PTR [eax+0x4],0x0
   1a463:	test   ecx,ecx
   1a465:	jne    0x1a46a
   1a467:	lea    ecx,[eax+0x14]
   1a46a:	mov    edx,DWORD PTR [ebp+0xc]
   1a46d:	mov    DWORD PTR [eax+0x8],ecx
   1a470:	test   edx,edx
   1a472:	jne    0x1a477
   1a474:	lea    edx,[eax+0x10]
   1a477:	mov    DWORD PTR [eax+0xc],edx
   1a47a:	and    DWORD PTR [ecx],0x0
   1a47d:	mov    ecx,DWORD PTR [eax+0xc]
   1a480:	and    DWORD PTR [ecx],0x0
   1a483:	pop    ebp
   1a484:	ret    0x8
   1a487:	int3   
   1a488:	int3   
   1a489:	int3   
   1a48a:	int3   
   1a48b:	int3   
   1a48c:	mov    edi,edi
   1a48e:	push   ebp
   1a48f:	mov    ebp,esp
   1a491:	push   ecx
   1a492:	mov    eax,DWORD PTR [ebp+0x8]
   1a495:	mov    eax,DWORD PTR [eax]
   1a497:	push   ebx
   1a498:	push   esi
   1a499:	push   edi
   1a49a:	mov    DWORD PTR [ebp-0x4],ecx
   1a49d:	mov    esi,eax
   1a49f:	test   eax,0x200000
   1a4a4:	je     0x1a4b1
   1a4a6:	cmp    DWORD PTR [ecx+0x4],0x0
   1a4aa:	je     0x1a4b6
   1a4ac:	shr    esi,0xb
   1a4af:	jmp    0x1a4b9
   1a4b1:	cmp    DWORD PTR [ecx],0x0
   1a4b4:	jmp    0x1a4aa
   1a4b6:	shr    esi,0x8
   1a4b9:	mov    ebx,DWORD PTR [ebp+0x10]
   1a4bc:	and    esi,0x7
   1a4bf:	shr    eax,0xe
   1a4c2:	and    eax,0x7
   1a4c5:	mov    edi,esi
   1a4c7:	jbe    0x1a503
   1a4c9:	add    eax,ebx
   1a4cb:	mov    cl,BYTE PTR [eax]
   1a4cd:	movzx  edx,cl
   1a4d0:	mov    dl,BYTE PTR [edx+0x72e58]
   1a4d6:	test   dl,0x10
   1a4d9:	je     0x1a4fb
   1a4db:	mov    al,BYTE PTR [eax+0x1]
   1a4de:	and    al,0x7
   1a4e0:	cmp    al,0x5
   1a4e2:	jne    0x1a4fb
   1a4e4:	and    cl,0xc0
   1a4e7:	je     0x1a4f8
   1a4e9:	cmp    cl,0x40
   1a4ec:	jne    0x1a4f3
   1a4ee:	lea    edi,[esi+0x1]
   1a4f1:	jmp    0x1a4fb
   1a4f3:	cmp    cl,0x80
   1a4f6:	jne    0x1a4fb
   1a4f8:	lea    edi,[esi+0x4]
   1a4fb:	movzx  eax,dl
   1a4fe:	and    eax,0xf
   1a501:	add    edi,eax
   1a503:	push   edi
   1a504:	push   ebx
   1a505:	push   DWORD PTR [ebp+0xc]
   1a508:	call   0x1e1b6
   1a50d:	mov    ecx,DWORD PTR [ebp+0x8]
   1a510:	mov    eax,DWORD PTR [ecx]
   1a512:	shl    eax,0xc
   1a515:	sar    eax,0x1d
   1a518:	add    esp,0xc
   1a51b:	test   eax,eax
   1a51d:	je     0x1a539
   1a51f:	push   eax
   1a520:	push   esi
   1a521:	mov    esi,DWORD PTR [ebp-0x4]
   1a524:	push   ebx
   1a525:	push   DWORD PTR [ebp+0xc]
   1a528:	mov    ecx,esi
   1a52a:	call   0x1a3ca
   1a52f:	mov    ecx,DWORD PTR [esi+0x8]
   1a532:	mov    DWORD PTR [ecx],eax
   1a534:	mov    ecx,DWORD PTR [ebp+0x8]
   1a537:	jmp    0x1a53c
   1a539:	mov    esi,DWORD PTR [ebp-0x4]
   1a53c:	test   DWORD PTR [ecx],0x400000
   1a542:	je     0x1a549
   1a544:	mov    eax,DWORD PTR [esi+0xc]
   1a547:	neg    DWORD PTR [eax]
   1a549:	test   DWORD PTR [ecx],0x100000
   1a54f:	je     0x1a557
   1a551:	mov    eax,DWORD PTR [esi+0x8]
   1a554:	or     DWORD PTR [eax],0xffffffff
   1a557:	lea    eax,[edi+ebx*1]
   1a55a:	pop    edi
   1a55b:	pop    esi
   1a55c:	pop    ebx
   1a55d:	leave  
   1a55e:	ret    0xc
   1a561:	int3   
   1a562:	int3   
   1a563:	int3   
   1a564:	int3   
   1a565:	int3   
   1a566:	mov    edi,edi
   1a568:	push   ebp
   1a569:	mov    ebp,esp
   1a56b:	push   ebx
   1a56c:	push   esi
   1a56d:	mov    esi,DWORD PTR [ebp+0x10]
   1a570:	push   edi
   1a571:	mov    edi,DWORD PTR [ebp+0xc]
   1a574:	push   esi
   1a575:	push   edi
   1a576:	push   DWORD PTR [ebp+0x8]
   1a579:	mov    ebx,ecx
   1a57b:	call   0x1a48c
   1a580:	lea    eax,[esi+0x1]
   1a583:	movzx  edx,BYTE PTR [eax]
   1a586:	push   eax
   1a587:	inc    edi
   1a588:	lea    edx,[edx*8+0x72f58]
   1a58f:	push   edi
   1a590:	push   edx
   1a591:	mov    ecx,ebx
   1a593:	call   DWORD PTR [edx+0x4]
   1a596:	pop    edi
   1a597:	pop    esi
   1a598:	pop    ebx
   1a599:	pop    ebp
   1a59a:	ret    0xc
   1a59d:	int3   
   1a59e:	int3   
   1a59f:	int3   
   1a5a0:	int3   
   1a5a1:	int3   
   1a5a2:	mov    edi,edi
   1a5a4:	push   ebp
   1a5a5:	mov    ebp,esp
   1a5a7:	push   ebx
   1a5a8:	push   esi
   1a5a9:	mov    esi,DWORD PTR [ebp+0x10]
   1a5ac:	push   edi
   1a5ad:	mov    edi,DWORD PTR [ebp+0xc]
   1a5b0:	push   esi
   1a5b1:	push   edi
   1a5b2:	push   DWORD PTR [ebp+0x8]
   1a5b5:	mov    ebx,ecx
   1a5b7:	call   0x1a48c
   1a5bc:	lea    eax,[esi+0x1]
   1a5bf:	movzx  edx,BYTE PTR [eax]
   1a5c2:	push   eax
   1a5c3:	inc    edi
   1a5c4:	lea    edx,[edx*8+0x73760]
   1a5cb:	push   edi
   1a5cc:	push   edx
   1a5cd:	mov    ecx,ebx
   1a5cf:	call   DWORD PTR [edx+0x4]
   1a5d2:	pop    edi
   1a5d3:	pop    esi
   1a5d4:	pop    ebx
   1a5d5:	pop    ebp
   1a5d6:	ret    0xc
   1a5d9:	int3   
   1a5da:	int3   
   1a5db:	int3   
   1a5dc:	int3   
   1a5dd:	int3   
   1a5de:	mov    edi,edi
   1a5e0:	push   ebp
   1a5e1:	mov    ebp,esp
   1a5e3:	mov    DWORD PTR [ecx],0x1
   1a5e9:	pop    ebp
   1a5ea:	jmp    0x1a566
   1a5ef:	int3   
   1a5f0:	int3   
   1a5f1:	int3   
   1a5f2:	int3   
   1a5f3:	int3   
   1a5f4:	mov    edi,edi
   1a5f6:	push   ebp
   1a5f7:	mov    ebp,esp
   1a5f9:	mov    DWORD PTR [ecx+0x4],0x1
   1a600:	pop    ebp
   1a601:	jmp    0x1a566
   1a606:	int3   
   1a607:	int3   
   1a608:	int3   
   1a609:	int3   
   1a60a:	int3   
   1a60b:	int3   
   1a60c:	mov    edi,edi
   1a60e:	push   ebp
   1a60f:	mov    ebp,esp
   1a611:	mov    eax,DWORD PTR [ebp+0x10]
   1a614:	sub    esp,0x10
   1a617:	test   BYTE PTR [eax+0x1],0x38
   1a61b:	push   eax
   1a61c:	push   DWORD PTR [ebp+0xc]
   1a61f:	jne    0x1a634
   1a621:	mov    DWORD PTR [ebp-0x8],0x5bf6
   1a628:	mov    DWORD PTR [ebp-0x4],0x1a48c
   1a62f:	lea    eax,[ebp-0x8]
   1a632:	jmp    0x1a645
   1a634:	mov    DWORD PTR [ebp-0x10],0x52f6
   1a63b:	mov    DWORD PTR [ebp-0xc],0x1a48c
   1a642:	lea    eax,[ebp-0x10]
   1a645:	push   eax
   1a646:	call   0x1a48c
   1a64b:	leave  
   1a64c:	ret    0xc
   1a64f:	int3   
   1a650:	int3   
   1a651:	int3   
   1a652:	int3   
   1a653:	int3   
   1a654:	mov    edi,edi
   1a656:	push   ebp
   1a657:	mov    ebp,esp
   1a659:	mov    eax,DWORD PTR [ebp+0x10]
   1a65c:	sub    esp,0x10
   1a65f:	test   BYTE PTR [eax+0x1],0x38
   1a663:	push   eax
   1a664:	push   DWORD PTR [ebp+0xc]
   1a667:	jne    0x1a67c
   1a669:	mov    DWORD PTR [ebp-0x8],0x66f7
   1a670:	mov    DWORD PTR [ebp-0x4],0x1a48c
   1a677:	lea    eax,[ebp-0x8]
   1a67a:	jmp    0x1a68d
   1a67c:	mov    DWORD PTR [ebp-0x10],0x52f7
   1a683:	mov    DWORD PTR [ebp-0xc],0x1a48c
   1a68a:	lea    eax,[ebp-0x10]
   1a68d:	push   eax
   1a68e:	call   0x1a48c
   1a693:	leave  
   1a694:	ret    0xc
   1a697:	int3   
   1a698:	int3   
   1a699:	int3   
   1a69a:	int3   
   1a69b:	int3   
   1a69c:	mov    edi,edi
   1a69e:	push   ebp
   1a69f:	mov    ebp,esp
   1a6a1:	push   ecx
   1a6a2:	push   ecx
   1a6a3:	mov    edx,DWORD PTR [ebp+0x10]
   1a6a6:	mov    al,BYTE PTR [edx+0x1]
   1a6a9:	cmp    al,0x15
   1a6ab:	je     0x1a6cb
   1a6ad:	cmp    al,0x25
   1a6af:	je     0x1a6cb
   1a6b1:	and    al,0x38
   1a6b3:	cmp    al,0x10
   1a6b5:	je     0x1a6c3
   1a6b7:	cmp    al,0x18
   1a6b9:	je     0x1a6c3
   1a6bb:	cmp    al,0x20
   1a6bd:	je     0x1a6c3
   1a6bf:	cmp    al,0x28
   1a6c1:	jne    0x1a6d7
   1a6c3:	mov    eax,DWORD PTR [ecx+0x8]
   1a6c6:	or     DWORD PTR [eax],0xffffffff
   1a6c9:	jmp    0x1a6d7
   1a6cb:	mov    eax,DWORD PTR [edx+0x2]
   1a6ce:	mov    eax,DWORD PTR [eax]
   1a6d0:	push   esi
   1a6d1:	mov    esi,DWORD PTR [ecx+0x8]
   1a6d4:	mov    DWORD PTR [esi],eax
   1a6d6:	pop    esi
   1a6d7:	push   edx
   1a6d8:	push   DWORD PTR [ebp+0xc]
   1a6db:	lea    eax,[ebp-0x8]
   1a6de:	push   eax
   1a6df:	mov    DWORD PTR [ebp-0x8],0x52ff
   1a6e6:	mov    DWORD PTR [ebp-0x4],0x1a48c
   1a6ed:	call   0x1a48c
   1a6f2:	leave  
   1a6f3:	ret    0xc
   1a6f6:	int3   
   1a6f7:	int3   
   1a6f8:	int3   
   1a6f9:	int3   
   1a6fa:	int3   
   1a6fb:	int3   
   1a6fc:	mov    edi,edi
   1a6fe:	push   ebp
   1a6ff:	mov    ebp,esp
   1a701:	sub    esp,0x5c
   1a704:	mov    eax,ds:0x76f1c
   1a709:	xor    eax,ebp
   1a70b:	mov    DWORD PTR [ebp-0x4],eax
   1a70e:	mov    eax,DWORD PTR [ebp+0x10]
   1a711:	push   esi
   1a712:	mov    esi,DWORD PTR [ebp+0x8]
   1a715:	push   edi
   1a716:	mov    edi,DWORD PTR [ebp+0xc]
   1a719:	push   0x0
   1a71b:	push   eax
   1a71c:	lea    ecx,[ebp-0x5c]
   1a71f:	call   0x1a452
   1a724:	push   edi
   1a725:	push   esi
   1a726:	lea    ecx,[ebp-0x5c]
   1a729:	call   0x1a394
   1a72e:	mov    ecx,DWORD PTR [ebp-0x4]
   1a731:	pop    edi
   1a732:	xor    ecx,ebp
   1a734:	pop    esi
   1a735:	call   0x1e145
   1a73a:	leave  
   1a73b:	ret    0xc
   1a73e:	int3   
   1a73f:	int3   
   1a740:	int3   
   1a741:	int3   
   1a742:	int3   
   1a743:	int3   
   1a744:	mov    edi,edi
   1a746:	push   ebp
   1a747:	mov    ebp,esp
   1a749:	sub    esp,0x50
   1a74c:	push   ebx
   1a74d:	push   esi
   1a74e:	push   edi
   1a74f:	mov    edi,0x4000
   1a754:	push   edi
   1a755:	call   0x11d08
   1a75a:	pop    ecx
   1a75b:	xor    ebx,ebx
   1a75d:	push   0x38
   1a75f:	push   0x1f56a
   1a764:	cmp    eax,ebx
   1a766:	mov    DWORD PTR [ebp-0x4],eax
   1a769:	mov    DWORD PTR [ebp-0xc],eax
   1a76c:	push   0x2f
   1a76e:	lea    eax,[ebp-0x50]
   1a771:	setne  BYTE PTR [ebp-0x10]
   1a775:	push   eax
   1a776:	xor    esi,esi
   1a778:	mov    DWORD PTR [ebp-0x30],ebx
   1a77b:	mov    DWORD PTR [ebp-0x2c],ebx
   1a77e:	mov    DWORD PTR [ebp-0x28],ebx
   1a781:	mov    DWORD PTR [ebp-0x4c],ebx
   1a784:	mov    DWORD PTR [ebp-0x50],ebx
   1a787:	call   0x1c01c
   1a78c:	test   eax,eax
   1a78e:	je     0x1a7ad
   1a790:	mov    esi,DWORD PTR [ebp+0x8]
   1a793:	mov    BYTE PTR [esi],bl
   1a795:	mov    DWORD PTR [esi+0x4],ebx
   1a798:	cmp    BYTE PTR [ebp-0x10],bl
   1a79b:	je     0x1a7a6
   1a79d:	push   DWORD PTR [ebp-0x4]
   1a7a0:	call   0x11d3e
   1a7a5:	pop    ecx
   1a7a6:	mov    eax,esi
   1a7a8:	jmp    0x1a8c2
   1a7ad:	mov    eax,DWORD PTR [ebp+0x10]
   1a7b0:	mov    DWORD PTR [ebp-0x4c],eax
   1a7b3:	mov    eax,DWORD PTR [ebp+0xc]
   1a7b6:	mov    DWORD PTR [ebp-0x50],eax
   1a7b9:	mov    eax,DWORD PTR [ebp-0xc]
   1a7bc:	add    eax,esi
   1a7be:	mov    DWORD PTR [ebp-0x44],eax
   1a7c1:	push   0x4
   1a7c3:	lea    eax,[ebp-0x50]
   1a7c6:	push   eax
   1a7c7:	mov    DWORD PTR [ebp-0x40],edi
   1a7ca:	call   0x1c1b0
   1a7cf:	cmp    eax,0xfffffffc
   1a7d2:	mov    DWORD PTR [ebp+0x10],eax
   1a7d5:	jl     0x1a7e9
   1a7d7:	cmp    eax,0xfffffffd
   1a7da:	jle    0x1a872
   1a7e0:	cmp    eax,0x2
   1a7e3:	je     0x1a872
   1a7e9:	mov    eax,edi
   1a7eb:	sub    eax,DWORD PTR [ebp-0x40]
   1a7ee:	add    esi,eax
   1a7f0:	cmp    DWORD PTR [ebp-0x40],ebx
   1a7f3:	jne    0x1a85c
   1a7f5:	mov    al,BYTE PTR [ebp-0x10]
   1a7f8:	mov    BYTE PTR [ebp-0x18],al
   1a7fb:	mov    eax,DWORD PTR [ebp-0xc]
   1a7fe:	mov    DWORD PTR [ebp-0x14],eax
   1a801:	lea    eax,[esi+0x4000]
   1a807:	push   eax
   1a808:	mov    BYTE PTR [ebp-0x10],bl
   1a80b:	call   0x11d08
   1a810:	pop    ecx
   1a811:	cmp    eax,ebx
   1a813:	setne  cl
   1a816:	mov    DWORD PTR [ebp-0x4],eax
   1a819:	lea    eax,[ebp-0x8]
   1a81c:	mov    BYTE PTR [ebp-0x8],cl
   1a81f:	push   eax
   1a820:	lea    ecx,[ebp-0x10]
   1a823:	call   0x12a8e
   1a828:	cmp    BYTE PTR [ebp-0x8],bl
   1a82b:	je     0x1a836
   1a82d:	push   DWORD PTR [ebp-0x4]
   1a830:	call   0x11d3e
   1a835:	pop    ecx
   1a836:	push   esi
   1a837:	push   DWORD PTR [ebp-0x14]
   1a83a:	push   DWORD PTR [ebp-0xc]
   1a83d:	call   0x1e1b6
   1a842:	add    esp,0xc
   1a845:	cmp    BYTE PTR [ebp-0x18],bl
   1a848:	je     0x1a853
   1a84a:	push   DWORD PTR [ebp-0x14]
   1a84d:	call   0x11d3e
   1a852:	pop    ecx
   1a853:	cmp    DWORD PTR [ebp-0x40],ebx
   1a856:	je     0x1a7b9
   1a85c:	lea    eax,[ebp-0x50]
   1a85f:	push   eax
   1a860:	call   0x1d3ce
   1a865:	cmp    DWORD PTR [ebp+0x10],0x1
   1a869:	jne    0x1a894
   1a86b:	mov    eax,DWORD PTR [ebp+0x14]
   1a86e:	mov    DWORD PTR [eax],esi
   1a870:	jmp    0x1a8b4
   1a872:	lea    eax,[ebp-0x50]
   1a875:	push   eax
   1a876:	call   0x1d3ce
   1a87b:	mov    esi,DWORD PTR [ebp+0x8]
   1a87e:	mov    BYTE PTR [esi],bl
   1a880:	mov    DWORD PTR [esi+0x4],ebx
   1a883:	cmp    BYTE PTR [ebp-0x10],bl
   1a886:	je     0x1a7a6
   1a88c:	push   DWORD PTR [ebp-0xc]
   1a88f:	jmp    0x1a7a0
   1a894:	lea    eax,[ebp-0x18]
   1a897:	push   eax
   1a898:	lea    ecx,[ebp-0x10]
   1a89b:	mov    BYTE PTR [ebp-0x18],bl
   1a89e:	mov    DWORD PTR [ebp-0x14],ebx
   1a8a1:	call   0x12a8e
   1a8a6:	cmp    BYTE PTR [ebp-0x18],bl
   1a8a9:	je     0x1a8b4
   1a8ab:	push   DWORD PTR [ebp-0x14]
   1a8ae:	call   0x11d3e
   1a8b3:	pop    ecx
   1a8b4:	mov    eax,DWORD PTR [ebp+0x8]
   1a8b7:	mov    cl,BYTE PTR [ebp-0x10]
   1a8ba:	mov    BYTE PTR [eax],cl
   1a8bc:	mov    ecx,DWORD PTR [ebp-0xc]
   1a8bf:	mov    DWORD PTR [eax+0x4],ecx
   1a8c2:	pop    edi
   1a8c3:	pop    esi
   1a8c4:	pop    ebx
   1a8c5:	leave  
   1a8c6:	ret    0x10
   1a8c9:	int3   
   1a8ca:	int3   
   1a8cb:	int3   
   1a8cc:	int3   
   1a8cd:	int3   
   1a8ce:	xor    eax,eax
   1a8d0:	push   eax
   1a8d1:	push   eax
   1a8d2:	push   eax
   1a8d3:	push   eax
   1a8d4:	push   0x77c80
   1a8d9:	call   DWORD PTR ds:0x1f834
   1a8df:	test   eax,eax
   1a8e1:	setge  al
   1a8e4:	ret    
   1a8e5:	int3   
   1a8e6:	int3   
   1a8e7:	int3   
   1a8e8:	int3   
   1a8e9:	int3   
   1a8ea:	push   0x0
   1a8ec:	push   0x77c80
   1a8f1:	call   DWORD PTR ds:0x1f838
   1a8f7:	ret    
   1a8f8:	int3   
   1a8f9:	int3   
   1a8fa:	int3   
   1a8fb:	int3   
   1a8fc:	int3   
   1a8fd:	int3   
   1a8fe:	mov    edi,edi
   1a900:	push   esi
   1a901:	push   edi
   1a902:	push   0x1
   1a904:	xor    edi,edi
   1a906:	push   edi
   1a907:	mov    esi,ecx
   1a909:	call   0x14400
   1a90e:	cmp    DWORD PTR ds:0x77acc,edi
   1a914:	jne    0x1a92b
   1a916:	mov    ecx,eax
   1a918:	mov    DWORD PTR ds:0x77acc,ecx
   1a91e:	mov    DWORD PTR [ecx],edi
   1a920:	mov    ecx,DWORD PTR ds:0x77acc
   1a926:	xor    eax,eax
   1a928:	mov    DWORD PTR [ecx+0x8],edi
   1a92b:	inc    DWORD PTR ds:0x77ca8
   1a931:	cmp    eax,edi
   1a933:	je     0x1a93c
   1a935:	push   eax
   1a936:	call   0x11d3e
   1a93b:	pop    ecx
   1a93c:	push   edi
   1a93d:	push   DWORD PTR ds:0x77acc
   1a943:	mov    ecx,esi
   1a945:	call   0x14400
   1a94a:	mov    DWORD PTR [esi+0xc],edi
   1a94d:	mov    DWORD PTR [esi+0x4],eax
   1a950:	mov    DWORD PTR [eax],eax
   1a952:	mov    esi,DWORD PTR [esi+0x4]
   1a955:	pop    edi
   1a956:	mov    DWORD PTR [esi+0x8],esi
   1a959:	pop    esi
   1a95a:	ret    
   1a95b:	int3   
   1a95c:	int3   
   1a95d:	int3   
   1a95e:	int3   
   1a95f:	int3   
   1a960:	mov    edi,edi
   1a962:	push   ebx
   1a963:	push   esi
   1a964:	xor    ebx,ebx
   1a966:	push   ebx
   1a967:	push   0x77c80
   1a96c:	call   DWORD PTR ds:0x1f83c
   1a972:	push   0x10
   1a974:	call   0x11d08
   1a979:	mov    esi,eax
   1a97b:	pop    ecx
   1a97c:	cmp    esi,ebx
   1a97e:	je     0x1a992
   1a980:	mov    ecx,esi
   1a982:	mov    BYTE PTR [esi+0x8],bl
   1a985:	call   0x1a8fe
   1a98a:	mov    DWORD PTR ds:0x77ca0,esi
   1a990:	jmp    0x1a998
   1a992:	mov    DWORD PTR ds:0x77ca0,ebx
   1a998:	push   0x10
   1a99a:	call   0x11d08
   1a99f:	mov    esi,eax
   1a9a1:	pop    ecx
   1a9a2:	cmp    esi,ebx
   1a9a4:	je     0x1a9b8
   1a9a6:	mov    ecx,esi
   1a9a8:	mov    BYTE PTR [esi+0x8],bl
   1a9ab:	call   0x1483c
   1a9b0:	mov    DWORD PTR ds:0x77ca4,esi
   1a9b6:	jmp    0x1a9be
   1a9b8:	mov    DWORD PTR ds:0x77ca4,ebx
   1a9be:	pop    esi
   1a9bf:	pop    ebx
   1a9c0:	ret    
   1a9c1:	int3   
   1a9c2:	int3   
   1a9c3:	int3   
   1a9c4:	int3   
   1a9c5:	int3   
   1a9c6:	mov    eax,ecx
   1a9c8:	add    DWORD PTR [eax+0x8],0x4
   1a9cc:	mov    ecx,DWORD PTR [eax+0x8]
   1a9cf:	cmp    ecx,DWORD PTR [eax+0x4]
   1a9d2:	jne    0x1a9ed
   1a9d4:	add    DWORD PTR [eax+0xc],0x4
   1a9d8:	mov    ecx,DWORD PTR [eax+0xc]
   1a9db:	mov    ecx,DWORD PTR [ecx]
   1a9dd:	mov    DWORD PTR [eax],ecx
   1a9df:	add    ecx,0x1000
   1a9e5:	mov    DWORD PTR [eax+0x4],ecx
   1a9e8:	mov    ecx,DWORD PTR [eax]
   1a9ea:	mov    DWORD PTR [eax+0x8],ecx
   1a9ed:	ret    
   1a9ee:	int3   
   1a9ef:	int3   
   1a9f0:	int3   
   1a9f1:	int3   
   1a9f2:	int3   
   1a9f3:	int3   
   1a9f4:	mov    edi,edi
   1a9f6:	push   ebp
   1a9f7:	mov    ebp,esp
   1a9f9:	mov    eax,ecx
   1a9fb:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9fe:	mov    edx,DWORD PTR [ecx]
   1aa00:	mov    DWORD PTR [eax],edx
   1aa02:	mov    edx,DWORD PTR [ecx]
   1aa04:	add    edx,0x1000
   1aa0a:	mov    DWORD PTR [eax+0x4],edx
   1aa0d:	mov    edx,DWORD PTR [ebp+0x8]
   1aa10:	mov    DWORD PTR [eax+0x8],edx
   1aa13:	mov    DWORD PTR [eax+0xc],ecx
   1aa16:	pop    ebp
   1aa17:	ret    0x8
   1aa1a:	int3   
   1aa1b:	int3   
   1aa1c:	int3   
   1aa1d:	int3   
   1aa1e:	int3   
   1aa1f:	int3   
   1aa20:	mov    edi,edi
   1aa22:	push   ebp
   1aa23:	mov    ebp,esp
   1aa25:	mov    eax,DWORD PTR [ebp+0x8]
   1aa28:	mov    edx,DWORD PTR ds:0x77cdc
   1aa2e:	jmp    0x1aa32
   1aa30:	mov    eax,ecx
   1aa32:	mov    ecx,DWORD PTR [eax+0x8]
   1aa35:	cmp    ecx,edx
   1aa37:	jne    0x1aa30
   1aa39:	pop    ebp
   1aa3a:	ret    0x4
   1aa3d:	int3   
   1aa3e:	int3   
   1aa3f:	int3   
   1aa40:	int3   
   1aa41:	int3   
   1aa42:	mov    edi,edi
   1aa44:	push   ebp
   1aa45:	mov    ebp,esp
   1aa47:	mov    eax,DWORD PTR [ebp+0x8]
   1aa4a:	mov    edx,DWORD PTR ds:0x77cdc
   1aa50:	jmp    0x1aa54
   1aa52:	mov    eax,ecx
   1aa54:	mov    ecx,DWORD PTR [eax]
   1aa56:	cmp    ecx,edx
   1aa58:	jne    0x1aa52
   1aa5a:	pop    ebp
   1aa5b:	ret    0x4
   1aa5e:	int3   
   1aa5f:	int3   
   1aa60:	int3   
   1aa61:	int3   
   1aa62:	int3   
   1aa63:	int3   
   1aa64:	mov    edi,edi
   1aa66:	push   esi
   1aa67:	mov    esi,ecx
   1aa69:	mov    ecx,DWORD PTR [esi]
   1aa6b:	mov    eax,DWORD PTR [ecx+0x8]
   1aa6e:	cmp    eax,DWORD PTR ds:0x77cdc
   1aa74:	je     0x1aa82
   1aa76:	push   eax
   1aa77:	call   0x1aa42
   1aa7c:	jmp    0x1aa91
   1aa7e:	mov    DWORD PTR [esi],eax
   1aa80:	mov    ecx,eax
   1aa82:	mov    eax,DWORD PTR [ecx+0x4]
   1aa85:	cmp    ecx,DWORD PTR [eax+0x8]
   1aa88:	je     0x1aa7e
   1aa8a:	mov    ecx,DWORD PTR [esi]
   1aa8c:	cmp    DWORD PTR [ecx+0x8],eax
   1aa8f:	je     0x1aa93
   1aa91:	mov    DWORD PTR [esi],eax
   1aa93:	pop    esi
   1aa94:	ret    
   1aa95:	int3   
   1aa96:	int3   
   1aa97:	int3   
   1aa98:	int3   
   1aa99:	int3   
   1aa9a:	mov    edi,edi
   1aa9c:	push   ebp
   1aa9d:	mov    ebp,esp
   1aa9f:	mov    eax,DWORD PTR [ebp+0x8]
   1aaa2:	jmp    0x1aab2
   1aaa4:	mov    ecx,DWORD PTR [eax]
   1aaa6:	mov    edx,DWORD PTR [ebp+0x10]
   1aaa9:	add    DWORD PTR [ebp+0x10],0x4
   1aaad:	mov    DWORD PTR [edx],ecx
   1aaaf:	add    eax,0x4
   1aab2:	cmp    eax,DWORD PTR [ebp+0xc]
   1aab5:	jne    0x1aaa4
   1aab7:	mov    eax,DWORD PTR [ebp+0x10]
   1aaba:	pop    ebp
   1aabb:	ret    0xc
   1aabe:	int3   
   1aabf:	int3   
   1aac0:	int3   
   1aac1:	int3   
   1aac2:	int3   
   1aac3:	int3   
   1aac4:	mov    edi,edi
   1aac6:	push   ebp
   1aac7:	mov    ebp,esp
   1aac9:	mov    eax,DWORD PTR [ebp+0x8]
   1aacc:	test   eax,eax
   1aace:	jge    0x1aad2
   1aad0:	xor    eax,eax
   1aad2:	shl    eax,0x2
   1aad5:	push   eax
   1aad6:	call   0x11d08
   1aadb:	pop    ecx
   1aadc:	pop    ebp
   1aadd:	ret    0x8
   1aae0:	int3   
   1aae1:	int3   
   1aae2:	int3   
   1aae3:	int3   
   1aae4:	int3   
   1aae5:	int3   
   1aae6:	mov    edi,edi
   1aae8:	push   ebp
   1aae9:	mov    ebp,esp
   1aaeb:	push   esi
   1aaec:	mov    esi,ecx
   1aaee:	push   DWORD PTR [esi]
   1aaf0:	call   0x11d3e
   1aaf5:	test   BYTE PTR [ebp+0x8],0x1
   1aaf9:	pop    ecx
   1aafa:	je     0x1ab03
   1aafc:	push   esi
   1aafd:	call   0x11d3e
   1ab02:	pop    ecx
   1ab03:	mov    eax,esi
   1ab05:	pop    esi
   1ab06:	pop    ebp
   1ab07:	ret    0x4
   1ab0a:	int3   
   1ab0b:	int3   
   1ab0c:	int3   
   1ab0d:	int3   
   1ab0e:	int3   
   1ab0f:	int3   
   1ab10:	mov    edi,edi
   1ab12:	push   ebp
   1ab13:	mov    ebp,esp
   1ab15:	mov    eax,ds:0x77cd4
   1ab1a:	sub    esp,0x20
   1ab1d:	push   ebx
   1ab1e:	push   esi
   1ab1f:	push   edi
   1ab20:	lea    esi,[eax+0x4]
   1ab23:	lea    edi,[ebp-0x10]
   1ab26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab2a:	lea    ebx,[eax+0x14]
   1ab2d:	jmp    0x1ab4b
   1ab2f:	mov    eax,DWORD PTR [eax]
   1ab31:	mov    ecx,DWORD PTR [eax+0x8]
   1ab34:	cmp    ecx,DWORD PTR [ebp+0x8]
   1ab37:	jne    0x1ab43
   1ab39:	cmp    BYTE PTR [eax+0x24],0x0
   1ab3d:	jne    0x1ab5c
   1ab3f:	mov    BYTE PTR [eax+0x24],0x1
   1ab43:	lea    ecx,[ebp-0x10]
   1ab46:	call   0x1a9c6
   1ab4b:	mov    eax,DWORD PTR [ebp-0x8]
   1ab4e:	lea    edi,[ebp-0x20]
   1ab51:	mov    esi,ebx
   1ab53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab57:	cmp    eax,DWORD PTR [ebp-0x18]
   1ab5a:	jne    0x1ab2f
   1ab5c:	pop    edi
   1ab5d:	pop    esi
   1ab5e:	pop    ebx
   1ab5f:	leave  
   1ab60:	ret    0x4
   1ab63:	int3   
   1ab64:	int3   
   1ab65:	int3   
   1ab66:	int3   
   1ab67:	int3   
   1ab68:	mov    eax,ecx
   1ab6a:	xor    ecx,ecx
   1ab6c:	mov    DWORD PTR [eax+0x4],ecx
   1ab6f:	mov    DWORD PTR [eax+0x8],ecx
   1ab72:	mov    DWORD PTR [eax+0xc],ecx
   1ab75:	mov    DWORD PTR [eax+0x10],ecx
   1ab78:	mov    DWORD PTR [eax+0x14],ecx
   1ab7b:	mov    DWORD PTR [eax+0x18],ecx
   1ab7e:	mov    DWORD PTR [eax+0x1c],ecx
   1ab81:	mov    DWORD PTR [eax+0x20],ecx
   1ab84:	mov    DWORD PTR [eax+0x24],ecx
   1ab87:	mov    DWORD PTR [eax+0x28],ecx
   1ab8a:	mov    DWORD PTR [eax+0x2c],ecx
   1ab8d:	ret    0x4
   1ab90:	int3   
   1ab91:	int3   
   1ab92:	int3   
   1ab93:	int3   
   1ab94:	int3   
   1ab95:	int3   
   1ab96:	mov    edi,edi
   1ab98:	push   ebp
   1ab99:	mov    ebp,esp
   1ab9b:	sub    esp,0x10
   1ab9e:	push   esi
   1ab9f:	push   edi
   1aba0:	lea    esi,[ecx+0x4]
   1aba3:	lea    edi,[ebp-0x10]
   1aba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abaa:	mov    eax,DWORD PTR [ebp-0x8]
   1abad:	pop    edi
   1abae:	pop    esi
   1abaf:	leave  
   1abb0:	ret    
   1abb1:	int3   
   1abb2:	int3   
   1abb3:	int3   
   1abb4:	int3   
   1abb5:	int3   
   1abb6:	mov    edi,edi
   1abb8:	push   ebp
   1abb9:	mov    ebp,esp
   1abbb:	mov    edx,DWORD PTR [ebp+0x8]
   1abbe:	mov    eax,DWORD PTR [edx+0x8]
   1abc1:	push   esi
   1abc2:	mov    esi,DWORD PTR [eax]
   1abc4:	mov    DWORD PTR [edx+0x8],esi
   1abc7:	mov    esi,DWORD PTR [eax]
   1abc9:	cmp    esi,DWORD PTR ds:0x77cdc
   1abcf:	je     0x1abd4
   1abd1:	mov    DWORD PTR [esi+0x4],edx
   1abd4:	mov    esi,DWORD PTR [edx+0x4]
   1abd7:	mov    DWORD PTR [eax+0x4],esi
   1abda:	mov    ecx,DWORD PTR [ecx+0x4]
   1abdd:	pop    esi
   1abde:	cmp    edx,DWORD PTR [ecx+0x4]
   1abe1:	jne    0x1abe8
   1abe3:	mov    DWORD PTR [ecx+0x4],eax
   1abe6:	jmp    0x1abf6
   1abe8:	mov    ecx,DWORD PTR [edx+0x4]
   1abeb:	cmp    edx,DWORD PTR [ecx]
   1abed:	jne    0x1abf3
   1abef:	mov    DWORD PTR [ecx],eax
   1abf1:	jmp    0x1abf6
   1abf3:	mov    DWORD PTR [ecx+0x8],eax
   1abf6:	mov    DWORD PTR [eax],edx
   1abf8:	mov    DWORD PTR [edx+0x4],eax
   1abfb:	pop    ebp
   1abfc:	ret    0x4
   1abff:	int3   
   1ac00:	int3   
   1ac01:	int3   
   1ac02:	int3   
   1ac03:	int3   
   1ac04:	mov    edi,edi
   1ac06:	push   ebp
   1ac07:	mov    ebp,esp
   1ac09:	mov    edx,DWORD PTR [ebp+0x8]
   1ac0c:	mov    eax,DWORD PTR [edx]
   1ac0e:	push   esi
   1ac0f:	mov    esi,DWORD PTR [eax+0x8]
   1ac12:	mov    DWORD PTR [edx],esi
   1ac14:	mov    esi,DWORD PTR [eax+0x8]
   1ac17:	cmp    esi,DWORD PTR ds:0x77cdc
   1ac1d:	je     0x1ac22
   1ac1f:	mov    DWORD PTR [esi+0x4],edx
   1ac22:	mov    esi,DWORD PTR [edx+0x4]
   1ac25:	mov    DWORD PTR [eax+0x4],esi
   1ac28:	mov    ecx,DWORD PTR [ecx+0x4]
   1ac2b:	pop    esi
   1ac2c:	cmp    edx,DWORD PTR [ecx+0x4]
   1ac2f:	jne    0x1ac36
   1ac31:	mov    DWORD PTR [ecx+0x4],eax
   1ac34:	jmp    0x1ac45
   1ac36:	mov    ecx,DWORD PTR [edx+0x4]
   1ac39:	cmp    edx,DWORD PTR [ecx+0x8]
   1ac3c:	jne    0x1ac43
   1ac3e:	mov    DWORD PTR [ecx+0x8],eax
   1ac41:	jmp    0x1ac45
   1ac43:	mov    DWORD PTR [ecx],eax
   1ac45:	mov    DWORD PTR [eax+0x8],edx
   1ac48:	mov    DWORD PTR [edx+0x4],eax
   1ac4b:	pop    ebp
   1ac4c:	ret    0x4
   1ac4f:	int3   
   1ac50:	int3   
   1ac51:	int3   
   1ac52:	int3   
   1ac53:	int3   
   1ac54:	mov    edi,edi
   1ac56:	push   esi
   1ac57:	mov    esi,ecx
   1ac59:	mov    ecx,DWORD PTR [esi]
   1ac5b:	cmp    DWORD PTR [ecx+0x14],0x0
   1ac5f:	jne    0x1ac6e
   1ac61:	mov    eax,DWORD PTR [ecx+0x4]
   1ac64:	cmp    DWORD PTR [eax+0x4],ecx
   1ac67:	jne    0x1ac6e
   1ac69:	mov    eax,DWORD PTR [ecx+0x8]
   1ac6c:	jmp    0x1ac8b
   1ac6e:	mov    eax,DWORD PTR [ecx]
   1ac70:	cmp    eax,DWORD PTR ds:0x77cdc
   1ac76:	je     0x1ac84
   1ac78:	push   eax
   1ac79:	call   0x1aa20
   1ac7e:	jmp    0x1ac8b
   1ac80:	mov    DWORD PTR [esi],eax
   1ac82:	mov    ecx,eax
   1ac84:	mov    eax,DWORD PTR [ecx+0x4]
   1ac87:	cmp    ecx,DWORD PTR [eax]
   1ac89:	je     0x1ac80
   1ac8b:	mov    DWORD PTR [esi],eax
   1ac8d:	pop    esi
   1ac8e:	ret    
   1ac8f:	int3   
   1ac90:	int3   
   1ac91:	int3   
   1ac92:	int3   
   1ac93:	int3   
   1ac94:	mov    edi,edi
   1ac96:	push   ebp
   1ac97:	mov    ebp,esp
   1ac99:	mov    eax,DWORD PTR [ecx+0x4]
   1ac9c:	push   esi
   1ac9d:	mov    esi,DWORD PTR [eax+0x4]
   1aca0:	push   edi
   1aca1:	mov    edi,eax
   1aca3:	jmp    0x1acbe
   1aca5:	push   DWORD PTR [ebp+0x8]
   1aca8:	lea    eax,[esi+0xc]
   1acab:	push   eax
   1acac:	call   0x19f08
   1acb1:	test   al,al
   1acb3:	je     0x1acba
   1acb5:	mov    esi,DWORD PTR [esi+0x8]
   1acb8:	jmp    0x1acbe
   1acba:	mov    edi,esi
   1acbc:	mov    esi,DWORD PTR [esi]
   1acbe:	cmp    esi,DWORD PTR ds:0x77cdc
   1acc4:	jne    0x1aca5
   1acc6:	mov    eax,edi
   1acc8:	pop    edi
   1acc9:	pop    esi
   1acca:	pop    ebp
   1accb:	ret    0x4
   1acce:	int3   
   1accf:	int3   
   1acd0:	int3   
   1acd1:	int3   
   1acd2:	int3   
   1acd3:	int3   
   1acd4:	mov    edi,edi
   1acd6:	push   ebp
   1acd7:	mov    ebp,esp
   1acd9:	mov    eax,DWORD PTR [ecx+0x4]
   1acdc:	push   esi
   1acdd:	mov    esi,DWORD PTR [eax+0x4]
   1ace0:	push   edi
   1ace1:	mov    edi,eax
   1ace3:	jmp    0x1acfe
   1ace5:	lea    eax,[esi+0xc]
   1ace8:	push   eax
   1ace9:	push   DWORD PTR [ebp+0x8]
   1acec:	call   0x19f08
   1acf1:	test   al,al
   1acf3:	je     0x1acfb
   1acf5:	mov    edi,esi
   1acf7:	mov    esi,DWORD PTR [esi]
   1acf9:	jmp    0x1acfe
   1acfb:	mov    esi,DWORD PTR [esi+0x8]
   1acfe:	cmp    esi,DWORD PTR ds:0x77cdc
   1ad04:	jne    0x1ace5
   1ad06:	mov    eax,edi
   1ad08:	pop    edi
   1ad09:	pop    esi
   1ad0a:	pop    ebp
   1ad0b:	ret    0x4
   1ad0e:	int3   
   1ad0f:	int3   
   1ad10:	int3   
   1ad11:	int3   
   1ad12:	int3   
   1ad13:	int3   
   1ad14:	mov    edi,edi
   1ad16:	push   ebp
   1ad17:	mov    ebp,esp
   1ad19:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad1c:	test   ecx,ecx
   1ad1e:	je     0x1ad28
   1ad20:	push   DWORD PTR [ebp+0xc]
   1ad23:	call   0x1369e
   1ad28:	pop    ebp
   1ad29:	ret    0x8
   1ad2c:	int3   
   1ad2d:	int3   
   1ad2e:	int3   
   1ad2f:	int3   
   1ad30:	int3   
   1ad31:	int3   
   1ad32:	mov    edi,edi
   1ad34:	push   ebp
   1ad35:	mov    ebp,esp
   1ad37:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad3a:	push   0x0
   1ad3c:	call   0x1aae6
   1ad41:	pop    ebp
   1ad42:	ret    0x4
   1ad45:	int3   
   1ad46:	int3   
   1ad47:	int3   
   1ad48:	int3   
   1ad49:	int3   
   1ad4a:	mov    edi,edi
   1ad4c:	push   ebp
   1ad4d:	mov    ebp,esp
   1ad4f:	push   edi
   1ad50:	mov    edi,DWORD PTR [ebp+0xc]
   1ad53:	cmp    DWORD PTR [ebp+0x8],edi
   1ad56:	je     0x1ad6c
   1ad58:	push   esi
   1ad59:	mov    esi,DWORD PTR [ebp+0x10]
   1ad5c:	inc    DWORD PTR [esi]
   1ad5e:	lea    ecx,[ebp+0x8]
   1ad61:	call   0x1aa64
   1ad66:	cmp    DWORD PTR [ebp+0x8],edi
   1ad69:	jne    0x1ad5c
   1ad6b:	pop    esi
   1ad6c:	pop    edi
   1ad6d:	pop    ebp
   1ad6e:	ret    
   1ad6f:	int3   
   1ad70:	int3   
   1ad71:	int3   
   1ad72:	int3   
   1ad73:	int3   
   1ad74:	mov    edi,edi
   1ad76:	push   ebp
   1ad77:	mov    ebp,esp
   1ad79:	mov    eax,DWORD PTR [ebp+0xc]
   1ad7c:	mov    ecx,DWORD PTR [eax+0x34]
   1ad7f:	lea    eax,[ecx+eax*1+0x40]
   1ad83:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad86:	push   0xffffffff
   1ad88:	push   eax
   1ad89:	call   0x1367e
   1ad8e:	mov    eax,DWORD PTR [ebp+0x8]
   1ad91:	pop    ebp
   1ad92:	ret    0x8
   1ad95:	int3   
   1ad96:	int3   
   1ad97:	int3   
   1ad98:	int3   
   1ad99:	int3   
   1ad9a:	mov    edi,edi
   1ad9c:	push   ebp
   1ad9d:	mov    ebp,esp
   1ad9f:	mov    eax,DWORD PTR [ebp+0xc]
   1ada2:	mov    ecx,DWORD PTR [eax+0x38]
   1ada5:	lea    eax,[ecx+eax*1+0x40]
   1ada9:	mov    ecx,DWORD PTR [ebp+0x8]
   1adac:	push   0xffffffff
   1adae:	push   eax
   1adaf:	call   0x1367e
   1adb4:	mov    eax,DWORD PTR [ebp+0x8]
   1adb7:	pop    ebp
   1adb8:	ret    0x8
   1adbb:	int3   
   1adbc:	int3   
   1adbd:	int3   
   1adbe:	int3   
   1adbf:	int3   
   1adc0:	mov    edi,edi
   1adc2:	push   ebp
   1adc3:	mov    ebp,esp
   1adc5:	mov    eax,DWORD PTR [ebp+0xc]
   1adc8:	mov    ecx,DWORD PTR [eax+0x3c]
   1adcb:	lea    eax,[ecx+eax*1+0x40]
   1adcf:	mov    ecx,DWORD PTR [ebp+0x8]
   1add2:	push   0xffffffff
   1add4:	push   eax
   1add5:	call   0x1367e
   1adda:	mov    eax,DWORD PTR [ebp+0x8]
   1addd:	pop    ebp
   1adde:	ret    0x8
   1ade1:	int3   
   1ade2:	int3   
   1ade3:	int3   
   1ade4:	int3   
   1ade5:	int3   
   1ade6:	mov    edi,edi
   1ade8:	push   ebp
   1ade9:	mov    ebp,esp
   1adeb:	sub    esp,0x1c
   1adee:	mov    eax,ds:0x77cd4
   1adf3:	and    DWORD PTR [ebp-0x4],0x0
   1adf7:	push   ebx
   1adf8:	mov    ebx,DWORD PTR [ebp+0x8]
   1adfb:	push   esi
   1adfc:	push   edi
   1adfd:	lea    esi,[eax+0x4]
   1ae00:	mov    edi,ebx
   1ae02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae06:	lea    esi,[eax+0x14]
   1ae09:	jmp    0x1ae66
   1ae0b:	push   DWORD PTR [ebp+0xc]
   1ae0e:	mov    eax,DWORD PTR [ebx+0x8]
   1ae11:	push   DWORD PTR [eax]
   1ae13:	or     DWORD PTR [ebp-0x4],0x1
   1ae17:	lea    eax,[ebp-0xc]
   1ae1a:	push   eax
   1ae1b:	call   0x1adc0
   1ae20:	push   eax
   1ae21:	call   0x19f18
   1ae26:	test   al,al
   1ae28:	je     0x1ae39
   1ae2a:	mov    eax,DWORD PTR [ebx+0x8]
   1ae2d:	mov    eax,DWORD PTR [eax]
   1ae2f:	cmp    BYTE PTR [eax+0x1c],0x0
   1ae33:	mov    BYTE PTR [ebp+0xb],0x1
   1ae37:	jne    0x1ae3d
   1ae39:	mov    BYTE PTR [ebp+0xb],0x0
   1ae3d:	test   BYTE PTR [ebp-0x4],0x1
   1ae41:	je     0x1ae50
   1ae43:	push   DWORD PTR [ebp-0xc]
   1ae46:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1ae4a:	call   0x11d3e
   1ae4f:	pop    ecx
   1ae50:	cmp    BYTE PTR [ebp+0xb],0x0
   1ae54:	jne    0x1ae75
   1ae56:	mov    ecx,ebx
   1ae58:	call   0x1a9c6
   1ae5d:	mov    esi,DWORD PTR ds:0x77cd4
   1ae63:	add    esi,0x14
   1ae66:	mov    eax,DWORD PTR [ebx+0x8]
   1ae69:	lea    edi,[ebp-0x1c]
   1ae6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae70:	cmp    eax,DWORD PTR [ebp-0x14]
   1ae73:	jne    0x1ae0b
   1ae75:	pop    edi
   1ae76:	pop    esi
   1ae77:	mov    eax,ebx
   1ae79:	pop    ebx
   1ae7a:	leave  
   1ae7b:	ret    0x8
   1ae7e:	int3   
   1ae7f:	int3   
   1ae80:	int3   
   1ae81:	int3   
   1ae82:	int3   
   1ae83:	int3   
   1ae84:	mov    edi,edi
   1ae86:	push   ebp
   1ae87:	mov    ebp,esp
   1ae89:	sub    esp,0x28
   1ae8c:	mov    eax,DWORD PTR [ebp+0x8]
   1ae8f:	push   ebx
   1ae90:	push   esi
   1ae91:	push   edi
   1ae92:	lea    esi,[eax+0x4]
   1ae95:	mov    DWORD PTR [ebp-0x8],esi
   1ae98:	lea    edi,[ebp-0x18]
   1ae9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae9d:	and    DWORD PTR [ebp-0x4],0x0
   1aea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aea3:	lea    ecx,[eax+0x14]
   1aea6:	mov    eax,DWORD PTR [ebp-0x10]
   1aea9:	mov    esi,ecx
   1aeab:	lea    edi,[ebp-0x28]
   1aeae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aeaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aeb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aeb1:	push   0x4
   1aeb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aeb4:	pop    ebx
   1aeb5:	mov    DWORD PTR [ebp+0x8],ecx
   1aeb8:	cmp    eax,DWORD PTR [ebp-0x20]
   1aebb:	je     0x1aedd
   1aebd:	mov    esi,ecx
   1aebf:	lea    edi,[ebp-0x28]
   1aec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aec6:	mov    eax,DWORD PTR [eax]
   1aec8:	add    ebx,DWORD PTR [eax]
   1aeca:	inc    DWORD PTR [ebp-0x4]
   1aecd:	lea    ecx,[ebp-0x18]
   1aed0:	call   0x1a9c6
   1aed5:	mov    eax,DWORD PTR [ebp-0x10]
   1aed8:	cmp    eax,DWORD PTR [ebp-0x20]
   1aedb:	jne    0x1aec6
   1aedd:	mov    eax,DWORD PTR [ebp+0xc]
   1aee0:	cmp    ebx,DWORD PTR [eax+0x4]
   1aee3:	mov    DWORD PTR [eax+0x4],ebx
   1aee6:	jbe    0x1aef0
   1aee8:	mov    DWORD PTR [eax],0x1
   1aeee:	jmp    0x1af36
   1aef0:	and    DWORD PTR [eax],0x0
   1aef3:	mov    esi,DWORD PTR [ebp-0x8]
   1aef6:	lea    ebx,[eax+0x8]
   1aef9:	mov    eax,DWORD PTR [ebp-0x4]
   1aefc:	mov    DWORD PTR [ebx],eax
   1aefe:	lea    edi,[ebp-0x28]
   1af01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af04:	add    ebx,0x4
   1af07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af08:	jmp    0x1af24
   1af0a:	mov    eax,DWORD PTR [esi]
   1af0c:	push   DWORD PTR [eax]
   1af0e:	push   eax
   1af0f:	push   ebx
   1af10:	call   0x1e1b6
   1af15:	mov    eax,DWORD PTR [esi]
   1af17:	add    ebx,DWORD PTR [eax]
   1af19:	add    esp,0xc
   1af1c:	lea    ecx,[ebp-0x28]
   1af1f:	call   0x1a9c6
   1af24:	mov    esi,DWORD PTR [ebp+0x8]
   1af27:	lea    edi,[ebp-0x18]
   1af2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1af2e:	mov    esi,DWORD PTR [ebp-0x20]
   1af31:	cmp    esi,DWORD PTR [ebp-0x10]
   1af34:	jne    0x1af0a
   1af36:	pop    edi
   1af37:	pop    esi
   1af38:	pop    ebx
   1af39:	leave  
   1af3a:	ret    0x8
   1af3d:	int3   
   1af3e:	int3   
   1af3f:	int3   
   1af40:	int3   
   1af41:	int3   
   1af42:	push   0x8
   1af44:	push   0x76c50
   1af49:	call   0x1e1dc
   1af4e:	xor    esi,esi
   1af50:	push   esi
   1af51:	push   esi
   1af52:	push   esi
   1af53:	push   esi
   1af54:	push   0x77cac
   1af59:	call   DWORD PTR ds:0x1f834
   1af5f:	cmp    eax,esi
   1af61:	jl     0x1afa2
   1af63:	mov    DWORD PTR [ebp-0x4],esi
   1af66:	push   DWORD PTR [ebp+0x8]
   1af69:	push   DWORD PTR ds:0x77cd4
   1af6f:	call   0x1ae84
   1af74:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1af7b:	jmp    0x1af96
   1af7d:	xor    eax,eax
   1af7f:	inc    eax
   1af80:	ret    
   1af81:	mov    esp,DWORD PTR [ebp-0x18]
   1af84:	mov    eax,DWORD PTR [ebp+0x8]
   1af87:	mov    DWORD PTR [eax],0x2
   1af8d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1af94:	xor    esi,esi
   1af96:	push   esi
   1af97:	push   0x77cac
   1af9c:	call   DWORD PTR ds:0x1f838
   1afa2:	call   0x1e221
   1afa7:	ret    0x4
   1afaa:	int3   
   1afab:	int3   
   1afac:	int3   
   1afad:	int3   
   1afae:	int3   
   1afaf:	int3   
   1afb0:	mov    edi,edi
   1afb2:	push   ebp
   1afb3:	mov    ebp,esp
   1afb5:	sub    esp,0x10
   1afb8:	push   ebx
   1afb9:	mov    ebx,ecx
   1afbb:	mov    eax,DWORD PTR [ebx+0x10]
   1afbe:	push   esi
   1afbf:	lea    ecx,[eax+0x4]
   1afc2:	push   edi
   1afc3:	mov    DWORD PTR [ebx+0x10],ecx
   1afc6:	push   DWORD PTR [eax]
   1afc8:	call   0x11d3e
   1afcd:	xor    eax,eax
   1afcf:	pop    ecx
   1afd0:	cmp    DWORD PTR [ebx+0x2c],eax
   1afd3:	jne    0x1b000
   1afd5:	mov    DWORD PTR [ebp-0x10],eax
   1afd8:	mov    DWORD PTR [ebp-0xc],eax
   1afdb:	mov    DWORD PTR [ebp-0x8],eax
   1afde:	mov    DWORD PTR [ebp-0x4],eax
   1afe1:	lea    edi,[ebx+0x4]
   1afe4:	lea    esi,[ebp-0x10]
   1afe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1afe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1afe9:	push   DWORD PTR [ebx+0x24]
   1afec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1afed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1afee:	lea    edi,[ebx+0x14]
   1aff1:	lea    esi,[ebp-0x10]
   1aff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aff8:	call   0x11d3e
   1affd:	pop    ecx
   1affe:	jmp    0x1b017
   1b000:	mov    eax,DWORD PTR [ebx+0x10]
   1b003:	push   eax
   1b004:	push   DWORD PTR [eax]
   1b006:	lea    ecx,[ebp-0x10]
   1b009:	call   0x1a9f4
   1b00e:	lea    edi,[ebx+0x4]
   1b011:	mov    esi,eax
   1b013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b017:	pop    edi
   1b018:	pop    esi
   1b019:	pop    ebx
   1b01a:	leave  
   1b01b:	ret    
   1b01c:	int3   
   1b01d:	int3   
   1b01e:	int3   
   1b01f:	int3   
   1b020:	int3   
   1b021:	int3   
   1b022:	mov    edi,edi
   1b024:	push   ebp
   1b025:	mov    ebp,esp
   1b027:	mov    eax,DWORD PTR [ebp+0xc]
   1b02a:	push   esi
   1b02b:	mov    esi,ecx
   1b02d:	mov    ecx,DWORD PTR [eax]
   1b02f:	mov    DWORD PTR [ebp+0xc],ecx
   1b032:	mov    ecx,DWORD PTR [eax+0x4]
   1b035:	mov    edx,DWORD PTR [eax]
   1b037:	mov    DWORD PTR [ecx],edx
   1b039:	mov    ecx,DWORD PTR [eax]
   1b03b:	mov    edx,DWORD PTR [eax+0x4]
   1b03e:	push   eax
   1b03f:	mov    DWORD PTR [ecx+0x4],edx
   1b042:	call   0x11d3e
   1b047:	mov    eax,DWORD PTR [ebp+0x8]
   1b04a:	dec    DWORD PTR [esi+0x8]
   1b04d:	pop    ecx
   1b04e:	mov    ecx,DWORD PTR [ebp+0xc]
   1b051:	mov    DWORD PTR [eax],ecx
   1b053:	pop    esi
   1b054:	pop    ebp
   1b055:	ret    0x8
   1b058:	int3   
   1b059:	int3   
   1b05a:	int3   
   1b05b:	int3   
   1b05c:	int3   
   1b05d:	int3   
   1b05e:	mov    edi,edi
   1b060:	push   ebp
   1b061:	mov    ebp,esp
   1b063:	push   ecx
   1b064:	push   esi
   1b065:	mov    esi,ecx
   1b067:	jmp    0x1b07c
   1b069:	mov    eax,ecx
   1b06b:	mov    ecx,DWORD PTR [ecx]
   1b06d:	push   eax
   1b06e:	lea    eax,[ebp-0x4]
   1b071:	mov    DWORD PTR [ebp+0xc],ecx
   1b074:	push   eax
   1b075:	mov    ecx,esi
   1b077:	call   0x1b022
   1b07c:	mov    ecx,DWORD PTR [ebp+0xc]
   1b07f:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b082:	jne    0x1b069
   1b084:	mov    eax,DWORD PTR [ebp+0x8]
   1b087:	mov    DWORD PTR [eax],ecx
   1b089:	pop    esi
   1b08a:	leave  
   1b08b:	ret    0xc
   1b08e:	int3   
   1b08f:	int3   
   1b090:	int3   
   1b091:	int3   
   1b092:	int3   
   1b093:	int3   
   1b094:	mov    edi,edi
   1b096:	push   ebp
   1b097:	mov    ebp,esp
   1b099:	push   0x0
   1b09b:	push   0xc
   1b09d:	call   0x13460
   1b0a2:	mov    ecx,DWORD PTR [ebp+0x8]
   1b0a5:	test   ecx,ecx
   1b0a7:	jne    0x1b0ab
   1b0a9:	mov    ecx,eax
   1b0ab:	mov    DWORD PTR [eax],ecx
   1b0ad:	mov    ecx,DWORD PTR [ebp+0xc]
   1b0b0:	test   ecx,ecx
   1b0b2:	jne    0x1b0b6
   1b0b4:	mov    ecx,eax
   1b0b6:	mov    DWORD PTR [eax+0x4],ecx
   1b0b9:	pop    ebp
   1b0ba:	ret    0x8
   1b0bd:	int3   
   1b0be:	int3   
   1b0bf:	int3   
   1b0c0:	int3   
   1b0c1:	int3   
   1b0c2:	mov    edi,edi
   1b0c4:	push   esi
   1b0c5:	mov    esi,ecx
   1b0c7:	mov    eax,DWORD PTR [esi+0x28]
   1b0ca:	shl    eax,0x2
   1b0cd:	push   0x0
   1b0cf:	push   eax
   1b0d0:	call   0x13460
   1b0d5:	mov    DWORD PTR [esi+0x24],eax
   1b0d8:	pop    esi
   1b0d9:	ret    
   1b0da:	int3   
   1b0db:	int3   
   1b0dc:	int3   
   1b0dd:	int3   
   1b0de:	int3   
   1b0df:	int3   
   1b0e0:	mov    edi,edi
   1b0e2:	push   ebp
   1b0e3:	mov    ebp,esp
   1b0e5:	push   ebx
   1b0e6:	push   esi
   1b0e7:	push   edi
   1b0e8:	mov    edi,DWORD PTR [ebp+0x8]
   1b0eb:	mov    eax,0xfffffff
   1b0f0:	mov    esi,ecx
   1b0f2:	cmp    edi,eax
   1b0f4:	jbe    0x1b0f8
   1b0f6:	mov    edi,eax
   1b0f8:	mov    eax,edi
   1b0fa:	push   0x0
   1b0fc:	shl    eax,0x2
   1b0ff:	push   eax
   1b100:	call   0x13460
   1b105:	mov    ebx,eax
   1b107:	mov    eax,edi
   1b109:	shr    eax,0x2
   1b10c:	lea    eax,[ebx+eax*4]
   1b10f:	push   eax
   1b110:	mov    DWORD PTR [ebp+0x8],eax
   1b113:	mov    eax,DWORD PTR [esi+0x20]
   1b116:	add    eax,0x4
   1b119:	push   eax
   1b11a:	push   DWORD PTR [esi+0x10]
   1b11d:	call   0x1aa9a
   1b122:	push   DWORD PTR [esi+0x24]
   1b125:	call   0x11d3e
   1b12a:	mov    eax,DWORD PTR [ebp+0x8]
   1b12d:	pop    ecx
   1b12e:	mov    DWORD PTR [esi+0x28],edi
   1b131:	pop    edi
   1b132:	mov    DWORD PTR [esi+0x24],ebx
   1b135:	pop    esi
   1b136:	pop    ebx
   1b137:	pop    ebp
   1b138:	ret    0x4
   1b13b:	int3   
   1b13c:	int3   
   1b13d:	int3   
   1b13e:	int3   
   1b13f:	int3   
   1b140:	mov    edi,edi
   1b142:	push   ebp
   1b143:	mov    ebp,esp
   1b145:	push   0x0
   1b147:	push   0x18
   1b149:	call   0x13460
   1b14e:	mov    ecx,DWORD PTR [ebp+0x8]
   1b151:	mov    DWORD PTR [eax+0x4],ecx
   1b154:	mov    ecx,DWORD PTR [ebp+0xc]
   1b157:	mov    DWORD PTR [eax+0x14],ecx
   1b15a:	pop    ebp
   1b15b:	ret    0x8
   1b15e:	int3   
   1b15f:	int3   
   1b160:	int3   
   1b161:	int3   
   1b162:	int3   
   1b163:	int3   
   1b164:	mov    edi,edi
   1b166:	push   ebp
   1b167:	mov    ebp,esp
   1b169:	push   ecx
   1b16a:	push   DWORD PTR [ebp-0x4]
   1b16d:	push   DWORD PTR [ebp+0x10]
   1b170:	push   DWORD PTR [ebp+0xc]
   1b173:	push   DWORD PTR [ebp+0x8]
   1b176:	call   0x1ad4a
   1b17b:	add    esp,0x10
   1b17e:	leave  
   1b17f:	ret    
   1b180:	int3   
   1b181:	int3   
   1b182:	int3   
   1b183:	int3   
   1b184:	int3   
   1b185:	int3   
   1b186:	mov    edi,edi
   1b188:	push   ebp
   1b189:	mov    ebp,esp
   1b18b:	sub    esp,0x28
   1b18e:	push   ebx
   1b18f:	mov    ebx,DWORD PTR [ebp+0x8]
   1b192:	push   esi
   1b193:	push   edi
   1b194:	push   0xffffffff
   1b196:	push   ebx
   1b197:	lea    ecx,[ebp-0x8]
   1b19a:	call   0x12ba8
   1b19f:	and    DWORD PTR [ebx],0x0
   1b1a2:	lea    eax,[ebp-0x8]
   1b1a5:	push   eax
   1b1a6:	lea    eax,[ebp-0x18]
   1b1a9:	push   eax
   1b1aa:	call   0x1ade6
   1b1af:	mov    esi,DWORD PTR ds:0x77cd4
   1b1b5:	mov    eax,DWORD PTR [ebp-0x10]
   1b1b8:	push   DWORD PTR [ebp-0x8]
   1b1bb:	add    esi,0x14
   1b1be:	lea    edi,[ebp-0x28]
   1b1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1c5:	cmp    eax,DWORD PTR [ebp-0x20]
   1b1c8:	je     0x1b1d2
   1b1ca:	mov    eax,DWORD PTR [eax]
   1b1cc:	mov    eax,DWORD PTR [eax+0x20]
   1b1cf:	inc    eax
   1b1d0:	mov    DWORD PTR [ebx],eax
   1b1d2:	call   0x11d3e
   1b1d7:	pop    ecx
   1b1d8:	pop    edi
   1b1d9:	pop    esi
   1b1da:	pop    ebx
   1b1db:	leave  
   1b1dc:	ret    0x4
   1b1df:	int3   
   1b1e0:	int3   
   1b1e1:	int3   
   1b1e2:	int3   
   1b1e3:	int3   
   1b1e4:	add    DWORD PTR [ecx+0xc],0x4
   1b1e8:	dec    DWORD PTR [ecx+0x2c]
   1b1eb:	mov    eax,DWORD PTR [ecx+0xc]
   1b1ee:	je     0x1b1f5
   1b1f0:	cmp    eax,DWORD PTR [ecx+0x8]
   1b1f3:	jne    0x1b1fa
   1b1f5:	jmp    0x1afb0
   1b1fa:	ret    
   1b1fb:	int3   
   1b1fc:	int3   
   1b1fd:	int3   
   1b1fe:	int3   
   1b1ff:	int3   
   1b200:	mov    edi,edi
   1b202:	push   esi
   1b203:	push   0x0
   1b205:	push   0xc
   1b207:	mov    esi,ecx
   1b209:	call   0x13460
   1b20e:	mov    DWORD PTR [eax],eax
   1b210:	mov    DWORD PTR [eax+0x4],eax
   1b213:	and    DWORD PTR [esi+0x8],0x0
   1b217:	mov    DWORD PTR [esi+0x4],eax
   1b21a:	mov    eax,esi
   1b21c:	pop    esi
   1b21d:	ret    0x4
   1b220:	int3   
   1b221:	int3   
   1b222:	int3   
   1b223:	int3   
   1b224:	int3   
   1b225:	int3   
   1b226:	mov    edi,edi
   1b228:	push   ebp
   1b229:	mov    ebp,esp
   1b22b:	push   ecx
   1b22c:	push   esi
   1b22d:	mov    esi,ecx
   1b22f:	mov    eax,DWORD PTR [esi+0x4]
   1b232:	mov    ecx,DWORD PTR [eax]
   1b234:	push   eax
   1b235:	push   ecx
   1b236:	lea    eax,[ebp-0x4]
   1b239:	push   eax
   1b23a:	mov    ecx,esi
   1b23c:	call   0x1b05e
   1b241:	push   DWORD PTR [esi+0x4]
   1b244:	call   0x11d3e
   1b249:	and    DWORD PTR [esi+0x4],0x0
   1b24d:	and    DWORD PTR [esi+0x8],0x0
   1b251:	pop    ecx
   1b252:	pop    esi
   1b253:	leave  
   1b254:	ret    
   1b255:	int3   
   1b256:	int3   
   1b257:	int3   
   1b258:	int3   
   1b259:	int3   
   1b25a:	mov    edi,edi
   1b25c:	push   ebp
   1b25d:	mov    ebp,esp
   1b25f:	push   ecx
   1b260:	mov    eax,DWORD PTR [ecx+0x4]
   1b263:	push   DWORD PTR [eax]
   1b265:	lea    eax,[ebp-0x4]
   1b268:	push   eax
   1b269:	call   0x1b022
   1b26e:	leave  
   1b26f:	ret    
   1b270:	int3   
   1b271:	int3   
   1b272:	int3   
   1b273:	int3   
   1b274:	int3   
   1b275:	int3   
   1b276:	mov    edi,edi
   1b278:	push   ebp
   1b279:	mov    ebp,esp
   1b27b:	sub    esp,0x18
   1b27e:	push   ebx
   1b27f:	push   esi
   1b280:	push   edi
   1b281:	push   0x0
   1b283:	push   0x400
   1b288:	mov    ebx,ecx
   1b28a:	call   0x1aac4
   1b28f:	cmp    DWORD PTR [ebx+0x2c],0x0
   1b293:	mov    esi,eax
   1b295:	mov    DWORD PTR [ebp-0x8],esi
   1b298:	jne    0x1b2cf
   1b29a:	mov    ecx,ebx
   1b29c:	mov    DWORD PTR [ebx+0x28],0x2
   1b2a3:	call   0x1b0c2
   1b2a8:	mov    eax,DWORD PTR [ebx+0x24]
   1b2ab:	mov    DWORD PTR [eax+0x4],esi
   1b2ae:	mov    eax,DWORD PTR [ebx+0x24]
   1b2b1:	add    eax,0x4
   1b2b4:	push   eax
   1b2b5:	add    esi,0x800
   1b2bb:	push   esi
   1b2bc:	lea    ecx,[ebp-0x18]
   1b2bf:	call   0x1a9f4
   1b2c4:	lea    edi,[ebx+0x4]
   1b2c7:	mov    esi,eax
   1b2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b2cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b2cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b2cd:	jmp    0x1b32d
   1b2cf:	mov    ecx,DWORD PTR [ebx+0x28]
   1b2d2:	mov    edx,DWORD PTR [ebx+0x24]
   1b2d5:	mov    eax,DWORD PTR [ebx+0x20]
   1b2d8:	lea    ecx,[edx+ecx*4-0x4]
   1b2dc:	cmp    eax,ecx
   1b2de:	jae    0x1b2ee
   1b2e0:	add    eax,0x4
   1b2e3:	mov    DWORD PTR [ebx+0x20],eax
   1b2e6:	mov    DWORD PTR [eax],esi
   1b2e8:	push   DWORD PTR [ebx+0x20]
   1b2eb:	push   esi
   1b2ec:	jmp    0x1b325
   1b2ee:	sub    eax,DWORD PTR [ebx+0x10]
   1b2f1:	mov    ecx,ebx
   1b2f3:	sar    eax,0x2
   1b2f6:	inc    eax
   1b2f7:	mov    edi,eax
   1b2f9:	lea    eax,[edi+edi*1]
   1b2fc:	push   eax
   1b2fd:	call   0x1b0e0
   1b302:	lea    ecx,[eax+edi*4]
   1b305:	mov    DWORD PTR [ecx],esi
   1b307:	push   eax
   1b308:	push   DWORD PTR [ebx+0xc]
   1b30b:	mov    DWORD PTR [ebp-0x4],ecx
   1b30e:	lea    ecx,[ebp-0x18]
   1b311:	call   0x1a9f4
   1b316:	push   DWORD PTR [ebp-0x4]
   1b319:	lea    edi,[ebx+0x4]
   1b31c:	push   DWORD PTR [ebp-0x8]
   1b31f:	mov    esi,eax
   1b321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b325:	lea    ecx,[ebp-0x18]
   1b328:	call   0x1a9f4
   1b32d:	lea    edi,[ebx+0x14]
   1b330:	mov    esi,eax
   1b332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b336:	pop    edi
   1b337:	pop    esi
   1b338:	pop    ebx
   1b339:	leave  
   1b33a:	ret    
   1b33b:	int3   
   1b33c:	int3   
   1b33d:	int3   
   1b33e:	int3   
   1b33f:	int3   
   1b340:	mov    edi,edi
   1b342:	push   ebp
   1b343:	mov    ebp,esp
   1b345:	mov    eax,DWORD PTR [ebp+0xc]
   1b348:	push   ebx
   1b349:	push   esi
   1b34a:	push   edi
   1b34b:	lea    edi,[eax+0x4]
   1b34e:	push   DWORD PTR [edi]
   1b350:	mov    ebx,ecx
   1b352:	push   eax
   1b353:	call   0x1b094
   1b358:	push   DWORD PTR [ebp+0x10]
   1b35b:	mov    esi,eax
   1b35d:	mov    DWORD PTR [edi],esi
   1b35f:	mov    eax,DWORD PTR [esi+0x4]
   1b362:	mov    DWORD PTR [eax],esi
   1b364:	lea    eax,[esi+0x8]
   1b367:	push   eax
   1b368:	call   0x1123c
   1b36d:	mov    eax,DWORD PTR [ebp+0x8]
   1b370:	inc    DWORD PTR [ebx+0x8]
   1b373:	pop    edi
   1b374:	mov    DWORD PTR [eax],esi
   1b376:	pop    esi
   1b377:	pop    ebx
   1b378:	pop    ebp
   1b379:	ret    0xc
   1b37c:	int3   
   1b37d:	int3   
   1b37e:	int3   
   1b37f:	int3   
   1b380:	int3   
   1b381:	int3   
   1b382:	mov    edi,edi
   1b384:	push   ebp
   1b385:	mov    ebp,esp
   1b387:	push   ecx
   1b388:	mov    eax,DWORD PTR [ebp+0xc]
   1b38b:	push   esi
   1b38c:	mov    esi,ecx
   1b38e:	jmp    0x1b3aa
   1b390:	add    eax,0x8
   1b393:	push   eax
   1b394:	push   DWORD PTR [ebp+0x8]
   1b397:	lea    eax,[ebp-0x4]
   1b39a:	push   eax
   1b39b:	mov    ecx,esi
   1b39d:	call   0x1b340
   1b3a2:	mov    eax,DWORD PTR [ebp+0xc]
   1b3a5:	mov    eax,DWORD PTR [eax]
   1b3a7:	mov    DWORD PTR [ebp+0xc],eax
   1b3aa:	cmp    eax,DWORD PTR [ebp+0x10]
   1b3ad:	jne    0x1b390
   1b3af:	pop    esi
   1b3b0:	leave  
   1b3b1:	ret    0xc
   1b3b4:	int3   
   1b3b5:	int3   
   1b3b6:	int3   
   1b3b7:	int3   
   1b3b8:	int3   
   1b3b9:	int3   
   1b3ba:	mov    edi,edi
   1b3bc:	push   ebp
   1b3bd:	mov    ebp,esp
   1b3bf:	push   esi
   1b3c0:	push   edi
   1b3c1:	push   DWORD PTR [ebp+0xc]
   1b3c4:	mov    edi,ecx
   1b3c6:	call   0x1acd4
   1b3cb:	push   DWORD PTR [ebp+0xc]
   1b3ce:	mov    ecx,edi
   1b3d0:	mov    esi,eax
   1b3d2:	call   0x1ac94
   1b3d7:	mov    ecx,DWORD PTR [ebp+0x8]
   1b3da:	pop    edi
   1b3db:	mov    DWORD PTR [ecx],eax
   1b3dd:	mov    DWORD PTR [ecx+0x4],esi
   1b3e0:	mov    eax,ecx
   1b3e2:	pop    esi
   1b3e3:	pop    ebp
   1b3e4:	ret    0x8
   1b3e7:	int3   
   1b3e8:	int3   
   1b3e9:	int3   
   1b3ea:	int3   
   1b3eb:	int3   
   1b3ec:	mov    edi,edi
   1b3ee:	push   ebp
   1b3ef:	mov    ebp,esp
   1b3f1:	push   ecx
   1b3f2:	push   ebx
   1b3f3:	push   esi
   1b3f4:	push   edi
   1b3f5:	push   0x1
   1b3f7:	xor    edi,edi
   1b3f9:	push   edi
   1b3fa:	mov    esi,ecx
   1b3fc:	call   0x1b140
   1b401:	lea    ecx,[ebp-0x1]
   1b404:	mov    ebx,eax
   1b406:	call   DWORD PTR ds:0x76a34
   1b40c:	cmp    DWORD PTR ds:0x77cdc,edi
   1b412:	jne    0x1b427
   1b414:	mov    eax,ebx
   1b416:	mov    ds:0x77cdc,eax
   1b41b:	mov    DWORD PTR [eax],edi
   1b41d:	mov    eax,ds:0x77cdc
   1b422:	xor    ebx,ebx
   1b424:	mov    DWORD PTR [eax+0x8],edi
   1b427:	inc    DWORD PTR ds:0x77ce0
   1b42d:	lea    ecx,[ebp-0x1]
   1b430:	call   DWORD PTR ds:0x76a30
   1b436:	cmp    ebx,edi
   1b438:	je     0x1b441
   1b43a:	push   ebx
   1b43b:	call   0x11d3e
   1b440:	pop    ecx
   1b441:	push   edi
   1b442:	push   DWORD PTR ds:0x77cdc
   1b448:	mov    ecx,esi
   1b44a:	call   0x1b140
   1b44f:	mov    DWORD PTR [esi+0xc],edi
   1b452:	mov    DWORD PTR [esi+0x4],eax
   1b455:	mov    DWORD PTR [eax],eax
   1b457:	mov    esi,DWORD PTR [esi+0x4]
   1b45a:	pop    edi
   1b45b:	mov    DWORD PTR [esi+0x8],esi
   1b45e:	pop    esi
   1b45f:	pop    ebx
   1b460:	leave  
   1b461:	ret    
   1b462:	int3   
   1b463:	int3   
   1b464:	int3   
   1b465:	int3   
   1b466:	int3   
   1b467:	int3   
   1b468:	mov    edi,edi
   1b46a:	push   ebp
   1b46b:	mov    ebp,esp
   1b46d:	push   ebx
   1b46e:	push   esi
   1b46f:	mov    esi,DWORD PTR [ebp+0x10]
   1b472:	push   edi
   1b473:	push   0x0
   1b475:	push   esi
   1b476:	mov    edi,ecx
   1b478:	call   0x1b140
   1b47d:	push   DWORD PTR [ebp+0x14]
   1b480:	mov    ebx,eax
   1b482:	mov    eax,ds:0x77cdc
   1b487:	mov    DWORD PTR [ebx],eax
   1b489:	mov    eax,ds:0x77cdc
   1b48e:	mov    DWORD PTR [ebx+0x8],eax
   1b491:	lea    eax,[ebx+0xc]
   1b494:	push   eax
   1b495:	call   0x1ad14
   1b49a:	inc    DWORD PTR [edi+0xc]
   1b49d:	cmp    esi,DWORD PTR [edi+0x4]
   1b4a0:	je     0x1b4ca
   1b4a2:	mov    eax,DWORD PTR [ebp+0xc]
   1b4a5:	cmp    eax,DWORD PTR ds:0x77cdc
   1b4ab:	jne    0x1b4ca
   1b4ad:	lea    eax,[esi+0xc]
   1b4b0:	push   eax
   1b4b1:	push   DWORD PTR [ebp+0x14]
   1b4b4:	call   0x19f08
   1b4b9:	test   al,al
   1b4bb:	jne    0x1b4ca
   1b4bd:	mov    DWORD PTR [esi+0x8],ebx
   1b4c0:	mov    eax,DWORD PTR [edi+0x4]
   1b4c3:	cmp    esi,DWORD PTR [eax+0x8]
   1b4c6:	jne    0x1b4e4
   1b4c8:	jmp    0x1b4d9
   1b4ca:	mov    DWORD PTR [esi],ebx
   1b4cc:	mov    eax,DWORD PTR [edi+0x4]
   1b4cf:	cmp    esi,eax
   1b4d1:	jne    0x1b4de
   1b4d3:	mov    DWORD PTR [eax+0x4],ebx
   1b4d6:	mov    eax,DWORD PTR [edi+0x4]
   1b4d9:	mov    DWORD PTR [eax+0x8],ebx
   1b4dc:	jmp    0x1b4e4
   1b4de:	cmp    esi,DWORD PTR [eax]
   1b4e0:	jne    0x1b4e4
   1b4e2:	mov    DWORD PTR [eax],ebx
   1b4e4:	mov    eax,DWORD PTR [edi+0x4]
   1b4e7:	mov    esi,ebx
   1b4e9:	cmp    ebx,DWORD PTR [eax+0x4]
   1b4ec:	je     0x1b5a0
   1b4f2:	mov    eax,DWORD PTR [esi+0x4]
   1b4f5:	xor    edx,edx
   1b4f7:	cmp    DWORD PTR [eax+0x14],edx
   1b4fa:	jne    0x1b5a0
   1b500:	mov    ecx,DWORD PTR [eax+0x4]
   1b503:	cmp    eax,DWORD PTR [ecx]
   1b505:	jne    0x1b541
   1b507:	mov    ecx,DWORD PTR [ecx+0x8]
   1b50a:	cmp    DWORD PTR [ecx+0x14],edx
   1b50d:	je     0x1b548
   1b50f:	cmp    esi,DWORD PTR [eax+0x8]
   1b512:	jne    0x1b51e
   1b514:	mov    esi,eax
   1b516:	push   esi
   1b517:	mov    ecx,edi
   1b519:	call   0x1abb6
   1b51e:	mov    eax,DWORD PTR [esi+0x4]
   1b521:	mov    DWORD PTR [eax+0x14],0x1
   1b528:	mov    eax,DWORD PTR [esi+0x4]
   1b52b:	mov    eax,DWORD PTR [eax+0x4]
   1b52e:	and    DWORD PTR [eax+0x14],0x0
   1b532:	mov    eax,DWORD PTR [esi+0x4]
   1b535:	push   DWORD PTR [eax+0x4]
   1b538:	mov    ecx,edi
   1b53a:	call   0x1ac04
   1b53f:	jmp    0x1b594
   1b541:	mov    ecx,DWORD PTR [ecx]
   1b543:	cmp    DWORD PTR [ecx+0x14],edx
   1b546:	jne    0x1b565
   1b548:	mov    edx,eax
   1b54a:	xor    eax,eax
   1b54c:	inc    eax
   1b54d:	mov    DWORD PTR [edx+0x14],eax
   1b550:	mov    DWORD PTR [ecx+0x14],eax
   1b553:	mov    eax,DWORD PTR [esi+0x4]
   1b556:	mov    eax,DWORD PTR [eax+0x4]
   1b559:	and    DWORD PTR [eax+0x14],0x0
   1b55d:	mov    eax,DWORD PTR [esi+0x4]
   1b560:	mov    esi,DWORD PTR [eax+0x4]
   1b563:	jmp    0x1b594
   1b565:	cmp    esi,DWORD PTR [eax]
   1b567:	jne    0x1b573
   1b569:	mov    esi,eax
   1b56b:	push   esi
   1b56c:	mov    ecx,edi
   1b56e:	call   0x1ac04
   1b573:	mov    eax,DWORD PTR [esi+0x4]
   1b576:	mov    DWORD PTR [eax+0x14],0x1
   1b57d:	mov    eax,DWORD PTR [esi+0x4]
   1b580:	mov    eax,DWORD PTR [eax+0x4]
   1b583:	and    DWORD PTR [eax+0x14],0x0
   1b587:	mov    eax,DWORD PTR [esi+0x4]
   1b58a:	push   DWORD PTR [eax+0x4]
   1b58d:	mov    ecx,edi
   1b58f:	call   0x1abb6
   1b594:	mov    eax,DWORD PTR [edi+0x4]
   1b597:	cmp    esi,DWORD PTR [eax+0x4]
   1b59a:	jne    0x1b4f2
   1b5a0:	mov    eax,DWORD PTR [edi+0x4]
   1b5a3:	mov    eax,DWORD PTR [eax+0x4]
   1b5a6:	pop    edi
   1b5a7:	mov    DWORD PTR [eax+0x14],0x1
   1b5ae:	mov    eax,DWORD PTR [ebp+0x8]
   1b5b1:	pop    esi
   1b5b2:	mov    DWORD PTR [eax],ebx
   1b5b4:	pop    ebx
   1b5b5:	pop    ebp
   1b5b6:	ret    0x10
   1b5b9:	int3   
   1b5ba:	int3   
   1b5bb:	int3   
   1b5bc:	int3   
   1b5bd:	int3   
   1b5be:	mov    edi,edi
   1b5c0:	push   ebp
   1b5c1:	mov    ebp,esp
   1b5c3:	sub    esp,0x10
   1b5c6:	push   ebx
   1b5c7:	push   esi
   1b5c8:	mov    DWORD PTR [ebp-0xc],ecx
   1b5cb:	push   edi
   1b5cc:	mov    edi,DWORD PTR [ebp+0xc]
   1b5cf:	lea    ecx,[ebp+0xc]
   1b5d2:	call   0x1aa64
   1b5d7:	mov    esi,DWORD PTR [edi]
   1b5d9:	mov    eax,ds:0x77cdc
   1b5de:	lea    ebx,[edi+0x8]
   1b5e1:	mov    DWORD PTR [ebp-0x8],edi
   1b5e4:	mov    DWORD PTR [ebp-0x10],ebx
   1b5e7:	cmp    esi,eax
   1b5e9:	jne    0x1b5ef
   1b5eb:	mov    esi,DWORD PTR [ebx]
   1b5ed:	jmp    0x1b606
   1b5ef:	mov    ecx,DWORD PTR [ebx]
   1b5f1:	cmp    ecx,eax
   1b5f3:	je     0x1b606
   1b5f5:	push   ecx
   1b5f6:	call   0x1aa42
   1b5fb:	mov    DWORD PTR [ebp-0x8],eax
   1b5fe:	add    eax,0x8
   1b601:	mov    esi,DWORD PTR [eax]
   1b603:	mov    DWORD PTR [ebp-0x10],eax
   1b606:	lea    ecx,[ebp-0x1]
   1b609:	call   DWORD PTR ds:0x76a34
   1b60f:	mov    eax,DWORD PTR [ebp-0x8]
   1b612:	cmp    eax,edi
   1b614:	je     0x1b676
   1b616:	mov    ecx,DWORD PTR [edi]
   1b618:	mov    DWORD PTR [ecx+0x4],eax
   1b61b:	mov    ecx,DWORD PTR [edi]
   1b61d:	mov    DWORD PTR [eax],ecx
   1b61f:	cmp    eax,DWORD PTR [ebx]
   1b621:	jne    0x1b628
   1b623:	mov    DWORD PTR [esi+0x4],eax
   1b626:	jmp    0x1b63f
   1b628:	mov    ecx,DWORD PTR [eax+0x4]
   1b62b:	mov    edx,DWORD PTR [ebp-0x10]
   1b62e:	mov    DWORD PTR [esi+0x4],ecx
   1b631:	mov    ecx,DWORD PTR [eax+0x4]
   1b634:	mov    DWORD PTR [ecx],esi
   1b636:	mov    ecx,DWORD PTR [ebx]
   1b638:	mov    DWORD PTR [edx],ecx
   1b63a:	mov    ecx,DWORD PTR [ebx]
   1b63c:	mov    DWORD PTR [ecx+0x4],eax
   1b63f:	mov    ebx,DWORD PTR [ebp-0xc]
   1b642:	mov    ecx,DWORD PTR [ebx+0x4]
   1b645:	cmp    DWORD PTR [ecx+0x4],edi
   1b648:	jne    0x1b64f
   1b64a:	mov    DWORD PTR [ecx+0x4],eax
   1b64d:	jmp    0x1b65d
   1b64f:	mov    ecx,DWORD PTR [edi+0x4]
   1b652:	cmp    DWORD PTR [ecx],edi
   1b654:	jne    0x1b65a
   1b656:	mov    DWORD PTR [ecx],eax
   1b658:	jmp    0x1b65d
   1b65a:	mov    DWORD PTR [ecx+0x8],eax
   1b65d:	mov    ecx,DWORD PTR [edi+0x4]
   1b660:	mov    DWORD PTR [eax+0x4],ecx
   1b663:	mov    ecx,DWORD PTR [eax+0x14]
   1b666:	mov    edx,DWORD PTR [edi+0x14]
   1b669:	mov    DWORD PTR [eax+0x14],edx
   1b66c:	mov    DWORD PTR [edi+0x14],ecx
   1b66f:	mov    DWORD PTR [ebp-0x8],edi
   1b672:	mov    eax,edi
   1b674:	jmp    0x1b6ef
   1b676:	mov    ecx,DWORD PTR [eax+0x4]
   1b679:	mov    edx,DWORD PTR [ebp-0xc]
   1b67c:	mov    DWORD PTR [esi+0x4],ecx
   1b67f:	mov    ecx,DWORD PTR [edx+0x4]
   1b682:	cmp    DWORD PTR [ecx+0x4],edi
   1b685:	jne    0x1b68c
   1b687:	mov    DWORD PTR [ecx+0x4],esi
   1b68a:	jmp    0x1b69a
   1b68c:	mov    ecx,DWORD PTR [edi+0x4]
   1b68f:	cmp    DWORD PTR [ecx],edi
   1b691:	jne    0x1b697
   1b693:	mov    DWORD PTR [ecx],esi
   1b695:	jmp    0x1b69a
   1b697:	mov    DWORD PTR [ecx+0x8],esi
   1b69a:	mov    ecx,DWORD PTR [edx+0x4]
   1b69d:	mov    DWORD PTR [ebp-0x10],ecx
   1b6a0:	cmp    DWORD PTR [ecx],edi
   1b6a2:	jne    0x1b6c6
   1b6a4:	mov    ebx,DWORD PTR [ebx]
   1b6a6:	cmp    ebx,DWORD PTR ds:0x77cdc
   1b6ac:	jne    0x1b6b5
   1b6ae:	mov    ebx,DWORD PTR [edi+0x4]
   1b6b1:	mov    DWORD PTR [ecx],ebx
   1b6b3:	jmp    0x1b6c6
   1b6b5:	push   esi
   1b6b6:	call   0x1aa42
   1b6bb:	mov    ecx,DWORD PTR [ebp-0x10]
   1b6be:	mov    edx,DWORD PTR [ebp-0xc]
   1b6c1:	mov    DWORD PTR [ecx],eax
   1b6c3:	mov    eax,DWORD PTR [ebp-0x8]
   1b6c6:	mov    ebx,DWORD PTR [edx+0x4]
   1b6c9:	cmp    DWORD PTR [ebx+0x8],edi
   1b6cc:	jne    0x1b6ec
   1b6ce:	mov    ecx,DWORD PTR [edi]
   1b6d0:	cmp    ecx,DWORD PTR ds:0x77cdc
   1b6d6:	jne    0x1b6e0
   1b6d8:	mov    ecx,DWORD PTR [edi+0x4]
   1b6db:	mov    DWORD PTR [ebx+0x8],ecx
   1b6de:	jmp    0x1b6ec
   1b6e0:	push   esi
   1b6e1:	call   0x1aa20
   1b6e6:	mov    DWORD PTR [ebx+0x8],eax
   1b6e9:	mov    eax,DWORD PTR [ebp-0x8]
   1b6ec:	mov    ebx,DWORD PTR [ebp-0xc]
   1b6ef:	xor    edi,edi
   1b6f1:	inc    edi
   1b6f2:	cmp    DWORD PTR [eax+0x14],edi
   1b6f5:	jne    0x1b809
   1b6fb:	jmp    0x1b7bc
   1b700:	cmp    DWORD PTR [esi+0x14],edi
   1b703:	jne    0x1b806
   1b709:	mov    eax,DWORD PTR [esi+0x4]
   1b70c:	cmp    esi,DWORD PTR [eax]
   1b70e:	jne    0x1b785
   1b710:	mov    eax,DWORD PTR [eax+0x8]
   1b713:	cmp    DWORD PTR [eax+0x14],0x0
   1b717:	jne    0x1b733
   1b719:	mov    DWORD PTR [eax+0x14],edi
   1b71c:	mov    eax,DWORD PTR [esi+0x4]
   1b71f:	and    DWORD PTR [eax+0x14],0x0
   1b723:	push   DWORD PTR [esi+0x4]
   1b726:	mov    ecx,ebx
   1b728:	call   0x1abb6
   1b72d:	mov    eax,DWORD PTR [esi+0x4]
   1b730:	mov    eax,DWORD PTR [eax+0x8]
   1b733:	mov    ecx,DWORD PTR [eax]
   1b735:	cmp    DWORD PTR [ecx+0x14],edi
   1b738:	jne    0x1b742
   1b73a:	mov    ecx,DWORD PTR [eax+0x8]
   1b73d:	cmp    DWORD PTR [ecx+0x14],edi
   1b740:	je     0x1b7b5
   1b742:	mov    ecx,DWORD PTR [eax+0x8]
   1b745:	cmp    DWORD PTR [ecx+0x14],edi
   1b748:	jne    0x1b761
   1b74a:	mov    ecx,DWORD PTR [eax]
   1b74c:	mov    DWORD PTR [ecx+0x14],edi
   1b74f:	and    DWORD PTR [eax+0x14],0x0
   1b753:	push   eax
   1b754:	mov    ecx,ebx
   1b756:	call   0x1ac04
   1b75b:	mov    eax,DWORD PTR [esi+0x4]
   1b75e:	mov    eax,DWORD PTR [eax+0x8]
   1b761:	mov    ecx,DWORD PTR [esi+0x4]
   1b764:	mov    ecx,DWORD PTR [ecx+0x14]
   1b767:	mov    DWORD PTR [eax+0x14],ecx
   1b76a:	mov    ecx,DWORD PTR [esi+0x4]
   1b76d:	mov    DWORD PTR [ecx+0x14],edi
   1b770:	mov    eax,DWORD PTR [eax+0x8]
   1b773:	mov    DWORD PTR [eax+0x14],edi
   1b776:	push   DWORD PTR [esi+0x4]
   1b779:	mov    ecx,ebx
   1b77b:	call   0x1abb6
   1b780:	jmp    0x1b806
   1b785:	mov    eax,DWORD PTR [eax]
   1b787:	cmp    DWORD PTR [eax+0x14],0x0
   1b78b:	jne    0x1b7a6
   1b78d:	mov    DWORD PTR [eax+0x14],edi
   1b790:	mov    eax,DWORD PTR [esi+0x4]
   1b793:	and    DWORD PTR [eax+0x14],0x0
   1b797:	push   DWORD PTR [esi+0x4]
   1b79a:	mov    ecx,ebx
   1b79c:	call   0x1ac04
   1b7a1:	mov    eax,DWORD PTR [esi+0x4]
   1b7a4:	mov    eax,DWORD PTR [eax]
   1b7a6:	mov    ecx,DWORD PTR [eax+0x8]
   1b7a9:	cmp    DWORD PTR [ecx+0x14],edi
   1b7ac:	jne    0x1b7ca
   1b7ae:	mov    ecx,DWORD PTR [eax]
   1b7b0:	cmp    DWORD PTR [ecx+0x14],edi
   1b7b3:	jne    0x1b7ca
   1b7b5:	and    DWORD PTR [eax+0x14],0x0
   1b7b9:	mov    esi,DWORD PTR [esi+0x4]
   1b7bc:	mov    eax,DWORD PTR [ebx+0x4]
   1b7bf:	cmp    esi,DWORD PTR [eax+0x4]
   1b7c2:	jne    0x1b700
   1b7c8:	jmp    0x1b806
   1b7ca:	mov    ecx,DWORD PTR [eax]
   1b7cc:	cmp    DWORD PTR [ecx+0x14],edi
   1b7cf:	jne    0x1b7e8
   1b7d1:	mov    ecx,DWORD PTR [eax+0x8]
   1b7d4:	mov    DWORD PTR [ecx+0x14],edi
   1b7d7:	and    DWORD PTR [eax+0x14],0x0
   1b7db:	push   eax
   1b7dc:	mov    ecx,ebx
   1b7de:	call   0x1abb6
   1b7e3:	mov    eax,DWORD PTR [esi+0x4]
   1b7e6:	mov    eax,DWORD PTR [eax]
   1b7e8:	mov    ecx,DWORD PTR [esi+0x4]
   1b7eb:	mov    ecx,DWORD PTR [ecx+0x14]
   1b7ee:	mov    DWORD PTR [eax+0x14],ecx
   1b7f1:	mov    ecx,DWORD PTR [esi+0x4]
   1b7f4:	mov    DWORD PTR [ecx+0x14],edi
   1b7f7:	mov    eax,DWORD PTR [eax]
   1b7f9:	mov    DWORD PTR [eax+0x14],edi
   1b7fc:	push   DWORD PTR [esi+0x4]
   1b7ff:	mov    ecx,ebx
   1b801:	call   0x1ac04
   1b806:	mov    DWORD PTR [esi+0x14],edi
   1b809:	lea    ecx,[ebp-0x1]
   1b80c:	call   DWORD PTR ds:0x76a30
   1b812:	mov    esi,DWORD PTR [ebp-0x8]
   1b815:	lea    eax,[esi+0xc]
   1b818:	push   eax
   1b819:	call   0x1ad32
   1b81e:	push   esi
   1b81f:	call   0x11d3e
   1b824:	mov    eax,DWORD PTR [ebp+0x8]
   1b827:	dec    DWORD PTR [ebx+0xc]
   1b82a:	pop    ecx
   1b82b:	mov    ecx,DWORD PTR [ebp+0xc]
   1b82e:	pop    edi
   1b82f:	pop    esi
   1b830:	mov    DWORD PTR [eax],ecx
   1b832:	pop    ebx
   1b833:	leave  
   1b834:	ret    0x8
   1b837:	int3   
   1b838:	int3   
   1b839:	int3   
   1b83a:	int3   
   1b83b:	int3   
   1b83c:	mov    edi,edi
   1b83e:	push   ebp
   1b83f:	mov    ebp,esp
   1b841:	push   ebx
   1b842:	push   esi
   1b843:	push   edi
   1b844:	mov    edi,DWORD PTR [ebp+0x8]
   1b847:	mov    ebx,ecx
   1b849:	mov    esi,edi
   1b84b:	cmp    edi,DWORD PTR ds:0x77cdc
   1b851:	je     0x1b879
   1b853:	push   DWORD PTR [esi+0x8]
   1b856:	mov    ecx,ebx
   1b858:	call   0x1b83c
   1b85d:	mov    esi,DWORD PTR [esi]
   1b85f:	lea    eax,[edi+0xc]
   1b862:	push   eax
   1b863:	call   0x1ad32
   1b868:	push   edi
   1b869:	call   0x11d3e
   1b86e:	pop    ecx
   1b86f:	mov    edi,esi
   1b871:	cmp    esi,DWORD PTR ds:0x77cdc
   1b877:	jne    0x1b853
   1b879:	pop    edi
   1b87a:	pop    esi
   1b87b:	pop    ebx
   1b87c:	pop    ebp
   1b87d:	ret    0x4
   1b880:	int3   
   1b881:	int3   
   1b882:	int3   
   1b883:	int3   
   1b884:	int3   
   1b885:	int3   
   1b886:	mov    edi,edi
   1b888:	push   esi
   1b889:	mov    esi,ecx
   1b88b:	jmp    0x1b894
   1b88d:	mov    ecx,esi
   1b88f:	call   0x1b1e4
   1b894:	cmp    DWORD PTR [esi+0x2c],0x0
   1b898:	jne    0x1b88d
   1b89a:	pop    esi
   1b89b:	ret    
   1b89c:	int3   
   1b89d:	int3   
   1b89e:	int3   
   1b89f:	int3   
   1b8a0:	int3   
   1b8a1:	int3   
   1b8a2:	mov    edi,edi
   1b8a4:	push   ebp
   1b8a5:	mov    ebp,esp
   1b8a7:	push   esi
   1b8a8:	mov    esi,ecx
   1b8aa:	cmp    DWORD PTR [esi+0x2c],0x0
   1b8ae:	je     0x1b8d6
   1b8b0:	mov    ecx,DWORD PTR [esi+0x1c]
   1b8b3:	mov    edx,DWORD PTR [esi+0x18]
   1b8b6:	cmp    ecx,edx
   1b8b8:	je     0x1b8d6
   1b8ba:	push   DWORD PTR [ebp+0x8]
   1b8bd:	lea    eax,[ecx+0x4]
   1b8c0:	mov    DWORD PTR [esi+0x1c],eax
   1b8c3:	push   ecx
   1b8c4:	cmp    eax,edx
   1b8c6:	jne    0x1b8ea
   1b8c8:	call   0x1123c
   1b8cd:	mov    ecx,esi
   1b8cf:	call   0x1b276
   1b8d4:	jmp    0x1b8ef
   1b8d6:	mov    ecx,esi
   1b8d8:	call   0x1b276
   1b8dd:	mov    eax,DWORD PTR [esi+0x1c]
   1b8e0:	push   DWORD PTR [ebp+0x8]
   1b8e3:	lea    ecx,[eax+0x4]
   1b8e6:	mov    DWORD PTR [esi+0x1c],ecx
   1b8e9:	push   eax
   1b8ea:	call   0x1123c
   1b8ef:	inc    DWORD PTR [esi+0x2c]
   1b8f2:	pop    esi
   1b8f3:	pop    ebp
   1b8f4:	ret    0x4
   1b8f7:	int3   
   1b8f8:	int3   
   1b8f9:	int3   
   1b8fa:	int3   
   1b8fb:	int3   
   1b8fc:	mov    edi,edi
   1b8fe:	push   ebp
   1b8ff:	mov    ebp,esp
   1b901:	push   esi
   1b902:	push   0x0
   1b904:	push   0xc
   1b906:	mov    esi,ecx
   1b908:	call   0x13460
   1b90d:	mov    ecx,DWORD PTR [ebp+0x8]
   1b910:	mov    DWORD PTR [eax],eax
   1b912:	mov    DWORD PTR [eax+0x4],eax
   1b915:	and    DWORD PTR [esi+0x8],0x0
   1b919:	mov    DWORD PTR [esi+0x4],eax
   1b91c:	mov    ecx,DWORD PTR [ecx+0x4]
   1b91f:	mov    edx,DWORD PTR [ecx]
   1b921:	mov    eax,DWORD PTR [eax]
   1b923:	push   ecx
   1b924:	push   edx
   1b925:	push   eax
   1b926:	mov    ecx,esi
   1b928:	call   0x1b382
   1b92d:	mov    eax,esi
   1b92f:	pop    esi
   1b930:	pop    ebp
   1b931:	ret    0x4
   1b934:	int3   
   1b935:	int3   
   1b936:	int3   
   1b937:	int3   
   1b938:	int3   
   1b939:	int3   
   1b93a:	mov    edi,edi
   1b93c:	push   ebp
   1b93d:	mov    ebp,esp
   1b93f:	push   ecx
   1b940:	mov    edx,DWORD PTR [ebp+0x8]
   1b943:	mov    DWORD PTR [ebp-0x4],ecx
   1b946:	cmp    ecx,edx
   1b948:	je     0x1b987
   1b94a:	push   ebx
   1b94b:	mov    ebx,DWORD PTR [edx+0x4]
   1b94e:	push   esi
   1b94f:	mov    esi,DWORD PTR [ecx+0x4]
   1b952:	mov    eax,DWORD PTR [esi]
   1b954:	push   edi
   1b955:	mov    edi,DWORD PTR [ebx]
   1b957:	jmp    0x1b967
   1b959:	cmp    edi,ebx
   1b95b:	je     0x1b96b
   1b95d:	mov    edx,DWORD PTR [edi+0x8]
   1b960:	mov    DWORD PTR [eax+0x8],edx
   1b963:	mov    eax,DWORD PTR [eax]
   1b965:	mov    edi,DWORD PTR [edi]
   1b967:	cmp    eax,esi
   1b969:	jne    0x1b959
   1b96b:	push   esi
   1b96c:	push   eax
   1b96d:	lea    eax,[ebp+0x8]
   1b970:	push   eax
   1b971:	call   0x1b05e
   1b976:	mov    ecx,DWORD PTR [ebp-0x4]
   1b979:	push   ebx
   1b97a:	push   edi
   1b97b:	push   esi
   1b97c:	call   0x1b382
   1b981:	mov    ecx,DWORD PTR [ebp-0x4]
   1b984:	pop    edi
   1b985:	pop    esi
   1b986:	pop    ebx
   1b987:	mov    eax,ecx
   1b989:	leave  
   1b98a:	ret    0x4
   1b98d:	int3   
   1b98e:	int3   
   1b98f:	int3   
   1b990:	int3   
   1b991:	int3   
   1b992:	mov    edi,edi
   1b994:	push   ebp
   1b995:	mov    ebp,esp
   1b997:	push   DWORD PTR [ebp+0x8]
   1b99a:	mov    eax,DWORD PTR [ecx+0x4]
   1b99d:	push   eax
   1b99e:	lea    eax,[ebp+0x8]
   1b9a1:	push   eax
   1b9a2:	call   0x1b340
   1b9a7:	pop    ebp
   1b9a8:	ret    0x4
   1b9ab:	int3   
   1b9ac:	int3   
   1b9ad:	int3   
   1b9ae:	int3   
   1b9af:	int3   
   1b9b0:	mov    edi,edi
   1b9b2:	push   ebp
   1b9b3:	mov    ebp,esp
   1b9b5:	push   ecx
   1b9b6:	push   ebx
   1b9b7:	push   esi
   1b9b8:	push   edi
   1b9b9:	mov    edi,ecx
   1b9bb:	mov    eax,DWORD PTR [edi+0x4]
   1b9be:	mov    esi,DWORD PTR [eax+0x4]
   1b9c1:	mov    ebx,eax
   1b9c3:	mov    al,0x1
   1b9c5:	jmp    0x1b9e0
   1b9c7:	lea    eax,[esi+0xc]
   1b9ca:	push   eax
   1b9cb:	push   DWORD PTR [ebp+0xc]
   1b9ce:	mov    ebx,esi
   1b9d0:	call   0x19f08
   1b9d5:	test   al,al
   1b9d7:	je     0x1b9dd
   1b9d9:	mov    esi,DWORD PTR [esi]
   1b9db:	jmp    0x1b9e0
   1b9dd:	mov    esi,DWORD PTR [esi+0x8]
   1b9e0:	cmp    esi,DWORD PTR ds:0x77cdc
   1b9e6:	jne    0x1b9c7
   1b9e8:	cmp    BYTE PTR [edi+0x8],0x0
   1b9ec:	je     0x1ba09
   1b9ee:	push   DWORD PTR [ebp+0xc]
   1b9f1:	lea    eax,[ebp+0xc]
   1b9f4:	push   ebx
   1b9f5:	push   esi
   1b9f6:	push   eax
   1b9f7:	mov    ecx,edi
   1b9f9:	call   0x1b468
   1b9fe:	mov    ecx,DWORD PTR [eax]
   1ba00:	mov    eax,DWORD PTR [ebp+0x8]
   1ba03:	mov    BYTE PTR [eax+0x4],0x1
   1ba07:	jmp    0x1ba3c
   1ba09:	mov    DWORD PTR [ebp-0x4],ebx
   1ba0c:	test   al,al
   1ba0e:	je     0x1ba1f
   1ba10:	mov    eax,DWORD PTR [edi+0x4]
   1ba13:	cmp    ebx,DWORD PTR [eax]
   1ba15:	je     0x1b9ee
   1ba17:	lea    ecx,[ebp-0x4]
   1ba1a:	call   0x1ac54
   1ba1f:	push   DWORD PTR [ebp+0xc]
   1ba22:	mov    eax,DWORD PTR [ebp-0x4]
   1ba25:	add    eax,0xc
   1ba28:	push   eax
   1ba29:	call   0x19f08
   1ba2e:	test   al,al
   1ba30:	jne    0x1b9ee
   1ba32:	mov    eax,DWORD PTR [ebp+0x8]
   1ba35:	mov    ecx,DWORD PTR [ebp-0x4]
   1ba38:	mov    BYTE PTR [eax+0x4],0x0
   1ba3c:	pop    edi
   1ba3d:	pop    esi
   1ba3e:	mov    DWORD PTR [eax],ecx
   1ba40:	pop    ebx
   1ba41:	leave  
   1ba42:	ret    0x8
   1ba45:	int3   
   1ba46:	int3   
   1ba47:	int3   
   1ba48:	int3   
   1ba49:	int3   
   1ba4a:	mov    edi,edi
   1ba4c:	push   ebp
   1ba4d:	mov    ebp,esp
   1ba4f:	push   ecx
   1ba50:	push   ecx
   1ba51:	push   DWORD PTR [ebp+0x8]
   1ba54:	lea    eax,[ebp-0x8]
   1ba57:	push   eax
   1ba58:	call   0x1b3ba
   1ba5d:	and    DWORD PTR [ebp+0x8],0x0
   1ba61:	lea    eax,[ebp+0x8]
   1ba64:	push   eax
   1ba65:	push   DWORD PTR [ebp-0x4]
   1ba68:	push   DWORD PTR [ebp-0x8]
   1ba6b:	call   0x1b164
   1ba70:	mov    eax,DWORD PTR [ebp+0x8]
   1ba73:	add    esp,0xc
   1ba76:	leave  
   1ba77:	ret    0x4
   1ba7a:	int3   
   1ba7b:	int3   
   1ba7c:	int3   
   1ba7d:	int3   
   1ba7e:	int3   
   1ba7f:	int3   
   1ba80:	mov    edi,edi
   1ba82:	push   ebp
   1ba83:	mov    ebp,esp
   1ba85:	push   ecx
   1ba86:	push   esi
   1ba87:	mov    esi,ecx
   1ba89:	cmp    DWORD PTR [esi+0xc],0x0
   1ba8d:	mov    ecx,DWORD PTR [ebp+0xc]
   1ba90:	je     0x1baca
   1ba92:	mov    eax,DWORD PTR [esi+0x4]
   1ba95:	cmp    ecx,DWORD PTR [eax]
   1ba97:	jne    0x1baca
   1ba99:	cmp    DWORD PTR [ebp+0x10],eax
   1ba9c:	jne    0x1baca
   1ba9e:	push   DWORD PTR [eax+0x4]
   1baa1:	mov    ecx,esi
   1baa3:	call   0x1b83c
   1baa8:	mov    ecx,DWORD PTR ds:0x77cdc
   1baae:	mov    eax,DWORD PTR [esi+0x4]
   1bab1:	mov    DWORD PTR [eax+0x4],ecx
   1bab4:	mov    eax,DWORD PTR [esi+0x4]
   1bab7:	and    DWORD PTR [esi+0xc],0x0
   1babb:	mov    DWORD PTR [eax],eax
   1babd:	mov    eax,DWORD PTR [esi+0x4]
   1bac0:	mov    DWORD PTR [eax+0x8],eax
   1bac3:	mov    eax,DWORD PTR [esi+0x4]
   1bac6:	mov    ecx,DWORD PTR [eax]
   1bac8:	jmp    0x1baef
   1baca:	cmp    ecx,DWORD PTR [ebp+0x10]
   1bacd:	je     0x1baef
   1bacf:	push   edi
   1bad0:	mov    edi,ecx
   1bad2:	lea    ecx,[ebp+0xc]
   1bad5:	call   0x1aa64
   1bada:	push   edi
   1badb:	lea    eax,[ebp-0x4]
   1bade:	push   eax
   1badf:	mov    ecx,esi
   1bae1:	call   0x1b5be
   1bae6:	mov    ecx,DWORD PTR [ebp+0xc]
   1bae9:	cmp    ecx,DWORD PTR [ebp+0x10]
   1baec:	jne    0x1bad0
   1baee:	pop    edi
   1baef:	mov    eax,DWORD PTR [ebp+0x8]
   1baf2:	mov    DWORD PTR [eax],ecx
   1baf4:	pop    esi
   1baf5:	leave  
   1baf6:	ret    0xc
   1baf9:	int3   
   1bafa:	int3   
   1bafb:	int3   
   1bafc:	int3   
   1bafd:	int3   
   1bafe:	mov    edi,edi
   1bb00:	push   ebp
   1bb01:	mov    ebp,esp
   1bb03:	push   esi
   1bb04:	push   DWORD PTR [ebp+0x8]
   1bb07:	mov    esi,ecx
   1bb09:	mov    ecx,DWORD PTR [esi]
   1bb0b:	call   0x1b8a2
   1bb10:	mov    eax,esi
   1bb12:	pop    esi
   1bb13:	pop    ebp
   1bb14:	ret    0x4
   1bb17:	int3   
   1bb18:	int3   
   1bb19:	int3   
   1bb1a:	int3   
   1bb1b:	int3   
   1bb1c:	mov    edi,edi
   1bb1e:	push   ebp
   1bb1f:	mov    ebp,esp
   1bb21:	push   ecx
   1bb22:	push   esi
   1bb23:	push   edi
   1bb24:	xor    edi,edi
   1bb26:	push   edi
   1bb27:	push   edi
   1bb28:	push   edi
   1bb29:	push   edi
   1bb2a:	mov    esi,0x77cac
   1bb2f:	push   esi
   1bb30:	call   DWORD PTR ds:0x1f834
   1bb36:	test   eax,eax
   1bb38:	jl     0x1bb5c
   1bb3a:	mov    eax,ds:0x77cd8
   1bb3f:	mov    ecx,DWORD PTR ds:0x77cd0
   1bb45:	add    eax,0x9
   1bb48:	mov    DWORD PTR [ebp-0x4],eax
   1bb4b:	lea    eax,[ebp-0x4]
   1bb4e:	push   eax
   1bb4f:	call   0x1b992
   1bb54:	push   edi
   1bb55:	push   esi
   1bb56:	call   DWORD PTR ds:0x1f838
   1bb5c:	pop    edi
   1bb5d:	pop    esi
   1bb5e:	leave  
   1bb5f:	ret    
   1bb60:	int3   
   1bb61:	int3   
   1bb62:	int3   
   1bb63:	int3   
   1bb64:	int3   
   1bb65:	int3   
   1bb66:	mov    edi,edi
   1bb68:	push   ebp
   1bb69:	mov    ebp,esp
   1bb6b:	push   ecx
   1bb6c:	push   ecx
   1bb6d:	push   DWORD PTR [ebp+0xc]
   1bb70:	lea    eax,[ebp-0x8]
   1bb73:	push   eax
   1bb74:	call   0x1b9b0
   1bb79:	mov    eax,DWORD PTR [ebp+0x8]
   1bb7c:	mov    ecx,DWORD PTR [ebp-0x8]
   1bb7f:	mov    DWORD PTR [eax],ecx
   1bb81:	mov    cl,BYTE PTR [ebp-0x4]
   1bb84:	mov    BYTE PTR [eax+0x4],cl
   1bb87:	leave  
   1bb88:	ret    0x8
   1bb8b:	int3   
   1bb8c:	int3   
   1bb8d:	int3   
   1bb8e:	int3   
   1bb8f:	int3   
   1bb90:	mov    edi,edi
   1bb92:	push   ebp
   1bb93:	mov    ebp,esp
   1bb95:	push   ecx
   1bb96:	push   ecx
   1bb97:	push   esi
   1bb98:	push   DWORD PTR [ebp+0x8]
   1bb9b:	lea    eax,[ebp-0x8]
   1bb9e:	push   eax
   1bb9f:	mov    esi,ecx
   1bba1:	call   0x1b3ba
   1bba6:	and    DWORD PTR [ebp+0x8],0x0
   1bbaa:	lea    eax,[ebp+0x8]
   1bbad:	push   eax
   1bbae:	push   DWORD PTR [ebp-0x4]
   1bbb1:	push   DWORD PTR [ebp-0x8]
   1bbb4:	call   0x1b164
   1bbb9:	add    esp,0xc
   1bbbc:	push   DWORD PTR [ebp-0x4]
   1bbbf:	lea    eax,[ebp-0x4]
   1bbc2:	push   DWORD PTR [ebp-0x8]
   1bbc5:	mov    ecx,esi
   1bbc7:	push   eax
   1bbc8:	call   0x1ba80
   1bbcd:	mov    eax,DWORD PTR [ebp+0x8]
   1bbd0:	pop    esi
   1bbd1:	leave  
   1bbd2:	ret    0x4
   1bbd5:	int3   
   1bbd6:	int3   
   1bbd7:	int3   
   1bbd8:	int3   
   1bbd9:	int3   
   1bbda:	mov    edi,edi
   1bbdc:	push   ebp
   1bbdd:	mov    ebp,esp
   1bbdf:	jmp    0x1bbf2
   1bbe1:	push   eax
   1bbe2:	lea    ecx,[ebp+0x2c]
   1bbe5:	call   0x1bafe
   1bbea:	lea    ecx,[ebp+0xc]
   1bbed:	call   0x1a9c6
   1bbf2:	mov    eax,DWORD PTR [ebp+0x14]
   1bbf5:	cmp    eax,DWORD PTR [ebp+0x24]
   1bbf8:	jne    0x1bbe1
   1bbfa:	mov    eax,DWORD PTR [ebp+0x8]
   1bbfd:	mov    ecx,DWORD PTR [ebp+0x2c]
   1bc00:	mov    DWORD PTR [eax],ecx
   1bc02:	pop    ebp
   1bc03:	ret    0x28
   1bc06:	int3   
   1bc07:	int3   
   1bc08:	int3   
   1bc09:	int3   
   1bc0a:	int3   
   1bc0b:	int3   
   1bc0c:	mov    edi,edi
   1bc0e:	push   ebp
   1bc0f:	mov    ebp,esp
   1bc11:	sub    esp,0x10
   1bc14:	push   0xffffffff
   1bc16:	push   DWORD PTR [ebp+0x8]
   1bc19:	lea    ecx,[ebp-0x8]
   1bc1c:	call   0x12ba8
   1bc21:	mov    ecx,DWORD PTR ds:0x77ccc
   1bc27:	lea    eax,[ebp-0x8]
   1bc2a:	push   eax
   1bc2b:	lea    eax,[ebp-0x10]
   1bc2e:	push   eax
   1bc2f:	call   0x1bb66
   1bc34:	push   DWORD PTR [ebp-0x8]
   1bc37:	call   0x11d3e
   1bc3c:	pop    ecx
   1bc3d:	leave  
   1bc3e:	ret    0x4
   1bc41:	int3   
   1bc42:	int3   
   1bc43:	int3   
   1bc44:	int3   
   1bc45:	int3   
   1bc46:	mov    edi,edi
   1bc48:	push   ebp
   1bc49:	mov    ebp,esp
   1bc4b:	xor    eax,eax
   1bc4d:	push   ebx
   1bc4e:	push   esi
   1bc4f:	push   edi
   1bc50:	mov    ebx,ecx
   1bc52:	mov    DWORD PTR [ebx+0x4],eax
   1bc55:	mov    DWORD PTR [ebx+0x8],eax
   1bc58:	mov    DWORD PTR [ebx+0xc],eax
   1bc5b:	mov    DWORD PTR [ebx+0x10],eax
   1bc5e:	mov    DWORD PTR [ebx+0x14],eax
   1bc61:	mov    DWORD PTR [ebx+0x18],eax
   1bc64:	mov    DWORD PTR [ebx+0x1c],eax
   1bc67:	mov    DWORD PTR [ebx+0x20],eax
   1bc6a:	mov    DWORD PTR [ebx+0x24],eax
   1bc6d:	mov    DWORD PTR [ebx+0x28],eax
   1bc70:	mov    DWORD PTR [ebx+0x2c],eax
   1bc73:	mov    eax,DWORD PTR [ebp+0x8]
   1bc76:	push   ebx
   1bc77:	sub    esp,0x10
   1bc7a:	mov    edi,esp
   1bc7c:	lea    esi,[eax+0x14]
   1bc7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc83:	sub    esp,0x10
   1bc86:	lea    esi,[eax+0x4]
   1bc89:	mov    edi,esp
   1bc8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc8e:	lea    eax,[ebp+0x8]
   1bc91:	push   eax
   1bc92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bc93:	call   0x1bbda
   1bc98:	pop    edi
   1bc99:	pop    esi
   1bc9a:	mov    eax,ebx
   1bc9c:	pop    ebx
   1bc9d:	pop    ebp
   1bc9e:	ret    0x4
   1bca1:	int3   
   1bca2:	int3   
   1bca3:	int3   
   1bca4:	int3   
   1bca5:	int3   
   1bca6:	mov    edi,edi
   1bca8:	push   ebp
   1bca9:	mov    ebp,esp
   1bcab:	push   ecx
   1bcac:	push   ebx
   1bcad:	push   0x30
   1bcaf:	call   0x11d08
   1bcb4:	xor    ebx,ebx
   1bcb6:	pop    ecx
   1bcb7:	cmp    eax,ebx
   1bcb9:	je     0x1bccd
   1bcbb:	lea    ecx,[ebp-0x1]
   1bcbe:	push   ecx
   1bcbf:	mov    ecx,eax
   1bcc1:	call   0x1ab68
   1bcc6:	mov    ds:0x77cd4,eax
   1bccb:	jmp    0x1bcd3
   1bccd:	mov    DWORD PTR ds:0x77cd4,ebx
   1bcd3:	push   esi
   1bcd4:	push   0x10
   1bcd6:	call   0x11d08
   1bcdb:	mov    esi,eax
   1bcdd:	pop    ecx
   1bcde:	cmp    esi,ebx
   1bce0:	je     0x1bcf4
   1bce2:	mov    ecx,esi
   1bce4:	mov    BYTE PTR [esi+0x8],bl
   1bce7:	call   0x1b3ec
   1bcec:	mov    DWORD PTR ds:0x77ccc,esi
   1bcf2:	jmp    0x1bcfa
   1bcf4:	mov    DWORD PTR ds:0x77ccc,ebx
   1bcfa:	push   0xc
   1bcfc:	call   0x11d08
   1bd01:	pop    ecx
   1bd02:	pop    esi
   1bd03:	cmp    eax,ebx
   1bd05:	je     0x1bd19
   1bd07:	lea    ecx,[ebp-0x1]
   1bd0a:	push   ecx
   1bd0b:	mov    ecx,eax
   1bd0d:	call   0x1b200
   1bd12:	mov    ds:0x77cd0,eax
   1bd17:	jmp    0x1bd1f
   1bd19:	mov    DWORD PTR ds:0x77cd0,ebx
   1bd1f:	push   ebx
   1bd20:	push   0x77cac
   1bd25:	call   DWORD PTR ds:0x1f83c
   1bd2b:	mov    DWORD PTR ds:0x77cd8,0x1
   1bd35:	pop    ebx
   1bd36:	leave  
   1bd37:	ret    
   1bd38:	int3   
   1bd39:	int3   
   1bd3a:	int3   
   1bd3b:	int3   
   1bd3c:	int3   
   1bd3d:	int3   
   1bd3e:	push   0x3c
   1bd40:	push   0x76c70
   1bd45:	call   0x1e1dc
   1bd4a:	xor    esi,esi
   1bd4c:	push   esi
   1bd4d:	push   esi
   1bd4e:	push   esi
   1bd4f:	push   esi
   1bd50:	push   0x77cac
   1bd55:	call   DWORD PTR ds:0x1f834
   1bd5b:	cmp    eax,esi
   1bd5d:	jl     0x1becd
   1bd63:	mov    DWORD PTR [ebp-0x4],esi
   1bd66:	mov    edi,DWORD PTR [ebp+0x8]
   1bd69:	push   edi
   1bd6a:	lea    eax,[ebp-0x24]
   1bd6d:	push   eax
   1bd6e:	call   0x1ad74
   1bd73:	cmp    DWORD PTR [eax+0x4],esi
   1bd76:	setne  BYTE PTR [ebp-0x19]
   1bd7a:	push   DWORD PTR [ebp-0x24]
   1bd7d:	call   0x11d3e
   1bd82:	pop    ecx
   1bd83:	push   edi
   1bd84:	lea    eax,[ebp-0x2c]
   1bd87:	push   eax
   1bd88:	call   0x1ad9a
   1bd8d:	xor    al,al
   1bd8f:	cmp    DWORD PTR [edi+0x14],esi
   1bd92:	jne    0x1bda8
   1bd94:	lea    eax,[ebp-0x2c]
   1bd97:	push   eax
   1bd98:	mov    ecx,DWORD PTR ds:0x77ccc
   1bd9e:	call   0x1ba4a
   1bda3:	test   eax,eax
   1bda5:	setne  al
   1bda8:	test   al,al
   1bdaa:	je     0x1bdbb
   1bdac:	lea    eax,[ebp-0x2c]
   1bdaf:	push   eax
   1bdb0:	mov    ecx,DWORD PTR ds:0x77ccc
   1bdb6:	call   0x1bb90
   1bdbb:	mov    ebx,DWORD PTR ds:0x77cd4
   1bdc1:	cmp    DWORD PTR [ebx+0x2c],esi
   1bdc4:	jbe    0x1be24
   1bdc6:	mov    eax,ds:0x7791c
   1bdcb:	mov    DWORD PTR [ebp-0x20],eax
   1bdce:	cmp    eax,esi
   1bdd0:	ja     0x1bdd9
   1bdd2:	mov    DWORD PTR [ebp-0x20],0x1
   1bdd9:	mov    eax,DWORD PTR [ebp-0x20]
   1bddc:	cmp    DWORD PTR [ebx+0x2c],eax
   1bddf:	jb     0x1be24
   1bde1:	lea    esi,[ebx+0x4]
   1bde4:	lea    edi,[ebp-0x3c]
   1bde7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1bdeb:	mov    eax,DWORD PTR [ebp-0x34]
   1bdee:	mov    eax,DWORD PTR [eax]
   1bdf0:	mov    eax,DWORD PTR [eax+0xc]
   1bdf3:	xor    ecx,ecx
   1bdf5:	add    eax,0x9c40
   1bdfa:	push   ecx
   1bdfb:	pop    esi
   1bdfc:	adc    ecx,esi
   1bdfe:	mov    edx,DWORD PTR [ebp+0x8]
   1be01:	mov    edx,DWORD PTR [edx+0xc]
   1be04:	cmp    ecx,esi
   1be06:	ja     0x1be24
   1be08:	jb     0x1be0e
   1be0a:	cmp    eax,edx
   1be0c:	jae    0x1be24
   1be0e:	mov    ecx,ebx
   1be10:	call   0x1ab96
   1be15:	mov    ecx,ebx
   1be17:	call   0x1b1e4
   1be1c:	mov    ebx,DWORD PTR ds:0x77cd4
   1be22:	jmp    0x1bdd9
   1be24:	push   DWORD PTR [ebp+0x8]
   1be27:	lea    eax,[ebp-0x24]
   1be2a:	push   eax
   1be2b:	call   0x1ad9a
   1be30:	push   eax
   1be31:	lea    eax,[ebp-0x3c]
   1be34:	push   eax
   1be35:	call   0x1ade6
   1be3a:	push   DWORD PTR [ebp-0x24]
   1be3d:	call   0x11d3e
   1be42:	pop    ecx
   1be43:	mov    ebx,DWORD PTR ds:0x77cd4
   1be49:	lea    esi,[ebx+0x14]
   1be4c:	lea    edi,[ebp-0x4c]
   1be4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1be50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1be51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1be52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1be53:	mov    esi,DWORD PTR [ebp-0x34]
   1be56:	cmp    esi,DWORD PTR [ebp-0x44]
   1be59:	je     0x1be8d
   1be5b:	mov    eax,DWORD PTR [esi]
   1be5d:	mov    BYTE PTR [eax+0x1c],0x0
   1be61:	mov    eax,DWORD PTR [esi]
   1be63:	cmp    BYTE PTR [eax+0x24],0x0
   1be67:	jne    0x1be77
   1be69:	mov    BYTE PTR [eax+0x24],0x1
   1be6d:	mov    eax,DWORD PTR [esi]
   1be6f:	push   DWORD PTR [eax+0x8]
   1be72:	call   0x1ab10
   1be77:	mov    eax,DWORD PTR [esi]
   1be79:	mov    ecx,DWORD PTR [eax+0x8]
   1be7c:	mov    eax,DWORD PTR [ebp+0x8]
   1be7f:	mov    DWORD PTR [eax+0x8],ecx
   1be82:	mov    ecx,DWORD PTR [esi]
   1be84:	mov    ecx,DWORD PTR [ecx+0x20]
   1be87:	inc    ecx
   1be88:	mov    DWORD PTR [eax+0x20],ecx
   1be8b:	jmp    0x1be90
   1be8d:	mov    eax,DWORD PTR [ebp+0x8]
   1be90:	mov    cl,BYTE PTR [ebp-0x19]
   1be93:	mov    BYTE PTR [eax+0x1c],cl
   1be96:	lea    eax,[ebp+0x8]
   1be99:	push   eax
   1be9a:	mov    ecx,ebx
   1be9c:	call   0x1b8a2
   1bea1:	inc    DWORD PTR ds:0x77cd8
   1bea7:	push   DWORD PTR [ebp-0x2c]
   1beaa:	call   0x11d3e
   1beaf:	pop    ecx
   1beb0:	jmp    0x1beb9
   1beb2:	xor    eax,eax
   1beb4:	inc    eax
   1beb5:	ret    
   1beb6:	mov    esp,DWORD PTR [ebp-0x18]
   1beb9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1bec0:	push   0x0
   1bec2:	push   0x77cac
   1bec7:	call   DWORD PTR ds:0x1f838
   1becd:	call   0x1e221
   1bed2:	ret    0x4
   1bed5:	int3   
   1bed6:	int3   
   1bed7:	int3   
   1bed8:	int3   
   1bed9:	int3   
   1beda:	push   0x48
   1bedc:	push   0x76c90
   1bee1:	call   0x1e1dc
   1bee6:	xor    ebx,ebx
   1bee8:	push   ebx
   1bee9:	push   ebx
   1beea:	push   ebx
   1beeb:	push   ebx
   1beec:	push   0x77cac
   1bef1:	call   DWORD PTR ds:0x1f834
   1bef7:	cmp    eax,ebx
   1bef9:	jl     0x1bfa7
   1beff:	mov    DWORD PTR [ebp-0x4],ebx
   1bf02:	push   DWORD PTR ds:0x77cd0
   1bf08:	lea    ecx,[ebp-0x28]
   1bf0b:	call   0x1b8fc
   1bf10:	mov    BYTE PTR [ebp-0x19],bl
   1bf13:	cmp    DWORD PTR [ebp-0x20],ebx
   1bf16:	je     0x1bf36
   1bf18:	mov    eax,DWORD PTR [ebp-0x24]
   1bf1b:	mov    eax,DWORD PTR [eax]
   1bf1d:	mov    eax,DWORD PTR [eax+0x8]
   1bf20:	cmp    eax,DWORD PTR ds:0x77cd8
   1bf26:	ja     0x1bf36
   1bf28:	mov    BYTE PTR [ebp-0x19],0x1
   1bf2c:	lea    ecx,[ebp-0x28]
   1bf2f:	call   0x1b25a
   1bf34:	jmp    0x1bf13
   1bf36:	cmp    BYTE PTR [ebp-0x19],bl
   1bf39:	je     0x1bf71
   1bf3b:	push   DWORD PTR ds:0x77cd4
   1bf41:	lea    ecx,[ebp-0x58]
   1bf44:	call   0x1bc46
   1bf49:	mov    esi,DWORD PTR [ebp+0x8]
   1bf4c:	push   esi
   1bf4d:	lea    eax,[ebp-0x58]
   1bf50:	push   eax
   1bf51:	call   0x1ae84
   1bf56:	cmp    DWORD PTR [esi],ebx
   1bf58:	jne    0x1bf69
   1bf5a:	lea    eax,[ebp-0x28]
   1bf5d:	push   eax
   1bf5e:	mov    ecx,DWORD PTR ds:0x77cd0
   1bf64:	call   0x1b93a
   1bf69:	lea    ecx,[ebp-0x58]
   1bf6c:	call   0x1b886
   1bf71:	lea    ecx,[ebp-0x28]
   1bf74:	call   0x1b226
   1bf79:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1bf80:	jmp    0x1bf9b
   1bf82:	xor    eax,eax
   1bf84:	inc    eax
   1bf85:	ret    
   1bf86:	mov    esp,DWORD PTR [ebp-0x18]
   1bf89:	mov    eax,DWORD PTR [ebp+0x8]
   1bf8c:	mov    DWORD PTR [eax],0x2
   1bf92:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1bf99:	xor    ebx,ebx
   1bf9b:	push   ebx
   1bf9c:	push   0x77cac
   1bfa1:	call   DWORD PTR ds:0x1f838
   1bfa7:	call   0x1e221
   1bfac:	ret    0x4
   1bfaf:	int3   
   1bfb0:	int3   
   1bfb1:	int3   
   1bfb2:	int3   
   1bfb3:	int3   
   1bfb4:	mov    edi,edi
   1bfb6:	push   ebp
   1bfb7:	mov    ebp,esp
   1bfb9:	mov    ecx,DWORD PTR [ebp+0x8]
   1bfbc:	xor    edx,edx
   1bfbe:	cmp    ecx,edx
   1bfc0:	je     0x1c010
   1bfc2:	mov    eax,DWORD PTR [ecx+0x1c]
   1bfc5:	cmp    eax,edx
   1bfc7:	je     0x1c010
   1bfc9:	mov    DWORD PTR [eax+0x1c],edx
   1bfcc:	mov    DWORD PTR [ecx+0x14],edx
   1bfcf:	mov    DWORD PTR [ecx+0x8],edx
   1bfd2:	mov    DWORD PTR [ecx+0x18],edx
   1bfd5:	mov    DWORD PTR [ecx+0x30],0x1
   1bfdc:	lea    ecx,[eax+0x530]
   1bfe2:	mov    DWORD PTR [eax],edx
   1bfe4:	mov    DWORD PTR [eax+0x4],edx
   1bfe7:	mov    DWORD PTR [eax+0xc],edx
   1bfea:	mov    DWORD PTR [eax+0x14],0x8000
   1bff1:	mov    DWORD PTR [eax+0x20],edx
   1bff4:	mov    DWORD PTR [eax+0x28],edx
   1bff7:	mov    DWORD PTR [eax+0x2c],edx
   1bffa:	mov    DWORD PTR [eax+0x30],edx
   1bffd:	mov    DWORD PTR [eax+0x38],edx
   1c000:	mov    DWORD PTR [eax+0x3c],edx
   1c003:	mov    DWORD PTR [eax+0x6c],ecx
   1c006:	mov    DWORD PTR [eax+0x50],ecx
   1c009:	mov    DWORD PTR [eax+0x4c],ecx
   1c00c:	xor    eax,eax
   1c00e:	jmp    0x1c013
   1c010:	push   0xfffffffe
   1c012:	pop    eax
   1c013:	pop    ebp
   1c014:	ret    0x4
   1c017:	int3   
   1c018:	int3   
   1c019:	int3   
   1c01a:	int3   
   1c01b:	int3   
   1c01c:	mov    edi,edi
   1c01e:	push   ebp
   1c01f:	mov    ebp,esp
   1c021:	mov    eax,DWORD PTR [ebp+0x10]
   1c024:	push   esi
   1c025:	push   edi
   1c026:	xor    edi,edi
   1c028:	cmp    eax,edi
   1c02a:	je     0x1c0c5
   1c030:	cmp    BYTE PTR [eax],0x31
   1c033:	jne    0x1c0c5
   1c039:	cmp    DWORD PTR [ebp+0x14],0x38
   1c03d:	jne    0x1c0c5
   1c043:	mov    esi,DWORD PTR [ebp+0x8]
   1c046:	cmp    esi,edi
   1c048:	jne    0x1c04e
   1c04a:	push   0xfffffffe
   1c04c:	jmp    0x1c0c7
   1c04e:	mov    DWORD PTR [esi+0x18],edi
   1c051:	cmp    DWORD PTR [esi+0x20],edi
   1c054:	jne    0x1c060
   1c056:	mov    DWORD PTR [esi+0x20],0x1d414
   1c05d:	mov    DWORD PTR [esi+0x28],edi
   1c060:	cmp    DWORD PTR [esi+0x24],edi
   1c063:	jne    0x1c06c
   1c065:	mov    DWORD PTR [esi+0x24],0x1d430
   1c06c:	push   0x2530
   1c071:	push   0x1
   1c073:	push   DWORD PTR [esi+0x28]
   1c076:	call   DWORD PTR [esi+0x20]
   1c079:	cmp    eax,edi
   1c07b:	jne    0x1c081
   1c07d:	push   0xfffffffc
   1c07f:	jmp    0x1c0c7
   1c081:	mov    ecx,DWORD PTR [ebp+0xc]
   1c084:	cmp    ecx,edi
   1c086:	mov    DWORD PTR [esi+0x1c],eax
   1c089:	jge    0x1c092
   1c08b:	mov    DWORD PTR [eax+0x8],edi
   1c08e:	neg    ecx
   1c090:	jmp    0x1c0a3
   1c092:	mov    edx,ecx
   1c094:	sar    edx,0x4
   1c097:	inc    edx
   1c098:	cmp    ecx,0x30
   1c09b:	mov    DWORD PTR [eax+0x8],edx
   1c09e:	jge    0x1c0a3
   1c0a0:	and    ecx,0xf
   1c0a3:	lea    edx,[ecx-0x8]
   1c0a6:	cmp    edx,0x7
   1c0a9:	ja     0x1c0b9
   1c0ab:	push   esi
   1c0ac:	mov    DWORD PTR [eax+0x24],ecx
   1c0af:	mov    DWORD PTR [eax+0x34],edi
   1c0b2:	call   0x1bfb4
   1c0b7:	jmp    0x1c0c8
   1c0b9:	push   eax
   1c0ba:	push   DWORD PTR [esi+0x28]
   1c0bd:	call   DWORD PTR [esi+0x24]
   1c0c0:	mov    DWORD PTR [esi+0x1c],edi
   1c0c3:	jmp    0x1c04a
   1c0c5:	push   0xfffffffa
   1c0c7:	pop    eax
   1c0c8:	pop    edi
   1c0c9:	pop    esi
   1c0ca:	pop    ebp
   1c0cb:	ret    0x10
   1c0ce:	int3   
   1c0cf:	int3   
   1c0d0:	int3   
   1c0d1:	int3   
   1c0d2:	int3   
   1c0d3:	int3   
   1c0d4:	mov    edi,edi
   1c0d6:	push   ebp
   1c0d7:	mov    ebp,esp
   1c0d9:	push   ecx
   1c0da:	push   ebx
   1c0db:	push   esi
   1c0dc:	mov    esi,DWORD PTR [edi+0x1c]
   1c0df:	cmp    DWORD PTR [esi+0x34],0x0
   1c0e3:	mov    ebx,eax
   1c0e5:	jne    0x1c105
   1c0e7:	mov    ecx,DWORD PTR [esi+0x24]
   1c0ea:	xor    eax,eax
   1c0ec:	inc    eax
   1c0ed:	shl    eax,cl
   1c0ef:	push   0x1
   1c0f1:	push   eax
   1c0f2:	push   DWORD PTR [edi+0x28]
   1c0f5:	call   DWORD PTR [edi+0x20]
   1c0f8:	mov    DWORD PTR [esi+0x34],eax
   1c0fb:	test   eax,eax
   1c0fd:	jne    0x1c105
   1c0ff:	inc    eax
   1c100:	jmp    0x1c1a7
   1c105:	xor    eax,eax
   1c107:	cmp    DWORD PTR [esi+0x28],eax
   1c10a:	jne    0x1c11d
   1c10c:	mov    ecx,DWORD PTR [esi+0x24]
   1c10f:	xor    edx,edx
   1c111:	inc    edx
   1c112:	shl    edx,cl
   1c114:	mov    DWORD PTR [esi+0x30],eax
   1c117:	mov    DWORD PTR [esi+0x2c],eax
   1c11a:	mov    DWORD PTR [esi+0x28],edx
   1c11d:	sub    ebx,DWORD PTR [edi+0x10]
   1c120:	mov    eax,DWORD PTR [esi+0x28]
   1c123:	cmp    ebx,eax
   1c125:	jb     0x1c13f
   1c127:	mov    ecx,DWORD PTR [edi+0xc]
   1c12a:	push   eax
   1c12b:	sub    ecx,eax
   1c12d:	push   ecx
   1c12e:	push   DWORD PTR [esi+0x34]
   1c131:	call   0x1e1b6
   1c136:	add    esp,0xc
   1c139:	and    DWORD PTR [esi+0x30],0x0
   1c13d:	jmp    0x1c180
   1c13f:	sub    eax,DWORD PTR [esi+0x30]
   1c142:	mov    DWORD PTR [ebp-0x4],eax
   1c145:	cmp    eax,ebx
   1c147:	jbe    0x1c14c
   1c149:	mov    DWORD PTR [ebp-0x4],ebx
   1c14c:	mov    eax,DWORD PTR [edi+0xc]
   1c14f:	push   DWORD PTR [ebp-0x4]
   1c152:	sub    eax,ebx
   1c154:	push   eax
   1c155:	mov    eax,DWORD PTR [esi+0x34]
   1c158:	add    eax,DWORD PTR [esi+0x30]
   1c15b:	push   eax
   1c15c:	call   0x1e1b6
   1c161:	mov    eax,DWORD PTR [ebp-0x4]
   1c164:	add    esp,0xc
   1c167:	sub    ebx,eax
   1c169:	je     0x1c188
   1c16b:	mov    eax,DWORD PTR [edi+0xc]
   1c16e:	push   ebx
   1c16f:	sub    eax,ebx
   1c171:	push   eax
   1c172:	push   DWORD PTR [esi+0x34]
   1c175:	call   0x1e1b6
   1c17a:	add    esp,0xc
   1c17d:	mov    DWORD PTR [esi+0x30],ebx
   1c180:	mov    eax,DWORD PTR [esi+0x28]
   1c183:	mov    DWORD PTR [esi+0x2c],eax
   1c186:	jmp    0x1c1a5
   1c188:	add    DWORD PTR [esi+0x30],eax
   1c18b:	mov    ecx,DWORD PTR [esi+0x30]
   1c18e:	mov    edx,DWORD PTR [esi+0x28]
   1c191:	cmp    ecx,edx
   1c193:	jne    0x1c199
   1c195:	and    DWORD PTR [esi+0x30],0x0
   1c199:	mov    ecx,DWORD PTR [esi+0x2c]
   1c19c:	cmp    ecx,edx
   1c19e:	jae    0x1c1a5
   1c1a0:	add    ecx,eax
   1c1a2:	mov    DWORD PTR [esi+0x2c],ecx
   1c1a5:	xor    eax,eax
   1c1a7:	pop    esi
   1c1a8:	pop    ebx
   1c1a9:	leave  
   1c1aa:	ret    
   1c1ab:	int3   
   1c1ac:	int3   
   1c1ad:	int3   
   1c1ae:	int3   
   1c1af:	int3   
   1c1b0:	mov    edi,edi
   1c1b2:	push   ebp
   1c1b3:	mov    ebp,esp
   1c1b5:	mov    edx,DWORD PTR [ebp+0x8]
   1c1b8:	sub    esp,0x2c
   1c1bb:	push   ebx
   1c1bc:	xor    eax,eax
   1c1be:	push   esi
   1c1bf:	push   edi
   1c1c0:	cmp    edx,eax
   1c1c2:	je     0x1c212
   1c1c4:	mov    esi,DWORD PTR [edx+0x1c]
   1c1c7:	cmp    esi,eax
   1c1c9:	je     0x1c212
   1c1cb:	cmp    DWORD PTR [edx+0xc],eax
   1c1ce:	je     0x1c212
   1c1d0:	cmp    DWORD PTR [edx],eax
   1c1d2:	jne    0x1c1d9
   1c1d4:	cmp    DWORD PTR [edx+0x4],eax
   1c1d7:	jne    0x1c212
   1c1d9:	cmp    DWORD PTR [esi],0xb
   1c1dc:	jne    0x1c1e4
   1c1de:	mov    DWORD PTR [esi],0xc
   1c1e4:	mov    eax,DWORD PTR [edx+0xc]
   1c1e7:	mov    ecx,DWORD PTR [edx+0x10]
   1c1ea:	and    DWORD PTR [ebp-0x24],0x0
   1c1ee:	mov    ebx,DWORD PTR [esi+0x38]
   1c1f1:	mov    edi,DWORD PTR [esi+0x3c]
   1c1f4:	mov    DWORD PTR [ebp-0x18],eax
   1c1f7:	mov    eax,DWORD PTR [edx]
   1c1f9:	mov    DWORD PTR [ebp-0x4],eax
   1c1fc:	mov    eax,DWORD PTR [edx+0x4]
   1c1ff:	mov    DWORD PTR [ebp-0x8],eax
   1c202:	mov    DWORD PTR [ebp-0x2c],eax
   1c205:	mov    eax,DWORD PTR [esi]
   1c207:	mov    DWORD PTR [ebp-0x10],ecx
   1c20a:	mov    DWORD PTR [ebp-0x1c],ecx
   1c20d:	cmp    eax,0x1c
   1c210:	jbe    0x1c21f
   1c212:	push   0xfffffffe
   1c214:	pop    eax
   1c215:	pop    edi
   1c216:	pop    esi
   1c217:	pop    ebx
   1c218:	leave  
   1c219:	ret    0x8
   1c21c:	mov    edx,DWORD PTR [ebp+0x8]
   1c21f:	jmp    DWORD PTR [eax*4+0x1d354]
   1c226:	mov    eax,DWORD PTR [esi+0x8]
   1c229:	test   eax,eax
   1c22b:	jne    0x1c257
   1c22d:	mov    DWORD PTR [esi],0xc
   1c233:	jmp    0x1d225
   1c238:	cmp    DWORD PTR [ebp-0x8],0x0
   1c23c:	je     0x1d273
   1c242:	mov    ecx,DWORD PTR [ebp-0x4]
   1c245:	movzx  edx,BYTE PTR [ecx]
   1c248:	dec    DWORD PTR [ebp-0x8]
   1c24b:	mov    ecx,edi
   1c24d:	shl    edx,cl
   1c24f:	add    ebx,edx
   1c251:	inc    DWORD PTR [ebp-0x4]
   1c254:	add    edi,0x8
   1c257:	cmp    edi,0x10
   1c25a:	jb     0x1c238
   1c25c:	test   al,0x2
   1c25e:	je     0x1c29b
   1c260:	cmp    ebx,0x8b1f
   1c266:	jne    0x1c29b
   1c268:	xor    edi,edi
   1c26a:	push   edi
   1c26b:	push   edi
   1c26c:	push   edi
   1c26d:	call   0x1e0d6
   1c272:	mov    DWORD PTR [esi+0x18],eax
   1c275:	push   0x2
   1c277:	lea    eax,[ebp-0x14]
   1c27a:	push   eax
   1c27b:	mov    BYTE PTR [ebp-0x14],0x1f
   1c27f:	mov    BYTE PTR [ebp-0x13],0x8b
   1c283:	push   DWORD PTR [esi+0x18]
   1c286:	call   0x1e0d6
   1c28b:	mov    DWORD PTR [esi+0x18],eax
   1c28e:	xor    ebx,ebx
   1c290:	mov    DWORD PTR [esi],0x1
   1c296:	jmp    0x1d225
   1c29b:	mov    eax,DWORD PTR [esi+0x20]
   1c29e:	and    DWORD PTR [esi+0x10],0x0
   1c2a2:	test   eax,eax
   1c2a4:	je     0x1c2aa
   1c2a6:	or     DWORD PTR [eax+0x30],0xffffffff
   1c2aa:	test   BYTE PTR [esi+0x8],0x1
   1c2ae:	je     0x1c334
   1c2b4:	movzx  eax,bl
   1c2b7:	shl    eax,0x8
   1c2ba:	mov    ecx,ebx
   1c2bc:	shr    ecx,0x8
   1c2bf:	add    eax,ecx
   1c2c1:	push   0x1f
   1c2c3:	xor    edx,edx
   1c2c5:	pop    ecx
   1c2c6:	div    ecx
   1c2c8:	test   edx,edx
   1c2ca:	jne    0x1c334
   1c2cc:	mov    eax,ebx
   1c2ce:	and    al,0xf
   1c2d0:	cmp    al,0x8
   1c2d2:	je     0x1c2e3
   1c2d4:	mov    eax,DWORD PTR [ebp+0x8]
   1c2d7:	mov    DWORD PTR [eax+0x18],0x1f704
   1c2de:	jmp    0x1d21f
   1c2e3:	shr    ebx,0x4
   1c2e6:	mov    ecx,ebx
   1c2e8:	and    ecx,0xf
   1c2eb:	add    ecx,0x8
   1c2ee:	sub    edi,0x4
   1c2f1:	cmp    ecx,DWORD PTR [esi+0x24]
   1c2f4:	jbe    0x1c305
   1c2f6:	mov    eax,DWORD PTR [ebp+0x8]
   1c2f9:	mov    DWORD PTR [eax+0x18],0x1f6f0
   1c300:	jmp    0x1d21f
   1c305:	xor    eax,eax
   1c307:	xor    edi,edi
   1c309:	inc    eax
   1c30a:	push   edi
   1c30b:	shl    eax,cl
   1c30d:	push   edi
   1c30e:	push   edi
   1c30f:	mov    DWORD PTR [esi+0x14],eax
   1c312:	call   0x1dc34
   1c317:	mov    ecx,DWORD PTR [ebp+0x8]
   1c31a:	shr    ebx,0x8
   1c31d:	not    ebx
   1c31f:	and    ebx,0x2
   1c322:	or     ebx,0x9
   1c325:	mov    DWORD PTR [esi+0x18],eax
   1c328:	mov    DWORD PTR [ecx+0x30],eax
   1c32b:	mov    DWORD PTR [esi],ebx
   1c32d:	xor    ebx,ebx
   1c32f:	jmp    0x1d225
   1c334:	mov    eax,DWORD PTR [ebp+0x8]
   1c337:	mov    DWORD PTR [eax+0x18],0x1f6d8
   1c33e:	jmp    0x1d21f
   1c343:	cmp    edi,0x10
   1c346:	jae    0x1c36f
   1c348:	cmp    DWORD PTR [ebp-0x8],0x0
   1c34c:	je     0x1d273
   1c352:	mov    eax,DWORD PTR [ebp-0x4]
   1c355:	movzx  eax,BYTE PTR [eax]
   1c358:	dec    DWORD PTR [ebp-0x8]
   1c35b:	mov    ecx,edi
   1c35d:	shl    eax,cl
   1c35f:	add    edi,0x8
   1c362:	add    ebx,eax
   1c364:	inc    DWORD PTR [ebp-0x4]
   1c367:	cmp    edi,0x10
   1c36a:	jb     0x1c348
   1c36c:	mov    edx,DWORD PTR [ebp+0x8]
   1c36f:	mov    DWORD PTR [esi+0x10],ebx
   1c372:	cmp    bl,0x8
   1c375:	je     0x1c383
   1c377:	mov    DWORD PTR [edx+0x18],0x1f704
   1c37e:	jmp    0x1d21f
   1c383:	test   ebx,0xe000
   1c389:	je     0x1c397
   1c38b:	mov    DWORD PTR [edx+0x18],0x1f6be
   1c392:	jmp    0x1d21f
   1c397:	mov    eax,DWORD PTR [esi+0x20]
   1c39a:	test   eax,eax
   1c39c:	je     0x1c3a8
   1c39e:	mov    ecx,ebx
   1c3a0:	shr    ecx,0x8
   1c3a3:	and    ecx,0x1
   1c3a6:	mov    DWORD PTR [eax],ecx
   1c3a8:	test   DWORD PTR [esi+0x10],0x200
   1c3af:	je     0x1c3ce
   1c3b1:	mov    BYTE PTR [ebp-0x14],bl
   1c3b4:	push   0x2
   1c3b6:	lea    eax,[ebp-0x14]
   1c3b9:	shr    ebx,0x8
   1c3bc:	push   eax
   1c3bd:	mov    BYTE PTR [ebp-0x13],bl
   1c3c0:	push   DWORD PTR [esi+0x18]
   1c3c3:	call   0x1e0d6
   1c3c8:	mov    edx,DWORD PTR [ebp+0x8]
   1c3cb:	mov    DWORD PTR [esi+0x18],eax
   1c3ce:	xor    ebx,ebx
   1c3d0:	xor    edi,edi
   1c3d2:	mov    DWORD PTR [esi],0x2
   1c3d8:	cmp    edi,0x20
   1c3db:	jae    0x1c404
   1c3dd:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3e1:	je     0x1d273
   1c3e7:	mov    eax,DWORD PTR [ebp-0x4]
   1c3ea:	movzx  eax,BYTE PTR [eax]
   1c3ed:	dec    DWORD PTR [ebp-0x8]
   1c3f0:	mov    ecx,edi
   1c3f2:	shl    eax,cl
   1c3f4:	add    edi,0x8
   1c3f7:	add    ebx,eax
   1c3f9:	inc    DWORD PTR [ebp-0x4]
   1c3fc:	cmp    edi,0x20
   1c3ff:	jb     0x1c3dd
   1c401:	mov    edx,DWORD PTR [ebp+0x8]
   1c404:	mov    eax,DWORD PTR [esi+0x20]
   1c407:	test   eax,eax
   1c409:	je     0x1c40e
   1c40b:	mov    DWORD PTR [eax+0x4],ebx
   1c40e:	test   DWORD PTR [esi+0x10],0x200
   1c415:	je     0x1c444
   1c417:	mov    eax,ebx
   1c419:	shr    eax,0x8
   1c41c:	mov    BYTE PTR [ebp-0x13],al
   1c41f:	mov    eax,ebx
   1c421:	shr    eax,0x10
   1c424:	mov    BYTE PTR [ebp-0x12],al
   1c427:	mov    BYTE PTR [ebp-0x14],bl
   1c42a:	push   0x4
   1c42c:	lea    eax,[ebp-0x14]
   1c42f:	shr    ebx,0x18
   1c432:	push   eax
   1c433:	mov    BYTE PTR [ebp-0x11],bl
   1c436:	push   DWORD PTR [esi+0x18]
   1c439:	call   0x1e0d6
   1c43e:	mov    edx,DWORD PTR [ebp+0x8]
   1c441:	mov    DWORD PTR [esi+0x18],eax
   1c444:	xor    ebx,ebx
   1c446:	xor    edi,edi
   1c448:	mov    DWORD PTR [esi],0x3
   1c44e:	cmp    edi,0x10
   1c451:	jae    0x1c47a
   1c453:	cmp    DWORD PTR [ebp-0x8],0x0
   1c457:	je     0x1d273
   1c45d:	mov    eax,DWORD PTR [ebp-0x4]
   1c460:	movzx  eax,BYTE PTR [eax]
   1c463:	dec    DWORD PTR [ebp-0x8]
   1c466:	mov    ecx,edi
   1c468:	shl    eax,cl
   1c46a:	add    edi,0x8
   1c46d:	add    ebx,eax
   1c46f:	inc    DWORD PTR [ebp-0x4]
   1c472:	cmp    edi,0x10
   1c475:	jb     0x1c453
   1c477:	mov    edx,DWORD PTR [ebp+0x8]
   1c47a:	mov    eax,DWORD PTR [esi+0x20]
   1c47d:	test   eax,eax
   1c47f:	je     0x1c497
   1c481:	mov    ecx,ebx
   1c483:	and    ecx,0xff
   1c489:	mov    DWORD PTR [eax+0x8],ecx
   1c48c:	mov    ecx,DWORD PTR [esi+0x20]
   1c48f:	mov    eax,ebx
   1c491:	shr    eax,0x8
   1c494:	mov    DWORD PTR [ecx+0xc],eax
   1c497:	test   DWORD PTR [esi+0x10],0x200
   1c49e:	je     0x1c4bd
   1c4a0:	mov    BYTE PTR [ebp-0x14],bl
   1c4a3:	push   0x2
   1c4a5:	lea    eax,[ebp-0x14]
   1c4a8:	shr    ebx,0x8
   1c4ab:	push   eax
   1c4ac:	mov    BYTE PTR [ebp-0x13],bl
   1c4af:	push   DWORD PTR [esi+0x18]
   1c4b2:	call   0x1e0d6
   1c4b7:	mov    edx,DWORD PTR [ebp+0x8]
   1c4ba:	mov    DWORD PTR [esi+0x18],eax
   1c4bd:	xor    ebx,ebx
   1c4bf:	xor    edi,edi
   1c4c1:	mov    DWORD PTR [esi],0x4
   1c4c7:	test   DWORD PTR [esi+0x10],0x400
   1c4ce:	je     0x1c535
   1c4d0:	cmp    edi,0x10
   1c4d3:	jae    0x1c4fc
   1c4d5:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4d9:	je     0x1d273
   1c4df:	mov    eax,DWORD PTR [ebp-0x4]
   1c4e2:	movzx  eax,BYTE PTR [eax]
   1c4e5:	dec    DWORD PTR [ebp-0x8]
   1c4e8:	mov    ecx,edi
   1c4ea:	shl    eax,cl
   1c4ec:	add    edi,0x8
   1c4ef:	add    ebx,eax
   1c4f1:	inc    DWORD PTR [ebp-0x4]
   1c4f4:	cmp    edi,0x10
   1c4f7:	jb     0x1c4d5
   1c4f9:	mov    edx,DWORD PTR [ebp+0x8]
   1c4fc:	mov    eax,DWORD PTR [esi+0x20]
   1c4ff:	mov    DWORD PTR [esi+0x40],ebx
   1c502:	test   eax,eax
   1c504:	je     0x1c509
   1c506:	mov    DWORD PTR [eax+0x14],ebx
   1c509:	test   DWORD PTR [esi+0x10],0x200
   1c510:	je     0x1c52f
   1c512:	mov    BYTE PTR [ebp-0x14],bl
   1c515:	push   0x2
   1c517:	lea    eax,[ebp-0x14]
   1c51a:	shr    ebx,0x8
   1c51d:	push   eax
   1c51e:	mov    BYTE PTR [ebp-0x13],bl
   1c521:	push   DWORD PTR [esi+0x18]
   1c524:	call   0x1e0d6
   1c529:	mov    edx,DWORD PTR [ebp+0x8]
   1c52c:	mov    DWORD PTR [esi+0x18],eax
   1c52f:	xor    ebx,ebx
   1c531:	xor    edi,edi
   1c533:	jmp    0x1c540
   1c535:	mov    eax,DWORD PTR [esi+0x20]
   1c538:	test   eax,eax
   1c53a:	je     0x1c540
   1c53c:	and    DWORD PTR [eax+0x10],0x0
   1c540:	mov    DWORD PTR [esi],0x5
   1c546:	test   DWORD PTR [esi+0x10],0x400
   1c54d:	je     0x1c5d7
   1c553:	mov    edx,DWORD PTR [esi+0x40]
   1c556:	mov    eax,DWORD PTR [ebp-0x8]
   1c559:	mov    DWORD PTR [ebp-0xc],edx
   1c55c:	cmp    edx,eax
   1c55e:	jbe    0x1c563
   1c560:	mov    DWORD PTR [ebp-0xc],eax
   1c563:	cmp    DWORD PTR [ebp-0xc],0x0
   1c567:	je     0x1c5ca
   1c569:	mov    ecx,DWORD PTR [esi+0x20]
   1c56c:	test   ecx,ecx
   1c56e:	je     0x1c5a4
   1c570:	mov    eax,DWORD PTR [ecx+0x10]
   1c573:	mov    DWORD PTR [ebp-0x28],eax
   1c576:	test   eax,eax
   1c578:	je     0x1c5a4
   1c57a:	mov    eax,DWORD PTR [ecx+0x14]
   1c57d:	mov    ecx,DWORD PTR [ecx+0x18]
   1c580:	sub    eax,edx
   1c582:	mov    edx,DWORD PTR [ebp-0xc]
   1c585:	add    edx,eax
   1c587:	cmp    edx,ecx
   1c589:	jbe    0x1c58f
   1c58b:	sub    ecx,eax
   1c58d:	jmp    0x1c592
   1c58f:	mov    ecx,DWORD PTR [ebp-0xc]
   1c592:	push   ecx
   1c593:	mov    ecx,DWORD PTR [ebp-0x28]
   1c596:	push   DWORD PTR [ebp-0x4]
   1c599:	add    ecx,eax
   1c59b:	push   ecx
   1c59c:	call   0x1e1b6
   1c5a1:	add    esp,0xc
   1c5a4:	test   DWORD PTR [esi+0x10],0x200
   1c5ab:	je     0x1c5be
   1c5ad:	push   DWORD PTR [ebp-0xc]
   1c5b0:	push   DWORD PTR [ebp-0x4]
   1c5b3:	push   DWORD PTR [esi+0x18]
   1c5b6:	call   0x1e0d6
   1c5bb:	mov    DWORD PTR [esi+0x18],eax
   1c5be:	mov    eax,DWORD PTR [ebp-0xc]
   1c5c1:	sub    DWORD PTR [ebp-0x8],eax
   1c5c4:	add    DWORD PTR [ebp-0x4],eax
   1c5c7:	sub    DWORD PTR [esi+0x40],eax
   1c5ca:	cmp    DWORD PTR [esi+0x40],0x0
   1c5ce:	jne    0x1d273
   1c5d4:	mov    edx,DWORD PTR [ebp+0x8]
   1c5d7:	and    DWORD PTR [esi+0x40],0x0
   1c5db:	mov    DWORD PTR [esi],0x6
   1c5e1:	test   DWORD PTR [esi+0x10],0x800
   1c5e8:	je     0x1c665
   1c5ea:	cmp    DWORD PTR [ebp-0x8],0x0
   1c5ee:	je     0x1d273
   1c5f4:	xor    ecx,ecx
   1c5f6:	mov    eax,DWORD PTR [ebp-0x4]
   1c5f9:	movzx  eax,BYTE PTR [ecx+eax*1]
   1c5fd:	inc    ecx
   1c5fe:	mov    DWORD PTR [ebp-0xc],ecx
   1c601:	mov    ecx,DWORD PTR [esi+0x20]
   1c604:	mov    DWORD PTR [ebp-0x20],eax
   1c607:	test   ecx,ecx
   1c609:	je     0x1c626
   1c60b:	mov    edx,DWORD PTR [ecx+0x1c]
   1c60e:	mov    DWORD PTR [ebp-0x28],edx
   1c611:	test   edx,edx
   1c613:	je     0x1c626
   1c615:	mov    edx,DWORD PTR [esi+0x40]
   1c618:	cmp    edx,DWORD PTR [ecx+0x20]
   1c61b:	jae    0x1c626
   1c61d:	mov    ecx,DWORD PTR [ebp-0x28]
   1c620:	mov    BYTE PTR [ecx+edx*1],al
   1c623:	inc    DWORD PTR [esi+0x40]
   1c626:	test   eax,eax
   1c628:	je     0x1c632
   1c62a:	mov    ecx,DWORD PTR [ebp-0xc]
   1c62d:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c630:	jb     0x1c5f6
   1c632:	test   DWORD PTR [esi+0x10],0x200
   1c639:	je     0x1c64f
   1c63b:	push   DWORD PTR [ebp-0xc]
   1c63e:	push   DWORD PTR [ebp-0x4]
   1c641:	push   DWORD PTR [esi+0x18]
   1c644:	call   0x1e0d6
   1c649:	mov    DWORD PTR [esi+0x18],eax
   1c64c:	mov    eax,DWORD PTR [ebp-0x20]
   1c64f:	mov    ecx,DWORD PTR [ebp-0xc]
   1c652:	sub    DWORD PTR [ebp-0x8],ecx
   1c655:	add    DWORD PTR [ebp-0x4],ecx
   1c658:	test   eax,eax
   1c65a:	jne    0x1d273
   1c660:	mov    edx,DWORD PTR [ebp+0x8]
   1c663:	jmp    0x1c670
   1c665:	mov    eax,DWORD PTR [esi+0x20]
   1c668:	test   eax,eax
   1c66a:	je     0x1c670
   1c66c:	and    DWORD PTR [eax+0x1c],0x0
   1c670:	and    DWORD PTR [esi+0x40],0x0
   1c674:	mov    DWORD PTR [esi],0x7
   1c67a:	test   DWORD PTR [esi+0x10],0x1000
   1c681:	je     0x1c6fe
   1c683:	cmp    DWORD PTR [ebp-0x8],0x0
   1c687:	je     0x1d273
   1c68d:	xor    ecx,ecx
   1c68f:	mov    eax,DWORD PTR [ebp-0x4]
   1c692:	movzx  eax,BYTE PTR [ecx+eax*1]
   1c696:	inc    ecx
   1c697:	mov    DWORD PTR [ebp-0xc],ecx
   1c69a:	mov    ecx,DWORD PTR [esi+0x20]
   1c69d:	mov    DWORD PTR [ebp-0x20],eax
   1c6a0:	test   ecx,ecx
   1c6a2:	je     0x1c6bf
   1c6a4:	mov    edx,DWORD PTR [ecx+0x24]
   1c6a7:	mov    DWORD PTR [ebp-0x28],edx
   1c6aa:	test   edx,edx
   1c6ac:	je     0x1c6bf
   1c6ae:	mov    edx,DWORD PTR [esi+0x40]
   1c6b1:	cmp    edx,DWORD PTR [ecx+0x28]
   1c6b4:	jae    0x1c6bf
   1c6b6:	mov    ecx,DWORD PTR [ebp-0x28]
   1c6b9:	mov    BYTE PTR [ecx+edx*1],al
   1c6bc:	inc    DWORD PTR [esi+0x40]
   1c6bf:	test   eax,eax
   1c6c1:	je     0x1c6cb
   1c6c3:	mov    ecx,DWORD PTR [ebp-0xc]
   1c6c6:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c6c9:	jb     0x1c68f
   1c6cb:	test   DWORD PTR [esi+0x10],0x200
   1c6d2:	je     0x1c6e8
   1c6d4:	push   DWORD PTR [ebp-0xc]
   1c6d7:	push   DWORD PTR [ebp-0x4]
   1c6da:	push   DWORD PTR [esi+0x18]
   1c6dd:	call   0x1e0d6
   1c6e2:	mov    DWORD PTR [esi+0x18],eax
   1c6e5:	mov    eax,DWORD PTR [ebp-0x20]
   1c6e8:	mov    ecx,DWORD PTR [ebp-0xc]
   1c6eb:	sub    DWORD PTR [ebp-0x8],ecx
   1c6ee:	add    DWORD PTR [ebp-0x4],ecx
   1c6f1:	test   eax,eax
   1c6f3:	jne    0x1d273
   1c6f9:	mov    edx,DWORD PTR [ebp+0x8]
   1c6fc:	jmp    0x1c709
   1c6fe:	mov    eax,DWORD PTR [esi+0x20]
   1c701:	test   eax,eax
   1c703:	je     0x1c709
   1c705:	and    DWORD PTR [eax+0x24],0x0
   1c709:	mov    DWORD PTR [esi],0x8
   1c70f:	test   DWORD PTR [esi+0x10],0x200
   1c716:	je     0x1c75c
   1c718:	cmp    edi,0x10
   1c71b:	jae    0x1c744
   1c71d:	cmp    DWORD PTR [ebp-0x8],0x0
   1c721:	je     0x1d273
   1c727:	mov    eax,DWORD PTR [ebp-0x4]
   1c72a:	movzx  eax,BYTE PTR [eax]
   1c72d:	dec    DWORD PTR [ebp-0x8]
   1c730:	mov    ecx,edi
   1c732:	shl    eax,cl
   1c734:	add    edi,0x8
   1c737:	add    ebx,eax
   1c739:	inc    DWORD PTR [ebp-0x4]
   1c73c:	cmp    edi,0x10
   1c73f:	jb     0x1c71d
   1c741:	mov    edx,DWORD PTR [ebp+0x8]
   1c744:	movzx  eax,WORD PTR [esi+0x18]
   1c748:	cmp    ebx,eax
   1c74a:	je     0x1c758
   1c74c:	mov    DWORD PTR [edx+0x18],0x1f6aa
   1c753:	jmp    0x1d21f
   1c758:	xor    ebx,ebx
   1c75a:	xor    edi,edi
   1c75c:	mov    eax,DWORD PTR [esi+0x20]
   1c75f:	test   eax,eax
   1c761:	je     0x1c777
   1c763:	mov    edx,DWORD PTR [esi+0x10]
   1c766:	xor    ecx,ecx
   1c768:	inc    ecx
   1c769:	sar    edx,0x9
   1c76c:	and    edx,ecx
   1c76e:	mov    DWORD PTR [eax+0x2c],edx
   1c771:	mov    eax,DWORD PTR [esi+0x20]
   1c774:	mov    DWORD PTR [eax+0x30],ecx
   1c777:	xor    eax,eax
   1c779:	push   eax
   1c77a:	push   eax
   1c77b:	push   eax
   1c77c:	call   0x1e0d6
   1c781:	mov    ecx,DWORD PTR [ebp+0x8]
   1c784:	mov    DWORD PTR [esi+0x18],eax
   1c787:	mov    DWORD PTR [ecx+0x30],eax
   1c78a:	jmp    0x1ce88
   1c78f:	cmp    edi,0x20
   1c792:	jae    0x1c7bb
   1c794:	cmp    DWORD PTR [ebp-0x8],0x0
   1c798:	je     0x1d273
   1c79e:	mov    eax,DWORD PTR [ebp-0x4]
   1c7a1:	movzx  eax,BYTE PTR [eax]
   1c7a4:	dec    DWORD PTR [ebp-0x8]
   1c7a7:	mov    ecx,edi
   1c7a9:	shl    eax,cl
   1c7ab:	add    edi,0x8
   1c7ae:	add    ebx,eax
   1c7b0:	inc    DWORD PTR [ebp-0x4]
   1c7b3:	cmp    edi,0x20
   1c7b6:	jb     0x1c794
   1c7b8:	mov    edx,DWORD PTR [ebp+0x8]
   1c7bb:	mov    ecx,ebx
   1c7bd:	mov    eax,0xff00
   1c7c2:	and    ecx,eax
   1c7c4:	mov    edi,ebx
   1c7c6:	shl    edi,0x10
   1c7c9:	add    ecx,edi
   1c7cb:	mov    edi,ebx
   1c7cd:	shr    edi,0x8
   1c7d0:	and    edi,eax
   1c7d2:	shl    ecx,0x8
   1c7d5:	shr    ebx,0x18
   1c7d8:	add    ecx,edi
   1c7da:	lea    eax,[ecx+ebx*1]
   1c7dd:	mov    DWORD PTR [esi+0x18],eax
   1c7e0:	mov    DWORD PTR [edx+0x30],eax
   1c7e3:	xor    ebx,ebx
   1c7e5:	xor    edi,edi
   1c7e7:	mov    DWORD PTR [esi],0xa
   1c7ed:	cmp    DWORD PTR [esi+0xc],0x0
   1c7f1:	je     0x1d235
   1c7f7:	xor    eax,eax
   1c7f9:	push   eax
   1c7fa:	push   eax
   1c7fb:	push   eax
   1c7fc:	call   0x1dc34
   1c801:	mov    ecx,DWORD PTR [ebp+0x8]
   1c804:	mov    DWORD PTR [esi+0x18],eax
   1c807:	mov    DWORD PTR [ecx+0x30],eax
   1c80a:	mov    DWORD PTR [esi],0xb
   1c810:	cmp    DWORD PTR [ebp+0xc],0x5
   1c814:	je     0x1d273
   1c81a:	mov    edx,DWORD PTR [ebp+0x8]
   1c81d:	cmp    DWORD PTR [esi+0x4],0x0
   1c821:	je     0x1c837
   1c823:	mov    ecx,edi
   1c825:	and    ecx,0x7
   1c828:	shr    ebx,cl
   1c82a:	sub    edi,ecx
   1c82c:	mov    DWORD PTR [esi],0x18
   1c832:	jmp    0x1d225
   1c837:	cmp    edi,0x3
   1c83a:	jae    0x1c863
   1c83c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c840:	je     0x1d273
   1c846:	mov    eax,DWORD PTR [ebp-0x4]
   1c849:	movzx  eax,BYTE PTR [eax]
   1c84c:	dec    DWORD PTR [ebp-0x8]
   1c84f:	mov    ecx,edi
   1c851:	shl    eax,cl
   1c853:	add    edi,0x8
   1c856:	add    ebx,eax
   1c858:	inc    DWORD PTR [ebp-0x4]
   1c85b:	cmp    edi,0x3
   1c85e:	jb     0x1c83c
   1c860:	mov    edx,DWORD PTR [ebp+0x8]
   1c863:	mov    eax,ebx
   1c865:	and    eax,0x1
   1c868:	shr    ebx,1
   1c86a:	mov    DWORD PTR [esi+0x4],eax
   1c86d:	mov    eax,ebx
   1c86f:	and    eax,0x3
   1c872:	dec    edi
   1c873:	sub    eax,0x0
   1c876:	je     0x1c8bc
   1c878:	dec    eax
   1c879:	je     0x1c898
   1c87b:	dec    eax
   1c87c:	je     0x1c890
   1c87e:	dec    eax
   1c87f:	jne    0x1c8c2
   1c881:	mov    DWORD PTR [edx+0x18],0x1f696
   1c888:	mov    DWORD PTR [esi],0x1b
   1c88e:	jmp    0x1c8c2
   1c890:	mov    DWORD PTR [esi],0xf
   1c896:	jmp    0x1c8c2
   1c898:	mov    DWORD PTR [esi+0x4c],0x73f68
   1c89f:	mov    DWORD PTR [esi+0x54],0x9
   1c8a6:	mov    DWORD PTR [esi+0x50],0x74768
   1c8ad:	mov    DWORD PTR [esi+0x58],0x5
   1c8b4:	mov    DWORD PTR [esi],0x12
   1c8ba:	jmp    0x1c8c2
   1c8bc:	mov    DWORD PTR [esi],0xd
   1c8c2:	shr    ebx,0x2
   1c8c5:	dec    edi
   1c8c6:	dec    edi
   1c8c7:	jmp    0x1d225
   1c8cc:	mov    ecx,edi
   1c8ce:	and    ecx,0x7
   1c8d1:	sub    edi,ecx
   1c8d3:	shr    ebx,cl
   1c8d5:	cmp    edi,0x20
   1c8d8:	jae    0x1c901
   1c8da:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8de:	je     0x1d273
   1c8e4:	mov    eax,DWORD PTR [ebp-0x4]
   1c8e7:	movzx  eax,BYTE PTR [eax]
   1c8ea:	dec    DWORD PTR [ebp-0x8]
   1c8ed:	mov    ecx,edi
   1c8ef:	shl    eax,cl
   1c8f1:	add    edi,0x8
   1c8f4:	add    ebx,eax
   1c8f6:	inc    DWORD PTR [ebp-0x4]
   1c8f9:	cmp    edi,0x20
   1c8fc:	jb     0x1c8da
   1c8fe:	mov    edx,DWORD PTR [ebp+0x8]
   1c901:	mov    ecx,ebx
   1c903:	mov    eax,ebx
   1c905:	not    ecx
   1c907:	and    eax,0xffff
   1c90c:	shr    ecx,0x10
   1c90f:	cmp    eax,ecx
   1c911:	je     0x1c91f
   1c913:	mov    DWORD PTR [edx+0x18],0x1f678
   1c91a:	jmp    0x1d21f
   1c91f:	xor    ebx,ebx
   1c921:	mov    DWORD PTR [esi+0x40],eax
   1c924:	xor    edi,edi
   1c926:	mov    DWORD PTR [esi],0xe
   1c92c:	mov    eax,DWORD PTR [esi+0x40]
   1c92f:	mov    DWORD PTR [ebp-0xc],eax
   1c932:	test   eax,eax
   1c934:	je     0x1ce88
   1c93a:	mov    eax,DWORD PTR [ebp-0x8]
   1c93d:	cmp    DWORD PTR [ebp-0xc],eax
   1c940:	jbe    0x1c945
   1c942:	mov    DWORD PTR [ebp-0xc],eax
   1c945:	mov    eax,DWORD PTR [ebp-0x10]
   1c948:	cmp    DWORD PTR [ebp-0xc],eax
   1c94b:	jbe    0x1c950
   1c94d:	mov    DWORD PTR [ebp-0xc],eax
   1c950:	cmp    DWORD PTR [ebp-0xc],0x0
   1c954:	je     0x1d273
   1c95a:	push   DWORD PTR [ebp-0xc]
   1c95d:	push   DWORD PTR [ebp-0x4]
   1c960:	push   DWORD PTR [ebp-0x18]
   1c963:	call   0x1e1b6
   1c968:	mov    eax,DWORD PTR [ebp-0xc]
   1c96b:	sub    DWORD PTR [ebp-0x8],eax
   1c96e:	add    DWORD PTR [ebp-0x4],eax
   1c971:	sub    DWORD PTR [ebp-0x10],eax
   1c974:	add    DWORD PTR [ebp-0x18],eax
   1c977:	add    esp,0xc
   1c97a:	sub    DWORD PTR [esi+0x40],eax
   1c97d:	jmp    0x1d225
   1c982:	cmp    edi,0xe
   1c985:	jae    0x1c9ae
   1c987:	cmp    DWORD PTR [ebp-0x8],0x0
   1c98b:	je     0x1d273
   1c991:	mov    eax,DWORD PTR [ebp-0x4]
   1c994:	movzx  eax,BYTE PTR [eax]
   1c997:	dec    DWORD PTR [ebp-0x8]
   1c99a:	mov    ecx,edi
   1c99c:	shl    eax,cl
   1c99e:	add    edi,0x8
   1c9a1:	add    ebx,eax
   1c9a3:	inc    DWORD PTR [ebp-0x4]
   1c9a6:	cmp    edi,0xe
   1c9a9:	jb     0x1c987
   1c9ab:	mov    edx,DWORD PTR [ebp+0x8]
   1c9ae:	mov    eax,ebx
   1c9b0:	and    eax,0x1f
   1c9b3:	add    eax,0x101
   1c9b8:	mov    DWORD PTR [esi+0x60],eax
   1c9bb:	shr    ebx,0x5
   1c9be:	mov    eax,ebx
   1c9c0:	and    eax,0x1f
   1c9c3:	inc    eax
   1c9c4:	shr    ebx,0x5
   1c9c7:	mov    DWORD PTR [esi+0x64],eax
   1c9ca:	mov    eax,ebx
   1c9cc:	and    eax,0xf
   1c9cf:	add    eax,0x4
   1c9d2:	shr    ebx,0x4
   1c9d5:	sub    edi,0xe
   1c9d8:	cmp    DWORD PTR [esi+0x60],0x11e
   1c9df:	mov    DWORD PTR [esi+0x5c],eax
   1c9e2:	ja     0x1c9f6
   1c9e4:	cmp    DWORD PTR [esi+0x64],0x1e
   1c9e8:	ja     0x1c9f6
   1c9ea:	and    DWORD PTR [esi+0x68],0x0
   1c9ee:	mov    DWORD PTR [esi],0x10
   1c9f4:	jmp    0x1ca44
   1c9f6:	mov    DWORD PTR [edx+0x18],0x1f654
   1c9fd:	jmp    0x1d21f
   1ca02:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca06:	je     0x1d273
   1ca0c:	mov    eax,DWORD PTR [ebp-0x4]
   1ca0f:	movzx  eax,BYTE PTR [eax]
   1ca12:	dec    DWORD PTR [ebp-0x8]
   1ca15:	mov    ecx,edi
   1ca17:	shl    eax,cl
   1ca19:	add    ebx,eax
   1ca1b:	inc    DWORD PTR [ebp-0x4]
   1ca1e:	add    edi,0x8
   1ca21:	cmp    edi,0x3
   1ca24:	jb     0x1ca02
   1ca26:	mov    ecx,DWORD PTR [esi+0x68]
   1ca29:	movzx  ecx,WORD PTR [ecx*2+0x747e8]
   1ca31:	mov    eax,ebx
   1ca33:	and    eax,0x7
   1ca36:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1ca3b:	inc    DWORD PTR [esi+0x68]
   1ca3e:	shr    ebx,0x3
   1ca41:	sub    edi,0x3
   1ca44:	mov    eax,DWORD PTR [esi+0x68]
   1ca47:	cmp    eax,DWORD PTR [esi+0x5c]
   1ca4a:	jb     0x1ca21
   1ca4c:	jmp    0x1ca63
   1ca4e:	mov    eax,DWORD PTR [esi+0x68]
   1ca51:	movzx  eax,WORD PTR [eax*2+0x747e8]
   1ca59:	xor    ecx,ecx
   1ca5b:	mov    WORD PTR [esi+eax*2+0x70],cx
   1ca60:	inc    DWORD PTR [esi+0x68]
   1ca63:	cmp    DWORD PTR [esi+0x68],0x13
   1ca67:	jb     0x1ca4e
   1ca69:	lea    eax,[esi+0x530]
   1ca6f:	lea    ecx,[esi+0x6c]
   1ca72:	mov    DWORD PTR [ecx],eax
   1ca74:	mov    DWORD PTR [esi+0x4c],eax
   1ca77:	lea    edx,[esi+0x2f0]
   1ca7d:	push   edx
   1ca7e:	lea    eax,[esi+0x54]
   1ca81:	push   eax
   1ca82:	push   ecx
   1ca83:	mov    DWORD PTR [eax],0x7
   1ca89:	push   0x13
   1ca8b:	lea    eax,[esi+0x70]
   1ca8e:	push   eax
   1ca8f:	push   0x0
   1ca91:	call   0x1d82e
   1ca96:	mov    DWORD PTR [ebp-0x24],eax
   1ca99:	test   eax,eax
   1ca9b:	je     0x1caac
   1ca9d:	mov    eax,DWORD PTR [ebp+0x8]
   1caa0:	mov    DWORD PTR [eax+0x18],0x1f63a
   1caa7:	jmp    0x1d21f
   1caac:	and    DWORD PTR [esi+0x68],0x0
   1cab0:	mov    DWORD PTR [esi],0x11
   1cab6:	jmp    0x1ccb2
   1cabb:	cmp    DWORD PTR [ebp-0x8],0x0
   1cabf:	je     0x1d273
   1cac5:	mov    eax,DWORD PTR [ebp-0x4]
   1cac8:	movzx  eax,BYTE PTR [eax]
   1cacb:	dec    DWORD PTR [ebp-0x8]
   1cace:	mov    ecx,edi
   1cad0:	shl    eax,cl
   1cad2:	add    ebx,eax
   1cad4:	inc    DWORD PTR [ebp-0x4]
   1cad7:	add    edi,0x8
   1cada:	mov    ecx,DWORD PTR [esi+0x54]
   1cadd:	xor    eax,eax
   1cadf:	inc    eax
   1cae0:	shl    eax,cl
   1cae2:	mov    ecx,DWORD PTR [esi+0x4c]
   1cae5:	dec    eax
   1cae6:	and    eax,ebx
   1cae8:	mov    eax,DWORD PTR [ecx+eax*4]
   1caeb:	mov    ecx,eax
   1caed:	shr    ecx,0x8
   1caf0:	movzx  ecx,cl
   1caf3:	mov    DWORD PTR [ebp-0x20],eax
   1caf6:	cmp    ecx,edi
   1caf8:	ja     0x1cabb
   1cafa:	mov    ecx,eax
   1cafc:	shr    ecx,0x10
   1caff:	cmp    cx,0x10
   1cb03:	jae    0x1cb50
   1cb05:	mov    ecx,eax
   1cb07:	shr    ecx,0x8
   1cb0a:	movzx  ecx,cl
   1cb0d:	jmp    0x1cb31
   1cb0f:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb13:	je     0x1d273
   1cb19:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb1c:	movzx  edx,BYTE PTR [ecx]
   1cb1f:	dec    DWORD PTR [ebp-0x8]
   1cb22:	mov    ecx,edi
   1cb24:	shl    edx,cl
   1cb26:	movzx  ecx,ah
   1cb29:	add    ebx,edx
   1cb2b:	inc    DWORD PTR [ebp-0x4]
   1cb2e:	add    edi,0x8
   1cb31:	cmp    edi,ecx
   1cb33:	jb     0x1cb0f
   1cb35:	movzx  ecx,ah
   1cb38:	mov    eax,DWORD PTR [esi+0x68]
   1cb3b:	shr    ebx,cl
   1cb3d:	sub    edi,ecx
   1cb3f:	mov    cx,WORD PTR [ebp-0x1e]
   1cb43:	mov    WORD PTR [esi+eax*2+0x70],cx
   1cb48:	inc    DWORD PTR [esi+0x68]
   1cb4b:	jmp    0x1ccb2
   1cb50:	cmp    WORD PTR [ebp-0x1e],0x10
   1cb55:	jne    0x1cbad
   1cb57:	movzx  eax,ah
   1cb5a:	jmp    0x1cb7b
   1cb5c:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb60:	je     0x1d273
   1cb66:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb69:	movzx  edx,BYTE PTR [ecx]
   1cb6c:	dec    DWORD PTR [ebp-0x8]
   1cb6f:	mov    ecx,edi
   1cb71:	shl    edx,cl
   1cb73:	add    ebx,edx
   1cb75:	inc    DWORD PTR [ebp-0x4]
   1cb78:	add    edi,0x8
   1cb7b:	lea    ecx,[eax+0x2]
   1cb7e:	cmp    edi,ecx
   1cb80:	jb     0x1cb5c
   1cb82:	mov    ecx,eax
   1cb84:	sub    edi,eax
   1cb86:	mov    eax,DWORD PTR [esi+0x68]
   1cb89:	shr    ebx,cl
   1cb8b:	test   eax,eax
   1cb8d:	je     0x1ccc3
   1cb93:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1cb98:	mov    DWORD PTR [ebp-0x20],eax
   1cb9b:	mov    eax,ebx
   1cb9d:	and    eax,0x3
   1cba0:	add    eax,0x3
   1cba3:	shr    ebx,0x2
   1cba6:	dec    edi
   1cba7:	dec    edi
   1cba8:	jmp    0x1cc32
   1cbad:	cmp    WORD PTR [ebp-0x1e],0x11
   1cbb2:	movzx  edx,ah
   1cbb5:	jne    0x1cc11
   1cbb7:	jmp    0x1cbd8
   1cbb9:	cmp    DWORD PTR [ebp-0x8],0x0
   1cbbd:	je     0x1d273
   1cbc3:	mov    eax,DWORD PTR [ebp-0x4]
   1cbc6:	movzx  eax,BYTE PTR [eax]
   1cbc9:	dec    DWORD PTR [ebp-0x8]
   1cbcc:	mov    ecx,edi
   1cbce:	shl    eax,cl
   1cbd0:	add    ebx,eax
   1cbd2:	inc    DWORD PTR [ebp-0x4]
   1cbd5:	add    edi,0x8
   1cbd8:	lea    eax,[edx+0x3]
   1cbdb:	cmp    edi,eax
   1cbdd:	jb     0x1cbb9
   1cbdf:	mov    ecx,edx
   1cbe1:	shr    ebx,cl
   1cbe3:	push   0xfffffffd
   1cbe5:	mov    eax,ebx
   1cbe7:	and    eax,0x7
   1cbea:	add    eax,0x3
   1cbed:	shr    ebx,0x3
   1cbf0:	jmp    0x1cc29
   1cbf2:	cmp    DWORD PTR [ebp-0x8],0x0
   1cbf6:	je     0x1d273
   1cbfc:	mov    eax,DWORD PTR [ebp-0x4]
   1cbff:	movzx  eax,BYTE PTR [eax]
   1cc02:	dec    DWORD PTR [ebp-0x8]
   1cc05:	mov    ecx,edi
   1cc07:	shl    eax,cl
   1cc09:	add    ebx,eax
   1cc0b:	inc    DWORD PTR [ebp-0x4]
   1cc0e:	add    edi,0x8
   1cc11:	lea    eax,[edx+0x7]
   1cc14:	cmp    edi,eax
   1cc16:	jb     0x1cbf2
   1cc18:	mov    ecx,edx
   1cc1a:	shr    ebx,cl
   1cc1c:	push   0xfffffff9
   1cc1e:	mov    eax,ebx
   1cc20:	and    eax,0x7f
   1cc23:	add    eax,0xb
   1cc26:	shr    ebx,0x7
   1cc29:	and    DWORD PTR [ebp-0x20],0x0
   1cc2d:	pop    ecx
   1cc2e:	sub    ecx,edx
   1cc30:	add    edi,ecx
   1cc32:	mov    ecx,DWORD PTR [esi+0x64]
   1cc35:	mov    edx,DWORD PTR [esi+0x68]
   1cc38:	add    ecx,DWORD PTR [esi+0x60]
   1cc3b:	add    edx,eax
   1cc3d:	cmp    edx,ecx
   1cc3f:	jbe    0x1ccae
   1cc41:	mov    eax,DWORD PTR [ebp+0x8]
   1cc44:	mov    DWORD PTR [eax+0x18],0x1f620
   1cc4b:	mov    DWORD PTR [esi],0x1b
   1cc51:	cmp    DWORD PTR [esi],0x1b
   1cc54:	je     0x1d225
   1cc5a:	lea    eax,[esi+0x530]
   1cc60:	lea    ecx,[esi+0x6c]
   1cc63:	mov    DWORD PTR [ecx],eax
   1cc65:	mov    DWORD PTR [esi+0x4c],eax
   1cc68:	lea    edx,[esi+0x2f0]
   1cc6e:	push   edx
   1cc6f:	lea    eax,[esi+0x54]
   1cc72:	push   eax
   1cc73:	push   ecx
   1cc74:	push   DWORD PTR [esi+0x60]
   1cc77:	mov    DWORD PTR [eax],0x9
   1cc7d:	lea    eax,[esi+0x70]
   1cc80:	push   eax
   1cc81:	push   0x1
   1cc83:	call   0x1d82e
   1cc88:	mov    DWORD PTR [ebp-0x24],eax
   1cc8b:	test   eax,eax
   1cc8d:	je     0x1ccd2
   1cc8f:	mov    eax,DWORD PTR [ebp+0x8]
   1cc92:	mov    DWORD PTR [eax+0x18],0x1f604
   1cc99:	jmp    0x1d21f
   1cc9e:	mov    ecx,DWORD PTR [esi+0x68]
   1cca1:	mov    dx,WORD PTR [ebp-0x20]
   1cca5:	dec    eax
   1cca6:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1ccab:	inc    DWORD PTR [esi+0x68]
   1ccae:	test   eax,eax
   1ccb0:	jne    0x1cc9e
   1ccb2:	mov    eax,DWORD PTR [esi+0x64]
   1ccb5:	add    eax,DWORD PTR [esi+0x60]
   1ccb8:	cmp    DWORD PTR [esi+0x68],eax
   1ccbb:	jb     0x1cada
   1ccc1:	jmp    0x1cc51
   1ccc3:	mov    eax,DWORD PTR [ebp+0x8]
   1ccc6:	mov    DWORD PTR [eax+0x18],0x1f620
   1cccd:	jmp    0x1d21f
   1ccd2:	lea    ecx,[esi+0x6c]
   1ccd5:	mov    eax,DWORD PTR [ecx]
   1ccd7:	mov    DWORD PTR [esi+0x50],eax
   1ccda:	lea    edx,[esi+0x2f0]
   1cce0:	push   edx
   1cce1:	lea    eax,[esi+0x58]
   1cce4:	push   eax
   1cce5:	push   ecx
   1cce6:	push   DWORD PTR [esi+0x64]
   1cce9:	mov    DWORD PTR [eax],0x6
   1ccef:	mov    eax,DWORD PTR [esi+0x60]
   1ccf2:	lea    eax,[esi+eax*2+0x70]
   1ccf6:	push   eax
   1ccf7:	push   0x2
   1ccf9:	call   0x1d82e
   1ccfe:	mov    DWORD PTR [ebp-0x24],eax
   1cd01:	test   eax,eax
   1cd03:	je     0x1cd14
   1cd05:	mov    eax,DWORD PTR [ebp+0x8]
   1cd08:	mov    DWORD PTR [eax+0x18],0x1f5ee
   1cd0f:	jmp    0x1d21f
   1cd14:	mov    DWORD PTR [esi],0x12
   1cd1a:	cmp    DWORD PTR [ebp-0x8],0x6
   1cd1e:	jb     0x1cd77
   1cd20:	cmp    DWORD PTR [ebp-0x10],0x102
   1cd27:	jb     0x1cd77
   1cd29:	mov    eax,DWORD PTR [ebp+0x8]
   1cd2c:	mov    ecx,DWORD PTR [ebp-0x18]
   1cd2f:	push   DWORD PTR [ebp-0x1c]
   1cd32:	mov    DWORD PTR [eax+0xc],ecx
   1cd35:	mov    ecx,DWORD PTR [ebp-0x10]
   1cd38:	mov    DWORD PTR [eax+0x10],ecx
   1cd3b:	mov    ecx,DWORD PTR [ebp-0x4]
   1cd3e:	mov    DWORD PTR [eax],ecx
   1cd40:	mov    ecx,DWORD PTR [ebp-0x8]
   1cd43:	mov    DWORD PTR [eax+0x4],ecx
   1cd46:	push   eax
   1cd47:	mov    DWORD PTR [esi+0x38],ebx
   1cd4a:	mov    DWORD PTR [esi+0x3c],edi
   1cd4d:	call   0x1d448
   1cd52:	mov    eax,DWORD PTR [ebp+0x8]
   1cd55:	mov    ecx,DWORD PTR [eax+0xc]
   1cd58:	mov    ebx,DWORD PTR [esi+0x38]
   1cd5b:	mov    edi,DWORD PTR [esi+0x3c]
   1cd5e:	mov    DWORD PTR [ebp-0x18],ecx
   1cd61:	mov    ecx,DWORD PTR [eax+0x10]
   1cd64:	mov    DWORD PTR [ebp-0x10],ecx
   1cd67:	mov    ecx,DWORD PTR [eax]
   1cd69:	mov    eax,DWORD PTR [eax+0x4]
   1cd6c:	mov    DWORD PTR [ebp-0x4],ecx
   1cd6f:	mov    DWORD PTR [ebp-0x8],eax
   1cd72:	jmp    0x1d225
   1cd77:	mov    ecx,DWORD PTR [esi+0x54]
   1cd7a:	mov    eax,DWORD PTR [esi+0x4c]
   1cd7d:	xor    edx,edx
   1cd7f:	inc    edx
   1cd80:	shl    edx,cl
   1cd82:	dec    edx
   1cd83:	and    edx,ebx
   1cd85:	mov    eax,DWORD PTR [eax+edx*4]
   1cd88:	jmp    0x1cdba
   1cd8a:	cmp    DWORD PTR [ebp-0x8],0x0
   1cd8e:	je     0x1d273
   1cd94:	mov    eax,DWORD PTR [ebp-0x4]
   1cd97:	movzx  eax,BYTE PTR [eax]
   1cd9a:	dec    DWORD PTR [ebp-0x8]
   1cd9d:	mov    ecx,edi
   1cd9f:	shl    eax,cl
   1cda1:	mov    ecx,DWORD PTR [esi+0x54]
   1cda4:	add    edi,0x8
   1cda7:	add    ebx,eax
   1cda9:	inc    DWORD PTR [ebp-0x4]
   1cdac:	xor    eax,eax
   1cdae:	inc    eax
   1cdaf:	shl    eax,cl
   1cdb1:	mov    ecx,DWORD PTR [esi+0x4c]
   1cdb4:	dec    eax
   1cdb5:	and    eax,ebx
   1cdb7:	mov    eax,DWORD PTR [ecx+eax*4]
   1cdba:	mov    ecx,eax
   1cdbc:	shr    ecx,0x8
   1cdbf:	movzx  ecx,cl
   1cdc2:	cmp    ecx,edi
   1cdc4:	ja     0x1cd8a
   1cdc6:	test   al,al
   1cdc8:	je     0x1ce61
   1cdce:	test   al,0xf0
   1cdd0:	jne    0x1ce61
   1cdd6:	mov    DWORD PTR [ebp-0xc],eax
   1cdd9:	shr    DWORD PTR [ebp-0xc],0x8
   1cddd:	movzx  edx,BYTE PTR [ebp-0xc]
   1cde1:	mov    DWORD PTR [ebp-0x28],edx
   1cde4:	movzx  ecx,al
   1cde7:	add    ecx,edx
   1cde9:	xor    edx,edx
   1cdeb:	inc    edx
   1cdec:	shl    edx,cl
   1cdee:	mov    ecx,DWORD PTR [ebp-0x28]
   1cdf1:	mov    DWORD PTR [ebp-0x20],eax
   1cdf4:	shr    eax,0x10
   1cdf7:	dec    edx
   1cdf8:	and    edx,ebx
   1cdfa:	shr    edx,cl
   1cdfc:	add    edx,eax
   1cdfe:	mov    eax,DWORD PTR [esi+0x4c]
   1ce01:	mov    eax,DWORD PTR [eax+edx*4]
   1ce04:	movzx  edx,BYTE PTR [ebp-0xc]
   1ce08:	jmp    0x1ce4b
   1ce0a:	cmp    DWORD PTR [ebp-0x8],0x0
   1ce0e:	je     0x1d273
   1ce14:	mov    eax,DWORD PTR [ebp-0x4]
   1ce17:	movzx  eax,BYTE PTR [eax]
   1ce1a:	movzx  edx,BYTE PTR [ebp-0x1f]
   1ce1e:	dec    DWORD PTR [ebp-0x8]
   1ce21:	mov    ecx,edi
   1ce23:	shl    eax,cl
   1ce25:	movzx  ecx,BYTE PTR [ebp-0x20]
   1ce29:	add    ebx,eax
   1ce2b:	inc    DWORD PTR [ebp-0x4]
   1ce2e:	xor    eax,eax
   1ce30:	add    ecx,edx
   1ce32:	inc    eax
   1ce33:	shl    eax,cl
   1ce35:	add    edi,0x8
   1ce38:	mov    ecx,edx
   1ce3a:	dec    eax
   1ce3b:	and    eax,ebx
   1ce3d:	shr    eax,cl
   1ce3f:	movzx  ecx,WORD PTR [ebp-0x1e]
   1ce43:	add    eax,ecx
   1ce45:	mov    ecx,DWORD PTR [esi+0x4c]
   1ce48:	mov    eax,DWORD PTR [ecx+eax*4]
   1ce4b:	mov    ecx,eax
   1ce4d:	shr    ecx,0x8
   1ce50:	movzx  ecx,cl
   1ce53:	add    ecx,edx
   1ce55:	cmp    ecx,edi
   1ce57:	ja     0x1ce0a
   1ce59:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1ce5d:	shr    ebx,cl
   1ce5f:	sub    edi,ecx
   1ce61:	mov    ecx,eax
   1ce63:	shr    ecx,0x8
   1ce66:	movzx  ecx,cl
   1ce69:	shr    ebx,cl
   1ce6b:	sub    edi,ecx
   1ce6d:	mov    ecx,eax
   1ce6f:	shr    ecx,0x10
   1ce72:	mov    DWORD PTR [esi+0x40],ecx
   1ce75:	test   al,al
   1ce77:	jne    0x1ce84
   1ce79:	mov    DWORD PTR [esi],0x17
   1ce7f:	jmp    0x1d225
   1ce84:	test   al,0x20
   1ce86:	je     0x1ce93
   1ce88:	mov    DWORD PTR [esi],0xb
   1ce8e:	jmp    0x1d225
   1ce93:	test   al,0x40
   1ce95:	je     0x1cea6
   1ce97:	mov    eax,DWORD PTR [ebp+0x8]
   1ce9a:	mov    DWORD PTR [eax+0x18],0x1f5d2
   1cea1:	jmp    0x1d21f
   1cea6:	movzx  eax,al
   1cea9:	and    eax,0xf
   1ceac:	mov    DWORD PTR [esi+0x48],eax
   1ceaf:	mov    DWORD PTR [esi],0x13
   1ceb5:	mov    eax,DWORD PTR [esi+0x48]
   1ceb8:	test   eax,eax
   1ceba:	je     0x1cef5
   1cebc:	cmp    edi,eax
   1cebe:	jae    0x1cee4
   1cec0:	cmp    DWORD PTR [ebp-0x8],0x0
   1cec4:	je     0x1d273
   1ceca:	mov    ecx,DWORD PTR [ebp-0x4]
   1cecd:	movzx  edx,BYTE PTR [ecx]
   1ced0:	dec    DWORD PTR [ebp-0x8]
   1ced3:	mov    ecx,edi
   1ced5:	shl    edx,cl
   1ced7:	add    edi,0x8
   1ceda:	add    ebx,edx
   1cedc:	inc    DWORD PTR [ebp-0x4]
   1cedf:	cmp    edi,DWORD PTR [esi+0x48]
   1cee2:	jb     0x1cec0
   1cee4:	xor    edx,edx
   1cee6:	inc    edx
   1cee7:	mov    ecx,eax
   1cee9:	shl    edx,cl
   1ceeb:	dec    edx
   1ceec:	and    edx,ebx
   1ceee:	add    DWORD PTR [esi+0x40],edx
   1cef1:	shr    ebx,cl
   1cef3:	sub    edi,eax
   1cef5:	mov    DWORD PTR [esi],0x14
   1cefb:	mov    ecx,DWORD PTR [esi+0x58]
   1cefe:	mov    eax,DWORD PTR [esi+0x50]
   1cf01:	xor    edx,edx
   1cf03:	inc    edx
   1cf04:	shl    edx,cl
   1cf06:	dec    edx
   1cf07:	and    edx,ebx
   1cf09:	mov    eax,DWORD PTR [eax+edx*4]
   1cf0c:	jmp    0x1cf3e
   1cf0e:	cmp    DWORD PTR [ebp-0x8],0x0
   1cf12:	je     0x1d273
   1cf18:	mov    eax,DWORD PTR [ebp-0x4]
   1cf1b:	movzx  eax,BYTE PTR [eax]
   1cf1e:	dec    DWORD PTR [ebp-0x8]
   1cf21:	mov    ecx,edi
   1cf23:	shl    eax,cl
   1cf25:	mov    ecx,DWORD PTR [esi+0x58]
   1cf28:	add    edi,0x8
   1cf2b:	add    ebx,eax
   1cf2d:	inc    DWORD PTR [ebp-0x4]
   1cf30:	xor    eax,eax
   1cf32:	inc    eax
   1cf33:	shl    eax,cl
   1cf35:	mov    ecx,DWORD PTR [esi+0x50]
   1cf38:	dec    eax
   1cf39:	and    eax,ebx
   1cf3b:	mov    eax,DWORD PTR [ecx+eax*4]
   1cf3e:	mov    ecx,eax
   1cf40:	shr    ecx,0x8
   1cf43:	movzx  ecx,cl
   1cf46:	cmp    ecx,edi
   1cf48:	ja     0x1cf0e
   1cf4a:	test   al,0xf0
   1cf4c:	jne    0x1cfdd
   1cf52:	mov    DWORD PTR [ebp-0xc],eax
   1cf55:	shr    DWORD PTR [ebp-0xc],0x8
   1cf59:	movzx  edx,BYTE PTR [ebp-0xc]
   1cf5d:	mov    DWORD PTR [ebp-0x28],edx
   1cf60:	movzx  ecx,al
   1cf63:	add    ecx,edx
   1cf65:	xor    edx,edx
   1cf67:	inc    edx
   1cf68:	shl    edx,cl
   1cf6a:	mov    ecx,DWORD PTR [ebp-0x28]
   1cf6d:	mov    DWORD PTR [ebp-0x20],eax
   1cf70:	shr    eax,0x10
   1cf73:	dec    edx
   1cf74:	and    edx,ebx
   1cf76:	shr    edx,cl
   1cf78:	add    edx,eax
   1cf7a:	mov    eax,DWORD PTR [esi+0x50]
   1cf7d:	mov    eax,DWORD PTR [eax+edx*4]
   1cf80:	movzx  edx,BYTE PTR [ebp-0xc]
   1cf84:	jmp    0x1cfc7
   1cf86:	cmp    DWORD PTR [ebp-0x8],0x0
   1cf8a:	je     0x1d273
   1cf90:	mov    eax,DWORD PTR [ebp-0x4]
   1cf93:	movzx  eax,BYTE PTR [eax]
   1cf96:	movzx  edx,BYTE PTR [ebp-0x1f]
   1cf9a:	dec    DWORD PTR [ebp-0x8]
   1cf9d:	mov    ecx,edi
   1cf9f:	shl    eax,cl
   1cfa1:	movzx  ecx,BYTE PTR [ebp-0x20]
   1cfa5:	add    ebx,eax
   1cfa7:	inc    DWORD PTR [ebp-0x4]
   1cfaa:	xor    eax,eax
   1cfac:	add    ecx,edx
   1cfae:	inc    eax
   1cfaf:	shl    eax,cl
   1cfb1:	add    edi,0x8
   1cfb4:	mov    ecx,edx
   1cfb6:	dec    eax
   1cfb7:	and    eax,ebx
   1cfb9:	shr    eax,cl
   1cfbb:	movzx  ecx,WORD PTR [ebp-0x1e]
   1cfbf:	add    eax,ecx
   1cfc1:	mov    ecx,DWORD PTR [esi+0x50]
   1cfc4:	mov    eax,DWORD PTR [ecx+eax*4]
   1cfc7:	mov    ecx,eax
   1cfc9:	shr    ecx,0x8
   1cfcc:	movzx  ecx,cl
   1cfcf:	add    ecx,edx
   1cfd1:	cmp    ecx,edi
   1cfd3:	ja     0x1cf86
   1cfd5:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1cfd9:	shr    ebx,cl
   1cfdb:	sub    edi,ecx
   1cfdd:	mov    ecx,eax
   1cfdf:	shr    ecx,0x8
   1cfe2:	movzx  ecx,cl
   1cfe5:	shr    ebx,cl
   1cfe7:	sub    edi,ecx
   1cfe9:	test   al,0x40
   1cfeb:	je     0x1cffc
   1cfed:	mov    eax,DWORD PTR [ebp+0x8]
   1cff0:	mov    DWORD PTR [eax+0x18],0x1f5bc
   1cff7:	jmp    0x1d21f
   1cffc:	mov    edx,DWORD PTR [ebp+0x8]
   1cfff:	mov    ecx,eax
   1d001:	movzx  eax,al
   1d004:	shr    ecx,0x10
   1d007:	and    eax,0xf
   1d00a:	mov    DWORD PTR [esi+0x44],ecx
   1d00d:	mov    DWORD PTR [esi+0x48],eax
   1d010:	mov    DWORD PTR [esi],0x15
   1d016:	mov    eax,DWORD PTR [esi+0x48]
   1d019:	test   eax,eax
   1d01b:	je     0x1d05a
   1d01d:	cmp    edi,eax
   1d01f:	jae    0x1d048
   1d021:	cmp    DWORD PTR [ebp-0x8],0x0
   1d025:	je     0x1d273
   1d02b:	mov    eax,DWORD PTR [ebp-0x4]
   1d02e:	movzx  eax,BYTE PTR [eax]
   1d031:	dec    DWORD PTR [ebp-0x8]
   1d034:	mov    ecx,edi
   1d036:	shl    eax,cl
   1d038:	add    edi,0x8
   1d03b:	add    ebx,eax
   1d03d:	inc    DWORD PTR [ebp-0x4]
   1d040:	cmp    edi,DWORD PTR [esi+0x48]
   1d043:	jb     0x1d021
   1d045:	mov    edx,DWORD PTR [ebp+0x8]
   1d048:	mov    ecx,DWORD PTR [esi+0x48]
   1d04b:	xor    eax,eax
   1d04d:	inc    eax
   1d04e:	shl    eax,cl
   1d050:	dec    eax
   1d051:	and    eax,ebx
   1d053:	add    DWORD PTR [esi+0x44],eax
   1d056:	shr    ebx,cl
   1d058:	sub    edi,ecx
   1d05a:	mov    eax,DWORD PTR [esi+0x2c]
   1d05d:	sub    eax,DWORD PTR [ebp-0x10]
   1d060:	add    eax,DWORD PTR [ebp-0x1c]
   1d063:	cmp    DWORD PTR [esi+0x44],eax
   1d066:	jbe    0x1d074
   1d068:	mov    DWORD PTR [edx+0x18],0x1f59e
   1d06f:	jmp    0x1d21f
   1d074:	mov    DWORD PTR [esi],0x16
   1d07a:	cmp    DWORD PTR [ebp-0x10],0x0
   1d07e:	je     0x1d273
   1d084:	mov    eax,DWORD PTR [ebp-0x1c]
   1d087:	sub    eax,DWORD PTR [ebp-0x10]
   1d08a:	mov    ecx,DWORD PTR [esi+0x44]
   1d08d:	cmp    ecx,eax
   1d08f:	jbe    0x1d0be
   1d091:	sub    ecx,eax
   1d093:	mov    eax,DWORD PTR [esi+0x34]
   1d096:	mov    DWORD PTR [ebp-0xc],ecx
   1d099:	mov    ecx,DWORD PTR [esi+0x30]
   1d09c:	cmp    DWORD PTR [ebp-0xc],ecx
   1d09f:	jbe    0x1d0ac
   1d0a1:	add    eax,DWORD PTR [esi+0x28]
   1d0a4:	sub    DWORD PTR [ebp-0xc],ecx
   1d0a7:	sub    eax,DWORD PTR [ebp-0xc]
   1d0aa:	jmp    0x1d0b1
   1d0ac:	sub    eax,DWORD PTR [ebp-0xc]
   1d0af:	add    eax,ecx
   1d0b1:	mov    ecx,DWORD PTR [esi+0x40]
   1d0b4:	mov    DWORD PTR [ebp-0x28],ecx
   1d0b7:	cmp    DWORD PTR [ebp-0xc],ecx
   1d0ba:	jbe    0x1d0cc
   1d0bc:	jmp    0x1d0c9
   1d0be:	mov    eax,DWORD PTR [ebp-0x18]
   1d0c1:	sub    eax,ecx
   1d0c3:	mov    ecx,DWORD PTR [esi+0x40]
   1d0c6:	mov    DWORD PTR [ebp-0x28],ecx
   1d0c9:	mov    DWORD PTR [ebp-0xc],ecx
   1d0cc:	mov    ecx,DWORD PTR [ebp-0x10]
   1d0cf:	cmp    DWORD PTR [ebp-0xc],ecx
   1d0d2:	jbe    0x1d0d7
   1d0d4:	mov    DWORD PTR [ebp-0xc],ecx
   1d0d7:	sub    ecx,DWORD PTR [ebp-0xc]
   1d0da:	mov    DWORD PTR [ebp-0x10],ecx
   1d0dd:	mov    ecx,DWORD PTR [ebp-0x28]
   1d0e0:	sub    ecx,DWORD PTR [ebp-0xc]
   1d0e3:	mov    DWORD PTR [esi+0x40],ecx
   1d0e6:	mov    edx,DWORD PTR [ebp-0x18]
   1d0e9:	mov    cl,BYTE PTR [eax]
   1d0eb:	inc    DWORD PTR [ebp-0x18]
   1d0ee:	inc    eax
   1d0ef:	dec    DWORD PTR [ebp-0xc]
   1d0f2:	mov    BYTE PTR [edx],cl
   1d0f4:	jne    0x1d0e6
   1d0f6:	cmp    DWORD PTR [esi+0x40],0x0
   1d0fa:	jne    0x1d225
   1d100:	jmp    0x1d11a
   1d102:	cmp    DWORD PTR [ebp-0x10],0x0
   1d106:	je     0x1d273
   1d10c:	mov    ecx,DWORD PTR [ebp-0x18]
   1d10f:	mov    al,BYTE PTR [esi+0x40]
   1d112:	inc    DWORD PTR [ebp-0x18]
   1d115:	dec    DWORD PTR [ebp-0x10]
   1d118:	mov    BYTE PTR [ecx],al
   1d11a:	mov    DWORD PTR [esi],0x12
   1d120:	jmp    0x1d225
   1d125:	cmp    DWORD PTR [esi+0x8],0x0
   1d129:	je     0x1d1d9
   1d12f:	cmp    edi,0x20
   1d132:	jae    0x1d15b
   1d134:	cmp    DWORD PTR [ebp-0x8],0x0
   1d138:	je     0x1d273
   1d13e:	mov    eax,DWORD PTR [ebp-0x4]
   1d141:	movzx  eax,BYTE PTR [eax]
   1d144:	dec    DWORD PTR [ebp-0x8]
   1d147:	mov    ecx,edi
   1d149:	shl    eax,cl
   1d14b:	add    edi,0x8
   1d14e:	add    ebx,eax
   1d150:	inc    DWORD PTR [ebp-0x4]
   1d153:	cmp    edi,0x20
   1d156:	jb     0x1d134
   1d158:	mov    edx,DWORD PTR [ebp+0x8]
   1d15b:	mov    eax,DWORD PTR [ebp-0x1c]
   1d15e:	sub    eax,DWORD PTR [ebp-0x10]
   1d161:	add    DWORD PTR [edx+0x14],eax
   1d164:	add    DWORD PTR [esi+0x1c],eax
   1d167:	mov    DWORD PTR [ebp-0x1c],eax
   1d16a:	test   eax,eax
   1d16c:	je     0x1d196
   1d16e:	push   eax
   1d16f:	mov    eax,DWORD PTR [ebp-0x18]
   1d172:	sub    eax,DWORD PTR [ebp-0x1c]
   1d175:	cmp    DWORD PTR [esi+0x10],0x0
   1d179:	push   eax
   1d17a:	push   DWORD PTR [esi+0x18]
   1d17d:	je     0x1d186
   1d17f:	call   0x1e0d6
   1d184:	jmp    0x1d18b
   1d186:	call   0x1dc34
   1d18b:	mov    ecx,DWORD PTR [ebp+0x8]
   1d18e:	mov    DWORD PTR [esi+0x18],eax
   1d191:	mov    DWORD PTR [ecx+0x30],eax
   1d194:	mov    edx,ecx
   1d196:	cmp    DWORD PTR [esi+0x10],0x0
   1d19a:	mov    eax,DWORD PTR [ebp-0x10]
   1d19d:	mov    DWORD PTR [ebp-0x1c],eax
   1d1a0:	mov    eax,ebx
   1d1a2:	jne    0x1d1c7
   1d1a4:	and    eax,0xff00
   1d1a9:	mov    ecx,ebx
   1d1ab:	shl    ecx,0x10
   1d1ae:	add    eax,ecx
   1d1b0:	mov    ecx,ebx
   1d1b2:	shr    ecx,0x8
   1d1b5:	and    ecx,0xff00
   1d1bb:	shl    eax,0x8
   1d1be:	add    eax,ecx
   1d1c0:	mov    ecx,ebx
   1d1c2:	shr    ecx,0x18
   1d1c5:	add    eax,ecx
   1d1c7:	cmp    eax,DWORD PTR [esi+0x18]
   1d1ca:	je     0x1d1d5
   1d1cc:	mov    DWORD PTR [edx+0x18],0x1f588
   1d1d3:	jmp    0x1d21f
   1d1d5:	xor    ebx,ebx
   1d1d7:	xor    edi,edi
   1d1d9:	mov    DWORD PTR [esi],0x19
   1d1df:	cmp    DWORD PTR [esi+0x8],0x0
   1d1e3:	je     0x1d25d
   1d1e5:	cmp    DWORD PTR [esi+0x10],0x0
   1d1e9:	je     0x1d25d
   1d1eb:	cmp    edi,0x20
   1d1ee:	jae    0x1d213
   1d1f0:	cmp    DWORD PTR [ebp-0x8],0x0
   1d1f4:	je     0x1d273
   1d1f6:	mov    eax,DWORD PTR [ebp-0x4]
   1d1f9:	movzx  eax,BYTE PTR [eax]
   1d1fc:	dec    DWORD PTR [ebp-0x8]
   1d1ff:	mov    ecx,edi
   1d201:	shl    eax,cl
   1d203:	add    edi,0x8
   1d206:	add    ebx,eax
   1d208:	inc    DWORD PTR [ebp-0x4]
   1d20b:	cmp    edi,0x20
   1d20e:	jb     0x1d1f0
   1d210:	mov    edx,DWORD PTR [ebp+0x8]
   1d213:	cmp    ebx,DWORD PTR [esi+0x1c]
   1d216:	je     0x1d259
   1d218:	mov    DWORD PTR [edx+0x18],0x1f570
   1d21f:	mov    DWORD PTR [esi],0x1b
   1d225:	mov    eax,DWORD PTR [esi]
   1d227:	cmp    eax,0x1c
   1d22a:	jbe    0x1c21c
   1d230:	jmp    0x1c212
   1d235:	mov    eax,DWORD PTR [ebp-0x18]
   1d238:	mov    DWORD PTR [edx+0xc],eax
   1d23b:	mov    eax,DWORD PTR [ebp-0x10]
   1d23e:	mov    DWORD PTR [edx+0x10],eax
   1d241:	mov    eax,DWORD PTR [ebp-0x4]
   1d244:	mov    DWORD PTR [edx],eax
   1d246:	mov    eax,DWORD PTR [ebp-0x8]
   1d249:	mov    DWORD PTR [edx+0x4],eax
   1d24c:	mov    DWORD PTR [esi+0x38],ebx
   1d24f:	mov    DWORD PTR [esi+0x3c],edi
   1d252:	push   0x2
   1d254:	jmp    0x1c214
   1d259:	xor    ebx,ebx
   1d25b:	xor    edi,edi
   1d25d:	mov    DWORD PTR [esi],0x1a
   1d263:	mov    DWORD PTR [ebp-0x24],0x1
   1d26a:	jmp    0x1d273
   1d26c:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1d273:	mov    eax,DWORD PTR [ebp+0x8]
   1d276:	mov    ecx,DWORD PTR [ebp-0x18]
   1d279:	mov    DWORD PTR [eax+0xc],ecx
   1d27c:	mov    ecx,DWORD PTR [ebp-0x10]
   1d27f:	mov    DWORD PTR [eax+0x10],ecx
   1d282:	mov    ecx,DWORD PTR [ebp-0x4]
   1d285:	mov    DWORD PTR [eax],ecx
   1d287:	mov    ecx,DWORD PTR [ebp-0x8]
   1d28a:	mov    DWORD PTR [eax+0x4],ecx
   1d28d:	cmp    DWORD PTR [esi+0x28],0x0
   1d291:	mov    DWORD PTR [esi+0x38],ebx
   1d294:	mov    DWORD PTR [esi+0x3c],edi
   1d297:	jne    0x1d2a9
   1d299:	cmp    DWORD PTR [esi],0x18
   1d29c:	jge    0x1d2c5
   1d29e:	mov    eax,DWORD PTR [ebp-0x1c]
   1d2a1:	mov    ecx,DWORD PTR [ebp+0x8]
   1d2a4:	cmp    eax,DWORD PTR [ecx+0x10]
   1d2a7:	je     0x1d2c5
   1d2a9:	mov    eax,DWORD PTR [ebp-0x1c]
   1d2ac:	mov    edi,DWORD PTR [ebp+0x8]
   1d2af:	call   0x1c0d4
   1d2b4:	test   eax,eax
   1d2b6:	je     0x1d2c5
   1d2b8:	mov    DWORD PTR [esi],0x1c
   1d2be:	push   0xfffffffc
   1d2c0:	jmp    0x1c214
   1d2c5:	mov    edi,DWORD PTR [ebp+0x8]
   1d2c8:	mov    eax,DWORD PTR [ebp-0x2c]
   1d2cb:	sub    eax,DWORD PTR [edi+0x4]
   1d2ce:	mov    ebx,DWORD PTR [ebp-0x1c]
   1d2d1:	sub    ebx,DWORD PTR [edi+0x10]
   1d2d4:	add    DWORD PTR [edi+0x8],eax
   1d2d7:	add    DWORD PTR [edi+0x14],ebx
   1d2da:	add    DWORD PTR [esi+0x1c],ebx
   1d2dd:	cmp    DWORD PTR [esi+0x8],0x0
   1d2e1:	mov    DWORD PTR [ebp-0x2c],eax
   1d2e4:	je     0x1d30f
   1d2e6:	test   ebx,ebx
   1d2e8:	je     0x1d30f
   1d2ea:	mov    eax,DWORD PTR [edi+0xc]
   1d2ed:	push   ebx
   1d2ee:	sub    eax,ebx
   1d2f0:	cmp    DWORD PTR [esi+0x10],0x0
   1d2f4:	push   eax
   1d2f5:	push   DWORD PTR [esi+0x18]
   1d2f8:	je     0x1d301
   1d2fa:	call   0x1e0d6
   1d2ff:	jmp    0x1d306
   1d301:	call   0x1dc34
   1d306:	mov    DWORD PTR [esi+0x18],eax
   1d309:	mov    DWORD PTR [edi+0x30],eax
   1d30c:	mov    eax,DWORD PTR [ebp-0x2c]
   1d30f:	cmp    DWORD PTR [esi],0xb
   1d312:	jne    0x1d31b
   1d314:	mov    ecx,0x80
   1d319:	jmp    0x1d31d
   1d31b:	xor    ecx,ecx
   1d31d:	mov    edx,DWORD PTR [esi+0x4]
   1d320:	neg    edx
   1d322:	sbb    edx,edx
   1d324:	and    edx,0x40
   1d327:	add    edx,ecx
   1d329:	add    edx,DWORD PTR [esi+0x3c]
   1d32c:	mov    DWORD PTR [edi+0x2c],edx
   1d32f:	test   eax,eax
   1d331:	jne    0x1d337
   1d333:	test   ebx,ebx
   1d335:	je     0x1d33d
   1d337:	cmp    DWORD PTR [ebp+0xc],0x4
   1d33b:	jne    0x1d34a
   1d33d:	cmp    DWORD PTR [ebp-0x24],0x0
   1d341:	jne    0x1d34a
   1d343:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1d34a:	mov    eax,DWORD PTR [ebp-0x24]
   1d34d:	jmp    0x1c215
   1d352:	mov    edi,edi
   1d354:	es ret 0x1
   1d358:	inc    ebx
   1d359:	ret    
   1d35a:	add    DWORD PTR [eax],eax
   1d35c:	fadd   st,st(3)
   1d35e:	add    DWORD PTR [eax],eax
   1d360:	dec    esi
   1d361:	les    eax,FWORD PTR [ecx]
   1d363:	add    bh,al
   1d365:	les    eax,FWORD PTR [ecx]
   1d367:	add    BYTE PTR [esi-0x3b],al
   1d36a:	add    DWORD PTR [eax],eax
   1d36c:	loope  0x1d333
   1d36e:	add    DWORD PTR [eax],eax
   1d370:	jp     0x1d338
   1d372:	add    DWORD PTR [eax],eax
   1d374:	(bad)  
   1d376:	add    DWORD PTR [eax],eax
   1d378:	pop    edi
   1d37a:	add    DWORD PTR [eax],eax
   1d37c:	in     eax,dx
   1d37d:	mov    DWORD PTR [ecx],0x1c81000
   1d383:	add    BYTE PTR ds:0xcc0001c8,bl
   1d389:	enter  0x1,0x2c
   1d38d:	leave  
   1d38e:	add    DWORD PTR [eax],eax
   1d390:	or     cl,0x1
   1d393:	add    BYTE PTR [edx+ecx*8+0x1],al
   1d397:	add    BYTE PTR [edx+0x1a0001cc],dh
   1d39d:	int    0x1
   1d39f:	add    BYTE PTR [ebp-0x4fffe32],dh
   1d3a5:	into   
   1d3a6:	add    DWORD PTR [eax],eax
   1d3a8:	push   ss
   1d3a9:	rol    BYTE PTR [ecx],1
   1d3ab:	add    BYTE PTR [edx-0x30],bh
   1d3ae:	add    DWORD PTR [eax],eax
   1d3b0:	add    dl,cl
   1d3b2:	add    DWORD PTR [eax],eax
   1d3b4:	and    eax,0xdf0001d1
   1d3b9:	rol    DWORD PTR [ecx],1
   1d3bb:	add    BYTE PTR [ebx-0x2e],ah
   1d3be:	add    DWORD PTR [eax],eax
   1d3c0:	ins    BYTE PTR es:[edi],dx
   1d3c1:	rol    BYTE PTR [ecx],cl
   1d3c3:	add    BYTE PTR [esi-0x33fffe2e],bh
   1d3c9:	int3   
   1d3ca:	int3   
   1d3cb:	int3   
   1d3cc:	int3   
   1d3cd:	int3   
   1d3ce:	mov    edi,edi
   1d3d0:	push   ebp
   1d3d1:	mov    ebp,esp
   1d3d3:	push   esi
   1d3d4:	mov    esi,DWORD PTR [ebp+0x8]
   1d3d7:	test   esi,esi
   1d3d9:	je     0x1d407
   1d3db:	mov    eax,DWORD PTR [esi+0x1c]
   1d3de:	test   eax,eax
   1d3e0:	je     0x1d407
   1d3e2:	mov    ecx,DWORD PTR [esi+0x24]
   1d3e5:	test   ecx,ecx
   1d3e7:	je     0x1d407
   1d3e9:	mov    eax,DWORD PTR [eax+0x34]
   1d3ec:	test   eax,eax
   1d3ee:	je     0x1d3f6
   1d3f0:	push   eax
   1d3f1:	push   DWORD PTR [esi+0x28]
   1d3f4:	call   ecx
   1d3f6:	push   DWORD PTR [esi+0x1c]
   1d3f9:	push   DWORD PTR [esi+0x28]
   1d3fc:	call   DWORD PTR [esi+0x24]
   1d3ff:	and    DWORD PTR [esi+0x1c],0x0
   1d403:	xor    eax,eax
   1d405:	jmp    0x1d40a
   1d407:	push   0xfffffffe
   1d409:	pop    eax
   1d40a:	pop    esi
   1d40b:	pop    ebp
   1d40c:	ret    0x4
   1d40f:	int3   
   1d410:	int3   
   1d411:	int3   
   1d412:	int3   
   1d413:	int3   
   1d414:	mov    edi,edi
   1d416:	push   ebp
   1d417:	mov    ebp,esp
   1d419:	mov    eax,DWORD PTR [ebp+0xc]
   1d41c:	imul   eax,DWORD PTR [ebp+0x10]
   1d420:	push   eax
   1d421:	call   0x1e0fa
   1d426:	pop    ecx
   1d427:	pop    ebp
   1d428:	ret    0xc
   1d42b:	int3   
   1d42c:	int3   
   1d42d:	int3   
   1d42e:	int3   
   1d42f:	int3   
   1d430:	mov    edi,edi
   1d432:	push   ebp
   1d433:	mov    ebp,esp
   1d435:	push   DWORD PTR [ebp+0xc]
   1d438:	call   0x1e128
   1d43d:	pop    ecx
   1d43e:	pop    ebp
   1d43f:	ret    0x8
   1d442:	int3   
   1d443:	int3   
   1d444:	int3   
   1d445:	int3   
   1d446:	int3   
   1d447:	int3   
   1d448:	mov    edi,edi
   1d44a:	push   ebp
   1d44b:	mov    ebp,esp
   1d44d:	sub    esp,0x40
   1d450:	mov    eax,DWORD PTR [ebp+0x8]
   1d453:	mov    ecx,DWORD PTR [eax+0x4]
   1d456:	mov    edx,DWORD PTR [eax+0x10]
   1d459:	push   ebx
   1d45a:	mov    ebx,DWORD PTR [eax]
   1d45c:	dec    ebx
   1d45d:	lea    ecx,[ecx+ebx*1-0x5]
   1d461:	mov    DWORD PTR [ebp-0x2c],ecx
   1d464:	mov    ecx,edx
   1d466:	sub    ecx,DWORD PTR [ebp+0xc]
   1d469:	push   esi
   1d46a:	mov    esi,DWORD PTR [eax+0x1c]
   1d46d:	push   edi
   1d46e:	mov    edi,DWORD PTR [eax+0xc]
   1d471:	dec    edi
   1d472:	add    ecx,edi
   1d474:	mov    DWORD PTR [ebp-0x3c],ecx
   1d477:	lea    ecx,[edx+edi*1-0x101]
   1d47e:	mov    DWORD PTR [ebp-0x30],ecx
   1d481:	mov    ecx,DWORD PTR [esi+0x28]
   1d484:	mov    DWORD PTR [ebp-0x24],ecx
   1d487:	mov    ecx,DWORD PTR [esi+0x2c]
   1d48a:	mov    DWORD PTR [ebp-0x40],ecx
   1d48d:	mov    ecx,DWORD PTR [esi+0x30]
   1d490:	mov    DWORD PTR [ebp-0x18],ecx
   1d493:	mov    ecx,DWORD PTR [esi+0x34]
   1d496:	mov    DWORD PTR [ebp-0x28],ecx
   1d499:	mov    ecx,DWORD PTR [esi+0x38]
   1d49c:	mov    DWORD PTR [ebp-0x4],ecx
   1d49f:	mov    ecx,DWORD PTR [esi+0x3c]
   1d4a2:	mov    DWORD PTR [ebp+0xc],ecx
   1d4a5:	mov    ecx,DWORD PTR [esi+0x4c]
   1d4a8:	xor    edx,edx
   1d4aa:	mov    DWORD PTR [ebp-0x1c],ecx
   1d4ad:	mov    ecx,DWORD PTR [esi+0x50]
   1d4b0:	inc    edx
   1d4b1:	mov    DWORD PTR [ebp-0x20],ecx
   1d4b4:	mov    ecx,DWORD PTR [esi+0x54]
   1d4b7:	shl    edx,cl
   1d4b9:	mov    ecx,DWORD PTR [esi+0x58]
   1d4bc:	dec    edx
   1d4bd:	mov    DWORD PTR [ebp-0x34],edx
   1d4c0:	xor    edx,edx
   1d4c2:	inc    edx
   1d4c3:	shl    edx,cl
   1d4c5:	dec    edx
   1d4c6:	mov    DWORD PTR [ebp-0x38],edx
   1d4c9:	mov    ecx,DWORD PTR [ebp+0xc]
   1d4cc:	cmp    ecx,0xf
   1d4cf:	jae    0x1d4ee
   1d4d1:	add    DWORD PTR [ebp+0xc],0x8
   1d4d5:	inc    ebx
   1d4d6:	movzx  edx,BYTE PTR [ebx]
   1d4d9:	shl    edx,cl
   1d4db:	mov    ecx,DWORD PTR [ebp+0xc]
   1d4de:	add    DWORD PTR [ebp-0x4],edx
   1d4e1:	inc    ebx
   1d4e2:	movzx  edx,BYTE PTR [ebx]
   1d4e5:	shl    edx,cl
   1d4e7:	add    DWORD PTR [ebp-0x4],edx
   1d4ea:	add    DWORD PTR [ebp+0xc],0x8
   1d4ee:	mov    ecx,DWORD PTR [ebp-0x34]
   1d4f1:	and    ecx,DWORD PTR [ebp-0x4]
   1d4f4:	mov    edx,DWORD PTR [ebp-0x1c]
   1d4f7:	mov    ecx,DWORD PTR [edx+ecx*4]
   1d4fa:	mov    DWORD PTR [ebp-0x10],ecx
   1d4fd:	mov    edx,DWORD PTR [ebp-0x10]
   1d500:	shr    ecx,0x8
   1d503:	movzx  ecx,cl
   1d506:	shr    DWORD PTR [ebp-0x4],cl
   1d509:	sub    DWORD PTR [ebp+0xc],ecx
   1d50c:	mov    DWORD PTR [ebp-0x8],ecx
   1d50f:	movzx  ecx,dl
   1d512:	mov    DWORD PTR [ebp-0x8],ecx
   1d515:	test   ecx,ecx
   1d517:	je     0x1d560
   1d519:	mov    ecx,DWORD PTR [ebp-0x8]
   1d51c:	test   cl,0x10
   1d51f:	jne    0x1d56b
   1d521:	test   cl,0x40
   1d524:	jne    0x1d7ba
   1d52a:	xor    edx,edx
   1d52c:	inc    edx
   1d52d:	shl    edx,cl
   1d52f:	mov    ecx,DWORD PTR [ebp-0x10]
   1d532:	shr    ecx,0x10
   1d535:	dec    edx
   1d536:	and    edx,DWORD PTR [ebp-0x4]
   1d539:	add    edx,ecx
   1d53b:	mov    ecx,DWORD PTR [ebp-0x1c]
   1d53e:	mov    ecx,DWORD PTR [ecx+edx*4]
   1d541:	mov    DWORD PTR [ebp-0x10],ecx
   1d544:	mov    edx,DWORD PTR [ebp-0x10]
   1d547:	shr    ecx,0x8
   1d54a:	movzx  ecx,cl
   1d54d:	shr    DWORD PTR [ebp-0x4],cl
   1d550:	sub    DWORD PTR [ebp+0xc],ecx
   1d553:	mov    DWORD PTR [ebp-0x8],ecx
   1d556:	movzx  ecx,dl
   1d559:	mov    DWORD PTR [ebp-0x8],ecx
   1d55c:	test   ecx,ecx
   1d55e:	jne    0x1d519
   1d560:	inc    edi
   1d561:	shr    edx,0x10
   1d564:	mov    BYTE PTR [edi],dl
   1d566:	jmp    0x1d798
   1d56b:	shr    edx,0x10
   1d56e:	and    ecx,0xf
   1d571:	mov    DWORD PTR [ebp-0xc],edx
   1d574:	mov    DWORD PTR [ebp-0x8],ecx
   1d577:	je     0x1d5a3
   1d579:	mov    ecx,DWORD PTR [ebp+0xc]
   1d57c:	cmp    ecx,DWORD PTR [ebp-0x8]
   1d57f:	jae    0x1d58e
   1d581:	inc    ebx
   1d582:	movzx  edx,BYTE PTR [ebx]
   1d585:	shl    edx,cl
   1d587:	add    DWORD PTR [ebp-0x4],edx
   1d58a:	add    DWORD PTR [ebp+0xc],0x8
   1d58e:	mov    ecx,DWORD PTR [ebp-0x8]
   1d591:	xor    edx,edx
   1d593:	inc    edx
   1d594:	shl    edx,cl
   1d596:	dec    edx
   1d597:	and    edx,DWORD PTR [ebp-0x4]
   1d59a:	shr    DWORD PTR [ebp-0x4],cl
   1d59d:	add    DWORD PTR [ebp-0xc],edx
   1d5a0:	sub    DWORD PTR [ebp+0xc],ecx
   1d5a3:	mov    ecx,DWORD PTR [ebp+0xc]
   1d5a6:	cmp    ecx,0xf
   1d5a9:	jae    0x1d5c8
   1d5ab:	add    DWORD PTR [ebp+0xc],0x8
   1d5af:	inc    ebx
   1d5b0:	movzx  edx,BYTE PTR [ebx]
   1d5b3:	shl    edx,cl
   1d5b5:	mov    ecx,DWORD PTR [ebp+0xc]
   1d5b8:	add    DWORD PTR [ebp-0x4],edx
   1d5bb:	inc    ebx
   1d5bc:	movzx  edx,BYTE PTR [ebx]
   1d5bf:	shl    edx,cl
   1d5c1:	add    DWORD PTR [ebp-0x4],edx
   1d5c4:	add    DWORD PTR [ebp+0xc],0x8
   1d5c8:	mov    ecx,DWORD PTR [ebp-0x38]
   1d5cb:	and    ecx,DWORD PTR [ebp-0x4]
   1d5ce:	mov    edx,DWORD PTR [ebp-0x20]
   1d5d1:	mov    ecx,DWORD PTR [edx+ecx*4]
   1d5d4:	jmp    0x1d5f4
   1d5d6:	test   cl,0x40
   1d5d9:	jne    0x1d7b1
   1d5df:	xor    edx,edx
   1d5e1:	inc    edx
   1d5e2:	shl    edx,cl
   1d5e4:	movzx  ecx,WORD PTR [ebp-0xe]
   1d5e8:	dec    edx
   1d5e9:	and    edx,DWORD PTR [ebp-0x4]
   1d5ec:	add    edx,ecx
   1d5ee:	mov    ecx,DWORD PTR [ebp-0x20]
   1d5f1:	mov    ecx,DWORD PTR [ecx+edx*4]
   1d5f4:	mov    DWORD PTR [ebp-0x10],ecx
   1d5f7:	mov    edx,DWORD PTR [ebp-0x10]
   1d5fa:	shr    ecx,0x8
   1d5fd:	movzx  ecx,cl
   1d600:	shr    DWORD PTR [ebp-0x4],cl
   1d603:	sub    DWORD PTR [ebp+0xc],ecx
   1d606:	mov    DWORD PTR [ebp-0x8],ecx
   1d609:	movzx  ecx,dl
   1d60c:	test   cl,0x10
   1d60f:	je     0x1d5d6
   1d611:	and    ecx,0xf
   1d614:	shr    edx,0x10
   1d617:	mov    DWORD PTR [ebp-0x14],edx
   1d61a:	mov    DWORD PTR [ebp-0x8],ecx
   1d61d:	cmp    DWORD PTR [ebp+0xc],ecx
   1d620:	jae    0x1d64d
   1d622:	mov    ecx,DWORD PTR [ebp+0xc]
   1d625:	add    DWORD PTR [ebp+0xc],0x8
   1d629:	inc    ebx
   1d62a:	movzx  edx,BYTE PTR [ebx]
   1d62d:	shl    edx,cl
   1d62f:	mov    ecx,DWORD PTR [ebp-0x8]
   1d632:	add    DWORD PTR [ebp-0x4],edx
   1d635:	cmp    DWORD PTR [ebp+0xc],ecx
   1d638:	jae    0x1d64d
   1d63a:	mov    ecx,DWORD PTR [ebp+0xc]
   1d63d:	inc    ebx
   1d63e:	movzx  edx,BYTE PTR [ebx]
   1d641:	shl    edx,cl
   1d643:	mov    ecx,DWORD PTR [ebp-0x8]
   1d646:	add    DWORD PTR [ebp-0x4],edx
   1d649:	add    DWORD PTR [ebp+0xc],0x8
   1d64d:	xor    edx,edx
   1d64f:	inc    edx
   1d650:	shl    edx,cl
   1d652:	mov    ecx,DWORD PTR [ebp-0x8]
   1d655:	sub    DWORD PTR [ebp+0xc],ecx
   1d658:	dec    edx
   1d659:	and    edx,DWORD PTR [ebp-0x4]
   1d65c:	shr    DWORD PTR [ebp-0x4],cl
   1d65f:	add    DWORD PTR [ebp-0x14],edx
   1d662:	mov    edx,DWORD PTR [ebp-0x14]
   1d665:	mov    ecx,edi
   1d667:	sub    ecx,DWORD PTR [ebp-0x3c]
   1d66a:	cmp    edx,ecx
   1d66c:	jbe    0x1d760
   1d672:	sub    edx,ecx
   1d674:	mov    DWORD PTR [ebp-0x8],edx
   1d677:	cmp    edx,DWORD PTR [ebp-0x40]
   1d67a:	ja     0x1d7a8
   1d680:	mov    ecx,DWORD PTR [ebp-0x28]
   1d683:	dec    ecx
   1d684:	mov    DWORD PTR [ebp-0x10],ecx
   1d687:	mov    ecx,DWORD PTR [ebp-0x18]
   1d68a:	test   ecx,ecx
   1d68c:	jne    0x1d6b4
   1d68e:	mov    ecx,DWORD PTR [ebp-0x24]
   1d691:	sub    ecx,edx
   1d693:	add    DWORD PTR [ebp-0x10],ecx
   1d696:	mov    ecx,edx
   1d698:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d69b:	jae    0x1d729
   1d6a1:	sub    DWORD PTR [ebp-0xc],ecx
   1d6a4:	mov    ecx,DWORD PTR [ebp-0x10]
   1d6a7:	inc    ecx
   1d6a8:	mov    dl,BYTE PTR [ecx]
   1d6aa:	inc    edi
   1d6ab:	dec    DWORD PTR [ebp-0x8]
   1d6ae:	mov    BYTE PTR [edi],dl
   1d6b0:	jne    0x1d6a7
   1d6b2:	jmp    0x1d6ff
   1d6b4:	cmp    ecx,edx
   1d6b6:	jae    0x1d709
   1d6b8:	sub    ecx,edx
   1d6ba:	add    ecx,DWORD PTR [ebp-0x24]
   1d6bd:	add    DWORD PTR [ebp-0x10],ecx
   1d6c0:	mov    ecx,DWORD PTR [ebp-0x8]
   1d6c3:	sub    ecx,DWORD PTR [ebp-0x18]
   1d6c6:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d6c9:	jae    0x1d729
   1d6cb:	sub    DWORD PTR [ebp-0xc],ecx
   1d6ce:	inc    DWORD PTR [ebp-0x10]
   1d6d1:	mov    edx,DWORD PTR [ebp-0x10]
   1d6d4:	mov    dl,BYTE PTR [edx]
   1d6d6:	inc    edi
   1d6d7:	dec    ecx
   1d6d8:	mov    BYTE PTR [edi],dl
   1d6da:	jne    0x1d6ce
   1d6dc:	mov    ecx,DWORD PTR [ebp-0x28]
   1d6df:	dec    ecx
   1d6e0:	mov    DWORD PTR [ebp-0x10],ecx
   1d6e3:	mov    ecx,DWORD PTR [ebp-0x18]
   1d6e6:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d6e9:	jae    0x1d729
   1d6eb:	sub    DWORD PTR [ebp-0xc],ecx
   1d6ee:	mov    DWORD PTR [ebp-0x8],ecx
   1d6f1:	mov    ecx,DWORD PTR [ebp-0x10]
   1d6f4:	inc    ecx
   1d6f5:	mov    dl,BYTE PTR [ecx]
   1d6f7:	inc    edi
   1d6f8:	dec    DWORD PTR [ebp-0x8]
   1d6fb:	mov    BYTE PTR [edi],dl
   1d6fd:	jne    0x1d6f4
   1d6ff:	mov    ecx,edi
   1d701:	sub    ecx,DWORD PTR [ebp-0x14]
   1d704:	mov    DWORD PTR [ebp-0x10],ecx
   1d707:	jmp    0x1d72c
   1d709:	sub    ecx,edx
   1d70b:	add    DWORD PTR [ebp-0x10],ecx
   1d70e:	mov    ecx,DWORD PTR [ebp-0x8]
   1d711:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d714:	jae    0x1d729
   1d716:	sub    DWORD PTR [ebp-0xc],ecx
   1d719:	mov    ecx,DWORD PTR [ebp-0x10]
   1d71c:	inc    ecx
   1d71d:	mov    dl,BYTE PTR [ecx]
   1d71f:	inc    edi
   1d720:	dec    DWORD PTR [ebp-0x8]
   1d723:	mov    BYTE PTR [edi],dl
   1d725:	jne    0x1d71c
   1d727:	jmp    0x1d6ff
   1d729:	mov    ecx,DWORD PTR [ebp-0x10]
   1d72c:	mov    edx,DWORD PTR [ebp-0xc]
   1d72f:	cmp    edx,0x2
   1d732:	jbe    0x1d780
   1d734:	lea    eax,[edx-0x3]
   1d737:	push   0x3
   1d739:	xor    edx,edx
   1d73b:	pop    ecx
   1d73c:	div    ecx
   1d73e:	mov    ecx,DWORD PTR [ebp-0x10]
   1d741:	inc    eax
   1d742:	sub    DWORD PTR [ebp-0xc],0x3
   1d746:	inc    ecx
   1d747:	mov    dl,BYTE PTR [ecx]
   1d749:	inc    edi
   1d74a:	mov    BYTE PTR [edi],dl
   1d74c:	inc    ecx
   1d74d:	mov    dl,BYTE PTR [ecx]
   1d74f:	inc    edi
   1d750:	inc    ecx
   1d751:	mov    BYTE PTR [edi],dl
   1d753:	mov    dl,BYTE PTR [ecx]
   1d755:	inc    edi
   1d756:	dec    eax
   1d757:	mov    BYTE PTR [edi],dl
   1d759:	jne    0x1d742
   1d75b:	mov    eax,DWORD PTR [ebp+0x8]
   1d75e:	jmp    0x1d780
   1d760:	mov    ecx,edi
   1d762:	sub    ecx,edx
   1d764:	sub    DWORD PTR [ebp-0xc],0x3
   1d768:	inc    ecx
   1d769:	mov    dl,BYTE PTR [ecx]
   1d76b:	inc    edi
   1d76c:	mov    BYTE PTR [edi],dl
   1d76e:	inc    ecx
   1d76f:	mov    dl,BYTE PTR [ecx]
   1d771:	inc    edi
   1d772:	inc    ecx
   1d773:	mov    BYTE PTR [edi],dl
   1d775:	mov    dl,BYTE PTR [ecx]
   1d777:	inc    edi
   1d778:	cmp    DWORD PTR [ebp-0xc],0x2
   1d77c:	mov    BYTE PTR [edi],dl
   1d77e:	ja     0x1d764
   1d780:	cmp    DWORD PTR [ebp-0xc],0x0
   1d784:	je     0x1d798
   1d786:	inc    ecx
   1d787:	mov    dl,BYTE PTR [ecx]
   1d789:	inc    edi
   1d78a:	cmp    DWORD PTR [ebp-0xc],0x1
   1d78e:	mov    BYTE PTR [edi],dl
   1d790:	jbe    0x1d798
   1d792:	mov    cl,BYTE PTR [ecx+0x1]
   1d795:	inc    edi
   1d796:	mov    BYTE PTR [edi],cl
   1d798:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d79b:	jae    0x1d7d4
   1d79d:	cmp    edi,DWORD PTR [ebp-0x30]
   1d7a0:	jb     0x1d4c9
   1d7a6:	jmp    0x1d7d4
   1d7a8:	mov    DWORD PTR [eax+0x18],0x1f59e
   1d7af:	jmp    0x1d7ce
   1d7b1:	mov    DWORD PTR [eax+0x18],0x1f5bc
   1d7b8:	jmp    0x1d7ce
   1d7ba:	test   cl,0x20
   1d7bd:	je     0x1d7c7
   1d7bf:	mov    DWORD PTR [esi],0xb
   1d7c5:	jmp    0x1d7d4
   1d7c7:	mov    DWORD PTR [eax+0x18],0x1f5d2
   1d7ce:	mov    DWORD PTR [esi],0x1b
   1d7d4:	mov    ecx,DWORD PTR [ebp+0xc]
   1d7d7:	shr    ecx,0x3
   1d7da:	sub    ebx,ecx
   1d7dc:	shl    ecx,0x3
   1d7df:	sub    DWORD PTR [ebp+0xc],ecx
   1d7e2:	xor    ecx,ecx
   1d7e4:	inc    ecx
   1d7e5:	mov    edx,ecx
   1d7e7:	mov    ecx,DWORD PTR [ebp+0xc]
   1d7ea:	shl    edx,cl
   1d7ec:	dec    edx
   1d7ed:	mov    ecx,edx
   1d7ef:	mov    edx,DWORD PTR [ebp-0x4]
   1d7f2:	and    edx,ecx
   1d7f4:	lea    ecx,[ebx+0x1]
   1d7f7:	mov    DWORD PTR [eax],ecx
   1d7f9:	lea    ecx,[edi+0x1]
   1d7fc:	mov    DWORD PTR [eax+0xc],ecx
   1d7ff:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d802:	sub    ecx,ebx
   1d804:	add    ecx,0x5
   1d807:	mov    DWORD PTR [eax+0x4],ecx
   1d80a:	mov    ecx,DWORD PTR [ebp-0x30]
   1d80d:	sub    ecx,edi
   1d80f:	add    ecx,0x101
   1d815:	mov    DWORD PTR [eax+0x10],ecx
   1d818:	mov    eax,DWORD PTR [ebp+0xc]
   1d81b:	pop    edi
   1d81c:	mov    DWORD PTR [esi+0x38],edx
   1d81f:	mov    DWORD PTR [esi+0x3c],eax
   1d822:	pop    esi
   1d823:	pop    ebx
   1d824:	leave  
   1d825:	ret    0x8
   1d828:	int3   
   1d829:	int3   
   1d82a:	int3   
   1d82b:	int3   
   1d82c:	int3   
   1d82d:	int3   
   1d82e:	mov    edi,edi
   1d830:	push   ebp
   1d831:	mov    ebp,esp
   1d833:	sub    esp,0x90
   1d839:	mov    eax,ds:0x76f1c
   1d83e:	xor    eax,ebp
   1d840:	mov    DWORD PTR [ebp-0x4],eax
   1d843:	mov    eax,DWORD PTR [ebp+0xc]
   1d846:	mov    edx,DWORD PTR [ebp+0x18]
   1d849:	mov    DWORD PTR [ebp-0x7c],eax
   1d84c:	mov    eax,DWORD PTR [ebp+0x1c]
   1d84f:	push   ebx
   1d850:	mov    DWORD PTR [ebp-0x4c],eax
   1d853:	xor    eax,eax
   1d855:	push   esi
   1d856:	mov    esi,DWORD PTR [ebp+0x14]
   1d859:	movzx  ebx,ax
   1d85c:	push   edi
   1d85d:	mov    eax,ebx
   1d85f:	shl    ebx,0x10
   1d862:	push   0x8
   1d864:	or     eax,ebx
   1d866:	pop    ecx
   1d867:	lea    edi,[ebp-0x24]
   1d86a:	rep stos DWORD PTR es:[edi],eax
   1d86c:	xor    edi,edi
   1d86e:	xor    ecx,ecx
   1d870:	mov    DWORD PTR [ebp-0x90],edx
   1d876:	cmp    DWORD PTR [ebp+0x10],edi
   1d879:	jbe    0x1d88f
   1d87b:	mov    eax,DWORD PTR [ebp-0x7c]
   1d87e:	movzx  eax,WORD PTR [eax+ecx*2]
   1d882:	lea    eax,[ebp+eax*2-0x24]
   1d886:	inc    WORD PTR [eax]
   1d889:	inc    ecx
   1d88a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d88d:	jb     0x1d87b
   1d88f:	mov    ecx,DWORD PTR [edx]
   1d891:	push   0xf
   1d893:	pop    eax
   1d894:	mov    DWORD PTR [ebp-0x54],ecx
   1d897:	mov    DWORD PTR [ebp-0x60],eax
   1d89a:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d89f:	jne    0x1d8aa
   1d8a1:	dec    eax
   1d8a2:	mov    DWORD PTR [ebp-0x60],eax
   1d8a5:	cmp    eax,0x1
   1d8a8:	jae    0x1d89a
   1d8aa:	cmp    ecx,eax
   1d8ac:	jbe    0x1d8b1
   1d8ae:	mov    DWORD PTR [ebp-0x54],eax
   1d8b1:	cmp    eax,edi
   1d8b3:	jne    0x1d8df
   1d8b5:	mov    ecx,DWORD PTR [esi]
   1d8b7:	xor    eax,eax
   1d8b9:	mov    BYTE PTR [ebp-0x48],0x40
   1d8bd:	mov    BYTE PTR [ebp-0x47],0x1
   1d8c1:	mov    WORD PTR [ebp-0x46],ax
   1d8c5:	mov    eax,DWORD PTR [ebp-0x48]
   1d8c8:	mov    DWORD PTR [ecx],eax
   1d8ca:	add    DWORD PTR [esi],0x4
   1d8cd:	mov    ecx,DWORD PTR [esi]
   1d8cf:	mov    DWORD PTR [ecx],eax
   1d8d1:	add    DWORD PTR [esi],0x4
   1d8d4:	mov    DWORD PTR [edx],0x1
   1d8da:	jmp    0x1dc1b
   1d8df:	xor    ecx,ecx
   1d8e1:	inc    ecx
   1d8e2:	mov    edx,ecx
   1d8e4:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d8e9:	jne    0x1d8f1
   1d8eb:	inc    edx
   1d8ec:	cmp    edx,0xf
   1d8ef:	jbe    0x1d8e4
   1d8f1:	cmp    DWORD PTR [ebp-0x54],edx
   1d8f4:	jae    0x1d8f9
   1d8f6:	mov    DWORD PTR [ebp-0x54],edx
   1d8f9:	mov    edi,ecx
   1d8fb:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d900:	add    edi,edi
   1d902:	sub    edi,ebx
   1d904:	js     0x1d990
   1d90a:	inc    ecx
   1d90b:	cmp    ecx,0xf
   1d90e:	jbe    0x1d8fb
   1d910:	xor    ebx,ebx
   1d912:	cmp    edi,ebx
   1d914:	jle    0x1d920
   1d916:	cmp    DWORD PTR [ebp+0x8],ebx
   1d919:	je     0x1d990
   1d91b:	cmp    eax,0x1
   1d91e:	jne    0x1d990
   1d920:	xor    eax,eax
   1d922:	push   0x2
   1d924:	mov    WORD PTR [ebp-0x42],ax
   1d928:	pop    ecx
   1d929:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d92e:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d933:	inc    ecx
   1d934:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d939:	inc    ecx
   1d93a:	cmp    ecx,0x1e
   1d93d:	jb     0x1d929
   1d93f:	mov    eax,DWORD PTR [ebp-0x4c]
   1d942:	xor    edi,edi
   1d944:	cmp    DWORD PTR [ebp+0x10],ebx
   1d947:	jbe    0x1d972
   1d949:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d94c:	lea    ecx,[ecx+edi*2]
   1d94f:	cmp    WORD PTR [ecx],bx
   1d952:	je     0x1d96c
   1d954:	movzx  ebx,WORD PTR [ecx]
   1d957:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d95c:	mov    WORD PTR [eax+ebx*2],di
   1d960:	movzx  ecx,WORD PTR [ecx]
   1d963:	lea    ecx,[ebp+ecx*2-0x44]
   1d967:	inc    WORD PTR [ecx]
   1d96a:	xor    ebx,ebx
   1d96c:	inc    edi
   1d96d:	cmp    edi,DWORD PTR [ebp+0x10]
   1d970:	jb     0x1d949
   1d972:	mov    ecx,DWORD PTR [ebp+0x8]
   1d975:	sub    ecx,ebx
   1d977:	je     0x1d9ba
   1d979:	dec    ecx
   1d97a:	je     0x1d998
   1d97c:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d980:	mov    DWORD PTR [ebp-0x6c],0x74968
   1d987:	mov    DWORD PTR [ebp-0x78],0x749a8
   1d98e:	jmp    0x1d9c7
   1d990:	or     eax,0xffffffff
   1d993:	jmp    0x1dc1d
   1d998:	mov    ecx,0x202
   1d99d:	mov    edi,0x748e8
   1d9a2:	sub    edi,ecx
   1d9a4:	mov    DWORD PTR [ebp-0x6c],edi
   1d9a7:	mov    edi,0x74928
   1d9ac:	sub    edi,ecx
   1d9ae:	mov    DWORD PTR [ebp-0x78],edi
   1d9b1:	mov    DWORD PTR [ebp-0x68],0x100
   1d9b8:	jmp    0x1d9c7
   1d9ba:	mov    DWORD PTR [ebp-0x78],eax
   1d9bd:	mov    DWORD PTR [ebp-0x6c],eax
   1d9c0:	mov    DWORD PTR [ebp-0x68],0x13
   1d9c7:	mov    ecx,DWORD PTR [ebp-0x54]
   1d9ca:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d9ce:	mov    edi,DWORD PTR [esi]
   1d9d0:	mov    eax,edx
   1d9d2:	xor    edx,edx
   1d9d4:	inc    edx
   1d9d5:	shl    edx,cl
   1d9d7:	cmp    DWORD PTR [ebp+0x8],0x1
   1d9db:	mov    DWORD PTR [ebp-0x5c],ebx
   1d9de:	mov    DWORD PTR [ebp-0x84],eax
   1d9e4:	lea    ecx,[edx-0x1]
   1d9e7:	mov    DWORD PTR [ebp-0x50],ebx
   1d9ea:	mov    DWORD PTR [ebp-0x80],edx
   1d9ed:	mov    DWORD PTR [ebp-0x64],edx
   1d9f0:	mov    DWORD PTR [ebp-0x88],ecx
   1d9f6:	jne    0x1da08
   1d9f8:	cmp    edx,0x5b0
   1d9fe:	jb     0x1da08
   1da00:	xor    eax,eax
   1da02:	inc    eax
   1da03:	jmp    0x1dc1d
   1da08:	mov    ecx,DWORD PTR [ebp-0x4c]
   1da0b:	mov    DWORD PTR [ebp-0x58],ecx
   1da0e:	mov    cl,al
   1da10:	sub    cl,BYTE PTR [ebp-0x50]
   1da13:	mov    BYTE PTR [ebp-0x47],cl
   1da16:	mov    ecx,DWORD PTR [ebp-0x58]
   1da19:	movzx  edx,WORD PTR [ecx]
   1da1c:	movzx  ecx,dx
   1da1f:	cmp    ecx,DWORD PTR [ebp-0x68]
   1da22:	jge    0x1da2e
   1da24:	mov    BYTE PTR [ebp-0x48],0x0
   1da28:	mov    WORD PTR [ebp-0x46],dx
   1da2c:	jmp    0x1da54
   1da2e:	jle    0x1da4a
   1da30:	mov    ecx,DWORD PTR [ebp-0x58]
   1da33:	movzx  ecx,WORD PTR [ecx]
   1da36:	mov    edx,DWORD PTR [ebp-0x78]
   1da39:	add    ecx,ecx
   1da3b:	mov    dl,BYTE PTR [ecx+edx*1]
   1da3e:	mov    BYTE PTR [ebp-0x48],dl
   1da41:	mov    edx,DWORD PTR [ebp-0x6c]
   1da44:	mov    cx,WORD PTR [ecx+edx*1]
   1da48:	jmp    0x1da50
   1da4a:	mov    BYTE PTR [ebp-0x48],0x60
   1da4e:	xor    ecx,ecx
   1da50:	mov    WORD PTR [ebp-0x46],cx
   1da54:	xor    edx,edx
   1da56:	mov    ecx,eax
   1da58:	sub    ecx,DWORD PTR [ebp-0x50]
   1da5b:	inc    edx
   1da5c:	shl    edx,cl
   1da5e:	mov    ecx,DWORD PTR [ebp-0x80]
   1da61:	mov    DWORD PTR [ebp-0x4c],ecx
   1da64:	mov    DWORD PTR [ebp-0x70],ecx
   1da67:	mov    ecx,DWORD PTR [ebp-0x50]
   1da6a:	shr    ebx,cl
   1da6c:	add    ebx,DWORD PTR [ebp-0x4c]
   1da6f:	lea    ecx,[edi+ebx*4]
   1da72:	sub    DWORD PTR [ebp-0x4c],edx
   1da75:	mov    ebx,edx
   1da77:	shl    ebx,0x2
   1da7a:	sub    ecx,ebx
   1da7c:	cmp    DWORD PTR [ebp-0x4c],0x0
   1da80:	mov    ebx,DWORD PTR [ebp-0x48]
   1da83:	mov    DWORD PTR [ecx],ebx
   1da85:	jne    0x1da72
   1da87:	xor    edx,edx
   1da89:	lea    ecx,[eax-0x1]
   1da8c:	inc    edx
   1da8d:	shl    edx,cl
   1da8f:	mov    ecx,DWORD PTR [ebp-0x5c]
   1da92:	jmp    0x1da96
   1da94:	shr    edx,1
   1da96:	test   ecx,edx
   1da98:	jne    0x1da94
   1da9a:	test   edx,edx
   1da9c:	je     0x1daa7
   1da9e:	lea    ebx,[edx-0x1]
   1daa1:	and    ebx,ecx
   1daa3:	add    ebx,edx
   1daa5:	jmp    0x1daa9
   1daa7:	xor    ebx,ebx
   1daa9:	add    DWORD PTR [ebp-0x58],0x2
   1daad:	lea    ecx,[ebp+eax*2-0x24]
   1dab1:	mov    edx,0xffff
   1dab6:	add    WORD PTR [ecx],dx
   1dab9:	movzx  ecx,WORD PTR [ecx]
   1dabc:	mov    DWORD PTR [ebp-0x5c],ebx
   1dabf:	test   cx,cx
   1dac2:	jne    0x1dae0
   1dac4:	cmp    eax,DWORD PTR [ebp-0x60]
   1dac7:	je     0x1dba3
   1dacd:	mov    eax,DWORD PTR [ebp-0x58]
   1dad0:	movzx  eax,WORD PTR [eax]
   1dad3:	mov    ecx,DWORD PTR [ebp-0x7c]
   1dad6:	movzx  eax,WORD PTR [ecx+eax*2]
   1dada:	mov    DWORD PTR [ebp-0x84],eax
   1dae0:	mov    edx,DWORD PTR [ebp-0x54]
   1dae3:	cmp    eax,edx
   1dae5:	jbe    0x1da0e
   1daeb:	mov    ecx,DWORD PTR [ebp-0x88]
   1daf1:	and    ecx,ebx
   1daf3:	mov    DWORD PTR [ebp-0x8c],ecx
   1daf9:	cmp    ecx,DWORD PTR [ebp-0x74]
   1dafc:	je     0x1da0e
   1db02:	cmp    DWORD PTR [ebp-0x50],0x0
   1db06:	jne    0x1db0b
   1db08:	mov    DWORD PTR [ebp-0x50],edx
   1db0b:	mov    ecx,DWORD PTR [ebp-0x70]
   1db0e:	lea    edi,[edi+ecx*4]
   1db11:	mov    ecx,eax
   1db13:	mov    eax,DWORD PTR [ebp-0x50]
   1db16:	xor    edx,edx
   1db18:	sub    ecx,eax
   1db1a:	inc    edx
   1db1b:	add    eax,ecx
   1db1d:	shl    edx,cl
   1db1f:	cmp    eax,DWORD PTR [ebp-0x60]
   1db22:	jae    0x1db4c
   1db24:	mov    DWORD PTR [ebp-0x4c],eax
   1db27:	lea    eax,[ebp+eax*2-0x24]
   1db2b:	jmp    0x1db30
   1db2d:	mov    eax,DWORD PTR [ebp-0x70]
   1db30:	movzx  ebx,WORD PTR [eax]
   1db33:	sub    edx,ebx
   1db35:	test   edx,edx
   1db37:	jle    0x1db4c
   1db39:	inc    ecx
   1db3a:	inc    DWORD PTR [ebp-0x4c]
   1db3d:	inc    eax
   1db3e:	inc    eax
   1db3f:	mov    DWORD PTR [ebp-0x70],eax
   1db42:	mov    eax,DWORD PTR [ebp-0x4c]
   1db45:	add    edx,edx
   1db47:	cmp    eax,DWORD PTR [ebp-0x60]
   1db4a:	jb     0x1db2d
   1db4c:	xor    eax,eax
   1db4e:	inc    eax
   1db4f:	mov    edx,eax
   1db51:	shl    edx,cl
   1db53:	add    DWORD PTR [ebp-0x64],edx
   1db56:	mov    DWORD PTR [ebp-0x80],edx
   1db59:	cmp    DWORD PTR [ebp+0x8],eax
   1db5c:	jne    0x1db6b
   1db5e:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1db65:	jae    0x1dc1d
   1db6b:	mov    eax,DWORD PTR [ebp-0x8c]
   1db71:	mov    ebx,DWORD PTR [ebp-0x5c]
   1db74:	mov    edx,eax
   1db76:	mov    DWORD PTR [ebp-0x74],eax
   1db79:	mov    eax,DWORD PTR [esi]
   1db7b:	shl    edx,0x2
   1db7e:	mov    BYTE PTR [edx+eax*1],cl
   1db81:	mov    eax,DWORD PTR [esi]
   1db83:	mov    cl,BYTE PTR [ebp-0x54]
   1db86:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1db8a:	mov    eax,DWORD PTR [esi]
   1db8c:	mov    ecx,edi
   1db8e:	sub    ecx,eax
   1db90:	sar    ecx,0x2
   1db93:	mov    WORD PTR [edx+eax*1+0x2],cx
   1db98:	mov    eax,DWORD PTR [ebp-0x84]
   1db9e:	jmp    0x1da0e
   1dba3:	mov    cl,al
   1dba5:	sub    cl,BYTE PTR [ebp-0x50]
   1dba8:	mov    BYTE PTR [ebp-0x48],0x40
   1dbac:	mov    BYTE PTR [ebp-0x47],cl
   1dbaf:	xor    ecx,ecx
   1dbb1:	mov    WORD PTR [ebp-0x46],cx
   1dbb5:	jmp    0x1dc04
   1dbb7:	cmp    DWORD PTR [ebp-0x50],0x0
   1dbbb:	je     0x1dbd6
   1dbbd:	mov    ecx,DWORD PTR [ebp-0x88]
   1dbc3:	and    ecx,ebx
   1dbc5:	cmp    ecx,DWORD PTR [ebp-0x74]
   1dbc8:	je     0x1dbd6
   1dbca:	mov    eax,DWORD PTR [ebp-0x54]
   1dbcd:	and    DWORD PTR [ebp-0x50],0x0
   1dbd1:	mov    edi,DWORD PTR [esi]
   1dbd3:	mov    BYTE PTR [ebp-0x47],al
   1dbd6:	mov    ecx,DWORD PTR [ebp-0x50]
   1dbd9:	mov    edx,ebx
   1dbdb:	shr    edx,cl
   1dbdd:	mov    ecx,DWORD PTR [ebp-0x48]
   1dbe0:	mov    DWORD PTR [edi+edx*4],ecx
   1dbe3:	xor    edx,edx
   1dbe5:	lea    ecx,[eax-0x1]
   1dbe8:	inc    edx
   1dbe9:	shl    edx,cl
   1dbeb:	jmp    0x1dbef
   1dbed:	shr    edx,1
   1dbef:	test   ebx,edx
   1dbf1:	jne    0x1dbed
   1dbf3:	test   edx,edx
   1dbf5:	je     0x1dc02
   1dbf7:	lea    ecx,[edx-0x1]
   1dbfa:	and    ecx,ebx
   1dbfc:	add    ecx,edx
   1dbfe:	mov    ebx,ecx
   1dc00:	jmp    0x1dc04
   1dc02:	xor    ebx,ebx
   1dc04:	test   ebx,ebx
   1dc06:	jne    0x1dbb7
   1dc08:	mov    eax,DWORD PTR [ebp-0x64]
   1dc0b:	mov    ecx,DWORD PTR [ebp-0x54]
   1dc0e:	shl    eax,0x2
   1dc11:	add    DWORD PTR [esi],eax
   1dc13:	mov    eax,DWORD PTR [ebp-0x90]
   1dc19:	mov    DWORD PTR [eax],ecx
   1dc1b:	xor    eax,eax
   1dc1d:	mov    ecx,DWORD PTR [ebp-0x4]
   1dc20:	pop    edi
   1dc21:	pop    esi
   1dc22:	xor    ecx,ebp
   1dc24:	pop    ebx
   1dc25:	call   0x1e145
   1dc2a:	leave  
   1dc2b:	ret    0x18
   1dc2e:	int3   
   1dc2f:	int3   
   1dc30:	int3   
   1dc31:	int3   
   1dc32:	int3   
   1dc33:	int3   
   1dc34:	mov    edi,edi
   1dc36:	push   ebp
   1dc37:	mov    ebp,esp
   1dc39:	push   ebx
   1dc3a:	mov    ebx,DWORD PTR [ebp+0x10]
   1dc3d:	push   esi
   1dc3e:	mov    esi,DWORD PTR [ebp+0x8]
   1dc41:	push   edi
   1dc42:	xor    eax,eax
   1dc44:	mov    edi,esi
   1dc46:	inc    eax
   1dc47:	shr    edi,0x10
   1dc4a:	and    esi,0xffff
   1dc50:	cmp    ebx,eax
   1dc52:	jne    0x1dc78
   1dc54:	mov    eax,DWORD PTR [ebp+0xc]
   1dc57:	movzx  eax,BYTE PTR [eax]
   1dc5a:	add    esi,eax
   1dc5c:	mov    eax,0xfff1
   1dc61:	cmp    esi,eax
   1dc63:	jb     0x1dc67
   1dc65:	sub    esi,eax
   1dc67:	add    edi,esi
   1dc69:	cmp    edi,eax
   1dc6b:	jb     0x1de4a
   1dc71:	sub    edi,eax
   1dc73:	jmp    0x1de4a
   1dc78:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc7b:	test   ecx,ecx
   1dc7d:	je     0x1de51
   1dc83:	cmp    ebx,0x10
   1dc86:	jb     0x1de0d
   1dc8c:	cmp    ebx,0x15b0
   1dc92:	jb     0x1dd60
   1dc98:	mov    eax,ebx
   1dc9a:	mov    ebx,0x15b0
   1dc9f:	xor    edx,edx
   1dca1:	div    ebx
   1dca3:	mov    ebx,DWORD PTR [ebp+0x10]
   1dca6:	mov    DWORD PTR [ebp+0xc],eax
   1dca9:	sub    ebx,0x15b0
   1dcaf:	mov    eax,0x15b
   1dcb4:	movzx  edx,BYTE PTR [ecx]
   1dcb7:	add    esi,edx
   1dcb9:	movzx  edx,BYTE PTR [ecx+0x1]
   1dcbd:	add    edi,esi
   1dcbf:	add    esi,edx
   1dcc1:	movzx  edx,BYTE PTR [ecx+0x2]
   1dcc5:	add    edi,esi
   1dcc7:	add    esi,edx
   1dcc9:	movzx  edx,BYTE PTR [ecx+0x3]
   1dccd:	add    edi,esi
   1dccf:	add    esi,edx
   1dcd1:	movzx  edx,BYTE PTR [ecx+0x4]
   1dcd5:	add    edi,esi
   1dcd7:	add    esi,edx
   1dcd9:	movzx  edx,BYTE PTR [ecx+0x5]
   1dcdd:	add    edi,esi
   1dcdf:	add    esi,edx
   1dce1:	movzx  edx,BYTE PTR [ecx+0x6]
   1dce5:	add    edi,esi
   1dce7:	add    esi,edx
   1dce9:	movzx  edx,BYTE PTR [ecx+0x7]
   1dced:	add    edi,esi
   1dcef:	add    esi,edx
   1dcf1:	movzx  edx,BYTE PTR [ecx+0x8]
   1dcf5:	add    edi,esi
   1dcf7:	add    esi,edx
   1dcf9:	movzx  edx,BYTE PTR [ecx+0x9]
   1dcfd:	add    edi,esi
   1dcff:	add    esi,edx
   1dd01:	movzx  edx,BYTE PTR [ecx+0xa]
   1dd05:	add    edi,esi
   1dd07:	add    esi,edx
   1dd09:	movzx  edx,BYTE PTR [ecx+0xb]
   1dd0d:	add    edi,esi
   1dd0f:	add    esi,edx
   1dd11:	movzx  edx,BYTE PTR [ecx+0xc]
   1dd15:	add    edi,esi
   1dd17:	add    esi,edx
   1dd19:	movzx  edx,BYTE PTR [ecx+0xd]
   1dd1d:	add    edi,esi
   1dd1f:	add    esi,edx
   1dd21:	movzx  edx,BYTE PTR [ecx+0xe]
   1dd25:	add    edi,esi
   1dd27:	add    esi,edx
   1dd29:	movzx  edx,BYTE PTR [ecx+0xf]
   1dd2d:	add    edi,esi
   1dd2f:	add    esi,edx
   1dd31:	add    edi,esi
   1dd33:	add    ecx,0x10
   1dd36:	dec    eax
   1dd37:	jne    0x1dcb4
   1dd3d:	mov    eax,esi
   1dd3f:	xor    edx,edx
   1dd41:	mov    esi,0xfff1
   1dd46:	div    esi
   1dd48:	mov    eax,edi
   1dd4a:	mov    edi,0xfff1
   1dd4f:	mov    esi,edx
   1dd51:	xor    edx,edx
   1dd53:	div    edi
   1dd55:	dec    DWORD PTR [ebp+0xc]
   1dd58:	mov    edi,edx
   1dd5a:	jne    0x1dca9
   1dd60:	test   ebx,ebx
   1dd62:	je     0x1de4a
   1dd68:	cmp    ebx,0x10
   1dd6b:	jb     0x1de2f
   1dd71:	mov    eax,ebx
   1dd73:	shr    eax,0x4
   1dd76:	movzx  edx,BYTE PTR [ecx]
   1dd79:	add    esi,edx
   1dd7b:	movzx  edx,BYTE PTR [ecx+0x1]
   1dd7f:	add    edi,esi
   1dd81:	add    esi,edx
   1dd83:	movzx  edx,BYTE PTR [ecx+0x2]
   1dd87:	add    edi,esi
   1dd89:	add    esi,edx
   1dd8b:	movzx  edx,BYTE PTR [ecx+0x3]
   1dd8f:	add    edi,esi
   1dd91:	add    esi,edx
   1dd93:	movzx  edx,BYTE PTR [ecx+0x4]
   1dd97:	add    edi,esi
   1dd99:	add    esi,edx
   1dd9b:	movzx  edx,BYTE PTR [ecx+0x5]
   1dd9f:	add    edi,esi
   1dda1:	add    esi,edx
   1dda3:	movzx  edx,BYTE PTR [ecx+0x6]
   1dda7:	add    edi,esi
   1dda9:	add    esi,edx
   1ddab:	movzx  edx,BYTE PTR [ecx+0x7]
   1ddaf:	add    edi,esi
   1ddb1:	add    esi,edx
   1ddb3:	movzx  edx,BYTE PTR [ecx+0x8]
   1ddb7:	add    edi,esi
   1ddb9:	add    esi,edx
   1ddbb:	movzx  edx,BYTE PTR [ecx+0x9]
   1ddbf:	add    edi,esi
   1ddc1:	add    esi,edx
   1ddc3:	movzx  edx,BYTE PTR [ecx+0xa]
   1ddc7:	add    edi,esi
   1ddc9:	add    esi,edx
   1ddcb:	movzx  edx,BYTE PTR [ecx+0xb]
   1ddcf:	add    edi,esi
   1ddd1:	add    esi,edx
   1ddd3:	movzx  edx,BYTE PTR [ecx+0xc]
   1ddd7:	add    edi,esi
   1ddd9:	add    esi,edx
   1dddb:	movzx  edx,BYTE PTR [ecx+0xd]
   1dddf:	add    edi,esi
   1dde1:	add    esi,edx
   1dde3:	movzx  edx,BYTE PTR [ecx+0xe]
   1dde7:	add    edi,esi
   1dde9:	add    esi,edx
   1ddeb:	movzx  edx,BYTE PTR [ecx+0xf]
   1ddef:	add    edi,esi
   1ddf1:	add    esi,edx
   1ddf3:	sub    ebx,0x10
   1ddf6:	add    edi,esi
   1ddf8:	add    ecx,0x10
   1ddfb:	dec    eax
   1ddfc:	jne    0x1dd76
   1de02:	jmp    0x1de2f
   1de04:	movzx  eax,BYTE PTR [ecx]
   1de07:	dec    ebx
   1de08:	add    esi,eax
   1de0a:	inc    ecx
   1de0b:	add    edi,esi
   1de0d:	test   ebx,ebx
   1de0f:	jne    0x1de04
   1de11:	mov    ecx,0xfff1
   1de16:	cmp    esi,ecx
   1de18:	jb     0x1de1c
   1de1a:	sub    esi,ecx
   1de1c:	mov    eax,edi
   1de1e:	xor    edx,edx
   1de20:	div    ecx
   1de22:	mov    eax,edx
   1de24:	jmp    0x1de4c
   1de26:	movzx  eax,BYTE PTR [ecx]
   1de29:	dec    ebx
   1de2a:	add    esi,eax
   1de2c:	inc    ecx
   1de2d:	add    edi,esi
   1de2f:	test   ebx,ebx
   1de31:	jne    0x1de26
   1de33:	mov    eax,esi
   1de35:	mov    ecx,0xfff1
   1de3a:	xor    edx,edx
   1de3c:	mov    esi,ecx
   1de3e:	div    esi
   1de40:	mov    eax,edi
   1de42:	mov    esi,edx
   1de44:	xor    edx,edx
   1de46:	div    ecx
   1de48:	mov    edi,edx
   1de4a:	mov    eax,edi
   1de4c:	shl    eax,0x10
   1de4f:	or     eax,esi
   1de51:	pop    edi
   1de52:	pop    esi
   1de53:	pop    ebx
   1de54:	pop    ebp
   1de55:	ret    0xc
   1de58:	int3   
   1de59:	int3   
   1de5a:	int3   
   1de5b:	int3   
   1de5c:	int3   
   1de5d:	int3   
   1de5e:	mov    edi,edi
   1de60:	push   ebp
   1de61:	mov    ebp,esp
   1de63:	push   ecx
   1de64:	cmp    DWORD PTR [ebp+0x8],0x0
   1de68:	push   esi
   1de69:	not    eax
   1de6b:	mov    ecx,0xff
   1de70:	je     0x1de8e
   1de72:	test   dl,0x3
   1de75:	je     0x1de8e
   1de77:	movzx  esi,BYTE PTR [edx]
   1de7a:	xor    esi,eax
   1de7c:	and    esi,ecx
   1de7e:	shr    eax,0x8
   1de81:	xor    eax,DWORD PTR [esi*4+0x749e8]
   1de88:	inc    edx
   1de89:	dec    DWORD PTR [ebp+0x8]
   1de8c:	jne    0x1de72
   1de8e:	cmp    DWORD PTR [ebp+0x8],0x20
   1de92:	push   ebx
   1de93:	push   edi
   1de94:	push   0x4
   1de96:	mov    esi,edx
   1de98:	pop    edi
   1de99:	jb     0x1e05d
   1de9f:	mov    edx,DWORD PTR [ebp+0x8]
   1dea2:	shr    edx,0x5
   1dea5:	mov    DWORD PTR [ebp-0x4],edx
   1dea8:	xor    eax,DWORD PTR [esi]
   1deaa:	add    esi,edi
   1deac:	mov    edx,eax
   1deae:	shr    edx,0x10
   1deb1:	mov    ebx,eax
   1deb3:	shr    ebx,0x8
   1deb6:	and    edx,ecx
   1deb8:	mov    edx,DWORD PTR [edx*4+0x74de8]
   1debf:	and    ebx,ecx
   1dec1:	xor    edx,DWORD PTR [ebx*4+0x751e8]
   1dec8:	mov    ebx,eax
   1deca:	shr    ebx,0x18
   1decd:	xor    edx,DWORD PTR [ebx*4+0x749e8]
   1ded4:	and    eax,ecx
   1ded6:	xor    edx,DWORD PTR [eax*4+0x755e8]
   1dedd:	xor    edx,DWORD PTR [esi]
   1dedf:	add    esi,edi
   1dee1:	mov    eax,edx
   1dee3:	shr    eax,0x10
   1dee6:	mov    ebx,edx
   1dee8:	shr    ebx,0x8
   1deeb:	and    eax,ecx
   1deed:	mov    eax,DWORD PTR [eax*4+0x74de8]
   1def4:	and    ebx,ecx
   1def6:	xor    eax,DWORD PTR [ebx*4+0x751e8]
   1defd:	mov    ebx,edx
   1deff:	shr    ebx,0x18
   1df02:	xor    eax,DWORD PTR [ebx*4+0x749e8]
   1df09:	and    edx,ecx
   1df0b:	xor    eax,DWORD PTR [edx*4+0x755e8]
   1df12:	xor    eax,DWORD PTR [esi]
   1df14:	add    esi,edi
   1df16:	mov    edx,eax
   1df18:	shr    edx,0x10
   1df1b:	mov    ebx,eax
   1df1d:	and    edx,ecx
   1df1f:	mov    edx,DWORD PTR [edx*4+0x74de8]
   1df26:	shr    ebx,0x8
   1df29:	and    ebx,ecx
   1df2b:	xor    edx,DWORD PTR [ebx*4+0x751e8]
   1df32:	mov    ebx,eax
   1df34:	shr    ebx,0x18
   1df37:	xor    edx,DWORD PTR [ebx*4+0x749e8]
   1df3e:	and    eax,ecx
   1df40:	xor    edx,DWORD PTR [eax*4+0x755e8]
   1df47:	xor    edx,DWORD PTR [esi]
   1df49:	add    esi,edi
   1df4b:	mov    eax,edx
   1df4d:	shr    eax,0x10
   1df50:	mov    ebx,edx
   1df52:	shr    ebx,0x8
   1df55:	and    eax,ecx
   1df57:	mov    eax,DWORD PTR [eax*4+0x74de8]
   1df5e:	and    ebx,ecx
   1df60:	xor    eax,DWORD PTR [ebx*4+0x751e8]
   1df67:	mov    ebx,edx
   1df69:	shr    ebx,0x18
   1df6c:	xor    eax,DWORD PTR [ebx*4+0x749e8]
   1df73:	and    edx,ecx
   1df75:	xor    eax,DWORD PTR [edx*4+0x755e8]
   1df7c:	xor    eax,DWORD PTR [esi]
   1df7e:	add    esi,edi
   1df80:	mov    edx,eax
   1df82:	shr    edx,0x10
   1df85:	mov    ebx,eax
   1df87:	and    edx,ecx
   1df89:	mov    edx,DWORD PTR [edx*4+0x74de8]
   1df90:	shr    ebx,0x8
   1df93:	and    ebx,ecx
   1df95:	xor    edx,DWORD PTR [ebx*4+0x751e8]
   1df9c:	mov    ebx,eax
   1df9e:	shr    ebx,0x18
   1dfa1:	xor    edx,DWORD PTR [ebx*4+0x749e8]
   1dfa8:	and    eax,ecx
   1dfaa:	xor    edx,DWORD PTR [eax*4+0x755e8]
   1dfb1:	xor    edx,DWORD PTR [esi]
   1dfb3:	add    esi,edi
   1dfb5:	mov    eax,edx
   1dfb7:	shr    eax,0x10
   1dfba:	and    eax,ecx
   1dfbc:	mov    ebx,edx
   1dfbe:	mov    eax,DWORD PTR [eax*4+0x74de8]
   1dfc5:	shr    ebx,0x8
   1dfc8:	and    ebx,ecx
   1dfca:	xor    eax,DWORD PTR [ebx*4+0x751e8]
   1dfd1:	mov    ebx,edx
   1dfd3:	shr    ebx,0x18
   1dfd6:	xor    eax,DWORD PTR [ebx*4+0x749e8]
   1dfdd:	and    edx,ecx
   1dfdf:	xor    eax,DWORD PTR [edx*4+0x755e8]
   1dfe6:	sub    DWORD PTR [ebp+0x8],0x20
   1dfea:	xor    eax,DWORD PTR [esi]
   1dfec:	add    esi,edi
   1dfee:	mov    edx,eax
   1dff0:	mov    ebx,eax
   1dff2:	shr    edx,0x10
   1dff5:	shr    ebx,0x8
   1dff8:	and    edx,ecx
   1dffa:	mov    edx,DWORD PTR [edx*4+0x74de8]
   1e001:	and    ebx,ecx
   1e003:	xor    edx,DWORD PTR [ebx*4+0x751e8]
   1e00a:	mov    ebx,eax
   1e00c:	shr    ebx,0x18
   1e00f:	xor    edx,DWORD PTR [ebx*4+0x749e8]
   1e016:	and    eax,ecx
   1e018:	xor    edx,DWORD PTR [eax*4+0x755e8]
   1e01f:	xor    edx,DWORD PTR [esi]
   1e021:	add    esi,edi
   1e023:	mov    eax,edx
   1e025:	shr    eax,0x10
   1e028:	and    eax,ecx
   1e02a:	mov    eax,DWORD PTR [eax*4+0x74de8]
   1e031:	mov    ebx,edx
   1e033:	shr    ebx,0x8
   1e036:	and    ebx,ecx
   1e038:	xor    eax,DWORD PTR [ebx*4+0x751e8]
   1e03f:	mov    ebx,edx
   1e041:	shr    ebx,0x18
   1e044:	xor    eax,DWORD PTR [ebx*4+0x749e8]
   1e04b:	and    edx,ecx
   1e04d:	xor    eax,DWORD PTR [edx*4+0x755e8]
   1e054:	dec    DWORD PTR [ebp-0x4]
   1e057:	jne    0x1dea8
   1e05d:	cmp    DWORD PTR [ebp+0x8],edi
   1e060:	jb     0x1e0aa
   1e062:	mov    edx,DWORD PTR [ebp+0x8]
   1e065:	shr    edx,0x2
   1e068:	mov    DWORD PTR [ebp-0x4],edx
   1e06b:	xor    eax,DWORD PTR [esi]
   1e06d:	sub    DWORD PTR [ebp+0x8],edi
   1e070:	mov    edx,eax
   1e072:	shr    edx,0x10
   1e075:	and    edx,ecx
   1e077:	mov    edx,DWORD PTR [edx*4+0x74de8]
   1e07e:	mov    ebx,eax
   1e080:	shr    ebx,0x8
   1e083:	and    ebx,ecx
   1e085:	xor    edx,DWORD PTR [ebx*4+0x751e8]
   1e08c:	mov    ebx,eax
   1e08e:	shr    ebx,0x18
   1e091:	xor    edx,DWORD PTR [ebx*4+0x749e8]
   1e098:	and    eax,ecx
   1e09a:	xor    edx,DWORD PTR [eax*4+0x755e8]
   1e0a1:	add    esi,edi
   1e0a3:	dec    DWORD PTR [ebp-0x4]
   1e0a6:	mov    eax,edx
   1e0a8:	jne    0x1e06b
   1e0aa:	cmp    DWORD PTR [ebp+0x8],0x0
   1e0ae:	pop    edi
   1e0af:	pop    ebx
   1e0b0:	je     0x1e0c9
   1e0b2:	movzx  edx,BYTE PTR [esi]
   1e0b5:	xor    edx,eax
   1e0b7:	and    edx,ecx
   1e0b9:	shr    eax,0x8
   1e0bc:	xor    eax,DWORD PTR [edx*4+0x749e8]
   1e0c3:	inc    esi
   1e0c4:	dec    DWORD PTR [ebp+0x8]
   1e0c7:	jne    0x1e0b2
   1e0c9:	not    eax
   1e0cb:	pop    esi
   1e0cc:	leave  
   1e0cd:	ret    0x4
   1e0d0:	int3   
   1e0d1:	int3   
   1e0d2:	int3   
   1e0d3:	int3   
   1e0d4:	int3   
   1e0d5:	int3   
   1e0d6:	mov    edi,edi
   1e0d8:	push   ebp
   1e0d9:	mov    ebp,esp
   1e0db:	mov    edx,DWORD PTR [ebp+0xc]
   1e0de:	test   edx,edx
   1e0e0:	jne    0x1e0e6
   1e0e2:	xor    eax,eax
   1e0e4:	jmp    0x1e0f1
   1e0e6:	push   DWORD PTR [ebp+0x10]
   1e0e9:	mov    eax,DWORD PTR [ebp+0x8]
   1e0ec:	call   0x1de5e
   1e0f1:	pop    ebp
   1e0f2:	ret    0xc
   1e0f5:	int3   
   1e0f6:	int3   
   1e0f7:	int3   
   1e0f8:	int3   
   1e0f9:	int3   
   1e0fa:	mov    edi,edi
   1e0fc:	push   ebp
   1e0fd:	mov    ebp,esp
   1e0ff:	push   0x20
   1e101:	push   0x61737973
   1e106:	push   DWORD PTR [ebp+0x8]
   1e109:	push   0x1
   1e10b:	call   DWORD PTR ds:0x1f840
   1e111:	test   eax,eax
   1e113:	jne    0x1e120
   1e115:	push   0xc000009a
   1e11a:	call   DWORD PTR ds:0x1f820
   1e120:	pop    ebp
   1e121:	ret    
   1e122:	int3   
   1e123:	int3   
   1e124:	int3   
   1e125:	int3   
   1e126:	int3   
   1e127:	int3   
   1e128:	mov    edi,edi
   1e12a:	push   ebp
   1e12b:	mov    ebp,esp
   1e12d:	cmp    DWORD PTR [ebp+0x8],0x0
   1e131:	je     0x1e13e
   1e133:	push   0x0
   1e135:	push   DWORD PTR [ebp+0x8]
   1e138:	call   DWORD PTR ds:0x1f844
   1e13e:	pop    ebp
   1e13f:	ret    
   1e140:	int3   
   1e141:	int3   
   1e142:	int3   
   1e143:	int3   
   1e144:	int3   
   1e145:	cmp    ecx,DWORD PTR ds:0x76f1c
   1e14b:	jne    0x1e150
   1e14d:	ret    0x0
   1e150:	jmp    0x1e15a
   1e155:	int3   
   1e156:	int3   
   1e157:	int3   
   1e158:	int3   
   1e159:	int3   
   1e15a:	mov    edi,edi
   1e15c:	push   ebp
   1e15d:	mov    ebp,esp
   1e15f:	push   ecx
   1e160:	mov    DWORD PTR [ebp-0x4],ecx
   1e163:	push   0x0
   1e165:	push   DWORD PTR ds:0x76f20
   1e16b:	push   DWORD PTR ds:0x76f1c
   1e171:	push   DWORD PTR [ebp-0x4]
   1e174:	push   0xf7
   1e179:	call   DWORD PTR ds:0x1f84c
   1e17f:	int3   
   1e180:	int3   
   1e181:	int3   
   1e182:	int3   
   1e183:	int3   
   1e184:	int3   
   1e185:	int3   
   1e186:	jmp    DWORD PTR ds:0x1f808
   1e18c:	int3   
   1e18d:	int3   
   1e18e:	int3   
   1e18f:	int3   
   1e190:	int3   
   1e191:	int3   
   1e192:	jmp    DWORD PTR ds:0x1f80c
   1e198:	int3   
   1e199:	int3   
   1e19a:	int3   
   1e19b:	int3   
   1e19c:	int3   
   1e19d:	int3   
   1e19e:	jmp    DWORD PTR ds:0x1f810
   1e1a4:	int3   
   1e1a5:	int3   
   1e1a6:	int3   
   1e1a7:	int3   
   1e1a8:	int3   
   1e1a9:	int3   
   1e1aa:	jmp    DWORD PTR ds:0x1f818
   1e1b0:	int3   
   1e1b1:	int3   
   1e1b2:	int3   
   1e1b3:	int3   
   1e1b4:	int3   
   1e1b5:	int3   
   1e1b6:	jmp    DWORD PTR ds:0x1f81c
   1e1bc:	int3   
   1e1bd:	int3   
   1e1be:	int3   
   1e1bf:	int3   
   1e1c0:	int3   
   1e1c1:	int3   
   1e1c2:	jmp    DWORD PTR ds:0x1f828
   1e1c8:	int3   
   1e1c9:	int3   
   1e1ca:	int3   
   1e1cb:	int3   
   1e1cc:	int3   
   1e1cd:	int3   
   1e1ce:	jmp    DWORD PTR ds:0x1f82c
   1e1d4:	int3   
   1e1d5:	int3   
   1e1d6:	int3   
   1e1d7:	int3   
   1e1d8:	int3   
   1e1d9:	int3   
   1e1da:	int3   
   1e1db:	int3   
   1e1dc:	push   0x1e240
   1e1e1:	push   DWORD PTR fs:0x0
   1e1e8:	mov    eax,DWORD PTR [esp+0x10]
   1e1ec:	mov    DWORD PTR [esp+0x10],ebp
   1e1f0:	lea    ebp,[esp+0x10]
   1e1f4:	sub    esp,eax
   1e1f6:	push   ebx
   1e1f7:	push   esi
   1e1f8:	push   edi
   1e1f9:	mov    eax,ds:0x76f1c
   1e1fe:	xor    DWORD PTR [ebp-0x4],eax
   1e201:	xor    eax,ebp
   1e203:	push   eax
   1e204:	mov    DWORD PTR [ebp-0x18],esp
   1e207:	push   DWORD PTR [ebp-0x8]
   1e20a:	mov    eax,DWORD PTR [ebp-0x4]
   1e20d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1e214:	mov    DWORD PTR [ebp-0x8],eax
   1e217:	lea    eax,[ebp-0x10]
   1e21a:	mov    fs:0x0,eax
   1e220:	ret    
   1e221:	mov    ecx,DWORD PTR [ebp-0x10]
   1e224:	mov    DWORD PTR fs:0x0,ecx
   1e22b:	pop    ecx
   1e22c:	pop    edi
   1e22d:	pop    edi
   1e22e:	pop    esi
   1e22f:	pop    ebx
   1e230:	mov    esp,ebp
   1e232:	pop    ebp
   1e233:	push   ecx
   1e234:	ret    
   1e235:	int3   
   1e236:	int3   
   1e237:	int3   
   1e238:	int3   
   1e239:	int3   
   1e23a:	int3   
   1e23b:	int3   
   1e23c:	int3   
   1e23d:	int3   
   1e23e:	int3   
   1e23f:	int3   
   1e240:	mov    edi,edi
   1e242:	push   ebp
   1e243:	mov    ebp,esp
   1e245:	sub    esp,0x14
   1e248:	push   ebx
   1e249:	mov    ebx,DWORD PTR [ebp+0xc]
   1e24c:	push   esi
   1e24d:	mov    esi,DWORD PTR [ebx+0x8]
   1e250:	xor    esi,DWORD PTR ds:0x76f1c
   1e256:	push   edi
   1e257:	mov    eax,DWORD PTR [esi]
   1e259:	mov    BYTE PTR [ebp-0x1],0x0
   1e25d:	mov    DWORD PTR [ebp-0x8],0x1
   1e264:	lea    edi,[ebx+0x10]
   1e267:	cmp    eax,0xfffffffe
   1e26a:	je     0x1e279
   1e26c:	mov    ecx,DWORD PTR [esi+0x4]
   1e26f:	add    ecx,edi
   1e271:	xor    ecx,DWORD PTR [eax+edi*1]
   1e274:	call   0x1e145
   1e279:	mov    ecx,DWORD PTR [esi+0xc]
   1e27c:	mov    eax,DWORD PTR [esi+0x8]
   1e27f:	add    ecx,edi
   1e281:	xor    ecx,DWORD PTR [eax+edi*1]
   1e284:	call   0x1e145
   1e289:	mov    eax,DWORD PTR [ebp+0x8]
   1e28c:	test   BYTE PTR [eax+0x4],0x66
   1e290:	jne    0x1e378
   1e296:	mov    ecx,DWORD PTR [ebp+0x10]
   1e299:	lea    edx,[ebp-0x14]
   1e29c:	mov    DWORD PTR [ebx-0x4],edx
   1e29f:	mov    ebx,DWORD PTR [ebx+0xc]
   1e2a2:	mov    DWORD PTR [ebp-0x14],eax
   1e2a5:	mov    DWORD PTR [ebp-0x10],ecx
   1e2a8:	cmp    ebx,0xfffffffe
   1e2ab:	je     0x1e30c
   1e2ad:	lea    ecx,[ecx+0x0]
   1e2b0:	lea    eax,[ebx+ebx*2]
   1e2b3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1e2b7:	lea    eax,[esi+eax*4+0x10]
   1e2bb:	mov    DWORD PTR [ebp-0xc],eax
   1e2be:	mov    eax,DWORD PTR [eax]
   1e2c0:	mov    DWORD PTR [ebp+0x8],eax
   1e2c3:	test   ecx,ecx
   1e2c5:	je     0x1e2db
   1e2c7:	mov    edx,edi
   1e2c9:	call   0x1e481
   1e2ce:	mov    BYTE PTR [ebp-0x1],0x1
   1e2d2:	test   eax,eax
   1e2d4:	jl     0x1e316
   1e2d6:	jg     0x1e31f
   1e2d8:	mov    eax,DWORD PTR [ebp+0x8]
   1e2db:	mov    ebx,eax
   1e2dd:	cmp    eax,0xfffffffe
   1e2e0:	jne    0x1e2b0
   1e2e2:	cmp    BYTE PTR [ebp-0x1],0x0
   1e2e6:	je     0x1e30c
   1e2e8:	mov    eax,DWORD PTR [esi]
   1e2ea:	cmp    eax,0xfffffffe
   1e2ed:	je     0x1e2fc
   1e2ef:	mov    ecx,DWORD PTR [esi+0x4]
   1e2f2:	add    ecx,edi
   1e2f4:	xor    ecx,DWORD PTR [eax+edi*1]
   1e2f7:	call   0x1e145
   1e2fc:	mov    ecx,DWORD PTR [esi+0xc]
   1e2ff:	mov    edx,DWORD PTR [esi+0x8]
   1e302:	add    ecx,edi
   1e304:	xor    ecx,DWORD PTR [edx+edi*1]
   1e307:	call   0x1e145
   1e30c:	mov    eax,DWORD PTR [ebp-0x8]
   1e30f:	pop    edi
   1e310:	pop    esi
   1e311:	pop    ebx
   1e312:	mov    esp,ebp
   1e314:	pop    ebp
   1e315:	ret    
   1e316:	mov    DWORD PTR [ebp-0x8],0x0
   1e31d:	jmp    0x1e2e8
   1e31f:	mov    ecx,DWORD PTR [ebp+0xc]
   1e322:	call   0x1e4aa
   1e327:	mov    eax,DWORD PTR [ebp+0xc]
   1e32a:	cmp    DWORD PTR [eax+0xc],ebx
   1e32d:	je     0x1e341
   1e32f:	push   0x76f1c
   1e334:	push   edi
   1e335:	mov    edx,ebx
   1e337:	mov    ecx,eax
   1e339:	call   0x1e4c4
   1e33e:	mov    eax,DWORD PTR [ebp+0xc]
   1e341:	mov    ecx,DWORD PTR [ebp+0x8]
   1e344:	mov    DWORD PTR [eax+0xc],ecx
   1e347:	mov    eax,DWORD PTR [esi]
   1e349:	cmp    eax,0xfffffffe
   1e34c:	je     0x1e35b
   1e34e:	mov    ecx,DWORD PTR [esi+0x4]
   1e351:	add    ecx,edi
   1e353:	xor    ecx,DWORD PTR [eax+edi*1]
   1e356:	call   0x1e145
   1e35b:	mov    ecx,DWORD PTR [esi+0xc]
   1e35e:	mov    edx,DWORD PTR [esi+0x8]
   1e361:	add    ecx,edi
   1e363:	xor    ecx,DWORD PTR [edx+edi*1]
   1e366:	call   0x1e145
   1e36b:	mov    eax,DWORD PTR [ebp-0xc]
   1e36e:	mov    ecx,DWORD PTR [eax+0x8]
   1e371:	mov    edx,edi
   1e373:	call   0x1e498
   1e378:	mov    edx,0xfffffffe
   1e37d:	cmp    DWORD PTR [ebx+0xc],edx
   1e380:	je     0x1e30c
   1e382:	push   0x76f1c
   1e387:	push   edi
   1e388:	mov    ecx,ebx
   1e38a:	call   0x1e4c4
   1e38f:	jmp    0x1e2e8
   1e394:	int3   
   1e395:	int3   
   1e396:	int3   
   1e397:	int3   
   1e398:	int3   
   1e399:	int3   
   1e39a:	int3   
   1e39b:	int3   
   1e39c:	push   ebx
   1e39d:	push   esi
   1e39e:	push   edi
   1e39f:	mov    edx,DWORD PTR [esp+0x10]
   1e3a3:	mov    eax,DWORD PTR [esp+0x14]
   1e3a7:	mov    ecx,DWORD PTR [esp+0x18]
   1e3ab:	push   ebp
   1e3ac:	push   edx
   1e3ad:	push   eax
   1e3ae:	push   ecx
   1e3af:	push   ecx
   1e3b0:	push   0x1e41f
   1e3b5:	push   DWORD PTR fs:0x0
   1e3bc:	mov    eax,ds:0x76f1c
   1e3c1:	xor    eax,esp
   1e3c3:	mov    DWORD PTR [esp+0x8],eax
   1e3c7:	mov    DWORD PTR fs:0x0,esp
   1e3ce:	mov    eax,DWORD PTR [esp+0x30]
   1e3d2:	mov    ebx,DWORD PTR [eax+0x8]
   1e3d5:	mov    ecx,DWORD PTR [esp+0x2c]
   1e3d9:	xor    ebx,DWORD PTR [ecx]
   1e3db:	mov    esi,DWORD PTR [eax+0xc]
   1e3de:	cmp    esi,0xfffffffe
   1e3e1:	je     0x1e411
   1e3e3:	mov    edx,DWORD PTR [esp+0x34]
   1e3e7:	cmp    edx,0xfffffffe
   1e3ea:	je     0x1e3f0
   1e3ec:	cmp    esi,edx
   1e3ee:	jbe    0x1e411
   1e3f0:	lea    esi,[esi+esi*2]
   1e3f3:	lea    ebx,[ebx+esi*4+0x10]
   1e3f7:	mov    ecx,DWORD PTR [ebx]
   1e3f9:	mov    DWORD PTR [eax+0xc],ecx
   1e3fc:	cmp    DWORD PTR [ebx+0x4],0x0
   1e400:	jne    0x1e3ce
   1e402:	mov    ecx,0x1
   1e407:	mov    eax,DWORD PTR [ebx+0x8]
   1e40a:	call   0x1e53c
   1e40f:	jmp    0x1e3ce
   1e411:	pop    DWORD PTR fs:0x0
   1e418:	add    esp,0x18
   1e41b:	pop    edi
   1e41c:	pop    esi
   1e41d:	pop    ebx
   1e41e:	ret    
   1e41f:	mov    ecx,DWORD PTR [esp+0x4]
   1e423:	test   DWORD PTR [ecx+0x4],0x6
   1e42a:	mov    eax,0x1
   1e42f:	je     0x1e464
   1e431:	mov    eax,DWORD PTR [esp+0x8]
   1e435:	mov    ecx,DWORD PTR [eax+0x8]
   1e438:	xor    ecx,eax
   1e43a:	call   0x1e145
   1e43f:	push   ebp
   1e440:	mov    ebp,DWORD PTR [eax+0x18]
   1e443:	push   DWORD PTR [eax+0xc]
   1e446:	push   DWORD PTR [eax+0x10]
   1e449:	push   DWORD PTR [eax+0x14]
   1e44c:	call   0x1e39c
   1e451:	add    esp,0xc
   1e454:	pop    ebp
   1e455:	mov    eax,DWORD PTR [esp+0x8]
   1e459:	mov    edx,DWORD PTR [esp+0x10]
   1e45d:	mov    DWORD PTR [edx],eax
   1e45f:	mov    eax,0x3
   1e464:	ret    
   1e465:	push   ebp
   1e466:	mov    ecx,DWORD PTR [esp+0x8]
   1e46a:	mov    ebp,DWORD PTR [ecx]
   1e46c:	push   DWORD PTR [ecx+0x1c]
   1e46f:	push   DWORD PTR [ecx+0x18]
   1e472:	push   DWORD PTR [ecx+0x28]
   1e475:	call   0x1e39c
   1e47a:	add    esp,0xc
   1e47d:	pop    ebp
   1e47e:	ret    0x4
   1e481:	push   ebp
   1e482:	push   esi
   1e483:	push   edi
   1e484:	push   ebx
   1e485:	mov    ebp,edx
   1e487:	xor    eax,eax
   1e489:	xor    ebx,ebx
   1e48b:	xor    edx,edx
   1e48d:	xor    esi,esi
   1e48f:	xor    edi,edi
   1e491:	call   ecx
   1e493:	pop    ebx
   1e494:	pop    edi
   1e495:	pop    esi
   1e496:	pop    ebp
   1e497:	ret    
   1e498:	mov    ebp,edx
   1e49a:	mov    esi,ecx
   1e49c:	mov    eax,ecx
   1e49e:	xor    eax,eax
   1e4a0:	xor    ebx,ebx
   1e4a2:	xor    ecx,ecx
   1e4a4:	xor    edx,edx
   1e4a6:	xor    edi,edi
   1e4a8:	jmp    esi
   1e4aa:	push   ebp
   1e4ab:	mov    ebp,esp
   1e4ad:	push   ebx
   1e4ae:	push   esi
   1e4af:	push   edi
   1e4b0:	push   0x0
   1e4b2:	push   0x0
   1e4b4:	push   0x1e4bf
   1e4b9:	push   ecx
   1e4ba:	call   0x1e544
   1e4bf:	pop    edi
   1e4c0:	pop    esi
   1e4c1:	pop    ebx
   1e4c2:	pop    ebp
   1e4c3:	ret    
   1e4c4:	push   ebp
   1e4c5:	mov    ebp,DWORD PTR [esp+0x8]
   1e4c9:	push   edx
   1e4ca:	push   ecx
   1e4cb:	push   DWORD PTR [esp+0x14]
   1e4cf:	call   0x1e39c
   1e4d4:	add    esp,0xc
   1e4d7:	pop    ebp
   1e4d8:	ret    0x8
   1e4db:	int3   
   1e4dc:	int3   
   1e4dd:	int3   
   1e4de:	int3   
   1e4df:	int3   
   1e4e0:	push   0x1e240
   1e4e5:	push   DWORD PTR fs:0x0
   1e4ec:	mov    eax,DWORD PTR [esp+0x10]
   1e4f0:	mov    DWORD PTR [esp+0x10],ebp
   1e4f4:	lea    ebp,[esp+0x10]
   1e4f8:	sub    esp,eax
   1e4fa:	push   ebx
   1e4fb:	push   esi
   1e4fc:	push   edi
   1e4fd:	mov    eax,ds:0x76f1c
   1e502:	xor    DWORD PTR [ebp-0x4],eax
   1e505:	xor    eax,ebp
   1e507:	mov    DWORD PTR [ebp-0x1c],eax
   1e50a:	push   eax
   1e50b:	mov    DWORD PTR [ebp-0x18],esp
   1e50e:	push   DWORD PTR [ebp-0x8]
   1e511:	mov    eax,DWORD PTR [ebp-0x4]
   1e514:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1e51b:	mov    DWORD PTR [ebp-0x8],eax
   1e51e:	lea    eax,[ebp-0x10]
   1e521:	mov    fs:0x0,eax
   1e527:	ret    
   1e528:	mov    ecx,DWORD PTR [ebp-0x1c]
   1e52b:	xor    ecx,ebp
   1e52d:	call   0x1e145
   1e532:	jmp    0x1e221
   1e537:	int3   
   1e538:	int3   
   1e539:	int3   
   1e53a:	int3   
   1e53b:	int3   
   1e53c:	call   eax
   1e53e:	ret    
   1e53f:	int3   
   1e540:	int3   
   1e541:	int3   
   1e542:	int3   
   1e543:	int3   
   1e544:	jmp    DWORD PTR ds:0x1f854
   1e54a:	pop    esp
   1e54b:	add    BYTE PTR [eax],al
   1e54d:	add    BYTE PTR [eax],al
   1e54f:	add    BYTE PTR [ebx+0x0],ch
   1e552:	bound  eax,QWORD PTR [eax]
   1e554:	add    BYTE PTR fs:[ecx+0x0],dh
   1e558:	add    BYTE PTR [eax],al
   1e55a:	add    BYTE PTR fs:[ebx],dh
   1e55d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1e561:	add    BYTE PTR [eax],al
   1e563:	add    BYTE PTR [esi+0x0],ch
   1e566:	je     0x1e568
   1e568:	outs   dx,BYTE PTR ds:[esi]
   1e569:	add    BYTE PTR [eax],al
   1e56b:	add    BYTE PTR [ebx+0x0],dh
   1e56e:	jns    0x1e570
   1e570:	jae    0x1e572
   1e572:	popa   
   1e573:	add    BYTE PTR [eax],al
   1e575:	add    BYTE PTR [edi+0x0],dh
   1e578:	imul   eax,DWORD PTR [eax],0x65006e
   1e57e:	add    BYTE PTR [eax],al
   1e580:	jo     0x1e582
   1e582:	arpl   WORD PTR [eax],ax
   1e584:	imul   eax,DWORD PTR [eax],0x6d0000
   1e58a:	jae    0x1e58c
   1e58c:	jb     0x1e58e
   1e58e:	add    BYTE PTR [eax],al
   1e590:	je     0x1e592
   1e592:	ins    DWORD PTR es:[edi],dx
   1e593:	add    BYTE PTR [eax+0x0],dh
   1e596:	add    BYTE PTR [eax],al
   1e598:	jne    0x1e59a
   1e59a:	jae    0x1e59c
   1e59c:	bound  eax,QWORD PTR [eax]
   1e59e:	add    BYTE PTR [eax],al
   1e5a0:	outs   dx,DWORD PTR ds:[esi]
   1e5a1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1e5a5:	add    BYTE PTR [eax],al
   1e5a7:	add    BYTE PTR [ecx+0x0],ah
   1e5aa:	imul   eax,DWORD PTR [eax],0x70
   1e5b0:	push   0x0
   1e5b2:	popa   
   1e5b3:	add    BYTE PTR [ecx+0x0],bh
   1e5b6:	add    BYTE PTR [eax],al
   1e5b8:	jbe    0x1e5ba
   1e5ba:	add    BYTE PTR gs:[edx+0x0],dh
   1e5be:	add    BYTE PTR [eax],al
   1e5c0:	jae    0x1e5c2
   1e5c2:	popa   
   1e5c3:	add    BYTE PTR [ecx+0x0],ch
   1e5c6:	add    BYTE PTR [eax],al
   1e5c8:	ins    BYTE PTR es:[edi],dx
   1e5c9:	add    BYTE PTR [ecx+0x0],ah
   1e5cc:	arpl   WORD PTR [eax],ax
   1e5ce:	add    BYTE PTR [eax],al
   1e5d0:	push   0x0
   1e5d2:	jo     0x1e5d4
   1e5d4:	add    BYTE PTR [bx+si],al
   1e5d7:	add    BYTE PTR [eax+0x0],ch
   1e5da:	imul   eax,DWORD PTR [eax],0x64
   1e5e0:	jo     0x1e5e2
   1e5e2:	outs   dx,BYTE PTR ds:[esi]
   1e5e3:	add    BYTE PTR [edi+0x0],ah
   1e5e6:	add    BYTE PTR [eax],al
   1e5e8:	add    ah,cl
   1e5ea:	dec    ebx
   1e5eb:	add    BYTE PTR [ebp+0x0],ah
   1e5ee:	push   ebx
   1e5ef:	add    BYTE PTR [ebp+0x0],ah
   1e5f2:	jb     0x1e5f4
   1e5f4:	jbe    0x1e5f6
   1e5f6:	imul   eax,DWORD PTR [eax],0x650063
   1e5fc:	inc    esp
   1e5fd:	add    BYTE PTR [ebp+0x0],ah
   1e600:	jae    0x1e602
   1e602:	arpl   WORD PTR [eax],ax
   1e604:	jb     0x1e606
   1e606:	imul   eax,DWORD PTR [eax],0x740070
   1e60c:	outs   dx,DWORD PTR ds:[esi]
   1e60d:	add    BYTE PTR [edx+0x0],dh
   1e610:	push   esp
   1e611:	add    BYTE PTR [ecx+0x0],ah
   1e614:	bound  eax,QWORD PTR [eax]
   1e616:	ins    BYTE PTR es:[edi],dx
   1e617:	add    BYTE PTR [ebp+0x0],ah
   1e61a:	add    BYTE PTR [eax],al
   1e61c:	pop    edx
   1e61d:	add    BYTE PTR [edi+0x0],dh
   1e620:	dec    edi
   1e621:	add    BYTE PTR [eax+0x0],dh
   1e624:	add    BYTE PTR gs:[esi+0x0],ch
   1e628:	push   eax
   1e629:	add    BYTE PTR [edx+0x0],dh
   1e62c:	outs   dx,DWORD PTR ds:[esi]
   1e62d:	add    BYTE PTR [ebx+0x0],ah
   1e630:	add    BYTE PTR gs:[ebx+0x0],dh
   1e634:	jae    0x1e636
   1e636:	add    BYTE PTR [eax],al
   1e638:	pop    edx
   1e639:	add    BYTE PTR [edi+0x0],dh
   1e63c:	inc    ecx
   1e63d:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e641:	add    BYTE PTR [edi+0x0],ch
   1e644:	arpl   WORD PTR [eax],ax
   1e646:	popa   
   1e647:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e64b:	add    BYTE PTR [esi+0x0],dl
   1e64e:	imul   eax,DWORD PTR [eax],0x740072
   1e654:	jne    0x1e656
   1e656:	popa   
   1e657:	add    BYTE PTR [eax+eax*1+0x4d],ch
   1e65b:	add    BYTE PTR [ebp+0x0],ah
   1e65e:	ins    DWORD PTR es:[edi],dx
   1e65f:	add    BYTE PTR [edi+0x0],ch
   1e662:	jb     0x1e664
   1e664:	jns    0x1e666
   1e666:	add    BYTE PTR [eax],al
   1e668:	push   eax
   1e669:	add    BYTE PTR [ebx+0x0],dh
   1e66c:	dec    esp
   1e66d:	add    BYTE PTR [edi+0x0],ch
   1e670:	outs   dx,DWORD PTR ds:[esi]
   1e671:	add    BYTE PTR [ebx+0x0],ch
   1e674:	jne    0x1e676
   1e676:	jo     0x1e678
   1e678:	push   eax
   1e679:	add    BYTE PTR [edx+0x0],dh
   1e67c:	outs   dx,DWORD PTR ds:[esi]
   1e67d:	add    BYTE PTR [ebx+0x0],ah
   1e680:	add    BYTE PTR gs:[ebx+0x0],dh
   1e684:	jae    0x1e686
   1e686:	inc    edx
   1e687:	add    BYTE PTR [ecx+0x0],bh
   1e68a:	push   eax
   1e68b:	add    BYTE PTR [edx+0x0],dh
   1e68e:	outs   dx,DWORD PTR ds:[esi]
   1e68f:	add    BYTE PTR [ebx+0x0],ah
   1e692:	add    BYTE PTR gs:[ebx+0x0],dh
   1e696:	jae    0x1e698
   1e698:	dec    ecx
   1e699:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e69d:	add    BYTE PTR [eax+0x0],dl
   1e6a0:	jae    0x1e6a2
   1e6a2:	push   ebx
   1e6a3:	add    BYTE PTR [ebp+0x0],ah
   1e6a6:	je     0x1e6a8
   1e6a8:	dec    esp
   1e6a9:	add    BYTE PTR [edi+0x0],ch
   1e6ac:	popa   
   1e6ad:	add    BYTE PTR [eax+eax*1+0x49],ah
   1e6b1:	add    BYTE PTR [ebp+0x0],ch
   1e6b4:	popa   
   1e6b5:	add    BYTE PTR [edi+0x0],ah
   1e6b8:	add    BYTE PTR gs:[esi+0x0],cl
   1e6bc:	outs   dx,DWORD PTR ds:[esi]
   1e6bd:	add    BYTE PTR [eax+eax*1+0x69],dh
   1e6c1:	add    BYTE PTR [esi+0x0],ah
   1e6c4:	jns    0x1e6c6
   1e6c6:	push   edx
   1e6c7:	add    BYTE PTR [edi+0x0],ch
   1e6ca:	jne    0x1e6cc
   1e6cc:	je     0x1e6ce
   1e6ce:	imul   eax,DWORD PTR [eax],0x65006e
   1e6d4:	add    BYTE PTR [eax],al
   1e6d6:	pop    edx
   1e6d7:	add    BYTE PTR [edi+0x0],dh
   1e6da:	inc    esp
   1e6db:	add    BYTE PTR [ebp+0x0],dh
   1e6de:	jo     0x1e6e0
   1e6e0:	ins    BYTE PTR es:[edi],dx
   1e6e1:	add    BYTE PTR [ecx+0x0],ch
   1e6e4:	arpl   WORD PTR [eax],ax
   1e6e6:	popa   
   1e6e7:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e6eb:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1e6ef:	add    BYTE PTR [ebx+0x0],ch
   1e6f2:	add    BYTE PTR gs:[esi+0x0],ch
   1e6f6:	add    BYTE PTR [eax],al
   1e6f8:	push   eax
   1e6f9:	add    BYTE PTR [ebx+0x0],dh
   1e6fc:	push   ebx
   1e6fd:	add    BYTE PTR [ebp+0x0],ah
   1e700:	je     0x1e702
   1e702:	inc    ebx
   1e703:	add    BYTE PTR [edx+0x0],dh
   1e706:	add    BYTE PTR gs:[ecx+0x0],ah
   1e70a:	je     0x1e70c
   1e70c:	add    BYTE PTR gs:[eax+0x0],dl
   1e710:	jb     0x1e712
   1e712:	outs   dx,DWORD PTR ds:[esi]
   1e713:	add    BYTE PTR [ebx+0x0],ah
   1e716:	add    BYTE PTR gs:[ebx+0x0],dh
   1e71a:	jae    0x1e71c
   1e71c:	dec    esi
   1e71d:	add    BYTE PTR [edi+0x0],ch
   1e720:	je     0x1e722
   1e722:	imul   eax,DWORD PTR [eax],0x790066
   1e728:	push   edx
   1e729:	add    BYTE PTR [edi+0x0],ch
   1e72c:	jne    0x1e72e
   1e72e:	je     0x1e730
   1e730:	imul   eax,DWORD PTR [eax],0x65006e
   1e736:	add    BYTE PTR [eax],al
   1e738:	pop    edx
   1e739:	add    BYTE PTR [edi+0x0],dh
   1e73c:	dec    edi
   1e73d:	add    BYTE PTR [eax+0x0],dh
   1e740:	add    BYTE PTR gs:[esi+0x0],ch
   1e744:	inc    esi
   1e745:	add    BYTE PTR [ecx+0x0],ch
   1e748:	ins    BYTE PTR es:[edi],dx
   1e749:	add    BYTE PTR [ebp+0x0],ah
   1e74c:	add    BYTE PTR [eax],al
   1e74e:	pop    edx
   1e74f:	add    BYTE PTR [edi+0x0],dh
   1e752:	push   ecx
   1e753:	add    BYTE PTR [ebp+0x0],dh
   1e756:	add    BYTE PTR gs:[edx+0x0],dh
   1e75a:	jns    0x1e75c
   1e75c:	dec    ecx
   1e75d:	add    BYTE PTR [esi+0x0],ch
   1e760:	data16 add BYTE PTR [edi+0x0],ch
   1e764:	jb     0x1e766
   1e766:	ins    DWORD PTR es:[edi],dx
   1e767:	add    BYTE PTR [ecx+0x0],ah
   1e76a:	je     0x1e76c
   1e76c:	imul   eax,DWORD PTR [eax],0x6e006f
   1e772:	push   eax
   1e773:	add    BYTE PTR [edx+0x0],dh
   1e776:	outs   dx,DWORD PTR ds:[esi]
   1e777:	add    BYTE PTR [ebx+0x0],ah
   1e77a:	add    BYTE PTR gs:[ebx+0x0],dh
   1e77e:	jae    0x1e780
   1e780:	add    BYTE PTR [eax],al
   1e782:	pop    edx
   1e783:	add    BYTE PTR [edi+0x0],dh
   1e786:	push   ecx
   1e787:	add    BYTE PTR [ebp+0x0],dh
   1e78a:	add    BYTE PTR gs:[edx+0x0],dh
   1e78e:	jns    0x1e790
   1e790:	push   ebx
   1e791:	add    BYTE PTR [ecx+0x0],bh
   1e794:	jae    0x1e796
   1e796:	je     0x1e798
   1e798:	add    BYTE PTR gs:[ebp+0x0],ch
   1e79c:	dec    ecx
   1e79d:	add    BYTE PTR [esi+0x0],ch
   1e7a0:	data16 add BYTE PTR [edi+0x0],ch
   1e7a4:	jb     0x1e7a6
   1e7a6:	ins    DWORD PTR es:[edi],dx
   1e7a7:	add    BYTE PTR [ecx+0x0],ah
   1e7aa:	je     0x1e7ac
   1e7ac:	imul   eax,DWORD PTR [eax],0x6e006f
   1e7b2:	add    BYTE PTR [eax],al
   1e7b4:	pop    edx
   1e7b5:	add    BYTE PTR [edi+0x0],dh
   1e7b8:	dec    edi
   1e7b9:	add    BYTE PTR [eax+0x0],dh
   1e7bc:	add    BYTE PTR gs:[esi+0x0],ch
   1e7c0:	dec    ebx
   1e7c1:	add    BYTE PTR [ebp+0x0],ah
   1e7c4:	jns    0x1e7c6
   1e7c6:	add    BYTE PTR [eax],al
   1e7c8:	pop    edx
   1e7c9:	add    BYTE PTR [edi+0x0],dh
   1e7cc:	inc    esp
   1e7cd:	add    BYTE PTR [ebp+0x0],ah
   1e7d0:	ins    BYTE PTR es:[edi],dx
   1e7d1:	add    BYTE PTR [ebp+0x0],ah
   1e7d4:	je     0x1e7d6
   1e7d6:	add    BYTE PTR gs:[ebx+0x0],cl
   1e7da:	add    BYTE PTR gs:[ecx+0x0],bh
   1e7de:	add    BYTE PTR [eax],al
   1e7e0:	pop    edx
   1e7e1:	add    BYTE PTR [edi+0x0],dh
   1e7e4:	push   ebx
   1e7e5:	add    BYTE PTR [ebp+0x0],ah
   1e7e8:	je     0x1e7ea
   1e7ea:	push   esi
   1e7eb:	add    BYTE PTR [ecx+0x0],ah
   1e7ee:	ins    BYTE PTR es:[edi],dx
   1e7ef:	add    BYTE PTR [ebp+0x0],dh
   1e7f2:	add    BYTE PTR gs:[ebx+0x0],cl
   1e7f6:	add    BYTE PTR gs:[ecx+0x0],bh
   1e7fa:	add    BYTE PTR [eax],al
   1e7fc:	pop    edx
   1e7fd:	add    BYTE PTR [edi+0x0],dh
   1e800:	push   ecx
   1e801:	add    BYTE PTR [ebp+0x0],dh
   1e804:	add    BYTE PTR gs:[edx+0x0],dh
   1e808:	jns    0x1e80a
   1e80a:	push   esi
   1e80b:	add    BYTE PTR [edi+0x0],ch
   1e80e:	ins    BYTE PTR es:[edi],dx
   1e80f:	add    BYTE PTR [ebp+0x0],dh
   1e812:	ins    DWORD PTR es:[edi],dx
   1e813:	add    BYTE PTR [ebp+0x0],ah
   1e816:	dec    ecx
   1e817:	add    BYTE PTR [esi+0x0],ch
   1e81a:	data16 add BYTE PTR [edi+0x0],ch
   1e81e:	jb     0x1e820
   1e820:	ins    DWORD PTR es:[edi],dx
   1e821:	add    BYTE PTR [ecx+0x0],ah
   1e824:	je     0x1e826
   1e826:	imul   eax,DWORD PTR [eax],0x6e006f
   1e82c:	inc    esi
   1e82d:	add    BYTE PTR [ecx+0x0],ch
   1e830:	ins    BYTE PTR es:[edi],dx
   1e831:	add    BYTE PTR [ebp+0x0],ah
   1e834:	add    BYTE PTR [eax],al
   1e836:	pop    edx
   1e837:	add    BYTE PTR [edi+0x0],dh
   1e83a:	inc    ebx
   1e83b:	add    BYTE PTR [edx+0x0],dh
   1e83e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e842:	je     0x1e844
   1e844:	add    BYTE PTR gs:[esi+0x0],al
   1e848:	imul   eax,DWORD PTR [eax],0x65006c
   1e84e:	add    BYTE PTR [eax],al
   1e850:	push   edx
   1e851:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e855:	add    BYTE PTR [ecx+0x0],cl
   1e858:	ins    DWORD PTR es:[edi],dx
   1e859:	add    BYTE PTR [ecx+0x0],ah
   1e85c:	add    BYTE PTR [di+0x0],ah
   1e860:	dec    esi
   1e861:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e865:	add    BYTE PTR [ebp+0x0],ah
   1e868:	popa   
   1e869:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e86d:	add    BYTE PTR [edx+0x0],dh
   1e870:	add    BYTE PTR [eax],al
   1e872:	push   edx
   1e873:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e877:	add    BYTE PTR [ecx+0x0],cl
   1e87a:	ins    DWORD PTR es:[edi],dx
   1e87b:	add    BYTE PTR [ecx+0x0],ah
   1e87e:	add    BYTE PTR [di+0x0],ah
   1e882:	inc    esp
   1e883:	add    BYTE PTR [ecx+0x0],ch
   1e886:	jb     0x1e888
   1e888:	add    BYTE PTR gs:[ebx+0x0],ah
   1e88c:	je     0x1e88e
   1e88e:	outs   dx,DWORD PTR ds:[esi]
   1e88f:	add    BYTE PTR [edx+0x0],dh
   1e892:	jns    0x1e894
   1e894:	inc    ebp
   1e895:	add    BYTE PTR [esi+0x0],ch
   1e898:	je     0x1e89a
   1e89a:	jb     0x1e89c
   1e89c:	jns    0x1e89e
   1e89e:	push   esp
   1e89f:	add    BYTE PTR [edi+0x0],ch
   1e8a2:	inc    esp
   1e8a3:	add    BYTE PTR [ecx+0x0],ah
   1e8a6:	je     0x1e8a8
   1e8a8:	popa   
   1e8a9:	add    BYTE PTR [eax],al
   1e8ab:	add    BYTE PTR [edx+0x0],bl
   1e8ae:	ja     0x1e8b0
   1e8b0:	dec    edi
   1e8b1:	add    BYTE PTR [eax+0x0],dh
   1e8b4:	add    BYTE PTR gs:[esi+0x0],ch
   1e8b8:	push   eax
   1e8b9:	add    BYTE PTR [edx+0x0],dh
   1e8bc:	outs   dx,DWORD PTR ds:[esi]
   1e8bd:	add    BYTE PTR [ebx+0x0],ah
   1e8c0:	add    BYTE PTR gs:[ebx+0x0],dh
   1e8c4:	jae    0x1e8c6
   1e8c6:	push   esp
   1e8c7:	add    BYTE PTR [edi+0x0],ch
   1e8ca:	imul   eax,DWORD PTR [eax],0x65
   1e8cd:	add    BYTE PTR [esi+0x0],ch
   1e8d0:	add    BYTE PTR [eax],al
   1e8d2:	pop    edx
   1e8d3:	add    BYTE PTR [edi+0x0],dh
   1e8d6:	push   ebx
   1e8d7:	add    BYTE PTR [ebp+0x0],ah
   1e8da:	je     0x1e8dc
   1e8dc:	dec    ecx
   1e8dd:	add    BYTE PTR [esi+0x0],ch
   1e8e0:	data16 add BYTE PTR [edi+0x0],ch
   1e8e4:	jb     0x1e8e6
   1e8e6:	ins    DWORD PTR es:[edi],dx
   1e8e7:	add    BYTE PTR [ecx+0x0],ah
   1e8ea:	je     0x1e8ec
   1e8ec:	imul   eax,DWORD PTR [eax],0x6e006f
   1e8f2:	push   eax
   1e8f3:	add    BYTE PTR [edx+0x0],dh
   1e8f6:	outs   dx,DWORD PTR ds:[esi]
   1e8f7:	add    BYTE PTR [ebx+0x0],ah
   1e8fa:	add    BYTE PTR gs:[ebx+0x0],dh
   1e8fe:	jae    0x1e900
   1e900:	add    BYTE PTR [eax],al
   1e902:	pop    edx
   1e903:	add    BYTE PTR [edi+0x0],dh
   1e906:	push   ecx
   1e907:	add    BYTE PTR [ebp+0x0],dh
   1e90a:	add    BYTE PTR gs:[edx+0x0],dh
   1e90e:	jns    0x1e910
   1e910:	dec    ecx
   1e911:	add    BYTE PTR [esi+0x0],ch
   1e914:	data16 add BYTE PTR [edi+0x0],ch
   1e918:	jb     0x1e91a
   1e91a:	ins    DWORD PTR es:[edi],dx
   1e91b:	add    BYTE PTR [ecx+0x0],ah
   1e91e:	je     0x1e920
   1e920:	imul   eax,DWORD PTR [eax],0x6e006f
   1e926:	push   esp
   1e927:	add    BYTE PTR [eax+0x0],ch
   1e92a:	jb     0x1e92c
   1e92c:	add    BYTE PTR gs:[ecx+0x0],ah
   1e930:	add    BYTE PTR fs:[eax],al
   1e933:	add    BYTE PTR [edx+0x0],bl
   1e936:	ja     0x1e938
   1e938:	inc    ebx
   1e939:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1e93d:	add    BYTE PTR [ebx+0x0],dh
   1e940:	add    BYTE PTR gs:[eax],al
   1e943:	add    BYTE PTR [edx+0x0],dl
   1e946:	je     0x1e948
   1e948:	ins    BYTE PTR es:[edi],dx
   1e949:	add    BYTE PTR [ecx+0x0],cl
   1e94c:	outs   dx,BYTE PTR ds:[esi]
   1e94d:	add    BYTE PTR [ecx+0x0],ch
   1e950:	je     0x1e952
   1e952:	push   ebp
   1e953:	add    BYTE PTR [esi+0x0],ch
   1e956:	imul   eax,DWORD PTR [eax],0x6f0063
   1e95c:	add    BYTE PTR fs:[ebp+0x0],ah
   1e960:	push   ebx
   1e961:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e965:	add    BYTE PTR [ecx+0x0],ch
   1e968:	outs   dx,BYTE PTR ds:[esi]
   1e969:	add    BYTE PTR [edi+0x0],ah
   1e96c:	add    BYTE PTR [eax],al
   1e96e:	inc    ebp
   1e96f:	add    BYTE PTR [eax+0x0],bh
   1e972:	push   edx
   1e973:	add    BYTE PTR [ecx+0x0],ah
   1e976:	imul   eax,DWORD PTR [eax],0x650073
   1e97c:	push   ebx
   1e97d:	add    BYTE PTR [eax+eax*1+0x61],dh
   1e981:	add    BYTE PTR [eax+eax*1+0x75],dh
   1e985:	add    BYTE PTR [ebx+0x0],dh
   1e988:	add    BYTE PTR [eax],al
   1e98a:	inc    ebp
   1e98b:	add    BYTE PTR [eax+0x0],bh
   1e98e:	inc    ecx
   1e98f:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e993:	add    BYTE PTR [edi+0x0],ch
   1e996:	arpl   WORD PTR [eax],ax
   1e998:	popa   
   1e999:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e99d:	add    BYTE PTR [eax+0x0],dl
   1e9a0:	outs   dx,DWORD PTR ds:[esi]
   1e9a1:	add    BYTE PTR [edi+0x0],ch
   1e9a4:	ins    BYTE PTR es:[edi],dx
   1e9a5:	add    BYTE PTR [edi+0x0],dl
   1e9a8:	imul   eax,DWORD PTR [eax],0x680074
   1e9ae:	push   esp
   1e9af:	add    BYTE PTR [ecx+0x0],ah
   1e9b2:	add    BYTE PTR [bx+si+0x0],dl
   1e9b6:	jb     0x1e9b8
   1e9b8:	imul   eax,DWORD PTR [eax],0x72006f
   1e9be:	imul   eax,DWORD PTR [eax],0x790074
   1e9c4:	add    BYTE PTR [eax],al
   1e9c6:	inc    ebp
   1e9c7:	add    BYTE PTR [eax+0x0],bh
   1e9ca:	inc    esi
   1e9cb:	add    BYTE PTR [edx+0x0],dh
   1e9ce:	add    BYTE PTR gs:[ebp+0x0],ah
   1e9d2:	push   eax
   1e9d3:	add    BYTE PTR [edi+0x0],ch
   1e9d6:	outs   dx,DWORD PTR ds:[esi]
   1e9d7:	add    BYTE PTR [eax+eax*1+0x57],ch
   1e9db:	add    BYTE PTR [ecx+0x0],ch
   1e9de:	je     0x1e9e0
   1e9e0:	push   0x61005400
   1e9e5:	add    BYTE PTR [edi+0x0],ah
   1e9e8:	add    BYTE PTR [eax],al
   1e9ea:	push   edx
   1e9eb:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e9ef:	add    BYTE PTR [ebx+0x0],al
   1e9f2:	outs   dx,DWORD PTR ds:[esi]
   1e9f3:	add    BYTE PTR [eax+0x0],dh
   1e9f6:	jns    0x1e9f8
   1e9f8:	push   ebp
   1e9f9:	add    BYTE PTR [esi+0x0],ch
   1e9fc:	imul   eax,DWORD PTR [eax],0x6f0063
   1ea02:	add    BYTE PTR fs:[ebp+0x0],ah
   1ea06:	push   ebx
   1ea07:	add    BYTE PTR [eax+eax*1+0x72],dh
   1ea0b:	add    BYTE PTR [ecx+0x0],ch
   1ea0e:	outs   dx,BYTE PTR ds:[esi]
   1ea0f:	add    BYTE PTR [edi+0x0],ah
   1ea12:	add    BYTE PTR [eax],al
   1ea14:	inc    ebp
   1ea15:	add    BYTE PTR [eax+0x0],bh
   1ea18:	inc    ecx
   1ea19:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1ea1d:	add    BYTE PTR [edi+0x0],ch
   1ea20:	arpl   WORD PTR [eax],ax
   1ea22:	popa   
   1ea23:	add    BYTE PTR [eax+eax*1+0x65],dh
   1ea27:	add    BYTE PTR [eax+0x0],dl
   1ea2a:	outs   dx,DWORD PTR ds:[esi]
   1ea2b:	add    BYTE PTR [edi+0x0],ch
   1ea2e:	ins    BYTE PTR es:[edi],dx
   1ea2f:	add    BYTE PTR [edi+0x0],dl
   1ea32:	imul   eax,DWORD PTR [eax],0x680074
   1ea38:	push   esp
   1ea39:	add    BYTE PTR [ecx+0x0],ah
   1ea3c:	add    BYTE PTR [bx+si],al
   1ea3f:	add    BYTE PTR [edx+0x0],dl
   1ea42:	je     0x1ea44
   1ea44:	ins    BYTE PTR es:[edi],dx
   1ea45:	add    BYTE PTR [ecx+0x0],al
   1ea48:	jae    0x1ea4a
   1ea4a:	jae    0x1ea4c
   1ea4c:	add    BYTE PTR gs:[edx+0x0],dh
   1ea50:	je     0x1ea52
   1ea52:	add    BYTE PTR [eax],al
   1ea54:	push   edx
   1ea55:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1ea59:	add    BYTE PTR [ebx+0x0],al
   1ea5c:	outs   dx,DWORD PTR ds:[esi]
   1ea5d:	add    BYTE PTR [ebp+0x0],ch
   1ea60:	jo     0x1ea62
   1ea62:	popa   
   1ea63:	add    BYTE PTR [edx+0x0],dh
   1ea66:	add    BYTE PTR gs:[ebp+0x0],dl
   1ea6a:	outs   dx,BYTE PTR ds:[esi]
   1ea6b:	add    BYTE PTR [ecx+0x0],ch
   1ea6e:	arpl   WORD PTR [eax],ax
   1ea70:	outs   dx,DWORD PTR ds:[esi]
   1ea71:	add    BYTE PTR [eax+eax*1+0x65],ah
   1ea75:	add    BYTE PTR [ebx+0x0],dl
   1ea78:	je     0x1ea7a
   1ea7a:	jb     0x1ea7c
   1ea7c:	imul   eax,DWORD PTR [eax],0x67006e
   1ea82:	add    BYTE PTR [eax],al
   1ea84:	pop    edx
   1ea85:	add    BYTE PTR [edi+0x0],dh
   1ea88:	inc    ebp
   1ea89:	add    BYTE PTR [esi+0x0],ch
   1ea8c:	jne    0x1ea8e
   1ea8e:	ins    DWORD PTR es:[edi],dx
   1ea8f:	add    BYTE PTR [ebp+0x0],ah
   1ea92:	jb     0x1ea94
   1ea94:	popa   
   1ea95:	add    BYTE PTR [eax+eax*1+0x65],dh
   1ea99:	add    BYTE PTR [ebx+0x0],cl
   1ea9c:	add    BYTE PTR gs:[ecx+0x0],bh
   1eaa0:	add    BYTE PTR [eax],al
   1eaa2:	pop    edx
   1eaa3:	add    BYTE PTR [edi+0x0],dh
   1eaa6:	dec    esp
   1eaa7:	add    BYTE PTR [edi+0x0],ch
   1eaaa:	popa   
   1eaab:	add    BYTE PTR [eax+eax*1+0x44],ah
   1eaaf:	add    BYTE PTR [edx+0x0],dh
   1eab2:	imul   eax,DWORD PTR [eax],0x650076
   1eab8:	jb     0x1eaba
   1eaba:	add    BYTE PTR [eax],al
   1eabc:	pop    edx
   1eabd:	add    BYTE PTR [edi+0x0],dh
   1eac0:	inc    ebx
   1eac1:	add    BYTE PTR [edx+0x0],dh
   1eac4:	add    BYTE PTR gs:[ecx+0x0],ah
   1eac8:	je     0x1eaca
   1eaca:	add    BYTE PTR gs:[ebx+0x0],cl
   1eace:	add    BYTE PTR gs:[ecx+0x0],bh
   1ead2:	add    BYTE PTR [eax],al
   1ead4:	dec    ecx
   1ead5:	add    BYTE PTR [edi+0x0],ch
   1ead8:	inc    esp
   1ead9:	add    BYTE PTR [ebp+0x0],ah
   1eadc:	ins    BYTE PTR es:[edi],dx
   1eadd:	add    BYTE PTR [ebp+0x0],ah
   1eae0:	je     0x1eae2
   1eae2:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1eae7:	add    BYTE PTR [esi+0x0],dh
   1eaea:	imul   eax,DWORD PTR [eax],0x650063
   1eaf0:	add    BYTE PTR [eax],al
   1eaf2:	dec    ebx
   1eaf3:	add    BYTE PTR [ebp+0x0],ah
   1eaf6:	inc    esp
   1eaf7:	add    BYTE PTR [ebp+0x0],ah
   1eafa:	je     0x1eafc
   1eafc:	popa   
   1eafd:	add    BYTE PTR [ebx+0x0],ah
   1eb00:	push   0x72005000
   1eb05:	add    BYTE PTR [edi+0x0],ch
   1eb08:	arpl   WORD PTR [eax],ax
   1eb0a:	add    BYTE PTR gs:[ebx+0x0],dh
   1eb0e:	jae    0x1eb10
   1eb10:	add    BYTE PTR [eax],al
   1eb12:	dec    ebx
   1eb13:	add    BYTE PTR [ebp+0x0],ah
   1eb16:	inc    ecx
   1eb17:	add    BYTE PTR [eax+eax*1+0x74],dh
   1eb1b:	add    BYTE PTR [ecx+0x0],ah
   1eb1e:	arpl   WORD PTR [eax],ax
   1eb20:	push   0x72005000
   1eb25:	add    BYTE PTR [edi+0x0],ch
   1eb28:	arpl   WORD PTR [eax],ax
   1eb2a:	add    BYTE PTR gs:[ebx+0x0],dh
   1eb2e:	jae    0x1eb30
   1eb30:	add    BYTE PTR [eax],al
   1eb32:	pop    edx
   1eb33:	add    BYTE PTR [edi+0x0],dh
   1eb36:	push   ecx
   1eb37:	add    BYTE PTR [ebp+0x0],dh
   1eb3a:	add    BYTE PTR gs:[edx+0x0],dh
   1eb3e:	jns    0x1eb40
   1eb40:	push   esi
   1eb41:	add    BYTE PTR [ecx+0x0],ah
   1eb44:	ins    BYTE PTR es:[edi],dx
   1eb45:	add    BYTE PTR [ebp+0x0],dh
   1eb48:	add    BYTE PTR gs:[ebx+0x0],cl
   1eb4c:	add    BYTE PTR gs:[ecx+0x0],bh
   1eb50:	add    BYTE PTR [eax],al
   1eb52:	pop    edx
   1eb53:	add    BYTE PTR [edi+0x0],dh
   1eb56:	push   edx
   1eb57:	add    BYTE PTR [ebp+0x0],ah
   1eb5a:	popa   
   1eb5b:	add    BYTE PTR [eax+eax*1+0x46],ah
   1eb5f:	add    BYTE PTR [ecx+0x0],ch
   1eb62:	ins    BYTE PTR es:[edi],dx
   1eb63:	add    BYTE PTR [ebp+0x0],ah
   1eb66:	add    BYTE PTR [eax],al
   1eb68:	pop    edx
   1eb69:	add    BYTE PTR [edi+0x0],dh
   1eb6c:	push   ebx
   1eb6d:	add    BYTE PTR [ebp+0x0],ah
   1eb70:	je     0x1eb72
   1eb72:	dec    ecx
   1eb73:	add    BYTE PTR [esi+0x0],ch
   1eb76:	data16 add BYTE PTR [edi+0x0],ch
   1eb7a:	jb     0x1eb7c
   1eb7c:	ins    DWORD PTR es:[edi],dx
   1eb7d:	add    BYTE PTR [ecx+0x0],ah
   1eb80:	je     0x1eb82
   1eb82:	imul   eax,DWORD PTR [eax],0x6e006f
   1eb88:	inc    esi
   1eb89:	add    BYTE PTR [ecx+0x0],ch
   1eb8c:	ins    BYTE PTR es:[edi],dx
   1eb8d:	add    BYTE PTR [ebp+0x0],ah
   1eb90:	add    BYTE PTR [eax],al
   1eb92:	pop    edx
   1eb93:	add    BYTE PTR [edi+0x0],dh
   1eb96:	push   edi
   1eb97:	add    BYTE PTR [edx+0x0],dh
   1eb9a:	imul   eax,DWORD PTR [eax],0x650074
   1eba0:	inc    esi
   1eba1:	add    BYTE PTR [ecx+0x0],ch
   1eba4:	ins    BYTE PTR es:[edi],dx
   1eba5:	add    BYTE PTR [ebp+0x0],ah
   1eba8:	add    BYTE PTR [eax],al
   1ebaa:	pop    edx
   1ebab:	add    BYTE PTR [edi+0x0],dh
   1ebae:	push   ecx
   1ebaf:	add    BYTE PTR [ebp+0x0],dh
   1ebb2:	add    BYTE PTR gs:[edx+0x0],dh
   1ebb6:	jns    0x1ebb8
   1ebb8:	dec    ecx
   1ebb9:	add    BYTE PTR [esi+0x0],ch
   1ebbc:	data16 add BYTE PTR [edi+0x0],ch
   1ebc0:	jb     0x1ebc2
   1ebc2:	ins    DWORD PTR es:[edi],dx
   1ebc3:	add    BYTE PTR [ecx+0x0],ah
   1ebc6:	je     0x1ebc8
   1ebc8:	imul   eax,DWORD PTR [eax],0x6e006f
   1ebce:	inc    esi
   1ebcf:	add    BYTE PTR [ecx+0x0],ch
   1ebd2:	ins    BYTE PTR es:[edi],dx
   1ebd3:	add    BYTE PTR [ebp+0x0],ah
   1ebd6:	add    BYTE PTR [eax],al
   1ebd8:	dec    ecx
   1ebd9:	add    BYTE PTR [edi+0x0],ch
   1ebdc:	inc    ebx
   1ebdd:	add    BYTE PTR [edx+0x0],dh
   1ebe0:	add    BYTE PTR gs:[ecx+0x0],ah
   1ebe4:	je     0x1ebe6
   1ebe6:	add    BYTE PTR gs:[ebx+0x0],dl
   1ebea:	jns    0x1ebec
   1ebec:	ins    DWORD PTR es:[edi],dx
   1ebed:	add    BYTE PTR [edx+0x0],ah
   1ebf0:	outs   dx,DWORD PTR ds:[esi]
   1ebf1:	add    BYTE PTR [eax+eax*1+0x69],ch
   1ebf5:	add    BYTE PTR [ebx+0x0],ah
   1ebf8:	dec    esp
   1ebf9:	add    BYTE PTR [ecx+0x0],ch
   1ebfc:	outs   dx,BYTE PTR ds:[esi]
   1ebfd:	add    BYTE PTR [ebx+0x0],ch
   1ec00:	add    BYTE PTR [eax],al
   1ec02:	dec    ecx
   1ec03:	add    BYTE PTR [edi+0x0],ch
   1ec06:	inc    ebx
   1ec07:	add    BYTE PTR [edx+0x0],dh
   1ec0a:	add    BYTE PTR gs:[ecx+0x0],ah
   1ec0e:	je     0x1ec10
   1ec10:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1ec15:	add    BYTE PTR [esi+0x0],dh
   1ec18:	imul   eax,DWORD PTR [eax],0x650063
   1ec1e:	add    BYTE PTR [eax],al
   1ec20:	push   ebx
   1ec21:	add    BYTE PTR [ebp+0x0],ah
   1ec24:	inc    ebx
   1ec25:	add    BYTE PTR [edx+0x0],dh
   1ec28:	add    BYTE PTR gs:[ecx+0x0],ah
   1ec2c:	je     0x1ec2e
   1ec2e:	add    BYTE PTR gs:[ebx+0x0],al
   1ec32:	ins    BYTE PTR es:[edi],dx
   1ec33:	add    BYTE PTR [ecx+0x0],ch
   1ec36:	add    BYTE PTR gs:[esi+0x0],ch
   1ec3a:	je     0x1ec3c
   1ec3c:	push   ebx
   1ec3d:	add    BYTE PTR [ebp+0x0],ah
   1ec40:	arpl   WORD PTR [eax],ax
   1ec42:	jne    0x1ec44
   1ec44:	jb     0x1ec46
   1ec46:	imul   eax,DWORD PTR [eax],0x790074
   1ec4c:	add    BYTE PTR [eax],al
   1ec4e:	dec    ebx
   1ec4f:	add    BYTE PTR [ebp+0x0],ah
   1ec52:	inc    edi
   1ec53:	add    BYTE PTR [ebp+0x0],ah
   1ec56:	je     0x1ec58
   1ec58:	inc    ebx
   1ec59:	add    BYTE PTR [ebp+0x0],dh
   1ec5c:	jb     0x1ec5e
   1ec5e:	jb     0x1ec60
   1ec60:	add    BYTE PTR gs:[esi+0x0],ch
   1ec64:	je     0x1ec66
   1ec66:	push   esp
   1ec67:	add    BYTE PTR [eax+0x0],ch
   1ec6a:	jb     0x1ec6c
   1ec6c:	add    BYTE PTR gs:[ecx+0x0],ah
   1ec70:	add    BYTE PTR fs:[eax],al
   1ec73:	add    BYTE PTR [ebx+0x0],cl
   1ec76:	add    BYTE PTR gs:[ecx+0x0],dl
   1ec7a:	jne    0x1ec7c
   1ec7c:	add    BYTE PTR gs:[edx+0x0],dh
   1ec80:	jns    0x1ec82
   1ec82:	push   ebx
   1ec83:	add    BYTE PTR [ecx+0x0],bh
   1ec86:	jae    0x1ec88
   1ec88:	je     0x1ec8a
   1ec8a:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec8e:	push   esp
   1ec8f:	add    BYTE PTR [ecx+0x0],ch
   1ec92:	ins    DWORD PTR es:[edi],dx
   1ec93:	add    BYTE PTR [ebp+0x0],ah
   1ec96:	add    BYTE PTR [eax],al
   1ec98:	pop    edx
   1ec99:	add    BYTE PTR [edi+0x0],dh
   1ec9c:	dec    ebp
   1ec9d:	add    BYTE PTR [ecx+0x0],ah
   1eca0:	jo     0x1eca2
   1eca2:	push   esi
   1eca3:	add    BYTE PTR [ecx+0x0],ch
   1eca6:	add    BYTE PTR gs:[edi+0x0],dh
   1ecaa:	dec    edi
   1ecab:	add    BYTE PTR [esi+0x0],ah
   1ecae:	push   ebx
   1ecaf:	add    BYTE PTR [ebp+0x0],ah
   1ecb2:	arpl   WORD PTR [eax],ax
   1ecb4:	je     0x1ecb6
   1ecb6:	imul   eax,DWORD PTR [eax],0x6e006f
   1ecbc:	add    BYTE PTR [eax],al
   1ecbe:	pop    edx
   1ecbf:	add    BYTE PTR [edi+0x0],dh
   1ecc2:	inc    ebx
   1ecc3:	add    BYTE PTR [edx+0x0],dh
   1ecc6:	add    BYTE PTR gs:[ecx+0x0],ah
   1ecca:	je     0x1eccc
   1eccc:	add    BYTE PTR gs:[ebx+0x0],dl
   1ecd0:	add    BYTE PTR gs:[ebx+0x0],ah
   1ecd4:	je     0x1ecd6
   1ecd6:	imul   eax,DWORD PTR [eax],0x6e006f
   1ecdc:	add    BYTE PTR [eax],al
   1ecde:	pop    edx
   1ecdf:	add    BYTE PTR [edi+0x0],dh
   1ece2:	push   ebp
   1ece3:	add    BYTE PTR [esi+0x0],ch
   1ece6:	ins    DWORD PTR es:[edi],dx
   1ece7:	add    BYTE PTR [ecx+0x0],ah
   1ecea:	jo     0x1ecec
   1ecec:	push   esi
   1eced:	add    BYTE PTR [ecx+0x0],ch
   1ecf0:	add    BYTE PTR gs:[edi+0x0],dh
   1ecf4:	dec    edi
   1ecf5:	add    BYTE PTR [esi+0x0],ah
   1ecf8:	push   ebx
   1ecf9:	add    BYTE PTR [ebp+0x0],ah
   1ecfc:	arpl   WORD PTR [eax],ax
   1ecfe:	je     0x1ed00
   1ed00:	imul   eax,DWORD PTR [eax],0x6e006f
   1ed06:	add    BYTE PTR [eax],al
   1ed08:	dec    ebx
   1ed09:	add    BYTE PTR [ebp+0x0],ah
   1ed0c:	dec    ecx
   1ed0d:	add    BYTE PTR [esi+0x0],ch
   1ed10:	imul   eax,DWORD PTR [eax],0x690074
   1ed16:	popa   
   1ed17:	add    BYTE PTR [eax+eax*1+0x69],ch
   1ed1b:	add    BYTE PTR [edx+0x0],bh
   1ed1e:	add    BYTE PTR gs:[ebp+0x0],cl
   1ed22:	jne    0x1ed24
   1ed24:	je     0x1ed26
   1ed26:	add    BYTE PTR gs:[eax+0x0],bh
   1ed2a:	add    BYTE PTR [eax],al
   1ed2c:	dec    ebx
   1ed2d:	add    BYTE PTR [ebp+0x0],ah
   1ed30:	push   edi
   1ed31:	add    BYTE PTR [ecx+0x0],ah
   1ed34:	imul   eax,DWORD PTR [eax],0x460074
   1ed3a:	outs   dx,DWORD PTR ds:[esi]
   1ed3b:	add    BYTE PTR [edx+0x0],dh
   1ed3e:	push   ebx
   1ed3f:	add    BYTE PTR [ecx+0x0],ch
   1ed42:	outs   dx,BYTE PTR ds:[esi]
   1ed43:	add    BYTE PTR [edi+0x0],ah
   1ed46:	ins    BYTE PTR es:[edi],dx
   1ed47:	add    BYTE PTR [ebp+0x0],ah
   1ed4a:	dec    edi
   1ed4b:	add    BYTE PTR [edx+0x0],ah
   1ed4e:	push   0x0
   1ed50:	add    BYTE PTR gs:[ebx+0x0],ah
   1ed54:	je     0x1ed56
   1ed56:	add    BYTE PTR [eax],al
   1ed58:	dec    ebx
   1ed59:	add    BYTE PTR [ebp+0x0],ah
   1ed5c:	push   edx
   1ed5d:	add    BYTE PTR [ebp+0x0],ah
   1ed60:	ins    BYTE PTR es:[edi],dx
   1ed61:	add    BYTE PTR [ebp+0x0],ah
   1ed64:	popa   
   1ed65:	add    BYTE PTR [ebx+0x0],dh
   1ed68:	add    BYTE PTR gs:[ebp+0x0],cl
   1ed6c:	jne    0x1ed6e
   1ed6e:	je     0x1ed70
   1ed70:	add    BYTE PTR gs:[eax+0x0],bh
   1ed74:	add    BYTE PTR [eax],al
   1ed76:	push   esp
   1ed77:	add    BYTE PTR ds:0x15000900,ch
   1ed7d:	add    BYTE PTR [eax],al
   1ed7f:	add    BYTE PTR [edi-0x79cbbde1],bl
   1ed85:	retf   0xf65c
   1ed88:	dec    DWORD PTR [ebx]
   1ed8a:	shl    DWORD PTR [esi+edi*4+0x64],1
   1ed8e:	fnsave [eax-0x3f48e6f7]
   1ed94:	sub    al,0x7c
   1ed96:	jmp    0xa6035e30
   1ed9b:	jno    0x1edae
   1ed9d:	call   FWORD PTR [esi+0x4d0ab178]
   1eda3:	fst    QWORD PTR [eax]
   1eda5:	cmp    ecx,edi
   1eda7:	xor    dl,0x90
   1edaa:	add    DWORD PTR [edi],edi
   1edac:	xor    al,0x8e
   1edae:	lea    esi,[ebp-0x33]
   1edb1:	or     BYTE PTR [ebp+0x76],ah
   1edb4:	xchg   edi,eax
   1edb5:	or     bh,BYTE PTR [edi]
   1edb7:	xchg   edx,eax
   1edb8:	xchg   esi,eax
   1edb9:	call   0x53:0x87d7b8
   1edc0:	daa    
   1edc1:	add    BYTE PTR ds:0x6001300,dl
   1edc7:	add    BYTE PTR [eax],al
   1edc9:	add    BYTE PTR [ebp+0x4e],cl
   1edcc:	adc    BYTE PTR [edi],al
   1edce:	fisubr WORD PTR [ebp+0x70]
   1edd1:	retf   0x31e0
   1edd4:	sar    ah,cl
   1edd6:	int    0xe1
   1edd8:	jmp    0xe54bb24b
   1eddd:	mov    al,0x4d
   1eddf:	test   DWORD PTR [ecx],ebx
   1ede1:	xor    dh,BYTE PTR fs:[esi]
   1ede4:	out    dx,eax
   1ede5:	retf   0xd78b
   1ede8:	and    dl,al
   1edea:	aad    0xf2
   1edec:	(bad)  
   1eded:	into   
   1edee:	jmp    0x4900:0x63e8eb80
   1edf5:	add    BYTE PTR [eax+eax*1],ah
   1edf8:	or     al,0x0
   1edfa:	push   es
   1edfb:	add    BYTE PTR [edx],al
   1edfd:	add    BYTE PTR ds:0x15003100,dh
   1ee03:	add    BYTE PTR [eax+eax*1],bl
   1ee06:	add    BYTE PTR [eax],al
   1ee08:	add    DWORD PTR [ecx-0x46aa338],0x276cb43a
   1ee12:	ror    cl,1
   1ee14:	adc    eax,0xb4a5a1f9
   1ee19:	add    eax,0xa0fafb71
   1ee1e:	nop
   1ee1f:	pop    ebp
   1ee20:	adc    ah,BYTE PTR [ebx]
   1ee22:	jmp    0x1ee36
   1ee24:	js     0x1ee45
   1ee26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ee27:	mov    cx,0xa379
   1ee2b:	mov    edx,0x2ecc00
   1ee30:	dec    edx
   1ee31:	add    BYTE PTR [eax],cl
   1ee33:	add    BYTE PTR [eax],al
   1ee35:	add    BYTE PTR [eax],al
   1ee37:	add    BYTE PTR [ecx+0x29],bh
   1ee3a:	mov    ebx,0xcdf59d4e
   1ee3f:	int3   
   1ee40:	cdq    
   1ee41:	sbb    ebx,ecx
   1ee43:	fcmovne st,st(1)
   1ee45:	inc    ebp
   1ee46:	aad    0x59
   1ee48:	fcomp  st(5)
   1ee4a:	imul   BYTE PTR [esi-0x2ac810e1]
   1ee50:	xor    DWORD PTR [edi],ebx
   1ee52:	pop    ecx
   1ee53:	scas   eax,DWORD PTR es:[edi]
   1ee54:	sbb    al,0x2
   1ee56:	pop    eax
   1ee57:	add    esp,DWORD PTR [ecx+edx*4+0x45]
   1ee5b:	stos   DWORD PTR es:[edi],eax
   1ee5c:	pop    edx
   1ee5d:	dec    ecx
   1ee5e:	mov    DWORD PTR [ebx],eax
   1ee60:	scas   al,BYTE PTR es:[edi]
   1ee61:	inc    eax
   1ee62:	loopne 0x1ee18
   1ee64:	jb     0x1eeab
   1ee66:	loop   0x1ee55
   1ee68:	add    ah,cl
   1ee6a:	outs   dx,BYTE PTR ds:[esi]
   1ee6b:	add    BYTE PTR [edx],bl
   1ee6d:	add    BYTE PTR [eax],dl
   1ee6f:	add    BYTE PTR [eax],cl
   1ee71:	add    BYTE PTR [eax],al
   1ee73:	add    BYTE PTR [edx+0x0],al
   1ee76:	dec    edx
   1ee77:	add    BYTE PTR [eax],cl
   1ee79:	add    BYTE PTR [eax],al
   1ee7b:	add    BYTE PTR [eax],al
   1ee7d:	add    BYTE PTR [ebp-0x45],al
   1ee80:	sti    
   1ee81:	ins    BYTE PTR es:[edi],dx
   1ee82:	inc    edx
   1ee83:	sbb    eax,0x8c3c1888
   1ee88:	inc    eax
   1ee89:	and    eax,0x5e2b9e7
   1ee8e:	addr16 dec ecx
   1ee90:	inc    cl
   1ee92:	gs cmp ecx,ecx
   1ee95:	adc    al,0x27
   1ee97:	cmp    eax,0xe46f36eb
   1ee9c:	lods   al,BYTE PTR ds:[esi]
   1ee9d:	lea    edx,[ecx-0x71b4ba68]
   1eea3:	mov    ebp,0x68dd4da4
   1eea8:	mov    BYTE PTR [edx+0x10],al
   1eeab:	mov    ecx,edi
   1eead:	push   cs
   1eeae:	pop    es
   1eeaf:	pop    edi
   1eeb0:	out    0xe3,eax
   1eeb2:	add    cl,ah
   1eeb4:	xchg   edi,eax
   1eeb5:	pop    es
   1eeb6:	dec    eax
   1eeb7:	(bad)  
   1eeb8:	pop    ds
   1eeb9:	adc    al,0xde
   1eebb:	add    BYTE PTR [edx+0x27],al
   1eebe:	add    BYTE PTR ds:0xfdd1cc00,dl
   1eec4:	shr    BYTE PTR [edi],1
   1eec6:	ud0    ecx,DWORD PTR [edx-0x3c]
   1eeca:	cmp    BYTE PTR [esi+0x3e],bh
   1eecd:	int    0xf2
   1eecf:	add    cl,ah
   1eed1:	mov    esp,0x20bc62a4
   1eed6:	or     al,0xf3
   1eed8:	(bad)  
   1eed9:	adc    bh,BYTE PTR [ecx]
   1eedb:	mov    ebp,0x1416e158
   1eee0:	mov    dl,0x5d
   1eee2:	add    ah,cl
   1eee4:	push   ebx
   1eee5:	aas    
   1eee6:	or     DWORD PTR [eax],eax
   1eee8:	adc    eax,0xda3b7000
   1eeed:	xchg   edx,eax
   1eeee:	jnp    0x1eefa
   1eef0:	sar    DWORD PTR [ecx],0x8
   1eef3:	outs   dx,BYTE PTR ds:[esi]
   1eef4:	mov    edi,0xfae090bb
   1eef9:	(bad)  
   1eefa:	stc    
   1eefb:	add    ebx,DWORD PTR [eax-0x65]
   1eefe:	idiv   DWORD PTR [edx-0x3f]
   1ef01:	cwde   
   1ef02:	jge    0x1ef1f
   1ef04:	adc    dl,BYTE PTR [esi]
   1ef06:	cs push ss
   1ef08:	mov    bl,0x33
   1ef0a:	je     0x1eec4
   1ef0c:	sub    bl,dl
   1ef0e:	icebp  
   1ef0f:	dec    esi
   1ef10:	cmp    ebp,DWORD PTR [edx-0x4b9043f4]
   1ef16:	jle    0x1eee3
   1ef18:	dec    ecx
   1ef19:	enter  0x9e91,0xba
   1ef1d:	xchg   DWORD PTR [edi-0x290e9ccc],edx
   1ef23:	loopne 0x1eea8
   1ef25:	arpl   WORD PTR [esp+esi*2],sp
   1ef28:	out    0x0,al
   1ef2a:	inc    ebx
   1ef2b:	xor    DWORD PTR [edi],edx
   1ef2d:	add    al,0x15
   1ef2f:	adc    DWORD PTR [ecx],esi
   1ef31:	cmp    al,0x1a
   1ef33:	pop    ss
   1ef34:	add    al,0x5
   1ef36:	add    ah,cl
   1ef38:	mov    edi,0x63debe32
   1ef3d:	icebp  
   1ef3e:	sbb    DWORD PTR [edx+ebp*2+0x1e],esi
   1ef42:	inc    DWORD PTR [eax-0x6a86cd52]
   1ef48:	sub    BYTE PTR [ebp+esi*8+0x2c],0xf0
   1ef4d:	retf   0xda36
   1ef50:	popa   
   1ef51:	jecxz  0x1ef49
   1ef53:	out    0x3a,eax
   1ef55:	ds ret 
   1ef57:	add    edi,eax
   1ef59:	sub    eax,0x6e059d3d
   1ef5e:	add    bl,BYTE PTR [esi]
   1ef60:	and    ebx,ebp
   1ef62:	adc    DWORD PTR [edi+0x59],esi
   1ef65:	push   es
   1ef66:	mov    edi,0x3e8f23a2
   1ef6b:	leave  
   1ef6c:	mov    edx,0xe234c00
   1ef71:	add    eax,0x100b2528
   1ef76:	adc    edx,DWORD PTR [ebx]
   1ef78:	or     edi,DWORD PTR [eax]
   1ef7a:	add    ah,cl
   1ef7c:	inc    edx
   1ef7d:	sub    esp,DWORD PTR [ebx+0x402adc12]
   1ef83:	sub    al,0x5
   1ef85:	jmp    0xd26e13fd
   1ef8a:	push   ebx
   1ef8b:	aas    
   1ef8c:	inc    ebx
   1ef8d:	jl     0x1efd0
   1ef8f:	dec    edi
   1ef90:	test   ch,dh
   1ef92:	or     eax,0x3f43316b
   1ef97:	lods   eax,DWORD PTR fs:[esi]
   1ef99:	inc    ebp
   1ef9a:	xlat   BYTE PTR ds:[ebx]
   1ef9b:	pop    esp
   1ef9c:	adc    eax,0xc3e23c
   1efa1:	int3   
   1efa2:	dec    esp
   1efa3:	and    ecx,DWORD PTR [esi]
   1efa5:	add    eax,0x100b2528
   1efaa:	adc    edx,DWORD PTR [ebx]
   1efac:	or     ebp,DWORD PTR [esi]
   1efae:	add    ah,cl
   1efb0:	cmp    edx,esp
   1efb2:	jnp    0x1ef5d
   1efb4:	fwait
   1efb5:	add    eax,0x751fc839
   1efba:	pmaxsw mm4,QWORD PTR ss:[esi+eiz*1-0x57]
   1efc0:	jae    0x1efa8
   1efc2:	(bad)  
   1efc3:	mov    esi,0xdf165fd4
   1efc8:	lods   eax,DWORD PTR ds:[esi]
   1efc9:	sbb    esp,DWORD PTR [ebx-0x73]
   1efcc:	popf   
   1efcd:	push   edi
   1efce:	fldcw  WORD PTR [ebp+0x74]
   1efd1:	and    eax,0x3e5ce4f
   1efd6:	nop
   1efd7:	add    BYTE PTR [ebx+0x0],ch
   1efda:	push   cs
   1efdb:	add    BYTE PTR [edi],dl
   1efdd:	add    BYTE PTR [eax+eax*1],bl
   1efe0:	or     eax,DWORD PTR [eax]
   1efe2:	or     DWORD PTR [eax],eax
   1efe4:	pop    edi
   1efe5:	add    BYTE PTR [ecx],al
   1efe7:	add    BYTE PTR [eax+eax*1],bl
   1efea:	dec    edx
   1efeb:	add    BYTE PTR [eax],cl
   1efed:	add    BYTE PTR [eax],al
   1efef:	add    BYTE PTR [eax],al
   1eff1:	add    BYTE PTR [ecx+0x4ee50080],bh
   1eff7:	xchg   ebx,eax
   1eff8:	xchg   ebp,eax
   1eff9:	ret    0x3037
   1effc:	mov    ebx,0x925f633b
   1f001:	mov    ecx,eax
   1f003:	nop
   1f004:	jle    0x1f03e
   1f006:	iret   
   1f007:	jb     0x1f052
   1f009:	sbb    edi,DWORD PTR [edi-0x24]
   1f00c:	shl    DWORD PTR [edx-0x54],cl
   1f00f:	aad    0x4
   1f011:	or     BYTE PTR [eax],dl
   1f013:	imul   edx,esi,0xffffffc9
   1f016:	cs mov bl,0xf0
   1f019:	add    BYTE PTR [esi+0x1a],ch
   1f01c:	adc    BYTE PTR [eax],cl
   1f01e:	add    BYTE PTR [edx+0x4a],al
   1f021:	or     BYTE PTR [eax],al
   1f023:	add    BYTE PTR [edi-0x4a],bl
   1f026:	icebp  
   1f027:	sub    bl,BYTE PTR [ebx+0x69]
   1f02a:	sbb    al,0x5a
   1f02c:	add    ecx,0x8
   1f02f:	xchg   esp,eax
   1f030:	bound  edi,QWORD PTR [ebx+0x5f]
   1f033:	pop    es
   1f034:	mov    ds:0x27f21db6,eax
   1f039:	push   eax
   1f03a:	xchg   eax,ebp
   1f03c:	iret   
   1f03d:	cmp    DWORD PTR [edx-0x534d14de],0x11bb8118
   1f047:	lock xchg esi,eax
   1f049:	xchg   ecx,eax
   1f04a:	out    0xd2,al
   1f04c:	sbb    BYTE PTR [ecx+eiz*2],al
   1f04f:	fisub  WORD PTR [ebp-0x630adff4]
   1f055:	retf   
   1f056:	shl    DWORD PTR [esi],cl
   1f058:	jmp    0xf024c5d
   1f05d:	add    BYTE PTR [edx],ch
   1f05f:	add    BYTE PTR [edx],cl
   1f061:	add    BYTE PTR [edi],al
   1f063:	add    BYTE PTR [ecx],dl
   1f065:	add    BYTE PTR [eax],cl
   1f067:	add    BYTE PTR [edi],bh
   1f069:	add    BYTE PTR ds:0x1b000000,bh
   1f06f:	add    BYTE PTR [eax],ch
   1f071:	add    BYTE PTR [edi],ch
   1f073:	add    BYTE PTR [edx],cl
   1f075:	add    BYTE PTR [edx],cl
   1f077:	add    BYTE PTR [edi],al
   1f079:	add    BYTE PTR [ecx],dl
   1f07b:	add    BYTE PTR [eax],cl
   1f07d:	add    BYTE PTR [esi+0x0],bl
   1f080:	add    DWORD PTR [eax],eax
   1f082:	outs   dx,BYTE PTR ds:[esi]
   1f083:	add    BYTE PTR [eax],al
   1f085:	add    BYTE PTR [ecx-0x22dcf143],ch
   1f08b:	fcom   DWORD PTR [esi+0x54]
   1f08e:	adc    DWORD PTR [ebp-0x3d],0xffffffbe
   1f092:	mov    DWORD PTR [eax+0xd],edi
   1f095:	mov    edi,0xa7bca066
   1f09a:	lea    edi,[edx+edi*4]
   1f09d:	into   
   1f09e:	fiadd  DWORD PTR [ecx]
   1f0a0:	call   0x9262:0x5985d709
   1f0a7:	icebp  
   1f0a8:	jno    0x1f036
   1f0aa:	adc    eax,0xd1abbeb1
   1f0af:	bound  eax,QWORD PTR ds:0xacfa572d
   1f0b5:	nop
   1f0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1f0b7:	test   eax,0x41915849
   1f0bc:	add    BYTE PTR [esi],cl
   1f0be:	hlt    
   1f0bf:	add    BYTE PTR [ecx+esi*4+0x0],cl
   1f0c3:	mov    bh,0x9f
   1f0c5:	mov    ecx,0x8e8f5f7
   1f0ca:	arpl   sp,bx
   1f0cc:	sbb    dl,cl
   1f0ce:	mov    ds:0xe5be13a3,al
   1f0d3:	add    bh,0x5c
   1f0d6:	test   BYTE PTR [ebp-0x68],al
   1f0d9:	xor    BYTE PTR [ebp-0x55b499cf],dh
   1f0df:	shr    DWORD PTR [ebx-0x2d0d160d],cl
   1f0e5:	les    ebp,FWORD PTR [edx+esi*2+0x17]
   1f0e9:	add    BYTE PTR [esi-0x50],bl
   1f0ec:	inc    ecx
   1f0ed:	jae    0x1f091
   1f0ef:	fldenv [ecx]
   1f0f1:	push   esp
   1f0f2:	inc    ecx
   1f0f3:	fadd   st(6),st
   1f0f5:	sbb    edi,DWORD PTR [edi]
   1f0f7:	dec    edi
   1f0f8:	xchg   DWORD PTR [ecx],ebp
   1f0fa:	fxch   st(1)
   1f0fc:	push   ss
   1f0fd:	xchg   ecx,eax
   1f0fe:	mov    ebx,0xdcb3107b
   1f103:	cmp    eax,0xdef1832e
   1f108:	xchg   esi,eax
   1f109:	pop    edx
   1f10a:	add    DWORD PTR [bx+si+0x75],eax
   1f10e:	test   eax,0x2ecc0013
   1f113:	add    BYTE PTR [ebp+0x0],bl
   1f116:	or     al,BYTE PTR [eax]
   1f118:	or     al,BYTE PTR [eax]
   1f11a:	add    BYTE PTR [eax],al
   1f11c:	xchg   edx,eax
   1f11d:	(bad)  
   1f11f:	ficom  WORD PTR [edx-0x1a42405d]
   1f125:	hlt    
   1f126:	daa    
   1f127:	fisubr WORD PTR [edx]
   1f129:	jmp    DWORD PTR [ebp+0x11]
   1f12c:	pop    eax
   1f12d:	mov    dl,0x6e
   1f12f:	cmp    DWORD PTR [eax-0x19],0x30
   1f133:	repnz aaa 
   1f135:	retf   0xa74e
   1f138:	jbe    0x1f167
   1f13a:	sbb    dh,BYTE PTR [edx]
   1f13c:	xchg   esi,eax
   1f13d:	mov    eax,ds:0xdfde64a1
   1f142:	test   BYTE PTR [ecx],bl
   1f144:	add    ch,BYTE PTR [esi+0x31297f7b]
   1f14a:	in     eax,0x5d
   1f14c:	xchg   esp,eax
   1f14d:	jg     0x1f13f
   1f14f:	ds push 0xffffffb2
   1f152:	jno    0x1f127
   1f154:	fld    QWORD PTR es:[eax]
   1f157:	int3   
   1f158:	pop    esp
   1f159:	add    BYTE PTR [edi],cl
   1f15b:	add    BYTE PTR [edx],ch
   1f15d:	add    BYTE PTR [edx],cl
   1f15f:	add    BYTE PTR [edi],al
   1f161:	add    BYTE PTR [ecx],dl
   1f163:	add    BYTE PTR [eax],cl
   1f165:	add    BYTE PTR [edi],bh
   1f167:	add    BYTE PTR ds:0x1b000000,bh
   1f16d:	add    BYTE PTR [eax],ch
   1f16f:	add    BYTE PTR [edi],ch
   1f171:	add    BYTE PTR [edx],cl
   1f173:	add    BYTE PTR [edx],cl
   1f175:	add    BYTE PTR [edi],al
   1f177:	add    BYTE PTR [ecx],dl
   1f179:	add    BYTE PTR [eax],cl
   1f17b:	add    BYTE PTR [esi+0x0],bl
   1f17e:	add    DWORD PTR [eax],eax
   1f180:	outs   dx,BYTE PTR ds:[esi]
   1f181:	add    BYTE PTR [eax],bh
   1f183:	add    BYTE PTR [esi],dl
   1f185:	add    BYTE PTR [ebx],bl
   1f187:	add    BYTE PTR [edi],bl
   1f189:	add    BYTE PTR [ebx],dl
   1f18b:	add    BYTE PTR [edi],dl
   1f18d:	add    BYTE PTR [ecx],al
   1f18f:	add    BYTE PTR [edi],ch
   1f191:	add    BYTE PTR [eax],al
   1f193:	add    bl,dl
   1f195:	imul   ebx,DWORD PTR es:[ebx],0x10
   1f199:	int    0xe9
   1f19b:	sahf   
   1f19c:	imul   edx,DWORD PTR [edx-0x1d],0xffffffd6
   1f1a0:	sub    bh,BYTE PTR fs:[ebp-0x75]
   1f1a4:	scas   al,BYTE PTR es:[edi]
   1f1a5:	add    esp,0x36a21170
   1f1ab:	xchg   ecx,eax
   1f1ac:	xchg   esi,eax
   1f1ad:	xchg   esp,eax
   1f1ae:	aas    
   1f1af:	test   BYTE PTR [ebp-0x53fbedb7],dl
   1f1b5:	popa   
   1f1b6:	lock xor BYTE PTR [edx-0x2abac95e],al
   1f1bd:	gs xchg esp,eax
   1f1bf:	mov    ds:0x68e00966,eax
   1f1c4:	add    ah,cl
   1f1c6:	pop    esp
   1f1c7:	add    BYTE PTR [edi],cl
   1f1c9:	add    BYTE PTR [edx],ch
   1f1cb:	add    BYTE PTR [edx],cl
   1f1cd:	add    BYTE PTR [edi],al
   1f1cf:	add    BYTE PTR [ecx],dl
   1f1d1:	add    BYTE PTR [eax],cl
   1f1d3:	add    BYTE PTR [edi],bh
   1f1d5:	add    BYTE PTR ds:0x1b000000,bh
   1f1db:	add    BYTE PTR [eax],al
   1f1dd:	add    BYTE PTR [eax],cl
   1f1df:	dec    ecx
   1f1e0:	rcl    DWORD PTR [eax-0x5b],0x3a
   1f1e4:	dec    edx
   1f1e5:	xor    ch,0x29
   1f1e8:	aas    
   1f1e9:	cmp    cl,dh
   1f1eb:	xor    BYTE PTR [esi+eax*1-0x6f1b7644],bh
   1f1f2:	leave  
   1f1f3:	xchg   ebx,eax
   1f1f4:	push   edi
   1f1f5:	scas   al,BYTE PTR es:[edi]
   1f1f6:	loopne 0x1f209
   1f1f8:	mov    esi,0xe5aa89f4
   1f1fd:	sar    DWORD PTR [edx+0x5],1
   1f200:	dec    ecx
   1f201:	aas    
   1f202:	in     al,dx
   1f203:	adc    eax,0xa611d73c
   1f208:	icebp  
   1f209:	sbb    al,0xb7
   1f20b:	and    eax,0x36638e03
   1f210:	add    ah,cl
   1f212:	pop    esp
   1f213:	add    BYTE PTR [esi],cl
   1f215:	add    BYTE PTR [edi],dh
   1f217:	add    BYTE PTR [edx],al
   1f219:	add    BYTE PTR [esi],cl
   1f21b:	add    BYTE PTR [edx],bl
   1f21d:	add    BYTE PTR [edi],al
   1f21f:	add    BYTE PTR [esi],al
   1f221:	add    BYTE PTR [ebx],cl
   1f223:	add    BYTE PTR ds:0x2c001100,ah
   1f229:	add    BYTE PTR [edx],al
   1f22b:	add    BYTE PTR [ebx],cl
   1f22d:	add    BYTE PTR [ecx],al
   1f22f:	add    BYTE PTR [edi],al
   1f231:	add    BYTE PTR [ebx],cl
   1f233:	add    BYTE PTR [ecx],bh
   1f235:	add    BYTE PTR [edi],cl
   1f237:	add    BYTE PTR [edx],cl
   1f239:	add    BYTE PTR [edx],cl
   1f23b:	add    BYTE PTR [edi],al
   1f23d:	add    BYTE PTR [ecx],dl
   1f23f:	add    BYTE PTR [eax],cl
   1f241:	add    BYTE PTR [ecx],dl
   1f243:	add    BYTE PTR [edi],bl
   1f245:	add    BYTE PTR [esi],dh
   1f247:	add    BYTE PTR [edi],al
   1f249:	add    BYTE PTR [eax],al
   1f24b:	add    BYTE PTR [edi],dl
   1f24d:	add    BYTE PTR [ebx],cl
   1f24f:	add    BYTE PTR [edx],bl
   1f251:	add    BYTE PTR [edi],dh
   1f253:	add    BYTE PTR [eax+eax*1],ch
   1f256:	add    DWORD PTR [eax],eax
   1f258:	sbb    al,BYTE PTR [eax]
   1f25a:	push   es
   1f25b:	add    BYTE PTR ds:0x3f000300,bl
   1f261:	add    BYTE PTR [esi],dh
   1f263:	add    BYTE PTR [ecx],dl
   1f265:	add    BYTE PTR [eax],ch
   1f267:	add    BYTE PTR [edi],cl
   1f269:	add    BYTE PTR [esi],dh
   1f26b:	add    BYTE PTR [edi],dl
   1f26d:	add    BYTE PTR [eax+eax*1],al
   1f270:	pop    ds
   1f271:	add    BYTE PTR [edx],cl
   1f273:	add    BYTE PTR [esi],al
   1f275:	add    BYTE PTR [esi],dl
   1f277:	add    BYTE PTR [edi],ch
   1f279:	add    BYTE PTR [eax],al
   1f27b:	add    bh,ch
   1f27d:	(bad)  
   1f27e:	pushf  
   1f27f:	out    0xf2,eax
   1f281:	xlat   BYTE PTR ds:[ebx]
   1f282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1f283:	mov    dl,0x44
   1f285:	jae    0x1f2e6
   1f287:	test   BYTE PTR [ebp+0x2ed21c97],bl
   1f28d:	pop    ds
   1f28e:	xor    eax,0x4393066c
   1f293:	or     eax,0x605912e9
   1f298:	add    al,0xa
   1f29a:	ss clc 
   1f29c:	in     al,dx
   1f29d:	int3   
   1f29e:	add    ah,cl
   1f2a0:	ins    BYTE PTR es:[edi],dx
   1f2a1:	add    BYTE PTR [edi],bl
   1f2a3:	add    BYTE PTR [edx],dl
   1f2a5:	add    BYTE PTR [edx],dl
   1f2a7:	add    BYTE PTR [eax],al
   1f2a9:	add    BYTE PTR [ebp+0x0],bl
   1f2ac:	dec    ebx
   1f2ad:	add    BYTE PTR ds:0x1d00,bl
   1f2b3:	add    BYTE PTR ds:0xbc1be1c7,cl
   1f2b9:	cld    
   1f2ba:	loope  0x1f2c9
   1f2bc:	fld    DWORD PTR [edx-0x38]
   1f2bf:	aaa    
   1f2c0:	ret    
   1f2c1:	cmp    al,0xa9
   1f2c3:	(bad)  
   1f2c4:	pop    ecx
   1f2c5:	out    0x8,eax
   1f2c7:	call   0xdf57:0x9868e7af
   1f2ce:	mov    al,BYTE PTR fs:[edx+0x4]
   1f2d2:	test   al,0xa7
   1f2d4:	retf   0x876f
   1f2d7:	shl    BYTE PTR [edi-0x2dc3956],cl
   1f2dd:	fld    DWORD PTR [eax]
   1f2df:	int3   
   1f2e0:	pop    edx
   1f2e1:	sub    eax,0x6163725
   1f2e6:	sbb    BYTE PTR [eax],cl
   1f2e8:	xor    DWORD PTR [edx+ebx*1],edi
   1f2eb:	pop    ss
   1f2ec:	add    al,0x5
   1f2ee:	add    ah,cl
   1f2f0:	sbb    edx,0x940bc61c
   1f2f6:	repnz (bad) 
   1f2f8:	mov    eax,0x40b7847d
   1f2fd:	push   DWORD PTR [ecx]
   1f2ff:	sbb    al,0xe
   1f301:	adc    bl,BYTE PTR [esp+edx*8+0x20248e11]
   1f308:	jnp    0x1f2c7
   1f30a:	push   esp
   1f30b:	std    
   1f30c:	sbb    eax,0x79bb6bf
   1f311:	mov    BYTE PTR [ecx],0x58
   1f314:	mov    WORD PTR [esi+edi*4],?
   1f317:	jae    0x1f302
   1f319:	add    BYTE PTR [esi+0x3a],cl
   1f31c:	and    esp,DWORD PTR ds:0x33111d1b
   1f322:	aas    
   1f323:	sbb    eax,DWORD PTR [esi]
   1f325:	add    DWORD PTR [ecx*1+0x2082821],edx
   1f32c:	sbb    eax,0x87cc000b
   1f331:	nop
   1f332:	push   eax
   1f333:	push   ax
   1f335:	sti    
   1f336:	fucomip st,st(2)
   1f338:	cmp    DWORD PTR [ebx+0xa],0xffffffe2
   1f33c:	push   0x548a9d6f
   1f341:	shl    DWORD PTR ds:0x355959af,0x4e
   1f348:	xchg   esi,eax
   1f349:	(bad)  
   1f34a:	leave  
   1f34b:	push   ebp
   1f34c:	or     eax,0x4b5eb321
   1f351:	sub    BYTE PTR [esi-0x7fbd3eb7],ah
   1f357:	adc    eax,0xa52f9e97
   1f35c:	cmp    eax,DWORD PTR [eax]
   1f35e:	pop    edx
   1f35f:	sub    eax,0x1b1d2227
   1f364:	adc    DWORD PTR [esi],eax
   1f366:	pop    ss
   1f367:	and    bh,BYTE PTR [edi]
   1f369:	sbb    eax,DWORD PTR [esi]
   1f36b:	add    DWORD PTR [ecx*1+0x2082821],edx
   1f372:	sbb    eax,0x4acc000b
   1f377:	retf   0x5f6b
   1f37a:	and    al,0xb4
   1f37c:	cmp    BYTE PTR [ecx],bl
   1f37e:	jecxz  0x1f369
   1f380:	cmp    al,0xd7
   1f382:	(bad)  
   1f384:	cwde   
   1f385:	dec    esi
   1f386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1f387:	or     eax,0x276e3975
   1f38c:	sub    al,BYTE PTR [ebp-0x747d69b7]
   1f392:	add    ecx,DWORD PTR [edi]
   1f394:	jg     0x1f3f4
   1f396:	lea    eax,[esi]
   1f398:	pop    ds
   1f399:	add    BYTE PTR [eax+0x24],ch
   1f39c:	inc    eax
   1f39d:	push   ss
   1f39e:	imul   eax,DWORD PTR ds:[edx-0x17ce846f],0x1da16093
   1f3a9:	jmp    0x1f3e5
   1f3ab:	and    edx,DWORD PTR [edx+0x1fc02ecf]
   1f3b1:	dec    edx
   1f3b2:	cmp    dl,dh
   1f3b4:	push   ebx
   1f3b5:	sub    al,ah
   1f3b7:	fwait
   1f3b8:	mov    esi,0xa878afcf
   1f3bd:	pop    ss
   1f3be:	fcomp  QWORD PTR [eax+0x26]
   1f3c1:	paddusb mm4,mm7
   1f3c4:	retf   0x3081
   1f3c7:	call   0x8dd66340
   1f3cc:	add    edi,0xffffffed
   1f3cf:	jbe    0x1f3d1
   1f3d1:	jmp    0x5c:0xd40846
   1f3d8:	sbb    BYTE PTR [eax],al
   1f3da:	sub    eax,DWORD PTR [eax]
   1f3dc:	sbb    al,0x0
   1f3de:	aaa    
   1f3df:	add    BYTE PTR [ecx],ah
   1f3e1:	add    BYTE PTR [ebx],dl
   1f3e3:	add    BYTE PTR [edi],bl
   1f3e5:	add    BYTE PTR [edx],cl
   1f3e7:	add    BYTE PTR [esi],al
   1f3e9:	add    BYTE PTR [esi],dl
   1f3eb:	add    BYTE PTR [edi],ch
   1f3ed:	add    BYTE PTR [ecx+0x0],bh
   1f3f0:	push   esi
   1f3f1:	add    BYTE PTR [eax],al
   1f3f3:	add    BYTE PTR [edx],cl
   1f3f5:	sub    DWORD PTR [ebx],ebp
   1f3f7:	jns    0x1f462
   1f3f9:	data16 hlt 
   1f3fb:	stos   DWORD PTR es:[edi],eax
   1f3fc:	das    
   1f3fd:	mov    bh,0x85
   1f3ff:	inc    edx
   1f400:	mov    al,0xf7
   1f402:	jne    0x1f3e6
   1f404:	mov    BYTE PTR [ecx],dl
   1f406:	mov    al,0x1c
   1f408:	das    
   1f409:	cmp    DWORD PTR [ecx-0x54e6bb46],ebp
   1f40f:	(bad)  
   1f410:	lods   al,BYTE PTR ds:[esi]
   1f411:	push   edx
   1f412:	sbb    DWORD PTR [ecx+0x32],esi
   1f415:	sbb    BYTE PTR [esi+0x1c],cl
   1f418:	lods   eax,DWORD PTR ds:[esi]
   1f419:	mul    DWORD PTR [esi]
   1f41b:	int3   
   1f41c:	cmp    al,0x7f
   1f41e:	popa   
   1f41f:	ror    BYTE PTR [ecx+0x53581c2d],cl
   1f425:	xlat   BYTE PTR ds:[ebx]
   1f426:	icebp  
   1f427:	cmc    
   1f428:	jge    0x1f3d4
   1f42a:	repnz xor esi,edx
   1f42d:	xchg   ebx,eax
   1f42e:	cld    
   1f42f:	add    BYTE PTR [eax+eax*1+0x18],bl
   1f433:	add    BYTE PTR [ecx],ah
   1f435:	add    BYTE PTR [ebx],dl
   1f437:	add    BYTE PTR [edi],bl
   1f439:	add    BYTE PTR [edx],cl
   1f43b:	add    BYTE PTR [esi],al
   1f43d:	add    BYTE PTR [ecx],bh
   1f43f:	add    BYTE PTR [ecx+0x0],bh
   1f442:	push   esi
   1f443:	add    BYTE PTR [eax],al
   1f445:	add    BYTE PTR [eax],ah
   1f447:	jge    0x1f3e4
   1f449:	xor    al,0xf7
   1f44b:	or     esi,DWORD PTR [eax+0x113791f6]
   1f451:	inc    ebx
   1f452:	add    ch,0x89
   1f455:	sbb    DWORD PTR [ebx],ebx
   1f457:	inc    esp
   1f458:	add    al,0xb9
   1f45a:	mov    ds:0xcad45f97,eax
   1f45f:	in     al,dx
   1f460:	aam    0xc5
   1f462:	xchg   esi,eax
   1f463:	sub    al,0x9
   1f465:	jbe    0x1f47f
   1f467:	and    eax,0xb1ced108
   1f46c:	dec    edx
   1f46d:	add    BYTE PTR [ebx+0x0],dl
   1f470:	jns    0x1f472
   1f472:	jae    0x1f474
   1f474:	inc    ebp
   1f475:	add    BYTE PTR [esi+0x0],dh
   1f478:	je     0x1f47a
   1f47a:	inc    ebx
   1f47b:	add    BYTE PTR [eax],al
   1f47d:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1f481:	adc    ebx,DWORD PTR [edi]
   1f483:	or     al,BYTE PTR [esi]
   1f485:	cmp    DWORD PTR [eax],eax
   1f487:	int3   
   1f488:	ja     0x1f457
   1f48a:	test   eax,0xba2e5fe4
   1f48f:	pop    ecx
   1f490:	rol    DWORD PTR [edi+ebx*4+0x72cfd54f],0xa0
   1f498:	or     al,0x58
   1f49a:	jmp    0x1f441
   1f49c:	dec    eax
   1f49d:	add    al,0xf0
   1f49f:	cmp    ch,cl
   1f4a1:	leave  
   1f4a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1f4a3:	and    bh,BYTE PTR [eax]
   1f4a5:	or     al,0x4e
   1f4a7:	push   edi
   1f4a8:	(bad)  
   1f4a9:	rol    BYTE PTR [esi],cl
   1f4ab:	add    BYTE PTR [eax+eax*1+0x0],bl
   1f4af:	add    BYTE PTR [edx+0x0],dh
   1f4b2:	jb     0x1f4b4
   1f4b4:	add    BYTE PTR [eax],al
   1f4b6:	jp     0x1f4ec
   1f4b8:	cmp    ah,ah
   1f4ba:	scas   eax,DWORD PTR es:[edi]
   1f4bb:	ins    BYTE PTR es:[edi],dx
   1f4bc:	jge    0x1f48f
   1f4be:	mov    eax,ds:0x91d2039c
   1f4c3:	adc    al,0xcc
   1f4c5:	cmp    eax,0x1620fb3b
   1f4ca:	dec    ecx
   1f4cb:	arpl   WORD PTR [eax],di
   1f4cd:	pop    edx
   1f4ce:	inc    esp
   1f4cf:	adc    DWORD PTR [ebx],esp
   1f4d1:	dec    ecx
   1f4d2:	(bad)  
   1f4d3:	std    
   1f4d4:	lds    ebx,FWORD PTR [edx]
   1f4d6:	or     DWORD PTR [ecx],eax
   1f4d8:	push   ebx
   1f4d9:	ror    BYTE PTR [ebx],1
   1f4db:	bound  ebp,QWORD PTR [ebx]
   1f4dd:	int3   
   1f4de:	out    0x43,eax
   1f4e0:	xchg   edi,eax
   1f4e1:	inc    ecx
   1f4e2:	xor    ah,0x6e
   1f4e5:	shl    DWORD PTR [ecx-0x6d],0xda
   1f4e9:	ds cmc 
   1f4eb:	jmp    0xa1afba
   1f4f0:	pop    esp
   1f4f1:	add    BYTE PTR [ebx+0x63],ah
   1f4f4:	add    ah,cl
   1f4f6:	lods   eax,DWORD PTR ds:[esi]
   1f4f7:	pop    esp
   1f4f8:	jb     0x1f4fe
   1f4fa:	or     al,0xfa
   1f4fc:	mov    ebp,0x21013037
   1f501:	dec    esp
   1f502:	lea    edx,[esi]
   1f504:	scas   al,BYTE PTR es:[edi]
   1f505:	rcl    DWORD PTR [edx+0x5abeaf74],1
   1f50b:	test   al,0x48
   1f50d:	adc    BYTE PTR [eax],cl
   1f50f:	cmp    bl,BYTE PTR [edx]
   1f511:	stos   DWORD PTR es:[edi],eax
   1f512:	mov    ds:0x9aeafd05,al
   1f517:	into   
   1f518:	push   ds
   1f519:	sti    
   1f51a:	ret    0x4673
   1f51d:	mov    dh,0x42
   1f51f:	cld    
   1f520:	fs dec esp
   1f522:	inc    edx
   1f523:	add    BYTE PTR [edi],0xc2
   1f526:	or     dh,dh
   1f528:	jbe    0x1f4c9
   1f52a:	add    DWORD PTR ds:0x9fe7a165,0xfffffffd
   1f531:	mov    bh,0x9b
   1f533:	stc    
   1f534:	add    ah,cl
   1f536:	and    eax,0x5ccc0053
   1f53b:	add    BYTE PTR [ebx+0x0],dh
   1f53e:	jns    0x1f540
   1f540:	jae    0x1f542
   1f542:	je     0x1f544
   1f544:	add    BYTE PTR gs:[ebp+0x0],ch
   1f548:	jb     0x1f54a
   1f54a:	outs   dx,DWORD PTR ds:[esi]
   1f54b:	add    BYTE PTR [edi+0x0],ch
   1f54e:	je     0x1f550
   1f550:	pop    esp
   1f551:	add    BYTE PTR [ebx+0x0],dh
   1f554:	jns    0x1f556
   1f556:	jae    0x1f558
   1f558:	je     0x1f55a
   1f55a:	add    BYTE PTR gs:[ebp+0x0],ch
   1f55e:	xor    eax,DWORD PTR [eax]
   1f560:	xor    al,BYTE PTR [eax]
   1f562:	pop    esp
   1f563:	add    BYTE PTR ds:0x5300,ah
   1f569:	add    BYTE PTR [ecx],dh
   1f56b:	xor    ch,BYTE PTR cs:[esi]
   1f56e:	xor    eax,DWORD PTR [eax]
   1f570:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f577:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1f57b:	outs   dx,BYTE PTR gs:[esi]
   1f57d:	addr16 je 0x1f5e8
   1f580:	and    BYTE PTR [ebx+0x68],ah
   1f583:	arpl   WORD PTR gs:[ebx+0x0],bp
   1f587:	int3   
   1f588:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f58f:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1f593:	popa   
   1f594:	je     0x1f5f7
   1f596:	and    BYTE PTR [ebx+0x68],ah
   1f599:	arpl   WORD PTR gs:[ebx+0x0],bp
   1f59d:	int3   
   1f59e:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f5a5:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1f5a9:	je     0x1f60c
   1f5ab:	outs   dx,BYTE PTR ds:[esi]
   1f5ac:	arpl   WORD PTR [ebp+0x20],sp
   1f5af:	je     0x1f620
   1f5b1:	outs   dx,DWORD PTR ds:[esi]
   1f5b2:	and    BYTE PTR [esi+0x61],ah
   1f5b5:	jb     0x1f5d7
   1f5b7:	bound  esp,QWORD PTR [ecx+0x63]
   1f5ba:	imul   eax,DWORD PTR [eax],0x69
   1f5bd:	outs   dx,BYTE PTR ds:[esi]
   1f5be:	jbe    0x1f621
   1f5c0:	ins    BYTE PTR es:[edi],dx
   1f5c1:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1f5c9:	outs   dx,BYTE PTR ds:[esi]
   1f5ca:	arpl   WORD PTR [ebp+0x20],sp
   1f5cd:	arpl   WORD PTR [edi+0x64],bp
   1f5d0:	add    BYTE PTR gs:[ecx+0x6e],ch
   1f5d4:	jbe    0x1f637
   1f5d6:	ins    BYTE PTR es:[edi],dx
   1f5d7:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1f5df:	popa   
   1f5e0:	ins    BYTE PTR es:[edi],dx
   1f5e1:	das    
   1f5e2:	ins    BYTE PTR es:[edi],dx
   1f5e3:	outs   dx,BYTE PTR gs:[esi]
   1f5e5:	addr16 je 0x1f650
   1f5e8:	and    BYTE PTR [ebx+0x6f],ah
   1f5eb:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1f5f0:	jbe    0x1f653
   1f5f2:	ins    BYTE PTR es:[edi],dx
   1f5f3:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1f5fb:	outs   dx,BYTE PTR ds:[esi]
   1f5fc:	arpl   WORD PTR [ebp+0x73],sp
   1f5ff:	and    BYTE PTR [ebx+0x65],dh
   1f602:	je     0x1f604
   1f604:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f60b:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1f60f:	gs jb  0x1f673
   1f612:	ins    BYTE PTR es:[edi],dx
   1f613:	das    
   1f614:	ins    BYTE PTR es:[edi],dx
   1f615:	outs   dx,BYTE PTR gs:[esi]
   1f617:	addr16 je 0x1f682
   1f61a:	jae    0x1f63c
   1f61c:	jae    0x1f683
   1f61e:	je     0x1f620
   1f620:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f627:	and    BYTE PTR [edx+0x69],ah
   1f62a:	je     0x1f64c
   1f62c:	ins    BYTE PTR es:[edi],dx
   1f62d:	outs   dx,BYTE PTR gs:[esi]
   1f62f:	addr16 je 0x1f69a
   1f632:	and    BYTE PTR [edx+0x65],dh
   1f635:	jo     0x1f69c
   1f637:	popa   
   1f638:	je     0x1f63a
   1f63a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f641:	and    BYTE PTR [ebx+0x6f],ah
   1f644:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1f64a:	addr16 je 0x1f6b5
   1f64d:	jae    0x1f66f
   1f64f:	jae    0x1f6b6
   1f651:	je     0x1f653
   1f653:	int3   
   1f654:	je     0x1f6c5
   1f656:	outs   dx,DWORD PTR ds:[esi]
   1f657:	and    BYTE PTR [ebp+0x61],ch
   1f65a:	outs   dx,BYTE PTR ds:[esi]
   1f65b:	jns    0x1f67d
   1f65d:	ins    BYTE PTR es:[edi],dx
   1f65e:	outs   dx,BYTE PTR gs:[esi]
   1f660:	addr16 je 0x1f6cb
   1f663:	and    BYTE PTR [edi+0x72],ch
   1f666:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1f66a:	je     0x1f6cd
   1f66c:	outs   dx,BYTE PTR ds:[esi]
   1f66d:	arpl   WORD PTR [ebp+0x20],sp
   1f670:	jae    0x1f6eb
   1f672:	ins    DWORD PTR es:[edi],dx
   1f673:	bound  ebp,QWORD PTR [edi+0x6c]
   1f676:	jae    0x1f678
   1f678:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f67f:	and    BYTE PTR [ebx+0x74],dh
   1f682:	outs   dx,DWORD PTR ds:[esi]
   1f683:	jb     0x1f6ea
   1f685:	and    BYTE PTR fs:[edx+0x6c],ah
   1f689:	outs   dx,DWORD PTR ds:[esi]
   1f68a:	arpl   WORD PTR [ebx+0x20],bp
   1f68d:	ins    BYTE PTR es:[edi],dx
   1f68e:	outs   dx,BYTE PTR gs:[esi]
   1f690:	addr16 je 0x1f6fb
   1f693:	jae    0x1f695
   1f695:	int3   
   1f696:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f69d:	and    BYTE PTR [edx+0x6c],ah
   1f6a0:	outs   dx,DWORD PTR ds:[esi]
   1f6a1:	arpl   WORD PTR [ebx+0x20],bp
   1f6a4:	je     0x1f71f
   1f6a6:	jo     0x1f70d
   1f6a8:	add    ah,cl
   1f6aa:	push   0x65646165
   1f6af:	jb     0x1f6d1
   1f6b1:	arpl   WORD PTR [edx+0x63],si
   1f6b4:	and    BYTE PTR [ebp+0x69],ch
   1f6b7:	jae    0x1f726
   1f6b9:	popa   
   1f6ba:	je     0x1f71f
   1f6bc:	push   0x6b6e7500
   1f6c1:	outs   dx,BYTE PTR ds:[esi]
   1f6c2:	outs   dx,DWORD PTR ds:[esi]
   1f6c3:	ja     0x1f733
   1f6c5:	and    BYTE PTR [eax+0x65],ch
   1f6c8:	popa   
   1f6c9:	fs gs jb 0x1f6ed
   1f6cd:	data16 ins BYTE PTR es:[edi],dx
   1f6cf:	popa   
   1f6d0:	addr16 jae 0x1f6f3
   1f6d3:	jae    0x1f73a
   1f6d5:	je     0x1f6d7
   1f6d7:	int3   
   1f6d8:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f6df:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1f6e3:	gs popa 
   1f6e5:	fs gs jb 0x1f709
   1f6e9:	arpl   WORD PTR [eax+0x65],bp
   1f6ec:	arpl   WORD PTR [ebx+0x0],bp
   1f6ef:	int3   
   1f6f0:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f6f7:	and    BYTE PTR [edi+0x69],dh
   1f6fa:	outs   dx,BYTE PTR ds:[esi]
   1f6fb:	outs   dx,DWORD PTR fs:[esi]
   1f6fd:	ja     0x1f71f
   1f6ff:	jae    0x1f76a
   1f701:	jp     0x1f768
   1f703:	add    BYTE PTR [ebp+0x6e],dh
   1f706:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1f70a:	outs   dx,BYTE PTR ds:[esi]
   1f70b:	and    BYTE PTR [ebx+0x6f],ah
   1f70e:	ins    DWORD PTR es:[edi],dx
   1f70f:	jo     0x1f783
   1f711:	gs jae 0x1f787
   1f714:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1f71b:	.byte 0x68
   1f71c:	outs   dx,DWORD PTR ds:[esi]
   1f71d:	fs
	...

Disassembly of section INIT:

00077e00 <INIT>:
   77e00:	add    BYTE PTR [eax],al
   77e02:	add    BYTE PTR [eax],al
   77e04:	add    BYTE PTR [ecx+0x76f1c],ah
   77e0a:	mov    ecx,0xbb40e64e
   77e0f:	test   eax,eax
   77e11:	je     0x77e17
   77e13:	cmp    eax,ecx
   77e15:	jne    0x77e31
   77e17:	mov    eax,ds:0x1f848
   77e1c:	mov    eax,DWORD PTR [eax]
   77e1e:	xor    eax,0x76f1c
   77e23:	mov    ds:0x76f1c,eax
   77e28:	jne    0x77e31
   77e2a:	mov    eax,ecx
   77e2c:	mov    ds:0x76f1c,eax
   77e31:	not    eax
   77e33:	mov    ds:0x76f20,eax
   77e38:	ret    
   77e39:	and    eax,0xe5afea77
   77e3e:	mov    edi,edi
   77e40:	push   ebp
   77e41:	mov    ebp,esp
   77e43:	call   0x77e05
   77e48:	pop    ebp
   77e49:	jmp    0x197c4
   77e4e:	int3   
   77e4f:	int3   
   77e50:	xchg   esp,eax
   77e51:	jle    0x77e59
	...
   77e5b:	add    BYTE PTR [edx],dh
   77e5d:	add    BYTE PTR [esi],0x0
   77e60:	or     al,bh
   77e62:	add    BYTE PTR [eax],al
   77e64:	mov    WORD PTR [esi+0x6],?
	...
   77e6f:	add    BYTE PTR [eax+eax*4+0x6],dl
   77e73:	add    BYTE PTR [eax],al
   77e75:	clc    
	...
   77e8a:	add    BYTE PTR [eax],al
   77e8c:	inc    eax
   77e8d:	add    BYTE PTR [esi],0x0
   77e90:	add    BYTE PTR [eax],al
   77e92:	add    BYTE PTR [eax],al
   77e94:	add    BYTE PTR [edi+0x6],bh
   77e97:	add    BYTE PTR [edx],cl
   77e99:	jg     0x77ea1
   77e9b:	add    BYTE PTR [edi+edi*2],dl
   77e9e:	push   es
   77e9f:	add    BYTE PTR [esi],bl
   77ea1:	jg     0x77ea9
   77ea3:	add    BYTE PTR [edx],bh
   77ea5:	jg     0x77ead
   77ea7:	add    BYTE PTR [edi+edi*2+0x6],al
   77eab:	add    BYTE PTR [esi+0x7f],cl
   77eae:	push   es
   77eaf:	add    BYTE PTR [esi+0x7f],bl
   77eb2:	push   es
   77eb3:	add    BYTE PTR [edi+edi*2+0x6],dh
   77eb7:	add    BYTE PTR [eax-0x75fff981],al
   77ebd:	jg     0x77ec5
   77ebf:	add    BYTE PTR [edx-0x45fff981],ah
   77ec5:	jg     0x77ecd
   77ec7:	add    ah,cl
   77ec9:	jg     0x77ed1
   77ecb:	add    al,ah
   77ecd:	jg     0x77ed5
   77ecf:	add    BYTE PTR [eax],al
   77ed1:	add    BYTE PTR [esi],0x0
   77ed4:	adc    al,0x80
   77ed6:	push   es
   77ed7:	add    BYTE PTR [edx],ah
   77ed9:	add    BYTE PTR [esi],0x0
   77edc:	call   0x5c07855f
   77ee1:	add    BYTE PTR [esi],0x0
   77ee4:	add    BYTE PTR [eax],al
   77ee6:	add    BYTE PTR [eax],al
   77ee8:	xor    BYTE PTR [ebx],al
   77eea:	dec    edi
   77eeb:	bound  esp,QWORD PTR [esi+0x44]
   77eee:	gs jb  0x77f56
   77ef1:	data16 gs jb 0x77f5a
   77ef5:	outs   dx,BYTE PTR ds:[esi]
   77ef6:	arpl   WORD PTR [ebp+0x4f],sp
   77ef9:	bound  ebp,QWORD PTR [edx+0x65]
   77efc:	arpl   WORD PTR [eax+eax*1+0x0],si
   77f00:	jnp    0x77f07
   77f02:	pop    edi
   77f03:	popa   
   77f04:	ins    BYTE PTR es:[edi],dx
   77f05:	ins    BYTE PTR es:[edi],dx
   77f06:	ins    DWORD PTR es:[edi],dx
   77f07:	jne    0x77f75
   77f09:	add    BYTE PTR [ecx+0x5],bh
   77f0c:	pop    edi
   77f0d:	popa   
   77f0e:	ins    BYTE PTR es:[edi],dx
   77f0f:	ins    BYTE PTR es:[edi],dx
   77f10:	imul   esi,DWORD PTR fs:[esi+0x0],0x656d05a9
   77f18:	ins    DWORD PTR es:[edi],dx
   77f19:	jae    0x77f80
   77f1b:	je     0x77f1d
   77f1d:	add    BYTE PTR [ecx+0x476d4d02],ah
   77f23:	gs je  0x77f79
   77f26:	jns    0x77f9b
   77f28:	je     0x77f8f
   77f2a:	ins    DWORD PTR es:[edi],dx
   77f2b:	push   edx
   77f2c:	outs   dx,DWORD PTR ds:[esi]
   77f2d:	jne    0x77fa3
   77f2f:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   77f36:	gs jae 0x77fac
   77f39:	add    bh,al
   77f3b:	add    eax,0x6e736377
   77f40:	arpl   WORD PTR [ecx+0x74],sp
   77f43:	add    BYTE PTR [edi+0x6d656d05],ah
   77f49:	arpl   WORD PTR [eax+0x79],si
   77f4c:	add    BYTE PTR [eax],al
   77f4e:	jne    0x77f50
   77f50:	inc    ebp
   77f51:	js     0x77fa5
   77f53:	popa   
   77f54:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   77f5b:	jne    0x77fd0
   77f5d:	add    bl,ah
   77f5f:	add    DWORD PTR [ecx+0x6f],ecx
   77f62:	inc    bx
   77f64:	outs   dx,DWORD PTR ds:[esi]
   77f65:	ins    DWORD PTR es:[edi],dx
   77f66:	jo     0x77fd4
   77f68:	gs je  0x77fd0
   77f6b:	push   edx
   77f6c:	gs jno 0x77fe4
   77f6f:	gs jae 0x77fe6
   77f72:	add    BYTE PTR [eax],al
   77f74:	mov    ecx,0x70777305
   77f79:	jb     0x77fe4
   77f7b:	outs   dx,BYTE PTR ds:[esi]
   77f7c:	je     0x77fe4
   77f7e:	add    BYTE PTR [eax],al
   77f80:	lods   al,BYTE PTR ds:[esi]
   77f81:	add    eax,0x69727073
   77f86:	outs   dx,BYTE PTR ds:[esi]
   77f87:	je     0x77fef
   77f89:	add    BYTE PTR [ecx+0x0],al
   77f8c:	inc    ebp
   77f8d:	js     0x77fd0
   77f8f:	ins    BYTE PTR es:[edi],dx
   77f90:	ins    BYTE PTR es:[edi],dx
   77f91:	outs   dx,DWORD PTR ds:[esi]
   77f92:	arpl   WORD PTR [ecx+0x74],sp
   77f95:	gs push eax
   77f97:	outs   dx,DWORD PTR ds:[esi]
   77f98:	outs   dx,DWORD PTR ds:[esi]
   77f99:	ins    BYTE PTR es:[edi],dx
   77f9a:	push   edi
   77f9b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x6d006761
   77fa3:	add    cl,BYTE PTR [ebx+0x65]
   77fa6:	push   edi
   77fa7:	popa   
   77fa8:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   77fb0:	ins    BYTE PTR es:[di],dx
   77fb2:	gs dec edi
   77fb4:	bound  ebp,QWORD PTR [edx+0x65]
   77fb7:	arpl   WORD PTR [eax+eax*1+0x42],si
   77fbb:	add    cl,BYTE PTR [ebx+0x65]
   77fbe:	push   edx
   77fbf:	gs ins BYTE PTR es:[edi],dx
   77fc1:	gs popa 
   77fc3:	jae    0x7802a
   77fc5:	dec    ebp
   77fc6:	jne    0x7803c
   77fc8:	gs js  0x77fcb
   77fcb:	add    BYTE PTR [ebx],bl
   77fcd:	add    cl,BYTE PTR [ebx+0x65]
   77fd0:	dec    ecx
   77fd1:	outs   dx,BYTE PTR ds:[esi]
   77fd2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   77fda:	dec    ebp
   77fdb:	jne    0x78051
   77fdd:	gs js  0x77fe0
   77fe0:	inc    edx
   77fe1:	add    BYTE PTR [ebp+0x78],al
   77fe4:	inc    ecx
   77fe5:	ins    BYTE PTR es:[edi],dx
   77fe6:	ins    BYTE PTR es:[edi],dx
   77fe7:	outs   dx,DWORD PTR ds:[esi]
   77fe8:	arpl   WORD PTR [ecx+0x74],sp
   77feb:	gs push eax
   77fed:	outs   dx,DWORD PTR ds:[esi]
   77fee:	outs   dx,DWORD PTR ds:[esi]
   77fef:	ins    BYTE PTR es:[edi],dx
   77ff0:	push   edi
   77ff1:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   77ff9:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   78000:	dec    esi
   78001:	add    BYTE PTR [ebp+0x78],al
   78004:	inc    esi
   78005:	jb     0x7806c
   78007:	gs push eax
   78009:	outs   dx,DWORD PTR ds:[esi]
   7800a:	outs   dx,DWORD PTR ds:[esi]
   7800b:	ins    BYTE PTR es:[edi],dx
   7800c:	push   edi
   7800d:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x66006761
   78015:	add    cl,BYTE PTR [ebx+0x65]
   78018:	push   esp
   78019:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   78020:	je     0x78022
   78022:	test   BYTE PTR [ecx],0x4b
   78025:	gs inc edx
   78027:	jne    0x78090
   78029:	inc    ebx
   7802a:	push   0x456b6365
   7802f:	js     0x78031
   78031:	add    BYTE PTR [esi+0x74],ch
   78034:	outs   dx,DWORD PTR ds:[esi]
   78035:	jae    0x780a2
   78037:	jb     0x780a7
   78039:	ins    BYTE PTR es:[edi],dx
   7803a:	cs gs js 0x780a3
   7803e:	add    BYTE PTR [eax],al
   78040:	inc    eax
   78041:	add    BYTE PTR [ebx+0x65],cl
   78044:	inc    edi
   78045:	gs je  0x7808b
   78048:	jne    0x780bc
   7804a:	jb     0x780b1
   7804c:	outs   dx,BYTE PTR ds:[esi]
   7804d:	je     0x78098
   7804f:	jb     0x780c2
   78051:	ins    BYTE PTR es:[edi],dx
   78052:	add    BYTE PTR [eax],al
   78054:	dec    eax
   78055:	inc    ecx
   78056:	dec    esp
   78057:	cs fs ins BYTE PTR es:[edi],dx
   7805a:	ins    BYTE PTR es:[edi],dx
   7805b:	add    BYTE PTR [eax+0x6c745204],ah
   78061:	push   ebp
   78062:	outs   dx,BYTE PTR ds:[esi]
   78063:	ja     0x780ce
   78065:	outs   dx,BYTE PTR ds:[esi]
   78066:	fs
	...
