
5f85f14c8bd2a22643de7b8f590ec63c6d037ca51033babed69b3c7eef24dbb9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [eax+0x7c6b5183],esp
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax+0x0],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	sbb    eax,0x7337bd63
  402f46:	or     eax,edx
  402f48:	mov    BYTE PTR [esi+0x25],ch
  402f4b:	stos   BYTE PTR es:[edi],al
  402f4c:	adc    BYTE PTR ds:0xa9214832,dl
  402f52:	(bad)  [esi-0x40]
  402f55:	sar    dh,1
  402f57:	dec    esi
  402f58:	jmp    DWORD PTR [esi-0x3fff741b]
  402f5e:	jl     0x402f6c
  402f60:	sbb    al,0x13
  402f62:	jmp    0x4bcb:0xbd57cb37
  402f69:	iret   
  402f6a:	outs   dx,BYTE PTR ds:[esi]
  402f6b:	dec    esi
  402f6c:	cld    
  402f6d:	leave  
  402f6e:	js     0x402f74
  402f70:	add    BYTE PTR [eax],ah
  402f72:	and    DWORD PTR [ebx],ebp
  402f74:	(bad)  
  402f76:	fwait
  402f77:	pop    ebp
  402f78:	orps   xmm2,xmm7
  402f7b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402f7d:	pop    ss
  402f7e:	mov    edi,DWORD PTR [edx]
  402f80:	sar    dh,1
  402f82:	push   esp
  402f83:	xrelease xacquire xchg BYTE PTR [ebx],ah
  402f87:	imul   esp,DWORD PTR [ecx+0x6a],0x3c
  402f8b:	jne    0x402fbf
  402f8d:	pop    ss
  402f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f8f:	fwait
  402f90:	rcr    BYTE PTR [edx],cl
  402f92:	test   bl,ch
  402f94:	and    BYTE PTR [esi-0x4cf77d4d],dl
  402f9a:	pop    es
  402f9b:	(bad)  
  402f9c:	adc    bl,bh
  402f9e:	loop   0x402fa9
  402fa0:	icebp  
  402fa1:	cli    
  402fa2:	add    eax,0x93bcc3bb
  402fa7:	cld    
  402fa8:	repz add DWORD PTR [ebp+0x706ec75c],0xffffffc6
  402fb0:	xchg   dl,ah
  402fb2:	(bad)  [ebp+0x64]
  402fb5:	xlat   BYTE PTR ds:[ebx]
  402fb6:	mov    edx,0x59f45b37
  402fbb:	and    bh,0x62
  402fbe:	and    BYTE PTR [edx-0x3a],ch
  402fc1:	pop    esi
  402fc2:	fwait
  402fc3:	test   al,0xd8
  402fc5:	sbb    al,0xb4
  402fc7:	cmp    cl,BYTE PTR [edi+0x2a]
  402fca:	mov    bl,0x5
  402fcc:	adc    bh,dl
  402fce:	inc    edi
  402fcf:	outs   dx,BYTE PTR ds:[esi]
  402fd0:	pushf  
  402fd1:	cmp    al,0x2e
  402fd3:	xlat   BYTE PTR ds:[ebx]
  402fd4:	pop    eax
  402fd5:	rcl    dh,1
  402fd7:	pop    ss
  402fd8:	push   0xffffffb1
  402fda:	int3   
  402fdb:	sub    eax,0x60efc44d
  402fe0:	push   cs
  402fe1:	sbb    al,0x39
  402fe3:	outs   dx,DWORD PTR ds:[esi]
  402fe4:	xchg   ebp,eax
  402fe5:	adc    edi,DWORD PTR [ecx-0x21]
  402fe8:	cs fxam 
  402feb:	xor    eax,0xedc418c9
  402ff0:	pop    esi
  402ff1:	xchg   esi,esi
  402ff3:	add    al,0xf7
  402ff5:	adc    dl,ah
  402ff7:	pminub mm7,QWORD PTR [edi]
  402ffa:	jle    0x402f86
  402ffc:	clc    
  402ffd:	adc    BYTE PTR [ebx+0x27],bh
  403000:	mov    DWORD PTR [ebx],edi
  403002:	mov    bh,0x10
  403004:	mov    ebp,0xe8fa2b15
  403009:	adc    bh,BYTE PTR [eax-0x4d]
  40300c:	push   cs
  40300d:	push   cs
  40300e:	fwait
  40300f:	(bad)  
  403010:	mov    ds:0x188d94a8,eax
  403015:	sahf   
  403016:	add    ecx,DWORD PTR [ebx]
  403018:	mov    ch,BYTE PTR [ecx+0x36]
  40301b:	dec    ebp
  40301c:	pop    ecx
  40301d:	mov    edx,0xb1e670b1
  403022:	dec    ebx
  403023:	pop    edi
  403024:	(bad)  
  403025:	push   0xffffffc8
  403027:	retf   0xf2d1
  40302a:	mov    BYTE PTR [ebp+0x40],al
  40302d:	mov    ds:0x49aaab96,al
  403032:	xchg   DWORD PTR [esi-0xa71a08b],edi
  403038:	push   ss
  403039:	jbe    0x403042
  40303b:	add    esi,DWORD PTR [eax+0x71]
  40303e:	sti    
  40303f:	adc    BYTE PTR [edx+ebx*2-0x79],ah
  403043:	and    ecx,DWORD PTR [edx+ecx*1]
  403046:	(bad)  
  403047:	neg    BYTE PTR [eax]
  403049:	dec    esi
  40304a:	rol    ecx,1
  40304c:	shl    DWORD PTR [ebx+edx*2+0x2],1
  403050:	imul   ebx,DWORD PTR [edx+ebp*4],0x6f1cb1c8
  403057:	xchg   esp,eax
  403058:	aad    0x40
  40305a:	shl    ch,cl
  40305c:	mov    al,0x86
  40305e:	data16 std 
  403060:	ds nop
  403062:	(bad)  
  403064:	das    
  403065:	xor    DWORD PTR [ebp-0xf],esi
  403068:	sahf   
  403069:	(bad)  
  40306b:	mov    bl,0x8f
  40306d:	cmp    BYTE PTR [ecx-0x18b7ff41],0x99
  403074:	dec    ecx
  403075:	mov    esi,DWORD PTR [eax-0x6e]
  403078:	pushf  
  403079:	mov    ebx,edi
  40307b:	fild   WORD PTR [esi-0x311f90d7]
  403081:	add    al,0xac
  403083:	mov    ds:0xb268648e,al
  403088:	aad    0x8f
  40308a:	add    al,0xb
  40308c:	dec    eax
  40308d:	fnsave fs:[esi+0x4b]
  403091:	pop    esi
  403092:	loope  0x403029
  403094:	out    dx,al
  403095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403096:	push   ds
  403097:	repz sub bh,cl
  40309a:	cs out dx,eax
  40309c:	dec    edi
  40309d:	sub    al,BYTE PTR [ebp-0x311192fb]
  4030a3:	cmp    edx,DWORD PTR [ecx-0x35]
  4030a6:	mov    bl,0x56
  4030a8:	seta   BYTE PTR [edx+0x5b3c568d]
  4030af:	pop    edi
  4030b0:	dec    ebx
  4030b1:	push   es
  4030b2:	cwde   
  4030b3:	pusha  
  4030b4:	xchg   edx,eax
  4030b5:	pop    edx
  4030b6:	lock mov WORD PTR [ecx+0x1bae2171],fs
  4030bd:	mov    WORD PTR [eax],gs
  4030bf:	shl    dl,cl
  4030c1:	mov    ch,0x6a
  4030c3:	scas   al,BYTE PTR es:[edi]
  4030c4:	je     0x4030f4
  4030c6:	stos   DWORD PTR es:[edi],eax
  4030c7:	cmc    
  4030c8:	aaa    
  4030c9:	int    0x2c
  4030cb:	sub    dh,BYTE PTR [edx+ebp*4]
  4030ce:	or     BYTE PTR [edx],bl
  4030d0:	mov    ds:0xe6fa59e1,eax
  4030d5:	xor    al,0xa
  4030d7:	pop    es
  4030d8:	or     esp,DWORD PTR [ecx]
  4030da:	js     0x403070
  4030dc:	loopne 0x4030ef
  4030de:	dec    ecx
  4030df:	call   DWORD PTR ds:0x5f723e56
  4030e5:	fcomp  QWORD PTR [eax]
  4030e7:	and    ecx,DWORD PTR [ebx+ebx*8+0x32]
  4030eb:	cmp    al,0xeb
  4030ed:	dec    ecx
  4030ee:	and    al,0x86
  4030f0:	scas   eax,DWORD PTR es:[edi]
  4030f1:	lsl    ebp,WORD PTR [edx+0x36]
  4030f5:	xor    eax,0xbdfffe36
  4030fa:	outs   dx,DWORD PTR ds:[esi]
  4030fb:	sub    DWORD PTR [ebx],0xec0775cd
  403101:	ja     0x4030cd
  403103:	add    esp,DWORD PTR ds:0x874ee835
  403109:	pop    ebx
  40310a:	pop    ds
  40310b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40310c:	daa    
  40310d:	lock int 0x63
  403110:	out    dx,al
  403111:	fsub   QWORD PTR [esi]
  403113:	inc    ebx
  403114:	not    DWORD PTR [ecx-0x7c9f82eb]
  40311a:	or     edx,ebp
  40311c:	and    bl,BYTE PTR [esi+0xd02ff9b]
  403122:	xchg   esi,eax
  403123:	and    ah,BYTE PTR [ecx]
  403125:	mov    ah,0x26
  403127:	(bad)  
  403128:	jns    0x403101
  40312a:	lahf   
  40312b:	jb     0x4030cd
  40312d:	mov    eax,DWORD PTR [eax]
  40312f:	int    0xb8
  403131:	std    
  403132:	xor    BYTE PTR [esi+0x6b82594b],al
  403138:	dec    ebx
  403139:	test   ecx,esp
  40313b:	mov    DWORD PTR [ebp-0x1de50e80],ecx
  403141:	out    0xbc,al
  403143:	lock pop ds
  403145:	dec    edx
  403146:	mov    ebp,0x15a26008
  40314b:	dec    edx
  40314c:	mov    eax,0xae440e8b
  403151:	fdivr  DWORD PTR [esi+0x44]
  403154:	mov    dh,BYTE PTR [ecx+eiz*8]
  403157:	push   ss
  403158:	je     0x40315d
  40315a:	xchg   esp,eax
  40315b:	cmp    BYTE PTR [edx],cl
  40315d:	imul   esi,DWORD PTR [ebp-0x20],0x12
  403161:	retf   0x482d
  403164:	iret   
  403165:	rcr    DWORD PTR [edx-0x634f7c43],1
  40316b:	aad    0x60
  40316d:	inc    edx
  40316e:	lods   eax,DWORD PTR ds:[esi]
  40316f:	mov    dh,BYTE PTR [eax+0x2c76b364]
  403175:	xor    BYTE PTR [edx+0x3bc576f0],bh
  40317b:	dec    ecx
  40317c:	mov    BYTE PTR [ebp-0x2b],bl
  40317f:	lods   eax,DWORD PTR ds:[esi]
  403180:	lea    edi,[ebp+ebp*8+0x247a740]
  403187:	push   esp
  403188:	mov    es,WORD PTR [edi-0x74ba223f]
  40318e:	mov    ah,0x7d
  403190:	fstp   DWORD PTR [eax]
  403192:	pop    esp
  403193:	mov    WORD PTR [ecx],fs
  403195:	cmp    BYTE PTR [edi-0x57],0xe
  403199:	test   al,0xed
  40319b:	std    
  40319c:	mov    ecx,0x2b6c3433
  4031a1:	sbb    DWORD PTR [edx+0x36],esi
  4031a4:	fstp   QWORD PTR [edi+0x4cf04e45]
  4031aa:	pop    esi
  4031ab:	ins    BYTE PTR es:[edi],dx
  4031ac:	cmp    esp,DWORD PTR [ebx+0x33]
  4031af:	fbstp  TBYTE PTR [eax+0x31555176]
  4031b5:	scas   al,BYTE PTR es:[edi]
  4031b6:	mov    bh,0xb4
  4031b8:	ja     0x4031ac
  4031ba:	xchg   esi,eax
  4031bb:	mov    ecx,0x16d6fd44
  4031c0:	jnp    0x4031fc
  4031c2:	arpl   WORD PTR [eax+0x1fc8ed1c],ax
  4031c8:	push   ecx
  4031c9:	sub    al,0x91
  4031cb:	push   ecx
  4031cc:	xchg   ecx,eax
  4031cd:	fcomp  DWORD PTR [eax-0x59]
  4031d0:	sub    ah,BYTE PTR [ebx-0x20667881]
  4031d6:	inc    esi
  4031d7:	popf   
  4031d8:	je     0x403235
  4031da:	cmp    DWORD PTR [esi],ebx
  4031dc:	xchg   esp,eax
  4031dd:	xchg   ebx,eax
  4031de:	in     eax,dx
  4031df:	push   0x9d89b645
  4031e4:	jno    0x4031f4
  4031e6:	adc    ah,al
  4031e8:	jo     0x403223
  4031ea:	jne    0x40319b
  4031ec:	mov    ch,0x1
  4031ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031ef:	fwait
  4031f0:	mov    esp,0xe6ca1200
  4031f5:	jno    0x40320b
  4031f7:	mov    bl,0x3a
  4031f9:	xchg   DWORD PTR [esi+0x68b5d505],ebp
  4031ff:	lahf   
  403200:	mov    edx,0x6fd11feb
  403205:	out    dx,al
  403206:	out    0x78,eax
  403208:	cld    
  403209:	das    
  40320a:	xchg   edx,eax
  40320b:	push   ecx
  40320c:	div    BYTE PTR [ebx+0x766c35a6]
  403212:	or     cl,0xff
  403215:	aaa    
  403216:	jae    0x40327c
  403218:	jecxz  0x40326e
  40321a:	xchg   edx,eax
  40321b:	dec    ecx
  40321c:	mov    esp,0x6cdeb1af
  403221:	sub    esp,edi
  403223:	add    al,0x42
  403225:	(bad)  
  403226:	out    dx,eax
  403227:	enter  0xc3e9,0xda
  40322b:	fmul   DWORD PTR ds:0xf6960b95
  403231:	scas   eax,DWORD PTR es:[edi]
  403232:	js     0x4031c4
  403234:	xchg   ebx,eax
  403235:	stc    
  403236:	sbb    BYTE PTR [ecx-0x22b89b39],al
  40323c:	push   ebx
  40323d:	fcomi  st,st(7)
  40323f:	xchg   ebx,eax
  403240:	mov    dh,0xbf
  403242:	jg     0x403270
  403244:	loope  0x4031c6
  403246:	(bad)  
  403247:	xor    ecx,DWORD PTR [eax+0x46]
  40324a:	call   0xeab:0xd8157129
  403251:	and    BYTE PTR [esi],ch
  403253:	mov    ah,0xa2
  403255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403256:	das    
  403257:	in     eax,0x13
  403259:	and    al,0x48
  40325b:	ja     0x403258
  40325d:	pop    ebp
  40325e:	jge    0x403220
  403260:	(bad)  
  403261:	and    BYTE PTR [esi-0x47],dh
  403264:	push   es
  403265:	mov    WORD PTR [esi],es
  403267:	in     eax,dx
  403268:	pop    ss
  403269:	es rcr ch,1
  40326c:	add    DWORD PTR [edi],ebp
  40326e:	ss je  0x40322c
  403271:	mov    dh,0x6c
  403273:	and    DWORD PTR [edi+edx*1+0x609511ac],edx
  40327a:	inc    ebp
  40327b:	xor    esi,0xd1df6e28
  403281:	cli    
  403282:	sbb    esp,DWORD PTR [ecx-0x39933904]
  403288:	pusha  
  403289:	or     ch,al
  40328b:	fdiv   QWORD PTR [esi-0xf859257]
  403291:	mov    ah,0xfe
  403293:	fisubr WORD PTR [esi-0x954aaa2]
  403299:	xchg   ebx,eax
  40329a:	jno    0x40329a
  40329c:	push   ebx
  40329d:	scas   eax,DWORD PTR es:[edi]
  40329e:	mov    ah,dh
  4032a0:	repz cmp BYTE PTR [edx-0x3f],bl
  4032a4:	rcr    DWORD PTR [ebp+0x32c1939c],0xef
  4032ab:	dec    esi
  4032ac:	add    eax,eax
  4032ae:	sub    BYTE PTR [edi+edx*2-0x63],bl
  4032b2:	sbb    bl,ah
  4032b4:	es push esp
  4032b6:	imul   ebp,DWORD PTR [edi-0x146feef4],0xa0860893
  4032c0:	jae    0x403299
  4032c2:	gs mov al,0x3a
  4032c5:	imul   edi,DWORD PTR [ecx],0xa44d31b
  4032cb:	push   0x7e
  4032cd:	inc    esi
  4032ce:	ret    0x4941
  4032d1:	stos   BYTE PTR es:[edi],al
  4032d2:	lods   eax,DWORD PTR ds:[esi]
  4032d3:	xchg   esi,eax
  4032d4:	ins    BYTE PTR es:[edi],dx
  4032d5:	aaa    
  4032d6:	dec    edi
  4032d7:	test   eax,0x308d5e9
  4032dc:	mov    ds:0x180964e8,al
  4032e1:	jno    0x4032fe
  4032e3:	jl     0x4032c5
  4032e5:	inc    esi
  4032e6:	imul   ebp,DWORD PTR [esi+ecx*4-0x2b],0xffffff90
  4032eb:	(bad)  
  4032ec:	pop    ebp
  4032ed:	mov    ch,0xfa
  4032ef:	sbb    ecx,esp
  4032f1:	(bad)  
  4032f3:	test   BYTE PTR [eax-0x1e236d79],bl
  4032f9:	mov    edx,0xa87765
  4032fe:	out    dx,al
  4032ff:	xor    esp,esp
  403301:	shr    dl,1
  403303:	add    dh,BYTE PTR [eax+ebp*1-0x52faacfd]
  40330a:	and    al,0x65
  40330c:	ja     0x40333d
  40330e:	add    eax,0x1ca21387
  403313:	push   cs
  403314:	sahf   
  403315:	mov    al,0x21
  403317:	jno    0x4032af
  403319:	sub    ecx,edi
  40331b:	jae    0x40338e
  40331d:	push   0x1d4d4419
  403322:	out    dx,al
  403323:	ret    0xab4
  403326:	out    0x8b,eax
  403328:	scas   eax,DWORD PTR es:[edi]
  403329:	(bad)  
  40332a:	call   0x19b3:0x9b31447a
  403331:	sub    BYTE PTR [esi+0x334aa72b],dh
  403337:	jg     0x40339f
  403339:	arpl   WORD PTR [ecx+edx*8-0x7e669088],dx
  403340:	in     eax,0xb3
  403342:	retf   0xab12
  403345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403346:	xor    esi,DWORD PTR [ebx]
  403348:	or     al,0xa8
  40334a:	xchg   ebp,eax
  40334b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40334c:	xor    ch,BYTE PTR [ebx+0x4c]
  40334f:	adc    BYTE PTR [eax],bh
  403351:	outs   dx,DWORD PTR ds:[esi]
  403352:	add    BYTE PTR [ecx],dl
  403354:	jle    0x40333a
  403356:	inc    ebx
  403357:	or     ebp,DWORD PTR [eax]
  403359:	xor    al,0x2f
  40335b:	mov    WORD PTR [ebx+0xa],ds
  40335e:	cmp    eax,0xc957b96f
  403363:	sbb    edx,DWORD PTR [esi]
  403365:	retf   0x3990
  403368:	sub    eax,0xfeb83883
  40336d:	pop    ss
  40336e:	jae    0x403302
  403370:	lds    ebx,FWORD PTR [ecx-0x68]
  403373:	jb     0x40336d
  403375:	scas   eax,DWORD PTR es:[edi]
  403376:	imul   esi,DWORD PTR ds:0xc86f3c8c,0xffffffd7
  40337d:	pop    ebp
  40337e:	in     al,dx
  40337f:	int3   
  403380:	dec    ecx
  403381:	es (bad) 
  403384:	or     eax,esi
  403386:	jl     0x40332c
  403388:	pop    ss
  403389:	inc    ecx
  40338a:	push   0x4e
  40338c:	mov    bl,ah
  40338e:	ret    0xecc4
  403391:	push   ecx
  403392:	add    eax,0x758a799d
  403397:	out    dx,eax
  403398:	dec    edx
  403399:	push   ds
  40339a:	rcr    edx,cl
  40339c:	add    bh,BYTE PTR [ecx+ecx*2+0x13676b60]
  4033a3:	aaa    
  4033a4:	fdivr  st(6),st
  4033a6:	push   edx
  4033a7:	cmp    al,ch
  4033a9:	mov    gs,WORD PTR [esi+0x36]
  4033ac:	push   0x57659a5c
  4033b1:	xchg   esp,eax
  4033b2:	pop    eax
  4033b3:	add    esi,DWORD PTR [ebx]
  4033b5:	jne    0x403418
  4033b7:	jmp    0x403435
  4033b9:	outs   dx,DWORD PTR ds:[esi]
  4033ba:	mov    bh,0xcd
  4033bc:	pop    es
  4033bd:	xchg   esi,eax
  4033be:	fwait
  4033bf:	arpl   WORD PTR [ecx],bx
  4033c1:	div    bh
  4033c3:	(bad)  
  4033c4:	fisttp QWORD PTR [ebx]
  4033c6:	and    edx,DWORD PTR [ebx]
  4033c8:	in     al,dx
  4033c9:	(bad)  
  4033ca:	xor    BYTE PTR [ebp+eax*1+0x2d69e50e],bh
  4033d1:	push   ecx
  4033d2:	jmp    FWORD PTR [edx]
  4033d4:	fild   DWORD PTR [edi+0xc]
  4033d7:	add    DWORD PTR [esi+0x1629782e],ecx
  4033dd:	jp     0x40337c
  4033df:	sbb    al,0xaf
  4033e1:	nop
  4033e2:	int3   
  4033e3:	div    BYTE PTR [esi+0x7e]
  4033e6:	mov    edx,0x534b4e44
  4033eb:	loop   0x4033ea
  4033ed:	popf   
  4033ee:	mov    ds,ecx
  4033f0:	adc    al,bh
  4033f2:	shl    ebx,0x54
  4033f5:	call   0xe379cebc
  4033fa:	cmp    cl,BYTE PTR [edx-0x17382868]
  403400:	mov    al,ds:0x5f120aa
  403405:	stc    
  403406:	test   BYTE PTR [eax-0x36],al
  403409:	(bad)  
  40340a:	cld    
  40340b:	inc    eax
  40340c:	test   eax,0x1f19e2b9
  403411:	jnp    0x403403
  403413:	cli    
  403414:	out    0xbd,al
  403416:	imul   esi,edi,0x56
  403419:	mov    ds:0x810b9927,eax
  40341e:	or     DWORD PTR [ecx+0x780764ef],ebx
  403424:	sub    dl,ah
  403426:	bound  ecx,QWORD PTR [eax+eiz*4-0x3e]
  40342a:	test   BYTE PTR [ebx],cl
  40342c:	jle    0x4034a6
  40342e:	sti    
  40342f:	je     0x40340a
  403431:	push   esi
  403432:	stos   DWORD PTR es:[edi],eax
  403433:	pop    es
  403434:	repz cmp DWORD PTR [edx],ebp
  403437:	test   edi,edx
  403439:	push   ebx
  40343a:	retf   0x829b
  40343d:	adc    eax,0x2a020271
  403442:	or     DWORD PTR [eax+0x6d],0xffffffea
  403446:	pop    DWORD PTR [ecx+0x41]
  403449:	inc    ebx
  40344a:	dec    ecx
  40344b:	or     ch,bl
  40344d:	shr    DWORD PTR [eax-0x24],0x9c
  403451:	adc    ebp,DWORD PTR [edi+ecx*2+0x22cc5647]
  403458:	inc    ecx
  403459:	cmp    eax,0xeab160ae
  40345e:	pop    esi
  40345f:	popa   
  403460:	jb     0x40349a
  403462:	or     BYTE PTR [ebx],ch
  403464:	loopne 0x403465
  403466:	call   0xf8be5764
  40346b:	bound  edi,QWORD PTR [ebx]
  40346d:	mov    eax,ds:0xc3ceb144
  403472:	popf   
  403473:	adc    dl,ah
  403475:	adc    eax,0x7f78feec
  40347a:	sahf   
  40347b:	sub    ebp,DWORD PTR [edx]
  40347d:	cmp    eax,0xb0efb74
  403482:	xchg   edi,eax
  403483:	pop    esp
  403484:	and    BYTE PTR [ebx+0x50fa26d6],0x3d
  40348b:	stos   DWORD PTR es:[edi],eax
  40348c:	mov    dl,BYTE PTR [ebp+0xdaf3807]
  403492:	xchg   edx,eax
  403493:	xchg   edx,eax
  403494:	std    
  403495:	mov    al,ds:0xcc2ba760
  40349a:	mov    BYTE PTR [eax-0x7e],0x42
  40349e:	sbb    DWORD PTR [eax-0xa9273f8],edx
  4034a4:	cmp    DWORD PTR [eax+ebp*8],0xa7d94d0b
  4034ab:	loopne 0x403476
  4034ad:	retf   0xab05
  4034b0:	imul   esi
  4034b2:	mov    gs,WORD PTR [eax+edi*1]
  4034b5:	ds fucomip st,st(3)
  4034b8:	and    DWORD PTR [edx],ecx
  4034ba:	ret    0x94fb
  4034bd:	imul   ebx,DWORD PTR [eax+eiz*4],0xd69f39f1
  4034c4:	sub    eax,esp
  4034c6:	push   esi
  4034c7:	sub    eax,0x3a12005c
  4034cc:	lods   eax,DWORD PTR ds:[esi]
  4034cd:	cmp    BYTE PTR [esi],dl
  4034cf:	push   esp
  4034d0:	aam    0xa9
  4034d2:	fild   DWORD PTR [ebx+0x4d]
  4034d5:	clc    
  4034d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d7:	or     BYTE PTR [ebp+0x3],cl
  4034da:	add    al,0x87
  4034dc:	push   ebx
  4034dd:	daa    
  4034de:	pop    ebp
  4034df:	gs cmp ch,ch
  4034e2:	jmp    0xfa4f:0x7f8361fc
  4034e9:	push   0xffffff82
  4034eb:	ins    BYTE PTR es:[edi],dx
  4034ec:	xchg   cl,al
  4034ee:	sbb    al,0x44
  4034f0:	add    al,0xa9
  4034f2:	jns    0x4034b3
  4034f4:	adc    al,0x8
  4034f6:	cmp    ecx,DWORD PTR [ecx+0x4ff51c4e]
  4034fc:	mov    esp,0x701e5726
  403501:	leave  
  403502:	rcr    edi,1
  403504:	icebp  
  403505:	aas    
  403506:	mul    ecx
  403508:	fbstp  TBYTE PTR [ecx-0x38]
  40350b:	ds jge 0x4034d7
  40350e:	mov    ecx,eax
  403510:	or     al,0x42
  403512:	push   esp
  403513:	pusha  
  403514:	enter  0x4f6c,0x98
  403518:	loop   0x403541
  40351a:	in     al,0xa3
  40351c:	xor    bl,BYTE PTR [edi-0xa3d8376]
  403522:	pop    esi
  403523:	sbb    esp,DWORD PTR [ecx+eiz*8-0x4f]
  403527:	call   0x3c1:0x827a72c7
  40352e:	adc    eax,0xe94318b9
  403533:	shr    BYTE PTR [ebp-0x2a],1
  403536:	jns    0x4034d4
  403538:	inc    esi
  403539:	pop    esi
  40353a:	fcomip st,st(3)
  40353c:	xor    al,0x24
  40353e:	xor    eax,0x3b32dce4
  403543:	pusha  
  403544:	mov    al,ds:0x7fb3e0b4
  403549:	leave  
  40354a:	not    DWORD PTR [ecx]
  40354c:	lock out 0xd6,eax
  40354f:	in     al,0xef
  403551:	loope  0x4035d2
  403553:	pop    esi
  403554:	sahf   
  403555:	mov    cl,0x31
  403557:	cmp    bl,BYTE PTR [edi+0x6e]
  40355a:	in     al,dx
  40355b:	shr    dl,1
  40355d:	fist   DWORD PTR [ebx+0x6788c803]
  403563:	jmp    0xab21:0x5686c7eb
  40356a:	ror    DWORD PTR [ecx],cl
  40356c:	pop    ds
  40356d:	int    0xd9
  40356f:	pop    ecx
  403570:	jbe    0x403582
  403572:	or     ch,BYTE PTR [edi-0x56]
  403575:	stos   DWORD PTR es:[edi],eax
  403576:	cli    
  403577:	mov    dh,0xc8
  403579:	pop    eax
  40357a:	mov    edi,0xd5096881
  40357f:	push   ds
  403580:	jae    0x4035cf
  403582:	mov    edx,0x4434c13d
  403587:	cmp    ah,BYTE PTR [esi-0x23]
  40358a:	fstp   QWORD PTR [eax]
  40358c:	jne    0x4035f7
  40358e:	push   es
  40358f:	lahf   
  403590:	push   es
  403591:	add    BYTE PTR [esi+eax*2-0x1634bb79],bh
  403598:	fcom   QWORD PTR [edx-0x2810dfad]
  40359e:	ss push ebx
  4035a0:	xchg   esp,eax
  4035a1:	inc    esi
  4035a2:	mov    esi,0x7b50b641
  4035a7:	mov    ds:0xf1c77601,eax
  4035ac:	mov    esp,0x96b1bc4
  4035b1:	loopne 0x4035d9
  4035b3:	adc    esi,DWORD PTR [ecx]
  4035b5:	pop    edx
  4035b6:	add    ebp,DWORD PTR [esi+edx*1-0xd]
  4035ba:	add    eax,0x58f01b14
  4035bf:	xchg   dh,cl
  4035c1:	mov    ebp,0x3cd3b4c7
  4035c6:	ret    
  4035c7:	jmp    0x403591
  4035c9:	(bad)  
  4035ca:	cmp    eax,0xd4d403e8
  4035cf:	fistp  WORD PTR [edi]
  4035d1:	push   0x28bdfb39
  4035d6:	xchg   edx,eax
  4035d7:	popf   
  4035d8:	ins    DWORD PTR es:[edi],dx
  4035d9:	hlt    
  4035da:	jb     0x403648
  4035dc:	pop    esp
  4035dd:	mov    bh,0xa9
  4035e0:	scas   al,BYTE PTR es:[edi]
  4035e1:	sbb    dl,bl
  4035e3:	or     al,0x15
  4035e5:	test   al,0x27
  4035e7:	xor    al,0x5f
  4035e9:	(bad)  
  4035ea:	fsubr  DWORD PTR [esi]
  4035ec:	inc    ecx
  4035ed:	test   cl,cl
  4035ef:	fs sbb eax,0x4419016a
  4035f5:	push   eax
  4035f6:	shl    DWORD PTR gs:[edx],cl
  4035f9:	inc    eax
  4035fa:	lods   eax,DWORD PTR ds:[esi]
  4035fb:	dec    esi
  4035fc:	push   0xffffff9d
  4035fe:	hlt    
  4035ff:	call   0x783e:0xa1070855
  403606:	fistp  QWORD PTR [edx-0x72c1e6e1]
  40360c:	mov    ecx,0x5a107fc4
  403611:	mov    eax,ds:0x6e9b2dc0
  403616:	sub    BYTE PTR [edx],al
  403618:	dec    DWORD PTR [esi]
  40361a:	xor    BYTE PTR [edi+esi*8-0x52784707],dl
  403621:	inc    esi
  403622:	sbb    al,0x6f
  403624:	inc    eax
  403625:	and    ecx,eax
  403627:	xchg   ebx,eax
  403628:	or     BYTE PTR [esi-0x6f],al
  40362b:	(bad)  
  40362c:	data16 jg 0x4035bd
  40362f:	inc    edx
  403630:	or     DWORD PTR [eax-0x593bbdcd],0x53ba244e
  40363a:	jge    0x4036a4
  40363c:	fwait
  40363d:	push   edx
  40363e:	enter  0x1369,0x4
  403642:	js     0x4035e6
  403644:	inc    ebx
  403645:	loope  0x40362f
  403647:	jmp    0x5d6d:0x527470df
  40364e:	xchg   DWORD PTR [eax+0x56],eax
  403651:	push   edi
  403652:	loopne 0x403618
  403654:	and    DWORD PTR [eax],0x22
  403657:	cmp    esp,0x28
  40365a:	or     eax,0x43cc5458
  40365f:	sub    al,0xca
  403661:	mov    ds:0xfe9fd598,eax
  403666:	mov    bh,0xbb
  403668:	mov    edi,0x7ceb75d0
  40366d:	push   edi
  40366e:	lea    ecx,ds:0x460e2816
  403674:	in     eax,0x7c
  403676:	cmp    BYTE PTR [eax-0x34],ch
  403679:	or     eax,0xb4c3138a
  40367e:	cld    
  40367f:	add    eax,0x230e5f75
  403684:	add    eax,0x31d53813
  403689:	jle    0x403668
  40368b:	xor    al,BYTE PTR [edx+0x2440ace1]
  403691:	jmp    0x3be5:0x645f6980
  403698:	loop   0x40370a
  40369a:	jb     0x40370b
  40369c:	cmp    edi,DWORD PTR [esi-0x2e6960bd]
  4036a2:	cld    
  4036a3:	xchg   esi,eax
  4036a4:	xor    eax,0xf192da2e
  4036a9:	sti    
  4036aa:	dec    ecx
  4036ab:	mov    edi,0x6420a93d
  4036b0:	pop    es
  4036b1:	inc    edi
  4036b2:	jge    0x40365b
  4036b4:	jne    0x40370b
  4036b6:	shl    DWORD PTR ds:0x806eee11,1
  4036bc:	inc    eax
  4036bd:	cmp    dl,ch
  4036bf:	lods   al,BYTE PTR ds:[esi]
  4036c0:	repz jge 0x403730
  4036c3:	push   ss
  4036c4:	lds    eax,FWORD PTR [eax-0x6386d075]
  4036ca:	js     0x40367b
  4036cc:	mov    bl,0x15
  4036ce:	loop   0x403658
  4036d0:	xchg   edi,eax
  4036d1:	sub    BYTE PTR [ebx+0x3d],dh
  4036d4:	xchg   BYTE PTR [eax+0xe981503],bl
  4036da:	xchg   cl,ch
  4036dc:	dec    ebp
  4036dd:	add    DWORD PTR [ebx+ecx*1+0x303e7e57],0xffffff81
  4036e5:	fadd   DWORD PTR [eax+edx*2]
  4036e8:	imul   eax,DWORD PTR [edi-0x686d9c10],0x69441c26
  4036f2:	fadd   st(5),st
  4036f4:	adc    bl,BYTE PTR [edi+0x7de32cf8]
  4036fa:	in     eax,dx
  4036fb:	(bad)  
  4036fc:	cmc    
  4036fd:	lods   al,BYTE PTR ds:[esi]
  4036fe:	xchg   BYTE PTR [ebp-0x21],cl
  403701:	ret    
  403702:	sti    
  403703:	retf   
  403704:	cmc    
  403705:	jmp    0x6f97:0x95d78a0c
  40370c:	adc    al,0x56
  40370e:	cmp    eax,0xa83674f3
  403713:	or     bh,BYTE PTR [esi-0x9]
  403716:	jne    0x40371c
  403718:	shl    DWORD PTR [ebx-0xb470761],1
  40371e:	mov    eax,ds:0x75237b94
  403723:	daa    
  403724:	mov    eax,0xa0e59e41
  403729:	adc    BYTE PTR [esi-0x3d],bh
  40372c:	fdivr  DWORD PTR [ecx]
  40372e:	mov    esp,0x1950860b
  403733:	fbld   TBYTE PTR [eax+0x58]
  403736:	sti    
  403737:	fstp   QWORD PTR [ebx]
  403739:	pop    ds
  40373a:	mov    ds:0x6623d86a,al
  40373f:	(bad)  
  403740:	and    ebx,esp
  403742:	push   esp
  403743:	push   ss
  403744:	sub    BYTE PTR [ebx+0x53db57e1],ah
  40374a:	inc    esp
  40374b:	daa    
  40374c:	mov    cl,dl
  40374e:	sbb    eax,0x742c8323
  403753:	ror    BYTE PTR [esi+ecx*2-0xf],0xc9
  403758:	stos   DWORD PTR es:[edi],eax
  403759:	rcr    DWORD PTR [esi-0x4f6ad701],1
  40375f:	xor    eax,0x6dd8483
  403764:	adc    eax,0x93bb830a
  403769:	retf   
  40376a:	lods   eax,DWORD PTR ds:[esi]
  40376b:	sbb    eax,0xb93729fa
  403770:	push   es
  403771:	add    al,BYTE PTR [ebp+ecx*2-0x15]
  403775:	rcl    DWORD PTR [eax+0x4c15678d],0xd
  40377c:	mov    dl,0xd2
  40377e:	xor    eax,0x5154697
  403783:	pushf  
  403784:	ja     0x4037d1
  403786:	(bad)  
  403787:	mul    bh
  403789:	(bad)  
  40378a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40378b:	mov    esp,0xb0955522
  403790:	adc    BYTE PTR [edi+0x427a1bf7],bl
  403796:	ds inc ebx
  403798:	dec    esp
  403799:	mov    ah,BYTE PTR [eax-0x1dbad97e]
  40379f:	mov    ds:0xdfdea57f,eax
  4037a4:	xchg   ebp,eax
  4037a5:	xor    BYTE PTR [eax+0x7ce062de],0xd2
  4037ac:	cmp    al,0x47
  4037ae:	sub    ecx,DWORD PTR [ebx-0x596f7d05]
  4037b4:	daa    
  4037b5:	pop    ebx
  4037b6:	jns    0x40381c
  4037b8:	fdiv   QWORD PTR [ecx+0x41]
  4037bb:	dec    ecx
  4037bc:	sbb    eax,0x695d6f52
  4037c1:	fnstenv [esi-0x31]
  4037c4:	das    
  4037c5:	mov    edi,edi
  4037c7:	adc    BYTE PTR [esi-0x55d75bd9],dl
  4037cd:	addr16 or al,0xff
  4037d0:	or     BYTE PTR [esi+ecx*2],cl
  4037d3:	jbe    0x4037e2
  4037d5:	dec    ecx
  4037d6:	lods   eax,DWORD PTR ds:[esi]
  4037d7:	stc    
  4037d8:	pop    eax
  4037d9:	xchg   edi,eax
  4037da:	jnp    0x40385b
  4037dc:	in     al,dx
  4037dd:	add    esi,DWORD PTR [edi+0x21361203]
  4037e3:	imul   ecx,esi,0x9aba6b55
  4037e9:	jge    0x40383d
  4037eb:	out    0xa4,al
  4037ed:	adc    edi,DWORD PTR [esi-0x4bc37473]
  4037f3:	xor    esi,DWORD PTR [eax-0x3b36e61a]
  4037f9:	das    
  4037fa:	dec    esi
  4037fb:	sar    DWORD PTR [edx],cl
  4037fd:	mov    cl,dh
  4037ff:	xor    DWORD PTR [ebx+0xf],edx
  403802:	mov    eax,ds:0x5c084197
  403807:	xor    DWORD PTR [edx+0x14],eax
  40380a:	and    DWORD PTR [eax-0x3d672dfd],esi
  403810:	in     eax,0xcc
  403812:	cli    
  403813:	shl    ecx,1
  403815:	aad    0x2c
  403817:	adc    ebp,DWORD PTR [ebx+ebx*1-0x571c37c2]
  40381e:	xchg   esp,eax
  40381f:	or     edi,DWORD PTR [ecx+0x3c]
  403822:	push   ebp
  403823:	ror    BYTE PTR [edx+0x3500c533],cl
  403829:	xlat   BYTE PTR ds:[ebx]
  40382a:	push   ebx
  40382b:	jge    0x4037b2
  40382d:	sbb    al,BYTE PTR [eax]
  40382f:	push   ecx
  403830:	or     DWORD PTR [eax-0x4],ebp
  403833:	fstp   TBYTE PTR [eax-0x4f8dc777]
  403839:	sub    bh,ch
  40383b:	xor    bl,dl
  40383d:	jne    0x4037ce
  40383f:	rcl    DWORD PTR ds:0x8c1482e0,1
  403845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403846:	icebp  
  403847:	xor    al,0xc9
  403849:	pusha  
  40384a:	js     0x403849
  40384c:	lods   al,BYTE PTR ds:[esi]
  40384d:	dec    esi
  40384e:	in     eax,dx
  40384f:	stos   DWORD PTR es:[edi],eax
  403850:	in     eax,0xe9
  403852:	pop    edx
  403853:	mov    bl,ah
  403855:	lahf   
  403856:	std    
  403857:	xor    esi,DWORD PTR [ebp+0x22953bd4]
  40385d:	or     al,0xd5
  40385f:	push   ecx
  403860:	popf   
  403861:	inc    esp
  403862:	mov    ds:0x5171501f,al
  403867:	lahf   
  403868:	xchg   esi,eax
  403869:	sub    BYTE PTR [edi+0x3d],dl
  40386c:	jmp    0xad6c:0x37cfe438
  403873:	push   ebp
  403874:	fstp   QWORD PTR [ebx+0x1b]
  403877:	push   edx
  403878:	mov    ecx,0x5455f9ba
  40387d:	ret    
  40387e:	cwde   
  40387f:	cmp    dl,al
  403881:	shl    esi,1
  403883:	dec    ebx
  403884:	pop    ecx
  403885:	mov    eax,0x5f7fa42a
  40388a:	jp     0x40386a
  40388c:	loope  0x4038a6
  40388e:	adc    al,0x3d
  403890:	leave  
  403891:	fdivr  QWORD PTR [eax-0x7b1d7b3a]
  403897:	cmp    bh,BYTE PTR [edx+0x2c8e2c7a]
  40389d:	mov    edx,0xe1283fdb
  4038a2:	call   0x307f:0x719bc937
  4038a9:	fs repnz mov dh,0x1e
  4038ad:	pop    es
  4038ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038af:	jno    0x4038d4
  4038b1:	test   DWORD PTR [edx],0xf485e580
  4038b7:	daa    
  4038b8:	sub    DWORD PTR [edx-0x25],0x50
  4038bc:	jb     0x4038ba
  4038be:	inc    eax
  4038bf:	push   esp
  4038c0:	mov    cl,0xa
  4038c2:	xor    DWORD PTR [ebp+0x52],ebp
  4038c5:	cld    
  4038c6:	pop    edi
  4038c7:	nop
  4038c8:	add    BYTE PTR [ecx],ch
  4038ca:	popa   
  4038cb:	(bad)  
  4038cc:	push   eax
  4038cd:	iret   
  4038ce:	repnz test al,0xf3
  4038d1:	shl    DWORD PTR [eax],cl
  4038d3:	je     0x403880
  4038d5:	push   edi
  4038d6:	cmp    eax,0x5fd7055a
  4038db:	xlat   BYTE PTR ds:[ebx]
  4038dc:	or     edx,ebp
  4038de:	xor    DWORD PTR [esi+0x60],ebx
  4038e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e2:	pop    esi
  4038e3:	and    dh,BYTE PTR [eax]
  4038e5:	lods   al,BYTE PTR ds:[esi]
  4038e6:	inc    al
  4038e8:	fisubr DWORD PTR ds:0xda821da5
  4038ee:	mov    ch,0xb2
  4038f0:	mov    ds:0x89a8cef,al
  4038f5:	out    dx,al
  4038f6:	jns    0x4038b2
  4038f8:	das    
  4038f9:	enter  0x1098,0x4b
  4038fd:	adc    ah,BYTE PTR [edi+eiz*4]
  403900:	cwde   
  403901:	inc    ebx
  403902:	push   esp
  403903:	ins    DWORD PTR es:[edi],dx
  403904:	push   edi
  403905:	mov    al,0xab
  403907:	sbb    al,bl
  403909:	inc    edi
  40390a:	loopne 0x403967
  40390c:	inc    ecx
  40390d:	popa   
  40390e:	sahf   
  40390f:	out    dx,eax
  403910:	inc    eax
  403911:	add    BYTE PTR [ebp+0x9],dh
  403914:	sahf   
  403915:	or     cl,BYTE PTR [edx+0x5c37c25a]
  40391b:	cs leave 
  40391d:	pop    es
  40391e:	test   BYTE PTR ds:0xf6465706,bh
  403924:	push   cs
  403925:	into   
  403926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403927:	or     cl,BYTE PTR [esi+0x431b12ad]
  40392d:	xlat   BYTE PTR ds:[ebx]
  40392e:	sbb    al,BYTE PTR [ecx]
  403930:	ficomp WORD PTR [ebp-0x40]
  403933:	jle    0x4038bc
  403935:	enter  0xa988,0x82
  403939:	or     eax,0xd7754723
  40393e:	mov    al,ds:0x4075fe68
  403943:	ins    BYTE PTR es:[edi],dx
  403944:	inc    esi
  403945:	push   ebx
  403946:	push   0xc1062cee
  40394b:	ins    BYTE PTR es:[edi],dx
  40394c:	xchg   edx,eax
  40394d:	out    0xf9,al
  40394f:	ret    
  403950:	pop    edi
  403951:	add    cl,BYTE PTR [ecx-0x1d2f10b9]
  403957:	aad    0x7a
  403959:	xchg   edx,eax
  40395a:	stos   DWORD PTR es:[edi],eax
  40395b:	cmp    eax,0x2df4c250
  403960:	mov    eax,ds:0xab927098
  403965:	mov    eax,DWORD PTR [ecx]
  403967:	dec    ecx
  403968:	dec    eax
  403969:	mov    al,ds:0xb1a65e65
  40396e:	or     al,cl
  403970:	mov    ebx,0x9c4e2d56
  403975:	ror    edi,cl
  403977:	mov    edx,0xddaec477
  40397c:	xchg   ebp,eax
  40397d:	inc    esi
  40397e:	fild   DWORD PTR [eax+0x6c]
  403981:	(bad)  
  403982:	arpl   WORD PTR [ebx],sp
  403984:	xchg   esi,eax
  403985:	sub    BYTE PTR [esi],bh
  403987:	(bad)  
  403988:	popa   
  403989:	mov    al,0xad
  40398b:	lods   eax,DWORD PTR ds:[esi]
  40398c:	icebp  
  40398d:	sbb    esp,esi
  40398f:	dec    eax
  403990:	in     al,0x2e
  403992:	mov    ds:0xb5d236da,eax
  403997:	imul   edx,DWORD PTR [edx-0x6fb067b8],0xffffffb6
  40399e:	(bad)  [edi]
  4039a0:	je     0x403942
  4039a2:	pop    esp
  4039a3:	pop    es
  4039a4:	sahf   
  4039a5:	stos   DWORD PTR es:[edi],eax
  4039a6:	mov    cl,BYTE PTR [edx-0x7ef38985]
  4039ac:	aad    0x5f
  4039ae:	inc    edx
  4039af:	loop   0x403982
  4039b1:	inc    edx
  4039b2:	mov    edx,0x3efe1b5
  4039b7:	adc    al,0xc9
  4039b9:	les    esp,FWORD PTR [ecx+0x63]
  4039bc:	sub    dl,BYTE PTR [esi+0x2af2948c]
  4039c2:	int    0x82
  4039c4:	push   0xffffffd5
  4039c6:	sbb    cl,BYTE PTR [eax]
  4039c8:	push   edi
  4039c9:	jmp    esp
  4039cb:	scas   eax,DWORD PTR es:[edi]
  4039cc:	fwait
  4039cd:	mov    al,ds:0xf636aad2
  4039d2:	aam    0xcd
  4039d4:	in     al,0x75
  4039d6:	jns    0x403979
  4039d8:	imul   BYTE PTR [esi]
  4039da:	pop    edx
  4039db:	pushf  
  4039dc:	pusha  
  4039dd:	rol    esi,1
  4039df:	(bad)
  4039e3:	push   esi
  4039e4:	sbb    dh,BYTE PTR [edx]
  4039e6:	pushf  
  4039e7:	dec    edx
  4039e8:	inc    esi
  4039e9:	into   
  4039ea:	adc    dl,BYTE PTR [ebx-0x63]
  4039ed:	mov    ds:0xbe144996,al
  4039f2:	ret    
  4039f3:	int3   
  4039f4:	push   ebx
  4039f5:	fdivr  DWORD PTR [esi+0x4d]
  4039f8:	add    BYTE PTR [eax-0x64],0x63
  4039fc:	shl    BYTE PTR [esi-0x48762cd9],0x9b
  403a03:	mov    al,ds:0x41ea6edc
  403a08:	adc    eax,0xad152097
  403a0d:	mov    ebx,DWORD PTR [ecx-0x1d]
  403a10:	(bad)  
  403a11:	outs   dx,DWORD PTR ds:[esi]
  403a12:	add    eax,0x1cdac976
  403a17:	aam    0x4
  403a19:	(bad)  
  403a1a:	fst    QWORD PTR [eax]
  403a1c:	(bad)  
  403a1d:	data16 lock mov ah,0x44
  403a21:	jnp    0x4039b6
  403a23:	shl    BYTE PTR [ebx],0xa1
  403a26:	sar    DWORD PTR [eax+eax*8-0xd58048],cl
  403a2d:	aad    0xef
  403a2f:	pop    ss
  403a30:	add    BYTE PTR [ebx*2-0x60476736],ah
  403a37:	ror    DWORD PTR [ecx],cl
  403a39:	mov    BYTE PTR [edx],ah
  403a3b:	jmp    0x403a41
  403a3d:	push   esi
  403a3e:	mov    al,ds:0xd2c8c764
  403a43:	push   0x91cab999
  403a48:	fistp  QWORD PTR ds:0x334e81c3
  403a4e:	cli    
  403a4f:	fs push ds
  403a51:	mov    edi,0xab3a4cd3
  403a56:	cmp    BYTE PTR [edi-0x72],0x71
  403a5a:	mov    esi,0x1c5d0469
  403a5f:	(bad)  
  403a61:	sahf   
  403a62:	xchg   DWORD PTR ds:0xa75ca584,esi
  403a68:	cmc    
  403a69:	sbb    ebp,DWORD PTR [edx-0x3d1bb3f3]
  403a6f:	dec    edi
  403a70:	jle    0x403ac9
  403a72:	pop    ecx
  403a73:	(bad)  
  403a74:	fisttp QWORD PTR [ebp-0xa]
  403a77:	test   eax,0x33232507
  403a7c:	jp     0x403a2e
  403a7e:	inc    eax
  403a7f:	sbb    BYTE PTR [edi-0x12],ch
  403a82:	inc    ebx
  403a83:	popa   
  403a84:	mov    BYTE PTR [ecx],0x81
  403a87:	xchg   edi,eax
  403a88:	xchg   edx,eax
  403a89:	fnstsw WORD PTR [edi]
  403a8b:	mov    edx,0x6b090532
  403a90:	shl    bh,0xea
  403a93:	(bad)  
  403a94:	mov    ah,0x15
  403a96:	aam    0x11
  403a98:	stos   BYTE PTR es:[edi],al
  403a99:	xchg   ebx,eax
  403a9a:	sti    
  403a9b:	and    BYTE PTR [esi],bh
  403a9d:	and    DWORD PTR [ebp+eax*2+0x7],esp
  403aa1:	out    0xd3,al
  403aa3:	adc    DWORD PTR [eax],esp
  403aa5:	aaa    
  403aa6:	fdivr  QWORD PTR [edx-0x371ca468]
  403aac:	lods   eax,DWORD PTR ds:[esi]
  403aad:	sbb    eax,0xd6919b5d
  403ab2:	cmp    esp,DWORD PTR [ecx]
  403ab4:	aam    0xea
  403ab6:	es jle 0x403a91
  403ab9:	or     BYTE PTR [eax],ch
  403abb:	loopne 0x403b1a
  403abd:	dec    ecx
  403abe:	and    edi,DWORD PTR [eax]
  403ac0:	leave  
  403ac1:	cld    
  403ac2:	lock jno 0x403ac0
  403ac5:	in     eax,0xe0
  403ac7:	xchg   ebp,eax
  403ac8:	adc    al,dh
  403aca:	aaa    
  403acb:	xchg   esp,eax
  403acc:	pop    ss
  403acd:	mov    eax,ds:0x2ba81850
  403ad2:	lock stos BYTE PTR es:[edi],al
  403ad4:	(bad)  
  403ad5:	std    
  403ad6:	lds    edx,FWORD PTR [edi-0x68b8adff]
  403adc:	fistp  DWORD PTR [edx-0x6c6f60e2]
  403ae2:	or     al,0x8b
  403ae4:	push   cs
  403ae5:	sti    
  403ae6:	xlat   BYTE PTR ds:[ebx]
  403ae7:	jp     0x403b25
  403ae9:	sti    
  403aea:	(bad)  
  403aeb:	ja     0x403a6e
  403aed:	mov    ebx,0x60c1e4ec
  403af2:	sbb    al,0xc0
  403af4:	(bad)  
  403af6:	les    ecx,FWORD PTR [ebx+0x1a]
  403af9:	lods   al,BYTE PTR ds:[esi]
  403afa:	dec    edi
  403afb:	ds push esp
  403afd:	cdq    
  403afe:	xor    DWORD PTR [eax-0x52],ebx
  403b01:	jb     0x403b4f
  403b03:	dec    ecx
  403b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b05:	adc    al,0xa3
  403b07:	xor    BYTE PTR [esi-0xd09da6d],0x8a
  403b0e:	push   edi
  403b0f:	or     BYTE PTR [edi],ah
  403b11:	and    eax,0x8e4ee24f
  403b16:	mov    bh,0x24
  403b18:	(bad)  
  403b19:	mov    dh,0xce
  403b1b:	mov    ch,0x48
  403b1d:	mov    bh,0x43
  403b1f:	(bad)  
  403b21:	mov    BYTE PTR [esi],cl
  403b23:	dec    edx
  403b24:	das    
  403b25:	sub    edi,DWORD PTR [edi]
  403b27:	and    BYTE PTR [ecx],ch
  403b29:	test   DWORD PTR [edi+0x10],edi
  403b2c:	call   0x3ad9:0x1a16bf6f
  403b33:	pop    ebp
  403b34:	inc    ebx
  403b35:	fcomp  QWORD PTR [edi+0x7f]
  403b38:	mov    ch,BYTE PTR [ebp+0x5e]
  403b3b:	push   esp
  403b3c:	push   ds
  403b3d:	out    0x1c,al
  403b3f:	repz sbb esi,DWORD PTR [esi]
  403b42:	sub    eax,0x868c9049
  403b47:	or     eax,0x7bf8f618
  403b4c:	imul   esp,DWORD PTR [edx+0x3bc3713f],0xffffffcd
  403b53:	outs   dx,DWORD PTR ds:[esi]
  403b54:	and    cl,cl
  403b56:	adc    BYTE PTR [eax-0x71],0x6c
  403b5a:	add    DWORD PTR [ebx],ebx
  403b5c:	js     0x403bb9
  403b5e:	jmp    0x1dfb:0x50e12163
  403b65:	arpl   WORD PTR [eax+0x3dfd6321],sp
  403b6b:	aad    0x6a
  403b6d:	adc    ch,cl
  403b6f:	push   ebx
  403b70:	in     eax,0x82
  403b72:	pop    ds
  403b73:	mov    eax,ds:0x31c675f3
  403b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b79:	mov    edi,0xb11b153
  403b7e:	xchg   edi,eax
  403b7f:	cmp    DWORD PTR [edi],esp
  403b81:	mov    DWORD PTR [eax-0xb26fc50],esi
  403b87:	inc    esi
  403b88:	xchg   esp,eax
  403b89:	and    eax,0x4df7ce84
  403b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b8f:	mov    DWORD PTR [ecx-0x5c],ebx
  403b92:	mov    edi,DWORD PTR [esi]
  403b94:	fwait
  403b95:	add    al,0xed
  403b97:	dec    ebx
  403b98:	retf   
  403b99:	or     BYTE PTR [ebx+ecx*2+0x700f7dd1],dh
  403ba0:	xchg   dl,bh
  403ba2:	stos   DWORD PTR es:[edi],eax
  403ba3:	pop    edx
  403ba4:	sahf   
  403ba5:	aad    0x4c
  403ba7:	scas   al,BYTE PTR es:[edi]
  403ba8:	popf   
  403ba9:	shl    DWORD PTR [edx],cl
  403bab:	push   edi
  403bac:	ds mov BYTE PTR es:[edx-0x2f4c8a55],bh
  403bb4:	add    al,0x5f
  403bb6:	push   esi
  403bb7:	dec    ebx
  403bb8:	or     ebx,ecx
  403bba:	imul   DWORD PTR [ebx-0x28ee181a]
  403bc0:	inc    ebp
  403bc1:	inc    esp
  403bc2:	pop    ebx
  403bc3:	inc    ebx
  403bc4:	pop    esp
  403bc5:	jp     0x403bad
  403bc7:	adc    DWORD PTR [esi],ecx
  403bc9:	jne    0x403bf7
  403bcb:	std    
  403bcc:	push   edx
  403bcd:	fwait
  403bce:	enter  0xd0aa,0x41
  403bd2:	aas    
  403bd3:	push   edx
  403bd4:	mov    ch,BYTE PTR [esi+0x44]
  403bd7:	sub    edx,0xedf705bc
  403bdd:	jge    0x403be9
  403bdf:	adc    al,0xa5
  403be1:	(bad)  
  403be2:	push   eax
  403be3:	pushf  
  403be4:	arpl   WORD PTR [edi+0x7dd0a748],sp
  403bea:	dec    ebx
  403bec:	pop    ecx
  403bed:	push   ss
  403bee:	ja     0x403c0e
  403bf0:	inc    ecx
  403bf1:	into   
  403bf2:	(bad)  
  403bf4:	repnz (bad) 
  403bf6:	fsub   DWORD PTR [edx+ebp*8+0x2c959206]
  403bfd:	jmp    0xc42d6b1f
  403c02:	out    dx,al
  403c03:	stos   BYTE PTR es:[edi],al
  403c04:	cmp    al,0xe0
  403c06:	and    DWORD PTR [edi],ebx
  403c08:	out    0x8e,eax
  403c0a:	cmp    BYTE PTR [ebp+0x38],0x8e
  403c0e:	nop
  403c0f:	pop    edi
  403c10:	adc    ecx,edx
  403c12:	into   
  403c13:	xchg   edx,eax
  403c14:	aas    
  403c15:	imul   ebx,ecx,0x8ee32f4d
  403c1b:	inc    eax
  403c1c:	or     bh,BYTE PTR [ebx]
  403c1e:	xchg   esi,eax
  403c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c20:	aaa    
  403c21:	bound  ebp,QWORD PTR [edi-0x73]
  403c24:	push   ebp
  403c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c26:	push   ecx
  403c27:	jmp    0x9058:0xcbad193c
  403c2e:	mov    edi,0xac88859e
  403c33:	cmp    DWORD PTR [esp-0x60e1aee3],edi
  403c3a:	(bad)  
  403c3b:	sub    BYTE PTR [ebx-0x4f33644f],cl
  403c41:	retf   0x4853
  403c44:	loopne 0x403c46
  403c46:	pop    esp
  403c47:	ficom  WORD PTR [eax]
  403c49:	iret   
  403c4a:	inc    DWORD PTR [ecx]
  403c4c:	(bad)  
  403c4d:	mov    ebp,0x1952ac12
  403c52:	mov    dh,0x9c
  403c54:	or     eax,0x606c2b3c
  403c59:	push   ss
  403c5a:	pop    ds
  403c5b:	jmp    0xbc2c6249
  403c60:	inc    edi
  403c61:	fwait
  403c62:	cmp    ch,al
  403c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c65:	loope  0x403cd1
  403c67:	mov    dl,0x21
  403c69:	and    BYTE PTR [esi+ecx*2+0x6a3ad16f],0xfc
  403c71:	push   ebp
  403c72:	push   ebp
  403c73:	jns    0x403c23
  403c75:	(bad)
  403c78:	dec    ebp
  403c79:	repz iret 
  403c7b:	sub    DWORD PTR ds:0x1d86c37b,edi
  403c81:	jno    0x403cb3
  403c83:	jno    0x403c8c
  403c85:	push   edi
  403c86:	push   cs
  403c87:	std    
  403c88:	test   DWORD PTR [ebp-0x62],eax
  403c8b:	ds test al,0x19
  403c8e:	ja     0x403c18
  403c90:	jne    0x403c43
  403c92:	in     eax,0x17
  403c94:	seta   al
  403c97:	add    al,0x0
  403c99:	mov    es,WORD PTR [ecx+0x1f9d7461]
  403c9f:	cmp    edi,DWORD PTR [eax+eax*4]
  403ca2:	lock in al,dx
  403ca4:	pop    es
  403ca5:	out    0xba,eax
  403ca7:	dec    esp
  403ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ca9:	imul   ecx,esp,0x65
  403cac:	ret    0x84d3
  403caf:	mov    eax,0x5e3801c1
  403cb4:	adc    BYTE PTR [esi-0x39ad9dfc],0x1e
  403cbb:	popf   
  403cbc:	into   
  403cbd:	arpl   WORD PTR [edx-0x67271008],bp
  403cc3:	dec    ebx
  403cc4:	adc    al,0x45
  403cc6:	xchg   ecx,eax
  403cc7:	dec    ebp
  403cc8:	inc    esi
  403cc9:	ss xor ebx,ebx
  403ccc:	call   0xa6331f44
  403cd1:	(bad)  
  403cd3:	jmp    0xedf23ef3
  403cd8:	pop    ds
  403cd9:	ds xchg edi,eax
  403cdb:	(bad)  
  403cdc:	neg    DWORD PTR [esi-0x72]
  403cdf:	in     eax,dx
  403ce0:	out    dx,eax
  403ce1:	gs ret 
  403ce3:	(bad)  
  403ce4:	or     DWORD PTR [ebp-0x1f575d26],ebx
  403cea:	sbb    al,0xe
  403cec:	dec    edi
  403ced:	or     BYTE PTR [ebp-0x284aa2d],dl
  403cf3:	mov    esi,0xa32a66d1
  403cf8:	std    
  403cf9:	pop    ebp
  403cfa:	call   0xc80742f2
  403cff:	in     eax,0x3b
  403d01:	mov    ecx,0xe06c7428
  403d06:	imul   ebp,esi,0x356d58d7
  403d0c:	mov    DWORD PTR [eax+0x17],edx
  403d0f:	sub    eax,DWORD PTR [ebx-0x4684b1de]
  403d15:	into   
  403d16:	push   ebp
  403d17:	push   ecx
  403d18:	pop    eax
  403d19:	push   0xffffff94
  403d1b:	dec    esp
  403d1c:	cdq    
  403d1d:	mov    ebp,0x4b45c26d
  403d22:	or     al,BYTE PTR [edx]
  403d24:	aas    
  403d25:	nop
  403d26:	pop    es
  403d27:	mov    ecx,0x9b8f26b5
  403d2c:	sbb    bh,dl
  403d2e:	bnd jno 0x403d32
  403d31:	push   es
  403d32:	push   eax
  403d33:	fwait
  403d34:	sbb    al,0x5c
  403d36:	ins    BYTE PTR es:[edi],dx
  403d37:	mov    bl,0x2
  403d39:	or     cl,cl
  403d3b:	loop   0x403d76
  403d3d:	shr    BYTE PTR ds:[eax+esi*2+0x6a],0xd4
  403d43:	movzx  ebp,BYTE PTR [edi]
  403d46:	enter  0x7a86,0x30
  403d4a:	mov    ebp,DWORD PTR [eax]
  403d4c:	ret    
  403d4d:	dec    eax
  403d4e:	call   FWORD PTR [edi-0x3ade80eb]
  403d54:	nop
  403d55:	leave  
  403d56:	inc    edi
  403d57:	add    al,0xfb
  403d59:	jg     0x403dc1
  403d5b:	lea    ecx,[ebx+0x45222356]
  403d61:	mov    cl,0x1e
  403d63:	loop   0x403d48
  403d65:	cmp    eax,ecx
  403d67:	mov    eax,ds:0x99c12ac7
  403d6c:	retf   0xe314
  403d6f:	sub    ebp,DWORD PTR [edx+0xbbe267e]
  403d75:	pop    ds
  403d76:	xchg   ecx,eax
  403d77:	mov    ch,0xab
  403d79:	xor    al,0x40
  403d7b:	loop   0x403dd4
  403d7d:	dec    edi
  403d7e:	test   BYTE PTR fs:[edx+0x3b],0x83
  403d83:	arpl   sp,dx
  403d85:	add    ebx,DWORD PTR [ebx-0x3b]
  403d88:	dec    ebx
  403d89:	cs retf 0x2514
  403d8d:	or     bl,dh
  403d8f:	or     eax,0x1d4c1b9b
  403d94:	push   0x3c
  403d96:	cli    
  403d97:	clc    
  403d98:	int    0x44
  403d9a:	(bad)  
  403d9b:	push   ecx
  403d9c:	std    
  403d9d:	and    dh,bl
  403d9f:	stc    
  403da0:	pop    esp
  403da1:	and    al,BYTE PTR [esi+ebx*4]
  403da4:	or     dh,0xee
  403da7:	xchg   ecx,eax
  403da8:	cld    
  403da9:	push   ds
  403daa:	fnstsw WORD PTR [esi+edi*8]
  403dad:	aam    0x71
  403daf:	cwde   
  403db0:	sar    dh,1
  403db2:	fldcw  WORD PTR [ebx+0x44]
  403db5:	mov    ?,WORD PTR [ebx-0x7c0230b0]
  403dbb:	(bad)  
  403dbc:	das    
  403dbd:	sub    DWORD PTR gs:[edx-0x7b],ebx
  403dc1:	icebp  
  403dc2:	inc    ebp
  403dc3:	scas   al,BYTE PTR es:[edi]
  403dc4:	pop    ebp
  403dc5:	push   ss
  403dc6:	cwde   
  403dc7:	sbb    eax,0x81d69531
  403dcc:	retf   0xbe18
  403dcf:	iret   
  403dd0:	push   ds
  403dd1:	data16 fcomp QWORD PTR [ebx]
  403dd4:	sub    eax,0x201ef23f
  403dd9:	popa   
  403dda:	xchg   ebp,ecx
  403ddc:	test   BYTE PTR [eax-0x32],cl
  403ddf:	push   edx
  403de0:	mov    esp,ebp
  403de2:	repnz inc esi
  403de4:	and    al,BYTE PTR [esi]
  403de6:	sub    eax,0xf392776e
  403deb:	cld    
  403dec:	test   eax,0x29d3953e
  403df1:	push   ebp
  403df2:	and    al,0xa1
  403df4:	mov    ecx,0x991d9c2f
  403df9:	sbb    DWORD PTR [edi-0x30],ebp
  403dfc:	push   esi
  403dfd:	adc    bl,BYTE PTR [edi-0x31]
  403e00:	push   0x2364c082
  403e05:	call   0x964e:0xe5475627
  403e0c:	cld    
  403e0d:	(bad)  [edi+0x24]
  403e10:	jle    0x403dc1
  403e12:	mov    dh,0xae
  403e14:	sub    al,0xbd
  403e16:	cwde   
  403e17:	mov    edx,0x4cfb6cf3
  403e1c:	push   ss
  403e1d:	retf   0xd046
  403e20:	add    eax,0xb43b5ba4
  403e25:	mov    esp,DWORD PTR [edx+0x76]
  403e28:	mov    eax,0x8b992715
  403e2d:	outs   dx,DWORD PTR ds:[esi]
  403e2e:	sti    
  403e2f:	or     eax,0x27a0e55a
  403e34:	(bad)  
  403e35:	(bad)  
  403e36:	cmp    al,0x28
  403e38:	cmp    esp,DWORD PTR [eax]
  403e3a:	dec    ebx
  403e3b:	(bad)  
  403e3c:	cld    
  403e3d:	and    ebx,DWORD PTR [ebx-0x6b72fbb6]
  403e43:	inc    ebx
  403e44:	stc    
  403e45:	sbb    BYTE PTR [ecx-0xc89d235],ch
  403e4b:	mov    edx,ebx
  403e4d:	fistp  DWORD PTR [eax-0x5c982f8d]
  403e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e55:	pop    edx
  403e56:	test   DWORD PTR [edi+0x61],ebx
  403e59:	dec    ebx
  403e5a:	push   es
  403e5b:	aas    
  403e5c:	hlt    
  403e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e5e:	mov    bl,0xa9
  403e60:	jge    0x403de6
  403e62:	inc    ecx
  403e63:	sbb    cl,BYTE PTR [ecx-0x181e2afa]
  403e69:	or     dh,BYTE PTR [ecx+edx*8-0x47]
  403e6d:	enter  0x92cf,0xbe
  403e71:	and    al,0xf1
  403e73:	adc    DWORD PTR [esi-0x79],esi
  403e76:	scas   eax,DWORD PTR es:[edi]
  403e77:	and    BYTE PTR [esi],ch
  403e79:	xor    BYTE PTR [edx-0x1e8e191c],0x97
  403e80:	pop    ss
  403e81:	aam    0x1b
  403e83:	cwde   
  403e84:	retf   
  403e85:	inc    edx
  403e86:	fsubr  QWORD PTR [edx]
  403e88:	out    dx,eax
  403e89:	ins    BYTE PTR es:[edi],dx
  403e8a:	cmp    eax,0x60f53110
  403e8f:	mov    BYTE PTR [eax+0x6dc7cf5b],dl
  403e95:	aad    0x55
  403e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e98:	fisub  DWORD PTR [ebx+0x5a5fc580]
  403e9e:	mov    bl,0x32
  403ea0:	nop
  403ea1:	sbb    DWORD PTR [ebx-0x7ab980d9],esp
  403ea7:	lea    eax,[eax]
  403ea9:	retf   0x88ab
  403eac:	mov    ds:0xd1883fa,al
  403eb1:	cdq    
  403eb2:	cmp    BYTE PTR [ecx],al
  403eb4:	sbb    BYTE PTR [eax+ebx*1-0x2c],bh
  403eb8:	pop    edx
  403eb9:	nop
  403eba:	ja     0x403ef5
  403ebc:	add    ah,BYTE PTR [ecx-0x42]
  403ebf:	push   cs
  403ec0:	adc    ch,bh
  403ec2:	data16 mov BYTE PTR [ebx],dh
  403ec5:	inc    edx
  403ec6:	jo     0x403f0b
  403ec8:	loop   0x403eaf
  403eca:	bound  ebx,QWORD PTR [edx+0x64]
  403ecd:	push   ds
  403ece:	shl    DWORD PTR [eax+0x14],cl
  403ed1:	mov    BYTE PTR [ebx+edi*4-0x4031b8d0],cl
  403ed8:	nop
  403ed9:	imul   ecx,DWORD PTR [eax-0x1b],0x6770bede
  403ee0:	fmul   QWORD PTR [edi-0x2e]
  403ee3:	std    
  403ee4:	arpl   bp,dx
  403ee6:	mov    ch,0x1b
  403ee8:	inc    ebx
  403ee9:	gs nop
  403eeb:	pop    edi
  403eec:	lods   eax,DWORD PTR ds:[esi]
  403eed:	pusha  
  403eee:	in     eax,0xc8
  403ef0:	sub    DWORD PTR [ebx+0x5a],ebx
  403ef3:	(bad)  
  403ef5:	xchg   edi,eax
  403ef6:	in     al,dx
  403ef7:	arpl   di,ax
  403ef9:	and    eax,0x2f14ccc9
  403efe:	add    edx,esi
  403f00:	pop    ebx
  403f01:	cmp    DWORD PTR [ecx-0x63],0xffffffe4
  403f05:	pop    ebp
  403f06:	pop    eax
  403f07:	out    dx,eax
  403f08:	jno    0x403ee8
  403f0a:	mov    DWORD PTR [ebx],edi
  403f0c:	arpl   WORD PTR gs:[ecx],bp
  403f0f:	mov    al,0x5f
  403f11:	sar    BYTE PTR ds:0x12712551,1
  403f17:	sar    BYTE PTR [ebx*4-0x76953754],cl
  403f1e:	test   DWORD PTR [edx],eax
  403f20:	xor    ebp,edi
  403f22:	in     al,dx
  403f23:	mov    cl,0xfe
  403f25:	mov    dl,0xd
  403f27:	mov    DWORD PTR [ebx-0x39a03c29],edx
  403f2d:	fs mov dh,bh
  403f30:	sbb    al,0xb6
  403f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f33:	inc    eax
  403f34:	and    al,0x68
  403f36:	jp     0x403f11
  403f38:	nop
  403f39:	inc    esp
  403f3a:	jp     0x403f43
  403f3c:	push   esi
  403f3d:	(bad)  
  403f3e:	jmp    0xb7429594
  403f43:	jle    0x403f5d
  403f45:	jae    0x403f74
  403f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f48:	jmp    0xa689faab
  403f4d:	fwait
  403f4e:	push   es
  403f4f:	ficom  WORD PTR [eax+0x65]
  403f52:	test   al,0xbd
  403f54:	sub    DWORD PTR [edx+eax*4],ebp
  403f57:	jne    0x403f5a
  403f59:	lds    edx,FWORD PTR [ebp-0x57]
  403f5c:	sub    BYTE PTR [ecx+edi*1],bh
  403f5f:	les    edi,FWORD PTR [esp+edi*4+0x45]
  403f63:	inc    esi
  403f64:	push   es
  403f65:	mov    bl,0x97
  403f67:	sar    BYTE PTR [edx+0x3d],1
  403f6a:	cmp    edi,DWORD PTR gs:[ecx+0x3c]
  403f6e:	sbb    bl,BYTE PTR [esi-0x2efb1ca4]
  403f74:	in     eax,dx
  403f75:	add    dh,dl
  403f77:	daa    
  403f78:	sbb    al,0xe0
  403f7a:	pop    edx
  403f7b:	lods   al,BYTE PTR ds:[esi]
  403f7c:	jnp    0x403fcd
  403f7e:	push   ds
  403f7f:	sti    
  403f80:	nop
  403f81:	imul   ecx,DWORD PTR [ecx+0x4c],0x9e41223c
  403f88:	icebp  
  403f89:	mov    edi,0x82296f6
  403f8e:	test   DWORD PTR [eax],esi
  403f90:	jmp    0x403f5c
  403f92:	dec    edi
  403f93:	xchg   esi,eax
  403f94:	pop    eax
  403f95:	adc    eax,0x69081be6
  403f9a:	lds    ebp,FWORD PTR [ebx+edx*1-0x4b]
  403f9e:	pop    es
  403f9f:	cdq    
  403fa0:	test   al,0x7d
  403fa2:	dec    edx
  403fa3:	pop    ebx
  403fa4:	push   ds
  403fa5:	mov    ds:0x62a1890e,al
  403faa:	mov    esp,ss
  403fac:	jp     0x403f9e
  403fae:	in     al,0xb5
  403fb0:	ins    BYTE PTR es:[edi],dx
  403fb1:	fist   WORD PTR [edi+eiz*2+0x208b7a94]
  403fb8:	sbb    BYTE PTR [ecx],cl
  403fba:	or     ecx,DWORD PTR [ecx-0x5]
  403fbd:	sub    DWORD PTR [esi],esp
  403fbf:	dec    ebp
  403fc0:	adc    al,BYTE PTR [esi-0x6559f44b]
  403fc6:	fsubr  DWORD PTR [eax+0x155dd574]
  403fcc:	cwde   
  403fcd:	sub    DWORD PTR [ebp+0x3f46e622],ebx
  403fd3:	adc    BYTE PTR [ebp+0x4d3699c0],ch
  403fd9:	jne    0x403f6d
  403fdb:	xchg   edi,eax
  403fdc:	push   ebx
  403fdd:	(bad)  
  403fde:	mov    ds:0xf90c7d4c,al
  403fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fe4:	push   ss
  403fe5:	aam    0xab
  403fe7:	xchg   ebx,eax
  403fe8:	(bad)  
  403fe9:	in     al,dx
  403fea:	iret   
  403feb:	test   al,0x7
  403fed:	sbb    eax,ecx
  403fef:	mov    eax,DWORD PTR [esi+0x573ddd1f]
  403ff5:	xor    eax,0xe0a5d2f6
  403ffa:	cli    
  403ffb:	jl     0x404069
  403ffd:	addr16 mov edx,0x37bc5d67
  404003:	in     eax,0x38
  404005:	popa   
  404006:	scas   al,BYTE PTR es:[edi]
  404007:	sbb    cl,BYTE PTR [edi-0x133d97e9]
  40400d:	add    BYTE PTR [esi+0x60479883],bl
  404013:	pop    ebp
  404014:	inc    edx
  404015:	fist   DWORD PTR [edx]
  404017:	adc    al,0x2f
  404019:	out    dx,al
  40401a:	add    ebp,esp
  40401c:	pop    edi
  40401d:	jecxz  0x404091
  40401f:	push   0xffffffac
  404021:	xor    al,0x3f
  404023:	dec    edi
  404024:	and    ecx,esp
  404026:	mov    edi,0xf7d4fa65
  40402b:	add    BYTE PTR [eax-0x4f1741f4],bl
  404031:	scas   eax,DWORD PTR es:[edi]
  404032:	sbb    BYTE PTR [ecx+edx*8],ch
  404035:	mov    eax,0x7f70f221
  40403a:	mov    esi,0xa536e1a4
  40403f:	sub    ebp,DWORD PTR [edx+0x597dfb23]
  404045:	sbb    eax,0x87872cbb
  40404a:	pop    ds
  40404b:	shr    BYTE PTR [ecx-0x48],0xf7
  40404f:	mov    ebp,0xee07b6f0
  404054:	pusha  
  404055:	test   BYTE PTR [ecx+0x5672efeb],bh
  40405b:	add    eax,edx
  40405d:	scas   al,BYTE PTR es:[edi]
  40405e:	inc    esp
  40405f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404060:	fstp   DWORD PTR [edx+ebx*8+0x3f]
  404064:	xor    eax,0x5c7c1f8a
  404069:	(bad)  
  40406b:	mov    ebx,0xd9e13e07
  404070:	fsub   DWORD PTR [edi]
  404072:	test   eax,0xfb04c711
  404077:	jbe    0x40404e
  404079:	mov    bl,0xa3
  40407b:	mov    bh,0x53
  40407d:	lea    edi,[edi+ebp*4+0x4a892c5a]
  404084:	xor    ebx,DWORD PTR [eax]
  404086:	cmp    cl,BYTE PTR [ecx+0x6fa5f718]
  40408c:	sbb    al,0x88
  40408e:	imul   ecx,DWORD PTR [ebx-0x4122356e],0x75c996bc
  404098:	mov    ds:0x4035cb40,eax
  40409d:	(bad)  
  40409e:	sti    
  40409f:	outs   dx,DWORD PTR ds:[esi]
  4040a0:	ficomp WORD PTR [ebx-0x2bdf86c1]
  4040a6:	sbb    DWORD PTR [eax],eax
  4040a8:	pusha  
  4040a9:	cmp    eax,0xd101898c
  4040ae:	inc    edx
  4040af:	add    al,0x96
  4040b1:	jecxz  0x4040fd
  4040b3:	sub    al,0x5d
  4040b5:	inc    eax
  4040b6:	iret   
  4040b7:	and    BYTE PTR [eax+0x674710f7],al
  4040bd:	(bad)  
  4040be:	leave  
  4040bf:	xchg   al,cl
  4040c1:	data16 sbb al,0x9c
  4040c4:	enter  0xf043,0xd8
  4040c8:	in     al,dx
  4040c9:	(bad)  
  4040ca:	rcl    ebx,cl
  4040cc:	xor    ebx,edi
  4040ce:	bound  ebx,QWORD PTR [ebp-0x2c]
  4040d1:	adc    al,0x3d
  4040d3:	push   esp
  4040d4:	scas   al,BYTE PTR es:[edi]
  4040d5:	jns    0x40409d
  4040d7:	xor    dh,ah
  4040d9:	push   esp
  4040da:	loopne 0x4040f5
  4040dc:	imul   ebp,DWORD PTR [edi-0x37cd0798],0xffffffa3
  4040e3:	dec    edx
  4040e4:	cmp    BYTE PTR [ecx-0x7c],ch
  4040e7:	enter  0x5659,0x7e
  4040eb:	adc    eax,0xda1d9c80
  4040f0:	clc    
  4040f1:	sbb    BYTE PTR [ebp+0x54],bh
  4040f4:	ret    0xa1d2
  4040f7:	rcl    DWORD PTR [edx],0x5e
  4040fa:	test   DWORD PTR [edi],edx
  4040fc:	(bad)  
  4040fd:	push   eax
  4040fe:	mov    eax,0xe19f3eac
  404103:	or     ecx,ebp
  404105:	es call 0xe9c7:0xe14aa35f
  40410d:	rcl    ah,1
  40410f:	loopne 0x404124
  404111:	mov    esp,0x5707e5de
  404116:	nop
  404117:	xor    al,0xe7
  404119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40411a:	std    
  40411b:	repnz xor edi,ebp
  40411e:	mov    esi,0x30527903
  404123:	adc    dh,BYTE PTR [edi+0x3e]
  404126:	popf   
  404127:	dec    ebx
  404128:	dec    edi
  404129:	clc    
  40412a:	ffree  st(0)
  40412c:	xor    bl,ah
  40412e:	adc    BYTE PTR [esi],ch
  404130:	(bad)  
  404131:	push   edi
  404132:	sub    DWORD PTR [edx],ecx
  404134:	sub    DWORD PTR [edx+0x73],esp
  404137:	test   al,0xf1
  404139:	dec    esp
  40413a:	or     edi,DWORD PTR [edi+0x74]
  40413d:	mov    eax,0xef852f3a
  404142:	sub    al,0x2b
  404144:	cmp    bh,BYTE PTR [ecx+0x45eca5eb]
  40414a:	push   ecx
  40414b:	mov    eax,ds:0xe40403c9
  404150:	and    al,0x20
  404152:	(bad)  
  404153:	sub    al,0x8b
  404155:	mov    eax,ds:0xfe54283e
  40415a:	sahf   
  40415b:	xchg   esi,eax
  40415c:	scas   eax,DWORD PTR es:[edi]
  40415d:	adc    ah,al
  40415f:	pop    ds
  404160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404161:	stos   BYTE PTR es:[edi],al
  404162:	pavgw  mm3,QWORD PTR [ebx+0x61]
  404166:	mov    ebp,0xd90b8dc6
  40416b:	jecxz  0x404185
  40416d:	sub    DWORD PTR [edi],edx
  40416f:	and    esi,edx
  404171:	fcmovne st,st(5)
  404173:	mov    ?,esp
  404175:	sub    BYTE PTR [ecx],ch
  404177:	retf   
  404178:	jb     0x404160
  40417a:	out    dx,al
  40417b:	cli    
  40417c:	in     al,dx
  40417d:	shr    DWORD PTR [esi-0x339dfbb7],1
  404183:	mov    ebp,0xaa3ebdcf
  404188:	sbb    DWORD PTR [ebp+0xc5c78d9],ecx
  40418e:	outs   dx,DWORD PTR ds:[esi]
  40418f:	sbb    BYTE PTR [ebp+0x3bb85ac9],al
  404195:	dec    ecx
  404196:	mov    cl,0xe7
  404198:	shl    BYTE PTR [ecx],0x40
  40419b:	dec    esp
  40419c:	cmp    eax,0x76b60137
  4041a1:	push   0xffffff95
  4041a3:	ss push esi
  4041a5:	or     ah,cl
  4041a7:	push   ebx
  4041a8:	ins    BYTE PTR es:[edi],dx
  4041a9:	dec    BYTE PTR [ecx]
  4041ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ac:	in     al,dx
  4041ad:	addr16 push eax
  4041af:	mov    edi,0x9102272b
  4041b4:	push   esi
  4041b5:	test   DWORD PTR [edi],ebp
  4041b7:	je     0x4041e8
  4041b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ba:	sbb    dh,BYTE PTR [edi-0x5f]
  4041bd:	nop
  4041be:	pop    eax
  4041bf:	sahf   
  4041c0:	ret    
  4041c1:	aam    0x3
  4041c3:	loope  0x4041d6
  4041c5:	push   esi
  4041c6:	pop    edi
  4041c7:	mov    dh,BYTE PTR [edi+eax*1+0x5e]
  4041cb:	js     0x4041eb
  4041cd:	fsubr  QWORD PTR [esi+edx*8+0x36]
  4041d1:	mov    ds:0x34b1c71,eax
  4041d6:	or     cl,BYTE PTR [eax+0x7b0a65c9]
  4041dc:	cli    
  4041dd:	adc    al,0x4
  4041df:	mov    al,0x14
  4041e1:	lea    edx,[eax]
  4041e3:	inc    edi
  4041e4:	pop    edi
  4041e5:	retf   
  4041e6:	jns    0x4041b9
  4041e8:	mov    ds:0xdbf29ac7,al
  4041ed:	xchg   ecx,eax
  4041ee:	cmc    
  4041ef:	mov    esi,DWORD PTR [esi+0xc]
  4041f2:	jne    0x404234
  4041f4:	and    eax,DWORD PTR [ebp-0x31c971a4]
  4041fa:	xor    BYTE PTR [edi-0x6e311708],bl
  404200:	mov    cl,0x64
  404202:	xchg   DWORD PTR [edx],ecx
  404204:	push   cs
  404205:	cmc    
  404206:	dec    ebx
  404207:	mov    bl,0x5
  404209:	std    
  40420a:	cmp    ebx,DWORD PTR [eax-0x5bd0f73b]
  404210:	bnd jg 0x40424e
  404213:	out    dx,eax
  404214:	ds inc edi
  404216:	pop    edx
  404217:	ss inc edx
  404219:	mov    bh,0x4
  40421b:	and    BYTE PTR [ebx+0x5130dd23],0x61
  404222:	and    al,0x91
  404224:	(bad)  
  404225:	mov    ds,edx
  404227:	xor    ebx,ecx
  404229:	retf   0x4ba
  40422c:	add    cl,ah
  40422e:	popa   
  40422f:	(bad)  
  404230:	cmp    DWORD PTR [eax+0x5c],ebx
  404233:	outs   dx,DWORD PTR ds:[esi]
  404234:	dec    ecx
  404235:	mov    al,0x59
  404237:	scas   al,BYTE PTR es:[edi]
  404238:	call   0xd04ede4f
  40423d:	loop   0x404280
  40423f:	nop
  404240:	mov    cs,eax
  404242:	and    al,0x45
  404244:	inc    esi
  404245:	jp     0x4041d9
  404247:	inc    eax
  404248:	mov    BYTE PTR [ebx],ch
  40424a:	ss pop ds
  40424c:	enter  0x1932,0x29
  404250:	fs out 0x5b,al
  404253:	push   eax
  404254:	mul    ebp
  404256:	rol    BYTE PTR [edi-0x666cc41],cl
  40425c:	dec    ebp
  40425d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40425e:	jbe    0x4042a8
  404260:	jnp    0x404263
  404262:	pop    eax
  404263:	xchg   edx,eax
  404264:	mov    ebp,0x5d3902a9
  404269:	sub    esp,DWORD PTR [ebx]
  40426b:	ror    DWORD PTR [ebx],cl
  40426d:	and    al,0xcb
  40426f:	shl    BYTE PTR [eax+edx*2-0x55c16dd0],1
  404276:	xor    eax,0xf2317e16
  40427b:	and    al,0xad
  40427d:	mov    esi,0x6f7e27db
  404282:	inc    esp
  404283:	dec    ebp
  404284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404285:	enter  0x7831,0x7b
  404289:	xchg   esp,eax
  40428a:	jo     0x4042a6
  40428c:	adc    ah,BYTE PTR [esi+0x7382f21]
  404292:	push   ds
  404293:	mov    ch,0xb9
  404295:	das    
  404296:	adc    eax,esi
  404298:	(bad)  
  404299:	pop    ebx
  40429a:	adc    ah,BYTE PTR [eax-0x721810e1]
  4042a0:	leave  
  4042a1:	sub    edx,esp
  4042a3:	mov    al,0xb1
  4042a5:	fs int3 
  4042a7:	call   0x92bb:0x6b2b3677
  4042ae:	stos   DWORD PTR es:[edi],eax
  4042af:	out    0xe8,eax
  4042b1:	add    eax,0x1f6e592e
  4042b6:	push   0x8b769e6d
  4042bb:	(bad)  
  4042bc:	xchg   edi,eax
  4042bd:	xor    al,0x80
  4042bf:	or     DWORD PTR [edi],esi
  4042c1:	test   WORD PTR [ebp-0x6876383],0x1e19
  4042ca:	repnz mov DWORD PTR [eax],ebx
  4042cd:	inc    DWORD PTR [esi-0x6e]
  4042d0:	add    BYTE PTR [eax-0x60794667],dh
  4042d6:	adc    BYTE PTR [ecx],0xbf
  4042d9:	test   eax,0xc61edde0
  4042de:	and    DWORD PTR [ebp-0x19],ebx
  4042e1:	std    
  4042e2:	xor    dh,BYTE PTR [esi]
  4042e4:	ss (bad) 
  4042e6:	(bad)  
  4042e7:	or     ebp,DWORD PTR [edx-0x2]
  4042ea:	push   esp
  4042eb:	push   edx
  4042ec:	test   al,0x8a
  4042ee:	(bad)  
  4042ef:	call   FWORD PTR [ecx*4-0x59a8e188]
  4042f6:	mov    bh,0x16
  4042f8:	mov    ecx,0xab91610a
  4042fd:	cmp    BYTE PTR [esi],dl
  4042ff:	fwait
  404300:	mov    eax,0xcbac6420
  404305:	pop    es
  404306:	sar    BYTE PTR [eax],1
  404308:	sub    eax,0x311b7d33
  40430d:	outs   dx,BYTE PTR ds:[esi]
  40430e:	data16 jno 0x404326
  404311:	xor    al,0x79
  404313:	nop
  404314:	mov    edi,0xb300581a
  404319:	scas   eax,DWORD PTR es:[edi]
  40431a:	jp     0x4042ab
  40431c:	dec    ecx
  40431d:	lahf   
  40431e:	fwait
  40431f:	es jg  0x4042dc
  404322:	jge    0x4042d2
  404324:	out    0x1c,al
  404326:	dec    edi
  404327:	jmp    0x4042c6
  404329:	cdq    
  40432a:	jnp    0x40437d
  40432c:	retf   0x6568
  40432f:	pop    es
  404330:	sub    BYTE PTR [ebp+0x2],bl
  404333:	(bad)  
  404334:	xchg   esp,eax
  404335:	mov    ecx,0x600e3920
  40433a:	(bad)  
  40433b:	es pop edx
  40433d:	pop    esp
  40433e:	dec    eax
  40433f:	(bad)  
  404340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404341:	daa    
  404342:	mov    DWORD PTR [edi+0x3a159fd3],esp
  404348:	stos   DWORD PTR es:[edi],eax
  404349:	pop    fs
  40434b:	in     al,0xc9
  40434d:	ret    
  40434e:	imul   ebx,DWORD PTR ds:[esi],0xbd5eff1b
  404355:	repz pop esp
  404357:	dec    eax
  404358:	nop
  404359:	std    
  40435a:	outs   dx,BYTE PTR ds:[esi]
  40435b:	test   al,0xca
  40435d:	push   ds
  40435e:	test   BYTE PTR [esi],cl
  404360:	xchg   esi,eax
  404361:	fsub   QWORD PTR ds:0xa2aba1ce
  404367:	xor    DWORD PTR [edi+0x3df93f66],0xffffffd7
  40436e:	xchg   edx,eax
  40436f:	and    esp,0xffffff93
  404372:	mov    ebx,0xd6e191a8
  404377:	retf   
  404378:	or     ah,0xed
  40437b:	xor    DWORD PTR [esi+0x2a],edi
  40437e:	iret   
  40437f:	imul   BYTE PTR [esi+0x1e97afa8]
  404385:	into   
  404386:	fs pop ds
  404388:	into   
  404389:	fidiv  DWORD PTR [esi+0x22]
  40438c:	stos   BYTE PTR es:[edi],al
  40438d:	test   eax,0x9196f2bb
  404392:	mov    ?,WORD PTR [edx-0x59]
  404395:	pop    ss
  404396:	ins    DWORD PTR es:[edi],dx
  404397:	(bad)  
  404398:	jmp    0x683d:0xe5f2ad35
  40439f:	leave  
  4043a0:	stc    
  4043a1:	outs   dx,BYTE PTR ds:[esi]
  4043a2:	and    bh,bl
  4043a4:	push   0xa816b1c7
  4043a9:	xor    eax,0x98cdcbe8
  4043ae:	adc    BYTE PTR [ebx+edi*4-0x76],ch
  4043b2:	je     0x404396
  4043b4:	mov    DWORD PTR [ebx-0x2983c2a9],eax
  4043ba:	icebp  
  4043bb:	retf   0xce05
  4043be:	xlat   BYTE PTR ds:[ebx]
  4043bf:	ins    DWORD PTR es:[edi],dx
  4043c0:	pusha  
  4043c1:	dec    ecx
  4043c2:	inc    ebp
  4043c3:	and    al,0x6d
  4043c5:	retf   0x9881
  4043c8:	inc    edx
  4043c9:	pop    edi
  4043ca:	sbb    al,0xbe
  4043cc:	mov    esi,0x5e1423ce
  4043d1:	push   cs
  4043d2:	int3   
  4043d3:	sbb    DWORD PTR [eax+ebp*1],edx
  4043d6:	adc    DWORD PTR [edx-0x2a],esi
  4043d9:	cmp    DWORD PTR [eax-0x23],ebx
  4043dc:	xor    DWORD PTR [ebx-0x1f],esi
  4043df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e0:	loop   0x40439e
  4043e2:	or     edi,0x65
  4043e5:	test   eax,0x2b42de4c
  4043ea:	lahf   
  4043eb:	retf   0xbc81
  4043ee:	mov    dl,0x1a
  4043f0:	test   BYTE PTR [ebx+0x5],dh
  4043f3:	mov    esp,0x81a803e9
  4043f8:	inc    edx
  4043f9:	jp     0x4043fc
  4043fb:	sbb    al,0x76
  4043fd:	das    
  4043fe:	and    ebp,ebx
  404400:	mov    ah,0xc5
  404402:	fmulp  st(5),st
  404404:	jbe    0x4043ca
  404406:	outs   dx,BYTE PTR ds:[esi]
  404407:	clc    
  404408:	(bad)  
  404409:	fdivr  st(2),st
  40440b:	dec    ecx
  40440c:	or     dl,bl
  40440e:	xor    DWORD PTR [eax-0x6d],0x8d2250e8
  404415:	dec    edx
  404416:	cwde   
  404417:	cmp    dh,ch
  404419:	nop
  40441a:	mov    ch,0xd2
  40441c:	pop    es
  40441d:	mov    ch,0x8
  40441f:	xor    ch,BYTE PTR [ecx-0x7e6ca369]
  404425:	and    ch,al
  404427:	rcpps  xmm5,XMMWORD PTR [ebp+ebp*2+0x7c9bdef]
  40442f:	in     al,dx
  404430:	cdq    
  404431:	sub    edx,edx
  404433:	cmp    BYTE PTR [ebp-0x4d],dh
  404436:	cmp    al,BYTE PTR [ebp+0x44]
  404439:	icebp  
  40443a:	mov    al,ds:0xf71cb843
  40443f:	push   ebp
  404440:	sub    ecx,ebp
  404442:	cld    
  404443:	sub    dh,ah
  404445:	push   es
  404446:	jnp    0x40447b
  404448:	les    esp,FWORD PTR [edi-0x76c97a10]
  40444e:	addr16 addr16 test al,0x8d
  404452:	dec    eax
  404453:	and    cl,ah
  404455:	inc    edi
  404456:	mov    esi,ebp
  404458:	mov    ch,0x3d
  40445a:	pop    eax
  40445b:	sub    al,0xec
  40445d:	cmp    ah,dh
  40445f:	sub    esi,DWORD PTR [ecx+0x798f8b0]
  404465:	cdq    
  404466:	pop    esp
  404467:	mov    cl,0xce
  404469:	lahf   
  40446a:	(bad)  
  40446b:	xchg   edx,eax
  40446c:	sar    bh,0x9e
  40446f:	push   ebp
  404470:	xlat   BYTE PTR ds:[ebx]
  404471:	cld    
  404472:	jp     0x404497
  404474:	shr    cl,1
  404476:	pop    ss
  404477:	adc    BYTE PTR [edx],0xd4
  40447a:	mov    ah,0x1b
  40447c:	into   
  40447d:	dec    ecx
  40447e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404480:	sbb    esi,DWORD PTR [eax+0x402f452f]
  404486:	mov    ah,0xa1
  404488:	in     eax,dx
  404489:	xor    eax,0x7b317dc5
  40448e:	mov    ah,0x1c
  404490:	add    BYTE PTR ds:0xb0f9b86a,cl
  404496:	and    esi,DWORD PTR [edx-0x2c76ff20]
  40449c:	leave  
  40449d:	jmp    0xf59f5da9
  4044a2:	xor    esi,DWORD PTR [ebx]
  4044a4:	loop   0x40450f
  4044a6:	xor    al,0x49
  4044a8:	cs pop esp
  4044aa:	psubq  mm3,QWORD PTR [edx-0x73]
  4044ae:	(bad)  
  4044af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044b0:	jge    0x4044ec
  4044b2:	clc    
  4044b3:	repnz sbb cl,BYTE PTR [edx-0x1a]
  4044b7:	adc    BYTE PTR [ebp+0x608dde50],cl
  4044bd:	adc    al,0xef
  4044bf:	dec    edx
  4044c0:	in     al,0xdb
  4044c2:	icebp  
  4044c3:	push   es
  4044c4:	cmp    BYTE PTR [edi+esi*1+0x2d164ad7],dl
  4044cb:	mov    ah,0xa7
  4044cd:	mov    al,ds:0x670953af
  4044d2:	icebp  
  4044d3:	jno    0x40451e
  4044d5:	pop    ecx
  4044d6:	jle    0xd6388c88
  4044dc:	inc    edi
  4044dd:	push   ecx
  4044de:	jecxz  0x4044fb
  4044e0:	adc    al,0x64
  4044e2:	cwde   
  4044e3:	outs   dx,BYTE PTR ds:[esi]
  4044e4:	jno    0x4044e3
  4044e6:	das    
  4044e7:	out    0x5d,eax
  4044e9:	rep lods eax,DWORD PTR ds:[esi]
  4044eb:	push   0xffffff8e
  4044ed:	out    0x59,eax
  4044ef:	xor    BYTE PTR [ecx+ebx*1],al
  4044f2:	pop    eax
  4044f3:	dec    eax
  4044f4:	jno    0x404490
  4044f6:	addr16 jmp 0x40453e
  4044f9:	mov    al,0x82
  4044fb:	jmp    0xa00b40c2
  404500:	cmc    
  404501:	xchg   DWORD PTR [edx+0x53],ecx
  404504:	jle    0x40448e
  404506:	add    eax,0xd3109ca3
  40450b:	hlt    
  40450c:	sub    DWORD PTR [edi-0x477eb069],0x488942b9
  404516:	jbe    0x4044d0
  404518:	imul   eax,DWORD PTR [edi*1-0x73a6b5ef],0x54
  404520:	dec    eax
  404521:	add    edi,edx
  404523:	retf   
  404524:	(bad)  
  404525:	sahf   
  404526:	mov    esi,0xc6ee3e85
  40452b:	cli    
  40452c:	mov    eax,0x7b26aaf2
  404531:	inc    esp
  404532:	push   ecx
  404533:	lea    ebp,[eax+esi*4-0x10273740]
  40453a:	sub    DWORD PTR ds:0x6279390f,ecx
  404540:	es pop ds
  404542:	mov    ecx,0x646258fc
  404547:	adc    al,0xb9
  404549:	xchg   esp,eax
  40454a:	mov    WORD PTR [ecx-0x1a],?
  40454d:	test   ch,dl
  40454f:	ret    
  404550:	ret    
  404551:	or     BYTE PTR [esi],al
  404553:	frndint 
  404555:	sbb    dh,dl
  404557:	xlat   BYTE PTR ds:[ebx]
  404558:	lods   eax,DWORD PTR ds:[esi]
  404559:	pop    esp
  40455a:	push   0xffffffdb
  40455c:	inc    ecx
  40455d:	in     al,dx
  40455e:	inc    edi
  40455f:	mov    eax,0xe3b81985
  404564:	cdq    
  404565:	push   esp
  404566:	sbb    DWORD PTR [ecx+0x5da06a5],edx
  40456c:	xor    al,0x87
  40456e:	pushf  
  40456f:	lods   al,BYTE PTR ds:[esi]
  404570:	cs xor al,0xef
  404573:	push   ss
  404574:	jle    0x4045c1
  404576:	into   
  404577:	jmp    FWORD PTR [edi]
  404579:	cmp    BYTE PTR [ebx],bh
  40457b:	mov    ecx,0x8c7166f6
  404580:	fisub  WORD PTR [ebp-0x1f]
  404583:	mov    dh,0x2c
  404585:	jmp    0x404557
  404587:	stos   DWORD PTR es:[edi],eax
  404588:	and    dl,BYTE PTR [ebp+0x42]
  40458b:	jbe    0x4045a7
  40458d:	retf   0x5871
  404590:	out    dx,eax
  404591:	rcl    BYTE PTR [edi],0x17
  404594:	popa   
  404595:	dec    ebp
  404596:	pop    edx
  404597:	or     esp,ebp
  404599:	das    
  40459a:	sbb    cl,ch
  40459c:	push   ss
  40459d:	pop    eax
  40459e:	popa   
  40459f:	cmc    
  4045a0:	xor    eax,0xe37bd04c
  4045a5:	mov    esp,0x270872ac
  4045aa:	mov    bl,0xfb
  4045ac:	ins    BYTE PTR es:[edi],dx
  4045ad:	repz call 0xbc5f87f8
  4045b3:	push   es
  4045b4:	pop    ss
  4045b5:	sbb    al,0x41
  4045b7:	outs   dx,BYTE PTR ds:[esi]
  4045b8:	cmp    edx,DWORD PTR [eax+0x2468f331]
  4045be:	xor    al,0x2b
  4045c0:	imul   edx,ebp,0xedbc9c60
  4045c6:	push   cs
  4045c7:	aaa    
  4045c8:	pushf  
  4045c9:	fcom   DWORD PTR [esi-0x3d]
  4045cc:	xor    BYTE PTR [ebx+eiz*1-0xf33493],bl
  4045d3:	ret    0x21d9
  4045d6:	mov    cl,0x58
  4045d8:	call   0x511a226b
  4045dd:	inc    ecx
  4045de:	sbb    dl,0x15
  4045e1:	push   ds
  4045e2:	mov    ebp,0x27bd69af
  4045e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e8:	jle    0x40462c
  4045ea:	lock mov eax,0x7cd6af6e
  4045f0:	lahf   
  4045f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045f2:	xchg   esp,eax
  4045f3:	mov    al,ds:0x68b10ca5
  4045f8:	jmp    DWORD PTR [edx-0x72cdab02]
  4045fe:	ja     0x40460a
  404600:	push   ss
  404601:	mov    cl,0x9e
  404603:	dec    edi
  404604:	push   0x4c2d161d
  404609:	push   edi
  40460a:	adc    eax,0xa28c0652
  40460f:	popa   
  404610:	das    
  404611:	ins    DWORD PTR es:[edi],dx
  404612:	xor    DWORD PTR [eax-0x4a],0x5c272f69
  404619:	cwde   
  40461a:	(bad)  
  40461b:	shl    BYTE PTR [esi],cl
  40461d:	mov    eax,0x2dedfbda
  404622:	cwde   
  404623:	sbb    ah,BYTE PTR [ebx]
  404625:	xor    DWORD PTR ds:0xbd76b86e,eax
  40462b:	ss jno 0x4046a0
  40462e:	call   FWORD PTR [edi-0x25]
  404631:	clc    
  404632:	jns    0x4045f2
  404634:	out    dx,eax
  404635:	adc    dh,BYTE PTR [edi-0x75c19e2f]
  40463b:	sub    esp,DWORD PTR [esi-0x20545544]
  404641:	test   eax,0xadb36a0c
  404646:	fnstsw WORD PTR [ebp+0x16]
  404649:	xchg   ebp,eax
  40464a:	pop    edx
  40464b:	fsubr  DWORD PTR [ebp+0x7173127f]
  404651:	and    BYTE PTR [esi-0x3e],al
  404654:	lds    esi,FWORD PTR [eax]
  404656:	into   
  404657:	xor    DWORD PTR [edi-0x52],edi
  40465a:	add    eax,0xaf9f435f
  40465f:	and    eax,0x3ccb4735
  404664:	adc    DWORD PTR [edi],ecx
  404666:	fwait
  404667:	mov    esp,DWORD PTR [edi]
  404669:	inc    edi
  40466a:	js     0x40464f
  40466c:	xor    edi,ebp
  40466e:	jecxz  0x404699
  404670:	retf   0x3f0d
  404673:	mov    esp,0xad050d5d
  404678:	inc    esi
  404679:	cmp    DWORD PTR ss:[ecx+0x2a],edi
  40467d:	push   esp
  40467e:	jnp    0x4046a9
  404680:	add    cl,dh
  404682:	ds jmp 0x4046e2
  404685:	lds    ebx,FWORD PTR [eax]
  404687:	add    al,0x29
  404689:	out    0x67,al
  40468b:	sbb    DWORD PTR [edx-0x36c4cb72],0xa27660bd
  404695:	pop    esi
  404696:	je     0x40469a
  404698:	mov    edi,0x247fb784
  40469d:	adc    eax,DWORD PTR ds:0x32fe9ffa
  4046a3:	(bad)  
  4046a4:	sar    BYTE PTR [esi+ebx*4],0x6b
  4046a8:	mov    edx,0x24c086f5
  4046ad:	out    0x21,eax
  4046af:	sahf   
  4046b0:	xor    eax,eax
  4046b2:	icebp  
  4046b3:	dec    esp
  4046b4:	mov    esp,0x8a47110e
  4046b9:	mov    al,ds:0x6c322c9f
  4046be:	mov    al,0x5d
  4046c0:	fsub   DWORD PTR [ebp+0x56eef736]
  4046c6:	sub    eax,0xa36b6b96
  4046cb:	imul   edx,DWORD PTR [ebp-0x18],0xbb5923cc
  4046d2:	inc    ebx
  4046d3:	retf   0xa1ee
  4046d6:	data16 or al,bl
  4046d9:	or     eax,0x2e913965
  4046de:	mov    ds:0x7b7ff83,eax
  4046e3:	(bad)  
  4046e4:	sub    al,0x2b
  4046e6:	popf   
  4046e7:	or     DWORD PTR [edx-0x7f],ecx
  4046ea:	enter  0xa9e4,0xa
  4046ee:	xor    DWORD PTR [ecx],0xffffffdd
  4046f1:	xchg   esi,eax
  4046f2:	inc    eax
  4046f3:	lods   al,BYTE PTR ds:[esi]
  4046f4:	push   es
  4046f5:	int3   
  4046f6:	and    al,0xe7
  4046f8:	arpl   di,sp
  4046fa:	shr    DWORD PTR [eax+edi*1],cl
  4046fd:	rcr    BYTE PTR ds:0x95475208,1
  404703:	mov    dh,0x1d
  404705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404706:	adc    BYTE PTR [edi],0x29
  404709:	cli    
  40470a:	inc    edx
  40470b:	(bad)  
  40470c:	push   eax
  40470d:	jbe    0x404779
  40470f:	xor    al,0x66
  404711:	adc    BYTE PTR [eax],dh
  404713:	outs   dx,DWORD PTR ds:[esi]
  404714:	enter  0x93a2,0x25
  404718:	mov    ch,bl
  40471a:	sbb    cl,BYTE PTR [edi+0x3f]
  40471d:	cmp    eax,ebp
  40471f:	sbb    DWORD PTR es:[bp+di+0xb8],edi
  404725:	iret   
  404726:	sbb    bl,BYTE PTR [edi-0x3d57a842]
  40472c:	jo     0x4046c9
  40472e:	bound  edx,QWORD PTR [edx+ecx*8+0x7c366829]
  404735:	jae    0x40471e
  404737:	mov    bh,ch
  404739:	ins    DWORD PTR es:[edi],dx
  40473a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40473b:	inc    ebx
  40473c:	test   eax,0xb38824a
  404741:	popa   
  404742:	and    DWORD PTR [edx+eiz*4-0x2cd99cac],ecx
  404749:	adc    eax,0xba569eb5
  40474e:	fisttp DWORD PTR [esi+eiz*1]
  404751:	gs xor cl,0x9d
  404755:	mov    esi,0xf857d9d0
  40475a:	nop
  40475b:	out    dx,eax
  40475c:	test   eax,0x3207dfb3
  404761:	cmp    eax,0xddb1915e
  404766:	mov    WORD PTR [eax+0x20],?
  404769:	mov    esp,0xe4851bed
  40476e:	adc    al,0xea
  404770:	lahf   
  404771:	pop    esp
  404772:	cli    
  404773:	sub    ebx,ecx
  404775:	sub    dh,BYTE PTR [edi-0x35e0f9da]
  40477b:	push   ss
  40477c:	inc    edx
  40477d:	pushf  
  40477e:	jne    0x404769
  404780:	in     al,dx
  404781:	cli    
  404782:	bound  esp,QWORD PTR [ebx]
  404784:	sbb    edi,0xdfa08941
  40478a:	lea    edi,[eax+ebx*1]
  40478d:	mov    BYTE PTR [edi-0x2396fcc5],al
  404793:	and    BYTE PTR [edx],ch
  404795:	clc    
  404796:	cmp    eax,0x8a3868df
  40479b:	out    0x6b,eax
  40479d:	inc    esi
  40479e:	mov    edx,0x8905a959
  4047a3:	inc    esi
  4047a4:	mov    ds:0xd346839f,al
  4047a9:	fcom   DWORD PTR [esi]
  4047ab:	cmp    ah,dh
  4047ad:	sub    eax,0xc3052f7
  4047b2:	inc    ecx
  4047b3:	mov    eax,ds:0xe51209ca
  4047b8:	inc    esp
  4047b9:	call   0x389d:0x6749c45b
  4047c0:	je     0x4047b2
  4047c2:	test   al,0x84
  4047c4:	mov    al,0x5d
  4047c6:	pop    ebp
  4047c7:	ret    0xa19e
  4047ca:	xor    al,0xc
  4047cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047cd:	adc    eax,0x14189e4d
  4047d2:	aas    
  4047d3:	push   cs
  4047d4:	call   0xca340215
  4047d9:	inc    ecx
  4047da:	enter  0x1566,0xb5
  4047de:	cwde   
  4047df:	ja     0x404819
  4047e1:	push   cs
  4047e2:	inc    ebp
  4047e3:	xor    al,0x29
  4047e5:	ds pushf 
  4047e7:	ja     0x4047c2
  4047e9:	mov    edi,0xe1f6cce5
  4047ee:	inc    ebx
  4047ef:	dec    edi
  4047f0:	sub    esp,DWORD PTR [ebp-0x12]
  4047f3:	xor    BYTE PTR [eax-0x74],bl
  4047f6:	ds mov bh,0xba
  4047f9:	sbb    DWORD PTR [ecx+0x4b],0xffffffc1
  4047fd:	xchg   esi,eax
  4047fe:	pop    ss
  4047ff:	pushf  
  404800:	xchg   esi,eax
  404801:	sub    eax,0x2f9b0fba
  404806:	rol    esp,0xb7
  404809:	mov    gs,WORD PTR [ecx]
  40480b:	les    edx,FWORD PTR [edi]
  40480d:	mov    eax,ds:0xb20d5ff1
  404812:	jg     0x404853
  404814:	cs popf 
  404816:	ins    DWORD PTR es:[edi],dx
  404817:	sbb    al,0x9f
  404819:	std    
  40481a:	aad    0x84
  40481c:	jb     0x404897
  40481e:	retf   0x7fdc
  404821:	xchg   edi,eax
  404822:	cld    
  404823:	(bad)  
  404824:	test   al,0x14
  404826:	fisttp QWORD PTR [eax-0x5f]
  404829:	jg     0x404826
  40482b:	(bad)  
  40482c:	int    0xbe
  40482e:	stos   BYTE PTR es:[edi],al
  40482f:	fadd   QWORD PTR [ebx-0x39]
  404832:	(bad)  
  404833:	aas    
  404834:	aad    0x8c
  404836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404837:	sbb    al,BYTE PTR [esi+0xe]
  40483a:	mov    dl,0xa5
  40483d:	xor    ebx,DWORD PTR [ebx]
  40483f:	cmp    al,BYTE PTR [ebp-0x7b]
  404842:	and    DWORD PTR [ecx-0x20],esp
  404845:	sahf   
  404846:	gs clc 
  404848:	ss jle 0x4047ea
  40484b:	retf   0xe401
  40484e:	mov    dh,0x7c
  404850:	cwde   
  404851:	push   ds
  404852:	popf   
  404853:	aas    
  404854:	sub    ah,cl
  404856:	mov    ?,WORD PTR [ecx-0x5a639716]
  40485c:	fsub   DWORD PTR [esi]
  40485e:	fild   QWORD PTR [ebx+0x2d]
  404861:	cmp    dl,ah
  404863:	and    BYTE PTR [ecx+0x4636f7a8],ah
  404869:	jnp    0x40488d
  40486b:	in     eax,0xa8
  40486d:	or     al,0x90
  40486f:	aas    
  404870:	adc    eax,0x6796fd08
  404875:	mov    ebx,0x62d8977e
  40487a:	xor    edi,DWORD PTR [edx]
  40487c:	sub    DWORD PTR [ebp-0x48],ebp
  40487f:	mov    ds:0x45f06314,eax
  404884:	test   BYTE PTR [esi-0x2cc984f4],bh
  40488a:	mov    ds:0xbeead38f,al
  40488f:	retf   
  404890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404891:	into   
  404892:	mov    eax,ds:0xa13046cd
  404897:	gs pusha 
  404899:	cmp    DWORD PTR [edx-0x252fdd7d],edi
  40489f:	cmp    al,0x86
  4048a1:	and    BYTE PTR [esi+0x3d],ah
  4048a4:	push   0xb0a1b52d
  4048a9:	and    dh,BYTE PTR [edx+0x6c848f35]
  4048af:	int    0xc1
  4048b1:	cmp    esi,eax
  4048b3:	fs scas al,BYTE PTR es:[edi]
  4048b5:	jae    0x4048e0
  4048b7:	adc    eax,0x6b300f8f
  4048bc:	jmp    0x404935
  4048be:	mov    ebp,0xb19b3eb4
  4048c3:	cli    
  4048c4:	aad    0xd6
  4048c6:	pop    edx
  4048c7:	and    ch,al
  4048c9:	hlt    
  4048ca:	jb     0x404868
  4048cc:	fbstp  TBYTE PTR [esi+0x48b5ef9e]
  4048d2:	cli    
  4048d3:	jmp    0xb5989fad
  4048d8:	sysenter 
  4048da:	jnp    0x40487e
  4048dc:	(bad)  
  4048dd:	cli    
  4048de:	imul   esp,DWORD PTR [esi],0x364d9516
  4048e4:	addr16 ss xchg esp,eax
  4048e7:	jns    0x4048d2
  4048e9:	call   0x144d9b48
  4048ee:	fcom   DWORD PTR [edi]
  4048f0:	(bad)  
  4048f1:	xchg   ebp,eax
  4048f2:	(bad)  
  4048f3:	or     BYTE PTR [edx+0x6872be47],ch
  4048f9:	jbe    0x4048e8
  4048fb:	and    eax,0xe92dd8c3
  404900:	cmp    dh,al
  404902:	inc    edi
  404903:	push   0xf1e1492d
  404908:	(bad)  
  404909:	mov    esi,DWORD PTR [ecx]
  40490b:	fisttp WORD PTR [esi+ebp*2]
  40490e:	retf   0x214
  404911:	shl    DWORD PTR [ebx+0x27436bc3],cl
  404917:	sbb    eax,0x46e8acae
  40491c:	je     0x40493e
  40491e:	stos   BYTE PTR es:[edi],al
  40491f:	inc    ebp
  404920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404921:	push   DWORD PTR [ebp+0x3c8e6d67]
  404927:	es pop ecx
  404929:	push   ss
  40492a:	arpl   WORD PTR [ebp+esi*8+0x27194c17],bx
  404931:	lock pop es
  404933:	leave  
  404934:	(bad)  
  404935:	and    al,bl
  404937:	test   DWORD PTR [ecx+0x10],esi
  40493a:	push   ecx
  40493b:	hlt    
  40493c:	add    edx,DWORD PTR [ecx+0xc314e10]
  404942:	inc    edi
  404943:	and    ah,BYTE PTR [esp+edx*2+0x46]
  404947:	std    
  404948:	cmc    
  404949:	cwde   
  40494a:	cmp    bh,0xe4
  40494d:	push   ds
  40494e:	out    dx,eax
  40494f:	imul   edi,eax,0x58edf08a
  404955:	and    eax,0xef2c8e6a
  40495a:	pop    ecx
  40495b:	addr16 or al,0xf7
  40495e:	add    ebx,DWORD PTR [ebx]
  404960:	mov    ch,bl
  404962:	(bad)  
  404964:	fwait
  404965:	idiv   ah
  404967:	adc    eax,DWORD PTR [ebx+0x1c]
  40496a:	sub    DWORD PTR [edx+0xc7f8e0a],esi
  404970:	int3   
  404971:	ins    BYTE PTR es:[di],dx
  404973:	sbb    DWORD PTR [ebp-0x23],edi
  404976:	and    edi,ebx
  404978:	jg     0x4049a0
  40497a:	(bad)  
  40497b:	pop    ebp
  40497c:	or     eax,0x4a9b1eb7
  404981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404982:	xor    DWORD PTR cs:[ecx],esp
  404985:	and    al,0xc3
  404987:	inc    ecx
  404988:	cmp    DWORD PTR [eax],ebp
  40498a:	cmp    edx,DWORD PTR [eax+0x38]
  40498d:	pop    eax
  40498e:	pushf  
  40498f:	xchg   edi,eax
  404990:	mov    BYTE PTR [edi-0x2c],bl
  404993:	retf   
  404994:	push   esp
  404995:	sub    ch,BYTE PTR [ecx+0x6a]
  404998:	mov    ch,0x43
  40499a:	leave  
  40499b:	enter  0xaeb7,0x54
  40499f:	xor    cl,BYTE PTR [esi-0x711f81db]
  4049a5:	cmp    cl,ah
  4049a7:	push   ss
  4049a8:	loope  0x4049fc
  4049aa:	pop    esp
  4049ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ad:	rol    BYTE PTR fs:[ebx+0x72],0x1b
  4049b2:	loopne 0x4049c3
  4049b4:	loop   0x404a27
  4049b6:	ret    0x9e6c
  4049b9:	add    BYTE PTR [edx+0xdbf09da],0xd2
  4049c0:	lds    esi,FWORD PTR [eax]
  4049c2:	xor    al,0xb
  4049c4:	and    BYTE PTR [eax],ah
  4049c6:	imul   ebp,ecx,0xfffffff4
  4049c9:	mov    al,ds:0x176832b
  4049ce:	xor    esp,DWORD PTR [edx-0x2071a40f]
  4049d4:	jbe    0x4049f4
  4049d6:	out    0x50,eax
  4049d8:	sbb    al,0xf1
  4049da:	inc    edx
  4049db:	mov    esi,0x3c9639ca
  4049e0:	mov    ecx,?
  4049e2:	fld    TBYTE PTR [edx]
  4049e4:	lods   al,BYTE PTR ds:[esi]
  4049e5:	jo     0x404a34
  4049e7:	stos   BYTE PTR es:[edi],al
  4049e8:	cmp    ch,ah
  4049ea:	cdq    
  4049eb:	shl    BYTE PTR [edi+0x21a8f29],1
  4049f1:	(bad)  
  4049f2:	fwait
  4049f3:	es jp  0x4049db
  4049f6:	adc    cl,ah
  4049f8:	mov    esp,0x7af300f3
  4049fd:	aas    
  4049fe:	sub    edx,esi
  404a00:	xlat   BYTE PTR ds:[ebx]
  404a01:	leave  
  404a02:	add    BYTE PTR [eax+ebp*4-0x3c392438],al
  404a09:	dec    ecx
  404a0a:	and    ecx,DWORD PTR [esi+0xa]
  404a0d:	jecxz  0x4049d1
  404a0f:	cdq    
  404a10:	in     eax,dx
  404a11:	(bad)  
  404a13:	inc    ebp
  404a14:	mov    dl,0x6
  404a16:	daa    
  404a17:	jle    0x404a02
  404a19:	(bad)  
  404a1a:	mov    ecx,0x99886e54
  404a1f:	ja     0x404a72
  404a21:	mov    esi,0x419b185a
  404a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a27:	and    eax,0x9fbdd3d
  404a2c:	pop    es
  404a2d:	inc    edx
  404a2e:	mov    bh,BYTE PTR [edi-0x2a]
  404a31:	repz mov ds:0x563a80dc,al
  404a37:	or     DWORD PTR [ecx-0x4b66e5dd],ebx
  404a3d:	xor    esp,ebx
  404a3f:	pop    ecx
  404a40:	and    esi,DWORD PTR [ebp+0x1]
  404a43:	inc    eax
  404a44:	(bad)  
  404a45:	adc    cl,BYTE PTR [eax+edx*4+0xa]
  404a49:	jbe    0x404a7b
  404a4b:	jmp    0xb4d16059
  404a50:	mov    bh,0x66
  404a52:	inc    ecx
  404a53:	dec    esi
  404a54:	pop    edx
  404a55:	daa    
  404a56:	aam    0x1f
  404a58:	addr16 ret 0x7cac
  404a5c:	pop    edi
  404a5d:	pushf  
  404a5e:	or     DWORD PTR [ebx+edx*8+0x9],eax
  404a62:	mov    ebp,0xbe027bf6
  404a67:	ret    0xf563
  404a6a:	push   edx
  404a6b:	jbe    0x404ad4
  404a6d:	or     bl,BYTE PTR [ebx-0x66]
  404a70:	and    eax,0x3516bbeb
  404a75:	fwait
  404a76:	jl     0x404acd
  404a78:	js     0x404ae3
  404a7a:	xor    bl,ah
  404a7c:	jnp    0x404a64
  404a7e:	xor    cl,cl
  404a80:	leave  
  404a81:	mov    dh,0x20
  404a83:	mov    cs:0xfaa54180,al
  404a89:	out    dx,al
  404a8a:	xchg   esp,eax
  404a8b:	repnz sysenter 
  404a8e:	jno    0x404a77
  404a90:	ror    esp,cl
  404a92:	pop    ss
  404a93:	popf   
  404a94:	jb     0x404a72
  404a96:	ds jo  0x404a48
  404a99:	mov    esp,0x36a993cd
  404a9e:	sbb    eax,0x159ce1c2
  404aa4:	pop    ebx
  404aa5:	shl    ebx,1
  404aa7:	int3   
  404aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aa9:	pushf  
  404aaa:	push   ebp
  404aab:	pusha  
  404aac:	jo     0x404a4c
  404aae:	sahf   
  404aaf:	cmp    ch,BYTE PTR [edx]
  404ab1:	aaa    
  404ab2:	lods   eax,DWORD PTR ds:[esi]
  404ab3:	add    eax,0x6e3d9ab4
  404ab8:	fbstp  TBYTE PTR [ecx+ebx*4]
  404abb:	xor    al,0xe3
  404abd:	pop    ebp
  404abe:	cmp    eax,0x80d4a85a
  404ac3:	add    al,0x33
  404ac5:	in     al,0x47
  404ac7:	inc    esp
  404ac8:	js     0x404ab9
  404aca:	out    dx,al
  404acb:	je     0x404a96
  404acd:	pop    esi
  404ace:	adc    bl,BYTE PTR [eax+0x26]
  404ad1:	bswap  ecx
  404ad3:	outs   dx,DWORD PTR ds:[esi]
  404ad4:	jmp    0xf21f:0x38ba994d
  404adb:	or     ebp,DWORD PTR [ebp-0x24d50d14]
  404ae1:	lods   eax,DWORD PTR ds:[esi]
  404ae2:	call   0x1b43975
  404ae7:	adc    ecx,DWORD PTR [eax]
  404ae9:	repz mov ds:0xa1e4f417,al
  404aef:	pop    esp
  404af0:	pop    esp
  404af1:	xchg   edi,eax
  404af2:	cmp    DWORD PTR [edx],esi
  404af4:	lods   al,BYTE PTR ds:[esi]
  404af5:	ja     0x404af6
  404af7:	pshufw mm5,QWORD PTR [ebx+0x51f5379c],0xc4
  404aff:	or     eax,0x4ad12ffe
  404b04:	mov    bh,0x88
  404b06:	pop    esi
  404b07:	stc    
  404b08:	push   ds
  404b09:	jmp    0xb00905d9
  404b0e:	or     al,0x29
  404b10:	dec    ecx
  404b11:	jge    0x404aba
  404b13:	adc    cl,bl
  404b15:	sbb    ebx,DWORD PTR [edi]
  404b17:	adc    al,0x15
  404b19:	xlat   BYTE PTR ds:[ebx]
  404b1a:	loopne 0x404aa9
  404b1c:	ror    bh,cl
  404b1e:	jb     0x404b93
  404b20:	mov    es,eax
  404b22:	(bad)  
  404b24:	jb     0x404af2
  404b26:	ret    0xb546
  404b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b2a:	sbb    BYTE PTR [eax+0x3d0e27d0],bl
  404b30:	cli    
  404b31:	out    0x9e,eax
  404b33:	or     BYTE PTR [ebp-0x4ca30afb],dl
  404b39:	xor    DWORD PTR [ebp+0x30],esi
  404b3c:	push   ds
  404b3d:	mov    eax,ds:0x8d1926e4
  404b42:	push   0xffffffb2
  404b44:	mov    esp,0xa2b9da31
  404b49:	push   ss
  404b4a:	add    BYTE PTR [ecx-0x479121ed],cl
  404b50:	xor    al,0x19
  404b52:	psubb  mm4,QWORD PTR [eax-0x42]
  404b56:	es (bad) 
  404b58:	mov    edx,0x6bd2780d
  404b5d:	sbb    al,BYTE PTR [ecx]
  404b5f:	in     eax,dx
  404b60:	stos   BYTE PTR es:[edi],al
  404b61:	inc    edi
  404b62:	jg     0x404bcd
  404b64:	sbb    al,bl
  404b66:	ins    DWORD PTR es:[edi],dx
  404b67:	lea    ebp,[eax+0x529584d3]
  404b6d:	xchg   ecx,eax
  404b6e:	retf   0x1be5
  404b71:	(bad)  
  404b72:	aam    0xd7
  404b74:	int    0x11
  404b76:	ret    
  404b77:	mov    esi,0xe47bac68
  404b7c:	retf   
  404b7d:	or     ah,BYTE PTR [eax]
  404b7f:	ret    0xc629
  404b82:	(bad)  
  404b83:	jle    0x404b2f
  404b85:	pop    esi
  404b86:	test   BYTE PTR [eax],al
  404b88:	(bad)  
  404b89:	push   eax
  404b8a:	into   
  404b8b:	ja     0x404b84
  404b8d:	jmp    0x9530:0x987143fa
  404b94:	jecxz  0x404bbc
  404b96:	push   cs
  404b97:	inc    edx
  404b98:	mov    dl,0xc8
  404b9a:	ds popf 
  404b9c:	out    dx,eax
  404b9d:	repz inc edx
  404b9f:	push   ds
  404ba0:	sub    eax,0x6d70f28a
  404ba5:	mov    cl,0x77
  404ba7:	sbb    BYTE PTR [esi+ebp*1-0x66aaa09c],dh
  404bae:	push   edi
  404baf:	sub    dl,dh
  404bb1:	adc    bl,BYTE PTR [edi]
  404bb3:	sahf   
  404bb4:	mov    ds:0xa9d7ef53,al
  404bb9:	js     0x404b44
  404bbb:	fimul  WORD PTR [edx+0x7d]
  404bbe:	je     0x404c30
  404bc0:	xor    al,0x13
  404bc2:	dec    esp
  404bc3:	shl    edx,0x72
  404bc6:	test   eax,0xa76263e3
  404bcb:	mov    dl,0xe0
  404bcd:	jne    0x404bd0
  404bcf:	sub    al,0xcb
  404bd1:	fwait
  404bd2:	push   0x29d93db7
  404bd7:	ret    
  404bd8:	out    0x98,eax
  404bda:	push   ss
  404bdb:	cmp    edi,DWORD PTR [esi]
  404bdd:	mov    ds:0xdb5739e3,eax
  404be2:	adc    al,0x1d
  404be4:	xor    dh,dh
  404be6:	push   esi
  404be7:	jl     0x404bdd
  404be9:	mov    esi,tr4
  404bec:	sub    WORD PTR [eax],bp
  404bef:	lods   eax,DWORD PTR ds:[esi]
  404bf0:	xchg   ecx,eax
  404bf1:	or     ecx,DWORD PTR [eax+0x28960e8d]
  404bf7:	xor    al,BYTE PTR [ebx+ecx*4-0x4a076feb]
  404bfe:	sub    DWORD PTR [ecx-0x529e3355],0x4b5b69a6
  404c08:	test   BYTE PTR [eax],0x12
  404c0b:	pop    DWORD PTR [ecx-0x375920ad]
  404c11:	mov    ds:0xaa7f8e5e,al
  404c16:	jecxz  0x404c8a
  404c18:	lods   eax,DWORD PTR ds:[esi]
  404c19:	cld    
  404c1a:	mov    ?,ecx
  404c1c:	xor    dl,BYTE PTR [ecx+0x704709e7]
  404c22:	inc    edx
  404c23:	pop    eax
  404c24:	inc    ecx
  404c25:	adc    cl,BYTE PTR fs:[ebx]
  404c28:	out    dx,al
  404c29:	push   edx
  404c2a:	sar    BYTE PTR [ecx-0x1b289283],cl
  404c30:	ds out 0x54,eax
  404c33:	push   cs
  404c34:	dec    edx
  404c35:	xlat   BYTE PTR ds:[ebx]
  404c36:	cmp    ch,dh
  404c38:	sub    al,0xfe
  404c3a:	pusha  
  404c3b:	das    
  404c3c:	stos   BYTE PTR es:[edi],al
  404c3d:	mov    cs,WORD PTR [edx]
  404c3f:	call   ecx
  404c41:	inc    edi
  404c42:	and    eax,0xd7f942e2
  404c47:	xor    cl,BYTE PTR [esi+0x18]
  404c4a:	dec    ebp
  404c4b:	or     al,0x3f
  404c4d:	push   esi
  404c4e:	fimul  DWORD PTR [edi-0x57a7b1e6]
  404c54:	iret   
  404c55:	cmp    ebp,ecx
  404c57:	or     eax,0x68a1e38
  404c5c:	xor    BYTE PTR [ebp+0x152366a3],bl
  404c62:	xor    cl,dh
  404c64:	pop    ebp
  404c65:	out    dx,al
  404c66:	pop    edi
  404c67:	add    dl,BYTE PTR [edi-0x159b3f1c]
  404c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c6e:	and    al,0x62
  404c70:	dec    edi
  404c71:	and    eax,0x772ef994
  404c76:	imul   esp,DWORD PTR [ebx+ebx*1-0x3deaf6d8],0xffffffa9
  404c7e:	faddp  st(7),st
  404c80:	jbe    0x404c80
  404c82:	into   
  404c83:	mov    WORD PTR [ebx+0x18],fs
  404c86:	cmp    bl,BYTE PTR ds:0xbae24ed
  404c8c:	jb     0x404d0c
  404c8e:	adc    al,0x1f
  404c90:	and    dh,BYTE PTR [eax]
  404c92:	sahf   
  404c93:	xchg   edx,eax
  404c94:	xchg   esp,eax
  404c95:	ds in  al,0x34
  404c98:	rol    edi,1
  404c9a:	jecxz  0x404c82
  404c9c:	retf   0xf4ea
  404c9f:	addr16 mov bh,0x27
  404ca2:	sbb    BYTE PTR [ebp+0x690b51d3],0xa3
  404ca9:	jo     0x404cad
  404cab:	add    al,0x8e
  404cad:	arpl   WORD PTR cs:[eax],bx
  404cb0:	jne    0x404c7a
  404cb2:	sub    eax,0xd765c472
  404cb7:	stos   BYTE PTR es:[edi],al
  404cb8:	and    BYTE PTR [edi+0x54],ch
  404cbb:	retf   0xc5bc
  404cbe:	add    ecx,DWORD PTR [edx+0x5c91f648]
  404cc4:	shr    DWORD PTR [edi-0x44bd7a7c],cl
  404cca:	imul   edi,edx,0xf1266c07
  404cd0:	out    0x66,al
  404cd2:	ficomp DWORD PTR [ecx]
  404cd4:	ins    BYTE PTR es:[edi],dx
  404cd5:	lahf   
  404cd6:	enter  0xaacd,0xbd
  404cda:	mov    bh,0x72
  404cdc:	xor    eax,0x44eea7c
  404ce1:	scas   eax,DWORD PTR es:[edi]
  404ce2:	repz or al,0x7d
  404ce5:	pop    edx
  404ce6:	leave  
  404ce7:	outs   dx,BYTE PTR ds:[esi]
  404ce8:	dec    ecx
  404ce9:	mov    DWORD PTR [edx+0x647f2931],0xfc7673aa
  404cf3:	(bad)  
  404cf5:	inc    esi
  404cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cf7:	push   ds
  404cf8:	scas   eax,DWORD PTR es:[edi]
  404cf9:	xlat   BYTE PTR ds:[ebx]
  404cfa:	xchg   edi,eax
  404cfb:	mov    eax,ds:0xc77adaf5
  404d00:	push   cs
  404d01:	pop    esi
  404d02:	pop    edx
  404d03:	popa   
  404d04:	data16 cli 
  404d06:	(bad)  
  404d07:	(bad)  
  404d08:	ror    dh,cl
  404d0a:	dec    eax
  404d0b:	dec    esp
  404d0c:	push   0xffffff94
  404d0e:	push   edx
  404d0f:	das    
  404d10:	sub    eax,0x223143e4
  404d15:	push   ds
  404d16:	inc    eax
  404d17:	push   esi
  404d18:	and    cl,BYTE PTR [edi+0x6a87c0da]
  404d1e:	jno    0x404d56
  404d20:	pop    ecx
  404d21:	pop    eax
  404d22:	and    al,0xb0
  404d24:	inc    edi
  404d25:	loop   0x404cee
  404d27:	mov    esi,0xf3cd470d
  404d2c:	lods   al,BYTE PTR ds:[esi]
  404d2d:	dec    ebp
  404d2e:	repz push ecx
  404d30:	xchg   edi,eax
  404d31:	enter  0xa531,0x40
  404d35:	es push edi
  404d37:	xor    ebp,ebp
  404d39:	lahf   
  404d3a:	and    BYTE PTR [ebx],cl
  404d3c:	lods   eax,DWORD PTR ds:[esi]
  404d3d:	mov    ah,ah
  404d3f:	jnp    0x404cf9
  404d41:	loope  0x404cd3
  404d43:	in     eax,dx
  404d44:	mov    DWORD PTR [ebp+0x62],ebx
  404d47:	rcl    DWORD PTR [eax],cl
  404d49:	sahf   
  404d4a:	jge    0x404d6a
  404d4c:	add    al,bh
  404d4e:	jae    0x404d4f
  404d50:	xchg   edi,eax
  404d51:	mov    WORD PTR [esi+0x7a],cs
  404d54:	(bad)  
  404d55:	jmp    FWORD PTR [edx-0x428c5657]
  404d5b:	inc    ecx
  404d5c:	mov    bh,BYTE PTR [ecx-0x3b52c52]
  404d62:	push   ecx
  404d63:	jns    0x404dd6
  404d65:	stc    
  404d66:	xchg   edi,eax
  404d67:	lea    edx,[eax]
  404d69:	push   ebp
  404d6a:	gs dec esp
  404d6c:	int    0xbe
  404d6e:	loopne 0x404d70
  404d70:	mov    ds:0x789a90b5,eax
  404d75:	inc    ebx
  404d76:	and    eax,0xb968b18d
  404d7b:	cmp    ch,BYTE PTR [esi+esi*8+0x119a99aa]
  404d82:	inc    edx
  404d83:	adc    DWORD PTR [ebx],ebp
  404d85:	mov    ecx,0x78ec355
  404d8a:	ss cwde 
  404d8c:	jo     0x404d63
  404d8e:	or     al,0xb2
  404d90:	mov    edi,0xea95f1bb
  404d95:	pop    ebp
  404d96:	jae    0x404d9e
  404d98:	inc    esp
  404d99:	push   0xd6e217e1
  404d9e:	pop    edi
  404d9f:	popa   
  404da0:	cli    
  404da1:	push   ss
  404da2:	mov    ah,0x3b
  404da4:	push   ebx
  404da5:	call   0x1560:0x6a1ba923
  404dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dad:	das    
  404dae:	lea    esp,[edx+0x55]
  404db1:	call   0x3cd5:0xde8648fc
  404db8:	cs popa 
  404dba:	or     DWORD PTR [eax-0x72],ebx
  404dbd:	adc    al,0x2a
  404dbf:	xor    eax,0xdd5d9c48
  404dc4:	pop    ss
  404dc5:	nop
  404dc6:	mov    bl,0xda
  404dc8:	int    0xe5
  404dca:	inc    ebx
  404dcb:	aam    0x9a
  404dcd:	adc    DWORD PTR [edx+0x5e2278f8],ebp
  404dd3:	imul   ecx,DWORD PTR [edx+esi*1],0x64
  404dd7:	mov    al,ds:0xa4a447b0
  404ddc:	lds    esp,FWORD PTR [esi-0x1653444c]
  404de2:	pop    ebx
  404de3:	aad    0x80
  404de5:	sub    BYTE PTR fs:[ebp+0x4f],dl
  404de9:	and    al,0x27
  404deb:	xchg   ebp,eax
  404dec:	fmul   QWORD PTR [esi+0x4d]
  404def:	push   edi
  404df0:	sbb    eax,0x80a5c72e
  404df5:	adc    BYTE PTR [ecx],cl
  404df7:	aaa    
  404df8:	mov    WORD PTR [ebx+0x56],?
  404dfb:	nop
  404dfc:	jg     0x404dcc
  404dfe:	std    
  404dff:	mov    ds:0x3885c418,al
  404e04:	xor    eax,0xb914b1d6
  404e09:	(bad)  
  404e0a:	dec    ebp
  404e0b:	(bad)  
  404e0c:	jns    0x404e01
  404e0e:	mov    cl,0xb1
  404e10:	mov    al,0xd2
  404e12:	inc    ebp
  404e13:	test   BYTE PTR [ecx-0x69110acc],0x59
  404e1a:	mov    edx,0x32c3f7b3
  404e1f:	jecxz  0x404e7f
  404e21:	cmc    
  404e22:	pop    esi
  404e23:	mov    ds:0xc0107fe1,al
  404e28:	test   ah,ah
  404e2a:	repz jne 0x404e15
  404e2d:	lods   eax,DWORD PTR ds:[esi]
  404e2e:	les    esi,FWORD PTR [eax-0x54]
  404e31:	rcr    BYTE PTR [ebp+0x7c],1
  404e34:	or     eax,0xa2ae087a
  404e39:	inc    ebp
  404e3a:	jmp    0xcf997ac2
  404e3f:	das    
  404e40:	daa    
  404e41:	in     eax,dx
  404e42:	jmp    0x404de1
  404e44:	je     0x404e99
  404e46:	inc    eax
  404e47:	(bad)  
  404e48:	in     eax,0x29
  404e4a:	xor    dl,dh
  404e4c:	scas   eax,DWORD PTR es:[edi]
  404e4d:	sbb    eax,0x150c42aa
  404e52:	jno    0x404ecf
  404e54:	repz inc ebp
  404e56:	fcom   QWORD PTR [ebp-0x1a]
  404e59:	push   cs
  404e5a:	mov    dh,0xda
  404e5c:	sbb    al,0x46
  404e5e:	adc    edx,DWORD PTR [esi]
  404e60:	xchg   esi,eax
  404e61:	loop   0x404e22
  404e63:	push   edx
  404e64:	pop    esp
  404e65:	pop    edi
  404e66:	(bad)  
  404e67:	dec    edx
  404e68:	adc    eax,0x6ed2129f
  404e6d:	clc    
  404e6e:	jp     0x404e8f
  404e70:	nop
  404e71:	ds push es
  404e73:	mov    WORD PTR [eax+0x3f],cs
  404e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e77:	adc    ebx,DWORD PTR [edx+0x3d]
  404e7a:	or     dl,bh
  404e7c:	fnstenv [esi]
  404e7e:	outs   dx,BYTE PTR ds:[esi]
  404e7f:	inc    ebp
  404e80:	sbb    eax,0xf460097b
  404e85:	gs push esp
  404e87:	mov    dl,0x26
  404e89:	repnz mov WORD PTR [edx],?
  404e8c:	and    BYTE PTR [edi+0x1e20b8e9],bh
  404e92:	dec    esi
  404e93:	mov    ds:0x1d31801b,eax
  404e98:	ss scas al,BYTE PTR es:[edi]
  404e9a:	jecxz  0x404ea6
  404e9c:	lea    eax,[ebp-0x19b3fb6a]
  404ea2:	enter  0xe237,0x1b
  404ea6:	(bad)
  404eab:	push   ss
  404eac:	sbb    eax,0xf57cad6c
  404eb1:	add    BYTE PTR [ecx],dh
  404eb3:	pop    ecx
  404eb4:	and    al,0x26
  404eb6:	dec    edi
  404eb7:	std    
  404eb8:	pusha  
  404eb9:	aad    0xf5
  404ebb:	std    
  404ebc:	or     dl,0x26
  404ebf:	rcr    ebp,0xc
  404ec2:	test   DWORD PTR [ebp-0x51bbfeab],eax
  404ec8:	mov    eax,0x43732481
  404ecd:	out    0x8,al
  404ecf:	enter  0xcc71,0x36
  404ed3:	xor    al,0x63
  404ed5:	pop    ds
  404ed6:	push   ebp
  404ed7:	xor    esi,DWORD PTR [ecx-0x3f]
  404eda:	mov    cl,0xb3
  404edc:	loopne 0x404f41
  404ede:	pop    ebx
  404edf:	cmp    ebp,0x9f5c2fc1
  404ee5:	(bad)  
  404ee6:	loopne 0x404f06
  404ee8:	fistp  WORD PTR [edi+0x5bb0f59e]
  404eee:	inc    edx
  404eef:	and    BYTE PTR [ecx+0x30],dh
  404ef2:	push   ecx
  404ef3:	popa   
  404ef4:	pop    ss
  404ef5:	jns    0x404f01
  404ef7:	adc    al,0x28
  404ef9:	lahf   
  404efa:	loop   0x404ed4
  404efc:	dec    edx
  404efd:	add    dh,BYTE PTR [ebx-0x6a]
  404f00:	(bad)  
  404f01:	sti    
  404f02:	aad    0xb9
  404f04:	imul   esp,DWORD PTR [ebx-0x5],0xffffffcc
  404f08:	mov    bh,0x29
  404f0a:	fisttp QWORD PTR [edx]
  404f0c:	ds jno 0x404ee2
  404f0f:	jg     0x404f72
  404f11:	in     al,dx
  404f12:	fisttp DWORD PTR [ebx]
  404f14:	mov    bh,0xb8
  404f16:	push   ebp
  404f17:	loopne 0x404f24
  404f19:	es push ebx
  404f1b:	scas   eax,DWORD PTR es:[edi]
  404f1c:	pop    edi
  404f1d:	jb     0x404ea5
  404f1f:	or     al,0x22
  404f22:	adc    al,0x29
  404f24:	sbb    DWORD PTR [esp+esi*4-0x4a57f9cc],esi
  404f2b:	clc    
  404f2c:	dec    edi
  404f2d:	repnz xor dh,cl
  404f30:	bound  eax,QWORD PTR [ebx-0x3f]
  404f33:	sub    bl,BYTE PTR [edi]
  404f35:	shr    DWORD PTR [edx-0x61],1
  404f38:	fwait
  404f39:	rcl    DWORD PTR [eax+0x1a],0xd9
  404f3d:	sub    ah,BYTE PTR [esi+0x7f]
  404f40:	xchg   esp,eax
  404f41:	pop    es
  404f42:	stc    
  404f43:	test   ebp,0xa0524676
  404f49:	ss mov dh,0x5d
  404f4c:	fdivr  QWORD PTR [ebx+0x139d5bbb]
  404f52:	mov    ecx,0x487e5807
  404f57:	adc    ah,bh
  404f59:	jmp    0x404fd9
  404f5b:	mov    dh,0x33
  404f5d:	lock lahf 
  404f5f:	sbb    DWORD PTR [ebp+0x48],ecx
  404f62:	mov    cs,WORD PTR [edi-0x55]
  404f65:	ins    BYTE PTR es:[edi],dx
  404f66:	stos   DWORD PTR es:[edi],eax
  404f67:	xor    ebp,DWORD PTR [edx-0x11e9b73a]
  404f6d:	mov    ?,WORD PTR [esi+0x3d]
  404f70:	mov    ah,0xdf
  404f72:	jmp    0x134a:0x1c2ad319
  404f79:	or     esi,edi
  404f7b:	sbb    edx,DWORD PTR [eax+ebx*1]
  404f7e:	adc    BYTE PTR ds:0x508986db,bh
  404f84:	cli    
  404f85:	shr    DWORD PTR [eax],1
  404f87:	sahf   
  404f88:	push   ss
  404f89:	(bad)  
  404f8a:	sbb    al,0x87
  404f8c:	les    eax,FWORD PTR [esp+eiz*4-0x672e5a0c]
  404f93:	clc    
  404f94:	fidiv  WORD PTR [ecx]
  404f96:	mov    edx,0xfcd6ace1
  404f9b:	retf   
  404f9c:	inc    ebp
  404f9d:	dec    DWORD PTR [ebp+0x27]
  404fa0:	push   ebp
  404fa1:	dec    ecx
  404fa2:	mov    edi,0xe3a7c96f
  404fa7:	cs inc ecx
  404fa9:	push   ss
  404faa:	mov    ebp,0x42bedde2
  404faf:	fwait
  404fb0:	xchg   BYTE PTR [ecx+0x36c64435],dl
  404fb6:	rcr    ah,1
  404fb8:	fisttp DWORD PTR [edx-0x5709ef9e]
  404fbe:	lods   eax,DWORD PTR ds:[esi]
  404fbf:	jmp    0x405025
  404fc1:	and    eax,edx
  404fc3:	ins    DWORD PTR es:[edi],dx
  404fc4:	sbb    BYTE PTR [edx-0x8],dh
  404fc7:	adc    DWORD PTR [esi+0x5a66500c],eax
  404fcd:	ss mov ebx,0xb9b46358
  404fd3:	test   al,0x22
  404fd5:	pop    ebx
  404fd6:	add    BYTE PTR [esi-0x28ca7da2],0x3a
  404fdd:	rcr    DWORD PTR [ebx-0x30],0xba
  404fe1:	stos   BYTE PTR es:[edi],al
  404fe2:	mov    bh,0x66
  404fe4:	outs   dx,DWORD PTR ds:[esi]
  404fe5:	xor    eax,0xd5ee10c4
  404fea:	repnz stos BYTE PTR es:[edi],al
  404fec:	mov    esi,0x8f70fcd6
  404ff1:	cli    
  404ff2:	outs   dx,BYTE PTR ds:[esi]
  404ff3:	jmp    0x405010
  404ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ff6:	ret    0x2b87
  404ff9:	aaa    
  404ffa:	mov    ebp,0xf04432ba
  404fff:	pop    esi
  405000:	and    ah,0x7e
  405003:	jge    0x404fdf
  405005:	aad    0xe0
  405007:	xlat   BYTE PTR ds:[ebx]
  405008:	sub    al,0x26
  40500a:	sbb    eax,0x48641926
  40500f:	call   0x33af:0x48513046
  405016:	arpl   si,bx
  405018:	in     al,0x8b
  40501a:	xchg   edi,eax
  40501b:	cmp    esi,DWORD PTR [ebx+edi*4]
  40501e:	push   0x823f7cf0
  405023:	jae    0x40503e
  405025:	fidiv  WORD PTR [ebx+0x558a9c10]
  40502b:	xor    ah,BYTE PTR [edi]
  40502d:	xchg   ebp,eax
  40502e:	nop
  40502f:	clc    
  405030:	xchg   esp,eax
  405031:	sub    BYTE PTR [esi-0x4d],dh
  405034:	in     al,0x73
  405036:	jg     0x404ff6
  405038:	push   0x41795b5d
  40503d:	xchg   ecx,eax
  40503e:	sub    BYTE PTR ds:0xcb02b4c2,bl
  405044:	sub    dl,BYTE PTR [esi+0x4318a6bc]
  40504a:	and    DWORD PTR [ebx],edi
  40504c:	loop   0x405052
  40504e:	inc    edi
  40504f:	rol    ebx,1
  405051:	pop    es
  405052:	cmp    DWORD PTR [edx-0x3a],0xab1a62a1
  405059:	out    dx,al
  40505a:	mov    edx,0x78a9135b
  40505f:	sbb    DWORD PTR ds:0x6999e7a2,0x231a0444
  405069:	stos   BYTE PTR es:[edi],al
  40506a:	and    DWORD PTR [ebp+0x6954d6a8],ebx
  405070:	mov    ds:0x3b66457b,eax
  405075:	ja     0x4050d0
  405077:	inc    ebp
  405078:	xchg   esi,eax
  405079:	sbb    eax,0x8b4eb492
  40507e:	push   es
  40507f:	xchg   DWORD PTR [eax+ecx*2+0x6f87b075],ebp
  405086:	push   eax
  405087:	add    al,0xb5
  405089:	adc    eax,0xf145646d
  40508e:	gs push esi
  405090:	pop    ebx
  405091:	shr    BYTE PTR [ecx+0x2d],1
  405094:	pop    edi
  405095:	inc    edi
  405096:	fcomp  DWORD PTR [edx+0x64]
  405099:	push   eax
  40509a:	pop    eax
  40509b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40509c:	shl    DWORD PTR [ebx-0x5],1
  40509f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050a0:	add    bh,BYTE PTR [edi+ecx*8]
  4050a3:	fs sub eax,0xb6b2fd63
  4050a9:	and    BYTE PTR [edi],ah
  4050ab:	push   edi
  4050ac:	imul   esi,ecx,0x2b082966
  4050b2:	(bad)  [edi+0x4064078d]
  4050b8:	adc    bh,BYTE PTR [eax+esi*4-0x669d4b92]
  4050bf:	jnp    0x4050f0
  4050c1:	or     bl,dh
  4050c3:	nop
  4050c4:	mov    edx,0x5e2d2a7c
  4050c9:	pop    ecx
  4050ca:	or     BYTE PTR [ebp-0x6c502961],bl
  4050d0:	xchg   edx,eax
  4050d1:	dec    ah
  4050d3:	sbb    ecx,DWORD PTR ds:0x6e4b1c61
  4050d9:	mov    dh,0x0
  4050db:	mov    bl,0x2c
  4050dd:	ja     0x4050bf
  4050df:	mov    edi,0x14a8cc04
  4050e4:	leave  
  4050e5:	daa    
  4050e6:	ret    
  4050e7:	mov    ebx,0x14f25a52
  4050ec:	dec    esi
  4050ed:	leave  
  4050ee:	ret    
  4050ef:	test   al,0x5b
  4050f1:	inc    edi
  4050f2:	jo     0x4050ae
  4050f4:	pop    ebp
  4050f5:	fmul   QWORD PTR [esi]
  4050f7:	adc    BYTE PTR [ebp-0x7488875],0xb5
  4050fe:	sbb    dh,ch
  405100:	mov    esp,0x34f9c8f8
  405105:	push   edi
  405106:	sbb    al,0xa0
  405108:	push   ebp
  405109:	adc    eax,0xfb04e40b
  40510e:	xchg   ebx,eax
  40510f:	xchg   edi,eax
  405110:	or     al,ah
  405112:	xor    BYTE PTR [edi],ch
  405114:	inc    esi
  405115:	(bad)  
  405116:	jmp    0xf2e07a0f
  40511b:	jne    0x405120
  40511d:	fiadd  DWORD PTR [ebx+0x39]
  405120:	mov    ebx,0xafb10438
  405125:	in     eax,0x6f
  405127:	mov    dl,0xba
  405129:	push   edi
  40512a:	dec    ecx
  40512b:	mov    WORD PTR [eax],ss
  40512d:	pop    ecx
  40512e:	mov    BYTE PTR [edi-0x74c6715c],0xed
  405135:	mov    bh,0x16
  405137:	adc    BYTE PTR [eax+esi*8],dh
  40513a:	(bad)  
  40513b:	imul   edx,DWORD PTR [ebx+edx*4-0x72],0xc694bcba
  405143:	push   ebx
  405144:	xchg   BYTE PTR [esi+0x7d],dh
  405147:	(bad)  
  405149:	add    BYTE PTR [edi-0x5e2c5d61],dh
  40514f:	jo     0x4050ff
  405151:	push   eax
  405152:	sbb    BYTE PTR [esi-0x63531a59],ah
  405158:	out    0x11,eax
  40515a:	fwait
  40515b:	cdq    
  40515c:	iret   
  40515d:	sbb    edi,DWORD PTR [edi-0x5b]
  405160:	pop    DWORD PTR [edx-0x6df87746]
  405166:	into   
  405167:	mov    al,0x81
  405169:	pusha  
  40516a:	adc    eax,0x3e9f741c
  40516f:	add    edx,DWORD PTR [edi]
  405171:	sbb    al,0xd4
  405173:	xor    eax,0x6bdb70dd
  405178:	scas   al,BYTE PTR es:[edi]
  405179:	xor    BYTE PTR [esi],bl
  40517b:	nop
  40517c:	shr    dh,cl
  40517e:	jne    0x405114
  405180:	cmp    eax,0xe0ec28b5
  405185:	loope  0x405112
  405187:	jge    0x4051b9
  405189:	fcompp 
  40518b:	dec    edx
  40518c:	cmp    DWORD PTR [esi],eax
  40518e:	aaa    
  40518f:	xor    al,0xb3
  405191:	fisttp QWORD PTR [ebx+0x74fa45ed]
  405197:	inc    ebp
  405198:	inc    eax
  405199:	repnz arpl WORD PTR [edx-0x78],ax
  40519d:	add    BYTE PTR [eax],bl
  40519f:	test   BYTE PTR [ecx-0x386e4d2c],0x87
  4051a6:	cli    
  4051a7:	outs   dx,BYTE PTR ds:[esi]
  4051a8:	xor    dh,ah
  4051aa:	mul    DWORD PTR [edi+ebp*8]
  4051ad:	and    edi,0x1c
  4051b0:	retf   
  4051b1:	pop    ss
  4051b2:	(bad)  
  4051b3:	cmp    ebp,edi
  4051b5:	sbb    DWORD PTR [esi-0x1a],edi
  4051b8:	jns    0x4051f4
  4051ba:	mov    eax,0x85a3a2fd
  4051bf:	mov    cl,0x7d
  4051c1:	dec    eax
  4051c2:	fist   WORD PTR [esi+0x27a98322]
  4051c8:	mov    al,ds:0xf6b029ba
  4051cd:	add    dl,ch
  4051cf:	mov    BYTE PTR [edi],ch
  4051d1:	pop    es
  4051d2:	xchg   edx,eax
  4051d3:	dec    ecx
  4051d4:	into   
  4051d5:	push   ecx
  4051d6:	aam    0x62
  4051d8:	cmp    eax,0x8182b114
  4051dd:	push   ds
  4051de:	xchg   ecx,eax
  4051df:	sbb    al,0x94
  4051e1:	test   edi,eax
  4051e3:	call   0xccce9897
  4051e8:	fwait
  4051e9:	mov    esi,0x577dbe9d
  4051ee:	sub    cl,0xa0
  4051f1:	or     cl,BYTE PTR [eax+0x42]
  4051f4:	adc    eax,esi
  4051f6:	je     0x40523f
  4051f8:	or     bh,BYTE PTR [eax-0x4]
  4051fb:	je     0x4051e9
  4051fd:	ret    0xd366
  405200:	and    al,0xc9
  405202:	outs   dx,DWORD PTR ds:[esi]
  405203:	and    esp,0x1842ab30
  405209:	mov    ebp,0x52e5fd39
  40520e:	stos   BYTE PTR es:[edi],al
  40520f:	retf   0xd672
  405212:	(bad)  
  405213:	or     al,0xbf
  405215:	push   eax
  405216:	xor    ch,bl
  405218:	gs inc esp
  40521a:	mov    bh,0x33
  40521c:	repnz and esp,DWORD PTR [ecx-0x1c]
  405220:	call   0x60385d3
  405225:	fdiv   QWORD PTR [edx+0x32]
  405228:	add    cl,ch
  40522a:	add    DWORD PTR fs:[eax],eax
  40522d:	add    BYTE PTR [ebx+0x4d03c84d],cl
  405233:	or     BYTE PTR [ecx+0x4d8bf04d],cl
  405239:	in     al,0x85
  40523b:	leave  
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x59e594ee
  405804:	mov    bl,BYTE PTR [ebx+0x7c7c5fe0]
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	pop    eax
  40580f:	add    BYTE PTR [ebp-0x66537f28],ch
  405815:	ss pop edx
  405817:	ret    0x7f50
  40581a:	mov    edx,ebx
  40581c:	dec    esp
  40581d:	push   ds
  40581e:	test   al,0x1f
  405820:	xor    DWORD PTR [ebx-0x15],edx
  405823:	dec    edx
  405824:	mov    ah,0x2e
  405826:	imul   esp,DWORD PTR [eax],0xff59e4c2
  40582c:	adc    eax,0xb341e20a
  405831:	mov    bh,0x36
  405833:	mov    WORD PTR [ebx-0x8f6671],gs
  405839:	push   esp
  40583a:	iret   
  40583b:	adc    BYTE PTR [esi+0x6f],cl
  40583e:	fidiv  WORD PTR [ebp+0x55]
  405841:	sub    al,BYTE PTR [edx+0x6aaaba39]
  405847:	xchg   ebp,eax
  405848:	out    dx,al
  405849:	xchg   ebp,eax
  40584a:	jg     0x4058ab
  40584c:	fnstcw WORD PTR [edi+0x1a]
  40584f:	and    eax,0x6d648f9
  405854:	jle    0x40588b
  405856:	jecxz  0x405855
  405858:	rcr    BYTE PTR [esi+edi*8+0x68],cl
  40585c:	push   0xf963cf8b
  405861:	into   
  405862:	sub    eax,0x1b492bbd
  405867:	adc    bl,dh
  405869:	mov    eax,0x41c0d986
  40586e:	mov    al,BYTE PTR [edi-0x2f]
  405871:	int3   
  405872:	xchg   ebp,eax
  405873:	ss repnz inc ebx
  405876:	setg   bl
  405879:	gs dec esp
  40587b:	mov    BYTE PTR [esi+0x4265dde0],0x83
  405882:	pop    ebp
  405883:	dec    ecx
  405884:	fisttp WORD PTR [ebp+0x184c0fc3]
  40588a:	inc    esi
  40588b:	scas   eax,DWORD PTR es:[edi]
  40588c:	fwait
  40588d:	and    eax,0x2eb96f86
  405892:	cmp    al,0x6e
  405894:	xchg   DWORD PTR [esi+ecx*4],esp
  405897:	jb     0x4058fc
  405899:	inc    esi
  40589a:	lds    ecx,FWORD PTR [ecx+ecx*1]
  40589d:	cwde   
  40589e:	jnp    0x4058f1
  4058a0:	js     0x405848
  4058a2:	push   0x6d
  4058a4:	jae    0x4058fe
  4058a6:	ret    
  4058a7:	add    BYTE PTR [esp+eiz*2+0x1e],ch
  4058ab:	repz lock lahf 
  4058ae:	in     al,0xe7
  4058b0:	sbb    DWORD PTR [esi+0x32485c08],edx
  4058b6:	dec    ebp
  4058b7:	dec    esi
  4058b8:	push   ebp
  4058b9:	add    eax,0xd8b89a56
  4058be:	mov    bl,0x46
  4058c0:	mov    esi,0x7d6125cc
  4058c5:	test   BYTE PTR [edi-0x6899af91],al
  4058cb:	mov    ds:0x20bea031,eax
  4058d0:	ror    esp,0xef
  4058d3:	pop    edi
  4058d4:	lahf   
  4058d5:	imul   eax,DWORD PTR [eax-0x10],0x2e
  4058d9:	sub    al,0xd7
  4058db:	lea    edx,[edi-0x2e97680f]
  4058e1:	mov    ebx,DWORD PTR [edx+edi*8+0x1e610e2c]
  4058e8:	sahf   
  4058e9:	lahf   
  4058ea:	xchg   BYTE PTR [edx],dl
  4058ec:	into   
  4058ed:	mov    bl,0x40
  4058ef:	lds    ebx,FWORD PTR [ebp-0x2370fd62]
  4058f5:	fiadd  DWORD PTR [ecx]
  4058f7:	xchg   esp,eax
  4058f8:	ret    0x4143
  4058fb:	and    DWORD PTR ds:0xbc66d3fc,esi
  405901:	rcl    BYTE PTR [eax+edx*8+0x5b5fb5fd],1
  405908:	mov    ds:0x82a68270,al
  40590d:	mov    ds:0xbd8c03af,eax
  405912:	mov    edx,DWORD PTR [esi-0x65]
  405915:	daa    
  405916:	add    BYTE PTR [eax],bl
  405918:	stos   DWORD PTR es:[edi],eax
  405919:	js     0x40598d
  40591b:	data16 jmp 0x40589e
  40591e:	enter  0xb3d9,0x47
  405922:	jl     0x405911
  405924:	stos   BYTE PTR es:[edi],al
  405925:	or     DWORD PTR [edi+0x1babf78f],eax
  40592b:	mov    dl,dl
  40592d:	stc    
  40592e:	mov    eax,ds:0xbac739e6
  405933:	and    al,0xc8
  405935:	push   edi
  405936:	add    eax,0x9923d6c8
  40593b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40593c:	mov    WORD PTR [esi+0x5e],ds
  40593f:	repz ficomp WORD PTR [esi-0x3ada6f8b]
  405946:	sbb    al,0x6e
  405948:	mov    al,0x80
  40594a:	jae    0x405914
  40594c:	jne    0x405933
  40594e:	xchg   edi,eax
  40594f:	xchg   edi,eax
  405950:	ret    0xa89f
  405953:	inc    edx
  405954:	ds mov edi,0x88320fe1
  40595a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40595b:	jo     0x405935
  40595d:	stos   DWORD PTR es:[edi],eax
  40595e:	jg     0x405923
  405960:	push   edi
  405961:	lea    ebx,[esi]
  405963:	imul   edx,esi,0xffffffb3
  405966:	lods   eax,DWORD PTR ds:[esi]
  405967:	fist   WORD PTR [ecx-0x34]
  40596a:	xchg   DWORD PTR [eax],esp
  40596c:	and    al,0xa8
  40596e:	add    al,0xae
  405970:	jb     0x4059a8
  405972:	cmp    BYTE PTR [ebp+edx*4+0x4ab4fa88],ch
  405979:	cmp    DWORD PTR [edx+0x40],edi
  40597c:	push   ecx
  40597d:	sbb    ah,dl
  40597f:	add    DWORD PTR [ebx-0x78e76a93],edx
  405985:	xor    al,0x6c
  405987:	inc    esp
  405988:	int3   
  405989:	mov    ebx,0x281cce61
  40598e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40598f:	jmp    0x4059af
  405991:	pop    edx
  405992:	rcr    DWORD PTR [esi-0x6cd9fcd8],1
  405998:	xchg   esp,eax
  405999:	hlt    
  40599a:	xor    dh,BYTE PTR [edx]
  40599c:	mov    cs,WORD PTR [ebp-0x5d058174]
  4059a2:	rol    BYTE PTR [eax-0x56],1
  4059a5:	cmp    DWORD PTR [edi-0x71d9d4f0],ebp
  4059ab:	sub    al,0x6d
  4059ad:	jl     0x405a26
  4059af:	cmp    cl,BYTE PTR [eiz*1-0x74c0e561]
  4059b6:	adc    eax,0x30eacf8b
  4059bb:	loope  0x405a37
  4059bd:	push   edx
  4059be:	adc    DWORD PTR [eax+ebp*2],eax
  4059c1:	push   ecx
  4059c2:	pushf  
  4059c3:	sub    cl,BYTE PTR [eax]
  4059c5:	sti    
  4059c6:	inc    edi
  4059c7:	pop    es
  4059c8:	test   al,0x2a
  4059ca:	add    al,0x77
  4059cc:	mov    esi,0x44e94c96
  4059d1:	shl    DWORD PTR fs:[eax+0x24],1
  4059d5:	shr    BYTE PTR [ecx+0x6ea7345b],1
  4059db:	scas   al,BYTE PTR es:[edi]
  4059dc:	push   ebx
  4059dd:	adc    DWORD PTR [ecx+0x78],0x28
  4059e1:	push   0xa5878be0
  4059e6:	pop    ss
  4059e7:	aaa    
  4059e8:	mov    ebp,0x3fd6ceda
  4059ed:	jo     0x4059a0
  4059ef:	repz not bl
  4059f2:	pop    esp
  4059f3:	les    ebx,FWORD PTR [esi+eiz*2-0x6f826a80]
  4059fa:	popf   
  4059fb:	scas   eax,DWORD PTR es:[edi]
  4059fc:	fwait
  4059fd:	and    BYTE PTR [esi+eax*2-0x6a],bh
  405a01:	pop    ebp
  405a02:	push   ebp
  405a03:	test   BYTE PTR [ecx-0x15],dl
  405a06:	sub    al,BYTE PTR [edx]
  405a08:	mov    WORD PTR [ebx+0x752d8993],?
  405a0e:	cdq    
  405a0f:	inc    ebp
  405a10:	fnstsw WORD PTR [ecx]
  405a12:	inc    ecx
  405a13:	lods   al,BYTE PTR ds:[esi]
  405a14:	(bad)  
  405a16:	dec    eax
  405a17:	daa    
  405a18:	out    0x6f,al
  405a1a:	call   0xd31ce568
  405a1f:	fcmove st,st(7)
  405a21:	push   edi
  405a22:	sub    ecx,DWORD PTR [ecx+0x47]
  405a25:	dec    eax
  405a26:	scas   eax,DWORD PTR es:[edi]
  405a27:	cmp    al,0x98
  405a29:	lods   eax,DWORD PTR ds:[esi]
  405a2a:	call   0x94128ede
  405a2f:	dec    ebp
  405a30:	dec    edx
  405a31:	dec    esp
  405a32:	push   esi
  405a33:	sahf   
  405a34:	add    eax,0x637c0141
  405a39:	adc    eax,0x7dcf9e9f
  405a3e:	push   0x21
  405a40:	adc    esp,0x616afbd
  405a46:	fistp  QWORD PTR [edx+edi*1]
  405a49:	dec    ebx
  405a4a:	cmp    ebp,esp
  405a4c:	pop    es
  405a4d:	test   BYTE PTR [esi+ecx*1+0x3e],cl
  405a51:	adc    cl,0xa9
  405a54:	aaa    
  405a55:	das    
  405a56:	ret    0xf97f
  405a59:	jne    0x4059dd
  405a5b:	dec    edi
  405a5c:	mov    ebx,0xf0a9e463
  405a61:	icebp  
  405a62:	fisttp WORD PTR [esi]
  405a64:	mov    bl,0xf3
  405a66:	dec    esi
  405a67:	adc    BYTE PTR [ecx],cl
  405a69:	inc    esi
  405a6a:	jno    0x405a02
  405a6c:	ins    DWORD PTR es:[edi],dx
  405a6d:	fisub  WORD PTR [ebp+0x351d0ef4]
  405a73:	dec    ebx
  405a74:	pushf  
  405a75:	icebp  
  405a76:	mov    DWORD PTR [eax+ebp*2+0x6f],edx
  405a7a:	gs dec edi
  405a7c:	sbb    eax,0x73a6624a
  405a81:	cmp    DWORD PTR ds:0xc0e226fe,edi
  405a87:	arpl   WORD PTR [ebx-0x4e647cd9],ax
  405a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a8e:	fiadd  DWORD PTR [ecx-0x1e863479]
  405a94:	xchg   BYTE PTR [esp+ecx*2],bl
  405a97:	push   0xf
  405a99:	dec    ecx
  405a9a:	retf   
  405a9b:	push   ss
  405a9c:	sub    edx,esp
  405a9e:	(bad)  
  405a9f:	xor    al,cl
  405aa1:	sti    
  405aa2:	and    al,0xc
  405aa4:	push   ebx
  405aa5:	retf   
  405aa6:	scas   eax,DWORD PTR es:[edi]
  405aa7:	cmp    dh,bh
  405aa9:	loopne 0x405aff
  405aab:	lods   eax,DWORD PTR ds:[esi]
  405aac:	mov    dl,0x7a
  405aae:	fild   DWORD PTR [edx]
  405ab0:	push   0x27ae45a2
  405ab5:	add    al,0xb0
  405ab7:	in     al,0x7f
  405ab9:	(bad)  
  405aba:	das    
  405abb:	adc    edx,0x9b94376e
  405ac1:	jmp    0x14be:0xdd19d700
  405ac8:	jg     0x405b40
  405aca:	lods   al,BYTE PTR ds:[esi]
  405acb:	(bad)  
  405acc:	pop    ss
  405acd:	jle    0x405b2b
  405acf:	imul   ch
  405ad1:	mov    esp,DWORD PTR [esi-0x52a6c791]
  405ad7:	retf   0xc146
  405ada:	jb     0x405ac6
  405adc:	mov    WORD PTR [ebp-0x42b84d9c],?
  405ae2:	adc    al,0xc3
  405ae4:	or     bl,cl
  405ae6:	xlat   BYTE PTR ds:[ebx]
  405ae7:	int3   
  405ae8:	push   edx
  405ae9:	aaa    
  405aea:	push   cs
  405aeb:	jge    0x405b3e
  405aed:	(bad)  
  405aee:	fld    DWORD PTR [edx-0x3b05b703]
  405af4:	arpl   WORD PTR [edx+0x58f86223],ax
  405afa:	aaa    
  405afb:	jecxz  0x405a9f
  405afd:	mov    BYTE PTR [ecx-0x4ed2ca2],ah
  405b03:	imul   eax,DWORD PTR [ebx],0xd53a54a3
  405b09:	push   es
  405b0a:	push   cs
  405b0b:	or     DWORD PTR [esi+0x3c],edx
  405b0e:	sub    cl,BYTE PTR [esi+0x60a71857]
  405b14:	add    dh,dh
  405b16:	mov    eax,ds:0x431cdbf3
  405b1b:	dec    eax
  405b1c:	icebp  
  405b1d:	shl    DWORD PTR [eax+0x10],1
  405b20:	cmp    BYTE PTR [ecx-0xe],cl
  405b23:	push   esp
  405b24:	mov    esi,0xf5855db1
  405b29:	adc    cl,BYTE PTR [ebx-0x7a]
  405b2c:	nop
  405b2d:	fistp  WORD PTR [ecx]
  405b2f:	push   edx
  405b30:	inc    eax
  405b31:	xor    esp,DWORD PTR [ebp-0x23]
  405b34:	sbb    eax,0x9bfac483
  405b39:	mov    ch,0x32
  405b3b:	daa    
  405b3c:	mov    edx,0x20c8bf43
  405b41:	call   0xf4d24d04
  405b46:	sbb    DWORD PTR [edx],0xe1a268ab
  405b4c:	sub    ah,BYTE PTR [ebx]
  405b4e:	mov    esp,0x4562192a
  405b53:	leave  
  405b54:	cmp    ebx,DWORD PTR [ecx-0x7e5e5c4f]
  405b5a:	inc    esp
  405b5b:	fistp  DWORD PTR ds:0x48d51b69
  405b61:	jo     0x405b53
  405b63:	sbb    ch,BYTE PTR [ebx-0x2d99056c]
  405b69:	cmp    al,0x6c
  405b6b:	add    esp,0x58
  405b6e:	stos   BYTE PTR es:[edi],al
  405b6f:	sbb    eax,0xf67a3916
  405b74:	fild   DWORD PTR [ebx+0x714dfeac]
  405b7a:	and    eax,0x1636832e
  405b7f:	and    ebx,ebp
  405b81:	arpl   WORD PTR ds:0x8afb2250,cx
  405b87:	repnz sti 
  405b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b8a:	push   es
  405b8b:	or     DWORD PTR [esi+eax*1+0x1a0b645a],edi
  405b92:	push   ecx
  405b93:	add    dh,BYTE PTR [eax]
  405b95:	and    dh,0xa4
  405b98:	push   edx
  405b99:	test   ebp,ebp
  405b9b:	in     eax,0x3f
  405b9d:	xor    al,0x89
  405b9f:	iret   
  405ba0:	pop    ebx
  405ba1:	clc    
  405ba2:	int3   
  405ba3:	loop   0x405bbc
  405ba5:	adc    eax,DWORD PTR [esi-0x13]
  405ba8:	cmp    al,0xd3
  405baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bab:	or     al,0x19
  405bad:	mov    ebp,0xe60cc7f8
  405bb2:	lods   al,BYTE PTR ds:[esi]
  405bb3:	push   cs
  405bb4:	je     0x405bd7
  405bb6:	cmp    ebx,edi
  405bb8:	sub    al,0xbe
  405bba:	hlt    
  405bbb:	sub    DWORD PTR [ebx],eax
  405bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bbe:	rcr    BYTE PTR [ecx+0x49ef9505],0x4f
  405bc5:	sub    DWORD PTR [eax-0x18097236],eax
  405bcb:	(bad)  [edi]
  405bcd:	inc    eax
  405bce:	cld    
  405bcf:	imul   ebp,DWORD PTR [esi],0xffffffa9
  405bd2:	fbld   TBYTE PTR [ebp-0x3b]
  405bd5:	mov    ah,0xbb
  405bd7:	and    edx,DWORD PTR [ebp+edi*4-0x3a657886]
  405bde:	cdq    
  405bdf:	pop    eax
  405be0:	fcmovbe st,st(3)
  405be2:	in     al,0x5c
  405be4:	inc    ecx
  405be5:	clc    
  405be6:	nop
  405be7:	repnz dec edi
  405be9:	cmp    DWORD PTR [edx-0x394bcac3],esi
  405bef:	hlt    
  405bf0:	lods   al,BYTE PTR ds:[esi]
  405bf1:	push   ss
  405bf2:	daa    
  405bf3:	jge    0x405c73
  405bf5:	neg    DWORD PTR [ebx+eiz*1-0x1a983551]
  405bfc:	push   0x47
  405bfe:	mov    al,0xe2
  405c00:	cs dec edi
  405c02:	aas    
  405c03:	scas   al,BYTE PTR es:[edi]
  405c04:	fcmovb st,st(1)
  405c06:	in     eax,dx
  405c07:	xor    bl,bh
  405c09:	imul   esi,DWORD PTR [eax-0x4ec395a4],0x15e7b635
  405c13:	jnp    0x405c71
  405c15:	pop    ebx
  405c16:	mov    al,0xcb
  405c18:	mov    ebp,0x7b263422
  405c1d:	push   es
  405c1e:	adc    eax,0xae5671fe
  405c23:	push   eax
  405c24:	xchg   ecx,eax
  405c25:	push   0xffffffe1
  405c27:	jb     0x405be4
  405c29:	jnp    0x405bf8
  405c2b:	out    dx,eax
  405c2c:	push   esp
  405c2d:	or     BYTE PTR [eax-0x4d5b8884],dl
  405c33:	stos   DWORD PTR es:[edi],eax
  405c34:	mov    ebx,0x36b2c1a4
  405c39:	pop    esi
  405c3a:	sbb    DWORD PTR [eax],eax
  405c3c:	jmp    0x5f9960fd
  405c41:	push   ebx
  405c42:	addr16 mov esp,0x56bae294
  405c48:	xchg   ebp,eax
  405c49:	mov    esi,DWORD PTR [ecx]
  405c4b:	out    dx,al
  405c4c:	xorps  xmm4,XMMWORD PTR [ebp-0x67]
  405c50:	mov    edi,0x98978116
  405c55:	push   ecx
  405c56:	ja     0x405caa
  405c58:	dec    esp
  405c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c5a:	jmp    0xe229:0x39f65a2d
  405c61:	(bad)  [edx]
  405c63:	fsub   DWORD PTR [edx-0x1c55e1dd]
  405c69:	cwde   
  405c6a:	daa    
  405c6b:	jo     0x405c36
  405c6d:	fsub   st(0),st
  405c6f:	icebp  
  405c70:	mov    dh,0x6a
  405c72:	xor    eax,0xc4457c40
  405c77:	(bad)  
  405c78:	addr16 xor al,dl
  405c7b:	inc    ecx
  405c7c:	sbb    al,0xc9
  405c7e:	iret   
  405c7f:	sti    
  405c80:	lahf   
  405c81:	int    0x1e
  405c83:	add    edx,DWORD PTR [esi-0x3e]
  405c86:	outs   dx,DWORD PTR ds:[esi]
  405c87:	sahf   
  405c88:	jmp    0x3e97e96b
  405c8d:	jge    0x405d08
  405c8f:	mov    ebp,0xf00cc143
  405c94:	call   0xb686d91a
  405c99:	cld    
  405c9a:	push   ss
  405c9b:	and    DWORD PTR ds:0xb510b20f,eax
  405ca1:	dec    ebx
  405ca2:	cwde   
  405ca3:	and    bh,bh
  405ca5:	and    al,0x53
  405ca7:	(bad)  
  405ca8:	jmp    0xa5ea34cd
  405cad:	lea    esi,[ecx+0x9]
  405cb0:	sar    bh,1
  405cb2:	(bad)  
  405cb3:	(bad)  
  405cb5:	aaa    
  405cb6:	push   0x4d
  405cb8:	imul   ecx,DWORD PTR [ecx+edi*1],0x1309a492
  405cbf:	lods   al,BYTE PTR ds:[esi]
  405cc0:	add    al,0x6e
  405cc2:	ficomp WORD PTR [esi]
  405cc4:	(bad)  
  405cc5:	push   ecx
  405cc6:	push   edx
  405cc7:	pop    ecx
  405cc8:	ret    
  405cc9:	jae    0x405d42
  405ccb:	cmp    bl,cl
  405ccd:	lock out 0x63,eax
  405cd0:	mov    eax,ds:0x3ed0d8ab
  405cd5:	cdq    
  405cd6:	dec    edi
  405cd7:	xor    dh,BYTE PTR [ebp+0x10a2fcb]
  405cdd:	outs   dx,BYTE PTR ds:[esi]
  405cde:	xor    eax,0xb761fead
  405ce3:	stos   BYTE PTR es:[edi],al
  405ce4:	std    
  405ce5:	mov    cl,0x5c
  405ce7:	or     BYTE PTR [edx],al
  405ce9:	call   0xcd6e:0xa653ac58
  405cf0:	mov    edi,0x9b34b093
  405cf5:	mov    al,ds:0xab3bc933
  405cfa:	mov    ebp,0x3efac60b
  405cff:	pop    ecx
  405d00:	inc    edi
  405d01:	add    BYTE PTR [edx-0x4ee837e5],bl
  405d07:	retf   0x8793
  405d0a:	jge    0x405cbf
  405d0c:	and    edi,DWORD PTR [eax+0x5d]
  405d0f:	jb     0x405d58
  405d11:	jp     0x405d29
  405d13:	sbb    al,BYTE PTR [ebx+0xd5cc619]
  405d19:	mov    dl,0xc3
  405d1b:	mov    ch,0xc7
  405d1d:	pop    ss
  405d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d1f:	jmp    0x405d98
  405d21:	push   ds
  405d22:	(bad)  
  405d23:	sbb    DWORD PTR [esi+edx*2-0x20f205af],0x10
  405d2b:	jnp    0x405cca
  405d2d:	sahf   
  405d2e:	xchg   ecx,eax
  405d2f:	xchg   dh,al
  405d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d32:	jge    0x405cf5
  405d34:	adc    al,cl
  405d36:	adc    dh,al
  405d38:	adc    bh,BYTE PTR [ecx+0x65]
  405d3b:	or     al,0x77
  405d3d:	sub    al,0x3f
  405d3f:	inc    eax
  405d40:	(bad)  
  405d41:	int    0xaf
  405d43:	mov    ah,ch
  405d45:	outs   dx,BYTE PTR ds:[esi]
  405d46:	aam    0x80
  405d48:	out    0xf5,eax
  405d4a:	leave  
  405d4b:	push   cs
  405d4c:	fs mov ah,0x16
  405d4f:	std    
  405d50:	sub    edx,DWORD PTR [ebp-0x3b]
  405d53:	ins    DWORD PTR es:[edi],dx
  405d54:	and    cl,bl
  405d56:	dec    ebx
  405d57:	or     DWORD PTR [eax-0x16],0x5c
  405d5b:	mov    eax,0x2d912d2b
  405d60:	add    DWORD PTR [edi+0x6c],ebx
  405d63:	jge    0x405d11
  405d65:	or     al,0xa9
  405d67:	xchg   ebx,eax
  405d68:	mov    ecx,0xf01a0d1a
  405d6d:	inc    esi
  405d6e:	mov    eax,0x6236d285
  405d73:	out    0x92,al
  405d75:	sub    BYTE PTR [ecx-0x1db52213],dl
  405d7b:	jecxz  0x405d37
  405d7d:	pop    edx
  405d7e:	sbb    esi,ebp
  405d80:	cli    
  405d81:	and    dh,BYTE PTR [ebp-0x45]
  405d84:	mov    BYTE PTR ds:0x13959fc5,0x20
  405d8b:	xchg   ecx,eax
  405d8c:	scas   eax,DWORD PTR es:[edi]
  405d8d:	fwait
  405d8e:	xor    al,BYTE PTR [edx-0x49ee1bbe]
  405d94:	xchg   ebp,eax
  405d95:	loop   0x405d3b
  405d97:	iret   
  405d98:	or     al,0x5a
  405d9a:	sub    edx,edx
  405d9c:	int    0xf9
  405d9e:	pextrw edx,(bad),0xc5
  405da0:	push   ss
  405da1:	mov    ebx,ebp
  405da3:	sbb    DWORD PTR [ecx-0x63],eax
  405da6:	mov    esp,0xd6fa3e57
  405dab:	jmp    0xee3bb22a
  405db0:	cmc    
  405db1:	sub    BYTE PTR [esi+0x42],bh
  405db4:	sar    bh,cl
  405db6:	sbb    eax,0xcca26252
  405dbb:	and    al,0x0
  405dbd:	inc    esi
  405dbe:	test   BYTE PTR [edi],dh
  405dc0:	sub    DWORD PTR [edi-0x78],ebp
  405dc3:	mov    ds:0xa724ac22,al
  405dc8:	cmp    eax,0x14601e90
  405dcd:	mov    bh,0x78
  405dcf:	std    
  405dd0:	jge    0x405da1
  405dd2:	sbb    eax,DWORD PTR [edi+0x3d]
  405dd5:	fnstenv ds:0x7caffb47
  405ddb:	dec    edi
  405ddc:	cli    
  405ddd:	lock cwde 
  405ddf:	add    edx,DWORD PTR [ebx+0x7b]
  405de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405de3:	pop    es
  405de4:	dec    edx
  405de5:	pop    edi
  405de6:	out    0x8d,eax
  405de8:	mov    edi,0x305ffb82
  405ded:	push   cs
  405dee:	pop    edi
  405def:	daa    
  405df0:	enter  0x97cd,0x1f
  405df4:	adc    DWORD PTR [edi-0x36f7e354],0x59
  405dfb:	sbb    edi,edx
  405dfd:	xor    eax,0x1f7dcc80
  405e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e03:	sbb    ecx,DWORD PTR [ebx+0x79]
  405e06:	adc    al,0x64
  405e08:	or     DWORD PTR [ebx-0x9ce3d14],0xd953408b
  405e12:	data16 or BYTE PTR [esi],ah
  405e15:	fidivr DWORD PTR [eax]
  405e17:	dec    ebx
  405e18:	pop    ds
  405e19:	into   
  405e1a:	shl    DWORD PTR [edi+0x5e],cl
  405e1d:	sub    al,0x50
  405e1f:	pop    esp
  405e20:	sub    BYTE PTR [ecx],ch
  405e22:	inc    edi
  405e23:	fmul   QWORD PTR [edx]
  405e25:	dec    ebx
  405e26:	push   ds
  405e27:	and    BYTE PTR [edx+0x64],dl
  405e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e2b:	dec    eax
  405e2c:	mov    bh,0xeb
  405e2e:	test   eax,0xd7c7eb95
  405e33:	sub    dh,BYTE PTR [edx+edx*2+0x65]
  405e37:	jne    0x405ea3
  405e39:	mov    ds:0xea01da6f,eax
  405e3e:	call   0x15cfe2a7
  405e43:	push   eax
  405e44:	cmc    
  405e45:	fsubr  st(2),st
  405e47:	or     BYTE PTR [eax*8+0x272b84c6],al
  405e4e:	hlt    
  405e4f:	sbb    eax,0x30676bd9
  405e54:	jne    0x405ebb
  405e56:	lods   al,BYTE PTR ds:[esi]
  405e57:	retf   
  405e58:	and    cl,0xdc
  405e5b:	pop    edi
  405e5c:	push   ds
  405e5d:	shr    DWORD PTR [esi],0x61
  405e60:	mov    edi,0xd057d821
  405e65:	sbb    al,0x7f
  405e67:	inc    edi
  405e68:	jns    0x405e19
  405e6a:	jo     0x405e59
  405e6c:	jmp    0xb18:0xd619ad67
  405e73:	mul    BYTE PTR gs:[esi-0x3d]
  405e77:	addr16 sub eax,0x176fd2f7
  405e7d:	sar    BYTE PTR [ebx],0x4f
  405e80:	ret    0x8e9e
  405e83:	push   edx
  405e84:	mov    BYTE PTR [ecx],cl
  405e86:	out    dx,eax
  405e87:	cmp    ch,ch
  405e89:	leave  
  405e8a:	ds push 0xffffffa4
  405e8d:	inc    ebx
  405e8e:	xor    eax,0x6ad96ca4
  405e93:	xor    al,0xfb
  405e95:	push   edx
  405e96:	mov    dh,BYTE PTR [ebp-0x3304e778]
  405e9c:	cmp    dl,BYTE PTR [edi-0x68a153a4]
  405ea2:	sbb    ebx,DWORD PTR [edx]
  405ea4:	xor    DWORD PTR cs:[eax],ebx
  405ea7:	xchg   esi,eax
  405ea8:	pop    esi
  405ea9:	push   ebx
  405eaa:	sub    ebx,DWORD PTR [edx+0x7207a790]
  405eb0:	jmp    0x3cf3:0xe794248e
  405eb7:	lods   eax,DWORD PTR ds:[esi]
  405eb8:	fxch   st(4)
  405eba:	(bad)  
  405ebb:	arpl   WORD PTR [edi+0x1b59a2de],si
  405ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ec2:	dec    esp
  405ec3:	int3   
  405ec4:	addr16 cmp al,0x42
  405ec7:	jmp    0x2dfcdf84
  405ecc:	int3   
  405ecd:	jmp    0x1571:0xf7949ca7
  405ed4:	xlat   BYTE PTR ds:[ebx]
  405ed5:	out    dx,al
  405ed6:	int3   
  405ed7:	aaa    
  405ed8:	add    BYTE PTR [esi+0x5bcca132],ch
  405ede:	test   cl,al
  405ee0:	or     BYTE PTR [ebx],al
  405ee2:	mov    bl,0x8d
  405ee4:	mov    ah,0xbe
  405ee6:	shl    DWORD PTR [esi],1
  405ee8:	imul   edi,edi,0x50
  405eeb:	add    DWORD PTR [esi],esp
  405eed:	dec    BYTE PTR [eax]
  405eef:	in     al,0x9a
  405ef1:	popa   
  405ef2:	mov    esp,0x8c45d9d4
  405ef7:	ja     0x405f16
  405ef9:	or     esp,edx
  405efb:	es push ss
  405efd:	sub    al,0xd9
  405eff:	sbb    esp,edi
  405f01:	pusha  
  405f02:	adc    cl,BYTE PTR [ebx+ebx*2]
  405f05:	inc    ebx
  405f06:	sub    al,0xd0
  405f08:	(bad)  
  405f09:	pop    ecx
  405f0a:	push   ebp
  405f0b:	neg    edi
  405f0d:	or     al,0xb9
  405f0f:	sub    esi,edi
  405f11:	sub    ch,0xe1
  405f14:	xchg   ebp,eax
  405f15:	lock mov ?,WORD PTR [ecx-0x58]
  405f19:	(bad)  
  405f1b:	mov    ebp,0x55dff668
  405f20:	shr    BYTE PTR [ecx+0x30],1
  405f23:	pop    ecx
  405f24:	add    ah,BYTE PTR [eax+edx*8+0x25]
  405f28:	push   ebp
  405f29:	jmp    0xc8620cdd
  405f2e:	aam    0x51
  405f30:	imul   eax,DWORD PTR [eax+0x37],0xffffff9c
  405f34:	ja     0x405f34
  405f36:	cli    
  405f37:	fwait
  405f38:	push   eax
  405f39:	inc    ebx
  405f3a:	arpl   WORD PTR [edi+edx*2],bx
  405f3d:	push   ss
  405f3e:	aad    0x3c
  405f40:	ret    0xc50f
  405f43:	repz inc ebp
  405f45:	ficom  DWORD PTR [ebx+0x51]
  405f48:	push   0x77
  405f4a:	jae    0x405f10
  405f4c:	cdq    
  405f4d:	das    
  405f4e:	cmp    ecx,DWORD PTR ds:0x1357d4f9
  405f54:	jle    0x405fb5
  405f56:	pop    edx
  405f57:	or     eax,0x9e1b7480
  405f5c:	addr16 in eax,0xf7
  405f5f:	xchg   ecx,eax
  405f60:	mov    eax,ds:0xfb977237
  405f65:	xlat   BYTE PTR ds:[ebx]
  405f66:	adc    esi,edi
  405f68:	push   ebx
  405f69:	rcl    BYTE PTR [ebx],0x76
  405f6c:	ret    
  405f6d:	into   
  405f6e:	rcr    BYTE PTR [ebx],1
  405f70:	test   DWORD PTR [edi],eax
  405f72:	(bad)  
  405f73:	mov    eax,ds:0x1fe55b5b
  405f78:	adc    DWORD PTR [ebx+0x72],ebp
  405f7b:	xor    al,0x92
  405f7d:	mov    ds:0x8ecd179f,eax
  405f82:	dec    esp
  405f83:	out    dx,eax
  405f84:	xor    DWORD PTR [ebp+0x29],0x8
  405f88:	adc    al,0x5a
  405f8a:	pusha  
  405f8b:	das    
  405f8c:	cli    
  405f8d:	xor    ah,dl
  405f8f:	or     DWORD PTR [ebp-0x7f],0x42e6ff0c
  405f96:	shl    DWORD PTR [esi+0x61],cl
  405f99:	inc    esp
  405f9a:	push   ebp
  405f9b:	sub    ebx,DWORD PTR [esi+0x2b7ffff1]
  405fa1:	es je  0x405fbf
  405fa4:	lds    edx,FWORD PTR [esi+0x54ab6468]
  405faa:	shr    BYTE PTR ds:[edi-0x6b2c0483],1
  405fb1:	or     esi,esi
  405fb3:	adc    ebp,ebp
  405fb5:	enter  0xeeec,0xc4
  405fb9:	aaa    
  405fba:	not    DWORD PTR [eax+0x5e54acc5]
  405fc0:	and    DWORD PTR [ecx+0x6d],eax
  405fc3:	std    
  405fc4:	mov    eax,0xbbed6ebf
  405fc9:	fldcw  WORD PTR [esi+esi*8-0x4d5ec949]
  405fd0:	adc    eax,0x6574aff7
  405fd5:	adc    al,0x10
  405fd7:	xchg   esi,eax
  405fd8:	call   0xccce:0x121bf476
  405fdf:	jae    0x405fbe
  405fe1:	cmp    DWORD PTR [eax],ecx
  405fe3:	fldenv [ecx]
  405fe5:	out    dx,al
  405fe6:	xchg   edx,eax
  405fe7:	dec    BYTE PTR [esi-0x4a]
  405fea:	add    DWORD PTR [ecx],ecx
  405fec:	inc    ecx
  405fed:	ds data16 cmp al,0x48
  405ff1:	push   0x7e
  405ff3:	sbb    BYTE PTR [ebx],bl
  405ff5:	mov    ch,0x50
  405ff7:	ror    BYTE PTR [edi-0x4],0x7b
  405ffb:	cwde   
  405ffc:	mov    ebp,0xe757372b
  406001:	fbld   TBYTE PTR [eax+edi*8-0x2f]
  406005:	push   ebx
  406006:	xlat   BYTE PTR ds:[ebx]
  406007:	push   0x9
  406009:	xchg   ecx,eax
  40600a:	test   BYTE PTR [eax],0xce
  40600d:	mov    esi,0x2729c900
  406012:	loop   0x405f96
  406014:	xchg   esi,eax
  406015:	stos   BYTE PTR es:[edi],al
  406016:	cld    
  406017:	and    esp,DWORD PTR [edx]
  406019:	imul   edx,DWORD PTR [eax],0x5f7434bf
  40601f:	cwde   
  406020:	or     al,0x6d
  406022:	push   edi
  406023:	mov    BYTE PTR [edi+0x50],bh
  406026:	jne    0x40603a
  406028:	push   ss
  406029:	xchg   edx,eax
  40602a:	push   ds
  40602b:	fmul   QWORD PTR [edi-0xb]
  40602e:	pop    ebx
  40602f:	xor    DWORD PTR [esp+eax*2],0xf81f912c
  406036:	ret    0xe6fd
  406039:	repz mov ah,0xd3
  40603c:	jb     0x405fdf
  40603e:	and    bh,BYTE PTR [edi+0x11]
  406041:	loop   0x405fc5
  406043:	xchg   ch,ch
  406045:	inc    ecx
  406046:	sbb    DWORD PTR [esi+0x3c],edx
  406049:	xchg   DWORD PTR [edx-0x12267a0c],esp
  40604f:	jbe    0x405fee
  406051:	retf   0x90b5
  406054:	add    al,0xa1
  406056:	cmp    ecx,DWORD PTR [esi]
  406058:	mov    WORD PTR [ebp-0x16],cs
  40605b:	cmp    DWORD PTR [esi-0x2a],0xbd73a7c1
  406062:	(bad)  
  406063:	cwde   
  406064:	dec    eax
  406065:	and    DWORD PTR [eax+ecx*8],edi
  406068:	sbb    bh,BYTE PTR [edx+0xd]
  40606b:	cwde   
  40606c:	in     eax,dx
  40606d:	mov    WORD PTR [edi+ebp*2+0x1ab8c5da],ds
  406074:	je     0x4060ae
  406076:	imul   edi,ecx,0x7c
  406079:	sbb    eax,0x82b6cbd1
  40607e:	jmp    0x40600d
  406080:	adc    BYTE PTR [ecx+eax*4],dh
  406083:	(bad)  
  406085:	imul   eax,DWORD PTR [ebp-0x44573208],0x42eb0114
  40608f:	arpl   WORD PTR [ebp-0x93224da],di
  406095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406096:	or     bh,BYTE PTR [ebp+0x35e08c63]
  40609c:	add    esp,DWORD PTR [ebx]
  40609e:	push   edi
  40609f:	adc    BYTE PTR [edi+0x21d723b8],dl
  4060a5:	dec    ebx
  4060a6:	repz rol ebx,cl
  4060a9:	or     eax,0x34c47e74
  4060ae:	mov    al,ds:0x27a498cf
  4060b3:	test   cl,ah
  4060b5:	fprem  
  4060b7:	ret    0x8c61
  4060ba:	js     0x40605f
  4060bc:	mov    dh,BYTE PTR [edx-0x4f]
  4060bf:	cmp    esi,DWORD PTR [edi-0x63]
  4060c2:	mov    eax,ds:0x887fef09
  4060c7:	inc    esi
  4060c8:	pusha  
  4060c9:	and    esp,DWORD PTR [ebx+0xe]
  4060cc:	ja     0x40607b
  4060ce:	cmp    al,BYTE PTR [ebx-0x1a]
  4060d1:	or     dh,bl
  4060d3:	dec    ebp
  4060d4:	mov    DWORD PTR [eax],ebp
  4060d6:	popf   
  4060d7:	mov    al,ds:0x2d71ffa6
  4060dc:	popa   
  4060dd:	std    
  4060de:	imul   ecx,DWORD PTR [edi],0xfffffffe
  4060e1:	nop
  4060e2:	and    eax,0xd8abe5a4
  4060e7:	ja     0x4060a6
  4060e9:	inc    ebx
  4060ea:	lock sub al,0x30
  4060ed:	fdivr  DWORD PTR [esi]
  4060ef:	inc    eax
  4060f0:	and    dh,BYTE PTR [edx+edi*1]
  4060f3:	int3   
  4060f4:	lahf   
  4060f5:	xchg   ebp,eax
  4060f6:	adc    cl,BYTE PTR [ebp+esi*2+0x5a]
  4060fa:	cdq    
  4060fb:	pop    esp
  4060fc:	fisttp DWORD PTR [ecx]
  4060fe:	neg    DWORD PTR [ebx+0x4b16bb7e]
  406104:	or     esi,DWORD PTR [ecx]
  406106:	call   FWORD PTR [edx-0x54]
  406109:	sub    DWORD PTR [ebx-0x4],ecx
  40610c:	xchg   esp,eax
  40610d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40610e:	dec    edx
  40610f:	icebp  
  406110:	data16 (bad) 
  406112:	adc    al,ch
  406114:	iret   
  406115:	push   ds
  406116:	fdivp  st(2),st
  406118:	dec    eax
  406119:	ficomp DWORD PTR [ebp-0x5b]
  40611c:	add    esi,DWORD PTR [esi-0x94b4a53]
  406122:	mov    ebp,0x72737ef0
  406127:	xchg   ebx,eax
  406128:	aaa    
  406129:	idiv   al
  40612b:	outs   dx,BYTE PTR ds:[esi]
  40612c:	mov    ebp,0x308d98af
  406131:	dec    esp
  406132:	mov    ebx,edi
  406134:	sub    dh,dh
  406136:	xor    BYTE PTR [edi+ecx*1-0x22],bl
  40613a:	popf   
  40613b:	cmp    eax,0x4f661024
  406140:	aas    
  406141:	push   es
  406142:	push   ss
  406143:	mov    DWORD PTR [ebp+0x40],esp
  406146:	inc    esp
  406147:	inc    ebx
  406148:	jno    0x4060fb
  40614a:	pop    ecx
  40614c:	mov    DWORD PTR [ecx+0x44],ecx
  40614f:	lock or DWORD PTR ds:0x2247b5a2,ebp
  406156:	shl    BYTE PTR [esi+0x2c50ed36],0x54
  40615d:	scas   al,BYTE PTR es:[edi]
  40615e:	xor    al,0x27
  406160:	push   ss
  406161:	sub    al,0xa6
  406163:	sar    BYTE PTR ds:0xb5eb69ad,0x15
  40616a:	test   eax,0x2c4ad429
  40616f:	pop    esi
  406170:	sub    BYTE PTR [edx-0x12],dl
  406173:	rol    bh,cl
  406175:	sub    al,0x29
  406177:	xor    BYTE PTR [eax+0x3],bh
  40617a:	call   0x6c0df763
  40617f:	xchg   esi,eax
  406180:	jmp    0xeb88dd1f
  406185:	adc    DWORD PTR [edx+0x24c00df7],ecx
  40618b:	(bad)
  40618e:	(bad)  
  40618f:	and    cl,al
  406191:	retf   0x7268
  406194:	sar    DWORD PTR [eax],1
  406196:	jmp    0x4340:0x280b0c49
  40619d:	xchg   ecx,eax
  40619e:	(bad)
  4061a2:	ficom  WORD PTR [edi+0x7ca80e79]
  4061a8:	dec    ebp
  4061a9:	pop    eax
  4061aa:	dec    ebp
  4061ab:	push   DWORD PTR [edx-0x10]
  4061ae:	enter  0xd7f7,0xe
  4061b2:	cdq    
  4061b3:	out    dx,al
  4061b4:	pop    edi
  4061b5:	push   ss
  4061b6:	mov    ebp,0x34684a17
  4061bb:	mov    ds:0xb7989c29,al
  4061c0:	adc    BYTE PTR [edx],0xe7
  4061c3:	dec    esi
  4061c4:	dec    ebx
  4061c5:	call   0x47a9:0xb99b42f
  4061cc:	mov    dh,0x5a
  4061ce:	sbb    dh,al
  4061d0:	push   eax
  4061d1:	in     al,0xaa
  4061d3:	pop    esp
  4061d4:	mov    ebp,0xf8fb6176
  4061d9:	inc    edx
  4061da:	fwait
  4061db:	sti    
  4061dc:	dec    esi
  4061dd:	mov    al,ds:0xce7f3cf1
  4061e2:	sbb    cl,dl
  4061e4:	pop    ebp
  4061e5:	rcl    ch,1
  4061e7:	xor    eax,0x93d0acb4
  4061ec:	fcom   QWORD PTR [edi]
  4061ee:	out    0xbe,eax
  4061f0:	icebp  
  4061f1:	add    ecx,ebx
  4061f3:	add    DWORD PTR [edx+0x1],edx
  4061f6:	mov    dh,0xfa
  4061f8:	leave  
  4061f9:	jb     0x40623e
  4061fb:	aaa    
  4061fc:	dec    esi
  4061fd:	sbb    bl,ah
  4061ff:	retf   0x6321
  406202:	sbb    al,0xfa
  406204:	push   ecx
  406205:	and    BYTE PTR [edi-0x7d8cff0c],dh
  40620b:	ret    
  40620c:	mov    edx,0x72a63d44
  406211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406212:	sub    al,0x53
  406214:	test   BYTE PTR ds:0xc4b728da,0x79
  40621b:	loope  0x406286
  40621d:	or     ebp,DWORD PTR [ecx+0x61893360]
  406223:	xor    DWORD PTR [edx+0x5f45b420],0x2f03b413
  40622d:	or     eax,edi
  40622f:	imul   DWORD PTR [ecx]
  406231:	test   DWORD PTR [edi],edi
  406233:	xchg   esi,eax
  406234:	add    DWORD PTR [ecx-0x5736a38f],0x8d48d3e0
  40623e:	pop    ebx
  40623f:	cmp    BYTE PTR [eax+0x3153f4d9],ah
  406245:	push   ss
  406246:	call   0x1beb91d
  40624b:	and    BYTE PTR [ecx],0x53
  40624e:	(bad)  [ebp+0x6b]
  406251:	outs   dx,BYTE PTR ds:[esi]
  406252:	push   esp
  406253:	lea    esp,[ecx+0x1cd371cc]
  406259:	imul   ebx,DWORD PTR [edi+edi*1+0x32],0x783518b8
  406261:	shr    BYTE PTR [esi-0x774fdf11],1
  406267:	(bad)  
  406268:	cwde   
  406269:	out    dx,eax
  40626a:	push   esi
  40626b:	or     DWORD PTR [edx-0x6f],ebp
  40626e:	push   ecx
  40626f:	enter  0xc5ec,0x32
  406273:	xchg   edx,eax
  406274:	arpl   di,si
  406276:	imul   ebx,DWORD PTR [eax+0x19],0x24cab073
  40627d:	lods   al,BYTE PTR ds:[esi]
  40627e:	popa   
  40627f:	aaa    
  406280:	xchg   ebx,eax
  406281:	addr16 inc esp
  406283:	mov    ebp,0x6ad07cfc
  406288:	pushf  
  406289:	addr16 jp 0x40623b
  40628c:	repnz jecxz 0x40625a
  40628f:	iret   
  406290:	inc    ebp
  406291:	bound  ebp,QWORD PTR [edi+0x21bf7fbd]
  406297:	aaa    
  406298:	das    
  406299:	int3   
  40629a:	mov    dh,0x8d
  40629c:	mov    dh,0x70
  40629e:	stos   BYTE PTR es:[edi],al
  40629f:	pop    ebp
  4062a0:	push   0x804ebaa7
  4062a5:	sbb    al,0x2b
  4062a7:	out    0x38,al
  4062a9:	push   esp
  4062aa:	lock mov bl,0xb6
  4062ad:	jp     0x4062f9
  4062af:	push   0x7f6bd860
  4062b4:	xchg   ebp,eax
  4062b5:	lods   eax,DWORD PTR ds:[esi]
  4062b6:	jns    0x406310
  4062b8:	lock sub esp,edx
  4062bb:	int3   
  4062bc:	add    al,0x94
  4062be:	lods   eax,DWORD PTR ds:[esi]
  4062bf:	mov    bh,0x34
  4062c1:	enter  0x2c23,0xc2
  4062c5:	fcmovb st,st(7)
  4062c7:	jecxz  0x4062cd
  4062c9:	(bad)  
  4062ca:	into   
  4062cb:	push   0xf1bbe31f
  4062d0:	loop   0x4062d4
  4062d2:	cmp    DWORD PTR [esi-0x4f49f706],esi
  4062d8:	repz out dx,al
  4062da:	adc    esi,esp
  4062dc:	in     al,dx
  4062dd:	mov    edx,0x7d922e32
  4062e2:	cli    
  4062e3:	and    al,0xbd
  4062e5:	mov    cl,0xe7
  4062e7:	inc    ebx
  4062e8:	into   
  4062e9:	shr    DWORD PTR [ecx-0x5f],cl
  4062ec:	call   0x2e2e:0x8e09549a
  4062f3:	ja     0x4062ee
  4062f5:	jae    0x406321
  4062f7:	es in  eax,0xa2
  4062fa:	and    eax,0x29c6ef95
  4062ff:	in     eax,dx
  406300:	pusha  
  406301:	pop    es
  406302:	sar    BYTE PTR [eax+0x78bafd9f],0x58
  406309:	retf   
  40630a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630b:	cs dec esi
  40630d:	sub    eax,0x282d5350
  406312:	push   eax
  406313:	mov    DWORD PTR [edx+0x16],0xb3102edb
  40631a:	sub    BYTE PTR [ebp+0x4],ch
  40631d:	and    dh,bh
  40631f:	inc    ecx
  406320:	jge    0x4062bf
  406322:	xchg   ecx,eax
  406323:	lahf   
  406324:	xchg   ebx,eax
  406325:	cmp    eax,0x5c55653f
  40632a:	add    DWORD PTR [ebx],ebx
  40632c:	ror    BYTE PTR [ecx-0x5d],cl
  40632f:	pop    edi
  406330:	ss push 0x4a857a03
  406336:	push   0x48
  406338:	mov    esp,0xff5dc8f
  40633d:	inc    ecx
  40633e:	arpl   WORD PTR [ecx],si
  406340:	aad    0x1f
  406342:	mov    ch,0x5
  406344:	push   ebp
  406345:	add    ecx,DWORD PTR [eax-0x1c85e25b]
  40634b:	nop
  40634c:	js     0x40633b
  40634e:	adc    cl,BYTE PTR [esi]
  406350:	clc    
  406351:	mov    dl,0xd7
  406353:	icebp  
  406354:	lods   al,BYTE PTR es:[esi]
  406356:	dec    edx
  406357:	cli    
  406358:	sbb    bl,BYTE PTR [esi+0x3cfd0649]
  40635e:	leave  
  40635f:	dec    esp
  406360:	aaa    
  406361:	push   edx
  406362:	add    al,0xd
  406364:	xchg   ecx,eax
  406365:	dec    ebp
  406366:	xor    BYTE PTR [edi],dl
  406368:	cmc    
  406369:	mov    ds:0xc6f1cb7c,eax
  40636e:	push   edi
  40636f:	and    eax,0x7322aee9
  406374:	xchg   cl,bl
  406376:	and    BYTE PTR [ecx-0x7b],cl
  406379:	or     BYTE PTR [eax],al
  40637b:	data16 jge 0x4062ff
  40637e:	sbb    ebx,DWORD PTR ds:0xa455f540
  406384:	icebp  
  406385:	aad    0xe5
  406387:	jmp    0x1577:0xa7927a9e
  40638e:	daa    
  40638f:	add    BYTE PTR [edi-0x6fbec364],ch
  406395:	pop    ds
  406396:	test   eax,0x6dfde178
  40639b:	and    BYTE PTR [edi+ecx*2+0x18],al
  40639f:	repz test DWORD PTR [eax-0xf],eax
  4063a3:	(bad)
  4063a6:	adc    DWORD PTR [esp+eax*1-0x4b],edi
  4063aa:	push   ecx
  4063ab:	test   BYTE PTR [ebx+edx*1-0xea3d5aa],dh
  4063b2:	sti    
  4063b3:	data16 std 
  4063b5:	cmc    
  4063b6:	idiv   BYTE PTR [edx]
  4063b8:	push   ecx
  4063b9:	push   esi
  4063ba:	test   al,0x7a
  4063bc:	push   0xffffff8e
  4063be:	sbb    eax,0x580f8c8
  4063c3:	fld    st(1)
  4063c5:	fdiv   QWORD PTR [ebx-0x2c]
  4063c8:	jae    0x406425
  4063ca:	repnz xchg esi,eax
  4063cc:	push   es
  4063cd:	cli    
  4063ce:	inc    ebx
  4063cf:	sbb    eax,0xb129a31f
  4063d4:	jle    0x406363
  4063d6:	sub    eax,0x2e72b691
  4063db:	rcl    DWORD PTR [bx],1
  4063de:	inc    esp
  4063df:	xchg   esi,eax
  4063e0:	je     0x406410
  4063e2:	push   0x15
  4063e4:	cmp    BYTE PTR [ebp+0x3a1461a1],cl
  4063ea:	arpl   WORD PTR [edi-0x20],sp
  4063ed:	loopne 0x406380
  4063ef:	sub    eax,0x8a5d596f
  4063f4:	pop    ecx
  4063f5:	cdq    
  4063f6:	pop    ds
  4063f7:	jbe    0x406442
  4063f9:	inc    eax
  4063fa:	aad    0x45
  4063fc:	dec    ebp
  4063fd:	outs   dx,DWORD PTR ds:[esi]
  4063fe:	ins    DWORD PTR es:[edi],dx
  4063ff:	jl     0x4063c7
  406401:	lahf   
  406402:	aaa    
  406403:	mov    eax,0x8e0ac52b
  406408:	shl    DWORD PTR [esi-0x5f1bebac],0x35
  40640f:	xchg   edi,eax
  406410:	outs   dx,DWORD PTR ds:[esi]
  406411:	jle    0x40640a
  406413:	(bad)  
  406414:	xchg   ebx,eax
  406415:	(bad)
  406419:	shl    BYTE PTR [esi+0x6b],0xef
  40641d:	stc    
  40641e:	imul   esi,DWORD PTR [esi-0x77bd8ce0],0x50
  406425:	pop    esp
  406426:	retf   0x469a
  406429:	(bad)
  40642e:	pop    ss
  40642f:	mov    ebp,0x332c3395
  406434:	ds sahf 
  406436:	mov    ah,BYTE PTR [edi]
  406438:	jl     0x406436
  40643a:	jg     0x406477
  40643c:	xchg   esi,eax
  40643d:	pop    ebx
  40643e:	cmp    ebp,ecx
  406440:	jbe    0x4064a5
  406442:	sti    
  406443:	clc    
  406444:	mov    al,0x64
  406446:	or     DWORD PTR [ebp+0x47a0af46],ebx
  40644c:	ss jle 0x4063e3
  40644f:	int3   
  406450:	shr    ch,cl
  406452:	and    DWORD PTR [ebp-0x3de14ffb],ebp
  406458:	outs   dx,BYTE PTR ds:[esi]
  406459:	nop
  40645a:	cli    
  40645b:	jg     0x4063e0
  40645d:	mov    ebp,0xa75e6c64
  406462:	dec    esi
  406463:	jno    0x40640c
  406465:	jl     0x406424
  406467:	mov    esi,DWORD PTR [ebp-0x24]
  40646a:	repz aam 0xf5
  40646d:	pop    edx
  40646e:	jo     0x4064e2
  406470:	jmp    0xde2d3885
  406475:	mov    dx,fs
  406478:	push   eax
  406479:	adc    al,0x7c
  40647b:	pop    es
  40647c:	fld    TBYTE PTR [ecx-0x4d]
  40647f:	cwde   
  406480:	fsub   DWORD PTR [edx-0x38e73988]
  406486:	fcom   DWORD PTR [esi+0x6b]
  406489:	shl    bh,cl
  40648b:	mov    ecx,0x494098c0
  406490:	jg     0x4064bb
  406492:	out    0xde,eax
  406494:	xor    DWORD PTR [edi],ebp
  406496:	adc    al,0x8d
  406498:	repz lea ebx,[edi+0x38]
  40649c:	cmp    ah,BYTE PTR [ebx]
  40649e:	push   ebp
  40649f:	inc    esp
  4064a0:	sub    ebp,eax
  4064a2:	in     eax,dx
  4064a3:	add    dl,ah
  4064a5:	mov    dh,0xb6
  4064a7:	lods   al,BYTE PTR ds:[esi]
  4064a8:	jmp    0x798c8e6c
  4064ad:	shl    dl,0xdf
  4064b0:	xchg   esp,eax
  4064b1:	and    BYTE PTR [ebx+0x3b],cl
  4064b4:	sub    ebp,ebp
  4064b6:	add    BYTE PTR [edx+0x2c],0xe5
  4064ba:	push   cs
  4064bb:	into   
  4064bc:	fld    QWORD PTR [edi]
  4064be:	pusha  
  4064bf:	jge    0x4064eb
  4064c1:	call   0x1335eae2
  4064c6:	dec    edi
  4064c7:	mov    bh,BYTE PTR [edi-0x37bb4f09]
  4064cd:	cmp    BYTE PTR [ebx+eax*4+0x4bd92275],0xf2
  4064d5:	xchg   esi,eax
  4064d6:	cmc    
  4064d7:	and    ch,BYTE PTR [ebp+0x42e86413]
  4064dd:	mov    ds:0x1ef80841,eax
  4064e2:	jne    0x40648c
  4064e4:	bound  ebp,QWORD PTR [ebx-0x348a28e]
  4064ea:	ror    BYTE PTR [edi+0x10],1
  4064ed:	mov    bh,0x9
  4064ef:	in     eax,dx
  4064f0:	das    
  4064f1:	mov    edi,0x858f1f4b
  4064f6:	sbb    DWORD PTR [eax],ecx
  4064f8:	iret   
  4064f9:	(bad)  
  4064fa:	cli    
  4064fb:	call   0x9e03:0x87d47094
  406502:	ret    
  406503:	stos   BYTE PTR es:[edi],al
  406504:	push   eax
  406505:	mov    ch,0x28
  406507:	into   
  406508:	and    esi,edi
  40650a:	mov    ecx,0x81f6c785
  40650f:	in     al,dx
  406510:	int3   
  406511:	jno    0x4064e4
  406513:	into   
  406514:	add    al,0xc1
  406516:	scas   eax,DWORD PTR es:[edi]
  406517:	ret    0xb0cf
  40651a:	fwait
  40651b:	mov    ds:0xe34db85e,al
  406520:	push   esi
  406521:	jg     0x40654d
  406523:	sbb    BYTE PTR [edi+0x4d],dl
  406526:	in     al,dx
  406527:	push   cs
  406528:	mov    esi,0x9711936f
  40652d:	xor    eax,0x5b9d1a1b
  406532:	aam    0x2e
  406534:	inc    ebp
  406535:	loopne 0x406525
  406537:	mov    edi,DWORD PTR [ebx-0x56]
  40653a:	ret    
  40653b:	std    
  40653c:	and    BYTE PTR ds:0x38c6d489,0xb1
  406543:	xlat   BYTE PTR ds:[ebx]
  406544:	add    edi,DWORD PTR [esi+0xc]
  406547:	adc    al,0x33
  406549:	popf   
  40654a:	fsubr  QWORD PTR [edi+0x1d]
  40654d:	lods   al,BYTE PTR ds:[esi]
  40654e:	push   esi
  40654f:	shr    BYTE PTR [edi],1
  406551:	aaa    
  406552:	sbb    dh,ch
  406554:	jmp    0x34f1:0xe3888a5f
  40655b:	and    al,BYTE PTR [ecx+esi*4-0x9]
  40655f:	lea    esi,[ecx-0x62]
  406562:	xchg   esp,eax
  406563:	and    al,0xc8
  406565:	jecxz  0x40653d
  406567:	lods   al,BYTE PTR ds:[esi]
  406568:	inc    esp
  406569:	sbb    DWORD PTR [edi],ecx
  40656b:	into   
  40656c:	adc    DWORD PTR [edi-0x77a3c19e],0xd7807036
  406576:	jle    0x406581
  406578:	nop
  406579:	mov    eax,0x894c9368
  40657e:	dec    eax
  40657f:	ret    0xfe19
  406582:	repz dec ebx
  406584:	rol    BYTE PTR [ebx],cl
  406586:	scas   eax,DWORD PTR es:[edi]
  406587:	jae    0x406603
  406589:	mov    edx,0x745fe85c
  40658e:	test   al,0x31
  406590:	adc    eax,0x3799fdcc
  406595:	int3   
  406596:	dec    edx
  406597:	or     BYTE PTR [ebx-0x4f],bh
  40659a:	cdq    
  40659b:	pop    edi
  40659c:	or     ecx,esp
  40659e:	fistp  QWORD PTR [esi+0x464eea96]
  4065a4:	mov    bh,0xdc
  4065a6:	sar    bl,1
  4065a8:	fisttp WORD PTR [esi+0x37]
  4065ab:	jbe    0x406580
  4065ad:	hlt    
  4065ae:	shr    esp,cl
  4065b0:	jo     0x4065b7
  4065b2:	jmp    FWORD PTR [ecx+edi*8-0x7ef1e939]
  4065b9:	(bad)  
  4065ba:	iret   
  4065bb:	ins    DWORD PTR es:[edi],dx
  4065bc:	xor    BYTE PTR [edi-0x61830315],ch
  4065c2:	pop    es
  4065c3:	clc    
  4065c4:	xor    al,0x77
  4065c6:	nop
  4065c7:	fcmovnbe st,st(0)
  4065c9:	fs retf 0x26f0
  4065cd:	les    ebx,FWORD PTR [esi]
  4065cf:	cmp    eax,0x5b0cc616
  4065d4:	clc    
  4065d5:	imul   esi,DWORD PTR [ebx+0x66975c16],0x3f
  4065dc:	mov    DWORD PTR [edi],ebx
  4065de:	(bad)  [ecx-0x25]
  4065e1:	xor    eax,0x5894d4df
  4065e6:	test   DWORD PTR [esi+eiz*1],ebx
  4065e9:	out    0x42,eax
  4065eb:	es jno 0x4065fd
  4065ee:	in     eax,dx
  4065ef:	shr    BYTE PTR ds:0x1551194e,cl
  4065f5:	mov    ebp,0xf6180804
  4065fa:	loope  0x40663b
  4065fc:	push   es
  4065fd:	push   cs
  4065fe:	push   ebx
  4065ff:	mov    BYTE PTR [ebp-0x9],bl
  406602:	and    eax,DWORD PTR ds:0xe93291bb
  406608:	xor    bl,BYTE PTR [ecx-0xe]
  40660b:	ins    DWORD PTR es:[edi],dx
  40660c:	inc    edx
  40660d:	aas    
  40660e:	xchg   ebp,eax
  40660f:	jmp    0x874f8884
  406614:	data16 std 
  406616:	sbb    ebx,DWORD PTR [ebx]
  406618:	mov    dh,BYTE PTR [esi+0x67]
  40661b:	stos   DWORD PTR es:[edi],eax
  40661c:	xchg   ebx,eax
  40661d:	pop    eax
  40661e:	in     al,0x2e
  406620:	jbe    0x4065af
  406622:	fisttp QWORD PTR [esi+ebp*8]
  406625:	stos   BYTE PTR es:[edi],al
  406626:	sbb    ebp,edx
  406628:	mov    bl,0x75
  40662a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40662b:	sbb    DWORD PTR [esi+0x74fd10e0],0x2ec5b16e
  406635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406636:	cmp    bl,BYTE PTR [esi+ebx*4-0x11]
  40663a:	loopne 0x40666e
  40663c:	into   
  40663d:	add    DWORD PTR [ebp-0x10c91671],edi
  406643:	adc    dl,0xd4
  406646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406647:	cdq    
  406648:	add    BYTE PTR [ecx],dl
  40664a:	mov    edi,0x68607846
  40664f:	push   edi
  406650:	inc    eax
  406651:	ds inc ebx
  406653:	sbb    BYTE PTR [ecx-0x48cc1f94],ch
  406659:	loop   0x406668
  40665b:	push   ecx
  40665c:	add    dh,BYTE PTR [edx+0xb]
  40665f:	mov    esp,0xb52c5ee6
  406664:	js     0x406699
  406666:	jb     0x4065f3
  406668:	jge    0x406616
  40666a:	out    0x2c,al
  40666c:	out    0xdc,al
  40666e:	pop    ecx
  40666f:	mov    dh,dh
  406671:	sub    eax,0x6a672bdf
  406676:	and    ebp,eax
  406678:	mov    edx,0x752278b0
  40667d:	pop    edx
  40667e:	xor    DWORD PTR [edx+0x326d7520],ebx
  406684:	in     al,dx
  406685:	retf   0xd415
  406688:	dec    esi
  406689:	pop    eax
  40668a:	cli    
  40668b:	push   ds
  40668c:	enter  0x3166,0x52
  406690:	popa   
  406691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406692:	icebp  
  406693:	adc    eax,0x354c3e78
  406698:	mov    ebp,0x2f696aae
  40669d:	dec    ebp
  40669e:	push   ss
  40669f:	scas   al,BYTE PTR es:[edi]
  4066a0:	xor    dh,dl
  4066a2:	ss enter 0x2eb0,0x66
  4066a7:	dec    ecx
  4066a8:	mov    ebx,0xf6f816b9
  4066ad:	mov    dh,0x38
  4066af:	mov    edi,ebp
  4066b1:	sbb    eax,0xcfe3cb4b
  4066b6:	add    eax,0x3273dad
  4066bb:	jnp    0xfd36dd1c
  4066c1:	pop    ss
  4066c2:	pop    ebp
  4066c3:	pop    edx
  4066c4:	add    eax,DWORD PTR ds:[esi]
  4066c7:	xchg   ecx,eax
  4066c8:	js     0x4066da
  4066ca:	aaa    
  4066cb:	mov    edx,DWORD PTR [edi+0x459f511b]
  4066d1:	iret   
  4066d2:	or     eax,DWORD PTR [esi]
  4066d4:	mov    bh,0xf8
  4066d6:	shl    dl,1
  4066d8:	pop    edi
  4066d9:	mov    es:0xa76e7d6d,al
  4066df:	jl     0x406677
  4066e1:	shl    DWORD PTR [ebx],0xa2
  4066e4:	xchg   ebx,eax
  4066e5:	mov    cl,cl
  4066e7:	fadd   st(4),st
  4066e9:	mov    WORD PTR [ecx],?
  4066eb:	ds or  ch,ch
  4066ee:	scas   al,BYTE PTR es:[edi]
  4066ef:	mov    DWORD PTR [edx+0x40],ecx
  4066f2:	adc    BYTE PTR [ecx-0x4cf14368],0x81
  4066f9:	in     eax,0xf1
  4066fb:	push   0xffffffd1
  4066fd:	push   edi
  4066fe:	xchg   ecx,eax
  4066ff:	das    
  406700:	out    0x79,al
  406702:	popa   
  406703:	sbb    BYTE PTR [edi],ah
  406705:	dec    esi
  406706:	cld    
  406707:	rol    eax,1
  406709:	inc    esp
  40670a:	call   0x65fee409
  40670f:	push   es
  406710:	test   eax,0x4330036a
  406715:	pop    ebp
  406716:	outs   dx,DWORD PTR ds:[esi]
  406717:	jle    0x406721
  406719:	stos   DWORD PTR es:[edi],eax
  40671a:	cmp    bl,0xc1
  40671d:	cmp    BYTE PTR [ecx+edi*4],ch
  406720:	ja     0x406751
  406722:	add    al,0xba
  406724:	push   esp
  406725:	inc    ecx
  406726:	pop    ebx
  406727:	mov    ch,0x36
  406729:	arpl   WORD PTR [ecx+0x182c11fe],sp
  40672f:	jo     0x40671b
  406731:	aad    0xe9
  406733:	rol    BYTE PTR [eax],0xe8
  406736:	nop
  406737:	push   eax
  406738:	mov    al,0xe8
  40673a:	jns    0x4067ba
  40673c:	add    al,0xaa
  40673e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406740:	mov    al,0xa3
  406742:	mov    eax,0x60149708
  406747:	call   0x9d946d1a
  40674c:	cwde   
  40674d:	int    0xb8
  40674f:	sbb    ebp,DWORD PTR [edi+edi*2+0x57]
  406753:	retf   
  406754:	adc    bl,dh
  406756:	jg     0x40671d
  406758:	retf   0xc715
  40675b:	xchg   edi,eax
  40675c:	push   ebp
  40675d:	sub    eax,DWORD PTR [ebp-0x4]
  406760:	sti    
  406761:	fimul  DWORD PTR [ecx]
  406763:	xor    BYTE PTR [ebp-0x26],ch
  406766:	(bad)  
  406767:	jmp    0x406754
  406769:	loopne 0x406712
  40676b:	mov    ds:0x7fdad764,eax
  406770:	xchg   ebp,eax
  406771:	mov    DWORD PTR [esi+0x61],ecx
  406774:	jnp    0x406734
  406776:	cdq    
  406777:	cmp    esp,esp
  406779:	out    dx,eax
  40677a:	add    bl,BYTE PTR [eax+0x3232a227]
  406780:	lds    edx,FWORD PTR [edx]
  406782:	xchg   ecx,eax
  406783:	pop    ss
  406784:	fsubr  DWORD PTR [edx+0x26]
  406787:	dec    edx
  406788:	push   0x69
  40678a:	cmp    eax,0xffe0d097
  40678f:	dec    bl
  406791:	ret    
  406792:	sbb    eax,0x8e6d3d30
  406797:	xor    al,BYTE PTR [ebp-0x14]
  40679a:	or     DWORD PTR [edi-0x6],edi
  40679d:	and    BYTE PTR [edi+0x4a],al
  4067a0:	sub    edx,DWORD PTR [esi+ecx*8-0x6e]
  4067a4:	inc    ecx
  4067a5:	cdq    
  4067a6:	into   
  4067a7:	push   esp
  4067a8:	popa   
  4067a9:	out    0x1f,al
  4067ab:	call   0x2f6e:0xbf3dda15
  4067b2:	pop    ebx
  4067b3:	mov    eax,ds:0x6f18a361
  4067b8:	pop    edi
  4067b9:	or     ah,bl
  4067bb:	lahf   
  4067bc:	test   eax,ebp
  4067be:	and    BYTE PTR [ecx-0x74ada6a6],bh
  4067c4:	mov    ecx,0xf59dd73d
  4067c9:	shl    DWORD PTR [esi+eax*2-0x64d5a745],1
  4067d0:	fs test ebp,ebx
  4067d3:	xor    al,0x92
  4067d5:	neg    ah
  4067d7:	xor    edx,edi
  4067d9:	dec    eax
  4067da:	int3   
  4067db:	xchg   esp,eax
  4067dc:	and    al,0xec
  4067de:	jecxz  0x406828
  4067e0:	push   esi
  4067e1:	cmp    eax,0x8287720b
  4067e6:	pop    esp
  4067e7:	inc    DWORD PTR [edx-0x9]
  4067ea:	aas    
  4067eb:	sub    BYTE PTR [edx-0x33],bl
  4067ee:	int3   
  4067ef:	add    ecx,ebx
  4067f1:	sbb    BYTE PTR [edi+0xe],bh
  4067f4:	outs   dx,DWORD PTR ds:[esi]
  4067f5:	jp     0x406839
  4067f7:	dec    esi
  4067f8:	fdiv   st,st(1)
  4067fa:	cwde   
  4067fb:	push   ebp
  4067fc:	mov    bh,0x82
  4067fe:	jo     0x4067df
  406800:	dec    eax
  406801:	dec    esi
  406802:	loop   0x406842
  406804:	pop    es
  406805:	sub    eax,0x67eb790f
  40680a:	rol    BYTE PTR [ebp-0x26],0x5e
  40680e:	scas   eax,DWORD PTR es:[edi]
  40680f:	jae    0x406845
  406811:	dec    eax
  406812:	xor    eax,0x2d0b0ea
  406817:	mov    ebx,DWORD PTR gs:[ebx-0x1f]
  40681b:	outs   dx,DWORD PTR ds:[esi]
  40681c:	mov    ebp,0x27e0cd10
  406821:	adc    esi,DWORD PTR ds:0x1ce6380e
  406827:	push   esp
  406828:	popa   
  406829:	repnz mov DWORD PTR [ecx-0x14348cbf],ecx
  406830:	ds rcl DWORD PTR gs:[edx+0x66],0x55
  406836:	mov    eax,0xa3855330
  40683b:	inc    ecx
  40683c:	xor    bl,BYTE PTR [edi-0x7f959ed5]
  406842:	test   eax,edx
  406844:	repz loop 0x40680c
  406847:	stos   DWORD PTR es:[edi],eax
  406848:	dec    ebx
  406849:	inc    edx
  40684a:	ja     0x406881
  40684c:	dec    esp
  40684d:	(bad)  
  40684e:	add    DWORD PTR [ebx],edx
  406850:	mov    edx,DWORD PTR [esi-0x7c2026ed]
  406856:	push   esi
  406857:	into   
  406858:	or     al,0xa6
  40685a:	(bad)  
  40685b:	in     eax,dx
  40685c:	sbb    dh,ah
  40685e:	fnstsw WORD PTR [ecx-0x55]
  406861:	imul   ebx,DWORD PTR [esi-0x6d],0xdbce66da
  406868:	xor    eax,0x5d75b4a5
  40686d:	les    edx,FWORD PTR [ebx+ebp*1-0x1e]
  406871:	or     DWORD PTR [eax],edi
  406873:	ds mov esi,?
  406876:	jp     0x40682c
  406878:	lahf   
  406879:	sbb    BYTE PTR [esi-0x27cd0ce5],bh
  40687f:	cwde   
  406880:	rcr    BYTE PTR ds:0x987320bd,1
  406886:	xchg   esi,eax
  406887:	push   ds
  406888:	imul   ebx,DWORD PTR [edx+ebx*4],0x82f64edc
  40688f:	repz sbb edi,DWORD PTR [ebp+0x56b89e84]
  406896:	sub    al,BYTE PTR [ecx-0x6d]
  406899:	out    0xc7,eax
  40689b:	jo     0x4068d0
  40689d:	fs fcmovnbe st,st(4)
  4068a0:	in     al,dx
  4068a1:	push   edi
  4068a2:	xchg   ebx,eax
  4068a3:	cdq    
  4068a4:	popf   
  4068a5:	inc    edx
  4068a6:	pop    eax
  4068a7:	pop    es
  4068a8:	js     0x4068f9
  4068aa:	ret    
  4068ab:	pop    edx
  4068ac:	mov    bh,0x8d
  4068ae:	div    BYTE PTR [ebx+0xd]
  4068b1:	jecxz  0x40686b
  4068b3:	scas   al,BYTE PTR es:[edi]
  4068b4:	sub    bl,ch
  4068b6:	sbb    BYTE PTR [ebp+0x4694927d],bl
  4068bc:	jno    0x4068ef
  4068be:	jb     0x406937
  4068c0:	ins    BYTE PTR es:[edi],dx
  4068c1:	xor    al,0x29
  4068c3:	mov    eax,0xc568fab0
  4068c8:	(bad)  
  4068c9:	cmp    al,0x1c
  4068cb:	mov    ds,edx
  4068cd:	cmp    BYTE PTR [ebp+0x45],0x54
  4068d1:	iret   
  4068d2:	jae    0x406929
  4068d4:	and    al,0x21
  4068d6:	cmp    al,0x81
  4068d8:	or     dh,BYTE PTR [edx+0x4f]
  4068db:	(bad)  
  4068dc:	xor    eax,0x6d83e467
  4068e1:	sti    
  4068e2:	jnp    0x40688f
  4068e4:	lea    esp,[eax-0x2e]
  4068e7:	aad    0xcc
  4068e9:	dec    edx
  4068eb:	imul   edx,DWORD PTR [esp+ecx*2-0x9],0xed405e19
  4068f3:	xchg   ebp,eax
  4068f4:	jmp    0x4068db
  4068f6:	lods   al,BYTE PTR ds:[esi]
  4068f7:	adc    BYTE PTR [ebx+0x3170e782],dl
  4068fd:	test   edi,ebx
  4068ff:	xchg   edx,eax
  406900:	adc    eax,0xd94a45fd
  406905:	ins    BYTE PTR es:[edi],dx
  406906:	dec    edx
  406907:	cmp    eax,0xc4cc3e82
  40690c:	xchg   ebx,eax
  40690d:	xchg   ecx,eax
  40690e:	pop    DWORD PTR [edi]
  406910:	std    
  406911:	cmp    DWORD PTR [ebp+0x2c],edx
  406914:	inc    ebp
  406915:	pop    ebp
  406916:	push   ebx
  406917:	or     DWORD PTR [eax],0xffffffdd
  40691a:	add    bh,BYTE PTR [ecx+eiz*4-0x7779818]
  406921:	ins    BYTE PTR es:[edi],dx
  406922:	lods   al,BYTE PTR ds:[esi]
  406923:	dec    ecx
  406924:	sub    DWORD PTR [edi-0x15],edi
  406927:	sub    edx,esi
  406929:	cdq    
  40692a:	test   ebx,0x128c527f
  406930:	sub    BYTE PTR [ebx+0x76b884d6],0x88
  406937:	test   eax,0x8585d671
  40693c:	mov    ebx,0x2874503f
  406941:	mul    ch
  406943:	push   ss
  406944:	dec    ebx
  406945:	lods   al,BYTE PTR ds:[esi]
  406946:	jecxz  0x40699e
  406948:	cmp    al,0xc9
  40694a:	dec    esp
  40694b:	add    esi,DWORD PTR [esi+0x63146fb6]
  406951:	(bad)  
  406953:	mov    ecx,0x378e2c9c
  406958:	cmp    DWORD PTR [eax+0x6e],edx
  40695b:	sti    
  40695c:	and    al,al
  40695e:	xchg   edi,eax
  40695f:	mov    ecx,0xefa9a9ac
  406964:	dec    ebp
  406965:	pop    edi
  406966:	adc    al,0x32
  406968:	fs push cs
  40696a:	loopne 0x406958
  40696c:	(bad)  
  40696d:	ss ins DWORD PTR es:[edi],dx
  40696f:	inc    edi
  406970:	scas   eax,DWORD PTR es:[edi]
  406971:	cld    
  406972:	inc    ecx
  406973:	aam    0xa2
  406975:	cmp    eax,DWORD PTR [ecx+0x79]
  406978:	pop    edx
  406979:	dec    DWORD PTR [esi+0x5]
  40697c:	fdiv   DWORD PTR [edi+edi*1-0x2df913ce]
  406983:	dec    eax
  406984:	iret   
  406985:	push   ebx
  406986:	push   esp
  406987:	sub    eax,0xe40c80d9
  40698c:	imul   edi,DWORD PTR [ecx],0x50
  40698f:	hlt    
  406990:	cdq    
  406991:	add    bl,bl
  406993:	sub    BYTE PTR [edi+0x640180d5],dh
  406999:	test   eax,0xfc372539
  40699e:	fld    QWORD PTR [edx+0x76e35b27]
  4069a4:	pop    ecx
  4069a5:	or     cl,bl
  4069a7:	cmp    edi,DWORD PTR [edx]
  4069a9:	cmp    bh,bl
  4069ab:	mov    bh,0x4e
  4069ad:	mov    cl,0xbc
  4069af:	and    DWORD PTR [eax],0xffffffb5
  4069b2:	ins    BYTE PTR es:[edi],dx
  4069b3:	(bad)  
  4069b4:	mov    ecx,0xa660cc47
  4069b9:	call   0x30f6:0x94223836
  4069c0:	add    al,0xaf
  4069c2:	popa   
  4069c3:	lds    ebp,FWORD PTR [edi+eax*4-0x10]
  4069c7:	xchg   edi,eax
  4069c8:	ins    BYTE PTR es:[edi],dx
  4069c9:	stmxcsr DWORD PTR [edx-0x2b]
  4069cd:	popa   
  4069ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069cf:	mov    ah,0xbd
  4069d1:	or     ch,BYTE PTR [ecx-0x42524364]
  4069d7:	lahf   
  4069d8:	(bad)
  4069dc:	sbb    al,0x5c
  4069de:	push   edi
  4069df:	adc    ebp,DWORD PTR [ebx-0x72]
  4069e2:	iret   
  4069e3:	fsubrp st(4),st
  4069e5:	test   BYTE PTR [ebx+0x76],bl
  4069e8:	rcl    DWORD PTR [edx+ecx*8+0x4d25d9b0],1
  4069ef:	and    BYTE PTR [edi+edi*8+0x4e],al
  4069f3:	es and ah,bl
  4069f6:	cmp    DWORD PTR [ebx+0x34711ad5],0x10341afb
  406a00:	push   esp
  406a01:	cmp    edi,ebx
  406a03:	pop    eax
  406a04:	or     DWORD PTR [eax+0x5c],ebp
  406a07:	cmp    BYTE PTR [esi-0x52],dh
  406a0a:	bound  ebx,QWORD PTR [edi+edi*4+0x3e]
  406a0e:	mov    ds:0xa7e63503,al
  406a13:	push   ebx
  406a14:	mov    edi,0xaef86ad9
  406a19:	stos   DWORD PTR es:[edi],eax
  406a1a:	fwait
  406a1b:	pop    esi
  406a1c:	ins    BYTE PTR es:[edi],dx
  406a1d:	pop    ss
  406a1e:	adc    BYTE PTR [eax+0x7f],bh
  406a21:	pop    edi
  406a22:	scas   eax,DWORD PTR es:[edi]
  406a23:	ja     0x406a65
  406a25:	mov    ecx,0x912150b2
  406a2a:	out    dx,al
  406a2b:	dec    esp
  406a2c:	in     eax,dx
  406a2d:	call   0xf18f:0x2927af38
  406a34:	mov    ah,0xd3
  406a36:	and    esp,DWORD PTR [edx+0x18d8ffb]
  406a3c:	sbb    al,0xe9
  406a3e:	sbb    DWORD PTR [edi],0x8be76b20
  406a44:	ret    
  406a45:	pop    ss
  406a46:	pop    edx
  406a47:	out    dx,al
  406a48:	mov    eax,0x6f0ce07c
  406a4d:	pop    esi
  406a4e:	test   DWORD PTR [edi+0x356e653b],ebp
  406a54:	mov    dh,0xdf
  406a56:	or     esi,edx
  406a58:	mov    WORD PTR [ecx+0x7fafc5e6],?
  406a5e:	jnp    0x4069f8
  406a60:	rol    BYTE PTR ds:0xcd86c37b,0xc8
  406a67:	push   edi
  406a68:	shr    DWORD PTR [esi-0x5c264136],cl
  406a6e:	(bad)  
  406a70:	fcomp  QWORD PTR [ebp+edx*4-0x2f8633f3]
  406a77:	mov    al,ds:0x95229836
  406a7c:	js     0x406a95
  406a7e:	jbe    0x406ae9
  406a80:	push   0x1
  406a82:	bound  esi,QWORD PTR [edi+edi*1-0x1331ea9c]
  406a89:	xor    dh,ch
  406a8b:	and    BYTE PTR [edx-0x2a1898c3],dh
  406a91:	fidiv  WORD PTR [ebp-0x2f6d48c3]
  406a97:	test   al,0x38
  406a99:	xchg   edi,eax
  406a9a:	test   DWORD PTR [ebp-0x64a841d2],edx
  406aa0:	int3   
  406aa1:	lods   al,BYTE PTR ds:[esi]
  406aa2:	test   al,0x5a
  406aa4:	or     BYTE PTR [esp+ebp*1-0x4c],bl
  406aa8:	mov    ecx,0x521d6dc1
  406aad:	test   BYTE PTR [esi+eiz*2+0x18],dh
  406ab1:	aas    
  406ab2:	or     eax,0x8a8c4411
  406ab7:	pop    ebx
  406ab8:	mov    ds:0x271657c1,eax
  406abd:	repnz sbb eax,0x6b800417
  406ac3:	(bad)  
  406ac4:	pushf  
  406ac5:	retf   
  406ac6:	cmp    al,BYTE PTR [edx]
  406ac8:	scas   eax,DWORD PTR es:[edi]
  406ac9:	sub    al,0xa3
  406acb:	mov    eax,0x881c372a
  406ad0:	jae    0x406aeb
  406ad2:	push   ecx
  406ad3:	es mov dh,0xae
  406ad6:	and    BYTE PTR [esi],ch
  406ad8:	das    
  406ad9:	push   eax
  406ada:	inc    ebx
  406adb:	pop    edi
  406adc:	jle    0x406ada
  406ade:	pop    esp
  406adf:	jp     0x406aa8
  406ae1:	pusha  
  406ae2:	lea    edx,fs:[ebp+0x7a]
  406ae6:	mov    al,BYTE PTR [edx+0x77]
  406ae9:	sub    DWORD PTR [edi-0x44],edx
  406aec:	(bad)  
  406aed:	ss push eax
  406aef:	xchg   esp,eax
  406af0:	cdq    
  406af1:	jns    0x406b43
  406af3:	or     al,0x77
  406af5:	jne    0x406b6d
  406af7:	sahf   
  406af8:	shr    DWORD PTR [eax-0x78513caa],0x10
  406aff:	pop    ebx
  406b00:	cmp    eax,0xd92f8b1
  406b05:	mov    ds:0x3578c69e,al
  406b0a:	(bad)  [edx-0x7f]
  406b0d:	inc    edx
  406b0e:	sbb    BYTE PTR [esi],bh
  406b10:	cmp    edi,DWORD PTR [ebp+0x5693fc64]
  406b16:	test   ch,0x9e
  406b19:	adc    eax,0xe8abf8dc
  406b1e:	outs   dx,DWORD PTR ds:[esi]
  406b1f:	sbb    ebx,eax
  406b21:	push   ss
  406b22:	cmp    eax,DWORD PTR [edx-0xa]
  406b25:	sub    eax,0xeaf96e05
  406b2a:	or     eax,0x5b250d7d
  406b2f:	dec    ecx
  406b30:	dec    edx
  406b31:	dec    edx
  406b32:	push   cs
  406b33:	mov    dh,0x61
  406b35:	(bad)  
  406b36:	bnd addr16 jne 0x406b0e
  406b3a:	add    al,0xed
  406b3c:	test   DWORD PTR [ebp+esi*8-0x1],eax
  406b40:	in     eax,dx
  406b41:	stos   DWORD PTR es:[edi],eax
  406b42:	cmp    ebx,DWORD PTR [esi+ecx*4-0x1d6bcb52]
  406b49:	xchg   bh,bl
  406b4b:	ja     0x406b6d
  406b4d:	lds    ebp,FWORD PTR [ebp-0x5a]
  406b50:	iret   
  406b51:	add    dl,BYTE PTR [esi]
  406b53:	stc    
  406b54:	cs inc esp
  406b56:	pop    ebp
  406b57:	leave  
  406b58:	mov    ds:0x94bb3461,al
  406b5d:	sti    
  406b5e:	inc    eax
  406b5f:	push   ds
  406b60:	pop    ebx
  406b61:	jnp    0x406b62
  406b63:	ja     0x406b7f
  406b65:	mov    cl,0x1e
  406b67:	xchg   ebp,eax
  406b68:	fstp   TBYTE PTR [edi]
  406b6a:	loop   0x406b1f
  406b6c:	popa   
  406b6d:	mov    esp,0x1a196309
  406b72:	sub    edx,edi
  406b74:	test   eax,0x25c3f0db
  406b79:	aam    0x1d
  406b7b:	dec    edx
  406b7c:	and    bh,BYTE PTR [esi+0x3a]
  406b7f:	mov    dl,0x4b
  406b81:	iret   
  406b82:	mov    edx,0x2c537cc2
  406b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b88:	push   cs
  406b89:	aaa    
  406b8a:	loope  0x406bef
  406b8c:	xor    ebp,DWORD PTR [ebx]
  406b8e:	sub    eax,0x5efa9e7b
  406b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b94:	out    0x97,al
  406b96:	test   BYTE PTR [edi],bh
  406b98:	aam    0x28
  406b9a:	repz xor esp,ebp
  406b9d:	int    0xc0
  406b9f:	push   esi
  406ba0:	and    al,0xa4
  406ba2:	ds sbb eax,0xf73640ae
  406ba8:	enter  0x48a7,0xcf
  406bac:	sbb    DWORD PTR [ebx-0x242142d9],esp
  406bb2:	xor    eax,DWORD PTR [ebp+0x37d886c4]
  406bb8:	mov    BYTE PTR [edi+0x52],al
  406bbb:	jb     0x406c0d
  406bbd:	jno    0x406b41
  406bbf:	xchg   edi,eax
  406bc0:	ja     0x406b71
  406bc2:	mov    ds:0xae64e2ee,eax
  406bc7:	mov    dh,0xab
  406bc9:	icebp  
  406bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bcb:	jno    0x406c18
  406bcd:	add    ah,al
  406bcf:	out    dx,al
  406bd0:	xchg   esi,eax
  406bd1:	cmp    eax,0x5177f8ec
  406bd6:	ss mov bh,0x59
  406bd9:	mov    ebx,0x664027f7
  406bde:	cli    
  406bdf:	mov    al,ds:0xa0a92a0e
  406be4:	(bad)  
  406be5:	imul   ebx,DWORD PTR [ebp+0x3a76d030],0x6d
  406bec:	and    dl,BYTE PTR [eax]
  406bee:	out    0x8d,eax
  406bf0:	aaa    
  406bf1:	push   0x71
  406bf3:	loope  0x406c58
  406bf5:	leave  
  406bf6:	adc    al,0xc1
  406bf8:	dec    esi
  406bf9:	xor    bl,BYTE PTR [eax]
  406bfb:	in     al,dx
  406bfc:	cmp    dh,dl
  406bfe:	ret    
  406bff:	dec    edi
  406c00:	loopne 0x406c81
  406c02:	les    eax,FWORD PTR [ebp-0x3221a0c4]
  406c08:	mov    cl,0x3c
  406c0a:	xchg   ecx,eax
  406c0b:	cdq    
  406c0c:	in     eax,0xea
  406c0e:	lock jb 0x406c7d
  406c11:	daa    
  406c12:	pop    edx
  406c13:	pop    edi
  406c14:	outs   dx,DWORD PTR ds:[esi]
  406c15:	idiv   BYTE PTR [ecx]
  406c17:	sbb    eax,0xe5fee22a
  406c1c:	jno    0x406c62
  406c1e:	sbb    BYTE PTR [edx+0x64],ch
  406c21:	sub    al,0x95
  406c23:	xor    al,0xc7
  406c25:	aas    
  406c26:	jnp    0x406c8b
  406c28:	ja     0x406bf6
  406c2a:	mov    dl,0xc5
  406c2c:	cli    
  406c2d:	cmc    
  406c2e:	sub    BYTE PTR [edi],al
  406c30:	cdq    
  406c31:	push   cs
  406c32:	jge    0x406c80
  406c34:	xchg   esp,eax
  406c35:	aaa    
  406c36:	fwait
  406c37:	mov    ch,0x29
  406c39:	mov    bl,BYTE PTR [eax+ebp*2]
  406c3c:	sahf   
  406c3d:	imul   BYTE PTR [eax-0x22]
  406c40:	inc    edi
  406c41:	and    eax,0x7a3cc4a9
  406c46:	mov    al,BYTE PTR ds:0x1851f14a
  406c4c:	(bad)  
  406c4d:	fxch   st(4)
  406c4f:	xlat   BYTE PTR ds:[ebx]
  406c50:	mov    WORD PTR ss:[ebp+0x3f37939b],gs
  406c57:	xor    ch,cl
  406c59:	mov    esp,0xb433b228
  406c5e:	mov    esi,0x5b2e4ef
  406c63:	pop    es
  406c64:	inc    ebx
  406c65:	inc    ebp
  406c66:	rol    esi,1
  406c68:	sbb    ebx,DWORD PTR [eax+0x69]
  406c6b:	fistp  DWORD PTR ds:0xe29f9d8
  406c71:	jecxz  0x406caa
  406c73:	ins    BYTE PTR es:[edi],dx
  406c74:	repz mul edx
  406c77:	out    0xa6,eax
  406c79:	xchg   edi,eax
  406c7a:	adc    BYTE PTR [ecx-0x7c],0x53
  406c7e:	dec    esi
  406c7f:	adc    al,0x22
  406c81:	xor    ah,BYTE PTR [ebp+0x50]
  406c84:	pusha  
  406c85:	repnz pusha 
  406c87:	retf   0xecbf
  406c8a:	stc    
  406c8b:	sar    esi,0x1a
  406c8e:	xor    DWORD PTR [edi],eax
  406c90:	cld    
  406c91:	sub    esp,DWORD PTR [edi+0x3b9d8b8d]
  406c97:	xor    bh,0xf1
  406c9a:	int3   
  406c9b:	(bad)  
  406c9c:	pop    edx
  406c9d:	xchg   esi,eax
  406c9e:	in     eax,0xe9
  406ca0:	jbe    0x406c27
  406ca2:	shl    DWORD PTR [ebx],1
  406ca4:	dec    eax
  406ca5:	sub    eax,0x76e78c34
  406caa:	sti    
  406cab:	addr16 (bad) 
  406cad:	aad    0xb8
  406caf:	iret   
  406cb0:	es jl  0x406cdc
  406cb3:	or     eax,0xeabc4b71
  406cb8:	std    
  406cb9:	inc    edi
  406cba:	sub    eax,DWORD PTR [eax+0x5a]
  406cbd:	loopne 0x406ca4
  406cbf:	mov    dl,0x10
  406cc1:	pop    edi
  406cc2:	call   0x1c77:0x3f8213a2
  406cc9:	in     al,dx
  406cca:	hlt    
  406ccb:	js     0x406cd3
  406ccd:	xchg   DWORD PTR [ecx],ebx
  406ccf:	jbe    0x406cdd
  406cd1:	fiadd  WORD PTR [eax]
  406cd3:	ins    BYTE PTR es:[edi],dx
  406cd4:	aam    0x8e
  406cd6:	or     esi,esi
  406cd8:	ins    DWORD PTR es:[edi],dx
  406cd9:	sub    eax,0xd9c075fa
  406cde:	jno    0x406c65
  406ce0:	push   edi
  406ce1:	dec    eax
  406ce2:	iret   
  406ce3:	mov    esi,0xd7b2275f
  406ce8:	pop    eax
  406ce9:	mov    ecx,0x5a6d0100
  406cee:	ds out dx,al
  406cf0:	adc    eax,DWORD PTR [edi-0x3]
  406cf3:	scas   eax,DWORD PTR es:[edi]
  406cf4:	in     eax,0x1
  406cf6:	das    
  406cf7:	mov    ah,0xbb
  406cf9:	xchg   bl,cl
  406cfb:	jle    0x406d39
  406cfd:	aaa    
  406cfe:	xor    al,0x24
  406d00:	add    BYTE PTR [ebx+0x742a731c],ch
  406d06:	cmp    al,dl
  406d08:	xor    esp,0xffffff87
  406d0b:	jmp    0x88650273
  406d10:	mov    eax,0x9d032f9e
  406d15:	inc    ebp
  406d16:	jno    0x406d66
  406d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d19:	mov    ds:0xf107e549,eax
  406d1e:	jb     0x406d69
  406d20:	mov    eax,ds:0x206a69e6
  406d25:	jecxz  0x406d45
  406d27:	shl    cl,1
  406d29:	or     al,0x29
  406d2b:	cmp    al,0xef
  406d2d:	xchg   ebp,eax
  406d2e:	(bad)  
  406d2f:	sub    DWORD PTR ds:0xc224d388,ebp
  406d35:	sti    
  406d36:	dec    ecx
  406d37:	arpl   WORD PTR ds:0x2adc56a5,bp
  406d3d:	fcomip st,st(0)
  406d3f:	mul    dl
  406d41:	sub    cl,ch
  406d43:	pop    esi
  406d44:	sbb    DWORD PTR [ebx+eiz*1+0x5d],esp
  406d48:	mov    ebx,0x6150f075
  406d4d:	cwde   
  406d4e:	lods   al,BYTE PTR ds:[esi]
  406d4f:	and    BYTE PTR [edx+0x5310c727],cl
  406d55:	fsubr  DWORD PTR [edx]
  406d57:	mov    cl,BYTE PTR [ebx+0x46495f6]
  406d5d:	sahf   
  406d5e:	jmp    0x406dd1
  406d60:	jmp    0x406d47
  406d62:	add    al,0xeb
  406d64:	xchg   DWORD PTR [eax],edx
  406d66:	push   0x2ce23c57
  406d6b:	iret   
  406d6c:	jne    0x406dea
  406d6e:	rcr    edx,1
  406d70:	fist   DWORD PTR [ebx]
  406d72:	ins    BYTE PTR es:[edi],dx
  406d73:	sahf   
  406d74:	xchg   edi,eax
  406d75:	jmp    0x406d88
  406d77:	ret    0x851f
  406d7a:	int    0xb
  406d7c:	scas   al,BYTE PTR es:[edi]
  406d7d:	mov    dh,0xda
  406d7f:	out    0xd1,al
  406d81:	adc    esi,ebp
  406d83:	sbb    al,0xf7
  406d85:	fidiv  DWORD PTR [ecx+ebx*1-0x27f45764]
  406d8c:	fild   QWORD PTR [edi]
  406d8e:	jae    0x406d3b
  406d90:	in     al,0xc
  406d92:	xor    ebp,DWORD PTR [edi]
  406d94:	mov    eax,0x28801f8
  406d99:	xchg   ebx,eax
  406d9a:	inc    edx
  406d9b:	popf   
  406d9c:	rcr    BYTE PTR [esi+0x36],1
  406d9f:	add    edx,eax
  406da1:	mov    dl,0x41
  406da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406da4:	pop    esi
  406da5:	lods   al,BYTE PTR ds:[esi]
  406da6:	sbb    BYTE PTR [ebx],0xe1
  406da9:	adc    dh,cl
  406dab:	jl     0x406db4
  406dad:	sahf   
  406dae:	sbb    BYTE PTR [edi-0x49443aa8],bl
  406db4:	inc    ebx
  406db5:	jb     0x406d4d
  406db7:	imul   edx,DWORD PTR [eax],0x52205593
  406dbd:	adc    BYTE PTR [ebx+0x30],bh
  406dc0:	xchg   ebp,eax
  406dc1:	bound  edi,QWORD PTR [edi+0x2e]
  406dc4:	(bad)  
  406dc5:	shl    DWORD PTR [ebx-0x32bd45b8],1
  406dcb:	stos   DWORD PTR es:[edi],eax
  406dcc:	je     0x406d79
  406dce:	pop    es
  406dcf:	mov    al,0x69
  406dd1:	gs jmp 0x5c5a900f
  406dd7:	addr16 dec ebp
  406dd9:	rol    DWORD PTR [ecx+0x45e99461],0x64
  406de0:	mov    ebp,0xc11c7874
  406de5:	jl     0x406df6
  406de7:	pop    edx
  406de8:	inc    ecx
  406de9:	imul   edi,DWORD PTR [esi-0x5a],0x26819bc2
  406df0:	out    dx,eax
  406df1:	stc    
  406df2:	adc    BYTE PTR [edx+0x6c],al
  406df5:	jecxz  0x406d78
  406df7:	mov    ecx,0x2a931bc3
  406dfc:	mov    ah,bl
  406dfe:	add    DWORD PTR [edi-0x2a],0x35
  406e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e03:	scas   al,BYTE PTR es:[edi]
  406e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e05:	dec    esp
  406e06:	xchg   ecx,eax
  406e07:	mov    bl,0x96
  406e09:	inc    ecx
  406e0a:	sub    al,0x33
  406e0c:	pusha  
  406e0d:	(bad)  
  406e0e:	loope  0x406da9
  406e10:	sub    ebp,0xbbbe9714
  406e16:	mov    ds:0x8f701ae0,al
  406e1b:	cli    
  406e1c:	or     ecx,DWORD PTR [ebp-0xbad7222]
  406e22:	xchg   ebp,eax
  406e23:	push   esi
  406e24:	fimul  WORD PTR [esi+esi*1+0x66]
  406e28:	mov    bx,0x4e3b
  406e2c:	mov    ch,0x69
  406e2e:	sub    bh,ch
  406e30:	mov    ch,0x5a
  406e32:	scas   eax,DWORD PTR es:[edi]
  406e33:	xchg   esi,eax
  406e34:	lock inc edi
  406e36:	xchg   edi,eax
  406e37:	ja     0x406e9b
  406e39:	out    dx,eax
  406e3a:	push   edx
  406e3b:	int    0xa3
  406e3d:	out    0xe9,al
  406e3f:	cmp    esp,DWORD PTR gs:[ebp+0x32]
  406e43:	push   esi
  406e44:	test   BYTE PTR [esi+0x540241a7],al
  406e4a:	clc    
  406e4b:	outs   dx,BYTE PTR ds:[esi]
  406e4c:	mov    gs,esp
  406e4e:	out    0x1d,al
  406e50:	dec    ebp
  406e51:	inc    edi
  406e52:	arpl   bx,di
  406e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e55:	sub    BYTE PTR [ebp+0x5d65d2c8],dh
  406e5b:	jbe    0x406df0
  406e5d:	add    DWORD PTR [ecx+esi*4+0x37],esi
  406e61:	or     eax,0x7c4dad3e
  406e66:	int    0x51
  406e68:	je     0x406e57
  406e6a:	test   DWORD PTR [esi],eax
  406e6c:	xor    al,0xbd
  406e6e:	in     eax,0xb7
  406e70:	nop
  406e71:	sub    al,BYTE PTR [edx-0x26]
  406e74:	test   eax,0xe70ae624
  406e79:	sub    ch,bh
  406e7b:	inc    ebp
  406e7c:	aad    0xa6
  406e7e:	push   esi
  406e7f:	push   ebx
  406e80:	das    
  406e81:	int3   
  406e82:	adc    DWORD PTR [edi],eax
  406e84:	cdq    
  406e85:	push   0x27c0fbe2
  406e8a:	out    dx,eax
  406e8b:	int    0xda
  406e8d:	inc    edi
  406e8e:	push   esi
  406e8f:	sahf   
  406e90:	int    0xcc
  406e92:	ja     0x406e6c
  406e94:	jae    0x406e73
  406e96:	sub    BYTE PTR [ebp+0x52cb5da],cl
  406e9c:	pusha  
  406e9d:	ins    BYTE PTR es:[edi],dx
  406e9e:	xchg   edx,eax
  406e9f:	pop    eax
  406ea0:	add    esp,DWORD PTR [edi-0x4233764f]
  406ea6:	mov    esp,0x5a51d6a6
  406eab:	repz sub ah,BYTE PTR [edi-0x16e26624]
  406eb2:	shl    DWORD PTR es:[ecx+0x14233cb5],cl
  406eb9:	(bad)
  406ebd:	gs mov eax,0xc25d7125
  406ec3:	popa   
  406ec4:	leave  
  406ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ec6:	sub    DWORD PTR [esi+0x1df86853],ebp
  406ecc:	or     bh,ah
  406ece:	or     ebx,DWORD PTR [esi-0x7e75e882]
  406ed4:	jns    0x406ea4
  406ed6:	jne    0x406f04
  406ed8:	pop    ecx
  406ed9:	mov    fs,WORD PTR [ebp+0x53]
  406edc:	jmp    0x406ed2
  406ede:	fimul  DWORD PTR [eax+0x3a60b66b]
  406ee4:	fimul  DWORD PTR [ebx+0x881e251]
  406eea:	aad    0xd1
  406eec:	pop    ebx
  406eed:	mov    ds:0xea71b05f,eax
  406ef2:	mov    ebp,ebx
  406ef4:	cmp    eax,0xde7407e8
  406ef9:	mov    ds:0xd9c5eb33,al
  406efe:	jge    0x406e9b
  406f00:	add    BYTE PTR [edi],bh
  406f02:	ja     0x406ef4
  406f04:	popf   
  406f05:	inc    ebp
  406f06:	xlat   BYTE PTR ds:[ebx]
  406f07:	push   cs
  406f08:	mov    ecx,ds
  406f0a:	outs   dx,BYTE PTR ds:[esi]
  406f0b:	mov    cl,0xc4
  406f0d:	push   esp
  406f0e:	sahf   
  406f0f:	mov    ah,BYTE PTR [edi+0x729af97e]
  406f15:	outs   dx,BYTE PTR ds:[esi]
  406f16:	and    BYTE PTR [ebx-0xf0417db],0x39
  406f1d:	push   ecx
  406f1e:	test   DWORD PTR [edi+edx*4-0x4],eax
  406f22:	popa   
  406f23:	in     al,0xbf
  406f25:	cld    
  406f26:	sub    DWORD PTR [ecx+0x9f5b990],ecx
  406f2c:	xchg   ebx,eax
  406f2d:	mov    bl,BYTE PTR [ebx-0x43]
  406f30:	sahf   
  406f31:	or     al,0x1e
  406f33:	sbb    BYTE PTR [eax+0x73169fc],bl
  406f39:	sahf   
  406f3a:	xchg   DWORD PTR [ebx+0x7aa5059e],ebx
  406f40:	lods   eax,DWORD PTR ds:[esi]
  406f41:	test   al,0xab
  406f43:	cmp    al,0x46
  406f45:	jmp    0xc8ab94cd
  406f4a:	imul   edi,DWORD PTR [edi],0xb1f893d4
  406f50:	call   0x2454e942
  406f55:	es inc eax
  406f57:	xchg   edx,eax
  406f58:	cmp    al,0xda
  406f5a:	push   edx
  406f5b:	sbb    eax,0x90de9b70
  406f60:	in     eax,0x47
  406f62:	jns    0x406fc8
  406f64:	or     eax,ebp
  406f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f67:	retf   
  406f68:	dec    esp
  406f69:	pop    edi
  406f6a:	int3   
  406f6b:	retf   
  406f6c:	ins    BYTE PTR es:[edi],dx
  406f6d:	ret    0xbaab
  406f70:	sahf   
  406f71:	test   edi,ebp
  406f73:	adc    DWORD PTR [eax+0x25a75227],esi
  406f79:	fmulp  st(6),st
  406f7b:	outs   dx,DWORD PTR ds:[esi]
  406f7c:	inc    eax
  406f7d:	mov    ebx,0x371736ef
  406f82:	test   BYTE PTR [ecx-0x13],ah
  406f85:	sbb    al,0x9d
  406f87:	in     al,0x32
  406f89:	jg     0x406fbd
  406f8b:	xchg   ebp,eax
  406f8c:	push   ecx
  406f8d:	js     0x406f7f
  406f8f:	data16 js 0x406fa6
  406f92:	fidiv  DWORD PTR [ecx]
  406f94:	out    0xf4,eax
  406f96:	mov    bh,0x18
  406f98:	aas    
  406f99:	cmp    eax,0xaa360503
  406f9e:	and    ebx,DWORD PTR [esi]
  406fa0:	outs   dx,BYTE PTR ds:[esi]
  406fa1:	(bad)  [ebx]
  406fa3:	fstp   DWORD PTR [eax+0x189f93c7]
  406fa9:	sub    eax,0x6fca615d
  406fae:	ja     0x406f62
  406fb0:	xor    ebp,DWORD PTR [esi+0x42]
  406fb3:	idiv   BYTE PTR [ebp+0x33]
  406fb6:	mov    ebp,0xad0d4ebc
  406fbb:	inc    esi
  406fbc:	jb     0x407025
  406fbe:	adc    BYTE PTR [ebp+0x46c934bf],bh
  406fc4:	popf   
  406fc5:	pop    ebp
  406fc6:	sahf   
  406fc7:	mov    eax,ds:0xfbe33a01
  406fcc:	call   0xb26c:0x3352e035
  406fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fd4:	pushf  
  406fd5:	imul   DWORD PTR [edx+0x5ddc779]
  406fdb:	push   ss
  406fdc:	xor    BYTE PTR [edi+0x2f],0x49
  406fe0:	cdq    
  406fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe2:	hlt    
  406fe3:	ret    0x5cc
  406fe6:	cdq    
  406fe7:	xchg   BYTE PTR [edx+0x1091b3a1],dh
  406fed:	pmullw mm7,QWORD PTR [esi-0x53]
  406ff1:	dec    eax
  406ff2:	ds xor al,0x8d
  406ff5:	test   DWORD PTR gs:[ebx],ebp
  406ff8:	and    bh,cl
  406ffa:	imul   esp,DWORD PTR ds:0x62863fd3,0xb1e09c4b
  407004:	call   0x50c0488f
  407009:	retf   0xbea5
  40700c:	test   dh,bl
  40700e:	addr16 cdq 
  407010:	in     eax,dx
  407011:	gs ss sbb al,0xbb
  407015:	lock mov edi,0x8aae98ea
  40701b:	adc    eax,0xf5fddc54
  407020:	mov    ebx,0xf5be7114
  407025:	test   al,0x65
  407027:	aaa    
  407028:	jne    0x40702c
  40702a:	shl    BYTE PTR [edi-0x3d1041f4],0xd0
  407031:	call   DWORD PTR [esp+eax*2+0x31f0b24d]
  407038:	mov    ebp,0x8f26601c
  40703d:	xchg   esi,eax
  40703e:	in     al,0x6f
  407040:	mov    BYTE PTR [edx+0x2b],dh
  407043:	retf   
  407044:	sti    
  407045:	popa   
  407046:	xchg   esi,eax
  407047:	mov    cs,edi
  407049:	into   
  40704a:	ins    DWORD PTR es:[edi],dx
  40704b:	xchg   edx,ebp
  40704d:	mov    ebx,0x856bc2d4
  407052:	or     eax,0xf7a67c6
  407057:	pop    ecx
  407058:	push   ecx
  407059:	mov    ds:0x9276aad0,eax
  40705e:	retf   
  40705f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407060:	push   ecx
  407061:	shl    DWORD PTR [edx],1
  407063:	ins    DWORD PTR es:[edi],dx
  407064:	jne    0x407021
  407066:	shl    WORD PTR [ebx+ebx*4+0x5cf23447],0xba
  40706f:	push   edi
  407070:	mov    ebx,0x1128798d
  407075:	push   eax
  407076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407078:	xchg   edx,eax
  407079:	sti    
  40707a:	inc    edi
  40707b:	rol    DWORD PTR ds:0x452ceaea,1
  407081:	dec    esi
  407082:	inc    eax
  407083:	hlt    
  407084:	arpl   WORD PTR [eax-0x27677150],di
  40708a:	in     eax,dx
  40708b:	pop    eax
  40708c:	das    
  40708d:	jg     0x4070e3
  40708f:	mov    ebp,0xf8579492
  407094:	(bad)  
  407095:	xlat   BYTE PTR ds:[ebx]
  407096:	ds xchg esi,eax
  407098:	int    0x9e
  40709a:	inc    ebp
  40709b:	adc    BYTE PTR [edx],al
  40709d:	mov    dh,0xd3
  40709f:	cli    
  4070a0:	into   
  4070a1:	xchg   ecx,eax
  4070a2:	dec    eax
  4070a3:	pop    ds
  4070a4:	add    dh,dl
  4070a6:	int3   
  4070a7:	and    bl,BYTE PTR [edi]
  4070a9:	loop   0x407069
  4070ab:	(bad)  
  4070ac:	pop    edi
  4070ad:	aaa    
  4070ae:	or     BYTE PTR [edx+0x4e],dh
  4070b1:	bound  ecx,QWORD PTR [edi+0x422ca657]
  4070b7:	push   ebp
  4070b8:	inc    ebx
  4070b9:	repz aam 0xe5
  4070bc:	mul    DWORD PTR [ebx]
  4070be:	aaa    
  4070bf:	jnp    0x4070d9
  4070c1:	idiv   dh
  4070c3:	adc    eax,0x5fa392e7
  4070c8:	jbe    0x4070e2
  4070ca:	sahf   
  4070cb:	out    0x4d,eax
  4070cd:	adc    DWORD PTR [ecx],ecx
  4070cf:	das    
  4070d0:	sub    eax,0x74301a47
  4070d5:	int    0x9f
  4070d7:	cwde   
  4070d8:	mov    ebp,0xf04ca4c9
  4070dd:	and    esp,edx
  4070df:	jns    0x4070af
  4070e1:	dec    edx
  4070e2:	push   ebp
  4070e3:	data16 das 
  4070e5:	dec    ebx
  4070e6:	addr16 lahf 
  4070e8:	jmp    0x4070ad
  4070ea:	cmp    eax,0x9c1e6be6
  4070ef:	xchg   esp,eax
  4070f0:	xor    eax,0xc2a5e1ee
  4070f5:	pop    ds
  4070f6:	mov    BYTE PTR [edi+0x6],0x67
  4070fa:	test   BYTE PTR [ecx-0x4f16cdb2],bl
  407100:	or     eax,0x88dc9e12
  407105:	stos   DWORD PTR es:[edi],eax
  407106:	mov    dh,0x5c
  407108:	sub    dl,BYTE PTR [ebx]
  40710a:	inc    eax
  40710b:	pusha  
  40710c:	push   esi
  40710d:	ret    
  40710e:	mov    esi,?
  407110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407111:	outs   dx,DWORD PTR ds:[esi]
  407112:	sbb    al,0x51
  407115:	outs   dx,DWORD PTR ds:[esi]
  407116:	push   eax
  407117:	popa   
  407118:	cmp    dl,BYTE PTR [edx+0x6dc3173f]
  40711e:	lods   eax,DWORD PTR ds:[esi]
  40711f:	or     ebp,DWORD PTR [edx]
  407121:	pusha  
  407122:	jne    0x40717a
  407124:	sar    DWORD PTR [ebx+0x6],cl
  407127:	xchg   edx,eax
  407128:	(bad)  
  407129:	loop   0x407134
  40712b:	(bad)  
  40712c:	popf   
  40712d:	in     al,0x65
  40712f:	adc    BYTE PTR [ebp+edi*4-0x50],ah
  407133:	rdmsr  
  407135:	or     dh,BYTE PTR ds:0x9d7c7504
  40713b:	push   0xdfe7b8eb
  407140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407141:	out    0x44,al
  407143:	add    al,0x81
  407145:	push   cs
  407146:	mov    esp,0x70a6295c
  40714b:	ja     0x407168
  40714d:	pop    edi
  40714e:	mov    cl,0x6b
  407150:	stos   BYTE PTR es:[edi],al
  407151:	(bad)  
  407152:	sahf   
  407153:	das    
  407154:	bound  esi,QWORD PTR [ecx-0x46]
  407157:	jno    0x407185
  407159:	aam    0x57
  40715b:	push   eax
  40715c:	or     DWORD PTR [ecx],eax
  40715e:	aas    
  40715f:	lahf   
  407160:	mov    ecx,0xadbf3e37
  407165:	stos   DWORD PTR es:[edi],eax
  407166:	jge    0x4071ac
  407168:	inc    ecx
  407169:	sbb    eax,0x27c6fd28
  40716e:	retf   0x3dd2
  407171:	int3   
  407172:	scas   eax,DWORD PTR es:[edi]
  407173:	icebp  
  407174:	enter  0xe412,0xd7
  407178:	and    al,0x82
  40717a:	cmp    DWORD PTR [edi],ecx
  40717c:	cs inc esi
  40717e:	inc    ebp
  40717f:	lahf   
  407180:	idiv   edi
  407182:	mov    esp,0xd22592ff
  407187:	(bad)  
  407188:	cmp    edx,DWORD PTR [edi]
  40718a:	dec    esp
  40718b:	jg     0x4071ef
  40718d:	fst    DWORD PTR [edx-0x6573709f]
  407193:	jmp    0x4278:0x924c73e
  40719a:	loop   0x407181
  40719c:	fnsave [ebx+0x4d06b749]
  4071a2:	and    DWORD PTR [ecx-0x39],ebp
  4071a5:	xlat   BYTE PTR ds:[ebx]
  4071a6:	shl    ah,cl
  4071a8:	and    ah,BYTE PTR [ebx+0x55]
  4071ab:	cmc    
  4071ac:	loope  0x40715d
  4071ae:	jecxz  0x4071f4
  4071b0:	pop    ds
  4071b1:	imul   esp,DWORD PTR [ebx],0x5f264e31
  4071b7:	stos   BYTE PTR es:[edi],al
  4071b8:	mov    bl,0xe9
  4071ba:	jle    0x40723a
  4071bc:	push   0x746b414f
  4071c1:	cs ins BYTE PTR es:[edi],dx
  4071c3:	outs   dx,BYTE PTR ds:[esi]
  4071c4:	mov    al,0xea
  4071c6:	cmp    DWORD PTR [eax+0x4f627008],ebx
  4071cc:	cmc    
  4071cd:	shr    BYTE PTR [ecx-0x56ddac3],1
  4071d3:	inc    edi
  4071d4:	pop    ss
  4071d5:	sbb    ebp,ebx
  4071d7:	out    0x50,al
  4071d9:	inc    ebx
  4071da:	adc    eax,0xfee971af
  4071df:	dec    ebx
  4071e0:	sub    WORD PTR gs:[edx],sp
  4071e4:	xchg   ebx,eax
  4071e5:	jno    0x407191
  4071e7:	outs   dx,DWORD PTR ds:[esi]
  4071e8:	lods   eax,DWORD PTR ds:[esi]
  4071e9:	scas   al,BYTE PTR es:[edi]
  4071ea:	cmc    
  4071eb:	retf   
  4071ec:	push   0xd7702119
  4071f1:	adc    DWORD PTR [ebx-0x1e],ebx
  4071f4:	inc    ecx
  4071f5:	pushf  
  4071f6:	adc    DWORD PTR [edi+0x73038cd6],esi
  4071fc:	(bad)  
  4071fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071fe:	mov    ch,0x55
  407200:	xchg   esi,eax
  407201:	jnp    0x407210
  407203:	les    eax,FWORD PTR [eax]
  407205:	inc    ebx
  407206:	jb     0x40719a
  407208:	jnp    0x407254
  40720a:	push   esp
  40720b:	ins    BYTE PTR es:[edi],dx
  40720c:	mov    eax,ds:0x1f5a2919
  407211:	cld    
  407212:	cmp    BYTE PTR [esi],0xe9
  407215:	out    0x70,eax
  407217:	or     DWORD PTR [ebp-0x10],ecx
  40721a:	or     edx,esi
  40721c:	fild   QWORD PTR ds:0x620b11d2
  407222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407223:	xchg   ecx,eax
  407224:	dec    ebp
  407225:	push   cs
  407226:	popf   
  407227:	mov    ebp,DWORD PTR [ebx-0x72]
  40722a:	xchg   ebx,eax
  40722b:	push   ebx
  40722c:	(bad)
  407230:	dec    ebx
  407231:	cwde   
  407232:	xor    ebp,ebp
  407234:	imul   ebx,esi,0xffffffec
  407237:	fadd   QWORD PTR [edi-0x3d]
  40723a:	and    ebx,edx
  40723c:	adc    DWORD PTR [esi+0x51],edi
  40723f:	push   edx
  407240:	scas   al,BYTE PTR es:[edi]
  407241:	mov    ebp,0xc46e3aad
  407246:	mov    al,ds:0xcb6518b0
  40724b:	or     BYTE PTR [eax+0x25957139],dh
  407251:	sbb    ebp,DWORD PTR [ebx+0x38]
  407254:	sub    bh,BYTE PTR [ebp+0x7031e45a]
  40725a:	jge    0x4072bc
  40725c:	sub    al,0xc2
  40725e:	sar    DWORD PTR [eax+0x24],1
  407261:	mov    ah,0xc3
  407263:	cmp    al,0x62
  407265:	daa    
  407266:	dec    esp
  407267:	sbb    BYTE PTR [eax],ch
  407269:	mov    dl,0x1a
  40726b:	pop    edx
  40726c:	pop    ebx
  40726d:	add    ah,BYTE PTR [esi+0x62]
  407270:	sub    bh,cl
  407272:	out    dx,eax
  407273:	lods   al,BYTE PTR ds:[esi]
  407274:	mov    BYTE PTR [eax+0x3de908b2],ah
  40727a:	gs mov esi,0xc130f045
  407280:	mov    WORD PTR [edx-0x14],gs
  407283:	mov    WORD PTR [ecx-0x59e8dcfc],fs
  407289:	(bad)  
  40728a:	cld    
  40728b:	inc    esi
  40728c:	push   eax
  40728d:	sbb    esi,eax
  40728f:	pop    ss
  407290:	inc    edx
  407291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407292:	adc    al,0x1c
  407294:	cmp    al,0x1f
  407296:	cmp    BYTE PTR [bp+si],ah
  407299:	inc    eax
  40729a:	pop    eax
  40729b:	push   ebx
  40729c:	pop    edx
  40729d:	cmp    BYTE PTR [ecx],al
  40729f:	fsub   QWORD PTR [edx+0x6e7e0c8]
  4072a5:	int    0x7e
  4072a7:	xor    ebx,DWORD PTR [ebp+0x589699c9]
  4072ad:	(bad)  
  4072ae:	mov    bh,0x7d
  4072b0:	jne    0x407323
  4072b2:	jge    0x407256
  4072b4:	sub    al,0xe0
  4072b6:	xchg   esp,eax
  4072b7:	call   0xe5cf:0x8161a69d
  4072be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072bf:	jbe    0x407271
  4072c1:	pop    ecx
  4072c2:	xchg   ebp,eax
  4072c3:	mov    esi,0x9678c6bd
  4072c8:	mov    edx,0x8eabebfa
  4072cd:	aam    0xdd
  4072cf:	pop    edx
  4072d0:	dec    esi
  4072d1:	xor    BYTE PTR [edx+0x2f],bh
  4072d4:	mov    DWORD PTR [ecx],edx
  4072d6:	ret    0x399d
  4072d9:	inc    DWORD PTR [ecx+0x79]
  4072dc:	daa    
  4072dd:	mov    ch,0x8
  4072df:	loop   0x407293
  4072e1:	mov    ch,0x4b
  4072e3:	mov    cl,0xf2
  4072e5:	mov    al,ds:0x640d7bed
  4072ea:	jl     0x4072e1
  4072ec:	ja     0x4072b0
  4072ee:	mov    ch,BYTE PTR [edx]
  4072f0:	lds    ebx,FWORD PTR [ebx]
  4072f2:	jmp    0x407323
  4072f4:	jo     0x407354
  4072f6:	sub    DWORD PTR [esi-0x78],0x3f7cd4b6
  4072fd:	mov    ds:0x19b9bcf2,eax
  407302:	jbe    0x407320
  407304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407305:	mov    WORD PTR [edi-0x66],?
  407308:	xchg   DWORD PTR [ebx-0x7d9d67fd],ebp
  40730e:	sahf   
  40730f:	and    al,0xde
  407311:	inc    ebp
  407312:	inc    ecx
  407313:	imul   ebx,DWORD PTR [edi+0x41],0xd9ccb6a7
  40731a:	imul   BYTE PTR [edx+0x4c83dfd6]
  407320:	push   esp
  407321:	jecxz  0x407372
  407323:	xchg   esi,eax
  407324:	addr16 push ecx
  407326:	cmp    eax,DWORD PTR [edx]
  407328:	popa   
  407329:	and    ebp,DWORD PTR [esi+0x45]
  40732c:	ror    BYTE PTR [eax-0x74],cl
  40732f:	int3   
  407330:	cmp    dh,al
  407332:	aad    0xa1
  407334:	or     ebx,esp
  407336:	inc    esi
  407337:	(bad)  
  407338:	xchg   esp,eax
  407339:	pop    es
  40733a:	inc    esp
  40733b:	repnz fisub DWORD PTR es:[esi+edx*4-0x631868e7]
  407344:	(bad)  
  407345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407346:	das    
  407347:	ds sub dh,cl
  40734a:	leave  
  40734b:	cmp    BYTE PTR [ebp+0x6d],cl
  40734e:	loopne 0x407301
  407350:	dec    eax
  407351:	ins    DWORD PTR es:[edi],dx
  407352:	add    BYTE PTR [edx],0x8a
  407355:	jb     0x407331
  407357:	lahf   
  407358:	mov    edx,0x79833b5d
  40735d:	push   esi
  40735e:	dec    eax
  40735f:	cmp    ebx,0x5750d952
  407365:	inc    esi
  407366:	xor    eax,0xc2bed955
  40736b:	shl    DWORD PTR [ecx+0x72b8b439],0xdb
  407372:	outs   dx,BYTE PTR ds:[esi]
  407373:	jmp    0x4072f5
  407375:	and    DWORD PTR [ebx+0x78],0xfffffff3
  407379:	out    dx,eax
  40737a:	mov    dh,BYTE PTR [ecx-0x2]
  40737d:	push   0xffffffdc
  40737f:	lods   al,BYTE PTR ds:[esi]
  407380:	xchg   ecx,esi
  407382:	imul   BYTE PTR [edx]
  407384:	or     al,0xb9
  407386:	mov    edx,0x5f7596f
  40738b:	in     al,dx
  40738c:	(bad)  
  40738d:	repz ror DWORD PTR [edi-0x6d3172bc],0xca
  407395:	and    DWORD PTR [ebp+0x1e],esp
  407398:	push   ds
  407399:	mov    bl,BYTE PTR [edi+0x7b6d151c]
  40739f:	jge    0x407394
  4073a1:	push   esp
  4073a2:	cld    
  4073a3:	sahf   
  4073a4:	mov    cl,0xe
  4073a6:	scas   al,BYTE PTR es:[edi]
  4073a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a8:	in     eax,0x54
  4073aa:	push   esp
  4073ab:	cdq    
  4073ac:	dec    ecx
  4073ad:	and    BYTE PTR [ebp-0x46],al
  4073b0:	bound  ebp,QWORD PTR [eax-0x4d]
  4073b3:	xchg   ebx,eax
  4073b4:	inc    edi
  4073b5:	dec    ebp
  4073b6:	daa    
  4073b7:	xor    bl,BYTE PTR [edi+0x25]
  4073ba:	sub    BYTE PTR ds:0x45bae892,dl
  4073c0:	(bad)  
  4073c1:	mov    esi,0x31a18ba9
  4073c6:	dec    esp
  4073c7:	fidiv  DWORD PTR [eax+edi*8-0x67]
  4073cb:	pcmpeqb mm4,QWORD PTR [edi+0x62a6ce51]
  4073d2:	ficom  WORD PTR [ebx]
  4073d4:	mov    bh,0xc6
  4073d6:	cdq    
  4073d7:	adc    DWORD PTR [edx+0x2d],edx
  4073da:	push   ecx
  4073db:	aam    0x8c
  4073dd:	aad    0xb1
  4073df:	inc    ecx
  4073e0:	mov    ebx,0xe99fc61a
  4073e5:	push   ebp
  4073e6:	adc    DWORD PTR [edx-0x3d],0xffffffb8
  4073ea:	jp     0x407427
  4073ec:	inc    edx
  4073ed:	mov    esi,0x135dfd3f
  4073f2:	aam    0x80
  4073f4:	mov    edi,0x7740033c
  4073f9:	stos   DWORD PTR es:[edi],eax
  4073fa:	jnp    0x4073a6
  4073fc:	dec    ecx
  4073fd:	jae    0x4073ee
  4073ff:	jg     0x407435
  407401:	pop    ss
  407402:	add    BYTE PTR [ebp+0x73],ch
  407405:	arpl   WORD PTR [eax-0x217205bf],dx
  40740b:	stos   BYTE PTR es:[edi],al
  40740c:	inc    esp
  40740d:	pusha  
  40740e:	sar    dh,0x24
  407411:	xor    al,ch
  407413:	cwde   
  407414:	dec    esp
  407415:	ins    DWORD PTR es:[edi],dx
  407416:	inc    eax
  407417:	inc    ebp
  407418:	jnp    0x4073fe
  40741a:	mov    al,ds:0xfa7eacba
  40741f:	std    
  407420:	retf   0xa31b
  407423:	in     eax,dx
  407424:	int3   
  407425:	(bad)  
  407426:	imul   esi,DWORD PTR [edx+0x1a],0x5106b92b
  40742d:	jae    0x4073ec
  40742f:	out    dx,eax
  407430:	mov    bh,BYTE PTR [edx]
  407432:	lock or eax,0x9738d2c0
  407438:	idiv   BYTE PTR [esi+0x77769965]
  40743e:	sub    DWORD PTR [edi+0x23fb5a75],0xb3b456e7
  407448:	dec    esp
  407449:	push   esp
  40744a:	jecxz  0x407481
  40744c:	add    eax,0x12daeca9
  407451:	cmp    DWORD PTR ds:0xd2792bfc,ecx
  407457:	push   cs
  407458:	adc    al,0xc7
  40745a:	out    0x8,al
  40745c:	stos   BYTE PTR es:[edi],al
  40745d:	inc    eax
  40745e:	aad    0xed
  407460:	xor    eax,0x6b45fa00
  407465:	int3   
  407466:	jne    0x4074c1
  407468:	pop    ss
  407469:	xchg   edx,eax
  40746a:	pop    edx
  40746b:	sbb    DWORD PTR [edi],ebp
  40746d:	sbb    bh,cl
  40746f:	sbb    ch,0xb9
  407472:	mov    cl,0xb8
  407474:	xlat   BYTE PTR ds:[ebx]
  407475:	shl    DWORD PTR [esi-0x1b83ec75],0xa4
  40747c:	xchg   edx,eax
  40747d:	pushf  
  40747e:	add    ch,0xe3
  407481:	sub    eax,0x501b794b
  407486:	icebp  
  407487:	out    dx,eax
  407488:	lds    edi,FWORD PTR [ebp+0x8]
  40748b:	dec    esp
  40748c:	clc    
  40748d:	jl     0x407503
  40748f:	or     eax,0x7c58fd1c
  407494:	sbb    cl,BYTE PTR [eax-0x6d733ba3]
  40749a:	in     al,0xed
  40749c:	mov    al,ds:0x1b30f7d9
  4074a1:	wbinvd 
  4074a3:	cmp    ah,BYTE PTR [eax]
  4074a5:	xor    eax,0x973b36ad
  4074aa:	push   0xa
  4074ac:	es sar cl,1
  4074af:	push   eax
  4074b0:	and    al,0xac
  4074b2:	aad    0x89
  4074b4:	mov    ebp,0x31ccbf47
  4074b9:	dec    eax
  4074ba:	retf   
  4074bb:	mov    dh,0xd3
  4074bd:	aaa    
  4074be:	sub    ebx,ecx
  4074c0:	adc    al,0xf0
  4074c2:	cmp    al,0xe7
  4074c4:	stc    
  4074c5:	cmc    
  4074c6:	push   edx
  4074c7:	call   0x71dc:0xb175dd7e
  4074ce:	mov    dh,cl
  4074d0:	push   0xc43eb254
  4074d5:	jge    0x40752f
  4074d7:	pop    ss
  4074d8:	fs pop es
  4074da:	mov    eax,ds:0x50aed91
  4074df:	push   ss
  4074e0:	jb     0x40752e
  4074e2:	rcr    BYTE PTR [ecx+0x7d],0x45
  4074e6:	fs jno 0x4074fc
  4074e9:	add    ch,BYTE PTR [ebx]
  4074eb:	xchg   ebp,eax
  4074ec:	lock stos DWORD PTR es:[edi],eax
  4074ee:	sub    eax,0x1a01ec85
  4074f3:	push   es
  4074f4:	xchg   ecx,eax
  4074f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074f6:	fs (bad) 
  4074f8:	loopne 0x407566
  4074fa:	jle    0x40748e
  4074fc:	pop    ecx
  4074fd:	sbb    al,BYTE PTR [ebp-0x4a0f756c]
  407503:	pusha  
  407504:	imul   edx,DWORD PTR [esi],0x71
  407507:	(bad)  
  407508:	addr16 or eax,0xa85d66
  40750e:	xchg   edi,eax
  40750f:	pop    ecx
  407510:	pop    edi
  407511:	sub    DWORD PTR ds:0x58065eeb,0x6f
  407518:	mov    esi,0xb3cc65cc
  40751d:	and    esi,DWORD PTR [ecx-0x1e56575f]
  407523:	mov    edi,ecx
  407525:	inc    edx
  407526:	sbb    eax,0x1a4a5475
  40752b:	inc    ecx
  40752c:	xchg   ecx,eax
  40752d:	test   al,0xc8
  40752f:	and    al,0x62
  407531:	jb     0x40758d
  407533:	xor    BYTE PTR [edi+0x4bb38fc6],cl
  407539:	enter  0xee78,0xe0
  40753d:	sub    edx,DWORD PTR [edi+edx*2+0x4ec5ff7b]
  407544:	out    0xc3,al
  407546:	mov    ch,0x9d
  407548:	dec    edi
  407549:	or     al,0xc4
  40754b:	adc    DWORD PTR [eax],esp
  40754d:	add    eax,0x9692b189
  407552:	jo     0x4075d0
  407554:	mov    al,0xb7
  407556:	mov    edx,0xa2223ccb
  40755b:	and    DWORD PTR [ecx+eax*2-0x6c],ebx
  40755f:	mov    bh,BYTE PTR [edx+0x36]
  407562:	xor    ch,BYTE PTR [edi+0xe713c8c]
  407568:	mov    dh,BYTE PTR [edi]
  40756a:	int3   
  40756b:	call   0x74cfc96b
  407570:	bound  edi,QWORD PTR [ebx+0x24eb3865]
  407576:	fbld   TBYTE PTR [ebp+0x75]
  407579:	sti    
  40757a:	xor    BYTE PTR [edx],bl
  40757c:	out    0x2,eax
  40757e:	outs   dx,DWORD PTR ds:[esi]
  40757f:	sbb    eax,0xc1d525c0
  407584:	or     BYTE PTR [ecx+0x487cec43],bh
  40758a:	xchg   edx,edi
  40758c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40758d:	imul   esp,DWORD PTR [esp+ebx*2+0x31],0xc10131cb
  407595:	es mov dh,0x1a
  407598:	mov    bl,0xb8
  40759a:	jmp    0xa99:0xff0ec5d6
  4075a1:	fs loop 0x40752a
  4075a4:	jmp    FWORD PTR [eax-0x34]
  4075a7:	push   ebx
  4075a8:	dec    eax
  4075a9:	push   cs
  4075aa:	xor    eax,0xefdf2913
  4075af:	sbb    BYTE PTR [eax+0x7cf5bd],ah
  4075b5:	(bad)  
  4075b6:	or     BYTE PTR [ebp+0x3b9bfa76],bh
  4075bc:	rcl    edi,1
  4075be:	push   ebp
  4075bf:	sbb    ebx,DWORD PTR [esi]
  4075c1:	xchg   ebx,eax
  4075c2:	or     DWORD PTR [esi],0x30a73c6
  4075c8:	aad    0x83
  4075ca:	sar    DWORD PTR [edx-0x33],0xe1
  4075ce:	push   edx
  4075cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075d0:	cmp    cl,BYTE PTR [eax-0x8ae9731]
  4075d6:	test   BYTE PTR [ebx],dl
  4075d8:	lea    eax,[edi-0x3a]
  4075db:	lea    ecx,[eax]
  4075dd:	nop
  4075de:	jns    0x407633
  4075e0:	dec    ebx
  4075e1:	adc    ah,BYTE PTR [ebx+0xf]
  4075e4:	or     al,0xc4
  4075e6:	icebp  
  4075e7:	or     cl,ch
  4075e9:	mov    BYTE PTR [edi+0x71],cl
  4075ec:	adc    ah,BYTE PTR [esi]
  4075ee:	mov    edi,0xce23f8ef
  4075f3:	outs   dx,BYTE PTR ds:[esi]
  4075f4:	stc    
  4075f5:	pop    esp
  4075f6:	xchg   edx,eax
  4075f7:	daa    
  4075f8:	mov    al,0xcb
  4075fa:	cld    
  4075fb:	in     al,0x34
  4075fd:	jmp    0xa7f29e7
  407602:	mov    ebp,0x43229faa
  407607:	sar    BYTE PTR [eax+eiz*1],1
  40760a:	out    0x8e,al
  40760c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40760d:	and    edx,edi
  40760f:	dec    esp
  407610:	xchg   ebp,eax
  407611:	sbb    bl,BYTE PTR [esi-0x1]
  407614:	pop    ecx
  407616:	idiv   BYTE PTR [edi]
  407618:	mov    al,0xab
  40761a:	push   ds
  40761b:	sub    eax,0x4a989fe7
  407620:	add    eax,0x30287fa
  407625:	pop    eax
  407626:	pop    esp
  407627:	(bad)  
  407629:	inc    ebp
  40762a:	fwait
  40762b:	sbb    DWORD PTR [esi-0x52],edi
  40762e:	xchg   DWORD PTR [edi],edx
  407630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407631:	adc    eax,0x315d5013
  407636:	loopne 0x4076ad
  407638:	lods   eax,DWORD PTR ds:[esi]
  407639:	in     al,dx
  40763a:	pop    esp
  40763b:	scas   eax,DWORD PTR es:[edi]
  40763c:	enter  0xfe59,0xa2
  407640:	mov    ds:0x8f20b7c5,eax
  407645:	and    ecx,DWORD PTR [edi-0x283b9309]
  40764b:	int    0x70
  40764d:	bound  esp,QWORD PTR [edx+ecx*1-0x5f]
  407651:	mov    al,ds:0x7aef209c
  407656:	ss adc al,0x23
  407659:	mov    ecx,DWORD PTR [edx-0x6c]
  40765c:	aaa    
  40765d:	push   ecx
  40765e:	inc    DWORD PTR [edx+esi*2]
  407661:	pusha  
  407662:	pop    edx
  407663:	repnz hlt 
  407665:	or     eax,0x2f504413
  40766a:	mov    eax,ds:0x58009484
  40766f:	out    0x47,eax
  407671:	sub    dh,bl
  407673:	dec    ebx
  407674:	in     al,0xbb
  407676:	pop    ds
  407677:	ins    BYTE PTR es:[edi],dx
  407678:	cmp    edx,DWORD PTR [edx+esi*8-0x182f65e0]
  40767f:	stos   DWORD PTR es:[edi],eax
  407680:	jge    0x4076ce
  407682:	jbe    0x4076bd
  407684:	and    DWORD PTR [ebx],ebx
  407686:	xlat   BYTE PTR ds:[ebx]
  407687:	int    0x19
  407689:	cwde   
  40768a:	int    0x8
  40768c:	mov    bl,BYTE PTR [eax-0x41448414]
  407692:	or     eax,0x1ec48f70
  407697:	add    ch,BYTE PTR [esi]
  407699:	dec    ebp
  40769a:	sahf   
  40769b:	push   es
  40769c:	popf   
  40769d:	sub    esp,DWORD PTR [bx-0x7f4f]
  4076a2:	shr    ecx,cl
  4076a4:	mov    esi,0x50ee745d
  4076a9:	out    dx,eax
  4076aa:	test   al,0x2
  4076ac:	dec    eax
  4076ad:	xchg   ecx,eax
  4076ae:	xor    al,0xcf
  4076b0:	in     al,dx
  4076b1:	mov    ah,0xbe
  4076b3:	nop
  4076b4:	out    0x4e,eax
  4076b6:	mov    ecx,DWORD PTR [edx]
  4076b8:	fidiv  WORD PTR [edi+0x38]
  4076bb:	or     BYTE PTR ds:0x4ec62554,0x11
  4076c2:	sbb    bl,dh
  4076c4:	or     al,0xdf
  4076c6:	inc    ecx
  4076c7:	add    edi,DWORD PTR [ecx+0x8]
  4076ca:	cmc    
  4076cb:	fs sti 
  4076cd:	or     al,0xb6
  4076cf:	mov    eax,ds:0xde547877
  4076d4:	std    
  4076d5:	inc    edx
  4076d6:	mov    dh,0xf0
  4076d8:	imul   bl
  4076da:	mov    edx,0x6aa8102a
  4076df:	lods   al,BYTE PTR ds:[esi]
  4076e0:	test   BYTE PTR [ebp-0x6],bh
  4076e3:	jge    0x4076a5
  4076e5:	pop    es
  4076e6:	push   0x7
  4076e8:	ins    BYTE PTR es:[edi],dx
  4076e9:	dec    edi
  4076ea:	push   ebx
  4076eb:	mov    ebp,0xd87b241d
  4076f0:	inc    esp
  4076f1:	pop    esp
  4076f2:	in     eax,0x5c
  4076f4:	icebp  
  4076f5:	retf   0x943a
  4076f8:	push   ecx
  4076f9:	std    
  4076fa:	or     BYTE PTR [esi-0x7f],bl
  4076fd:	int3   
  4076fe:	jmp    0xdb7258b4
  407703:	dec    ecx
  407704:	mov    ch,0x56
  407706:	mov    cl,0x3e
  407708:	mov    BYTE PTR [edi],dl
  40770a:	das    
  40770b:	mov    dl,0xc7
  40770d:	popf   
  40770e:	dec    edi
  40770f:	ins    BYTE PTR es:[edi],dx
  407710:	push   ebx
  407711:	jnp    0x407753
  407713:	out    0x8a,al
  407715:	sub    eax,0x8ca615d7
  40771a:	test   al,0xc5
  40771c:	lahf   
  40771d:	mov    ebx,0xba9c9645
  407722:	call   0x5cf90126
  407727:	(bad)  
  407728:	retf   0x1d53
  40772b:	mov    esi,DWORD PTR [edx-0x619a0003]
  407731:	test   DWORD PTR [ebx-0x2b],eax
  407734:	ror    BYTE PTR [ebp-0x223a7906],cl
  40773a:	mov    ds:0x34108f33,al
  40773f:	cwde   
  407740:	in     eax,0x5e
  407742:	adc    edi,DWORD PTR [ebx-0x14]
  407745:	inc    BYTE PTR [edi]
  407747:	sar    edi,0xd4
  40774a:	das    
  40774b:	aaa    
  40774c:	lahf   
  40774d:	sub    esi,DWORD PTR [ecx+ebp*8]
  407750:	jo     0x40779c
  407752:	inc    esi
  407753:	xchg   esi,eax
  407754:	jp     0x40779b
  407756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407757:	mov    edi,0xf98a5603
  40775c:	dec    esi
  40775d:	mov    edi,0xd23f028c
  407762:	dec    edi
  407763:	or     DWORD PTR [edx],0x77f4bd12
  407769:	mov    ch,0xd5
  40776b:	(bad)  
  40776d:	jle    0x40773d
  40776f:	call   0x36b55d13
  407774:	mov    DWORD PTR [ecx-0x64],esi
  407777:	push   0x5c
  407779:	sbb    eax,0x4dd7f47
  40777e:	in     al,0x9e
  407780:	retf   
  407781:	adc    al,0xc4
  407783:	popf   
  407784:	in     eax,dx
  407785:	add    bl,BYTE PTR [eax-0x6c]
  407788:	rdpmc  
  40778a:	cs das 
  40778c:	cmp    edi,ebx
  40778e:	pop    eax
  40778f:	pop    ss
  407790:	cmp    BYTE PTR [esi],ah
  407792:	mov    bh,0xff
  407794:	dec    ebp
  407795:	xor    ch,BYTE PTR [ebp+0x35]
  407798:	and    eax,0xb17debe3
  40779d:	inc    eax
  40779e:	cmp    eax,0x85a784f0
  4077a3:	cmp    al,0x18
  4077a5:	mov    dl,0x67
  4077a7:	std    
  4077a8:	jo     0x4077f3
  4077aa:	push   esp
  4077ab:	lods   al,BYTE PTR ds:[esi]
  4077ac:	js     0x4077e0
  4077ae:	lahf   
  4077af:	nop
  4077b0:	clc    
  4077b1:	or     BYTE PTR [edi],ch
  4077b3:	outs   dx,DWORD PTR ds:[esi]
  4077b4:	cmp    DWORD PTR [ecx-0x21],0xffffffb0
  4077b8:	stos   DWORD PTR es:[edi],eax
  4077b9:	inc    edx
  4077ba:	inc    ebp
  4077bb:	sbb    eax,0xa022f4e
  4077c0:	adc    BYTE PTR [edi],cl
  4077c2:	test   BYTE PTR [edi-0x7cdd037b],dl
  4077c8:	ins    BYTE PTR es:[edi],dx
  4077c9:	pop    esi
  4077ca:	fld    DWORD PTR [edi]
  4077cc:	mov    bh,0xee
  4077ce:	jne    0x40776e
  4077d0:	add    ecx,DWORD PTR [ebx-0x5b]
  4077d3:	mov    eax,cs
  4077d5:	jl     0x4077ed
  4077d7:	jp     0x4077ac
  4077d9:	fbld   TBYTE PTR [eax-0x6]
  4077dc:	js     0x40783e
  4077de:	push   esp
  4077df:	add    DWORD PTR [ebx],esi
  4077e1:	lds    edx,FWORD PTR [edi]
  4077e3:	adc    esp,eax
  4077e5:	leave  
  4077e6:	(bad)  
  4077e7:	push   ss
  4077e8:	dec    esp
  4077e9:	mov    ds,esp
  4077eb:	cli    
  4077ec:	dec    ebx
  4077ed:	stos   BYTE PTR es:[edi],al
  4077ee:	outs   dx,BYTE PTR ds:[esi]
  4077ef:	fdiv   st(1),st
  4077f1:	adc    esp,DWORD PTR [edx+0x61]
  4077f4:	sbb    eax,0x76398fbc
  4077f9:	xchg   BYTE PTR [edx],al
  4077fb:	inc    edi
  4077fc:	push   edi
  4077fd:	jae    0x40780b
  4077ff:	outs   dx,DWORD PTR ds:[esi]
  407800:	fistp  QWORD PTR [ebx]
  407802:	xchg   BYTE PTR [eax+0x2b],bl
  407805:	stos   DWORD PTR es:[edi],eax
  407806:	xchg   esi,eax
  407807:	sub    esi,0x5f19f44d
  40780d:	addr16 xchg esi,eax
  40780f:	fwait
  407810:	lods   eax,DWORD PTR ds:[esi]
  407811:	fisttp QWORD PTR [ecx+0x51]
  407814:	stos   BYTE PTR es:[edi],al
  407815:	(bad)  
  407816:	jmp    0x407838
  407818:	das    
  407819:	jno    0x407869
  40781b:	xor    dh,bh
  40781d:	or     al,dh
  40781f:	sahf   
  407820:	adc    dl,BYTE PTR [ecx+0x7bae4a40]
  407826:	xor    al,BYTE PTR [ecx-0x80]
  407829:	jo     0x407881
  40782b:	aad    0x84
  40782d:	xchg   edx,eax
  40782e:	mov    DWORD PTR [ebx+0x67f8f43f],ecx
  407834:	add    al,dl
  407836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407837:	jnp    0x407897
  407839:	shr    cl,cl
  40783b:	or     BYTE PTR [eax],bl
  40783d:	inc    eax
  40783e:	mov    WORD PTR [ecx+eax*1],es
  407841:	cmp    ebx,ebx
  407843:	sti    
  407844:	xchg   ecx,eax
  407845:	dec    ecx
  407846:	adc    DWORD PTR [edx-0x76],esp
  407849:	out    0xb8,al
  40784b:	nop
  40784c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40784d:	pop    ss
  40784e:	jae    0x4077d8
  407850:	mov    esp,0x2e1268db
  407855:	outs   dx,DWORD PTR ds:[esi]
  407856:	inc    esi
  407857:	dec    ebp
  407858:	clc    
  407859:	lea    ecx,[eax]
  40785b:	dec    ebx
  40785c:	test   BYTE PTR [edi+edi*2-0xc],cl
  407860:	ret    0x21
  407863:	cmp    al,0x9
  407865:	pop    esi
  407866:	leave  
  407867:	cli    
  407868:	sbb    bl,BYTE PTR [edx-0x6f]
  40786b:	sub    al,0x39
  40786d:	push   es
  40786e:	sbb    ebp,edi
  407870:	enter  0xba66,0xe0
  407874:	pusha  
  407875:	test   eax,0xe557ae9d
  40787a:	test   ebp,eax
  40787c:	xor    BYTE PTR [ebx+ecx*1+0x37],0x28
  407881:	dec    ecx
  407882:	call   0x11a4:0x2915fc0
  407889:	fadd   QWORD PTR [ebx]
  40788b:	cmp    edx,ebx
  40788d:	retf   
  40788e:	pop    ss
  40788f:	inc    BYTE PTR [ecx]
  407891:	jae    0x4078a3
  407893:	and    esp,esi
  407895:	sbb    al,0x15
  407897:	sub    cl,BYTE PTR [ebp+0x29520b35]
  40789d:	or     eax,DWORD PTR [edi]
  40789f:	dec    esp
  4078a0:	jo     0x407874
  4078a2:	dec    ebp
  4078a3:	repnz mov bh,0xaa
  4078a6:	int3   
  4078a7:	dec    esi
  4078a8:	lods   eax,DWORD PTR ds:[esi]
  4078a9:	gs cwde 
  4078ab:	mov    bl,0x79
  4078ad:	loope  0x4078a5
  4078af:	mov    ecx,DWORD PTR [edi+0x7]
  4078b2:	pop    ecx
  4078b3:	dec    ecx
  4078b4:	cmc    
  4078b5:	(bad)  
  4078b6:	push   ds
  4078b7:	mov    al,0x2b
  4078b9:	adc    DWORD PTR [edi],0x67
  4078bc:	daa    
  4078bd:	xchg   esi,ecx
  4078bf:	cli    
  4078c0:	icebp  
  4078c1:	jl     0x40791d
  4078c3:	xchg   esi,eax
  4078c4:	xlat   BYTE PTR ds:[ebx]
  4078c5:	aas    
  4078c6:	(bad)  
  4078c7:	in     eax,dx
  4078c8:	jae    0x40784c
  4078ca:	cmp    edx,edi
  4078cc:	std    
  4078cd:	adc    eax,0xb756d46c
  4078d2:	sub    al,0x4
  4078d4:	rol    DWORD PTR [ecx],1
  4078d6:	or     al,0xe4
  4078d8:	lds    ebx,FWORD PTR [edx]
  4078da:	pop    ebx
  4078db:	or     al,0xc6
  4078dd:	aam    0x7
  4078df:	jbe    0x407864
  4078e1:	into   
  4078e2:	lods   al,BYTE PTR ds:[esi]
  4078e3:	lahf   
  4078e4:	sti    
  4078e5:	(bad)  
  4078e6:	jecxz  0x407872
  4078e8:	sub    ecx,edi
  4078ea:	scas   al,BYTE PTR es:[edi]
  4078eb:	xor    BYTE PTR [edi],0xb3
  4078ee:	fld    QWORD PTR [esi-0x29]
  4078f1:	stos   BYTE PTR es:[edi],al
  4078f2:	sub    BYTE PTR [esi+0x22208fb4],cl
  4078f8:	mov    DWORD PTR [eax+0x292d3722],ebx
  4078fe:	xchg   edi,eax
  4078ff:	(bad)  
  407900:	fwait
  407901:	xchg   ebp,eax
  407902:	std    
  407903:	push   esi
  407904:	rcr    al,cl
  407906:	push   ds
  407907:	sub    eax,0xd2273008
  40790c:	mov    edi,0x51bc6211
  407911:	push   cs
  407912:	fs int 0x6c
  407915:	jl     0x4078e7
  407917:	repz sbb bl,dh
  40791a:	mov    ds:0xb055a025,ax
  407920:	adc    al,0xc7
  407922:	add    eax,0xcb5b8aef
  407927:	xchg   ecx,eax
  407928:	mov    WORD PTR [esi-0x4e],cs
  40792b:	test   BYTE PTR [edx],bl
  40792d:	test   eax,0xe0075f2d
  407932:	dec    esp
  407933:	popf   
  407934:	int    0x7d
  407936:	add    bl,bh
  407938:	iret   
  407939:	mov    DWORD PTR [esi],ecx
  40793b:	xchg   edi,eax
  40793c:	(bad)  
  40793d:	iret   
  40793e:	jno    0x40790c
  407940:	lds    edx,FWORD PTR [esi+0x49a5cad7]
  407946:	stos   BYTE PTR es:[edi],al
  407947:	mov    ch,0x56
  407949:	xchg   esi,eax
  40794a:	jge    0x40799d
  40794c:	cmp    bl,BYTE PTR [ebx-0x778efe18]
  407952:	inc    esp
  407953:	push   0x96c9e144
  407958:	(bad)  [si-0x6398]
  40795d:	push   es
  40795e:	xor    cl,BYTE PTR [edi]
  407960:	dec    edi
  407961:	jmp    0x74562107
  407966:	push   ss
  407967:	pop    edx
  407968:	sar    DWORD PTR [edi-0x5a59b1b3],0xf6
  40796f:	mov    BYTE PTR [esi+0xa2358ad],dl
  407975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407976:	mov    ebp,edx
  407978:	mov    esp,0xbeaf57f7
  40797d:	dec    ecx
  40797e:	xor    edx,DWORD PTR [edi+ebp*2-0x50712346]
  407985:	mov    al,ds:0x2b5740c6
  40798a:	mov    ah,cl
  40798c:	push   ebx
  40798d:	enter  0x5944,0x6b
  407991:	dec    ebp
  407992:	cs push eax
  407994:	ret    0xab60
  407997:	pop    ds
  407998:	pop    ecx
  407999:	jo     0x4079c3
  40799b:	pop    esp
  40799c:	cwde   
  40799d:	sahf   
  40799e:	and    ah,BYTE PTR [eax+edx*1+0x2a]
  4079a2:	lahf   
  4079a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079a4:	mov    bh,0x9d
  4079a6:	(bad)  
  4079a8:	jno    0x4079a0
  4079aa:	das    
  4079ab:	inc    esi
  4079ac:	aam    0x33
  4079ae:	out    dx,al
  4079af:	xchg   esi,eax
  4079b0:	xchg   esp,eax
  4079b1:	inc    ebp
  4079b2:	fcmovb st,st(0)
  4079b4:	fist   WORD PTR [esp+edi*1+0x43]
  4079b8:	jnp    0x407958
  4079ba:	xor    DWORD PTR [esp+esi*8+0x5f],ebx
  4079be:	sbb    esi,eax
  4079c0:	mov    cl,0x32
  4079c2:	inc    eax
  4079c3:	jge    0x407a19
  4079c5:	mov    al,0xc
  4079c7:	test   eax,0x2c58cad6
  4079cc:	or     BYTE PTR [esi-0x3f],ah
  4079cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079d0:	sub    DWORD PTR [ebx-0x66539b6f],edi
  4079d6:	hlt    
  4079d7:	mov    bh,0x5b
  4079d9:	cmp    eax,0x43dc8ef8
  4079de:	(bad)  
  4079df:	xor    eax,0xff165496
  4079e4:	pop    eax
  4079e5:	mov    ebp,0x7b8587d8
  4079ea:	(bad)  
  4079eb:	int    0x87
  4079ed:	mov    gs,WORD PTR [edi+0x25b09071]
  4079f3:	loope  0x407a12
  4079f5:	add    bh,BYTE PTR [edi+0xcdda920]
  4079fb:	lea    ebx,[edx]
  4079fd:	call   0x16f5:0xd6ed89c3
  407a04:	cmp    al,0xa1
  407a06:	push   eax
  407a07:	test   eax,0x44a2ac30
  407a0c:	or     DWORD PTR [edi+0x3ae97c4],ebp
  407a12:	xchg   ebp,eax
  407a13:	jg     0x407a58
  407a15:	cmc    
  407a16:	ins    BYTE PTR es:[edi],dx
  407a17:	xchg   edx,eax
  407a18:	mov    al,0x46
  407a1a:	and    DWORD PTR [esi],0x29
  407a1d:	mov    bl,0x3d
  407a1f:	sbb    ebx,DWORD PTR [eax-0x38]
  407a22:	daa    
  407a23:	cli    
  407a24:	mov    edi,?
  407a26:	xor    DWORD PTR [edi+0xb743c8c],0x8dc1a998
  407a30:	push   DWORD PTR [ecx+0x2cf4a1f2]
  407a36:	xchg   ecx,eax
  407a37:	repz push 0x66
  407a3a:	xor    ch,BYTE PTR [ebx+ecx*1+0x3]
  407a3e:	xor    al,0x96
  407a40:	sbb    DWORD PTR [edi-0x3],ecx
  407a43:	nop
  407a44:	(bad)  
  407a45:	out    dx,eax
  407a46:	out    0x7e,al
  407a48:	sub    bh,BYTE PTR [ecx-0x38]
  407a4b:	inc    esi
  407a4c:	cmp    ebp,eax
  407a4e:	cwde   
  407a4f:	scas   al,BYTE PTR es:[edi]
  407a50:	aas    
  407a51:	xchg   esp,eax
  407a52:	adc    esi,eax
  407a54:	cld    
  407a55:	mov    cl,0x36
  407a57:	cmp    BYTE PTR ds:0xbe8c169c,al
  407a5d:	and    al,BYTE PTR [esi+ebx*4-0x42]
  407a61:	out    dx,al
  407a62:	mov    ecx,0x2df796f6
  407a67:	mov    ch,0xc8
  407a69:	xor    DWORD PTR [ebx-0x5d],esi
  407a6c:	mov    eax,ds:0xb7227739
  407a71:	nop
  407a72:	and    esp,DWORD PTR [ebx+ecx*4+0x20]
  407a76:	fucomi st,st(6)
  407a78:	push   ebx
  407a79:	xchg   DWORD PTR [eax-0x487071f1],esi
  407a7f:	sahf   
  407a80:	repnz mov ds:0x42246fbc,al
  407a86:	pop    ecx
  407a87:	mov    WORD PTR [esi+0x37639065],gs
  407a8d:	push   edi
  407a8e:	pushf  
  407a8f:	fbld   TBYTE PTR ds:[ebx-0x50f269d8]
  407a96:	mov    dh,0x8a
  407a98:	addr16 mov dh,0x84
  407a9b:	pop    ecx
  407a9c:	mov    BYTE PTR [ecx+0x55c4f32e],ah
  407aa2:	dec    edi
  407aa3:	mov    dh,dl
  407aa5:	(bad)  
  407aa6:	xlat   BYTE PTR ds:[ebx]
  407aa7:	dec    edx
  407aa8:	jmp    0x553e:0x2f356026
  407aaf:	(bad)  
  407ab0:	andps  xmm3,XMMWORD PTR [edx+ebp*4-0x48]
  407ab5:	sbb    esi,ebp
  407ab7:	xor    al,0x39
  407ab9:	lods   al,BYTE PTR ds:[esi]
  407aba:	fstp   DWORD PTR [eax]
  407abc:	adc    eax,0x6abc4afc
  407ac1:	aaa    
  407ac2:	push   edi
  407ac3:	cdq    
  407ac4:	mov    ebx,0xb4417fa3
  407ac9:	ficomp DWORD PTR [edi+0x6c63bba3]
  407acf:	inc    eax
  407ad0:	mov    dl,0xdb
  407ad2:	mov    bl,0xd7
  407ad4:	xchg   BYTE PTR [eax],al
  407ad6:	out    dx,eax
  407ad7:	popf   
  407ad8:	outs   dx,BYTE PTR ds:[esi]
  407ad9:	leave  
  407ada:	inc    ebx
  407adb:	repz adc al,0x70
  407ade:	pop    esp
  407adf:	fmul   DWORD PTR [ecx+ecx*8-0x1adce464]
  407ae6:	and    ebp,DWORD PTR [ebp-0x22]
  407ae9:	mov    ds:0x69b1e452,al
  407aee:	stos   BYTE PTR es:[edi],al
  407aef:	(bad)  
  407af1:	push   esp
  407af2:	add    eax,0xce62d61c
  407af7:	fcom   QWORD PTR [esi+0x64167edb]
  407afd:	lea    edi,[esi-0x5f125279]
  407b03:	inc    esp
  407b04:	aaa    
  407b05:	stos   DWORD PTR es:[edi],eax
  407b06:	add    eax,0x1795e168
  407b0b:	hlt    
  407b0c:	les    eax,FWORD PTR [edx-0x1198494c]
  407b12:	mov    BYTE PTR [ecx-0x3e],dh
  407b15:	push   cs
  407b16:	inc    esi
  407b17:	dec    edi
  407b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b19:	cmc    
  407b1a:	stos   DWORD PTR es:[edi],eax
  407b1b:	mov    WORD PTR [esi-0x19],?
  407b1e:	inc    esi
  407b1f:	outs   dx,DWORD PTR ds:[esi]
  407b20:	sub    al,0x57
  407b22:	sub    al,0xad
  407b24:	pop    es
  407b25:	scas   eax,DWORD PTR es:[edi]
  407b26:	ins    BYTE PTR es:[edi],dx
  407b27:	pusha  
  407b28:	daa    
  407b29:	xchg   ecx,eax
  407b2a:	mov    BYTE PTR [ebx],cl
  407b2c:	mov    bh,0x60
  407b2e:	outs   dx,DWORD PTR ds:[esi]
  407b2f:	(bad)  
  407b30:	jg     0x407b3b
  407b32:	jmp    0x42020a2f
  407b37:	call   0xe3aaf8cc
  407b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b3d:	xor    edi,ecx
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x3ea170e0
  407e5b:	aad    0x90
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	or     dl,0x84
  407e68:	jnp    0x407e9a
  407e6a:	mov    ds:0x253b76ee,al
  407e6f:	scas   eax,DWORD PTR es:[edi]
  407e70:	cwde   
  407e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e72:	loop   0x407eda
  407e74:	neg    BYTE PTR [edi-0x66e96fbb]
  407e7a:	mov    eax,0x4c3032e8
  407e7f:	sbb    eax,0x9b53be19
  407e84:	dec    ebp
  407e85:	mov    al,0x43
  407e87:	aaa    
  407e88:	cmp    ebp,edi
  407e8a:	cli    
  407e8b:	adc    eax,0x60b69332
  407e90:	adc    dl,BYTE PTR [ebx]
  407e92:	(bad)  
  407e94:	xchg   edi,eax
  407e95:	rcl    DWORD PTR [eax-0x43],0xe1
  407e99:	xchg   edx,eax
  407e9a:	addr16 lahf 
  407e9c:	pushf  
  407e9d:	xor    BYTE PTR [ecx],cl
  407e9f:	cmc    
  407ea0:	push   ss
  407ea1:	loopne 0x407f1d
  407ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ea4:	shr    BYTE PTR [eax+eax*4],0xf3
  407ea8:	jmp    0x7d27:0xd7990725
  407eaf:	in     al,0x1b
  407eb1:	sub    DWORD PTR [ebp+0x7f6a506a],ebp
  407eb7:	push   cs
  407eb8:	popf   
  407eb9:	ds sahf 
  407ebb:	cmp    BYTE PTR [ecx-0x4e0afd13],cl
  407ec1:	or     al,0x40
  407ec3:	cmp    ch,0x45
  407ec6:	jmp    0xcbd0610c
  407ecb:	jns    0x407ee8
  407ecd:	mov    eax,0x3b363f9f
  407ed2:	push   cs
  407ed3:	inc    esp
  407ed4:	ret    
  407ed5:	call   0xb132801c
  407eda:	mov    esp,0x88837cf0
  407edf:	mov    ebp,0xb5e04ca6
  407ee4:	mov    ebx,0x3ea0b393
  407ee9:	hlt    
  407eea:	ficomp WORD PTR [esi]
  407eec:	pop    edx
  407eed:	sbb    al,0xff
  407eef:	out    0xb1,al
  407ef1:	shl    cl,0x4
  407ef4:	std    
  407ef5:	lahf   
  407ef6:	imul   ecx,DWORD PTR [ebp+ecx*8-0x5],0xffffffca
  407efb:	pop    ebx
  407efc:	dec    ebp
  407efd:	mov    cl,0x35
  407eff:	cmp    BYTE PTR [edi],0x47
  407f02:	call   0x93d8:0x65aa3b24
  407f09:	pop    ds
  407f0a:	test   al,0xcc
  407f0c:	mov    al,ds:0xc081cccb
  407f11:	mov    ch,0xdb
  407f13:	inc    edi
  407f14:	push   eax
  407f15:	mov    al,ds:0x4d80853d
  407f1a:	or     ch,BYTE PTR [edi]
  407f1c:	dec    edi
  407f1d:	lahf   
  407f1e:	out    0xc3,eax
  407f20:	data16 add bh,BYTE PTR [edi]
  407f23:	mov    ds:0x59d539b1,eax
  407f28:	push   ss
  407f29:	xor    ebx,ebx
  407f2b:	jmp    0x67b2b4ad
  407f30:	xchg   DWORD PTR [edi+0x21ed2704],ebp
  407f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f37:	icebp  
  407f38:	push   ebx
  407f39:	add    eax,0x4f00d7e0
  407f3e:	jle    0x407f44
  407f40:	daa    
  407f41:	aam    0x71
  407f43:	push   ss
  407f44:	mov    es,ebx
  407f46:	cs push ds
  407f48:	xor    al,0xcf
  407f4a:	lods   al,BYTE PTR ds:[esi]
  407f4b:	sbb    BYTE PTR [ebp+eax*4+0x34],dh
  407f4f:	lds    eax,FWORD PTR [eax+0x48]
  407f52:	dec    edi
  407f53:	test   ecx,esp
  407f55:	lods   al,BYTE PTR ds:[esi]
  407f56:	add    al,0xb7
  407f58:	xchg   ebx,eax
  407f59:	sub    esp,DWORD PTR [ebp-0x22e2e1be]
  407f5f:	test   BYTE PTR [edx+0x38cd9ddd],0xa
  407f66:	or     eax,0x7b5205a3
  407f6b:	icebp  
  407f6c:	push   edx
  407f6d:	repnz (bad) 
  407f6f:	out    dx,eax
  407f70:	pop    ebp
  407f71:	out    dx,eax
  407f72:	lods   eax,DWORD PTR ds:[esi]
  407f73:	jge    0x407f4e
  407f75:	push   edi
  407f76:	stos   BYTE PTR es:[edi],al
  407f77:	jg     0x407f67
  407f79:	pop    ds
  407f7a:	jo     0x407fa5
  407f7c:	fwait
  407f7d:	call   DWORD PTR [ecx+0x3b]
  407f80:	push   ds
  407f81:	push   edi
  407f82:	loopne 0x407f35
  407f84:	push   ecx
  407f85:	xchg   ch,bl
  407f87:	mov    esi,0x36dc4f0f
  407f8c:	arpl   si,bx
  407f8e:	shr    DWORD PTR [eax-0x49],cl
  407f91:	fs (bad) 
  407f93:	mov    eax,0x5764b5d1
  407f98:	push   ebp
  407f99:	and    eax,ecx
  407f9b:	pop    ss
  407f9c:	inc    eax
  407f9d:	rol    DWORD PTR [eax],cl
  407f9f:	adc    bp,WORD PTR [ebp+0x6b]
  407fa3:	add    DWORD PTR [edi+ecx*8-0x713dfffd],ecx
  407faa:	shr    ecx,1
  407fac:	lahf   
  407fad:	out    0x1c,eax
  407faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fb0:	imul   ecx,DWORD PTR [eax+0x59],0x79
  407fb4:	pusha  
  407fb5:	icebp  
  407fb6:	cmp    dl,BYTE PTR [eax]
  407fb8:	jmp    0x407f50
  407fba:	jno    0x407f61
  407fbc:	jg     0x407fd8
  407fbe:	mov    edx,0x68f9e3eb
  407fc3:	sar    BYTE PTR [edi+0x7d9a7133],0x2
  407fca:	dec    eax
  407fcb:	daa    
  407fcc:	cdq    
  407fcd:	call   0xa609d979
  407fd2:	cld    
  407fd3:	dec    ebx
  407fd4:	lahf   
  407fd5:	or     bh,BYTE PTR [ebx]
  407fd7:	lahf   
  407fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd9:	sbb    eax,0x84568b2d
  407fde:	in     al,dx
  407fdf:	push   edi
  407fe0:	fs jp  0x407fc6
  407fe3:	shr    BYTE PTR [ecx+ebp*2-0x46],cl
  407fe7:	mov    dl,al
  407fe9:	push   esi
  407fea:	or     DWORD PTR [eax-0x4b],esp
  407fed:	enter  0x1b17,0xea
  407ff1:	or     al,0x20
  407ff3:	test   DWORD PTR [eax+0x24],esp
  407ff6:	ins    DWORD PTR es:[edi],dx
  407ff7:	mov    ecx,0x5e4a9f4f
  407ffc:	ds and eax,0xd6b29629
  408002:	pop    esp
  408003:	push   ebx
  408004:	lea    edx,[di-0x26]
  408008:	shl    DWORD PTR [ecx-0x55],0x2
  40800c:	repnz les edi,FWORD PTR ss:[ebx-0x11]
  408011:	inc    esi
  408012:	(bad)  
  408013:	in     eax,0xfb
  408015:	sub    al,0xc6
  408017:	jns    0x407fb6
  408019:	mov    ds:0x54d01e07,eax
  40801e:	in     al,dx
  40801f:	aas    
  408020:	and    eax,0xb7fd8032
  408025:	push   cs
  408026:	mov    dh,dh
  408028:	pop    ebp
  408029:	cmc    
  40802a:	push   0x672dc18b
  40802f:	test   BYTE PTR [ebx],al
  408031:	test   eax,0x3e57a89a
  408036:	imul   esp,DWORD PTR [edx-0x5326a2eb],0x67
  40803d:	aad    0x60
  40803f:	mov    DWORD PTR [edx],eax
  408041:	sbb    BYTE PTR [edx-0x2cbbb524],cl
  408047:	pop    esp
  408048:	add    esi,DWORD PTR [ecx+0x69]
  40804b:	daa    
  40804c:	jns    0x408020
  40804e:	push   ebp
  40804f:	in     al,0xe2
  408051:	sbb    al,dl
  408053:	scas   eax,DWORD PTR es:[edi]
  408054:	xor    ecx,DWORD PTR [ecx]
  408056:	sub    edi,DWORD PTR [ebp+0xedd0ce2]
  40805c:	and    BYTE PTR [ebp-0x280da578],0x2f
  408063:	test   eax,0xa93e4f2f
  408068:	cld    
  408069:	fsubr  DWORD PTR [eax-0x2f5588fb]
  40806f:	mov    dh,0xd7
  408071:	inc    esi
  408072:	jbe    0x40805c
  408074:	inc    edx
  408075:	dec    ebp
  408076:	xchg   esp,eax
  408077:	xor    DWORD PTR [esi],ebp
  408079:	push   ebp
  40807a:	nop
  40807b:	sub    al,0x8f
  40807d:	add    edi,DWORD PTR [eax-0x68]
  408080:	loop   0x4080b0
  408082:	dec    ebp
  408083:	cld    
  408084:	dec    DWORD PTR [edi-0x6d6bc3fe]
  40808a:	xchg   ebp,eax
  40808b:	aam    0xb6
  40808d:	aad    0xa9
  40808f:	xor    al,bl
  408091:	mov    ebx,ss
  408093:	mov    ecx,0x334ec9fb
  408098:	push   eax
  408099:	inc    edx
  40809a:	mov    WORD PTR [esi+0x46354319],es
  4080a0:	mov    bh,0xac
  4080a2:	and    al,0xc
  4080a4:	mov    edi,0x858e5d4b
  4080a9:	add    DWORD PTR [ecx+esi*8+0x455250a0],edi
  4080b0:	mov    ds:0x41aba02f,eax
  4080b5:	push   edx
  4080b6:	out    dx,eax
  4080b7:	mov    ah,0xda
  4080b9:	imul   ecx,eax,0xf0bf9bbb
  4080bf:	call   0x3bb7:0x6a48b4b1
  4080c6:	mov    bh,0xb8
  4080c8:	in     al,0x6e
  4080ca:	(bad)  
  4080cb:	loope  0x4080a9
  4080cd:	clc    
  4080ce:	std    
  4080cf:	xchg   esi,edx
  4080d1:	popa   
  4080d2:	fld1   
  4080d4:	fldenvw [eax]
  4080d7:	dec    esi
  4080d8:	rcr    DWORD PTR [esi-0x3d2a312f],0x3c
  4080df:	(bad)  
  4080e0:	cmc    
  4080e1:	sub    dl,BYTE PTR [edi+esi*2]
  4080e4:	into   
  4080e5:	enter  0x8cfa,0x3d
  4080e9:	gs dec ebx
  4080eb:	mov    edx,esp
  4080ed:	pop    ebp
  4080ee:	mov    ds:0x8439f761,eax
  4080f3:	lods   al,BYTE PTR ds:[esi]
  4080f4:	mov    eax,ds:0xe422636a
  4080f9:	aaa    
  4080fa:	pop    ds
  4080fb:	xchg   BYTE PTR [ecx+edx*8+0x66bd172a],al
  408102:	loopne 0x40809c
  408104:	stos   BYTE PTR es:[edi],al
  408105:	dec    esi
  408106:	jp     0x408089
  408108:	push   ds
  408109:	vmread edx,ebx
  40810c:	bound  esp,QWORD PTR [edi]
  40810e:	inc    esi
  40810f:	jmp    0x2645b8ba
  408114:	and    DWORD PTR cs:[edi+ecx*8],esp
  408118:	push   cs
  408119:	jp     0x40814d
  40811b:	data16 jmp 0x408137
  40811e:	mov    esi,0x66c0612d
  408123:	jae    0x408148
  408125:	aam    0xd2
  408127:	adc    al,0x24
  408129:	fisttp QWORD PTR [esi+0x19]
  40812c:	sbb    eax,0xb1520604
  408131:	scas   al,BYTE PTR es:[edi]
  408132:	jge    0x408120
  408134:	les    ebx,FWORD PTR ds:0xab55d942
  40813a:	sbb    al,0xd4
  40813c:	shl    DWORD PTR [edi+0x6d],1
  40813f:	pop    eax
  408140:	imul   edx
  408142:	xchg   edi,eax
  408143:	mov    esi,0x22e73fa4
  408148:	fiadd  DWORD PTR [edi-0x2e522fa0]
  40814e:	shl    DWORD PTR [esi],0xb5
  408151:	jmp    0x47b3:0x14071ad1
  408158:	not    BYTE PTR [ebp+0x72ed89f7]
  40815e:	or     BYTE PTR [edx-0x719f1fb],bl
  408164:	sub    ch,ah
  408166:	pop    ebp
  408167:	sbb    dh,bh
  408169:	lock push edi
  40816b:	xlat   BYTE PTR ds:[ebx]
  40816c:	stos   DWORD PTR es:[edi],eax
  40816d:	shl    DWORD PTR [edi+0x52],1
  408170:	xlat   BYTE PTR ds:[ebx]
  408171:	sbb    esp,ebp
  408173:	cli    
  408174:	mov    eax,esp
  408176:	mov    ?,WORD PTR [esi-0x36dd704b]
  40817c:	xor    bh,BYTE PTR [edx+0x2]
  40817f:	fwait
  408180:	aas    
  408181:	sar    BYTE PTR [esi-0x3faa2b21],1
  408187:	mov    esi,0x4f8d11bd
  40818c:	shl    DWORD PTR [ebp-0x558c204e],1
  408192:	adc    DWORD PTR [eax],ebx
  408194:	iret   
  408195:	jl     0x408146
  408197:	mov    ds,edx
  408199:	mov    ecx,0x365bf74e
  40819e:	(bad)  
  40819f:	bound  cx,DWORD PTR [esi-0x6fab8f73]
  4081a6:	adc    dh,BYTE PTR cs:[esi]
  4081a9:	push   ebp
  4081aa:	fadd   DWORD PTR [edi-0x6e]
  4081ad:	test   eax,0x2d1fdf1d
  4081b2:	push   ecx
  4081b3:	in     al,dx
  4081b4:	and    eax,0xb65e2fa
  4081b9:	in     eax,0xd4
  4081bb:	fcmove st,st(3)
  4081bd:	call   0xfd489643
  4081c2:	shl    BYTE PTR [ecx-0x1e2daeca],1
  4081c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081c9:	cmp    BYTE PTR [esp+esi*2-0x4d],bh
  4081cd:	push   esp
  4081ce:	ja     0x408207
  4081d0:	or     dl,BYTE PTR [edx+0x1e]
  4081d3:	sbb    bh,BYTE PTR [esi]
  4081d5:	not    BYTE PTR [esi+0x795ccc3e]
  4081db:	xchg   edi,eax
  4081dc:	mov    esi,esi
  4081de:	enter  0x7ed8,0xd6
  4081e2:	aaa    
  4081e3:	jnp    0x40820d
  4081e5:	fstp   TBYTE PTR [ebx-0x24]
  4081e8:	push   esp
  4081e9:	scas   al,BYTE PTR es:[edi]
  4081ea:	not    dl
  4081ec:	xor    bl,BYTE PTR [edx+0xe360876]
  4081f2:	inc    ebp
  4081f3:	out    dx,al
  4081f4:	or     BYTE PTR [edi],0xce
  4081f7:	mov    ebx,0xeb8e10d0
  4081fc:	call   DWORD PTR [eax]
  4081fe:	(bad)  
  4081ff:	mov    esp,0x2c090096
  408204:	adc    DWORD PTR [esi-0x75],0x30
  408208:	jmp    0x42f7:0x61ad5e98
  40820f:	dec    BYTE PTR [ebx]
  408211:	or     ebx,edi
  408213:	cld    
  408214:	xor    ch,ah
  408216:	sbb    BYTE PTR [edi],bh
  408218:	xor    al,ah
  40821a:	aas    
  40821b:	inc    esi
  40821c:	and    edi,DWORD PTR [ecx+esi*2+0x2f72bef]
  408223:	jae    0x4081e4
  408225:	xor    al,0x26
  408227:	retf   
  408228:	fistp  DWORD PTR [ebp-0xea4705a]
  40822e:	shr    BYTE PTR [edx+edi*8-0x64675a99],cl
  408235:	repnz inc ebx
  408237:	pop    edi
  408238:	xchg   BYTE PTR [edx],bh
  40823a:	jb     0x408244
  40823c:	pusha  
  40823d:	icebp  
  40823e:	mov    ebx,0x895f578f
  408243:	enter  0x67cd,0x9f
  408247:	dec    edi
  408248:	sbb    dh,BYTE PTR [ecx]
  40824a:	ins    DWORD PTR es:[edi],dx
  40824b:	xor    al,0xca
  40824d:	mov    DWORD PTR [ebp+0x5d],eax
  408250:	and    bh,BYTE PTR [eax-0x5e999b13]
  408256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408257:	push   ebx
  408258:	or     eax,DWORD PTR [ebp+0x2b916a1b]
  40825e:	adc    al,0xaf
  408260:	fisttp DWORD PTR [edi+0x2ecc4c06]
  408266:	js     0x408204
  408268:	sbb    al,0xe5
  40826a:	(bad)  
  40826b:	repnz shl esp,0x22
  40826f:	or     al,0xb8
  408271:	inc    ecx
  408272:	sbb    ebx,DWORD PTR [esi]
  408274:	sub    BYTE PTR [ebx+0x741cf0ce],bl
  40827a:	and    eax,0xc3714f23
  40827f:	or     BYTE PTR [eax+ebx*2-0x5ec5a168],bh
  408286:	aaa    
  408287:	lea    esi,[ebx]
  408289:	dec    ebp
  40828a:	ja     0x4082d4
  40828c:	add    al,BYTE PTR gs:0x959e998d
  408293:	cmp    ah,BYTE PTR [edx-0x4376ba2c]
  408299:	frstor [ebx-0x38]
  40829c:	jl     0x408241
  40829e:	add    al,0x59
  4082a0:	cmc    
  4082a1:	mov    edi,DWORD PTR [ecx-0x30]
  4082a4:	sti    
  4082a5:	outs   dx,DWORD PTR ds:[esi]
  4082a6:	push   ds
  4082a7:	jne    0x408304
  4082a9:	lock test al,0x92
  4082ac:	loop   0x408306
  4082ae:	pop    eax
  4082af:	les    eax,FWORD PTR [ebx-0x6c]
  4082b2:	test   al,0x1
  4082b4:	ins    BYTE PTR es:[edi],dx
  4082b5:	aas    
  4082b6:	dec    edi
  4082b7:	mov    DWORD PTR [edi],ecx
  4082b9:	jmp    0x47f5:0xf3f9985a
  4082c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082c1:	es dec ecx
  4082c3:	and    eax,0xc39058a
  4082c8:	in     eax,dx
  4082c9:	loope  0x4082e9
  4082cb:	mov    ebx,0x57820ea4
  4082d0:	xor    dh,BYTE PTR [edx]
  4082d2:	scas   eax,DWORD PTR es:[edi]
  4082d3:	mov    ch,BYTE PTR [eax]
  4082d5:	add    eax,0x64d74f53
  4082da:	dec    esi
  4082db:	dec    ebp
  4082dc:	dec    BYTE PTR [ebx+0x30]
  4082df:	push   edi
  4082e0:	ins    DWORD PTR es:[edi],dx
  4082e1:	sub    bh,BYTE PTR [ebx+edx*4-0x51]
  4082e5:	xchg   DWORD PTR [esi-0x74214cea],edx
  4082eb:	pop    eax
  4082ec:	dec    edi
  4082ed:	push   0x64
  4082ef:	xchg   esp,eax
  4082f0:	loopne 0x4082f0
  4082f2:	daa    
  4082f3:	dec    ebx
  4082f4:	jmp    0x4082f6
  4082f6:	jl     0x4082c5
  4082f8:	bound  edx,QWORD PTR [eax]
  4082fa:	mov    ds:0x61ab3fff,al
  4082ff:	mov    esp,0x7c7cf437
  408304:	lods   eax,DWORD PTR ds:[esi]
  408305:	push   0x196f4e49
  40830a:	xchg   edx,eax
  40830b:	mov    cl,0xb7
  40830d:	mov    ah,0x5e
  40830f:	inc    ebp
  408310:	push   ds
  408311:	add    al,0xd7
  408313:	enter  0x7a60,0x5e
  408317:	pushf  
  408318:	enter  0xceaf,0x82
  40831c:	or     al,0xf0
  40831e:	xchg   DWORD PTR [ebp+0x7c],edi
  408321:	nop
  408322:	shl    ebp,1
  408324:	push   es
  408325:	jl     0x4082b0
  408327:	jne    0x4082c6
  408329:	mov    bh,0x3a
  40832b:	mov    cl,0x54
  40832d:	mov    dh,0x3f
  40832f:	add    eax,0x5fe79f4c
  408334:	out    0x69,eax
  408336:	arpl   WORD PTR [ebp+0x3d995c08],bx
  40833c:	jbe    0x40832d
  40833e:	pop    ebp
  40833f:	sub    cl,BYTE PTR [eax]
  408341:	fdivr  QWORD PTR [edi-0x3d]
  408344:	int    0x2
  408346:	test   DWORD PTR [edi-0x1d],esp
  408349:	repz mov eax,ds:0x87174bd0
  40834f:	imul   BYTE PTR [eax]
  408351:	inc    ebp
  408352:	mov    bh,0x7
  408354:	jmp    0xcad1f3be
  408359:	cs pop edx
  40835b:	rdtsc  
  40835d:	inc    ecx
  40835e:	dec    ecx
  40835f:	xor    al,0x9e
  408361:	jle    0x40833a
  408363:	rcl    edi,cl
  408365:	pop    esp
  408366:	sbb    edi,edi
  408368:	icebp  
  408369:	ins    DWORD PTR es:[edi],dx
  40836a:	setl   cl
  40836d:	out    dx,eax
  40836e:	inc    ebx
  40836f:	stc    
  408370:	jle    0x4083da
  408372:	ins    BYTE PTR es:[edi],dx
  408373:	test   BYTE PTR [esi],bl
  408375:	adc    al,0xae
  408377:	lods   al,BYTE PTR ds:[esi]
  408378:	mov    ds:0x40a805ea,eax
  40837d:	repz aas 
  40837f:	cmp    BYTE PTR [ebx+0x15],bl
  408382:	shl    BYTE PTR [esi],1
  408384:	pop    edx
  408385:	pop    edx
  408386:	cli    
  408387:	cwde   
  408388:	mov    BYTE PTR [ecx+ebp*4-0xd8c926f],dh
  40838f:	and    BYTE PTR [ebp-0x30],cl
  408392:	inc    ecx
  408393:	(bad)  
  408395:	cli    
  408396:	cmp    DWORD PTR [ebx-0x5d],0x2b
  40839a:	(bad)  
  40839b:	idiv   DWORD PTR [edi]
  40839d:	pop    ss
  40839e:	sbb    BYTE PTR ds:0x2315eb5a,dh
  4083a4:	dec    esp
  4083a5:	dec    edi
  4083a6:	je     0x4083a3
  4083a8:	sbb    DWORD PTR ds:0xa2734d86,ebp
  4083ae:	aad    0x33
  4083b0:	enter  0x4648,0xbd
  4083b4:	outs   dx,BYTE PTR ds:[esi]
  4083b5:	jmp    0x40836e
  4083b7:	ins    BYTE PTR es:[edi],dx
  4083b8:	mov    ah,0xb3
  4083ba:	xor    edi,DWORD PTR [eax+0x26]
  4083bd:	mov    ecx,0x5a261c1e
  4083c2:	cmp    DWORD PTR es:[ebx],eax
  4083c5:	ficomp WORD PTR [ebx+ebx*4+0x2f]
  4083c9:	sbb    al,0x20
  4083cb:	xlat   BYTE PTR ds:[ebx]
  4083cc:	(bad)  
  4083cd:	fmul   QWORD PTR [edi]
  4083cf:	and    al,0xf3
  4083d1:	enter  0xbcc8,0x27
  4083d5:	leave  
  4083d6:	sub    al,BYTE PTR [edx]
  4083d8:	loop   0x40839b
  4083da:	mov    BYTE PTR [ebx],dh
  4083dc:	mov    esp,0x4ac78f33
  4083e1:	sbb    eax,esp
  4083e3:	or     al,bh
  4083e5:	mov    cl,0x6a
  4083e7:	std    
  4083e8:	sub    eax,0x81cbd5a3
  4083ed:	scas   eax,DWORD PTR es:[edi]
  4083ee:	mov    ds:0xcc6f9ac7,al
  4083f3:	cli    
  4083f4:	mov    dl,0x1c
  4083f6:	push   eax
  4083f7:	inc    ebp
  4083f8:	cmp    ebx,esi
  4083fa:	cld    
  4083fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083fc:	and    dh,0x40
  4083ff:	inc    ebx
  408400:	and    BYTE PTR [ebp-0x1cf96a25],0x56
  408407:	or     eax,0x5083b3b7
  40840c:	hlt    
  40840d:	mov    bl,0x69
  40840f:	mov    ds:0xa65e3461,al
  408414:	nop
  408415:	stc    
  408416:	retf   0x28a4
  408419:	stc    
  40841a:	mov    ah,0x1a
  40841c:	adc    bh,BYTE PTR [edx]
  40841e:	(bad)  
  40841f:	cld    
  408420:	push   ebp
  408421:	pop    esi
  408422:	mov    ebp,0x1d0a251
  408427:	mov    es,WORD PTR [esi+0x45]
  40842a:	leave  
  40842b:	inc    ecx
  40842c:	mov    ds:0xe7c06df7,eax
  408431:	push   0x52706364
  408436:	out    0x0,eax
  408438:	loop   0x408461
  40843a:	mov    ds:0xf8df82bb,al
  40843f:	sub    DWORD PTR [esi-0x281fa0f8],0xffffffad
  408446:	retf   
  408447:	gs jl  0x40842b
  40844a:	sub    al,0x1a
  40844c:	mov    dh,bh
  40844e:	adc    eax,0xc30b751b
  408453:	pop    edi
  408454:	jb     0x40840c
  408456:	lahf   
  408457:	sti    
  408458:	aam    0xe0
  40845a:	push   es
  40845b:	sub    BYTE PTR ds:0x5909d81d,ch
  408461:	pop    es
  408462:	mov    eax,0xefef388a
  408467:	out    0x72,eax
  408469:	pop    esi
  40846a:	xchg   ecx,eax
  40846b:	cmp    dh,BYTE PTR [ebp-0x3b]
  40846e:	pusha  
  40846f:	(bad)
  408473:	adc    ax,0x4f70
  408477:	fcomi  st,st(5)
  408479:	adc    al,0x4e
  40847b:	shr    DWORD PTR [ecx+0x7fb8602f],cl
  408481:	pop    eax
  408482:	in     al,0xe8
  408484:	aam    0xbc
  408486:	xchg   BYTE PTR ds:0x7207314e,ah
  40848c:	in     al,dx
  40848d:	shl    DWORD PTR [esi+0x28],1
  408490:	xor    BYTE PTR [ecx+0x31a731ee],bh
  408496:	mov    edi,DWORD PTR [ebx+ebp*1]
  408499:	push   edi
  40849a:	jne    0x40850a
  40849c:	nop
  40849d:	dec    ecx
  40849e:	dec    ebx
  40849f:	loopne 0x4084e0
  4084a1:	xchg   edi,eax
  4084a2:	jecxz  0x4084ad
  4084a4:	sbb    al,0x22
  4084a6:	loope  0x4084fd
  4084a8:	test   eax,0x972d2d38
  4084ad:	cs mov dl,0xff
  4084b0:	cmp    ch,BYTE PTR [esi+0x64]
  4084b3:	adc    DWORD PTR [edi+eiz*4],esi
  4084b6:	pop    ds
  4084b7:	pop    esi
  4084b8:	ss inc ecx
  4084ba:	int    0x66
  4084bc:	lds    eax,FWORD PTR [edi]
  4084be:	mov    ebp,0xf3247c9a
  4084c3:	jbe    0x408522
  4084c5:	fisttp QWORD PTR [eax]
  4084c7:	dec    ecx
  4084c8:	fcmovnb st,st(5)
  4084ca:	jmp    0x4084ca
  4084cc:	sub    bh,dh
  4084ce:	test   al,0x49
  4084d0:	ret    0x8044
  4084d3:	js     0x4084c4
  4084d5:	xor    cl,BYTE PTR [esp+ebx*4]
  4084d8:	in     eax,dx
  4084d9:	or     edi,DWORD PTR [eax]
  4084db:	cwde   
  4084dc:	retf   
  4084dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084de:	cdq    
  4084df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e0:	mov    DWORD PTR [esi-0x34],esp
  4084e3:	pop    ds
  4084e4:	jp     0x408563
  4084e6:	mov    esp,0x30464092
  4084eb:	ds dec edi
  4084ed:	and    edx,DWORD PTR [edi+eiz*4]
  4084f0:	mov    ah,0xf2
  4084f2:	pop    ss
  4084f3:	lods   al,BYTE PTR ds:[esi]
  4084f4:	mov    dh,0x9e
  4084f6:	jle    0x408508
  4084f8:	and    BYTE PTR [ebx-0x4e902c01],0xae
  4084ff:	xchg   ebp,eax
  408500:	mov    dh,0xc7
  408502:	loopne 0x408573
  408504:	mov    ds:0x6da65400,al
  408509:	jg     0x408573
  40850b:	fwait
  40850c:	push   ss
  40850d:	arpl   WORD PTR [esi-0x28],cx
  408510:	xchg   edi,eax
  408511:	gs in  eax,dx
  408513:	ret    0xcaf2
  408516:	lahf   
  408517:	lock ins DWORD PTR es:[edi],dx
  408519:	stos   DWORD PTR es:[edi],eax
  40851a:	push   edi
  40851b:	xor    edi,DWORD PTR [ebx]
  40851d:	mov    ds:0x98aeb025,eax
  408522:	jp     0x40853d
  408524:	cwde   
  408525:	xor    BYTE PTR [esi+0x67a202d1],al
  40852b:	and    edi,DWORD PTR [ecx-0x1d9cbf49]
  408531:	cld    
  408532:	xchg   esp,eax
  408533:	ins    BYTE PTR es:[edi],dx
  408534:	aad    0x66
  408536:	jmp    0x4084fd
  408538:	add    ah,BYTE PTR [edi-0x17]
  40853b:	jns    0x40850a
  40853d:	mov    ah,dl
  40853f:	pusha  
  408540:	int3   
  408541:	daa    
  408542:	test   eax,0xc7001ae0
  408547:	dec    esp
  408548:	inc    ecx
  408549:	cmp    ah,ah
  40854b:	xchg   dl,bl
  40854d:	pop    eax
  40854e:	stos   DWORD PTR es:[edi],eax
  40854f:	out    0x75,eax
  408551:	sti    
  408552:	add    dh,ch
  408554:	icebp  
  408555:	fstp   TBYTE PTR [edx-0x72b9b19c]
  40855b:	adc    bl,al
  40855d:	sahf   
  40855e:	add    BYTE PTR [edx+0x551b51ad],ch
  408564:	jp     0x408554
  408566:	sub    bh,BYTE PTR [edi-0x7d]
  408569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40856a:	xor    BYTE PTR [edi],bh
  40856c:	xchg   esp,eax
  40856d:	pusha  
  40856e:	aad    0xf0
  408570:	push   ecx
  408571:	jae    0x408561
  408573:	xchg   ah,cl
  408575:	push   edi
  408576:	popa   
  408577:	jno    0x4085f6
  408579:	dec    esp
  40857a:	push   esp
  40857b:	std    
  40857c:	aas    
  40857d:	push   esi
  40857e:	and    edi,DWORD PTR [ebp+0x1ccb384b]
  408584:	add    ch,BYTE PTR [edi-0x37b1f6c0]
  40858a:	push   ss
  40858b:	shl    BYTE PTR [esp+edx*2-0x52],0xee
  408590:	push   es
  408591:	and    ah,cl
  408593:	push   ecx
  408594:	pop    ds
  408595:	aaa    
  408596:	mov    ds:0x24b2bc83,al
  40859b:	inc    eax
  40859c:	fmul   DWORD PTR [esi]
  40859e:	pop    ds
  40859f:	add    BYTE PTR [esi+eax*4+0x41],bl
  4085a3:	outs   dx,BYTE PTR ds:[esi]
  4085a4:	add    eax,0x2c8b9e94
  4085a9:	push   esi
  4085aa:	and    BYTE PTR [ebx+0x48],al
  4085ad:	(bad)  
  4085ae:	repz xor DWORD PTR [ecx],0xffffffc8
  4085b2:	add    dl,BYTE PTR [esi-0x14d95ec5]
  4085b8:	dec    ebx
  4085b9:	mov    bl,0xd3
  4085bb:	(bad)  
  4085bc:	ins    BYTE PTR es:[edi],dx
  4085bd:	dec    edi
  4085be:	push   ebp
  4085bf:	and    al,0xdf
  4085c1:	pop    es
  4085c2:	or     bh,BYTE PTR [esi-0x5f9d1c64]
  4085c8:	dec    esi
  4085c9:	outs   dx,DWORD PTR ds:[esi]
  4085ca:	ret    0x6fc8
  4085cd:	icebp  
  4085ce:	nop
  4085cf:	lahf   
  4085d0:	ins    BYTE PTR es:[edi],dx
  4085d1:	xor    bl,BYTE PTR [ebx+edx*2-0x6b]
  4085d5:	stos   DWORD PTR es:[edi],eax
  4085d6:	mov    ?,WORD PTR [ebp-0x390262ef]
  4085dc:	dec    ebx
  4085dd:	adc    al,0xd6
  4085df:	shl    BYTE PTR [edi],1
  4085e1:	add    al,0x23
  4085e3:	xchg   ecx,eax
  4085e4:	add    ch,ch
  4085e6:	add    BYTE PTR [esi+0x426fb70d],0x5e
  4085ed:	iret   
  4085ee:	fwait
  4085ef:	cmp    al,cl
  4085f1:	cmp    al,bh
  4085f3:	(bad)  
  4085f4:	int3   
  4085f5:	jmp    0x8b8df8e1
  4085fa:	push   esp
  4085fb:	dec    esp
  4085fc:	xchg   BYTE PTR [edi],ah
  4085fe:	sbb    eax,DWORD PTR [esp+ebp*2]
  408601:	cmp    DWORD PTR [edi],ecx
  408603:	int3   
  408604:	and    ebx,DWORD PTR [edx]
  408606:	adc    al,0x3d
  408608:	outs   dx,DWORD PTR ds:[esi]
  408609:	cwde   
  40860a:	sub    ebp,DWORD PTR [esi+0x4a]
  40860d:	pop    ebp
  40860e:	jae    0x408640
  408610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408611:	in     al,dx
  408612:	pop    esi
  408613:	mov    ds:0x9ddcea68,eax
  408618:	xor    esi,ebx
  40861a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861b:	rcl    BYTE PTR [ecx],cl
  40861d:	test   DWORD PTR [eax-0xc385c53],0x792d8adb
  408627:	mov    al,0xd7
  408629:	jbe    0x40860c
  40862b:	je     0x408678
  40862d:	mov    WORD PTR [ebx],ss
  40862f:	loop   0x408695
  408631:	popf   
  408632:	mov    bl,BYTE PTR [esi+edx*1-0x5a]
  408636:	xor    ch,BYTE PTR [ebx+0x6a878619]
  40863c:	enter  0x11a1,0x2e
  408640:	jmp    0xdc7b:0x9120fb84
  408647:	lods   eax,DWORD PTR ds:[esi]
  408648:	jb     0x40867d
  40864a:	je     0x40861d
  40864c:	psrad  mm6,QWORD PTR [edi-0x29]
  408650:	in     eax,dx
  408651:	dec    edx
  408652:	jp     0x408686
  408654:	(bad)  
  408655:	cwde   
  408656:	gs popa 
  408658:	adc    ah,BYTE PTR [esi-0x194435ef]
  40865e:	in     eax,0x7e
  408660:	addr16 mov bl,0xfe
  408663:	cmp    BYTE PTR [ebx+eax*2-0x3583d579],cl
  40866a:	adc    bh,BYTE PTR [ebp+0x43f9513]
  408670:	xchg   ebx,eax
  408671:	fiadd  DWORD PTR [ebx]
  408673:	std    
  408674:	fisttp WORD PTR [edi+0x7a70bd6b]
  40867a:	mov    ch,0x37
  40867c:	mov    al,ds:0xe5966c35
  408681:	xchg   ebp,eax
  408682:	in     al,0xb8
  408684:	shr    BYTE PTR [esi+edi*4-0x54e6bc1a],1
  40868b:	and    eax,0xba9d1bbb
  408690:	xchg   BYTE PTR [ecx+0x73],ah
  408693:	int    0xcc
  408695:	shl    ecx,0x92
  408698:	call   ecx
  40869a:	(bad)  
  40869b:	push   0x13
  40869d:	xchg   DWORD PTR [edi*1+0x57402a90],edi
  4086a4:	(bad)  
  4086a5:	out    dx,eax
  4086a6:	rcr    ebp,0x2b
  4086a9:	out    dx,al
  4086aa:	rcr    BYTE PTR [ecx-0x34],cl
  4086ad:	shl    DWORD PTR [si-0x5573],1
  4086b2:	mov    al,0x76
  4086b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b5:	out    dx,eax
  4086b6:	shl    DWORD PTR [eax+0x1e874a52],1
  4086bc:	bndldx (bad),[esi+0x37]
  4086c0:	stos   DWORD PTR es:[edi],eax
  4086c1:	xor    dh,BYTE PTR [ecx-0x5e]
  4086c4:	dec    ebp
  4086c5:	es inc edx
  4086c7:	inc    ecx
  4086c8:	mov    bh,ch
  4086ca:	repnz mov ebp,0x1c9d5651
  4086d0:	push   ebx
  4086d1:	jnp    0x4086e7
  4086d3:	in     al,0x64
  4086d5:	das    
  4086d6:	inc    esi
  4086d7:	retf   0x324c
  4086da:	ins    BYTE PTR es:[edi],dx
  4086db:	rep outs dx,DWORD PTR ds:[esi]
  4086dd:	jnp    0x408752
  4086df:	ja     0x40867b
  4086e1:	fwait
  4086e2:	push   esp
  4086e3:	dec    eax
  4086e4:	sub    BYTE PTR [edx],al
  4086e6:	and    edi,esi
  4086e8:	add    DWORD PTR [ebx+0x6],eax
  4086eb:	int3   
  4086ec:	(bad)  
  4086ed:	jnp    0x4086f3
  4086ef:	jno    0x4086b5
  4086f1:	add    DWORD PTR [ecx-0x777a87cd],esi
  4086f7:	jne    0x4086f3
  4086f9:	adc    dl,bl
  4086fb:	pop    eax
  4086fc:	(bad)  [edi]
  4086fe:	adc    al,0xc5
  408700:	mov    esp,0x86b10271
  408705:	xchg   esp,eax
  408706:	mov    al,0xaa
  408708:	addr16 loope 0x408705
  40870b:	mov    cl,0x10
  40870d:	pushf  
  40870e:	push   ecx
  40870f:	sahf   
  408710:	in     eax,0x7e
  408712:	gs fldln2 
  408716:	push   ds
  408717:	mov    dh,0x86
  408719:	retf   
  40871a:	test   DWORD PTR [eax+0x58],esp
  40871d:	int    0x76
  40871f:	inc    ecx
  408720:	xchg   DWORD PTR [edx-0xdc1fcc6],edi
  408726:	dec    ebx
  408727:	jecxz  0x408762
  408729:	xchg   ecx,eax
  40872a:	call   0xff72:0xc316d129
  408731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408732:	bound  edx,QWORD PTR [ebx+0x20af260c]
  408738:	les    esp,FWORD PTR [edx-0x143181ef]
  40873e:	pop    esp
  40873f:	cli    
  408740:	arpl   WORD PTR [ebx],di
  408742:	cdq    
  408743:	mov    ebx,0xc7789c4c
  408748:	or     BYTE PTR [esi+0x49ba2c0e],ah
  40874e:	push   ebx
  40874f:	jmp    0x8849:0xbcb6f31f
  408756:	or     DWORD PTR [edi+0x64b01d91],eax
  40875c:	test   eax,0x709ee038
  408761:	or     ch,BYTE PTR cs:[ebp-0x4b]
  408765:	dec    esi
  408766:	jle    0x4087da
  408768:	or     eax,esp
  40876a:	loopne 0x4087af
  40876c:	outs   dx,DWORD PTR ds:[esi]
  40876d:	ins    DWORD PTR es:[edi],dx
  40876e:	jge    0x4087d8
  408770:	dec    ebx
  408771:	js     0x408709
  408773:	xchg   cx,ax
  408775:	pop    ss
  408776:	push   ebx
  408777:	repnz pusha 
  408779:	jbe    0x408751
  40877b:	and    ch,al
  40877d:	es into 
  40877f:	jecxz  0x4087a0
  408781:	adc    dl,BYTE PTR [esi]
  408783:	(bad)  
  408784:	and    al,0xe9
  408786:	jg     0xdd536eb4
  40878c:	xor    DWORD PTR [ebx+0x4afa6f44],ecx
  408792:	loop   0x4087bd
  408794:	sub    ebx,ebp
  408796:	outs   dx,DWORD PTR ds:[esi]
  408797:	mov    bl,0xa9
  408799:	icebp  
  40879a:	cmp    eax,0x34caf1d4
  40879f:	imul   edi,DWORD PTR [ebp+0xb],0xfa83f6d3
  4087a6:	push   0xbf064bcd
  4087ab:	xchg   esi,eax
  4087ac:	pop    ebp
  4087ad:	xor    DWORD PTR [eax+0x9],esp
  4087b0:	sti    
  4087b1:	sub    eax,0x6c3265a2
  4087b6:	lea    ecx,[ebp+0x12]
  4087b9:	scas   eax,DWORD PTR es:[edi]
  4087ba:	jae    0x40879e
  4087bc:	outs   dx,DWORD PTR ds:[esi]
  4087bd:	mov    dh,0xc
  4087bf:	xor    eax,0xe822aede
  4087c4:	pop    ebp
  4087c5:	outs   dx,DWORD PTR ds:[esi]
  4087c6:	in     al,0x4d
  4087c8:	jmp    0x40878e
  4087ca:	push   0xffffff8d
  4087cc:	(bad)  
  4087ce:	xor    DWORD PTR [esi-0x403b55a3],ebp
  4087d4:	inc    ebx
  4087d5:	mov    eax,ds:0x448af54d
  4087da:	stc    
  4087db:	aam    0x32
  4087dd:	add    al,0x77
  4087df:	inc    esp
  4087e0:	push   ecx
  4087e1:	mov    ch,0x50
  4087e3:	push   edx
  4087e4:	mov    cl,0xe0
  4087e6:	iret   
  4087e7:	fsubr  DWORD PTR [ebx]
  4087e9:	push   edx
  4087ea:	sbb    bh,BYTE PTR [edx+eiz*8+0x2d]
  4087ee:	mov    ebp,0x87209703
  4087f3:	test   eax,0xd7ff8f28
  4087f8:	(bad)  
  4087f9:	inc    DWORD PTR [edi+0x17]
  4087fc:	pop    ecx
  4087fd:	gs enter 0x3d6a,0x1d
  408802:	call   0x3095:0x95a885df
  408809:	inc    edi
  40880a:	inc    ebx
  40880b:	sbb    edi,DWORD PTR [ebx-0x78]
  40880e:	jecxz  0x40888b
  408810:	xor    dl,0x9e
  408813:	sub    ah,BYTE PTR ds:0x4ec3b511
  408819:	xchg   edx,eax
  40881a:	mov    edx,0x4bb02e6a
  40881f:	hlt    
  408820:	pop    ss
  408821:	inc    edi
  408822:	outs   dx,DWORD PTR ds:[esi]
  408823:	test   al,0xdb
  408825:	or     eax,0xce969cbf
  40882a:	add    eax,0x6e6242a0
  40882f:	out    dx,eax
  408830:	mov    ebp,0x5cd67172
  408835:	and    ch,BYTE PTR [edi+esi*8]
  408838:	mov    ah,0x33
  40883a:	cmp    al,0x87
  40883c:	clc    
  40883d:	gs jmp 0xad68:0x1da49190
  408845:	pop    es
  408846:	jmp    0x3013:0x85b64505
  40884d:	sub    cl,dl
  40884f:	mov    ds:0xb6e68eaf,eax
  408854:	es outs dx,BYTE PTR gs:[esi]
  408857:	scas   al,BYTE PTR es:[di]
  408859:	jp     0x408843
  40885b:	xor    DWORD PTR [ebx-0x7a],esi
  40885e:	lods   eax,DWORD PTR ds:[esi]
  40885f:	inc    ebp
  408861:	dec    edx
  408862:	lea    ebp,[ebp-0x61]
  408865:	iret   
  408866:	je     0x40883e
  408868:	pop    edx
  408869:	call   0xe854:0x794932fb
  408870:	mov    dh,0xe4
  408872:	xchg   edx,eax
  408873:	mul    DWORD PTR [ebx+eax*4]
  408876:	les    esi,FWORD PTR [esi]
  408878:	jp     0x4088e6
  40887a:	pushf  
  40887b:	popa   
  40887c:	outs   dx,BYTE PTR ds:[esi]
  40887d:	push   0xffffffa5
  40887f:	pop    ss
  408880:	adc    BYTE PTR [edx+0x1155986d],ch
  408886:	push   edi
  408887:	sbb    bl,0x15
  40888a:	push   es
  40888b:	pop    esi
  40888c:	mov    dh,BYTE PTR [ecx+0x69]
  40888f:	and    cl,BYTE PTR [edi]
  408891:	call   0x3209bdb0
  408896:	div    BYTE PTR [edx-0x25]
  408899:	push   eax
  40889a:	jl     0x4088be
  40889c:	es xor al,0xf3
  40889f:	inc    eax
  4088a0:	push   ecx
  4088a1:	imul   ebp,DWORD PTR [edi-0x72],0xaf50a13c
  4088a8:	lods   al,BYTE PTR ds:[esi]
  4088a9:	clc    
  4088aa:	dec    esi
  4088ab:	pop    ss
  4088ac:	sub    al,0xcd
  4088ae:	push   0xd3228eb6
  4088b3:	mov    esi,DWORD PTR [edi]
  4088b5:	test   BYTE PTR [ebx+0x27],dl
  4088b8:	cmp    eax,0x8e7ae9f
  4088bd:	mov    bh,0xe1
  4088bf:	rcl    ebx,1
  4088c1:	stos   DWORD PTR es:[edi],eax
  4088c2:	stc    
  4088c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088c4:	sub    al,0x41
  4088c6:	sahf   
  4088c7:	add    DWORD PTR [eax+esi*8-0x69f575da],edx
  4088ce:	mov    esp,0x761a17ca
  4088d3:	and    esp,DWORD PTR [esi-0x41]
  4088d6:	mov    eax,ds:0x5a3a6507
  4088db:	test   al,0x59
  4088dd:	adc    DWORD PTR [eax+0x1c5c62fd],ebx
  4088e3:	xor    esi,esp
  4088e5:	and    eax,0xecc8adf6
  4088ea:	div    BYTE PTR [edx]
  4088ec:	dec    esp
  4088ed:	ds dec esp
  4088ef:	sbb    ecx,DWORD PTR [edx-0x19]
  4088f2:	mov    bl,0x4e
  4088f4:	in     eax,0x62
  4088f6:	pusha  
  4088f7:	in     eax,dx
  4088f8:	sbb    DWORD PTR ss:[ecx-0x153e4aa1],eax
  4088ff:	dec    eax
  408900:	bound  edx,QWORD PTR [eax]
  408902:	call   0x8344:0x5652d8a4
  408909:	imul   ebx,DWORD PTR [edx-0x2d],0x5b13b8b2
  408910:	jecxz  0x408944
  408912:	push   ebx
  408913:	mov    eax,ds:0xa6cfafed
  408918:	adc    dl,al
  40891a:	jecxz  0x40898b
  40891c:	js     0x408923
  40891e:	inc    ecx
  40891f:	gs in  al,0x1f
  408922:	addr16 lahf 
  408924:	dec    BYTE PTR [ecx-0x5]
  408927:	rcpps  xmm3,XMMWORD PTR [ebp+0x22]
  40892b:	mov    ds:0x689cbe8f,eax
  408930:	push   es
  408931:	adc    BYTE PTR [esi+0x7f],ch
  408934:	dec    ebx
  408935:	(bad)  
  408936:	push   esp
  408937:	cmp    ebx,ebp
  408939:	xor    al,0xb5
  40893b:	mov    al,ds:0xda0b317a
  408940:	sub    al,0x9a
  408942:	sub    DWORD PTR [esi+0x67],ebp
  408945:	sub    eax,0xf609d4e5
  40894a:	clc    
  40894b:	sbb    DWORD PTR [eax],0xffffffe9
  40894e:	cmp    al,0x79
  408950:	cmp    DWORD PTR [ecx],ebx
  408952:	jl     0x408901
  408954:	pop    ds
  408955:	cmp    ch,bl
  408957:	or     eax,0x866e3aaf
  40895c:	cdq    
  40895d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40895e:	adc    edi,edi
  408960:	icebp  
  408961:	mul    BYTE PTR [edx+0x19]
  408964:	sub    ebx,DWORD PTR [ebx-0x2881e6df]
  40896a:	jns    0x408987
  40896c:	jmp    0x50c9df75
  408971:	gs cmc 
  408973:	ins    DWORD PTR es:[edi],dx
  408974:	fdivr  DWORD PTR ss:0x9189f8b8
  40897b:	adc    BYTE PTR [ecx-0x41548463],0x81
  408982:	popf   
  408983:	push   esi
  408984:	daa    
  408985:	imul   ebx,DWORD PTR [ebx+0x79],0x4273f7e5
  40898c:	pop    eax
  40898d:	loope  0x40899e
  40898f:	mov    eax,ds:0xa391db8a
  408994:	test   edx,edi
  408996:	xor    ebx,DWORD PTR [eax+eiz*4-0x6e]
  40899a:	aas    
  40899b:	fld    st(2)
  40899d:	mov    edi,0x609fa983
  4089a2:	pushf  
  4089a3:	cli    
  4089a4:	pop    es
  4089a5:	xchg   BYTE PTR [edi-0x38b8ef34],bh
  4089ab:	xchg   ebp,eax
  4089ac:	add    esi,esi
  4089ae:	aas    
  4089af:	shl    DWORD PTR [edi+esi*1],0x88
  4089b3:	lock pop ss
  4089b5:	fstp   QWORD PTR ds:0x1df37be5
  4089bb:	scas   al,BYTE PTR es:[edi]
  4089bc:	ins    DWORD PTR es:[edi],dx
  4089bd:	mov    al,ds:0x7b540a0d
  4089c2:	sbb    dh,BYTE PTR [edi+edx*2]
  4089c5:	fsubrp st(7),st
  4089c7:	popa   
  4089c8:	ret    0xab9a
  4089cb:	cmp    DWORD PTR [eax-0x24950d80],esp
  4089d1:	test   BYTE PTR [ebx],ch
  4089d3:	push   ds
  4089d4:	lea    esi,[eax]
  4089d6:	jne    0x408998
  4089d8:	arpl   WORD PTR [edx+ebp*1],bp
  4089db:	jecxz  0x4089b4
  4089dd:	shl    BYTE PTR [esi],0xd6
  4089e0:	fdiv   st(1),st
  4089e2:	dec    esi
  4089e3:	sbb    BYTE PTR [eax],ah
  4089e5:	xchg   ebp,eax
  4089e6:	push   ecx
  4089e7:	xchg   edx,eax
  4089e8:	dec    ecx
  4089e9:	fcmovb st,st(2)
  4089eb:	mov    edx,0x1fe02ffb
  4089f0:	(bad)  
  4089f1:	stos   DWORD PTR es:[edi],eax
  4089f2:	jmp    0x4089c0
  4089f4:	imul   edi,DWORD PTR [ebx],0xc6494016
  4089fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089fb:	sbb    eax,0x86e96b93
  408a00:	pop    ebx
  408a01:	nop
  408a02:	nop
  408a03:	mov    ch,0x37
  408a05:	push   ebx
  408a06:	in     eax,dx
  408a07:	stc    
  408a08:	pop    ds
  408a09:	sbb    al,BYTE PTR [edx]
  408a0b:	jne    0x4089c6
  408a0d:	in     al,0x7c
  408a0f:	push   edi
  408a10:	mov    al,ds:0x4c7d5ff2
  408a15:	mov    gs,WORD PTR [edi-0x78fdae81]
  408a1b:	loopne 0x4089c2
  408a1d:	ins    BYTE PTR es:[edi],dx
  408a1e:	push   esp
  408a1f:	icebp  
  408a20:	ret    
  408a21:	sbb    al,0x1c
  408a23:	ror    dl,1
  408a25:	sub    esi,eax
  408a27:	loope  0x4089de
  408a29:	les    edx,FWORD PTR [esi-0x67]
  408a2c:	fnstcw WORD PTR [esi-0x13]
  408a2f:	pop    esi
  408a30:	mov    ds:0xc215680e,al
  408a35:	add    DWORD PTR ds:0xb5839824,ebx
  408a3b:	mov    dl,0x91
  408a3d:	sbb    DWORD PTR [esi+edi*2-0x28e53f7],ebp
  408a44:	jno    0x408a85
  408a46:	scas   eax,DWORD PTR es:[edi]
  408a47:	(bad)  
  408a48:	fdiv   DWORD PTR ds:0xbb8a8e46
  408a4e:	sbb    al,0xba
  408a51:	mov    esi,0xf82409d2
  408a56:	mov    eax,0x4959c67e
  408a5b:	jmp    0x5d9:0xd4a82c68
  408a62:	lock mov DWORD PTR [ecx+0x12],eax
  408a66:	mov    dh,0x8b
  408a68:	(bad)  
  408a69:	in     al,dx
  408a6a:	add    eax,0x372e5f6b
  408a6f:	dec    ebx
  408a70:	add    DWORD PTR [eax-0x52],ebp
  408a73:	ret    0x9ac7
  408a76:	sbb    BYTE PTR [esi],dl
  408a78:	in     al,dx
  408a79:	int3   
  408a7a:	shr    esp,0xd8
  408a7d:	repnz test DWORD PTR [edx+0x1350bf23],ebx
  408a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a85:	fimul  DWORD PTR [eax+0x2865b9ae]
  408a8b:	adc    BYTE PTR [eax-0x62],ah
  408a8e:	pcmpgtb mm7,QWORD PTR [ebp+0x2ad9f824]
  408a95:	leave  
  408a96:	(bad)  
  408a97:	jl     0x408adf
  408a99:	xor    eax,0xfaf90b0a
  408a9e:	pop    ebp
  408a9f:	jl     0x408a2f
  408aa1:	jae    0x408aa8
  408aa3:	ins    DWORD PTR es:[edi],dx
  408aa4:	(bad)  
  408aa5:	pop    eax
  408aa6:	je     0x408a4d
  408aa8:	out    dx,al
  408aa9:	adc    ebp,DWORD PTR [ecx-0x4035d580]
  408aaf:	and    eax,0xbda039e4
  408ab4:	lods   eax,DWORD PTR ds:[esi]
  408ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ab6:	adc    eax,0x21e4c8d9
  408abb:	out    dx,al
  408abc:	aas    
  408abd:	pop    ebp
  408abe:	cmp    ecx,DWORD PTR ds:0xaa7cdef
  408ac4:	mov    al,ds:0xfcf76c47
  408ac9:	push   ecx
  408aca:	or     eax,ebx
  408acc:	arpl   WORD PTR [esi],bp
  408ace:	add    bl,bh
  408ad0:	sbb    ch,BYTE PTR [ecx]
  408ad2:	xchg   esp,eax
  408ad3:	cs retf 0x25c6
  408ad7:	pusha  
  408ad8:	pusha  
  408ad9:	mov    eax,ds:0x4d58ee44
  408ade:	dec    ecx
  408adf:	test   DWORD PTR [edx+0x45],edi
  408ae2:	cld    
  408ae3:	aas    
  408ae4:	addr16 mov al,0xbb
  408ae7:	icebp  
  408ae8:	out    0x6b,al
  408aea:	pop    eax
  408aeb:	pushf  
  408aec:	aad    0xc2
  408aee:	push   ss
  408aef:	sahf   
  408af0:	sahf   
  408af1:	sub    DWORD PTR [eax-0x6],0xd93bef68
  408af8:	add    al,0xc1
  408afa:	les    ecx,FWORD PTR [eax]
  408afc:	xor    eax,0x89e545b8
  408b01:	daa    
  408b02:	xchg   ebx,eax
  408b03:	ins    DWORD PTR es:[edi],dx
  408b04:	sub    eax,0x611efee0
  408b09:	jnp    0x408ab6
  408b0b:	add    bl,al
  408b0d:	imul   eax,edx,0x61
  408b10:	xchg   ebx,eax
  408b11:	les    esi,FWORD PTR [ebx+0x33]
  408b14:	cs mov bh,0x5f
  408b17:	mov    dh,0xb0
  408b19:	gs pop ss
  408b1b:	push   ds
  408b1c:	mov    eax,ds:0xec0ac14b
  408b21:	xchg   edi,eax
  408b22:	push   ebp
  408b23:	xor    BYTE PTR [eax*1-0x5096060a],ch
  408b2a:	mov    al,0x91
  408b2c:	mov    fs,WORD PTR [eax+0x73]
  408b2f:	popa   
  408b30:	pop    ebx
  408b31:	jmp    0x581343a3
  408b36:	push   ds
  408b37:	mov    bl,0x1
  408b39:	push   ebp
  408b3a:	imul   eax,DWORD PTR [ecx-0x7e],0x42c33e49
  408b41:	fwait
  408b42:	mov    dh,0x42
  408b44:	cs adc al,0xa5
  408b47:	ss (bad) 
  408b49:	call   esi
  408b4b:	fld    TBYTE PTR [ecx-0x5b670439]
  408b51:	dec    esi
  408b52:	add    bh,BYTE PTR [edi+0x49e823bc]
  408b58:	out    dx,eax
  408b59:	and    eax,0x1f679d7e
  408b5e:	and    ch,BYTE PTR [ebx-0xd]
  408b61:	mov    dh,0xf4
  408b63:	or     edx,DWORD PTR [edi+edx*1]
  408b66:	rcl    BYTE PTR [ecx-0x22],1
  408b69:	rcr    al,1
  408b6b:	adc    edi,esp
  408b6d:	push   esi
  408b6e:	dec    esi
  408b6f:	push   0x5e
  408b71:	or     al,0xbd
  408b73:	cmp    DWORD PTR [ecx],0xfffffff8
  408b76:	jnp    0x408b2b
  408b78:	adc    ecx,0xffffff84
  408b7b:	adc    ah,dl
  408b7d:	mov    bl,0xb8
  408b7f:	jg     0x408bfe
  408b81:	int3   
  408b82:	(bad)  
  408b83:	imul   ebx,DWORD PTR [edi],0xffffffe9
  408b86:	and    edx,DWORD PTR [ebp-0x320f3321]
  408b8c:	loope  0x408bc0
  408b8e:	out    dx,eax
  408b8f:	mov    al,BYTE PTR [esi-0x76]
  408b92:	mov    ebp,0xb32be5ac
  408b97:	cli    
  408b98:	jge    0x408b95
  408b9a:	fwait
  408b9b:	mov    ecx,0x1b49b466
  408ba0:	and    eax,0x76a16749
  408ba5:	mov    ds:0x8c69a7c8,al
  408baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bab:	pop    edi
  408bac:	repnz mov ah,dh
  408baf:	ins    BYTE PTR es:[edi],dx
  408bb0:	mov    ah,0x73
  408bb2:	mov    al,0x73
  408bb4:	mov    ds:0x5cee0a99,eax
  408bb9:	sub    ah,BYTE PTR [eax-0x1f]
  408bbc:	push   ebx
  408bbd:	inc    ebx
  408bbe:	jmp    0x408b9a
  408bc0:	mov    ecx,0xe4868a8f
  408bc5:	sub    BYTE PTR [edx],ch
  408bc7:	pop    esp
  408bc8:	out    dx,eax
  408bc9:	push   0x83f6608c
  408bce:	imul   ebx,ecx,0xffffff87
  408bd1:	cmp    BYTE PTR [ecx-0xc267bf2],ch
  408bd7:	sbb    al,0xa8
  408bd9:	out    dx,al
  408bda:	(bad)  
  408bdb:	lea    edi,[ecx+ebp*1+0x66]
  408bdf:	in     al,dx
  408be0:	mov    dl,0x7d
  408be2:	lahf   
  408be3:	popa   
  408be4:	loop   0x408c61
  408be6:	sub    al,0xfc
  408be8:	jne    0x408bfb
  408bea:	sub    esp,DWORD PTR [ebx-0x41]
  408bed:	je     0x408bbb
  408bef:	mov    eax,ds:0x69b3e892
  408bf4:	dec    di
  408bf6:	aam    0x39
  408bf8:	outs   dx,DWORD PTR ds:[esi]
  408bf9:	repnz add BYTE PTR [edx-0x6a],0x2e
  408bfe:	ret    0x2463
  408c01:	fild   WORD PTR [edi-0x64dc8e82]
  408c07:	fwait
  408c08:	pop    esp
  408c09:	(bad)  
  408c0b:	xor    ebp,DWORD PTR [edx+ebp*1+0x28e94449]
  408c12:	sub    DWORD PTR [ebx],esi
  408c14:	(bad)  
  408c15:	scas   al,BYTE PTR es:[edi]
  408c16:	xchg   esp,eax
  408c17:	lea    esp,[eax+0x31]
  408c1a:	push   0x220ed4e9
  408c1f:	popa   
  408c20:	cmp    esi,DWORD PTR [ecx]
  408c22:	stos   BYTE PTR es:[edi],al
  408c23:	imul   eax,DWORD PTR [ebp-0x64a4e1e5],0x4242cc3d
  408c2d:	jmp    0x408c13
  408c2f:	imul   DWORD PTR ds:0x86869c6c
  408c35:	or     DWORD PTR [esi-0x7b],esi
  408c38:	jmp    0xb44e:0xb501b296
  408c3f:	jp     0x408cb9
  408c41:	adc    ebx,DWORD PTR [ecx-0x2c]
  408c44:	rcl    BYTE PTR [eax-0x23],0x56
  408c48:	adc    dl,ch
  408c4a:	imul   eax,DWORD PTR [esi-0x75],0x194271aa
  408c51:	dec    ebp
  408c52:	call   0xc01f:0x7a0ebb60
  408c59:	ja     0x408c97
  408c5b:	sbb    al,0xe5
  408c5d:	retf   0x269
  408c60:	xchg   DWORD PTR [esi],edx
  408c62:	cmp    BYTE PTR [edi],dh
  408c64:	push   0xbf53aba0
  408c69:	loop   0x408c0a
  408c6b:	pop    ebx
  408c6c:	or     al,0x46
  408c6e:	mov    ebp,0x20cd0ce8
  408c73:	mov    gs:0xfc4f330c,al
  408c79:	mov    WORD PTR [ebp+0x6dc5fffb],?
  408c7f:	popa   
  408c80:	retf   0x884e
  408c83:	loope  0x408cb9
  408c85:	out    0xd2,al
  408c87:	clc    
  408c88:	ficomp WORD PTR [edi]
  408c8a:	repnz push gs
  408c8d:	push   ebp
  408c8e:	push   esp
  408c8f:	retf   0x8d96
  408c92:	arpl   WORD PTR ds:0xadb17405,ax
  408c98:	scas   al,BYTE PTR es:[edi]
  408c99:	jle    0x408d04
  408c9b:	mov    ah,0x9f
  408c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c9e:	xchg   ecx,eax
  408c9f:	cmp    al,0x8d
  408ca1:	out    0x1e,eax
  408ca3:	repz cs xchg esi,eax
  408ca6:	add    DWORD PTR [edi-0x56],ebx
  408ca9:	mov    ds:0x631f0106,al
  408cae:	cmp    BYTE PTR [ecx-0x6],ah
  408cb1:	ds jne 0x408cda
  408cb4:	int3   
  408cb5:	iret   
  408cb6:	not    DWORD PTR [ebp+eax*8+0x4c]
  408cba:	popf   
  408cbb:	call   0xc98a:0xa26b37b2
  408cc2:	pop    edx
  408cc3:	sub    DWORD PTR [esi+0x7e],0xd0504452
  408cca:	aaa    
  408ccb:	ins    DWORD PTR es:[edi],dx
  408ccc:	pushf  
  408ccd:	arpl   bp,si
  408ccf:	inc    ebp
  408cd0:	jns    0x408d17
  408cd2:	add    esi,ebx
  408cd4:	aad    0xc7
  408cd6:	mov    bl,0x85
  408cd8:	addr16 leave 
  408cda:	xchg   edx,eax
  408cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cdc:	popa   
  408cdd:	fiadd  WORD PTR [ebx+0x2a]
  408ce0:	adc    BYTE PTR [edi-0x2246f490],al
  408ce6:	add    DWORD PTR [ecx-0x4505a1f5],edi
  408cec:	mov    edi,DWORD PTR [edx+0x73]
  408cef:	sub    DWORD PTR [edx+0x29978b6c],esp
  408cf5:	gs test eax,0x4943b6b8
  408cfb:	xor    al,0xa9
  408cfd:	jg     0x408d03
  408cff:	adc    dl,BYTE PTR [eax+0x5a94ace3]
  408d05:	jge    0x408cb0
  408d07:	xchg   esi,eax
  408d08:	in     eax,0xb1
  408d0a:	mov    ah,0x7c
  408d0c:	mov    cl,0x4e
  408d0e:	fstp   TBYTE PTR [eax]
  408d10:	mov    cl,0x21
  408d12:	outs   dx,BYTE PTR ds:[esi]
  408d13:	mov    edi,0xfba709b7
  408d18:	mov    al,ds:0xf053962b
  408d1d:	xchg   ebp,eax
  408d1e:	idiv   esp
  408d20:	je     0x408d18
  408d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d23:	mov    dl,0x71
  408d25:	ins    DWORD PTR es:[edi],dx
  408d26:	jp     0x408d61
  408d28:	nop
  408d29:	cmc    
  408d2a:	push   ebp
  408d2b:	call   FWORD PTR [edi-0x441ad7fe]
  408d31:	jns    0x408cb4
  408d33:	ds test eax,0x7bd195e1
  408d39:	pop    edx
  408d3a:	out    0x37,eax
  408d3c:	mov    ds:0xa561587e,eax
  408d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d42:	mov    eax,0x94cdead2
  408d47:	pop    ecx
  408d48:	inc    edx
  408d49:	jb     0x408da8
  408d4b:	scas   eax,DWORD PTR es:[edi]
  408d4c:	shr    BYTE PTR [esi],1
  408d4e:	push   ds
  408d4f:	pop    ebx
  408d50:	das    
  408d51:	rcr    edi,0x7
  408d54:	(bad)  
  408d55:	and    eax,0xe00fd8c8
  408d5a:	jnp    0x408d3f
  408d5c:	rol    BYTE PTR [ebx],1
  408d5e:	cli    
  408d5f:	add    ch,bh
  408d61:	in     eax,dx
  408d62:	clc    
  408d63:	aad    0x7d
  408d65:	push   0xcb1da535
  408d6a:	daa    
  408d6b:	imul   esp,DWORD PTR [edi],0xffffffe6
  408d6e:	mov    BYTE PTR [ecx],cl
  408d70:	js     0x408da0
  408d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d73:	shl    BYTE PTR [edx-0x27],cl
  408d76:	mov    DWORD PTR [esi],esi
  408d78:	cwde   
  408d79:	mov    ds:0xfddd7b1e,al
  408d7e:	test   al,0x6
  408d80:	sbb    bl,BYTE PTR [esi-0x72cd6d80]
  408d86:	mov    eax,ds:0x38b20c22
  408d8b:	xor    edi,DWORD PTR [eax+0x3d6de392]
  408d91:	inc    edx
  408d92:	(bad)  
  408d93:	jo     0x408d5b
  408d95:	xchg   esp,eax
  408d96:	push   DWORD PTR [ebx+ebp*1-0x6e8d0a6e]
  408d9d:	mov    bh,0xb8
  408d9f:	xor    eax,0x5558c6f8
  408da4:	xchg   edx,eax
  408da5:	mov    esp,0x61413739
  408daa:	popa   
  408dab:	jne    0x408df4
  408dad:	aas    
  408dae:	ror    BYTE PTR [esi-0x20d75bd1],1
  408db4:	ins    DWORD PTR es:[edi],dx
  408db5:	jo     0x408df1
  408db7:	lock xor al,0xa7
  408dba:	in     eax,dx
  408dbb:	(bad)  
  408dbc:	jno    0x408d76
  408dbe:	leave  
  408dbf:	mov    ebx,0x9f05aaa2
  408dc4:	or     BYTE PTR [ebp-0x38],dl
  408dc7:	jbe    0x408dff
  408dc9:	in     al,0x1e
  408dcb:	outs   dx,BYTE PTR ds:[esi]
  408dcc:	pusha  
  408dcd:	mov    edx,0x42a3e3b2
  408dd2:	rcr    BYTE PTR [edx+ebx*4-0x3b],0xf7
  408dd7:	mov    esp,0x30157ec2
  408ddc:	and    al,0x2b
  408dde:	inc    ecx
  408ddf:	jns    0x408de5
  408de1:	cwde   
  408de2:	stc    
  408de3:	test   bl,ch
  408de5:	jb     0x408e3c
  408de7:	out    0xc7,al
  408de9:	jmp    0x408d7a
  408deb:	or     DWORD PTR [ecx-0x43],esi
  408dee:	xchg   esp,eax
  408def:	adc    edi,ecx
  408df1:	or     cl,bh
  408df3:	xor    al,0xbe
  408df5:	cmp    al,0x9d
  408df7:	push   edx
  408df8:	stos   BYTE PTR es:[edi],al
  408df9:	mov    eax,ds:0xdfb3c400
  408dfe:	sbb    edi,ebx
  408e00:	std    
  408e01:	or     DWORD PTR [esi+0x1bc54f45],ecx
  408e07:	push   edx
  408e08:	mov    dh,0xd1
  408e0a:	jno    0x408e3e
  408e0c:	sub    al,0xd
  408e0e:	cwde   
  408e0f:	push   ecx
  408e10:	shl    BYTE PTR [edx-0x2e],1
  408e13:	popa   
  408e14:	push   cs
  408e15:	dec    edx
  408e16:	jl     0x408e6a
  408e18:	(bad)  
  408e19:	cmp    BYTE PTR [ecx-0x69243ec0],dl
  408e1f:	into   
  408e20:	dec    esp
  408e21:	lods   al,BYTE PTR ds:[esi]
  408e22:	jle    0x408dfd
  408e24:	jg     0x408db2
  408e26:	xchg   BYTE PTR [eax],bh
  408e28:	test   DWORD PTR [ebx-0x4],edx
  408e2b:	mov    eax,0x4fea77a7
  408e30:	call   0xed8b:0x31a48b64
  408e37:	fild   QWORD PTR [edi+0x50ac3a23]
  408e3d:	mov    ds:0x9c3cc8d,eax
  408e42:	enter  0xa55b,0x2c
  408e46:	rcl    DWORD PTR [ecx-0x24],cl
  408e49:	push   esi
  408e4a:	bound  edi,QWORD PTR [ecx+ebx*4]
  408e4d:	xchg   BYTE PTR [edx+0x20],bh
  408e50:	aaa    
  408e51:	shl    DWORD PTR [edx+0x52f0ba8b],0x3c
  408e58:	jmp    0x8aa0e4cb
  408e5d:	fisubr WORD PTR [esi+0x2297c502]
  408e63:	aam    0xf8
  408e65:	pop    es
  408e66:	xor    al,0x9f
  408e69:	and    BYTE PTR [edi],ah
  408e6b:	cmc    
  408e6c:	mov    al,ds:0xd294764d
  408e71:	push   ds
  408e72:	popa   
  408e73:	and    cl,dl
  408e75:	clc    
  408e76:	mov    ebp,0xa547b8e2
  408e7b:	fs jmp 0x60cb5f84
  408e81:	cmp    eax,0xe88b0321
  408e86:	cli    
  408e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e88:	jl     0x408e2d
  408e8a:	mov    BYTE PTR [eax+0x7b],cl
  408e8d:	js     0x408e27
  408e8f:	pop    es
  408e90:	mov    ecx,0x5b634c9d
  408e95:	xor    eax,0xfc428ea6
  408e9a:	mov    edi,0xf2c3f07a
  408e9f:	mov    cl,0xfa
  408ea1:	cli    
  408ea2:	test   DWORD PTR ds:0xb770294b,ebx
  408ea8:	sbb    BYTE PTR [edi-0x54],ah
  408eab:	addr16 loope 0x408e41
  408eae:	sub    esp,DWORD PTR [ebp-0x6f23f26b]
  408eb4:	out    0xdf,eax
  408eb6:	enter  0x8066,0xd
  408eba:	pushf  
  408ebb:	rcr    ch,1
  408ebd:	loope  0x408ee3
  408ebf:	outs   dx,BYTE PTR ds:[esi]
  408ec0:	jle    0x408e70
  408ec2:	push   edi
  408ec3:	in     eax,dx
  408ec4:	scas   eax,DWORD PTR es:[edi]
  408ec5:	mov    eax,DWORD PTR [edi]
  408ec7:	das    
  408ec8:	arpl   WORD PTR [ecx],di
  408eca:	cli    
  408ecb:	or     eax,0xb2c8cb4d
  408ed0:	pop    ebx
  408ed1:	scas   al,BYTE PTR es:[edi]
  408ed2:	test   DWORD PTR [esi],esp
  408ed4:	lods   al,BYTE PTR ds:[esi]
  408ed5:	outs   dx,DWORD PTR ds:[esi]
  408ed6:	ins    DWORD PTR es:[edi],dx
  408ed7:	test   esp,edx
  408ed9:	jecxz  0x408ee6
  408edb:	or     al,BYTE PTR [ebx-0x3f]
  408ede:	mov    ds:0xb1fd56db,eax
  408ee3:	adc    eax,0x856a3379
  408ee8:	or     al,0x5b
  408eea:	xchg   ebx,eax
  408eeb:	sbb    DWORD PTR [edx-0x55],edi
  408eee:	xlat   BYTE PTR ds:[ebx]
  408eef:	imul   BYTE PTR [ecx-0x7a]
  408ef2:	xchg   edx,eax
  408ef3:	ss inc esp
  408ef5:	(bad)  
  408ef6:	fdiv   DWORD PTR [esi]
  408ef8:	adc    al,0x76
  408efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efb:	cs dec ebp
  408efd:	and    eax,0x9e79fc8b
  408f02:	not    DWORD PTR [eax+0x5a]
  408f05:	dec    ebx
  408f06:	sar    DWORD PTR [edx*8+0x4ba91f3b],1
  408f0d:	xor    dl,BYTE PTR [eax]
  408f0f:	sub    cl,BYTE PTR [ebx-0x60e3ca19]
  408f15:	mov    eax,DWORD PTR [ecx-0x13]
  408f18:	cli    
  408f19:	and    DWORD PTR [eax],esi
  408f1b:	pslld  mm3,QWORD PTR [esi-0xb]
  408f1f:	(bad)  
  408f20:	mov    ebx,0x5ba47b3
  408f25:	cmp    DWORD PTR [eax+0x2],esp
  408f28:	sub    al,BYTE PTR [edi]
  408f2a:	and    BYTE PTR [edi],0xb5
  408f2d:	add    DWORD PTR [eax+edx*4+0x23e4f477],0xffffffe3
  408f35:	fdivr  DWORD PTR [ecx+0x79b98449]
  408f3b:	mov    esp,0xaa13ac63
  408f40:	loop   0x408f29
  408f42:	enter  0x1c1c,0x25
  408f46:	xor    dl,dh
  408f48:	sub    BYTE PTR [eax],0xc
  408f4b:	mov    bl,0x59
  408f4d:	in     al,0x64
  408f4f:	enter  0xbe2,0x16
  408f53:	xchg   ebp,eax
  408f54:	pop    ebx
  408f55:	or     eax,0xf08f75e6
  408f5a:	(bad)  
  408f5b:	and    dl,bh
  408f5d:	mov    ds:0xff873cda,eax
  408f62:	adc    al,BYTE PTR [edx+eax*2+0x4742fc13]
  408f69:	and    dl,cl
  408f6b:	xor    esp,DWORD PTR [esi-0x1c0c6885]
  408f71:	cmp    eax,0x577d9d17
  408f76:	rcl    ch,1
  408f78:	loopne 0x408ff1
  408f7a:	cmc    
  408f7b:	popa   
  408f7c:	inc    esp
  408f7d:	pop    ebp
  408f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f7f:	fdivr  DWORD PTR [ebx+0x1b7593b3]
  408f85:	push   edi
  408f86:	sbb    DWORD PTR [ebx],ebp
  408f88:	ds jp  0x408fb4
  408f8b:	repnz mov al,0x8d
  408f8e:	scas   eax,DWORD PTR es:[edi]
  408f8f:	jmp    0x81f06c9e
  408f94:	dec    BYTE PTR [edi]
  408f96:	rcr    BYTE PTR [esi],0x90
  408f99:	and    al,0x51
  408f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f9c:	in     eax,dx
  408f9d:	(bad)  
  408f9e:	(bad)  
  408f9f:	or     ah,BYTE PTR [edx+0xcec6d81]
  408fa5:	jbe    0x408ffb
  408fa7:	add    al,0xdb
  408fa9:	bound  edx,QWORD PTR [edi+0x7572662e]
  408faf:	mov    eax,ds:0x9dbfd43f
  408fb4:	push   0x42
  408fb6:	mov    dh,0xe4
  408fb8:	repnz mov bh,0xcd
  408fbb:	pushf  
  408fbc:	enter  0x8798,0x36
  408fc0:	or     al,0x8a
  408fc2:	or     al,0x6b
  408fc4:	in     al,dx
  408fc5:	or     BYTE PTR [edx-0x37],dh
  408fc8:	jne    0x408fdf
  408fca:	pop    eax
  408fcb:	adc    DWORD PTR [edx+0x27ba9d5c],eax
  408fd1:	inc    esp
  408fd2:	fcomp  QWORD PTR [esi-0x40]
  408fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fd8:	sbb    eax,0x5bcbef64
  408fdd:	lds    esp,FWORD PTR [eax+0x79]
  408fe0:	pop    ebp
  408fe1:	jbe    0x408f7d
  408fe3:	lods   al,BYTE PTR ds:[esi]
  408fe4:	gs or  al,0x81
  408fe8:	call   0xf9c5bad1
  408fed:	jmp    0x88fc:0x2b708dc1
  408ff4:	scas   eax,DWORD PTR es:[edi]
  408ff5:	pop    ecx
  408ff6:	sbb    esp,esp
  408ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ff9:	out    0x51,al
  408ffb:	mov    eax,ds:0x590d45f4
  409000:	push   eax
  409001:	xor    al,0x70
  409003:	mov    bl,0xd9
  409005:	sub    BYTE PTR [eax+eiz*1],dh
  409008:	pop    esp
  409009:	les    esi,FWORD PTR [ebp+0x15]
  40900c:	mov    ecx,0x6a2202d2
  409011:	cmp    al,0xca
  409013:	gs scas eax,DWORD PTR es:[edi]
  409015:	leave  
  409016:	cld    
  409017:	add    BYTE PTR [eax],bl
  409019:	sub    DWORD PTR es:[edi-0x1ffc5d6c],edi
  409020:	xor    al,0x44
  409022:	fcom   QWORD PTR [edx+0x38962869]
  409028:	fwait
  409029:	hlt    
  40902a:	leave  
  40902b:	aaa    
  40902c:	rcr    DWORD PTR [ebx+0x2531e1cb],1
  409032:	call   0x394e:0xea2dbc71
  409039:	adc    eax,0x9aeae67a
  40903e:	iret   
  40903f:	test   al,0x9d
  409041:	dec    eax
  409042:	dec    ebx
  409043:	ins    BYTE PTR es:[edi],dx
  409044:	cmc    
  409045:	mov    ebp,0xec7166a3
  40904a:	pop    eax
  40904b:	imul   esp,DWORD PTR [esi+0x4d94c2d7],0x9e728a87
  409055:	pop    es
  409056:	or     BYTE PTR [eax+eax*4-0x39f8c4cf],al
  40905d:	mov    ebx,0x1ba249d5
  409062:	xchg   ebp,eax
  409063:	xchg   ecx,eax
  409064:	rcl    BYTE PTR [ecx+0x28466a10],cl
  40906a:	adc    DWORD PTR [esi-0x37],esp
  40906d:	adc    esi,edx
  40906f:	inc    edx
  409070:	pop    ds
  409071:	or     al,ah
  409073:	std    
  409074:	aas    
  409075:	sbb    edx,eax
  409077:	push   0xffffffa5
  409079:	push   ds
  40907a:	pop    edi
  40907b:	pop    ecx
  40907c:	scas   eax,DWORD PTR es:[edi]
  40907d:	or     eax,0x8acf915e
  409082:	push   ebx
  409083:	cld    
  409084:	jae    0x4090be
  409086:	inc    eax
  409087:	sbb    al,0x98
  409089:	cs scas al,BYTE PTR es:[edi]
  40908b:	in     eax,0x3b
  40908d:	xchg   esp,eax
  40908e:	ins    DWORD PTR es:[edi],dx
  40908f:	jl     0x409088
  409091:	bound  esi,QWORD PTR ds:0xdf705e05
  409097:	fwait
  409098:	in     al,dx
  409099:	scas   al,BYTE PTR es:[edi]
  40909a:	xchg   ebp,eax
  40909b:	mov    es,WORD PTR [edi]
  40909d:	mov    bh,BYTE PTR [ebx+0x203f01d7]
  4090a3:	loop   0x4090a3
  4090a5:	and    edi,0x18
  4090a8:	push   esp
  4090a9:	ret    
  4090aa:	sahf   
  4090ab:	dec    ebp
  4090ac:	jmp    0x9415:0x1e26d3cc
  4090b3:	mov    ecx,DWORD PTR ds:0x48f74827
  4090b9:	cmp    cl,BYTE PTR [eax]
  4090bb:	push   ebx
  4090bc:	in     al,dx
  4090bd:	scas   al,BYTE PTR es:[edi]
  4090be:	sbb    eax,0x9ab824ff
  4090c3:	add    ecx,DWORD PTR [esi-0x23]
  4090c6:	jecxz  0x409060
  4090c8:	addr16 mov eax,0x1dd2f2b1
  4090ce:	scas   eax,DWORD PTR es:[edi]
  4090cf:	aad    0xe6
  4090d1:	stc    
  4090d2:	ret    0xea77
  4090d5:	mov    eax,0x6d0ace6c
  4090da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090db:	inc    ebp
  4090dc:	fnsave [edx+0x4e8ce261]
  4090e2:	(bad)  
  4090e3:	in     al,0x29
  4090e5:	push   edi
  4090e6:	lea    edi,ds:0x54f490e1
  4090ec:	sbb    dl,dl
  4090ee:	mov    esi,0x969a9cf3
  4090f3:	cwde   
  4090f4:	push   ebp
  4090f5:	imul   edi,DWORD PTR [edi+ebp*8+0x1f],0xffffffcc
  4090fa:	lahf   
  4090fb:	jns    0x40910c
  4090fd:	popf   
  4090fe:	fcmovb st,st(4)
  409100:	adc    ecx,ecx
  409102:	out    dx,al
  409103:	and    cl,BYTE PTR [edi+0x4bd71a6f]
  409109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40910a:	dec    esp
  40910b:	call   0xf30f:0xa38ff4b4
  409112:	mov    ds:0xe45afd07,eax
  409117:	std    
  409118:	xchg   edi,eax
  409119:	add    bl,BYTE PTR [esi+edi*8+0x22]
  40911d:	mov    ah,BYTE PTR [edi]
  40911f:	mov    bh,0x1b
  409121:	jnp    0x4090ae
  409123:	jae    0x40919e
  409125:	or     ebx,DWORD PTR [ebx-0x5aa8ac81]
  40912b:	xor    DWORD PTR [edi+0x1139e58e],ecx
  409131:	or     DWORD PTR [ebp-0xc14084b],edi
  409137:	mov    bh,0x4f
  409139:	aas    
  40913a:	out    dx,al
  40913b:	push   0xe2766703
  409140:	fwait
  409141:	scas   eax,DWORD PTR es:[edi]
  409142:	neg    ah
  409144:	inc    ebp
  409145:	icebp  
  409146:	and    DWORD PTR [edi],0x173a86f2
  40914c:	ret    
  40914d:	js     0x409161
  40914f:	outs   dx,DWORD PTR ds:[esi]
  409150:	add    eax,0x5b77e53f
  409155:	dec    edi
  409156:	mov    ebx,0x37c49ba9
  40915b:	cmp    BYTE PTR [ebp+0x64],cl
  40915e:	xchg   esi,eax
  40915f:	pop    ds
  409160:	bound  ecx,QWORD PTR [esi]
  409162:	mov    esi,0x8f7afab5
  409167:	paddsw mm7,QWORD PTR [ecx-0x72428dc2]
  40916e:	cmp    al,BYTE PTR [ebx+0x3ac285e7]
  409174:	cmp    eax,0x881d5162
  409179:	jle    0x409161
  40917b:	movntq (bad),mm4
  40917c:	out    0xe2,eax
  40917e:	mov    ebx,0x1085bb03
  409183:	adc    DWORD PTR [eax-0x37],esp
  409186:	add    eax,0xf18f0768
  40918b:	ds iret 
  40918d:	push   ecx
  40918e:	push   0x58b837a3
  409193:	dec    edx
  409194:	cdq    
  409195:	mov    ?,WORD PTR [esi+edi*8]
  409198:	cmp    BYTE PTR [ebx+0x733edf55],al
  40919e:	or     cl,cl
  4091a0:	adc    DWORD PTR [esi-0x6f60b4ab],edi
  4091a6:	sbb    eax,0x90bf55bc
  4091ab:	rcr    BYTE PTR [eax],0xa8
  4091ae:	rcl    dl,1
  4091b0:	jb     0x4091d8
  4091b2:	push   eax
  4091b3:	sub    al,0xd6
  4091b5:	mov    al,ds:0xd18cfc05
  4091ba:	rcl    DWORD PTR [edx],1
  4091bc:	outs   dx,BYTE PTR ds:[esi]
  4091bd:	pop    ebp
  4091be:	jmp    0xd10f:0x7237f1bc
  4091c5:	cmp    al,BYTE PTR [eax+0x7ef992f2]
  4091cb:	cs adc dh,bl
  4091ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091cf:	ret    
  4091d0:	or     edx,ebp
  4091d2:	test   eax,0x3e8de2ae
  4091d7:	sbb    eax,0x630d0a1f
  4091dc:	ja     0x4091fe
  4091de:	mov    eax,ds:0x661ce37b
  4091e3:	inc    ebp
  4091e4:	mov    eax,ds:0x4bc509bd
  4091e9:	mov    eax,ds:0x27d2ac40
  4091ee:	adc    eax,0x8bb4822a
  4091f3:	imul   ecx,DWORD PTR [edx],0xffffff94
  4091f6:	sub    dh,bh
  4091f8:	adc    bl,al
  4091fa:	mov    cl,0x8d
  4091fc:	aad    0xf8
  4091fe:	(bad)  
  4091ff:	imul   ebx,DWORD PTR ds:0x8fdde319,0xfd670162
  409209:	in     al,dx
  40920a:	fwait
  40920b:	mov    bl,0xdd
  40920d:	mov    bl,0x49
  40920f:	inc    edi
  409210:	lds    ecx,FWORD PTR [ebx+0x71]
  409213:	loope  0x4091b5
  409215:	fisubr DWORD PTR [edx]
  409217:	out    0x1a,al
  409219:	fiadd  DWORD PTR [ecx+0x2e5483c1]
  40921f:	scas   eax,DWORD PTR es:[edi]
  409220:	cmp    al,BYTE PTR [eax+0x30]
  409223:	stos   DWORD PTR es:[edi],eax
  409224:	add    edx,DWORD PTR [edi+0x51]
  409227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409228:	mov    dh,0x94
  40922a:	mov    gs,WORD PTR [ecx+ebx*2+0x2b51a388]
  409231:	sti    
  409232:	push   0xbd588d15
  409237:	mov    ds:0x1a5c9482,eax
  40923c:	pop    esi
  40923d:	sub    al,0x4
  40923f:	daa    
  409240:	jbe    0x409227
  409242:	jns    0x4091e7
  409244:	test   eax,0xa5ec661d
  409249:	leave  
  40924a:	pop    esp
  40924b:	sbb    ecx,DWORD PTR [ecx]
  40924d:	cs jns 0x409229
  409250:	and    DWORD PTR [edx],esi
  409252:	adc    al,0x11
  409254:	retf   
  409255:	mov    cs,WORD PTR [edx+edx*1+0x118b2408]
  40925c:	mov    dl,0xa9
  40925e:	xor    BYTE PTR [edi+0x5b],bl
  409261:	popf   
  409262:	pop    edi
  409264:	mov    dh,BYTE PTR [edi+eax*8]
  409267:	sub    ecx,DWORD PTR [edx-0x2e]
  40926a:	rcr    al,0x5d
  40926d:	and    eax,0x3afff58d
  409272:	sbb    DWORD PTR [ecx-0x51],0xffffffcd
  409276:	xor    BYTE PTR [ecx],0x3f
  409279:	in     al,dx
  40927a:	nop
  40927b:	(bad)  
  40927d:	out    0x61,eax
  40927f:	in     eax,dx
  409280:	fdivr  QWORD PTR [edx+0x597045ac]
  409286:	xor    BYTE PTR [ebx+edi*1-0x38],al
  40928a:	mov    BYTE PTR [eax],cl
  40928c:	(bad)  
  40928d:	mov    bl,0x83
  40928f:	jecxz  0x409269
  409291:	mov    ah,BYTE PTR [edi+0x6c33f01]
  409297:	std    
  409298:	sub    DWORD PTR [ecx-0x449b51be],esp
  40929e:	adc    ch,BYTE PTR [edi-0x32361ba7]
  4092a4:	mov    ebp,0xaf0e1a5
  4092a9:	rol    DWORD PTR ds:0x8bc1128c,0x22
  4092b0:	sub    esp,DWORD PTR [edx-0x62]
  4092b3:	sub    edi,DWORD PTR [ebx+eiz*4+0x6]
  4092b7:	xor    ah,0xef
  4092ba:	sbb    ah,dl
  4092bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092bd:	call   0x99af:0xfb7df6e8
  4092c4:	retf   
  4092c5:	not    BYTE PTR [edx-0x32]
  4092c8:	sbb    eax,0x29e9eb5f
  4092cd:	inc    esi
  4092ce:	push   ebx
  4092cf:	cmp    al,0x37
  4092d1:	test   DWORD PTR [eax],0xd9b698eb
  4092d7:	adc    ecx,DWORD PTR [ebx+0x2ec7979]
  4092dd:	lds    esp,FWORD PTR [esp+ebp*4+0x50]
  4092e1:	stos   BYTE PTR es:[edi],al
  4092e2:	cmc    
  4092e3:	sub    BYTE PTR [ebx+0x1a747103],ch
  4092e9:	imul   edx,DWORD PTR [eax],0xffffffd2
  4092ec:	xchg   BYTE PTR [edi+0x1b],ah
  4092ef:	mul    DWORD PTR gs:[ebx+0x50]
  4092f3:	adc    eax,ebp
  4092f5:	push   esp
  4092f6:	data16 lock mov al,ds:0x11d114fd
  4092fd:	mov    eax,0xb5076621
  409302:	xchg   ebp,eax
  409303:	sub    eax,0x6518c1e3
  409308:	inc    eax
  409309:	lods   al,BYTE PTR ds:[esi]
  40930a:	(bad)  
  40930b:	push   ebx
  40930c:	add    eax,0xbc15460
  409311:	sbb    al,0x3e
  409313:	dec    esi
  409314:	cld    
  409315:	add    DWORD PTR [ebx+0x53],esi
  409318:	shl    BYTE PTR [edi+0x2eea11de],cl
  40931e:	jae    0x409329
  409320:	jno    0x4092d1
  409322:	mov    ds:0x5864e61d,eax
  409327:	aad    0x6d
  409329:	sbb    DWORD PTR [edi],eax
  40932b:	mov    ah,0x59
  40932d:	shl    DWORD PTR [edx+0x5a],0x41
  409331:	cmp    BYTE PTR [ecx+0x78],0x13
  409335:	test   BYTE PTR [edi-0x325d6921],bh
  40933b:	cmp    eax,0x404df10a
  409340:	and    bl,BYTE PTR [edx+0x31]
  409343:	popf   
  409344:	fistp  DWORD PTR [ebp-0x4d]
  409347:	or     ebx,DWORD PTR [edi+0x2b]
  40934a:	int    0xfa
  40934c:	cs jo  0x40933a
  40934f:	sbb    eax,ebp
  409351:	mov    ecx,0xb8a921a5
  409356:	lods   eax,DWORD PTR ds:[esi]
  409357:	cmc    
  409358:	lods   eax,DWORD PTR ds:[esi]
  409359:	bound  esp,QWORD PTR ds:0x3ad10060
  40935f:	(bad)  
  409360:	leave  
  409361:	sbb    eax,0x48178837
  409366:	mov    esi,0x5241d1ff
  40936b:	data16 sub al,0xd3
  40936e:	add    eax,0xb373f3bd
  409373:	push   ebp
  409374:	hlt    
  409375:	ins    DWORD PTR es:[edi],dx
  409376:	sbb    dh,dh
  409378:	inc    esi
  409379:	call   FWORD PTR [edx]
  40937b:	je     0x4093b3
  40937d:	in     eax,0x5e
  40937f:	xor    DWORD PTR [edi+0xa166bc],0xffffffa5
  409386:	inc    edi
  409387:	sbb    DWORD PTR [eax],edx
  409389:	in     eax,dx
  40938a:	nop
  40938b:	dec    ecx
  40938c:	xor    eax,0x166bdef9
  409391:	in     al,dx
  409392:	call   0xa932:0x807c1afc
  409399:	aaa    
  40939a:	mov    edx,0xa09ac7ed
  40939f:	stos   DWORD PTR es:[edi],eax
  4093a0:	push   si
  4093a2:	iret   
  4093a3:	dec    eax
  4093a4:	push   0x32
  4093a6:	pop    ds
  4093a7:	call   0xc5459d5c
  4093ac:	xchg   esi,eax
  4093ad:	fisttp WORD PTR [esi-0xd]
  4093b0:	or     al,0x1c
  4093b2:	mov    cl,0x69
  4093b4:	dec    ebp
  4093b5:	pop    ebx
  4093b6:	push   ds
  4093b7:	adc    edx,eax
  4093b9:	rcl    BYTE PTR [ecx-0x79],cl
  4093bc:	add    dh,BYTE PTR [ebp+esi*1-0x2e780dd6]
  4093c3:	loope  0x4093a2
  4093c5:	add    edi,DWORD PTR [eax+0x11]
  4093c8:	test   DWORD PTR [ebx],edx
  4093ca:	ja     0x40935c
  4093cc:	dec    edi
  4093cd:	test   al,0xf0
  4093cf:	lods   eax,DWORD PTR ds:[esi]
  4093d0:	and    dl,BYTE PTR [ebx-0x283c50f0]
  4093d6:	add    ebp,DWORD PTR ss:[eax-0x35b0aeca]
  4093dd:	rol    DWORD PTR [ebx+0xe],cl
  4093e0:	xchg   ecx,eax
  4093e1:	push   eax
  4093e2:	dec    esi
  4093e3:	mov    cl,0x5b
  4093e5:	xchg   esi,eax
  4093e6:	cmp    DWORD PTR [edi+0x18],0xffffffbb
  4093ea:	dec    ebx
  4093eb:	sub    al,0xd3
  4093ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ee:	inc    edx
  4093ef:	cli    
  4093f0:	xor    ebx,edx
  4093f2:	sub    ecx,DWORD PTR [esi-0x7b4c6830]
  4093f8:	gs dec eax
  4093fa:	(bad)  
  4093fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093fc:	xor    eax,0x40f4a090
  409401:	shl    DWORD PTR [ecx+0x62],cl
  409404:	mov    esp,0x8ea8c2c8
  409409:	stos   BYTE PTR es:[edi],al
  40940a:	sub    dl,BYTE PTR [edx-0x3a]
  40940d:	sbb    DWORD PTR [ecx-0x497249f3],esi
  409413:	mov    ch,0xd3
  409415:	fs aas 
  409417:	pop    eax
  409418:	(bad)  
  409419:	fistp  QWORD PTR [ebp+0x4870bdea]
  40941f:	lahf   
  409420:	rcl    BYTE PTR [esi+ebx*2+0x55],1
  409424:	aaa    
  409425:	mov    ecx,fs
  409427:	scas   al,BYTE PTR es:[edi]
  409428:	mov    esp,0x2b561762
  40942d:	aaa    
  40942e:	cmc    
  40942f:	gs fwait
  409431:	xor    DWORD PTR [eax-0x17],edx
  409434:	and    edx,DWORD PTR [ecx]
  409436:	ja     0x4094b6
  409438:	icebp  
  409439:	iret   
  40943a:	cmp    dl,BYTE PTR [esi+0x62]
  40943d:	js     0x40949a
  40943f:	in     al,0xf4
  409441:	xchg   edi,eax
  409442:	xchg   ch,ch
  409444:	test   dh,ch
  409446:	scas   al,BYTE PTR es:[edi]
  409447:	jg     0xc7d87e2d
  40944d:	pop    edx
  40944e:	scas   eax,DWORD PTR es:[edi]
  40944f:	mov    bh,0x35
  409451:	jle    0x4094b8
  409453:	addr16 and eax,0xb7b91b98
  409459:	cld    
  40945a:	std    
  40945b:	imul   ecx,edx,0xffffffe0
  40945e:	rcr    ebx,0x34
  409461:	call   0xf6959ed9
  409466:	dec    esp
  409467:	dec    ecx
  409468:	stc    
  409469:	xchg   edx,eax
  40946a:	sub    DWORD PTR [ecx],esi
  40946c:	cdq    
  40946d:	or     eax,0xd0f8083e
  409472:	(bad)  
  409474:	jo     0x409454
  409476:	js     0x40942a
  409478:	sbb    DWORD PTR [edx+0x2],esp
  40947b:	or     DWORD PTR [edx-0x2a8bc27f],ebx
  409481:	mov    eax,0x1abfa132
  409486:	fidivr DWORD PTR [eax+esi*1-0x7e]
  40948a:	cs cld 
  40948c:	iret   
  40948d:	xchg   esp,eax
  40948e:	out    0x4c,al
  409490:	je     0x4094e5
  409492:	in     eax,dx
  409493:	mov    edx,0xee8079e7
  409498:	add    eax,0xba64b13b
  40949d:	je     0x4094fb
  40949f:	xchg   edi,eax
  4094a0:	repz jb 0x40948f
  4094a3:	in     eax,0xb5
  4094a5:	push   edi
  4094a6:	pop    edx
  4094a7:	out    0xbf,al
  4094a9:	sub    BYTE PTR [ebp-0x690a4d1],0xd3
  4094b0:	inc    esi
  4094b1:	pop    esp
  4094b2:	push   0xfffffff9
  4094b4:	test   DWORD PTR [edx],edx
  4094b6:	lds    ecx,FWORD PTR [ecx+ebp*4+0x7c03890a]
  4094bd:	sbb    al,0x7c
  4094bf:	push   eax
  4094c0:	cwde   
  4094c1:	inc    edx
  4094c2:	push   edi
  4094c3:	jno    0x409462
  4094c5:	daa    
  4094c6:	add    esp,DWORD PTR [ecx]
  4094c8:	or     bl,al
  4094ca:	inc    ebp
  4094cb:	xor    DWORD PTR [edx],ebp
  4094cd:	in     eax,0x6e
  4094cf:	(bad)  
  4094d0:	stos   DWORD PTR es:[edi],eax
  4094d1:	xchg   DWORD PTR [esi-0x44],edi
  4094d4:	add    al,0x87
  4094d6:	retf   
  4094d7:	adc    edx,esi
  4094d9:	xor    bh,bl
  4094db:	cmp    bl,0x31
  4094de:	add    DWORD PTR [esi+0x5817696],ecx
  4094e4:	push   esp
  4094e5:	cdq    
  4094e6:	mov    ebx,0xdbe552e8
  4094eb:	(bad)  
  4094ec:	cmp    DWORD PTR [edi+0x5f43629e],ebx
  4094f2:	mov    eax,0x1df2b155
  4094f7:	dec    edx
  4094f8:	xchg   edx,eax
  4094f9:	int3   
  4094fa:	add    DWORD PTR [ecx-0x106b471d],0xc
  409501:	jnp    0x40956d
  409503:	pop    es
  409504:	xor    esp,DWORD PTR [esi+0xdc0b60d]
  40950a:	or     ebp,DWORD PTR [eax]
  40950c:	ja     0x409526
  40950e:	popa   
  40950f:	xchg   BYTE PTR [edx+eiz*4-0x71412724],ch
  409516:	inc    esi
  409517:	push   ebp
  409518:	loopne 0x4094c4
  40951a:	sbb    eax,0x72f45929
  40951f:	out    dx,eax
  409520:	and    al,0x12
  409522:	dec    edi
  409523:	push   ss
  409524:	sar    BYTE PTR ds:0x1d9d0b49,1
  40952a:	jp     0x409522
  40952c:	std    
  40952d:	mov    ah,0xa8
  40952f:	call   0x36480be5
  409534:	popf   
  409535:	hlt    
  409536:	retf   
  409537:	fwait
  409538:	int    0x67
  40953a:	mov    esi,0x80a3f3c1
  40953f:	push   0xbd327555
  409544:	sub    ah,dh
  409546:	popa   
  409547:	adc    eax,0x9bf65015
  40954c:	add    dh,BYTE PTR [edx+0x367685c]
  409552:	sahf   
  409553:	mov    esi,0x64ed59c6
  409558:	push   ss
  409559:	cmp    esp,DWORD PTR [ecx-0x6c8cf999]
  40955f:	push   esp
  409560:	cmp    DWORD PTR [edx+ebp*8],edi
  409563:	nop
  409564:	sar    BYTE PTR [esi+0x4e],1
  409567:	retf   
  409568:	sbb    cl,BYTE PTR [ebx]
  40956a:	jmp    0x4dc214be
  40956f:	loopne 0x4095c7
  409571:	mov    DWORD PTR [ebp-0x72],ecx
  409574:	call   0xea2d4fad
  409579:	mov    ebp,0xe4f86e64
  40957e:	cmp    eax,0x68245eab
  409583:	or     al,0x4e
  409585:	jl     0x4095f2
  409587:	xchg   esp,eax
  409588:	fwait
  409589:	mov    bl,BYTE PTR [eax-0x2e]
  40958c:	jge    0x409526
  40958e:	mov    eax,ds:0xf9f267b5
  409593:	inc    ebp
  409594:	dec    DWORD PTR [ecx+0x495efaa7]
  40959a:	or     BYTE PTR [esi+0x22821157],cl
  4095a0:	xor    DWORD PTR [ebx],eax
  4095a2:	clc    
  4095a3:	and    al,0xac
  4095a5:	mov    dl,0xe7
  4095a7:	xchg   esi,eax
  4095a8:	adc    ebp,DWORD PTR [ebp+ebx*1+0x133cd1fc]
  4095af:	pop    eax
  4095b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b1:	jbe    0x409575
  4095b3:	hlt    
  4095b4:	(bad)  
  4095b6:	pop    edi
  4095b7:	or     DWORD PTR [ecx-0x404e65fc],ebp
  4095bd:	fcomp  DWORD PTR [edi+ebx*2+0x65]
  4095c1:	mov    ds:0xad97a670,eax
  4095c6:	mov    edx,0x9bba6e80
  4095cb:	push   es
  4095cc:	xor    al,0x1
  4095ce:	fistp  WORD PTR [edi+eax*1]
  4095d1:	pop    ds
  4095d2:	(bad)  
  4095d3:	dec    esi
  4095d4:	cmp    eax,0xf352e62e
  4095d9:	mov    esp,0xd41d72fb
  4095de:	stc    
  4095df:	cmp    eax,0xd117995d
  4095e4:	out    0x25,al
  4095e6:	mul    BYTE PTR [esi-0x76]
  4095e9:	in     eax,dx
  4095ea:	sub    eax,0xa96274e0
  4095ef:	aam    0x0
  4095f1:	and    DWORD PTR ds:0x35f5b7a7,0xffffff85
  4095f8:	pop    edi
  4095f9:	adc    ebx,DWORD PTR [ebp+ebp*1-0x4a309115]
  409600:	imul   esp,ebx,0xa163ef9f
  409606:	sbb    al,0x45
  409608:	xor    DWORD PTR [ebx+0x63],0x63
  40960c:	sbb    bh,bl
  40960e:	inc    eax
  40960f:	sbb    ebx,DWORD PTR [edi]
  409611:	sub    DWORD PTR [edi+0x6a],ecx
  409614:	scas   al,BYTE PTR es:[edi]
  409615:	call   0x7892e633
  40961a:	lock hlt 
  40961c:	push   ecx
  40961d:	jg     0x4095d9
  40961f:	adc    al,0x46
  409621:	(bad)  
  409622:	inc    ebp
  409623:	aad    0x72
  409625:	(bad)  
  409626:	and    ah,dh
  409628:	or     al,BYTE PTR [ecx-0x34]
  40962b:	pop    ds
  40962c:	cwde   
  40962d:	mov    bl,0xb0
  40962f:	popa   
  409630:	inc    eax
  409631:	push   ebx
  409632:	and    dl,BYTE PTR [edx]
  409634:	into   
  409635:	sbb    ecx,DWORD PTR [eax]
  409637:	pop    ecx
  409638:	mov    ecx,0xc0c652f4
  40963d:	fnsave [edi]
  40963f:	shl    dl,0x82
  409642:	or     al,0x60
  409644:	dec    ebp
  409645:	dec    eax
  409646:	push   ecx
  409647:	ds in  al,dx
  409649:	clc    
  40964a:	lds    ecx,FWORD PTR [ebp+ecx*8-0x1e691e6a]
  409651:	mov    DWORD PTR [edx+esi*4+0x5d],edi
  409655:	iret   
  409656:	in     al,0x97
  409658:	hlt    
  409659:	push   esp
  40965a:	and    al,0xe
  40965c:	test   al,0xf6
  40965e:	add    al,0x25
  409660:	xor    ecx,ecx
  409662:	out    0x5b,al
  409664:	cmp    esi,DWORD PTR [ebx+0xd]
  409667:	cmc    
  409668:	mov    al,ds:0x46a10118
  40966d:	pop    ss
  40966e:	(bad)  
  40966f:	mov    bl,0x6c
  409671:	cmp    BYTE PTR [edi+eiz*2+0x12884dc6],ch
  409678:	or     al,0x21
  40967a:	inc    esi
  40967b:	in     al,dx
  40967c:	pop    edx
  40967d:	push   eax
  40967e:	stos   BYTE PTR es:[edi],al
  40967f:	retf   0x99aa
  409682:	fcomip st,st(5)
  409684:	xor    DWORD PTR [eax+0x64],edi
  409687:	div    bh
  409689:	fwait
  40968a:	or     ch,bl
  40968c:	and    DWORD PTR [edx],ebp
  40968e:	in     al,0xc7
  409690:	std    
  409691:	lahf   
  409692:	ss sbb eax,0xdd48d398
  409698:	retf   
  409699:	loopne 0x409649
  40969b:	xchg   ecx,eax
  40969c:	jnp    0x409655
  40969e:	test   DWORD PTR [eax+0x13],eax
  4096a1:	add    BYTE PTR [ecx+0x5b236d1a],al
  4096a7:	lock clc 
  4096a9:	dec    esi
  4096aa:	(bad)  
  4096ab:	stos   BYTE PTR es:[edi],al
  4096ac:	bound  esi,QWORD PTR [ecx+0x55b4085b]
  4096b2:	sar    esi,1
  4096b4:	jle    0x4096f8
  4096b6:	mov    bh,0xc6
  4096b8:	mov    eax,ds:0x3b7e96b2
  4096bd:	addr16 ds test cl,al
  4096c1:	inc    ebx
  4096c2:	sub    al,0xe8
  4096c4:	ficom  WORD PTR [ebx]
  4096c6:	mov    eax,0x6f668941
  4096cb:	cmp    al,0x66
  4096cd:	cmp    DWORD PTR ds:0xf9c0af8a,eax
  4096d3:	daa    
  4096d4:	outs   dx,DWORD PTR ds:[esi]
  4096d5:	ja     0x409704
  4096d7:	mov    bh,0xcc
  4096d9:	sub    eax,0x704e512b
  4096de:	mov    BYTE PTR [ecx-0x46757f31],0x23
  4096e5:	rcl    bx,1
  4096e8:	fstp   QWORD PTR [esi+0x28]
  4096eb:	xchg   esp,eax
  4096ec:	jp     0x40968d
  4096ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ef:	or     edx,DWORD PTR [ecx+ebx*4+0x3c9c1350]
  4096f6:	(bad)  
  4096f7:	loop   0x4096f7
  4096f9:	fdivr  DWORD PTR [ecx]
  4096fb:	pop    esi
  4096fc:	icebp  
  4096fd:	icebp  
  4096fe:	mov    edi,0xabf7ba1b
  409703:	imul   ecx,ebx,0xffffffd7
  409706:	arpl   WORD PTR [ecx+0x1b],cx
  409709:	nop
  40970a:	mov    ebx,0x78a00aa2
  40970f:	push   ds
  409710:	cmp    DWORD PTR [edi],0xb974492c
  409716:	imul   ebp,DWORD PTR [ecx+0x511e6334],0x447856b3
  409720:	sbb    ecx,DWORD PTR [edx]
  409722:	xchg   ebp,eax
  409723:	daa    
  409724:	adc    al,0x5e
  409726:	add    BYTE PTR [ecx+ebx*4],cl
  409729:	cs sar dh,cl
  40972c:	and    DWORD PTR [ecx+0x4505eb73],edi
  409732:	test   bl,cl
  409734:	dec    edx
  409735:	popf   
  409736:	sbb    dl,dl
  409738:	sbb    DWORD PTR [ecx+0x2d],ebp
  40973b:	jmp    DWORD PTR [ecx+0x444a281b]
  409741:	mov    eax,0x689b5347
  409746:	inc    edx
  409747:	and    ch,BYTE PTR [eax+0x6468076f]
  40974d:	nop
  40974e:	xor    ah,BYTE PTR [esi+eax*2]
  409751:	jle    0x409757
  409753:	outs   dx,BYTE PTR ds:[esi]
  409754:	mov    bh,0x8f
  409756:	push   0x20
  409758:	jge    0x409707
  40975a:	jnp    0x4097b4
  40975c:	in     al,0x6a
  40975e:	repz inc ebp
  409760:	inc    esp
  409761:	xchg   esp,eax
  409762:	push   ss
  409763:	inc    ebx
  409764:	xchg   DWORD PTR [edi+0x21],edx
  409767:	add    DWORD PTR [edi],esi
  409769:	in     al,0x51
  40976b:	and    dh,BYTE PTR [ecx]
  40976d:	in     eax,dx
  40976e:	sbb    ecx,ebx
  409770:	fimul  DWORD PTR [ebp+0x69]
  409773:	xchg   DWORD PTR [ebx+0x57],edi
  409776:	push   0x717f71f3
  40977b:	pop    ds
  40977c:	pop    es
  40977d:	shl    cl,0xa5
  409780:	dec    edi
  409781:	outs   dx,DWORD PTR ds:[esi]
  409782:	fistp  QWORD PTR [ebx+0x32]
  409785:	mov    DWORD PTR [edx-0x7e],eax
  409788:	dec    esi
  409789:	xchg   dl,dh
  40978b:	cmp    edi,DWORD PTR [esp+edx*8+0x1be4449]
  409792:	dec    eax
  409793:	push   0xffffffd5
  409795:	aas    
  409796:	lods   al,BYTE PTR ds:[esi]
  409797:	scas   al,BYTE PTR es:[edi]
  409798:	(bad)  
  409799:	lods   eax,DWORD PTR ds:[esi]
  40979a:	scas   al,BYTE PTR es:[edi]
  40979b:	fs ja  0x4097ad
  40979e:	xchg   bp,ax
  4097a0:	dec    DWORD PTR [eax+0x4c]
  4097a3:	mov    edi,0xa06e4e86
  4097a8:	icebp  
  4097a9:	call   0x2ce80d56
  4097ae:	popf   
  4097af:	xchg   ecx,eax
  4097b0:	push   ecx
  4097b1:	push   esp
  4097b2:	fld    TBYTE PTR [edi]
  4097b4:	rcr    BYTE PTR [ebx],0x47
  4097b7:	lods   al,BYTE PTR ds:[esi]
  4097b8:	js     0x40979c
  4097ba:	fdiv   DWORD PTR [ebp-0xea9e2c5]
  4097c0:	jmp    0x3335:0xbabd819e
  4097c7:	std    
  4097c8:	dec    esi
  4097c9:	xchg   DWORD PTR ds:0x2016f106,ebp
  4097cf:	jns    0x409826
  4097d1:	mov    ds:0x17520b10,eax
  4097d6:	inc    ecx
  4097d7:	outs   dx,BYTE PTR ds:[esi]
  4097d8:	(bad)  
  4097d9:	aad    0x38
  4097db:	jb     0x40983c
  4097dd:	sub    eax,0xef2210e5
  4097e2:	(bad)  
  4097e3:	mov    BYTE PTR [esi-0x68],0xc9
  4097e7:	adc    bh,BYTE PTR [esi]
  4097e9:	(bad)  
  4097ea:	mov    al,0x46
  4097ec:	sub    DWORD PTR [eax-0x7b],ebx
  4097ef:	sub    BYTE PTR [eax+ebp*4-0x6],bl
  4097f3:	xor    DWORD PTR [ebx],ecx
  4097f5:	sti    
  4097f6:	retf   0xf68a
  4097f9:	dec    esi
  4097fa:	test   BYTE PTR [ebx],al
  4097fc:	inc    edx
  4097fd:	jnp    0x40978e
  4097ff:	xor    DWORD PTR [ecx],ebx
  409801:	inc    edi
  409802:	mov    ebx,0x5c443994
  409807:	jns    0x4097f9
  409809:	cwde   
  40980a:	xor    al,0x86
  40980c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40980d:	mov    ecx,DWORD PTR ds:0x11a34bd6
  409813:	lock lods eax,DWORD PTR ds:[esi]
  409815:	cmp    BYTE PTR [eax],dl
  409817:	push   ecx
  409818:	mov    fs,WORD PTR [ebp+0x1ba8d89b]
  40981e:	pop    ecx
  40981f:	cmp    al,0x6a
  409821:	cmp    ch,BYTE PTR [ecx-0x291b85ca]
  409827:	mov    cl,ch
  409829:	or     DWORD PTR [esi+0x7b0a79cb],edx
  40982f:	fidivr DWORD PTR [edx-0x7cc771b3]
  409835:	mov    ds:0x6810317a,eax
  40983a:	adc    dl,BYTE PTR [esi]
  40983c:	or     eax,esp
  40983e:	lock mov cl,BYTE PTR [eax-0x6]
  409842:	inc    edx
  409843:	xchg   DWORD PTR [edi],eax
  409845:	cli    
  409846:	xchg   ebx,eax
  409847:	push   edx
  409848:	inc    ebx
  409849:	(bad)  
  40984b:	pop    ss
  40984c:	fsubp  st(7),st
  40984e:	out    dx,eax
  40984f:	pop    edi
  409850:	or     al,0x51
  409852:	bound  edx,QWORD PTR [ebx]
  409854:	xor    al,0xf8
  409856:	aam    0xa5
  409858:	sub    ch,bl
  40985a:	and    eax,0x47998f0b
  40985f:	clc    
  409860:	outs   dx,BYTE PTR ds:[esi]
  409861:	xchg   ebx,eax
  409862:	xor    edx,edi
  409864:	hlt    
  409865:	sub    eax,0x3e3ac977
  40986a:	frstor [edi-0x2b]
  40986d:	mov    edx,DWORD PTR [edx-0x409e0161]
  409873:	xor    dl,BYTE PTR [esi]
  409875:	cwde   
  409876:	scas   al,BYTE PTR es:[edi]
  409877:	fild   WORD PTR [edi+edx*4-0x76e48393]
  40987e:	(bad)  
  40987f:	sub    eax,0xe251826b
  409884:	inc    ebx
  409885:	data16 std 
  409887:	mov    ds,ebp
  409889:	push   ebp
  40988a:	pop    ss
  40988b:	bound  ecx,QWORD PTR [edx+0x3317e99d]
  409891:	and    eax,0x33ce0c1d
  409896:	jp     0x4098d9
  409898:	jns    0x409856
  40989a:	push   edx
  40989b:	mov    cl,0x67
  40989d:	in     al,0xb3
  40989f:	and    edi,0xe38c3fdb
  4098a5:	cmp    al,0x53
  4098a7:	cmp    al,0x7b
  4098a9:	push   eax
  4098aa:	mov    eax,0x7d1b2561
  4098af:	push   eax
  4098b0:	mov    bl,0x56
  4098b2:	in     al,0xa4
  4098b4:	imul   DWORD PTR [edx+0x45]
  4098b7:	sbb    BYTE PTR [edx-0x53ed2598],cl
  4098bd:	popa   
  4098be:	jb     0x40989c
  4098c0:	addr16 retf 0xb0bf
  4098c4:	les    esi,FWORD PTR [ebx]
  4098c6:	call   0x5eb491f6
  4098cb:	dec    ebp
  4098cc:	mov    ah,0x40
  4098ce:	dec    esp
  4098cf:	call   0x8807e92e
  4098d4:	dec    esp
  4098d5:	shl    BYTE PTR [edi+0x64405366],cl
  4098db:	aad    0x34
  4098dd:	scas   eax,DWORD PTR es:[edi]
  4098de:	pushf  
  4098df:	xor    bh,ch
  4098e1:	mov    dh,0x13
  4098e3:	dec    ecx
  4098e4:	inc    ebx
  4098e5:	or     al,0x85
  4098e7:	pop    es
  4098e8:	pop    ebx
  4098e9:	mov    ebx,DWORD PTR [esi+0x51343fa5]
  4098ef:	jg     0x40996c
  4098f1:	sub    ch,BYTE PTR [edi]
  4098f3:	enter  0x56c8,0x57
  4098f7:	hlt    
  4098f8:	adc    BYTE PTR [edi-0x6],bl
  4098fb:	mov    dh,0x7f
  4098fd:	call   DWORD PTR [edi-0x28]
  409900:	jnp    0x40994d
  409902:	in     eax,dx
  409903:	push   ecx
  409904:	jno    0x4098e6
  409906:	ins    BYTE PTR es:[edi],dx
  409907:	rcl    DWORD PTR [ebx-0x66],1
  40990a:	sbb    DWORD PTR [ecx+0x2df5d84f],0x4b
  409911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409912:	fldcw  WORD PTR [edi-0x507ff93c]
  409918:	xor    al,0x62
  40991a:	adc    bl,BYTE PTR [ecx+0x3d]
  40991d:	jb     0x40993c
  40991f:	cli    
  409920:	mov    ?,eax
  409922:	mov    ecx,0x973d5300
  409927:	sbb    BYTE PTR ds:0xc130a107,dl
  40992d:	sbb    al,BYTE PTR [esi]
  40992f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409930:	mov    DWORD PTR [edx],ebp
  409932:	mov    ch,0x61
  409934:	cs push cs
  409936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409937:	fcmovb st,st(7)
  409939:	out    0xe,al
  40993b:	push   esp
  40993c:	xchg   BYTE PTR [ecx],al
  40993e:	pop    esp
  40993f:	sub    BYTE PTR [ecx+0x39ef8651],dh
  409945:	jp     0x4099c5
  409947:	xchg   dh,bh
  409949:	aaa    
  40994a:	nop
  40994b:	push   ebx
  40994c:	fsubr  st,st(4)
  40994e:	stc    
  40994f:	cs int3 
  409951:	inc    ebp
  409952:	(bad)  
  409953:	aam    0xfc
  409955:	stos   DWORD PTR es:[edi],eax
  409956:	bound  edi,QWORD PTR [eax-0x78]
  409959:	dec    ecx
  40995a:	or     eax,0xf6dbf55
  40995f:	out    dx,al
  409960:	mov    ecx,0xd133da78
  409965:	(bad)  
  409967:	jo     0x40994e
  409969:	(bad)  
  40996a:	popf   
  40996b:	and    edx,ebx
  40996d:	jmp    0x370b:0x100d2f0e
  409974:	pop    eax
  409975:	jecxz  0x409923
  409977:	aaa    
  409978:	sbb    DWORD PTR [edi+0x4911fe2f],edx
  40997e:	(bad)  
  40997f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409980:	(bad)  
  409983:	ins    DWORD PTR es:[edi],dx
  409984:	in     eax,0xa6
  409986:	push   0xda4648d4
  40998b:	mov    al,0xdf
  40998d:	in     al,0x15
  40998f:	callw  0x737d
  409993:	sbb    eax,0x3cfed96d
  409998:	jp     0x40995c
  40999a:	pop    eax
  40999b:	fidiv  WORD PTR ds:0x2cea1873
  4099a1:	and    eax,0x88b80e07
  4099a6:	repnz ror DWORD PTR [edx+0x1f],cl
  4099aa:	pop    ebp
  4099ab:	xlat   BYTE PTR ds:[ebx]
  4099ac:	arpl   WORD PTR [ebx-0x3a9d4765],bx
  4099b2:	pop    edx
  4099b3:	mov    edi,0x63dfe6b8
  4099b8:	inc    ecx
  4099b9:	or     BYTE PTR [edx-0x7f814078],bl
  4099bf:	imul   edi,DWORD PTR ds:0x5a63169f,0xffffffdf
  4099c6:	les    ebx,FWORD PTR [ebx+0x6f]
  4099c9:	sti    
  4099ca:	enter  0x241c,0xb7
  4099ce:	mov    WORD PTR [edx+0x6b],cs
  4099d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099d2:	lds    ebp,FWORD PTR [esi+0x2c]
  4099d5:	sub    DWORD PTR [ecx-0x6e81c8a3],edi
  4099db:	xor    bl,0xbb
  4099de:	fcom   st(2)
  4099e0:	popa   
  4099e1:	adc    DWORD PTR [ebx],ecx
  4099e3:	mov    ebx,0xda0ddf8e
  4099e8:	(bad)
  4099ec:	mov    eax,ds:0xa801734c
  4099f1:	inc    DWORD PTR [ebx+0x64]
  4099f4:	es aaa 
  4099f6:	lods   eax,DWORD PTR ds:[esi]
  4099f7:	pusha  
  4099f8:	stc    
  4099f9:	sar    DWORD PTR [ebx-0x14a1cf6e],cl
  4099ff:	cmp    al,0x84
  409a01:	inc    esi
  409a02:	pop    ds
  409a03:	pop    ebp
  409a04:	jnp    0x409a66
  409a06:	pop    edx
  409a07:	xchg   DWORD PTR [ecx+0x1d1799],edi
  409a0d:	pop    ebp
  409a0e:	or     al,0x38
  409a10:	test   edx,esp
  409a12:	pop    edi
  409a13:	xchg   esi,eax
  409a14:	(bad)  
  409a15:	pop    esi
  409a16:	mov    ebp,0xa02e9283
  409a1b:	jmp    0xc35b0f0
  409a20:	imul   ecx,DWORD PTR [ecx],0x38a0eafc
  409a26:	fcomp  DWORD PTR [ebx+0x609daef6]
  409a2c:	mov    BYTE PTR [ecx+0x2b],dh
  409a2f:	push   esp
  409a30:	test   ebx,esp
  409a32:	mov    WORD PTR [ebp+ecx*2-0x280a751d],ss
  409a39:	mov    eax,0x6c862da6
  409a3e:	imul   ecx,DWORD PTR [ebp-0x7187a4b5],0x35
  409a45:	push   ds
  409a46:	dec    esp
  409a47:	or     al,0xc3
  409a49:	stc    
  409a4a:	xchg   edi,eax
  409a4b:	xor    al,0x34
  409a4d:	scas   al,BYTE PTR es:[edi]
  409a4e:	loope  0x409a20
  409a50:	cmp    esp,DWORD PTR [edi-0x35f2d99b]
  409a56:	xor    DWORD PTR [esi],ebp
  409a58:	dec    ebx
  409a59:	and    bl,BYTE PTR [ecx-0x2cc79e31]
  409a5f:	xor    DWORD PTR [eax],0x2fa27bae
  409a65:	bound  esi,QWORD PTR [esi-0x62f0e26]
  409a6b:	pop    DWORD PTR [edx-0x233890f3]
  409a71:	xchg   edx,eax
  409a72:	sahf   
  409a73:	mov    edx,DWORD PTR [edx]
  409a75:	push   0x5a78ecc4
  409a7a:	sbb    eax,0x62d5124e
  409a7f:	or     ebp,DWORD PTR [edi]
  409a81:	xchg   ebp,eax
  409a82:	rcr    BYTE PTR [ebx],1
  409a84:	mov    edx,0xf3e5168d
  409a89:	xor    ebp,DWORD PTR [ecx+0x7f]
  409a8c:	repnz mov esp,0x47fd4be8
  409a92:	jecxz  0x409a52
  409a94:	and    al,0xa6
  409a96:	fisub  DWORD PTR [eax+0x2ee083e3]
  409a9c:	dec    esi
  409a9d:	in     eax,0xd9
  409a9f:	inc    ebx
  409aa0:	pop    ss
  409aa1:	pusha  
  409aa2:	ja     0x409a31
  409aa4:	inc    eax
  409aa5:	neg    DWORD PTR [eax+0x12b22af3]
  409aab:	pop    ds
  409aac:	in     eax,dx
  409aad:	psraw  mm7,QWORD PTR [ecx-0x3a]
  409ab1:	jne    0x409a44
  409ab3:	adc    bl,dh
  409ab5:	jno    0x409abc
  409ab7:	dec    edi
  409ab8:	fstp   DWORD PTR [edi-0x2fca99cc]
  409abe:	xchg   edi,eax
  409abf:	test   bh,dh
  409ac1:	(bad)  
  409ac3:	jg     0x409b07
  409ac5:	cli    
  409ac6:	sahf   
  409ac7:	rcr    eax,1
  409ac9:	mov    dl,0x7e
  409acb:	or     al,0xf5
  409acd:	sbb    DWORD PTR [edx+0x41],edx
  409ad0:	cwde   
  409ad1:	(bad)  
  409ad2:	adc    ch,ch
  409ad4:	xor    DWORD PTR ds:0x4689fbee,ebp
  409ada:	stos   BYTE PTR es:[edi],al
  409adb:	out    dx,eax
  409adc:	out    dx,al
  409add:	inc    ebp
  409ade:	mov    ch,0xfe
  409ae0:	rcl    BYTE PTR [ebx],1
  409ae2:	xchg   esi,eax
  409ae3:	je     0x409acf
  409ae5:	(bad)  
  409ae6:	jmp    0x11bf:0x8d56986c
  409aed:	pusha  
  409aee:	jg     0x409afd
  409af0:	mov    dl,0x2a
  409af2:	sub    DWORD PTR [ebp+0x782a5acc],0xffffffd1
  409af9:	in     eax,dx
  409afa:	push   eax
  409afb:	and    BYTE PTR [edi],dl
  409afd:	pusha  
  409afe:	ins    DWORD PTR es:[edi],dx
  409aff:	jge    0x409b40
  409b01:	mov    ?,esp
  409b03:	aad    0x5a
  409b05:	adc    eax,0xf9fe38d2
  409b0a:	outs   dx,DWORD PTR ds:[esi]
  409b0b:	popf   
  409b0c:	pop    ebx
  409b0d:	jp     0x409b03
  409b0f:	mov    ds:0x4b38fe71,al
  409b14:	cwde   
  409b15:	call   0x243b:0x80d0640d
  409b1c:	push   ebx
  409b1d:	jnp    0x409adc
  409b1f:	inc    eax
  409b20:	(bad)  
  409b21:	sar    DWORD PTR [ebx+eiz*8-0x21e4d292],1
  409b28:	inc    edi
  409b29:	mov    esp,0x7a88efc9
  409b2e:	clc    
  409b2f:	fwait
  409b30:	and    ecx,DWORD PTR [esi+0x12]
  409b33:	les    eax,FWORD PTR [edi]
  409b35:	ror    BYTE PTR [esi-0x44],cl
  409b38:	jmp    0x162da09e
  409b3d:	bound  edx,QWORD PTR [ecx-0x5619512c]
  409b43:	jb     0x409b96
  409b45:	mov    ebx,es
  409b47:	push   0xffffffa9
  409b49:	inc    edi
  409b4a:	dec    edx
  409b4b:	leave  
  409b4c:	test   DWORD PTR [eax],ebx
  409b4e:	push   edi
  409b4f:	jne    0x409bc1
  409b51:	dec    esp
  409b52:	sbb    DWORD PTR [edx+0x31],ebx
  409b55:	sbb    DWORD PTR [ecx+0x590f2191],ebp
  409b5b:	cmp    DWORD PTR [edi+0x11],edx
  409b5e:	mov    ebp,0xc1da322c
  409b63:	and    bh,BYTE PTR [eax-0x2]
  409b66:	ss jnp 0x409b4b
  409b69:	mov    esi,0x43f7e4f8
  409b6e:	adc    DWORD PTR [eax*2+0x2f6a9f3f],0xb9b22901
  409b79:	mov    bl,BYTE PTR [ebx]
  409b7b:	mov    cl,0xc7
  409b7d:	cmp    DWORD PTR [edx-0x46],esp
  409b80:	sub    DWORD PTR [edi-0x584acb05],ebp
  409b86:	dec    ecx
  409b87:	mov    ebp,DWORD PTR [eax+edi*8+0x4887325c]
  409b8e:	repz jl 0x409b82
  409b91:	jbe    0x409b6e
  409b93:	inc    ebp
  409b94:	dec    esp
  409b95:	pop    esi
  409b96:	test   BYTE PTR [ebx-0x4fa20fc3],cl
  409b9c:	jnp    0x409b93
  409b9e:	int3   
  409b9f:	mov    ah,0x41
  409ba1:	ficomp DWORD PTR [edx+0x2d78e3b2]
  409ba7:	pushf  
  409ba8:	push   edi
  409ba9:	fisttp DWORD PTR [eax-0x18]
  409bac:	sbb    DWORD PTR [edx+0x5e85aa5e],ebx
  409bb2:	fldcw  WORD PTR [esi+ecx*2+0x283cfe7]
  409bb9:	jmp    0x2c64c2fa
  409bbe:	aaa    
  409bbf:	jmp    0x409b95
  409bc1:	aas    
  409bc2:	jo     0x409b75
  409bc4:	(bad)  
  409bc5:	cli    
  409bc6:	cmp    ebp,ebx
  409bc8:	fnstcw WORD PTR [ebx+0x1bf27bf8]
  409bce:	mov    ?,WORD PTR [edx+ebp*8+0x67]
  409bd2:	out    0x40,al
  409bd4:	xor    DWORD PTR [eax-0x2c],ebp
  409bd7:	imul   ebp,DWORD PTR [esi],0xebf3a2be
  409bdd:	xchg   ecx,eax
  409bde:	sub    DWORD PTR [esi+0x2a3b9a2e],edx
  409be4:	jne    0x409ba4
  409be6:	cmc    
  409be7:	push   ecx
  409be8:	xchg   esp,eax
  409be9:	cld    
  409bea:	leave  
  409beb:	inc    ebp
  409bec:	out    0x16,al
  409bee:	mov    eax,ds:0x5639135b
  409bf3:	push   edx
  409bf4:	dec    ebx
  409bf5:	faddp  st(2),st
  409bf7:	leave  
  409bf8:	fs ss ret 0xfc61
  409bfd:	lea    edx,[eax+0x4339733d]
  409c03:	push   edx
  409c04:	pop    esi
  409c05:	ret    0xf91
  409c08:	mov    esi,0xa6b99024
  409c0d:	or     eax,0x56229d46
  409c12:	fisttp DWORD PTR [ebp-0x4c55f410]
  409c18:	pop    ecx
  409c19:	shl    bl,cl
  409c1b:	add    al,0xfc
  409c1d:	div    DWORD PTR [esi+0x33c5a7f5]
  409c23:	jmp    0xa63b:0xd58c568a
  409c2a:	rep outs dx,DWORD PTR ds:[esi]
  409c2c:	push   ebp
  409c2d:	xchg   ebx,eax
  409c2e:	cwde   
  409c2f:	bound  ebp,QWORD PTR [edi+0x70]
  409c32:	into   
  409c33:	sub    eax,0x9aaab845
  409c38:	and    eax,0x13790ec2
  409c3d:	inc    DWORD PTR [esi]
  409c3f:	sub    DWORD PTR [edi+0x10],ebx
  409c42:	add    BYTE PTR [ebp+0x1],0x1a
  409c46:	or     al,0x42
  409c48:	sbb    al,0x96
  409c4a:	ins    BYTE PTR es:[edi],dx
  409c4b:	imul   esi,DWORD PTR [ebx-0x72],0xffffffec
  409c4f:	out    0xa2,al
  409c51:	push   edi
  409c52:	rol    BYTE PTR [edx-0x11],1
  409c55:	xor    dh,0x7c
  409c58:	lods   al,BYTE PTR ds:[esi]
  409c59:	mov    edx,DWORD PTR [edx]
  409c5b:	inc    esp
  409c5c:	sbb    eax,0xcff0873d
  409c61:	mov    dh,BYTE PTR [ebx-0x5fbac4be]
  409c67:	stc    
  409c68:	retf   
  409c69:	les    ecx,FWORD PTR [esi+0x32]
  409c6c:	call   0x6d61:0xa519f054
  409c73:	mov    esp,0x5864fd15
  409c78:	or     al,al
  409c7a:	mov    ds:0x53c08999,eax
  409c7f:	in     eax,dx
  409c80:	xchg   edi,eax
  409c81:	pusha  
  409c82:	push   ds
  409c83:	cmp    edx,DWORD PTR [edx+0x13]
  409c86:	add    DWORD PTR [ecx+0x1a3d0048],ecx
  409c8c:	add    DWORD PTR [ecx+ecx*1],ebp
  409c8f:	gs sbb al,0x2e
  409c92:	lods   al,BYTE PTR ds:[esi]
  409c93:	push   ecx
  409c94:	test   eax,0x743f385f
  409c99:	clc    
  409c9a:	loop   0x409c9e
  409c9c:	call   0xc736:0xd6ab5973
  409ca3:	cld    
  409ca4:	inc    esi
  409ca5:	push   esp
  409ca6:	push   cs
  409ca7:	sbb    esp,ebx
  409ca9:	sub    dh,BYTE PTR [ebx+edx*8-0x693c9a19]
  409cb0:	inc    edx
  409cb1:	fimul  DWORD PTR [ecx-0x641bc7e]
  409cb7:	mov    edi,0x505b71e7
  409cbc:	sti    
  409cbd:	and    eax,0x766e2ad0
  409cc2:	jp     0x409cd4
  409cc4:	mov    DWORD PTR [ebx+0x6c],eax
  409cc7:	or     al,0xd
  409cc9:	push   ss
  409cca:	lods   eax,DWORD PTR ds:[esi]
  409ccb:	adc    DWORD PTR [eax],eax
  409ccd:	add    dh,BYTE PTR ds:0x2320c321
  409cd3:	dec    ecx
  409cd4:	hlt    
  409cd5:	jnp    0x409c6c
  409cd7:	aad    0x96
  409cd9:	dec    esi
  409cda:	ja     0x409d2d
  409cdc:	bound  eax,QWORD PTR [ecx+eax*4-0x6d2cb05a]
  409ce3:	leave  
  409ce4:	call   0x61470e63
  409ce9:	push   ecx
  409cea:	dec    ecx
  409ceb:	jb     0x409d18
  409ced:	adc    dl,BYTE PTR [eax-0x7df56259]
  409cf3:	pop    ss
  409cf4:	mov    cs,WORD PTR [edx+0x526d9a82]
  409cfa:	sub    cl,dl
  409cfc:	bound  ecx,QWORD PTR [eax-0x7b]
  409cff:	stc    
  409d00:	xchg   DWORD PTR [esi],edi
  409d02:	cmp    al,0xe6
  409d04:	movzx  edx,WORD PTR [ecx-0x1f]
  409d08:	sti    
  409d09:	jle    0x409d63
  409d0b:	jo     0x409cc6
  409d0d:	jne    0x409d81
  409d0f:	jge    0x409d48
  409d11:	cli    
  409d12:	test   DWORD PTR [ecx+0xb1784ad],0xf48ccb31
  409d1c:	mov    edi,DWORD PTR [eax-0x23]
  409d1f:	mov    ds:0x788412f4,eax
  409d24:	push   ebp
  409d25:	fadd   DWORD PTR [edx]
  409d27:	js     0x409d96
  409d29:	sub    eax,0x40fb8465
  409d2e:	cmp    bl,BYTE PTR [esi-0x429dcd2b]
  409d34:	push   eax
  409d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d36:	sar    BYTE PTR [eax+ecx*1-0xd3a149],0x5d
  409d3e:	pop    ebx
  409d3f:	inc    esi
  409d40:	mov    ebp,?
  409d42:	adc    ah,ch
  409d44:	es mov al,0xe9
  409d47:	mov    ds:0x739cd442,eax
  409d4c:	adc    ch,dl
  409d4e:	(bad)  
  409d4f:	imul   ecx,DWORD PTR [eax+0x6],0x22
  409d53:	cdq    
  409d54:	aam    0x77
  409d56:	jnp    0x409d44
  409d58:	or     dl,BYTE PTR [edx+eiz*1]
  409d5b:	imul   edi,esi,0xffffffb6
  409d5e:	fidiv  WORD PTR [ecx+0x3727f647]
  409d64:	imul   edx,DWORD PTR [ecx+edx*1+0x1c],0x27
  409d69:	fcomp  QWORD PTR [eax]
  409d6b:	out    0x7b,eax
  409d6d:	mov    eax,ds:0x5387d0d3
  409d72:	pop    ecx
  409d73:	cwde   
  409d74:	pop    esi
  409d75:	repz call 0x795f:0x15071126
  409d7d:	dec    esi
  409d7e:	inc    esi
  409d7f:	sbb    ebp,DWORD PTR [edx-0x1d]
  409d82:	inc    esi
  409d83:	inc    ebx
  409d84:	push   esi
  409d85:	pop    eax
  409d86:	cli    
  409d87:	sbb    eax,0x9ada0f21
  409d8c:	stos   WORD PTR es:[edi],ax
  409d8e:	mov    ah,0x7b
  409d90:	repnz push ds
  409d92:	lods   eax,DWORD PTR ds:[esi]
  409d93:	jecxz  0x409de6
  409d95:	inc    eax
  409d96:	jmp    0x409da4
  409d98:	(bad)
  409d9b:	div    BYTE PTR [esi-0x5b970003]
  409da1:	xor    ecx,eax
  409da3:	push   es
  409da4:	sub    al,0x19
  409da6:	ja     0x409dff
  409da8:	mov    al,ds:0xbc825267
  409dad:	dec    ebp
  409dae:	mov    ds:0x32642f83,al
  409db3:	pop    es
  409db4:	inc    ecx
  409db5:	jle    0x409dc8
  409db7:	sbb    BYTE PTR [esi+0x6f],0xba
  409dbb:	pop    edx
  409dbc:	inc    ebx
  409dbd:	nop
  409dbe:	loope  0x409e22
  409dc0:	je     0x409e0b
  409dc2:	aaa    
  409dc3:	sbb    al,0xd5
  409dc5:	rcl    DWORD PTR [eax+0x2d005358],cl
  409dcb:	cmp    eax,0x60fa90cf
  409dd0:	lods   eax,DWORD PTR ds:[esi]
  409dd1:	mov    bl,0xec
  409dd3:	add    eax,0xdb5a319e
  409dd8:	test   BYTE PTR [ecx-0x3d],0xf2
  409ddc:	std    
  409ddd:	mov    edx,0x54182c4a
  409de2:	sbb    cl,bh
  409de4:	(bad)  [esi+esi*8+0x5a]
  409de8:	or     al,0x29
  409dea:	sub    BYTE PTR [ecx+0x74],bh
  409ded:	cmp    eax,DWORD PTR [eax]
  409def:	scas   eax,DWORD PTR es:[edi]
  409df0:	or     eax,0x205c29e2
  409df5:	shl    DWORD PTR [ebx+ebx*1-0x716b8e88],0x13
  409dfd:	adc    esi,DWORD PTR [esp+ecx*1-0x3e7ce210]
  409e04:	sti    
  409e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e06:	inc    edi
  409e07:	mov    al,0x1b
  409e09:	in     eax,0x3f
  409e0b:	mov    ah,0x2d
  409e0d:	inc    edx
  409e0e:	push   ebp
  409e0f:	mov    ds:0xe0639a69,eax
  409e14:	mov    dl,0x14
  409e16:	sub    al,0x4d
  409e18:	dec    edx
  409e19:	test   BYTE PTR [ebp+0x6501a87a],cl
  409e1f:	or     BYTE PTR [edi-0x44ef0375],ah
  409e25:	mov    ds,WORD PTR [ebx]
  409e27:	mov    eax,ds:0x78532508
  409e2c:	call   0x1b9dad92
  409e31:	sub    al,0x2e
  409e33:	loop   0x409e99
  409e35:	dec    esp
  409e36:	imul   eax,ecx,0xffffffbc
  409e39:	leave  
  409e3a:	ret    0xfb43
  409e3d:	fsub   DWORD PTR [ebx+0xc]
  409e40:	test   al,0xa2
  409e42:	aam    0xc6
  409e44:	jp     0x409eb1
  409e46:	leave  
  409e47:	dec    eax
  409e48:	xor    ecx,DWORD PTR [ebx-0x6f]
  409e4b:	pop    ecx
  409e4c:	mov    esi,0xed8f0d2e
  409e51:	call   0xaca1f577
  409e56:	rol    BYTE PTR [edi],0x5f
  409e59:	in     al,dx
  409e5a:	push   0x5fe035c0
  409e5f:	clc    
  409e60:	lahf   
  409e61:	jno    0x409e7e
  409e63:	or     ecx,DWORD PTR [ebp-0x23]
  409e66:	outs   dx,BYTE PTR ds:[esi]
  409e67:	ds je  0x409ec1
  409e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e6b:	lds    edi,FWORD PTR [ecx]
  409e6d:	out    0xfe,al
  409e6f:	retf   0x87a2
  409e72:	and    eax,0x1db1d6eb
  409e77:	fild   DWORD PTR [ebp-0x63a1ef58]
  409e7d:	leave  
  409e7e:	clc    
  409e7f:	sbb    BYTE PTR [esi],0x74
  409e82:	mov    esi,0xbf8d1db4
  409e87:	jmp    0x6b4d5acc
  409e8c:	es jge 0x409ede
  409e8f:	push   eax
  409e90:	clc    
  409e91:	sbb    al,bl
  409e93:	push   ecx
  409e94:	rep outs dx,BYTE PTR ds:[esi]
  409e96:	data16 fwait
  409e98:	test   al,0xb7
  409e9a:	xchg   edi,eax
  409e9b:	or     al,BYTE PTR [edi+0xda8826e]
  409ea1:	xor    al,0x68
  409ea3:	push   cs
  409ea4:	fs add eax,0x45469c2e
  409eaa:	sbb    cl,ah
  409eac:	push   ebx
  409ead:	xlat   BYTE PTR ds:[ebx]
  409eae:	xchg   BYTE PTR [ecx+ebp*2],cl
  409eb1:	les    edx,FWORD PTR [ebp+ebx*1-0x2b044e0a]
  409eb8:	inc    ebp
  409eb9:	jns    0x409e7a
  409ebb:	shl    DWORD PTR [edx+0x56],1
  409ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ebf:	rol    DWORD PTR [ecx+0x286b96d0],0x2f
  409ec6:	ror    BYTE PTR [ecx],0xd3
  409ec9:	stos   BYTE PTR es:[di],al
  409ecb:	or     DWORD PTR fs:[edx+0x377b565b],edi
  409ed2:	dec    esp
  409ed3:	daa    
  409ed4:	bound  ecx,QWORD PTR [ecx-0x4bb1baf5]
  409eda:	dec    esp
  409edb:	dec    esi
  409edc:	adc    edi,ecx
  409ede:	inc    eax
  409edf:	adc    eax,0x7cd2ce39
  409ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ee5:	repnz adc ah,BYTE PTR [ebp-0xac31d5a]
  409eec:	loopne 0x409f4e
  409eee:	rol    esi,1
  409ef0:	add    eax,0x7471b964
  409ef5:	cld    
  409ef6:	lock or esi,DWORD PTR [ecx*8-0xe6f701f]
  409efe:	aaa    
  409eff:	arpl   WORD PTR [ebp+0x14],si
  409f02:	enter  0x1c11,0xce
  409f06:	mov    ds:0x7b9684a4,al
  409f0b:	inc    ebp
  409f0c:	fstp   DWORD PTR [ebx-0x37]
  409f0f:	sbb    al,0xad
  409f11:	ds inc eax
  409f13:	or     al,0xff
  409f15:	sub    al,0x7e
  409f17:	loopne 0x409e9e
  409f19:	cmc    
  409f1a:	xor    dh,BYTE PTR [ebp+0x6b]
  409f1d:	adc    BYTE PTR [ebp+0x399f2b9f],ah
  409f23:	jmp    0x1ee06c2f
  409f28:	mov    eax,ds:0x3897973
  409f2d:	jmp    0xabbde1c2
  409f32:	ins    DWORD PTR es:[edi],dx
  409f33:	mov    ds:0x871ac91e,eax
  409f38:	fisttp WORD PTR [ebp+eax*8-0x26aa3497]
  409f3f:	enter  0x616c,0x93
  409f43:	xchg   DWORD PTR [edx-0x5c],eax
  409f46:	ror    BYTE PTR [ebx+edx*1+0x5d83faa9],cl
  409f4d:	inc    ecx
  409f4e:	push   es
  409f4f:	mov    ebx,0xba417dff
  409f54:	inc    ebp
  409f55:	jbe    0x409eee
  409f57:	adc    edx,ecx
  409f59:	inc    ebp
  409f5a:	out    dx,al
  409f5b:	mov    eax,0x72b3431b
  409f60:	ja     0x409ee6
  409f62:	pop    ss
  409f63:	mov    WORD PTR [esi+0x6a31f9fd],cs
  409f69:	ja     0x409f86
  409f6b:	sbb    eax,0x28478920
  409f70:	idiv   BYTE PTR [edx+0x73]
  409f73:	out    0xfb,eax
  409f75:	(bad)  [eax-0x2ec6c2a6]
  409f7b:	add    eax,edi
  409f7d:	pop    ebx
  409f7e:	js     0x409f05
  409f80:	pusha  
  409f81:	mov    WORD PTR [esi],ds
  409f83:	fsub   st(1),st
  409f85:	xor    al,0x87
  409f87:	pop    ebp
  409f88:	call   0x2fdf:0x5e3de8b0
  409f8f:	aaa    
  409f90:	add    al,0x4e
  409f92:	xchg   ebp,eax
  409f93:	das    
  409f94:	or     ebp,DWORD PTR [esi]
  409f96:	sbb    al,0x1d
  409f98:	mov    al,0xfe
  409f9a:	push   ecx
  409f9b:	(bad)  
  409f9c:	fisttp DWORD PTR [esi]
  409f9e:	jbe    0x409fdb
  409fa0:	jbe    0x409f49
  409fa2:	xor    al,0xfb
  409fa4:	pop    esi
  409fa5:	mov    al,0xa7
  409fa7:	addr16 sbb al,0x92
  409faa:	aaa    
  409fab:	dec    edx
  409fac:	in     eax,0x54
  409fae:	or     eax,0xc72099c0
  409fb3:	cmp    eax,0x82c86d55
  409fb8:	stos   BYTE PTR es:[edi],al
  409fb9:	add    eax,DWORD PTR [esi+0x5976daa1]
  409fbf:	or     DWORD PTR [eax],edi
  409fc1:	lods   eax,DWORD PTR ds:[esi]
  409fc2:	or     eax,0xf871bfe5
  409fc7:	jg     0x409f95
  409fc9:	jo     0x40a01d
  409fcb:	adc    BYTE PTR ds:0x9f9affa4,cl
  409fd1:	fisub  WORD PTR [ebx]
  409fd3:	dec    ebp
  409fd4:	cli    
  409fd5:	mov    ebx,0xffb0a837
  409fda:	push   esi
  409fdb:	(bad)  
  409fdc:	div    DWORD PTR [ebx+0x3df3b88d]
  409fe2:	mov    bl,cl
  409fe4:	mov    ds,WORD PTR [ecx-0x26084d9a]
  409fea:	sbb    dh,dh
  409fec:	pop    es
  409fed:	loopne 0x409fe6
  409fef:	adc    bl,ch
  409ff1:	mov    eax,ds:0xafebc4e4
  409ff6:	ror    BYTE PTR [ebx+0x3abe86f7],1
  409ffc:	or     DWORD PTR [eax+0x6f],esp
  409fff:	(bad)  
  40a000:	jle    0x40a058
  40a002:	js     0x409fef
  40a004:	ins    DWORD PTR es:[edi],dx
  40a005:	jl     0x409fe8
  40a007:	mov    cl,0x9a
  40a009:	js     0x409fbe
  40a00b:	and    DWORD PTR [edx],esp
  40a00d:	std    
  40a00e:	xor    BYTE PTR [edx-0x43],bh
  40a011:	jno    0x40a022
  40a013:	adc    al,0x77
  40a015:	sbb    al,0xa0
  40a017:	loopne 0x40a08a
  40a019:	cmp    eax,0xa4f34bac
  40a01e:	outs   dx,DWORD PTR ds:[esi]
  40a01f:	in     al,0x85
  40a021:	scas   eax,DWORD PTR es:[edi]
  40a022:	shl    DWORD PTR [edx],cl
  40a024:	test   esi,esi
  40a026:	jmp    0x409fd8
  40a028:	repnz in eax,dx
  40a02a:	sbb    BYTE PTR [ebx-0x6c],0x5c
  40a02e:	adc    BYTE PTR [edx+0x40],ch
  40a031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a032:	add    edx,eax
  40a034:	ret    
  40a035:	adc    BYTE PTR [ebx],0xbb
  40a038:	push   ebx
  40a039:	dec    ebp
  40a03a:	inc    eax
  40a03b:	mov    WORD PTR [ecx],gs
  40a03d:	aaa    
  40a03e:	arpl   WORD PTR [edx+0x4e],si
  40a041:	and    dl,dh
  40a043:	sbb    DWORD PTR [ebx],edi
  40a045:	xor    DWORD PTR [ecx],ebx
  40a047:	push   ds
  40a048:	in     al,dx
  40a049:	cmp    al,0x7c
  40a04b:	mov    bh,0x6b
  40a04d:	sub    al,0x31
  40a04f:	pop    ebp
  40a050:	std    
  40a051:	push   es
  40a052:	retf   0xf918
  40a055:	mov    DWORD PTR [edi],esi
  40a057:	das    
  40a058:	sbb    eax,0x4cb8117b
  40a05d:	xchg   BYTE PTR [edx-0x29958b58],ch
  40a063:	cmc    
  40a064:	xchg   ecx,eax
  40a065:	and    dh,bh
  40a067:	xor    DWORD PTR [ecx-0x55],esi
  40a06a:	sbb    al,0xbc
  40a06c:	push   edi
  40a06d:	sub    cl,BYTE PTR [esi-0x71b38abe]
  40a073:	add    al,0xb
  40a075:	loope  0x40a094
  40a077:	mov    ds:0xd4b975ff,al
  40a07c:	cmp    ebp,DWORD PTR [ebp-0x22f1826b]
  40a082:	cmp    dl,BYTE PTR [ebx-0x6e]
  40a085:	push   0x2fb2e1fb
  40a08a:	call   0x5ecd:0xb65dff63
  40a091:	dec    eax
  40a092:	dec    esp
  40a093:	retf   0xb5c7
  40a096:	xchg   edi,eax
  40a097:	push   ebp
  40a098:	push   ebx
  40a099:	or     eax,0xc28e84e1
  40a09e:	fs mov edx,0x5cc52dec
  40a0a4:	or     eax,0x9dda8557
  40a0a9:	fistp  QWORD PTR [edx]
  40a0ab:	ret    
  40a0ac:	sub    DWORD PTR [ebx+0x54e8a9a],esi
  40a0b2:	cmp    al,0xf7
  40a0b4:	xor    DWORD PTR [ebp+0x730ae578],0xffffffcf
  40a0bb:	jae    0x40a064
  40a0bd:	in     eax,dx
  40a0be:	jbe    0x40a13b
  40a0c0:	mov    ds:0xceb5d9a6,al
  40a0c5:	lods   al,BYTE PTR es:[esi]
  40a0c7:	push   0x845e7462
  40a0cc:	sbb    edi,DWORD PTR [esi]
  40a0ce:	xchg   edx,eax
  40a0cf:	inc    ebx
  40a0d0:	xor    dl,BYTE PTR [ebx-0x5197decc]
  40a0d6:	push   0xfffffffe
  40a0d8:	push   edi
  40a0d9:	jmp    DWORD PTR [ecx+0x5c]
  40a0dc:	(bad)  
  40a0dd:	outs   dx,DWORD PTR ds:[esi]
  40a0de:	retf   0x3481
  40a0e1:	jno    0x40a0b1
  40a0e3:	xor    DWORD PTR [esi],ecx
  40a0e5:	add    dh,BYTE PTR [edx+0x3a559ccb]
  40a0eb:	mov    dh,0x9e
  40a0ed:	adc    eax,0x30a0f1ee
  40a0f2:	add    ecx,edx
  40a0f4:	and    DWORD PTR [edx-0x19],ecx
  40a0f7:	xor    al,0x18
  40a0f9:	rcl    BYTE PTR [ebx],cl
  40a0fb:	dec    edx
  40a0fc:	dec    edx
  40a0fd:	xlat   BYTE PTR ds:[ebx]
  40a0fe:	jne    0x40a17b
  40a100:	in     al,0x8b
  40a102:	in     al,dx
  40a103:	aas    
  40a104:	adc    bl,0x29
  40a107:	adc    dl,BYTE PTR [eax+0x19]
  40a10a:	sahf   
  40a10b:	inc    edx
  40a10c:	dec    edi
  40a10d:	and    eax,0xe122a9ac
  40a112:	inc    ebp
  40a113:	int3   
  40a114:	stos   BYTE PTR es:[edi],al
  40a115:	cmp    al,0xf3
  40a117:	out    0x79,al
  40a119:	icebp  
  40a11a:	jae    0x40a0f7
  40a11c:	fcmovnb st,st(6)
  40a11e:	ret    
  40a11f:	paddd  mm6,QWORD PTR [ebx-0xff56d6]
  40a126:	dec    esp
  40a127:	in     al,0xa8
  40a129:	adc    eax,0x7e4dfb4c
  40a12e:	call   0x7442:0xf6ec7356
  40a135:	in     eax,0xa6
  40a137:	and    cl,BYTE PTR [eax+edi*4-0x2b6b277a]
  40a13e:	and    al,0x50
  40a140:	ss pop ecx
  40a142:	pop    edx
  40a143:	lods   al,BYTE PTR ds:[esi]
  40a144:	scas   eax,DWORD PTR es:[edi]
  40a145:	sub    DWORD PTR [esi+ebx*8],ebp
  40a148:	inc    ebp
  40a149:	cwde   
  40a14a:	sbb    ch,BYTE PTR [eax+ebx*1+0x56]
  40a14e:	sbb    al,0xd
  40a150:	mov    esp,0x2762b418
  40a155:	aad    0xf
  40a157:	sub    al,0x67
  40a159:	xor    DWORD PTR [ecx],ebp
  40a15b:	or     dl,dh
  40a15d:	fmul   st(1),st
  40a15f:	loop   0x40a1a0
  40a161:	jl     0x40a1c1
  40a163:	fidiv  WORD PTR [ecx]
  40a165:	push   es
  40a166:	mov    edi,0xf1f245ba
  40a16b:	sbb    al,0x4c
  40a16d:	pop    edx
  40a16e:	fwait
  40a16f:	test   eax,0xfba3117f
  40a174:	addr16 push ebx
  40a176:	sbb    cl,dh
  40a178:	pop    edi
  40a179:	daa    
  40a17a:	neg    BYTE PTR [esi+0x1e]
  40a17d:	sbb    eax,0xad55d6fc
  40a182:	dec    esp
  40a183:	cmp    ecx,DWORD PTR [eax-0x11]
  40a186:	into   
  40a187:	push   ebp
  40a188:	ret    
  40a189:	inc    esp
  40a18a:	add    al,0x45
  40a18c:	cmp    BYTE PTR [edx],al
  40a18e:	into   
  40a18f:	mov    ch,0x6f
  40a191:	jno    0x40a1be
  40a193:	pushf  
  40a194:	test   eax,0x1ca205e5
  40a199:	mov    esp,esp
  40a19b:	jl     0x40a128
  40a19d:	and    eax,0x1f286271
  40a1a2:	push   edi
  40a1a3:	mov    ah,0xd0
  40a1a5:	sbb    bh,BYTE PTR [esi-0xf5059ac]
  40a1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1ac:	loopne 0x40a174
  40a1ae:	push   edi
  40a1af:	sub    al,0x7f
  40a1b1:	sub    ebx,ecx
  40a1b3:	fwait
  40a1b4:	out    0xd2,al
  40a1b6:	adc    al,0x51
  40a1b8:	dec    esp
  40a1b9:	ficom  DWORD PTR [edx]
  40a1bb:	imul   ebx,DWORD PTR [edi+0x1b],0xdfbc5633
  40a1c2:	push   esp
  40a1c3:	fisubr DWORD PTR [ebp+0xe]
  40a1c6:	iret   
  40a1c7:	ins    DWORD PTR es:[edi],dx
  40a1c8:	xchg   ebp,eax
  40a1c9:	inc    ebp
  40a1ca:	cmp    WORD PTR [ecx-0x31649d96],sp
  40a1d1:	add    ebp,DWORD PTR [ecx]
  40a1d3:	aas    
  40a1d4:	stc    
  40a1d5:	sub    al,0x8e
  40a1d7:	sub    BYTE PTR ds:[ebx+0x5f],ah
  40a1db:	lock xor eax,0x8fa6dc04
  40a1e1:	xchg   edx,eax
  40a1e2:	add    al,0x87
  40a1e4:	xchg   BYTE PTR ds:[esi-0x50],cl
  40a1e8:	or     esi,esi
  40a1ea:	pop    edx
  40a1eb:	pop    ebp
  40a1ec:	add    bl,BYTE PTR [ecx-0x7b]
  40a1ef:	les    esp,FWORD PTR ds:0xea9d0cbc
  40a1f5:	sahf   
  40a1f6:	popf   
  40a1f7:	data16 js 0x40a246
  40a1fa:	pop    ds
  40a1fb:	xor    edi,eax
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	push   edi
  40a5e9:	push   cs
  40a5ea:	mov    esp,0x7c0627a2
  40a5ef:	jl     0x40a5f8
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	inc    edx
  40a5f5:	xor    BYTE PTR [edx],bl
  40a5f7:	jae    0x40a5b3
  40a5f9:	jmp    0xd85a:0x27489ef3
  40a600:	adc    ebp,edi
  40a602:	cmp    DWORD PTR [esi-0x1afcf67],esi
  40a608:	aaa    
  40a609:	leave  
  40a60a:	hlt    
  40a60b:	ja     0x40a5fe
  40a60d:	test   DWORD PTR [eax+edx*1],0x79742731
  40a614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a615:	shl    DWORD PTR [ebx],cl
  40a617:	pop    ebx
  40a618:	add    ch,ch
  40a61a:	repnz push ebx
  40a61c:	mov    bl,0x51
  40a61e:	xor    cl,bl
  40a620:	adc    BYTE PTR [ebx+0x63c4a98f],0xe7
  40a627:	ret    0xfbcf
  40a62a:	daa    
  40a62b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a62c:	das    
  40a62d:	not    DWORD PTR [edx+0x22eee5f2]
  40a633:	cmp    ecx,esp
  40a635:	ret    0x9f4a
  40a638:	sbb    ah,BYTE PTR [ebx-0x3f]
  40a63b:	(bad)  
  40a63c:	jno    0x40a68b
  40a63e:	pop    es
  40a63f:	data16 fsub DWORD PTR [esi+0x4b]
  40a643:	(bad)  
  40a644:	sti    
  40a645:	mov    al,ds:0x919fbabe
  40a64a:	int    0x93
  40a64c:	jl     0x40a68f
  40a64e:	daa    
  40a64f:	sub    ch,BYTE PTR [edx]
  40a651:	and    DWORD PTR [esi],ecx
  40a653:	pop    ds
  40a654:	aad    0xc0
  40a656:	cmp    DWORD PTR [ebx-0x57],esp
  40a659:	lods   eax,DWORD PTR ds:[esi]
  40a65a:	jo     0x40a5fd
  40a65c:	sbb    edx,ecx
  40a65e:	or     al,bh
  40a660:	jne    0x40a60a
  40a662:	fmul   QWORD PTR [ebx*2+0x2f9e42fa]
  40a669:	adc    DWORD PTR [ecx],esp
  40a66b:	pusha  
  40a66c:	retf   0xe9f
  40a66f:	loopne 0x40a6da
  40a671:	daa    
  40a672:	ins    BYTE PTR es:[edi],dx
  40a673:	retf   
  40a674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a675:	leave  
  40a676:	out    0xc7,al
  40a678:	inc    ecx
  40a679:	add    al,0xac
  40a67b:	repz push cs
  40a67d:	fmul   st(6),st
  40a67f:	lods   eax,DWORD PTR ds:[esi]
  40a680:	in     eax,0x3
  40a682:	jae    0x40a6a4
  40a684:	repz (bad) 
  40a686:	iret   
  40a687:	mov    edi,0x60af519
  40a68c:	das    
  40a68d:	neg    BYTE PTR [edi]
  40a68f:	fisttp DWORD PTR [ebp+0x64]
  40a692:	adc    dh,BYTE PTR [eax+0x31a7a47d]
  40a698:	jno    0x40a6a3
  40a69a:	or     al,0xa
  40a69c:	jl     0x40a70d
  40a69e:	push   esp
  40a69f:	data16 (bad) 
  40a6a2:	sbb    DWORD PTR ds:0xa439a5e4,eax
  40a6a8:	xor    al,0xe5
  40a6aa:	cmp    dl,BYTE PTR ds:0x7fb51fa
  40a6b0:	mov    ecx,0xa91913cc
  40a6b5:	add    dh,bh
  40a6b7:	inc    esi
  40a6b8:	jo     0x40a64e
  40a6ba:	imul   eax,edi,0x8858dda9
  40a6c0:	and    BYTE PTR ds:0x71006193,bl
  40a6c6:	mov    ah,0x7b
  40a6c8:	inc    esi
  40a6c9:	adc    ebp,DWORD PTR [edx+0x7c]
  40a6cc:	ins    BYTE PTR es:[edi],dx
  40a6cd:	iret   
  40a6ce:	lock pop DWORD PTR [ecx+edx*1]
  40a6d2:	(bad)  
  40a6d3:	xor    BYTE PTR [esp+ebp*8-0x339c1c9d],al
  40a6da:	jo     0x40a6ac
  40a6dc:	loopne 0x40a683
  40a6de:	call   0x79858e44
  40a6e3:	jb     0x40a6c8
  40a6e5:	mov    bh,0x92
  40a6e7:	fcmovbe st,st(1)
  40a6e9:	push   ecx
  40a6ea:	xor    DWORD PTR [edi+0x3ccda0ab],0x57dbe94
  40a6f4:	ror    BYTE PTR [ebx],0xde
  40a6f7:	xlat   BYTE PTR ds:[ebx]
  40a6f8:	sbb    dl,cl
  40a6fa:	jg     0x40a737
  40a6fc:	xchg   ebx,eax
  40a6fd:	jmp    DWORD PTR [esi+0x6f8d2a02]
  40a703:	ficomp WORD PTR [ecx-0x47e5140c]
  40a709:	inc    esp
  40a70a:	stos   DWORD PTR es:[edi],eax
  40a70b:	lods   eax,DWORD PTR ds:[esi]
  40a70c:	mov    ebx,0x8db13fb6
  40a711:	repnz leave 
  40a713:	cs dec esp
  40a715:	retf   
  40a716:	dec    esp
  40a717:	shl    DWORD PTR [edi+0x4b],1
  40a71a:	imul   ebx,DWORD PTR [edi],0x7a196487
  40a720:	aam    0x63
  40a722:	lods   al,BYTE PTR ds:[esi]
  40a723:	adc    al,0xea
  40a725:	push   ebx
  40a726:	push   ss
  40a727:	pop    ss
  40a728:	mov    WORD PTR [ecx+0x2c],fs
  40a72b:	xor    ebx,DWORD PTR [esi-0x23]
  40a72e:	mov    dh,0x17
  40a730:	iret   
  40a731:	jecxz  0x40a702
  40a733:	xor    BYTE PTR [ebx-0x60],0x96
  40a737:	or     BYTE PTR [edx+0x3],bl
  40a73a:	or     bl,BYTE PTR es:[esi+edx*8]
  40a73e:	dec    eax
  40a73f:	cwde   
  40a740:	addr16 pop ecx
  40a742:	out    0xfc,eax
  40a744:	dec    ebx
  40a745:	xor    al,0x4b
  40a747:	addr16 leave 
  40a749:	xchg   ebp,eax
  40a74a:	ret    0x5ec4
  40a74d:	repnz adc esi,eax
  40a750:	test   BYTE PTR [esp+ecx*2+0x7f],bh
  40a754:	jp     0x40a7ba
  40a756:	add    dh,BYTE PTR [ecx]
  40a758:	sti    
  40a759:	fwait
  40a75a:	mov    ds:0x4740b51,al
  40a75f:	add    dl,BYTE PTR [eax-0x6e]
  40a762:	sub    al,0x15
  40a764:	sub    DWORD PTR [edx-0x4a],ebp
  40a767:	mov    eax,ds:0xeb0a87d1
  40a76c:	mov    WORD PTR [ecx-0x32],gs
  40a76f:	push   cs
  40a770:	cmc    
  40a771:	push   esp
  40a772:	jecxz  0x40a73f
  40a774:	push   cs
  40a775:	adc    edx,ebp
  40a777:	mov    eax,0xf667f44d
  40a77c:	xchg   edi,eax
  40a77d:	fidiv  DWORD PTR [ecx-0x49]
  40a780:	scas   al,BYTE PTR es:[edi]
  40a781:	aaa    
  40a782:	stos   DWORD PTR es:[edi],eax
  40a783:	in     eax,0xd2
  40a785:	dec    eax
  40a786:	(bad)  
  40a787:	mov    esi,ss
  40a789:	pop    edx
  40a78a:	popa   
  40a78b:	sbb    eax,0x92cc6e7c
  40a790:	or     DWORD PTR [ebx],ecx
  40a792:	cs push ds
  40a794:	xchg   edi,eax
  40a795:	aad    0x81
  40a797:	dec    edx
  40a798:	neg    BYTE PTR [eax-0x79]
  40a79b:	and    al,0xad
  40a79d:	test   al,0xd1
  40a79f:	inc    ebx
  40a7a0:	in     eax,dx
  40a7a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7a2:	push   ss
  40a7a3:	push   edx
  40a7a4:	or     DWORD PTR [edx],ebp
  40a7a6:	xor    al,0x43
  40a7a8:	mov    ebx,0x4eb0d8d2
  40a7ad:	mov    edx,DWORD PTR [edx-0x1d4e7547]
  40a7b3:	mov    al,ds:0xa8f4a78a
  40a7b8:	sti    
  40a7b9:	inc    esi
  40a7ba:	pop    ebp
  40a7bb:	loopne 0x40a80a
  40a7bd:	mov    ?,WORD PTR ss:[ebp+0x41]
  40a7c1:	dec    esp
  40a7c2:	mov    cl,BYTE PTR [edx]
  40a7c4:	add    BYTE PTR [edi-0x3f09ac68],dl
  40a7ca:	lods   eax,DWORD PTR ds:[esi]
  40a7cb:	cmp    BYTE PTR [edx+0x3733d968],dh
  40a7d1:	xchg   ebp,eax
  40a7d2:	shr    DWORD PTR cs:[ecx+0x350c30bf],1
  40a7d9:	mov    DWORD PTR [ebx],esp
  40a7db:	mov    ds:0x6acd1c1b,eax
  40a7e0:	lea    edx,fs:[esi]
  40a7e3:	add    eax,0x6c2d909a
  40a7e8:	and    bh,BYTE PTR [eax-0x407dd29e]
  40a7ee:	mov    al,ds:0xe608ca8d
  40a7f3:	inc    ebx
  40a7f4:	mov    ch,0x94
  40a7f6:	jge    0x40a7bd
  40a7f8:	push   cs
  40a7f9:	pop    esp
  40a7fa:	mov    edi,0x9cf9c996
  40a7ff:	aam    0xd1
  40a801:	jge    0x40a80b
  40a803:	mov    bh,0x62
  40a805:	or     al,0x46
  40a807:	clc    
  40a808:	xor    eax,0x9ea8fcbd
  40a80d:	lods   eax,DWORD PTR ds:[esi]
  40a80e:	push   cs
  40a80f:	add    dh,0x4d
  40a812:	jb     0x40a7cc
  40a814:	loop   0x40a7e4
  40a816:	mov    dl,0x14
  40a818:	jmp    0x83bc:0xb6543fc7
  40a81f:	leave  
  40a820:	sar    DWORD PTR [eax+0x4d],1
  40a823:	sar    BYTE PTR [ebx+0x1c],cl
  40a826:	mov    ds:0x9967ec8b,eax
  40a82b:	or     bl,al
  40a82d:	inc    esp
  40a82e:	fst    QWORD PTR [edi+ebx*8-0x441f86fb]
  40a835:	mov    WORD PTR [ebx+0x2f26bc75],?
  40a83b:	add    BYTE PTR [ebp+0x59],bl
  40a83e:	xor    BYTE PTR [edi-0x29],bh
  40a841:	cwde   
  40a842:	daa    
  40a843:	mov    esp,ebx
  40a845:	push   es
  40a846:	or     cl,ah
  40a848:	dec    ebp
  40a849:	cmp    cl,bl
  40a84b:	jbe    0x40a7cf
  40a84d:	sar    BYTE PTR [esi-0x5e],cl
  40a850:	dec    esi
  40a851:	repnz push edi
  40a853:	jp     0x40a8a0
  40a855:	cmp    ecx,DWORD PTR [ebx-0x72d82728]
  40a85b:	push   edi
  40a85c:	daa    
  40a85d:	xchg   esp,eax
  40a85e:	mov    eax,ds:0x341cf79f
  40a863:	pop    ebp
  40a864:	sahf   
  40a865:	lea    edx,[edi+0xd2f51cd]
  40a86b:	pusha  
  40a86c:	and    edx,ecx
  40a86e:	icebp  
  40a86f:	(bad)  
  40a870:	fdivr  QWORD PTR [eax-0x5bd4196b]
  40a876:	pop    edx
  40a877:	lock outs dx,BYTE PTR ds:[esi]
  40a879:	xchg   esp,eax
  40a87a:	(bad)  
  40a87b:	stos   BYTE PTR es:[edi],al
  40a87c:	pop    ss
  40a87d:	cwde   
  40a87e:	lods   al,BYTE PTR ds:[esi]
  40a87f:	movq   mm2,QWORD PTR [eax-0x11]
  40a883:	sbb    edx,DWORD PTR [ecx]
  40a885:	and    esi,DWORD PTR [ebx-0x725ea97f]
  40a88b:	sbb    al,0xc8
  40a88d:	add    edi,esi
  40a88f:	scas   al,BYTE PTR es:[edi]
  40a890:	push   edx
  40a891:	ds pop esi
  40a893:	sub    bh,dl
  40a895:	mov    ecx,0x24c281a4
  40a89a:	rcl    DWORD PTR [ebx+eiz*4-0x7b256ecd],cl
  40a8a1:	adc    esp,DWORD PTR [edx+0x66]
  40a8a4:	jge    0x40a8e3
  40a8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a7:	jecxz  0x40a84e
  40a8a9:	inc    ebx
  40a8aa:	(bad)  
  40a8ab:	aam    0xc2
  40a8ad:	jo     0x40a906
  40a8af:	dec    edx
  40a8b0:	or     BYTE PTR [esi+ebp*8+0x16],bh
  40a8b4:	test   DWORD PTR [esi+0x2de97550],0x31fbd795
  40a8be:	scas   eax,DWORD PTR es:[edi]
  40a8bf:	stos   DWORD PTR es:[edi],eax
  40a8c0:	mov    dh,0xde
  40a8c2:	adc    al,0x69
  40a8c4:	mov    dh,0xc2
  40a8c6:	call   0x3b1c7e7d
  40a8cb:	xor    BYTE PTR [esi],dl
  40a8cd:	push   cs
  40a8ce:	pusha  
  40a8cf:	push   eax
  40a8d0:	jo     0x40a8f7
  40a8d2:	push   cs
  40a8d3:	(bad)  
  40a8d5:	sbb    DWORD PTR [edx],edi
  40a8d7:	or     ebx,DWORD PTR [edi+0x4373dcdf]
  40a8dd:	xchg   ebp,eax
  40a8de:	sar    DWORD PTR [esi-0xe6255c],1
  40a8e4:	aas    
  40a8e5:	xchg   ebx,eax
  40a8e6:	mov    ebx,0xf8e9bbe1
  40a8eb:	mov    ds:0xdf9b6bc1,al
  40a8f0:	push   esi
  40a8f1:	adc    DWORD PTR [esi+0x5081e825],esi
  40a8f7:	dec    ebp
  40a8f8:	ins    DWORD PTR es:[edi],dx
  40a8f9:	scas   eax,DWORD PTR es:[edi]
  40a8fa:	out    dx,al
  40a8fb:	(bad)  
  40a8fc:	popf   
  40a8fd:	inc    esp
  40a8fe:	mov    edx,0x8030c7ad
  40a903:	jmp    0x73e839df
  40a908:	dec    edi
  40a909:	call   0xaca10f6
  40a90e:	xchg   edi,eax
  40a90f:	and    al,dl
  40a911:	sti    
  40a912:	dec    ebp
  40a913:	pop    edx
  40a914:	mov    al,ds:0x53d5640b
  40a919:	ins    DWORD PTR es:[edi],dx
  40a91a:	mov    edx,ss
  40a91c:	das    
  40a91d:	(bad)  
  40a91e:	sub    DWORD PTR [ebp-0x40],ebx
  40a921:	cs addr16 sahf 
  40a924:	pop    ecx
  40a925:	call   0xa66f:0x1a961a82
  40a92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a92d:	inc    DWORD PTR [ebp+0x2bfdb1e8]
  40a933:	pop    ebx
  40a934:	fwait
  40a935:	xor    al,0xaf
  40a937:	dec    ecx
  40a938:	pusha  
  40a939:	adc    BYTE PTR [ebp-0x1ba55e5c],ah
  40a93f:	mov    WORD PTR [esp+esi*8],?
  40a942:	sbb    DWORD PTR [edi+0x56d6a06f],esi
  40a948:	cli    
  40a949:	dec    edi
  40a94a:	adc    DWORD PTR [ecx],ebp
  40a94c:	ss mov esi,0xb558e09
  40a952:	or     BYTE PTR [ecx],cl
  40a954:	scas   eax,DWORD PTR es:[edi]
  40a955:	push   es
  40a956:	fimul  DWORD PTR [edi+0x4a2bc0fc]
  40a95c:	inc    esp
  40a95d:	mov    WORD PTR [esi+0x51],fs
  40a960:	in     eax,0x53
  40a962:	xor    al,0x29
  40a964:	fistp  QWORD PTR [edi-0xa]
  40a967:	cmp    BYTE PTR [eax-0x5d],bh
  40a96a:	loope  0x40a960
  40a96c:	je     0x40a957
  40a96e:	inc    esp
  40a96f:	lods   eax,DWORD PTR ds:[esi]
  40a970:	jl     0x40a99d
  40a972:	pop    edx
  40a973:	in     eax,dx
  40a974:	mov    al,ds:0xe5493722
  40a979:	and    eax,0x9b671665
  40a97e:	mov    ebx,0x40f2ae86
  40a983:	push   esi
  40a984:	cdq    
  40a985:	cld    
  40a986:	and    BYTE PTR [ecx-0x19],0x62
  40a98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a98b:	pop    edi
  40a98c:	add    dh,ah
  40a98e:	nop
  40a98f:	es dec ebx
  40a991:	test   al,0x8
  40a993:	jl     0x40a9e2
  40a995:	mov    ecx,0x22d4322d
  40a99a:	mov    ds:0x4c892198,eax
  40a99f:	and    eax,0xa4762e71
  40a9a4:	dec    esi
  40a9a5:	and    esp,DWORD PTR [eax-0x21]
  40a9a8:	push   0x4a78a8e4
  40a9ad:	sub    al,0x7a
  40a9af:	and    DWORD PTR [ebx*2-0x5df9a770],edi
  40a9b6:	(bad)  
  40a9b8:	fistp  QWORD PTR [edx-0x28]
  40a9bb:	jl     0x40a9f0
  40a9bd:	pop    esp
  40a9be:	mov    ecx,0xe7505518
  40a9c3:	xchg   ebx,eax
  40a9c4:	xor    BYTE PTR [esi],0xe5
  40a9c7:	nop
  40a9c8:	gs je  0x40a953
  40a9cb:	mov    dl,0xde
  40a9cd:	mov    ebx,0x70eb9c63
  40a9d2:	arpl   WORD PTR [edi+esi*4-0x2f],ax
  40a9d6:	sbb    eax,0x511bae5b
  40a9db:	jnp    0x40aa58
  40a9dd:	(bad)  
  40a9de:	(bad)  
  40a9df:	popf   
  40a9e0:	arpl   WORD PTR [ebp-0x4a],ax
  40a9e3:	out    dx,al
  40a9e4:	xor    eax,0x30d874a3
  40a9e9:	xor    dl,ah
  40a9eb:	imul   ecx,esi,0xffffffe9
  40a9ee:	not    BYTE PTR [edi+0x58]
  40a9f1:	and    al,0x6
  40a9f3:	ret    
  40a9f4:	and    al,0x6c
  40a9f6:	loopne 0x40aa4a
  40a9f8:	stc    
  40a9f9:	pop    esi
  40a9fa:	(bad)  
  40a9fb:	jl     0x40aa51
  40a9fd:	cmp    al,0x1b
  40a9ff:	in     eax,dx
  40aa00:	in     al,0x4f
  40aa02:	pop    ebx
  40aa03:	add    BYTE PTR [edx-0x6b],bh
  40aa06:	aaa    
  40aa07:	ret    0x3ccc
  40aa0a:	pop    ds
  40aa0b:	pushf  
  40aa0c:	int    0x5f
  40aa0e:	or     ebp,DWORD PTR [ebx-0x45287ad3]
  40aa14:	add    al,0x2
  40aa16:	mov    ?,WORD PTR [ecx+0x207377ce]
  40aa1c:	cmp    eax,0x28fc170
  40aa21:	jnp    0x40aa64
  40aa23:	retf   
  40aa24:	jmp    0x498fa4dc
  40aa29:	sub    al,0x3f
  40aa2b:	jb     0x40aa6e
  40aa2d:	and    BYTE PTR [edx],bl
  40aa2f:	dec    eax
  40aa30:	dec    esi
  40aa31:	lods   eax,DWORD PTR ds:[esi]
  40aa32:	call   0x245a:0x2e27e53f
  40aa39:	sub    BYTE PTR [ebx+edx*1],bh
  40aa3c:	pand   mm5,QWORD PTR [edx+0x214474c3]
  40aa43:	cs sub bl,0x92
  40aa47:	mov    dl,0x63
  40aa49:	add    ebx,DWORD PTR [ecx]
  40aa4b:	arpl   WORD PTR [esi+ebp*2+0x64243b24],bx
  40aa52:	repnz and BYTE PTR [eax-0x75fceb4a],cl
  40aa59:	aaa    
  40aa5a:	lods   eax,DWORD PTR ds:[esi]
  40aa5b:	jns    0x40aada
  40aa5d:	cs scas al,BYTE PTR es:[edi]
  40aa5f:	aaa    
  40aa60:	xchg   esi,eax
  40aa61:	jno    0x40aaa2
  40aa63:	retf   
  40aa64:	or     BYTE PTR ss:[ebx-0x75],bh
  40aa68:	sbb    eax,0xd0203cb9
  40aa6d:	or     BYTE PTR [ecx+0x331fc450],cl
  40aa73:	data16 and al,0xb6
  40aa76:	mov    WORD PTR [ebx],es
  40aa78:	add    bl,BYTE PTR [ecx-0x6a8b8825]
  40aa7e:	int3   
  40aa7f:	out    0xe0,al
  40aa81:	adc    eax,0x6b1b22c2
  40aa86:	mov    edx,0xe9ed3dda
  40aa8b:	mov    al,ds:0x5c9a26b1
  40aa90:	jp     0x40aa8d
  40aa92:	push   esi
  40aa93:	pop    es
  40aa94:	call   0x8fe8d453
  40aa99:	inc    ecx
  40aa9a:	xor    BYTE PTR [ebp-0x2f],0x9e
  40aa9e:	add    DWORD PTR [eax],eax
  40aaa0:	dec    eax
  40aaa1:	push   esi
  40aaa2:	mov    al,ds:0xc0596098
  40aaa7:	xchg   ecx,eax
  40aaa8:	pop    ebp
  40aaa9:	cmp    BYTE PTR [ecx+0x69],al
  40aaac:	sti    
  40aaad:	dec    ebx
  40aaae:	adc    al,0xc8
  40aab0:	xchg   ecx,eax
  40aab1:	pop    edi
  40aab2:	pop    ds
  40aab3:	push   edx
  40aab4:	test   al,0x8e
  40aab6:	dec    edx
  40aab7:	mov    WORD PTR [ebx],?
  40aab9:	ss retf 0xc3a1
  40aabd:	push   ecx
  40aabe:	fmul   QWORD PTR [ecx]
  40aac0:	cwde   
  40aac1:	jnp    0x40aae1
  40aac3:	out    0xf4,al
  40aac5:	loopne 0x40aab7
  40aac7:	or     di,bx
  40aaca:	(bad)
  40aace:	fdiv   QWORD PTR ds:0xbd40f34b
  40aad4:	fcom   DWORD PTR [bx+0x85a]
  40aad9:	loope  0x40ab56
  40aadb:	adc    bh,BYTE PTR [esi-0x50ba687d]
  40aae1:	sub    BYTE PTR [ebx],dh
  40aae3:	jb     0x40ab5a
  40aae5:	sbb    BYTE PTR [ebx+0x2098dc7b],al
  40aaeb:	or     eax,0xbc18a8b1
  40aaf0:	mov    edx,DWORD PTR [eax+0x34f00d79]
  40aaf6:	into   
  40aaf7:	mov    esp,0x837607ac
  40aafc:	repz das 
  40aafe:	pop    es
  40aaff:	outs   dx,DWORD PTR ds:[esi]
  40ab00:	mov    esi,DWORD PTR [ebx]
  40ab02:	xchg   ebp,eax
  40ab03:	icebp  
  40ab04:	mov    esp,edx
  40ab06:	cmp    cl,BYTE PTR [edi+0x63]
  40ab09:	push   es
  40ab0a:	xor    eax,0xfbcc9602
  40ab0f:	sub    BYTE PTR [esi-0xb],al
  40ab12:	sub    eax,0x228d83ca
  40ab17:	clc    
  40ab18:	inc    esp
  40ab19:	mov    BYTE PTR [ebp-0x2d],al
  40ab1c:	sbb    dl,bh
  40ab1e:	ror    ch,cl
  40ab20:	xlat   BYTE PTR ds:[ebx]
  40ab21:	popf   
  40ab22:	cdq    
  40ab23:	mov    ebp,0x978ecf61
  40ab28:	loopne 0x40aaf7
  40ab2a:	lahf   
  40ab2b:	mov    edx,0x42e1725a
  40ab30:	xchg   esp,eax
  40ab31:	repnz xchg ecx,eax
  40ab33:	retf   
  40ab34:	cmp    BYTE PTR [edx],bh
  40ab36:	mov    bh,0xbe
  40ab38:	jge    0x40ab35
  40ab3a:	loopne 0x40ab2b
  40ab3c:	in     al,0x28
  40ab3e:	sub    esi,DWORD PTR [ecx-0x2cb59b67]
  40ab44:	jae    0x40ab2f
  40ab46:	aaa    
  40ab47:	jmp    0x556b:0x7ef9028b
  40ab4e:	lea    ebx,[esi-0x7f76f81d]
  40ab54:	scas   al,BYTE PTR es:[edi]
  40ab55:	out    0xdb,eax
  40ab57:	test   eax,0xd3c8b02d
  40ab5c:	add    DWORD PTR [esi+0x26cb76f7],ebp
  40ab62:	xchg   esi,eax
  40ab63:	mov    bh,0x18
  40ab65:	add    eax,0x6f9aceca
  40ab6a:	jmp    0x5adb:0x6234682e
  40ab71:	and    BYTE PTR [esi+0x1],bl
  40ab74:	add    ebp,DWORD PTR [edx-0x6f]
  40ab77:	addr16 shl ecx,cl
  40ab7a:	fadd   DWORD PTR [eax]
  40ab7c:	ret    
  40ab7d:	jmp    0xf14e0dd9
  40ab82:	or     al,0xaf
  40ab84:	scas   eax,DWORD PTR es:[edi]
  40ab85:	push   edx
  40ab86:	scas   eax,DWORD PTR es:[edi]
  40ab87:	add    eax,0xb332f44a
  40ab8c:	mov    ebp,0x52c3d50e
  40ab91:	add    bh,al
  40ab93:	pop    edi
  40ab94:	push   edi
  40ab95:	add    esp,DWORD PTR [esi]
  40ab97:	add    ebx,DWORD PTR [eax]
  40ab99:	mov    ah,0x77
  40ab9b:	ficom  DWORD PTR [ebp+0x5439d688]
  40aba1:	mov    esi,0x27d4f0b8
  40aba6:	fcomp  DWORD PTR [edx+edx*2-0x4a3d8fe]
  40abad:	cmp    BYTE PTR [bx+di-0x1c],dl
  40abb1:	ins    DWORD PTR es:[edi],dx
  40abb2:	jmp    0x3aba:0x5e2be27e
  40abb9:	out    0x86,eax
  40abbb:	ret    0xca63
  40abbe:	clc    
  40abbf:	ins    DWORD PTR es:[edi],dx
  40abc0:	cmp    al,BYTE PTR [ecx-0x488df8e1]
  40abc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abc7:	push   es
  40abc8:	je     0x40ac2a
  40abca:	and    al,ah
  40abcc:	xchg   BYTE PTR [esi],dl
  40abce:	and    cl,BYTE PTR [edi+0x4642199d]
  40abd4:	push   ebx
  40abd5:	retf   
  40abd6:	mov    gs,edx
  40abd8:	mov    eax,ds:0xffbc97a9
  40abdd:	(bad)  [eax]
  40abdf:	popa   
  40abe0:	(bad)  
  40abe1:	push   ds
  40abe2:	dec    ecx
  40abe3:	arpl   WORD PTR [edi+0x13],bx
  40abe6:	pop    ds
  40abe7:	cmp    al,0x36
  40abe9:	and    al,0xa1
  40abeb:	ins    BYTE PTR es:[edi],dx
  40abec:	add    al,0x25
  40abee:	shl    BYTE PTR [ebx],0x4
  40abf1:	push   edi
  40abf2:	mov    ?,ebp
  40abf4:	pusha  
  40abf5:	mov    esi,0x28549fb2
  40abfa:	arpl   WORD PTR [eax-0x2e],dx
  40abfd:	xchg   ebp,eax
  40abfe:	rcr    DWORD PTR [ebx],1
  40ac00:	sbb    eax,0x7e9a0309
  40ac05:	lods   eax,DWORD PTR ds:[esi]
  40ac06:	dec    esi
  40ac07:	pop    ebp
  40ac08:	adc    eax,0x5cb13d21
  40ac0d:	jp     0x40ac54
  40ac0f:	push   0xffffff90
  40ac11:	dec    ebx
  40ac12:	in     eax,0x7e
  40ac14:	dec    ebx
  40ac15:	jnp    0x40ac3a
  40ac17:	rcr    BYTE PTR [edi-0x9],1
  40ac1a:	jb     0x40ac37
  40ac1c:	push   esp
  40ac1d:	out    dx,eax
  40ac1e:	pop    ds
  40ac1f:	je     0x40abea
  40ac21:	sti    
  40ac22:	aas    
  40ac23:	dec    esp
  40ac24:	dec    esi
  40ac25:	ss jno 0x40ac48
  40ac28:	call   0xb413:0xad22aaed
  40ac2f:	inc    eax
  40ac30:	dec    esp
  40ac31:	rol    DWORD PTR [ebx-0x16dad944],1
  40ac37:	jecxz  0x40ac1b
  40ac39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac3a:	fdiv   DWORD PTR [eax*8-0x31981ba9]
  40ac41:	push   ss
  40ac42:	sbb    cl,BYTE PTR [esi]
  40ac44:	sub    eax,0x2a6a823b
  40ac49:	xchg   ecx,eax
  40ac4a:	or     al,0xb9
  40ac4c:	std    
  40ac4d:	lea    esp,es:[esi-0x70]
  40ac51:	push   edx
  40ac52:	pop    edx
  40ac53:	pop    ebp
  40ac54:	mov    eax,0x57e99f17
  40ac59:	mov    ch,0x38
  40ac5b:	callw  0x6702
  40ac5f:	push   edi
  40ac60:	jno    0x40ac0e
  40ac62:	pusha  
  40ac63:	lea    edi,[eax+0x48]
  40ac66:	inc    ecx
  40ac67:	inc    ecx
  40ac68:	test   al,0x9a
  40ac6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac6b:	jnp    0x40ac78
  40ac6d:	sbb    edx,DWORD PTR ds:[edi-0x7f]
  40ac71:	sbb    DWORD PTR [esi+0x35],esi
  40ac74:	out    0x86,eax
  40ac76:	in     eax,0x8f
  40ac78:	nop
  40ac79:	data16 jge 0x40ac83
  40ac7c:	xor    ah,BYTE PTR [ebx-0x7f]
  40ac7f:	sar    DWORD PTR [edx+0xb8ead4f],1
  40ac85:	mov    ch,0x7
  40ac87:	sub    DWORD PTR [edi+0x28],esp
  40ac8a:	pop    edi
  40ac8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac8c:	sub    dl,BYTE PTR [edx-0x7a78f95d]
  40ac92:	xchg   DWORD PTR [edi+ebp*2],edx
  40ac95:	jmp    0x40acdf
  40ac97:	pop    es
  40ac98:	shl    eax,cl
  40ac9a:	(bad)  
  40ac9c:	cmp    eax,0xf852fa0f
  40aca1:	jle    0x40acb5
  40aca3:	add    BYTE PTR [eax],ah
  40aca5:	test   al,0x78
  40aca7:	repnz xor eax,0x55fffca9
  40acad:	xchg   esp,eax
  40acaf:	pop    ds
  40acb0:	add    DWORD PTR [ebp+0x7440e564],ecx
  40acb6:	jns    0x40ac81
  40acb8:	jmp    0xc9388ff4
  40acbd:	or     bh,ah
  40acbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc0:	adc    ah,BYTE PTR [esi]
  40acc2:	mov    eax,ds:0xd489953c
  40acc7:	jnp    0x40acb2
  40acc9:	sbb    BYTE PTR [edx],0x28
  40accc:	mov    WORD PTR [esp+edx*2-0x62],gs
  40acd0:	ffree  st(7)
  40acd2:	nop
  40acd3:	push   eax
  40acd4:	test   al,0x2e
  40acd6:	in     al,0xa8
  40acd8:	xor    cl,cl
  40acda:	or     DWORD PTR [edi-0x3e],ebp
  40acdd:	(bad)  
  40acde:	fdivr  DWORD PTR [ecx-0xca161cb]
  40ace4:	nop
  40ace5:	loop   0x40aced
  40ace7:	xlat   BYTE PTR ds:[ebx]
  40ace8:	outs   dx,BYTE PTR ds:[esi]
  40ace9:	adc    eax,0x4032916c
  40acee:	xor    DWORD PTR [eax+0x70],0x5404e3df
  40acf5:	push   ecx
  40acf6:	lods   al,BYTE PTR ds:[esi]
  40acf7:	call   DWORD PTR [edx+0x981b7d3]
  40acfd:	push   es
  40acfe:	xchg   esp,eax
  40acff:	mov    edi,0xb6ff7e14
  40ad04:	xchg   ecx,eax
  40ad05:	test   edi,esi
  40ad07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad08:	mov    cs,WORD PTR [edx+0x240b69b6]
  40ad0e:	cwde   
  40ad0f:	retf   0x6aec
  40ad12:	pop    eax
  40ad13:	lds    esp,FWORD PTR [edx-0x75]
  40ad16:	pop    edx
  40ad17:	lods   eax,DWORD PTR ds:[esi]
  40ad18:	mov    cl,0x89
  40ad1a:	paddw  mm3,QWORD PTR [ecx]
  40ad1d:	fbstp  TBYTE PTR [edx-0x668fc762]
  40ad23:	or     eax,0x67f3bf1e
  40ad28:	mov    cl,0xd6
  40ad2a:	sbb    DWORD PTR [esi+0x58],edi
  40ad2d:	(bad)  
  40ad2e:	sub    eax,0xd44f19c8
  40ad33:	cmp    BYTE PTR [edx+ebp*8-0x56],ah
  40ad37:	enter  0x3635,0xff
  40ad3b:	data16 mov cl,BYTE PTR [ecx+ecx*2]
  40ad3f:	xchg   esi,eax
  40ad40:	pop    ecx
  40ad41:	(bad)  
  40ad42:	dec    ecx
  40ad43:	adc    al,ah
  40ad45:	ds sbb al,0xbe
  40ad48:	jo     0x40ad75
  40ad4a:	inc    edx
  40ad4b:	mov    dh,0xcc
  40ad4d:	mov    eax,0x78f89af9
  40ad52:	rcr    BYTE PTR ds:0x4f767a8e,0x8b
  40ad59:	jmp    0x40ad11
  40ad5b:	fnstenv [ebx+0x26]
  40ad5e:	mov    bh,0x97
  40ad60:	aam    0xa7
  40ad62:	inc    esp
  40ad63:	jno    0x40adb0
  40ad65:	pop    ss
  40ad66:	(bad)  
  40ad67:	xchg   esi,eax
  40ad68:	stos   BYTE PTR es:[edi],al
  40ad69:	es add al,0x69
  40ad6c:	adc    ecx,DWORD PTR [esi-0x2b1eaf19]
  40ad72:	xchg   esi,eax
  40ad73:	cmp    esp,DWORD PTR [edi-0x2b]
  40ad76:	xchg   esi,eax
  40ad77:	pop    ds
  40ad78:	xchg   ecx,eax
  40ad79:	test   BYTE PTR [ebp-0x2b10fa39],bh
  40ad7f:	inc    edx
  40ad80:	mov    esi,0x6988a569
  40ad85:	sbb    DWORD PTR [edx],edi
  40ad87:	xchg   esi,eax
  40ad88:	add    ah,cl
  40ad8a:	lods   eax,DWORD PTR ds:[esi]
  40ad8b:	pop    ebx
  40ad8c:	enter  0x4b58,0xd9
  40ad90:	shr    eax,1
  40ad92:	mov    ds:0x4b34fb5f,al
  40ad97:	pop    ecx
  40ad98:	mov    eax,ds:0x4b1d66aa
  40ad9d:	mov    esi,0xb5699d88
  40ada2:	sub    al,0x27
  40ada4:	bound  edi,QWORD PTR [ecx]
  40ada6:	mov    edx,0xda0e6fb7
  40adab:	inc    edx
  40adac:	sbb    BYTE PTR ss:[ecx+0x36238d0b],0x18
  40adb4:	or     BYTE PTR [ebp-0x2457b3cb],al
  40adba:	cdq    
  40adbb:	push   esp
  40adbc:	jle    0x40adc1
  40adbe:	dec    esi
  40adbf:	inc    ebx
  40adc0:	loop   0x40adb1
  40adc2:	pop    ebx
  40adc3:	loop   0x40ad59
  40adc5:	mov    ah,0xe3
  40adc7:	fsub   st,st(2)
  40adc9:	jmp    0x51f31b55
  40adce:	fwait
  40adcf:	das    
  40add0:	aad    0x74
  40add2:	dec    eax
  40add3:	out    dx,eax
  40add4:	scas   al,BYTE PTR es:[edi]
  40add5:	lahf   
  40add6:	dec    ecx
  40add7:	mov    eax,0x7b9274a3
  40addc:	rcr    al,1
  40adde:	mov    cl,0x26
  40ade0:	out    dx,al
  40ade1:	dec    ebp
  40ade2:	fwait
  40ade3:	in     eax,0x9d
  40ade5:	call   0x557d78ac
  40adea:	(bad)  
  40adeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adec:	enter  0x3f51,0x84
  40adf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf1:	gs out 0xfe,al
  40adf4:	mov    esp,0x1a521ac
  40adf9:	inc    edi
  40adfa:	scas   eax,DWORD PTR es:[edi]
  40adfb:	into   
  40adfc:	(bad)  
  40adfd:	or     eax,0x921fa545
  40ae02:	sub    al,0xc2
  40ae04:	cld    
  40ae05:	inc    ebx
  40ae06:	and    ch,0x91
  40ae09:	mov    cl,cl
  40ae0b:	dec    esp
  40ae0c:	in     al,dx
  40ae0d:	mov    ecx,0x9eea8baa
  40ae12:	cmp    edx,edi
  40ae14:	pushf  
  40ae15:	mov    bh,0x2c
  40ae17:	retf   
  40ae18:	inc    esp
  40ae19:	xchg   esi,eax
  40ae1a:	push   cs
  40ae1b:	out    0xb1,eax
  40ae1d:	jno    0x5eb11028
  40ae23:	pop    ecx
  40ae24:	arpl   WORD PTR [eax+0x5d3196ab],ax
  40ae2a:	and    bh,dh
  40ae2c:	or     DWORD PTR [ecx+0xfb45a4f],ebp
  40ae32:	iret   
  40ae33:	into   
  40ae34:	xchg   esp,eax
  40ae35:	xchg   edx,eax
  40ae36:	xchg   ebx,eax
  40ae37:	mov    bh,0xb2
  40ae39:	sub    DWORD PTR [edx-0x213a53d2],esp
  40ae3f:	pusha  
  40ae40:	lea    eax,[eax-0x77]
  40ae43:	mov    bh,0xa3
  40ae45:	test   DWORD PTR [ecx-0x5a71bbbc],esp
  40ae4b:	inc    edx
  40ae4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae4d:	cdq    
  40ae4e:	dec    eax
  40ae4f:	sub    BYTE PTR [eax-0x21],dl
  40ae52:	aaa    
  40ae53:	push   esp
  40ae54:	dec    eax
  40ae55:	imul   ebx,DWORD PTR fs:[eax+0x2f1e9aa4],0x29205937
  40ae60:	fcom   DWORD PTR [edx-0x4c]
  40ae63:	mov    edx,0xd0b1eeae
  40ae68:	bound  edi,QWORD PTR [edx]
  40ae6a:	or     eax,0xdd462742
  40ae6f:	jecxz  0x40aecc
  40ae71:	lods   eax,DWORD PTR ds:[esi]
  40ae72:	sbb    dl,bh
  40ae74:	clc    
  40ae75:	dec    edi
  40ae76:	add    al,BYTE PTR [edi+edx*8-0x71]
  40ae7a:	sbb    eax,0x50e4be29
  40ae7f:	jecxz  0x40ae5c
  40ae81:	mov    al,ds:0xe25f705d
  40ae86:	xor    eax,0x8c634e24
  40ae8b:	fwait
  40ae8c:	mov    ah,0x38
  40ae8e:	fbld   TBYTE PTR [eax]
  40ae90:	cmp    bl,BYTE PTR [eax+ecx*2]
  40ae93:	xchg   cl,ch
  40ae95:	scas   al,BYTE PTR es:[edi]
  40ae96:	dec    edx
  40ae97:	xor    ecx,edi
  40ae99:	inc    ecx
  40ae9a:	jl     0x40aed0
  40ae9c:	dec    edi
  40ae9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae9e:	cld    
  40ae9f:	cld    
  40aea0:	or     al,0x1b
  40aea2:	mov    edi,0x567291da
  40aea7:	pop    edi
  40aea8:	xchg   esi,eax
  40aea9:	out    0x6,eax
  40aeab:	push   es
  40aeac:	mov    ds:0xd0dfaeef,al
  40aeb1:	test   eax,0x2de6af98
  40aeb6:	dec    edx
  40aeb7:	jo     0x40af30
  40aeb9:	in     eax,0xe3
  40aebb:	lock js 0x40ae6a
  40aebe:	cmp    DWORD PTR [esi+0x40],ecx
  40aec1:	scas   al,BYTE PTR es:[edi]
  40aec2:	les    edi,FWORD PTR [ecx+eiz*2+0x74139a44]
  40aec9:	jne    0x40af0e
  40aecb:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aecd:	shr    DWORD PTR [ecx-0x7d],1
  40aed0:	sub    esp,0x5e779a7d
  40aed6:	sbb    al,0xd8
  40aed8:	push   ebx
  40aed9:	or     eax,0x16c972e0
  40aede:	sub    ebp,DWORD PTR [ecx]
  40aee0:	(bad)  
  40aee1:	mov    al,0x7
  40aee3:	loop   0x40ae7d
  40aee5:	pop    esp
  40aee6:	std    
  40aee7:	call   DWORD PTR [ebp+0x1aa898c9]
  40aeed:	ins    DWORD PTR es:[edi],dx
  40aeee:	inc    edi
  40aeef:	push   esp
  40aef0:	dec    ecx
  40aef1:	adc    al,0x2f
  40aef3:	into   
  40aef4:	out    0x0,al
  40aef6:	arpl   WORD PTR [edx+0x209aaf61],dx
  40aefc:	test   BYTE PTR [edx-0x2ff2a9b7],cl
  40af02:	call   0x470bff3c
  40af07:	mov    ch,0x2
  40af09:	mov    ds:0x622cd140,al
  40af0e:	pop    ebp
  40af0f:	mov    esi,0xbe5d0a65
  40af14:	push   0x9f11095a
  40af19:	xor    eax,0x5993901b
  40af1e:	jl     0x40af3f
  40af20:	or     BYTE PTR ds:0x3f5a75ba,al
  40af26:	fsub   st(6),st
  40af28:	imul   BYTE PTR [edi-0x1ca976ce]
  40af2e:	sbb    ch,ch
  40af30:	pop    ds
  40af31:	mov    eax,ds:0xbae06ad
  40af36:	loopne 0x40af58
  40af38:	pushf  
  40af39:	scas   al,BYTE PTR es:[edi]
  40af3a:	adc    ecx,0x1902eff2
  40af40:	xchg   ecx,eax
  40af41:	(bad)  
  40af42:	lods   eax,DWORD PTR ds:[esi]
  40af43:	sub    bh,BYTE PTR [edx]
  40af45:	(bad)  
  40af46:	int    0x94
  40af48:	mov    edx,0x342a2770
  40af4d:	popf   
  40af4e:	push   0xffffffec
  40af50:	pusha  
  40af51:	pop    ebp
  40af52:	push   edx
  40af53:	add    cl,BYTE PTR [ebx+0x4310fa5c]
  40af59:	adc    DWORD PTR [ecx-0x58],ebx
  40af5c:	xor    al,0x77
  40af5e:	ss scas eax,DWORD PTR es:[edi]
  40af60:	lods   eax,DWORD PTR ds:[esi]
  40af61:	mov    dh,0x7a
  40af63:	add    esp,DWORD PTR [esi+0x8]
  40af66:	aad    0xf
  40af68:	pop    edi
  40af69:	and    BYTE PTR [eax],ch
  40af6b:	dec    eax
  40af6c:	iret   
  40af6d:	mov    dl,0xd8
  40af6f:	scas   al,BYTE PTR es:[edi]
  40af70:	ret    
  40af71:	xchg   edx,eax
  40af72:	jns    0x40afdd
  40af74:	je     0x40afa8
  40af76:	and    DWORD PTR [esi+edi*2-0x25],0x29f598ae
  40af7e:	daa    
  40af7f:	sbb    al,0x73
  40af81:	sbb    DWORD PTR [esi],esp
  40af83:	push   edx
  40af84:	xchg   ebp,eax
  40af85:	push   0x5a2d2175
  40af8a:	adc    ecx,DWORD PTR ds:0x7b02d3c2
  40af90:	cmp    al,0x8f
  40af92:	ins    DWORD PTR es:[edi],dx
  40af93:	xor    al,0x6d
  40af95:	mov    al,0xc2
  40af97:	aas    
  40af98:	jge    0xefae6c64
  40af9e:	or     esp,DWORD PTR [edx-0x4d]
  40afa1:	mov    ah,0x34
  40afa3:	push   edx
  40afa4:	sbb    edx,ebx
  40afa6:	bnd jno 0x40afbe
  40afa9:	pop    edi
  40afaa:	inc    esp
  40afab:	je     0x40afd3
  40afad:	mov    eax,0x4ef9d7a5
  40afb2:	stos   DWORD PTR es:[edi],eax
  40afb3:	pop    ebp
  40afb4:	test   BYTE PTR [esi+eiz*8-0x41],al
  40afb8:	sbb    DWORD PTR [ebp-0x45721c66],ecx
  40afbe:	mov    dh,0x9e
  40afc0:	lods   eax,DWORD PTR ds:[esi]
  40afc1:	and    DWORD PTR [eax+0x63],esi
  40afc4:	dec    esp
  40afc5:	or     BYTE PTR [ebx-0x73],dl
  40afc8:	enter  0x494c,0x28
  40afcc:	cmp    BYTE PTR [ebx-0x71a1ef97],0xd7
  40afd3:	push   ecx
  40afd4:	adc    cl,bl
  40afd6:	sahf   
  40afd7:	sub    DWORD PTR [edx],esp
  40afd9:	inc    ebp
  40afda:	jmp    0x3d18:0xa0ee1765
  40afe1:	fisub  DWORD PTR [edi+ecx*1-0x77]
  40afe5:	mov    ebp,0x1290d5f5
  40afea:	xor    ebp,esp
  40afec:	pushf  
  40afed:	mov    dh,0x86
  40afef:	pop    ss
  40aff0:	jae    0x40b05d
  40aff2:	add    DWORD PTR [eax-0x4d738f53],ebx
  40aff8:	xor    DWORD PTR [edi],eax
  40affa:	aad    0xc8
  40affc:	push   0xffffffc4
  40affe:	out    0x9d,al
  40b000:	jo     0x40b07c
  40b002:	clc    
  40b003:	dec    ebx
  40b004:	and    esp,DWORD PTR [ebx+0x3]
  40b007:	pop    edx
  40b008:	dec    esi
  40b009:	sub    al,cl
  40b00b:	xor    BYTE PTR [edi+0x225a7e42],0x8
  40b012:	xor    BYTE PTR gs:[ebx+eax*4-0x6f619d33],bh
  40b01a:	fcompp 
  40b01c:	mov    ch,0x4f
  40b01e:	mov    ebp,edx
  40b020:	cmp    edx,DWORD PTR [edi+0x1c0e9f19]
  40b026:	fcmovb st,st(0)
  40b028:	shr    DWORD PTR [esi-0xd],cl
  40b02b:	add    esi,DWORD PTR [eax+edi*2+0x2969a154]
  40b032:	mov    esp,0xa43b0307
  40b037:	sub    ecx,DWORD PTR [edi-0x1e195bba]
  40b03d:	or     BYTE PTR [edi+0x2ccb5925],dh
  40b043:	mov    ah,0x74
  40b045:	out    dx,eax
  40b046:	xchg   ecx,eax
  40b047:	(bad)  [eax]
  40b049:	xchg   edx,eax
  40b04a:	std    
  40b04b:	adc    DWORD PTR [edi+edi*2+0x5b],0x1
  40b050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b051:	ret    0xe88b
  40b054:	mov    ebp,0x39b1fe96
  40b059:	stc    
  40b05a:	push   es
  40b05b:	xor    dh,BYTE PTR [edi]
  40b05d:	(bad)
  40b060:	mov    edx,0xaa2ad15f
  40b065:	(bad)  ds:0x878a5731
  40b06b:	(bad)  
  40b06c:	pop    ebx
  40b06d:	shr    BYTE PTR [edi+0x1d],1
  40b070:	xor    edx,DWORD PTR [ebx]
  40b072:	imul   DWORD PTR [eax]
  40b074:	aad    0x9c
  40b076:	jmp    0x40b061
  40b078:	or     al,0x67
  40b07a:	rol    WORD PTR ds:0x3ba23d67,cl
  40b081:	dec    ebp
  40b082:	push   0xe259c016
  40b087:	jg     0x40b023
  40b089:	pop    ds
  40b08a:	(bad)  
  40b08b:	fld    QWORD PTR [esi]
  40b08d:	pusha  
  40b08e:	js     0x40b0ba
  40b090:	ret    
  40b091:	jns    0x40b01b
  40b093:	mov    ds:0x96464500,eax
  40b098:	ds xor al,0x43
  40b09b:	xor    eax,DWORD PTR [eax+0x382ed6e3]
  40b0a1:	xor    eax,DWORD PTR [ebx-0x295f6902]
  40b0a7:	ins    BYTE PTR es:[edi],dx
  40b0a8:	cld    
  40b0a9:	push   0x60
  40b0ab:	fcmovbe st,st(1)
  40b0ad:	idiv   DWORD PTR [ecx]
  40b0af:	mov    ds:0x1c476df8,al
  40b0b4:	into   
  40b0b5:	ret    
  40b0b6:	mov    al,0x8c
  40b0b8:	pop    ebp
  40b0b9:	inc    esi
  40b0ba:	jbe    0x40b05c
  40b0bc:	cmp    eax,0x9fa7e1b9
  40b0c1:	xchg   edx,eax
  40b0c2:	xor    ecx,DWORD PTR [ebp+0xaddcae]
  40b0c8:	xor    edx,esi
  40b0ca:	push   eax
  40b0cb:	push   ecx
  40b0cc:	daa    
  40b0cd:	pop    ss
  40b0ce:	inc    edi
  40b0cf:	fisubr DWORD PTR [edi-0x384bbdbc]
  40b0d5:	and    al,0xe4
  40b0d7:	xlat   BYTE PTR ds:[ebx]
  40b0d8:	xchg   DWORD PTR [edi-0x1b],edi
  40b0db:	push   ecx
  40b0dc:	mov    esi,0x84f75492
  40b0e1:	mov    edx,0x2ff6cc49
  40b0e6:	adc    cl,ah
  40b0e8:	nop
  40b0e9:	fstp   TBYTE PTR [edx-0x34986670]
  40b0ef:	les    eax,FWORD PTR [ebp+eiz*1+0x1]
  40b0f3:	sub    al,0x28
  40b0f5:	sub    ebp,DWORD PTR [ebx+ecx*4]
  40b0f8:	(bad)  
  40b0f9:	loopne 0x40b084
  40b0fb:	or     BYTE PTR [edx],bl
  40b0fd:	mov    ss,WORD PTR [edx+0x65]
  40b100:	lds    edx,FWORD PTR [edi+edi*8]
  40b103:	and    BYTE PTR [ecx],0xbb
  40b106:	adc    BYTE PTR [esi+0x6aea1121],cl
  40b10c:	in     al,0x42
  40b10e:	jecxz  0x40b0c5
  40b110:	mov    cl,0x59
  40b112:	dec    eax
  40b113:	or     eax,0x1321e8df
  40b118:	add    al,0x6e
  40b11a:	fwait
  40b11b:	shl    al,cl
  40b11d:	xchg   edx,eax
  40b11e:	sbb    eax,0x64715f2f
  40b123:	loopne 0x40b0e0
  40b125:	gs pop ds
  40b127:	sub    al,0x4e
  40b129:	cli    
  40b12a:	xchg   edx,eax
  40b12b:	xlat   BYTE PTR ds:[ebx]
  40b12c:	leave  
  40b12d:	cmp    DWORD PTR [ebp+0x77],ecx
  40b130:	and    cl,dl
  40b132:	es (bad) 
  40b134:	pop    esp
  40b135:	outs   dx,DWORD PTR ds:[esi]
  40b136:	sub    DWORD PTR ss:[bx+si-0x18],edx
  40b13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b13c:	ret    0xbc3f
  40b13f:	sbb    eax,0xebed2a34
  40b144:	mul    BYTE PTR [ebp-0x53]
  40b147:	mov    dh,0xc4
  40b149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b14a:	stc    
  40b14b:	push   ecx
  40b14c:	pop    edx
  40b14d:	pushf  
  40b14e:	pop    ss
  40b14f:	xchg   esp,eax
  40b150:	push   0xffffffea
  40b152:	(bad)  
  40b153:	dec    edi
  40b154:	test   al,0xf9
  40b156:	dec    eax
  40b157:	jne    0x40b153
  40b159:	sub    BYTE PTR [ecx],0x25
  40b15c:	push   ds
  40b15d:	cmp    BYTE PTR [eax+0x31],cl
  40b160:	mov    bl,0xc
  40b162:	adc    al,0xb5
  40b164:	repz into 
  40b166:	mov    al,ds:0x474a71f2
  40b16b:	outs   dx,DWORD PTR ds:[esi]
  40b16c:	sbb    al,0xff
  40b16e:	popa   
  40b16f:	dec    eax
  40b170:	icebp  
  40b171:	xchg   al,ch
  40b173:	cmc    
  40b174:	xchg   edi,eax
  40b175:	adc    al,0xe4
  40b177:	loope  0x40b120
  40b179:	mov    ebx,0x7ecf7dea
  40b17e:	or     BYTE PTR [esi],0xe5
  40b181:	cmp    BYTE PTR [eax+0x32d74382],dl
  40b187:	jl     0x40b175
  40b189:	ret    0xed5f
  40b18c:	or     BYTE PTR [ecx],0x7b
  40b18f:	dec    ebp
  40b190:	in     eax,0x35
  40b192:	int    0x34
  40b194:	mov    cl,0xf9
  40b196:	jae    0x40b16c
  40b198:	fs add eax,0xdfcc3ebf
  40b19e:	shl    bl,1
  40b1a0:	dec    ebx
  40b1a1:	push   0xbb551837
  40b1a6:	adc    ch,BYTE PTR [ebx+ebx*2+0x7]
  40b1aa:	loopne 0x40b1c7
  40b1ac:	cmp    ecx,DWORD PTR [ecx-0x2662c294]
  40b1b2:	add    al,0x74
  40b1b4:	xchg   ecx,eax
  40b1b5:	jle    0x40b13f
  40b1b7:	or     cl,BYTE PTR [eax-0x2bd53441]
  40b1bd:	adc    ebp,ebx
  40b1bf:	jle    0x40b209
  40b1c1:	inc    edi
  40b1c2:	mov    edi,0xdfb61b7e
  40b1c7:	mov    dh,0xb8
  40b1c9:	ja     0x40b191
  40b1cb:	xlat   BYTE PTR ds:[ebx]
  40b1cc:	ret    
  40b1cd:	imul   esi,DWORD PTR [edi+eax*8],0xe278efca
  40b1d4:	outs   dx,DWORD PTR ds:[esi]
  40b1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d6:	xchg   DWORD PTR [edx-0x34],ebp
  40b1d9:	enter  0x6cf7,0x27
  40b1dd:	mov    ds:0x8abccc0,eax
  40b1e2:	shl    ah,1
  40b1e4:	dec    esi
  40b1e5:	mov    al,0xef
  40b1e7:	and    eax,0x805d4c9e
  40b1ec:	inc    BYTE PTR [edi-0x549d3d79]
  40b1f2:	test   BYTE PTR [edx+0x9b4ab60],cl
  40b1f8:	out    dx,al
  40b1f9:	stos   BYTE PTR es:[edi],al
  40b1fa:	push   cs
  40b1fb:	fwait
  40b1fc:	mov    ?,WORD PTR [eiz*4+0x59b2aa44]
  40b203:	mov    ch,0x42
  40b205:	dec    ecx
  40b206:	jg     0xd9cc7735
  40b20c:	pmuludq mm7,mm1
  40b20f:	sbb    ah,bh
  40b211:	or     eax,0xf7afc1bc
  40b216:	push   ds
  40b217:	call   0x1d7d0357
  40b21c:	mov    DWORD PTR [ebx-0x2da7957c],edx
  40b222:	lahf   
  40b223:	pusha  
  40b224:	cmc    
  40b225:	aaa    
  40b226:	mov    eax,DWORD PTR [eax-0x6e]
  40b229:	xchg   ebp,eax
  40b22a:	inc    esp
  40b22b:	and    al,0x5
  40b22d:	inc    BYTE PTR [ebp-0xe]
  40b230:	jne    0x40b290
  40b232:	mov    esi,0x12138168
  40b237:	and    DWORD PTR [esi+ebx*4-0x384906b6],0xd117c0dc
  40b242:	sbb    DWORD PTR [edi-0x2afeab58],eax
  40b248:	(bad)  
  40b249:	pop    edx
  40b24a:	pop    eax
  40b24b:	pop    esp
  40b24c:	or     al,0x55
  40b24e:	mov    cl,0x2e
  40b250:	jo     0x40b1f8
  40b252:	enter  0xec6a,0x1e
  40b256:	lahf   
  40b257:	cld    
  40b258:	mov    ebp,0x449edda6
  40b25d:	jecxz  0x40b295
  40b25f:	mov    ecx,0xf52ebd72
  40b264:	mov    edi,0x3ef8cf5
  40b269:	test   al,0xb9
  40b26b:	loop   0x40b218
  40b26d:	jg     0x40b288
  40b26f:	in     eax,dx
  40b270:	sbb    eax,0x39bca33c
  40b275:	mov    bl,0xda
  40b277:	dec    ebp
  40b278:	aam    0xc
  40b27a:	jno    0x40b20f
  40b27c:	stos   DWORD PTR es:[edi],eax
  40b27d:	pusha  
  40b27e:	mov    ds:0xed903152,eax
  40b283:	jmp    0x45d4:0xd1e3d61b
  40b28a:	test   BYTE PTR [ecx+esi*1-0x15],bl
  40b28e:	in     eax,0xd4
  40b290:	add    BYTE PTR [esi],dl
  40b292:	ret    
  40b293:	dec    esi
  40b294:	ror    cl,cl
  40b296:	cwde   
  40b297:	daa    
  40b298:	cmp    eax,0xbc403f66
  40b29d:	mov    ebx,0x52d9346f
  40b2a2:	jg     0x40b29a
  40b2a4:	mov    ?,WORD PTR [esp+edi*1-0x3f588a53]
  40b2ab:	push   ebp
  40b2ac:	adc    DWORD PTR [ebp+0xc],ebx
  40b2af:	adc    eax,0xb0ea9a74
  40b2b4:	cmc    
  40b2b5:	enter  0xac39,0x3
  40b2b9:	pop    esi
  40b2ba:	jae    0x40b302
  40b2bc:	fcmovb st,st(5)
  40b2be:	int3   
  40b2bf:	sub    esi,DWORD PTR [ecx-0x4]
  40b2c2:	pop    ebx
  40b2c3:	cmp    ch,BYTE PTR [ebx-0x4e]
  40b2c6:	dec    esp
  40b2c7:	inc    ecx
  40b2c8:	(bad)  
  40b2c9:	push   eax
  40b2ca:	jne    0x40b2e6
  40b2cc:	mov    al,ds:0x47a13ab6
  40b2d1:	cdq    
  40b2d2:	push   ss
  40b2d3:	lahf   
  40b2d4:	add    eax,DWORD PTR [eax-0x34e72c]
  40b2da:	loopne 0x40b333
  40b2dc:	js     0x40b30e
  40b2de:	sti    
  40b2df:	pop    ss
  40b2e0:	pop    esi
  40b2e1:	nop
  40b2e2:	sub    dl,ch
  40b2e4:	push   0x31
  40b2e6:	mov    dl,0x8c
  40b2e8:	retf   
  40b2e9:	sub    eax,0x6642e74e
  40b2ee:	loope  0x40b2cd
  40b2f0:	sbb    esi,DWORD PTR [ebx+0x36c182f8]
  40b2f6:	xor    ebx,DWORD PTR [esi+0x13a16247]
  40b2fc:	test   bh,ah
  40b2fe:	gs mov cl,0x5
  40b301:	xor    BYTE PTR [edi-0x6d],0x80
  40b305:	mov    dl,0x7a
  40b307:	xchg   esp,eax
  40b308:	or     ebp,DWORD PTR [edx-0x11d83b31]
  40b30e:	fsub   DWORD PTR [ebp+edi*4+0x6d4e1022]
  40b315:	push   ds
  40b316:	std    
  40b317:	clc    
  40b318:	popf   
  40b319:	xlat   BYTE PTR ds:[ebx]
  40b31a:	call   0xd514:0x657b27e6
  40b321:	(bad)  
  40b322:	jns    0x40b37a
  40b324:	fdiv   DWORD PTR [eax]
  40b326:	inc    DWORD PTR [ebx+0x3f08ee12]
  40b32c:	mov    dh,0xb6
  40b32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b32f:	dec    edi
  40b330:	mov    ch,0x4e
  40b332:	and    esi,DWORD PTR [ebx-0x6]
  40b335:	out    0xa7,eax
  40b337:	add    edi,DWORD PTR [edi+ebx*2+0x14]
  40b33b:	int    0x8a
  40b33d:	mov    ebp,0xc3182fda
  40b342:	cdq    
  40b343:	int    0x6e
  40b345:	sar    DWORD PTR [edi-0x4be00420],1
  40b34b:	scas   eax,DWORD PTR es:[edi]
  40b34c:	call   FWORD PTR [eax]
  40b34e:	pop    ss
  40b34f:	sub    ch,BYTE PTR [ebx-0x20065c76]
  40b355:	shr    ah,cl
  40b357:	push   esp
  40b358:	pop    eax
  40b359:	stos   DWORD PTR es:[edi],eax
  40b35a:	jp     0x40b395
  40b35c:	mov    DWORD PTR [ecx-0x6f04e56f],eax
  40b362:	hlt    
  40b363:	(bad)  
  40b364:	inc    esp
  40b365:	jp     0x40b3a0
  40b367:	add    ebp,DWORD PTR ds:0xd884b7
  40b36d:	adc    DWORD PTR [ebp-0x2],esi
  40b370:	sbb    DWORD PTR [edx+0x37],0x7b7ee0b
  40b377:	and    DWORD PTR [edx+0x8],edi
  40b37a:	ins    DWORD PTR es:[edi],dx
  40b37b:	sti    
  40b37c:	jecxz  0x40b35e
  40b37e:	and    dl,BYTE PTR [edx+0x69]
  40b381:	lds    eax,FWORD PTR [esi+0x73]
  40b384:	xor    ebx,DWORD PTR [ebx]
  40b386:	sbb    DWORD PTR [edx],ecx
  40b388:	lock daa 
  40b38a:	fcmovb st,st(1)
  40b38c:	mov    edx,0x323bb1f
  40b391:	aam    0xc4
  40b393:	dec    ebx
  40b394:	xor    esi,DWORD PTR [edi+eiz*1-0x183893d5]
  40b39b:	pop    ebp
  40b39c:	xor    eax,0x8d6c957e
  40b3a1:	fwait
  40b3a2:	adc    BYTE PTR [ecx],0xea
  40b3a5:	mov    esi,0xbe1296e7
  40b3aa:	jnp    0x40b418
  40b3ac:	(bad)  
  40b3ad:	addr16 inc esp
  40b3af:	mov    ecx,0xa26898b2
  40b3b4:	sbb    al,0xb0
  40b3b6:	scas   eax,DWORD PTR es:[edi]
  40b3b7:	in     al,dx
  40b3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3b9:	cmp    DWORD PTR [ecx+0x24],eax
  40b3bc:	pop    ecx
  40b3bd:	xor    eax,0xad973305
  40b3c2:	xlat   BYTE PTR ds:[ebx]
  40b3c3:	loop   0x40b36e
  40b3c5:	sbb    cl,BYTE PTR [esi+0x50d1b78e]
  40b3cb:	jl     0x40b374
  40b3cd:	imul   eax,DWORD PTR [esp+edx*1+0x35],0x9728a16a
  40b3d5:	(bad)  
  40b3d6:	fwait
  40b3d7:	clc    
  40b3d8:	int3   
  40b3d9:	into   
  40b3da:	adc    eax,0xbd88f5a
  40b3df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3e0:	xor    al,0xe0
  40b3e2:	arpl   cx,bx
  40b3e4:	test   dl,bl
  40b3e6:	sub    al,0x7c
  40b3e8:	out    dx,eax
  40b3e9:	jp     0x40b3a7
  40b3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ec:	cld    
  40b3ed:	mov    ebx,0xb182ec8d
  40b3f2:	xor    ah,al
  40b3f4:	stc    
  40b3f5:	in     eax,0xd8
  40b3f7:	add    al,0x4
  40b3f9:	sub    BYTE PTR [edx],0xed
  40b3fc:	dec    ebx
  40b3fd:	ss mov al,0xb1
  40b400:	inc    edi
  40b401:	push   ebp
  40b402:	add    eax,0xc1be86c5
  40b407:	dec    edx
  40b408:	cmp    al,0x85
  40b40a:	pop    ss
  40b40b:	(bad)  
  40b40c:	jae    0x40b448
  40b40e:	and    dl,BYTE PTR gs:[ebp-0xb]
  40b412:	sbb    esi,DWORD PTR [esi]
  40b414:	xor    eax,0x1223d528
  40b419:	and    ecx,esi
  40b41b:	cmp    BYTE PTR [ecx],ah
  40b41d:	jg     0x40b470
  40b41f:	je     0x40b3bb
  40b421:	push   ds
  40b422:	push   es
  40b423:	add    DWORD PTR [esi-0x7c],edx
  40b426:	fnstsw WORD PTR gs:0x2b0f416b
  40b42d:	ss pop ebp
  40b42f:	sar    dh,0xf4
  40b432:	mov    bl,0x38
  40b434:	cmp    BYTE PTR [ebx-0x65c30a6e],dh
  40b43a:	pop    edi
  40b43b:	pop    ss
  40b43c:	inc    ebx
  40b43d:	ins    BYTE PTR es:[edi],dx
  40b43e:	pop    ebp
  40b43f:	in     al,0x2a
  40b441:	scas   al,BYTE PTR es:[edi]
  40b442:	xor    BYTE PTR [edi+0x5dc22d],bl
  40b448:	mov    ebp,0xab4111da
  40b44d:	push   ebx
  40b44e:	adc    al,0xa8
  40b450:	push   edx
  40b451:	cmp    ch,BYTE PTR [esi-0x4a]
  40b454:	sub    al,0x1e
  40b456:	sar    DWORD PTR [ebx-0x37],0x25
  40b45a:	retf   
  40b45b:	xor    bh,ah
  40b45d:	in     eax,dx
  40b45e:	lea    ebx,[edx-0x6a]
  40b461:	or     bl,BYTE PTR [ebp-0x70e046e9]
  40b467:	test   eax,0xb98e8b44
  40b46c:	fst    QWORD PTR [ebp-0x8]
  40b46f:	xchg   bp,ax
  40b471:	jne    0x40b478
  40b473:	or     BYTE PTR [edx+0x53],dl
  40b476:	jecxz  0x40b40e
  40b478:	jno    0x40b4ce
  40b47a:	outs   dx,DWORD PTR ds:[esi]
  40b47b:	jp     0x40b47c
  40b47d:	mov    dl,0x17
  40b47f:	aad    0x35
  40b481:	aas    
  40b482:	(bad)  
  40b483:	in     al,dx
  40b484:	mov    ebx,0xb980b9c2
  40b489:	imul   ebp,edi,0xa67122be
  40b48f:	in     eax,0xe4
  40b491:	pusha  
  40b492:	dec    ecx
  40b493:	imul   edx,DWORD PTR [esi+0x27],0x4e
  40b497:	call   0x8645:0xd13e15bb
  40b49e:	mov    eax,0x424e8deb
  40b4a3:	popf   
  40b4a4:	adc    BYTE PTR [ecx],ah
  40b4a6:	test   DWORD PTR [ebx-0x43],eax
  40b4a9:	and    al,0x12
  40b4ab:	cmc    
  40b4ac:	inc    ebx
  40b4ad:	(bad)  
  40b4ae:	mov    esp,DWORD PTR [edx-0x7e468368]
  40b4b4:	imul   edx,DWORD PTR ds:0xe7612ecf,0x2d
  40b4bb:	sbb    al,0x88
  40b4bd:	fwait
  40b4be:	loope  0x40b4a7
  40b4c0:	dec    esp
  40b4c1:	or     ah,BYTE PTR [edx-0x1c]
  40b4c4:	test   bh,dl
  40b4c6:	imul   edi,DWORD PTR [ebx],0x45aaf705
  40b4cc:	sub    ebp,0x6bab68
  40b4d2:	ins    DWORD PTR es:[edi],dx
  40b4d3:	and    esi,DWORD PTR [ebx+0x6d4dffa5]
  40b4d9:	sti    
  40b4da:	mov    WORD PTR [edx+ebp*2+0xf],ds
  40b4de:	stos   DWORD PTR es:[edi],eax
  40b4df:	or     DWORD PTR [edi+0x1399358e],ebx
  40b4e5:	jmp    FWORD PTR [edi+0x37ccad53]
  40b4eb:	cmp    edx,DWORD PTR [edx-0x46]
  40b4ee:	sbb    esp,DWORD PTR [edx+0x6b885283]
  40b4f4:	or     eax,edx
  40b4f6:	and    dh,dl
  40b4f8:	mov    ds:0x4bf17260,al
  40b4fd:	les    esi,FWORD PTR [ebp-0x23]
  40b500:	dec    DWORD PTR [ebx-0x70589032]
  40b506:	popf   
  40b507:	mov    eax,ds:0xe74e3f5
  40b50c:	ins    BYTE PTR es:[edi],dx
  40b50d:	xor    ah,dh
  40b50f:	aas    
  40b510:	or     BYTE PTR ds:0x50a46e57,al
  40b516:	fcom   DWORD PTR [edx+eax*8+0x7e]
  40b51a:	gs jecxz 0x40b546
  40b51d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b51e:	or     eax,0x63f6a8d
  40b523:	and    esi,DWORD PTR [eax-0x7762ee33]
  40b529:	js     0x40b524
  40b52b:	xchg   esi,eax
  40b52c:	call   0xfbd2:0xf2781a0b
  40b533:	rcl    ebp,0x37
  40b536:	lea    ebx,[ebp-0x15b0dedd]
  40b53c:	mov    ecx,0x93434b76
  40b541:	dec    edx
  40b542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b543:	or     eax,0xee5d8d80
  40b548:	sub    ah,BYTE PTR [esi+0x6]
  40b54b:	mov    ecx,0x2fe1e8ae
  40b550:	mov    WORD PTR [edx-0x7d],fs
  40b553:	dec    esi
  40b554:	(bad)  
  40b555:	retf   
  40b556:	pushf  
  40b557:	mov    cl,BYTE PTR [esi-0x149b3928]
  40b55d:	pop    edx
  40b55e:	test   al,0x12
  40b560:	retf   0xf3a
  40b563:	jne    0x40b545
  40b565:	mov    al,0xf9
  40b567:	test   eax,0xe2a04b2b
  40b56c:	shr    BYTE PTR [edx-0x11],1
  40b56f:	cmp    BYTE PTR [ebx+eax*2-0x54],dl
  40b573:	mov    al,ds:0x46186e56
  40b578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b579:	and    al,0x29
  40b57b:	or     al,0xcf
  40b57d:	pop    ss
  40b57e:	aam    0x4a
  40b580:	cs xchg ecx,eax
  40b582:	out    0xcb,eax
  40b584:	shr    bl,cl
  40b586:	lods   eax,DWORD PTR ds:[esi]
  40b587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b588:	imul   edi,DWORD PTR [esi+0x2144327a],0x563f384a
  40b592:	loope  0x40b5a6
  40b594:	scas   al,BYTE PTR es:[edi]
  40b595:	dec    edx
  40b596:	mov    ds:0x803c366,eax
  40b59b:	jne    0x40b523
  40b59d:	je     0x40b54b
  40b59f:	out    0x56,eax
  40b5a1:	push   ebp
  40b5a2:	jo     0x40b5e2
  40b5a4:	out    0xa1,al
  40b5a6:	xchg   ebx,eax
  40b5a7:	outs   dx,DWORD PTR ds:[esi]
  40b5a8:	jmp    0x8592:0xba7696a3
  40b5af:	push   cs
  40b5b0:	enter  0x3365,0xdb
  40b5b4:	loop   0x40b5d7
  40b5b6:	push   ebx
  40b5b7:	dec    edi
  40b5b8:	pop    ds
  40b5b9:	or     eax,0x77483126
  40b5be:	xchg   edx,eax
  40b5bf:	inc    esi
  40b5c0:	adc    DWORD PTR [esi],ebp
  40b5c2:	ins    BYTE PTR es:[edi],dx
  40b5c3:	ins    BYTE PTR es:[edi],dx
  40b5c4:	cmc    
  40b5c5:	mov    edx,0xbaa581e0
  40b5ca:	push   edi
  40b5cb:	addr16 add eax,0x38fd9dd4
  40b5d1:	xlat   BYTE PTR ds:[ebx]
  40b5d2:	pop    esi
  40b5d3:	jge    0x40b57e
  40b5d5:	adc    BYTE PTR [ebx-0x2f],ch
  40b5d8:	add    al,0xd0
  40b5da:	out    0x61,eax
  40b5dc:	shr    dl,cl
  40b5de:	mov    cl,0xe0
  40b5e0:	add    al,0xb7
  40b5e2:	mov    eax,DWORD PTR [esi]
  40b5e4:	out    0x9,eax
  40b5e6:	or     al,0xd
  40b5e8:	loopne 0x40b5ab
  40b5ea:	jmp    0x40b61e
  40b5ec:	nop
  40b5ed:	(bad)  
  40b5ee:	xchg   esp,eax
  40b5ef:	inc    eax
  40b5f0:	sbb    BYTE PTR [ebp-0x47],0x85
  40b5f4:	ds jmp 0x7d66:0x83f1dd04
  40b5fc:	aas    
  40b5fd:	pop    ds
  40b5fe:	test   ebx,ebp
  40b600:	mov    ss,WORD PTR [edi-0x504f6573]
  40b606:	retf   0xe1e8
  40b609:	in     al,dx
  40b60a:	mov    bh,0xa0
  40b60c:	repnz xlat BYTE PTR ds:[ebx]
  40b60e:	pop    ecx
  40b60f:	dec    edi
  40b610:	cmp    BYTE PTR [eax],al
  40b612:	and    DWORD PTR [ebp-0x32],edx
  40b615:	mov    dl,0xa
  40b617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b618:	enter  0x458a,0x4b
  40b61c:	jmp    0x40b670
  40b61e:	jb     0x40b69e
  40b620:	sti    
  40b621:	out    dx,eax
  40b622:	nop
  40b623:	daa    
  40b624:	cli    
  40b625:	dec    esp
  40b626:	out    0x64,eax
  40b628:	iret   
  40b629:	out    dx,al
  40b62a:	out    dx,al
  40b62b:	pop    edi
  40b62c:	sbb    bl,BYTE PTR [ebx+0x4662633b]
  40b632:	lods   eax,DWORD PTR ds:[esi]
  40b633:	or     eax,0x8c856bc1
  40b638:	pop    edx
  40b639:	stos   BYTE PTR es:[edi],al
  40b63a:	and    DWORD PTR [ebx+0x2b],ebx
  40b63d:	mov    dl,0x2c
  40b63f:	stc    
  40b640:	mov    edi,DWORD PTR [edx+esi*8]
  40b643:	ss (bad) 
  40b645:	clc    
  40b646:	push   es
  40b647:	xchg   ebp,eax
  40b649:	adc    eax,0xaefa459f
  40b64e:	sbb    al,0xcb
  40b650:	xor    eax,0xa552d67d
  40b655:	mov    ebx,0x5cc21af7
  40b65a:	lock mov edi,0x7a5e8dd1
  40b660:	cmp    al,ah
  40b662:	inc    edx
  40b663:	mov    esp,0x9c58aa5b
  40b668:	xchg   edx,eax
  40b669:	sbb    al,0xdc
  40b66b:	sub    BYTE PTR [ebx+0x57],ch
  40b66e:	(bad)  
  40b670:	pop    ebx
  40b671:	adc    BYTE PTR cs:[eax-0x57],dh
  40b675:	xor    DWORD PTR [ecx],0xd332b119
  40b67b:	out    0xbb,al
  40b67d:	call   0x2d1c:0x4b9b0ff1
  40b684:	xlat   BYTE PTR ds:[ebx]
  40b685:	sahf   
  40b686:	jle    0x40b6e9
  40b688:	pop    ss
  40b689:	push   ebx
  40b68a:	add    BYTE PTR [ebx+edx*4-0x7c1f497],ch
  40b691:	loope  0x40b641
  40b693:	mov    ah,0x63
  40b695:	test   DWORD PTR [ebp+0x79],edi
  40b698:	pop    eax
  40b699:	scas   eax,DWORD PTR es:[edi]
  40b69a:	pop    ds
  40b69b:	mov    esp,0x1d8b687d
  40b6a0:	adc    BYTE PTR [ebp-0x3b2240e],al
  40b6a6:	cdq    
  40b6a7:	sahf   
  40b6a8:	in     eax,dx
  40b6a9:	mov    esi,0x5b7a290
  40b6ae:	xlat   BYTE PTR ds:[ebx]
  40b6af:	cwde   
  40b6b0:	add    BYTE PTR fs:[esp+eax*2-0x6febe705],0x14
  40b6b9:	imul   ebp,DWORD PTR [edx-0x3359d0d4],0x4b
  40b6c0:	sbb    dl,dh
  40b6c2:	out    0x46,al
  40b6c4:	aas    
  40b6c5:	adc    al,0x61
  40b6c7:	dec    edx
  40b6c8:	or     al,0xc1
  40b6ca:	push   eax
  40b6cb:	call   0x35bf5848
  40b6d0:	jmp    0xb1588a9c
  40b6d5:	lds    edi,FWORD PTR [esp+ecx*1-0x42]
  40b6d9:	xchg   esi,eax
  40b6da:	sbb    al,0x5f
  40b6dc:	pop    ebx
  40b6dd:	jnp    0x40b684
  40b6df:	pop    eax
  40b6e0:	cmc    
  40b6e1:	xchg   ebp,eax
  40b6e2:	out    dx,al
  40b6e3:	(bad)  
  40b6e4:	in     eax,dx
  40b6e5:	xor    al,0x1c
  40b6e7:	xchg   ebx,eax
  40b6e8:	add    bh,BYTE PTR [eax-0x1]
  40b6eb:	test   al,0x69
  40b6ed:	imul   ecx,ebx,0x689c26e7
  40b6f3:	and    al,0x6f
  40b6f5:	loop   0x40b6fa
  40b6f7:	out    dx,eax
  40b6f8:	cwde   
  40b6f9:	aad    0x5b
  40b6fb:	arpl   WORD PTR [edi+0x2d822be3],di
  40b701:	sub    bh,BYTE PTR ds:0x7ac975e1
  40b707:	sub    al,0x69
  40b709:	pushf  
  40b70a:	ja     0x40b724
  40b70c:	retf   0x70dd
  40b70f:	addr16 clc 
  40b711:	fisubr WORD PTR [edx]
  40b713:	out    dx,al
  40b714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b715:	mov    ecx,0xedc1634d
  40b71a:	pop    ecx
  40b71b:	xchg   edx,eax
  40b71c:	popf   
  40b71d:	loopne 0x40b736
  40b71f:	pop    eax
  40b720:	mov    ecx,0x54670774
  40b725:	sub    al,0x7a
  40b727:	add    BYTE PTR [ebx-0x5ddba854],ch
  40b72d:	pop    edi
  40b72e:	or     BYTE PTR [ebx-0x5b289448],dl
  40b734:	xchg   BYTE PTR [ecx+edi*2],dh
  40b737:	dec    eax
  40b738:	xchg   edx,eax
  40b739:	(bad)  
  40b73a:	cmp    bl,BYTE PTR [ebx]
  40b73c:	push   es
  40b73d:	or     eax,0xb92a490c
  40b742:	mov    eax,0x4b1faf13
  40b747:	pushf  
  40b748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b749:	adc    al,0xa1
  40b74b:	je     0x40b781
  40b74d:	cli    
  40b74e:	mov    ecx,0x487570b4
  40b753:	js     0x40b758
  40b755:	push   0xffffffb2
  40b757:	push   ss
  40b758:	cmc    
  40b759:	test   BYTE PTR [ecx+ecx*1-0x7f2764a],0xfd
  40b761:	sbb    BYTE PTR [esi],al
  40b763:	cmp    al,0x16
  40b765:	imul   esi,DWORD PTR [esi],0xffffffbb
  40b768:	jbe    0x40b6f6
  40b76a:	jnp    0x40b760
  40b76c:	lock inc ebp
  40b76e:	outs   dx,DWORD PTR ds:[esi]
  40b76f:	inc    eax
  40b770:	cmp    DWORD PTR [edi],eax
  40b772:	add    DWORD PTR [ecx*4+0x75d29914],ebx
  40b779:	int    0x88
  40b77b:	popf   
  40b77c:	rcr    BYTE PTR [ebx+0x615d6e1c],0x34
  40b783:	push   edx
  40b784:	xchg   edx,eax
  40b785:	in     eax,0x2d
  40b787:	cmc    
  40b788:	lods   eax,DWORD PTR ds:[esi]
  40b789:	cdq    
  40b78a:	pushf  
  40b78b:	lock test al,0x8
  40b78e:	iret   
  40b78f:	sbb    dh,ah
  40b791:	out    dx,eax
  40b792:	mov    al,ds:0xb5c46ab6
  40b797:	or     bl,BYTE PTR [edx]
  40b799:	push   es
  40b79a:	sub    eax,0x5e6a8cfe
  40b79f:	das    
  40b7a0:	imul   BYTE PTR [esi]
  40b7a2:	or     eax,0xca40c7c0
  40b7a7:	sub    DWORD PTR [edx],edi
  40b7a9:	dec    esi
  40b7aa:	xor    DWORD PTR [eax],esp
  40b7ac:	icebp  
  40b7ad:	adc    eax,0x33892bf4
  40b7b2:	ja     0x40b773
  40b7b4:	sbb    DWORD PTR [edx-0x63],esi
  40b7b7:	pop    ds
  40b7b8:	jne    0x40b80d
  40b7ba:	cmp    BYTE PTR [ebp+0x7f],0x12
  40b7be:	jge    0x40b78e
  40b7c0:	fcmovb st,st(0)
  40b7c2:	mov    ah,0x4a
  40b7c4:	or     esi,DWORD PTR [ebx+0x41]
  40b7c7:	jle    0x40b7e4
  40b7c9:	cld    
  40b7ca:	xchg   ch,bh
  40b7cc:	rcl    BYTE PTR [esi],cl
  40b7ce:	mov    ds:0x4c41f3e7,eax
  40b7d3:	jnp    0x40b758
  40b7d5:	and    cl,cl
  40b7d7:	(bad)  
  40b7d8:	(bad)  
  40b7da:	adc    ebx,0x95d003c5
  40b7e0:	out    0x57,al
  40b7e2:	aaa    
  40b7e3:	lock mov ecx,0x76e9758d
  40b7e9:	pop    ebx
  40b7ea:	pop    esi
  40b7eb:	pusha  
  40b7ec:	adc    BYTE PTR [eax],al
  40b7ee:	push   cs
  40b7ef:	cmp    DWORD PTR [esi],ebx
  40b7f1:	sbb    al,ah
  40b7f3:	aam    0xfb
  40b7f5:	rol    BYTE PTR [edi+ebx*2+0x3ec8a35b],1
  40b7fc:	rol    DWORD PTR [ecx-0x178b9afd],0xdd
  40b803:	xchg   ebx,eax
  40b804:	xchg   esp,eax
  40b805:	paddd  mm2,QWORD PTR [edx-0x3c8705b0]
  40b80c:	xor    dh,BYTE PTR [ecx-0x14]
  40b80f:	cdq    
  40b810:	xchg   edi,eax
  40b811:	jbe    0x40b795
  40b813:	or     cl,bl
  40b815:	scas   al,BYTE PTR es:[edi]
  40b816:	mov    ds:0xac0104da,al
  40b81b:	ins    DWORD PTR es:[edi],dx
  40b81c:	mov    cl,BYTE PTR [ebp-0x7c888a98]
  40b822:	sahf   
  40b823:	add    DWORD PTR [ebp+0x26ffc9fc],ebx
  40b829:	mov    bh,0x6e
  40b82b:	cmp    DWORD PTR [esp+ebx*4+0xa],ebp
  40b82f:	and    eax,DWORD PTR [ebx+0x6a]
  40b832:	clc    
  40b833:	mov    ebp,0x8478bd5c
  40b838:	out    0x44,al
  40b83a:	repz inc edx
  40b83c:	fs mov esp,0x5691f146
  40b842:	rcr    BYTE PTR ds:0x173ee8ed,cl
  40b848:	dec    esi
  40b849:	std    
  40b84a:	ret    0xa136
  40b84d:	aas    
  40b84e:	fbld   TBYTE PTR [edx]
  40b850:	mov    al,0xe6
  40b852:	rol    BYTE PTR [esi+0x31],cl
  40b855:	add    ch,cl
  40b857:	mov    ds:0x7d33b023,eax
  40b85c:	ins    DWORD PTR es:[edi],dx
  40b85d:	test   eax,0xb4c940dc
  40b862:	mov    ch,0x98
  40b864:	push   es
  40b865:	ret    0xe144
  40b868:	das    
  40b869:	repnz (bad) 
  40b86b:	mov    eax,0xc02c3ff5
  40b870:	fcom   DWORD PTR [edi]
  40b872:	mov    ah,dh
  40b874:	cli    
  40b875:	leave  
  40b876:	inc    esi
  40b877:	mov    edx,0xd98d23f3
  40b87c:	add    ecx,DWORD PTR [ebx-0x30]
  40b87f:	test   DWORD PTR [ecx+0x2],0x1e9af1dd
  40b886:	cld    
  40b887:	arpl   bx,bx
  40b889:	add    al,0xc6
  40b88b:	out    dx,eax
  40b88c:	sbb    al,0x78
  40b88e:	in     eax,0x37
  40b890:	test   BYTE PTR [edi],dh
  40b892:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b894:	in     al,0xfd
  40b896:	and    BYTE PTR [edi+0xf],cl
  40b899:	sbb    al,0x26
  40b89b:	mov    ebp,0x899e62ed
  40b8a0:	mov    edi,0x7b259954
  40b8a5:	(bad)  
  40b8a6:	dec    edi
  40b8a7:	std    
  40b8a8:	dec    edi
  40b8a9:	int3   
  40b8aa:	stos   BYTE PTR es:[edi],al
  40b8ab:	mov    ebp,0xacc1546d
  40b8b0:	lds    ecx,FWORD PTR [ecx]
  40b8b2:	sub    BYTE PTR [edi+0xb],0xb1
  40b8b6:	repnz sub DWORD PTR [ecx-0x48],ebx
  40b8ba:	or     al,0xbc
  40b8bc:	xchg   edi,eax
  40b8bd:	shl    al,0x85
  40b8c0:	dec    ebp
  40b8c1:	cmp    BYTE PTR ds:0x3c44d249,al
  40b8c7:	dec    edi
  40b8c8:	daa    
  40b8c9:	mov    eax,ds:0xb84eb8be
  40b8ce:	cwde   
  40b8cf:	add    eax,0xe540aad1
  40b8d4:	daa    
  40b8d5:	cmp    eax,0x9c5225b7
  40b8da:	dec    edx
  40b8db:	sub    al,0x1d
  40b8dd:	pop    DWORD PTR [eax+0x48]
  40b8e0:	jl     0x40b940
  40b8e2:	push   eax
  40b8e3:	lods   eax,DWORD PTR ds:[esi]
  40b8e4:	mov    eax,0x669a8bca
  40b8e9:	xchg   DWORD PTR [edi-0x60c7b632],eax
  40b8ef:	xchg   ebp,eax
  40b8f0:	mov    dh,0x58
  40b8f2:	dec    edi
  40b8f3:	dec    ecx
  40b8f4:	arpl   WORD PTR [edi],bp
  40b8f6:	cmp    eax,0x17dce945
  40b8fb:	dec    eax
  40b8fc:	inc    cx
  40b8fe:	xor    bh,BYTE PTR [ebx]
  40b900:	pop    esi
  40b901:	mov    dh,BYTE PTR [eax]
  40b903:	push   ds
  40b904:	mov    esp,0x68b4ff09
  40b909:	es retf 0x7645
  40b90d:	lahf   
  40b90e:	cmp    eax,0xff859afe
  40b913:	leave  
  40b914:	cmp    DWORD PTR [ebx+0x63],ebp
  40b917:	cli    
  40b918:	cwde   
  40b919:	sbb    al,0x8a
  40b91b:	mov    ds:0xe55bb46d,al
  40b920:	dec    ebx
  40b921:	retf   0x1378
  40b924:	add    cl,BYTE PTR [ecx+ebp*1]
  40b927:	ins    DWORD PTR es:[edi],dx
  40b928:	xchg   edx,eax
  40b929:	jmp    0xe8eaca74
  40b92e:	adc    BYTE PTR [edx+0x3a],ah
  40b931:	xchg   edx,eax
  40b932:	mov    ebp,0xbc718c4f
  40b937:	mov    DWORD PTR [eax+0x49e39af9],ebx
  40b93d:	cli    
  40b93e:	mov    ds:0xa067fa7e,eax
  40b943:	idiv   DWORD PTR [edx+0x41]
  40b946:	xchg   esi,eax
  40b947:	frstor ds:0x7e980da3
  40b94d:	sahf   
  40b94e:	imul   esp,DWORD PTR [esi+0x1d07fbcf],0xffffffe9
  40b955:	scas   eax,DWORD PTR es:[edi]
  40b956:	xchg   ebp,eax
  40b957:	jo     0x40b93d
  40b959:	push   cs
  40b95a:	xchg   esi,eax
  40b95b:	adc    bh,dh
  40b95d:	int    0x1a
  40b95f:	xchg   esi,eax
  40b960:	cmp    ch,BYTE PTR [edx]
  40b962:	fdiv   QWORD PTR [esi+0x43]
  40b965:	fwait
  40b966:	inc    ebx
  40b967:	pushf  
  40b968:	in     eax,dx
  40b969:	jmp    0x40b994
  40b96b:	aas    
  40b96c:	mov    cl,0x2a
  40b96e:	dec    edi
  40b96f:	lock lock aam 0x12
  40b973:	retf   0x9be1
  40b976:	jno    0x40b9cd
  40b978:	call   0x2ecc:0xcca1bcbe
  40b97f:	div    DWORD PTR [edi+0x5f]
  40b982:	push   edx
  40b983:	sub    eax,0x5fe5c083
  40b988:	mov    cl,0x3e
  40b98a:	sub    al,0xaf
  40b98c:	push   esp
  40b98d:	sahf   
  40b98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b98f:	mov    bl,0x7c
  40b991:	push   ebp
  40b992:	xor    BYTE PTR [eax+0xe],al
  40b995:	clc    
  40b996:	push   0x48eae47a
  40b99b:	pop    ebp
  40b99c:	sbb    cl,BYTE PTR [esp+ebp*8+0x67]
  40b9a0:	scas   al,BYTE PTR es:[edi]
  40b9a1:	scas   al,BYTE PTR es:[di]
  40b9a3:	xlat   BYTE PTR es:[ebx]
  40b9a5:	inc    BYTE PTR [ebp-0x40]
  40b9a8:	sbb    DWORD PTR [eax+0x335da389],ebx
  40b9ae:	mov    dl,0x2a
  40b9b0:	and    al,0xa0
  40b9b2:	mov    ah,0x15
  40b9b4:	jmp    esp
  40b9b6:	jg     0x40b9dc
  40b9b8:	(bad)  
  40b9b9:	aad    0x1b
  40b9bb:	mov    bh,0x99
  40b9bd:	push   0x34
  40b9bf:	sar    DWORD PTR [esi],cl
  40b9c1:	fadd   DWORD PTR [esi]
  40b9c3:	push   eax
  40b9c4:	fld    QWORD PTR [edi]
  40b9c6:	push   cs
  40b9c7:	jle    0x40ba07
  40b9c9:	mov    ah,0x37
  40b9cb:	fs pusha 
  40b9cd:	sbb    eax,0xbe4f4bad
  40b9d2:	or     esp,DWORD PTR [ecx+0xc]
  40b9d5:	ins    BYTE PTR es:[edi],dx
  40b9d6:	call   FWORD PTR [ebp+0x6fcccc24]
  40b9dc:	sti    
  40b9dd:	pop    eax
  40b9de:	push   ss
  40b9df:	xor    al,0xa2
  40b9e1:	jne    0x40ba10
  40b9e3:	mov    bh,0xe6
  40b9e5:	xor    edi,edx
  40b9e7:	rol    DWORD PTR [eax-0x27],1
  40b9ea:	or     al,0xf4
  40b9ec:	inc    ecx
  40b9ed:	adc    eax,0x7b5b2baf
  40b9f2:	loopne 0x40b9e6
  40b9f4:	rcr    BYTE PTR [esi],1
  40b9f6:	adc    esp,DWORD PTR [ecx-0x4b6cbdae]
  40b9fc:	cmc    
  40b9fd:	adc    edx,DWORD PTR [ebp+0xe6666cb]
  40ba03:	(bad)  
  40ba05:	repz sbb DWORD PTR [ecx],edi
  40ba08:	xor    eax,0xfa7d0a96
  40ba0d:	call   0x4ff:0x832b9a34
  40ba14:	ret    0x4897
  40ba17:	xchg   DWORD PTR [edx],edi
  40ba19:	int    0xed
  40ba1b:	clc    
  40ba1c:	es scas eax,DWORD PTR es:[edi]
  40ba1e:	dec    esi
  40ba1f:	clc    
  40ba20:	sbb    eax,ebp
  40ba22:	ss add BYTE PTR cs:[eax+0x28],0x15
  40ba28:	pop    edx
  40ba29:	sar    DWORD PTR [edi],cl
  40ba2b:	and    BYTE PTR cs:[ebx-0x793617bc],dl
  40ba32:	pop    esi
  40ba33:	enter  0xe4d7,0x13
  40ba37:	and    DWORD PTR [esi+0x151bcc3e],ebp
  40ba3d:	fwait
  40ba3e:	mov    dh,0xb6
  40ba40:	or     BYTE PTR [eax-0x3304bbe0],bh
  40ba46:	fs inc esi
  40ba48:	add    eax,0x53b80db2
  40ba4d:	add    cl,BYTE PTR [esi+eax*8]
  40ba50:	(bad)  
  40ba52:	gs stos BYTE PTR es:[edi],al
  40ba54:	jmp    0xc70bfd65
  40ba59:	hlt    
  40ba5a:	sbb    DWORD PTR [esi-0x24],ebp
  40ba5d:	jno    0x40ba0e
  40ba5f:	rol    edi,1
  40ba61:	dec    ecx
  40ba62:	(bad)  
  40ba63:	out    dx,al
  40ba64:	inc    ecx
  40ba65:	(bad)  
  40ba66:	adc    al,0xdd
  40ba68:	mov    cl,0x95
  40ba6a:	lds    ebp,FWORD PTR [edi-0x3]
  40ba6d:	xchg   edx,eax
  40ba6e:	pop    edx
  40ba6f:	mov    ebx,0xa6d84ffb
  40ba74:	pop    edi
  40ba75:	mov    esp,0xe9d57c00
  40ba7a:	cmp    bl,BYTE PTR [esi]
  40ba7c:	inc    esi
  40ba7d:	popf   
  40ba7e:	cmp    BYTE PTR [edi-0x6a6e5f87],0xfc
  40ba85:	cmp    al,0xa8
  40ba87:	fisttp DWORD PTR [ebp-0x58]
  40ba8a:	jns    0x40ba4e
  40ba8c:	mov    eax,ds:0xad3ae826
  40ba91:	pop    ss
  40ba92:	push   edi
  40ba93:	(bad)  
  40ba94:	push   eax
  40ba95:	ficomp WORD PTR [ebx+ebp*1-0x17]
  40ba99:	mov    ds:0xb47db38d,eax
  40ba9e:	and    al,0x9e
  40baa0:	jge    0x40badd
  40baa2:	jmp    0xab6f:0xb91c5610
  40baa9:	jp     0x40ba84
  40baab:	mov    ebp,0x7cfbe91c
  40bab0:	nop
  40bab1:	lods   al,BYTE PTR ds:[esi]
  40bab2:	mov    esi,0xd2c04882
  40bab7:	inc    ecx
  40bab8:	jmp    ebx
  40baba:	rol    esp,0x24
  40babd:	cmp    DWORD PTR [edi+0x1313426b],edi
  40bac3:	lods   eax,DWORD PTR ds:[esi]
  40bac4:	jns    0x40bad6
  40bac6:	mov    eax,0x8f3654b2
  40bacb:	mov    esp,0x28766558
  40bad0:	cmp    ebx,ebp
  40bad2:	outs   dx,DWORD PTR ds:[esi]
  40bad3:	shl    al,0x5f
  40bad6:	inc    ecx
  40bad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad8:	adc    BYTE PTR [esi+0x78],0x41
  40badc:	retf   0xed1e
  40badf:	sub    BYTE PTR [ebx+0x25],0x36
  40bae3:	mov    cl,0x6e
  40bae5:	(bad)
  40bae9:	call   0x42df:0xdb16ee90
  40baf0:	retf   0x480e
  40baf3:	xchg   ebp,eax
  40baf4:	mov    ebx,0xb2a35035
  40baf9:	sub    al,0x1f
  40bafb:	fwait
  40bafc:	dec    edx
  40bafd:	push   eax
  40bafe:	inc    edi
  40baff:	sub    eax,ebp
  40bb01:	ror    DWORD PTR [eax],cl
  40bb03:	push   0x8959a2f4
  40bb08:	push   sp
  40bb0a:	push   edx
  40bb0b:	(bad)  
  40bb0c:	test   eax,0x84050343
  40bb11:	dec    eax
  40bb12:	int    0xae
  40bb14:	sbb    edx,esi
  40bb16:	sbb    BYTE PTR [edi+0x244aea47],0xfc
  40bb1d:	add    dl,BYTE PTR [edi-0x77]
  40bb20:	mov    ecx,0xbd39cf87
  40bb25:	xchg   ebp,eax
  40bb26:	cmp    edx,DWORD PTR [ecx]
  40bb28:	inc    eax
  40bb29:	popf   
  40bb2a:	leave  
  40bb2b:	pop    eax
  40bb2c:	mov    edi,0xb4c930a7
  40bb31:	pop    esi
  40bb32:	xor    BYTE PTR [edx],dh
  40bb34:	cmp    esp,edx
  40bb36:	mov    esi,DWORD PTR [esp+esi*8+0x7e9f57bd]
  40bb3d:	mov    ch,0xe3
  40bb3f:	add    DWORD PTR [eax+0xc],esp
  40bb42:	out    dx,eax
  40bb43:	mov    ch,0xe2
  40bb45:	and    BYTE PTR [ebp+0x5b2b605],bh
  40bb4b:	mov    edx,0x3b023352
  40bb50:	xchg   esp,eax
  40bb51:	in     al,dx
  40bb52:	stc    
  40bb53:	mov    DWORD PTR [esi],edx
  40bb55:	mov    al,0x78
  40bb57:	je     0x40bb71
  40bb59:	nop
  40bb5a:	outs   dx,DWORD PTR ds:[esi]
  40bb5b:	dec    eax
  40bb5c:	fistp  QWORD PTR [esp+ebx*4-0x5a]
  40bb60:	arpl   WORD PTR [edi-0x30989061],ax
  40bb66:	pop    ebp
  40bb67:	and    dh,BYTE PTR [esi+edx*1-0x25]
  40bb6b:	iret   
  40bb6c:	rcr    al,0x25
  40bb6f:	sahf   
  40bb70:	fld    TBYTE PTR [esi-0x21909877]
  40bb76:	pop    eax
  40bb77:	mov    edx,0x55450bb5
  40bb7c:	scas   eax,DWORD PTR es:[edi]
  40bb7d:	cmp    dh,BYTE PTR [edi-0x7a]
  40bb80:	ins    DWORD PTR es:[edi],dx
  40bb81:	enter  0x9f00,0x5a
  40bb85:	aaa    
  40bb86:	push   eax
  40bb87:	or     eax,0x7701c984
  40bb8c:	pushf  
  40bb8d:	jbe    0x40bb9c
  40bb8f:	mov    cs,edx
  40bb91:	push   0xffffffbf
  40bb93:	xor    DWORD PTR [ebx-0x1a],esi
  40bb96:	mov    WORD PTR [edx-0x64],ds
  40bb99:	jnp    0xfdd56f5d
  40bb9f:	jo     0x40bbbb
  40bba1:	in     eax,0xad
  40bba3:	(bad)  
  40bba5:	or     al,0x8e
  40bba7:	retf   0x752c
  40bbaa:	mov    es,ecx
  40bbac:	xchg   DWORD PTR [esp+eax*4-0x50769871],esi
  40bbb3:	sbb    dh,BYTE PTR [esi]
  40bbb5:	ds call 0x989bb2b9
  40bbbb:	call   0x4a3c:0xfc6e4ff
  40bbc2:	idiv   DWORD PTR fs:[ebx]
  40bbc5:	cmc    
  40bbc6:	ret    0xd078
  40bbc9:	jno    0x40bb6a
  40bbcb:	adc    al,0xfd
  40bbcd:	retf   0x88df
  40bbd0:	push   esp
  40bbd1:	or     esi,DWORD PTR [ebp-0x1a]
  40bbd4:	aam    0x81
  40bbd6:	bound  esi,QWORD PTR [ebp+ebp*2+0x7a]
  40bbda:	push   es
  40bbdb:	jno    0x40bbe9
  40bbdd:	ret    0x6650
  40bbe0:	push   eax
  40bbe1:	xchg   ebp,eax
  40bbe2:	jmp    0x40bc3f
  40bbe4:	fwait
  40bbe5:	mov    edx,0x7442f839
  40bbea:	cdq    
  40bbeb:	or     dh,BYTE PTR [ebp-0x56]
  40bbee:	(bad)  
  40bbef:	iret   
  40bbf0:	jmp    0x40bb78
  40bbf2:	mov    ds:0x9ec04fff,al
  40bbf7:	dec    ebp
  40bbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbf9:	sbb    BYTE PTR [edi-0x4000afa6],bh
  40bbff:	mov    ecx,0xfadf8ca3
  40bc04:	pop    edi
  40bc05:	add    eax,0x83c17cb8
  40bc0a:	adc    BYTE PTR [edi],dl
  40bc0c:	aas    
  40bc0d:	sub    al,0x15
  40bc0f:	(bad)  
  40bc10:	sahf   
  40bc11:	loop   0x40bbe6
  40bc13:	pop    edx
  40bc14:	rcl    BYTE PTR [edx-0x11],0x28
  40bc18:	hlt    
  40bc19:	daa    
  40bc1a:	sti    
  40bc1b:	sub    bl,BYTE PTR [ebx]
  40bc1d:	mov    ecx,0x3a996a8c
  40bc22:	and    cl,BYTE PTR [edi+0x65d335ca]
  40bc28:	xor    al,0x75
  40bc2a:	bound  ebx,QWORD PTR [ebp-0x47]
  40bc2d:	scas   eax,DWORD PTR es:[edi]
  40bc2e:	mov    esp,0x1bf4930f
  40bc33:	ins    BYTE PTR es:[edi],dx
  40bc34:	out    0x71,eax
  40bc36:	call   0x1ef6:0x3b08a44
  40bc3d:	inc    esi
  40bc3e:	jg     0x40bbe0
  40bc40:	push   eax
  40bc41:	int3   
  40bc42:	jp     0x40bc1d
  40bc44:	xchg   edi,eax
  40bc45:	inc    edx
  40bc46:	push   0xd0be96af
  40bc4b:	in     al,0x2c
  40bc4d:	in     al,dx
  40bc4e:	xor    eax,0xe4603013
  40bc53:	loop   0x40bc08
  40bc55:	dec    eax
  40bc56:	sub    esp,DWORD PTR ds:0xe6c17700
  40bc5c:	xor    ebx,edx
  40bc5e:	jae    0x40bcc1
  40bc60:	js     0x40bce1
  40bc62:	add    dl,bl
  40bc64:	add    BYTE PTR [esi-0x8],dl
  40bc67:	jno    0x40bce1
  40bc69:	mov    al,ds:0x22568dce
  40bc6e:	in     eax,dx
  40bc6f:	rol    BYTE PTR [edi+0x6d],cl
  40bc72:	mov    ah,0x5f
  40bc74:	js     0x40bc29
  40bc76:	or     al,0x48
  40bc78:	cmp    DWORD PTR [ecx+0x49],ecx
  40bc7b:	adc    DWORD PTR ds:0x1475ac5f,0xffffff9a
  40bc82:	sahf   
  40bc83:	scas   eax,DWORD PTR es:[edi]
  40bc84:	push   0x377c6535
  40bc89:	loope  0x40bc24
  40bc8b:	cmp    bh,al
  40bc8d:	popa   
  40bc8e:	fucomp st(1)
  40bc90:	cli    
  40bc91:	xchg   edx,eax
  40bc92:	push   ds
  40bc93:	push   esp
  40bc94:	push   ecx
  40bc95:	push   esi
  40bc96:	in     al,0xa6
  40bc98:	push   ss
  40bc99:	pop    esi
  40bc9a:	out    dx,al
  40bc9b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40bc9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9e:	xchg   edi,eax
  40bc9f:	and    BYTE PTR [ecx-0x44],ch
  40bca2:	fisub  WORD PTR [eax-0x1c2e6112]
  40bca8:	xchg   edx,eax
  40bca9:	add    BYTE PTR ds:0x7c3049ad,bh
  40bcaf:	jecxz  0x40bc88
  40bcb1:	mov    eax,0xfffe9d88
  40bcb6:	xor    eax,0xf22a68b2
  40bcbb:	popf   
  40bcbc:	push   ds
  40bcbd:	sti    
  40bcbe:	inc    esi
  40bcbf:	mov    ?,WORD PTR [edx]
  40bcc1:	out    0x84,eax
  40bcc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc4:	xchg   ebp,eax
  40bcc5:	pop    ebx
  40bcc6:	sub    bl,BYTE PTR [ebp-0x5795a2eb]
  40bccc:	xchg   ecx,eax
  40bccd:	mov    DWORD PTR [esi],ebp
  40bccf:	ins    BYTE PTR es:[edi],dx
  40bcd0:	add    DWORD PTR [ebp+0x73],esi
  40bcd3:	dec    edi
  40bcd4:	js     0x40bd0f
  40bcd6:	jnp    0x40bd11
  40bcd8:	sub    BYTE PTR ds:0x6f8eecbc,0x3e
  40bcdf:	push   esi
  40bce0:	jmp    0x10aa:0x8ecfeacf
  40bce7:	mov    bh,0x72
  40bce9:	loope  0x40bca2
  40bceb:	out    dx,al
  40bcec:	(bad)  
  40bced:	push   ecx
  40bcee:	sbb    eax,0x83a3ebff
  40bcf3:	dec    esp
  40bcf4:	leave  
  40bcf5:	loopne 0x40bcdc
  40bcf7:	addr16 lock push cs
  40bcfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcfb:	jno    0x40bd14
  40bcfd:	retf   
  40bcfe:	jne    0x40bd14
  40bd00:	mov    esp,0x3523db54
  40bd05:	dec    esp
  40bd06:	or     ebx,DWORD PTR [ecx+0x54a96bdd]
  40bd0c:	xchg   esp,eax
  40bd0d:	mov    ebx,0xde22fccd
  40bd12:	mov    ch,0x93
  40bd14:	dec    ecx
  40bd15:	das    
  40bd16:	mov    ecx,0x7dfdb0de
  40bd1b:	fwait
  40bd1c:	adc    ebp,ebp
  40bd1e:	jno    0x40bcd4
  40bd20:	sub    edx,edx
  40bd22:	imul   esp,DWORD PTR [ecx],0xbfd99a31
  40bd28:	mov    dh,0x5d
  40bd2a:	push   eax
  40bd2b:	adc    edx,DWORD PTR [eax]
  40bd2d:	mov    eax,0xc541d3d8
  40bd32:	mov    ebx,0x8f5e8625
  40bd37:	rcr    BYTE PTR [edi-0x24],1
  40bd3a:	fstp   QWORD PTR [esi+0x59a4b641]
  40bd40:	mov    eax,0xde3d0f5c
  40bd45:	(bad)  
  40bd46:	leave  
  40bd47:	call   0xf9935fe8
  40bd4c:	and    bl,dh
  40bd4e:	push   edi
  40bd4f:	repz fwait
  40bd51:	dec    ecx
  40bd52:	sbb    eax,0xb0c8d87c
  40bd57:	sar    esp,1
  40bd59:	pop    esi
  40bd5a:	add    ecx,DWORD PTR [ebx]
  40bd5c:	aaa    
  40bd5d:	mov    BYTE PTR [ecx+0x95f266e],bh
  40bd63:	call   0xd58f3e68
  40bd68:	inc    ecx
  40bd69:	das    
  40bd6a:	mov    eax,0x2e46c767
  40bd6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd70:	cli    
  40bd71:	lock add ecx,esp
  40bd74:	stos   DWORD PTR es:[edi],eax
  40bd75:	loop   0x40bd3f
  40bd77:	sub    eax,0xf8d64c0b
  40bd7c:	and    al,0xcf
  40bd7e:	sub    dl,bl
  40bd80:	fcmovu st,st(1)
  40bd82:	sbb    eax,0x2db1a5dd
  40bd87:	cmp    ebp,esp
  40bd89:	cli    
  40bd8a:	cld    
  40bd8b:	pop    eax
  40bd8c:	fs call 0x76ce6325
  40bd92:	cmc    
  40bd93:	nop
  40bd94:	push   0x64a8687c
  40bd99:	fisub  WORD PTR [edx+0xf]
  40bd9c:	adc    ebx,esp
  40bd9e:	inc    si
  40bda0:	rcr    DWORD PTR [ebp-0x41],1
  40bda3:	mov    DWORD PTR [eax],edi
  40bda5:	inc    ebp
  40bda6:	or     eax,0x669ba6aa
  40bdab:	pop    esp
  40bdac:	cmp    ecx,esi
  40bdae:	push   edi
  40bdaf:	jnp    0x40bde2
  40bdb1:	jns    0x40bdda
  40bdb3:	(bad)  [esi-0x63]
  40bdb6:	or     DWORD PTR [edx],edx
  40bdb8:	push   ebp
  40bdb9:	jnp    0x40bd48
  40bdbb:	xor    eax,0x584b34be
  40bdc0:	jne    0x40bd70
  40bdc2:	fisubr DWORD PTR fs:[esi+ebx*8]
  40bdc6:	sbb    dh,0xbb
  40bdc9:	jne    0x40bd7a
  40bdcb:	or     esp,DWORD PTR [ecx-0x3e]
  40bdce:	or     DWORD PTR [ebp+0x27a4cc37],eax
  40bdd4:	shr    DWORD PTR [ecx+eiz*4],cl
  40bdd7:	jge    0x40bdd7
  40bdd9:	cmovs  esp,DWORD PTR [ebp+0x12]
  40bddd:	push   ecx
  40bdde:	cmp    DWORD PTR [ecx+ebp*4+0xeef9bfb],ecx
  40bde5:	loope  0x40bdfd
  40bde7:	sub    esi,DWORD PTR [ebx+0x24fa62d6]
  40bded:	jb     0x40be64
  40bdef:	xor    ah,BYTE PTR [ecx-0x211f4c41]
  40bdf5:	push   esp
  40bdf6:	clc    
  40bdf7:	inc    dl
  40bdf9:	mov    edi,0x9cd49576
  40bdfe:	dec    ebx
  40bdff:	call   0x4e41c90b
  40be04:	cs dec eax
  40be06:	xor    al,0x3d
  40be08:	jbe    0x40be2a
  40be0a:	add    al,0x8e
  40be0c:	je     0x40be1f
  40be0e:	gs (bad) 
  40be10:	mov    ss,edi
  40be12:	xchg   DWORD PTR [eax+0x35],esi
  40be15:	and    al,0x29
  40be17:	push   eax
  40be18:	xchg   BYTE PTR [eax+0x1d],al
  40be1b:	and    bl,BYTE PTR [eax+ecx*1-0x4fd5af70]
  40be22:	lea    edi,[edi-0x56]
  40be25:	adc    al,0xf6
  40be27:	and    ecx,ebx
  40be29:	(bad)  
  40be2a:	test   eax,0x9d3b6b96
  40be2f:	lods   eax,DWORD PTR ds:[esi]
  40be30:	(bad)  
  40be31:	(bad)  
  40be33:	dec    edx
  40be34:	adc    bl,BYTE PTR [esi+0x45]
  40be37:	sub    al,0x5e
  40be39:	push   es
  40be3a:	fsubp  st(2),st
  40be3c:	sub    DWORD PTR [eax-0x27906ace],0xffffffe9
  40be43:	jmp    0xd156:0xf23ab54a
  40be4a:	cmp    DWORD PTR [eax-0x6cd2de77],ebp
  40be50:	pop    ecx
  40be51:	repnz rol BYTE PTR ds:0x506db20f,cl
  40be58:	rcl    esp,cl
  40be5a:	xchg   DWORD PTR [ecx+edi*4],esi
  40be5d:	out    0xf0,eax
  40be5f:	inc    esi
  40be60:	sbb    eax,0xd25ce4a4
  40be65:	push   esp
  40be66:	xchg   ebx,eax
  40be67:	fnstcw WORD PTR [esi-0x51e87ecc]
  40be6d:	sbb    eax,DWORD PTR ds:0x8f98da4b
  40be73:	lock lea ebp,[ebx+0x69c4c616]
  40be7a:	xchg   edx,eax
  40be7b:	mov    ebp,0xe4bc165b
  40be80:	mov    es,WORD PTR [ecx]
  40be82:	jmp    0xc771:0xab07e048
  40be89:	nop
  40be8a:	ins    DWORD PTR es:[edi],dx
  40be8b:	mov    cl,cl
  40be8d:	(bad)  
  40be8e:	es push esp
  40be90:	repz into 
  40be92:	mov    es,WORD PTR [edi+edx*4]
  40be95:	cmp    BYTE PTR [ebp+0x7a],0x5b
  40be99:	and    BYTE PTR [ecx-0x3],bl
  40be9c:	gs nop
  40be9e:	shr    BYTE PTR [edi+ecx*2-0x7d42391a],0xf2
  40bea6:	fcom   QWORD PTR [ecx]
  40bea8:	sub    bl,dl
  40beaa:	sub    DWORD PTR [ecx],esp
  40beac:	sbb    DWORD PTR [ebp+0x41d10074],edi
  40beb2:	loopne 0x40bf18
  40beb4:	xor    BYTE PTR [esp+edx*4-0x19],0x5c
  40beb9:	sbb    edx,DWORD PTR [edi]
  40bebb:	and    al,0x5e
  40bebd:	push   0xf94c9a21
  40bec2:	sbb    cl,BYTE PTR [ebx+0x8]
  40bec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bec6:	jmp    0xeb5ec845
  40becb:	or     edx,DWORD PTR [ebx]
  40becd:	out    dx,al
  40bece:	cwde   
  40becf:	jl     0x40beeb
  40bed1:	cld    
  40bed2:	and    eax,DWORD PTR [ebx]
  40bed4:	jb     0x40bf48
  40bed6:	dec    eax
  40bed7:	fucomip st,st(0)
  40bed9:	pop    ebp
  40beda:	jecxz  0x40bf1c
  40bedc:	in     eax,0x35
  40bede:	in     eax,dx
  40bedf:	ins    BYTE PTR es:[edi],dx
  40bee0:	gs or  eax,0xec4451a1
  40bee6:	cmp    al,BYTE PTR [esi-0x65aa54cb]
  40beec:	popa   
  40beed:	pop    edi
  40beee:	jns    0x40bec9
  40bef0:	call   0x22235994
  40bef5:	icebp  
  40bef6:	bound  eax,QWORD PTR [ebx-0x5cf73fa2]
  40befc:	jnp    0x40bf56
  40befe:	les    ebp,FWORD PTR [edi-0x21]
  40bf01:	cmp    bh,BYTE PTR [esi+0x45]
  40bf04:	mov    ecx,0x5b089360
  40bf09:	sahf   
  40bf0a:	inc    ecx
  40bf0b:	or     ebp,edi
  40bf0d:	cmp    eax,0x4fa74af5
  40bf12:	add    DWORD PTR [ecx+0x8],esp
  40bf15:	call   0xb5ce:0x6ff8dced
  40bf1c:	stos   DWORD PTR es:[edi],eax
  40bf1d:	sub    bh,BYTE PTR ds:0x47c78ec2
  40bf23:	mov    eax,0xd0cc92fc
  40bf28:	xor    ebp,DWORD PTR [ecx-0x69]
  40bf2b:	jbe    0x40bf69
  40bf2d:	xchg   ecx,eax
  40bf2e:	neg    DWORD PTR [ebx+0x62]
  40bf31:	sbb    ecx,ebp
  40bf33:	pop    esi
  40bf34:	dec    ebp
  40bf35:	ret    
  40bf36:	fwait
  40bf37:	jmp    0x40bfad
  40bf39:	js     0x40bed5
  40bf3b:	fisttp DWORD PTR [ebp-0x72dc8d1b]
  40bf41:	leave  
  40bf42:	stos   DWORD PTR es:[edi],eax
  40bf43:	enter  0xe1ad,0x7
  40bf47:	pop    edx
  40bf48:	gs loop 0x40bfab
  40bf4b:	add    dh,BYTE PTR [esi+0x7509c18e]
  40bf51:	loope  0x40bf64
  40bf53:	mov    ds:0x9bf60c28,eax
  40bf58:	pop    ss
  40bf59:	aam    0x50
  40bf5b:	jmp    0xc39f:0x59489161
  40bf62:	mov    al,ds:0x96f49952
  40bf67:	in     eax,0xc8
  40bf69:	adc    al,BYTE PTR [ecx]
  40bf6b:	jge    0x40bf34
  40bf6d:	clc    
  40bf6e:	push   eax
  40bf6f:	add    ebx,ebx
  40bf71:	retf   0x1afe
  40bf74:	int    0x85
  40bf76:	dec    ebx
  40bf77:	popf   
  40bf78:	pop    edx
  40bf79:	aad    0xc3
  40bf7b:	stos   BYTE PTR es:[edi],al
  40bf7c:	fwait
  40bf7d:	jecxz  0x40bf54
  40bf7f:	cdq    
  40bf80:	in     eax,dx
  40bf81:	or     al,0xe8
  40bf83:	mov    esp,0x8aeb51e2
  40bf88:	jg     0x40bf59
  40bf8a:	stos   BYTE PTR es:[edi],al
  40bf8b:	sub    al,0xad
  40bf8d:	jb     0x40bfec
  40bf8f:	sahf   
  40bf90:	mov    BYTE PTR [edi+0xaf0d6e6],dh
  40bf96:	mov    ch,0x6c
  40bf98:	retf   
  40bf99:	mov    BYTE PTR [edx],bh
  40bf9b:	mov    ebx,0xaf89a5b1
  40bfa0:	inc    esi
  40bfa1:	or     DWORD PTR [edx],0xffffff86
  40bfa4:	fiadd  WORD PTR [edi]
  40bfa6:	jne    0x40bfa4
  40bfa8:	mov    dl,0x25
  40bfaa:	push   ebp
  40bfab:	sub    dl,0x2c
  40bfae:	jle    0x40bfae
  40bfb0:	pop    esp
  40bfb1:	jns    0x40bfac
  40bfb3:	and    DWORD PTR [esi-0x1b],ebp
  40bfb6:	pusha  
  40bfb7:	jecxz  0x40bf95
  40bfb9:	mov    ch,0xe5
  40bfbb:	imul   esp,ebx,0x63
  40bfbe:	mov    ecx,DWORD PTR [ebp+0x5aaee007]
  40bfc4:	add    eax,0x6b7a3dfe
  40bfc9:	sub    DWORD PTR [eax],eax
  40bfcb:	test   BYTE PTR [esi-0x6f894046],ch
  40bfd1:	ins    DWORD PTR es:[edi],dx
  40bfd2:	inc    eax
  40bfd3:	inc    esi
  40bfd4:	cld    
  40bfd5:	push   cs
  40bfd6:	xchg   ebp,eax
  40bfd7:	inc    esi
  40bfd8:	mov    bl,0x0
  40bfda:	xchg   DWORD PTR [ebp-0x2ef40d77],esp
  40bfe0:	das    
  40bfe1:	pushf  
  40bfe2:	dec    ecx
  40bfe3:	popa   
  40bfe4:	dec    edx
  40bfe5:	mov    al,0xd4
  40bfe7:	mov    eax,0x8e1803f9
  40bfec:	xor    dh,BYTE PTR [edx]
  40bfee:	mov    ch,0xdc
  40bff0:	ins    BYTE PTR es:[edi],dx
  40bff1:	fsubr  DWORD PTR [ecx-0x1d3557]
  40bff7:	stos   DWORD PTR es:[edi],eax
  40bff8:	inc    ebp
  40bff9:	xchg   esp,eax
  40bffa:	push   es
  40bffb:	inc    eax
  40bffc:	sbb    esp,DWORD PTR [edx+0x13]
  40bfff:	cli    
  40c000:	out    dx,al
  40c001:	pop    ecx
  40c002:	jbe    0x40bf94
  40c004:	shl    BYTE PTR [edx+0x57],1
  40c007:	xlat   BYTE PTR ds:[ebx]
  40c008:	sub    bh,BYTE PTR ds:0x340f2c1
  40c00e:	test   eax,0x807df2f0
  40c013:	(bad)  
  40c014:	std    
  40c015:	fdivr  DWORD PTR [ebp-0x2b]
  40c018:	iret   
  40c019:	imul   ecx,DWORD PTR [edi-0x56],0x94515866
  40c020:	pusha  
  40c021:	jp     0x40c03a
  40c023:	adc    eax,0x36208c4f
  40c028:	test   al,0xbb
  40c02a:	(bad)  
  40c02b:	call   0x50c7:0xce35c07b
  40c032:	push   ebx
  40c033:	adc    eax,0xb848eb9
  40c038:	in     eax,dx
  40c039:	push   0x917f94b
  40c03e:	push   edx
  40c03f:	xor    BYTE PTR [ecx],dl
  40c041:	jg     0x40c00e
  40c043:	outs   dx,DWORD PTR ds:[esi]
  40c044:	mov    ?,WORD PTR [eax]
  40c046:	inc    ebx
  40c047:	or     eax,0x88b0488d
  40c04c:	aad    0x49
  40c04e:	arpl   bx,bx
  40c050:	xchg   edi,eax
  40c051:	xor    DWORD PTR [ecx+ebp*2+0x68],edx
  40c055:	mov    ds:0xc7c043ec,al
  40c05a:	mov    eax,ds:0xd9fe3eb4
  40c05f:	or     ah,BYTE PTR [edi]
  40c061:	inc    eax
  40c062:	xor    BYTE PTR [eax],bl
  40c064:	lea    ebx,[eax-0x27]
  40c067:	jbe    0x40c006
  40c069:	lock mov ebx,DWORD PTR [ebx+0x7]
  40c06d:	fistp  WORD PTR [edx+0x3f5d7c2c]
  40c073:	xor    al,0xb9
  40c075:	xchg   edx,eax
  40c076:	add    bl,BYTE PTR [eax]
  40c078:	push   0x762e4920
  40c07d:	(bad)  
  40c07e:	mov    al,0x3d
  40c080:	into   
  40c081:	sahf   
  40c082:	lods   eax,DWORD PTR ds:[esi]
  40c083:	mov    edx,0xa165f5d
  40c088:	lahf   
  40c089:	add    ebx,DWORD PTR [ebx-0x7cca59cc]
  40c08f:	inc    esp
  40c090:	int    0x4e
  40c092:	idiv   BYTE PTR [edi-0x47]
  40c095:	fcomp  QWORD PTR [ecx-0x440df913]
  40c09b:	shr    BYTE PTR [ecx],1
  40c09d:	int    0x15
  40c09f:	aas    
  40c0a0:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0a2:	push   cs
  40c0a3:	scas   eax,DWORD PTR es:[edi]
  40c0a4:	mov    esi,0x408943cd
  40c0a9:	or     eax,0x80d3c211
  40c0ae:	retf   0xb029
  40c0b1:	pusha  
  40c0b2:	push   0xa7183fad
  40c0b7:	inc    ecx
  40c0b8:	ins    BYTE PTR es:[edi],dx
  40c0b9:	push   ss
  40c0ba:	xchg   edx,eax
  40c0bb:	imul   ebp,DWORD PTR gs:[eax],0x9bf69318
  40c0c2:	jp     0x40c0ba
  40c0c4:	ja     0x40c096
  40c0c6:	es data16 fs (bad) 
  40c0ca:	stc    
  40c0cb:	mov    dh,0xc6
  40c0cd:	xchg   esp,eax
  40c0ce:	loopne 0x40c0f8
  40c0d0:	les    edi,FWORD PTR [ecx]
  40c0d2:	or     dl,0xff
  40c0d5:	popf   
  40c0d6:	stos   BYTE PTR es:[edi],al
  40c0d7:	gs jmp 0x503eb70f
  40c0dd:	inc    ebx
  40c0de:	pop    eax
  40c0df:	or     ecx,edi
  40c0e1:	mov    ah,0x7f
  40c0e3:	fist   DWORD PTR [ebp*4+0x47ded423]
  40c0ea:	shr    DWORD PTR [esi+0x5a414636],0x89
  40c0f1:	xchg   esi,eax
  40c0f2:	mov    ebx,0xb331ee46
  40c0f7:	xor    ebx,DWORD PTR [eax-0x2cacc5e0]
  40c0fd:	jnp    0x40c091
  40c0ff:	add    BYTE PTR [edx+0xf],ah
  40c102:	xor    ch,BYTE PTR [edx+edi*8]
  40c105:	sub    BYTE PTR ss:[edi],0x5a
  40c109:	add    ebx,DWORD PTR [ebx-0x5d96ae6]
  40c10f:	ret    
  40c110:	lea    esi,[esi+0x8fa557]
  40c116:	sub    al,0x50
  40c118:	xchg   edx,eax
  40c119:	and    bh,BYTE PTR [ebx]
  40c11b:	aaa    
  40c11c:	sar    DWORD PTR [eax-0x1ebe6bea],1
  40c122:	mov    al,0x49
  40c124:	popf   
  40c125:	sahf   
  40c126:	fisubr DWORD PTR [edx-0x69]
  40c129:	lods   al,BYTE PTR ds:[esi]
  40c12a:	jno    0x40c1a8
  40c12c:	push   ebp
  40c12d:	xchg   edx,eax
  40c12e:	mov    ah,0x7f
  40c130:	xor    edx,DWORD PTR [eax+0x5f]
  40c133:	sbb    al,0x6c
  40c135:	push   edx
  40c136:	stos   BYTE PTR es:[edi],al
  40c137:	rol    BYTE PTR [ecx-0x6182a684],0xab
  40c13e:	mov    edi,0xca59609b
  40c143:	jge    0x40c0fc
  40c145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c146:	mov    ds,edi
  40c148:	inc    ebp
  40c149:	repz push edx
  40c14b:	pop    es
  40c14c:	mov    al,ds:0xea32d978
  40c151:	mov    bl,0x39
  40c153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c154:	jnp    0x40c1b2
  40c156:	loope  0x40c153
  40c158:	dec    edi
  40c159:	or     al,0xf6
  40c15b:	aam    0x71
  40c15d:	leave  
  40c15e:	sbb    eax,0xfffffffd
  40c161:	cdq    
  40c162:	jns    0x40c1d9
  40c164:	xchg   ebx,eax
  40c165:	jle    0x40c10b
  40c167:	mov    ecx,0x51227b31
  40c16c:	jecxz  0x40c189
  40c16e:	pop    edx
  40c16f:	adc    BYTE PTR gs:[edx-0x4ef50dcd],0x15
  40c177:	add    esp,eax
  40c179:	dec    edx
  40c17a:	xchg   edx,eax
  40c17b:	and    ebp,DWORD PTR [eax-0x2f30d986]
  40c181:	push   esp
  40c182:	rcl    DWORD PTR [esi+0x533a2a64],1
  40c188:	push   edx
  40c189:	jmp    0xbe7d1812
  40c18e:	stc    
  40c18f:	int    0x33
  40c191:	pop    ds
  40c192:	aam    0x82
  40c194:	pop    edx
  40c195:	inc    edx
  40c196:	inc    ecx
  40c197:	xor    esp,DWORD PTR [ebp+ebx*4+0x35]
  40c19b:	or     BYTE PTR [ecx+0x2e1578d7],dl
  40c1a1:	sub    DWORD PTR [eax+0xc7d158b],edi
  40c1a7:	push   0x3c79a7d8
  40c1ac:	(bad)  
  40c1ad:	stos   BYTE PTR es:[edi],al
  40c1ae:	ret    0x3c8f
  40c1b1:	aad    0x5
  40c1b3:	dec    ebp
  40c1b4:	sbb    BYTE PTR [ecx+0x7b7da1e6],ch
  40c1ba:	sbb    cl,BYTE PTR [ecx]
  40c1bc:	das    
  40c1bd:	adc    eax,0xacd38732
  40c1c2:	sub    DWORD PTR [ebx],esp
  40c1c4:	(bad)  [edx]
  40c1c6:	out    0xe5,al
  40c1c8:	lds    eax,FWORD PTR [edi+0x6a5e18a6]
  40c1ce:	mov    ds:0x5e06733,al
  40c1d3:	pop    esi
  40c1d4:	sbb    bh,dh
  40c1d6:	clc    
  40c1d7:	imul   edi,DWORD PTR [ebx+0x72b0654f],0xc897e5c7
  40c1e1:	mov    ebp,edx
  40c1e3:	shl    BYTE PTR [eax+0x1834a00c],cl
  40c1e9:	out    dx,al
  40c1ea:	push   es
  40c1eb:	inc    edi
  40c1ec:	stc    
  40c1ed:	outs   dx,DWORD PTR ds:[esi]
  40c1ee:	inc    edx
  40c1ef:	repnz pop es
  40c1f1:	jnp    0x40c180
  40c1f3:	out    0x2c,al
  40c1f5:	popaw  
  40c1f7:	fsubr  QWORD PTR [edi]
  40c1f9:	xchg   DWORD PTR [edx+0x78],ebp
  40c1fc:	jge    0x40c23c
  40c1fe:	(bad)  
  40c1ff:	jae    0x40c1e7
  40c201:	hlt    
  40c202:	ja     0x40c241
  40c204:	fistp  WORD PTR [eax-0x4d]
  40c207:	out    0xaf,eax
  40c209:	mov    eax,ds:0xa99faa36
  40c20e:	xchg   ebx,eax
  40c20f:	loop   0x40c227
  40c211:	push   ss
  40c212:	hlt    
  40c213:	outs   dx,BYTE PTR ds:[esi]
  40c214:	push   edx
  40c215:	push   ecx
  40c216:	in     al,0xea
  40c218:	sbb    BYTE PTR [ecx+0x7],bl
  40c21b:	sar    DWORD PTR [esi],0x82
  40c21e:	stc    
  40c21f:	aad    0x98
  40c221:	dec    ebx
  40c222:	(bad)  
  40c224:	adc    BYTE PTR [edi+0x4b7ca5da],0xb3
  40c22b:	xchg   ebx,eax
  40c22c:	ss adc al,0x55
  40c22f:	fdivr  DWORD PTR [ecx-0x63]
  40c232:	xchg   ecx,eax
  40c233:	sub    dh,BYTE PTR [edi-0x23e7a3f4]
  40c239:	xchg   DWORD PTR [ebp+ebp*2+0x4c],eax
  40c23d:	pusha  
  40c23e:	test   eax,0x85e78d7
  40c243:	cmp    eax,0x3feb34e3
  40c248:	or     ebp,DWORD PTR [edi+esi*4]
  40c24b:	test   DWORD PTR [eax-0x7595c5f],eax
  40c251:	and    DWORD PTR [edx-0x4fcad4c6],ebx
  40c257:	push   es
  40c258:	(bad)  
  40c259:	ja     0x40c275
  40c25b:	or     ch,al
  40c25d:	xchg   edi,eax
  40c25e:	adc    al,0x67
  40c260:	dec    edi
  40c261:	loopne 0x40c241
  40c263:	cs or  al,0x8b
  40c266:	les    ebp,FWORD PTR [edi-0x75]
  40c269:	xor    dh,bl
  40c26b:	(bad)  
  40c26d:	jle    0x40c247
  40c26f:	push   ds
  40c270:	aam    0x4e
  40c272:	xchg   esp,eax
  40c273:	rol    BYTE PTR [eax],0x82
  40c276:	pop    ebp
  40c277:	push   edx
  40c278:	enter  0x18f0,0xa4
  40c27c:	push   esi
  40c27d:	xchg   BYTE PTR [ecx-0x6c],dl
  40c280:	cli    
  40c281:	(bad)  
  40c283:	xchg   ebx,eax
  40c284:	push   eax
  40c285:	cmp    cl,BYTE PTR [esp+ecx*1]
  40c288:	popa   
  40c289:	jp     0x40c2d0
  40c28b:	dec    esi
  40c28c:	(bad)  
  40c28d:	and    BYTE PTR [edx],dh
  40c28f:	pop    esp
  40c290:	lods   eax,DWORD PTR ds:[esi]
  40c291:	mov    eax,0xd3d3361
  40c296:	test   eax,0x15ac46e0
  40c29b:	mov    edi,0xf2e1fd51
  40c2a0:	jecxz  0x40c2ec
  40c2a2:	mov    cl,0xd2
  40c2a4:	adc    esi,esi
  40c2a6:	adc    edi,edx
  40c2a8:	repnz push ebx
  40c2aa:	cmp    al,0x67
  40c2ac:	push   cs
  40c2ad:	lahf   
  40c2ae:	mov    al,ds:0x1276015a
  40c2b3:	pop    ds
  40c2b4:	jns    0x40c281
  40c2b6:	lahf   
  40c2b7:	(bad)  
  40c2b8:	idiv   DWORD PTR [ebx]
  40c2ba:	pop    ds
  40c2bb:	cli    
  40c2bc:	call   0x8adf30a5
  40c2c1:	test   BYTE PTR [edi-0x41],ah
  40c2c4:	and    bh,0x9c
  40c2c7:	ret    
  40c2c8:	(bad)  
  40c2c9:	retf   0x3720
  40c2cc:	icebp  
  40c2cd:	repnz push eax
  40c2cf:	std    
  40c2d0:	pop    ss
  40c2d1:	adc    BYTE PTR ds:0x630bf9cc,0xe9
  40c2d9:	lds    edi,FWORD PTR [edx]
  40c2db:	dec    ebx
  40c2dc:	pushf  
  40c2dd:	inc    ecx
  40c2de:	and    al,0x4a
  40c2e0:	ss mov eax,0x9b61243a
  40c2e6:	loop   0x40c2e6
  40c2e8:	imul   edi,ebp,0xf64c9463
  40c2ee:	inc    ebp
  40c2ef:	dec    si
  40c2f1:	xchg   DWORD PTR [edi],eax
  40c2f3:	xchg   edx,eax
  40c2f4:	push   0xd365ae2c
  40c2f9:	adc    ecx,DWORD PTR [ebx-0x3cbaffc4]
  40c2ff:	or     eax,0x7a02530b
  40c304:	shl    BYTE PTR [ecx-0x59122c62],1
  40c30a:	(bad)  [ebx+0x26]
  40c30d:	inc    al
  40c30f:	xor    ebp,esp
  40c311:	fcmovu st,st(2)
  40c313:	push   edx
  40c314:	js     0x40c36a
  40c316:	scas   al,BYTE PTR es:[edi]
  40c317:	fisttp DWORD PTR [esi]
  40c319:	inc    esi
  40c31a:	adc    DWORD PTR [edi+0x75],esp
  40c31d:	xor    eax,0xe5e43776
  40c322:	jb     0x40c2d8
  40c324:	(bad)  
  40c326:	lea    edi,[eax+0x5bf2842a]
  40c32c:	xchg   esp,eax
  40c32d:	popf   
  40c32e:	(bad)  
  40c330:	cld    
  40c331:	or     al,BYTE PTR [ecx]
  40c333:	popa   
  40c334:	xchg   esi,eax
  40c335:	dec    ebx
  40c336:	add    DWORD PTR [edi],edx
  40c338:	inc    ebp
  40c339:	sub    ebp,ebx
  40c33b:	xor    al,0x49
  40c33d:	iret   
  40c33e:	and    ecx,DWORD PTR [edx+edi*2]
  40c341:	popf   
  40c342:	test   BYTE PTR [ecx],cl
  40c344:	dec    eax
  40c345:	add    BYTE PTR [esi+0x81eb9da],ch
  40c34b:	sub    DWORD PTR [esi-0x39],edx
  40c34e:	add    DWORD PTR [ecx-0x5f209611],0x55
  40c355:	imul   ebp,esp,0x76865fef
  40c35b:	jbe    0x40c334
  40c35d:	cli    
  40c35e:	inc    esi
  40c35f:	or     dh,BYTE PTR [edi-0x5d]
  40c362:	push   edi
  40c363:	mov    eax,0x39396c57
  40c368:	fwait
  40c369:	sahf   
  40c36a:	stos   BYTE PTR es:[edi],al
  40c36b:	add    eax,0xaf540692
  40c370:	push   eax
  40c371:	call   0xe2cf8809
  40c376:	sub    bh,BYTE PTR [esi]
  40c378:	sub    BYTE PTR [edx],dl
  40c37a:	jb     0x40c3ac
  40c37c:	fidivr DWORD PTR [edi+0x7f8876b2]
  40c382:	cli    
  40c383:	cmp    al,0x8e
  40c385:	adc    esp,DWORD PTR [ebx-0x68]
  40c388:	test   edi,0xb63c0429
  40c38e:	pop    edx
  40c38f:	adc    eax,0xaeb72fdc
  40c394:	(bad)  
  40c395:	imul   esi,edi,0x40
  40c398:	mov    fs,WORD PTR [eax+0x54ba7e99]
  40c39e:	or     al,0x4c
  40c3a0:	push   ebp
  40c3a1:	sub    ah,0xa0
  40c3a4:	imul   esi,DWORD PTR [esi],0x7a8a195c
  40c3aa:	sub    DWORD PTR [ebx-0x30],ebx
  40c3ad:	lods   eax,DWORD PTR ds:[esi]
  40c3ae:	std    
  40c3af:	pop    esi
  40c3b0:	pop    ebp
  40c3b1:	sub    al,0x82
  40c3b3:	sub    DWORD PTR [edx+0x58c8682d],ebx
  40c3b9:	mov    bh,BYTE PTR [ebp-0xd85cfba]
  40c3bf:	cmp    ah,BYTE PTR [esi+eax*8-0x618e1beb]
  40c3c6:	adc    BYTE PTR fs:[edx-0x17],ch
  40c3ca:	push   ebx
  40c3cb:	les    ebx,FWORD PTR [edi+0x2b]
  40c3ce:	lahf   
  40c3cf:	div    DWORD PTR [edi]
  40c3d1:	fwait
  40c3d2:	pop    eax
  40c3d3:	sub    DWORD PTR [esi],0x9b1dc732
  40c3d9:	je     0x40c3e7
  40c3db:	dec    eax
  40c3dc:	push   es
  40c3dd:	rol    BYTE PTR [edi-0x22],cl
  40c3e0:	in     al,dx
  40c3e1:	push   ds
  40c3e2:	mov    ah,BYTE PTR [ecx]
  40c3e4:	mov    ebp,0x8fdc58ec
  40c3e9:	fadd   QWORD PTR [edi]
  40c3eb:	dec    esp
  40c3ec:	das    
  40c3ed:	and    al,0xa3
  40c3ef:	lahf   
  40c3f0:	mov    ecx,DWORD PTR [edx+0x7c6e4cdb]
  40c3f6:	mov    ah,0x88
  40c3f8:	pop    esp
  40c3f9:	xchg   ecx,eax
  40c3fa:	push   ebx
  40c3fb:	mov    edi,DWORD PTR [eax]
  40c3fd:	jmp    0xe0d6a1f0
  40c402:	xor    eax,0x5fc0e6b9
  40c407:	push   0xffffff9a
  40c409:	mov    eax,0xab83f309
  40c40e:	gs cmc 
  40c410:	fisubr DWORD PTR [ebp-0x4214415c]
  40c416:	and    DWORD PTR [ebp-0x314788b8],ecx
  40c41c:	adc    DWORD PTR [ebx],ebx
  40c41e:	xchg   ecx,eax
  40c41f:	cmp    eax,DWORD PTR [eax]
  40c421:	adc    al,0x97
  40c423:	dec    edi
  40c424:	or     DWORD PTR [ecx+0x5f],0xffffffd0
  40c428:	mov    edi,0xec609bbb
  40c42d:	and    BYTE PTR [ebx+0x5462ee62],dl
  40c433:	jne    0x40c3ff
  40c435:	adc    al,0x60
  40c437:	xchg   edi,eax
  40c438:	sbb    edx,DWORD PTR [ebx+eax*1+0x49f605fb]
  40c43f:	mov    cl,0xa3
  40c441:	clc    
  40c442:	rcl    DWORD PTR [esi+0x28000536],1
  40c448:	mov    edi,0xe28f7b9d
  40c44d:	ja     0x40c4ba
  40c44f:	fnstcw WORD PTR [esi+0x488c21af]
  40c455:	xor    eax,DWORD PTR [edx+ebx*1]
  40c458:	pop    eax
  40c459:	ins    DWORD PTR es:[edi],dx
  40c45a:	icebp  
  40c45b:	pushf  
  40c45c:	inc    ecx
  40c45d:	ss scas al,BYTE PTR es:[edi]
  40c45f:	push   esi
  40c460:	mov    bh,0xca
  40c462:	and    edi,DWORD PTR [ebp+0x4c]
  40c465:	mov    dl,0x7e
  40c467:	pop    esi
  40c468:	xchg   DWORD PTR [edx-0x72],eax
  40c46b:	clc    
  40c46c:	test   ah,dh
  40c46e:	cmp    DWORD PTR [edi],ecx
  40c470:	ror    DWORD PTR [eax+0x343ea79f],cl
  40c476:	add    dh,BYTE PTR [ebx]
  40c478:	jmp    0x46b06133
  40c47d:	push   ebp
  40c47e:	mov    eax,0x3902dfe4
  40c483:	ret    
  40c484:	push   ss
  40c485:	imul   esp,esp,0x908eb9fb
  40c48b:	mov    ebp,0x4c9cc37e
  40c490:	rcl    DWORD PTR [ecx+eax*2],cl
  40c493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c494:	dec    ebp
  40c495:	out    0x5e,eax
  40c497:	dec    ebp
  40c498:	popf   
  40c499:	add    BYTE PTR [esi+0x55],bl
  40c49c:	js     0x40c4f8
  40c49e:	nop
  40c49f:	rdpmc  
  40c4a1:	jge    0x40c509
  40c4a3:	fwait
  40c4a4:	mov    ebx,0x557ea44d
  40c4a9:	add    esi,DWORD PTR [ebx-0x61ffa801]
  40c4af:	daa    
  40c4b0:	ret    0xed0
  40c4b3:	inc    esp
  40c4b4:	cld    
  40c4b5:	and    eax,0x52585cd4
  40c4ba:	pop    ebp
  40c4bb:	inc    esi
  40c4bc:	imul   ebp,esp,0xdbbec3fc
  40c4c2:	xchg   ebp,eax
  40c4c3:	mov    esp,eax
  40c4c5:	dec    ecx
  40c4c6:	(bad)  
  40c4c7:	fdivr  st(7),st
  40c4c9:	icebp  
  40c4ca:	pop    es
  40c4cb:	mov    bh,0x6
  40c4cd:	sub    al,0x2e
  40c4cf:	enter  0x3c6f,0x42
  40c4d3:	std    
  40c4d4:	fist   WORD PTR [esi+ebp*4+0x2a]
  40c4d8:	dec    ebp
  40c4d9:	loopne 0x40c488
  40c4db:	pop    edx
  40c4dc:	outs   dx,BYTE PTR ds:[esi]
  40c4dd:	push   es
  40c4de:	popa   
  40c4df:	es pop edi
  40c4e1:	adc    ebp,DWORD PTR [edx+0x14]
  40c4e4:	fistp  QWORD PTR [eax-0xa]
  40c4e7:	ds cmc 
  40c4e9:	dec    edi
  40c4ea:	and    edi,DWORD PTR [esi]
  40c4ec:	cs mov dh,0x54
  40c4ef:	sub    esi,edx
  40c4f1:	mov    ds:0x888d4e8d,eax
  40c4f6:	pop    ds
  40c4f7:	push   ss
  40c4f8:	mov    WORD PTR [esi-0x11ea9fcf],es
  40c4fe:	mov    al,BYTE PTR [eax]
  40c500:	(bad)  
  40c502:	push   esp
  40c503:	push   esp
  40c504:	icebp  
  40c505:	test   eax,0x29fd3d6d
  40c50a:	test   al,0x46
  40c50c:	stos   DWORD PTR es:[edi],eax
  40c50d:	jl     0x40c564
  40c50f:	or     cx,bp
  40c512:	aas    
  40c513:	aad    0x4
  40c515:	ja     0x40c511
  40c517:	dec    ebx
  40c518:	sub    al,0x4
  40c51a:	add    al,0xeb
  40c51c:	add    eax,0x7e2b7b90
  40c521:	fbld   TBYTE PTR [ebx+edi*4]
  40c524:	pop    eax
  40c525:	aad    0x90
  40c527:	popf   
  40c528:	mov    al,0x98
  40c52a:	jle    0x40c4af
  40c52c:	(bad)  
  40c52d:	push   ecx
  40c52e:	add    al,0xde
  40c530:	out    0x2d,al
  40c532:	jmp    0x40c566
  40c534:	frstor [ebx+0x6ea14a45]
  40c53a:	nop
  40c53b:	jle    0x40c51d
  40c53d:	in     eax,dx
  40c53e:	imul   edi,esi,0x32
  40c541:	sti    
  40c542:	out    0xec,eax
  40c544:	mov    ds:0x44ebd1eb,al
  40c549:	pop    eax
  40c54a:	loopne 0x40c4ea
  40c54c:	mov    dl,0x12
  40c54e:	nop
  40c54f:	arpl   WORD PTR [ebp-0x53],ax
  40c552:	shl    ebx,1
  40c554:	lea    esp,[esi-0x6d]
  40c557:	xor    eax,0xc67e6ef1
  40c55c:	dec    ebx
  40c55d:	jns    0x40c53a
  40c55f:	sbb    al,0x6c
  40c561:	xchg   DWORD PTR [eax],ebx
  40c563:	and    edx,DWORD PTR [ebx+0x1e]
  40c566:	cmp    al,0x9d
  40c568:	aad    0x2f
  40c56a:	and    al,0x25
  40c56c:	rcr    ah,0x25
  40c56f:	lods   eax,DWORD PTR ds:[esi]
  40c570:	je     0x40c597
  40c572:	je     0x40c5cb
  40c574:	fbld   TBYTE PTR [ecx-0x5]
  40c577:	or     ax,0xe92b
  40c57b:	dec    DWORD PTR [edx-0x6410e321]
  40c581:	mul    ebp
  40c583:	clc    
  40c584:	sub    DWORD PTR [esi],esp
  40c586:	in     al,dx
  40c587:	jmp    0xe3c27103
  40c58c:	out    dx,al
  40c58d:	lods   al,BYTE PTR ds:[esi]
  40c58e:	cmp    DWORD PTR [edi+0x19],eax
  40c591:	mov    bl,0x6f
  40c593:	retf   
  40c594:	fld    TBYTE PTR [esi-0x4c]
  40c597:	sahf   
  40c598:	inc    ebp
  40c599:	jbe    0x40c552
  40c59b:	aas    
  40c59c:	(bad)  
  40c59d:	add    bl,cl
  40c59f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5a0:	inc    ebx
  40c5a1:	push   ss
  40c5a2:	push   esp
  40c5a3:	xlat   BYTE PTR ds:[ebx]
  40c5a4:	xor    ch,dh
  40c5a6:	add    DWORD PTR [edx],edi
  40c5a8:	fsub   DWORD PTR [esi+0x18]
  40c5ab:	push   ebp
  40c5ac:	stos   DWORD PTR es:[edi],eax
  40c5ad:	and    ah,BYTE PTR [ecx+0xe]
  40c5b0:	xor    ch,BYTE PTR [edi+0x77]
  40c5b3:	sub    BYTE PTR [ecx+ecx*4-0xd],ch
  40c5b7:	mov    ah,0x5e
  40c5b9:	xor    BYTE PTR [edi],cl
  40c5bb:	fstp   TBYTE PTR [edx-0x62ab6f1]
  40c5c1:	stos   BYTE PTR es:[edi],al
  40c5c2:	add    BYTE PTR [esp+ebp*8],cl
  40c5c5:	or     DWORD PTR [edx+0x28],edi
  40c5c8:	in     eax,0x0
  40c5ca:	xchg   edx,eax
  40c5cb:	pop    ebp
  40c5cc:	sbb    eax,0xcf61db46
  40c5d1:	xchg   ebx,eax
  40c5d2:	pop    esp
  40c5d3:	push   ebp
  40c5d4:	imul   ebx,edi,0x8d5a761a
  40c5da:	mov    esp,0xfa27f5ef
  40c5df:	out    0x93,eax
  40c5e1:	pop    esi
  40c5e2:	dec    esi
  40c5e3:	and    esi,DWORD PTR [esi+0x1b]
  40c5e6:	cmp    eax,DWORD PTR [eax]
  40c5e8:	fistp  WORD PTR [edi+0x3a]
  40c5eb:	mov    al,ds:0x9ea72994
  40c5f0:	jl     0x40c5b6
  40c5f2:	inc    esp
  40c5f3:	sbb    al,0x9
  40c5f5:	popf   
  40c5f6:	xor    BYTE PTR [ebp-0x4e],0x5b
  40c5fa:	daa    
  40c5fb:	push   es
  40c5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5fd:	add    al,0xb
  40c5ff:	mov    ebx,0xfc4e5274
  40c604:	ret    
  40c605:	gs xor eax,0x58968b90
  40c60b:	cmp    ebx,ebx
  40c60d:	ins    DWORD PTR es:[edi],dx
  40c60e:	inc    edx
  40c60f:	fsubr  DWORD PTR [eax-0x453acef9]
  40c615:	xchg   edx,eax
  40c616:	push   edi
  40c617:	icebp  
  40c618:	cmp    al,0x2c
  40c61a:	test   ah,0xcc
  40c61d:	das    
  40c61e:	imul   BYTE PTR [ebp+0x7f]
  40c621:	mov    ah,0x2d
  40c623:	inc    ebp
  40c625:	adc    dl,BYTE PTR [ecx+edi*4+0x33df7fb7]
  40c62c:	scas   eax,DWORD PTR es:[edi]
  40c62d:	out    0xfa,eax
  40c62f:	mov    BYTE PTR [ebp+ebp*4-0x18],ah
  40c633:	push   cs
  40c634:	mov    ch,0x9e
  40c636:	mov    ch,0xc8
  40c638:	jle    0x40c6a4
  40c63a:	xor    ah,BYTE PTR [esi+0x34]
  40c63d:	div    edx
  40c63f:	hlt    
  40c640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c641:	jne    0x40c620
  40c643:	add    al,0x7c
  40c645:	or     ebp,DWORD PTR [ebp-0x72]
  40c648:	and    al,0x97
  40c64a:	les    edi,FWORD PTR [edi]
  40c64c:	mov    DWORD PTR [edx+0x3849903c],ebx
  40c652:	stos   BYTE PTR es:[edi],al
  40c653:	sti    
  40c654:	shl    bl,cl
  40c656:	(bad)  
  40c657:	xchg   edi,eax
  40c658:	and    al,0xf6
  40c65a:	xor    bh,BYTE PTR [ecx-0x46]
  40c65d:	ins    BYTE PTR es:[edi],dx
  40c65e:	in     al,dx
  40c65f:	inc    ebx
  40c660:	ret    0x8408
  40c663:	addr16 sub al,0x14
  40c666:	sbb    cl,BYTE PTR [ecx]
  40c668:	jno    0x40c618
  40c66a:	dec    ebx
  40c66b:	sbb    BYTE PTR [edi+0x27],cl
  40c66e:	or     eax,edi
  40c670:	push   eax
  40c671:	int3   
  40c672:	pop    ss
  40c673:	jbe    0x40c6a7
  40c675:	sbb    DWORD PTR [eax+0x31],ebx
  40c678:	stos   BYTE PTR es:[edi],al
  40c679:	sub    esi,ecx
  40c67b:	pop    esp
  40c67c:	(bad)  
  40c67d:	inc    DWORD PTR [edx]
  40c67f:	push   0x73
  40c681:	call   0x4732:0x8441f24
  40c688:	add    ebx,DWORD PTR [ebp-0x30]
  40c68b:	mov    esp,0x7524ff91
  40c690:	fcmovu st,st(0)
  40c692:	jae    0x40c6ab
  40c694:	push   0x5e
  40c696:	push   cs
  40c697:	enter  0x43b7,0x52
  40c69b:	push   0x76
  40c69d:	xchg   edx,eax
  40c69e:	mov    ds:0xbb359434,al
  40c6a3:	fld    TBYTE PTR [edi-0x7c12b078]
  40c6a9:	aaa    
  40c6aa:	sub    bh,dl
  40c6ac:	mov    edi,0x85e4c28b
  40c6b1:	add    edx,ebx
  40c6b3:	test   eax,0x5ff9745b
  40c6b8:	loop   0x40c652
  40c6ba:	push   ebx
  40c6bb:	das    
  40c6bc:	ins    BYTE PTR es:[edi],dx
  40c6bd:	inc    eax
  40c6be:	(bad)  
  40c6c0:	and    DWORD PTR [edi+0x2],0x38
  40c6c4:	push   eax
  40c6c5:	jne    0x40c650
  40c6c7:	adc    DWORD PTR ds:0xf8a3121c,ecx
  40c6cd:	jae    0x40c690
  40c6cf:	and    ecx,DWORD PTR [ecx]
  40c6d1:	test   DWORD PTR [ecx-0x65],0xa1d06088
  40c6d8:	mov    ecx,0x1bbaf2cc
  40c6dd:	cdq    
  40c6de:	cmp    cl,BYTE PTR [edx+eax*4-0x5878caf]
  40c6e5:	lahf   
  40c6e6:	cmp    DWORD PTR [esi+edi*2-0x332654],0xa
  40c6ee:	jo     0x40c6ae
  40c6f0:	add    eax,0xa26c5dce
  40c6f5:	lea    esi,[ecx]
  40c6f7:	pop    ecx
  40c6f8:	pop    ebp
  40c6f9:	ficomp DWORD PTR [ecx]
  40c6fb:	pop    es
  40c6fc:	cmc    
  40c6fd:	add    esi,eax
  40c6ff:	outs   dx,BYTE PTR ds:[esi]
  40c700:	ficomp DWORD PTR [edi+0x1e]
  40c703:	retf   
  40c704:	inc    edx
  40c705:	sub    cl,bh
  40c707:	mov    ds:0x4ed53e00,eax
  40c70c:	popf   
  40c70d:	sub    BYTE PTR [ecx+0x2c],bl
  40c710:	jno    0x40c781
  40c712:	adc    ah,BYTE PTR [edi+0x1a1e7ad]
  40c718:	in     eax,0xa0
  40c71a:	fdivr  QWORD PTR [eax]
  40c71c:	push   esp
  40c71d:	pushf  
  40c71e:	jmp    0x6e547801
  40c723:	or     eax,0xea677693
  40c728:	jmp    0x40c74b
  40c72a:	dec    ebp
  40c72b:	scas   al,BYTE PTR es:[edi]
  40c72c:	sbb    DWORD PTR [ecx+0x276d29ca],edx
  40c732:	add    edi,DWORD PTR [eax+0x1d4789d4]
  40c738:	retf   0xac5d
  40c73b:	je     0x40c754
  40c73d:	xchg   ebx,eax
  40c73e:	(bad)
  40c742:	cld    
  40c743:	xchg   ebp,eax
  40c744:	in     al,dx
  40c745:	or     bl,BYTE PTR [edx+edi*1]
  40c748:	sbb    ch,al
  40c74a:	dec    ebx
  40c74b:	cmp    eax,0x243d3190
  40c750:	inc    edx
  40c751:	div    BYTE PTR [edi+0x3e01b2fe]
  40c757:	add    al,0x6c
  40c759:	jecxz  0x40c79a
  40c75b:	mov    fs,WORD PTR [edx+0x5d]
  40c75e:	lea    ebp,[edx]
  40c760:	adc    BYTE PTR [ecx+0x3841c99d],bh
  40c766:	push   edi
  40c767:	mov    esp,0xb9fe1c5a
  40c76c:	mov    bh,0x78
  40c76e:	dec    esp
  40c76f:	xchg   esp,eax
  40c770:	add    BYTE PTR [edi*8+0x7b62b525],ah
  40c777:	mov    edx,0xb9520738
  40c77c:	into   
  40c77d:	dec    ebx
  40c77e:	push   edi
  40c77f:	pop    ebx
  40c780:	mov    ebx,DWORD PTR [ebx+0x5b]
  40c783:	xor    DWORD PTR [ebx+eiz*2+0x398b448c],ebp
  40c78a:	sbb    DWORD PTR [di+0x6f32],edx
  40c78f:	dec    edi
  40c790:	popa   
  40c791:	cs cwde 
  40c793:	test   DWORD PTR [ebx+ebx*4],ebp
  40c796:	sahf   
  40c797:	jbe    0x40c76e
  40c799:	and    DWORD PTR [ebx+0x62],ebp
  40c79c:	cmp    DWORD PTR [eax-0x44],eax
  40c79f:	test   edi,0xcd164581
  40c7a5:	jl     0x40c7e7
  40c7a7:	jmp    0xb2af8eb3
  40c7ac:	hlt    
  40c7ad:	dec    eax
  40c7ae:	push   es
  40c7af:	mov    al,0xb7
  40c7b1:	xchg   edx,eax
  40c7b2:	xor    eax,DWORD PTR [esi]
  40c7b4:	les    esi,FWORD PTR [edi+edx*4-0xd]
  40c7b8:	xlat   BYTE PTR ds:[ebx]
  40c7b9:	and    eax,0x87d6db12
  40c7be:	jl     0x40c7f8
  40c7c0:	mov    al,ds:0xa8df10b1
  40c7c5:	ins    DWORD PTR es:[edi],dx
  40c7c6:	inc    edx
  40c7c7:	sub    cl,bl
  40c7c9:	cmp    ch,ch
  40c7cb:	push   eax
  40c7cc:	push   ecx
  40c7cd:	mov    cl,BYTE PTR [esi+0x6e]
  40c7d0:	push   edi
  40c7d1:	inc    edx
  40c7d2:	dec    ecx
  40c7d3:	loopne 0x40c802
  40c7d5:	jp     0x40c7a7
  40c7d7:	and    ecx,DWORD PTR [ecx]
  40c7d9:	ds jecxz 0x40c78c
  40c7dc:	imul   ebp,DWORD PTR [esi+0x23],0xeff5f6b1
  40c7e3:	add    al,0xf6
  40c7e5:	stos   BYTE PTR es:[edi],al
  40c7e6:	ficomp WORD PTR ds:0x3b70
  40c7eb:	(bad)  
  40c7ec:	fist   DWORD PTR [ebx]
  40c7ee:	cmp    esp,DWORD PTR [edx-0x3d]
  40c7f1:	add    eax,0x7d0513b2
  40c7f6:	or     BYTE PTR [esi+0x65],bh
  40c7f9:	push   esp
  40c7fa:	mov    WORD PTR [ebx+0x8cc500],?
  40c800:	add    eax,0xef095d51
  40c805:	xor    DWORD PTR [esi],edi
  40c807:	sar    ah,cl
  40c809:	stos   DWORD PTR es:[edi],eax
  40c80a:	push   es
  40c80b:	inc    eax
  40c80c:	icebp  
  40c80d:	xchg   ecx,eax
  40c80e:	not    ch
  40c810:	and    BYTE PTR [esi],0x9b
  40c813:	pop    ecx
  40c814:	sub    DWORD PTR [esi-0x2ab1248a],0xffffff83
  40c81b:	pop    edi
  40c81c:	out    0xba,al
  40c81e:	adc    BYTE PTR ds:0x806dfe4a,cl
  40c824:	push   edi
  40c825:	icebp  
  40c826:	imul   edi,ecx,0x3a
  40c829:	test   DWORD PTR [edx+eax*1],edx
  40c82c:	pop    ebp
  40c82d:	lods   al,BYTE PTR ds:[esi]
  40c82e:	sub    BYTE PTR ds:0x316669f5,bl
  40c834:	ret    
  40c835:	mov    ecx,0x80bcccb6
  40c83a:	jo     0x40c853
  40c83c:	inc    edi
  40c83d:	xchg   esp,eax
  40c83e:	shr    BYTE PTR [esi],1
  40c840:	aam    0xe1
  40c842:	aad    0x8d
  40c844:	outs   dx,BYTE PTR ds:[esi]
  40c845:	inc    esp
  40c846:	add    DWORD PTR [esi-0x58],ecx
  40c849:	push   ebx
  40c84a:	cmc    
  40c84b:	ret    0xba4f
  40c84e:	nop
  40c84f:	mov    eax,eax
  40c851:	add    al,0x2c
  40c853:	inc    edx
  40c854:	mov    al,ds:0x27251a96
  40c859:	fdivr  DWORD PTR [edx+0x6b262902]
  40c85f:	test   eax,0x5a1f869
  40c864:	cmp    ebx,edx
  40c866:	xor    al,0x1a
  40c868:	das    
  40c869:	les    edx,FWORD PTR [edx-0x31182649]
  40c86f:	dec    ebp
  40c870:	or     ch,BYTE PTR [ebx-0x52abd682]
  40c876:	fmulp  st(7),st
  40c878:	cmp    cl,dh
  40c87a:	lock inc esp
  40c87c:	dec    edx
  40c87d:	(bad)  
  40c87e:	xchg   ebx,eax
  40c87f:	(bad)  
  40c880:	jle    0x40c8fd
  40c882:	sti    
  40c883:	jns    0x40c8db
  40c885:	xchg   edi,eax
  40c886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c887:	inc    ecx
  40c888:	fsub   DWORD PTR ds:0x341c6ada
  40c88e:	out    0xe6,al
  40c890:	mov    eax,ds:0xbd0ea1ed
  40c895:	jge    0x40c908
  40c897:	pop    edx
  40c898:	jae    0x40c898
  40c89a:	or     al,0xac
  40c89c:	fwait
  40c89d:	mov    ds:0xaa84eefb,eax
  40c8a2:	(bad)  
  40c8a3:	xor    ecx,DWORD PTR [ecx+0x1d51f6b3]
  40c8a9:	and    al,0x1a
  40c8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8ac:	and    BYTE PTR [edi+ecx*1+0x7bab0543],dl
  40c8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b4:	push   esi
  40c8b5:	xor    edi,DWORD PTR [ebx+0x50]
  40c8b8:	pushf  
  40c8b9:	cs leave 
  40c8bb:	sub    al,0xf
  40c8bd:	das    
  40c8be:	xchg   DWORD PTR [ecx+0x3f421ec8],eax
  40c8c4:	into   
  40c8c5:	lock das 
  40c8c7:	jle    0x40c90a
  40c8c9:	test   al,0x75
  40c8cb:	sub    BYTE PTR [edx+0x38],0x86
  40c8cf:	arpl   WORD PTR [edi],bx
  40c8d1:	cli    
  40c8d2:	add    DWORD PTR ss:[ecx],ecx
  40c8d5:	pop    ebx
  40c8d6:	mov    edi,0xc5cd710e
  40c8db:	ins    DWORD PTR es:[edi],dx
  40c8dc:	pop    edx
  40c8dd:	dec    esi
  40c8de:	popf   
  40c8df:	dec    ebp
  40c8e0:	lahf   
  40c8e1:	(bad)  
  40c8e2:	(bad)  
  40c8e3:	(bad)  
  40c8e4:	mov    ch,0x3
  40c8e6:	push   edi
  40c8e7:	adc    ch,bl
  40c8e9:	popf   
  40c8ea:	test   DWORD PTR [edx-0x1a],esi
  40c8ed:	xlat   BYTE PTR ds:[ebx]
  40c8ee:	js     0x40c87b
  40c8f0:	imul   edi,DWORD PTR [ebx+0xad52ca1],0x8540f5b9
  40c8fa:	int    0x13
  40c8fc:	sub    dh,dh
  40c8fe:	loop   0x40c8f8
  40c900:	fwait
  40c901:	xchg   edi,eax
  40c902:	adc    DWORD PTR [ecx-0x3a],esp
  40c905:	lods   al,BYTE PTR ds:[esi]
  40c906:	clc    
  40c907:	sbb    edi,DWORD PTR [eax]
  40c909:	sub    bh,BYTE PTR [edx+0x3ef3773a]
  40c90f:	or     BYTE PTR [ebp+0x48],ah
  40c912:	lock ror dl,cl
  40c915:	adc    edi,DWORD PTR [eax-0x44]
  40c918:	dec    ecx
  40c919:	jns    0x40c8aa
  40c91b:	add    DWORD PTR [ebp+0x7],0xf8bd4596
  40c922:	je     0x40c98b
  40c924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c925:	pop    edi
  40c926:	push   0x60e4887d
  40c92b:	jmp    0x40c97f
  40c92d:	pop    ebp
  40c92e:	xor    edi,ebp
  40c930:	imul   BYTE PTR [esi-0x128f489e]
  40c936:	push   es
  40c937:	sub    BYTE PTR [ebp-0x79d47dd4],dh
  40c93d:	xor    eax,0xe93d1604
  40c942:	in     eax,dx
  40c943:	popf   
  40c944:	push   ss
  40c945:	data16 movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40c948:	or     al,0x62
  40c94a:	mov    esp,0x57ae33e8
  40c94f:	or     DWORD PTR [ebx],ebx
  40c951:	rcr    ebx,0x6a
  40c954:	stc    
  40c955:	sti    
  40c956:	cmp    eax,DWORD PTR [edi+0x28]
  40c959:	cld    
  40c95a:	adc    ecx,eax
  40c95c:	pop    ecx
  40c95d:	jl     0x40c952
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0x136c005d]
  40d00c:	mov    cl,0xb2
  40d00e:	jmp    0x5f484c8f
  40d013:	jl     0x40d091
  40d015:	pop    ecx
  40d016:	(bad)  
  40d017:	xor    ebp,esi
  40d019:	aad    0x24
  40d01b:	push   esp
  40d01c:	pop    edi
  40d01d:	xchg   edi,eax
  40d01e:	lds    ecx,FWORD PTR [ebp+0x62]
  40d021:	fs mov ebp,0xfa0c7bd1
  40d027:	por    mm1,QWORD PTR [ebx-0xa]
  40d02b:	pop    ebx
  40d02c:	(bad)  
  40d02d:	sar    esp,cl
  40d02f:	mov    eax,0x1a5ad2ad
  40d034:	loope  0x40cfee
  40d036:	loope  0x40cfe9
  40d038:	push   0xfffffff3
  40d03a:	pop    esp
  40d03b:	sbb    al,bh
  40d03d:	cmp    BYTE PTR [esi+0x5d],bl
  40d040:	jl     0x40d040
  40d042:	jne    0x40cfd4
  40d044:	pop    edi
  40d045:	jp     0x40d065
  40d047:	add    al,0x9a
  40d049:	in     eax,0x7b
  40d04b:	inc    ebp
  40d04c:	or     edx,edx
  40d04e:	rcl    dh,cl
  40d050:	push   0x76
  40d052:	mov    BYTE PTR ds:0xf67e7def,al
  40d058:	(bad)  [edi]
  40d05a:	popa   
  40d05b:	enter  0xc2c6,0x8
  40d05f:	in     al,0xab
  40d061:	int3   
  40d062:	test   BYTE PTR [edi+0x2cabd366],0x4
  40d069:	icebp  
  40d06a:	cdq    
  40d06b:	test   BYTE PTR [edx],bh
  40d06d:	sar    BYTE PTR [ebx+0xf3e8bd0],cl
  40d073:	sub    al,0xf5
  40d075:	mov    bh,dh
  40d077:	mov    al,ds:0x5846cc03
  40d07c:	ret    
  40d07d:	cs loopne 0x40d005
  40d080:	popf   
  40d081:	jne    0x40d0ab
  40d083:	sbb    eax,eax
  40d085:	or     al,0xf7
  40d087:	and    al,0x2a
  40d089:	pop    edi
  40d08a:	test   BYTE PTR [edi-0x66],al
  40d08d:	cmp    eax,0xc969b457
  40d092:	xchg   edx,eax
  40d093:	xor    edi,ecx
  40d095:	mov    bl,0x10
  40d097:	(bad)  
  40d099:	sub    DWORD PTR [ebx-0x7ad512c9],edx
  40d09f:	stos   BYTE PTR es:[edi],al
  40d0a0:	aaa    
  40d0a1:	les    ecx,FWORD PTR [esp+ebx*2-0x19]
  40d0a5:	or     DWORD PTR [ecx],edx
  40d0a7:	jb     0x40d0f1
  40d0a9:	mov    edi,0xc95b8ed9
  40d0ae:	(bad)  
  40d0af:	add    al,0x8
  40d0b2:	jp     0x40d120
  40d0b4:	xchg   esi,eax
  40d0b5:	jne    0x40d11a
  40d0b7:	lds    ecx,FWORD PTR [eax+ecx*4+0x41caf3a7]
  40d0be:	xor    bl,BYTE PTR [ebx+0x53]
  40d0c1:	mov    al,ds:0x9538953
  40d0c6:	cwde   
  40d0c7:	cmp    bl,BYTE PTR [ebx]
  40d0c9:	rcl    ebx,1
  40d0cb:	inc    ebx
  40d0cc:	mov    esp,0xde8d1ad
  40d0d1:	loop   0x40d0a7
  40d0d3:	stc    
  40d0d4:	inc    eax
  40d0d5:	mov    WORD PTR [edi-0xdb2f951],cs
  40d0db:	ja     0x40d0a0
  40d0dd:	jae    0x40d0f2
  40d0df:	pop    ebp
  40d0e0:	loopne 0x40d080
  40d0e2:	jae    0x40d0f6
  40d0e4:	adc    dl,BYTE PTR [eax+0x7b0d5c9b]
  40d0ea:	(bad)  
  40d0eb:	cmp    BYTE PTR [edi],cl
  40d0ed:	arpl   WORD PTR [ecx-0x37a77705],dx
  40d0f3:	push   edi
  40d0f4:	xchg   BYTE PTR [edi+ebx*2],cl
  40d0f7:	dec    ebx
  40d0f8:	mov    DWORD PTR [ebx+esi*8+0x26],edx
  40d0fc:	push   ebx
  40d0fd:	jg     0x40d0d4
  40d0ff:	mov    ecx,0x1ebea279
  40d104:	push   edi
  40d105:	ins    BYTE PTR es:[edi],dx
  40d106:	dec    eax
  40d107:	sbb    edx,DWORD PTR [ebx+0x2b857b9c]
  40d10d:	push   cs
  40d10e:	push   0x3c6ac58
  40d113:	xchg   esp,eax
  40d114:	or     DWORD PTR [edi+0x30a3b6ce],0xeb84066f
  40d11e:	out    dx,al
  40d11f:	lea    ebp,[eax-0x7b]
  40d122:	test   eax,0xc2bb1e01
  40d127:	push   esi
  40d128:	mov    ss,WORD PTR [ebx]
  40d12a:	cmp    BYTE PTR [ecx+0x7c5a38ac],cl
  40d130:	bswap  edx
  40d132:	iret   
  40d133:	shr    esp,cl
  40d135:	or     DWORD PTR [ecx],esp
  40d137:	lahf   
  40d138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d139:	sbb    al,0x37
  40d13b:	pop    edx
  40d13c:	aam    0x9d
  40d13e:	push   ecx
  40d13f:	push   ss
  40d140:	pop    ebx
  40d141:	jl     0x40d1ba
  40d143:	aad    0x36
  40d145:	int    0x15
  40d147:	cmp    dl,BYTE PTR [ebp+0x64]
  40d14a:	out    dx,eax
  40d14b:	je     0x40d1a3
  40d14d:	loopne 0x40d19e
  40d14f:	dec    di
  40d151:	ss leave 
  40d153:	repz or al,0x2f
  40d156:	cmp    ebx,DWORD PTR [esi+0x14c5d36f]
  40d15c:	arpl   WORD PTR [edx+0x630c89f],cx
  40d162:	out    dx,eax
  40d163:	mov    BYTE PTR [edi+0x77699608],dh
  40d169:	lods   eax,DWORD PTR ds:[esi]
  40d16a:	or     ah,BYTE PTR cs:[edi+0x78af1344]
  40d171:	mov    ch,0x50
  40d173:	outs   dx,BYTE PTR ds:[esi]
  40d174:	inc    edx
  40d175:	(bad)  
  40d176:	(bad)  
  40d177:	call   0xae3e4d73
  40d17c:	cmp    DWORD PTR [edx+0x3b],0xb3299e8f
  40d183:	ret    
  40d184:	imul   esi,DWORD PTR [esi+0x2e],0xa83c100b
  40d18b:	push   edx
  40d18c:	es mov cl,0x64
  40d18f:	pop    esp
  40d190:	push   es
  40d191:	into   
  40d192:	out    dx,eax
  40d193:	cmp    eax,0xdf7f5817
  40d198:	ins    BYTE PTR es:[edi],dx
  40d199:	xor    eax,0x85844b9a
  40d19e:	lds    ebx,FWORD PTR [edi]
  40d1a0:	pop    ss
  40d1a1:	jb     0x40d17e
  40d1a3:	xchg   esi,eax
  40d1a4:	iret   
  40d1a5:	pushf  
  40d1a6:	mov    dl,BYTE PTR [edi+eax*8-0x50]
  40d1aa:	pop    ebp
  40d1ab:	jecxz  0x40d16b
  40d1ad:	arpl   WORD PTR [edi+0x4e],si
  40d1b0:	dec    ebx
  40d1b1:	push   edx
  40d1b2:	sub    ah,BYTE PTR [edx+0x6c]
  40d1b5:	pop    ecx
  40d1b6:	sub    dl,BYTE PTR [eax]
  40d1b8:	xchg   ebx,eax
  40d1b9:	mov    ah,0x31
  40d1bb:	je     0x40d1bf
  40d1bd:	(bad)  [ecx+0x7001a042]
  40d1c3:	mov    esi,0x993c3571
  40d1c8:	int    0x21
  40d1ca:	int3   
  40d1cb:	imul   edi,esi,0x5fb24f41
  40d1d1:	inc    ch
  40d1d3:	std    
  40d1d4:	dec    ecx
  40d1d5:	adc    cl,BYTE PTR [ebp-0x71]
  40d1d8:	sub    ebx,DWORD PTR [ecx]
  40d1da:	jb     0x40d1d9
  40d1dc:	pop    ds
  40d1dd:	lods   al,BYTE PTR ds:[esi]
  40d1de:	push   ds
  40d1df:	mov    ah,0xda
  40d1e1:	int    0x53
  40d1e3:	dec    eax
  40d1e4:	retf   0xa056
  40d1e7:	js     0x40d249
  40d1e9:	sub    ah,cl
  40d1eb:	div    BYTE PTR [edx+0x7b9926a5]
  40d1f1:	push   es
  40d1f2:	jle    0x40d24f
  40d1f4:	lahf   
  40d1f5:	mov    cl,0xf
  40d1f7:	ss int3 
  40d1f9:	pop    eax
  40d1fa:	adc    ecx,DWORD PTR [eax-0xf797b31]
  40d200:	mov    ebx,0xae61d6f6
  40d205:	xor    DWORD PTR [ebx],eax
  40d207:	or     DWORD PTR [edi+edx*1+0x5b],esp
  40d20b:	xchg   edx,edi
  40d20d:	out    0x2b,al
  40d20f:	inc    edi
  40d210:	add    ebx,esp
  40d212:	test   bh,0xcd
  40d215:	add    eax,0x11cdd66
  40d21a:	popf   
  40d21b:	push   esi
  40d21c:	jb     0x40d229
  40d21e:	mov    bl,0x8
  40d220:	dec    esp
  40d221:	push   cs
  40d222:	je     0x40d263
  40d224:	add    edi,DWORD PTR [ecx+esi*1-0x37eafc16]
  40d22b:	lock sub dh,dh
  40d22e:	repnz mov ecx,0x79aff542
  40d234:	cmp    ah,BYTE PTR [ebp-0x2d82d183]
  40d23a:	aas    
  40d23b:	(bad)  
  40d23c:	xchg   BYTE PTR [esi+edx*4-0x9],al
  40d240:	dec    edi
  40d241:	inc    eax
  40d242:	ret    0x7b04
  40d245:	pop    edx
  40d246:	jo     0x40d213
  40d248:	(bad)  
  40d249:	pusha  
  40d24a:	push   ds
  40d24b:	or     eax,0x43621b82
  40d250:	mov    ch,0x5c
  40d252:	inc    ecx
  40d253:	sahf   
  40d254:	(bad)  
  40d255:	enter  0x2f8b,0x98
  40d259:	xor    al,0xad
  40d25b:	fwait
  40d25c:	sub    eax,0x9effc11b
  40d261:	pop    edx
  40d262:	xor    ebp,eax
  40d264:	bound  esp,QWORD PTR [esi+0x2fea60cf]
  40d26a:	or     ecx,DWORD PTR [esi+esi*4]
  40d26d:	ret    
  40d26e:	pop    eax
  40d26f:	mov    eax,0xb3ca0779
  40d274:	and    al,0xe8
  40d276:	clc    
  40d277:	cmp    BYTE PTR [ebx-0x7],cl
  40d27a:	inc    esi
  40d27b:	jge    0x40d2be
  40d27d:	or     BYTE PTR [edx-0x3a0c3bc5],0x1e
  40d284:	lods   al,BYTE PTR ds:[esi]
  40d285:	mov    eax,0xc14d5c52
  40d28a:	push   cs
  40d28b:	arpl   WORD PTR [edi-0x28ea1466],ax
  40d291:	in     al,0x7d
  40d293:	xor    al,ah
  40d295:	push   ecx
  40d296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d297:	je     0x40d2ed
  40d299:	lock mov ds:0x5978ebdd,al
  40d29f:	rcl    BYTE PTR [ebp+0x2b7023d7],1
  40d2a5:	add    al,0x79
  40d2a7:	nop
  40d2a8:	pop    edi
  40d2a9:	add    al,cl
  40d2ab:	jb     0x40d248
  40d2ad:	cwde   
  40d2ae:	cs mov cl,0x2b
  40d2b1:	push   ecx
  40d2b2:	mov    al,ds:0xb57b3eb0
  40d2b7:	ins    BYTE PTR es:[edi],dx
  40d2b8:	(bad)  
  40d2b9:	jnp    0x40d2cf
  40d2bb:	shr    DWORD PTR [ebx-0x40],0xc5
  40d2bf:	mov    DWORD PTR ds:0x181a9d25,ebp
  40d2c5:	jo     0x40d251
  40d2c7:	push   cs
  40d2c8:	je     0x40d324
  40d2ca:	sub    BYTE PTR [edx-0x2a6d0020],dl
  40d2d0:	sar    BYTE PTR [ecx],0xa4
  40d2d3:	sub    eax,0x1c8b0dbb
  40d2d8:	push   eax
  40d2d9:	pop    edx
  40d2da:	add    al,0x3a
  40d2dc:	pop    ss
  40d2dd:	jno    0x40d328
  40d2df:	mov    ecx,0x5b442c23
  40d2e4:	xchg   ebx,edi
  40d2e6:	cmp    eax,0x46f66e5
  40d2eb:	jne    0x40d360
  40d2ed:	or     esi,esi
  40d2ef:	jae    0x40d2e5
  40d2f1:	lock jecxz 0x40d304
  40d2f4:	sbb    edx,DWORD PTR [esi]
  40d2f6:	stc    
  40d2f7:	mov    cl,0x4e
  40d2f9:	pop    ebp
  40d2fa:	mov    ds:0x63c08caa,eax
  40d2ff:	stos   DWORD PTR es:[edi],eax
  40d300:	xchg   esp,eax
  40d301:	int    0xa0
  40d303:	cwde   
  40d304:	dec    DWORD PTR [edx+0x39c73ac7]
  40d30a:	ja     0x40d2ca
  40d30c:	jae    0x40d37a
  40d30e:	push   cs
  40d30f:	repnz clc 
  40d311:	scas   al,BYTE PTR es:[edi]
  40d312:	out    dx,eax
  40d313:	xlat   BYTE PTR ds:[ebx]
  40d314:	fwait
  40d315:	inc    ecx
  40d316:	cmc    
  40d317:	hlt    
  40d318:	retf   0xf219
  40d31b:	fs fwait
  40d31d:	adc    al,0x1d
  40d31f:	adc    al,0xa9
  40d321:	inc    esp
  40d322:	mov    ebp,0xe6c96088
  40d327:	repz mov ebx,0x6b7116b3
  40d32d:	aam    0xf4
  40d32f:	les    esp,FWORD PTR [ecx-0x75]
  40d332:	out    0x60,eax
  40d334:	aas    
  40d335:	sub    al,0xb8
  40d337:	mov    al,ds:0x3f5d8a69
  40d33c:	push   ss
  40d33d:	fnstenv [ebx+edx*1+0x4]
  40d341:	into   
  40d342:	ins    DWORD PTR es:[edi],dx
  40d343:	ret    
  40d344:	push   ebp
  40d345:	js     0x40d398
  40d347:	jl     0x40d39a
  40d349:	and    DWORD PTR [ecx+eiz*1],esp
  40d34c:	daa    
  40d34d:	shl    BYTE PTR [ecx+0x71],cl
  40d350:	adc    DWORD PTR [edi+0x7ecd2d06],edx
  40d356:	mov    bl,0xab
  40d358:	repnz mov ebx,DWORD PTR [eax+edx*1]
  40d35c:	ins    DWORD PTR es:[edi],dx
  40d35d:	adc    al,0xf6
  40d35f:	aam    0xd4
  40d361:	cdq    
  40d362:	adc    al,0xf1
  40d364:	addr16 shr ecx,0xdf
  40d368:	xor    bl,ah
  40d36a:	mov    bh,0xfd
  40d36c:	mov    ecx,0x4b59d931
  40d371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d373:	inc    edx
  40d374:	shl    BYTE PTR [edi+eax*2+0x4],cl
  40d378:	adc    cl,BYTE PTR [edx+ebp*1+0xc]
  40d37c:	mov    esp,DWORD PTR [esi+0x550c815d]
  40d382:	ins    BYTE PTR es:[edi],dx
  40d383:	in     eax,dx
  40d384:	out    dx,eax
  40d385:	inc    ebx
  40d386:	fisttp WORD PTR [edi+edi*4-0x221581b]
  40d38d:	push   es
  40d38e:	sub    edi,DWORD PTR [ecx]
  40d390:	and    al,bl
  40d392:	mov    ecx,0xb86a9e12
  40d397:	pop    ebx
  40d398:	(bad)  
  40d399:	pop    edi
  40d39a:	lea    ecx,[ebx]
  40d39c:	nop
  40d39d:	shr    edi,0xcb
  40d3a0:	inc    DWORD PTR [edi+0x6]
  40d3a3:	in     eax,dx
  40d3a4:	(bad)  
  40d3a5:	lods   eax,DWORD PTR ds:[esi]
  40d3a6:	sti    
  40d3a7:	add    ecx,DWORD PTR [ecx-0x5c3ac447]
  40d3ad:	xor    eax,0xc2157c8a
  40d3b2:	mov    bl,0x2
  40d3b4:	and    BYTE PTR [edi+0x51db3ff1],dh
  40d3ba:	je     0x40d3ef
  40d3bc:	pushf  
  40d3bd:	mov    ss:0x851f3cd7,eax
  40d3c3:	fisubr DWORD PTR [eax-0x2c119a0e]
  40d3c9:	fwait
  40d3ca:	or     edx,DWORD PTR [ebx]
  40d3cc:	cmc    
  40d3cd:	pushf  
  40d3ce:	mov    eax,0x910e747d
  40d3d3:	pop    ss
  40d3d4:	inc    esi
  40d3d5:	jnp    0x40d3ff
  40d3d7:	or     DWORD PTR [edx+ebx*1-0x1c1b573d],0xbd9e927
  40d3e2:	xchg   edi,eax
  40d3e3:	(bad)  
  40d3e4:	jb     0x40d395
  40d3e6:	xchg   esp,eax
  40d3e7:	mov    ebx,0x100548fb
  40d3ec:	not    BYTE PTR [ebx+0x3c013aaf]
  40d3f2:	(bad)  
  40d3f3:	jne    0x40d3e0
  40d3f5:	shl    DWORD PTR [esi],1
  40d3f7:	daa    
  40d3f8:	xchg   ecx,eax
  40d3f9:	(bad)  
  40d3fb:	mov    ch,BYTE PTR [eax+0x24]
  40d3fe:	jo     0x40d3dd
  40d400:	imul   bl
  40d402:	jae    0x40d3ba
  40d404:	stos   BYTE PTR es:[edi],al
  40d405:	jb     0x40d486
  40d407:	fnstcw WORD PTR [edi+edx*1-0x43]
  40d40b:	cmp    DWORD PTR [eax-0x5b],esp
  40d40e:	in     al,0x91
  40d410:	jmp    eax
  40d412:	sbb    ch,BYTE PTR [edi-0x636ba93a]
  40d418:	ret    0xe72f
  40d41b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d41c:	pusha  
  40d41d:	push   edi
  40d41e:	pop    edx
  40d41f:	xchg   ebp,eax
  40d420:	dec    esp
  40d421:	push   edi
  40d422:	icebp  
  40d423:	mov    ebp,0xdfcc5cac
  40d428:	jae    0x40d45f
  40d42a:	ins    DWORD PTR es:[edi],dx
  40d42b:	sbb    al,bl
  40d42d:	push   eax
  40d42e:	jae    0x40d454
  40d430:	sbb    esp,edi
  40d432:	(bad)  
  40d433:	ja     0x40d3fc
  40d435:	mov    eax,0x2b66abd3
  40d43a:	mov    cs,WORD PTR [edx-0x6285f113]
  40d440:	inc    ecx
  40d441:	loopne 0x40d45a
  40d443:	mov    al,ds:0xd64be9a9
  40d448:	mov    esp,0x409c2b9f
  40d44d:	mov    ah,cl
  40d44f:	jb     0x40d47e
  40d451:	fld    DWORD PTR ds:0x6176b5d0
  40d457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d458:	call   0xad752d5f
  40d45d:	icebp  
  40d45e:	lea    ecx,[edi+0x535604e0]
  40d464:	pop    esi
  40d465:	adc    eax,0xff1c47c3
  40d46a:	mov    ebx,0xa20f7ef9
  40d46f:	shl    DWORD PTR [edx],cl
  40d471:	fiadd  WORD PTR [edi+0x34871c25]
  40d477:	pop    esi
  40d478:	ins    BYTE PTR es:[edi],dx
  40d479:	cmp    dh,BYTE PTR [edx+0x16]
  40d47c:	or     DWORD PTR [ebx-0xd],0xea89e5ac
  40d483:	sbb    DWORD PTR [ecx+0x34],eax
  40d486:	cwde   
  40d487:	cld    
  40d488:	push   edx
  40d489:	mov    ah,bh
  40d48b:	ficom  WORD PTR [edx+0x4898447b]
  40d491:	push   0x75
  40d493:	mov    edx,0xe2e7d277
  40d498:	enter  0xf5eb,0xf4
  40d49c:	in     eax,0x82
  40d49e:	enter  0xe144,0xef
  40d4a2:	jns    0x40d488
  40d4a4:	xchg   edx,eax
  40d4a5:	mov    ah,BYTE PTR [edi]
  40d4a7:	sub    ebx,DWORD PTR [ebp-0x7]
  40d4aa:	clc    
  40d4ab:	fidivr WORD PTR [ebp-0x80]
  40d4ae:	push   0x78
  40d4b0:	mov    al,ds:0xc21c2cae
  40d4b5:	into   
  40d4b6:	dec    esi
  40d4b7:	cmp    DWORD PTR [esi],esi
  40d4b9:	xchg   esp,eax
  40d4ba:	rcr    DWORD PTR [edi-0x68],cl
  40d4bd:	stos   DWORD PTR es:[edi],eax
  40d4be:	jle    0x40d51b
  40d4c0:	fbstp  TBYTE PTR [ebp+0x60]
  40d4c3:	fdiv   QWORD PTR ds:0x5598ebe5
  40d4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ca:	sahf   
  40d4cb:	cli    
  40d4cc:	pushf  
  40d4cd:	pusha  
  40d4ce:	stc    
  40d4cf:	shl    DWORD PTR [esi+edx*8-0x23226e1f],1
  40d4d6:	rol    ah,0xb0
  40d4d9:	js     0x40d4ca
  40d4db:	aaa    
  40d4dc:	mov    esp,0x5aa5e571
  40d4e1:	out    0x91,eax
  40d4e3:	xchg   ebx,eax
  40d4e4:	xor    al,0x9b
  40d4e6:	add    esp,ebx
  40d4e8:	and    esi,DWORD PTR [ecx+0x10]
  40d4eb:	mov    ah,0xc1
  40d4ed:	cmp    eax,0x9a661017
  40d4f2:	rcl    BYTE PTR [esi+0x7a],0xf2
  40d4f6:	mov    eax,ds:0x8034e915
  40d4fb:	and    bl,BYTE PTR [eax+ebx*8]
  40d4fe:	clc    
  40d4ff:	jecxz  0x40d562
  40d501:	and    eax,0x42f29c1f
  40d506:	sbb    eax,0xbba605c9
  40d50b:	mov    dl,0x8c
  40d50d:	or     DWORD PTR [ebx+eiz*1-0x9788b13],edx
  40d514:	cli    
  40d515:	repz inc ecx
  40d517:	int3   
  40d518:	cmp    edx,DWORD PTR [edx-0x48674e0d]
  40d51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d51f:	sti    
  40d520:	mov    ecx,0x8b6f5117
  40d525:	dec    ecx
  40d526:	or     edx,DWORD PTR [edi+esi*8-0xb5857d6]
  40d52d:	sub    eax,0xe7b47825
  40d532:	jl     0x40d51f
  40d534:	dec    esi
  40d535:	cmp    ebx,DWORD PTR [ebx+edi*1-0x1abea2f0]
  40d53c:	pop    ebp
  40d53d:	out    dx,al
  40d53e:	cmp    cl,BYTE PTR [esi-0x2bf15f77]
  40d544:	imul   edx,DWORD PTR [ecx-0x695060a9],0x7d
  40d54b:	repnz outs dx,BYTE PTR ds:[esi]
  40d54d:	in     eax,dx
  40d54e:	cdq    
  40d54f:	mov    ebx,0x1a86bfab
  40d554:	pushf  
  40d555:	les    edx,FWORD PTR [ecx]
  40d557:	jnp    0x40d551
  40d559:	jp     0x40d56c
  40d55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d55c:	add    al,0xcd
  40d55e:	and    cl,bl
  40d560:	lds    esp,FWORD PTR [eax+0x9920c]
  40d566:	in     al,dx
  40d567:	aad    0x2f
  40d569:	sar    DWORD PTR [ebp+0x16],1
  40d56c:	push   ecx
  40d56d:	scas   al,BYTE PTR es:[edi]
  40d56e:	adc    bl,al
  40d570:	ins    BYTE PTR es:[edi],dx
  40d571:	mov    ecx,0x7e7139f1
  40d576:	adc    bl,bh
  40d578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d579:	das    
  40d57a:	ds cdq 
  40d57c:	dec    esp
  40d57d:	jmp    0x7098:0x98c90808
  40d584:	nop
  40d585:	pop    eax
  40d586:	sub    DWORD PTR [eax],0xffffffe1
  40d589:	leave  
  40d58a:	inc    ecx
  40d58b:	push   edi
  40d58c:	xor    ah,dh
  40d58e:	sub    ax,0x5c5f
  40d592:	inc    esp
  40d593:	data16 stos BYTE PTR es:[edi],al
  40d595:	pusha  
  40d596:	(bad)  
  40d597:	mov    ds:0x6fd33424,eax
  40d59c:	sub    al,0xe7
  40d59e:	and    eax,0x81df9036
  40d5a3:	jmp    0x40d5f8
  40d5a5:	adc    ch,ch
  40d5a7:	out    0x77,al
  40d5a9:	jmp    0x2a5d8582
  40d5ae:	xor    edi,DWORD PTR [edi+0x5a1cbbd]
  40d5b4:	adc    eax,0x58c5929d
  40d5b9:	pop    edx
  40d5ba:	push   0x1d12cdc2
  40d5bf:	push   ebp
  40d5c0:	rcl    BYTE PTR [ecx+0x563acbc0],1
  40d5c6:	inc    ebp
  40d5c7:	jae    0x40d570
  40d5c9:	or     cl,dl
  40d5cb:	(bad)  
  40d5cc:	in     eax,dx
  40d5cd:	loopne 0x40d628
  40d5cf:	cmp    cl,BYTE PTR [eax-0x4d9feb43]
  40d5d5:	or     al,0x7b
  40d5d7:	push   eax
  40d5d8:	and    al,0x23
  40d5da:	enter  0x9a58,0xba
  40d5de:	fistp  QWORD PTR [edx+esi*4+0x4063883e]
  40d5e5:	sub    DWORD PTR [edx],ecx
  40d5e7:	test   DWORD PTR [edx],edx
  40d5e9:	shl    DWORD PTR [ecx-0x60],1
  40d5ec:	add    DWORD PTR [ecx+0x4e],esp
  40d5ef:	test   BYTE PTR [edx-0xe816de6],ch
  40d5f5:	xor    edx,0xc76b6131
  40d5fb:	out    dx,al
  40d5fc:	mov    ah,0x53
  40d5fe:	mov    ebp,0x70ad006d
  40d603:	pop    edi
  40d604:	sahf   
  40d605:	mov    ch,BYTE PTR [esi]
  40d607:	loopne 0x40d5fc
  40d609:	push   0xb5123b5e
  40d60e:	out    0x4f,eax
  40d610:	add    eax,DWORD PTR [eax+0x68]
  40d613:	pop    ss
  40d614:	pop    edi
  40d615:	mov    al,ds:0x76d1d605
  40d61a:	xor    BYTE PTR [ebx+0x62],bh
  40d61d:	pop    ds
  40d61e:	add    ch,BYTE PTR [ebp-0x43]
  40d621:	inc    edi
  40d622:	cwde   
  40d623:	data16 loop 0x40d5b6
  40d626:	sub    DWORD PTR [ebx],ecx
  40d628:	cwde   
  40d629:	fldcw  WORD PTR [eax-0x4e]
  40d62c:	dec    ebp
  40d62d:	(bad)  
  40d62e:	clc    
  40d62f:	sub    al,0x20
  40d631:	xor    BYTE PTR [esi+esi*1-0x44d3d2a4],0x73
  40d639:	and    DWORD PTR [edx+eax*2+0x3d],ebx
  40d63d:	xchg   DWORD PTR [ebp+esi*2-0x1bd4fffd],ecx
  40d644:	cmp    al,0x37
  40d646:	inc    edx
  40d647:	sub    eax,0x18494bf4
  40d64c:	sub    al,0x22
  40d64e:	jmp    0xff55:0x76f99830
  40d655:	pushf  
  40d656:	lods   al,BYTE PTR ds:[esi]
  40d657:	addr16 pop esp
  40d659:	pop    edx
  40d65a:	rol    DWORD PTR [edi+0x64133c4a],1
  40d660:	sbb    ecx,DWORD PTR [esp+edi*8+0x3f]
  40d664:	stos   DWORD PTR es:[edi],eax
  40d665:	(bad)  
  40d666:	loope  0x40d663
  40d668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d66a:	loope  0x40d689
  40d66c:	push   esp
  40d66d:	scas   al,BYTE PTR es:[edi]
  40d66e:	adc    eax,0xb42fedf0
  40d673:	ficom  WORD PTR [ebp-0x3]
  40d676:	jo     0x40d64c
  40d678:	jo     0x40d662
  40d67a:	call   0xdca8:0x7fabd79a
  40d681:	mov    esi,0x7b236345
  40d686:	add    eax,0x75abe105
  40d68b:	cmp    DWORD PTR [edi+0x36510293],edx
  40d691:	mov    bl,0x3e
  40d693:	mov    esp,0xed3eb625
  40d698:	push   ecx
  40d699:	xchg   ecx,eax
  40d69a:	or     bl,BYTE PTR [edi+0x53]
  40d69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d69e:	mov    eax,0x75d110c7
  40d6a3:	add    ah,dl
  40d6a5:	(bad)  
  40d6a6:	fstp   DWORD PTR [ebx+eiz*4+0x3f]
  40d6aa:	dec    eax
  40d6ab:	xchg   DWORD PTR [esi-0x5d],esi
  40d6ae:	int3   
  40d6af:	mov    DWORD PTR [ecx+0x4c],esi
  40d6b2:	stos   BYTE PTR es:[edi],al
  40d6b3:	push   edx
  40d6b4:	aad    0xf6
  40d6b6:	dec    edx
  40d6b7:	push   eax
  40d6b8:	call   0xc32c:0x6a34f51d
  40d6bf:	cld    
  40d6c0:	test   dh,dh
  40d6c2:	xlat   BYTE PTR ds:[ebx]
  40d6c3:	out    0x8f,al
  40d6c5:	mov    ch,0x33
  40d6c7:	dec    esi
  40d6c8:	addr16 bnd jmp 0xc32b98f6
  40d6cf:	xchg   edi,eax
  40d6d0:	mov    cl,bh
  40d6d2:	and    BYTE PTR [esi],cl
  40d6d4:	ret    
  40d6d5:	shl    cl,0xd9
  40d6d8:	cli    
  40d6d9:	mov    ds:0x5744c147,al
  40d6de:	les    eax,FWORD PTR [ecx+0x65]
  40d6e1:	fsub   QWORD PTR [edx]
  40d6e3:	dec    ebp
  40d6e4:	add    dh,dh
  40d6e6:	or     BYTE PTR [edx+0x426eef2],ah
  40d6ec:	cmp    eax,0x25da6fe0
  40d6f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f2:	and    eax,0x3a3d63e0
  40d6f7:	jno    0x40d774
  40d6f9:	sbb    ebx,DWORD PTR [ebx-0x54cfb2e9]
  40d6ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d700:	clc    
  40d701:	ins    BYTE PTR es:[edi],dx
  40d702:	fistp  WORD PTR [esi+0x3a]
  40d705:	cmp    DWORD PTR [eax],esi
  40d707:	mov    edi,0x3bf9c973
  40d70c:	popa   
  40d70d:	(bad)  
  40d70e:	mov    ecx,0x2f3d957e
  40d713:	inc    esp
  40d714:	cmp    DWORD PTR [eax],ecx
  40d716:	inc    ebx
  40d717:	mov    bh,0x56
  40d719:	retf   
  40d71a:	lahf   
  40d71b:	rol    eax,0x80
  40d71e:	dec    ecx
  40d71f:	dec    ecx
  40d720:	pop    ss
  40d721:	mov    DWORD PTR [eax],esp
  40d723:	mov    dl,0xa9
  40d725:	imul   esp,ebp,0x15b6ba17
  40d72b:	pop    DWORD PTR [edi+0x4e85594f]
  40d731:	push   esi
  40d732:	xor    al,0x68
  40d734:	js     0x40d6c4
  40d736:	mov    bl,0xd1
  40d738:	or     al,0xe1
  40d73a:	cmc    
  40d73b:	ds jb  0x40d6de
  40d73e:	mov    ss,ebp
  40d740:	add    ah,bl
  40d742:	mov    bl,0x7a
  40d744:	ins    BYTE PTR es:[edi],dx
  40d745:	cs pop es
  40d747:	repnz add BYTE PTR [edi],dh
  40d74a:	push   ds
  40d74b:	scas   al,BYTE PTR es:[edi]
  40d74c:	mov    dl,ch
  40d74e:	push   0x3c
  40d750:	ret    
  40d751:	adc    eax,0x2581090c
  40d756:	pop    es
  40d757:	iret   
  40d758:	inc    esi
  40d759:	xlat   BYTE PTR ds:[ebx]
  40d75a:	imul   eax,DWORD PTR [edx],0x30b25ac9
  40d760:	and    bl,dh
  40d762:	jge    0x40d764
  40d764:	stos   BYTE PTR es:[edi],al
  40d765:	pop    ss
  40d766:	imul   eax,DWORD PTR [edi],0x4310286f
  40d76c:	ins    BYTE PTR es:[edi],dx
  40d76d:	call   0xfe16:0x960b4a30
  40d774:	xor    edi,ebx
  40d776:	std    
  40d777:	xchg   ebx,eax
  40d778:	xor    esi,ebx
  40d77a:	fisubr DWORD PTR [esi+0x9652ad6]
  40d780:	mov    WORD PTR [ebx+eiz*8],ss
  40d783:	addr16 loop 0x40d70b
  40d786:	add    DWORD PTR [ecx+0x21],eax
  40d789:	test   al,0x36
  40d78b:	jmp    0x9e35:0x604a41b0
  40d792:	xchg   edx,eax
  40d793:	add    al,0xab
  40d795:	and    al,0xaa
  40d797:	sbb    al,0xe6
  40d799:	jge    0x40d7fb
  40d79b:	cmp    eax,0xbfcc39c9
  40d7a0:	mov    ch,0x4b
  40d7a2:	push   es
  40d7a3:	addr16 shl edi,0x1b
  40d7a7:	rcl    BYTE PTR [eax+0x5e],0x31
  40d7ab:	int3   
  40d7ac:	aaa    
  40d7ad:	adc    esp,esp
  40d7af:	ret    0xf2ee
  40d7b2:	out    0xbc,al
  40d7b4:	retf   
  40d7b5:	and    DWORD PTR [ebp-0x1f],edx
  40d7b8:	mov    ds:0x6ae30fd7,eax
  40d7bd:	jl     0x40d82d
  40d7bf:	mov    edi,0x75348e1f
  40d7c4:	cmc    
  40d7c5:	imul   esi,DWORD PTR [eax],0x25
  40d7c8:	jge    0x40d776
  40d7ca:	ss jb  0x40d807
  40d7cd:	ss sti 
  40d7cf:	and    bl,BYTE PTR [esp+ebx*2-0x62003020]
  40d7d6:	inc    esp
  40d7d7:	ins    BYTE PTR es:[edi],dx
  40d7d8:	pop    esi
  40d7d9:	popf   
  40d7da:	loop   0x40d81c
  40d7dc:	mov    DWORD PTR [edx],ecx
  40d7de:	push   edi
  40d7df:	adc    al,0xf7
  40d7e1:	addr16 sbb al,0x6e
  40d7e4:	ja     0x40d833
  40d7e6:	test   ecx,ecx
  40d7e8:	imul   ebp,DWORD PTR [ebx-0x49],0x7a
  40d7ec:	das    
  40d7ed:	cmp    dh,BYTE PTR [ebx-0x33]
  40d7f0:	dec    esi
  40d7f1:	clc    
  40d7f2:	mov    BYTE PTR [edx],ah
  40d7f4:	cmc    
  40d7f5:	pop    esi
  40d7f6:	sbb    edi,DWORD PTR [eax+0x181a2edf]
  40d7fc:	in     al,0xc8
  40d7fe:	jmp    0x424e971f
  40d803:	div    DWORD PTR [edi+0x31]
  40d806:	mov    ah,0x6f
  40d808:	xlat   BYTE PTR ds:[ebx]
  40d809:	bound  ebx,QWORD PTR [eax-0x64]
  40d80c:	sahf   
  40d80d:	add    esp,DWORD PTR [edx]
  40d80f:	sahf   
  40d810:	mov    DWORD PTR [edx+ebp*4+0x13],0x942a2ba4
  40d818:	call   0x633dc94b
  40d81d:	and    esp,ecx
  40d81f:	dec    esp
  40d820:	jmp    0x8e5fc02b
  40d825:	mov    eax,ds:0x97319126
  40d82a:	fldcw  WORD PTR [esi]
  40d82c:	mov    ds:0x58c29d74,al
  40d831:	mov    dh,0xc3
  40d833:	inc    edx
  40d834:	mov    al,0x9d
  40d836:	mov    ebx,0xc9aceb89
  40d83b:	ins    DWORD PTR es:[edi],dx
  40d83c:	outs   dx,DWORD PTR ds:[esi]
  40d83d:	call   0x92a82d23
  40d842:	jns    0x40d7f2
  40d844:	dec    esi
  40d845:	mov    al,0xe5
  40d847:	adc    eax,0x15e83f4c
  40d84c:	test   ebp,ebp
  40d84e:	cmp    al,0x44
  40d850:	jle    0x40d8ad
  40d852:	push   edi
  40d853:	cmp    BYTE PTR [eax+eax*1-0x5d],cl
  40d857:	dec    ecx
  40d858:	jle    0x40d8bc
  40d85a:	pop    ebx
  40d85b:	(bad)  
  40d85c:	or     BYTE PTR [esi],bh
  40d85e:	xor    dl,BYTE PTR [eax-0xe4c033]
  40d864:	dec    ecx
  40d865:	mov    dl,cl
  40d867:	dec    edi
  40d868:	shl    BYTE PTR [esi+0x6b5f3593],cl
  40d86e:	stos   DWORD PTR es:[edi],eax
  40d86f:	jg     0x40d8d9
  40d871:	add    eax,0x18580e2a
  40d876:	and    DWORD PTR [ecx+0x3b],ecx
  40d879:	push   edi
  40d87a:	push   esi
  40d87b:	into   
  40d87c:	repz lock mov ebx,0x79ff51f4
  40d883:	mov    fs,WORD PTR [esi-0x52eb1a4e]
  40d889:	dec    eax
  40d88a:	nop
  40d88b:	pop    ss
  40d88c:	aaa    
  40d88d:	mov    bl,0x28
  40d88f:	fstp   DWORD PTR [ebp+0x93d2ab1]
  40d895:	jp     0x40d8a2
  40d897:	inc    ebx
  40d898:	cmp    al,0x85
  40d89a:	leave  
  40d89b:	cmp    BYTE PTR [ecx-0x163b216c],bh
  40d8a1:	test   al,0xb5
  40d8a3:	jmp    0x20a1:0xdc4f3d63
  40d8aa:	pop    ebx
  40d8ab:	adc    eax,DWORD PTR [eax+edx*1+0x55393c2c]
  40d8b2:	sub    edi,DWORD PTR [esi+eax*2-0x9]
  40d8b6:	mov    ebx,0xccd17fa9
  40d8bb:	les    esi,FWORD PTR [esi+0x74]
  40d8be:	dec    edi
  40d8bf:	test   DWORD PTR [ebp+0x26],edx
  40d8c2:	std    
  40d8c3:	dec    edx
  40d8c4:	sahf   
  40d8c5:	add    ah,BYTE PTR [ebp+0x504e6be6]
  40d8cb:	xor    BYTE PTR [eax],cl
  40d8cd:	add    DWORD PTR [bx-0x3790],edi
  40d8d2:	stos   DWORD PTR es:[edi],eax
  40d8d3:	pop    ss
  40d8d4:	jb     0x40d8d4
  40d8d6:	sbb    eax,DWORD PTR [ebp+0x3f]
  40d8d9:	pop    es
  40d8da:	inc    ebp
  40d8db:	mov    eax,ebp
  40d8dd:	pop    ss
  40d8de:	push   edi
  40d8df:	push   ebx
  40d8e0:	aaa    
  40d8e1:	adc    eax,0x27e61185
  40d8e6:	xchg   ebx,eax
  40d8e7:	xlat   BYTE PTR ds:[ebx]
  40d8e8:	pusha  
  40d8e9:	sub    edi,DWORD PTR [eax+0x14a2572a]
  40d8ef:	out    0xdf,al
  40d8f1:	mov    bl,0x34
  40d8f3:	mov    bh,0x84
  40d8f5:	and    DWORD PTR [esi+0x1b],0xe40d4ee0
  40d8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8fd:	ins    DWORD PTR es:[edi],dx
  40d8fe:	push   ds
  40d8ff:	les    edi,FWORD PTR [ebx]
  40d901:	je     0x40d92d
  40d903:	mov    ecx,0xefb9c8af
  40d908:	jl     0x40d8e7
  40d90a:	rcr    DWORD PTR [esi+0x12],0x24
  40d90e:	push   0xffffffe4
  40d910:	out    dx,eax
  40d911:	and    ecx,esp
  40d913:	or     eax,0x791572ea
  40d918:	mov    ebp,eax
  40d91a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91b:	rep outs dx,BYTE PTR ds:[esi]
  40d91d:	push   0xffffff91
  40d91f:	cmp    eax,0xdc85eb27
  40d924:	pop    ecx
  40d925:	pop    esi
  40d926:	pop    ds
  40d927:	cmp    dl,0x8c
  40d92a:	cmp    al,0xb3
  40d92c:	mov    bh,0xb3
  40d92e:	ja     0x40d8b4
  40d930:	adc    eax,0xadb85c99
  40d935:	bswap  eax
  40d937:	push   ecx
  40d938:	mov    ds:0xc0d6a52e,eax
  40d93d:	sbb    ah,BYTE PTR [ecx+0x68]
  40d940:	cmp    DWORD PTR [ebx-0x1d5a252c],ebp
  40d946:	je     0x40d943
  40d948:	lds    esp,FWORD PTR [edx-0x6]
  40d94b:	idiv   bh
  40d94d:	xlat   BYTE PTR ds:[ebx]
  40d94e:	lea    edi,[ebp-0x2bd875ac]
  40d954:	push   0xffffffa1
  40d956:	repnz mov bl,0xf4
  40d959:	aad    0x3c
  40d95b:	jno    0x40d928
  40d95d:	jmp    0x44d5ca90
  40d962:	sub    ecx,DWORD PTR [eax]
  40d964:	mov    edi,edx
  40d966:	imul   ecx,DWORD PTR [edi],0x9911d947
  40d96c:	jne    0x40d902
  40d96e:	xchg   edi,eax
  40d96f:	rcl    esp,cl
  40d971:	test   dh,ah
  40d973:	(bad)  
  40d974:	sbb    dl,BYTE PTR [edi+0x7a]
  40d977:	call   0x6267cf2a
  40d97c:	es int 0x80
  40d97f:	sbb    al,0xd4
  40d981:	xor    al,al
  40d983:	mov    WORD PTR [ebp+eax*1+0x7267392a],?
  40d98a:	adc    eax,0xf64658b0
  40d98f:	aam    0x92
  40d991:	int3   
  40d992:	or     ah,dh
  40d994:	dec    edx
  40d995:	mov    bh,0x54
  40d997:	loope  0x40d9b9
  40d999:	push   0x27
  40d99b:	sub    DWORD PTR [edx-0x41],esi
  40d99e:	pusha  
  40d99f:	cmp    DWORD PTR [edx+ecx*4-0x579f10b2],0xffffffb0
  40d9a7:	and    ebp,esi
  40d9a9:	pop    ebp
  40d9aa:	stos   DWORD PTR es:[edi],eax
  40d9ab:	push   edx
  40d9ac:	mov    edi,0x71055fa2
  40d9b1:	add    BYTE PTR [ecx],dl
  40d9b3:	adc    esp,edx
  40d9b5:	imul   esp,DWORD PTR [eax-0x33],0x10
  40d9b9:	xchg   DWORD PTR [ebp-0x4d],ebx
  40d9bc:	jge    0x40da34
  40d9be:	push   esp
  40d9bf:	push   ecx
  40d9c0:	loope  0x40d9d9
  40d9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9c3:	push   ecx
  40d9c4:	mov    WORD PTR [ecx-0x72],?
  40d9c7:	mov    ecx,0x9ed51493
  40d9cc:	mov    al,ds:0x5af75370
  40d9d1:	das    
  40d9d2:	push   ebx
  40d9d3:	push   eax
  40d9d4:	cdq    
  40d9d5:	dec    esi
  40d9d6:	pop    es
  40d9d7:	push   esp
  40d9d8:	aas    
  40d9d9:	xchg   edi,eax
  40d9da:	test   DWORD PTR [ebx],0x75013a2d
  40d9e0:	in     eax,0x98
  40d9e2:	inc    eax
  40d9e3:	push   ds
  40d9e4:	jp     0x40da1d
  40d9e6:	jne    0x40da10
  40d9e8:	xlat   BYTE PTR ds:[ebx]
  40d9e9:	push   0xd636f7c7
  40d9ee:	mov    ds:0x35e74587,eax
  40d9f3:	adc    eax,0xe9749717
  40d9f8:	(bad)  
  40d9f9:	pop    esi
  40d9fa:	cli    
  40d9fb:	out    0xa,eax
  40d9fd:	and    BYTE PTR [edx-0x4db00616],dh
  40da03:	sub    eax,0x2155fd01
  40da08:	(bad)  
  40da09:	icebp  
  40da0a:	adc    ebx,DWORD PTR [edi+0x5ab7bb96]
  40da10:	jmp    0xe4dc:0x5b727838
  40da17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da18:	cmp    eax,0xe3ad2c47
  40da1d:	mov    ebx,0xd23a4a79
  40da22:	sub    DWORD PTR [ebx],ecx
  40da24:	xchg   ebp,eax
  40da25:	arpl   WORD PTR [ebp+0x21781267],ax
  40da2b:	out    0x78,eax
  40da2d:	mov    ebx,0x940cc121
  40da32:	mov    gs,WORD PTR [ebp-0xe665f2d]
  40da38:	retf   0xa9fc
  40da3b:	cld    
  40da3c:	mov    ebx,0x34125b2b
  40da41:	or     eax,0xcf7c34
  40da46:	pop    edi
  40da47:	and    esp,ebp
  40da49:	jp     0x40d9f8
  40da4b:	push   ebx
  40da4c:	mov    ebp,0x10877386
  40da51:	test   al,0xcb
  40da53:	sbb    ah,BYTE PTR [edi+0x2]
  40da56:	mov    ds:0xe00cac87,eax
  40da5b:	std    
  40da5c:	adc    BYTE PTR [ebx-0x68cefd71],dl
  40da62:	cmp    BYTE PTR [esi+edi*8],0x2e
  40da66:	adc    al,0x4a
  40da68:	rcl    BYTE PTR [edi-0x5c91e56],0x7c
  40da6f:	inc    ecx
  40da70:	inc    esi
  40da71:	mov    ebx,0xb1d156fd
  40da76:	cwde   
  40da77:	gs pop es
  40da79:	sti    
  40da7a:	aas    
  40da7b:	call   0x9ad:0xf16bb4e5
  40da82:	into   
  40da83:	push   ecx
  40da84:	and    DWORD PTR [eax],esp
  40da86:	and    eax,0x70786e21
  40da8b:	setl   BYTE PTR [ebx]
  40da8e:	adc    al,0x4a
  40da90:	sbb    DWORD PTR [edx],esi
  40da92:	arpl   WORD PTR [ebx+0x7baf5de6],cx
  40da98:	mov    bl,0x79
  40da9a:	dec    eax
  40da9b:	pop    es
  40da9c:	push   edi
  40da9d:	adc    al,0x4e
  40da9f:	pop    ds
  40daa0:	adc    DWORD PTR [esi+eax*4-0x38],ecx
  40daa4:	fnstsw WORD PTR [ebx+ecx*8+0x6b]
  40daa8:	nop
  40daa9:	(bad)  
  40daaa:	(bad)  
  40daab:	mov    DWORD PTR [edx+0x9],esp
  40daae:	mov    edx,0x9a5b057c
  40dab3:	lahf   
  40dab4:	pusha  
  40dab5:	adc    DWORD PTR [ebp-0x7c8795df],0x6f1b6400
  40dabf:	xor    ch,dl
  40dac1:	aaa    
  40dac2:	mov    esp,0xa8742b15
  40dac7:	shl    dh,1
  40dac9:	cmp    cl,BYTE PTR [edx+0x49244fc1]
  40dacf:	hlt    
  40dad0:	jle    0x40dac1
  40dad2:	iret   
  40dad3:	push   es
  40dad4:	or     ecx,DWORD PTR [ebx+0x1c0854e8]
  40dada:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dadc:	cmp    eax,0xf2068733
  40dae1:	repnz dec eax
  40dae3:	call   0xff95:0xa787a23c
  40daea:	pop    ebp
  40daeb:	pop    esi
  40daec:	fld    TBYTE PTR [ebx]
  40daee:	icebp  
  40daef:	or     bh,BYTE PTR [eax+0xa]
  40daf2:	and    DWORD PTR [eax-0x5c],edi
  40daf5:	psubusb mm4,QWORD PTR [ecx]
  40daf8:	and    BYTE PTR [ecx+esi*8],dl
  40dafb:	scas   al,BYTE PTR es:[edi]
  40dafc:	jle    0x40db19
  40dafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daff:	ss cmp al,0x8b
  40db02:	cwde   
  40db03:	jo     0x40daf7
  40db05:	xchg   DWORD PTR [ebx-0x493de73a],ebx
  40db0b:	add    eax,0x2ba8f393
  40db10:	jge    0x40db89
  40db12:	sub    esi,DWORD PTR [ebp-0x1c9796bc]
  40db18:	shl    esi,1
  40db1a:	mov    ah,0x32
  40db1c:	cmp    DWORD PTR [edi],0xffffffd4
  40db1f:	adc    BYTE PTR [ebx+0x4a3c96d],0x73
  40db26:	add    BYTE PTR [edi],ch
  40db28:	fsub   DWORD PTR [ecx]
  40db2a:	push   esi
  40db2b:	fisttp QWORD PTR ds:0x9557aab8
  40db31:	aad    0x65
  40db33:	ins    DWORD PTR es:[edi],dx
  40db34:	int    0xf0
  40db36:	lock pusha 
  40db38:	rol    edx,1
  40db3a:	ins    BYTE PTR es:[edi],dx
  40db3b:	jmp    0x40db57
  40db3d:	sti    
  40db3e:	dec    edx
  40db3f:	sub    edx,DWORD PTR [edx+0x26]
  40db42:	in     al,dx
  40db43:	loopne 0x40db5b
  40db45:	and    DWORD PTR [ebx+ebp*8-0x9],0x53
  40db4a:	test   eax,0xf2e89b3d
  40db4f:	pop    ebp
  40db50:	aaa    
  40db51:	je     0x40dad4
  40db53:	sbb    BYTE PTR [eax+0xbdd33cd],bh
  40db59:	loop   0x40dbc7
  40db5b:	in     eax,0x29
  40db5d:	leave  
  40db5e:	clc    
  40db5f:	std    
  40db60:	sub    BYTE PTR [edi-0x5a41c384],cl
  40db66:	mov    ss,edx
  40db68:	xchg   dl,ch
  40db6a:	cmp    al,BYTE PTR [esi+0x6b5ed03d]
  40db70:	push   0x8d7fec58
  40db75:	inc    esi
  40db76:	cld    
  40db77:	aaa    
  40db78:	js     0x40db55
  40db7a:	lahf   
  40db7b:	jae    0x40dba4
  40db7d:	mov    esi,0x107a7490
  40db82:	push   cs
  40db83:	cmp    BYTE PTR [edx-0x54],ch
  40db86:	xchg   ecx,eax
  40db87:	(bad)
  40db8c:	cld    
  40db8d:	jb     0x40db3a
  40db8f:	pop    eax
  40db90:	imul   ebx,DWORD PTR [ecx],0xc9fb9a60
  40db96:	xor    al,0x93
  40db98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db99:	adc    bl,ch
  40db9b:	loop   0x40dc1b
  40db9d:	lea    ecx,es:[eax*4-0x73dcea0]
  40dba5:	cli    
  40dba6:	pop    ecx
  40dba7:	call   0x9b47:0xba67050f
  40dbae:	rcl    DWORD PTR ds:0xf013ae54,0x5a
  40dbb5:	push   ebx
  40dbb6:	int3   
  40dbb7:	(bad)  
  40dbb8:	popf   
  40dbb9:	jg     0x40dc2e
  40dbbb:	inc    ebp
  40dbbc:	jge    0x40dc31
  40dbbe:	push   ss
  40dbbf:	jmp    0x40dba3
  40dbc1:	shl    dh,0x6a
  40dbc4:	mov    edi,0xdefa0711
  40dbc9:	xor    BYTE PTR [eax-0x78],al
  40dbcc:	js     0x40dbad
  40dbce:	je     0x40dc2c
  40dbd0:	cmc    
  40dbd1:	inc    ecx
  40dbd2:	lods   al,BYTE PTR ds:[esi]
  40dbd3:	xor    bl,BYTE PTR [eax-0x6f1c9a20]
  40dbd9:	icebp  
  40dbda:	mov    ebp,0xc4279b96
  40dbdf:	dec    eax
  40dbe0:	js     0x40db90
  40dbe2:	inc    eax
  40dbe3:	sub    dl,BYTE PTR [ebx+0x2a2b4d46]
  40dbe9:	xor    DWORD PTR [edi-0x3d253850],edi
  40dbef:	mov    dh,BYTE PTR [esp+ecx*4-0x2e]
  40dbf3:	loope  0x40dc35
  40dbf5:	dec    esp
  40dbf6:	jo     0x40dc6d
  40dbf8:	mov    ebp,0x5ce54937
  40dbfd:	xor    BYTE PTR [esi],0x17
  40dc00:	sbb    eax,0x7b2ad037
  40dc05:	xchg   esp,eax
  40dc06:	add    eax,ecx
  40dc08:	push   0x53d8f5fa
  40dc0d:	or     al,0x2b
  40dc0f:	aaa    
  40dc10:	mov    al,0xf7
  40dc12:	les    edi,FWORD PTR [edx-0x54a61cae]
  40dc18:	add    al,0x5a
  40dc1a:	loop   0x40dbde
  40dc1c:	sub    BYTE PTR [ecx],bl
  40dc1e:	int    0xa
  40dc20:	sub    DWORD PTR [esi+0x13bcd162],esp
  40dc26:	add    ebx,DWORD PTR [eax-0x295ecaff]
  40dc2c:	loopne 0x40dc42
  40dc2e:	sub    BYTE PTR [ebp+0x7a],bh
  40dc31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc32:	adc    eax,0xc507b8b0
  40dc37:	jb     0x40dc41
  40dc39:	dec    ebx
  40dc3a:	push   ss
  40dc3b:	in     al,dx
  40dc3c:	scas   al,BYTE PTR es:[edi]
  40dc3d:	inc    ebx
  40dc3e:	cmp    edi,DWORD PTR [ebx]
  40dc40:	ss retf 0x7b09
  40dc44:	fisub  DWORD PTR [ebp+0x60da379]
  40dc4a:	cli    
  40dc4b:	arpl   ax,ax
  40dc4d:	in     eax,0xb9
  40dc4f:	shr    DWORD PTR [esi-0x70b9f59b],0xc8
  40dc56:	sbb    eax,0xa2787b12
  40dc5b:	jge    0x40dc3b
  40dc5d:	shufps xmm1,XMMWORD PTR [esi+0x5f],0xfc
  40dc62:	xor    eax,0xc3af8239
  40dc67:	xor    ecx,DWORD PTR [ecx-0x65f0ddc7]
  40dc6d:	xor    ebp,edi
  40dc6f:	dec    ecx
  40dc70:	aas    
  40dc71:	retf   0x854
  40dc74:	cdq    
  40dc75:	fild   WORD PTR [edx]
  40dc77:	or     ah,bl
  40dc79:	inc    ebp
  40dc7a:	xchg   ebx,eax
  40dc7b:	cmp    eax,0x5b0cac3f
  40dc80:	pusha  
  40dc81:	call   0xe55b:0x1a379b37
  40dc88:	add    dl,BYTE PTR [edx-0x1c]
  40dc8b:	retf   0x372f
  40dc8e:	inc    eax
  40dc8f:	repz add DWORD PTR [edx+0x6b],ebp
  40dc93:	pop    edx
  40dc94:	inc    ecx
  40dc95:	cmp    BYTE PTR [ebx+0x1d],ch
  40dc98:	jmp    0xb93311b9
  40dc9d:	or     bl,0xcb
  40dca0:	out    0x8b,eax
  40dca2:	and    DWORD PTR [ebx-0x21],0xa5c20fac
  40dca9:	jnp    0x40dc62
  40dcab:	jg     0x40dcfc
  40dcad:	sub    eax,0xe508612
  40dcb2:	aaa    
  40dcb3:	(bad)  
  40dcb5:	fst    QWORD PTR ds:0xac8f114c
  40dcbb:	jl     0x40dcc3
  40dcbd:	mov    ebp,0x600bbc8
  40dcc2:	xor    eax,0x3a251356
  40dcc7:	daa    
  40dcc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcc9:	mov    dl,0x5e
  40dccb:	pop    ebp
  40dccc:	aad    0x98
  40dcce:	dec    edx
  40dccf:	push   es
  40dcd0:	int    0xbd
  40dcd2:	sub    eax,0x85c4008
  40dcd7:	test   DWORD PTR [esi],0xef90314f
  40dcdd:	and    al,0x4e
  40dcdf:	xor    DWORD PTR [esi+eiz*8+0x5b8597d5],edi
  40dce6:	aaa    
  40dce7:	or     BYTE PTR [esi],ah
  40dce9:	pop    edi
  40dcea:	fnsave [ebx]
  40dcec:	dec    edi
  40dced:	xor    eax,0xcb8afc68
  40dcf2:	mov    ebp,0x565b9b15
  40dcf7:	dec    ecx
  40dcf8:	nop
  40dcf9:	mov    dh,0x27
  40dcfb:	jmp    0x40dd5d
  40dcfd:	xchg   BYTE PTR [edx+0x37],bh
  40dd00:	rol    dh,0x42
  40dd03:	fwait
  40dd04:	adc    edi,esi
  40dd06:	dec    edi
  40dd07:	add    DWORD PTR [edi+0x10],0xfffffff0
  40dd0b:	sahf   
  40dd0c:	loop   0x40dd3c
  40dd0e:	stc    
  40dd0f:	sbb    cl,cl
  40dd11:	jbe    0x40dca8
  40dd13:	lods   al,BYTE PTR ds:[esi]
  40dd14:	fsubr  QWORD PTR [ebp-0x615a233]
  40dd1a:	loop   0x40dcca
  40dd1c:	(bad)  
  40dd1d:	mov    bl,BYTE PTR [eax]
  40dd1f:	adc    DWORD PTR [edi+0x73],esi
  40dd22:	and    ebx,ecx
  40dd24:	xor    eax,0x3708a25c
  40dd29:	mov    bl,0x60
  40dd2b:	sbb    BYTE PTR [ebp+0x1c],0xfc
  40dd2f:	pop    esp
  40dd30:	pop    ecx
  40dd31:	mov    al,0xfd
  40dd33:	jmp    0x40dd9a
  40dd35:	pop    ecx
  40dd36:	xor    eax,0x462f8897
  40dd3b:	sti    
  40dd3c:	mov    ecx,0x4b53daf9
  40dd41:	fwait
  40dd42:	cmp    al,0xb8
  40dd44:	push   ds
  40dd45:	fxch   st(1)
  40dd47:	ret    
  40dd48:	xchg   ebp,eax
  40dd49:	mov    DWORD PTR [edx+0x5f9d25b],eax
  40dd4f:	cwde   
  40dd50:	jns    0x40dd50
  40dd52:	pusha  
  40dd53:	fs mov esp,0x494c834a
  40dd59:	imul   ebx,DWORD PTR [edx+0x32],0xeab09f13
  40dd60:	gs xor eax,0xf0facbdf
  40dd66:	fimul  DWORD PTR [ebx]
  40dd68:	pop    ebp
  40dd69:	add    eax,0x4efbedfc
  40dd6e:	add    BYTE PTR [esi-0x66],al
  40dd71:	add    BYTE PTR [edi+0x34],al
  40dd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd75:	push   ebp
  40dd76:	ins    BYTE PTR es:[edi],dx
  40dd77:	inc    esi
  40dd78:	mov    dl,0x65
  40dd7a:	dec    esp
  40dd7b:	inc    eax
  40dd7c:	and    eax,0x43
  40dd7f:	inc    ebp
  40dd80:	cmp    DWORD PTR [esp+ebx*1+0x22658f8c],0xdbb780f2
  40dd8b:	jecxz  0x40dddc
  40dd8d:	mov    ch,BYTE PTR ds:0x55e9b410
  40dd93:	cdq    
  40dd94:	inc    edi
  40dd95:	(bad)  
  40dd96:	and    al,0x47
  40dd98:	outs   dx,BYTE PTR ds:[esi]
  40dd99:	cmp    al,BYTE PTR [esi]
  40dd9b:	stc    
  40dd9c:	inc    esi
  40dd9d:	mov    edx,0xe244a8e
  40dda2:	mov    ah,ch
  40dda4:	inc    ecx
  40dda5:	sub    eax,0x4677734f
  40ddaa:	inc    esp
  40ddab:	leave  
  40ddac:	dec    edi
  40ddad:	in     al,dx
  40ddae:	mov    ah,0x4e
  40ddb0:	dec    ecx
  40ddb1:	data16 adc bl,cl
  40ddb4:	scas   eax,DWORD PTR es:[edi]
  40ddb5:	sub    eax,0xb34c8fff
  40ddba:	cdq    
  40ddbb:	sbb    BYTE PTR ds:[edi-0x59],ch
  40ddbf:	mov    bl,0x96
  40ddc1:	mov    ds:0xe861a90e,al
  40ddc6:	mov    edi,0xb6cedf97
  40ddcb:	or     DWORD PTR [esi-0x38b882dc],edi
  40ddd1:	push   cs
  40ddd2:	or     BYTE PTR [edx-0x69ccb943],0x30
  40ddd9:	cmp    ecx,0xffffffae
  40dddc:	nop
  40dddd:	sbb    DWORD PTR [esi-0x4c78bf79],edi
  40dde3:	popf   
  40dde4:	inc    eax
  40dde5:	cmp    ch,cl
  40dde7:	lea    edx,[esi+0x7083e4f9]
  40dded:	or     DWORD PTR [ebx],esp
  40ddef:	test   BYTE PTR [ebx+0x275ad5c7],0xa9
  40ddf6:	dec    esp
  40ddf7:	or     dh,cl
  40ddf9:	mov    eax,ebx
  40ddfb:	repz xor eax,0x36a31004
  40de01:	cwde   
  40de02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de03:	cmp    ah,BYTE PTR [ecx]
  40de05:	in     eax,dx
  40de06:	jns    0x40dde3
  40de08:	arpl   bp,bp
  40de0a:	inc    esp
  40de0b:	das    
  40de0c:	fdivr  st,st(0)
  40de0e:	cmp    al,dh
  40de10:	outs   dx,BYTE PTR ds:[esi]
  40de11:	jp     0x40ddc0
  40de13:	xor    al,0xb3
  40de15:	and    ah,ah
  40de17:	mov    dh,0xe4
  40de19:	and    eax,DWORD PTR [esi+ecx*1+0x24f117f1]
  40de20:	imul   esi,DWORD PTR [esi-0x3b],0xfffffff5
  40de24:	sub    BYTE PTR [ecx-0x451a96db],ah
  40de2a:	cmp    al,0xb4
  40de2d:	into   
  40de2e:	frstor [ebp-0x3a4b83b9]
  40de34:	add    esp,DWORD PTR [ebx]
  40de36:	rol    BYTE PTR [esi+0x57d92ddb],0x65
  40de3d:	sub    DWORD PTR [esi],esi
  40de3f:	nop
  40de40:	std    
  40de41:	lock inc ebp
  40de43:	daa    
  40de44:	adc    al,0xdf
  40de46:	loop   0x40de0b
  40de48:	out    0x73,al
  40de4a:	sar    DWORD PTR [ebp-0x17],cl
  40de4d:	cdq    
  40de4e:	ror    ch,0xa
  40de51:	pop    ss
  40de52:	in     al,0x85
  40de54:	call   0x968b:0x4c9b649a
  40de5b:	(bad)  
  40de5c:	test   al,0xc6
  40de5e:	xor    DWORD PTR [esi+0x2],esp
  40de61:	mov    eax,0x6fecbf7b
  40de66:	jmp    0x3190:0x47109e6c
  40de6d:	cmp    bl,BYTE PTR [ebx+0x76fa4e53]
  40de73:	mov    bl,0x66
  40de75:	lock stc 
  40de77:	ins    BYTE PTR es:[edi],dx
  40de78:	or     eax,0x1d1adb3d
  40de7d:	cmc    
  40de7e:	cmp    esp,ebx
  40de80:	adc    eax,0x2a989bec
  40de85:	das    
  40de86:	(bad)  
  40de87:	fsubr  DWORD PTR [edx+0x3d]
  40de8a:	test   al,0xfd
  40de8c:	xchg   BYTE PTR [esi],bl
  40de8e:	call   DWORD PTR [edx]
  40de90:	push   esp
  40de91:	mov    dl,0xcd
  40de93:	inc    edx
  40de94:	out    0xdf,eax
  40de96:	inc    ebx
  40de97:	fld    TBYTE PTR [ecx+0x31]
  40de9a:	ret    0x6e16
  40de9d:	shr    DWORD PTR [edx],cl
  40de9f:	mov    ch,ah
  40dea1:	sbb    BYTE PTR [edx-0x1a],al
  40dea4:	pop    ds
  40dea5:	addr16 aaa 
  40dea7:	ins    DWORD PTR es:[edi],dx
  40dea8:	daa    
  40dea9:	ds mov ecx,edi
  40deac:	loope  0x40dec1
  40deae:	(bad)  
  40deaf:	xlat   BYTE PTR ds:[ebx]
  40deb0:	jmp    0x1259:0xe91a7c60
  40deb7:	cli    
  40deb8:	ss js  0x40df05
  40debb:	das    
  40debc:	xlat   BYTE PTR ds:[ebx]
  40debd:	pop    esp
  40debe:	(bad)  
  40debf:	sbb    al,0xf8
  40dec1:	xor    al,0x1c
  40dec3:	rcl    esi,0xb4
  40dec6:	pop    edi
  40dec7:	lahf   
  40dec8:	or     eax,ebx
  40deca:	lahf   
  40decb:	adc    BYTE PTR [ecx+0x69],bl
  40dece:	fdiv   DWORD PTR [ebx+0x31]
  40ded1:	maskmovq mm4,(bad)
  40ded2:	mul    DWORD PTR [edi-0x1aaf347e]
  40ded8:	cmp    al,0x2e
  40deda:	push   0x54f12713
  40dedf:	adc    eax,0xd21c8e6b
  40dee4:	mov    dl,0x3e
  40dee6:	add    eax,0x2c4f19b1
  40deeb:	sub    edi,DWORD PTR gs:[esi-0x52dc4888]
  40def2:	push   ecx
  40def3:	mov    ds:0x480946b6,al
  40def8:	fst    QWORD PTR [eax-0x28]
  40defb:	push   ecx
  40defc:	sti    
  40defd:	(bad)  
  40defe:	hlt    
  40deff:	add    ebp,DWORD PTR [ebx+0x72]
  40df02:	mov    WORD PTR [ecx+esi*8+0x1fce776d],ss
  40df09:	inc    eax
  40df0a:	adc    al,0x46
  40df0c:	aaa    
  40df0d:	shr    dl,cl
  40df0f:	and    dl,BYTE PTR [edi-0x9d592ab]
  40df15:	imul   esp,DWORD PTR [edx+eiz*1+0x2a20482e],0xffffffa7
  40df1d:	mov    ds:0x2676d61c,al
  40df22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df23:	inc    ebx
  40df24:	mov    dl,0x9
  40df26:	loopne 0x40df7c
  40df28:	cmc    
  40df29:	add    ch,BYTE PTR [esi+0x2f732de6]
  40df2f:	jae    0x40df29
  40df31:	pop    ds
  40df32:	and    ebx,DWORD PTR [eax-0x28]
  40df35:	add    DWORD PTR [edx-0x432a1a86],ebp
  40df3b:	pop    es
  40df3c:	inc    ebp
  40df3d:	lahf   
  40df3e:	adc    ch,ah
  40df40:	retf   0xd427
  40df43:	sub    BYTE PTR [edx+0x22],dh
  40df46:	sti    
  40df47:	neg    bl
  40df49:	pushf  
  40df4a:	in     eax,dx
  40df4b:	dec    esp
  40df4c:	xchg   ebp,eax
  40df4d:	sbb    BYTE PTR [esi-0x1f594307],dh
  40df53:	pusha  
  40df54:	outs   dx,DWORD PTR ds:[esi]
  40df55:	retf   0x3b25
  40df58:	pusha  
  40df59:	int3   
  40df5a:	sub    DWORD PTR ds:0x678f4178,0xd9ee0f36
  40df64:	pop    es
  40df65:	shl    BYTE PTR [edx],0xae
  40df68:	or     edx,DWORD PTR [ebx-0x4421f16e]
  40df6e:	retf   0x6bf9
  40df71:	scas   eax,DWORD PTR es:[edi]
  40df72:	cwde   
  40df73:	ins    DWORD PTR es:[edi],dx
  40df74:	xchg   esp,eax
  40df75:	and    BYTE PTR [edi],bh
  40df77:	add    edx,esp
  40df79:	test   al,0x27
  40df7b:	or     esi,esi
  40df7d:	inc    ecx
  40df7e:	pop    es
  40df7f:	jp     0x40df93
  40df81:	sbb    ch,BYTE PTR [ecx-0x766e9bc3]
  40df87:	add    esi,esi
  40df89:	mov    edi,0x733ad79f
  40df8e:	mov    dl,0xa6
  40df90:	sbb    cl,bl
  40df92:	outs   dx,BYTE PTR ds:[esi]
  40df93:	jg     0x40dfe8
  40df95:	cld    
  40df96:	test   al,0x48
  40df98:	aas    
  40df99:	dec    edx
  40df9a:	push   es
  40df9b:	fdiv   QWORD PTR [esi+eax*4+0x1047a5f]
  40dfa2:	mov    al,ds:0xcc2ef306
  40dfa7:	retf   0x5990
  40dfaa:	fdiv   DWORD PTR [edx-0x76]
  40dfad:	rcl    BYTE PTR [edi-0x51],1
  40dfb0:	ja     0x40dff4
  40dfb2:	adc    al,0xf0
  40dfb4:	mov    ?,eax
  40dfb6:	dec    ebp
  40dfb7:	scas   al,BYTE PTR es:[edi]
  40dfb8:	(bad)  
  40dfb9:	mov    DWORD PTR cs:[ebp+0x4575bec5],esp
  40dfc0:	test   eax,0x3c8528ec
  40dfc5:	pop    ss
  40dfc6:	je     0x40dfeb
  40dfc8:	jge    0x40df73
  40dfca:	data16 (bad) 
  40dfcc:	fidivr WORD PTR [ebx-0x56cb4c04]
  40dfd2:	jns    0x40dfec
  40dfd4:	cld    
  40dfd5:	outs   dx,BYTE PTR ds:[esi]
  40dfd6:	arpl   WORD PTR ds:0x36d791f0,dx
  40dfdc:	jecxz  0x40e03b
  40dfde:	ins    BYTE PTR es:[edi],dx
  40dfdf:	in     eax,dx
  40dfe0:	add    ah,dh
  40dfe2:	lahf   
  40dfe3:	sub    ah,BYTE PTR [esp+esi*4+0x58]
  40dfe7:	cld    
  40dfe8:	adc    BYTE PTR [ecx-0x55],ah
  40dfeb:	ret    
  40dfec:	cmp    ebp,DWORD PTR [eax+0x52]
  40dfef:	cwde   
  40dff0:	push   esp
  40dff1:	xchg   BYTE PTR [ecx-0x2a1f7f3],ah
  40dff7:	popa   
  40dff8:	mov    BYTE PTR [ecx-0x3703d712],dl
  40dffe:	xchg   ecx,eax
  40dfff:	or     DWORD PTR [edx-0x7e98ef2b],esp
  40e005:	aaa    
  40e006:	mov    eax,ds:0xbcea8e7e
  40e00b:	cmp    cl,BYTE PTR [eax+0x4a]
  40e00e:	inc    edi
  40e00f:	call   0x9ae2:0x312388c8
  40e016:	inc    ebp
  40e017:	and    ch,BYTE PTR [edx+ebx*1+0x6b]
  40e01b:	pop    eax
  40e01c:	push   edx
  40e01d:	sbb    edx,esi
  40e01f:	cdq    
  40e020:	sub    ebp,esi
  40e022:	mov    ch,0x83
  40e024:	or     BYTE PTR [esi],ch
  40e026:	pushf  
  40e027:	or     dl,bl
  40e029:	sahf   
  40e02a:	cmp    esp,ebp
  40e02c:	inc    esi
  40e02d:	adc    al,0x4b
  40e02f:	dec    edi
  40e030:	in     eax,0x3d
  40e032:	xchg   esi,eax
  40e033:	push   ebp
  40e034:	sbb    ch,BYTE PTR [edi+0x44]
  40e037:	xor    al,0x6
  40e039:	and    BYTE PTR [esi-0x16],cl
  40e03c:	outs   dx,BYTE PTR gs:[esi]
  40e03e:	test   eax,0xb4772a0e
  40e043:	sub    eax,0xea2588d0
  40e048:	sbb    edi,ecx
  40e04a:	outs   dx,DWORD PTR ds:[esi]
  40e04b:	cli    
  40e04c:	lock pop edx
  40e04e:	jg     0x40e04e
  40e050:	cmp    edx,DWORD PTR [edi]
  40e052:	(bad)  
  40e053:	pop    edx
  40e054:	xchg   DWORD PTR [ecx-0x67a9705f],ebx
  40e05a:	cwde   
  40e05b:	nop
  40e05c:	pop    edx
  40e05d:	(bad)  
  40e05e:	fldln2 
  40e060:	aas    
  40e061:	mov    ds:0x73d5b5c9,al
  40e066:	lods   eax,DWORD PTR ds:[esi]
  40e067:	(bad)  
  40e068:	test   eax,0x7ddef719
  40e06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e06e:	dec    esp
  40e06f:	and    eax,0xf0d46fd7
  40e074:	(bad)  
  40e075:	in     eax,0x3
  40e077:	xor    ch,0x7a
  40e07a:	or     ebp,DWORD PTR [esi-0x6e]
  40e07d:	pop    ecx
  40e07e:	adc    al,0x1
  40e080:	(bad)  
  40e081:	loopne 0x40e07e
  40e083:	mov    dl,BYTE PTR gs:[ecx+0x8]
  40e087:	cmp    DWORD PTR [ebp+ebp*4+0xa84b35f],ebp
  40e08e:	mov    dl,0x37
  40e090:	shl    DWORD PTR [ebp+0x1d0634ec],1
  40e096:	inc    edi
  40e097:	push   esp
  40e098:	retf   
  40e099:	mov    ds:0xfa3613e3,eax
  40e09e:	sub    DWORD PTR [edi-0x49],ecx
  40e0a1:	push   0xb5843c20
  40e0a6:	aas    
  40e0a7:	xchg   DWORD PTR [esi-0x527296ee],edi
  40e0ad:	add    BYTE PTR [ecx-0x1a],al
  40e0b0:	adc    eax,0xc24682cf
  40e0b5:	sub    cl,cl
  40e0b7:	xchg   edi,eax
  40e0b8:	out    0xd0,eax
  40e0ba:	jmp    0x40e088
  40e0bc:	sub    dl,0x1a
  40e0bf:	or     al,BYTE PTR [edi-0x58e5dd2d]
  40e0c5:	pop    es
  40e0c6:	push   ebp
  40e0c7:	cs mov dh,0x67
  40e0ca:	ffree  st(3)
  40e0cc:	into   
  40e0cd:	shl    DWORD PTR [esi+0x86b1e21],1
  40e0d3:	dec    edi
  40e0d4:	xchg   BYTE PTR [ecx+0x6282ea0d],cl
  40e0da:	les    ebx,FWORD PTR ds:0x678ecd65
  40e0e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0e1:	dec    esp
  40e0e2:	pop    eax
  40e0e3:	inc    ebp
  40e0e4:	xlat   BYTE PTR ds:[ebx]
  40e0e5:	mov    eax,ds:0xbf578ddb
  40e0ea:	or     eax,0x22eeecea
  40e0ef:	retf   
  40e0f0:	in     al,dx
  40e0f1:	xchg   ebp,eax
  40e0f2:	ret    0xdb8
  40e0f5:	xchg   BYTE PTR ds:0x9dcd67ce,bl
  40e0fb:	inc    esp
  40e0fc:	jp     0x40e111
  40e0fe:	sahf   
  40e0ff:	xchg   DWORD PTR [edx],edx
  40e101:	fisttp DWORD PTR [ebx]
  40e103:	xor    BYTE PTR [edi],ah
  40e105:	pop    ebp
  40e106:	cmp    edx,DWORD PTR [edi+esi*1+0x7f410ca4]
  40e10d:	nop
  40e10e:	in     al,0xb
  40e110:	jnp    0x40e0b9
  40e112:	sub    eax,0x8f8b3c43
  40e117:	add    eax,0x3db6a412
  40e11c:	push   ecx
  40e11d:	mov    ebp,0x8b35b8b7
  40e122:	fwait
  40e123:	mov    ecx,0x78b92c7a
  40e128:	loop   0x40e11b
  40e12a:	inc    ebp
  40e12b:	xchg   edx,eax
  40e12c:	rcr    DWORD PTR [ebx+0x4d7d76d2],cl
  40e132:	adc    DWORD PTR ds:0xa0cd04b1,ecx
  40e138:	jge    0x40e19d
  40e13a:	addr16 xchg ebx,eax
  40e13c:	cmp    dl,bh
  40e13e:	sub    esi,DWORD PTR [esi+edx*1+0x3c015477]
  40e145:	pushf  
  40e146:	setle  al
  40e149:	sub    al,0x75
  40e14b:	fidivr DWORD PTR [edx]
  40e14d:	aaa    
  40e14e:	jbe    0x40e140
  40e150:	inc    esi
  40e151:	aaa    
  40e152:	pop    eax
  40e153:	xor    al,0xcc
  40e155:	sbb    al,0xa9
  40e157:	or     cl,0x7b
  40e15a:	mov    ah,0xdf
  40e15c:	lods   eax,DWORD PTR ds:[esi]
  40e15d:	push   ds
  40e15e:	mov    ds:0x9c378b79,al
  40e163:	popa   
  40e164:	clc    
  40e165:	out    0xe6,al
  40e167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e168:	and    dh,BYTE PTR [esi+ecx*8-0x67f512ad]
  40e16f:	mov    ebx,0x6df47f51
  40e174:	mov    ecx,0x1096cb5d
  40e179:	(bad)  
  40e17b:	pop    edx
  40e17c:	ins    DWORD PTR es:[edi],dx
  40e17d:	out    dx,eax
  40e17e:	shl    BYTE PTR ss:[edi-0x2d],1
  40e182:	sahf   
  40e183:	pop    esi
  40e184:	add    BYTE PTR [eax],bh
  40e186:	adc    DWORD PTR [edi],0xffffffbd
  40e189:	adc    eax,0x3ea746cd
  40e18e:	cmp    DWORD PTR [esi-0x5e],esi
  40e191:	cmp    bl,BYTE PTR [ecx+0x565a47ee]
  40e197:	call   0xfea6:0xd2cf883e
  40e19e:	popa   
  40e19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a0:	icebp  
  40e1a1:	adc    BYTE PTR [esi+esi*8+0x32651a95],bl
  40e1a8:	arpl   WORD PTR [eax+0x72],ax
  40e1ab:	push   ebx
  40e1ac:	mov    edi,0x15e71211
  40e1b1:	mov    DWORD PTR [eax],ebx
  40e1b3:	cdq    
  40e1b4:	mov    edi,0x9641b304
  40e1b9:	lods   eax,DWORD PTR ds:[esi]
  40e1ba:	add    edi,eax
  40e1bc:	push   0xffffffc7
  40e1be:	pop    edx
  40e1bf:	(bad)  
  40e1c0:	jno    0x40e219
  40e1c2:	push   ebp
  40e1c3:	cli    
  40e1c4:	dec    ebp
  40e1c5:	xchg   DWORD PTR [eax+0x1873f857],ebp
  40e1cb:	jo     0x40e244
  40e1cd:	add    eax,0x843b2c7
  40e1d2:	jle    0x40e188
  40e1d4:	pop    eax
  40e1d5:	dec    ecx
  40e1d6:	out    dx,al
  40e1d7:	outs   dx,DWORD PTR ds:[esi]
  40e1d8:	jmp    0x40e185
  40e1da:	repz std 
  40e1dc:	jl     0x40e22d
  40e1de:	push   ebp
  40e1df:	push   si
  40e1e1:	sbb    esp,eax
  40e1e3:	push   0xffffffb1
  40e1e5:	adc    edx,DWORD PTR gs:0x8be5e73e
  40e1ec:	leave  
  40e1ed:	adc    DWORD PTR [ecx+0x6d],0xffffffdf
  40e1f1:	fistp  DWORD PTR [esi]
  40e1f3:	gs mov bh,0x8b
  40e1f6:	pop    eax
  40e1f7:	lahf   
  40e1f8:	cmp    DWORD PTR ds:0x414141a4,ebp
  40e1fe:	aaa    
  40e1ff:	adc    eax,0x2fa47500
  40e204:	fwait
  40e205:	lahf   
  40e206:	or     al,0x4e
  40e208:	jns    0x40e1f0
  40e20a:	dec    edx
  40e20b:	loope  0x40e1d9
  40e20d:	cld    
  40e20e:	imul   esi,DWORD PTR [ebx+0x5d],0xf45d7a65
  40e215:	lock and BYTE PTR [esi],bh
  40e218:	inc    esi
  40e219:	inc    eax
  40e21a:	sub    DWORD PTR [edi+ecx*1-0x7dec3b7b],ebx
  40e221:	sar    dl,1
  40e223:	je     0x40e258
  40e225:	xor    al,0xb0
  40e227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e228:	jnp    0x40e249
  40e22a:	xor    al,0xb0
  40e22c:	scas   al,BYTE PTR es:[edi]
  40e22d:	xor    BYTE PTR [ebp-0xd5c5c10],ah
  40e233:	daa    
  40e234:	aam    0xa0
  40e236:	inc    esp
  40e237:	inc    edx
  40e238:	add    ebx,DWORD PTR ss:[ecx]
  40e23b:	xor    edi,esi
  40e23d:	clc    
  40e23e:	idiv   BYTE PTR [ebx+0x6b]
  40e241:	call   0xc623cd0a
  40e246:	cmc    
  40e247:	adc    esp,ebp
  40e249:	(bad)  
  40e24b:	inc    esi
  40e24c:	fcomp  QWORD PTR [ecx+0x33]
  40e24f:	rol    DWORD PTR [edi+0x4],1
  40e252:	cmp    BYTE PTR [ecx+0x5085b651],ah
  40e258:	sub    BYTE PTR [ebp-0x7e1986db],dl
  40e25e:	je     0x40e274
  40e260:	jbe    0x40e261
  40e262:	aam    0xa3
  40e264:	ffreep st(6)
  40e266:	test   al,0x64
  40e268:	out    dx,eax
  40e269:	push   0xbb4b9e1a
  40e26e:	out    dx,eax
  40e26f:	mov    ah,BYTE PTR [ebp+0x164662ea]
  40e275:	pop    eax
  40e276:	mov    ebx,ds
  40e278:	xor    eax,0x82f11680
  40e27d:	outs   dx,BYTE PTR ds:[esi]
  40e27e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e27f:	mov    ebx,0x6585c639
  40e284:	add    BYTE PTR [esi-0x4c3e98f8],al
  40e28a:	mov    dl,0xe3
  40e28c:	adc    ebp,DWORD PTR [edx-0x36223b0c]
  40e292:	xor    eax,0xfa7ef547
  40e297:	sbb    bl,bh
  40e299:	test   BYTE PTR [ebx],bl
  40e29b:	push   edx
  40e29c:	jbe    0x40e284
  40e29e:	out    dx,al
  40e29f:	adc    edx,edi
  40e2a1:	mov    cl,0xc5
  40e2a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a4:	sub    DWORD PTR [eax-0x60daa8f1],edx
  40e2aa:	pop    esi
  40e2ab:	enter  0x7569,0x25
  40e2af:	jmp    0xdc1:0xe34fcf3e
  40e2b6:	and    BYTE PTR [eax+0x48],0xa
  40e2ba:	jne    0x40e2dc
  40e2bc:	xchg   DWORD PTR [ecx-0x2f],edx
  40e2bf:	mov    ds:0x77835288,eax
  40e2c4:	mov    ebx,0xd8f22cae
  40e2c9:	data16 test BYTE PTR [ebx-0x48],bl
  40e2cd:	sub    ecx,DWORD PTR [edx+0x1cdacb3]
  40e2d3:	mov    esi,0xc52d208a
  40e2d8:	shr    ebx,0xa6
  40e2db:	mov    ecx,ebx
  40e2dd:	lods   eax,DWORD PTR ds:[esi]
  40e2de:	idiv   esi
  40e2e0:	jbe    0x40e2a3
  40e2e2:	pop    ss
  40e2e3:	xchg   edx,eax
  40e2e4:	cmp    bh,BYTE PTR [edi+eax*2]
  40e2e7:	stc    
  40e2e8:	mov    eax,ds:0xfaabeb35
  40e2ed:	dec    edi
  40e2ee:	loopne 0x40e2f1
  40e2f0:	push   edx
  40e2f1:	jo     0x40e362
  40e2f3:	and    DWORD PTR [ecx-0x8],edi
  40e2f6:	stos   BYTE PTR es:[edi],al
  40e2f7:	mov    ah,BYTE PTR [esi-0x70e6e009]
  40e2fd:	(bad)  
  40e2fe:	std    
  40e2ff:	push   ss
  40e300:	sub    DWORD PTR [ecx+ecx*4-0x963a9eb],0x6f87ac5c
  40e30b:	dec    eax
  40e30c:	stos   BYTE PTR es:[edi],al
  40e30d:	icebp  
  40e30e:	stc    
  40e30f:	adc    BYTE PTR [edi-0x672d3899],ch
  40e315:	mov    cl,0x7b
  40e317:	pop    ebx
  40e318:	rol    DWORD PTR [ebx+0x77347f30],cl
  40e31e:	dec    eax
  40e31f:	jp     0x40e2b1
  40e321:	push   0xa5f37994
  40e326:	call   0x102802e9
  40e32b:	pop    eax
  40e32c:	jno    0x40e3a4
  40e32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e32f:	call   0xdac9253b
  40e334:	mov    cl,0x7a
  40e336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e337:	mov    bl,0xc
  40e339:	cmc    
  40e33a:	cld    
  40e33b:	scas   eax,DWORD PTR es:[edi]
  40e33c:	scas   eax,DWORD PTR es:[edi]
  40e33d:	adc    al,0xe5
  40e33f:	test   DWORD PTR [esi],esp
  40e341:	xchg   ebp,eax
  40e342:	ja     0x40e348
  40e344:	mov    DWORD PTR ds:0x80fa4a5f,edx
  40e34a:	scas   eax,DWORD PTR es:[edi]
  40e34b:	stos   BYTE PTR es:[edi],al
  40e34c:	inc    DWORD PTR [edi-0x15]
  40e34f:	mov    ebp,0xfdac8e47
  40e354:	xchg   cl,cl
  40e356:	or     BYTE PTR [esi],bh
  40e358:	mov    bl,0xd3
  40e35a:	stos   DWORD PTR es:[edi],eax
  40e35b:	test   BYTE PTR [ecx+0x21],ch
  40e35e:	pop    es
  40e35f:	mov    ecx,DWORD PTR [ecx-0x3c]
  40e362:	es pop edx
  40e364:	(bad)  
  40e365:	outs   dx,DWORD PTR ds:[esi]
  40e366:	ret    0xfd40
  40e369:	cmp    ecx,DWORD PTR [esp+eiz*4+0x5f]
  40e36d:	and    DWORD PTR [ebx-0x6e6733cf],0x742d7429
  40e377:	cld    
  40e378:	dec    ebp
  40e379:	cdq    
  40e37a:	mov    al,ds:0xf09e03a4
  40e37f:	out    dx,al
  40e380:	push   edx
  40e381:	loope  0x40e3fb
  40e383:	sub    DWORD PTR [ecx+eiz*2+0x37],edx
  40e387:	ret    
  40e388:	popa   
  40e389:	add    DWORD PTR [eax],ecx
  40e38b:	or     cl,bh
  40e38d:	mov    ch,0xd0
  40e38f:	je     0x40e383
  40e391:	pop    esi
  40e392:	clc    
  40e393:	or     DWORD PTR [edx-0x15],eax
  40e396:	add    eax,0x9ae3c68a
  40e39b:	das    
  40e39c:	mov    ebp,0xe575208f
  40e3a1:	in     al,0x8b
  40e3a3:	mov    eax,ds:0xb51b7d5f
  40e3a8:	mov    ebp,0xb8f12e64
  40e3ad:	lahf   
  40e3ae:	and    BYTE PTR [ebx],dl
  40e3b0:	pusha  
  40e3b1:	push   eax
  40e3b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3b3:	mov    edx,0xe5fa1ef8
  40e3b8:	leave  
  40e3b9:	gs push cs
  40e3bb:	xchg   BYTE PTR [edi+ebx*8],ch
  40e3be:	jge    0x40e40c
  40e3c0:	cmc    
  40e3c1:	inc    edi
  40e3c2:	and    DWORD PTR [eax-0xa],0xcf80945d
  40e3c9:	xor    eax,0xc98f7ba0
  40e3ce:	lahf   
  40e3cf:	nop
  40e3d0:	mov    ds:0xaf209ece,al
  40e3d5:	aad    0x2b
  40e3d7:	idiv   al
  40e3d9:	ror    DWORD PTR [esi-0x1],0xa3
  40e3dd:	add    ax,0x57e
  40e3e1:	xchg   ebx,eax
  40e3e2:	and    eax,0xe1ea4e91
  40e3e7:	xchg   ecx,eax
  40e3e8:	or     al,0xb4
  40e3ea:	lods   eax,DWORD PTR ds:[esi]
  40e3eb:	jmp    0x5d4c:0xa76a41
  40e3f2:	loopne 0x40e424
  40e3f4:	inc    edi
  40e3f5:	fwait
  40e3f6:	adc    esp,DWORD PTR [esi]
  40e3f8:	dec    DWORD PTR [edi+0x4f489cff]
  40e3fe:	cwde   
  40e3ff:	scas   eax,DWORD PTR es:[edi]
  40e400:	ja     0x40e394
  40e402:	xchg   cl,ch
  40e404:	sbb    BYTE PTR [esi*1-0x7443fff1],0xbf
  40e40c:	lock call 0x3e9:0xb1fb6326
  40e414:	and    al,0x2c
  40e416:	mov    esi,0x31a566f5
  40e41b:	mov    edi,0x2ea7a46b
  40e420:	cs stc 
  40e422:	out    0x8c,eax
  40e424:	(bad)  
  40e425:	jns    0x40e3f1
  40e427:	pop    ecx
  40e428:	es push ebp
  40e42a:	stc    
  40e42b:	lds    esi,FWORD PTR [edi-0x14e9203c]
  40e431:	imul   edi,esi,0x3b36b1a9
  40e437:	clc    
  40e438:	mov    esp,0x428c6df5
  40e43d:	retf   
  40e43e:	mov    edx,0x89b04d4
  40e443:	retf   0x70ed
  40e446:	retf   
  40e447:	push   ds
  40e448:	pop    ds
  40e449:	ins    DWORD PTR es:[edi],dx
  40e44a:	adc    eax,0x479eabf4
  40e44f:	push   es
  40e450:	and    cl,BYTE PTR [esi]
  40e452:	mov    ds:0x18e88401,al
  40e457:	and    bh,dh
  40e459:	jp     0x40e3fb
  40e45b:	pop    esp
  40e45c:	mov    ah,0x71
  40e45e:	je     0x40e3fd
  40e460:	out    dx,eax
  40e461:	xchg   edx,eax
  40e462:	in     al,0x30
  40e464:	aaa    
  40e465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e466:	jmp    0x40e4c3
  40e468:	bound  ebp,QWORD PTR [eax]
  40e46a:	pop    edx
  40e46b:	pop    DWORD PTR [edx]
  40e46d:	push   ds
  40e46e:	xchg   ecx,eax
  40e46f:	fstp   TBYTE PTR [eax]
  40e471:	sub    eax,0x54bbe9be
  40e476:	mov    ch,0xa1
  40e478:	or     bl,ah
  40e47a:	jg     0x40e454
  40e47c:	retf   0xe027
  40e47f:	mov    esi,0x274e7562
  40e484:	js     0x40e4cf
  40e486:	clc    
  40e487:	and    dl,BYTE PTR [edi-0x61a8c718]
  40e48d:	cmp    dl,BYTE PTR [ebx+0x5ac8064a]
  40e493:	ins    BYTE PTR es:[edi],dx
  40e494:	mov    bh,0xa2
  40e496:	push   ebp
  40e497:	cmp    DWORD PTR [ebx],ecx
  40e499:	ret    
  40e49a:	ret    0x282f
  40e49d:	jb     0x40e47f
  40e49f:	popf   
  40e4a0:	inc    eax
  40e4a1:	jge    0x40e44b
  40e4a3:	(bad)  
  40e4a4:	out    dx,eax
  40e4a5:	lds    ecx,FWORD PTR ss:[ebx+0x5c9ef96b]
  40e4ac:	std    
  40e4ad:	or     eax,DWORD PTR [edx]
  40e4af:	sub    eax,0x1713264
  40e4b4:	les    esi,FWORD PTR [eax+0x5cab64da]
  40e4ba:	(bad)  
  40e4bb:	int3   
  40e4bc:	mov    ch,0x1f
  40e4be:	mov    dl,0x50
  40e4c0:	jae    0x40e52f
  40e4c2:	aam    0xbf
  40e4c4:	mov    al,0xed
  40e4c6:	xchg   esp,eax
  40e4c7:	loope  0x40e4bb
  40e4c9:	mov    ebx,0xaf1ab955
  40e4ce:	aam    0x47
  40e4d0:	add    BYTE PTR [eax],al
  40e4d2:	sbb    esp,DWORD PTR [ebp-0x9ddb805]
  40e4d8:	jns    0x40e479
  40e4da:	dec    ebp
  40e4db:	mov    ebx,0x83ad7dc9
  40e4e0:	inc    ebp
  40e4e1:	mov    dh,ch
  40e4e3:	daa    
  40e4e4:	inc    esp
  40e4e5:	arpl   dx,dx
  40e4e7:	jmp    0x473fb30b
  40e4ec:	mov    ebp,edi
  40e4ee:	push   edi
  40e4ef:	(bad)  
  40e4f1:	in     al,0xb
  40e4f3:	jae    0x40e50e
  40e4f5:	shl    BYTE PTR [ecx-0x2618dd02],0x40
  40e4fc:	xchg   edi,eax
  40e4fe:	hlt    
  40e4ff:	stc    
  40e500:	push   edx
  40e501:	mov    WORD PTR [eax+eiz*2],cs
  40e504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e505:	push   ss
  40e506:	sbb    edi,esi
  40e508:	dec    ecx
  40e509:	lods   al,BYTE PTR ds:[esi]
  40e50a:	lea    edx,[eax+0x33]
  40e50d:	iret   
  40e50e:	sub    BYTE PTR [ebx],ch
  40e510:	push   ecx
  40e511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e512:	ss out dx,eax
  40e514:	pusha  
  40e515:	adc    dl,dh
  40e517:	loopne 0x40e51d
  40e519:	pop    ss
  40e51a:	jp     0x40e4d7
  40e51c:	hlt    
  40e51d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e51e:	sbb    BYTE PTR [eax-0x38986d13],dl
  40e524:	jmp    DWORD PTR [edx]
  40e526:	aas    
  40e527:	and    dh,ah
  40e529:	aaa    
  40e52a:	add    eax,0xb59ce07b
  40e52f:	adc    al,0x48
  40e531:	xchg   ebp,eax
  40e532:	mov    ecx,0xb229d324
  40e537:	jbe    0x40e575
  40e539:	mov    edi,0x10375e3d
  40e53e:	rol    BYTE PTR [eax+0x21942928],1
  40e544:	fstp   QWORD PTR [eax+0x2b]
  40e547:	fbstp  TBYTE PTR [ebx]
  40e549:	mov    ds:0x5f534ae5,al
  40e54e:	stc    
  40e54f:	int    0x89
  40e551:	dec    eax
  40e552:	mov    BYTE PTR [ecx+ecx*2+0x25],cl
  40e556:	mov    bl,0x44
  40e558:	retf   
  40e559:	mov    ebx,0x64c3c5a2
  40e55e:	sub    edx,DWORD PTR [edi]
  40e560:	call   0x6391:0x1f23521e
  40e567:	loop   0x40e51e
  40e569:	push   edi
  40e56a:	lock (bad) 
  40e56c:	retf   
  40e56d:	sub    DWORD PTR [ebx-0x1cc66be7],ecx
  40e573:	ficom  DWORD PTR [ebx+edx*4]
  40e576:	mov    DWORD PTR [ebp+0x55],0x13df051b
  40e57d:	dec    esp
  40e57e:	xor    BYTE PTR [eax],0x9b
  40e581:	pop    ds
  40e582:	pop    esi
  40e583:	xchg   ecx,eax
  40e584:	ret    0x4fd
  40e587:	jp     0x40e563
  40e589:	xor    eax,0x31846201
  40e58e:	cli    
  40e58f:	repnz pop edi
  40e591:	call   0xa6e384fa
  40e596:	test   al,0x2a
  40e598:	sbb    dh,BYTE PTR [ecx-0x62]
  40e59b:	xor    DWORD PTR [eax-0x29eb621d],0xffffff8f
  40e5a2:	jge    0x40e5ff
  40e5a4:	es jmp 0x40e5dd
  40e5a7:	dec    esp
  40e5a8:	bound  ebp,QWORD PTR [edi-0x65]
  40e5ab:	sub    ebx,edx
  40e5ad:	xchg   DWORD PTR [ebx-0x4d6f3d9],ebx
  40e5b3:	(bad)  
  40e5b4:	sbb    DWORD PTR [eax],ebp
  40e5b6:	xlat   BYTE PTR ds:[ebx]
  40e5b7:	in     al,dx
  40e5b8:	rcr    ah,1
  40e5ba:	test   DWORD PTR [ebx+0x7131669c],ecx
  40e5c0:	out    dx,al
  40e5c1:	adc    DWORD PTR [eax-0x3c9f8746],0x8a4d2b94
  40e5cb:	test   DWORD PTR [edi+0x3ca72716],ebx
  40e5d1:	out    0x8a,eax
  40e5d3:	push   es
  40e5d4:	mov    ebp,DWORD PTR [esi+0x7e]
  40e5d7:	pop    esp
  40e5d8:	mov    ebx,0x7b66f520
  40e5dd:	jns    0x40e656
  40e5df:	or     BYTE PTR [esi+0x531767e6],bl
  40e5e5:	and    dl,dl
  40e5e7:	loope  0x40e653
  40e5e9:	xchg   esp,eax
  40e5ea:	retf   
  40e5eb:	fwait
  40e5ec:	adc    al,0x37
  40e5ee:	xor    BYTE PTR [ebp-0x30],bh
  40e5f1:	(bad)  
  40e5f2:	push   eax
  40e5f3:	or     BYTE PTR [eax-0x51c1820c],al
  40e5f9:	lock jns 0x40e5a5
  40e5fc:	ja     0x40e670
  40e5fe:	and    bl,BYTE PTR [edx+0x5e1de5cc]
  40e604:	enter  0xf702,0x8b
  40e608:	push   es
  40e609:	cdq    
  40e60a:	push   esi
  40e60b:	fld    QWORD PTR [edx+ebp*4-0x62]
  40e60f:	jmp    0x40e67f
  40e611:	xchg   BYTE PTR [eax+edx*1],ch
  40e614:	inc    edi
  40e615:	je     0x40e630
  40e617:	xchg   edi,eax
  40e618:	dec    ebx
  40e619:	test   eax,0x73b2ff80
  40e61e:	std    
  40e61f:	jle    0x40e5c2
  40e621:	(bad)  
  40e622:	repnz std 
  40e624:	loop   0x40e5ac
  40e626:	mov    esp,0xf36e2992
  40e62b:	lods   eax,DWORD PTR ds:[esi]
  40e62c:	xor    eax,0xec3c7eb3
  40e631:	and    BYTE PTR [ebx],bl
  40e633:	fisub  WORD PTR ds:[ecx+0xc6e6ec5]
  40e63a:	add    ecx,DWORD PTR [edi]
  40e63c:	push   ebx
  40e63d:	out    dx,al
  40e63e:	mov    esi,0x51168dca
  40e643:	mov    eax,ds:0xe92148a2
  40e648:	mov    ebx,0xf54b62c
  40e64d:	mov    ecx,es
  40e64f:	or     dl,bh
  40e651:	outs   dx,BYTE PTR ds:[esi]
  40e652:	mov    ecx,0x30617d67
  40e657:	movntq QWORD PTR [edx-0x34],mm2
  40e65b:	(bad)  
  40e65c:	adc    al,0x16
  40e65e:	ds iret 
  40e660:	mov    al,0xee
  40e662:	or     edx,DWORD PTR [ebx+0x3e]
  40e665:	mov    eax,ds:0x44979afc
  40e66a:	ds (bad) 
  40e66c:	lock adc DWORD PTR [ecx],0x24
  40e670:	mov    ax,0x5cf5
  40e674:	xor    DWORD PTR [ebx+0x102f584c],edi
  40e67a:	inc    edx
  40e67b:	mov    cl,0x2b
  40e67d:	cmp    ecx,DWORD PTR [edi-0x797959ba]
  40e683:	xlat   BYTE PTR ds:[ebx]
  40e684:	push   ecx
  40e685:	or     BYTE PTR [ecx],bl
  40e687:	xlat   BYTE PTR ds:[ebx]
  40e688:	push   edi
  40e689:	shl    edi,cl
  40e68b:	fsubr  QWORD PTR [ebp-0x6bc171ff]
  40e691:	add    dh,0xaa
  40e694:	hlt    
  40e695:	ret    0xc2e6
  40e698:	test   eax,0xbb769464
  40e69d:	or     DWORD PTR [ebp-0x32],edi
  40e6a0:	push   0x3331d8fc
  40e6a5:	inc    ecx
  40e6a6:	je     0x40e65d
  40e6a8:	sti    
  40e6a9:	add    al,0xf4
  40e6ab:	inc    esi
  40e6ac:	clc    
  40e6ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ae:	fstp   DWORD PTR [eax]
  40e6b0:	mov    ch,0x79
  40e6b2:	push   0x57
  40e6b4:	jae    0x40e64f
  40e6b6:	call   0x7e5:0x6f965e66
  40e6bd:	sub    dh,BYTE PTR [eax+0x3bb14f11]
  40e6c3:	(bad)  
  40e6c4:	push   ds
  40e6c5:	add    dl,0x6b
  40e6c8:	cmc    
  40e6c9:	inc    ecx
  40e6ca:	sub    al,0x46
  40e6cc:	and    DWORD PTR [ecx-0x7f],edi
  40e6cf:	mov    bl,BYTE PTR [edx-0x2c]
  40e6d2:	imul   ebp,DWORD PTR [eax-0x298858e6],0xc3df06f1
  40e6dc:	call   0xdd15:0xc5aeefa7
  40e6e3:	xor    DWORD PTR [ebx],esi
  40e6e5:	push   esi
  40e6e6:	pop    ss
  40e6e7:	inc    edx
  40e6e8:	mov    ?,ecx
  40e6ea:	push   es
  40e6eb:	lods   al,BYTE PTR ds:[esi]
  40e6ec:	jmp    0x18d54704
  40e6f1:	scas   eax,DWORD PTR es:[edi]
  40e6f2:	xor    BYTE PTR [ecx+0x1a],0x97
  40e6f6:	and    edx,DWORD PTR ds:0x688c3b56
  40e6fc:	mov    fs,ebp
  40e6fe:	sub    dh,ah
  40e700:	loopne 0x40e696
  40e702:	inc    esi
  40e703:	(bad)  
  40e704:	xor    esp,edx
  40e706:	add    al,0x89
  40e708:	lods   al,BYTE PTR ds:[esi]
  40e709:	ins    BYTE PTR es:[edi],dx
  40e70a:	outs   dx,BYTE PTR ds:[esi]
  40e70b:	pusha  
  40e70c:	stos   BYTE PTR es:[edi],al
  40e70d:	jbe    0x40e71e
  40e70f:	xchg   esi,eax
  40e710:	mov    eax,0x5e49fe79
  40e715:	int3   
  40e716:	inc    ecx
  40e717:	(bad)  
  40e718:	imul   ecx,ebx,0xb00b6508
  40e71e:	(bad)  
  40e71f:	push   ss
  40e720:	outs   dx,DWORD PTR ds:[esi]
  40e721:	les    esp,FWORD PTR [ecx+0x13]
  40e724:	xchg   ebx,eax
  40e725:	sbb    esi,esp
  40e727:	call   0xd058db8f
  40e72c:	cmc    
  40e72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e72e:	jne    0x40e74f
  40e730:	push   edi
  40e731:	cwde   
  40e732:	cmp    eax,0x435afec8
  40e737:	in     eax,0x59
  40e739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e73a:	cwde   
  40e73b:	fcmovnbe st,st(3)
  40e73d:	lock retf 
  40e73f:	or     dh,ah
  40e741:	xor    edi,0xffffff84
  40e744:	popa   
  40e745:	outs   dx,DWORD PTR ds:[esi]
  40e746:	aas    
  40e747:	jne    0x40e6fc
  40e749:	mov    fs,WORD PTR ds:0x778cb048
  40e74f:	cmp    cl,ah
  40e751:	in     eax,0x97
  40e753:	push   0xe7471820
  40e758:	pop    ebx
  40e759:	popf   
  40e75a:	inc    esp
  40e75b:	ret    
  40e75c:	pop    esi
  40e75d:	jbe    0x40e71c
  40e75f:	es ins DWORD PTR es:[edi],dx
  40e761:	push   eax
  40e762:	and    eax,0x309b6a50
  40e767:	push   ebp
  40e768:	mov    ebp,0x1353beb4
  40e76d:	xchg   ebx,eax
  40e76e:	and    ebx,ebx
  40e770:	stos   DWORD PTR es:[edi],eax
  40e771:	inc    ecx
  40e772:	iret   
  40e773:	sub    eax,0xe3530a7f
  40e778:	and    BYTE PTR [ecx+0x1f],dl
  40e77b:	lea    ebp,[ebx+0x7e]
  40e77e:	hlt    
  40e77f:	and    DWORD PTR [eax+0x74],ecx
  40e782:	mov    bh,0xa0
  40e784:	push   0xf1a4f96a
  40e789:	jg     0x40e779
  40e78b:	aaa    
  40e78c:	jb     0x40e72e
  40e78e:	push   ds
  40e78f:	not    BYTE PTR [eax+0x5270eb8f]
  40e795:	mov    dh,0x4c
  40e797:	cmp    al,0x3a
  40e799:	test   eax,0xae93939c
  40e79e:	test   DWORD PTR [edi],0x603ab2c9
  40e7a4:	cs xor al,0x78
  40e7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7a8:	adc    dh,BYTE PTR [edx]
  40e7aa:	cmc    
  40e7ab:	retf   
  40e7ac:	loopne 0x40e82b
  40e7ae:	sub    al,0x22
  40e7b0:	mov    ebp,cs
  40e7b2:	iret   
  40e7b3:	scas   eax,DWORD PTR es:[edi]
  40e7b4:	push   ebp
  40e7b5:	call   0xd1e54ff0
  40e7ba:	xor    ah,BYTE PTR [ebx-0x2e7bde41]
  40e7c0:	add    ebx,DWORD PTR [edi-0xe]
  40e7c3:	fadd   DWORD PTR [esi+esi*1-0x2a]
  40e7c7:	shl    BYTE PTR [ecx],0x72
  40e7ca:	ds in  eax,0x5d
  40e7cd:	inc    esi
  40e7ce:	or     eax,0x49a4272c
  40e7d3:	mov    al,0x4f
  40e7d5:	sbb    esp,DWORD PTR [esi-0x75]
  40e7d8:	in     eax,0xd5
  40e7da:	retf   0x5e35
  40e7dd:	mov    ds:0xb265d596,eax
  40e7e2:	and    al,0x61
  40e7e4:	xchg   esi,eax
  40e7e5:	sub    al,0xd3
  40e7e7:	inc    ebp
  40e7e8:	jmp    0x5d1e:0xb4b360d7
  40e7ef:	jecxz  0x40e79e
  40e7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f2:	call   0xa98f:0x5d3318fe
  40e7f9:	mov    cl,BYTE PTR [eax+0x1e]
  40e7fc:	inc    eax
  40e7fd:	fisttp WORD PTR [esi]
  40e7ff:	mov    BYTE PTR [edx-0x79],ah
  40e802:	popf   
  40e803:	sub    BYTE PTR [esi+eiz*8+0x7a],bl
  40e807:	fcomp  DWORD PTR ds:0x25c1580a
  40e80d:	(bad)  
  40e80e:	sub    al,0xe9
  40e810:	fsubr  st,st(3)
  40e812:	not    DWORD PTR [ebx+0x59]
  40e815:	arpl   ax,dx
  40e817:	xchg   esp,eax
  40e818:	adc    ebp,edi
  40e81a:	jg     0x40e886
  40e81c:	fisubr WORD PTR [esi-0x5001f94f]
  40e822:	jl     0x40e86a
  40e824:	(bad)  
  40e825:	push   esi
  40e826:	and    eax,DWORD PTR [esi+0x3d]
  40e829:	dec    esp
  40e82a:	jecxz  0x40e7fe
  40e82c:	(bad)  
  40e82d:	fmul   QWORD PTR [ebx+0x79bc53a7]
  40e833:	test   esp,ecx
  40e835:	outs   dx,DWORD PTR ds:[esi]
  40e836:	into   
  40e837:	dec    ebx
  40e838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e839:	adc    esp,0x1b
  40e83c:	xchg   edi,eax
  40e83d:	sub    al,0x53
  40e840:	retf   0x81c
  40e843:	jnp    0x40e873
  40e845:	cmp    BYTE PTR [edi],dh
  40e847:	ja     0x40e8b2
  40e849:	push   es
  40e84a:	rol    DWORD PTR [ebp-0x73],cl
  40e84d:	ins    BYTE PTR es:[edi],dx
  40e84e:	sbb    DWORD PTR [edi-0x1],ecx
  40e851:	aas    
  40e852:	adc    eax,0x94631b3b
  40e857:	xor    DWORD PTR [ecx],esi
  40e859:	inc    ebp
  40e85a:	sub    al,0x90
  40e85c:	mov    esi,0xaf327dba
  40e862:	mov    dh,0xfc
  40e864:	fst    QWORD PTR [edx+0x77528d14]
  40e86a:	push   ebp
  40e86b:	dec    eax
  40e86c:	in     eax,dx
  40e86d:	idiv   BYTE PTR [edi+0x6b]
  40e870:	mov    dl,0x60
  40e872:	in     al,0x7e
  40e874:	in     al,0x80
  40e876:	pop    ebx
  40e877:	out    0xc,al
  40e879:	pop    ebp
  40e87a:	std    
  40e87b:	repnz adc bl,BYTE PTR [esp+edx*8+0x57]
  40e880:	bswap  edi
  40e882:	xchg   ebp,eax
  40e883:	jle    0x40e8b2
  40e885:	mov    al,ds:0xce3ee39e
  40e88a:	xor    eax,0x7e99810b
  40e88f:	sub    al,0xb1
  40e891:	popa   
  40e892:	push   es
  40e893:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e895:	mov    ebp,0xe0fc901d
  40e89a:	mov    eax,0x82e608d
  40e89f:	sub    eax,ecx
  40e8a1:	sbb    eax,0x6b07c410
  40e8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8a7:	sti    
  40e8a8:	sbb    DWORD PTR ds:0xb61f11b3,edi
  40e8ae:	retf   
  40e8af:	push   ss
  40e8b0:	loop   0x40e877
  40e8b2:	stc    
  40e8b3:	add    ah,cl
  40e8b5:	pop    edi
  40e8b6:	mov    ebx,0x6c31b7ba
  40e8bb:	inc    esi
  40e8bc:	lods   eax,DWORD PTR ds:[esi]
  40e8bd:	je     0x40e8ac
  40e8bf:	mov    edx,0x362151e1
  40e8c4:	fs stc 
  40e8c6:	bnd ret 
  40e8c8:	int    0x92
  40e8ca:	adc    al,0x8f
  40e8cc:	xchg   edi,eax
  40e8cd:	mov    ecx,DWORD PTR [edx]
  40e8cf:	sub    cl,al
  40e8d1:	stc    
  40e8d2:	xlat   BYTE PTR ds:[ebx]
  40e8d3:	stos   BYTE PTR es:[edi],al
  40e8d4:	dec    edi
  40e8d5:	and    DWORD PTR [ebx-0x67],ecx
  40e8d8:	shl    BYTE PTR [ecx],1
  40e8da:	outs   dx,BYTE PTR ds:[esi]
  40e8db:	cmp    BYTE PTR [ecx+0x5f40b62e],ah
  40e8e1:	loope  0x40e902
  40e8e3:	pop    esi
  40e8e4:	out    0x55,al
  40e8e6:	aas    
  40e8e7:	xchg   ebp,eax
  40e8e8:	pop    esp
  40e8e9:	jae    0x40e8bf
  40e8eb:	mov    BYTE PTR [esi+ecx*8],ch
  40e8ee:	pop    ecx
  40e8ef:	or     eax,0x6969ca01
  40e8f4:	or     dl,BYTE PTR [eax]
  40e8f6:	add    eax,0x8856ed2d
  40e8fb:	scas   eax,DWORD PTR es:[edi]
  40e8fc:	icebp  
  40e8fd:	(bad)  
  40e8fe:	adc    eax,edi
  40e900:	push   ebx
  40e901:	retf   
  40e902:	ins    DWORD PTR es:[edi],dx
  40e903:	js     0x40e91a
  40e905:	or     eax,0xa453cf85
  40e90a:	stos   DWORD PTR es:[edi],eax
  40e90b:	retf   
  40e90c:	in     al,dx
  40e90d:	fisttp WORD PTR [esi]
  40e90f:	jmp    0xd975:0xadb81903
  40e916:	mov    WORD PTR [eax-0x2143fde4],ss
  40e91c:	xor    al,0x4e
  40e91e:	inc    edi
  40e91f:	jle    0x40e90b
  40e921:	(bad)  
  40e922:	inc    esp
  40e923:	je     0x40e933
  40e925:	push   ds
  40e926:	arpl   WORD PTR [esi+esi*8],bx
  40e929:	rcl    ch,cl
  40e92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e92c:	fist   DWORD PTR [ebx+0x1473481c]
  40e932:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e934:	les    esi,FWORD PTR [edi-0x198c27cf]
  40e93a:	ds pop ebp
  40e93c:	sbb    al,0x70
  40e93e:	jbe    0x40e917
  40e940:	mov    cl,0x7c
  40e942:	mov    bl,BYTE PTR [esp+esi*1+0x7063d844]
  40e949:	sbb    ecx,ebp
  40e94b:	and    al,0xd7
  40e94d:	call   0x37d68b3d
  40e952:	shl    BYTE PTR [edx-0x6b7584cb],0x74
  40e959:	sbb    al,0x7e
  40e95b:	adc    eax,0xce2f2d87
  40e960:	rcl    dl,1
  40e962:	ss cdq 
  40e964:	or     bl,BYTE PTR [edx-0x6baab277]
  40e96a:	test   DWORD PTR [esp+esi*2+0x1],esp
  40e96e:	xor    edi,DWORD PTR [edi-0x1b1fc0c4]
  40e974:	sbb    eax,0xdb0e73b3
  40e979:	retf   
  40e97a:	mov    BYTE PTR [esi-0x3f5fd361],0xe4
  40e981:	jmp    0x40e94b
  40e983:	pop    ebx
  40e984:	icebp  
  40e985:	dec    eax
  40e986:	std    
  40e987:	hlt    
  40e988:	pop    ebx
  40e989:	sub    DWORD PTR [esi],esi
  40e98b:	(bad)  
  40e98c:	aad    0xe6
  40e98e:	and    al,0x25
  40e990:	mov    ch,0x87
  40e992:	mov    ah,0x81
  40e994:	and    dl,BYTE PTR cs:[edi]
  40e997:	ret    0x3d2f
  40e99a:	dec    eax
  40e99b:	add    al,0x81
  40e99d:	sbb    cl,BYTE PTR [ecx-0x48]
  40e9a0:	(bad)  
  40e9a2:	test   BYTE PTR [eax+0x2bda193b],dl
  40e9a8:	(bad)  
  40e9a9:	sti    
  40e9aa:	sub    DWORD PTR [edx+0x44e75d72],esp
  40e9b0:	icebp  
  40e9b1:	(bad)  [ebx+0x3]
  40e9b4:	mov    ds:0xc26ee1df,eax
  40e9b9:	loopne 0x40e9a8
  40e9bb:	mov    ch,0x85
  40e9bd:	mov    edi,0x9e130b11
  40e9c2:	cs mov ch,0xda
  40e9c5:	mov    ch,0xaa
  40e9c7:	std    
  40e9c8:	call   0x8be4:0xd214cf17
  40e9cf:	mov    ds:0xef5a5c04,eax
  40e9d4:	xchg   BYTE PTR [ebp+0x1],dh
  40e9d7:	push   edi
  40e9d8:	leave  
  40e9d9:	fisttp WORD PTR [esp+ecx*1-0x49]
  40e9dd:	sar    BYTE PTR [ebx-0x6b],0x74
  40e9e1:	mov    dl,BYTE PTR [ebx+0x8973a2b]
  40e9e7:	sti    
  40e9e8:	sub    BYTE PTR [ecx+ecx*1+0x3abf7c27],bh
  40e9ef:	mov    eax,0xd45b7af7
  40e9f4:	pop    es
  40e9f5:	enter  0x90ab,0xd6
  40e9f9:	icebp  
  40e9fa:	add    esp,ebx
  40e9fc:	mov    eax,ds:0x8d161245
  40ea01:	push   edi
  40ea02:	pop    ds
  40ea03:	cli    
  40ea04:	push   ecx
  40ea05:	push   0x77
  40ea07:	fld    QWORD PTR [eax+0x49]
  40ea0a:	add    eax,0x70f95ba0
  40ea0f:	add    al,0x93
  40ea11:	je     0x40ea3a
  40ea13:	jo     0x40ea94
  40ea15:	sbb    eax,0x72472093
  40ea1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea1b:	xchg   al,dh
  40ea1d:	or     DWORD PTR [esi+0x2d],ebx
  40ea20:	aam    0x81
  40ea22:	iret   
  40ea23:	jo     0x40ea41
  40ea25:	sub    BYTE PTR [edi],dl
  40ea27:	inc    eax
  40ea28:	mov    ebp,0x27cacce7
  40ea2d:	repnz mov BYTE PTR ds:0xb8ecc647,bh
  40ea34:	ja     0x40e9ff
  40ea36:	xchg   BYTE PTR [esi-0xecbb5f2],cl
  40ea3c:	in     al,dx
  40ea3d:	xor    eax,0x505ed1b2
  40ea42:	xchg   edi,eax
  40ea43:	ja     0x40ea0a
  40ea45:	add    esp,esp
  40ea47:	(bad)
  40ea4a:	dec    ebp
  40ea4b:	mov    ecx,0x3f813535
  40ea50:	sbb    DWORD PTR [edx],esi
  40ea52:	mov    WORD PTR [ecx-0x3f],ss
  40ea55:	adc    bh,al
  40ea57:	pop    edx
  40ea58:	xchg   edx,eax
  40ea59:	popa   
  40ea5a:	inc    edx
  40ea5b:	test   al,0x20
  40ea5d:	adc    DWORD PTR [edx-0x3b],edx
  40ea60:	rcl    DWORD PTR [ecx-0x47],cl
  40ea63:	es int3 
  40ea65:	test   DWORD PTR [edx+0x1ff39c15],0xe8f18473
  40ea6f:	addr16 or dh,bl
  40ea72:	jmp    0x40ea4c
  40ea74:	lods   al,BYTE PTR ds:[esi]
  40ea75:	sahf   
  40ea76:	xlat   BYTE PTR ds:[ebx]
  40ea77:	push   0xb0653428
  40ea7c:	mov    bl,0xa8
  40ea7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea7f:	(bad)  
  40ea80:	dec    esp
  40ea81:	loop   0x40ea68
  40ea83:	clc    
  40ea84:	imul   edx,DWORD PTR [edi+0x73],0x2d7ad315
  40ea8b:	or     eax,0x2f278e15
  40ea90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea91:	xchg   ebp,eax
  40ea92:	pop    edi
  40ea93:	nop
  40ea94:	cmp    ah,al
  40ea96:	out    0x71,al
  40ea98:	sbb    DWORD PTR [ebx+0x46],0x488325be
  40ea9f:	out    0x5e,eax
  40eaa1:	pushf  
  40eaa2:	jp     0x40ea91
  40eaa4:	xlat   BYTE PTR ds:[ebx]
  40eaa5:	dec    edx
  40eaa6:	add    eax,0x22023a40
  40eaab:	xchg   DWORD PTR [ebx+0x57],esi
  40eaae:	pop    esp
  40eaaf:	es out 0x23,al
  40eab2:	fwait
  40eab3:	dec    ecx
  40eab4:	inc    ebx
  40eab5:	imul   esp,ebp,0xffffffe4
  40eab8:	cli    
  40eab9:	inc    eax
  40eaba:	inc    edi
  40eabb:	cmp    DWORD PTR [esi],esi
  40eabd:	jns    0x40eadd
  40eabf:	jb     0x40eadd
  40eac1:	loope  0x40eaec
  40eac3:	mov    ecx,0x9ebc7b82
  40eac8:	cmp    DWORD PTR [ebp+0x18],esi
  40eacb:	push   ebx
  40eacc:	fsubr  QWORD PTR [edi-0x364142d]
  40ead2:	in     eax,0x9a
  40ead4:	jp     0x40eb4e
  40ead6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead7:	add    bh,BYTE PTR [edi]
  40ead9:	rol    BYTE PTR [ecx],cl
  40eadb:	xlat   BYTE PTR ds:[ebx]
  40eadc:	outs   dx,DWORD PTR ds:[esi]
  40eadd:	add    eax,0x5557b3fd
  40eae2:	cmp    eax,eax
  40eae4:	or     eax,0xa05dfdd6
  40eae9:	ins    DWORD PTR es:[edi],dx
  40eaea:	xor    cl,BYTE PTR [ecx]
  40eaec:	mov    ds:0xee59da1a,al
  40eaf1:	scas   al,BYTE PTR es:[edi]
  40eaf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaf3:	jo     0x40eb6c
  40eaf5:	call   0x53c2:0xdcc86736
  40eafc:	(bad)  
  40eafd:	loop   0x40eab7
  40eaff:	nop
  40eb00:	jle    0x40eb64
  40eb02:	pop    edi
  40eb03:	jmp    0x41fdf687
  40eb08:	icebp  
  40eb09:	int3   
  40eb0a:	popf   
  40eb0b:	push   edx
  40eb0c:	bound  ebx,QWORD PTR [edi]
  40eb0e:	cmp    eax,0x90f7f8fc
  40eb13:	retf   0xe4ad
  40eb16:	mov    bl,0x93
  40eb18:	add    BYTE PTR [eax+0x42d63976],ah
  40eb1e:	fldl2t 
  40eb20:	jmp    0x33c6928e
  40eb25:	adc    ebp,esi
  40eb27:	arpl   WORD PTR ds:0xd59f5325,sp
  40eb2d:	loopne 0x40eba8
  40eb2f:	jnp    0x40eb81
  40eb31:	sub    eax,0x247093dc
  40eb36:	out    dx,al
  40eb37:	adc    DWORD PTR [edi+0x8018f81],0xffffffad
  40eb3e:	cmp    DWORD PTR [ecx+0xe],eax
  40eb41:	xchg   edi,eax
  40eb43:	inc    edi
  40eb44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb45:	test   BYTE PTR [esi],dl
  40eb47:	ror    BYTE PTR [ecx+edx*2+0x1bdc065f],cl
  40eb4e:	jle    0x40eaf9
  40eb50:	mov    esp,0xfa64fcba
  40eb55:	je     0x40eaf7
  40eb57:	mov    dl,0x3a
  40eb59:	int    0x61
  40eb5b:	jmp    DWORD PTR [ecx+0x7]
  40eb5e:	aam    0x19
  40eb60:	fisttp WORD PTR ds:0x80f08270
  40eb66:	mov    cl,BYTE PTR [ebx-0x40]
  40eb69:	cmp    dh,BYTE PTR [ebx-0x547499b8]
  40eb6f:	push   esi
  40eb70:	dec    ebp
  40eb71:	clc    
  40eb72:	cmp    DWORD PTR [ebx],edx
  40eb74:	or     edx,0x1562d25a
  40eb7a:	pusha  
  40eb7b:	(bad)  [ecx-0x748711c5]
  40eb81:	mov    BYTE PTR [ebx+0x1f],dh
  40eb84:	(bad)
  40eb88:	mov    ecx,0xd641ccd
  40eb8d:	inc    esp
  40eb8e:	lea    esi,[edx-0x3093ab7f]
  40eb94:	out    0xac,al
  40eb96:	lds    ebp,FWORD PTR [eax+0x658bf207]
  40eb9c:	addr16 xor ebp,0x2f
  40eba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba1:	cs ret 
  40eba3:	xchg   esp,eax
  40eba4:	das    
  40eba5:	xchg   esi,eax
  40eba6:	xor    ebx,edx
  40eba8:	into   
  40eba9:	sub    bh,BYTE PTR [ebx]
  40ebab:	sahf   
  40ebac:	fs mov al,0xcb
  40ebaf:	fsubp  st(4),st
  40ebb1:	xchg   ebx,eax
  40ebb2:	or     al,ch
  40ebb4:	stos   DWORD PTR es:[edi],eax
  40ebb5:	psrlw  mm2,QWORD PTR [ebx-0x6049a3df]
  40ebbc:	aam    0x8c
  40ebbe:	fmulp  st(7),st
  40ebc0:	dec    ecx
  40ebc1:	or     ecx,edi
  40ebc3:	sub    esi,DWORD PTR [edi+esi*4+0x6c8109a9]
  40ebca:	sbb    ah,BYTE PTR [edi+0x1305e8d8]
  40ebd0:	push   esp
  40ebd1:	pop    edx
  40ebd2:	xchg   DWORD PTR [esi+0xa],edi
  40ebd5:	pop    ecx
  40ebd6:	mov    eax,0x752fca2c
  40ebdb:	in     eax,0x6f
  40ebdd:	dec    esi
  40ebde:	in     al,dx
  40ebdf:	dec    ebx
  40ebe0:	cmp    al,0x5a
  40ebe2:	push   eax
  40ebe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe4:	mov    ecx,0xc7060bbb
  40ebe9:	jae    0x40ec3f
  40ebeb:	mov    ebp,0x710fae68
  40ebf0:	sub    ch,BYTE PTR [eax+ebp*4-0x6c96481]
  40ebf7:	and    ecx,DWORD PTR [ecx+0x6a999e48]
  40ebfd:	or     edx,DWORD PTR [ecx-0x79]
  40ec00:	sbb    BYTE PTR [edx-0x76950049],ah
  40ec06:	pop    esi
  40ec07:	cli    
  40ec08:	(bad)  
  40ec0a:	pop    ss
  40ec0b:	sub    esp,DWORD PTR [ebx+0x72b81930]
  40ec11:	or     eax,0x4a8b13c1
  40ec16:	push   0x56
  40ec18:	cmp    DWORD PTR [ecx+0x56],ecx
  40ec1b:	push   ecx
  40ec1c:	sub    bl,BYTE PTR [esi+0x48de32d4]
  40ec22:	mov    bl,0x90
  40ec24:	cs test al,0xed
  40ec27:	(bad)  
  40ec28:	sub    eax,0x5427da89
  40ec2d:	(bad)  
  40ec2e:	rcl    BYTE PTR fs:[ebp+0x31],1
  40ec32:	mov    eax,ds:0x1258f1e6
  40ec37:	les    ecx,FWORD PTR [esi-0x7e12a0ed]
  40ec3d:	rcl    BYTE PTR [esi+0x3d],cl
  40ec40:	mov    dh,0x5
  40ec42:	dec    eax
  40ec43:	and    bh,BYTE PTR [edx+0x46e44f43]
  40ec49:	outs   dx,DWORD PTR ds:[esi]
  40ec4a:	pusha  
  40ec4b:	mov    WORD PTR ds:0x4b791149,?
  40ec51:	inc    ecx
  40ec52:	push   cs
  40ec53:	mov    DWORD PTR [eax],esp
  40ec55:	xor    esi,esi
  40ec57:	cmp    BYTE PTR ds:[ebx-0x58],ah
  40ec5b:	imul   ebp,ecx,0x760766da
  40ec61:	mov    eax,0x9bdc0d7b
  40ec66:	mov    al,0x2b
  40ec68:	int    0x0
  40ec6a:	int    0x24
  40ec6c:	jl     0x40ecd1
  40ec6e:	leave  
  40ec6f:	jecxz  0x40ec7c
  40ec71:	cmp    esp,DWORD PTR [edi+0x34]
  40ec74:	or     bh,BYTE PTR [esi+0x5d]
  40ec77:	xchg   edx,eax
  40ec78:	adc    ebx,DWORD PTR [edi+eiz*1+0x5e]
  40ec7c:	xchg   edi,eax
  40ec7d:	xchg   edi,eax
  40ec7e:	ret    
  40ec7f:	mov    cl,0xe4
  40ec81:	les    edi,FWORD PTR [edx-0x24918179]
  40ec87:	jge    0x40ecaf
  40ec89:	mov    ds:0xc575bc9c,al
  40ec8e:	out    0xf5,al
  40ec90:	shl    BYTE PTR [ecx-0x31],1
  40ec93:	xor    BYTE PTR ds:0xe2b7a033,dl
  40ec99:	fistp  WORD PTR [edi+0x5c]
  40ec9c:	rcl    BYTE PTR [esi+0x2c36cd75],cl
  40eca2:	js     0x40ec8f
  40eca4:	out    0x91,eax
  40eca6:	pushf  
  40eca7:	xor    BYTE PTR [edx],bl
  40eca9:	sub    DWORD PTR [ebx+0xf874b76],0x3d
  40ecb0:	fist   WORD PTR [ecx+0x6e]
  40ecb3:	cmp    dh,BYTE PTR ds:0xd467ac7b
  40ecb9:	dec    edx
  40ecba:	repz add al,0x71
  40ecbd:	ins    BYTE PTR es:[edi],dx
  40ecbe:	ror    DWORD PTR [edi],cl
  40ecc0:	les    eax,FWORD PTR [edx]
  40ecc2:	sti    
  40ecc3:	test   eax,0xeed2453a
  40ecc8:	sub    al,0x79
  40ecca:	hlt    
  40eccb:	sub    eax,0xa5669362
  40ecd0:	cwde   
  40ecd1:	popa   
  40ecd2:	retf   
  40ecd3:	(bad)  
  40ecd4:	jbe    0x40ec9f
  40ecd6:	fstp   DWORD PTR [eax+0x7b]
  40ecd9:	add    al,0xf8
  40ecdb:	xlat   BYTE PTR ds:[ebx]
  40ecdc:	test   al,0xa1
  40ecde:	sub    esp,edx
  40ece0:	into   
  40ece1:	and    eax,0x5c33557d
  40ece6:	push   edx
  40ece7:	retf   0x841a
  40ecea:	std    
  40eceb:	or     BYTE PTR [ebx+0x3290f2ee],0x97
  40ecf2:	imul   eax,DWORD PTR [esi-0x42f21c7e],0x6e
  40ecf9:	adc    esp,DWORD PTR [ecx+0x62a2af32]
  40ecff:	aam    0xbc
  40ed01:	scas   al,BYTE PTR es:[edi]
  40ed02:	inc    esp
  40ed03:	ss clc 
  40ed05:	(bad)  
  40ed06:	fadd   DWORD PTR [edi]
  40ed08:	cmp    BYTE PTR [edx],cl
  40ed0a:	cmp    BYTE PTR [edi],ah
  40ed0c:	mov    edx,0xad125ff4
  40ed11:	add    ah,BYTE PTR [edx+0x7c]
  40ed14:	jmp    0xfb6:0x313a
  40ed1a:	push   0x5dc30534
  40ed1f:	sti    
  40ed20:	mov    cl,0x83
  40ed22:	mov    DWORD PTR [esi-0x577ce970],eax
  40ed28:	dec    ecx
  40ed29:	mov    dh,0x31
  40ed2b:	pop    ss
  40ed2c:	lock loopne 0x40ecce
  40ed2f:	(bad)  
  40ed30:	pop    ss
  40ed31:	ja     0x40ed51
  40ed33:	sbb    eax,0xf1ad5920
  40ed38:	adc    BYTE PTR [ebp+0x5c],cl
  40ed3b:	sub    BYTE PTR [esi+0xa0b8f8a],bl
  40ed41:	inc    eax
  40ed42:	(bad)  
  40ed44:	pop    ebp
  40ed45:	xchg   ebx,eax
  40ed46:	mov    eax,0xe754d8db
  40ed4b:	(bad)  
  40ed4c:	cld    
  40ed4d:	shl    BYTE PTR [ebx+esi*1-0x3c],cl
  40ed51:	aam    0x18
  40ed53:	jae    0x40ed4e
  40ed55:	or     BYTE PTR [ebx],bh
  40ed57:	xchg   DWORD PTR [ebx],ecx
  40ed59:	mov    al,ds:0x83576431
  40ed5e:	pusha  
  40ed5f:	xchg   ebx,eax
  40ed60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed61:	mov    esp,DWORD PTR [esi-0x5]
  40ed64:	out    dx,al
  40ed65:	fstp   TBYTE PTR [edx]
  40ed67:	jg     0x40ed6d
  40ed69:	(bad)  
  40ed6a:	ja     0x40ed18
  40ed6c:	stc    
  40ed6d:	xor    DWORD PTR [ebp+0x58],0x5e5d05ce
  40ed74:	in     al,dx
  40ed75:	push   edi
  40ed76:	mov    edx,0x42959637
  40ed7b:	popf   
  40ed7c:	mov    al,0x5b
  40ed7e:	push   0x31bf54e9
  40ed83:	sub    eax,0x3fc41044
  40ed88:	or     DWORD PTR [eax],ebp
  40ed8a:	cld    
  40ed8b:	add    DWORD PTR [ebp+0x7d5c8133],edi
  40ed91:	lods   eax,DWORD PTR ds:[esi]
  40ed92:	push   eax
  40ed93:	sbb    eax,0x72a4392a
  40ed98:	xchg   edi,eax
  40ed99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed9a:	fild   QWORD PTR [ebp-0x43dbd234]
  40eda0:	pop    ds
  40eda1:	sbb    al,BYTE PTR [esi+0x5e]
  40eda4:	mov    BYTE PTR [ebp+0x30],ch
  40eda7:	in     al,dx
  40eda8:	les    ecx,FWORD PTR [edi]
  40edaa:	jne    0x40ee15
  40edac:	adc    eax,0xa31ad819
  40edb1:	mov    fs,WORD PTR [ebx+0xd]
  40edb4:	addr16 repz pop ds
  40edb7:	inc    eax
  40edb8:	(bad)  
  40edb9:	pop    ss
  40edba:	xchg   BYTE PTR [eax],ah
  40edbc:	pop    es
  40edbd:	push   ecx
  40edbe:	mov    ah,0xd6
  40edc0:	leave  
  40edc1:	mov    cl,0x7c
  40edc3:	popa   
  40edc4:	shr    DWORD PTR [edx-0x12dd6fd7],cl
  40edca:	mov    ebx,0xd20f36a9
  40edcf:	cmp    dl,BYTE PTR ds:0x179d5c0a
  40edd5:	or     BYTE PTR [esi-0x7e],0x9c
  40edd9:	jno    0x40ed82
  40eddb:	pop    ds
  40eddc:	adc    BYTE PTR [ebp-0x4],0xd3
  40ede0:	(bad)  
  40ede2:	jle    0x40ed7e
  40ede4:	xchg   BYTE PTR [esi+eax*2],dl
  40ede7:	lds    esp,FWORD PTR [eax-0x235b28e7]
  40eded:	inc    ebx
  40edee:	jg     0x40edf2
  40edf0:	sbb    esi,DWORD PTR [ebx+0xb6fa5c9]
  40edf6:	jae    0x40ed9f
  40edf8:	std    
  40edf9:	and    eax,0xb2414e7e
  40edfe:	cmp    BYTE PTR [edi-0x73d874ae],dl
  40ee04:	loope  0x40edd2
  40ee06:	xchg   ecx,eax
  40ee07:	pop    edx
  40ee08:	pop    eax
  40ee09:	jb     0x40edbd
  40ee0b:	adc    al,0x3b
  40ee0d:	dec    esp
  40ee0e:	ret    
  40ee0f:	pop    ecx
  40ee10:	les    esp,FWORD PTR [edi]
  40ee12:	pushf  
  40ee13:	push   edx
  40ee14:	or     DWORD PTR [ecx],esp
  40ee16:	pop    es
  40ee17:	clc    
  40ee18:	fisub  WORD PTR [eax+0x7529a7a2]
  40ee1e:	call   0x3a9d3bdc
  40ee23:	or     edx,edi
  40ee25:	sub    BYTE PTR [esi],bh
  40ee27:	jbe    0x40ee3b
  40ee29:	fs out dx,al
  40ee2b:	jbe    0x40eea3
  40ee2d:	pop    ds
  40ee2e:	in     eax,dx
  40ee2f:	cld    
  40ee30:	pop    edx
  40ee31:	push   esp
  40ee32:	push   esp
  40ee33:	(bad)  
  40ee35:	out    dx,eax
  40ee36:	push   esi
  40ee37:	fcom   DWORD PTR [edx-0x1e]
  40ee3a:	cmp    DWORD PTR [edi],ecx
  40ee3c:	dec    ecx
  40ee3d:	xchg   ebp,eax
  40ee3e:	dec    eax
  40ee3f:	mov    ch,0x9b
  40ee41:	dec    edi
  40ee42:	(bad)  
  40ee43:	push   esp
  40ee44:	scas   al,BYTE PTR es:[edi]
  40ee45:	add    eax,ebp
  40ee47:	(bad)  
  40ee48:	test   al,0x23
  40ee4a:	cli    
  40ee4b:	pop    eax
  40ee4c:	cmp    eax,0x22040a8e
  40ee51:	ficom  WORD PTR [ebx-0xf]
  40ee54:	and    ebp,DWORD PTR [ecx-0x7c]
  40ee57:	out    dx,eax
  40ee58:	sbb    BYTE PTR [ebx+0x3d],al
  40ee5b:	mov    ah,0x8d
  40ee5d:	les    ebp,FWORD PTR [edi+ebx*2]
  40ee60:	jl     0x40ee4b
  40ee62:	dec    ebx
  40ee63:	test   ah,ah
  40ee65:	mov    bl,0x25
  40ee67:	ins    BYTE PTR es:[edi],dx
  40ee68:	loop   0x40ee02
  40ee6a:	dec    esi
  40ee6b:	pop    ebx
  40ee6c:	pop    es
  40ee6d:	dec    ecx
  40ee6e:	mov    eax,0x2790a7d0
  40ee73:	pop    edx
  40ee74:	add    al,0xef
  40ee76:	pop    edi
  40ee77:	cs ss rol dl,cl
  40ee7b:	pop    ss
  40ee7c:	xchg   ebx,ebp
  40ee7e:	sahf   
  40ee7f:	mov    cl,BYTE PTR [ecx+0x1aea75ae]
  40ee85:	aas    
  40ee86:	mov    dl,0x8d
  40ee88:	adc    al,0x96
  40ee8a:	enter  0x3a2,0x10
  40ee8e:	call   FWORD PTR [edx-0x20]
  40ee91:	fcmovnu st,st(5)
  40ee93:	fsubp  st(4),st
  40ee95:	pop    ds
  40ee96:	loopne 0x40ee56
  40ee98:	loope  0x40eee1
  40ee9a:	iret   
  40ee9b:	ficomp WORD PTR [eax-0x14]
  40ee9e:	ins    BYTE PTR es:[edi],dx
  40ee9f:	(bad)  
  40eea0:	in     al,0x95
  40eea2:	xchg   ebx,eax
  40eea3:	jecxz  0x40ef18
  40eea5:	sbb    bl,cl
  40eea7:	mov    al,0x67
  40eea9:	pop    ss
  40eeaa:	sbb    al,0x64
  40eeac:	scas   eax,DWORD PTR es:[edi]
  40eead:	das    
  40eeae:	and    eax,0x8d490430
  40eeb3:	(bad)  
  40eeb4:	enter  0x25db,0x52
  40eeb8:	mov    eax,0x7b77c3df
  40eebd:	inc    edi
  40eebe:	loop   0x40ef10
  40eec0:	mov    ah,0xb3
  40eec2:	push   0x1e
  40eec4:	mov    ecx,DWORD PTR [ecx-0x7e]
  40eec7:	int3   
  40eec8:	lds    ebp,FWORD PTR [ecx+0x1333b5b3]
  40eece:	mov    bl,0x4d
  40eed0:	outs   dx,BYTE PTR ds:[esi]
  40eed1:	dec    edx
  40eed2:	and    al,0xc
  40eed4:	mov    esp,0x11adaca2
  40eed9:	les    ebp,FWORD PTR [esi+0x19]
  40eedc:	push   edx
  40eedd:	popa   
  40eede:	sub    BYTE PTR [edi],0x22
  40eee1:	cmp    dl,BYTE PTR [esp+esi*2+0x77790e1b]
  40eee8:	cmp    eax,0x1be44d80
  40eeed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeee:	pop    esp
  40eeef:	retf   0x4e6a
  40eef2:	fdiv   DWORD PTR [esi]
  40eef4:	sbb    esp,DWORD PTR [edx-0x5f]
  40eef7:	pop    ebp
  40eef8:	mov    WORD PTR [ecx-0x65],es
  40eefb:	cmp    ah,cl
  40eefd:	jl     0x40ef73
  40eeff:	ret    
  40ef00:	outs   dx,DWORD PTR ds:[esi]
  40ef01:	jmp    0x640e681a
  40ef06:	out    0x1b,al
  40ef08:	arpl   si,cx
  40ef0a:	gs push cs
  40ef0c:	fsub   DWORD PTR [ebx]
  40ef0e:	mov    bh,0xac
  40ef10:	pop    esi
  40ef11:	shr    bl,0xf3
  40ef14:	mov    ebp,0xccbf8739
  40ef19:	adc    al,0xca
  40ef1b:	dec    ebx
  40ef1c:	ins    BYTE PTR es:[edi],dx
  40ef1d:	xchg   esp,eax
  40ef1e:	xchg   edi,eax
  40ef1f:	adc    DWORD PTR [edi-0x44],0xffffff82
  40ef23:	cmp    al,0x73
  40ef25:	cmp    eax,0xfff3ba89
  40ef2a:	pop    ecx
  40ef2b:	hlt    
  40ef2c:	enter  0xb4d1,0xa9
  40ef30:	(bad)  
  40ef31:	in     eax,dx
  40ef32:	fisub  DWORD PTR [ecx+ecx*4-0x27]
  40ef36:	and    BYTE PTR [edx+0x4f9faafa],cl
  40ef3c:	jo     0x40ef77
  40ef3e:	add    dl,BYTE PTR [eax+ebx*4+0xc]
  40ef42:	inc    eax
  40ef43:	dec    esp
  40ef44:	dec    esi
  40ef45:	push   cs
  40ef46:	into   
  40ef47:	bound  ecx,QWORD PTR [edi]
  40ef49:	pop    es
  40ef4a:	mov    ebx,0x4304f05a
  40ef4f:	lahf   
  40ef50:	xor    BYTE PTR [esi-0x15],cl
  40ef53:	mov    al,0x17
  40ef55:	jmp    0x40efd2
  40ef57:	or     dl,dh
  40ef59:	add    ah,BYTE PTR [edi]
  40ef5b:	(bad)  
  40ef5c:	push   edi
  40ef5d:	fsubr  DWORD PTR [edx-0x570443b1]
  40ef63:	jno    0x40ef0a
  40ef65:	and    ecx,DWORD PTR [esi]
  40ef67:	sub    ecx,DWORD PTR [ecx+0x9]
  40ef6a:	sub    eax,0xa439cad4
  40ef6f:	inc    edi
  40ef70:	cmp    dh,BYTE PTR [edx]
  40ef72:	std    
  40ef73:	dec    ecx
  40ef74:	or     ebx,edi
  40ef76:	push   edi
  40ef77:	lahf   
  40ef78:	lock sub eax,0xadd00421
  40ef7e:	in     eax,0x3b
  40ef80:	sbb    eax,0x8c720f6f
  40ef85:	sbb    eax,0x1b4b9a58
  40ef8a:	loope  0x40ef46
  40ef8c:	dec    esp
  40ef8d:	mov    esi,0xe73e64af
  40ef92:	xchg   edi,eax
  40ef93:	inc    esp
  40ef94:	inc    eax
  40ef95:	jnp    0x40ef6d
  40ef97:	mov    esp,ss
  40ef99:	xor    ebp,DWORD PTR [ebp+0x46]
  40ef9c:	push   edi
  40ef9d:	inc    esp
  40ef9e:	pushf  
  40ef9f:	xchg   BYTE PTR ds:0x3ee23204,bl
  40efa5:	je     0x40effe
  40efa7:	outs   dx,DWORD PTR ds:[esi]
  40efa8:	(bad)  [ebx-0xa]
  40efab:	rcr    DWORD PTR [esi],1
  40efad:	dec    edx
  40efae:	and    BYTE PTR [edi],0x7b
  40efb1:	mov    cl,0x62
  40efb3:	sbb    eax,edx
  40efb5:	addr16 es xor al,0x87
  40efb9:	push   0xffffffbe
  40efbb:	inc    edi
  40efbc:	int    0x3c
  40efbe:	fdivr  st(6),st
  40efc0:	push   edx
  40efc1:	outs   dx,DWORD PTR ds:[esi]
  40efc2:	jne    0x40ef77
  40efc4:	je     0x40eff6
  40efc6:	cld    
  40efc7:	sub    DWORD PTR [edi+0x76],eax
  40efca:	and    BYTE PTR [ebx+0x2248b181],0xaf
  40efd1:	loopne 0x40efb7
  40efd3:	and    eax,0xf4201122
  40efd8:	lea    esp,[eax-0x712a672a]
  40efde:	pop    si
  40efe0:	mov    esp,0xb7e85c5
  40efe5:	stc    
  40efe6:	popa   
  40efe7:	cmp    BYTE PTR [edx+0x7baa09df],ch
  40efed:	jmp    0x40f02b
  40efef:	sahf   
  40eff0:	pop    ds
  40eff1:	cmp    bh,BYTE PTR [edi+0x5ca5670d]
  40eff7:	stc    
  40eff8:	jae    0x40f008
  40effa:	fsubp  st(1),st
  40effc:	dec    edi
  40effd:	js     0x40efc9
  40efff:	mov    edx,0x39fb8631
  40f004:	mov    esi,0x1a50041d
  40f009:	js     0x40f07c
  40f00b:	pop    edx
  40f00c:	jb     0x40effc
  40f00e:	les    ebp,FWORD PTR [edx]
  40f010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f011:	call   0x97bb:0xd8337aa0
  40f018:	and    esp,ebp
  40f01a:	leave  
  40f01b:	test   al,0xb3
  40f01d:	jle    0x40f01e
  40f01f:	out    0xe7,al
  40f021:	loopne 0x40f06e
  40f023:	scas   eax,DWORD PTR es:[edi]
  40f024:	sub    dh,cl
  40f026:	jns    0x40f0a0
  40f028:	out    dx,al
  40f029:	pop    es
  40f02a:	mov    dh,0x62
  40f02c:	lds    ebx,FWORD PTR [edi+0x23]
  40f02f:	std    
  40f030:	aaa    
  40f031:	(bad)  
  40f032:	and    DWORD PTR [esi],0x76
  40f035:	std    
  40f036:	cdq    
  40f037:	adc    ebp,DWORD PTR [ebx+esi*2]
  40f03a:	push   es
  40f03b:	aam    0x7e
  40f03d:	scas   eax,DWORD PTR es:[edi]
  40f03e:	(bad)  
  40f040:	mov    ecx,0x5a6f88da
  40f045:	inc    esi
  40f046:	jns    0x40efff
  40f048:	shl    DWORD PTR [esi],cl
  40f04a:	pop    ebx
  40f04b:	(bad)  
  40f04c:	pop    ss
  40f04d:	or     ebp,eax
  40f04f:	pop    edx
  40f050:	rol    BYTE PTR [ebp+0x2f],cl
  40f053:	adc    al,BYTE PTR [eax+0x5b376db5]
  40f059:	stos   BYTE PTR es:[edi],al
  40f05a:	pop    ebx
  40f05b:	leave  
  40f05c:	fbstp  TBYTE PTR ds:0xfe70796c
  40f062:	aaa    
  40f063:	mov    al,ds:0x8a03006f
  40f068:	ins    DWORD PTR es:[edi],dx
  40f069:	jmp    0x40f06d
  40f06b:	jmp    0x40f003
  40f06d:	mov    esi,0xb97381fc
  40f072:	push   cs
  40f073:	sti    
  40f074:	lock pop edi
  40f076:	xchg   ax,ax
  40f078:	jbe    0x40f021
  40f07a:	shl    DWORD PTR [edi+0x3],cl
  40f07d:	icebp  
  40f07e:	loope  0x40f0e8
  40f080:	iret   
  40f081:	or     eax,0x688812a5
  40f086:	xchg   esp,eax
  40f087:	pop    esi
  40f088:	imul   esi,DWORD PTR [edi+edi*8-0x2f],0x1f
  40f08d:	icebp  
  40f08e:	mov    dh,ch
  40f090:	xlat   BYTE PTR ds:[ebx]
  40f091:	nop
  40f092:	mov    bl,0x27
  40f094:	push   0x1a
  40f096:	rcl    ecx,0xf1
  40f099:	mov    ah,0x7c
  40f09b:	and    esi,DWORD PTR [esi-0x2c]
  40f09e:	add    bh,al
  40f0a0:	and    BYTE PTR [edi+0x80e458c],bh
  40f0a6:	ret    
  40f0a7:	enter  0x12be,0xd5
  40f0ab:	ins    BYTE PTR es:[edi],dx
  40f0ac:	adc    ch,ah
  40f0ae:	and    DWORD PTR [ecx+0x32],esp
  40f0b1:	push   ebp
  40f0b2:	sbb    eax,0x1109b134
  40f0b7:	(bad)  
  40f0b8:	sbb    BYTE PTR [ebx],bl
  40f0ba:	mov    bl,0x20
  40f0bc:	add    ebp,DWORD PTR [edi-0x50268ef1]
  40f0c2:	sub    ebx,DWORD PTR [edi]
  40f0c4:	sahf   
  40f0c5:	push   0x894f7802
  40f0ca:	dec    esp
  40f0cb:	leave  
  40f0cc:	jge    0x40f0f9
  40f0ce:	mov    ds:0x1054d2d4,eax
  40f0d3:	mov    ah,0x1f
  40f0d5:	fincstp 
  40f0d7:	loopne 0x40f064
  40f0d9:	jecxz  0x40f08b
  40f0db:	dec    esp
  40f0dc:	clc    
  40f0dd:	mov    dx,0xd0d3
  40f0e1:	dec    edx
  40f0e2:	jmp    0x40f0d4
  40f0e4:	leave  
  40f0e5:	repz dec ebx
  40f0e7:	dec    ebx
  40f0e8:	int3   
  40f0e9:	daa    
  40f0ea:	push   eax
  40f0eb:	sbb    DWORD PTR [eax+ebp*8],edi
  40f0ee:	push   edi
  40f0ef:	add    al,0xcd
  40f0f1:	and    al,0xea
  40f0f3:	add    DWORD PTR [ecx-0x55f8abe],esp
  40f0f9:	bound  ebx,QWORD PTR [ebx]
  40f0fb:	mov    esp,0xafbf832e
  40f100:	jno    0x40f115
  40f102:	into   
  40f103:	jmp    0x6a3b:0x2ef71a08
  40f10a:	outs   dx,DWORD PTR ds:[esi]
  40f10b:	inc    ecx
  40f10c:	gs stos BYTE PTR es:[edi],al
  40f10e:	and    al,0xe1
  40f110:	test   BYTE PTR [eax+0x17],ah
  40f113:	mov    dl,0x1b
  40f115:	xchg   esi,eax
  40f116:	xchg   edx,eax
  40f117:	mov    dh,0x96
  40f119:	jle    0x40f132
  40f11b:	mov    BYTE PTR [ebx+ecx*2+0x62aa784b],ah
  40f122:	push   edi
  40f123:	cmp    ah,BYTE PTR [eax-0x5]
  40f126:	out    0x22,al
  40f128:	mov    bl,0x95
  40f12a:	jne    0x40f107
  40f12c:	pop    ecx
  40f12d:	push   es
  40f12e:	rcl    DWORD PTR [ecx-0xe],cl
  40f131:	or     DWORD PTR [ecx+0xc],esi
  40f134:	in     eax,0xa7
  40f136:	in     al,0x83
  40f138:	aam    0xaf
  40f13a:	fdiv   QWORD PTR gs:[ebx+0x34d9eb50]
  40f141:	mov    al,0x95
  40f143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f144:	push   edi
  40f145:	pop    eax
  40f146:	ja     0x40f124
  40f148:	pop    eax
  40f149:	in     al,dx
  40f14a:	sub    al,BYTE PTR [eax+0x36ce31b6]
  40f150:	ss xchg edi,eax
  40f152:	(bad)  
  40f153:	aad    0xf
  40f155:	das    
  40f156:	outs   dx,DWORD PTR ds:[esi]
  40f157:	in     eax,dx
  40f158:	push   es
  40f159:	sub    ch,BYTE PTR [esp+eiz*4+0x25]
  40f15d:	dec    eax
  40f15e:	js     0x40f110
  40f160:	xchg   ebp,eax
  40f161:	call   FWORD PTR [ecx-0x7e3b14f3]
  40f167:	pop    ecx
  40f168:	push   esp
  40f169:	push   0xe1e679f1
  40f16e:	push   edi
  40f16f:	mov    dh,0x3c
  40f171:	pop    es
  40f172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f173:	ret    
  40f174:	xor    cl,0xf7
  40f177:	dec    ebp
  40f178:	jge    0x40f0ff
  40f17a:	adc    eax,0x3ea5131d
  40f17f:	adc    eax,0x69a29714
  40f184:	xchg   ecx,eax
  40f185:	dec    ecx
  40f186:	std    
  40f187:	mov    ds:0x2d7d6af3,eax
  40f18c:	clc    
  40f18d:	(bad)  
  40f18e:	les    edi,FWORD PTR [ecx+eax*1]
  40f191:	outs   dx,BYTE PTR ds:[esi]
  40f192:	outs   dx,BYTE PTR ds:[esi]
  40f193:	and    DWORD PTR [edx+0x440c8c06],edi
  40f199:	jl     0x40f11c
  40f19b:	sub    bh,ch
  40f19d:	push   ebp
  40f19e:	pop    ecx
  40f19f:	shr    ebx,0xe5
  40f1a2:	fild   DWORD PTR [edx-0x71]
  40f1a5:	sub    bh,dh
  40f1a7:	lahf   
  40f1a8:	addr16 push 0xed47700c
  40f1ae:	stos   DWORD PTR es:[edi],eax
  40f1af:	and    BYTE PTR [eax],0xf1
  40f1b2:	stc    
  40f1b3:	cmp    DWORD PTR [eax-0x5e],0xaf62f786
  40f1ba:	test   eax,0x35f56a16
  40f1bf:	xor    al,0x21
  40f1c1:	ja     0x40f1f7
  40f1c3:	xor    bh,BYTE PTR [edx-0x6b79c4ec]
  40f1c9:	and    ah,dl
  40f1cb:	aaa    
  40f1cc:	sub    DWORD PTR [edi+eax*1+0x39],edi
  40f1d0:	pop    esi
  40f1d1:	retf   0xd9ba
  40f1d4:	jle    0x40f1e7
  40f1d6:	pop    esp
  40f1d7:	cdq    
  40f1d8:	clc    
  40f1d9:	jge    0x40f255
  40f1db:	xor    al,0xae
  40f1dd:	cmp    bh,bl
  40f1df:	mov    dh,0x61
  40f1e1:	(bad)  
  40f1e2:	outs   dx,BYTE PTR ds:[esi]
  40f1e3:	lds    ecx,FWORD PTR [edi-0x5e266f1e]
  40f1e9:	mov    esp,DWORD PTR [edi]
  40f1eb:	mov    ah,BYTE PTR [ecx]
  40f1ed:	cmp    eax,0x59ef0e03
  40f1f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1f3:	pop    edi
  40f1f4:	clc    
  40f1f5:	sbb    al,0x8d
  40f1f7:	dec    ecx
  40f1f8:	repz xchg ecx,eax
  40f1fa:	aas    
  40f1fb:	xor    al,0x74
  40f1fd:	rol    BYTE PTR [esi+0x61430544],cl
  40f203:	dec    esp
  40f204:	call   0x8ebc:0xcbd3d8ae
  40f20b:	gs xor al,0x1b
  40f20e:	fiadd  DWORD PTR [ecx-0x5347edce]
  40f214:	pushf  
  40f215:	inc    esi
  40f216:	pop    esi
  40f217:	adc    eax,0xf0c0cc82
  40f21c:	push   esp
  40f21d:	jne    0x40f1cb
  40f21f:	xchg   edi,eax
  40f220:	retf   
  40f221:	sahf   
  40f222:	cmp    DWORD PTR [ebx],0xeeaf2a7b
  40f228:	loop   0x40f1af
  40f22a:	ret    0x34d5
  40f22d:	pop    esp
  40f22f:	push   ds
  40f230:	loopne 0x40f1c8
  40f232:	test   BYTE PTR [edx-0x30aef07c],al
  40f238:	mov    ch,0xd5
  40f23a:	sar    DWORD PTR [esi],0x38
  40f23d:	jg     0x40f2b8
  40f23f:	out    dx,al
  40f240:	scas   eax,DWORD PTR es:[edi]
  40f241:	sub    eax,edx
  40f243:	pop    ds
  40f244:	clc    
  40f245:	in     eax,0x55
  40f247:	xchg   ecx,eax
  40f248:	pushf  
  40f249:	ret    
  40f24a:	jl     0x40f279
  40f24c:	jb     0x40f20c
  40f24e:	pop    ebp
  40f24f:	jb     0x40f1ef
  40f251:	cmp    eax,0x615494f2
  40f256:	cwde   
  40f257:	fcomi  st,st(1)
  40f259:	in     al,0xf4
  40f25b:	jnp    0x40f2ac
  40f25d:	and    al,0xc1
  40f25f:	inc    esi
  40f260:	jns    0x40f286
  40f262:	call   0x6df1:0x9b8a570
  40f269:	or     al,0xa7
  40f26b:	retf   
  40f26c:	xchg   ebx,eax
  40f26d:	bound  esp,QWORD PTR [edx+0x22]
  40f270:	pop    esi
  40f271:	adc    DWORD PTR [esi-0x5e],edi
  40f274:	push   ss
  40f275:	nop
  40f276:	jbe    0x40f2c7
  40f278:	daa    
  40f279:	or     ebp,DWORD PTR [ecx-0x5e]
  40f27c:	jecxz  0x40f2c6
  40f27e:	in     eax,dx
  40f27f:	es xchg ecx,eax
  40f281:	xlat   BYTE PTR ds:[ebx]
  40f282:	hlt    
  40f283:	scas   al,BYTE PTR es:[edi]
  40f284:	les    esp,FWORD PTR [ecx+0x68534b43]
  40f28a:	in     eax,0x68
  40f28c:	icebp  
  40f28d:	push   ss
  40f28e:	lea    edi,[ecx+0x51]
  40f291:	mov    ecx,0x555e5d02
  40f296:	inc    ebp
  40f297:	jge    0x40f2a4
  40f299:	push   es
  40f29a:	sbb    eax,0x311b9260
  40f29f:	jo     0x40f2b3
  40f2a1:	dec    ebp
  40f2a2:	cmp    esi,eax
  40f2a4:	or     DWORD PTR [ecx-0x33],esi
  40f2a7:	sub    al,0x23
  40f2a9:	jecxz  0x40f246
  40f2ab:	sub    edi,eax
  40f2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2ae:	push   esp
  40f2af:	loop   0x40f2b0
  40f2b1:	xchg   ecx,eax
  40f2b2:	jecxz  0x40f23b
  40f2b4:	jne    0x40f23c
  40f2b6:	inc    ebx
  40f2b7:	inc    ebx
  40f2b8:	imul   esp,DWORD PTR [edi-0x749559f1],0x5a0afbe3
  40f2c2:	add    esi,DWORD PTR [ecx+0x16]
  40f2c5:	dec    ebp
  40f2c6:	jne    0x40f2e4
  40f2c8:	mov    esi,0x2b6973d5
  40f2cd:	push   edx
  40f2ce:	lock in eax,dx
  40f2d0:	or     DWORD PTR [ebx+ecx*4-0x53],ebx
  40f2d4:	jmp    0x51321d9d
  40f2d9:	mov    bh,0xb5
  40f2db:	rcl    DWORD PTR [edx],1
  40f2dd:	jmp    0xb7af76f8
  40f2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2e3:	loope  0x40f33c
  40f2e5:	and    BYTE PTR [eax-0x7b],0xf1
  40f2e9:	cld    
  40f2ea:	out    dx,al
  40f2eb:	jb     0x40f2da
  40f2ed:	or     ecx,DWORD PTR [ebx+eiz*8-0x7e]
  40f2f1:	ja     0x40f332
  40f2f3:	cdq    
  40f2f4:	iret   
  40f2f5:	fxch   st(6)
  40f2f7:	sbb    al,0xc9
  40f2f9:	lea    eax,[edx+0x2af04a16]
  40f2ff:	mov    eax,0xa796f693
  40f304:	call   0x51ff1b66
  40f309:	fwait
  40f30a:	dec    ebp
  40f30b:	cmp    al,0xa
  40f30d:	aaa    
  40f30e:	sahf   
  40f30f:	inc    eax
  40f310:	or     DWORD PTR [ebx+0xf],0xffffffed
  40f314:	mov    DWORD PTR [esi+0x3937095d],esp
  40f31a:	jo     0x40f30d
  40f31c:	lods   al,BYTE PTR ds:[esi]
  40f31d:	push   0xcb567d11
  40f322:	cmp    al,BYTE PTR [edx]
  40f324:	mov    ebp,DWORD PTR [ebx+eax*1-0x29651499]
  40f32b:	fs inc eax
  40f32d:	jno    0x40f383
  40f32f:	inc    ecx
  40f330:	xor    bh,ah
  40f332:	or     DWORD PTR [eax-0x787a8b11],0x2d0247ef
  40f33c:	js     0x40f3af
  40f33e:	mov    ecx,DWORD PTR gs:[ebx-0x69]
  40f342:	pop    ss
  40f343:	mov    cl,0xc6
  40f345:	jmp    0x91dc2a2
  40f34a:	shr    BYTE PTR [edx],0x68
  40f34d:	inc    edi
  40f34e:	aas    
  40f34f:	frstor [esp+ebp*8-0x7d71a848]
  40f356:	pop    edx
  40f357:	mov    WORD PTR [edx+0x6d14c5ca],?
  40f35d:	mov    ah,0x1e
  40f35f:	stos   BYTE PTR es:[edi],al
  40f360:	adc    eax,DWORD PTR [ecx+edx*2+0x56]
  40f364:	jae    0x40f3d4
  40f366:	fimul  WORD PTR [esi+ecx*4-0x42]
  40f36a:	adc    ch,BYTE PTR [ebp-0x77]
  40f36d:	or     DWORD PTR [ebx],esp
  40f36f:	jmp    0x40f2f4
  40f371:	sub    DWORD PTR ds:0x7843c61c,edx
  40f377:	adc    al,0x8a
  40f379:	pop    eax
  40f37a:	pop    esp
  40f37b:	retf   0xad7f
  40f37e:	popa   
  40f37f:	or     DWORD PTR [ebx-0x7604cce6],ecx
  40f385:	cmp    cl,BYTE PTR [ebx-0x2fccf7ab]
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x17be8032,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	adc    esp,DWORD PTR [ebx+0x1e]
  40f486:	or     al,0x7a
  40f488:	inc    edx
  40f489:	fwait
  40f48a:	sub    bh,bh
  40f48c:	and    edi,DWORD PTR [ecx-0x3df98d52]
  40f492:	adc    al,0x9d
  40f494:	sub    BYTE PTR [ecx],0xd7
  40f497:	push   es
  40f498:	push   ds
  40f499:	adc    al,0x9f
  40f49b:	cmc    
  40f49c:	xor    eax,ecx
  40f49e:	cwde   
  40f49f:	sbb    DWORD PTR [edx-0x1f],ebx
  40f4a2:	or     ebx,DWORD PTR [ebp+0x37]
  40f4a5:	sbb    BYTE PTR [ecx],0xed
  40f4a8:	push   0x7671b03
  40f4ad:	or     BYTE PTR [ebx-0x8],al
  40f4b0:	mov    dl,0x8a
  40f4b2:	dec    edi
  40f4b3:	sub    ebx,DWORD PTR [esi+0x11f72964]
  40f4b9:	outs   dx,DWORD PTR ds:[esi]
  40f4ba:	dec    ecx
  40f4bb:	cdq    
  40f4bc:	out    0xd7,al
  40f4be:	xchg   esi,eax
  40f4bf:	outs   dx,BYTE PTR ds:[esi]
  40f4c0:	push   es
  40f4c1:	sbb    ebx,DWORD PTR [esi+esi*2+0x779a73e1]
  40f4c8:	fadd   DWORD PTR ss:[edx+ebp*8-0x3a002fe1]
  40f4d0:	lock and ecx,DWORD PTR [edx]
  40f4d3:	scas   eax,DWORD PTR es:[edi]
  40f4d4:	ins    DWORD PTR es:[edi],dx
  40f4d5:	imul   edx,DWORD PTR [esp+edi*4],0xa6889d2f
  40f4dc:	cli    
  40f4dd:	sbb    DWORD PTR [edx],edx
  40f4df:	lods   eax,DWORD PTR ds:[esi]
  40f4e0:	xchg   ebx,eax
  40f4e1:	adc    al,0x54
  40f4e3:	mov    edx,0x2fcf473
  40f4e8:	imul   edi,DWORD PTR [eax],0x3c
  40f4eb:	aam    0x35
  40f4ed:	pop    ebx
  40f4ee:	loop   0x40f4dc
  40f4f0:	pop    esi
  40f4f1:	ins    BYTE PTR es:[edi],dx
  40f4f2:	ret    
  40f4f3:	push   edi
  40f4f4:	jecxz  0x40f54a
  40f4f6:	retf   0x37f8
  40f4f9:	mov    ?,WORD PTR ds:0x60b8a2a0
  40f4ff:	retf   
  40f500:	mov    cl,0x4b
  40f502:	in     al,0x3e
  40f504:	rcr    BYTE PTR [ebp+0x47],cl
  40f507:	bound  esp,QWORD PTR [ebx+0x5516e6cf]
  40f50d:	push   esp
  40f50e:	xchg   BYTE PTR [eax-0x7],al
  40f511:	jmp    0x40f55f
  40f513:	fimul  DWORD PTR [ecx]
  40f515:	ss ss or eax,0x20200203
  40f51c:	add    al,0x19
  40f51e:	sub    ch,BYTE PTR [ecx-0xf]
  40f521:	push   esi
  40f522:	xchg   eax,edi
  40f524:	pop    esi
  40f525:	addr16 or edx,DWORD PTR [bx+0x17]
  40f52b:	sbb    BYTE PTR [esi+ebx*2],bl
  40f52e:	xchg   BYTE PTR [ebp-0x26c634db],dl
  40f534:	push   cs
  40f535:	dec    eax
  40f536:	jne    0x40f516
  40f538:	in     al,dx
  40f539:	inc    eax
  40f53a:	test   DWORD PTR [eax],edi
  40f53c:	sbb    al,0x2
  40f53e:	inc    edi
  40f53f:	xchg   ebp,eax
  40f540:	clc    
  40f541:	pusha  
  40f542:	mov    ecx,0x61e10ec0
  40f547:	stos   DWORD PTR es:[edi],eax
  40f548:	jg     0x40f560
  40f54a:	jbe    0x40f5b6
  40f54c:	xor    BYTE PTR [esi-0x7819a960],0xe8
  40f553:	cmc    
  40f554:	xchg   DWORD PTR [ebx-0x3b],edx
  40f557:	lods   eax,DWORD PTR ds:[esi]
  40f558:	mov    dh,0x2d
  40f55a:	push   ecx
  40f55b:	test   DWORD PTR [edi-0x1ee66fef],0x7ab8e245
  40f565:	push   ecx
  40f566:	jg     0x40f504
  40f568:	mov    WORD PTR [ecx+0x75e8a86],?
  40f56e:	jmp    0x3b67:0x8ed6ce11
  40f575:	or     DWORD PTR [edx-0x302bfba3],ebx
  40f57b:	cmp    eax,0x10deb831
  40f580:	loopne 0x40f5a7
  40f582:	inc    edi
  40f583:	jnp    0x40f585
  40f585:	or     ecx,DWORD PTR [esi]
  40f587:	cli    
  40f588:	xor    dl,BYTE PTR [edi+edi*1-0x1d6834ca]
  40f58f:	sbb    DWORD PTR [eax],ecx
  40f591:	addr16 in al,0x2c
  40f594:	stos   DWORD PTR es:[edi],eax
  40f595:	add    BYTE PTR [ecx+ecx*1],cl
  40f598:	and    esp,DWORD PTR [esi+0x535ed1ef]
  40f59e:	scas   eax,DWORD PTR es:[edi]
  40f59f:	leave  
  40f5a0:	mov    edi,DWORD PTR [esi+0x28d4828f]
  40f5a6:	adc    BYTE PTR [ebp-0x768dfb65],dh
  40f5ac:	inc    ebx
  40f5ad:	icebp  
  40f5ae:	fwait
  40f5af:	loope  0x40f598
  40f5b1:	add    eax,0xd73e5d4f
  40f5b6:	dec    esp
  40f5b7:	adc    al,BYTE PTR [ebx-0x698239a4]
  40f5bd:	sbb    BYTE PTR [esp+eax*4],ch
  40f5c0:	in     eax,0xbd
  40f5c2:	xor    BYTE PTR [esi+esi*1-0x1fe7e967],cl
  40f5c9:	les    eax,FWORD PTR [ebx+0x1bd40b76]
  40f5cf:	iret   
  40f5d0:	shr    DWORD PTR ds:0x43881ff6,1
  40f5d6:	push   eax
  40f5d7:	sti    
  40f5d8:	xor    DWORD PTR [ebp+0x5ff54a2a],esi
  40f5de:	enter  0x9c02,0xe7
  40f5e2:	fwait
  40f5e3:	outs   dx,BYTE PTR ds:[esi]
  40f5e4:	in     al,dx
  40f5e5:	xor    eax,0x650acd59
  40f5ea:	push   ebp
  40f5eb:	fdiv   DWORD PTR [eax+0x64]
  40f5ee:	lahf   
  40f5ef:	sbb    edx,DWORD PTR [esi+0x46]
  40f5f2:	sub    BYTE PTR [edi],al
  40f5f4:	push   edi
  40f5f5:	jmp    0xb7de:0x9fe89dd4
  40f5fc:	dec    ebx
  40f5fd:	popw   ds
  40f5ff:	mov    eax,0xa3e8511
  40f604:	sub    edi,esp
  40f606:	push   cs
  40f607:	add    eax,DWORD PTR [esi]
  40f609:	inc    BYTE PTR [edi+0x54]
  40f60c:	xor    eax,0x33fd275b
  40f611:	sbb    ecx,ebx
  40f613:	arpl   WORD PTR [edi+0x3b9fd503],ax
  40f619:	(bad)  
  40f61a:	pop    esi
  40f61b:	sbb    BYTE PTR [edx-0x5195d899],al
  40f621:	pop    ecx
  40f622:	jo     0x40f650
  40f624:	(bad)  [ebx-0x58db2495]
  40f62a:	das    
  40f62b:	ss jns 0x40f631
  40f62e:	sahf   
  40f62f:	repnz mov bl,0x7b
  40f632:	(bad)  
  40f633:	lock cmp dh,BYTE PTR [ecx]
  40f636:	adc    edi,ecx
  40f638:	push   esi
  40f639:	test   eax,0xd8644b17
  40f63e:	mov    ebp,0xe07bd097
  40f643:	jbe    0x40f656
  40f645:	js     0x40f69a
  40f647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f648:	jae    0x40f691
  40f64a:	or     dl,bh
  40f64c:	dec    esp
  40f64d:	adc    bl,bh
  40f64f:	dec    esp
  40f650:	xchg   ebx,eax
  40f651:	mov    al,0xee
  40f653:	mov    bl,0x7d
  40f655:	dec    ecx
  40f656:	xchg   esi,eax
  40f657:	lods   eax,DWORD PTR ds:[esi]
  40f658:	cmp    ecx,DWORD PTR [ecx-0x35]
  40f65b:	jbe    0x40f6bf
  40f65d:	iret   
  40f65e:	call   0xc1d7cde6
  40f663:	xchg   ebp,eax
  40f664:	ins    BYTE PTR es:[edi],dx
  40f665:	(bad)  
  40f667:	mov    eax,0xacae6987
  40f66c:	ret    0x84b6
  40f66f:	scas   al,BYTE PTR es:[edi]
  40f670:	push   0x8f2a7302
  40f675:	push   eax
  40f676:	mov    ecx,0xb0d72098
  40f67b:	mov    BYTE PTR [ecx-0x39],bl
  40f67e:	test   DWORD PTR [edi],ebp
  40f680:	test   DWORD PTR [ecx+0x4f],0xad26c795
  40f687:	jno    0x40f6b9
  40f689:	mov    al,ds:0x665c9d6
  40f68e:	inc    edi
  40f68f:	push   ds
  40f690:	int3   
  40f691:	fiadd  WORD PTR [edi]
  40f693:	loopne 0x40f6c6
  40f695:	xchg   edi,eax
  40f696:	mov    edx,DWORD PTR [ebp+edx*4+0x1e]
  40f69a:	mov    edx,ds
  40f69c:	mov    ds:0xc78bf140,eax
  40f6a1:	or     ebx,ebp
  40f6a3:	popf   
  40f6a4:	push   edi
  40f6a5:	mov    al,ds:0xf42297a0
  40f6aa:	xchg   ebp,eax
  40f6ab:	mov    ebx,0x3341180
  40f6b0:	push   0x2aab1f15
  40f6b5:	mov    esi,0x8c976199
  40f6ba:	lds    edi,FWORD PTR [edx]
  40f6bc:	rcr    bh,cl
  40f6be:	push   es
  40f6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6c0:	mov    edx,ebp
  40f6c2:	sbb    al,BYTE PTR [edx+0x3cb0fb63]
  40f6c8:	mov    eax,0x43afeb62
  40f6cd:	(bad)  
  40f6ce:	std    
  40f6cf:	int3   
  40f6d0:	xor    DWORD PTR [esi],0x65d39801
  40f6d6:	mov    bh,0xfb
  40f6d8:	sub    ecx,ebx
  40f6da:	adc    al,0x15
  40f6dc:	stc    
  40f6dd:	dec    edi
  40f6de:	mov    edi,0xdeffc172
  40f6e3:	xor    bh,ah
  40f6e5:	(bad)  
  40f6e6:	cwde   
  40f6e7:	mov    ebx,0xb7f7aca9
  40f6ec:	ds cli 
  40f6ee:	outs   dx,BYTE PTR ds:[esi]
  40f6ef:	mov    eax,0x67650cf7
  40f6f4:	jae    0x40f6ca
  40f6f6:	jbe    0x40f70a
  40f6f8:	add    DWORD PTR [ebp-0x11],ebx
  40f6fb:	sub    DWORD PTR [edi],ebp
  40f6fd:	aaa    
  40f6fe:	sbb    al,0x79
  40f700:	fdivr  DWORD PTR [eax]
  40f702:	xchg   DWORD PTR [edi+0x7961c4d0],esi
  40f708:	pop    esp
  40f709:	hlt    
  40f70a:	lods   eax,DWORD PTR ds:[esi]
  40f70b:	mul    DWORD PTR ds:0x3f1740bb
  40f711:	popf   
  40f712:	cli    
  40f713:	jns    0x40f719
  40f715:	adc    bl,BYTE PTR [edi+0x1b035354]
  40f71b:	mov    es,WORD PTR [edx]
  40f71d:	jmp    0x40f6e0
  40f71f:	mov    dl,0xea
  40f721:	cs out 0x1a,al
  40f724:	popa   
  40f725:	out    dx,eax
  40f726:	sbb    dl,ah
  40f728:	push   cs
  40f729:	cmp    ecx,ebx
  40f72b:	jmp    0x40f76b
  40f72d:	mov    ds:0x530eea4c,eax
  40f732:	mov    dl,0x6c
  40f734:	stos   BYTE PTR es:[edi],al
  40f735:	push   ebx
  40f736:	shl    DWORD PTR [ebx],0x13
  40f739:	push   ebx
  40f73a:	dec    edi
  40f73b:	test   al,0xa7
  40f73d:	mov    al,ds:0x3b36af11
  40f742:	push   edi
  40f743:	test   DWORD PTR [ebp-0x43],esp
  40f746:	mov    dl,cl
  40f748:	sbb    bh,ch
  40f74a:	mov    ah,0x3a
  40f74c:	jecxz  0x40f7b9
  40f74e:	push   ds
  40f74f:	rcl    BYTE PTR [edx+0x66],0xe6
  40f753:	mov    esp,0x1f168190
  40f758:	or     DWORD PTR [esi+0x66],esi
  40f75b:	addr16 jl 0x40f796
  40f75e:	dec    esp
  40f75f:	pop    ebx
  40f760:	sbb    dh,BYTE PTR [ebp-0x488893ba]
  40f766:	mov    BYTE PTR [eax],dl
  40f768:	or     cl,BYTE PTR [eax+0x11]
  40f76b:	pop    ss
  40f76c:	cmp    BYTE PTR [ebp+0x51af85a],bl
  40f772:	ins    BYTE PTR es:[edi],dx
  40f773:	pusha  
  40f774:	pop    eax
  40f775:	pop    ebx
  40f776:	cld    
  40f777:	cmp    al,0x28
  40f779:	push   0x1a
  40f77b:	sbb    eax,0xe018d8d8
  40f780:	mov    ecx,0x6656bb0d
  40f785:	(bad)  
  40f786:	aaa    
  40f787:	dec    ebp
  40f788:	test   al,0xfb
  40f78a:	cwde   
  40f78b:	push   ds
  40f78c:	jle    0x40f71e
  40f78e:	pop    esp
  40f78f:	push   esi
  40f790:	leave  
  40f791:	add    eax,0x9dba1ab2
  40f796:	retf   
  40f797:	or     cl,BYTE PTR [esi-0x2c]
  40f79a:	fwait
  40f79b:	adc    bh,BYTE PTR ds:0x2b815fe1
  40f7a1:	stos   DWORD PTR es:[edi],eax
  40f7a2:	test   eax,0x513916d2
  40f7a7:	das    
  40f7a8:	cmp    DWORD PTR [edi-0x12],esp
  40f7ab:	jbe    0x40f7ec
  40f7ad:	sub    dh,dl
  40f7af:	push   ebp
  40f7b0:	iret   
  40f7b1:	jle    0x40f746
  40f7b3:	repz retf 0x7e89
  40f7b7:	dec    edi
  40f7b8:	or     DWORD PTR [ebx+0x55],edi
  40f7bb:	mov    ebp,0x16a97527
  40f7c0:	(bad)  
  40f7c1:	push   ss
  40f7c2:	popf   
  40f7c3:	lahf   
  40f7c4:	push   ebx
  40f7c5:	cmp    al,0x5d
  40f7c7:	mov    bl,0xfc
  40f7c9:	test   eax,0x60ca8191
  40f7ce:	pop    esi
  40f7cf:	in     al,dx
  40f7d0:	push   ebp
  40f7d1:	int    0x2f
  40f7d3:	xchg   edi,eax
  40f7d4:	adc    eax,0x987978ce
  40f7d9:	rol    DWORD PTR [ecx],cl
  40f7db:	push   edx
  40f7dc:	ins    BYTE PTR es:[edi],dx
  40f7dd:	inc    ebx
  40f7de:	add    al,0x4b
  40f7e0:	xor    ebp,ebp
  40f7e2:	imul   edi,DWORD PTR [ecx],0xffffff8d
  40f7e5:	inc    esp
  40f7e6:	outs   dx,DWORD PTR ds:[esi]
  40f7e7:	stos   BYTE PTR es:[edi],al
  40f7e8:	sub    DWORD PTR [eax-0x5a],edx
  40f7eb:	out    dx,al
  40f7ec:	dec    eax
  40f7ed:	add    al,0xf5
  40f7ef:	faddp  st(5),st
  40f7f1:	repz out 0x6f,al
  40f7f4:	call   0xe45a3f58
  40f7f9:	xor    DWORD PTR [esp+ebx*4],eax
  40f7fc:	xor    al,0x5d
  40f7fe:	mov    dl,BYTE PTR [eax+edi*8]
  40f801:	mov    al,0xf9
  40f804:	mov    eax,0x2931adc8
  40f809:	lods   al,BYTE PTR ds:[esi]
  40f80a:	mov    BYTE PTR [ebp+0x61],cl
  40f80d:	inc    ecx
  40f80e:	and    eax,DWORD PTR [eax-0xe41760b]
  40f814:	cdq    
  40f815:	mov    ebp,0xd4e2789f
  40f81a:	aas    
  40f81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f81c:	test   BYTE PTR [ebp+eax*4+0x33],bl
  40f820:	sbb    eax,eax
  40f822:	xlat   BYTE PTR ds:[ebx]
  40f823:	sub    BYTE PTR [edx-0x1],cl
  40f826:	or     ebx,DWORD PTR [ecx]
  40f828:	scas   eax,DWORD PTR es:[edi]
  40f829:	cmp    esp,DWORD PTR ds:0x1beb8e73
  40f82f:	inc    edx
  40f830:	test   ecx,edx
  40f832:	cld    
  40f833:	pop    ebp
  40f834:	jbe    0x40f821
  40f836:	mov    eax,DWORD PTR [ebx-0xca5bb0d]
  40f83c:	sbb    ah,BYTE PTR ds:0x2fe98d2
  40f842:	arpl   WORD PTR [ecx+0x4b],bx
  40f845:	cdq    
  40f846:	(bad)  
  40f848:	and    DWORD PTR [esi],ecx
  40f84a:	mov    bh,0x82
  40f84c:	mov    dh,ch
  40f84e:	scas   eax,DWORD PTR es:[edi]
  40f84f:	pop    ds
  40f850:	xchg   BYTE PTR [ebx-0x161d8d02],ah
  40f856:	je     0x40f8d3
  40f858:	inc    ebx
  40f859:	mov    edi,0xf869947c
  40f85e:	loopne 0x40f8a1
  40f860:	push   ebp
  40f861:	cmp    ebx,0x8
  40f864:	sub    BYTE PTR [edx],bl
  40f866:	icebp  
  40f867:	adc    DWORD PTR [ebp+0x36],0x7e4031c1
  40f86e:	mov    WORD PTR [ecx+0x30],es
  40f871:	call   0xe91cc004
  40f876:	mov    cl,0xe6
  40f878:	rcl    DWORD PTR [esi-0x2f95756b],cl
  40f87e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f87f:	sub    DWORD PTR [ecx-0x58],ecx
  40f882:	cmp    eax,0x8e680526
  40f887:	lahf   
  40f888:	out    0xa,eax
  40f88a:	in     al,dx
  40f88b:	jmp    0x8b6c75a6
  40f890:	cwde   
  40f891:	retf   
  40f892:	sub    eax,0x5d7b032f
  40f897:	mov    edi,0x6e46993b
  40f89c:	dec    edi
  40f89d:	push   ds
  40f89e:	adc    cl,BYTE PTR [ebp+0x5a732507]
  40f8a4:	jbe    0x40f829
  40f8a6:	jmp    0x40f918
  40f8a8:	jae    0x40f8da
  40f8aa:	shl    BYTE PTR [ebx-0x4f746d6d],cl
  40f8b0:	mov    cl,0x90
  40f8b2:	je     0x40f8e6
  40f8b4:	jb     0x40f83a
  40f8b6:	imul   ebp,DWORD PTR [ebx+0x3d],0x7c
  40f8ba:	cmp    DWORD PTR [ebx+0x200ba951],0x48
  40f8c1:	add    DWORD PTR [edx+0x7f],0x23c42896
  40f8c8:	sbb    ch,BYTE PTR [ebp-0x68]
  40f8cb:	and    al,0x7d
  40f8cd:	cmp    edx,DWORD PTR [edi-0x2d0c16df]
  40f8d3:	cmp    cl,BYTE PTR [ecx+0xa]
  40f8d6:	dec    edx
  40f8d7:	cmp    DWORD PTR [esi-0x44],eax
  40f8da:	xor    BYTE PTR [edx],al
  40f8dc:	pop    ds
  40f8dd:	jecxz  0x40f94f
  40f8df:	adc    al,0xe6
  40f8e1:	cs lahf 
  40f8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8e4:	pop    ebp
  40f8e5:	mov    bl,0x9d
  40f8e7:	dec    ebp
  40f8e8:	loop   0x40f8fb
  40f8ea:	cld    
  40f8eb:	dec    ebx
  40f8ec:	or     bh,BYTE PTR [ebx]
  40f8ee:	pop    ebx
  40f8ef:	mov    dh,dh
  40f8f1:	arpl   WORD PTR [esi+0x26707b2f],bp
  40f8f7:	je     0x40f895
  40f8f9:	sbb    BYTE PTR [esi-0x29],ch
  40f8fc:	or     eax,0xe2ce4f31
  40f901:	fwait
  40f902:	mov    dl,0xed
  40f904:	mov    WORD PTR [eax],gs
  40f906:	pop    ebx
  40f907:	into   
  40f908:	sub    edi,eax
  40f90a:	ret    0xc198
  40f90d:	jp     0x40f97b
  40f90f:	add    ecx,edx
  40f911:	push   ecx
  40f912:	jbe    0x40f8df
  40f914:	addr16 mov al,0x96
  40f917:	test   eax,0xca269f51
  40f91c:	enter  0x4ba2,0x61
  40f920:	add    DWORD PTR [ebx],esp
  40f922:	ffree  st(6)
  40f924:	xchg   esi,eax
  40f925:	mov    eax,ds:0x81652ced
  40f92a:	mov    WORD PTR [esp+ebp*8-0x76],ss
  40f92e:	fcom   st(0)
  40f930:	mov    BYTE PTR [edi-0x12122e25],dh
  40f936:	xor    DWORD PTR [edi+0x7a3b3652],edi
  40f93c:	stos   BYTE PTR es:[edi],al
  40f93d:	sbb    DWORD PTR [edi+0x6f],esi
  40f940:	inc    edx
  40f941:	popa   
  40f942:	mov    bh,0xb
  40f944:	das    
  40f945:	push   ds
  40f946:	add    al,0x26
  40f948:	xor    DWORD PTR [ecx],0xffffffad
  40f94b:	scas   eax,DWORD PTR es:[edi]
  40f94c:	inc    edi
  40f94d:	aaa    
  40f94e:	addr16 mov edx,0xeed23ea2
  40f954:	pop    edi
  40f955:	scas   al,BYTE PTR es:[edi]
  40f956:	imul   edi,esi,0x4d
  40f959:	or     ebp,DWORD PTR [bx+si]
  40f95c:	push   ebx
  40f95d:	cwde   
  40f95e:	or     al,0x5c
  40f960:	arpl   WORD PTR [eax-0x5c9da2d5],di
  40f966:	jb     0x40f9c0
  40f968:	xchg   ebx,eax
  40f969:	stos   BYTE PTR es:[edi],al
  40f96a:	mov    BYTE PTR [ebp-0x42],bl
  40f96d:	dec    esi
  40f96e:	clc    
  40f96f:	daa    
  40f970:	jno    0x40f90e
  40f972:	call   0x96e86e04
  40f977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f978:	imul   ebp,DWORD PTR [edx+0x4b],0x155af428
  40f97f:	cwde   
  40f980:	mov    al,ds:0x4dfa6f0a
  40f985:	xchg   ebx,eax
  40f986:	push   ss
  40f987:	add    eax,0x21830d63
  40f98c:	push   ebx
  40f98d:	gs sub eax,0x75700052
  40f993:	push   0xffffff96
  40f995:	loopne 0x40f983
  40f997:	and    al,0x2f
  40f999:	jbe    0x40f955
  40f99b:	test   BYTE PTR [edi-0x2f8102fb],al
  40f9a1:	mov    bl,0x62
  40f9a3:	addr16 loop 0x40fa20
  40f9a6:	pop    ecx
  40f9a7:	dec    eax
  40f9a8:	lea    edx,[edi]
  40f9aa:	retf   0xb7e2
  40f9ad:	in     eax,0xfc
  40f9af:	test   BYTE PTR [ebx-0x73],ah
  40f9b2:	sbb    BYTE PTR [esi-0x48],dl
  40f9b5:	(bad)  
  40f9b6:	push   esi
  40f9b7:	cld    
  40f9b8:	cmp    DWORD PTR [eax-0x7a3f67d8],0x21
  40f9bf:	sub    bh,dh
  40f9c1:	dec    eax
  40f9c2:	xchg   esp,eax
  40f9c3:	add    dh,BYTE PTR [eax]
  40f9c5:	sahf   
  40f9c6:	fild   QWORD PTR [eax]
  40f9c8:	push   ebx
  40f9c9:	stos   DWORD PTR es:[edi],eax
  40f9ca:	xchg   ecx,eax
  40f9cb:	stc    
  40f9cc:	pop    es
  40f9cd:	cmp    BYTE PTR [ebx],bh
  40f9cf:	jle    0x40fa2a
  40f9d1:	or     al,0x2d
  40f9d3:	fld    TBYTE PTR [ebp+0x50b932ec]
  40f9d9:	stos   DWORD PTR es:[edi],eax
  40f9da:	mov    ds:0x7eb3a03b,eax
  40f9df:	inc    esp
  40f9e0:	dec    eax
  40f9e1:	sbb    ebx,DWORD PTR ds:0x1019cb44
  40f9e7:	fisubr WORD PTR [esi-0x29405927]
  40f9ed:	pop    ecx
  40f9ee:	int    0x46
  40f9f0:	and    eax,0x93fd605f
  40f9f5:	mov    dl,0xe6
  40f9f7:	mov    ch,0xc3
  40f9f9:	fsubp  st(1),st
  40f9fb:	(bad)  
  40f9fc:	out    dx,al
  40f9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9fe:	sub    DWORD PTR [edi-0x19],edx
  40fa01:	pop    ebx
  40fa02:	push   eax
  40fa03:	popf   
  40fa04:	pop    edi
  40fa05:	jb     0x40f991
  40fa07:	add    al,0x8c
  40fa09:	and    eax,0xb5cd7ab3
  40fa0e:	dec    ecx
  40fa0f:	mov    ebp,0x4e16d306
  40fa14:	loop   0x40fa58
  40fa16:	jmp    0x40f9ab
  40fa18:	xor    DWORD PTR ss:[ecx],edx
  40fa1b:	add    bl,al
  40fa1d:	lods   eax,DWORD PTR ds:[esi]
  40fa1e:	dec    edi
  40fa1f:	ja     0x40fa61
  40fa21:	repz pop edx
  40fa23:	add    BYTE PTR [edi],cl
  40fa25:	push   ecx
  40fa26:	fwait
  40fa27:	sub    eax,0xb168e90
  40fa2c:	jnp    0x40fa54
  40fa2e:	imul   ebp,DWORD PTR [ecx+esi*8+0x544232e],0xffffffa3
  40fa36:	out    0xfe,eax
  40fa38:	fs loopne 0x40fa17
  40fa3b:	push   0xc56f1028
  40fa40:	daa    
  40fa41:	pop    eax
  40fa42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa43:	or     al,0x50
  40fa45:	push   esi
  40fa46:	out    dx,eax
  40fa47:	jecxz  0x40fab0
  40fa49:	pop    ss
  40fa4a:	xchg   ecx,eax
  40fa4b:	adc    bh,BYTE PTR [ebx]
  40fa4d:	es jbe 0x40fa5c
  40fa50:	cld    
  40fa51:	arpl   si,cx
  40fa53:	jno    0x40fa1e
  40fa55:	fistp  WORD PTR [edi-0xb9304ad]
  40fa5b:	(bad)  
  40fa5c:	push   esp
  40fa5d:	mov    ch,BYTE PTR ds:0xaa65cdb1
  40fa63:	lds    esi,FWORD PTR [eax+0x1c44be2a]
  40fa69:	pop    eax
  40fa6a:	fadd   QWORD PTR [ebx+0x7cf12b77]
  40fa70:	xchg   esp,eax
  40fa71:	cmc    
  40fa72:	gs mov dh,0x6a
  40fa75:	loop   0x40fa37
  40fa77:	dec    bl
  40fa79:	pop    edi
  40fa7a:	fst    QWORD PTR [edi-0x181c3986]
  40fa80:	sbb    DWORD PTR [edi+0x7c],esp
  40fa83:	xchg   edi,eax
  40fa84:	loopne 0x40fa5a
  40fa86:	imul   ebx,edi,0x4af0ffbe
  40fa8c:	jmp    0x4b13a8ed
  40fa91:	lea    eax,[esi+edi*1]
  40fa94:	test   BYTE PTR [eax],0xa4
  40fa97:	adc    al,0xa3
  40fa99:	loope  0x40fb0d
  40fa9b:	inc    edx
  40fa9c:	rcr    BYTE PTR [ecx+0x5],1
  40fa9f:	inc    edx
  40faa0:	adc    esp,esi
  40faa2:	iret   
  40faa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faa4:	repz fisttp DWORD PTR [edi-0x4e5286d5]
  40faab:	add    al,0xff
  40faad:	mov    DWORD PTR [esi],0x4e7bc3d4
  40fab3:	jle    0x40fb16
  40fab5:	or     DWORD PTR [esi-0xd8b36a6],0x2
  40fabc:	leave  
  40fabd:	lahf   
  40fabe:	jecxz  0x40fa7d
  40fac0:	ins    DWORD PTR es:[edi],dx
  40fac1:	push   0x58
  40fac3:	fwait
  40fac4:	add    ebx,DWORD PTR [esi]
  40fac6:	and    BYTE PTR [ebp+0x7e],ah
  40fac9:	shl    DWORD PTR [ebx-0x2e],1
  40facc:	(bad)  
  40facd:	fist   DWORD PTR [edi+0x29]
  40fad0:	add    al,ah
  40fad2:	ficomp WORD PTR [ecx+ecx*4-0xf]
  40fad6:	adc    eax,0x6c3aeed4
  40fadb:	(bad)  
  40fadc:	lods   eax,DWORD PTR ds:[esi]
  40fadd:	loopne 0x40fa60
  40fadf:	xchg   edx,eax
  40fae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fae1:	inc    ecx
  40fae2:	xor    eax,0xd9c35e07
  40fae7:	xchg   ebp,eax
  40fae8:	xchg   DWORD PTR [ecx+0x71aad48d],ebx
  40faee:	jecxz  0x40fb56
  40faf0:	xchg   ecx,eax
  40faf1:	ret    0xec90
  40faf4:	adc    edx,DWORD PTR [ebx-0x5a]
  40faf7:	fwait
  40faf8:	jl     0x40fb03
  40fafa:	outs   dx,BYTE PTR ds:[esi]
  40fafb:	and    dl,bl
  40fafd:	out    0x23,al
  40faff:	out    0x77,al
  40fb01:	out    0xfd,al
  40fb03:	lods   al,BYTE PTR ds:[esi]
  40fb04:	and    DWORD PTR [ebx],edi
  40fb06:	into   
  40fb07:	int    0xa7
  40fb09:	retf   0x504e
  40fb0c:	or     BYTE PTR ds:0xeb311e1c,ah
  40fb12:	xchg   edi,eax
  40fb13:	or     al,0x58
  40fb15:	dec    esi
  40fb16:	stc    
  40fb17:	lock mov cl,al
  40fb1a:	cdq    
  40fb1b:	sub    al,0x9e
  40fb1d:	cmp    DWORD PTR [edi-0x1f],0xb787944f
  40fb24:	popa   
  40fb25:	sbb    esp,DWORD PTR [ecx+0x22ea6339]
  40fb2b:	arpl   dx,bp
  40fb2d:	xor    eax,0xf56c2801
  40fb32:	test   DWORD PTR [edi-0x58],0x502674ce
  40fb39:	add    al,0x20
  40fb3b:	fisttp QWORD PTR [esp+ebp*4]
  40fb3e:	sub    BYTE PTR [eax],ch
  40fb40:	and    eax,0xc2363aa1
  40fb45:	(bad)
  40fb49:	dec    esi
  40fb4a:	out    dx,eax
  40fb4b:	clc    
  40fb4c:	adc    cl,BYTE PTR [eax+0x34750379]
  40fb52:	repz pushf 
  40fb54:	leave  
  40fb55:	mov    ch,0x90
  40fb57:	stc    
  40fb58:	cmp    ah,ah
  40fb5a:	das    
  40fb5b:	aad    0xf7
  40fb5d:	test   BYTE PTR [eax+ecx*4],0xc5
  40fb61:	leave  
  40fb62:	xchg   BYTE PTR [edx-0x20],cl
  40fb65:	(bad)  
  40fb66:	stc    
  40fb67:	mov    al,0x12
  40fb69:	ins    DWORD PTR es:[edi],dx
  40fb6a:	ds add al,0x2a
  40fb6d:	xchg   edi,eax
  40fb6e:	arpl   WORD PTR [edi-0x2b9519b3],bp
  40fb74:	jmp    0x906d:0x800a3d75
  40fb7b:	pop    eax
  40fb7c:	add    al,0x2c
  40fb7e:	scas   al,BYTE PTR es:[edi]
  40fb7f:	adc    DWORD PTR [ecx+0x7ea3228c],esi
  40fb85:	pushf  
  40fb86:	scas   eax,DWORD PTR es:[edi]
  40fb87:	and    dl,BYTE PTR [esi+0x7c]
  40fb8a:	inc    ebx
  40fb8b:	call   FWORD PTR [edi-0x6398a066]
  40fb91:	cmp    dh,BYTE PTR [ebp-0x1e]
  40fb94:	dec    edi
  40fb95:	sub    eax,0xb86cdb4e
  40fb9a:	jmp    0x7a61:0x4896cefb
  40fba1:	inc    edx
  40fba2:	fcom   QWORD PTR [edx-0x26]
  40fba5:	inc    esi
  40fba6:	jne    0x40fbe4
  40fba8:	fcomp  QWORD PTR [ebx+eax*8+0x1fe91c37]
  40fbaf:	test   BYTE PTR [edi],dh
  40fbb1:	push   ds
  40fbb2:	dec    ebp
  40fbb3:	fst    DWORD PTR [edx-0x3b14d110]
  40fbb9:	pop    ss
  40fbba:	js     0x40fbcc
  40fbbc:	dec    ebx
  40fbbd:	adc    eax,0x89b6e281
  40fbc2:	adc    al,0xdb
  40fbc4:	jmp    DWORD PTR [ebx-0x4e]
  40fbc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc8:	push   0x11
  40fbca:	mov    cl,0xa2
  40fbcc:	sub    edi,DWORD PTR ds:0x714d4bc6
  40fbd2:	call   0x7177:0xac7c8686
  40fbd9:	lahf   
  40fbda:	ja     0x40fbbd
  40fbdc:	dec    esp
  40fbdd:	mov    ebp,ebp
  40fbdf:	into   
  40fbe0:	aad    0x37
  40fbe2:	lea    ebp,[eax+eiz*4-0xb6dd103]
  40fbe9:	ds repz push es
  40fbec:	ret    0x2903
  40fbef:	push   esp
  40fbf0:	inc    ebx
  40fbf1:	inc    ebp
  40fbf2:	lahf   
  40fbf3:	mov    esp,0x65286016
  40fbf8:	out    0x5f,eax
  40fbfa:	mov    ch,0x55
  40fbfc:	clc    
  40fbfd:	or     DWORD PTR [eax],ebx
  40fbff:	adc    bh,BYTE PTR [ebp+0x398e46d5]
  40fc05:	jmp    0x101c08a0
  40fc0a:	push   ebp
  40fc0b:	inc    ebp
  40fc0c:	sbb    DWORD PTR [edi-0x32ddbe26],ebx
  40fc12:	cmp    DWORD PTR [ecx+ebp*1+0x38],0xffffffe0
  40fc17:	(bad)  
  40fc18:	sti    
  40fc19:	push   es
  40fc1a:	ret    
  40fc1b:	xlat   BYTE PTR ds:[ebx]
  40fc1c:	inc    edi
  40fc1d:	mov    ch,0x2c
  40fc1f:	push   edx
  40fc20:	pop    DWORD PTR [edi]
  40fc22:	iret   
  40fc23:	push   0x2f8d5cf6
  40fc28:	push   ss
  40fc29:	stos   BYTE PTR es:[edi],al
  40fc2a:	adc    eax,0x93b2fa5c
  40fc2f:	cdq    
  40fc30:	xor    BYTE PTR [ebx-0x252ac883],bh
  40fc36:	fldcw  WORD PTR [ecx-0x9169f71]
  40fc3c:	scas   al,BYTE PTR es:[edi]
  40fc3d:	pop    edx
  40fc3e:	fist   DWORD PTR [ebx+0x4c]
  40fc41:	out    0x78,al
  40fc43:	icebp  
  40fc44:	leave  
  40fc45:	dec    ecx
  40fc46:	lahf   
  40fc47:	xchg   DWORD PTR [esi+edi*2+0x6390f03a],ebp
  40fc4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc4f:	xchg   ebp,eax
  40fc50:	stos   BYTE PTR es:[edi],al
  40fc51:	adc    ecx,esp
  40fc53:	das    
  40fc54:	data16 out dx,al
  40fc56:	adc    BYTE PTR [eax],cl
  40fc58:	fnsetpm(287 only) 
  40fc5a:	sub    cl,ah
  40fc5c:	(bad)  
  40fc5d:	pop    ds
  40fc5e:	push   es
  40fc5f:	dec    ebx
  40fc60:	pusha  
  40fc61:	or     cl,ah
  40fc63:	sar    esi,0x50
  40fc66:	mov    al,0xb1
  40fc68:	cmc    
  40fc69:	jae    0x40fc0e
  40fc6b:	fiadd  WORD PTR [edx+0x42]
  40fc6e:	scas   al,BYTE PTR es:[edi]
  40fc6f:	int3   
  40fc70:	cmp    BYTE PTR [ebx-0x39],bl
  40fc73:	pop    edx
  40fc74:	adc    eax,0x32e7c6b4
  40fc79:	shl    DWORD PTR [esi-0x5a13c7ba],0xad
  40fc80:	push   ebx
  40fc81:	in     eax,dx
  40fc82:	xchg   ebp,edi
  40fc84:	lea    ecx,[ebp+0x29]
  40fc87:	out    dx,eax
  40fc88:	xor    edx,ebp
  40fc8a:	dec    edi
  40fc8b:	test   eax,0x57af1a7a
  40fc90:	lea    eax,[esi+0x67]
  40fc93:	push   cs
  40fc94:	scas   eax,DWORD PTR es:[edi]
  40fc95:	jmp    0x42267fad
  40fc9a:	cmp    eax,0xfcbd4a38
  40fc9f:	je     0x40fcf9
  40fca1:	mov    eax,0x9445894f
  40fca6:	imul   ecx
  40fca8:	dec    esp
  40fca9:	push   esp
  40fcaa:	jge    0x40fcd1
  40fcac:	fld    DWORD PTR [ebp+0xcadd79c]
  40fcb2:	sbb    DWORD PTR [ecx+0x448b97dc],esp
  40fcb8:	pop    edi
  40fcb9:	or     esi,DWORD PTR ds:0x85766553
  40fcbf:	push   edx
  40fcc0:	loopne 0x40fcf3
  40fcc2:	sbb    al,0x1e
  40fcc4:	push   esp
  40fcc5:	pop    ds
  40fcc6:	test   eax,0x72d150bb
  40fccb:	jmp    0x40fc84
  40fccd:	imul   edx,DWORD PTR [edx],0x4
  40fcd0:	retf   0xffb3
  40fcd3:	push   0x6c82817c
  40fcd8:	in     eax,0x77
  40fcda:	stos   DWORD PTR es:[edi],eax
  40fcdb:	sub    ah,cl
  40fcdd:	(bad)  
  40fcde:	pop    ds
  40fcdf:	(bad)  
  40fce0:	std    
  40fce1:	cmp    DWORD PTR [ebx-0x47205d49],esp
  40fce7:	pop    esi
  40fce8:	stc    
  40fce9:	cmp    BYTE PTR [edx-0x3c3de9f6],0xe8
  40fcf0:	pop    esi
  40fcf1:	mov    ah,0xd8
  40fcf3:	push   ds
  40fcf4:	jmp    0xfb45:0x7722122
  40fcfb:	cmp    edi,DWORD PTR [esi-0x19f46aa4]
  40fd01:	mov    eax,ds:0xa630afcd
  40fd06:	in     al,dx
  40fd07:	jnp    0x40fd26
  40fd09:	push   edi
  40fd0a:	sbb    dl,cl
  40fd0c:	mov    ?,WORD PTR [ecx]
  40fd0e:	out    0x71,al
  40fd10:	push   esi
  40fd11:	add    bl,BYTE PTR [edx]
  40fd13:	cmp    al,0xc7
  40fd15:	add    BYTE PTR [ebx+0x37],cl
  40fd18:	push   ecx
  40fd19:	mov    DWORD PTR [eax+ecx*4],0x4163843d
  40fd20:	pop    edi
  40fd21:	jb     0x40fcf8
  40fd23:	arpl   WORD PTR [edx-0x53c12a7d],ax
  40fd29:	dec    edx
  40fd2a:	hlt    
  40fd2b:	sbb    al,0x71
  40fd2d:	mov    ah,0xd8
  40fd2f:	sbb    cl,dl
  40fd31:	pop    es
  40fd32:	jmp    0x40fd05
  40fd34:	or     BYTE PTR [edx-0x7b2b6161],dh
  40fd3a:	jnp    0x40fdb9
  40fd3c:	adc    eax,0xb1b9b033
  40fd41:	stos   BYTE PTR es:[edi],al
  40fd42:	add    ebp,DWORD PTR [ecx]
  40fd44:	inc    esp
  40fd45:	adc    esi,ebp
  40fd47:	xor    bh,BYTE PTR [esi-0x57]
  40fd4a:	pop    ecx
  40fd4b:	mov    ebx,0xbe7284e
  40fd50:	call   0x7f67052c
  40fd55:	fiadd  DWORD PTR [esp+ebx*4-0x729e0fcf]
  40fd5c:	shl    edx,0x21
  40fd5f:	js     0x40fd7b
  40fd61:	sbb    ebx,ecx
  40fd63:	icebp  
  40fd64:	ret    0x3cf6
  40fd67:	fwait
  40fd68:	add    DWORD PTR ds:0x7d8b699e,eax
  40fd6e:	sar    BYTE PTR [ebp-0x1689bfbe],0xb6
  40fd75:	(bad)  
  40fd76:	xor    BYTE PTR [edi-0x24],ah
  40fd79:	outs   dx,DWORD PTR ds:[esi]
  40fd7a:	sbb    eax,0xa22b605f
  40fd7f:	ror    al,cl
  40fd81:	ret    
  40fd82:	and    cl,BYTE PTR [eax+0x23f751b8]
  40fd88:	mov    bh,0x48
  40fd8a:	(bad)  
  40fd8b:	jg     0x40fd35
  40fd8d:	inc    esi
  40fd8e:	cmp    DWORD PTR [ebx-0x12870180],edx
  40fd94:	lea    edi,[ecx+esi*1]
  40fd97:	out    dx,eax
  40fd98:	xchg   ecx,eax
  40fd99:	enter  0xadb3,0x60
  40fd9d:	pop    edi
  40fd9e:	je     0x40fd9b
  40fda0:	fdiv   DWORD PTR [esi-0x6f497a4f]
  40fda6:	xchg   esp,eax
  40fda7:	fiadd  WORD PTR [bp+si]
  40fdaa:	sub    al,0xe2
  40fdac:	test   DWORD PTR [eax],0x2bc703bf
  40fdb2:	or     eax,0x62a214df
  40fdb7:	loope  0x40fd53
  40fdb9:	cdq    
  40fdba:	dec    edx
  40fdbb:	(bad)  
  40fdbc:	hlt    
  40fdbd:	pop    edx
  40fdbe:	and    BYTE PTR [eax],0xa0
  40fdc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdc2:	ror    BYTE PTR [eax],0xd
  40fdc5:	pusha  
  40fdc6:	and    esp,DWORD PTR [edx-0x71]
  40fdc9:	arpl   bx,di
  40fdcb:	jne    0x40fdf8
  40fdcd:	lock arpl WORD PTR [ebp+0x2d],bx
  40fdd1:	add    DWORD PTR [esi],edi
  40fdd3:	xchg   ecx,eax
  40fdd4:	test   eax,0x18b87417
  40fdd9:	add    edx,edi
  40fddb:	cli    
  40fddc:	shl    BYTE PTR [ebp+ecx*8+0x198c89ae],1
  40fde3:	push   ds
  40fde4:	jnp    0x40fe29
  40fde6:	jnp    0x40fe49
  40fde8:	pop    ecx
  40fde9:	sbb    al,0xbc
  40fdeb:	scas   eax,DWORD PTR es:[edi]
  40fdec:	test   eax,0xde9da72d
  40fdf1:	dec    edx
  40fdf2:	mov    edx,?
  40fdf4:	mov    ch,0xa7
  40fdf6:	push   0x14
  40fdf8:	sahf   
  40fdf9:	or     BYTE PTR [esi+eax*4],bh
  40fdfc:	adc    eax,0xe0cee997
  40fe01:	(bad)  
  40fe02:	add    dl,0x75
  40fe05:	inc    edx
  40fe06:	cli    
  40fe07:	mov    edi,DWORD PTR [ebp-0x52]
  40fe0a:	rol    bh,cl
  40fe0c:	ffree  st(6)
  40fe0e:	icebp  
  40fe0f:	(bad)  
  40fe11:	sub    dh,BYTE PTR [edx-0x2e]
  40fe14:	sub    ch,BYTE PTR [eax]
  40fe16:	stos   DWORD PTR es:[edi],eax
  40fe17:	and    eax,0xccb575e7
  40fe1c:	in     eax,0x5f
  40fe1e:	out    dx,eax
  40fe1f:	fdivr  QWORD PTR [esi]
  40fe21:	pop    ecx
  40fe22:	int    0x52
  40fe24:	je     0x40fe2a
  40fe26:	mov    al,ds:0x4ed2aced
  40fe2b:	mov    ch,0xf9
  40fe2d:	sub    BYTE PTR [esi],bl
  40fe2f:	dec    eax
  40fe30:	(bad)  
  40fe31:	cli    
  40fe32:	mov    ds:0xd6040693,al
  40fe37:	fst    DWORD PTR [eax-0x943e4e0]
  40fe3d:	inc    ecx
  40fe3e:	xor    eax,0xee3e124c
  40fe43:	xor    al,BYTE PTR [edx-0xf]
  40fe46:	jnp    0x40fe2f
  40fe48:	je     0x40fdef
  40fe4a:	push   esp
  40fe4b:	add    al,0x67
  40fe4d:	stos   BYTE PTR es:[edi],al
  40fe4e:	pop    ds
  40fe4f:	mov    dh,BYTE PTR [ecx]
  40fe51:	mov    cl,0xcd
  40fe53:	call   0x9062:0x99a073b3
  40fe5a:	jg     0x40fe5e
  40fe5c:	push   eax
  40fe5d:	dec    edx
  40fe5e:	imul   eax,ebp,0x5e09c775
  40fe64:	rcr    BYTE PTR [ebx],cl
  40fe66:	jecxz  0x40fe70
  40fe68:	mov    eax,ds:0x60fca5a4
  40fe6d:	repnz adc ebx,DWORD PTR [ebp+0x61]
  40fe71:	sub    ch,ah
  40fe73:	fld    QWORD PTR [ebx-0x14]
  40fe76:	jbe    0x40fee8
  40fe78:	dec    BYTE PTR [ecx+0x18a74768]
  40fe7e:	cmp    BYTE PTR [ebx],bl
  40fe80:	fld    st(5)
  40fe82:	test   al,0x66
  40fe84:	inc    ebp
  40fe85:	in     eax,dx
  40fe86:	adc    edx,esi
  40fe88:	cmp    BYTE PTR [ebp+0x1a],cl
  40fe8b:	mov    eax,ds:0x53b9994d
  40fe90:	xchg   esp,eax
  40fe91:	imul   esp,DWORD PTR [ebp-0x1],0xd41bf85f
  40fe98:	dec    ecx
  40fe99:	push   es
  40fe9a:	nop
  40fe9b:	jmp    0x9fc3:0x3fe290da
  40fea2:	jmp    0x40fe48
  40fea4:	daa    
  40fea5:	sbb    al,0x36
  40fea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fea8:	aaa    
  40fea9:	jo     0x40fe5b
  40feab:	xchg   ebx,eax
  40feac:	rol    BYTE PTR [esi+0x64274354],0x50
  40feb3:	popa   
  40feb4:	mov    bl,0xd1
  40feb6:	jg     0x40ff20
  40feb8:	push   es
  40feb9:	popa   
  40feba:	add    BYTE PTR [edx],bh
  40febc:	mov    edi,0xda27f1eb
  40fec1:	stc    
  40fec2:	in     al,0xb
  40fec4:	xchg   DWORD PTR [ebp+0x51abb7a4],ebp
  40feca:	xchg   BYTE PTR [eax-0x58],al
  40fecd:	xor    DWORD PTR [esi+0x38],esi
  40fed0:	push   eax
  40fed1:	repz mov bh,0x45
  40fed4:	add    bl,BYTE PTR [ecx+0x2a]
  40fed7:	inc    esp
  40fed8:	ins    DWORD PTR es:[edi],dx
  40fed9:	xchg   esi,eax
  40feda:	push   ebx
  40fedb:	push   0xc8da4863
  40fee0:	aad    0xff
  40fee2:	std    
  40fee3:	xchg   edx,eax
  40fee4:	daa    
  40fee5:	aaa    
  40fee6:	pop    ebx
  40fee7:	pop    esp
  40fee8:	test   al,0xfb
  40feea:	call   0x1ceff9d6
  40feef:	jecxz  0x40ff13
  40fef1:	icebp  
  40fef2:	std    
  40fef3:	jl     0x40ff1d
  40fef5:	jmp    0x99defe74
  40fefa:	cvtps2pd xmm2,QWORD PTR [edi]
  40fefd:	add    BYTE PTR [esi+0x5],0xce
  40ff01:	sub    ebx,edi
  40ff03:	xchg   ebp,eax
  40ff04:	pop    ebp
  40ff05:	ds fwait
  40ff07:	outs   dx,DWORD PTR ds:[esi]
  40ff08:	adc    bh,ch
  40ff0a:	jns    0x40ff32
  40ff0c:	pop    edi
  40ff0d:	mov    ebp,0xdfdd9512
  40ff12:	xchg   edx,eax
  40ff13:	clc    
  40ff14:	push   edi
  40ff15:	out    0xd5,al
  40ff17:	out    0x7,eax
  40ff19:	and    dl,ch
  40ff1b:	mov    DWORD PTR [ecx+0x4b],edx
  40ff1e:	ja     0x40ff33
  40ff20:	cwde   
  40ff21:	mov    ch,0xf2
  40ff23:	add    eax,0xacf3a7ba
  40ff28:	dec    esp
  40ff29:	pop    edx
  40ff2a:	adc    bl,BYTE PTR [edi-0x5766296d]
  40ff30:	in     al,0xd
  40ff32:	(bad)  
  40ff34:	fild   DWORD PTR [esi]
  40ff36:	je     0x40ff9b
  40ff38:	loopne 0x40ff0a
  40ff3a:	xchg   DWORD PTR [esi-0x29abfa89],ecx
  40ff40:	xor    al,0xb9
  40ff42:	in     al,0x1b
  40ff44:	aam    0x1
  40ff46:	mov    al,al
  40ff48:	shr    BYTE PTR [esi-0x1bfb98a2],1
  40ff4e:	sbb    al,0x2c
  40ff50:	and    DWORD PTR [edi-0x1f],eax
  40ff53:	cmp    al,BYTE PTR [ecx+0xd]
  40ff56:	sbb    DWORD PTR [eax+0x50],ebp
  40ff59:	and    dh,BYTE PTR [ebp-0x12673b9f]
  40ff5f:	js     0x40ff35
  40ff61:	sub    eax,0x2cd24a8d
  40ff66:	movups XMMWORD PTR [ecx+0x29],xmm5
  40ff6a:	ja     0x40ff96
  40ff6c:	or     BYTE PTR [esi],ah
  40ff6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff6f:	test   ah,dl
  40ff71:	push   eax
  40ff72:	cmp    ch,dh
  40ff74:	shl    DWORD PTR [edx+0x2c593d4d],0x4a
  40ff7b:	mov    ebx,0x3f824bcf
  40ff80:	cmp    cl,BYTE PTR [edx-0x14c33325]
  40ff86:	mov    ds:0x71ff3d52,eax
  40ff8b:	loop   0x40ffa7
  40ff8d:	(bad)  [esi-0x20]
  40ff90:	mov    bh,0x8d
  40ff92:	ins    BYTE PTR es:[edi],dx
  40ff93:	icebp  
  40ff94:	fadd   QWORD PTR [ebx]
  40ff96:	push   eax
  40ff97:	mov    al,0xb5
  40ff99:	popf   
  40ff9a:	ja     0x410016
  40ff9c:	call   0x92e7:0xb8e03b4c
  40ffa3:	in     al,dx
  40ffa4:	push   ds
  40ffa5:	cmp    DWORD PTR [ecx+0x4b],ebp
  40ffa8:	sbb    edi,DWORD PTR [eax+0xc]
  40ffab:	jge    0x40ffae
  40ffad:	mov    ss,edx
  40ffaf:	dec    esp
  40ffb0:	xchg   BYTE PTR [esi+ebp*1-0x5e],bh
  40ffb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffb5:	jnp    0x40ff81
  40ffb7:	mov    edi,0xc269ca88
  40ffbc:	inc    eax
  40ffbd:	je     0x40ffc4
  40ffbf:	sar    DWORD PTR [ebx-0x40],cl
  40ffc2:	sbb    bh,dl
  40ffc4:	dec    edi
  40ffc5:	fdivr  QWORD PTR [ebp+0x6e]
  40ffc8:	fild   QWORD PTR ds:0x9172b1d4
  40ffce:	mov    ebp,0x392bd983
  40ffd3:	outs   dx,DWORD PTR ds:[esi]
  40ffd4:	(bad)  
  40ffd5:	mov    cl,0x55
  40ffd7:	and    bl,BYTE PTR [ebp-0x3e]
  40ffda:	fist   DWORD PTR [esi]
  40ffdc:	and    BYTE PTR [edx],al
  40ffde:	sub    BYTE PTR [ebx-0x44f105a9],dh
  40ffe4:	cli    
  40ffe5:	xchg   ebx,eax
  40ffe6:	mov    esi,0xfd25f146
  40ffeb:	je     0x410016
  40ffed:	xor    BYTE PTR [edx-0x1f2f968b],0x24
  40fff4:	jge    0x410038
  40fff6:	retf   0x6522
  40fff9:	add    dl,BYTE PTR [ebx+0x77]
  40fffc:	pop    esp
  40fffd:	adc    al,0x22
  40ffff:	js     0x41002a
  410001:	jbe    0x40ffa0
  410003:	pop    ebx
  410004:	mov    ah,0x79
  410006:	shl    BYTE PTR [edx+0x1e419860],1
  41000c:	mov    al,bh
  41000e:	jecxz  0x410064
  410010:	fidiv  WORD PTR [ecx]
  410012:	pushf  
  410013:	ins    BYTE PTR es:[edi],dx
  410014:	fisub  WORD PTR [esi-0x17a38d40]
  41001a:	push   0x19f82440
  41001f:	jno    0x40ffca
  410021:	rol    DWORD PTR [ebx-0x23],0xe9
  410025:	(bad)  
  410026:	aam    0xca
  410028:	cmp    BYTE PTR [ecx],ah
  41002a:	test   eax,0x36dc73c4
  41002f:	in     al,dx
  410030:	xchg   edi,eax
  410031:	sbb    al,0xde
  410033:	aaa    
  410034:	icebp  
  410035:	fldenv ds:[edx]
  410038:	outs   dx,BYTE PTR ds:[esi]
  410039:	test   ebp,edx
  41003b:	adc    bh,BYTE PTR [edi+0x2a511766]
  410041:	ds loope 0x410013
  410044:	inc    eax
  410045:	xor    bl,dh
  410047:	jb     0x410087
  410049:	repz push edi
  41004b:	ret    0x679e
  41004e:	sub    bl,BYTE PTR [ebx+0x19494e4c]
  410054:	inc    ebp
  410055:	shl    DWORD PTR [ebx+0xc5ee7c],cl
  41005b:	pop    edx
  41005c:	(bad)  
  41005d:	inc    edi
  41005e:	pop    ds
  41005f:	push   ecx
  410060:	xor    bh,0xc2
  410063:	xchg   esp,eax
  410064:	mov    dl,0x27
  410066:	pop    ecx
  410067:	cmp    dh,BYTE PTR [eax]
  410069:	push   edx
  41006a:	pop    ss
  41006b:	push   0xffffffdb
  41006d:	jl     0x41005c
  41006f:	std    
  410070:	dec    esp
  410071:	inc    ecx
  410072:	pop    edx
  410073:	mul    BYTE PTR [eax-0xe8077ed]
  410079:	scas   eax,DWORD PTR es:[edi]
  41007a:	lea    edi,[edi]
  41007c:	xor    bl,BYTE PTR [ebx]
  41007e:	inc    edx
  41007f:	push   ebp
  410080:	or     eax,0xb15cae88
  410085:	push   es
  410086:	jg     0x410011
  410088:	sub    DWORD PTR [ebx-0x45a77820],ecx
  41008e:	(bad)  
  41008f:	adc    eax,DWORD PTR [ebx-0x28]
  410092:	ficom  DWORD PTR [eax+0x6a]
  410095:	xor    eax,0x651373ec
  41009a:	mov    ecx,esi
  41009c:	frstor [ebp+esi*2-0x77]
  4100a0:	pop    ecx
  4100a1:	inc    ecx
  4100a2:	pop    ss
  4100a3:	pusha  
  4100a4:	xchg   esp,eax
  4100a5:	jmp    FWORD PTR [eax]
  4100a7:	mov    bh,0xf4
  4100a9:	imul   esi,edi,0x4c2a4c0e
  4100af:	xchg   esp,eax
  4100b0:	mov    ecx,0x9e53df8f
  4100b5:	mov    esi,0xc68353b4
  4100ba:	lock fsubrp st(0),st
  4100bd:	inc    ebp
  4100be:	jbe    0x4100c3
  4100c0:	dec    esp
  4100c1:	ja     0x4100f0
  4100c3:	jnp    0x4100db
  4100c5:	call   0xeed86b13
  4100ca:	jnp    0x4100cd
  4100cc:	jnp    0x4100b5
  4100ce:	sbb    DWORD PTR [eax],0x65ea2f0
  4100d4:	pop    ebx
  4100d5:	mov    DWORD PTR [ebp+0x437874f1],ebx
  4100db:	aaa    
  4100dc:	sbb    eax,0xdf5dae70
  4100e1:	cdq    
  4100e2:	jnp    0x4100ca
  4100e4:	inc    ebp
  4100e5:	add    eax,0xd3a3c194
  4100ea:	and    al,0xf9
  4100ec:	in     al,dx
  4100ed:	xor    DWORD PTR [ebx],ebx
  4100ef:	stc    
  4100f0:	(bad)  
  4100f1:	xor    edi,DWORD PTR [eax+0xc3e5e59]
  4100f7:	jb     0x4100d9
  4100f9:	add    eax,0x486ac720
  4100fe:	sbb    DWORD PTR [eax-0x6a65270f],edi
  410104:	popf   
  410105:	inc    esi
  410106:	nop
  410107:	cld    
  410108:	or     esp,eax
  41010a:	ins    DWORD PTR es:[edi],dx
  41010b:	stos   BYTE PTR es:[edi],al
  41010c:	inc    edi
  41010d:	cmp    DWORD PTR [eax],0x5ecfc5a8
  410113:	data16 jb 0x4100ed
  410116:	test   BYTE PTR [esi],ah
  410118:	jle    0x4100f2
  41011a:	cmp    BYTE PTR [ebx],ch
  41011c:	in     al,0xc4
  41011e:	mov    ebx,0x483ad20
  410123:	in     al,dx
  410124:	sub    eax,0xfc23207f
  410129:	adc    al,0x82
  41012b:	out    0x5,eax
  41012d:	in     al,dx
  41012e:	icebp  
  41012f:	push   ebp
  410130:	in     al,dx
  410131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410132:	sub    dh,BYTE PTR [esi+ebx*2]
  410135:	xor    bh,0x5c
  410138:	inc    eax
  410139:	rcl    DWORD PTR [eax],cl
  41013b:	or     edx,edi
  41013d:	ja     0x41014a
  41013f:	add    DWORD PTR [esi],eax
  410141:	repz fwait
  410143:	into   
  410144:	mov    dh,0x5d
  410146:	and    eax,0x926983f
  41014c:	add    esp,DWORD PTR [ebx]
  41014e:	mul    bh
  410150:	sub    bl,dl
  410152:	dec    edi
  410153:	dec    ecx
  410154:	mov    ds:0xe13ca029,eax
  410159:	(bad)  
  41015a:	lock adc eax,0x2ee225d4
  410160:	sub    al,BYTE PTR [esi-0x3f68bd55]
  410166:	push   esi
  410167:	mov    cs,WORD PTR [edi-0x7c]
  41016a:	adc    dh,BYTE PTR [edx+0x78f5a04f]
  410170:	imul   ecx,DWORD PTR [ecx+eiz*4+0x7fb7d6c5],0xe1b170b2
  41017b:	xchg   ecx,eax
  41017c:	aas    
  41017d:	outs   dx,DWORD PTR ds:[esi]
  41017e:	add    cl,ah
  410180:	inc    ecx
  410181:	neg    bh
  410183:	push   ss
  410184:	xor    DWORD PTR [ebx],0x38
  410187:	and    bl,dl
  410189:	popf   
  41018a:	or     esp,DWORD PTR [eax+0x2b]
  41018d:	das    
  41018e:	test   DWORD PTR [esi+0x710b40fb],edi
  410194:	dec    bh
  410196:	mov    ah,0xa0
  410198:	test   al,0xd9
  41019a:	dec    esp
  41019b:	xchg   BYTE PTR [esi+ebx*2],ah
  41019e:	int    0x0
  4101a0:	adc    bh,bh
  4101a2:	stos   BYTE PTR es:[edi],al
  4101a3:	aam    0xc5
  4101a5:	sub    DWORD PTR [ecx+0x20],edi
  4101a8:	shr    BYTE PTR [ebp-0x71],cl
  4101ab:	test   BYTE PTR ds:0xcd4c,ah
  4101b0:	mov    bl,0x41
  4101b2:	or     eax,0xc450a620
  4101b7:	push   edi
  4101b8:	mov    ds:0x51c3e000,eax
  4101bd:	inc    esi
  4101be:	cmp    eax,0x4ade4fcf
  4101c3:	repz in eax,0x2
  4101c6:	mov    ah,0x15
  4101c8:	pop    esi
  4101c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101ca:	sahf   
  4101cb:	ret    0x5784
  4101ce:	pop    edi
  4101cf:	sbb    BYTE PTR [ebx],0x98
  4101d2:	xchg   ebp,eax
  4101d3:	jg     0x4101d1
  4101d5:	dec    esi
  4101d6:	xchg   ebp,eax
  4101d7:	pop    esp
  4101d8:	or     BYTE PTR [esi],0x71
  4101db:	sub    eax,0xd96715b3
  4101e0:	fcomp  st(7)
  4101e2:	(bad)  
  4101e3:	push   0xffffffaa
  4101e5:	jle    0x410250
  4101e7:	loop   0x41022f
  4101e9:	popa   
  4101ea:	or     bh,dl
  4101ec:	xor    ebp,DWORD PTR [edx+eax*8-0x8d027d8]
  4101f3:	mov    ebx,0x26720332
  4101f8:	imul   eax
  4101fa:	ss retf 0x3183
  4101fe:	cmp    BYTE PTR [edx],dl
  410200:	mov    BYTE PTR [esi-0x2d],dh
  410203:	inc    eax
  410204:	clc    
  410205:	es jno 0x410274
  410208:	xchg   DWORD PTR [eax-0x53],ebp
  41020b:	add    bl,BYTE PTR [esi+eax*1]
  41020e:	cmp    ebx,DWORD PTR [ecx]
  410210:	and    eax,0x79cf5f28
  410215:	jle    0x41019c
  410217:	push   ebp
  410218:	or     al,BYTE PTR [ebx]
  41021a:	imul   edi,DWORD PTR [ebx],0xd
  41021d:	adc    ah,al
  41021f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410220:	mov    ebx,0x6ab9b4b6
  410225:	outs   dx,DWORD PTR ds:[esi]
  410226:	xchg   BYTE PTR [ebx],dl
  410228:	test   esi,eax
  41022a:	sub    edi,DWORD PTR ss:[esi-0x1]
  41022e:	xchg   edi,eax
  41022f:	repz repz jle 0x410203
  410233:	ret    0x9d01
  410236:	xchg   ecx,eax
  410237:	jg     0x4101fe
  410239:	mov    ch,0xa1
  41023b:	mov    dl,0x71
  41023d:	loope  0x410271
  41023f:	outs   dx,DWORD PTR ds:[esi]
  410240:	(bad)  
  410241:	call   0xee309a41
  410246:	shl    dh,cl
  410248:	sub    ecx,ebp
  41024a:	mov    cl,0xa1
  41024c:	popf   
  41024d:	repz adc ch,BYTE PTR [edx+0x4b17acb9]
  410254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410255:	stc    
  410256:	mov    esi,gs
  410258:	xor    DWORD PTR [ecx+edx*2],eax
  41025b:	call   0xb493068c
  410260:	outs   dx,BYTE PTR ds:[esi]
  410261:	jne    0x4102c0
  410263:	xor    BYTE PTR [ebx],0x53
  410266:	push   esp
  410267:	retf   
  410268:	sar    BYTE PTR [ebp-0x7ca45b01],0xa6
  41026f:	fidivr WORD PTR [ecx+0x55bc8d96]
  410275:	cmp    eax,0x41598b2c
  41027a:	dec    edx
  41027b:	sbb    edx,DWORD PTR [esi]
  41027d:	cmp    ch,BYTE PTR [edi+0x5b]
  410280:	test   BYTE PTR [eax+0x2a9f6c1],ch
  410286:	std    
  410287:	outs   dx,DWORD PTR ds:[esi]
  410288:	sbb    DWORD PTR [ebp-0x24],edx
  41028b:	jne    0x410283
  41028d:	jge    0x410264
  41028f:	(bad)  [eax-0x554ce35e]
  410295:	loopne 0x410260
  410297:	pop    ebx
  410298:	loopne 0x4102ed
  41029a:	xor    DWORD PTR [edx+0x309b7764],ebx
  4102a0:	lods   eax,DWORD PTR ds:[esi]
  4102a1:	test   BYTE PTR [eax+0x72],0xe9
  4102a5:	mov    ch,0x88
  4102a7:	mov    DWORD PTR [ebx-0xf],edx
  4102aa:	popa   
  4102ab:	lock fcmovu st,st(0)
  4102ae:	into   
  4102af:	pusha  
  4102b0:	je     0x410263
  4102b2:	jae    0x41023f
  4102b4:	xchg   esp,eax
  4102b5:	fidivr WORD PTR [eax]
  4102b7:	arpl   cx,si
  4102b9:	xor    cl,BYTE PTR [eax+0x64]
  4102bc:	call   0x5bc4:0x9cb16a4c
  4102c3:	icebp  
  4102c4:	in     eax,dx
  4102c5:	and    ch,bh
  4102c7:	mov    eax,0x160cfa91
  4102cc:	sub    DWORD PTR [ebp-0x20],edi
  4102cf:	mov    edi,0x54e72048
  4102d4:	(bad)  
  4102d5:	and    al,0x8c
  4102d7:	rol    ah,1
  4102d9:	fisttp WORD PTR [eax-0x26]
  4102dc:	xchg   ebp,eax
  4102dd:	mov    edx,0xbda2476
  4102e2:	popa   
  4102e3:	addr16 popf 
  4102e5:	repnz xor DWORD PTR [edi],0x816eb268
  4102ec:	cmp    ecx,edx
  4102ee:	iret   
  4102ef:	push   ecx
  4102f0:	dec    ebp
  4102f1:	cmp    BYTE PTR [ebx+0x32ac7c4],0x85
  4102f8:	sbb    DWORD PTR [esi+esi*2],ebp
  4102fb:	and    ebx,esi
  4102fd:	dec    ecx
  4102fe:	jge    0x410299
  410300:	das    
  410301:	out    0x8a,al
  410303:	rcr    BYTE PTR [ecx+0x24],cl
  410306:	cld    
  410307:	pop    es
  410308:	mov    ah,0xfa
  41030a:	add    bl,0xac
  41030d:	dec    edx
  41030e:	mov    ch,ch
  410310:	dec    ebx
  410311:	stos   BYTE PTR es:[edi],al
  410312:	xor    al,0xa6
  410314:	(bad)  
  410316:	shr    BYTE PTR [ebx-0x46],cl
  410319:	and    edx,edi
  41031b:	jge    0x4102fb
  41031d:	rol    ah,cl
  41031f:	enter  0x72ec,0x65
  410323:	or     DWORD PTR [esi+ebx*8-0x6d57154f],ebp
  41032a:	jmp    0xb05d:0x860c8c9e
  410331:	ror    BYTE PTR [edx+0x1f],1
  410334:	repnz imul edi,edi,0xffffff93
  410338:	cmp    BYTE PTR [ecx+edi*8],bl
  41033b:	scas   eax,DWORD PTR es:[edi]
  41033c:	mov    esp,0x782a0de0
  410341:	ret    
  410342:	and    bh,BYTE PTR [edi]
  410344:	inc    eax
  410345:	jbe    0x4103c5
  410347:	sub    DWORD PTR [ebx],esp
  410349:	pop    ds
  41034a:	fmul   st(5),st
  41034c:	mov    ss,WORD PTR [ebx]
  41034e:	cli    
  41034f:	pop    es
  410350:	add    BYTE PTR [esi*4-0x6a73fab5],0xbb
  410358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410359:	mov    ebp,0xb89de5df
  41035e:	sahf   
  41035f:	loope  0x4103cc
  410361:	out    0x3c,al
  410363:	mov    ds:0x96fee704,eax
  410368:	mov    eax,0x368db536
  41036d:	adc    eax,0xb30a30ad
  410372:	or     ebx,DWORD PTR [edx-0x4a]
  410375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410376:	outs   dx,DWORD PTR ds:[esi]
  410377:	in     eax,dx
  410378:	mov    bh,0x17
  41037a:	lock loope 0x41038e
  41037d:	sub    BYTE PTR [ecx-0x5efb7363],cl
  410383:	(bad)  
  410384:	sbb    al,0x68
  410386:	std    
  410387:	into   
  410388:	push   edx
  410389:	gs retf 0x7a04
  41038d:	push   ds
  41038e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41038f:	sbb    ecx,DWORD PTR [eax-0x5f]
  410392:	ins    DWORD PTR es:[edi],dx
  410393:	mov    bh,0x6a
  410395:	(bad)  
  410396:	xchg   ecx,eax
  410397:	inc    esp
  410398:	mov    DWORD PTR [ebp-0x57001d35],ebx
  41039e:	imul   ecx,ebp,0xd5f278ee
  4103a4:	or     esp,DWORD PTR [esi+0x61]
  4103a7:	add    eax,0x8b2ff8be
  4103ac:	sub    eax,0x8a9c5d06
  4103b1:	inc    edx
  4103b2:	loopne 0x4103c5
  4103b4:	test   eax,0x744affa
  4103b9:	pop    esp
  4103ba:	adc    DWORD PTR [ecx+ebx*1-0x6eee41f0],edi
  4103c1:	mov    ds:0xe6a18996,eax
  4103c6:	loopne 0x4103c6
  4103c8:	adc    BYTE PTR [edx],bh
  4103ca:	cmp    BYTE PTR [ebp-0x37],ah
  4103cd:	ins    DWORD PTR es:[edi],dx
  4103ce:	sbb    al,0x5b
  4103d0:	mov    bl,0x1c
  4103d2:	sbb    eax,ebp
  4103d4:	jo     0x410445
  4103d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103d7:	mov    ebx,0x7708678a
  4103dc:	mov    ah,0xbe
  4103de:	retf   0x4a1c
  4103e1:	mov    DWORD PTR [ecx+0x5b],esi
  4103e4:	xor    dl,BYTE PTR [ebx-0x23]
  4103e7:	stos   DWORD PTR es:[edi],eax
  4103e8:	inc    ebp
  4103e9:	mov    DWORD PTR [ebx+0x6ea952ee],0x8387119b
  4103f3:	mov    ebp,0xec60fd25
  4103f8:	add    dh,BYTE PTR fs:[esi]
  4103fb:	xchg   ebp,eax
  4103fc:	adc    al,0xc6
  4103fe:	jecxz  0x4103a0
  410400:	push   ebx
  410401:	pop    edx
  410402:	repz fisubr DWORD PTR [esi+0x59272390]
  410409:	pushf  
  41040a:	and    eax,DWORD PTR ds:0xbd10503f
  410410:	pushf  
  410411:	mov    dh,0x4f
  410413:	sbb    eax,0x939c2968
  410418:	in     eax,dx
  410419:	sub    ah,BYTE PTR [eax]
  41041b:	sub    al,0xfa
  41041d:	jl     0x410441
  41041f:	or     al,0xb1
  410421:	and    al,0x1c
  410423:	ds add bl,0x2c
  410427:	shl    DWORD PTR [ecx-0x5],0x89
  41042b:	xchg   edi,eax
  41042c:	xor    al,0x6f
  41042e:	(bad)  
  41042f:	ror    BYTE PTR [ebx],1
  410431:	(bad)
  410435:	pop    ebp
  410436:	or     al,0x2b
  410438:	mov    al,ds:0x3654844b
  41043d:	sahf   
  41043e:	loope  0x410478
  410440:	xor    BYTE PTR [ebx-0x3a],dl
  410443:	xchg   BYTE PTR [ebx+0x29af91ce],cl
  410449:	dec    ecx
  41044a:	inc    edi
  41044b:	les    esi,FWORD PTR [edi]
  41044d:	cs js  0x41045a
  410450:	(bad)  
  410451:	dec    ebp
  410452:	pop    esp
  410453:	cli    
  410454:	mov    dl,0x13
  410456:	pop    esp
  410457:	(bad)  
  410458:	hlt    
  410459:	aaa    
  41045a:	and    bl,ah
  41045c:	jmp    0x516d5b10
  410461:	fimul  WORD PTR [eax+0x10a3606e]
  410467:	inc    eax
  410468:	mov    eax,ds:0xc256eec1
  41046d:	add    al,0x8d
  410470:	push   edi
  410471:	sysexit 
  410473:	mov    ch,0xdb
  410475:	out    0x59,al
  410477:	adc    BYTE PTR [edx+0x44537ac6],cl
  41047d:	iret   
  41047e:	add    al,0x8
  410480:	add    dh,ch
  410482:	loopne 0x4104d5
  410484:	jge    0x410453
  410486:	stos   DWORD PTR es:[edi],eax
  410487:	jl     0x410489
  410489:	jmp    0x51a406eb
  41048e:	push   0xffffffe0
  410490:	sub    al,0x42
  410492:	iret   
  410493:	push   ss
  410494:	ror    ch,cl
  410496:	mov    eax,ds:0xe824fb8d
  41049b:	addr16 push ebp
  41049d:	inc    ebp
  41049e:	sbb    ebp,DWORD PTR [ecx-0x2a]
  4104a1:	fisttp WORD PTR [ebx+edi*2]
  4104a4:	inc    edi
  4104a5:	sar    BYTE PTR [edi+0x547fe03c],0xc8
  4104ac:	aad    0xa2
  4104ae:	or     eax,0x270a3803
  4104b3:	imul   ebx,DWORD PTR [ecx+0x530cf269],0x7a
  4104ba:	sbb    eax,0x3bc20b1e
  4104bf:	mov    edi,0x8caf6b90
  4104c4:	jne    0x410463
  4104c6:	jo     0x4104e3
  4104c8:	dec    ecx
  4104c9:	scas   eax,DWORD PTR es:[edi]
  4104ca:	inc    eax
  4104cb:	push   ecx
  4104cc:	jmp    0xf0f2:0x4db2e473
  4104d3:	or     BYTE PTR [ebx],0x66
  4104d6:	mov    al,ds:0x2e67bfea
  4104db:	daa    
  4104dc:	xor    bl,BYTE PTR [edx-0x843305d]
  4104e2:	lea    ebp,[eax]
  4104e4:	bnd jae 0x410489
  4104e7:	inc    edi
  4104e8:	scas   al,BYTE PTR es:[edi]
  4104e9:	xchg   ebp,eax
  4104ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104eb:	in     al,0xc7
  4104ed:	out    0x4c,eax
  4104ef:	xchg   ebx,eax
  4104f0:	and    eax,esp
  4104f2:	push   es
  4104f3:	jp     0x410550
  4104f5:	mov    edi,0xedd053e9
  4104fa:	xchg   esp,eax
  4104fb:	call   0xe23c:0xea197cb2
  410502:	or     al,0x18
  410504:	xor    esi,DWORD PTR [eax]
  410506:	repnz std 
  410508:	and    bh,BYTE PTR [edi]
  41050a:	xchg   esi,eax
  41050b:	ror    eax,0xcc
  41050e:	cs out 0xe5,eax
  410511:	xor    eax,0x29463d7d
  410516:	aam    0xc7
  410518:	fst    DWORD PTR [eax+0x3f]
  41051b:	jo     0x4104bf
  41051d:	or     BYTE PTR [ebp-0x23856418],cl
  410523:	mov    esi,0xd8926021
  410528:	push   0x16
  41052a:	push   0x6c
  41052c:	add    ebx,DWORD PTR [edx]
  41052e:	add    al,0xc5
  410530:	add    al,0x5c
  410532:	cli    
  410533:	pop    ebx
  410534:	jno    0x41053a
  410536:	fstp   DWORD PTR [ecx+0x422290e6]
  41053c:	leave  
  41053d:	retf   0xc369
  410540:	repz pushf 
  410542:	aam    0xa0
  410544:	mov    ch,0xab
  410546:	dec    esp
  410547:	cdq    
  410548:	inc    esp
  410549:	jmp    0xa3b9:0xed2db372
  410550:	aam    0xf
  410552:	dec    ebx
  410553:	std    
  410554:	shr    DWORD PTR [ecx+0x55],cl
  410557:	jp     0x4104fb
  410559:	and    al,0x55
  41055b:	mov    ch,0xa8
  41055d:	(bad)  
  41055e:	lahf   
  41055f:	aaa    
  410560:	push   ss
  410561:	jns    0x41058a
  410563:	js     0x41054d
  410565:	mov    al,0xae
  410567:	rep lods eax,DWORD PTR ds:[esi]
  410569:	mov    esp,0x1dba02c2
  41056e:	xchg   edx,eax
  41056f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410570:	jp     0x41057c
  410572:	hlt    
  410573:	cdq    
  410574:	nop
  410575:	je     0x410503
  410577:	into   
  410578:	inc    ebp
  410579:	pop    ecx
  41057a:	aas    
  41057b:	lods   eax,DWORD PTR ds:[esi]
  41057c:	mov    esi,edx
  41057e:	or     bh,dl
  410580:	inc    ebp
  410581:	xchg   ebx,eax
  410582:	clc    
  410583:	add    BYTE PTR [esi-0x79],bh
  410586:	dec    esp
  410587:	cld    
  410588:	xchg   ebp,eax
  410589:	xor    DWORD PTR [ebx-0x5c],edi
  41058c:	push   ebx
  41058d:	aas    
  41058e:	dec    ebp
  41058f:	mov    ds:0x3786e634,eax
  410594:	jae    0x410575
  410596:	dec    edx
  410597:	dec    ebx
  410598:	cld    
  410599:	sub    al,0x92
  41059b:	or     eax,0x567a94fb
  4105a0:	push   ebx
  4105a1:	sbb    eax,0x557f50a1
  4105a6:	adc    DWORD PTR [eax+0x483f050],edx
  4105ac:	jbe    0x41053b
  4105ae:	cwde   
  4105af:	push   ss
  4105b0:	sbb    esp,DWORD PTR [edx-0x2e]
  4105b3:	mov    ds:0xf6082f2d,eax
  4105b8:	iret   
  4105b9:	xchg   eax,edx
  4105bb:	lds    edi,FWORD PTR [esi+ebp*2]
  4105be:	fcomp  DWORD PTR [ebx-0x2aaceee1]
  4105c4:	inc    esp
  4105c5:	dec    esi
  4105c6:	and    BYTE PTR [edx],dh
  4105c8:	xor    eax,0xd5ef9c88
  4105cd:	adc    al,0x59
  4105cf:	rcl    ah,1
  4105d1:	mov    ebx,0xbb9b052d
  4105d6:	pop    edi
  4105d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105d8:	xor    edx,DWORD PTR [ebx-0x4331c33c]
  4105de:	int    0xc7
  4105e0:	ins    DWORD PTR es:[edi],dx
  4105e1:	push   ss
  4105e2:	fs out dx,eax
  4105e4:	imul   ch
  4105e6:	jmp    0x41056f
  4105e8:	mov    bl,0x2d
  4105ea:	jecxz  0x41066b
  4105ec:	test   BYTE PTR [edx-0x428d42d5],bh
  4105f2:	jmp    0xb1d0ff2a
  4105f7:	popa   
  4105f8:	cmp    eax,0x1cb9b91f
  4105fd:	mov    al,0xa8
  4105ff:	add    BYTE PTR [esi-0x49],ch
  410602:	sub    BYTE PTR [eax-0x56],bh
  410605:	pop    eax
  410606:	push   0x5251602b
  41060b:	daa    
  41060c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41060d:	inc    ebx
  41060e:	(bad)  
  410610:	xor    eax,0x14434eb
  410615:	pop    ebx
  410616:	mov    BYTE PTR [ebx],dh
  410618:	add    esi,DWORD PTR [edi-0x3f225a3e]
  41061e:	(bad)
  410623:	nop
  410624:	xor    al,0xa8
  410626:	int3   
  410627:	stc    
  410628:	inc    esp
  410629:	shr    DWORD PTR [esi],cl
  41062b:	adc    edx,ebp
  41062d:	mov    DWORD PTR [eax-0x48],ecx
  410630:	push   edi
  410631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410632:	dec    esp
  410633:	inc    esi
  410634:	push   ebx
  410635:	dec    esp
  410636:	pop    esi
  410637:	hlt    
  410638:	clc    
  410639:	and    eax,0xfa76e88f
  41063e:	scas   eax,DWORD PTR es:[edi]
  41063f:	loop   0x410656
  410641:	dec    ebp
  410642:	frstor [edx]
  410644:	data16 adc BYTE PTR [eax],al
  410647:	xchg   cl,cl
  410649:	xlat   BYTE PTR ds:[ebx]
  41064a:	jp     0x410632
  41064c:	ret    0xd666
  41064f:	sub    cl,bh
  410651:	lea    edx,ds:0x5d4011da
  410657:	ficom  DWORD PTR [eax-0x35]
  41065a:	das    
  41065b:	shr    ecx,0x46
  41065e:	ret    0xf2af
  410661:	add    edx,esi
  410663:	cmp    ch,bl
  410665:	(bad)  
  410666:	cmovle esi,DWORD PTR ds:0x5d3f6bcb
  41066d:	hlt    
  41066e:	pop    edx
  41066f:	(bad)  
  410670:	mov    edx,0x54ebc13f
  410675:	shr    BYTE PTR [edx+0x1c7c5612],0x68
  41067c:	and    ah,BYTE PTR fs:[edi+0x29]
  410680:	in     eax,0x78
  410682:	xor    al,BYTE PTR [esp+eax*2-0x9fec650]
  410689:	xlat   BYTE PTR ds:[ebx]
  41068a:	and    esp,edi
  41068c:	lea    ebx,[eax+0x18b4101c]
  410692:	ficom  DWORD PTR [ebx+edx*1]
  410695:	cli    
  410696:	retf   
  410697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410698:	jo     0x410676
  41069a:	pop    edi
  41069b:	cmp    edi,DWORD PTR [esi-0x7]
  41069e:	(bad)  
  4106a0:	fisttp DWORD PTR [ebx-0x358cb36f]
  4106a6:	call   0x2dbaf5ac
  4106ab:	mov    edx,0xcf637944
  4106b0:	and    DWORD PTR [esp+eax*8-0x75],esi
  4106b4:	mov    ds:0xd0816de4,eax
  4106b9:	inc    edx
  4106ba:	(bad)
  4106bf:	imul   esp,edi,0x7b
  4106c2:	add    edi,DWORD PTR [esi+0x16747c91]
  4106c8:	mov    cl,BYTE PTR [esi-0x6b]
  4106cb:	mov    BYTE PTR [ecx+0x7a40a8e8],dh
  4106d1:	stos   DWORD PTR es:[edi],eax
  4106d2:	dec    ebp
  4106d3:	popa   
  4106d4:	xlat   BYTE PTR ds:[ebx]
  4106d5:	jnp    0x4106c5
  4106d7:	xor    dl,BYTE PTR [edi+0x56]
  4106da:	fadd   QWORD PTR [edi+0x5f13826e]
  4106e0:	nop
  4106e1:	es int3 
  4106e3:	iret   
  4106e4:	fsubr  st(1),st
  4106e6:	adc    DWORD PTR [ecx],ecx
  4106e8:	pusha  
  4106e9:	inc    esi
  4106ea:	sbb    DWORD PTR [ebx],0xf30d2f0f
  4106f0:	dec    eax
  4106f1:	dec    esp
  4106f2:	pushf  
  4106f3:	push   0x47
  4106f5:	xor    dl,BYTE PTR [ebx]
  4106f7:	mov    WORD PTR [esi+0x64],?
  4106fa:	mov    ebp,0x9ecc2603
  4106ff:	fs ret 0x9580
  410703:	inc    ebx
  410704:	mov    ebp,0x105db1cd
  410709:	push   ss
  41070a:	pop    ebx
  41070b:	cmp    eax,0x1d31a7a8
  410710:	push   esi
  410711:	mov    bh,0xd0
  410714:	inc    ebx
  410715:	push   esi
  410716:	cmp    ecx,DWORD PTR fs:[ebx-0x7b]
  41071a:	pop    edx
  41071b:	inc    ebx
  41071c:	or     eax,0x548eab14
  410721:	cli    
  410722:	xor    al,0xa
  410724:	sub    al,0xea
  410726:	adc    DWORD PTR [ecx+0x5a],edi
  410729:	sub    al,0xf2
  41072b:	out    0x46,al
  41072d:	or     BYTE PTR ds:0x9b4e5e68,cl
  410733:	xor    esi,ebp
  410735:	ror    BYTE PTR [ebp+0x2a],0x3e
  410739:	sub    al,0x9a
  41073b:	inc    esi
  41073c:	rcl    edx,0x4f
  41073f:	stos   BYTE PTR es:[edi],al
  410740:	popa   
  410741:	pop    edi
  410742:	pop    es
  410743:	mov    ?,WORD PTR [ecx]
  410745:	hlt    
  410746:	jmp    DWORD PTR [ecx]
  410748:	mov    ebx,eax
  41074a:	add    BYTE PTR [ebx+ebx*1+0x30],ch
  41074e:	push   cs
  41074f:	adc    bl,BYTE PTR [ecx]
  410751:	fcmovbe st,st(7)
  410753:	scas   al,BYTE PTR es:[edi]
  410754:	pop    ds
  410755:	mov    ?,edi
  410757:	xchg   ebx,eax
  410758:	or     ebp,DWORD PTR [ecx+0x343a938a]
  41075e:	in     eax,0xb
  410760:	xchg   DWORD PTR [esi-0x12],edx
  410763:	leave  
  410764:	push   esp
  410765:	cld    
  410766:	das    
  410767:	lea    edx,[edx]
  410769:	jp     0x410701
  41076b:	popf   
  41076c:	add    eax,esp
  41076e:	fld    TBYTE PTR [edi+0x2729136f]
  410774:	mov    ch,cl
  410776:	and    esp,DWORD PTR [eax+0xb23c121]
  41077c:	int3   
  41077d:	dec    esi
  41077e:	add    bh,BYTE PTR [ecx-0x79e82122]
  410784:	aad    0xc2
  410786:	arpl   WORD PTR [ebp+ecx*8+0x31],bp
  41078a:	lahf   
  41078b:	pop    es
  41078c:	sub    dh,BYTE PTR [ecx+0x2208513c]
  410792:	shl    DWORD PTR [esi],0x96
  410795:	shl    esp,1
  410797:	stos   BYTE PTR es:[edi],al
  410798:	xor    eax,0x8f545a37
  41079d:	stos   DWORD PTR es:[edi],eax
  41079e:	stc    
  41079f:	fs and al,0x10
  4107a2:	in     al,dx
  4107a3:	xchg   esp,eax
  4107a4:	sbb    edx,DWORD PTR [ecx+ebp*4+0x6580f590]
  4107ab:	sub    al,0x85
  4107ad:	std    
  4107ae:	sbb    cl,ah
  4107b0:	ds stos DWORD PTR es:[edi],eax
  4107b2:	iret   
  4107b3:	icebp  
  4107b4:	test   ecx,esp
  4107b6:	lods   al,BYTE PTR ds:[esi]
  4107b7:	sar    DWORD PTR [eax+0x15],1
  4107ba:	rol    BYTE PTR [ecx-0x62],1
  4107bd:	xchg   esi,eax
  4107be:	icebp  
  4107bf:	or     bl,BYTE PTR [ecx+ebx*8]
  4107c2:	or     dh,al
  4107c4:	inc    ecx
  4107c5:	sub    eax,0x8c89a953
  4107ca:	xlat   BYTE PTR ds:[ebx]
  4107cb:	and    eax,0x57ed0930
  4107d0:	add    eax,0xa3df04c2
  4107d5:	retf   
  4107d6:	sub    DWORD PTR [ecx-0x11],esp
  4107d9:	(bad)  
  4107da:	cmp    al,0x71
  4107dc:	imul   edx,DWORD PTR [ebp-0x73],0xb98e07fb
  4107e3:	jae    0x410841
  4107e5:	adc    dl,bl
  4107e7:	pop    ds
  4107e8:	jmp    0x90e8:0xbf00c0c0
  4107ef:	mov    cl,0xc1
  4107f1:	add    dh,BYTE PTR [edx+0x6b]
  4107f4:	inc    ebx
  4107f5:	sbb    ebp,DWORD PTR [esi]
  4107f7:	xchg   ecx,eax
  4107f8:	sbb    ah,ah
  4107fa:	mov    WORD PTR [eax-0x67a6650e],?
  410800:	or     al,0x39
  410802:	ret    0x8aad
  410805:	mov    dh,0x47
  410807:	mov    bh,0x57
  410809:	xchg   dh,al
  41080b:	out    0x16,al
  41080d:	popf   
  41080e:	stc    
  41080f:	fcmovne st,st(3)
  410811:	pop    ss
  410812:	mov    eax,0xd2b481e3
  410817:	add    edx,0x46
  41081a:	ds push ds
  41081c:	sbb    ebp,DWORD PTR [ebp+0x2ce9f90a]
  410822:	add    dh,BYTE PTR [esi-0x622c0254]
  410828:	fucomip st,st(7)
  41082a:	pop    esi
  41082b:	jle    0x41087d
  41082d:	scas   al,BYTE PTR es:[edi]
  41082e:	jnp    0x4107f4
  410830:	fdivr  DWORD PTR [ebp+0x18adada9]
  410836:	ret    
  410837:	adc    eax,DWORD PTR cs:[ebp+0x737e2a30]
  41083e:	cwde   
  41083f:	sbb    edi,esp
  410841:	gs inc esp
  410843:	add    al,0xdf
  410845:	icebp  
  410846:	pop    esp
  410847:	cwde   
  410848:	pop    ds
  410849:	cld    
  41084a:	pop    esi
  41084b:	mov    fs,WORD PTR ss:[eax]
  41084e:	leave  
  41084f:	ss inc esp
  410851:	cmp    DWORD PTR [eax-0x79cf5051],edi
  410857:	push   ss
  410858:	jno    0x4107ec
  41085a:	icebp  
  41085b:	inc    edi
  41085c:	mov    ah,BYTE PTR [ecx-0x58]
  41085f:	sbb    ecx,ebp
  410861:	(bad)  
  410863:	std    
  410864:	inc    ebx
  410865:	jo     0x410867
  410867:	lock rcl BYTE PTR ss:[eax-0x30],1
  41086c:	sub    al,0x84
  41086e:	mov    cl,0x16
  410870:	sub    BYTE PTR [edx+0x2498dbdc],ah
  410876:	(bad)  [esi+0x8]
  410879:	pop    eax
  41087a:	mov    WORD PTR [edx-0x4f],?
  41087d:	adc    bl,bh
  41087f:	cmc    
  410880:	int    0xa5
  410882:	xchg   DWORD PTR [edx+0x4a000674],edx
  410888:	out    0x10,eax
  41088a:	test   BYTE PTR [ebp-0x20216c7d],cl
  410890:	add    al,0xd8
  410892:	stos   DWORD PTR es:[edi],eax
  410893:	arpl   WORD PTR ds:0x20c810bd,sp
  410899:	(bad)
  41089c:	sbb    al,0x6e
  41089e:	leave  
  41089f:	inc    eax
  4108a0:	retf   0xc5fb
  4108a3:	std    
  4108a4:	cmp    al,0xd2
  4108a6:	cmp    edx,edx
  4108a8:	pop    eax
  4108a9:	jbe    0x4108b6
  4108ab:	sub    bh,BYTE PTR [eax-0x36]
  4108ae:	ins    DWORD PTR es:[edi],dx
  4108af:	cdq    
  4108b0:	jl     0x410889
  4108b2:	lahf   
  4108b3:	xor    eax,0x46403348
  4108b8:	dec    edx
  4108b9:	mov    cl,0xb
  4108bb:	in     eax,dx
  4108bc:	push   esi
  4108bd:	ret    
  4108be:	jmp    0x410873
  4108c0:	std    
  4108c1:	jmp    0x78a6:0xa978dde1
  4108c8:	inc    esp
  4108c9:	test   ah,cl
  4108cb:	fnstsw WORD PTR [ecx-0x3103c55f]
  4108d1:	dec    edx
  4108d2:	cmc    
  4108d3:	push   es
  4108d4:	test   eax,0x6ddfa5c6
  4108d9:	scas   al,BYTE PTR es:[edi]
  4108da:	imul   eax,DWORD PTR [eax+edi*2+0x6ff6a6b3],0xf642cd26
  4108e5:	add    dl,ah
  4108e7:	mov    al,ds:0x49f9adf0
  4108ec:	mov    eax,DWORD PTR [edi-0x46]
  4108ef:	push   esi
  4108f0:	cwde   
  4108f1:	mov    ah,0x5e
  4108f3:	inc    esi
  4108f4:	sbb    DWORD PTR [ebp-0x12c31162],esi
  4108fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108fb:	sub    eax,0x58fc3418
  410900:	pushf  
  410901:	push   ecx
  410902:	cmp    esp,DWORD PTR [ebp+0x77]
  410905:	fs and eax,0xc99c0504
  41090b:	popa   
  41090c:	leave  
  41090d:	pop    ebx
  41090e:	int3   
  41090f:	or     al,ch
  410911:	dec    ebp
  410912:	aam    0xd1
  410914:	adc    eax,0xf7544bc1
  410919:	push   DWORD PTR [eax+esi*2-0x5f]
  41091d:	jecxz  0x4108c7
  41091f:	dec    edx
  410920:	adc    DWORD PTR [esp+eax*2+0x6d],ebx
  410924:	cdq    
  410925:	mov    cl,cl
  410927:	and    DWORD PTR [esi-0x50],ebx
  41092a:	jne    0x4108b5
  41092c:	jns    0x4108ef
  41092e:	pop    ss
  41092f:	out    0xfd,al
  410931:	xchg   cl,ch
  410933:	cmp    bl,ah
  410935:	(bad)  
  410939:	leave  
  41093a:	popf   
  41093b:	adc    esi,ebx
  41093d:	daa    
  41093e:	pop    ds
  41093f:	xor    bh,bl
  410941:	dec    eax
  410942:	push   ecx
  410943:	mov    al,0x1e
  410945:	push   ecx
  410946:	into   
  410947:	cmp    ah,BYTE PTR [edx-0x3e8772b2]
  41094d:	cdq    
  41094e:	rcr    BYTE PTR [ebx+edx*2],0xc3
  410952:	push   esp
  410953:	sbb    DWORD PTR [ecx-0x1c661f7d],esi
  410959:	call   0x3b23b41f
  41095e:	pushf  
  41095f:	lahf   
  410960:	ret    
  410961:	dec    esp
  410962:	cmp    ebp,DWORD PTR [ecx]
  410964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410965:	adc    BYTE PTR [edx+0x73888a18],bh
  41096b:	pop    edi
  41096c:	dec    edi
  41096d:	fistp  WORD PTR [esi]
  41096f:	cdq    
  410970:	into   
  410971:	cmp    al,0x15
  410973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410974:	push   ds
  410975:	and    esp,DWORD PTR [ecx+0x4f15543d]
  41097b:	pop    esp
  41097c:	test   al,0x61
  41097e:	ror    BYTE PTR [esp+ecx*2+0x5e],1
  410982:	pop    ss
  410983:	or     eax,0x40086450
  410988:	add    al,0xa7
  41098a:	sbb    DWORD PTR [ebx+0x246742e4],esi
  410990:	dec    edx
  410991:	cmp    DWORD PTR [esi],ecx
  410993:	pop    ss
  410994:	fisub  WORD PTR [ebx]
  410996:	cdq    
  410997:	mov    ah,0xf7
  410999:	shl    DWORD PTR [esi],0xee
  41099c:	mov    bh,0xb2
  41099e:	(bad)  
  41099f:	aad    0x81
  4109a1:	or     DWORD PTR [ebp+0x69f6f564],edi
  4109a7:	jnp    0x41094e
  4109a9:	jl     0x41097d
  4109ab:	jmp    FWORD PTR [edi-0xc]
  4109ae:	das    
  4109af:	stos   DWORD PTR es:[edi],eax
  4109b0:	adc    cl,BYTE PTR [esp+ecx*2]
  4109b3:	push   es
  4109b4:	fwait
  4109b5:	rcr    dh,cl
  4109b7:	ret    0xdeae
  4109ba:	xor    DWORD PTR [edi+0x5271d2be],esp
  4109c0:	shl    ebx,cl
  4109c2:	and    eax,DWORD PTR cs:[ebx+0x58d257f0]
  4109c9:	xchg   cl,dl
  4109cb:	dec    edi
  4109cc:	in     al,dx
  4109cd:	or     eax,0x1bdd52e4
  4109d2:	ds aad 0x63
  4109d5:	or     bh,dh
  4109d7:	mov    eax,0x34429178
  4109dc:	inc    ecx
  4109dd:	jl     0x4109c1
  4109df:	mov    bl,0x69
  4109e1:	retf   
  4109e2:	pop    ds
  4109e3:	push   edx
  4109e4:	ror    BYTE PTR [ebx+0x4c69dd03],cl
  4109ea:	addr16 inc esp
  4109ec:	mov    esi,0x2b355269
  4109f1:	loopne 0x410a47
  4109f3:	mov    ecx,0x4407efce
  4109f8:	pop    esp
  4109f9:	int    0xc
  4109fb:	fbld   TBYTE PTR [ebx+0x6fb2a38a]
  410a01:	mov    ah,0x84
  410a03:	es gs jns 0x4109e8
  410a07:	mov    es,WORD PTR [eax-0x5f]
  410a0a:	popf   
  410a0b:	frstor [esi]
  410a0d:	out    dx,al
  410a0e:	jle    0x4109cb
  410a10:	outs   dx,DWORD PTR ds:[esi]
  410a11:	mov    bh,0x9f
  410a13:	push   ecx
  410a15:	add    DWORD PTR [esi+0x71],esi
  410a18:	pop    esi
  410a19:	pop    ebx
  410a1a:	sahf   
  410a1b:	out    0xdc,al
  410a1d:	sbb    eax,0x300a4ed1
  410a22:	stc    
  410a23:	sbb    BYTE PTR [eax+eax*4-0x20],dl
  410a27:	sbb    dl,BYTE PTR [ebp-0x2c]
  410a2a:	pop    esi
  410a2b:	sti    
  410a2c:	jbe    0x4109fc
  410a2e:	lods   eax,DWORD PTR ds:[esi]
  410a2f:	rcl    BYTE PTR [eax],cl
  410a31:	cmp    al,0xea
  410a33:	adc    al,0x5b
  410a35:	pop    esi
  410a36:	jbe    0x4109e5
  410a38:	out    dx,al
  410a39:	ss out 0xbb,al
  410a3c:	cli    
  410a3d:	repnz lahf 
  410a3f:	out    0x9c,al
  410a41:	mov    esp,0xd7db2fff
  410a46:	xor    eax,0xe234ee54
  410a4b:	cwde   
  410a4c:	xlat   BYTE PTR ds:[ebx]
  410a4d:	dec    ebp
  410a4e:	fnstsw WORD PTR [edi-0x3d]
  410a51:	(bad)  
  410a52:	lahf   
  410a53:	cmp    al,0x8d
  410a55:	mov    bh,BYTE PTR [esi-0x37]
  410a58:	dec    edi
  410a59:	or     eax,0xa1a2dd81
  410a5e:	pushf  
  410a5f:	pop    esp
  410a60:	call   0xe2c0:0xa90cb8b3
  410a67:	cdq    
  410a68:	in     eax,0x93
  410a6a:	sti    
  410a6b:	mov    ds:0xbc7d09c3,eax
  410a70:	aam    0xc4
  410a72:	xchg   esp,eax
  410a73:	rcl    BYTE PTR [edx+0x5a],0xd9
  410a77:	in     eax,dx
  410a78:	icebp  
  410a79:	rol    ebp,1
  410a7b:	jl     0x410a3e
  410a7d:	or     bl,al
  410a7f:	dec    eax
  410a80:	stc    
  410a81:	fstp   DWORD PTR [edi-0x67]
  410a84:	pop    ebp
  410a85:	out    dx,eax
  410a86:	pushf  
  410a87:	mov    ch,0xb8
  410a89:	inc    eax
  410a8a:	inc    ebp
  410a8b:	in     eax,0xd2
  410a8d:	fsubr  DWORD PTR [eax-0x72]
  410a90:	jbe    0x410a2f
  410a92:	jbe    0x410ae8
  410a94:	jno    0x410ac0
  410a96:	sbb    ch,BYTE PTR [ecx-0x808d8b5]
  410a9c:	leave  
  410a9d:	and    eax,0x3c0a4771
  410aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa3:	push   esp
  410aa4:	xchg   edi,eax
  410aa5:	ret    0x8d93
  410aa8:	das    
  410aa9:	dec    ebp
  410aaa:	jae    0x410af2
  410aac:	push   es
  410aad:	outs   dx,DWORD PTR ds:[esi]
  410aae:	mov    dl,0xef
  410ab0:	jp     0x410a84
  410ab2:	gs scas al,BYTE PTR es:[edi]
  410ab4:	shl    cl,cl
  410ab6:	dec    ebx
  410ab7:	repz mov dl,0xf3
  410aba:	fwait
  410abb:	repz lds edi,FWORD PTR [ebp+0x1c]
  410abf:	cli    
  410ac0:	loopne 0x410b34
  410ac2:	int    0x7a
  410ac4:	rcl    eax,cl
  410ac6:	retf   
  410ac7:	sahf   
  410ac8:	cmp    dl,BYTE PTR [ecx+0x3]
  410acb:	rol    DWORD PTR [eax],0xe
  410ace:	das    
  410acf:	scas   eax,DWORD PTR es:[edi]
  410ad0:	repz scas eax,DWORD PTR es:[edi]
  410ad2:	in     eax,0x5
  410ad4:	or     BYTE PTR [edx],0xe
  410ad7:	icebp  
  410ad8:	lock out 0x1,eax
  410adb:	add    eax,0xdc5d27f2
  410ae0:	mov    ds:0x18483e53,al
  410ae5:	mov    DWORD PTR [edx-0x55890146],edi
  410aeb:	pop    esi
  410aec:	in     eax,dx
  410aed:	sbb    BYTE PTR [esi],0x86
  410af0:	sbb    eax,0x87475fe7
  410af5:	sub    eax,0xfae3878b
  410afa:	xchg   esp,edx
  410afc:	cwde   
  410afd:	call   0xa43f87df
  410b02:	loop   0x410b63
  410b04:	aad    0xb6
  410b06:	inc    esi
  410b07:	inc    edi
  410b08:	jecxz  0x410b24
  410b0a:	xor    esp,0xb7d057c2
  410b10:	icebp  
  410b11:	mov    ebp,0xef160da1
  410b16:	call   0x86e:0x10caed96
  410b1d:	aaa    
  410b1e:	jle    0x410b28
  410b20:	pop    ss
  410b21:	or     DWORD PTR [ecx+0x4e],0x83e775a
  410b28:	in     al,0x12
  410b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b2b:	and    al,0xdb
  410b2d:	adc    eax,0x3d08f435
  410b32:	mov    edx,0xcc664f1
  410b37:	jo     0x410bb8
  410b39:	pop    eax
  410b3a:	xor    eax,0x12e51431
  410b3f:	shl    bl,cl
  410b41:	repnz stc 
  410b43:	jne    0x410af2
  410b45:	add    ah,BYTE PTR [eax+0x42c59beb]
  410b4b:	add    bh,dl
  410b4d:	xor    dl,BYTE PTR [eax]
  410b4f:	fldcw  WORD PTR [edx+ebp*1+0x1e]
  410b53:	mov    al,0x48
  410b55:	fcmovu st,st(5)
  410b57:	inc    ebx
  410b58:	inc    edi
  410b59:	aam    0x32
  410b5b:	mov    dh,0x46
  410b5d:	dec    eax
  410b5e:	cdq    
  410b5f:	inc    ebx
  410b60:	adc    al,0x93
  410b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b63:	iret   
  410b64:	(bad)  
  410b65:	outs   dx,BYTE PTR ds:[esi]
  410b66:	fmul   st,st(4)
  410b68:	sub    al,0x86
  410b6a:	aaa    
  410b6b:	sub    eax,0xb774b138
  410b70:	hlt    
  410b71:	pop    ebp
  410b72:	add    bh,BYTE PTR [eax]
  410b74:	pusha  
  410b75:	outs   dx,BYTE PTR ds:[esi]
  410b76:	sub    bh,BYTE PTR [edx]
  410b78:	add    BYTE PTR [ecx-0x24],0xad
  410b7c:	jo     0x410bc6
  410b7e:	inc    edi
  410b7f:	jne    0x410b7d
  410b81:	lahf   
  410b82:	and    BYTE PTR [ecx-0x5e],cl
  410b85:	and    al,0x4b
  410b87:	mov    eax,0x1b3ab90c
  410b8c:	jae    0x410b32
  410b8e:	retf   
  410b8f:	lock xchg BYTE PTR [edx+ebx*2-0x74],bl
  410b94:	ins    DWORD PTR es:[edi],dx
  410b95:	jle    0x410b90
  410b97:	mov    ds:0xd2f58792,eax
  410b9c:	push   esi
  410b9d:	jmp    0x9d78:0xe86570fc
  410ba4:	int    0xf2
  410ba6:	mov    cl,0xa5
  410ba8:	pop    esi
  410ba9:	imul   esp,DWORD PTR [eax-0x6f],0x61959ffe
  410bb0:	cwde   
  410bb1:	popf   
  410bb2:	js     0x410b3b
  410bb4:	test   al,0xf3
  410bb6:	(bad)  
  410bb8:	shl    DWORD PTR [ecx-0x6938255f],0x4b
  410bbf:	(bad)  
  410bc0:	std    
  410bc1:	test   al,0x9c
  410bc3:	aaa    
  410bc4:	pop    edi
  410bc5:	jge    0x410bc4
  410bc7:	mov    ecx,0xdc0f331e
  410bcc:	mov    BYTE PTR [ecx+edx*4+0x41],0xeb
  410bd1:	(bad)  
  410bd2:	dec    esp
  410bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bd4:	dec    edi
  410bd5:	pop    ss
  410bd6:	(bad)  
  410bd7:	test   eax,0xb040a49e
  410bdc:	xor    BYTE PTR [edx-0x15749fcc],al
  410be2:	mov    WORD PTR [eax-0x657fcc53],?
  410be8:	push   ebx
  410be9:	xchg   ebp,eax
  410bea:	xor    BYTE PTR [ebp-0x13],cl
  410bed:	xor    eax,0xddda0432
  410bf2:	add    esi,esi
  410bf4:	sub    bh,BYTE PTR [edi+0x56f4f7ce]
  410bfa:	ja     0x410c3d
  410bfc:	push   0x2221cf92
  410c01:	mov    esi,0xaede143b
  410c06:	sti    
  410c07:	dec    edx
  410c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c09:	lods   eax,DWORD PTR ds:[esi]
  410c0a:	add    eax,0xe318e282
  410c0f:	pop    ebp
  410c10:	cs aam 0x52
  410c13:	ret    
  410c14:	adc    eax,0x5802f4ef
  410c19:	and    ebx,DWORD PTR [eax+0x5e338cbb]
  410c1f:	clc    
  410c20:	ins    BYTE PTR es:[edi],dx
  410c21:	(bad)  
  410c22:	adc    bh,BYTE PTR [ebx]
  410c24:	mov    DWORD PTR [esi],edx
  410c26:	test   DWORD PTR [eax+0x7b],0x5ed66504
  410c2d:	pop    edi
  410c2e:	jbe    0x410c2c
  410c30:	mov    bl,0xdc
  410c32:	and    BYTE PTR [ebx],ah
  410c34:	imul   edi,DWORD PTR [eax+0x16b0ffa],0xb9c6447
  410c3e:	add    bl,dh
  410c40:	or     esi,edi
  410c42:	popf   
  410c43:	jl     0x410c34
  410c45:	or     eax,0x9d3d2db3
  410c4a:	push   0xfffffff0
  410c4c:	ror    DWORD PTR [esi-0xbad536a],1
  410c52:	add    BYTE PTR [esi],0xf5
  410c55:	push   cs
  410c56:	jo     0x410ca0
  410c58:	mov    bl,0x48
  410c5a:	jb     0x410ca0
  410c5c:	je     0x410cab
  410c5e:	loope  0x410c96
  410c60:	fs js  0x410c7d
  410c63:	cmc    
  410c64:	dec    edi
  410c65:	jle    0x410c87
  410c67:	rcr    esi,cl
  410c69:	pop    esp
  410c6a:	inc    ebp
  410c6b:	stos   BYTE PTR es:[edi],al
  410c6c:	sahf   
  410c6d:	mov    edi,0x4a446aae
  410c72:	cld    
  410c73:	and    DWORD PTR [ebp+0x385cbbd0],ebp
  410c79:	dec    eax
  410c7a:	arpl   cx,cx
  410c7c:	mov    BYTE PTR fs:[edx],al
  410c7f:	add    bl,BYTE PTR [ebp+0x17]
  410c82:	(bad)  
  410c83:	fnstcw WORD PTR [edx]
  410c85:	and    eax,0x95d9086e
  410c8a:	adc    al,0xfc
  410c8c:	mov    esi,edi
  410c8e:	add    ebx,DWORD PTR [ebx]
  410c90:	jecxz  0x410d0a
  410c92:	xor    al,0x2
  410c94:	inc    eax
  410c95:	sbb    DWORD PTR [edx],esp
  410c97:	popa   
  410c98:	push   ebp
  410c99:	gs mov ss,edx
  410c9c:	nop
  410c9d:	add    eax,0xea06c9a9
  410ca2:	push   ss
  410ca3:	jnp    0x410cde
  410ca5:	leave  
  410ca6:	add    al,0xe9
  410ca8:	fwait
  410ca9:	rcr    BYTE PTR [ebx+edi*4+0x5d5beaa3],1
  410cb0:	mov    DWORD PTR [eax],esi
  410cb2:	sahf   
  410cb3:	pop    ds
  410cb4:	ja     0x410c3c
  410cb6:	cwde   
  410cb7:	in     eax,dx
  410cb8:	mov    dl,0x4d
  410cba:	dec    edi
  410cbb:	lock xchg edi,eax
  410cbd:	xchg   ebx,eax
  410cbe:	div    DWORD PTR [ebx+0x7d]
  410cc1:	scas   al,BYTE PTR es:[edi]
  410cc2:	ds retf 
  410cc4:	dec    edx
  410cc5:	pop    esp
  410cc6:	into   
  410cc7:	mov    edx,0xd1b45af4
  410ccc:	push   ecx
  410ccd:	push   ecx
  410cce:	pop    ds
  410ccf:	aam    0x50
  410cd1:	ds mov bl,0xda
  410cd4:	popf   
  410cd5:	sbb    ch,ah
  410cd7:	adc    cl,ah
  410cd9:	daa    
  410cda:	push   ds
  410cdb:	pop    ds
  410cdc:	jb     0x410cb5
  410cde:	ret    
  410cdf:	call   0xb445b169
  410ce4:	xor    DWORD PTR [ecx],ebx
  410ce6:	into   
  410ce7:	mov    ebp,0xcfcd1f28
  410cec:	mov    DWORD PTR [esi+0x3a],esp
  410cef:	and    DWORD PTR [edx],eax
  410cf1:	mov    eax,ds:0x648b226
  410cf6:	push   ebp
  410cf7:	mov    ebp,0x5d933410
  410cfc:	push   esi
  410cfd:	xchg   ebx,eax
  410cfe:	data16 out 0x59,al
  410d01:	adc    dh,BYTE PTR [edx+esi*1]
  410d04:	pop    esp
  410d05:	xor    al,0xad
  410d07:	push   ds
  410d08:	mov    ecx,0xec279163
  410d0d:	popf   
  410d0e:	inc    esp
  410d0f:	sub    DWORD PTR [ebx+0x3ef854a5],ebp
  410d15:	sbb    BYTE PTR [eax+0x61ece78c],ah
  410d1b:	fldcw  WORD PTR [edx-0x9da3ccf]
  410d21:	mov    ch,0x7b
  410d23:	sub    al,0xf9
  410d25:	rcl    ah,1
  410d27:	xchg   esp,eax
  410d28:	aas    
  410d29:	sbb    ah,BYTE PTR [eax+0x62]
  410d2c:	lahf   
  410d2d:	mov    ss,eax
  410d2f:	dec    esp
  410d30:	inc    edi
  410d31:	scas   al,BYTE PTR es:[edi]
  410d32:	xchg   esi,eax
  410d33:	jmp    0x7318:0x4e8098dc
  410d3a:	xchg   esi,eax
  410d3b:	add    ebx,DWORD PTR [edi+ebx*8]
  410d3e:	cs sti 
  410d40:	pop    ss
  410d41:	cdq    
  410d42:	lahf   
  410d43:	hlt    
  410d44:	in     eax,dx
  410d45:	cmp    esi,DWORD PTR [ebx+0x72]
  410d48:	add    BYTE PTR [eax+0x2c],0xd
  410d4c:	jne    0x410d63
  410d4e:	lea    edi,[ebp-0x17]
  410d51:	pop    esi
  410d52:	xchg   edi,eax
  410d53:	jmp    0x900b:0x14062cc9
  410d5a:	cmp    ch,BYTE PTR [eax]
  410d5c:	pushf  
  410d5d:	rcl    BYTE PTR [edx],1
  410d5f:	pushf  
  410d60:	push   esi
  410d61:	xor    DWORD PTR [edi+0x32250d6b],edi
  410d67:	sub    edi,esi
  410d69:	jl     0x410d53
  410d6b:	pop    eax
  410d6c:	daa    
  410d6d:	rcl    cl,cl
  410d6f:	jbe    0x410d93
  410d71:	jo     0x410d21
  410d73:	adc    cl,0x57
  410d76:	pop    ds
  410d77:	into   
  410d78:	test   DWORD PTR [ebx],0xe6bfdfe2
  410d7e:	(bad)  
  410d7f:	and    bl,BYTE PTR [edx]
  410d81:	add    al,0x11
  410d83:	ds aaa 
  410d85:	dec    edx
  410d86:	or     BYTE PTR [eax],al
  410d88:	ja     0x410dd9
  410d8a:	loopne 0x410dd6
  410d8c:	cmc    
  410d8d:	pusha  
  410d8e:	popa   
  410d8f:	and    eax,0x8dd7e6f2
  410d94:	and    DWORD PTR [ecx-0x6f578c33],eax
  410d9a:	mov    gs,WORD PTR [ecx-0x5a]
  410d9d:	mov    ?,WORD PTR [edi-0x7e71a4fb]
  410da3:	stc    
  410da4:	sub    edx,DWORD PTR [esi+0x5d]
  410da7:	sbb    DWORD PTR [ecx-0x6820d8a0],edx
  410dad:	add    DWORD PTR [ebp+edi*1-0x3b],esp
  410db1:	xor    al,0x26
  410db3:	retf   
  410db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db5:	inc    edi
  410db6:	loop   0x410d58
  410db8:	rcl    bh,cl
  410dba:	xor    DWORD PTR ds:0xdba45e5b,ebp
  410dc0:	hlt    
  410dc1:	and    edi,esi
  410dc3:	add    al,0xf3
  410dc5:	push   eax
  410dc6:	outs   dx,BYTE PTR ds:[esi]
  410dc7:	(bad)  
  410dc8:	pop    ds
  410dc9:	dec    edx
  410dca:	fild   DWORD PTR [esi+0x53af9a1a]
  410dd0:	test   eax,0xe2d26a1a
  410dd5:	mov    al,ds:0x66db96c7
  410dda:	lahf   
  410ddb:	pop    esp
  410ddc:	dec    esi
  410ddd:	mov    edx,DWORD PTR [ecx+0x59]
  410de0:	retf   0x3e1c
  410de3:	mov    ds,WORD PTR [eax+0x19]
  410de6:	mov    al,0x40
  410de8:	mov    al,0x7e
  410dea:	ds mov ecx,0x2804cece
  410df0:	iret   
  410df1:	mov    ebp,0xab6254e
  410df6:	sahf   
  410df7:	mov    ds:0x92093d67,eax
  410dfc:	push   ebx
  410dfd:	adc    al,0x89
  410dff:	add    DWORD PTR [ecx-0x223e3ce2],ecx
  410e05:	dec    edi
  410e06:	sbb    ah,ah
  410e08:	mov    DWORD PTR [ecx],ecx
  410e0a:	aad    0x79
  410e0c:	adc    eax,0x2cb31895
  410e11:	inc    ecx
  410e12:	adc    DWORD PTR [eax-0x56a1941a],ebx
  410e18:	inc    eax
  410e19:	mov    ecx,0xf7be465
  410e1e:	(bad)  
  410e1f:	mov    ds:0xf98193b4,al
  410e24:	scas   al,BYTE PTR es:[edi]
  410e25:	jl     0x410db7
  410e27:	inc    esi
  410e28:	fnsave [eiz*8-0x3f059085]
  410e2f:	sub    eax,0xe1535511
  410e34:	lods   al,BYTE PTR ds:[esi]
  410e35:	mov    al,ds:0xa4b7f669
  410e3a:	or     ecx,DWORD PTR [esi-0x3faebb67]
  410e40:	push   esp
  410e41:	sub    al,0x4a
  410e43:	int    0x15
  410e45:	mov    esp,edx
  410e47:	dec    ebp
  410e48:	dec    DWORD PTR [eax+0x51]
  410e4b:	iret   
  410e4c:	aas    
  410e4d:	repz (bad) 
  410e4f:	mov    cl,BYTE PTR [edi+0x4ebe1e83]
  410e55:	mov    ds:0xaf7f6786,eax
  410e5a:	in     al,0x10
  410e5c:	hlt    
  410e5d:	jecxz  0x410e9b
  410e5f:	out    0x56,al
  410e61:	mov    eax,ds:0x24adf1e3
  410e66:	test   DWORD PTR ds:0xdd8e66d9,eax
  410e6c:	mov    edx,0xc38f5b23
  410e71:	dec    ebp
  410e72:	jae    0x410ed2
  410e74:	dec    edi
  410e75:	je     0x410e66
  410e77:	pop    edx
  410e78:	dec    ecx
  410e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e7a:	adc    DWORD PTR [ecx+0x2],ebx
  410e7d:	sub    edi,esp
  410e7f:	dec    eax
  410e80:	and    edx,ebp
  410e82:	mov    edi,0x45e67a0b
  410e87:	ins    DWORD PTR es:[edi],dx
  410e88:	test   ch,al
  410e8a:	fstp   DWORD PTR [ebx-0x60]
  410e8d:	xor    BYTE PTR [eiz*2+0x674c6fd2],al
  410e94:	inc    ecx
  410e95:	mov    al,ds:0x5a9fcccd
  410e9a:	pop    esi
  410e9b:	and    DWORD PTR [ebp+0x4],eax
  410e9e:	mov    dh,0x23
  410ea0:	mov    ecx,0x4aefb762
  410ea5:	xchg   edx,eax
  410ea6:	adc    edx,DWORD PTR [eax]
  410ea8:	or     eax,0xcaee8979
  410ead:	enter  0x91c9,0x7e
  410eb1:	fs stc 
  410eb3:	arpl   WORD PTR [esi+edi*1],bx
  410eb6:	imul   ebp,DWORD PTR [eax],0x5a2ee4dd
  410ebc:	call   0x9e37a403
  410ec1:	imul   edx,DWORD PTR [ebx+0x72],0xffffff9d
  410ec5:	pop    edi
  410ec6:	mov    bl,0x5
  410ec8:	adc    ah,BYTE PTR [ebp+0x8]
  410ecb:	cli    
  410ecc:	jnp    0x410eac
  410ece:	inc    edx
  410ecf:	fmul   DWORD PTR [ebx]
  410ed1:	push   0xffffffc3
  410ed3:	cwde   
  410ed4:	pop    eax
  410ed5:	mov    eax,ds:0x9c733911
  410eda:	test   BYTE PTR [edi],dl
  410edc:	loop   0x410eed
  410ede:	ret    
  410edf:	retf   0xe905
  410ee2:	jb     0x410ed3
  410ee4:	ss jnp 0x410f1a
  410ee7:	xchg   ecx,eax
  410ee8:	sub    al,0x8
  410eea:	icebp  
  410eeb:	push   es
  410eec:	jmp    FWORD PTR [edi-0x5d4ac435]
  410ef2:	shl    BYTE PTR [edx],1
  410ef4:	xchg   ebp,eax
  410ef5:	(bad)  
  410ef6:	out    dx,al
  410ef7:	mov    ch,0xab
  410ef9:	scas   al,BYTE PTR es:[edi]
  410efa:	inc    edx
  410efb:	stc    
  410efc:	mov    DWORD PTR [esi-0x9309d6e],ebx
  410f02:	test   al,0x8
  410f04:	call   0xcac5:0x5451193c
  410f0b:	mov    ebx,0x26b850de
  410f10:	push   ds
  410f11:	ins    BYTE PTR es:[edi],dx
  410f12:	jo     0x410eb3
  410f14:	and    DWORD PTR [edi-0x7f],eax
  410f17:	mov    edx,0x3f923e31
  410f1c:	push   cs
  410f1d:	rcr    DWORD PTR [edx-0x5494e453],1
  410f23:	mov    ecx,0x66d9e849
  410f28:	xchg   ebx,eax
  410f29:	xor    eax,0x8c8bb0a5
  410f2e:	out    dx,eax
  410f2f:	sub    eax,0x9d178614
  410f34:	(bad)  
  410f35:	pop    ss
  410f36:	nop
  410f37:	imul   esp,edi,0x36733287
  410f3d:	cmc    
  410f3e:	add    dl,BYTE PTR [edx-0x1e2241a5]
  410f44:	lds    ebp,FWORD PTR [esi]
  410f46:	fadd   DWORD PTR [ebx-0x47]
  410f49:	or     eax,0xc767405e
  410f4e:	mul    BYTE PTR [ecx]
  410f50:	(bad)  
  410f51:	mov    ch,0x8f
  410f53:	retf   
  410f54:	add    BYTE PTR [eax-0x78],ch
  410f57:	cmp    edi,ebp
  410f59:	rcl    DWORD PTR [edi],cl
  410f5b:	nop
  410f5c:	call   0x938e0f6b
  410f61:	sub    DWORD PTR [edi+0x57c1677],edi
  410f67:	add    eax,0x8b450061
  410f6c:	das    
  410f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f6f:	inc    edx
  410f70:	sbb    BYTE PTR [ecx-0x54e6dafa],bh
  410f76:	fbld   TBYTE PTR [eax-0x3feade00]
  410f7c:	sbb    al,0x2d
  410f7e:	mov    ebp,DWORD PTR [edi]
  410f80:	test   al,0x5c
  410f82:	fisubr DWORD PTR [edx-0x40]
  410f85:	adc    BYTE PTR [ebx],cl
  410f87:	arpl   dx,di
  410f89:	xchg   esp,eax
  410f8a:	mov    esi,0x6cfcd51a
  410f8f:	xchg   edi,eax
  410f90:	(bad)
  410f94:	int    0x53
  410f96:	or     ch,BYTE PTR [edx+0x41]
  410f99:	xchg   ecx,eax
  410f9a:	(bad)  
  410f9c:	mov    cx,0x714
  410fa0:	aam    0x5c
  410fa2:	lods   al,BYTE PTR ds:[esi]
  410fa3:	pop    edi
  410fa4:	scas   al,BYTE PTR es:[edi]
  410fa5:	nop
  410fa6:	jecxz  0x410feb
  410fa8:	fnstsw WORD PTR [ecx]
  410faa:	cmp    eax,0x16407eb1
  410faf:	out    dx,eax
  410fb0:	pop    ds
  410fb1:	and    esp,DWORD PTR [esi+0x21]
  410fb4:	stos   BYTE PTR es:[edi],al
  410fb5:	hlt    
  410fb6:	push   ecx
  410fb7:	fild   WORD PTR [esi+0x7284ade]
  410fbd:	jnp    0x411013
  410fbf:	mov    cl,0x62
  410fc1:	outs   dx,DWORD PTR ds:[esi]
  410fc2:	and    al,0x3a
  410fc4:	dec    edx
  410fc5:	dec    ebp
  410fc6:	in     al,dx
  410fc7:	call   0x5ae7b441
  410fcc:	repz mov ecx,0xfd3d5c7d
  410fd2:	(bad)  
  410fd3:	pusha  
  410fd4:	sub    al,0x75
  410fd6:	ds loop 0x411035
  410fd9:	mov    cl,0xae
  410fdb:	ds ins DWORD PTR es:[edi],dx
  410fdd:	push   edi
  410fde:	bound  ebp,QWORD PTR ds:0x4835cfcb
  410fe4:	dec    ebp
  410fe5:	xor    eax,0x981399e3
  410fea:	and    ebx,DWORD PTR [edx]
  410fec:	shr    BYTE PTR [edi],0x1b
  410fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff0:	cld    
  410ff1:	and    al,bl
  410ff3:	push   cs
  410ff4:	shl    al,1
  410ff6:	fstp   QWORD PTR [ecx]
  410ff8:	shl    DWORD PTR [ecx],0x6c
  410ffb:	cmp    DWORD PTR [ecx-0x42],0x3d80c9c7
  411002:	rcl    DWORD PTR [esi+0x6cbbe59b],1
  411008:	and    dh,BYTE PTR [edx+0x6b2183f3]
  41100e:	test   ecx,ecx
  411010:	popf   
  411011:	fcmovbe st,st(5)
  411013:	mov    dl,bh
  411015:	sub    ch,BYTE PTR [esi]
  411017:	mov    ds:0xc996b2c7,eax
  41101c:	cli    
  41101d:	stos   DWORD PTR es:[edi],eax
  41101e:	jns    0x410fca
  411020:	add    bl,BYTE PTR [eax-0x6e]
  411023:	or     ebx,DWORD PTR [ebp+0x56]
  411026:	xchg   ebx,eax
  411027:	enter  0x56f8,0xc4
  41102b:	sbb    ebx,DWORD PTR [esi-0x36da0a61]
  411031:	pop    ebx
  411032:	pushf  
  411033:	in     eax,0x3
  411035:	lock inc edx
  411037:	dec    ebx
  411038:	sub    bh,0xcd
  41103b:	jge    0x410fcf
  41103d:	adc    DWORD PTR [ebp+ecx*8-0x76a60054],eax
  411044:	cs inc eax
  411046:	in     eax,dx
  411047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411048:	ss add al,0x71
  41104b:	pop    ebp
  41104c:	xchg   ebp,eax
  41104d:	adc    bh,BYTE PTR [eax+0x24]
  411050:	or     DWORD PTR [edx],ecx
  411052:	cld    
  411053:	aam    0x67
  411055:	mov    ebp,0x2df4340b
  41105a:	push   ecx
  41105b:	add    esi,edx
  41105d:	mov    bl,BYTE PTR [esi-0x79d6ab2d]
  411063:	int    0x26
  411065:	aam    0xb6
  411067:	outs   dx,BYTE PTR ds:[esi]
  411068:	loopne 0x411059
  41106a:	cmp    ebp,DWORD PTR [edx-0x7b]
  41106d:	xor    DWORD PTR [ecx+0x56023a2],edx
  411073:	xchg   esp,eax
  411074:	out    0x46,eax
  411076:	fmul   DWORD PTR ds:0x7ea1b746
  41107c:	fidiv  WORD PTR [ecx+edx*2]
  41107f:	in     eax,0xd4
  411081:	xor    eax,0xaa745057
  411086:	fdivp  st(5),st
  411088:	adc    al,0xab
  41108a:	daa    
  41108b:	push   eax
  41108c:	scas   eax,DWORD PTR es:[edi]
  41108d:	sbb    edi,ecx
  41108f:	out    dx,eax
  411090:	mov    ah,0xe2
  411092:	push   edx
  411093:	mov    bl,0xf3
  411095:	sbb    edi,DWORD PTR [ecx-0xfe46753]
  41109b:	mov    edx,0xa07f3568
  4110a0:	cmp    cl,al
  4110a2:	sbb    eax,esi
  4110a4:	fimul  DWORD PTR [ebp+eiz*2+0x34b6982e]
  4110ab:	retf   0x2620
  4110ae:	jl     0x411082
  4110b0:	outs   dx,DWORD PTR ds:[esi]
  4110b1:	daa    
  4110b2:	dec    eax
  4110b3:	xchg   esi,eax
  4110b4:	aaa    
  4110b5:	(bad)  
  4110b6:	mov    eax,ds:0xb423e879
  4110bb:	jb     0x411126
  4110bd:	imul   DWORD PTR [esi]
  4110bf:	sbb    edi,edx
  4110c1:	jl     0x411087
  4110c3:	xchg   BYTE PTR [ecx*1+0x394f84f3],dh
  4110ca:	xchg   ebp,eax
  4110cb:	pop    ds
  4110cc:	cld    
  4110cd:	pop    eax
  4110ce:	les    esi,FWORD PTR [esi-0x1773b1e4]
  4110d4:	fld    TBYTE PTR [ebx+eiz*2-0x52]
  4110d8:	fiadd  WORD PTR [edi-0x16]
  4110db:	pushf  
  4110dc:	cmp    BYTE PTR [ecx-0x7c68dbc8],0x54
  4110e3:	cs jmp 0x4a327d92
  4110e9:	jecxz  0x41111c
  4110eb:	add    edi,DWORD PTR [ebx]
  4110ed:	adc    esp,DWORD PTR [eax]
  4110ef:	pusha  
  4110f0:	out    0x95,eax
  4110f2:	arpl   WORD PTR [edi-0x496681e],bx
  4110f8:	fisttp QWORD PTR [edx]
  4110fa:	int3   
  4110fb:	xor    al,bl
  4110fd:	in     eax,0x2
  4110ff:	je     0x4110aa
  411101:	pop    esp
  411102:	mov    DWORD PTR [edx],edx
  411104:	pop    esp
  411105:	data16 cli 
  411107:	loopne 0x411097
  411109:	mov    WORD PTR [edi+0x34],cs
  41110c:	cwde   
  41110d:	sbb    BYTE PTR [ebx],bh
  41110f:	and    ebx,DWORD PTR [eax-0x61]
  411112:	stc    
  411113:	daa    
  411114:	retf   
  411115:	cmp    edi,edx
  411117:	xchg   ecx,eax
  411118:	cmp    bl,BYTE PTR [ecx-0x52]
  41111b:	sti    
  41111c:	mov    ds:0x12daad21,eax
  411121:	sar    DWORD PTR [edi+eax*4],1
  411124:	in     eax,dx
  411125:	mov    BYTE PTR [ebp-0x2f14bfdb],al
  41112b:	pop    ecx
  41112c:	jle    0x411195
  41112e:	mov    ebx,0x63733655
  411133:	scas   eax,DWORD PTR es:[edi]
  411134:	xchg   ebx,eax
  411135:	mov    ah,0xf8
  411137:	loope  0x4111ab
  411139:	adc    BYTE PTR [edi],dh
  41113b:	les    ebx,FWORD PTR [esp+ecx*1]
  41113e:	sti    
  41113f:	cdq    
  411140:	add    al,0xb2
  411142:	xchg   edi,eax
  411143:	imul   ebp,DWORD PTR [eax+0x282dd4fa],0x38466688
  41114d:	fcom   DWORD PTR [ecx]
  41114f:	enter  0x702e,0x97
  411153:	mov    eax,0xaba602ca
  411158:	stos   DWORD PTR es:[edi],eax
  411159:	adc    ah,BYTE PTR [ebp-0x60]
  41115c:	jg     0x411156
  41115e:	imul   esi,DWORD PTR [ecx-0x248812d3],0x3d
  411165:	sbb    bh,bl
  411167:	les    ebx,FWORD PTR [ebp-0x1f]
  41116a:	cmp    ah,BYTE PTR [edx]
  41116c:	retf   0x9ea6
  41116f:	mov    bh,0x6e
  411171:	sub    edx,DWORD PTR [ecx]
  411173:	clc    
  411174:	cmp    ebx,edi
  411176:	fidivr WORD PTR [esp+eiz*2]
  411179:	xchg   ebx,ecx
  41117b:	idiv   DWORD PTR [eax-0x63]
  41117e:	or     DWORD PTR [esi+0x6e],ebx
  411181:	add    BYTE PTR [ecx+0x3d07a2db],0x58
  411188:	pop    ebp
  411189:	cmp    ecx,DWORD PTR [ebp-0x13b0d441]
  41118f:	jl     0x4111a7
  411191:	cs xchg ecx,eax
  411193:	sub    ch,BYTE PTR [edi]
  411195:	dec    ebp
  411196:	pop    ss
  411197:	(bad)  
  411198:	jmp    0xeed3:0xc9090093
  41119f:	sar    esp,0x48
  4111a2:	popf   
  4111a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a4:	and    dh,BYTE PTR [ebp-0x28]
  4111a7:	xor    DWORD PTR [eax],0xffffff9f
  4111aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111ab:	fs inc ebx
  4111ad:	cmp    al,0x29
  4111af:	mul    BYTE PTR [ecx+0x31c81f3d]
  4111b5:	sahf   
  4111b6:	fild   DWORD PTR [edx+0x1c32b57d]
  4111bc:	sbb    dh,ch
  4111be:	sub    eax,0xbc25c7dd
  4111c3:	jmp    0x6444:0xacdfe87e
  4111ca:	lods   al,BYTE PTR ds:[esi]
  4111cb:	aad    0xc9
  4111cd:	xchg   esp,eax
  4111ce:	fsubrp st(5),st
  4111d0:	or     DWORD PTR [eax-0x184f1715],esi
  4111d6:	adc    edi,0x26
  4111d9:	mov    al,ds:0xa292ba18
  4111de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111df:	test   DWORD PTR [eax-0x131f3bcd],esi
  4111e5:	xchg   ecx,eax
  4111e6:	pop    ecx
  4111e7:	call   0xe4494065
  4111ec:	jnp    0x411205
  4111ee:	scas   eax,DWORD PTR es:[edi]
  4111ef:	push   cs
  4111f0:	js     0x4111d9
  4111f2:	adc    al,0x66
  4111f4:	adc    ebx,DWORD PTR [edx]
  4111f6:	jae    0x411184
  4111f8:	in     al,0x12
  4111fa:	bound  ebx,QWORD PTR [ebp-0x706bb8cc]
  411200:	in     al,0x99
  411202:	mov    ebx,0xf4c6d6f6
  411207:	lahf   
  411208:	jae    0x41123d
  41120a:	hlt    
  41120b:	mov    ecx,?
  41120d:	iret   
  41120e:	(bad)  
  41120f:	jle    0x41123a
  411211:	and    DWORD PTR [eax+0x43],0x7e
  411215:	dec    ebx
  411216:	ret    
  411217:	jb     0x411272
  411219:	mov    ah,0x96
  41121b:	scas   al,BYTE PTR es:[edi]
  41121c:	jg     0x411219
  41121e:	inc    ebx
  41121f:	xchg   DWORD PTR [esi+ebp*8+0x21],ecx
  411223:	idiv   BYTE PTR [edx-0x3a]
  411226:	ins    DWORD PTR es:[edi],dx
  411227:	(bad)  
  411228:	jl     0x41121a
  41122a:	dec    esi
  41122b:	test   DWORD PTR [edx+0x54],esi
  41122e:	push   esi
  41122f:	adc    eax,DWORD PTR [esi]
  411231:	push   edi
  411232:	mov    ds:0x4a5133fd,al
  411237:	ds xchg esp,eax
  411239:	scas   eax,DWORD PTR es:[edi]
  41123a:	repz mov ah,0x6d
  41123d:	or     DWORD PTR [eax-0xb],ecx
  411240:	fst    DWORD PTR ss:[ecx]
  411243:	add    al,0xdb
  411245:	sub    al,BYTE PTR [edi+0x0]
  411248:	rep ins BYTE PTR es:[edi],dx
  41124a:	inc    esi
  41124b:	jb     0x4112b2
  41124d:	aam    0x96
  41124f:	add    al,0x82
  411251:	mov    dl,0x7b
  411253:	push   eax
  411254:	or     al,0x55
  411256:	add    BYTE PTR [ebp-0x65],ch
  411259:	pop    edx
  41125a:	aad    0x5a
  41125c:	arpl   sp,bx
  41125e:	(bad)  
  41125f:	pop    ss
  411260:	mov    esp,edx
  411262:	aas    
  411263:	fimul  WORD PTR [edi+0xc]
  411266:	cli    
  411267:	out    dx,al
  411268:	or     esp,DWORD PTR [edi]
  41126a:	pop    es
  41126b:	in     eax,0x19
  41126d:	cmp    bh,BYTE PTR [edx]
  41126f:	push   esi
  411270:	inc    ecx
  411271:	inc    ebp
  411272:	popf   
  411273:	jmp    DWORD PTR [esi]
  411275:	ds pop edx
  411277:	jnp    0x411246
  411279:	js     0x411299
  41127b:	lahf   
  41127c:	pop    ss
  41127d:	retf   
  41127e:	or     eax,0x6c3ee39d
  411283:	into   
  411284:	push   0x6c
  411286:	and    edi,DWORD PTR [edx-0x4b]
  411289:	pop    ds
  41128a:	jmp    0xdb14:0x5e55f141
  411291:	cld    
  411292:	test   BYTE PTR [edx],dl
  411294:	ins    BYTE PTR es:[edi],dx
  411295:	jl     0x4112f3
  411297:	xor    bl,BYTE PTR [ebp-0x9]
  41129a:	ss add dh,bh
  41129d:	dec    ebp
  41129e:	add    ecx,esp
  4112a0:	sub    DWORD PTR [eax],esi
  4112a2:	fld1   
  4112a4:	inc    ebx
  4112a5:	lods   eax,DWORD PTR ds:[esi]
  4112a6:	rep lods eax,DWORD PTR ds:[esi]
  4112a8:	sub    al,0xa3
  4112aa:	jns    0x41123f
  4112ac:	or     al,0x15
  4112ae:	loop   0x411248
  4112b0:	inc    DWORD PTR [esi]
  4112b2:	es int3 
  4112b4:	sub    eax,0x8436cbaf
  4112b9:	xchg   esi,eax
  4112ba:	popf   
  4112bb:	inc    eax
  4112bc:	mov    ds:0xda9286da,al
  4112c1:	hlt    
  4112c2:	retf   
  4112c3:	out    dx,eax
  4112c4:	js     0x4112dd
  4112c6:	and    bh,BYTE PTR [eax-0x18]
  4112c9:	mov    cl,BYTE PTR [edi+0x127eea3f]
  4112cf:	xchg   edx,eax
  4112d0:	xchg   edx,eax
  4112d1:	cmp    dl,BYTE PTR [ebx+0x2d]
  4112d4:	or     ch,BYTE PTR [ebp+0x4d]
  4112d7:	fs mov ebx,0xf890b8e7
  4112dd:	sahf   
  4112de:	clc    
  4112df:	mov    esi,0x9d56fad1
  4112e4:	fnclex 
  4112e6:	or     ch,BYTE PTR [edx]
  4112e8:	push   es
  4112e9:	shl    BYTE PTR [ebp+0x7a],cl
  4112ec:	int3   
  4112ed:	repz cmp al,0xfe
  4112f0:	into   
  4112f1:	cmc    
  4112f2:	mov    edi,0xfaa9c647
  4112f7:	call   0xa6d86c6c
  4112fc:	mov    al,ds:0x1dbb0f14
  411301:	mov    dh,0x7a
  411303:	mov    cl,0x8b
  411305:	add    DWORD PTR [ebx+0x35],ebx
  411308:	add    ebp,0xffffffe7
  41130b:	or     DWORD PTR [bx+si],ebp
  41130e:	out    dx,al
  41130f:	call   0xad12f62c
  411314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411315:	cmp    bl,ah
  411317:	out    0xc0,eax
  411319:	xchg   ebp,eax
  41131a:	dec    ecx
  41131b:	dec    esp
  41131c:	mov    bl,0xa5
  41131e:	pop    es
  41131f:	sti    
  411320:	out    dx,eax
  411321:	pop    ss
  411322:	int3   
  411323:	test   al,0x4
  411325:	push   ebp
  411326:	dec    edx
  411327:	sahf   
  411328:	jne    0x411306
  41132a:	xchg   BYTE PTR [ecx+0x34638051],cl
  411330:	mov    ecx,0x4ba09b36
  411335:	dec    ecx
  411336:	mov    dh,0x0
  411338:	xor    ah,BYTE PTR [esi+eiz*1]
  41133b:	xchg   esi,eax
  41133c:	clc    
  41133d:	cmp    BYTE PTR [esi],dl
  41133f:	push   ss
  411340:	out    dx,eax
  411341:	cmp    dh,BYTE PTR [ecx-0x69e15add]
  411347:	xlat   BYTE PTR ds:[ebx]
  411348:	mov    ah,0xf7
  41134a:	mov    ebx,0x85d99a1c
  41134f:	nop
  411350:	lock sar DWORD PTR [ebp-0x31582224],1
  411357:	add    al,0x2f
  411359:	xchg   ebp,eax
  41135a:	cmp    DWORD PTR [ebx-0x60],ebp
  41135d:	shl    BYTE PTR [esi-0x1eb2dbda],cl
  411363:	lods   al,BYTE PTR ds:[esi]
  411364:	adc    dh,bh
  411366:	bound  ecx,QWORD PTR [ecx-0x6e]
  411369:	and    BYTE PTR [ecx+esi*2],dh
  41136c:	call   0x6936:0xd555c92e
  411373:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411375:	adc    ch,cl
  411377:	loope  0x411322
  411379:	adc    BYTE PTR [edi],al
  41137b:	cli    
  41137c:	pushf  
  41137d:	sbb    eax,0x8566b862
  411382:	sub    BYTE PTR [edx-0x4b],0x79
  411386:	stos   DWORD PTR es:[edi],eax
  411387:	push   es
  411388:	add    al,0xb7
  41138a:	out    dx,al
  41138b:	callw  0x28a7
  41138f:	pop    edi
  411390:	(bad)  
  411391:	mov    ebp,0xe485098e
  411396:	popf   
  411397:	loope  0x411396
  411399:	clc    
  41139a:	ret    0xc475
  41139d:	jbe    0x411407
  41139f:	stc    
  4113a0:	pop    ebp
  4113a1:	inc    edx
  4113a2:	fidiv  WORD PTR [esi+0x652277c]
  4113a8:	adc    ah,cl
  4113aa:	gs out 0x79,al
  4113ad:	mov    al,0xe
  4113af:	xor    BYTE PTR [edx-0x3d],bl
  4113b2:	or     BYTE PTR [edi-0x28],0x8d
  4113b6:	ret    0xf1f2
  4113b9:	loopne 0x41141a
  4113bb:	sbb    dl,BYTE PTR [edi+ecx*1-0x64]
  4113bf:	fadd   DWORD PTR [edi-0x5f]
  4113c2:	or     edi,0xffffffcc
  4113c5:	scas   al,BYTE PTR es:[edi]
  4113c6:	inc    ebp
  4113c7:	jp     0x41137c
  4113c9:	or     DWORD PTR [eax+0x40a8be37],esi
  4113cf:	std    
  4113d0:	or     BYTE PTR [eax],bl
  4113d2:	test   BYTE PTR [eax],bl
  4113d4:	or     eax,0x2ecd694a
  4113d9:	sub    DWORD PTR [ebp-0x311d5e02],ebx
  4113df:	pop    eax
  4113e0:	push   ecx
  4113e1:	stos   DWORD PTR es:[edi],eax
  4113e2:	int3   
  4113e3:	add    al,0x1a
  4113e5:	int3   
  4113e6:	aad    0x5d
  4113e8:	nop
  4113e9:	and    al,0xad
  4113eb:	mov    edx,0x76675eb7
  4113f0:	cli    
  4113f1:	scas   al,BYTE PTR es:[edi]
  4113f2:	in     eax,0x69
  4113f4:	and    BYTE PTR [esi-0x558e2c42],cl
  4113fa:	in     eax,dx
  4113fb:	test   DWORD PTR ds:0xd0ee79cf,0x78d4745a
  411405:	ret    
  411406:	dec    ebx
  411407:	les    edi,FWORD PTR [edx-0x1d61af99]
  41140d:	mov    ecx,0x6ee6a614
  411412:	jmp    0x899dacd4
  411417:	cmp    dl,al
  411419:	aad    0x93
  41141b:	ss inc eax
  41141d:	test   BYTE PTR [esi+eiz*1],ah
  411420:	jb     0x41148f
  411422:	jecxz  0x4113c2
  411424:	call   ebx
  411426:	idiv   DWORD PTR [ebx-0x32]
  411429:	and    al,0xe6
  41142b:	and    eax,0xfb6e94b8
  411430:	xchg   DWORD PTR [esi+0x52],esi
  411433:	sti    
  411434:	call   0x6c32da7f
  411439:	cmp    DWORD PTR [ecx+0x1b49433d],0x40
  411440:	mov    dh,0xe1
  411442:	frstor [edx-0x6c]
  411445:	mov    eax,ds:0xba0e40a7
  41144a:	popa   
  41144b:	pop    edi
  41144c:	mov    eax,0x1cb95c8f
  411451:	xlat   BYTE PTR ds:[ebx]
  411452:	gs pop edi
  411454:	add    al,0x13
  411456:	jmp    0x411455
  411458:	pop    es
  411459:	sbb    DWORD PTR [esp+esi*8-0x57],edx
  41145d:	push   esi
  41145e:	sbb    cl,bl
  411460:	or     BYTE PTR [ebx+0x5c],ch
  411463:	repnz sbb ebx,DWORD PTR [esi]
  411466:	push   edx
  411467:	xchg   ebx,eax
  411468:	je     0x4114e6
  41146a:	fistp  WORD PTR [ecx-0x63]
  41146d:	hlt    
  41146e:	mov    dh,0xe4
  411470:	and    al,0x63
  411472:	mov    BYTE PTR [ebx],al
  411474:	(bad)  
  411475:	retf   0x67a1
  411478:	mov    al,ds:0xfaa80d4b
  41147d:	mov    edi,0x138fa792
  411482:	mov    eax,ebx
  411484:	or     ebp,DWORD PTR [edx]
  411486:	cmp    al,0xe1
  411488:	jg     0x411483
  41148a:	aaa    
  41148b:	push   edx
  41148c:	pop    ebp
  41148d:	push   ebp
  41148e:	or     eax,0x2c6fb8a1
  411493:	add    al,0x6e
  411495:	xchg   ecx,eax
  411496:	stc    
  411497:	fisubr WORD PTR [ecx+0x15ecd3e8]
  41149d:	dec    esi
  41149e:	shr    ebx,0xc3
  4114a1:	dec    ecx
  4114a2:	mov    ah,0x95
  4114a4:	gs jecxz 0x4114b0
  4114a7:	or     DWORD PTR [ecx-0x40],0x1e
  4114ab:	es add eax,0x1e91923a
  4114b1:	push   ds
  4114b2:	out    0x7f,eax
  4114b4:	cli    
  4114b5:	loope  0x4114fd
  4114b7:	dec    eax
  4114b8:	mov    ah,0x88
  4114ba:	mov    ds:0x73951c89,eax
  4114bf:	inc    edi
  4114c0:	ins    DWORD PTR es:[edi],dx
  4114c1:	idiv   DWORD PTR [esi-0x3b7350d6]
  4114c7:	mov    dl,0x67
  4114c9:	test   DWORD PTR ds:0x52be083a,0xee55e770
  4114d3:	and    ebp,ecx
  4114d5:	bound  esp,QWORD PTR [eax-0x7e]
  4114d8:	or     DWORD PTR [ebp+0x39],esp
  4114db:	in     al,0x5a
  4114dd:	std    
  4114de:	sub    bh,BYTE PTR [esp+edx*8]
  4114e1:	int    0xe9
  4114e3:	xchg   esi,eax
  4114e4:	shl    DWORD PTR [eax-0x37],cl
  4114e7:	repz xchg ebp,eax
  4114e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114ea:	mov    al,0x5b
  4114ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ed:	or     al,0x8c
  4114ef:	and    BYTE PTR [eax+eax*4],ah
  4114f2:	and    eax,0xd9a88150
  4114f7:	icebp  
  4114f8:	sbb    al,BYTE PTR [edi]
  4114fa:	push   esp
  4114fb:	sub    al,0x1f
  4114fd:	je     0x4114cc
  4114ff:	jnp    0x4114be
  411501:	retf   0xdced
  411504:	sub    BYTE PTR [esi],bl
  411506:	jmp    0xa35b7c65
  41150b:	ins    DWORD PTR es:[edi],dx
  41150c:	retf   0x7a9b
  41150f:	mov    ebp,edi
  411511:	leave  
  411512:	je     0x411506
  411514:	adc    eax,0x46168052
  411519:	ins    DWORD PTR es:[edi],dx
  41151a:	ds cmp ecx,ebx
  41151d:	pop    eax
  41151e:	mov    BYTE PTR [ebx+0x14072c7a],dh
  411524:	push   ecx
  411525:	or     ebx,DWORD PTR [edx]
  411527:	ins    BYTE PTR es:[edi],dx
  411528:	in     eax,0xee
  41152a:	jl     0x4115a1
  41152c:	mov    edx,0x963b1db8
  411531:	mov    WORD PTR [eax+ebp*4],es
  411534:	fwait
  411535:	out    0xd5,al
  411537:	cmp    BYTE PTR [edx+0x3c],cl
  41153a:	bound  ebx,QWORD PTR ds:0xc9e88b98
  411540:	je     0x411572
  411542:	mov    ds:0x630ba3d7,al
  411547:	mov    dh,0x41
  411549:	jb     0x411572
  41154b:	out    dx,al
  41154c:	sub    al,0xbb
  41154e:	push   cs
  41154f:	or     esi,DWORD PTR [esi+0x1ddae38]
  411555:	mov    dh,0x6f
  411557:	das    
  411558:	mov    eax,ds:0x72121674
  41155d:	adc    al,BYTE PTR [ebx+0x217c4394]
  411563:	jb     0x411560
  411565:	cli    
  411566:	imul   BYTE PTR [esi-0x2175b487]
  41156c:	mov    dl,0x60
  41156e:	push   0xffffffc5
  411570:	jnp    0x41152a
  411572:	add    eax,0x6d4bc461
  411577:	scas   al,BYTE PTR es:[edi]
  411578:	inc    dx
  41157a:	cmp    edi,DWORD PTR [edx-0x1193f8f7]
  411580:	in     eax,0x97
  411582:	loopne 0x4115f2
  411584:	ja     0x411548
  411586:	sahf   
  411587:	enter  0x7a35,0xcf
  41158b:	mov    eax,0x8759c06c
  411590:	rol    DWORD PTR [eax+0x49],1
  411593:	push   esp
  411594:	push   ebx
  411595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411596:	adc    eax,0x4346b847
  41159b:	push   edi
  41159c:	shl    BYTE PTR [ebx],1
  41159e:	fisub  WORD PTR [ebx+0x4393a21]
  4115a4:	ret    
  4115a5:	es in  eax,dx
  4115a7:	xchg   esi,eax
  4115a8:	mov    eax,ds:0x91cba3a0
  4115ad:	pop    edx
  4115ae:	inc    ebx
  4115af:	inc    ebp
  4115b0:	jbe    0x41153c
  4115b2:	pop    eax
  4115b3:	cmp    ebp,ebp
  4115b5:	mov    esi,0xe125cde0
  4115ba:	inc    eax
  4115bb:	cdq    
  4115bc:	inc    ebp
  4115bd:	xchg   ecx,eax
  4115be:	(bad)  
  4115bf:	(bad)  
  4115c0:	or     al,0x74
  4115c2:	or     al,0x79
  4115c4:	xchg   DWORD PTR [eax],ebx
  4115c6:	and    ebx,DWORD PTR [ebp-0x8]
  4115c9:	dec    edi
  4115ca:	call   0x1156:0x3b4b48ee
  4115d1:	mov    ch,0xc0
  4115d3:	xor    eax,0x656ab5ff
  4115d8:	dec    esp
  4115d9:	or     esp,edx
  4115db:	dec    ebx
  4115dc:	outs   dx,DWORD PTR ds:[esi]
  4115dd:	in     eax,dx
  4115de:	xor    BYTE PTR [esi],bl
  4115e0:	sbb    BYTE PTR [ecx+0x64],bl
  4115e3:	inc    edi
  4115e4:	loopne 0x41157d
  4115e6:	xor    BYTE PTR [edi+0x1a],ah
  4115e9:	hlt    
  4115ea:	sbb    bl,cl
  4115ec:	aas    
  4115ed:	push   ecx
  4115ee:	mov    esi,esi
  4115f0:	sbb    DWORD PTR [edx-0x5f5a23d9],ebx
  4115f6:	inc    esi
  4115f8:	cmp    al,al
  4115fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115fb:	pop    es
  4115fc:	lods   eax,DWORD PTR ds:[esi]
  4115fd:	and    al,0x2f
  4115ff:	xchg   ecx,eax
  411600:	sbb    DWORD PTR [esi+0x1c3ea756],edi
  411606:	out    0x18,eax
  411608:	adc    DWORD PTR [eax],esp
  41160a:	jp     0x41158f
  41160c:	jecxz  0x4115bb
  41160e:	imul   ecx,DWORD PTR [eax],0x6d
  411611:	int    0xef
  411613:	push   edx
  411614:	sbb    eax,0xf3529d25
  411619:	push   ebp
  41161a:	into   
  41161b:	(bad)  
  41161c:	out    dx,eax
  41161d:	sti    
  41161e:	add    BYTE PTR [edx],bl
  411620:	mov    dh,0xd0
  411622:	inc    edx
  411623:	rcl    BYTE PTR [esi-0x5cff4835],cl
  411629:	std    
  41162a:	imul   esi,DWORD PTR [edi],0x68
  41162d:	cmc    
  41162e:	xor    BYTE PTR [edi+0x7aa95d8c],bh
  411634:	sbb    DWORD PTR [edx],esp
  411636:	and    bl,BYTE PTR [ecx-0x66173300]
  41163c:	push   ss
  41163d:	iret   
  41163e:	pop    ds
  41163f:	out    dx,al
  411640:	pop    ss
  411641:	xor    BYTE PTR [ebp+edx*8+0x65],bh
  411645:	(bad)  
  411646:	jno    0x411688
  411648:	dec    ebp
  411649:	adc    eax,0xa80586a7
  41164e:	mov    eax,ds:0x82ea8e77
  411653:	xchg   ecx,eax
  411654:	es dec ebp
  411656:	and    ch,BYTE PTR [ebx+0x69]
  411659:	ret    0x714d
  41165c:	xlat   BYTE PTR ds:[ebx]
  41165d:	inc    BYTE PTR [ebp+0x4902f3ba]
  411663:	das    
  411664:	fwait
  411665:	in     al,0x24
  411667:	xchg   ebx,eax
  411668:	in     al,dx
  411669:	sub    ebp,esp
  41166b:	pop    ss
  41166c:	aad    0xc3
  41166e:	mov    cs,WORD PTR ds:0x622b42a
  411674:	cmp    DWORD PTR [eax*2+0x2596898f],ebx
  41167b:	mov    bl,0xd1
  41167d:	push   ds
  41167e:	pushf  
  41167f:	xchg   ebp,eax
  411680:	xchg   edx,eax
  411681:	(bad)  [ebx+0x4d]
  411684:	cwde   
  411685:	xchg   ebp,eax
  411686:	mov    eax,ds:0x65e30463
  41168b:	cmp    BYTE PTR [edx],0x8b
  41168e:	loop   0x4116c3
  411690:	push   edx
  411691:	out    dx,al
  411692:	mov    ?,WORD PTR [ebx+0x32917216]
  411698:	sbb    BYTE PTR [ecx],dh
  41169a:	(bad)  
  41169b:	shr    BYTE PTR [ecx-0x37],cl
  41169e:	dec    esp
  41169f:	aas    
  4116a0:	shr    DWORD PTR [edi-0x26b6e862],cl
  4116a6:	mov    ss,WORD PTR [esi-0x2644ce5c]
  4116ac:	jne    0x41164e
  4116ae:	mov    ah,0x1a
  4116b0:	pop    es
  4116b1:	fwait
  4116b2:	scas   eax,DWORD PTR es:[edi]
  4116b3:	scas   eax,DWORD PTR es:[edi]
  4116b4:	ror    BYTE PTR [edx],cl
  4116b6:	jns    0x41163e
  4116b8:	xor    bh,al
  4116ba:	aas    
  4116bb:	sbb    DWORD PTR [ebx],esi
  4116bd:	lods   al,BYTE PTR ds:[esi]
  4116be:	int    0xb6
  4116c0:	sbb    al,0xc6
  4116c2:	push   0x41d5fa82
  4116c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c8:	out    0x3b,al
  4116ca:	and    al,BYTE PTR [ebp-0x3ec2d67a]
  4116d0:	enter  0xd42d,0x35
  4116d4:	scas   al,BYTE PTR es:[edi]
  4116d5:	rol    BYTE PTR [edx-0x27c7e79f],1
  4116db:	je     0x411715
  4116dd:	push   ecx
  4116de:	mov    al,0x8c
  4116e0:	pop    ecx
  4116e1:	arpl   WORD PTR [eax],bp
  4116e3:	js     0x411739
  4116e5:	fs inc ecx
  4116e7:	pop    esi
  4116e8:	push   ds
  4116e9:	mov    ebp,0x4e86d0e4
  4116ee:	fnsave [ebx+ecx*4]
  4116f1:	push   esp
  4116f2:	push   es
  4116f3:	add    eax,0xb7280dad
  4116f8:	push   ebp
  4116f9:	xchg   edx,eax
  4116fa:	adc    eax,0x726361fe
  4116ff:	sbb    ebp,DWORD PTR [edx+esi*8-0x42653ec0]
  411706:	imul   ebx,eax,0xffffffc8
  411709:	call   DWORD PTR [esi+0x2f409411]
  41170f:	xchg   ebp,eax
  411710:	popf   
  411711:	mov    al,ds:0xf0b1e2b4
  411716:	add    al,0x7f
  411718:	lds    esi,FWORD PTR [eax+0x14]
  41171b:	jmp    0x411717
  41171d:	xchg   esi,ecx
  41171f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411720:	sti    
  411721:	xchg   ebp,eax
  411722:	push   ds
  411723:	outs   dx,BYTE PTR ds:[esi]
  411724:	cmc    
  411725:	jl     0x4116fe
  411727:	inc    ebp
  411728:	mov    ebx,0x38f827f8
  41172d:	or     BYTE PTR [edi+0x68],al
  411730:	and    bh,BYTE PTR [eax+eiz*8]
  411733:	push   0x5d28f4ad
  411738:	or     dh,BYTE PTR [edx*1-0x75a4175a]
  41173f:	scas   al,BYTE PTR es:[edi]
  411740:	nop
  411741:	jmp    0x41179a
  411743:	pusha  
  411744:	rcl    DWORD PTR [ebx],cl
  411746:	not    DWORD PTR [ecx-0x68579bc2]
  41174c:	cmp    ch,dl
  41174e:	pop    ebp
  41174f:	adc    DWORD PTR [eax+edx*2+0x6],ebp
  411753:	push   0xffffff8c
  411755:	xor    dl,dh
  411757:	enter  0x2311,0xf1
  41175b:	rol    BYTE PTR ds:0x56940601,1
  411761:	inc    esi
  411762:	push   edx
  411763:	push   cs
  411764:	ins    DWORD PTR es:[edi],dx
  411765:	ret    
  411766:	mov    ds:0xbfb1522f,eax
  41176b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41176c:	xor    bl,0x11
  41176f:	cmp    bl,BYTE PTR [ecx]
  411771:	rcr    DWORD PTR [ecx+0x43],0xc
  411775:	addr16 js 0x411767
  411778:	push   0xd9faada3
  41177d:	mov    ds:0xefd79cdb,eax
  411782:	out    0x6c,eax
  411784:	call   0x2394149d
  411789:	inc    edx
  41178a:	pop    es
  41178b:	dec    esp
  41178c:	rcr    DWORD PTR [ebx],cl
  41178e:	sbb    al,BYTE PTR [ebx+0x69]
  411791:	jp     0x4117bb
  411793:	mov    esp,0xa05d5ee0
  411798:	mov    esp,0x15c6ba2f
  41179d:	arpl   WORD PTR [ebp-0x919c40f],ax
  4117a3:	push   ebp
  4117a4:	sbb    al,0xc7
  4117a6:	(bad)  
  4117a7:	leave  
  4117a8:	(bad)  
  4117a9:	push   0x938fcfd5
  4117ae:	or     ebx,DWORD PTR [edi]
  4117b0:	test   eax,0x47edef34
  4117b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b6:	shr    esp,1
  4117b8:	mov    eax,ebx
  4117ba:	push   cs
  4117bb:	add    DWORD PTR [edx-0xa60f98a],ecx
  4117c1:	js     0xe7e4402a
  4117c7:	jmp    0x411848
  4117c9:	push   ebp
  4117ca:	cmp    dh,BYTE PTR [eax]
  4117cc:	int    0xad
  4117ce:	fs sbb al,dl
  4117d1:	push   ss
  4117d2:	repz adc BYTE PTR ds:0xb44f1bc4,ch
  4117d9:	bound  esi,QWORD PTR [ebp-0xc]
  4117dc:	scas   eax,DWORD PTR es:[edi]
  4117dd:	into   
  4117de:	jg     0x41180e
  4117e0:	(bad)  
  4117e1:	fisub  DWORD PTR [esi-0x65]
  4117e4:	mov    ch,0x9
  4117e6:	sbb    edx,DWORD PTR [edx+ebx*8]
  4117e9:	mov    BYTE PTR [esi],dl
  4117eb:	aas    
  4117ec:	mov    dl,ah
  4117ee:	sub    ecx,esi
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	call   0xe8d19480
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	and    ah,BYTE PTR [edi+0x2a]
  41187b:	add    edx,ebx
  41187d:	mov    eax,0x9acac821
  411882:	jp     0x4118bc
  411884:	sub    eax,0x27094542
  411889:	xchg   ebx,eax
  41188a:	dec    edi
  41188b:	inc    esi
  41188c:	pop    ecx
  41188d:	sub    eax,edx
  41188f:	(bad)  
  411890:	cmp    al,BYTE PTR [ecx+0x704ae1f]
  411896:	outs   dx,DWORD PTR ds:[esi]
  411897:	cmp    bl,BYTE PTR [ebp-0x189b4a26]
  41189d:	mov    esi,0x47320183
  4118a2:	mov    ah,0xae
  4118a4:	jmp    0x42ce659f
  4118a9:	das    
  4118aa:	fcmovnu st,st(0)
  4118ac:	mov    ds:0xcd656bed,al
  4118b1:	push   eax
  4118b2:	or     al,0xf8
  4118b4:	cs jle 0x4118cf
  4118b7:	or     ebp,ecx
  4118b9:	mov    ds:0x8d251019,eax
  4118be:	test   DWORD PTR [edi-0x1f5d88a6],edx
  4118c4:	je     0x411932
  4118c6:	outs   dx,BYTE PTR ds:[esi]
  4118c7:	cmp    al,dh
  4118c9:	int    0xa5
  4118cb:	test   DWORD PTR [ebp-0x1e],ebp
  4118ce:	mov    ebx,0x263ff380
  4118d3:	lock in al,dx
  4118d5:	pop    edi
  4118d6:	jno    0x411955
  4118d8:	(bad)  
  4118d9:	loopne 0x4118e9
  4118db:	sub    BYTE PTR [esp+edi*2-0x5355696a],cl
  4118e2:	stos   BYTE PTR es:[edi],al
  4118e3:	mov    bl,0xa0
  4118e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e7:	jg     0x411940
  4118e9:	pop    ecx
  4118ea:	push   ss
  4118eb:	dec    edi
  4118ec:	ss adc al,dh
  4118ef:	dec    ebx
  4118f0:	(bad)  
  4118f1:	cmp    al,0x4f
  4118f3:	mov    ds,WORD PTR [eax+0x72]
  4118f6:	hlt    
  4118f7:	jmp    0x6502c6f8
  4118fc:	in     eax,dx
  4118fd:	les    esi,FWORD PTR [esi+0x612079de]
  411903:	and    dl,al
  411905:	pushf  
  411906:	ins    DWORD PTR es:[edi],dx
  411907:	mov    edx,0x85d05684
  41190c:	mov    es,WORD PTR [esi-0x2463f3f5]
  411912:	mov    dl,0x92
  411914:	(bad)  
  411915:	xchg   edi,eax
  411916:	and    BYTE PTR [edx-0x4448f48e],dh
  41191c:	inc    ebp
  41191d:	gs inc esi
  41191f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411920:	mov    ebx,0x69b73f3a
  411925:	retf   
  411926:	out    0xf9,eax
  411928:	mov    esi,0x21fe398f
  41192d:	jle    0x4118da
  41192f:	arpl   WORD PTR [edx-0x35],ax
  411932:	push   esi
  411933:	pop    ecx
  411934:	fstp   DWORD PTR [ebx+0x8ad27cb]
  41193a:	xor    eax,DWORD PTR cs:[edi+ebp*1]
  41193e:	xor    dh,ah
  411940:	mov    eax,0xe4dadbbb
  411945:	test   BYTE PTR [eax],bh
  411947:	stos   BYTE PTR es:[edi],al
  411948:	fwait
  411949:	add    esi,DWORD PTR [edx+0x70976357]
  41194f:	enter  0xe0e4,0x20
  411953:	jns    0x411996
  411955:	lods   al,BYTE PTR ds:[esi]
  411956:	imul   eax,DWORD PTR [edi],0xf33872b7
  41195c:	std    
  41195d:	jns    0x411972
  41195f:	imul   esp,esi,0xf093d84e
  411965:	ss jne 0x4119ba
  411968:	mov    ebx,0x4a0bc88c
  41196d:	sti    
  41196e:	cmp    DWORD PTR [eax],ecx
  411970:	jno    0x411959
  411972:	dec    ebp
  411973:	jmp    0xd5741813
  411978:	dec    eax
  411979:	and    DWORD PTR [ecx-0x5a],ebx
  41197c:	add    al,BYTE PTR [ebp-0x2233b9dd]
  411982:	jbe    0x411a02
  411984:	out    dx,al
  411985:	sbb    eax,0x2b8732d2
  41198a:	shl    DWORD PTR [esi],0x28
  41198d:	jnp    0x41194c
  41198f:	adc    al,0xea
  411991:	fwait
  411992:	out    dx,eax
  411993:	jmp    0xb6025613
  411998:	leave  
  411999:	adc    edi,DWORD PTR [esi]
  41199b:	int    0x42
  41199d:	cld    
  41199e:	jg     0x41198c
  4119a0:	push   edi
  4119a1:	inc    eax
  4119a2:	push   edx
  4119a3:	iret   
  4119a4:	adc    DWORD PTR [ebx],esi
  4119a6:	jo     0x41198d
  4119a8:	pushf  
  4119a9:	scas   al,BYTE PTR es:[edi]
  4119aa:	cmp    dl,dh
  4119ac:	inc    ebp
  4119ad:	mov    esi,edx
  4119af:	inc    cl
  4119b1:	retf   
  4119b2:	gs jmp 0x8c7ce875
  4119b8:	cmp    edx,esi
  4119ba:	cli    
  4119bb:	scas   al,BYTE PTR es:[edi]
  4119bc:	shl    al,cl
  4119be:	pop    ebp
  4119bf:	rcr    DWORD PTR ds:0x7410e587,1
  4119c5:	cwde   
  4119c6:	dec    ebx
  4119c7:	push   esi
  4119c8:	fdivr  st,st(6)
  4119ca:	aad    0xe8
  4119cc:	(bad)  
  4119cd:	or     ebx,DWORD PTR [ebx]
  4119cf:	fsubr  QWORD PTR [edx-0x3a37dae]
  4119d5:	inc    ecx
  4119d6:	ret    0x1c9c
  4119d9:	dec    esi
  4119da:	idiv   ebx
  4119dc:	aas    
  4119dd:	cmp    dh,BYTE PTR [ebp+0x43e542c9]
  4119e3:	xchg   edi,eax
  4119e4:	dec    ecx
  4119e5:	cmp    al,BYTE PTR [esi]
  4119e7:	loop   0x4119db
  4119e9:	xor    bl,BYTE PTR [eax-0x406ad35f]
  4119ef:	ins    BYTE PTR es:[edi],dx
  4119f0:	xor    DWORD PTR [ecx-0x1b],edi
  4119f3:	mov    bh,0xa7
  4119f5:	pop    ecx
  4119f6:	push   esi
  4119f7:	mov    edx,esp
  4119f9:	sbb    eax,0x8dc8000e
  4119fe:	sub    DWORD PTR ds:0x14824604,ebp
  411a04:	das    
  411a05:	inc    esp
  411a06:	jle    0x411993
  411a08:	inc    edx
  411a09:	int3   
  411a0a:	jnp    0x411a3a
  411a0c:	cwde   
  411a0d:	inc    ecx
  411a0e:	(bad)  
  411a0f:	push   ecx
  411a10:	imul   ebp,DWORD PTR [edx-0x114d8e6e],0x3f
  411a17:	std    
  411a18:	mov    al,ds:0xd198277b
  411a1d:	mov    bh,0xdd
  411a1f:	jb     0x411a59
  411a21:	cmp    eax,0x22a5c6bd
  411a26:	std    
  411a27:	add    edi,DWORD PTR [ebx+0x58]
  411a2a:	lock loopne 0x411a1a
  411a2d:	sbb    eax,0x913ac1a6
  411a32:	dec    edx
  411a33:	(bad)  
  411a34:	mov    al,0xa4
  411a36:	fdiv   DWORD PTR [ecx+eax*2-0x37]
  411a3a:	ins    DWORD PTR es:[edi],dx
  411a3b:	fld    DWORD PTR [edx]
  411a3d:	xor    DWORD PTR [edi-0x16b5c109],ebp
  411a43:	into   
  411a44:	aad    0x54
  411a46:	push   0x8ff6cf38
  411a4b:	push   es
  411a4c:	or     BYTE PTR [esi+0x28],bl
  411a4f:	out    0xce,al
  411a51:	dec    ebx
  411a52:	adc    eax,0x515306dc
  411a57:	dec    eax
  411a58:	mov    bh,0x4a
  411a5a:	ds jne 0x411aae
  411a5d:	repz add esi,DWORD PTR [ebx-0x61]
  411a61:	xor    eax,0x523191ea
  411a66:	dec    ebx
  411a67:	cmc    
  411a68:	and    eax,0xffffff92
  411a6b:	outs   dx,BYTE PTR ds:[esi]
  411a6c:	sti    
  411a6d:	test   BYTE PTR [edi-0x37],bl
  411a70:	push   eax
  411a71:	dec    edi
  411a72:	mov    al,0x8
  411a74:	cld    
  411a75:	sbb    ecx,0xffffff98
  411a78:	sub    esp,ebp
  411a7a:	test   DWORD PTR [edx],edi
  411a7c:	daa    
  411a7d:	repz push 0xad2b6ae7
  411a83:	pop    esi
  411a84:	add    DWORD PTR [esi+0xf],ebp
  411a87:	cmp    edx,ebx
  411a89:	add    al,0x9c
  411a8b:	push   es
  411a8c:	mov    ds:0xac97f7ba,eax
  411a91:	mov    ebx,0xb3889763
  411a96:	jmp    0x411a94
  411a98:	sar    BYTE PTR [eax],cl
  411a9a:	in     eax,0x1e
  411a9c:	xlat   BYTE PTR ds:[ebx]
  411a9d:	adc    BYTE PTR [ebx],ah
  411a9f:	lods   eax,DWORD PTR ds:[esi]
  411aa0:	cmp    eax,0xeb441968
  411aa5:	mov    al,0xa8
  411aa7:	cmp    al,0xc1
  411aa9:	sti    
  411aaa:	das    
  411aab:	sar    edx,0x3c
  411aae:	scas   al,BYTE PTR es:[edi]
  411aaf:	into   
  411ab0:	ret    
  411ab1:	inc    esp
  411ab2:	push   0x26fd1a41
  411ab7:	addr16 aad 0x26
  411aba:	xchg   BYTE PTR [edx-0x399cc8ab],dh
  411ac0:	add    esi,DWORD PTR [esi+0x3f]
  411ac3:	mov    al,ds:0x8bdaaee0
  411ac8:	(bad)  
  411ac9:	sbb    bh,BYTE PTR ds:0x5881e79b
  411acf:	mov    esp,0x89a610fe
  411ad4:	adc    eax,0xe96de5f7
  411ad9:	out    0x9f,al
  411adb:	push   esi
  411adc:	mov    eax,0xb6f4dd50
  411ae1:	push   ebp
  411ae2:	xor    esi,DWORD PTR [ecx-0x327fe99f]
  411ae8:	mov    edi,0xd1030822
  411aed:	fsub   DWORD PTR [edi]
  411aef:	ret    
  411af0:	rcr    esp,1
  411af2:	in     al,dx
  411af3:	sbb    DWORD PTR [edx],ecx
  411af5:	cmp    eax,0xe03e82bc
  411afa:	jae    0x411b45
  411afc:	int    0xec
  411afe:	mov    al,0xb6
  411b00:	in     eax,0x2d
  411b02:	or     DWORD PTR [edi-0x31],edi
  411b05:	gs push ds
  411b07:	(bad)  
  411b08:	xor    eax,DWORD PTR [edi+0x5f]
  411b0b:	jno    0x411b12
  411b0d:	xor    ah,BYTE PTR [eax+0x25]
  411b10:	nop
  411b11:	mov    esi,edi
  411b13:	jmp    0x411b4b
  411b15:	dec    edx
  411b16:	fdivr  DWORD PTR [ebx+ebx*2]
  411b19:	dec    ebx
  411b1a:	or     DWORD PTR [edx+esi*1-0x73],0x7ff23a2f
  411b22:	outs   dx,BYTE PTR ds:[esi]
  411b23:	sub    BYTE PTR [ebx+edi*2],cl
  411b26:	mov    ecx,0x9182d094
  411b2b:	cwde   
  411b2c:	mov    esp,0x57324ad9
  411b31:	push   ss
  411b32:	clc    
  411b33:	fwait
  411b34:	push   esi
  411b35:	inc    ebx
  411b36:	or     BYTE PTR [ebp+0x5fdddb7e],al
  411b3c:	out    dx,eax
  411b3d:	adc    eax,0xe90ce680
  411b42:	icebp  
  411b43:	mov    BYTE PTR [edx+0x56],dh
  411b46:	dec    eax
  411b47:	cmp    DWORD PTR [eax-0x73d55529],ebp
  411b4d:	lods   eax,DWORD PTR ds:[esi]
  411b4e:	sub    esp,DWORD PTR ds:0xfebb3b07
  411b54:	sbb    esi,edi
  411b56:	scas   al,BYTE PTR es:[edi]
  411b57:	mov    ecx,0x64d0d759
  411b5c:	xchg   ecx,eax
  411b5d:	add    DWORD PTR [ebx-0x5443c1cc],ebp
  411b63:	jno    0x411b2c
  411b65:	outs   dx,DWORD PTR ds:[esi]
  411b66:	das    
  411b67:	fcmove st,st(0)
  411b69:	not    DWORD PTR [eax-0x51e01ad2]
  411b6f:	pop    ds
  411b70:	xchg   dh,cl
  411b72:	loope  0x411af6
  411b74:	dec    edx
  411b75:	mov    ebx,0xb6daa846
  411b7a:	jmp    0x411b2d
  411b7c:	xchg   esi,eax
  411b7d:	sbb    DWORD PTR [ebx+eiz*1],esi
  411b80:	das    
  411b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b82:	pusha  
  411b83:	clc    
  411b84:	leave  
  411b85:	sahf   
  411b86:	xor    eax,0x4d84d127
  411b8b:	imul   edi,DWORD PTR [ebx],0xe
  411b8e:	pusha  
  411b8f:	add    eax,0x4a7af2c1
  411b94:	jns    0x411b72
  411b96:	daa    
  411b97:	push   ds
  411b98:	int    0x5e
  411b9a:	mov    eax,0xa85b1842
  411b9f:	fnstsw WORD PTR [edi+0x2e]
  411ba2:	xor    al,0x14
  411ba4:	lds    esi,FWORD PTR [esi+0x3a]
  411ba7:	enter  0x7e50,0xf5
  411bab:	popf   
  411bac:	mov    WORD PTR [eax+0x324c88c],?
  411bb2:	fstp   QWORD PTR [eax-0x4c]
  411bb5:	int3   
  411bb6:	dec    ecx
  411bb7:	push   0x62abb6ff
  411bbc:	imul   esp,DWORD PTR [edi+0x58],0x3e212781
  411bc3:	jns    0x411b9b
  411bc5:	ret    0xf3eb
  411bc8:	aas    
  411bc9:	out    dx,al
  411bca:	mov    ds:0x64f6a764,al
  411bcf:	adc    eax,0x77e97ace
  411bd4:	cs and al,0x2e
  411bd7:	arpl   WORD PTR [esi-0x3d6116f0],cx
  411bdd:	rol    BYTE PTR [ebp-0x5802f020],cl
  411be3:	loope  0x411c59
  411be5:	(bad)  
  411be6:	push   edi
  411be7:	in     eax,0x2b
  411be9:	dec    ebx
  411bea:	out    0xaa,eax
  411bec:	nop
  411bed:	adc    eax,0xc88a6835
  411bf2:	lea    edx,[esi+0x21]
  411bf5:	or     BYTE PTR [eax+0x4fed3efa],dl
  411bfb:	cmp    DWORD PTR [edi+0x4b48357],0xffffffe8
  411c02:	imul   ebx,DWORD PTR [edx+0x10],0x2df93a82
  411c09:	ds xor eax,0x3f75b58d
  411c0f:	imul   edi,ebp,0xf3cdc0c3
  411c15:	mov    eax,0x6d04d304
  411c1a:	mov    cl,0x8d
  411c1c:	call   ebp
  411c1e:	ins    BYTE PTR es:[edi],dx
  411c1f:	ret    
  411c20:	data16 jl 0x411bad
  411c23:	mov    ch,0xc1
  411c25:	sbb    al,0xd9
  411c27:	or     ah,bl
  411c29:	dec    edi
  411c2a:	loopne 0x411c84
  411c2c:	iret   
  411c2d:	ret    0x1d78
  411c30:	sbb    al,0xb1
  411c32:	push   edx
  411c33:	lods   eax,DWORD PTR ds:[esi]
  411c34:	les    edi,FWORD PTR [esi]
  411c36:	in     al,dx
  411c37:	int    0xb0
  411c39:	jp     0x411cb0
  411c3b:	hlt    
  411c3c:	sbb    eax,0x6d73b22d
  411c41:	dec    eax
  411c42:	out    dx,al
  411c43:	or     al,0x80
  411c45:	jmp    0x411c11
  411c47:	shl    al,1
  411c49:	lods   eax,DWORD PTR ds:[esi]
  411c4a:	jge    0x411c36
  411c4c:	arpl   WORD PTR [ebx+0x350d3297],ax
  411c52:	push   es
  411c53:	out    0x1,al
  411c55:	inc    ebx
  411c56:	mov    ds:0x76032c0,al
  411c5b:	fs sbb al,0x19
  411c5e:	(bad)  
  411c5f:	push   eax
  411c60:	push   cs
  411c61:	jle    0x411bf8
  411c63:	push   es
  411c64:	sbb    ah,BYTE PTR [edx-0x6f381241]
  411c6a:	push   ss
  411c6b:	inc    ecx
  411c6c:	inc    esp
  411c6d:	ins    DWORD PTR es:[edi],dx
  411c6e:	icebp  
  411c6f:	scas   eax,DWORD PTR es:[edi]
  411c70:	pop    ds
  411c71:	xor    ch,cl
  411c73:	je     0x411cd7
  411c75:	sahf   
  411c76:	and    DWORD PTR [esi],0x74
  411c79:	pushf  
  411c7a:	in     eax,dx
  411c7b:	ja     0x411c91
  411c7d:	leave  
  411c7e:	out    0xf1,eax
  411c80:	scas   eax,DWORD PTR es:[edi]
  411c81:	sti    
  411c82:	inc    edi
  411c83:	xchg   ebx,ebx
  411c85:	test   DWORD PTR [edx+edi*1],ebp
  411c88:	jp     0x411c33
  411c8a:	fidivr DWORD PTR [esi-0x57ce9f5b]
  411c90:	call   0x8447:0xa3310c86
  411c97:	mov    BYTE PTR [edx],bl
  411c99:	stos   BYTE PTR es:[edi],al
  411c9a:	pop    eax
  411c9b:	je     0x411cfa
  411c9d:	retf   0x32a2
  411ca0:	(bad)  
  411ca1:	ins    DWORD PTR es:[edi],dx
  411ca2:	pop    es
  411ca3:	rcr    DWORD PTR [edi],1
  411ca5:	mov    WORD PTR [ebp-0x48],cs
  411ca8:	xor    eax,0x4fef4b44
  411cad:	cmp    eax,0x8af78e5a
  411cb2:	jge    0x411cc5
  411cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cb5:	xchg   ecx,eax
  411cb6:	dec    edx
  411cb7:	xchg   esp,eax
  411cb8:	lds    esp,FWORD PTR [ecx-0x35]
  411cbb:	aaa    
  411cbc:	test   DWORD PTR [esi-0x2a],eax
  411cbf:	pusha  
  411cc0:	sbb    eax,0x71
  411cc3:	inc    esi
  411cc4:	push   0x98bc4676
  411cc9:	ret    0x4950
  411ccc:	pop    es
  411ccd:	in     eax,dx
  411cce:	dec    esp
  411ccf:	push   0x95b5b937
  411cd4:	cmc    
  411cd5:	add    ebp,DWORD PTR [ebp-0x72]
  411cd8:	lods   al,BYTE PTR ds:[esi]
  411cd9:	add    al,0x9d
  411cdb:	jg     0x411cbf
  411cdd:	mov    bh,0xd
  411cdf:	jne    0x411c8d
  411ce1:	clc    
  411ce2:	lods   al,BYTE PTR ds:[esi]
  411ce3:	pusha  
  411ce4:	pushf  
  411ce5:	jae    0x411d28
  411ce7:	pop    esi
  411ce8:	frstor [eax+0x18]
  411ceb:	mov    ds:0xb8c01979,eax
  411cf0:	mov    edx,DWORD PTR [ebp+0x18fd943d]
  411cf6:	enter  0x767e,0x25
  411cfa:	sbb    BYTE PTR [edx],bh
  411cfc:	jb     0x411d79
  411cfe:	or     eax,0xd4eb1b85
  411d03:	aam    0xb3
  411d05:	or     eax,0xa35fa07a
  411d0a:	jmp    0x411d07
  411d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d0d:	ss jno 0x411cc9
  411d10:	add    eax,0xb272644a
  411d15:	sub    esp,DWORD PTR [eax*1-0x38e9247f]
  411d1c:	cmp    DWORD PTR ds:[eax-0x20],esi
  411d20:	out    dx,al
  411d21:	ja     0x411d1f
  411d23:	idiv   DWORD PTR [ecx+0x4d0b6966]
  411d29:	retf   
  411d2a:	test   DWORD PTR [edi+0x20fcf22d],ebx
  411d30:	xor    ecx,DWORD PTR [eax+0x65]
  411d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d34:	mov    ah,0xf7
  411d36:	les    ebp,FWORD PTR [eax]
  411d38:	test   DWORD PTR [ebp-0x156a7066],esi
  411d3e:	pop    esi
  411d3f:	pop    esi
  411d40:	push   ss
  411d41:	push   ds
  411d42:	dec    edi
  411d43:	add    DWORD PTR [ebx+0x1491c38c],0x48
  411d4a:	nop
  411d4b:	sbb    al,0x2a
  411d4d:	lahf   
  411d4e:	(bad)  [edx+0x3abdde3c]
  411d54:	sbb    dh,BYTE PTR [eax+0x4d]
  411d57:	ret    0xb88f
  411d5a:	mov    dl,0x8a
  411d5c:	ja     0x411d7d
  411d5e:	pusha  
  411d5f:	lods   al,BYTE PTR ds:[esi]
  411d60:	shl    DWORD PTR [edx],cl
  411d62:	dec    esp
  411d63:	cmp    DWORD PTR [eax+0x2a0c2dd],ebx
  411d69:	js     0x411cfb
  411d6b:	xor    bh,BYTE PTR [ebp-0x1e]
  411d6e:	sbb    al,0xe7
  411d70:	mov    ?,WORD PTR [ebx+0x24b98477]
  411d76:	jb     0x411dc3
  411d78:	pop    eax
  411d79:	cmp    eax,0xb71a93ab
  411d7e:	push   ecx
  411d7f:	jle    0x411dd4
  411d81:	jmp    0xafed:0xb0e9d1a0
  411d88:	lods   eax,DWORD PTR ds:[esi]
  411d89:	add    esi,DWORD PTR [esi]
  411d8b:	mov    al,ds:0x386e5e64
  411d90:	enter  0xab8c,0x4c
  411d94:	jns    0x411d8c
  411d96:	cmp    ecx,DWORD PTR [edi]
  411d98:	sbb    al,0xe1
  411d9a:	scas   al,BYTE PTR es:[edi]
  411d9b:	leave  
  411d9c:	es nop
  411d9e:	vmptrld QWORD PTR [eax-0x13e0acf0]
  411da5:	mov    ebx,0x1888edad
  411daa:	sub    esp,esi
  411dac:	or     al,0x53
  411dae:	retf   0xbcad
  411db1:	not    DWORD PTR [esi-0x7d]
  411db4:	ret    0x2a3
  411db7:	cmp    dl,BYTE PTR [eax+eiz*1]
  411dba:	push   cs
  411dbb:	mov    edx,0x884b46a4
  411dc0:	call   0x97a5:0x4b02a100
  411dc7:	xor    BYTE PTR [edx],cl
  411dc9:	shl    bl,1
  411dcb:	mov    ss,WORD PTR [eax]
  411dcd:	adc    dh,BYTE PTR [eax+edi*2-0x45]
  411dd1:	xchg   ebp,eax
  411dd2:	icebp  
  411dd3:	iret   
  411dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd5:	mov    bl,0xb
  411dd7:	in     al,dx
  411dd8:	imul   ecx,esp,0x3
  411ddb:	push   ss
  411ddc:	test   BYTE PTR [ecx],al
  411dde:	aad    0x61
  411de0:	loopne 0x411d74
  411de2:	not    DWORD PTR [edi]
  411de4:	and    DWORD PTR [eax],eax
  411de6:	push   esp
  411de7:	inc    edi
  411de8:	fild   DWORD PTR [esi-0x9575dfe]
  411dee:	cmp    cl,0x8e
  411df1:	dec    ecx
  411df2:	pop    ebp
  411df3:	sti    
  411df4:	push   es
  411df5:	push   edx
  411df6:	mov    ebp,0x3107484a
  411dfb:	(bad)  
  411dfc:	mov    DWORD PTR [ecx-0x3abef313],esp
  411e02:	outs   dx,BYTE PTR ds:[esi]
  411e03:	or     al,0x75
  411e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e06:	push   esp
  411e07:	cwde   
  411e08:	js     0x411e5d
  411e0a:	xlat   BYTE PTR ds:[ebx]
  411e0b:	xchg   ecx,eax
  411e0c:	(bad)  [ecx-0x14e8631d]
  411e12:	or     BYTE PTR [ebp+eax*2+0x14c6368c],bh
  411e19:	cdq    
  411e1a:	les    edi,FWORD PTR [edx]
  411e1c:	cdq    
  411e1d:	mov    edx,0x4b242319
  411e22:	cmc    
  411e23:	cmp    BYTE PTR [ebp-0x7f92a042],dl
  411e29:	jo     0x411df6
  411e2b:	outs   dx,BYTE PTR ds:[esi]
  411e2c:	push   esp
  411e2d:	ror    al,1
  411e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e31:	sub    edx,DWORD PTR [esi]
  411e33:	shr    BYTE PTR [eax],cl
  411e35:	(bad)  
  411e36:	and    dl,BYTE PTR [edi+eiz*1-0x30f333f7]
  411e3d:	adc    al,0x95
  411e3f:	pushf  
  411e40:	stos   BYTE PTR es:[edi],al
  411e41:	retf   0x64d
  411e44:	pop    es
  411e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e46:	mov    eax,0x249b4ef3
  411e4b:	dec    eax
  411e4c:	loopne 0x411ec6
  411e4e:	add    ah,BYTE PTR [ecx-0x5d]
  411e51:	cmp    al,0x94
  411e53:	cwde   
  411e54:	ja     0x411e4c
  411e56:	stc    
  411e57:	mov    al,ds:0xc88711f1
  411e5c:	pop    esp
  411e5d:	(bad)  
  411e5e:	pop    ds
  411e5f:	icebp  
  411e60:	das    
  411e61:	out    0x2c,eax
  411e63:	loop   0x411dfb
  411e65:	cmp    al,0x6e
  411e67:	std    
  411e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e6a:	xor    BYTE PTR [edi+ebp*1-0x40ec7c9c],dl
  411e71:	inc    eax
  411e72:	imul   WORD PTR [ecx-0x4d]
  411e76:	jbe    0x411e26
  411e78:	and    eax,0x4cf2f422
  411e7d:	imul   eax,DWORD PTR [eax-0x1e],0x0
  411e81:	aaa    
  411e82:	and    ecx,esi
  411e84:	stc    
  411e85:	sbb    eax,0x141645eb
  411e8a:	pushf  
  411e8b:	push   edi
  411e8c:	push   0x799ab0de
  411e91:	add    BYTE PTR [ecx+0x5cdcc7cf],al
  411e97:	jl     0x411e8e
  411e99:	int3   
  411e9a:	mov    al,0x93
  411e9c:	hlt    
  411e9d:	jg     0x411e4b
  411e9f:	je     0x411ee4
  411ea1:	mov    dh,0x90
  411ea3:	in     eax,0xd5
  411ea5:	or     al,0xcd
  411ea7:	sub    al,0x87
  411ea9:	mov    al,0xe0
  411eab:	pop    ebp
  411eac:	jg     0x411ed4
  411eae:	retf   0x3f3
  411eb1:	neg    DWORD PTR [edi-0x11]
  411eb4:	out    dx,eax
  411eb5:	pop    ds
  411eb6:	mov    dh,0x1b
  411eb8:	fsub   DWORD PTR [ebx]
  411eba:	sbb    eax,0x800893db
  411ebf:	pop    ebp
  411ec0:	xlat   BYTE PTR ds:[ebx]
  411ec1:	cs push 0x24dffd04
  411ec7:	inc    eax
  411ec8:	mov    dh,0x8f
  411eca:	or     al,0x10
  411ecc:	aas    
  411ecd:	in     eax,dx
  411ece:	in     eax,dx
  411ecf:	and    ch,BYTE PTR [edi+edi*2]
  411ed2:	enter  0xe78d,0x57
  411ed6:	loopne 0x411e5d
  411ed8:	or     DWORD PTR [edi],0x4d
  411edb:	mov    ah,0xc5
  411edd:	push   di
  411edf:	cwde   
  411ee0:	ret    
  411ee1:	pop    ecx
  411ee2:	ja     0x411f17
  411ee4:	call   FWORD PTR [esi+0x47466d7d]
  411eea:	jmp    0x912a:0x39a6be21
  411ef1:	test   bl,dl
  411ef3:	imul   edx,ecx,0xffffffda
  411ef6:	mov    cl,0xf6
  411ef8:	adc    cl,bl
  411efa:	add    al,0x5c
  411efc:	ret    
  411efd:	call   0xbbb8:0x3dfc6be
  411f04:	(bad)  
  411f05:	cld    
  411f06:	fstp   QWORD PTR [esi-0x5afac742]
  411f0c:	sbb    cl,dh
  411f0e:	popf   
  411f0f:	xchg   BYTE PTR [edi],ch
  411f11:	imul   ecx,ebp,0xa
  411f14:	stc    
  411f15:	pop    es
  411f16:	rcl    DWORD PTR [ecx-0x2fbc1fb5],cl
  411f1c:	in     al,dx
  411f1d:	mov    eax,0x8b0a361d
  411f22:	loop   0x411f4e
  411f24:	sbb    DWORD PTR [ecx],0xfffffffd
  411f27:	aam    0x83
  411f29:	fistp  WORD PTR [edx-0x41c9b195]
  411f2f:	add    BYTE PTR [ebx+eiz*1-0x1e3368aa],ah
  411f36:	and    edx,DWORD PTR [esi+0x44ab2562]
  411f3c:	or     DWORD PTR [ebx-0x58],0xe
  411f40:	sub    edi,esp
  411f42:	pop    esp
  411f43:	sahf   
  411f44:	(bad)  
  411f45:	ror    BYTE PTR [ebx],0xaa
  411f48:	lock and ecx,edx
  411f4b:	cmp    ah,BYTE PTR [edx+esi*1+0x7ab70e91]
  411f52:	aam    0x46
  411f54:	push   0x22
  411f56:	add    DWORD PTR [edi+0x57358de2],eax
  411f5c:	std    
  411f5d:	dec    ebp
  411f5e:	into   
  411f5f:	jl     0x411fb5
  411f61:	xchg   ebp,eax
  411f62:	stc    
  411f63:	push   ebx
  411f64:	cwde   
  411f65:	pop    edx
  411f66:	cmc    
  411f67:	divps  xmm5,XMMWORD PTR [esi+ecx*8]
  411f6b:	sub    DWORD PTR [esi-0x36],0x212f0d99
  411f72:	sbb    edi,DWORD PTR [ebp-0x64]
  411f75:	pop    edx
  411f76:	(bad)  
  411f77:	(bad)  [ebp+0x1308c90e]
  411f7d:	sahf   
  411f7e:	jge    0x411f94
  411f80:	sub    ecx,eax
  411f82:	leave  
  411f83:	mov    dh,0x4a
  411f85:	add    BYTE PTR [edx+0x8],cl
  411f88:	pop    ss
  411f89:	push   0x5eeb4b43
  411f8e:	out    dx,eax
  411f8f:	(bad)  
  411f90:	adc    bl,bl
  411f92:	(bad)  
  411f93:	xor    eax,0x2a2c2431
  411f98:	adc    ebx,DWORD PTR [edx+edx*2]
  411f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f9c:	push   ecx
  411f9d:	aam    0x39
  411f9f:	jle    0x412001
  411fa1:	ret    0xcd77
  411fa4:	xchg   esi,eax
  411fa5:	cdq    
  411fa6:	outs   dx,DWORD PTR ds:[esi]
  411fa7:	ficom  DWORD PTR [ecx-0x7493c2]
  411fad:	xchg   edi,eax
  411fae:	test   DWORD PTR [eax+0xb6d683],ebp
  411fb4:	loope  0x411f75
  411fb6:	(bad)  
  411fb7:	aad    0xf7
  411fb9:	push   esp
  411fba:	mov    ds:0x162468d2,eax
  411fbf:	sub    BYTE PTR [esi],0x8f
  411fc2:	xor    ebx,ebp
  411fc4:	sub    DWORD PTR [edi+0x4a5d6337],ebp
  411fca:	out    dx,eax
  411fcb:	jo     0x412010
  411fcd:	and    dh,BYTE PTR [edx+0x20]
  411fd0:	(bad)  
  411fd1:	mov    bh,0x95
  411fd3:	xor    al,0xcf
  411fd5:	xchg   DWORD PTR [ecx],ebx
  411fd7:	sub    BYTE PTR [ecx],0x62
  411fda:	xchg   edx,eax
  411fdb:	xor    ch,0xe4
  411fde:	mov    dh,0xac
  411fe0:	call   0xe460:0xc10157fb
  411fe7:	pop    ebp
  411fe8:	sbb    BYTE PTR [edx+0x67],ah
  411feb:	push   cs
  411fec:	inc    esp
  411fed:	int    0x6c
  411fef:	dec    esi
  411ff0:	inc    esp
  411ff1:	call   0x29a2:0xa64f174a
  411ff8:	hlt    
  411ff9:	and    ah,BYTE PTR [esi]
  411ffb:	xchg   BYTE PTR [ebp+0x3493b4f6],bh
  412001:	pop    esp
  412002:	push   edi
  412003:	adc    edx,edi
  412005:	test   DWORD PTR [edx],0xf409a5c9
  41200b:	push   edx
  41200c:	inc    ecx
  41200d:	xor    esi,eax
  41200f:	jnp    0x411fa7
  412011:	mov    eax,0x37f9d1a3
  412016:	and    al,0x76
  412018:	add    al,0x6a
  41201a:	popa   
  41201b:	or     edx,ecx
  41201d:	inc    esp
  41201e:	int    0xee
  412020:	fst    QWORD PTR ds:0xfa707e64
  412026:	xchg   esi,eax
  412027:	sbb    BYTE PTR [ecx+0x66d65075],bh
  41202d:	ja     0x411ff7
  41202f:	inc    esi
  412030:	dec    ebp
  412031:	in     eax,dx
  412032:	retf   0xf4cb
  412035:	loopne 0x412017
  412037:	fs data16 mov ah,0x95
  41203b:	jg     0x412091
  41203d:	mov    edx,0x3bc80cb0
  412042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412044:	xor    eax,0x6283044b
  412049:	jno    0x412046
  41204b:	mov    bh,0xae
  41204d:	aas    
  41204e:	arpl   bx,dx
  412050:	jle    0x411ff7
  412052:	and    bh,BYTE PTR [esi+0x2e]
  412055:	xchg   edi,eax
  412056:	mov    eax,0xa95c9854
  41205b:	into   
  41205c:	icebp  
  41205d:	shr    dl,cl
  41205f:	aas    
  412060:	xor    BYTE PTR [edx],cl
  412062:	inc    edx
  412063:	pop    edx
  412064:	ds pop eax
  412066:	sbb    eax,0xcb6a9de2
  41206b:	pop    ds
  41206c:	ret    
  41206d:	pop    ss
  41206e:	sbb    DWORD PTR [edi-0x7899ed25],edi
  412074:	stos   BYTE PTR es:[edi],al
  412075:	aam    0x18
  412077:	mov    al,0xdc
  412079:	shl    DWORD PTR [ecx+0x32],1
  41207c:	icebp  
  41207d:	jle    0x4120c0
  41207f:	xchg   ecx,eax
  412080:	addr16 daa 
  412082:	xchg   ebp,eax
  412083:	lea    eax,[esi]
  412085:	pusha  
  412086:	jmp    0x4120b3
  412088:	rcr    DWORD PTR [ebx-0x3],1
  41208b:	out    0x94,eax
  41208d:	imul   eax
  41208f:	ins    DWORD PTR es:[edi],dx
  412090:	out    0x8d,al
  412092:	inc    ebp
  412093:	mov    bl,0xfd
  412095:	pop    eax
  412096:	sbb    bl,BYTE PTR [esp+edx*4+0x78]
  41209a:	push   eax
  41209b:	dec    edi
  41209c:	mov    bl,cl
  41209e:	out    0xfc,al
  4120a0:	inc    edx
  4120a1:	loop   0x4120f1
  4120a3:	or     eax,edi
  4120a5:	sub    edi,DWORD PTR [ebp-0x76]
  4120a8:	pop    ebx
  4120a9:	into   
  4120aa:	cdq    
  4120ab:	jne    0x412073
  4120ad:	push   0x47
  4120af:	stos   DWORD PTR es:[edi],eax
  4120b0:	xchg   ebp,eax
  4120b1:	inc    edx
  4120b2:	shl    DWORD PTR [eax+0x1a],cl
  4120b5:	aad    0xc7
  4120b7:	std    
  4120b8:	pushf  
  4120b9:	push   ecx
  4120ba:	dec    edx
  4120bb:	nop
  4120bc:	pop    edi
  4120bd:	jae    0x412104
  4120bf:	and    al,0x1b
  4120c1:	repnz push edx
  4120c3:	and    cl,BYTE PTR [esi+0x267d0c02]
  4120c9:	mov    dh,0xd
  4120cb:	xlat   BYTE PTR ds:[ebx]
  4120cc:	scas   al,BYTE PTR es:[edi]
  4120cd:	std    
  4120ce:	imul   esi,DWORD PTR [esi],0xffffff8f
  4120d1:	pop    ecx
  4120d2:	retf   0xb8e
  4120d5:	cld    
  4120d6:	dec    edx
  4120d7:	rol    BYTE PTR [ecx+0x35],0xba
  4120db:	sbb    BYTE PTR [edx+0x4ebbccce],dh
  4120e1:	or     cl,dl
  4120e3:	push   ds
  4120e4:	dec    ebp
  4120e5:	inc    edi
  4120e6:	test   BYTE PTR [edx-0x25a1cdbc],ah
  4120ec:	in     al,0x6f
  4120ee:	add    BYTE PTR [ebp-0x7d],ah
  4120f1:	popa   
  4120f2:	inc    eax
  4120f3:	call   0xc58f71d6
  4120f8:	sbb    eax,0xb96a4597
  4120fd:	pop    ebx
  4120fe:	inc    edi
  4120ff:	or     DWORD PTR [ecx],ebp
  412101:	nop
  412102:	in     eax,0x57
  412104:	jnp    0x412107
  412106:	clc    
  412107:	jmp    0xb57f:0xb67a252c
  41210e:	test   BYTE PTR [ecx-0x40137ad0],bh
  412114:	loope  0x41214b
  412116:	mov    ah,BYTE PTR [ebx+0x7500d9aa]
  41211c:	xchg   esi,eax
  41211d:	cli    
  41211e:	adc    esi,DWORD PTR [ebx+0x77]
  412121:	push   edi
  412122:	faddp  st(2),st
  412124:	dec    edi
  412125:	push   eax
  412126:	mov    DWORD PTR [edx-0x23852bfd],ecx
  41212c:	arpl   WORD PTR [eax+ebp*8-0x6556a9c4],bp
  412133:	clc    
  412134:	(bad)  
  412135:	ffree  st(4)
  412137:	jmp    0x8b56b192
  41213c:	out    0xdd,eax
  41213e:	(bad)  
  412140:	lock mov ecx,0x33058fb1
  412146:	mov    dl,0xd8
  412148:	sahf   
  412149:	aas    
  41214a:	jp     0x4120cd
  41214c:	mov    esi,0x766b54b2
  412151:	mov    cl,ah
  412153:	add    esi,ebp
  412155:	inc    edi
  412156:	in     al,0xdc
  412158:	imul   ebp,DWORD PTR [esi-0x50],0x3a
  41215c:	test   al,0x87
  41215e:	cld    
  41215f:	mov    cl,0x30
  412161:	shl    DWORD PTR [esi],cl
  412163:	sub    al,ah
  412165:	out    0x98,al
  412167:	pop    ecx
  412168:	stc    
  412169:	add    al,0x6
  41216b:	inc    ebx
  41216c:	sub    BYTE PTR [eax+0x47],cl
  41216f:	push   esi
  412170:	fs push ebp
  412172:	inc    ebp
  412173:	movmskps esi,xmm1
  412176:	test   al,0x24
  412178:	je     0x412177
  41217a:	jne    0x4121fb
  41217c:	addr16 ja 0x4121ce
  41217f:	ja     0x41216b
  412181:	push   edi
  412182:	pusha  
  412183:	mov    bh,0x78
  412185:	mov    ds:0xf743d33f,eax
  41218a:	cmp    DWORD PTR [edx+0x3a],edx
  41218d:	jge    0x4121a2
  41218f:	and    al,0xd7
  412191:	into   
  412192:	inc    esi
  412193:	and    ebp,DWORD PTR [ebx+0x7da746de]
  412199:	aam    0x4b
  41219b:	xchg   DWORD PTR [ebx+0x4939f1d0],esi
  4121a1:	and    bl,BYTE PTR [ebx+0x47]
  4121a4:	(bad)  [eax-0x7c589b63]
  4121aa:	jp     0x4121c1
  4121ac:	rcl    esp,cl
  4121ae:	lods   eax,DWORD PTR ds:[esi]
  4121af:	jge    0x4121ab
  4121b1:	mov    ebx,0x6dcd9900
  4121b6:	cld    
  4121b7:	push   es
  4121b8:	aas    
  4121b9:	adc    eax,0xb74d8685
  4121be:	adc    DWORD PTR [ecx+0x5599c3b2],ecx
  4121c4:	push   ss
  4121c5:	loop   0x41218e
  4121c7:	xor    eax,0xca88f1c4
  4121cc:	outs   dx,BYTE PTR ds:[esi]
  4121cd:	iret   
  4121ce:	stos   DWORD PTR es:[edi],eax
  4121cf:	and    ecx,DWORD PTR [ebx-0x17984f99]
  4121d5:	xor    BYTE PTR [edx+0x73],cl
  4121d8:	lock (bad) 
  4121db:	sub    esi,eax
  4121dd:	ds lock icebp 
  4121e0:	pop    ebx
  4121e1:	or     DWORD PTR [esi-0x10],ebp
  4121e4:	cmp    al,0xeb
  4121e6:	add    al,0xb9
  4121e8:	pop    ebp
  4121e9:	(bad)  
  4121ea:	shl    BYTE PTR [esi],cl
  4121ec:	stos   DWORD PTR es:[edi],eax
  4121ed:	hlt    
  4121ee:	sbb    ch,BYTE PTR [edx-0x7f]
  4121f1:	adc    edx,DWORD PTR [ebx]
  4121f3:	nop
  4121f4:	cdq    
  4121f5:	jo     0x41226c
  4121f7:	ss pop es
  4121f9:	call   0x399b:0xdaedc270
  412200:	mov    ds:0x18528087,al
  412205:	ins    DWORD PTR es:[edi],dx
  412206:	mov    bl,0xe2
  412208:	jne    0x4121a1
  41220a:	jmp    0x17e2:0xaa047708
  412211:	rcl    BYTE PTR [ebp-0x5b],0xb3
  412215:	jbe    0x41221a
  412217:	mov    cl,0x2d
  412219:	inc    edx
  41221a:	out    0xf2,al
  41221c:	jnp    0x4121f2
  41221e:	ja     0x412236
  412220:	(bad)
  412223:	and    esi,ecx
  412225:	push   edi
  412226:	into   
  412227:	pop    esi
  412228:	loop   0x4121dc
  41222a:	jmp    0xffb93d78
  41222f:	in     eax,0x15
  412231:	pop    es
  412232:	add    eax,DWORD PTR ds:0xc8c283e6
  412238:	inc    edx
  412239:	dec    eax
  41223a:	mov    bl,0x8
  41223c:	into   
  41223d:	stos   DWORD PTR es:[edi],eax
  41223e:	push   edi
  41223f:	sub    DWORD PTR ds:0x525a6860,ebp
  412245:	in     eax,0x4
  412247:	dec    edi
  412248:	xchg   DWORD PTR [esp+edx*1-0x6b],edi
  41224c:	pop    ecx
  41224d:	cs scas al,BYTE PTR es:[edi]
  41224f:	es js  0x412212
  412252:	inc    edx
  412253:	add    eax,0xd8f39807
  412258:	push   ss
  412259:	mov    dh,0x86
  41225b:	push   esp
  41225c:	add    al,0xe7
  41225e:	xlat   BYTE PTR ds:[ebx]
  41225f:	fimul  WORD PTR [esi+0x75]
  412262:	hlt    
  412263:	fcmovnbe st,st(3)
  412265:	jnp    0x41228b
  412267:	stc    
  412268:	fwait
  412269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41226a:	cmc    
  41226b:	(bad)  
  41226d:	or     DWORD PTR [ebp+eax*8-0x6440bf55],edi
  412274:	xchg   esp,eax
  412275:	(bad)  
  412277:	out    dx,eax
  412278:	add    eax,0xa6fa683b
  41227d:	(bad)  
  41227e:	xor    BYTE PTR ds:0x3bc084a2,ch
  412284:	daa    
  412285:	xchg   DWORD PTR [esi-0x2e],ecx
  412288:	mov    eax,ds:0x7bf3ad13
  41228d:	pop    ds
  41228e:	or     DWORD PTR [eax],edx
  412290:	in     eax,0x14
  412292:	pop    es
  412293:	and    esp,ecx
  412295:	pop    ebp
  412296:	enter  0xc7f0,0xa1
  41229a:	test   DWORD PTR [eax+0x5f],edx
  41229d:	inc    ecx
  41229e:	and    dl,BYTE PTR [edi+0x63]
  4122a1:	jns    0x4122bf
  4122a3:	cmc    
  4122a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122a5:	adc    dh,ah
  4122a7:	je     0x412229
  4122a9:	in     eax,0xd8
  4122ab:	adc    eax,0xecbe43fd
  4122b0:	dec    ecx
  4122b1:	mov    edi,0x7dee8d41
  4122b6:	cdq    
  4122b7:	aas    
  4122b8:	cld    
  4122b9:	mov    ds:0xf4ea1847,eax
  4122be:	jne    0x412264
  4122c0:	fbld   TBYTE PTR [ecx+0x16]
  4122c3:	(bad)  
  4122c4:	pop    ebx
  4122c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122c6:	lahf   
  4122c7:	icebp  
  4122c8:	loopne 0x4122d4
  4122ca:	test   BYTE PTR [ebp-0x7b],0x82
  4122ce:	test   BYTE PTR [ecx],ch
  4122d0:	popa   
  4122d1:	rcr    DWORD PTR [esi+0x10],1
  4122d4:	dec    esp
  4122d5:	jle    0x412354
  4122d7:	sbb    BYTE PTR [esi],0x91
  4122da:	jb     0x4122e3
  4122dc:	repnz (bad) 
  4122de:	fsub   QWORD PTR [esi+0x10]
  4122e1:	pop    ds
  4122e2:	add    edx,DWORD PTR [esi+0x64e4bb3a]
  4122e8:	push   0xffffff97
  4122ea:	cs test eax,0x748f78ec
  4122f0:	cmp    DWORD PTR [ebp*2-0x2e8e0062],esi
  4122f7:	leave  
  4122f8:	xor    bl,BYTE PTR [ebx+0x1f972db1]
  4122fe:	sbb    BYTE PTR [ebx-0x274d83],0xf2
  412305:	or     eax,0xace04219
  41230a:	das    
  41230b:	or     eax,0x47f63050
  412310:	cmc    
  412311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412312:	adc    BYTE PTR [edx],ch
  412314:	push   ss
  412315:	inc    esi
  412316:	jns    0x4122e3
  412318:	mov    ch,0xbf
  41231a:	leave  
  41231b:	(bad)  
  41231c:	pushf  
  41231d:	jbe    0x41239a
  41231f:	dec    eax
  412320:	xchg   edi,eax
  412321:	cmp    BYTE PTR [ecx+0x5c],al
  412324:	out    dx,al
  412325:	mov    esp,DWORD PTR [eax+0x15318601]
  41232b:	cmc    
  41232c:	ret    
  41232d:	mov    ebp,0x1a2a4f7f
  412332:	and    ebx,DWORD PTR [ecx+ebx*4-0x35]
  412336:	sar    BYTE PTR [edx-0x587e8f53],1
  41233c:	test   BYTE PTR [ebp-0x76],ch
  41233f:	jmp    0x1b115efe
  412344:	les    ebp,FWORD PTR [ebp+0x50]
  412347:	fcmovnbe st,st(0)
  412349:	je     0x4122e6
  41234b:	push   edi
  41234c:	xor    ebx,DWORD PTR [edx+eax*2+0x28e9068c]
  412353:	sub    ebx,esi
  412355:	dec    eax
  412356:	pop    ebp
  412358:	ror    BYTE PTR [edx+0x7f],1
  41235b:	xchg   esi,eax
  41235c:	pop    ebx
  41235d:	xchg   ebx,eax
  41235e:	cmp    esi,DWORD PTR [ecx]
  412360:	jmp    0x3b51:0x2fe9a56e
  412367:	es or  al,0x66
  41236a:	test   BYTE PTR [edi-0x5d],bh
  41236d:	xor    BYTE PTR [ebx+0x25fd7a5c],bl
  412373:	mov    ds:0x2ff46054,al
  412378:	cmp    al,0x5e
  41237a:	daa    
  41237b:	es iret 
  41237d:	int    0x77
  41237f:	loopne 0x412313
  412381:	stos   DWORD PTR es:[edi],eax
  412382:	ins    BYTE PTR es:[edi],dx
  412383:	mov    esp,DWORD PTR [eax-0x1a5f3fd9]
  412389:	and    al,0x99
  41238b:	mov    WORD PTR [esi],?
  41238d:	and    al,0x78
  41238f:	xchg   BYTE PTR [esi],ah
  412391:	push   ss
  412392:	rol    BYTE PTR [eax-0x74],cl
  412395:	div    BYTE PTR [eax-0x17c4dea8]
  41239b:	repnz sub DWORD PTR [edi-0x71],edi
  41239f:	push   0x294c116e
  4123a4:	rol    BYTE PTR [ecx+0x2f68e372],cl
  4123aa:	(bad)  
  4123ab:	in     eax,dx
  4123ac:	in     eax,0xe3
  4123ae:	or     BYTE PTR [esi],bl
  4123b0:	loop   0x412375
  4123b2:	js     0x4123c3
  4123b4:	sub    al,0x70
  4123b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123b7:	pop    esi
  4123b8:	mov    dl,0xc3
  4123ba:	mov    ebp,DWORD PTR [edi]
  4123bc:	es nop
  4123be:	jae    0x41238b
  4123c0:	xor    di,WORD PTR [edi-0x44ed17d1]
  4123c7:	and    BYTE PTR [eax+0x3d062cc8],ah
  4123cd:	scas   eax,DWORD PTR es:[edi]
  4123ce:	cmp    edx,DWORD PTR [ecx-0x64]
  4123d1:	push   ebx
  4123d3:	dec    ecx
  4123d4:	and    dl,BYTE PTR [ebx+0x3e]
  4123d7:	adc    al,0x1d
  4123d9:	xchg   BYTE PTR [ebx-0xafa47c0],ah
  4123df:	pop    ebp
  4123e0:	pop    ebx
  4123e1:	mov    ebp,0xdc7a3f3d
  4123e6:	xchg   edx,eax
  4123e7:	mov    ch,0x2a
  4123e9:	fisub  WORD PTR [esi]
  4123eb:	and    DWORD PTR [edx-0x695f9f2c],0xe0cadef2
  4123f5:	jno    0x4123f1
  4123f7:	sar    ah,1
  4123f9:	rcr    esp,cl
  4123fb:	repnz cmp ebx,eax
  4123fe:	outs   dx,BYTE PTR ds:[esi]
  4123ff:	stos   DWORD PTR es:[edi],eax
  412400:	idiv   DWORD PTR [ebp+0x692dccea]
  412406:	jp     0x412390
  412408:	pushf  
  412409:	pop    ecx
  41240a:	mov    esp,0xa3703e87
  41240f:	mov    esp,0xaeeefac
  412414:	pop    ds
  412415:	cmp    BYTE PTR [ecx],bl
  412417:	fnstenv [eax+0x527a2bd4]
  41241d:	test   DWORD PTR ds:0xf1be2538,edx
  412423:	not    BYTE PTR [ebx-0x60e3e441]
  412429:	mov    ds,WORD PTR ds:0xde50b3fe
  41242f:	out    dx,al
  412430:	scas   eax,DWORD PTR es:[edi]
  412431:	mov    ds:0x8d0e3000,eax
  412436:	inc    esi
  412437:	in     al,0xd5
  412439:	(bad)  
  41243a:	mov    cl,0xcd
  41243c:	push   esi
  41243d:	add    al,0xd9
  41243f:	dec    esp
  412440:	(bad)  
  412441:	cmp    al,0x9
  412443:	mov    ecx,0x1a42b7a3
  412448:	dec    edi
  412449:	mov    esp,DWORD PTR [esi]
  41244b:	ficom  DWORD PTR [ecx+0x31]
  41244e:	mov    dh,0x56
  412450:	cli    
  412451:	adc    eax,0xcb0e0b6b
  412456:	shl    BYTE PTR [edx+0x4d20660c],1
  41245c:	mov    esp,edx
  41245e:	sub    ecx,esp
  412460:	lds    edi,FWORD PTR [eax]
  412462:	cmc    
  412463:	cli    
  412464:	jg     0x412413
  412466:	fdiv   st(5),st
  412468:	loope  0x412472
  41246a:	inc    ecx
  41246b:	loopne 0x4124b8
  41246d:	scas   al,BYTE PTR es:[edi]
  41246e:	mov    dl,0x33
  412470:	pop    ecx
  412471:	adc    eax,0x99493bff
  412476:	int3   
  412477:	iret   
  412478:	imul   esi,DWORD PTR [ebp+0x1b4cb92a],0xffffffa0
  41247f:	mov    ds:0x830b4a68,eax
  412484:	lock es iret 
  412487:	iret   
  412488:	mov    eax,0x3a23c653
  41248d:	xchg   ecx,eax
  41248e:	xor    BYTE PTR [esi+0x62],ch
  412491:	sbb    eax,DWORD PTR [esi-0x63]
  412494:	mov    ds:0xac8706ce,al
  412499:	jnp    0x412476
  41249b:	sub    dh,BYTE PTR [ebx]
  41249d:	nop
  41249e:	mov    ecx,0xc2af3f10
  4124a3:	dec    ecx
  4124a4:	dec    eax
  4124a5:	dec    ecx
  4124a6:	in     eax,dx
  4124a7:	inc    ebx
  4124a8:	int    0xaa
  4124aa:	test   al,0x47
  4124ac:	mov    eax,ds:0xf98814e7
  4124b1:	pusha  
  4124b2:	gs xor eax,0x4b0795b6
  4124b8:	pop    ebp
  4124b9:	das    
  4124ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124bb:	sub    eax,0xda0a2008
  4124c0:	xchg   ebx,eax
  4124c1:	cwde   
  4124c2:	dec    esp
  4124c3:	or     eax,0xb7237dbb
  4124c8:	add    eax,0xc9b0e84
  4124cd:	mov    esi,0x10102721
  4124d2:	arpl   WORD PTR [edi+0x48],cx
  4124d5:	stos   DWORD PTR es:[edi],eax
  4124d6:	push   es
  4124d7:	xchg   ebx,eax
  4124d8:	sub    eax,0xf3dc28ff
  4124dd:	mov    ecx,ebp
  4124df:	in     eax,0x94
  4124e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124e2:	sub    esp,DWORD PTR [edx+0x298edd6e]
  4124e8:	mov    ebp,DWORD PTR gs:[eax-0x1e]
  4124ec:	and    esp,ebp
  4124ee:	push   ss
  4124ef:	sub    ah,cl
  4124f1:	(bad)
  4124f6:	xchg   ebx,eax
  4124f7:	mov    bl,0x6a
  4124f9:	sbb    eax,DWORD PTR [eax]
  4124fb:	ret    0x2197
  4124fe:	inc    ebp
  4124ff:	xchg   esp,eax
  412500:	test   eax,0x893bd6f8
  412505:	popa   
  412506:	or     dl,BYTE PTR [edi+0x15]
  412509:	jno    0x41248c
  41250b:	xchg   edx,eax
  41250c:	bound  edx,QWORD PTR [edx+edi*4-0x15]
  412510:	sub    esp,ebp
  412512:	push   eax
  412513:	push   0x76
  412515:	test   al,0xc8
  412517:	lock bound esp,QWORD PTR [ecx-0x78]
  41251b:	xor    eax,0x248dcac2
  412520:	cmp    BYTE PTR [edx],ch
  412522:	push   0xffffffaf
  412524:	fisubr WORD PTR [ecx+0x15]
  412527:	fdivr  DWORD PTR [ebx]
  412529:	js     0x41254e
  41252b:	mov    eax,0xb2eb2ab6
  412530:	xchg   ebp,eax
  412531:	popf   
  412532:	mov    edx,eax
  412534:	fisttp DWORD PTR [eax-0x12]
  412537:	loopne 0x4124e8
  412539:	push   esp
  41253a:	aad    0xe5
  41253c:	sub    al,0x57
  41253e:	mov    ds:0xc07261db,eax
  412543:	xor    ecx,0xffffffbe
  412546:	sub    DWORD PTR [ebx-0x5f],eax
  412549:	popf   
  41254a:	repz xor dl,BYTE PTR [ebp+0x1bb183da]
  412551:	jp     0x4125a8
  412553:	and    BYTE PTR [esi-0x28],ch
  412556:	adc    eax,edi
  412558:	push   ebx
  412559:	enter  0x7feb,0x5b
  41255d:	mov    bh,0x73
  41255f:	xor    dh,BYTE PTR [eax-0x53]
  412562:	sub    al,0x96
  412564:	mov    al,ds:0xf1929c05
  412569:	pop    ecx
  41256a:	dec    ebp
  41256b:	xor    DWORD PTR [edx-0x67],esi
  41256e:	jbe    0x41252b
  412570:	cwde   
  412571:	add    eax,DWORD PTR [ebp+0x38]
  412574:	sub    BYTE PTR [ebx-0x58],al
  412577:	push   0xffffffcd
  412579:	stc    
  41257a:	ss leave 
  41257c:	es add eax,0x279d2836
  412582:	int3   
  412583:	dec    ebx
  412584:	pop    ebp
  412585:	xchg   edi,eax
  412586:	imul   ebx,DWORD PTR [ecx-0x80],0x915019c0
  41258d:	ret    0x589c
  412590:	mov    edx,0x192aaf2d
  412595:	adc    BYTE PTR [esi],al
  412597:	mov    dl,0x34
  412599:	sti    
  41259a:	std    
  41259b:	fmul   st,st(5)
  41259d:	(bad)  
  41259e:	mov    ah,0xb3
  4125a0:	enter  0x8f67,0xb
  4125a4:	inc    ecx
  4125a5:	inc    esi
  4125a6:	or     eax,0x81767eb9
  4125ab:	sub    al,0x3e
  4125ad:	push   0xa7c3e770
  4125b2:	jmp    0x13e994ef
  4125b7:	inc    ecx
  4125b8:	pop    edx
  4125b9:	dec    edi
  4125ba:	rcr    DWORD PTR [ecx],1
  4125bc:	or     ch,bh
  4125be:	inc    ecx
  4125bf:	js     0x41257b
  4125c1:	jae    0x4125cd
  4125c3:	fldenv [bp+di+0x383f]
  4125c8:	retf   0xbc69
  4125cb:	and    dh,BYTE PTR [esi+0x701a9f2]
  4125d1:	jmp    0x4125fa
  4125d3:	dec    esi
  4125d4:	loopne 0x412627
  4125d6:	and    BYTE PTR [edx-0x7bdbc185],0xba
  4125dd:	sbb    ah,dh
  4125df:	xor    BYTE PTR [eax],al
  4125e1:	push   es
  4125e2:	clc    
  4125e3:	fs cs std 
  4125e6:	pop    ebx
  4125e7:	mov    al,0xd8
  4125e9:	fdiv   DWORD PTR [esi-0x4e]
  4125ec:	pop    esi
  4125ed:	aaa    
  4125ee:	pop    ds
  4125ef:	jp     0x41266a
  4125f1:	rol    eax,0x76
  4125f4:	mov    ebp,0x984bac85
  4125f9:	push   ecx
  4125fa:	retf   0x4c8a
  4125fd:	sub    DWORD PTR [ecx-0x74482bfb],eax
  412603:	jns    0x41263b
  412605:	or     cl,BYTE PTR [edi]
  412607:	push   0xb85b8d34
  41260c:	aaa    
  41260d:	loop   0x4125db
  41260f:	xor    DWORD PTR [ebp-0x5bcd91dd],ecx
  412615:	lods   eax,DWORD PTR ds:[esi]
  412616:	retf   0x83f9
  412619:	mov    eax,ds:0x966aee07
  41261e:	push   esp
  41261f:	addr16 out dx,eax
  412621:	add    DWORD PTR [edi],eax
  412623:	in     eax,0x9b
  412625:	mov    dh,0x6f
  412627:	mov    ds:0x5c118164,al
  41262c:	pop    ss
  41262d:	xchg   ebx,eax
  41262e:	add    BYTE PTR [eax],bl
  412630:	out    dx,eax
  412631:	pop    es
  412632:	cwde   
  412633:	frstor [eax]
  412635:	shl    BYTE PTR [edx-0x60],cl
  412638:	cwde   
  412639:	push   ss
  41263a:	shl    DWORD PTR [ecx+ebx*2-0x7a],cl
  41263e:	scas   al,BYTE PTR es:[edi]
  41263f:	jge    0x41262e
  412641:	push   esp
  412642:	out    dx,al
  412643:	pop    ds
  412644:	fistp  DWORD PTR [bx+di+0x40]
  412648:	pop    ss
  412649:	int    0x9c
  41264b:	cmp    edi,edx
  41264d:	jmp    0x4126b7
  41264f:	add    BYTE PTR [esi+0x0],0xd0
  412653:	jmp    0x8c75:0xf98b9f6d
  41265a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41265c:	xchg   esp,eax
  41265d:	scas   eax,DWORD PTR es:[edi]
  41265e:	dec    ebx
  41265f:	cmp    al,0x39
  412661:	jne    0x412604
  412663:	push   0x66
  412665:	rol    ah,1
  412667:	jge    0x412664
  412669:	push   ecx
  41266a:	retf   0x2d57
  41266d:	sub    ah,BYTE PTR ds:0xe42f0d63
  412673:	add    DWORD PTR [ebx+0x4b],ebx
  412676:	mov    edx,0x37f27c54
  41267b:	shl    BYTE PTR [ebx+edx*2],1
  41267e:	in     al,dx
  41267f:	mov    edx,0x9a261761
  412684:	pop    edi
  412685:	push   esp
  412686:	data16 test al,0x8a
  412689:	stos   BYTE PTR es:[edi],al
  41268a:	pop    esi
  41268b:	mov    esi,gs
  41268d:	inc    BYTE PTR [esi+0x1f]
  412690:	shr    DWORD PTR ds:0x11b53d96,1
  412696:	sbb    eax,eax
  412698:	js     0x4126b3
  41269a:	inc    edi
  41269b:	fld    DWORD PTR [eax-0x8]
  41269e:	jbe    0x412707
  4126a0:	call   0x6336:0xbcf1ffe
  4126a7:	outs   dx,BYTE PTR ds:[esi]
  4126a8:	sub    al,0x92
  4126aa:	pop    ebp
  4126ab:	(bad)  
  4126ad:	scas   al,BYTE PTR es:[edi]
  4126ae:	push   es
  4126af:	mov    cl,0xd2
  4126b1:	call   0x915c:0x614e069b
  4126b8:	(bad)  
  4126b9:	xor    BYTE PTR [ebp-0x6b],bh
  4126bc:	gs fwait
  4126be:	dec    ebx
  4126bf:	fisttp DWORD PTR [ebx+esi*1-0xacfc063]
  4126c6:	lock pop ecx
  4126c8:	scas   al,BYTE PTR es:[edi]
  4126c9:	(bad)  
  4126ca:	aas    
  4126cb:	lods   al,BYTE PTR ds:[esi]
  4126cc:	es ins DWORD PTR es:[edi],dx
  4126ce:	sar    BYTE PTR [esi+0x1c34c0f9],1
  4126d4:	sar    BYTE PTR [eax-0x78],1
  4126d7:	mov    eax,0x92cd6f20
  4126dc:	fldlg2 
  4126de:	adc    al,0x87
  4126e0:	adc    ebx,esi
  4126e2:	fild   QWORD PTR [ecx-0x19]
  4126e5:	adc    BYTE PTR ds:0xba010660,al
  4126eb:	mov    ebx,0x566d7eaf
  4126f0:	fadd   DWORD PTR [ebx-0x7c]
  4126f3:	scas   eax,DWORD PTR es:[edi]
  4126f4:	bound  eax,QWORD PTR [edi]
  4126f6:	push   ebx
  4126f7:	and    eax,0x79bd04c8
  4126fc:	mov    ds:0xa37fb656,eax
  412701:	jbe    0x41276d
  412703:	sub    ch,BYTE PTR [edi]
  412705:	fst    DWORD PTR [edi]
  412707:	push   0x5dafe796
  41270c:	mov    es,WORD PTR [eax+0x40d259d5]
  412712:	icebp  
  412713:	paddq  mm2,mm5
  412716:	pushf  
  412717:	std    
  412718:	add    eax,0xf21bf4dc
  41271d:	push   ss
  41271e:	cmp    dl,BYTE PTR [edx+0x2]
  412721:	xchg   bh,ch
  412723:	aad    0x9f
  412725:	pushf  
  412726:	jne    0x412715
  412728:	icebp  
  412729:	loope  0x412712
  41272b:	nop
  41272c:	adc    dl,BYTE PTR [ecx+ecx*2]
  41272f:	jp     0x41274a
  412731:	stc    
  412732:	cmp    BYTE PTR [ecx-0x5],bh
  412735:	pop    ecx
  412736:	mov    cl,0x2d
  412738:	cld    
  412739:	inc    ecx
  41273a:	mov    esp,0xd563a681
  41273f:	mov    edx,0xce6161fa
  412744:	or     bl,BYTE PTR [ecx-0x6d]
  412747:	push   ecx
  412748:	pop    edx
  412749:	xor    edx,ecx
  41274b:	jmp    0x4126f0
  41274d:	or     eax,0xc144ef8
  412752:	ins    BYTE PTR es:[edi],dx
  412753:	add    eax,0x6c954b6a
  412758:	cld    
  412759:	call   0x81abdd9e
  41275e:	or     esp,ebp
  412760:	or     eax,0x7d5276c4
  412765:	dec    esp
  412766:	jns    0x4127a4
  412768:	ins    DWORD PTR es:[edi],dx
  412769:	sbb    al,BYTE PTR [edi-0x7d]
  41276c:	xlat   BYTE PTR ds:[ebx]
  41276d:	loop   0x4127e5
  41276f:	leave  
  412770:	fidiv  WORD PTR [edx+edi*4]
  412773:	add    dl,BYTE PTR [esi-0x3e]
  412776:	jmp    0x8c35:0x14eb458e
  41277d:	push   eax
  41277e:	pand   mm3,mm6
  412781:	push   eax
  412782:	lea    esp,[esi+0x3756d849]
  412788:	add    al,0x7f
  41278a:	sub    eax,0xc4a5cd3a
  41278f:	xchg   ecx,eax
  412790:	rcl    DWORD PTR [ebp-0x351674b6],1
  412796:	test   eax,0x652e25a9
  41279b:	retf   0xf166
  41279e:	retf   0x413c
  4127a1:	xchg   ebp,eax
  4127a2:	and    cl,ch
  4127a4:	dec    ebp
  4127a5:	dec    eax
  4127a6:	and    edx,DWORD PTR ss:[ecx+eax*2]
  4127aa:	mov    BYTE PTR [edi+eax*1+0x2706b3bd],cl
  4127b1:	pop    ecx
  4127b2:	repz jno 0x412760
  4127b5:	jb     0x41280a
  4127b7:	or     BYTE PTR [esi-0x28235],dl
  4127bd:	push   edx
  4127be:	pop    esp
  4127bf:	cmp    al,0x75
  4127c1:	popa   
  4127c2:	test   BYTE PTR [ebp*4-0x6a1bca09],ah
  4127c9:	repnz not DWORD PTR [edx-0x2]
  4127cd:	mov    dl,0xe8
  4127cf:	js     0x41279b
  4127d1:	ret    0xdf72
  4127d4:	jbe    0x412805
  4127d6:	add    BYTE PTR ds:0x77277ce0,al
  4127dc:	jns    0x4127ec
  4127de:	out    dx,eax
  4127df:	retf   0xa10b
  4127e2:	mov    edi,0x4e16af18
  4127e7:	ret    0xff7
  4127ea:	(bad)  
  4127ec:	(bad)  
  4127ed:	fild   QWORD PTR [ebx-0x46ea1636]
  4127f3:	pop    edx
  4127f4:	stos   DWORD PTR es:[edi],eax
  4127f5:	(bad)  
  4127f6:	mov    ah,0x4e
  4127f8:	js     0x412870
  4127fa:	imul   esi,DWORD PTR [edx+0x62690557],0xfffffffa
  412801:	outs   dx,BYTE PTR ds:[esi]
  412802:	imul   eax,DWORD PTR [edx+eax*8+0x125f44c5],0x58
  41280a:	inc    edx
  41280b:	(bad)  
  41280c:	mov    esp,0xb794ac3b
  412811:	inc    eax
  412812:	leave  
  412813:	outs   dx,DWORD PTR ds:[esi]
  412814:	sti    
  412815:	sub    al,0xd1
  412817:	pop    ebx
  412818:	inc    edx
  412819:	rcl    DWORD PTR [ebx+0x18],0xf7
  41281d:	inc    edi
  41281e:	(bad)  
  41281f:	push   ss
  412820:	pop    esp
  412821:	ror    bl,0x28
  412824:	rcr    esi,1
  412826:	daa    
  412827:	sbb    BYTE PTR [esp+ecx*2+0x33],dl
  41282b:	push   ebx
  41282c:	neg    BYTE PTR ds:0x184d8ac
  412832:	jnp    0x41280d
  412834:	sbb    eax,0x11d107b0
  412839:	jmp    0x412877
  41283b:	scas   eax,DWORD PTR es:[edi]
  41283c:	inc    edi
  41283d:	retf   0xa52e
  412840:	hlt    
  412841:	mov    eax,ds:0x5938f087
  412846:	ret    
  412847:	aam    0x66
  412849:	jg     0x4128c6
  41284b:	push   es
  41284c:	into   
  41284d:	test   al,0x78
  41284f:	mov    al,0x3d
  412851:	frstor [eax]
  412853:	pop    ecx
  412854:	mov    es,WORD PTR [edi+0x2933f449]
  41285a:	aad    0x4a
  41285c:	addr16 inc edx
  41285e:	sub    eax,0x80ce41a6
  412863:	dec    esp
  412864:	adc    al,bl
  412866:	sbb    esi,edx
  412868:	cmp    eax,0x39166988
  41286d:	aas    
  41286e:	add    BYTE PTR [esi],al
  412870:	pop    ss
  412871:	mov    bh,0x5a
  412873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412874:	(bad)
  412877:	(bad)  
  412878:	into   
  412879:	inc    edx
  41287a:	push   ebx
  41287b:	inc    ebp
  41287c:	sub    ecx,DWORD PTR [esi+0x6fcddc45]
  412882:	xor    al,0xbc
  412884:	or     ebp,ebp
  412886:	push   ebp
  412887:	movhps QWORD PTR [ebx],xmm7
  41288a:	mov    bh,0x86
  41288c:	xlat   BYTE PTR ds:[ebx]
  41288d:	daa    
  41288e:	stos   BYTE PTR es:[edi],al
  41288f:	jmp    0x4128d9
  412891:	dec    eax
  412892:	jmp    0x412875
  412894:	sbb    ecx,0xffffff8a
  412897:	into   
  412898:	out    dx,eax
  412899:	stos   BYTE PTR es:[edi],al
  41289a:	mov    edi,0xf4fcc0a0
  41289f:	inc    edi
  4128a0:	in     al,0x42
  4128a2:	lods   al,BYTE PTR ds:[esi]
  4128a3:	sar    BYTE PTR [edx],1
  4128a5:	popa   
  4128a6:	or     bl,cl
  4128a8:	jb     0x4128cf
  4128aa:	loopne 0x412920
  4128ac:	jns    0x41282e
  4128ae:	xchg   DWORD PTR [edx+0x1b],edx
  4128b1:	call   0x4f7ab943
  4128b6:	mov    dl,0x95
  4128b8:	hlt    
  4128b9:	daa    
  4128ba:	sbb    DWORD PTR [eax],ecx
  4128bc:	or     al,0xa
  4128be:	adc    eax,0x7b285739
  4128c3:	sbb    eax,0xfe6521c9
  4128c8:	repnz aas 
  4128ca:	dec    ecx
  4128cb:	cmp    BYTE PTR [edi],0xf8
  4128ce:	pop    esi
  4128cf:	xor    al,cl
  4128d1:	popf   
  4128d2:	jmp    0x5185:0x91c3213a
  4128d9:	pop    ds
  4128da:	int    0x6d
  4128dc:	call   0x79f4:0x76787eb7
  4128e3:	lock pop ss
  4128e5:	sbb    dl,BYTE PTR [edi]
  4128e7:	scas   al,BYTE PTR es:[edi]
  4128e8:	pop    ds
  4128e9:	int3   
  4128ea:	ds push ebp
  4128ec:	rol    BYTE PTR [ebx+0x6a2440d6],1
  4128f2:	shl    BYTE PTR [esp+ebx*8+0x2c],0x34
  4128f7:	out    0x64,eax
  4128f9:	push   es
  4128fa:	in     al,dx
  4128fb:	add    edx,esi
  4128fd:	push   es
  4128fe:	loop   0x4128e4
  412900:	sbb    DWORD PTR [eax+0x6d],edx
  412903:	pop    ss
  412904:	sub    esi,edx
  412906:	xchg   bl,ch
  412908:	shl    BYTE PTR [ecx+0x6cb3de16],1
  41290e:	push   cs
  41290f:	mov    ?,WORD PTR [esi+0x64]
  412912:	mov    ah,0x68
  412914:	and    DWORD PTR [ebx+eiz*8],esp
  412917:	(bad)  
  412918:	(bad)  
  412919:	jae    0x412999
  41291b:	dec    ecx
  41291c:	mov    ds:0xa18bc403,al
  412921:	jmp    0x412903
  412923:	fwait
  412924:	ror    DWORD PTR [ecx],0xd3
  412927:	pop    ebx
  412928:	jecxz  0x41298b
  41292a:	add    al,0x93
  41292c:	dec    edi
  41292d:	ror    DWORD PTR [edi+0x4],1
  412930:	and    al,0xf5
  412932:	cwde   
  412933:	push   ebp
  412934:	jnp    0x412927
  412936:	mov    ds:0xf1357b8e,eax
  41293b:	push   ecx
  41293c:	and    eax,0x51a294d8
  412941:	mov    cl,dh
  412943:	pop    ds
  412944:	test   BYTE PTR [edi+0x2ebb0d03],ah
  41294a:	aaa    
  41294b:	je     0x412980
  41294d:	push   ss
  41294e:	xchg   esi,eax
  41294f:	or     al,0x3c
  412951:	dec    ecx
  412952:	mov    al,ds:0xdc5b6ae0
  412957:	sti    
  412958:	ret    0xf6c8
  41295b:	sbb    al,0x1f
  41295d:	gs jb  0x41296c
  412960:	mov    ebp,0x87875be
  412965:	stos   BYTE PTR es:[edi],al
  412966:	int    0xf4
  412968:	ror    BYTE PTR [ecx],0x6
  41296b:	je     0x4128f7
  41296d:	rcl    DWORD PTR [ebx],1
  41296f:	test   al,0x14
  412971:	sub    BYTE PTR [ebx+0x33367add],bh
  412977:	sub    DWORD PTR [ebx+0x35],0x6a
  41297b:	idiv   BYTE PTR [eax+0x46]
  41297e:	jns    0x4129fb
  412980:	mov    ds:0x9c709c0a,eax
  412985:	pop    esi
  412986:	sub    al,BYTE PTR [eax-0x17c3e499]
  41298c:	dec    BYTE PTR [edi+0x41c31151]
  412992:	adc    al,0x40
  412994:	dec    eax
  412995:	mov    ah,0x2e
  412997:	es pop ss
  412999:	popa   
  41299a:	jb     0x41297d
  41299c:	test   al,0xc4
  41299e:	imul   ecx,esi,0x40b2c74c
  4129a4:	sub    al,0x2a
  4129a6:	add    ecx,edx
  4129a8:	gs jmp 0x412a05
  4129ab:	iret   
  4129ac:	push   es
  4129ad:	pop    edx
  4129ae:	adc    ah,ch
  4129b0:	das    
  4129b1:	push   edx
  4129b2:	mov    bh,0x14
  4129b4:	mov    gs,WORD PTR [edi+edi*8+0xca1f27e]
  4129bb:	ret    
  4129bc:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4129be:	push   0xffffffb4
  4129c0:	jge    0x4129be
  4129c2:	dec    esi
  4129c3:	inc    ecx
  4129c4:	test   eax,0x4aa97faa
  4129c9:	mov    esi,0xf453a7ef
  4129ce:	pop    ebx
  4129cf:	mov    gs,WORD PTR [ecx]
  4129d1:	fiadd  DWORD PTR [ecx]
  4129d3:	ret    
  4129d4:	mov    edx,0x1169897d
  4129d9:	or     DWORD PTR [ebx+0x5b],eax
  4129dc:	cli    
  4129dd:	lods   al,BYTE PTR ds:[esi]
  4129de:	in     al,dx
  4129df:	sbb    DWORD PTR [ebx],esi
  4129e1:	mov    ecx,0x4807bf98
  4129e6:	mov    al,0x2f
  4129e8:	cmp    BYTE PTR [edx+0xe],al
  4129eb:	add    ah,dh
  4129ed:	lds    ebx,FWORD PTR [esi+0x1d8a0a9]
  4129f3:	ss add al,0xc1
  4129f6:	retf   0xc86a
  4129f9:	pop    edi
  4129fa:	push   edi
  4129fb:	xor    esp,DWORD PTR ds:0xba41f22e
  412a01:	push   cs
  412a02:	add    al,0x65
  412a04:	call   0x35bd:0xe9c8244f
  412a0b:	ins    DWORD PTR es:[edi],dx
  412a0c:	xor    DWORD PTR [esi-0x9],eax
  412a0f:	fdivr  st(3),st
  412a11:	xor    esi,DWORD PTR [eax-0x326f6996]
  412a17:	ds dec edx
  412a19:	mov    ds:0xfc97370a,al
  412a1e:	jmp    0x4129fc
  412a20:	sub    BYTE PTR [esi-0x57b5f6dd],bl
  412a26:	aas    
  412a27:	test   DWORD PTR [edx+ecx*4+0x7b],edx
  412a2b:	sar    DWORD PTR [eax],cl
  412a2d:	inc    esi
  412a2e:	xlat   BYTE PTR ds:[ebx]
  412a2f:	jns    0x412aaa
  412a31:	call   0xa919:0xf1a82c21
  412a38:	stos   DWORD PTR es:[edi],eax
  412a39:	fsubr  DWORD PTR [ebx+0x5a]
  412a3c:	xor    al,0xa0
  412a3e:	lods   eax,DWORD PTR ds:[esi]
  412a3f:	adc    ch,bl
  412a41:	sbb    BYTE PTR [esi+eax*8+0x5fd503ba],dl
  412a48:	jnp    0x412a35
  412a4a:	neg    DWORD PTR [esi]
  412a4c:	mov    edi,0x588bb72c
  412a51:	(bad)  [eax+ebx*8-0x2b18cdea]
  412a58:	scas   al,BYTE PTR es:[edi]
  412a59:	test   ch,cl
  412a5b:	scas   eax,DWORD PTR es:[edi]
  412a5c:	rcl    BYTE PTR [ebx-0x11cbc16d],cl
  412a62:	fwait
  412a63:	xor    eax,DWORD PTR [ecx]
  412a65:	mov    ch,0xb5
  412a67:	aad    0x9
  412a69:	in     eax,0x24
  412a6b:	mov    cs:0x4706adc8,eax
  412a71:	scas   eax,DWORD PTR es:[edi]
  412a72:	xor    DWORD PTR [edi-0x7f],edx
  412a75:	jo     0x412a58
  412a77:	ss push es
  412a79:	or     DWORD PTR [ecx-0xb],ebp
  412a7c:	push   esp
  412a7d:	inc    edi
  412a7e:	mov    DWORD PTR [ebp+ecx*1-0x23],ebx
  412a82:	add    dl,al
  412a84:	cwde   
  412a85:	xchg   esi,eax
  412a86:	push   0xa40b8bd7
  412a8b:	mov    BYTE PTR [eax+0x46],ch
  412a8e:	fisub  WORD PTR [eax+0x7]
  412a91:	pop    edx
  412a92:	imul   edx,ebx,0xe7b8e808
  412a98:	mov    ch,BYTE PTR [edi+ebp*4]
  412a9b:	in     al,dx
  412a9c:	adc    eax,0x315325a3
  412aa1:	shl    DWORD PTR [esi],0x4f
  412aa4:	call   0x144b:0x493f284b
  412aab:	sahf   
  412aac:	push   es
  412aad:	mov    dh,0x47
  412aaf:	ins    BYTE PTR es:[edi],dx
  412ab0:	pusha  
  412ab1:	jle    0x412a80
  412ab3:	out    dx,eax
  412ab4:	shl    BYTE PTR [ecx],1
  412ab6:	xor    DWORD PTR [ecx-0x8],ebp
  412ab9:	and    DWORD PTR [eax+0x65a970ed],ebx
  412abf:	gs push cs
  412ac1:	aad    0xae
  412ac3:	add    al,0xd8
  412ac5:	add    DWORD PTR [ebp+0x3f],eax
  412ac8:	ja     0x412ad9
  412aca:	retf   0x8a05
  412acd:	xchg   esi,eax
  412ace:	das    
  412acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ad0:	arpl   si,bx
  412ad2:	out    0xda,eax
  412ad4:	mov    ch,0x94
  412ad6:	and    ch,BYTE PTR [edx+0x6d]
  412ad9:	dec    eax
  412ada:	jnp    0x412b47
  412adc:	add    DWORD PTR [ebx+0x12],edi
  412adf:	rcr    DWORD PTR [esi-0x7052aa37],0xb5
  412ae6:	repnz scas al,BYTE PTR es:[edi]
  412ae8:	inc    BYTE PTR [ebp+eax*8+0x4dc1a5e1]
  412aef:	jne    0x412ae4
  412af1:	out    dx,al
  412af2:	or     DWORD PTR [edx+0x2d472e80],esi
  412af8:	lahf   
  412af9:	std    
  412afa:	adc    BYTE PTR [edi],0xf4
  412afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412afe:	jge    0x412ad9
  412b00:	adc    esp,0x5052f2cc
  412b06:	addr16 xchg ecx,eax
  412b08:	add    eax,0x69e594c4
  412b0d:	popf   
  412b0e:	sub    DWORD PTR [esi],esi
  412b10:	cmp    eax,ebp
  412b12:	bound  esp,QWORD PTR [esi-0x1ed4d75e]
  412b18:	sub    BYTE PTR [edi],ch
  412b1a:	aas    
  412b1b:	sbb    DWORD PTR [edx-0x32efd34],edi
  412b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b22:	pop    eax
  412b23:	sbb    DWORD PTR [edx+edx*2],edx
  412b26:	mov    bl,0xe7
  412b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b29:	push   eax
  412b2a:	out    0xb8,eax
  412b2c:	outs   dx,BYTE PTR ds:[esi]
  412b2d:	int3   
  412b2e:	xlat   BYTE PTR ds:[ebx]
  412b2f:	and    BYTE PTR [esp+eiz*8+0x6eada9b2],bl
  412b36:	loop   0x412ba9
  412b38:	or     eax,0xd0ecd7a8
  412b3d:	push   es
  412b3e:	into   
  412b3f:	dec    ecx
  412b40:	imul   ebp,DWORD PTR [eax-0x748dc212],0x7c
  412b47:	rol    BYTE PTR [eax],cl
  412b49:	mov    ds:0x1023015,al
  412b4e:	add    ebx,ebx
  412b50:	div    DWORD PTR [ebx]
  412b52:	neg    BYTE PTR [ecx]
  412b54:	clc    
  412b55:	or     eax,0x469d2be9
  412b5a:	into   
  412b5b:	es ins BYTE PTR es:[edi],dx
  412b5d:	push   0x53f3b5f3
  412b62:	and    DWORD PTR [edx],edi
  412b64:	sub    al,0x79
  412b66:	fldcw  WORD PTR [ecx]
  412b68:	or     eax,0x5f817dd3
  412b6d:	pop    eax
  412b6e:	pop    ds
  412b6f:	add    BYTE PTR [ecx+esi*1],bl
  412b72:	lods   al,BYTE PTR ds:[esi]
  412b73:	mov    ch,0x82
  412b75:	add    BYTE PTR [ecx+0x47367a8b],0x5b
  412b7c:	es loopne 0x412b6f
  412b7f:	xchg   ebx,eax
  412b80:	cmp    dl,bh
  412b82:	jecxz  0x412b7c
  412b84:	daa    
  412b85:	fldl2t 
  412b87:	mov    WORD PTR [eax+0x46],ss
  412b8a:	or     eax,0x6f808577
  412b8f:	inc    eax
  412b90:	mov    DWORD PTR [esi+0x1702ab1],esi
  412b96:	pop    esi
  412b97:	call   0x4aa:0x1bb014a4
  412b9e:	push   cs
  412b9f:	fimul  DWORD PTR [ebx-0x4ba6ab08]
  412ba5:	pushf  
  412ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ba7:	imul   ebp,DWORD PTR [edx+0x69],0xfffffff7
  412bab:	xchg   BYTE PTR [eax],ch
  412bad:	aaa    
  412bae:	int3   
  412baf:	ficom  DWORD PTR [eax-0x65]
  412bb2:	pop    esp
  412bb3:	fist   DWORD PTR [ebx+esi*1]
  412bb6:	mov    edi,0xc27604b3
  412bbb:	hlt    
  412bbc:	push   ds
  412bbd:	imul   ebx,DWORD PTR [esi-0x69bce304],0x45
  412bc4:	shr    BYTE PTR [edx],0x1c
  412bc7:	xor    ecx,ebp
  412bc9:	dec    edi
  412bca:	cli    
  412bcb:	mov    esp,0xbe107f6d
  412bd0:	sbb    al,0xdf
  412bd2:	fyl2x  
  412bd4:	pop    esi
  412bd5:	add    al,0xf6
  412bd7:	cmc    
  412bd8:	push   esi
  412bd9:	jl     0x412ba9
  412bdb:	xor    BYTE PTR [esp+ebp*8-0x7e],dl
  412bdf:	mov    ah,0x51
  412be1:	add    DWORD PTR [ecx+0x39],eax
  412be4:	add    al,0xf9
  412be6:	xchg   edx,eax
  412be7:	not    DWORD PTR [edx]
  412be9:	loope  0x412ba0
  412beb:	loope  0x412bc6
  412bed:	mov    eax,ds:0x808b5302
  412bf2:	repnz hlt 
  412bf4:	jle    0x412c19
  412bf6:	sub    esi,eax
  412bf8:	dec    edi
  412bf9:	push   esi
  412bfa:	mov    esp,0x4b5732f5
  412bff:	or     eax,0x9018ddc6
  412c04:	je     0x412c12
  412c06:	(bad)  
  412c07:	xchg   ebx,eax
  412c08:	ja     0x412c0d
  412c0a:	pusha  
  412c0b:	ror    DWORD PTR [eax],0x8b
  412c0e:	or     DWORD PTR [esi+0x74],0x1c
  412c12:	mov    dh,0x54
  412c14:	fwait
  412c15:	test   al,0xe1
  412c17:	out    dx,al
  412c18:	in     al,dx
  412c19:	xor    ebp,DWORD PTR [ecx-0x4f396e6c]
  412c1f:	xchg   ebp,eax
  412c20:	aad    0x9c
  412c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c23:	sub    BYTE PTR [ecx+0x6],bl
  412c26:	xor    eax,0x7409cd55
  412c2b:	popa   
  412c2c:	mov    ds:0xd8f722f2,eax
  412c31:	int3   
  412c32:	arpl   WORD PTR [ebx],dx
  412c34:	jle    0x412c60
  412c36:	mov    ecx,0x4fa5fba9
  412c3b:	inc    eax
  412c3c:	jae    0x412ca1
  412c3e:	cmp    eax,0x25f2dcc7
  412c43:	add    eax,0x686d5389
  412c48:	sbb    ebp,DWORD PTR [ebx]
  412c4a:	sbb    bh,dl
  412c4c:	pop    ds
  412c4d:	call   0xb412:0x4ae7046b
  412c54:	rcr    BYTE PTR [esi],cl
  412c56:	test   BYTE PTR [esi-0x7f],bl
  412c59:	xchg   edi,eax
  412c5a:	fidivr WORD PTR [ebp-0x1d4d97bf]
  412c60:	popf   
  412c61:	frstor [edx-0x16]
  412c64:	or     ah,cl
  412c66:	js     0x412c22
  412c68:	pop    eax
  412c69:	fsub   DWORD PTR [ebp+eiz*4-0x22f1135f]
  412c70:	iret   
  412c71:	clc    
  412c72:	or     eax,0xccbc838
  412c77:	xor    DWORD PTR [ebx+ebp*2+0xb3b023e],esp
  412c7e:	test   BYTE PTR [edi+0x1385f2cb],bl
  412c84:	(bad)  
  412c85:	mov    ch,0x19
  412c87:	mov    dl,0x57
  412c89:	(bad)  
  412c8a:	xchg   edi,eax
  412c8b:	sub    al,BYTE PTR [edx-0x1be3736f]
  412c91:	jb     0x412cb4
  412c93:	mov    bl,0x53
  412c95:	(bad)  
  412c97:	cmp    BYTE PTR [ebp+ebp*8+0x33e335e6],ah
  412c9e:	or     ch,dh
  412ca0:	inc    edi
  412ca1:	iret   
  412ca2:	ror    BYTE PTR [esi+0x73],0x4d
  412ca6:	sbb    eax,0xab0363b7
  412cab:	sub    BYTE PTR [edi+0xa6c95d6],dl
  412cb1:	pop    edi
  412cb2:	push   es
  412cb3:	adc    eax,0x152c399a
  412cb8:	scas   eax,DWORD PTR es:[edi]
  412cb9:	jno    0x412c5a
  412cbb:	retf   0xe0b8
  412cbe:	in     al,dx
  412cbf:	into   
  412cc0:	mov    ds,esp
  412cc2:	pusha  
  412cc3:	inc    ecx
  412cc4:	inc    esi
  412cc5:	loope  0x412d3f
  412cc7:	mov    ds:0x1590d04,al
  412ccc:	mov    ds:0xc36fc9a,eax
  412cd1:	cmp    al,0x9c
  412cd3:	cmp    DWORD PTR [esi+0x7a5e6f07],eax
  412cd9:	xor    eax,0x40bac85a
  412cde:	loopne 0x412d3e
  412ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce1:	popa   
  412ce2:	xchg   esi,eax
  412ce3:	clc    
  412ce4:	iret   
  412ce5:	xor    DWORD PTR [eax],ebx
  412ce7:	int    0x70
  412ce9:	lods   eax,DWORD PTR ds:[esi]
  412cea:	push   es
  412ceb:	jb     0xd9cd9557
  412cf1:	aam    0x88
  412cf3:	mov    ch,BYTE PTR [edx+0xea82cb3]
  412cf9:	jb     0x412cb3
  412cfb:	iret   
  412cfc:	sbb    esi,DWORD PTR [edi+0x7c]
  412cff:	add    al,0xc4
  412d01:	mov    eax,ds:0x2d3898e
  412d06:	test   eax,0x6941ae6a
  412d0b:	cmp    eax,edi
  412d0d:	sub    cl,BYTE PTR [ecx+0x95b4921]
  412d13:	push   ecx
  412d14:	pop    edi
  412d15:	lock repz sub eax,0x1a15a3e5
  412d1c:	xchg   esi,eax
  412d1d:	shr    DWORD PTR [edx-0x2],0x7
  412d21:	cmp    bh,BYTE PTR [eax-0x6a]
  412d24:	call   0xb144:0x18e556a6
  412d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d2c:	dec    ebx
  412d2d:	call   0x6864:0x4fac2100
  412d34:	cmp    BYTE PTR [edi+edi*2+0x17],dl
  412d38:	js     0x412d83
  412d3a:	push   ecx
  412d3b:	shr    esi,0xfb
  412d3e:	push   0x2ec3898c
  412d43:	sub    cl,BYTE PTR [ebp+0x29]
  412d46:	adc    DWORD PTR [ecx],0x2022e539
  412d4c:	mov    al,ds:0xfcbb7ffa
  412d51:	mov    eax,ds:0xa58f4f7d
  412d56:	test   ebp,ecx
  412d58:	lea    edi,gs:[edx-0x5f]
  412d5c:	fs sbb eax,0x81efab56
  412d62:	es daa 
  412d64:	rcl    ebx,0xfb
  412d67:	in     al,0xc2
  412d69:	fistp  DWORD PTR [edi-0x2f24a40d]
  412d6f:	sbb    al,0x15
  412d71:	adc    ebx,ebx
  412d73:	fwait
  412d74:	pop    ds
  412d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d76:	clc    
  412d77:	xchg   edi,eax
  412d78:	popa   
  412d79:	cmp    DWORD PTR [eax+0x6031f8e2],ecx
  412d7f:	popa   
  412d80:	inc    ecx
  412d81:	popf   
  412d82:	not    BYTE PTR [esi+0x3a]
  412d85:	push   0x77d79038
  412d8a:	sbb    eax,0x7a61f81f
  412d8f:	icebp  
  412d90:	jns    0x412e0e
  412d92:	fild   WORD PTR [ebx-0x18]
  412d95:	sub    al,0xac
  412d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d98:	adc    DWORD PTR [esi+esi*1+0x3c],eax
  412d9c:	or     cl,0xd1
  412d9f:	neg    DWORD PTR [edx+0x5]
  412da2:	bound  edi,QWORD PTR [edx]
  412da4:	retf   0x46a7
  412da7:	adc    eax,0xec905815
  412dac:	sar    bh,1
  412dae:	push   ss
  412daf:	xchg   BYTE PTR ds:0xddf5860e,cl
  412db5:	pop    ecx
  412db6:	push   0x15a123b5
  412dbb:	pop    esi
  412dbc:	inc    esp
  412dbd:	pop    edx
  412dbe:	outs   dx,BYTE PTR ds:[esi]
  412dbf:	mov    esp,0xbafd599
  412dc4:	not    BYTE PTR [esi+0x74]
  412dc7:	xor    al,0xeb
  412dc9:	mov    edi,0x94352c12
  412dce:	lahf   
  412dcf:	xchg   edi,eax
  412dd0:	ret    0xce6a
  412dd3:	push   esi
  412dd4:	psubsb mm2,QWORD PTR [esi-0x47]
  412dd8:	mov    WORD PTR [esp+esi*2-0x60],es
  412ddc:	mov    WORD PTR [esi+0xd],gs
  412ddf:	aas    
  412de0:	pop    eax
  412de1:	les    ebp,FWORD PTR [edi+0x42]
  412de4:	cwde   
  412de5:	outs   dx,DWORD PTR ds:[esi]
  412de6:	ins    BYTE PTR es:[edi],dx
  412de7:	add    ah,al
  412de9:	add    BYTE PTR [edx],dh
  412deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dec:	fidiv  WORD PTR ds:0xa0c0e764
  412df2:	pop    ds
  412df3:	add    eax,0x4b22deb8
  412df8:	scas   eax,DWORD PTR es:[edi]
  412df9:	pop    es
  412dfa:	push   esp
  412dfb:	lahf   
  412dfc:	clc    
  412dfd:	push   eax
  412dfe:	sub    eax,0x331278d2
  412e03:	adc    al,0xa9
  412e05:	(bad)  
  412e06:	aas    
  412e07:	icebp  
  412e08:	push   edx
  412e09:	push   cs
  412e0a:	xchg   DWORD PTR [ebp+0x6f],edi
  412e0d:	sbb    eax,0x8f971b9c
  412e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e13:	mov    dl,BYTE PTR [eax-0xa1fe978]
  412e19:	es xor ax,0xc85e
  412e1e:	stos   BYTE PTR es:[edi],al
  412e1f:	aas    
  412e20:	inc    edx
  412e21:	jo     0x412e3b
  412e23:	lods   eax,DWORD PTR ds:[esi]
  412e24:	lock call 0xdf56:0x4a7e51fe
  412e2c:	pop    es
  412e2d:	jne    0x412e67
  412e2f:	popf   
  412e30:	jb     0x412e3f
  412e32:	cmp    esp,DWORD PTR [esi]
  412e34:	dec    eax
  412e35:	stc    
  412e36:	push   es
  412e37:	push   ss
  412e38:	xchg   esi,eax
  412e39:	out    0x5c,al
  412e3b:	adc    cl,BYTE PTR [edi+eiz*4-0x486e9bf4]
  412e42:	minps  xmm1,XMMWORD PTR [edx+0x76f90b07]
  412e49:	inc    eax
  412e4a:	sub    eax,0xdb5c32a8
  412e4f:	mov    DWORD PTR [edi],edi
  412e51:	inc    esp
  412e52:	jns    0x412e83
  412e54:	mov    eax,DWORD PTR [eax-0x45]
  412e57:	scas   eax,DWORD PTR es:[edi]
  412e58:	adc    cl,BYTE PTR [edx-0x6f]
  412e5b:	not    BYTE PTR [eax*1+0x72916ba6]
  412e62:	jmp    0x412de6
  412e64:	cwde   
  412e65:	jp     0x412ed2
  412e67:	push   edi
  412e68:	xchg   esi,eax
  412e69:	fidiv  DWORD PTR [esi]
  412e6b:	cmp    DWORD PTR [esi+ecx*8],ebp
  412e6e:	adc    eax,0xb61633b6
  412e73:	pushf  
  412e74:	mov    ebx,0x5156f2ca
  412e79:	pop    edx
  412e7a:	sub    eax,0x1be11931
  412e7f:	jo     0x412e25
  412e81:	dec    ebx
  412e82:	inc    esp
  412e83:	mov    dl,0x1
  412e85:	sbb    eax,DWORD PTR [ebp-0x3a]
  412e88:	push   edi
  412e89:	adc    al,0x40
  412e8b:	sbb    eax,0x937b5304
  412e90:	adc    al,0x6a
  412e92:	imul   edx,esp,0x56
  412e95:	mov    bl,0x8a
  412e97:	stos   DWORD PTR es:[edi],eax
  412e98:	xor    al,0xbb
  412e9a:	ja     0x412eae
  412e9c:	shr    DWORD PTR [edi-0x3431d43c],cl
  412ea2:	sar    BYTE PTR [ebp+0x4e3f0b00],1
  412ea8:	and    bl,al
  412eaa:	sub    al,BYTE PTR ds:0x1f659c82
  412eb0:	xor    ebx,DWORD PTR [edi]
  412eb2:	push   esp
  412eb3:	pop    ds
  412eb4:	sar    BYTE PTR [ebx+esi*4-0x47],1
  412eb8:	jns    0x412ec0
  412eba:	les    eax,FWORD PTR [ebp-0x3d]
  412ebd:	dec    ecx
  412ebe:	xor    DWORD PTR [esi+0x56],ebp
  412ec1:	(bad)  
  412ec2:	lahf   
  412ec3:	jnp    0x412e7e
  412ec5:	push   0x9b57b899
  412eca:	pop    ecx
  412ecb:	jnp    0x412f13
  412ecd:	mov    eax,ds:0x953242c
  412ed2:	dec    ecx
  412ed3:	test   dh,ah
  412ed5:	xchg   esp,eax
  412ed6:	rcr    BYTE PTR [ebx+ebx*4],cl
  412ed9:	lds    esp,FWORD PTR [edi+ecx*2+0x545e1ae0]
  412ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee1:	aaa    
  412ee2:	cld    
  412ee3:	push   esi
  412ee4:	xchg   edi,eax
  412ee5:	xchg   ebp,eax
  412ee6:	(bad)  
  412ee8:	jecxz  0x412f68
  412eea:	mov    edi,0xb1503a43
  412eef:	loope  0x412edc
  412ef1:	popf   
  412ef2:	mov    edx,eax
  412ef4:	sbb    al,0x49
  412ef6:	pop    es
  412ef7:	and    eax,0xfea227ae
  412efc:	test   BYTE PTR [ebp-0x17],dl
  412eff:	adc    BYTE PTR [esi+0x5c],ah
  412f02:	iret   
  412f03:	arpl   WORD PTR [ecx],di
  412f05:	dec    esi
  412f06:	sahf   
  412f07:	outs   dx,DWORD PTR ds:[esi]
  412f08:	stos   BYTE PTR es:[edi],al
  412f09:	mov    eax,0x5532fb49
  412f0e:	pop    esi
  412f0f:	cs test ah,al
  412f12:	jmp    0x408c:0x2bad4ec8
  412f19:	arpl   WORD PTR [esp+esi*1],ax
  412f1c:	xor    bh,al
  412f1e:	aaa    
  412f1f:	(bad)  
  412f20:	iret   
  412f21:	add    BYTE PTR [eax],ah
  412f23:	adc    bh,dh
  412f25:	push   edi
  412f26:	adc    al,0xdf
  412f28:	adc    BYTE PTR ss:[ebx+esi*2],0x74
  412f2d:	sub    eax,0xbc0ebcb9
  412f32:	jle    0x412f9b
  412f34:	fld    QWORD PTR [ecx]
  412f36:	sahf   
  412f37:	mov    esi,0x8c3473a7
  412f3c:	or     eax,0xf7e80de8
  412f41:	loope  0x412eec
  412f43:	mov    esi,0x1fd392e5
  412f48:	icebp  
  412f49:	std    
  412f4a:	sub    eax,0x37d5d12b
  412f4f:	push   ecx
  412f50:	pop    edx
  412f51:	dec    eax
  412f52:	aad    0xbc
  412f54:	je     0x412f65
  412f56:	dec    esi
  412f57:	sub    eax,0x3801dd63
  412f5c:	mov    esp,0xef09fccb
  412f61:	and    eax,ecx
  412f63:	sbb    al,0x7
  412f65:	(bad)  
  412f66:	sar    BYTE PTR [ecx],cl
  412f68:	in     eax,0xee
  412f6a:	ss jns 0x412fd5
  412f6d:	and    al,0x74
  412f6f:	jmp    DWORD PTR [esi]
  412f71:	cmp    DWORD PTR ss:[edx+0x40],esp
  412f75:	lods   eax,DWORD PTR ds:[esi]
  412f76:	ss stos DWORD PTR es:[edi],eax
  412f78:	and    BYTE PTR [eax],bh
  412f7a:	pop    es
  412f7b:	mov    dl,0x94
  412f7d:	or     dl,BYTE PTR [esi+0x5bec2bc3]
  412f83:	rcr    dl,0xdb
  412f86:	in     eax,0x75
  412f88:	sbb    BYTE PTR [edx],dh
  412f8a:	add    cl,BYTE PTR [eax]
  412f8c:	in     eax,0x16
  412f8e:	and    DWORD PTR [ebx-0x56],esi
  412f91:	cld    
  412f92:	or     cl,0x67
  412f95:	xor    al,0x53
  412f97:	rcl    ecx,1
  412f99:	int3   
  412f9a:	ret    
  412f9b:	enter  0xf02,0xe9
  412f9f:	sahf   
  412fa0:	pop    ebp
  412fa1:	and    al,BYTE PTR [esp+ecx*1]
  412fa4:	push   eax
  412fa5:	jo     0x412f9b
  412fa7:	sbb    eax,0x775a645d
  412fac:	xor    BYTE PTR [ecx-0x282c2d15],ch
  412fb2:	push   ecx
  412fb3:	lahf   
  412fb4:	sub    edi,DWORD PTR [edx+eax*4+0x1f1c2eba]
  412fbb:	aam    0xb4
  412fbd:	add    DWORD PTR [ebp-0x14a368f8],0xfffffff4
  412fc4:	and    DWORD PTR [ecx-0x67],esp
  412fc7:	mov    al,BYTE PTR ds:0x8d2b13e2
  412fcd:	call   FWORD PTR [edx-0x2474c8ac]
  412fd3:	mov    ds:0xaeafe180,al
  412fd8:	mov    es,WORD PTR [eax]
  412fda:	and    DWORD PTR [ebx+0x1e],ebx
  412fdd:	aas    
  412fde:	leave  
  412fdf:	das    
  412fe0:	aas    
  412fe1:	imul   esi,DWORD PTR [ecx-0x5027a760],0x22
  412fe8:	out    0xb7,eax
  412fea:	xchg   ebp,eax
  412feb:	jne    0x41300b
  412fed:	adc    esi,DWORD PTR [ebx+0x52424014]
  412ff3:	cmp    DWORD PTR [edi],esi
  412ff5:	rcl    BYTE PTR [edx-0x7952df3],0x27
  412ffc:	jmp    0x16f9fe7f
  413001:	pop    esi
  413002:	and    DWORD PTR [eax+0x2b],0x57
  413006:	scas   al,BYTE PTR es:[edi]
  413007:	jmp    0xade5:0x5d5d0342
  41300e:	xlat   BYTE PTR ds:[ebx]
  41300f:	xor    BYTE PTR [esi+edi*2+0x7c33dc6d],ch
  413016:	or     esi,0xb75f24c6
  41301c:	int3   
  41301d:	push   0xffffffec
  41301f:	mov    ah,0x45
  413021:	jle    0x412fec
  413023:	xor    esi,DWORD PTR [edi+0x662cbb3b]
  413029:	mov    edi,0xfc3b046a
  41302e:	adc    ecx,DWORD PTR [ebx+0x7e24ffb6]
  413034:	cmp    ax,0xd9d5
  413038:	push   esi
  413039:	jmp    0x57e6:0x6c405eb8
  413040:	xor    esp,DWORD PTR [ecx]
  413042:	xor    DWORD PTR [ecx],ebp
  413044:	aad    0x72
  413046:	inc    ebx
  413047:	sub    ebx,ecx
  413049:	and    DWORD PTR [edi+0x69be01c4],eax
  41304f:	and    eax,0x1651704
  413054:	gs push edx
  413056:	inc    eax
  413057:	pop    es
  413058:	pusha  
  413059:	call   edx
  41305b:	jae    0x4130cb
  41305d:	das    
  41305e:	add    al,0x48
  413060:	cli    
  413061:	mov    ds,WORD PTR [esi+0x170c97c6]
  413067:	dec    ebx
  413068:	push   0x246abee3
  41306d:	ror    BYTE PTR [edi],cl
  41306f:	fdiv   st,st(5)
  413071:	push   ss
  413072:	nop
  413073:	dec    edi
  413074:	jmp    0xcf2c6246
  413079:	add    BYTE PTR [eax+0x50e0f7ad],al
  41307f:	xor    cl,0x6
  413082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413083:	pop    ecx
  413084:	test   esi,edx
  413086:	ja     0x4130bd
  413088:	lods   al,BYTE PTR ds:[esi]
  413089:	int3   
  41308a:	sahf   
  41308b:	mov    ds:0xb5fd2b3e,eax
  413090:	mov    ds:0x13745bf4,eax
  413095:	jge    0x413025
  413097:	and    BYTE PTR [edi+0x16],dl
  41309a:	sub    esi,DWORD PTR [edi]
  41309c:	rcl    BYTE PTR ds:0x844f4f01,0x6c
  4130a3:	mul    BYTE PTR [edx+0x2c]
  4130a6:	mov    ds:0x64893a2a,al
  4130ab:	pcmpeqd mm2,QWORD PTR [ecx+0x3b]
  4130af:	push   ds
  4130b0:	jnp    0x41303f
  4130b2:	repz sbb eax,0x614f2ecf
  4130b8:	jnp    0x413121
  4130ba:	and    edx,ecx
  4130bc:	imul   ecx,DWORD PTR gs:[ebp-0xa1f37f0],0x52
  4130c4:	fdiv   DWORD PTR [esi-0xe43f440]
  4130ca:	sbb    DWORD PTR [edx],edx
  4130cc:	and    ebx,DWORD PTR [ebp+0x73]
  4130cf:	fild   WORD PTR [edi+edi*1+0x5925e1e9]
  4130d6:	repz xlat BYTE PTR ds:[ebx]
  4130d8:	pushf  
  4130d9:	dec    ebp
  4130da:	mov    al,ds:0xbe89af25
  4130df:	inc    ebp
  4130e0:	mov    bh,0xe8
  4130e2:	inc    esp
  4130e3:	in     eax,dx
  4130e4:	popf   
  4130e5:	add    al,0x82
  4130e7:	aas    
  4130e8:	jb     0x41315d
  4130ea:	cmp    BYTE PTR [edi-0x194c4e90],0x3a
  4130f1:	adc    ebp,DWORD PTR ds:[edx-0x25]
  4130f5:	fisttp DWORD PTR [eax+ebp*8]
  4130f8:	test   BYTE PTR [eax],cl
  4130fa:	test   bl,ch
  4130fc:	lea    esi,[eax+0x56]
  4130ff:	lods   eax,DWORD PTR ds:[esi]
  413100:	out    dx,al
  413101:	xchg   edi,eax
  413102:	ret    
  413103:	fst    DWORD PTR [ebp-0x58e5d0c9]
  413109:	daa    
  41310a:	(bad)  
  41310b:	pop    edx
  41310c:	dec    ecx
  41310d:	lods   eax,DWORD PTR ds:[esi]
  41310e:	and    dh,al
  413110:	or     al,0x74
  413112:	add    ch,BYTE PTR [edx]
  413114:	clc    
  413115:	adc    edi,DWORD PTR [edx]
  413117:	xchg   BYTE PTR [edi+0x371887c3],bl
  41311d:	sbb    eax,0x8209e650
  413122:	into   
  413123:	call   0xea7e4568
  413128:	lock adc BYTE PTR [ecx],bl
  41312b:	xchg   BYTE PTR [eax],bl
  41312d:	or     DWORD PTR [ebx-0x15952999],esp
  413133:	jno    0x41311d
  413135:	mov    ds:0x57b0fa11,al
  41313a:	repz data16 jg 0x4130d4
  41313e:	aam    0x9a
  413140:	add    BYTE PTR [edi-0x5b],al
  413143:	mov    bh,0xa2
  413145:	test   BYTE PTR [ebp+eax*4+0x37],bl
  413149:	mov    WORD PTR [edi+eax*1+0x4d1a343c],ds
  413150:	jnp    0x413136
  413152:	and    DWORD PTR cs:[edx+0x70],ebp
  413156:	adc    BYTE PTR [edi+0x2b],dh
  413159:	into   
  41315a:	cwde   
  41315b:	push   esp
  41315c:	pop    esp
  41315d:	xchg   ecx,eax
  41315e:	imul   eax,edx,0xffffffce
  413161:	cmp    al,0xaf
  413163:	jb     0x413143
  413165:	inc    edx
  413166:	adc    BYTE PTR [ebx+eiz*1+0x2c2b8b93],al
  41316d:	jmp    0x41312a
  41316f:	pop    ebp
  413170:	mov    DWORD PTR [eax+edx*1],ebp
  413173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413174:	addr16 in al,dx
  413176:	add    ah,ah
  413178:	test   DWORD PTR [ebp+0x7b5f0036],0xf93f61a6
  413182:	lea    esp,[edi]
  413184:	icebp  
  413185:	scas   al,BYTE PTR es:[edi]
  413186:	sbb    al,0x8d
  413188:	inc    esp
  413189:	pop    eax
  41318a:	sbb    dl,BYTE PTR [ecx+eax*8-0x48]
  41318e:	or     eax,0x125f620a
  413193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413194:	inc    ecx
  413195:	mov    bh,BYTE PTR [ebx-0x739712c2]
  41319b:	in     al,0x53
  41319d:	out    dx,eax
  41319e:	inc    ebp
  41319f:	gs or  eax,0xe603f391
  4131a5:	xchg   BYTE PTR [ebp+ebx*4-0x44],bh
  4131a9:	push   cs
  4131aa:	jb     0x413200
  4131ac:	adc    BYTE PTR [esi],dh
  4131ae:	lds    ecx,FWORD PTR [esi]
  4131b0:	xchg   dl,bh
  4131b2:	dec    ecx
  4131b3:	fidivr DWORD PTR ds:0x25f52473
  4131b9:	inc    esp
  4131ba:	xor    DWORD PTR [eax-0x2195a808],0x48fd5228
  4131c4:	es iret 
  4131c6:	inc    esi
  4131c7:	(bad)  
  4131c8:	icebp  
  4131c9:	add    esp,DWORD PTR [ebx-0x1d18a5b8]
  4131cf:	aas    
  4131d0:	sub    eax,0x55be2021
  4131d5:	fdiv   DWORD PTR [esi]
  4131d7:	iret   
  4131d8:	jmp    DWORD PTR [edi]
  4131da:	dec    esp
  4131db:	aad    0xc
  4131dd:	pop    edx
  4131de:	inc    edx
  4131df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131e0:	das    
  4131e1:	adc    DWORD PTR [ecx],esp
  4131e3:	cmp    eax,0xb80530bc
  4131e8:	or     DWORD PTR [ebx+0x45],ecx
  4131eb:	frstor [esi+0x6bec32d3]
  4131f1:	lods   al,BYTE PTR ds:[esi]
  4131f2:	fwait
  4131f3:	int3   
  4131f4:	and    eax,0x52936ad8
  4131f9:	dec    eax
  4131fa:	sbb    al,0x1
  4131fc:	in     eax,dx
  4131fd:	aam    0xf6
  4131ff:	jl     0x4131f3
  413201:	or     bh,ah
  413203:	push   esp
  413204:	jmp    0x5737:0x6ad4a6fa
  41320b:	(bad)  
  41320d:	nop
  41320e:	loopne 0x413250
  413210:	pusha  
  413211:	fmulp  st(7),st
  413213:	loop   0x413221
  413215:	sub    eax,eax
  413217:	jmp    0x4131b2
  413219:	mov    cl,0x11
  41321b:	mov    cl,0xb2
  41321d:	imul   esi,DWORD PTR [edi+edx*2-0x51eb5870],0xa5aab875
  413228:	inc    ebp
  413229:	loope  0x4131ad
  41322b:	or     ch,BYTE PTR ds:0x68e14ac2
  413231:	test   eax,0x61073b08
  413236:	mov    dl,0x75
  413238:	or     eax,0x4292ea1
  41323d:	mov    cl,0xa5
  41323f:	in     eax,dx
  413240:	test   eax,ebp
  413242:	jns    0x4131e6
  413244:	sbb    al,0xc4
  413246:	mov    al,ds:0x4a8b814c
  41324b:	sbb    al,dl
  41324d:	sbb    al,BYTE PTR [ebx]
  41324f:	xchg   ebp,eax
  413250:	lock mov ecx,0xd703068c
  413256:	inc    eax
  413257:	inc    esp
  413258:	fmul   st(0),st
  41325a:	push   ecx
  41325b:	jmp    0xf502906d
  413260:	mov    ds:0x693ba5b3,al
  413265:	dec    edx
  413266:	lods   al,BYTE PTR ds:[esi]
  413267:	scas   eax,DWORD PTR es:[edi]
  413268:	popf   
  413269:	stos   BYTE PTR es:[edi],al
  41326a:	adc    ebp,DWORD PTR [esi+ebp*8+0x3a]
  41326e:	sbb    edx,DWORD PTR [edi+0x29]
  413271:	rol    dh,cl
  413273:	mov    ah,0x1d
  413275:	outs   dx,BYTE PTR ds:[esi]
  413276:	std    
  413277:	inc    edx
  413278:	mov    cs,WORD PTR [edi]
  41327a:	clc    
  41327b:	jno    0x4132de
  41327d:	aad    0xbe
  41327f:	dec    ecx
  413280:	mov    edx,0x10c25681
  413285:	or     eax,DWORD PTR [eax-0x1f]
  413288:	add    eax,0x32757fc7
  41328d:	mov    edx,0xd31d0bec
  413292:	jae    0x4132cc
  413294:	or     eax,0xdced8809
  413299:	push   ebx
  41329a:	sbb    al,0x16
  41329c:	mov    cl,BYTE PTR [ebx]
  41329e:	jo     0x4132c4
  4132a0:	js     0x413230
  4132a2:	add    eax,0x28564943
  4132a7:	sti    
  4132a8:	or     eax,DWORD PTR [ebp-0x60]
  4132ab:	add    DWORD PTR [esi+0x5d],0x1fab3743
  4132b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b3:	mov    al,0x9d
  4132b5:	ins    BYTE PTR es:[edi],dx
  4132b6:	cmp    ah,BYTE PTR [eax]
  4132b8:	ds dec esi
  4132ba:	icebp  
  4132bb:	fisttp QWORD PTR [ebx+0x46a93a9d]
  4132c1:	ins    BYTE PTR es:[edi],dx
  4132c2:	aas    
  4132c3:	call   0x9434:0xa6855543
  4132ca:	inc    DWORD PTR [esi]
  4132cc:	and    BYTE PTR [ebp+ebp*4+0x5b6a72f9],0xa6
  4132d4:	adc    al,0x25
  4132d6:	icebp  
  4132d7:	int    0xd7
  4132d9:	pop    ebp
  4132da:	add    DWORD PTR ds:[ebx+ebp*1],esp
  4132de:	shr    al,0xe8
  4132e1:	mov    eax,0xfa4a981a
  4132e6:	or     ah,BYTE PTR [ebp-0x75]
  4132e9:	xchg   ebp,eax
  4132ea:	loope  0x4132ba
  4132ec:	daa    
  4132ed:	comiss xmm1,xmm0
  4132f0:	inc    esi
  4132f1:	and    al,0x5d
  4132f3:	sub    bh,BYTE PTR [ecx+eiz*8]
  4132f6:	call   0xfd0b:0xfd1b7662
  4132fd:	push   ebp
  4132fe:	cmp    BYTE PTR [ebx],0x67
  413301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413302:	clc    
  413303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413304:	setnp  BYTE PTR [edx-0x294a2a85]
  41330b:	imul   edi,DWORD PTR [edx+0x4b],0xfffffffd
  41330f:	fistp  WORD PTR [edi+0x2e]
  413312:	mov    ebp,0x122acddf
  413317:	cmp    edx,ecx
  413319:	add    ah,bh
  41331b:	jb     0x4132f9
  41331d:	inc    esi
  41331e:	adc    al,0xb8
  413320:	xor    BYTE PTR [esi],al
  413322:	jmp    0x97e1:0x10f1193e
  413329:	sbb    al,0x6e
  41332b:	push   cs
  41332c:	data16 jl 0x413372
  41332f:	push   eax
  413330:	je     0x4132b3
  413332:	xchg   ebp,eax
  413333:	dec    ebx
  413334:	add    DWORD PTR [edi-0x46d5adcc],esi
  41333a:	jp     0x41339f
  41333c:	xchg   ecx,eax
  41333d:	xor    ebx,esi
  41333f:	ror    BYTE PTR [edi],0xd3
  413342:	cmp    bh,BYTE PTR [ebp*8-0x8f68501]
  413349:	cmp    ecx,DWORD PTR [ebx+0x7f]
  41334c:	test   DWORD PTR ds:0xff186096,esp
  413352:	sbb    DWORD PTR ds:0x1d966692,ebp
  413358:	sbb    esi,DWORD PTR [ebp+0x3ebd06ec]
  41335e:	push   esp
  41335f:	xchg   ebp,eax
  413360:	cmp    ecx,DWORD PTR [ecx-0x3d]
  413363:	jae    0x41332e
  413365:	inc    esp
  413366:	rcr    DWORD PTR [edi+0x45],1
  413369:	inc    esi
  41336a:	stc    
  41336b:	or     al,0x41
  41336d:	pop    ss
  41336e:	pop    edi
  41336f:	pop    edi
  413370:	addr16 xchg ebx,eax
  413372:	stc    
  413373:	or     dh,BYTE PTR [ecx]
  413375:	(bad)  
  413376:	aam    0x6d
  413378:	and    ebx,eax
  41337a:	cwde   
  41337b:	jmp    FWORD PTR [esi+0x2df90834]
  413381:	mov    esi,0x5e1196cf
  413386:	mov    esi,0x6871021d
  41338b:	mov    al,0xeb
  41338d:	xchg   ebx,eax
  41338e:	repnz push ecx
  413390:	or     BYTE PTR [edx-0x993492c],bh
  413396:	int    0x8
  413398:	mov    ebp,0x676dd5a5
  41339d:	cwde   
  41339e:	inc    ebx
  41339f:	cld    
  4133a0:	addr16 mov eax,ds:0xa508
  4133a4:	inc    ebx
  4133a5:	inc    eax
  4133a6:	xchg   ebx,eax
  4133a7:	in     eax,0x53
  4133a9:	stos   BYTE PTR es:[edi],al
  4133aa:	xchg   ebx,ebx
  4133ac:	inc    edi
  4133ad:	mov    ch,0xab
  4133af:	in     eax,0x96
  4133b1:	dec    esp
  4133b2:	cmp    eax,0xa16a10e
  4133b7:	jecxz  0x4133d7
  4133b9:	ss loop 0x4133f7
  4133bc:	xchg   esi,eax
  4133bd:	leave  
  4133be:	pushf  
  4133bf:	(bad)  
  4133c0:	xlat   BYTE PTR ds:[ebx]
  4133c1:	mov    ebx,DWORD PTR [ebp-0x4f]
  4133c4:	stos   DWORD PTR es:[edi],eax
  4133c5:	jne    0x413404
  4133c7:	mov    cl,0x1e
  4133c9:	test   BYTE PTR [ebx],0x5f
  4133cc:	fistp  WORD PTR [eax]
  4133ce:	fcom   DWORD PTR ds:0xe78edc65
  4133d4:	ja     0x4133fe
  4133d6:	enter  0x83be,0x59
  4133da:	out    dx,al
  4133db:	pop    eax
  4133dc:	mov    al,cl
  4133de:	xor    dh,BYTE PTR [edi+0x9116e94]
  4133e4:	mov    bh,0x8b
  4133e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133e7:	repnz jecxz 0x413417
  4133ea:	test   al,0x58
  4133ec:	push   es
  4133ed:	(bad)  
  4133ef:	jmp    0x4133e8
  4133f1:	sbb    al,0x5b
  4133f3:	xchg   ecx,eax
  4133f4:	add    bh,BYTE PTR [edx+0x5d]
  4133f7:	and    cl,BYTE PTR [ecx+0x36]
  4133fa:	push   0x76
  4133fc:	fmul   st(7),st
  4133fe:	ds fs xor eax,0x28b391e4
  413405:	sub    DWORD PTR [ebx+0x3d9db7fb],edi
  41340b:	push   0xffffffcc
  41340d:	(bad)  
  41340e:	jle    0x413450
  413410:	inc    esp
  413411:	fcomp  st(1)
  413413:	fisubr DWORD PTR [eax+0xd]
  413416:	popa   
  413417:	cmp    esi,DWORD PTR [ebx]
  413419:	imul   ecx,DWORD PTR [ecx+esi*1-0x25],0xec41bdb2
  413421:	(bad)  
  413422:	jns    0x413492
  413424:	daa    
  413425:	xor    al,BYTE PTR [edx]
  413427:	mov    dh,dl
  413429:	aad    0x7a
  41342b:	out    0x6d,eax
  41342d:	int3   
  41342e:	cmp    edx,DWORD PTR [eax-0x3b]
  413431:	test   BYTE PTR [ebp+0x2f],bh
  413434:	mov    edx,0xf8ccd01a
  413439:	mov    ch,BYTE PTR [ebp+0x68]
  41343c:	xchg   DWORD PTR fs:[ebx+0x4d0ff287],ecx
  413443:	adc    bl,BYTE PTR [ecx-0xd]
  413446:	push   esi
  413447:	adc    ch,BYTE PTR [ecx+0x1d]
  41344a:	add    al,0x47
  41344c:	xor    BYTE PTR [ebx],0xf6
  41344f:	add    al,0x29
  413451:	adc    al,BYTE PTR fs:[eax-0x34]
  413455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413456:	cmp    DWORD PTR [ecx-0x230ed293],esi
  41345c:	bound  edx,QWORD PTR [esi-0x3e40d623]
  413462:	push   esp
  413463:	xrelease mov DWORD PTR [edi-0x7cd65a43],esi
  41346a:	xchg   BYTE PTR [eax],bl
  41346c:	inc    esp
  41346d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41346e:	(bad)  
  41346f:	fs inc eax
  413471:	imul   ebx,DWORD PTR ds:0x6cf68cae,0x3e1a16bc
  41347b:	mov    esp,0x8c97c558
  413480:	call   0xe0ed:0xbae0d8e4
  413487:	cmp    ch,BYTE PTR [edx*2-0x17596432]
  41348e:	pop    ebp
  41348f:	ins    DWORD PTR es:[edi],dx
  413490:	adc    bh,BYTE PTR [esp+esi*2-0x5a]
  413494:	pop    es
  413495:	fcom   DWORD PTR [esi]
  413497:	into   
  413498:	loop   0x413518
  41349a:	mov    ds:0x249c1797,al
  41349f:	sub    BYTE PTR [edi+0x1746acff],ah
  4134a5:	addr16 cs xor bh,dh
  4134a9:	sbb    bl,al
  4134ab:	push   edx
  4134ac:	rol    DWORD PTR [ebx],1
  4134ae:	dec    esi
  4134af:	dec    ebx
  4134b0:	daa    
  4134b1:	pushf  
  4134b2:	fwait
  4134b3:	in     ax,0x94
  4134b6:	stos   BYTE PTR es:[edi],al
  4134b7:	nop
  4134b8:	out    0x62,eax
  4134ba:	(bad)  
  4134bb:	idiv   bh
  4134bd:	pop    edi
  4134be:	and    al,0x82
  4134c0:	and    eax,0xe4580d31
  4134c5:	icebp  
  4134c6:	sub    dh,BYTE PTR [eax+0x25]
  4134c9:	fs push ebx
  4134cb:	mov    dh,0x7e
  4134cd:	and    eax,0x80555378
  4134d2:	jg     0x4134d8
  4134d4:	jnp    0x4134f1
  4134d6:	enter  0xf3ea,0x75
  4134da:	fucomip st,st(1)
  4134dc:	jmp    0xa3b0:0xff51b605
  4134e3:	into   
  4134e4:	test   eax,0xf9cf74c1
  4134e9:	clc    
  4134ea:	sbb    al,0x28
  4134ec:	add    eax,0xbfc56ce4
  4134f1:	push   ds
  4134f2:	pop    ebp
  4134f3:	and    al,0xe6
  4134f5:	outs   dx,BYTE PTR ds:[esi]
  4134f6:	popa   
  4134f7:	retf   0xa3ed
  4134fa:	loope  0x413540
  4134fc:	icebp  
  4134fd:	mov    edx,0x5fd66ed0
  413502:	and    ebx,esi
  413504:	inc    DWORD PTR [ebx]
  413506:	or     BYTE PTR es:0x2507f9b8,ah
  41350d:	cmp    eax,0xeeddafd0
  413512:	dec    edx
  413513:	unpckhps xmm7,xmm0
  413516:	fmul   st,st(7)
  413518:	push   0xb4cdcc57
  41351d:	rol    edi,1
  41351f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413520:	popf   
  413521:	aas    
  413522:	lea    ecx,[edx]
  413524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413525:	nop
  413526:	fsubr  st(1),st
  413528:	shl    DWORD PTR cs:[ecx-0x7e],cl
  41352c:	scas   al,BYTE PTR es:[edi]
  41352d:	pusha  
  41352e:	cli    
  41352f:	jmp    0x3bcf2c13
  413534:	in     eax,0x41
  413536:	sbb    DWORD PTR [edi-0x28],eax
  413539:	rol    DWORD PTR [edx-0x36],cl
  41353c:	pop    eax
  41353d:	stos   DWORD PTR es:[edi],eax
  41353e:	inc    ebp
  41353f:	idiv   ebp
  413541:	iret   
  413542:	xchg   edx,eax
  413543:	mov    ebx,0x9804e7c
  413548:	dec    ebx
  413549:	in     eax,0x42
  41354b:	inc    ebp
  41354c:	dec    edx
  41354d:	je     0x4135bf
  41354f:	gs mov esi,0xbea5fef2
  413555:	repz mov ecx,0xd027f32c
  41355b:	jno    0x413536
  41355d:	int3   
  41355e:	lahf   
  41355f:	std    
  413560:	outs   dx,DWORD PTR ds:[esi]
  413561:	mov    eax,ds:0x15be924f
  413566:	xor    eax,0x47a111d2
  41356b:	stc    
  41356c:	jne    0x413551
  41356e:	jo     0x413554
  413570:	cs jne 0x413582
  413573:	or     al,0x67
  413575:	(bad)  
  413576:	mov    eax,ds:0x4961a953
  41357b:	mov    esi,0xc7b339d0
  413580:	pop    ebp
  413581:	imul   BYTE PTR [ecx+edi*4+0x4a21a2f7]
  413588:	dec    ecx
  413589:	push   eax
  41358a:	aam    0xcd
  41358c:	in     eax,0xf3
  41358e:	retf   
  41358f:	and    DWORD PTR [eiz*2+0x7893decc],edx
  413596:	lock mov DWORD PTR [edi-0x3b5fe570],ecx
  41359d:	add    ebp,eax
  41359f:	xor    BYTE PTR [ecx-0x2cfaf5e5],dh
  4135a5:	dec    ebx
  4135a6:	mov    ebp,DWORD PTR [edi]
  4135a8:	shl    DWORD PTR [ebx-0x3d76b95e],0xd8
  4135af:	pop    esi
  4135b0:	sbb    DWORD PTR [eax],ebx
  4135b2:	mov    ecx,0xade5f926
  4135b7:	jb     0x413634
  4135b9:	pop    ss
  4135ba:	bound  ebx,QWORD PTR [edx+edi*1]
  4135bd:	retf   
  4135be:	shr    DWORD PTR [esi+0x8],cl
  4135c1:	and    al,0x82
  4135c3:	ja     0x4135ae
  4135c5:	mov    ch,bl
  4135c7:	dec    esi
  4135c8:	push   edi
  4135c9:	jle    0x4135ab
  4135cb:	sbb    ah,BYTE PTR [ebp+eiz*4+0x49]
  4135cf:	add    ch,BYTE PTR [edi+0x62833889]
  4135d5:	retf   0xb912
  4135d8:	daa    
  4135d9:	imul   ebx,edi,0x8d85b98a
  4135df:	rcr    BYTE PTR [edi+0x1d],1
  4135e2:	neg    BYTE PTR [esi]
  4135e4:	push   es
  4135e5:	dec    eax
  4135e6:	aas    
  4135e7:	out    dx,al
  4135e8:	add    esp,DWORD PTR [edi-0x40]
  4135eb:	in     eax,dx
  4135ec:	fmul   st,st(7)
  4135ee:	dec    edi
  4135ef:	fld    TBYTE PTR [ebp+ebx*8-0x26408888]
  4135f6:	jne    0x4135fd
  4135f8:	call   0xb9f91e89
  4135fd:	fstp   QWORD PTR [edi+edx*2+0x23]
  413601:	push   ebp
  413602:	gs cs xor al,0x3c
  413606:	sbb    BYTE PTR [edx+ecx*2-0x4d0466a5],dl
  41360d:	mov    dl,BYTE PTR [ebx-0x58]
  413610:	call   0x1bc67709
  413615:	jp     0x413648
  413617:	lea    ecx,[edx]
  413619:	push   0x7d13d443
  41361e:	stos   DWORD PTR es:[edi],eax
  41361f:	xchg   esp,eax
  413620:	ja     0x4135ea
  413622:	call   0x1abd:0xe08aab17
  413629:	jp     0x413685
  41362b:	push   0x44c8ce46
  413630:	arpl   WORD PTR ds:0x70c30ab3,si
  413636:	mov    dh,0xd9
  413638:	jno    0x41367a
  41363a:	test   DWORD PTR [ecx+0x7319e80d],ebp
  413640:	push   edx
  413641:	add    eax,0x36678edd
  413646:	adc    al,0x19
  413648:	pop    ss
  413649:	adc    DWORD PTR [ecx+0x6a],0x36
  41364d:	cmp    eax,0x62136c2c
  413652:	adc    esp,DWORD PTR [ebx]
  413654:	test   BYTE PTR [ecx-0x66],ah
  413657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413658:	sub    DWORD PTR [eax+0x29],ebx
  41365b:	sbb    ebp,esp
  41365d:	push   0xb2a7b6ff
  413662:	out    0x1a,eax
  413664:	push   edx
  413665:	mov    dh,BYTE PTR [eax-0x15]
  413668:	sub    eax,0xf8091199
  41366d:	imul   ecx,DWORD PTR [esi-0x1f],0x41
  413671:	arpl   WORD PTR [eax],bp
  413673:	push   es
  413674:	sub    eax,0xb6f42e15
  413679:	rol    DWORD PTR ds:0xcb519af5,1
  41367f:	ficom  WORD PTR [edi+0x2c]
  413682:	and    al,0xe8
  413684:	sahf   
  413685:	leave  
  413686:	jne    0x413634
  413688:	(bad)  
  413689:	aad    0xb5
  41368b:	pop    ecx
  41368c:	lds    edx,FWORD PTR [esp+edx*4+0x714c68c4]
  413693:	push   esi
  413694:	mov    eax,0x478a12b0
  413699:	sub    al,0x4c
  41369b:	fst    DWORD PTR [eax-0x12640c51]
  4136a1:	sub    esp,ecx
  4136a3:	clc    
  4136a4:	inc    ecx
  4136a5:	push   0x8e9ed8e0
  4136aa:	jg     0x4136af
  4136ac:	mov    al,0x64
  4136ae:	aad    0x25
  4136b0:	daa    
  4136b1:	into   
  4136b2:	loope  0x413693
  4136b4:	inc    esp
  4136b5:	or     ebx,DWORD PTR [edx-0x1f]
  4136b8:	out    0x40,al
  4136ba:	pop    ebx
  4136bb:	lods   eax,DWORD PTR ds:[esi]
  4136bc:	push   cs
  4136bd:	aaa    
  4136be:	in     al,0xd2
  4136c0:	loop   0x413710
  4136c2:	in     al,0x68
  4136c4:	je     0x41367b
  4136c6:	lods   eax,DWORD PTR ds:[esi]
  4136c7:	jb     0x4136a3
  4136c9:	mov    esi,0x57ba15ec
  4136ce:	adc    eax,0x539605fb
  4136d3:	sbb    DWORD PTR [ebp+0x21af769b],esi
  4136d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136da:	mov    dl,0x3a
  4136dc:	xchg   esi,eax
  4136dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136de:	pop    es
  4136df:	add    esp,ebx
  4136e1:	sub    esi,eax
  4136e3:	call   0x2f5d:0x3a206aa7
  4136ea:	inc    eax
  4136eb:	mov    WORD PTR [edi+0x66],ds
  4136ee:	pop    eax
  4136ef:	popa   
  4136f0:	jns    0x4136d4
  4136f2:	(bad)  
  4136f3:	out    dx,eax
  4136f4:	stos   DWORD PTR es:[edi],eax
  4136f5:	and    BYTE PTR [esi-0x15],bl
  4136f8:	dec    ebx
  4136f9:	not    BYTE PTR cs:[edx+0x5bf8686c]
  413700:	mov    ds,eax
  413702:	pop    ebp
  413703:	retf   
  413704:	mov    ch,0x12
  413706:	repz jo 0x41372b
  413709:	mov    edx,0xa873e355
  41370e:	aad    0x0
  413710:	clc    
  413711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413712:	jnp    0x413714
  413714:	test   ecx,esi
  413716:	nop
  413717:	inc    esi
  413718:	cdq    
  413719:	mov    fs,WORD PTR [edx+0x49]
  41371c:	int3   
  41371d:	cmp    DWORD PTR [eax+ebx*4-0x60007905],esi
  413724:	(bad)  
  413725:	xor    al,0x30
  413727:	mov    ecx,?
  413729:	out    0xcd,al
  41372b:	mov    ebp,0xd40580f2
  413730:	inc    eax
  413731:	add    eax,0xcb1eee1b
  413736:	mov    ebx,0xec558a5
  41373b:	sbb    eax,0xb7ee4fc1
  413740:	cmp    esp,DWORD PTR [ebp+0xc3d9708]
  413746:	stos   BYTE PTR es:[edi],al
  413747:	and    BYTE PTR [eax],bl
  413749:	cli    
  41374a:	inc    edx
  41374b:	adc    eax,0x1234267a
  413750:	xor    DWORD PTR [edi-0x401323e8],ebp
  413756:	mov    cl,0x75
  413758:	imul   ecx,ebp,0x5f
  41375b:	jbe    0x4136e6
  41375d:	das    
  41375e:	xor    dh,BYTE PTR [ebx-0x5b31dbd7]
  413764:	sbb    al,0x59
  413766:	push   cs
  413767:	inc    ebp
  413768:	stos   DWORD PTR es:[edi],eax
  413769:	ret    
  41376a:	inc    esp
  41376b:	lods   eax,DWORD PTR ds:[esi]
  41376c:	xchg   esp,eax
  41376d:	mov    dh,0x7a
  41376f:	vmwrite esi,DWORD PTR [eax-0x4cd3898c]
  413776:	cmp    BYTE PTR [edi+0x553cdfb3],al
  41377c:	mov    ecx,0x4a413b41
  413781:	adc    DWORD PTR [edi],0xffffffda
  413784:	into   
  413785:	bnd jo 0x413743
  413788:	cmp    cl,BYTE PTR [ecx-0x36e2886b]
  41378e:	stos   BYTE PTR es:[edi],al
  41378f:	adc    dl,BYTE PTR [esi+0x1332cd73]
  413795:	sbb    eax,ecx
  413797:	les    ebx,FWORD PTR [ecx+0x1badb30b]
  41379d:	push   ds
  41379e:	jne    0x4137ab
  4137a0:	jmp    ecx
  4137a2:	mov    cl,0xa5
  4137a4:	inc    ecx
  4137a5:	mov    ebp,0x123d56f3
  4137aa:	neg    DWORD PTR [esi+ecx*1+0x4efbefc6]
  4137b1:	ins    DWORD PTR es:[edi],dx
  4137b2:	push   ebx
  4137b3:	pop    edx
  4137b4:	adc    eax,0x66549a3b
  4137b9:	push   0x8
  4137bb:	push   edx
  4137bc:	adc    eax,0x52a93543
  4137c1:	mov    dh,0x42
  4137c3:	(bad)  
  4137c4:	jo     0x4137e8
  4137c6:	mov    eax,0xc6c92326
  4137cb:	pop    esp
  4137cc:	aaa    
  4137cd:	xchg   ebp,eax
  4137ce:	outs   dx,DWORD PTR ds:[esi]
  4137cf:	ins    BYTE PTR es:[edi],dx
  4137d0:	and    BYTE PTR [esi+edi*2-0x3c38d1ff],dl
  4137d7:	rcr    DWORD PTR [edx+0x42112623],0xe5
  4137de:	mov    fs,WORD PTR [ecx]
  4137e0:	fcmove st,st(3)
  4137e2:	sub    DWORD PTR [eax-0x6e],ecx
  4137e5:	out    0x8a,eax
  4137e7:	sar    eax,1
  4137e9:	loopne 0x41385e
  4137eb:	and    DWORD PTR ds:0x9bc03d37,eax
  4137f1:	or     ah,cl
  4137f3:	mov    eax,ebx
  4137f5:	sub    DWORD PTR [edx+0x19ffb180],ebp
  4137fb:	cwde   
  4137fc:	inc    esp
  4137fd:	jg     0x413849
  4137ff:	loope  0x41378c
  413801:	xchg   esi,eax
  413802:	cli    
  413803:	xchg   BYTE PTR [ebp+0x27],ah
  413806:	pop    ebx
  413807:	div    BYTE PTR [ecx+0x5]
  41380a:	scas   eax,DWORD PTR es:[edi]
  41380b:	jl     0x4137ca
  41380d:	push   0xffffffaa
  41380f:	lods   al,BYTE PTR ds:[esi]
  413810:	sub    DWORD PTR [ebp+0xa2c33b8],0xffffff96
  413817:	sbb    DWORD PTR [edi+ecx*8],0x5d
  41381b:	gs jp  0x4137cf
  41381e:	mov    ecx,0x94425e1b
  413823:	adc    al,0xdc
  413825:	out    0xa7,al
  413827:	fistp  WORD PTR [ecx]
  413829:	add    dh,BYTE PTR [ebp+0x58]
  41382c:	in     al,0x19
  41382e:	test   DWORD PTR [ebp-0x64ee7441],eax
  413834:	outs   dx,DWORD PTR ds:[esi]
  413835:	mov    bh,0x56
  413837:	mov    dh,BYTE PTR [ecx+0x32cd76]
  41383d:	es dec ebp
  41383f:	pop    esp
  413840:	cs xor eax,0xbeb0238f
  413846:	mov    dl,0x6e
  413848:	fcomp  QWORD PTR [edx-0x1e]
  41384b:	add    ch,ah
  41384d:	adc    ebp,DWORD PTR [ecx+0x76513aed]
  413853:	js     0x413829
  413855:	les    esi,FWORD PTR [eax-0x2f44bca3]
  41385b:	cwde   
  41385c:	loope  0x4138b0
  41385e:	imul   ebx,DWORD PTR [eax+0x13],0x47b9579e
  413865:	adc    ecx,ebp
  413867:	and    al,0x57
  413869:	mov    bh,0xdf
  41386b:	(bad)  
  41386c:	sbb    al,BYTE PTR [esi-0x74e611c1]
  413872:	out    dx,eax
  413873:	push   edx
  413874:	cmp    esi,DWORD PTR [ebx]
  413876:	dec    ebx
  413877:	pop    eax
  413878:	xchg   BYTE PTR [esi+0x46],dl
  41387b:	add    BYTE PTR [ebx],bh
  41387d:	inc    eax
  41387e:	jne    0x4138c8
  413880:	mov    ecx,DWORD PTR [edx+ebx*4]
  413883:	inc    ebx
  413884:	test   eax,0x2551c4ad
  413889:	sti    
  41388a:	pusha  
  41388b:	dec    edi
  41388c:	sub    DWORD PTR [ebx-0x1d75c53e],ebp
  413892:	dec    ebp
  413893:	das    
  413894:	ins    DWORD PTR es:[edi],dx
  413895:	js     0x413873
  413897:	push   eax
  413898:	(bad)  
  413899:	xchg   esp,eax
  41389a:	imul   edi,DWORD PTR [eax+edx*1],0x62
  41389e:	fisttp QWORD PTR [eax]
  4138a0:	xor    eax,DWORD PTR [ecx+0x4a3610fd]
  4138a6:	cld    
  4138a7:	sub    ch,bh
  4138a9:	push   ebp
  4138aa:	xor    DWORD PTR [ecx+0x11],0x36f708f6
  4138b1:	jns    0x4138d2
  4138b3:	pop    ecx
  4138b4:	mov    edi,0x845c0655
  4138b9:	cmp    edi,DWORD PTR [edx-0x6a109499]
  4138bf:	inc    esp
  4138c0:	int    0xff
  4138c2:	test   al,0xb
  4138c4:	push   ebx
  4138c5:	add    ebp,DWORD PTR [edi-0x5b73c1b4]
  4138cb:	push   ecx
  4138cc:	cmc    
  4138cd:	mov    dl,0x84
  4138cf:	xor    al,0xb4
  4138d1:	cs or  eax,0xabad2399
  4138d7:	ret    0x19b9
  4138da:	xor    edx,ebx
  4138dc:	inc    edi
  4138dd:	pop    ss
  4138de:	aaa    
  4138df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e0:	stc    
  4138e1:	dec    edi
  4138e2:	iret   
  4138e3:	inc    edx
  4138e4:	stos   DWORD PTR es:[edi],eax
  4138e5:	mov    al,0xaa
  4138e7:	push   esi
  4138e8:	add    al,0x8e
  4138ea:	test   al,0x14
  4138ec:	into   
  4138ed:	icebp  
  4138ee:	push   edx
  4138ef:	jmp    0x41396c
  4138f1:	pop    esi
  4138f2:	mov    esi,0x763fd1bc
  4138f7:	and    eax,0xf6210859
  4138fc:	adc    al,0x75
  4138fe:	and    DWORD PTR [esi],edi
  413900:	add    ebp,DWORD PTR [ebp+eax*2-0x7fcb2c91]
  413907:	int3   
  413908:	mov    ah,dl
  41390a:	rcl    ecx,1
  41390c:	lods   al,BYTE PTR ds:[esi]
  41390d:	xchg   ah,dh
  41390f:	push   ebx
  413910:	push   0xffffffb6
  413912:	adc    DWORD PTR ds:0x895c7d96,eax
  413918:	test   DWORD PTR [edi-0x30],eax
  41391b:	das    
  41391c:	inc    edi
  41391d:	push   edx
  41391e:	ja     0x4138d7
  413920:	and    esp,DWORD PTR [edi-0x7]
  413923:	inc    ebp
  413924:	iret   
  413925:	add    DWORD PTR [ecx-0xe],0xd2dfe8e
  41392c:	dec    ebx
  41392d:	imul   edx,DWORD PTR [edi-0x2],0x1dabace1
  413934:	push   ebp
  413935:	adc    BYTE PTR es:[edx],al
  413938:	das    
  413939:	fs push eax
  41393b:	inc    ecx
  41393c:	lea    edx,[edi]
  41393e:	adc    dh,BYTE PTR [edi+0x62c84a0c]
  413944:	test   ah,ch
  413946:	dec    ebx
  413947:	imul   esi,DWORD PTR [esi],0xb28b7d18
  41394d:	inc    esp
  41394e:	and    edi,DWORD PTR [edi+0x3cadb027]
  413954:	add    ax,0x5e3c
  413958:	xchg   edx,eax
  413959:	stc    
  41395a:	jnp    0x41398e
  41395c:	push   es
  41395d:	hlt    
  41395e:	adc    al,0x11
  413960:	inc    eax
  413961:	mov    ecx,0x23986996
  413966:	jo     0x4138f1
  413968:	repnz push ebp
  41396a:	outs   dx,DWORD PTR ds:[esi]
  41396b:	lods   al,BYTE PTR ds:[esi]
  41396c:	mov    BYTE PTR [ebp-0x43387c48],al
  413972:	and    eax,0x9c8bfd51
  413977:	outs   dx,DWORD PTR ds:[esi]
  413978:	neg    BYTE PTR [edi+0xd5d9ba0]
  41397e:	lods   al,BYTE PTR ds:[si]
  413980:	rol    BYTE PTR [edx],0xd2
  413983:	push   es
  413984:	lods   eax,DWORD PTR ds:[esi]
  413985:	xor    eax,0x3114506f
  41398a:	cwde   
  41398b:	cmp    al,0xb9
  41398d:	cmovge eax,esp
  413990:	ja     0x4139a2
  413992:	and    eax,0x91497582
  413997:	xlat   BYTE PTR ds:[ebx]
  413998:	sub    DWORD PTR [ebx-0x7a],ebp
  41399b:	and    bl,al
  41399d:	push   0xffffffdf
  41399f:	and    al,0x7e
  4139a1:	sub    eax,0xf2abebc7
  4139a6:	clc    
  4139a7:	lahf   
  4139a8:	mov    WORD PTR gs:[esi-0xef59697],cs
  4139af:	ds jne 0x4139ee
  4139b2:	mov    esi,0xdd2c2e41
  4139b7:	mov    dh,dh
  4139b9:	int3   
  4139ba:	int    0x11
  4139bc:	mov    ch,0xa2
  4139be:	js     0x4139f5
  4139c0:	or     ebx,DWORD PTR [eax+eiz*2]
  4139c3:	popa   
  4139c4:	fs mov eax,0xf6e14e70
  4139ca:	loop   0x413957
  4139cc:	jmp    0x4a202c7b
  4139d1:	leave  
  4139d2:	(bad)  
  4139d3:	jmp    0x52cfd89f
  4139d8:	shl    BYTE PTR [edi+0x1d],0x4b
  4139dc:	sub    bh,BYTE PTR [ecx]
  4139de:	push   ebx
  4139df:	fild   DWORD PTR [edx]
  4139e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139e2:	aad    0x11
  4139e4:	adc    BYTE PTR [ecx-0x44],dl
  4139e7:	push   ds
  4139e8:	(bad)  
  4139e9:	out    dx,al
  4139ea:	jnp    0x4139f3
  4139ec:	out    0x54,eax
  4139ee:	int    0x5e
  4139f0:	repnz cmp esi,DWORD PTR ds:0x9a2b697d
  4139f7:	lahf   
  4139f8:	push   ds
  4139f9:	push   cs
  4139fa:	and    DWORD PTR [edi+0x3f],edx
  4139fd:	sbb    eax,0x2efd643c
  413a02:	mov    esp,0x3661c9d3
  413a07:	jns    0x413a84
  413a09:	sub    al,ah
  413a0b:	and    bh,BYTE PTR [ecx+0x4]
  413a0e:	icebp  
  413a0f:	xor    ebp,esi
  413a11:	mov    bh,0xc9
  413a13:	je     0x413a0a
  413a15:	inc    edi
  413a16:	xor    ebx,esp
  413a18:	(bad)  
  413a19:	std    
  413a1a:	mov    gs,WORD PTR [esi+0x53]
  413a1d:	(bad)  
  413a1e:	scas   al,BYTE PTR es:[edi]
  413a1f:	fsub   st,st(4)
  413a21:	push   ds
  413a22:	push   edi
  413a23:	cmp    esi,edi
  413a25:	(bad)  
  413a26:	or     eax,0xe42b2057
  413a2b:	(bad)  
  413a2c:	daa    
  413a2d:	add    eax,0x8e991c45
  413a32:	call   0x79158230
  413a37:	mov    BYTE PTR [ebp+0x22f28ef5],al
  413a3d:	add    eax,0xdf7205a3
  413a42:	dec    ecx
  413a43:	pop    edi
  413a44:	lock std 
  413a46:	mov    edx,0xe88fdc80
  413a4b:	jne    0x413aa9
  413a4d:	ins    BYTE PTR es:[edi],dx
  413a4e:	and    bl,BYTE PTR [esi-0x3]
  413a51:	adc    bh,al
  413a53:	div    DWORD PTR [ebp+0x31]
  413a56:	xchg   ch,dl
  413a58:	mov    cl,0x30
  413a5a:	stos   BYTE PTR es:[edi],al
  413a5b:	lea    eax,[edx-0x6ca32976]
  413a61:	cdq    
  413a62:	loope  0x413a82
  413a64:	sbb    al,0x9b
  413a66:	xchg   DWORD PTR [esi],edi
  413a68:	into   
  413a69:	pop    esp
  413a6a:	mov    BYTE PTR [edi-0x67e4b2fb],0x2e
  413a71:	cmp    eax,0xe358828f
  413a76:	jg     0x413a37
  413a78:	or     BYTE PTR [edx+0x68],ah
  413a7b:	and    DWORD PTR [ebx],ecx
  413a7d:	inc    esi
  413a7e:	repz dec esi
  413a80:	mov    ebp,0x4330077f
  413a85:	mov    ds:0xf20c40b8,eax
  413a8a:	dec    edx
  413a8b:	ins    DWORD PTR es:[edi],dx
  413a8c:	fistp  DWORD PTR [ebx]
  413a8e:	es jnp 0x413a7d
  413a91:	addr16 lahf 
  413a93:	jp     0x413aee
  413a95:	add    ecx,DWORD PTR [ebp-0x6b]
  413a98:	push   edx
  413a99:	test   al,0x56
  413a9b:	addr16 fcmovne st,st(7)
  413a9e:	jg     0x413ab6
  413aa0:	adc    al,0xe6
  413aa2:	pop    ecx
  413aa3:	call   0x1754:0xd457b50e
  413aaa:	dec    edx
  413aab:	add    cl,BYTE PTR [edx]
  413aad:	shl    DWORD PTR [ebp+0x2b4e39f5],1
  413ab3:	mov    ds:0x82da2fd3,al
  413ab8:	adc    BYTE PTR [esi+0xd5f25b1],dh
  413abe:	and    al,BYTE PTR [ebx]
  413ac0:	mov    edx,0x1b5d4248
  413ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac6:	pushf  
  413ac7:	pop    edi
  413ac8:	cs and ebx,edi
  413acb:	fadd   DWORD PTR [esi-0x26]
  413ace:	mov    esp,0x38e484fe
  413ad3:	lahf   
  413ad4:	ins    DWORD PTR es:[edi],dx
  413ad5:	add    bl,BYTE PTR [edx+0x65]
  413ad8:	xor    ch,dl
  413ada:	pop    ds
  413adb:	out    dx,al
  413adc:	mov    esp,0x9a2cf6b4
  413ae1:	shl    DWORD PTR [edx],1
  413ae3:	jecxz  0x413a8a
  413ae5:	call   FWORD PTR [esi-0x34]
  413ae8:	ret    
  413ae9:	retf   0xcc5d
  413aec:	push   ebp
  413aed:	shl    BYTE PTR [ecx-0x608586dc],0x38
  413af4:	jbe    0x413a79
  413af6:	outs   dx,DWORD PTR ds:[esi]
  413af7:	pusha  
  413af8:	jns    0x413a95
  413afa:	xchg   esi,eax
  413afb:	adc    dl,BYTE PTR [eax]
  413afd:	adc    edi,DWORD PTR ss:[esi+esi*8+0x59adb06b]
  413b05:	mov    al,ds:0x3bc53a5b
  413b0a:	or     DWORD PTR [ecx-0x1d403520],edi
  413b10:	imul   esi,DWORD PTR [eax+0x589b1ead],0xe7976cd6
  413b1a:	sbb    al,0x2b
  413b1c:	xchg   edx,eax
  413b1d:	pop    esi
  413b1e:	xor    eax,0xfa8091c4
  413b23:	loope  0x413aa6
  413b25:	stc    
  413b26:	or     dh,dl
  413b28:	sbb    eax,0xb3fe7397
  413b2d:	into   
  413b2e:	imul   edx,esi,0x2f
  413b31:	enter  0xdb30,0xa1
  413b35:	pushf  
  413b36:	cdq    
  413b37:	ds push eax
  413b39:	pop    es
  413b3a:	(bad)  
  413b3b:	mov    dh,0xc1
  413b3d:	add    al,0x87
  413b3f:	scas   al,BYTE PTR es:[edi]
  413b40:	mov    eax,ebp
  413b42:	lahf   
  413b43:	in     al,dx
  413b44:	jo     0x413af9
  413b46:	push   edi
  413b47:	sub    ebp,DWORD PTR [esp+edi*4]
  413b4a:	stos   DWORD PTR es:[edi],eax
  413b4b:	icebp  
  413b4c:	aas    
  413b4d:	xchg   ebp,eax
  413b4e:	mov    ecx,0xe97c25b2
  413b53:	fsubr  QWORD PTR [ebx-0x3b]
  413b56:	cmp    DWORD PTR [esi-0x7],eax
  413b59:	aam    0x31
  413b5b:	dec    eax
  413b5c:	jg     0x413b3d
  413b5e:	or     ch,ch
  413b60:	leave  
  413b61:	mov    edx,0x44a53af2
  413b66:	pop    eax
  413b67:	pop    esp
  413b68:	xchg   edx,eax
  413b69:	lea    ebp,[ebx-0x1e]
  413b6c:	ror    cl,1
  413b6e:	xlat   BYTE PTR ds:[ebx]
  413b6f:	cmp    DWORD PTR [esi+eiz*1+0x78],ebp
  413b73:	ss cmp al,0xfb
  413b76:	sub    eax,edx
  413b78:	cmp    eax,0xc2009e19
  413b7d:	scas   al,BYTE PTR es:[edi]
  413b7e:	add    esi,esp
  413b80:	scas   eax,DWORD PTR es:[edi]
  413b81:	aam    0xec
  413b83:	pop    ebp
  413b84:	or     al,0xe
  413b86:	sub    eax,0x99895ce0
  413b8b:	cmp    eax,0x9c3896ac
  413b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b91:	xchg   BYTE PTR [edi],dh
  413b93:	es (bad) 
  413b95:	fs push eax
  413b97:	ss clc 
  413b99:	jne    0x413bf0
  413b9b:	dec    eax
  413b9c:	shl    DWORD PTR [edi+0x427f8bca],1
  413ba2:	sub    BYTE PTR [ebp+0x15],dl
  413ba5:	add    ch,dh
  413ba7:	int3   
  413ba8:	(bad)  
  413ba9:	dec    ebp
  413baa:	inc    ebx
  413bab:	inc    ebx
  413bac:	xchg   dl,al
  413bae:	out    dx,al
  413baf:	ret    0x49af
  413bb2:	out    0x9a,al
  413bb4:	ror    DWORD PTR [ecx-0x23c2bdca],cl
  413bba:	(bad)  
  413bbb:	sahf   
  413bbc:	pmaddwd mm2,QWORD PTR [ebx-0x7b286025]
  413bc3:	dec    esi
  413bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc5:	xor    al,0x84
  413bc7:	cmp    ecx,DWORD PTR [ecx+0x60]
  413bca:	js     0x413b56
  413bcc:	cld    
  413bcd:	das    
  413bce:	int    0x13
  413bd0:	(bad)  
  413bd1:	mov    cl,0xf
  413bd3:	bound  esi,QWORD PTR [edx]
  413bd5:	xchg   esp,eax
  413bd6:	sub    al,BYTE PTR [ecx]
  413bd8:	cdq    
  413bd9:	in     al,0x8b
  413bdb:	jae    0x413b94
  413bdd:	data16 mov BYTE PTR [ebp-0x74ce3513],dh
  413be4:	dec    ebp
  413be5:	clc    
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	xchg   ecx,eax
  413d45:	adc    BYTE PTR [eax+0x12cf9236],dh
  413d4b:	inc    ecx
  413d4c:	(bad)  
  413d4d:	mov    WORD PTR [edi],es
  413d4f:	sub    al,dl
  413d51:	int3   
  413d52:	add    DWORD PTR [eax],ecx
  413d54:	add    DWORD PTR [eax],eax
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
